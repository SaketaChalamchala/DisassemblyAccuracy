assume cs:_text

assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
align 10h
push	ebx
push	esi
push	edi
push	43h
call	PORT_Alloc_Util
push	43h		
mov	ebx, eax
push	0		
push	ebx		
mov	esi, 1
call	memset
add	esp, 10h
cmp	[esp+0Ch+arg_0], 0
jz	short loc_1000105C
lea	eax, [ebx-1]
mov	cl, [eax+1]
inc	eax
test	cl, cl
jnz	short loc_10001038
mov	ecx, ds:dword_100A1524
mov	[eax], ecx
mov	edx, ds:dword_100A1528
mov	[eax+4], edx
mov	cl, ds:byte_100A152C
mov	[eax+8], cl
xor	esi, esi
cmp	[esp+0Ch+arg_4], 0
jz	short loc_100010A9
test	esi, esi
jnz	short loc_10001082
lea	edi, [ebx-1]
lea	ebx, [ebx+0]
mov	al, [edi+1]
inc	edi
test	al, al
jnz	short loc_10001070
mov	dx, ds:word_100A1520
mov	[edi], dx
lea	eax, [ebx-1]
mov	cl, [eax+1]
inc	eax
test	cl, cl
jnz	short loc_10001085
mov	ecx, ds:dword_100A1514
mov	[eax], ecx
mov	edx, ds:dword_100A1518
mov	[eax+4], edx
mov	cl, ds:byte_100A151C
mov	[eax+8], cl
xor	esi, esi
cmp	[esp+0Ch+arg_8], 0
jz	short loc_100010EB
test	esi, esi
jnz	short loc_100010C9
lea	edi, [ebx-1]
mov	al, [edi+1]
inc	edi
test	al, al
jnz	short loc_100010B7
mov	dx, ds:word_100A1520
mov	[edi], dx
lea	eax, [ebx-1]
lea	esp, [esp+0]
mov	cl, [eax+1]
inc	eax
test	cl, cl
jnz	short loc_100010D0
mov	ecx, ds:dword_100A150C
mov	[eax], ecx
mov	edx, ds:dword_100A1510
mov	[eax+4], edx
xor	esi, esi
cmp	[esp+0Ch+arg_C], 0
jz	short loc_1000113A
test	esi, esi
jnz	short loc_10001111
lea	edi, [ebx-1]
lea	esp, [esp+0]
mov	al, [edi+1]
inc	edi
test	al, al
jnz	short loc_10001100
mov	ax, ds:word_100A1520
mov	[edi], ax
lea	eax, [ebx-1]
mov	cl, [eax+1]
inc	eax
test	cl, cl
jnz	short loc_10001114
mov	ecx, ds:dword_100A1500
mov	[eax], ecx
mov	edx, ds:dword_100A1504
mov	[eax+4], edx
mov	cx, ds:word_100A1508
mov	[eax+8], cx
xor	esi, esi
cmp	[esp+0Ch+arg_10], 0
jz	short loc_10001196
test	esi, esi
jnz	short loc_1000115A
lea	edi, [ebx-1]
mov	al, [edi+1]
inc	edi
test	al, al
jnz	short loc_10001148
mov	dx, ds:word_100A1520
mov	[edi], dx
lea	eax, [ebx-1]
lea	ecx, [ecx+0]
mov	cl, [eax+1]
inc	eax
test	cl, cl
jnz	short loc_10001160
mov	ecx, ds:dword_100A14EC
mov	[eax], ecx
mov	edx, ds:dword_100A14F0
mov	[eax+4], edx
mov	ecx, ds:dword_100A14F4
mov	[eax+8], ecx
mov	edx, ds:dword_100A14F8
mov	[eax+0Ch], edx
mov	cl, ds:byte_100A14FC
mov	[eax+10h], cl
xor	esi, esi
cmp	[esp+0Ch+arg_14], 0
jz	short loc_100011ED
test	esi, esi
jnz	short loc_100011B6
lea	edi, [ebx-1]
mov	al, [edi+1]
inc	edi
test	al, al
jnz	short loc_100011A4
mov	dx, ds:word_100A1520
mov	[edi], dx
lea	eax, [ebx-1]
lea	esp, [esp+0]
mov	cl, [eax+1]
inc	eax
test	cl, cl
jnz	short loc_100011C0
mov	ecx, ds:dword_100A14DC
mov	[eax], ecx
mov	edx, ds:dword_100A14E0
mov	[eax+4], edx
mov	ecx, ds:dword_100A14E4
mov	[eax+8], ecx
mov	dx, ds:word_100A14E8
mov	[eax+0Ch], dx
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
			
push	esi
push	edi
mov	edi, ds:PR_smprintf
push	offset byte_100A1623
call	edi 
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1000121B
pop	edi
pop	esi
retn
mov	eax, [esp+8+arg_0]
push	ebx
mov	ebx, ds:PR_smprintf_free
push	ebp
test	eax, eax
jz	short loc_1000123E
push	eax
push	esi
push	offset aSManufactureri 
call	edi 
push	esi
mov	ebp, eax
call	ebx 
add	esp, 10h
mov	esi, ebp
test	esi, esi
jz	loc_10001327
mov	eax, [esp+10h+arg_4]
test	eax, eax
jz	short loc_10001261
push	eax
push	esi
push	offset aSLibrarydescri 
call	edi 
push	esi
mov	ebp, eax
call	ebx 
add	esp, 10h
mov	esi, ebp
test	esi, esi
jz	loc_10001327
mov	eax, [esp+10h+arg_8]
test	eax, eax
jz	short loc_10001284
push	eax
push	esi
push	offset aSCryptotokende 
call	edi 
push	esi
mov	ebp, eax
call	ebx 
add	esp, 10h
mov	esi, ebp
test	esi, esi
jz	loc_10001327
mov	eax, [esp+10h+arg_C]
test	eax, eax
jz	short loc_100012A7
push	eax
push	esi
push	offset aSDbtokendescri 
call	edi 
push	esi
mov	ebp, eax
call	ebx 
add	esp, 10h
mov	esi, ebp
test	esi, esi
jz	short loc_10001327
mov	eax, [esp+10h+arg_10]
test	eax, eax
jz	short loc_100012C6
push	eax
push	esi
push	offset aSCryptoslotdes 
call	edi 
push	esi
mov	ebp, eax
call	ebx 
add	esp, 10h
mov	esi, ebp
test	esi, esi
jz	short loc_10001327
mov	eax, [esp+10h+arg_14]
test	eax, eax
jz	short loc_100012E5
push	eax
push	esi
push	offset aSDbslotdescrip 
call	edi 
push	esi
mov	ebp, eax
call	ebx 
add	esp, 10h
mov	esi, ebp
test	esi, esi
jz	short loc_10001327
mov	eax, [esp+10h+arg_18]
test	eax, eax
jz	short loc_10001304
push	eax
push	esi
push	offset aSFipsslotdescr 
call	edi 
push	esi
mov	ebp, eax
call	ebx 
add	esp, 10h
mov	esi, ebp
test	esi, esi
jz	short loc_10001327
mov	eax, [esp+10h+arg_1C]
test	eax, eax
jz	short loc_10001323
push	eax
push	esi
push	offset aSFipstokendesc 
call	edi 
push	esi
mov	ebp, eax
call	ebx 
add	esp, 10h
mov	esi, ebp
test	esi, esi
jnz	short loc_1000132E
			
pop	ebp
pop	ebx
pop	edi
xor	eax, eax
pop	esi
retn
mov	eax, [esp+10h+arg_20]
push	eax
push	esi
push	offset aSMinpsD	
call	edi 
push	esi
mov	edi, eax
call	ebx 
add	esp, 10h
pop	ebp
pop	ebx
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public PK11_ConfigurePKCS11
mov	eax, [esp+arg_20]
mov	ecx, [esp+arg_1C]
mov	edx, [esp+arg_18]
push	esi
mov	esi, [esp+4+arg_4]
push	edi
push	eax
mov	eax, [esp+0Ch+arg_14]
push	ecx
mov	ecx, [esp+10h+arg_10]
push	edx
mov	edx, [esp+14h+arg_C]
push	eax
mov	eax, [esp+18h+arg_8]
push	ecx
mov	ecx, [esp+1Ch+arg_0]
push	edx
push	eax
push	esi
push	ecx
call	sub_10001200
mov	edi, eax
add	esp, 24h
test	edi, edi
jz	short loc_100013D4
test	esi, esi
jz	short loc_100013B1
mov	eax, dword_100BAB5C
test	eax, eax
jz	short loc_100013A3
push	eax
call	PORT_Free_Util
add	esp, 4
push	esi
call	PORT_Strdup_Util
add	esp, 4
mov	dword_100BAB5C,	eax
mov	eax, dword_100BAB58
test	eax, eax
jz	short loc_100013C4
push	eax
call	ds:PR_smprintf_free
add	esp, 4
mov	edx, [esp+8+arg_24]
mov	dword_100BAB58,	edi
mov	dword_100BAB60,	edx
pop	edi
pop	esi
retn
align 10h
public PK11_UnconfigurePKCS11
mov	eax, dword_100BAB58
test	eax, eax
jz	short loc_100013FD
push	eax
call	ds:PR_smprintf_free
add	esp, 4
mov	dword_100BAB58,	0
mov	eax, dword_100BAB5C
test	eax, eax
jz	short locret_10001419
push	eax
call	PORT_Free_Util
add	esp, 4
mov	dword_100BAB5C,	0
retn
align 10h
push	ecx
mov	eax, [esp+4+Src]
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
lea	edx, [eax+1]
mov	edi, edi
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10001430
sub	eax, edx
mov	esi, eax
mov	eax, [esp+14h+Str]
test	eax, eax
jz	short loc_10001453
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10001446
sub	eax, edx
mov	ebx, eax
jmp	short loc_10001455
xor	ebx, ebx
mov	eax, off_100BA000
lea	edx, [eax+1]
lea	ecx, [ecx+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10001460
sub	eax, edx
add	eax, ebx
lea	eax, [eax+esi+2]
push	eax
mov	[esp+18h+var_4], eax
call	PORT_Alloc_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	loc_10001536
mov	eax, [esp+14h+Src]
push	esi		
push	eax		
push	edi		
call	memcpy
add	esp, 0Ch
cmp	byte ptr [edi+esi-1], 2Fh
jz	short loc_100014A1
mov	byte ptr [edi+esi], 2Fh
inc	esi
mov	eax, off_100BA000
lea	edx, [edi+esi]
sub	edx, eax
jmp	short loc_100014B0
align 10h
			
mov	cl, [eax]
mov	[edx+eax], cl
inc	eax
test	cl, cl
jnz	short loc_100014B0
test	ebx, ebx
jle	short loc_1000152A
mov	ebx, [esp+14h+Str]
push	2Fh		
push	ebx		
call	ds:strrchr
add	esp, 8
test	eax, eax
jz	short loc_1000152A
mov	ecx, [esp+14h+var_4]
sub	eax, ebx
push	ecx
lea	ebx, [eax+1]
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_100014F9
push	edi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
push	esi		
push	edi		
push	ebp		
call	memcpy
mov	edx, [esp+20h+Str]
push	ebx		
push	edx		
lea	eax, [esi+ebp]
push	eax		
call	memcpy
mov	eax, off_100BA000
lea	edx, [esi+ebx]
add	edx, ebp
add	esp, 18h
sub	edx, eax
nop
mov	cl, [eax]
mov	[edx+eax], cl
inc	eax
test	cl, cl
jnz	short loc_10001520
			
mov	ecx, [esp+14h+arg_8]
mov	edx, [esp+14h+arg_C]
mov	[ecx], ebp
mov	[edx], edi
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
			
sub	esp, 8
push	ebp
push	esi
push	edi
lea	eax, [esp+14h+var_4]
push	eax		
mov	eax, [esp+18h+Src]
lea	ecx, [esp+18h+var_8]
push	ecx		
push	edx		
push	eax		
mov	[esp+24h+var_4], 0
mov	[esp+24h+var_8], 0
xor	esi, esi
call	sub_10001420
mov	edi, [esp+24h+var_8]
add	esp, 10h
test	edi, edi
jz	short loc_1000158F
push	esi
push	esi
push	edi
push	offset aRootCerts 
call	SECMOD_AddNewModule
add	esp, 10h
call	SECMOD_HasRootCerts
mov	esi, eax
mov	ebp, [esp+14h+var_4]
test	ebp, ebp
jz	short loc_100015B4
test	esi, esi
jnz	short loc_100015AB
push	esi
push	esi
push	ebp
push	offset aRootCerts 
call	SECMOD_AddNewModule
add	esp, 10h
push	ebp
call	PORT_Free_Util
add	esp, 4
test	edi, edi
jz	short loc_100015C1
push	edi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
add	esp, 8
retn
align 10h
			
sub	esp, 20h
push	ebx
push	ebp
push	esi
xor	esi, esi
push	edi
mov	[esp+30h+var_4], 0FFFFFFFFh
mov	[esp+30h+var_8], esi
xor	edi, edi
xor	ebx, ebx
xor	ebp, ebp
mov	[esp+30h+var_20], esi
mov	[esp+30h+var_1C], esi
mov	[esp+30h+var_18], esi
mov	[esp+30h+var_14], esi
call	NSS_InitializePRErrorTable
test	eax, eax
jz	short loc_1000161C
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 20h
retn
mov	eax, [esp+30h+arg_40]
mov	ecx, [esp+30h+arg_2C]
mov	edx, [esp+30h+arg_3C]
push	eax
mov	eax, [esp+34h+arg_38]
push	ecx
mov	ecx, [esp+38h+arg_34]
push	edx
mov	edx, [esp+3Ch+arg_30]
push	eax
push	ecx
push	edx
call	sub_10001010
add	esp, 18h
mov	[esp+30h+var_10], eax
test	eax, eax
jz	short loc_10001611
mov	eax, [esp+30h+arg_0]
push	22h
push	27h
push	eax
call	NSSUTIL_DoubleEscape
add	esp, 0Ch
mov	[esp+30h+var_C], eax
test	eax, eax
jz	loc_100017A1
mov	ecx, [esp+30h+arg_4]
push	22h
push	27h
push	ecx
call	NSSUTIL_DoubleEscape
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	loc_100017A1
mov	edx, [esp+30h+arg_8]
push	22h
push	27h
push	edx
call	NSSUTIL_DoubleEscape
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	loc_100017A1
mov	eax, [esp+30h+arg_C]
push	22h
push	27h
push	eax
call	NSSUTIL_DoubleEscape
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	loc_100017A1
mov	ecx, [esp+30h+arg_10]
push	22h
push	27h
push	ecx
call	NSSUTIL_DoubleEscape
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	loc_100017A1
mov	edx, [esp+30h+arg_14]
push	22h
push	27h
push	edx
call	NSSUTIL_DoubleEscape
add	esp, 0Ch
mov	[esp+30h+var_20], eax
test	eax, eax
jz	loc_100017A1
mov	eax, [esp+30h+arg_18]
push	22h
push	27h
push	eax
call	NSSUTIL_DoubleEscape
add	esp, 0Ch
mov	[esp+30h+var_1C], eax
test	eax, eax
jz	loc_100017A1
mov	ecx, [esp+30h+arg_1C]
push	22h
push	27h
push	ecx
call	NSSUTIL_DoubleEscape
add	esp, 0Ch
mov	[esp+30h+var_18], eax
test	eax, eax
jz	short loc_100017A1
mov	edx, [esp+30h+arg_20]
push	22h
push	27h
push	edx
call	NSSUTIL_DoubleEscape
add	esp, 0Ch
mov	[esp+30h+var_14], eax
test	eax, eax
jz	short loc_100017A1
cmp	[esp+30h+arg_44], 0
mov	eax, offset byte_100A1623
jnz	short loc_10001750
mov	eax, offset aDefaultmoddbIn 
mov	edx, [esp+30h+arg_28]
test	edx, edx
jnz	short loc_1000175D
mov	edx, offset byte_100A1623
mov	ecx, [esp+30h+arg_24]
test	ecx, ecx
jnz	short loc_1000176A
mov	ecx, offset aNssInternalMod 
push	eax
mov	eax, [esp+34h+var_14]
push	edx
mov	edx, [esp+38h+var_18]
push	eax
mov	eax, [esp+3Ch+var_1C]
push	edx
mov	edx, [esp+40h+var_20]
push	eax
mov	eax, [esp+44h+var_10]
push	edx
mov	edx, [esp+48h+var_C]
push	ebp
push	eax
push	ebx
push	edi
push	esi
push	edx
push	ecx
push	offset aNameSParameter 
call	ds:PR_smprintf
add	esp, 38h
mov	[esp+30h+var_8], eax
			
mov	eax, [esp+30h+var_10]
push	eax
call	PORT_Free_Util
mov	eax, [esp+34h+var_C]
add	esp, 4
test	eax, eax
jz	short loc_100017BF
push	eax
call	PORT_Free_Util
add	esp, 4
test	esi, esi
jz	short loc_100017CC
push	esi
call	PORT_Free_Util
add	esp, 4
test	edi, edi
jz	short loc_100017D9
push	edi
call	PORT_Free_Util
add	esp, 4
test	ebx, ebx
jz	short loc_100017E6
push	ebx
call	PORT_Free_Util
add	esp, 4
test	ebp, ebp
jz	short loc_100017F3
push	ebp
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+30h+var_20]
test	eax, eax
jz	short loc_10001804
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+30h+var_1C]
test	eax, eax
jz	short loc_10001815
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+30h+var_18]
test	eax, eax
jz	short loc_10001826
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+30h+var_14]
test	eax, eax
jz	short loc_10001837
push	eax
call	PORT_Free_Util
add	esp, 4
mov	esi, [esp+30h+var_8]
test	esi, esi
jz	short loc_10001870
push	1
push	0
push	esi
call	SECMOD_LoadModule
push	esi
mov	edi, eax
call	ds:PR_smprintf_free
add	esp, 10h
test	edi, edi
jz	short loc_10001870
cmp	dword ptr [edi+8], 0
jz	short loc_10001867
mov	[esp+30h+var_4], 0
push	edi
call	SECMOD_DestroyModule
add	esp, 4
			
mov	eax, [esp+30h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 20h
retn
align 10h
			
call	ds:PR_NewLock
mov	dword_100BAB40,	eax
test	eax, eax
jnz	short loc_10001893
or	eax, 0FFFFFFFFh
retn
push	eax
call	ds:PR_NewCondVar
mov	dword_100BAB54,	eax
add	esp, 4
neg	eax
sbb	eax, eax
neg	eax
dec	eax
retn
align 10h
			
mov	edx, dword_100BAB78
xor	eax, eax
test	edx, edx
jle	short loc_100018D2
mov	ecx, dword_100BAB7C
cmp	[ecx+eax*8], edi
jnz	short loc_100018CD
cmp	[ecx+eax*8+4], esi
jz	short locret_100018D5
inc	eax
cmp	eax, edx
jl	short loc_100018C2
or	eax, 0FFFFFFFFh
retn
align 10h
			
cmp	dword_100BAB70,	0
jnz	short loc_1000193C
call	ds:PR_NewLock
mov	dword_100BAB70,	eax
test	eax, eax
jz	short loc_10001924
push	50h
call	PORT_ZAlloc_Util
add	esp, 4
mov	dword_100BAB7C,	eax
test	eax, eax
jnz	short loc_10001928
mov	eax, dword_100BAB70
push	eax
call	ds:PR_DestroyLock
add	esp, 4
mov	dword_100BAB70,	0
or	eax, 0FFFFFFFFh
retn
mov	dword_100BAB74,	0Ah
mov	dword_100BAB78,	0
xor	eax, eax
retn
align 10h
push	ebx
push	esi
push	edi
xor	ebx, ebx
xor	edi, edi
xor	esi, esi
cmp	dword_100BAB78,	ebx
jle	short loc_10001979
mov	ecx, dword_100BAB7C
mov	eax, [ecx+esi*8]
cmp	eax, ebx
jz	short loc_10001970
mov	ecx, [ecx+esi*8+4]
push	ebx
push	ecx
call	eax
add	esp, 8
test	eax, eax
jz	short loc_10001970
or	edi, 0FFFFFFFFh
			
inc	esi
cmp	esi, dword_100BAB78
jl	short loc_10001951
mov	edx, dword_100BAB7C
push	edx
mov	dword_100BAB78,	ebx
mov	dword_100BAB74,	ebx
call	PORT_Free_Util
mov	eax, dword_100BAB70
add	esp, 4
mov	dword_100BAB7C,	ebx
cmp	eax, ebx
jz	short loc_100019AD
push	eax
call	ds:PR_DestroyLock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
mov	dword_100BAB70,	ebx
pop	ebx
retn
align 10h
			
push	ebx
push	esi
push	edi
xor	ebx, ebx
xor	edi, edi
call	sub_10001940
test	eax, eax
jz	short loc_100019D3
or	edi, 0FFFFFFFFh
call	sub_1003D940
call	sub_10040530
call	sub_10005110
mov	eax, dword_100BAB6C
push	eax
call	sub_1006A7D0
call	SECOID_Shutdown
call	sub_1004ABD0
mov	esi, eax
call	sub_1003DD10
push	ebx
call	sub_100362D0
add	esp, 8
call	sub_100396F0
test	eax, eax
jz	short loc_10001A13
or	edi, 0FFFFFFFFh
call	sub_10030A90
call	__PBE_GenerateBits
cmp	esi, 0FFFFFFFFh
jnz	short loc_10001A3F
call	sub_10050A60
cmp	eax, ds:dword_100A7E68
jnz	short loc_10001A3C
push	0FFFFE08Bh
call	PORT_SetError_Util
add	esp, 4
or	edi, 0FFFFFFFFh
call	sub_10050AD0
mov	eax, dword_100BAB68
mov	dword_100BAB64,	ebx
mov	dword_100BAB68,	ebx
cmp	eax, ebx
jz	short loc_10001A74
lea	esp, [esp+0]
mov	esi, [eax]
push	eax
mov	[eax+4], ebx
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
cmp	esi, ebx
jnz	short loc_10001A60
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
public NSS_Shutdown
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jnz	short loc_10001AC9
mov	eax, dword_100BAB40
push	eax
call	ds:PR_Lock
add	esp, 4
cmp	dword_100BAB64,	0
jnz	short loc_10001ACD
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Unlock
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
retn
cmp	dword_100BAB44,	0
push	esi
jz	short loc_10001AF7
mov	esi, ds:PR_WaitCondVar
lea	ecx, [ecx+0]
mov	edx, dword_100BAB54
push	0FFFFFFFFh
push	edx
call	esi 
add	esp, 8
cmp	dword_100BAB44,	0
jnz	short loc_10001AE0
call	sub_100019C0
mov	esi, eax
mov	eax, dword_100BAB40
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
mov	eax, dword_100BAB68
mov	ecx, offset dword_100BAB68
test	eax, eax
jz	short loc_10001B3E
mov	edx, [esp+arg_0]
cmp	eax, edx
jz	short loc_10001B41
mov	ecx, eax
mov	eax, [eax]
test	eax, eax
jnz	short loc_10001B32
xor	eax, eax
retn
mov	edx, [eax]
mov	[ecx], edx
push	eax
mov	dword ptr [eax+4], 0
call	PORT_Free_Util
add	esp, 4
mov	eax, 1
retn
align 10h
public NSS_ShutdownContext
push	edi
push	offset loc_10001880
push	offset dword_100BAB48
xor	edi, edi
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jnz	short loc_10001BE1
mov	eax, dword_100BAB40
push	eax
call	ds:PR_Lock
add	esp, 4
cmp	dword_100BAB44,	edi
jz	short loc_10001BB7
push	esi
mov	esi, ds:PR_WaitCondVar
jmp	short loc_10001BA0
align 10h
			
mov	ecx, dword_100BAB54
push	0FFFFFFFFh
push	ecx
call	esi 
add	esp, 8
cmp	dword_100BAB44,	edi
jnz	short loc_10001BA0
pop	esi
mov	eax, [esp+4+arg_0]
cmp	eax, edi
jnz	short loc_10001BEE
cmp	dword_100BAB64,	edi
jnz	short loc_10001BE6
mov	edx, dword_100BAB40
push	edx
call	ds:PR_Unlock
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
pop	edi
retn
mov	dword_100BAB64,	edi
jmp	short loc_10001C0B
push	eax
call	sub_10001B20
add	esp, 4
test	eax, eax
jnz	short loc_10001C03
mov	eax, dword_100BAB40
push	eax
jmp	short loc_10001BCE
cmp	dword_100BAB64,	edi
jnz	short loc_10001C1A
cmp	dword_100BAB68,	edi
jnz	short loc_10001C1A
call	sub_100019C0
mov	edi, eax
			
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
retn
align 10h
public NSS_IsInitialized
			
cmp	dword_100BAB64,	0
jnz	short loc_10001C45
cmp	dword_100BAB68,	0
jnz	short loc_10001C45
xor	eax, eax
retn
			
mov	eax, 1
retn
align 10h
public NSS_VersionCheck
sub	esp, 8
movsx	eax, ds:byte_100A17EC
movsx	ecx, ds:byte_100A17B4
push	ebx
push	ebp
push	esi
mov	esi, [esp+14h+arg_0]
movsx	edx, byte ptr [esi]
push	edi
mov	edi, ds:isdigit
xor	ebx, ebx
add	eax, ecx
push	edx		
mov	[esp+1Ch+var_8], ebx
xor	ebp, ebp
mov	[esp+1Ch+var_4], ebx
mov	byte ptr [esp+1Ch+arg_0], al
call	edi 
add	esp, 4
test	eax, eax
jz	short loc_10001CB1
mov	edi, edi
movsx	ecx, byte ptr [esi]
mov	eax, [esp+18h+var_8]
lea	eax, [eax+eax*4]
lea	edx, [ecx+eax*2-30h]
movsx	eax, byte ptr [esi+1]
inc	esi
push	eax
mov	[esp+1Ch+var_8], edx
call	edi
add	esp, 4
test	eax, eax
jnz	short loc_10001C90
cmp	byte ptr [esi],	2Eh
jnz	loc_10001D51
movsx	ecx, byte ptr [esi+1]
inc	esi
push	ecx		
call	edi 
add	esp, 4
test	eax, eax
jz	short loc_10001CE9
lea	esp, [esp+0]
movsx	eax, byte ptr [esi]
movsx	ecx, byte ptr [esi+1]
inc	esi
lea	edx, [ebx+ebx*4]
push	ecx		
lea	ebx, [eax+edx*2-30h]
call	edi 
add	esp, 4
test	eax, eax
jnz	short loc_10001CD0
cmp	byte ptr [esi],	2Eh
jnz	short loc_10001D51
movsx	edx, byte ptr [esi+1]
inc	esi
push	edx		
call	edi 
add	esp, 4
test	eax, eax
jz	short loc_10001D1A
lea	ecx, [ecx+0]
movsx	ecx, byte ptr [esi]
movsx	edx, byte ptr [esi+1]
inc	esi
lea	eax, [ebp+ebp*4+0]
push	edx		
lea	ebp, [ecx+eax*2-30h]
call	edi 
add	esp, 4
test	eax, eax
jnz	short loc_10001D00
cmp	byte ptr [esi],	2Eh
jnz	short loc_10001D51
movsx	eax, byte ptr [esi+1]
inc	esi
push	eax		
call	edi 
add	esp, 4
test	eax, eax
jz	short loc_10001D51
mov	edi, edi
mov	eax, [esp+18h+var_4]
movsx	edx, byte ptr [esi]
lea	ecx, [eax+eax*4]
lea	eax, [edx+ecx*2-30h]
movsx	ecx, byte ptr [esi+1]
inc	esi
push	ecx
mov	[esp+1Ch+var_4], eax
call	edi
add	esp, 4
test	eax, eax
jnz	short loc_10001D30
			
cmp	[esp+18h+var_8], 3
jz	short loc_10001D62
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
cmp	ebx, 11h
jg	short loc_10001D58
jnz	short loc_10001D77
cmp	ebp, 1
jg	short loc_10001D58
jnz	short loc_10001D77
cmp	[esp+18h+var_4], 0
jg	short loc_10001D58
			
pop	edi
pop	esi
pop	ebp
mov	eax, 1
pop	ebx
add	esp, 8
retn
align 10h
public NSS_GetVersion
mov	eax, offset a3_17_1BasicEcc 
retn
align 10h
sub	esp, 0Ch
push	ebp
mov	ebp, [esp+10h+arg_24]
push	esi
xor	esi, esi
push	edi
xor	edi, edi
mov	[esp+18h+var_4], esi
mov	[esp+18h+var_8], esi
cmp	ebx, esi
jnz	short loc_10001DC6
cmp	dword_100BAB64,	esi
jnz	loc_100021AE
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jnz	loc_10002110
mov	eax, dword_100BAB40
push	eax
call	ds:PR_Lock
add	esp, 4
cmp	dword_100BAB64,	esi
jnz	loc_10001EDD
cmp	dword_100BAB68,	esi
jnz	loc_10001EDD
mov	[esp+18h+var_C], esi
lea	esp, [esp+0]
cmp	dword_100BAB44,	esi
jz	short loc_10001E37
mov	ecx, dword_100BAB54
push	0FFFFFFFFh
push	ecx
call	ds:PR_WaitCondVar
add	esp, 8
call	NSS_IsInitialized
mov	[esp+18h+var_C], eax
test	eax, eax
jz	short loc_10001E10
			
mov	edx, dword_100BAB40
inc	dword_100BAB44
push	edx
call	ds:PR_Unlock
add	esp, 4
cmp	[esp+18h+var_C], esi
jnz	short loc_10001E7A
call	sub_1003D8E0
test	eax, eax
jnz	loc_100020B6
call	sub_1003F8B0
test	eax, eax
jnz	loc_100020B6
call	sub_10005070
test	eax, eax
jnz	loc_100020B6
mov	eax, [esp+18h+arg_40]
test	eax, eax
jnz	short loc_10001E8E
cmp	[esp+18h+arg_44], esi
jnz	short loc_10001E8E
cmp	[esp+18h+arg_48], esi
jz	short loc_10001EA1
			
mov	ecx, [esp+18h+arg_48]
mov	edx, [esp+18h+arg_44]
push	ecx
push	edx
push	eax
call	sub_10024450
add	esp, 0Ch
test	ebx, ebx
jz	loc_10001F38
push	8
call	PORT_ZAlloc_Util
add	esp, 4
mov	[ebx], eax
test	eax, eax
jz	loc_100020B6
test	ebp, ebp
jz	loc_10001F4D
cmp	dword ptr [ebp+0], 2Ch
jnb	short loc_10001EEA
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_100020B6
			
mov	[esp+18h+var_C], 1
jmp	loc_10001E37
mov	eax, [ebp+8]
mov	ecx, [ebp+1Ch]
mov	edx, [ebp+28h]
push	eax
mov	eax, [ebp+24h]
push	ecx
mov	ecx, [ebp+20h]
push	edx
mov	edx, [ebp+18h]
push	eax
mov	eax, [ebp+14h]
push	ecx
mov	ecx, [ebp+10h]
push	edx
mov	edx, [ebp+0Ch]
push	eax
push	ecx
push	edx
call	sub_10001200
add	esp, 24h
mov	[esp+18h+var_8], eax
test	eax, eax
jnz	short loc_10001F30
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_100020B6
mov	esi, [ebp+10h]
mov	edi, [ebp+4]
jmp	short loc_10001F4D
mov	eax, dword_100BAB58
mov	esi, dword_100BAB5C
mov	edi, dword_100BAB60
mov	[esp+18h+var_8], eax
			
cmp	[esp+18h+var_C], 0
mov	ebp, [esp+18h+arg_2C]
jz	short loc_10001F63
test	ebp, ebp
jz	short loc_10001F63
cmp	[esp+18h+arg_30], 0
jnz	short loc_10001FC6
			
mov	edx, [esp+18h+arg_3C]
mov	eax, [esp+18h+arg_34]
xor	ecx, ecx
test	ebx, ebx
setnz	cl
push	ecx
mov	ecx, [esp+1Ch+arg_30]
push	edx
mov	edx, [esp+20h+arg_28]
push	eax
mov	eax, [esp+24h+var_8]
push	ecx
mov	ecx, [esp+28h+arg_20]
push	ebp
push	edx
mov	edx, [esp+30h+arg_1C]
push	edi
push	eax
mov	eax, [esp+38h+arg_18]
push	esi
mov	esi, [esp+3Ch+Str1]
push	ecx
mov	ecx, [esp+40h+arg_14]
push	edx
mov	edx, [esp+44h+arg_10]
push	eax
mov	eax, [esp+48h+arg_C]
push	ecx
mov	ecx, [esp+4Ch+arg_8]
push	edx
mov	edx, [esp+50h+arg_4]
push	eax
push	ecx
push	edx
push	esi
call	sub_100015D0
add	esp, 48h
test	eax, eax
jnz	loc_100020B6
jmp	short loc_10001FCA
mov	esi, [esp+18h+Str1]
cmp	[esp+18h+var_C], 0
jnz	loc_1000213B
call	SECOID_Init
test	eax, eax
jnz	loc_100020B6
call	sub_1004A920
test	eax, eax
jnz	loc_100020B6
call	sub_100018E0
test	eax, eax
jnz	loc_100020B6
call	sub_1004A850
push	eax
call	sub_1003C170
add	esp, 4
cmp	[esp+18h+arg_30], 0
jnz	short loc_1000208E
test	ebp, ebp
jnz	short loc_1000208E
cmp	[esp+18h+arg_38], ebp
jnz	short loc_1000208E
call	SECMOD_HasRootCerts
test	eax, eax
jnz	short loc_1000208E
mov	edi, ds:strncmp
push	4		
push	offset Str2	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002040
add	esi, 4
jmp	short loc_1000207D
push	4		
push	offset aDbm	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002056
add	esi, 4
jmp	short loc_1000207D
push	7		
push	offset aExtern	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000206C
add	esi, 7
jmp	short loc_1000207D
push	4		
push	offset aRdb	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jz	short loc_1000208E
			
test	esi, esi
jz	short loc_1000208E
mov	edx, [esp+18h+arg_C]
push	esi
call	sub_10001540
add	esp, 4
			
call	sub_10030A80
call	sub_1003E480
push	offset dword_100BAB6C
lea	eax, [esp+1Ch+var_4]
push	eax
push	3
push	3
push	0
push	0
call	sub_1006A540
add	esp, 18h
test	eax, eax
jz	short loc_1000211A
			
test	ebx, ebx
jz	short loc_100020E1
mov	eax, [ebx]
test	eax, eax
jz	short loc_100020E1
push	eax
call	PORT_Free_Util
mov	eax, [esp+1Ch+var_8]
add	esp, 4
mov	dword ptr [ebx], 0
test	eax, eax
jz	short loc_100020E1
push	eax
call	ds:PR_smprintf_free
add	esp, 4
			
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Lock
mov	edx, dword_100BAB54
dec	dword_100BAB44
push	edx
call	ds:PR_NotifyCondVar
mov	eax, dword_100BAB40
push	eax
call	ds:PR_Unlock
add	esp, 0Ch
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 0Ch
retn
push	offset VarName	
call	ds:getenv
add	esp, 4
test	eax, eax
jz	short loc_1000213B
cmp	byte ptr [eax],	0
jz	short loc_1000213B
push	1
call	CERT_SetUsePKIXForValidation
add	esp, 4
			
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Lock
add	esp, 4
test	ebx, ebx
jnz	short loc_1000215B
mov	dword_100BAB64,	1
jmp	short loc_10002176
mov	edx, [ebx]
mov	dword ptr [edx+4], 1413A91Ch
mov	eax, [ebx]
mov	ecx, dword_100BAB68
mov	[eax], ecx
mov	edx, [ebx]
mov	dword_100BAB68,	edx
mov	eax, dword_100BAB54
dec	dword_100BAB44
push	eax
call	ds:PR_NotifyAllCondVar
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Unlock
add	esp, 8
test	ebx, ebx
jz	short loc_100021AE
mov	eax, [esp+18h+var_8]
test	eax, eax
jz	short loc_100021AE
push	eax
call	ds:PR_smprintf_free
add	esp, 4
			
pop	edi
pop	esi
xor	eax, eax
pop	ebp
add	esp, 0Ch
retn
align 10h
public NSS_Init
push	ecx
push	edi
xor	edi, edi
mov	[esp+8+var_4], edi
cmp	dword_100BAB64,	edi
jz	short loc_100021D5
xor	eax, eax
pop	edi
pop	ecx
retn
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jz	short loc_100021F2
or	eax, 0FFFFFFFFh
pop	edi
pop	ecx
retn
mov	eax, dword_100BAB40
push	ebp
mov	ebp, ds:PR_Lock
push	esi
push	eax
call	ebp 
add	esp, 4
cmp	dword_100BAB64,	edi
jnz	short loc_10002215
cmp	dword_100BAB68,	edi
jz	short loc_1000221C
mov	edi, 1
jmp	short loc_10002244
mov	esi, ds:PR_WaitCondVar
cmp	dword_100BAB44,	0
jz	short loc_10002244
mov	ecx, dword_100BAB54
push	0FFFFFFFFh
push	ecx
call	esi 
add	esp, 8
call	NSS_IsInitialized
mov	edi, eax
test	edi, edi
jz	short loc_10002222
mov	edx, dword_100BAB40
inc	dword_100BAB44
push	ebx
mov	ebx, ds:PR_Unlock
push	edx
call	ebx 
add	esp, 4
test	edi, edi
jnz	short loc_10002288
call	sub_1003D8E0
test	eax, eax
jnz	loc_100023BE
call	sub_1003F8B0
test	eax, eax
jnz	loc_100023BE
call	sub_10005070
test	eax, eax
jnz	loc_100023BE
mov	eax, dword_100BAB60
mov	ecx, dword_100BAB58
mov	edx, dword_100BAB5C
push	0
push	1
push	0
push	0
push	0
push	1
mov	esi, [esp+2Ch+Str1]
push	eax
push	ecx
push	edx
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset aSecmod_db 
push	offset byte_100A1623
push	offset byte_100A1623
push	esi
call	sub_100015D0
add	esp, 48h
test	eax, eax
jnz	loc_100023BE
test	edi, edi
jnz	loc_1000240F
call	SECOID_Init
test	eax, eax
jnz	loc_100023BE
call	sub_1004A920
test	eax, eax
jnz	loc_100023BE
call	sub_100018E0
test	eax, eax
jnz	loc_100023BE
call	sub_1004A850
push	eax
call	sub_1003C170
add	esp, 4
call	SECMOD_HasRootCerts
test	eax, eax
jnz	short loc_10002396
mov	edi, ds:strncmp
push	4		
push	offset Str2	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002347
add	esi, 4
jmp	short loc_10002384
push	4		
push	offset aDbm	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000235D
add	esi, 4
jmp	short loc_10002384
push	7		
push	offset aExtern	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002373
add	esi, 7
jmp	short loc_10002384
push	4		
push	offset aRdb	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jz	short loc_10002396
			
test	esi, esi
jz	short loc_10002396
push	esi
mov	edx, offset aSecmod_db 
call	sub_10001540
add	esp, 4
			
call	sub_10030A80
call	sub_1003E480
push	offset dword_100BAB6C
lea	eax, [esp+18h+var_4]
push	eax
push	3
push	3
push	0
push	0
call	sub_1006A540
add	esp, 18h
test	eax, eax
jz	short loc_100023EE
mov	ecx, dword_100BAB40
push	ecx
call	ebp 
mov	edx, dword_100BAB54
dec	dword_100BAB44
push	edx
call	ds:PR_NotifyCondVar
mov	eax, dword_100BAB40
push	eax
call	ebx 
add	esp, 0Ch
pop	ebx
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	edi
pop	ecx
retn
push	offset VarName	
call	ds:getenv
add	esp, 4
test	eax, eax
jz	short loc_1000240F
cmp	byte ptr [eax],	0
jz	short loc_1000240F
push	1
call	CERT_SetUsePKIXForValidation
add	esp, 4
			
mov	ecx, dword_100BAB40
push	ecx
call	ebp 
mov	edx, dword_100BAB54
mov	eax, 1
sub	dword_100BAB44,	eax
push	edx
mov	dword_100BAB64,	eax
call	ds:PR_NotifyAllCondVar
mov	eax, dword_100BAB40
push	eax
call	ebx 
add	esp, 0Ch
pop	ebx
pop	esi
pop	ebp
xor	eax, eax
pop	edi
pop	ecx
retn
align 10h
public NSS_InitReadWrite
push	ecx
push	edi
xor	edi, edi
mov	[esp+8+var_4], edi
cmp	dword_100BAB64,	edi
jz	short loc_10002465
xor	eax, eax
pop	edi
pop	ecx
retn
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jz	short loc_10002482
or	eax, 0FFFFFFFFh
pop	edi
pop	ecx
retn
mov	eax, dword_100BAB40
push	ebp
mov	ebp, ds:PR_Lock
push	esi
push	eax
call	ebp 
add	esp, 4
cmp	dword_100BAB64,	edi
jnz	short loc_100024A5
cmp	dword_100BAB68,	edi
jz	short loc_100024AC
mov	edi, 1
jmp	short loc_100024D4
mov	esi, ds:PR_WaitCondVar
cmp	dword_100BAB44,	0
jz	short loc_100024D4
mov	ecx, dword_100BAB54
push	0FFFFFFFFh
push	ecx
call	esi 
add	esp, 8
call	NSS_IsInitialized
mov	edi, eax
test	edi, edi
jz	short loc_100024B2
			
mov	edx, dword_100BAB40
inc	dword_100BAB44
push	ebx
mov	ebx, ds:PR_Unlock
push	edx
call	ebx 
add	esp, 4
test	edi, edi
jnz	short loc_10002518
call	sub_1003D8E0
test	eax, eax
jnz	loc_1000264E
call	sub_1003F8B0
test	eax, eax
jnz	loc_1000264E
call	sub_10005070
test	eax, eax
jnz	loc_1000264E
mov	eax, dword_100BAB60
mov	ecx, dword_100BAB58
mov	edx, dword_100BAB5C
push	0
push	1
push	0
push	0
push	0
push	0
mov	esi, [esp+2Ch+Str1]
push	eax
push	ecx
push	edx
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset aSecmod_db 
push	offset byte_100A1623
push	offset byte_100A1623
push	esi
call	sub_100015D0
add	esp, 48h
test	eax, eax
jnz	loc_1000264E
test	edi, edi
jnz	loc_1000269F
call	SECOID_Init
test	eax, eax
jnz	loc_1000264E
call	sub_1004A920
test	eax, eax
jnz	loc_1000264E
call	sub_100018E0
test	eax, eax
jnz	loc_1000264E
call	sub_1004A850
push	eax
call	sub_1003C170
add	esp, 4
call	SECMOD_HasRootCerts
test	eax, eax
jnz	short loc_10002626
mov	edi, ds:strncmp
push	4		
push	offset Str2	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_100025D7
add	esi, 4
jmp	short loc_10002614
push	4		
push	offset aDbm	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_100025ED
add	esi, 4
jmp	short loc_10002614
push	7		
push	offset aExtern	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002603
add	esi, 7
jmp	short loc_10002614
push	4		
push	offset aRdb	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jz	short loc_10002626
			
test	esi, esi
jz	short loc_10002626
push	esi
mov	edx, offset aSecmod_db 
call	sub_10001540
add	esp, 4
			
call	sub_10030A80
call	sub_1003E480
push	offset dword_100BAB6C
lea	eax, [esp+18h+var_4]
push	eax
push	3
push	3
push	0
push	0
call	sub_1006A540
add	esp, 18h
test	eax, eax
jz	short loc_1000267E
			
mov	ecx, dword_100BAB40
push	ecx
call	ebp 
mov	edx, dword_100BAB54
dec	dword_100BAB44
push	edx
call	ds:PR_NotifyCondVar
mov	eax, dword_100BAB40
push	eax
call	ebx 
add	esp, 0Ch
pop	ebx
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	edi
pop	ecx
retn
push	offset VarName	
call	ds:getenv
add	esp, 4
test	eax, eax
jz	short loc_1000269F
cmp	byte ptr [eax],	0
jz	short loc_1000269F
push	1
call	CERT_SetUsePKIXForValidation
add	esp, 4
			
mov	ecx, dword_100BAB40
push	ecx
call	ebp 
mov	edx, dword_100BAB54
mov	eax, 1
sub	dword_100BAB44,	eax
push	edx
mov	dword_100BAB64,	eax
call	ds:PR_NotifyAllCondVar
mov	eax, dword_100BAB40
push	eax
call	ebx 
add	esp, 0Ch
pop	ebx
pop	esi
pop	ebp
xor	eax, eax
pop	edi
pop	ecx
retn
align 10h
public NSS_Initialize
sub	esp, 10h
push	ebx
push	ebp
push	edi
xor	ecx, ecx
mov	ebx, [esp+1Ch+arg_10]
mov	eax, ebx
and	eax, 100h
cmp	eax, 100h
setz	cl
xor	eax, eax
mov	edx, ebx
and	dl, 80h
cmp	dl, 80h
setz	al
xor	edx, edx
mov	[esp+1Ch+var_10], ecx
mov	ecx, ebx
and	cl, 40h
cmp	cl, 40h
setz	dl
mov	[esp+1Ch+var_C], eax
mov	eax, ebx
and	al, 4
xor	ecx, ecx
cmp	al, 4
setz	cl
mov	[esp+1Ch+var_8], edx
mov	edx, ebx
xor	eax, eax
and	dl, 2
cmp	dl, 2
setz	al
xor	edi, edi
mov	ebp, ecx
mov	[esp+1Ch+var_4], edi
mov	[esp+1Ch+arg_10], eax
cmp	dword_100BAB64,	edi
jz	short loc_10002756
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jz	short loc_10002777
pop	edi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
mov	ecx, dword_100BAB40
push	esi
push	ecx
call	ds:PR_Lock
add	esp, 4
cmp	dword_100BAB64,	edi
jnz	short loc_10002798
cmp	dword_100BAB68,	edi
jz	short loc_1000279F
mov	edi, 1
jmp	short loc_100027C7
mov	esi, ds:PR_WaitCondVar
cmp	dword_100BAB44,	0
jz	short loc_100027C7
mov	edx, dword_100BAB54
push	0FFFFFFFFh
push	edx
call	esi 
add	esp, 8
call	NSS_IsInitialized
mov	edi, eax
test	edi, edi
jz	short loc_100027A5
			
mov	eax, dword_100BAB40
inc	dword_100BAB44
push	eax
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jnz	short loc_10002807
call	sub_1003D8E0
test	eax, eax
jnz	loc_100029A5
call	sub_1003F8B0
test	eax, eax
jnz	loc_100029A5
call	sub_10005070
test	eax, eax
jnz	loc_100029A5
mov	eax, [esp+20h+var_8]
test	eax, eax
jnz	short loc_1000281B
cmp	[esp+20h+var_C], eax
jnz	short loc_1000281B
cmp	[esp+20h+var_10], eax
jz	short loc_1000282E
			
mov	ecx, [esp+20h+var_10]
mov	edx, [esp+20h+var_C]
push	ecx
push	edx
push	eax
call	sub_10024450
add	esp, 0Ch
mov	esi, [esp+20h+Str1]
test	edi, edi
jz	short loc_10002841
cmp	[esp+20h+arg_10], 0
jz	short loc_10002841
test	ebp, ebp
jnz	short loc_100028BE
			
xor	ecx, ecx
push	0
mov	eax, ebx
and	al, 20h
cmp	al, 20h
setz	cl
xor	eax, eax
mov	edx, ebx
and	dl, 8
cmp	dl, 8
setz	al
mov	edx, ebx
push	ecx
mov	ecx, [esp+28h+arg_10]
and	dl, 1
push	eax
push	ebp
push	ecx
mov	ecx, dword_100BAB60
xor	eax, eax
cmp	dl, 1
mov	edx, dword_100BAB58
setz	al
push	eax
mov	eax, dword_100BAB5C
push	ecx
mov	ecx, [esp+3Ch+arg_C]
push	edx
mov	edx, [esp+40h+arg_8]
push	eax
mov	eax, [esp+44h+arg_4]
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	ecx
push	edx
push	eax
push	esi
call	sub_100015D0
add	esp, 48h
test	eax, eax
jnz	loc_100029A5
test	edi, edi
jnz	loc_10002A00
call	SECOID_Init
test	eax, eax
jnz	loc_100029A5
call	sub_1004A920
test	eax, eax
jnz	loc_100029A5
call	sub_100018E0
test	eax, eax
jnz	loc_100029A5
call	sub_1004A850
push	eax
call	sub_1003C170
add	esp, 4
test	ebp, ebp
jnz	short loc_1000297D
cmp	[esp+20h+arg_10], ebp
jnz	short loc_1000297D
test	bl, 10h
jnz	short loc_1000297D
call	SECMOD_HasRootCerts
test	eax, eax
jnz	short loc_1000297D
mov	edi, ds:strncmp
push	4		
push	offset Str2	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000292F
add	esi, 4
jmp	short loc_1000296C
push	4		
push	offset aDbm	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002945
add	esi, 4
jmp	short loc_1000296C
push	7		
push	offset aExtern	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000295B
add	esi, 7
jmp	short loc_1000296C
push	4		
push	offset aRdb	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jz	short loc_1000297D
			
test	esi, esi
jz	short loc_1000297D
mov	edx, [esp+20h+arg_C]
push	esi
call	sub_10001540
add	esp, 4
			
call	sub_10030A80
call	sub_1003E480
push	offset dword_100BAB6C
lea	ecx, [esp+24h+var_4]
push	ecx
push	3
push	3
push	0
push	0
call	sub_1006A540
add	esp, 18h
test	eax, eax
jz	short loc_100029DF
			
mov	edx, dword_100BAB40
push	edx
call	ds:PR_Lock
mov	eax, dword_100BAB54
dec	dword_100BAB44
push	eax
call	ds:PR_NotifyCondVar
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Unlock
add	esp, 0Ch
pop	esi
pop	edi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
push	offset VarName	
call	ds:getenv
add	esp, 4
test	eax, eax
jz	short loc_10002A00
cmp	byte ptr [eax],	0
jz	short loc_10002A00
push	1
call	CERT_SetUsePKIXForValidation
add	esp, 4
			
mov	edx, dword_100BAB40
push	edx
call	ds:PR_Lock
mov	eax, 1
sub	dword_100BAB44,	eax
mov	dword_100BAB64,	eax
mov	eax, dword_100BAB54
push	eax
call	ds:PR_NotifyAllCondVar
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Unlock
add	esp, 0Ch
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 10h
public NSS_InitContext
mov	eax, [esp+arg_14]
xor	edx, edx
push	ebx
mov	ecx, eax
and	ecx, 100h
cmp	ecx, 100h
setz	dl
mov	ecx, eax
and	cl, 80h
lea	ebx, [esp+4+arg_14]
push	edx		
xor	edx, edx
cmp	cl, 80h
setz	dl
mov	ecx, eax
and	cl, 40h
push	edx		
xor	edx, edx
cmp	cl, 40h
setz	dl
mov	ecx, eax
and	cl, 20h
push	edx		
xor	edx, edx
cmp	cl, 20h
setz	dl
mov	ecx, eax
and	cl, 8
push	edx		
xor	edx, edx
cmp	cl, 8
setz	dl
push	1		
mov	ecx, eax
and	cl, 4
push	edx		
xor	edx, edx
cmp	cl, 4
setz	dl
mov	ecx, eax
and	cl, 2
push	edx		
xor	edx, edx
cmp	cl, 2
setz	dl
and	al, 1
xor	ecx, ecx
cmp	al, 1
mov	eax, [esp+20h+arg_C]
setz	cl
push	edx		
mov	edx, [esp+24h+arg_10]
push	ecx		
mov	ecx, [esp+28h+arg_8]
push	edx		
mov	edx, [esp+2Ch+arg_4]
push	offset byte_100A1623 
push	offset byte_100A1623 
push	offset byte_100A1623 
push	offset byte_100A1623 
push	offset byte_100A1623 
push	eax		
mov	eax, [esp+44h+Str1]
push	ecx		
push	edx		
push	eax		
call	sub_10001DA0
add	esp, 4Ch
neg	eax
sbb	eax, eax
not	eax
and	eax, [esp+4+arg_14]
pop	ebx
retn
align 10h
public NSS_InitWithMerge
sub	esp, 10h
push	ebx
push	ebp
push	edi
xor	ecx, ecx
mov	ebx, [esp+1Ch+arg_24]
mov	eax, ebx
and	eax, 100h
cmp	eax, 100h
setz	cl
xor	eax, eax
mov	edx, ebx
and	dl, 80h
cmp	dl, 80h
setz	al
xor	edx, edx
mov	[esp+1Ch+var_10], ecx
mov	ecx, ebx
and	cl, 40h
cmp	cl, 40h
setz	dl
mov	[esp+1Ch+var_C], eax
mov	eax, ebx
and	al, 4
xor	ecx, ecx
cmp	al, 4
setz	cl
mov	[esp+1Ch+var_8], edx
mov	edx, ebx
xor	eax, eax
and	dl, 2
cmp	dl, 2
setz	al
xor	edi, edi
mov	ebp, ecx
mov	[esp+1Ch+var_4], edi
mov	[esp+1Ch+arg_24], eax
cmp	dword_100BAB64,	edi
jz	short loc_10002B96
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jz	short loc_10002BB7
pop	edi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
mov	ecx, dword_100BAB40
push	esi
push	ecx
call	ds:PR_Lock
add	esp, 4
cmp	dword_100BAB64,	edi
jnz	short loc_10002BD8
cmp	dword_100BAB68,	edi
jz	short loc_10002BDF
mov	edi, 1
jmp	short loc_10002C07
mov	esi, ds:PR_WaitCondVar
cmp	dword_100BAB44,	0
jz	short loc_10002C07
mov	edx, dword_100BAB54
push	0FFFFFFFFh
push	edx
call	esi 
add	esp, 8
call	NSS_IsInitialized
mov	edi, eax
test	edi, edi
jz	short loc_10002BE5
			
mov	eax, dword_100BAB40
inc	dword_100BAB44
push	eax
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jnz	short loc_10002C47
call	sub_1003D8E0
test	eax, eax
jnz	loc_10002DE5
call	sub_1003F8B0
test	eax, eax
jnz	loc_10002DE5
call	sub_10005070
test	eax, eax
jnz	loc_10002DE5
mov	eax, [esp+20h+var_8]
test	eax, eax
jnz	short loc_10002C5B
cmp	[esp+20h+var_C], eax
jnz	short loc_10002C5B
cmp	[esp+20h+var_10], eax
jz	short loc_10002C6E
			
mov	ecx, [esp+20h+var_10]
mov	edx, [esp+20h+var_C]
push	ecx
push	edx
push	eax
call	sub_10024450
add	esp, 0Ch
mov	esi, [esp+20h+Str1]
test	edi, edi
jz	short loc_10002C81
cmp	[esp+20h+arg_24], 0
jz	short loc_10002C81
test	ebp, ebp
jnz	short loc_10002CFE
			
xor	ecx, ecx
push	0
mov	eax, ebx
and	al, 20h
cmp	al, 20h
setz	cl
xor	eax, eax
mov	edx, ebx
and	dl, 8
cmp	dl, 8
setz	al
mov	edx, ebx
push	ecx
mov	ecx, [esp+28h+arg_24]
and	dl, 1
push	eax
push	ebp
push	ecx
mov	ecx, dword_100BAB60
xor	eax, eax
cmp	dl, 1
mov	edx, dword_100BAB58
setz	al
push	eax
mov	eax, dword_100BAB5C
push	ecx
mov	ecx, [esp+3Ch+arg_20]
push	edx
mov	edx, [esp+40h+arg_1C]
push	eax
mov	eax, [esp+44h+arg_18]
push	ecx
mov	ecx, [esp+48h+arg_14]
push	edx
mov	edx, [esp+4Ch+arg_10]
push	eax
mov	eax, [esp+50h+arg_C]
push	ecx
mov	ecx, [esp+54h+arg_8]
push	edx
mov	edx, [esp+58h+arg_4]
push	eax
push	ecx
push	edx
push	esi
call	sub_100015D0
add	esp, 48h
test	eax, eax
jnz	loc_10002DE5
test	edi, edi
jnz	loc_10002E40
call	SECOID_Init
test	eax, eax
jnz	loc_10002DE5
call	sub_1004A920
test	eax, eax
jnz	loc_10002DE5
call	sub_100018E0
test	eax, eax
jnz	loc_10002DE5
call	sub_1004A850
push	eax
call	sub_1003C170
add	esp, 4
test	ebp, ebp
jnz	short loc_10002DBD
cmp	[esp+20h+arg_24], ebp
jnz	short loc_10002DBD
test	bl, 10h
jnz	short loc_10002DBD
call	SECMOD_HasRootCerts
test	eax, eax
jnz	short loc_10002DBD
mov	edi, ds:strncmp
push	4		
push	offset Str2	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002D6F
add	esi, 4
jmp	short loc_10002DAC
push	4		
push	offset aDbm	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002D85
add	esi, 4
jmp	short loc_10002DAC
push	7		
push	offset aExtern	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_10002D9B
add	esi, 7
jmp	short loc_10002DAC
push	4		
push	offset aRdb	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jz	short loc_10002DBD
			
test	esi, esi
jz	short loc_10002DBD
mov	edx, [esp+20h+arg_C]
push	esi
call	sub_10001540
add	esp, 4
			
call	sub_10030A80
call	sub_1003E480
push	offset dword_100BAB6C
lea	eax, [esp+24h+var_4]
push	eax
push	3
push	3
push	0
push	0
call	sub_1006A540
add	esp, 18h
test	eax, eax
jz	short loc_10002E1F
			
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Lock
mov	edx, dword_100BAB54
dec	dword_100BAB44
push	edx
call	ds:PR_NotifyCondVar
mov	eax, dword_100BAB40
push	eax
call	ds:PR_Unlock
add	esp, 0Ch
pop	esi
pop	edi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
push	offset VarName	
call	ds:getenv
add	esp, 4
test	eax, eax
jz	short loc_10002E40
cmp	byte ptr [eax],	0
jz	short loc_10002E40
push	1
call	CERT_SetUsePKIXForValidation
add	esp, 4
			
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Lock
mov	edx, dword_100BAB54
mov	eax, 1
sub	dword_100BAB44,	eax
push	edx
mov	dword_100BAB64,	eax
call	ds:PR_NotifyAllCondVar
mov	eax, dword_100BAB40
push	eax
call	ds:PR_Unlock
add	esp, 0Ch
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 10h
public NSS_NoDB_Init
push	ecx
cmp	dword_100BAB64,	0
mov	[esp+4+var_4], 0
jz	short loc_10002EA5
xor	eax, eax
pop	ecx
retn
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jz	short loc_10002EC1
or	eax, 0FFFFFFFFh
pop	ecx
retn
mov	eax, dword_100BAB40
push	ebx
mov	ebx, ds:PR_Lock
push	ebp
push	esi
push	edi
push	eax
call	ebx 
add	esp, 4
cmp	dword_100BAB64,	0
mov	ebp, 1
jnz	loc_10003038
cmp	dword_100BAB68,	0
jnz	loc_10003038
mov	edi, ds:PR_WaitCondVar
xor	esi, esi
lea	ecx, [ecx+0]
cmp	dword_100BAB44,	0
jz	short loc_10002F22
mov	ecx, dword_100BAB54
push	0FFFFFFFFh
push	ecx
call	edi 
add	esp, 8
call	NSS_IsInitialized
mov	esi, eax
test	esi, esi
jz	short loc_10002F00
			
mov	edx, dword_100BAB40
mov	edi, ds:PR_Unlock
add	dword_100BAB44,	ebp
push	edx
call	edi 
add	esp, 4
test	esi, esi
jnz	loc_1000305F
call	sub_1003D8E0
test	eax, eax
jnz	loc_10003008
call	sub_1003F8B0
test	eax, eax
jnz	loc_10003008
call	sub_10005070
test	eax, eax
jnz	loc_10003008
mov	ecx, dword_100BAB58
mov	edx, dword_100BAB5C
push	eax
mov	eax, dword_100BAB60
push	ebp
push	ebp
push	ebp
push	ebp
push	ebp
push	eax
push	ecx
push	edx
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
push	offset byte_100A1623
call	sub_100015D0
add	esp, 48h
test	eax, eax
jnz	short loc_10003008
call	SECOID_Init
test	eax, eax
jnz	short loc_10003008
call	sub_1004A920
test	eax, eax
jnz	short loc_10003008
call	sub_100018E0
test	eax, eax
jnz	short loc_10003008
call	sub_1004A850
push	eax
call	sub_1003C170
call	sub_10030A80
call	sub_1003E480
push	offset dword_100BAB6C
lea	eax, [esp+1Ch+var_4]
push	eax
push	3
push	3
push	esi
push	esi
call	sub_1006A540
add	esp, 1Ch
test	eax, eax
jz	short loc_1000303F
			
mov	ecx, dword_100BAB40
push	ecx
call	ebx 
mov	edx, dword_100BAB54
sub	dword_100BAB44,	ebp
push	edx
call	ds:PR_NotifyCondVar
mov	eax, dword_100BAB40
push	eax
call	edi 
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
			
mov	esi, ebp
jmp	loc_10002F22
push	offset VarName	
call	ds:getenv
add	esp, 4
test	eax, eax
jz	short loc_1000305F
cmp	byte ptr [eax],	0
jz	short loc_1000305F
push	ebp
call	CERT_SetUsePKIXForValidation
add	esp, 4
			
mov	ecx, dword_100BAB40
push	ecx
call	ebx 
mov	edx, dword_100BAB54
sub	dword_100BAB44,	ebp
push	edx
mov	dword_100BAB64,	ebp
call	ds:PR_NotifyAllCondVar
mov	eax, dword_100BAB40
push	eax
call	edi 
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
public NSS_RegisterShutdown
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jz	short loc_100030BB
or	eax, 0FFFFFFFFh
retn
mov	eax, dword_100BAB40
push	esi
mov	esi, ds:PR_Lock
push	eax
call	esi 
add	esp, 4
cmp	dword_100BAB64,	0
jnz	short loc_100030FE
cmp	dword_100BAB68,	0
jnz	short loc_100030FE
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Unlock
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
pop	esi
retn
			
mov	edx, dword_100BAB40
push	ebx
push	ebp
mov	ebp, ds:PR_Unlock
push	edx
call	ebp 
mov	ebx, [esp+10h+arg_0]
add	esp, 4
test	ebx, ebx
jnz	short loc_1000312E
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, dword_100BAB70
push	edi
push	eax
call	esi 
mov	esi, [esp+14h+arg_4]
add	esp, 4
mov	edi, ebx
call	sub_100018B0
test	eax, eax
js	short loc_10003167
mov	ecx, dword_100BAB70
push	ecx
call	ebp 
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	ebp
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
retn
xor	esi, esi
xor	edi, edi
call	sub_100018B0
test	eax, eax
js	short loc_10003197
mov	ecx, dword_100BAB7C
mov	edx, [esp+10h+arg_4]
mov	[ecx+eax*8], ebx
mov	[ecx+eax*8+4], edx
mov	eax, dword_100BAB70
push	eax
call	ebp 
add	esp, 4
pop	edi
pop	ebp
pop	ebx
xor	eax, eax
pop	esi
retn
mov	ecx, dword_100BAB74
mov	eax, dword_100BAB78
cmp	ecx, eax
jnz	short loc_100031EA
mov	edx, dword_100BAB7C
lea	ecx, ds:50h[ecx*8]
push	ecx
push	edx
call	PORT_Realloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_100031D4
mov	eax, dword_100BAB70
push	eax
call	ebp 
add	esp, 4
pop	edi
pop	ebp
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
retn
add	dword_100BAB74,	0Ah
mov	ecx, eax
mov	eax, dword_100BAB78
mov	dword_100BAB7C,	ecx
jmp	short loc_100031F0
mov	ecx, dword_100BAB7C
mov	edx, [esp+10h+arg_4]
mov	[ecx+eax*8], ebx
mov	[ecx+eax*8+4], edx
inc	eax
mov	dword_100BAB78,	eax
mov	eax, dword_100BAB70
push	eax
call	ebp 
add	esp, 4
pop	edi
pop	ebp
pop	ebx
xor	eax, eax
pop	esi
retn
align 10h
public NSS_UnregisterShutdown
push	offset loc_10001880
push	offset dword_100BAB48
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jz	short loc_1000323B
or	eax, 0FFFFFFFFh
retn
mov	eax, dword_100BAB40
push	esi
mov	esi, ds:PR_Lock
push	eax
call	esi 
add	esp, 4
cmp	dword_100BAB64,	0
jnz	short loc_1000327E
cmp	dword_100BAB68,	0
jnz	short loc_1000327E
mov	ecx, dword_100BAB40
push	ecx
call	ds:PR_Unlock
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
pop	esi
retn
			
mov	edx, dword_100BAB40
push	ebx
mov	ebx, ds:PR_Unlock
push	edi
push	edx
call	ebx 
mov	eax, dword_100BAB70
push	eax
call	esi 
mov	edx, dword_100BAB78
add	esp, 8
xor	eax, eax
test	edx, edx
jle	short loc_100032C4
mov	esi, [esp+0Ch+arg_4]
mov	edi, [esp+0Ch+arg_0]
mov	ecx, dword_100BAB7C
cmp	[ecx+eax*8], edi
jnz	short loc_100032BF
cmp	[ecx+eax*8+4], esi
jz	short loc_100032C9
inc	eax
cmp	eax, edx
jl	short loc_100032B4
or	esi, 0FFFFFFFFh
jmp	short loc_100032DE
mov	esi, eax
test	eax, eax
js	short loc_100032DE
mov	dword ptr [ecx+eax*8], 0
mov	dword ptr [ecx+eax*8+4], 0
			
mov	ecx, dword_100BAB70
push	ecx
call	ebx 
add	esp, 4
pop	edi
pop	ebx
test	esi, esi
jns	short loc_10003302
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
xor	eax, eax
pop	esi
retn
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
public DER_TimeToUTCTime
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	eax
push	ecx
push	edx
call	DER_TimeToUTCTime_Util
add	esp, 0Ch
retn
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
public DER_TimeToGeneralizedTime
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	eax
push	ecx
push	edx
call	DER_TimeToGeneralizedTime_Util
add	esp, 0Ch
retn
align 10h
public DER_TimeToGeneralizedTimeArena
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_4]
push	eax
mov	eax, [esp+4+arg_0]
push	ecx
push	edx
push	eax
call	DER_TimeToGeneralizedTimeArena_Util
add	esp, 10h
retn
align 10h
align 10h
public CERT_GenTime2FormattedAscii
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	eax
push	ecx
push	edx
call	CERT_GenTime2FormattedAscii_Util
add	esp, 0Ch
retn
align 10h
align 10h
public DER_EncodeTimeChoice
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_4]
push	eax
mov	eax, [esp+4+arg_0]
push	ecx
push	edx
push	eax
call	DER_EncodeTimeChoice_Util
add	esp, 10h
retn
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
align 10h
public __nss_InitLock
push	0FFFFE898h	
			
			
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
public NSS_Get_SECOID_AlgorithmIDTemplate
mov	eax, offset dword_100A1820
retn
align 10h
public NSS_Get_SEC_AnyTemplate
mov	eax, offset dword_100A1860
retn
align 10h
public NSS_Get_SEC_BMPStringTemplate
mov	eax, offset dword_100A1870
retn
align 10h
public NSS_Get_SEC_BitStringTemplate
mov	eax, offset dword_100A1880
retn
align 10h
public NSS_Get_SEC_BooleanTemplate
mov	eax, offset dword_100A1890
retn
align 10h
public NSS_Get_SEC_GeneralizedTimeTemplate
mov	eax, offset dword_100A18A0
retn
align 10h
public NSS_Get_SEC_IA5StringTemplate
mov	eax, offset dword_100A18B0
retn
align 10h
public NSS_Get_SEC_IntegerTemplate
mov	eax, offset dword_100A18C0
retn
align 10h
public NSS_Get_SEC_NullTemplate
mov	eax, offset dword_100A18D0
retn
align 10h
public NSS_Get_SEC_ObjectIDTemplate
mov	eax, offset dword_100A18E0
retn
align 10h
public NSS_Get_SEC_OctetStringTemplate
mov	eax, offset dword_100A18F0
retn
align 10h
public NSS_Get_SEC_PointerToAnyTemplate
mov	eax, offset dword_100A1900
retn
align 10h
public NSS_Get_SEC_PointerToOctetStringTemplate
mov	eax, offset dword_100A1910
retn
align 10h
public NSS_Get_SEC_SetOfAnyTemplate
mov	eax, offset dword_100A1920
retn
align 10h
public NSS_Get_SEC_UTCTimeTemplate
mov	eax, offset dword_100A1930
retn
align 10h
public NSS_Get_SEC_UTF8StringTemplate
mov	eax, offset dword_100A1940
retn
align 10h
public NSS_Get_sgn_DigestInfoTemplate
mov	eax, offset dword_100A1950
retn
align 10h
public CERT_Hexify
			
push	edi
mov	edi, [esp+4+arg_0]
mov	eax, [edi+8]
test	eax, eax
jnz	short loc_10003B2B
push	offset a00	
call	PORT_Strdup_Util
add	esp, 4
pop	edi
retn
lea	eax, [eax+eax*2]
push	eax
call	PORT_Alloc_Util
add	esp, 4
mov	[esp+4+arg_0], eax
test	eax, eax
jnz	short loc_10003B41
pop	edi
retn
push	ebp
mov	ebp, [edi+8]
push	esi
mov	esi, [edi+4]
add	ebp, esi
cmp	esi, ebp
jnb	short loc_10003B8E
mov	edx, [esp+0Ch+arg_4]
mov	edi, off_100BA004
push	ebx
lea	ebx, [ebx+0]
mov	cl, [esi]
movzx	ecx, cl
mov	ebx, ecx
shr	ebx, 4
mov	bl, [ebx+edi]
mov	[eax], bl
and	ecx, 0Fh
movzx	ecx, byte ptr [ecx+edi]
inc	esi
mov	[eax+1], cl
add	eax, 2
cmp	esi, ebp
jz	short loc_10003B8D
test	edx, edx
jz	short loc_10003B89
mov	byte ptr [eax],	3Ah
inc	eax
cmp	esi, ebp
jb	short loc_10003B60
pop	ebx
pop	esi
pop	ebp
mov	byte ptr [eax],	0
mov	eax, [esp+4+arg_0]
pop	edi
retn
align 10h
public CERT_FormatName
sub	esp, 0C8h
mov	eax, [esp+0C8h+arg_0]
push	ebx
push	ebp
mov	ebp, [eax+4]
mov	eax, [ebp+0]
push	esi
xor	esi, esi
push	edi
xor	ebx, ebx
xor	edi, edi
mov	[esp+0D8h+var_A4], esi
mov	[esp+0D8h+var_B0], ebx
mov	[esp+0D8h+var_B8], esi
mov	[esp+0D8h+var_C0], esi
mov	[esp+0D8h+var_A8], esi
mov	[esp+0D8h+var_BC], esi
mov	[esp+0D8h+var_B4], esi
mov	[esp+0D8h+var_AC], esi
mov	[esp+0D8h+var_C8], esi
mov	[esp+0D8h+var_C4], esi
cmp	eax, esi
jz	loc_10003E77
lea	ecx, [ecx+0]
mov	ebx, [eax]
mov	esi, [ebx]
add	ebp, 4
test	esi, esi
jz	loc_10003E66
nop
push	esi
add	ebx, 4
call	CERT_GetAVATag
add	eax, 0FFFFFFE1h
add	esp, 4
cmp	eax, 44h	
ja	loc_10003E5C	
movzx	ecx, ds:byte_1000406C[eax]
jmp	ds:off_10004044[ecx*4] 
			
cmp	[esp+0D8h+var_B0], 0 
jnz	loc_10003E5C	
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
add	esp, 4
mov	[esp+0D8h+var_B0], eax
test	eax, eax
jnz	loc_10003E59
mov	ebp, [esp+0D8h+var_A4]
xor	esi, esi
			
mov	eax, [esp+0D8h+var_B8]
cmp	eax, esi
jz	short loc_10003C62
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	esi, [esp+0D8h+var_C8]
dec	esi
js	short loc_10003C82
lea	esp, [esp+0]
mov	eax, [esp+esi*4+0D8h+var_A0]
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
dec	esi
jns	short loc_10003C70
mov	eax, [esp+0D8h+var_AC]
test	eax, eax
jz	short loc_10003C95
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esp+0D8h+var_C0]
test	eax, eax
jz	short loc_10003CA8
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	esi, [esp+0D8h+var_C4]
dec	esi
js	short loc_10003CC5
nop
mov	ecx, [esp+esi*4+0D8h+var_50]
push	1
push	ecx
call	SECITEM_FreeItem_Util
add	esp, 8
dec	esi
jns	short loc_10003CB0
mov	eax, [esp+0D8h+var_A8]
test	eax, eax
jz	short loc_10003CD8
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esp+0D8h+var_BC]
test	eax, eax
jz	short loc_10003CEB
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esp+0D8h+var_B4]
test	eax, eax
jz	short loc_10003CFE
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 0C8h
retn
			
cmp	[esp+0D8h+var_B4], 0 
jnz	loc_10003E5C	
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
add	esp, 4
mov	[esp+0D8h+var_B4], eax
test	eax, eax
jz	loc_10004022
mov	edx, eax
add	edi, [edx+8]
jmp	loc_10003E5C	
			
cmp	[esp+0D8h+var_A8], 0 
jnz	loc_10003E5C	
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
add	esp, 4
mov	[esp+0D8h+var_A8], eax
test	eax, eax
jz	loc_10004022
jmp	loc_10003E59
			
cmp	[esp+0D8h+var_BC], 0 
jnz	loc_10003E5C	
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
add	esp, 4
mov	[esp+0D8h+var_BC], eax
test	eax, eax
jz	loc_10004022
mov	ecx, eax
add	edi, [ecx+8]
jmp	loc_10003E5C	
			
cmp	[esp+0D8h+var_C0], 0 
jnz	loc_10003E5C	
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
add	esp, 4
mov	[esp+0D8h+var_C0], eax
test	eax, eax
jz	loc_10004022
mov	edx, eax
add	edi, [edx+8]
jmp	loc_10003E5C	
			
cmp	[esp+0D8h+var_AC], 0 
jnz	loc_10003E5C	
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
add	esp, 4
mov	[esp+0D8h+var_AC], eax
test	eax, eax
jz	loc_10004022
jmp	short loc_10003E59
			
cmp	[esp+0D8h+var_C8], 14h 
jge	short loc_10003E5C 
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
mov	ecx, [esp+0DCh+var_C8]
add	esp, 4
mov	[esp+ecx*4+0D8h+var_A0], eax
test	eax, eax
jz	loc_10004022
add	edi, [eax+8]
inc	[esp+0D8h+var_C8]
jmp	short loc_10003E5C 
			
cmp	[esp+0D8h+var_C4], 14h 
jge	short loc_10003E5C 
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
mov	edx, [esp+0DCh+var_C4]
add	esp, 4
mov	[esp+edx*4+0D8h+var_50], eax
test	eax, eax
jz	loc_10004022
add	edi, [eax+8]
inc	[esp+0D8h+var_C4]
jmp	short loc_10003E5C 
			
cmp	[esp+0D8h+var_B8], 0 
jnz	short loc_10003E5C 
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
add	esp, 4
mov	[esp+0D8h+var_B8], eax
test	eax, eax
jz	loc_10004022
			
add	edi, [eax+8]
			
mov	esi, [ebx]	
test	esi, esi
jnz	loc_10003C00
mov	eax, [ebp+0]
test	eax, eax
jnz	loc_10003BF0
mov	ebx, [esp+0D8h+var_B0]
xor	esi, esi
sub	edi, 0FFFFFF80h
push	edi
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
cmp	ebp, esi
jz	loc_1000402C
mov	esi, ebp
test	ebx, ebx
jz	short loc_10003EB2
mov	ecx, [ebx+8]
mov	edx, [ebx+4]
push	ecx		
push	edx		
push	ebp		
call	memcpy
mov	esi, [ebx+8]
add	esi, ebp
add	esp, 0Ch
mov	dword ptr [esi], 3E72623Ch
add	esi, 4
mov	edi, [esp+0D8h+var_B8]
test	edi, edi
jz	short loc_10003ED7
mov	eax, [edi+8]
mov	ecx, [edi+4]
push	eax		
push	ecx		
push	esi		
call	memcpy
add	esi, [edi+8]
add	esp, 0Ch
mov	dword ptr [esi], 3E72623Ch
add	esi, 4
mov	ebx, [esp+0D8h+var_C8]
dec	ebx
js	short loc_10003F04
mov	edi, edi
mov	edi, [esp+ebx*4+0D8h+var_A0]
mov	edx, [edi+8]
mov	eax, [edi+4]
push	edx		
push	eax		
push	esi		
call	memcpy
add	esi, [edi+8]
add	esp, 0Ch
mov	dword ptr [esi], 3E72623Ch
add	esi, 4
dec	ebx
jns	short loc_10003EE0
mov	edi, [esp+0D8h+var_AC]
test	edi, edi
jz	short loc_10003F29
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ecx		
push	edx		
push	esi		
call	memcpy
add	esi, [edi+8]
add	esp, 0Ch
mov	dword ptr [esi], 3E72623Ch
add	esi, 4
mov	edi, [esp+0D8h+var_C0]
test	edi, edi
jz	short loc_10003F4E
mov	eax, [edi+8]
mov	ecx, [edi+4]
push	eax		
push	ecx		
push	esi		
call	memcpy
add	esi, [edi+8]
add	esp, 0Ch
mov	dword ptr [esi], 3E72623Ch
add	esi, 4
mov	ebx, [esp+0D8h+var_C4]
dec	ebx
js	short loc_10003F87
jmp	short loc_10003F60
align 10h
			
mov	edi, [esp+ebx*4+0D8h+var_50]
mov	edx, [edi+8]
mov	eax, [edi+4]
push	edx		
push	eax		
push	esi		
call	memcpy
add	esi, [edi+8]
add	esp, 0Ch
mov	dword ptr [esi], 3E72623Ch
add	esi, 4
dec	ebx
jns	short loc_10003F60
mov	edi, [esp+0D8h+var_A8]
mov	eax, 1
test	edi, edi
jz	short loc_10003FAA
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ecx		
push	edx		
push	esi		
call	memcpy
add	esi, [edi+8]
add	esp, 0Ch
xor	eax, eax
mov	edi, [esp+0D8h+var_BC]
test	edi, edi
jz	short loc_10003FD7
test	eax, eax
jnz	short loc_10003FC1
mov	eax, 202Ch
mov	[esi], ax
add	esi, 2
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ecx		
push	edx		
push	esi		
call	memcpy
add	esi, [edi+8]
add	esp, 0Ch
xor	eax, eax
mov	edi, [esp+0D8h+var_B4]
test	edi, edi
jz	short loc_10004010
test	eax, eax
jnz	short loc_10003FEE
mov	eax, 202Ch
mov	[esi], ax
add	esi, 2
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ecx		
push	edx		
push	esi		
call	memcpy
add	esi, [edi+8]
add	esp, 0Ch
mov	dword ptr [esi], 3E72623Ch
add	esi, 4
mov	byte ptr [esi],	0
jmp	short loc_10004026
test	eax, eax
jnz	short loc_1000401D
mov	dword ptr [esi], 3E72623Ch
add	esi, 4
mov	byte ptr [esi],	0
jmp	short loc_10004026
			
mov	ebp, [esp+0D8h+var_A4]
			
mov	ebx, [esp+0D8h+var_B0]
xor	esi, esi
cmp	ebx, esi
jz	loc_10003C4F
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
jmp	loc_10003C4F
			
dd offset loc_10003D38,	offset loc_10003D60, offset loc_10003D8D 
dd offset loc_10003DDF,	offset loc_10003DBA, offset loc_10003E0B
dd offset loc_10003E5C
db	9,     9,     9,     9 
db	9,     9,     1,     2
db	3,     4,     5,     6
db	7,     8,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	9,     9,     9,     9
db	0
align 10h
public NSS_Get_CERT_CertificateRequestTemplate
mov	eax, offset dword_100A1A00
retn
align 10h
public CERT_CreateCertificate
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_100040E6
pop	edi
retn
push	esi
push	188h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000410A
push	eax
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	edi
retn
push	ebx
push	0
lea	eax, [esi+78h]
push	eax
push	edi
mov	dword ptr [esi+164h], 1
mov	[esi], edi
call	DER_SetUInteger
add	esp, 0Ch
test	eax, eax
jnz	short loc_100041A9
mov	ecx, [esp+0Ch+arg_0]
push	ecx
lea	edx, [esi+84h]
push	edx
push	edi
call	DER_SetUInteger
add	esp, 0Ch
test	eax, eax
jnz	short loc_100041A9
mov	eax, [esp+0Ch+arg_4]
push	eax
lea	ecx, [esi+0A8h]
push	ecx
push	edi
call	CERT_CopyName
add	esp, 0Ch
test	eax, eax
jnz	short loc_100041A9
mov	edx, [esp+0Ch+arg_8]
push	edx
lea	eax, [esi+0B0h]
push	eax
push	edi
call	sub_1003E190
add	esp, 0Ch
test	eax, eax
jnz	short loc_100041A9
mov	ebx, [esp+0Ch+arg_C]
lea	ecx, [ebx+10h]
push	ecx
lea	edx, [esi+0CCh]
push	edx
push	edi
call	CERT_CopyName
add	esp, 0Ch
test	eax, eax
jnz	short loc_100041A9
add	ebx, 18h
push	ebx
lea	eax, [esi+0D4h]
push	eax
push	edi
call	SECKEY_CopySubjectPublicKeyInfo
add	esp, 0Ch
test	eax, eax
jz	short loc_100041B8
			
push	esi
call	CERT_DestroyCertificate
add	esp, 4
pop	ebx
pop	esi
xor	eax, eax
pop	edi
retn
pop	ebx
mov	eax, esi
pop	esi
pop	edi
retn
align 10h
mov	eax, [esp+8]
mov	ecx, [esp+4]
mov	[ecx+40h], eax
retn
align 10h
public CERT_StartCertificateRequestAttributes
mov	eax, [esp+arg_0]
mov	ecx, [eax]
push	offset loc_100041C0
push	ecx
push	eax
call	sub_1003EBB0
add	esp, 0Ch
retn
align 10h
public CERT_FinishCertificateRequestAttributes
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	loc_100042DB
cmp	dword ptr [esi], 0
jz	loc_100042DB
mov	eax, [esi+40h]
push	ebx
lea	ebx, [esi+40h]
test	eax, eax
jz	loc_100042D6
cmp	dword ptr [eax], 0
jz	loc_100042D6
push	ebp
push	0
push	0
call	NSS_Get_CERT_SequenceOfCertExtensionTemplate
push	eax
mov	eax, [esi]
push	ebx
push	0
push	eax
call	SEC_ASN1EncodeItem_Util
mov	ebp, eax
add	esp, 18h
test	ebp, ebp
jz	short loc_10004252
push	112h
call	SECOID_FindOIDByTag_Util
add	esp, 4
mov	[esp+0Ch+arg_0], eax
test	eax, eax
jnz	short loc_10004259
pop	ebp
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [esi]
push	edi
push	8
push	ecx
call	PORT_ArenaZAlloc_Util
mov	edx, [esi]
push	10h
push	edx
mov	[ebx], eax
call	PORT_ArenaZAlloc_Util
add	esp, 10h
cmp	dword ptr [ebx], 0
mov	edi, eax
jz	short loc_100042C1
test	edi, edi
jz	short loc_100042C1
mov	eax, [esp+10h+arg_0]
mov	ecx, [esi]
push	eax
push	edi
push	ecx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_100042C1
mov	edx, [esi]
push	8
push	edx
call	PORT_ArenaZAlloc_Util
xor	ecx, ecx
add	esp, 8
mov	[edi+0Ch], eax
cmp	eax, ecx
jz	short loc_100042CE
mov	[eax], ebp
mov	eax, [edi+0Ch]
mov	[eax+4], ecx
mov	edx, [ebx]
mov	[edx], edi
mov	eax, [ebx]
pop	edi
pop	ebp
pop	ebx
mov	[eax+4], ecx
xor	eax, eax
pop	esi
retn
			
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
retn
			
pop	ebx
xor	eax, eax
pop	esi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public CERT_GetCertificateRequestExtensions
push	esi
mov	esi, [esp+4+arg_0]
push	edi
test	esi, esi
jz	short loc_1000433B
mov	edi, [esp+8+arg_4]
test	edi, edi
jz	short loc_1000433B
mov	eax, [esi+40h]
test	eax, eax
jz	short loc_10004336
cmp	dword ptr [eax], 0
jz	short loc_10004336
mov	eax, [eax]
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_1000433B
mov	ecx, [eax]
push	ecx
push	0
push	0
call	NSS_Get_CERT_SequenceOfCertExtensionTemplate
mov	edx, [esi]
add	esp, 8
push	eax
push	edi
push	edx
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
pop	edi
pop	esi
retn
			
pop	edi
xor	eax, eax
pop	esi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public CERT_CreateCertificateRequest
sub	esp, 8
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1000436C
pop	edi
add	esp, 8
retn
push	esi
push	44h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
mov	[esp+10h+var_8], esi
test	esi, esi
jnz	short loc_10004394
push	eax
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	edi
add	esp, 8
retn
push	ebx
push	ebp
push	0
lea	eax, [esi+4]
push	eax
push	edi
mov	[esi], edi
call	DER_SetUInteger
add	esp, 0Ch
test	eax, eax
jnz	loc_100044CB
mov	ecx, [esp+18h+arg_0]
push	ecx
lea	edx, [esi+10h]
push	edx
push	edi
call	CERT_CopyName
add	esp, 0Ch
test	eax, eax
jnz	loc_100044CB
mov	eax, [esp+18h+arg_4]
push	eax
lea	ecx, [esi+18h]
push	ecx
push	edi
call	SECKEY_CopySubjectPublicKeyInfo
add	esp, 0Ch
test	eax, eax
jnz	loc_100044CB
push	8
push	edi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esi+40h], eax
test	eax, eax
jz	loc_100044CB
mov	ebx, [esp+18h+arg_8]
test	ebx, ebx
jz	loc_100044E6
cmp	dword ptr [ebx], 0
jz	loc_100044E6
push	10h
push	edi
call	PORT_ArenaZAlloc_Util
mov	ebp, eax
add	esp, 8
mov	[esp+18h+var_4], ebp
test	ebp, ebp
jz	loc_100044CB
push	112h
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jz	loc_100044CB
push	eax
push	ebp
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_100044CB
cmp	[ebx], eax
jz	short loc_1000445A
inc	eax
cmp	dword ptr [ebx+eax*4], 0
jnz	short loc_10004453
lea	edx, ds:4[eax*4]
push	edx
push	edi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[ebp+0Ch], eax
test	eax, eax
jz	short loc_100044CB
xor	ebp, ebp
cmp	[ebx], ebp
jz	short loc_100044B4
mov	eax, ebx
xor	esi, esi
lea	esp, [esp+0]
mov	eax, [eax]
push	eax
push	edi
call	SECITEM_ArenaDupItem_Util
mov	ecx, [esp+20h+var_4]
mov	edx, [ecx+0Ch]
mov	[esi+edx], eax
mov	eax, [ecx+0Ch]
add	esp, 8
cmp	dword ptr [esi+eax], 0
jz	short loc_100044C7
inc	ebp
lea	esi, ds:0[ebp*4]
cmp	dword ptr [esi+ebx], 0
lea	eax, [esi+ebx]
jnz	short loc_10004480
mov	esi, [esp+18h+var_8]
mov	ecx, [esi+40h]
mov	edx, [esp+18h+var_4]
pop	ebp
pop	ebx
mov	eax, esi
pop	esi
mov	[ecx], edx
pop	edi
add	esp, 8
retn
mov	esi, [esp+18h+var_8]
			
mov	esi, [esi]
test	esi, esi
jz	short loc_100044DC
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	ebp
pop	ebx
pop	esi
xor	eax, eax
pop	edi
add	esp, 8
retn
			
pop	ebp
pop	ebx
mov	dword ptr [eax], 0
mov	eax, esi
pop	esi
pop	edi
add	esp, 8
retn
align 10h
mov	eax, [esp+4]
mov	ecx, [esp+8]
lea	edx, [eax+4]
push	1
mov	[eax+58h], ecx
mov	eax, [eax]
push	edx
push	eax
call	DER_SetUInteger
add	esp, 0Ch
retn
align 10h
public CERT_StartCRLExtensions
mov	eax, [esp+arg_0]
mov	ecx, [eax]
push	offset loc_10004500
push	ecx
push	eax
call	sub_1003EBB0
add	esp, 0Ch
retn
align 10h
mov	eax, [esp+8]
mov	ecx, [esp+4]
mov	[ecx+18h], eax
retn
align 10h
public CERT_StartCRLEntryExtensions
mov	eax, [esp+arg_0]
mov	ecx, [eax]
mov	edx, [esp+arg_4]
push	offset loc_10004540
push	ecx
push	edx
call	sub_1003EBB0
add	esp, 0Ch
retn
align 10h
public CERT_FindCRLNumberExten
			
sub	esp, 0Ch
mov	ecx, [esp+0Ch+arg_4]
mov	edx, [ecx+58h]
push	edi
lea	eax, [esp+10h+var_C]
push	eax
xor	edi, edi
push	5Eh
push	edx
mov	[esp+1Ch+var_8], edi
mov	[esp+1Ch+var_4], edi
call	sub_1003EB90
add	esp, 0Ch
cmp	eax, edi
jnz	short loc_1000460B
push	ebx
push	esi
mov	esi, [esp+18h+arg_0]
push	esi
call	PORT_ArenaMark_Util
mov	ebx, eax
lea	eax, [esp+1Ch+var_C]
push	eax
push	esi
call	SECITEM_ArenaDupItem_Util
add	esp, 0Ch
cmp	eax, edi
jz	short loc_100045D7
push	eax
push	edi
push	edi
call	NSS_Get_SEC_IntegerTemplate_Util
mov	ecx, [esp+24h+arg_8]
add	esp, 8
push	eax
push	ecx
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
mov	edi, eax
jmp	short loc_100045DA
or	edi, 0FFFFFFFFh
mov	edx, [esp+18h+var_8]
push	edx
call	PORT_Free_Util
add	esp, 4
push	ebx
push	esi
cmp	edi, 0FFFFFFFFh
jnz	short loc_100045FF
call	PORT_ArenaRelease_Util
add	esp, 8
pop	esi
pop	ebx
mov	eax, edi
pop	edi
add	esp, 0Ch
retn
call	PORT_ArenaUnmark_Util
add	esp, 8
pop	esi
mov	eax, edi
pop	ebx
pop	edi
add	esp, 0Ch
retn
public CERT_FindCRLEntryReasonExten
			
			
sub	esp, 18h
push	ebx
xor	ebx, ebx
push	edi
push	800h
mov	[esp+24h+var_18], ebx
mov	[esp+24h+var_14], ebx
mov	[esp+24h+var_10], ebx
mov	[esp+24h+var_C], ebx
mov	[esp+24h+var_8], ebx
mov	[esp+24h+var_4], ebx
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
cmp	edi, ebx
jnz	short loc_1000464B
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 18h
retn
mov	ecx, [esp+20h+arg_0]
mov	edx, [ecx+18h]
push	esi
lea	eax, [esp+24h+var_18]
push	eax
push	5Fh
push	edx
call	sub_1003EB90
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	short loc_100046A0
lea	eax, [esp+24h+var_18]
push	eax
push	ebx
push	ebx
call	NSS_Get_SEC_EnumeratedTemplate
add	esp, 8
push	eax
lea	ecx, [esp+2Ch+var_C]
push	ecx
push	edi
call	SEC_QuickDERDecodeItem_Util
mov	esi, eax
add	esp, 10h
cmp	esi, ebx
jnz	short loc_100046A0
lea	edx, [esp+24h+var_C]
push	edx
call	DER_GetInteger_Util
mov	ecx, [esp+28h+arg_4]
add	esp, 4
mov	[ecx], eax
			
push	ebx
push	edi
call	PORT_FreeArena_Util
mov	eax, [esp+2Ch+var_14]
add	esp, 8
cmp	eax, ebx
jz	short loc_100046BB
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
pop	ebx
add	esp, 18h
retn
align 10h
public SEC_RegisterDefaultHttpClient
			
mov	eax, dword_100BA008
test	eax, eax
jnz	short loc_100046EA
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	eax
call	ds:PR_EnterMonitor
mov	ecx, dword_100BA008
mov	eax, [esp+4+arg_0]
push	ecx
mov	dword_100BA00C,	eax
call	ds:PR_ExitMonitor
add	esp, 8
xor	eax, eax
retn
align 10h
public CERT_RegisterAlternateOCSPAIAInfoCallBack
mov	eax, dword_100BA008
test	eax, eax
jnz	short loc_1000472A
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	esi
push	eax
call	ds:PR_EnterMonitor
mov	ecx, dword_100BA008
mov	eax, [esp+8+arg_0]
mov	esi, dword_100BA034
push	ecx
mov	dword_100BA034,	eax
call	ds:PR_ExitMonitor
mov	eax, [esp+0Ch+arg_4]
add	esp, 8
test	eax, eax
jz	short loc_1000475B
mov	[eax], esi
xor	eax, eax
pop	esi
retn
align 10h
push	ecx
mov	ecx, [esp+8]
mov	eax, [ecx+1Ch]
push	ebx
push	ebp
push	esi
mov	esi, [ecx+20h]
xor	edx, edx
xor	ebx, ebx
xor	ebp, ebp
push	edi
mov	[esp+10h], edx
cmp	esi, 2
jl	short loc_100047A5
lea	edx, [esi-2]
shr	edx, 1
inc	edx
lea	edi, [edx+edx]
mov	[esp+18h], edi
jmp	short loc_10004790
align 10h
			
movzx	edi, byte ptr [eax]
add	ebx, edi
movzx	edi, byte ptr [eax+1]
add	ebp, edi
add	eax, 2
dec	edx
jnz	short loc_10004790
mov	edx, [esp+18h]
cmp	edx, esi
jnb	short loc_100047B0
movzx	eax, byte ptr [eax]
mov	[esp+10h], eax
mov	eax, [ecx+28h]
add	ebp, ebx
mov	ebx, [ecx+2Ch]
add	[esp+10h], ebp
xor	esi, esi
xor	edi, edi
xor	edx, edx
cmp	ebx, 2
jl	short loc_100047E9
lea	edx, [ebx-2]
shr	edx, 1
inc	edx
lea	ebp, [edx+edx]
mov	[esp+18h], ebp
movzx	ebp, byte ptr [eax]
add	esi, ebp
movzx	ebp, byte ptr [eax+1]
add	edi, ebp
add	eax, 2
dec	edx
jnz	short loc_100047D4
mov	edx, [esp+18h]
cmp	edx, ebx
jnb	short loc_100047F4
movzx	edx, byte ptr [eax]
add	[esp+10h], edx
mov	eax, [ecx+34h]
mov	ecx, [ecx+38h]
add	edi, esi
add	[esp+10h], edi
xor	ebx, ebx
xor	ebp, ebp
xor	esi, esi
cmp	ecx, 2
jl	short loc_10004825
lea	edx, [ecx-2]
shr	edx, 1
inc	edx
lea	esi, [edx+edx]
movzx	edi, byte ptr [eax]
add	ebx, edi
movzx	edi, byte ptr [eax+1]
add	ebp, edi
add	eax, 2
dec	edx
jnz	short loc_10004814
cmp	esi, ecx
jnb	short loc_10004830
movzx	eax, byte ptr [eax]
add	[esp+10h], eax
pop	edi
lea	eax, [ebx+ebp]
add	eax, [esp+0Ch]
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
push	esi
mov	esi, [esp+0Ch]
push	edi
mov	edi, [esp+0Ch]
lea	eax, [esi+18h]
push	eax
lea	ecx, [edi+18h]
push	ecx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_1000488E
lea	edx, [esi+24h]
push	edx
lea	eax, [edi+24h]
push	eax
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_1000488E
add	esi, 30h
push	esi
add	edi, 30h
push	edi
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_1000488E
pop	edi
mov	eax, 1
pop	esi
retn
			
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
push	ebp
push	esi
call	PORT_ArenaMark_Util
push	10h
push	esi
mov	ebp, eax
call	PORT_ArenaZAlloc_Util
add	esp, 0Ch
mov	[edi+4], eax
test	eax, eax
jz	short loc_100048EA
push	ebx
push	eax
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_100048EA
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_100048F9
push	eax
push	esi
call	SECITEM_ArenaDupItem_Util
mov	ecx, [edi+4]
mov	[ecx+0Ch], eax
mov	edx, [edi+4]
add	esp, 8
cmp	dword ptr [edx+0Ch], 0
jnz	short loc_10004903
			
push	ebp
push	esi
call	PORT_ArenaRelease_Util
add	esp, 8
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	eax, [edi+4]
mov	dword ptr [eax+0Ch], 0
push	ebp
push	esi
call	PORT_ArenaUnmark_Util
add	esp, 8
xor	eax, eax
pop	ebp
retn
align 10h
push	ebx
push	esi
push	edi
mov	edi, ecx
mov	ecx, [eax]
mov	[edi], ecx
mov	ecx, [eax]
or	ebx, 0FFFFFFFFh
sub	ecx, 0
mov	esi, edx
jz	short loc_1000497B
dec	ecx
jz	short loc_1000496F
dec	ecx
jz	short loc_10004955
mov	edx, [eax+4]
push	edx
push	esi
call	SECITEM_ArenaDupItem_Util
add	esp, 8
mov	[edi+4], eax
test	eax, eax
jz	short loc_10004995
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
mov	eax, [eax+4]
push	eax
push	esi
call	SECITEM_ArenaDupItem_Util
add	esp, 8
mov	[edi+4], eax
test	eax, eax
jz	short loc_10004995
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
mov	ebx, [eax+4]
call	sub_100048A0
pop	edi
pop	esi
pop	ebx
retn
mov	ecx, [eax+4]
push	ecx
push	esi
call	SECITEM_ArenaDupItem_Util
add	esp, 8
mov	[edi+4], eax
test	eax, eax
jz	short loc_10004995
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
			
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
mov	eax, dword_100BA008
push	eax
call	ds:PR_EnterMonitor
add	esp, 4
cmp	dword ptr [edi+0Ch], 0
jnz	short loc_100049B8
mov	[edi+0Ch], esi
mov	ecx, [edi+8]
mov	[esi+4], ecx
mov	dword ptr [esi], 0
mov	eax, [edi+8]
test	eax, eax
jz	short loc_100049CD
mov	[eax], esi
mov	[edi+8], esi
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
pop	ecx
retn
align 10h
			
mov	eax, dword_100BA008
push	eax
call	ds:PR_EnterMonitor
mov	eax, [esi+4]
xor	ecx, ecx
add	esp, 4
cmp	eax, ecx
jnz	short loc_10004A1D
cmp	[esi], ecx
jnz	short loc_10004A1D
cmp	esi, [edi+0Ch]
jnz	short loc_10004A0C
cmp	esi, [edi+8]
jnz	short loc_10004A0C
mov	[edi+8], ecx
mov	[edi+0Ch], ecx
			
mov	ecx, dword_100BA008
push	ecx
call	ds:PR_ExitMonitor
add	esp, 4
retn
			
cmp	esi, [edi+0Ch]
jnz	short loc_10004A3D
mov	eax, [esi]
mov	[edi+0Ch], eax
mov	[eax+4], ecx
mov	[esi+4], ecx
mov	[esi], ecx
mov	eax, dword_100BA008
push	eax
call	ds:PR_ExitMonitor
pop	ecx
retn
cmp	esi, [edi+8]
jnz	short loc_10004A5A
mov	[edi+8], eax
mov	[eax], ecx
mov	[esi+4], ecx
mov	[esi], ecx
mov	eax, dword_100BA008
push	eax
call	ds:PR_ExitMonitor
pop	ecx
retn
mov	edx, [esi]
mov	[edx+4], eax
mov	eax, [esi+4]
mov	edx, [esi]
mov	[eax], edx
mov	[esi+4], ecx
mov	[esi], ecx
mov	eax, dword_100BA008
push	eax
call	ds:PR_ExitMonitor
pop	ecx
retn
align 10h
push	ebx
mov	ebx, ds:PR_EnterMonitor
push	esi
mov	esi, eax
mov	eax, dword_100BA008
push	edi
push	eax
mov	edi, ecx
call	ebx 
add	esp, 4
cmp	[edi+8], esi
jnz	short loc_10004AB1
mov	ecx, dword_100BA008
push	ecx
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
pop	esi
pop	ebx
retn
call	sub_100049E0
mov	edx, dword_100BA008
push	edx
call	ebx 
add	esp, 4
cmp	dword ptr [edi+0Ch], 0
jnz	short loc_10004ACB
mov	[edi+0Ch], esi
mov	eax, [edi+8]
mov	[esi+4], eax
mov	dword ptr [esi], 0
mov	eax, [edi+8]
test	eax, eax
jz	short loc_10004AE0
mov	[eax], esi
mov	[edi+8], esi
mov	ecx, dword_100BA008
mov	esi, ds:PR_ExitMonitor
push	ecx
call	esi 
mov	edx, dword_100BA008
push	edx
call	esi 
add	esp, 8
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
mov	eax, dword_100BA008
push	ebp
push	esi
push	edi
mov	edi, ds:PR_EnterMonitor
push	eax
xor	esi, esi
call	edi 
mov	ecx, dword_100BA008
push	ecx
call	edi 
mov	eax, dword_100BA008
mov	ebp, ds:PR_ExitMonitor
xor	edx, edx
cmp	dword_100BA010,	edx
push	eax
setl	dl
mov	edi, edx
call	ebp 
add	esp, 0Ch
test	edi, edi
jnz	short loc_10004B6B
mov	ecx, [esp+0Ch+arg_0]
mov	edx, [ebx]
push	ecx
push	edx
call	PL_HashTableLookup
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10004B6B
mov	ecx, ebx
call	sub_10004A80
			
mov	eax, dword_100BA008
push	eax
call	ebp 
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
retn
align 10h
push	esi
mov	esi, eax
mov	eax, dword_100BA008
push	edi
push	eax
mov	edi, ecx
call	ds:PR_EnterMonitor
call	sub_100049E0
mov	ecx, [esi+8]
mov	edx, [edi]
push	ecx
push	edx
call	PL_HashTableRemove
dec	dword ptr [edi+4]
mov	eax, [esi+18h]
add	esp, 0Ch
test	eax, eax
jz	short loc_10004BBB
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, [esi+8]
mov	eax, [eax+84h]
pop	edi
pop	esi
test	eax, eax
jz	short loc_10004BD5
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	ecx, dword_100BA008
push	ecx
call	ds:PR_ExitMonitor
pop	ecx
retn
align 10h
			
push	ebx
mov	ebx, ds:PR_EnterMonitor
push	edi
mov	edi, eax
mov	eax, dword_100BA008
push	eax
call	ebx 
mov	eax, dword_100BA010
add	esp, 4
test	eax, eax
jle	short loc_10004C7D
cmp	[edi+4], eax
jbe	short loc_10004C7D
push	esi
mov	ecx, dword_100BA008
mov	esi, [edi+0Ch]
push	ecx
call	ebx 
call	sub_100049E0
mov	edx, [esi+8]
mov	eax, [edi]
push	edx
push	eax
call	PL_HashTableRemove
dec	dword ptr [edi+4]
mov	eax, [esi+18h]
add	esp, 0Ch
test	eax, eax
jz	short loc_10004C49
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	ecx, [esi+8]
mov	eax, [ecx+84h]
test	eax, eax
jz	short loc_10004C61
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
mov	eax, [edi+4]
add	esp, 4
cmp	eax, dword_100BA010
ja	short loc_10004C14
pop	esi
			
mov	ecx, dword_100BA008
push	ecx
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
pop	ebx
retn
public CERT_ClearOCSPCache
			
mov	eax, dword_100BA008
push	ebx
mov	ebx, ds:PR_EnterMonitor
push	ebp
push	eax
call	ebx 
mov	ebp, ds:PR_ExitMonitor
add	esp, 4
cmp	dword_100BA024,	0
jbe	loc_10004D32
push	esi
push	edi
jmp	short loc_10004CC0
align 10h
			
mov	ecx, dword_100BA008
mov	esi, dword_100BA02C
push	ecx
call	ebx 
mov	edi, offset dword_100BA020
call	sub_100049E0
mov	edx, [esi+8]
mov	eax, dword_100BA020
push	edx
push	eax
call	PL_HashTableRemove
dec	dword_100BA024
mov	eax, [esi+18h]
add	esp, 0Ch
test	eax, eax
jz	short loc_10004D03
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	ecx, [esi+8]
mov	eax, [ecx+84h]
test	eax, eax
jz	short loc_10004D1B
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	edx, dword_100BA008
push	edx
call	ebp 
add	esp, 4
cmp	dword_100BA024,	0
ja	short loc_10004CC0
pop	edi
pop	esi
mov	eax, dword_100BA008
push	eax
call	ebp 
add	esp, 4
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
push	ecx
mov	eax, [esp+4+arg_4]
push	ebp
mov	ebp, [esp+8+arg_0]
push	esi
mov	dword ptr [eax], 0
mov	ecx, dword_100BA008
push	edi
push	ecx
call	ds:PR_EnterMonitor
mov	edi, [ebx+84h]
push	edi
call	PORT_ArenaMark_Util
mov	edx, [ebx+84h]
push	40h
push	edx
mov	[esp+20h+var_4], eax
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_10004DAB
push	esi
mov	[esi+8], ebx
mov	eax, [ebp+0]
push	ebx
push	eax
call	PL_HashTableAdd
add	esp, 0Ch
test	eax, eax
jnz	short loc_10004DCE
mov	ecx, [esp+10h+var_4]
push	ecx
push	edi
call	PORT_ArenaRelease_Util
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
add	esp, 0Ch
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
pop	ecx
retn
mov	eax, [esp+10h+var_4]
inc	dword ptr [ebp+4]
push	eax
push	edi
call	PORT_ArenaUnmark_Util
mov	edi, ebp
call	sub_100049A0
mov	ecx, [esp+18h+arg_4]
mov	[ecx], esi
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
add	esp, 0Ch
pop	edi
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
mov	eax, [esi+18h]
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
xor	ebx, ebx
push	edi
cmp	eax, ebx
jz	short loc_10004E1D
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	[esi+18h], ebx
mov	[esi+28h], bx
cmp	ebp, ebx
jz	loc_10004EAD
push	800h
call	PORT_NewArena_Util
mov	edx, eax
add	esp, 4
mov	[esi+18h], edx
cmp	edx, ebx
jnz	short loc_10004E46
pop	edi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	eax, [ebp+14h]
lea	ecx, [esi+1Ch]
call	sub_10004920
mov	edi, eax
cmp	edi, ebx
jz	short loc_10004E6D
mov	eax, [esi+18h]
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	ebp
mov	[esi+18h], ebx
pop	ebx
retn
lea	ecx, [ebp+18h]
push	ecx
lea	edx, [esi+30h]
push	edx
mov	[esi+24h], ebx
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
test	eax, eax
setz	al
mov	[esi+28h], al
mov	ebp, [ebp+24h]
cmp	ebp, ebx
jz	short loc_10004EAA
lea	ecx, [esi+38h]
push	ebp
push	ecx
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
test	eax, eax
pop	edi
setz	dl
pop	ebp
mov	[esi+29h], dl
xor	eax, eax
pop	ebx
retn
mov	[esi+29h], bl
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
sub	esp, 8
mov	eax, dword_100BA008
push	ebx
push	ebp
mov	ebp, [esp+10h+arg_0]
push	esi
push	edi
push	eax
call	ds:PR_EnterMonitor
add	esp, 4
call	ds:PR_Now
cmp	byte ptr [ebp+28h], 0
mov	ebx, dword_100BA014
mov	[esp+18h+var_4], edx
jz	short loc_10004F06
mov	esi, dword_100BA018
imul	esi, 0F4240h
xor	ecx, ecx
add	esi, [ebp+30h]
adc	ecx, [ebp+34h]
jmp	short loc_10004F14
mov	esi, ebx
imul	esi, 0F4240h
xor	ecx, ecx
add	esi, eax
adc	ecx, edx
cmp	byte ptr [ebp+29h], 0
jz	short loc_10004F2E
mov	edi, [ebp+3Ch]
mov	edx, [ebp+38h]
cmp	edi, ecx
jg	short loc_10004F2E
jl	short loc_10004F2A
cmp	edx, esi
jnb	short loc_10004F2E
mov	esi, edx
mov	ecx, edi
			
imul	ebx, 0F4240h
xor	edi, edi
add	ebx, eax
adc	edi, [esp+18h+var_4]
cmp	ecx, edi
jg	short loc_10004F4A
jl	short loc_10004F46
cmp	esi, ebx
jnb	short loc_10004F4A
mov	esi, ebx
mov	ecx, edi
			
pop	edi
mov	[ebp+10h], esi
pop	esi
mov	[ebp+14h], ecx
mov	edx, dword_100BA008
pop	ebp
pop	ebx
add	esp, 8
mov	[esp+arg_0], edx
jmp	ds:PR_ExitMonitor
align 10h
public CERT_SetOCSPFailureMode
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
js	short loc_10004FA4
cmp	esi, 1
jg	short loc_10004FA4
mov	eax, dword_100BA008
push	eax
call	ds:PR_EnterMonitor
mov	ecx, dword_100BA008
push	ecx
mov	dword_100BA030,	esi
call	ds:PR_ExitMonitor
add	esp, 8
xor	eax, eax
pop	esi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
db 1Ah dup(0CCh)
public CERT_OCSPCacheSettings
push	ebx
mov	ebx, [esp+4+arg_8]
push	esi
push	edi
mov	edi, [esp+0Ch+arg_4]
cmp	edi, ebx
ja	short loc_1000504C
mov	esi, [esp+0Ch+arg_0]
cmp	esi, 0FFFFFFFFh
jl	short loc_1000504C
mov	eax, dword_100BA008
push	eax
call	ds:PR_EnterMonitor
add	esp, 4
mov	dword_100BA010,	0FFFFFFFFh
test	esi, esi
js	short loc_1000500B
mov	dword_100BA010,	esi
cmp	edi, dword_100BA014
jb	short loc_1000501B
cmp	ebx, dword_100BA018
jnb	short loc_10005020
call	CERT_ClearOCSPCache
mov	eax, offset dword_100BA020
mov	dword_100BA014,	edi
mov	dword_100BA018,	ebx
call	sub_10004BF0
mov	ecx, dword_100BA008
push	ecx
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
public CERT_SetOCSPTimeout
mov	eax, [esp+arg_0]
mov	dword_100BA01C,	eax
xor	eax, eax
retn
align 10h
			
mov	eax, dword_100BA008
push	esi
push	edi
xor	esi, esi
or	edi, 0FFFFFFFFh
cmp	eax, esi
jnz	short loc_10005094
call	ds:PR_NewMonitor
mov	dword_100BA008,	eax
cmp	eax, esi
jnz	short loc_10005094
or	eax, edi
pop	edi
pop	esi
retn
			
push	eax
call	ds:PR_EnterMonitor
add	esp, 4
cmp	dword_100BA020,	esi
jnz	short loc_100050DF
push	esi
push	esi
push	offset PL_CompareValues
push	offset loc_10004840
push	offset loc_10004760
push	esi
call	PL_NewHashTable
add	esp, 18h
mov	dword_100BA020,	eax
mov	dword_100BA030,	esi
mov	dword_100BA024,	esi
mov	dword_100BA028,	esi
mov	dword_100BA02C,	esi
jmp	short loc_100050EC
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
cmp	dword_100BA020,	esi
jz	short loc_100050F6
xor	edi, edi
mov	eax, dword_100BA008
push	eax
call	ds:PR_ExitMonitor
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
mov	eax, dword_100BA008
push	esi
xor	esi, esi
cmp	eax, esi
jz	loc_100051A4
push	eax
call	ds:PR_EnterMonitor
add	esp, 4
cmp	dword_100BA020,	esi
jz	short loc_1000514B
call	CERT_ClearOCSPCache
mov	eax, dword_100BA020
push	eax
call	PL_HashTableDestroy
add	esp, 4
mov	dword_100BA020,	esi
mov	ecx, dword_100BA008
push	ecx
mov	dword_100BA028,	esi
mov	dword_100BA02C,	esi
mov	dword_100BA00C,	esi
mov	dword_100BA010,	3E8h
mov	dword_100BA014,	0E10h
mov	dword_100BA018,	15180h
mov	dword_100BA030,	esi
call	ds:PR_ExitMonitor
mov	edx, dword_100BA008
push	edx
call	ds:PR_DestroyMonitor
add	esp, 8
mov	dword_100BA008,	esi
xor	eax, eax
pop	esi
retn
align 10h
public SEC_GetRegisteredHttpClient
			
mov	eax, dword_100BA008
test	eax, eax
jnz	short loc_100051C9
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
push	esi
push	eax
call	ds:PR_EnterMonitor
mov	eax, dword_100BA008
mov	esi, dword_100BA00C
push	eax
call	ds:PR_ExitMonitor
add	esp, 8
mov	eax, esi
pop	esi
retn
align 10h
public CERT_EncodeOCSPRequest
			
			
push	esi
mov	esi, [esp+4+arg_4]
mov	eax, [esi+4]
mov	eax, [eax+1Ch]
test	eax, eax
jz	short loc_1000521A
push	eax
call	CERT_FinishExtensions
mov	ecx, [esi+4]
add	esp, 4
mov	dword ptr [ecx+1Ch], 0
test	eax, eax
jz	short loc_1000521A
xor	eax, eax
pop	esi
retn
			
mov	edx, [esp+4+arg_0]
push	offset dword_100A1BE8
push	esi
push	0
push	edx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
pop	esi
retn
align 10h
public CERT_DecodeOCSPRequest
sub	esp, 0Ch
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_100052BE
push	0Ch
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100052B3
mov	eax, [esp+14h+arg_0]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	edi
mov	[esi], edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_100052B3
lea	edx, [esp+14h+var_C]
push	edx
push	offset dword_100A1BE8
push	esi
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_100052C6
call	PORT_GetError_Util
cmp	eax, 0FFFFE009h
jnz	short loc_100052B3
push	0FFFFE078h
call	PORT_SetError_Util
add	esp, 4
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
mov	eax, [esi+4]
mov	edx, [eax+14h]
xor	ecx, ecx
cmp	[edx], ecx
jz	short loc_100052F3
xor	eax, eax
mov	edx, [esi+4]
mov	edx, [edx+14h]
mov	eax, [eax+edx]
mov	[eax], edi
mov	edx, [esi+4]
mov	edx, [edx+14h]
inc	ecx
lea	eax, ds:0[ecx*4]
cmp	dword ptr [eax+edx], 0
jnz	short loc_100052D4
pop	edi
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_DestroyOCSPCertID
			
mov	eax, [esp+arg_0]
test	eax, eax
jz	short loc_10005320
mov	eax, [eax+84h]
test	eax, eax
jz	short loc_10005320
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
			
push	ecx
push	ebx
push	ebp
push	esi
push	edi
mov	edi, [esp+14h+arg_0]
xor	esi, esi
mov	[esp+14h+var_4], esi
cmp	edi, esi
jz	short loc_10005360
push	edi
call	PORT_ArenaMark_Util
add	esp, 4
mov	[esp+14h+var_4], eax
mov	ebp, [esp+14h+arg_4]
push	ebp
call	HASH_GetHashObjectByOidTag
mov	ebx, [esp+18h+arg_8]
add	esp, 4
cmp	eax, esi
jz	short loc_100053CA
test	ebx, ebx
jz	short loc_1000539A
mov	ecx, [ebx+4]
test	ecx, ecx
jz	short loc_1000539A
mov	edx, [ebx+8]
cmp	edx, [eax]
jnb	short loc_10005396
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_100053CA
mov	eax, ecx
jmp	short loc_100053B0
			
mov	eax, [eax]
push	eax
push	ebx
push	edi
call	SECITEM_AllocItem_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_100053CA
mov	eax, [esi+4]
mov	ecx, [esp+14h+arg_C]
mov	edx, [ecx+8]
mov	ecx, [ecx+4]
push	edx
push	ecx
push	eax
push	ebp
call	PK11_HashBuf
add	esp, 10h
test	eax, eax
jz	short loc_10005401
			
test	edi, edi
jz	short loc_100053E4
mov	edx, [esp+14h+var_4]
push	edx
push	edi
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
test	esi, esi
jz	short loc_100053F9
xor	eax, eax
test	ebx, ebx
setz	al
push	eax
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
test	edi, edi
jz	short loc_10005413
mov	ecx, [esp+14h+var_4]
push	ecx
push	edi
call	PORT_ArenaUnmark_Util
add	esp, 8
test	esi, esi
jnz	short loc_10005419
mov	esi, ebx
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
public CERT_GetSubjectPublicKeyDigest
			
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_4]
mov	ecx, [eax+0F0h]
mov	edx, [eax+0F4h]
mov	eax, [eax+0F8h]
add	eax, 7
shr	eax, 3
mov	[esp+0Ch+var_4], eax
lea	eax, [esp+0Ch+var_C]
push	eax
mov	eax, [esp+10h+arg_0]
mov	[esp+10h+var_C], ecx
mov	ecx, [esp+10h+arg_C]
mov	[esp+10h+var_8], edx
mov	edx, [esp+10h+arg_8]
push	ecx
push	edx
push	eax
call	sub_10005340
add	esp, 1Ch
retn
align 10h
public CERT_GetSubjectNameDigest
			
			
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_4]
mov	ecx, [eax+54h]
mov	edx, [eax+58h]
mov	eax, [eax+5Ch]
mov	[esp+0Ch+var_C], ecx
lea	ecx, [esp+0Ch+var_C]
push	ecx
mov	ecx, [esp+10h+arg_0]
mov	[esp+10h+var_8], edx
mov	edx, [esp+10h+arg_C]
mov	[esp+10h+var_4], eax
mov	eax, [esp+10h+arg_8]
push	edx
push	eax
push	ecx
call	sub_10005340
add	esp, 1Ch
retn
align 10h
			
sub	esp, 10h
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	esi
push	edi
call	PORT_ArenaMark_Util
push	88h
push	edi
mov	[esp+28h+var_10], eax
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	loc_10005610
push	0
push	4
push	esi
push	edi
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jnz	loc_10005610
mov	eax, [esp+1Ch+arg_8]
mov	ecx, [esp+1Ch+arg_4]
push	0Bh
push	eax
push	ecx
push	ebp
call	CERT_FindCertIssuer
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jz	loc_10005610
mov	edx, [ebx+54h]
mov	eax, [ebx+58h]
mov	ecx, [ebx+5Ch]
mov	[esp+1Ch+var_C], edx
lea	edx, [esp+1Ch+var_C]
push	edx
mov	[esp+20h+var_8], eax
lea	eax, [esi+18h]
push	eax
push	4
push	edi
mov	[esp+2Ch+var_4], ecx
call	sub_10005340
add	esp, 10h
test	eax, eax
jz	loc_10005607
mov	ecx, [esi+1Ch]
mov	edx, [esi+20h]
lea	eax, [esi+48h]
push	eax
push	3
push	ebx
push	edi
mov	[esi+40h], ecx
mov	[esi+44h], edx
call	CERT_GetSubjectNameDigest
add	esp, 10h
test	eax, eax
jz	loc_10005607
lea	ecx, [esi+54h]
push	ecx
push	1
push	ebx
push	edi
call	CERT_GetSubjectNameDigest
add	esp, 10h
test	eax, eax
jz	short loc_10005607
lea	edx, [esi+24h]
push	edx
push	4
push	ebx
push	edi
call	CERT_GetSubjectPublicKeyDigest
add	esp, 10h
test	eax, eax
jz	short loc_10005607
mov	eax, [esi+28h]
mov	ecx, [esi+2Ch]
lea	edx, [esi+6Ch]
push	edx
push	3
push	ebx
push	edi
mov	[esi+64h], eax
mov	[esi+68h], ecx
call	CERT_GetSubjectPublicKeyDigest
add	esp, 10h
test	eax, eax
jz	short loc_10005607
lea	eax, [esi+78h]
push	eax
push	1
push	ebx
push	edi
call	CERT_GetSubjectPublicKeyDigest
add	esp, 10h
test	eax, eax
jz	short loc_10005607
push	ebx
call	CERT_DestroyCertificate
add	ebp, 84h
push	ebp
lea	ecx, [esi+30h]
push	ecx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10005610
mov	eax, [esp+1Ch+var_10]
push	eax
push	edi
call	PORT_ArenaUnmark_Util
add	esp, 8
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
			
push	ebx
call	CERT_DestroyCertificate
add	esp, 4
			
mov	edx, [esp+1Ch+var_10]
push	edx
push	edi
call	PORT_ArenaRelease_Util
add	esp, 8
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 10h
public CERT_CreateOCSPCertID
			
			
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10005669
mov	eax, [esp+4+arg_8]
mov	ecx, [esp+4+arg_4]
mov	edx, [esp+4+arg_0]
push	eax
push	ecx
push	edx
call	sub_100054C0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000566D
push	eax
push	edi
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
pop	edi
retn
mov	[eax+84h], edi
pop	edi
retn
align 10h
push	esi
mov	esi, eax
test	esi, esi
jnz	short loc_10005698
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
push	ebx
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	loc_1000580F
push	88h
push	edi
call	PORT_ArenaZAlloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	loc_10005804
cmp	dword ptr [esi+4], 0
jz	short loc_100056E2
push	esi
push	ebx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10005804
cmp	dword ptr [esi+10h], 0
jz	short loc_10005701
lea	eax, [esi+0Ch]
push	eax
lea	ecx, [ebx+0Ch]
push	ecx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10005804
cmp	dword ptr [esi+1Ch], 0
jz	short loc_10005720
lea	edx, [esi+18h]
push	edx
lea	eax, [ebx+18h]
push	eax
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10005804
cmp	dword ptr [esi+28h], 0
jz	short loc_1000573F
lea	ecx, [esi+24h]
push	ecx
lea	edx, [ebx+24h]
push	edx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10005804
cmp	dword ptr [esi+34h], 0
jz	short loc_1000575E
lea	eax, [esi+30h]
push	eax
lea	ecx, [ebx+30h]
push	ecx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10005804
cmp	dword ptr [esi+40h], 0
jz	short loc_1000577D
lea	edx, [esi+3Ch]
push	edx
lea	eax, [ebx+3Ch]
push	eax
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10005804
cmp	dword ptr [esi+4Ch], 0
jz	short loc_10005798
lea	ecx, [esi+48h]
push	ecx
lea	edx, [ebx+48h]
push	edx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10005804
cmp	dword ptr [esi+58h], 0
jz	short loc_100057B3
lea	eax, [esi+54h]
push	eax
lea	ecx, [ebx+54h]
push	ecx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10005804
cmp	dword ptr [esi+64h], 0
jz	short loc_100057CE
lea	edx, [esi+60h]
push	edx
lea	eax, [ebx+60h]
push	eax
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10005804
cmp	dword ptr [esi+70h], 0
jz	short loc_100057E9
lea	ecx, [esi+6Ch]
push	ecx
lea	edx, [ebx+6Ch]
push	edx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10005804
cmp	dword ptr [esi+7Ch], 0
jz	short loc_10005822
add	esi, 78h
push	esi
lea	eax, [ebx+78h]
push	eax
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10005822
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
push	0FFFFE890h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebx
xor	eax, eax
pop	esi
retn
			
mov	[ebx+84h], edi
pop	edi
mov	eax, ebx
pop	ebx
pop	esi
retn
align 10h
mov	eax, [esp+8]
mov	ecx, [esp+4]
mov	[ecx+8], eax
retn
align 10h
			
push	ebx
push	ebp
push	esi
push	edi
push	10h
mov	esi, eax
mov	ebx, ecx
or	ebp, 0FFFFFFFFh
call	PORT_ZAlloc_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	loc_100058EE
lea	ebp, [edi+4]
push	ebp
lea	eax, [esi+0A8h]
push	5Dh
push	esi
mov	[edi], eax
call	CERT_FindCertExtension
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10005888
call	PORT_GetError_Util
cmp	eax, 0FFFFE023h
jnz	short loc_100058CD
push	0
or	esi, 0FFFFFFFFh
call	PORT_SetError_Util
mov	ecx, [ebx]
push	offset loc_10005830
push	ecx
push	ebx
call	sub_1003EBB0
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jz	short loc_100058CD
push	offset dword_100A1EC8
push	0
push	edi
push	89h
push	ebx
call	sub_1003ECE0
push	ebx
mov	esi, eax
call	CERT_FinishExtensions
add	esp, 18h
test	esi, esi
jnz	short loc_100058CD
mov	esi, eax
			
cmp	dword ptr [edi+8], 0
jz	short loc_100058DE
push	0
push	ebp
call	SECITEM_FreeItem_Util
add	esp, 8
push	edi
call	PORT_Free_Util
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
push	ecx
push	ebx
push	ebp
push	esi
push	edi
mov	edi, eax
push	edi
call	PORT_ArenaMark_Util
mov	esi, [esp+18h+arg_0]
mov	[esp+18h+var_4], eax
mov	eax, [esi]
add	esp, 4
xor	ecx, ecx
cmp	eax, esi
jz	loc_100059CB
mov	eax, [eax]
inc	ecx
cmp	eax, esi
jnz	short loc_10005924
test	ecx, ecx
jz	loc_100059CB
lea	eax, ds:4[ecx*4]
push	eax
push	edi
call	PORT_ArenaAlloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	loc_100059CB
mov	ebp, [esi]
xor	esi, esi
cmp	ebp, [esp+14h+arg_0]
jz	short loc_100059AE
push	0Ch
push	edi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[ebx+esi*4], eax
test	eax, eax
jz	short loc_100059CB
mov	ecx, [esp+14h+arg_8]
mov	edx, [esp+14h+arg_4]
push	ecx
mov	[eax], edi
mov	eax, [ebp+8]
push	edx
push	eax
call	sub_100054C0
mov	ecx, [ebx+esi*4]
mov	[ecx+4], eax
mov	ecx, [ebx+esi*4]
add	esp, 0Ch
cmp	dword ptr [ecx+4], 0
jz	short loc_100059CB
cmp	[esp+14h+arg_C], 1
jnz	short loc_100059A4
mov	eax, [ebp+8]
call	sub_10005840
test	eax, eax
jnz	short loc_100059CB
mov	ebp, [ebp+0]
inc	esi
cmp	ebp, [esp+14h+arg_0]
jnz	short loc_10005958
mov	eax, [esp+14h+var_4]
push	eax
push	edi
call	PORT_ArenaUnmark_Util
add	esp, 8
pop	edi
mov	dword ptr [ebx+esi*4], 0
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
pop	ecx
retn
			
mov	edx, [esp+14h+var_4]
push	edx
push	edi
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
			
push	ebx
push	esi
push	edi
call	PORT_ArenaMark_Util
push	8
push	edi
mov	ebx, eax
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10005A3D
push	0Ch
push	edi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esi], eax
test	eax, eax
jz	short loc_10005A3D
cmp	[esp+8+arg_8], 1
mov	ecx, [esp+8+arg_0]
mov	[eax], edi
mov	eax, [esi]
mov	[eax+4], ecx
jnz	short loc_10005A4C
mov	eax, [esp+8+arg_4]
mov	ecx, [esi]
call	sub_10005840
test	eax, eax
jz	short loc_10005A4C
			
push	ebx
push	edi
call	PORT_ArenaRelease_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	ebx
retn
			
push	ebx
push	edi
call	PORT_ArenaUnmark_Util
add	esp, 8
mov	dword ptr [esi+4], 0
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
			
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10005AB2
push	0Ch
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10005AA7
push	20h
push	esi
mov	[edi], esi
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_10005AB7
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
mov	[edi+4], eax
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
cmp	[esp+arg_14], 0
jz	short loc_10005AD7
push	0FFFFE898h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
push	esi
call	sub_10005A70
mov	esi, eax
test	esi, esi
jz	short loc_10005B1A
mov	eax, [esp+4+arg_10]
mov	ecx, [esp+4+arg_4]
mov	edx, [esp+4+arg_0]
push	edi
mov	edi, [esi]
push	eax
push	ecx
push	edx
call	sub_100059F0
mov	ecx, [esi+4]
mov	[ecx+14h], eax
mov	edx, [esi+4]
add	esp, 0Ch
cmp	dword ptr [edx+14h], 0
pop	edi
jnz	short loc_10005B1E
mov	eax, [esi]
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
pop	esi
retn
mov	eax, esi
pop	esi
retn
align 10h
public CERT_CreateOCSPRequest
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_10005B4A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
retn
cmp	[esp+4+arg_10],	0
jz	short loc_10005B62
push	0FFFFE898h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
retn
push	esi
call	sub_10005A70
mov	esi, eax
test	esi, esi
jz	short loc_10005BA4
mov	eax, [esp+8+arg_C]
mov	ecx, [esp+8+arg_8]
mov	edx, [esp+8+arg_4]
push	eax
mov	eax, [esi]
push	ecx
push	edx
push	edi
call	sub_10005900
mov	ecx, [esi+4]
mov	[ecx+14h], eax
mov	edx, [esi+4]
add	esp, 10h
cmp	dword ptr [edx+14h], 0
jnz	short loc_10005BA9
mov	eax, [esi]
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	edi
retn
mov	eax, esi
pop	esi
pop	edi
retn
align 10h
mov	eax, [esp+4]
mov	ecx, [eax+4]
mov	edx, [esp+8]
mov	[ecx+18h], edx
retn
align 10h
public CERT_AddOCSPAcceptableResponses
			
			
sub	esp, 8
push	ebx
mov	ebx, [esp+0Ch+arg_0]
mov	eax, [ebx+4]
push	ebp
mov	[esp+10h+var_8], 0
mov	ebp, [eax+1Ch]
push	esi
push	edi
mov	[esp+18h+var_4], 0FFFFFFFFh
test	ebp, ebp
jnz	short loc_10005C00
mov	ecx, [ebx]
push	offset loc_10005BB0
push	ecx
push	ebx
call	sub_1003EBB0
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	loc_10005CA6
mov	esi, [esp+18h+arg_4]
mov	edi, 1
cmp	esi, 83h
jz	short loc_10005C21
lea	eax, [esp+18h+arg_4]
add	eax, 4
inc	edi
cmp	dword ptr [eax], 83h
jnz	short loc_10005C15
lea	edx, ds:4[edi*4]
push	edx
call	PORT_Alloc_Util
add	esp, 4
mov	[esp+18h+var_8], eax
test	eax, eax
jz	short loc_10005CB7
push	esi
call	SECOID_FindOIDByTag_Util
mov	ecx, [esp+1Ch+var_8]
mov	esi, 1
add	esp, 4
mov	[ecx], eax
cmp	edi, esi
jle	short loc_10005C74
lea	ebx, [esp+18h+arg_4]
mov	edx, [ebx+4]
add	ebx, 4
push	edx
call	SECOID_FindOIDByTag_Util
mov	ecx, [esp+1Ch+var_8]
mov	[ecx+esi*4], eax
inc	esi
add	esp, 4
cmp	esi, edi
jl	short loc_10005C55
mov	ebx, [esp+18h+arg_0]
mov	edx, [esp+18h+var_8]
push	0
push	0
mov	dword ptr [edx+esi*4], 0
call	NSS_Get_SEC_SequenceOfObjectIDTemplate
push	eax
push	0
lea	eax, [esp+28h+var_8]
push	eax
push	86h
push	ebp
call	sub_1003ECE0
add	esp, 1Ch
mov	[esp+18h+var_4], eax
test	eax, eax
jz	short loc_10005CD0
mov	eax, [esp+18h+var_8]
test	eax, eax
jz	short loc_10005CB7
push	eax
call	PORT_Free_Util
add	esp, 4
			
test	ebp, ebp
jz	short loc_10005CC4
push	ebp
call	CERT_FinishExtensions
add	esp, 4
mov	eax, [esp+18h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
mov	ecx, [esp+18h+var_8]
push	ecx
call	PORT_Free_Util
mov	eax, [ebx+4]
add	esp, 4
cmp	dword ptr [eax+1Ch], 0
jnz	short loc_10005CE9
mov	[eax+1Ch], ebp
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
align 10h
public CERT_DestroyOCSPRequest
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_10005D5B
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10005D33
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_10005D20
push	eax
call	sub_10041C80
add	esp, 4
mov	eax, [esi+4]
mov	eax, [eax+1Ch]
test	eax, eax
jz	short loc_10005D33
push	eax
call	CERT_FinishExtensions
add	esp, 4
			
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10005D4A
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_10005D4A
push	eax
call	CERT_DestroyCertificate
add	esp, 4
			
mov	esi, [esi]
test	esi, esi
jz	short loc_10005D5B
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
pop	esi
retn
align 10h
sub	esp, 8
cmp	[esp+8+arg_0], 0
mov	[esp+8+var_4], 0FFFFFFFFh
jnz	short loc_10005D86
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
add	esp, 8
retn
push	edi
mov	edi, [esp+0Ch+arg_4]
test	edi, edi
jnz	short loc_10005D96
xor	eax, eax
pop	edi
add	esp, 8
retn
cmp	dword ptr [edi], 0
push	ebx
push	ebp
push	esi
mov	[esp+18h+var_8], 0
jz	loc_10005E69
lea	ebx, [ebx+0]
mov	eax, [edi]
mov	ecx, [eax+0Ch]
movzx	eax, byte ptr [ecx]
and	eax, 1Fh
sub	eax, 0
jz	short loc_10005DDB
dec	eax
jz	short loc_10005DD4
dec	eax
jz	short loc_10005DCD
mov	ebp, 3
jmp	short loc_10005DDD
mov	ebp, 2
jmp	short loc_10005DDD
mov	ebp, 1
jmp	short loc_10005DDD
xor	ebp, ebp
			
mov	eax, ebp
sub	eax, 0
jz	short loc_10005DFF
dec	eax
jz	short loc_10005DF8
dec	eax
jz	short loc_10005DF1
mov	ebx, offset dword_100A1EB8
jmp	short loc_10005E04
mov	ebx, offset dword_100A1EA8
jmp	short loc_10005E04
mov	ebx, offset dword_100A1E98
jmp	short loc_10005E04
mov	ebx, offset dword_100A1E48
			
mov	edx, [esp+18h+arg_0]
push	8
push	edx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10005E96
mov	eax, [edi]
mov	ecx, [esp+18h+arg_0]
add	eax, 8
push	eax
push	ecx
call	SECITEM_ArenaDupItem_Util
add	esp, 8
test	eax, eax
jz	short loc_10005E96
mov	edx, [esp+18h+arg_0]
push	eax
push	ebx
push	esi
push	edx
call	SEC_QuickDERDecodeItem_Util
mov	ebx, eax
add	esp, 10h
mov	[esp+18h+var_4], ebx
test	ebx, ebx
jnz	short loc_10005E73
mov	ecx, [esp+18h+arg_4]
mov	[esi], ebp
mov	eax, [edi]
mov	[eax+14h], esi
mov	eax, [esp+18h+var_8]
inc	eax
lea	edi, [ecx+eax*4]
mov	[esp+18h+var_8], eax
cmp	[edi], ebx
jnz	loc_10005DB0
pop	esi
pop	ebp
pop	ebx
xor	eax, eax
pop	edi
add	esp, 8
retn
call	PORT_GetError_Util
cmp	eax, 0FFFFE009h
jnz	short loc_10005E9A
push	0FFFFE081h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
pop	edi
add	esp, 8
retn
			
mov	ebx, [esp+18h+var_4]
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
pop	edi
add	esp, 8
retn
align 10h
sub	esp, 18h
push	ebx
push	ebp
push	edi
push	esi
call	PORT_ArenaMark_Util
push	48h
push	esi
mov	[esp+30h+var_14], eax
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 0Ch
mov	[esp+24h+var_10], edi
test	edi, edi
jz	loc_10005FCD
mov	eax, [esp+24h+arg_0]
push	eax
lea	ecx, [esp+28h+var_C]
push	ecx
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10005FCD
lea	edx, [esp+24h+var_C]
push	edx
push	offset dword_100A1D98
push	edi
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_10005F40
call	PORT_GetError_Util
cmp	eax, 0FFFFE009h
jnz	loc_10005FCD
push	0FFFFE081h
call	PORT_SetError_Util
mov	ecx, [esp+28h+var_14]
add	esp, 4
push	ecx
push	esi
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 18h
retn
mov	ebx, [edi+0Ch]
mov	eax, [ebx+10h]
movzx	eax, byte ptr [eax]
and	eax, 1Fh
dec	eax
jz	short loc_10005F66
dec	eax
jz	short loc_10005F5C
mov	[esp+24h+var_18], 0FFFFFFFFh
jmp	short loc_10005F6E
mov	[esp+24h+var_18], 2
jmp	short loc_10005F6E
mov	[esp+24h+var_18], 1
			
mov	eax, [esp+24h+var_18]
dec	eax
jz	short loc_10005F86
dec	eax
jz	short loc_10005F7F
mov	ebp, offset dword_100A1E28
jmp	short loc_10005F8B
mov	ebp, offset dword_100A1E18
jmp	short loc_10005F8B
mov	ebp, offset dword_100A1E08
			
push	10h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10005FCD
lea	ecx, [ebx+0Ch]
push	ecx
push	ebp
push	edi
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_10005F0C
mov	edx, [esp+24h+var_18]
mov	[edi], edx
mov	eax, [ebx+28h]
push	eax
push	esi
mov	[ebx+18h], edi
call	sub_10005D60
add	esp, 8
test	eax, eax
jz	short loc_10005FE4
			
mov	ecx, [esp+24h+var_14]
push	ecx
push	esi
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 18h
retn
mov	edx, [esp+24h+var_14]
push	edx
push	esi
call	PORT_ArenaUnmark_Util
mov	eax, [esp+2Ch+var_10]
add	esp, 8
pop	edi
pop	ebp
pop	ebx
add	esp, 18h
retn
align 10h
test	edi, edi
jnz	short loc_10006015
push	0FFFFE076h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	edi
call	SECOID_FindOIDTag_Util
add	esp, 4
mov	[edi+0Ch], eax
cmp	eax, 83h
jnz	short loc_10006004
lea	eax, [edi+10h]
push	eax
call	sub_10005EB0
add	esp, 4
test	eax, eax
jz	short loc_10006011
mov	[edi+1Ch], eax
xor	eax, eax
retn
align 10h
public CERT_DecodeOCSPResponse
			
			
sub	esp, 0Ch
push	ebx
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_100060F6
push	18h
push	esi
call	PORT_ArenaZAlloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_100060EB
mov	eax, [esp+14h+arg_0]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	esi
mov	[ebx], esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_100060EB
lea	edx, [esp+14h+var_C]
push	edx
push	offset dword_100A1C78
push	ebx
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_100060CA
call	PORT_GetError_Util
cmp	eax, 0FFFFE009h
jnz	short loc_100060EB
push	0FFFFE081h
call	PORT_SetError_Util
add	esp, 4
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
lea	eax, [ebx+4]
push	eax
call	DER_GetInteger_Util
add	esp, 4
mov	[ebx+10h], eax
test	eax, eax
jnz	short loc_100060FE
push	edi
mov	edi, [ebx+14h]
call	sub_10006000
pop	edi
test	eax, eax
jz	short loc_100060FE
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
			
pop	esi
mov	eax, ebx
pop	ebx
add	esp, 0Ch
retn
align 10h
mov	eax, [esp+arg_0]
mov	ecx, [eax+14h]
mov	edx, [esp+arg_4]
mov	ecx, [ecx+1Ch]
mov	eax, [ecx+0Ch]
test	edx, edx
jz	short locret_10006127
mov	[edx], ecx
retn
align 10h
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_1000613E
xor	eax, eax
retn
cmp	dword ptr [eax+0Ch], 83h
jnz	short loc_1000613B
mov	eax, [eax+1Ch]
add	eax, 10h
retn
align 10h
public CERT_DestroyOCSPResponse
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_10006192
mov	eax, [esi+14h]
test	eax, eax
jz	short loc_10006181
cmp	dword ptr [eax+0Ch], 83h
jnz	short loc_10006181
mov	eax, [eax+1Ch]
add	eax, 10h
jz	short loc_10006181
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_10006181
push	eax
call	CERT_DestroyCertificate
add	esp, 4
			
mov	eax, [esi]
test	eax, eax
jz	short loc_10006192
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
pop	esi
retn
align 10h
			
sub	esp, 0Ch
push	ebx
push	ebp
push	esi
mov	esi, eax
push	edi
mov	[esp+1Ch+var_8], 50h
test	esi, esi
jz	loc_1000631D
mov	al, [esi]
cmp	al, 20h
jz	short loc_100061C3
cmp	al, 9
jnz	short loc_100061CE
test	al, al
jz	loc_1000631D
inc	esi
jmp	short loc_100061B9
test	al, al
jz	loc_1000631D
push	7
push	offset aHttp	
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	loc_1000631D
mov	bl, [esi+7]
add	esi, 7
mov	eax, esi
mov	[esp+1Ch+Src], eax
cmp	bl, 2Fh
jz	short loc_1000621C
nop
cmp	bl, 3Ah
jz	short loc_1000621C
test	bl, bl
jz	short loc_1000621C
cmp	bl, 20h
jz	short loc_1000621C
cmp	bl, 9
jz	short loc_1000621C
mov	bl, [esi+1]
inc	esi
cmp	bl, 2Fh
jnz	short loc_10006200
			
mov	edi, esi
sub	edi, eax
lea	eax, [edi+1]
push	eax
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
mov	[esp+1Ch+var_C], ebp
test	ebp, ebp
jz	loc_1000631D
mov	ecx, [esp+1Ch+Src]
push	edi		
push	ecx		
push	ebp		
call	memcpy
add	esp, 0Ch
mov	byte ptr [edi+ebp], 0
cmp	bl, 3Ah
jnz	short loc_10006295
push	0Ah		
inc	esi
push	0		
push	esi		
call	ds:strtol
mov	bl, [esi]
movzx	edx, ax
add	esp, 0Ch
mov	[esp+1Ch+var_8], edx
cmp	bl, 2Fh
jz	short loc_1000629A
nop
test	bl, bl
jz	short loc_10006295
cmp	bl, 20h
jz	short loc_10006295
cmp	bl, 9
jz	short loc_10006295
sub	bl, 30h
cmp	bl, 9
ja	loc_10006314
mov	bl, [esi+1]
inc	esi
cmp	bl, 2Fh
jnz	short loc_10006270
jmp	short loc_1000629A
			
cmp	bl, 2Fh
jnz	short loc_100062FB
			
mov	ebp, esi
test	bl, bl
jz	short loc_100062B2
cmp	bl, 20h
jz	short loc_100062B2
cmp	bl, 9
jz	short loc_100062B2
mov	bl, [esi+1]
inc	esi
test	bl, bl
jnz	short loc_100062A0
			
sub	esi, ebp
lea	eax, [esi+1]
push	eax
call	PORT_Alloc_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10006310
push	esi		
push	ebp		
push	edi		
call	memcpy
mov	ebp, [esp+28h+var_C]
add	esp, 0Ch
mov	byte ptr [esi+edi], 0
mov	ecx, [esp+1Ch+arg_0]
mov	ax, word ptr [esp+1Ch+var_8]
mov	edx, [esp+1Ch+arg_4]
mov	[ecx], ebp
mov	ecx, [esp+1Ch+arg_8]
mov	[edx], ax
mov	[ecx], edi
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
push	offset dword_100A1F08
call	PORT_Strdup_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_100062D9
jmp	short loc_10006314
mov	ebp, [esp+1Ch+var_C]
			
push	ebp
call	PORT_Free_Util
add	esp, 4
			
push	0FFFFE075h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
align 10h
sub	esp, 38h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+38h+var_4], eax
push	ebx
push	ebp
push	esi
push	edi
mov	esi, ecx
xor	ebx, ebx
call	ds:PR_NewTCPSocket
mov	edi, eax
test	edi, edi
jz	loc_1000645C
push	1Eh
call	ds:PR_SecondsToInterval
mov	ebp, eax
lea	eax, [esp+4Ch+var_24]
push	eax
push	esi
mov	[esp+54h+var_38], ebp
call	ds:PR_StringToNetAddr
add	esp, 0Ch
test	eax, eax
jz	loc_10006418
push	400h
call	PORT_Alloc_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	loc_10006445
lea	ecx, [esp+48h+var_34]
push	ecx
push	400h
push	ebx
push	esi
call	ds:PR_GetHostByName
add	esp, 10h
test	eax, eax
jnz	loc_10006445
mov	ebp, ds:PR_EnumerateHostEnt
xor	esi, esi
mov	eax, [esp+48h+arg_0]
lea	edx, [esp+48h+var_24]
push	edx
push	eax
lea	ecx, [esp+50h+var_34]
push	ecx
push	esi
call	ebp 
mov	esi, eax
add	esp, 10h
test	esi, esi
jle	short loc_10006445
mov	edx, [esp+48h+var_38]
push	edx
lea	eax, [esp+4Ch+var_24]
push	eax
push	edi
call	ds:PR_Connect
add	esp, 0Ch
test	eax, eax
jnz	short loc_100063C7
push	ebx
call	PORT_Free_Util
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+38h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
mov	edx, [esp+48h+arg_0]
lea	ecx, [esp+48h+var_24]
push	ecx
push	edx
push	0
call	ds:PR_InitializeNetAddr
add	esp, 0Ch
test	eax, eax
jnz	short loc_10006445
push	ebp
lea	eax, [esp+4Ch+var_24]
push	eax
push	edi
call	ds:PR_Connect
add	esp, 0Ch
test	eax, eax
jz	short loc_10006403
			
push	edi
call	ds:PR_Close
add	esp, 4
test	ebx, ebx
jz	short loc_1000645C
push	ebx
call	PORT_Free_Util
add	esp, 4
			
mov	ecx, [esp+48h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 38h
retn
align 10h
sub	esp, 24h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+24h+var_4], eax
mov	eax, [esp+24h+arg_0]
push	ebx
push	ebp
mov	ebp, [esp+2Ch+arg_4]
xor	ecx, ecx
push	esi
mov	[esp+30h+var_24], ecx
mov	[esp+30h+var_20], ecx
mov	[esp+30h+var_1C], ecx
push	edi
lea	ecx, [esp+34h+var_20]
push	ecx
lea	edx, [esp+38h+var_18]
push	edx
lea	ecx, [esp+3Ch+var_24]
push	ecx
call	sub_100061A0
mov	ebx, [esp+40h+var_24]
add	esp, 0Ch
test	eax, eax
jnz	loc_100065C5
mov	esi, [esp+34h+var_18]
push	esi
mov	ecx, ebx
call	sub_10006340
mov	edi, eax
add	esp, 4
test	edi, edi
jz	loc_100065C5
mov	[esp+34h+var_14], 0
cmp	si, 50h
jz	short loc_10006508
movzx	edx, si
push	edx
push	offset aD	
lea	eax, [esp+3Ch+var_14]
push	10h
push	eax
call	ds:PR_snprintf
add	esp, 10h
mov	edx, [esp+34h+var_20]
lea	ecx, [esp+34h+var_14]
test	ebp, ebp
jnz	short loc_10006553
push	ecx
push	ebx
push	edx
push	offset aGetSHttp1_0Hos 
call	ds:PR_smprintf
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	loc_100065B7
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10006532
sub	eax, edx
push	eax
push	esi
push	edi
call	ds:PR_Write
add	esp, 0Ch
test	eax, eax
js	short loc_100065AE
mov	[esp+34h+var_1C], edi
xor	edi, edi
jmp	short loc_100065AE
mov	eax, [ebp+8]
push	eax
push	ecx
push	ebx
push	edx
push	offset aPostSHttp1_0Ho 
call	ds:PR_smprintf
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_100065B7
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10006571
mov	ebx, ds:PR_Write
sub	eax, edx
push	eax
push	esi
push	edi
call	ebx 
add	esp, 0Ch
test	eax, eax
js	short loc_100065AA
mov	eax, [ebp+8]
mov	ecx, [ebp+4]
push	eax
push	ecx
push	edi
call	ebx 
add	esp, 0Ch
test	eax, eax
js	short loc_100065AA
mov	ebx, [esp+34h+var_24]
mov	[esp+34h+var_1C], edi
xor	edi, edi
jmp	short loc_100065AE
			
mov	ebx, [esp+34h+var_24]
			
push	esi
call	PORT_Free_Util
add	esp, 4
			
test	edi, edi
jz	short loc_100065C5
push	edi
call	ds:PR_Close
add	esp, 4
			
mov	eax, [esp+34h+var_20]
test	eax, eax
jz	short loc_100065D6
push	eax
call	PORT_Free_Util
add	esp, 4
test	ebx, ebx
jz	short loc_100065E3
push	ebx
call	PORT_Free_Util
add	esp, 4
mov	ecx, [esp+34h+var_4]
mov	eax, [esp+34h+var_1C]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 24h
retn
align 10h
push	ebp
mov	ebp, [esp+4+arg_8]
push	esi
xor	esi, esi
test	edi, edi
jle	short loc_1000664A
push	ebx
mov	ebx, ds:PR_Recv
mov	ecx, [esp+0Ch+arg_4]
push	ebp
push	0
mov	eax, edi
sub	eax, esi
push	eax
mov	eax, [esp+18h+arg_0]
lea	edx, [esi+ecx]
push	edx
push	eax
call	ebx 
add	esp, 14h
test	eax, eax
js	short loc_1000663F
jz	short loc_10006639
add	esi, eax
cmp	esi, edi
jl	short loc_10006613
			
pop	ebx
mov	eax, esi
pop	esi
pop	ebp
retn
test	esi, esi
jnz	short loc_10006639
pop	ebx
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	eax, esi
pop	esi
pop	ebp
retn
align 10h
sub	esp, 1Ch
push	ebx
push	ebp
push	esi
push	edi
push	1Eh
xor	esi, esi
xor	ebx, ebx
xor	ebp, ebp
call	ds:PR_SecondsToInterval
add	esp, 4
mov	[esp+2Ch+var_8], eax
mov	[esp+2Ch+var_14], esi
mov	[esp+2Ch+var_10], esi
mov	[esp+2Ch+var_C], esi
jmp	short loc_10006680
align 10h
			
add	esi, 400h
mov	[esp+2Ch+var_1C], esi
inc	esi
push	esi
push	ebx
call	PORT_Realloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	loc_1000697E
xor	esi, esi
lea	edi, [ebx+ebp]
mov	eax, [esp+2Ch+var_8]
push	eax
mov	eax, [esp+30h+arg_4]
push	0
mov	ecx, 400h
sub	ecx, esi
push	ecx
lea	edx, [edi+esi]
push	edx
push	eax
call	ds:PR_Recv
add	esp, 14h
test	eax, eax
js	short loc_100066D7
jz	short loc_100066DF
add	esi, eax
cmp	esi, 400h
jl	short loc_100066A4
jmp	short loc_100066DF
test	esi, esi
jz	loc_100069B3
			
test	esi, esi
jle	loc_100069B3
mov	edi, ds:strstr
lea	eax, [ebp-4]
xor	ecx, ecx
test	eax, eax
setle	cl
push	offset SubStr	
add	ebp, esi
mov	byte ptr [ebx+ebp], 0
dec	ecx
and	eax, ecx
add	eax, ebx
push	eax		
call	edi 
add	esp, 8
mov	[esp+2Ch+var_18], eax
cmp	esi, 400h
jge	short loc_10006721
mov	[esp+2Ch+var_14], 1
test	eax, eax
jnz	short loc_10006746
cmp	[esp+2Ch+var_14], eax
jnz	loc_100069B3
cmp	[esp+2Ch+var_1C], 2000h
jge	loc_100069B3
mov	esi, [esp+2Ch+var_1C]
jmp	loc_10006680
push	offset asc_100A1FE4 
push	ebx		
mov	[esp+34h+var_1C], ebp
call	edi 
add	esp, 8
mov	[esp+2Ch+var_4], eax
test	eax, eax
jz	loc_100069B3
mov	edi, ds:strchr
push	20h		
push	ebx		
mov	byte ptr [eax],	0
call	edi 
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_100069B3
push	5
push	offset aHttp_0	
push	ebx
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	loc_100069B3
lea	ebp, [esi+1]
push	20h		
push	ebp		
call	edi 
add	esp, 8
test	eax, eax
jz	loc_100069B3
mov	byte ptr [eax],	0
mov	esi, offset a200 
mov	eax, ebp
mov	cl, [eax]
cmp	cl, [esi]
jnz	short loc_100067D1
test	cl, cl
jz	short loc_100067CD
mov	cl, [eax+1]
cmp	cl, [esi+1]
jnz	short loc_100067D1
add	eax, 2
add	esi, 2
test	cl, cl
jnz	short loc_100067B1
xor	eax, eax
jmp	short loc_100067D6
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	loc_100069B3
mov	ebp, [esp+2Ch+var_4]
mov	edx, [esp+2Ch+var_18]
add	ebp, 2
mov	[edx], al
jmp	short loc_100067F0
align 10h
			
push	3Ah		
push	ebp		
call	edi 
add	esp, 8
test	eax, eax
jz	loc_100069B3
lea	esi, [eax+1]
mov	byte ptr [eax],	0
cmp	byte ptr [esi],	20h
jnz	loc_100069B3
inc	esi
push	offset asc_100A1FE4 
push	esi		
call	ds:strstr
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10006828
mov	byte ptr [edi],	0
push	offset aContentType 
push	ebp
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jnz	short loc_10006840
mov	[esp+2Ch+var_10], esi
jmp	short loc_10006860
push	offset aContentLength 
push	ebp
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jnz	short loc_10006860
push	esi		
call	ds:atoi
add	esp, 4
mov	[esp+2Ch+var_C], eax
			
test	edi, edi
jz	short loc_10006881
lea	ebp, [edi+2]
test	ebp, ebp
jz	short loc_10006881
mov	edi, [esp+2Ch+var_18]
lea	eax, [edi+2]
cmp	ebp, eax
jnb	short loc_10006885
mov	edi, ds:strchr
jmp	loc_100067F0
			
mov	edi, [esp+2Ch+var_18]
mov	eax, [esp+2Ch+var_10]
test	eax, eax
jz	loc_100069B3
push	offset aApplicationOcs 
push	eax
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jnz	loc_100069B3
mov	edx, [esp+2Ch+var_1C]
mov	ecx, ebx
sub	ecx, edi
lea	esi, [edx+ecx-4]
test	esi, esi
jz	short loc_100068C6
push	esi		
add	edi, 4
push	edi		
push	ebx		
call	ds:memmove
add	esp, 0Ch
lea	eax, [esi-1]
cdq
and	edx, 3FFh
lea	ebp, [edx+eax]
sar	ebp, 0Ah
inc	ebp
shl	ebp, 0Ah
cmp	[esp+2Ch+var_14], 0
jnz	short loc_10006933
mov	eax, [esp+2Ch+var_C]
test	eax, eax
jz	short loc_100068ED
cmp	esi, eax
jge	short loc_10006933
cmp	ebp, 2000h
jge	short loc_10006933
add	ebp, 400h
lea	eax, [ebp+1]
push	eax
push	ebx
call	PORT_Realloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1000697E
mov	ecx, [esp+2Ch+var_8]
mov	eax, [esp+2Ch+arg_4]
push	ecx
lea	edx, [esi+ebx]
push	edx
push	eax
mov	edi, 400h
call	sub_10006600
add	esp, 0Ch
test	eax, eax
jle	short loc_10006933
add	esi, eax
cmp	eax, edi
jge	short loc_100068E1
			
test	esi, esi
jnz	short loc_1000695B
test	ebx, ebx
jz	short loc_10006944
push	ebx
call	PORT_Free_Util
add	esp, 4
push	0FFFFE077h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
mov	ecx, [esp+2Ch+arg_0]
push	esi
push	0
push	ecx
call	SECITEM_AllocItem_Util
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_10006995
test	ebx, ebx
jz	short loc_1000697E
push	ebx
call	PORT_Free_Util
add	esp, 4
			
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
mov	edx, [edi+4]
push	esi		
push	ebx		
push	edx		
call	memcpy
push	ebx
call	PORT_Free_Util
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 1Ch
retn
			
push	ebx
call	PORT_Free_Util
push	0FFFFE077h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
			
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_4]
push	eax
mov	eax, [esp+4+arg_0]
push	ecx
push	edx
call	sub_100061A0
add	esp, 0Ch
retn
align 10h
sub	esp, 24h
push	ebp
mov	ebp, [esp+28h+arg_8]
push	esi
lea	eax, [esp+2Ch+var_14]
push	eax
mov	eax, [esp+30h+arg_4]
xor	esi, esi
lea	ecx, [esp+30h+var_8]
push	ecx
lea	edx, [esp+34h+var_10]
push	edx
mov	[esp+38h+var_10], esi
mov	[esp+38h+var_14], esi
mov	[esp+38h+var_C], esi
mov	[esp+38h+var_18], esi
mov	[esp+38h+var_20], esi
call	sub_100061A0
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jnz	short loc_10006A41
push	0FFFFE078h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10006B87
mov	ecx, [esp+2Ch+var_8]
mov	edx, [esp+2Ch+var_10]
lea	eax, [esp+2Ch+var_18]
push	eax
mov	eax, [edi]
push	ecx
push	edx
call	eax
add	esp, 0Ch
test	eax, eax
jz	short loc_10006A6D
push	0FFFFE079h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10006B87
push	ebx
mov	ebx, offset aPost 
cmp	ebp, esi
jnz	short loc_10006A7C
mov	ebx, offset aGet 
lea	ecx, [esp+30h+var_20]
push	ecx
call	ds:PR_TicksPerSecond
imul	eax, dword_100BA01C
mov	edx, [esp+34h+var_14]
mov	ecx, [edi+0Ch]
push	eax
mov	eax, [esp+38h+var_18]
push	ebx
push	edx
push	offset aHttp_1	
push	eax
call	ecx
add	esp, 18h
pop	ebx
test	eax, eax
jz	short loc_10006ABE
push	0FFFFE079h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10006B87
cmp	ebp, esi
jz	short loc_10006AF2
mov	edx, [ebp+8]
mov	eax, [ebp+4]
mov	ecx, [esp+2Ch+var_20]
push	offset aApplicationO_0 
push	edx
mov	edx, [edi+10h]
push	eax
push	ecx
call	edx
add	esp, 10h
test	eax, eax
jz	short loc_10006AF2
push	0FFFFE079h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10006B87
			
lea	eax, [esp+2Ch+Size]
push	eax
mov	eax, [esp+30h+var_20]
lea	ecx, [esp+30h+Src]
push	ecx
mov	ecx, [edi+18h]
push	esi
push	esi
lea	edx, [esp+3Ch+var_24]
push	edx
push	esi
push	eax
mov	[esp+48h+Size],	10000h
call	ecx
add	esp, 1Ch
test	eax, eax
jz	short loc_10006B2C
push	0FFFFE079h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10006B87
mov	edx, 0C8h
cmp	[esp+2Ch+var_24], dx
jz	short loc_10006B47
push	0FFFFE077h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10006B87
mov	eax, [esp+2Ch+Size]
mov	ecx, [esp+2Ch+arg_0]
push	eax
push	esi
push	ecx
call	SECITEM_AllocItem_Util
add	esp, 0Ch
mov	[esp+2Ch+var_C], eax
cmp	eax, esi
jnz	short loc_10006B71
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10006B87
mov	edx, [esp+2Ch+Size]
mov	ecx, [esp+2Ch+Src]
push	edx		
mov	edx, [eax+4]
push	ecx		
push	edx		
call	memcpy
add	esp, 0Ch
			
mov	eax, [esp+2Ch+var_20]
cmp	eax, esi
jz	short loc_10006B98
push	eax
mov	eax, [edi+20h]
call	eax
add	esp, 4
mov	eax, [esp+2Ch+var_18]
cmp	eax, esi
jz	short loc_10006BA9
mov	ecx, [edi+8]
push	eax
call	ecx
add	esp, 4
mov	eax, [esp+2Ch+var_14]
cmp	eax, esi
jz	short loc_10006BBA
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+2Ch+var_10]
cmp	eax, esi
pop	esi
pop	ebp
jz	short loc_10006BCD
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+24h+var_C]
add	esp, 24h
retn
align 10h
			
mov	eax, [esp+arg_0]
push	ebp
push	esi
mov	esi, [esp+8+arg_4]
xor	ebp, ebp
cmp	byte ptr [eax],	0
push	edi
mov	edi, eax
jz	short loc_10006C5D
push	ebx
mov	bl, [edi]
movsx	eax, bl
push	eax		
call	ds:isspace
add	esp, 4
test	eax, eax
jnz	short loc_10006C56
cmp	bl, 2Bh
jz	short loc_10006C43
cmp	bl, 2Fh
jz	short loc_10006C34
cmp	bl, 3Dh
jz	short loc_10006C25
cmp	[esp+10h+arg_4], eax
jz	short loc_10006C22
mov	cl, [edi]
mov	[esi], cl
inc	esi
inc	ebp
jmp	short loc_10006C56
cmp	[esp+10h+arg_4], 0
jz	short loc_10006C53
mov	dword ptr [esi], 443325h
jmp	short loc_10006C50
cmp	[esp+10h+arg_4], 0
jz	short loc_10006C53
mov	dword ptr [esi], 463225h
jmp	short loc_10006C50
cmp	[esp+10h+arg_4], 0
jz	short loc_10006C53
mov	dword ptr [esi], 423225h
			
add	esi, 3
			
add	ebp, 3
			
inc	edi
cmp	byte ptr [edi],	0
jnz	short loc_10006BF5
pop	ebx
cmp	[esp+0Ch+arg_4], 0
lea	eax, [ebp+1]
jz	short loc_10006C6A
mov	byte ptr [esi],	0
pop	edi
pop	esi
pop	ebp
retn
align 10h
			
push	ebp
mov	ebp, [esp+4+arg_0]
push	esi
push	edi
mov	edi, eax
mov	eax, dword_100BA008
test	eax, eax
jnz	short loc_10006CB8
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
			
push	edi
push	ebx
call	sub_10006480
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10006CF0
push	esi
push	ebp
call	sub_10006650
push	esi
mov	edi, eax
call	ds:PR_Close
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebp
retn
push	eax
call	ds:PR_EnterMonitor
mov	eax, dword_100BA008
mov	esi, dword_100BA00C
push	eax
call	ds:PR_ExitMonitor
add	esp, 8
test	esi, esi
jz	short loc_10006C8F
cmp	word ptr [esi],	1
jnz	short loc_10006C8F
push	edi
push	ebx
lea	edi, [esi+4]
push	ebp
call	sub_100069F0
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
retn
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
align 10h
sub	esp, 0Ch
push	esi
push	edi
lea	eax, [esp+14h+var_C]
push	eax
push	5Ch
xor	edi, edi
push	ecx
mov	[esp+20h+var_8], edi
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jnz	short loc_10006D5A
lea	edx, [esp+14h+var_C]
push	edx
call	CERT_DecodeOidSequence
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10006D5A
mov	esi, [edi+4]
mov	eax, [esi]
test	eax, eax
jz	short loc_10006D5A
jmp	short loc_10006D40
align 10h
			
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 97h
jz	short loc_10006D8F
mov	eax, [esi+4]
add	esi, 4
test	eax, eax
jnz	short loc_10006D40
			
push	0FFFFE090h
xor	esi, esi
call	PORT_SetError_Util
add	esp, 4
mov	eax, [esp+14h+var_8]
test	eax, eax
jz	short loc_10006D7A
push	eax
call	PORT_Free_Util
add	esp, 4
test	edi, edi
jz	short loc_10006D87
push	edi
call	CERT_DestroyUserNotice
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
mov	esi, 1
jmp	short loc_10006D69
align 10h
			
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	eax, [esp+60h+arg_0]
mov	edx, [esi+0F0h]
push	ebx
push	ebp
mov	ebp, [esi+0F4h]
push	edi
mov	edi, [esi+0F8h]
lea	ecx, [esp+6Ch+var_44]
lea	edi, [edi+7]
push	4
mov	[esp+70h+var_54], eax
mov	[esp+70h+var_5C], ecx
mov	[esp+70h+var_58], 14h
mov	[esp+70h+var_50], edx
shr	edi, 3
xor	ebx, ebx
call	HASH_GetHashObjectByOidTag
add	esp, 4
test	eax, eax
jz	short loc_10006E65
mov	ecx, [esp+6Ch+var_5C]
test	ecx, ecx
jz	short loc_10006E2A
mov	edx, [esp+6Ch+var_58]
cmp	edx, [eax]
jnb	short loc_10006E26
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+60h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
mov	eax, ecx
jmp	short loc_10006E45
mov	eax, [eax]
push	eax
lea	ecx, [esp+70h+var_60]
push	ecx
push	0
call	SECITEM_AllocItem_Util
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_10006E65
mov	eax, [ebx+4]
push	edi
push	ebp
push	eax
push	4
call	PK11_HashBuf
add	esp, 10h
test	eax, eax
jz	short loc_10006E79
test	ebx, ebx
jz	short loc_10006E65
push	0
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
			
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+60h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
mov	eax, [esp+6Ch+var_54]
lea	edx, [esp+6Ch+var_60]
push	edx
push	eax
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	short loc_10006EA6
pop	edi
pop	ebp
mov	eax, 1
pop	ebx
mov	ecx, [esp+60h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
mov	edi, [esi+0F8h]
mov	ecx, [esi+0F0h]
mov	ebp, [esi+0F4h]
lea	edi, [edi+7]
push	3
mov	[esp+70h+var_50], ecx
shr	edi, 3
xor	ebx, ebx
call	HASH_GetHashObjectByOidTag
add	esp, 4
test	eax, eax
jz	short loc_10006E65
mov	ecx, [esp+6Ch+var_5C]
test	ecx, ecx
jz	short loc_10006EEA
mov	edx, [esp+6Ch+var_58]
cmp	edx, [eax]
jb	loc_10006E05
mov	eax, ecx
jmp	short loc_10006F09
mov	eax, [eax]
push	eax
lea	ecx, [esp+70h+var_60]
push	ecx
push	0
call	SECITEM_AllocItem_Util
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	loc_10006E65
mov	eax, [ebx+4]
push	edi
push	ebp
push	eax
push	3
call	PK11_HashBuf
add	esp, 10h
test	eax, eax
jnz	loc_10006E56
mov	edi, [esp+6Ch+var_54]
lea	edx, [esp+6Ch+var_60]
push	edx
push	edi
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jnz	loc_10006E8F
lea	eax, [esp+6Ch+var_60]
push	eax
push	1
push	esi
push	0
call	CERT_GetSubjectPublicKeyDigest
add	esp, 10h
test	eax, eax
jz	loc_10006E65
lea	ecx, [esp+6Ch+var_60]
push	ecx
push	edi
call	SECITEM_ItemsAreEqual_Util
mov	ecx, [esp+74h+var_4]
add	esp, 8
pop	edi
neg	eax
pop	ebp
sbb	eax, eax
pop	ebx
xor	ecx, esp
neg	eax
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
			
mov	eax, [esp+arg_0]
sub	esp, 30h
push	edi
push	eax
call	CERT_ExtractPublicKey
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_10006F9F
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 30h
retn
mov	eax, [esp+34h+arg_4]
mov	ecx, [eax+18h]
mov	edx, [eax+1Ch]
mov	[esp+34h+var_C], ecx
mov	ecx, [eax+20h]
mov	[esp+34h+var_8], edx
mov	edx, [eax]
mov	[esp+34h+var_4], ecx
mov	ecx, [eax+4]
mov	[esp+34h+var_24], edx
mov	edx, [eax+8]
mov	[esp+34h+var_20], ecx
mov	ecx, [eax+0Ch]
mov	[esp+34h+var_1C], edx
mov	edx, [eax+10h]
mov	eax, [eax+14h]
mov	[esp+34h+var_10], eax
mov	eax, [esp+34h+arg_8]
mov	[esp+34h+var_18], ecx
mov	ecx, [eax]
push	esi
mov	[esp+38h+var_14], edx
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	[esp+38h+var_30], ecx
mov	ecx, [esp+38h+arg_C]
push	ecx
mov	[esp+3Ch+var_2C], edx
lea	edx, [esp+3Ch+var_30]
push	edi
push	edx
mov	[esp+44h+var_28], eax
call	CERT_VerifySignedDataWithPublicKey
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10007038
call	PORT_GetError_Util
cmp	eax, 0FFFFE00Ah
jz	short loc_1000702B
call	PORT_GetError_Util
cmp	eax, 0FFFFE0B0h
jnz	short loc_10007038
push	0FFFFE09Dh
call	PORT_SetError_Util
add	esp, 4
			
push	edi
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
add	esp, 30h
retn
align 10h
push	ecx
mov	eax, [esp+4+arg_0]
test	eax, eax
jnz	short loc_1000705B
pop	ecx
retn
cmp	dword ptr [eax], 0
push	ebp
push	esi
push	edi
mov	[esp+10h+var_4], 0
jz	loc_1000713C
nop
mov	ebp, [eax]
mov	esi, [ebp+4]
lea	eax, [esi+30h]
push	eax
lea	eax, [ebx+30h]
push	eax
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	loc_10007122
cmp	dword ptr [esi+14h], 2
ja	loc_10007122
push	esi
push	ebx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_100070C3
lea	ecx, [esi+18h]
push	ecx
lea	edx, [ebx+18h]
push	edx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_10007122
add	esi, 24h
push	esi
lea	eax, [ebx+24h]
push	eax
jmp	short loc_10007116
push	esi
call	SECOID_FindOIDTag_Util
add	esp, 4
dec	eax
jz	short loc_100070F6
sub	eax, 2
jz	short loc_100070EE
dec	eax
jz	short loc_100070E6
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10007122
lea	edi, [ebx+60h]
lea	eax, [ebx+3Ch]
jmp	short loc_100070FC
lea	edi, [ebx+6Ch]
lea	eax, [ebx+48h]
jmp	short loc_100070FC
lea	edi, [ebx+78h]
lea	eax, [ebx+54h]
			
test	edi, edi
jz	short loc_10007122
lea	ecx, [esi+18h]
push	ecx
push	eax
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_10007122
add	esi, 24h
push	esi
push	edi
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jz	short loc_10007150
			
mov	eax, [esp+10h+var_4]
mov	edx, [esp+10h+arg_0]
inc	eax
cmp	dword ptr [edx+eax*4], 0
mov	[esp+10h+var_4], eax
lea	eax, [edx+eax*4]
jnz	loc_10007070
push	0FFFFE07Eh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ecx
retn
align 10h
			
push	esi
push	eax
xor	esi, esi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_10007177
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_10007184
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
push	esi
push	eax
xor	esi, esi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_100071AB
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_100071BC
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_100071DD
cmp	dword ptr [esi], 0
jz	short loc_100071DD
mov	ecx, [esp+4+arg_4]
mov	edx, [esi+0Ch]
push	ecx
push	edx
call	CERT_CompareCerts
add	esp, 8
test	eax, eax
jz	short loc_100071DD
mov	eax, 1
pop	esi
retn
			
xor	eax, eax
pop	esi
retn
align 10h
sub	esp, 14h
push	ebx
push	esi
push	eax
mov	ebx, ecx
xor	esi, esi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_1000720D
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_1000721E
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_10007243
cmp	dword ptr [esi], 0
jz	short loc_10007243
mov	esi, [esi+0Ch]
test	esi, esi
jz	short loc_10007243
push	ebx
push	esi
call	CERT_CompareCerts
add	esp, 8
test	eax, eax
jz	short loc_10007243
pop	esi
mov	eax, 1
pop	ebx
add	esp, 14h
retn
			
mov	ecx, [esp+1Ch+arg_0]
push	ebp
push	edi
push	ecx
call	SECOID_FindOIDTag_Util
mov	edi, [ebx+0F8h]
mov	edx, [ebx+0F0h]
mov	esi, eax
mov	eax, [ebx+0F4h]
add	edi, 7
push	esi
mov	[esp+2Ch+var_C], edx
mov	[esp+2Ch+var_8], eax
shr	edi, 3
call	HASH_GetHashObjectByOidTag
add	esp, 8
test	eax, eax
jz	loc_10007360
mov	ecx, [eax]
push	ecx
push	0
push	0
call	SECITEM_AllocItem_Util
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	loc_10007360
mov	edx, [esp+24h+var_8]
mov	eax, [ebp+4]
push	edi
push	edx
push	eax
push	esi
call	PK11_HashBuf
add	esp, 10h
test	eax, eax
jnz	loc_10007355
mov	eax, [esp+24h+arg_0]
add	eax, 24h
push	eax
push	ebp
call	SECITEM_CompareItem_Util
mov	edi, eax
push	1
neg	edi
push	ebp
sbb	edi, edi
call	SECITEM_FreeItem_Util
add	esp, 10h
inc	edi
jz	loc_10007360
mov	ecx, [ebx+54h]
mov	edx, [ebx+5Ch]
mov	edi, [ebx+58h]
push	esi
mov	[esp+28h+var_C], ecx
mov	[esp+28h+var_4], edx
call	HASH_GetHashObjectByOidTag
add	esp, 4
test	eax, eax
jz	short loc_10007360
mov	eax, [eax]
push	eax
push	0
push	0
call	SECITEM_AllocItem_Util
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_10007360
mov	ecx, [esp+24h+var_4]
mov	eax, [ebp+4]
push	ecx
push	edi
push	eax
push	esi
call	PK11_HashBuf
add	esp, 10h
test	eax, eax
jnz	short loc_10007355
mov	edx, [esp+24h+arg_0]
add	edx, 18h
push	edx
push	ebp
call	SECITEM_CompareItem_Util
mov	edi, eax
push	1
neg	edi
push	ebp
sbb	edi, edi
call	SECITEM_FreeItem_Util
add	esp, 10h
inc	edi
jz	short loc_10007360
pop	edi
pop	ebp
pop	esi
mov	eax, 1
pop	ebx
add	esp, 14h
retn
			
push	1
push	ebp
call	SECITEM_FreeItem_Util
add	esp, 8
			
mov	ecx, ebx
xor	ebp, ebp
call	sub_10006D00
test	eax, eax
jz	loc_1000746F
mov	eax, [esp+24h+arg_8]
mov	ecx, [esp+24h+arg_4]
push	0Bh
push	eax
push	ecx
push	ebx
call	CERT_FindCertIssuer
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	loc_1000746F
push	ebp
push	esi
push	edi
push	ebp
call	CERT_GetSubjectPublicKeyDigest
mov	edx, [edi+54h]
mov	ecx, [edi+5Ch]
mov	[esp+34h+var_10], eax
mov	eax, [edi+58h]
push	esi
mov	[esp+38h+var_C], edx
mov	[esp+38h+var_8], eax
mov	[esp+38h+var_4], ecx
call	HASH_GetHashObjectByOidTag
add	esp, 14h
test	eax, eax
jz	short loc_100073F8
mov	edx, [eax]
push	edx
push	ebp
push	ebp
call	SECITEM_AllocItem_Util
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_100073F8
mov	ecx, [esp+24h+var_4]
mov	edx, [esp+24h+var_8]
mov	eax, [ebx+4]
push	ecx
push	edx
push	eax
push	esi
call	PK11_HashBuf
add	esp, 10h
test	eax, eax
jz	short loc_100073FA
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
			
xor	ebx, ebx
push	edi
call	CERT_DestroyCertificate
mov	edi, [esp+28h+var_10]
add	esp, 4
test	edi, edi
jz	short loc_10007452
test	ebx, ebx
jz	short loc_10007443
mov	esi, [esp+24h+arg_0]
lea	eax, [esi+24h]
push	eax
push	edi
call	SECITEM_CompareItem_Util
neg	eax
sbb	ebp, ebp
add	esi, 18h
push	esi
push	ebx
inc	ebp
call	SECITEM_CompareItem_Util
add	esp, 10h
mov	esi, eax
neg	esi
sbb	esi, esi
push	1
push	edi
inc	esi
call	SECITEM_FreeItem_Util
add	esp, 8
jmp	short loc_10007454
push	1
push	edi
mov	esi, ebp
call	SECITEM_FreeItem_Util
add	esp, 8
jmp	short loc_10007454
mov	esi, ebp
			
test	ebx, ebx
jz	short loc_10007463
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
test	ebp, ebp
jz	short loc_1000746F
test	esi, esi
jnz	loc_10007348
			
push	0FFFFE082h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 14h
retn
align 10h
public CERT_GetOCSPAuthorityInfoAccessLocation
			
			
sub	esp, 0Ch
push	ebx
push	ebp
xor	ebx, ebx
push	esi
push	ebx
push	ebx
push	ebx
mov	[esp+24h+var_C], ebx
xor	ebp, ebp
call	SECITEM_AllocItem_Util
mov	esi, eax
add	esp, 0Ch
mov	[esp+18h+var_4], esi
cmp	esi, ebx
jz	loc_100075B9
mov	eax, [esp+18h+arg_0]
push	esi
push	5Dh
push	eax
call	CERT_FindCertExtension
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jnz	short loc_100074ED
push	0FFFFE075h
call	PORT_SetError_Util
add	esp, 4
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 0Ch
retn
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+18h+var_8], eax
cmp	eax, ebx
jz	loc_100075AE
push	edi
push	esi
push	eax
call	CERT_DecodeAuthInfoAccessExtension
mov	edi, eax
add	esp, 8
cmp	edi, ebx
jz	loc_1000759A
cmp	[edi], ebx
jz	short loc_1000754D
mov	esi, edi
mov	ecx, [esi]
push	ecx
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 82h
jnz	short loc_1000753C
mov	edx, [esi]
mov	eax, [edx+18h]
mov	[esp+1Ch+var_C], eax
inc	ebx
cmp	[edi+ebx*4], ebp
lea	esi, [edi+ebx*4]
jnz	short loc_10007521
mov	eax, [esp+1Ch+var_C]
test	eax, eax
jnz	short loc_1000755C
			
push	0FFFFE075h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1000759A
push	0
push	7
push	eax
call	sub_100427C0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_1000754D
mov	ecx, [esi+8]
inc	ecx
push	ecx
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	short loc_1000759A
mov	edx, [esi+8]
mov	eax, [esi+4]
push	edx		
push	eax		
push	ebp		
call	memcpy
mov	ecx, [esi+8]
add	esp, 0Ch
mov	byte ptr [ecx+ebp], 0
			
mov	edx, [esp+1Ch+var_8]
push	0
push	edx
call	PORT_FreeArena_Util
mov	esi, [esp+24h+var_4]
add	esp, 8
pop	edi
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 0Ch
retn
align 10h
cmp	[esp+arg_8], 0
push	esi
jz	short loc_10007620
mov	eax, [esp+4+arg_0]
push	eax
xor	esi, esi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_100075F2
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_10007603
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_10007620
cmp	dword ptr [esi], 0
jz	short loc_10007620
mov	ecx, [esp+4+arg_C]
mov	dword ptr [ecx], 1
mov	edx, [esi+4]
push	edx
call	PORT_Strdup_Util
add	esp, 4
pop	esi
retn
			
push	ebx
mov	ebx, [esp+8+arg_4]
push	ebp
mov	ebp, [esp+0Ch+arg_C]
push	ebx
mov	dword ptr [ebp+0], 0
call	CERT_GetOCSPAuthorityInfoAccessLocation
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1000767B
mov	eax, dword_100BA008
push	edi
push	eax
call	ds:PR_EnterMonitor
mov	ecx, dword_100BA008
mov	edi, dword_100BA034
push	ecx
call	ds:PR_ExitMonitor
add	esp, 8
test	edi, edi
jz	short loc_1000767A
push	ebx
call	edi 
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1000767A
mov	dword ptr [ebp+0], 1
			
pop	edi
pop	ebp
pop	ebx
mov	eax, esi
pop	esi
retn
align 10h
			
sub	esp, 8
push	eax
lea	ecx, [esp+0Ch+var_8]
push	ecx
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
test	eax, eax
jnz	short loc_100076D0
push	0FFFFE00Ch
call	PORT_SetError_Util
mov	edx, [esp+0Ch+var_4]
add	esp, 4
cmp	edx, [esp+8+arg_4]
jl	short loc_100076CD
jg	short loc_100076C7
mov	eax, [esp+8+var_8]
cmp	eax, [esp+8+arg_0]
jbe	short loc_100076CD
xor	eax, eax
add	esp, 8
retn
			
or	eax, 0FFFFFFFFh
add	esp, 8
retn
align 10h
			
mov	ecx, [esp+arg_0]
mov	eax, [ecx]
sub	eax, 0
jz	short loc_10007729
dec	eax
jz	short loc_10007713
dec	eax
jz	short loc_10007702
push	0FFFFE081h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	0FFFFE07Eh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	eax, [esp+arg_8]
mov	edx, [esp+arg_4]
push	eax
mov	eax, [ecx+4]
push	edx
call	sub_10007690
add	esp, 8
retn
xor	eax, eax
retn
align 10h
			
mov	ecx, [eax+14h]
mov	eax, [ecx]
sub	eax, 0
jz	short loc_10007778
dec	eax
jz	short loc_10007762
dec	eax
jz	short loc_10007751
push	0FFFFE081h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	0FFFFE07Eh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	edx, [esp+arg_4]
mov	eax, [esp+arg_0]
push	edx
push	eax
mov	eax, [ecx+4]
call	sub_10007690
add	esp, 8
retn
xor	eax, eax
retn
align 10h
			
push	ebp
push	esi
mov	esi, [esp+8+arg_0]
push	edi
test	esi, esi
jz	loc_10007884
mov	eax, [esp+0Ch+arg_14]
test	eax, eax
jz	loc_10007884
mov	ebp, [esp+0Ch+arg_10]
test	ebp, ebp
jz	loc_10007884
mov	edi, [esp+0Ch+arg_18]
test	edi, edi
jz	loc_10007884
mov	dword ptr [ebp+0], 0FFFFFFFFh
mov	dword ptr [eax], 0
mov	dword ptr [edi], 0
mov	eax, dword_100BA008
push	ebx
push	eax
call	ds:PR_EnterMonitor
push	esi
mov	ebx, offset dword_100BA020
call	sub_10004B10
add	esp, 8
mov	esi, eax
pop	ebx
test	esi, esi
jz	loc_1000786E
call	ds:PR_Now
cmp	[esi+14h], edx
jl	short loc_1000780F
jg	short loc_100077FE
cmp	[esi+10h], eax
jbe	short loc_1000780F
cmp	dword ptr [esi+18h], 0
mov	eax, 1
jz	short loc_10007811
cmp	dword ptr [esi+1Ch], 2
jnz	short loc_10007811
			
xor	eax, eax
			
neg	eax
sbb	eax, eax
add	eax, 2
mov	[edi], eax
cmp	dword ptr [esi+18h], 0
jz	short loc_1000784A
mov	eax, [esp+0Ch+arg_8]
mov	ecx, [esp+0Ch+arg_4]
push	eax
push	ecx
add	esi, 1Ch
push	esi
call	sub_100076E0
add	esp, 0Ch
mov	[ebp+0], eax
test	eax, eax
jz	short loc_1000786E
call	PORT_GetError_Util
mov	edx, [esp+0Ch+arg_14]
mov	[edx], eax
jmp	short loc_1000786E
cmp	eax, 1
jnz	short loc_10007865
cmp	[esp+0Ch+arg_C], 0
jnz	short loc_10007865
cmp	dword_100BA030,	eax
jnz	short loc_10007865
mov	dword ptr [ebp+0], 0
			
mov	eax, [esi+24h]
mov	ecx, [esp+0Ch+arg_14]
mov	[ecx], eax
			
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
align 10h
			
mov	eax, dword_100BA008
push	esi
push	eax
call	ds:PR_EnterMonitor
mov	edx, dword_100BA008
xor	ecx, ecx
cmp	dword_100BA030,	ecx
push	edx
setz	cl
mov	esi, ecx
call	ds:PR_ExitMonitor
add	esp, 8
mov	eax, esi
pop	esi
retn
align 10h
push	esi
push	edi
mov	edi, [esp+0Ch]
mov	esi, [edi+8]
mov	dword ptr [edi], 0
test	esi, esi
jnz	short loc_100078E9
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [esi+4]
test	eax, eax
jz	short loc_100078F9
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10007909
push	eax
call	PORT_Free_Util
add	esp, 4
push	esi
call	PORT_Free_Util
push	edi
mov	dword ptr [edi+8], 0
call	PORT_Free_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
push	edi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_10007941
or	eax, 0FFFFFFFFh
retn
push	esi
push	0Ch
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10007969
push	10h
call	PORT_ZAlloc_Util
add	esp, 4
push	esi
test	eax, eax
jnz	short loc_1000796E
call	PORT_Free_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
push	edi
mov	dword ptr [esi+4], offset loc_100078D0
mov	[esi+8], eax
call	sub_1003D9B0
add	esp, 8
xor	eax, eax
pop	esi
retn
align 10h
public CERT_SetOCSPDefaultResponder
push	ecx
push	ebx
push	esi
push	edi
mov	edi, [esp+10h+arg_0]
test	edi, edi
jz	loc_10007ABE
mov	ebx, [esp+10h+arg_4]
test	ebx, ebx
jz	loc_10007ABE
mov	esi, [esp+10h+Str]
test	esi, esi
jz	loc_10007ABE
push	ebp
push	esi		
push	edi		
call	CERT_FindCertByNickname
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	short loc_100079E2
push	eax		
push	esi		
call	PK11_FindCertFromNickname
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	short loc_100079E2
pop	ebp
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
			
push	ebx
call	PORT_Strdup_Util
push	esi
mov	ebx, eax
call	PORT_Strdup_Util
add	esp, 8
mov	esi, eax
mov	[esp+14h+arg_0], esi
test	ebx, ebx
jz	loc_10007A83
test	esi, esi
jz	short loc_10007A83
mov	eax, edi
call	sub_10007160
mov	esi, eax
test	esi, esi
jnz	short loc_10007A28
call	sub_10007930
mov	[esp+14h+var_4], eax
test	eax, eax
jnz	short loc_10007A8D
mov	eax, edi
call	sub_10007160
mov	esi, eax
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10007A38
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10007A48
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+14h+arg_0]
mov	[esi+8], eax
mov	eax, [esi+0Ch]
mov	[esi+4], ebx
test	eax, eax
jz	short loc_10007A72
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	[esi+0Ch], ebp
call	CERT_ClearOCSPCache
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
push	ebp
call	CERT_DestroyCertificate
add	esp, 4
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
			
mov	[esp+14h+var_4], 0FFFFFFFFh
jmp	short loc_10007A91
mov	esi, [esp+14h+arg_0]
push	ebp
call	CERT_DestroyCertificate
add	esp, 4
test	ebx, ebx
jz	short loc_10007AA7
push	ebx
call	PORT_Free_Util
add	esp, 4
test	esi, esi
jz	short loc_10007AB4
push	esi
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+14h+var_4]
pop	ebp
pop	edi
pop	esi
pop	ebx
pop	ecx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
align 10h
public CERT_EnableOCSPDefaultResponder
sub	esp, 8
push	ebx
mov	ebx, [esp+0Ch+arg_0]
test	ebx, ebx
jnz	short loc_10007B01
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
push	esi
push	ebx
xor	esi, esi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_10007B18
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_10007B29
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_10007B36
cmp	dword ptr [esi+4], 0
jz	short loc_10007B36
mov	eax, [esi+8]
test	eax, eax
jnz	short loc_10007B4C
			
push	0FFFFE080h
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
push	edi
push	eax		
push	ebx		
call	CERT_FindCertByNickname
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10007B70
push	eax		
mov	eax, [esi+8]
push	eax		
call	PK11_FindCertFromNickname
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10007BBE
lea	ecx, [esp+14h+var_8]
push	ecx
push	0
push	0
push	0
push	1
push	edi
push	ebx
call	CERT_VerifyCertificateNow
add	esp, 1Ch
test	eax, eax
jnz	short loc_10007BB1
mov	eax, [esp+14h+var_8]
and	eax, 45Fh
xor	ecx, ecx
or	eax, ecx
jz	short loc_10007BB1
mov	[esi+0Ch], edi
call	CERT_ClearOCSPCache
pop	edi
mov	dword ptr [esi], 1
pop	esi
xor	eax, eax
pop	ebx
add	esp, 8
retn
			
push	0FFFFE09Ch
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
align 10h
public CERT_DisableOCSPDefaultResponder
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_10007BEB
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
retn
push	edi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jnz	short loc_10007BFA
pop	edi
retn
push	esi
push	edi
xor	esi, esi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_10007C11
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_10007C28
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jnz	short loc_10007C28
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
retn
			
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_10007C44
push	eax
mov	dword ptr [esi+0Ch], 0
call	CERT_DestroyCertificate
add	esp, 4
call	CERT_ClearOCSPCache
mov	dword ptr [esi], 0
pop	esi
xor	eax, eax
pop	edi
retn
align 10h
public CERT_ForcePostMethodForOCSP
mov	eax, dword_100BA008
test	eax, eax
jnz	short loc_10007C6A
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	eax
call	ds:PR_EnterMonitor
mov	ecx, dword_100BA008
mov	eax, [esp+4+arg_0]
push	ecx
mov	dword_100BA038,	eax
call	ds:PR_ExitMonitor
add	esp, 8
xor	eax, eax
retn
align 10h
public CERT_GetOCSPResponseStatus
			
			
mov	eax, [esp+arg_0]
mov	eax, [eax+10h]
test	eax, eax
jnz	short loc_10007C9C
retn
dec	eax
cmp	eax, 5		
ja	short loc_10007CFE 
jmp	ds:off_10007D10[eax*4] 
			
push	0FFFFE078h	
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
			
push	0FFFFE079h	
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
			
push	0FFFFE07Ah	
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
			
push	0FFFFE07Bh	
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
			
push	0FFFFE07Ch	
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
			
			
push	0FFFFE07Dh	
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
dd offset loc_10007CBA	
dd offset loc_10007CCB
dd offset loc_10007CFE
dd offset loc_10007CDC
dd offset loc_10007CED
align 10h
			
sub	esp, 8
push	ebx
push	ebp
mov	ebp, [esp+10h+arg_8]
push	esi
push	edi
mov	edi, eax
test	ebp, ebp
jz	short loc_10007D48
mov	dword ptr [ebp+0], 0
mov	eax, dword_100BA008
push	eax
call	ds:PR_EnterMonitor
mov	ebx, [esp+1Ch+arg_0]
push	edi
call	sub_10004B10
mov	ebx, [esp+20h+arg_4]
add	esp, 8
mov	esi, eax
mov	[esp+18h+arg_8], esi
test	ebx, ebx
jnz	short loc_10007D9F
test	esi, esi
jz	short loc_10007DA3
cmp	[esi+18h], ebx
jz	short loc_10007D9F
mov	eax, [esi+1Ch]
cmp	eax, 1
jz	short loc_10007D85
cmp	eax, 2
jnz	short loc_10007D9F
mov	ecx, dword_100BA008
push	ecx
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
			
test	esi, esi
jnz	short loc_10007E1C
mov	eax, edi
test	ebp, ebp
jz	short loc_10007DE4
mov	dword ptr [ebp+0], 1
mov	ebp, [esp+18h+arg_0]
lea	ecx, [esp+18h+arg_8]
push	ecx
push	ebp
mov	ebx, eax
call	sub_10004D50
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10007E12
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
call	sub_10005680
test	eax, eax
jnz	short loc_10007DB0
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
push	0FFFFE890h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
mov	esi, [esp+18h+arg_8]
mov	ebx, [esp+18h+arg_4]
jmp	short loc_10007E20
mov	ebp, [esp+18h+arg_0]
test	ebx, ebx
jz	short loc_10007E85
lea	eax, [ebx+18h]
push	eax
lea	ecx, [esp+1Ch+var_8]
push	ecx
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
cmp	byte ptr [esi+28h], 0
jz	short loc_10007E53
test	eax, eax
jnz	short loc_10007EA8
mov	edx, [esi+34h]
cmp	edx, [esp+18h+var_4]
jg	short loc_10007EA8
jl	short loc_10007E53
mov	eax, [esi+30h]
cmp	eax, [esp+18h+var_8]
jnb	short loc_10007EA8
			
push	ebx
call	sub_10004E00
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10007EA8
mov	eax, esi
mov	ecx, ebp
call	sub_10004B80
mov	ecx, dword_100BA008
push	ecx
call	ds:PR_ExitMonitor
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
call	PORT_GetError_Util
mov	[esi+24h], eax
cmp	dword ptr [esi+18h], 0
jz	short loc_10007EA8
mov	edx, [esi+18h]
push	0
push	edx
call	PORT_FreeArena_Util
add	esp, 8
mov	dword ptr [esi+18h], 0
			
push	esi
call	sub_10004EC0
mov	eax, ebp
call	sub_10004BF0
mov	eax, dword_100BA008
push	eax
call	ds:PR_ExitMonitor
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
align 10h
sub	esp, 110h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+110h+var_4], eax
mov	eax, [esp+110h+arg_0]
push	ebp
mov	ebp, [esp+114h+arg_4]
push	edi
mov	[esp+118h+var_108], eax
mov	edi, ecx
mov	[esp+118h+var_110], 0
test	ebp, ebp
jz	loc_10008061
cmp	byte ptr [ebp+0], 0
jz	loc_10008061
mov	eax, ebp
lea	edx, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10007F20
sub	eax, edx
push	ebx
mov	ebx, eax
cmp	byte ptr [ebx+ebp-1], 2Fh
mov	[esp+11Ch+var_10C], ebx
jz	short loc_10007F3F
mov	[esp+11Ch+var_110], 1
push	esi
mov	esi, [edi+8]
lea	ecx, [esi+2]
mov	eax, 0AAAAAAABh
mul	ecx
shr	edx, 1
add	edx, edx
add	edx, edx
cmp	edx, 0FFh
ja	loc_10007FEE
push	100h		
lea	edx, [esp+124h+Dst]
push	0		
push	edx		
call	memset
mov	ecx, [edi+4]
lea	eax, [esp+12Ch+Dst]
push	eax
push	esi
push	ecx
call	PL_Base64Encode
add	esp, 18h
xor	esi, esi
cmp	[esp+120h+Dst],	0
lea	edi, [esp+120h+Dst]
jz	short loc_10007FC2
nop
mov	bl, [edi]
movsx	edx, bl
push	edx		
call	ds:isspace
add	esp, 4
test	eax, eax
jnz	short loc_10007FB8
cmp	bl, 2Bh
jz	short loc_10007FB5
cmp	bl, 2Fh
jz	short loc_10007FB5
cmp	bl, 3Dh
jz	short loc_10007FB5
inc	esi
jmp	short loc_10007FB8
			
add	esi, 3
			
inc	edi
cmp	byte ptr [edi],	0
jnz	short loc_10007F90
mov	ebx, [esp+120h+var_10C]
mov	eax, [esp+120h+var_110]
mov	ecx, [esp+120h+var_108]
add	esi, ebx
lea	eax, [esi+eax+1]
push	eax
test	ecx, ecx
jz	short loc_10007FE0
push	ecx
call	PORT_ArenaAlloc_Util
add	esp, 8
jmp	short loc_10007FE8
call	PORT_Alloc_Util
add	esp, 4
mov	ebx, eax
test	ebx, ebx
jnz	short loc_10008009
xor	eax, eax
pop	esi
pop	ebx
pop	edi
pop	ebp
mov	ecx, [esp+110h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 110h
retn
mov	edx, ebx
mov	eax, ebp
sub	edx, ebp
nop
mov	cl, [eax]
mov	[edx+eax], cl
inc	eax
test	cl, cl
jnz	short loc_10008010
mov	eax, [esp+120h+var_10C]
add	eax, ebx
cmp	eax, ebx
jbe	short loc_10008034
cmp	[esp+120h+var_110], 0
jz	short loc_10008034
mov	edx, 2Fh
mov	[eax], dx
inc	eax
			
push	eax
lea	eax, [esp+124h+Dst]
push	eax
call	sub_10006BE0
mov	edi, [esp+128h+var_108]
push	edi
xor	eax, eax
call	sub_10006C70
add	esp, 0Ch
mov	esi, eax
test	edi, edi
jnz	short loc_1000805D
push	ebx
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
jmp	short loc_10007FF0
			
mov	ecx, [esp+118h+var_4]
pop	edi
pop	ebp
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 110h
retn
align 10h
public CERT_PostOCSPRequest
mov	eax, [esp+arg_0]
push	ebx
mov	ebx, [esp+4+arg_4]
push	eax
mov	eax, [esp+8+arg_8]
call	sub_10006C70
add	esp, 4
pop	ebx
retn
align 10h
			
sub	esp, 10h
mov	edx, [esp+10h+arg_4]
mov	ecx, [edx+18h]
push	ebx
push	ebp
xor	ebp, ebp
mov	[esp+18h+var_10], ebp
mov	eax, [ecx]
xor	ebx, ebx
dec	eax
push	esi
jz	short loc_100080DE
dec	eax
jz	short loc_100080D3
push	0FFFFE081h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
xor	esi, esi
add	ecx, 4
mov	[esp+1Ch+arg_4], ecx
jmp	short loc_100080EA
add	edx, 0Ch
mov	esi, 1
mov	[esp+1Ch+arg_4], edx
mov	eax, [esp+1Ch+arg_8]
mov	ecx, [eax+24h]
push	edi
mov	edi, [esp+20h+arg_0]
cmp	ecx, ebp
jz	short loc_10008128
cmp	[ecx], ebx
jz	short loc_10008108
mov	eax, ecx
add	eax, 4
inc	ebp
cmp	[eax], ebx
jnz	short loc_10008100
push	0
push	0
push	0
lea	edx, [esp+2Ch+var_10]
push	edx
push	ecx
push	ebp
push	0Ah
push	edi
call	CERT_ImportCerts
add	esp, 20h
test	eax, eax
jnz	loc_1000825B
test	esi, esi
jz	short loc_100081A8
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_1000825B
mov	eax, [esp+20h+arg_4]
push	eax
push	offset dword_100A1E38
lea	ecx, [esp+28h+var_C]
push	ecx
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_10008188
call	PORT_GetError_Util
cmp	eax, 0FFFFE009h
jnz	short loc_10008198
push	0FFFFE081h
call	PORT_SetError_Util
add	esp, 4
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
jmp	loc_1000825B
lea	edx, [esp+20h+var_C]
push	edx
push	edi
call	CERT_FindCertByName
add	esp, 8
mov	ebx, eax
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
jmp	loc_1000825B
push	edi
xor	esi, esi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_100081BE
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_100081CF
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_100081EB
cmp	[esi], ebx
jz	short loc_100081EB
mov	esi, [esi+0Ch]
test	esi, esi
jz	short loc_100081EB
mov	eax, [esp+20h+arg_4]
push	eax
call	sub_10006DA0
add	esp, 4
test	eax, eax
jnz	short loc_10008204
			
mov	esi, [esp+20h+arg_C]
test	esi, esi
jz	short loc_1000820F
mov	ecx, [esp+20h+arg_4]
push	ecx
call	sub_10006DA0
add	esp, 4
test	eax, eax
jz	short loc_1000820F
push	esi
call	CERT_DupCertificate
mov	ebx, eax
add	esp, 4
			
xor	edi, edi
test	ebx, ebx
jnz	short loc_1000825B
cmp	edi, ebp
jge	short loc_1000824A
mov	edx, [esp+20h+arg_4]
mov	eax, [esp+20h+var_10]
mov	esi, [eax+edi*4]
push	edx
call	sub_10006DA0
add	esp, 4
test	eax, eax
jz	short loc_10008243
mov	ecx, [esp+20h+var_10]
mov	edx, [ecx+edi*4]
push	edx
call	CERT_DupCertificate
add	esp, 4
mov	ebx, eax
inc	edi
test	ebx, ebx
jz	short loc_10008215
jmp	short loc_1000825B
test	ebx, ebx
jnz	short loc_1000825B
push	0FFFFE073h
call	PORT_SetError_Util
add	esp, 4
			
mov	eax, [esp+20h+var_10]
pop	edi
test	eax, eax
jz	short loc_1000826E
push	ebp
push	eax
call	CERT_DestroyCertArray
add	esp, 8
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
add	esp, 10h
retn
align 10h
public CERT_VerifyOCSPResponseSignature
			
sub	esp, 8
mov	eax, [esp+8+arg_0]
mov	eax, [eax+14h]
push	ebx
push	edi
mov	edi, [eax+1Ch]
mov	ebx, [edi+0Ch]
mov	[esp+10h+arg_0], edi
test	eax, eax
jz	short loc_100082A8
cmp	dword ptr [eax+0Ch], 83h
jnz	short loc_100082A8
add	edi, 10h
jnz	short loc_100082BE
			
push	0FFFFE09Dh
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
cmp	dword ptr [edi+2Ch], 0
push	esi
jz	short loc_10008301
cmp	dword ptr [edi+30h], 0
jnz	short loc_100082EB
mov	esi, [esp+14h+arg_C]
test	esi, esi
jz	short loc_100082F7
mov	ecx, [edi+28h]
push	ecx
call	CERT_DupCertificate
add	esp, 4
mov	[esi], eax
mov	eax, [edi+30h]
pop	esi
pop	edi
pop	ebx
add	esp, 8
retn
mov	edx, [edi+34h]
push	edx
call	PORT_SetError_Util
add	esp, 4
mov	eax, [edi+30h]
pop	esi
pop	edi
pop	ebx
add	esp, 8
retn
mov	eax, [esp+14h+arg_10]
push	ebp
mov	ebp, [esp+18h+arg_4]
push	eax
push	edi
push	ebx
push	ebp
call	sub_100080A0
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_10008341
or	ebx, 0FFFFFFFFh
call	PORT_GetError_Util
cmp	eax, 0FFFFE073h
jnz	loc_100083C7
push	0FFFFE090h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_100083C7
add	ebx, 1Ch
lea	ecx, [esp+18h+var_8]
push	ebx
push	ecx
mov	dword ptr [edi+2Ch], 1
call	DER_GeneralizedTimeToTime_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_100083C7
push	esi
push	ebp
call	sub_10007190
add	esp, 8
test	eax, eax
jnz	short loc_100083B1
push	eax
push	esi
call	CERT_IsCACert
mov	edx, [esp+20h+arg_8]
mov	ecx, [esp+20h+var_4]
push	ebx
push	edx
mov	edx, [esp+28h+var_8]
neg	eax
push	1
push	ecx
sbb	eax, eax
push	edx
neg	eax
add	eax, 0Ah
push	eax
push	1
push	esi
push	ebp
call	sub_1000BC50
mov	ebx, eax
add	esp, 2Ch
test	ebx, ebx
jz	short loc_100083B1
push	0FFFFE090h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_100083C7
			
mov	eax, [esp+18h+arg_8]
mov	ecx, [esp+18h+arg_0]
push	eax
push	ecx
push	edi
push	esi
call	sub_10006F80
add	esp, 10h
mov	ebx, eax
			
cmp	dword ptr [edi+2Ch], 0
pop	ebp
jz	short loc_100083D1
mov	[edi+30h], ebx
test	ebx, ebx
jz	short loc_100083F3
call	PORT_GetError_Util
mov	[edi+34h], eax
test	esi, esi
jz	short loc_10008409
push	esi
call	CERT_DestroyCertificate
add	esp, 4
pop	esi
pop	edi
mov	eax, ebx
pop	ebx
add	esp, 8
retn
mov	[edi+28h], esi
mov	edi, [esp+14h+arg_C]
test	edi, edi
jz	short loc_10008409
push	esi
call	CERT_DupCertificate
mov	[edi], eax
add	esp, 4
			
pop	esi
pop	edi
mov	eax, ebx
pop	ebx
add	esp, 8
retn
align 10h
			
mov	eax, [eax+14h]
sub	esp, 8
cmp	dword ptr [eax], 1
jnz	short loc_10008474
mov	eax, [eax+4]
push	eax
lea	ecx, [esp+0Ch+var_8]
push	ecx
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
test	eax, eax
jnz	short loc_10008462
push	0FFFFE00Ch
call	PORT_SetError_Util
mov	edx, [esp+0Ch+var_4]
add	esp, 4
cmp	edx, [esp+8+arg_4]
jg	short loc_10008474
jl	short loc_10008462
mov	eax, [esp+8+var_8]
cmp	eax, [esp+8+arg_0]
ja	short loc_10008474
			
call	PORT_GetError_Util
cmp	eax, 0FFFFE00Ch
jnz	short loc_10008474
xor	eax, eax
add	esp, 8
retn
			
push	0FFFFE084h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
add	esp, 8
retn
align 10h
mov	eax, [esp+arg_0]
mov	ecx, [eax+14h]
sub	esp, 18h
cmp	dword ptr [ecx], 2
push	esi
mov	esi, [eax+4]
jnz	short loc_100084AA
xor	eax, eax
pop	esi
add	esp, 18h
retn
add	eax, 18h
push	eax
lea	edx, [esp+20h+var_18]
push	edx
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
test	eax, eax
jnz	loc_100085FB
mov	eax, [esp+1Ch+var_14]
mov	ecx, [esp+1Ch+var_18]
push	eax
mov	eax, [esp+20h+arg_4]
push	ecx
mov	ecx, [esp+24h+arg_8]
push	esi
call	sub_100071F0
add	esp, 0Ch
cmp	eax, 1
jz	short loc_100084EB
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 18h
retn
push	ebx
push	ebp
push	edi
call	ds:PR_Now
mov	edi, eax
mov	eax, dword_100BA03C
mov	ebp, edx
mov	edx, 0F4240h
mul	edx
mov	ebx, eax
mov	esi, edx
mov	ecx, ebx
add	ecx, edi
mov	eax, esi
mov	[esp+28h+var_10], edi
mov	edi, [esp+28h+var_14]
adc	eax, ebp
cmp	edi, eax
jg	loc_100085E8
mov	eax, [esp+28h+var_18]
jl	short loc_1000852E
cmp	eax, ecx
ja	loc_100085E8
cmp	[esp+28h+arg_10], edi
jl	loc_100085E8
jg	short loc_10008544
cmp	[esp+28h+arg_C], eax
jb	loc_100085E8
mov	ecx, [esp+28h+arg_0]
mov	ecx, [ecx+24h]
test	ecx, ecx
jz	short loc_100085A9
push	ecx
lea	edx, [esp+2Ch+var_8]
push	edx
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
test	eax, eax
jnz	loc_100085F8
mov	edi, [esp+28h+var_8]
mov	edx, [esp+28h+var_4]
mov	ecx, edi
add	ecx, ebx
mov	eax, edx
adc	eax, esi
cmp	eax, ebp
jl	short loc_1000858F
jg	short loc_10008581
cmp	ecx, [esp+28h+var_10]
jb	short loc_1000858F
cmp	[esp+28h+arg_10], edx
jl	short loc_100085DE
jg	short loc_1000858F
cmp	[esp+28h+arg_C], edi
jbe	short loc_100085DE
			
mov	eax, [esp+28h+var_10]
push	ebp
push	eax
mov	eax, [esp+30h+arg_0]
call	sub_10008420
add	esp, 8
pop	edi
pop	ebp
pop	ebx
pop	esi
add	esp, 18h
retn
mov	esi, eax
call	ds:PR_Now
add	esi, 1DD76000h
adc	edi, 14h
cmp	edx, edi
jl	short loc_100085DE
jg	short loc_100085C4
cmp	eax, esi
jbe	short loc_100085DE
mov	ecx, [esp+28h+var_10]
mov	eax, [esp+28h+arg_0]
push	ebp
push	ecx
call	sub_10008420
add	esp, 8
pop	edi
pop	ebp
pop	ebx
pop	esi
add	esp, 18h
retn
			
pop	edi
pop	ebp
pop	ebx
xor	eax, eax
pop	esi
add	esp, 18h
retn
			
push	0FFFFE083h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
pop	ebp
pop	ebx
pop	esi
add	esp, 18h
retn
			
push	esi
mov	esi, [esp+4+arg_4]
test	esi, esi
jz	short loc_10008648
mov	eax, dword_100BA008
push	eax
call	ds:PR_EnterMonitor
add	esp, 4
cmp	dword_100BA010,	0
jl	short loc_10008638
mov	ecx, [esp+4+arg_8]
mov	eax, [esp+4+arg_0]
push	ecx
push	esi
push	offset dword_100BA020
call	sub_10007D30
add	esp, 0Ch
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
add	esp, 4
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_4]
mov	ecx, [eax+14h]
mov	edx, [ecx+1Ch]
sub	esp, 8
push	esi
mov	esi, [edx+0Ch]
test	esi, esi
jnz	short loc_1000866D
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
lea	eax, [esi+1Ch]
push	eax
lea	ecx, [esp+10h+var_8]
push	ecx
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
test	eax, eax
jnz	short loc_100086C1
mov	edx, [esi+28h]
push	ebx
mov	ebx, [esp+10h+arg_8]
push	edx
call	sub_10007050
add	esp, 4
mov	esi, eax
pop	ebx
test	esi, esi
jz	short loc_10008665
mov	eax, [esp+0Ch+var_4]
mov	ecx, [esp+0Ch+var_8]
mov	edx, [esp+0Ch+arg_C]
push	eax
mov	eax, [esp+10h+arg_0]
push	ecx
push	edx
push	eax
push	esi
call	sub_10008490
add	esp, 14h
test	eax, eax
jnz	short loc_100086C1
mov	ecx, [esp+0Ch+arg_18]
mov	[ecx], esi
			
pop	esi
add	esp, 8
retn
align 10h
push	ecx
mov	ecx, [esp+4+arg_C]
mov	edx, [esp+4+arg_8]
push	ebx
mov	ebx, [esp+8+arg_10]
push	ebp
push	esi
push	edi
mov	edi, [esp+14h+arg_14]
lea	eax, [esp+14h+var_4]
push	eax
mov	eax, [esp+18h+arg_4]
push	edi
push	ebx
push	ecx
mov	ecx, [esp+24h+arg_0]
push	edx
push	eax
xor	ebp, ebp
push	ecx
mov	[esp+30h+var_4], ebp
call	sub_10008650
mov	esi, eax
add	esp, 1Ch
test	esi, esi
jnz	short loc_10008756
mov	edx, [esp+14h+var_4]
mov	ecx, [edx+14h]
mov	eax, [ecx]
sub	eax, esi
jz	short loc_10008752
dec	eax
jz	short loc_10008743
dec	eax
jz	short loc_10008731
push	0FFFFE081h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
jmp	short loc_10008754
push	0FFFFE07Eh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
jmp	short loc_10008754
mov	eax, [ecx+4]
push	edi
push	ebx
call	sub_10007690
add	esp, 8
jmp	short loc_10008754
xor	eax, eax
			
mov	esi, eax
mov	edi, [esp+14h+arg_18]
test	edi, edi
jz	short loc_100087A8
mov	eax, dword_100BA008
push	eax
call	ds:PR_EnterMonitor
add	esp, 4
cmp	dword_100BA010,	ebp
jl	short loc_1000878E
mov	ecx, [esp+14h+var_4]
mov	eax, [esp+14h+arg_8]
push	edi
push	ecx
push	offset dword_100BA020
call	sub_10007D30
add	esp, 0Ch
mov	ebp, eax
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
mov	eax, [esp+18h+arg_1C]
add	esp, 4
test	eax, eax
jz	short loc_100087A8
mov	[eax], ebp
			
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
			
mov	eax, dword_100BA008
push	esi
push	eax
xor	esi, esi
call	ds:PR_EnterMonitor
add	esp, 4
cmp	dword_100BA010,	esi
jl	short loc_100087E3
mov	ecx, [esp+4+arg_4]
mov	eax, [esp+4+arg_0]
push	ecx
push	esi
push	offset dword_100BA020
call	sub_10007D30
add	esp, 0Ch
mov	esi, eax
mov	edx, dword_100BA008
push	edx
call	ds:PR_ExitMonitor
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
			
push	ebx
push	ebp
push	esi
mov	ebx, eax
xor	esi, esi
xor	ebp, ebp
test	ebx, ebx
jz	loc_100088EE
cmp	byte ptr [ebx],	0
jz	loc_100088EE
mov	eax, [esp+0Ch+arg_4]
push	83h
push	eax
call	CERT_AddOCSPAcceptableResponses
add	esp, 8
test	eax, eax
jnz	loc_100088EE
mov	ecx, [esp+0Ch+arg_8]
mov	edx, [esp+0Ch+arg_4]
push	ecx
push	edx
push	eax
call	CERT_EncodeOCSPRequest
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	loc_100088EE
mov	ecx, offset aGet 
mov	eax, edi
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10008878
test	dl, dl
jz	short loc_10008874
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10008878
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10008858
xor	eax, eax
jmp	short loc_1000887D
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_10008893
mov	eax, [esp+0Ch+arg_0]
push	ebx
push	eax
mov	ecx, esi
call	sub_10007ED0
add	esp, 8
jmp	short loc_100088D8
mov	ecx, offset aPost 
mov	eax, edi
lea	ebx, [ebx+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_100088C0
test	dl, dl
jz	short loc_100088BC
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_100088C0
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_100088A0
xor	eax, eax
jmp	short loc_100088C5
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_100088EE
mov	ecx, [esp+0Ch+arg_0]
push	ecx
mov	eax, esi
call	sub_10006C70
add	esp, 4
mov	ebp, eax
test	ebp, ebp
jz	short loc_100088EE
mov	eax, [esp+0Ch+arg_C]
test	eax, eax
jz	short loc_100088EE
mov	edx, [esp+0Ch+arg_4]
mov	[eax], edx
jmp	short loc_100088FF
			
mov	eax, [esp+0Ch+arg_4]
test	eax, eax
jz	short loc_100088FF
push	eax
call	CERT_DestroyOCSPRequest
add	esp, 4
			
test	esi, esi
jz	short loc_1000890E
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
push	esi
push	edi
call	sub_10005A70
mov	esi, eax
test	esi, esi
jz	short loc_10008962
mov	eax, [esp+8+arg_14]
mov	ecx, [esp+8+arg_8]
mov	edx, [esp+8+arg_4]
mov	edi, [esi]
push	eax
push	ecx
push	edx
call	sub_100059F0
mov	ecx, [esi+4]
mov	[ecx+14h], eax
mov	edx, [esi+4]
add	esp, 0Ch
cmp	dword ptr [edx+14h], 0
jnz	short loc_10008967
mov	eax, [esi]
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
mov	ecx, [esp+8+arg_1C]
mov	edx, [esp+8+arg_18]
mov	eax, [esp+8+arg_0]
mov	edi, [esp+8+arg_10]
push	ecx
push	edx
push	esi
push	eax
mov	eax, [esp+18h+arg_C]
call	sub_10008800
add	esp, 10h
pop	edi
pop	esi
retn
align 10h
			
push	ecx
mov	eax, [esp+4+arg_1C]
push	esi
or	esi, 0FFFFFFFFh
mov	[esp+8+var_4], 0
test	eax, eax
jz	loc_10008A68
test	edi, edi
jz	loc_10008A68
mov	dword ptr [eax], 0
mov	eax, [esp+8+arg_18]
push	eax
call	CERT_DecodeOCSPResponse
add	esp, 4
mov	[edi], eax
test	eax, eax
jz	loc_10008A68
push	eax
call	CERT_GetOCSPResponseStatus
add	esp, 4
test	eax, eax
jnz	loc_10008A63
mov	ecx, [esp+8+arg_C]
mov	edx, [esp+8+arg_8]
push	ebx
push	ebp
mov	ebp, [esp+10h+arg_10]
push	0Bh
push	ebp
push	ecx
push	edx
call	CERT_FindCertIssuer
mov	ecx, [esp+20h+arg_14]
mov	edx, [esp+20h+arg_0]
mov	ebx, eax
push	ebx
lea	eax, [esp+24h+var_4]
push	eax
mov	eax, [edi]
push	ecx
push	edx
push	eax
call	CERT_VerifyOCSPResponseSignature
mov	esi, eax
add	esp, 24h
test	esi, esi
jnz	short loc_10008A43
mov	ecx, [esp+10h+arg_1C]
mov	edx, [esp+10h+arg_C]
mov	eax, [esp+10h+arg_4]
push	ecx
mov	ecx, [edi]
push	ebp
mov	ebp, [esp+18h+var_4]
push	edx
mov	edx, [esp+1Ch+arg_0]
push	ebp
push	eax
push	ecx
push	edx
call	sub_10008650
add	esp, 1Ch
mov	esi, eax
jmp	short loc_10008A47
mov	ebp, [esp+10h+var_4]
test	ebx, ebx
jz	short loc_10008A54
push	ebx
call	CERT_DestroyCertificate
add	esp, 4
test	ebp, ebp
jz	short loc_10008A61
push	ebp
call	CERT_DestroyCertificate
add	esp, 4
pop	ebp
pop	ebx
mov	eax, esi
pop	esi
pop	ecx
retn
			
or	eax, 0FFFFFFFFh
pop	esi
pop	ecx
retn
align 10h
public CERT_GetOCSPStatusForCertID
mov	eax, [esp+arg_14]
mov	ecx, [esp+arg_10]
mov	edx, [esp+arg_C]
push	0
push	0
push	eax
mov	eax, [esp+0Ch+arg_8]
push	ecx
mov	ecx, [esp+10h+arg_4]
push	edx
mov	edx, [esp+14h+arg_0]
push	eax
push	ecx
push	edx
call	sub_100086D0
add	esp, 20h
retn
align 10h
public CERT_GetEncodedOCSPResponse
mov	eax, [esp+arg_18]
mov	ecx, [esp+arg_14]
mov	edx, [esp+arg_10]
push	eax
mov	eax, [esp+4+arg_C]
push	ecx
mov	ecx, [esp+8+arg_4]
push	edx
push	eax
push	ecx
call	CERT_CreateOCSPRequest
add	esp, 14h
test	eax, eax
jnz	short loc_10008AC6
retn
mov	edx, [esp+arg_20]
mov	ecx, [esp+arg_1C]
push	edi
push	edx
mov	edx, [esp+8+arg_0]
push	ecx
push	eax
mov	eax, [esp+10h+arg_8]
push	edx
mov	edi, offset aPost 
call	sub_10008800
add	esp, 10h
pop	edi
retn
align 10h
public CERT_CacheOCSPResponseFromSideChannel
sub	esp, 14h
xor	eax, eax
push	edi
mov	edi, [esp+18h+arg_4]
mov	[esp+18h+var_8], eax
mov	[esp+18h+var_14], 0FFFFFFFFh
mov	[esp+18h+var_C], eax
mov	[esp+18h+var_10], eax
cmp	edi, eax
jz	loc_10008C0A
cmp	[esp+18h+arg_10], eax
jz	loc_10008C0A
push	ebx
mov	ebx, [esp+1Ch+arg_C]
push	ebp
mov	ebp, [esp+20h+arg_8]
push	esi
push	ebx
push	ebp
push	edi
call	CERT_CreateOCSPCertID
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10008B47
or	eax, 0FFFFFFFFh
pop	esi
pop	ebp
pop	ebx
pop	edi
add	esp, 14h
retn
lea	eax, [esp+24h+arg_4]
push	eax
lea	ecx, [esp+28h+var_4]
push	ecx
lea	edx, [esp+2Ch+var_14]
push	edx
push	1
push	ebx
push	ebp
push	esi
call	sub_10007780
add	esp, 1Ch
test	eax, eax
jnz	short loc_10008B87
cmp	[esp+24h+var_14], eax
jnz	short loc_10008B87
cmp	[esp+24h+arg_4], 1
jnz	short loc_10008B87
push	esi
call	CERT_DestroyOCSPCertID
add	esp, 4
pop	esi
pop	ebp
pop	ebx
xor	eax, eax
pop	edi
add	esp, 14h
retn
			
mov	ecx, [esp+24h+arg_10]
mov	edx, [esp+24h+arg_14]
lea	eax, [esp+24h+var_10]
push	eax
mov	eax, [esp+28h+arg_0]
push	ecx
push	edx
push	ebx
push	ebp
push	edi
push	esi
push	eax
lea	edi, [esp+44h+var_C]
call	sub_10008990
mov	edi, eax
add	esp, 20h
test	edi, edi
jnz	short loc_10008BD1
push	ebx
mov	ebx, [esp+28h+var_10]
push	ebp
mov	eax, ebx
call	sub_10007730
lea	ecx, [esp+2Ch+var_8]
push	ecx
push	ebx
push	esi
mov	ebp, eax
call	sub_10008600
add	esp, 14h
jmp	short loc_10008BD5
mov	ebp, [esp+24h+var_14]
mov	eax, [esp+24h+var_C]
test	eax, eax
jz	short loc_10008BE6
push	eax
call	CERT_DestroyOCSPResponse
add	esp, 4
cmp	[esp+24h+var_8], 0
jnz	short loc_10008BF6
push	esi
call	CERT_DestroyOCSPCertID
add	esp, 4
mov	eax, ebp
test	edi, edi
jz	loc_10008B3F
pop	esi
pop	ebp
pop	ebx
mov	eax, edi
pop	edi
add	esp, 14h
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 14h
retn
align 10h
sub	esp, 24h
mov	eax, [esp+24h+arg_18]
push	ebp
push	esi
xor	esi, esi
xor	ebp, ebp
mov	[esp+2Ch+var_14], esi
mov	[esp+2Ch+var_4], 0FFFFFFFFh
mov	[esp+2Ch+var_10], esi
mov	[esp+2Ch+var_24], ebp
cmp	eax, esi
jz	loc_10008EE1
mov	ecx, [esp+2Ch+arg_1C]
cmp	ecx, esi
jz	loc_10008EE1
mov	[eax], esi
mov	dword ptr [ecx], 0FFFFFFFFh
mov	eax, dword_100BA008
cmp	eax, esi
jnz	short loc_10008C7C
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 24h
retn
push	ebx
push	edi
mov	edi, ds:PR_EnterMonitor
push	eax
call	edi 
mov	ecx, dword_100BA008
mov	ebx, ds:PR_ExitMonitor
xor	eax, eax
cmp	dword_100BA038,	esi
push	ecx
setnz	al
mov	[esp+3Ch+var_18], eax
call	ebx 
mov	edx, [esp+3Ch+arg_0]
push	edx
call	PK11_IsReadOnly
add	esp, 0Ch
test	eax, eax
jz	short loc_10008CBD
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_10008CCE
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_10008CEC
cmp	[esi], ebp
jz	short loc_10008CEC
mov	eax, [esi+4]
push	eax
mov	[esp+38h+var_1C], 1
call	PORT_Strdup_Util
add	esp, 4
mov	[esp+34h+var_20], eax
jmp	short loc_10008D3D
			
mov	ecx, [esp+34h+arg_8]
push	ecx
mov	[esp+38h+var_1C], ebp
call	CERT_GetOCSPAuthorityInfoAccessLocation
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10008D39
mov	edx, dword_100BA008
push	edx
call	edi 
mov	eax, dword_100BA008
mov	edi, dword_100BA034
push	eax
call	ebx 
add	esp, 8
test	edi, edi
jz	short loc_10008D39
mov	ecx, [esp+34h+arg_8]
push	ecx
call	edi 
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10008D39
mov	[esp+34h+var_1C], 1
			
mov	[esp+34h+var_20], esi
cmp	[esp+34h+var_20], ebp
jnz	short loc_10008D80
call	PORT_GetError_Util
cmp	eax, 0FFFFE023h
jz	short loc_10008D61
cmp	eax, 0FFFFE075h
jz	short loc_10008D61
pop	edi
pop	ebx
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 24h
retn
			
push	0
call	PORT_SetError_Util
mov	edx, [esp+38h+arg_1C]
add	esp, 4
pop	edi
pop	ebx
pop	esi
mov	[edx], ebp
xor	eax, eax
pop	ebp
add	esp, 24h
retn
jmp	short loc_10008D80
align 10h
			
mov	eax, [esp+34h+arg_1C]
xor	ecx, ecx
mov	dword ptr [eax], 0FFFFFFFFh
mov	[esp+34h+var_C], ecx
mov	[esp+34h+var_8], ecx
mov	eax, offset aGet 
cmp	[esp+34h+var_18], ecx
jz	short loc_10008DA4
mov	eax, offset aPost 
mov	edi, [esp+34h+arg_14]
mov	ebx, [esp+34h+arg_4]
lea	edx, [esp+34h+var_14]
push	edx
mov	edx, [esp+38h+var_1C]
push	edi
push	edx
mov	edx, [esp+40h+arg_8]
push	eax
mov	eax, [esp+44h+var_20]
push	eax
push	edx
push	ebx
push	ecx
call	sub_10008920
mov	esi, eax
add	esp, 20h
test	esi, esi
jz	short loc_10008E30
mov	ecx, [esp+34h+arg_10]
mov	edx, [esp+34h+arg_C]
lea	eax, [esp+34h+var_24]
push	eax
mov	eax, [esp+38h+arg_8]
push	esi
push	edi
push	ecx
mov	ecx, [esp+44h+arg_0]
push	edx
push	eax
push	ebx
push	ecx
lea	edi, [esp+54h+var_10]
call	sub_10008990
mov	ebp, [esp+54h+var_24]
add	esp, 20h
mov	[esp+34h+var_4], eax
test	eax, eax
jnz	short loc_10008E30
mov	edx, [ebp+14h]
cmp	dword ptr [edx], 1
ja	short loc_10008E16
mov	[esp+34h+var_C], 1
mov	eax, [esp+34h+arg_10]
mov	ecx, [esp+34h+arg_C]
push	eax
push	ecx
mov	eax, ebp
call	sub_10007730
mov	edx, [esp+3Ch+arg_1C]
add	esp, 8
mov	[edx], eax
			
cmp	[esp+34h+var_18], 0
jnz	short loc_10008E54
cmp	[esp+34h+var_C], 0
jz	short loc_10008E45
mov	eax, [esp+34h+arg_18]
push	eax
jmp	short loc_10008E6D
mov	eax, 1
mov	[esp+34h+var_8], eax
mov	[esp+34h+var_18], eax
jmp	short loc_10008E77
test	ebp, ebp
jnz	short loc_10008E68
mov	ecx, [esp+34h+arg_18]
push	ecx
push	ebx
call	sub_100087B0
add	esp, 8
jmp	short loc_10008E77
mov	edx, [esp+34h+arg_18]
push	edx
push	ebp
push	ebx
call	sub_10008600
add	esp, 0Ch
			
test	esi, esi
jz	short loc_10008E86
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esp+34h+var_14]
test	eax, eax
jz	short loc_10008E9F
push	eax
call	CERT_DestroyOCSPRequest
add	esp, 4
mov	[esp+34h+var_14], 0
mov	eax, [esp+34h+var_10]
test	eax, eax
jz	short loc_10008EB8
push	eax
call	CERT_DestroyOCSPResponse
add	esp, 4
mov	[esp+34h+var_10], 0
xor	ebp, ebp
mov	[esp+34h+var_24], ebp
cmp	[esp+34h+var_8], ebp
jnz	loc_10008D80
mov	eax, [esp+34h+var_20]
push	eax
call	PORT_Free_Util
mov	eax, [esp+38h+var_4]
add	esp, 4
pop	edi
pop	ebx
pop	esi
pop	ebp
add	esp, 24h
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 24h
retn
align 10h
public CERT_CheckOCSPStatus
			
sub	esp, 10h
push	ebx
push	ebp
push	esi
push	edi
push	800h
mov	[esp+24h+var_8], 0
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	loc_10008FAB
mov	ebx, [esp+20h+arg_C]
mov	ebp, [esp+20h+arg_8]
mov	eax, [esp+20h+arg_4]
push	ebx
push	ebp
push	eax
call	sub_100054C0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10008F58
push	eax
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
lea	ecx, [esp+20h+var_4]
push	ecx
lea	edx, [esp+24h+var_C]
push	edx
lea	eax, [esp+28h+var_10]
push	eax
push	0
push	ebx
push	ebp
push	esi
mov	[esi+84h], edi
call	sub_10007780
add	esp, 1Ch
test	eax, eax
jz	short loc_10008FB6
mov	esi, [esi+84h]
test	esi, esi
jz	short loc_10008F9E
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
mov	edi, [esp+20h+var_4]
cmp	edi, 1
jnz	short loc_10008FE7
push	esi
call	CERT_DestroyOCSPCertID
mov	esi, [esp+24h+var_10]
add	esp, 4
test	esi, esi
jz	short loc_10008FDD
mov	ecx, [esp+20h+var_C]
push	ecx
call	PORT_SetError_Util
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
mov	ecx, [esp+20h+arg_10]
lea	edx, [esp+20h+var_10]
push	edx
mov	edx, [esp+24h+arg_4]
lea	eax, [esp+24h+var_8]
push	eax
mov	eax, [esp+28h+arg_0]
push	ecx
push	ebx
push	ebp
push	edx
push	esi
push	eax
call	sub_10008C20
add	esp, 20h
test	eax, eax
jz	short loc_10009056
call	PORT_GetError_Util
mov	ebx, eax
call	sub_100078A0
test	eax, eax
jz	short loc_1000902D
push	ebx
call	PORT_SetError_Util
add	esp, 4
or	edi, 0FFFFFFFFh
jmp	short loc_1000905A
cmp	edi, 2
jnz	short loc_10009052
mov	eax, [esp+20h+var_C]
cmp	eax, 0FFFFE07Eh
jz	short loc_10009044
cmp	eax, 0FFFFE00Ch
jnz	short loc_10009052
push	eax
call	PORT_SetError_Util
add	esp, 4
or	edi, 0FFFFFFFFh
jmp	short loc_1000905A
			
xor	edi, edi
jmp	short loc_1000905A
mov	edi, [esp+20h+var_10]
			
cmp	[esp+20h+var_8], 0
jnz	short loc_1000906A
push	esi
call	CERT_DestroyOCSPCertID
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
align 10h
public CERT_DisableOCSPChecking
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jnz	short loc_1000909B
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
push	edi
push	esi
call	PK11_IsReadOnly
push	esi
mov	edi, eax
call	PK11_IsReadOnly
add	esp, 8
test	eax, eax
jz	short loc_100090BF
cmp	dword ptr [eax+8], 0
jz	short loc_100090BF
cmp	dword ptr [edi], offset	CERT_CheckOCSPStatus
jz	short loc_100090D2
			
push	0FFFFE07Fh
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
call	CERT_ClearOCSPCache
mov	dword ptr [edi], 0
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
public CERT_EnableOCSPChecking
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_1000910B
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
retn
push	edi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jnz	short loc_1000912A
call	sub_10007930
test	eax, eax
jnz	short loc_10009132
push	edi
call	PK11_IsReadOnly
add	esp, 4
mov	dword ptr [eax], offset	CERT_CheckOCSPStatus
xor	eax, eax
pop	edi
retn
align 10h
			
push	ebx
push	ebp
mov	ebp, [esp+8+arg_C]
mov	ebx, eax
test	edi, edi
jz	loc_10009206
test	ebx, ebx
jz	loc_10009206
cmp	[esp+8+arg_0], 0
jz	loc_10009206
push	esi
push	2Ch
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100091DD
mov	eax, [esp+0Ch+arg_8]
mov	ecx, [esp+0Ch+arg_4]
push	eax
push	ecx
lea	edx, [esi+18h]
mov	[esi+4], ebx
mov	ebx, [esp+14h+arg_0]
push	edx
push	edi
mov	[esi], edi
mov	[esi+14h], ebx
call	DER_TimeToGeneralizedTimeArena_Util
add	esp, 10h
test	eax, eax
jnz	short loc_100091DD
mov	[esi+24h], eax
test	ebp, ebp
jz	short loc_100091CB
push	eax
push	eax
push	edi
call	SECITEM_AllocItem_Util
add	esp, 0Ch
mov	[esi+24h], eax
test	eax, eax
jz	short loc_100091DD
mov	ecx, [ebp+4]
mov	edx, [ebp+0]
push	ecx
push	edx
push	eax
push	edi
call	DER_TimeToGeneralizedTimeArena_Util
add	esp, 10h
test	eax, eax
jnz	short loc_100091DD
push	4
push	edi
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+28h], eax
test	eax, eax
jnz	short loc_100091E3
			
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
push	offset dword_100A2090
mov	dword ptr [eax], 0
push	ebx
lea	eax, [esi+8]
push	eax
push	edi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
neg	eax
sbb	eax, eax
and	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
public CERT_CreateOCSPSingleResponseGood
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_1000923A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
retn
push	esi
push	8
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10009266
push	0
push	0
push	edi
mov	dword ptr [esi], 0
call	SECITEM_AllocItem_Util
add	esp, 0Ch
mov	[esi+4], eax
test	eax, eax
jnz	short loc_1000926B
pop	esi
xor	eax, eax
pop	edi
retn
mov	eax, [esp+8+arg_10]
mov	ecx, [esp+8+arg_C]
mov	edx, [esp+8+arg_8]
push	eax
mov	eax, [esp+0Ch+arg_4]
push	ecx
push	edx
push	esi
call	sub_10009140
add	esp, 10h
pop	esi
pop	edi
retn
align 10h
public CERT_CreateOCSPSingleResponseUnknown
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_100092AA
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
retn
push	esi
push	8
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100092D6
push	0
push	0
push	edi
mov	dword ptr [esi], 2
call	SECITEM_AllocItem_Util
add	esp, 0Ch
mov	[esi+4], eax
test	eax, eax
jnz	short loc_100092DB
pop	esi
xor	eax, eax
pop	edi
retn
mov	eax, [esp+8+arg_10]
mov	ecx, [esp+8+arg_C]
mov	edx, [esp+8+arg_8]
push	eax
mov	eax, [esp+0Ch+arg_4]
push	ecx
push	edx
push	esi
call	sub_10009140
add	esp, 10h
pop	esi
pop	edi
retn
align 10h
public CERT_CreateOCSPSingleResponseRevoked
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	loc_1000939A
cmp	[esp+4+arg_1C],	0
jnz	loc_1000939A
push	esi
push	8
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10009376
push	10h
push	edi
mov	dword ptr [esi], 1
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esi+4], eax
test	eax, eax
jz	short loc_10009376
push	0
push	0
push	edi
call	SECITEM_AllocItem_Util
mov	ecx, [esi+4]
mov	[ecx+0Ch], eax
mov	eax, [esi+4]
add	esp, 0Ch
cmp	dword ptr [eax+0Ch], 0
jz	short loc_10009376
mov	edx, [esp+8+arg_18]
mov	ecx, [esp+8+arg_14]
push	edx
push	ecx
push	eax
push	edi
call	DER_TimeToGeneralizedTimeArena_Util
add	esp, 10h
test	eax, eax
jz	short loc_1000937B
			
pop	esi
xor	eax, eax
pop	edi
retn
mov	edx, [esp+8+arg_10]
mov	eax, [esp+8+arg_C]
mov	ecx, [esp+8+arg_8]
push	edx
push	eax
mov	eax, [esp+10h+arg_4]
push	ecx
push	esi
call	sub_10009140
add	esp, 10h
pop	esi
pop	edi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
retn
align 10h
public CERT_CreateEncodedOCSPSuccessResponse
sub	esp, 20h
push	edi
xor	edi, edi
mov	[esp+24h+var_1C], edi
mov	[esp+24h+var_18], edi
cmp	[esp+24h+arg_0], edi
jz	short loc_100093D8
cmp	[esp+24h+arg_14], edi
jz	short loc_100093D8
mov	eax, [esp+24h+arg_8]
cmp	eax, 1
jz	short loc_100093EC
cmp	eax, 2
jz	short loc_100093EC
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
add	esp, 20h
retn
			
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
cmp	esi, edi
jnz	short loc_10009408
pop	esi
xor	eax, eax
pop	edi
add	esp, 20h
retn
push	ebx
push	30h
push	esi
call	PORT_ArenaZAlloc_Util
mov	ebx, eax
add	esp, 8
cmp	ebx, edi
jz	loc_10009728
push	ebp
push	10h
push	esi
call	PORT_ArenaZAlloc_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	loc_10009727
push	48h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_10009727
push	20h
push	esi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esp+30h+var_14], eax
test	eax, eax
jz	loc_10009727
push	18h
push	esi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esp+30h+var_10], eax
test	eax, eax
jz	loc_10009727
mov	ecx, [esp+30h+arg_10]
mov	edx, [esp+30h+arg_C]
xor	eax, eax
mov	[ebx+4], eax
mov	[ebx+8], eax
mov	[ebx+2Ch], eax
mov	eax, [esp+30h+arg_14]
push	ecx
mov	[ebx+28h], eax
push	edx
lea	eax, [ebx+1Ch]
push	eax
push	esi
call	DER_TimeToGeneralizedTimeArena_Util
add	esp, 10h
test	eax, eax
jnz	loc_10009727
mov	eax, [esp+30h+arg_4]
test	eax, eax
jnz	loc_1000957E
lea	edx, [esp+30h+var_C]
push	edx
lea	eax, [ebp+4]
push	eax
lea	ecx, [esp+38h+var_1D]
push	4
push	esi
mov	[esp+40h+var_1D], 64h
mov	[esp+40h+var_4], 1
mov	[esp+40h+var_8], ecx
mov	dword ptr [ebp+0], 2
call	sub_10005340
add	esp, 10h
test	eax, eax
jz	loc_10009727
push	offset dword_100A1E18
push	ebp
lea	ecx, [ebx+0Ch]
push	ecx
push	esi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	loc_10009727
push	offset dword_100A22D0
push	ebx
push	edi
push	esi
mov	[edi+0Ch], ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	loc_10009727
push	4
push	esi
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi+34h], eax
test	eax, eax
jz	loc_10009727
push	4
push	1
mov	dword ptr [eax], 0
call	SEC_GetSignatureAlgorithmOidTag
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	loc_10009727
push	1
lea	edx, [edi+28h]
push	edx
push	0
call	SECITEM_AllocItem_Util
add	esp, 0Ch
test	eax, eax
jz	loc_10009727
mov	eax, [edi+2Ch]
mov	cl, [esp+30h+var_1D]
mov	ebp, [esp+30h+var_1C]
mov	[eax], cl
jmp	loc_10009677
mov	ecx, [esp+30h+arg_8]
mov	[ebp+0], ecx
cmp	ecx, 1
jnz	short loc_100095AF
add	eax, 0CCh
push	eax
lea	edx, [ebp+4]
push	edx
push	esi
mov	[esp+3Ch+var_1C], offset dword_100A1E08
call	CERT_CopyName
add	esp, 0Ch
test	eax, eax
jnz	loc_10009727
jmp	short loc_100095CF
lea	ecx, [ebp+4]
push	ecx
push	4
push	eax
push	esi
mov	[esp+40h+var_1C], offset dword_100A1E18
call	CERT_GetSubjectPublicKeyDigest
add	esp, 10h
test	eax, eax
jz	loc_10009727
mov	edx, [esp+30h+var_1C]
push	edx
push	ebp
lea	eax, [ebx+0Ch]
push	eax
push	esi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	loc_10009727
push	offset dword_100A22D0
push	ebx
push	edi
push	esi
mov	[edi+0Ch], ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	loc_10009727
push	4
push	esi
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi+34h], eax
test	eax, eax
jz	loc_10009727
mov	ecx, [esp+30h+arg_18]
mov	edx, [esp+30h+arg_4]
push	ecx
push	edx
mov	dword ptr [eax], 0
call	PK11_FindKeyByAnyCert
mov	ebp, eax
add	esp, 8
mov	[esp+30h+var_1C], ebp
test	ebp, ebp
jz	loc_10009727
mov	eax, [ebp+4]
push	4
push	eax
call	SEC_GetSignatureAlgorithmOidTag
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	loc_1000971A
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ebx
push	ebp
push	ecx
push	edx
lea	eax, [edi+28h]
push	eax
call	SEC_SignData
add	esp, 14h
test	eax, eax
jnz	loc_1000971A
shl	dword ptr [edi+30h], 3
push	0
push	ebx
lea	ecx, [edi+10h]
push	ecx
push	esi
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jnz	loc_1000971A
mov	ebx, [esp+30h+var_14]
push	offset dword_100A2340
push	edi
lea	edx, [ebx+10h]
push	edx
push	esi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_1000971A
push	83h
mov	dword ptr [ebx+0Ch], 83h
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jz	short loc_1000971A
mov	ecx, [eax]
mov	ebp, [esp+30h+var_10]
mov	[ebx], ecx
mov	edx, [eax+4]
mov	[ebx+4], edx
mov	eax, [eax+8]
push	0
lea	ecx, [ebp+4]
mov	[ebx+8], eax
mov	[ebx+1Ch], edi
push	ecx
push	esi
mov	[ebp+0], esi
mov	[ebp+14h], ebx
mov	dword ptr [ebp+10h], 0
call	SEC_ASN1EncodeInteger_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10009716
mov	edx, [esp+30h+arg_0]
push	offset dword_100A1C78
push	ebp
push	0
push	edx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
mov	[esp+30h+var_18], eax
mov	ebp, [esp+30h+var_1C]
			
test	ebp, ebp
jz	short loc_10009727
push	ebp
call	SECKEY_DestroyPrivateKey
add	esp, 4
			
pop	ebp
cmp	dword ptr [edi+2Ch], 0
pop	ebx
jz	short loc_1000973D
push	0
add	edi, 28h
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
push	0
push	esi
call	PORT_FreeArena_Util
mov	eax, [esp+30h+var_18]
add	esp, 8
pop	esi
pop	edi
add	esp, 20h
retn
align 10h
public CERT_CreateEncodedOCSPErrorResponse
mov	eax, [esp+arg_4]
add	eax, 1F88h
sub	esp, 18h
cmp	eax, 4		
ja	short loc_100097E0 
jmp	ds:off_100097F4[eax*4] 
			
mov	eax, 1		
jmp	short loc_10009799
			
mov	eax, 2		
jmp	short loc_10009799
			
mov	eax, 3		
jmp	short loc_10009799
			
mov	eax, 5		
jmp	short loc_10009799
			
mov	eax, 6		
			
push	eax
mov	[esp+1Ch+var_8], eax
lea	eax, [esp+1Ch+var_14]
push	eax
push	0
call	SEC_ASN1EncodeInteger_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_100097ED
mov	edx, [esp+18h+arg_0]
push	esi
push	offset dword_100A23A0
lea	ecx, [esp+20h+var_18]
push	ecx
push	0
push	edx
call	SEC_ASN1EncodeItem_Util
mov	esi, eax
lea	eax, [esp+2Ch+var_14]
push	0
push	eax
call	SECITEM_FreeItem_Util
add	esp, 18h
mov	eax, esi
pop	esi
add	esp, 18h
retn
push	0FFFFE005h	
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 18h
retn
align 4
dd offset loc_1000977F	
dd offset loc_10009786
dd offset loc_1000978D
dd offset loc_10009794
align 10h
push	ebx
mov	ebx, [esp+4+arg_4]
push	ebp
mov	ebp, [esp+8+Str]
mov	ecx, ebx
mov	eax, ebp
mov	edi, edi
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10009840
test	dl, dl
jz	short loc_1000983C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10009840
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10009820
xor	eax, eax
jmp	short loc_10009845
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_10009851
pop	ebp
mov	eax, 1
pop	ebx
retn
push	esi
push	edi
mov	edi, ds:strchr
push	3Ah		
push	ebp		
call	edi 
push	3Ah		
push	ebx		
mov	esi, eax
call	edi 
add	esp, 10h
test	esi, esi
jz	short loc_10009876
test	eax, eax
jnz	short loc_1000987A
mov	eax, esi
mov	ecx, ebx
jmp	short loc_10009883
test	eax, eax
jnz	short loc_10009881
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
mov	ecx, ebp
inc	eax
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_100098B0
test	dl, dl
jz	short loc_100098A0
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_100098B0
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10009884
xor	eax, eax
xor	ecx, ecx
test	eax, eax
setz	cl
pop	edi
pop	esi
pop	ebp
pop	ebx
mov	eax, ecx
retn
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
xor	ecx, ecx
test	eax, eax
setz	cl
pop	edi
pop	esi
pop	ebp
pop	ebx
mov	eax, ecx
retn
align 10h
public CERT_FindUserCertByUsage
push	ecx
push	ebx
push	ebp
push	esi
push	edi
call	ds:PR_Now
mov	ebp, [esp+14h+Str]
mov	edi, eax
mov	eax, [esp+14h+arg_10]
mov	ebx, edx
test	eax, eax
jz	short loc_100098FB
push	eax		
push	ebp		
call	PK11_FindCertFromNickname
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10009913
mov	eax, [esp+14h+arg_0]
push	ebp		
push	eax		
call	CERT_FindCertByNickname
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_100099E1
mov	eax, [esp+14h+arg_8]
lea	ecx, [esp+14h+var_4]
push	ecx
lea	edx, [esp+18h+arg_10]
push	edx
push	0
push	eax
call	sub_1003BF70
add	esp, 10h
test	eax, eax
jz	short loc_10009943
push	esi
call	CERT_DestroyCertificate
add	esp, 4
xor	esi, esi
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
mov	ebp, [esp+14h+arg_C]
test	ebp, ebp
jz	short loc_1000995C
push	0
push	ebx
push	edi
push	esi
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jnz	short loc_10009987
mov	ecx, [esp+14h+arg_10]
push	ecx
push	esi
call	sub_1003C090
add	esp, 8
test	eax, eax
jnz	short loc_10009987
mov	edx, [esp+14h+var_4]
test	[esi+13Ch], edx
jz	short loc_10009987
push	esi
call	CERT_IsUserCert
add	esp, 4
test	eax, eax
jnz	short loc_100099E1
			
mov	ecx, [esp+14h+arg_0]
push	ebp
push	ebx
push	edi
lea	eax, [esi+54h]
push	eax
push	ecx
push	0
call	CERT_CreateSubjectCertList
mov	edi, eax
push	edi
call	CERT_FilterCertListForUserCerts
push	esi
call	CERT_DestroyCertificate
add	esp, 20h
xor	esi, esi
test	edi, edi
jz	short loc_100099E1
mov	edx, [esp+14h+arg_8]
push	esi
push	edx
push	edi
call	CERT_FilterCertListByUsage
add	esp, 0Ch
test	eax, eax
jnz	short loc_100099D8
mov	eax, [edi]
cmp	eax, edi
jz	short loc_100099D8
mov	eax, [eax+8]
push	eax
call	CERT_DupCertificate
add	esp, 4
mov	esi, eax
			
push	edi
call	CERT_DestroyCertList
add	esp, 4
			
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
push	ebx
push	ebp
push	esi
mov	esi, [esp+0Ch+arg_0]
push	edi
push	0
push	esi
call	sub_100461D0
add	esp, 8
test	eax, eax
jz	loc_10009AEE
push	eax
call	sub_10050550
mov	ebx, [esp+14h+arg_4]
add	esp, 4
cmp	dword ptr [ebx+10h], 2
jnz	loc_10009AEE
push	0
push	0
push	esi
call	sub_10046430
add	esp, 0Ch
test	eax, eax
jz	loc_10009AEE
push	esi
push	0
call	sub_1004B510
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	short loc_10009AA0
mov	esi, [ebx+4]
test	esi, esi
jz	short loc_10009A84
nop
mov	ecx, [esi+4]
mov	eax, ebp
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10009A75
test	dl, dl
jz	short loc_10009A71
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10009A75
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10009A55
xor	eax, eax
jmp	short loc_10009A7A
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_10009AE5
mov	esi, [esi]
test	esi, esi
jnz	short loc_10009A50
mov	eax, [ebx]
push	8
push	eax
call	PORT_ArenaAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10009AA8
push	ebp
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	eax, ebp
lea	edx, [eax+1]
lea	ecx, [ecx+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10009AB0
mov	ecx, [ebx]
sub	eax, edx
lea	esi, [eax+1]
push	esi
push	ecx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi+4], eax
test	eax, eax
jz	short loc_10009A97
push	esi		
push	ebp		
push	eax		
call	memcpy
mov	edx, [ebx+4]
mov	[edi], edx
add	esp, 0Ch
inc	dword ptr [ebx+8]
mov	[ebx+4], edi
push	ebp
call	PORT_Free_Util
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
public CERT_GetCertNicknames
			
push	ebx
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
xor	ebx, ebx
add	esp, 4
cmp	edi, ebx
jnz	short loc_10009B29
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	ebx
retn
push	esi
push	18h
push	edi
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jz	short loc_10009B8D
mov	ecx, [esp+0Ch+arg_8]
mov	eax, [esp+0Ch+arg_4]
push	ecx
push	1
push	ebx
push	ebx
mov	[esi], edi
mov	[esi+4], ebx
mov	[esi+8], ebx
mov	[esi+0Ch], ebx
mov	[esi+10h], eax
mov	[esi+14h], ebx
call	sub_1002C850
mov	edx, [esp+1Ch+arg_0]
push	esi
push	offset sub_100099F0
push	edx
call	sub_100475B0
mov	eax, [esi+8]
add	esp, 1Ch
cmp	eax, ebx
jz	short loc_10009BD5
add	eax, eax
add	eax, eax
push	eax
push	edi
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+0Ch], eax
cmp	eax, ebx
jnz	short loc_10009B9D
push	ebx
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
xor	eax, eax
pop	ebx
retn
mov	ecx, [esi+4]
xor	edi, edi
cmp	[esi+8], ebx
jle	short loc_10009BD5
push	ebp
jmp	short loc_10009BB0
align 10h
			
mov	eax, [ecx+4]
mov	edx, [esi+0Ch]
mov	[edx+edi*4], eax
mov	eax, [ecx+4]
lea	ebp, [eax+1]
nop
mov	dl, [eax]
inc	eax
cmp	dl, bl
jnz	short loc_10009BC0
sub	eax, ebp
add	[esi+14h], eax
mov	ecx, [ecx]
inc	edi
cmp	edi, [esi+8]
jl	short loc_10009BB0
pop	ebp
			
mov	eax, esi
pop	esi
pop	edi
pop	ebx
retn
align 10h
public CERT_FreeNicknames
mov	eax, [esp+arg_0] 
mov	ecx, [eax]
push	0
push	ecx
call	PORT_FreeArena_Util
add	esp, 8
retn
align 10h
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	esi
push	edi
mov	edi, [esp+20h+arg_8]
lea	eax, [esp+20h+var_10]
push	eax
push	ebp
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_10009C95
test	[esp+20h+var_10], 80h
jz	short loc_10009C95
mov	ecx, [edi]
push	10h
push	ecx
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10009C5C
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
mov	ebx, [ebp+5Ch]
mov	[esi+0Ch], ebx
mov	dword ptr [esi+4], 0
mov	edx, [edi]
push	ebx
push	edx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+8], eax
test	eax, eax
jz	short loc_10009C46
mov	ecx, [ebp+58h]
push	ebx		
push	ecx		
push	eax		
call	memcpy
mov	edx, [edi+0Ch]
mov	[esi], edx
add	esp, 0Ch
inc	dword ptr [edi+4]
mov	[edi+0Ch], esi
			
mov	ecx, [esp+20h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
public CERT_DupDistNames
push	ecx
push	ebx
push	ebp
push	800h
call	PORT_NewArena_Util
mov	ebp, eax
xor	ebx, ebx
add	esp, 4
cmp	ebp, ebx
jnz	short loc_10009CDB
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
push	esi
push	edi
push	10h
push	ebp
call	PORT_ArenaAlloc_Util
mov	edi, eax
add	esp, 8
cmp	edi, ebx
jz	short loc_10009D64
mov	esi, [esp+14h+arg_0]
mov	[edi], ebp
mov	[edi+0Ch], ebx
mov	eax, [esi+4]
mov	[edi+4], eax
mov	[edi+8], ebx
cmp	[esi+4], ebx
jz	short loc_10009D5A
mov	eax, [esi+4]
lea	ecx, [eax+eax*2]
add	ecx, ecx
add	ecx, ecx
push	ecx
push	ebp
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi+8], eax
cmp	eax, ebx
jz	short loc_10009D64
mov	[esp+14h+var_4], ebx
cmp	[esi+4], ebx
jle	short loc_10009D5A
lea	esp, [esp+0]
mov	edx, [esi+8]
mov	eax, [edi+8]
add	edx, ebx
push	edx
add	eax, ebx
push	eax
push	ebp
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10009D62
mov	eax, [esp+14h+var_4]
inc	eax
add	ebx, 0Ch
mov	[esp+14h+var_4], eax
cmp	eax, [esi+4]
jl	short loc_10009D30
			
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
xor	ebx, ebx
			
push	ebx
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
public CERT_GetSSLCACerts
push	ebx
push	edi
push	800h
call	PORT_NewArena_Util
mov	ebx, eax
xor	edi, edi
add	esp, 4
cmp	ebx, edi
jnz	short loc_10009DA9
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	ebx
retn
push	esi
push	10h
push	ebx
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
cmp	esi, edi
jz	short loc_10009DF8
push	edi
push	esi
push	offset sub_10009C00
mov	[esi], ebx
mov	[esi+0Ch], edi
mov	[esi+4], edi
mov	[esi+8], edi
call	PK11_TraverseSlotCerts
add	esp, 0Ch
test	eax, eax
jnz	short loc_10009DF8
mov	eax, [esi+4]
cmp	eax, edi
jz	short loc_10009E34
lea	eax, [eax+eax*2]
add	eax, eax
add	eax, eax
push	eax
push	ebx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+8], eax
cmp	eax, edi
jnz	short loc_10009E08
			
push	edi
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
xor	eax, eax
pop	ebx
retn
mov	ecx, [esi+0Ch]
xor	edx, edx
cmp	[esi+4], edi
jle	short loc_10009E34
mov	ebx, [ecx+4]
mov	eax, [esi+8]
mov	[eax+edi], ebx
mov	ebx, [ecx+8]
mov	[eax+edi+4], ebx
mov	ebx, [ecx+0Ch]
mov	[eax+edi+8], ebx
mov	ecx, [ecx]
inc	edx
add	edi, 0Ch
cmp	edx, [esi+4]
jl	short loc_10009E12
			
mov	eax, esi
pop	esi
pop	edi
pop	ebx
retn
align 10h
public CERT_DistNamesFromCertList
push	ebx
mov	ebx, [esp+4+arg_0]
push	esi
xor	esi, esi
test	ebx, ebx
jnz	short loc_10009E5E
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
xor	eax, eax
pop	ebx
retn
mov	eax, [ebx]
cmp	eax, ebx
jz	short loc_10009E6B
mov	eax, [eax]
inc	esi
cmp	eax, ebx
jnz	short loc_10009E64
push	ebp
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10009EEC
push	10h
push	edi
call	PORT_ArenaZAlloc_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	short loc_10009EE1
lea	eax, [esi+esi*2]
add	eax, eax
add	eax, eax
push	eax
push	edi
mov	[ebp+0], edi
mov	[ebp+4], esi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[ebp+8], eax
test	eax, eax
jz	short loc_10009EE1
mov	esi, [ebx]
cmp	esi, ebx
jz	short loc_10009EDA
mov	ebx, eax
mov	eax, [esi+8]
add	eax, 54h
mov	ecx, ebx
push	eax
push	ecx
push	edi
add	ebx, 0Ch
call	SECITEM_CopyItem_Util
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jz	short loc_10009EE1
mov	esi, [esi]
cmp	esi, [esp+10h+arg_0]
jnz	short loc_10009EB7
pop	edi
mov	eax, ebp
pop	ebp
pop	esi
pop	ebx
retn
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
retn
align 10h
sub	esp, 0Ch
xor	eax, eax
push	esi
mov	esi, [esp+10h+arg_0]
mov	ecx, [esi+114h]
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_4], eax
lea	eax, [esp+10h+var_C]
push	eax
push	57h
push	ecx
call	sub_1003EB90
add	esp, 0Ch
test	eax, eax
jz	short loc_10009F33
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
mov	eax, [esi]
lea	edx, [esp+10h+var_C]
push	edx
push	eax
call	CERT_DecodeCRLDistributionPoints
mov	ecx, [esp+18h+var_8]
push	ecx
mov	esi, eax
call	PORT_Free_Util
add	esp, 0Ch
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_ImportCRL
push	esi
push	edi
call	PK11_GetInternalKeySlot
mov	ecx, [esp+8+arg_C]
mov	edx, [esp+8+arg_8]
push	0
push	0
mov	esi, eax
mov	eax, [esp+10h+arg_10]
push	0
push	eax
mov	eax, [esp+18h+arg_4]
push	ecx
push	edx
push	eax
push	esi
call	PK11_ImportCRL
push	esi
mov	edi, eax
call	PK11_FreeSlot
add	esp, 24h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
			
sub	esp, 1Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+1Ch+var_4], eax
push	ebx
push	ebp
push	esi
push	edi
mov	ebx, ecx
xor	esi, esi
call	CERT_GetDefaultCertDB
mov	[esp+2Ch+var_1C], eax
cmp	[esp+2Ch+arg_0], esi
jz	loc_1000A10F
lea	esp, [esp+0]
dec	[esp+2Ch+arg_0]
push	0		
mov	edi, ebx
push	0		
add	ebx, 0Ch
push	edi		
mov	[esp+38h+var_18], ebx
call	__CERT_DecodeDERCertificate_0
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	loc_1000A124
cmp	[esp+2Ch+arg_8], 0
jnz	short loc_1000A00D
push	ebp
call	CERT_CertTimesValid
add	esp, 4
cmp	eax, 0FFFFFFFFh
jz	loc_1000A0FB
lea	eax, [esp+2Ch+var_14]
push	eax
push	ebp
call	CERT_IsCACert
add	esp, 8
test	eax, eax
jnz	short loc_1000A03C
cmp	[esp+2Ch+arg_8], eax
jz	loc_1000A0FB
mov	eax, 8
mov	[esp+2Ch+var_10], eax
mov	[esp+2Ch+var_C], eax
mov	[esp+2Ch+var_8], eax
jmp	short loc_1000A09B
mov	edx, [esp+2Ch+arg_4]
mov	cl, [esp+2Ch+var_14]
cmp	edx, 3
jnz	short loc_1000A052
test	cl, 4
jz	loc_1000A0FB
xor	eax, eax
mov	[esp+2Ch+var_10], eax
mov	[esp+2Ch+var_C], eax
mov	[esp+2Ch+var_8], eax
cmp	edx, 3
jz	short loc_1000A093
cmp	edx, 7
jnz	short loc_1000A09B
test	cl, 4
jz	short loc_1000A077
mov	[esp+2Ch+var_10], 8
test	cl, 2
jz	short loc_1000A084
mov	[esp+2Ch+var_C], 8
test	cl, 1
jz	short loc_1000A09B
mov	[esp+2Ch+var_8], 8
jmp	short loc_1000A09B
mov	[esp+2Ch+var_10], 8
			
mov	ecx, [esp+2Ch+var_1C]
push	0		
push	0		
push	0		
push	edi		
push	ecx		
call	CERT_NewTempCertificate
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_1000A124
cmp	dword ptr [esi+150h], 0
jz	short loc_1000A0E6
push	esi
call	CERT_MakeCANickname
lea	edx, [esp+30h+var_10]
push	edx
mov	edi, eax
push	edi
push	esi
call	j___CERT_AddTempCertToPerm
add	esp, 10h
mov	ebx, eax
test	edi, edi
jz	short loc_1000A0E8
push	edi
call	PORT_Free_Util
add	esp, 4
jmp	short loc_1000A0E8
xor	ebx, ebx
			
push	esi
call	CERT_DestroyCertificate
add	esp, 4
xor	esi, esi
test	ebx, ebx
jnz	short loc_1000A124
mov	ebx, [esp+2Ch+var_18]
			
push	ebp
call	CERT_DestroyCertificate
add	esp, 4
cmp	[esp+2Ch+arg_0], 0
jnz	loc_10009FD0
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+1Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 1Ch
retn
			
or	edi, 0FFFFFFFFh
test	ebp, ebp
jz	short loc_1000A134
push	ebp
call	CERT_DestroyCertificate
add	esp, 4
test	esi, esi
jz	short loc_1000A141
push	esi
call	CERT_DestroyCertificate
add	esp, 4
mov	ecx, [esp+2Ch+var_4]
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 1Ch
retn
align 10h
public CERT_ImportCAChain
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
push	0
push	eax
push	ecx
mov	ecx, [esp+0Ch+arg_0]
call	sub_10009FA0
add	esp, 0Ch
retn
align 10h
public CERT_ImportCAChainTrusted
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
push	1
push	eax
push	ecx
mov	ecx, [esp+0Ch+arg_0]
call	sub_10009FA0
add	esp, 0Ch
retn
align 10h
public CERT_CertChainFromCert
sub	esp, 2Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+2Ch+var_4], eax
push	ebx
push	ebp
push	esi
mov	esi, [esp+38h+arg_0]
push	edi
call	sub_1004A850
mov	edi, eax
call	sub_1004A860
push	esi
mov	ebx, eax
call	sub_1004B930
xor	ebp, ebp
add	esp, 4
cmp	eax, ebp
jz	short loc_1000A211
mov	ecx, [esp+3Ch+arg_4]
push	ebx
push	edi
push	ebp
push	ebp
push	14h
push	ebp
push	ebp
lea	edx, [esp+58h+var_10]
push	edx
push	ebp
push	eax
mov	[esp+64h+var_10], ebp
mov	[esp+64h+var_C], ecx
mov	[esp+64h+var_8], ebp
call	sub_10046C40
mov	ebx, eax
add	esp, 28h
mov	[esp+3Ch+var_24], ebx
cmp	ebx, ebp
jnz	short loc_1000A226
push	0FFFFE00Dh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+2Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 2Ch
retn
xor	edi, edi
mov	[esp+3Ch+var_28], edi
cmp	[ebx], ebp
jz	short loc_1000A23A
inc	edi
cmp	[ebx+edi*4], ebp
jnz	short loc_1000A230
mov	[esp+3Ch+var_28], edi
push	1000h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
mov	[esp+3Ch+var_2C], esi
cmp	esi, ebp
jz	loc_1000A34C
push	0Ch
push	esi
call	PORT_ArenaAlloc_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	loc_1000A34C
lea	eax, [edi+edi*2]
add	eax, eax
add	eax, eax
push	eax
push	esi
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[ebp+0], eax
test	eax, eax
jz	loc_1000A34C
mov	esi, [ebx]
test	esi, esi
jz	loc_1000A30F
xor	edi, edi
push	esi
call	sub_1004B8F0
add	esp, 4
mov	[esp+3Ch+var_20], eax
test	eax, eax
jz	loc_1000A344
mov	ecx, [esi+34h]
mov	[esp+3Ch+var_14], ecx
mov	edx, [esi+30h]
mov	ecx, [ebp+0]
lea	eax, [esp+3Ch+var_1C]
push	eax
add	ecx, edi
mov	[esp+40h+var_18], edx
mov	edx, [esp+40h+var_2C]
push	ecx
push	edx
mov	[esp+48h+var_1C], 0
call	SECITEM_CopyItem_Util
mov	esi, [ebx+4]
add	ebx, 4
add	esp, 0Ch
add	edi, 0Ch
test	esi, esi
jnz	short loc_1000A2F6
mov	eax, [esp+3Ch+var_20]
cmp	[eax+170h], esi
jnz	short loc_1000A2F6
mov	[esp+3Ch+arg_8], 1
			
mov	ecx, [esp+3Ch+var_20]
push	ecx
call	CERT_DestroyCertificate
add	esp, 4
test	esi, esi
jnz	short loc_1000A292
mov	ebx, [esp+3Ch+var_24]
mov	edi, [esp+3Ch+var_28]
cmp	[esp+3Ch+arg_8], 0
jnz	short loc_1000A31C
cmp	edi, 1
jle	short loc_1000A31C
dec	edi
			
mov	edx, [esp+3Ch+var_2C]
push	ebx
mov	[ebp+4], edi
mov	[ebp+8], edx
call	sub_10050550
add	esp, 4
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
mov	ecx, [esp+2Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 2Ch
retn
mov	ebx, [esp+3Ch+var_24]
mov	esi, [esp+3Ch+var_2C]
			
mov	eax, [ebx]
test	eax, eax
jz	short loc_1000A374
mov	edi, ebx
push	eax
call	sub_1004B8F0
add	esp, 4
test	eax, eax
jz	short loc_1000A36A
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, [edi+4]
add	edi, 4
test	eax, eax
jnz	short loc_1000A354
push	ebx
call	sub_10050550
add	esp, 4
test	esi, esi
jz	short loc_1000A38C
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
mov	ecx, [esp+3Ch+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 2Ch
retn
align 10h
public CERT_CertListFromCert
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1000A3E7
push	0Ch
push	esi
call	PORT_ArenaAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_1000A3E7
push	0Ch
push	esi
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi], eax
test	eax, eax
jnz	short loc_1000A3F6
			
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1000A40C
mov	ecx, [esp+8+arg_0]
add	ecx, 3Ch
push	ecx
push	eax
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jns	short loc_1000A420
test	esi, esi
jz	short loc_1000A41B
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
mov	[edi+8], esi
mov	dword ptr [edi+4], 1
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public CERT_DupCertList
push	ecx
mov	eax, [esp+4+arg_0]
push	ebx
push	ebp
push	esi
mov	esi, [eax+4]
push	edi
push	800h
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	short loc_1000A47E
push	0Ch
push	ebp
call	PORT_ArenaAlloc_Util
mov	ebx, eax
add	esp, 8
mov	[esp+14h+var_4], ebx
test	ebx, ebx
jz	short loc_1000A47E
lea	ecx, [esi+esi*2]
add	ecx, ecx
add	ecx, ecx
push	ecx
push	ebp
mov	[ebx+8], ebp
call	PORT_ArenaAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_1000A4A2
			
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
test	ebp, ebp
jz	short loc_1000A49A
push	0
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	edx, [esp+14h+arg_0]
mov	[ebx], edi
mov	[ebx+4], esi
mov	ebx, [edx]
test	esi, esi
jle	short loc_1000A4CB
push	ebx
push	edi
push	ebp
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
js	short loc_1000A48B
dec	esi
add	edi, 0Ch
add	ebx, 0Ch
test	esi, esi
jg	short loc_1000A4B1
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
public CERT_DestroyCertificateList
mov	eax, [esp+arg_0]
mov	ecx, [eax+8]
push	0
push	ecx
call	PORT_FreeArena_Util
add	esp, 8
retn
align 10h
public CERT_FindUserCertsByUsage
sub	esp, 10h
push	ebp
push	esi
xor	ebp, ebp
call	ds:PR_Now
mov	ecx, [esp+18h+arg_0]
mov	[esp+18h+var_8], eax
mov	eax, [esp+18h+arg_10]
push	eax
push	2
push	ecx
mov	[esp+24h+var_4], edx
call	CERT_GetCertNicknames
mov	esi, eax
add	esp, 0Ch
mov	[esp+18h+var_10], esi
test	esi, esi
jz	loc_1000A690
push	ebx
mov	ebx, [esi+8]
test	ebx, ebx
jz	loc_1000A682
push	edi
mov	edi, [esi+0Ch]
jle	short loc_1000A5BB
lea	esp, [esp+0]
mov	eax, [esp+20h+arg_10]
test	eax, eax
jz	short loc_1000A56A
mov	edx, [edi]
push	eax		
push	edx		
call	PK11_FindCertFromNickname
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000A580
mov	eax, [edi]
mov	ecx, [esp+20h+arg_0]
push	eax		
push	ecx		
call	CERT_FindCertByNickname
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1000A5AF
mov	edx, [esp+20h+arg_C]
mov	eax, [esp+20h+var_4]
mov	ecx, [esp+20h+var_8]
push	edx
push	eax
mov	eax, [esp+28h+arg_0]
push	ecx
lea	edx, [esi+54h]
push	edx
push	eax
push	ebp
call	CERT_CreateSubjectCertList
mov	ebp, eax
push	ebp
call	CERT_FilterCertListForUserCerts
push	esi
call	CERT_DestroyCertificate
add	esp, 20h
dec	ebx
add	edi, 4
test	ebx, ebx
jg	short loc_1000A550
mov	esi, [esp+20h+var_10]
mov	ecx, [esp+20h+arg_4]
push	0
push	ecx
push	ebp
call	CERT_FilterCertListByUsage
add	esp, 0Ch
test	eax, eax
jnz	loc_1000A672
cmp	[esp+20h+arg_8], eax
jz	loc_1000A681
mov	ebx, [esi+8]
mov	edx, [esi+0Ch]
lea	eax, ds:0[ebx*4]
push	eax
mov	[esp+24h+var_8], edx
call	PORT_ZAlloc_Util
add	esp, 4
mov	[esp+20h+var_C], eax
test	eax, eax
jz	short loc_1000A672
mov	edi, [ebp+0]
cmp	edi, ebp
jz	short loc_1000A667
xor	esi, esi
test	ebx, ebx
jle	short loc_1000A655
lea	esp, [esp+0]
mov	ecx, [edi+8]
mov	edx, [ecx+154h]
mov	eax, [esp+20h+var_8]
mov	ecx, [eax+esi*4]
push	edx		
push	ecx		
call	sub_10009810
add	esp, 8
test	eax, eax
jnz	short loc_1000A635
inc	esi
cmp	esi, ebx
jl	short loc_1000A610
jmp	short loc_1000A655
mov	eax, [esp+20h+var_C]
cmp	dword ptr [eax+esi*4], 0
jz	short loc_1000A64C
push	edi
mov	edi, [edi]
call	CERT_RemoveCertListNode
add	esp, 4
jmp	short loc_1000A655
mov	dword ptr [eax+esi*4], 1
mov	edi, [edi]
			
cmp	esi, ebx
jnz	short loc_1000A65B
mov	edi, [edi]
cmp	edi, ebp
jnz	short loc_1000A606
mov	esi, [esp+20h+var_10]
mov	eax, [esp+20h+var_C]
push	eax
call	PORT_Free_Util
add	esp, 4
jmp	short loc_1000A681
			
test	ebp, ebp
jz	short loc_1000A681
push	ebp
call	CERT_DestroyCertList
add	esp, 4
xor	ebp, ebp
			
pop	edi
mov	edx, [esi]
push	0
push	edx
call	PORT_FreeArena_Util
add	esp, 8
pop	ebx
pop	esi
mov	eax, ebp
pop	ebp
add	esp, 10h
retn
align 10h
public CERT_CertTimesValid
			
push	1
call	ds:PR_Now
push	edx
push	eax
mov	eax, [esp+0Ch+arg_0]
push	eax
call	CERT_CheckCertValidTimes
add	esp, 10h
neg	eax
sbb	eax, eax
retn
align 10h
public CERT_VerifySignedDataWithPublicKey
			
sub	esp, 10h
mov	edx, [esp+10h+arg_4]
mov	[esp+10h+var_10], 0
test	edx, edx
jz	short loc_1000A751
mov	eax, [esp+10h+arg_0]
test	eax, eax
jz	short loc_1000A751
mov	ecx, [eax+24h]
mov	[esp+10h+var_C], ecx
mov	ecx, [eax+28h]
mov	[esp+10h+var_8], ecx
mov	ecx, [eax+2Ch]
add	ecx, 7
shr	ecx, 3
mov	[esp+10h+var_4], ecx
mov	ecx, [esp+10h+arg_8]
push	ecx
lea	ecx, [esp+14h+var_10]
push	ecx
lea	ecx, [eax+0Ch]
push	ecx
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	edx
mov	edx, [eax+8]
mov	eax, [eax+4]
push	edx
push	eax
call	VFY_VerifyDataWithAlgorithmID
add	esp, 1Ch
test	eax, eax
jnz	short loc_1000A761
mov	edx, [esp+10h+var_10]
lea	ecx, [esp+10h+arg_4]
push	ecx
push	edx
mov	[esp+18h+arg_4], eax
call	NSS_GetAlgorithmPolicy
add	esp, 8
test	eax, eax
jnz	short loc_1000A761
test	byte ptr [esp+10h+arg_4], 1
jnz	short loc_1000A761
push	0FFFFE0B0h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
add	esp, 10h
retn
			
push	0FFFFE89Dh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
			
add	esp, 10h
retn
align 10h
public CERT_VerifySignedDataWithPublicKeyInfo
mov	eax, [esp+arg_4]
push	esi
push	edi
push	eax
or	edi, 0FFFFFFFFh
call	SECKEY_ExtractPublicKey
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1000A7A3
mov	ecx, [esp+8+arg_8]
mov	edx, [esp+8+arg_0]
push	ecx
push	esi
push	edx
call	CERT_VerifySignedDataWithPublicKey
push	esi
mov	edi, eax
call	SECKEY_DestroyPublicKey
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public CERT_VerifySignedData
			
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_8]
push	esi
mov	esi, [esp+4+arg_4]
push	edi
push	0
push	eax
push	ecx
push	esi
or	edi, 0FFFFFFFFh
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jz	short loc_1000A7D7
or	eax, edi
pop	edi
pop	esi
retn
push	esi
call	CERT_ExtractPublicKey
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1000A801
mov	edx, [esp+8+arg_10]
mov	eax, [esp+8+arg_0]
push	edx
push	esi
push	eax
call	CERT_VerifySignedDataWithPublicKey
push	esi
mov	edi, eax
call	SECKEY_DestroyPublicKey
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_14]
mov	ecx, [esp+arg_10]
mov	edx, [esp+arg_C]
push	eax
mov	eax, [esp+4+arg_8]
push	ecx
mov	ecx, [esp+8+arg_4]
push	edx
push	0
push	eax
push	ecx
call	sub_100411C0
add	esp, 18h
retn
align 10h
public CERT_FindCertIssuer
			
sub	esp, 20h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+20h+var_4], eax
push	ebx
mov	ebx, [esp+24h+arg_8]
push	ebp
mov	ebp, [esp+28h+arg_0]
push	esi
mov	esi, [esp+2Ch+arg_4]
push	edi
push	ebp
call	sub_1004B930
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1000A877
push	0FFFFE013h
jmp	loc_1000A93A
push	ebx
push	esi
push	0
call	sub_1004A1F0
mov	ecx, [esp+3Ch+arg_C]
mov	esi, eax
xor	eax, eax
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_C], ecx
mov	[esp+3Ch+var_8], 1
mov	[esp+3Ch+var_20], eax
mov	[esp+3Ch+var_1C], eax
mov	[esp+3Ch+var_18], eax
call	sub_1004A850
mov	ebx, eax
call	sub_1004A860
push	eax
push	ebx
lea	edx, [esp+44h+var_14]
push	edx
push	0
push	2
lea	eax, [esp+50h+var_20]
push	eax
push	0
lea	ecx, [esp+58h+var_10]
push	ecx
push	esi
push	edi
call	sub_10046C40
push	esi
call	sub_10050550
add	esp, 38h
cmp	[esp+30h+var_14], 0
jnz	short loc_1000A924
cmp	[esp+30h+var_1C], 0
jnz	short loc_1000A8FA
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
mov	ecx, [esp+20h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 20h
retn
mov	edx, [esp+30h+var_20]
push	edx
call	sub_100461A0
mov	eax, [esp+34h+var_1C]
push	eax
call	sub_1004B8F0
add	esp, 8
pop	edi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+20h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 20h
retn
mov	eax, [esp+30h+var_20]
test	eax, eax
jz	short loc_1000A935
push	eax
call	sub_100461A0
add	esp, 4
push	0FFFFE00Dh
call	PORT_SetError_Util
mov	ecx, [esp+34h+var_4]
add	esp, 4
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 20h
retn
align 10h
			
mov	eax, [esp+arg_0]
cmp	eax, 0Bh	
ja	short loc_1000A9B5 
jmp	ds:off_1000A9BC[eax*4] 
			
mov	eax, 80h	
xor	ecx, ecx
jmp	short loc_1000A99E
			
xor	ecx, ecx	
jmp	short loc_1000A999
			
mov	eax, 210h	
xor	ecx, ecx
jmp	short loc_1000A99E
			
mov	ecx, 1		
jmp	short loc_1000A999
			
mov	ecx, 2		
jmp	short loc_1000A999
			
mov	ecx, 3		
			
mov	eax, 10h
			
mov	edx, [esp+arg_4]
test	edx, edx
jz	short loc_1000A9A8
mov	[edx], eax
mov	eax, [esp+arg_8]
test	eax, eax
jz	short loc_1000A9B2
mov	[eax], ecx
xor	eax, eax
retn
			
			
or	eax, 0FFFFFFFFh	
retn
align 4
dd offset loc_1000A979	
dd offset loc_1000A97D
dd offset loc_1000A979
dd offset loc_1000A986
dd offset loc_1000A986
dd offset loc_1000A98D
dd offset loc_1000A9B5
dd offset loc_1000A994
dd offset loc_1000A9B5
dd offset loc_1000A994
dd offset loc_1000A994
align 10h
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
mov	eax, [edi]
push	18h
push	eax
call	PORT_ArenaAlloc_Util
mov	esi, eax
xor	ebx, ebx
add	esp, 8
cmp	esi, ebx
jz	loc_1000AAB8
mov	ecx, [esp+0Ch+arg_4]
push	ecx
call	CERT_DupCertificate
mov	edx, [esp+10h+arg_8]
mov	ecx, [esp+10h+arg_C]
mov	[esi], eax
mov	eax, [esp+10h+arg_10]
mov	[esi+4], edx
mov	[esi+8], ecx
mov	[esi+0Ch], eax
mov	eax, [edi+0Ch]
add	esp, 4
cmp	eax, ebx
jnz	short loc_1000AA4E
mov	[edi+0Ch], esi
mov	[edi+8], esi
mov	[esi+14h], ebx
mov	[esi+10h], ebx
inc	dword ptr [edi+4]
pop	edi
pop	esi
pop	ebx
retn
cmp	ecx, [eax+8]
jb	short loc_1000AA69
mov	[esi+14h], eax
mov	ecx, [edi+0Ch]
mov	[ecx+10h], esi
mov	[edi+0Ch], esi
mov	[esi+10h], ebx
inc	dword ptr [edi+4]
pop	edi
pop	esi
pop	ebx
retn
mov	edx, [edi+8]
cmp	ecx, [edx+8]
jnb	short loc_1000AA90
mov	[esi+14h], ebx
mov	eax, [edi+8]
mov	[esi+10h], eax
mov	ecx, [edi+8]
mov	[ecx+14h], esi
inc	dword ptr [edi+4]
mov	[edi+8], esi
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
cmp	ecx, [eax+8]
jnb	short loc_1000AAA3
mov	eax, [eax+14h]
cmp	eax, ebx
jnz	short loc_1000AA90
inc	dword ptr [edi+4]
pop	edi
pop	esi
pop	ebx
retn
mov	[esi+14h], eax
mov	edx, [eax+10h]
mov	[esi+10h], edx
mov	ecx, [eax+10h]
mov	[ecx+14h], esi
mov	[eax+10h], esi
inc	dword ptr [edi+4]
pop	edi
pop	esi
pop	ebx
retn
align 10h
sub	esp, 78h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+78h+var_4], eax
mov	eax, [esp+78h+arg_8]
mov	edx, [esp+78h+arg_14]
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+80h+arg_C]
mov	[esp+80h+var_20], eax
mov	eax, [esp+80h+arg_18]
push	esi
mov	[esp+84h+var_28], eax
mov	eax, [esp+84h+arg_20]
push	edi
mov	edi, [esp+88h+arg_1C]
mov	esi, ecx
mov	ecx, [esp+88h+arg_10]
mov	[esp+88h+var_40], ebp
mov	[esp+88h+var_54], ecx
mov	[esp+88h+var_50], edx
mov	[esp+88h+var_1C], edi
mov	[esp+88h+var_24], eax
mov	[esp+88h+var_70], ebx
mov	[esp+88h+var_78], ebx
mov	[esp+88h+var_3C], ebx
mov	[esp+88h+var_44], ebx
mov	[esp+88h+var_4C], ebx
mov	[esp+88h+var_60], ebx
mov	[esp+88h+var_34], ebx
mov	[esp+88h+var_68], ebx
mov	[esp+88h+var_30], 10h
mov	[esp+88h+var_58], ebx
cmp	eax, ebx
jz	short loc_1000AB55
mov	[eax], ebx
lea	ecx, [esp+88h+var_38]
push	ecx
lea	edx, [esp+8Ch+var_5C]
push	edx
push	1
push	ebp
call	sub_1003BF70
add	esp, 10h
test	eax, eax
jz	short loc_1000AB7E
cmp	edi, ebx
jz	loc_1000B21E
mov	[esp+88h+var_5C], ebx
mov	[esp+88h+var_38], ebx
cmp	ebp, 0Bh	
ja	short loc_1000ABB2 
movzx	eax, ss:byte_1000B300[ebp]
jmp	ds:off_1000B2F8[eax*4] 
			
lea	ecx, [esp+88h+var_74] 
push	ecx
lea	edx, [esp+8Ch+var_64]
push	edx
push	ebp
call	sub_1000A960
add	esp, 0Ch
test	eax, eax
jz	short loc_1000ABC6
cmp	edi, ebx
jz	loc_1000B21E
jmp	short loc_1000ABBE
			
			
cmp	edi, ebx	
jz	loc_1000B21E
mov	[esp+88h+var_38], ebx
mov	[esp+88h+var_74], ebx
mov	[esp+88h+var_64], ebx
push	esi
call	CERT_DupCertificate
add	esp, 4
mov	[esp+88h+var_78], eax
cmp	eax, ebx
jz	loc_1000B21E
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+88h+var_60], eax
cmp	eax, ebx
jz	loc_1000B21E
push	40h
call	PORT_ZAlloc_Util
add	esp, 4
mov	[esp+88h+var_68], eax
cmp	eax, ebx
jz	loc_1000B21E
xor	esi, esi
xor	ebp, ebp
mov	[esp+88h+var_6C], ebp
jmp	short loc_1000AC16
xor	ebx, ebx
mov	[esp+88h+var_48], ebx
cmp	esi, ebx
jnz	loc_1000ACCC
cmp	ebp, ebx
jnz	short loc_1000AC31
mov	eax, 1
cmp	[esp+88h+var_40], eax
jz	short loc_1000AC33
xor	eax, eax
mov	ecx, [esp+88h+var_78]
push	eax
mov	eax, [esp+8Ch+var_60]
push	eax
push	ecx
call	CERT_GetConstrainedCertificateNames
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	loc_1000B21E
push	ebp
call	sub_10042820
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_1000B21E
mov	edx, [esp+88h+var_58]
lea	ebx, [esi+edx]
cmp	[esp+88h+var_30], ebx
jg	short loc_1000AC95
mov	ecx, [esp+88h+var_68]
lea	eax, [ebx+ebx]
mov	[esp+88h+var_30], eax
add	eax, eax
add	eax, eax
push	eax
push	ecx
call	PORT_Realloc_Util
add	esp, 8
test	eax, eax
jz	loc_1000B21E
mov	[esp+88h+var_68], eax
test	esi, esi
jle	short loc_1000ACB0
mov	eax, [esp+88h+var_58]
mov	edx, [esp+88h+var_68]
lea	edi, [edx+eax*4]
mov	eax, [esp+88h+var_78]
mov	ecx, esi
rep stosd
mov	edi, [esp+88h+var_1C]
mov	ecx, [esp+88h+var_34]
push	ebp
push	ecx
mov	[esp+90h+var_58], ebx
call	sub_10042640
mov	ebp, [esp+90h+var_6C]
add	esp, 8
mov	[esp+88h+var_34], eax
xor	ebx, ebx
mov	edx, [esp+88h+var_78]
test	byte ptr [edx+174h], 1
jz	short loc_1000AD04
push	0FFFFE029h
call	PORT_SetError_Util
add	esp, 4
cmp	edi, ebx
jz	loc_1000B21E
push	ebx
push	ebp
call	PORT_GetError_Util
push	eax
mov	eax, [esp+94h+var_78]
push	eax
push	edi
call	sub_1000A9F0
add	esp, 14h
mov	ecx, [esp+88h+var_40]
mov	edx, [esp+88h+var_50]
mov	eax, [esp+88h+var_54]
mov	esi, [esp+88h+var_78]
push	ecx
push	edx
push	eax
push	esi
call	CERT_FindCertIssuer
mov	ebx, eax
add	esp, 10h
mov	[esp+88h+var_70], ebx
test	ebx, ebx
jz	loc_1000B27F
cmp	[esp+88h+arg_4], 0
jz	loc_1000ADCE
mov	ecx, [esp+88h+var_28]
mov	edx, [esp+88h+var_50]
mov	eax, [esp+88h+var_54]
push	ecx
push	edx
push	eax
lea	ecx, [esi+0Ch]
push	ebx
push	ecx
call	CERT_VerifySignedData
add	esp, 14h
test	eax, eax
jz	short loc_1000ADCE
mov	eax, [esp+88h+var_20]
test	eax, eax
jz	short loc_1000AD6A
mov	dword ptr [eax], 1
call	PORT_GetError_Util
cmp	eax, 0FFFFE00Bh
jnz	short loc_1000AD9A
push	0FFFFE01Eh
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
lea	edx, [ebp+1]
push	0
push	edx
call	PORT_GetError_Util
push	eax
push	ebx
jmp	short loc_1000ADC5
call	PORT_GetError_Util
cmp	eax, 0FFFFE0B0h
jz	short loc_1000ADB3
push	0FFFFE00Ah
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
push	0
push	ebp
call	PORT_GetError_Util
push	eax
push	esi
push	edi
call	sub_1000A9F0
add	esp, 14h
			
lea	eax, [esp+88h+var_18]
push	eax
push	ebx
call	sub_1003E930
add	esp, 8
test	eax, eax
jz	short loc_1000AE14
call	PORT_GetError_Util
cmp	eax, 0FFFFE023h
jz	short loc_1000AE0A
test	edi, edi
jz	loc_1000B21E
lea	ecx, [ebp+1]
push	0
push	ecx
call	PORT_GetError_Util
push	eax
push	ebx
push	edi
call	sub_1000A9F0
add	esp, 14h
mov	[esp+88h+var_2C], 0
jmp	short loc_1000AE88
cmp	[esp+88h+var_18], 0
jnz	short loc_1000AE46
push	0FFFFE024h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
lea	edx, [ebp+1]
push	0
push	edx
call	PORT_GetError_Util
push	eax
push	ebx
push	edi
call	sub_1000A9F0
add	esp, 14h
mov	eax, [esp+88h+var_14]
mov	esi, eax
mov	[esp+88h+var_2C], 1
test	eax, eax
js	short loc_1000AE88
cmp	[esp+88h+var_4C], eax
jle	short loc_1000AE88
push	0FFFFE025h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
lea	eax, [ebp+1]
push	esi
push	eax
call	PORT_GetError_Util
push	eax
push	ebx
push	edi
call	sub_1000A9F0
add	esp, 14h
			
mov	edx, [esp+88h+var_60]
mov	eax, [esp+88h+var_68]
lea	ecx, [esp+88h+var_3C]
push	ecx
mov	ecx, [esp+8Ch+var_34]
push	edx
push	eax
push	ecx
push	ebx
call	sub_100431A0
add	esp, 14h
test	eax, eax
jnz	loc_1000B2CD
cmp	[esp+88h+var_3C], eax
jnz	loc_1000B2CD
mov	edx, [esp+88h+var_28]
mov	eax, [esp+88h+var_50]
mov	ecx, [esp+88h+var_54]
mov	esi, [esp+88h+var_78]
push	edx
mov	edx, [esp+8Ch+arg_0]
push	eax
push	ecx
push	ebx
push	esi
push	edx
call	sub_1000A810
add	esp, 18h
cmp	eax, 0FFFFFFFFh
jnz	short loc_1000AEF9
mov	eax, [esp+88h+var_24]
test	eax, eax
jz	short loc_1000AEEF
mov	dword ptr [eax], 1
test	edi, edi
jz	loc_1000B21E
jmp	short loc_1000AF18
cmp	eax, 0FFFFFFFEh
jnz	short loc_1000AF2B
mov	eax, [esp+88h+var_24]
mov	[esp+88h+var_44], 0FFFFFFFFh
test	eax, eax
jz	short loc_1000AF14
mov	dword ptr [eax], 1
test	edi, edi
jz	short loc_1000AF2B
push	0
push	ebp
call	PORT_GetError_Util
push	eax
push	esi
push	edi
call	sub_1000A9F0
add	esp, 14h
			
lea	eax, [esp+88h+var_10]
push	eax
push	ebx
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	loc_1000B10A
mov	eax, [esp+88h+var_40]
cmp	eax, 0Bh
jz	loc_1000B02C
cmp	eax, 0Ah
jz	loc_1000B02C
cmp	eax, 8
jnz	loc_1000B00C
mov	ecx, [esp+88h+var_78]
mov	eax, [ecx+13Ch]
test	al, 2
jz	short loc_1000AF7C
mov	ebx, [esp+88h+var_C]
mov	[esp+88h+var_74], 1
jmp	short loc_1000AFA8
test	al, 4
jz	short loc_1000AF8E
mov	ebx, [esp+88h+var_10]
mov	[esp+88h+var_74], 0
jmp	short loc_1000AFA8
mov	[esp+88h+var_74], 2
xor	ebx, ebx
cmp	[esp+88h+var_74], 2
setnz	bl
dec	ebx
and	ebx, [esp+88h+var_8]
			
mov	eax, [esp+88h+var_64]
mov	edx, ebx
and	edx, eax
cmp	edx, eax
jz	loc_1000B29F
test	bl, 8
jz	short loc_1000AFC5
mov	[esp+88h+var_48], 1
test	bl, 1
jz	loc_1000B0F7
test	bl, 12h
jnz	loc_1000B0F7
push	0FFFFE014h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
mov	eax, [esp+88h+var_6C]
inc	eax
push	ebx
push	eax
call	PORT_GetError_Util
mov	ecx, [esp+90h+var_70]
push	eax
push	ecx
push	edi
call	sub_1000A9F0
add	esp, 14h
jmp	loc_1000B0F7
mov	eax, [esp+88h+var_74]
test	eax, eax
jnz	short loc_1000B01A
mov	ebx, [esp+88h+var_10]
jmp	short loc_1000AFA8
cmp	eax, 1
jnz	loc_1000AF96
mov	ebx, [esp+88h+var_C]
jmp	loc_1000AFA8
			
mov	ebp, [esp+88h+var_8]
mov	edx, [esp+88h+var_64]
xor	ecx, ecx
lea	esi, [ecx+1]
lea	esp, [esp+0]
test	ecx, ecx
jnz	short loc_1000B04A
mov	eax, [esp+88h+var_10]
jmp	short loc_1000B05F
cmp	ecx, esi
jnz	short loc_1000B054
mov	eax, [esp+88h+var_C]
jmp	short loc_1000B05F
xor	eax, eax
cmp	ecx, 2
setnz	al
dec	eax
and	eax, ebp
			
mov	ebx, eax
and	ebx, edx
cmp	ebx, edx
jz	loc_1000B29F
test	al, 8
jz	short loc_1000B073
mov	[esp+88h+var_48], esi
add	ecx, esi
cmp	ecx, 3
jl	short loc_1000B040
xor	eax, eax
mov	[esp+88h+var_74], eax
jmp	short loc_1000B086
mov	eax, [esp+88h+var_74]
test	eax, eax
jnz	short loc_1000B090
mov	ebx, [esp+88h+var_10]
jmp	short loc_1000B0A8
cmp	eax, 1
jnz	short loc_1000B09B
mov	ebx, [esp+88h+var_C]
jmp	short loc_1000B0A8
xor	ebx, ebx
cmp	[esp+88h+var_74], 2
setnz	bl
dec	ebx
and	ebx, ebp
			
test	bl, 1
jz	short loc_1000B0E9
test	bl, 12h
jnz	short loc_1000B0E9
push	0FFFFE014h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
mov	edx, [esp+88h+var_6C]
inc	edx
push	ebx
push	edx
call	PORT_GetError_Util
push	eax
mov	eax, [esp+94h+var_70]
push	eax
push	edi
call	sub_1000A9F0
mov	ebp, [esp+9Ch+var_8]
add	esp, 14h
			
mov	eax, [esp+88h+var_74]
inc	eax
mov	[esp+88h+var_74], eax
cmp	eax, 3
jl	short loc_1000B082
			
cmp	[esp+88h+var_48], 0
mov	ebp, [esp+88h+var_6C]
mov	ebx, [esp+88h+var_70]
jnz	loc_1000B19D
mov	eax, [esp+88h+var_2C]
test	eax, eax
jz	short loc_1000B11E
test	dword ptr [ebx+13Ch], 4007h
jz	short loc_1000B12E
mov	eax, [ebx+13Ch]
and	eax, [esp+88h+var_38]
neg	eax
sbb	eax, eax
neg	eax
test	eax, eax
jnz	short loc_1000B15D
push	0FFFFE024h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
lea	ecx, [ebp+1]
push	0
push	ecx
call	PORT_GetError_Util
push	eax
push	ebx
push	edi
call	sub_1000A9F0
add	esp, 14h
mov	edx, [esp+88h+var_5C]
push	edx
push	ebx
call	sub_1003C090
add	esp, 8
test	eax, eax
jz	short loc_1000B19D
push	0FFFFE05Ah
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
mov	eax, [esp+88h+var_5C]
push	eax
lea	ecx, [ebp+1]
push	ecx
call	PORT_GetError_Util
push	eax
push	ebx
push	edi
call	sub_1000A9F0
add	esp, 14h
			
cmp	dword ptr [ebx+170h], 0
jnz	loc_1000B2A8
lea	edx, [ebx+54h]
push	edx
lea	eax, [ebx+48h]
push	eax
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	short loc_1000B1CB
cmp	dword ptr [ebx+5Ch], 0
jbe	short loc_1000B1CB
mov	esi, 1
jmp	short loc_1000B1D1
			
xor	esi, esi
inc	[esp+88h+var_4C]
mov	ecx, [esp+88h+var_78]
push	ecx
call	CERT_DestroyCertificate
inc	ebp
add	esp, 4
mov	[esp+88h+var_78], ebx
mov	[esp+88h+var_70], 0
mov	[esp+88h+var_6C], ebp
cmp	ebp, 14h
jl	loc_1000AC14
push	0FFFFE00Dh
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	short loc_1000B21E
push	0
push	ebp
call	PORT_GetError_Util
push	eax
mov	eax, ebx
push	eax
			
push	edi
call	sub_1000A9F0
add	esp, 14h
			
or	esi, 0FFFFFFFFh
mov	eax, [esp+88h+var_68]
test	eax, eax
jz	short loc_1000B232
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+88h+var_70]
test	eax, eax
jz	short loc_1000B243
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, [esp+88h+var_78]
test	eax, eax
jz	short loc_1000B254
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, [esp+88h+var_60]
test	eax, eax
jz	short loc_1000B267
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	ecx, [esp+88h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
push	0FFFFE00Dh
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	short loc_1000B21E
push	0
push	ebp
call	PORT_GetError_Util
push	eax
push	esi
jmp	loc_1000B215
			
mov	esi, [esp+88h+var_44]
jmp	loc_1000B221
push	0FFFFE014h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
inc	ebp
push	0
push	ebp
call	PORT_GetError_Util
push	eax
push	ebx
jmp	loc_1000B215
			
push	0FFFFE070h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000B21E
inc	ebp
push	0
push	ebp
call	PORT_GetError_Util
mov	edx, [esp+90h+var_3C]
push	eax
push	edx
jmp	loc_1000B215
align 4
dd offset loc_1000ABB2	
db	0,     0,     0,     1 
db	0,     1,     0,     0
align 10h
			
call	CERT_GetUsePKIXForValidation
test	eax, eax
mov	eax, [esp+arg_24]
push	eax
jz	short loc_1000B34F
mov	ecx, [esp+4+arg_C]
mov	edx, [esp+4+arg_20]
mov	eax, [esp+4+arg_1C]
push	ecx
mov	ecx, [esp+8+arg_18]
push	edx
mov	edx, [esp+0Ch+arg_14]
push	eax
mov	eax, [esp+10h+arg_10]
push	ecx
mov	ecx, [esp+14h+arg_8]
push	edx
mov	edx, [esp+18h+arg_4]
push	eax
push	ecx
push	edx
call	sub_1000DA60
add	esp, 24h
retn
mov	ecx, [esp+4+arg_20]
mov	edx, [esp+4+arg_1C]
mov	eax, [esp+4+arg_18]
push	ecx
mov	ecx, [esp+8+arg_14]
push	edx
mov	edx, [esp+0Ch+arg_10]
push	eax
mov	eax, [esp+10h+arg_C]
push	ecx
mov	ecx, [esp+14h+arg_8]
push	edx
mov	edx, [esp+18h+arg_0]
push	eax
push	ecx
mov	ecx, [esp+20h+arg_4]
push	edx
call	sub_1000AAC0
add	esp, 24h
retn
align 10h
mov	eax, [esp+arg_1C]
mov	ecx, [esp+arg_18]
mov	edx, [esp+arg_14]
push	0
push	eax
mov	eax, [esp+8+arg_10]
push	ecx
mov	ecx, [esp+0Ch+arg_C]
push	edx
mov	edx, [esp+10h+arg_8]
push	eax
mov	eax, [esp+14h+arg_4]
push	ecx
mov	ecx, [esp+18h+arg_0]
push	0
push	edx
push	eax
push	ecx
call	sub_1000B310
add	esp, 28h
retn
align 10h
public CERT_VerifyCACertForUsage
sub	esp, 3Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+3Ch+var_4], eax
mov	eax, [esp+3Ch+arg_10]
mov	ecx, [esp+3Ch+arg_14]
mov	edx, [esp+3Ch+arg_18]
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebp
push	esi
mov	esi, [esp+48h+arg_1C]
push	edi
mov	edi, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_28], eax
lea	eax, [esp+4Ch+var_34]
push	eax
mov	[esp+50h+var_24], ecx
lea	ecx, [esp+50h+var_30]
push	ecx
push	1
xor	ebp, ebp
push	ebx
mov	[esp+5Ch+var_20], ebx
mov	[esp+5Ch+var_1C], edx
mov	[esp+5Ch+var_2C], ebp
call	sub_1003BF70
add	esp, 10h
test	eax, eax
jz	short loc_1000B439
cmp	esi, ebp
jz	loc_1000B6B4
mov	[esp+4Ch+var_30], ebp
mov	[esp+4Ch+var_34], ebp
cmp	ebx, 0Ah	
ja	short loc_1000B46D 
movzx	edx, ds:byte_1000B70C[ebx]
jmp	ds:off_1000B704[edx*4] 
			
lea	eax, [esp+4Ch+var_3C] 
push	eax
lea	ecx, [esp+50h+var_38]
push	ecx
push	ebx
call	sub_1000A960
add	esp, 0Ch
test	eax, eax
jz	short loc_1000B481
cmp	esi, ebp
jz	loc_1000B6B4
jmp	short loc_1000B479
			
			
cmp	esi, ebp	
jz	loc_1000B6B4
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_38], ebp
lea	edx, [esp+4Ch+var_18]
push	edx
push	edi
call	sub_1003E930
add	esp, 8
test	eax, eax
jz	short loc_1000B4BB
call	PORT_GetError_Util
cmp	eax, 0FFFFE023h
jz	short loc_1000B4ED
cmp	esi, ebp
jz	loc_1000B6B4
push	ebp
push	ebp
call	PORT_GetError_Util
push	eax
push	edi
push	esi
call	sub_1000A9F0
add	esp, 14h
jmp	short loc_1000B4ED
cmp	[esp+4Ch+var_18], ebp
jnz	short loc_1000B4E8
push	0FFFFE024h
call	PORT_SetError_Util
add	esp, 4
cmp	esi, ebp
jz	loc_1000B6B4
push	ebp
push	ebp
call	PORT_GetError_Util
push	eax
push	edi
push	esi
call	sub_1000A9F0
add	esp, 14h
mov	ebp, 1
			
lea	eax, [esp+4Ch+var_10]
push	eax
push	edi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	loc_1000B605
cmp	ebx, 0Ah
jnz	short loc_1000B583
mov	ebp, [esp+4Ch+var_24]
push	ebx
mov	ebx, [esp+50h+var_28]
push	ebp
push	ebx
push	edi
call	CERT_FindCertIssuer
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_1000B56E
mov	ecx, [esp+4Ch+var_1C]
mov	edx, [esp+4Ch+arg_0]
push	ecx
push	ebp
push	ebx
push	esi
push	edi
push	edx
call	sub_1000A810
add	esp, 18h
test	eax, eax
jz	short loc_1000B565
push	0FFFFE00Ch
call	PORT_SetError_Util
push	esi
call	CERT_DestroyCertificate
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+3Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
push	esi
call	CERT_DestroyCertificate
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+3Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
mov	eax, [esp+4Ch+var_3C]
test	eax, eax
jnz	short loc_1000B591
mov	ebx, [esp+4Ch+var_10]
jmp	short loc_1000B5AB
cmp	eax, 1
jnz	short loc_1000B59C
mov	ebx, [esp+4Ch+var_C]
jmp	short loc_1000B5AB
xor	ebx, ebx
cmp	[esp+4Ch+var_3C], 2
setnz	bl
dec	ebx
and	ebx, [esp+4Ch+var_8]
			
mov	eax, [esp+4Ch+var_38]
mov	ecx, ebx
and	ecx, eax
cmp	ecx, eax
jz	short loc_1000B56E
test	bl, 8
jz	short loc_1000B5C4
mov	[esp+4Ch+var_2C], 1
test	bl, 1
jz	short loc_1000B5F6
test	bl, 12h
jnz	short loc_1000B5F6
push	0FFFFE015h
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	loc_1000B6B4
push	ebx
push	0
call	PORT_GetError_Util
push	eax
push	edi
push	esi
call	sub_1000A9F0
add	esp, 14h
			
cmp	[esp+4Ch+var_2C], 0
mov	ebx, [esp+4Ch+var_20]
jnz	loc_1000B686
test	ebp, ebp
jz	short loc_1000B615
test	dword ptr [edi+13Ch], 4007h
jz	short loc_1000B625
mov	ebp, [edi+13Ch]
and	ebp, [esp+4Ch+var_34]
neg	ebp
sbb	ebp, ebp
neg	ebp
test	ebp, ebp
jnz	short loc_1000B64C
push	0FFFFE024h
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_1000B6B4
push	ebp
push	ebp
call	PORT_GetError_Util
push	eax
push	edi
push	esi
call	sub_1000A9F0
add	esp, 14h
mov	edx, [esp+4Ch+var_30]
push	edx
push	edi
call	sub_1003C090
add	esp, 8
test	eax, eax
jz	short loc_1000B686
push	0FFFFE05Ah
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_1000B6B4
mov	eax, [esp+4Ch+var_30]
push	eax
push	0
call	PORT_GetError_Util
push	eax
push	edi
push	esi
call	sub_1000A9F0
add	esp, 14h
			
cmp	dword ptr [edi+170h], 0
jz	short loc_1000B6CA
push	0FFFFE014h
call	PORT_SetError_Util
add	esp, 4
test	esi, esi
jz	short loc_1000B6B4
push	0
push	0
call	PORT_GetError_Util
push	eax
push	edi
push	esi
call	sub_1000A9F0
add	esp, 14h
			
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+3Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
mov	ecx, [esp+4Ch+var_1C]
mov	edx, [esp+4Ch+var_24]
mov	eax, [esp+4Ch+var_28]
push	esi
push	ecx
mov	ecx, [esp+54h+arg_8]
push	edx
mov	edx, [esp+58h+arg_0]
push	eax
push	ebx
push	ecx
push	edi
push	edx
call	sub_1000B390
mov	ecx, [esp+6Ch+var_4]
add	esp, 20h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
align 4
dd offset loc_1000B46D	
db	0,     0,     0,     1 
db	0,     1,     0
align 10h
			
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
mov	eax, [esp+10h+arg_0]
push	ebx
push	esi
mov	esi, [esp+18h+arg_C]
push	edi
mov	edi, [esp+1Ch+arg_8]
lea	ecx, [esp+1Ch+var_10]
push	ecx
mov	dword ptr [edi], 0
push	eax
mov	dword ptr [esi], 0
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_1000B789 
mov	eax, [esp+1Ch+arg_4]
cmp	eax, 0Bh	
ja	short loc_1000B789 
mov	ebx, [esp+1Ch+var_8]
mov	edx, [esp+1Ch+var_C]
mov	ecx, [esp+1Ch+var_10]
jmp	ds:off_1000B87C[eax*4] 
			
mov	eax, [esp+1Ch+var_10] 
			
test	al, 1
jz	short loc_1000B789 
test	al, 2
jz	short loc_1000B7A9
			
mov	dword ptr [esi], 1
			
pop	edi		
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
			
mov	eax, [esp+1Ch+var_10] 
test	al, 1
jz	short loc_1000B789 
test	al, 2
jnz	short loc_1000B789 
mov	[edi], eax
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
			
mov	eax, [esp+1Ch+var_10] 
test	al, 1
jz	short loc_1000B789 
test	al, 12h
jnz	short loc_1000B789 
mov	[edi], eax
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
			
mov	eax, [esp+1Ch+var_C] 
jmp	short loc_1000B77B
			
mov	eax, [esp+1Ch+var_8] 
jmp	short loc_1000B77B
			
mov	eax, ecx	
and	eax, 18h
cmp	al, 18h
jz	short loc_1000B783
mov	eax, edx
and	eax, 18h
cmp	al, 18h
jz	short loc_1000B783
mov	eax, ebx
and	eax, 18h
cmp	al, 18h
jz	loc_1000B783
			
test	cl, 1		
jz	short loc_1000B82F
test	cl, 12h
jnz	short loc_1000B82F
mov	[edi], ecx
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
			
test	dl, 1
jz	short loc_1000B850 
test	dl, 12h
jnz	short loc_1000B850 
mov	[edi], edx
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
			
test	bl, 1		
jz	loc_1000B789	
test	bl, 12h
jnz	loc_1000B789	
mov	ecx, [esp+1Ch+var_4]
mov	[edi], ebx
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
or	eax, 0FFFFFFFFh
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 4
dd offset loc_1000B777	
dd offset loc_1000B79D
dd offset loc_1000B7C0
dd offset loc_1000B7E3
dd offset loc_1000B7E3
dd offset loc_1000B7E9
dd offset loc_1000B80E
dd offset loc_1000B7EF
dd offset loc_1000B850
dd offset loc_1000B7EF
dd offset loc_1000B80E
align 10h
public CERT_VerifyCertificate
			
sub	esp, 24h
mov	edx, [esp+24h+arg_C]
push	ebx
push	ebp
xor	ebp, ebp
mov	eax, edx
or	eax, [esp+2Ch+arg_10]
push	esi
push	edi
mov	[esp+34h+var_C], ebp
mov	[esp+34h+var_1C], ebp
mov	[esp+34h+var_18], ebp
mov	[esp+34h+var_10], ebp
mov	[esp+34h+var_14], ebp
jnz	short loc_1000B8E1
mov	[esp+34h+var_1C], 1
mov	ebx, [esp+34h+arg_24]
cmp	ebx, ebp
jz	short loc_1000B8F0
mov	[ebx], ebp
mov	[ebx+4], ebp
jmp	short loc_1000B8F4
mov	[esp+34h+var_1C], ebp
mov	eax, edx
and	eax, 2
xor	ecx, ecx
or	eax, ecx
mov	[esp+34h+arg_24], ebp
jnz	short loc_1000B90C
mov	eax, edx
and	eax, 4
or	eax, ecx
jz	short loc_1000B911
mov	eax, 1
mov	ecx, [esp+34h+arg_18]
mov	edx, [esp+34h+arg_14]
mov	esi, [esp+34h+arg_4]
push	eax
push	ecx
push	edx
push	esi
call	CERT_CheckCertValidTimes
mov	edi, [esp+44h+arg_20]
add	esp, 10h
cmp	eax, ebp
jz	short loc_1000B952
or	ecx, 0FFFFFFFFh
mov	[esp+34h+arg_24], ecx
cmp	edi, ebp
jz	loc_1000BC2D
push	eax
push	ebp
call	PORT_GetError_Util
push	eax
push	esi
push	edi
call	sub_1000A9F0
add	esp, 14h
push	esi
call	sub_1003E510
mov	eax, [esi+13Ch]
add	esp, 4
mov	[esp+34h+var_8], eax
mov	edi, 1
lea	ebx, [ebx+0]
mov	eax, [esp+34h+arg_24]
test	eax, eax
jz	short loc_1000B986
test	ebx, ebx
jnz	short loc_1000B986
cmp	[esp+34h+arg_20], ebx
jz	loc_1000BC2F
			
mov	eax, edi
cdq
mov	ecx, eax
and	ecx, [esp+34h+arg_C]
mov	esi, edx
and	esi, [esp+34h+arg_10]
or	ecx, esi
jz	short loc_1000B9A0
mov	esi, 1
jmp	short loc_1000B9AC
xor	esi, esi
cmp	[esp+34h+var_1C], esi
jz	loc_1000BC12	
xor	ecx, ecx
cmp	ebx, ecx
jz	short loc_1000B9B7
or	[ebx], eax
or	[ebx+4], edx
cmp	ebp, 0Bh	
ja	loc_1000BBEF	
movzx	edx, ss:byte_1000BC40[ebp]
jmp	ds:off_1000BC38[edx*4] 
			
lea	eax, [esp+34h+var_20] 
push	eax
lea	ecx, [esp+38h+var_24]
push	ecx
push	0
push	ebp
call	sub_1003BF70
add	esp, 10h
test	eax, eax
jz	short loc_1000B9F8
xor	eax, eax
mov	[esp+34h+var_24], eax
mov	[esp+34h+var_20], eax
cmp	ebx, eax
jmp	loc_1000BBF9
mov	edx, [esp+34h+var_24]
mov	eax, [esp+34h+arg_4]
push	edx
push	eax
call	sub_1003C090
add	esp, 8
test	eax, eax
jz	short loc_1000BA4D
cmp	esi, 1
jnz	short loc_1000BA20
push	0FFFFE05Ah
call	PORT_SetError_Util
add	esp, 4
cmp	[esp+34h+arg_20], 0
jz	short loc_1000BA46
mov	ecx, [esp+34h+var_24]
push	ecx
push	0
call	PORT_GetError_Util
mov	edx, [esp+3Ch+arg_4]
push	eax
mov	eax, [esp+40h+arg_20]
push	edx
push	eax
call	sub_1000A9F0
add	esp, 14h
			
test	ebx, ebx
jmp	loc_1000BBF9
mov	ecx, [esp+34h+var_8]
test	[esp+34h+var_20], ecx
jnz	short loc_1000BA96
cmp	esi, 1
jnz	short loc_1000BA69
push	0FFFFE05Bh
call	PORT_SetError_Util
add	esp, 4
cmp	[esp+34h+arg_20], 0
jz	short loc_1000BA46
mov	edx, [esp+34h+var_20]
push	edx
push	0
call	PORT_GetError_Util
mov	ecx, [esp+3Ch+arg_20]
push	eax
mov	eax, [esp+40h+arg_4]
push	eax
push	ecx
call	sub_1000A9F0
add	esp, 14h
test	ebx, ebx
jmp	loc_1000BBF9
mov	ecx, [esp+34h+arg_4]
lea	edx, [esp+34h+var_14]
push	edx
lea	eax, [esp+38h+var_4]
push	eax
push	ebp
push	ecx
call	sub_1000B720
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_1000BAD6
cmp	esi, 1
jnz	short loc_1000BAC5
push	0FFFFE015h
call	PORT_SetError_Util
add	esp, 4
cmp	[esp+34h+arg_20], 0
jz	loc_1000BA46
mov	edx, [esp+34h+var_4]
jmp	short loc_1000BA74
cmp	[esp+34h+var_14], 0
jnz	loc_1000BC12	
mov	ecx, 1
cmp	[esp+34h+var_18], ecx
jz	loc_1000BBCF
cmp	[esp+34h+var_10], ecx
jz	loc_1000BBCF
mov	eax, [esp+34h+arg_20]
mov	ecx, [esp+34h+arg_1C]
lea	edx, [esp+34h+var_18]
push	edx
mov	edx, [esp+38h+arg_18]
push	eax
mov	eax, [esp+3Ch+arg_14]
push	ecx
push	edx
mov	edx, [esp+44h+arg_8]
push	eax
mov	eax, [esp+48h+arg_4]
push	ebp
lea	ecx, [esp+4Ch+var_10]
push	ecx
mov	ecx, [esp+50h+arg_0]
push	edx
push	eax
push	ecx
call	sub_1000B310
add	esp, 28h
test	eax, eax
jnz	loc_1000BA46
cmp	[esp+34h+var_C], eax
jnz	loc_1000BC12	
mov	edx, [esp+34h+arg_0]
push	edx
mov	[esp+38h+var_C], 1
call	PK11_IsReadOnly
add	esp, 4
cmp	[esp+34h+arg_C], 400h
jnz	short loc_1000BB6C
cmp	[esp+34h+arg_10], 0
jz	loc_1000BC12	
test	eax, eax
jz	loc_1000BC12	
mov	eax, [eax]
test	eax, eax
jz	loc_1000BC12	
mov	ecx, [esp+34h+arg_1C]
mov	edx, [esp+34h+arg_18]
push	ecx
mov	ecx, [esp+38h+arg_14]
push	edx
mov	edx, [esp+3Ch+arg_4]
push	ecx
mov	ecx, [esp+40h+arg_0]
push	edx
push	ecx
call	eax
add	esp, 14h
test	eax, eax
jz	short loc_1000BC12 
cmp	[esp+34h+arg_20], 0
jz	short loc_1000BBC3
push	0
push	0
call	PORT_GetError_Util
mov	edx, [esp+3Ch+arg_4]
push	eax
mov	eax, [esp+40h+arg_20]
push	edx
push	eax
call	sub_1000A9F0
add	esp, 14h
mov	[esp+34h+var_18], 1
test	ebx, ebx
jmp	short loc_1000BBF9
			
test	ebx, ebx
jz	short loc_1000BBDD
mov	eax, edi
not	eax
cdq
and	[ebx], eax
and	[ebx+4], edx
cmp	esi, ecx
jnz	short loc_1000BBE9
mov	[esp+34h+arg_24], 0FFFFFFFFh
add	edi, edi
add	ebp, ecx
jmp	short loc_1000BC15
mov	[esp+34h+var_24], ecx 
mov	[esp+34h+var_20], ecx
cmp	ebx, ecx
			
jz	short loc_1000BC05
mov	eax, edi
not	eax
cdq
and	[ebx], eax
and	[ebx+4], edx
cmp	esi, 1
jnz	short loc_1000BC12 
mov	[esp+34h+arg_24], 0FFFFFFFFh
			
add	edi, edi	
inc	ebp
cmp	edi, 800h
jle	loc_1000B970
mov	eax, [esp+34h+arg_24]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 24h
retn
mov	eax, ecx
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 24h
retn
align 4
dd offset loc_1000BC12	
db	0,     0,     0,     1 
db	1,     1,     0,     1
align 10h
			
sub	esp, 10h
push	ebx
mov	ebx, [esp+14h+arg_C]
push	ebp
push	esi
push	edi
cmp	ebx, 1
jz	short loc_1000BC69
cmp	ebx, 2
jz	short loc_1000BC69
xor	eax, eax
jmp	short loc_1000BC6E
			
mov	eax, 1
mov	ecx, [esp+20h+arg_10]
mov	esi, [esp+20h+arg_4]
push	eax
mov	eax, [esp+24h+arg_14]
push	eax
push	ecx
push	esi
call	CERT_CheckCertValidTimes
mov	edi, [esp+30h+arg_20]
add	esp, 10h
test	eax, eax
jz	short loc_1000BCA9
test	edi, edi
jz	loc_1000BE64
push	eax
push	0
call	PORT_GetError_Util
push	eax
push	esi
push	edi
call	sub_1000A9F0
add	esp, 14h
push	esi
call	sub_1003E510
mov	ebp, [esi+13Ch]
add	esp, 4
cmp	ebx, 0Bh	
ja	short loc_1000BCE4 
movzx	edx, ds:byte_1000BE88[ebx]
jmp	ds:off_1000BE7C[edx*4] 
			
lea	eax, [esp+20h+var_C] 
push	eax
lea	ecx, [esp+24h+var_10]
push	ecx
push	0
push	ebx
call	sub_1003BF70
add	esp, 10h
test	eax, eax
jz	short loc_1000BCF6
			
			
xor	eax, eax	
cmp	edi, eax
jz	loc_1000BE64
mov	[esp+20h+var_C], eax
mov	[esp+20h+var_10], eax
			
mov	edx, [esp+20h+var_10]
push	edx
push	esi
call	sub_1003C090
add	esp, 8
test	eax, eax
jz	short loc_1000BD34
push	0FFFFE05Ah
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000BE64
mov	eax, [esp+20h+var_10]
push	eax
push	0
call	PORT_GetError_Util
push	eax
push	esi
push	edi
call	sub_1000A9F0
add	esp, 14h
test	[esp+20h+var_C], ebp
jnz	short loc_1000BD66
push	0FFFFE05Bh
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000BE64
mov	ecx, [esp+20h+var_C]
push	ecx
push	0
call	PORT_GetError_Util
push	eax
push	esi
push	edi
call	sub_1000A9F0
add	esp, 14h
lea	edx, [esp+20h+var_4]
push	edx
lea	eax, [esp+24h+var_8]
push	eax
push	ebx
push	esi
call	sub_1000B720
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_1000BDD4
push	0FFFFE015h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	loc_1000BE64
mov	ecx, [esp+20h+var_8]
push	ecx
push	0
call	PORT_GetError_Util
push	eax
push	esi
push	edi
call	sub_1000A9F0
add	esp, 14h
jmp	short loc_1000BDDB
			
mov	[esp+20h+var_10], 4 
mov	[esp+20h+var_C], 4007h
test	ebp, 4007h
jnz	loc_1000BCF6
or	ebp, 4007h
jmp	loc_1000BCF6
cmp	[esp+20h+var_4], 0
jnz	short loc_1000BE5A
mov	ebp, [esp+20h+arg_1C]
mov	edx, [esp+20h+arg_14]
mov	eax, [esp+20h+arg_10]
mov	ecx, [esp+20h+arg_8]
push	0
push	edi
push	ebp
push	edx
push	eax
push	ebx
mov	ebx, [esp+38h+arg_0]
push	0
push	ecx
push	esi
push	ebx
call	sub_1000B310
add	esp, 28h
test	eax, eax
jz	short loc_1000BE0B
test	edi, edi
jz	short loc_1000BE64
test	[esp+20h+arg_18], 1
jnz	short loc_1000BE5A
cmp	[esp+20h+arg_C], 0Ah
jz	short loc_1000BE5A
push	ebx
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_1000BE5A
mov	eax, [eax]
test	eax, eax
jz	short loc_1000BE5A
mov	edx, [esp+20h+arg_14]
mov	ecx, [esp+20h+arg_10]
push	ebp
push	edx
push	ecx
push	esi
push	ebx
call	eax
add	esp, 14h
test	eax, eax
jz	short loc_1000BE5A
test	edi, edi
jz	short loc_1000BE64
push	0
push	0
call	PORT_GetError_Util
push	eax
push	esi
push	edi
call	sub_1000A9F0
add	esp, 14h
			
test	edi, edi
jz	short loc_1000BE6F
cmp	dword ptr [edi+8], 0
jz	short loc_1000BE6F
			
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 4
dd offset loc_1000BDAD	
dd offset loc_1000BCE4
db	0,     0,     0,     2 
db	1,     2,     0,     1
align 10h
public CERT_VerifyCertificateNow
			
mov	eax, [esp+arg_18]
mov	ecx, [esp+arg_14]
push	eax
push	0
push	ecx
call	ds:PR_Now
mov	ecx, [esp+0Ch+arg_8]
push	edx
mov	edx, [esp+10h+arg_10]
push	eax
mov	eax, [esp+14h+arg_C]
push	edx
mov	edx, [esp+18h+arg_4]
push	eax
mov	eax, [esp+1Ch+arg_0]
push	ecx
push	edx
push	eax
call	CERT_VerifyCertificate
add	esp, 28h
retn
align 10h
public CERT_FilterCertListByCANames
sub	esp, 3Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+3Ch+var_4], eax
mov	eax, [esp+3Ch+arg_C]
push	ebx
push	edi
mov	edi, [esp+44h+arg_0]
xor	ebx, ebx
mov	[esp+44h+var_14], edi
mov	[esp+44h+var_18], eax
cmp	[esp+44h+arg_4], ebx
jle	loc_1000C0D9
push	esi
call	ds:PR_Now
mov	esi, [edi]
mov	[esp+48h+var_20], eax
mov	[esp+48h+var_1C], edx
mov	[esp+48h+var_3C], esi
cmp	esi, edi
jz	loc_1000C0D8
push	ebp
jmp	short loc_1000BF34
align 10h
mov	esi, [esp+4Ch+var_3C]
mov	eax, [esi+8]
push	eax
call	CERT_DupCertificate
add	esp, 4
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_34], ebx
cmp	eax, ebx
jz	loc_1000C09F
mov	ecx, [esp+4Ch+var_38]
mov	ebp, [ecx+8]
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
cmp	ebp, ebx
jz	short loc_1000BF9C
mov	eax, [esi]
mov	ecx, ebp
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1000BF87
cmp	dl, bl
jz	short loc_1000BF83
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1000BF87
add	eax, 2
add	ecx, 2
cmp	dl, bl
jnz	short loc_1000BF67
xor	eax, eax
jmp	short loc_1000BF8C
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
cmp	eax, ebx
jz	loc_1000C084
dec	edi
add	esi, 4
cmp	edi, ebx
jg	short loc_1000BF63
mov	edx, [esp+4Ch+var_38]
push	edx
call	sub_1004B930
mov	ebp, eax
add	esp, 4
cmp	ebp, ebx
jnz	short loc_1000BFB9
push	0FFFFE013h
jmp	loc_1000C05B
mov	eax, [esp+4Ch+var_1C]
mov	ecx, [esp+4Ch+var_20]
push	eax
push	ecx
push	ebx
call	sub_1004A1F0
mov	edx, [esp+58h+var_18]
mov	esi, eax
xor	eax, eax
mov	[esp+58h+var_10], ebx
mov	[esp+58h+var_C], edx
mov	[esp+58h+var_8], 1
mov	[esp+58h+var_30], eax
mov	[esp+58h+var_2C], eax
mov	[esp+58h+var_28], eax
call	sub_1004A850
mov	edi, eax
call	sub_1004A860
push	eax
push	edi
lea	eax, [esp+60h+var_24]
push	eax
push	ebx
push	2
lea	ecx, [esp+6Ch+var_30]
push	ecx
push	ebx
lea	edx, [esp+74h+var_10]
push	edx
push	esi
push	ebp
call	sub_10046C40
push	esi
call	sub_10050550
add	esp, 38h
cmp	[esp+4Ch+var_24], ebx
jnz	short loc_1000C045
cmp	[esp+4Ch+var_2C], ebx
jz	short loc_1000C08E
mov	eax, [esp+4Ch+var_30]
push	eax
call	sub_100461A0
mov	ecx, [esp+50h+var_2C]
push	ecx
call	sub_1004B8F0
add	esp, 8
mov	esi, eax
jmp	short loc_1000C065
mov	eax, [esp+4Ch+var_30]
cmp	eax, ebx
jz	short loc_1000C056
push	eax
call	sub_100461A0
add	esp, 4
push	0FFFFE00Dh
call	PORT_SetError_Util
add	esp, 4
xor	esi, esi
mov	eax, [esp+4Ch+var_38]
cmp	esi, eax
jz	short loc_1000C092
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	[esp+4Ch+var_38], esi
cmp	esi, ebx
jnz	loc_1000BF50
jmp	short loc_1000C09B
mov	[esp+4Ch+var_34], 1
jmp	short loc_1000C09B
mov	esi, [esp+4Ch+var_38]
push	esi
call	CERT_DestroyCertificate
add	esp, 4
			
mov	esi, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+var_38]
push	edx
call	CERT_DestroyCertificate
add	esp, 4
cmp	[esp+4Ch+var_34], ebx
jnz	short loc_1000C0C3
mov	ecx, [esi]
push	esi
mov	[esp+50h+var_3C], ecx
call	CERT_RemoveCertListNode
add	esp, 4
jmp	short loc_1000C0C9
mov	edx, [esi]
mov	[esp+4Ch+var_3C], edx
mov	eax, [esp+4Ch+var_14]
cmp	[esp+4Ch+var_3C], eax
jnz	loc_1000BF30
pop	ebp
pop	esi
mov	ecx, [esp+44h+var_4]
pop	edi
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
align 10h
push	esi
push	edi
push	0
call	ds:PR_Now
mov	esi, [esp+0Ch+arg_4]
push	edx
push	eax
push	esi
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jnz	short loc_1000C145
mov	eax, [esp+8+arg_0]
test	eax, eax
jnz	short loc_1000C126
mov	eax, [esi+154h]
push	eax
call	PORT_Strdup_Util
add	esp, 4
jmp	short loc_1000C136
mov	ecx, [esi+154h]
push	ecx
push	eax
call	PORT_ArenaStrdup_Util
add	esp, 8
mov	esi, eax
test	esi, esi
jz	loc_1000C1C6
pop	edi
mov	eax, esi
pop	esi
retn
cmp	eax, 1
jnz	short loc_1000C166
mov	edx, [esp+8+arg_8]
mov	eax, [esi+154h]
push	edx
push	eax
push	offset aSS	
call	ds:PR_smprintf
add	esp, 0Ch
jmp	short loc_1000C19A
cmp	eax, 2
jnz	short loc_1000C187
mov	ecx, [esp+8+arg_C]
mov	edx, [esi+154h]
push	ecx
push	edx
push	offset aSS	
call	ds:PR_smprintf
add	esp, 0Ch
jmp	short loc_1000C19A
push	offset aNullValidityUn 
push	offset dword_100A23E0
call	ds:PR_smprintf
add	esp, 8
			
mov	edi, eax
test	edi, edi
jz	short loc_1000C1C6
mov	eax, [esp+8+arg_0]
test	eax, eax
jz	short loc_1000C1BC
push	edi
push	eax
call	PORT_ArenaStrdup_Util
push	edi
mov	esi, eax
call	PORT_Free_Util
add	esp, 0Ch
jmp	short loc_1000C1BE
mov	esi, edi
test	esi, esi
jnz	loc_1000C140
			
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
public CERT_NicknameStringsFromCertList
push	ecx
push	ebp
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
xor	ebp, ebp
add	esp, 4
mov	[esp+0Ch+var_4], esi
cmp	esi, ebp
jnz	short loc_1000C1F2
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
push	ebx
push	edi
push	18h
push	esi
call	PORT_ArenaAlloc_Util
mov	edi, eax
add	esp, 8
cmp	edi, ebp
jz	loc_1000C2B8
mov	ebx, [esp+14h+arg_0]
mov	[edi], esi
mov	[edi+4], ebp
mov	[edi+8], ebp
mov	[edi+0Ch], ebp
mov	[edi+14h], ebp
mov	eax, [ebx]
cmp	eax, ebx
jz	short loc_1000C22D
xor	ecx, ecx
inc	ecx
mov	[edi+8], ecx
mov	eax, [eax]
cmp	eax, ebx
jnz	short loc_1000C223
mov	eax, [edi+8]
add	eax, eax
add	eax, eax
push	eax
push	esi
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi+0Ch], eax
cmp	eax, ebp
jz	short loc_1000C2B8
mov	ecx, offset byte_100A1623
cmp	[esp+14h+arg_4], ebp
jnz	short loc_1000C254
mov	[esp+14h+arg_4], ecx
cmp	[esp+14h+arg_8], ebp
jnz	short loc_1000C25E
mov	[esp+14h+arg_8], ecx
mov	esi, [ebx]
mov	ebp, eax
cmp	esi, ebx
jz	short loc_1000C2AA
jmp	short loc_1000C270
align 10h
			
mov	ecx, [esp+14h+arg_8]
mov	edx, [esp+14h+arg_4]
mov	eax, [esi+8]
push	ecx
mov	ecx, [esp+18h+var_4]
push	edx
push	eax
push	ecx
call	sub_1000C0F0
add	esp, 10h
mov	[ebp+0], eax
test	eax, eax
jz	short loc_1000C2B2
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1000C295
sub	eax, edx
add	[edi+14h], eax
mov	esi, [esi]
add	ebp, 4
cmp	esi, ebx
jnz	short loc_1000C270
mov	eax, edi
pop	edi
pop	ebx
pop	esi
pop	ebp
pop	ecx
retn
mov	esi, [esp+14h+var_4]
xor	ebp, ebp
			
push	ebp
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
align 10h
public CERT_GetCertChainFromCert
sub	esp, 38h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+38h+var_4], eax
mov	eax, [esp+38h+arg_0]
mov	ecx, [esp+38h+arg_8]
mov	edx, [esp+38h+arg_C]
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+40h+arg_4]
mov	[esp+40h+var_14], ecx
mov	[esp+40h+var_20], edx
test	eax, eax
jnz	short loc_1000C30F
pop	ebp
pop	ebx
mov	ecx, [esp+38h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
push	esi
push	eax
call	CERT_DupCertificate
mov	esi, eax
add	esp, 4
mov	[esp+44h+var_34], esi
test	esi, esi
jnz	short loc_1000C344
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+38h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
push	edi
call	SECKEY_NewPrivateKeyList
mov	edi, eax
mov	[esp+48h+var_38], edi
test	edi, edi
jnz	short loc_1000C376
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+38h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
			
inc	ebx
mov	[esp+48h+var_1C], ebx
cmp	ebx, 14h
jg	loc_1000C467
push	esi
push	edi
call	CERT_AddCertToListTail
add	esp, 8
test	eax, eax
jnz	loc_1000C4AD
cmp	[esi+170h], eax
jnz	loc_1000C474
push	esi
call	sub_1004B930
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	loc_1000C45A
mov	eax, [esp+48h+var_14]
push	eax
push	ebp
push	0
call	sub_1004A1F0
mov	ecx, [esp+54h+var_20]
mov	esi, eax
xor	eax, eax
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_C], ecx
mov	[esp+54h+var_8], 1
mov	[esp+54h+var_30], eax
mov	[esp+54h+var_2C], eax
mov	[esp+54h+var_28], eax
call	sub_1004A850
mov	edi, eax
call	sub_1004A860
push	eax
push	edi
lea	edx, [esp+5Ch+var_24]
push	edx
push	0
push	2
lea	eax, [esp+68h+var_30]
push	eax
push	0
lea	ecx, [esp+70h+var_10]
push	ecx
push	esi
push	ebx
call	sub_10046C40
push	esi
call	sub_10050550
add	esp, 38h
cmp	[esp+48h+var_24], 0
jnz	short loc_1000C489
cmp	[esp+48h+var_2C], 0
jz	short loc_1000C442
mov	edx, [esp+48h+var_30]
push	edx
call	sub_100461A0
mov	eax, [esp+4Ch+var_2C]
push	eax
call	sub_1004B8F0
add	esp, 8
mov	[esp+48h+var_34], eax
cmp	[esp+48h+var_34], 0
mov	edi, [esp+48h+var_38]
jz	short loc_1000C467
mov	ebx, [esp+48h+var_1C]
mov	esi, [esp+48h+var_34]
jmp	loc_1000C376
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
			
push	0FFFFE00Dh
call	PORT_SetError_Util
add	esp, 4
mov	ecx, [esp+48h+var_4]
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
mov	eax, [esp+48h+var_30]
test	eax, eax
jz	short loc_1000C49A
push	eax
call	sub_100461A0
add	esp, 4
push	0FFFFE00Dh
call	PORT_SetError_Util
mov	edi, [esp+4Ch+var_38]
add	esp, 4
jmp	short loc_1000C467
push	0FFFFE013h
jmp	short loc_1000C46C
align 10h
public CERT_VerifyCert
			
mov	eax, [esp+arg_1C]
mov	ecx, [esp+arg_18]
mov	edx, [esp+arg_14]
push	eax
mov	eax, [esp+4+arg_10]
push	ecx
mov	ecx, [esp+8+arg_C]
push	0
push	edx
mov	edx, [esp+10h+arg_8]
push	eax
mov	eax, [esp+14h+arg_4]
push	ecx
mov	ecx, [esp+18h+arg_0]
push	edx
push	eax
push	ecx
call	sub_1000BC50
add	esp, 24h
retn
align 10h
public CERT_VerifyCertNow
sub	esp, 14h
push	ebx
push	ebp
push	esi
push	edi
call	ds:PR_Now
mov	ebx, [esp+24h+arg_C]
mov	edi, eax
mov	[esp+24h+var_8], edi
mov	[esp+24h+var_4], edx
cmp	ebx, 1
jz	short loc_1000C529
cmp	ebx, 2
jz	short loc_1000C529
xor	eax, eax
jmp	short loc_1000C52E
			
mov	eax, 1
mov	esi, [esp+24h+arg_4]
push	eax
push	edx
push	edi
push	esi
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jnz	short loc_1000C5BC 
push	esi
call	sub_1003E510
mov	ebp, [esi+13Ch]
add	esp, 4
cmp	ebx, 0Bh	
ja	short loc_1000C5BC 
movzx	eax, ds:byte_1000C694[ebx]
jmp	ds:off_1000C688[eax*4] 
			
lea	ecx, [esp+24h+var_14] 
push	ecx
lea	edx, [esp+28h+arg_C]
push	edx
push	0
push	ebx
call	sub_1003BF70
add	esp, 10h
test	eax, eax
jnz	short loc_1000C5BC 
jmp	short loc_1000C59D
			
mov	[esp+24h+arg_C], 4 
mov	[esp+24h+var_14], 4007h
test	ebp, 4007h
jnz	short loc_1000C59D
or	ebp, 4007h
			
mov	eax, [esp+24h+arg_C]
push	eax
push	esi
call	sub_1003C090
add	esp, 8
test	eax, eax
jz	short loc_1000C5C7
push	0FFFFE05Ah
call	PORT_SetError_Util
add	esp, 4
			
pop	edi		
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
test	[esp+24h+var_14], ebp
jnz	short loc_1000C5E5
push	0FFFFE05Bh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
lea	ecx, [esp+24h+var_10]
push	ecx
lea	edx, [esp+28h+var_C]
push	edx
push	ebx
push	esi
call	sub_1000B720
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_1000C616
push	0FFFFE015h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
cmp	[esp+24h+var_10], 0
jnz	short loc_1000C67C
mov	ebp, [esp+24h+arg_10]
mov	eax, [esp+24h+var_4]
mov	ecx, [esp+24h+arg_8]
push	0
push	0
push	ebp
push	eax
push	edi
mov	edi, [esp+38h+arg_0]
push	ebx
push	0
push	ecx
push	esi
push	edi
call	sub_1000B310
add	esp, 28h
test	eax, eax
jnz	loc_1000C5BC	
cmp	ebx, 0Ah
jz	short loc_1000C67C
push	edi
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_1000C67C
mov	eax, [eax]
test	eax, eax
jz	short loc_1000C67C
mov	edx, [esp+24h+var_4]
mov	ecx, [esp+24h+var_8]
push	ebp
push	edx
push	ecx
push	esi
push	edi
call	eax
add	esp, 14h
test	eax, eax
jnz	loc_1000C5BC	
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
align 4
dd offset loc_1000C57F	
dd offset loc_1000C5BC
db	0,     0,     0,     2 
db	1,     2,     0,     1
public CERT_SetUsePKIXForValidation
			
xor	eax, eax
cmp	[esp+arg_0], eax
setnle	al
mov	dword_100BAB80,	eax
xor	eax, eax
retn
align 10h
public CERT_GetUsePKIXForValidation
			
mov	eax, dword_100BAB80
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aCert_processin 
mov	[esp+40h+var_C], 12h
cmp	esi, ebp
jz	loc_1000C846
cmp	ebx, ebp
jz	loc_1000C846
mov	ecx, [esp+40h+arg_4]
push	ebx
lea	eax, [ebp+1]
xor	edx, edx
call	sub_1009FF80
push	edx
push	eax
call	sub_1009C210
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1000C749
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2B6h
jmp	loc_1000C7CB
mov	edi, [esp+40h+arg_8]
cmp	edi, ebp
jz	short loc_1000C7CB
push	ebx
lea	ecx, [esp+44h+var_34]
push	ecx
push	esi
call	sub_10061B40
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1000C779
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 375h
jmp	short loc_1000C7CB
mov	ecx, [esp+40h+var_34]
push	ebx
lea	eax, [esp+44h+var_30]
push	eax
push	ecx
call	sub_10053CF0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1000C7A5
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 0B5h
jmp	short loc_1000C7CB
mov	eax, [esp+40h+var_30]
push	ebx
push	edi
push	eax
call	sub_10055650
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1000C7CB
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 108h
			
mov	eax, [esp+40h+var_34]
cmp	eax, ebp
jz	short loc_1000C7FC
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1000C7F8
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_34], ebp
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_1000C82D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1000C829
push	ebx
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_30], ebp
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	12h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
push	ebx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 4Ch
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+54h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_40], ebx
mov	[esp+5Ch+var_30], ebx
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+arg_0], ebx
mov	[esp+5Ch+var_2C], offset aCert_createpki 
mov	[esp+5Ch+var_C], 12h
cmp	ebp, ebx
jz	loc_1000CF7A
mov	edi, [esp+5Ch+arg_14]
cmp	edi, ebx
jz	loc_1000CF7A
mov	ecx, [esp+5Ch+arg_C]
lea	eax, [esp+5Ch+arg_0]
push	eax
push	ecx
push	edx
push	ebx
call	sub_1009C050
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000C905
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 2B0h
jmp	loc_1000CD94
mov	eax, [esp+5Ch+arg_0]
mov	ecx, [esp+5Ch+arg_18]
push	eax
lea	edx, [esp+60h+var_4C]
push	edx
mov	[ecx], eax
call	sub_100613C0
add	esp, 8
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000C939
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 36Ah
jmp	loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
push	ecx
lea	edx, [esp+60h+var_40]
push	edx
call	sub_10054720
add	esp, 8
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000C967
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 0F0h
jmp	loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
push	ecx
lea	edx, [esp+60h+var_38]
push	edx
push	ebp
call	sub_1007D6A0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000C996
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 69h
jmp	loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+var_38]
mov	eax, [esp+5Ch+var_40]
push	ecx
push	edx
push	eax
call	sub_10054D20
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000C9C9
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 105h
jmp	loc_1000CD94
mov	edx, [esp+5Ch+arg_0]
push	edx
lea	eax, [esp+60h+var_44]
push	eax
push	ebx
push	ebx
call	sub_10053B50
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000C9F9
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 12Bh
jmp	loc_1000CD94
mov	edx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+var_40]
mov	ecx, [esp+5Ch+var_44]
push	edx
push	eax
push	ecx
call	sub_10053DC0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CA2C
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 0CBh
jmp	loc_1000CD94
mov	eax, [esp+5Ch+arg_0]
mov	ecx, [esp+5Ch+var_44]
mov	edx, [esp+5Ch+var_4C]
push	eax
push	ecx
push	edx
call	sub_10061C10
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CA5F
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 383h
jmp	loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+var_4C]
push	ecx
push	ebx
push	edx
call	sub_10061620
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CA8E
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 384h
jmp	loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
push	ecx
lea	edx, [esp+60h+var_30]
push	edx
call	sub_1009E060
add	esp, 8
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CABC
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 33Bh
jmp	loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
push	ecx
lea	edx, [esp+60h+var_3C]
push	edx
call	sub_100755D0
add	esp, 8
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CAEA
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 3EEh
jmp	loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+var_30]
mov	eax, [esp+5Ch+var_3C]
push	ecx
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CB1D
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 278h
jmp	loc_1000CD94
mov	edx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+var_3C]
mov	ecx, [esp+5Ch+var_4C]
push	edx
push	eax
push	ecx
call	sub_100624A0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CB50
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 368h
jmp	loc_1000CD94
mov	eax, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_8]
push	eax
mov	eax, [esp+60h+arg_4]
lea	ecx, [esp+60h+var_34]
push	ecx
push	edx
push	eax
call	sub_10088F20
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CB88
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 17Fh
jmp	loc_1000CD94
mov	edx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_4C]
push	edx
push	eax
push	ecx
call	sub_100619F0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CBBB
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 37Ch
jmp	loc_1000CD94
mov	eax, [esp+5Ch+arg_0]
push	eax
lea	ecx, [esp+60h+var_48]
push	ecx
push	1
push	1
call	sub_10058B80
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CBED
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 39Fh
jmp	loc_1000CD94
mov	eax, [esp+5Ch+arg_0]
mov	ecx, [esp+5Ch+var_48]
mov	edx, [esp+5Ch+var_4C]
push	eax
push	ecx
push	edx
call	sub_10062270
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CC20
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 382h
jmp	loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+var_4C]
mov	eax, [esp+5Ch+var_48]
push	ecx
push	1
push	ebx
push	ebx
push	23h
push	ebx
push	edx
push	eax
call	sub_10058C90
add	esp, 20h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CC5A
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 39Eh
jmp	loc_1000CD94
mov	edx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+var_4C]
mov	ecx, [esp+5Ch+var_48]
push	edx
push	ebx
push	ebx
push	ebx
push	23h
push	ebx
push	eax
push	ecx
call	sub_10058C90
add	esp, 20h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CC93
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 39Eh
jmp	loc_1000CD94
call	CERT_GetDefaultCertDB
push	eax
call	PK11_IsReadOnly
add	esp, 4
cmp	eax, ebx
jz	short loc_1000CD06
cmp	[eax], ebx
jz	short loc_1000CD06
mov	ebp, [esp+5Ch+arg_10]
mov	esi, 21h
cmp	ebp, ebx
jz	short loc_1000CCBB
mov	esi, 23h
call	sub_100078A0
test	eax, eax
jz	short loc_1000CCCB
cmp	ebp, ebx
jnz	short loc_1000CCCB
or	esi, 10h
			
mov	eax, [esp+5Ch+arg_0]
mov	ecx, [esp+5Ch+var_4C]
mov	edx, [esp+5Ch+var_48]
push	eax
push	1
push	ebx
push	1
push	esi
push	1
push	ecx
push	edx
call	sub_10058C90
add	esp, 20h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CD06
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 39Eh
jmp	loc_1000CD94
			
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+var_4C]
push	ecx
push	ebx
push	edx
call	sub_10062740
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CD32
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 37Ah
jmp	short loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+var_4C]
push	ecx
push	ebx
push	edx
call	sub_10062860
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CD5E
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 37Dh
jmp	short loc_1000CD94
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+var_4C]
push	ecx
push	ebx
push	edx
call	sub_10062980
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1000CD8A
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 381h
jmp	short loc_1000CD94
mov	ecx, [esp+5Ch+var_4C]
mov	[edi], ecx
mov	[esp+5Ch+var_4C], ebx
			
mov	eax, [esp+5Ch+var_38]
cmp	eax, ebx
jz	short loc_1000CDCD
mov	edx, [esp+5Ch+arg_0]
push	edx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1000CDC9
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_38], ebx
mov	eax, [esp+5Ch+var_34]
cmp	eax, ebx
jz	short loc_1000CE06
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1000CE02
mov	edx, [esp+5Ch+arg_0]
push	edx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_34], ebx
mov	eax, [esp+5Ch+var_44]
cmp	eax, ebx
jz	short loc_1000CE3F
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1000CE3B
mov	edx, [esp+5Ch+arg_0]
push	edx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_44], ebx
mov	eax, [esp+5Ch+var_40]
cmp	eax, ebx
jz	short loc_1000CE78
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1000CE74
mov	edx, [esp+5Ch+arg_0]
push	edx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_40], ebx
mov	eax, [esp+5Ch+var_30]
cmp	eax, ebx
jz	short loc_1000CEB1
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1000CEAD
mov	edx, [esp+5Ch+arg_0]
push	edx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_30], ebx
mov	eax, [esp+5Ch+var_3C]
cmp	eax, ebx
jz	short loc_1000CEEA
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1000CEE6
mov	edx, [esp+5Ch+arg_0]
push	edx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_3C], ebx
mov	eax, [esp+5Ch+var_4C]
cmp	eax, ebx
jz	short loc_1000CF23
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1000CF1F
mov	edx, [esp+5Ch+arg_0]
push	edx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_4C], ebx
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	short loc_1000CF5C
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1000CF58
mov	edx, [esp+5Ch+arg_0]
push	edx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_48], ebx
mov	ecx, [esp+5Ch+arg_0]
push	ecx
push	1
lea	edx, [esp+64h+var_2C]
push	12h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
			
push	ebx
push	1
lea	eax, [esp+64h+var_2C]
push	1Fh
push	eax
mov	[esp+6Ch+var_18], 1
mov	[esp+6Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
align 10h
			
sub	esp, 38h
push	ebx
push	ebp
mov	ebp, [esp+40h+arg_8]
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_2C], offset aCert_pkixtonss 
mov	[esp+48h+var_C], 12h
cmp	[esp+48h+arg_4], ebx
jnz	short loc_1000D019
push	ebp
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
cmp	[esp+48h+arg_0], ebx
jz	loc_1000D26C
push	800h
call	PORT_NewArena_Util
mov	esi, eax
xor	edi, edi
add	esp, 4
cmp	esi, edi
jnz	short loc_1000D06A
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_1000D058
mov	ecx, [esp+48h+var_C]
push	ebp
push	2
push	ecx
push	edi
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 338h
jmp	short loc_1000D0B9
push	0Ch
push	esi
call	PORT_ArenaZAlloc_Util
mov	ebx, eax
add	esp, 8
cmp	ebx, edi
jnz	loc_1000D117
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_1000D09F
mov	edx, [esp+48h+var_C]
push	ebp
push	2
push	edx
push	edi
push	356h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	esi
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 356h
call	PORT_FreeArena_Util
add	esp, 8
			
mov	eax, [esp+48h+var_34]
test	eax, eax
jz	short loc_1000D0CA
push	eax
call	CERT_DestroyCertificate
add	esp, 4
			
mov	eax, [esp+48h+var_38]
test	eax, eax
jz	short loc_1000D0FD
push	ebp
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, esi
jz	short loc_1000D0F9
push	ebp
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], esi
mov	[esp+48h+var_38], esi
push	ebp
push	1
lea	ecx, [esp+50h+var_2C]
push	12h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	ecx, [esp+48h+arg_0]
push	ebp
lea	eax, [esp+4Ch+var_30]
push	eax
push	ecx
mov	[ebx], ebx
mov	[ebx+4], ebx
mov	[ebx+8], esi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, edi
jz	short loc_1000D14E
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 284h
jmp	loc_1000D270
xor	esi, esi
cmp	[esp+48h+var_30], edi
jbe	loc_1000D210
lea	ebx, [ebx+0]
mov	ecx, [esp+48h+arg_0]
push	ebp
lea	eax, [esp+4Ch+var_38]
push	eax
push	esi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, edi
jnz	loc_1000D218
mov	eax, [esp+48h+var_38]
push	ebp
lea	edx, [esp+4Ch+var_34]
push	edx
push	eax
call	sub_10081BC0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, edi
jnz	loc_1000D229
mov	ecx, [ebx+8]
push	10h
push	ecx
call	PORT_ArenaZAlloc_Util
add	esp, 8
cmp	eax, edi
jz	loc_1000D23A
mov	[eax], ebx
mov	edx, [ebx+4]
mov	[eax+4], edx
mov	ecx, [ebx+4]
mov	[ecx], eax
mov	[ebx+4], eax
mov	edx, [esp+48h+var_34]
mov	[eax+8], edx
mov	eax, [esp+48h+var_38]
mov	[esp+48h+var_34], edi
cmp	eax, edi
jz	short loc_1000D201
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, edi
jz	short loc_1000D1FD
push	ebp
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], edi
mov	[esp+48h+var_38], edi
inc	esi
cmp	esi, [esp+48h+var_30]
jb	loc_1000D160
mov	eax, [esp+48h+var_28]
mov	edx, [esp+48h+arg_4]
mov	[edx], ebx
jmp	short loc_1000D270
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 283h
jmp	short loc_1000D270
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 7Eh
jmp	short loc_1000D270
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_1000D25A
mov	ecx, [esp+48h+var_C]
push	ebp
push	2
push	ecx
push	edi
push	356h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 356h
jmp	short loc_1000D28B
mov	eax, [esp+48h+var_28]
			
cmp	[esp+48h+var_18], 0
jnz	short loc_1000D28B
test	eax, eax
jnz	short loc_1000D28B
cmp	[esp+48h+var_14], eax
jnz	short loc_1000D28B
cmp	[esp+48h+var_4], eax
jz	loc_1000D0CA
			
test	ebx, ebx
jz	loc_1000D0B9
push	ebx
call	CERT_DestroyCertList
add	esp, 4
jmp	loc_1000D0B9
align 10h
sub	esp, 3Ch
push	esi
push	edi
xor	eax, eax
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_34], 0
mov	[esp+44h+var_30], 0
mov	[esp+44h+var_3C], eax
mov	[esp+44h+var_38], edx
mov	[esp+44h+var_2C], offset aCert_buildandv 
mov	[esp+44h+var_C], 12h
test	ebx, ebx
jz	loc_1000D3D8
mov	edi, [esp+44h+arg_0]
test	edi, edi
jz	loc_1000D3D8
mov	esi, ds:PR_Poll
jmp	short loc_1000D310
align 10h
			
test	eax, eax
jz	short loc_1000D326
test	edx, edx
jz	short loc_1000D326
push	0FFFFFFFFh
push	1
push	eax
call	esi 
add	esp, 0Ch
test	eax, eax
jle	short loc_1000D390
			
mov	eax, [esp+44h+arg_8]
push	eax
lea	ecx, [esp+48h+var_30]
push	ecx
lea	edx, [esp+4Ch+var_34]
push	edx
lea	eax, [esp+50h+var_38]
push	eax
lea	ecx, [esp+54h+var_3C]
push	ecx
push	ebx
call	sub_10071FD0
add	esp, 18h
mov	[esp+44h+var_28], eax
test	eax, eax
jnz	short loc_1000D3C7
mov	eax, [esp+44h+var_3C]
test	eax, eax
jz	short loc_1000D360
mov	edx, [esp+44h+var_38]
test	edx, edx
jnz	short loc_1000D310
mov	eax, [esp+44h+var_34]
mov	[edi], eax
			
mov	eax, [esp+44h+arg_4]
test	eax, eax
jz	short loc_1000D374
mov	ecx, [esp+44h+var_30]
mov	[eax], ecx
mov	edx, [esp+44h+arg_8]
push	edx
push	1
lea	eax, [esp+4Ch+var_2C]
push	12h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 3Ch
retn
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1000D3B5
mov	edx, [esp+44h+arg_8]
mov	ecx, [esp+44h+var_C]
push	edx
push	2
push	ecx
push	0
push	386h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 386h
jmp	short loc_1000D366
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 3E9h
jmp	short loc_1000D366
			
mov	ecx, [esp+44h+arg_8]
push	ecx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 3Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
xor	ebx, ebx
rep movsd
mov	[esp+3Ch+var_2C], offset aCert_pkixerror 
mov	[esp+3Ch+var_C], 12h
test	edx, edx
jz	short loc_1000D4B2
test	ebp, ebp
jz	short loc_1000D4B2
mov	ecx, dword_100BAEAC
jmp	short loc_1000D450
align 10h
			
mov	eax, [edx+8]
test	eax, eax
jz	short loc_1000D461
test	ebx, ebx
jnz	short loc_1000D461
mov	ebx, eax
test	ecx, ecx
jz	short loc_1000D468
			
mov	edx, [edx+0Ch]
test	edx, edx
jnz	short loc_1000D450
test	ebx, ebx
jnz	short loc_1000D491
mov	eax, [esp+3Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	12h
push	ecx
mov	dword ptr [ebp+0], 0FFFFE0A6h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	eax, [esp+3Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	12h
push	ecx
mov	[ebp+0], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+3Ch+arg_4]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_4]
mov	ebx, [edi+4]
mov	esi, [esp+40h+arg_8]
xor	ebp, ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aCert_getlogfro 
mov	[esp+40h+var_C], 12h
cmp	ebx, ebp
jnz	short loc_1000D58E
mov	edx, [edi+0Ch]
cmp	edx, ebp
jz	short loc_1000D574
cmp	dword ptr [edx], 0Bh
jz	short loc_1000D574
cmp	[esp+40h+arg_0], ebp
jz	short loc_1000D574
mov	eax, [edi]
mov	ebx, [eax]
lea	ecx, [esp+40h+arg_4]
push	esi
push	ecx
mov	[esp+48h+arg_4], ebp
call	sub_1000D410
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1000D55C
mov	edx, [eax+4]
mov	[esp+40h+var_1C], 207h
jmp	loc_1000D64E
mov	eax, [edi+8]
mov	ecx, [esp+40h+arg_4]
mov	edx, [esp+40h+arg_0]
push	ebp
push	eax
push	ecx
push	ebx
push	edx
call	sub_1000A9F0
add	esp, 14h
			
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	12h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	esi
lea	ecx, [esp+44h+arg_4]
push	ecx
push	ebx
mov	[esp+4Ch+arg_4], ebp
call	sub_100757C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1000D5B9
mov	edx, [eax+4]
mov	[esp+40h+var_1C], 284h
jmp	loc_1000D64E
xor	edi, edi
cmp	[esp+40h+arg_4], ebp
jbe	loc_1000D652
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	edi
push	ebx
call	sub_10075D80
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jnz	short loc_1000D632
mov	ecx, [esp+40h+var_30]
mov	edx, [esp+40h+arg_0]
push	esi
push	ecx
push	edx
call	sub_1000D4E0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jnz	short loc_1000D643
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_1000D629
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1000D625
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_30], ebp
inc	edi
cmp	edi, [esp+40h+arg_4]
jb	short loc_1000D5C5
jmp	short loc_1000D652
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 283h
jmp	short loc_1000D652
mov	edx, [eax+4]
mov	[esp+40h+var_1C], 1B0h
			
mov	[esp+40h+var_10], edx
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_1000D683
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1000D67F
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_30], ebp
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	12h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 44h
push	ebp
mov	ebp, [esp+48h+arg_10]
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	edi, [esp+50h+arg_0]
mov	[esp+50h+var_38], edx
mov	[esp+50h+var_30], edx
mov	[esp+50h+var_34], edx
mov	[esp+50h+var_44], edx
mov	[esp+50h+var_40], edx
mov	[esp+50h+var_3C], edx
mov	[esp+50h+var_2C], offset aCert_getbuildr 
mov	[esp+50h+var_C], 12h
cmp	edi, edx
jnz	short loc_1000D724
cmp	[esp+50h+arg_8], edx
jnz	short loc_1000D72A
mov	eax, dword_100BAE9C
cmp	eax, edx
jz	short loc_1000D70F
push	ebx
push	2
push	12h
push	edx
push	2BCh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
jmp	loc_1000D8C1
cmp	[esp+50h+arg_8], edx
jz	short loc_1000D778
mov	eax, [esp+50h+arg_4]
mov	[esp+50h+arg_0], edx
cmp	eax, edx
jz	short loc_1000D753
push	ebx
push	eax
mov	eax, [esp+58h+arg_C]
push	eax
call	sub_1000D4E0
add	esp, 0Ch
test	eax, eax
jz	short loc_1000D753
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
			
mov	edx, [esp+50h+arg_8]
lea	ecx, [esp+50h+arg_0]
push	ebx
push	ecx
call	sub_1000D410
mov	edx, [esp+58h+arg_0]
push	edx
call	PORT_SetError_Util
mov	eax, [esp+5Ch+var_28]
add	esp, 0Ch
jmp	loc_1000D8AA
mov	esi, [esp+50h+arg_14]
cmp	esi, edx
jz	short loc_1000D7DA
push	ebx
lea	eax, [esp+54h+var_3C]
push	eax
push	edi
call	sub_10064740
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1000D7AB
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 2Dh
jmp	loc_1000D8AA
mov	eax, [esp+50h+var_3C]
push	ebx
lea	edx, [esp+54h+var_30]
push	edx
push	eax
call	sub_1000CFB0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1000D7DE
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 5Ah
jmp	loc_1000D8AA
mov	eax, [esp+50h+var_28]
test	ebp, ebp
jz	loc_1000D895
push	ebx
lea	edx, [esp+54h+var_38]
push	edx
push	edi
call	sub_10064670
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1000D811
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 2Eh
jmp	loc_1000D8AA
mov	eax, [esp+50h+var_38]
push	ebx
lea	edx, [esp+54h+var_44]
push	edx
push	eax
call	sub_10067550
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1000D83D
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 41Dh
jmp	short loc_1000D8AA
mov	eax, [esp+50h+var_44]
push	ebx
lea	edx, [esp+54h+var_40]
push	edx
push	eax
call	sub_10060600
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1000D869
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 3E4h
jmp	short loc_1000D8AA
mov	eax, [esp+50h+var_40]
push	ebx
lea	edx, [esp+54h+var_34]
push	edx
push	eax
call	sub_10081BC0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1000D895
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 7Eh
jmp	short loc_1000D8AA
			
mov	ecx, [esp+50h+var_34]
test	ecx, ecx
jz	short loc_1000D8A0
mov	[ebp+0], ecx
mov	ecx, [esp+50h+var_30]
test	ecx, ecx
jz	short loc_1000D8AA
mov	[esi], ecx
			
cmp	[esp+50h+var_18], 0
jnz	short loc_1000D8C1
test	eax, eax
jnz	short loc_1000D8C1
cmp	[esp+50h+var_14], eax
jnz	short loc_1000D8C1
cmp	[esp+50h+var_4], eax
jz	short loc_1000D8E3
			
mov	eax, [esp+50h+var_34]
test	eax, eax
jz	short loc_1000D8D2
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, [esp+50h+var_30]
test	eax, eax
jz	short loc_1000D8E3
push	eax
call	CERT_DestroyCertList
add	esp, 4
			
mov	eax, [esp+50h+var_44]
test	eax, eax
jz	short loc_1000D916
push	ebx
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, esi
jz	short loc_1000D912
push	ebx
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], esi
mov	[esp+50h+var_44], esi
mov	eax, [esp+50h+var_40]
test	eax, eax
jz	short loc_1000D949
push	ebx
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, esi
jz	short loc_1000D945
push	ebx
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], esi
mov	[esp+50h+var_40], esi
mov	eax, [esp+50h+var_3C]
test	eax, eax
jz	short loc_1000D97C
push	ebx
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, esi
jz	short loc_1000D978
push	ebx
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], esi
mov	[esp+50h+var_3C], esi
mov	eax, [esp+50h+var_38]
test	eax, eax
jz	short loc_1000D9AF
push	ebx
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, esi
jz	short loc_1000D9AB
push	ebx
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], esi
mov	[esp+50h+var_38], esi
mov	eax, [esp+50h+arg_8]
test	eax, eax
jz	short loc_1000D9E0
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
test	eax, eax
jz	short loc_1000D9E0
push	ebx
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], 0
			
mov	eax, [esp+50h+arg_4]
test	eax, eax
jz	short loc_1000DA11
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
test	eax, eax
jz	short loc_1000DA11
push	ebx
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], 0
			
test	edi, edi
jz	short loc_1000DA3E
push	ebx
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
test	eax, eax
jz	short loc_1000DA3E
push	ebx
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], 0
			
push	ebx
push	1
lea	eax, [esp+58h+var_2C]
push	12h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
align 10h
sub	esp, 14h
push	ebx
push	ebp
push	esi
push	edi
mov	edi, [esp+24h+arg_8]
xor	edx, edx
xor	ebp, ebp
cmp	edi, 0Ah
setz	dl
lea	eax, [esp+24h+var_C]
push	eax
mov	eax, [esp+28h+arg_14]
lea	ecx, [esp+28h+var_14]
push	ecx
mov	ecx, [esp+2Ch+arg_10]
push	edx
mov	edx, [esp+30h+arg_C]
push	eax
mov	eax, [esp+34h+arg_0]
push	ecx
push	edx
push	eax
xor	edx, edx
mov	[esp+40h+var_14], ebp
mov	[esp+40h+var_4], ebp
mov	[esp+40h+var_8], ebp
mov	[esp+40h+var_10], 0FFFFFFFFh
mov	[esp+40h+var_C], ebp
call	sub_1000C870
mov	esi, [esp+40h+var_C]
add	esp, 1Ch
cmp	eax, ebp
jnz	short loc_1000DB06
push	ebp
push	edi
mov	edi, [esp+2Ch+var_14]
push	edi
mov	ebx, esi
call	sub_1000C6D0
add	esp, 0Ch
cmp	eax, ebp
jnz	short loc_1000DB0A
push	esi
lea	ecx, [esp+28h+var_8]
push	ecx
lea	edx, [esp+2Ch+var_4]
push	edx
mov	ebx, edi
call	sub_1000D2B0
add	esp, 0Ch
cmp	eax, ebp
jnz	short loc_1000DB0A
mov	ecx, [esp+24h+arg_20]
cmp	ecx, ebp
jz	short loc_1000DAF6
mov	[ecx], ebp
mov	ecx, [esp+24h+arg_1C]
cmp	ecx, ebp
jz	short loc_1000DB00
mov	[ecx], ebp
mov	[esp+24h+var_10], ebp
jmp	short loc_1000DB0A
mov	edi, [esp+24h+var_14]
			
mov	ecx, [esp+24h+arg_18]
mov	edx, [esp+24h+var_8]
push	ebp
push	ebp
push	ecx
push	eax
mov	eax, [esp+34h+var_4]
push	edx
push	eax
mov	ebx, esi
call	sub_1000D6A0
add	esp, 18h
cmp	eax, ebp
jz	short loc_1000DB34
push	esi
push	eax
call	sub_100955D0
add	esp, 8
cmp	edi, ebp
jz	short loc_1000DB42
push	esi
push	edi
call	sub_100955D0
add	esp, 8
cmp	esi, ebp
jz	short loc_1000DB4F
push	esi
call	sub_1009C180
add	esp, 4
mov	eax, [esp+24h+var_10]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 14h
retn
align 10h
sub	esp, 10h
mov	ecx, [esp+10h+arg_0]
push	ebp
push	esi
push	edi
mov	edi, [esp+1Ch+arg_4]
push	edi
lea	eax, [esp+20h+var_8]
push	eax
xor	ebp, ebp
push	ecx
mov	[esp+28h+var_C], 0
mov	[esp+28h+var_10], 0
mov	[esp+28h+var_8], ebp
call	sub_1007D6A0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1000DC0D
push	edi
lea	edx, [esp+20h+var_10]
push	edx
push	eax
push	eax
call	sub_10053B50
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_1000DC0D
lea	eax, [esp+1Ch+var_C]
push	edi
push	eax
call	sub_10054720
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000DC0D
mov	ecx, [esp+1Ch+var_8]
mov	edx, [esp+1Ch+var_C]
push	edi
push	ecx
push	edx
call	sub_10054D20
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1000DC0D
mov	eax, [esp+1Ch+var_C]
mov	ecx, [esp+1Ch+var_10]
push	edi
push	eax
push	ecx
call	sub_10053DC0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1000DC0D
mov	edx, [esp+1Ch+var_10]
push	edi
push	edx
call	sub_10095450
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000DC0D
mov	ebp, [esp+1Ch+var_10]
			
mov	eax, [esp+1Ch+var_C]
test	eax, eax
jz	short loc_1000DC1F
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+1Ch+var_8]
test	eax, eax
jz	short loc_1000DC31
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+1Ch+var_10]
test	eax, eax
jz	short loc_1000DC43
push	edi
push	eax
call	sub_100955D0
add	esp, 8
test	esi, esi
jz	short loc_1000DC68
lea	eax, [esp+1Ch+var_4]
push	edi
push	eax
mov	edx, esi
call	sub_1000D410
push	edi
push	esi
call	sub_100955D0
mov	ecx, [esp+2Ch+var_4]
push	ecx
call	PORT_SetError_Util
add	esp, 14h
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
add	esp, 10h
retn
align 10h
sub	esp, 0Ch
push	ebp
push	esi
lea	eax, [esp+14h+var_8]
push	edi
push	eax
mov	[esp+1Ch+var_8], 0
mov	[esp+1Ch+var_C], 0
xor	ebp, ebp
call	sub_1009E060
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000DCF4
lea	ecx, [esp+14h+var_C]
push	edi
push	ecx
call	sub_100755D0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000DCF4
mov	edx, [esp+14h+var_8]
mov	eax, [esp+14h+var_C]
push	edi
push	edx
push	eax
call	sub_10075970
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1000DCF4
mov	ecx, [esp+14h+var_C]
push	edi
push	ecx
call	sub_10095450
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000DCF4
mov	eax, [esp+14h+var_C]
mov	ebp, eax
jmp	short loc_1000DCF8
			
mov	eax, [esp+14h+var_C]
test	eax, eax
jz	short loc_1000DD06
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+14h+var_8]
test	eax, eax
jz	short loc_1000DD18
push	edi
push	eax
call	sub_100955D0
add	esp, 8
test	esi, esi
jz	short loc_1000DD3D
lea	edx, [esp+14h+var_4]
push	edi
push	edx
mov	edx, esi
call	sub_1000D410
push	edi
push	esi
call	sub_100955D0
mov	eax, [esp+24h+var_4]
push	eax
call	PORT_SetError_Util
add	esp, 14h
pop	esi
mov	eax, ebp
pop	ebp
add	esp, 0Ch
retn
align 10h
sub	esp, 0Ch
push	ebx
push	esi
push	edi
mov	edi, [esp+18h+arg_8]
xor	ebx, ebx
lea	eax, [esp+18h+var_C]
push	edi
push	eax
mov	[esp+20h+var_4], ebx
mov	[esp+20h+var_C], ebx
mov	[esp+20h+var_8], ebx
call	sub_100755D0
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jnz	loc_1000DE0D
push	ebp
mov	ebp, [esp+1Ch+arg_4]
test	ebp, ebp
jle	short loc_1000DDDC
lea	esp, [esp+0]
mov	edx, [esp+1Ch+arg_0]
mov	eax, [edx+ebx*4]
push	edi
lea	ecx, [esp+20h+var_8]
push	ecx
push	eax
call	sub_10096B50
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1000DE0C
mov	ecx, [esp+1Ch+var_8]
mov	edx, [esp+1Ch+var_C]
push	edi
push	ecx
push	edx
call	sub_10075970
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1000DE0C
mov	eax, [esp+1Ch+var_8]
push	edi
push	eax
call	sub_100955D0
inc	ebx
add	esp, 8
mov	[esp+1Ch+var_8], esi
cmp	ebx, ebp
jl	short loc_1000DD90
mov	ecx, [esp+1Ch+var_C]
push	edi
push	ecx
call	sub_10075700
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000DE0C
mov	edx, [esp+1Ch+var_C]
push	edi
push	edx
call	sub_10095450
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000DE0C
mov	eax, [esp+1Ch+var_C]
mov	[esp+1Ch+var_4], eax
			
pop	ebp
mov	eax, [esp+18h+var_8]
test	eax, eax
jz	short loc_1000DE1F
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+18h+var_C]
test	eax, eax
jz	short loc_1000DE31
push	edi
push	eax
call	sub_100955D0
add	esp, 8
test	esi, esi
jz	short loc_1000DE3F
push	edi
push	esi
call	sub_100955D0
add	esp, 8
mov	eax, [esp+18h+var_4]
pop	edi
pop	esi
pop	ebx
add	esp, 0Ch
retn
align 10h
			
mov	eax, [esp+arg_0]
test	eax, eax
jz	short loc_1000DE70
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_1000DE70
mov	edx, [esp+arg_4]
cmp	ecx, edx
jz	short locret_1000DE72
mov	ecx, [eax+20h]
add	eax, 20h
test	ecx, ecx
jnz	short loc_1000DE62
			
xor	eax, eax
retn
align 10h
			
xor	eax, eax
cmp	[esi], edi
ja	short loc_1000DE87
retn
mov	ecx, [esi+0Ch]
test	ecx, ecx
jz	short loc_1000DEA3
mov	edx, [esi+8]
xor	eax, eax
test	edx, edx
jz	short loc_1000DEA3
cmp	[ecx], edi
jz	short loc_1000DEA3
inc	eax
add	ecx, 4
cmp	eax, edx
jb	short loc_1000DE97
			
cmp	[esp+arg_8], 0
mov	ecx, [esi+4]
mov	ecx, [ecx+edi*8]
jz	short loc_1000DEB8
cmp	ebx, 1
jnz	short loc_1000DEB8
or	ecx, 2
			
mov	edx, [esp+arg_10]
push	edx
mov	edx, [esp+4+arg_C]
push	edx
push	0
push	eax
mov	eax, [esp+10h+arg_4]
push	ecx
mov	ecx, [esp+14h+arg_0]
push	ebx
push	eax
push	ecx
call	sub_10058C90
add	esp, 20h
retn
align 10h
sub	esp, 1Ch
push	ebx
push	ebp
mov	ebp, [esp+24h+arg_8]
push	esi
mov	esi, [esp+28h+arg_4]
mov	eax, [esi]
xor	ebx, ebx
push	edi
xor	ecx, ecx
add	eax, 0FFFFFFFCh
xor	edi, edi
mov	[esp+2Ch+var_18], ecx
mov	[esp+2Ch+var_C], ebx
mov	[esp+2Ch+var_8], ebx
mov	[esp+2Ch+var_4], 0FFFFE005h
mov	[esp+2Ch+var_10], ebx
mov	[esp+2Ch+var_14], ebx
mov	[esp+2Ch+var_1C], ebx
cmp	eax, 0Ah	
ja	loc_1000E07C	
jmp	ds:off_1000E2C0[eax*4] 
			
mov	ebx, [esp+2Ch+arg_0] 
push	ebp
push	1
push	ebx
call	sub_10062860
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_1000DF85
mov	eax, [esi+18h]
mov	ecx, [esi+14h]
push	ebp
push	eax
push	ecx
call	sub_1000DD50
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1000DF6E
push	0FFFFE005h
mov	[esp+30h+var_18], 0FFFFFFFFh
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1000DF85
push	ebp
push	esi
push	ebx
call	sub_10061F00
add	esp, 0Ch
push	ebp
push	esi
mov	edi, eax
call	sub_100955D0
add	esp, 8
			
xor	ebx, ebx
			
mov	eax, [esp+2Ch+var_C]
cmp	eax, ebx
jz	short loc_1000DF99
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+2Ch+var_1C]
cmp	eax, ebx
jz	short loc_1000DFAB
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+2Ch+var_8]
cmp	eax, ebx
jz	short loc_1000DFBD
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+2Ch+var_14]
cmp	eax, ebx
jz	short loc_1000DFCF
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+2Ch+var_10]
cmp	eax, ebx
jz	short loc_1000DFE1
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
cmp	edi, ebx
jz	loc_1000E2B1
push	ebp
push	edi
call	sub_100955D0
mov	edx, [esp+34h+var_4]
push	edx
call	PORT_SetError_Util
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 1Ch
retn
			
mov	eax, [esi+8]	
mov	esi, [esi+0Ch]
mov	edx, eax
or	edx, esi
push	ebp
jnz	short loc_1000E036
lea	eax, [esp+30h+var_C]
push	eax
push	ebx
call	sub_10088CB0
add	esp, 0Ch
mov	edi, eax
cmp	edi, ebx
jz	short loc_1000E047
mov	[esp+2Ch+var_4], 0FFFFE008h
jmp	loc_1000DF87
lea	ecx, [esp+30h+var_C]
push	ecx
push	esi
push	eax
call	sub_10088480
add	esp, 10h
jmp	short loc_1000E023
mov	edx, [esp+2Ch+var_C]
mov	eax, [esp+2Ch+arg_0]
push	ebp
push	edx
push	eax
call	sub_100619F0
mov	edi, eax
add	esp, 0Ch
cmp	edi, ebx
jz	loc_1000DF87
mov	[esp+2Ch+var_4], 0FFFFE008h
jmp	loc_1000DF87
			
mov	esi, [esi+10h]	
mov	[esp+2Ch+arg_8], ebx
cmp	esi, ebx
jnz	short loc_1000E096
			
push	0FFFFE005h	
call	PORT_SetError_Util
add	esp, 4
mov	[esp+2Ch+var_18], 0FFFFFFFFh
jmp	loc_1000DF87
mov	ecx, [esi+28h]
mov	eax, [esi+10h]
push	ebp
lea	edx, [esp+30h+var_1C]
push	edx
push	ecx
push	eax
call	sub_10058B80
mov	edi, eax
add	esp, 10h
cmp	edi, ebx
jnz	loc_1000DF87
mov	eax, [esp+2Ch+var_1C]
mov	ebx, [esp+2Ch+arg_0]
push	ebp
push	eax
push	ebx
call	sub_10062270
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	loc_1000DF85
mov	eax, [ebp+0]
and	eax, 400h
xor	ecx, ecx
or	eax, ecx
jz	short loc_1000E0E9
mov	[esp+2Ch+arg_8], 1
mov	ecx, [esp+2Ch+arg_8]
mov	edx, [esp+2Ch+var_1C]
push	ebp
push	1
push	ecx
push	ebx
push	edx
xor	ebx, ebx
xor	edi, edi
call	sub_1000DE80
mov	edi, eax
add	esp, 14h
test	edi, edi
jnz	loc_1000DF85
mov	eax, [esp+2Ch+arg_8]
mov	ecx, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+var_1C]
push	ebp
push	1
push	eax
push	ecx
mov	ebx, 1
push	edx
mov	edi, ebx
call	sub_1000DE80
mov	edi, eax
add	esp, 14h
test	edi, edi
jnz	loc_1000DF85
mov	ecx, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+var_1C]
push	ebp
push	eax
mov	eax, [esp+34h+arg_8]
push	eax
push	ecx
add	esi, 18h
push	edx
xor	ebx, ebx
call	sub_1000DE80
mov	edi, eax
add	esp, 14h
test	edi, edi
jnz	loc_1000DF85
mov	ecx, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+var_1C]
push	ebp
push	eax
mov	eax, [esp+34h+arg_8]
push	eax
push	ecx
mov	ebx, 1
push	edx
mov	edi, ebx
call	sub_1000DE80
add	esp, 14h
mov	edi, eax
jmp	loc_1000DF85
			
mov	esi, [esi+10h]	
cmp	esi, ebx
jnz	short loc_1000E1A8
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
mov	[esp+2Ch+var_18], 0FFFFFFFFh
jmp	loc_1000DF87
lea	eax, [esp+2Ch+var_8]
push	ebp
push	eax
call	sub_100755D0
mov	edi, eax
add	esp, 8
cmp	edi, ebx
jnz	loc_1000DF87
mov	edi, [esi]
cmp	edi, esi
jz	short loc_1000E231
mov	edx, [edi+8]
push	ebp
lea	ecx, [esp+30h+var_10]
push	ecx
push	edx
call	sub_1007D6A0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000E231
mov	ecx, [esp+2Ch+var_10]
push	ebp
lea	eax, [esp+30h+var_14]
push	eax
push	ecx
call	sub_10060470
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000E231
mov	edx, [esp+2Ch+var_14]
mov	eax, [esp+2Ch+var_8]
push	ebp
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000E231
mov	ecx, [esp+2Ch+var_14]
push	ebp
push	ecx
call	sub_100955D0
mov	edx, [esp+34h+var_10]
push	ebp
push	edx
mov	[esp+3Ch+var_14], ebx
call	sub_100955D0
mov	[esp+3Ch+var_10], ebx
mov	edi, [edi]
add	esp, 10h
cmp	edi, esi
jnz	short loc_1000E1C6
			
mov	eax, [esp+2Ch+var_8]
mov	ecx, [esp+2Ch+arg_0]
push	ebp
push	eax
push	ecx
call	sub_100616A0
add	esp, 0Ch
mov	edi, eax
jmp	loc_1000DF87
			
mov	eax, [esp+2Ch+arg_0] 
xor	edx, edx
cmp	[esi+8], ebx
push	ebp
setnz	dl
push	edx
push	eax
call	sub_100615A0
add	esp, 0Ch
mov	edi, eax
jmp	loc_1000DF87
			
mov	esi, [esi+10h]	
cmp	esi, ebx
jz	loc_1000E07C	
cmp	[esi], ebx
jz	loc_1000E07C	
mov	edx, [esi]
mov	eax, ebp
pop	edi
mov	[eax+28h], edx
mov	edx, [esi+4]
pop	esi
pop	ebp
mov	[eax+2Ch], edx
mov	eax, ecx
pop	ebx
add	esp, 1Ch
retn
			
mov	ecx, [esp+2Ch+arg_0] 
xor	eax, eax
cmp	[esi+8], ebx
push	ebp
setnz	al
push	eax
push	ecx
call	sub_100618A0
add	esp, 0Ch
mov	edi, eax
jmp	loc_1000DF87
mov	eax, [esp+2Ch+var_18]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 1Ch
retn
align 10h
dd offset loc_1000E07C	
dd offset loc_1000E07C
dd offset loc_1000E07C
dd offset loc_1000E008
dd offset loc_1000E071
dd offset loc_1000E07C
dd offset loc_1000E187
dd offset loc_1000E24B
dd offset loc_1000E269
dd offset loc_1000E293
align 10h
mov	eax, [esp+arg_0]
test	eax, eax
jz	short locret_1000E339
cmp	dword ptr [eax], 0
jz	short locret_1000E339
push	esi
lea	esi, [eax+10h]
mov	eax, [esi-10h]
sub	eax, 2
jz	short loc_1000E31A
dec	eax
jnz	short loc_1000E32F
mov	eax, [esi]
test	eax, eax
jz	short loc_1000E32F
push	eax
call	CERT_DestroyCertList
jmp	short loc_1000E326
mov	eax, [esi]
test	eax, eax
jz	short loc_1000E32F
push	eax
call	CERT_DestroyCertificate
mov	dword ptr [esi], 0
add	esp, 4
			
add	esi, 20h
cmp	dword ptr [esi-10h], 0
jnz	short loc_1000E301
pop	esi
			
retn
align 10h
public CERT_GetClassicOCSPEnabledSoftFailurePolicy
mov	eax, offset dword_100A24D8
retn
align 10h
public CERT_GetClassicOCSPEnabledHardFailurePolicy
mov	eax, offset dword_100A2508
retn
align 10h
public CERT_GetClassicOCSPDisabledPolicy
mov	eax, offset dword_100A2538
retn
align 10h
public CERT_GetPKIXVerifyNistRevocationPolicy
mov	eax, offset dword_100A2568
retn
align 10h
public CERT_DestroyCERTRevocationFlags
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1000E3D2
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1000E399
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_1000E3A9
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esi+1Ch]
test	eax, eax
jz	short loc_1000E3B9
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esi+24h]
test	eax, eax
jz	short loc_1000E3C9
push	eax
call	PORT_Free_Util
add	esp, 4
push	esi
call	PORT_Free_Util
add	esp, 4
pop	esi
retn
align 10h
public CERT_PKIXVerifyCert
sub	esp, 34h
mov	ecx, [esp+34h+arg_14]
push	ebx
xor	ebx, ebx
push	esi
push	edi
lea	eax, [esp+40h+var_34]
push	eax
push	ecx
push	ebx
push	ebx
mov	[esp+50h+var_C], 0FFFFFFFFh
mov	[esp+50h+var_30], ebx
mov	[esp+50h+var_2C], ebx
mov	[esp+50h+var_4], ebx
mov	[esp+50h+var_8], ebx
mov	[esp+50h+var_14], ebx
mov	[esp+50h+var_18], ebx
mov	[esp+50h+var_1C], ebx
mov	[esp+50h+var_28], ebx
mov	[esp+50h+var_20], ebx
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_10], ebx
mov	[esp+50h+var_34], ebx
call	sub_1009C050
mov	esi, eax
add	esp, 10h
cmp	esi, ebx
jz	short loc_1000E44C
push	0FFFFE01Ch
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1000E682
mov	edx, [esp+40h+var_34]
mov	eax, [esp+40h+arg_8]
mov	ecx, [esp+40h+arg_4]
push	edx
push	eax
push	ecx
call	sub_1009C210
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jz	short loc_1000E47B
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1000E682
mov	edx, [esp+40h+var_34]
push	edx
lea	eax, [esp+44h+var_30]
push	eax
call	sub_100613C0
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jz	short loc_1000E4A5
push	0FFFFE01Ch
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1000E682
mov	edi, [esp+40h+var_34]
call	sub_1000DC80
mov	[esp+40h+var_18], eax
cmp	eax, ebx
jz	loc_1000E682
mov	ecx, [esp+40h+var_34]
push	ecx
mov	edx, eax
mov	eax, [esp+44h+var_30]
push	edx
push	eax
call	sub_100624A0
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	loc_1000E682
push	ebp
mov	ebp, [esp+44h+arg_C]
cmp	ebp, ebx
jz	short loc_1000E520
xor	edi, edi
cmp	[ebp+0], ebx
jz	short loc_1000E520
mov	eax, ebp
jmp	short loc_1000E4F0
align 10h
			
cmp	dword ptr [eax], 0Fh
jge	loc_1000E623
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+var_30]
push	ecx
push	eax
push	edx
call	sub_1000DEE0
add	esp, 0Ch
test	eax, eax
jnz	loc_1000E623
inc	edi
mov	eax, edi
shl	eax, 5
add	eax, ebp
cmp	[eax], ebx
jnz	short loc_1000E4F0
			
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+arg_0]
push	ecx
push	edx
call	sub_1000DB60
add	esp, 8
mov	[esp+44h+var_14], eax
cmp	eax, ebx
jz	loc_1000E681
mov	eax, [esp+44h+var_34]
mov	ecx, [esp+44h+var_14]
mov	edx, [esp+44h+var_30]
push	eax
push	ecx
push	edx
call	sub_10061C10
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	loc_1000E681
mov	eax, [esp+44h+var_34]
push	eax
lea	ecx, [esp+48h+var_28]
push	ecx
lea	edx, [esp+4Ch+var_2C]
push	edx
mov	edx, [esp+50h+var_30]
lea	eax, [esp+50h+var_8]
push	eax
lea	ecx, [esp+54h+var_4]
push	ecx
push	edx
call	sub_10071FD0
mov	esi, eax
add	esp, 18h
cmp	esi, ebx
jnz	loc_1000E681
mov	eax, [esp+44h+var_34]
mov	edx, [esp+44h+var_2C]
push	eax
lea	ecx, [esp+48h+var_1C]
push	ecx
push	edx
call	sub_10064670
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	loc_1000E681
mov	eax, [esp+44h+var_34]
mov	edx, [esp+44h+var_1C]
push	eax
lea	ecx, [esp+48h+var_20]
push	ecx
push	edx
call	sub_10067550
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	loc_1000E681
mov	eax, [esp+44h+var_20]
cmp	eax, ebx
jz	short loc_1000E5F6
mov	ecx, [esp+44h+var_34]
push	ecx
lea	edx, [esp+48h+var_24]
push	edx
push	eax
call	sub_10060600
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	loc_1000E681
mov	edi, [esp+44h+arg_10]
push	2
push	edi
call	sub_1000DE50
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jz	short loc_1000E635
mov	eax, [esp+44h+var_24]
cmp	eax, ebx
jz	short loc_1000E632
mov	eax, [eax]
push	eax
call	CERT_DupCertificate
add	esp, 4
mov	[esi+10h], eax
jmp	short loc_1000E635
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1000E681
mov	[esi+10h], ebx
			
mov	ecx, [esp+44h+var_34]
mov	eax, [esp+44h+var_2C]
push	ecx
lea	edx, [esp+48h+var_10]
push	edx
push	eax
call	sub_10064740
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	short loc_1000E681
push	3
push	edi
call	sub_1000DE50
add	esp, 8
cmp	eax, ebx
jz	short loc_1000E67D
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+var_10]
push	ecx
add	eax, 10h
push	eax
push	edx
call	sub_1000CFB0
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	short loc_1000E681
mov	[esp+44h+var_C], ebx
			
pop	ebp
			
mov	edx, [esp+40h+var_28]
mov	edi, [esp+40h+arg_10]
cmp	edx, ebx
jz	short loc_1000E6F1
cmp	edi, ebx
jz	short loc_1000E6AF
mov	eax, [edi]
mov	ecx, edi
cmp	eax, ebx
jz	short loc_1000E6AF
lea	ebx, [ebx+0]
cmp	eax, 5
jz	short loc_1000E6B1
mov	eax, [ecx+20h]
add	ecx, 20h
cmp	eax, ebx
jnz	short loc_1000E6A0
			
xor	ecx, ecx
cmp	[esp+40h+var_C], ebx
jz	short loc_1000E6DF
cmp	ecx, ebx
jz	short loc_1000E6DF
mov	eax, [esp+40h+var_34]
mov	ecx, [ecx+10h]
push	eax
push	edx
push	ecx
call	sub_1000D4E0
add	esp, 0Ch
cmp	eax, ebx
jz	short loc_1000E6DF
mov	edx, [esp+40h+var_34]
push	edx
push	eax
call	sub_100955D0
add	esp, 8
			
mov	eax, [esp+40h+var_34]
mov	ecx, [esp+40h+var_28]
push	eax
push	ecx
call	sub_100955D0
add	esp, 8
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1000E707
mov	edx, [esp+40h+var_34]
push	edx
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+40h+var_24]
cmp	eax, ebx
jz	short loc_1000E71D
mov	ecx, [esp+40h+var_34]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+40h+var_20]
cmp	eax, ebx
jz	short loc_1000E733
mov	edx, [esp+40h+var_34]
push	edx
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+40h+var_1C]
cmp	eax, ebx
jz	short loc_1000E749
mov	ecx, [esp+40h+var_34]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+40h+var_2C]
cmp	eax, ebx
jz	short loc_1000E75F
mov	edx, [esp+40h+var_34]
push	edx
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+40h+var_18]
cmp	eax, ebx
jz	short loc_1000E775
mov	ecx, [esp+40h+var_34]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+40h+var_14]
cmp	eax, ebx
jz	short loc_1000E78B
mov	edx, [esp+40h+var_34]
push	edx
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+40h+var_10]
cmp	eax, ebx
jz	short loc_1000E7A1
mov	ecx, [esp+40h+var_34]
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
cmp	esi, ebx
jz	short loc_1000E7D8
mov	edx, [esp+40h+var_34]
push	edx
lea	eax, [esp+44h+var_14]
push	eax
mov	edx, esi
mov	[esp+48h+var_14], ebx
call	sub_1000D410
push	edi
call	sub_1000E2F0
mov	ecx, [esp+4Ch+var_14]
push	ecx
call	PORT_SetError_Util
mov	edx, [esp+50h+var_34]
push	edx
push	esi
call	sub_100955D0
add	esp, 18h
mov	eax, [esp+40h+var_34]
push	eax
call	sub_1009C180
mov	eax, [esp+44h+var_C]
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
public CERT_AllocCERTRevocationFlags
push	esi
push	30h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1000E87E
mov	eax, [esp+4+arg_0]
mov	[esi], eax
add	eax, eax
add	eax, eax
add	eax, eax
push	eax
call	PORT_Alloc_Util
mov	[esi+4], eax
mov	eax, [esp+8+arg_4]
lea	ecx, ds:0[eax*4]
push	ecx
mov	[esi+8], eax
call	PORT_Alloc_Util
mov	[esi+0Ch], eax
mov	eax, [esp+0Ch+arg_8]
lea	edx, ds:0[eax*8]
push	edx
mov	[esi+18h], eax
call	PORT_Alloc_Util
mov	[esi+1Ch], eax
mov	eax, [esp+10h+arg_C]
mov	[esi+20h], eax
add	eax, eax
add	eax, eax
push	eax
call	PORT_Alloc_Util
add	esp, 10h
cmp	dword ptr [esi+4], 0
mov	[esi+24h], eax
jz	short loc_1000E875
cmp	dword ptr [esi+0Ch], 0
jz	short loc_1000E875
cmp	dword ptr [esi+1Ch], 0
jz	short loc_1000E875
test	eax, eax
jz	short loc_1000E875
mov	eax, esi
pop	esi
retn
			
push	esi
call	CERT_DestroyCERTRevocationFlags
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
public CERT_EncodeCRLDistributionPoints
push	ecx
push	ebp
push	edi
xor	ebp, ebp
push	800h
mov	[esp+10h+var_4], ebp
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
cmp	edi, ebp
jnz	short loc_1000E8C6
push	ebp
push	edi
mov	[esp+14h+var_4], 0FFFFFFFFh
call	PORT_FreeArena_Util
mov	eax, [esp+14h+var_4]
add	esp, 8
pop	edi
pop	ebp
pop	ecx
retn
mov	eax, [esp+0Ch+arg_4]
push	ebx
mov	ebx, [eax]
push	esi
mov	esi, [ebx]
cmp	esi, ebp
jz	loc_1000E960
mov	eax, [esi]
sub	eax, ebp
mov	[esi+34h], ebp
mov	[esi+1Ch], ebp
jz	short loc_1000E925
dec	eax
jz	short loc_1000E8FA
dec	eax
jnz	loc_1000E99C
push	offset dword_100A25B0
push	esi
lea	ecx, [esi+18h]
push	ecx
jmp	short loc_1000E918
mov	edx, [esi+4]
push	edx
push	edi
call	sub_10041E00
add	esp, 8
mov	[esi+34h], eax
cmp	eax, ebp
jz	short loc_1000E980
push	offset dword_100A25A0
push	esi
lea	eax, [esi+18h]
push	eax
push	edi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_1000E980
cmp	[esi+0Ch], ebp
jz	short loc_1000E93A
lea	ecx, [esi+8]
push	ecx
lea	edx, [esi+38h]
push	edx
call	sub_1003ED30
add	esp, 8
mov	eax, [esi+14h]
cmp	eax, ebp
jz	short loc_1000E952
push	eax
push	edi
call	sub_10041E00
add	esp, 8
mov	[esi+30h], eax
cmp	eax, ebp
jz	short loc_1000E980
mov	esi, [ebx+4]
add	ebx, 4
cmp	esi, ebp
jnz	loc_1000E8D8
mov	eax, [esp+14h+arg_4]
mov	ecx, [esp+14h+arg_8]
mov	edx, [esp+14h+arg_0]
push	offset dword_100A2650
push	eax
push	ecx
push	edx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1000E988
			
mov	[esp+14h+var_4], 0FFFFFFFFh
pop	esi
pop	ebx
push	ebp
push	edi
call	PORT_FreeArena_Util
mov	eax, [esp+14h+var_4]
add	esp, 8
pop	edi
pop	ebp
pop	ecx
retn
push	0FFFFE022h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1000E980
align 10h
public CERT_DecodeCRLDistributionPoints
			
sub	esp, 1Ch
push	ebx
mov	ebx, [esp+20h+arg_0]
push	esi
push	edi
push	4
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
mov	[esp+28h+var_1C], esi
test	esi, esi
jnz	short loc_1000E9E1
or	edi, 0FFFFFFFFh
neg	edi
sbb	eax, eax
not	eax
pop	edi
and	eax, esi
pop	esi
pop	ebx
add	esp, 1Ch
retn
mov	eax, [esp+28h+arg_4]
push	eax
lea	ecx, [esp+2Ch+var_C]
push	ecx
push	ebx
call	SECITEM_CopyItem_Util
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_1000EA5C
lea	edx, [esp+28h+var_C]
push	edx
push	offset dword_100A2650
push	esi
push	ebx
call	SEC_QuickDERDecodeItem_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_1000EA5C
push	ebp
mov	ebp, [esi]
mov	esi, [ebp+0]
test	esi, esi
jz	short loc_1000EA57
mov	edi, edi
cmp	dword ptr [esi+1Ch], 0
jz	short loc_1000EA86
lea	eax, [esi+18h]
push	eax
push	offset dword_100A25C0
push	esi
push	ebx
call	SEC_QuickDERDecodeItem_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_1000EA57
mov	eax, [esi]
dec	eax
jz	short loc_1000EA6B
dec	eax
jz	short loc_1000EA86
push	0FFFFE022h
call	PORT_SetError_Util
add	esp, 4
or	edi, 0FFFFFFFFh
			
mov	esi, [esp+2Ch+var_1C]
pop	ebp
			
neg	edi
sbb	eax, eax
not	eax
pop	edi
and	eax, esi
pop	esi
pop	ebx
add	esp, 1Ch
retn
mov	ecx, [esi+34h]
push	ecx
push	ebx
call	sub_100420B0
mov	[esi+4], eax
add	esp, 8
neg	eax
sbb	eax, eax
neg	eax
dec	eax
mov	edi, eax
jnz	short loc_1000EA57
			
cmp	dword ptr [esi+3Ch], 0
jz	short loc_1000EABF
mov	eax, [esi+3Ch]
mov	edx, [esi+38h]
mov	[esp+2Ch+var_14], eax
mov	eax, [esi+40h]
lea	ecx, [esp+2Ch+var_18]
mov	[esp+2Ch+var_18], edx
push	ecx
lea	edx, [esi+8]
add	eax, 7
push	edx
shr	eax, 3
push	ebx
mov	[esp+38h+var_10], eax
call	SECITEM_CopyItem_Util
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_1000EA57
mov	eax, [esi+30h]
test	eax, eax
jz	short loc_1000EAD7
push	eax
push	ebx
call	sub_100420B0
add	esp, 8
mov	[esi+14h], eax
test	eax, eax
jz	short loc_1000EA57
mov	esi, [ebp+4]
add	ebp, 4
test	esi, esi
jnz	loc_1000EA20
mov	esi, [esp+2Ch+var_1C]
neg	edi
sbb	eax, eax
pop	ebp
not	eax
pop	edi
and	eax, esi
pop	esi
pop	ebx
add	esp, 1Ch
retn
align 10h
public __PBE_GenerateBits
			
xor	eax, eax	
			
retn
align 10h
mov	eax, [esp+arg_8]
mov	dword ptr [eax], 0
retn
align 10h
push	1
call	PK11_CreateDigestContext
add	esp, 4
retn
align 10h
push	3
call	PK11_CreateDigestContext
add	esp, 4
retn
align 10h
push	4
call	PK11_CreateDigestContext
add	esp, 4
retn
align 10h
push	135h
call	PK11_CreateDigestContext
add	esp, 4
retn
align 10h
push	0BFh
call	PK11_CreateDigestContext
add	esp, 4
retn
align 10h
push	0C0h
call	PK11_CreateDigestContext
add	esp, 4
retn
align 10h
push	0C1h
call	PK11_CreateDigestContext
add	esp, 4
retn
align 10h
public HASH_GetHashObject
mov	eax, [esp+arg_0]
lea	eax, [eax+eax*4]
lea	eax, dword_100A2660[eax*8]
retn
align 10h
public HASH_GetHashTypeByOidTag
			
mov	eax, [esp+arg_0]
cmp	eax, 0BFh
jg	short loc_1000EBD0
jz	short loc_1000EBCA
dec	eax
jz	short loc_1000EBC4
sub	eax, 2
jz	short loc_1000EBBE
dec	eax
jnz	short loc_1000EBDF
mov	eax, 3
retn
mov	eax, 2
retn
mov	eax, 1
retn
mov	eax, 4
retn
sub	eax, 0C0h
jz	short loc_1000EBFF
dec	eax
jz	short loc_1000EBF9
sub	eax, 74h
jz	short loc_1000EBF3
push	esi
push	0FFFFE006h
xor	esi, esi
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
retn
mov	eax, 7
retn
mov	eax, 6
retn
mov	eax, 5
retn
align 10h
			
mov	eax, [esp+arg_0]
add	eax, 0FFFFFEDAh	
cmp	eax, 4
ja	short loc_1000EC43 
jmp	ds:off_1000EC58[eax*4] 
			
mov	eax, 4		
retn
			
mov	eax, 135h	
retn
			
mov	eax, 0BFh	
retn
			
mov	eax, 0C0h	
retn
			
mov	eax, 0C1h	
retn
push	esi		
push	0FFFFE006h
xor	esi, esi
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
retn
align 4
dd offset loc_1000EC2B	
dd offset loc_1000EC31
dd offset loc_1000EC37
dd offset loc_1000EC3D
align 10h
public HASH_GetHashObjectByOidTag
			
mov	eax, [esp+arg_0]
push	eax
call	HASH_GetHashTypeByOidTag
add	esp, 4
test	eax, eax
jnz	short loc_1000EC82
retn
lea	eax, [eax+eax*4]
lea	eax, dword_100A2660[eax*8]
retn
align 10h
public HASH_ResultLenByOidTag
			
			
mov	eax, [esp+arg_0]
push	eax
call	HASH_GetHashTypeByOidTag
add	esp, 4
test	eax, eax
jnz	short loc_1000ECA5
xor	ecx, ecx
jmp	short loc_1000ECAF
lea	ecx, [eax+eax*4]
lea	ecx, dword_100A2660[ecx*8]
xor	eax, eax
test	ecx, ecx
jz	short locret_1000ECB7
mov	eax, [ecx]
retn
align 10h
public HASH_ResultLen
mov	eax, [esp+arg_0]
cmp	eax, 7
ja	short loc_1000ECD4
lea	eax, [eax+eax*4]
mov	eax, ds:dword_100A2660[eax*8]
retn
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
align 10h
public HASH_ResultLenContext
mov	eax, [esp+arg_0]
mov	ecx, [eax]
mov	eax, [ecx]
retn
align 10h
public HASH_Create
			
mov	eax, [esp+arg_0]
cmp	eax, 7
ja	short loc_1000ED52
push	esi
lea	esi, [eax+eax*4]
add	esi, esi
add	esi, esi
mov	eax, ds:off_100A2664[esi+esi]
add	esi, esi
push	edi
call	eax
mov	edi, eax
test	edi, edi
jz	short loc_1000ED3F
push	8
call	PORT_Alloc_Util
add	esp, 4
test	eax, eax
jnz	short loc_1000ED44
mov	ecx, ds:off_100A266C[esi]
push	1
push	edi
call	ecx
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
mov	[eax+4], edi
lea	edx, dword_100A2660[esi]
pop	edi
mov	[eax], edx
pop	esi
retn
xor	eax, eax
retn
align 10h
public HASH_Clone
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi]
mov	ecx, [esi+4]
mov	edx, [eax+8]
push	edi
push	ecx
call	edx
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_1000ED95
push	8
call	PORT_Alloc_Util
add	esp, 4
test	eax, eax
jnz	short loc_1000ED9A
mov	eax, [esi]
mov	ecx, [eax+0Ch]
push	1
push	edi
call	ecx
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
mov	[eax+4], edi
mov	edx, [esi]
pop	edi
mov	[eax], edx
pop	esi
retn
align 10h
public HASH_Destroy
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi]
mov	ecx, [esi+4]
mov	edx, [eax+0Ch]
push	1
push	ecx
call	edx
push	esi
call	PORT_Free_Util
add	esp, 0Ch
pop	esi
retn
align 10h
public HASH_Begin
mov	eax, [esp+arg_0]
mov	edx, [eax+4]
mov	ecx, [eax]
mov	eax, [ecx+10h]
mov	[esp+arg_0], edx
jmp	eax
align 10h
public HASH_Update
mov	eax, [esp+arg_0]
mov	ecx, [eax]
mov	eax, [eax+4]
mov	ecx, [ecx+14h]
mov	[esp+arg_0], eax
jmp	ecx
align 10h
public HASH_End
mov	eax, [esp+arg_0]
mov	ecx, [eax]
mov	eax, [eax+4]
mov	ecx, [ecx+18h]
mov	[esp+arg_0], eax
jmp	ecx
align 10h
public HASH_GetType
mov	eax, [esp+arg_0]
mov	ecx, [eax]
mov	eax, [ecx+20h]
retn
align 10h
public HASH_HashBuf
mov	eax, [esp+arg_0]
cmp	eax, 7
ja	short loc_1000EEB0
push	esi
push	eax
call	HASH_Create
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1000EE5E
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [esi]
mov	ecx, [esi+4]
mov	edx, [eax+10h]
push	ecx
call	edx
mov	ecx, [esp+8+arg_C]
mov	edx, [esp+8+arg_8]
mov	eax, [esi]
push	ecx
mov	ecx, [esi+4]
push	edx
mov	edx, [eax+14h]
push	ecx
call	edx
mov	eax, [esi]
mov	ecx, [eax]
mov	eax, [eax+18h]
push	ecx
mov	ecx, [esp+18h+arg_4]
lea	edx, [esp+18h+arg_0]
push	edx
mov	edx, [esi+4]
push	ecx
push	edx
call	eax
mov	ecx, [esi]
mov	edx, [esi+4]
mov	eax, [ecx+0Ch]
push	1
push	edx
call	eax
push	esi
call	PORT_Free_Util
add	esp, 2Ch
xor	eax, eax
pop	esi
retn
or	eax, 0FFFFFFFFh
retn
align 10h
public NSS_Get_SECKEY_DSAPublicKeyTemplate
mov	eax, offset dword_100A28D8
retn
align 10h
public NSS_Get_SECKEY_RSAPublicKeyTemplate
mov	eax, offset dword_100A2828
retn
align 10h
public NSS_Get_SECKEY_RSAPSSParamsTemplate
mov	eax, offset dword_100A2878
retn
align 10h
public NSS_Get_CERT_SubjectPublicKeyInfoTemplate
mov	eax, offset dword_100A27A8
retn
align 10h
public SECKEY_CreateRSAPrivateKey
sub	esp, 8
push	esi
push	edi
mov	edi, [esp+10h+arg_8]
push	edi
push	0
call	PK11_GetBestSlot
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000EF20
pop	edi
pop	esi
add	esp, 8
retn
mov	ecx, [esp+10h+arg_4]
mov	eax, [esp+10h+arg_0]
push	edi
push	1
push	0
push	ecx
lea	edx, [esp+20h+var_8]
push	edx
push	0
push	esi
mov	[esp+2Ch+var_8], eax
mov	[esp+2Ch+var_4], 10001h
call	PK11_GenerateKeyPair
push	esi
mov	edi, eax
call	PK11_FreeSlot
add	esp, 20h
mov	eax, edi
pop	edi
pop	esi
add	esp, 8
retn
align 10h
public SECKEY_CreateDHPrivateKey
push	ebx
mov	ebx, [esp+4+arg_0]
test	ebx, ebx
jz	loc_1000EFFB
mov	edx, [ebx+14h]
test	edx, edx
jz	loc_1000EFFB
cmp	dword ptr [ebx+8], 0
jz	short loc_1000EFFB
mov	ecx, [ebx+0Ch]
cmp	ecx, 40h
jb	short loc_1000EFFB
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_1000EFFB
inc	ecx
cmp	eax, ecx
ja	short loc_1000EFFB
cmp	eax, 1
jnz	short loc_1000EF9C
cmp	byte ptr [edx],	0
jz	short loc_1000EFFB
push	ebp
mov	ebp, [esp+8+arg_8]
push	esi
push	ebp
push	20h
call	PK11_GetBestSlot
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000EFB7
pop	esi
pop	ebp
pop	ebx
retn
mov	eax, [esp+0Ch+arg_4]
push	edi
push	ebp
push	0
push	0
push	eax
push	ebx
push	20h
push	esi
call	PK11_GenerateKeyPair
mov	edi, eax
add	esp, 1Ch
test	edi, edi
jnz	short loc_1000EFEB
mov	ecx, [esp+10h+arg_4]
push	ebp
push	1
push	eax
push	ecx
push	ebx
push	20h
push	esi
call	PK11_GenerateKeyPair
add	esp, 1Ch
mov	edi, eax
push	esi
call	PK11_FreeSlot
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
retn
align 10h
public SECKEY_CreateECPrivateKey
push	ebx
mov	ebx, [esp+4+arg_8]
push	edi
push	ebx
push	1040h
call	PK11_GetBestSlot
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_1000F02D
pop	edi
pop	ebx
retn
mov	eax, [esp+8+arg_0]
push	ebp
mov	ebp, [esp+0Ch+arg_4]
push	esi
push	ebx
push	80800h
push	80000h
push	8Ah
push	ebp
push	eax
push	1040h
push	edi
call	PK11_GenerateKeyPairWithOpFlags
mov	esi, eax
add	esp, 20h
test	esi, esi
jnz	short loc_1000F080
mov	ecx, [esp+10h+arg_0]
push	ebx
push	80800h
push	80000h
push	46h
push	ebp
push	ecx
push	1040h
push	edi
call	PK11_GenerateKeyPairWithOpFlags
add	esp, 20h
mov	esi, eax
push	edi
call	PK11_FreeSlot
add	esp, 4
mov	eax, esi
pop	esi
pop	ebp
pop	edi
pop	ebx
retn
public SECKEY_DestroyPrivateKey
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1000F0D0
mov	eax, [esi+8]
test	eax, eax
jz	short loc_1000F0BF
cmp	dword ptr [esi+10h], 0
jz	short loc_1000F0B3
mov	ecx, [esi+0Ch]
push	ecx
push	eax
call	PK11_DestroyObject
add	esp, 8
mov	edx, [esi+8]
push	edx
call	PK11_FreeSlot
add	esp, 4
mov	esi, [esi]
test	esi, esi
jz	short loc_1000F0D0
push	1
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
pop	esi
retn
align 10h
public SECKEY_DestroyPublicKey
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1000F12E
mov	eax, [esi+8]
test	eax, eax
jz	short loc_1000F11D
mov	ecx, [esi+0Ch]
push	ecx
push	eax
call	sub_1002A4C0
add	esp, 8
test	eax, eax
jnz	short loc_1000F111
mov	edx, [esi+0Ch]
mov	eax, [esi+8]
push	edx
push	eax
call	PK11_DestroyObject
add	esp, 8
mov	ecx, [esi+8]
push	ecx
call	PK11_FreeSlot
add	esp, 4
mov	esi, [esi]
test	esi, esi
jz	short loc_1000F12E
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
pop	esi
retn
public SECKEY_CopySubjectPublicKeyInfo
			
sub	esp, 0Ch
push	ebx
mov	ebx, [esp+10h+arg_0]
push	esi
mov	esi, [esp+14h+arg_8]
push	edi
mov	edi, [esp+18h+arg_4]
lea	eax, [esi+4]
push	eax
lea	ecx, [edi+4]
push	ecx
push	ebx
call	SECOID_CopyAlgorithmID_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000F18E
mov	eax, [esi+20h]
mov	edx, [esi+1Ch]
mov	[esp+18h+var_8], eax
mov	eax, [esi+24h]
lea	ecx, [esp+18h+var_C]
mov	[esp+18h+var_C], edx
push	ecx
lea	edx, [edi+1Ch]
add	eax, 7
push	edx
shr	eax, 3
push	ebx
mov	[esp+24h+var_4], eax
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000F18E
mov	ecx, [esi+24h]
mov	[edi+24h], ecx
			
pop	edi
pop	esi
pop	ebx
add	esp, 0Ch
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_4]
inc	ebx
cmp	ebx, 14h
jle	short loc_1000F1B0
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	edi
mov	edi, [esp+8+arg_0]
lea	eax, [edi+0D8h]
push	eax
call	SECOID_FindOID_Util
add	esp, 4
test	eax, eax
jz	short loc_1000F20D
mov	eax, [eax+0Ch]
cmp	eax, 7Ch
jz	short loc_1000F1F6
cmp	eax, 7Dh
jz	short loc_1000F1F6
cmp	eax, 13Ah
jz	short loc_1000F1F6
cmp	eax, 13Bh
jz	short loc_1000F1F6
cmp	eax, 7Eh
jz	short loc_1000F1F6
cmp	eax, 0BDh
jz	short loc_1000F1F6
cmp	eax, 0C8h
jnz	short loc_1000F1FF
			
cmp	dword ptr [edi+0ECh], 0
jz	short loc_1000F204
pop	edi
xor	eax, eax
pop	ebx
retn
cmp	dword ptr [edi+170h], 0
jz	short loc_1000F213
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	esi
push	0Bh
call	ds:PR_Now
push	edx
push	eax
push	edi
call	CERT_FindCertIssuer
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_1000F234
pop	esi
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
retn
lea	ecx, [esi+0D8h]
push	ecx
call	SECOID_FindOID_Util
add	esp, 4
test	eax, eax
jz	short loc_1000F2B5
mov	eax, [eax+0Ch]
cmp	eax, 7Ch
jz	short loc_1000F275
cmp	eax, 7Dh
jz	short loc_1000F275
cmp	eax, 13Ah
jz	short loc_1000F275
cmp	eax, 13Bh
jz	short loc_1000F275
cmp	eax, 7Eh
jz	short loc_1000F275
cmp	eax, 0BDh
jz	short loc_1000F275
cmp	eax, 0C8h
jnz	short loc_1000F2B5
			
push	ebx
push	esi
call	sub_1000F1A0
add	esp, 8
test	eax, eax
jnz	short loc_1000F2B5
cmp	[esi+0ECh], eax
jz	short loc_1000F2B5
mov	ecx, [edi]
lea	edx, [esi+0E4h]
push	edx
lea	eax, [edi+0E4h]
push	eax
push	ecx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
push	esi
mov	edi, eax
call	CERT_DestroyCertificate
add	esp, 4
pop	esi
mov	eax, edi
pop	edi
pop	ebx
retn
			
push	esi
or	edi, 0FFFFFFFFh
call	CERT_DestroyCertificate
add	esp, 4
pop	esi
mov	eax, edi
pop	edi
pop	ebx
retn
align 10h
public SECKEY_UpdateCertPQG
			
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_1000F2E9
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	0
push	eax
call	sub_1000F1A0
add	esp, 8
retn
align 10h
sub	esp, 0Ch
test	eax, eax
jz	short loc_1000F36D
cmp	dword ptr [eax+4], 0
jz	short loc_1000F36D
push	eax
lea	eax, [esp+10h+var_C]
push	eax
push	esi
call	SECITEM_CopyItem_Util
mov	ecx, [esp+18h+var_8]
mov	cl, [ecx]
add	esp, 0Ch
cmp	cl, 0A1h
jz	short loc_1000F35C
cmp	cl, 0A0h
jz	short loc_1000F35C
test	eax, eax
jnz	short loc_1000F370
mov	eax, [esp+0Ch+arg_0]
lea	edx, [esp+0Ch+var_C]
push	edx
add	eax, 10h
push	offset dword_100A28F8
mov	ecx, 0Ah
push	eax
push	esi
mov	[eax+4], ecx
mov	[eax+10h], ecx
mov	[eax+1Ch], ecx
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
add	esp, 0Ch
retn
			
test	eax, eax
jnz	short loc_1000F370
push	0FFFFE009h
call	PORT_SetError_Util
add	esp, 4
			
or	eax, 0FFFFFFFFh
			
add	esp, 0Ch
retn
align 10h
			
mov	eax, [esp+arg_0]
cmp	eax, 39h
jg	short loc_1000F3A6
cmp	eax, 36h
jge	short loc_1000F3A0
cmp	eax, 10h
jz	short loc_1000F3BE 
cmp	eax, 12h
jle	short loc_1000F39D 
cmp	eax, 14h
jle	short loc_1000F3BE 
			
xor	eax, eax	
retn
mov	eax, 3
retn
add	eax, 0FFFFFFC6h	
cmp	eax, 0FAh
ja	short loc_1000F39D 
movzx	eax, ds:byte_1000F408[eax]
jmp	ds:off_1000F3E8[eax*4] 
			
mov	eax, 1		
retn
			
mov	eax, 7		
retn
			
mov	eax, 8		
retn
			
mov	eax, 2		
retn
			
mov	eax, 5		
retn
			
mov	eax, 4		
retn
			
mov	eax, 6		
retn
			
dd offset loc_1000F3DC,	offset loc_1000F3E2, offset loc_1000F3CA 
dd offset loc_1000F3C4,	offset loc_1000F39D
			
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7	
db 7, 7, 7, 1, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 2, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 3, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 1, 1, 1, 7, 7,	7, 4, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 7, 7, 7,	7, 7, 7
db 7, 7, 7, 7, 7, 7, 7,	7, 7, 7, 7, 7, 5, 7, 7,	6, 1
align 10h
			
mov	eax, [esp+arg_0]
add	eax, 4
push	eax
call	SECOID_GetAlgorithmTag_Util
add	esp, 4
mov	[esp+arg_0], eax
jmp	sub_1000F380
align 10h
			
sub	esp, 24h
push	ebx
push	ebp
push	esi
push	800h
mov	ebx, eax
call	PORT_NewArena_Util
mov	esi, eax
xor	ebp, ebp
add	esp, 4
cmp	esi, ebp
jnz	short loc_1000F556
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 24h
retn
push	edi
push	0ACh
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
cmp	edi, ebp
jnz	short loc_1000F57F
push	ebp
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 24h
retn
mov	[edi], esi
mov	[edi+8], ebp
mov	[edi+0Ch], ebp
mov	eax, [ebx+1Ch]
mov	ecx, [ebx+20h]
mov	[esp+34h+var_18], eax
mov	eax, [ebx+24h]
add	eax, 7
lea	edx, [ebx+4]
shr	eax, 3
push	edx
mov	[esp+38h+var_14], ecx
mov	[esp+38h+var_10], eax
call	SECOID_GetAlgorithmTag_Util
mov	ebp, eax
lea	eax, [esp+38h+var_18]
push	eax
lea	ecx, [esp+3Ch+var_24]
push	ecx
push	esi
call	SECITEM_CopyItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_1000F71D
lea	eax, [ebp-10h]	
cmp	eax, 0B8h
ja	loc_1000F710	
movzx	edx, ds:byte_1000F744[eax]
jmp	ds:off_1000F730[edx*4] 
			
mov	eax, 0Ah	
mov	[edi+14h], eax
mov	[edi+20h], eax
lea	eax, [esp+34h+var_24]
push	eax
push	offset dword_100A2828
push	edi
push	esi
mov	dword ptr [edi+4], 1
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_1000F71D
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 24h
retn
			
lea	ecx, [esp+34h+var_24] 
push	ecx
push	offset dword_100A28D8
push	edi
push	esi
mov	dword ptr [edi+4], 2
mov	dword ptr [edi+38h], 0Ah
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_1000F71D
lea	eax, [ebx+10h]
push	edi
call	sub_1000F300
add	esp, 4
test	eax, eax
jnz	loc_1000F71D
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 24h
retn
			
lea	edx, [esp+34h+var_24] 
push	edx
push	offset dword_100A2948
mov	eax, 0Ah
push	edi
push	esi
mov	dword ptr [edi+4], 4
mov	[edi+14h], eax
mov	[edi+20h], eax
mov	[edi+2Ch], eax
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_1000F71D
add	ebx, 10h
push	ebx
lea	eax, [esp+38h+var_C]
push	eax
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000F71D
lea	ecx, [esp+34h+var_C]
push	ecx
push	offset dword_100A2968
push	edi
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1000F71D
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 24h
retn
			
add	ebx, 10h	
push	ebx
lea	edx, [edi+10h]
push	edx
push	esi
mov	dword ptr [edi+4], 6
mov	dword ptr [edi+1Ch], 0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000F71D
lea	eax, [esp+34h+var_24]
push	eax
lea	ecx, [edi+20h]
push	ecx
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1000F71D
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 24h
retn
			
			
push	0FFFFE030h	
call	PORT_SetError_Util
add	esp, 4
			
push	edi
call	SECKEY_DestroyPublicKey
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 24h
retn
			
dd offset loc_1000F6CD,	offset loc_1000F710 
db	4,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     0,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	1,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     2,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     1,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	3
align 10h
public SECKEY_ExtractPublicKey
			
			
mov	eax, [esp+arg_0]
jmp	sub_1000F530
align 10h
public CERT_ExtractPublicKey
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jnz	short loc_1000F82A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
push	0
push	esi
call	sub_1000F1A0
add	esp, 8
test	eax, eax
jnz	short loc_1000F826
lea	eax, [esi+0D4h]
pop	esi
jmp	sub_1000F530
align 10h
public SECKEY_ECParamsToKeySize
			
			
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_0]
mov	eax, [eax+4]
mov	[esp+0Ch+var_8], 0
mov	[esp+0Ch+var_4], 0
mov	[esp+0Ch+var_C], 0
movzx	ecx, byte ptr [eax+1]
lea	edx, [esp+0Ch+var_C]
add	eax, 2
push	edx
mov	[esp+10h+var_4], ecx
mov	[esp+10h+var_8], eax
call	SECOID_FindOIDTag_Util
add	esp, 4
test	eax, eax
jz	loc_1000F99E
add	eax, 0FFFFFF36h	
cmp	eax, 39h
ja	loc_1000F991	
movzx	eax, ds:byte_1000FA08[eax]
jmp	ds:off_1000F9A4[eax*4] 
			
mov	eax, 70h	
add	esp, 0Ch
retn
			
mov	eax, 71h	
add	esp, 0Ch
retn
			
mov	eax, 80h	
add	esp, 0Ch
retn
			
mov	eax, 83h	
add	esp, 0Ch
retn
			
mov	eax, 0A0h	
add	esp, 0Ch
retn
			
mov	eax, 0A3h	
add	esp, 0Ch
retn
			
mov	eax, 0B0h	
add	esp, 0Ch
retn
			
mov	eax, 0BFh	
add	esp, 0Ch
retn
			
mov	eax, 0C0h	
add	esp, 0Ch
retn
			
mov	eax, 0C1h	
add	esp, 0Ch
retn
			
mov	eax, 0D0h	
add	esp, 0Ch
retn
			
mov	eax, 0E0h	
add	esp, 0Ch
retn
			
mov	eax, 0E9h	
add	esp, 0Ch
retn
			
mov	eax, 0EFh	
add	esp, 0Ch
retn
			
mov	eax, 100h	
add	esp, 0Ch
retn
			
mov	eax, 110h	
add	esp, 0Ch
retn
			
mov	eax, 11Bh	
add	esp, 0Ch
retn
			
mov	eax, 130h	
add	esp, 0Ch
retn
			
mov	eax, 167h	
add	esp, 0Ch
retn
			
mov	eax, 170h	
add	esp, 0Ch
retn
			
mov	eax, 180h	
add	esp, 0Ch
retn
			
mov	eax, 199h	
add	esp, 0Ch
retn
			
mov	eax, 1AFh	
add	esp, 0Ch
retn
			
mov	eax, 209h	
add	esp, 0Ch
retn
			
mov	eax, 23Bh	
add	esp, 0Ch
retn
push	0FFFFE08Dh	
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 0Ch
retn
			
dd offset loc_1000F8B0,	offset loc_1000F8C2, offset loc_1000F8D4 
dd offset loc_1000F913,	offset loc_1000F964, offset loc_1000F97F
dd offset loc_1000F8DD,	offset loc_1000F8E6, offset loc_1000F8EF
dd offset loc_1000F90A,	offset loc_1000F937, offset loc_1000F949
dd offset loc_1000F952,	offset loc_1000F95B, offset loc_1000F976
dd offset loc_1000F8B9,	offset loc_1000F8CB, offset loc_1000F901
dd offset loc_1000F91C,	offset loc_1000F940, offset loc_1000F96D
dd offset loc_1000F988
db	1,     1,     2,     3 
db	3,     4,     4,     5
db	5,     5,     0,     6
db	6,     2,     7,     8
db	9,     9,     9,   0Ah
db    0Bh,   0Bh,   0Bh,   0Bh
db    0Bh,   0Ch,     1,     1
db	1,     1,     1,   0Dh
db    0Eh,   0Fh,   10h,   11h
db    12h,   12h,   13h,   13h
db	9,     9,     9,   14h
db    14h,   15h,   15h,     1
db    16h,   16h,   17h,   17h
db    18h,   18h
align 10h
public SECKEY_ECParamsToBasePointOrderLen
			
			
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_0]
mov	eax, [eax+4]
mov	[esp+0Ch+var_8], 0
mov	[esp+0Ch+var_4], 0
mov	[esp+0Ch+var_C], 0
movzx	ecx, byte ptr [eax+1]
lea	edx, [esp+0Ch+var_C]
add	eax, 2
push	edx
mov	[esp+10h+var_4], ecx
mov	[esp+10h+var_8], eax
call	SECOID_FindOIDTag_Util
add	esp, 4
test	eax, eax
jz	loc_1000FBF1
add	eax, 0FFFFFF36h	
cmp	eax, 39h
ja	loc_1000FBE4	
jmp	ds:off_1000FBF8[eax*4] 
			
mov	eax, 70h	
add	esp, 0Ch
retn
			
mov	eax, 6Eh	
add	esp, 0Ch
retn
			
mov	eax, 71h	
add	esp, 0Ch
retn
			
mov	eax, 80h	
add	esp, 0Ch
retn
			
mov	eax, 7Eh	
add	esp, 0Ch
retn
			
mov	eax, 83h	
add	esp, 0Ch
retn
			
mov	eax, 0A1h	
add	esp, 0Ch
retn
			
mov	eax, 0A3h	
add	esp, 0Ch
retn
			
mov	eax, 0A2h	
add	esp, 0Ch
retn
			
mov	eax, 0BFh	
add	esp, 0Ch
retn
			
mov	eax, 0BEh	
add	esp, 0Ch
retn
			
mov	eax, 0BDh	
add	esp, 0Ch
retn
			
mov	eax, 0BCh	
add	esp, 0Ch
retn
			
mov	eax, 0C0h	
add	esp, 0Ch
retn
			
mov	eax, 0C1h	
add	esp, 0Ch
retn
			
mov	eax, 0E1h	
add	esp, 0Ch
retn
			
mov	eax, 0E0h	
add	esp, 0Ch
retn
			
mov	eax, 0E8h	
add	esp, 0Ch
retn
			
mov	eax, 0E9h	
add	esp, 0Ch
retn
			
mov	eax, 0EEh	
add	esp, 0Ch
retn
			
mov	eax, 0EDh	
add	esp, 0Ch
retn
			
mov	eax, 0ECh	
add	esp, 0Ch
retn
			
mov	eax, 0EFh	
add	esp, 0Ch
retn
			
mov	eax, 100h	
add	esp, 0Ch
retn
			
mov	eax, 101h	
add	esp, 0Ch
retn
			
mov	eax, 119h	
add	esp, 0Ch
retn
			
mov	eax, 11Ah	
add	esp, 0Ch
retn
			
mov	eax, 121h	
add	esp, 0Ch
retn
			
mov	eax, 161h	
add	esp, 0Ch
retn
			
mov	eax, 180h	
add	esp, 0Ch
retn
			
mov	eax, 197h	
add	esp, 0Ch
retn
			
mov	eax, 199h	
add	esp, 0Ch
retn
			
mov	eax, 1A2h	
add	esp, 0Ch
retn
			
mov	eax, 209h	
add	esp, 0Ch
retn
			
mov	eax, 23Ah	
add	esp, 0Ch
retn
push	0FFFFE08Dh	
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 0Ch
retn
align 4
			
dd offset loc_1000FB6F,	offset loc_1000FB6F, offset loc_1000FB6F 
dd offset loc_1000FB78,	offset loc_1000FAA9, offset loc_1000FAB2
dd offset loc_1000FAC4,	offset loc_1000FACD, offset loc_1000FADF
dd offset loc_1000FADF,	offset loc_1000FADF, offset loc_1000FB1E
dd offset loc_1000FB30,	offset loc_1000FB39, offset loc_1000FB78
dd offset loc_1000FBAE,	offset loc_1000FBD2, offset loc_1000FAE8
dd offset loc_1000FAF1,	offset loc_1000FAF1, offset loc_1000FADF
dd offset loc_1000FAFA,	offset loc_1000FB03, offset loc_1000FB0C
dd offset loc_1000FAFA,	offset loc_1000FB15, offset loc_1000FB27
dd offset loc_1000FB54,	offset loc_1000FB5D, offset loc_1000FB66
dd offset loc_1000FB54,	offset loc_1000FB5D, offset loc_1000FB81
dd offset loc_1000FB9C,	offset loc_1000FBA5, offset loc_1000FBA5
dd offset loc_1000FBC9,	offset loc_1000FABB, offset loc_1000FABB
dd offset loc_1000FAD6,	offset loc_1000FAD6, offset loc_1000FAE8
dd offset loc_1000FAF1,	offset loc_1000FAE8, offset loc_1000FB27
dd offset loc_1000FB27,	offset loc_1000FB42, offset loc_1000FB4B
dd offset loc_1000FB54,	offset loc_1000FB8A, offset loc_1000FB93
dd offset loc_1000FBB7,	offset loc_1000FBC0, offset loc_1000FBDB
dd offset loc_1000FBDB
public SECKEY_PublicKeyStrength
			
mov	eax, [esp+arg_0]
test	eax, eax
jz	short loc_1000FD3E 
mov	ecx, [eax+4]
dec	ecx
cmp	ecx, 5		
ja	short loc_1000FD3E 
jmp	ds:off_1000FD50[ecx*4] 
			
mov	ecx, [eax+18h]	
test	ecx, ecx
jz	short loc_1000FD3E 
cmp	byte ptr [ecx],	0
mov	eax, [eax+1Ch]
jnz	short locret_1000FD4D
dec	eax
retn
			
mov	ecx, [eax+3Ch]	
test	ecx, ecx
jz	short loc_1000FD3E 
cmp	byte ptr [ecx],	0
mov	eax, [eax+40h]
jnz	short locret_1000FD4D
dec	eax
retn
			
mov	ecx, [eax+30h]	
test	ecx, ecx
jz	short loc_1000FD3E 
cmp	byte ptr [ecx],	0
mov	eax, [eax+34h]
jnz	short locret_1000FD4D
dec	eax
retn
			
add	eax, 10h	
push	eax
call	SECKEY_ECParamsToKeySize
add	eax, 7
add	esp, 4
shr	eax, 3
retn
			
push	0FFFFE028h	
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
			
retn
align 10h
dd offset loc_1000FD09	
dd offset loc_1000FD3E
dd offset loc_1000FD1A
dd offset loc_1000FD3E
dd offset loc_1000FD2B
align 10h
public SECKEY_PublicKeyStrengthInBits
mov	ecx, [esp+arg_0]
mov	eax, [ecx+4]
dec	eax
cmp	eax, 5		
ja	short loc_1000FDA0 
jmp	ds:off_1000FDB0[eax*4] 
			
push	ecx		
call	SECKEY_PublicKeyStrength
add	eax, eax
add	eax, eax
add	esp, 4
add	eax, eax
retn
			
add	ecx, 10h	
mov	[esp+arg_0], ecx
jmp	SECKEY_ECParamsToKeySize
			
			
push	0FFFFE028h	
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
dd offset loc_1000FD84	
dd offset loc_1000FDA0
dd offset loc_1000FD84
dd offset loc_1000FDA0
dd offset loc_1000FD94
align 10h
public SECKEY_SignatureLen
			
mov	ecx, [esp+arg_0]
mov	eax, [ecx+4]
dec	eax
jz	short loc_1000FE0D
dec	eax
jz	short loc_1000FE07
sub	eax, 4
jz	short loc_1000FDF2
push	0FFFFE028h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
add	ecx, 10h
push	ecx
call	SECKEY_ECParamsToBasePointOrderLen
add	eax, 7
shr	eax, 3
add	esp, 4
add	eax, eax
retn
mov	eax, [ecx+28h]
add	eax, eax
retn
mov	eax, [ecx+18h]
cmp	byte ptr [eax],	0
mov	eax, [ecx+1Ch]
jnz	short locret_1000FE19
dec	eax
retn
align 10h
public SECKEY_CopyPrivateKey
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	loc_1000FED2
cmp	dword ptr [edi+8], 0
jz	loc_1000FED2
push	ebx
push	800h
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1000FE4E
pop	ebx
pop	edi
retn
push	esi
push	1Ch
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1000FEB4
mov	[esi], ebx
mov	eax, [edi+4]
mov	[esi+4], eax
mov	ecx, [edi+8]
push	ecx
call	PK11_ReferenceSlot
add	esp, 4
mov	[esi+8], eax
cmp	dword ptr [edi+10h], 0
jz	short loc_1000FE96
mov	edx, [edi+0Ch]
mov	eax, [edi+8]
push	edx
push	eax
call	sub_1002AC00
add	esp, 8
mov	[esi+0Ch], eax
test	eax, eax
jz	short loc_1000FEC1
jmp	short loc_1000FE9C
mov	ecx, [edi+0Ch]
mov	[esi+0Ch], ecx
mov	edx, [edi+10h]
mov	[esi+10h], edx
mov	eax, [edi+14h]
mov	[esi+14h], eax
mov	ecx, [edi+18h]
mov	[esi+18h], ecx
mov	eax, esi
pop	esi
pop	ebx
pop	edi
retn
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
push	0
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	ebx
xor	eax, eax
pop	edi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
retn
align 10h
public SECKEY_CopyPublicKey
			
push	ebx
push	800h
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1000FF15
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
retn
push	esi
push	0ACh
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1000FF43
push	eax
push	ebx
call	PORT_FreeArena_Util
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 0Ch
pop	esi
xor	eax, eax
pop	ebx
retn
push	edi
mov	edi, [esp+0Ch+arg_0]
mov	[esi], ebx
mov	eax, [edi+4]
mov	[esi+4], eax
mov	eax, [edi+8]
test	eax, eax
jz	short loc_1000FF7F
mov	ecx, [edi+0Ch]
push	ecx
push	eax
call	sub_1002A4C0
add	esp, 8
test	eax, eax
jz	short loc_1000FF7F
mov	edx, [edi+8]
push	edx
call	PK11_ReferenceSlot
mov	[esi+8], eax
mov	eax, [edi+0Ch]
add	esp, 4
mov	[esi+0Ch], eax
jmp	short loc_1000FF8D
			
mov	dword ptr [esi+8], 0
mov	dword ptr [esi+0Ch], 0
mov	eax, [edi+4]
cmp	eax, 6		
ja	loc_10010086	
jmp	ds:off_100100A4[eax*4] 
			
lea	ecx, [edi+14h]	
push	ecx
lea	edx, [esi+14h]
push	edx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10010093
add	edi, 20h
lea	eax, [esi+20h]
push	edi
push	eax
			
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10010093
			
pop	edi		
mov	eax, esi
pop	esi
pop	ebx
retn
			
lea	ecx, [edi+38h]	
push	ecx
lea	edx, [esi+38h]
push	edx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10010093
lea	eax, [edi+14h]
push	eax
lea	ecx, [esi+14h]
push	ecx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10010093
lea	edx, [edi+20h]
push	edx
lea	eax, [esi+20h]
push	eax
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10010093
add	edi, 2Ch
push	edi
lea	ecx, [esi+2Ch]
push	ecx
jmp	short loc_1000FFC1
			
lea	edx, [edi+14h]	
push	edx
lea	eax, [esi+14h]
push	eax
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10010093
lea	ecx, [edi+20h]
push	ecx
lea	edx, [esi+20h]
push	edx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10010093
add	edi, 2Ch
lea	eax, [esi+2Ch]
jmp	loc_1000FFBF
			
mov	ecx, [edi+1Ch]	
lea	edx, [edi+10h]
push	edx
lea	eax, [esi+10h]
push	eax
push	ebx
mov	[esi+1Ch], ecx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10010093
add	edi, 20h
push	edi
lea	ecx, [esi+20h]
push	ecx
jmp	loc_1000FFC1
			
			
push	0FFFFE028h	
call	PORT_SetError_Util
add	esp, 4
			
push	esi
call	SECKEY_DestroyPublicKey
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
align 4
dd offset loc_1000FFA0	
dd offset loc_1000FFD8
dd offset loc_10010086
dd offset loc_10010029
dd offset loc_10010086
dd offset loc_1001005E
public SECKEY_ConvertToPublicKey
push	esi
push	edi
mov	edi, [esp+8+arg_0]
push	edi
call	PK11_GetCertFromPrivateKey
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1001010F
push	0
push	esi
call	sub_1000F1A0
add	esp, 8
test	eax, eax
jz	short loc_100100F4
push	esi
xor	edi, edi
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
lea	eax, [esi+0D4h]
call	sub_1000F530
push	esi
mov	edi, eax
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
push	ebx
push	800h
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_10010136
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	ebx
pop	edi
xor	eax, eax
pop	esi
retn
push	0ACh
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100101A2
mov	eax, [edi+4]
mov	[esi+4], eax
mov	dword ptr [esi+8], 0
mov	dword ptr [esi+0Ch], 0
mov	[esi], ebx
mov	eax, [edi+4]
dec	eax
jnz	short loc_100101A2
mov	edx, [edi+0Ch]
mov	eax, [edi+8]
lea	ecx, [esi+14h]
push	ecx
push	ebx
push	120h
push	edx
push	eax
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_100101A2
mov	edx, [edi+0Ch]
mov	eax, [edi+8]
lea	ecx, [esi+20h]
push	ecx
push	ebx
push	122h
push	edx
push	eax
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jz	short loc_100101B3
			
push	0
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	ebx
pop	edi
xor	eax, eax
pop	esi
retn
pop	ebx
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
			
sub	esp, 0Ch
push	ebx
push	ebp
xor	ebp, ebp
push	esi
push	800h
mov	ebx, eax
mov	[esp+1Ch+var_C], ebp
mov	[esp+1Ch+var_8], ebp
mov	[esp+1Ch+var_4], ebp
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebp
jnz	short loc_100101FF
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
push	edi
push	28h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
cmp	edi, ebp
jz	loc_1001033D
mov	[edi], esi
mov	eax, [ebx+4]
dec	eax
jz	loc_100102F9
dec	eax
jz	short loc_1001028D
sub	eax, 4
jnz	loc_1001034A
lea	eax, [ebx+10h]
push	eax
lea	eax, [esp+20h+var_C]
push	eax
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_1001034A
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	0C8h
lea	edx, [edi+4]
push	edx
push	esi
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jnz	loc_1001034A
add	ebx, 20h
push	ebx
lea	eax, [edi+1Ch]
push	eax
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_1001034A
shl	dword ptr [edi+24h], 3
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
lea	eax, [ebx+10h]
push	offset dword_100A28F8
push	eax
lea	ecx, [esp+24h+var_C]
mov	ebp, 0Ah
push	ecx
push	esi
mov	[eax+4], ebp
mov	[eax+10h], ebp
mov	[eax+1Ch], ebp
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_100102E8
lea	edx, [esp+1Ch+var_C]
push	edx
push	7Ch
lea	eax, [edi+4]
push	eax
push	esi
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jnz	short loc_100102E8
push	offset dword_100A28D8
push	ebx
lea	ecx, [edi+1Ch]
push	ecx
push	esi
mov	[ebx+38h], ebp
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1001032F
			
lea	edx, [esp+1Ch+var_C]
push	0
push	edx
call	SECITEM_FreeItem_Util
add	esp, 8
jmp	short loc_1001034A
push	ebp
push	10h
lea	eax, [edi+4]
push	eax
push	esi
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1001034A
push	offset dword_100A2828
push	ebx
lea	ecx, [edi+1Ch]
push	ecx
mov	ebp, 0Ah
push	esi
mov	[ebx+14h], ebp
mov	[ebx+20h], ebp
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_1001034A
shl	dword ptr [edi+24h], 3
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
public SECKEY_CreateSubjectPublicKeyInfo
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_10010378
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
push	esi
push	eax
call	SECKEY_CopyPublicKey
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1001038A
pop	esi
retn
push	edi
call	sub_100101C0
push	esi
mov	edi, eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
public SECKEY_EncodeDERSubjectPublicKeyInfo
			
mov	eax, [esp+arg_0]
push	ebx
xor	ebx, ebx
test	eax, eax
jnz	short loc_100103BC
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
mov	eax, ebx
pop	ebx
retn
push	edi
push	eax
call	SECKEY_CopyPublicKey
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10010412
push	esi
call	sub_100101C0
push	edi
mov	esi, eax
call	SECKEY_DestroyPublicKey
add	esp, 4
test	esi, esi
jz	short loc_1001040C
push	offset dword_100A27A8
push	esi
push	0
push	0
call	SEC_ASN1EncodeItem_Util
mov	esi, [esi]
add	esp, 10h
mov	edi, eax
test	esi, esi
jz	short loc_10010408
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	esi
pop	edi
pop	ebx
retn
pop	esi
pop	edi
mov	eax, ebx
pop	ebx
retn
pop	edi
mov	eax, ebx
pop	ebx
retn
align 10h
public SECKEY_DecodeDERSubjectPublicKeyInfo
sub	esp, 0Ch
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1001044B
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
push	edi
push	28h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10010496
mov	eax, [esp+14h+arg_0]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	esi
mov	[edi], esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_100104A3
lea	edx, [esp+14h+var_C]
push	edx
push	offset dword_100A27A8
push	edi
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_100104A3
mov	eax, edi
pop	edi
pop	esi
add	esp, 0Ch
retn
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
align 10h
public SECKEY_DestroyPrivateKeyInfo
			
			
push	esi
mov	esi, [esp+4+Dst]
test	esi, esi
jz	short loc_10010545
push	edi
mov	edi, [esi]
test	edi, edi
jz	short loc_10010506
mov	eax, [esi+30h]
mov	ecx, [esi+2Ch]
push	eax		
push	0		
push	ecx		
call	memset
push	38h		
push	0		
push	esi		
call	memset
add	esp, 18h
cmp	[esp+8+arg_4], 1
jnz	short loc_10010501
push	1
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
retn
mov	[esi], edi
pop	edi
pop	esi
retn
lea	edx, [esi+4]
push	0
push	edx
call	SECITEM_ZfreeItem_Util
lea	eax, [esi+28h]
push	0
push	eax
call	SECITEM_ZfreeItem_Util
lea	ecx, [esi+10h]
push	0
push	ecx
call	SECOID_DestroyAlgorithmID_Util
push	38h		
push	0		
push	esi		
call	memset
add	esp, 24h
cmp	[esp+8+arg_4], 1
jnz	short loc_10010544
push	esi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
retn
align 10h
public SECKEY_DestroyEncryptedPrivateKeyInfo
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	loc_100105F8
push	edi
mov	edi, [esi]
test	edi, edi
jz	short loc_100105AF
mov	eax, [esi+24h]
mov	ecx, [esi+20h]
push	eax		
push	0		
push	ecx		
call	memset
xor	eax, eax
mov	[esi], eax
mov	[esi+4], eax
mov	[esi+8], eax
mov	[esi+0Ch], eax
mov	[esi+10h], eax
mov	[esi+14h], eax
mov	[esi+18h], eax
mov	[esi+1Ch], eax
add	esp, 0Ch
cmp	[esp+8+arg_4], 1
mov	[esi+20h], eax
mov	[esi+24h], eax
jnz	short loc_100105AA
push	1
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
retn
mov	[esi], edi
pop	edi
pop	esi
retn
lea	edx, [esi+1Ch]
push	0
push	edx
call	SECITEM_ZfreeItem_Util
lea	eax, [esi+4]
push	0
push	eax
call	SECOID_DestroyAlgorithmID_Util
xor	eax, eax
mov	[esi], eax
mov	[esi+4], eax
mov	[esi+8], eax
mov	[esi+0Ch], eax
mov	[esi+10h], eax
mov	[esi+14h], eax
mov	[esi+18h], eax
mov	[esi+1Ch], eax
add	esp, 10h
cmp	[esp+8+arg_4], 1
mov	[esi+20h], eax
mov	[esi+24h], eax
jnz	short loc_100105F7
push	esi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
retn
align 10h
public SECKEY_CopyPrivateKeyInfo
push	esi
push	edi
mov	edi, [esp+8+arg_4]
test	edi, edi
jz	short loc_1001065D
mov	esi, [esp+8+arg_8]
test	esi, esi
jz	short loc_1001065D
push	ebx
mov	ebx, [esp+0Ch+arg_0]
lea	eax, [esi+10h]
push	eax
lea	ecx, [edi+10h]
push	ecx
push	ebx
call	SECOID_CopyAlgorithmID_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10010641
lea	edx, [esi+28h]
push	edx
lea	eax, [edi+28h]
push	eax
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10010648
pop	ebx
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
add	esi, 4
push	esi
add	edi, 4
push	edi
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
pop	ebx
pop	edi
pop	esi
retn
			
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public SECKEY_CopyEncryptedPrivateKeyInfo
push	esi
push	edi
mov	edi, [esp+8+arg_4]
test	edi, edi
jz	short loc_100106B8
mov	esi, [esp+8+arg_8]
test	esi, esi
jz	short loc_100106B8
push	ebx
mov	ebx, [esp+0Ch+arg_0]
lea	eax, [esi+4]
push	eax
lea	ecx, [edi+4]
push	ecx
push	ebx
call	SECOID_CopyAlgorithmID_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_100106A3
pop	ebx
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
add	esi, 1Ch
push	esi
add	edi, 1Ch
push	edi
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
pop	ebx
pop	edi
pop	esi
retn
			
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public SECKEY_ImportDERPublicKey
sub	esp, 0Ch
push	ebx
mov	ebx, [esp+10h+arg_0]
test	ebx, ebx
jnz	short loc_100106D3
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_10010700
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
xor	esi, esi
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 0Ch
retn
push	0ACh
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_100107BF
push	ebx
lea	eax, [esp+1Ch+var_C]
push	eax
push	edi
mov	[esi], edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_100107BF
mov	[esi+8], eax
mov	[esi+0Ch], eax
mov	eax, [esp+18h+arg_4]
sub	eax, 0
jz	short loc_10010793
dec	eax
jz	short loc_10010770
dec	eax
jnz	short loc_100107BF
mov	edx, [esi]
lea	ecx, [esp+18h+var_C]
push	ecx
push	offset dword_100A2948
mov	eax, 0Ah
push	esi
push	edx
mov	[esi+14h], eax
mov	[esi+20h], eax
mov	[esi+2Ch], eax
call	SEC_QuickDERDecodeItem_Util
mov	dword ptr [esi+4], 4
jmp	short loc_100107B8
mov	ecx, [esi]
lea	eax, [esp+18h+var_C]
push	eax
push	offset dword_100A28D8
push	esi
push	ecx
mov	dword ptr [esi+38h], 0Ah
call	SEC_QuickDERDecodeItem_Util
mov	dword ptr [esi+4], 2
jmp	short loc_100107B8
lea	edx, [esp+18h+var_C]
push	edx
mov	eax, 0Ah
push	offset dword_100A2828
mov	[esi+14h], eax
mov	[esi+20h], eax
mov	eax, [esi]
push	esi
push	eax
call	SEC_QuickDERDecodeItem_Util
mov	dword ptr [esi+4], 1
			
add	esp, 10h
test	eax, eax
jz	short loc_100107CC
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
xor	esi, esi
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 0Ch
retn
align 10h
public SECKEY_RemovePrivateKeyListNode
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	esi, [edi+8]
test	esi, esi
jz	short loc_10010824
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10010813
cmp	dword ptr [esi+10h], 0
jz	short loc_10010807
mov	ecx, [esi+0Ch]
push	ecx
push	eax
call	PK11_DestroyObject
add	esp, 8
mov	edx, [esi+8]
push	edx
call	PK11_FreeSlot
add	esp, 4
mov	esi, [esi]
test	esi, esi
jz	short loc_10010824
push	1
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
mov	eax, [edi+4]
mov	ecx, [edi]
mov	dword ptr [edi+8], 0
mov	[eax], ecx
mov	edx, [edi]
mov	eax, [edi+4]
pop	edi
mov	[edx+4], eax
pop	esi
retn
align 10h
public SECKEY_AddPrivateKeyToListTail
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	0Ch
push	eax
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_1001085C
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	[eax], esi
mov	ecx, [esi+4]
mov	[eax+4], ecx
mov	edx, [esi+4]
mov	ecx, [esp+4+arg_4]
mov	[edx], eax
mov	[esi+4], eax
mov	[eax+8], ecx
xor	eax, eax
pop	esi
retn
align 10h
public SECKEY_CacheStaticFlags
push	esi
mov	esi, [esp+4+arg_0]
or	eax, 0FFFFFFFFh
test	esi, esi
jz	short loc_100108E3
mov	edx, [esi+8]
test	edx, edx
jz	short loc_100108E3
mov	ecx, [esi+0Ch]
test	ecx, ecx
jz	short loc_100108E3
or	dword ptr [esi+18h], 1
push	0
push	2
push	ecx
push	edx
call	sub_1002A280
add	esp, 10h
cmp	al, 1
jnz	short loc_100108B6
or	dword ptr [esi+18h], 2
jmp	short loc_100108BA
and	dword ptr [esi+18h], 0FFFFFFFDh
mov	eax, [esi+0Ch]
mov	ecx, [esi+8]
push	0
push	202h
push	eax
push	ecx
call	sub_1002A280
add	esp, 10h
cmp	al, 1
jnz	short loc_100108DD
or	dword ptr [esi+18h], 4
xor	eax, eax
pop	esi
retn
and	dword ptr [esi+18h], 0FFFFFFFBh
xor	eax, eax
			
pop	esi
retn
align 10h
public SECKEY_DestroyPrivateKeyList
			
push	ebx
mov	ebx, [esp+4+arg_0]
push	esi
mov	esi, [ebx]
cmp	esi, ebx
jz	short loc_1001095B
push	edi
lea	ecx, [ecx+0]
mov	edi, [esi+8]
test	edi, edi
jz	short loc_1001093E
mov	eax, [edi+8]
test	eax, eax
jz	short loc_1001092D
cmp	dword ptr [edi+10h], 0
jz	short loc_10010921
mov	ecx, [edi+0Ch]
push	ecx
push	eax
call	PK11_DestroyObject
add	esp, 8
mov	edx, [edi+8]
push	edx
call	PK11_FreeSlot
add	esp, 4
mov	edi, [edi]
test	edi, edi
jz	short loc_1001093E
push	1
push	edi
call	PORT_FreeArena_Util
add	esp, 8
			
mov	eax, [esi+4]
mov	ecx, [esi]
mov	dword ptr [esi+8], 0
mov	[eax], ecx
mov	edx, [esi]
mov	eax, [esi+4]
mov	[edx+4], eax
mov	esi, [ebx]
cmp	esi, ebx
jnz	short loc_10010900
pop	edi
mov	ecx, [ebx+8]
push	0
push	ecx
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	ebx
retn
align 10h
public SECKEY_DestroyPublicKeyList
push	ebx
mov	ebx, [esp+4+arg_0]
push	esi
mov	esi, [ebx]
cmp	esi, ebx
jz	short loc_100109E9
push	edi
lea	ecx, [ecx+0]
mov	edi, [esi+8]
test	edi, edi
jz	short loc_100109CC
mov	eax, [edi+8]
test	eax, eax
jz	short loc_100109BB
mov	ecx, [edi+0Ch]
push	ecx
push	eax
call	sub_1002A4C0
add	esp, 8
test	eax, eax
jnz	short loc_100109AF
mov	edx, [edi+0Ch]
mov	eax, [edi+8]
push	edx
push	eax
call	PK11_DestroyObject
add	esp, 8
mov	ecx, [edi+8]
push	ecx
call	PK11_FreeSlot
add	esp, 4
mov	edi, [edi]
test	edi, edi
jz	short loc_100109CC
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
			
mov	edx, [esi+4]
mov	eax, [esi]
mov	dword ptr [esi+8], 0
mov	[edx], eax
mov	ecx, [esi]
mov	edx, [esi+4]
mov	[ecx+4], edx
mov	esi, [ebx]
cmp	esi, ebx
jnz	short loc_10010980
pop	edi
mov	eax, [ebx+8]
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	ebx
retn
align 10h
public SGN_NewContext
			
mov	edx, [esp+arg_0]
sub	esp, 8
lea	eax, [esp+8+var_4]
push	eax
lea	ecx, [esp+0Ch+var_8]
push	ecx
push	0
push	edx
push	0
call	sub_10011310
add	esp, 14h
test	eax, eax
jz	short loc_10010A35
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 8
retn
mov	eax, [esp+8+var_8]
push	esi
push	eax
call	sub_1000F380
mov	esi, [esp+10h+arg_4]
mov	ecx, [esi+4]
add	esp, 4
cmp	ecx, eax
jz	short loc_10010A6B
cmp	ecx, 2
jnz	short loc_10010A57
cmp	eax, 3
jz	short loc_10010A6B
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
add	esp, 8
retn
			
push	14h
call	PORT_ZAlloc_Util
add	esp, 4
test	eax, eax
jz	short loc_10010A89
mov	ecx, [esp+0Ch+var_4]
mov	[eax+4], ecx
mov	edx, [esp+0Ch+var_8]
mov	[eax], edx
mov	[eax+10h], esi
pop	esi
add	esp, 8
retn
align 10h
public SGN_DestroyContext
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_10010AC7
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10010AB5
mov	ecx, [esi+0Ch]
mov	edx, [ecx+0Ch]
push	1
push	eax
call	edx
add	esp, 8
mov	dword ptr [esi+8], 0
cmp	[esp+4+arg_4], 0
jz	short loc_10010AC7
push	14h
push	esi
call	PORT_ZFree_Util
add	esp, 8
			
pop	esi
retn
align 10h
public SGN_Begin
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10010AF1
mov	ecx, [esi+0Ch]
mov	edx, [ecx+0Ch]
push	1
push	eax
call	edx
add	esp, 8
mov	dword ptr [esi+8], 0
mov	eax, [esi+4]
push	eax
call	HASH_GetHashObjectByOidTag
add	esp, 4
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_10010B09
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [eax+4]
call	ecx
mov	[esi+8], eax
test	eax, eax
jz	short loc_10010B04
mov	edx, [esi+0Ch]
push	eax
mov	eax, [edx+10h]
call	eax
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
public SGN_Update
mov	ecx, [esp+arg_0]
mov	eax, [ecx+8]
test	eax, eax
jnz	short loc_10010B4C
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	edx, [esp+arg_8]
mov	ecx, [ecx+0Ch]
push	edx
mov	edx, [esp+4+arg_4]
push	edx
push	eax
mov	eax, [ecx+14h]
call	eax
add	esp, 0Ch
xor	eax, eax
retn
align 10h
public SGN_End
			
sub	esp, 68h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+68h+var_4], eax
mov	eax, [esp+68h+arg_4]
push	ebx
push	ebp
push	esi
mov	esi, [esp+74h+arg_0]
mov	ebx, [esi+10h]
push	edi
xor	edi, edi
mov	[esp+78h+var_58], eax
mov	[eax+4], edi
mov	eax, [esi+8]
xor	ebp, ebp
mov	[esp+78h+var_68], edi
mov	[esp+78h+var_4C], edi
cmp	eax, edi
jnz	short loc_10010BCA
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+68h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 68h
retn
mov	ecx, [esi+0Ch]
push	40h
lea	edx, [esp+7Ch+var_54]
push	edx
lea	edx, [esp+80h+var_44]
push	edx
push	eax
mov	eax, [ecx+18h]
call	eax
add	esp, 10h
cmp	dword ptr [ebx+4], 1
jnz	short loc_10010C4D
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+78h+var_68], eax
cmp	eax, edi
jnz	short loc_10010C05
or	edi, 0FFFFFFFFh
jmp	loc_10010D0F
mov	ecx, [esp+78h+var_54]
mov	eax, [esi+4]
push	ecx
lea	edx, [esp+7Ch+var_44]
push	edx
push	eax
call	SGN_CreateDigestInfo_Util
mov	ebp, eax
add	esp, 0Ch
cmp	ebp, edi
jnz	short loc_10010C29
or	edi, 0FFFFFFFFh
jmp	loc_10010D0F
mov	edx, [esp+78h+var_68]
push	ebp
push	offset dword_100BA100
lea	ecx, [esp+80h+var_50]
push	ecx
push	edx
call	DER_Encode_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	loc_10010D0F
jmp	short loc_10010C5D
mov	ecx, [esp+78h+var_54]
lea	eax, [esp+78h+var_44]
mov	[esp+78h+var_4C], eax
mov	[esp+78h+var_48], ecx
push	ebx
call	PK11_SignatureLen
add	esp, 4
cmp	eax, edi
jg	short loc_10010C7F
push	0FFFFE028h
call	PORT_SetError_Util
add	esp, 4
or	edi, 0FFFFFFFFh
jmp	loc_10010D0F
push	eax
mov	[esp+7Ch+var_5C], eax
call	PORT_Alloc_Util
add	esp, 4
mov	[esp+78h+var_60], eax
cmp	eax, edi
jnz	short loc_10010C99
or	edi, 0FFFFFFFFh
jmp	short loc_10010D0F
lea	edx, [esp+78h+var_50]
push	edx
lea	eax, [esp+7Ch+var_64]
push	eax
push	ebx
call	PK11_Sign
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_10010CC9
mov	ecx, [esp+78h+var_60]
push	ecx
call	PORT_Free_Util
add	esp, 4
mov	[esp+78h+var_60], 0
jmp	short loc_10010D0F
mov	esi, [esi]
cmp	esi, 7Ch
jz	short loc_10010CEC
cmp	esi, 0C8h
jz	short loc_10010CEC
mov	eax, [esp+78h+var_58]
mov	edx, [esp+78h+var_5C]
mov	ecx, [esp+78h+var_60]
mov	[eax+8], edx
mov	[eax+4], ecx
jmp	short loc_10010D0F
mov	edx, [esp+78h+var_5C]
mov	ecx, [esp+78h+var_58]
push	edx
lea	eax, [esp+7Ch+var_64]
push	eax
push	ecx
call	DSAU_EncodeDerSigWithLen
mov	edx, [esp+84h+var_60]
push	edx
mov	edi, eax
call	PORT_Free_Util
add	esp, 10h
push	ebp
call	SGN_DestroyDigestInfo_Util
mov	eax, [esp+7Ch+var_68]
add	esp, 4
test	eax, eax
jz	short loc_10010D2B
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	ecx, [esp+78h+var_4]
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 68h
retn
public SEC_SignData
			
			
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_10]
push	esi
push	eax
push	ecx
call	SGN_NewContext
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10010D5E
or	eax, 0FFFFFFFFh
pop	esi
retn
push	edi
push	esi
call	SGN_Begin
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_10010DAA
mov	eax, [esi+8]
test	eax, eax
jnz	short loc_10010D87
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	edi, 0FFFFFFFFh
jmp	short loc_10010DAA
mov	ecx, [esp+8+arg_8]
mov	edx, [esi+0Ch]
mov	edx, [edx+14h]
push	ecx
mov	ecx, [esp+0Ch+arg_4]
push	ecx
push	eax
call	edx
mov	eax, [esp+14h+arg_0]
push	eax
push	esi
call	SGN_End
add	esp, 14h
mov	edi, eax
			
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10010DC6
mov	ecx, [esi+0Ch]
mov	edx, [ecx+0Ch]
push	1
push	eax
call	edx
add	esp, 8
mov	dword ptr [esi+8], 0
push	14h
push	esi
call	PORT_ZFree_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public NSS_Get_CERT_SignedDataTemplate
mov	eax, offset dword_100A29C0
retn
align 10h
public SEC_DerSignData
sub	esp, 3Ch
push	esi
mov	esi, [esp+40h+arg_10]
push	edi
mov	edi, [esp+44h+arg_14]
mov	[esp+44h+var_38], 0
test	edi, edi
jnz	short loc_10010E63
mov	eax, [esi+4]
dec	eax
jz	short loc_10010E5E
dec	eax
jz	short loc_10010E34
sub	eax, 4
jz	short loc_10010E2D
push	0FFFFE028h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 3Ch
retn
mov	edi, 0C9h
jmp	short loc_10010E63
push	esi
call	PK11_SignatureLen
add	esp, 4
sub	eax, 1C0h
jz	short loc_10010E57
sub	eax, 40h
jz	short loc_10010E50
mov	edi, 7Dh
jmp	short loc_10010E63
mov	edi, 13Bh
jmp	short loc_10010E63
mov	edi, 13Ah
jmp	short loc_10010E63
mov	edi, 14h
			
push	ebx
mov	ebx, [esp+48h+arg_C]
push	ebp
mov	ebp, [esp+4Ch+arg_8]
push	edi
push	esi
push	ebx
lea	eax, [esp+58h+var_3C]
push	ebp
push	eax
call	SEC_SignData
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	short loc_10010EE4
push	30h		
push	eax		
lea	ecx, [esp+54h+Dst]
push	ecx		
call	memset
mov	edx, [esp+58h+var_38]
mov	eax, [esp+58h+var_34]
push	esi
mov	[esp+5Ch+var_8], edx
push	edi
mov	edi, [esp+60h+arg_0]
lea	edx, [esp+60h+var_24]
push	edx
lea	ecx, ds:0[eax*8]
push	edi
mov	[esp+68h+var_2C], ebp
mov	[esp+68h+var_28], ebx
mov	[esp+68h+var_4], ecx
call	SECOID_SetAlgorithmID_Util
mov	esi, eax
add	esp, 1Ch
test	esi, esi
jnz	short loc_10010EE4
mov	ecx, [esp+4Ch+arg_4]
lea	eax, [esp+4Ch+Dst]
push	eax
push	offset dword_100BA140
push	ecx
push	edi
call	DER_Encode_Util
add	esp, 10h
mov	esi, eax
			
mov	edx, [esp+4Ch+var_38]
push	edx
call	PORT_Free_Util
add	esp, 4
pop	ebp
pop	ebx
pop	edi
mov	eax, esi
pop	esi
add	esp, 3Ch
retn
align 10h
public SGN_Digest
sub	esp, 0Ch
push	ebx
push	ebp
push	esi
mov	esi, [esp+18h+arg_0]
push	edi
mov	edi, [esp+1Ch+arg_8]
xor	ebp, ebp
xor	ebx, ebx
mov	[edi+4], ebp
cmp	dword ptr [esi+4], 1
jnz	short loc_10010F7E
push	800h
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_10010F37
or	esi, 0FFFFFFFFh
jmp	loc_10010FEF
mov	eax, [esp+1Ch+arg_C]
mov	ecx, [eax+8]
mov	edx, [eax+4]
mov	eax, [esp+1Ch+arg_4]
push	ecx
push	edx
push	eax
call	SGN_CreateDigestInfo_Util
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jnz	short loc_10010F5E
or	esi, 0FFFFFFFFh
jmp	loc_10010FEF
push	ebp
push	offset dword_100BA100
lea	ecx, [esp+24h+var_C]
push	ecx
push	ebx
call	DER_Encode_Util
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_10010FEF
mov	esi, [esp+1Ch+arg_0]
jmp	short loc_10010F90
mov	eax, [esp+1Ch+arg_C]
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	[esp+1Ch+var_8], edx
mov	[esp+1Ch+var_4], eax
push	esi
call	PK11_SignatureLen
add	esp, 4
test	eax, eax
jg	short loc_10010FAF
push	0FFFFE028h
call	PORT_SetError_Util
add	esp, 4
or	esi, 0FFFFFFFFh
jmp	short loc_10010FEF
push	eax
mov	[edi+8], eax
call	PORT_Alloc_Util
add	esp, 4
mov	[edi+4], eax
test	eax, eax
jnz	short loc_10010FC7
or	esi, 0FFFFFFFFh
jmp	short loc_10010FEF
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	edi
push	esi
call	PK11_Sign
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10010FEF
mov	edx, [edi+4]
push	edx
call	PORT_Free_Util
add	esp, 4
mov	dword ptr [edi+4], 0
			
push	ebp
call	SGN_DestroyDigestInfo_Util
add	esp, 4
test	ebx, ebx
jz	short loc_10011007
push	0
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
align 10h
public SEC_GetSignatureAlgorithmOidTag
			
			
			
mov	ecx, [esp+arg_0]
xor	eax, eax
dec	ecx
jz	loc_100110B8
dec	ecx
jz	short loc_10011089
sub	ecx, 4
jnz	locret_1001110B	
mov	ecx, [esp+arg_4]
cmp	ecx, 0C0h
jg	short loc_1001106C
jz	short loc_10011066
test	ecx, ecx
jz	short loc_10011060
cmp	ecx, 4
jz	short loc_10011060
cmp	ecx, 0BFh
jnz	locret_1001110B	
lea	eax, [ecx+57h]
retn
			
mov	eax, 0C9h
retn
mov	eax, 117h
retn
sub	ecx, 0C1h
jz	short loc_10011083
sub	ecx, 74h
jnz	locret_1001110B	
mov	eax, 115h
retn
mov	eax, 118h
retn
mov	ecx, [esp+arg_4]
cmp	ecx, 0BFh
jg	short loc_100110AC
jz	short loc_100110A6
test	ecx, ecx
jz	short loc_100110A0
cmp	ecx, 4
jnz	short locret_1001110B 
mov	eax, 7Dh
retn
mov	eax, 13Bh
retn
cmp	ecx, 135h
jnz	short locret_1001110B 
lea	eax, [ecx+5]
retn
mov	ecx, [esp+arg_4]
cmp	ecx, 0BFh
jg	short loc_100110EA
jz	short loc_100110E4 
cmp	ecx, 4		
ja	short locret_1001110B 
jmp	ds:off_1001110C[ecx*4] 
			
mov	eax, 11h	
retn
			
mov	eax, 13h	
retn
			
mov	eax, 14h	
retn
			
			
mov	eax, 0C2h	
retn
sub	ecx, 0C0h
jz	short loc_10011106
dec	ecx
jz	short loc_10011100
sub	ecx, 74h
jnz	short locret_1001110B 
mov	eax, 134h
retn
mov	eax, 0C4h
retn
mov	eax, 0C3h
			
retn			
dd offset loc_100110D2	
dd offset locret_1001110B
dd offset loc_100110D8
dd offset loc_100110DE
			
sub	esp, 0Ch
push	ebp
mov	ebp, [esp+10h+arg_0]
push	esi
mov	esi, eax
push	edi
push	esi
mov	[esp+1Ch+var_8], 0
call	SECKEY_PublicKeyStrength
add	esp, 4
mov	[esp+18h+var_4], eax
test	eax, eax
jz	loc_100111FC
push	eax
call	PORT_Alloc_Util
add	esp, 4
cmp	[esp+18h+var_4], 0
mov	[esp+18h+var_8], eax
jz	loc_100111FC
test	eax, eax
jz	loc_100111FC
mov	eax, [esp+18h+arg_10]
mov	edx, [esp+18h+arg_C]
push	eax
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	edx
push	esi
call	PK11_VerifyRecover
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_100111FF
test	ebp, ebp
jz	short loc_100111AA
mov	eax, [esp+18h+var_4]
mov	ecx, [esp+18h+arg_8]
mov	edx, [esp+18h+var_8]
mov	[ecx], eax
mov	eax, [esp+18h+arg_4]
pop	edi
mov	[eax], edx
pop	esi
mov	[ebx], ebp
xor	eax, eax
pop	ebp
add	esp, 0Ch
retn
lea	ecx, [esp+18h+var_C]
push	ecx
call	SGN_DecodeDigestInfo
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_100111FC
lea	edx, [esi+4]
push	edx
call	SECOID_GetAlgorithmTag_Util
add	esp, 4
mov	[ebx], eax
test	eax, eax
jnz	short loc_100111D2
or	edi, 0FFFFFFFFh
push	esi
call	SGN_DestroyDigestInfo_Util
add	esp, 4
test	edi, edi
jnz	short loc_100111FF
mov	eax, [esp+18h+var_4]
mov	ecx, [esp+18h+arg_8]
mov	edx, [esp+18h+var_8]
mov	[ecx], eax
mov	eax, [esp+18h+arg_4]
mov	[eax], edx
mov	eax, edi
pop	edi
pop	esi
pop	ebp
add	esp, 0Ch
retn
			
or	edi, 0FFFFFFFFh
			
mov	eax, [esp+18h+var_8]
test	eax, eax
jz	short loc_10011210
push	eax
call	PORT_Free_Util
add	esp, 4
mov	ecx, [esp+18h+arg_4]
mov	edx, [esp+18h+arg_8]
mov	dword ptr [ecx], 0
push	0FFFFE00Ah
mov	dword ptr [edx], 0
call	PORT_SetError_Util
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
add	esp, 0Ch
retn
align 10h
sub	esp, 0Ch
mov	ecx, [eax+9Ch]
mov	edx, [eax+98h]
mov	eax, [eax]
mov	[esp+0Ch+var_8], ecx
push	1
lea	ecx, [esp+10h+var_C]
mov	[esp+10h+var_4], edx
mov	edx, [esp+10h+arg_0]
push	ecx
push	edx
push	eax
call	_SGN_VerifyPKCS1DigestInfo
add	esp, 1Ch
retn
align 10h
			
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+8+Dst]
cmp	ecx, 7Ch
jz	short loc_100112BA
cmp	ecx, 0C8h
jz	short loc_100112B2
mov	ecx, [eax+8]
cmp	ecx, edi
jz	short loc_1001129F
push	0FFFFE009h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	eax, [eax+4]
push	ecx		
push	eax		
push	ebp		
call	memcpy
add	esp, 0Ch
pop	ebp
xor	eax, eax
pop	ebx
retn
cmp	edi, 90h
ja	short loc_1001128C
push	esi
push	edi
push	eax
call	DSAU_DecodeDerSigToLen
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100112E2
mov	eax, [esi+8]
cmp	eax, edi
jnz	short loc_100112E2
mov	ecx, [esi+4]
push	eax		
push	ecx		
push	ebp		
call	memcpy
add	esp, 0Ch
jmp	short loc_100112E5
			
or	ebx, 0FFFFFFFFh
test	esi, esi
jz	short loc_100112F4
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
pop	esi
cmp	ebx, 0FFFFFFFFh
jnz	short loc_10011307
push	0FFFFE009h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
mov	eax, ebx
pop	ebx
retn
align 10h
			
sub	esp, 0Ch
push	ebx
mov	ebx, [esp+10h+arg_4]
push	ebp
push	esi
push	edi
cmp	ebx, 113h
jg	loc_100113DF
jz	short loc_10011372
lea	eax, [ebx-0Fh]	
cmp	eax, 0BAh
ja	loc_1001155B	
movzx	eax, ds:byte_10011598[eax]
jmp	ds:off_10011574[eax*4] 
			
mov	ecx, [esp+1Ch+arg_10] 
mov	dword ptr [ecx], 1
jmp	loc_100114D1
			
mov	edx, [esp+1Ch+arg_10] 
mov	dword ptr [edx], 3
jmp	loc_100114D1
			
mov	eax, [esp+1Ch+arg_10] 
mov	dword ptr [eax], 4
jmp	loc_100114D1
mov	edx, [esp+1Ch+arg_0]
push	edx
call	SECKEY_PublicKeyStrength
add	esp, 4
cmp	eax, 1Ch
jge	short loc_100113AB
mov	eax, [esp+1Ch+arg_10]
mov	dword ptr [eax], 4
			
lea	eax, [ebx-113h]	
cmp	eax, 28h
ja	loc_1001155B	
movzx	eax, ds:byte_10011668[eax]
jmp	ds:off_10011654[eax*4] 
cmp	eax, 20h
jge	short loc_100113BC
mov	ecx, [esp+1Ch+arg_10]
mov	dword ptr [ecx], 135h
jmp	short loc_1001138E
mov	edx, [esp+1Ch+arg_10]
cmp	eax, 30h
jge	short loc_100113CD
mov	dword ptr [edx], 0BFh
jmp	short loc_1001138E
xor	ecx, ecx
cmp	eax, 40h
setnl	cl
add	ecx, 0C0h
mov	[edx], ecx
jmp	short loc_1001138E
lea	eax, [ebx-114h]	
cmp	eax, 27h
ja	loc_1001155B	
movzx	eax, ds:byte_100116B4[eax]
jmp	ds:off_10011694[eax*4] 
			
			
mov	ecx, [esp+1Ch+arg_10] 
			
mov	dword ptr [ecx], 4
jmp	loc_100114D1
			
			
mov	edx, [esp+1Ch+arg_10] 
			
mov	dword ptr [edx], 0
jmp	loc_100114D1
			
mov	eax, [esp+1Ch+arg_10] 
mov	dword ptr [eax], 135h
jmp	loc_100114D1
			
			
mov	ecx, [esp+1Ch+arg_10] 
			
mov	dword ptr [ecx], 0BFh
jmp	loc_100114D1
			
			
mov	edx, [esp+1Ch+arg_10] 
			
mov	dword ptr [edx], 0C0h
jmp	loc_100114D1
			
			
mov	eax, [esp+1Ch+arg_10] 
			
mov	dword ptr [eax], 0C1h
jmp	short loc_100114D1
			
mov	esi, [esp+1Ch+arg_8] 
test	esi, esi
jz	loc_1001155B	
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	loc_10011568
push	esi
push	offset dword_100A2A10
lea	ecx, [esp+24h+var_C]
push	ecx
push	edi
call	SEC_QuickDERDecodeItem_Util
mov	ebp, [esp+2Ch+arg_10]
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_100114A4
lea	edx, [esp+1Ch+var_C]
push	edx
call	SECOID_FindOIDTag_Util
add	esp, 4
mov	[ebp+0], eax
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
test	esi, esi
jz	short loc_100114BD
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
mov	eax, [ebp+0]
push	eax
call	HASH_GetHashTypeByOidTag
add	esp, 4
test	eax, eax
jz	loc_10011568
			
cmp	ebx, 0C9h
jg	loc_1001138E
jz	short loc_10011547 
lea	eax, [ebx-0Fh]	
cmp	eax, 0B5h
ja	short loc_1001155B 
movzx	ecx, ds:byte_100116EC[eax]
jmp	ds:off_100116DC[ecx*4] 
			
mov	edx, [esp+1Ch+arg_C] 
pop	edi
pop	esi
pop	ebp
mov	dword ptr [edx], 39h
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
			
			
mov	ecx, [esp+1Ch+arg_C] 
			
pop	edi
pop	esi
pop	ebp
mov	dword ptr [ecx], 10h
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
			
mov	edx, [esp+1Ch+arg_C] 
pop	edi
pop	esi
pop	ebp
mov	dword ptr [edx], 133h
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
			
			
mov	eax, [esp+1Ch+arg_C] 
			
pop	edi
pop	esi
pop	ebp
mov	dword ptr [eax], 7Ch
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
			
			
mov	ecx, [esp+1Ch+arg_C] 
pop	edi
pop	esi
pop	ebp
mov	dword ptr [ecx], 0C8h
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
			
push	0FFFFE006h	
call	PORT_SetError_Util
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
align 4
			
dd offset loc_10011354,	offset loc_10011363, offset loc_10011429 
dd offset loc_10011438,	offset loc_10011447, offset loc_1001155B
db	3,     0,     8,     8 
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     0
db	0,     0,     0,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     4,     4
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     8
db	8,     8,     8,     5
db	6,     7,     8,     8
db	8,     8,     4
align 4
dd offset loc_1001150B	
dd offset loc_1001151F
dd offset loc_10011533
dd offset loc_1001155B
db	0,     0,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     1,     4
db	4,     4,     4,     4
db	2,     1,     4,     4
db	4,     4,     4,     3
db	3
align 4
dd offset loc_1001141A	
dd offset loc_10011429
dd offset loc_10011438
dd offset loc_10011447
dd offset loc_100113FC
dd offset loc_1001140B
dd offset loc_1001155B
db	4,     7,     7,     7 
db	7,     7,     7,     7
db	7,     7,     7,     7
db	7,     7,     7,     7
db	7,     7,     7,     7
db	7,     5,     7,     7
db	7,     7,     7,     6
db	1,     7,     7,     7
db	7,     7,     1,     2
			
dd offset loc_1001155B	
db	0,     0,     3,     3 
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     1
db	1,     1,     1,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     2,     2
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     0
db	0,     0
align 10h
public VFY_DestroyContext
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_10011816
mov	eax, [esi+0A4h]
test	eax, eax
jz	short loc_100117DE
mov	ecx, [esi+0A8h]
mov	edx, [ecx+0Ch]
push	1
push	eax
call	edx
add	esp, 8
mov	dword ptr [esi+0A4h], 0
mov	eax, [esi+4]
test	eax, eax
jz	short loc_100117EE
push	eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, [esi+9Ch]
test	eax, eax
jz	short loc_10011801
push	eax
call	PORT_Free_Util
add	esp, 4
cmp	[esp+4+arg_4], 0
jz	short loc_10011816
push	0B4h
push	esi
call	PORT_ZFree_Util
add	esp, 8
			
pop	esi
retn
align 10h
public VFY_Begin
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+0A4h]
test	eax, eax
jz	short loc_1001184A
mov	ecx, [esi+0A8h]
mov	edx, [ecx+0Ch]
push	1
push	eax
call	edx
add	esp, 8
mov	dword ptr [esi+0A4h], 0
mov	eax, [esi]
push	eax
call	HASH_GetHashObjectByOidTag
add	esp, 4
mov	[esi+0A8h], eax
test	eax, eax
jnz	short loc_10011864
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [eax+4]
call	ecx
mov	[esi+0A4h], eax
test	eax, eax
jz	short loc_1001185F
mov	edx, [esi+0A8h]
push	eax
mov	eax, [edx+10h]
call	eax
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
public VFY_Update
mov	ecx, [esp+arg_0]
mov	eax, [ecx+0A4h]
test	eax, eax
jnz	short loc_100118AF
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	edx, [esp+arg_8]
mov	ecx, [ecx+0A8h]
push	edx
mov	edx, [esp+4+arg_4]
push	edx
push	eax
mov	eax, [ecx+14h]
call	eax
add	esp, 0Ch
xor	eax, eax
retn
align 10h
public VFY_EndWithSignature
			
			
sub	esp, 70h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+70h+var_4], eax
push	ebx
mov	ebx, [esp+74h+arg_4]
push	esi
mov	esi, [esp+78h+arg_0]
cmp	dword ptr [esi+0B0h], 0
jnz	short loc_10011916
test	ebx, ebx
jnz	short loc_10011916
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
			
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+70h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 70h
retn
			
mov	eax, [esi+0A4h]
test	eax, eax
jz	short loc_100118F5
mov	ecx, [esi+0A8h]
push	40h
lea	edx, [esp+7Ch+var_70]
push	edx
lea	edx, [esp+80h+var_44]
push	edx
push	eax
mov	eax, [ecx+18h]
call	eax
mov	eax, [esi+4]
mov	ecx, [eax+4]
add	esp, 10h
dec	ecx
jz	loc_100119EC
dec	ecx
jz	short loc_10011950
sub	ecx, 4
jnz	short loc_10011989
lea	ecx, [esi+8]
push	eax
mov	[esp+7Ch+Dst], ecx
call	SECKEY_SignatureLen
add	esp, 4
mov	[esp+78h+var_64], eax
test	eax, eax
jz	short loc_10011902
test	ebx, ebx
jz	short loc_100119AA
mov	edx, [esp+78h+Dst]
mov	ecx, [esi+0ACh]
push	edi
mov	edi, eax
push	edx		
mov	eax, ebx
call	sub_10011270
add	esp, 4
pop	edi
test	eax, eax
jz	short loc_100119AA
			
push	0FFFFE00Ah
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+70h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 70h
retn
			
mov	edx, [esi+0A0h]
mov	ecx, [esp+78h+var_70]
lea	eax, [esp+78h+var_44]
push	edx
mov	edx, [esi+4]
mov	[esp+7Ch+var_5C], eax
lea	eax, [esp+7Ch+var_60]
mov	[esp+7Ch+var_58], ecx
push	eax
lea	ecx, [esp+80h+var_6C]
push	ecx
push	edx
call	PK11_Verify
add	esp, 10h
test	eax, eax
jnz	short loc_10011989
pop	esi
pop	ebx
mov	ecx, [esp+70h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 70h
retn
mov	edx, [esp+78h+var_70]
lea	ecx, [esp+78h+var_44]
mov	[esp+78h+var_50], ecx
mov	[esp+78h+var_4C], edx
test	ebx, ebx
jz	short loc_10011A2D
mov	ecx, [esi+0A0h]
push	ecx
push	ebx
lea	edx, [esi+98h]
push	edx
mov	edx, [esi]
lea	ecx, [esi+9Ch]
push	ecx
push	edx
lea	ebx, [esp+8Ch+var_48]
call	sub_10011120
add	esp, 14h
test	eax, eax
jnz	loc_10011902
lea	eax, [esp+78h+var_54]
push	eax
mov	eax, esi
call	sub_10011240
mov	ecx, [esp+7Ch+var_4]
add	esp, 4
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 70h
retn
align 10h
public VFY_End
mov	eax, [esp+arg_0]
push	0
push	eax
call	VFY_EndWithSignature
add	esp, 8
retn
			
push	ecx
push	ebp
mov	ebp, [esp+8+arg_0]
push	edi
push	ebp
mov	edi, eax
call	sub_1000F380
mov	ecx, eax
mov	eax, [edi+4]
add	esp, 4
mov	[esp+0Ch+var_4], ecx
cmp	eax, ecx
jz	short loc_10011A9C
cmp	eax, 1
jnz	short loc_10011A89
cmp	ecx, 7
jz	short loc_10011A9C
push	0FFFFE02Eh
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	ebp
pop	ecx
retn
			
push	ebx
push	0B4h
call	PORT_ZAlloc_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	loc_10011BB6
mov	eax, [esp+10h+arg_C]
mov	edx, [esp+10h+arg_4]
xor	ecx, ecx
test	esi, esi
setnz	cl
push	edi
mov	[ebx+0A0h], eax
mov	[ebx+0ACh], ebp
mov	[ebx], edx
mov	[ebx+0B0h], ecx
call	SECKEY_CopyPublicKey
add	esp, 4
lea	ecx, [ebx+9Ch]
mov	[ebx+4], eax
mov	dword ptr [ecx], 0
test	esi, esi
jz	short loc_10011B51
mov	edx, [esp+10h+var_4]
dec	edx
jz	short loc_10011B32
dec	edx
jz	short loc_10011B11
sub	edx, 4
jz	short loc_10011B11
push	0FFFFE030h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10011B60
			
push	edi
call	SECKEY_SignatureLen
add	esp, 4
test	eax, eax
jz	short loc_10011B60
lea	ecx, [ebx+8]
push	ecx		
mov	edi, eax
mov	eax, esi
mov	ecx, ebp
call	sub_10011270
add	esp, 4
jmp	short loc_10011B4D
mov	edx, [esp+10h+arg_C]
push	edx
push	esi
lea	edx, [ebx+98h]
push	edx
push	ecx
mov	ecx, [esp+20h+arg_4]
push	ecx
call	sub_10011120
add	esp, 14h
test	eax, eax
jnz	short loc_10011B60
mov	edx, [ebx]
push	edx
call	HASH_GetHashTypeByOidTag
add	esp, 4
test	eax, eax
jnz	short loc_10011BBD
			
mov	eax, [ebx+0A4h]
test	eax, eax
jz	short loc_10011B85
mov	ecx, [ebx+0A8h]
mov	edx, [ecx+0Ch]
push	1
push	eax
call	edx
add	esp, 8
mov	dword ptr [ebx+0A4h], 0
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_10011B95
push	eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, [ebx+9Ch]
test	eax, eax
jz	short loc_10011BA8
push	eax
call	PORT_Free_Util
add	esp, 4
push	0B4h
push	ebx
call	PORT_ZFree_Util
add	esp, 8
pop	ebx
pop	edi
xor	eax, eax
pop	ebp
pop	ecx
retn
mov	eax, [esp+10h+arg_8]
test	eax, eax
jz	short loc_10011BC9
mov	ecx, [ebx]
mov	[eax], ecx
mov	eax, ebx
pop	ebx
pop	edi
pop	ebp
pop	ecx
retn
public VFY_CreateContext
mov	edx, [esp+arg_8]
sub	esp, 8
push	edi
mov	edi, [esp+0Ch+arg_0]
lea	eax, [esp+0Ch+var_8]
push	eax
lea	ecx, [esp+10h+var_4]
push	ecx
push	0
push	edx
push	edi
call	sub_10011310
add	esp, 14h
test	eax, eax
jz	short loc_10011BFD
xor	eax, eax
pop	edi
add	esp, 8
retn
mov	eax, [esp+0Ch+arg_C]
mov	ecx, [esp+0Ch+var_8]
mov	edx, [esp+0Ch+var_4]
push	esi
mov	esi, [esp+10h+arg_4]
push	eax
push	0
push	ecx
push	edx
mov	eax, edi
call	sub_10011A60
add	esp, 10h
pop	esi
pop	edi
add	esp, 8
retn
align 10h
public VFY_CreateContextDirect
mov	eax, [esp+arg_14]
mov	ecx, [esp+arg_10]
mov	edx, [esp+arg_C]
push	esi
mov	esi, [esp+4+arg_4]
push	eax
mov	eax, [esp+8+arg_8]
push	ecx
push	edx
push	eax
mov	eax, [esp+14h+arg_0]
call	sub_10011A60
add	esp, 10h
pop	esi
retn
align 10h
public VFY_CreateContextWithAlgorithmID
push	ecx
push	edi
lea	eax, [esp+8+arg_8]
push	eax
mov	eax, [esp+0Ch+arg_8]
lea	ecx, [esp+0Ch+var_4]
push	ecx
lea	edx, [eax+0Ch]
push	edx
push	eax
call	SECOID_GetAlgorithmTag_Util
mov	edi, [esp+18h+arg_0]
add	esp, 4
push	eax
push	edi
call	sub_10011310
add	esp, 14h
test	eax, eax
jz	short loc_10011C94
xor	eax, eax
pop	edi
pop	ecx
retn
mov	eax, [esp+8+arg_10]
mov	ecx, [esp+8+arg_C]
mov	edx, [esp+8+arg_8]
push	esi
mov	esi, [esp+0Ch+arg_4]
push	eax
mov	eax, [esp+10h+var_4]
push	ecx
push	edx
push	eax
mov	eax, edi
call	sub_10011A60
add	esp, 10h
pop	esi
pop	edi
pop	ecx
retn
align 10h
			
sub	esp, 18h
push	ebx
push	ebp
mov	ebp, [esp+20h+arg_0]
push	esi
mov	esi, [esp+24h+arg_8]
push	edi
mov	edi, [esp+28h+arg_4]
push	eax
push	0
push	ecx
push	edx
mov	eax, edi
or	ebx, 0FFFFFFFFh
call	sub_10011A60
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	loc_10011DC7
mov	edi, [edi+4]
dec	edi
jz	short loc_10011D48
dec	edi
jz	short loc_10011CFD
sub	edi, 4
jnz	short loc_10011D71
lea	eax, [esi+8]
mov	[esp+28h+var_14], eax
mov	ecx, [esi+4]
push	ecx
call	SECKEY_SignatureLen
add	esp, 4
mov	[esp+28h+var_10], eax
test	eax, eax
jz	short loc_10011D71
mov	edx, [esi+0A0h]
mov	ecx, [esi+4]
push	edx
push	ebp
lea	eax, [esp+30h+var_18]
push	eax
push	ecx
call	PK11_Verify
add	esp, 10h
test	eax, eax
jz	short loc_10011D44
push	0FFFFE00Ah
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10011D71
xor	ebx, ebx
jmp	short loc_10011D71
mov	edx, [esi+9Ch]
mov	eax, [esi+98h]
push	1
lea	ecx, [esp+2Ch+var_C]
push	ecx
mov	[esp+30h+var_8], edx
mov	edx, [esi]
push	ebp
push	edx
mov	[esp+38h+var_4], eax
call	_SGN_VerifyPKCS1DigestInfo
add	esp, 10h
mov	ebx, eax
			
mov	eax, [esi+0A4h]
test	eax, eax
jz	short loc_10011D96
mov	ecx, [esi+0A8h]
mov	edx, [ecx+0Ch]
push	1
push	eax
call	edx
add	esp, 8
mov	dword ptr [esi+0A4h], 0
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10011DA6
push	eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, [esi+9Ch]
test	eax, eax
jz	short loc_10011DB9
push	eax
call	PORT_Free_Util
add	esp, 4
push	0B4h
push	esi
call	PORT_ZFree_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
add	esp, 18h
retn
align 10h
public VFY_VerifyDigestDirect
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	eax
mov	eax, [esp+4+arg_14]
push	ecx
mov	ecx, [esp+8+arg_10]
push	edx
mov	edx, [esp+0Ch+arg_C]
call	sub_10011CC0
add	esp, 0Ch
retn
align 10h
public VFY_VerifyDigest
mov	edx, [esp+arg_C]
sub	esp, 8
push	esi
mov	esi, [esp+0Ch+arg_4]
lea	eax, [esp+0Ch+var_8]
push	eax
lea	ecx, [esp+10h+var_4]
push	ecx
push	0
push	edx
push	esi
call	sub_10011310
add	esp, 14h
test	eax, eax
jz	short loc_10011E3E
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
mov	eax, [esp+0Ch+arg_8]
mov	ecx, [esp+0Ch+arg_0]
mov	edx, [esp+0Ch+var_4]
push	eax
mov	eax, [esp+10h+arg_10]
push	esi
push	ecx
mov	ecx, [esp+18h+var_8]
call	sub_10011CC0
add	esp, 0Ch
pop	esi
add	esp, 8
retn
align 10h
public VFY_VerifyDigestWithAlgorithmID
push	ecx
push	esi
lea	eax, [esp+8+arg_C]
push	eax
mov	eax, [esp+0Ch+arg_C]
lea	ecx, [esp+0Ch+var_4]
push	ecx
lea	edx, [eax+0Ch]
push	edx
push	eax
call	SECOID_GetAlgorithmTag_Util
mov	esi, [esp+18h+arg_4]
add	esp, 4
push	eax
push	esi
call	sub_10011310
add	esp, 14h
test	eax, eax
jnz	short loc_10011EE1
mov	eax, [esp+8+arg_10]
mov	ecx, [esp+8+arg_C]
test	eax, eax
jz	short loc_10011EC6
test	ecx, ecx
jz	short loc_10011EC6
cmp	eax, ecx
jz	short loc_10011EC6
push	0FFFFE00Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
pop	ecx
retn
			
mov	eax, [esp+8+arg_8]
mov	edx, [esp+8+arg_0]
push	eax
mov	eax, [esp+0Ch+arg_14]
push	esi
push	edx
mov	edx, [esp+14h+var_4]
call	sub_10011CC0
add	esp, 0Ch
pop	esi
pop	ecx
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_C]
push	eax
mov	eax, [esp+8+arg_10]
push	ecx
push	edx
push	eax
mov	eax, [esp+14h+arg_8]
call	sub_10011A60
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_10011F14
or	eax, 0FFFFFFFFh
pop	esi
retn
push	edi
push	esi
call	VFY_Begin
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_10011F63
mov	eax, [esi+0A4h]
test	eax, eax
jnz	short loc_10011F40
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	edi, 0FFFFFFFFh
jmp	short loc_10011F63
mov	edx, [esp+8+arg_4]
mov	ecx, [esi+0A8h]
push	edx
mov	edx, [esp+0Ch+arg_0]
push	edx
push	eax
mov	eax, [ecx+14h]
call	eax
push	0
push	esi
call	VFY_EndWithSignature
add	esp, 14h
mov	edi, eax
			
mov	eax, [esi+0A4h]
test	eax, eax
jz	short loc_10011F88
mov	ecx, [esi+0A8h]
mov	edx, [ecx+0Ch]
push	1
push	eax
call	edx
add	esp, 8
mov	dword ptr [esi+0A4h], 0
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10011F98
push	eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, [esi+9Ch]
test	eax, eax
jz	short loc_10011FAB
push	eax
call	PORT_Free_Util
add	esp, 4
push	0B4h
push	esi
call	PORT_ZFree_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public VFY_VerifyDataDirect
mov	eax, [esp+arg_10]
mov	ecx, [esp+arg_C]
mov	edx, [esp+arg_8]
push	eax
mov	eax, [esp+4+arg_4]
push	ecx
mov	ecx, [esp+8+arg_0]
push	edx
mov	edx, [esp+0Ch+arg_14]
push	eax
mov	eax, [esp+10h+arg_1C]
push	ecx
mov	ecx, [esp+14h+arg_18]
call	sub_10011EF0
add	esp, 14h
retn
align 10h
public VFY_VerifyData
mov	edx, [esp+arg_10]
sub	esp, 8
push	esi
mov	esi, [esp+0Ch+arg_8]
lea	eax, [esp+0Ch+var_4]
push	eax
lea	ecx, [esp+10h+var_8]
push	ecx
push	0
push	edx
push	esi
call	sub_10011310
add	esp, 14h
test	eax, eax
jnz	short loc_1001203D
mov	eax, [esp+0Ch+var_8]
mov	ecx, [esp+0Ch+arg_C]
mov	edx, [esp+0Ch+arg_4]
push	eax
mov	eax, [esp+10h+arg_0]
push	ecx
push	esi
push	edx
mov	edx, [esp+1Ch+var_4]
push	eax
mov	eax, [esp+20h+arg_14]
xor	ecx, ecx
call	sub_10011EF0
add	esp, 14h
pop	esi
add	esp, 8
retn
align 10h
public VFY_VerifyDataWithAlgorithmID
			
push	ecx
push	esi
mov	esi, [esp+8+arg_10]
push	esi
call	SECOID_GetAlgorithmTag_Util
lea	ecx, [esp+0Ch+var_4]
push	ecx
lea	edx, [esp+10h+arg_10]
push	edx
add	esi, 0Ch
push	esi
mov	esi, [esp+18h+arg_8]
push	eax
push	esi
call	sub_10011310
add	esp, 18h
test	eax, eax
jnz	short loc_100120A5
mov	eax, [esp+8+arg_10]
mov	ecx, [esp+8+arg_C]
mov	edx, [esp+8+arg_4]
push	eax
mov	eax, [esp+0Ch+arg_0]
push	ecx
mov	ecx, [esp+10h+arg_14]
push	esi
push	edx
mov	edx, [esp+18h+var_4]
push	eax
mov	eax, [esp+1Ch+arg_18]
call	sub_10011EF0
add	esp, 14h
pop	esi
pop	ecx
retn
align 10h
			
mov	ecx, [esp+arg_4]
mov	eax, [ecx+4]
push	ebx
mov	ebx, [esp+4+arg_0]
push	esi
mov	esi, [ecx+8]
push	edi
mov	edi, [ebx+4]
test	esi, esi
jz	short loc_100120E3
cmp	byte ptr [eax],	0
jnz	short loc_100120DF
inc	eax
dec	esi
jnz	short loc_100120C8
mov	byte ptr [edi],	0
pop	edi
pop	esi
mov	dword ptr [ebx+8], 1
pop	ebx
retn
test	esi, esi
jnz	short loc_100120F1
mov	byte ptr [edi],	0
pop	edi
pop	esi
mov	dword ptr [ebx+8], 1
pop	ebx
retn
test	byte ptr [eax],	80h
jz	short loc_100120FA
mov	byte ptr [edi],	0
inc	edi
push	esi		
push	eax		
push	edi		
call	memcpy
sub	esi, [ebx+4]
add	esp, 0Ch
add	esi, edi
pop	edi
mov	[ebx+8], esi
pop	esi
pop	ebx
retn
align 10h
			
mov	ecx, [esp+arg_0]
mov	eax, [esp+arg_4]
push	ebx
mov	ebx, [eax+8]
push	ebp
mov	ebp, [ecx+4]
mov	ecx, [ecx+8]
push	esi
mov	esi, ecx
sub	esi, ebx
push	edi
mov	edi, [eax+4]
test	esi, esi
jle	short loc_1001215D
push	esi		
push	0		
push	ebp		
call	memset
push	ebx		
push	edi		
add	esi, ebp
push	esi		
call	memcpy
add	esp, 18h
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
jns	short loc_10012173
mov	eax, ecx
sub	eax, edi
sub	eax, ebx
add	eax, edi
mov	dl, [edi]
inc	edi
inc	eax
test	dl, dl
jnz	short loc_10012185
test	eax, eax
js	short loc_10012167
push	ecx		
push	edi		
push	ebp		
call	memcpy
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
push	0FFFFE89Dh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
			
sub	esp, 24h
push	ebx
push	ebp
mov	ebp, [esp+2Ch+arg_4]
push	esi
mov	esi, [ebp+8]
shr	esi, 1
push	edi
lea	ebx, [esi+1]
push	ebx
call	PORT_Alloc_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_100121DA
push	ebx
call	PORT_ZAlloc_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_100121E5
push	edi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 24h
retn
mov	ebp, [ebp+4]
xor	eax, eax
mov	[esp+34h+var_18], eax
mov	[esp+34h+var_14], eax
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_C], eax
mov	[esp+34h+var_8], eax
mov	[esp+34h+var_4], eax
mov	eax, 4
mov	ecx, 0Ah
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_4], eax
lea	eax, [esp+34h+var_24]
mov	[esp+34h+var_18], ecx
mov	[esp+34h+var_C], ecx
push	eax
lea	ecx, [esp+38h+var_18]
push	ecx
mov	[esp+3Ch+var_14], edi
mov	[esp+3Ch+var_8], ebx
mov	[esp+3Ch+var_20], ebp
mov	[esp+3Ch+var_1C], esi
call	sub_100120B0
lea	edx, [esp+3Ch+var_24]
push	edx
lea	eax, [esp+40h+var_C]
add	ebp, esi
push	eax
mov	[esp+44h+var_20], ebp
call	sub_100120B0
mov	edx, [esp+44h+arg_0]
push	offset dword_100A2A50
lea	ecx, [esp+48h+var_18]
push	ecx
push	edx
push	0
call	SEC_ASN1EncodeItem_Util
push	edi
mov	esi, eax
call	PORT_Free_Util
push	ebx
call	PORT_Free_Util
add	esp, 28h
mov	eax, esi
neg	eax
pop	edi
sbb	eax, eax
pop	esi
neg	eax
pop	ebp
dec	eax
pop	ebx
add	esp, 24h
retn
align 10h
			
sub	esp, 24h
xor	eax, eax
push	esi
push	0Ch
mov	[esp+2Ch+var_18], eax
mov	[esp+2Ch+var_14], eax
mov	[esp+2Ch+var_10], eax
mov	[esp+2Ch+var_C], eax
mov	[esp+2Ch+var_8], eax
mov	[esp+2Ch+var_4], eax
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_1001234A
lea	eax, [edi+edi]
push	eax
mov	[esi+8], eax
call	PORT_Alloc_Util
add	esp, 4
mov	[esi+4], eax
test	eax, eax
jz	short loc_1001233D
mov	eax, 0Ah
mov	[esp+28h+var_18], eax
mov	[esp+28h+var_C], eax
mov	eax, [esp+28h+arg_0]
push	eax
push	offset dword_100A2A50
lea	ecx, [esp+30h+var_18]
push	ecx
push	0
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1001233D
mov	edx, [esi+4]
lea	eax, [esp+28h+var_18]
push	eax
lea	ecx, [esp+2Ch+var_24]
push	ecx
mov	[esp+30h+var_20], edx
mov	[esp+30h+var_1C], edi
call	sub_10012120
add	esp, 8
test	eax, eax
jnz	short loc_1001233D
add	[esp+28h+var_20], edi
lea	edx, [esp+28h+var_C]
push	edx
lea	eax, [esp+2Ch+var_24]
push	eax
call	sub_10012120
add	esp, 8
test	eax, eax
jz	short loc_1001234A
			
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
xor	esi, esi
			
mov	eax, [esp+28h+var_14]
test	eax, eax
jz	short loc_1001235B
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+28h+var_8]
test	eax, eax
jz	short loc_1001236C
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
add	esp, 24h
retn
align 10h
public DSAU_EncodeDerSig
mov	eax, [esp+arg_4]
cmp	dword ptr [eax+8], 28h
jz	short loc_1001239B
push	0FFFFE89Dh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	[esp+arg_4], eax
jmp	sub_100121A0
align 10h
public DSAU_EncodeDerSigWithLen
			
mov	ecx, [esp+arg_4]
mov	eax, [ecx+8]
cmp	eax, [esp+arg_8]
jnz	short loc_100123D0
test	al, 1
jnz	short loc_100123D0
mov	eax, [esp+arg_0]
push	ecx
push	eax
call	sub_100121A0
add	esp, 8
retn
			
push	0FFFFE89Dh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
public DSAU_DecodeDerSig
mov	eax, [esp+arg_0]
push	edi
push	eax
mov	edi, 14h
call	sub_10012290
add	esp, 4
pop	edi
retn
align 10h
public DSAU_DecodeDerSigToLen
			
mov	eax, [esp+arg_0]
push	edi
mov	edi, [esp+4+arg_4]
shr	edi, 1
push	eax
call	sub_10012290
add	esp, 4
pop	edi
retn
align 10h
push	esi
mov	esi, [esp+4+arg_4]
xor	eax, eax
test	esi, esi
jz	short loc_10012465
mov	eax, [esp+4+arg_0]
push	14h
push	eax
call	sub_100504B0
add	esp, 8
test	eax, eax
jz	short loc_10012465
mov	ecx, [esp+4+arg_8]
mov	edx, [esp+4+arg_C]
mov	[eax+4], esi
mov	[eax], ecx
mov	dword ptr [eax+10h], 0
mov	[eax+0Ch], edx
			
pop	esi
retn
align 10h
			
cmp	[esp+arg_8], 0
jnz	short loc_1001247A
xor	eax, eax
retn
mov	eax, [esp+arg_4]
push	esi
push	14h
push	eax
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10012492
pop	esi
retn
push	edi
mov	edi, [esp+8+arg_0]
mov	ecx, [edi+44h]
push	ecx
call	sub_10035690
add	esp, 4
mov	[esi+4], eax
test	eax, eax
jnz	short loc_100124B8
push	esi
call	sub_10050550
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
retn
mov	[esi+8], edi
pop	edi
mov	dword ptr [esi+0Ch], 1
mov	dword ptr [esi], 0
mov	dword ptr [esi+10h], 0
mov	eax, esi
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
xor	eax, eax
test	esi, esi
jz	short loc_1001250C
cmp	[esi+0Ch], eax
jz	short loc_10012503
mov	eax, [esi+4]
mov	ecx, [esi+8]
mov	edx, [ecx+44h]
push	eax
push	edx
call	sub_10035750
add	esp, 8
push	esi
call	sub_10050550
add	esp, 4
pop	esi
retn
align 10h
push	ebx
push	edi
mov	edi, eax
call	sub_100507B0
mov	ebx, eax
test	ebx, ebx
jnz	short loc_10012522
pop	edi
pop	ebx
retn
push	esi
push	48h
push	ebx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10012543
push	ebx
call	sub_10050840
add	esp, 4
pop	esi
pop	edi
xor	eax, eax
pop	ebx
retn
mov	dword ptr [esi+8], 1
call	ds:PR_NewLock
mov	edx, [esp+0Ch+arg_0]
mov	[esi+4], eax
mov	[esi], ebx
mov	[esi+44h], edi
mov	eax, [edi]
mov	[esi+40h], eax
mov	ecx, [edi+40h]
mov	[esi+1Ch], ecx
mov	eax, [edx+4]
push	eax		
lea	ecx, [edi+0B8h]
push	ecx		
call	sub_10050D50
add	esp, 8
mov	[esi+0Ch], eax
cmp	dword ptr [edi+30h], 0
jz	short loc_1001258E
xor	edi, edi
mov	[esi+3Ch], edi
mov	eax, esi
pop	esi
pop	edi
pop	ebx
retn
mov	edi, [edi+3Ch]
mov	[esi+3Ch], edi
mov	eax, esi
pop	esi
pop	edi
pop	ebx
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_4]
cmp	dword ptr [edi+18h], 0
jz	short loc_100125BC
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
retn
push	ebp
call	sub_100507B0
mov	ebp, eax
test	ebp, ebp
jnz	short loc_100125CB
pop	ebp
pop	edi
retn
push	esi
push	38h
push	ebp
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100125F1
mov	dword ptr [esi+8], 1
call	ds:PR_NewLock
mov	[esi+4], eax
test	eax, eax
jnz	short loc_10012600
push	ebp
call	sub_10050840
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	edi
retn
mov	[esi], ebp
mov	[esi+34h], edi
mov	eax, [edi]
mov	[esi+20h], eax
mov	ecx, [edi+2Ch]
mov	edx, [edi+3Ch]
mov	eax, [edi+38h]
push	ebx
mov	ebx, [esp+10h+arg_0]
push	ecx
mov	ecx, [ebx+4]
push	edx
push	eax
push	ecx
call	sub_10012430
push	edi
mov	[esi+24h], eax
call	PK11_IsInternal
add	esp, 14h
test	eax, eax
jnz	short loc_10012657
push	edi
call	PK11_IsHW
add	esp, 4
test	eax, eax
jz	short loc_10012657
push	1
push	1
push	1
push	esi
call	sub_1004F590
add	esp, 10h
mov	[esi+30h], eax
test	eax, eax
jz	short loc_1001267F
			
mov	[esi+28h], ebx
mov	edx, [ebx+4]
push	edx		
lea	eax, [edi+0F9h]
push	eax		
call	sub_10050D50
mov	[esi+0Ch], eax
push	ebx
mov	eax, edi
call	sub_10012510
add	esp, 0Ch
mov	[esi+14h], eax
test	eax, eax
jnz	short loc_10012699
mov	ecx, [esi+4]
push	ecx
call	ds:PR_DestroyLock
push	ebp
call	sub_10050840
add	esp, 8
pop	ebx
pop	esi
pop	ebp
xor	eax, eax
pop	edi
retn
mov	[eax+18h], esi
mov	eax, [esi+24h]
test	eax, eax
jz	short loc_100126A9
mov	edx, [esi+14h]
mov	[eax+8], edx
pop	ebx
mov	eax, esi
pop	esi
pop	ebp
pop	edi
retn
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_100126D1
mov	eax, [esi]
mov	ecx, [esi+34h]
push	eax		
add	ecx, 0F9h
push	ecx		
call	sub_10050D50
add	esp, 8
mov	[esi+0Ch], eax
pop	esi
retn
align 10h
mov	eax, [esp+arg_0]
mov	ecx, [eax+44h]
mov	eax, [ecx+0Ch]
retn
align 10h
mov	eax, [esp+arg_0]
mov	ecx, [eax+44h]
mov	[esp+arg_0], ecx
jmp	PK11_IsFriendly
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_1001270D
xor	eax, eax
pop	edi
retn
mov	eax, [edi+34h]
push	ebx
mov	ebx, [eax+2Ch]
push	ebp
mov	ebp, [eax+3Ch]
push	esi
mov	esi, [eax+38h]
mov	eax, [edi+14h]
mov	ecx, [eax]
xor	eax, eax
test	esi, esi
jz	short loc_10012745
push	14h
push	ecx
call	sub_100504B0
add	esp, 8
test	eax, eax
jz	short loc_10012745
mov	[eax+4], esi
mov	[eax], ebp
mov	dword ptr [eax+10h], 0
mov	[eax+0Ch], ebx
			
mov	[edi+24h], eax
neg	eax
pop	esi
sbb	eax, eax
pop	ebp
neg	eax
pop	ebx
dec	eax
pop	edi
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+18h]
mov	ecx, [esi+44h]
push	edi
xor	edi, edi
test	eax, eax
jz	short loc_1001277F
mov	eax, [eax+0Ch]
cmp	byte ptr [eax],	0
jnz	short loc_1001277F
mov	edi, 1
			
push	0
push	ecx
call	sub_10036D20
add	esp, 8
test	eax, eax
jz	short loc_10012794
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
test	edi, edi
jz	short loc_100127A8
mov	eax, [esi+18h]
mov	ecx, [eax+28h]
push	eax
push	ecx
call	sub_100487C0
add	esp, 8
mov	edx, [esi+18h]
pop	edi
pop	esi
mov	[esp+arg_0], edx
jmp	sub_10012700
align 10h
mov	eax, [esp+arg_0]
mov	eax, [eax+34h]
push	eax
call	SECKEY_GetPublicKeyType
mov	eax, [eax+60h]
add	esp, 4
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	eax, [eax+44h]
cmp	dword ptr [eax+24h], 0
jnz	short loc_100127F3
mov	eax, 1
retn
push	0
push	eax
call	PK11_IsLoggedIn
add	esp, 8
retn
align 10h
			
mov	eax, [esp+arg_0]
push	eax
mov	eax, [eax+28h]
push	eax
call	sub_10047C80
add	esp, 8
retn
align 10h
			
mov	dword ptr [esi+4], 0
mov	eax, [edi+8]
push	eax
push	esi
push	ecx
call	SECITEM_AllocItem_Util
mov	eax, [esi+4]
add	esp, 0Ch
test	eax, eax
jnz	short loc_10012842
mov	eax, 2
retn
mov	edx, [esi+8]
mov	ecx, [edi+4]
push	edx		
push	ecx		
push	eax		
call	memcpy
add	esp, 0Ch
xor	eax, eax
retn
align 10h
sub	esp, 0Ch
push	eax
push	0
push	0
call	NSS_Get_SEC_ObjectIDTemplate_Util
mov	edx, [esp+18h+arg_0]
add	esp, 8
push	eax
lea	ecx, [esp+14h+var_C]
push	ecx
push	edx
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_10012982	
lea	eax, [esp+0Ch+var_C]
push	eax
call	SECOID_FindOIDTag_Util
add	eax, 0FFFFFF36h
add	esp, 4
cmp	eax, 39h	
ja	loc_10012982	
movzx	ecx, ds:byte_100129E8[eax]
jmp	ds:off_10012988[ecx*4] 
			
mov	eax, 1Dh	
add	esp, 0Ch
retn
			
mov	eax, 1Fh	
add	esp, 0Ch
retn
			
mov	eax, 21h	
add	esp, 0Ch
retn
			
mov	eax, 23h	
add	esp, 0Ch
retn
			
mov	eax, 29h	
add	esp, 0Ch
retn
			
mov	eax, 2Bh	
add	esp, 0Ch
retn
			
mov	eax, 2Dh	
add	esp, 0Ch
retn
			
mov	eax, 31h	
add	esp, 0Ch
retn
			
mov	eax, 33h	
add	esp, 0Ch
retn
			
mov	eax, 35h	
add	esp, 0Ch
retn
			
mov	eax, 39h	
add	esp, 0Ch
retn
			
mov	eax, 3Dh	
add	esp, 0Ch
retn
			
mov	eax, 41h	
add	esp, 0Ch
retn
			
mov	eax, 45h	
add	esp, 0Ch
retn
			
mov	eax, 49h	
add	esp, 0Ch
retn
			
mov	eax, 4Dh	
add	esp, 0Ch
retn
			
mov	eax, 5Bh	
add	esp, 0Ch
retn
			
mov	eax, 5Dh	
add	esp, 0Ch
retn
			
mov	eax, 61h	
add	esp, 0Ch
retn
			
mov	eax, 69h	
add	esp, 0Ch
retn
			
mov	eax, 6Dh	
add	esp, 0Ch
retn
			
mov	eax, 85h	
add	esp, 0Ch
retn
			
mov	eax, 91h	
add	esp, 0Ch
retn
			
xor	eax, eax	
add	esp, 0Ch
retn
			
dd offset loc_100128B3,	offset loc_100128C5, offset loc_100128D7 
dd offset loc_1001290D,	offset loc_10012955, offset loc_10012970
dd offset loc_100128E0,	offset loc_100128E9, offset loc_10012904
dd offset loc_10012928,	offset loc_1001293A, offset loc_10012943
dd offset loc_1001294C,	offset loc_10012967, offset loc_100128BC
dd offset loc_100128CE,	offset loc_100128FB, offset loc_10012931
dd offset loc_1001295E,	offset loc_10012979, offset loc_10012982
db	1,     1,     2,     3 
db	3,     4,     4,     5
db	5,     5,     0,     6
db	6,     2,     7,     8
db	9,     9,     9,   0Ah
db	0,     0,     0,   17h
db    17h,   0Bh,     1,     1
db	1,   17h,   17h,   0Ch
db    0Dh,   0Eh,   0Fh,   10h
db    11h,   11h,   12h,   12h
db	9,     9,     9,   13h
db    13h,     1,     1,     1
db    14h,   14h,   15h,   15h
db    16h,   16h
align 10h
			
sub	esp, 0Ch
push	ebx
mov	ebx, [esp+10h+arg_0]
push	esi
push	edi
mov	edi, ecx
cmp	dword ptr [edi+8], 0
mov	esi, eax
jnz	short loc_10012A50
pop	edi
pop	esi
mov	eax, 13h
pop	ebx
add	esp, 0Ch
retn
mov	eax, [esp+18h+arg_4]
push	ebp
push	ebx
call	sub_10012860
mov	ebp, eax
add	esp, 4
test	ebp, ebp
js	loc_10012B46
mov	eax, [edi+4]
mov	cl, [eax]
cmp	cl, 4
jnz	loc_10012B46
cmp	[edi+8], ebp
jz	loc_10012B37
cmp	cl, cl
jnz	loc_10012B46
lea	ecx, [esp+1Ch+var_C]
push	ecx
mov	[esp+20h+var_8], eax
mov	eax, [edi+8]
push	0
push	0
mov	[esp+28h+var_4], eax
call	NSS_Get_SEC_OctetStringTemplate_Util
add	esp, 8
push	eax
push	esi
push	ebx
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	ebp, ebp
jz	short loc_10012ACD
test	eax, eax
jnz	loc_10012B46
cmp	[esi+8], ebp
jnz	loc_10012B46
			
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
mov	edx, [esp+1Ch+var_4]
test	eax, eax
jnz	short loc_10012B32
test	byte ptr [esi+8], 1
jz	short loc_10012B32
mov	ebp, [esi+4]
cmp	byte ptr [ebp+0], 4
jnz	short loc_10012B32
mov	ecx, [esi+8]
mov	eax, edx
sub	eax, ecx
add	eax, [esp+1Ch+var_8]
cmp	ecx, 4
jb	short loc_10012B09
mov	ebx, [eax]
cmp	ebx, [ebp+0]
jnz	short loc_10012B2E
sub	ecx, 4
add	ebp, 4
add	eax, 4
cmp	ecx, 4
jnb	short loc_10012AF4
test	ecx, ecx
jz	short loc_10012AC3
mov	bl, [ebp+0]
cmp	bl, [eax]
jnz	short loc_10012B2E
cmp	ecx, 1
jbe	short loc_10012AC3
mov	bl, [ebp+1]
cmp	bl, [eax+1]
jnz	short loc_10012B2E
cmp	ecx, 2
jbe	short loc_10012AC3
mov	cl, [ebp+2]
cmp	cl, [eax+2]
jz	short loc_10012AC3
			
mov	ebx, [esp+1Ch+arg_0]
			
test	dl, 1
jz	short loc_10012B46
mov	ecx, ebx
call	sub_10012820
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 0Ch
retn
			
pop	ebp
pop	edi
pop	esi
mov	eax, 13h
pop	ebx
add	esp, 0Ch
retn
align 10h
			
sub	esp, 74h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+74h+var_4], eax
push	ebx
push	esi
push	edi
mov	edi, [esp+80h+arg_0]
xor	esi, esi
mov	ebx, 2
mov	[esp+80h+var_68], edi
mov	[esp+80h+var_70], ebx
cmp	[esp+80h+arg_4], esi
jnz	short loc_10012BCE
mov	eax, [esp+80h+arg_8]
push	100h
push	eax
push	edi
call	sub_1002A210
add	esp, 0Ch
mov	[esp+80h+var_6C], eax
cmp	eax, 0FFFFFFFFh
jz	loc_10012C4A
cmp	eax, 3		
ja	loc_10012C3D	
jmp	ds:off_10012FBC[eax*4] 
			
mov	[esp+80h+arg_4], 1 
			
push	ebp
push	800h
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
cmp	ebp, esi
jz	loc_10012D9F
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+84h+var_74], eax
cmp	eax, esi
jnz	short loc_10012C5E
push	esi
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+74h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 74h
retn
			
mov	[esp+80h+arg_4], ebx 
jmp	short loc_10012BCE
			
mov	[esp+80h+arg_4], 4 
jmp	short loc_10012BCE
			
mov	[esp+80h+arg_4], 6 
jmp	short loc_10012BCE
push	0FFFFE00Eh	
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+74h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 74h
retn
push	0ACh
push	ebp
call	PORT_ArenaZAlloc_Util
mov	ebx, eax
add	esp, 8
cmp	ebx, esi
jnz	short loc_10012C9C
push	esi
push	ebp
call	PORT_FreeArena_Util
mov	ecx, [esp+8Ch+var_74]
push	esi
push	ecx
call	PORT_FreeArena_Util
add	esp, 10h
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+74h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 74h
retn
mov	edx, [esp+84h+arg_4]
push	edi
mov	[ebx], ebp
mov	[ebx+4], edx
call	PK11_ReferenceSlot
mov	[ebx+8], eax
mov	eax, [esp+88h+arg_8]
mov	[ebx+0Ch], eax
lea	ecx, [esp+88h+var_70]
mov	[esp+88h+var_60], ecx
mov	edx, 4
lea	ecx, [esp+88h+var_6C]
mov	[esp+88h+var_54], ecx
mov	[esp+88h+var_64], esi
mov	[esp+88h+var_5C], edx
mov	[esp+88h+var_58], 100h
mov	[esp+88h+var_50], edx
mov	ecx, [ebx+4]
dec	ecx
add	esp, 4
cmp	ecx, 5		
ja	loc_10012DB4	
jmp	ds:off_10012FCC[ecx*4] 
			
push	edx		
lea	edx, [esp+88h+var_64]
push	edx
push	eax
mov	eax, [esp+90h+var_74]
push	edi
push	eax
mov	[esp+98h+var_4C], 120h
mov	[esp+98h+var_48], esi
mov	[esp+98h+var_44], esi
mov	[esp+98h+var_40], 122h
mov	[esp+98h+var_3C], esi
mov	[esp+98h+var_38], esi
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, esi
jnz	short loc_10012D69
cmp	[esp+84h+var_70], 2
jnz	short loc_10012DB4 
cmp	[esp+84h+var_6C], esi
jnz	short loc_10012DB4 
lea	esi, [ebx+14h]
lea	edi, [esp+84h+var_4C]
mov	ecx, ebp
call	sub_10012820
mov	edi, eax
test	edi, edi
jnz	short loc_10012D67
lea	esi, [ebx+20h]
lea	edi, [esp+84h+var_40]
			
mov	ecx, ebp
call	sub_10012820
mov	edi, eax
			
xor	esi, esi
			
mov	edx, [esp+84h+var_74]
push	esi
push	edx
call	PORT_FreeArena_Util
add	esp, 8
cmp	edi, esi
jz	loc_10012FA4
push	esi
push	ebp
call	PORT_FreeArena_Util
mov	eax, [esp+8Ch+var_68]
push	eax
call	PK11_FreeSlot
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 14h
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+74h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 74h
retn
			
mov	edi, 82h	
jmp	short loc_10012D69
			
mov	edx, [esp+84h+var_74] 
push	6
lea	ecx, [esp+88h+var_64]
push	ecx
push	eax
push	edi
push	edx
mov	[esp+98h+var_4C], 130h
mov	[esp+98h+var_48], esi
mov	[esp+98h+var_44], esi
mov	[esp+98h+var_40], 131h
mov	[esp+98h+var_3C], esi
mov	[esp+98h+var_38], esi
mov	[esp+98h+var_34], 132h
mov	[esp+98h+var_30], esi
mov	[esp+98h+var_2C], esi
mov	[esp+98h+var_28], 11h
mov	[esp+98h+var_24], esi
mov	[esp+98h+var_20], esi
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, esi
jnz	loc_10012D69
cmp	[esp+84h+var_70], 2
jnz	short loc_10012DB4 
cmp	[esp+84h+var_6C], 1
jnz	short loc_10012DB4 
lea	esi, [ebx+14h]
lea	edi, [esp+84h+var_4C]
mov	ecx, ebp
call	sub_10012820
mov	edi, eax
test	edi, edi
jnz	loc_10012D67
lea	esi, [ebx+20h]
lea	edi, [esp+84h+var_40]
mov	ecx, ebp
call	sub_10012820
mov	edi, eax
test	edi, edi
jnz	loc_10012D67
lea	esi, [ebx+2Ch]
lea	edi, [esp+84h+var_34]
mov	ecx, ebp
call	sub_10012820
mov	edi, eax
test	edi, edi
jnz	loc_10012D67
lea	esi, [ebx+38h]
lea	edi, [esp+84h+var_28]
jmp	loc_10012D5E
			
mov	edx, [esp+84h+var_74] 
push	5
lea	ecx, [esp+88h+var_64]
push	ecx
push	eax
push	edi
push	edx
mov	[esp+98h+var_4C], 130h
mov	[esp+98h+var_48], esi
mov	[esp+98h+var_44], esi
mov	[esp+98h+var_40], 132h
mov	[esp+98h+var_3C], esi
mov	[esp+98h+var_38], esi
mov	[esp+98h+var_34], 11h
mov	[esp+98h+var_30], esi
mov	[esp+98h+var_2C], esi
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, esi
jnz	loc_10012D69
mov	eax, 2
cmp	[esp+84h+var_70], eax
jnz	loc_10012DB4	
cmp	[esp+84h+var_6C], eax
jnz	loc_10012DB4	
lea	esi, [ebx+14h]
lea	edi, [esp+84h+var_4C]
mov	ecx, ebp
call	sub_10012820
mov	edi, eax
test	edi, edi
jnz	loc_10012D67
lea	esi, [ebx+20h]
lea	edi, [esp+84h+var_40]
mov	ecx, ebp
call	sub_10012820
mov	edi, eax
test	edi, edi
jnz	loc_10012D67
lea	esi, [ebx+2Ch]
lea	edi, [esp+84h+var_34]
jmp	loc_10012D5E
			
push	edx		
lea	ecx, [esp+88h+var_64]
push	ecx
mov	[ebx+1Ch], esi
push	eax
push	edi
push	ebp
mov	[esp+98h+var_4C], 180h
mov	[esp+98h+var_48], esi
mov	[esp+98h+var_44], esi
mov	[esp+98h+var_40], 181h
mov	[esp+98h+var_3C], esi
mov	[esp+98h+var_38], esi
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, esi
jnz	loc_10012D69
cmp	[esp+84h+var_70], 2
jnz	loc_10012DB4	
cmp	[esp+84h+var_6C], 3
jnz	loc_10012DB4	
lea	esi, [ebx+10h]
lea	edi, [esp+84h+var_4C]
mov	ecx, ebp
call	sub_10012820
mov	edi, eax
test	edi, edi
jnz	loc_10012D67
push	esi
lea	eax, [ebx+20h]
push	ebp
lea	ecx, [esp+8Ch+var_40]
call	sub_10012A30
add	esp, 8
jmp	loc_10012D65
mov	ecx, [esp+84h+var_4]
pop	ebp
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 74h
retn
dd offset loc_10012C1A	
dd offset loc_10012C23
dd offset loc_10012C30
dd offset loc_10012DBB	
dd offset loc_10012DB4
dd offset loc_10012E7D
dd offset loc_10012DB4
dd offset loc_10012F22
align 10h
			
cmp	[esp+arg_4], 0
push	ebp
mov	ebp, [esp+4+arg_C]
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
jnz	short loc_10013065 
push	100h
push	ebp
push	edi
call	sub_1002A210
push	0
push	1
push	ebp
push	edi
mov	esi, eax
call	sub_1002A280
xor	ecx, ecx
add	esp, 1Ch
test	al, al
setz	cl
mov	[esp+0Ch+arg_8], ecx
cmp	esi, 5		
ja	short loc_10013065 
jmp	ds:off_100130F4[esi*4] 
			
mov	[esp+0Ch+arg_4], 1 
jmp	short loc_10013065 
			
mov	[esp+0Ch+arg_4], 2 
jmp	short loc_10013065 
			
mov	[esp+0Ch+arg_4], 4 
jmp	short loc_10013065 
			
mov	[esp+0Ch+arg_4], 3 
jmp	short loc_10013065 
			
mov	[esp+0Ch+arg_4], 6 
			
push	0		
push	2
push	ebp
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10013091
mov	edx, [esp+0Ch+arg_10]
push	edx
push	1
push	edi
call	PK11_Authenticate
add	esp, 0Ch
test	eax, eax
jz	short loc_10013091
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
			
push	ebx
push	800h
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	short loc_100130C0
push	1Ch
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_100130C7
push	eax
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	ebx
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
mov	eax, [esp+10h+arg_4]
push	edi
mov	[esi], ebx
mov	[esi+4], eax
call	PK11_ReferenceSlot
mov	ecx, [esp+14h+arg_8]
mov	edx, [esp+14h+arg_10]
add	esp, 4
pop	ebx
mov	[esi+8], eax
pop	edi
mov	[esi+0Ch], ebp
mov	[esi+10h], ecx
mov	[esi+14h], edx
mov	eax, esi
pop	esi
pop	ebp
retn
dd offset loc_1001303F	
dd offset loc_10013049
dd offset loc_1001305D
dd offset loc_10013065
dd offset loc_10013053
align 10h
public PK11_GetSlotFromPrivateKey
mov	eax, [esp+arg_0]
mov	eax, [eax+8]
mov	[esp+arg_0], eax
jmp	PK11_ReferenceSlot
public PK11_GetPrivateModulusLen
			
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_0]
mov	ecx, [eax+4]
dec	ecx
mov	edx, [eax+8]
mov	[esp+0Ch+var_C], 120h
mov	[esp+0Ch+var_8], 0
mov	[esp+0Ch+var_4], 0
jz	short loc_1001315B
push	0FFFFE028h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
add	esp, 0Ch
retn
mov	eax, [eax+0Ch]
push	1
lea	ecx, [esp+10h+var_C]
push	ecx
push	eax
push	edx
push	0
call	sub_1002A310
add	esp, 14h
test	eax, eax
jz	short loc_1001318B
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
add	esp, 0Ch
retn
mov	eax, [esp+0Ch+var_8]
cmp	byte ptr [eax],	0
push	esi
mov	esi, [esp+10h+var_4]
jnz	short loc_1001319A
dec	esi
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
public PK11_MakeKEAPubKey
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_0]
mov	ecx, [esp+0Ch+arg_4]
push	edi
push	800h
mov	[esp+14h+var_8], eax
mov	[esp+14h+var_4], ecx
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_100131DC
pop	edi
add	esp, 0Ch
retn
push	esi
push	0ACh
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1001321E
lea	edx, [esp+14h+var_C]
push	edx
lea	eax, [esi+44h]
push	eax
push	edi
mov	[esi], edi
mov	dword ptr [esi+8], 0
mov	dword ptr [esi+0Ch], 0
mov	dword ptr [esi+4], 3
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10013231
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	edi
add	esp, 0Ch
retn
mov	eax, esi
pop	esi
pop	edi
add	esp, 0Ch
retn
align 10h
public PK11_ImportEncryptedPrivateKeyInfoAndReturnKey
			
			
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, [esp+58h+arg_C]
mov	edx, [esp+58h+arg_10]
mov	ecx, [esp+58h+arg_4]
push	ebx
mov	[esp+5Ch+var_34], eax
mov	eax, [esp+5Ch+arg_14]
mov	[esp+5Ch+var_18], edx
mov	edx, [esp+5Ch+arg_18]
push	ebp
mov	ebp, [esp+60h+arg_0]
mov	[esp+60h+var_28], eax
mov	eax, [esp+60h+arg_24]
mov	[esp+60h+var_20], edx
mov	edx, [esp+60h+arg_28]
push	esi
mov	esi, [esp+64h+arg_8]
push	edi
xor	edi, edi
mov	[esp+68h+var_24], eax
mov	eax, 108h
mov	[esp+68h+var_50], edx
mov	edx, 10Ch
xor	ebx, ebx
mov	[esp+68h+var_4C], ecx
mov	[esp+68h+var_44], esi
mov	[esp+68h+var_58], edi
mov	[esp+68h+var_48], edi
mov	[esp+68h+var_14], 107h
mov	[esp+68h+var_10], 105h
mov	[esp+68h+var_C], eax
mov	[esp+68h+var_8], 109h
mov	[esp+68h+var_1C], eax
mov	[esp+68h+var_30], edx
mov	[esp+68h+var_40], eax
mov	[esp+68h+var_3C], edx
test	ecx, ecx
jz	loc_100134F9
test	esi, esi
jz	loc_100134F9
add	ecx, 4
push	ecx
mov	[esp+6Ch+var_38], ecx
call	SECOID_FindOIDTag_Util
push	eax
call	PK11_AlgtagToMechanism
mov	[esp+70h+var_2C], eax
mov	eax, [esp+70h+arg_1C]
add	esp, 8
sub	eax, 2
jz	loc_100133A8
sub	eax, 2
jz	short loc_10013395
sub	eax, 2
mov	eax, [esp+68h+arg_20]
jz	short loc_10013368
and	eax, 0A0h
mov	[esp+68h+var_54], ebx
cmp	eax, 0A0h	
ja	short loc_100133B5 
movzx	eax, ds:byte_10013520[eax]
jmp	ds:off_10013510[eax*4] 
			
lea	edi, [esp+68h+var_14] 
mov	ebx, 2
jmp	short loc_100133B5 
			
lea	edi, [esp+68h+var_C] 
mov	ebx, 2
jmp	short loc_100133B5 
			
lea	edi, [esp+68h+var_14] 
mov	ebx, 4
jmp	short loc_100133B5 
and	eax, 88h
sub	eax, 8
mov	[esp+68h+var_54], 3
jz	short loc_1001338A
sub	eax, 78h
lea	edi, [esp+68h+var_40]
jz	short loc_100133A1
mov	ebx, 2
jmp	short loc_100133B5 
lea	edi, [esp+68h+var_3C]
mov	ebx, 1
jmp	short loc_100133B5 
mov	[esp+68h+var_54], 2
lea	edi, [esp+68h+var_30]
mov	ebx, 1
jmp	short loc_100133B5 
mov	ebx, 1
mov	[esp+68h+var_54], ebx
lea	edi, [esp+68h+var_1C]
			
mov	ecx, [esp+68h+var_50] 
mov	edx, [esp+68h+var_38]
push	ecx
push	0
push	esi
push	edx
push	ebp
call	PK11_PBEKeyGen
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	loc_100134A6
mov	eax, [esp+68h+var_48]
mov	ecx, [esp+68h+var_44]
push	eax
mov	eax, [esp+6Ch+var_4C]
push	ecx
lea	edx, [esp+70h+var_58]
push	edx
add	eax, 4
push	eax
call	sub_1002F560
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jz	loc_100134A6
push	eax
call	PK11_GetPadMechanism
mov	ecx, [esp+6Ch+var_50]
mov	edx, [esp+6Ch+var_54]
push	ecx
mov	ecx, [esp+70h+var_20]
push	ebx
push	edi
push	edx
mov	edx, [esp+7Ch+var_28]
push	ecx
mov	ecx, [esp+80h+var_18]
push	edx
mov	edx, [esp+84h+var_34]
push	ecx
mov	ecx, [esp+88h+var_4C]
push	edx
mov	edx, [esp+8Ch+var_58]
add	ecx, 1Ch
push	ecx
push	edx
push	eax
push	esi
push	ebp
call	PK11_UnwrapPrivKey
add	esp, 38h
test	eax, eax
jnz	loc_100134DE
cmp	[esp+68h+var_2C], 80000003h
jnz	short loc_100134A6
cmp	[esp+68h+var_48], eax
jnz	short loc_100134A6
push	esi
call	PK11_FreeSymKey
mov	eax, [esp+6Ch+var_58]
add	esp, 4
test	eax, eax
jz	short loc_10013477
push	1
push	eax
call	SECITEM_ZfreeItem_Util
add	esp, 8
mov	[esp+68h+var_58], 0
mov	eax, [esp+68h+var_50]
mov	ecx, [esp+68h+var_44]
push	eax
mov	eax, [esp+6Ch+var_4C]
push	1
push	ecx
add	eax, 4
push	eax
push	ebp
mov	[esp+7Ch+var_48], 1
call	PK11_PBEKeyGen
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	loc_100133D5
			
or	edi, 0FFFFFFFFh
			
mov	eax, [esp+68h+var_58]
test	eax, eax
jz	short loc_100134BC
push	1
push	eax
call	SECITEM_ZfreeItem_Util
add	esp, 8
test	esi, esi
jz	short loc_100134C9
push	esi
call	PK11_FreeSymKey
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+58h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
mov	ecx, [esp+68h+var_24]
test	ecx, ecx
jz	short loc_100134EC
mov	[ecx], eax
xor	edi, edi
jmp	short loc_100134A9
push	eax
call	SECKEY_DestroyPrivateKey
add	esp, 4
xor	edi, edi
jmp	short loc_100134A9
			
mov	ecx, [esp+68h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
or	eax, 0FFFFFFFFh
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
			
dd offset loc_100133B5	
			
db	3,     3,     3,     3 
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	1,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	2,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	0
align 10h
public PK11_ExportPrivateKeyInfo
mov	eax, [esp+arg_0]
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_4]
push	edi
push	eax
xor	ebx, ebx
call	PK11_FindKeyByAnyCert
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10013605
push	edi
push	esi
call	PK11_ExportPrivKeyInfo
push	esi
mov	edi, eax
call	SECKEY_DestroyPrivateKey
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
public PK11_DEREncodePublicKey
jmp	SECKEY_EncodeDERSubjectPublicKeyInfo
align 10h
public PK11_GetPublicKeyNickname
mov	eax, [esp+arg_0] 
mov	ecx, [eax+0Ch]
mov	edx, [eax+8]
push	ecx
push	edx
call	sub_1002A540
add	esp, 8
retn
align 10h
public PK11_SetPublicKeyNickname
mov	eax, [esp+arg_4] 
push	eax
mov	eax, [esp+4+arg_0]
mov	ecx, [eax+0Ch]
mov	edx, [eax+8]
push	ecx
push	edx
call	sub_1002A5C0
add	esp, 0Ch
retn
align 10h
public PK11_GetPQGParamsFromPrivateKey
sub	esp, 28h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+28h+var_4], eax
push	ebx
mov	ebx, [esp+2Ch+arg_0]
push	ebp
xor	ebp, ebp
push	esi
push	edi
push	800h
mov	[esp+3Ch+var_28], 130h
mov	[esp+3Ch+var_24], ebp
mov	[esp+3Ch+var_20], ebp
mov	[esp+3Ch+var_1C], 131h
mov	[esp+3Ch+var_18], ebp
mov	[esp+3Ch+var_14], ebp
mov	[esp+3Ch+var_10], 132h
mov	[esp+3Ch+var_C], ebp
mov	[esp+3Ch+var_8], ebp
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
cmp	edi, ebp
jz	short loc_10013701
push	28h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
cmp	esi, ebp
jz	short loc_100136F7
mov	ecx, [ebx+0Ch]
mov	edx, [ebx+8]
push	3
lea	eax, [esp+3Ch+var_28]
push	eax
push	ecx
push	edx
push	edi
call	sub_1002A310
add	esp, 14h
cmp	eax, ebp
jz	short loc_10013716
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
push	ebp
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+28h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
mov	[esi], edi
mov	eax, [esp+38h+var_24]
mov	[esi+8], eax
mov	ecx, [esp+38h+var_20]
mov	[esi+0Ch], ecx
mov	edx, [esp+38h+var_18]
mov	[esi+14h], edx
mov	eax, [esp+38h+var_14]
mov	[esi+18h], eax
mov	ecx, [esp+38h+var_C]
mov	[esi+20h], ecx
mov	edx, [esp+38h+var_8]
mov	ecx, [esp+38h+var_4]
pop	edi
mov	[esi+24h], edx
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
align 10h
public PK11_ConvertSessionPrivKeyToTokenPrivKey
sub	esp, 10h
mov	ecx, [esp+10h+arg_4]
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	esi
mov	esi, [ebp+8]
push	edi
mov	ebx, 1
push	ecx
lea	eax, [esp+24h+arg_0]
push	ebx
push	esi
mov	byte ptr [esp+2Ch+arg_0], bl
mov	[esp+2Ch+var_C], ebx
mov	[esp+2Ch+var_8], eax
mov	[esp+2Ch+var_4], ebx
call	PK11_Authenticate
push	esi
call	sub_10035690
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_100137B9
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
mov	edx, [esi]
lea	eax, [esp+20h+var_10]
push	eax
mov	eax, [ebp+0Ch]
push	ebx
lea	ecx, [esp+28h+var_C]
push	ecx
mov	ecx, [edx+56h]
push	eax
push	edi
call	ecx
push	edi
push	esi
mov	ebx, eax
call	sub_10035750
add	esp, 1Ch
test	ebx, ebx
jz	short loc_100137F9
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
mov	edx, [esp+20h+var_10]
push	0
push	edx
push	0
push	0
push	esi
call	sub_10012FF0
add	esp, 14h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
align 10h
public PK11_DeleteTokenPrivateKey
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
push	edi
call	PK11_GetCertFromPrivateKey
mov	esi, eax
add	esp, 4
mov	ebx, 0FFFFFFFEh
test	esi, esi
jz	short loc_10013842
cmp	[esp+0Ch+arg_4], 0
jz	short loc_10013854
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
push	eax
push	ecx
call	PK11_DestroyTokenObject
add	esp, 8
mov	ebx, eax
test	esi, esi
jz	short loc_10013861
push	esi
call	CERT_DestroyCertificate
add	esp, 4
push	edi
call	SECKEY_DestroyPrivateKey
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
public PK11_DeleteTokenPublicKey
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
test	eax, eax
jnz	short loc_10013881
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [esi+0Ch]
push	ecx
push	eax
call	PK11_DestroyTokenObject
push	esi
call	SECKEY_DestroyPublicKey
add	esp, 0Ch
xor	eax, eax
pop	esi
retn
align 10h
push	ebx
push	esi
mov	esi, [esp+8+arg_8]
xor	ebx, ebx
test	esi, esi
jnz	short loc_100138B2
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	eax, [esi+8]
mov	ecx, [esp+8+arg_4]
mov	edx, [esp+8+arg_0]
push	edi
push	eax
push	ecx
push	1
push	0
push	edx
call	sub_10012FF0
mov	edi, eax
add	esp, 14h
test	edi, edi
jnz	short loc_100138DA
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	eax, [esi]
test	eax, eax
jz	short loc_100138EC
mov	ecx, [esi+4]
push	ecx
push	edi
call	eax
add	esp, 8
mov	ebx, eax
push	edi
call	SECKEY_DestroyPrivateKey
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
sub	esp, 3Ch
mov	eax, 1
lea	edx, [esp+3Ch+var_38]
mov	[esp+3Ch+var_39], al
xor	ecx, ecx
mov	[esp+3Ch+var_C], eax
mov	[esp+3Ch+var_4], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_14], edx
lea	edx, [esp+3Ch+var_39]
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_18], ecx
mov	[esp+3Ch+var_10], 4
mov	[esp+3Ch+var_8], edx
cmp	eax, ecx
jnz	short loc_10013948
xor	eax, eax
add	esp, 3Ch
retn
lea	edx, [esp+3Ch+var_34]
mov	[esp+3Ch+var_24], edx
lea	edx, [esp+3Ch+var_18]
mov	[esp+3Ch+var_20], edx
mov	edx, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_2C], ecx
lea	ecx, [esp+3Ch+var_28]
mov	[esp+3Ch+var_34], edx
mov	edx, [esp+3Ch+arg_8]
push	ecx
push	eax
mov	[esp+44h+var_28], offset sub_100138A0
mov	[esp+44h+var_1C], 2
mov	[esp+44h+var_30], edx
call	sub_1002C7E0
add	esp, 8
add	esp, 3Ch
retn
align 10h
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	[esp+1Ch+var_14], ecx
push	2
lea	ecx, [esp+20h+var_18]
mov	[esp+20h+var_10], edx
mov	edx, [esp+20h+arg_0]
push	ecx
lea	eax, [esp+24h+var_1C]
push	edx
mov	[esp+28h+var_1C], 3
mov	[esp+28h+var_18], 102h
mov	[esp+28h+var_C], 0
mov	[esp+28h+var_8], eax
mov	[esp+28h+var_4], 4
call	sub_1002C4F0
add	esp, 28h
retn
align 10h
public PK11_FindKeyByKeyID
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [eax+4]
mov	edx, [eax+8]
push	esi
mov	esi, [esp+20h+arg_0]
mov	[esp+20h+var_14], ecx
push	2
lea	ecx, [esp+24h+var_18]
push	ecx
lea	eax, [esp+28h+var_1C]
push	esi
mov	[esp+2Ch+var_1C], 3
mov	[esp+2Ch+var_18], 102h
mov	[esp+2Ch+var_10], edx
mov	[esp+2Ch+var_C], 0
mov	[esp+2Ch+var_8], eax
mov	[esp+2Ch+var_4], 4
call	sub_1002C4F0
add	esp, 0Ch
test	eax, eax
jnz	short loc_10013A4B
pop	esi
add	esp, 1Ch
retn
mov	edx, [esp+20h+arg_8]
push	edx
push	eax
push	1
push	0
push	esi
call	sub_10012FF0
add	esp, 14h
pop	esi
add	esp, 1Ch
retn
align 10h
public PK11_MakeIDFromPubKey
			
push	edi
mov	edi, [esp+4+arg_0]
cmp	dword ptr [edi+8], 14h
ja	short loc_10013A86
push	edi
call	SECITEM_DupItem_Util
add	esp, 4
pop	edi
retn
push	esi
push	4
call	PK11_CreateDigestContext
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10013AC4
push	esi
call	PK11_DigestBegin
add	esp, 4
test	eax, eax
jnz	short loc_10013AB9
mov	eax, [edi+8]
mov	ecx, [edi+4]
push	eax
push	ecx
push	esi
call	PK11_DigestOp
add	esp, 0Ch
test	eax, eax
jz	short loc_10013AC9
push	1
push	esi
call	PK11_DestroyContext
add	esp, 8
pop	esi
xor	eax, eax
pop	edi
retn
push	ebx
push	0Ch
call	PORT_Alloc_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_10013AEB
push	1
push	esi
call	PK11_DestroyContext
add	esp, 8
pop	ebx
pop	esi
xor	eax, eax
pop	edi
retn
lea	edi, [ebx+8]
push	14h
mov	dword ptr [edi], 14h
call	PORT_Alloc_Util
add	esp, 4
mov	[ebx+4], eax
test	eax, eax
jnz	short loc_10013B1C
push	ebx
call	PORT_Free_Util
push	1
push	esi
call	PK11_DestroyContext
add	esp, 0Ch
pop	ebx
pop	esi
xor	eax, eax
pop	edi
retn
push	14h
push	edi
push	eax
push	esi
call	PK11_DigestFinal
push	1
push	esi
mov	edi, eax
call	PK11_DestroyContext
add	esp, 18h
test	edi, edi
jz	short loc_10013B48
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
pop	ebx
pop	esi
xor	eax, eax
pop	edi
retn
mov	eax, ebx
pop	ebx
pop	esi
pop	edi
retn
align 10h
public PK11_GetLowLevelKeyIDForPrivateKey
mov	eax, [esp+arg_0]
mov	ecx, [eax+0Ch]
mov	edx, [eax+8]
push	ecx
push	edx
call	sub_1002C8D0
add	esp, 8
retn
align 10h
mov	eax, [esp+4]
push	eax
call	SECKEY_CopyPrivateKey
mov	ecx, [esp+0Ch]
push	eax
push	ecx
call	SECKEY_AddPrivateKeyToListTail
add	esp, 0Ch
retn
align 10h
public PK11_ListPrivateKeysInSlot
push	esi
call	SECKEY_NewPrivateKeyList
mov	esi, eax
test	esi, esi
jnz	short loc_10013B9E
pop	esi
retn
mov	eax, [esp+4+arg_0]
push	esi
push	offset loc_10013B70
push	eax
call	sub_10013900
add	esp, 0Ch
test	eax, eax
jz	short loc_10013BC0
push	esi
call	SECKEY_DestroyPrivateKeyList
add	esp, 4
xor	esi, esi
mov	eax, esi
pop	esi
retn
align 10h
public PK11_ListPublicKeysInSlot
sub	esp, 0C4h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0C4h+var_4], eax
push	ebx
push	esi
mov	esi, [esp+0CCh+arg_0]
lea	eax, [esp+0CCh+var_98]
xor	ebx, ebx
mov	[esp+0CCh+var_30], eax
mov	eax, 1
push	edi
mov	edi, [esp+0D0h+arg_4]
lea	ecx, [esp+0D0h+var_BD]
mov	[esp+0D0h+var_28], eax
mov	[esp+0D0h+var_20], eax
mov	[esp+0D0h+var_B8], esi
mov	[esp+0D0h+var_BD], 1
mov	[esp+0D0h+var_98], 2
mov	[esp+0D0h+var_A8], ebx
mov	[esp+0D0h+var_34], ebx
mov	[esp+0D0h+var_2C], 4
mov	[esp+0D0h+var_24], ecx
lea	eax, [esp+0D0h+var_1C]
cmp	edi, ebx
jz	short loc_10013C80
mov	eax, edi
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
cmp	cl, bl
jnz	short loc_10013C57
sub	eax, edx
mov	[esp+0D0h+var_14], eax
mov	[esp+0D0h+var_1C], 3
mov	[esp+0D0h+var_18], edi
lea	eax, [esp+0D0h+var_10]
lea	ecx, [esp+0D0h+var_34]
sub	eax, ecx
mov	ecx, eax
lea	edx, [esp+0D0h+var_A8]
push	edx
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
lea	ecx, [esp+0D8h+var_34]
push	ecx
push	esi
call	sub_1002C5B0
mov	edi, eax
add	esp, 10h
mov	[esp+0D0h+var_A4], edi
cmp	edi, ebx
jnz	short loc_10013CD6
pop	edi
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+0C4h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0C4h
retn
push	ebp
call	SECKEY_NewPrivateKeyList
mov	ebp, eax
mov	[esp+0D4h+var_A0], ebp
cmp	ebp, ebx
jnz	short loc_10013CF6
push	edi
call	PORT_Free_Util
add	esp, 4
xor	eax, eax
jmp	loc_1001414C
xor	eax, eax
mov	[esp+0D4h+var_9C], eax
cmp	[esp+0D4h+var_A8], ebx
jle	loc_10014141
mov	edi, [edi+eax*4]
push	100h
push	edi
mov	ebp, 2
push	esi
mov	[esp+0E0h+var_BC], ebp
call	sub_1002A210
add	esp, 0Ch
mov	[esp+0D4h+var_B4], eax
cmp	eax, 0FFFFFFFFh
jz	loc_10014126
cmp	eax, 3		
ja	short loc_10013D98 
jmp	ds:off_10014168[eax*4] 
			
mov	[esp+0D4h+var_AC], 1 
			
push	800h
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
mov	[esp+0D4h+var_C4], ebp
cmp	ebp, ebx
jz	loc_10014126
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+0D4h+var_B0], eax
cmp	eax, ebx
jnz	short loc_10013DAA
push	ebx
push	ebp
call	PORT_FreeArena_Util
jmp	loc_10014123
			
mov	[esp+0D4h+var_AC], ebp 
jmp	short loc_10013D42
			
mov	[esp+0D4h+var_AC], 4 
jmp	short loc_10013D42
			
mov	[esp+0D4h+var_AC], 6 
jmp	short loc_10013D42
push	0FFFFE00Eh	
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10014126
push	0ACh
push	ebp
call	PORT_ArenaZAlloc_Util
mov	ebp, eax
add	esp, 8
cmp	ebp, ebx
jnz	short loc_10013DDC
mov	edx, [esp+0D4h+var_C4]
push	ebx
push	edx
call	PORT_FreeArena_Util
mov	eax, [esp+0DCh+var_B0]
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 10h
jmp	loc_10014126
mov	ecx, [esp+0D4h+var_C4]
mov	edx, [esp+0D4h+var_AC]
push	esi
mov	[ebp+0], ecx
mov	[ebp+4], edx
call	PK11_ReferenceSlot
mov	[ebp+8], eax
mov	[ebp+0Ch], edi
lea	eax, [esp+0D8h+var_BC]
mov	ecx, 4
lea	edx, [esp+0D8h+var_B4]
mov	[esp+0D8h+var_90], eax
mov	[esp+0D8h+var_94], ebx
mov	[esp+0D8h+var_8C], ecx
mov	[esp+0D8h+var_88], 100h
mov	[esp+0D8h+var_84], edx
mov	[esp+0D8h+var_80], ecx
mov	eax, [ebp+4]
dec	eax
add	esp, 4
cmp	eax, 5		
ja	loc_10013EE8	
jmp	ds:off_10014178[eax*4] 
			
push	ecx		
mov	ecx, [esp+0D8h+var_B0]
lea	eax, [esp+0D8h+var_94]
push	eax
push	edi
push	esi
push	ecx
mov	[esp+0E8h+var_7C], 120h
mov	[esp+0E8h+var_78], ebx
mov	[esp+0E8h+var_74], ebx
mov	[esp+0E8h+var_70], 122h
mov	[esp+0E8h+var_6C], ebx
mov	[esp+0E8h+var_68], ebx
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, ebx
jnz	short loc_10013EAD
cmp	[esp+0D4h+var_BC], 2
jnz	short loc_10013EE8 
cmp	[esp+0D4h+var_B4], ebx
jnz	short loc_10013EE8 
mov	ecx, [esp+0D4h+var_C4]
lea	esi, [ebp+14h]
lea	edi, [esp+0D4h+var_7C]
call	sub_10012820
mov	edi, eax
cmp	edi, ebx
jnz	short loc_10013EA9
lea	esi, [ebp+20h]
lea	edi, [esp+0D4h+var_70]
			
mov	ecx, [esp+0D4h+var_C4]
call	sub_10012820
mov	edi, eax
			
mov	esi, [esp+0D4h+var_B8]
			
mov	eax, [esp+0D4h+var_B0]
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
cmp	edi, ebx
jz	loc_10014118
mov	ecx, [esp+0D4h+var_C4]
push	ebx
push	ecx
call	PORT_FreeArena_Util
push	esi
call	PK11_FreeSlot
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 14h
jmp	loc_10014126
			
mov	edi, 82h	
jmp	short loc_10013EAD
			
mov	eax, [esp+0D4h+var_B0] 
push	6
lea	edx, [esp+0D8h+var_94]
push	edx
push	edi
push	esi
push	eax
mov	[esp+0E8h+var_7C], 130h
mov	[esp+0E8h+var_78], ebx
mov	[esp+0E8h+var_74], ebx
mov	[esp+0E8h+var_70], 131h
mov	[esp+0E8h+var_6C], ebx
mov	[esp+0E8h+var_68], ebx
mov	[esp+0E8h+var_64], 132h
mov	[esp+0E8h+var_60], ebx
mov	[esp+0E8h+var_5C], ebx
mov	[esp+0E8h+var_58], 11h
mov	[esp+0E8h+var_54], ebx
mov	[esp+0E8h+var_50], ebx
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, ebx
jnz	loc_10013EAD
cmp	[esp+0D4h+var_BC], 2
jnz	loc_10013EE8	
cmp	[esp+0D4h+var_B4], 1
jnz	loc_10013EE8	
mov	ecx, [esp+0D4h+var_C4]
lea	esi, [ebp+14h]
lea	edi, [esp+0D4h+var_7C]
call	sub_10012820
mov	edi, eax
cmp	edi, ebx
jnz	loc_10013EA9
mov	ecx, [esp+0D4h+var_C4]
lea	esi, [ebp+20h]
lea	edi, [esp+0D4h+var_70]
call	sub_10012820
mov	edi, eax
cmp	edi, ebx
jnz	loc_10013EA9
mov	ecx, [esp+0D4h+var_C4]
lea	esi, [ebp+2Ch]
lea	edi, [esp+0D4h+var_64]
call	sub_10012820
mov	edi, eax
cmp	edi, ebx
jnz	loc_10013EA9
lea	esi, [ebp+38h]
lea	edi, [esp+0D4h+var_58]
jmp	loc_10013E9E
			
mov	edx, [esp+0D4h+var_B0] 
push	5
lea	ecx, [esp+0D8h+var_94]
push	ecx
push	edi
push	esi
push	edx
mov	[esp+0E8h+var_7C], 130h
mov	[esp+0E8h+var_78], ebx
mov	[esp+0E8h+var_74], ebx
mov	[esp+0E8h+var_70], 132h
mov	[esp+0E8h+var_6C], ebx
mov	[esp+0E8h+var_68], ebx
mov	[esp+0E8h+var_64], 11h
mov	[esp+0E8h+var_60], ebx
mov	[esp+0E8h+var_5C], ebx
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, ebx
jnz	loc_10013EAD
mov	eax, 2
cmp	[esp+0D4h+var_BC], eax
jnz	loc_10013EE8	
cmp	[esp+0D4h+var_B4], eax
jnz	loc_10013EE8	
mov	ecx, [esp+0D4h+var_C4]
lea	esi, [ebp+14h]
lea	edi, [esp+0D4h+var_7C]
call	sub_10012820
mov	edi, eax
cmp	edi, ebx
jnz	loc_10013EA9
mov	ecx, [esp+0D4h+var_C4]
lea	esi, [ebp+20h]
lea	edi, [esp+0D4h+var_70]
call	sub_10012820
mov	edi, eax
cmp	edi, ebx
jnz	loc_10013EA9
lea	esi, [ebp+2Ch]
lea	edi, [esp+0D4h+var_64]
jmp	loc_10013E9E
			
push	ecx		
mov	ecx, [esp+0D8h+var_C4]
lea	eax, [esp+0D8h+var_94]
push	eax
mov	[ebp+1Ch], ebx
push	edi
push	esi
push	ecx
mov	[esp+0E8h+var_7C], 180h
mov	[esp+0E8h+var_78], ebx
mov	[esp+0E8h+var_74], ebx
mov	[esp+0E8h+var_70], 181h
mov	[esp+0E8h+var_6C], ebx
mov	[esp+0E8h+var_68], ebx
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, ebx
jnz	loc_10013EAD
cmp	[esp+0D4h+var_BC], 2
jnz	loc_10013EE8	
cmp	[esp+0D4h+var_B4], 3
jnz	loc_10013EE8	
mov	ecx, [esp+0D4h+var_C4]
lea	esi, [ebp+10h]
lea	edi, [esp+0D4h+var_7C]
call	sub_10012820
mov	edi, eax
cmp	edi, ebx
jnz	loc_10013EA9
mov	edx, [esp+0D4h+var_C4]
push	esi
lea	eax, [ebp+20h]
push	edx
lea	ecx, [esp+0DCh+var_70]
call	sub_10012A30
add	esp, 8
jmp	loc_10013EA7
mov	edx, [esp+0D4h+var_A0]
push	ebp
push	edx
call	SECKEY_AddPrivateKeyToListTail
add	esp, 8
			
mov	eax, [esp+0D4h+var_9C]
mov	edi, [esp+0D4h+var_A4]
inc	eax
mov	[esp+0D4h+var_9C], eax
cmp	eax, [esp+0D4h+var_A8]
jl	loc_10013D06
mov	ebp, [esp+0D4h+var_A0]
push	edi
call	PORT_Free_Util
add	esp, 4
mov	eax, ebp
mov	ecx, [esp+0D4h+var_4]
pop	ebp
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0C4h
retn
align 4
dd offset loc_10013D7E	
dd offset loc_10013D84
dd offset loc_10013D8E
dd offset loc_10013EEF	
dd offset loc_10013EE8
dd offset loc_10013FD4
dd offset loc_10013EE8
dd offset loc_10014089
public PK11_ListPrivKeysInSlot
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, [esp+58h+arg_8]
push	ebx
push	ebp
mov	ebp, [esp+60h+arg_0]
lea	ecx, [esp+60h+var_3C]
push	esi
mov	[esp+64h+var_4C], eax
xor	ebx, ebx
mov	eax, 1
mov	[esp+64h+var_30], ecx
mov	ecx, [esp+64h+arg_4]
push	edi
mov	edi, 3
lea	edx, [esp+68h+var_55]
mov	[esp+68h+var_28], eax
mov	[esp+68h+var_20], eax
mov	[esp+68h+var_55], 1
mov	[esp+68h+var_3C], edi
mov	[esp+68h+var_50], ebx
mov	[esp+68h+var_34], ebx
mov	[esp+68h+var_2C], 4
mov	[esp+68h+var_24], edx
lea	eax, [esp+68h+var_1C]
cmp	ecx, ebx
jz	short loc_10014219
mov	eax, ecx
lea	esi, [eax+1]
lea	esp, [esp+0]
mov	dl, [eax]
inc	eax
test	dl, dl
jnz	short loc_10014200
sub	eax, esi
mov	[esp+68h+var_14], eax
mov	[esp+68h+var_1C], edi
mov	[esp+68h+var_18], ecx
lea	eax, [esp+68h+var_10]
lea	edx, [esp+68h+var_34]
sub	eax, edx
lea	ecx, [esp+68h+var_50]
push	ecx
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
lea	ecx, [esp+70h+var_34]
push	ecx
push	ebp
call	sub_1002C5B0
mov	esi, eax
add	esp, 10h
mov	[esp+68h+var_44], esi
cmp	esi, ebx
jz	short loc_10014267
call	SECKEY_NewPrivateKeyList
mov	edi, eax
mov	[esp+68h+var_48], edi
cmp	edi, ebx
jnz	short loc_1001427C
push	esi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+58h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
mov	[esp+68h+var_54], ebx
cmp	[esp+68h+var_50], ebx
jle	loc_1001439F
lea	ebx, [ebx+0]
mov	edx, [esp+68h+var_54]
mov	edi, [esi+edx*4]
push	100h
push	edi
push	ebp
xor	ebx, ebx
call	sub_1002A210
push	ebx
push	1
push	edi
push	ebp
mov	esi, eax
call	sub_1002A280
xor	ecx, ecx
add	esp, 1Ch
test	al, al
setz	cl
mov	[esp+68h+var_38], ecx
cmp	esi, 5		
ja	short loc_100142EC 
jmp	ds:off_100143C0[esi*4] 
			
mov	ebx, 1		
jmp	short loc_100142EC 
			
mov	ebx, 2		
jmp	short loc_100142EC 
			
mov	ebx, 4		
jmp	short loc_100142EC 
			
mov	ebx, 3		
jmp	short loc_100142EC 
			
mov	ebx, 6		
			
push	0		
push	2
push	edi
push	ebp
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10014316
mov	edx, [esp+68h+var_4C]
push	edx
push	1
push	ebp
call	PK11_Authenticate
add	esp, 0Ch
test	eax, eax
jz	short loc_10014316
xor	esi, esi
jmp	short loc_10014376
			
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+68h+var_40], eax
test	eax, eax
jnz	short loc_1001432F
xor	esi, esi
jmp	short loc_10014376
push	1Ch
push	eax
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10014350
push	eax
mov	eax, [esp+6Ch+var_40]
push	eax
call	PORT_FreeArena_Util
add	esp, 8
jmp	short loc_10014376
mov	ecx, [esp+68h+var_40]
push	ebp
mov	[esi], ecx
mov	[esi+4], ebx
call	PK11_ReferenceSlot
mov	edx, [esp+6Ch+var_38]
mov	[esi+8], eax
mov	eax, [esp+6Ch+var_4C]
add	esp, 4
mov	[esi+0Ch], edi
mov	[esi+10h], edx
mov	[esi+14h], eax
			
mov	ecx, [esp+68h+var_48]
push	esi
push	ecx
call	SECKEY_AddPrivateKeyToListTail
mov	eax, [esp+70h+var_54]
mov	esi, [esp+70h+var_44]
inc	eax
add	esp, 8
mov	[esp+68h+var_54], eax
cmp	eax, [esp+68h+var_50]
jl	loc_10014290
mov	edi, [esp+68h+var_48]
push	esi
call	PORT_Free_Util
mov	ecx, [esp+6Ch+var_4]
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
dd offset loc_100142D2	
dd offset loc_100142D9
dd offset loc_100142E7
dd offset loc_100142EC
dd offset loc_100142E0
align 10h
			
mov	ecx, [eax+4]
dec	ecx
cmp	ecx, 5		
ja	short loc_10014424 
jmp	ds:off_10014428[ecx*4] 
			
add	eax, 14h	
push	eax
call	PK11_MakeIDFromPubKey
add	esp, 4
retn
			
add	eax, 38h	
push	eax
call	PK11_MakeIDFromPubKey
add	esp, 4
retn
			
add	eax, 2Ch	
push	eax
call	PK11_MakeIDFromPubKey
add	esp, 4
retn
			
add	eax, 20h	
push	eax
call	PK11_MakeIDFromPubKey
add	esp, 4
retn
			
			
xor	eax, eax	
retn
align 4
dd offset loc_100143FD	
dd offset loc_10014424
dd offset loc_1001440A
dd offset loc_10014424
dd offset loc_10014417
public PK11_ImportPublicKey
			
sub	esp, 0A4h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0A4h+var_4], eax
mov	eax, [esp+0A4h+arg_0]
push	ebx
push	ebp
mov	ebp, [esp+0ACh+arg_8]
xor	ebx, ebx
push	edi
mov	edi, [esp+0B0h+arg_4]
mov	[esp+0B0h+var_8C], eax
mov	[esp+0B0h+var_A2], 1
mov	[esp+0B0h+var_A1], 0
mov	[esp+0B0h+var_90], 2
mov	[esp+0B0h+var_A0], 10h
mov	[esp+0B0h+var_9C], ebx
mov	[esp+0B0h+var_98], ebx
cmp	ebp, ebx
jnz	short loc_100144B8
cmp	[edi+8], eax
jnz	short loc_100144B8
mov	eax, [edi+0Ch]
pop	edi
pop	ebp
pop	ebx
mov	ecx, [esp+0A4h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0A4h
retn
			
push	esi
mov	esi, [edi+8]
cmp	esi, ebx
jz	short loc_100144FB
mov	eax, [edi+0Ch]
push	eax
push	esi
call	sub_1002A4C0
add	esp, 8
test	eax, eax
jnz	short loc_100144EF
push	esi
call	sub_10035650
mov	edx, [edi+0Ch]
mov	ecx, [esi]
mov	eax, [esi+38h]
mov	ecx, [ecx+5Ah]
push	edx
push	eax
call	ecx
push	esi
call	sub_10035670
add	esp, 10h
push	esi
call	PK11_FreeSlot
add	esp, 4
mov	[edi+8], ebx
mov	eax, 4
mov	[esp+0B4h+var_88], ebx
lea	edx, [esp+0B4h+var_90]
lea	ecx, [esp+0B4h+var_A0]
mov	ebx, 1
mov	[esp+0B4h+var_80], eax
mov	[esp+0B4h+var_74], eax
mov	[esp+0B4h+var_84], edx
mov	[esp+0B4h+var_7C], 100h
mov	[esp+0B4h+var_78], ecx
mov	[esp+0B4h+var_70], ebx
lea	eax, [esp+0B4h+var_A2]
test	ebp, ebp
jnz	short loc_10014539
lea	eax, [esp+0B4h+var_A1]
mov	[esp+0B4h+var_6C], eax
mov	[esp+0B4h+var_68], ebx
lea	esi, [esp+0B4h+var_64]
test	ebp, ebp
jz	short loc_10014576
mov	eax, edi
call	sub_100143E0
mov	[esp+0B4h+var_9C], eax
test	eax, eax
jz	loc_10014888
mov	[esp+0B4h+var_64], 102h
mov	edx, [eax+4]
mov	[esp+0B4h+var_60], edx
mov	eax, [eax+8]
mov	[esp+0B4h+var_5C], eax
lea	esi, [esp+0B4h+var_58]
mov	eax, [edi+4]
dec	eax
cmp	eax, 5		
ja	loc_10014876	
jmp	ds:off_100148B0[eax*4] 
			
mov	dword ptr [esi], 106h 
mov	[esi+8], ebx
lea	ecx, [esp+0B4h+var_A2]
mov	[esi+4], ecx
mov	dword ptr [esi+0Ch], 104h
mov	[esi+14h], ebx
mov	edx, ecx
mov	[esi+10h], edx
mov	edx, [edi+1Ch]
mov	dword ptr [esi+18h], 10Ah
mov	[esi+20h], ebx
mov	eax, ecx
mov	ecx, [edi+18h]
mov	[esi+1Ch], eax
mov	eax, [edi+24h]
mov	[esi+28h], ecx
mov	ecx, [edi+28h]
mov	dword ptr [esi+24h], 120h
mov	[esi+2Ch], edx
lea	ebp, [esi+24h]
mov	dword ptr [esi+30h], 122h
mov	[esi+34h], eax
mov	[esi+38h], ecx
mov	[esp+0B4h+var_A0], 0
add	esi, 3Ch
jmp	loc_100147D4
			
mov	eax, [edi+18h]	
mov	ecx, [edi+1Ch]
mov	dword ptr [esi], 10Ah
mov	[esi+8], ebx
lea	edx, [esp+0B4h+var_A2]
mov	[esi+4], edx
mov	edx, [edi+24h]
mov	[esi+10h], eax
mov	eax, [edi+28h]
mov	[esi+14h], ecx
mov	ecx, [edi+30h]
mov	dword ptr [esi+0Ch], 130h
mov	[esi+1Ch], edx
mov	edx, [edi+34h]
mov	[esi+20h], eax
mov	eax, [edi+3Ch]
mov	dword ptr [esi+18h], 131h
mov	[esi+28h], ecx
mov	ecx, [edi+40h]
mov	dword ptr [esi+24h], 132h
mov	[esi+2Ch], edx
lea	ebp, [esi+0Ch]
mov	dword ptr [esi+30h], 11h
mov	[esi+34h], eax
mov	[esi+38h], ecx
mov	[esp+0B4h+var_A0], ebx
add	esi, 3Ch
jmp	loc_100147D4
			
mov	eax, [edi+64h]	
mov	ecx, [edi+68h]
mov	dword ptr [esi], 10Ah
mov	[esi+8], ebx
lea	edx, [esp+0B4h+var_A2]
mov	[esi+4], edx
mov	edx, [edi+70h]
mov	[esi+10h], eax
mov	eax, [edi+74h]
mov	[esi+14h], ecx
mov	ecx, [edi+7Ch]
mov	dword ptr [esi+0Ch], 130h
mov	[esi+1Ch], edx
mov	edx, [edi+80h]
mov	[esi+20h], eax
mov	eax, [edi+54h]
mov	dword ptr [esi+18h], 131h
mov	[esi+28h], ecx
mov	ecx, [edi+58h]
mov	dword ptr [esi+24h], 132h
mov	[esi+2Ch], edx
lea	ebp, [esi+0Ch]
mov	dword ptr [esi+30h], 11h
mov	[esi+34h], eax
mov	[esi+38h], ecx
mov	[esp+0B4h+var_A0], ebx
add	esi, 3Ch
jmp	loc_100147D4
			
mov	eax, [edi+18h]	
mov	ecx, [edi+1Ch]
mov	dword ptr [esi], 10Ch
mov	[esi+8], ebx
lea	edx, [esp+0B4h+var_A2]
mov	[esi+4], edx
mov	edx, [edi+24h]
mov	[esi+10h], eax
mov	eax, [edi+28h]
mov	[esi+14h], ecx
mov	ecx, [edi+30h]
mov	dword ptr [esi+0Ch], 130h
mov	[esi+1Ch], edx
mov	edx, [edi+34h]
mov	dword ptr [esi+18h], 132h
mov	[esi+20h], eax
mov	[esp+0B4h+var_A0], 2
lea	ebp, [esi+0Ch]
mov	dword ptr [esi+24h], 11h
mov	[esi+28h], ecx
jmp	loc_100147CE
			
mov	edx, [edi+14h]	
mov	dword ptr [esi], 10Ah
mov	[esi+8], ebx
lea	eax, [esp+0B4h+var_A2]
mov	[esi+4], eax
mov	ecx, eax
mov	eax, [edi+18h]
mov	dword ptr [esi+0Ch], 10Ch
mov	[esi+10h], ecx
mov	[esi+14h], ebx
push	offset aNss_use_decode 
mov	[esp+0B8h+var_A0], 3
lea	ebp, [esi+18h]
mov	dword ptr [esi+18h], 180h
mov	[esi+1Ch], edx
mov	[esi+20h], eax
call	ds:PR_GetEnv
add	esp, 4
test	eax, eax
jz	short loc_10014781
mov	ecx, [edi+24h]
mov	edx, [edi+28h]
mov	dword ptr [esi+24h], 181h
mov	[esi+28h], ecx
jmp	short loc_100147CE
push	0
push	0
call	NSS_Get_SEC_OctetStringTemplate_Util
push	eax
lea	eax, [edi+20h]
push	eax
push	0
push	0
call	SEC_ASN1EncodeItem_Util
add	esp, 18h
mov	[esp+0B4h+var_98], eax
test	eax, eax
jnz	short loc_100147BE
mov	eax, [esp+0B4h+var_9C]
test	eax, eax
jz	loc_10014895
push	ebx
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
jmp	loc_10014895
mov	dword ptr [esi+24h], 181h
mov	ecx, [eax+4]
mov	[esi+28h], ecx
mov	edx, [eax+8]
			
mov	[esi+2Ch], edx
add	esi, 30h
			
mov	ecx, esi
lea	eax, [esp+0B4h+var_88]
sub	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	ebx, edx
sub	esi, ebp
shr	ebx, 1Fh
add	ebx, edx
mov	eax, 2AAAAAABh
imul	esi
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
add	esi, edx
jz	short loc_1001480F
push	ebp
call	sub_1002A670
add	esp, 4
add	ebp, 0Ch
dec	esi
jnz	short loc_10014800
mov	edx, [esp+0B4h+arg_8]
lea	ecx, [esp+0B4h+var_94]
push	ecx
push	edx
push	ebx
mov	ebx, [esp+0C0h+var_8C]
lea	eax, [esp+0C0h+var_88]
push	eax
push	0
push	ebx
call	sub_1002A750
mov	esi, eax
mov	eax, [esp+0CCh+var_9C]
add	esp, 18h
test	eax, eax
jz	short loc_10014846
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esp+0B4h+var_98]
test	eax, eax
jz	short loc_10014859
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
test	esi, esi
jnz	short loc_10014895
mov	ecx, [esp+0B4h+var_94]
push	ebx
mov	[edi+0Ch], ecx
call	PK11_ReferenceSlot
mov	[edi+8], eax
mov	eax, [esp+0B8h+var_94]
add	esp, 4
jmp	short loc_10014897
			
			
mov	eax, [esp+0B4h+var_9C] 
test	eax, eax
jz	short loc_10014888
push	ebx
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
			
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 4
			
xor	eax, eax
mov	ecx, [esp+0B4h+var_4]
pop	esi
pop	edi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0A4h
retn
dd offset loc_100145F1	
dd offset loc_1001465C
dd offset loc_100146CA
dd offset loc_10014876
dd offset loc_10014720
align 10h
			
sub	esp, 11Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+11Ch+var_4], eax
mov	eax, [esp+11Ch+arg_0]
mov	[esp+11Ch+var_10C], ecx
mov	ecx, [esp+11Ch+arg_8]
push	ebx
xor	ebx, ebx
mov	[esp+120h+var_104], eax
mov	eax, ecx
push	ebp
mov	ebp, [esp+124h+arg_4]
and	eax, 1
push	ecx
mov	[esp+128h+var_114], ebp
mov	[esp+128h+var_100], ebx
mov	[esp+128h+var_FC], ebx
mov	[esp+128h+var_F8], ebx
mov	[esp+128h+var_F4], 100h
mov	[esp+128h+var_F0], ebx
mov	[esp+128h+var_EC], ebx
mov	[esp+128h+var_E8], 102h
mov	[esp+128h+var_E4], ebx
mov	[esp+128h+var_E0], ebx
mov	[esp+128h+var_DC], 120h
mov	[esp+128h+var_D8], ebx
mov	[esp+128h+var_D4], ebx
mov	[esp+128h+var_D0], 123h
mov	[esp+128h+var_CC], ebx
mov	[esp+128h+var_C8], ebx
mov	[esp+128h+var_C4], 122h
mov	[esp+128h+var_C0], ebx
mov	[esp+128h+var_BC], ebx
mov	[esp+128h+var_B8], 124h
mov	[esp+128h+var_B4], ebx
mov	[esp+128h+var_B0], ebx
mov	[esp+128h+var_AC], 125h
mov	[esp+128h+var_A8], ebx
mov	[esp+128h+var_A4], ebx
mov	[esp+128h+var_A0], 126h
mov	[esp+128h+var_9C], ebx
mov	[esp+128h+var_98], ebx
mov	[esp+128h+var_94], 127h
mov	[esp+128h+var_90], ebx
mov	[esp+128h+var_8C], ebx
mov	[esp+128h+var_88], 128h
mov	[esp+128h+var_84], ebx
mov	[esp+128h+var_80], ebx
mov	[esp+128h+var_7C], 105h
mov	[esp+128h+var_78], ebx
mov	[esp+128h+var_74], ebx
mov	[esp+128h+var_70], 10Ch
mov	[esp+128h+var_6C], ebx
mov	[esp+128h+var_68], ebx
mov	[esp+128h+var_64], 108h
mov	[esp+128h+var_60], ebx
mov	[esp+128h+var_5C], ebx
mov	[esp+128h+var_58], 109h
mov	[esp+128h+var_54], ebx
mov	[esp+128h+var_50], ebx
mov	[esp+128h+var_4C], 107h
mov	[esp+128h+var_48], ebx
mov	[esp+128h+var_44], ebx
mov	[esp+128h+var_40], 1
mov	[esp+128h+var_3C], ebx
mov	[esp+128h+var_38], ebx
mov	[esp+128h+var_34], 2
mov	[esp+128h+var_30], ebx
mov	[esp+128h+var_2C], ebx
mov	[esp+128h+var_28], 170h
mov	[esp+128h+var_24], ebx
mov	[esp+128h+var_20], ebx
mov	[esp+128h+var_1C], 103h
mov	[esp+128h+var_18], ebx
mov	[esp+128h+var_14], ebx
mov	[esp+128h+var_10], 162h
mov	[esp+128h+var_C], ebx
mov	[esp+128h+var_8], ebx
mov	[esp+128h+var_11A], 1
mov	[esp+128h+var_119], bl
mov	[esp+128h+var_110], eax
call	sub_1002A880
add	esp, 4
test	eax, eax
jz	short loc_10014B15
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+11Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 11Ch
retn
push	edi
xor	edi, edi
lea	eax, [esp+128h+var_100]
push	esi
lea	ecx, [ecx+0]
cmp	dword ptr [eax], 120h
jz	short loc_10014B45
inc	edi
add	eax, 0Ch
cmp	edi, 15h
jl	short loc_10014B20
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
jmp	loc_10014D20
lea	esi, [edi+edi*2]
lea	esi, [esp+esi*4+12Ch+var_100]
cmp	esi, ebx
jz	loc_10014C56	
mov	eax, [ebp+4]
dec	eax
cmp	eax, 5		
ja	loc_10014C56	
jmp	ds:off_10014D3C[eax*4] 
			
lea	edx, [esp+12Ch+var_100]	
mov	ecx, esi
sub	ecx, edx
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
mov	edi, 10h
add	eax, edx
mov	ebp, edi
sub	ebp, eax
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+12Ch+var_118], eax
cmp	eax, ebx
jz	short loc_10014BDC
push	edi
lea	ecx, [esp+130h+var_100]
push	ecx
mov	ecx, [esp+134h+var_114]
mov	edx, [ecx+0Ch]
mov	ecx, [ecx+8]
push	edx
push	ecx
push	eax
call	sub_1002A310
add	esp, 14h
cmp	eax, ebx
jz	loc_10014C6A
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	edx, [esp+134h+var_118]
push	1
push	edx
call	PORT_FreeArena_Util
add	esp, 10h
			
xor	eax, eax
jmp	loc_10014D20
			
mov	dword ptr [esi], 130h 
mov	dword ptr [esi+0Ch], 131h
mov	dword ptr [esi+18h], 132h
mov	dword ptr [esi+24h], 11h
mov	dword ptr [esi+30h], 108h
add	edi, 5
mov	ebp, 5
jmp	short loc_10014C4E
			
mov	dword ptr [esi], 130h 
mov	dword ptr [esi+0Ch], 132h
mov	dword ptr [esi+18h], 11h
mov	dword ptr [esi+24h], 10Ch
jmp	short loc_10014C47
			
mov	dword ptr [esi], 180h 
mov	dword ptr [esi+0Ch], 11h
mov	dword ptr [esi+18h], 10Ch
mov	dword ptr [esi+24h], 108h
mov	ebp, 4
add	edi, ebp
cmp	edi, ebx
jnz	loc_10014B89
			
push	0FFFFE001h	
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
jmp	loc_10014D20
lea	eax, [esp+12Ch+var_119]
push	eax
lea	ecx, [esp+130h+var_11A]
push	ecx
mov	ecx, [esp+134h+arg_8]
lea	edx, [edi+edi*2]
lea	eax, [esp+edx*4+134h+var_100]
push	eax
push	ecx
call	sub_1002A8A0
add	esp, 10h
add	edi, eax
cmp	ebp, ebx
jz	short loc_10014CA1
push	esi
call	sub_1002A670
add	esp, 4
add	esi, 0Ch
dec	ebp
jnz	short loc_10014C92
mov	ebp, [esp+12Ch+var_110]
lea	edx, [esp+12Ch+var_108]
push	edx
push	ebp
push	edi
mov	edi, [esp+138h+var_104]
lea	eax, [esp+138h+var_100]
push	eax
push	ebx
push	edi
call	sub_1002A750
mov	ecx, [esp+144h+var_118]
push	1
push	ecx
mov	esi, eax
call	PORT_FreeArena_Util
add	esp, 20h
cmp	esi, ebx
jnz	loc_10014BDC
mov	esi, [esp+12Ch+var_10C]
cmp	esi, ebx
jz	short loc_10014CFE
push	ebp
push	esi
push	edi
call	PK11_ImportPublicKey
mov	eax, [esi+8]
add	esp, 0Ch
cmp	eax, ebx
jz	short loc_10014CFE
push	eax
call	PK11_FreeSlot
add	esp, 4
mov	[esi+8], ebx
mov	[esi+0Ch], ebx
			
mov	eax, [esp+12Ch+var_114]
mov	edx, [eax+14h]
mov	ecx, [esp+12Ch+var_108]
mov	eax, [eax+4]
push	edx
xor	edx, edx
cmp	ebp, ebx
setz	dl
push	ecx
push	edx
push	eax
push	edi
call	sub_10012FF0
add	esp, 14h
			
mov	ecx, [esp+12Ch+var_4]
pop	esi
pop	edi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 11Ch
retn
align 4
dd offset loc_10014BE3	
dd offset loc_10014C56
dd offset loc_10014C0F
dd offset loc_10014C56
dd offset loc_10014C2C
align 10h
public PK11_LoadPrivKey
			
			
mov	eax, [esp+arg_C]
neg	eax
sbb	eax, eax
and	eax, 0FFFFFFFBh
add	eax, 0Ah
cmp	[esp+arg_10], 0
jz	short loc_10014D7A
or	eax, 40h
jmp	short loc_10014D7F
or	eax, 80h
mov	ecx, [esp+arg_0]
push	eax
mov	eax, [esp+4+arg_4]
push	eax
push	ecx
mov	ecx, [esp+0Ch+arg_8]
call	sub_100148D0
add	esp, 0Ch
retn
align 10h
public PK11_GenerateKeyPairWithOpFlags
			
sub	esp, 294h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+294h+var_4], eax
mov	eax, [esp+294h+arg_0]
mov	ecx, [esp+294h+arg_C]
mov	edx, [esp+294h+arg_1C]
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+29Ch+arg_4]
push	esi
mov	esi, [esp+2A0h+arg_8]
mov	[esp+2A0h+var_290], eax
mov	[esp+2A0h+var_27C], ecx
mov	[esp+2A0h+var_264], edx
mov	edx, 1
mov	ecx, 10Ch
mov	eax, 170h
push	edi
mov	edi, [esp+2A4h+arg_10]
mov	[esp+2A4h+var_292], bl
mov	[esp+2A4h+var_291], 1
mov	[esp+2A4h+var_70], 103h
mov	[esp+2A4h+var_6C], ebx
mov	[esp+2A4h+var_68], ebx
mov	[esp+2A4h+var_64], edx
mov	[esp+2A4h+var_60], ebx
mov	[esp+2A4h+var_5C], ebx
mov	[esp+2A4h+var_58], 2
mov	[esp+2A4h+var_54], ebx
mov	[esp+2A4h+var_50], ebx
mov	[esp+2A4h+var_4C], ecx
mov	[esp+2A4h+var_48], ebx
mov	[esp+2A4h+var_44], ebx
mov	[esp+2A4h+var_40], 107h
mov	[esp+2A4h+var_3C], ebx
mov	[esp+2A4h+var_38], ebx
mov	[esp+2A4h+var_34], 108h
mov	[esp+2A4h+var_30], ebx
mov	[esp+2A4h+var_2C], ebx
mov	[esp+2A4h+var_28], 105h
mov	[esp+2A4h+var_24], ebx
mov	[esp+2A4h+var_20], ebx
mov	[esp+2A4h+var_1C], 162h
mov	[esp+2A4h+var_18], ebx
mov	[esp+2A4h+var_14], ebx
mov	[esp+2A4h+var_10], eax
mov	[esp+2A4h+var_C], ebx
mov	[esp+2A4h+var_8], ebx
mov	[esp+2A4h+var_1A8], 121h
mov	[esp+2A4h+var_1A4], ebx
mov	[esp+2A4h+var_1A0], ebx
mov	[esp+2A4h+var_19C], 122h
mov	[esp+2A4h+var_198], ebx
mov	[esp+2A4h+var_194], ebx
mov	[esp+2A4h+var_190], edx
mov	[esp+2A4h+var_18C], ebx
mov	[esp+2A4h+var_188], ebx
mov	[esp+2A4h+var_184], ecx
mov	[esp+2A4h+var_180], ebx
mov	[esp+2A4h+var_17C], ebx
mov	[esp+2A4h+var_178], 106h
mov	[esp+2A4h+var_174], ebx
mov	[esp+2A4h+var_170], ebx
mov	[esp+2A4h+var_16C], 10Ah
mov	[esp+2A4h+var_168], ebx
mov	[esp+2A4h+var_164], ebx
mov	[esp+2A4h+var_160], 10Bh
mov	[esp+2A4h+var_15C], ebx
mov	[esp+2A4h+var_158], ebx
mov	[esp+2A4h+var_154], 104h
mov	[esp+2A4h+var_150], ebx
mov	[esp+2A4h+var_14C], ebx
mov	[esp+2A4h+var_148], eax
mov	[esp+2A4h+var_144], ebx
mov	[esp+2A4h+var_140], ebx
mov	[esp+2A4h+var_220], 130h
mov	[esp+2A4h+var_21C], ebx
mov	[esp+2A4h+var_218], ebx
mov	[esp+2A4h+var_214], 131h
mov	[esp+2A4h+var_210], ebx
mov	[esp+2A4h+var_20C], ebx
mov	[esp+2A4h+var_208], 132h
mov	[esp+2A4h+var_204], ebx
mov	[esp+2A4h+var_1B4], eax
mov	[esp+2A4h+var_DC], eax
mov	[esp+2A4h+var_7C], eax
mov	eax, edi
and	eax, edx
mov	[esp+2A4h+var_268], eax
mov	eax, edi
and	eax, 33h
push	edi
mov	[esp+2A8h+var_200], ebx
mov	[esp+2A8h+var_1FC], edx
mov	[esp+2A8h+var_1F8], ebx
mov	[esp+2A8h+var_1F4], ebx
mov	[esp+2A8h+var_1F0], ecx
mov	[esp+2A8h+var_1EC], ebx
mov	[esp+2A8h+var_1E8], ebx
mov	[esp+2A8h+var_1E4], 106h
mov	[esp+2A8h+var_1E0], ebx
mov	[esp+2A8h+var_1DC], ebx
mov	[esp+2A8h+var_1D8], 10Ah
mov	[esp+2A8h+var_1D4], ebx
mov	[esp+2A8h+var_1D0], ebx
mov	[esp+2A8h+var_1CC], 10Bh
mov	[esp+2A8h+var_1C8], ebx
mov	[esp+2A8h+var_1C4], ebx
mov	[esp+2A8h+var_1C0], 104h
mov	[esp+2A8h+var_1BC], ebx
mov	[esp+2A8h+var_1B8], ebx
mov	[esp+2A8h+var_1B0], ebx
mov	[esp+2A8h+var_1AC], ebx
mov	[esp+2A8h+var_13C], 130h
mov	[esp+2A8h+var_138], ebx
mov	[esp+2A8h+var_134], ebx
mov	[esp+2A8h+var_130], 132h
mov	[esp+2A8h+var_12C], ebx
mov	[esp+2A8h+var_128], ebx
mov	[esp+2A8h+var_124], edx
mov	[esp+2A8h+var_120], ebx
mov	[esp+2A8h+var_11C], ebx
mov	[esp+2A8h+var_118], ecx
mov	[esp+2A8h+var_114], ebx
mov	[esp+2A8h+var_110], ebx
mov	[esp+2A8h+var_10C], 106h
mov	[esp+2A8h+var_108], ebx
mov	[esp+2A8h+var_104], ebx
mov	[esp+2A8h+var_100], 10Ah
mov	[esp+2A8h+var_FC], ebx
mov	[esp+2A8h+var_F8], ebx
mov	[esp+2A8h+var_F4], 10Bh
mov	[esp+2A8h+var_F0], ebx
mov	[esp+2A8h+var_EC], ebx
mov	[esp+2A8h+var_E8], 104h
mov	[esp+2A8h+var_E4], ebx
mov	[esp+2A8h+var_E0], ebx
mov	[esp+2A8h+var_D8], ebx
mov	[esp+2A8h+var_D4], ebx
mov	[esp+2A8h+var_D0], 180h
mov	[esp+2A8h+var_CC], ebx
mov	[esp+2A8h+var_C8], ebx
mov	[esp+2A8h+var_C4], edx
mov	[esp+2A8h+var_C0], ebx
mov	[esp+2A8h+var_BC], ebx
mov	[esp+2A8h+var_B8], ecx
mov	[esp+2A8h+var_B4], ebx
mov	[esp+2A8h+var_B0], ebx
mov	[esp+2A8h+var_AC], 106h
mov	[esp+2A8h+var_A8], ebx
mov	[esp+2A8h+var_A4], ebx
mov	[esp+2A8h+var_A0], 10Ah
mov	[esp+2A8h+var_9C], ebx
mov	[esp+2A8h+var_98], ebx
mov	[esp+2A8h+var_94], 10Bh
mov	[esp+2A8h+var_90], ebx
mov	[esp+2A8h+var_8C], ebx
mov	[esp+2A8h+var_88], 104h
mov	[esp+2A8h+var_84], ebx
mov	[esp+2A8h+var_80], ebx
mov	[esp+2A8h+var_78], ebx
mov	[esp+2A8h+var_74], ebx
mov	[esp+2A8h+var_274], eax
call	sub_1002A880
add	esp, 4
test	eax, eax
jz	short loc_10015261
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10015AE4
cmp	esi, ebx
jz	short loc_1001524F
mov	eax, [esp+2A4h+arg_18]
and	[esp+2A4h+arg_14], eax
cmp	[esp+2A4h+var_290], ebx
jnz	short loc_1001528B
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10015AE4
mov	ecx, [esp+2A4h+var_290]
push	ebp
push	ecx
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jnz	loc_1001533A
call	PK11_GetInternalSlot
mov	[esp+2A4h+var_28C], eax
cmp	[esp+2A4h+var_290], eax
jnz	short loc_100152CA
mov	edx, eax
push	edx
call	PK11_FreeSlot
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
jmp	loc_10015AE4
cmp	eax, ebx
jz	short loc_10015279
mov	eax, [esp+2A4h+var_264]
mov	ecx, [esp+2A4h+var_27C]
mov	edx, [esp+2A4h+var_28C]
push	eax
push	ebx
push	ebx
push	8Ah
push	ecx
push	esi
push	ebp
push	edx
call	PK11_GenerateKeyPairWithOpFlags
mov	esi, eax
mov	eax, [esp+2C4h+var_28C]
push	eax
call	PK11_FreeSlot
add	esp, 24h
cmp	esi, ebx
jz	loc_10015AE4
mov	ecx, [esp+2A4h+var_290]
mov	ebp, [esp+2A4h+var_27C]
push	edi
push	esi
push	ecx
mov	ecx, [ebp+0]
call	sub_100148D0
push	esi
mov	edi, eax
call	SECKEY_DestroyPrivateKey
add	esp, 10h
cmp	edi, ebx
jnz	short loc_10015333
mov	edx, [ebp+0]
push	edx
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	[ebp+0], ebx
mov	eax, edi
jmp	loc_10015AE6
lea	eax, [esp+2A4h+var_292]
push	eax
lea	ecx, [esp+2A8h+var_291]
push	ecx
lea	edx, [esp+2ACh+var_70]
push	edx
push	edi
mov	[esp+2B4h+var_244], ebp
mov	[esp+2B4h+var_240], ebx
mov	[esp+2B4h+var_23C], ebx
mov	[esp+2B4h+var_260], 0FFFFFFFFh
call	sub_1002A8A0
add	esp, 10h
lea	edi, [eax+eax*2]
lea	edi, [esp+edi*4+2A4h+var_70]
cmp	ebp, 10h
ja	loc_100154D2
jz	loc_1001544D
cmp	ebp, ebx
jz	short loc_1001538F
cmp	ebp, 0Ah
jnz	loc_100154E3
mov	ecx, [esi+4]
cmp	ecx, ebx
jz	loc_1001524F
mov	eax, [esi]
mov	[esp+2A4h+var_254], eax
xor	eax, eax
test	ecx, 0FF000000h
jz	short loc_100153BA
mov	edx, ecx
shr	edx, 18h
mov	[esp+2A4h+var_278], dl
mov	eax, 1
jmp	short loc_100153C2
test	ecx, 0FF0000h
jz	short loc_100153CE
mov	edx, ecx
shr	edx, 10h
inc	eax
mov	byte ptr [esp+eax+2A4h+var_27C+3], dl
jnz	short loc_100153D6
test	ecx, 0FF00h
jz	short loc_100153E2
mov	edx, ecx
shr	edx, 8
inc	eax
mov	byte ptr [esp+eax+2A4h+var_27C+3], dl
jnz	short loc_100153E6
cmp	cl, bl
jz	short loc_100153EB
mov	[esp+eax+2A4h+var_278],	cl
inc	eax
lea	ecx, [esp+2A4h+var_254]
mov	[esp+2A4h+var_1A4], ecx
mov	[esp+2A4h+var_194], eax
lea	edx, [esp+2A4h+var_278]
lea	eax, [esp+2A4h+var_190]
lea	ecx, [esp+2A4h+var_1A8]
mov	esi, 1
mov	[esp+2A4h+var_1A8], 121h
mov	[esp+2A4h+var_1A0], 4
mov	[esp+2A4h+var_19C], 122h
mov	[esp+2A4h+var_198], edx
mov	[esp+2A4h+var_288], eax
mov	[esp+2A4h+var_270], ecx
mov	[esp+2A4h+var_28C], esi
jmp	loc_100155E0
mov	edx, [esi+8]
mov	eax, [esi+0Ch]
mov	ecx, [esi+14h]
mov	[esp+2A4h+var_21C], edx
mov	edx, [esi+18h]
mov	[esp+2A4h+var_218], eax
mov	eax, [esi+20h]
mov	[esp+2A4h+var_210], ecx
mov	ecx, [esi+24h]
mov	[esp+2A4h+var_20C], edx
mov	[esp+2A4h+var_204], eax
lea	edx, [esp+2A4h+var_1FC]
lea	eax, [esp+2A4h+var_220]
mov	[esp+2A4h+var_220], 130h
mov	[esp+2A4h+var_214], 131h
mov	[esp+2A4h+var_208], 132h
mov	[esp+2A4h+var_200], ecx
mov	[esp+2A4h+var_288], edx
mov	[esp+2A4h+var_270], eax
mov	[esp+2A4h+var_28C], 2
mov	esi, 11h
jmp	loc_100155E0
cmp	ebp, 20h
jz	loc_1001557F
cmp	ebp, 1040h
jz	short loc_100154F5
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10015AE4
mov	edx, [esi+8]
mov	ecx, [esi+4]
lea	eax, [esp+2A4h+var_C4]
mov	[esp+2A4h+var_288], eax
mov	eax, [esp+2A4h+arg_14]
mov	[esp+2A4h+var_C8], edx
mov	edx, eax
mov	[esp+2A4h+var_CC], ecx
and	edx, 80800h
lea	ecx, [esp+2A4h+var_D0]
mov	[esp+2A4h+var_D0], 180h
mov	[esp+2A4h+var_270], ecx
mov	[esp+2A4h+var_28C], 6
cmp	edx, 80800h
jnz	short loc_1001555B
mov	esi, 1050h
mov	[esp+2A4h+var_260], 1041h
jmp	loc_100155E0
test	eax, 800h
jz	short loc_10015569
mov	esi, 1041h
jmp	short loc_100155E0
mov	esi, 1050h
test	eax, 80000h
jnz	short loc_100155E0
mov	[esp+2A4h+var_260], 1041h
jmp	short loc_100155E0
mov	eax, [esi+8]
mov	ecx, [esi+0Ch]
mov	edx, [esi+14h]
mov	[esp+2A4h+var_138], eax
mov	eax, [esi+18h]
mov	[esp+2A4h+var_134], ecx
mov	[esp+2A4h+var_12C], edx
lea	ecx, [esp+2A4h+var_124]
lea	edx, [esp+2A4h+var_13C]
mov	[esp+2A4h+var_13C], 130h
mov	[esp+2A4h+var_130], 132h
mov	[esp+2A4h+var_128], eax
mov	[esp+2A4h+var_288], ecx
mov	[esp+2A4h+var_270], edx
mov	[esp+2A4h+var_28C], 4
mov	esi, 21h
			
mov	ebp, [esp+2A4h+var_290]
cmp	[ebp+30h], ebx
jnz	short loc_100155F2
push	ebp
call	sub_10035650
add	esp, 4
mov	eax, [ebp+0]
mov	edx, [ebp+40h]
mov	eax, [eax+22h]
lea	ecx, [esp+2A4h+var_238]
push	ecx
push	esi
push	edx
call	eax
add	esp, 0Ch
cmp	[esp+2A4h+var_260], 0FFFFFFFFh
mov	[esp+2A4h+var_290], eax
jz	short loc_1001564C
cmp	eax, ebx
jz	short loc_1001561A
mov	[esp+2A4h+var_230], ebx
mov	eax, [esp+2A4h+var_260]
mov	ecx, [ebp+0]
lea	edx, [esp+2A4h+var_22C]
push	edx
mov	edx, [ebp+40h]
push	eax
mov	eax, [ecx+22h]
push	edx
call	eax
add	esp, 0Ch
test	eax, eax
jnz	short loc_1001564C
mov	ecx, [esp+2A4h+var_230]
or	ecx, [esp+2A4h+var_224]
mov	[esp+2A4h+var_290], ebx
mov	[esp+2A4h+var_230], ecx
jmp	short loc_10015650
			
mov	ecx, [esp+2A4h+var_230]
cmp	[ebp+30h], ebx
jnz	short loc_10015662
push	ebp
call	sub_10035670
mov	ecx, [esp+2A8h+var_230]
add	esp, 4
cmp	[esp+2A4h+var_290], ebx
jnz	short loc_1001566C
cmp	ecx, ebx
jnz	short loc_1001568C
cmp	esi, 21h
ja	loc_1001581C
jz	loc_10015812
dec	esi
jz	loc_10015808
sub	esi, 10h
jnz	short loc_1001568C
mov	ecx, 2800h
			
mov	eax, [esp+2A4h+arg_18]
mov	esi, [esp+2A4h+var_288]
not	eax
and	eax, ecx
or	eax, [esp+2A4h+arg_14]
lea	ecx, [esp+2A4h+var_292]
push	ecx
lea	edx, [esp+2A8h+var_291]
push	edx
mov	[esp+2ACh+var_230], eax
mov	eax, [esp+2ACh+var_274]
push	esi
push	eax
call	sub_1002A8A0
lea	ecx, [eax+eax*2]
lea	esi, [esi+ecx*4]
add	esp, 10h
mov	dword ptr [esi], 10Ch
test	[esp+2A4h+var_230], 80000h
lea	eax, [esp+2A4h+var_291]
jnz	short loc_100156DC
lea	eax, [esp+2A4h+var_292]
mov	[esi+4], eax
mov	eax, 1
mov	[esi+8], eax
mov	dword ptr [esi+0Ch], 106h
test	[esp+2A4h+var_230], 20000h
lea	ecx, [esp+2A4h+var_291]
jnz	short loc_10015700
lea	ecx, [esp+2A4h+var_292]
mov	[esi+10h], ecx
mov	[esi+14h], eax
mov	dword ptr [esi+18h], 10Ah
test	[esp+2A4h+var_230], 2000h
lea	ecx, [esp+2A4h+var_291]
jnz	short loc_1001571F
lea	ecx, [esp+2A4h+var_292]
mov	[esi+1Ch], ecx
mov	[esi+20h], eax
mov	dword ptr [esi+24h], 10Bh
test	[esp+2A4h+var_230], 4000h
lea	ecx, [esp+2A4h+var_291]
jnz	short loc_1001573E
lea	ecx, [esp+2A4h+var_292]
mov	[esi+28h], ecx
mov	[esi+2Ch], eax
mov	dword ptr [esi+30h], 104h
test	[esp+2A4h+var_230], 100h
lea	ecx, [esp+2A4h+var_291]
jnz	short loc_1001575D
lea	ecx, [esp+2A4h+var_292]
mov	[esi+34h], ecx
mov	[esi+38h], eax
add	esi, 3Ch
mov	dword ptr [edi], 10Ch
test	[esp+2A4h+var_230], 80000h
lea	ecx, [esp+2A4h+var_291]
jnz	short loc_1001577E
lea	ecx, [esp+2A4h+var_292]
mov	[edi+4], ecx
mov	[edi+8], eax
mov	dword ptr [edi+0Ch], 107h
test	[esp+2A4h+var_230], 40000h
lea	ecx, [esp+2A4h+var_291]
jnz	short loc_1001579D
lea	ecx, [esp+2A4h+var_292]
mov	[edi+10h], ecx
mov	[edi+14h], eax
mov	dword ptr [edi+18h], 108h
test	[esp+2A4h+var_230], 800h
lea	ecx, [esp+2A4h+var_291]
jnz	short loc_100157BC
lea	ecx, [esp+2A4h+var_292]
mov	[edi+1Ch], ecx
mov	[edi+20h], eax
mov	dword ptr [edi+24h], 105h
test	[esp+2A4h+var_230], 200h
lea	ecx, [esp+2A4h+var_291]
jnz	short loc_100157DB
lea	ecx, [esp+2A4h+var_292]
mov	[edi+28h], ecx
mov	[edi+2Ch], eax
add	edi, 30h
cmp	[esp+2A4h+var_268], ebx
jz	short loc_1001584E
push	ebp
call	sub_10035690
push	eax
push	ebp
mov	[esp+2B0h+var_290], eax
call	sub_10035730
add	esp, 0Ch
mov	[esp+2A4h+var_288], 1
jmp	short loc_1001586B
mov	ecx, 24B00h
jmp	loc_1001568C
mov	ecx, 80000h
jmp	loc_1001568C
sub	esi, 1041h
jz	loc_10015687
sub	esi, 0Fh
jnz	loc_1001568C
cmp	[esp+2A4h+var_260], 1041h
mov	ecx, 80000h
jnz	loc_1001568C
mov	ecx, 82800h
jmp	loc_1001568C
mov	ecx, [ebp+38h]
mov	[esp+2A4h+var_290], ecx
cmp	ecx, ebx
jz	short loc_10015867
push	ebp
call	sub_10035650
add	esp, 4
mov	eax, 1
mov	[esp+2A4h+var_288], ebx
mov	[esp+2A4h+var_274], eax
cmp	[esp+2A4h+var_290], ebx
jnz	short loc_10015887
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10015AE4
lea	edx, [esp+2A4h+var_280]
push	edx
lea	edx, [esp+2A8h+var_70]
sub	edi, edx
mov	eax, 2AAAAAABh
imul	edi
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
lea	ecx, [esp+2A8h+var_284]
push	ecx
push	eax
lea	ecx, [esp+2B0h+var_70]
push	ecx
mov	ecx, [esp+2B4h+var_270]
sub	esi, ecx
mov	eax, 2AAAAAABh
imul	esi
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
mov	edx, [esp+2B4h+var_290]
push	eax
mov	eax, [ebp+0]
mov	eax, [eax+0EEh]
push	ecx
lea	ecx, [esp+2BCh+var_244]
push	ecx
push	edx
call	eax
mov	esi, eax
add	esp, 20h
cmp	esi, ebx
jz	short loc_1001592E
cmp	[esp+2A4h+var_288], ebx
jz	short loc_10015911
mov	ecx, [esp+2A4h+var_290]
push	ecx
push	ebp
call	sub_10035750
add	esp, 8
push	esi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	loc_10015AE4
push	ebp
call	sub_10035670
add	esp, 4
push	esi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	loc_10015AE4
mov	esi, [esp+2A4h+var_274]
cmp	esi, ebx
jz	short loc_1001593F
push	ebp
call	sub_10035670
add	esp, 4
mov	edx, [esp+2A4h+var_284]
push	ebx
push	edx
push	ebp
call	sub_1002A210
add	esp, 0Ch
cmp	eax, 2
jz	short loc_10015963
mov	eax, [esp+2A4h+var_284]
mov	ecx, [esp+2A4h+var_280]
mov	[esp+2A4h+var_284], ecx
mov	[esp+2A4h+var_280], eax
mov	edx, [esp+2A4h+var_284]
mov	eax, [esp+2A4h+var_28C]
push	edx
push	eax
push	ebp
call	sub_10012B60
mov	ecx, [esp+2B0h+var_27C]
add	esp, 0Ch
mov	[ecx], eax
cmp	eax, ebx
jnz	short loc_100159BF
cmp	[esp+2A4h+var_288], ebx
jz	short loc_100159A1
cmp	esi, ebx
jz	short loc_10015993
push	ebp
call	sub_10035650
add	esp, 4
mov	edx, [esp+2A4h+var_290]
push	edx
push	ebp
call	sub_10035750
add	esp, 8
mov	eax, [esp+2A4h+var_284]
push	eax
push	ebp
call	PK11_DestroyObject
mov	ecx, [esp+2ACh+var_280]
push	ecx
push	ebp
call	PK11_DestroyObject
add	esp, 10h
jmp	loc_10015AE4
call	sub_100143E0
mov	edx, [esp+2A4h+var_284]
push	ebx
push	1
push	edx
push	ebp
mov	edi, eax
call	sub_1002A280
mov	[esp+2B4h+var_250], 102h
mov	ecx, [edi+4]
movzx	eax, al
mov	[esp+2B4h+var_24C], ecx
mov	edx, [edi+8]
add	esp, 10h
mov	[esp+2A4h+var_26C], eax
mov	[esp+2A4h+var_248], edx
cmp	esi, ebx
jz	short loc_10015A01
push	ebp
call	sub_10035650
add	esp, 4
mov	edx, [esp+2A4h+var_280]
mov	eax, [ebp+0]
push	1
lea	ecx, [esp+2A8h+var_250]
push	ecx
mov	ecx, [esp+2ACh+var_290]
push	edx
mov	edx, [eax+66h]
push	ecx
call	edx
mov	esi, eax
add	esp, 10h
cmp	esi, ebx
jnz	short loc_10015A47
cmp	[esp+2A4h+var_26C], ebx
jz	short loc_10015A47
mov	edx, [esp+2A4h+var_284]
mov	eax, [ebp+0]
push	1
lea	ecx, [esp+2A8h+var_250]
push	ecx
mov	ecx, [esp+2ACh+var_290]
push	edx
mov	edx, [eax+66h]
push	ecx
call	edx
add	esp, 10h
mov	esi, eax
			
cmp	[esp+2A4h+var_288], ebx
jz	short loc_10015A5D
mov	eax, [esp+2A4h+var_290]
push	eax
push	ebp
call	sub_10035750
add	esp, 8
jmp	short loc_10015A66
push	ebp
call	sub_10035670
add	esp, 4
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
cmp	esi, ebx
jz	short loc_10015AA2
mov	ecx, [esp+2A4h+var_284]
push	ecx
push	ebp
call	PK11_DestroyObject
mov	edx, [esp+2ACh+var_280]
push	edx
push	ebp
call	PK11_DestroyObject
push	esi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	eax, [esp+2BCh+var_27C]
add	esp, 18h
mov	[eax], ebx
jmp	short loc_10015AE4
mov	ecx, [esp+2A4h+var_264]
mov	edx, [esp+2A4h+var_280]
xor	eax, eax
cmp	[esp+2A4h+var_268], ebx
push	ecx
mov	ecx, [esp+2A8h+var_28C]
setz	al
push	edx
push	eax
push	ecx
push	ebp
call	sub_10012FF0
add	esp, 14h
cmp	eax, ebx
jnz	short loc_10015AE6
mov	esi, [esp+2A4h+var_27C]
mov	edx, [esi]
push	edx
call	SECKEY_DestroyPublicKey
mov	eax, [esp+2A8h+var_280]
push	eax
push	ebp
call	PK11_DestroyObject
add	esp, 0Ch
mov	[esi], ebx
			
xor	eax, eax
			
mov	ecx, [esp+2A4h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 294h
retn
align 10h
public PK11_GenerateKeyPairWithFlags
mov	eax, [esp+arg_14]
mov	ecx, [esp+arg_10]
mov	edx, [esp+arg_C]
push	eax
mov	eax, [esp+4+arg_8]
push	0
push	0
push	ecx
mov	ecx, [esp+10h+arg_4]
push	edx
mov	edx, [esp+14h+arg_0]
push	eax
push	ecx
push	edx
call	PK11_GenerateKeyPairWithOpFlags
add	esp, 20h
retn
align 10h
public PK11_GenerateKeyPair
			
mov	eax, [esp+arg_10]
neg	eax
sbb	eax, eax
add	eax, 2
cmp	[esp+arg_14], 0
jz	short loc_10015B47
or	eax, 44h
jmp	short loc_10015B4C
or	eax, 88h
mov	ecx, [esp+arg_18]
mov	edx, [esp+arg_C]
push	ecx
mov	ecx, [esp+4+arg_4]
push	0
push	0
push	eax
mov	eax, [esp+10h+arg_8]
push	edx
mov	edx, [esp+14h+arg_0]
push	eax
push	ecx
push	edx
call	PK11_GenerateKeyPairWithOpFlags
add	esp, 20h
retn
align 10h
public PK11_ImportEncryptedPrivateKeyInfo
			
mov	eax, [esp+arg_14]
test	eax, eax
jnz	short loc_10015B99
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	ecx, [esp+arg_24]
mov	edx, [esp+arg_20]
push	ecx
mov	ecx, [esp+4+arg_1C]
push	0
push	edx
mov	edx, [esp+0Ch+arg_18]
push	ecx
mov	ecx, [esp+10h+arg_C]
push	edx
mov	edx, [esp+14h+arg_8]
push	eax
mov	eax, [esp+18h+arg_10]
push	eax
mov	eax, [esp+1Ch+arg_4]
push	ecx
mov	ecx, [esp+20h+arg_0]
push	edx
push	eax
push	ecx
call	PK11_ImportEncryptedPrivateKeyInfoAndReturnKey
add	esp, 2Ch
retn
align 10h
public PK11_ExportEncryptedPrivKeyInfo
			
			
			
sub	esp, 20h
push	ebx
mov	ebx, [esp+24h+arg_8]
push	ebp
push	esi
push	edi
xor	edi, edi
xor	ebp, ebp
mov	[esp+30h+var_14], edi
mov	[esp+30h+var_20], edi
mov	[esp+30h+var_10], edi
cmp	ebx, edi
jz	loc_10015EA9
mov	esi, [esp+30h+arg_C]
cmp	esi, edi
jz	loc_10015EA9
mov	eax, [esp+30h+arg_10]
mov	edx, [esp+30h+arg_4]
push	eax
push	edi
push	edi
lea	ecx, [esp+3Ch+var_14]
push	ecx
push	edi
push	edi
push	edx
call	sub_1002E8B0
add	esp, 1Ch
mov	[esp+30h+var_1C], eax
test	eax, eax
jz	loc_10015EB6
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+30h+var_18], eax
test	eax, eax
jz	short loc_10015C5C
push	28h
push	eax
call	PORT_ArenaZAlloc_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	short loc_10015C64
or	esi, 0FFFFFFFFh
jmp	loc_10015E3D
mov	edi, [esp+30h+arg_0]
mov	eax, [esp+30h+var_18]
mov	[ebp+0], eax
test	edi, edi
jnz	short loc_10015C76
mov	edi, [esi+8]
mov	ecx, [esp+30h+var_14]
push	ecx
call	PK11_AlgtagToMechanism
mov	ecx, [esi+8]
add	esp, 4
cmp	edi, ecx
jz	short loc_10015C9B
push	eax
push	ecx
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jz	short loc_10015C9B
mov	edi, [esi+8]
			
mov	edx, [esp+30h+arg_14]
mov	eax, [esp+30h+var_1C]
push	edx
push	0
push	ebx
push	eax
push	edi
call	PK11_PBEKeyGen
mov	edi, eax
add	esp, 14h
test	edi, edi
jnz	short loc_10015CBF
or	esi, 0FFFFFFFFh
jmp	loc_10015E3D
mov	edx, [esp+30h+var_1C]
push	ebx
lea	ecx, [esp+34h+var_20]
push	ecx
push	edx
call	PK11_GetPBECryptoMechanism
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jnz	short loc_10015CDE
or	esi, eax
jmp	loc_10015E3D
push	eax
call	PK11_GetPadMechanism
mov	[esp+34h+var_C], eax
mov	eax, [esp+34h+var_20]
xor	ecx, ecx
add	esp, 4
cmp	eax, ecx
jz	short loc_10015D05
mov	ecx, [eax+4]
mov	[esp+30h+var_8], ecx
mov	edx, [eax+8]
mov	[esp+30h+var_4], edx
jmp	short loc_10015D0D
mov	[esp+30h+var_8], ecx
mov	[esp+30h+var_4], ecx
mov	eax, [esi+8]
cmp	[edi+8], eax
jz	short loc_10015D5D
mov	ecx, [edi]
push	edi
push	106h
push	ecx
push	eax
call	sub_100321F0
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jnz	short loc_10015D52
mov	eax, [edi+8]
push	4Ah
push	esi
push	eax
xor	ecx, ecx
call	sub_100148D0
add	esp, 0Ch
mov	[esp+30h+var_10], eax
test	eax, eax
jnz	short loc_10015D4E
or	esi, 0FFFFFFFFh
jmp	loc_10015E3D
mov	esi, eax
jmp	short loc_10015D5D
push	edi
call	PK11_FreeSymKey
add	esp, 4
mov	edi, ebx
			
mov	[esp+30h+arg_8], 0
mov	edx, [esi+8]
push	edx
call	sub_10035650
mov	eax, [esi+8]
mov	ecx, [eax]
mov	eax, [eax+38h]
mov	ecx, [ecx+0F2h]
lea	edx, [esp+34h+arg_8]
push	edx
mov	edx, [esi+0Ch]
push	0
push	edx
mov	edx, [edi+4]
push	edx
lea	edx, [esp+44h+var_C]
push	edx
push	eax
call	ecx
mov	edx, [esi+8]
push	edx
mov	ebx, eax
call	sub_10035670
add	esp, 20h
test	ebx, ebx
jz	short loc_10015DAD
or	esi, 0FFFFFFFFh
jmp	loc_10015E3D
mov	eax, [esp+30h+arg_8]
mov	ecx, [esp+30h+var_18]
push	eax
push	ecx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[ebp+20h], eax
test	eax, eax
jnz	short loc_10015DCB
or	esi, 0FFFFFFFFh
jmp	short loc_10015E3D
mov	edx, [esi+8]
push	edx
call	sub_10035650
mov	eax, [esi+8]
mov	ecx, [eax]
mov	eax, [eax+38h]
mov	ecx, [ecx+0F2h]
lea	edx, [esp+34h+arg_8]
push	edx
mov	edx, [ebp+20h]
push	edx
mov	edx, [esi+0Ch]
push	edx
mov	edx, [edi+4]
push	edx
lea	edx, [esp+44h+var_C]
push	edx
push	eax
call	ecx
mov	edx, [esi+8]
push	edx
mov	ebx, eax
call	sub_10035670
mov	eax, [esp+50h+arg_8]
add	esp, 20h
mov	[ebp+24h], eax
test	ebx, ebx
jz	short loc_10015E19
or	esi, 0FFFFFFFFh
jmp	short loc_10015E3D
cmp	[esp+30h+arg_8], 0
jnz	short loc_10015E25
or	esi, 0FFFFFFFFh
jmp	short loc_10015E3D
mov	ecx, [esp+30h+var_1C]
mov	eax, [esp+30h+var_18]
push	ecx
lea	edx, [ebp+4]
push	edx
push	eax
call	SECOID_CopyAlgorithmID_Util
add	esp, 0Ch
mov	esi, eax
			
mov	eax, [esp+30h+var_20]
test	eax, eax
jz	short loc_10015E58
push	1
push	eax
call	SECITEM_ZfreeItem_Util
add	esp, 8
mov	[esp+30h+var_20], 0
test	edi, edi
jz	short loc_10015E65
push	edi
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esp+30h+var_10]
test	eax, eax
jz	short loc_10015E76
push	eax
call	SECKEY_DestroyPrivateKey
add	esp, 4
mov	ecx, [esp+30h+var_1C]
push	1
push	ecx
call	SECOID_DestroyAlgorithmID_Util
add	esp, 8
cmp	esi, 0FFFFFFFFh
jnz	short loc_10015E9F
mov	eax, [esp+30h+var_18]
test	eax, eax
jz	short loc_10015E9D
push	1
push	eax
call	PORT_FreeArena_Util
add	esp, 8
xor	ebp, ebp
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 20h
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 20h
retn
public PK11_ExportEncryptedPrivateKeyInfo
mov	eax, [esp+arg_C]
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_14]
push	edi
push	eax
xor	ebx, ebx
call	PK11_FindKeyByAnyCert
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10015F09
mov	ecx, [esp+0Ch+arg_10]
mov	edx, [esp+0Ch+arg_8]
mov	eax, [esp+0Ch+arg_4]
push	edi
push	ecx
mov	ecx, [esp+14h+arg_0]
push	esi
push	edx
push	eax
push	ecx
call	PK11_ExportEncryptedPrivKeyInfo
push	esi
mov	edi, eax
call	SECKEY_DestroyPrivateKey
add	esp, 1Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
public PK11_CopyTokenPrivKeyToSessionPrivKey
mov	eax, [esp+arg_0]
push	edi
mov	edi, [esp+4+arg_4]
test	eax, eax
jz	short loc_10015F37
cmp	eax, [edi+8]
jz	short loc_10015F37
push	8Ah
push	edi
push	eax
xor	ecx, ecx
call	sub_100148D0
add	esp, 0Ch
test	eax, eax
jnz	short loc_10015FA7
			
mov	eax, [edi+14h]
push	ebx
push	esi
mov	esi, [edi+8]
push	eax
push	1
push	esi
call	PK11_Authenticate
push	esi
call	sub_10035650
mov	eax, [edi+0Ch]
mov	ecx, [esi]
lea	edx, [esp+1Ch+arg_0]
push	edx
mov	edx, [esi+38h]
push	1
push	offset dword_100A2A94
push	eax
mov	eax, [ecx+56h]
push	edx
call	eax
push	esi
mov	ebx, eax
call	sub_10035670
add	esp, 28h
test	ebx, ebx
jz	short loc_10015F8D
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	esi
pop	ebx
xor	eax, eax
pop	edi
retn
mov	ecx, [edi+14h]
mov	edx, [esp+0Ch+arg_0]
mov	eax, [edi+4]
push	ecx
push	edx
push	1
push	eax
push	esi
call	sub_10012FF0
add	esp, 14h
pop	esi
pop	ebx
pop	edi
retn
align 10h
sub	esp, 10h
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	edi
call	ds:PR_Now
xor	edi, edi
mov	[esp+1Ch+var_8], eax
mov	[esp+1Ch+var_4], edx
mov	[esp+1Ch+var_10], edi
cmp	[esi+12Ch], edi
jz	short loc_10015FDE
xor	ebx, ebx
mov	[esp+1Ch+arg_4], edi
jmp	short loc_1001600B
mov	eax, [esp+1Ch+arg_4]
cmp	eax, edi
jnz	short loc_10015FFD
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10016000
sub	eax, edx
mov	ebx, eax
xor	eax, eax
cmp	[esp+1Ch+arg_C], edi
setnz	al
inc	eax
mov	[esp+1Ch+var_C], eax
lea	esp, [esp+0]
cmp	[esp+1Ch+arg_8], 0
jnz	short loc_10016030
push	esi
call	sub_10035650
add	esp, 4
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+var_C]
mov	ecx, [esi]
mov	ecx, [ecx+4Ah]
push	ebx
push	edx
push	eax
push	ebp
call	ecx
add	esp, 10h
cmp	[esp+1Ch+arg_8], 0
mov	edi, eax
mov	dword ptr [esi+134h], 0
jnz	short loc_10016062
push	esi
call	sub_10035670
add	esp, 4
cmp	edi, 0B0h
ja	short loc_10016091
jz	short loc_1001609A
test	edi, edi
jz	short loc_100160E8
cmp	edi, 0A0h
jnz	short loc_100160CF
push	0FFFFE00Fh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
mov	eax, 0FFFFFFFEh
pop	ebx
add	esp, 10h
retn
mov	eax, edi
sub	eax, 0B3h
jnz	short loc_100160CA
cmp	ebp, [esi+38h]
jnz	short loc_100160CF
mov	eax, [esp+1Ch+var_10]
mov	edx, eax
inc	eax
mov	[esp+1Ch+var_10], eax
test	edx, edx
jnz	short loc_100160CF
push	edx
push	esi
call	sub_10036D20
add	esp, 8
test	eax, eax
jnz	short loc_100160E1
mov	eax, [esi+38h]
test	eax, eax
jz	short loc_100160CF
mov	ebp, eax
jmp	loc_10016020
sub	eax, 4Dh
jz	short loc_100160F0
			
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
pop	edi
pop	ebp
pop	ebx
add	esp, 10h
retn
mov	eax, dword_100BA190
mov	[esi+68h], eax
mov	ecx, [esp+1Ch+var_8]
mov	edx, [esp+1Ch+var_4]
pop	edi
pop	ebp
mov	[esi+70h], ecx
mov	[esi+74h], edx
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 10h
public PK11_CheckUserPassword
sub	esp, 8
push	ebx
push	ebp
push	esi
push	edi
call	ds:PR_Now
mov	esi, [esp+18h+arg_0]
cmp	dword ptr [esi+12Ch], 0
mov	ebp, eax
mov	[esp+18h+var_4], edx
jz	short loc_10016136
xor	edi, edi
xor	ebx, ebx
jmp	short loc_1001616B
mov	ebx, [esp+18h+arg_4]
test	ebx, ebx
jnz	short loc_10016156
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
mov	eax, ebx
lea	edx, [eax+1]
jmp	short loc_10016160
align 10h
			
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10016160
sub	eax, edx
mov	edi, eax
cmp	dword ptr [esi+24h], 0
jnz	short loc_10016191
test	edi, edi
jz	loc_10016218
push	0FFFFE00Fh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
push	esi
call	sub_10035650
mov	eax, [esi]
mov	ecx, [esi+38h]
mov	edx, [eax+4Eh]
push	ecx
call	edx
mov	eax, [esi]
mov	ecx, [esi+38h]
mov	edx, [eax+4Ah]
push	edi
push	ebx
push	1
push	ecx
call	edx
push	esi
mov	edi, eax
mov	dword ptr [esi+134h], 0
call	sub_10035670
add	esp, 1Ch
test	edi, edi
jz	short loc_10016206
cmp	edi, 0A0h
jz	short loc_100161EC
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
push	0FFFFE00Fh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, 0FFFFFFFEh
pop	ebx
add	esp, 8
retn
mov	eax, dword_100BA190
mov	ecx, [esp+18h+var_4]
mov	[esi+68h], eax
mov	[esi+70h], ebp
mov	[esi+74h], ecx
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
align 10h
public PK11_Logout
push	esi
mov	esi, [esp+4+arg_0]
push	edi
push	esi
call	sub_10035650
mov	eax, [esi]
mov	ecx, [esi+38h]
mov	edx, [eax+4Eh]
push	ecx
call	edx
push	esi
mov	edi, eax
mov	dword ptr [esi+134h], 0
call	sub_10035670
add	esp, 0Ch
test	edi, edi
jz	short loc_10016275
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
public PK11_SetSlotPWValues
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_8]
or	dword ptr [eax+44h], 20000000h
mov	[eax+60h], ecx
mov	[eax+64h], edx
mov	eax, [eax+4]
push	eax
call	SECMOD_UpdateModule
pop	ecx
retn
align 10h
public PK11_GetSlotPWValues
mov	eax, [esp+arg_0]
mov	ecx, [eax+60h]
push	esi
mov	esi, [esp+4+arg_4]
mov	[esi], ecx
mov	edx, [eax+64h]
push	edi
mov	edi, [esp+8+arg_8]
mov	[edi], edx
test	dword ptr [eax+44h], 20000000h
jnz	short loc_100162ED
call	PK11_GetInternalKeySlot
test	eax, eax
jz	short loc_100162ED
mov	ecx, [eax+60h]
mov	[esi], ecx
mov	edx, [eax+64h]
push	eax
mov	[edi], edx
call	PK11_FreeSlot
add	esp, 4
			
pop	edi
pop	esi
retn
public PK11_CheckSSOPassword
push	ebp
push	esi
mov	esi, [esp+8+arg_0]
push	esi
call	sub_10035690
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_10016318
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
cmp	dword ptr [esi+12Ch], 0
push	edi
jz	short loc_10016328
xor	eax, eax
xor	edx, edx
jmp	short loc_10016359
mov	edx, [esp+0Ch+arg_4]
test	edx, edx
jnz	short loc_10016344
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	eax, edx
lea	edi, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10016350
sub	eax, edi
mov	ecx, [esi]
push	eax
push	edx
mov	edx, [ecx+4Ah]
push	0
push	ebp
call	edx
add	esp, 10h
mov	dword ptr [esi+134h], 0
test	eax, eax
jz	short loc_100163A5
cmp	eax, 0A0h
jz	short loc_10016391
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	edi, 0FFFFFFFFh
jmp	short loc_100163A7
push	0FFFFE00Fh
call	PORT_SetError_Util
add	esp, 4
mov	edi, 0FFFFFFFEh
jmp	short loc_100163A7
xor	edi, edi
			
mov	eax, [esi]
mov	ecx, [eax+4Eh]
push	ebp
call	ecx
push	ebp
push	esi
mov	dword ptr [esi+134h], 0
call	sub_10035750
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebp
retn
align 10h
public PK11_InitPin
push	ecx
cmp	[esp+4+arg_8], 0
mov	[esp+4+var_4], 0FFFFFFFFh
jnz	short loc_100163E7
mov	[esp+4+arg_8], offset byte_100A1623
push	ebx
mov	ebx, [esp+8+arg_4]
push	ebp
push	esi
push	edi
test	ebx, ebx
jnz	short loc_100163F8
mov	ebx, offset byte_100A1623
mov	eax, [esp+14h+arg_8]
lea	edx, [eax+1]
nop
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10016400
sub	eax, edx
mov	[esp+14h+arg_4], eax
mov	eax, ebx
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10016412
mov	esi, [esp+14h+arg_0]
sub	eax, edx
push	esi
mov	ebp, eax
call	sub_10035690
mov	edi, eax
xor	eax, eax
add	esp, 4
cmp	edi, eax
jnz	short loc_10016452
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	edi
mov	dword ptr [esi+134h], 0
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
cmp	[esi+12Ch], eax
jz	short loc_10016466
xor	ebp, ebp
mov	[esp+14h+arg_4], eax
xor	ebx, ebx
mov	[esp+14h+arg_8], eax
mov	ecx, [esi]
mov	edx, [ecx+4Ah]
push	ebp
push	ebx
push	eax
push	edi
call	edx
xor	ebx, ebx
add	esp, 10h
mov	[esi+134h], ebx
cmp	eax, ebx
jz	short loc_10016495
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	ebp, [esp+1Ch+var_4]
add	esp, 8
jmp	short loc_100164B0
mov	ecx, [esp+14h+arg_4]
mov	edx, [esp+14h+arg_8]
mov	eax, [esi]
mov	eax, [eax+2Ah]
push	ecx
push	edx
push	edi
call	eax
add	esp, 0Ch
cmp	eax, ebx
jnz	short loc_10016480
xor	ebp, ebp
mov	ecx, [esi]
mov	edx, [ecx+4Eh]
push	edi
call	edx
push	edi
push	esi
mov	[esi+134h], ebx
call	sub_10035750
add	esp, 0Ch
cmp	ebp, ebx
jnz	short loc_10016508
push	1
push	esi
call	sub_10036D20
add	esp, 8
cmp	[esi+24h], ebx
jz	short loc_10016508
push	esi
call	sub_10035650
mov	ecx, [esp+18h+arg_4]
mov	edx, [esp+18h+arg_8]
mov	eax, [esi]
push	ecx
mov	ecx, [esi+38h]
push	edx
mov	edx, [eax+4Ah]
push	1
push	ecx
call	edx
push	esi
mov	[esi+134h], ebx
call	sub_10035670
add	esp, 18h
			
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
pop	ecx
retn
public PK11_ChangePW
sub	esp, 8
mov	eax, [esp+8+arg_0]
push	ebx
mov	ebx, [esp+0Ch+arg_8]
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	[esp+18h+var_4], 0FFFFFFFFh
mov	[esp+18h+var_8], ebp
cmp	[eax+12Ch], ebp
jnz	short loc_1001654D
cmp	ebx, ebp
jnz	short loc_1001653E
mov	ebx, offset byte_100A1623
mov	edi, [esp+18h+arg_4]
cmp	edi, ebp
jnz	short loc_10016551
mov	edi, offset byte_100A1623
jmp	short loc_10016551
mov	edi, [esp+18h+arg_4]
			
cmp	ebx, ebp
jz	short loc_1001656D
mov	eax, ebx
lea	edx, [eax+1]
lea	ebx, [ebx+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10016560
sub	eax, edx
mov	[esp+18h+var_8], eax
cmp	edi, ebp
jz	short loc_10016581
mov	eax, edi
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10016576
sub	eax, edx
mov	ebp, eax
mov	ecx, [esp+18h+arg_0]
push	ecx
call	sub_10035690
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_100165AC
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
mov	ecx, [esp+18h+var_8]
mov	edx, [esp+18h+arg_0]
mov	eax, [edx]
mov	edx, [eax+2Eh]
push	ecx
push	ebx
push	ebp
push	edi
push	esi
call	edx
add	esp, 14h
test	eax, eax
jnz	short loc_100165CB
xor	edi, edi
jmp	short loc_100165DE
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	edi, [esp+20h+var_4]
add	esp, 8
push	esi
mov	esi, [esp+1Ch+arg_0]
push	esi
call	sub_10035750
push	1
push	esi
call	sub_10036D20
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
public PK11_SetPasswordFunc
mov	eax, [esp+arg_0]
mov	dword_100BA198,	eax
retn
align 10h
public PK11_LogoutAll
push	ecx
push	esi
call	SECMOD_GetDefaultModuleListLock
mov	esi, eax
mov	[esp+8+var_4], esi
test	esi, esi
jz	loc_100166AF
push	ebp
push	esi
call	SECMOD_GetReadLock
add	esp, 4
call	SECMOD_GetDefaultModuleList
mov	ebp, eax
test	ebp, ebp
jz	short loc_100166A5
push	ebx
push	edi
lea	esp, [esp+0]
mov	eax, [ebp+4]
xor	edi, edi
cmp	[eax+2Ch], edi
jle	short loc_1001669C
lea	ebx, [ebx+0]
mov	eax, [eax+28h]
mov	esi, [eax+edi*4]
push	esi
call	sub_10035650
mov	ecx, [esi]
mov	edx, [esi+38h]
mov	eax, [ecx+4Eh]
push	edx
call	eax
push	esi
mov	ebx, eax
mov	dword ptr [esi+134h], 0
call	sub_10035670
add	esp, 0Ch
test	ebx, ebx
jz	short loc_1001668F
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
mov	eax, [ebp+4]
inc	edi
cmp	edi, [eax+2Ch]
jl	short loc_10016650
mov	esi, [esp+14h+var_4]
mov	ebp, [ebp+0]
test	ebp, ebp
jnz	short loc_10016640
pop	edi
pop	ebx
push	esi
call	SECMOD_ReleaseReadLock
add	esp, 4
pop	ebp
pop	esi
pop	ecx
retn
align 10h
public PK11_GetMinimumPwdLength
mov	eax, [esp+arg_0]
mov	eax, [eax+78h]
retn
align 10h
public PK11_ProtectedAuthenticationPath
mov	eax, [esp+arg_0]
mov	eax, [eax+12Ch]
retn
align 10h
public PK11_NeedPWInit
push	esi
push	edi
call	PK11_GetInternalKeySlot
mov	esi, eax
cmp	dword ptr [esi+24h], 0
jz	short loc_10016715
push	esi
call	PK11_NeedUserInit
add	esp, 4
test	eax, eax
jz	short loc_1001670F
push	esi
mov	edi, 1
call	PK11_FreeSlot
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
cmp	dword ptr [esi+24h], 0
jnz	short loc_10016722
push	esi
call	PK11_NeedUserInit
add	esp, 4
test	eax, eax
jz	short loc_100166FC
push	esi
xor	edi, edi
call	PK11_FreeSlot
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public PK11_IsLoggedIn
			
sub	esp, 14h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+14h+var_4], eax
cmp	dword_100BAB8C,	0
push	ebx
push	ebp
push	esi
mov	esi, [esp+20h+arg_0]
mov	ebx, [esi+60h]
mov	ebp, [esi+64h]
push	edi
mov	edi, [esp+24h+arg_4]
jnz	short loc_10016779
push	1
call	ds:PR_SecondsToInterval
add	esp, 4
mov	dword_100BAB8C,	eax
test	dword ptr [esi+44h], 20000000h
jnz	short loc_1001679A
call	PK11_GetInternalKeySlot
test	eax, eax
jz	short loc_1001679A
mov	ebx, [eax+60h]
mov	ebp, [eax+64h]
push	eax
call	PK11_FreeSlot
add	esp, 4
			
test	edi, edi
jz	short loc_100167B6
mov	eax, dword_100BA1A0
test	eax, eax
jz	short loc_100167B6
push	edi
push	esi
call	eax 
add	esp, 8
test	eax, eax
jz	loc_10016884
			
cmp	ebx, 1
jnz	short loc_10016812
call	ds:PR_Now
mov	ebx, eax
push	0
mov	edi, edx
mov	eax, ebp
cdq
push	3938700h
push	edx
push	eax
call	sub_1009FFA0
add	eax, [esi+70h]
adc	edx, [esi+74h]
cmp	edx, edi
jg	short loc_1001680C
jl	short loc_100167E6
cmp	eax, ebx
jnb	short loc_1001680C
push	esi
call	sub_10035650
mov	eax, [esi]
mov	ecx, [esi+38h]
mov	edx, [eax+4Eh]
push	ecx
call	edx
push	esi
mov	dword ptr [esi+134h], 0
call	sub_10035670
add	esp, 0Ch
jmp	short loc_10016812
			
mov	[esi+70h], ebx
mov	[esi+74h], edi
			
push	esi
call	sub_10035650
mov	ebp, dword_100BAB8C
mov	edi, [esi+134h]
add	esp, 4
call	ds:PR_IntervalNow
mov	ebx, eax
test	edi, edi
jz	short loc_10016847
sub	eax, edi
cmp	eax, ebp
jnb	short loc_10016847
mov	ecx, [esi+138h]
mov	[esp+24h+var_10], ecx
xor	edi, edi
jmp	short loc_10016870
			
mov	edx, [esi]
mov	ecx, [esi+38h]
mov	edx, [edx+3Eh]
lea	eax, [esp+24h+var_14]
push	eax
push	ecx
call	edx
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10016870
mov	eax, [esp+24h+var_10]
mov	[esi+138h], eax
mov	[esi+134h], ebx
			
push	esi
call	sub_10035670
add	esp, 4
test	edi, edi
jz	short loc_10016899
mov	dword ptr [esi+38h], 0
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+14h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 14h
retn
mov	eax, [esp+24h+var_10]
cmp	eax, 1
jz	short loc_100168AC
cmp	eax, 2
jbe	short loc_10016884
cmp	eax, 4
ja	short loc_10016884
mov	ecx, [esp+24h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
mov	eax, 1
call	@__security_check_cookie@4 
add	esp, 14h
retn
align 10h
			
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+24h], 0
jz	short loc_100168F2
mov	ecx, [esp+arg_4]
push	ecx
push	eax
call	PK11_IsLoggedIn
add	esp, 8
test	eax, eax
jnz	short loc_100168F2
mov	eax, 1
retn
			
xor	eax, eax
retn
align 10h
			
push	ebx
push	ebp
push	esi
mov	esi, [esp+0Ch+arg_0]
push	esi
or	ebx, 0FFFFFFFFh
xor	ebp, ebp
call	PK11_NeedUserInit
add	esp, 4
test	eax, eax
jz	short loc_1001692C
push	0FFFFE000h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
or	eax, ebx
pop	ebx
retn
push	0
push	esi
call	PK11_IsLoggedIn
add	esp, 8
test	eax, eax
jz	short loc_1001696D
mov	eax, dword_100BA19C
test	eax, eax
jz	short loc_1001696D
mov	ecx, [esp+0Ch+arg_C]
push	ecx
push	esi
call	eax 
add	esp, 8
test	eax, eax
jnz	short loc_10016967
push	0FFFFE00Fh
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
			
push	edi
mov	edi, edi
			
mov	eax, dword_100BA198
test	eax, eax
jz	loc_10016A54
mov	edx, [esp+10h+arg_C]
push	edx
push	ebp
push	esi
call	eax 
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	loc_10016A54
cmp	dword ptr [esi+12Ch], 0
mov	ebp, 1
jz	short loc_10016A0D
mov	ecx, offset aRetry 
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_100169C6
test	dl, dl
jz	short loc_100169C2
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_100169C6
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_100169A6
xor	eax, eax
jmp	short loc_100169CB
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_100169DD
push	edi
lea	ebx, [eax-2]
call	PORT_Free_Util
add	esp, 4
jmp	short loc_10016970
mov	ecx, offset aAuth 
mov	eax, edi
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10016A04
test	dl, dl
jz	short loc_10016A00
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10016A04
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_100169E4
xor	eax, eax
jmp	short loc_10016A09
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_10016A7F
mov	eax, [esp+10h+arg_14]
mov	ecx, [esp+10h+arg_10]
mov	edx, [esp+10h+arg_4]
push	eax
push	ecx
push	edi
push	edx
call	sub_10015FB0
mov	ebx, eax
mov	eax, edi
add	esp, 10h
lea	edx, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10016A30
sub	eax, edx
push	eax		
push	0		
push	edi		
call	memset
push	edi
call	PORT_Free_Util
add	esp, 10h
cmp	ebx, 0FFFFFFFEh
jz	loc_10016970
			
test	ebx, ebx
jnz	short loc_10016A8C
push	esi
call	PK11_IsFriendly
add	esp, 4
test	eax, eax
jnz	short loc_10016A9D
mov	eax, [esi+13Ch]
push	eax
mov	eax, [eax+28h]
push	eax
call	sub_100487C0
add	esp, 8
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
push	edi
xor	ebx, ebx
call	PORT_Free_Util
add	esp, 4
jmp	short loc_10016A58
test	ebp, ebp
jnz	short loc_10016A9D
push	0FFFFE00Fh
call	PORT_SetError_Util
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+24h], 0
push	edi
mov	edi, [esi+60h]
jz	loc_10016B45
test	dword ptr [esi+44h], 20000000h
jnz	short loc_10016AE1
call	PK11_GetInternalKeySlot
test	eax, eax
jz	short loc_10016AE1
mov	edi, [eax+60h]
push	eax
call	PK11_FreeSlot
add	esp, 4
			
push	ebx
mov	ebx, [esp+0Ch+arg_4]
push	ebx
push	esi
call	PK11_IsLoggedIn
add	esp, 8
test	eax, eax
jz	short loc_10016B30
cmp	edi, 0FFFFFFFFh
jnz	short loc_10016B44
cmp	dword_100BA194,	0
jz	short loc_10016B0C
mov	eax, dword_100BA190
cmp	eax, [esi+68h]
jz	short loc_10016B44
push	esi
call	sub_10035650
mov	ecx, [esi]
mov	edx, [esi+38h]
mov	eax, [ecx+4Eh]
push	edx
call	eax
push	esi
mov	dword ptr [esi+134h], 0
call	sub_10035670
add	esp, 0Ch
mov	ecx, [esi+38h]
push	0
push	0
push	ebx
push	1
push	ecx
push	esi
call	sub_10016900
add	esp, 18h
			
pop	ebx
pop	edi
pop	esi
retn
align 10h
public PK11_Authenticate
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+24h], 0
push	edi
jz	short loc_10016B86
mov	edi, [esp+8+arg_8]
push	edi
push	esi
call	PK11_IsLoggedIn
add	esp, 8
test	eax, eax
jnz	short loc_10016B86
mov	ecx, [esi+38h]
push	eax
push	eax
mov	eax, [esp+10h+arg_4]
push	edi
push	eax
push	ecx
push	esi
call	sub_10016900
add	esp, 18h
pop	edi
pop	esi
retn
			
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
push	edi
push	esi
xor	edi, edi
call	PK11_IsFriendly
add	esp, 4
test	eax, eax
jnz	short loc_10016BD9
cmp	[esi+24h], edi
jz	short loc_10016BD4
mov	edi, [esp+8+arg_8]
push	edi
push	esi
call	PK11_IsLoggedIn
add	esp, 8
test	eax, eax
jnz	short loc_10016BD4
mov	ecx, [esi+38h]
push	eax
push	eax
mov	eax, [esp+10h+arg_4]
push	edi
push	eax
push	ecx
push	esi
call	sub_10016900
add	esp, 18h
pop	edi
pop	esi
retn
			
pop	edi
xor	eax, eax
pop	esi
retn
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
mov	eax, [esp+4]
push	eax
call	sub_1004B8F0
add	esp, 4
test	eax, eax
jnz	short loc_10016BF5
or	eax, 0FFFFFFFFh
retn
mov	ecx, [esp+8]
mov	edx, [ecx+8]
push	edx
push	eax
mov	eax, [ecx]
call	eax
add	esp, 8
neg	eax
sbb	eax, eax
retn
align 10h
sub	esp, 20h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+20h+var_4], eax
mov	eax, [esp+20h+arg_0]
push	ebx
push	ebp
mov	ebp, [esp+28h+arg_4]
push	esi
add	eax, 0F9h
push	edi
mov	edi, edx
mov	[esp+30h+Src], eax
lea	esi, [eax+1]
mov	dl, [eax]
inc	eax
test	dl, dl
jnz	short loc_10016C38
sub	eax, esi
mov	esi, eax
mov	[esp+30h+var_1C], esi
test	ecx, ecx
jz	short loc_10016C5A
mov	ebx, [ecx+8]
test	ebx, ebx
jz	short loc_10016C5A
mov	ebp, [ecx+4]
jmp	loc_10016CFF
			
test	edi, edi
jz	short loc_10016C6D
mov	ebx, [edi+8]
test	ebx, ebx
jz	short loc_10016C6D
mov	ebp, [edi+4]
jmp	loc_10016CFF
			
test	ebp, ebp
jz	loc_10016D48
mov	edi, [ebp+8]
test	edi, edi
jz	loc_10016D48
mov	ecx, ds:dword_100A2ADC
mov	edx, ds:dword_100A2AE0
mov	ebp, [ebp+4]
lea	eax, [edi-4]
mov	[esp+30h+var_18], ecx
mov	[esp+30h+var_14], edx
lea	ecx, [esp+30h+var_F]
test	eax, eax
jns	short loc_10016CA4
xor	eax, eax
mov	esi, eax
cmp	eax, edi
jge	short loc_10016CE6
lea	ebx, [ebx+0]
mov	dl, [esi+ebp]
movzx	eax, dl
shr	eax, 4
cmp	eax, 0Ah
jge	short loc_10016CC3
add	eax, 30h
jmp	short loc_10016CC6
add	eax, 57h
mov	[ecx], al
movsx	eax, dl
and	eax, 0Fh
cmp	eax, 0Ah
jge	short loc_10016CD8
add	eax, 30h
jmp	short loc_10016CDB
add	eax, 57h
mov	[ecx+1], al
inc	esi
add	ecx, 2
cmp	esi, edi
jl	short loc_10016CB0
lea	ebp, [esp+30h+var_18]
mov	ebx, ebp
mov	byte ptr [ecx],	0
lea	ecx, [ebx+1]
mov	al, [ebx]
inc	ebx
test	al, al
jnz	short loc_10016CF2
mov	esi, [esp+30h+var_1C]
sub	ebx, ecx
			
lea	eax, [ebx+esi+2]
push	eax
call	PORT_Alloc_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10016D55
mov	ecx, [esp+30h+Src]
push	esi		
push	ecx		
push	edi		
call	memcpy
add	esi, edi
push	ebx		
mov	byte ptr [esi],	3Ah
inc	esi
push	ebp		
push	esi		
call	memcpy
add	esp, 18h
mov	eax, edi
pop	edi
mov	byte ptr [esi+ebx], 0
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+20h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 20h
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
mov	ecx, [esp+30h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 20h
retn
align 10h
sub	esp, 0Ch
push	ebp
mov	ebp, [esp+10h+arg_0]
test	ebp, ebp
jnz	short loc_10016D83
xor	eax, eax
pop	ebp
add	esp, 0Ch
retn
push	edi
mov	edi, [esp+14h+arg_4]
test	edi, edi
jnz	short loc_10016D94
pop	edi
xor	eax, eax
pop	ebp
add	esp, 0Ch
retn
push	esi
push	0
push	ebp
mov	esi, 3
call	sub_100168D0
add	esp, 8
test	eax, eax
jz	short loc_10016DAE
mov	esi, 2
mov	eax, [esp+18h+arg_8]
push	esi
push	eax
push	ebp
call	sub_1002C6E0
add	esp, 0Ch
test	eax, eax
jnz	loc_10016E8A
cmp	esi, 2
jnz	loc_10016E9F
push	edi
call	CERT_ExtractPublicKey
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_10016E9F
mov	[esp+18h+var_C], 0
mov	[esp+18h+var_8], 0
mov	[esp+18h+var_4], 0
mov	eax, [esi+4]
dec	eax
cmp	eax, 5		
ja	loc_10016E96	
jmp	ds:off_10016EA8[eax*4] 
			
mov	[esp+18h+var_C], 120h 
mov	ecx, [esi+18h]
mov	[esp+18h+var_8], ecx
mov	eax, [esi+1Ch]
jmp	short loc_10016E5B
			
mov	[esp+18h+var_C], 11h 
mov	edx, [esi+3Ch]
mov	[esp+18h+var_8], edx
mov	eax, [esi+40h]
jmp	short loc_10016E5B
			
mov	[esp+18h+var_C], 11h 
mov	eax, [esi+30h]
mov	[esp+18h+var_8], eax
mov	eax, [esi+34h]
jmp	short loc_10016E5B
			
mov	[esp+18h+var_C], 181h 
mov	ecx, [esi+24h]
mov	[esp+18h+var_8], ecx
mov	eax, [esi+28h]
			
mov	[esp+18h+var_4], eax
test	eax, eax
jz	short loc_10016E96 
lea	edx, [esp+18h+var_C]
push	edx
call	sub_1002A670
push	1
lea	eax, [esp+20h+var_C]
push	eax
push	ebp
call	sub_1002C4F0
add	esp, 10h
test	eax, eax
jz	short loc_10016E96 
push	esi
call	SECKEY_DestroyPublicKey
add	esp, 4
pop	esi
pop	edi
mov	eax, 1
pop	ebp
add	esp, 0Ch
retn
			
push	esi		
call	SECKEY_DestroyPublicKey
add	esp, 4
			
pop	esi
pop	edi
xor	eax, eax
pop	ebp
add	esp, 0Ch
retn
dd offset loc_10016E21	
dd offset loc_10016E96
dd offset loc_10016E35
dd offset loc_10016E96
dd offset loc_10016E49
sub	esp, 0Ch
mov	ecx, [esp+0Ch+arg_4]
mov	edx, [esp+0Ch+arg_0]
push	esi
push	1
lea	eax, [esp+14h+var_C]
push	eax
push	ecx
push	edx
xor	esi, esi
push	esi
mov	[esp+24h+var_C], 102h
mov	[esp+24h+var_8], 0
mov	[esp+24h+var_4], 0
call	sub_1002A310
add	esp, 14h
test	eax, eax
jz	short loc_10016F03
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
mov	ecx, [esp+10h+var_4]
mov	edx, [esp+10h+var_8]
test	ecx, ecx
jz	short loc_10016F3D
xor	eax, eax
mov	esi, 1
test	ecx, ecx
jle	short loc_10016F3D
lea	ebx, [ebx+0]
cmp	byte ptr [eax+edx], 0
jnz	short loc_10016F3B
inc	eax
cmp	eax, ecx
jl	short loc_10016F20
push	edx
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
xor	esi, esi
			
push	edx
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
sub	esp, 1Ch
push	ebp
push	esi
call	sub_1004A850
push	ebx
mov	ebp, eax
call	sub_10036730
mov	ecx, [eax+24h]
add	esp, 4
test	ecx, ecx
jz	short loc_10016F87
mov	edx, [esp+24h+arg_0]
push	edx
push	ecx
push	eax
call	sub_1004E620
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10016F9C
pop	esi
pop	ebp
add	esp, 1Ch
retn
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
pop	esi
xor	eax, eax
pop	ebp
add	esp, 1Ch
retn
push	edi
push	2
push	0
push	ebp
push	esi
push	0
call	sub_1004A230
mov	edi, eax
add	esp, 14h
test	edi, edi
jnz	short loc_10016FC5
push	esi
call	sub_1004E6D0
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebp
add	esp, 1Ch
retn
push	edi
call	sub_10045FA0
add	esp, 4
mov	[esp+28h+var_1C], eax
test	eax, eax
jnz	short loc_10016FE8
push	edi
call	sub_10049400
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebp
add	esp, 1Ch
retn
mov	edi, [esp+28h+arg_8]
test	edi, edi
jz	short loc_10017043
cmp	dword ptr [esi+0Ch], 0
jz	short loc_10017043
mov	ecx, [esi+0Ch]
mov	[esp+28h+var_C], 3
mov	[esp+28h+var_8], ecx
lea	esi, [ecx+1]
mov	dl, [ecx]
inc	ecx
test	dl, dl
jnz	short loc_10017008
mov	edx, [eax+2Ch]
sub	ecx, esi
mov	[esp+28h+var_4], ecx
mov	ecx, [eax+28h]
lea	eax, [esp+28h+var_18]
push	eax
mov	[esp+2Ch+var_14], ecx
mov	[esp+2Ch+var_10], edx
mov	edx, [esp+2Ch+arg_4]
push	ebx
lea	ecx, [esp+30h+var_C]
mov	[esp+30h+var_18], 102h
call	sub_10016C10
add	esp, 8
mov	[edi], eax
			
push	1
lea	ecx, [esp+2Ch+var_1C]
push	ecx
push	ebp
call	sub_100480B0
mov	edx, [esp+34h+var_1C]
push	edx
call	sub_1004B900
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 1Ch
retn
align 10h
			
push	ecx
mov	ecx, [esp+4+arg_8]
push	ebx
mov	ebx, [esp+8+arg_0]
push	ebp
push	esi
push	edi
mov	edi, [esp+14h+arg_4]
lea	eax, [esp+14h+var_4]
push	eax
push	ecx
push	edi
mov	[esp+20h+var_4], 0
call	sub_10016F50
mov	ebp, [esp+20h+var_4]
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10017118
test	ebp, ebp
jz	short loc_100170D0
mov	eax, [esi+154h]
test	eax, eax
jz	short loc_100170B6
mov	[esi+158h], eax
mov	edx, [esi]
push	ebp
push	edx
call	PORT_ArenaStrdup_Util
push	ebp
mov	[esi+154h], eax
call	PORT_Free_Util
add	esp, 0Ch
xor	ebp, ebp
cmp	dword ptr [esi+17Ch], 0
jnz	short loc_10017105
push	ebx
call	PK11_ReferenceSlot
mov	[esi+17Ch], eax
mov	[esi+180h], edi
mov	dword ptr [esi+184h], 1
movzx	eax, word ptr [ebx+80h]
add	esp, 4
mov	[esi+178h], eax
mov	ecx, [esi]
push	0Ch
push	ecx
call	PORT_ArenaAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_1001713A
test	ebp, ebp
jz	short loc_10017125
push	ebp
call	PORT_Free_Util
add	esp, 4
test	esi, esi
jz	short loc_10017132
push	esi
call	CERT_DestroyCertificate
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
xor	eax, eax
push	edi
mov	[edi], eax
push	esi
mov	[edi+4], eax
push	ebx
mov	[edi+8], eax
call	sub_10029030
add	esp, 0Ch
test	eax, eax
jnz	short loc_100171B8
lea	edx, [esp+14h+var_4]
push	edx
push	esi
call	CERT_IsCACert
add	esp, 8
test	eax, eax
jz	short loc_100171B8
mov	eax, [esp+14h+arg_4]
push	eax
push	ebx
mov	ebp, 8
call	sub_10016EC0
add	esp, 8
test	eax, eax
jz	short loc_100171A0
cmp	dword ptr [esi+170h], 0
jz	short loc_100171A0
push	1011h
push	ebx
mov	ebp, 18h
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jz	short loc_100171A0
or	dword ptr [edi+8], 8
			
mov	al, byte ptr [esp+14h+var_4]
test	al, 4
jz	short loc_100171AA
or	[edi], ebp
test	al, 2
jz	short loc_100171B1
or	[edi+4], ebp
test	al, 1
jz	short loc_100171B8
or	[edi+8], ebp
			
mov	ecx, [esp+14h+arg_4]
push	ecx
push	esi
push	ebx
call	sub_10016D70
add	esp, 0Ch
test	eax, eax
jz	short loc_100171D2
or	dword ptr [edi], 40h
or	dword ptr [edi+4], 40h
push	esi
call	sub_1003D8D0
push	esi
mov	[esi+160h], edi
call	sub_1003D990
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
public PK11_GetCertFromPrivateKey
			
			
mov	eax, [esp+arg_0]
push	esi
mov	esi, [eax+8]
mov	eax, [eax+0Ch]
push	1
push	eax
push	esi
call	sub_1002C6E0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1001721C
push	0FFFFD003h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
push	0
push	eax
push	esi
call	sub_10017070
add	esp, 0Ch
pop	esi
retn
align 10h
mov	eax, [esp+8]
mov	ecx, [eax+4]
mov	eax, [eax]
push	ecx
mov	ecx, [esp+8]
lea	edx, [ecx+3Ch]
push	edx
push	ecx
call	eax
add	esp, 0Ch
retn
align 10h
public PK11_TraverseSlotCerts
			
			
sub	esp, 14h
push	esi
call	sub_1004A850
mov	esi, eax
mov	eax, [esp+18h+arg_8]
push	eax
push	1
push	0
push	0
call	sub_1002C850
mov	ecx, [esp+28h+arg_0]
mov	edx, [esp+28h+arg_4]
mov	[esp+28h+var_14], ecx
lea	ecx, [esp+28h+var_C]
push	ecx
lea	eax, [esp+2Ch+var_14]
push	offset loc_10016BE0
push	esi
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_C], offset	loc_10017230
mov	[esp+34h+var_4], eax
call	sub_100475B0
add	esp, 1Ch
xor	eax, eax
pop	esi
add	esp, 14h
retn
align 10h
			
push	ecx
push	esi
push	edi
mov	edi, eax
push	edi
call	PK11_GetWindow
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_1001736F
push	ebx
lea	eax, ds:0[esi*4]
push	eax
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
mov	[esp+10h+var_4], ebx
test	ebx, ebx
jz	loc_1001736E
push	esi
push	ebx
push	edi
call	sub_10051290
add	esp, 0Ch
test	esi, esi
jz	short loc_10017365
push	ebp
mov	edi, ebx
mov	ebp, esi
lea	ecx, [ecx+0]
mov	ecx, [edi]
push	0
push	ecx
call	sub_100497B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_10017349
cmp	dword ptr [ebx], 0
mov	esi, ebx
jz	short loc_10017340
lea	ebx, [ebx+0]
mov	edx, [esp+14h+arg_0]
cmp	[esi], edx
jnz	short loc_10017338
mov	eax, [edi]
mov	ecx, [esp+14h+arg_4]
push	eax
push	ecx
call	sub_10049B90
add	esp, 8
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_10017320
push	ebx
call	sub_1004E7B0
add	esp, 4
mov	edx, [edi]
push	edx
call	sub_1004B900
push	eax
call	CERT_DestroyCertificate
add	esp, 8
add	edi, 4
dec	ebp
jnz	short loc_10017300
mov	ebx, [esp+14h+var_4]
pop	ebp
push	ebx
call	sub_10050550
add	esp, 4
pop	ebx
pop	edi
pop	esi
pop	ecx
retn
align 10h
public PK11_FindCertFromNickname
			
sub	esp, 14h
push	ebx
push	ebp
push	edi
xor	edi, edi
mov	[esp+20h+var_C], edi
call	sub_1004A850
mov	ebx, eax
mov	eax, [esp+20h+Str]
push	eax
mov	[esp+24h+var_8], ebx
mov	[esp+24h+var_14], edi
call	PORT_Strdup_Util
mov	ebp, eax
add	esp, 4
mov	[esp+20h+var_10], ebp
cmp	ebp, edi
jnz	short loc_100173BB
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
push	esi
push	3Ah		
push	ebp		
call	ds:strchr
mov	esi, eax
add	esp, 8
cmp	esi, edi
jz	short loc_10017409
lea	ecx, [esi+1]
push	ebp
push	ebx
mov	[esp+2Ch+Str], ecx
mov	byte ptr [esi],	0
call	sub_10047110
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_100173FA
mov	edx, [edi+34h]
push	edx
call	PK11_ReferenceSlot
mov	[esp+28h+var_14], eax
mov	byte ptr [esi],	3Ah
jmp	short loc_1001741A
push	0FFFFE041h
call	PORT_SetError_Util
mov	byte ptr [esi],	3Ah
jmp	short loc_1001741A
call	PK11_GetInternalKeySlot
push	eax
mov	[esp+28h+var_14], eax
call	sub_10036730
mov	edi, eax
			
add	esp, 4
test	edi, edi
jz	loc_1001759E
mov	esi, [esp+24h+var_14]
push	esi
call	PK11_IsPresent
add	esp, 4
test	eax, eax
jz	short loc_1001747D
mov	eax, [esp+24h+arg_4]
push	eax
push	1
push	esi
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jnz	short loc_1001747D
push	eax
push	ebx
call	sub_10049F10
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10017479
push	0
push	0
call	sub_10050FA0
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	short loc_1001749D
push	esi
call	sub_10049AD0
mov	ebp, [esp+28h+var_10]
add	esp, 4
mov	esi, [esp+24h+var_14]
			
test	esi, esi
jz	short loc_1001748A
push	esi
call	PK11_FreeSlot
add	esp, 4
push	ebp
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
mov	ecx, [esp+24h+Str]
push	ebp
push	ecx
push	ebx
call	sub_100484A0
push	esi
push	edi
mov	eax, ebp
call	sub_100172B0
mov	eax, [esp+38h+Str]
lea	edx, [esp+38h+var_4]
push	edx
push	0
push	2
push	eax
push	0
push	edi
call	sub_1004D170
mov	ebx, eax
push	0
push	ebx
push	esi
call	sub_1004A450
push	ebx
call	sub_10050550
push	esi
call	PK11_IsInternal
add	esp, 40h
test	eax, eax
jnz	short loc_1001754A
mov	ebx, [esp+24h+Str]
push	40h		
push	ebx		
call	ds:strchr
add	esp, 8
test	eax, eax
jz	short loc_1001754A
push	ebx
call	sub_1003D180
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	short loc_1001754A
mov	ecx, [esp+24h+var_8]
push	ebp
push	ebx
push	ecx
call	sub_10048500
push	esi
push	edi
mov	eax, ebp
call	sub_100172B0
lea	edx, [esp+38h+var_4]
push	edx
push	0
push	2
push	ebx
push	0
push	edi
call	sub_1004D290
mov	edi, eax
push	0
push	edi
push	esi
call	sub_1004A450
push	edi
call	sub_10050550
push	ebx
call	PORT_Free_Util
add	esp, 40h
			
push	0
push	0
push	0
push	esi
call	sub_1004A170
push	esi
mov	edi, eax
call	sub_10049AD0
add	esp, 14h
test	edi, edi
jz	short loc_10017591
push	0
push	offset dword_100A2AD0
push	0
push	edi
call	sub_1004A690
add	esp, 10h
test	eax, eax
jz	short loc_10017588
push	eax
call	sub_1004B900
add	esp, 4
mov	[esp+24h+var_C], eax
push	edi
call	sub_100499A0
add	esp, 4
push	ebp
call	sub_10051450
mov	ebp, [esp+28h+var_10]
add	esp, 4
mov	eax, [esp+24h+var_14]
test	eax, eax
jz	short loc_100175AF
push	eax
call	PK11_FreeSlot
add	esp, 4
push	ebp
call	PORT_Free_Util
mov	eax, [esp+28h+var_C]
add	esp, 4
pop	esi
pop	edi
pop	ebp
pop	ebx
add	esp, 14h
retn
align 10h
sub	esp, 8
push	ebx
mov	ebx, [esp+0Ch+arg_0]
push	ebp
push	esi
push	ebx
call	CERT_GetFirstEmailAddress
mov	esi, eax
add	esp, 4
xor	ebp, ebp
test	esi, esi
jnz	short loc_100175F2
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
push	edi
mov	edi, [esp+18h+arg_8]
cmp	[edi], ebp
jnz	short loc_10017606
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
			
mov	ecx, [edi]
mov	eax, esi
lea	ebx, [ebx+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10017630
test	dl, dl
jz	short loc_1001762C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10017630
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10017610
xor	eax, eax
jmp	short loc_10017635
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_1001766C
call	ds:PR_Now
mov	[esp+18h+var_8], eax
lea	eax, [esp+18h+var_8]
push	eax
push	offset loc_1003D510
push	ebx
mov	[esp+24h+var_4], edx
mov	ebp, 1
call	CERT_DupCertificate
mov	ecx, [edi+4]
add	esp, 4
push	eax
push	ecx
call	CERT_AddCertToListSorted
add	esp, 10h
push	esi
push	ebx
call	CERT_GetNextEmailAddress
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10017680
test	ebp, ebp
jz	short loc_10017606
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
align 10h
public PK11_FindCertsFromEmailAddress
sub	esp, 8
call	SECKEY_NewPrivateKeyList
mov	[esp+8+var_4], eax
test	eax, eax
jz	short loc_100176C1
mov	eax, [esp+8+arg_0]
push	eax
call	sub_1003D180
add	esp, 4
mov	[esp+8+var_8], eax
test	eax, eax
jnz	short loc_100176C7
mov	ecx, [esp+8+var_4]
push	ecx
call	CERT_DestroyCertList
add	esp, 4
xor	eax, eax
add	esp, 8
retn
push	0
lea	edx, [esp+0Ch+var_8]
push	edx
push	offset sub_100175D0
call	PK11_TraverseSlotCerts
add	esp, 0Ch
test	eax, eax
jz	short loc_100176FC
mov	eax, [esp+8+var_4]
push	eax
call	CERT_DestroyCertList
mov	ecx, [esp+0Ch+var_8]
push	ecx
call	PORT_Free_Util
add	esp, 8
xor	eax, eax
add	esp, 8
retn
mov	ecx, [esp+8+var_4]
mov	eax, [ecx]
test	eax, eax
jz	short loc_1001770A
cmp	eax, ecx
jnz	short loc_1001771B
push	ecx
call	CERT_DestroyCertList
add	esp, 4
mov	[esp+8+var_4], 0
mov	edx, [esp+8+var_8]
push	edx
call	PORT_Free_Util
mov	eax, [esp+0Ch+var_4]
add	esp, 4
add	esp, 8
retn
align 10h
public PK11_FindCertsFromNickname
			
sub	esp, 1Ch
push	ebx
push	ebp
xor	ebx, ebx
push	edi
mov	[esp+28h+var_10], ebx
mov	[esp+28h+var_14], ebx
call	sub_1004A850
mov	edi, eax
mov	eax, [esp+28h+Str]
push	eax
mov	[esp+2Ch+var_18], edi
call	PORT_Strdup_Util
mov	ebp, eax
add	esp, 4
mov	[esp+28h+var_8], ebp
cmp	ebp, ebx
jnz	short loc_1001776B
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
push	esi
push	3Ah		
push	ebp		
call	ds:strchr
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jz	short loc_100177BE
lea	ecx, [esi+1]
push	ebp
push	edi
mov	[esp+34h+Str], ecx
mov	[esi], bl
call	sub_10047110
mov	edi, eax
add	esp, 8
cmp	edi, ebx
jz	short loc_100177AB
mov	edx, [edi+34h]
push	edx
call	PK11_ReferenceSlot
mov	ebx, eax
mov	[esp+30h+var_1C], ebx
mov	byte ptr [esi],	3Ah
jmp	short loc_100177D3
push	0FFFFE041h
call	PORT_SetError_Util
mov	[esp+30h+var_1C], ebx
mov	byte ptr [esi],	3Ah
jmp	short loc_100177D3
call	PK11_GetInternalKeySlot
push	eax
mov	[esp+30h+var_1C], eax
call	sub_10036730
mov	ebx, [esp+30h+var_1C]
mov	edi, eax
			
add	esp, 4
test	edi, edi
jz	loc_10017910
mov	eax, [esp+2Ch+arg_4]
push	eax
push	1
push	ebx
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jnz	short loc_10017806
mov	ecx, [esp+2Ch+var_18]
push	eax
push	ecx
call	sub_10049F10
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10017809
push	ebx
jmp	short loc_10017820
push	0
push	0
call	sub_10050FA0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_10017838
mov	edx, [esp+2Ch+var_1C]
push	edx
call	PK11_FreeSlot
push	ebp
call	PORT_Free_Util
add	esp, 8
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
mov	ebp, [esp+2Ch+Str]
mov	eax, [esp+2Ch+var_18]
push	ebx
push	ebp
push	eax
call	sub_100484A0
push	esi
push	edi
mov	eax, ebx
call	sub_100172B0
lea	ecx, [esp+40h+var_C]
push	ecx
push	0
push	2
push	ebp
push	0
push	edi
call	sub_1004D170
mov	ebp, eax
push	0
push	ebp
push	esi
call	sub_1004A450
push	ebp
call	sub_10050550
push	esi
call	PK11_IsInternal
add	esp, 40h
test	eax, eax
jnz	short loc_100178E5
mov	ebp, [esp+2Ch+Str]
push	40h		
push	ebp		
call	ds:strchr
add	esp, 8
test	eax, eax
jz	short loc_100178E5
push	ebp
call	sub_1003D180
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	short loc_100178E5
mov	edx, [esp+2Ch+var_18]
push	ebx
push	ebp
push	edx
call	sub_10048500
push	esi
push	edi
mov	eax, ebx
call	sub_100172B0
lea	eax, [esp+40h+var_C]
push	eax
push	0
push	2
push	ebp
push	0
push	edi
call	sub_1004D290
mov	edi, eax
push	0
push	edi
push	esi
call	sub_1004A450
push	edi
call	sub_10050550
push	ebp
call	PORT_Free_Util
add	esp, 40h
			
push	ebx
call	sub_10051450
push	0
push	0
push	0
push	esi
call	sub_1004A170
mov	edi, eax
push	esi
mov	[esp+44h+var_14], edi
call	sub_10049AD0
mov	ebp, [esp+44h+var_8]
mov	ebx, [esp+44h+var_1C]
add	esp, 18h
jmp	short loc_10017914
mov	edi, [esp+2Ch+var_14]
test	ebx, ebx
jz	short loc_10017921
push	ebx
call	PK11_FreeSlot
add	esp, 4
push	ebp
call	PORT_Free_Util
add	esp, 4
test	edi, edi
jz	loc_100179B1
call	ds:PR_Now
mov	[esp+2Ch+var_8], eax
mov	[esp+2Ch+var_4], edx
call	SECKEY_NewPrivateKeyList
mov	esi, eax
mov	eax, [edi]
mov	[esp+2Ch+var_10], esi
test	eax, eax
jz	short loc_1001798E
push	eax
test	esi, esi
jz	short loc_10017978
call	sub_1004B900
add	esp, 4
test	eax, eax
jz	short loc_10017980
lea	ecx, [esp+2Ch+var_8]
push	ecx
push	offset loc_1003D510
push	eax
push	esi
call	CERT_AddCertToListSorted
add	esp, 10h
jmp	short loc_10017980
call	sub_10046070
add	esp, 4
			
mov	eax, [edi+4]
add	edi, 4
test	eax, eax
jnz	short loc_10017951
mov	edi, [esp+2Ch+var_14]
test	esi, esi
jz	short loc_100179A8
cmp	dword ptr [esi], 0
jnz	short loc_100179A8
push	esi
call	CERT_DestroyCertList
add	esp, 4
mov	[esp+2Ch+var_10], 0
			
push	edi
call	sub_10050550
add	esp, 4
mov	eax, [esp+2Ch+var_10]
pop	esi
pop	edi
pop	ebp
pop	ebx
add	esp, 1Ch
retn
align 10h
			
mov	eax, [esp+arg_0]
push	esi
push	eax
call	CERT_ExtractPublicKey
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_100179D6
pop	esi
retn
mov	eax, [esi+4]
dec	eax
push	edi
cmp	eax, 5		
ja	short loc_10017A57 
jmp	ds:off_10017A68[eax*4] 
			
lea	ecx, [esi+14h]	
push	ecx
call	SECITEM_DupItem_Util
add	esp, 4
push	esi
mov	edi, eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
			
lea	edx, [esi+38h]	
push	edx
call	SECITEM_DupItem_Util
add	esp, 4
push	esi
mov	edi, eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
			
lea	eax, [esi+2Ch]	
push	eax
call	SECITEM_DupItem_Util
add	esp, 4
push	esi
mov	edi, eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
			
lea	ecx, [esi+20h]	
push	ecx
call	SECITEM_DupItem_Util
add	esp, 4
push	esi
mov	edi, eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
			
			
push	esi		
xor	edi, edi
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 4
dd offset loc_10017A03	
dd offset loc_10017A57
dd offset loc_10017A1F
dd offset loc_10017A57
dd offset loc_10017A3B
public PK11_ImportCert
			
sub	esp, 30h
mov	eax, [esp+30h+arg_0]
push	ebx
push	ebp
push	esi
push	edi
push	eax
call	sub_10036730
mov	ebp, [esp+44h+arg_4]
push	ebp
mov	[esp+48h+var_28], eax
call	sub_100179C0
mov	esi, eax
xor	ebx, ebx
add	esp, 8
cmp	esi, ebx
jnz	short loc_10017AB2
xor	esi, esi
mov	[esp+40h+var_2C], esi
jmp	short loc_10017ACB
push	esi
call	PK11_MakeIDFromPubKey
push	1
push	esi
mov	[esp+4Ch+var_2C], eax
call	SECITEM_FreeItem_Util
mov	esi, [esp+4Ch+var_2C]
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_20], ebx
mov	[esp+40h+var_1C], ebx
mov	[esp+40h+var_18], ebx
mov	[esp+40h+var_14], ebx
mov	[esp+40h+var_10], ebx
mov	[esp+40h+var_C], ebx
mov	[esp+40h+var_8], ebx
mov	[esp+40h+var_4], ebx
cmp	esi, ebx
jz	loc_10017C40
cmp	[esp+40h+var_28], ebx
jnz	short loc_10017B0F
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10017C40
mov	ecx, [esp+40h+arg_0]
push	ecx
call	PK11_IsInternal
add	esp, 4
test	eax, eax
jz	short loc_10017B32
mov	eax, [ebp+118h]
cmp	eax, ebx
jz	short loc_10017B32
cmp	[eax], bl
jz	short loc_10017B32
mov	[esp+40h+var_24], eax
			
mov	eax, [ebp+15Ch]
cmp	eax, ebx
jz	short loc_10017B42
mov	[esp+40h+var_30], eax
jmp	short loc_10017B57
push	ebp
call	sub_1004B930
add	esp, 4
mov	[esp+40h+var_30], eax
cmp	eax, ebx
jz	loc_10017C40
mov	edx, [esi+4]
mov	ecx, [esi+8]
push	edx		
push	ecx		
lea	edx, [eax+28h]
mov	eax, [eax]
push	edx		
push	eax		
call	sub_10050C70
mov	eax, [esp+50h+var_30]
add	esp, 10h
cmp	[eax+28h], ebx
jz	loc_10017C40
mov	edi, [esp+40h+arg_8]
mov	ebp, [esp+40h+arg_C]
cmp	edi, ebx
jz	short loc_10017BD9
push	10h
push	ebx
call	sub_100504B0
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jz	loc_10017C3C
mov	ecx, [esp+40h+var_28]
push	ecx
call	sub_1004C2A0
mov	[esi+4], eax
mov	[esi], edi
mov	dword ptr [esi+8], 1
mov	eax, [esp+44h+var_30]
lea	edx, [eax+40h]
push	edx
add	eax, 28h
push	eax
push	ebp
push	ebx
push	esi
call	sub_10050180
push	esi
mov	edi, eax
call	sub_1004E6D0
add	esp, 1Ch
cmp	edi, ebx
jnz	short loc_10017C3C
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+var_24]
push	1
push	ecx
lea	edx, [eax+48h]
push	edx
lea	ecx, [eax+40h]
push	ecx
lea	edx, [eax+38h]
push	edx
mov	edx, [esp+54h+var_28]
lea	ecx, [eax+30h]
push	ecx
push	ebp
add	eax, 28h
push	eax
push	1
push	ebx
push	edx
call	sub_1004DE50
mov	edi, eax
add	esp, 2Ch
cmp	edi, ebx
jnz	short loc_10017C74
call	sub_10050A60
cmp	eax, ds:dword_100A7E64
jnz	short loc_10017C3C
push	0FFFFE08Ah
call	PORT_SetError_Util
mov	eax, [esp+44h+var_2C]
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 30h
retn
			
mov	esi, [esp+40h+var_2C]
			
call	sub_10043350
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
call	PORT_GetError_Util
cmp	eax, 0FFFFE09Bh
jz	short loc_10017C69
push	0FFFFE018h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+40h+var_30]
cmp	[eax+1Ch], ebx
jz	short loc_10017CD1
mov	esi, [eax+1Ch]
mov	edx, [esi+14h]
lea	ecx, [esp+40h+var_20]
push	ecx
push	edx
call	sub_10048AB0
mov	eax, [esp+48h+var_30]
mov	ecx, [esi+14h]
push	eax
push	ecx
call	sub_10048A80
mov	ecx, [esi+14h]
lea	edx, [esp+50h+var_10]
push	edx
lea	eax, [esp+54h+var_20]
push	eax
push	ecx
call	sub_10048AC0
mov	eax, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+var_30]
mov	[edx+1Ch], ebx
mov	[eax+150h], ebx
mov	dword ptr [eax+14Ch], 1
mov	eax, [esp+5Ch+var_30]
add	esp, 1Ch
push	edi
push	eax
call	sub_100494A0
mov	eax, [esp+48h+var_30]
push	eax
call	sub_10046950
add	esp, 0Ch
lea	ecx, [esp+40h+var_30]
push	1
push	ecx
call	sub_1004A850
push	eax
call	sub_100480B0
mov	edx, [esp+4Ch+var_30]
push	edx
call	sub_1004B8D0
mov	eax, [esp+50h+var_30]
push	eax
call	sub_10046070
mov	ecx, [esp+54h+var_2C]
push	1
push	ecx
call	SECITEM_FreeItem_Util
add	esp, 1Ch
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 30h
retn
align 10h
public PK11_ImportDERCert
mov	eax, [esp+arg_4]
push	esi
push	1		
push	0		
push	0		
push	eax		
call	CERT_GetDefaultCertDB
push	eax		
call	CERT_NewTempCertificate
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	short loc_10017D55
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [esp+4+arg_10]
mov	edx, [esp+4+arg_C]
mov	eax, [esp+4+arg_8]
push	edi
push	ecx
mov	ecx, [esp+0Ch+arg_0]
push	edx
push	eax
push	esi
push	ecx
call	PK11_ImportCert
push	esi
mov	edi, eax
call	CERT_DestroyCertificate
add	esp, 18h
mov	eax, edi
pop	edi
pop	esi
retn
			
push	esi
mov	esi, [esp+4+arg_4]
push	edi
mov	edi, [esp+8+arg_0]
cmp	[esi+17Ch], edi
jnz	short loc_10017DD4
mov	eax, [esi+180h]
test	eax, eax
jz	short loc_10017DAB
movzx	ecx, word ptr [edi+80h]
cmp	[esi+178h], ecx
jz	short loc_10017DE7
mov	edx, [esp+8+arg_C]
mov	eax, [esp+8+arg_8]
push	edx
push	eax
push	edi
call	sub_1002C4F0
mov	[esi+180h], eax
movzx	ecx, word ptr [edi+80h]
add	esp, 0Ch
pop	edi
mov	[esi+178h], ecx
pop	esi
retn
mov	edx, [esp+8+arg_C]
mov	eax, [esp+8+arg_8]
push	edx
push	eax
push	edi
call	sub_1002C4F0
add	esp, 0Ch
pop	edi
pop	esi
retn
align 10h
public PK11_FindPrivateKeyFromCert
sub	esp, 1Ch
push	ebx
mov	ebx, [esp+20h+arg_8]
push	esi
mov	esi, [esp+24h+arg_0]
push	edi
mov	edi, [esp+28h+arg_4]
mov	eax, [edi+40h]
mov	ecx, [edi+44h]
push	ebx
lea	edx, [esp+2Ch+var_1C]
push	1
push	esi
mov	[esp+34h+var_1C], 1
mov	[esp+34h+var_18], 11h
mov	[esp+34h+var_14], eax
mov	[esp+34h+var_10], ecx
mov	[esp+34h+var_C], 0
mov	[esp+34h+var_8], edx
mov	[esp+34h+var_4], 4
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jz	short loc_10017E51
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
push	2
lea	eax, [esp+2Ch+var_18]
push	eax
push	edi
push	esi
call	sub_10017D80
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_10017E48
push	ebp
push	ebx
push	esi
call	sub_100168D0
push	3
push	edi
push	esi
mov	ebp, eax
call	sub_1002C6E0
add	esp, 14h
test	eax, eax
jnz	short loc_10017EC3
test	ebp, ebp
jz	short loc_10017EB9
call	PORT_GetError_Util
cmp	eax, 0FFFFD003h
jz	short loc_10017E99
cmp	eax, 0FFFFE09Bh
jnz	short loc_10017EB9
push	ebx
push	1
push	esi
call	PK11_Authenticate
add	esp, 0Ch
test	eax, eax
jnz	short loc_10017EB9
push	3
push	edi
push	esi
call	sub_1002C6E0
add	esp, 0Ch
test	eax, eax
jnz	short loc_10017EC3
			
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
			
push	ebx
push	eax
push	1
push	0
push	esi
call	sub_10012FF0
add	esp, 14h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 1Ch
retn
align 10h
public PK11_KeyForCertExists
			
			
sub	esp, 8
mov	eax, [esp+8+arg_0]
push	ebx
push	esi
push	edi
push	eax
mov	[esp+18h+var_4], 0
call	sub_100179C0
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10017F05
xor	ebx, ebx
jmp	short loc_10017F18
push	esi
call	PK11_MakeIDFromPubKey
push	1
push	esi
mov	ebx, eax
call	SECITEM_FreeItem_Util
add	esp, 0Ch
mov	ecx, [esp+14h+arg_8]
push	ecx
push	1
push	0
push	0FFFFFFFFh
call	PK11_GetAllTokens
add	esp, 10h
mov	edi, eax
mov	[esp+14h+var_8], edi
test	ebx, ebx
jz	loc_1001800B
test	edi, edi
jz	loc_10017FF7
mov	esi, [edi]
test	esi, esi
jz	loc_10017FDB
push	ebp
lea	esp, [esp+0]
mov	edx, [esp+18h+arg_8]
mov	eax, [esi+8]
push	edx
push	eax
call	sub_100168D0
mov	ecx, [esi+8]
push	ebx
push	ecx
mov	ebp, eax
call	sub_10013990
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_10017FBC
test	ebp, ebp
jz	short loc_10017FB4
call	PORT_GetError_Util
cmp	eax, 0FFFFD003h
jz	short loc_10017F8A
cmp	eax, 0FFFFE09Bh
jnz	short loc_10017FB4
mov	edx, [esp+18h+arg_8]
mov	eax, [esi+8]
push	edx
push	1
push	eax
call	PK11_Authenticate
add	esp, 0Ch
test	eax, eax
jnz	short loc_10017FB4
mov	ecx, [esi+8]
push	ebx
push	ecx
call	sub_10013990
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10017FBC
			
mov	esi, [esi]
test	esi, esi
jnz	short loc_10017F50
jmp	short loc_10017FD6
			
mov	edx, [esi+8]
push	edx
call	PK11_ReferenceSlot
mov	[esp+1Ch+var_4], eax
mov	eax, [esp+1Ch+arg_4]
add	esp, 4
test	eax, eax
jz	short loc_10017FD6
mov	[eax], edi
			
mov	edi, [esp+18h+var_8]
pop	ebp
push	1
push	ebx
call	SECITEM_FreeItem_Util
push	edi
call	PK11_FreeSlotList
mov	eax, [esp+20h+var_4]
add	esp, 0Ch
pop	edi
pop	esi
pop	ebx
add	esp, 8
retn
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 8
retn
test	edi, edi
jz	short loc_10018018
push	edi
call	PK11_FreeSlotList
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 8
retn
align 10h
public PK11_KeyForDERCertExists
mov	eax, [esp+arg_0]
push	esi
push	0		
push	0		
push	eax		
call	__CERT_DecodeDERCertificate_0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1001804A
pop	esi
retn
mov	ecx, [esp+4+arg_8]
mov	edx, [esp+4+arg_4]
push	edi
push	ecx
push	edx
push	esi
call	PK11_KeyForCertExists
push	esi
mov	edi, eax
call	CERT_DestroyCertificate
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public PK11_ImportCertForKey
			
push	ecx
mov	eax, [esp+4+arg_8]
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
push	eax
lea	ecx, [esp+10h+var_4]
push	ecx
push	edi
call	PK11_KeyForCertExists
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_100180B9
mov	edx, [esp+0Ch+arg_4]
mov	eax, [esp+0Ch+var_4]
push	0
push	edx
push	eax
push	edi
push	esi
call	PK11_ImportCert
add	esp, 14h
test	eax, eax
jz	short loc_100180C6
push	esi
call	PK11_FreeSlot
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
pop	ecx
retn
push	0FFFFE018h
call	PORT_SetError_Util
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ecx
retn
align 10h
public PK11_ImportDERCertForKey
mov	eax, [esp+arg_0]
push	esi
push	1		
push	0		
push	0		
push	eax		
call	CERT_GetDefaultCertDB
push	eax		
call	CERT_NewTempCertificate
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	short loc_100180F2
pop	esi
retn
mov	ecx, [esp+4+arg_8]
mov	edx, [esp+4+arg_4]
push	edi
push	ecx
push	edx
push	esi
call	PK11_ImportCertForKey
push	esi
mov	edi, eax
call	CERT_DestroyCertificate
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
push	ecx
mov	eax, [esp+4+arg_0]
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_C]
push	edi
push	ebp
xor	edi, edi
push	1
push	edi
push	0FFFFFFFFh
mov	[esp+20h+var_4], edi
mov	[eax], edi
call	PK11_GetAllTokens
mov	ebx, eax
add	esp, 10h
cmp	ebx, edi
jnz	short loc_1001814F
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
push	esi
mov	esi, [ebx]
test	esi, esi
jz	short loc_100181A1
mov	ecx, [esi+8]
push	ebp
push	1
push	ecx
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jnz	short loc_10018185
mov	edx, [esp+14h+arg_8]
mov	eax, [esp+14h+arg_4]
mov	ecx, [esi+8]
push	edx
push	eax
push	ecx
call	sub_1002C4F0
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_10018191
mov	esi, [esi]
test	esi, esi
jnz	short loc_10018156
mov	esi, [esp+14h+var_4]
jmp	short loc_100181A3
mov	edx, [esi+8]
push	edx
call	PK11_ReferenceSlot
add	esp, 4
mov	esi, eax
jmp	short loc_100181A3
mov	esi, edi
			
push	ebx
call	PK11_FreeSlotList
add	esp, 4
test	esi, esi
jnz	short loc_100181B8
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	eax, [esp+14h+arg_0]
mov	[eax], esi
pop	esi
mov	eax, edi
pop	edi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
			
sub	esp, 18h
push	ebx
push	ebp
push	esi
mov	[esp+24h+var_18], 0
call	sub_1004A850
mov	esi, [esp+24h+arg_4]
mov	ebp, eax
mov	eax, [esp+24h+arg_0]
mov	ebx, [eax+13Ch]
test	esi, esi
jz	loc_10018348
cmp	dword ptr [esi+4], 0
jz	loc_10018348
mov	ecx, [esi+8]
test	ecx, ecx
jz	loc_10018348
cmp	dword ptr [esi+18h], 0
jz	loc_10018348
mov	eax, [esi+1Ch]
test	eax, eax
jz	loc_10018348
cmp	ecx, 1000h
ja	loc_10018348
cmp	eax, 14h
ja	loc_10018348
test	ebx, ebx
jnz	short loc_10018254
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 18h
retn
push	edi
push	0
push	0
call	NSS_Get_SEC_IntegerTemplate_Util
push	eax
lea	ecx, [esi+14h]
push	ecx
push	0
push	0
call	SEC_ASN1EncodeItem_Util
mov	edi, eax
add	esp, 18h
test	edi, edi
jz	loc_1001833E
mov	edx, [esi+4]
mov	eax, [esi+8]
mov	[esp+28h+var_8], edx
mov	[esp+28h+var_4], eax
mov	ecx, [edi+4]
mov	[esp+28h+var_10], ecx
mov	edx, [edi+8]
push	ebx
mov	[esp+2Ch+var_C], edx
call	PK11_NeedLogin
add	esp, 4
test	eax, eax
jz	loc_1001832D
lea	ecx, [esp+28h+var_14]
push	ecx
push	3
lea	edx, [esp+30h+var_10]
push	edx
lea	ecx, [esp+34h+var_8]
push	ecx
push	eax
push	ebx
call	sub_1004D400
push	1
push	edi
mov	esi, eax
call	SECITEM_FreeItem_Util
add	esp, 20h
test	esi, esi
jz	short loc_1001832D
push	2
push	0
push	ebp
push	esi
push	0
call	sub_1004A230
mov	edi, eax
add	esp, 14h
test	edi, edi
jz	short loc_1001831C
push	edi
call	sub_10045FA0
add	esp, 4
mov	[esp+28h+var_18], eax
test	eax, eax
jz	short loc_10018324
push	1
lea	edx, [esp+2Ch+var_18]
push	edx
push	ebp
call	sub_100480B0
mov	eax, [esp+34h+var_18]
push	eax
call	sub_1004B8F0
add	esp, 10h
test	eax, eax
jz	short loc_1001832D
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 18h
retn
push	esi
call	sub_1004E6D0
jmp	short loc_1001832A
push	edi
call	sub_10049400
add	esp, 4
			
mov	eax, [esp+28h+var_18]
test	eax, eax
jz	short loc_1001833E
push	eax
call	sub_10046070
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 18h
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 18h
retn
align 10h
sub	esp, 2Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+2Ch+var_4], eax
mov	eax, [esp+2Ch+arg_0]
push	ebx
push	ebp
mov	ebp, [esp+34h+arg_4]
push	esi
push	edi
push	ebp
xor	esi, esi
push	1
mov	edi, ecx
mov	ebx, edx
push	esi
push	0FFFFFFFFh
mov	[esp+4Ch+var_18], eax
mov	[esp+4Ch+var_14], edi
mov	[esp+4Ch+var_20], ebx
mov	[esp+4Ch+var_28], esi
mov	[eax], esi
call	PK11_GetAllTokens
add	esp, 10h
mov	[esp+3Ch+var_24], eax
test	eax, eax
jnz	short loc_100183BD
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+2Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 2Ch
retn
mov	[ebx], esi
mov	ebx, [eax]
mov	[esp+3Ch+var_2C], ebx
test	ebx, ebx
jz	loc_10018479
lea	ecx, [ecx+0]
mov	eax, [ebx+8]
push	ebp
push	1
push	eax
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jnz	short loc_1001844A
mov	esi, [edi]
mov	ecx, [ebx+8]
mov	[esp+3Ch+var_1C], ecx
test	esi, esi
jz	short loc_1001843E
mov	ebx, edi
mov	edx, [esi+0Ch]
mov	eax, [esp+3Ch+var_1C]
push	ebp
push	edx
push	eax
call	sub_100181D0
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_1001842C
lea	ecx, [esp+3Ch+var_10]
push	ecx
push	edi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_10018423
test	[esp+3Ch+var_C], 40h
jnz	short loc_10018459
push	edi
call	CERT_DestroyCertificate
add	esp, 4
mov	esi, [ebx+4]
add	ebx, 4
test	esi, esi
jnz	short loc_100183F2
mov	ebx, [esp+3Ch+var_2C]
mov	edi, [esp+3Ch+var_14]
mov	edx, [esp+3Ch+var_20]
mov	dword ptr [edx], 0
xor	esi, esi
mov	ebx, [ebx]
mov	[esp+3Ch+var_2C], ebx
test	ebx, ebx
jz	short loc_10018475
jmp	loc_100183D0
mov	eax, [esp+3Ch+var_20]
mov	ecx, [esp+3Ch+var_2C]
mov	[eax], esi
mov	edx, [ecx+8]
push	edx
mov	esi, edi
call	PK11_ReferenceSlot
add	esp, 4
mov	[esp+3Ch+var_28], eax
mov	eax, [esp+3Ch+var_24]
push	eax
call	PK11_FreeSlotList
mov	eax, [esp+40h+var_28]
add	esp, 4
test	eax, eax
jz	loc_100183A8
mov	ecx, [esp+3Ch+var_18]
mov	[ecx], eax
mov	ecx, [esp+3Ch+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 2Ch
retn
align 10h
public PK11_FindCertByIssuerAndSN
			
push	ebp
mov	ebp, esp
and	esp, 0FFFFFFF8h
sub	esp, 14h
push	ebx
push	esi
mov	esi, [ebp+arg_4]
push	edi
xor	edi, edi
test	esi, esi
jz	loc_10018602
cmp	[esi+4], edi
jz	loc_10018602
mov	ecx, [esi+8]
test	ecx, ecx
jz	loc_10018602
cmp	[esi+18h], edi
jz	loc_10018602
mov	eax, [esi+1Ch]
test	eax, eax
jz	loc_10018602
cmp	ecx, 1000h
ja	loc_10018602
cmp	eax, 14h
ja	loc_10018602
mov	eax, [ebp+arg_0]
test	eax, eax
jz	short loc_1001850F
mov	[eax], edi
push	0
push	0
call	NSS_Get_SEC_IntegerTemplate_Util
push	eax
lea	eax, [esi+14h]
push	eax
push	0
push	0
call	SEC_ASN1EncodeItem_Util
mov	ebx, eax
add	esp, 18h
test	ebx, ebx
jz	loc_1001860F
mov	ecx, [esi+4]
mov	edx, [esi+8]
mov	[esp+20h+var_8], ecx
mov	[esp+20h+var_4], edx
mov	eax, [ebx+4]
mov	[esp+20h+var_10], eax
mov	ecx, [ebx+8]
mov	[esp+20h+var_C], ecx
call	sub_1004A860
lea	edx, [esp+20h+var_10]
push	edx
lea	ecx, [esp+24h+var_8]
push	ecx
push	eax
call	sub_10046DB0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10018585
push	1
push	ebx
call	SECITEM_FreeItem_Util
push	esi
call	sub_1004B900
add	esp, 0Ch
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
retn
			
test	edi, edi
jz	short loc_10018594
push	edi
call	CERT_DestroyCertificate
add	esp, 4
xor	edi, edi
lea	edx, [esp+20h+var_10]
push	edx
lea	eax, [esp+24h+var_8]
push	eax
call	sub_1004A850
push	eax
call	sub_10047500
add	esp, 0Ch
test	eax, eax
jz	short loc_100185D2
push	eax
call	sub_1004B900
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_100185EE
mov	ecx, [edi+17Ch]
push	ecx
call	PK11_IsPresent
add	esp, 4
test	eax, eax
jz	short loc_10018585
test	edi, edi
jz	short loc_100185EE
mov	esi, [ebp+arg_0]
test	esi, esi
jz	short loc_100185EE
mov	edx, [edi+17Ch]
push	edx
call	PK11_ReferenceSlot
add	esp, 4
mov	[esi], eax
			
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
mov	esp, ebp
pop	ebp
retn
align 10h
			
sub	esp, 1Ch
push	esi
mov	esi, [esp+20h+arg_0]
mov	ecx, [esi+40h]
mov	edx, [esi+44h]
lea	eax, [esp+20h+var_1C]
mov	[esp+20h+var_14], eax
mov	eax, [esi+17Ch]
push	edi
mov	[esp+24h+var_1C], 1
mov	[esp+24h+var_18], 0
mov	[esp+24h+var_10], 4
mov	[esp+24h+var_C], 11h
mov	[esp+24h+var_8], ecx
mov	[esp+24h+var_4], edx
test	eax, eax
jz	short loc_1001869D
push	2
lea	ecx, [esp+28h+var_18]
push	ecx
push	esi
push	eax
call	sub_10017D80
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_1001869D
mov	edx, [esi+17Ch]
push	edx
call	PK11_ReferenceSlot
mov	ecx, [esp+28h+arg_8]
add	esp, 4
mov	[ecx], eax
mov	eax, edi
pop	edi
pop	esi
add	esp, 1Ch
retn
			
mov	edx, [esp+24h+arg_4]
push	ebx
mov	ebx, [esp+28h+arg_8]
push	edx
push	2
lea	eax, [esp+30h+var_18]
push	eax
push	ebx
call	sub_10018120
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_100186F4
cmp	dword ptr [esi+17Ch], 0
jnz	short loc_100186F4
mov	ecx, [ebx]
push	ecx
call	PK11_ReferenceSlot
mov	[esi+17Ch], eax
mov	[esi+180h], edi
mov	dword ptr [esi+184h], 1
movzx	edx, word ptr [eax+80h]
add	esp, 4
mov	[esi+178h], edx
			
pop	ebx
mov	eax, edi
pop	edi
pop	esi
add	esp, 1Ch
retn
align 10h
public PK11_FindKeyByAnyCert
			
sub	esp, 8
mov	ecx, [esp+8+arg_0]
push	ebx
mov	ebx, [esp+0Ch+arg_4]
push	esi
push	edi
lea	eax, [esp+14h+var_8]
push	eax
xor	esi, esi
push	ebx
push	ecx
mov	[esp+20h+var_8], esi
mov	[esp+20h+var_4], esi
call	sub_10018620
mov	edi, eax
add	esp, 0Ch
cmp	edi, esi
jnz	short loc_10018736
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 8
retn
mov	esi, [esp+14h+var_8]
push	ebp
push	ebx
push	esi
call	sub_100168D0
push	3
push	edi
push	esi
mov	ebp, eax
call	sub_1002C6E0
add	esp, 14h
test	eax, eax
jnz	short loc_1001878B
test	ebp, ebp
jz	short loc_1001879E
call	PORT_GetError_Util
cmp	eax, 0FFFFD003h
jz	short loc_1001876B
cmp	eax, 0FFFFE09Bh
jnz	short loc_1001879E
push	ebx
push	1
push	esi
call	PK11_Authenticate
add	esp, 0Ch
test	eax, eax
jnz	short loc_1001879E
push	3
push	edi
push	esi
call	sub_1002C6E0
add	esp, 0Ch
test	eax, eax
jz	short loc_1001879E
push	ebx
push	eax
push	1
push	0
push	esi
call	sub_10012FF0
add	esp, 14h
mov	[esp+18h+var_4], eax
			
pop	ebp
test	esi, esi
jz	short loc_100187AC
push	esi
call	PK11_FreeSlot
add	esp, 4
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebx
add	esp, 8
retn
align 10h
public PK11_TraverseCertsForSubjectInSlot
sub	esp, 0Ch
push	ebx
push	ebp
mov	[esp+14h+var_C], 0
call	sub_1004A850
mov	ebp, eax
mov	eax, [esp+14h+arg_0]
mov	ecx, [eax+58h]
mov	edx, [eax+5Ch]
mov	eax, [esp+14h+arg_4]
push	eax
mov	[esp+18h+var_8], ecx
mov	[esp+18h+var_4], edx
call	sub_10036730
mov	ebx, eax
push	ebx
call	sub_1004DBD0
add	esp, 8
test	eax, eax
jnz	short loc_10018805
pop	ebp
pop	ebx
add	esp, 0Ch
retn
push	esi
push	0
push	ebp
call	sub_10049F10
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10018821
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
push	edi
push	0
push	0
call	sub_10050FA0
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10018848
push	esi
call	sub_10049AD0
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
push	edi
lea	ecx, [esp+20h+var_8]
push	ecx
push	ebp
call	sub_10048440
push	esi
push	ebx
mov	eax, edi
call	sub_100172B0
lea	edx, [esp+30h+var_C]
push	edx
push	0
push	2
lea	eax, [esp+3Ch+var_8]
push	eax
push	0
push	ebx
call	sub_1004D0A0
mov	ebx, eax
push	0
push	ebx
push	esi
call	sub_1004A450
push	ebx
call	sub_10050550
push	edi
call	sub_10051450
add	esp, 40h
push	0
push	0
push	0
push	esi
call	sub_1004A170
push	esi
mov	edi, eax
call	sub_10049AD0
add	esp, 14h
test	edi, edi
jz	short loc_100188EC
cmp	dword ptr [edi], 0
mov	esi, edi
jz	short loc_100188E3
mov	ebx, [esp+1Ch+arg_C]
mov	ebp, [esp+1Ch+arg_8]
mov	ecx, [esi]
push	ecx
call	sub_1004B8F0
add	esp, 4
test	eax, eax
jz	short loc_100188D1
push	ebx
push	eax
call	ebp
add	esp, 8
test	eax, eax
jnz	short loc_100188DB
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_100188B7
jmp	short loc_100188E3
mov	[esp+1Ch+var_C], 0FFFFFFFFh
			
push	edi
call	sub_100499A0
add	esp, 4
mov	eax, [esp+1Ch+var_C]
pop	edi
pop	esi
neg	eax
pop	ebp
sbb	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
public PK11_TraverseCertsForNicknameInSlot
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_4]
push	ebx
push	edi
xor	edi, edi
push	eax
mov	[esp+18h+var_4], edi
mov	[esp+18h+var_8], edi
call	sub_10036730
mov	ebx, eax
push	ebx
call	sub_1004DBD0
add	esp, 8
test	eax, eax
jnz	short loc_1001892E
pop	edi
pop	ebx
add	esp, 0Ch
retn
mov	eax, [esp+14h+arg_0]
mov	ecx, [eax+8]
mov	eax, [eax+4]
cmp	byte ptr [eax+ecx-1], 0
jz	short loc_10018954
push	ecx		
push	eax		
push	5		
push	edi		
call	sub_10050DB0
add	esp, 10h
mov	[esp+14h+var_8], 1
push	ebp
push	esi
mov	[esp+1Ch+var_C], eax
call	sub_1004A850
mov	ebp, eax
push	edi
push	ebp
call	sub_10049F10
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10018983
push	0
push	0
call	sub_10050FA0
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_100189BC
cmp	[esp+1Ch+var_8], 0
jz	short loc_10018997
mov	ecx, [esp+1Ch+var_C]
push	ecx
call	sub_10050550
add	esp, 4
test	esi, esi
jz	short loc_100189A4
push	esi
call	sub_10049AD0
add	esp, 4
test	edi, edi
jz	short loc_100189B1
push	edi
call	sub_10051450
add	esp, 4
pop	esi
pop	ebp
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	edx, [esp+1Ch+var_C]
push	edi
push	edx
push	ebp
call	sub_100484A0
push	esi
push	ebx
mov	eax, edi
call	sub_100172B0
mov	ecx, [esp+30h+var_C]
lea	eax, [esp+30h+var_4]
push	eax
push	0
push	2
push	ecx
push	0
push	ebx
call	sub_1004D170
mov	ebx, eax
push	0
push	ebx
push	esi
call	sub_1004A450
push	ebx
call	sub_10050550
push	edi
call	sub_10051450
add	esp, 40h
push	0
push	0
push	0
push	esi
call	sub_1004A170
push	esi
mov	edi, eax
call	sub_10049AD0
add	esp, 14h
test	edi, edi
jz	short loc_10018A65
cmp	dword ptr [edi], 0
mov	esi, edi
jz	short loc_10018A5C
mov	ebx, [esp+1Ch+arg_C]
mov	ebp, [esp+1Ch+arg_8]
jmp	short loc_10018A30
align 10h
			
mov	edx, [esi]
push	edx
call	sub_1004B8F0
add	esp, 4
test	eax, eax
jz	short loc_10018A4A
push	ebx
push	eax
call	ebp
add	esp, 8
test	eax, eax
jnz	short loc_10018A54
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_10018A30
jmp	short loc_10018A5C
mov	[esp+1Ch+var_4], 0FFFFFFFFh
			
push	edi
call	sub_100499A0
add	esp, 4
cmp	[esp+1Ch+var_8], 0
jz	short loc_10018A79
mov	eax, [esp+1Ch+var_C]
push	eax
call	sub_10050550
add	esp, 4
mov	eax, [esp+1Ch+var_4]
pop	esi
pop	ebp
neg	eax
pop	edi
sbb	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
			
push	ecx
push	ebx
push	ebp
call	sub_1004A850
mov	ebp, eax
mov	eax, [esp+0Ch+arg_0]
push	eax
call	sub_10036730
mov	ebx, eax
push	ebx
call	sub_1004DBD0
add	esp, 8
test	eax, eax
jnz	short loc_10018AB7
pop	ebp
pop	ebx
pop	ecx
retn
push	esi
push	0
push	ebp
call	sub_10049F10
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10018AD1
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
push	edi
push	0
push	0
call	sub_10050FA0
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10018AF6
push	esi
call	sub_10049AD0
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
push	edi
push	ebp
call	sub_100486F0
push	esi
push	ebx
mov	eax, edi
call	sub_100172B0
lea	ecx, [esp+24h+var_4]
push	ecx
push	0
push	2
push	1
push	0
push	ebx
call	sub_1004CFD0
mov	ebx, eax
push	0
push	ebx
push	esi
call	sub_1004A450
push	ebx
call	sub_10050550
push	edi
call	sub_10051450
push	0
push	0
push	0
push	esi
call	sub_1004A170
add	esp, 4Ch
push	esi
mov	edi, eax
call	sub_10049AD0
add	esp, 4
test	edi, edi
jz	short loc_10018B95
cmp	dword ptr [edi], 0
mov	esi, edi
jz	short loc_10018B8C
mov	ebx, [esp+14h+arg_8]
mov	ebp, [esp+14h+arg_4]
lea	ecx, [ecx+0]
mov	edx, [esi]
push	edx
call	sub_1004B8F0
add	esp, 4
test	eax, eax
jz	short loc_10018B7A
push	ebx
push	eax
call	ebp
add	esp, 8
test	eax, eax
jnz	short loc_10018B84
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_10018B60
jmp	short loc_10018B8C
mov	[esp+14h+var_4], 0FFFFFFFFh
			
push	edi
call	sub_100499A0
add	esp, 4
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
neg	eax
pop	ebp
sbb	eax, eax
pop	ebx
pop	ecx
retn
align 10h
public PK11_FindCertFromDERCertItem
			
			
sub	esp, 8
push	esi
push	edi
call	sub_1004A850
mov	esi, [esp+10h+arg_0]
push	esi
call	sub_10036730
mov	edi, eax
mov	eax, [esp+14h+arg_4]
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	eax, [esp+14h+arg_8]
push	eax
push	1
push	esi
mov	[esp+20h+var_8], ecx
mov	[esp+20h+var_4], edx
call	sub_10016B90
add	esp, 10h
test	eax, eax
jz	short loc_10018BFD
push	esi
call	PK11_FreeSlot
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
add	esp, 8
retn
push	0
push	2
lea	ecx, [esp+18h+var_8]
push	ecx
push	0
push	edi
call	sub_1004D600
add	esp, 14h
test	eax, eax
jz	short loc_10018BF5
mov	edx, [eax]
push	0
push	edx
push	esi
call	sub_10017070
add	esp, 0Ch
pop	edi
pop	esi
add	esp, 8
retn
align 10h
			
test	edi, edi
jz	loc_10018CD3
test	eax, eax
jz	loc_10018CD3
push	ebx
push	esi
push	eax
call	sub_100179C0
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	short loc_10018C68
push	ebx
call	PK11_MakeIDFromPubKey
push	1
push	ebx
mov	esi, eax
call	SECITEM_FreeItem_Util
add	esp, 0Ch
test	esi, esi
jnz	short loc_10018C6D
pop	esi
xor	eax, eax
pop	ebx
retn
mov	eax, [esp+8+arg_0]
push	ebp
push	eax
push	edi
call	sub_100168D0
push	esi
push	edi
mov	ebp, eax
call	sub_10013990
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jnz	short loc_10018CC2
test	ebp, ebp
jz	short loc_10018CC2
call	PORT_GetError_Util
cmp	eax, 0FFFFD003h
jz	short loc_10018CA2
cmp	eax, 0FFFFE09Bh
jnz	short loc_10018CC2
mov	ecx, [esp+0Ch+arg_0]
push	ecx
push	1
push	edi
call	PK11_Authenticate
add	esp, 0Ch
test	eax, eax
jnz	short loc_10018CC2
push	esi
push	edi
call	sub_10013990
add	esp, 8
mov	ebx, eax
			
push	1
push	esi
call	SECITEM_ZfreeItem_Util
add	esp, 8
pop	ebp
pop	esi
mov	eax, ebx
pop	ebx
retn
			
xor	eax, eax
retn
align 10h
public PK11_FindKeyByDERCert
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	short loc_10018D18
mov	eax, [esp+4+arg_4]
test	eax, eax
jz	short loc_10018D18
push	esi
mov	esi, [esp+8+arg_8]
push	esi
call	sub_10018C30
add	esp, 4
test	eax, eax
jnz	short loc_10018D06
pop	esi
pop	edi
retn
push	esi
push	eax
push	1
push	0
push	edi
call	sub_10012FF0
add	esp, 14h
pop	esi
pop	edi
retn
			
xor	eax, eax
pop	edi
retn
align 10h
public PK11_ImportCertForKeyToSlot
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
test	edi, edi
jz	short loc_10018D63
mov	esi, [esp+0Ch+arg_4]
test	esi, esi
jz	short loc_10018D63
mov	ebx, [esp+0Ch+arg_8]
test	ebx, ebx
jz	short loc_10018D63
mov	eax, [esp+0Ch+arg_10]
push	eax
mov	eax, esi
call	sub_10018C30
add	esp, 4
test	eax, eax
jz	short loc_10018D63
mov	ecx, [esp+0Ch+arg_C]
push	ecx
push	ebx
push	eax
push	esi
push	edi
call	PK11_ImportCert
add	esp, 14h
pop	edi
pop	esi
pop	ebx
retn
			
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
public PK11_FortezzaHasKEA
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
push	esi
mov	esi, [esp+14h+arg_0]
lea	eax, [esp+14h+var_10]
push	eax
push	esi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_10018DD8
test	[esp+14h+var_10], 40h
jz	short loc_10018DD8
add	esi, 0D8h
push	esi
call	SECOID_FindOID_Util
add	esp, 4
test	eax, eax
jz	short loc_10018DD8
mov	eax, [eax+0Ch]
cmp	eax, 36h
jz	short loc_10018DC3
cmp	eax, 38h
jz	short loc_10018DC3
cmp	eax, 12Ch
jnz	short loc_10018DD8
			
mov	eax, 1
pop	esi
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
			
mov	ecx, [esp+14h+var_4]
pop	esi
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
push	esi
xor	esi, esi
cmp	[edi+0A4h], esi
jle	short loc_10018E4B
push	ebp
lea	ebx, [ebx+0]
mov	eax, [edi+9Ch]
mov	ebp, [eax+esi*4]
lea	ecx, [esp+18h+var_10]
push	ecx
push	ebp
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_10018E41
test	[esp+18h+var_10], 40h
jz	short loc_10018E41
add	ebp, 0D8h
push	ebp
call	SECOID_FindOID_Util
add	esp, 4
			
inc	esi
cmp	esi, [edi+0A4h]
jl	short loc_10018E10
pop	ebp
mov	ecx, [esp+14h+var_4]
pop	esi
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
public PK11_FindBestKEAMatch
mov	eax, [esp+arg_4]
push	ebx
push	ebp
push	eax
push	1
push	0
push	1011h
call	PK11_GetAllTokens
mov	ebp, eax
add	esp, 10h
xor	ebx, ebx
test	ebp, ebp
jnz	short loc_10018E83
pop	ebp
pop	ebx
retn
push	esi
mov	esi, [ebp+0]
test	esi, esi
jz	short loc_10018EC1
push	edi
lea	esp, [esp+0]
mov	ecx, [esp+10h+arg_4]
mov	edx, [esi+8]
push	ecx
push	1
push	edx
call	PK11_Authenticate
add	esp, 0Ch
test	eax, eax
jnz	short loc_10018EBA
mov	edi, [esi+8]
cmp	[edi+38h], eax
jz	short loc_10018EBA
call	sub_10018DF0
mov	ebx, eax
test	ebx, ebx
jnz	short loc_10018EC0
			
mov	esi, [esi]
test	esi, esi
jnz	short loc_10018E90
pop	edi
push	ebp
call	PK11_FreeSlotList
add	esp, 4
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
public PK11_FindCertInSlot
			
sub	esp, 1Ch
push	esi
mov	esi, [esp+20h+arg_4]
mov	eax, [esi+40h]
mov	ecx, [esi+44h]
push	edi
mov	edi, [esp+24h+arg_0]
mov	[esp+24h+var_14], eax
mov	eax, [esp+24h+arg_8]
push	eax
lea	edx, [esp+28h+var_1C]
push	1
push	edi
mov	[esp+30h+var_1C], 1
mov	[esp+30h+var_18], 11h
mov	[esp+30h+var_10], ecx
mov	[esp+30h+var_C], 0
mov	[esp+30h+var_8], edx
mov	[esp+30h+var_4], 4
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jz	short loc_10018F2F
pop	edi
xor	eax, eax
pop	esi
add	esp, 1Ch
retn
push	2
lea	ecx, [esp+28h+var_18]
push	ecx
push	esi
push	edi
call	sub_10017D80
add	esp, 10h
pop	edi
pop	esi
add	esp, 1Ch
retn
align 10h
			
sub	esp, 8
mov	eax, [esp+8+arg_4]
push	ebx
push	ebp
mov	ebp, [eax+4]
push	esi
mov	esi, [eax]
xor	ebx, ebx
push	edi
mov	[esp+18h+arg_4], 0
test	esi, esi
jz	short loc_10018F7D
cmp	esi, 2
jz	short loc_10018F7D
cmp	esi, 4
jz	short loc_10018F7D
cmp	esi, 5
jnz	short loc_10018F85
			
mov	[esp+18h+arg_4], 1
cmp	esi, 3
jz	short loc_10018F94
cmp	esi, 2
jz	short loc_10018F94
cmp	esi, 4
jnz	short loc_10018F99
			
mov	ebx, 1
cmp	esi, 1
jz	short loc_10018FA3
cmp	esi, 5
jnz	short loc_10018FC0
mov	edi, [esp+18h+arg_0]
push	0
push	0
push	edi
call	sub_10046430
add	esp, 0Ch
test	eax, eax
jnz	short loc_10018FC4
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
mov	edi, [esp+18h+arg_0]
cmp	esi, 2
jnz	short loc_10018FDE
push	0
push	0
push	edi
call	sub_10046430
add	esp, 0Ch
test	eax, eax
jnz	loc_10019106
push	edi
call	sub_1004B8F0
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_10019106
test	ebx, ebx
jz	short loc_1001900B
lea	eax, [esp+18h+var_4]
push	eax
push	esi
call	CERT_IsCACert
add	esp, 8
test	eax, eax
jz	loc_10019106
cmp	[esp+18h+arg_4], 0
jz	short loc_1001906E
push	esi
call	CERT_DupCertificate
mov	ecx, [ebp+8]
push	edi
push	ecx
call	sub_1004B510
mov	edi, eax
mov	eax, [esi+17Ch]
add	esp, 0Ch
test	eax, eax
jz	short loc_10019048
push	eax
call	PK11_IsInternal
add	esp, 4
test	eax, eax
jnz	short loc_10019048
push	edi
push	esi
push	ebp
call	sub_1003D3F0
jmp	short loc_10019050
			
push	edi
push	esi
push	ebp
call	sub_1003D470
add	esp, 0Ch
test	eax, eax
jz	loc_10019106
push	esi
call	CERT_DestroyCertificate
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
push	edi
call	sub_10049900
add	esp, 4
mov	[esp+18h+var_8], eax
test	eax, eax
jz	loc_10019106
cmp	dword ptr [eax], 0
mov	[esp+18h+arg_4], eax
jz	short loc_100190FD
lea	esp, [esp+0]
mov	edx, [esp+18h+arg_4]
mov	edi, [edx]
mov	eax, [edi+4]
mov	ebx, [eax+34h]
push	esi
call	CERT_DupCertificate
mov	ecx, [esp+1Ch+arg_0]
mov	edx, [ebp+8]
push	edi		
push	ecx		
push	edx		
call	sub_1004B420
add	esp, 10h
mov	edi, eax
test	ebx, ebx
jz	short loc_100190D1
push	ebx
call	PK11_IsInternal
add	esp, 4
test	eax, eax
jnz	short loc_100190D1
push	edi
push	esi
push	ebp
call	sub_1003D3F0
jmp	short loc_100190D9
			
push	edi
push	esi
push	ebp
call	sub_1003D470
add	esp, 0Ch
test	eax, eax
jz	short loc_100190E9
push	esi
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, [esp+18h+arg_4]
add	eax, 4
cmp	dword ptr [eax], 0
mov	[esp+18h+arg_4], eax
jnz	short loc_10019090
mov	eax, [esp+18h+var_8]
push	eax
call	sub_1004E7F0
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
public PK11_ListCerts
			
sub	esp, 8
push	esi
push	edi
call	sub_1004A850
mov	edi, eax
call	SECKEY_NewPrivateKeyList
mov	ecx, [esp+10h+arg_4]
push	ecx
push	1
mov	esi, eax
mov	eax, [esp+18h+arg_0]
push	0
push	0
mov	[esp+20h+var_8], eax
mov	[esp+20h+var_4], esi
call	sub_1002C850
lea	edx, [esp+20h+var_8]
push	edx
push	offset sub_10018F50
push	edi
call	sub_100475B0
add	esp, 1Ch
pop	edi
mov	eax, esi
pop	esi
add	esp, 8
retn
align 10h
public PK11_GetLowLevelKeyIDForCert
sub	esp, 20h
push	ebx
push	ebp
xor	ebx, ebx
push	esi
mov	esi, [esp+2Ch+arg_0]
xor	ebp, ebp
mov	eax, 11h
push	edi
mov	[esp+30h+var_1C], 1
mov	[esp+30h+var_18], eax
mov	[esp+30h+var_14], ebx
mov	[esp+30h+var_10], ebx
mov	[esp+30h+var_C], ebx
mov	[esp+30h+var_8], ebx
mov	[esp+30h+var_4], ebx
mov	[esp+30h+var_20], ebp
cmp	esi, ebx
jz	short loc_100191F7
mov	edi, [esp+30h+arg_4]
mov	ecx, [edi+44h]
mov	[esp+30h+var_18], eax
mov	eax, [edi+40h]
mov	[esp+30h+var_14], eax
mov	eax, [esp+30h+arg_8]
push	eax
lea	edx, [esp+34h+var_1C]
push	1
push	esi
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_C], ebx
mov	[esp+3Ch+var_8], edx
mov	[esp+3Ch+var_4], 4
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jz	short loc_100191E4
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 20h
retn
push	2
lea	ecx, [esp+34h+var_18]
push	ecx
push	edi
push	esi
call	sub_10017D80
add	esp, 10h
jmp	short loc_10019244
mov	eax, [esp+30h+arg_8]
mov	esi, [esp+30h+arg_4]
lea	edx, [esp+30h+var_20]
push	edx
push	eax
push	esi
call	sub_10018620
add	esp, 0Ch
cmp	eax, ebx
jnz	short loc_1001923E
push	esi
call	sub_100179C0
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	short loc_100191DA
push	esi
call	PK11_MakeIDFromPubKey
push	1
push	esi
mov	edi, eax
call	SECITEM_FreeItem_Util
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 20h
retn
mov	ebp, [esp+30h+var_20]
mov	esi, ebp
cmp	eax, ebx
jz	short loc_100191DA
push	eax
push	esi
call	sub_1002C8D0
add	esp, 8
mov	esi, eax
cmp	ebp, ebx
jz	short loc_10019261
push	ebp
call	PK11_FreeSlot
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 20h
retn
align 10h
			
push	ebp
mov	ebp, [esp+4+arg_0]
push	esi
push	ebp
call	sub_1004B930
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1001928B
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	edi
push	esi
call	sub_10049900
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_100192A2
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	eax, [edi]
push	ebx
mov	ecx, edi
test	eax, eax
jz	short loc_100192CC
mov	ebx, [esp+10h+arg_4]
mov	edx, [ebx+4]
mov	eax, [eax+4]
cmp	[eax+34h], edx
jz	short loc_100192C6
mov	eax, [ecx+4]
add	ecx, 4
test	eax, eax
jnz	short loc_100192B2
jmp	short loc_100192CC
mov	ecx, [ecx]
test	ecx, ecx
jnz	short loc_100192E7
			
push	edi
call	sub_1004E7F0
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	ebx
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	ecx		
mov	ecx, [ebx]
mov	edx, [ecx+8]
push	esi		
push	edx		
call	sub_1004B420
push	edi
mov	esi, eax
call	sub_1004E7F0
push	ebp
call	CERT_DupCertificate
mov	eax, [ebx]
push	esi
push	ebp
push	eax
call	sub_1003D3F0
mov	esi, eax
add	esp, 20h
test	esi, esi
jz	short loc_1001931E
push	ebp
call	CERT_DestroyCertificate
add	esp, 4
pop	ebx
pop	edi
mov	eax, esi
pop	esi
pop	ebp
retn
align 10h
public PK11_ListCertsInSlot
sub	esp, 8
push	esi
call	SECKEY_NewPrivateKeyList
mov	esi, eax
test	esi, esi
jnz	short loc_10019344
pop	esi
add	esp, 8
retn
mov	eax, [esp+0Ch+arg_0]
lea	ecx, [esp+0Ch+var_8]
push	ecx
push	offset sub_10019270
push	eax
mov	[esp+18h+var_8], esi
mov	[esp+18h+var_4], eax
call	sub_10018A90
add	esp, 0Ch
test	eax, eax
jz	short loc_10019372
push	esi
call	CERT_DestroyCertList
add	esp, 4
xor	esi, esi
mov	eax, esi
pop	esi
add	esp, 8
retn
align 10h
public PK11_GetAllSlotsForCert
mov	eax, [esp+arg_0]
push	ebp
xor	ebp, ebp
test	eax, eax
jnz	short loc_1001939C
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebp
retn
push	eax
call	sub_1004B930
add	esp, 4
test	eax, eax
jnz	short loc_100193B2
call	sub_10043350
xor	eax, eax
pop	ebp
retn
push	ebx
push	eax
call	sub_10049900
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_100193D4
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
pop	ebx
xor	eax, eax
pop	ebp
retn
push	edi
call	sub_100353C0
mov	edi, eax
test	edi, edi
jnz	short loc_100193EF
push	ebx
call	sub_1004E7F0
add	esp, 4
pop	edi
pop	ebx
xor	eax, eax
pop	ebp
retn
push	esi
mov	esi, ebx
cmp	[ebx], ebp
jz	short loc_1001941F
mov	eax, [esi]
mov	ecx, [eax+4]
mov	eax, [ecx+34h]
test	eax, eax
jz	short loc_10019413
push	1
push	eax
push	edi
call	sub_10036890
add	esp, 0Ch
mov	ebp, 1
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_100193F6
test	ebp, ebp
jnz	short loc_10019434
push	edi
call	PK11_FreeSlotList
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 8
xor	edi, edi
push	ebx
call	sub_1004E7F0
add	esp, 4
pop	esi
mov	eax, edi
pop	edi
pop	ebx
pop	ebp
retn
align 10h
public PK11_DeleteTokenCertAndKey
push	ecx
push	ebx
push	ebp
push	esi
mov	esi, [esp+10h+arg_4]
push	edi
mov	edi, [esp+14h+arg_0]
push	esi
push	edi
call	PK11_FindKeyByAnyCert
mov	ebp, eax
lea	eax, [esp+1Ch+var_4]
push	eax
push	esi
push	edi
mov	[esp+28h+var_4], 0
call	sub_10018620
mov	ebx, [esp+28h+var_4]
add	esp, 14h
test	eax, eax
jnz	short loc_10019489
xor	esi, esi
jmp	short loc_100194A8
push	2
push	eax
push	ebx
call	sub_1002C6E0
add	esp, 0Ch
test	eax, eax
jnz	short loc_100194A6
push	ebx
call	PK11_FreeSlot
add	esp, 4
xor	esi, esi
jmp	short loc_100194A8
mov	esi, eax
			
test	ebp, ebp
jz	short loc_100194BD
push	edi
call	SEC_DeletePermCertificate
push	0
push	ebp
call	PK11_DeleteTokenPrivateKey
add	esp, 0Ch
test	esi, esi
jz	short loc_100194D5
test	ebx, ebx
jz	short loc_100194D5
push	esi
push	ebx
call	PK11_DestroyTokenObject
push	ebx
call	PK11_FreeSlot
add	esp, 0Ch
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
sub	esp, 14h
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	[esp+20h+var_C], ebp
mov	[esp+20h+var_8], ebp
mov	[esp+20h+var_4], ebp
call	sub_1004A850
mov	esi, eax
call	SECKEY_NewPrivateKeyList
mov	edi, eax
mov	eax, [esp+20h+arg_0]
push	eax
push	1
push	ebp
push	ebp
mov	[esp+30h+var_14], 1
mov	[esp+30h+var_10], edi
call	sub_1002C850
lea	ecx, [esp+30h+var_14]
push	ecx
push	offset sub_10018F50
push	esi
call	sub_100475B0
add	esp, 1Ch
cmp	edi, ebp
jnz	short loc_1001953D
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 14h
retn
mov	esi, [edi]
cmp	esi, edi
jz	short loc_10019580
mov	eax, [esi+8]
lea	edx, [esp+20h+var_C]
push	edx
push	eax
call	CERT_FindSubjectKeyIDExtension
add	esp, 8
test	eax, eax
jnz	short loc_1001957A
cmp	[esp+20h+var_8], ebp
jz	short loc_1001957A
mov	ecx, [esi+8]
push	ecx
lea	edx, [esp+24h+var_C]
push	edx
call	sub_1003DAA0
lea	eax, [esp+28h+var_C]
push	ebp
push	eax
call	SECITEM_FreeItem_Util
add	esp, 10h
			
mov	esi, [esi]
cmp	esi, edi
jnz	short loc_10019543
push	ebx
push	edi
call	CERT_DestroyCertList
push	8
push	ebp
push	ebp
call	SECITEM_AllocItem_Util
mov	ebx, eax
add	esp, 10h
cmp	ebx, ebp
jnz	short loc_100195B1
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	ebx
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 14h
retn
call	SECMOD_GetDefaultModuleListLock
mov	ebp, eax
test	ebp, ebp
jnz	short loc_100195D4
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
pop	ebx
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 14h
retn
push	ebp
call	SECMOD_GetReadLock
add	esp, 4
call	SECMOD_GetDefaultModuleList
mov	edi, eax
test	edi, edi
jz	short loc_10019635
mov	eax, [edi+4]
xor	esi, esi
cmp	[eax+2Ch], esi
jle	short loc_1001962F
mov	ecx, [eax+28h]
mov	edx, [ecx+esi*4]
mov	ecx, [edx+40h]
mov	eax, [ebx+4]
mov	[eax], ecx
mov	edx, [edi+4]
mov	ecx, [edx+38h]
mov	eax, [ebx+4]
mov	[eax+4], ecx
mov	edx, [edi+4]
mov	eax, [edx+28h]
mov	ecx, [eax+esi*4]
movzx	edx, word ptr [ecx+80h]
push	edx
push	ebx
call	sub_1003DB70
mov	eax, [edi+4]
inc	esi
add	esp, 8
cmp	esi, [eax+2Ch]
jl	short loc_100195F2
mov	edi, [edi]
test	edi, edi
jnz	short loc_100195E8
push	ebp
call	SECMOD_ReleaseReadLock
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 0Ch
pop	ebx
pop	edi
pop	esi
xor	eax, eax
pop	ebp
add	esp, 14h
retn
push	ebp
mov	ebp, esp
and	esp, 0FFFFFFF8h
sub	esp, 4Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+4Ch+var_4], eax
mov	eax, [ebp+arg_0]
push	ebx
push	esi
push	edi
mov	edi, edx
push	edi
push	1
xor	esi, esi
push	esi
push	0FFFFFFFFh
mov	[esp+68h+var_34], eax
mov	[esp+68h+var_48], edi
mov	[esp+68h+var_2C], ecx
call	PK11_GetAllTokens
add	esp, 10h
mov	[esp+58h+var_30], eax
test	eax, eax
jnz	short loc_100196A2
pop	edi
pop	esi
pop	ebx
mov	ecx, [esp+4Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
mov	ecx, [eax]
mov	[esp+58h+var_40], ecx
test	ecx, ecx
jz	loc_1001995A
mov	ebx, [esp+58h+var_40]
mov	edx, [ebx+8]
push	edi
push	1
push	edx
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jnz	short loc_100196EE
mov	ecx, [esp+58h+var_34]
mov	eax, [ebx+8]
mov	esi, [ecx]
xor	ebx, ebx
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], ebx
mov	[esp+58h+var_4C], esi
test	esi, esi
jnz	short loc_10019718
mov	edx, [esp+58h+var_2C]
mov	dword ptr [edx], 0FFFFFFFFh
xor	esi, esi
mov	eax, [esp+58h+var_40]
mov	eax, [eax]
mov	[esp+58h+var_40], eax
test	eax, eax
jz	loc_10019956
mov	edi, [esp+58h+var_48]
jmp	short loc_100196B0
jmp	short loc_10019710
align 10h
			
mov	esi, [esp+58h+var_4C]
mov	edi, [esp+58h+var_48]
cmp	dword ptr [esi+8], 1
jnz	loc_100198CB
mov	edx, [esi+0Ch]
push	edx
call	sub_1003DD70
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	loc_100198AC
test	ebx, ebx
jnz	loc_10019905
mov	eax, [esp+58h+var_48]
push	eax
push	ebx
push	ebx
push	0FFFFFFFFh
call	PK11_GetAllTokens
mov	ebx, eax
add	esp, 10h
mov	[esp+58h+var_1C], ebx
test	ebx, ebx
jz	loc_10019895
push	8
push	edi
push	edi
call	SECITEM_AllocItem_Util
mov	esi, eax
add	esp, 0Ch
mov	[esp+58h+var_44], esi
test	esi, esi
jz	loc_10019926
mov	edi, [ebx]
test	edi, edi
jz	loc_10019880
mov	ecx, [edi+8]
mov	eax, [ecx+40h]
mov	edx, [esi+4]
mov	[edx], eax
mov	ecx, [edi+8]
mov	edx, [ecx+4]
mov	ecx, [edx+38h]
mov	eax, [esi+4]
mov	[eax+4], ecx
mov	edx, [edi+8]
push	edx
call	PK11_GetSlotSeries
push	esi
mov	ebx, eax
call	sub_1003DC40
add	esp, 8
cmp	eax, ebx
jz	loc_10019872
mov	esi, [edi+8]
xor	eax, eax
mov	[esp+58h+var_28], eax
mov	[esp+58h+var_24], eax
mov	[esp+58h+var_20], eax
call	SECKEY_NewPrivateKeyList
mov	ebx, eax
test	ebx, ebx
jz	loc_1001986E
lea	eax, [esp+58h+var_18]
push	eax
push	offset sub_10019270
push	esi
mov	[esp+64h+var_18], ebx
mov	[esp+64h+var_14], esi
call	sub_10018A90
add	esp, 0Ch
test	eax, eax
jnz	short loc_10019865
mov	esi, [ebx]
cmp	esi, ebx
jz	short loc_10019865
mov	edi, edi
mov	ecx, [esi+8]
push	ecx
call	CERT_IsUserCert
add	esp, 4
test	eax, eax
jz	short loc_1001985F
mov	eax, [esi+8]
lea	edx, [esp+58h+var_28]
push	edx
push	eax
call	CERT_FindSubjectKeyIDExtension
add	esp, 8
test	eax, eax
jnz	short loc_1001985F
cmp	[esp+58h+var_24], eax
jz	short loc_10019850
mov	ecx, [esi+8]
push	ecx
lea	edx, [esp+5Ch+var_28]
push	edx
call	sub_1003DAA0
mov	eax, [edi+8]
push	eax
call	PK11_GetSlotSeries
mov	ecx, [esp+64h+var_44]
push	eax
push	ecx
call	sub_1003DB70
add	esp, 14h
lea	edx, [esp+58h+var_28]
push	0
push	edx
call	SECITEM_FreeItem_Util
add	esp, 8
			
mov	esi, [esi]
cmp	esi, ebx
jnz	short loc_10019800
			
push	ebx
call	CERT_DestroyCertList
add	esp, 4
mov	esi, [esp+58h+var_44]
mov	edi, [edi]
test	edi, edi
jnz	loc_10019783
mov	ebx, [esp+58h+var_1C]
push	ebx
call	PK11_FreeSlotList
push	1
push	esi
call	SECITEM_FreeItem_Util
mov	esi, [esp+64h+var_4C]
add	esp, 0Ch
mov	eax, [esi+0Ch]
push	eax
mov	ebx, 1
call	sub_1003DD70
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10019905
mov	ecx, [esp+58h+var_48]
mov	edx, [esp+58h+var_3C]
push	ecx
push	edi
push	edx
call	PK11_FindCertFromDERCertItem
push	1
push	edi
mov	esi, eax
call	SECITEM_FreeItem_Util
add	esp, 14h
jmp	short loc_100198DF
mov	eax, [esi+0Ch]
mov	ecx, [esp+58h+var_3C]
push	edi
push	eax
push	ecx
call	sub_100181D0
add	esp, 0Ch
mov	esi, eax
test	esi, esi
jz	short loc_10019905
lea	edx, [esp+58h+var_10]
push	edx
push	esi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_100198FC
test	[esp+58h+var_C], 40h
jnz	short loc_10019938
push	esi
call	CERT_DestroyCertificate
add	esp, 4
			
mov	eax, [esp+58h+var_38]
mov	ecx, [esp+58h+var_34]
inc	eax
mov	[esp+58h+var_38], eax
mov	eax, [ecx+eax*4]
mov	[esp+58h+var_4C], eax
test	eax, eax
jnz	loc_10019710
jmp	loc_100196E2
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_100196EC
mov	ecx, [esp+58h+var_3C]
push	ecx
call	PK11_ReferenceSlot
mov	edx, [esp+5Ch+var_4C]
mov	ecx, [esp+5Ch+var_2C]
mov	[edx+18h], eax
mov	eax, [esp+5Ch+var_38]
add	esp, 4
mov	[ecx], eax
mov	eax, [esp+58h+var_30]
push	eax
call	PK11_FreeSlotList
mov	ecx, [esp+5Ch+var_4]
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
align 10h
public PK11_FindCertAndKeyByRecipientList
mov	edx, [esp+arg_8]
mov	ecx, [esp+arg_4]
push	ebx
mov	ebx, [esp+4+arg_C]
push	ebp
mov	ebp, [esp+8+arg_10]
push	esi
push	edi
mov	edi, [esp+10h+arg_0]
push	ebp
mov	dword ptr [ebx], 0
push	edi
mov	dword ptr [edi], 0
call	sub_10018360
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100199E2
push	ebp
push	esi
call	PK11_FindKeyByAnyCert
add	esp, 8
mov	[ebx], eax
test	eax, eax
jnz	short loc_100199E9
push	esi
call	CERT_DestroyCertificate
mov	eax, [edi]
add	esp, 4
test	eax, eax
jz	short loc_100199DC
push	eax
call	PK11_FreeSlot
add	esp, 4
mov	dword ptr [edi], 0
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
public PK11_FindCertAndKeyByRecipientListNew
push	ecx
push	ebx
mov	ebx, [esp+8+arg_4]
push	ebx
push	offset sub_100194E0
push	offset dword_100BAB90
call	ds:PR_CallOnceWithArg
add	esp, 0Ch
test	eax, eax
jz	short loc_10019A14
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
push	esi
mov	esi, [esp+0Ch+arg_0]
push	edi
push	esi
lea	ecx, [esp+14h+var_4]
mov	edx, ebx
call	sub_10019650
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_10019A37
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
push	ebp
mov	ebp, [esp+14h+var_4]
mov	esi, [esi+ebp*4]
push	ebx
push	edi
call	PK11_FindKeyByAnyCert
add	esp, 8
mov	[esi+14h], eax
test	eax, eax
jnz	short loc_10019A79
push	edi
call	CERT_DestroyCertificate
mov	eax, [esi+18h]
add	esp, 4
test	eax, eax
jz	short loc_10019A69
push	eax
call	PK11_FreeSlot
add	esp, 4
pop	ebp
pop	edi
mov	dword ptr [esi+18h], 0
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
mov	eax, ebp
pop	ebp
mov	[esi+10h], edi
pop	edi
pop	esi
pop	ebx
pop	ecx
retn
align 10h
public PK11_FindCertFromDERCert
mov	ecx, [esp+arg_4]
add	ecx, 3Ch
mov	[esp+arg_4], ecx
jmp	PK11_FindCertFromDERCertItem
			
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+14h], 0
jz	short loc_10019AC0
mov	ecx, [eax+8]
cmp	dword ptr [ecx+30h], 0
jz	short loc_10019AC0
mov	edx, [eax+10h]
mov	[esp+arg_0], edx
jmp	ds:PR_Lock
			
mov	eax, [eax+8]
mov	[esp+arg_0], eax
jmp	sub_10035650
align 10h
			
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+14h], 0
jz	short loc_10019AF0
mov	ecx, [eax+8]
cmp	dword ptr [ecx+30h], 0
jz	short loc_10019AF0
mov	edx, [eax+10h]
mov	[esp+arg_0], edx
jmp	ds:PR_Unlock
			
mov	eax, [eax+8]
mov	[esp+arg_0], eax
jmp	sub_10035670
align 10h
public PK11_DestroyContext
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+14h]
mov	ecx, [esi+0Ch]
mov	edx, [esi+8]
push	eax
push	ecx
push	edx
call	sub_1002A710
mov	eax, [esi+1Ch]
add	esp, 0Ch
test	eax, eax
jz	short loc_10019B29
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10019B39
push	eax
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esi+24h]
test	eax, eax
jz	short loc_10019B52
cmp	eax, offset dword_100A2AE8
jz	short loc_10019B52
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
			
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_10019B63
push	eax
call	ds:PR_DestroyLock
add	esp, 4
mov	eax, [esi+8]
push	eax
call	PK11_FreeSlot
add	esp, 4
cmp	[esp+4+arg_4], 0
jz	short loc_10019B7F
push	esi
call	PORT_Free_Util
add	esp, 4
pop	esi
retn
align 10h
			
push	ecx
mov	edx, [ebx+0Ch]
push	ebp
mov	ebp, [esp+8+arg_0]
push	esi
push	edi
mov	esi, eax
mov	eax, [ebx+8]
mov	ecx, [eax]
mov	eax, [ecx+42h]
push	ebp
push	esi
push	edx
call	eax
add	esp, 0Ch
mov	edi, eax
test	esi, esi
jz	short loc_10019BBB
cmp	edi, 150h
jnz	short loc_10019BF8
mov	eax, [ebp+0]
push	eax
mov	[esp+14h+var_4], eax
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10019C0B
mov	ecx, [ebx+8]
mov	edx, [ecx]
mov	eax, [ebx+0Ch]
mov	ecx, [edx+42h]
push	ebp
push	esi
push	eax
call	ecx
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_10019C12
mov	edx, [esp+10h+var_4]
push	edx
push	esi
call	PORT_ZFree_Util
add	esp, 8
test	edi, edi
jz	short loc_10019C12
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
			
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ecx
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_10019C30
mov	ecx, [ecx+4]
jmp	short loc_10019C32
xor	ecx, ecx
mov	edx, [esp+arg_4]
test	edx, edx
jnz	short loc_10019C4B
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	esi
mov	esi, [eax+8]
mov	esi, [esi]
push	0
push	ecx
mov	ecx, [esp+0Ch+arg_8]
push	ecx
push	edx
mov	edx, [eax+0Ch]
mov	eax, [esi+46h]
push	edx
call	eax
add	esp, 14h
pop	esi
test	eax, eax
jz	short loc_10019C7E
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
public PK11_SaveContext
mov	eax, [esp+arg_C]
push	ebx
mov	ebx, [esp+4+arg_0]
cmp	dword ptr [ebx+14h], 0
push	esi
push	edi
mov	edi, eax
mov	[esp+0Ch+arg_C], edi
jz	short loc_10019D0F
mov	eax, [ebx+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_10019CBC
mov	eax, [ebx+10h]
push	eax
call	ds:PR_Lock
jmp	short loc_10019CC2
push	eax
call	sub_10035650
mov	eax, [esp+10h+Dst]
lea	ecx, [esp+10h+arg_C]
add	esp, 4
push	ecx
call	sub_10019B90
add	esp, 4
cmp	dword ptr [ebx+14h], 0
mov	esi, eax
jz	short loc_10019CF3
mov	edx, [ebx+8]
cmp	dword ptr [edx+30h], 0
jz	short loc_10019CF3
mov	eax, [ebx+10h]
push	eax
call	ds:PR_Unlock
jmp	short loc_10019CFC
			
mov	ecx, [ebx+8]
push	ecx
call	sub_10035670
add	esp, 4
test	esi, esi
jz	short loc_10019D4F
mov	edi, [esp+0Ch+arg_C]
mov	edx, [esp+0Ch+arg_8]
mov	[edx], edi
jmp	short loc_10019D35
mov	ecx, [ebx+20h]
cmp	eax, ecx
jb	short loc_10019D4F
mov	esi, [ebx+1Ch]
test	esi, esi
jz	short loc_10019D2C
mov	eax, [esp+0Ch+Dst]
push	ecx		
push	esi		
push	eax		
call	memcpy
add	esp, 0Ch
mov	ecx, [ebx+20h]
mov	edx, [esp+0Ch+arg_8]
mov	[edx], ecx
test	esi, esi
jz	short loc_10019D4F
cmp	dword ptr [ebx+14h], 0
jz	short loc_10019D49
push	edi
push	esi
call	PORT_ZFree_Util
add	esp, 8
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
			
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
public PK11_SaveContextAlloc
mov	ecx, [esp+arg_8]
push	ebx
mov	ebx, [esp+4+arg_0]
cmp	dword ptr [ebx+14h], 0
push	esi
mov	[esp+8+arg_8], ecx
jz	loc_10019DFB
mov	eax, [ebx+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_10019D8D
mov	eax, [ebx+10h]
push	eax
call	ds:PR_Lock
jmp	short loc_10019D93
push	eax
call	sub_10035650
mov	eax, [esp+0Ch+arg_4]
lea	ecx, [esp+0Ch+arg_8]
add	esp, 4
push	ecx
call	sub_10019B90
add	esp, 4
cmp	dword ptr [ebx+14h], 0
mov	esi, eax
jz	short loc_10019DDA
mov	edx, [ebx+8]
cmp	dword ptr [edx+30h], 0
jz	short loc_10019DDA
mov	eax, [ebx+10h]
push	eax
call	ds:PR_Unlock
mov	eax, [esp+0Ch+arg_C]
add	esp, 4
mov	edx, esi
neg	edx
sbb	edx, edx
and	edx, [esp+8+arg_8]
mov	[eax], edx
mov	eax, esi
pop	esi
pop	ebx
retn
			
mov	ecx, [ebx+8]
push	ecx
call	sub_10035670
mov	eax, [esp+0Ch+arg_C]
add	esp, 4
mov	edx, esi
neg	edx
sbb	edx, edx
and	edx, [esp+8+arg_8]
mov	[eax], edx
mov	eax, esi
pop	esi
pop	ebx
retn
mov	eax, [ebx+20h]
cmp	ecx, eax
jnb	short loc_10019E14
push	eax
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10019E18
pop	esi
pop	ebx
retn
mov	esi, [esp+8+arg_4]
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_10019E2D
mov	ecx, [ebx+20h]
push	ecx		
push	eax		
push	esi		
call	memcpy
add	esp, 0Ch
mov	edx, [ebx+20h]
mov	eax, [esp+8+arg_C]
mov	[eax], edx
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
			
sub	esp, 108h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+108h+var_4], eax
push	ebx
push	esi
mov	esi, [esp+110h+arg_0]
xor	ecx, ecx
xor	ebx, ebx
mov	[esp+110h+var_108], ecx
cmp	[esi+14h], ecx
jnz	short loc_10019E83
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+108h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 108h
retn
push	edi
			
mov	eax, [esi]
cmp	eax, 108h
ja	short loc_10019EE1
jz	short loc_10019ECF
sub	eax, 104h
jz	short loc_10019EB6
dec	eax
jnz	loc_10019F59
mov	eax, [esi+8]
mov	ecx, [eax]
mov	eax, [esi+0Ch]
mov	ecx, [ecx+92h]
lea	edx, [esp+114h+var_108]
push	edx
push	ebx
push	eax
call	ecx
jmp	short loc_10019F1B
mov	edx, [esi+8]
mov	eax, [edx]
mov	edx, [esi+0Ch]
mov	eax, [eax+82h]
lea	ecx, [esp+114h+var_108]
push	ecx
push	ebx
push	edx
call	eax
jmp	short loc_10019F1B
mov	ecx, [esi+8]
mov	edx, [ecx]
mov	edx, [edx+0B6h]
lea	eax, [esp+114h+var_108]
push	eax
jmp	short loc_10019F14
cmp	eax, 10Ah
jz	short loc_10019F08
cmp	eax, 81000000h
jnz	short loc_10019F59
mov	eax, [esi+8]
mov	ecx, [eax]
mov	eax, [esi+0Ch]
mov	ecx, [ecx+0A6h]
lea	edx, [esp+114h+var_108]
push	edx
push	ebx
push	eax
call	ecx
jmp	short loc_10019F1B
mov	edx, [esi+8]
mov	eax, [edx]
mov	edx, [eax+0CEh]
push	ecx
mov	ecx, [esi+0Ch]
push	ebx
push	ecx
call	edx
			
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_10019F5E
test	ebx, ebx
jnz	loc_10019FC9
mov	ecx, [esp+114h+var_108]
cmp	ecx, 100h
ja	short loc_10019F41
lea	ebx, [esp+114h+var_104]
jmp	loc_10019E84
push	ecx
call	PORT_Alloc_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	short loc_10019FA1
mov	ecx, [esp+114h+var_108]
jmp	loc_10019E84
			
mov	edi, 91h
lea	eax, [esp+114h+var_104]
cmp	ebx, eax
jz	short loc_10019F6F
push	ebx
call	PORT_Free_Util
add	esp, 4
cmp	edi, 91h
jz	short loc_10019FDA
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+108h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 108h
retn
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+108h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 108h
retn
lea	ecx, [esp+114h+var_104]
cmp	ebx, ecx
jz	short loc_10019FDA
push	ebx
call	PORT_Free_Util
add	esp, 4
			
mov	ecx, [esp+114h+var_4]
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 108h
retn
align 10h
public PK11_DigestFinal
			
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+14h], 0
push	edi
jz	short loc_1001A021
mov	eax, [esi+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001A021
mov	ecx, [esi+10h]
push	ecx
call	ds:PR_Lock
jmp	short loc_1001A02A
			
mov	edx, [esi+8]
push	edx
call	sub_10035650
add	esp, 4
cmp	dword ptr [esi+14h], 0
jnz	short loc_1001A07C
mov	eax, [esi+20h]
mov	ecx, [esi+1Ch]
push	eax
push	ecx
push	esi
call	sub_10019C20
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_1001A07C
cmp	dword ptr [esi+14h], 0
jz	short loc_1001A06B
mov	edx, [esi+8]
cmp	dword ptr [edx+30h], 0
jz	short loc_1001A06B
mov	eax, [esi+10h]
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
			
mov	ecx, [esi+8]
push	ecx
call	sub_10035670
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
			
mov	eax, [esi]
mov	ecx, [esp+8+arg_C]
mov	[esp+8+arg_0], ecx
cmp	eax, 108h
ja	short loc_1001A0EA
jz	short loc_1001A0CD
sub	eax, 104h
jz	short loc_1001A0B0
dec	eax
jnz	short loc_1001A0F8
mov	edx, [esi+8]
mov	eax, [edx]
mov	edx, [esp+8+arg_4]
lea	ecx, [esp+8+arg_0]
push	ecx
push	edx
mov	edx, [eax+92h]
jmp	short loc_1001A127
mov	eax, [esi+8]
mov	ecx, [eax]
mov	eax, [esp+8+arg_4]
lea	edx, [esp+8+arg_0]
push	edx
mov	edx, [esi+0Ch]
push	eax
mov	eax, [ecx+82h]
push	edx
call	eax
jmp	short loc_1001A12D
mov	ecx, [esi+8]
mov	edx, [ecx]
mov	ecx, [esp+8+arg_4]
lea	eax, [esp+8+arg_0]
push	eax
mov	eax, [esi+0Ch]
push	ecx
mov	ecx, [edx+0B6h]
push	eax
call	ecx
jmp	short loc_1001A12D
cmp	eax, 10Ah
jz	short loc_1001A116
cmp	eax, 81000000h
jz	short loc_1001A0FF
mov	edi, 91h
jmp	short loc_1001A132
mov	edx, [esi+8]
mov	eax, [edx]
mov	edx, [esp+8+arg_4]
lea	ecx, [esp+8+arg_0]
push	ecx
push	edx
mov	edx, [eax+0A6h]
jmp	short loc_1001A127
mov	eax, [esi+8]
mov	edx, [eax]
mov	eax, [esp+8+arg_4]
mov	edx, [edx+0CEh]
push	ecx
push	eax
			
mov	ecx, [esi+0Ch]
push	ecx
call	edx
			
add	esp, 0Ch
mov	edi, eax
cmp	dword ptr [esi+14h], 0
jz	short loc_1001A14D
mov	eax, [esi+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001A14D
mov	ecx, [esi+10h]
push	ecx
call	ds:PR_Unlock
jmp	short loc_1001A156
			
mov	edx, [esi+8]
push	edx
call	sub_10035670
mov	eax, [esp+0Ch+arg_8]
mov	ecx, [esp+0Ch+arg_0]
add	esp, 4
mov	[eax], ecx
mov	dword ptr [esi+28h], 0
test	edi, edi
jz	short loc_1001A183
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
push	ecx
push	ebx
mov	ebx, eax
mov	eax, [ebx]
push	ebp
xor	ebp, ebp
push	esi
mov	esi, [ebx+4]
cmp	eax, 108h
ja	short loc_1001A222
jz	loc_1001A24E
sub	eax, 104h
jz	short loc_1001A20D
dec	eax
jnz	short loc_1001A230
cmp	[ebx+30h], ebp
jz	short loc_1001A1F5
mov	eax, [ebx+8]
mov	edx, [esi+4]
mov	[esp+10h+var_4], ebp
mov	ecx, [eax]
mov	eax, [ebx+0Ch]
mov	ecx, [ecx+76h]
push	edx
push	edi
push	eax
call	ecx
add	esp, 0Ch
test	eax, eax
jnz	loc_1001A26B
mov	edx, [ebx+8]
mov	eax, [edx]
mov	edx, [ebx+0Ch]
mov	eax, [eax+82h]
lea	ecx, [esp+10h+var_4]
push	ecx
push	ebp
push	edx
call	eax
add	esp, 0Ch
mov	ecx, [ebx+8]
mov	eax, [esi+4]
mov	edx, [ecx]
mov	ecx, [ebx+0Ch]
mov	edx, [edx+86h]
push	eax
push	edi
push	ecx
call	edx
jmp	short loc_1001A264
mov	eax, [ebx+8]
mov	edx, [esi+4]
mov	ecx, [eax]
mov	eax, [ebx+0Ch]
mov	ecx, [ecx+76h]
push	edx
push	edi
push	eax
call	ecx
jmp	short loc_1001A264
cmp	eax, 10Ah
jz	short loc_1001A24E
cmp	eax, 81000000h
jz	short loc_1001A237
mov	eax, 91h
jmp	short loc_1001A26B
mov	ecx, [ebx+8]
mov	edx, [ecx]
mov	eax, [ebx+0Ch]
mov	ecx, [edx+96h]
push	edi
push	eax
call	ecx
add	esp, 8
jmp	short loc_1001A267
			
mov	ecx, [esi+4]
mov	edx, [ebx+8]
mov	eax, [edx]
mov	edx, [ebx+0Ch]
mov	eax, [eax+0AAh]
push	ecx
push	edi
push	edx
call	eax
			
add	esp, 0Ch
test	eax, eax
jz	short loc_1001A282
			
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
cmp	[ebx+14h], ebp
jnz	short loc_1001A2A9
mov	eax, [ebx+1Ch]
lea	ecx, [ebx+20h]
push	ecx
call	sub_10019B90
add	esp, 4
mov	[ebx+1Ch], eax
test	eax, eax
jnz	short loc_1001A2A0
or	ebp, 0FFFFFFFFh
push	ebx
call	sub_10019E40
add	esp, 4
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
pop	ecx
retn
			
sub	esp, 0Ch
push	ebx
push	ebp
mov	ebx, ecx
xor	ebp, ebp
push	edi
mov	edi, eax
cmp	ebx, ebp
jz	loc_1001A3FC
cmp	edi, ebp
jnz	short loc_1001A2E4
cmp	[esp+18h+arg_4], 81000000h
jnz	loc_1001A3FC
cmp	[esp+18h+arg_0], 1002h
jz	loc_1001A3FC
push	esi
push	34h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebp
jz	loc_1001A3F2
cmp	[esp+1Ch+arg_0], 1002h
mov	[esi+30h], ebp
jnz	short loc_1001A313
cmp	dword ptr [edi+34h], 3
jnz	short loc_1001A313
mov	dword ptr [esi+30h], 1
			
mov	eax, [esp+1Ch+arg_4]
mov	[esi], eax
cmp	edi, ebp
jz	short loc_1001A328
push	edi
call	PK11_ReferenceSymKey
add	esp, 4
jmp	short loc_1001A32A
xor	eax, eax
push	ebx
mov	[esi+4], eax
call	PK11_ReferenceSlot
lea	ecx, [esi+14h]
push	ecx
push	ebx
mov	[esi+8], eax
call	sub_1002A6A0
add	esp, 0Ch
mov	[esi+0Ch], eax
cmp	edi, ebp
jz	short loc_1001A34F
mov	edi, [edi+0Ch]
jmp	short loc_1001A351
xor	edi, edi
mov	ebx, [esp+1Ch+arg_0]
mov	[esi+18h], edi
mov	edi, [esp+1Ch+arg_8]
mov	[esi+1Ch], ebp
mov	[esi+2Ch], ebx
cmp	edi, ebp
jz	short loc_1001A37F
cmp	[edi+8], ebp
jbe	short loc_1001A376
push	edi
call	SECITEM_DupItem_Util
mov	[esi+24h], eax
jmp	short loc_1001A38C
mov	dword ptr [esi+24h], offset dword_100A2AE8
jmp	short loc_1001A38F
push	0FFFFE005h
call	PORT_SetError_Util
mov	[esi+24h], ebp
add	esp, 4
mov	[esi+28h], ebp
call	ds:PR_NewLock
mov	[esi+10h], eax
cmp	[esi+24h], ebp
jz	short loc_1001A3E7
cmp	eax, ebp
jz	short loc_1001A3E7
mov	edx, [edi+4]
mov	eax, [edi+8]
push	esi
mov	[esp+20h+var_C], ebx
mov	[esp+20h+var_8], edx
mov	[esp+20h+var_4], eax
call	sub_10019AA0
lea	edi, [esp+20h+var_C]
mov	eax, esi
call	sub_1001A190
push	esi
mov	edi, eax
call	sub_10019AD0
add	esp, 8
cmp	edi, ebp
jnz	short loc_1001A3E7
mov	dword ptr [esi+28h], 1
mov	eax, esi
pop	esi
pop	edi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
			
push	1
push	esi
call	PK11_DestroyContext
add	esp, 8
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
public PK11_CreateContextBySymKey
			
push	ebx
mov	ebx, [esp+4+arg_0]
push	esi
mov	esi, [esp+8+arg_8]
push	edi
mov	edi, [esp+0Ch+arg_4]
push	edi
push	ebx
push	esi
call	sub_100322D0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1001A449
push	esi
call	PK11_ReferenceSymKey
add	esp, 4
jmp	short loc_1001A44B
mov	esi, eax
mov	eax, [esp+0Ch+arg_C]
mov	ecx, [esi+8]
push	eax
push	edi
push	ebx
mov	eax, esi
call	sub_1001A2B0
push	esi
mov	edi, eax
call	PK11_FreeSymKey
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
public PK11_CreateDigestContext
			
mov	eax, [esp+arg_0]
sub	esp, 0Ch
push	esi
push	edi
push	eax
call	PK11_AlgtagToMechanism
mov	edi, eax
push	0
push	edi
call	PK11_GetBestSlot
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1001A4A7
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
lea	ecx, [esp+14h+var_C]
push	ecx
push	81000000h
push	edi
xor	eax, eax
mov	ecx, esi
mov	[esp+20h+var_8], 0
mov	[esp+20h+var_4], 0
mov	[esp+20h+var_C], 0
call	sub_1001A2B0
push	esi
mov	edi, eax
call	PK11_FreeSlot
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
add	esp, 0Ch
retn
align 10h
public PK11_CloneContext
			
sub	esp, 8
push	ebx
push	ebp
push	esi
mov	esi, [esp+14h+Size]
mov	eax, [esi+24h]
mov	ecx, [esi]
mov	edx, [esi+2Ch]
push	eax
mov	eax, [esi+4]
push	ecx
mov	ecx, [esi+8]
xor	ebx, ebx
push	edx
mov	[esp+20h+var_8], ebx
call	sub_1001A2B0
mov	ebp, eax
add	esp, 0Ch
cmp	ebp, ebx
jnz	short loc_1001A528
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
push	edi
cmp	[esi+14h], ebx
jz	loc_1001A5F1
mov	eax, [esi+8]
cmp	[eax+30h], ebx
jz	short loc_1001A546
mov	eax, [esi+10h]
push	eax
call	ds:PR_Lock
jmp	short loc_1001A54C
push	eax
call	sub_10035650
mov	ecx, [esi+8]
mov	edx, [ecx]
mov	ecx, [esi+0Ch]
mov	edx, [edx+42h]
add	esp, 4
lea	eax, [esp+18h+Size]
push	eax
push	ebx
push	ecx
call	edx
mov	eax, [esp+24h+Size]
push	eax
mov	[esp+28h+var_4], eax
call	PORT_Alloc_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_1001A5B1
mov	eax, [esi+8]
mov	ecx, [eax]
mov	eax, [esi+0Ch]
mov	ecx, [ecx+42h]
lea	edx, [esp+18h+Size]
push	edx
push	edi
push	eax
call	ecx
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_1001A5B3
mov	edx, [esp+18h+var_4]
push	edx
push	edi
call	PORT_ZFree_Util
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 10h
xor	edi, edi
cmp	dword ptr [esi+14h], 0
jz	short loc_1001A5DA
mov	eax, [esi+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001A5DA
mov	ecx, [esi+10h]
push	ecx
call	ds:PR_Unlock
mov	esi, [esp+1Ch+Size]
add	esp, 4
mov	ebx, 1
jmp	short loc_1001A5FB
			
mov	edx, [esi+8]
push	edx
call	sub_10035670
mov	esi, [esp+1Ch+Size]
add	esp, 4
mov	ebx, 1
jmp	short loc_1001A5FB
mov	edi, [esi+1Ch]
mov	esi, [esi+20h]
mov	[esp+18h+Size],	esi
			
test	edi, edi
jz	short loc_1001A66F
cmp	dword ptr [ebp+14h], 0
jz	short loc_1001A626
push	ebp
call	sub_10019AA0
mov	eax, [esp+1Ch+Size]
push	eax
push	edi
push	ebp
call	sub_10019C20
push	ebp
mov	[esp+2Ch+var_8], eax
call	sub_10019AD0
add	esp, 14h
jmp	short loc_1001A65B
mov	eax, [ebp+1Ch]
test	eax, eax
jz	short loc_1001A646
cmp	[ebp+20h], esi
jb	short loc_1001A646
push	esi		
push	edi		
push	eax		
call	memcpy
mov	ecx, [esp+24h+Size]
add	esp, 0Ch
mov	[ebp+20h], ecx
jmp	short loc_1001A65B
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
mov	[esp+18h+var_8], 0FFFFFFFFh
			
test	ebx, ebx
jz	short loc_1001A668
push	edi
call	PORT_Free_Util
add	esp, 4
cmp	[esp+18h+var_8], 0
jz	short loc_1001A684
push	1
push	ebp
call	PK11_DestroyContext
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
public PK11_RestoreContext
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
xor	ebx, ebx
push	edi
cmp	[esi+14h], ebx
jz	short loc_1001A708
mov	eax, [esi+8]
cmp	[eax+30h], ebx
jz	short loc_1001A6B2
mov	eax, [esi+10h]
push	eax
call	ds:PR_Lock
jmp	short loc_1001A6B8
push	eax
call	sub_10035650
add	esp, 4
push	esi
call	sub_10019E40
mov	ecx, [esp+10h+Size]
mov	edx, [esp+10h+Src]
push	ecx
push	edx
push	esi
call	sub_10019C20
add	esp, 10h
mov	edi, eax
cmp	[esi+14h], ebx
jz	short loc_1001A6F6
mov	eax, [esi+8]
cmp	[eax+30h], ebx
jz	short loc_1001A6F6
mov	ecx, [esi+10h]
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
			
mov	edx, [esi+8]
push	edx
call	sub_10035670
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
mov	eax, [esi+1Ch]
test	eax, eax
jz	short loc_1001A730
mov	edi, [esp+0Ch+Size]
cmp	[esi+20h], edi
jb	short loc_1001A730
mov	ecx, [esp+0Ch+Src]
push	edi		
push	ecx		
push	eax		
call	memcpy
add	esp, 0Ch
mov	[esi+20h], edi
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
public PK11_DigestBegin
			
			
sub	esp, 0Ch
push	esi
mov	esi, [esp+10h+arg_0]
cmp	dword ptr [esi+28h], 1
jz	loc_1001A7F3
cmp	dword ptr [esi+14h], 0
jz	short loc_1001A77D
mov	eax, [esi+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001A77D
mov	ecx, [esi+10h]
push	ecx
call	ds:PR_Lock
jmp	short loc_1001A786
			
mov	edx, [esi+8]
push	edx
call	sub_10035650
add	esp, 4
push	edi
push	esi
call	sub_10019E40
mov	eax, [esi+2Ch]
mov	[esp+18h+var_C], eax
mov	eax, [esi+24h]
mov	ecx, [eax+4]
mov	[esp+18h+var_8], ecx
mov	edx, [eax+8]
add	esp, 4
lea	edi, [esp+14h+var_C]
mov	eax, esi
mov	[esp+14h+var_4], edx
call	sub_1001A190
cmp	dword ptr [esi+14h], 0
mov	edi, eax
jz	short loc_1001A7D3
mov	eax, [esi+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001A7D3
mov	ecx, [esi+10h]
push	ecx
call	ds:PR_Unlock
jmp	short loc_1001A7DC
			
mov	edx, [esi+8]
push	edx
call	sub_10035670
add	esp, 4
test	edi, edi
pop	edi
jz	short loc_1001A7EC
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
mov	dword ptr [esi+28h], 1
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
align 10h
public PK11_CipherOp
			
sub	esp, 24h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+24h+var_4], eax
mov	eax, [esp+24h+arg_8]
push	ebx
mov	ebx, [esp+28h+arg_0]
push	ebp
mov	ebp, [esp+2Ch+arg_10]
push	esi
mov	esi, [esp+30h+arg_4]
mov	[esp+30h+var_1C], eax
xor	eax, eax
push	edi
mov	edi, [esp+34h+arg_C]
mov	[esp+34h+Size],	edi
mov	[esp+34h+var_14], eax
mov	[esp+34h+var_20], eax
mov	[esp+34h+Dst], esi
mov	[esp+34h+Src], eax
cmp	[ebx+14h], eax
jz	short loc_1001A859
mov	ecx, [ebx+8]
cmp	[ecx+30h], eax
jz	short loc_1001A859
mov	edx, [ebx+10h]
push	edx
call	ds:PR_Lock
jmp	short loc_1001A862
			
mov	eax, [ebx+8]
push	eax
call	sub_10035650
add	esp, 4
cmp	dword ptr [ebx+14h], 0
jnz	short loc_1001A888
mov	ecx, [ebx+20h]
mov	edx, [ebx+1Ch]
push	ecx
push	edx
push	ebx
call	sub_10019C20
add	esp, 0Ch
mov	[esp+34h+var_20], eax
test	eax, eax
jnz	loc_1001AA91
cmp	dword ptr [ebx+30h], 0
jz	loc_1001A99F
mov	eax, [ebx]
cmp	eax, 104h
jnz	loc_1001A95E
cmp	dword ptr [ebx+14h], 0
jz	short loc_1001A8BA
mov	eax, [ebx+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001A8BA
mov	ecx, [ebx+10h]
push	ecx
call	ds:PR_Unlock
jmp	short loc_1001A8C3
			
mov	edx, [ebx+8]
push	edx
call	sub_10035670
add	esp, 4
lea	eax, [esp+34h+var_C]
push	8
push	eax
call	PK11_GenerateRandom
add	esp, 8
cmp	dword ptr [ebx+14h], 0
mov	[esp+34h+var_20], eax
jz	short loc_1001A8F4
mov	ecx, [ebx+8]
cmp	dword ptr [ecx+30h], 0
jz	short loc_1001A8F4
mov	edx, [ebx+10h]
push	edx
call	ds:PR_Lock
jmp	short loc_1001A8FD
			
mov	eax, [ebx+8]
push	eax
call	sub_10035650
add	esp, 4
push	edi
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
mov	[esp+34h+Src], esi
test	esi, esi
jnz	short loc_1001A932
push	ebx
call	sub_10019AD0
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+24h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 24h
retn
mov	ecx, [ebx+8]
mov	edx, [ecx]
lea	eax, [esp+34h+Size]
push	eax
mov	eax, [ebx+0Ch]
push	esi
push	8
lea	ecx, [esp+40h+var_C]
push	ecx
mov	ecx, [edx+7Eh]
push	eax
call	ecx
mov	eax, [esp+48h+Size]
add	esp, 14h
add	esi, eax
sub	edi, eax
mov	[esp+34h+var_14], eax
jmp	short loc_1001A99F
cmp	eax, 105h
jnz	short loc_1001A99F
mov	edx, [ebx+8]
mov	[esp+34h+Size],	8
mov	eax, [edx]
lea	ecx, [esp+34h+Size]
push	ecx
mov	ecx, [ebx+0Ch]
lea	edx, [esp+38h+var_C]
push	edx
mov	edx, [eax+8Eh]
push	8
push	ebp
push	ecx
call	edx
mov	eax, [esp+48h+Size]
sub	[esp+48h+arg_14], eax
add	esp, 14h
add	ebp, eax
mov	dword ptr [ebx+30h], 0
			
mov	eax, [ebx]
sub	eax, 104h
jz	short loc_1001A9D8
dec	eax
jz	short loc_1001A9B2
mov	eax, 91h
jmp	short loc_1001AA05
mov	eax, [ebx+8]
lea	edx, [esp+34h+Size]
push	edx
mov	edx, [ebx+0Ch]
mov	[esp+38h+Size],	edi
mov	ecx, [eax]
mov	eax, [esp+38h+arg_14]
push	esi
push	eax
mov	eax, [ecx+8Eh]
push	ebp
push	edx
call	eax
add	esp, 14h
jmp	short loc_1001AA01
mov	ecx, [ebx+8]
lea	eax, [esp+34h+Size]
push	eax
mov	eax, [ebx+0Ch]
mov	[esp+38h+Size],	edi
mov	edx, [ecx]
mov	ecx, [esp+38h+arg_14]
push	esi
push	ecx
mov	ecx, [edx+7Eh]
push	ebp
push	eax
call	ecx
mov	edx, [esp+48h+var_14]
add	esp, 14h
add	[esp+34h+Size],	edx
test	eax, eax
jz	short loc_1001AA28
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	eax, [esp+3Ch+var_1C]
add	esp, 8
mov	dword ptr [eax], 0
mov	[esp+34h+var_20], 0FFFFFFFFh
jmp	short loc_1001AA32
mov	ecx, [esp+34h+var_1C]
mov	edx, [esp+34h+Size]
mov	[ecx], edx
cmp	dword ptr [ebx+30h], 0
jz	short loc_1001AA64
cmp	dword ptr [ebx], 104h
jnz	short loc_1001AA5D
mov	eax, [esp+34h+Size]
mov	esi, [esp+34h+Src]
mov	ecx, [esp+34h+Dst]
push	eax		
push	esi		
push	ecx		
call	memcpy
push	esi
call	PORT_Free_Util
add	esp, 10h
mov	dword ptr [ebx+30h], 0
cmp	dword ptr [ebx+14h], 0
jnz	short loc_1001AA97
mov	eax, [ebx+1Ch]
lea	edx, [ebx+20h]
push	edx
call	sub_10019B90
add	esp, 4
mov	[ebx+1Ch], eax
test	eax, eax
jnz	short loc_1001AA88
mov	[esp+34h+var_20], 0FFFFFFFFh
push	ebx
call	sub_10019E40
add	esp, 4
cmp	dword ptr [ebx+14h], 0
jz	short loc_1001AAAC
mov	eax, [ebx+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001AAAC
mov	ecx, [ebx+10h]
push	ecx
call	ds:PR_Unlock
jmp	short loc_1001AAB5
			
mov	edx, [ebx+8]
push	edx
call	sub_10035670
mov	ecx, [esp+38h+var_4]
mov	eax, [esp+38h+var_20]
add	esp, 4
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 24h
retn
align 10h
public PK11_DigestOp
			
			
push	ebp
push	edi
mov	edi, [esp+8+arg_8]
xor	ebp, ebp
cmp	edi, ebp
jnz	short loc_1001AAE1
pop	edi
xor	eax, eax
pop	ebp
retn
push	esi
mov	esi, [esp+0Ch+arg_4]
cmp	esi, ebp
jnz	short loc_1001AAFE
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	edi
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	ebx
mov	ebx, [esp+10h+arg_0]
mov	[ebx+28h], ebp
cmp	[ebx+14h], ebp
jz	short loc_1001AB1F
mov	eax, [ebx+8]
cmp	[eax+30h], ebp
jz	short loc_1001AB1F
mov	ecx, [ebx+10h]
push	ecx
call	ds:PR_Lock
jmp	short loc_1001AB28
			
mov	edx, [ebx+8]
push	edx
call	sub_10035650
add	esp, 4
cmp	[ebx+14h], ebp
jnz	short loc_1001AB57
mov	eax, [ebx+20h]
mov	ecx, [ebx+1Ch]
push	eax
push	ecx
push	ebx
call	sub_10019C20
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_1001AB57
push	ebx
call	sub_10019AD0
add	esp, 4
pop	ebx
pop	esi
pop	edi
mov	eax, ebp
pop	ebp
retn
			
mov	eax, [ebx]
cmp	eax, 108h
jz	short loc_1001AB9F
cmp	eax, 10Ah
jz	short loc_1001AB8A
cmp	eax, 81000000h
jz	short loc_1001AB75
mov	eax, 91h
jmp	short loc_1001ABB9
mov	edx, [ebx+8]
mov	eax, [edx]
mov	ecx, [ebx+0Ch]
mov	edx, [eax+9Eh]
push	edi
push	esi
push	ecx
call	edx
jmp	short loc_1001ABB2
mov	eax, [ebx+8]
mov	ecx, [eax]
mov	edx, [ebx+0Ch]
mov	eax, [ecx+0CAh]
push	edi
push	esi
push	edx
call	eax
jmp	short loc_1001ABB2
mov	ecx, [ebx+8]
mov	edx, [ecx]
mov	eax, [ebx+0Ch]
mov	ecx, [edx+0B2h]
push	edi
push	esi
push	eax
call	ecx
			
add	esp, 0Ch
test	eax, eax
jz	short loc_1001ABCB
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	ebp, 0FFFFFFFFh
cmp	dword ptr [ebx+14h], 0
jnz	short loc_1001ABF9
mov	eax, [ebx+1Ch]
lea	edx, [ebx+20h]
push	edx
call	sub_10019B90
add	esp, 4
mov	[ebx+1Ch], eax
test	eax, eax
jnz	short loc_1001ABEA
or	ebp, 0FFFFFFFFh
push	ebx
call	sub_10019E40
add	esp, 4
cmp	dword ptr [ebx+14h], 0
jz	short loc_1001AC16
mov	eax, [ebx+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001AC16
mov	ecx, [ebx+10h]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	ebx
pop	esi
pop	edi
mov	eax, ebp
pop	ebp
retn
			
mov	edx, [ebx+8]
push	edx
call	sub_10035670
add	esp, 4
pop	ebx
pop	esi
pop	edi
mov	eax, ebp
pop	ebp
retn
align 10h
public PK11_DigestKey
push	ebx
mov	ebx, [esp+4+arg_0]
push	ebp
xor	ebp, ebp
push	esi
test	ebx, ebx
jz	loc_1001AD8E
mov	esi, [esp+0Ch+arg_4]
test	esi, esi
jz	loc_1001AD8E
mov	eax, [ebx+8]
push	edi
push	esi
cmp	eax, [esi+8]
jz	short loc_1001AC6C
push	108h
push	381h
push	eax
call	sub_100321F0
add	esp, 10h
jmp	short loc_1001AC74
call	PK11_ReferenceSymKey
add	esp, 4
mov	edi, eax
mov	[ebx+28h], ebp
cmp	[ebx+14h], ebp
jz	short loc_1001AC92
mov	eax, [ebx+8]
cmp	[eax+30h], ebp
jz	short loc_1001AC92
mov	ecx, [ebx+10h]
push	ecx
call	ds:PR_Lock
jmp	short loc_1001AC9B
			
mov	edx, [ebx+8]
push	edx
call	sub_10035650
add	esp, 4
cmp	[ebx+14h], ebp
jnz	short loc_1001ACD0
mov	eax, [ebx+20h]
mov	ecx, [ebx+1Ch]
push	eax
push	ecx
push	ebx
call	sub_10019C20
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_1001ACD0
push	ebx
call	sub_10019AD0
push	edi
call	PK11_FreeSymKey
add	esp, 8
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
			
test	edi, edi
jnz	short loc_1001ACF9
mov	ecx, [esi+1Ch]
lea	eax, [edi+63h]
test	ecx, ecx
jz	short loc_1001AD15
mov	edx, [ebx+8]
mov	eax, [edx]
mov	edx, [esi+20h]
push	edx
mov	edx, [eax+9Eh]
push	ecx
mov	ecx, [ebx+0Ch]
push	ecx
call	edx
add	esp, 0Ch
jmp	short loc_1001AD11
mov	eax, [ebx+8]
mov	ecx, [eax]
mov	edx, [edi+4]
mov	eax, [ebx+0Ch]
mov	ecx, [ecx+0A2h]
push	edx
push	eax
call	ecx
add	esp, 8
test	eax, eax
jz	short loc_1001AD27
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	ebp, 0FFFFFFFFh
cmp	dword ptr [ebx+14h], 0
jnz	short loc_1001AD55
mov	eax, [ebx+1Ch]
lea	edx, [ebx+20h]
push	edx
call	sub_10019B90
add	esp, 4
mov	[ebx+1Ch], eax
test	eax, eax
jnz	short loc_1001AD46
or	ebp, 0FFFFFFFFh
push	ebx
call	sub_10019E40
add	esp, 4
cmp	dword ptr [ebx+14h], 0
jz	short loc_1001AD6A
mov	eax, [ebx+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001AD6A
mov	ecx, [ebx+10h]
push	ecx
call	ds:PR_Unlock
jmp	short loc_1001AD73
			
mov	edx, [ebx+8]
push	edx
call	sub_10035670
add	esp, 4
test	edi, edi
jz	loc_1001ACC9
push	edi
call	PK11_FreeSymKey
add	esp, 4
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
public PK11_Finalize
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+14h], 0
push	edi
jz	short loc_1001ADD1
mov	eax, [esi+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001ADD1
mov	ecx, [esi+10h]
push	ecx
call	ds:PR_Lock
jmp	short loc_1001ADDA
			
mov	edx, [esi+8]
push	edx
call	sub_10035650
add	esp, 4
push	esi
call	sub_10019E40
add	esp, 4
cmp	dword ptr [esi+14h], 0
mov	edi, eax
jz	short loc_1001AE09
mov	eax, [esi+8]
cmp	dword ptr [eax+30h], 0
jz	short loc_1001AE09
mov	ecx, [esi+10h]
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
			
mov	edx, [esi+8]
push	edx
call	sub_10035670
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public __PK11_CreateContextByRawKey
push	ecx
push	ebx
mov	ebx, [esp+8+arg_4]
push	ebp
push	esi
mov	esi, [esp+10h+arg_18]
push	edi
mov	edi, [esp+14h+arg_0]
xor	ebp, ebp
mov	[esp+14h+var_4], ebp
test	edi, edi
jnz	short loc_1001AE62
push	esi
push	ebx
call	PK11_GetBestSlot
add	esp, 8
mov	[esp+14h+arg_0], eax
test	eax, eax
jnz	short loc_1001AE6D
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
pop	ecx
retn
push	edi
call	PK11_ReferenceSlot
add	esp, 4
jmp	short loc_1001AE6F
mov	edi, eax
mov	eax, [esp+14h+arg_10]
mov	ebp, [esp+14h+arg_C]
mov	ecx, [esp+14h+arg_8]
push	esi
push	eax
push	ebp
push	ecx
push	ebx
push	edi
call	PK11_ImportSymKey
mov	esi, eax
add	esp, 18h
test	esi, esi
jz	short loc_1001AEE4
push	ebp
push	ebx
push	esi
mov	edi, esi
call	sub_100322D0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1001AEAB
push	esi
call	PK11_ReferenceSymKey
add	esp, 4
jmp	short loc_1001AEAD
mov	edi, eax
mov	edx, [esp+14h+arg_14]
mov	ecx, [edi+8]
push	edx
push	ebp
push	ebx
mov	eax, edi
call	sub_1001A2B0
push	edi
mov	ebx, eax
call	PK11_FreeSymKey
push	esi
call	PK11_FreeSymKey
mov	edi, [esp+28h+arg_0]
add	esp, 14h
push	edi
call	PK11_FreeSlot
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
pop	ecx
retn
mov	ebx, [esp+14h+var_4]
push	edi
call	PK11_FreeSlot
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
pop	ecx
retn
align 10h
public PK11_HashBuf
			
push	ebx
mov	ebx, [esp+4+arg_C]
test	ebx, ebx
jns	short loc_1001AF1B
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	ebp
mov	ebp, [esp+8+arg_0]
push	esi
push	ebp
call	PK11_CreateDigestContext
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1001AF37
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	edi
push	esi
call	PK11_DigestBegin
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_1001AF59
push	1
push	esi
call	PK11_DestroyContext
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
mov	eax, [esp+10h+arg_8]
push	ebx
push	eax
push	esi
call	PK11_DigestOp
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_1001AF47
push	ebp
call	HASH_ResultLenByOidTag
add	esp, 4
test	eax, eax
jnz	short loc_1001AF80
mov	eax, 40h
mov	edx, [esp+10h+arg_4]
push	eax
lea	ecx, [esp+14h+arg_C]
push	ecx
push	edx
push	esi
call	PK11_DigestFinal
push	1
push	esi
mov	edi, eax
call	PK11_DestroyContext
add	esp, 18h
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
			
mov	eax, [esp+arg_0]
cmp	eax, 100h
ja	loc_1001B04F
jz	short loc_1001AFDA 
cmp	eax, 0F2h	
ja	loc_1001B0AC	
movzx	eax, ds:byte_1001B11C[eax]
jmp	ds:off_1001B0C0[eax*4] 
			
			
xor	eax, eax	
retn
			
mov	eax, 0FFFFE000h	
retn
			
mov	eax, 0FFFFE013h	
retn
			
mov	eax, 0FFFFE002h	
retn
			
mov	eax, 0FFFFE005h	
retn
			
mov	eax, 0FFFFE042h	
retn
			
mov	eax, 0FFFFE004h	
retn
			
mov	eax, 0FFFFE0A9h	
retn
			
			
mov	eax, 0FFFFE041h	
			
retn
			
mov	eax, 0FFFFE0A8h	
retn
			
mov	eax, 0FFFFE898h	
retn
			
mov	eax, 0FFFFE0A7h	
retn
			
mov	eax, 0FFFFE006h	
retn
			
mov	eax, 0FFFFE098h	
retn
			
mov	eax, 0FFFFE00Fh	
retn
			
mov	eax, 0FFFFE065h	
retn
			
mov	eax, 0FFFFE0ACh	
retn
			
mov	eax, 0FFFFE0ADh	
retn
			
mov	eax, 0FFFFE00Ah	
retn
			
mov	eax, 0FFFFE097h	
retn
cmp	eax, 114h
ja	short loc_1001B076
jz	short loc_1001B08B 
			
add	eax, 0FFFFFEFFh	
cmp	eax, 12h
ja	short loc_1001B0AC 
movzx	ecx, ds:byte_1001B224[eax]
jmp	ds:off_1001B210[ecx*4] 
			
mov	eax, 0FFFFE09Bh	
retn
cmp	eax, 150h
ja	short loc_1001B097
jz	short loc_1001B091
sub	eax, 115h
jz	short loc_1001B08B 
			
sub	eax, 1Bh
jnz	short loc_1001B0AC 
			
mov	eax, 0FFFFE028h	
			
retn
mov	eax, 0FFFFE003h
retn
cmp	eax, 80000000h
jz	short loc_1001B0B8 
			
cmp	eax, 0CE534351h
jz	short loc_1001B0B2
cmp	eax, 0CE534352h
jz	short loc_1001B0B2
			
mov	eax, 0FFFFE0AEh	
retn
			
mov	eax, 0FFFFE012h
retn
			
mov	eax, 0FFFFE001h	
			
retn
align 10h
			
dd offset loc_1001AFE9,	offset loc_1001B019, offset loc_1001B00D 
dd offset loc_1001AFEF,	offset loc_1001B025, offset loc_1001B049
dd offset loc_1001AFF5,	offset loc_1001AFFB, offset loc_1001B001
dd offset loc_1001B007,	offset loc_1001B0B8, offset loc_1001B013
dd offset loc_1001B08B,	offset loc_1001B01F, offset loc_1001B02B
dd offset loc_1001B031,	offset loc_1001B037, offset loc_1001B03D
dd offset loc_1001B043,	offset loc_1001B0AC
			
db 16h,	16h, 9,	1, 3, 3, 16h, 16h, 16h,	16h, 16h, 16h 
db 16h,	16h, 16h, 16h, 16h, 16h, 3, 0Ah, 16h, 16h, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 16h,	16h, 16h
db 0Bh,	2, 0Ch,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 16h
db 16h,	16h, 16h, 16h, 16h, 3, 3, 16h, 16h, 16h, 16h, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 16h,	0Dh, 0Dh
db 16h,	16h, 0Eh, 16h, 16h, 16h, 16h, 16h, 16h,	16h, 16h
db 16h,	16h, 16h, 0Fh, 16h, 0Fh, 0Fh, 16h, 16h,	16h, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 10h,	3, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 16h,	16h, 16h
db 16h,	16h, 16h, 16h, 3, 16h, 16h, 16h, 16h, 16h, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 0Dh, 0Dh,	16h, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 16h,	16h, 16h
db 16h,	11h, 12h, 12h, 13h, 14h, 16h, 16h, 16h,	16h, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 0Dh, 2, 16h, 3, 0Dh, 9
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 16h,	16h, 15h
db 15h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 16h,	16h, 16h
db 16h,	16h, 16h, 16h, 3, 3, 16h, 16h, 16h, 16h, 16h, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 0Ch,	1, 9, 16h
db 16h,	16h, 16h, 16h, 16h, 16h, 16h, 16h, 16h,	16h, 16h
db 16h,	0Fh, 0Fh, 0Fh
align 10h
dd offset loc_1001B007	
dd offset loc_1001B0B8
dd offset loc_1001B08B
dd offset loc_1001B0AC
db	4,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     3
db	4,     3,     3
align 10h
sub	esp, 20h
xor	eax, eax
mov	[esp+20h+var_1C], eax
mov	[esp+20h+var_18], eax
lea	eax, [esp+20h+var_20]
mov	[esp+20h+var_14], eax
mov	eax, 4
push	2
lea	edx, [esp+24h+var_18]
mov	[esp+24h+var_10], eax
mov	[esp+24h+var_4], eax
mov	eax, [esp+24h+arg_0]
push	edx
lea	ecx, [esp+28h+var_1C]
push	eax
mov	[esp+2Ch+var_20], 2
mov	[esp+2Ch+var_C], 100h
mov	[esp+2Ch+var_8], ecx
call	sub_1002C4F0
add	esp, 2Ch
retn
align 10h
			
sub	esp, 18h
push	ebx
push	ebp
mov	ebp, [esp+20h+arg_14]
mov	eax, [ebp+8]
push	esi
push	1
xor	ebx, ebx
push	eax
mov	[esp+2Ch+var_10], ebx
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jz	loc_1001B476
mov	esi, [esp+24h+arg_0]
push	1
push	esi
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jz	loc_1001B476
push	edi
push	ebp
mov	[esp+2Ch+arg_14], ebx
call	PK11_GetKeyLength
push	esi
mov	[esp+30h+var_18], eax
mov	[esp+30h+var_8], ebx
call	sub_1001B240
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_1001B2FF
push	3
push	edi
push	esi
call	sub_1002C6E0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1001B359
mov	edi, [esp+28h+var_18]
cmp	edi, 35h
jbe	short loc_1001B317
push	0FFFFE069h
call	PORT_SetError_Util
jmp	loc_1001B438
cmp	edi, 15h
ja	short loc_1001B328
mov	[esp+28h+var_18], 100h
test	edi, edi
jnz	short loc_1001B330
mov	[esp+28h+var_18], 200h
mov	ecx, [ebp+0Ch]
push	ecx
push	1
push	0
lea	edx, [esp+34h+arg_14]
push	edx
lea	eax, [esp+38h+var_18]
push	eax
push	0
push	esi
mov	[esp+44h+var_14], 10001h
call	PK11_GenerateKeyPair
add	esp, 1Ch
mov	ebx, eax
jmp	short loc_1001B3AF
mov	ecx, [ebp+0Ch]
push	ecx
push	eax
push	1
push	0
push	esi
call	sub_10012FF0
mov	ebx, eax
add	esp, 14h
test	ebx, ebx
jz	loc_1001B43B
push	edi
push	1
push	esi
call	sub_10012B60
add	esp, 0Ch
mov	[esp+28h+arg_14], eax
test	eax, eax
jz	short loc_1001B3AB
cmp	dword ptr [eax+8], 0
jz	short loc_1001B3AB
mov	edx, [eax+8]
push	edx
call	PK11_FreeSlot
mov	ecx, [esp+2Ch+arg_14]
add	esp, 4
xor	eax, eax
mov	[ecx+8], eax
mov	edx, [esp+28h+arg_14]
mov	[edx+0Ch], eax
			
mov	edi, [esp+28h+var_18]
test	ebx, ebx
jz	loc_1001B43B
mov	eax, [esp+28h+arg_14]
test	eax, eax
jz	short loc_1001B43B
push	eax
call	SECKEY_PublicKeyStrength
add	esp, 4
mov	[esp+28h+var_4], eax
test	eax, eax
jz	short loc_1001B43B
push	eax
call	PORT_Alloc_Util
add	esp, 4
mov	[esp+28h+var_8], eax
test	eax, eax
jz	short loc_1001B44C
mov	ecx, [esp+28h+arg_14]
lea	eax, [esp+28h+var_C]
push	eax
push	ebp
push	ecx
push	1
call	PK11_PubWrapSymKey
add	esp, 10h
test	eax, eax
jnz	short loc_1001B43B
mov	edx, [esp+28h+arg_10]
mov	eax, [esp+28h+arg_C]
mov	ecx, [esp+28h+arg_8]
push	edx
mov	edx, [esp+2Ch+arg_4]
push	eax
push	edi
push	ecx
push	edx
lea	eax, [esp+3Ch+var_C]
push	eax
push	ebx
call	PK11_PubUnwrapSymKeyWithFlagsPerm
add	esp, 1Ch
mov	[esp+28h+var_10], eax
test	eax, eax
jz	short loc_1001B43B
cmp	[eax+8], esi
jz	short loc_1001B43B
push	eax
call	PK11_FreeSymKey
mov	[esp+2Ch+var_10], 0
add	esp, 4
			
mov	eax, [esp+28h+var_8]
test	eax, eax
jz	short loc_1001B44C
push	eax
call	PORT_Free_Util
add	esp, 4
			
pop	edi
test	ebx, ebx
jz	short loc_1001B45A
push	ebx
call	SECKEY_DestroyPrivateKey
add	esp, 4
mov	eax, [esp+24h+arg_14]
test	eax, eax
jz	short loc_1001B46B
push	eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	eax, [esp+24h+var_10]
pop	esi
pop	ebp
pop	ebx
add	esp, 18h
retn
			
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 18h
retn
align 10h
push	offset aModulelistlock 
push	0Ah
call	NSSRWLock_New_Util
add	esp, 8
retn
align 10h
align 10h
			
mov	eax, [esp+arg_4]
mov	ecx, [eax]
mov	edx, [esp+arg_0]
mov	[edx], ecx
mov	dword ptr [eax], 0
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_8]
test	esi, esi
jz	short loc_1001B4F2
push	esi
call	NSSRWLock_LockWrite_Util
add	esp, 4
mov	eax, [esp+4+arg_0]
mov	edx, [eax]
mov	ecx, [esp+4+arg_4]
mov	[ecx], edx
mov	[eax], ecx
test	esi, esi
jz	short loc_1001B50D
push	esi
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
pop	esi
retn
align 10h
cmp	eax, 100h
ja	loc_1001B6AA
jz	loc_1001B693
cmp	eax, 87h	
ja	loc_1001BE6B	
movzx	ecx, ds:byte_1001BEC0[eax]
jmp	ds:off_1001BE80[ecx*4] 
			
mov	eax, offset aCka_class 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_token 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_private 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_label 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_applicatio 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_value 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_object_id 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_certificat 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_certific_0 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_issuer	
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_serial_num 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_ac_issuer 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_owner 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_attr_types 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trusted 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_key_type 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 200h
ja	loc_1001BA5C
jz	loc_1001BA45
lea	ecx, [eax-101h]	
cmp	ecx, 80h
ja	loc_1001BE6B	
movzx	ecx, ds:byte_1001BFE4[ecx]
jmp	ds:off_1001BF48[ecx*4] 
			
mov	eax, offset aCka_subject 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_id 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_sensitive 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_encrypt 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_decrypt 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_wrap 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_unwrap	
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_sign 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_sign_recov 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_verify	
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_verify_rec 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_derive	
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_start_date 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_end_date 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_modulus 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_modulus_bi 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_public_exp 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_private_ex 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_prime_1 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_prime_2 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_exponent_1 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_exponent_2 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_coefficien 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_prime 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_subprime 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_base 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_prime_bits 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_subprime_b 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_value_bits 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_value_len 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_extractabl 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_local 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_never_extr 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_always_sen 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_key_gen_me 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_modifiable 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_ecdsa_para 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_ec_point 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_secondary_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 0CE536350h
ja	loc_1001BC9F
jz	loc_1001BC88
cmp	eax, 0CE534354h
ja	loc_1001BBB3
jz	loc_1001BB9C
cmp	eax, 300h
ja	short loc_1001BAC0
jz	short loc_1001BAA9
cmp	eax, 201h
jnz	loc_1001BE6B	
mov	eax, offset aCka_auth_pin_f 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_hw_feature 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 80000001h
ja	short loc_1001BB3E
jz	short loc_1001BB27
cmp	eax, 301h
jz	short loc_1001BB10
cmp	eax, 302h
jz	short loc_1001BAF9
cmp	eax, 80000000h
jnz	loc_1001BE6B	
mov	eax, offset aCka_vendor_def 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_has_reset 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_reset_on_i 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_netscape_t 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 0CE534351h
jz	short loc_1001BB85
cmp	eax, 0CE534352h
jz	short loc_1001BB6E
cmp	eax, 0CE534353h
jnz	loc_1001BE6B	
mov	eax, offset aCka_nss_smime_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_nss_email 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_nss_url 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_nss_smim_0 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
lea	ecx, [eax+31ACBCABh] 
cmp	ecx, 12h
ja	loc_1001BE6B	
movzx	ecx, ds:byte_1001C08C[ecx]
jmp	ds:off_1001C068[ecx*4] 
			
mov	eax, offset aCka_nss_pkcs8_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_nss_passwo 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_nss_expire 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_nss_krl 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_nss_pqg_co 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_nss_pqg_se 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_nss_pqg_h 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_nss_pqg__0 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_trust 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 0D5A0DB00h
ja	loc_1001BE6B	
jz	loc_1001BE54
lea	ecx, [eax+31AC9CAFh] 
cmp	ecx, 64h
ja	loc_1001BE6B	
movzx	ecx, ds:byte_1001C0E8[ecx]
jmp	ds:off_1001C0A0[ecx*4] 
			
mov	eax, offset aCka_trust_digi 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_non_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_key_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_data 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_ke_0 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_ke_1 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_crl_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_serv 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_clie 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_code 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_emai 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_ipse 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_ip_0 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_ip_1 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_trust_time 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_cert_sha1_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCka_cert_md5_h 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCka_netscape_d 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
push	eax		
push	offset a0xP	
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
align 10h
			
dd offset loc_1001B57F,	offset loc_1001B596, offset loc_1001B5AD 
dd offset loc_1001B5C4,	offset loc_1001B5DB, offset loc_1001B609
dd offset loc_1001B620,	offset loc_1001B637, offset loc_1001B64E
dd offset loc_1001B665,	offset loc_1001B67C, offset loc_1001B5F2
dd offset loc_1001BE6B
db    0Fh,   0Fh,   0Fh,   0Fh 
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db	4,     5,     6,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db    0Fh,   0Fh,   0Fh,   0Fh
db	7,     8,     9,   0Ah
db    0Bh,   0Ch,   0Dh,   0Eh
			
dd offset loc_1001B720,	offset loc_1001B737, offset loc_1001B74E 
dd offset loc_1001B765,	offset loc_1001B77C, offset loc_1001B793
dd offset loc_1001B7AA,	offset loc_1001B7C1, offset loc_1001B7D8
dd offset loc_1001B7EF,	offset loc_1001B806, offset loc_1001B81D
dd offset loc_1001B834,	offset loc_1001B84B, offset loc_1001B862
dd offset loc_1001B879,	offset loc_1001B890, offset loc_1001B8A7
dd offset loc_1001B8BE,	offset loc_1001B8D5, offset loc_1001B8EC
dd offset loc_1001B903,	offset loc_1001B91A, offset loc_1001B931
dd offset loc_1001B948,	offset loc_1001B95F, offset loc_1001B976
dd offset loc_1001B98D,	offset loc_1001B9A4, offset loc_1001B9BB
dd offset loc_1001B9D2,	offset loc_1001B9E9, offset loc_1001BA00
dd offset loc_1001BA17,	offset loc_1001BA2E, offset loc_1001BE6B
db	4,     5,     6,     7 
db	8,     9,   0Ah,   0Bh
db    26h,   26h,   26h,   0Ch
db    0Dh,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   0Eh
db    0Fh,   10h,   11h,   12h
db    13h,   14h,   15h,   16h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   17h
db    18h,   19h,   1Ah,   1Bh
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   1Ch
db    1Dh,   1Eh,   1Fh,   20h
db    21h,   22h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   23h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   26h
db    26h,   26h,   26h,   24h
db    25h
align 4
dd offset loc_1001BBE7	
dd offset loc_1001BBFE
dd offset loc_1001BC15
dd offset loc_1001BC2C
dd offset loc_1001BC43
dd offset loc_1001BC5A
dd offset loc_1001BC71
dd offset loc_1001BE6B
db	8,     8,     8,     8 
db	8,     8,     8,     8
db	8,     8,     8,     4
db	5,     6,     7
align 10h
			
dd offset loc_1001BD12,	offset loc_1001BD29, offset loc_1001BD40 
dd offset loc_1001BD57,	offset loc_1001BD6E, offset loc_1001BD85
dd offset loc_1001BD9C,	offset loc_1001BDB3, offset loc_1001BDCA
dd offset loc_1001BDE1,	offset loc_1001BDF8, offset loc_1001BE0F
dd offset loc_1001BE26,	offset loc_1001BE3D, offset loc_1001BE6B
db	4,     5,     6,     7 
db	8,     9,   0Ah,   0Bh
db    0Ch,   0Dh,   0Eh,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   11h
db    11h,   11h,   11h,   0Fh
db    10h
align 10h
cmp	eax, 5
ja	loc_1001C1F9
jz	loc_1001C1E2
cmp	eax, 4		
ja	loc_1001C293	
jmp	ds:off_1001C2A8[eax*4] 
			
mov	eax, offset aCko_data 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCko_certificat 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCko_public_key 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCko_private_ke 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCko_secret_key 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCko_hw_feature 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 0CE534352h
ja	short loc_1001C257
jz	short loc_1001C240
cmp	eax, 6
jz	short loc_1001C229
cmp	eax, 0CE534351h
jnz	loc_1001C293	
mov	eax, offset aCko_nss_crl 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCko_domain_par 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCko_nss_smime 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 0CE534353h
jz	short loc_1001C27C
cmp	eax, 0CE534354h
jnz	short loc_1001C293 
mov	eax, offset aCko_nss_builti 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCko_nss_trust 
push	eax
push	offset dword_100A23E0
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
			
push	eax		
push	offset a0xP	
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
retn
align 4
dd offset loc_1001C186	
dd offset loc_1001C19D
dd offset loc_1001C1B4
dd offset loc_1001C1CB
align 10h
lea	eax, [ecx+31ACBCAFh] 
cmp	eax, 0Ah
ja	loc_1001C360	
jmp	ds:off_1001C374[eax*4] 
			
mov	eax, offset aCkt_nss_truste 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkt_nss_trus_0 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkt_nss_not_tr 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkt_nss_must_v 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkt_nss_trust_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkt_nss_valid_ 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
			
push	ecx		
push	offset a0xP	
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
align 4
dd offset loc_1001C2ED	
dd offset loc_1001C31B
dd offset loc_1001C360
dd offset loc_1001C332
dd offset loc_1001C360
dd offset loc_1001C360
dd offset loc_1001C360
dd offset loc_1001C360
dd offset loc_1001C304
dd offset loc_1001C349
			
cmp	eax, 100h
ja	loc_1001C64A
jz	loc_1001C640
cmp	eax, 0F2h	
ja	loc_1001C738	
movzx	ecx, ds:byte_1001C854[eax]
jmp	ds:off_1001C754[ecx*4] 
			
mov	eax, offset aCkr_ok 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_cancel	
jmp	loc_1001C71C
			
mov	eax, offset aCkr_host_memor 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_slot_id_in 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_general_er 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_function_f 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_arguments_ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_no_event 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_need_to_cr 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_cant_lock 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_attribute_ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_attribut_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_attribut_1 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_attribut_2 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_data_inval 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_data_len_r 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_device_err 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_device_mem 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_device_rem 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_encrypted_ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_encrypte_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_function_c 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_function_n 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_function_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_handle 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_size_r 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_type_i 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_not_ne 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_change 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_needed 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_indige 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_functi 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_not_wr 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_unextr 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_mechanism_ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_mechanis_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_object_han 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_operation_ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_operatio_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_pin_incorr 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_pin_invali 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_pin_len_ra 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_pin_expire 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_pin_locked 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_session_cl 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_session_co 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_session_ha 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_session_pa 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_session_re 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_session_ex 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_session__0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_session__1 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_signature_ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_signatur_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_template_i 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_template_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_token_not_ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_token_no_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_token_writ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_unwrapping 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_unwrappi_0 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_unwrappi_1 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_key_params 
jmp	loc_1001C71C
mov	eax, offset aCkr_user_alrea 
jmp	loc_1001C71C
cmp	eax, 200h
ja	loc_1001C738	
jz	loc_1001C717
lea	ecx, [eax-101h]	
cmp	ecx, 0A0h
ja	loc_1001C738	
movzx	edx, ds:byte_1001C9A0[ecx]
jmp	ds:off_1001C948[edx*4] 
			
mov	eax, offset aCkr_user_not_l 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_user_pin_n 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_user_type_ 
jmp	loc_1001C71C
			
mov	eax, offset aCkr_user_anoth 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_user_too_m 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_wrapped_ke 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_wrapped__0 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_wrapping_k 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_wrapping_0 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_wrapping_1 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_random_see 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_random_no_ 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_domain_par 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_buffer_too 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_saved_stat 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_informatio 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_state_unsa 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_cryptoki_n 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_cryptoki_a 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_mutex_bad 
jmp	short loc_1001C71C
			
mov	eax, offset aCkr_mutex_not_ 
jmp	short loc_1001C71C
mov	eax, offset aCkr_function_r 
			
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
jl	short locret_1001C753
push	eax
push	offset aRvS	
call	ds:PR_LogPrint
add	esp, 8
retn
			
mov	edx, dword_100BACD0 
cmp	dword ptr [edx+4], 1
jl	short locret_1001C753
push	eax
push	offset aRv0xX	
call	ds:PR_LogPrint
add	esp, 8
			
retn
			
dd offset loc_1001C3E8,	offset loc_1001C3F2, offset loc_1001C3FC 
dd offset loc_1001C406,	offset loc_1001C410, offset loc_1001C41A
dd offset loc_1001C424,	offset loc_1001C42E, offset loc_1001C438
dd offset loc_1001C442,	offset loc_1001C44C, offset loc_1001C456
dd offset loc_1001C460,	offset loc_1001C46A, offset loc_1001C474
dd offset loc_1001C47E,	offset loc_1001C488, offset loc_1001C492
dd offset loc_1001C49C,	offset loc_1001C4A6, offset loc_1001C4B0
dd offset loc_1001C4BA,	offset loc_1001C4C4, offset loc_1001C4CE
dd offset loc_1001C4D8,	offset loc_1001C4E2, offset loc_1001C4EC
dd offset loc_1001C4F6,	offset loc_1001C500, offset loc_1001C50A
dd offset loc_1001C514,	offset loc_1001C636, offset loc_1001C51E
dd offset loc_1001C528,	offset loc_1001C532, offset loc_1001C53C
dd offset loc_1001C546,	offset loc_1001C550, offset loc_1001C55A
dd offset loc_1001C564,	offset loc_1001C56E, offset loc_1001C578
dd offset loc_1001C582,	offset loc_1001C58C, offset loc_1001C596
dd offset loc_1001C5A0,	offset loc_1001C5AA, offset loc_1001C5B4
dd offset loc_1001C5BE,	offset loc_1001C5C8, offset loc_1001C5D2
dd offset loc_1001C5DC,	offset loc_1001C5E6, offset loc_1001C5F0
dd offset loc_1001C5FA,	offset loc_1001C604, offset loc_1001C60E
dd offset loc_1001C618,	offset loc_1001C622, offset loc_1001C62C
dd offset loc_1001C738
			
db 3Fh,	0Ah, 0Bh, 0Ch, 0Dh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh 
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 0Eh, 0Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 10h,	11h, 12h, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 13h, 14h, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 15h
db 16h,	3Fh, 3Fh, 17h, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 18h, 3Fh, 19h, 1Ah, 1Bh,	1Ch, 1Dh
db 1Eh,	1Fh, 20h, 21h, 22h, 3Fh, 3Fh, 3Fh, 3Fh,	23h, 24h
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 25h, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 26h,	27h, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 28h, 29h, 2Ah, 2Bh, 2Ch, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 2Dh, 2Eh,	3Fh, 2Fh
db 30h,	31h, 32h, 33h, 34h, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	35h, 36h, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 37h, 38h, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 39h,	3Ah, 3Bh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh, 3Fh,	3Fh, 3Fh
db 3Fh,	3Fh, 3Fh, 3Fh, 3Fh, 3Ch, 3Dh, 3Eh
align 4
			
dd offset loc_1001C699,	offset loc_1001C6A0, offset loc_1001C6A7 
dd offset loc_1001C6AE,	offset loc_1001C6B5, offset loc_1001C6BC
dd offset loc_1001C6C3,	offset loc_1001C6CA, offset loc_1001C6D1
dd offset loc_1001C6D8,	offset loc_1001C6DF, offset loc_1001C6E6
dd offset loc_1001C6ED,	offset loc_1001C6F4, offset loc_1001C6FB
dd offset loc_1001C702,	offset loc_1001C709, offset loc_1001C710
dd offset loc_1001C738
db	4,   15h,   15h,   15h 
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,     5
db    15h,     6,     7,     8
db	9,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   0Ah
db    0Bh,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   0Ch
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   0Dh
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   0Eh
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   0Fh
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   10h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   11h
db    12h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   15h
db    15h,   15h,   15h,   13h
db    14h
align 10h
cmp	eax, 4		
ja	short loc_1001CA99 
jmp	ds:off_1001CAB8[eax*4] 
			
mov	eax, offset aCks_ro_public_ 
jmp	short loc_1001CA7D
			
mov	eax, offset aCks_ro_user_fu 
jmp	short loc_1001CA7D
			
mov	eax, offset aCks_rw_public_ 
jmp	short loc_1001CA7D
			
mov	eax, offset aCks_rw_user_fu 
jmp	short loc_1001CA7D
			
mov	eax, offset aCks_rw_so_func 
			
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
jl	short locret_1001CAB4
push	eax
push	offset aStateS	
call	ds:PR_LogPrint
add	esp, 8
retn
mov	edx, dword_100BACD0 
cmp	dword ptr [edx+4], 1
jl	short locret_1001CAB4
push	eax
push	offset aState0xX 
call	ds:PR_LogPrint
add	esp, 8
			
retn
align 4
dd offset loc_1001CA63	
dd offset loc_1001CA6A
dd offset loc_1001CA71
dd offset loc_1001CA78
align 20h
			
mov	ecx, [eax]
mov	eax, ecx
mov	edx, 4
cmp	eax, 100h
ja	loc_1001CC5B
jz	loc_1001CC51
cmp	eax, 47h	
ja	loc_1001D35B	
movzx	eax, ds:byte_1001D3FC[eax]
jmp	ds:off_1001D378[eax*4] 
			
mov	eax, offset aCkm_dh_pkcs_de 
jmp	loc_1001D340
			
mov	eax, offset aCkm_dh_pkcs_ke 
jmp	loc_1001D340
			
mov	eax, offset aCkm_dsa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_dsa_key_pa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_dsa_sha1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_md2_rsa_pk 
jmp	loc_1001D340
			
mov	eax, offset aCkm_md5_rsa_pk 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ripemd128_ 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ripemd160_ 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rsa_9796 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rsa_pkcs 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rsa_pkcs_k 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rsa_pkcs_o 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rsa_pkcs_p 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rsa_x9_31 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rsa_x9_31_ 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rsa_x_509 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha1_rsa_p 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha1_rsa_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha1_rsa_x 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha224_rsa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha224_r_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha256_rsa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha256_r_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha384_rsa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha384_r_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha512_rsa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha512_r_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_x9_42_dh_d 
jmp	loc_1001D340
			
mov	eax, offset aCkm_x9_42_dh_h 
jmp	loc_1001D340
			
mov	eax, offset aCkm_x9_42_dh_k 
jmp	loc_1001D340
			
mov	eax, offset aCkm_x9_42_mqv_ 
jmp	loc_1001D340
mov	eax, offset aCkm_rc2_key_ge 
jmp	loc_1001D340
cmp	eax, 200h
ja	loc_1001CDBE
jz	loc_1001CDB4
sub	eax, 101h	
cmp	eax, 52h
ja	loc_1001D35B	
movzx	eax, ds:byte_1001D4C0[eax]
jmp	ds:off_1001D444[eax*4] 
			
mov	eax, offset aCkm_cdmf_cbc 
jmp	loc_1001D340
			
mov	eax, offset aCkm_cdmf_cbc_p 
jmp	loc_1001D340
			
mov	eax, offset aCkm_cdmf_ecb 
jmp	loc_1001D340
			
mov	eax, offset aCkm_cdmf_key_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_cdmf_mac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_cdmf_mac_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des2_key_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des3_cbc 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des3_cbc_p 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des3_ecb 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des3_key_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des3_mac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des3_mac_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_cbc 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_cbc_pa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_cfb64 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_cfb8 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_ecb 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_key_ge 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_mac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_mac_ge 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_ofb64 
jmp	loc_1001D340
			
mov	eax, offset aCkm_des_ofb8 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc2_cbc 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc2_cbc_pa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc2_ecb 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc2_mac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc2_mac_ge 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc4 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc4_key_ge 
jmp	loc_1001D340
mov	eax, offset aCkm_md2 
jmp	loc_1001D340
cmp	eax, 330h
ja	loc_1001CEF9
jz	loc_1001CEEF
sub	eax, 201h	
cmp	eax, 71h
ja	loc_1001D35B	
movzx	eax, ds:byte_1001D580[eax]
jmp	ds:off_1001D514[eax*4] 
			
mov	eax, offset aCkm_md2_hmac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_md2_hmac_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_md5 
jmp	loc_1001D340
			
mov	eax, offset aCkm_md5_hmac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_md5_hmac_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ripemd128 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ripemd12_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ripemd12_1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ripemd160 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ripemd16_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ripemd16_1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha224	
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha224_hma 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha224_h_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha256	
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha256_hma 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha256_h_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha384	
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha384_hma 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha384_h_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha512	
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha512_hma 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha512_h_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha_1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha_1_hmac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha_1_hm_0 
jmp	loc_1001D340
mov	eax, offset aCkm_rc5_key_ge 
jmp	loc_1001D340
cmp	eax, 500h
ja	loc_1001D108
jz	loc_1001D0FE
sub	eax, 331h	
cmp	eax, 0D0h
ja	loc_1001D35B	
movzx	eax, ds:byte_1001D6B4[eax]
jmp	ds:off_1001D5F4[eax*4] 
			
mov	eax, offset aCkm_concatenat 
jmp	loc_1001D340
			
mov	eax, offset aCkm_concaten_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_concaten_1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_extract_ke 
jmp	loc_1001D340
			
mov	eax, offset aCkm_generic_se 
jmp	loc_1001D340
			
mov	eax, offset aCkm_idea_cbc 
jmp	loc_1001D340
			
mov	eax, offset aCkm_idea_cbc_p 
jmp	loc_1001D340
			
mov	eax, offset aCkm_idea_ecb 
jmp	loc_1001D340
			
mov	eax, offset aCkm_idea_key_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_idea_mac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_idea_mac_g 
jmp	loc_1001D340
			
mov	eax, offset aCkm_key_wrap_l 
jmp	loc_1001D340
			
mov	eax, offset aCkm_key_wrap_s 
jmp	loc_1001D340
			
mov	eax, offset aCkm_md2_key_de 
jmp	loc_1001D340
			
mov	eax, offset aCkm_md5_key_de 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pba_sha1_w 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pbe_md2_de 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pbe_md5_de 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pbe_sha1_d 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pbe_sha1_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pbe_sha1_r 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pbe_sha1_1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pbe_sha1_2 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pbe_sha1_3 
jmp	loc_1001D340
			
mov	eax, offset aCkm_pkcs5_pbkd 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc5_cbc 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc5_cbc_pa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc5_ecb 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc5_mac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_rc5_mac_ge 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha1_key_d 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha224_key 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha256_key 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha384_key 
jmp	loc_1001D340
			
mov	eax, offset aCkm_sha512_key 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ssl3_key_a 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ssl3_maste 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ssl3_mas_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ssl3_md5_m 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ssl3_pre_m 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ssl3_sha1_ 
jmp	loc_1001D340
			
mov	eax, offset aCkm_tls_key_an 
jmp	loc_1001D340
			
mov	eax, offset aCkm_tls_master 
jmp	loc_1001D340
			
mov	eax, offset aCkm_tls_mast_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_tls_pre_ma 
jmp	loc_1001D340
			
mov	eax, offset aCkm_tls_prf 
jmp	loc_1001D340
			
mov	eax, offset aCkm_xor_base_a 
jmp	loc_1001D340
mov	eax, offset aCkm_cms_sig 
jmp	loc_1001D340
cmp	eax, 1000h
ja	short loc_1001D180
jz	short loc_1001D176
sub	eax, 550h	
cmp	eax, 7
ja	loc_1001D35B	
jmp	ds:off_1001D788[eax*4] 
			
mov	eax, offset aCkm_camellia_c 
jmp	loc_1001D340
			
mov	eax, offset aCkm_camellia_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_camellia_1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_camellia_e 
jmp	loc_1001D340
			
mov	eax, offset aCkm_camellia_2 
jmp	loc_1001D340
			
mov	eax, offset aCkm_camellia_k 
jmp	loc_1001D340
			
mov	eax, offset aCkm_camellia_m 
jmp	loc_1001D340
			
mov	eax, offset aCkm_camellia_3 
jmp	loc_1001D340
mov	eax, offset aCkm_skipjack_k 
jmp	loc_1001D340
cmp	eax, 1100h
ja	loc_1001D2E7
jz	loc_1001D2E0
sub	eax, 1001h	
cmp	eax, 92h
ja	loc_1001D35B	
movzx	eax, ds:byte_1001D82C[eax]
jmp	ds:off_1001D7A8[eax*4] 
			
mov	eax, offset aCkm_aes_cbc 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_cbc_pa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_ccm 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_ctr 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_cts 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_gcm 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_ecb 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_key_ge 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_mac 
jmp	loc_1001D340
			
mov	eax, offset aCkm_aes_mac_ge 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ecdh1_cofa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ecdh1_deri 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ecdsa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ecdsa_sha1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ecmqv_deri 
jmp	loc_1001D340
			
mov	eax, offset aCkm_ec_key_pai 
jmp	loc_1001D340
			
mov	eax, offset aCkm_fasthash 
jmp	loc_1001D340
			
mov	eax, offset aCkm_fortezza_t 
jmp	loc_1001D340
			
mov	eax, offset aCkm_kea_key_de 
jmp	loc_1001D340
			
mov	eax, offset aCkm_kea_key_pa 
jmp	loc_1001D340
			
mov	eax, offset aCkm_skipjack_c 
jmp	loc_1001D340
			
mov	eax, offset aCkm_skipjack_0 
jmp	loc_1001D340
			
mov	eax, offset aCkm_skipjack_1 
jmp	loc_1001D340
			
mov	eax, offset aCkm_skipjack_2 
jmp	loc_1001D340
			
mov	eax, offset aCkm_skipjack_3 
jmp	loc_1001D340
			
mov	eax, offset aCkm_skipjack_e 
jmp	loc_1001D340
			
mov	eax, offset aCkm_skipjack_o 
jmp	loc_1001D340
			
mov	eax, offset aCkm_skipjack_p 
jmp	short loc_1001D340
			
mov	eax, offset aCkm_skipjack_r 
jmp	short loc_1001D340
			
mov	eax, offset aCkm_skipjack_w 
jmp	short loc_1001D340
			
mov	eax, offset aCkm_twofish_cb 
jmp	short loc_1001D340
			
mov	eax, offset aCkm_twofish_ke 
jmp	short loc_1001D340
mov	eax, offset aCkm_des_ecb_en 
jmp	short loc_1001D340
cmp	eax, 2000h
ja	short loc_1001D32A
jz	short loc_1001D323
sub	eax, 1101h
cmp	eax, edx	
ja	short loc_1001D35B 
jmp	ds:off_1001D8C0[eax*4] 
			
mov	eax, offset aCkm_aes_cbc_en 
jmp	short loc_1001D340
			
mov	eax, offset aCkm_aes_ecb_en 
jmp	short loc_1001D340
			
mov	eax, offset aCkm_des3_cbc_e 
jmp	short loc_1001D340
			
mov	eax, offset aCkm_des3_ecb_e 
jmp	short loc_1001D340
			
mov	eax, offset aCkm_des_cbc_en 
jmp	short loc_1001D340
mov	eax, offset aCkm_dsa_parame 
jmp	short loc_1001D340
sub	eax, 2001h
jz	short loc_1001D33B
dec	eax
jnz	short loc_1001D35B 
mov	eax, offset aCkm_x9_42_dh_p 
jmp	short loc_1001D340
mov	eax, offset aCkm_dh_pkcs_pa 
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], edx
jl	short locret_1001D374
push	eax
push	offset aMechanismS 
call	ds:PR_LogPrint
add	esp, 8
retn
			
mov	eax, dword_100BACD0 
cmp	[eax+4], edx
jl	short locret_1001D374
push	ecx
push	offset aMechanism0xP 
call	ds:PR_LogPrint
add	esp, 8
			
retn
align 4
			
dd offset loc_1001CBB1,	offset loc_1001CB43, offset loc_1001CB4D 
dd offset loc_1001CBBB,	offset loc_1001CB57, offset loc_1001CB61
dd offset loc_1001CB89,	offset loc_1001CBA7, offset loc_1001CB9D
dd offset loc_1001CBCF,	offset loc_1001CB93, offset loc_1001CBC5
dd offset loc_1001CB2F,	offset loc_1001CB25, offset loc_1001CB39
dd offset loc_1001CB1B,	offset loc_1001CB11, offset loc_1001CC3D
dd offset loc_1001CC29,	offset loc_1001CC33, offset loc_1001CC47
dd offset loc_1001CBED,	offset loc_1001CC01, offset loc_1001CC15
dd offset loc_1001CBF7,	offset loc_1001CC0B, offset loc_1001CC1F
dd offset loc_1001CBD9,	offset loc_1001CBE3, offset loc_1001D35B
db	4,     5,     6,     7 
db	8,     9,   0Ah,   0Bh
db    0Ch,   0Dh,   0Eh,   20h
db    0Fh,   10h,   11h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    12h,   13h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    14h,   15h,   16h,   17h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    18h,   19h,   1Ah,   1Bh
db    1Ch,   1Dh,   1Eh,   1Fh
			
dd offset loc_1001CD96,	offset loc_1001CD78, offset loc_1001CDAA 
dd offset loc_1001CDA0,	offset loc_1001CD3C, offset loc_1001CD32
dd offset loc_1001CD0A,	offset loc_1001CD46, offset loc_1001CD50
dd offset loc_1001CD14,	offset loc_1001CCC4, offset loc_1001CCEC
dd offset loc_1001CCE2,	offset loc_1001CCCE, offset loc_1001CCF6
dd offset loc_1001CD00,	offset loc_1001CCD8, offset loc_1001CCA6
dd offset loc_1001CC9C,	offset loc_1001CC88, offset loc_1001CCB0
dd offset loc_1001CCBA,	offset loc_1001CC92, offset loc_1001CD5A
dd offset loc_1001CD64,	offset loc_1001CD1E, offset loc_1001CD28
dd offset loc_1001D35B
db	4,   1Eh,   1Eh,   1Eh 
db    1Eh,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,     5
db	6,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,     7
db	8,     9,   0Ah,   0Bh
db    0Ch,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,   0Dh
db    0Eh,   0Fh,   10h,   11h
db    12h,   13h,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,   14h
db    15h,   16h,   17h,   18h
db    19h,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,   1Eh
db    1Eh,   1Eh,   1Eh,   1Ah
db    1Bh,   1Ch,   1Dh
align 4
			
dd offset loc_1001CE09,	offset loc_1001CE13, offset loc_1001CED1 
dd offset loc_1001CEDB,	offset loc_1001CEE5, offset loc_1001CE1D
dd offset loc_1001CE27,	offset loc_1001CE31, offset loc_1001CE3B
dd offset loc_1001CE45,	offset loc_1001CE4F, offset loc_1001CE77
dd offset loc_1001CE81,	offset loc_1001CE8B, offset loc_1001CE59
dd offset loc_1001CE63,	offset loc_1001CE6D, offset loc_1001CE95
dd offset loc_1001CE9F,	offset loc_1001CEA9, offset loc_1001CEB3
dd offset loc_1001CEBD,	offset loc_1001CEC7, offset loc_1001D35B
db    1Ah,   1Ah,   1Ah,   1Ah 
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,     2
db	3,     4,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,     5
db	6,     7,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,     8
db	9,   0Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   0Bh
db    0Ch,   0Dh,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   0Eh
db    0Fh,   10h,   1Ah,   1Ah
db    11h,   12h,   13h,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   14h
db    15h,   16h,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   1Ah
db    1Ah,   1Ah,   1Ah,   17h
db    18h,   19h
align 4
			
dd offset loc_1001D04A,	offset loc_1001D02C, offset loc_1001CF78 
dd offset loc_1001CF6E,	offset loc_1001CF5A, offset loc_1001CF82
dd offset loc_1001CF8C,	offset loc_1001CF64, offset loc_1001CF50
dd offset loc_1001CF32,	offset loc_1001CF28, offset loc_1001CF3C
dd offset loc_1001D0F4,	offset loc_1001CF46, offset loc_1001D0AE
dd offset loc_1001D090,	offset loc_1001D086, offset loc_1001D09A
dd offset loc_1001D0E0,	offset loc_1001D0CC, offset loc_1001D0C2
dd offset loc_1001D0D6,	offset loc_1001D0EA, offset loc_1001D0A4
dd offset loc_1001D0B8,	offset loc_1001CFB4, offset loc_1001CFAA
dd offset loc_1001D054,	offset loc_1001D068, offset loc_1001D072
dd offset loc_1001D07C,	offset loc_1001D05E, offset loc_1001CFC8
dd offset loc_1001CFD2,	offset loc_1001D004, offset loc_1001D00E
dd offset loc_1001CFE6,	offset loc_1001CFDC, offset loc_1001CFF0
dd offset loc_1001CFFA,	offset loc_1001D018, offset loc_1001CFBE
dd offset loc_1001CF96,	offset loc_1001CFA0, offset loc_1001D35B
			
db 2Fh,	2Fh, 5,	6, 7, 8, 9, 0Ah, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh 
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 0Bh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 0Ch
db 2Fh,	0Dh, 0Eh, 0Fh, 10h, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 11h, 12h, 13h, 14h, 15h,	16h, 17h
db 18h,	19h, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	1Ah, 1Bh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 1Ch, 1Dh, 1Eh, 1Fh, 20h, 21h,	22h, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 23h,	24h, 2Fh
db 2Fh,	2Fh, 2Fh, 25h, 26h, 27h, 28h, 29h, 2Ah,	2Fh, 2Fh
db 2Fh,	2Fh, 2Bh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Ch, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh, 2Fh,	2Fh, 2Fh
db 2Fh,	2Fh, 2Fh, 2Fh, 2Fh, 2Dh, 2Eh
align 4
dd offset loc_1001D144	
dd offset loc_1001D126
dd offset loc_1001D162
dd offset loc_1001D16C
dd offset loc_1001D13A
dd offset loc_1001D14E
dd offset loc_1001D130
			
dd offset loc_1001D295,	offset loc_1001D28B, offset loc_1001D281 
dd offset loc_1001D29F,	offset loc_1001D2CB, offset loc_1001D2BD
dd offset loc_1001D2C4,	offset loc_1001D26D, offset loc_1001D263
dd offset loc_1001D259,	offset loc_1001D245, offset loc_1001D227
dd offset loc_1001D231,	offset loc_1001D21D, offset loc_1001D213
dd offset loc_1001D23B,	offset loc_1001D24F, offset loc_1001D1F5
dd offset loc_1001D1EB,	offset loc_1001D1AF, offset loc_1001D1FF
dd offset loc_1001D209,	offset loc_1001D1B9, offset loc_1001D1CD
dd offset loc_1001D1E1,	offset loc_1001D1C3, offset loc_1001D1D7
dd offset loc_1001D2D9,	offset loc_1001D2D2, offset loc_1001D35B
db	4,     5,     6,     7 
db	8,     9,   20h,   20h
db    20h,   20h,   20h,   0Ah
db    0Bh,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   0Ch
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   0Dh
db    0Eh,   0Fh,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   10h
db    11h,   12h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   13h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   20h,   20h,   14h
db    15h,   16h,   17h,   18h
db    19h,   1Ah,   1Bh,   1Ch
db    1Dh,   20h,   20h,   20h
db    20h,   20h,   20h,   20h
db    20h,   1Eh,   1Fh
align 10h
dd offset loc_1001D315	
dd offset loc_1001D30E
dd offset loc_1001D307
dd offset loc_1001D300
align 10h
cmp	eax, 14h
ja	loc_1001DA03
jz	loc_1001D9EC
cmp	eax, 13h	
ja	loc_1001DB0B	
movzx	ecx, ds:byte_1001DB4C[eax]
jmp	ds:off_1001DB20[ecx*4] 
			
mov	eax, offset aCkk_des 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_dh 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_dsa 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_ec 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_generic_se 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_kea 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_rc2 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_rc4 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_rsa 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
mov	eax, offset aCkk_x9_42_dh 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCkk_des2 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 19h
ja	short loc_1001DA41
jz	short loc_1001DA2A
cmp	eax, 15h
jnz	loc_1001DB0B	
mov	eax, offset aCkk_des3 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCkk_rc5 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 1Fh
ja	short loc_1001DAB7
jz	short loc_1001DAA0
mov	ecx, eax
sub	ecx, 1Ah
jz	short loc_1001DA89
dec	ecx
jz	short loc_1001DA72
sub	ecx, 3
jnz	loc_1001DB0B	
mov	eax, offset aCkk_cdmf 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCkk_skipjack 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCkk_idea 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCkk_aes 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
cmp	eax, 21h
jz	short loc_1001DAF4
cmp	eax, 25h
jz	short loc_1001DADD
cmp	eax, 0FFFFFFFFh
jnz	short loc_1001DB0B 
mov	eax, offset aCkk_invalid_ke 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCkk_camellia 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
mov	eax, offset aCkk_twofish 
push	eax
push	offset dword_100A23E0
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
			
push	eax		
push	offset a0xP	
push	edx
push	esi
call	ds:PR_snprintf
add	esp, 10h
retn
align 10h
dd offset loc_1001D934	
dd offset loc_1001D91D
dd offset loc_1001D94B
dd offset loc_1001D9D5
dd offset loc_1001D979
dd offset loc_1001D962
dd offset loc_1001D990
dd offset loc_1001D9A7
dd offset loc_1001D906
dd offset loc_1001DB0B
db	4,     5,   0Ah,   0Ah 
db    0Ah,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,   0Ah
db	6,     7,     8,     9
			
sub	esp, 80h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+80h+var_4], eax
mov	eax, [edi]
push	ebx
push	esi
mov	edx, 30h
lea	esi, [esp+88h+var_68]
call	sub_1001B510
mov	eax, [edi]
cmp	eax, 81h
ja	short loc_1001DBA2
jz	loc_1001DE47	
cmp	eax, 3		
ja	loc_1001DC82	
jmp	ds:off_1001DF58[eax*4] 
cmp	eax, 404h
ja	loc_1001DC61
cmp	eax, 400h
jnb	loc_1001DDAA	
sub	eax, 87h	
cmp	eax, 0E9h
ja	loc_1001DC82	
movzx	eax, ds:byte_1001DF80[eax]
jmp	ds:off_1001DF68[eax*4] 
			
			
mov	ecx, [edi+8]	
			
test	ecx, ecx
jz	short loc_1001DC14 
mov	eax, [edi+4]
test	eax, eax
jz	short loc_1001DC14 
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 4
jl	loc_1001DF3E
cmp	byte ptr [eax],	0
mov	eax, offset aCk_true 
jnz	short loc_1001DC03
mov	eax, offset aCk_false 
push	ecx
push	eax
lea	eax, [esp+90h+var_68]
push	eax
push	offset aSSD_0	
jmp	loc_1001DF35
			
cmp	dword ptr [edi+8], 0 
jbe	loc_1001DDF1	
mov	eax, [edi+4]
test	eax, eax
jz	loc_1001DD1D
mov	eax, [eax]
mov	ecx, 31h
lea	edx, [esp+88h+var_38]
call	sub_1001C150
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	loc_1001DF3E
mov	edx, [edi+8]
push	edx
lea	eax, [esp+8Ch+var_38]
push	eax
lea	ecx, [esp+90h+var_68]
push	ecx
push	offset aSSD_0	
jmp	loc_1001DF35
cmp	eax, 0CE534352h
ja	loc_1001DD0F
cmp	eax, 0CE534351h
jnb	loc_1001DDF1	
cmp	eax, 406h
jz	loc_1001DDAA	
			
mov	ecx, [edi+8]	
test	ecx, ecx
jz	loc_1001DF17
mov	eax, [edi+4]
test	eax, eax
jz	loc_1001DF17
mov	[esp+88h+var_80], 5
mov	[esp+88h+var_7C], eax
mov	[esp+88h+var_78], ecx
cmp	ecx, 18h
jb	short loc_1001DCB5
mov	[esp+88h+var_78], 18h
lea	eax, [esp+88h+var_80]
push	0
push	eax
call	CERT_Hexify
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_1001DF17
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_1001DCF2
mov	edx, [edi+8]
push	edx
push	esi
lea	eax, [esp+90h+var_68]
push	eax
push	offset aSSD_0	
call	ds:PR_LogPrint
add	esp, 10h
push	esi
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	ebx
mov	ecx, [esp+80h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 80h
retn
add	eax, 31AC9CA8h
cmp	eax, 3
ja	loc_1001DC82	
cmp	dword ptr [edi+8], 0
jbe	loc_1001DDF1	
mov	eax, [edi+4]
test	eax, eax
jz	short loc_1001DD64 
mov	ecx, [eax]
mov	edx, 31h
lea	esi, [esp+88h+var_38]
call	sub_1001C2C0
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 4
jl	loc_1001DF3E
mov	eax, [edi+8]
push	eax
mov	ecx, esi
push	ecx
lea	edx, [esp+90h+var_68]
push	edx
push	offset aSSD_0	
jmp	loc_1001DF35
			
			
cmp	dword ptr [edi+8], 0 
jbe	loc_1001DDF1	
mov	eax, [edi+4]
test	eax, eax
jz	short loc_1001DDAA 
mov	eax, [eax]
mov	edx, 31h
lea	esi, [esp+88h+var_38]
call	sub_1001D8E0
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 4
jl	loc_1001DF3E
mov	ecx, [edi+8]
push	ecx
mov	edx, esi
push	edx
lea	eax, [esp+90h+var_68]
push	eax
push	offset aSSD_0	
jmp	loc_1001DF35
			
cmp	dword ptr [edi+8], 0 
jbe	short loc_1001DDF1 
mov	eax, [edi+4]
test	eax, eax
jz	short loc_1001DDF1 
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	loc_1001DF3E
mov	edx, [eax]
push	edx
lea	eax, [esp+8Ch+var_68]
push	eax
push	offset aSLu	
call	ds:PR_LogPrint
add	esp, 0Ch
pop	esi
pop	ebx
mov	ecx, [esp+80h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 80h
retn
			
mov	eax, [edi+8]	
test	eax, eax
jz	short loc_1001DE47 
mov	ecx, [edi+4]
test	ecx, ecx
jz	short loc_1001DE47 
inc	eax
cmp	eax, 31h
jb	short loc_1001DE0A
mov	eax, 31h
push	ecx
push	offset dword_100A23E0
push	eax
lea	ecx, [esp+94h+var_38]
push	ecx
call	ds:PR_snprintf
mov	edx, dword_100BACD0
add	esp, 10h
cmp	dword ptr [edx+4], 4
jl	loc_1001DF3E
mov	eax, [edi+8]
push	eax
lea	ecx, [esp+8Ch+var_38]
push	ecx
lea	edx, [esp+90h+var_68]
push	edx
push	offset aSSD_1	
jmp	loc_1001DF35
			
mov	ecx, [edi+8]	
test	ecx, ecx
jz	short loc_1001DEBD 
mov	eax, [edi+4]
test	eax, eax
jz	short loc_1001DEBD 
mov	[esp+88h+var_70], eax
lea	eax, [esp+88h+var_74]
push	eax
mov	[esp+8Ch+var_74], 5
mov	[esp+8Ch+var_6C], ecx
call	CERT_DerNameToAscii
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_1001DC82	
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_1001DEA0
mov	edx, [edi+8]
push	edx
push	esi
lea	eax, [esp+90h+var_68]
push	eax
push	offset aSSD_0	
call	ds:PR_LogPrint
add	esp, 10h
push	esi
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	ebx
mov	ecx, [esp+80h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 80h
retn
			
mov	esi, [edi+8]	
test	esi, esi
jz	loc_1001DC82	
mov	ebx, [edi+4]
test	ebx, ebx
jz	loc_1001DC82	
mov	ecx, esi
mov	edx, ebx
test	ecx, ecx
jle	short loc_1001DEFE
jmp	short loc_1001DEE0
align 10h
			
movzx	eax, byte ptr [edx]
inc	edx
cmp	eax, 20h
jb	short loc_1001DEEE
cmp	eax, 7Fh
jb	short loc_1001DEF7
test	eax, eax
jnz	short loc_1001DEFC
cmp	ecx, 1
jnz	short loc_1001DEFC
dec	ecx
test	ecx, ecx
jg	short loc_1001DEE0
			
test	ecx, ecx
jnz	loc_1001DC82	
lea	eax, [esi+1]
cmp	eax, 31h
jb	short loc_1001DF11
mov	eax, 31h
push	ebx
jmp	loc_1001DE0B
			
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_1001DF3E
mov	edx, [edi+8]
mov	eax, [edi+4]
push	edx
push	eax
lea	ecx, [esp+90h+var_68]
push	ecx
push	offset aS0xPD	
			
call	ds:PR_LogPrint
add	esp, 10h
			
mov	ecx, [esp+88h+var_4]
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 80h
retn
align 4
dd offset loc_1001DBD6	
dd offset loc_1001DBD6
dd offset loc_1001DDF1
			
dd offset loc_1001DEBD,	offset loc_1001DBD6, offset loc_1001DC82 
			
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 5, 5, 5, 5, 5,	5, 5, 5	
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 5, 5, 5, 5, 5,	5, 5, 5
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 5, 5, 5, 5, 5,	5, 5, 5
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 5, 5, 5, 5, 5,	5, 5, 5
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 5, 5, 5, 5, 5,	5, 5, 5
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 5, 5, 5, 1, 2,	3, 4, 4
db 4, 4, 4, 4, 4, 4, 4,	4, 5, 5, 5, 5, 5, 5, 5,	5, 5, 5
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 0, 5, 5, 5, 5,	5, 5, 5
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 0, 0, 5, 5, 5,	5, 5, 5
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 5, 5, 5, 5, 5,	5, 5, 5
db 5, 5, 5, 5, 5, 5, 5,	5, 5, 5, 5, 5, 5, 5, 5,	5, 5, 5
db 5, 0, 0, 4, 4, 4, 4,	5, 5, 5, 5, 5, 5, 5, 5,	5, 5, 4
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001E08E
push	offset aC_initialize 
call	edi 
add	esp, 4
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
mov	esi, [esp+10h]
jl	short loc_1001E0A9
push	esi
push	offset aPinitargs0xP 
call	edi 
add	esp, 8
push	offset dword_100BA1AC
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, dword_100BACBC
mov	ebx, eax
mov	eax, [edx+2]
push	esi
call	eax
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA1A8
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
pop	edi
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001E10E
push	offset aC_finalize 
call	edi 
add	esp, 4
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
mov	esi, [esp+10h]
jl	short loc_1001E129
push	esi
push	offset aPreserved0xP 
call	edi 
add	esp, 8
push	offset dword_100BA1B8
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, dword_100BACBC
mov	ebx, eax
mov	eax, [edx+6]
push	esi
call	eax
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA1B4
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
pop	edi
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
push	ecx
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
jl	short loc_1001E190
push	offset aC_getinfo 
call	ebp 
add	esp, 4
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
mov	esi, [esp+18h]
jl	short loc_1001E1AB
push	esi
push	offset aPinfo0xP 
call	ebp 
add	esp, 8
push	offset dword_100BA1C4
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, dword_100BACBC
mov	ebx, eax
mov	eax, [edx+0Ah]
push	esi
call	eax
mov	[esp+18h], eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA1C0
call	ds:PR_AtomicAdd
mov	ebx, [esp+20h]
add	esp, 10h
test	ebx, ebx
jnz	short loc_1001E25E
mov	ecx, dword_100BACD0
mov	edi, 4
cmp	[ecx+4], edi
jl	short loc_1001E20E
movzx	edx, byte ptr [esi+1]
movzx	eax, byte ptr [esi]
push	edx
push	eax
push	offset aCryptokiVersio 
call	ebp 
add	esp, 0Ch
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_1001E227
lea	edx, [esi+2]
push	edx
push	offset aManufacturerid 
call	ebp 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_1001E23F
lea	ecx, [esi+26h]
push	ecx
push	offset aLibraryDescrip 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_1001E25E
movzx	eax, byte ptr [esi+47h]
movzx	ecx, byte ptr [esi+46h]
push	eax
push	ecx
push	offset aLibraryVersion 
call	ebp 
add	esp, 0Ch
			
mov	eax, ebx
call	sub_1001C3A0
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
pop	ecx
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001E28E
push	offset aC_getfunctionl 
call	edi 
add	esp, 4
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
mov	esi, [esp+10h]
jl	short loc_1001E2A9
push	esi
push	offset aPpfunctionlist 
call	edi 
add	esp, 8
push	offset dword_100BA1D0
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, dword_100BACBC
mov	ebx, eax
mov	eax, [edx+0Eh]
push	esi
call	eax
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA1CC
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
pop	edi
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
mov	esi, ds:PR_LogPrint
push	edi
jl	short loc_1001E30F
push	offset aC_getslotlist 
call	esi 
add	esp, 4
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_1001E32F
movzx	edx, byte ptr [esp+14h]
push	edx
push	offset aTokenpresent0x 
call	esi 
add	esp, 8
mov	eax, dword_100BACD0
mov	ebx, [esp+18h]
cmp	[eax+4], edi
jl	short loc_1001E348
push	ebx
push	offset aPslotlist0xP 
call	esi 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebp, [esp+1Ch]
cmp	[ecx+4], edi
jl	short loc_1001E362
push	ebp
push	offset aPulcount0xP 
call	esi 
add	esp, 8
push	offset dword_100BA1DC
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	edx, [esp+18h]
push	ebp
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+12h]
push	ebx
push	edx
call	ecx
mov	[esp+28h], eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA1D8
call	ds:PR_AtomicAdd
mov	edx, dword_100BACD0
mov	edi, ds:PR_LogPrint
add	esp, 18h
cmp	dword ptr [edx+4], 4
jl	short loc_1001E3BF
mov	eax, [ebp+0]
push	eax
push	offset aPulcount0xX 
call	edi 
add	esp, 8
test	ebx, ebx
jz	short loc_1001E3F1
xor	esi, esi
cmp	[ebp+0], esi
jbe	short loc_1001E3F1
lea	ebx, [ebx+0]
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_1001E3EB
mov	edx, [ebx+esi*4]
push	edx
push	esi
push	offset aSlotidDX 
call	edi 
add	esp, 0Ch
inc	esi
cmp	esi, [ebp+0]
jb	short loc_1001E3D0
			
mov	esi, [esp+18h]
mov	eax, esi
call	sub_1001C3A0
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001E42F
push	offset aC_getslotinfo 
call	edi 
add	esp, 4
mov	ecx, dword_100BACD0
mov	ebp, [esp+14h]
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001E44E
push	ebp
push	offset aSlotid0xX 
call	edi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
mov	esi, [esp+18h]
jl	short loc_1001E468
push	esi
push	offset aPinfo0xP 
call	edi 
add	esp, 8
push	offset dword_100BA1E8
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+16h]
push	esi
push	ebp
call	ecx
mov	ebp, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA1E4
call	ds:PR_AtomicAdd
add	esp, 14h
test	ebp, ebp
jnz	loc_1001E560
mov	edx, dword_100BACD0
mov	edi, ds:PR_LogPrint
mov	ebx, 4
cmp	[edx+4], ebx
jl	short loc_1001E4C7
push	esi
push	offset aSlotdescript_0 
call	edi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001E4DF
lea	ecx, [esi+40h]
push	ecx
push	offset aManufacturerid 
call	edi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], ebx
jl	short loc_1001E524
mov	eax, [esi+60h]
mov	edx, offset aCkf_token_pres 
test	al, 1
jnz	short loc_1001E4FB
mov	edx, offset byte_100A1623
mov	ecx, offset aCkf_removable_ 
test	al, 2
jnz	short loc_1001E509
mov	ecx, offset byte_100A1623
test	bl, al
mov	eax, offset aCkf_hw_slot 
jnz	short loc_1001E517
mov	eax, offset byte_100A1623
push	edx
push	ecx
push	eax
push	offset aFlagsSSS 
call	edi 
add	esp, 10h
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001E542
movzx	ecx, byte ptr [esi+65h]
movzx	edx, byte ptr [esi+64h]
push	ecx
push	edx
push	offset aHardwareVersio 
call	edi 
add	esp, 0Ch
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001E560
movzx	ecx, byte ptr [esi+67h]
movzx	edx, byte ptr [esi+66h]
push	ecx
push	edx
push	offset aFirmwareVersio 
call	edi 
add	esp, 0Ch
			
mov	eax, ebp
call	sub_1001C3A0
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
push	ecx
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
jl	short loc_1001E590
push	offset aC_gettokeninfo 
call	ebp 
add	esp, 4
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001E5AF
mov	edx, [esp+18h]
push	edx
push	offset aSlotid0xX 
call	ebp 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], esi
mov	esi, [esp+1Ch]
jl	short loc_1001E5C8
push	esi
push	offset aPinfo0xP 
call	ebp 
add	esp, 8
push	offset dword_100BA1F4
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, [esp+1Ch]
mov	edx, dword_100BACBC
mov	ebx, eax
mov	eax, [edx+1Ah]
push	esi
push	ecx
call	eax
mov	[esp+1Ch], eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA1F0
call	ds:PR_AtomicAdd
mov	edi, [esp+24h]
add	esp, 14h
test	edi, edi
jnz	loc_1001E74E
mov	ecx, dword_100BACD0
mov	ebx, 4
cmp	[ecx+4], ebx
jl	short loc_1001E62C
push	esi
push	offset aLabel_32s 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], ebx
jl	short loc_1001E645
lea	eax, [esi+20h]
push	eax
push	offset aManufacturerid 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_1001E65E
lea	edx, [esi+40h]
push	edx
push	offset aModel_16s 
call	ebp 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001E676
lea	ecx, [esi+50h]
push	ecx
push	offset aSerial_16s 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], ebx
jl	short loc_1001E6CE
mov	eax, [esi+60h]
mov	edi, offset aCkf_user_pin_i 
test	al, 8
jnz	short loc_1001E692
mov	edi, offset byte_100A1623
mov	edx, offset aCkf_login_requ 
test	bl, al
jnz	short loc_1001E6A0
mov	edx, offset byte_100A1623
mov	ecx, offset aCkf_write_prot 
test	al, 2
jnz	short loc_1001E6AE
mov	ecx, offset byte_100A1623
test	al, 1
mov	eax, offset aCkf_rng 
jnz	short loc_1001E6BC
mov	eax, offset byte_100A1623
push	edi
push	edx
push	ecx
push	eax
push	offset aFlagsSSSS 
call	ebp 
mov	edi, [esp+24h]
add	esp, 14h
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001E6EA
mov	ecx, [esi+68h]
mov	edx, [esi+64h]
push	ecx
push	edx
push	offset aMaxsessionsUSe 
call	ebp 
add	esp, 0Ch
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001E706
mov	ecx, [esi+70h]
mov	edx, [esi+6Ch]
push	ecx
push	edx
push	offset aMaxrwsessionsU 
call	ebp 
add	esp, 0Ch
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001E72A
movzx	ecx, byte ptr [esi+8Dh]
movzx	edx, byte ptr [esi+8Ch]
push	ecx
push	edx
push	offset aHardwareVersio 
call	ebp 
add	esp, 0Ch
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001E74E
movzx	ecx, byte ptr [esi+8Fh]
movzx	edx, byte ptr [esi+8Eh]
push	ecx
push	edx
push	offset aFirmwareVersio 
call	ebp 
add	esp, 0Ch
			
mov	eax, edi
call	sub_1001C3A0
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
mov	esi, ds:PR_LogPrint
push	edi
jl	short loc_1001E77F
push	offset aC_getmechanism 
call	esi 
add	esp, 4
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_1001E79E
mov	edx, [esp+14h]
push	edx
push	offset aSlotid0xX 
call	esi 
add	esp, 8
mov	eax, dword_100BACD0
mov	ebp, [esp+18h]
cmp	[eax+4], edi
jl	short loc_1001E7B7
push	ebp
push	offset aPmechanismlist 
call	esi 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+1Ch]
cmp	[ecx+4], edi
jl	short loc_1001E7D1
push	ebx
push	offset aPulcount0xP 
call	esi 
add	esp, 8
push	offset dword_100BA200
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	edx, [esp+18h]
push	ebx
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+1Eh]
push	ebp
push	edx
call	ecx
mov	ebp, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA1FC
call	ds:PR_AtomicAdd
mov	edx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [edx+4], 4
jl	short loc_1001E829
mov	eax, [ebx]
push	eax
push	offset aPulcount0xX 
call	ds:PR_LogPrint
add	esp, 8
mov	eax, ebp
call	sub_1001C3A0
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001E85F
push	offset aC_getmechani_0 
call	edi 
add	esp, 4
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001E87E
mov	edx, [esp+14h]
push	edx
push	offset aSlotid0xX 
call	edi 
add	esp, 8
mov	eax, dword_100BACD0
mov	ebp, [esp+18h]
cmp	[eax+4], esi
jl	short loc_1001E897
push	ebp
push	offset aType0xX	
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+1Ch]
jl	short loc_1001E8B1
push	esi
push	offset aPinfo0xP 
call	edi 
add	esp, 8
push	offset dword_100BA20C
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+18h]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+22h]
push	ebp
push	edx
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA208
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001E91F
push	offset aC_inittoken 
call	edi 
add	esp, 4
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001E93E
mov	edx, [esp+14h]
push	edx
push	offset aSlotid0xX 
call	edi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1001E957
mov	ecx, [esp+18h]
push	ecx
push	offset aPpin0xP	
call	edi 
add	esp, 8
mov	edx, dword_100BACD0
mov	ebp, [esp+1Ch]
cmp	[edx+4], esi
jl	short loc_1001E971
push	ebp
push	offset aUlpinlenD 
call	edi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], esi
mov	esi, [esp+20h]
jl	short loc_1001E98A
push	esi
push	offset aPlabel0xP 
call	edi 
add	esp, 8
push	offset dword_100BA218
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, [esp+1Ch]
mov	edx, [esp+18h]
push	esi
push	ebp
mov	ebx, eax
mov	eax, dword_100BACBC
push	ecx
mov	ecx, [eax+26h]
push	edx
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA214
call	ds:PR_AtomicAdd
add	esp, 1Ch
mov	eax, esi
call	sub_1001C3A0
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_4]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
jl	short loc_1001EA15
push	offset aC_initpin 
call	edi 
add	esp, 4
mov	ebp, [esp+68h+arg_0]
test	ebp, ebp
jz	short loc_1001EA35
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001EA76
push	ebp
push	offset aHsession0xX 
jmp	short loc_1001EA71
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_1001EA76
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1001EA8B
push	ebx
push	offset aPpin0xP	
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+68h+arg_8]
jl	short loc_1001EAA5
push	esi
push	offset aUlpinlenD 
call	edi 
add	esp, 8
push	offset dword_100BA224
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+6Ch+var_58]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+2Ah]
push	edx
push	ebp
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA220
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+60h+arg_C]
push	ebp
mov	ebp, [esp+64h+arg_4]
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_58], ebx
jl	short loc_1001EB3D
push	offset aC_setpin 
call	edi 
add	esp, 4
mov	eax, [esp+6Ch+arg_0]
test	eax, eax
jz	short loc_1001EB5D
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001EB9E
push	eax
push	offset aHsession0xX 
jmp	short loc_1001EB99
push	50h
lea	edx, [esp+70h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+7Ch+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_1001EB9E
push	0
lea	edx, [esp+70h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1001EBB3
push	ebp
push	offset aPoldpin0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebp, [esp+6Ch+arg_8]
cmp	[ecx+4], esi
jl	short loc_1001EBCD
push	ebp
push	offset aUloldlenD 
call	edi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_1001EBE3
push	ebx
push	offset aPnewpin0xP 
call	edi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], esi
mov	esi, [esp+6Ch+arg_10]
jl	short loc_1001EBFF
push	esi
push	offset aUlnewlenD 
call	edi 
add	esp, 8
push	offset dword_100BA230
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, [esp+70h+var_58]
mov	edx, [esp+70h+var_5C]
push	esi
push	ecx
mov	ecx, dword_100BACBC
push	ebp
mov	ebx, eax
mov	eax, [esp+7Ch+arg_0]
push	edx
mov	edx, [ecx+2Eh]
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA22C
call	ds:PR_AtomicAdd
add	esp, 20h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	eax, [esp+5Ch+arg_8]
mov	ecx, [esp+5Ch+arg_C]
push	ebx
mov	ebx, [esp+60h+arg_10]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_AtomicIncrement
push	offset dword_100BACD4
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_58], ecx
call	edi 
mov	eax, dword_100BACD4
add	esp, 4
cmp	eax, dword_100BACD8
jbe	short loc_1001ECB8
mov	dword_100BACD8,	eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	esi, ds:PR_LogPrint
jl	short loc_1001ECD4
push	offset aC_opensession 
call	esi 
add	esp, 4
mov	eax, dword_100BACD0
mov	ebp, 3
cmp	[eax+4], ebp
jl	short loc_1001ECF2
mov	ecx, [esp+6Ch+arg_0]
push	ecx
push	offset aSlotid0xX 
call	esi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], ebp
mov	ebp, [esp+6Ch+arg_4]
jl	short loc_1001ED0C
push	ebp
push	offset aFlags0xX 
call	esi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 3
jl	short loc_1001ED26
mov	ecx, [esp+6Ch+var_5C]
push	ecx
push	offset aPapplication0x 
call	esi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 3
jl	short loc_1001ED41
mov	eax, [esp+6Ch+var_58]
push	eax
push	offset aNotify0xX 
call	esi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
jl	short loc_1001ED58
push	ebx
push	offset aPhsession0xP 
call	esi 
add	esp, 8
push	offset dword_100BA23C
call	edi 
mov	esi, ds:PR_IntervalNow
call	esi 
mov	edx, [esp+70h+var_58]
mov	ecx, [esp+70h+arg_0]
push	ebx
push	edx
mov	edx, dword_100BACBC
mov	edi, eax
mov	eax, [esp+78h+var_5C]
push	eax
mov	eax, [edx+32h]
push	ebp
push	ecx
call	eax
mov	ebp, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA238
call	ds:PR_AtomicAdd
mov	eax, [ebx]
add	esp, 20h
test	eax, eax
jz	short loc_1001EDB4
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_1001EDF5
push	eax
push	offset aPhsession0xX 
jmp	short loc_1001EDEC
push	50h
lea	edx, [esp+70h+var_54]
push	offset aPhsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+7Ch+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 4
jl	short loc_1001EDF5
push	0
lea	edx, [esp+70h+var_54]
push	edx
call	ds:PR_LogPrint
add	esp, 8
			
mov	eax, ebp
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
push	ebx
push	esi
push	edi
push	offset dword_100BACD4
call	ds:PR_AtomicDecrement
mov	eax, dword_100BACD0
mov	edi, ds:PR_LogPrint
add	esp, 4
cmp	dword ptr [eax+4], 1
jl	short loc_1001EE5A
push	offset aC_closesession 
call	edi 
add	esp, 4
mov	esi, [esp+60h+arg_0]
test	esi, esi
jz	short loc_1001EE76
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
jl	short loc_1001EEB3
push	esi
push	offset aHsession0xX 
jmp	short loc_1001EEAE
push	50h
lea	edx, [esp+64h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+70h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 3
jl	short loc_1001EEB3
push	0
lea	edx, [esp+64h+var_54]
push	edx
call	edi 
add	esp, 8
			
push	offset dword_100BA248
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+36h]
push	esi
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA244
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+60h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001EF2E
push	offset aC_closeallsess 
call	edi 
add	esp, 4
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
mov	esi, [esp+10h]
jl	short loc_1001EF49
push	esi
push	offset aSlotid0xX 
call	edi 
add	esp, 8
push	offset dword_100BA254
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, dword_100BACBC
mov	ebx, eax
mov	eax, [edx+3Ah]
push	esi
call	eax
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA250
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
pop	edi
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
mov	esi, ds:PR_LogPrint
push	edi
jl	short loc_1001EFC1
push	offset aC_getsessionin 
call	esi 
add	esp, 4
mov	ebx, [esp+64h+arg_0]
test	ebx, ebx
jz	short loc_1001EFE1
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_1001F022
push	ebx
push	offset aHsession0xX 
jmp	short loc_1001F01D
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_1001F022
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	esi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_1001F037
push	ebp
push	offset aPinfo0xP 
call	esi 
add	esp, 8
push	offset dword_100BA260
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+3Eh]
push	ebp
push	ebx
mov	edi, eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA25C
call	ds:PR_AtomicAdd
add	esp, 14h
test	ebx, ebx
jnz	short loc_1001F0EB
mov	eax, dword_100BACD0
mov	esi, ds:PR_LogPrint
mov	edi, 4
cmp	[eax+4], edi
jl	short loc_1001F095
mov	ecx, [ebp+0]
push	ecx
push	offset aSlotid0xX 
call	esi 
add	esp, 8
mov	eax, [ebp+4]
call	sub_1001CA50
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_1001F0D3
mov	eax, [ebp+8]
mov	ecx, offset aCkf_serial_ses 
test	al, 4
jnz	short loc_1001F0B9
mov	ecx, offset byte_100A1623
test	al, 2
mov	eax, offset aCkf_rw_session 
jnz	short loc_1001F0C7
mov	eax, offset byte_100A1623
push	ecx
push	eax
push	offset aFlagsSS	
call	esi 
add	esp, 0Ch
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_1001F0EB
mov	ecx, [ebp+0Ch]
push	ecx
push	offset aDeviceerror0xX 
call	esi 
add	esp, 8
			
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+5Ch+arg_8]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
mov	edi, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_58], edi
mov	[esp+6Ch+var_5C], eax
jl	short loc_1001F14E
push	offset aC_getoperation 
call	ebp 
add	esp, 4
mov	ebx, [esp+6Ch+arg_0]
test	ebx, ebx
jz	short loc_1001F16E
mov	edx, dword_100BACD0
mov	esi, 3
cmp	[edx+4], esi
jl	short loc_1001F1AF
push	ebx
push	offset aHsession0xX 
jmp	short loc_1001F1AA
push	50h
lea	eax, [esp+70h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+7Ch+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[edx+4], esi
jl	short loc_1001F1AF
push	0
lea	eax, [esp+70h+var_54]
push	eax
call	ebp 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_1001F1C5
push	edi
push	offset aPoperationstat 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_1001F1DF
mov	eax, [esp+6Ch+var_5C]
push	eax
push	offset aPuloperationst 
call	ebp 
add	esp, 8
push	offset dword_100BA26C
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+70h+var_5C]
mov	edx, [esp+70h+var_58]
push	ecx
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+42h]
push	edx
push	ebx
call	ecx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA268
call	ds:PR_AtomicAdd
mov	edx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [edx+4], 4
jl	short loc_1001F23B
mov	eax, [esp+6Ch+var_5C]
mov	ecx, [eax]
push	ecx
push	offset aPuloperation_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 0A8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0A8h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
mov	esi, [esp+0B4h+arg_4]
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+0B8h+var_A8], esi
jl	short loc_1001F29E
push	offset aC_setoperation 
call	edi 
add	esp, 4
mov	eax, [esp+0B8h+arg_0]
test	eax, eax
jz	short loc_1001F2C1
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_1001F302
push	eax
push	offset aHsession0xX 
jmp	short loc_1001F2FD
push	50h
lea	edx, [esp+0BCh+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0C8h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_1001F302
push	0
lea	edx, [esp+0BCh+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001F317
push	esi
push	offset aPoperationstat 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_1001F334
mov	edx, [esp+0B8h+arg_8]
push	edx
push	offset aUloperationsta 
call	edi 
add	esp, 8
mov	ebp, [esp+0B8h+arg_C]
test	ebp, ebp
jz	short loc_1001F351
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001F38C
push	ebp
push	offset aHencryptionkey 
jmp	short loc_1001F387
push	50h
lea	ecx, [esp+0BCh+var_A4]
push	offset aHencryptionkey 
push	ecx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	edx, [esp+0C8h+var_A4]
push	50h
push	edx
call	PL_strcatn
mov	eax, dword_100BACD0
add	esp, 18h
cmp	[eax+4], ebx
jl	short loc_1001F38C
push	0
lea	ecx, [esp+0BCh+var_A4]
push	ecx
call	edi 
add	esp, 8
			
mov	esi, [esp+0B8h+arg_10]
test	esi, esi
jz	short loc_1001F3AA
mov	edx, dword_100BACD0
cmp	[edx+4], ebx
jl	short loc_1001F3E6
push	esi
push	offset aHauthenticatio 
jmp	short loc_1001F3E1
push	50h
lea	eax, [esp+0BCh+var_A4]
push	offset aHauthenticatio 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+0C8h+var_A4]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
add	esp, 18h
cmp	[edx+4], ebx
jl	short loc_1001F3E6
push	0
lea	eax, [esp+0BCh+var_A4]
push	eax
call	edi 
add	esp, 8
			
push	offset dword_100BA278
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, [esp+0BCh+arg_8]
mov	edx, [esp+0BCh+var_A8]
push	esi
push	ebp
push	ecx
mov	ecx, dword_100BACBC
mov	ebx, eax
mov	eax, [esp+0C8h+arg_0]
push	edx
mov	edx, [ecx+46h]
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA274
call	ds:PR_AtomicAdd
add	esp, 20h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+0B8h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0A8h
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_8]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
jl	short loc_1001F495
push	offset aC_login	
call	edi 
add	esp, 4
mov	eax, [esp+68h+arg_0]
test	eax, eax
jz	short loc_1001F4B5
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001F4F6
push	eax
push	offset aHsession0xX 
jmp	short loc_1001F4F1
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_1001F4F6
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
mov	ebp, [esp+68h+arg_4]
cmp	[eax+4], esi
jl	short loc_1001F50F
push	ebp
push	offset aUsertype0xX 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_1001F525
push	ebx
push	offset aPpin0xP	
call	edi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
mov	esi, [esp+68h+arg_C]
jl	short loc_1001F53F
push	esi
push	offset aUlpinlenD 
call	edi 
add	esp, 8
push	offset dword_100BA284
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, [esp+6Ch+arg_0]
mov	edx, dword_100BACBC
mov	ebx, eax
mov	eax, [esp+6Ch+var_58]
push	esi
push	eax
mov	eax, [edx+4Ah]
push	ebp
push	ecx
call	eax
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA280
call	ds:PR_AtomicAdd
add	esp, 1Ch
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001F5CC
push	offset aC_logout 
call	edi 
add	esp, 4
mov	esi, [esp+60h+arg_0]
test	esi, esi
jz	short loc_1001F5E8
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
jl	short loc_1001F625
push	esi
push	offset aHsession0xX 
jmp	short loc_1001F620
push	50h
lea	edx, [esp+64h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+70h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 3
jl	short loc_1001F625
push	0
lea	edx, [esp+64h+var_54]
push	edx
call	edi 
add	esp, 8
			
push	offset dword_100BA290
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+4Eh]
push	esi
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA28C
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+60h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_4]
push	ebp
mov	ebp, [esp+60h+arg_C]
push	esi
mov	esi, ds:PR_LogPrint
mov	[esp+64h+var_58], ebx
jl	short loc_1001F6B8
push	offset aC_createobject 
call	esi 
add	esp, 4
mov	eax, [esp+64h+arg_0]
push	edi
test	eax, eax
jz	short loc_1001F6D9
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_1001F71A
push	eax
push	offset aHsession0xX 
jmp	short loc_1001F715
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_1001F71A
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	esi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_1001F72F
push	ebx
push	offset aPtemplate0xP 
call	esi 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+68h+arg_8]
cmp	[ecx+4], edi
jl	short loc_1001F749
push	ebx
push	offset aUlcountD 
call	esi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_1001F75F
push	ebp
push	offset aPhobject0xP 
call	esi 
add	esp, 8
test	ebx, ebx
jz	short loc_1001F77B
mov	edi, [esp+68h+var_58]
mov	esi, ebx
lea	esp, [esp+0]
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_1001F770
push	offset dword_100BA29C
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+6Ch+arg_0]
mov	edx, dword_100BACBC
push	ebp
mov	edi, eax
mov	eax, [esp+70h+var_58]
push	ebx
push	eax
mov	eax, [edx+52h]
push	ecx
call	eax
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA298
call	ds:PR_AtomicAdd
mov	eax, [ebp+0]
add	esp, 1Ch
pop	edi
test	eax, eax
jz	short loc_1001F7D8
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_1001F819
push	eax
push	offset aPhobject0xX 
jmp	short loc_1001F810
push	50h
lea	edx, [esp+68h+var_54]
push	offset aPhobject0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 4
jl	short loc_1001F819
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	ds:PR_LogPrint
add	esp, 8
			
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 0ACh
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0ACh+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+0ACh+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
mov	edi, [esp+0BCh+arg_8]
mov	[esp+0BCh+var_A8], edi
mov	[esp+0BCh+var_AC], eax
jl	short loc_1001F88A
push	offset aC_copyobject 
call	ebp 
add	esp, 4
mov	eax, [esp+0BCh+arg_0]
test	eax, eax
jz	short loc_1001F8AD
mov	edx, dword_100BACD0
mov	esi, 3
cmp	[edx+4], esi
jl	short loc_1001F8EE
push	eax
push	offset aHsession0xX 
jmp	short loc_1001F8E9
push	50h
lea	eax, [esp+0C0h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+0CCh+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[edx+4], esi
jl	short loc_1001F8EE
push	0
lea	eax, [esp+0C0h+var_54]
push	eax
call	ebp 
add	esp, 8
			
mov	eax, [esp+0BCh+arg_4]
test	eax, eax
jz	short loc_1001F90C
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_1001F948
push	eax
push	offset aHobject0xX 
jmp	short loc_1001F943
push	50h
lea	edx, [esp+0C0h+var_A4]
push	offset aHobject0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0CCh+var_A4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_1001F948
push	0
lea	edx, [esp+0C0h+var_A4]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1001F95D
push	edi
push	offset aPtemplate0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+0BCh+arg_C]
cmp	[ecx+4], esi
jl	short loc_1001F97A
push	ebx
push	offset aUlcountD 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_1001F994
mov	eax, [esp+0BCh+var_AC]
push	eax
push	offset aPhnewobject0xP 
call	ebp 
add	esp, 8
test	ebx, ebx
jz	short loc_1001F9AB
mov	esi, ebx
lea	ebx, [ebx+0]
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_1001F9A0
push	offset dword_100BA2A8
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+0C0h+var_AC]
mov	edx, [esp+0C0h+var_A8]
push	ecx
mov	ecx, [esp+0C4h+arg_0]
push	ebx
mov	edi, eax
mov	eax, [esp+0C8h+arg_4]
push	edx
mov	edx, dword_100BACBC
push	eax
mov	eax, [edx+56h]
push	ecx
call	eax
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA2A4
call	ds:PR_AtomicAdd
mov	ecx, [esp+0DCh+var_AC]
mov	eax, [ecx]
add	esp, 20h
test	eax, eax
jz	short loc_1001FA19
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 4
jl	short loc_1001FA56
push	eax
push	offset aPhnewobject0xX 
jmp	short loc_1001FA51
push	50h
lea	eax, [esp+0C0h+var_A4]
push	offset aPhnewobject0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+0CCh+var_A4]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [edx+4], 4
jl	short loc_1001FA56
push	0
lea	eax, [esp+0C0h+var_A4]
push	eax
call	ebp 
add	esp, 8
			
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+0BCh+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0ACh
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1001FAAD
push	offset aC_destroyobjec 
call	edi 
add	esp, 4
mov	ebp, [esp+64h+arg_0]
test	ebp, ebp
jz	short loc_1001FACD
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_1001FB0E
push	ebp
push	offset aHsession0xX 
jmp	short loc_1001FB09
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_1001FB0E
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	esi, [esp+64h+arg_4]
test	esi, esi
jz	short loc_1001FB28
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1001FB63
push	esi
push	offset aHobject0xX 
jmp	short loc_1001FB5E
push	50h
lea	ecx, [esp+68h+var_54]
push	offset aHobject0xX 
push	ecx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	edx, [esp+74h+var_54]
push	50h
push	edx
call	PL_strcatn
mov	eax, dword_100BACD0
add	esp, 18h
cmp	[eax+4], ebx
jl	short loc_1001FB63
push	0
lea	ecx, [esp+68h+var_54]
push	ecx
call	edi 
add	esp, 8
			
push	offset dword_100BA2B4
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, dword_100BACBC
mov	ebx, eax
mov	eax, [edx+5Ah]
push	esi
push	ebp
call	eax
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA2B0
call	ds:PR_AtomicAdd
add	esp, 14h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 0A8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0A8h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
mov	edi, [esp+0B8h+arg_8]
mov	[esp+0B8h+var_A8], edi
jl	short loc_1001FBFE
push	offset aC_getobjectsiz 
call	ebp 
add	esp, 4
mov	eax, [esp+0B8h+arg_0]
test	eax, eax
jz	short loc_1001FC21
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001FC62
push	eax
push	offset aHsession0xX 
jmp	short loc_1001FC5D
push	50h
lea	edx, [esp+0BCh+var_A4]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0C8h+var_A4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_1001FC62
push	0
lea	edx, [esp+0BCh+var_A4]
push	edx
call	ebp 
add	esp, 8
			
mov	ebx, [esp+0B8h+arg_4]
test	ebx, ebx
jz	short loc_1001FC7F
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1001FCBA
push	ebx
push	offset aHobject0xX 
jmp	short loc_1001FCB5
push	50h
lea	ecx, [esp+0BCh+var_54]
push	offset aHobject0xX 
push	ecx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	edx, [esp+0C8h+var_54]
push	50h
push	edx
call	PL_strcatn
mov	eax, dword_100BACD0
add	esp, 18h
cmp	[eax+4], esi
jl	short loc_1001FCBA
push	0
lea	ecx, [esp+0BCh+var_54]
push	ecx
call	ebp 
add	esp, 8
			
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_1001FCD0
push	edi
push	offset aPulsize0xP 
call	ebp 
add	esp, 8
push	offset dword_100BA2C0
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+0BCh+arg_0]
mov	edx, dword_100BACBC
mov	edi, eax
mov	eax, [esp+0BCh+var_A8]
push	eax
mov	eax, [edx+5Eh]
push	ebx
push	ecx
call	eax
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA2BC
call	ds:PR_AtomicAdd
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 4
jl	short loc_1001FD30
mov	edx, [esp+0B8h+var_A8]
mov	eax, [edx]
push	eax
push	offset aPulsize0xX 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+0B8h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0A8h
retn
align 10h
sub	esp, 0A8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0A8h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+0ACh+arg_8]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+0B8h+var_A8], ebx
jl	short loc_1001FD9E
push	offset aC_getattribute 
call	edi 
add	esp, 4
mov	eax, [esp+0B8h+arg_0]
test	eax, eax
jz	short loc_1001FDC1
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1001FE02
push	eax
push	offset aHsession0xX 
jmp	short loc_1001FDFD
push	50h
lea	edx, [esp+0BCh+var_A4]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0C8h+var_A4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_1001FE02
push	0
lea	edx, [esp+0BCh+var_A4]
push	edx
call	edi 
add	esp, 8
			
mov	ebp, [esp+0B8h+arg_4]
test	ebp, ebp
jz	short loc_1001FE1F
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1001FE5A
push	ebp
push	offset aHobject0xX 
jmp	short loc_1001FE55
push	50h
lea	ecx, [esp+0BCh+var_54]
push	offset aHobject0xX 
push	ecx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	edx, [esp+0C8h+var_54]
push	50h
push	edx
call	PL_strcatn
mov	eax, dword_100BACD0
add	esp, 18h
cmp	[eax+4], esi
jl	short loc_1001FE5A
push	0
lea	ecx, [esp+0BCh+var_54]
push	ecx
call	edi 
add	esp, 8
			
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_1001FE70
push	ebx
push	offset aPtemplate0xP 
call	edi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], esi
mov	esi, [esp+0B8h+arg_C]
jl	short loc_1001FE8C
push	esi
push	offset aUlcountD 
call	edi 
add	esp, 8
push	offset dword_100BA2CC
call	ds:PR_AtomicIncrement
mov	ebx, ds:PR_IntervalNow
call	ebx 
mov	ecx, [esp+0BCh+var_A8]
mov	edx, [esp+0BCh+arg_0]
push	esi
push	ecx
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+62h]
push	ebp
push	edx
call	ecx
mov	ebp, eax
call	ebx 
sub	eax, edi
push	eax
push	offset dword_100BA2C8
call	ds:PR_AtomicAdd
add	esp, 1Ch
test	esi, esi
jz	short loc_1001FEE2
mov	edi, [esp+0B8h+var_A8]
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_1001FED7
mov	eax, ebp
call	sub_1001C3A0
mov	ecx, [esp+0B8h+var_4]
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0A8h
retn
align 10h
sub	esp, 0A8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0A8h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
mov	esi, ds:PR_LogPrint
push	edi
mov	edi, [esp+0B8h+arg_8]
mov	[esp+0B8h+var_A8], edi
jl	short loc_1001FF4E
push	offset aC_setattribute 
call	esi 
add	esp, 4
mov	eax, [esp+0B8h+arg_0]
test	eax, eax
jz	short loc_1001FF71
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_1001FFB2
push	eax
push	offset aHsession0xX 
jmp	short loc_1001FFAD
push	50h
lea	edx, [esp+0BCh+var_A4]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0C8h+var_A4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_1001FFB2
push	0
lea	edx, [esp+0BCh+var_A4]
push	edx
call	esi 
add	esp, 8
			
mov	eax, [esp+0B8h+arg_4]
test	eax, eax
jz	short loc_1001FFD0
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_1002000C
push	eax
push	offset aHobject0xX 
jmp	short loc_10020007
push	50h
lea	edx, [esp+0BCh+var_54]
push	offset aHobject0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0C8h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_1002000C
push	0
lea	edx, [esp+0BCh+var_54]
push	edx
call	esi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_10020021
push	edi
push	offset aPtemplate0xP 
call	esi 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebp, [esp+0B8h+arg_C]
cmp	[ecx+4], ebx
jl	short loc_1002003E
push	ebp
push	offset aUlcountD 
call	esi 
add	esp, 8
test	ebp, ebp
jz	short loc_1002004F
mov	esi, ebp
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_10020044
push	offset dword_100BA2D8
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+0BCh+var_A8]
mov	ecx, [esp+0BCh+arg_0]
push	ebp
mov	ebx, eax
mov	eax, [esp+0C0h+arg_4]
push	edx
mov	edx, dword_100BACBC
push	eax
mov	eax, [edx+66h]
push	ecx
call	eax
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA2D4
call	ds:PR_AtomicAdd
add	esp, 1Ch
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+0B8h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0A8h
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
mov	esi, ds:PR_LogPrint
push	edi
mov	edi, [esp+68h+arg_4]
mov	[esp+68h+var_58], edi
jl	short loc_100200F5
push	offset aC_findobjectsi 
call	esi 
add	esp, 4
mov	eax, [esp+68h+arg_0]
test	eax, eax
jz	short loc_10020115
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_10020156
push	eax
push	offset aHsession0xX 
jmp	short loc_10020151
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10020156
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	esi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_1002016B
push	edi
push	offset aPtemplate0xP 
call	esi 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebp, [esp+68h+arg_8]
cmp	[ecx+4], ebx
jl	short loc_10020185
push	ebp
push	offset aUlcountD 
call	esi 
add	esp, 8
test	ebp, ebp
jz	short loc_1002019B
mov	esi, ebp
jmp	short loc_10020190
align 10h
			
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_10020190
push	offset dword_100BA2E4
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+6Ch+var_58]
mov	ecx, dword_100BACBC
push	ebp
mov	ebx, eax
mov	eax, [esp+70h+arg_0]
push	edx
mov	edx, [ecx+6Ah]
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA2E0
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+5Ch+arg_C]
push	ebx
mov	ebx, [esp+60h+arg_4]
push	ebp
push	esi
mov	esi, ds:PR_LogPrint
push	edi
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], eax
jl	short loc_1002023E
push	offset aC_findobjects 
call	esi 
add	esp, 4
mov	ebp, [esp+6Ch+arg_0]
test	ebp, ebp
jz	short loc_1002025E
mov	edx, dword_100BACD0
mov	edi, 3
cmp	[edx+4], edi
jl	short loc_1002029F
push	ebp
push	offset aHsession0xX 
jmp	short loc_1002029A
push	50h
lea	eax, [esp+70h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+7Ch+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[edx+4], edi
jl	short loc_1002029F
push	0
lea	eax, [esp+70h+var_54]
push	eax
call	esi 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_100202B5
push	ebx
push	offset aPhobject0xP 
call	esi 
add	esp, 8
mov	edx, dword_100BACD0
mov	ebx, [esp+6Ch+arg_8]
cmp	[edx+4], edi
jl	short loc_100202CF
push	ebx
push	offset aUlmaxobjectcou 
call	esi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_100202E8
mov	ecx, [esp+6Ch+var_5C]
push	ecx
push	offset aPulobjectcount 
call	esi 
add	esp, 8
push	offset dword_100BA2F0
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	edx, [esp+70h+var_5C]
push	edx
push	ebx
mov	ebx, [esp+78h+var_58]
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+6Eh]
push	ebx
push	ebp
call	ecx
mov	[esp+80h+var_58], eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA2EC
call	ds:PR_AtomicAdd
mov	edx, dword_100BACD0
mov	ebp, [esp+88h+var_5C]
mov	edi, ds:PR_LogPrint
add	esp, 1Ch
cmp	dword ptr [edx+4], 4
jl	short loc_1002034E
mov	eax, [ebp+0]
push	eax
push	offset aPulobjectcou_0 
call	edi 
add	esp, 8
xor	esi, esi
cmp	[ebp+0], esi
jbe	short loc_10020390
jmp	short loc_10020360
align 10h
			
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_1002038A
mov	eax, [ebx+esi*4]
mov	ecx, offset byte_100A1623
test	eax, eax
jnz	short loc_1002037D
mov	ecx, offset aCk_invalid_han 
push	ecx
push	eax
push	esi
push	offset aPhobjectD0xXS 
call	edi 
add	esp, 10h
inc	esi
cmp	esi, [ebp+0]
jb	short loc_10020360
mov	esi, [esp+6Ch+var_58]
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_100203DC
push	offset aC_findobjectsf 
call	edi 
add	esp, 4
mov	esi, [esp+60h+arg_0]
test	esi, esi
jz	short loc_100203F8
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
jl	short loc_10020435
push	esi
push	offset aHsession0xX 
jmp	short loc_10020430
push	50h
lea	edx, [esp+64h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+70h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 3
jl	short loc_10020435
push	0
lea	edx, [esp+64h+var_54]
push	edx
call	edi 
add	esp, 8
			
push	offset dword_100BA2FC
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+72h]
push	esi
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA2F8
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+60h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_100204C1
push	offset aC_encryptinit 
call	edi 
add	esp, 4
mov	eax, [esp+64h+arg_0]
test	eax, eax
jz	short loc_100204E1
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_10020522
push	eax
push	offset aHsession0xX 
jmp	short loc_1002051D
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10020522
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_10020537
push	ebp
push	offset aPmechanism0xP 
call	edi 
add	esp, 8
mov	esi, [esp+64h+arg_8]
test	esi, esi
jz	short loc_10020552
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_1002058E
push	esi
push	offset aHkey0xX	
jmp	short loc_10020589
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHkey0xX	
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_1002058E
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, ebp
call	sub_1001CAE0
push	offset dword_100BA308
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+76h]
push	esi
mov	ebx, eax
mov	eax, [esp+6Ch+arg_0]
push	ebp
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA304
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_10020636
push	offset aC_encrypt 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_10020656
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10020697
push	eax
push	offset aHsession0xX 
jmp	short loc_10020692
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10020697
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_100206AC
push	esi
push	offset aPdata0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_100206C6
push	ebx
push	offset aUldatalenD 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_100206E0
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPencrypteddata 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_100206FA
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulencryptedda 
call	ebp 
add	esp, 8
push	offset dword_100BA314
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+7Ah]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA310
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_10020760
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulencrypted_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_100207C6
push	offset aC_encryptupdat 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_100207E6
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10020827
push	eax
push	offset aHsession0xX 
jmp	short loc_10020822
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10020827
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_1002083C
push	esi
push	offset aPpart0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10020856
push	ebx
push	offset aUlpartlenD 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10020870
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPencryptedpart 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_1002088A
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulencryptedpa 
call	ebp 
add	esp, 8
push	offset dword_100BA320
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+7Eh]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA31C
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_100208F0
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulencrypted_1 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+5Ch+arg_8]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
mov	edi, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_58], edi
mov	[esp+6Ch+var_5C], eax
jl	short loc_1002094E
push	offset aC_encryptfinal 
call	ebp 
add	esp, 4
mov	ebx, [esp+6Ch+arg_0]
test	ebx, ebx
jz	short loc_1002096E
mov	edx, dword_100BACD0
mov	esi, 3
cmp	[edx+4], esi
jl	short loc_100209AF
push	ebx
push	offset aHsession0xX 
jmp	short loc_100209AA
push	50h
lea	eax, [esp+70h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+7Ch+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[edx+4], esi
jl	short loc_100209AF
push	0
lea	eax, [esp+70h+var_54]
push	eax
call	ebp 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_100209C5
push	edi
push	offset aPlastencrypted 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_100209DF
mov	eax, [esp+6Ch+var_5C]
push	eax
push	offset aPullastencrypt 
call	ebp 
add	esp, 8
push	offset dword_100BA32C
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+70h+var_5C]
mov	edx, [esp+70h+var_58]
push	ecx
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+82h]
push	edx
push	ebx
call	ecx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA328
call	ds:PR_AtomicAdd
mov	edx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [edx+4], 4
jl	short loc_10020A3E
mov	eax, [esp+6Ch+var_5C]
mov	ecx, [eax]
push	ecx
push	offset aPullastencry_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_10020A91
push	offset aC_decryptinit 
call	edi 
add	esp, 4
mov	eax, [esp+64h+arg_0]
test	eax, eax
jz	short loc_10020AB1
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_10020AF2
push	eax
push	offset aHsession0xX 
jmp	short loc_10020AED
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10020AF2
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_10020B07
push	ebp
push	offset aPmechanism0xP 
call	edi 
add	esp, 8
mov	esi, [esp+64h+arg_8]
test	esi, esi
jz	short loc_10020B22
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_10020B5E
push	esi
push	offset aHkey0xX	
jmp	short loc_10020B59
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHkey0xX	
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10020B5E
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, ebp
call	sub_1001CAE0
push	offset dword_100BA338
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+86h]
push	esi
mov	ebx, eax
mov	eax, [esp+6Ch+arg_0]
push	ebp
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA334
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_10020C06
push	offset aC_decrypt 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_10020C26
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10020C67
push	eax
push	offset aHsession0xX 
jmp	short loc_10020C62
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10020C67
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10020C7C
push	esi
push	offset aPencrypteddata 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10020C96
push	ebx
push	offset aUlencrypteddat 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10020CB0
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPdata0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_10020CCA
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPuldatalen0xP 
call	ebp 
add	esp, 8
push	offset dword_100BA344
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+8Ah]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA340
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_10020D33
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPuldatalen0xX 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_10020D96
push	offset aC_decryptupdat 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_10020DB6
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10020DF7
push	eax
push	offset aHsession0xX 
jmp	short loc_10020DF2
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10020DF7
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10020E0C
push	esi
push	offset aPencryptedpart 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10020E26
push	ebx
push	offset aUlencryptedpar 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10020E40
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPpart0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_10020E5A
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulpartlen0xP 
call	ebp 
add	esp, 8
push	offset dword_100BA350
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+8Eh]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA34C
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_10020EC3
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulpartlen0xX 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+5Ch+arg_8]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
mov	edi, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_58], edi
mov	[esp+6Ch+var_5C], eax
jl	short loc_10020F1E
push	offset aC_decryptfinal 
call	ebp 
add	esp, 4
mov	ebx, [esp+6Ch+arg_0]
test	ebx, ebx
jz	short loc_10020F3E
mov	edx, dword_100BACD0
mov	esi, 3
cmp	[edx+4], esi
jl	short loc_10020F7F
push	ebx
push	offset aHsession0xX 
jmp	short loc_10020F7A
push	50h
lea	eax, [esp+70h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+7Ch+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[edx+4], esi
jl	short loc_10020F7F
push	0
lea	eax, [esp+70h+var_54]
push	eax
call	ebp 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_10020F95
push	edi
push	offset aPlastpart0xP 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_10020FAF
mov	eax, [esp+6Ch+var_5C]
push	eax
push	offset aPullastpartlen 
call	ebp 
add	esp, 8
push	offset dword_100BA35C
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+70h+var_5C]
mov	edx, [esp+70h+var_58]
push	ecx
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+92h]
push	edx
push	ebx
call	ecx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA358
call	ds:PR_AtomicAdd
mov	edx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [edx+4], 4
jl	short loc_1002100E
mov	eax, [esp+6Ch+var_5C]
mov	ecx, [eax]
push	ecx
push	offset aPullastpartl_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
mov	esi, [esp+60h+arg_4]
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_10021061
push	offset aC_digestinit 
call	edi 
add	esp, 4
mov	ebp, [esp+64h+arg_0]
test	ebp, ebp
jz	short loc_10021081
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_100210C2
push	ebp
push	offset aHsession0xX 
jmp	short loc_100210BD
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_100210C2
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_100210D7
push	esi
push	offset aPmechanism0xP 
call	edi 
add	esp, 8
mov	eax, esi
call	sub_1001CAE0
push	offset dword_100BA368
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+96h]
push	esi
push	ebp
mov	ebx, eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA364
call	ds:PR_AtomicAdd
add	esp, 14h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_10021186
push	offset aC_digest 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_100211A6
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_100211E7
push	eax
push	offset aHsession0xX 
jmp	short loc_100211E2
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_100211E7
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_100211FC
push	esi
push	offset aPdata0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10021216
push	ebx
push	offset aUldatalenD 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10021230
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPdigest0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_1002124A
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPuldigestlen0x 
call	ebp 
add	esp, 8
push	offset dword_100BA374
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+9Ah]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA370
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_100212B3
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPuldigestlen_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_4]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
jl	short loc_10021305
push	offset aC_digestupdate 
call	edi 
add	esp, 4
mov	ebp, [esp+68h+arg_0]
test	ebp, ebp
jz	short loc_10021325
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_10021366
push	ebp
push	offset aHsession0xX 
jmp	short loc_10021361
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_10021366
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1002137B
push	ebx
push	offset aPpart0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+68h+arg_8]
jl	short loc_10021395
push	esi
push	offset aUlpartlenD 
call	edi 
add	esp, 8
push	offset dword_100BA380
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+6Ch+var_58]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+9Eh]
push	edx
push	ebp
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA37C
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_1002141C
push	offset aC_digestkey 
call	edi 
add	esp, 4
mov	esi, [esp+60h+arg_0]
test	esi, esi
jz	short loc_10021438
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
jl	short loc_10021475
push	esi
push	offset aHsession0xX 
jmp	short loc_10021470
push	50h
lea	edx, [esp+64h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+70h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 3
jl	short loc_10021475
push	0
lea	edx, [esp+64h+var_54]
push	edx
call	edi 
add	esp, 8
			
push	offset dword_100BA38C
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+0A2h]
mov	ebx, eax
mov	eax, [esp+64h+arg_4]
push	eax
push	esi
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA388
call	ds:PR_AtomicAdd
add	esp, 14h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+60h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+5Ch+arg_8]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
mov	edi, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_58], edi
mov	[esp+6Ch+var_5C], eax
jl	short loc_1002150E
push	offset aC_digestfinal 
call	ebp 
add	esp, 4
mov	ebx, [esp+6Ch+arg_0]
test	ebx, ebx
jz	short loc_1002152E
mov	edx, dword_100BACD0
mov	esi, 3
cmp	[edx+4], esi
jl	short loc_1002156F
push	ebx
push	offset aHsession0xX 
jmp	short loc_1002156A
push	50h
lea	eax, [esp+70h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+7Ch+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[edx+4], esi
jl	short loc_1002156F
push	0
lea	eax, [esp+70h+var_54]
push	eax
call	ebp 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_10021585
push	edi
push	offset aPdigest0xP 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_1002159F
mov	eax, [esp+6Ch+var_5C]
push	eax
push	offset aPuldigestlen0x 
call	ebp 
add	esp, 8
push	offset dword_100BA398
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+70h+var_5C]
mov	edx, [esp+70h+var_58]
push	ecx
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+0A6h]
push	edx
push	ebx
call	ecx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA394
call	ds:PR_AtomicAdd
mov	edx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [edx+4], 4
jl	short loc_100215FE
mov	eax, [esp+6Ch+var_5C]
mov	ecx, [eax]
push	ecx
push	offset aPuldigestlen_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_10021651
push	offset aC_signinit 
call	edi 
add	esp, 4
mov	eax, [esp+64h+arg_0]
test	eax, eax
jz	short loc_10021671
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_100216B2
push	eax
push	offset aHsession0xX 
jmp	short loc_100216AD
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_100216B2
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_100216C7
push	ebp
push	offset aPmechanism0xP 
call	edi 
add	esp, 8
mov	esi, [esp+64h+arg_8]
test	esi, esi
jz	short loc_100216E2
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_1002171E
push	esi
push	offset aHkey0xX	
jmp	short loc_10021719
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHkey0xX	
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_1002171E
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, ebp
call	sub_1001CAE0
push	offset dword_100BA3A4
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+0AAh]
push	esi
mov	ebx, eax
mov	eax, [esp+6Ch+arg_0]
push	ebp
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA3A0
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_100217C6
push	offset aC_sign	
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_100217E6
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10021827
push	eax
push	offset aHsession0xX 
jmp	short loc_10021822
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10021827
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_1002183C
push	esi
push	offset aPdata0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10021856
push	ebx
push	offset aUldatalenD 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10021870
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPsignature0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_1002188A
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulsignaturele 
call	ebp 
add	esp, 8
push	offset dword_100BA3B0
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+0AEh]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA3AC
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_100218F3
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulsignature_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_4]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
jl	short loc_10021945
push	offset aC_signupdate 
call	edi 
add	esp, 4
mov	ebp, [esp+68h+arg_0]
test	ebp, ebp
jz	short loc_10021965
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_100219A6
push	ebp
push	offset aHsession0xX 
jmp	short loc_100219A1
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_100219A6
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_100219BB
push	ebx
push	offset aPpart0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+68h+arg_8]
jl	short loc_100219D5
push	esi
push	offset aUlpartlenD 
call	edi 
add	esp, 8
push	offset dword_100BA3BC
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+6Ch+var_58]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+0B2h]
push	edx
push	ebp
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA3B8
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+5Ch+arg_8]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
mov	edi, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_58], edi
mov	[esp+6Ch+var_5C], eax
jl	short loc_10021A6E
push	offset aC_signfinal 
call	ebp 
add	esp, 4
mov	ebx, [esp+6Ch+arg_0]
test	ebx, ebx
jz	short loc_10021A8E
mov	edx, dword_100BACD0
mov	esi, 3
cmp	[edx+4], esi
jl	short loc_10021ACF
push	ebx
push	offset aHsession0xX 
jmp	short loc_10021ACA
push	50h
lea	eax, [esp+70h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+7Ch+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[edx+4], esi
jl	short loc_10021ACF
push	0
lea	eax, [esp+70h+var_54]
push	eax
call	ebp 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_10021AE5
push	edi
push	offset aPsignature0xP 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_10021AFF
mov	eax, [esp+6Ch+var_5C]
push	eax
push	offset aPulsignaturele 
call	ebp 
add	esp, 8
push	offset dword_100BA3C8
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+70h+var_5C]
mov	edx, [esp+70h+var_58]
push	ecx
mov	edi, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+0B6h]
push	edx
push	ebx
call	ecx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA3C4
call	ds:PR_AtomicAdd
mov	edx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [edx+4], 4
jl	short loc_10021B5E
mov	eax, [esp+6Ch+var_5C]
mov	ecx, [eax]
push	ecx
push	offset aPulsignature_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_10021BB1
push	offset aC_signrecoveri 
call	edi 
add	esp, 4
mov	eax, [esp+64h+arg_0]
test	eax, eax
jz	short loc_10021BD1
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_10021C12
push	eax
push	offset aHsession0xX 
jmp	short loc_10021C0D
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10021C12
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_10021C27
push	ebp
push	offset aPmechanism0xP 
call	edi 
add	esp, 8
mov	esi, [esp+64h+arg_8]
test	esi, esi
jz	short loc_10021C42
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_10021C7E
push	esi
push	offset aHkey0xX	
jmp	short loc_10021C79
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHkey0xX	
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10021C7E
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, ebp
call	sub_1001CAE0
push	offset dword_100BA3D4
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+0BAh]
push	esi
mov	ebx, eax
mov	eax, [esp+6Ch+arg_0]
push	ebp
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA3D0
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_10021D26
push	offset aC_signrecover 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_10021D46
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10021D87
push	eax
push	offset aHsession0xX 
jmp	short loc_10021D82
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10021D87
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10021D9C
push	esi
push	offset aPdata0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10021DB6
push	ebx
push	offset aUldatalenD 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10021DD0
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPsignature0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_10021DEA
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulsignaturele 
call	ebp 
add	esp, 8
push	offset dword_100BA3E0
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+0BEh]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA3DC
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_10021E53
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulsignature_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_10021EA1
push	offset aC_verifyinit 
call	edi 
add	esp, 4
mov	eax, [esp+64h+arg_0]
test	eax, eax
jz	short loc_10021EC1
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_10021F02
push	eax
push	offset aHsession0xX 
jmp	short loc_10021EFD
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10021F02
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_10021F17
push	ebp
push	offset aPmechanism0xP 
call	edi 
add	esp, 8
mov	esi, [esp+64h+arg_8]
test	esi, esi
jz	short loc_10021F32
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_10021F6E
push	esi
push	offset aHkey0xX	
jmp	short loc_10021F69
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHkey0xX	
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10021F6E
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, ebp
call	sub_1001CAE0
push	offset dword_100BA3EC
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+0C2h]
push	esi
mov	ebx, eax
mov	eax, [esp+6Ch+arg_0]
push	ebp
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA3E8
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+60h+arg_C]
push	ebp
mov	ebp, [esp+64h+arg_4]
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_58], ebx
jl	short loc_1002200D
push	offset aC_verify 
call	edi 
add	esp, 4
mov	eax, [esp+6Ch+arg_0]
test	eax, eax
jz	short loc_1002202D
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_1002206E
push	eax
push	offset aHsession0xX 
jmp	short loc_10022069
push	50h
lea	edx, [esp+70h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+7Ch+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_1002206E
push	0
lea	edx, [esp+70h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_10022083
push	ebp
push	offset aPdata0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebp, [esp+6Ch+arg_8]
cmp	[ecx+4], esi
jl	short loc_1002209D
push	ebp
push	offset aUldatalenD 
call	edi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_100220B3
push	ebx
push	offset aPsignature0xP 
call	edi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], esi
mov	esi, [esp+6Ch+arg_10]
jl	short loc_100220CF
push	esi
push	offset aUlsignaturelen 
call	edi 
add	esp, 8
push	offset dword_100BA3F8
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, [esp+70h+var_58]
mov	edx, [esp+70h+var_5C]
push	esi
push	ecx
mov	ecx, dword_100BACBC
push	ebp
mov	ebx, eax
mov	eax, [esp+7Ch+arg_0]
push	edx
mov	edx, [ecx+0C6h]
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA3F4
call	ds:PR_AtomicAdd
add	esp, 20h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+6Ch+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_4]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
jl	short loc_10022175
push	offset aC_verifyupdate 
call	edi 
add	esp, 4
mov	ebp, [esp+68h+arg_0]
test	ebp, ebp
jz	short loc_10022195
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_100221D6
push	ebp
push	offset aHsession0xX 
jmp	short loc_100221D1
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_100221D6
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_100221EB
push	ebx
push	offset aPpart0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+68h+arg_8]
jl	short loc_10022205
push	esi
push	offset aUlpartlenD 
call	edi 
add	esp, 8
push	offset dword_100BA404
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+6Ch+var_58]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+0CAh]
push	edx
push	ebp
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA400
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_4]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
jl	short loc_10022295
push	offset aC_verifyfinal 
call	edi 
add	esp, 4
mov	ebp, [esp+68h+arg_0]
test	ebp, ebp
jz	short loc_100222B5
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_100222F6
push	ebp
push	offset aHsession0xX 
jmp	short loc_100222F1
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_100222F6
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1002230B
push	ebx
push	offset aPsignature0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+68h+arg_8]
jl	short loc_10022325
push	esi
push	offset aUlsignaturelen 
call	edi 
add	esp, 8
push	offset dword_100BA410
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+6Ch+var_58]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+0CEh]
push	edx
push	ebp
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA40C
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_100223B1
push	offset aC_verifyrecove 
call	edi 
add	esp, 4
mov	eax, [esp+64h+arg_0]
test	eax, eax
jz	short loc_100223D1
mov	ecx, dword_100BACD0
mov	ebx, 3
cmp	[ecx+4], ebx
jl	short loc_10022412
push	eax
push	offset aHsession0xX 
jmp	short loc_1002240D
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	ebx, 3
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_10022412
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], ebx
jl	short loc_10022427
push	ebp
push	offset aPmechanism0xP 
call	edi 
add	esp, 8
mov	esi, [esp+64h+arg_8]
test	esi, esi
jz	short loc_10022442
mov	ecx, dword_100BACD0
cmp	[ecx+4], ebx
jl	short loc_1002247E
push	esi
push	offset aHkey0xX	
jmp	short loc_10022479
push	50h
lea	edx, [esp+68h+var_54]
push	offset aHkey0xX	
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+74h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], ebx
jl	short loc_1002247E
push	0
lea	edx, [esp+68h+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, ebp
call	sub_1001CAE0
push	offset dword_100BA41C
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ecx, dword_100BACBC
mov	edx, [ecx+0D2h]
push	esi
mov	ebx, eax
mov	eax, [esp+6Ch+arg_0]
push	ebp
push	eax
call	edx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA418
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+64h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_10022526
push	offset aC_verifyreco_0 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_10022546
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10022587
push	eax
push	offset aHsession0xX 
jmp	short loc_10022582
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10022587
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_1002259C
push	esi
push	offset aPsignature0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_100225B6
push	ebx
push	offset aUlsignaturelen 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_100225D0
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPdata0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_100225EA
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPuldatalen0xP 
call	ebp 
add	esp, 8
push	offset dword_100BA428
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+0D6h]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA424
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_10022653
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPuldatalen0xX 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_100226B6
push	offset aC_digestencryp 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_100226D6
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10022717
push	eax
push	offset aHsession0xX 
jmp	short loc_10022712
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10022717
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_1002272C
push	esi
push	offset aPpart0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10022746
push	ebx
push	offset aUlpartlenD 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10022760
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPencryptedpart 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_1002277A
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulencryptedpa 
call	ebp 
add	esp, 8
push	offset dword_100BA434
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+0DAh]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA430
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_100227E3
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulencrypted_1 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_10022846
push	offset aC_decryptdiges 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_10022866
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_100228A7
push	eax
push	offset aHsession0xX 
jmp	short loc_100228A2
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_100228A7
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_100228BC
push	esi
push	offset aPencryptedpart 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_100228D6
push	ebx
push	offset aUlencryptedpar 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_100228F0
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPpart0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_1002290A
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulpartlen0xP 
call	ebp 
add	esp, 8
push	offset dword_100BA440
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+0DEh]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA43C
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_10022973
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulpartlen0xX 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_100229D6
push	offset aC_signencryptu 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_100229F6
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10022A37
push	eax
push	offset aHsession0xX 
jmp	short loc_10022A32
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10022A37
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10022A4C
push	esi
push	offset aPpart0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10022A66
push	ebx
push	offset aUlpartlenD 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10022A80
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPencryptedpart 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_10022A9A
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulencryptedpa 
call	ebp 
add	esp, 8
push	offset dword_100BA44C
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+0E2h]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA448
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_10022B03
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulencrypted_1 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_10]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
mov	esi, [esp+6Ch+arg_4]
push	edi
mov	[esp+70h+var_58], esi
mov	[esp+70h+var_5C], eax
mov	[esp+70h+var_60], ecx
jl	short loc_10022B66
push	offset aC_decryptverif 
call	ebp 
add	esp, 4
mov	eax, [esp+70h+arg_0]
test	eax, eax
jz	short loc_10022B86
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10022BC7
push	eax
push	offset aHsession0xX 
jmp	short loc_10022BC2
push	50h
lea	edx, [esp+74h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+80h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[ecx+4], edi
jl	short loc_10022BC7
push	0
lea	edx, [esp+74h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10022BDC
push	esi
push	offset aPencryptedpart 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
mov	ebx, [esp+70h+arg_8]
cmp	[ecx+4], edi
jl	short loc_10022BF6
push	ebx
push	offset aUlencryptedpar 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10022C10
mov	eax, [esp+70h+var_5C]
push	eax
push	offset aPpart0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_10022C2A
mov	edx, [esp+70h+var_60]
push	edx
push	offset aPulpartlen0xP 
call	ebp 
add	esp, 8
push	offset dword_100BA458
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_58]
mov	edi, eax
mov	eax, [esp+74h+var_60]
push	eax
mov	eax, [esp+78h+arg_0]
push	ecx
mov	ecx, dword_100BACBC
push	ebx
push	edx
mov	edx, [ecx+0E6h]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA454
call	ds:PR_AtomicAdd
mov	eax, dword_100BACD0
add	esp, 20h
cmp	dword ptr [eax+4], 4
jl	short loc_10022C93
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx]
push	edx
push	offset aPulpartlen0xX 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+5Ch+arg_10]
push	ebx
mov	ebx, [esp+60h+arg_8]
push	ebp
mov	ebp, [esp+64h+arg_4]
push	esi
mov	esi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
mov	[esp+68h+var_5C], eax
jl	short loc_10022CF1
push	offset aC_generatekey 
call	esi 
add	esp, 4
mov	eax, [esp+68h+arg_0]
push	edi
test	eax, eax
jz	short loc_10022D12
mov	edx, dword_100BACD0
mov	edi, 3
cmp	[edx+4], edi
jl	short loc_10022D53
push	eax
push	offset aHsession0xX 
jmp	short loc_10022D4E
push	50h
lea	eax, [esp+70h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+7Ch+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[edx+4], edi
jl	short loc_10022D53
push	0
lea	eax, [esp+70h+var_54]
push	eax
call	esi 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_10022D69
push	ebp
push	offset aPmechanism0xP 
call	esi 
add	esp, 8
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10022D7F
push	ebx
push	offset aPtemplate0xP 
call	esi 
add	esp, 8
mov	eax, dword_100BACD0
mov	ebx, [esp+6Ch+arg_C]
cmp	[eax+4], edi
jl	short loc_10022D98
push	ebx
push	offset aUlcountD 
call	esi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_10022DB2
mov	edx, [esp+6Ch+var_5C]
push	edx
push	offset aPhkey0xP 
call	esi 
add	esp, 8
test	ebx, ebx
jz	short loc_10022DCB
mov	edi, [esp+6Ch+var_58]
mov	esi, ebx
lea	esp, [esp+0]
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_10022DC0
mov	eax, ebp
call	sub_1001CAE0
push	offset dword_100BA464
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+70h+var_58]
mov	edx, [esp+70h+arg_0]
mov	edi, eax
mov	eax, [esp+70h+var_5C]
push	eax
mov	eax, dword_100BACBC
push	ebx
push	ecx
mov	ecx, [eax+0EAh]
push	ebp
push	edx
call	ecx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA460
call	ds:PR_AtomicAdd
mov	edx, [esp+8Ch+var_5C]
mov	eax, [edx]
add	esp, 20h
pop	edi
test	eax, eax
jz	short loc_10022E39
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_10022E7A
push	eax
push	offset aPhkey0xX 
jmp	short loc_10022E71
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aPhkey0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 4
jl	short loc_10022E7A
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	ds:PR_LogPrint
add	esp, 8
			
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
sub	esp, 68h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+68h+var_4], eax
mov	eax, [esp+68h+arg_10]
mov	ecx, [esp+68h+arg_18]
mov	edx, [esp+68h+arg_1C]
push	ebx
mov	ebx, [esp+6Ch+arg_8]
push	ebp
mov	ebp, [esp+70h+arg_4]
mov	[esp+70h+var_60], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	esi
mov	esi, ds:PR_LogPrint
mov	[esp+74h+var_58], ebp
mov	[esp+74h+var_5C], ebx
mov	[esp+74h+var_64], ecx
mov	[esp+74h+var_68], edx
jl	short loc_10022EFA
push	offset aC_generatekeyp 
call	esi 
add	esp, 4
mov	eax, [esp+74h+arg_0]
push	edi
test	eax, eax
jz	short loc_10022F20
mov	ecx, dword_100BACD0
mov	edi, 3
cmp	[ecx+4], edi
jl	short loc_10022F62
push	eax
push	offset aHsession0xX 
call	esi 
add	esp, 8
jmp	short loc_10022F62
push	50h
lea	edx, [esp+7Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+88h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 3
jl	short loc_10022F5D
lea	edx, [esp+78h+var_54]
push	0
push	edx
call	esi 
add	esp, 8
mov	edi, 3
			
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10022F77
push	ebp
push	offset aPmechanism0xP 
call	esi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_10022F8D
push	ebx
push	offset aPpublickeytemp 
call	esi 
add	esp, 8
mov	edx, dword_100BACD0
mov	ebp, [esp+78h+arg_C]
cmp	[edx+4], edi
jl	short loc_10022FAA
push	ebp
push	offset aUlpublickeyatt 
call	esi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10022FC3
mov	ecx, [esp+78h+var_60]
push	ecx
push	offset aPprivatekeytem 
call	esi 
add	esp, 8
mov	edx, dword_100BACD0
mov	ebx, [esp+78h+arg_14]
cmp	[edx+4], edi
jl	short loc_10022FE0
push	ebx
push	offset aUlprivatekeyat 
call	esi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10022FF9
mov	ecx, [esp+78h+var_64]
push	ecx
push	offset aPhpublickey0xP 
call	esi 
add	esp, 8
test	ebp, ebp
jz	short loc_10023019
mov	edi, [esp+78h+var_5C]
mov	esi, ebp
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_10023003
mov	esi, ds:PR_LogPrint
mov	edi, 3
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_10023033
mov	eax, [esp+78h+var_68]
push	eax
push	offset aPhprivatekey0x 
call	esi 
add	esp, 8
test	ebx, ebx
jz	short loc_1002304B
mov	edi, [esp+78h+var_60]
mov	esi, ebx
lea	ecx, [ecx+0]
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_10023040
mov	eax, [esp+78h+var_58]
call	sub_1001CAE0
push	offset dword_100BA470
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+7Ch+var_68]
mov	edx, [esp+7Ch+var_64]
push	ecx
mov	ecx, [esp+80h+var_5C]
push	edx
mov	edx, [esp+84h+var_58]
push	ebx
mov	edi, eax
mov	eax, [esp+88h+var_60]
push	eax
mov	eax, [esp+8Ch+arg_0]
push	ebp
push	ecx
mov	ecx, dword_100BACBC
push	edx
mov	edx, [ecx+0EEh]
push	eax
call	edx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA46C
call	ds:PR_AtomicAdd
mov	eax, [esp+0A4h+var_64]
mov	eax, [eax]
add	esp, 2Ch
pop	edi
test	eax, eax
jz	short loc_100230D2
mov	ecx, dword_100BACD0
mov	esi, 4
cmp	[ecx+4], esi
jl	short loc_10023117
push	eax
push	offset aPhpublickey0xX 
jmp	short loc_1002310E
push	50h
lea	edx, [esp+78h+var_54]
push	offset aPhpublickey0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+84h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 4
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_10023117
push	0
lea	edx, [esp+78h+var_54]
push	edx
call	ds:PR_LogPrint
add	esp, 8
			
mov	eax, [esp+74h+var_68]
mov	eax, [eax]
test	eax, eax
jz	short loc_10023134
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_10023174
push	eax
push	offset aPhprivatekey_0 
jmp	short loc_1002316B
push	50h
lea	edx, [esp+78h+var_54]
push	offset aPhprivatekey_0 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+84h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_10023174
push	0
lea	edx, [esp+78h+var_54]
push	edx
call	ds:PR_LogPrint
add	esp, 8
			
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+74h+var_4]
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 68h
retn
align 10h
sub	esp, 100h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+100h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+100h+arg_10]
mov	ecx, [esp+100h+arg_14]
push	ebx
push	ebp
mov	ebp, ds:PR_LogPrint
push	esi
push	edi
mov	edi, [esp+110h+arg_4]
mov	[esp+110h+var_F8], edi
mov	[esp+110h+var_FC], eax
mov	[esp+110h+var_100], ecx
jl	short loc_100231E5
push	offset aC_wrapkey 
call	ebp 
add	esp, 4
mov	eax, [esp+110h+arg_0]
test	eax, eax
jz	short loc_10023208
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_10023249
push	eax
push	offset aHsession0xX 
jmp	short loc_10023244
push	50h
lea	edx, [esp+114h+var_A4]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+120h+var_A4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_10023249
push	0
lea	edx, [esp+114h+var_A4]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1002325E
push	edi
push	offset aPmechanism0xP 
call	ebp 
add	esp, 8
mov	eax, [esp+110h+arg_8]
test	eax, eax
jz	short loc_1002327C
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_100232B8
push	eax
push	offset aHwrappingkey0x 
jmp	short loc_100232B3
push	50h
lea	edx, [esp+114h+var_F4]
push	offset aHwrappingkey0x 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+120h+var_F4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_100232B8
push	0
lea	edx, [esp+114h+var_F4]
push	edx
call	ebp 
add	esp, 8
			
mov	ebx, [esp+110h+arg_C]
test	ebx, ebx
jz	short loc_100232D5
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_10023319
push	ebx
push	offset aHkey0xX	
jmp	short loc_10023314
push	50h
lea	ecx, [esp+114h+var_54]
push	offset aHkey0xX	
push	ecx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	edx, [esp+120h+var_54]
push	50h
push	edx
call	PL_strcatn
mov	eax, dword_100BACD0
add	esp, 18h
cmp	[eax+4], esi
jl	short loc_10023319
push	0
lea	ecx, [esp+114h+var_54]
push	ecx
call	ebp 
add	esp, 8
			
mov	edx, dword_100BACD0
cmp	[edx+4], esi
jl	short loc_10023333
mov	eax, [esp+110h+var_FC]
push	eax
push	offset aPwrappedkey0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_1002334D
mov	edx, [esp+110h+var_100]
push	edx
push	offset aPulwrappedkeyl 
call	ebp 
add	esp, 8
mov	eax, edi
call	sub_1001CAE0
push	offset dword_100BA47C
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	ecx, [esp+114h+var_FC]
mov	edx, [esp+114h+arg_8]
mov	edi, eax
mov	eax, [esp+114h+var_100]
push	eax
mov	eax, [esp+118h+var_F8]
push	ecx
mov	ecx, [esp+11Ch+arg_0]
push	ebx
push	edx
mov	edx, dword_100BACBC
push	eax
mov	eax, [edx+0F2h]
push	ecx
call	eax
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA478
call	ds:PR_AtomicAdd
mov	ecx, dword_100BACD0
add	esp, 24h
cmp	dword ptr [ecx+4], 4
jl	short loc_100233C9
mov	edx, [esp+110h+var_100]
mov	eax, [edx]
push	eax
push	offset aPulwrappedke_0 
call	ebp 
add	esp, 8
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+110h+var_4]
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 100h
retn
align 10h
sub	esp, 0B4h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0B4h+var_4], eax
mov	edx, dword_100BACD0
cmp	dword ptr [edx+4], 1
mov	eax, [esp+0B4h+arg_14]
mov	ecx, [esp+0B4h+arg_1C]
push	ebx
mov	ebx, [esp+0B8h+arg_C]
push	ebp
mov	ebp, ds:PR_LogPrint
push	edi
mov	edi, [esp+0C0h+arg_4]
mov	[esp+0C0h+var_AC], edi
mov	[esp+0C0h+var_A8], ebx
mov	[esp+0C0h+var_B4], eax
mov	[esp+0C0h+var_B0], ecx
jl	short loc_1002344F
push	offset aC_unwrapkey 
call	ebp 
add	esp, 4
mov	eax, [esp+0C0h+arg_0]
push	esi
test	eax, eax
jz	short loc_10023473
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_100234B7
push	eax
push	offset aHsession0xX 
jmp	short loc_100234B2
push	50h
lea	edx, [esp+0C8h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0D4h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_100234B7
push	0
lea	edx, [esp+0C8h+var_54]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_100234CC
push	edi
push	offset aPmechanism0xP 
call	ebp 
add	esp, 8
mov	eax, [esp+0C4h+arg_8]
test	eax, eax
jz	short loc_100234EA
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_10023526
push	eax
push	offset aHunwrappingkey 
jmp	short loc_10023521
push	50h
lea	edx, [esp+0C8h+var_A4]
push	offset aHunwrappingkey 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0D4h+var_A4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_10023526
push	0
lea	edx, [esp+0C8h+var_A4]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_1002353B
push	ebx
push	offset aPwrappedkey0xP 
call	ebp 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
jl	short loc_10023558
mov	edx, [esp+0C4h+arg_10]
push	edx
push	offset aUlwrappedkeyle 
call	ebp 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_10023571
mov	ecx, [esp+0C4h+var_B4]
push	ecx
push	offset aPtemplate0xP 
call	ebp 
add	esp, 8
mov	edx, dword_100BACD0
mov	ebx, [esp+0C4h+arg_18]
cmp	[edx+4], esi
jl	short loc_1002358E
push	ebx
push	offset aUlattributecou 
call	ebp 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_100235A7
mov	ecx, [esp+0C4h+var_B0]
push	ecx
push	offset aPhkey0xP 
call	ebp 
add	esp, 8
test	ebx, ebx
jz	short loc_100235C0
mov	edi, [esp+0C4h+var_B4]
mov	esi, ebx
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_100235B1
mov	edi, [esp+0C4h+var_AC]
mov	eax, edi
call	sub_1001CAE0
push	offset dword_100BA488
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	edx, [esp+0C8h+var_B0]
mov	ecx, [esp+0C8h+arg_10]
push	edx
mov	edx, [esp+0CCh+var_A8]
push	ebx
mov	edi, eax
mov	eax, [esp+0D0h+var_B4]
push	eax
mov	eax, [esp+0D4h+arg_8]
push	ecx
mov	ecx, [esp+0D8h+var_AC]
push	edx
mov	edx, [esp+0DCh+arg_0]
push	eax
mov	eax, dword_100BACBC
push	ecx
mov	ecx, [eax+0F6h]
push	edx
call	ecx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA484
call	ds:PR_AtomicAdd
mov	edx, [esp+0F0h+var_B0]
mov	eax, [edx]
add	esp, 2Ch
pop	esi
test	eax, eax
jz	short loc_1002364A
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_10023687
push	eax
push	offset aPhkey0xX 
jmp	short loc_10023682
push	50h
lea	edx, [esp+0C4h+var_A4]
push	offset aPhkey0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0D0h+var_A4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 4
jl	short loc_10023687
push	0
lea	edx, [esp+0C4h+var_A4]
push	edx
call	ebp 
add	esp, 8
			
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+0C0h+var_4]
pop	edi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0B4h
retn
align 10h
sub	esp, 0ACh
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0ACh+var_4], eax
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 1
mov	eax, [esp+0ACh+arg_14]
push	ebx
mov	ebx, [esp+0B0h+arg_C]
push	ebp
mov	ebp, [esp+0B4h+arg_4]
push	esi
mov	esi, ds:PR_LogPrint
mov	[esp+0B8h+var_A8], ebx
mov	[esp+0B8h+var_AC], eax
jl	short loc_10023700
push	offset aC_derivekey 
call	esi 
add	esp, 4
mov	eax, [esp+0B8h+arg_0]
push	edi
test	eax, eax
jz	short loc_10023724
mov	edx, dword_100BACD0
mov	edi, 3
cmp	[edx+4], edi
jl	short loc_10023765
push	eax
push	offset aHsession0xX 
jmp	short loc_10023760
push	50h
lea	eax, [esp+0C0h+var_54]
push	offset aHsession0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+0CCh+var_54]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
mov	edi, 3
add	esp, 18h
cmp	[edx+4], edi
jl	short loc_10023765
push	0
lea	eax, [esp+0C0h+var_54]
push	eax
call	esi 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_1002377B
push	ebp
push	offset aPmechanism0xP 
call	esi 
add	esp, 8
mov	eax, [esp+0BCh+arg_8]
test	eax, eax
jz	short loc_10023799
mov	edx, dword_100BACD0
cmp	[edx+4], edi
jl	short loc_100237D5
push	eax
push	offset aHbasekey0xX 
jmp	short loc_100237D0
push	50h
lea	eax, [esp+0C0h+var_A4]
push	offset aHbasekey0xX 
push	eax
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	ecx, [esp+0CCh+var_A4]
push	50h
push	ecx
call	PL_strcatn
mov	edx, dword_100BACD0
add	esp, 18h
cmp	[edx+4], edi
jl	short loc_100237D5
push	0
lea	eax, [esp+0C0h+var_A4]
push	eax
call	esi 
add	esp, 8
			
mov	ecx, dword_100BACD0
cmp	[ecx+4], edi
jl	short loc_100237EB
push	ebx
push	offset aPtemplate0xP 
call	esi 
add	esp, 8
mov	edx, dword_100BACD0
mov	ebx, [esp+0BCh+arg_10]
cmp	[edx+4], edi
jl	short loc_10023808
push	ebx
push	offset aUlattributecou 
call	esi 
add	esp, 8
mov	eax, dword_100BACD0
cmp	[eax+4], edi
jl	short loc_10023821
mov	ecx, [esp+0BCh+var_AC]
push	ecx
push	offset aPhkey0xP 
call	esi 
add	esp, 8
test	ebx, ebx
jz	short loc_1002383B
mov	edi, [esp+0BCh+var_A8]
mov	esi, ebx
jmp	short loc_10023830
align 10h
			
call	sub_1001DB60
add	edi, 0Ch
dec	esi
jnz	short loc_10023830
mov	eax, ebp
call	sub_1001CAE0
push	offset dword_100BA494
call	ds:PR_AtomicIncrement
mov	esi, ds:PR_IntervalNow
call	esi 
mov	edx, [esp+0C0h+var_AC]
mov	ecx, [esp+0C0h+arg_8]
push	edx
mov	edx, [esp+0C4h+arg_0]
mov	edi, eax
mov	eax, [esp+0C4h+var_A8]
push	ebx
push	eax
mov	eax, dword_100BACBC
push	ecx
mov	ecx, [eax+0FAh]
push	ebp
push	edx
call	ecx
mov	ebx, eax
call	esi 
sub	eax, edi
push	eax
push	offset dword_100BA490
call	ds:PR_AtomicAdd
mov	edx, [esp+0E0h+var_AC]
mov	eax, [edx]
add	esp, 24h
pop	edi
test	eax, eax
jz	short loc_100238B4
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 4
jl	short loc_100238F5
push	eax
push	offset aPhkey0xX 
jmp	short loc_100238EC
push	50h
lea	edx, [esp+0BCh+var_A4]
push	offset aPhkey0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+0C8h+var_A4]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 4
jl	short loc_100238F5
push	0
lea	edx, [esp+0BCh+var_A4]
push	edx
call	ds:PR_LogPrint
add	esp, 8
			
mov	eax, ebx
call	sub_1001C3A0
mov	ecx, [esp+0B8h+var_4]
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0ACh
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_4]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
jl	short loc_10023955
push	offset aC_seedrandom 
call	edi 
add	esp, 4
mov	ebp, [esp+68h+arg_0]
test	ebp, ebp
jz	short loc_10023975
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_100239B6
push	ebp
push	offset aHsession0xX 
jmp	short loc_100239B1
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_100239B6
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_100239CB
push	ebx
push	offset aPseed0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+68h+arg_8]
jl	short loc_100239E5
push	esi
push	offset aUlseedlenD 
call	edi 
add	esp, 8
push	offset dword_100BA4A0
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+6Ch+var_58]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+0FEh]
push	edx
push	ebp
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA49C
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
mov	ebx, [esp+5Ch+arg_4]
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
mov	[esp+68h+var_58], ebx
jl	short loc_10023A75
push	offset aC_generaterand 
call	edi 
add	esp, 4
mov	ebp, [esp+68h+arg_0]
test	ebp, ebp
jz	short loc_10023A95
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_10023AD6
push	ebp
push	offset aHsession0xX 
jmp	short loc_10023AD1
push	50h
lea	edx, [esp+6Ch+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+78h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
mov	esi, 3
add	esp, 18h
cmp	[ecx+4], esi
jl	short loc_10023AD6
push	0
lea	edx, [esp+6Ch+var_54]
push	edx
call	edi 
add	esp, 8
			
mov	eax, dword_100BACD0
cmp	[eax+4], esi
jl	short loc_10023AEB
push	ebx
push	offset aRandomdata0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+68h+arg_8]
jl	short loc_10023B05
push	esi
push	offset aUlrandomlenD 
call	edi 
add	esp, 8
push	offset dword_100BA4AC
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+6Ch+var_58]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+102h]
push	edx
push	ebp
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA4A8
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+68h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_10023B8C
push	offset aC_getfunctions 
call	edi 
add	esp, 4
mov	esi, [esp+60h+arg_0]
test	esi, esi
jz	short loc_10023BA8
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
jl	short loc_10023BE5
push	esi
push	offset aHsession0xX 
jmp	short loc_10023BE0
push	50h
lea	edx, [esp+64h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+70h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 3
jl	short loc_10023BE5
push	0
lea	edx, [esp+64h+var_54]
push	edx
call	edi 
add	esp, 8
			
push	offset dword_100BA4B8
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+106h]
push	esi
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA4B4
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+60h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_10023C6C
push	offset aC_cancelfuncti 
call	edi 
add	esp, 4
mov	esi, [esp+60h+arg_0]
test	esi, esi
jz	short loc_10023C88
mov	ecx, dword_100BACD0
cmp	dword ptr [ecx+4], 3
jl	short loc_10023CC5
push	esi
push	offset aHsession0xX 
jmp	short loc_10023CC0
push	50h
lea	edx, [esp+64h+var_54]
push	offset aHsession0xX 
push	edx
call	PL_strncpyz
push	offset aCk_invalid_han 
lea	eax, [esp+70h+var_54]
push	50h
push	eax
call	PL_strcatn
mov	ecx, dword_100BACD0
add	esp, 18h
cmp	dword ptr [ecx+4], 3
jl	short loc_10023CC5
push	0
lea	edx, [esp+64h+var_54]
push	edx
call	edi 
add	esp, 8
			
push	offset dword_100BA4C4
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+10Ah]
push	esi
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA4C0
call	ds:PR_AtomicAdd
add	esp, 10h
mov	eax, esi
call	sub_1001C3A0
mov	ecx, [esp+60h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
mov	eax, dword_100BACD0
cmp	dword ptr [eax+4], 1
push	ebx
push	ebp
push	esi
push	edi
mov	edi, ds:PR_LogPrint
jl	short loc_10023D3F
push	offset aC_waitforslote 
call	edi 
add	esp, 4
mov	ecx, dword_100BACD0
mov	esi, 3
cmp	[ecx+4], esi
jl	short loc_10023D5E
mov	edx, [esp+14h]
push	edx
push	offset aFlags0xX 
call	edi 
add	esp, 8
mov	eax, dword_100BACD0
mov	ebp, [esp+18h]
cmp	[eax+4], esi
jl	short loc_10023D77
push	ebp
push	offset aPslot0xP 
call	edi 
add	esp, 8
mov	ecx, dword_100BACD0
cmp	[ecx+4], esi
mov	esi, [esp+1Ch]
jl	short loc_10023D91
push	esi
push	offset aPrserved0xP 
call	edi 
add	esp, 8
push	offset dword_100BA4D0
call	ds:PR_AtomicIncrement
mov	edi, ds:PR_IntervalNow
call	edi 
mov	edx, [esp+18h]
push	esi
mov	ebx, eax
mov	eax, dword_100BACBC
mov	ecx, [eax+10Eh]
push	ebp
push	edx
call	ecx
mov	esi, eax
call	edi 
sub	eax, ebx
push	eax
push	offset dword_100BA4CC
call	ds:PR_AtomicAdd
add	esp, 18h
mov	eax, esi
call	sub_1001C3A0
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
mov	eax, [esp+arg_0]
push	offset aNss_mod_log 
mov	dword_100BACBC,	eax
call	ds:PR_NewLogModule
mov	dword_100BACD0,	eax
add	esp, 4
mov	dword_100BABAA,	offset loc_1001E070
mov	dword_100BABAE,	offset loc_1001E0F0
mov	dword_100BABB2,	offset loc_1001E170
mov	dword_100BABB6,	offset loc_1001E270
mov	dword_100BABBA,	offset loc_1001E2F0
mov	dword_100BABBE,	offset loc_1001E410
mov	dword_100BABC2,	offset loc_1001E570
mov	dword_100BABC6,	offset loc_1001E760
mov	dword_100BABCA,	offset loc_1001E840
mov	dword_100BABCE,	offset loc_1001E900
mov	dword_100BABD2,	offset sub_1001E9E0
mov	dword_100BABD6,	offset sub_1001EB00
mov	dword_100BABDA,	offset sub_1001EC70
mov	dword_100BABDE,	offset sub_1001EE20
mov	dword_100BABE2,	offset loc_1001EF10
mov	dword_100BABE6,	offset sub_1001EF90
mov	dword_100BABEA,	offset sub_1001F110
mov	dword_100BABEE,	offset sub_1001F260
mov	dword_100BABF2,	offset sub_1001F460
mov	dword_100BABF6,	offset sub_1001F5A0
mov	dword_100BABFA,	offset sub_1001F680
mov	dword_100BABFE,	offset sub_1001F840
mov	dword_100BAC02,	offset sub_1001FA80
mov	dword_100BAC06,	offset sub_1001FBC0
mov	dword_100BAC0A,	offset sub_1001FD60
mov	dword_100BAC0E,	offset sub_1001FF10
mov	dword_100BAC12,	offset sub_100200C0
mov	dword_100BAC16,	offset sub_10020200
mov	dword_100BAC1A,	offset sub_100203B0
mov	dword_100BAC1E,	offset sub_10020490
mov	dword_100BAC22,	offset sub_100205F0
mov	dword_100BAC26,	offset sub_10020780
mov	dword_100BAC2A,	offset sub_10020910
mov	dword_100BAC2E,	offset sub_10020A60
mov	dword_100BAC32,	offset sub_10020BC0
mov	dword_100BAC36,	offset sub_10020D50
mov	dword_100BAC3A,	offset sub_10020EE0
mov	dword_100BAC3E,	offset sub_10021030
mov	dword_100BAC42,	offset sub_10021140
mov	dword_100BAC46,	offset sub_100212D0
mov	dword_100BAC4A,	offset sub_100213F0
mov	dword_100BAC4E,	offset sub_100214D0
mov	dword_100BAC52,	offset sub_10021620
mov	dword_100BAC56,	offset sub_10021780
mov	dword_100BAC5A,	offset sub_10021910
mov	dword_100BAC5E,	offset sub_10021A30
mov	dword_100BAC62,	offset sub_10021B80
mov	dword_100BAC66,	offset sub_10021CE0
mov	dword_100BAC6A,	offset sub_10021E70
mov	dword_100BAC6E,	offset sub_10021FD0
mov	dword_100BAC72,	offset sub_10022140
mov	dword_100BAC76,	offset sub_10022260
mov	dword_100BAC7A,	offset sub_10022380
mov	dword_100BAC7E,	offset sub_100224E0
mov	dword_100BAC82,	offset sub_10022670
mov	dword_100BAC86,	offset sub_10022800
mov	dword_100BAC8A,	offset sub_10022990
mov	dword_100BAC8E,	offset sub_10022B20
mov	dword_100BAC92,	offset sub_10022CB0
mov	dword_100BAC96,	offset sub_10022EA0
mov	dword_100BAC9A,	offset sub_10023190
mov	dword_100BAC9E,	offset sub_100233F0
mov	dword_100BACA2,	offset sub_100236B0
mov	dword_100BACA6,	offset sub_10023920
mov	dword_100BACAA,	offset sub_10023A40
mov	dword_100BACAE,	offset sub_10023B60
mov	dword_100BACB2,	offset sub_10023C40
mov	dword_100BACB6,	offset loc_10023D20
mov	eax, offset byte_100BABA8
retn
align 10h
push	ebp
mov	ebp, esp
and	esp, 0FFFFFFC0h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
xor	edi, edi
push	offset aNss_output_fil 
mov	[esp+44h+var_10], edi
mov	[esp+44h+var_18], edi
call	ds:PR_GetEnv
add	esp, 4
cmp	eax, edi
jz	short loc_100240EE
push	offset Mode	
push	eax		
call	ds:fopen
mov	esi, eax
add	esp, 8
cmp	esi, edi
jnz	short loc_100240F7
mov	esi, ds:_iob
add	esi, 20h
mov	ebx, ds:fprintf
push	offset aTime	
push	offset aAvg_	
push	offset aTime_0	
push	offset aCalls	
push	offset aFunction 
push	offset Format	
push	esi		
mov	[esp+5Ch+var_C], edi
xor	ebp, ebp
mov	[esp+5Ch+var_8], edi
call	ebx 
push	offset asc_100A5D14 
push	esi		
call	ebx 
mov	ecx, dword_100BA4D8
add	esp, 24h
xor	eax, eax
cmp	ecx, 2
jl	short loc_10024175
add	ecx, 0FFFFFFFEh
shr	ecx, 1
inc	ecx
lea	edx, [ecx+ecx]
mov	eax, offset dword_100BA1A8
mov	[esp+40h+var_14], edx
mov	edx, [eax+10h]
add	[esp+40h+var_8], edx
mov	edx, [eax+0Ch]
add	ebp, [eax+4]
add	edi, [eax]
add	[esp+40h+var_C], edx
add	eax, 18h
dec	ecx
jnz	short loc_10024152
mov	ecx, dword_100BA4D8
mov	eax, [esp+40h+var_14]
cmp	eax, ecx
jge	short loc_10024195
lea	eax, [eax+eax*2]
add	eax, eax
mov	edx, dword_100BA1AC[eax+eax]
add	eax, eax
mov	eax, dword_100BA1A8[eax]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_18], eax
mov	edx, [esp+40h+var_C]
mov	eax, [esp+40h+var_8]
add	edx, edi
add	[esp+40h+var_18], edx
add	eax, ebp
add	[esp+40h+var_10], eax
mov	[esp+40h+var_14], 0
test	ecx, ecx
jle	loc_10024300
mov	edi, offset dword_100BA1AC
mov	[esp+40h+var_8], edi
mov	ebp, [edi-4]
push	ebp
call	ds:PR_IntervalToMicroseconds
mov	[esp+44h+var_4], eax
mov	eax, [edi]
add	esp, 4
mov	[esp+40h+var_C], eax
test	eax, eax
jz	loc_100242E4
test	ebp, ebp
jnz	short loc_100241EE
mov	edi, offset aZ	
xor	eax, eax
jmp	short loc_10024248
push	ebp
call	ds:PR_IntervalToSeconds
mov	ecx, eax
add	esp, 4
cmp	ecx, 258h
jb	short loc_10024215
mov	eax, 88888889h
mul	ecx
mov	eax, edx
mov	edi, offset aM	
shr	eax, 5
jmp	short loc_10024248
cmp	ecx, 0Ah
jb	short loc_10024223
mov	edi, offset aS_0 
mov	eax, ecx
jmp	short loc_10024248
push	ebp
call	ds:PR_IntervalToMilliseconds
add	esp, 4
cmp	eax, 0Ah
jb	short loc_10024239
mov	edi, offset aMs	
jmp	short loc_10024248
push	ebp
mov	edi, offset aUs	
call	ds:PR_IntervalToMicroseconds
add	esp, 4
			
mov	ecx, [esp+40h+var_C]
mov	edx, [esp+40h+var_8]
push	edi
push	eax
mov	eax, [edx+4]
push	ecx
push	eax
push	offset a25s10d10d2s 
push	esi		
call	ebx 
fild	[esp+58h+var_4]
mov	ecx, [esp+58h+var_4]
add	esp, 18h
push	offset aUs	
test	ecx, ecx
jns	short loc_10024279
fadd	ds:flt_100A5CFC
mov	edx, [esp+44h+var_C]
fild	[esp+44h+var_C]
test	edx, edx
jns	short loc_1002428B
fadd	ds:flt_100A5CFC
fdivp	st(1), st
sub	esp, 8
fstp	[esp+4Ch+var_4C]
push	offset a10_2f2s	
push	esi		
call	ebx 
mov	[esp+54h+var_4], ebp
fild	[esp+54h+var_4]
test	ebp, ebp
jns	short loc_100242AD
fadd	ds:flt_100A5CFC
mov	eax, [esp+54h+var_18]
fild	[esp+54h+var_18]
test	eax, eax
jns	short loc_100242BF
fadd	ds:flt_100A5CFC
fdivp	st(1), st
add	esp, 0Ch
fmul	ds:dbl_100A5CE8
fstp	[esp+48h+var_4C+4]
push	offset a10_2f	
push	esi		
call	ebx 
push	offset asc_100A5D14 
push	esi		
call	ebx 
mov	edi, [esp+58h+var_8]
add	esp, 18h
mov	eax, [esp+40h+var_14]
inc	eax
add	edi, 0Ch
mov	[esp+40h+var_14], eax
mov	[esp+40h+var_8], edi
cmp	eax, dword_100BA4D8
jl	loc_100241C2
push	offset asc_100A5D14 
push	esi		
call	ebx 
mov	edi, [esp+48h+var_18]
add	esp, 8
test	edi, edi
jnz	short loc_1002431C
mov	ebp, offset aZ	
xor	eax, eax
jmp	short loc_10024376
push	edi
call	ds:PR_IntervalToSeconds
mov	ecx, eax
add	esp, 4
cmp	ecx, 258h
jb	short loc_10024343
mov	eax, 88888889h
mul	ecx
mov	eax, edx
mov	ebp, offset aM	
shr	eax, 5
jmp	short loc_10024376
cmp	ecx, 0Ah
jb	short loc_10024351
mov	ebp, offset aS_0 
mov	eax, ecx
jmp	short loc_10024376
push	edi
call	ds:PR_IntervalToMilliseconds
add	esp, 4
cmp	eax, 0Ah
jb	short loc_10024367
mov	ebp, offset aMs	
jmp	short loc_10024376
push	edi
mov	ebp, offset aUs	
call	ds:PR_IntervalToMicroseconds
add	esp, 4
			
mov	ecx, [esp+40h+var_10]
push	ebp
push	eax
push	ecx
push	offset aTotals	
push	offset a25s10d10d2s_0 
push	esi		
call	ebx 
mov	edx, dword_100BACD8
push	edx
push	offset aMaximumNumberO 
push	esi		
call	ebx 
push	esi		
call	ds:fflush
mov	eax, ds:_iob
add	eax, 20h
add	esp, 28h
cmp	esi, eax
jz	short loc_100243B9
push	esi		
call	ds:fclose
add	esp, 4
pop	edi
pop	esi
pop	ebp
pop	ebx
mov	esp, ebp
pop	ebp
retn
align 10h
call	ds:PR_NewLock
mov	ecx, [esp+arg_0]
mov	[ecx], eax
neg	eax
sbb	eax, eax
and	eax, 0FFFFFFFEh
add	eax, 2
retn
align 10h
mov	eax, [esp+arg_0]
push	eax
call	ds:PR_DestroyLock
add	esp, 4
xor	eax, eax
retn
align 10h
mov	eax, [esp+arg_0]
push	eax
call	ds:PR_Lock
add	esp, 4
xor	eax, eax
retn
align 10h
mov	eax, [esp+arg_0]
push	eax
call	ds:PR_Unlock
add	esp, 4
xor	eax, eax
retn
align 10h
			
xor	eax, eax
cmp	[esp+arg_0], eax
setz	al
xor	ecx, ecx
cmp	[esp+arg_4], ecx
setz	cl
xor	edx, edx
cmp	[esp+arg_8], edx
mov	dword_100BA4E0,	eax
setz	dl
xor	eax, eax
mov	dword_100BA4E4,	ecx
mov	dword_100BA4E8,	edx
retn
align 10h
			
mov	eax, dword_100BA4E8
retn
align 10h
sub	esp, 14h
push	ebp
push	esi
push	edi
mov	edi, eax
xor	eax, eax
lea	ecx, [esp+20h+var_8]
push	ecx		
mov	[esp+24h+var_14], eax
mov	[esp+24h+var_10], eax
mov	eax, [edi+48h]
lea	edx, [esp+24h+var_4]
push	edx		
push	eax		
mov	eax, [edi+0Ch]
push	eax		
push	1		
or	ebp, 0FFFFFFFFh
call	sub_1002CE00
mov	esi, eax
add	esp, 14h
mov	[esp+20h+var_C], esi
test	esi, esi
jnz	short loc_100244D4
pop	edi
pop	esi
or	eax, ebp
pop	ebp
add	esp, 14h
retn
cmp	dword ptr [ebx+4], 0
jz	short loc_10024513
mov	edx, [ebx+48h]
mov	eax, [ebx+0Ch]
lea	ecx, [esp+20h+var_10]
push	ecx		
push	edx		
push	eax		
call	sub_1002DFC0
add	esp, 0Ch
mov	[esp+20h+var_14], eax
test	eax, eax
jz	short loc_10024513
mov	ecx, [esp+20h+var_10]
push	ecx
mov	edx, eax
push	edx
push	esi
call	sub_1002D4E0
add	esp, 0Ch
test	eax, eax
jz	short loc_10024513
xor	ebp, ebp
jmp	loc_100245D0
			
push	esi
push	ebx
call	SECMOD_OpenNewSlot
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_100245CC
push	edi
call	sub_1002CD10
add	esp, 4
test	eax, eax
jz	short loc_1002453D
push	esi
call	sub_10036320
add	esp, 4
mov	ebp, [esi+40h]
push	esi
call	PK11_FreeSlot
mov	esi, [esp+24h+var_4]
mov	edi, [esp+24h+var_8]
add	esp, 4
test	esi, esi
jz	short loc_100245A8
mov	eax, [esi]
test	eax, eax
jz	short loc_100245A4
mov	ecx, [esp+20h+var_14]
test	ecx, ecx
jz	short loc_10024576
mov	edx, [esp+20h+var_10]
push	edx
push	ecx
push	eax
call	sub_1002D4E0
add	esp, 0Ch
test	eax, eax
jnz	short loc_10024596
mov	eax, [esi]
push	eax
push	ebx
call	SECMOD_OpenNewSlot
add	esp, 8
test	eax, eax
jz	short loc_10024596
mov	ecx, [eax+40h]
push	eax
mov	[edi], ecx
call	PK11_FreeSlot
add	esp, 4
jmp	short loc_1002459C
			
mov	dword ptr [edi], 0FFFFFFFFh
add	edi, 4
add	esi, 4
jnz	short loc_10024555
mov	esi, [esp+20h+var_4]
mov	edx, [esp+20h+var_8]
mov	eax, [esp+20h+var_C]
mov	ecx, [ebx+48h]
push	edx		
mov	edx, [ebx]
push	esi		
push	ebp		
push	eax		
push	ecx		
push	edx		
call	sub_1002D750
add	esp, 18h
test	eax, eax
jz	short loc_100245CA
mov	[ebx+48h], eax
xor	ebp, ebp
mov	esi, [esp+20h+var_C]
mov	eax, [esp+20h+var_8]
mov	ecx, [esp+20h+var_4]
push	eax
push	ecx
call	sub_1002D660
push	esi
call	PORT_Free_Util
mov	eax, [esp+2Ch+var_14]
add	esp, 0Ch
test	eax, eax
jz	short loc_100245FE
mov	edx, [esp+20h+var_10]
push	edx
push	eax
call	sub_1002D610
add	esp, 8
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
add	esp, 14h
retn
align 10h
			
sub	esp, 1Ch
push	ebx
mov	ebx, [esp+20h+arg_4]
push	ebp
test	ebx, ebx
jz	short loc_10024623
mov	dword ptr [ebx], 0
mov	ebp, [esp+24h+arg_0]
test	ebp, ebp
jz	loc_100247AE
cmp	[esp+24h+arg_8], 0
jz	loc_100247AE
mov	eax, [ebp+48h]
push	esi
push	edi
test	eax, eax
jnz	short loc_10024651
mov	eax, [ebp+3Ch]
neg	eax
sbb	eax, eax
and	eax, offset off_100A3360
jmp	short loc_10024674
cmp	dword ptr [ebp+3Ch], 0
mov	ecx, 7
lea	edi, [esp+2Ch+var_1C]
mov	esi, offset off_100A3360
jnz	short loc_1002466A
mov	esi, offset dword_100A337C
rep movsd
mov	[esp+2Ch+var_8], eax
lea	eax, [esp+2Ch+var_1C]
mov	ecx, [ebp+1Ch]
mov	edx, [ecx+2]
push	eax
call	edx
mov	edi, eax
add	esp, 4
cmp	edi, 191h
jnz	short loc_100246EC
test	ebx, ebx
jz	short loc_100246CF
cmp	dword ptr [ebp+48h], 0
jz	short loc_100246CF
mov	eax, [ebp+1Ch]
push	eax
call	sub_10039560
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_100246CF
mov	eax, ebp
mov	ebx, esi
call	sub_10024490
test	eax, eax
jnz	short loc_100246C6
mov	ecx, [esp+2Ch+arg_4]
mov	[ebp+1Ch], eax
mov	[ecx], esi
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
push	esi
call	SECMOD_DestroyModule
add	esp, 4
			
cmp	dword_100BA4E4,	0
jnz	short loc_100246F0
mov	edx, [esp+2Ch+arg_8]
pop	edi
pop	esi
pop	ebp
mov	dword ptr [edx], 1
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
test	edi, edi
jz	short loc_100246BC
cmp	dword ptr [ebp+3Ch], 0
jz	loc_10024794
cmp	edi, 0CE534351h
jz	loc_10024794
cmp	edi, 0CE534352h
jz	loc_10024794
cmp	dword_100BA4E0,	0
jnz	short loc_10024733
push	0FFFFE097h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 1Ch
retn
mov	eax, [ebp+48h]
mov	dword ptr [ebp+3Ch], 0
test	eax, eax
jz	short loc_10024759
mov	ecx, 7
mov	esi, offset dword_100A337C
lea	edi, [esp+2Ch+var_1C]
rep movsd
mov	[esp+2Ch+var_8], eax
lea	eax, [esp+2Ch+var_1C]
mov	ecx, [ebp+1Ch]
mov	edx, [ecx+2]
push	eax
call	edx
add	esp, 4
cmp	eax, 191h
jnz	short loc_10024789
cmp	dword_100BA4E4,	0
jnz	short loc_10024791
mov	eax, [esp+2Ch+arg_8]
pop	edi
pop	esi
pop	ebp
mov	dword ptr [eax], 1
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
test	eax, eax
jz	loc_100246BC
push	eax
jmp	short loc_10024795
			
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 1Ch
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 1Ch
retn
align 10h
mov	ecx, [esp+arg_0]
cmp	dword ptr [ecx+11Ch], 0
jz	locret_1002487E
push	ebp
push	esi
mov	esi, [esp+8+arg_4]
mov	edx, [esi+34h]
xor	eax, eax
push	edi
test	edx, edx
jle	short loc_10024818
mov	edi, [esi+30h]
mov	ebp, [ecx+40h]
mov	ecx, edi
lea	esp, [esp+0]
cmp	ebp, [ecx]
jz	short loc_1002480E
inc	eax
add	ecx, 24h
cmp	eax, edx
jl	short loc_10024800
jmp	short loc_10024818
lea	eax, [eax+eax*8]
lea	eax, [edi+eax*4]
test	eax, eax
jnz	short loc_10024877
			
lea	ecx, [edx+edx*8+9]
mov	edx, [esi]
add	ecx, ecx
add	ecx, ecx
push	ecx
push	edx
call	PORT_ArenaAlloc_Util
mov	edi, eax
mov	eax, [esi+34h]
add	esp, 8
test	eax, eax
jle	short loc_1002484A
mov	ecx, [esi+30h]
lea	eax, [eax+eax*8]
add	eax, eax
add	eax, eax
push	eax		
push	ecx		
push	edi		
call	memcpy
add	esp, 0Ch
mov	eax, [esi+34h]
mov	ecx, [esp+0Ch+arg_0]
lea	edx, [eax+eax*8]
lea	eax, [edi+edx*4]
mov	edx, [ecx+40h]
mov	[eax], edx
mov	dword ptr [eax+8], 0
mov	dword ptr [eax+0Ch], 0
mov	dword ptr [eax+4], 0
inc	dword ptr [esi+34h]
mov	[esi+30h], edi
pop	edi
pop	esi
mov	byte ptr [eax+10h], 1
pop	ebp
retn
align 10h
			
mov	eax, off_100BA4F0
mov	ecx, off_100BA4EC
push	eax
push	offset sub_10024880
push	ecx
call	PORT_LoadLibraryFromOrigin
add	esp, 0Ch
test	eax, eax
jz	short loc_100248A6
mov	dword_100BABA4,	eax
xor	eax, eax
retn
or	eax, 0FFFFFFFFh
retn
align 10h
			
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	eax, [esp+5Ch+arg_4]
push	esi
mov	esi, [esp+60h+arg_0]
push	edi
xor	edi, edi
mov	[esp+64h+var_50], eax
mov	[esp+64h+var_58], edi
mov	[esp+64h+var_5C], edi
mov	[esp+64h+var_54], edi
cmp	[esi+8], edi
jz	short loc_100248F2
pop	edi
xor	eax, eax
pop	esi
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
push	ebx
push	ebp
cmp	[esi+4], edi
jz	loc_100249AA
cmp	[esi+10h], edi
jnz	loc_100249AA
cmp	dword_100BABA4,	edi
jnz	short loc_10024929
push	offset sub_10024880
push	offset dword_100BACC0
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jnz	loc_10024C0B
push	offset dword_100BABA0
call	ds:PR_AtomicIncrement
mov	ebp, ds:PR_FindSymbol
add	esp, 4
cmp	[esi+0Ch], edi
jz	short loc_10024950
mov	ecx, dword_100BABA4
push	offset aFc_getfunction 
push	ecx
jmp	short loc_1002495C
mov	edx, dword_100BABA4
push	offset aNsc_getfunctio 
push	edx
call	ebp 
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_10024C0B
cmp	dword ptr [esi+58h], 0
jz	short loc_10024984
mov	eax, dword_100BABA4
push	offset aNsc_moduledbfu 
push	eax
call	ebp 
add	esp, 8
mov	[esi+4Ch], eax
cmp	dword ptr [esi+5Ch], 0
jz	loc_10024A54
pop	ebp
pop	ebx
pop	edi
mov	dword ptr [esi+8], 1
xor	eax, eax
pop	esi
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
			
mov	eax, [esi+10h]
cmp	eax, edi
jz	loc_10024C0B
push	eax
call	ds:PR_LoadLibrary
mov	ebx, eax
add	esp, 4
mov	[esp+6Ch+var_58], ebx
mov	[esi+18h], ebx
cmp	ebx, edi
jz	loc_10024C0B
mov	ebp, ds:PR_FindSymbol
cmp	[esi+5Ch], edi
jnz	short loc_100249E8
push	offset aC_getfunctionl 
push	ebx
call	ebp 
add	esp, 8
mov	edi, eax
cmp	dword ptr [esi+58h], 0
jz	short loc_100249FC
push	offset aNss_returnmodu 
push	ebx
call	ebp 
add	esp, 8
mov	[esi+4Ch], eax
cmp	dword ptr [esi+4Ch], 0
jnz	short loc_10024A09
mov	dword ptr [esi+58h], 0
test	edi, edi
jnz	short loc_10024A54
cmp	[esi+58h], edi
jz	short loc_10024A32
pop	ebp
mov	eax, 1
pop	ebx
mov	[esi+8], eax
mov	[esi+5Ch], eax
pop	edi
xor	eax, eax
pop	esi
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
mov	ecx, ebx
push	ecx
call	ds:PR_UnloadLibrary
add	esp, 4
pop	ebp
pop	ebx
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
			
lea	ebx, [esi+1Ch]
push	ebx
call	edi
mov	edi, ds:PR_GetEnv
add	esp, 4
test	eax, eax
jnz	loc_10024BE5
push	offset aNss_debug_pkcs 
call	edi 
add	esp, 4
mov	dword_100BACCC,	eax
test	eax, eax
jz	short loc_10024AB9
mov	ecx, eax
mov	eax, [esi+14h]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10024AA3
test	dl, dl
jz	short loc_10024A9F
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10024AA3
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10024A83
xor	eax, eax
jmp	short loc_10024AA8
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_10024AB9
mov	edx, [ebx]
push	edx
call	sub_10023DE0
add	esp, 4
mov	[ebx], eax
			
mov	ecx, [esp+6Ch+var_50]
lea	eax, [esp+6Ch+var_54]
push	eax
push	ecx
mov	ebp, 1
push	esi
mov	[esi+3Ch], ebp
call	sub_10024610
add	esp, 0Ch
test	eax, eax
jnz	loc_10024BE5
mov	eax, [ebx]
test	eax, eax
jz	loc_10024CC7
mov	eax, [eax+0Ah]
lea	edx, [esp+6Ch+var_4C]
push	edx
call	eax
add	esp, 4
test	eax, eax
jnz	loc_10024BC9
mov	ax, [esp+6Ch+var_4C]
cmp	al, 2
jnz	loc_10024BC9
cmp	ah, 1
jnb	short loc_10024B2C
cmp	dword_100BA4E0,	0
jnz	short loc_10024B25
push	0FFFFE097h
call	PORT_SetError_Util
jmp	loc_10024BC6
mov	dword ptr [esi+3Ch], 0
mov	[esi+6Ch], ax
mov	eax, [esi+14h]
test	eax, eax
jz	short loc_10024B3C
cmp	byte ptr [eax],	0
jnz	short loc_10024B57
mov	edx, [esi]
push	20h		
lea	ecx, [esp+70h+Src]
push	ecx		
push	0		
push	edx		
call	sub_10035BD0
add	esp, 10h
mov	[esi+14h], eax
test	eax, eax
jz	short loc_10024BC9
mov	eax, [ebx]
mov	edx, [eax+12h]
lea	ecx, [esp+6Ch+var_5C]
push	ecx
push	0
push	0
call	edx
add	esp, 0Ch
test	eax, eax
jnz	loc_10024CB8
mov	eax, [esp+6Ch+var_5C]
mov	edx, [esi]
lea	ecx, ds:0[eax*4]
push	ecx
push	edx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+28h], eax
test	eax, eax
jz	short loc_10024BC9
mov	eax, [esp+6Ch+var_5C]
lea	ecx, ds:0[eax*4]
push	ecx
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	short loc_10024BC9
mov	edx, [ebx]
mov	ecx, [edx+12h]
lea	eax, [esp+6Ch+var_5C]
push	eax
push	ebp
push	0
call	ecx
add	esp, 0Ch
test	eax, eax
jz	short loc_10024C21
push	ebp
call	PORT_Free_Util
add	esp, 4
			
cmp	dword_100BA4E4,	0
jnz	short loc_10024BD9
cmp	[esp+6Ch+var_54], 0
jnz	short loc_10024BE5
mov	edx, [ebx]
mov	eax, [edx+6]
push	0
call	eax
add	esp, 4
			
push	offset aNss_disable_un 
mov	dword ptr [ebx], 0
call	edi 
mov	ecx, [esp+70h+var_58]
add	esp, 4
test	ecx, ecx
jz	short loc_10024C0B
test	eax, eax
jnz	short loc_10024C0B
push	ecx
call	ds:PR_UnloadLibrary
add	esp, 4
			
pop	ebp
pop	ebx
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
mov	eax, [esp+6Ch+var_5C]
xor	edi, edi
test	eax, eax
jle	short loc_10024CA0
jmp	short loc_10024C30
align 10h
			
push	esi
call	sub_10035430
mov	ecx, [esi+28h]
mov	[ecx+edi*4], eax
mov	edx, [esi+28h]
mov	eax, [edx+edi*4]
mov	ecx, [ebp+edi*4+0]
push	eax
push	ecx
push	esi
call	sub_100371A0
mov	edx, [esi+34h]
mov	eax, [esi+30h]
mov	ecx, [esi+28h]
push	edx
mov	edx, [ecx+edi*4]
push	eax
push	edx
call	sub_10036B80
mov	eax, [esi+28h]
mov	ecx, [eax+edi*4]
push	esi
push	ecx
call	sub_100247D0
push	esi
call	sub_1002CD10
add	esp, 28h
test	eax, eax
jz	short loc_10024C97
xor	edx, edx
cmp	[esi+0Ch], edx
setz	dl
cmp	edi, edx
jnz	short loc_10024C97
mov	eax, [esi+28h]
mov	ecx, [eax+edi*4]
push	ecx
call	sub_10036320
add	esp, 4
			
mov	eax, [esp+6Ch+var_5C]
inc	edi
cmp	edi, eax
jl	short loc_10024C30
push	ebp
mov	[esi+2Ch], eax
mov	dword ptr [esi+34h], 0
call	PORT_Free_Util
add	esp, 4
mov	ebp, 1
mov	eax, dword_100BA4DC
mov	[esi+38h], eax
add	eax, ebp
mov	dword_100BA4DC,	eax
mov	ecx, [esp+6Ch+var_4]
mov	[esi+8], ebp
pop	ebp
pop	ebx
pop	edi
pop	esi
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+8], 0
jnz	short loc_10024CF0
or	eax, 0FFFFFFFFh
pop	esi
retn
cmp	dword_100BA4E8,	0
jz	short loc_10024D10
mov	eax, [esi+1Ch]
test	eax, eax
jz	short loc_10024D10
cmp	dword ptr [esi+5Ch], 0
jnz	short loc_10024D10
mov	eax, [eax+6]
push	0
call	eax
add	esp, 4
			
cmp	dword ptr [esi+4], 0
mov	dword ptr [esi+38h], 0
mov	dword ptr [esi+8], 0
jz	short loc_10024D9A
cmp	dword ptr [esi+10h], 0
jnz	short loc_10024D9A
push	offset dword_100BABA0
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	loc_10024DC1
cmp	dword_100BABA4,	eax
jz	short loc_10024D74
push	offset aNss_disable_un 
call	ds:PR_GetEnv
add	esp, 4
test	eax, eax
jnz	short loc_10024D6A
mov	ecx, dword_100BABA4
push	ecx
call	ds:PR_UnloadLibrary
add	esp, 4
mov	dword_100BABA4,	0
mov	eax, ds:dword_100A2F78
mov	edx, ds:dword_100A2F74
mov	ecx, ds:dword_100A2F7C
mov	dword_100BACC4,	eax
mov	dword_100BACC0,	edx
mov	dword_100BACC8,	ecx
xor	eax, eax
pop	esi
retn
			
mov	esi, [esi+18h]
test	esi, esi
jz	loc_10024CEB
push	offset aNss_disable_un 
call	ds:PR_GetEnv
add	esp, 4
test	eax, eax
jnz	short loc_10024DC1
push	esi
call	ds:PR_UnloadLibrary
add	esp, 4
			
xor	eax, eax
pop	esi
retn
align 10h
cmp	dword_100BACCC,	0
jz	short locret_10024DDE
jmp	sub_100240B0
retn
align 10h
			
mov	edx, dword_100BACE4
xor	eax, eax
push	edi
test	edx, edx
jle	short loc_10024E02
mov	edi, dword_100BACDC
lea	ecx, [edi+8]
cmp	[ecx], esi
jz	short loc_10024E09
inc	eax
add	ecx, 18h
cmp	eax, edx
jl	short loc_10024DF6
mov	eax, offset dword_100BA4F4
pop	edi
retn
lea	eax, [eax+eax*2]
lea	eax, [edi+eax*8]
pop	edi
retn
align 10h
public PK11_GetBestWrapMechanism
push	esi
xor	esi, esi
push	edi
cmp	dword_100BA548,	esi
jle	short loc_10024E4E
mov	edi, [esp+8+arg_0]
mov	eax, dword_100BA50C[esi*4]
push	eax
push	edi
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jnz	short loc_10024E54
inc	esi
cmp	esi, dword_100BA548
jl	short loc_10024E30
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, dword_100BA50C[esi*4]
pop	edi
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
cmp	eax, 26h	
ja	loc_10024EFF	
movzx	eax, ds:byte_10024F64[eax]
jmp	ds:off_10024F08[eax*4] 
			
mov	eax, 652h	
retn
			
mov	eax, 552h	
retn
			
mov	eax, 1082h	
retn
			
mov	eax, 122h	
retn
			
mov	eax, 131h	
retn
			
mov	eax, 130h	
retn
			
mov	eax, 142h	
retn
			
mov	eax, 102h	
retn
			
mov	eax, 111h	
retn
			
mov	eax, 332h	
retn
			
mov	eax, 1002h	
retn
			
mov	eax, 1033h	
retn
			
mov	eax, 1062h	
retn
			
mov	eax, 342h	
retn
			
mov	eax, 302h	
retn
			
mov	eax, 312h	
retn
			
mov	eax, 322h	
retn
			
mov	eax, 1		
retn
			
mov	eax, 11h	
retn
			
mov	eax, 21h	
retn
			
mov	eax, 1011h	
retn
			
mov	eax, 1041h	
retn
			
			
mov	eax, 221h	
retn
align 4
dd offset loc_10024EE7	
dd offset loc_10024EED
dd offset loc_10024EF9
dd offset loc_10024EF3
dd offset loc_10024EA5
dd offset loc_10024EAB
dd offset loc_10024E8D
dd offset loc_10024E99
dd offset loc_10024E93
dd offset loc_10024ECF
dd offset loc_10024ED5
dd offset loc_10024EDB
dd offset loc_10024EB1
dd offset loc_10024EC9
dd offset loc_10024EB7
dd offset loc_10024EBD
dd offset loc_10024EC3
dd offset loc_10024E9F
dd offset loc_10024E87
dd offset loc_10024E81
dd offset loc_10024E7B
dd offset loc_10024EFF
db    16h,     4,   16h,   16h 
db    16h,   16h,   16h,   16h
db    16h,   16h,   16h,   16h
db    16h,     5,     6,     7
db	8,     9,   0Ah,   0Bh
db    0Ch,   0Dh,   0Eh,   0Fh
db    10h,   11h,   12h,   13h
db    16h,   16h,   16h,   16h
db    16h,   14h,   15h
align 20h
public PK11_GetKeyType
			
mov	eax, [esp+arg_0]
cmp	eax, 305h
ja	loc_1002507B
cmp	eax, 300h
jnb	loc_100250CD	
cmp	eax, 131h
ja	short loc_10025018
jz	loc_100250B5	
cmp	eax, 46h
ja	short loc_10024FF5
jz	loc_100250DF	
			
cmp	eax, 42h	
ja	loc_10025172	
movzx	ecx, ds:byte_100251E0[eax]
jmp	ds:off_100251D0[ecx*4] 
			
mov	eax, 1		
retn
			
mov	eax, 2		
retn
lea	ecx, [eax-100h]	
cmp	ecx, 30h
ja	loc_10025172	
movzx	edx, ds:byte_10025238[ecx]
jmp	ds:off_10025224[edx*4] 
			
mov	eax, 12h	
retn
cmp	eax, 222h
ja	short loc_1002505E
cmp	eax, 221h
jnb	loc_100251BB	
			
			
lea	ecx, [eax-132h]	
cmp	ecx, 0E0h
ja	loc_10025172	
movzx	ecx, ds:byte_1002527C[ecx]
jmp	ds:off_1002526C[ecx*4] 
			
xor	eax, eax	
cmp	[esp+arg_4], 10h
setnz	al
add	eax, 14h
retn
			
mov	eax, 1Eh	
retn
lea	ecx, [eax-251h]	
cmp	ecx, 21h
ja	loc_10025172	
movzx	edx, ds:byte_10025368[ecx]
jmp	ds:off_10025360[edx*4] 
cmp	eax, 555h
ja	short loc_100250E8
cmp	eax, 550h
jnb	short loc_100250E2
lea	ecx, [eax-310h]	
cmp	ecx, 0F1h
ja	loc_10025172	
movzx	ecx, ds:byte_100253BC[ecx]
jmp	ds:off_1002538C[ecx*4] 
			
			
mov	eax, 13h	
			
retn
			
			
mov	eax, 14h	
			
retn
			
			
mov	eax, 15h	
retn
			
			
mov	eax, 11h	
			
retn
			
mov	eax, 19h	
retn
			
mov	eax, 1Ah	
retn
			
			
mov	eax, 16h	
retn
			
mov	eax, 17h	
retn
			
mov	eax, 18h	
retn
			
xor	eax, eax	
			
retn
mov	eax, 25h
retn
cmp	eax, 1009h
ja	short loc_10025110
cmp	eax, 1000h
jnb	short loc_1002510A
cmp	eax, 650h
jb	short loc_10025172 
cmp	eax, 655h
ja	short loc_10025172 
mov	eax, 26h
retn
mov	eax, 1Bh
retn
cmp	eax, 1065h
ja	short loc_1002514F
cmp	eax, 1060h
jnb	short loc_10025149
lea	ecx, [eax-1010h] 
cmp	ecx, 40h
ja	short loc_10025172 
movzx	edx, ds:byte_100254C0[ecx]
jmp	ds:off_100254B0[edx*4] 
			
mov	eax, 1Ch	
retn
			
mov	eax, 5		
retn
			
mov	eax, 3		
retn
mov	eax, 1Dh
retn
cmp	eax, 0CE534352h
ja	short loc_100251AD
cmp	eax, 0CE534351h
jnb	short loc_100251A7
cmp	eax, 1080h
jb	short loc_10025172 
cmp	eax, 1089h
jbe	short loc_100251A7
cmp	eax, 80000373h
jz	short loc_100251BB 
			
			
			
push	esi		
mov	esi, dword_100BACE4
xor	ecx, ecx
push	edi
test	esi, esi
jle	short loc_1002519C
mov	edi, dword_100BACDC
lea	edx, [edi+8]
lea	esp, [esp+0]
cmp	[edx], eax
jz	short loc_100251C1
inc	ecx
add	edx, 18h
cmp	ecx, esi
jl	short loc_10025190
mov	eax, offset dword_100BA4F4
mov	eax, [eax+4]
pop	edi
pop	esi
retn
			
mov	eax, 1Fh
retn
cmp	eax, 0CE534365h
jb	short loc_10025172 
cmp	eax, 0CE534368h
ja	short loc_10025172 
			
mov	eax, 10h	
			
			
retn
lea	eax, [ecx+ecx*2]
lea	eax, [edi+eax*8]
mov	eax, [eax+4]
pop	edi
pop	esi
retn
align 10h
			
dd offset loc_10025172	
db	0,     0,     0,     3 
db	3,     3,     0,     3
db	3,     3,     3,     3
db	1,     1,     1,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	2,     2,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	0,     0,     0
align 4
dd offset loc_10025012	
dd offset loc_100250A9
dd offset loc_100250AF
dd offset loc_10025172
db	0,     0,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	1,     1,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     2,     2,     2
db	2,     2,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	3
align 4
			
dd offset loc_10025172	
			
db 1, 1, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3	
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 2, 2, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	2, 2
align 10h
dd offset loc_10025172	
db	1,     0,     0,     1 
db	1,     1,     1,     1
db	1,     1,     1,     1
db	0,     0,     1,     1
db	1,     1,     1,     1
db	1,     1,     1,     1
db	1,     1,     1,     1
db	0,     0
align 4
			
dd offset loc_100250C7,	offset loc_100251BB, offset loc_100250A9 
dd offset loc_100250CD,	offset loc_100250B5, offset loc_100250AF
dd offset loc_100250BB,	offset loc_100250DF, offset loc_10025172
			
db 0Bh,	0Bh, 0Bh, 1, 1,	1, 1, 1, 1, 0Bh, 0Bh, 0Bh, 0Bh 
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 2, 2, 2, 2, 2,	2, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	3, 3, 3
db 3, 3, 3, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh
db 0Bh,	4, 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 4, 4, 4, 4, 0Bh, 4, 4, 4, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh
db 0Bh,	0Bh, 4,	4, 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 5, 5, 6, 0, 1, 0Bh, 0Bh, 0Bh, 7, 8, 9, 9, 0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
db 0Bh,	0Bh, 0Bh, 0Bh, 0Bh, 5, 0Ah
align 10h
			
dd offset loc_10025172	
db	3,     3,     3,     3 
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	1,     1,     1,     1
db	1,     1,     1,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	2,     2,     2,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	2
align 10h
			
mov	eax, [esp+arg_0]
cmp	eax, 305h
ja	loc_10025607
cmp	eax, 300h
jnb	loc_10025601
cmp	eax, 131h
ja	short loc_1002559C
jz	short loc_10025596
cmp	eax, 46h
ja	short loc_10025567
jz	loc_10025653	
			
cmp	eax, 42h	
ja	loc_100256F8	
movzx	ecx, ds:byte_1002574C[eax]
jmp	ds:off_10025738[ecx*4] 
			
mov	eax, 0Ah	
retn
			
mov	eax, 10h	
retn
			
mov	eax, 20h	
retn
lea	ecx, [eax-100h]	
cmp	ecx, 30h
ja	loc_100256F8	
movzx	edx, ds:byte_100257A4[ecx]
jmp	ds:off_10025790[edx*4] 
			
mov	eax, 130h	
retn
			
mov	eax, 100h	
retn
			
mov	eax, 110h	
retn
mov	eax, 131h
retn
cmp	eax, 222h
ja	short loc_100255E4
cmp	eax, 221h
jnb	loc_100256EB	
			
			
lea	ecx, [eax-132h]	
cmp	ecx, 0E0h
ja	loc_100256F8	
movzx	ecx, ds:byte_100257E8[ecx]
jmp	ds:off_100257D8[ecx*4] 
			
xor	eax, eax	
cmp	[esp+arg_4], 10h
setnz	al
add	eax, 130h
retn
			
mov	eax, 140h	
retn
lea	ecx, [eax-251h]	
cmp	ecx, 21h
ja	loc_100256F8	
movzx	edx, ds:byte_100258D4[ecx]
jmp	ds:off_100258CC[edx*4] 
mov	eax, 300h
retn
cmp	eax, 555h
ja	short loc_1002565C
cmp	eax, 550h
jnb	short loc_10025656
lea	ecx, [eax-310h]	
cmp	ecx, 0F1h
ja	loc_100256F8	
movzx	ecx, ds:byte_10025920[ecx]
jmp	ds:off_100258F8[ecx*4] 
			
			
mov	eax, 120h	
			
retn
			
mov	eax, 330h	
retn
			
mov	eax, 340h	
retn
			
mov	eax, 310h	
retn
			
mov	eax, 320h	
retn
			
xor	eax, eax	
			
retn
mov	eax, 550h
retn
cmp	eax, 1008h
ja	short loc_10025688
cmp	eax, 1000h
jnb	short loc_10025682
cmp	eax, 650h
jb	loc_100256F8	
cmp	eax, 655h
ja	short loc_100256F8 
mov	eax, 650h
retn
mov	eax, 1000h
retn
cmp	eax, 1089h
ja	short loc_100256CD
cmp	eax, 1080h
jnb	short loc_100256C7
lea	ecx, [eax-1010h] 
cmp	ecx, 55h
ja	short loc_100256F8 
movzx	edx, ds:byte_10025A28[ecx]
jmp	ds:off_10025A14[edx*4] 
			
mov	eax, 1030h	
retn
			
mov	eax, 1060h	
retn
			
mov	eax, 1010h	
retn
			
mov	eax, 1040h	
retn
mov	eax, 1080h
retn
cmp	eax, 0CE534365h
ja	short loc_100256F1
jz	short loc_100256EB 
			
			
cmp	eax, 80000002h
jb	short loc_100256F8 
cmp	eax, 8000000Bh
jbe	short locret_10025736 
cmp	eax, 80000373h
jnz	short loc_100256F8 
			
mov	eax, 350h	
			
			
retn
cmp	eax, 0CE534367h
jz	short loc_10025731 
			
push	esi		
mov	esi, dword_100BACE4
xor	ecx, ecx
push	edi
test	esi, esi
jle	short loc_1002571C
mov	edi, dword_100BACDC
lea	edx, [edi+8]
nop
cmp	[edx], eax
jz	short loc_10025726
inc	ecx
add	edx, 18h
cmp	ecx, esi
jl	short loc_10025710
mov	eax, offset dword_100BA4F4
mov	eax, [eax]
pop	edi
pop	esi
retn
lea	eax, [ecx+ecx*2]
lea	eax, [edi+eax*8]
mov	eax, [eax]
pop	edi
pop	esi
retn
			
			
mov	eax, 370h	
			
			
retn			
align 4
			
dd offset loc_10025561,	offset loc_100256F8 
db	0,     0,     0,     4 
db	4,     4,     1,     4
db	4,     4,     4,     4
db	2,     2,     2,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	3,     3,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	0,     0,     0
align 10h
dd offset loc_10025590	
dd offset loc_10025635
dd offset loc_10025584
dd offset loc_100256F8
db	0,     0,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	1,     1,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     2,     2,     2
db	2,     2,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	3
align 4
			
dd offset loc_100256F8	
			
db 1, 1, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3	
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	3, 3, 2, 2, 3, 3, 3, 3,	3, 3, 3
db 3, 3, 3, 3, 3, 3, 3,	2, 2
align 4
dd offset loc_100256F8	
db	1,     0,     0,     1 
db	1,     1,     1,     1
db	1,     1,     1,     1
db	0,     0,     1,     1
db	1,     1,     1,     1
db	1,     1,     1,     1
db	1,     1,     1,     1
db	0,     0
align 4
			
dd offset loc_10025641,	offset loc_100256EB, offset loc_10025731 
dd offset locret_10025736, offset loc_10025635,	offset loc_10025653
dd offset loc_100256F8
			
db 1, 1, 1, 1, 9, 9, 9,	9, 9, 9, 9, 9, 9, 9, 2,	2, 2, 2	
db 2, 2, 9, 9, 9, 9, 9,	9, 9, 9, 9, 9, 3, 3, 3,	3, 3, 3
db 9, 9, 9, 9, 9, 9, 9,	9, 9, 9, 4, 9, 9, 9, 9,	9, 9, 9
db 9, 9, 9, 9, 9, 9, 9,	9, 9, 9, 9, 9, 9, 9, 9,	9, 9, 9
db 9, 9, 9, 9, 9, 9, 5,	5, 5, 9, 9, 5, 5, 9, 9,	9, 9, 9
db 9, 9, 9, 9, 5, 5, 9,	9, 9, 9, 9, 9, 9, 9, 9,	9, 9, 9
db 9, 9, 9, 9, 9, 9, 9,	9, 9, 9, 9, 9, 9, 9, 9,	9, 9, 9
db 6, 6, 9, 9, 9, 9, 6,	6, 6, 6, 6, 6, 9, 9, 9,	9, 6, 9
db 9, 9, 9, 9, 9, 9, 9,	9, 9, 9, 9, 9, 9, 9, 6,	9, 9, 9
db 9, 9, 9, 9, 9, 9, 9,	9, 9, 9, 9, 9, 9, 9, 9,	9, 9, 9
db 9, 9, 9, 9, 9, 9, 9,	9, 9, 9, 9, 9, 9, 9, 9,	9, 9, 9
db 9, 9, 9, 9, 9, 9, 9,	9, 9, 9, 9, 9, 9, 9, 9,	9, 9, 9
db 9, 9, 9, 9, 9, 9, 7,	8
align 4
			
dd offset loc_100256B5,	offset loc_100256F8 
db	4,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	1,     1,     1,     1
db	1,     1,     1,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     2,     2,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	3,     3,     3,     3
db	3,     3
align 10h
public PK11_GetBlockSize
			
mov	eax, [esp+arg_0]
cmp	eax, 302h
ja	loc_10025B0F
cmp	eax, 301h
jnb	loc_10025BE5	
			
cmp	eax, 122h
ja	short loc_10025AF2
cmp	eax, 121h
jnb	loc_10025BE5	
			
cmp	eax, 105h
ja	short loc_10025AE4
jz	loc_10025BE5	
			
cmp	eax, 102h
ja	loc_10025BF2	
cmp	eax, 101h
jnb	loc_10025BE5	
			
test	eax, eax
jz	loc_10025BF2	
cmp	eax, 3
ja	loc_10025BF2	
or	eax, 0FFFFFFFFh
retn
cmp	eax, 111h
jnz	loc_10025BF2	
			
			
xor	eax, eax	
retn
lea	ecx, [eax-125h]	
cmp	ecx, 11h
ja	loc_10025BF2	
movzx	ecx, ds:byte_10025C3C[ecx]
jmp	ds:off_10025C34[ecx*4] 
cmp	eax, 552h
ja	short loc_10025B59
cmp	eax, 551h
jnb	short loc_10025B7C 
lea	ecx, [eax-305h]	
cmp	ecx, 0A6h
ja	loc_10025BF2	
movzx	edx, ds:byte_10025C60[ecx]
jmp	ds:off_10025C50[edx*4] 
			
mov	eax, [esp+arg_4] 
test	eax, eax
jz	loc_10025BE5	
			
mov	eax, [eax+4]
test	eax, eax
jz	loc_10025BE5	
			
mov	eax, [eax]
add	eax, eax
retn
cmp	eax, 1004h
ja	short loc_10025B8B
cmp	eax, 1001h
jnb	short loc_10025BE5 
			
cmp	eax, 652h
ja	short loc_10025B82
cmp	eax, 651h
jnb	short loc_10025B7C 
cmp	eax, 555h
jnz	short loc_10025BF2 
			
mov	eax, 10h	
retn
cmp	eax, 655h
jz	short loc_10025B7C 
jmp	short loc_10025BF2 
cmp	eax, 1082h
ja	short loc_10025BBE
cmp	eax, 1081h
jnb	short loc_10025B7C 
lea	ecx, [eax-1005h] 
cmp	ecx, 5Fh
ja	short loc_10025BF2 
movzx	ecx, ds:byte_10025D18[ecx]
jmp	ds:off_10025D08[ecx*4] 
			
mov	eax, 4		
retn
			
mov	eax, 0Ch	
retn
cmp	eax, 80000007h
ja	short loc_10025BEB
cmp	eax, 80000006h
jnb	loc_10025AEF	
cmp	eax, 1085h
jz	short loc_10025B7C 
cmp	eax, 80000001h
jbe	short loc_10025BF2 
cmp	eax, 80000005h
ja	short loc_10025BF2 
			
mov	eax, 8		
			
retn
cmp	eax, 80000008h
jz	short loc_10025BE5 
			
			
push	esi		
mov	esi, dword_100BACE4
xor	ecx, ecx
push	edi
test	esi, esi
jle	short loc_10025C1C
mov	edi, dword_100BACDC
lea	edx, [edi+8]
lea	esp, [esp+0]
cmp	[edx], eax
jz	short loc_10025C27
inc	ecx
add	edx, 18h
cmp	ecx, esi
jl	short loc_10025C10
mov	eax, offset dword_100BA4F4
mov	eax, [eax+10h]
pop	edi
pop	esi
retn
lea	edx, [ecx+ecx*2]
lea	eax, [edi+edx*8]
mov	eax, [eax+10h]
pop	edi
pop	esi
retn
align 4
dd offset loc_10025BF2	
db	1,     1,     1,     1 
db	1,     1,     1,     1
db	1,     0,     0,     1
db	1,     0
align 10h
			
dd offset loc_10025BF2	
db	3,     3,     3,     3 
db	3,     3,     3,     3
db	0,     0,     3,     3
db	0,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	0,     0,     3,     3
db	0,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	1,     1,     3,     3
db	1,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	0,     0,     3,     3
db	0,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     0
db	0,     3,     3,     3
db	3,     2,     2,     0
db	0,     0,     0
align 4
			
dd offset loc_10025BF2	
db	3,     3,     3,     3 
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	1,     2,     1,     1
db	1,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	1,     1,     1,     1
align 10h
public PK11_GetIVLength
			
mov	eax, [esp+arg_0]
cmp	eax, 301h
ja	short loc_10025DC7
jz	short loc_10025DA7 
			
			
cmp	eax, 101h
ja	short loc_10025DAA
jz	short loc_10025DA7 
			
			
test	eax, eax
jz	loc_10025E89	
cmp	eax, 3
ja	loc_10025E89	
			
xor	eax, eax	
			
			
retn
lea	ecx, [eax-102h]	
cmp	ecx, 34h
ja	loc_10025E89	
movzx	ecx, ds:byte_10025ED0[ecx]
jmp	ds:off_10025EC4[ecx*4] 
cmp	eax, 551h
ja	short loc_10025DF0
jz	short loc_10025DA7 
			
			
lea	ecx, [eax-302h]	
cmp	ecx, 0A9h
ja	loc_10025E89	
movzx	edx, ds:byte_10025F14[ecx]
jmp	ds:off_10025F08[edx*4] 
cmp	eax, 1007h
ja	short loc_10025E2D
cmp	eax, 1001h
jnb	short loc_10025E4F 
cmp	eax, 651h
ja	short loc_10025E1C
jz	short loc_10025DA7 
			
			
mov	ecx, eax
sub	ecx, 552h
jz	short loc_10025E16
sub	ecx, 3
jnz	short loc_10025E89 
			
mov	eax, 10h
retn
mov	ecx, eax
sub	ecx, 652h
jz	short loc_10025E16
sub	ecx, 3
jz	short loc_10025E16
jmp	short loc_10025E89 
cmp	eax, 1082h
ja	short loc_10025E55
jz	short loc_10025E16
lea	ecx, [eax-1008h] 
cmp	ecx, 79h
ja	short loc_10025E89 
movzx	ecx, ds:byte_10025FCC[ecx]
jmp	ds:off_10025FC0[ecx*4] 
			
			
mov	eax, 18h	
retn
cmp	eax, 80000007h
ja	short loc_10025E82
cmp	eax, 80000006h
jnb	loc_10025DA7	
			
			
cmp	eax, 1085h
jz	short loc_10025E16
cmp	eax, 80000001h
jbe	short loc_10025E89 
cmp	eax, 80000005h
ja	short loc_10025E89 
			
mov	eax, 8		
			
retn
cmp	eax, 80000008h
jz	short loc_10025E7C 
			
			
push	esi		
mov	esi, dword_100BACE4
xor	ecx, ecx
push	edi
test	esi, esi
jle	short loc_10025EAC
mov	edi, dword_100BACDC
lea	edx, [edi+8]
cmp	[edx], eax
jz	short loc_10025EB7
inc	ecx
add	edx, 18h
cmp	ecx, esi
jl	short loc_10025EA0
mov	eax, offset dword_100BA4F4
mov	eax, [eax+14h]
pop	edi
pop	esi
retn
lea	edx, [ecx+ecx*2]
lea	eax, [edi+edx*8]
mov	eax, [eax+14h]
pop	edi
pop	esi
retn
align 4
			
			
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     1
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     1
db	0,     2,     2,     0
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	1,     0,     2,     2
db	0
align 4
			
			
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     1
db	0,     2,     2,     0
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     1
db	0,     2,     2,     0
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     1
db	0,     2,     2,     0
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     1
db	0,     2,     2,     0
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     0,     0
db	2,     2,     2,     2
db	1,     1,     0,     0
db	0,     0
align 10h
			
			
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     1,     1,     1
db	1,     1,     0,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     1,     1,     1
db	1,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     0
align 10h
			
push	ebx
push	ebp
push	0Ch
call	PORT_Alloc_Util
mov	ebx, eax
xor	ebp, ebp
add	esp, 4
cmp	ebx, ebp
jnz	short loc_10026069
pop	ebp
xor	eax, eax
pop	ebx
retn
push	esi
mov	esi, [esp+0Ch+arg_0]
push	edi
mov	[ebx+4], ebp
mov	[ebx+8], ebp
mov	[ebx], ebp
cmp	esi, 301h
ja	loc_10026198
jz	short loc_100260DD 
			
			
cmp	esi, 101h
ja	loc_1002612B
jz	short loc_100260E4
cmp	esi, ebp
jbe	short loc_1002609C 
cmp	esi, 3
jbe	short loc_100260DD 
			
			
			
call	sub_10024DE0	
cmp	[eax+14h], ebp
jz	short loc_100260DD 
			
			
mov	esi, [esp+10h+arg_4]
cmp	esi, ebp
jz	short loc_100260DD 
			
			
cmp	[esi+4], ebp
jz	short loc_100260DD 
			
			
mov	ecx, [esi+8]
push	ecx
call	PORT_Alloc_Util
add	esp, 4
mov	[ebx+4], eax
cmp	eax, ebp
jz	short loc_100260DD 
			
			
mov	edx, [esi+8]
mov	ecx, [esi+4]
push	edx		
push	ecx		
push	eax		
call	memcpy
mov	edx, [esi+8]
mov	[ebx+8], edx
add	esp, 0Ch
			
pop	edi		
			
			
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
push	4
call	PORT_Alloc_Util
add	esp, 4
cmp	eax, ebp
jz	short loc_100260DD 
			
			
mov	ecx, [esp+10h+arg_8]
cmp	ecx, ebp
jz	short loc_10026113
add	ecx, ecx
pop	edi
add	ecx, ecx
add	ecx, ecx
mov	[eax], ecx
pop	esi
mov	[ebx+4], eax
pop	ebp
mov	dword ptr [ebx+8], 4
mov	eax, ebx
pop	ebx
retn
pop	edi
mov	ecx, 80h
mov	[eax], ecx
pop	esi
mov	[ebx+4], eax
pop	ebp
mov	dword ptr [ebx+8], 4
mov	eax, ebx
pop	ebx
retn
lea	eax, [esi-102h]	
cmp	eax, 43h
ja	loc_1002609C	
movzx	eax, ds:byte_1002636C[eax]
jmp	ds:off_1002635C[eax*4] 
			
push	0Ch		
call	PORT_Alloc_Util
add	esp, 4
cmp	eax, ebp
jz	short loc_100260DD 
			
			
mov	ecx, [esp+10h+arg_8]
cmp	ecx, ebp
jz	short loc_10026166
add	ecx, ecx
add	ecx, ecx
add	ecx, ecx
jmp	short loc_1002616B
mov	ecx, 80h
mov	[eax], ecx
mov	ecx, [esp+10h+arg_4]
cmp	ecx, ebp
jz	short loc_10026187
mov	ecx, [ecx+4]
cmp	ecx, ebp
jz	short loc_10026187
mov	edx, [ecx]
mov	[eax+4], edx
mov	ecx, [ecx+4]
mov	[eax+8], ecx
			
pop	edi
pop	esi
mov	[ebx+4], eax
pop	ebp
mov	dword ptr [ebx+8], 0Ch
mov	eax, ebx
pop	ebx
retn
cmp	esi, 551h
ja	loc_1002629E
jz	loc_100260DD	
			
			
lea	eax, [esi-302h]	
cmp	eax, 43h
ja	loc_1002609C	
movzx	edx, ds:byte_100263C4[eax]
jmp	ds:off_100263B0[edx*4] 
			
mov	edi, [esp+10h+arg_4] 
cmp	edi, ebp
jz	short loc_100261D4
mov	eax, [edi+8]
jmp	short loc_100261D6
xor	eax, eax
add	eax, 10h
push	eax
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebp
jz	loc_100260DD	
			
			
cmp	edi, ebp
jz	short loc_10026233
cmp	[edi+4], ebp
jz	short loc_10026233
cmp	[edi+8], ebp
jz	short loc_10026233
lea	eax, [esi+10h]
mov	[esi+8], eax
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ecx		
push	edx		
push	eax		
call	memcpy
mov	eax, [edi+8]
mov	[esi+0Ch], eax
mov	ecx, [edi+8]
add	esp, 0Ch
mov	eax, 10h
mov	[esi+4], eax
shr	ecx, 1
mov	[esi], ecx
pop	edi
mov	[ebx+4], esi
pop	esi
mov	[ebx+8], eax
pop	ebp
mov	eax, ebx
pop	ebx
retn
			
mov	eax, 10h
mov	[esi+8], ebp
mov	[esi+0Ch], ebp
mov	[esi+4], eax
mov	dword ptr [esi], 4
pop	edi
mov	[ebx+4], esi
pop	esi
mov	[ebx+8], eax
pop	ebp
mov	eax, ebx
pop	ebx
retn
			
push	8		
call	PORT_Alloc_Util
add	esp, 4
cmp	eax, ebp
jz	loc_100260DD	
			
			
mov	ecx, [esp+10h+arg_4]
cmp	ecx, ebp
jz	short loc_10026280
cmp	[ecx+4], ebp
jz	short loc_10026280
mov	ecx, [ecx+8]
cmp	ecx, ebp
jz	short loc_10026280
shr	ecx, 1
mov	[eax], ecx
jmp	short loc_10026286
			
mov	dword ptr [eax], 4
pop	edi
mov	dword ptr [eax+4], 10h
pop	esi
mov	[ebx+4], eax
pop	ebp
mov	dword ptr [ebx+8], 8
mov	eax, ebx
pop	ebx
retn
cmp	esi, 1035h
ja	loc_1002633D
cmp	esi, 1031h
jnb	short loc_100262D2 
			
			
cmp	esi, 651h
ja	short loc_1002631C
jz	loc_100260DD	
			
			
mov	eax, esi
sub	eax, 552h
jz	short loc_100262D2 
			
			
sub	eax, 3
jnz	loc_1002609C	
			
mov	esi, [esp+10h+arg_4] 
			
			
cmp	esi, ebp
jz	loc_100260DD	
			
			
cmp	[esi+4], ebp
jz	loc_100260DD	
			
			
mov	eax, [esi+8]
push	eax
call	PORT_Alloc_Util
add	esp, 4
mov	[ebx+4], eax
cmp	eax, ebp
jz	loc_100260DD	
			
			
mov	ecx, [esi+8]
mov	edx, [esi+4]
push	ecx		
push	edx		
push	eax		
call	memcpy
mov	eax, [esi+8]
add	esp, 0Ch
pop	edi
pop	esi
mov	[ebx+8], eax
pop	ebp
mov	eax, ebx
pop	ebx
retn
cmp	esi, 652h
jz	short loc_100262D2 
			
			
cmp	esi, 1000h
jbe	loc_1002609C	
cmp	esi, 1007h
jbe	short loc_100262D2 
			
			
jmp	loc_1002609C	
lea	eax, [esi-1061h] 
cmp	eax, 24h
ja	loc_1002609C	
movzx	edx, ds:byte_10026414[eax]
jmp	ds:off_10026408[edx*4] 
align 4
			
dd offset loc_1002609C	
db	3,     3,     3,     3 
db	3,     3,     3,     3
db	3,     3,     3,     1
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     1
db	2,     3,     3,     2
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	1,     2,     3,     3
db	2,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     1
db	2,     3,     3,     2
			
dd offset loc_100261C7,	offset loc_1002609C 
db	4,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     1
db	0,     4,     4,     0
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     1
db	0,     4,     4,     0
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     2
db	3,     4,     4,     3
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     1
db	0,     4,     4,     0
dd offset loc_100260DD	
dd offset loc_1002609C
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	1,     0,     2,     2
db	0
align 10h
public PK11_ParamFromIV
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	0
push	eax
push	ecx
call	sub_10026050
add	esp, 0Ch
retn
align 10h
public PK11_IVFromParam
			
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_8]
mov	dword ptr [ecx], 0
cmp	eax, 301h
ja	short loc_100264C5
jz	short loc_10026499 
cmp	eax, 111h
ja	short loc_100264B4
jz	short loc_10026499 
cmp	eax, 102h
ja	short loc_1002649C
jz	short loc_100264A3
test	eax, eax
jz	short loc_1002650B 
cmp	eax, 3
jbe	short loc_10026499 
cmp	eax, 101h
jnz	short loc_1002650B 
			
xor	eax, eax	
retn
cmp	eax, 105h
jnz	short loc_1002650B 
mov	eax, [esp+arg_4]
mov	eax, [eax+4]
mov	dword ptr [ecx], 8
add	eax, 4
retn
sub	eax, 121h
jz	short loc_10026499 
sub	eax, 11h
jz	short loc_10026499 
sub	eax, 0Fh
jmp	short loc_10026509
cmp	eax, 341h
ja	short loc_100264F6
jz	short loc_10026499 
add	eax, 0FFFFFCEFh	
cmp	eax, 24h
ja	short loc_1002650B 
movzx	edx, ds:byte_1002652C[eax]
jmp	ds:off_10026520[edx*4] 
			
mov	eax, [esp+arg_4] 
mov	eax, [eax+4]
mov	edx, [eax+0Ch]
mov	[ecx], edx
mov	eax, [eax+8]
retn
cmp	eax, 551h
jz	short loc_10026499 
cmp	eax, 651h
jz	short loc_10026499 
cmp	eax, 1081h
jz	short loc_10026499 
			
mov	eax, [esp+arg_4] 
cmp	dword ptr [eax+4], 0
jz	short loc_1002651A
mov	edx, [eax+8]
mov	[ecx], edx
mov	eax, [eax+4]
retn
align 10h
dd offset loc_100264E6	
dd offset loc_1002650B
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     2
db	0,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     1,     2,     2
db	1
align 10h
			
push	eax
call	DER_GetInteger_Util
add	esp, 4
sub	eax, 3Ah
jz	short loc_1002657E
sub	eax, 3Eh
jz	short loc_1002657B
sub	eax, 28h
jnz	short loc_1002657E
mov	al, 28h
retn
mov	al, 40h
retn
			
mov	al, 80h
retn
align 10h
			
push	edi
push	eax
call	PK11_GetIVLength
xor	edi, edi
add	esp, 4
mov	[esi+8], eax
cmp	eax, edi
jnz	short loc_100265AA
mov	[esi+4], edi
xor	eax, eax
pop	edi
retn
push	eax
call	PORT_Alloc_Util
add	esp, 4
mov	[esi+4], eax
cmp	eax, edi
jz	short loc_100265DA
mov	ecx, [esi+8]
push	ecx
push	eax
call	PK11_GenerateRandom
add	esp, 8
test	eax, eax
jz	short loc_100265A6
mov	edx, [esi+4]
push	edx
call	PORT_Free_Util
add	esp, 4
mov	[esi+4], edi
mov	[esi+8], edi
or	eax, 0FFFFFFFFh
pop	edi
retn
align 10h
			
sub	esp, 0Ch
push	ebx
push	ebp
push	0Ch
call	PORT_Alloc_Util
mov	ebx, eax
xor	ebp, ebp
add	esp, 4
cmp	ebx, ebp
jnz	short loc_1002660F
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
push	esi
push	edi
mov	edi, [esp+1Ch+arg_0]
mov	[ebx], ebp
cmp	edi, 301h
ja	loc_10026705
jz	loc_10026805	
			
			
lea	eax, [edi-101h]	
cmp	eax, 44h
ja	loc_1002679D	
movzx	eax, ds:byte_1002684C[eax]
jmp	ds:off_10026838[eax*4] 
			
push	4		
call	PORT_Alloc_Util
add	esp, 4
cmp	eax, ebp
jz	short loc_100266A9
mov	ecx, [esp+1Ch+arg_4]
cmp	ecx, ebp
jz	short loc_10026664
add	ecx, ecx
add	ecx, ecx
add	ecx, ecx
jmp	short loc_10026669
mov	ecx, 80h
pop	edi
mov	[eax], ecx
pop	esi
mov	[ebx+4], eax
pop	ebp
mov	dword ptr [ebx+8], 4
mov	eax, ebx
pop	ebx
add	esp, 0Ch
retn
			
lea	esi, [esp+1Ch+var_C] 
mov	eax, edi
call	sub_10026590
cmp	eax, ebp
jnz	short loc_100266A9
push	0Ch
call	PORT_Alloc_Util
add	esp, 4
cmp	eax, ebp
jnz	short loc_100266BE
mov	ecx, [esp+1Ch+Src]
push	ecx
call	PORT_Free_Util
add	esp, 4
			
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
mov	ecx, [esp+1Ch+arg_4]
cmp	ecx, ebp
jz	short loc_100266CE
add	ecx, ecx
add	ecx, ecx
add	ecx, ecx
jmp	short loc_100266D3
mov	ecx, 80h
mov	[eax], ecx
mov	ecx, [esp+1Ch+Src]
cmp	ecx, ebp
jz	short loc_100266E8
mov	edx, [ecx]
mov	[eax+4], edx
mov	edx, [ecx+4]
mov	[eax+8], edx
push	ecx
mov	[ebx+4], eax
mov	dword ptr [ebx+8], 0Ch
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
add	esp, 0Ch
retn
cmp	edi, 551h
ja	short loc_10026773
jz	loc_10026805	
			
			
lea	eax, [edi-302h]	
cmp	eax, 43h
ja	short loc_1002679D 
movzx	eax, ds:byte_100268A8[eax]
jmp	ds:off_10026894[eax*4] 
			
push	ebx		
call	PORT_Free_Util
push	ebp
push	ebp
push	edi
call	sub_10026050
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
			
lea	esi, [esp+1Ch+var_C] 
mov	eax, edi
call	sub_10026590
cmp	eax, ebp
jnz	loc_100266A9
push	ebx
call	PORT_Free_Util
push	ebp
mov	ecx, esi
push	ecx
push	edi
call	sub_10026050
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
cmp	edi, 1035h
ja	short loc_100267EC
cmp	edi, 1031h
jnb	short loc_100267A9 
			
			
cmp	edi, 652h
ja	short loc_100267DA
jz	short loc_100267A9 
			
			
cmp	edi, 552h
jz	short loc_100267A9 
			
			
cmp	edi, 651h
jz	short loc_10026805 
			
			
			
mov	esi, edi	
call	sub_10024DE0
cmp	[eax+14h], ebp
jz	short loc_10026805 
			
			
			
lea	esi, [esp+1Ch+var_C] 
			
			
mov	eax, edi
call	sub_10026590
cmp	eax, ebp
jnz	loc_100266A9
mov	esi, [esp+1Ch+Size]
push	esi
call	PORT_Alloc_Util
add	esp, 4
mov	[ebx+4], eax
cmp	eax, ebp
jnz	short loc_10026815
mov	eax, [esp+1Ch+Src]
push	eax
jmp	loc_100266A1
cmp	edi, 1001h
jb	short loc_1002679D 
cmp	edi, 1007h
jbe	short loc_100267A9 
			
			
jmp	short loc_1002679D 
lea	eax, [edi-1061h] 
cmp	eax, 21h
ja	short loc_1002679D 
movzx	edx, ds:byte_100268F8[eax]
jmp	ds:off_100268EC[edx*4] 
			
pop	edi		
			
			
pop	esi
mov	[ebx+4], ebp
mov	[ebx+8], ebp
pop	ebp
mov	eax, ebx
pop	ebx
add	esp, 0Ch
retn
mov	edi, [esp+1Ch+Src]
push	esi		
push	edi		
push	eax		
call	memcpy
push	edi
mov	[ebx+8], esi
call	PORT_Free_Util
add	esp, 10h
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
add	esp, 0Ch
retn
align 4
			
dd offset loc_100267A9,	offset loc_1002679D 
db	1,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     3,     4,     4
db	3,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     2,     3,     4
db	4,     3,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     3,     4,     4
db	3
align 4
			
dd offset loc_10026745,	offset loc_1002679D 
db	4,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     1
db	0,     4,     4,     0
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     1
db	0,     4,     4,     0
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     2
db	3,     4,     4,     3
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     1
db	0,     4,     4,     0
dd offset loc_10026805	
dd offset loc_1002679D
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	1,     0
align 10h
public PK11_GenerateNewParam
			
			
mov	eax, [esp+arg_4]
test	eax, eax
jz	short loc_1002693A
push	eax
call	PK11_GetKeyLength
add	esp, 4
mov	[esp+arg_4], eax
jmp	sub_100265F0
xor	eax, eax
mov	[esp+arg_4], eax
jmp	sub_100265F0
align 10h
public PK11_AlgtagToMechanism
			
mov	eax, [esp+arg_0]
push	eax
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jz	short loc_10026965
mov	eax, [eax+14h]
retn
or	eax, 0FFFFFFFFh
retn
align 10h
public PK11_MechanismToAlgtag
mov	eax, [esp+arg_0]
push	eax
call	SECOID_FindOIDByMechanism
add	esp, 4
test	eax, eax
jz	short loc_10026985
mov	eax, [eax+0Ch]
retn
xor	eax, eax
retn
align 10h
public PK11_GetPadMechanism
			
			
mov	eax, [esp+arg_0]
cmp	eax, 322h
ja	short loc_100269F3
jz	short loc_100269ED
cmp	eax, 142h
ja	short loc_100269D2
jz	short loc_100269CC
mov	ecx, eax
sub	ecx, 102h
jz	short loc_100269C6
sub	ecx, 20h
jz	short loc_100269C0
sub	ecx, 11h
jnz	short locret_10026A36
mov	eax, 136h
retn
mov	eax, 125h
retn
mov	eax, 105h
retn
mov	eax, 145h
retn
mov	ecx, eax
sub	ecx, 302h
jz	short loc_100269E7
sub	ecx, 10h
jnz	short locret_10026A36
mov	eax, 315h
retn
mov	eax, 305h
retn
mov	eax, 325h
retn
cmp	eax, 552h
ja	short loc_10026A1D
jz	short loc_10026A17
mov	ecx, eax
sub	ecx, 332h
jz	short loc_10026A11
sub	ecx, 10h
jnz	short locret_10026A36
mov	eax, 345h
retn
mov	eax, 335h
retn
mov	eax, 555h
retn
cmp	eax, 652h
jz	short loc_10026A31
cmp	eax, 1082h
jnz	short locret_10026A36
mov	eax, 1085h
retn
mov	eax, 655h
			
retn
align 10h
public PK11_MapPBEMechanismToCryptoMechanism
sub	esp, 0Ch
push	esi
mov	esi, [esp+10h+arg_0]
push	edi
test	esi, esi
jz	loc_10026C19
mov	edi, [esp+14h+arg_4]
test	edi, edi
jz	loc_10026C19
mov	eax, [esi]
cmp	eax, 0FFFFFFFFh
jz	loc_10026C0E
cmp	eax, 3B0h
jz	loc_10026C0E
push	ebx
mov	ebx, [esi+4]
push	ebp
push	eax
mov	[esp+20h+arg_0], ebx
call	PK11_GetIVLength
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	short loc_10026AFC
mov	ecx, [ebx]
lea	ecx, [ecx+0]
mov	dl, [ecx]
dec	eax
inc	ecx
test	dl, dl
jnz	short loc_10026AFC
test	eax, eax
jnz	short loc_10026A90
call	PK11_GetInternalSlot
mov	edi, eax
test	edi, edi
jz	short loc_10026ADE
mov	eax, [esi+4]
mov	ecx, [esi+8]
mov	edx, [esp+1Ch+arg_C]
push	0
push	edx
mov	edx, [esi]
mov	[esp+24h+var_8], eax
mov	eax, [esp+24h+arg_8]
push	eax
mov	[esp+28h+var_4], ecx
lea	ecx, [esp+28h+var_C]
push	ecx
push	edx
push	edi
call	PK11_RawPBEKeyGen
push	edi
mov	ebx, eax
call	PK11_FreeSlot
add	esp, 1Ch
test	ebx, ebx
jnz	short loc_10026AEB
pop	ebp
pop	ebx
pop	edi
mov	eax, 30h
pop	esi
add	esp, 0Ch
retn
push	ebx
call	PK11_FreeSymKey
mov	edi, [esp+20h+arg_4]
mov	ebx, [esp+20h+arg_0]
add	esp, 4
			
mov	eax, [esi]
cmp	eax, 80000003h
ja	loc_10026B8E
jz	short loc_10026B4F 
cmp	eax, 3A7h
ja	short loc_10026B38
cmp	eax, 3A6h
jnb	loc_10026B9F	
cmp	eax, 3A0h
jb	short loc_10026B2B 
cmp	eax, 3A1h
jbe	short loc_10026B86
			
pop	ebp		
pop	ebx
pop	edi
mov	eax, 70h
pop	esi
add	esp, 0Ch
retn
cmp	eax, 3ABh
ja	short loc_10026B7F
jz	short loc_10026BB5 
cmp	eax, 3A8h
jb	short loc_10026B2B 
cmp	eax, 3A9h
ja	short loc_10026B2B 
			
			
mov	dword ptr [edi], 133h 
push	ebp
call	PORT_Alloc_Util
add	esp, 4
mov	[edi+4], eax
mov	[edi+8], ebp
test	eax, eax
jz	short loc_10026BE1
mov	ecx, [ebx]
push	ebp		
push	ecx		
push	eax		
call	memcpy
add	esp, 0Ch
pop	ebp
pop	ebx
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
cmp	eax, 80000002h
jnz	short loc_10026B2B 
mov	dword ptr [edi], 122h
jmp	short loc_10026B55
add	eax, 7FFFFFFCh	
cmp	eax, 4
ja	short loc_10026B2B 
jmp	ds:off_10026C24[eax*4] 
			
			
pop	ebp		
xor	eax, eax
pop	ebx
mov	dword ptr [edi], 111h
mov	[edi+8], eax
mov	[edi+4], eax
pop	edi
pop	esi
add	esp, 0Ch
retn
			
			
mov	ebx, 28h	
jmp	short loc_10026BC1
			
mov	ebx, 80h	
push	0Ch
mov	dword ptr [edi], 102h
mov	dword ptr [edi+8], 0Ch
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
mov	[edi+4], esi
test	esi, esi
jnz	short loc_10026BEE
pop	ebp
pop	ebx
pop	edi
mov	eax, 2
pop	esi
add	esp, 0Ch
retn
mov	edx, [esp+1Ch+arg_0]
mov	eax, [edx]
push	ebp		
push	eax		
lea	ecx, [esi+4]
push	ecx		
call	memcpy
add	esp, 0Ch
pop	ebp
mov	[esi], ebx
pop	ebx
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
			
pop	edi
mov	eax, 70h
pop	esi
add	esp, 0Ch
retn
			
pop	edi
mov	eax, 2
pop	esi
add	esp, 0Ch
retn
dd offset loc_10026BBC	
dd offset loc_10026B9F
dd offset loc_10026B9F
dd offset loc_10026B4F
align 10h
public PK11_MapSignKeyType
			
mov	eax, [esp+arg_0]
dec	eax
cmp	eax, 5		
ja	short loc_10026C63 
jmp	ds:off_10026C68[eax*4] 
			
mov	eax, 1		
retn
			
mov	eax, 11h	
retn
			
mov	eax, 1041h	
retn
			
			
or	eax, 0FFFFFFFFh	
retn
align 4
dd offset loc_10026C57	
dd offset loc_10026C57
dd offset loc_10026C63
dd offset loc_10026C63
dd offset loc_10026C5D
			
mov	eax, [esp+arg_0]
dec	eax
jz	short loc_10026C8B
or	eax, 0FFFFFFFFh
retn
mov	eax, 1
retn
align 10h
public PK11_FortezzaMapSig
mov	eax, [esp+arg_0]
cmp	eax, 36h
jl	short locret_10026CB8
cmp	eax, 39h
jle	short loc_10026CB3
cmp	eax, 7Eh
jnz	short locret_10026CB8
mov	eax, 7Ch
			
retn
align 10h
public PK11_GetKeyGen
mov	eax, [esp+arg_0]
push	0
push	eax
call	sub_10025510
add	esp, 8
retn
public PK11_ParamFromAlgid
			
sub	esp, 58h
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+60h+arg_0]
push	esi
push	edi
push	ebp
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_50], ebx
mov	[esp+6Ch+var_4C], ebx
mov	[esp+6Ch+var_48], ebx
mov	[esp+6Ch+var_44], ebx
mov	[esp+6Ch+var_40], ebx
mov	[esp+6Ch+var_3C], ebx
mov	[esp+6Ch+var_38], ebx
mov	[esp+6Ch+var_34], ebx
mov	[esp+6Ch+var_30], ebx
mov	[esp+6Ch+var_2C], ebx
mov	[esp+6Ch+var_28], ebx
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_20], ebx
mov	[esp+6Ch+var_1C], ebx
mov	[esp+6Ch+var_18], ebx
mov	[esp+6Ch+var_14], ebx
mov	[esp+6Ch+var_10], ebx
mov	[esp+6Ch+var_C], ebx
mov	[esp+6Ch+Src], ebx
mov	[esp+6Ch+Size],	ebx
call	SECOID_GetAlgorithmTag_Util
push	eax
call	SECOID_FindOIDByTag_Util
add	esp, 8
cmp	eax, ebx
jz	short loc_10026D49
mov	esi, [eax+14h]
jmp	short loc_10026D4C
or	esi, 0FFFFFFFFh
push	0Ch
call	PORT_Alloc_Util
mov	edi, eax
add	esp, 4
cmp	edi, ebx
jz	loc_10026E85
push	400h
mov	[edi], ebx
mov	[edi+4], ebx
mov	[edi+8], ebx
call	PORT_NewArena_Util
mov	ecx, eax
add	esp, 4
mov	[esp+68h+var_58], ecx
cmp	ecx, ebx
jz	loc_10026E7A
cmp	esi, 301h
ja	loc_10026EBA
jz	loc_100270C2	
			
lea	eax, [esi-101h]	
cmp	eax, 44h
ja	loc_10027053	
movzx	eax, ds:byte_10027160[eax]
jmp	ds:off_1002714C[eax*4] 
			
add	ebp, 0Ch	
push	ebp
push	offset dword_100A5EE8
lea	edx, [esp+70h+var_48]
push	edx
push	ecx
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_10026E6C
push	4
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	loc_10026E6C
lea	eax, [esp+68h+var_48]
call	sub_10026560
movzx	eax, al
mov	[esi], eax
mov	eax, [esp+68h+var_58]
push	ebx
push	eax
mov	[edi+4], esi
mov	dword ptr [edi+8], 4
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 58h
retn
			
add	ebp, 0Ch	
push	ebp
push	offset dword_100A5EA8
lea	edx, [esp+70h+var_48]
push	edx
push	ecx
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10026E6C
push	0Ch
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	short loc_10026E6C
lea	eax, [esp+68h+var_48]
mov	[edi+4], esi
mov	dword ptr [edi+8], 0Ch
call	sub_10026560
movzx	eax, al
mov	[esi], eax
cmp	[esp+68h+var_34], 8
jz	short loc_10026E8F
push	0FFFFE004h
call	PORT_SetError_Util
add	esp, 4
			
mov	ecx, [esp+68h+var_58]
push	ebx
push	ecx
call	PORT_FreeArena_Util
add	esp, 8
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 58h
retn
mov	ecx, [esp+68h+var_38]
mov	edx, [ecx]
mov	[esi+4], edx
mov	eax, [esp+68h+var_38]
mov	ecx, [eax+4]
mov	eax, [esp+68h+var_58]
push	ebx
push	eax
mov	[esi+8], ecx
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 58h
retn
cmp	esi, 551h
ja	loc_10027002
jz	loc_100270C2	
			
lea	eax, [esi-302h]	
cmp	eax, 0AEh
ja	loc_10027053	
movzx	edx, ds:byte_100271C0[eax]
jmp	ds:off_100271A8[edx*4] 
			
add	ebp, 0Ch	
push	ebp
push	offset dword_100A5DF8
lea	eax, [esp+70h+var_30]
push	eax
push	ecx
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_10026E6C
push	8
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	loc_10026E6C
lea	ecx, [esp+68h+var_24]
push	ecx
call	DER_GetInteger_Util
lea	edx, [esp+6Ch+var_18]
push	edx
mov	[esi+4], eax
call	DER_GetInteger_Util
cdq
and	edx, 7
add	eax, edx
sar	eax, 3
mov	[esi], eax
mov	eax, [esp+70h+var_58]
add	esp, 8
push	ebx
push	eax
mov	[edi+4], esi
mov	dword ptr [edi+8], 8
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 58h
retn
			
add	ebp, 0Ch	
push	ebp
push	offset dword_100A5E48
lea	eax, [esp+70h+var_30]
push	eax
push	ecx
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_10026E6C
mov	ecx, [esp+68h+Size]
add	ecx, 10h
push	ecx
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	loc_10026E6C
lea	edx, [esp+68h+var_24]
push	edx
mov	[edi+4], esi
mov	dword ptr [edi+8], 10h
call	DER_GetInteger_Util
mov	[esi+4], eax
lea	eax, [esp+6Ch+var_18]
push	eax
call	DER_GetInteger_Util
cdq
and	edx, 7
add	eax, edx
sar	eax, 3
mov	[esi], eax
lea	eax, [esi+10h]
mov	[esi+8], eax
mov	ecx, [esp+70h+Size]
mov	[esi+0Ch], ecx
mov	edx, [esp+70h+Size]
mov	ecx, [esp+70h+Src]
push	edx		
push	ecx		
push	eax		
call	memcpy
mov	eax, [esp+7Ch+var_58]
add	esp, 14h
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 58h
retn
cmp	esi, 1035h
ja	loc_100270DA
cmp	esi, 1031h
jnb	short loc_1002705D 
			
cmp	esi, 652h
ja	short loc_1002703B
jz	short loc_1002705D 
			
mov	eax, esi
sub	eax, 552h
jz	short loc_1002705D 
			
sub	eax, 3
jz	short loc_1002705D 
			
sub	eax, 0FCh
jz	loc_100270C2	
			
jmp	short loc_10027053 
cmp	esi, 655h
jz	short loc_1002705D 
			
cmp	esi, 1000h
jbe	short loc_10027053 
cmp	esi, 1007h
jbe	short loc_1002705D 
			
			
call	sub_10024DE0	
cmp	[eax+14h], ebx
jz	short loc_100270C2 
			
			
add	ebp, 0Ch	
			
push	ebp
push	ebx
push	ebx
call	NSS_Get_SEC_OctetStringTemplate_Util
add	esp, 8
push	eax
mov	eax, [esp+70h+var_58]
lea	edx, [esp+70h+var_54]
push	edx
push	eax
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_10026E6C
cmp	[esp+68h+var_50], ebx
jz	loc_10026E6C
mov	ecx, [esp+68h+var_4C]
push	ecx
call	PORT_Alloc_Util
add	esp, 4
mov	[edi+4], eax
cmp	eax, ebx
jz	loc_10026E6C
mov	edx, [esp+68h+var_4C]
mov	ecx, [esp+68h+var_50]
push	edx		
push	ecx		
push	eax		
call	memcpy
mov	edx, [esp+74h+var_4C]
add	esp, 0Ch
mov	[edi+8], edx
			
mov	eax, [esp+68h+var_58] 
			
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 58h
retn
cmp	esi, 1081h
ja	short loc_100270FB
jz	short loc_100270C2 
			
cmp	esi, 1061h
jb	loc_10027053	
cmp	esi, 1064h
jmp	loc_10027051
cmp	esi, 1085h
ja	short loc_1002711A
jz	loc_1002705D	
			
cmp	esi, 1082h
jz	loc_1002705D	
			
jmp	loc_10027053	
cmp	esi, 80000002h
jb	loc_10027053	
cmp	esi, 80000008h
ja	loc_10027053	
			
push	edi		
push	ebp
call	sub_1002EB70
add	esp, 8
test	eax, eax
jnz	loc_10026E6C
jmp	loc_100270C2	
align 4
			
dd offset loc_1002705D,	offset loc_10027053 
db	1,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     3,     4,     4
db	3,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     2,     3,     4
db	4,     3,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     3,     4,     4
db	3
align 4
			
dd offset loc_10026F65,	offset loc_10027132, offset loc_10027053 
db	5,     5,     5,     5 
db	5,     5,     5,     5
db	5,     5,     5,     1
db	0,     5,     5,     0
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     1
db	0,     5,     5,     0
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     2
db	3,     5,     5,     3
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     1
db	0,     5,     5,     0
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     4,     4
db	5,     5,     5,     5
db	4,     4,     4,     4
db	4,     4,     5,     5
db	5,     5,     4
align 10h
public PK11_ParamToAlgid
			
			
sub	esp, 48h
push	ebx
mov	ebx, [esp+4Ch+arg_0]
push	esi
push	edi
push	ebx
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jz	short loc_100272B4
mov	eax, [eax+14h]
cmp	eax, 301h
ja	loc_100273B3
jz	loc_1002753C	
			
lea	ecx, [eax-101h]	
cmp	ecx, 44h
ja	short loc_100272B7 
movzx	ecx, ds:byte_10027598[ecx]
jmp	ds:off_10027584[ecx*4] 
or	eax, 0FFFFFFFFh
			
mov	esi, dword_100BACE4 
xor	ecx, ecx
test	esi, esi
jle	short loc_100272E0
mov	edi, dword_100BACDC
lea	edx, [edi+8]
lea	esp, [esp+0]
cmp	[edx], eax
jz	loc_10027578
inc	ecx
add	edx, 18h
cmp	ecx, esi
jl	short loc_100272D0
mov	eax, offset dword_100BA4F4
cmp	dword ptr [eax+14h], 0
jz	loc_1002753C	
			
			
push	0		
			
push	0
call	NSS_Get_SEC_OctetStringTemplate_Util
push	eax
mov	eax, [esp+60h+arg_4]
push	eax
push	0
push	0
call	SEC_ASN1EncodeItem_Util
mov	esi, eax
add	esp, 18h
test	esi, esi
jnz	short loc_1002738C
			
pop	edi		
			
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 48h
retn
			
mov	edx, [esp+54h+arg_4] 
mov	esi, [edx+4]
mov	eax, [esi]
sub	eax, 28h
jz	short loc_1002733E
sub	eax, 18h
jz	short loc_10027337
sub	eax, 40h
mov	eax, 3Ah
jmp	short loc_10027343
mov	eax, 78h
jmp	short loc_10027343
mov	eax, 0A0h
			
push	eax
lea	eax, [esp+58h+var_48]
push	eax
push	0
call	SEC_ASN1EncodeUnsignedInteger_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10027310 
			
push	offset dword_100A5EA8
lea	ecx, [esp+58h+var_48]
push	ecx
push	0
add	esi, 4
push	0
mov	[esp+64h+var_38], esi
mov	[esp+64h+var_34], 8
call	SEC_ASN1EncodeItem_Util
mov	edx, [esp+64h+var_44]
push	edx
mov	esi, eax
call	PORT_Free_Util
add	esp, 14h
test	esi, esi
jz	short loc_10027310 
			
			
mov	ecx, [esp+54h+arg_C]
mov	edx, [esp+54h+arg_8]
push	esi
push	ebx
push	ecx
push	edx
call	SECOID_SetAlgorithmID_Util
push	1
push	esi
mov	edi, eax
call	SECITEM_FreeItem_Util
add	esp, 18h
mov	eax, edi
pop	edi
pop	esi
pop	ebx
add	esp, 48h
retn
cmp	eax, 551h
ja	loc_100274BD
jz	loc_1002753C	
			
lea	ecx, [eax-302h]	
cmp	ecx, 0A9h
ja	loc_100272B7	
movzx	ecx, ds:byte_100275F8[ecx]
jmp	ds:off_100275E0[ecx*4] 
			
mov	edx, [esp+54h+arg_4] 
mov	esi, [edx+4]
push	10h
lea	eax, [esp+58h+var_30]
push	eax
push	0
call	SEC_ASN1EncodeUnsignedInteger_Util
add	esp, 0Ch
test	eax, eax
jz	loc_10027310	
			
mov	ecx, [esi]
add	ecx, ecx
add	ecx, ecx
add	ecx, ecx
push	ecx
lea	edx, [esp+58h+var_18]
push	edx
push	0
call	SEC_ASN1EncodeUnsignedInteger_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10027437
mov	eax, [esp+54h+var_2C]
push	eax
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 48h
retn
mov	ecx, [esi]
add	ecx, ecx
add	ecx, ecx
add	ecx, ecx
push	ecx
lea	edx, [esp+58h+var_24]
push	edx
push	0
call	SEC_ASN1EncodeUnsignedInteger_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10027474
mov	eax, [esp+54h+var_14]
push	eax
call	PORT_Free_Util
mov	ecx, [esp+58h+var_2C]
push	ecx
call	PORT_Free_Util
add	esp, 8
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 48h
retn
mov	edx, [esi+8]
push	offset dword_100A5E48
lea	ecx, [esp+58h+var_30]
push	ecx
mov	[esp+5Ch+var_8], edx
mov	eax, [esi+0Ch]
push	0
push	0
mov	[esp+64h+var_4], eax
call	SEC_ASN1EncodeItem_Util
mov	edx, [esp+64h+var_2C]
push	edx
mov	esi, eax
call	PORT_Free_Util
mov	eax, [esp+68h+var_14]
push	eax
call	PORT_Free_Util
mov	ecx, [esp+6Ch+var_20]
push	ecx
call	PORT_Free_Util
add	esp, 1Ch
jmp	loc_10027388
cmp	eax, 1035h
ja	short loc_1002750E
cmp	eax, 1031h
jnb	loc_100272EF	
			
cmp	eax, 652h
ja	short loc_100274F3
jz	loc_100272EF	
			
cmp	eax, 552h
jz	loc_100272EF	
			
cmp	eax, 651h
jz	short loc_1002753C 
			
jmp	loc_100272B7	
cmp	eax, 1001h
jb	loc_100272B7	
cmp	eax, 1007h
jbe	loc_100272EF	
			
jmp	loc_100272B7	
cmp	eax, 1082h
ja	short loc_10027543
jz	loc_100272EF	
			
cmp	eax, 1061h
jb	loc_100272B7	
cmp	eax, 1064h
jbe	loc_100272EF	
			
cmp	eax, 1081h
jnz	loc_100272B7	
			
xor	esi, esi	
			
jmp	loc_1002738C
cmp	eax, 80000002h
jb	loc_100272B7	
cmp	eax, 80000008h
ja	loc_100272B7	
			
mov	edx, [esp+54h+arg_C] 
mov	eax, [esp+54h+arg_8]
mov	ecx, [esp+54h+arg_4]
push	edx
push	eax
push	ecx
push	ebx
call	sub_1002ED60
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 48h
retn
lea	edx, [ecx+ecx*2]
lea	eax, [edi+edx*8]
jmp	loc_100272E5
align 4
			
dd offset loc_100272EF,	offset loc_100272B7 
db	1,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     3,     4,     4
db	3,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     2,     3,     4
db	4,     3,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	2,     3,     4,     4
db	3
align 10h
			
dd offset loc_100273E4,	offset loc_10027559, offset loc_100272B7 
db	5,     5,     5,     5 
db	5,     5,     5,     5
db	5,     5,     5,     1
db	0,     5,     5,     0
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     1
db	0,     5,     5,     0
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     2
db	3,     5,     5,     3
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     1
db	0,     5,     5,     0
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     4,     4
db	5,     5,     5,     5
db	4,     4,     4,     4
db	4,     4
align 10h
			
push	esi
push	edi
call	sub_10035690
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_100276D2
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [esp+4+arg_8]
mov	edx, [esp+4+arg_4]
mov	eax, [edi]
push	ebx
push	ecx
mov	ecx, [esp+0Ch+arg_0]
push	edx
mov	edx, [eax+66h]
push	ecx
push	esi
call	edx
push	esi
push	edi
mov	ebx, eax
call	sub_10035750
add	esp, 18h
test	ebx, ebx
jz	short loc_1002770F
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
retn
pop	ebx
xor	eax, eax
pop	esi
retn
align 10h
			
mov	edx, [esp+arg_0]
push	edi
mov	edi, [esp+4+arg_4]
push	esi
push	ebx
push	eax
push	ecx
push	edx
call	sub_1002A310
add	esp, 14h
test	eax, eax
jnz	short loc_10027763
mov	eax, [esp+4+arg_8]
test	eax, eax
jnz	short loc_10027758
lea	eax, [esp+4+arg_8]
push	eax
push	1
push	esi
push	ebx
push	0
push	edi
call	sub_1002A750
add	esp, 18h
pop	edi
retn
push	esi
push	ebx
push	eax
call	sub_100276B0
add	esp, 0Ch
pop	edi
retn
align 10h
			
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_0]
push	ebx
push	esi
push	eax
push	ecx
push	edx
mov	dword ptr [edi], 0
call	sub_1002A310
add	esp, 14h
test	eax, eax
jz	short loc_10027792
push	eax
jmp	short loc_1002779A
cmp	dword ptr [esi+8], 0FFFFFFFFh
jnz	short loc_100277AC
push	12h
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
retn
mov	eax, [esp+arg_4]
push	ebx
push	esi
push	eax
call	sub_1002C4F0
mov	[edi], eax
add	esp, 0Ch
xor	eax, eax
retn
			
push	ebx
mov	ebx, [esp+4+arg_10]
mov	eax, [ebx]
push	esi
push	edi
test	eax, eax
jz	short loc_100277D8
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	edi, [esp+0Ch+arg_C]
mov	eax, [edi+8]
add	eax, 14h
push	eax
push	0
push	0
call	SECITEM_AllocItem_Util
add	esp, 0Ch
mov	[ebx], eax
test	eax, eax
jnz	short loc_100277FA
or	edi, 0FFFFFFFFh
jmp	short loc_10027854
mov	ecx, [esp+0Ch+arg_8]
mov	edx, [esp+0Ch+arg_0]
mov	eax, [esp+0Ch+arg_4]
push	ecx
push	edx
push	104h
push	eax
call	PK11_CreateContextBySymKey
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_10027821
or	edi, 0FFFFFFFFh
jmp	short loc_10027854
mov	edx, [edi+8]
mov	eax, [ebx]
push	edx
mov	edx, [edi+4]
push	edx
mov	edx, [eax+8]
lea	ecx, [eax+8]
mov	eax, [eax+4]
push	edx
push	ecx
push	eax
push	esi
call	PK11_CipherOp
push	esi
mov	edi, eax
call	PK11_Finalize
push	1
push	esi
call	PK11_DestroyContext
add	esp, 24h
test	edi, edi
jz	short loc_1002786B
			
mov	eax, [ebx]
test	eax, eax
jz	short loc_1002786B
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	dword ptr [ebx], 0
			
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
push	ebx
push	esi
mov	esi, [esp+8+arg_4]
push	edi
mov	edi, [esp+0Ch+arg_0]
xor	ebx, ebx
push	ebx
push	107h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jnz	short loc_100278B6
push	0
push	105h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_100278BB
mov	ebx, 20h
push	0
push	10Ch
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_100278D3
or	ebx, 8
push	0
push	109h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jnz	short loc_100278FD
push	0
push	108h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027903
or	ebx, 80h
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
sub	esp, 84h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+84h+var_4], eax
mov	eax, [esp+84h+arg_8]
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+8Ch+arg_0]
push	esi
push	edi
mov	edi, [esp+94h+arg_4]
mov	esi, edx
push	800h
mov	[esp+98h+var_6C], esi
mov	[esp+98h+var_74], edi
mov	[esp+98h+var_64], eax
mov	[esp+98h+var_70], ecx
mov	[esp+98h+var_84], ebx
mov	[esp+98h+var_80], ebx
mov	[esp+98h+var_78], ebx
mov	[esp+98h+var_60], 102h
mov	[esp+98h+var_5C], ebx
mov	[esp+98h+var_58], ebx
mov	[esp+98h+var_54], ebx
mov	[esp+98h+var_50], ebx
mov	[esp+98h+var_4C], ebx
mov	[esp+98h+var_3C], 101h
mov	[esp+98h+var_38], ebx
mov	[esp+98h+var_34], ebx
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+94h+var_7C], eax
cmp	eax, ebx
jnz	short loc_100279A6
or	esi, 0FFFFFFFFh
jmp	loc_10027B58
push	2
lea	edx, [esp+98h+var_60]
push	edx
push	edi
push	ebp
push	eax
call	sub_1002A310
add	esp, 14h
cmp	eax, ebx
jz	short loc_100279BF
push	eax
jmp	short loc_100279C8
cmp	[esp+94h+var_58], 0FFFFFFFFh
jnz	short loc_100279DE
push	12h
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	esi, 0FFFFFFFFh
jmp	loc_10027B58
push	2
lea	eax, [esp+98h+var_60]
push	eax
push	esi
call	sub_1002C4F0
add	esp, 0Ch
xor	esi, esi
mov	[esp+94h+var_68], eax
cmp	eax, ebx
jnz	loc_10027B58
mov	ecx, [esp+94h+var_70]
push	ecx
push	edi
push	ebx
push	ebx
push	ebp
call	sub_10012FF0
add	esp, 14h
mov	[esp+94h+var_84], eax
cmp	eax, ebx
jnz	short loc_10027A1D
or	esi, 0FFFFFFFFh
jmp	loc_10027B58
lea	edx, [esp+94h+var_18]
push	14h
push	edx
call	PK11_GenerateRandom
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jnz	loc_10027B58
mov	ecx, [esp+94h+var_70]
mov	edx, [esp+94h+var_84]
push	ecx
push	1
lea	eax, [esp+9Ch+var_18]
push	edx
mov	[esp+0A0h+var_44], eax
lea	eax, [esp+0A0h+var_48]
push	eax
push	9Ch
push	ebp
mov	[esp+0ACh+var_40], 14h
call	PK11_ExportEncryptedPrivKeyInfo
add	esp, 18h
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jnz	short loc_10027A78
or	esi, 0FFFFFFFFh
jmp	loc_10027B58
push	edi
push	ebp
call	sub_1002A540
mov	esi, eax
add	esp, 8
mov	[esp+94h+var_78], esi
cmp	esi, ebx
jz	short loc_10027AA0
mov	[esp+94h+var_2C], esi
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
cmp	cl, bl
jnz	short loc_10027A93
sub	eax, edx
mov	[esp+94h+var_28], eax
push	edi
push	ebp
call	sub_10027880
mov	ecx, [esp+9Ch+var_5C]
mov	edx, [esp+9Ch+var_58]
mov	edi, [esp+9Ch+var_6C]
mov	[esp+9Ch+var_20], ecx
mov	ecx, [esp+9Ch+var_64]
push	ecx
push	eax
mov	[esp+0A4h+var_1C], edx
mov	edx, [esp+0A4h+var_84]
mov	eax, [edx+4]
push	eax
push	1
push	1
neg	esi
lea	ecx, [esp+0B0h+var_24]
push	ecx
mov	ecx, [esp+0B4h+var_80]
sbb	esi, esi
lea	edx, [esp+0B4h+var_30]
and	esi, edx
push	esi
lea	eax, [esp+0B8h+var_48]
push	eax
push	ecx
push	edi
call	PK11_ImportEncryptedPrivateKeyInfo
mov	esi, eax
add	esp, 30h
cmp	esi, ebx
jnz	short loc_10027B58
mov	edx, [esp+94h+var_7C]
mov	eax, [esp+94h+var_74]
push	ebp
push	edi
push	edx
lea	edi, [esp+0A0h+var_68]
mov	ebx, 2
lea	esi, [esp+0A0h+var_60]
call	sub_10027770
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10027B56
mov	eax, [esp+94h+var_68]
test	eax, eax
jnz	short loc_10027B32
or	esi, 0FFFFFFFFh
jmp	short loc_10027B56
mov	ecx, [esp+94h+var_7C]
push	eax
mov	eax, [esp+98h+var_6C]
push	eax
mov	eax, [esp+9Ch+var_74]
push	ecx
mov	esi, 1
lea	ebx, [esp+0A0h+var_3C]
mov	ecx, ebp
call	sub_10027720
add	esp, 0Ch
mov	esi, eax
			
xor	ebx, ebx
			
mov	eax, [esp+94h+var_78]
mov	[esp+94h+var_18], ebx
mov	[esp+94h+var_14], ebx
mov	[esp+94h+var_10], ebx
mov	[esp+94h+var_C], ebx
mov	[esp+94h+var_8], ebx
cmp	eax, ebx
jz	short loc_10027B89
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+94h+var_84]
cmp	eax, ebx
jz	short loc_10027B9A
push	eax
call	SECKEY_DestroyPrivateKey
add	esp, 4
mov	eax, [esp+94h+var_80]
cmp	eax, ebx
jz	short loc_10027BAD
push	1
push	eax
call	SECKEY_DestroyEncryptedPrivateKeyInfo
add	esp, 8
mov	eax, [esp+94h+var_7C]
cmp	eax, ebx
jz	short loc_10027BBF
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	ecx, [esp+94h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 84h
retn
align 10h
mov	ecx, [edi+4]
mov	edx, [edi+8]
push	esi
test	ecx, ecx
jz	short loc_10027C0E
cmp	edx, 0FFFFFFFFh
jz	short loc_10027C0E
test	edx, edx
jz	short loc_10027C10
mov	esi, 1
lea	eax, [edx+ecx-1]
sub	esi, ecx
nop
inc	byte ptr [eax]
jnz	short loc_10027C30
dec	eax
lea	ecx, [esi+eax]
test	ecx, ecx
jnz	short loc_10027C00
jmp	short loc_10027C10
			
xor	edx, edx
			
lea	esi, [edx+1]
mov	edx, [esp+4+arg_0]
push	esi
push	edx
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_10027C2A
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	[edi+4], eax
mov	[edi+8], esi
xor	eax, eax
pop	esi
retn
align 10h
push	ebx
xor	ebx, ebx
push	ebx
push	107h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027C5C
mov	ebx, 40000h
push	0
push	106h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027C77
or	ebx, 20000h
push	0
push	104h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027C92
or	ebx, 100h
push	0
push	105h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027CAD
or	ebx, 200h
push	0
push	10Ch
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027CC8
or	ebx, 80000h
push	0
push	108h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027CE3
or	ebx, 800h
push	0
push	109h
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027CFE
or	ebx, 1000h
push	0
push	10Ah
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027D19
or	ebx, 2000h
push	0
push	10Bh
push	esi
push	edi
call	sub_1002A280
add	esp, 10h
test	al, al
jz	short loc_10027D34
or	ebx, 4000h
mov	eax, ebx
pop	ebx
retn
align 10h
sub	esp, 54h
push	ebx
push	ebp
xor	ebp, ebp
push	800h
mov	[esp+60h+var_4C], ebp
mov	[esp+60h+var_48], ebp
mov	[esp+60h+var_54], ebp
mov	[esp+60h+var_18], 102h
mov	[esp+60h+var_14], ebp
mov	[esp+60h+var_10], ebp
mov	[esp+60h+var_C], ebp
mov	[esp+60h+var_8], ebp
mov	[esp+60h+var_4], ebp
mov	[esp+60h+var_24], 3
mov	[esp+60h+var_20], ebp
mov	[esp+60h+var_1C], ebp
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
mov	[esp+5Ch+var_44], ebx
cmp	ebx, ebp
jnz	short loc_10027D9F
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 54h
retn
push	esi
mov	esi, [esp+60h+arg_8]
push	edi
mov	edi, [esp+64h+arg_4]
push	100h
push	esi
push	edi
call	sub_1002A210
add	esp, 0Ch
mov	[esp+64h+var_38], eax
cmp	eax, 0FFFFFFFFh
jnz	short loc_10027DD8
push	ebp
push	ebx
or	esi, 0FFFFFFFFh
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 54h
retn
push	eax
call	sub_10024E60
add	esp, 4
mov	[esp+64h+var_34], eax
mov	[esp+64h+var_40], eax
cmp	eax, 131h
jz	short loc_10027DF7
cmp	eax, 130h
jnz	short loc_10027DFF
mov	[esp+64h+var_40], 133h
mov	ecx, [esp+64h+arg_10]
push	ecx
push	ebp
push	esi
push	eax
push	1
push	ebp
push	edi
call	PK11_SymKeyFromHandle
add	esp, 1Ch
mov	[esp+64h+var_50], eax
cmp	eax, ebp
jz	short loc_10027DC1
mov	edx, [esp+64h+arg_0]
push	edi
push	edx
push	ebx
mov	eax, esi
lea	edi, [esp+70h+var_3C]
mov	ebx, 2
lea	esi, [esp+70h+var_18]
call	sub_10027770
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	loc_10028008
mov	ebx, [esp+64h+var_40]
push	eax
push	ebx
mov	[esp+6Ch+var_2C], offset aMyEncrytionTes 
call	PK11_GetBlockSize
add	esp, 8
test	eax, eax
jns	short loc_10027E65
or	esi, 0FFFFFFFFh
jmp	loc_10028008
mov	[esp+64h+var_28], eax
test	eax, eax
jnz	short loc_10027E75
mov	[esp+64h+var_28], 3Ah
mov	esi, [esp+64h+var_3C]
test	esi, esi
jz	loc_10027F9B
mov	eax, [esp+64h+arg_8]
mov	ecx, [esp+64h+arg_4]
push	100h
push	eax
push	ecx
call	sub_1002A210
add	esp, 0Ch
cmp	eax, [esp+64h+var_38]
jnz	loc_10027F64
mov	edx, [esp+64h+arg_C]
mov	eax, [esp+64h+var_34]
mov	ecx, [esp+64h+arg_0]
push	edx
push	0
push	esi
push	eax
push	1
push	0
push	ecx
call	PK11_SymKeyFromHandle
add	esp, 1Ch
cmp	[esp+64h+var_54], 0
mov	ebp, eax
jnz	short loc_10027EE3
mov	edx, [esp+64h+var_50]
push	edx
push	ebx
call	PK11_GenerateNewParam
add	esp, 8
mov	[esp+64h+var_54], eax
test	eax, eax
jz	loc_10027E5D
cmp	[esp+64h+var_4C], 0
jnz	short loc_10027F11
mov	edx, [esp+64h+var_54]
lea	eax, [esp+64h+var_4C]
push	eax
mov	eax, [esp+68h+var_50]
lea	ecx, [esp+68h+var_30]
push	ecx
push	edx
push	ebx
push	eax
call	sub_100277C0
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	loc_10028008
mov	eax, [esp+64h+var_54]
lea	ecx, [esp+64h+var_48]
push	ecx
lea	edx, [esp+68h+var_30]
push	edx
push	eax
push	ebx
push	ebp
call	sub_100277C0
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	short loc_10027F59
mov	edi, [esp+64h+var_48]
mov	ecx, [esp+64h+var_4C]
push	edi
push	ecx
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jnz	loc_10028008
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
mov	[esp+64h+var_48], esi
push	ebp
call	PK11_FreeSymKey
add	esp, 4
xor	ebp, ebp
mov	edx, [esp+64h+var_44]
push	edx
lea	edi, [esp+68h+var_18]
call	sub_10027BE0
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	loc_10028008
mov	ecx, [esp+64h+arg_0]
push	2
mov	eax, edi
push	eax
push	ecx
call	sub_1002C4F0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	loc_10027E81
mov	esi, [esp+64h+arg_8]
mov	edi, [esp+64h+arg_4]
call	sub_10027C40
mov	edx, [esp+64h+var_50]
mov	edi, [esp+64h+arg_0]
push	edx
push	1
push	eax
push	1
push	edi
call	PK11_MoveSymKey
mov	ebp, eax
add	esp, 14h
test	ebp, ebp
jnz	short loc_10027FCA
or	esi, 0FFFFFFFFh
jmp	short loc_10028008
mov	ecx, [ebp+4]
push	1
lea	eax, [esp+68h+var_18]
push	eax
push	ecx
call	sub_100276B0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10028008
mov	edx, [ebp+4]
mov	eax, [esp+64h+var_44]
mov	ecx, [esp+64h+arg_4]
push	edx
push	edi
push	eax
mov	eax, [esp+70h+arg_8]
mov	esi, 1
lea	ebx, [esp+70h+var_24]
call	sub_10027720
add	esp, 0Ch
mov	esi, eax
			
mov	ecx, [esp+64h+var_50]
push	ecx
call	PK11_FreeSymKey
add	esp, 4
test	ebp, ebp
jz	short loc_10028022
push	ebp
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esp+64h+var_4C]
test	eax, eax
jz	short loc_10028035
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esp+64h+var_48]
test	eax, eax
jz	short loc_10028048
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esp+64h+var_54]
test	eax, eax
jz	short loc_1002805B
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	ebx, [esp+64h+var_44]
xor	ebp, ebp
push	ebp
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 54h
retn
align 10h
sub	esp, 4Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+4Ch+var_4], eax
mov	eax, [esp+4Ch+arg_0]
push	ebx
push	ebp
push	esi
push	edi
xor	edi, edi
mov	[esp+5Ch+var_4C], eax
mov	eax, 102h
mov	esi, edx
push	800h
mov	ebx, ecx
mov	[esp+60h+var_48], esi
mov	[esp+60h+var_40], eax
mov	[esp+60h+var_3C], edi
mov	[esp+60h+var_38], edi
mov	[esp+60h+var_34], edi
mov	[esp+60h+var_30], edi
mov	[esp+60h+var_2C], edi
mov	[esp+60h+var_28], eax
mov	[esp+60h+var_24], edi
mov	[esp+60h+var_20], edi
mov	[esp+60h+var_1C], 3
mov	[esp+60h+var_18], edi
mov	[esp+60h+var_14], edi
mov	[esp+60h+var_10], 101h
mov	[esp+60h+var_C], edi
mov	[esp+60h+var_8], edi
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
cmp	ebp, edi
jnz	short loc_10028116
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+4Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 4Ch
retn
mov	edx, [esp+5Ch+var_4C]
push	2
lea	ecx, [esp+60h+var_40]
push	ecx
push	edx
push	esi
push	ebp
call	sub_1002A310
add	esp, 14h
cmp	eax, edi
jz	short loc_10028133
push	eax
jmp	short loc_1002813C
cmp	[esp+5Ch+var_38], 0FFFFFFFFh
jnz	short loc_1002814F
push	12h
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	esi, 0FFFFFFFFh
jmp	short loc_100281C0
push	2
lea	eax, [esp+60h+var_40]
push	eax
push	ebx
call	sub_1002C4F0
add	esp, 0Ch
xor	esi, esi
cmp	eax, edi
jnz	short loc_100281C0
mov	ecx, [esp+5Ch+var_4C]
mov	edx, [esp+5Ch+var_48]
push	ecx
push	edi
push	edx
call	sub_10012B60
add	esp, 0Ch
mov	[esp+5Ch+var_44], eax
cmp	eax, edi
jz	short loc_1002814A
push	1
push	eax
push	ebx
call	PK11_ImportPublicKey
add	esp, 0Ch
cmp	eax, edi
jnz	short loc_10028195
or	esi, 0FFFFFFFFh
jmp	short loc_100281B3
mov	ecx, [esp+5Ch+var_48]
push	eax
mov	eax, [esp+60h+var_4C]
push	ebx
push	ebp
mov	esi, 3
lea	ebx, [esp+68h+var_28]
call	sub_10027720
add	esp, 0Ch
mov	esi, eax
mov	eax, [esp+5Ch+var_44]
push	eax
call	SECKEY_DestroyPublicKey
add	esp, 4
			
push	edi
push	ebp
call	PORT_FreeArena_Util
mov	ecx, [esp+64h+var_4]
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 4Ch
retn
align 10h
push	ebx
push	ebp
push	esi
push	edi
mov	edi, eax
lea	edx, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_100281F0
sub	eax, edx
mov	ebp, eax
lea	esi, [ebp-1]
mov	eax, esi
cmp	eax, 2
jl	short loc_10028217
movsx	ecx, byte ptr [eax+edi]
add	ecx, 0FFFFFFD0h
cmp	ecx, 9
ja	short loc_10028217
dec	eax
cmp	eax, 2
jge	short loc_10028205
			
cmp	ebp, 3
jl	short loc_1002828C
cmp	eax, esi
jge	short loc_1002828C
cmp	byte ptr [eax+edi], 23h
jnz	short loc_1002828C
cmp	byte ptr [eax+edi-1], 20h
jnz	short loc_1002828C
test	esi, esi
js	short loc_1002824A
movsx	eax, byte ptr [esi+edi]
lea	ecx, [eax-30h]
cmp	ecx, 9
ja	short loc_1002824A
cmp	eax, 39h
jl	short loc_10028282
dec	esi
mov	byte ptr [esi+edi+1], 30h
jns	short loc_10028231
			
lea	edx, [ebp+2]
push	edx
push	edi
call	PORT_Realloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_100282D1
inc	esi
mov	eax, ebp
sub	eax, esi
push	eax		
lea	ecx, [esi+ebx+1]
push	30h		
push	ecx		
mov	byte ptr [esi+ebx], 31h
call	memset
add	esp, 0Ch
pop	edi
pop	esi
mov	byte ptr [ebx+ebp+1], 0
pop	ebp
mov	eax, ebx
pop	ebx
retn
inc	byte ptr [esi+edi]
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
			
add	ebp, 4
push	ebp
push	edi
call	PORT_Realloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_100282D1
mov	eax, offset a2	
mov	edx, eax
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_100282A6
sub	eax, edx
lea	edi, [ebx-1]
mov	cl, [edi+1]
inc	edi
test	cl, cl
jnz	short loc_100282B2
mov	ecx, eax
shr	ecx, 2
mov	esi, edx
rep movsd
mov	ecx, eax
and	ecx, 3
rep movsb
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
			
push	edi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
mov	esi, [esp+34h+arg_8]
xor	ebx, ebx
push	edi
mov	edi, [esp+38h+arg_4]
push	ebx
mov	eax, 102h
push	esi
push	edi
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_18], eax
mov	[esp+44h+var_14], ebx
mov	[esp+44h+var_10], ebx
mov	[esp+44h+var_C], eax
mov	[esp+44h+var_8], ebx
mov	[esp+44h+var_4], ebx
mov	[esp+44h+var_28], ebx
call	sub_10017070
add	esp, 0Ch
mov	[esp+38h+var_2C], eax
cmp	eax, ebx
jnz	short loc_10028342
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 2Ch
retn
push	ebp
push	esi
push	edi
call	sub_1002A540
mov	ebp, eax
add	esp, 8
cmp	ebp, ebx
jz	short loc_100283CA
mov	eax, [esp+3Ch+arg_0]
push	eax
call	PK11_GetTokenName
mov	ebx, ds:PR_smprintf
mov	edi, eax
push	ebp
push	edi
push	offset aSS_0	
call	ebx 
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_100283C8
call	CERT_GetDefaultCertDB
push	eax		
mov	eax, [esp+40h+var_2C]
add	eax, 54h
push	eax		
push	esi		
call	SEC_CertNicknameConflict
add	esp, 0Ch
test	eax, eax
jz	short loc_100283BA
mov	eax, ebp
call	sub_100281E0
mov	ebp, eax
test	ebp, ebp
jz	short loc_100283BA
push	esi
call	ds:PR_smprintf_free
push	ebp
push	edi
push	offset aSS_0	
call	ebx 
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_10028377
jmp	short loc_100283C8
			
test	esi, esi
jz	short loc_100283C8
push	esi
call	ds:PR_smprintf_free
add	esp, 4
			
xor	ebx, ebx
mov	ecx, [esp+3Ch+arg_C]
mov	edx, [esp+3Ch+var_2C]
mov	edi, [esp+3Ch+arg_0]
push	ecx
push	edx
push	edi
call	PK11_FindCertInSlot
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	short loc_100283FF
mov	eax, [esp+3Ch+var_2C]
push	ebx
push	ebp
push	ebx
push	eax
push	edi
call	PK11_ImportCert
add	esp, 14h
mov	ebx, eax
jmp	loc_100284EF
push	800h
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
mov	[esp+3Ch+var_24], ebx
test	ebx, ebx
jnz	short loc_1002841E
or	ebx, 0FFFFFFFFh
jmp	loc_100284EF
mov	edx, [esp+3Ch+arg_8]
mov	eax, [esp+3Ch+arg_4]
push	1
lea	ecx, [esp+40h+var_18]
push	ecx
push	edx
push	eax
push	ebx
call	sub_1002A310
add	esp, 14h
test	eax, eax
jz	short loc_10028446
mov	[esp+3Ch+var_10], 0
jmp	short loc_10028495
cmp	[esp+3Ch+var_10], 0
jz	short loc_10028495
push	1
lea	ecx, [esp+40h+var_C]
push	ecx
push	esi
push	edi
push	ebx
call	sub_1002A310
add	esp, 14h
test	eax, eax
jz	short loc_1002846D
mov	[esp+3Ch+var_4], 0
jmp	short loc_10028474
cmp	[esp+3Ch+var_4], 0
jnz	short loc_10028495
push	1
lea	edx, [esp+40h+var_18]
push	edx
push	esi
call	sub_100276B0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10028495
call	PORT_GetError_Util
mov	[esp+3Ch+var_1C], eax
			
xor	ebx, ebx
test	ebp, ebp
jz	short loc_100284D8
cmp	[ebp+0], bl
jz	short loc_100284D8
push	esi
push	edi
call	sub_1002A540
add	esp, 8
mov	[esp+3Ch+var_20], eax
test	eax, eax
jz	short loc_100284B6
cmp	[eax], bl
jnz	short loc_100284C7
push	ebp
push	esi
push	edi
call	sub_1002A5C0
mov	ebx, eax
mov	eax, [esp+48h+var_20]
add	esp, 0Ch
test	eax, eax
jz	short loc_100284D4
push	eax
call	PORT_Free_Util
add	esp, 4
test	ebx, ebx
jnz	short loc_100284EF
			
mov	eax, [esp+3Ch+var_28]
test	eax, eax
jz	short loc_100284EF
mov	ebx, eax
mov	eax, [esp+3Ch+var_1C]
push	eax
call	PORT_SetError_Util
add	esp, 4
			
test	ebp, ebp
jz	short loc_100284FC
push	ebp
call	PORT_Free_Util
add	esp, 4
mov	ecx, [esp+3Ch+var_2C]
push	ecx
call	CERT_DestroyCertificate
mov	eax, [esp+40h+var_24]
add	esp, 4
pop	ebp
test	eax, eax
jz	short loc_1002851D
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 98h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+98h+var_4], eax
push	ebx
push	ebp
push	esi
push	edi
xor	edi, edi
mov	esi, ecx
mov	ecx, 101h
mov	eax, 0CE534358h
mov	ebx, edx
push	800h
mov	[esp+0ACh+var_98], ebx
mov	[esp+0ACh+var_94], ecx
mov	[esp+0ACh+var_90], edi
mov	[esp+0ACh+var_8C], edi
mov	[esp+0ACh+var_88], edi
mov	[esp+0ACh+var_84], edi
mov	[esp+0ACh+var_80], edi
mov	[esp+0ACh+var_7C], eax
mov	[esp+0ACh+var_78], edi
mov	[esp+0ACh+var_74], edi
mov	[esp+0ACh+var_70], edi
mov	[esp+0ACh+var_6C], edi
mov	[esp+0ACh+var_68], edi
mov	[esp+0ACh+var_64], 1
mov	[esp+0ACh+var_60], edi
mov	[esp+0ACh+var_5C], edi
mov	[esp+0ACh+var_58], 3
mov	[esp+0ACh+var_54], edi
mov	[esp+0ACh+var_50], edi
mov	[esp+0ACh+var_4C], 2
mov	[esp+0ACh+var_48], edi
mov	[esp+0ACh+var_44], edi
mov	[esp+0ACh+var_40], 170h
mov	[esp+0ACh+var_3C], edi
mov	[esp+0ACh+var_38], edi
mov	[esp+0ACh+var_34], ecx
mov	[esp+0ACh+var_30], edi
mov	[esp+0ACh+var_2C], edi
mov	[esp+0ACh+var_28], eax
mov	[esp+0ACh+var_24], edi
mov	[esp+0ACh+var_20], edi
mov	[esp+0ACh+var_1C], 0CE534351h
mov	[esp+0ACh+var_18], edi
mov	[esp+0ACh+var_14], edi
mov	[esp+0ACh+var_10], 11h
mov	[esp+0ACh+var_C], edi
mov	[esp+0ACh+var_8], edi
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
cmp	ebp, edi
jnz	short loc_1002863D
or	eax, 0FFFFFFFFh
jmp	loc_100286C7
mov	ecx, [esp+0A8h+arg_0]
push	3
lea	eax, [esp+0ACh+var_94]
push	eax
push	ecx
push	ebx
push	ebp
call	sub_1002A310
add	esp, 14h
or	ebx, 0FFFFFFFFh
cmp	eax, edi
jz	short loc_1002866E
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	short loc_100286BB
cmp	[esp+0A8h+var_8C], ebx
jnz	short loc_10028686
push	12h
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	short loc_100286BB
push	3
lea	edx, [esp+0ACh+var_94]
push	edx
push	esi
call	sub_1002C4F0
add	esp, 0Ch
xor	ebx, ebx
cmp	eax, edi
jnz	short loc_100286BB
mov	eax, [esp+0A8h+arg_0]
mov	ecx, [esp+0A8h+var_98]
push	edi
push	esi
lea	esi, [ebx+9]
push	ebp
lea	ebx, [esp+0B4h+var_70]
call	sub_10027720
add	esp, 0Ch
mov	ebx, eax
			
push	edi
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, ebx
mov	ecx, [esp+0A8h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 98h
retn
sub	esp, 98h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+98h+var_4], eax
push	ebx
push	ebp
push	esi
push	edi
xor	edi, edi
mov	esi, ecx
mov	ecx, 101h
mov	eax, 0CE534352h
mov	ebx, edx
push	800h
mov	[esp+0ACh+var_98], ebx
mov	[esp+0ACh+var_94], ecx
mov	[esp+0ACh+var_90], edi
mov	[esp+0ACh+var_8C], edi
mov	[esp+0ACh+var_88], eax
mov	[esp+0ACh+var_84], edi
mov	[esp+0ACh+var_80], edi
mov	[esp+0ACh+var_7C], edi
mov	[esp+0ACh+var_78], edi
mov	[esp+0ACh+var_74], edi
mov	[esp+0ACh+var_70], edi
mov	[esp+0ACh+var_6C], edi
mov	[esp+0ACh+var_68], edi
mov	[esp+0ACh+var_64], 1
mov	[esp+0ACh+var_60], edi
mov	[esp+0ACh+var_5C], edi
mov	[esp+0ACh+var_58], 3
mov	[esp+0ACh+var_54], edi
mov	[esp+0ACh+var_50], edi
mov	[esp+0ACh+var_4C], 2
mov	[esp+0ACh+var_48], edi
mov	[esp+0ACh+var_44], edi
mov	[esp+0ACh+var_40], 170h
mov	[esp+0ACh+var_3C], edi
mov	[esp+0ACh+var_38], edi
mov	[esp+0ACh+var_34], ecx
mov	[esp+0ACh+var_30], edi
mov	[esp+0ACh+var_2C], edi
mov	[esp+0ACh+var_28], eax
mov	[esp+0ACh+var_24], edi
mov	[esp+0ACh+var_20], edi
mov	[esp+0ACh+var_1C], 0CE534354h
mov	[esp+0ACh+var_18], edi
mov	[esp+0ACh+var_14], edi
mov	[esp+0ACh+var_10], 11h
mov	[esp+0ACh+var_C], edi
mov	[esp+0ACh+var_8], edi
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
cmp	ebp, edi
jnz	short loc_100287ED
or	eax, 0FFFFFFFFh
jmp	loc_10028877
mov	ecx, [esp+0A8h+arg_0]
push	3
lea	eax, [esp+0ACh+var_94]
push	eax
push	ecx
push	ebx
push	ebp
call	sub_1002A310
add	esp, 14h
or	ebx, 0FFFFFFFFh
cmp	eax, edi
jz	short loc_1002881E
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	short loc_1002886B
cmp	[esp+0A8h+var_8C], ebx
jnz	short loc_10028836
push	12h
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	short loc_1002886B
push	3
lea	edx, [esp+0ACh+var_94]
push	edx
push	esi
call	sub_1002C4F0
add	esp, 0Ch
xor	ebx, ebx
cmp	eax, edi
jnz	short loc_1002886B
mov	eax, [esp+0A8h+arg_0]
mov	ecx, [esp+0A8h+var_98]
push	edi
push	esi
lea	esi, [ebx+9]
push	ebp
lea	ebx, [esp+0B4h+var_70]
call	sub_10027720
add	esp, 0Ch
mov	ebx, eax
			
push	edi
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, ebx
mov	ecx, [esp+0A8h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 98h
retn
mov	eax, [esp+arg_0]
mov	edx, 4
cmp	[eax+8], edx
jnz	short loc_100288A5
mov	eax, [eax+4]
mov	ecx, [eax]
jmp	short loc_100288AA
mov	ecx, 0CE534355h
mov	eax, [esp+arg_4]
cmp	[eax+8], edx
jnz	short loc_100288BA
mov	edx, [eax+4]
mov	eax, [edx]
jmp	short loc_100288BF
mov	eax, 0CE534355h
cmp	eax, ecx
jz	short loc_100288F6
cmp	eax, 0CE534355h
jz	short loc_100288F6
cmp	ecx, 0CE534355h
jnz	short loc_100288D8
			
mov	eax, 1
retn
cmp	eax, 0CE534353h
jz	short loc_100288F6
cmp	eax, 0CE53435Bh
jz	short loc_100288F6
cmp	ecx, 0CE534353h
jz	short loc_100288D2
cmp	ecx, 0CE53435Bh
jz	short loc_100288D2
			
xor	eax, eax
retn
align 10h
sub	esp, 118h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+118h+var_4], eax
push	ebx
push	ebp
xor	ebp, ebp
push	esi
mov	esi, ecx
mov	ecx, 81h
mov	eax, 82h
push	edi
mov	ebx, edx
push	800h
mov	[esp+12Ch+var_FC], ebx
mov	[esp+12Ch+var_104], ebp
mov	[esp+12Ch+var_EC], ecx
mov	[esp+12Ch+var_E8], ebp
mov	[esp+12Ch+var_E4], ebp
mov	[esp+12Ch+var_E0], eax
mov	[esp+12Ch+var_DC], ebp
mov	[esp+12Ch+var_D8], ebp
mov	[esp+12Ch+var_D4], ebp
mov	[esp+12Ch+var_D0], ebp
mov	[esp+12Ch+var_CC], ebp
mov	[esp+12Ch+var_AC], ebp
mov	[esp+12Ch+var_A8], ebp
mov	[esp+12Ch+var_A4], ebp
mov	[esp+12Ch+var_A0], 1
mov	[esp+12Ch+var_9C], ebp
mov	[esp+12Ch+var_98], ebp
mov	[esp+12Ch+var_94], 3
mov	[esp+12Ch+var_90], ebp
mov	[esp+12Ch+var_8C], ebp
mov	[esp+12Ch+var_88], 2
mov	[esp+12Ch+var_84], ebp
mov	[esp+12Ch+var_80], ebp
mov	[esp+12Ch+var_7C], 170h
mov	[esp+12Ch+var_78], ebp
mov	[esp+12Ch+var_74], ebp
mov	[esp+12Ch+var_70], ecx
mov	[esp+12Ch+var_6C], ebp
mov	[esp+12Ch+var_68], ebp
mov	[esp+12Ch+var_64], eax
mov	[esp+12Ch+var_60], ebp
mov	[esp+12Ch+var_5C], ebp
mov	[esp+12Ch+var_58], 0CE5363B4h
mov	[esp+12Ch+var_54], ebp
mov	[esp+12Ch+var_50], ebp
mov	[esp+12Ch+var_4C], 0CE5363B5h
mov	[esp+12Ch+var_48], ebp
mov	[esp+12Ch+var_44], ebp
mov	[esp+12Ch+var_40], 0CE536358h
mov	[esp+12Ch+var_3C], ebp
mov	[esp+12Ch+var_38], ebp
mov	[esp+12Ch+var_34], 0CE536359h
mov	[esp+12Ch+var_30], ebp
mov	[esp+12Ch+var_2C], ebp
mov	[esp+12Ch+var_28], 0CE53635Ah
mov	[esp+12Ch+var_24], ebp
mov	[esp+12Ch+var_20], ebp
mov	[esp+12Ch+var_1C], 0CE53635Bh
mov	[esp+12Ch+var_18], ebp
mov	[esp+12Ch+var_14], ebp
mov	[esp+12Ch+var_10], 0CE536360h
mov	[esp+12Ch+var_C], ebp
mov	[esp+12Ch+var_8], ebp
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
mov	[esp+128h+var_114], edi
cmp	edi, ebp
jnz	short loc_10028AC5
or	eax, 0FFFFFFFFh
jmp	loc_10028C8E
mov	ecx, [esp+128h+arg_0]
push	3
lea	eax, [esp+12Ch+var_EC]
push	eax
push	ecx
push	ebx
push	edi
call	sub_1002A310
add	esp, 14h
cmp	eax, ebp
jz	short loc_10028AE5
push	eax
jmp	short loc_10028AEE
cmp	[esp+128h+var_E4], 0FFFFFFFFh
jnz	short loc_10028B04
push	12h
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	esi, 0FFFFFFFFh
jmp	loc_10028C6C
push	3
lea	edx, [esp+12Ch+var_EC]
push	edx
push	esi
call	sub_1002C4F0
add	esp, 0Ch
mov	[esp+128h+var_100], eax
mov	[esp+128h+var_118], ebp
cmp	eax, ebp
jz	loc_10028CA7
mov	[esp+128h+var_C8], 0CE536358h
mov	[esp+128h+var_C4], 0CE536359h
mov	[esp+128h+var_C0], 0CE53635Ah
mov	[esp+128h+var_BC], 0CE53635Bh
mov	[esp+128h+var_B8], 0CE53635Dh
mov	[esp+128h+var_B4], 0CE53635Eh
mov	[esp+128h+var_B0], 0CE53635Fh
xor	ebx, ebx
mov	edi, edi
mov	eax, [esp+ebx*4+128h+var_C8]
mov	ecx, [esp+128h+arg_0]
mov	edx, [esp+128h+var_FC]
push	1
mov	[esp+12Ch+var_110], eax
mov	[esp+12Ch+var_F8], eax
lea	eax, [esp+12Ch+var_110]
push	eax
push	ecx
push	edx
push	edi
mov	[esp+13Ch+var_10C], ebp
mov	[esp+13Ch+var_F4], ebp
mov	[esp+13Ch+var_108], ebp
mov	[esp+13Ch+var_F0], ebp
call	sub_1002A310
mov	ecx, [esp+13Ch+var_100]
push	1
lea	eax, [esp+140h+var_F8]
push	eax
push	ecx
push	esi
push	edi
call	sub_1002A310
lea	edx, [esp+150h+var_110]
push	edx
lea	eax, [esp+154h+var_F8]
push	eax
call	sub_10028890
add	esp, 30h
test	eax, eax
jz	short loc_10028BEE
mov	edx, [esp+128h+var_100]
push	1
lea	ecx, [esp+12Ch+var_110]
push	ecx
push	edx
mov	edi, esi
call	sub_100276B0
add	esp, 0Ch
test	eax, eax
jz	short loc_10028BEA
mov	[esp+128h+var_118], 0FFFFFFFFh
call	PORT_GetError_Util
mov	[esp+128h+var_104], eax
mov	edi, [esp+128h+var_114]
inc	ebx
cmp	ebx, 7
jb	loc_10028B60
mov	ecx, [esp+128h+arg_0]
mov	edx, [esp+128h+var_FC]
push	1
lea	eax, [esp+12Ch+var_110]
push	eax
push	ecx
push	edx
push	edi
mov	[esp+13Ch+var_110], 0CE536360h
mov	[esp+13Ch+var_10C], ebp
mov	[esp+13Ch+var_108], ebp
call	sub_1002A310
add	esp, 14h
cmp	[esp+128h+var_108], 1
jnz	short loc_10028C68
mov	eax, [esp+128h+var_10C]
cmp	eax, ebp
jz	short loc_10028C68
cmp	byte ptr [eax],	1
jnz	short loc_10028C68
mov	ecx, [esp+128h+var_100]
push	1
lea	eax, [esp+12Ch+var_110]
push	eax
push	ecx
mov	edi, esi
call	sub_100276B0
add	esp, 0Ch
test	eax, eax
jz	short loc_10028C64
mov	[esp+128h+var_118], 0FFFFFFFFh
call	PORT_GetError_Util
mov	[esp+128h+var_104], eax
mov	edi, [esp+128h+var_114]
			
mov	esi, [esp+128h+var_118]
			
push	ebp
push	edi
call	PORT_FreeArena_Util
add	esp, 8
cmp	esi, 0FFFFFFFFh
jnz	short loc_10028C8C
mov	eax, [esp+128h+var_104]
cmp	eax, ebp
jz	short loc_10028C8C
push	eax
call	PORT_SetError_Util
add	esp, 4
			
mov	eax, esi
mov	ecx, [esp+128h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 118h
retn
mov	eax, [esp+128h+arg_0]
mov	ecx, [esp+128h+var_FC]
push	ebp
push	esi
push	edi
mov	esi, 0Eh
lea	ebx, [esp+134h+var_AC]
call	sub_10027720
add	esp, 0Ch
mov	esi, eax
jmp	short loc_10028C6C
align 10h
push	ebp
mov	ebp, [esp+4+arg_0]
push	0
push	esi
push	edi
call	sub_1002A210
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jnz	short loc_10028CF8
			
push	0FFFFE096h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebp
retn
cmp	eax, 4
ja	short loc_10028D4B
jz	short loc_10028D38
dec	eax
jz	short loc_10028D2A
dec	eax
jz	short loc_10028D1B
dec	eax
jnz	short loc_10028CE6
mov	ecx, [esp+4+arg_4]
push	ebp
push	esi
push	edi
mov	edx, ebx
call	sub_10027910
add	esp, 0Ch
pop	ebp
retn
push	esi
mov	edx, edi
mov	ecx, ebx
call	sub_10028080
add	esp, 4
pop	ebp
retn
push	ebp
push	esi
push	edi
push	ebx
call	sub_100282F0
add	esp, 10h
pop	ebp
retn
mov	eax, [esp+4+arg_4]
push	eax
push	ebp
push	esi
push	edi
push	ebx
call	sub_10027D40
add	esp, 14h
pop	ebp
retn
cmp	eax, 0CE534351h
jz	short loc_10028D7E
cmp	eax, 0CE534352h
jz	short loc_10028D6F
cmp	eax, 0CE534353h
jnz	short loc_10028CE6
push	esi
mov	edx, edi
mov	ecx, ebx
call	sub_10028900
add	esp, 4
pop	ebp
retn
push	esi
mov	edx, edi
mov	ecx, ebx
call	sub_100286E0
add	esp, 4
pop	ebp
retn
push	esi
mov	edx, edi
mov	ecx, ebx
call	sub_10028530
add	esp, 4
pop	ebp
retn
align 10h
			
sub	esp, 0Ch
xor	eax, eax
push	ebp
mov	ebp, [esp+10h+arg_10]
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_C], eax
cmp	[esp+10h+arg_C], eax
jle	loc_10028E7A
push	ebx
push	esi
push	edi
nop
mov	eax, [esp+1Ch+arg_18]
mov	ecx, [esp+1Ch+arg_14]
mov	edx, [esp+1Ch+arg_8]
mov	edi, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_0]
push	eax
mov	eax, [esp+20h+var_C]
mov	esi, [edx+eax*4]
push	ecx
call	sub_10028CD0
add	esp, 8
test	eax, eax
jz	short loc_10028E4D
mov	[esp+1Ch+var_8], 0FFFFFFFFh
call	PORT_GetError_Util
mov	[esp+1Ch+var_4], eax
test	ebp, ebp
jz	short loc_10028E4D
mov	edi, [ebp+8]
mov	ecx, [esp+1Ch+arg_8]
mov	edx, [esp+1Ch+var_C]
mov	ebx, [ecx+edx*4]
push	24h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10028E4D
push	10h
push	edi
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jz	short loc_10028E4D
mov	ecx, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+var_4]
mov	[eax+8], ecx
mov	[eax+0Ch], ebx
mov	[esi+8], eax
mov	[esi+0Ch], edx
mov	dword ptr [esi], 0
mov	eax, [ebp+4]
test	eax, eax
jz	short loc_10028E41
mov	[eax], esi
jmp	short loc_10028E44
mov	[ebp+0], esi
mov	eax, [ebp+4]
mov	[esi+4], eax
mov	[ebp+4], esi
			
mov	eax, [esp+1Ch+var_C]
inc	eax
mov	[esp+1Ch+var_C], eax
cmp	eax, [esp+1Ch+arg_C]
jl	loc_10028DB0
mov	esi, [esp+1Ch+var_8]
test	esi, esi
jz	short loc_10028E75
mov	ecx, [esp+1Ch+var_4]
push	ecx
call	PORT_SetError_Util
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebx
pop	ebp
add	esp, 0Ch
retn
align 10h
public PK11_MergeTokens
sub	esp, 28h
mov	edx, [esp+28h+arg_C]
push	ebx
push	esi
mov	esi, 1
lea	eax, [esp+30h+var_25]
push	edx
mov	[esp+34h+var_14], eax
mov	eax, [esp+34h+arg_0]
xor	ebx, ebx
lea	ecx, [esp+34h+var_20]
push	esi
push	eax
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_25], 1
mov	[esp+3Ch+var_20], 3
mov	[esp+3Ch+var_18], esi
mov	[esp+3Ch+var_10], esi
mov	[esp+3Ch+var_C], ebx
mov	[esp+3Ch+var_8], ecx
mov	[esp+3Ch+var_4], 4
call	PK11_Authenticate
add	esp, 0Ch
cmp	eax, ebx
jnz	loc_10028FBE
push	ebp
mov	ebp, [esp+34h+arg_10]
push	ebp
push	esi
mov	esi, [esp+3Ch+arg_4]
push	esi
call	PK11_Authenticate
add	esp, 0Ch
cmp	eax, ebx
jnz	loc_10028FBD
push	edi
lea	ecx, [esp+38h+var_24]
push	ecx
push	2
lea	edx, [esp+40h+var_18]
push	edx
push	esi
call	sub_1002C5B0
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_10028F53
mov	eax, [esp+38h+arg_C]
mov	ecx, [esp+38h+arg_8]
mov	edx, [esp+38h+var_24]
push	ebp
push	eax
mov	eax, [esp+40h+arg_0]
push	ecx
push	edx
push	edi
push	esi
push	eax
call	sub_10028D90
mov	ebx, eax
add	esp, 1Ch
test	ebx, ebx
jz	short loc_10028F42
call	PORT_GetError_Util
mov	[esp+38h+var_1C], eax
push	edi
call	PORT_Free_Util
add	esp, 4
mov	[esp+38h+var_24], 0
lea	ecx, [esp+38h+var_24]
push	ecx
push	1
lea	edx, [esp+40h+var_18]
push	edx
push	esi
call	sub_1002C5B0
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_10028F79
pop	edi
pop	ebp
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 28h
retn
mov	eax, [esp+38h+arg_C]
mov	ecx, [esp+38h+arg_8]
mov	edx, [esp+38h+var_24]
push	ebp
push	eax
mov	eax, [esp+40h+arg_0]
push	ecx
push	edx
push	edi
push	esi
push	eax
call	sub_10028D90
mov	esi, eax
add	esp, 1Ch
test	esi, esi
jnz	short loc_10028FB1
test	ebx, ebx
jz	short loc_10028FB1
mov	ecx, [esp+38h+var_1C]
push	ecx
mov	esi, ebx
call	PORT_SetError_Util
add	esp, 4
			
push	edi
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	edi
pop	ebp
pop	esi
pop	ebx
add	esp, 28h
retn
align 10h
public PK11_CreateMergeLog
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10028FFD
push	24h
push	esi
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_10029001
push	eax
push	esi
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
pop	esi
retn
mov	[eax+8], esi
mov	dword ptr [eax+0Ch], 1
pop	esi
retn
align 10h
public PK11_DestroyMergeLog
mov	eax, [esp+arg_0]
test	eax, eax
jz	short locret_1002902A
mov	eax, [eax+8]
test	eax, eax
jz	short locret_1002902A
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
retn
align 10h
sub	esp, 50h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+50h+var_4], eax
mov	eax, [esp+50h+arg_4]
mov	ecx, [eax+44h]
mov	edx, [eax+40h]
push	ebx
push	ebp
mov	ebp, [esp+58h+arg_8]
push	esi
mov	esi, [esp+5Ch+arg_0]
push	edi
push	ecx
push	edx
xor	ebx, ebx
lea	eax, [esp+68h+var_18]
push	eax
mov	edi, 0CE5363B4h
push	4
mov	[esp+70h+var_34], ebx
mov	[esp+70h+var_30], ebx
mov	[esp+70h+var_2C], ebx
mov	[esp+70h+var_28], edi
mov	[esp+70h+var_24], ebx
mov	[esp+70h+var_20], ebx
mov	[esp+70h+var_1C], 0CE534353h
call	PK11_HashBuf
push	2
lea	eax, [esp+74h+var_34]
push	eax
lea	ecx, [esp+78h+var_1C]
lea	edx, [esp+78h+var_18]
push	esi
mov	[esp+7Ch+var_34], ebx
mov	[esp+7Ch+var_30], ecx
mov	[esp+7Ch+var_2C], 4
mov	[esp+7Ch+var_28], edi
mov	[esp+7Ch+var_24], edx
mov	[esp+7Ch+var_20], 14h
call	sub_1002C4F0
mov	edi, eax
add	esp, 1Ch
cmp	edi, ebx
jnz	short loc_100290DC
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+50h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 50h
retn
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+60h+var_44], eax
cmp	eax, ebx
jz	short loc_100290C7
lea	ecx, [esp+60h+var_50]
push	ecx
push	eax
push	0CE536358h
push	edi
push	esi
mov	[esp+74h+var_4C], ebx
mov	[esp+74h+var_48], ebx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_1002911E
mov	edx, [esp+60h+var_4C]
mov	eax, [edx]
mov	[esp+60h+var_38], eax
jmp	short loc_10029122
mov	[esp+60h+var_38], ebx
mov	edx, [esp+60h+var_44]
lea	ecx, [esp+60h+var_50]
push	ecx
push	edx
push	0CE536359h
push	edi
push	esi
mov	[esp+74h+var_4C], ebx
mov	[esp+74h+var_48], ebx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_10029153
mov	eax, [esp+60h+var_4C]
mov	ecx, [eax]
mov	[esp+60h+var_3C], ecx
jmp	short loc_10029157
mov	[esp+60h+var_3C], ebx
mov	eax, [esp+60h+var_44]
lea	edx, [esp+60h+var_50]
push	edx
push	eax
push	0CE53635Ah
push	edi
push	esi
mov	[esp+74h+var_4C], ebx
mov	[esp+74h+var_48], ebx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_10029188
mov	ecx, [esp+60h+var_4C]
mov	edx, [ecx]
mov	[esp+60h+var_40], edx
jmp	short loc_1002918C
mov	[esp+60h+var_40], ebx
mov	ecx, [esp+60h+var_44]
lea	eax, [esp+60h+var_50]
push	eax
push	ecx
push	0CE53635Bh
push	edi
push	esi
mov	[esp+74h+var_4C], ebx
mov	[esp+74h+var_48], ebx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_100291B9
mov	edx, [esp+60h+var_4C]
mov	ecx, [edx]
jmp	short loc_100291BB
xor	ecx, ecx
mov	eax, [esp+60h+var_38]
mov	edx, 3
lea	esi, [edx+35h]
cmp	eax, 0CE534351h
jnz	short loc_100291D3
or	[ebp+0], edx
jmp	short loc_100291DD
cmp	eax, 0CE534352h
jnz	short loc_100291DD
or	[ebp+0], esi
			
cmp	[esp+60h+var_3C], 0CE534352h
jnz	short loc_100291EE
or	dword ptr [ebp+0], 80h
cmp	ecx, 0CE534351h
jnz	short loc_100291FB
or	[ebp+4], edx
jmp	short loc_10029206
cmp	ecx, 0CE534352h
jnz	short loc_10029206
or	[ebp+4], esi
			
mov	eax, [esp+60h+var_40]
cmp	eax, 0CE534351h
jnz	short loc_10029216
or	[ebp+8], edx
jmp	short loc_10029220
cmp	eax, 0CE534352h
jnz	short loc_10029220
or	[ebp+8], esi
			
mov	eax, [esp+60h+var_44]
push	ebx
push	eax
call	PORT_FreeArena_Util
mov	ecx, [esp+68h+var_4]
add	esp, 8
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
mov	eax, 1
call	@__security_check_cookie@4 
add	esp, 50h
retn
align 10h
sub	esp, 34h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+34h+var_4], eax
mov	edx, [esp+34h+arg_4]
mov	eax, [esp+34h+arg_0]
push	ebx
push	ebp
push	edi
mov	edi, [esp+40h+arg_8]
push	3
lea	ecx, [esp+44h+var_28]
push	ecx
push	edx
xor	ebx, ebx
push	eax
mov	eax, [edi]
push	eax
mov	[esp+54h+var_28], 11h
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_20], ebx
mov	[esp+54h+var_1C], 0CE534358h
mov	[esp+54h+var_18], ebx
mov	[esp+54h+var_14], ebx
mov	[esp+54h+var_10], 0CE534351h
mov	[esp+54h+Src], ebx
mov	[esp+54h+Size],	ebx
or	ebp, 0FFFFFFFFh
call	sub_1002A310
add	esp, 14h
cmp	eax, ebx
jz	short loc_100292DD
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
mov	eax, ebp
pop	ebp
pop	ebx
mov	ecx, [esp+34h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 34h
retn
cmp	[esp+40h+var_18], ebx
jnz	short loc_10029304
push	0FFFFE021h
call	PORT_SetError_Util
add	esp, 4
pop	edi
mov	eax, ebp
pop	ebp
pop	ebx
mov	ecx, [esp+34h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 34h
retn
mov	ecx, [edi]
push	esi
push	0Ch
push	ecx
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jz	loc_100293F3
mov	edx, [esp+44h+var_18]
cmp	[edx], bl
jz	short loc_10029329
mov	[esi+4], ebx
jmp	short loc_10029330
mov	dword ptr [esi+4], 1
mov	eax, [esp+44h+var_24]
mov	ecx, [esp+44h+var_20]
mov	[esp+44h+var_30], eax
mov	[esp+44h+var_2C], ecx
mov	ecx, [edi]
mov	[esp+44h+var_34], ebx
mov	edx, [esi+4]
push	edx
lea	eax, [esp+48h+var_34]
push	eax
push	ecx
call	CERT_DecodeDERCrl
add	esp, 0Ch
mov	[esi+8], eax
cmp	eax, ebx
jz	loc_100293F3
cmp	[esp+44h+Src], ebx
jz	short loc_100293AF
mov	ebp, [esp+44h+Size]
mov	eax, [edi]
lea	edx, [ebp+1]
push	edx
push	eax
call	PORT_ArenaAlloc_Util
mov	ecx, [esi+8]
mov	[ecx+0A8h], eax
mov	edx, [esi+8]
mov	eax, [edx+0A8h]
add	esp, 8
cmp	eax, ebx
jz	short loc_10029408
mov	ecx, [esp+44h+Src]
push	ebp		
push	ecx		
push	eax		
call	memcpy
mov	edx, [esi+8]
mov	eax, [edx+0A8h]
add	esp, 0Ch
mov	[eax+ebp], bl
jmp	short loc_100293B5
mov	[eax+0A8h], ebx
mov	[esi], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_100293D8
mov	[eax], esi
mov	[edi+0Ch], esi
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+34h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 34h
retn
mov	[edi+8], esi
mov	[edi+0Ch], esi
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+34h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 34h
retn
			
pop	esi
pop	edi
mov	eax, ebp
pop	ebp
pop	ebx
mov	ecx, [esp+34h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 34h
retn
mov	ecx, [esp+44h+var_4]
pop	esi
pop	edi
pop	ebp
pop	ebx
xor	ecx, esp
or	eax, 0FFFFFFFFh
call	@__security_check_cookie@4 
add	esp, 34h
retn
align 10h
sub	esp, 30h
mov	ecx, [esp+30h+arg_4]
lea	eax, [esp+30h+var_2C]
mov	[esp+30h+var_14], eax
mov	[esp+30h+var_2C], 0CE534351h
mov	[esp+30h+var_2D], 0
mov	[esp+30h+var_18], 0
mov	[esp+30h+var_10], 4
lea	eax, [esp+30h+var_C]
cmp	ecx, 0FFFFFFFFh
jz	short loc_1002947A
test	ecx, ecx
setz	cl
lea	edx, [esp+30h+var_2D]
mov	[esp+30h+var_2D], cl
mov	[esp+30h+var_C], 0CE534358h
mov	[esp+30h+var_8], edx
mov	[esp+30h+var_4], 1
lea	eax, [esp+30h]
mov	ecx, [esp+30h+arg_0]
mov	[esp+30h+var_24], ecx
lea	edx, [esp+30h+var_18]
mov	ecx, edx
sub	eax, ecx
mov	ecx, eax
mov	[esp+30h+var_20], edx
mov	eax, 2AAAAAABh
imul	ecx
mov	ecx, [esp+30h+arg_8]
sar	edx, 1
mov	eax, edx
push	ecx
shr	eax, 1Fh
add	eax, edx
push	0
lea	edx, [esp+38h+var_28]
push	edx
push	offset sub_1002C7E0
mov	[esp+40h+var_28], offset sub_10029250
mov	[esp+40h+var_1C], eax
call	sub_1002C850
add	esp, 40h
retn
align 10h
sub	esp, 38h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+38h+var_4], eax
mov	edx, [esp+38h+arg_4]
mov	eax, [esp+38h+arg_0]
push	ebx
push	ebp
push	esi
push	edi
mov	edi, [esp+48h+arg_8]
mov	esi, [edi]
push	3
xor	ebx, ebx
lea	ecx, [esp+4Ch+var_28]
push	ecx
push	edx
push	eax
push	ebx
mov	[esp+5Ch+var_2C], eax
xor	ebp, ebp
mov	[esp+5Ch+var_30], esi
mov	[esp+5Ch+var_28], 11h
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_20], ebx
mov	[esp+5Ch+var_1C], 0CE534358h
mov	[esp+5Ch+var_18], ebx
mov	[esp+5Ch+var_14], ebx
mov	[esp+5Ch+var_10], 0CE534351h
mov	[esp+5Ch+Src], ebx
mov	[esp+5Ch+Size],	ebx
mov	[esp+5Ch+var_38], 0FFFFFFFFh
mov	[esp+5Ch+var_34], ebx
call	sub_1002A310
add	esp, 14h
cmp	eax, ebx
jz	short loc_10029562
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	loc_10029674
cmp	[esp+48h+var_18], ebx
jnz	short loc_10029577
push	0FFFFE021h
call	PORT_SetError_Util
jmp	loc_10029671
mov	eax, [esi]
push	0Ch
push	eax
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jz	loc_10029674
push	ebx
push	ebx
push	ebx
mov	dword ptr [esi+4], 1
call	SECITEM_AllocItem_Util
mov	ebp, eax
add	esp, 0Ch
cmp	ebp, ebx
jz	loc_10029674
mov	[ebp+0], ebx
mov	ecx, [esp+48h+var_24]
mov	[ebp+4], ecx
mov	edx, [esp+48h+var_20]
mov	[ebp+8], edx
mov	eax, [edi+4]
mov	ecx, [esi+4]
push	eax
push	ecx
push	ebp
push	ebx
call	CERT_DecodeDERCrlWithFlags
add	esp, 10h
mov	[esi+8], eax
cmp	eax, ebx
jz	loc_10029674
mov	[esp+48h+var_34], 1
cmp	[esp+48h+Src], ebx
jz	short loc_10029630
mov	edi, [esp+48h+Size]
cmp	edi, ebx
jz	short loc_10029630
mov	eax, [eax]
lea	edx, [edi+1]
push	edx
push	eax
call	PORT_ArenaAlloc_Util
mov	ecx, [esi+8]
mov	[ecx+0A8h], eax
mov	edx, [esi+8]
mov	eax, [edx+0A8h]
add	esp, 8
cmp	eax, ebx
jz	short loc_10029674
mov	ecx, [esp+48h+Src]
push	edi		
push	ecx		
push	eax		
call	memcpy
mov	edx, [esi+8]
mov	eax, [edx+0A8h]
add	esp, 0Ch
mov	[edi+eax], bl
jmp	short loc_10029636
			
mov	[eax+0A8h], ebx
mov	ecx, [esp+48h+var_30]
mov	[esi], ebx
mov	eax, [ecx+0Ch]
cmp	eax, ebx
jz	short loc_10029647
mov	[eax], esi
jmp	short loc_1002964A
mov	[ecx+8], esi
mov	[ecx+0Ch], esi
mov	ecx, [esp+48h+var_2C]
push	ecx
mov	[esp+4Ch+var_38], ebx
call	PK11_ReferenceSlot
mov	edx, [esi+8]
mov	ecx, [esp+4Ch+arg_4]
mov	[edx+0B0h], eax
mov	eax, [esi+8]
mov	[eax+0B4h], ecx
add	esp, 4
			
lea	esi, [esp+48h+var_18]
mov	edi, 2
lea	ecx, [ecx+0]
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_1002968F
push	eax
call	PORT_Free_Util
add	esp, 4
add	esi, 0Ch
dec	edi
jnz	short loc_10029680
mov	eax, [esp+48h+var_24]
cmp	eax, ebx
jz	short loc_100296AC
cmp	[esp+48h+var_34], ebx
jnz	short loc_100296AC
push	eax
call	PORT_Free_Util
add	esp, 4
			
cmp	ebp, ebx
jz	short loc_100296C7
cmp	[esp+48h+var_34], ebx
jnz	short loc_100296C7
push	1
push	ebp
mov	[ebp+4], ebx
mov	[ebp+8], ebx
call	SECITEM_FreeItem_Util
add	esp, 8
			
mov	ecx, [esp+48h+var_4]
mov	eax, [esp+48h+var_38]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
align 10h
sub	esp, 34h
mov	ecx, [esp+34h+arg_0]
lea	eax, [esp+34h+var_34]
mov	[esp+34h+var_30], ecx
mov	ecx, [esp+34h+arg_4]
mov	[esp+34h+var_14], eax
mov	[esp+34h+var_34], 0CE534351h
mov	[esp+34h+var_18], 0
mov	[esp+34h+var_10], 4
lea	eax, [esp+34h+var_C]
mov	[esp+34h+var_2C], 0Fh
test	ecx, ecx
jz	short loc_10029737
mov	eax, [ecx+8]
mov	edx, [ecx+4]
mov	[esp+34h+var_4], eax
mov	[esp+34h+var_C], 101h
mov	[esp+34h+var_8], edx
lea	eax, [esp+34h]
lea	ecx, [esp+34h+var_30]
mov	[esp+34h+var_24], ecx
lea	edx, [esp+34h+var_18]
mov	ecx, edx
sub	eax, ecx
mov	ecx, eax
mov	[esp+34h+var_20], edx
mov	eax, 2AAAAAABh
imul	ecx
mov	ecx, [esp+34h+arg_8]
sar	edx, 1
mov	eax, edx
push	ecx
shr	eax, 1Fh
add	eax, edx
push	0
lea	edx, [esp+3Ch+var_28]
push	edx
push	offset sub_1002C7E0
mov	[esp+44h+var_28], offset sub_100294D0
mov	[esp+44h+var_1C], eax
call	sub_1002C850
add	esp, 44h
retn
align 10h
sub	esp, 8
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
call	sub_1004A850
xor	ebp, ebp
push	ebp
mov	esi, eax
call	PORT_SetError_Util
mov	eax, [esp+1Ch+arg_8]
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax]
add	esp, 4
mov	[esp+18h+var_8], ecx
mov	[esp+18h+var_4], edx
test	eax, eax
jz	short loc_10029819
push	eax
call	sub_10036730
push	ebp
push	esi
mov	edi, eax
call	sub_1004A080
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	loc_10029941
push	ebp
push	ebp
push	2
lea	ecx, [esp+24h+var_8]
push	ecx
push	ebp
push	edi
call	sub_1004D960
mov	edi, eax
push	ebp
push	edi
push	esi
call	sub_1004A450
push	edi
call	sub_10050550
push	ebp
push	ebp
push	ebp
push	esi
call	sub_1004A170
push	esi
mov	edi, eax
call	sub_10049AD0
add	esp, 3Ch
jmp	short loc_10029829
lea	edx, [esp+18h+var_8]
push	edx
push	esi
call	sub_100477D0
add	esp, 8
mov	edi, eax
test	edi, edi
jz	loc_10029912
mov	eax, [edi]
test	eax, eax
jz	loc_10029909
mov	edx, [esp+18h+arg_C]
mov	ecx, edi
mov	eax, [eax+30h]
test	eax, eax
jnz	short loc_10029851
cmp	edx, 1
jz	short loc_10029862
test	eax, eax
jz	short loc_10029856
cmp	edx, 1
jnz	short loc_10029862
mov	eax, [ecx+4]
add	ecx, 4
test	eax, eax
jnz	short loc_10029841
jmp	short loc_1002986F
			
mov	eax, [ecx]
push	eax
call	sub_10046950
add	esp, 4
mov	ebx, eax
push	edi
call	sub_10049A90
add	esp, 4
test	ebx, ebx
jnz	short loc_1002988B
push	0FFFFE089h
call	PORT_SetError_Util
jmp	loc_1002993E
mov	eax, [ebx+2Ch]
test	eax, eax
jz	short loc_100298A5
push	eax
call	PORT_Strdup_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	loc_10029938
mov	ecx, [ebx+28h]
push	ecx
push	0
push	0
call	SECITEM_AllocItem_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_1002992B
mov	edx, [ebx+28h]
mov	eax, [ebx+24h]
mov	ecx, [esi+4]
push	edx		
push	eax		
push	ecx		
call	memcpy
mov	edx, [ebx+10h]
mov	eax, [edx]
mov	ecx, [eax+4]
mov	edx, [ecx+34h]
push	edx
call	PK11_ReferenceSlot
mov	ecx, [esp+28h+arg_0]
mov	[ecx], eax
mov	edx, [ebx+10h]
mov	eax, [edx]
mov	ecx, [eax]
mov	edx, [esp+28h+arg_4]
mov	eax, [esp+28h+arg_10]
mov	[edx], ecx
push	ebx
mov	[eax], ebp
call	sub_100468D0
add	esp, 14h
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
push	edi
call	sub_10049A90
add	esp, 4
call	sub_10050A60
cmp	eax, ds:dword_100A7E44
jnz	short loc_10029941
push	0FFFFE089h
call	PORT_SetError_Util
jmp	short loc_1002993E
test	ebp, ebp
jz	short loc_10029938
push	ebp
call	PORT_Free_Util
add	esp, 4
			
push	ebx
call	sub_100468D0
			
add	esp, 4
			
call	PORT_GetError_Util
test	eax, eax
jnz	short loc_10029957
push	0FFFFE089h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
align 10h
sub	esp, 10h
mov	eax, [esp+10h+arg_0]
push	esi
push	eax
call	sub_10036730
mov	ecx, [esp+18h+arg_8]
mov	edx, [ecx+4]
mov	ecx, [ecx+8]
mov	[esp+18h+var_4], ecx
mov	ecx, [esp+18h+arg_4]
mov	[esp+18h+var_8], edx
mov	edx, [ecx+4]
mov	ecx, [ecx+8]
mov	[esp+18h+var_C], ecx
xor	ecx, ecx
cmp	[esp+18h+arg_10], 1
push	1
setnz	cl
mov	[esp+1Ch+var_10], edx
mov	edx, [esp+1Ch+arg_C]
push	edx
lea	edx, [esp+20h+var_10]
push	ecx
push	edx
lea	ecx, [esp+28h+var_8]
push	ecx
push	0
push	eax
call	sub_1004D810
add	esp, 20h
test	eax, eax
jz	short loc_100299DF
mov	esi, [eax]
push	eax
call	sub_1004E6D0
add	esp, 4
mov	eax, esi
pop	esi
add	esp, 10h
retn
push	0FFFFE0ABh
xor	esi, esi
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
add	esp, 10h
retn
align 10h
public SEC_DeletePermCRL
			
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+0B0h]
test	eax, eax
jnz	short loc_10029A21
push	0FFFFE021h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	esi
push	edi
push	eax
call	sub_10036730
push	10h
push	0
mov	edi, eax
call	sub_100504B0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10029A44
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	edi
call	sub_1004C2A0
mov	[esi+4], eax
mov	eax, [ebx+0B4h]
push	esi
mov	[esi], eax
mov	dword ptr [esi+8], 1
call	sub_1004C670
push	esi
mov	edi, eax
call	sub_1004E6D0
add	esp, 0Ch
mov	eax, edi
pop	edi
neg	eax
pop	esi
sbb	eax, eax
pop	ebx
retn
align 10h
			
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	eax, [esp+60h+arg_C]
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+68h+arg_0]
push	esi
mov	esi, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_5C], eax
mov	eax, [esp+6Ch+arg_4]
push	edi
mov	edx, 0CE534352h
mov	ecx, 101h
xor	edi, edi
mov	[esp+70h+var_58], ebp
mov	[esp+70h+var_38], esi
mov	[esp+70h+var_3C], edx
mov	[esp+70h+var_28], ecx
mov	[esp+70h+var_24], ebx
mov	[esp+70h+var_20], ebx
mov	[esp+70h+var_1C], ebx
mov	[esp+70h+var_18], ebx
mov	[esp+70h+var_14], ebx
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_C], ebx
mov	[esp+70h+var_8], ebx
mov	[esp+70h+var_54], ecx
mov	[esp+70h+var_50], ebx
mov	[esp+70h+var_4C], ebx
mov	[esp+70h+var_48], 11h
mov	[esp+70h+var_44], ebx
mov	[esp+70h+var_40], ebx
mov	[esp+70h+var_60], ebx
cmp	eax, ebx
jz	loc_10029CDC
cmp	[eax], bl
jz	loc_10029CDC
mov	[esp+70h+var_28], ecx
mov	ecx, [esi+4]
mov	[esp+70h+var_24], ecx
mov	ecx, [esi+8]
mov	[esp+70h+var_20], ecx
lea	ecx, [esp+70h+var_3C]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], ebx
mov	[esp+70h+var_18], ecx
mov	[esp+70h+var_14], 4
mov	[esp+70h+var_C], eax
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
cmp	cl, bl
jnz	short loc_10029B45
sub	eax, edx
mov	[esp+70h+var_8], eax
mov	eax, [ebp+0]
cmp	eax, ebx
jz	short loc_10029B6D
push	3
lea	edx, [esp+74h+var_28]
push	edx
push	eax
call	sub_1002C4F0
add	esp, 0Ch
mov	edi, eax
jmp	short loc_10029BD4
push	ebx
push	1
push	ebx
push	0FFFFFFFFh
call	PK11_GetAllTokens
mov	ebp, eax
add	esp, 10h
cmp	ebp, ebx
jz	loc_10029CE9
mov	esi, [ebp+0]
cmp	esi, ebx
jz	short loc_10029BC3
lea	esp, [esp+0]
mov	ecx, [esi+8]
push	3
lea	eax, [esp+74h+var_28]
push	eax
push	ecx
call	sub_1002C4F0
mov	edi, eax
add	esp, 0Ch
cmp	edi, ebx
jnz	short loc_10029BB1
mov	esi, [esi]
cmp	esi, ebx
jnz	short loc_10029B90
jmp	short loc_10029BC3
mov	edx, [esi+8]
push	edx
call	PK11_ReferenceSlot
mov	ecx, [esp+74h+var_58]
add	esp, 4
mov	[ecx], eax
			
push	ebp
call	PK11_FreeSlotList
mov	ebp, [esp+74h+var_58]
mov	esi, [esp+74h+var_38]
add	esp, 4
cmp	edi, ebx
jnz	short loc_10029BE2
push	0FFFFE03Ah
jmp	loc_10029CE1
cmp	[esp+70h+var_5C], ebx
jz	short loc_10029BF8
mov	[esp+70h+var_54], 0CE534354h
mov	[esp+70h+var_50], ebx
mov	[esp+70h+var_4C], ebx
mov	eax, [ebp+0]
push	2
lea	edx, [esp+74h+var_54]
push	edx
push	edi
push	eax
push	ebx
call	sub_1002A310
add	esp, 14h
cmp	eax, ebx
jz	short loc_10029C65
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	edi, [esp+78h+var_5C]
add	esp, 8
			
mov	eax, [esp+70h+var_44]
cmp	eax, ebx
jz	short loc_10029C35
push	eax
call	PORT_Free_Util
add	esp, 4
			
cmp	edi, ebx
jz	short loc_10029C3D
cmp	[edi], ebx
jnz	short loc_10029C4E
			
mov	eax, [esp+70h+var_50]
cmp	eax, ebx
jz	short loc_10029C4E
push	eax
call	PORT_Free_Util
add	esp, 4
			
mov	eax, [esp+70h+var_60]
pop	edi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+60h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
mov	edi, [esp+70h+var_5C]
cmp	edi, ebx
jnz	short loc_10029C8F
mov	ecx, [esp+70h+var_50]
mov	edx, [esp+70h+var_4C]
lea	eax, [esp+70h+var_34]
push	esi
push	eax
mov	[esp+78h+var_30], ecx
mov	[esp+78h+var_2C], edx
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	short loc_10029C24
push	0Ch
call	PORT_ZAlloc_Util
add	esp, 4
mov	[esp+70h+var_60], eax
cmp	eax, ebx
jz	short loc_10029C24
mov	ecx, [esp+70h+var_44]
mov	[eax+4], ecx
mov	edx, [esp+70h+var_40]
mov	[eax+8], edx
cmp	edi, ebx
jz	short loc_10029C3D
push	0Ch
call	PORT_ZAlloc_Util
add	esp, 4
mov	[edi], eax
cmp	eax, ebx
jz	loc_10029C35
mov	ecx, [esp+70h+var_50]
mov	[eax+4], ecx
mov	edx, [edi]
mov	eax, [esp+70h+var_4C]
mov	[edx+8], eax
jmp	loc_10029C35
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
push	ebx
push	ebp
push	esi
mov	eax, 1
lea	esi, [esp+68h+var_54]
mov	[esp+68h+var_48], esi
mov	[esp+68h+var_59], al
mov	[esp+68h+var_40], eax
mov	[esp+68h+var_38], eax
mov	eax, [esp+68h+arg_8]
lea	esi, [esp+68h+var_59]
xor	ebx, ebx
mov	[esp+68h+var_3C], esi
mov	esi, [eax+4]
mov	eax, [eax+8]
mov	ecx, 0CE534352h
mov	[esp+68h+var_2C], eax
mov	eax, [esp+68h+arg_4]
mov	ebp, 0CE534354h
mov	edx, 11h
push	edi
mov	edi, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_30], esi
mov	[esp+6Ch+var_54], ecx
mov	[esp+6Ch+var_1C], ebp
mov	[esp+6Ch+var_18], ebx
mov	[esp+6Ch+var_14], ebx
mov	[esp+6Ch+var_10], edx
mov	[esp+6Ch+var_C], ebx
mov	[esp+6Ch+var_8], ebx
mov	[esp+6Ch+var_50], ebx
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_4C], ebx
mov	[esp+6Ch+var_44], 4
mov	[esp+6Ch+var_34], 101h
mov	[esp+6Ch+var_28], ecx
mov	[esp+6Ch+var_24], eax
lea	esi, [eax+1]
mov	cl, [eax]
inc	eax
cmp	cl, bl
jnz	short loc_10029DA1
mov	ecx, [esp+6Ch+arg_10]
sub	eax, esi
inc	eax
mov	[esp+6Ch+var_20], eax
lea	eax, [esp+6Ch+var_1C]
cmp	ecx, ebx
jz	short loc_10029DEA
mov	eax, [ecx+4]
mov	ecx, [ecx+8]
mov	[esp+6Ch+var_18], eax
mov	eax, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_10], edx
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	[esp+6Ch+var_8], eax
mov	[esp+6Ch+var_1C], ebp
mov	[esp+6Ch+var_14], ecx
mov	[esp+6Ch+var_C], edx
lea	eax, [esp+6Ch+var_4]
lea	ecx, [esp+6Ch+var_4C]
sub	eax, ecx
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
add	esi, edx
cmp	edi, ebx
jnz	short loc_10029E11
call	PK11_GetInternalKeySlot
mov	edi, eax
mov	[esp+6Ch+var_58], edi
push	edi
call	sub_10035690
mov	ebp, eax
add	esp, 4
cmp	ebp, ebx
jnz	short loc_10029E54
push	0FFFFE042h
call	PORT_SetError_Util
mov	eax, [esp+70h+var_58]
add	esp, 4
cmp	eax, ebx
jz	short loc_10029E3E
push	eax
call	PK11_FreeSlot
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
mov	edx, [edi]
mov	edx, [edx+52h]
lea	eax, [esp+6Ch+var_50]
push	eax
push	esi
lea	ecx, [esp+74h+var_4C]
push	ecx
push	ebp
call	edx
add	esp, 10h
cmp	eax, ebx
jz	short loc_10029E7D
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
push	ebp
push	edi
call	sub_10035750
mov	eax, [esp+74h+var_58]
add	esp, 8
cmp	eax, ebx
jz	short loc_10029E98
push	eax
call	PK11_FreeSlot
add	esp, 4
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
public PK11_ImportCRL
			
			
mov	eax, [esp+arg_1C]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_18]
push	ebx
push	ebp
mov	ebp, [esp+8+arg_C]
push	esi
push	edi
push	eax
push	ebp
push	ecx
push	edx
xor	edi, edi
xor	ebx, ebx
call	CERT_DecodeDERCrlWithFlags
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_10029F13
cmp	ebp, 1
jnz	short loc_10029F01
call	PORT_GetError_Util
cmp	eax, 0FFFFE009h
jnz	loc_10029FB3
push	0FFFFE021h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10029FB3
push	0FFFFE03Eh
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10029FB3
test	[esp+10h+arg_14], 1
jnz	short loc_10029F94
call	CERT_GetDefaultCertDB
lea	ecx, [esi+2Ch]
push	ecx
push	eax
call	CERT_FindCertByName
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10029F44
push	0FFFFE00Dh
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10029FB3
push	2
push	edi
call	CERT_CheckCertUsage
add	esp, 8
test	eax, eax
jnz	short loc_10029FB3
mov	edx, [esp+10h+arg_10]
push	edx
call	ds:PR_Now
push	edx
push	eax
lea	eax, [esi+78h]
push	edi
push	eax
call	CERT_VerifySignedData
add	esp, 14h
test	eax, eax
jz	short loc_10029F94
cmp	ebp, 1
jnz	short loc_10029F85
push	0FFFFE020h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10029FB3
push	0FFFFE03Ch
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10029FB3
			
mov	ecx, [esp+10h+arg_4]
mov	edx, [esp+10h+arg_8]
mov	eax, [esp+10h+arg_0]
push	ebp
push	ecx
push	esi
push	edx
push	eax
call	sub_10041930
mov	ebx, eax
add	esp, 14h
test	ebx, ebx
jnz	short loc_10029FBC
			
push	esi
call	SEC_DestroyCrl
add	esp, 4
test	edi, edi
jz	short loc_10029FC9
push	edi
call	CERT_DestroyCertificate
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
public PK11_BlockData
			
push	esi
push	0Ch
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10029FE3
pop	esi
retn
mov	ecx, [esp+4+arg_4]
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+8]
lea	eax, [eax+ecx-1]
xor	edx, edx
div	ecx
imul	eax, ecx
push	eax
mov	[esi+8], eax
call	PORT_ZAlloc_Util
add	esp, 4
mov	[esi+4], eax
test	eax, eax
jnz	short loc_1002A01B
push	esi
call	PORT_Free_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
retn
mov	ecx, [esi+8]
push	ecx		
sub	ecx, [edi+8]
push	ecx		
push	eax		
call	memset
mov	ecx, [edi+8]
mov	edx, [edi+4]
mov	eax, [esi+4]
push	ecx		
push	edx		
push	eax		
call	memcpy
add	esp, 18h
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
public PK11_DestroyObject
			
push	esi
mov	esi, [esp+4+arg_0]
push	edi
push	esi
call	sub_10035650
mov	ecx, [esp+0Ch+arg_4]
mov	eax, [esi]
mov	edx, [esi+38h]
mov	eax, [eax+5Ah]
push	ecx
push	edx
call	eax
push	esi
mov	edi, eax
call	sub_10035670
add	esp, 10h
neg	edi
sbb	eax, eax
pop	edi
pop	esi
retn
align 10h
public PK11_DestroyTokenObject
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
push	edi
xor	ebx, ebx
call	sub_10035690
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1002A0AC
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	ecx, [esp+0Ch+arg_4]
mov	eax, [edi]
mov	edx, [eax+5Ah]
push	ecx
push	esi
call	edx
add	esp, 8
test	eax, eax
jz	short loc_1002A0D2
push	eax
or	ebx, 0FFFFFFFFh
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
push	esi
push	edi
call	sub_10035750
add	esp, 8
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
			
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_8]
push	ebx
push	esi
mov	esi, [esp+14h+arg_0]
push	edi
push	esi
mov	[esp+1Ch+var_8], 0
mov	[esp+1Ch+var_4], 0
mov	[esp+1Ch+var_C], eax
call	sub_10035650
mov	ebx, [esp+1Ch+arg_4]
mov	ecx, [esi]
mov	eax, [esi+38h]
mov	ecx, [ecx+62h]
push	1
lea	edx, [esp+20h+var_C]
push	edx
push	ebx
push	eax
call	ecx
mov	edi, eax
add	esp, 14h
test	edi, edi
jz	short loc_1002A157
push	esi
call	sub_10035670
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 0Ch
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	eax, [esp+18h+arg_C]
test	eax, eax
jz	short loc_1002A16F
mov	edx, [esp+18h+var_4]
push	edx
push	eax
call	PORT_ArenaAlloc_Util
add	esp, 8
jmp	short loc_1002A17C
mov	eax, [esp+18h+var_4]
push	eax
call	PORT_Alloc_Util
add	esp, 4
mov	[esp+18h+var_8], eax
test	eax, eax
jnz	short loc_1002A197
push	esi
call	sub_10035670
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	ecx, [esi]
mov	eax, [esi+38h]
mov	ecx, [ecx+62h]
push	1
lea	edx, [esp+1Ch+var_C]
push	edx
push	ebx
push	eax
call	ecx
push	esi
mov	edi, eax
call	sub_10035670
add	esp, 14h
test	edi, edi
jz	short loc_1002A1E6
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
cmp	[esp+18h+arg_C], 0
jnz	short loc_1002A1DC
mov	edx, [esp+18h+var_8]
push	edx
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	eax, [esp+18h+arg_10]
mov	ecx, [esp+18h+var_8]
mov	edx, [esp+18h+var_4]
pop	edi
pop	esi
mov	[eax+4], ecx
mov	[eax+8], edx
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
			
sub	esp, 10h
mov	eax, [esp+10h+arg_8]
push	esi
mov	esi, [esp+14h+arg_0]
push	edi
lea	ecx, [esp+18h+var_10]
push	esi
mov	[esp+1Ch+var_10], 0FFFFFFFFh
mov	[esp+1Ch+var_C], eax
mov	[esp+1Ch+var_8], ecx
mov	[esp+1Ch+var_4], 4
call	sub_10035650
mov	ecx, [esp+1Ch+arg_4]
mov	edx, [esi]
push	1
lea	eax, [esp+20h+var_C]
push	eax
mov	eax, [esi+38h]
push	ecx
mov	ecx, [edx+62h]
push	eax
call	ecx
push	esi
mov	edi, eax
call	sub_10035670
add	esp, 18h
test	edi, edi
jz	short loc_1002A274
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
mov	eax, [esp+18h+var_10]
pop	edi
pop	esi
add	esp, 10h
retn
align 10h
			
sub	esp, 10h
mov	eax, [esp+10h+arg_8]
push	ebx
push	esi
mov	esi, [esp+18h+arg_0]
push	edi
mov	edi, [esp+1Ch+arg_C]
lea	ecx, [esp+1Ch+var_D]
mov	[esp+1Ch+var_D], 0
mov	[esp+1Ch+var_C], eax
mov	[esp+1Ch+var_8], ecx
mov	[esp+1Ch+var_4], 1
test	edi, edi
jnz	short loc_1002A2B8
push	esi
call	sub_10035650
add	esp, 4
mov	ecx, [esp+1Ch+arg_4]
mov	edx, [esi]
push	1
lea	eax, [esp+20h+var_C]
push	eax
mov	eax, [esi+38h]
push	ecx
mov	ecx, [edx+62h]
push	eax
call	ecx
add	esp, 10h
mov	ebx, eax
test	edi, edi
jnz	short loc_1002A2E1
push	esi
call	sub_10035670
add	esp, 4
test	ebx, ebx
jz	short loc_1002A2FD
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
xor	al, al
pop	ebx
add	esp, 10h
retn
mov	al, [esp+1Ch+var_D]
pop	edi
pop	esi
pop	ebx
add	esp, 10h
retn
align 10h
			
push	ecx
push	ebp
mov	ebp, [esp+8+arg_4]
push	edi
xor	edi, edi
mov	[esp+0Ch+var_4], edi
cmp	[ebp+38h], edi
jnz	short loc_1002A32B
pop	edi
mov	eax, 0B3h
pop	ebp
pop	ecx
retn
push	ebx
push	esi
push	ebp
call	sub_10035650
mov	ebx, [esp+18h+arg_10]
mov	ecx, [esp+18h+arg_C]
mov	edx, [esp+18h+arg_8]
mov	eax, [ebp+0]
push	ebx
push	ecx
mov	ecx, [ebp+38h]
push	edx
mov	edx, [eax+62h]
push	ecx
call	edx
mov	esi, eax
add	esp, 14h
cmp	esi, edi
jz	short loc_1002A368
push	ebp
call	sub_10035670
add	esp, 4
mov	eax, esi
pop	esi
pop	ebx
pop	edi
pop	ebp
pop	ecx
retn
mov	esi, [esp+14h+arg_0]
cmp	esi, edi
jz	short loc_1002A385
push	esi
call	PORT_ArenaMark_Util
add	esp, 4
mov	[esp+14h+var_4], eax
cmp	eax, edi
jz	loc_1002A460
test	ebx, ebx
jle	short loc_1002A3ED
mov	esi, [esp+14h+arg_C]
add	esi, 8
mov	eax, [esi]
test	eax, eax
jz	short loc_1002A3E1
mov	ecx, [esp+14h+arg_0]
push	eax
test	ecx, ecx
jz	short loc_1002A3D2
push	ecx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi-4], eax
test	eax, eax
jnz	short loc_1002A3E1
mov	eax, [esp+14h+var_4]
mov	ecx, [esp+14h+arg_0]
push	eax
push	ecx
call	PORT_ArenaRelease_Util
push	ebp
call	sub_10035670
add	esp, 0Ch
pop	esi
pop	ebx
pop	edi
mov	eax, 2
pop	ebp
pop	ecx
retn
call	PORT_Alloc_Util
add	esp, 4
mov	[esi-4], eax
test	eax, eax
jz	short loc_1002A431
			
inc	edi
add	esi, 0Ch
cmp	edi, ebx
jl	short loc_1002A390
mov	esi, [esp+14h+arg_0]
mov	ecx, [esp+14h+arg_C]
mov	edx, [esp+14h+arg_8]
mov	eax, [ebp+0]
push	ebx
push	ecx
mov	ecx, [ebp+38h]
push	edx
mov	edx, [eax+62h]
push	ecx
call	edx
push	ebp
mov	edi, eax
call	sub_10035670
add	esp, 14h
test	edi, edi
jz	loc_1002A495
test	esi, esi
jz	short loc_1002A46B
mov	eax, [esp+14h+var_4]
push	eax
push	esi
call	PORT_ArenaRelease_Util
add	esp, 8
pop	esi
pop	ebx
mov	eax, edi
pop	edi
pop	ebp
pop	ecx
retn
test	edi, edi
jle	short loc_1002A457
mov	esi, [esp+14h+arg_C]
add	esi, 4
lea	esp, [esp+0]
mov	edx, [esi]
push	edx
call	PORT_Free_Util
mov	dword ptr [esi], 0
add	esp, 4
add	esi, 0Ch
dec	edi
jnz	short loc_1002A440
push	ebp
call	sub_10035670
add	esp, 4
pop	esi
pop	ebx
pop	edi
mov	eax, 2
pop	ebp
pop	ecx
retn
test	ebx, ebx
jle	short loc_1002A4AB
mov	esi, [esp+14h+arg_C]
add	esi, 4
mov	ecx, [esi]
push	ecx
call	PORT_Free_Util
mov	dword ptr [esi], 0
add	esp, 4
add	esi, 0Ch
dec	ebx
jnz	short loc_1002A476
pop	esi
pop	ebx
mov	eax, edi
pop	edi
pop	ebp
pop	ecx
retn
test	esi, esi
jz	short loc_1002A4AB
mov	eax, [esp+14h+var_4]
test	eax, eax
jz	short loc_1002A4AB
push	eax
push	esi
call	PORT_ArenaUnmark_Util
add	esp, 8
			
pop	esi
pop	ebx
mov	eax, edi
pop	edi
pop	ebp
pop	ecx
retn
align 10h
			
sub	esp, 10h
push	esi
mov	esi, [esp+14h+arg_0]
push	edi
mov	edi, 1
lea	eax, [esp+18h+var_D]
push	esi
mov	[esp+1Ch+var_D], 0
mov	[esp+1Ch+var_C], edi
mov	[esp+1Ch+var_8], eax
mov	[esp+1Ch+var_4], edi
call	sub_10035650
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [esi]
push	edi
lea	edx, [esp+20h+var_C]
push	edx
mov	edx, [esi+38h]
push	eax
mov	eax, [ecx+62h]
push	edx
call	eax
push	esi
mov	edi, eax
call	sub_10035670
add	esp, 18h
test	edi, edi
jz	short loc_1002A528
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
xor	al, al
pop	edi
movzx	eax, al
pop	esi
add	esp, 10h
retn
movzx	eax, [esp+18h+var_D]
pop	edi
pop	esi
add	esp, 10h
retn
align 10h
			
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
sub	esp, 0Ch
lea	eax, [esp+0Ch+var_C]
push	eax
push	0
push	3
push	ecx
push	edx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jz	short loc_1002A567
xor	eax, eax
add	esp, 0Ch
retn
push	esi
push	edi
mov	edi, [esp+14h+Size]
lea	eax, [edi+1]
push	eax
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1002A594
mov	ecx, [esp+14h+Src]
push	ecx
call	PORT_Free_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
push	edi		
mov	edi, [esp+18h+Src]
push	edi		
push	esi		
call	memcpy
push	edi
call	PORT_Free_Util
add	esp, 10h
pop	edi
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
			
mov	edx, [esp+arg_8]
sub	esp, 0Ch
mov	eax, edx
push	esi
lea	esi, [eax+1]
lea	ecx, [ecx+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1002A5D0
sub	eax, esi
jns	short loc_1002A5E3
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
push	edi
mov	edi, [esp+14h+arg_0]
push	edi
mov	[esp+18h+var_C], 3
mov	[esp+18h+var_8], edx
mov	[esp+18h+var_4], eax
call	sub_10035690
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1002A61D
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
mov	edx, [esp+14h+arg_4]
mov	eax, [edi]
mov	eax, [eax+66h]
push	ebx
push	1
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	edx
push	esi
call	eax
push	esi
push	edi
mov	ebx, eax
call	sub_10035750
add	esp, 18h
test	ebx, ebx
jz	short loc_1002A65B
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	ebx
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
pop	ebx
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
align 10h
			
mov	ecx, [esp+arg_0]
mov	eax, [ecx+8]
mov	edx, [ecx+4]
cmp	eax, 1
jbe	short loc_1002A68C
nop
cmp	byte ptr [edx],	0
jnz	short loc_1002A68C
dec	eax
inc	edx
cmp	eax, 1
ja	short loc_1002A680
			
mov	[ecx+4], edx
mov	[ecx+8], eax
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
push	edi
mov	edi, [esp+8+arg_4]
mov	dword ptr [edi], 1
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002A6BF
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	edx, [esi+40h]
mov	eax, [eax+32h]
lea	ecx, [esp+8+arg_4]
push	ecx
push	offset __PBE_GenerateBits
push	esi
push	4
push	edx
call	eax
add	esp, 14h
test	eax, eax
jz	short loc_1002A6EB
mov	dword ptr [edi], 0
mov	ecx, [esi+38h]
mov	[esp+8+arg_4], ecx
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002A6FA
push	esi
call	sub_10035670
add	esp, 4
mov	eax, [esp+8+arg_4]
pop	edi
pop	esi
retn
align 10h
			
cmp	[esp+arg_8], 0
jz	short locret_1002A74A
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002A72B
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [esp+4+arg_4]
mov	edx, [eax+36h]
push	ecx
call	edx
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002A749
push	esi
call	sub_10035670
add	esp, 4
pop	esi
retn
align 10h
			
push	ecx
push	ebx
mov	ebx, [esp+8+arg_4]
push	ebp
mov	ebp, [esp+0Ch+arg_10]
push	esi
push	edi
mov	edi, [esp+14h+arg_0]
mov	[esp+14h+var_4], 0
mov	esi, ebx
test	ebp, ebp
jz	short loc_1002A779
push	edi
call	sub_10035690
mov	esi, eax
jmp	short loc_1002A78A
test	ebx, ebx
jnz	short loc_1002A7A7
mov	esi, [edi+38h]
test	esi, esi
jz	short loc_1002A791
push	edi
call	sub_10035650
add	esp, 4
test	esi, esi
jnz	short loc_1002A7A7
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
			
mov	ecx, [esp+14h+arg_14]
mov	edx, [esp+14h+arg_C]
mov	eax, [edi]
push	ecx
mov	ecx, [esp+18h+arg_8]
push	edx
mov	edx, [eax+52h]
push	ecx
push	esi
call	edx
add	esp, 10h
test	eax, eax
jz	short loc_1002A7DC
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
mov	[esp+14h+var_4], 0FFFFFFFFh
test	ebp, ebp
jz	short loc_1002A7F4
push	esi
push	edi
call	sub_10035750
mov	eax, [esp+1Ch+var_4]
add	esp, 8
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
test	ebx, ebx
jnz	short loc_1002A801
push	edi
call	sub_10035670
add	esp, 4
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
			
mov	edx, [esp+arg_0]
and	edx, 0E7B00h
mov	eax, [esp+arg_4]
push	esi
mov	esi, offset dword_100A5F60
mov	ecx, 100h
jz	short loc_1002A85B
push	edi
mov	edi, [esp+8+arg_8]
push	ebp
cmp	ecx, 80000h
ja	short loc_1002A859
test	edx, ecx
jz	short loc_1002A850
mov	ebp, [esi]
xor	edx, ecx
mov	[eax], ebp
mov	[eax+4], edi
mov	dword ptr [eax+8], 1
add	eax, 0Ch
add	ecx, ecx
add	esi, 4
test	edx, edx
jnz	short loc_1002A831
pop	ebp
pop	edi
sub	eax, [esp+4+arg_4]
pop	esi
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
retn
align 10h
			
mov	ecx, [esp+arg_0]
mov	eax, ecx
shr	eax, 1
and	eax, ecx
and	eax, 55555555h
neg	eax
sbb	eax, eax
neg	eax
retn
align 10h
			
mov	ecx, [esp+arg_0]
mov	eax, [esp+arg_4]
push	ebx
mov	ebx, 1
push	esi
mov	esi, offset dword_100A5F90
mov	edx, ebx
test	ecx, ecx
jz	short loc_1002A8FE
push	ebp
mov	ebp, [esp+0Ch+arg_C]
push	edi
cmp	edx, 100h
ja	short loc_1002A8FC
test	ecx, edx
jz	short loc_1002A8DB
mov	edi, [esi]
mov	[eax], edi
mov	edi, [esp+10h+arg_8]
xor	ecx, edx
mov	[eax+4], edi
jmp	short loc_1002A8EB
lea	edi, [edx+edx]
test	ecx, edi
jz	short loc_1002A8F1
xor	ecx, edi
mov	edi, [esi]
mov	[eax], edi
mov	[eax+4], ebp
mov	[eax+8], ebx
add	eax, 0Ch
add	edx, edx
add	edx, edx
add	esi, 4
test	ecx, ecx
jnz	short loc_1002A8C0
pop	edi
pop	ebp
sub	eax, [esp+8+arg_4]
pop	esi
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
pop	ebx
retn
align 10h
			
sub	esp, 48h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+48h+var_4], eax
push	ebx
xor	eax, eax
push	ebp
push	esi
push	edi
mov	edi, ecx
mov	esi, [edi+8]
xor	ebx, ebx
mov	[esp+58h+var_2B], eax
mov	[esp+58h+var_27], eax
mov	[esp+58h+var_23], eax
mov	[esp+58h+var_1F], eax
mov	[esp+58h+var_1B], ax
mov	[esp+58h+var_19], al
mov	eax, [edi+4]
push	eax
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_30], ebx
mov	[esp+5Ch+var_48], 1
mov	[esp+5Ch+var_2C], bl
mov	[esp+5Ch+var_3C], 14h
call	PK11_MapSignKeyType
lea	ecx, [esp+5Ch+var_48]
push	ecx
push	esi
mov	[esp+64h+var_38], eax
call	sub_1002A6A0
add	esp, 0Ch
mov	ebp, eax
cmp	[esp+58h+var_48], ebx
jz	short loc_1002A99C
cmp	[esi+30h], ebx
jnz	short loc_1002A9A5
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [edi+0Ch]
mov	edx, [esi]
mov	edx, [edx+0AAh]
push	eax
lea	ecx, [esp+5Ch+var_38]
push	ecx
push	ebp
call	edx
mov	edi, eax
add	esp, 0Ch
cmp	edi, ebx
jz	short loc_1002AA28
cmp	[esp+58h+var_48], ebx
jz	short loc_1002A9CD
cmp	[esi+30h], ebx
jnz	short loc_1002A9D6
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+58h+var_48], ebx
jz	short loc_1002AA03
cmp	[esi+30h], ebx
jnz	short loc_1002A9EA
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [eax+36h]
push	ebp
call	ecx
add	esp, 4
cmp	[esi+30h], ebx
jnz	short loc_1002AA03
push	esi
call	sub_10035670
add	esp, 4
			
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+48h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 48h
retn
lea	eax, [esp+58h+var_44]
push	eax
push	ebx
mov	[esp+60h+var_44], ebx
mov	edx, [esi]
mov	edx, [edx+0AEh]
push	14h
lea	ecx, [esp+64h+var_2C]
push	ecx
push	ebp
call	edx
lea	ecx, [esp+6Ch+var_3C]
push	ecx
lea	edx, [esp+70h+var_18]
push	edx
push	14h
lea	ecx, [esp+78h+var_2C]
mov	[esp+78h+var_40], eax
mov	eax, [esi]
mov	edx, [eax+0AEh]
push	ecx
push	ebp
call	edx
mov	edi, [esp+80h+var_48]
add	esp, 28h
cmp	edi, ebx
jz	short loc_1002AA74
cmp	[esi+30h], ebx
jnz	short loc_1002AA7D
push	esi
call	sub_10035670
add	esp, 4
cmp	edi, ebx
jz	short loc_1002AAA8
cmp	[esi+30h], ebx
jnz	short loc_1002AA8F
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [eax+36h]
push	ebp
call	ecx
add	esp, 4
cmp	[esi+30h], ebx
jnz	short loc_1002AAA8
push	esi
call	sub_10035670
add	esp, 4
			
mov	eax, [esp+58h+var_40]
cmp	eax, ebx
jz	short loc_1002AAB6
push	eax
jmp	loc_1002AA04
mov	ecx, [esp+58h+var_4]
mov	eax, [esp+58h+var_44]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 48h
retn
align 10h
public PK11_SignatureLen
			
sub	esp, 0Ch
push	esi
mov	esi, [esp+10h+arg_0]
mov	eax, [esi+4]
dec	eax
mov	[esp+10h+var_C], 0
mov	[esp+10h+var_8], 0
mov	[esp+10h+var_4], 0
cmp	eax, 5		
ja	loc_1002ABD2	
jmp	ds:off_1002ABE8[eax*4] 
			
push	esi		
call	PK11_GetPrivateModulusLen
add	esp, 4
cmp	eax, 0FFFFFFFFh
jnz	loc_1002ABC0
mov	ecx, esi
call	sub_1002A920
pop	esi
add	esp, 0Ch
retn
			
mov	eax, 28h	
pop	esi
add	esp, 0Ch
retn
			
mov	ecx, [esi+0Ch]	
mov	edx, [esi+8]
lea	eax, [esp+10h+var_C]
push	eax
push	0
push	131h
push	ecx
push	edx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_1002AB16
mov	eax, [esp+10h+var_4]
mov	ecx, [esp+10h+var_8]
mov	esi, eax
test	eax, eax
jle	short loc_1002AB62
cmp	byte ptr [ecx],	0
jnz	short loc_1002AB62
lea	esi, [eax-1]
			
push	ecx
call	PORT_Free_Util
add	esp, 4
lea	eax, [esi+esi]
pop	esi
add	esp, 0Ch
retn
			
mov	ecx, [esi+0Ch]	
mov	edx, [esi+8]
push	edi
lea	eax, [esp+14h+var_C]
push	eax
push	0
push	180h
push	ecx
push	edx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_1002ABC5
lea	eax, [esp+14h+var_C]
push	eax
call	SECKEY_ECParamsToBasePointOrderLen
mov	ecx, [esp+18h+var_8]
push	ecx
mov	edi, eax
call	PORT_Free_Util
add	esp, 8
test	edi, edi
jz	short loc_1002ABC5
lea	eax, [edi+7]
cdq
and	edx, 7
add	eax, edx
sar	eax, 3
add	eax, eax
pop	edi
pop	esi
add	esp, 0Ch
retn
			
mov	ecx, esi
call	sub_1002A920
pop	edi
pop	esi
add	esp, 0Ch
retn
			
			
push	0FFFFE028h	
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
align 4
dd offset loc_1002AB2C	
dd offset loc_1002AB22
dd offset loc_1002ABD2
dd offset loc_1002ABD2
dd offset loc_1002AB73
push	esi
mov	esi, [esp+4+arg_0]
push	edi
push	esi
call	sub_10035650
mov	edx, [esp+0Ch+arg_4]
mov	eax, [esi]
lea	ecx, [esp+0Ch+arg_0]
push	ecx
mov	ecx, [esi+38h]
push	0
push	0
push	edx
mov	edx, [eax+56h]
push	ecx
call	edx
push	esi
mov	edi, eax
call	sub_10035670
add	esp, 1Ch
test	edi, edi
jnz	short loc_1002AC3B
mov	eax, [esp+8+arg_0]
pop	edi
pop	esi
retn
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
mov	ecx, [esp+arg_4]
test	ecx, ecx
jz	short loc_1002AC6A
mov	edx, [esp+arg_8]
mov	eax, [esp+arg_0]
cmp	[eax], edx
jz	short loc_1002AC6D
add	eax, 0Ch
dec	ecx
jnz	short loc_1002AC60
xor	eax, eax
retn
mov	eax, 1
retn
align 10h
public PK11_VerifyRecover
			
sub	esp, 10h
push	ebx
push	ebp
push	esi
push	edi
mov	edi, [esp+20h+arg_0]
mov	eax, [edi+4]
mov	esi, [edi+8]
mov	ebx, [edi+0Ch]
xor	ebp, ebp
push	eax
mov	[esp+24h+var_C], ebp
mov	[esp+24h+var_8], ebp
mov	[esp+24h+var_4], ebp
mov	[esp+24h+arg_0], 1
call	PK11_MapSignKeyType
add	esp, 4
mov	[esp+20h+var_C], eax
cmp	esi, ebp
jnz	short loc_1002ACFC
mov	ecx, [esp+20h+arg_C]
push	ecx
push	ebp
push	4000h
push	eax
call	PK11_GetBestSlotWithAttributes
mov	esi, eax
add	esp, 10h
cmp	esi, ebp
jnz	short loc_1002ACED
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
push	ebp
push	edi
push	esi
call	PK11_ImportPublicKey
add	esp, 0Ch
mov	ebx, eax
jmp	short loc_1002AD05
push	esi
call	PK11_ReferenceSlot
add	esp, 4
cmp	ebx, ebp
jnz	short loc_1002AD27
push	esi
call	PK11_FreeSlot
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
lea	edx, [esp+20h+arg_0]
push	edx
push	esi
call	sub_1002A6A0
mov	ebp, [esp+28h+arg_0]
add	esp, 8
mov	edi, eax
test	ebp, ebp
jz	short loc_1002AD45
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002AD4E
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	edx, [eax+0D2h]
push	ebx
lea	ecx, [esp+24h+var_C]
push	ecx
push	edi
call	edx
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_1002ADA3
test	ebp, ebp
jz	short loc_1002AD72
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002AD7B
push	esi
call	sub_10035670
add	esp, 4
push	ebp
push	edi
push	esi
call	sub_1002A710
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
push	esi
call	PK11_FreeSlot
add	esp, 18h
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
mov	ebx, [esp+20h+arg_8]
mov	eax, [ebx+8]
mov	[esp+20h+var_10], eax
mov	eax, [ebx+4]
mov	ecx, [esi]
mov	ecx, [ecx+0D6h]
lea	edx, [esp+20h+var_10]
push	edx
push	eax
mov	eax, [esp+28h+arg_4]
mov	edx, [eax+8]
mov	eax, [eax+4]
push	edx
push	eax
push	edi
call	ecx
add	esp, 14h
mov	[esp+20h+arg_0], eax
test	ebp, ebp
jz	short loc_1002ADDF
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002ADE8
push	esi
call	sub_10035670
add	esp, 4
push	ebp
push	edi
push	esi
call	sub_1002A710
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+var_10]
add	esp, 0Ch
mov	[ebx+8], edx
test	eax, eax
jz	short loc_1002AE22
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
push	esi
call	PK11_FreeSlot
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
push	esi
call	PK11_FreeSlot
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 10h
public PK11_Verify
			
			
sub	esp, 0Ch
push	ebx
push	ebp
push	esi
push	edi
mov	edi, [esp+1Ch+arg_0]
mov	eax, [edi+4]
mov	esi, [edi+8]
mov	ebx, [edi+0Ch]
xor	ebp, ebp
push	eax
mov	[esp+20h+var_C], ebp
mov	[esp+20h+var_8], ebp
mov	[esp+20h+var_4], ebp
mov	[esp+20h+arg_0], 1
call	PK11_MapSignKeyType
add	esp, 4
mov	[esp+1Ch+var_C], eax
cmp	esi, ebp
jnz	short loc_1002AEDF
xor	ecx, ecx
cmp	eax, 11h
jnz	short loc_1002AE9E
mov	edx, [edi+1Ch]
cmp	edx, 81h
jbe	short loc_1002AE9E
mov	ecx, edx
mov	edx, [edi+18h]
cmp	byte ptr [edx],	0
jnz	short loc_1002AE98
dec	ecx
add	ecx, ecx
add	ecx, ecx
add	ecx, ecx
			
mov	edx, [esp+1Ch+arg_C]
push	edx
push	ecx
push	2000h
push	eax
call	PK11_GetBestSlotWithAttributes
mov	esi, eax
add	esp, 10h
cmp	esi, ebp
jnz	short loc_1002AED0
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
push	ebp
push	edi
push	esi
call	PK11_ImportPublicKey
add	esp, 0Ch
mov	ebx, eax
jmp	short loc_1002AEE8
push	esi
call	PK11_ReferenceSlot
add	esp, 4
cmp	ebx, ebp
jnz	short loc_1002AF0A
push	esi
call	PK11_FreeSlot
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
lea	eax, [esp+1Ch+arg_0]
push	eax
push	esi
call	sub_1002A6A0
mov	ebp, [esp+24h+arg_0]
add	esp, 8
mov	edi, eax
test	ebp, ebp
jz	short loc_1002AF28
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002AF31
push	esi
call	sub_10035650
add	esp, 4
mov	ecx, [esi]
mov	eax, [ecx+0C2h]
push	ebx
lea	edx, [esp+20h+var_C]
push	edx
push	edi
call	eax
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_1002AF86
test	ebp, ebp
jz	short loc_1002AF55
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002AF5E
push	esi
call	sub_10035670
add	esp, 4
push	ebp
push	edi
push	esi
call	sub_1002A710
push	esi
call	PK11_FreeSlot
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 18h
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	eax, [esp+1Ch+arg_4]
mov	edx, [eax+8]
mov	eax, [eax+4]
mov	ecx, [esi]
mov	ecx, [ecx+0C6h]
push	edx
push	eax
mov	eax, [esp+24h+arg_8]
mov	edx, [eax+8]
mov	eax, [eax+4]
push	edx
push	eax
push	edi
call	ecx
add	esp, 14h
mov	ebx, eax
test	ebp, ebp
jz	short loc_1002AFB8
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002AFC1
push	esi
call	sub_10035670
add	esp, 4
push	ebp
push	edi
push	esi
call	sub_1002A710
push	esi
call	PK11_FreeSlot
add	esp, 10h
test	ebx, ebx
jz	short loc_1002AFF0
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
public PK11_Sign
			
			
sub	esp, 20h
push	ebx
push	ebp
push	esi
push	edi
mov	edi, [esp+30h+arg_0]
mov	eax, [edi+4]
mov	esi, [edi+8]
xor	ebp, ebp
push	eax
mov	[esp+34h+var_18], ebp
mov	[esp+34h+var_14], ebp
mov	[esp+34h+var_10], ebp
mov	[esp+34h+var_20], 1
call	PK11_MapSignKeyType
mov	[esp+34h+var_18], eax
mov	eax, [edi+18h]
add	esp, 4
test	al, 1
jz	short loc_1002B042
shr	eax, 1
and	eax, 1
jmp	short loc_1002B0AA
mov	ebp, [edi+8]
mov	ebx, [edi+0Ch]
lea	ecx, [esp+30h+arg_0]
push	ebp
mov	byte ptr [esp+34h+arg_0], 0
mov	[esp+34h+var_C], 2
mov	[esp+34h+var_8], ecx
mov	[esp+34h+var_4], 1
call	sub_10035650
mov	edx, [ebp+0]
mov	ecx, [ebp+38h]
mov	edx, [edx+62h]
push	1
lea	eax, [esp+38h+var_C]
push	eax
push	ebx
push	ecx
call	edx
push	ebp
mov	ebx, eax
call	sub_10035670
add	esp, 18h
test	ebx, ebx
jz	short loc_1002B0A1
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
xor	al, al
jmp	short loc_1002B0A5
mov	al, byte ptr [esp+30h+arg_0]
movzx	eax, al
xor	ebp, ebp
cmp	eax, ebp
jz	short loc_1002B0BB
mov	eax, [edi+14h]
push	eax
push	esi
call	sub_10016AB0
add	esp, 8
lea	ecx, [esp+30h+var_20]
push	ecx
push	esi
call	sub_1002A6A0
add	esp, 8
mov	ebx, eax
cmp	[esp+30h+var_20], ebp
jz	short loc_1002B0D6
cmp	[esi+30h], ebp
jnz	short loc_1002B0E4
push	esi
mov	ebp, 1
call	sub_10035650
add	esp, 4
mov	eax, [edi+0Ch]
mov	edx, [esi]
mov	edx, [edx+0AAh]
push	eax
lea	ecx, [esp+34h+var_18]
push	ecx
push	ebx
call	edx
add	esp, 0Ch
mov	[esp+30h+arg_0], eax
test	eax, eax
jz	short loc_1002B15E
test	ebp, ebp
jz	short loc_1002B110
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+30h+var_20], 0
jz	short loc_1002B140
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B126
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [eax+36h]
push	ebx
call	ecx
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B140
push	esi
call	sub_10035670
add	esp, 4
			
mov	edx, [esp+30h+arg_0]
push	edx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 20h
retn
mov	eax, [edi+18h]
test	al, 1
jz	short loc_1002B16D
shr	eax, 2
and	eax, 1
jmp	short loc_1002B186
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
push	ebp
push	202h
push	eax
push	ecx
call	sub_1002A280
add	esp, 10h
movzx	eax, al
test	eax, eax
jz	short loc_1002B19D
mov	edx, [edi+14h]
push	1
push	ebp
push	edx
push	0
push	ebx
push	esi
call	sub_10016900
add	esp, 18h
mov	edi, [esp+30h+arg_4]
mov	eax, [edi+8]
mov	[esp+30h+var_1C], eax
mov	eax, [edi+4]
mov	ecx, [esi]
mov	ecx, [ecx+0AEh]
lea	edx, [esp+30h+var_1C]
push	edx
push	eax
mov	eax, [esp+38h+arg_8]
mov	edx, [eax+8]
mov	eax, [eax+4]
push	edx
push	eax
push	ebx
call	ecx
add	esp, 14h
mov	[esp+30h+arg_0], eax
test	ebp, ebp
jz	short loc_1002B1DC
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+30h+var_20], 0
jz	short loc_1002B20C
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B1F2
push	esi
call	sub_10035650
add	esp, 4
mov	edx, [esi]
mov	eax, [edx+36h]
push	ebx
call	eax
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B20C
push	esi
call	sub_10035670
add	esp, 4
			
mov	eax, [esp+30h+arg_0]
mov	ecx, [esp+30h+var_1C]
mov	[edi+8], ecx
test	eax, eax
jz	short loc_1002B221
push	eax
jmp	loc_1002B145
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 20h
retn
align 10h
public PK11_SignWithSymKey
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_4]
push	ebx
push	ebp
push	esi
xor	ebx, ebx
mov	[esp+18h+var_C], eax
mov	eax, [esp+18h+arg_8]
push	edi
mov	edi, [esp+1Ch+arg_0]
mov	esi, [edi+8]
mov	[esp+1Ch+var_8], ebx
mov	[esp+1Ch+var_4], ebx
mov	[esp+1Ch+arg_0], 1
cmp	eax, ebx
jz	short loc_1002B26E
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	[esp+1Ch+var_8], ecx
mov	[esp+1Ch+var_4], edx
lea	eax, [esp+1Ch+arg_0]
push	eax
push	esi
call	sub_1002A6A0
add	esp, 8
mov	ebp, eax
cmp	[esp+1Ch+arg_0], ebx
jz	short loc_1002B289
cmp	[esi+30h], ebx
jnz	short loc_1002B297
push	esi
mov	ebx, 1
call	sub_10035650
add	esp, 4
mov	edx, [edi+4]
mov	ecx, [esi]
mov	ecx, [ecx+0AAh]
push	edx
lea	eax, [esp+20h+var_C]
push	eax
push	ebp
call	ecx
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_1002B30B
test	ebx, ebx
jz	short loc_1002B2C1
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+1Ch+arg_0], 0
jz	short loc_1002B2F1
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B2D7
push	esi
call	sub_10035650
add	esp, 4
mov	edx, [esi]
mov	eax, [edx+36h]
push	ebp
call	eax
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B2F1
push	esi
call	sub_10035670
add	esp, 4
			
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	edi, [esp+1Ch+arg_C]
mov	ecx, [edi+8]
mov	[esp+1Ch+arg_4], ecx
mov	ecx, [edi+4]
mov	edx, [esi]
lea	eax, [esp+1Ch+arg_4]
push	eax
mov	eax, [esp+20h+arg_10]
push	ecx
mov	ecx, [eax+8]
mov	eax, [eax+4]
push	ecx
mov	ecx, [edx+0AEh]
push	eax
push	ebp
call	ecx
add	esp, 14h
mov	[esp+1Ch+arg_8], eax
test	ebx, ebx
jz	short loc_1002B34A
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+1Ch+arg_0], 0
jz	short loc_1002B37A
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B360
push	esi
call	sub_10035650
add	esp, 4
mov	edx, [esi]
mov	eax, [edx+36h]
push	ebp
call	eax
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B37A
push	esi
call	sub_10035670
add	esp, 4
			
mov	eax, [esp+1Ch+arg_8]
mov	ecx, [esp+1Ch+arg_4]
mov	[edi+8], ecx
test	eax, eax
jz	short loc_1002B38F
push	eax
jmp	loc_1002B2F2
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
public PK11_Decrypt
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_14]
mov	ecx, [esp+0Ch+arg_4]
push	ebx
push	ebp
mov	ebp, [esp+14h+arg_0]
push	esi
mov	esi, [ebp+8]
push	edi
xor	edi, edi
mov	[esp+1Ch+arg_14], eax
mov	eax, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_8], edi
mov	[esp+1Ch+var_4], edi
mov	[esp+1Ch+arg_0], 1
mov	[esp+1Ch+var_C], ecx
cmp	eax, edi
jz	short loc_1002B3E6
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	[esp+1Ch+var_8], edx
mov	[esp+1Ch+var_4], eax
lea	ecx, [esp+1Ch+arg_0]
push	ecx
push	esi
call	sub_1002A6A0
add	esp, 8
mov	ebx, eax
cmp	[esp+1Ch+arg_0], edi
jz	short loc_1002B401
cmp	[esi+30h], edi
jnz	short loc_1002B40F
push	esi
mov	edi, 1
call	sub_10035650
add	esp, 4
mov	eax, [ebp+4]
mov	edx, [esi]
mov	edx, [edx+86h]
push	eax
lea	ecx, [esp+20h+var_C]
push	ecx
push	ebx
call	edx
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_1002B483
test	edi, edi
jz	short loc_1002B439
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+1Ch+arg_0], 0
jz	short loc_1002B469
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B44F
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [eax+36h]
push	ebx
call	ecx
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B469
push	esi
call	sub_10035670
add	esp, 4
			
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	ecx, [esp+1Ch+arg_C]
mov	edx, [esi]
mov	edx, [edx+8Ah]
lea	eax, [esp+1Ch+arg_14]
push	eax
mov	eax, [esp+20h+arg_1C]
push	ecx
mov	ecx, [esp+24h+arg_18]
push	eax
push	ecx
push	ebx
call	edx
add	esp, 14h
mov	ebp, eax
test	edi, edi
jz	short loc_1002B4B4
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+1Ch+arg_0], 0
jz	short loc_1002B4E4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B4CA
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [eax+36h]
push	ebx
call	ecx
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B4E4
push	esi
call	sub_10035670
add	esp, 4
			
mov	edx, [esp+1Ch+arg_10]
mov	eax, [esp+1Ch+arg_14]
mov	[edx], eax
test	ebp, ebp
jnz	loc_1002B469
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
public PK11_Encrypt
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_14]
mov	ecx, [esp+0Ch+arg_4]
push	ebx
push	ebp
mov	ebp, [esp+14h+arg_0]
push	esi
mov	esi, [ebp+8]
push	edi
xor	edi, edi
mov	[esp+1Ch+arg_14], eax
mov	eax, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_8], edi
mov	[esp+1Ch+var_4], edi
mov	[esp+1Ch+arg_0], 1
mov	[esp+1Ch+var_C], ecx
cmp	eax, edi
jz	short loc_1002B546
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	[esp+1Ch+var_8], edx
mov	[esp+1Ch+var_4], eax
lea	ecx, [esp+1Ch+arg_0]
push	ecx
push	esi
call	sub_1002A6A0
add	esp, 8
mov	ebx, eax
cmp	[esp+1Ch+arg_0], edi
jz	short loc_1002B561
cmp	[esi+30h], edi
jnz	short loc_1002B56F
push	esi
mov	edi, 1
call	sub_10035650
add	esp, 4
mov	eax, [ebp+4]
mov	edx, [esi]
mov	edx, [edx+76h]
push	eax
lea	ecx, [esp+20h+var_C]
push	ecx
push	ebx
call	edx
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_1002B5E0
test	edi, edi
jz	short loc_1002B596
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+1Ch+arg_0], 0
jz	short loc_1002B5C6
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B5AC
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [eax+36h]
push	ebx
call	ecx
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B5C6
push	esi
call	sub_10035670
add	esp, 4
			
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	ecx, [esp+1Ch+arg_C]
mov	edx, [esi]
mov	edx, [edx+7Ah]
lea	eax, [esp+1Ch+arg_14]
push	eax
mov	eax, [esp+20h+arg_1C]
push	ecx
mov	ecx, [esp+24h+arg_18]
push	eax
push	ecx
push	ebx
call	edx
add	esp, 14h
mov	ebp, eax
test	edi, edi
jz	short loc_1002B60E
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+1Ch+arg_0], 0
jz	short loc_1002B63E
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B624
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [eax+36h]
push	ebx
call	ecx
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B63E
push	esi
call	sub_10035670
add	esp, 4
			
mov	edx, [esp+1Ch+arg_10]
mov	eax, [esp+1Ch+arg_14]
mov	[edx], eax
test	ebp, ebp
jnz	loc_1002B5C6
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
			
sub	esp, 1Ch
push	ebp
push	esi
push	edi
mov	edi, ecx
mov	esi, [edi+8]
mov	ebp, 1
mov	[esp+28h+var_14], eax
mov	[esp+28h+var_18], ebp
cmp	[edi+4], ebp
jz	short loc_1002B694
push	0FFFFE028h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 1Ch
retn
mov	eax, [edi+18h]
push	ebx
test	ebp, eax
jz	short loc_1002B6A2
shr	eax, 1
and	eax, ebp
jmp	short loc_1002B6FF
mov	ebx, [edi+0Ch]
lea	ecx, [esp+2Ch+var_19]
push	esi
mov	[esp+30h+var_19], 0
mov	[esp+30h+var_C], 2
mov	[esp+30h+var_8], ecx
mov	[esp+30h+var_4], ebp
call	sub_10035650
mov	edx, [esi]
mov	ecx, [esi+38h]
mov	edx, [edx+62h]
push	ebp
lea	eax, [esp+34h+var_C]
push	eax
push	ebx
push	ecx
call	edx
push	esi
mov	ebx, eax
call	sub_10035670
add	esp, 18h
test	ebx, ebx
jz	short loc_1002B6F8
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
xor	al, al
jmp	short loc_1002B6FC
mov	al, [esp+2Ch+var_19]
movzx	eax, al
test	eax, eax
jz	short loc_1002B710
mov	eax, [edi+14h]
push	eax
push	esi
call	sub_10016AB0
add	esp, 8
lea	ecx, [esp+2Ch+var_18]
push	ecx
push	esi
call	sub_1002A6A0
add	esp, 8
cmp	[esp+2Ch+var_18], 0
mov	ebp, eax
jz	short loc_1002B731
cmp	dword ptr [esi+30h], 0
jz	short loc_1002B731
xor	ebx, ebx
jmp	short loc_1002B73F
			
push	esi
mov	ebx, 1
call	sub_10035650
add	esp, 4
mov	eax, [edi+0Ch]
mov	ecx, [esp+2Ch+arg_10]
mov	edx, [esi]
mov	edx, [edx+86h]
push	eax
push	ecx
push	ebp
call	edx
add	esp, 0Ch
mov	[esp+2Ch+var_10], eax
test	eax, eax
jz	short loc_1002B7A5
test	ebx, ebx
jz	short loc_1002B76B
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+2Ch+var_18], 0
jz	short loc_1002B79B
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B781
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	ecx, [eax+36h]
push	ebp
call	ecx
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B79B
push	esi
call	sub_10035670
add	esp, 4
			
mov	edx, [esp+2Ch+var_10]
push	edx
jmp	loc_1002B854
mov	eax, [edi+18h]
test	al, 1
jz	short loc_1002B7B4
shr	eax, 2
and	eax, 1
jmp	short loc_1002B7CD
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
push	ebx
push	202h
push	eax
push	ecx
call	sub_1002A280
add	esp, 10h
movzx	eax, al
test	eax, eax
jz	short loc_1002B7E4
mov	edx, [edi+14h]
push	1
push	ebx
push	edx
push	0
push	ebp
push	esi
call	sub_10016900
add	esp, 18h
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esi]
mov	eax, [eax+8Ah]
lea	ecx, [esp+2Ch+var_14]
push	ecx
mov	ecx, [esp+30h+arg_C]
push	edx
mov	edx, [esp+34h+arg_8]
push	ecx
push	edx
push	ebp
call	eax
add	esp, 14h
mov	edi, eax
test	ebx, ebx
jz	short loc_1002B815
push	esi
call	sub_10035670
add	esp, 4
cmp	[esp+2Ch+var_18], 0
jz	short loc_1002B845
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B82B
push	esi
call	sub_10035650
add	esp, 4
mov	ecx, [esi]
mov	edx, [ecx+36h]
push	ebp
call	edx
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B845
push	esi
call	sub_10035670
add	esp, 4
			
mov	eax, [esp+2Ch+var_14]
mov	ecx, [esp+2Ch+arg_4]
mov	[ecx], eax
test	edi, edi
jz	short loc_1002B86D
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	ebx
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 1Ch
retn
pop	ebx
pop	edi
pop	esi
xor	eax, eax
pop	ebp
add	esp, 1Ch
retn
align 10h
public PK11_PubDecryptRaw
sub	esp, 0Ch
mov	ecx, [esp+0Ch+arg_14]
mov	edx, [esp+0Ch+arg_10]
xor	eax, eax
mov	[esp+0Ch+var_8], eax
mov	[esp+0Ch+var_4], eax
lea	eax, [esp+0Ch+var_C]
push	eax
mov	eax, [esp+10h+arg_8]
push	ecx
mov	ecx, [esp+14h+arg_4]
push	edx
push	eax
mov	eax, [esp+1Ch+arg_C]
push	ecx
mov	ecx, [esp+20h+arg_0]
mov	[esp+20h+var_C], 3
call	sub_1002B660
add	esp, 20h
retn
align 10h
public PK11_PrivDecryptPKCS1
sub	esp, 0Ch
mov	ecx, [esp+0Ch+arg_14]
mov	edx, [esp+0Ch+arg_10]
xor	eax, eax
mov	[esp+0Ch+var_8], eax
mov	[esp+0Ch+var_4], eax
lea	eax, [esp+0Ch+var_C]
push	eax
mov	eax, [esp+10h+arg_8]
push	ecx
mov	ecx, [esp+14h+arg_4]
push	edx
push	eax
mov	eax, [esp+1Ch+arg_C]
push	ecx
mov	ecx, [esp+20h+arg_0]
mov	[esp+20h+var_C], 1
call	sub_1002B660
add	esp, 20h
retn
align 10h
			
sub	esp, 8
mov	edx, [esp+8+arg_14]
push	esi
push	ecx
push	0
mov	[esp+14h+var_4], eax
mov	eax, [edx]
push	100h
push	eax
mov	[esp+1Ch+var_8], 1
call	PK11_GetBestSlotWithAttributes
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_1002B942
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
mov	ecx, [esp+0Ch+arg_0]
push	ebp
push	0
push	ecx
push	esi
call	PK11_ImportPublicKey
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jnz	short loc_1002B975
push	esi
call	PK11_FreeSlot
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 8
pop	ebp
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
push	ebx
push	edi
lea	edx, [esp+18h+var_8]
push	edx
push	esi
call	sub_1002A6A0
mov	ebx, [esp+20h+var_8]
add	esp, 8
mov	edi, eax
test	ebx, ebx
jz	short loc_1002B995
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B99E
push	esi
call	sub_10035650
add	esp, 4
mov	ecx, [esp+18h+arg_14]
mov	eax, [esi]
mov	edx, [eax+76h]
push	ebp
push	ecx
push	edi
call	edx
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_1002B9F0
test	ebx, ebx
jz	short loc_1002B9BF
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002B9C8
push	esi
call	sub_10035670
add	esp, 4
push	ebx
push	edi
push	esi
call	sub_1002A710
push	esi
call	PK11_FreeSlot
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 18h
pop	edi
pop	ebx
pop	ebp
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
mov	edx, [esp+18h+arg_4]
mov	eax, [esi]
mov	eax, [eax+7Ah]
lea	ecx, [esp+18h+var_4]
push	ecx
mov	ecx, [esp+1Ch+arg_10]
push	edx
mov	edx, [esp+20h+arg_C]
push	ecx
push	edx
push	edi
call	eax
add	esp, 14h
mov	ebp, eax
test	ebx, ebx
jz	short loc_1002BA1B
cmp	dword ptr [esi+30h], 0
jnz	short loc_1002BA24
push	esi
call	sub_10035670
add	esp, 4
push	ebx
push	edi
push	esi
call	sub_1002A710
push	esi
call	PK11_FreeSlot
mov	ecx, [esp+28h+var_4]
mov	edx, [esp+28h+arg_8]
add	esp, 10h
mov	[edx], ecx
test	ebp, ebp
jz	short loc_1002BA5D
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	ebx
pop	ebp
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
pop	edi
pop	ebx
pop	ebp
xor	eax, eax
pop	esi
add	esp, 8
retn
align 10h
public PK11_PubEncryptRaw
sub	esp, 0Ch
xor	eax, eax
push	esi
mov	esi, [esp+10h+arg_0]
mov	[esp+10h+var_C], 3
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_4], eax
cmp	esi, eax
jz	short loc_1002BAC5
cmp	dword ptr [esi+4], 1
jnz	short loc_1002BAC5
push	esi
call	SECKEY_PublicKeyStrength
mov	edx, [esp+14h+arg_C]
lea	ecx, [esp+14h+var_C]
push	ecx
mov	ecx, [esp+18h+arg_8]
push	edx
push	ecx
mov	ecx, [esp+20h+arg_4]
lea	edx, [esp+20h+arg_0]
push	edx
push	ecx
mov	ecx, [esp+28h+arg_10]
push	esi
call	sub_1002B900
add	esp, 1Ch
pop	esi
add	esp, 0Ch
retn
			
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
align 10h
public PK11_PubEncryptPKCS1
sub	esp, 0Ch
xor	eax, eax
push	esi
mov	esi, [esp+10h+arg_0]
mov	ecx, 1
mov	[esp+10h+var_C], ecx
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_4], eax
cmp	esi, eax
jz	short loc_1002BB35
cmp	[esi+4], ecx
jnz	short loc_1002BB35
push	esi
call	SECKEY_PublicKeyStrength
mov	edx, [esp+14h+arg_C]
lea	ecx, [esp+14h+var_C]
push	ecx
mov	ecx, [esp+18h+arg_8]
push	edx
push	ecx
mov	ecx, [esp+20h+arg_4]
lea	edx, [esp+20h+arg_0]
push	edx
push	ecx
mov	ecx, [esp+28h+arg_10]
push	esi
call	sub_1002B900
add	esp, 1Ch
pop	esi
add	esp, 0Ch
retn
			
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
align 10h
public PK11_PrivDecrypt
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_4]
xor	ecx, ecx
mov	[esp+0Ch+var_C], eax
mov	eax, [esp+0Ch+arg_8]
mov	[esp+0Ch+var_8], ecx
mov	[esp+0Ch+var_4], ecx
cmp	eax, ecx
jz	short loc_1002BB7A
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	[esp+0Ch+var_8], ecx
mov	[esp+0Ch+var_4], edx
mov	ecx, [esp+0Ch+arg_1C]
mov	edx, [esp+0Ch+arg_18]
lea	eax, [esp+0Ch+var_C]
push	eax
mov	eax, [esp+10h+arg_10]
push	ecx
mov	ecx, [esp+14h+arg_C]
push	edx
push	eax
mov	eax, [esp+1Ch+arg_14]
push	ecx
mov	ecx, [esp+20h+arg_0]
call	sub_1002B660
add	esp, 20h
retn
align 10h
public PK11_PubEncrypt
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_4]
xor	ecx, ecx
mov	[esp+0Ch+var_C], eax
mov	eax, [esp+0Ch+arg_8]
mov	[esp+0Ch+var_8], ecx
mov	[esp+0Ch+var_4], ecx
cmp	eax, ecx
jz	short loc_1002BBDA
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	[esp+0Ch+var_8], ecx
mov	[esp+0Ch+var_4], edx
mov	ecx, [esp+0Ch+arg_1C]
mov	edx, [esp+0Ch+arg_18]
lea	eax, [esp+0Ch+var_C]
push	eax
mov	eax, [esp+10h+arg_10]
push	ecx
mov	ecx, [esp+14h+arg_C]
push	edx
mov	edx, [esp+18h+arg_0]
push	eax
mov	eax, [esp+1Ch+arg_14]
push	ecx
mov	ecx, [esp+20h+arg_20]
push	edx
call	sub_1002B900
add	esp, 24h
retn
align 10h
public PK11_UnwrapPrivKey
			
			
sub	esp, 108h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+108h+var_4], eax
mov	edx, [esp+108h+arg_C]
mov	eax, [esp+108h+arg_4]
mov	ecx, [esp+108h+arg_8]
mov	[esp+108h+var_104], edx
mov	edx, [esp+108h+arg_1C]
push	ebx
mov	ebx, [esp+10Ch+arg_14]
mov	[esp+10Ch+var_100], edx
mov	edx, [esp+10Ch+arg_24]
push	ebp
mov	ebp, [esp+110h+arg_0]
mov	[esp+110h+var_E0], edx
mov	edx, [esp+110h+arg_28]
push	esi
mov	esi, [esp+114h+arg_20]
push	edi
mov	edi, [esp+118h+arg_2C]
mov	[esp+118h+var_E4], eax
mov	eax, [esp+118h+arg_10]
mov	[esp+118h+var_EC], ecx
mov	ecx, [esp+118h+arg_18]
mov	[esp+118h+var_DC], edx
mov	edx, [esp+118h+arg_30]
mov	[esp+118h+var_F8], eax
mov	[esp+118h+var_CC], ebx
mov	[esp+118h+var_E8], ecx
mov	[esp+118h+var_D4], esi
mov	[esp+118h+var_BC], edi
mov	[esp+118h+var_F4], edx
mov	[esp+118h+var_106], 1
mov	[esp+118h+var_105], 0
mov	[esp+118h+var_D8], 3
test	ebp, ebp
jz	loc_1002BEE6
test	eax, eax
jz	loc_1002BEE6
test	ecx, ecx
jz	loc_1002BEE6
push	ecx
call	PK11_MakeIDFromPubKey
add	esp, 4
mov	[esp+118h+var_F0], eax
test	eax, eax
jz	loc_1002BEE6
cmp	[esp+118h+var_100], 0
mov	edx, 1
mov	[esp+118h+var_B8], edx
lea	ecx, [esp+118h+var_106]
jnz	short loc_1002BD0A
lea	ecx, [esp+118h+var_105]
mov	[esp+118h+var_B4], ecx
lea	ecx, [esp+118h+var_D8]
mov	[esp+118h+var_A8], ecx
mov	ecx, 4
mov	[esp+118h+var_B0], edx
lea	edx, [esp+118h+var_E0]
mov	[esp+118h+var_A4], ecx
mov	[esp+118h+var_98], ecx
mov	[esp+118h+var_AC], 0
mov	[esp+118h+var_A0], 100h
mov	[esp+118h+var_9C], edx
mov	[esp+118h+var_94], 2
lea	ecx, [esp+118h+var_106]
test	esi, esi
jnz	short loc_1002BD59
lea	ecx, [esp+118h+var_105]
mov	edx, 1
mov	[esp+118h+var_90], ecx
mov	[esp+118h+var_8C], edx
mov	[esp+118h+var_88], 103h
lea	ecx, [esp+118h+var_106]
test	esi, esi
jnz	short loc_1002BD83
lea	ecx, [esp+118h+var_105]
mov	[esp+118h+var_84], ecx
mov	[esp+118h+var_80], edx
lea	esi, [esp+118h+var_7C]
test	ebx, ebx
jz	short loc_1002BDC6
mov	ecx, [ebx+4]
test	ecx, ecx
jz	short loc_1002BDC6
mov	[esp+118h+var_78], ecx
mov	ecx, [ebx+8]
mov	[esp+118h+var_7C], 3
mov	[esp+118h+var_74], ecx
lea	esi, [esp+118h+var_70]
			
mov	dword ptr [esi], 102h
mov	ecx, [eax+4]
mov	[esi+4], ecx
mov	eax, [eax+8]
mov	[esi+8], eax
add	esi, 0Ch
xor	eax, eax
test	edi, edi
jle	short loc_1002BDFD
mov	ecx, [esp+118h+var_DC]
mov	ecx, [ecx+eax*4]
mov	[esi], ecx
lea	ecx, [esp+118h+var_106]
mov	[esi+4], ecx
mov	[esi+8], edx
add	eax, edx
add	esi, 0Ch
cmp	eax, edi
jl	short loc_1002BDE1
push	ebp
call	PK11_IsInternal
add	esp, 4
test	eax, eax
jz	short loc_1002BE23
mov	eax, [esp+118h+var_E8]
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	dword ptr [esi], 0D5A0DB00h
mov	[esi+4], edx
mov	[esi+8], eax
add	esi, 0Ch
mov	edi, [esp+118h+var_EC]
lea	ecx, [esp+118h+var_B8]
sub	esi, ecx
mov	eax, 2AAAAAABh
imul	esi
mov	eax, [esp+118h+var_104]
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
xor	ebx, ebx
add	esi, edx
mov	[esp+118h+var_C8], edi
cmp	eax, ebx
jnz	short loc_1002BE5D
push	ebx
push	edi
call	PK11_ParamFromIV
add	esp, 8
mov	[esp+118h+var_104], eax
cmp	eax, ebx
jz	short loc_1002BE6D
mov	edx, [eax+4]
mov	[esp+118h+var_C4], edx
mov	eax, [eax+8]
mov	[esp+118h+var_C0], eax
jmp	short loc_1002BE75
mov	[esp+118h+var_C4], ebx
mov	[esp+118h+var_C0], ebx
mov	eax, [esp+118h+var_E4]
push	eax
cmp	[eax+8], ebp
jz	short loc_1002BE90
push	107h
push	edi
push	ebp
call	sub_100321F0
add	esp, 10h
jmp	short loc_1002BE98
call	PK11_ReferenceSymKey
add	esp, 4
mov	ebx, eax
test	ebx, ebx
jz	loc_1002BF64
cmp	[esp+118h+var_100], 0
jz	short loc_1002BEB3
push	ebp
call	sub_10035690
mov	edi, eax
jmp	short loc_1002BEC0
mov	edi, [ebp+38h]
test	edi, edi
jz	short loc_1002BEC7
push	ebp
call	sub_10035650
add	esp, 4
test	edi, edi
jnz	short loc_1002BF01
push	0FFFFE002h
call	PORT_SetError_Util
push	ebx
call	PK11_FreeSymKey
mov	ecx, [esp+120h+var_F0]
push	1
push	ecx
call	SECITEM_FreeItem_Util
add	esp, 10h
			
xor	eax, eax
			
mov	ecx, [esp+118h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 108h
retn
mov	edx, [ebp+0]
lea	eax, [esp+118h+var_D0]
push	eax
mov	eax, [esp+11Ch+var_F8]
push	esi
lea	ecx, [esp+120h+var_B8]
push	ecx
mov	ecx, [eax+8]
mov	eax, [eax+4]
push	ecx
mov	ecx, [ebx+4]
push	eax
push	ecx
mov	ecx, [edx+0F6h]
lea	eax, [esp+130h+var_C8]
push	eax
push	edi
call	ecx
add	esp, 20h
cmp	[esp+118h+var_100], 0
mov	[esp+118h+var_FC], eax
jz	short loc_1002BF50
push	edi
push	ebp
call	sub_10035750
add	esp, 8
push	ebx
call	PK11_FreeSymKey
add	esp, 4
jmp	short loc_1002BF6C
push	ebp
call	sub_10035670
add	esp, 4
push	ebx
call	PK11_FreeSymKey
add	esp, 4
jmp	short loc_1002BF6C
mov	[esp+118h+var_FC], 54h
			
mov	edx, [esp+118h+var_F0]
push	1
push	edx
call	SECITEM_FreeItem_Util
add	esp, 8
cmp	[esp+118h+var_FC], 0
jz	loc_1002C026
call	PK11_GetInternalSlot
mov	edi, eax
test	edi, edi
jz	short loc_1002C00E
cmp	ebp, edi
jz	short loc_1002C005
mov	eax, [esp+118h+var_F4]
mov	ecx, [esp+118h+var_BC]
mov	edx, [esp+118h+var_DC]
push	eax
mov	eax, [esp+11Ch+var_E0]
push	ecx
mov	ecx, [esp+120h+var_E8]
push	edx
mov	edx, [esp+124h+var_CC]
push	eax
mov	eax, [esp+128h+var_F8]
push	0
push	0
push	ecx
mov	ecx, [esp+134h+var_104]
push	edx
mov	edx, [esp+138h+var_EC]
push	eax
mov	eax, [esp+13Ch+var_E4]
push	ecx
push	edx
push	eax
push	edi
call	PK11_UnwrapPrivKey
mov	esi, eax
add	esp, 34h
test	esi, esi
jz	short loc_1002C005
mov	ecx, [esp+118h+var_D4]
mov	edx, [esp+118h+var_100]
push	ecx
push	edx
push	0
push	esi
push	ebp
call	PK11_LoadPrivKey
push	esi
mov	ebx, eax
call	SECKEY_DestroyPrivateKey
push	edi
call	PK11_FreeSlot
add	esp, 1Ch
mov	eax, ebx
jmp	loc_1002BEE8
			
push	edi
call	PK11_FreeSlot
add	esp, 4
mov	eax, [esp+118h+var_FC]
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	loc_1002BEE6
mov	ecx, [esp+118h+var_F4]
mov	edx, [esp+118h+var_D0]
push	ecx
push	edx
push	0
push	0
push	ebp
call	sub_10012FF0
add	esp, 14h
jmp	loc_1002BEE8
align 10h
public PK11_WrapPrivKey
sub	esp, 14h
mov	eax, [esp+14h+arg_14]
mov	ecx, [eax+8]
push	ebx
push	ebp
mov	ebp, [esp+1Ch+arg_8]
xor	ebx, ebx
push	esi
mov	esi, [ebp+8]
mov	[esp+20h+arg_8], ebx
mov	[esp+20h+var_14], ebx
mov	[esp+20h+var_10], ecx
cmp	esi, ebx
jz	short loc_1002C088
mov	edx, [esp+20h+arg_C]
push	edx
push	esi
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jnz	short loc_1002C0B6
call	PK11_GetInternalSlot
push	ebx
push	ebx
push	ebx
mov	esi, eax
push	ebp
push	esi
call	PK11_LoadPrivKey
mov	ebp, eax
push	esi
mov	[esp+38h+arg_8], ebp
call	PK11_FreeSlot
add	esp, 18h
cmp	ebp, ebx
jnz	short loc_1002C0B6
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
			
push	edi
mov	edi, [esp+24h+arg_4]
cmp	esi, [edi+8]
jz	short loc_1002C0D8
mov	eax, [esp+24h+arg_C]
push	edi
push	106h
push	eax
push	esi
call	sub_100321F0
mov	ebx, eax
add	esp, 10h
mov	edi, ebx
test	edi, edi
jnz	short loc_1002C0F8
mov	eax, [esp+24h+arg_8]
test	eax, eax
jz	short loc_1002C0ED
push	eax
call	SECKEY_DestroyPrivateKey
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
mov	eax, [esp+24h+arg_10]
mov	ecx, [esp+24h+arg_C]
mov	[esp+24h+var_C], ecx
test	eax, eax
jnz	short loc_1002C11A
push	eax
push	ecx
call	PK11_ParamFromIV
add	esp, 8
mov	[esp+24h+var_14], eax
test	eax, eax
jz	short loc_1002C12A
mov	ecx, [eax+4]
mov	[esp+24h+var_8], ecx
mov	edx, [eax+8]
mov	[esp+24h+var_4], edx
jmp	short loc_1002C134
xor	eax, eax
mov	[esp+24h+var_8], eax
mov	[esp+24h+var_4], eax
push	esi
call	sub_10035650
mov	edx, [esp+28h+arg_14]
mov	eax, [esi]
lea	ecx, [esp+28h+var_10]
push	ecx
mov	ecx, [edx+4]
mov	edx, [ebp+0Ch]
push	ecx
mov	ecx, [edi+4]
push	edx
push	ecx
mov	ecx, [esi+38h]
lea	edx, [esp+38h+var_C]
push	edx
mov	edx, [eax+0F2h]
push	ecx
call	edx
push	esi
mov	edi, eax
call	sub_10035670
add	esp, 20h
test	ebx, ebx
jz	short loc_1002C17A
push	ebx
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esp+24h+arg_8]
test	eax, eax
jz	short loc_1002C18B
push	eax
call	SECKEY_DestroyPrivateKey
add	esp, 4
mov	eax, [esp+24h+var_14]
test	eax, eax
jz	short loc_1002C19E
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
test	edi, edi
jz	short loc_1002C1BC
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
mov	eax, [esp+24h+var_10]
mov	ecx, [esp+24h+arg_14]
pop	edi
pop	esi
pop	ebp
mov	[ecx+8], eax
xor	eax, eax
pop	ebx
add	esp, 14h
retn
align 10h
public SECKEY_GetPublicKeyType
			
mov	eax, [esp+arg_0] 
			
			
			
			
mov	eax, [eax+4]
retn
align 10h
public PK11_UnlinkGenericObject
mov	eax, [esp+arg_0]
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_1002C200
mov	edx, [eax+4]
mov	[ecx+4], edx
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_1002C20B
mov	edx, [eax]
mov	[ecx], edx
mov	dword ptr [eax+4], 0
mov	dword ptr [eax], 0
xor	eax, eax
retn
align 10h
public PK11_DestroyGenericObject
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1002C266
mov	eax, [esi]
test	eax, eax
jz	short loc_1002C235
mov	ecx, [esi+4]
mov	[eax+4], ecx
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1002C240
mov	edx, [esi]
mov	[eax], edx
mov	eax, [esi+8]
mov	dword ptr [esi+4], 0
mov	dword ptr [esi], 0
test	eax, eax
jz	short loc_1002C25D
push	eax
call	PK11_FreeSlot
add	esp, 4
push	esi
call	PORT_Free_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
public PK11_DestroyGenericObjects
			
push	ebp
push	esi
mov	esi, [esp+8+arg_0]
xor	ebp, ebp
cmp	esi, ebp
jz	loc_1002C306
push	ebx
mov	ebx, [esi]
push	edi
mov	ecx, [esi]
mov	eax, [esi+4]
mov	edi, eax
cmp	ecx, ebp
jz	short loc_1002C292
mov	[ecx+4], eax
mov	eax, [esi+4]
cmp	eax, ebp
jz	short loc_1002C29D
mov	ecx, [esi]
mov	[eax], ecx
mov	eax, [esi+8]
mov	[esi+4], ebp
mov	[esi], ebp
cmp	eax, ebp
jz	short loc_1002C2B2
push	eax
call	PK11_FreeSlot
add	esp, 4
push	esi
call	PORT_Free_Util
add	esp, 4
mov	esi, edi
cmp	edi, ebp
jnz	short loc_1002C284
mov	esi, ebx
pop	edi
cmp	ebx, ebp
jz	short loc_1002C305
mov	eax, [esi]
mov	ebx, [ebx]
cmp	eax, ebp
jz	short loc_1002C2D6
mov	edx, [esi+4]
mov	[eax+4], edx
mov	eax, [esi+4]
cmp	eax, ebp
jz	short loc_1002C2E1
mov	ecx, [esi]
mov	[eax], ecx
mov	eax, [esi+8]
mov	[esi+4], ebp
mov	[esi], ebp
cmp	eax, ebp
jz	short loc_1002C2F6
push	eax
call	PK11_FreeSlot
add	esp, 4
push	esi
call	PORT_Free_Util
add	esp, 4
mov	esi, ebx
cmp	ebx, ebp
jnz	short loc_1002C2C8
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
retn
align 10h
public PK11_CreateGenericObject
push	esi
push	edi
mov	edi, [esp+8+arg_0]
push	edi
call	sub_10035650
mov	ecx, [esp+0Ch+arg_C]
mov	edx, [esp+0Ch+arg_8]
lea	eax, [esp+0Ch+arg_0]
push	eax
mov	eax, [esp+10h+arg_4]
push	ecx
mov	ecx, [edi+38h]
push	edx
push	eax
push	ecx
push	edi
call	sub_1002A750
push	edi
mov	esi, eax
call	sub_10035670
add	esp, 20h
test	esi, esi
jz	short loc_1002C35D
push	esi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
push	10h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1002C358
push	edi
call	PK11_ReferenceSlot
mov	[esi+8], eax
mov	edx, [esp+0Ch+arg_0]
add	esp, 4
pop	edi
mov	[esi+0Ch], edx
mov	dword ptr [esi+4], 0
mov	dword ptr [esi], 0
mov	eax, esi
pop	esi
retn
align 10h
public PK11_WriteRawAttribute
mov	eax, [esp+arg_0]
sub	esp, 0Ch
push	ebx
push	esi
cmp	eax, 4		
ja	short loc_1002C3CC 
jmp	ds:off_1002C468[eax*4] 
			
mov	eax, [esp+14h+arg_4] 
mov	ebx, [eax+0Ch]
jmp	short loc_1002C3C5
			
mov	eax, [esp+14h+arg_4] 
mov	ebx, [eax+4]
mov	esi, [eax+8]
test	esi, esi
jnz	short loc_1002C3E2
			
			
push	0FFFFE096h	
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	eax, [esp+14h+arg_8]
mov	[esp+14h+var_C], eax
mov	eax, [esp+14h+arg_C]
mov	ecx, [eax+4]
mov	edx, [eax+8]
push	edi
push	esi
mov	[esp+1Ch+var_8], ecx
mov	[esp+1Ch+var_4], edx
call	sub_10035690
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1002C423
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	eax, [esi]
mov	edx, [eax+66h]
push	1
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	ebx
push	edi
call	edx
push	edi
push	esi
mov	ebx, eax
call	sub_10035750
add	esp, 18h
test	ebx, ebx
jz	short loc_1002C45C
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 4
dd offset loc_1002C3B5	
dd offset loc_1002C3B5
dd offset loc_1002C3CC
dd offset loc_1002C3BE
align 10h
public PK11_ReadRawAttribute
mov	eax, [esp+arg_0]
cmp	eax, 4		
ja	short loc_1002C4AA 
jmp	ds:off_1002C4D4[eax*4] 
			
mov	ecx, [esp+arg_4] 
mov	eax, [ecx+8]
mov	ecx, [ecx+0Ch]
jmp	short loc_1002C4A6
			
mov	ecx, [esp+arg_4] 
mov	eax, [ecx+8]
mov	ecx, [ecx+4]
test	eax, eax
jnz	short loc_1002C4BB
			
			
push	0FFFFE096h	
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	edx, [esp+arg_C]
push	edx
mov	edx, [esp+4+arg_8]
push	0
push	edx
push	ecx
push	eax
call	sub_1002A0F0
add	esp, 14h
retn
align 4
dd offset loc_1002C490	
dd offset loc_1002C490
dd offset loc_1002C4AA
dd offset loc_1002C49C
align 10h
			
push	ecx
push	esi
mov	esi, [esp+8+arg_0]
push	edi
push	esi
mov	edi, 0B3h
call	sub_10035650
mov	eax, [esi+38h]
add	esp, 4
test	eax, eax
jz	short loc_1002C527
mov	edx, [esp+0Ch+arg_8]
mov	ecx, [esi]
push	edx
mov	edx, [esp+10h+arg_4]
push	edx
push	eax
mov	eax, [ecx+6Ah]
call	eax
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_1002C542
push	esi
call	sub_10035670
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 0Ch
pop	edi
xor	eax, eax
pop	esi
pop	ecx
retn
mov	ecx, [esi]
lea	edx, [esp+0Ch+arg_0]
push	edx
mov	edx, [esi+38h]
push	1
lea	eax, [esp+14h+var_4]
push	eax
mov	eax, [ecx+6Eh]
push	edx
call	eax
mov	ecx, [esi]
mov	edx, [esi+38h]
mov	edi, eax
mov	eax, [ecx+72h]
push	edx
call	eax
push	esi
call	sub_10035670
add	esp, 18h
test	edi, edi
jnz	short loc_1002C582
cmp	[esp+0Ch+arg_0], 1
jb	short loc_1002C59A
mov	eax, [esp+0Ch+var_4]
pop	edi
pop	esi
pop	ecx
retn
push	edi
call	sub_1001AFB0
add	esp, 4
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
pop	ecx
retn
mov	eax, 0FFFFD003h
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
pop	ecx
retn
align 10h
			
push	ecx
push	ebx
push	esi
push	edi
mov	edi, [esp+10h+arg_0]
xor	esi, esi
push	edi
mov	[esp+14h+var_4], esi
mov	ebx, 0B3h
call	sub_10035650
mov	eax, [edi+38h]
add	esp, 4
cmp	eax, esi
jz	short loc_1002C5EE
mov	edx, [esp+10h+arg_8]
mov	ecx, [edi]
push	edx
mov	edx, [esp+14h+arg_4]
push	edx
push	eax
mov	eax, [ecx+6Ah]
call	eax
mov	ebx, eax
add	esp, 0Ch
cmp	ebx, esi
jz	short loc_1002C614
push	edi
call	sub_10035670
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	ecx, [esp+1Ch+arg_C]
add	esp, 0Ch
pop	edi
pop	esi
mov	dword ptr [ecx], 0FFFFFFFFh
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	ebx, [esp+10h+arg_C]
push	ebp
lea	esp, [esp+0]
mov	ebp, esi
test	esi, esi
jnz	short loc_1002C63A
mov	edx, [ebx]
lea	eax, ds:28h[edx*4]
push	eax
call	PORT_Alloc_Util
add	esp, 4
jmp	short loc_1002C64D
mov	ecx, [ebx]
lea	edx, ds:28h[ecx*4]
push	edx
push	esi
call	PORT_Realloc_Util
add	esp, 8
mov	esi, eax
test	esi, esi
jz	short loc_1002C67F
mov	edx, [ebx]
mov	eax, [edi]
mov	eax, [eax+6Eh]
lea	ecx, [esp+14h+var_4]
push	ecx
lea	ecx, [esi+edx*4]
mov	edx, [edi+38h]
push	0Ah
push	ecx
push	edx
call	eax
add	esp, 10h
test	eax, eax
jnz	short loc_1002C68E
mov	eax, [esp+14h+var_4]
add	[ebx], eax
cmp	eax, 0Ah
jz	short loc_1002C620
jmp	short loc_1002C6A5
test	ebp, ebp
jz	short loc_1002C6A5
push	ebp
call	PORT_Free_Util
add	esp, 4
jmp	short loc_1002C6A5
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
push	esi
call	PORT_Free_Util
add	esp, 0Ch
xor	esi, esi
			
mov	ecx, [edi]
mov	edx, [edi+38h]
mov	eax, [ecx+72h]
push	edx
call	eax
push	edi
call	sub_10035670
add	esp, 8
pop	ebp
test	esi, esi
jz	short loc_1002C6D3
cmp	dword ptr [ebx], 0
jnz	short loc_1002C6D9
push	esi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	dword ptr [ebx], 0FFFFFFFFh
pop	edi
mov	eax, esi
pop	esi
pop	ebx
pop	ecx
retn
			
sub	esp, 18h
push	ebp
xor	ebp, ebp
push	esi
push	800h
mov	[esp+24h+var_18], 102h
mov	[esp+24h+var_14], ebp
mov	[esp+24h+var_10], ebp
mov	[esp+24h+var_C], ebp
mov	[esp+24h+var_8], ebp
mov	[esp+24h+var_4], ebp
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebp
jnz	short loc_1002C71E
pop	esi
xor	eax, eax
pop	ebp
add	esp, 18h
retn
mov	ecx, [esp+20h+arg_4]
push	ebx
mov	ebx, [esp+24h+arg_0]
push	edi
push	2
lea	eax, [esp+2Ch+var_18]
push	eax
push	ecx
push	ebx
push	esi
call	sub_1002A310
mov	edi, eax
add	esp, 14h
cmp	edi, ebp
jz	short loc_1002C760
push	ebp
push	esi
call	PORT_FreeArena_Util
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 10h
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
add	esp, 18h
retn
mov	eax, [esp+28h+var_10]
cmp	eax, ebp
jz	short loc_1002C79A
cmp	eax, 0FFFFFFFFh
jz	short loc_1002C79A
mov	edx, [esp+28h+arg_8]
mov	eax, [esp+28h+var_8]
push	2
lea	ecx, [esp+2Ch+var_18]
push	ecx
push	ebx
mov	[eax], edx
call	sub_1002C4F0
push	ebp
push	esi
mov	edi, eax
call	PORT_FreeArena_Util
add	esp, 14h
mov	eax, edi
pop	edi
pop	ebx
pop	esi
pop	ebp
add	esp, 18h
retn
			
push	ebp
push	esi
call	PORT_FreeArena_Util
add	esp, 8
cmp	[esp+28h+arg_8], 1
jnz	short loc_1002C7C2
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
add	esp, 18h
retn
push	0FFFFE01Ah
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
add	esp, 18h
retn
align 10h
			
push	ecx
push	ebx
push	ebp
push	esi
push	edi
mov	edi, [esp+14h+arg_4]
mov	ecx, [edi+0Ch]
mov	edx, [edi+8]
lea	eax, [esp+14h+var_4]
push	eax
mov	eax, [esp+18h+arg_0]
push	ecx
push	edx
xor	esi, esi
push	eax
mov	[esp+24h+var_4], esi
call	sub_1002C5B0
mov	ebx, [esp+24h+var_4]
add	esp, 10h
mov	ebp, eax
cmp	ebx, esi
jz	short loc_1002C847
cmp	ebp, esi
jnz	short loc_1002C820
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
cmp	ebx, esi
jle	short loc_1002C83E
mov	ecx, [edi+4]
mov	edx, [ebp+esi*4+0]
mov	eax, [esp+14h+arg_0]
push	ecx
mov	ecx, [edi]
push	edx
push	eax
call	ecx
inc	esi
add	esp, 0Ch
cmp	esi, ebx
jl	short loc_1002C824
push	ebp
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
			
push	ebx
push	ebp
mov	ebp, [esp+8+arg_C]
push	ebp
push	0
push	0
push	0FFFFFFFFh
call	PK11_GetAllTokens
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jnz	short loc_1002C871
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	esi
mov	esi, [ebx]
test	esi, esi
jz	short loc_1002C8B3
push	edi
mov	edi, [esp+10h+arg_0]
lea	ecx, [ecx+0]
cmp	[esp+10h+arg_8], 0
jz	short loc_1002C89A
mov	eax, [esi+8]
push	ebp
push	0
push	eax
call	sub_10016B90
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002C8AC
test	edi, edi
jz	short loc_1002C8AC
mov	ecx, [esp+10h+arg_4]
mov	edx, [esi+8]
push	ecx
push	edx
call	edi
add	esp, 8
			
mov	esi, [esi]
test	esi, esi
jnz	short loc_1002C880
pop	edi
push	ebx
call	PK11_FreeSlotList
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
			
sub	esp, 0Ch
push	edi
push	0
push	0
push	0
mov	[esp+1Ch+var_C], 102h
mov	[esp+1Ch+var_8], 0
mov	[esp+1Ch+var_4], 0
call	SECITEM_AllocItem_Util
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_1002C905
pop	edi
add	esp, 0Ch
retn
mov	ecx, [esp+10h+arg_4]
mov	edx, [esp+10h+arg_0]
push	esi
push	1
lea	eax, [esp+18h+var_C]
push	eax
push	ecx
push	edx
push	0
call	sub_1002A310
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_1002C946
push	1
push	edi
call	SECITEM_FreeItem_Util
push	esi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 10h
pop	esi
xor	eax, eax
pop	edi
add	esp, 0Ch
retn
mov	eax, [esp+14h+var_8]
mov	[edi+4], eax
mov	ecx, [esp+14h+var_4]
pop	esi
mov	[edi+8], ecx
mov	eax, edi
pop	edi
add	esp, 0Ch
retn
align 10h
public PK11_LinkGenericObject
mov	eax, [esp+arg_4]
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_1002C970
mov	edx, [eax+4]
mov	[ecx+4], edx
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_1002C97B
mov	edx, [eax]
mov	[ecx], edx
mov	ecx, [esp+arg_0]
mov	dword ptr [eax+4], 0
mov	[eax], ecx
mov	edx, [ecx+4]
mov	[eax+4], edx
mov	[ecx+4], eax
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_1002C99A
mov	[ecx], eax
xor	eax, eax
retn
align 10h
public PK11_FindGenericObjects
sub	esp, 14h
push	ebp
push	edi
lea	ecx, [esp+1Ch+var_14]
push	ecx
lea	eax, [esp+20h+arg_4]
push	1
lea	edx, [esp+24h+var_C]
mov	[esp+24h+var_8], eax
mov	eax, [esp+24h+arg_0]
push	edx
xor	edi, edi
push	eax
xor	ebp, ebp
mov	[esp+2Ch+var_14], edi
mov	[esp+2Ch+var_C], edi
mov	[esp+2Ch+var_4], 4
call	sub_1002C5B0
add	esp, 10h
mov	[esp+1Ch+var_10], eax
cmp	eax, edi
jnz	short loc_1002C9EA
pop	edi
xor	eax, eax
pop	ebp
add	esp, 14h
retn
push	ebx
xor	ebx, ebx
push	esi
cmp	[esp+24h+var_14], edi
jle	short loc_1002CA51
push	10h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1002CA64
mov	ecx, [esp+24h+arg_0]
push	ecx
call	PK11_ReferenceSlot
mov	edx, [esp+28h+var_10]
xor	ecx, ecx
mov	[esi+8], eax
mov	eax, [edx+ebx*4]
add	esp, 4
mov	[esi+0Ch], eax
mov	[esi+4], ecx
mov	[esi], ecx
cmp	ebp, ecx
jnz	short loc_1002CA2D
mov	ebp, esi
jmp	short loc_1002CA44
mov	[esi+4], ecx
mov	[esi], edi
mov	edx, [edi+4]
mov	[esi+4], edx
mov	[edi+4], esi
mov	eax, [esi+4]
cmp	eax, ecx
jz	short loc_1002CA44
mov	[eax], esi
			
inc	ebx
mov	edi, esi
cmp	ebx, [esp+24h+var_14]
jl	short loc_1002C9F4
mov	eax, [esp+24h+var_10]
push	eax
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	ebx
pop	edi
mov	eax, ebp
pop	ebp
add	esp, 14h
retn
test	ebp, ebp
jz	short loc_1002CA71
push	ebp
call	PK11_DestroyGenericObjects
add	esp, 4
mov	eax, [esp+24h+var_10]
push	eax
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	ebx
pop	edi
xor	eax, eax
pop	ebp
add	esp, 14h
retn
align 10h
push	ebx
push	edi
push	200h
call	PORT_NewArena_Util
mov	ebx, eax
xor	edi, edi
add	esp, 4
cmp	ebx, edi
jnz	short loc_1002CAAC
pop	edi
xor	eax, eax
pop	ebx
retn
push	esi
push	70h
push	ebx
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
cmp	esi, edi
jz	short loc_1002CB16
mov	[esi], ebx
mov	[esi+4], edi
mov	[esi+8], edi
mov	[esi+0Ch], edi
mov	[esi+10h], edi
mov	[esi+14h], edi
mov	[esi+18h], edi
mov	[esi+1Ch], edi
mov	[esi+2Ch], edi
mov	[esi+28h], edi
mov	[esi+30h], edi
mov	[esi+34h], edi
mov	dword ptr [esi+24h], 1
mov	[esi+40h], edi
mov	[esi+44h], edi
mov	[esi+48h], edi
mov	[esi+4Ch], edi
mov	[esi+50h], edi
mov	[esi+54h], edi
mov	[esi+58h], edi
mov	[esi+5Ch], edi
mov	[esi+60h], edi
mov	[esi+64h], edi
mov	[esi+68h], edi
call	ds:PR_NewLock
mov	[esi+20h], eax
cmp	eax, edi
jnz	short loc_1002CB26
push	edi
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
xor	eax, eax
pop	ebx
retn
mov	eax, esi
pop	esi
pop	edi
pop	ebx
retn
align 10h
public SECMOD_CreateModule
			
push	esi
call	sub_1002CA90
mov	esi, eax
test	esi, esi
jnz	short loc_1002CB3E
pop	esi
retn
mov	eax, [esp+4+arg_4]
test	eax, eax
jnz	short loc_1002CB4B
mov	eax, offset byte_100A1623
push	eax
mov	eax, [esi]
push	eax
call	PORT_ArenaStrdup_Util
mov	[esi+14h], eax
mov	eax, [esp+0Ch+arg_0]
add	esp, 8
test	eax, eax
jz	short loc_1002CB71
mov	ecx, [esi]
push	eax
push	ecx
call	PORT_ArenaStrdup_Util
add	esp, 8
mov	[esi+10h], eax
mov	eax, [esp+4+arg_8]
test	eax, eax
jz	short loc_1002CB88
mov	edx, [esi]
push	eax
push	edx
call	PORT_ArenaStrdup_Util
add	esp, 8
mov	[esi+48h], eax
push	ebx
push	edi
mov	edi, [esp+0Ch+arg_C]
push	edi
push	offset aInternal 
push	offset aFlags	
call	NSSUTIL_ArgHasFlag
push	edi
push	offset aFips	
push	offset aFlags	
mov	[esi+4], eax
call	NSSUTIL_ArgHasFlag
push	edi
push	offset aCritical 
push	offset aFlags	
mov	[esi+0Ch], eax
call	NSSUTIL_ArgHasFlag
push	edi
push	offset aSlotparams 
mov	[esi+54h], eax
call	NSSUTIL_ArgGetParamValue
mov	ecx, [esi]
mov	ebx, eax
lea	eax, [esi+34h]
push	eax
push	ebx
push	ecx
call	NSSUTIL_ArgParseSlotInfo
add	esp, 38h
mov	[esi+30h], eax
test	ebx, ebx
jz	short loc_1002CBF4
push	ebx
call	PORT_Free_Util
add	esp, 4
push	0
push	32h
push	edi
push	offset aTrustorder 
call	NSSUTIL_ArgReadLong
push	0
push	0
push	edi
push	offset aCipherorder 
mov	[esi+60h], eax
call	NSSUTIL_ArgReadLong
push	edi
push	offset aModuledb 
push	offset aFlags	
mov	[esi+64h], eax
call	NSSUTIL_ArgHasFlag
push	edi
push	offset aModuledbonly 
push	offset aFlags	
mov	[esi+58h], eax
call	NSSUTIL_ArgHasFlag
add	esp, 38h
mov	[esi+5Ch], eax
test	eax, eax
jz	short loc_1002CC4C
mov	dword ptr [esi+58h], 1
cmp	dword ptr [esi+58h], 0
jz	short loc_1002CC8D
push	edi
push	offset aSkipfirst 
push	offset aFlags	
mov	bl, 1
call	NSSUTIL_ArgHasFlag
add	esp, 0Ch
test	eax, eax
jz	short loc_1002CC6D
mov	bl, 3
push	edi
push	offset aDefaultmoddb 
push	offset aFlags	
call	NSSUTIL_ArgHasFlag
add	esp, 0Ch
test	eax, eax
jz	short loc_1002CC87
or	bl, 4
movsx	edx, bl
mov	[esi+58h], edx
cmp	dword ptr [esi+4], 0
jz	short loc_1002CCB4
push	edi
push	offset aInternalkeyslo 
push	offset aFlags	
mov	bl, 1
call	NSSUTIL_ArgHasFlag
add	esp, 0Ch
test	eax, eax
jz	short loc_1002CCAE
mov	bl, 3
movsx	eax, bl
mov	[esi+4], eax
push	edi
push	offset aCiphers	
call	NSSUTIL_ArgGetParamValue
mov	edi, eax
lea	ecx, [esi+40h]
push	edi
push	ecx
call	NSSUTIL_ArgParseCipherFlags
add	esp, 10h
test	edi, edi
jz	short loc_1002CCDB
push	edi
call	PORT_Free_Util
add	esp, 4
inc	dword_100BAE00
pop	edi
pop	ebx
mov	eax, esi
pop	esi
retn
align 10h
public SECMOD_GetSkipFirstFlag
mov	eax, [esp+arg_0]
movsx	eax, byte ptr [eax+58h]
and	eax, 2
shr	eax, 1
retn
align 10h
public SECMOD_GetDefaultModDBFlag
			
mov	eax, [esp+arg_0]
movsx	eax, byte ptr [eax+58h]
and	eax, 4
shr	eax, 2
retn
align 10h
			
mov	eax, [esp+arg_0]
movsx	eax, byte ptr [eax+4]
and	eax, 2
shr	eax, 1
retn
align 10h
cmp	[esp+arg_4], 0
mov	ecx, [esp+arg_0]
mov	al, [ecx+4]
jz	short loc_1002CD37
or	al, 2
movsx	eax, al
mov	[ecx+4], eax
retn
and	al, 0FDh
movsx	edx, al
mov	[ecx+4], edx
retn
			
push	ecx
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_C]
push	esi
push	edi
push	22h
push	ebp
mov	esi, eax
call	NSSUTIL_EscapeSize
lea	ebx, [eax-1]
mov	eax, ebp
add	esp, 8
lea	edi, [eax+1]
mov	edi, edi
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1002CD60
sub	eax, edi
mov	edi, ebx
sub	edi, eax
test	edi, edi
jle	short loc_1002CDB7
mov	eax, [esp+14h+arg_0]
mov	ecx, [eax]
imul	ecx, edi
push	ecx
push	esi
call	PORT_Realloc_Util
add	esp, 8
mov	[esp+14h+var_4], eax
test	eax, eax
jnz	short loc_1002CD94
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
mov	ecx, [esp+14h+arg_0]
add	[ecx], edi
push	22h
push	ebp
mov	esi, eax
call	NSSUTIL_Escape
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	short loc_1002CDB7
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
			
mov	edx, [esp+14h+Size]
mov	eax, [esp+14h+Src]
push	edx		
push	eax		
push	esi		
call	memcpy
add	esi, [esp+20h+Size]
push	ebx		
mov	byte ptr [esi],	22h
inc	esi
push	ebp		
push	esi		
call	memcpy
add	esp, 18h
mov	byte ptr [esi+ebx], 22h
test	edi, edi
jle	short loc_1002CDEB
push	ebp
call	PORT_Free_Util
add	esp, 4
pop	edi
lea	eax, [esi+ebx+1]
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
			
sub	esp, 1Ch
push	ebx
push	ebp
mov	ebp, [esp+24h+Src]
mov	eax, ebp
push	edi
lea	ecx, [eax+1]
nop
mov	dl, [eax]
inc	eax
test	dl, dl
jnz	short loc_1002CE10
sub	eax, ecx
add	eax, 2
push	eax
mov	[esp+2Ch+var_14], eax
call	PORT_Alloc_Util
xor	edi, edi
mov	ebx, eax
add	esp, 4
mov	[esp+28h+Dst], ebx
mov	[esp+28h+var_1C], ebx
mov	[esp+28h+var_C], edi
mov	[esp+28h+var_8], edi
mov	[esp+28h+var_10], edi
cmp	ebx, edi
jnz	short loc_1002CE4E
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
mov	eax, [esp+28h+arg_C]
mov	[eax], edi
mov	eax, [esp+28h+arg_10]
cmp	eax, edi
jz	short loc_1002CE5E
mov	[eax], edi
push	esi
push	ebp
call	NSSUTIL_ArgStrip
mov	esi, eax
add	esp, 4
cmp	esi, ebp
jbe	short loc_1002CE89
mov	ebx, esi
sub	ebx, ebp
push	ebx		
push	ebp		
mov	ebp, [esp+34h+Dst]
push	ebp		
call	memcpy
add	esp, 0Ch
add	ebx, ebp
mov	[esp+2Ch+var_1C], ebx
mov	ebx, ebp
cmp	byte ptr [esi],	0
jz	loc_1002D130
push	7
push	offset aTokens	
push	esi
mov	ebp, esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002CED4
mov	eax, [esp+2Ch+var_C]
add	esi, 7
test	eax, eax
jz	short loc_1002CEBC
push	eax
call	PORT_Free_Util
add	esp, 4
lea	ecx, [esp+2Ch+Src]
push	ecx
push	esi
call	NSSUTIL_ArgFetchValue
add	esp, 8
add	esi, [esp+2Ch+Src]
mov	[esp+2Ch+var_C], eax
jmp	short loc_1002CF13
push	17h
push	offset aCryptotokendes 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002CF15
add	esi, 17h
test	edi, edi
jz	short loc_1002CEF8
push	edi
call	PORT_Free_Util
add	esp, 4
lea	edx, [esp+2Ch+Src]
push	edx
push	esi
call	NSSUTIL_ArgFetchValue
add	esi, [esp+34h+Src]
add	esp, 8
cmp	[esp+2Ch+arg_0], 0
mov	edi, eax
jz	short loc_1002CF15
mov	ebp, esi
			
push	16h
push	offset aCryptoslotdesc 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002CF56
add	esi, 16h
test	edi, edi
jz	short loc_1002CF39
push	edi
call	PORT_Free_Util
add	esp, 4
lea	eax, [esp+2Ch+Src]
push	eax
push	esi
call	NSSUTIL_ArgFetchValue
add	esi, [esp+34h+Src]
add	esp, 8
cmp	[esp+2Ch+arg_0], 0
mov	edi, eax
jz	short loc_1002CF56
mov	ebp, esi
			
push	13h
push	offset aDbtokendescrip 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002CFBE
add	esi, 13h
test	edi, edi
jz	short loc_1002CF7A
push	edi
call	PORT_Free_Util
add	esp, 4
lea	ecx, [esp+2Ch+Src]
push	ecx
push	esi
call	NSSUTIL_ArgFetchValue
add	esi, [esp+34h+Src]
add	esp, 8
cmp	[esp+2Ch+arg_0], 0
mov	edi, eax
jz	short loc_1002CFBE
mov	ebx, [esp+2Ch+arg_4]
mov	ebp, esi
test	ebx, ebx
jnz	short loc_1002CFC2
mov	eax, [esp+2Ch+var_1C]
push	edi
push	11h
lea	edx, [esp+34h+var_14]
push	offset aTokendescripti 
push	edx
call	sub_1002CD40
add	esp, 10h
mov	[esp+2Ch+var_1C], eax
jmp	short loc_1002CFC2
			
mov	ebx, [esp+2Ch+arg_4]
			
push	12h
push	offset aDbslotdescript 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002D024
add	esi, 12h
test	edi, edi
jz	short loc_1002CFE6
push	edi
call	PORT_Free_Util
add	esp, 4
lea	eax, [esp+2Ch+Src]
push	eax
push	esi
call	NSSUTIL_ArgFetchValue
add	esi, [esp+34h+Src]
add	esp, 8
cmp	[esp+2Ch+arg_0], 0
mov	edi, eax
jz	short loc_1002D024
mov	ebp, esi
test	ebx, ebx
jnz	short loc_1002D024
mov	eax, [esp+2Ch+var_1C]
push	edi
push	10h
lea	ecx, [esp+34h+var_14]
push	offset aSlotdescriptio 
push	ecx
call	sub_1002CD40
add	esp, 10h
mov	[esp+2Ch+var_1C], eax
			
push	15h
push	offset aFipstokendescr 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002D086
add	esi, 15h
test	edi, edi
jz	short loc_1002D048
push	edi
call	PORT_Free_Util
add	esp, 4
lea	edx, [esp+2Ch+Src]
push	edx
push	esi
call	NSSUTIL_ArgFetchValue
add	esi, [esp+34h+Src]
add	esp, 8
cmp	[esp+2Ch+arg_0], 0
mov	edi, eax
jz	short loc_1002D086
mov	ebp, esi
test	ebx, ebx
jz	short loc_1002D086
push	edi
push	11h
lea	eax, [esp+34h+var_14]
push	offset aTokendescripti 
push	eax
mov	eax, [esp+3Ch+var_1C]
call	sub_1002CD40
add	esp, 10h
mov	[esp+2Ch+var_1C], eax
			
push	14h
push	offset aFipsslotdescri 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002D0E8
add	esi, 14h
test	edi, edi
jz	short loc_1002D0AA
push	edi
call	PORT_Free_Util
add	esp, 4
lea	ecx, [esp+2Ch+Src]
push	ecx
push	esi
call	NSSUTIL_ArgFetchValue
add	esi, [esp+34h+Src]
add	esp, 8
cmp	[esp+2Ch+arg_0], 0
mov	edi, eax
jz	short loc_1002D0E8
mov	ebp, esi
test	ebx, ebx
jz	short loc_1002D0E8
mov	eax, [esp+2Ch+var_1C]
push	edi
push	10h
lea	edx, [esp+34h+var_14]
push	offset aSlotdescriptio 
push	edx
call	sub_1002CD40
add	esp, 10h
mov	[esp+2Ch+var_1C], eax
			
push	esi
call	NSSUTIL_ArgSkipParameter
push	eax
call	NSSUTIL_ArgStrip
mov	esi, eax
add	esp, 8
cmp	esi, ebp
jbe	short loc_1002D116
mov	ebx, esi
sub	ebx, ebp
push	ebx		
push	ebp		
mov	ebp, [esp+34h+var_1C]
push	ebp		
call	memcpy
add	esp, 0Ch
add	ebp, ebx
mov	[esp+2Ch+var_1C], ebp
cmp	byte ptr [esi],	0
jnz	loc_1002CE92
test	edi, edi
jz	short loc_1002D12C
push	edi
call	PORT_Free_Util
add	esp, 4
mov	ebx, [esp+2Ch+Dst]
mov	edi, [esp+2Ch+var_C]
mov	eax, [esp+2Ch+var_1C]
mov	byte ptr [eax],	0
test	edi, edi
jz	loc_1002D1C1
push	edi
call	NSSUTIL_ArgStrip
add	esp, 4
cmp	byte ptr [eax],	0
jz	short loc_1002D169
inc	[esp+2Ch+var_10]
push	eax
call	NSSUTIL_ArgSkipParameter
push	eax
call	NSSUTIL_ArgStrip
add	esp, 8
cmp	byte ptr [eax],	0
jnz	short loc_1002D151
mov	esi, [esp+2Ch+var_10]
lea	esi, ds:4[esi*4]
push	esi
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
mov	[esp+2Ch+var_1C], ebp
test	ebp, ebp
jnz	short loc_1002D19A
push	edi
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	edi
pop	ebp
mov	eax, ebx
pop	ebx
add	esp, 1Ch
retn
cmp	[esp+2Ch+arg_10], 0
jz	short loc_1002D1CB
push	esi
call	PORT_Alloc_Util
add	esp, 4
mov	[esp+2Ch+var_8], eax
test	eax, eax
jnz	short loc_1002D1CB
push	ebp
call	PORT_Free_Util
push	edi
call	PORT_Free_Util
add	esp, 8
pop	esi
pop	edi
pop	ebp
mov	eax, ebx
pop	ebx
add	esp, 1Ch
retn
			
push	edi
call	NSSUTIL_ArgStrip
mov	esi, eax
xor	ebx, ebx
add	esp, 4
cmp	[esi], bl
jz	loc_1002D263
mov	eax, [esp+2Ch+var_8]
sub	eax, ebp
mov	edi, ebp
mov	[esp+2Ch+var_4], eax
lea	esp, [esp+0]
cmp	ebx, [esp+2Ch+var_10]
jge	short loc_1002D263
lea	ecx, [esp+2Ch+var_14]
push	ecx
push	esi
call	NSSUTIL_ArgGetLabel
add	esi, [esp+34h+var_14]
add	esp, 8
cmp	[esp+2Ch+var_8], 0
mov	ebp, eax
jz	short loc_1002D221
push	ebp
call	NSSUTIL_ArgDecodeNumber
mov	edx, [esp+30h+var_4]
add	esp, 4
mov	[edx+edi], eax
push	ebp
call	PORT_Free_Util
movzx	eax, byte ptr [esi]
push	eax
call	NSSUTIL_ArgIsBlank
add	esp, 8
test	eax, eax
jnz	short loc_1002D24F
lea	ecx, [esp+2Ch+var_14]
push	ecx
push	esi
call	NSSUTIL_ArgFetchValue
mov	[edi], eax
add	esp, 8
inc	ebx
add	edi, 4
add	esi, [esp+2Ch+var_14]
push	esi
call	NSSUTIL_ArgStrip
mov	ebp, [esp+30h+var_1C]
mov	esi, eax
add	esp, 4
cmp	byte ptr [esi],	0
jnz	short loc_1002D1F0
			
mov	edx, [esp+2Ch+var_C]
push	edx
call	PORT_Free_Util
mov	eax, [esp+30h+var_8]
add	esp, 4
mov	dword ptr [ebp+ebx*4+0], 0
test	eax, eax
jz	short loc_1002D287
mov	dword ptr [eax+ebx*4], 0
mov	ecx, [esp+2Ch+arg_C]
mov	[ecx], ebp
mov	ecx, [esp+2Ch+arg_10]
test	ecx, ecx
jz	short loc_1002D297
mov	[ecx], eax
mov	eax, [esp+2Ch+Dst]
pop	esi
pop	edi
pop	ebp
pop	ebx
add	esp, 1Ch
retn
align 10h
			
push	ebp
mov	ebp, [esp+4+arg_0]
push	esi
push	edi
mov	esi, eax
push	esi
xor	edi, edi
push	offset dword_100A1524
mov	[ebp+0], edi
push	offset aFlags	
mov	[ebx], edi
call	NSSUTIL_ArgHasFlag
mov	ecx, [esp+18h+arg_4]
push	esi
mov	[ecx], eax
call	NSSUTIL_ArgStrip
mov	esi, eax
add	esp, 10h
cmp	byte ptr [esi],	0
jz	loc_1002D3C6
lea	ebx, [ebx+0]
push	0Ah
push	offset aConfigdir 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002D32D
add	esi, 0Ah
test	edi, edi
jz	short loc_1002D314
push	edi
call	PORT_Free_Util
add	esp, 4
lea	edx, [esp+0Ch+arg_0]
push	edx
push	esi
call	NSSUTIL_ArgFetchValue
add	esp, 8
add	esi, [esp+0Ch+arg_0]
mov	edi, eax
jmp	loc_1002D3B2
push	0Bh
push	offset aCertprefix 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002D36B
mov	eax, [ebp+0]
add	esi, 0Bh
test	eax, eax
jz	short loc_1002D354
push	eax
call	PORT_Free_Util
add	esp, 4
lea	eax, [esp+0Ch+arg_0]
push	eax
push	esi
call	NSSUTIL_ArgFetchValue
add	esp, 8
add	esi, [esp+0Ch+arg_0]
mov	[ebp+0], eax
jmp	short loc_1002D3B2
push	0Ah
push	offset aKeyprefix 
push	esi
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002D3A7
mov	eax, [ebx]
add	esi, 0Ah
test	eax, eax
jz	short loc_1002D391
push	eax
call	PORT_Free_Util
add	esp, 4
lea	ecx, [esp+0Ch+arg_0]
push	ecx
push	esi
call	NSSUTIL_ArgFetchValue
add	esp, 8
add	esi, [esp+0Ch+arg_0]
mov	[ebx], eax
jmp	short loc_1002D3B2
push	esi
call	NSSUTIL_ArgSkipParameter
add	esp, 4
mov	esi, eax
			
push	esi
call	NSSUTIL_ArgStrip
mov	esi, eax
add	esp, 4
cmp	byte ptr [esi],	0
jnz	loc_1002D2F0
mov	eax, edi
pop	edi
pop	esi
pop	ebp
retn
align 10h
push	edi
mov	edi, ds:strncmp
push	4		
push	offset aDbm	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jnz	short loc_1002D3EF
			
mov	eax, 1
pop	edi
retn
push	4		
push	offset Str2	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jz	short loc_1002D46D
push	4		
push	offset aRdb	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jz	short loc_1002D46D
push	7		
push	offset aExtern	
push	esi		
call	edi 
add	esp, 0Ch
test	eax, eax
jz	short loc_1002D46D
push	offset aNss_default_db 
call	ds:PR_GetEnv
add	esp, 4
test	eax, eax
jz	short loc_1002D3E8
mov	ecx, offset aDbm_0 
lea	esp, [esp+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1002D460
test	dl, dl
jz	short loc_1002D45C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1002D460
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_1002D440
xor	eax, eax
jmp	short loc_1002D465
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	loc_1002D3E8
			
xor	eax, eax
pop	edi
retn
align 10h
test	eax, eax
jz	short loc_1002D4C7
cmp	byte ptr [eax],	0
jz	short loc_1002D4C7
lea	esp, [esp+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1002D4B8
test	dl, dl
jz	short loc_1002D4AC
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1002D4B8
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_1002D490
xor	eax, eax
xor	ecx, ecx
test	eax, eax
setz	cl
mov	eax, ecx
retn
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
xor	ecx, ecx
test	eax, eax
setz	cl
mov	eax, ecx
retn
			
test	ecx, ecx
jz	short loc_1002D4D3
cmp	byte ptr [ecx],	0
jz	short loc_1002D4D3
xor	eax, eax
retn
			
mov	eax, 1
retn
align 10h
			
sub	esp, 0Ch
push	ebx
push	ebp
push	esi
push	edi
lea	eax, [esp+1Ch+var_C]
push	eax
mov	eax, [esp+20h+arg_0]
lea	ecx, [esp+20h+var_4]
push	ecx
lea	ebx, [esp+24h+var_8]
call	sub_1002D2B0
mov	ebp, [esp+24h+var_4]
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1002D515
			
mov	edi, 1
jmp	loc_1002D5E8
call	sub_1002D3D0
test	eax, eax
jz	short loc_1002D526
mov	[esp+1Ch+var_C], 1
xor	ebx, ebx
cmp	[esp+1Ch+arg_8], ebx
jle	loc_1002D5E6
mov	edi, [esp+1Ch+arg_4]
add	edi, 8
lea	esp, [esp+0]
mov	ecx, [edi-8]
mov	eax, esi
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1002D565
test	dl, dl
jz	short loc_1002D561
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1002D565
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_1002D545
xor	eax, eax
jmp	short loc_1002D56A
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_1002D5D8
mov	ecx, [edi-4]
test	ebp, ebp
jz	short loc_1002D5AB
cmp	[ebp+0], al
jz	short loc_1002D5AB
mov	eax, ebp
lea	esp, [esp+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1002D5A0
test	dl, dl
jz	short loc_1002D59C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1002D5A0
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_1002D580
xor	eax, eax
jmp	short loc_1002D5A5
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_1002D5B4
jmp	short loc_1002D5D8
			
test	ecx, ecx
jz	short loc_1002D5B4
cmp	byte ptr [ecx],	0
jnz	short loc_1002D5D8
			
mov	ecx, [edi]
mov	eax, [esp+1Ch+var_8]
call	sub_1002D480
test	eax, eax
jz	short loc_1002D5D8
cmp	[esp+1Ch+var_C], 0
jnz	loc_1002D50B
cmp	dword ptr [edi+4], 0
jz	loc_1002D50B
			
inc	ebx
add	edi, 10h
cmp	ebx, [esp+1Ch+arg_8]
jl	loc_1002D540
xor	edi, edi
push	esi
call	PORT_Free_Util
push	ebp
call	PORT_Free_Util
mov	edx, [esp+24h+var_8]
push	edx
call	PORT_Free_Util
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
align 10h
push	ebx
mov	ebx, [esp+4+arg_0]
push	edi
mov	edi, [esp+8+arg_4]
test	edi, edi
jle	short loc_1002D646
push	esi
lea	esi, [ebx+8]
mov	eax, [esi-8]
push	eax
call	PORT_Free_Util
mov	ecx, [esi-4]
push	ecx
call	PORT_Free_Util
mov	edx, [esi]
push	edx
call	PORT_Free_Util
add	esp, 0Ch
add	esi, 10h
dec	edi
jnz	short loc_1002D622
pop	esi
push	ebx
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	ebx
retn
align 10h
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	short loc_1002D69F
push	esi
mov	esi, edi
lea	esp, [esp+0]
mov	eax, [esi]
test	eax, eax
jz	short loc_1002D684
push	eax
call	PORT_Free_Util
add	esp, 4
add	esi, 4
jnz	short loc_1002D670
push	edi
call	PORT_Free_Util
mov	eax, [esp+0Ch+arg_4]
add	esp, 4
pop	esi
test	eax, eax
jz	short loc_1002D69F
push	eax
call	PORT_Free_Util
add	esp, 4
			
pop	edi
retn
align 10h
			
mov	ecx, [edi]
mov	edx, [esi]
push	ebp
mov	ebp, [esp+4+arg_0]
push	eax
push	offset a0xX	
push	ecx
push	edx
call	ds:PR_snprintf
add	esp, 10h
test	eax, eax
jns	short loc_1002D6D3
or	eax, 0FFFFFFFFh
pop	ebp
retn
add	[esi], eax
sub	[edi], eax
push	ebx
push	5Dh
push	3Eh
push	ebp
call	NSSUTIL_DoubleEscape
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_1002D71B
cmp	byte ptr [ebp+0], 0
jz	short loc_1002D6F6
cmp	byte ptr [ebx],	0
jz	short loc_1002D712
lea	edx, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1002D700
sub	eax, edx
mov	ebp, eax
lea	eax, [ebp+1]
cmp	eax, [edi]
jle	short loc_1002D721
push	ebx
call	PORT_Free_Util
add	esp, 4
pop	ebx
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	ecx, [esi]
push	ebp		
push	ebx		
push	ecx		
call	memcpy
add	[esi], ebp
sub	[edi], ebp
push	ebx
call	PORT_Free_Util
mov	edx, [esi]
add	esp, 10h
mov	byte ptr [edx],	3Eh
inc	dword ptr [esi]
dec	dword ptr [edi]
pop	ebx
xor	eax, eax
pop	ebp
retn
align 10h
sub	esp, 1Ch
mov	edx, [esp+1Ch+Src]
push	ebx
push	esi
push	edi
lea	eax, [esp+28h+var_10]
push	eax		
lea	ecx, [esp+2Ch+var_1C]
push	ecx		
xor	edi, edi
push	edx		
push	edi		
push	edi		
mov	[esp+3Ch+var_C], edi
mov	[esp+3Ch+var_1C], edi
mov	[esp+3Ch+var_10], edi
call	sub_1002CE00
add	esp, 14h
mov	[esp+28h+var_4], eax
cmp	eax, edi
jz	loc_1002D9C7
lea	edx, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1002D790
mov	edi, [esp+28h+var_1C]
sub	eax, edx
push	ebp
lea	ebp, [eax+0Bh]
test	edi, edi
jz	short loc_1002D7E6
mov	ebx, [esp+2Ch+var_10]
sub	ebx, edi
jmp	short loc_1002D7B0
align 10h
			
cmp	dword ptr [edi], 0
jz	short loc_1002D7E6
mov	eax, [edi]
mov	esi, [ebx+edi]
push	5Dh
push	3Eh
push	eax
call	NSSUTIL_DoubleEscapeSize
add	esp, 0Ch
test	esi, esi
jnz	short loc_1002D7D5
inc	eax
lea	ebp, [eax+ebp+6]
add	edi, 4
jmp	short loc_1002D7B0
			
shr	esi, 4
inc	eax
test	esi, esi
jnz	short loc_1002D7D5
lea	ebp, [eax+ebp+6]
add	edi, 4
jmp	short loc_1002D7B0
			
mov	eax, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
push	5Dh
push	3Eh
push	eax
call	NSSUTIL_DoubleEscapeSize
add	esp, 0Ch
test	esi, esi
jnz	short loc_1002D802
inc	eax
jmp	short loc_1002D80A
			
shr	esi, 4
inc	eax
test	esi, esi
jnz	short loc_1002D802
mov	edi, [esp+2Ch+arg_10]
lea	ebx, [eax+ebp+6]
test	edi, edi
jz	short loc_1002D861
mov	ebp, [esp+2Ch+arg_14]
sub	ebp, edi
lea	esp, [esp+0]
			
mov	eax, [edi]
test	eax, eax
jz	short loc_1002D861
mov	esi, [edi+ebp]
cmp	esi, 0FFFFFFFFh
jz	short loc_1002D85C
push	5Dh
push	3Eh
push	eax
call	NSSUTIL_DoubleEscapeSize
add	esp, 0Ch
test	esi, esi
jnz	short loc_1002D850
inc	eax
lea	ebx, [ebx+eax+6]
add	edi, 4
jmp	short loc_1002D820
align 10h
			
shr	esi, 4
inc	eax
test	esi, esi
jnz	short loc_1002D850
lea	ebx, [ebx+eax+6]
add	edi, 4
jmp	short loc_1002D820
			
mov	esi, [esp+2Ch+arg_0]
push	esi
call	PORT_ArenaMark_Util
add	esp, 4
mov	[esp+2Ch+var_8], eax
test	eax, eax
jz	loc_1002D9B5
push	ebx
push	esi
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
mov	[esp+2Ch+var_C], esi
test	esi, esi
jz	loc_1002D99B
mov	edi, [esp+2Ch+Src]
mov	edx, esi
mov	eax, edi
sub	edx, edi
lea	esp, [esp+0]
mov	cl, [eax]
mov	[edx+eax], cl
inc	eax
test	cl, cl
jnz	short loc_1002D8A0
mov	eax, edi
lea	edx, [eax+1]
nop
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1002D8B0
mov	ebp, [esp+2Ch+var_1C]
sub	eax, edx
mov	edx, ds:dword_100A613C
mov	[eax+esi], edx
mov	edx, ds:dword_100A6140
lea	ecx, [eax+esi]
mov	[ecx+4], edx
mov	dl, ds:byte_100A6144
mov	[ecx+8], dl
add	ecx, 9
mov	[esp+2Ch+var_14], ecx
mov	ecx, 0FFFFFFF7h
sub	ecx, eax
add	ebx, ecx
mov	[esp+2Ch+var_18], ebx
test	ebp, ebp
jz	short loc_1002D926
mov	ebx, [esp+2Ch+var_10]
sub	ebx, ebp
lea	esp, [esp+0]
cmp	dword ptr [ebp+0], 0
jz	short loc_1002D926
mov	edx, [ebp+0]
mov	eax, [ebx+ebp]
push	edx
lea	edi, [esp+30h+var_18]
lea	esi, [esp+30h+var_14]
call	sub_1002D6B0
add	esp, 4
test	eax, eax
jnz	short loc_1002D99B
add	ebp, 4
jmp	short loc_1002D900
			
mov	eax, [esp+2Ch+arg_8]
push	eax
mov	eax, [esp+30h+arg_C]
lea	edi, [esp+30h+var_18]
lea	esi, [esp+30h+var_14]
call	sub_1002D6B0
add	esp, 4
test	eax, eax
jnz	short loc_1002D99B
mov	ebp, [esp+2Ch+arg_10]
test	ebp, ebp
jz	short loc_1002D97A
mov	ebx, [esp+2Ch+arg_14]
sub	ebx, ebp
mov	ecx, [ebp+0]
test	ecx, ecx
jz	short loc_1002D97A
mov	eax, [ebx+ebp]
cmp	eax, 0FFFFFFFFh
jz	short loc_1002D975
push	ecx
lea	edi, [esp+30h+var_18]
lea	esi, [esp+30h+var_14]
call	sub_1002D6B0
add	esp, 4
test	eax, eax
jnz	short loc_1002D99B
add	ebp, 4
jmp	short loc_1002D951
			
cmp	[esp+2Ch+var_18], 2
jl	short loc_1002D99B
mov	ecx, [esp+2Ch+var_8]
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+var_14]
push	ecx
push	edx
mov	word ptr [eax],	5Dh
call	PORT_ArenaUnmark_Util
jmp	short loc_1002D9B2
			
mov	eax, [esp+2Ch+var_8]
mov	ecx, [esp+2Ch+arg_0]
push	eax
push	ecx
call	PORT_ArenaRelease_Util
mov	[esp+34h+var_C], 0
add	esp, 8
mov	edx, [esp+2Ch+var_4]
push	edx
call	PORT_Free_Util
mov	edi, [esp+30h+var_C]
add	esp, 4
pop	ebp
mov	ebx, [esp+28h+var_1C]
test	ebx, ebx
jz	short loc_1002D9FF
mov	esi, ebx
mov	eax, [esi]
test	eax, eax
jz	short loc_1002D9E5
push	eax
call	PORT_Free_Util
add	esp, 4
add	esi, 4
jnz	short loc_1002D9D1
push	ebx
call	PORT_Free_Util
mov	eax, [esp+2Ch+var_10]
add	esp, 4
test	eax, eax
jz	short loc_1002D9FF
push	eax
call	PORT_Free_Util
add	esp, 4
			
mov	eax, edi
pop	edi
pop	esi
pop	ebx
add	esp, 1Ch
retn
align 10h
			
sub	esp, 8
push	ebx
push	ebp
push	esi
push	edi
mov	esi, eax
call	SECMOD_GetDefaultModuleListLock
mov	edi, eax
xor	ebx, ebx
push	edi
mov	[esp+1Ch+var_4], edi
mov	[esp+1Ch+var_8], ebx
call	SECMOD_GetReadLock
mov	eax, [esi+2Ch]
add	esp, 4
test	eax, eax
jz	short loc_1002DA55
jle	short loc_1002DA5E
mov	ecx, [esi+28h]
nop
mov	edx, [ecx]
cmp	dword ptr [edx+44h], 0
jz	short loc_1002DA49
inc	ebx
add	ecx, 4
dec	eax
jnz	short loc_1002DA40
mov	[esp+18h+var_8], ebx
jmp	short loc_1002DA5E
mov	eax, [esi+34h]
mov	[esp+18h+var_8], eax
mov	ebx, eax
			
lea	ecx, ds:0[ebx*4]
push	ecx
call	PORT_ZAlloc_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_1002DA87
push	edi
call	SECMOD_ReleaseReadLock
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
mov	eax, [esi+2Ch]
xor	edi, edi
test	eax, eax
jz	short loc_1002DAE6
xor	ebx, ebx
test	eax, eax
jle	loc_1002DB27
lea	ebx, [ebx+0]
mov	edx, [esi+28h]
mov	eax, [edx+edi*4]
cmp	dword ptr [eax+44h], 0
jz	short loc_1002DADE
cmp	ebx, [esp+18h+var_8]
jge	short loc_1002DB27
mov	edx, [eax+120h]
mov	ecx, [eax+11Ch]
push	edx
movzx	edx, byte ptr [eax+60h]
push	ecx
mov	ecx, [eax+64h]
push	edx
mov	edx, [eax+44h]
mov	eax, [eax+40h]
push	ecx
push	edx
push	eax
call	NSSUTIL_MkSlotString
add	esp, 18h
mov	[ebp+ebx*4+0], eax
inc	ebx
inc	edi
cmp	edi, [esi+2Ch]
jl	short loc_1002DAA0
jmp	short loc_1002DB27
test	ebx, ebx
jle	short loc_1002DB2B
xor	ebx, ebx
lea	esp, [esp+0]
mov	eax, [esi+30h]
movsx	edx, byte ptr [eax+ebx+11h]
movsx	ecx, byte ptr [eax+ebx+10h]
add	eax, ebx
push	edx
movzx	edx, byte ptr [eax+8]
push	ecx
mov	ecx, [eax+0Ch]
push	edx
mov	edx, [eax+4]
mov	eax, [eax]
push	ecx
push	edx
push	eax
call	NSSUTIL_MkSlotString
mov	[ebp+edi*4+0], eax
inc	edi
add	esp, 18h
add	ebx, 24h
cmp	edi, [esp+18h+var_8]
jl	short loc_1002DAF0
			
mov	ebx, [esp+18h+var_8]
mov	ecx, [esp+18h+var_4]
push	ecx
call	SECMOD_ReleaseReadLock
mov	edx, [esi+44h]
mov	eax, [esi+40h]
mov	ecx, [esi+64h]
push	edx
mov	edx, [esi+60h]
push	eax
mov	eax, [esi+54h]
push	ecx
mov	ecx, [esi+5Ch]
push	edx
mov	edx, [esi+58h]
push	eax
mov	eax, [esi+0Ch]
push	ecx
mov	ecx, [esi+4]
push	edx
push	eax
push	ecx
push	ebx
push	ebp
call	NSSUTIL_MkNSSString
mov	edx, [esi+48h]
mov	ecx, [esi+10h]
mov	edi, eax
mov	eax, [esi+14h]
push	edi
push	edx
push	eax
push	ecx
call	NSSUTIL_MkModuleSpec
add	esp, 40h
push	ebp
mov	esi, eax
call	PORT_Free_Util
push	edi
call	ds:PR_smprintf_free
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
public SECMOD_GetModuleSpecList
			
mov	ecx, [esp+arg_0]
mov	eax, [ecx+4Ch]
test	eax, eax
jz	short loc_1002DBB9
mov	ecx, [ecx+48h]
push	0
push	ecx
push	0
call	eax
add	esp, 0Ch
retn
xor	eax, eax
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
mov	eax, [edi+50h]
test	eax, eax
jnz	short loc_1002DBD1
or	eax, 0FFFFFFFFh
pop	edi
retn
push	ebx
mov	ebx, [eax+4Ch]
test	ebx, ebx
jz	short loc_1002DC04
push	esi
mov	eax, edi
call	sub_1002DA10
mov	esi, eax
mov	eax, [edi+50h]
mov	ecx, [eax+48h]
push	esi
push	ecx
push	1
call	ebx
push	esi
mov	edi, eax
call	PORT_Free_Util
add	esp, 10h
pop	esi
test	edi, edi
jz	short loc_1002DC04
pop	ebx
xor	eax, eax
pop	edi
retn
			
pop	ebx
or	eax, 0FFFFFFFFh
pop	edi
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
mov	eax, [edi+50h]
test	eax, eax
jnz	short loc_1002DC21
or	eax, 0FFFFFFFFh
pop	edi
retn
push	ebx
mov	ebx, [eax+4Ch]
test	ebx, ebx
jz	short loc_1002DC54
push	esi
mov	eax, edi
call	sub_1002DA10
mov	esi, eax
mov	eax, [edi+50h]
mov	ecx, [eax+48h]
push	esi
push	ecx
push	2
call	ebx
push	esi
mov	edi, eax
call	PORT_Free_Util
add	esp, 10h
pop	esi
test	edi, edi
jz	short loc_1002DC54
pop	ebx
xor	eax, eax
pop	edi
retn
			
pop	ebx
or	eax, 0FFFFFFFFh
pop	edi
retn
align 10h
public SECMOD_FreeModuleSpecList
			
mov	ecx, [esp+arg_0]
mov	eax, [ecx+4Ch]
test	eax, eax
jz	short loc_1002DC82
mov	edx, [esp+arg_4]
mov	ecx, [ecx+48h]
push	edx
push	ecx
push	3
call	eax
add	esp, 0Ch
test	eax, eax
jz	short loc_1002DC82
xor	eax, eax
retn
			
or	eax, 0FFFFFFFFh
retn
align 10h
public SECMOD_LoadModule
			
sub	esp, 1Ch
push	ebx
xor	ebx, ebx
push	ebp
push	esi
mov	[esp+28h+var_18], ebx
mov	[esp+28h+var_14], ebx
mov	[esp+28h+var_10], ebx
mov	[esp+28h+var_C], ebx
xor	ebp, ebp
mov	[esp+28h+var_8], ebx
call	sub_100385D0
lea	eax, [esp+28h+var_C]
push	eax
lea	ecx, [esp+2Ch+var_10]
push	ecx
mov	ecx, [esp+30h+arg_0]
lea	edx, [esp+30h+var_14]
push	edx
lea	eax, [esp+34h+var_18]
push	eax
push	ecx
call	NSSUTIL_ArgParseModuleSpec
add	esp, 14h
test	eax, eax
jnz	loc_1002DEEC
mov	edx, [esp+28h+var_C]
mov	eax, [esp+28h+var_10]
mov	ecx, [esp+28h+var_14]
push	edx
mov	edx, [esp+2Ch+var_18]
push	eax
push	ecx
push	edx
call	SECMOD_CreateModule
mov	ebp, eax
mov	eax, [esp+38h+var_18]
add	esp, 10h
cmp	eax, ebx
jz	short loc_1002DD0B
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+28h+var_14]
cmp	eax, ebx
jz	short loc_1002DD1C
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+28h+var_10]
cmp	eax, ebx
jz	short loc_1002DD2D
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+28h+var_C]
cmp	eax, ebx
jz	short loc_1002DD3E
push	eax
call	PORT_Free_Util
add	esp, 4
cmp	ebp, ebx
jz	loc_1002DEEC
mov	esi, [esp+28h+arg_4]
cmp	esi, ebx
jz	short loc_1002DD6B
push	esi
call	SECMOD_ReferenceModule
add	esp, 4
mov	[ebp+50h], eax
cmp	[ebp+4], ebx
jz	short loc_1002DD6B
test	byte ptr [esi+4], 2
jz	short loc_1002DD6B
mov	eax, [esi+4]
mov	[ebp+4], eax
			
lea	ecx, [esp+28h+var_8]
push	ecx
push	ebp
call	sub_100248B0
add	esp, 8
mov	[esp+28h+var_4], eax
cmp	eax, ebx
jnz	loc_1002DE95
cmp	[esp+28h+var_8], ebx
jz	short loc_1002DD9F
push	ebp
call	SECMOD_DestroyModule
mov	eax, [esp+2Ch+var_8]
add	esp, 4
pop	esi
pop	ebp
pop	ebx
add	esp, 1Ch
retn
cmp	[esp+28h+arg_8], ebx
jz	loc_1002DECD
cmp	[ebp+58h], ebx
jz	loc_1002DECD
push	ebx
call	PORT_SetError_Util
push	ebp
call	SECMOD_GetModuleSpecList
add	esp, 8
mov	[esp+28h+var_1C], eax
cmp	eax, ebx
jz	loc_1002DEB5
push	edi
mov	edi, eax
cmp	[eax], ebx
jz	short loc_1002DDDD
test	byte ptr [ebp+58h], 2
jz	short loc_1002DDDD
lea	edi, [eax+4]
			
mov	esi, [edi]
cmp	esi, ebx
jz	loc_1002DE84
mov	ecx, [esp+2Ch+arg_0]
mov	eax, esi
lea	ecx, [ecx+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1002DE10
cmp	dl, bl
jz	short loc_1002DE0C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1002DE10
add	eax, 2
add	ecx, 2
cmp	dl, bl
jnz	short loc_1002DDF0
xor	eax, eax
jmp	short loc_1002DE15
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
cmp	eax, ebx
jz	short loc_1002DE4A
push	1
push	ebp
push	esi
call	SECMOD_LoadModule
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jz	short loc_1002DE80
cmp	[esi+54h], ebx
jz	short loc_1002DE35
cmp	[esi+8], ebx
jz	short loc_1002DE59
push	esi
call	SECMOD_DestroyModule
mov	esi, [edi+4]
add	edi, 4
add	esp, 4
cmp	esi, ebx
jnz	short loc_1002DDE7
jmp	short loc_1002DE80
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1002DE78
call	PORT_GetError_Util
mov	edi, eax
cmp	edi, ebx
jnz	short loc_1002DE69
mov	edi, 0FFFFE040h
push	esi
call	SECMOD_DestroyModule
push	edi
call	PORT_SetError_Util
add	esp, 8
mov	[esp+2Ch+var_4], 0FFFFFFFFh
			
mov	eax, [esp+2Ch+var_1C]
push	eax
push	ebp
call	SECMOD_FreeModuleSpecList
add	esp, 8
pop	edi
cmp	[esp+28h+var_4], ebx
jz	short loc_1002DECD
			
cmp	[ebp+8], ebx
jz	short loc_1002DEA3
push	ebp
call	sub_10024CE0
add	esp, 4
push	ebp
call	sub_100393B0
add	esp, 4
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 1Ch
retn
call	PORT_GetError_Util
test	eax, eax
jnz	short loc_1002DE95
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1002DE95
			
push	ebp
cmp	[ebp+5Ch], ebx
jnz	short loc_1002DEE4
call	sub_10039360
add	esp, 4
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 1Ch
retn
call	sub_100397B0
add	esp, 4
			
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 1Ch
retn
align 10h
public SECMOD_LoadUserModule
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	esi
push	edi
push	eax
push	ecx
push	edx
call	SECMOD_LoadModule
add	esp, 0Ch
mov	esi, eax
call	SECMOD_GetDefaultModuleListLock
mov	edi, eax
test	esi, esi
jz	short loc_1002DF51
push	ebx
push	edi
call	SECMOD_GetReadLock
push	esi
call	sub_1004AA80
push	edi
mov	ebx, eax
call	SECMOD_ReleaseReadLock
add	esp, 0Ch
test	ebx, ebx
pop	ebx
jz	short loc_1002DF51
push	esi
call	SECMOD_DestroyModule
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
retn
			
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
public SECMOD_UnloadUserModule
push	ecx
push	esi
push	edi
mov	[esp+0Ch+var_4], 0
call	SECMOD_GetDefaultModuleListLock
mov	edi, [esp+0Ch+arg_0]
mov	esi, eax
test	edi, edi
jnz	short loc_1002DF81
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
pop	ecx
retn
push	ebx
push	esi
call	SECMOD_GetReadLock
push	edi
call	sub_1004AB40
push	esi
mov	ebx, eax
call	SECMOD_ReleaseReadLock
add	esp, 0Ch
test	ebx, ebx
pop	ebx
jnz	short loc_1002DF7A
push	0
lea	eax, [esp+10h+var_4]
push	eax
push	edi
push	0
call	SECMOD_DeleteModuleEx
add	esp, 10h
pop	edi
pop	esi
pop	ecx
retn
align 10h
sub	esp, 0Ch
mov	edx, [esp+0Ch+Src]
lea	eax, [esp+0Ch+var_4]
push	eax		
mov	eax, [esp+10h+arg_0]
lea	ecx, [esp+10h+var_C]
push	ecx		
push	edx		
push	eax		
push	1		
call	sub_1002CE00
add	esp, 14h
mov	[esp+0Ch+var_8], eax
test	eax, eax
jnz	short loc_1002DFED
add	esp, 0Ch
retn
push	ebx
push	ebp
push	esi
mov	esi, [esp+18h+var_C]
push	edi
xor	edi, edi
test	esi, esi
jz	short loc_1002E009
jmp	short loc_1002E000
align 10h
			
cmp	dword ptr [esi+edi*4], 0
jz	short loc_1002E009
inc	edi
jmp	short loc_1002E000
			
mov	ebx, [esp+1Ch+arg_8]
lea	eax, [edi+1]
mov	[ebx], eax
shl	eax, 4
push	eax
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_1002E028
mov	[ebx], eax
jmp	short loc_1002E076
mov	eax, [esp+1Ch+var_8]
lea	ecx, [ebp+0Ch]
push	ecx
lea	edx, [ebp+4]
lea	ebx, [ebp+8]
push	edx
call	sub_1002D2B0
add	esp, 8
xor	esi, esi
mov	[ebp+0], eax
test	edi, edi
jle	short loc_1002E072
lea	ebx, [ebp+18h]
jmp	short loc_1002E050
align 10h
			
mov	edx, [esp+1Ch+var_C]
lea	eax, [ebx+4]
push	eax
mov	eax, [edx+esi*4]
lea	ecx, [ebx-4]
push	ecx
call	sub_1002D2B0
mov	[ebx-8], eax
inc	esi
add	esp, 8
add	ebx, 10h
cmp	esi, edi
jl	short loc_1002E050
mov	esi, [esp+1Ch+var_C]
test	esi, esi
jz	short loc_1002E0AE
mov	edi, esi
lea	esp, [esp+0]
mov	eax, [edi]
test	eax, eax
jz	short loc_1002E094
push	eax
call	PORT_Free_Util
add	esp, 4
add	edi, 4
jnz	short loc_1002E080
push	esi
call	PORT_Free_Util
mov	eax, [esp+20h+var_4]
add	esp, 4
test	eax, eax
jz	short loc_1002E0AE
push	eax
call	PORT_Free_Util
add	esp, 4
			
mov	eax, [esp+1Ch+var_8]
push	eax
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 0Ch
retn
align 10h
			
mov	eax, [esp+arg_0]
cmp	eax, 9Bh
jg	short loc_1002E104
cmp	eax, 9Ah
jge	short loc_1002E0FE 
add	eax, 0FFFFFFEBh	
cmp	eax, 62h
ja	short loc_1002E130 
movzx	eax, ds:byte_1002E148[eax]
jmp	ds:off_1002E134[eax*4] 
			
mov	eax, 0Ah	
retn
			
			
mov	eax, 6		
retn
add	eax, 0FFFFFF64h	
cmp	eax, 89h
ja	short loc_1002E130 
movzx	ecx, ds:byte_1002E1BC[eax]
jmp	ds:off_1002E1AC[ecx*4] 
			
			
mov	eax, 7		
			
retn
			
			
mov	eax, 5		
			
retn
			
mov	eax, 123h	
retn
			
xor	eax, eax	
retn
align 4
			
dd offset loc_1002E124,	offset loc_1002E130 
db	4,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     1,     1
db	2,     3,     3
align 4
			
dd offset loc_1002E130	
db	3,     3,     3,     3 
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     2
db	2,     2
align 10h
mov	eax, [esp+arg_0]
test	eax, eax
jz	short locret_1002E269
mov	eax, [eax]
test	eax, eax
jz	short locret_1002E269
push	1
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
retn
align 10h
public SEC_PKCS5GetCryptoAlgorithm
			
			
push	ebp
mov	ebp, [esp+4+arg_0]
test	ebp, ebp
jnz	short loc_1002E27D
xor	eax, eax
pop	ebp
retn
push	ebx
push	ebp
call	SECOID_GetAlgorithmTag_Util
mov	edx, eax
push	edx
call	sub_1002E0D0
mov	ebx, eax
add	esp, 8
cmp	ebx, 123h
jnz	short loc_1002E312
cmp	edx, eax
jz	short loc_1002E312
push	edi
push	800h
xor	ebx, ebx
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_1002E311
push	esi
push	34h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1002E2DD
add	ebp, 0Ch
push	ebp
push	offset dword_100A6230
push	esi
push	edi
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_1002E2EF
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
mov	eax, ebx
pop	ebx
pop	ebp
retn
lea	eax, [esi+1Ch]
push	eax
mov	[esi], edi
call	SECOID_GetAlgorithmTag_Util
mov	esi, [esi]
add	esp, 4
mov	ebx, eax
test	esi, esi
jz	short loc_1002E310
push	1
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
			
mov	eax, ebx
pop	ebx
pop	ebp
retn
align 10h
public SEC_PKCS5IsAlgorithmPBEAlg
mov	eax, [esp+arg_0]
push	eax
call	SEC_PKCS5GetCryptoAlgorithm
add	esp, 4
neg	eax
sbb	eax, eax
neg	eax
retn
align 10h
public SEC_PKCS5IsAlgorithmPBEAlgTag
mov	eax, [esp+arg_0]
push	eax
call	sub_1002E0D0
add	esp, 4
neg	eax
sbb	eax, eax
neg	eax
retn
align 10h
push	esi
call	sub_1000EC10
add	esp, 4
test	eax, eax
jz	short loc_1002E373
mov	eax, 125h
retn
push	esi
call	HASH_GetHashTypeByOidTag
add	esp, 4
test	eax, eax
jz	short loc_1002E383
xor	eax, eax
retn
push	esi
call	PK11_AlgtagToMechanism
inc	eax
add	esp, 4
neg	eax
sbb	eax, eax
and	eax, 124h
retn
align 10h
public SEC_PKCS5GetPBEAlgorithm
push	esi
mov	esi, [esp+4+arg_0]
lea	eax, [esi-5]	
cmp	eax, 5
ja	short loc_1002E428 
jmp	ds:off_1002E460[eax*4] 
			
mov	eax, [esp+4+arg_4] 
cmp	eax, 0C0h	
ja	short loc_1002E416 
movzx	eax, ds:byte_1002E484[eax]
jmp	ds:off_1002E478[eax*4] 
			
mov	eax, 9Ch	
pop	esi
retn
			
mov	eax, 9Dh	
pop	esi
retn
			
mov	eax, 17h	
pop	esi
retn
			
mov	eax, [esp+4+arg_4] 
sub	eax, 0
jz	short loc_1002E3F5
sub	eax, 28h
jz	short loc_1002E3FC
sub	eax, 58h
jnz	short loc_1002E416 
mov	eax, 9Eh
pop	esi
retn
mov	eax, 9Fh
pop	esi
retn
			
mov	eax, [esp+4+arg_4] 
sub	eax, 0
jz	short loc_1002E421
sub	eax, 28h
jz	short loc_1002E41A
sub	eax, 58h
jz	short loc_1002E421
			
xor	eax, eax	
pop	esi
retn
mov	eax, 9Bh
pop	esi
retn
			
mov	eax, 9Ah
pop	esi
retn
			
			
push	esi		
call	sub_1000EC10
add	esp, 4
test	eax, eax
jz	short loc_1002E43C
mov	eax, 125h
pop	esi
retn
push	esi
call	HASH_GetHashTypeByOidTag
add	esp, 4
test	eax, eax
jnz	short loc_1002E416 
push	esi
call	PK11_AlgtagToMechanism
inc	eax
add	esp, 4
neg	eax
sbb	eax, eax
and	eax, 124h
pop	esi
retn
align 10h
dd offset loc_1002E403	
dd offset loc_1002E3B4
dd offset loc_1002E428
dd offset loc_1002E428
dd offset loc_1002E3DB
			
			
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	1,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	1,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	0,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	0
align 10h
			
sub	esp, 44h
push	ebx
push	edi
mov	edi, [esp+4Ch+arg_0]
push	edi
or	ebx, 0FFFFFFFFh
call	SECOID_GetAlgorithmTag_Util
add	esp, 4
cmp	eax, 123h
jz	short loc_1002E574
pop	edi
or	eax, ebx
pop	ebx
add	esp, 44h
retn
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1002E5D1
push	44h		
lea	eax, [esp+54h+Dst]
push	0		
push	eax		
call	memset
add	edi, 0Ch
push	edi
push	offset dword_100A61D0
lea	ecx, [esp+64h+Dst]
push	ecx
push	esi
call	SEC_ASN1DecodeItem_Util
add	esp, 1Ch
test	eax, eax
jnz	short loc_1002E5C6
cmp	[esp+50h+var_24], eax
jz	short loc_1002E5C6
lea	edx, [esp+50h+var_28]
push	edx
call	DER_GetInteger_Util
add	esp, 4
mov	ebx, eax
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
mov	eax, ebx
pop	ebx
add	esp, 44h
retn
align 10h
public SEC_PKCS5GetKeyLength
			
			
push	ebx
mov	ebx, [esp+4+arg_0]
test	ebx, ebx
jnz	short loc_1002E5ED
xor	eax, eax
pop	ebx
retn
push	ebx
call	SECOID_GetAlgorithmTag_Util
add	esp, 4
cmp	eax, 123h
jg	short loc_1002E642
jz	short loc_1002E637
sub	eax, 15h	
cmp	eax, 8Ah
ja	loc_1002E6BC	
movzx	eax, ds:byte_1002E6D8[eax]
jmp	ds:off_1002E6C4[eax*4] 
			
mov	eax, 18h	
pop	ebx
retn
			
mov	eax, 8		
pop	ebx
retn
			
mov	eax, 5		
pop	ebx
retn
			
mov	eax, 10h	
pop	ebx
retn
push	ebx
call	sub_1002E550
add	esp, 4
pop	ebx
retn
add	eax, 0FFFFFEDCh
cmp	eax, 1
ja	short loc_1002E6BC 
push	ebp
push	esi
push	800h
or	ebp, 0FFFFFFFFh
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1002E6B6
push	edi
push	34h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_1002E68D
add	ebx, 0Ch
push	ebx
push	offset dword_100A6230
push	edi
push	esi
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
cmp	eax, ebp
jnz	short loc_1002E69F
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
lea	ecx, [edi+4]
push	ecx
mov	[edi], esi
call	sub_1002E550
push	edi
mov	ebp, eax
call	sub_1002E250
add	esp, 8
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
			
or	eax, 0FFFFFFFFh	
pop	ebx
retn
align 4
			
dd offset loc_1002E61B,	offset loc_1002E6BC 
db	4,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     1,     2
db	3,     1,     2,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     1,     2,     3
db	3,     1,     2
align 10h
cmp	eax, 9Ah
jl	short loc_1002E784
cmp	eax, 9Fh
jg	short loc_1002E784
mov	eax, 1
retn
			
xor	eax, eax
retn
align 10h
cmp	eax, 123h
jl	short loc_1002E7A4
cmp	eax, 125h
jg	short loc_1002E7A4
mov	eax, 1
retn
			
xor	eax, eax
retn
align 10h
push	ebx
push	ebp
mov	ebp, [esp+8+arg_4]
mov	ebx, eax
test	ebp, ebp
jns	short loc_1002E7C1
pop	ebp
xor	eax, eax
pop	ebx
retn
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1002E7D9
pop	esi
pop	ebp
pop	ebx
retn
push	edi
push	44h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_1002E82F
mov	[edi], esi
test	ebx, ebx
jz	short loc_1002E807
cmp	dword ptr [ebx+4], 0
jz	short loc_1002E807
push	ebx
lea	eax, [edi+4]
push	eax
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
jmp	short loc_1002E82B
			
push	10h
push	esi
mov	dword ptr [edi+0Ch], 10h
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[edi+8], eax
test	eax, eax
jz	short loc_1002E82F
push	10h
push	eax
call	PK11_GenerateRandom
add	esp, 8
test	eax, eax
jz	short loc_1002E841
			
push	1
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
push	ebp
lea	ecx, [edi+10h]
push	ecx
push	esi
call	SEC_ASN1EncodeInteger_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_1002E88B
cmp	[esp+10h+arg_0], 123h
jnz	short loc_1002E8A0
mov	edx, [esp+10h+arg_8]
push	edx
lea	eax, [edi+1Ch]
push	eax
push	esi
call	SEC_ASN1EncodeInteger_Util
add	esp, 0Ch
push	0
test	eax, eax
jz	short loc_1002E88D
mov	ecx, [esp+14h+arg_C]
push	ecx
lea	ebx, [edi+2Ch]
push	ebx
push	esi
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jz	short loc_1002E89D
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
mov	[edi+28h], ebx
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
			
sub	esp, 4Ch
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+54h+arg_0]
push	edi
mov	[esp+58h+var_4C], ebx
mov	edi, ebp
mov	[esp+58h+arg_0], ebx
cmp	[esp+58h+arg_18], ebx
jg	short loc_1002E8D5
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 4Ch
retn
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+58h+var_48], eax
cmp	eax, ebx
jz	loc_1002EB5A
push	esi
push	ebp
call	sub_1002E0D0
add	esp, 4
test	eax, eax
jz	short loc_1002E914
cmp	ebp, 123h
jl	loc_1002EA9D
cmp	ebp, 125h
jg	loc_1002EA9D
cmp	ebp, 123h
jl	short loc_1002E932
cmp	ebp, 125h
jg	short loc_1002E932
mov	esi, [esp+5Ch+arg_4]
cmp	esi, ebx
jz	loc_1002EB35
jmp	short loc_1002E939
			
mov	esi, ebp
mov	ebp, 123h
mov	[esp+5Ch+var_44], 123h
cmp	ebp, 123h
jnz	short loc_1002E950
call	sub_1002E360
mov	ebp, eax
mov	ebx, [esp+5Ch+arg_10]
test	ebx, ebx
jnz	short loc_1002E992
push	esi
call	sub_1000EC10
add	esp, 4
test	eax, eax
jz	short loc_1002E96D
push	eax
call	HASH_ResultLenByOidTag
jmp	short loc_1002E985
push	esi
call	PK11_AlgtagToMechanism
add	esp, 4
cmp	eax, 0FFFFFFFFh
jz	loc_1002EB35
push	eax
call	sub_10037C40
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	loc_1002EB35
cmp	[esp+5Ch+arg_8], 0
jnz	short loc_1002E9A1
mov	[esp+5Ch+arg_8], 126h
push	ebx
push	esi
call	PK11_AlgtagToMechanism
add	esp, 4
push	eax
call	sub_100265F0
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_1002EB35
push	34h		
lea	eax, [esp+60h+Dst]
push	0		
push	eax		
call	memset
mov	edx, [esp+68h+var_48]
lea	ecx, [esp+68h+var_18]
push	ecx
push	edx
push	edi
push	esi
call	PK11_ParamToAlgid
push	1
push	edi
mov	esi, eax
call	SECITEM_FreeItem_Util
add	esp, 24h
test	esi, esi
jnz	loc_1002EB35
mov	edi, [esp+5Ch+var_44]
mov	eax, [esp+5Ch+arg_8]
mov	ecx, [esp+5Ch+arg_18]
push	eax
mov	eax, [esp+60h+arg_14]
push	ebx
push	ecx
push	edi
call	sub_1002E7B0
add	esp, 10h
mov	[esp+5Ch+arg_0], eax
test	eax, eax
jz	loc_1002EB35
mov	ebx, [esp+5Ch+var_48]
push	18h
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
xor	eax, eax
add	esp, 8
cmp	esi, eax
jz	loc_1002EB35
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_38], eax
mov	eax, ebp
call	sub_1002E790
test	eax, eax
jz	short loc_1002EAA6
mov	edx, [esp+5Ch+arg_0]
push	offset dword_100A61D0
push	edx
lea	eax, [esp+64h+var_40]
push	eax
push	ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	loc_1002EB35
lea	ecx, [esp+5Ch+var_40]
push	ecx
push	edi
lea	edx, [esp+64h+var_30]
push	edx
push	ebx
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jnz	loc_1002EB35
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_38], eax
push	offset dword_100A6230
lea	eax, [esp+60h+Dst]
push	eax
lea	ecx, [esp+64h+var_40]
push	ecx
jmp	short loc_1002EAD1
			
mov	ebx, [esp+5Ch+arg_10]
jmp	loc_1002E9F6
mov	eax, ebp
call	sub_1002E770
test	eax, eax
jnz	short loc_1002EAC2
mov	edx, [esp+5Ch+arg_0]
push	offset dword_100A6148
push	edx
lea	eax, [esp+64h+var_40]
push	eax
jmp	short loc_1002EAD1
mov	ecx, [esp+5Ch+arg_0]
push	offset dword_100A6188
push	ecx
lea	edx, [esp+64h+var_40]
push	edx
			
push	ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_1002EB35
lea	eax, [esp+5Ch+var_40]
push	eax
push	ebp
push	esi
push	ebx
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1002EB35
push	18h
call	PORT_ZAlloc_Util
add	esp, 4
mov	[esp+5Ch+var_4C], eax
test	eax, eax
jz	short loc_1002EB35
push	esi
mov	esi, eax
push	esi
push	0
call	SECOID_CopyAlgorithmID_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_1002EB2B
push	1
push	esi
call	SECOID_DestroyAlgorithmID_Util
add	esp, 8
mov	[esp+5Ch+var_4C], 0
jmp	short loc_1002EB35
mov	eax, [esp+5Ch+arg_C]
test	eax, eax
jz	short loc_1002EB35
mov	[eax], edi
			
mov	ecx, [esp+5Ch+var_48]
push	1
push	ecx
call	PORT_FreeArena_Util
mov	eax, [esp+64h+arg_0]
add	esp, 8
pop	esi
test	eax, eax
jz	short loc_1002EB5A
mov	edx, [eax]
push	1
push	edx
call	PORT_FreeArena_Util
add	esp, 8
			
mov	eax, [esp+58h+var_4C]
pop	edi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
align 10h
sub	esp, 48h
push	ebx
mov	ebx, [esp+4Ch+arg_0]
push	ebp
push	esi
push	edi
push	ebx
call	SECOID_GetAlgorithmTag_Util
push	800h
mov	esi, eax
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	loc_1002ECE5
push	44h		
lea	eax, [esp+5Ch+Dst]
push	0		
push	eax		
call	memset
add	esp, 0Ch
cmp	esi, 9Ah
jl	short loc_1002EBD9
cmp	esi, 9Fh
jg	short loc_1002EBD9
push	esi
call	PK11_AlgtagToMechanism
push	eax
call	PK11_GetIVLength
add	ebx, 0Ch
push	ebx
push	offset dword_100A6188
lea	ecx, [esp+68h+Dst]
mov	edi, eax
push	ecx
jmp	short loc_1002EC18
			
cmp	esi, 123h
jnz	short loc_1002EBFC
add	ebx, 0Ch
push	ebx
push	offset dword_100A61D0
lea	edx, [esp+60h+Dst]
push	edx
push	ebp
xor	edi, edi
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
jmp	short loc_1002EC29
push	esi
call	PK11_AlgtagToMechanism
push	eax
call	PK11_GetIVLength
add	ebx, 0Ch
push	ebx
mov	edi, eax
push	offset dword_100A6148
lea	eax, [esp+68h+Dst]
push	eax
push	ebp
call	SEC_ASN1DecodeItem_Util
add	esp, 18h
test	edi, edi
js	loc_1002ECDA
test	eax, eax
jnz	loc_1002ECDA
lea	ecx, [esp+58h+var_34]
push	ecx
call	DER_GetInteger_Util
add	esp, 4
mov	[esp+58h+var_48], eax
cmp	esi, 123h
jnz	loc_1002ECF0
mov	edx, [esp+58h+Size]
add	edx, 24h
push	edx
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1002ECDA
mov	eax, [esp+58h+var_1C]
xor	edi, edi
mov	ebx, 24h
cmp	eax, edi
jz	short loc_1002EC88
cmp	[eax+4], edi
jz	short loc_1002EC88
push	eax
call	SECOID_GetAlgorithmTag_Util
add	esp, 4
cmp	eax, 126h
jnz	short loc_1002ECC4
			
mov	[esi+14h], edi
mov	[esi+18h], edi
mov	dword ptr [esi+10h], 1
mov	dword ptr [esi], 1
mov	eax, [esp+58h+Size]
mov	ecx, [esp+58h+Src]
push	eax		
push	ecx		
lea	edi, [esi+24h]
push	edi		
call	memcpy
mov	eax, [esp+64h+var_48]
mov	[esi+4], edi
mov	edx, [esp+64h+Size]
add	esp, 0Ch
mov	[esi+8], edx
mov	[esi+0Ch], eax
jmp	short loc_1002ED41
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
push	esi
call	PORT_Free_Util
add	esp, 4
			
push	1
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 48h
retn
mov	ecx, [esp+58h+Size]
lea	edx, [ecx+edi+18h]
push	edx
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1002ECDA
lea	eax, [esi+18h]
mov	[esi+0Ch], eax
mov	ecx, [esp+58h+Size]
mov	edx, [esp+58h+Src]
push	ecx		
push	edx		
push	eax		
mov	ebx, 18h
call	memcpy
mov	eax, [esp+64h+Size]
add	esp, 0Ch
mov	[esi+10h], eax
test	edi, edi
jz	short loc_1002ED3A
mov	ecx, [esp+58h+Size]
lea	edx, [ecx+esi+18h]
mov	[esi], edx
mov	eax, [esp+58h+var_48]
mov	[esi+14h], eax
mov	eax, [esp+58h+arg_4]
push	1
push	ebp
mov	[eax+4], esi
mov	[eax+8], ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 48h
retn
mov	eax, [esp+arg_4]
sub	esp, 0Ch
push	edi
test	eax, eax
jz	short loc_1002EDD4
mov	edi, [esp+10h+arg_C]
test	edi, edi
jz	short loc_1002EDD4
mov	eax, [eax+4]
mov	ecx, [eax+0Ch]
mov	[esp+10h+var_8], ecx
mov	edx, [eax+10h]
push	esi
mov	[esp+14h+var_4], edx
mov	eax, [eax+14h]
mov	edx, [esp+14h+arg_0]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	0
push	0
push	0
push	0
push	edx
call	sub_1002E8B0
mov	esi, eax
add	esp, 1Ch
test	esi, esi
jnz	short loc_1002EDB3
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 0Ch
retn
mov	eax, [esp+14h+arg_8]
push	esi
push	edi
push	eax
call	SECOID_CopyAlgorithmID_Util
push	1
push	esi
mov	edi, eax
call	SECOID_DestroyAlgorithmID_Util
add	esp, 14h
pop	esi
mov	eax, edi
pop	edi
add	esp, 0Ch
retn
			
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 0Ch
retn
align 10h
public SECMOD_PubCipherFlagstoInternal
mov	eax, [esp+arg_0] 
retn
align 10h
public PBE_DestroyContext
mov	eax, [esp+arg_0]
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
retn
public PK11_CreatePBEParams
push	ebx
push	esi
push	edi
push	18h
push	0
push	0
call	SECITEM_AllocItem_Util
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	loc_1002EEB1
mov	ecx, [ebx+4]
mov	edi, [esp+0Ch+arg_4]
xor	eax, eax
mov	[ecx], eax
mov	[ecx+4], eax
mov	[ecx+8], eax
mov	[ecx+0Ch], eax
mov	[ecx+10h], eax
mov	[ecx+14h], eax
mov	eax, [edi+8]
mov	esi, [ebx+4]
push	eax
call	PORT_ZAlloc_Util
add	esp, 4
mov	[esi+4], eax
test	eax, eax
jz	short loc_1002EE76
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ecx		
push	edx		
push	eax		
call	memcpy
mov	eax, [edi+8]
mov	edi, [esp+18h+arg_0]
mov	[esi+8], eax
mov	ecx, [edi+8]
push	ecx
call	PORT_ZAlloc_Util
add	esp, 10h
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_1002EEB7
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1002EE8A
mov	edx, [esi+8]
push	edx
push	eax
call	PORT_ZFree_Util
add	esp, 8
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_1002EE9E
mov	ecx, [esi+10h]
push	ecx
push	eax
call	PORT_ZFree_Util
add	esp, 8
push	18h
push	esi
call	PORT_ZFree_Util
push	0Ch
push	ebx
call	PORT_ZFree_Util
add	esp, 10h
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
mov	edx, [edi+8]
mov	ecx, [edi+4]
push	edx		
push	ecx		
push	eax		
call	memcpy
mov	edx, [edi+8]
mov	eax, [esp+18h+arg_8]
add	esp, 0Ch
pop	edi
mov	[esi+14h], eax
mov	[esi+10h], edx
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
public PK11_DestroyPBEParams
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	short loc_1002EF30
push	esi
mov	esi, [edi+4]
test	esi, esi
jz	short loc_1002EF24
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1002EF05
mov	ecx, [esi+8]
push	ecx
push	eax
call	PORT_ZFree_Util
add	esp, 8
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_1002EF19
mov	edx, [esi+10h]
push	edx
push	eax
call	PORT_ZFree_Util
add	esp, 8
push	18h
push	esi
call	PORT_ZFree_Util
add	esp, 8
push	0Ch
push	edi
call	PORT_ZFree_Util
add	esp, 8
pop	esi
pop	edi
retn
align 10h
public PK11_CreatePBEAlgorithmID
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_0]
push	eax
push	ecx
push	0
push	0
push	0
push	0
push	edx
call	sub_1002E8B0
add	esp, 1Ch
retn
public PK11_CreatePBEV2AlgorithmID
mov	eax, [esp+arg_10]
mov	ecx, [esp+arg_14]
mov	edx, [esp+arg_C]
push	eax
mov	eax, [esp+4+arg_8]
push	ecx
mov	ecx, [esp+8+arg_4]
push	edx
mov	edx, [esp+0Ch+arg_0]
push	0
push	eax
push	ecx
push	edx
call	sub_1002E8B0
add	esp, 1Ch
retn
align 10h
			
mov	ecx, [esp+arg_8]
test	ecx, ecx
jz	loc_1002F03D
mov	eax, [ecx+4]
test	eax, eax
jz	loc_1002F03D
push	esi
mov	esi, [esp+4+arg_4]
cmp	esi, 0FFFFFFFFh
jnz	short loc_1002EFC2
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
push	edi
cmp	esi, 3B0h
jnz	short loc_1002EFEB
cmp	dword ptr [ecx+8], 24h
jb	short loc_1002EFF1
mov	edx, [esp+8+arg_14]
mov	edi, [edx+4]
mov	[eax+1Ch], edi
mov	edx, [edx+8]
mov	[esp+8+arg_8], edx
lea	edx, [esp+8+arg_8]
mov	[eax+20h], edx
jmp	short loc_1002F013
cmp	dword ptr [ecx+8], 18h
jnb	short loc_1002F003
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
retn
mov	edx, [esp+8+arg_14]
mov	edi, [edx+4]
mov	[eax+4], edi
mov	edx, [edx+8]
mov	[eax+8], edx
mov	eax, [esp+8+arg_18]
mov	edx, [esp+8+arg_10]
push	eax
mov	eax, [esp+0Ch+arg_C]
push	0
push	60B00h
push	0
push	edx
push	eax
push	ecx
mov	ecx, [esp+24h+arg_0]
push	esi
push	ecx
call	sub_10034460
add	esp, 24h
pop	edi
pop	esi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
align 10h
public PK11_RawPBEKeyGen
			
cmp	[esp+arg_10], 0
mov	eax, [esp+arg_4]
jz	short loc_1002F067
cmp	eax, 80000003h
jnz	short loc_1002F067
mov	eax, 80000008h
			
mov	ecx, [esp+arg_14]
mov	edx, [esp+arg_C]
push	ecx
mov	ecx, [esp+4+arg_8]
push	edx
mov	edx, [esp+8+arg_0]
push	0
push	0FFFFFFFFh
push	ecx
push	eax
push	edx
call	sub_1002EF90
add	esp, 1Ch
retn
align 10h
public PK11_PBEKeyGen
			
sub	esp, 8
push	ebx
push	ebp
mov	ebp, [esp+10h+arg_4]
push	esi
push	edi
xor	esi, esi
push	ebp
mov	[esp+1Ch+var_8], esi
or	edi, 0FFFFFFFFh
call	SECOID_GetAlgorithmTag_Util
mov	ebx, eax
add	esp, 4
cmp	ebx, 123h
jl	loc_1002F17C
cmp	ebx, 125h
jg	loc_1002F17C
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_1002F10E
push	34h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1002F103
add	ebp, 0Ch
push	ebp
push	offset dword_100A6230
push	esi
push	edi
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_1002F118
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
lea	eax, [esi+1Ch]
push	eax
mov	[esi], edi
call	SECOID_GetAlgorithmTag_Util
push	eax
call	PK11_AlgtagToMechanism
lea	edi, [esi+4]
push	edi
mov	[esp+24h+var_4], eax
call	SECOID_GetAlgorithmTag_Util
push	edi
mov	ebx, eax
call	PK11_ParamFromAlgid
mov	esi, [esi]
add	esp, 10h
mov	ebp, eax
test	esi, esi
jz	short loc_1002F154
push	1
push	esi
call	PORT_FreeArena_Util
add	esp, 8
mov	ecx, [esp+18h+arg_4]
push	ecx
call	SEC_PKCS5GetKeyLength
mov	esi, eax
add	esp, 4
cmp	esi, 0FFFFFFFFh
jnz	short loc_1002F16A
xor	esi, esi
mov	edx, [esp+18h+var_4]
push	esi
push	edx
call	PK11_GetKeyType
add	esp, 8
mov	edi, eax
jmp	short loc_1002F187
			
push	ebp
call	PK11_ParamFromAlgid
add	esp, 4
mov	ebp, eax
test	ebp, ebp
jz	short loc_1002F1E5
push	ebx
call	PK11_AlgtagToMechanism
add	esp, 4
cmp	eax, 0FFFFFFFFh
jnz	short loc_1002F1A8
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1002F1DA
cmp	[esp+18h+arg_C], 0
jz	short loc_1002F1BB
cmp	eax, 80000003h
jnz	short loc_1002F1BB
mov	eax, 80000008h
			
mov	ecx, [esp+18h+arg_10]
mov	edx, [esp+18h+arg_8]
push	ecx
push	edx
push	esi
push	edi
push	ebp
push	eax
mov	eax, [esp+30h+arg_0]
push	eax
call	sub_1002EF90
add	esp, 1Ch
mov	[esp+18h+var_8], eax
push	1
push	ebp
call	SECITEM_ZfreeItem_Util
add	esp, 8
mov	eax, [esp+18h+var_8]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
public PBE_CreateContext
sub	esp, 3Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+3Ch+var_4], eax
mov	eax, [esp+3Ch+arg_4]
mov	ecx, [esp+3Ch+arg_C]
push	ebx
push	ebp
xor	ebp, ebp
dec	eax
push	edi
mov	edi, [esp+48h+arg_8]
jz	loc_1002F310
dec	eax
jz	loc_1002F2F8
dec	eax
jnz	loc_1002F339
mov	eax, [esp+48h+arg_0]
dec	eax
jz	loc_1002F2EE
sub	eax, 2
jz	loc_1002F2E4
dec	eax
jnz	loc_1002F339
mov	ebx, 3C0h
			
mov	edx, [edi+4]
lea	eax, [esp+48h+var_C]
mov	[esp+48h+var_3C], eax
mov	eax, [edi+8]
mov	[esp+48h+var_38], edx
mov	edx, [ecx+4]
mov	[esp+48h+var_34], eax
mov	eax, [ecx+8]
mov	ecx, [esp+48h+arg_14]
mov	[esp+48h+var_30], edx
lea	edx, [esp+48h+var_3C]
push	esi
mov	[esp+4Ch+var_2C], eax
mov	[esp+4Ch+var_28], ecx
mov	[esp+4Ch+var_20], edx
mov	[esp+4Ch+var_1C], 18h
call	PK11_GetInternalSlot
push	0
push	edi
push	0
mov	esi, eax
push	0FFFFFFFFh
lea	eax, [esp+5Ch+var_24]
push	eax
push	ebx
push	esi
call	sub_1002EF90
push	esi
mov	edi, eax
call	PK11_FreeSlot
add	esp, 20h
pop	esi
test	edi, edi
jz	loc_1002F374
cmp	[esp+48h+arg_4], 2
jnz	loc_1002F34D
mov	eax, [esp+48h+arg_10]
lea	ecx, [esp+48h+var_C]
shr	eax, 3
lea	edx, [esp+48h+var_18]
mov	[esp+48h+var_14], ecx
mov	[esp+48h+var_10], eax
push	edx
jmp	short loc_1002F361
mov	ebx, 8000000Ah
jmp	loc_1002F254
mov	ebx, 8000000Bh
jmp	loc_1002F254
cmp	[esp+48h+arg_10], 40h
ja	short loc_1002F339
cmp	[esp+48h+arg_0], 4
jnz	short loc_1002F339
mov	ebx, 3A8h
jmp	loc_1002F254
cmp	[esp+48h+arg_0], 4
jnz	short loc_1002F339
mov	eax, [esp+48h+arg_10]
sub	eax, 28h
jz	short loc_1002F32F
sub	eax, 58h
jnz	short loc_1002F339
mov	ebx, 3A6h
jmp	loc_1002F254
mov	ebx, 3A7h
jmp	loc_1002F254
			
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+3Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
push	edi
call	PK11_ExtractKeyValue
push	edi
call	__PK11_GetKeyData
add	esp, 8
test	eax, eax
jz	short loc_1002F36B
push	eax
call	SECITEM_DupItem_Util
mov	ebp, eax
add	esp, 4
push	edi
call	PK11_FreeSymKey
add	esp, 4
mov	ecx, [esp+48h+var_4]
pop	edi
mov	eax, ebp
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
align 10h
public SEC_PKCS5GetIV
			
			
sub	esp, 14h
push	ebx
mov	ebx, [esp+18h+arg_0]
push	ebp
push	esi
push	edi
xor	edi, edi
push	ebx
mov	[esp+28h+var_10], edi
mov	[esp+28h+var_14], edi
call	SECOID_GetAlgorithmTag_Util
add	esp, 4
cmp	eax, 123h
jl	loc_1002F49B
cmp	eax, 125h
jg	loc_1002F49B
cmp	eax, 123h
jnz	short loc_1002F3E2
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 14h
retn
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
cmp	esi, edi
jz	loc_1002F532
push	34h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_1002F422
add	ebx, 0Ch
push	ebx
push	offset dword_100A6230
push	edi
push	esi
call	SEC_ASN1DecodeItem_Util
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_1002F439
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, [esp+24h+var_10]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 14h
retn
mov	[edi], esi
lea	esi, [edi+1Ch]
push	esi
call	SECOID_GetAlgorithmTag_Util
push	eax
call	PK11_AlgtagToMechanism
push	esi
mov	ebx, eax
call	PK11_ParamFromAlgid
mov	edi, [edi]
add	esp, 0Ch
mov	esi, eax
test	edi, edi
jz	short loc_1002F468
push	1
push	edi
call	PORT_FreeArena_Util
add	esp, 8
test	esi, esi
jz	short loc_1002F42D
lea	eax, [esp+24h+var_14]
push	eax
push	esi
push	ebx
call	PK11_IVFromParam
mov	ecx, [esp+30h+var_14]
lea	edx, [esp+30h+var_C]
add	esp, 0Ch
push	edx
mov	[esp+28h+var_8], eax
mov	[esp+28h+var_4], ecx
call	SECITEM_DupItem_Util
add	esp, 4
mov	edi, eax
jmp	loc_1002F523
			
push	eax
call	PK11_AlgtagToMechanism
push	ebx
mov	ebp, eax
call	PK11_ParamFromAlgid
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1002F50E
call	PK11_GetInternalSlot
mov	ebx, eax
mov	eax, ebp
cmp	[esp+24h+arg_8], edi
jz	short loc_1002F4CC
cmp	ebp, 80000003h
jnz	short loc_1002F4CC
lea	eax, [ebp+5]
			
mov	edx, [esp+24h+arg_4]
push	0
push	edx
push	0
push	0FFFFFFFFh
push	esi
push	eax
push	ebx
call	sub_1002EF90
push	ebx
mov	edi, eax
call	PK11_FreeSlot
add	esp, 20h
test	edi, edi
jz	short loc_1002F51F
push	edi
call	PK11_FreeSymKey
mov	edi, [esi+4]
push	ebp
call	PK11_GetIVLength
mov	[esp+2Ch+var_14], eax
mov	ecx, [edi]
add	esp, 8
mov	[esp+24h+var_8], ecx
mov	[esp+24h+var_4], eax
lea	edx, [esp+24h+var_C]
push	edx
call	SECITEM_DupItem_Util
add	esp, 4
mov	edi, eax
jmp	short loc_1002F523
mov	edi, [esp+24h+var_10]
			
test	esi, esi
jz	short loc_1002F532
push	1
push	esi
call	SECITEM_ZfreeItem_Util
add	esp, 8
			
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 14h
retn
align 10h
public PK11_GetPBEIV
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	0
push	eax
push	ecx
call	SEC_PKCS5GetIV
add	esp, 0Ch
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
push	ebp
push	esi
push	edi
push	ebx
call	SEC_PKCS5GetCryptoAlgorithm
push	eax
call	PK11_AlgtagToMechanism
mov	edi, eax
add	esp, 8
or	ebp, 0FFFFFFFFh
xor	esi, esi
cmp	edi, 0FFFFFFFFh
jnz	short loc_1002F597
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
push	edi
call	PK11_GetIVLength
add	esp, 4
test	eax, eax
jz	short loc_1002F5BD
mov	eax, [esp+10h+arg_C]
mov	ecx, [esp+10h+arg_8]
push	eax
push	ecx
push	ebx
call	SEC_PKCS5GetIV
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_1002F5E9
push	ebx
call	SEC_PKCS5GetKeyLength
push	eax
push	esi
push	edi
call	sub_10026050
mov	edx, [esp+20h+arg_4]
add	esp, 10h
mov	[edx], eax
test	eax, eax
jz	short loc_1002F5DA
mov	ebp, edi
test	esi, esi
jz	short loc_1002F5E9
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
			
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
public PK11_GetPBECryptoMechanism
			
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	0
push	eax
push	ecx
push	edx
call	sub_1002F560
add	esp, 10h
retn
align 10h
public NSS_Get_SECKEY_EncryptedPrivateKeyInfoTemplate
mov	eax, offset dword_100A6428
retn
align 10h
public NSS_Get_SECKEY_PointerToEncryptedPrivateKeyInfoTemplate
			
mov	eax, offset dword_100A6468
retn
align 10h
public NSS_Get_SECKEY_PrivateKeyInfoTemplate
mov	eax, offset dword_100A62C8
retn
align 10h
public NSS_Get_SECKEY_PointerToPrivateKeyInfoTemplate
mov	eax, offset dword_100A6328
retn
align 10h
sub	esp, 118h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+118h+var_4], eax
mov	ecx, [esp+118h+arg_1C]
mov	eax, [esp+118h+arg_10]
mov	edx, [esp+118h+arg_0]
push	ebx
mov	[esp+11Ch+var_10C], ecx
mov	ecx, [esp+11Ch+arg_20]
push	ebp
mov	ebp, [esp+120h+arg_C]
mov	[esp+120h+var_104], ecx
lea	ecx, [esp+120h+var_108]
lea	ebx, [esp+120h+var_114]
push	esi
xor	esi, esi
mov	[esp+124h+var_F0], ecx
mov	ecx, 4
mov	[esp+124h+var_E4], ebx
mov	ebx, 1
push	edi
mov	edi, [esp+128h+arg_4]
mov	[esp+128h+var_100], eax
cmp	eax, esi
mov	[esp+128h+var_F8], edx
mov	[esp+128h+var_116], 1
mov	[esp+128h+var_115], 0
mov	[esp+128h+var_108], 3
mov	[esp+128h+var_114], esi
mov	[esp+128h+var_F4], esi
mov	[esp+128h+var_EC], ecx
mov	[esp+128h+var_E8], 100h
mov	[esp+128h+var_E0], ecx
mov	[esp+128h+var_DC], ebx
lea	eax, [esp+128h+var_116]
jnz	short loc_1002F6F8
lea	eax, [esp+128h+var_115]
mov	[esp+128h+var_D8], eax
mov	eax, [esp+128h+arg_14]
mov	[esp+128h+var_D4], ebx
mov	[esp+128h+var_D0], 103h
lea	ecx, [esp+128h+var_116]
cmp	eax, esi
jnz	short loc_1002F71B
lea	ecx, [esp+128h+var_115]
mov	[esp+128h+var_CC], ecx
mov	ecx, 2
cmp	eax, esi
mov	[esp+128h+var_C8], ebx
mov	[esp+128h+var_C4], ecx
lea	eax, [esp+128h+var_116]
jnz	short loc_1002F738
lea	eax, [esp+128h+var_115]
mov	[esp+128h+var_C0], eax
mov	eax, [edi+4]
sub	eax, ebx
mov	[esp+128h+var_BC], ebx
lea	esi, [esp+128h+var_B8]
jz	loc_1002F940
sub	eax, ebx
jz	loc_1002F84D
sub	eax, ecx
jz	short loc_1002F784
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 4
			
or	eax, 0FFFFFFFFh
mov	ecx, [esp+128h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 118h
retn
push	edx
mov	[esp+12Ch+var_114], ecx
call	PK11_IsInternal
add	esp, 4
test	eax, eax
jz	short loc_1002F7AF
mov	edx, [ebp+4]
mov	eax, [ebp+8]
mov	[esp+128h+var_B8], 0D5A0DB00h
mov	[esp+128h+var_B4], edx
mov	[esp+128h+var_B0], eax
lea	esi, [esp+128h+var_AC]
mov	eax, [esp+128h+arg_8]
lea	ecx, [esp+128h+var_116]
mov	dword ptr [esi], 10Ch
mov	[esi+4], ecx
mov	[esi+8], ebx
add	esi, 0Ch
test	eax, eax
jz	short loc_1002F7E2
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	dword ptr [esi], 3
mov	[esi+4], edx
mov	[esi+8], eax
add	esi, 0Ch
push	ebp
call	PK11_MakeIDFromPubKey
add	esp, 4
mov	[esp+128h+var_110], eax
test	eax, eax
jz	loc_1002F768
mov	dword ptr [esi], 102h
mov	ecx, [eax+4]
mov	[esi+4], ecx
mov	edx, [eax+8]
mov	eax, [edi+10h]
mov	ecx, [edi+14h]
mov	[esi+8], edx
mov	edx, [edi+1Ch]
mov	[esi+10h], eax
mov	eax, [edi+20h]
mov	[esi+14h], ecx
mov	ecx, [edi+28h]
mov	dword ptr [esi+0Ch], 130h
mov	[esi+1Ch], edx
mov	edx, [edi+2Ch]
mov	dword ptr [esi+18h], 132h
mov	[esi+20h], eax
lea	ebx, [esi+0Ch]
mov	dword ptr [esi+24h], 11h
mov	[esi+28h], ecx
mov	[esi+2Ch], edx
add	esi, 30h
jmp	loc_1002FAE5
mov	[esp+128h+var_114], ebx
test	ebp, ebp
jz	loc_1002F768
push	edx
call	PK11_IsInternal
add	esp, 4
test	eax, eax
jz	short loc_1002F880
mov	eax, [ebp+4]
mov	ecx, [ebp+8]
mov	[esp+128h+var_B8], 0D5A0DB00h
mov	[esp+128h+var_B4], eax
mov	[esp+128h+var_B0], ecx
lea	esi, [esp+128h+var_AC]
lea	edx, [esp+128h+var_116]
mov	dword ptr [esi], 108h
mov	[esi+4], edx
mov	[esi+8], ebx
mov	eax, edx
mov	[esi+10h], eax
mov	eax, [esp+128h+arg_8]
mov	dword ptr [esi+0Ch], 109h
mov	[esi+14h], ebx
add	esi, 18h
test	eax, eax
jz	short loc_1002F8C2
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	dword ptr [esi], 3
mov	[esi+4], ecx
mov	[esi+8], edx
add	esi, 0Ch
push	ebp
call	PK11_MakeIDFromPubKey
add	esp, 4
mov	[esp+128h+var_110], eax
test	eax, eax
jz	loc_1002F768
mov	dword ptr [esi], 102h
mov	ecx, [eax+4]
mov	[esi+4], ecx
mov	edx, [eax+8]
mov	eax, [edi+10h]
mov	ecx, [edi+14h]
mov	[esi+8], edx
mov	edx, [edi+1Ch]
mov	[esi+10h], eax
mov	eax, [edi+20h]
mov	[esi+14h], ecx
mov	ecx, [edi+28h]
mov	dword ptr [esi+0Ch], 130h
mov	[esi+1Ch], edx
mov	edx, [edi+2Ch]
mov	[esi+20h], eax
mov	eax, [edi+34h]
mov	dword ptr [esi+18h], 131h
mov	[esi+28h], ecx
mov	ecx, [edi+38h]
mov	dword ptr [esi+24h], 132h
mov	[esi+2Ch], edx
lea	ebx, [esi+0Ch]
mov	dword ptr [esi+30h], 11h
mov	[esi+34h], eax
mov	[esi+38h], ecx
add	esi, 3Ch
jmp	loc_1002FAE5
mov	eax, [esp+128h+arg_18]
mov	[esp+128h+var_114], 0
mov	[esp+128h+var_B8], 107h
lea	ecx, [esp+128h+var_116]
test	al, 20h
jnz	short loc_1002F963
lea	ecx, [esp+128h+var_115]
mov	[esp+128h+var_B4], ecx
mov	[esp+128h+var_B0], ebx
mov	[esp+128h+var_AC], 105h
lea	ecx, [esp+128h+var_116]
test	al, 10h
jnz	short loc_1002F97F
lea	ecx, [esp+128h+var_115]
and	eax, 80h
mov	[esp+128h+var_A8], ecx
mov	[esp+128h+var_A4], ebx
mov	[esp+128h+var_A0], 108h
lea	ecx, [esp+128h+var_116]
jnz	short loc_1002F9A7
lea	ecx, [esp+128h+var_115]
test	eax, eax
mov	[esp+128h+var_9C], ecx
mov	[esp+128h+var_98], ebx
mov	[esp+128h+var_94], 109h
lea	eax, [esp+128h+var_116]
jnz	short loc_1002F9CC
lea	eax, [esp+128h+var_115]
lea	edx, [edi+18h]
push	edx
mov	[esp+12Ch+var_90], eax
mov	[esp+12Ch+var_8C], ebx
call	PK11_MakeIDFromPubKey
add	esp, 4
mov	[esp+128h+var_110], eax
test	eax, eax
jz	loc_1002F768
mov	[esp+128h+var_88], 102h
mov	ecx, [eax+4]
mov	[esp+128h+var_84], ecx
mov	edx, [eax+8]
mov	eax, [esp+128h+arg_8]
mov	[esp+128h+var_80], edx
lea	esi, [esp+128h+var_7C]
test	eax, eax
jz	short loc_1002FA49
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	[esp+128h+var_7C], 3
mov	[esp+128h+var_78], ecx
mov	[esp+128h+var_74], edx
lea	esi, [esp+128h+var_70]
mov	eax, [edi+1Ch]
mov	ecx, [edi+20h]
mov	edx, [edi+28h]
mov	[esi+4], eax
mov	eax, [edi+2Ch]
mov	[esi+8], ecx
mov	ecx, [edi+34h]
mov	dword ptr [esi], 120h
mov	[esi+10h], edx
mov	edx, [edi+38h]
mov	[esi+14h], eax
mov	eax, [edi+40h]
mov	dword ptr [esi+0Ch], 122h
mov	[esi+1Ch], ecx
mov	ecx, [edi+44h]
mov	[esi+20h], edx
mov	edx, [edi+4Ch]
mov	dword ptr [esi+18h], 123h
mov	[esi+28h], eax
mov	eax, [edi+50h]
mov	[esi+2Ch], ecx
mov	ecx, [edi+58h]
mov	dword ptr [esi+24h], 124h
mov	[esi+34h], edx
mov	edx, [edi+5Ch]
mov	[esi+38h], eax
mov	eax, [edi+64h]
mov	dword ptr [esi+30h], 125h
mov	[esi+40h], ecx
mov	ecx, [edi+68h]
mov	[esi+44h], edx
mov	edx, [edi+70h]
mov	dword ptr [esi+3Ch], 126h
mov	[esi+4Ch], eax
mov	eax, [edi+74h]
mov	dword ptr [esi+48h], 127h
mov	[esi+50h], ecx
mov	ebx, esi
mov	dword ptr [esi+54h], 128h
mov	[esi+58h], edx
mov	[esi+5Ch], eax
add	esi, 60h
			
mov	ecx, esi
lea	edx, [esp+128h+var_F4]
sub	ecx, edx
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	ebp, edx
sub	esi, ebx
shr	ebp, 1Fh
add	ebp, edx
mov	eax, 2AAAAAABh
imul	esi
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
add	esi, edx
jz	short loc_1002FB20
push	ebx
call	sub_1002A670
add	esp, 4
add	ebx, 0Ch
dec	esi
jnz	short loc_1002FB11
mov	ebx, [esp+128h+var_100]
lea	eax, [esp+128h+var_FC]
push	eax
push	ebx
push	ebp
mov	ebp, [esp+134h+var_F8]
lea	ecx, [esp+134h+var_F4]
push	ecx
push	0
push	ebp
call	sub_1002A750
mov	esi, eax
add	esp, 18h
test	esi, esi
jnz	short loc_1002FB77
cmp	[esp+128h+var_10C], eax
jz	short loc_1002FB77
mov	edx, [esp+128h+var_104]
mov	eax, [esp+128h+var_FC]
xor	ecx, ecx
test	ebx, ebx
push	edx
mov	edx, [edi+4]
setz	cl
push	eax
push	ecx
push	edx
push	ebp
call	sub_10012FF0
mov	ecx, [esp+13Ch+var_10C]
add	esp, 14h
mov	[ecx], eax
test	eax, eax
jnz	short loc_1002FB77
or	esi, 0FFFFFFFFh
			
mov	edx, [esp+128h+var_110]
push	1
push	edx
call	SECITEM_ZfreeItem_Util
add	esp, 8
mov	eax, esi
jmp	loc_1002F76B
align 10h
public PK11_ImportPrivateKeyInfoAndReturnKey
			
			
push	ecx
push	ebx
push	edi
push	800h
or	edi, 0FFFFFFFFh
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
mov	[esp+0Ch+var_4], ebx
test	ebx, ebx
jnz	short loc_1002FBB3
or	eax, edi
pop	edi
pop	ebx
pop	ecx
retn
push	esi
push	78h
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_1002FCE3
mov	eax, [esp+10h+arg_4]
add	eax, 10h
push	ebp
push	eax
mov	[esi], ebx
call	SECOID_GetAlgorithmTag_Util
add	esp, 4
sub	eax, 10h
jz	short loc_1002FC3C
sub	eax, 6Ch
jz	short loc_1002FC15
sub	eax, 32h
jnz	loc_1002FCE2
cmp	[esp+14h+arg_C], eax
jz	loc_1002FCE2
mov	eax, 0Ah
mov	[esi+24h], eax
mov	[esi+0Ch], eax
mov	[esi+18h], eax
mov	eax, offset dword_100A63F8
mov	dword ptr [esi+4], 4
jmp	short loc_1002FC65
mov	eax, 0Ah
mov	[esi+30h], eax
mov	[esi+0Ch], eax
mov	[esi+18h], eax
mov	[esi+24h], eax
mov	eax, offset dword_100A63E8
mov	ebx, offset dword_100A28F8
lea	ebp, [esi+8]
mov	dword ptr [esi+4], 2
jmp	short loc_1002FC69
mov	eax, 0Ah
mov	[esi+18h], eax
mov	[esi+24h], eax
mov	[esi+30h], eax
mov	[esi+3Ch], eax
mov	[esi+48h], eax
mov	[esi+54h], eax
mov	[esi+60h], eax
mov	[esi+6Ch], eax
mov	eax, offset dword_100A6338
mov	dword ptr [esi+4], 1
xor	ebx, ebx
xor	ebp, ebp
mov	ecx, [esp+14h+arg_4]
mov	edx, [esp+14h+var_4]
add	ecx, 28h
push	ecx
push	eax
push	esi
push	edx
call	SEC_ASN1DecodeItem_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_1002FCDE
test	ebp, ebp
jz	short loc_1002FCAB
test	ebx, ebx
jz	short loc_1002FCAB
mov	eax, [esp+14h+arg_4]
mov	ecx, [esp+14h+var_4]
add	eax, 1Ch
push	eax
push	ebx
push	ebp
push	ecx
call	SEC_ASN1DecodeItem_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_1002FCDE
			
mov	edx, [esp+14h+arg_20]
mov	eax, [esp+14h+arg_1C]
mov	ecx, [esp+14h+arg_18]
push	edx
mov	edx, [esp+18h+arg_14]
push	eax
mov	eax, [esp+1Ch+arg_10]
push	ecx
mov	ecx, [esp+20h+arg_C]
push	edx
mov	edx, [esp+24h+arg_8]
push	eax
mov	eax, [esp+28h+arg_0]
push	ecx
push	edx
push	esi
push	eax
call	sub_1002F650
add	esp, 24h
mov	edi, eax
			
mov	ebx, [esp+14h+var_4]
			
pop	ebp
push	1
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
mov	eax, edi
pop	edi
pop	ebx
pop	ecx
retn
align 10h
public PK11_ImportPrivateKeyInfo
mov	eax, [esp+arg_1C]
mov	ecx, [esp+arg_18]
mov	edx, [esp+arg_14]
push	eax
mov	eax, [esp+4+arg_10]
push	0
push	ecx
mov	ecx, [esp+0Ch+arg_C]
push	edx
mov	edx, [esp+10h+arg_8]
push	eax
mov	eax, [esp+14h+arg_4]
push	ecx
mov	ecx, [esp+18h+arg_0]
push	edx
push	eax
push	ecx
call	PK11_ImportPrivateKeyInfoAndReturnKey
add	esp, 24h
retn
align 10h
public PK11_ExportPrivKeyInfo
			
			
sub	esp, 78h
push	ebx
push	esi
push	edi
mov	edi, [esp+84h+arg_0]
cmp	dword ptr [edi+4], 1
jz	short loc_1002FD69
push	0FFFFE898h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 78h
retn
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_1002FF70
push	78h		
lea	eax, [esp+88h+Dst]
push	0		
push	eax		
call	memset
mov	ecx, [edi+4]
push	1
mov	ebx, 0Ah
push	esi
mov	[esp+98h+var_74], ecx
mov	[esp+98h+var_6C], ebx
call	PORT_ArenaAlloc_Util
add	esp, 14h
mov	[esp+84h+var_68], eax
test	eax, eax
jz	loc_1002FF65
mov	byte ptr [eax],	0
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
lea	edx, [esp+84h+var_60]
push	edx
push	esi
push	120h
push	eax
push	ecx
mov	[esp+98h+var_64], 1
mov	[esp+98h+var_60], ebx
mov	[esp+98h+var_54], ebx
mov	[esp+98h+var_48], ebx
mov	[esp+98h+var_3C], ebx
mov	[esp+98h+var_30], ebx
mov	[esp+98h+var_24], ebx
mov	[esp+98h+var_18], ebx
mov	[esp+98h+var_C], ebx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	loc_1002FF65
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
lea	edx, [esp+84h+var_54]
push	edx
push	esi
push	122h
push	eax
push	ecx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	loc_1002FF65
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
lea	edx, [esp+84h+var_48]
push	edx
push	esi
push	123h
push	eax
push	ecx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	loc_1002FF65
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
lea	edx, [esp+84h+var_3C]
push	edx
push	esi
push	124h
push	eax
push	ecx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	loc_1002FF65
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
lea	edx, [esp+84h+var_30]
push	edx
push	esi
push	125h
push	eax
push	ecx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	loc_1002FF65
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
lea	edx, [esp+84h+var_24]
push	edx
push	esi
push	126h
push	eax
push	ecx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	loc_1002FF65
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
lea	edx, [esp+84h+var_18]
push	edx
push	esi
push	127h
push	eax
push	ecx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	loc_1002FF65
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
lea	edx, [esp+84h+var_C]
push	edx
push	esi
push	128h
push	eax
push	ecx
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_1002FF65
push	38h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_1002FF65
push	offset dword_100A6338
lea	edx, [esp+88h+Dst]
push	edx
lea	eax, [edi+28h]
push	eax
push	esi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_1002FF65
push	0
push	10h
lea	ecx, [edi+10h]
push	ecx
push	esi
call	SECOID_SetAlgorithmID_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1002FF65
push	1
push	esi
mov	[edi+4], ebx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi+8], eax
test	eax, eax
jz	short loc_1002FF65
mov	byte ptr [eax],	0
mov	[edi], esi
mov	dword ptr [edi+0Ch], 1
mov	eax, edi
pop	edi
pop	esi
pop	ebx
add	esp, 78h
retn
			
push	1
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 78h
retn
align 10h
public PK11_ImportDERPrivateKeyInfoAndReturnKey
			
			
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1002FF99
or	eax, 0FFFFFFFFh
pop	edi
retn
push	esi
push	38h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1002FFBB
push	eax
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
retn
mov	eax, [esp+8+arg_4]
push	eax
push	offset dword_100A62C8
push	esi
push	edi
mov	[esi], edi
call	SEC_ASN1DecodeItem_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_1003000A
mov	ecx, [esp+8+arg_20]
mov	edx, [esp+8+arg_1C]
mov	eax, [esp+8+arg_18]
push	ecx
mov	ecx, [esp+0Ch+arg_14]
push	edx
mov	edx, [esp+10h+arg_10]
push	eax
mov	eax, [esp+14h+arg_C]
push	ecx
mov	ecx, [esp+18h+arg_8]
push	edx
mov	edx, [esp+1Ch+arg_0]
push	eax
push	ecx
push	esi
push	edx
call	PK11_ImportPrivateKeyInfoAndReturnKey
add	esp, 24h
mov	edi, eax
push	1		
push	esi		
call	SECKEY_DestroyPrivateKeyInfo
add	esp, 8
pop	esi
mov	eax, edi
pop	edi
retn
align 10h
public PK11_ExportDERPrivateKeyInfo
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	esi
push	eax
push	ecx
call	PK11_ExportPrivKeyInfo
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1003003B
pop	esi
retn
push	edi
push	offset dword_100A62C8
push	esi
push	0
push	0
call	SEC_ASN1EncodeItem_Util
push	1		
push	esi		
mov	edi, eax
call	SECKEY_DestroyPrivateKeyInfo
add	esp, 18h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public PK11_ImportDERPrivateKeyInfo
mov	eax, [esp+arg_1C]
mov	ecx, [esp+arg_18]
mov	edx, [esp+arg_14]
push	eax
mov	eax, [esp+4+arg_10]
push	0
push	ecx
mov	ecx, [esp+0Ch+arg_C]
push	edx
mov	edx, [esp+10h+arg_8]
push	eax
mov	eax, [esp+14h+arg_4]
push	ecx
mov	ecx, [esp+18h+arg_0]
push	edx
push	eax
push	ecx
call	PK11_ImportDERPrivateKeyInfoAndReturnKey
add	esp, 24h
retn
align 10h
public PK11_PQG_ParamGenV2
			
			
sub	esp, 0C0h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0C0h+var_4], eax
mov	ecx, [esp+0C0h+arg_C]
mov	eax, [esp+0C0h+arg_0]
mov	edx, [esp+0C0h+arg_10]
push	ebx
mov	ebx, [esp+0C4h+arg_4]
push	ebp
mov	ebp, [esp+0C8h+arg_8]
add	ebp, ebp
push	esi
add	ebp, ebp
push	edi
xor	edi, edi
add	ebp, ebp
xor	esi, esi
mov	[ecx], edi
mov	[esp+0D0h+var_B0], ecx
mov	[esp+0D0h+var_A4], edx
mov	[esp+0D0h+var_C0], edi
mov	[esp+0D0h+var_88], 130h
mov	[esp+0D0h+var_84], edi
mov	[esp+0D0h+var_80], edi
mov	[esp+0D0h+var_7C], 131h
mov	[esp+0D0h+var_78], edi
mov	[esp+0D0h+var_74], edi
mov	[esp+0D0h+var_70], 132h
mov	[esp+0D0h+var_6C], edi
mov	[esp+0D0h+var_68], edi
mov	[esp+0D0h+var_64], 0CE534364h
mov	[esp+0D0h+var_60], edi
mov	[esp+0D0h+var_5C], edi
mov	[esp+0D0h+var_58], 0CE534365h
mov	[esp+0D0h+var_54], edi
mov	[esp+0D0h+var_50], edi
mov	[esp+0D0h+var_4C], 0CE534366h
mov	[esp+0D0h+var_48], edi
mov	[esp+0D0h+var_44], edi
mov	[esp+0D0h+var_BC], eax
mov	[esp+0D0h+var_AC], ebx
mov	[esp+0D0h+var_B8], edi
mov	[esp+0D0h+var_B4], edi
mov	[esp+0D0h+var_A8], ebp
mov	[edx], edi
cmp	eax, 0FFFFFFFFh
jnz	short loc_1003018C
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_100303F4
lea	eax, [esp+0D0h+var_BC]
mov	ecx, 4
mov	[esp+0D0h+var_3C], eax
mov	[esp+0D0h+var_40], 133h
mov	[esp+0D0h+var_38], ecx
lea	eax, [esp+0D0h+var_34]
cmp	ebx, edi
jz	short loc_100301DD
lea	edx, [esp+0D0h+var_AC]
mov	[esp+0D0h+var_34], 134h
mov	[esp+0D0h+var_30], edx
mov	[esp+0D0h+var_2C], ecx
lea	eax, [esp+0D0h+var_28]
cmp	ebp, edi
jz	short loc_100301F4
lea	edx, [esp+0D0h+var_A8]
mov	dword ptr [eax], 0CE534367h
mov	[eax+4], edx
mov	[eax+8], ecx
add	eax, 0Ch
lea	ecx, [esp+0D0h+var_40]
sub	eax, ecx
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	ebx, edx
shr	ebx, 1Fh
add	ebx, edx
call	PK11_GetInternalSlot
mov	esi, eax
cmp	esi, edi
jnz	short loc_1003022C
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_100303F4
cmp	[esp+0D0h+var_BC], 400h
jbe	short loc_100302AC
cmp	[esi+30h], edi
jnz	short loc_10030244
push	esi
call	sub_10035650
add	esp, 4
mov	edx, [esi]
mov	ecx, [esi+40h]
mov	edx, [edx+22h]
lea	eax, [esp+0D0h+var_94]
push	eax
push	2000h
push	ecx
call	edx
add	esp, 0Ch
mov	ebp, eax
cmp	[esi+30h], edi
jnz	short loc_1003026C
push	esi
call	sub_10035670
add	esp, 4
cmp	ebp, edi
jnz	short loc_1003027A
mov	eax, [esp+0D0h+var_90]
cmp	eax, [esp+0D0h+var_BC]
jnb	short loc_100302AC
push	esi
call	PK11_FreeSlot
mov	ecx, [esp+0D4h+var_BC]
push	edi
push	ecx
push	edi
push	2000h
call	PK11_GetBestSlotWithAttributes
mov	esi, eax
add	esp, 14h
cmp	esi, edi
jnz	short loc_100302AC
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_100303F4
			
push	esi
mov	[esp+0D4h+var_A0], 2000h
mov	[esp+0D4h+var_9C], edi
mov	[esp+0D4h+var_98], edi
call	sub_10035650
mov	edx, [esi]
mov	edx, [edx+0EAh]
lea	eax, [esp+0D4h+var_C0]
push	eax
push	ebx
lea	ecx, [esp+0DCh+var_40]
push	ecx
mov	ecx, [esi+38h]
lea	eax, [esp+0E0h+var_A0]
push	eax
push	ecx
call	edx
push	esi
mov	ebx, eax
call	sub_10035670
add	esp, 1Ch
cmp	ebx, edi
jz	short loc_10030306
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	loc_100303F4
push	3Ch
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+0D0h+var_B8], eax
cmp	eax, edi
jz	loc_100303F4
mov	ecx, [esp+0D0h+var_C0]
mov	ebx, [esp+0D0h+var_B8]
push	3
lea	eax, [esp+0D4h+var_88]
push	eax
push	ecx
push	esi
push	ebx
call	sub_1002A310
add	esp, 14h
cmp	eax, edi
jz	short loc_1003034E
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	loc_100303F4
push	28h
push	ebx
call	PORT_ArenaAlloc_Util
mov	ebp, eax
add	esp, 8
cmp	ebp, edi
jz	loc_100303F4
mov	edx, [esp+0D0h+var_B8]
mov	[ebp+0], edx
mov	eax, 0Ah
mov	[ebp+4], eax
mov	ecx, [esp+0D0h+var_84]
mov	[ebp+8], ecx
mov	edx, [esp+0D0h+var_80]
mov	[ebp+0Ch], edx
mov	[ebp+10h], eax
mov	ecx, [esp+0D0h+var_78]
mov	[ebp+14h], ecx
mov	edx, [esp+0D0h+var_74]
mov	[ebp+18h], edx
mov	[ebp+1Ch], eax
mov	eax, [esp+0D0h+var_6C]
mov	[ebp+20h], eax
mov	ecx, [esp+0D0h+var_68]
push	3Ch
mov	[ebp+24h], ecx
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+0D0h+var_B4], eax
cmp	eax, edi
jz	short loc_100303F4
mov	eax, [esp+0D0h+var_C0]
mov	ebx, [esp+0D0h+var_B4]
push	3
lea	edx, [esp+0D4h+var_64]
push	edx
push	eax
push	esi
push	ebx
call	sub_1002A310
add	esp, 14h
cmp	eax, edi
jz	short loc_100303E3
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
jmp	short loc_100303F4
push	20h
push	ebx
call	PORT_ArenaAlloc_Util
mov	ebx, eax
add	esp, 8
cmp	ebx, edi
jnz	short loc_1003043C
			
mov	eax, [esp+0D0h+var_C0]
cmp	eax, edi
jz	short loc_10030406
push	eax
push	esi
call	PK11_DestroyObject
add	esp, 8
mov	eax, [esp+0D0h+var_B8]
cmp	eax, edi
jz	short loc_10030418
push	edi
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, [esp+0D0h+var_B4]
cmp	eax, edi
jz	short loc_1003042A
push	edi
push	eax
call	PORT_FreeArena_Util
add	esp, 8
cmp	esi, edi
jz	short loc_10030437
push	esi
call	PK11_FreeSlot
add	esp, 4
or	eax, 0FFFFFFFFh
jmp	short loc_1003049D
mov	ecx, [esp+0D0h+var_B4]
mov	[ebx], ecx
mov	edx, [esp+0D0h+var_60]
mov	eax, [edx]
mov	[ebx+4], eax
mov	eax, 0Ah
mov	[ebx+8], eax
mov	ecx, [esp+0D0h+var_54]
mov	[ebx+0Ch], ecx
mov	edx, [esp+0D0h+var_50]
mov	[ebx+10h], edx
mov	[ebx+14h], eax
mov	eax, [esp+0D0h+var_48]
mov	[ebx+18h], eax
mov	ecx, [esp+0D0h+var_44]
mov	[ebx+1Ch], ecx
mov	edx, [esp+0D0h+var_C0]
push	edx
push	esi
call	PK11_DestroyObject
push	esi
call	PK11_FreeSlot
mov	eax, [esp+0DCh+var_B0]
mov	ecx, [esp+0DCh+var_A4]
mov	[eax], ebp
add	esp, 0Ch
mov	[ecx], ebx
xor	eax, eax
mov	ecx, [esp+0D0h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0C0h
retn
align 10h
public PK11_PQG_ParamGenSeedLen
mov	eax, [esp+arg_0]
cmp	eax, 8
jbe	short loc_100304CE
or	eax, 0FFFFFFFFh
jmp	short loc_100304D4
add	eax, 8
shl	eax, 6
mov	ecx, [esp+arg_C]
mov	edx, [esp+arg_8]
push	ecx
mov	ecx, [esp+4+arg_4]
push	edx
push	ecx
push	0
push	eax
call	PK11_PQG_ParamGenV2
add	esp, 14h
retn
align 10h
public PK11_PQG_ParamGen
mov	eax, [esp+arg_0]
cmp	eax, 8
jbe	short loc_100304FE
or	eax, 0FFFFFFFFh
jmp	short loc_10030504
add	eax, 8
shl	eax, 6
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_4]
push	ecx
push	edx
push	0
push	0
push	eax
call	PK11_PQG_ParamGenV2
add	esp, 14h
retn
align 10h
public PK11_PQG_VerifyParams
sub	esp, 8Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+8Ch+var_4], eax
mov	eax, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_78], eax
lea	eax, [esp+8Ch+var_84]
lea	ecx, [esp+8Ch+var_7C]
mov	[esp+8Ch+var_6C], ecx
mov	[esp+8Ch+var_60], eax
mov	eax, [esp+8Ch+arg_0]
mov	ecx, [eax+8]
mov	[esp+8Ch+var_54], ecx
mov	ecx, [eax+0Ch]
mov	[esp+8Ch+var_50], ecx
mov	ecx, [eax+14h]
push	ebx
xor	ebx, ebx
mov	[esp+90h+var_48], ecx
mov	ecx, [eax+18h]
push	esi
mov	[esp+94h+var_44], ecx
mov	ecx, [eax+24h]
push	edi
mov	edx, 1
mov	edi, 4
mov	[esp+98h+var_40], 132h
mov	[esp+98h+var_3C], ebx
mov	[esp+98h+var_38], ebx
mov	[esp+98h+var_34], edx
mov	[esp+98h+var_30], ebx
mov	[esp+98h+var_2C], ebx
mov	[esp+98h+var_28], 0CE534364h
mov	[esp+98h+var_24], ebx
mov	[esp+98h+var_20], ebx
mov	[esp+98h+var_1C], 0CE534365h
mov	[esp+98h+var_18], ebx
mov	[esp+98h+var_14], ebx
mov	[esp+98h+var_10], 0CE534366h
mov	[esp+98h+var_C], ebx
mov	[esp+98h+var_8], ebx
mov	[esp+98h+var_89], bl
mov	[esp+98h+var_7C], 6
mov	[esp+98h+var_84], edx
mov	[esp+98h+var_88], ebx
mov	[esp+98h+var_70], ebx
mov	[esp+98h+var_68], edi
mov	[esp+98h+var_64], 100h
mov	[esp+98h+var_5C], edi
mov	[esp+98h+var_58], 130h
mov	[esp+98h+var_4C], 131h
lea	esi, [esp+98h+var_40]
cmp	ecx, ebx
jz	short loc_10030636
mov	eax, [eax+20h]
mov	[esp+98h+var_40], 132h
mov	[esp+98h+var_3C], eax
mov	[esp+98h+var_38], ecx
lea	esi, [esp+98h+var_34]
mov	eax, [esp+98h+arg_4]
lea	ecx, [esp+98h+var_89]
mov	[esi], edx
mov	[esi+4], ecx
mov	[esi+8], edx
add	esi, 0Ch
cmp	eax, ebx
jz	short loc_1003069D
mov	ecx, [eax+4]
cmp	ecx, 0FFFFFFFFh
jz	short loc_1003066F
lea	edx, [esp+98h+var_74]
mov	dword ptr [esi], 0CE534364h
mov	[esi+4], edx
mov	[esi+8], edi
mov	[esp+98h+var_74], ecx
add	esi, 0Ch
mov	ecx, [eax+0Ch]
mov	edx, [eax+10h]
mov	[esi+4], ecx
mov	ecx, [eax+1Ch]
mov	dword ptr [esi], 0CE534365h
mov	[esi+8], edx
add	esi, 0Ch
cmp	ecx, ebx
jz	short loc_1003069D
mov	eax, [eax+18h]
mov	dword ptr [esi], 0CE534366h
mov	[esi+4], eax
mov	[esi+8], ecx
add	esi, 0Ch
			
call	PK11_GetInternalSlot
mov	edi, eax
cmp	edi, ebx
jnz	short loc_100306C3
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+8Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 8Ch
retn
push	edi
call	sub_10035650
mov	ecx, [edi]
mov	ecx, [ecx+52h]
lea	eax, [esp+9Ch+var_70]
sub	esi, eax
lea	edx, [esp+9Ch+var_80]
push	edx
mov	eax, 2AAAAAABh
imul	esi
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
mov	eax, [edi+38h]
lea	edx, [esp+0A4h+var_70]
push	edx
push	eax
call	ecx
push	edi
mov	esi, eax
call	sub_10035670
mov	edx, [esp+0B0h+var_80]
push	edx
push	edi
call	PK11_DestroyObject
push	edi
call	PK11_FreeSlot
mov	eax, [esp+0BCh+var_78]
add	esp, 24h
mov	[eax], ebx
cmp	esi, 13h
jnz	short loc_10030724
mov	dword ptr [eax], 0FFFFFFFFh
jmp	short loc_1003073F
cmp	esi, ebx
jz	short loc_1003073F
push	esi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
mov	[esp+98h+var_88], 0FFFFFFFFh
			
mov	ecx, [esp+98h+var_4]
mov	eax, [esp+98h+var_88]
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 8Ch
retn
align 10h
public PK11_PQG_DestroyParams
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_100307A4
mov	eax, [esi]
push	0
test	eax, eax
jz	short loc_1003077C
push	eax
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
retn
lea	eax, [esi+4]
push	eax
call	SECITEM_FreeItem_Util
lea	ecx, [esi+10h]
push	0
push	ecx
call	SECITEM_FreeItem_Util
lea	edx, [esi+1Ch]
push	0
push	edx
call	SECITEM_FreeItem_Util
push	esi
call	PORT_Free_Util
add	esp, 1Ch
pop	esi
retn
align 10h
public PK11_PQG_DestroyVerify
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_100307E9
mov	eax, [esi]
push	0
test	eax, eax
jz	short loc_100307CC
push	eax
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
retn
lea	eax, [esi+8]
push	eax
call	SECITEM_FreeItem_Util
lea	ecx, [esi+14h]
push	0
push	ecx
call	SECITEM_FreeItem_Util
push	esi
call	PORT_Free_Util
add	esp, 14h
pop	esi
retn
align 10h
public PK11_PQG_NewParams
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10030865
push	28h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_1003085A
mov	eax, [esp+8+arg_0]
push	eax
lea	ecx, [edi+4]
push	ecx
push	esi
mov	[edi], esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003085A
mov	edx, [esp+8+arg_4]
push	edx
lea	eax, [edi+10h]
push	eax
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003085A
mov	ecx, [esp+8+arg_8]
push	ecx
lea	edx, [edi+1Ch]
push	edx
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_1003086A
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public PK11_PQG_GetPrimeFromParams
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
add	eax, 4
push	eax
push	ecx
push	0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
retn
align 10h
public PK11_PQG_GetSubPrimeFromParams
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
add	eax, 10h
push	eax
push	ecx
push	0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
retn
align 10h
public PK11_PQG_GetBaseFromParams
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
add	eax, 1Ch
push	eax
push	ecx
push	0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
retn
align 10h
public PK11_PQG_NewVerify
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10030936
push	20h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1003092B
mov	ecx, [esp+8+arg_4]
mov	eax, [esp+8+arg_0]
push	ecx
lea	edx, [esi+8]
push	edx
push	edi
mov	[esi], edi
mov	[esi+4], eax
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003092B
mov	eax, [esp+8+arg_8]
push	eax
lea	ecx, [esi+14h]
push	ecx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_1003093B
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
retn
pop	edi
mov	eax, esi
pop	esi
retn
public PK11_PQG_GetSeedFromVerify
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
add	eax, 8
push	eax
push	ecx
push	0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
retn
align 10h
public PK11_PQG_GetHFromVerify
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
add	eax, 14h
push	eax
push	ecx
push	0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
retn
align 10h
xor	eax, eax
mov	[esi+8], eax
push	ebx
mov	[esi+4], eax
push	ebp
mov	ebp, [edi+8]
xor	edx, edx
mov	eax, ebp
div	ecx
sub	ecx, edx
mov	ebx, ecx
lea	eax, [ebx+ebp]
push	eax
mov	[esi+8], eax
call	PORT_Alloc_Util
mov	[esi+4], eax
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ecx		
push	edx		
push	eax		
call	memcpy
mov	eax, [edi+8]
add	esp, 10h
cmp	eax, [esi+8]
jnb	short loc_100309CC
nop
mov	ecx, [esi+4]
mov	[eax+ecx], bl
inc	eax
cmp	eax, [esi+8]
jb	short loc_100309C0
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
push	ecx
push	ebx
xor	eax, eax
push	ebp
mov	ebp, [esp+0Ch+arg_0]
mov	[edi+4], eax
mov	[edi+8], eax
mov	ecx, [ebp+8]
push	esi
mov	[esp+10h+var_4], eax
cmp	ecx, eax
jz	short loc_10030A64
xor	edx, edx
mov	eax, ecx
div	[esp+10h+arg_4]
test	edx, edx
jnz	short loc_10030A64
mov	ebx, [ebp+4]
movzx	esi, byte ptr [ebx+ecx-1]
cmp	esi, [esp+10h+arg_4]
jg	short loc_10030A64
mov	edx, ecx
sub	edx, esi
mov	eax, edx
cmp	eax, ecx
jnb	short loc_10030A31
nop
movzx	ebp, byte ptr [ebx+eax]
cmp	ebp, esi
jnz	short loc_10030A64
inc	eax
cmp	eax, ecx
jb	short loc_10030A20
mov	ebp, [esp+10h+arg_0]
push	edx
mov	[edi+8], edx
call	PORT_Alloc_Util
add	esp, 4
mov	[edi+4], eax
test	eax, eax
jz	short loc_10030A64
mov	ecx, [edi+8]
mov	edx, [ebp+4]
push	ecx		
push	edx		
push	eax		
call	memcpy
add	esp, 0Ch
cmp	esi, 2
jge	short loc_10030A6C
pop	esi
pop	ebp
mov	eax, 0FFFFFFFEh
pop	ebx
pop	ecx
retn
			
mov	[esp+10h+var_4], 0FFFFFFFFh
mov	eax, [esp+10h+var_4]
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
			
call	ds:PR_NewLock
mov	dword_100BACE8,	eax
retn
align 10h
mov	eax, dword_100BACE8
test	eax, eax
jz	short locret_10030AAD
push	eax
call	ds:PR_DestroyLock
add	esp, 4
mov	dword_100BACE8,	0
retn
align 10h
public PK11SDR_Encrypt
sub	esp, 4Ch
push	ebx
push	ebp
xor	ebx, ebx
push	esi
push	800h
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_44], ebx
xor	ebp, ebp
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_38], ebx
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+58h+var_48], eax
cmp	eax, ebx
jnz	short loc_10030AE7
or	esi, 0FFFFFFFFh
jmp	loc_10030C99
call	PK11_GetInternalKeySlot
mov	[esp+58h+var_4C], eax
cmp	eax, ebx
jnz	short loc_10030AFC
or	esi, 0FFFFFFFFh
jmp	loc_10030C99
push	edi
mov	edi, [esp+5Ch+arg_C]
push	edi
push	1
push	eax
call	PK11_Authenticate
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	loc_10030C98
mov	eax, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_40], eax
cmp	[eax+8], ebx
jnz	short loc_10030B83
mov	eax, dword_100BACE8
mov	[esp+5Ch+var_40], offset dword_100BA5B0
test	eax, eax
jz	short loc_10030B3F
push	eax
call	ds:PR_Lock
add	esp, 4
mov	esi, [esp+5Ch+var_4C]
push	edi
push	offset dword_100BA5B0
push	133h
push	esi
call	PK11_FindFixedKey
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jnz	short loc_10030B6E
push	edi
push	offset dword_100BA5B0
push	esi
call	sub_10034740
add	esp, 0Ch
mov	ebx, eax
mov	eax, dword_100BACE8
test	eax, eax
jz	short loc_10030B99
push	eax
call	ds:PR_Unlock
add	esp, 4
jmp	short loc_10030B99
push	edi
push	eax
mov	eax, [esp+64h+var_4C]
push	133h
push	eax
call	PK11_FindFixedKey
add	esp, 10h
mov	ebx, eax
			
test	ebx, ebx
jz	loc_10030C95
push	ebx
push	133h
call	PK11_GenerateNewParam
add	esp, 8
mov	[esp+5Ch+var_44], eax
test	eax, eax
jz	loc_10030C95
push	eax
push	ebx
push	104h
push	133h
call	PK11_CreateContextBySymKey
mov	ebp, eax
add	esp, 10h
test	ebp, ebp
jz	loc_10030C95
push	0
push	133h
call	PK11_GetBlockSize
mov	edi, [esp+64h+arg_4]
add	esp, 8
lea	esi, [esp+5Ch+var_3C]
mov	ecx, eax
call	sub_10030980
mov	esi, eax
test	esi, esi
jnz	loc_10030C98
mov	eax, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_48]
push	eax
push	ecx
mov	[esp+64h+var_4], eax
call	PORT_ArenaAlloc_Util
mov	edx, [esp+64h+var_34]
mov	ecx, [esp+64h+var_38]
push	edx
mov	edx, [esp+68h+var_4]
push	ecx
push	edx
lea	ecx, [esp+70h+var_4]
push	ecx
push	eax
push	ebp
mov	[esp+7Ch+var_8], eax
call	PK11_CipherOp
mov	esi, eax
add	esp, 20h
test	esi, esi
jnz	short loc_10030C98
push	ebp
call	PK11_Finalize
mov	eax, [esp+60h+var_40]
mov	edx, [eax]
mov	ecx, [eax+4]
mov	[esp+60h+var_30], edx
mov	edx, [eax+8]
lea	eax, [esp+60h+var_24]
push	eax
mov	[esp+64h+var_2C], ecx
mov	ecx, [esp+64h+var_48]
mov	[esp+64h+var_28], edx
mov	edx, [esp+64h+var_44]
push	ecx
push	edx
push	7
call	PK11_ParamToAlgid
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	short loc_10030C98
mov	ecx, [esp+5Ch+arg_8]
push	offset dword_100BA550
lea	eax, [esp+60h+var_30]
push	eax
push	ecx
push	esi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10030C98
			
or	esi, 0FFFFFFFFh
			
pop	edi
			
lea	edx, [esp+58h+var_3C]
push	0
push	edx
call	SECITEM_ZfreeItem_Util
mov	eax, [esp+60h+var_48]
add	esp, 8
test	eax, eax
jz	short loc_10030CBB
push	1
push	eax
call	PORT_FreeArena_Util
add	esp, 8
test	ebp, ebp
jz	short loc_10030CCA
push	1
push	ebp
call	PK11_DestroyContext
add	esp, 8
mov	eax, [esp+58h+var_44]
test	eax, eax
jz	short loc_10030CDD
push	1
push	eax
call	SECITEM_ZfreeItem_Util
add	esp, 8
test	ebx, ebx
jz	short loc_10030CEA
push	ebx
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esp+58h+var_4C]
test	eax, eax
jz	short loc_10030CFB
push	eax
call	PK11_FreeSlot
add	esp, 4
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
align 10h
			
sub	esp, 0Ch
push	esi
push	edi
mov	edi, [esp+14h+arg_4]
push	eax
push	ecx
push	105h
push	ebx
mov	[esp+24h+var_4], 0
mov	[esp+24h+var_8], 0
call	PK11_CreateContextBySymKey
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_10030D48
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
mov	eax, [edi+8]
mov	edx, [esp+14h+arg_0]
push	eax
push	edx
mov	[esp+1Ch+var_4], eax
call	PORT_ArenaAlloc_Util
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	ecx
mov	ecx, [esp+20h+var_4]
push	edx
push	ecx
lea	edx, [esp+28h+var_4]
push	edx
push	eax
push	esi
mov	[esp+34h+var_8], eax
call	PK11_CipherOp
mov	edi, eax
add	esp, 20h
test	edi, edi
jnz	short loc_10030DA1
push	esi
call	PK11_Finalize
push	edi
push	ebx
call	PK11_GetBlockSize
mov	edi, [esp+20h+arg_8]
push	eax
lea	eax, [esp+24h+var_C]
push	eax
call	sub_100309E0
add	esp, 14h
mov	edi, eax
push	1
push	esi
call	PK11_DestroyContext
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
add	esp, 0Ch
retn
align 10h
public PK11SDR_Decrypt
sub	esp, 50h
push	ebx
push	esi
push	edi
xor	edi, edi
push	800h
mov	[esp+60h+var_4C], edi
mov	[esp+60h+var_44], edi
mov	[esp+60h+var_48], edi
mov	[esp+60h+var_3C], edi
mov	[esp+60h+var_38], edi
mov	[esp+60h+var_34], edi
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
mov	[esp+5Ch+var_50], ebx
cmp	ebx, edi
jnz	short loc_10030DFF
or	esi, 0FFFFFFFFh
jmp	loc_10030FF0
push	30h		
lea	eax, [esp+60h+Dst]
push	edi		
push	eax		
call	memset
mov	ecx, [esp+68h+arg_0]
push	ecx
push	offset dword_100BA550
lea	edx, [esp+70h+Dst]
push	edx
push	ebx
call	SEC_QuickDERDecodeItem_Util
mov	esi, eax
add	esp, 1Ch
cmp	esi, edi
jnz	loc_10030FB0
call	PK11_GetInternalKeySlot
mov	[esp+5Ch+var_4C], eax
cmp	eax, edi
jnz	short loc_10030E43
or	esi, 0FFFFFFFFh
jmp	loc_10030FB0
push	ebp
mov	ebp, [esp+60h+arg_8]
push	ebp
push	1
push	eax
call	PK11_Authenticate
mov	esi, eax
add	esp, 0Ch
cmp	esi, edi
jnz	loc_10030FAF
lea	eax, [esp+60h+var_24]
push	eax
call	PK11_ParamFromAlgid
mov	esi, eax
add	esp, 4
mov	[esp+60h+var_48], esi
cmp	esi, edi
jnz	short loc_10030E7D
or	esi, 0FFFFFFFFh
jmp	loc_10030FAF
mov	edx, [esp+60h+var_4C]
push	ebp
lea	ecx, [esp+64h+Dst]
push	ecx
push	133h
push	edx
call	PK11_FindFixedKey
mov	ecx, eax
add	esp, 10h
cmp	ecx, edi
mov	edi, [esp+60h+arg_4]
mov	[esp+60h+var_44], ecx
jnz	short loc_10030EA8
or	esi, 0FFFFFFFFh
jmp	short loc_10030EE3
push	edi
lea	eax, [esp+64h+var_C]
push	eax
push	ebx
mov	eax, esi
mov	ebx, 133h
call	sub_10030D10
mov	esi, eax
add	esp, 0Ch
cmp	esi, 0FFFFFFFEh
jnz	short loc_10030EDB
mov	ecx, [edi]
mov	edx, [edi+4]
mov	eax, [edi+8]
mov	[esp+60h+var_3C], ecx
mov	[esp+60h+var_38], edx
mov	[esp+60h+var_34], eax
jmp	short loc_10030EE3
test	esi, esi
jz	loc_10030FA9
			
mov	ecx, [esp+60h+var_4C]
push	ebp
push	0
push	ecx
call	PK11_ListFixedKeysInSlot
add	esp, 0Ch
mov	[esp+60h+var_40], eax
mov	ebp, eax
test	eax, eax
jz	short loc_10030F64
lea	ecx, [ecx+0]
mov	eax, [esp+60h+var_50]
push	edi
lea	edx, [esp+64h+var_C]
push	edx
push	eax
mov	eax, [esp+6Ch+var_48]
mov	ecx, ebp
mov	ebx, 133h
call	sub_10030D10
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10030F60
cmp	esi, 0FFFFFFFEh
jnz	short loc_10030F51
cmp	[esp+60h+var_38], 0
jz	short loc_10030F3D
push	0
push	edi
call	SECITEM_ZfreeItem_Util
add	esp, 8
jmp	short loc_10030F51
mov	ecx, [edi]
mov	edx, [edi+4]
mov	eax, [edi+8]
mov	[esp+60h+var_3C], ecx
mov	[esp+60h+var_38], edx
mov	[esp+60h+var_34], eax
			
push	ebp
call	PK11_GetNextSymKey
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_10030F00
mov	eax, [esp+60h+var_40]
mov	ebx, eax
test	eax, eax
jz	short loc_10030F87
lea	ebx, [ebx+0]
push	ebx
call	PK11_GetNextSymKey
push	ebx
mov	ebp, eax
call	PK11_FreeSymKey
add	esp, 8
mov	ebx, ebp
test	ebp, ebp
jnz	short loc_10030F70
test	esi, esi
jz	short loc_10030FA9
mov	eax, [esp+60h+var_38]
test	eax, eax
jz	short loc_10030FA9
mov	ecx, [esp+60h+var_3C]
mov	edx, [esp+60h+var_34]
mov	[edi], ecx
xor	esi, esi
mov	[edi+4], eax
mov	[edi+8], edx
mov	[esp+60h+var_38], esi
			
mov	ebx, [esp+60h+var_50]
xor	edi, edi
			
pop	ebp
			
push	1
push	ebx
call	PORT_FreeArena_Util
mov	eax, [esp+64h+var_44]
add	esp, 8
cmp	eax, edi
jz	short loc_10030FCC
push	eax
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esp+5Ch+var_48]
cmp	eax, edi
jz	short loc_10030FDF
push	1
push	eax
call	SECITEM_ZfreeItem_Util
add	esp, 8
mov	eax, [esp+5Ch+var_4C]
cmp	eax, edi
jz	short loc_10030FF0
push	eax
call	PK11_FreeSlot
add	esp, 4
			
cmp	[esp+5Ch+var_38], edi
jz	short loc_10031004
lea	eax, [esp+5Ch+var_3C]
push	edi
push	eax
call	SECITEM_ZfreeItem_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 50h
retn
align 10h
			
cmp	dword ptr [eax+28h], 0
jz	short loc_1003101F
mov	ecx, [eax+8]
cmp	dword ptr [ecx+30h], 0
jnz	short locret_10031029
mov	edx, [eax+8]
push	edx
call	sub_10035650
pop	ecx
retn
align 10h
			
cmp	dword ptr [eax+28h], 0
jz	short loc_1003103F
mov	ecx, [eax+8]
cmp	dword ptr [ecx+30h], 0
jnz	short locret_10031049
mov	edx, [eax+8]
push	edx
call	sub_10035670
pop	ecx
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+50h], 0
push	edi
jz	short loc_10031086
lea	esp, [esp+0]
mov	edi, [esi+50h]
mov	eax, [edi+10h]
mov	[esi+50h], eax
mov	ecx, [edi+28h]
mov	edx, [edi+24h]
push	ecx
push	edx
push	esi
call	sub_1002A710
push	edi
call	PORT_Free_Util
add	esp, 10h
cmp	dword ptr [esi+50h], 0
jnz	short loc_10031060
cmp	dword ptr [esi+54h], 0
jz	short loc_100310B6
lea	esp, [esp+0]
mov	edi, [esi+54h]
mov	eax, [edi+10h]
mov	[esi+54h], eax
mov	ecx, [edi+28h]
mov	edx, [edi+24h]
push	ecx
push	edx
push	esi
call	sub_1002A710
push	edi
call	PORT_Free_Util
add	esp, 10h
cmp	dword ptr [esi+54h], 0
jnz	short loc_10031090
pop	edi
pop	esi
retn
align 10h
public PK11_FreeSymKey
			
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
lea	eax, [esi+2Ch]
push	eax
mov	ebx, 1
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	loc_10031205
push	ebp
xor	ebp, ebp
push	edi
mov	ecx, [esi+38h]
mov	[esp+10h+arg_0], ecx
mov	[esi+38h], ebp
cmp	[esi+14h], ebp
jz	short loc_1003113F
cmp	[esi+4], ebp
jz	short loc_1003113F
cmp	[esi+28h], ebp
jz	short loc_10031105
mov	edx, [esi+8]
cmp	[edx+30h], ebp
jnz	short loc_10031111
mov	eax, [esi+8]
push	eax
call	sub_10035650
add	esp, 4
mov	ecx, [esi+8]
mov	edx, [ecx]
mov	eax, [esi+4]
mov	ecx, [esi+24h]
mov	edx, [edx+5Ah]
push	eax
push	ecx
call	edx
add	esp, 8
cmp	[esi+28h], ebp
jz	short loc_10031133
mov	eax, [esi+8]
cmp	[eax+30h], ebp
jnz	short loc_1003113F
mov	ecx, [esi+8]
push	ecx
call	sub_10035670
add	esp, 4
			
mov	eax, [esi+1Ch]
cmp	eax, ebp
jz	short loc_1003115D
mov	edx, [esi+20h]
push	edx		
push	ebp		
push	eax		
call	memset
mov	eax, [esi+1Ch]
push	eax
call	PORT_Free_Util
add	esp, 10h
mov	ecx, [esi+40h]
cmp	ecx, ebp
jz	short loc_10031171
mov	eax, [esi+44h]
cmp	eax, ebp
jz	short loc_10031171
push	ecx
call	eax
add	esp, 4
			
mov	edi, [esi+8]
mov	ecx, [edi+4Ch]
push	ecx
call	ds:PR_Lock
mov	edx, [edi+58h]
add	esp, 4
cmp	edx, [edi+5Ch]
jge	short loc_100311AD
cmp	[esi+28h], ebp
jz	short loc_10031199
mov	eax, [edi+50h]
mov	[esi+10h], eax
mov	[edi+50h], esi
jmp	short loc_100311A5
mov	[esi+24h], ebp
mov	ecx, [edi+54h]
mov	[esi+10h], ecx
mov	[edi+54h], esi
inc	dword ptr [edi+58h]
mov	[esi+8], ebp
xor	ebx, ebx
mov	edx, [edi+4Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
cmp	ebx, ebp
jz	short loc_100311D8
mov	eax, [esi+28h]
mov	ecx, [esi+24h]
mov	edx, [esi+8]
push	eax
push	ecx
push	edx
call	sub_1002A710
push	esi
call	PORT_Free_Util
add	esp, 10h
push	edi
call	PK11_FreeSlot
mov	esi, [esp+14h+arg_0]
add	esp, 4
cmp	esi, ebp
jz	short loc_10031203
lea	eax, [esi+2Ch]
push	eax
mov	ebx, 1
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jz	loc_100310E4
pop	edi
pop	ebp
pop	esi
pop	ebx
retn
align 10h
public PK11_ReferenceSymKey
			
push	esi
mov	esi, [esp+4+arg_0]
lea	eax, [esi+2Ch]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
public PK11_GetPrevGenericObject
mov	eax, [esp+arg_0] 
mov	eax, [eax]
retn
align 10h
public PK11_GetSlotFromKey
mov	eax, [esp+arg_0]
mov	ecx, [eax+8]
mov	[esp+arg_0], ecx
jmp	PK11_ReferenceSlot
public PK11_GetSymKeyType
mov	eax, [esp+arg_0]
mov	ecx, [eax+30h]
mov	edx, [eax]
push	ecx
push	edx
call	PK11_GetKeyType
add	esp, 8
retn
align 10h
public PK11_GetNextSymKey
			
			
mov	eax, [esp+arg_0]
test	eax, eax
jz	short loc_1003127C
mov	eax, [eax+10h]
retn
xor	eax, eax
retn
align 10h
public PK11_GetSymKeyNickname
mov	eax, [esp+arg_0]
mov	ecx, [eax+4]
mov	edx, [eax+8]
push	ecx
push	edx
call	sub_1002A540
add	esp, 8
retn
align 10h
public PK11_SetSymKeyNickname
mov	eax, [esp+arg_4]
push	eax
mov	eax, [esp+4+arg_0]
mov	ecx, [eax+4]
mov	edx, [eax+8]
push	ecx
push	edx
call	sub_1002A5C0
add	esp, 0Ch
retn
align 10h
public PK11_SetSymKeyUserData
push	esi
mov	esi, [esp+4+arg_0]
mov	ecx, [esi+40h]
test	ecx, ecx
jz	short loc_100312E9
mov	eax, [esi+44h]
test	eax, eax
jz	short loc_100312F9
push	ecx
call	eax
mov	eax, [esp+8+arg_4]
mov	ecx, [esp+8+arg_8]
add	esp, 4
mov	[esi+40h], eax
mov	[esi+44h], ecx
pop	esi
retn
mov	edx, [esp+4+arg_4]
mov	eax, [esp+4+arg_8]
mov	[esi+40h], edx
mov	[esi+44h], eax
pop	esi
retn
mov	ecx, [esp+4+arg_4]
mov	edx, [esp+4+arg_8]
mov	[esi+40h], ecx
mov	[esi+44h], edx
pop	esi
retn
align 10h
public PK11_SetWrapKey
mov	eax, [esp+arg_8]
mov	edx, [eax+4]
mov	ecx, [esp+arg_0]
push	esi
mov	esi, [esp+4+arg_4]
mov	[ecx+esi*4+90h], edx
xor	edx, edx
mov	[eax+14h], edx
mov	[eax+28h], edx
mov	eax, [eax]
mov	[ecx+8Ch], eax
pop	esi
retn
align 10h
public PK11_VerifyKeyOK
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	eax
call	PK11_IsPresent
add	esp, 4
test	eax, eax
jnz	short loc_10031357
pop	esi
retn
mov	ecx, [esi+8]
mov	dx, [esi+3Ch]
xor	eax, eax
cmp	dx, [ecx+80h]
pop	esi
setz	al
retn
align 10h
public PK11_ExtractKeyValue
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+1Ch], 0
jz	short loc_1003138B
cmp	dword ptr [esi+30h], 0
jnz	short loc_10031387
mov	eax, [esi+20h]
mov	[esi+30h], eax
xor	eax, eax
pop	esi
retn
mov	eax, [esi+8]
test	eax, eax
jnz	short loc_100313A4
push	0FFFFE028h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	edx, [esi+4]
lea	ecx, [esi+18h]
push	ecx
push	0
push	11h
push	edx
push	eax
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_100313C3
mov	ecx, [esi+20h]
mov	[esi+30h], ecx
pop	esi
retn
align 10h
public PK11_DeleteTokenSymKey
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+4]
mov	ecx, [esi+8]
push	eax
push	ecx
call	sub_1002A4C0
add	esp, 8
test	eax, eax
jnz	short loc_100313EE
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	edx, [esi+4]
mov	eax, [esi+8]
push	edx
push	eax
call	PK11_DestroyTokenObject
add	esp, 8
mov	dword ptr [esi+4], 0
xor	eax, eax
pop	esi
retn
align 10h
public __PK11_GetKeyData
			
mov	eax, [esp+arg_0] 
add	eax, 18h
retn
align 10h
			
mov	ecx, [esp+arg_0]
add	ecx, 0FFFFFFEDh
xor	eax, eax
cmp	ecx, 0Ah	
ja	short locret_10031452 
jmp	ds:off_10031454[ecx*4] 
			
mov	eax, 8		
retn
			
mov	eax, 10h	
retn
			
mov	eax, 18h	
retn
			
mov	eax, 0Ah	
retn
			
mov	eax, 14h	
			
			
retn			
align 4
dd offset loc_1003143B	
dd offset loc_10031441
dd offset locret_10031452
dd offset locret_10031452
dd offset locret_10031452
dd offset locret_10031452
dd offset locret_10031452
dd offset loc_10031447
dd offset loc_1003144D
dd offset loc_1003144D
public PK11_GetKeyLength
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+30h]
test	eax, eax
jnz	loc_10031529
mov	eax, [esi+4]
mov	ecx, [esi+8]
push	100h
push	eax
push	ecx
call	sub_1002A210
lea	edx, [eax-13h]
add	esp, 0Ch
xor	ecx, ecx
cmp	edx, 0Ah	
ja	short loc_100314D7 
jmp	ds:off_1003152C[edx*4] 
			
mov	ecx, 8		
jmp	short loc_100314D7 
			
mov	ecx, 10h	
jmp	short loc_100314D7 
			
mov	ecx, 18h	
jmp	short loc_100314D7 
			
mov	ecx, 0Ah	
jmp	short loc_100314D7 
			
mov	ecx, 14h	
			
mov	[esi+30h], ecx	
cmp	eax, 10h
jnz	short loc_100314EE
cmp	dword ptr [esi], 370h
jnz	short loc_100314EE
mov	dword ptr [esi+30h], 30h
			
mov	eax, [esi+30h]
test	eax, eax
jnz	short loc_10031529
cmp	[esi+1Ch], eax
jnz	short loc_10031503
push	esi
call	PK11_ExtractKeyValue
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_10031526
mov	edx, [esi+4]
mov	eax, [esi+8]
push	161h
push	edx
push	eax
call	sub_1002A210
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jz	short loc_10031526
mov	[esi+30h], eax
			
mov	eax, [esi+30h]
			
pop	esi
retn
align 4
dd offset loc_100314BD	
dd offset loc_100314C4
dd offset loc_100314D7
dd offset loc_100314D7
dd offset loc_100314D7
dd offset loc_100314D7
dd offset loc_100314D7
dd offset loc_100314CB
dd offset loc_100314D2
dd offset loc_100314D2
align 10h
public PK11_GetKeyStrength
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi]
push	0
push	eax
call	PK11_GetKeyType
add	eax, 0FFFFFFEFh
add	esp, 8
cmp	eax, 0Dh	
ja	short loc_100315F6 
movzx	ecx, ds:byte_1003163C[eax]
jmp	ds:off_10031628[ecx*4] 
			
pop	edi		
mov	eax, 28h
pop	esi
retn
			
pop	edi		
mov	eax, 38h
pop	esi
retn
			
push	edi		
call	PK11_GetKeyLength
sub	eax, 10h
add	esp, 4
neg	eax
sbb	eax, eax
and	eax, 38h
pop	edi
add	eax, 70h
pop	esi
retn
			
mov	esi, [esp+8+arg_4] 
test	esi, esi
jz	short loc_100315F6 
push	esi
call	SECOID_GetAlgorithmTag_Util
push	eax
call	PK11_AlgtagToMechanism
add	esp, 8
cmp	eax, 102h
jz	short loc_100315D7
cmp	eax, 101h
jnz	short loc_100315F6 
push	esi
call	PK11_ParamFromAlgid
add	esp, 4
test	eax, eax
jz	short loc_100315F6 
mov	ecx, [eax+4]
push	1
push	eax
test	ecx, ecx
jnz	short loc_10031608
call	SECITEM_FreeItem_Util
add	esp, 8
			
push	edi		
call	PK11_GetKeyLength
add	eax, eax
add	eax, eax
add	esp, 4
add	eax, eax
pop	edi
pop	esi
retn
mov	esi, [ecx]
call	SECITEM_FreeItem_Util
push	edi
call	PK11_GetKeyLength
add	eax, eax
add	eax, eax
add	eax, eax
add	esp, 0Ch
cmp	eax, esi
jbe	short loc_10031605
pop	edi
mov	eax, esi
pop	esi
retn
align 4
dd offset loc_10031591	
dd offset loc_10031599
dd offset loc_10031589
dd offset loc_100315F6
db	2,     4,     4,     4 
db	4,     4,     4,     4
db	4,     3
align 10h
			
sub	esp, 10h
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	esi
push	edi
mov	edi, eax
mov	eax, [esp+20h+arg_4]
mov	esi, [edi+8]
mov	[esp+20h+var_C], eax
xor	eax, eax
mov	[esp+20h+arg_0], 1
cmp	ebp, eax
jz	short loc_10031686
mov	ecx, [ebp+4]
mov	edx, [ebp+8]
mov	[esp+20h+var_8], ecx
mov	[esp+20h+var_4], edx
jmp	short loc_1003168E
mov	[esp+20h+var_8], eax
mov	[esp+20h+var_4], eax
lea	eax, [esp+20h+arg_0]
push	eax
push	esi
call	sub_1002A6A0
add	esp, 8
cmp	[esp+20h+arg_0], 0
mov	ebx, eax
jz	short loc_100316AB
cmp	dword ptr [esi+30h], 0
jnz	short loc_100316B4
push	esi
call	sub_10035650
add	esp, 4
mov	edx, [edi+4]
mov	ecx, [esi]
mov	ecx, [ecx+76h]
push	edx
lea	eax, [esp+24h+var_C]
push	eax
push	ebx
call	ecx
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_1003170A
cmp	[esp+20h+arg_0], 0
jz	short loc_100316DB
cmp	dword ptr [esi+30h], 0
jnz	short loc_100316E4
push	esi
call	sub_10035670
add	esp, 4
mov	edx, [esp+20h+arg_0]
push	edx
push	ebx
push	esi
call	sub_1002A710
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 14h
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
mov	eax, [esp+20h+arg_4]
push	ebp
push	eax
call	PK11_GetBlockSize
mov	ecx, [esp+28h+arg_8]
push	eax
push	ecx
call	PK11_BlockData
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_10031761
cmp	[esp+20h+arg_0], eax
jz	short loc_10031734
cmp	[esi+30h], eax
jnz	short loc_1003173D
push	esi
call	sub_10035670
add	esp, 4
mov	edx, [esp+20h+arg_0]
push	edx
push	ebx
push	esi
call	sub_1002A710
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 10h
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
mov	eax, [esp+20h+arg_C]
mov	ecx, [eax+8]
mov	eax, [eax+4]
mov	[esp+20h+var_10], ecx
mov	edx, [esi]
lea	ecx, [esp+20h+var_10]
push	ecx
mov	ecx, [edi+8]
push	eax
mov	eax, [edi+4]
push	ecx
mov	ecx, [edx+7Ah]
push	eax
push	ebx
call	ecx
add	esp, 14h
cmp	[esp+20h+arg_0], 0
mov	ebp, eax
jz	short loc_10031797
cmp	dword ptr [esi+30h], 0
jnz	short loc_100317A0
push	esi
call	sub_10035670
add	esp, 4
mov	edx, [esp+20h+arg_0]
push	edx
push	ebx
push	esi
call	sub_1002A710
push	1
push	edi
call	SECITEM_FreeItem_Util
mov	eax, [esp+34h+var_10]
mov	ecx, [esp+34h+arg_C]
add	esp, 14h
mov	[ecx+8], eax
test	ebp, ebp
jz	short loc_100317E0
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 10h
			
mov	eax, [ecx+4]
mov	al, [eax]
cmp	al, 4
jnz	short loc_10031800
mov	eax, [ecx+8]
dec	eax
shr	eax, 1
retn
cmp	al, 2
jz	short loc_1003180B
cmp	al, 3
jz	short loc_1003180B
xor	eax, eax
retn
			
mov	eax, [ecx+8]
dec	eax
retn
public PK11_SetFortezzaHack
mov	eax, [esp+arg_0]
mov	dword ptr [eax+34h], 3
retn
align 10h
public PK11_GenerateFortezzaIV
sub	esp, 10h
mov	eax, [esp+10h+arg_4]
mov	ecx, [esp+10h+arg_8]
push	esi
mov	esi, [esp+14h+arg_0]
mov	edx, [esi+8]
push	edi
push	edx
mov	[esp+1Ch+var_10], 0
or	edi, 0FFFFFFFFh
mov	[esp+1Ch+var_C], 1002h
mov	[esp+1Ch+var_8], eax
mov	[esp+1Ch+var_4], ecx
call	sub_10035650
mov	edx, [esi+4]
mov	eax, [esi+8]
mov	ecx, [eax]
mov	eax, [eax+38h]
mov	ecx, [ecx+76h]
push	edx
lea	edx, [esp+20h+var_C]
push	edx
push	eax
call	ecx
add	esp, 10h
test	eax, eax
jnz	short loc_10031890
mov	eax, [esi+8]
mov	edx, [eax]
mov	eax, [eax+38h]
lea	ecx, [esp+18h+var_10]
push	ecx
mov	ecx, [edx+82h]
push	0
push	eax
call	ecx
add	esp, 0Ch
xor	edi, edi
mov	edx, [esi+8]
push	edx
call	sub_10035670
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
add	esp, 10h
retn
align 10h
mov	eax, [esi+4Ch]
push	edi
push	eax
xor	edi, edi
call	ds:PR_Lock
add	esp, 4
test	ebx, ebx
jz	short loc_100318D5
mov	eax, [esi+50h]
test	eax, eax
jz	short loc_100318D5
mov	edi, eax
mov	ecx, [edi+10h]
mov	[esi+50h], ecx
jmp	short loc_100318E4
			
mov	eax, [esi+54h]
test	eax, eax
jz	short loc_100318E7
mov	edi, eax
mov	edx, [edi+10h]
mov	[esi+54h], edx
dec	dword ptr [esi+58h]
mov	eax, [esi+4Ch]
push	eax
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	short loc_10031937
mov	dword ptr [edi+10h], 0
test	ebx, ebx
jz	short loc_1003197C
mov	cx, [edi+3Ch]
cmp	cx, [esi+80h]
jnz	short loc_10031916
cmp	dword ptr [edi+24h], 0
jnz	short loc_1003197C
lea	edx, [edi+28h]
push	edx
push	esi
call	sub_1002A6A0
add	esp, 8
mov	[edi+24h], eax
test	eax, eax
jnz	short loc_1003197C
push	edi
call	PK11_FreeSymKey
add	esp, 4
xor	eax, eax
pop	edi
retn
push	48h
call	PORT_Alloc_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10031933
mov	dword ptr [edi+10h], 0
test	ebx, ebx
jz	short loc_10031975
lea	eax, [edi+28h]
push	eax
push	esi
call	sub_1002A6A0
add	esp, 8
mov	[edi+24h], eax
test	eax, eax
jnz	short loc_1003197C
push	edi
call	PK11_FreeSymKey
add	esp, 4
xor	edi, edi
mov	eax, edi
pop	edi
retn
mov	dword ptr [edi+24h], 0
			
mov	eax, edi
pop	edi
retn
			
push	ebx
push	esi
push	edi
mov	ebx, eax
mov	esi, ecx
call	sub_100318B0
mov	edi, eax
xor	eax, eax
cmp	edi, eax
jz	short loc_100319B0
cmp	ebx, eax
jz	short loc_100319B6
cmp	[edi+24h], eax
jnz	short loc_100319B6
push	edi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
			
mov	ecx, [esp+0Ch+arg_0]
mov	edx, [esp+0Ch+arg_4]
mov	[edi+14h], edx
mov	edx, [esp+0Ch+arg_8]
mov	[edi], ecx
mov	[edi+18h], eax
mov	[edi+1Ch], eax
mov	[edi+20h], eax
mov	[edi+4], eax
mov	[edi+8], esi
mov	cx, [esi+80h]
push	esi
mov	[edi+3Ch], cx
mov	[edi+0Ch], edx
mov	[edi+30h], eax
mov	dword ptr [edi+2Ch], 1
mov	[edi+34h], eax
mov	[edi+38h], eax
mov	[edi+44h], eax
mov	[edi+40h], eax
call	PK11_ReferenceSlot
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
public PK11_SymKeyFromHandle
			
mov	eax, [esp+arg_14]
push	ebx
mov	ebx, [esp+4+arg_4]
push	ebp
push	edi
test	eax, eax
jz	short loc_10031A27
test	ebx, ebx
jz	short loc_10031A27
xor	edi, edi
jmp	short loc_10031A2C
			
mov	edi, 1
mov	ebp, [esp+0Ch+arg_10]
test	ebp, ebp
jnz	short loc_10031A3A
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
mov	ecx, [esp+0Ch+arg_18]
mov	edx, [esp+0Ch+arg_C]
push	esi
push	ecx
mov	ecx, [esp+14h+arg_0]
push	eax
push	edx
mov	eax, edi
call	sub_10031980
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10031A99
mov	eax, [esp+10h+arg_8]
mov	[esi+4], ebp
mov	[esi+34h], eax
test	edi, edi
jnz	short loc_10031AA0
mov	[esi+28h], edi
mov	ecx, [ebx+24h]
lea	edx, [ebx+2Ch]
push	edx
mov	[esi+24h], ecx
call	ds:PR_AtomicIncrement
add	esp, 4
mov	[esi+38h], ebx
cmp	[ebx+24h], edi
jnz	short loc_10031AA0
push	esi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
			
mov	eax, esi
pop	esi
pop	edi
pop	ebp
pop	ebx
retn
align 10h
public PK11_GetWrapKey
mov	eax, [esp+arg_0]
movzx	ecx, word ptr [eax+80h]
cmp	ecx, [esp+arg_C]
jz	short loc_10031AC4
xor	eax, eax
retn
mov	edx, [esp+arg_4]
mov	ecx, [eax+edx*4+90h]
test	ecx, ecx
jz	short loc_10031AC1
mov	edx, [esp+arg_10]
push	edx
push	0
push	ecx
mov	ecx, [eax+8Ch]
push	ecx
push	1
push	0
push	eax
call	PK11_SymKeyFromHandle
add	esp, 1Ch
retn
			
mov	eax, [edi+4Ch]
push	ebx
push	esi
push	eax
xor	ebx, ebx
xor	esi, esi
call	ds:PR_Lock
mov	eax, [edi+50h]
add	esp, 4
cmp	eax, ebx
jz	short loc_10031B14
mov	esi, eax
mov	ecx, [esi+10h]
mov	[edi+50h], ecx
jmp	short loc_10031B23
mov	eax, [edi+54h]
cmp	eax, ebx
jz	short loc_10031B26
mov	esi, eax
mov	edx, [esi+10h]
mov	[edi+54h], edx
dec	dword ptr [edi+58h]
mov	eax, [edi+4Ch]
push	eax
call	ds:PR_Unlock
add	esp, 4
cmp	esi, ebx
jz	loc_10031C06
mov	cx, [esi+3Ch]
mov	[esi+10h], ebx
cmp	cx, [edi+80h]
jnz	short loc_10031B50
cmp	[esi+24h], ebx
jnz	short loc_10031B68
lea	edx, [esi+28h]
push	edx
push	edi
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jz	loc_10031BF8
			
mov	ecx, [esp+8+arg_0]
xor	edx, edx
cmp	[esp+8+arg_8], ebx
push	ebp
setz	dl
mov	[esi], ecx
mov	ecx, [esp+0Ch+arg_18]
lea	ebp, [esi+18h]
mov	[ebp+0], ebx
mov	[esi+1Ch], ebx
mov	[esi+20h], ebx
mov	[esi+14h], edx
mov	[esi+4], ebx
mov	[esi+8], edi
mov	ax, [edi+80h]
push	edi
mov	[esi+3Ch], ax
mov	[esi+0Ch], ecx
mov	[esi+30h], ebx
mov	dword ptr [esi+2Ch], 1
mov	[esi+34h], ebx
mov	[esi+38h], ebx
mov	[esi+44h], ebx
mov	[esi+40h], ebx
call	PK11_ReferenceSlot
mov	ecx, [esp+10h+arg_14]
mov	edx, [ecx+8]
mov	eax, [esp+10h+arg_10]
mov	[esi+30h], edx
mov	edx, [esp+10h+arg_C]
lea	eax, [eax+eax*2]
lea	eax, [edx+eax*4]
add	esp, 4
mov	dword ptr [eax], 11h
mov	edx, [ecx+4]
push	ecx
mov	[eax+4], edx
mov	edx, [ecx+8]
push	ebp
push	ebx
mov	[eax+8], edx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
pop	ebp
test	eax, eax
jz	short loc_10031C4D
			
push	esi
call	PK11_FreeSymKey
add	esp, 4
pop	esi
xor	eax, eax
pop	ebx
retn
push	48h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	short loc_10031C01
lea	eax, [esi+28h]
push	eax
push	edi
mov	[esi+10h], ebx
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jz	short loc_10031BF8
cmp	eax, ebx
jnz	loc_10031B68
push	esi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	ebx
retn
mov	eax, [esp+8+arg_4]
mov	ecx, [esp+8+arg_8]
mov	edx, [esp+8+arg_10]
mov	[esi+34h], eax
lea	eax, [esi+4]
push	eax
mov	eax, [esp+0Ch+arg_C]
push	ecx
mov	ecx, [esi+24h]
inc	edx
push	edx
push	eax
push	ecx
push	edi
call	sub_1002A750
add	esp, 18h
test	eax, eax
jnz	loc_10031BF8
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
public PK11_ImportSymKey
			
sub	esp, 4Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+4Ch+var_4], eax
mov	eax, 4
push	ebx
mov	ebx, [esp+50h+arg_10]
mov	[esp+50h+var_44], eax
mov	[esp+50h+var_38], eax
mov	[esp+50h+var_2C], eax
mov	eax, [esp+50h+arg_C]
push	esi
mov	esi, [esp+54h+arg_4]
lea	edx, [esp+54h+var_44]
mov	[esp+54h+var_3C], edx
push	edi
mov	edi, [esp+58h+arg_0]
mov	[esp+58h+var_28], eax
mov	eax, [ebx+8]
lea	edx, [esp+58h+var_48]
mov	ecx, 1
mov	[esp+58h+var_30], edx
push	eax
lea	edx, [esp+5Ch+var_49]
push	esi
mov	[esp+60h+var_48], 10h
mov	[esp+60h+var_49], cl
mov	[esp+60h+var_40], 0
mov	[esp+60h+var_34], 100h
mov	[esp+60h+var_24], edx
mov	[esp+60h+var_20], ecx
call	PK11_GetKeyType
mov	ecx, [esp+60h+arg_14]
push	ecx
push	ebx
push	3
lea	edx, [esp+6Ch+var_40]
push	edx
mov	[esp+70h+var_48], eax
mov	eax, [esp+70h+arg_8]
push	0
push	eax
push	esi
call	sub_10031AF0
mov	ecx, [esp+7Ch+var_4]
add	esp, 24h
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 4Ch
retn
public PK11_ImportSymKeyWithFlags
			
sub	esp, 0DCh
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0DCh+var_4], eax
mov	edx, [esp+0DCh+arg_1C]
mov	ecx, [esp+0DCh+arg_8]
mov	eax, [esp+0DCh+arg_0]
push	ebx
mov	ebx, [esp+0E0h+arg_10]
push	ebp
mov	ebp, [esp+0E4h+arg_18]
mov	[esp+0E4h+var_D4], edx
lea	edx, [esp+0E4h+var_C8]
push	esi
mov	[esp+0E8h+var_D0], ecx
mov	ecx, 4
mov	[esp+0E8h+var_C0], edx
lea	edx, [esp+0E8h+var_D8]
push	edi
mov	edi, [esp+0ECh+arg_4]
mov	[esp+0ECh+var_CC], eax
mov	eax, [esp+0ECh+arg_14]
mov	[esp+0ECh+var_C8], ecx
mov	[esp+0ECh+var_D8], 10h
mov	[esp+0ECh+var_D9], 1
mov	[esp+0ECh+var_C4], 0
mov	[esp+0ECh+var_BC], ecx
mov	[esp+0ECh+var_B8], 100h
mov	[esp+0ECh+var_B4], edx
mov	[esp+0ECh+var_B0], ecx
lea	esi, [esp+0ECh+var_AC]
test	ebp, ebp
jz	short loc_10031E04
mov	ecx, 1
lea	edx, [esp+0ECh+var_D9]
mov	[esp+0ECh+var_AC], ecx
mov	[esp+0ECh+var_A8], edx
mov	[esp+0ECh+var_A4], ecx
mov	[esp+0ECh+var_A0], 2
mov	[esp+0ECh+var_9C], edx
mov	[esp+0ECh+var_98], ecx
lea	esi, [esp+0ECh+var_94]
lea	ecx, [esp+0ECh+var_D9]
push	ecx
push	esi
push	eax
call	sub_1002A810
lea	edx, [eax+eax*2]
mov	eax, [esp+0F8h+arg_C]
add	esp, 0Ch
lea	esi, [esi+edx*4]
test	eax, eax
jz	short loc_10031E69
push	eax
lea	eax, [esp+0F0h+var_C4]
mov	ecx, esi
sub	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	ecx, edx
shr	ecx, 1Fh
add	ecx, edx
push	ecx
lea	edx, [esp+0F4h+var_C4]
push	edx
call	sub_1002AC50
add	esp, 0Ch
test	eax, eax
jnz	short loc_10031E69
mov	eax, [esp+0ECh+arg_C]
lea	ecx, [esp+0ECh+var_D9]
mov	[esi], eax
mov	[esi+4], ecx
mov	dword ptr [esi+8], 1
add	esi, 0Ch
			
mov	edx, [ebx+8]
push	edx
push	edi
call	PK11_GetKeyType
mov	[esp+0F4h+var_D8], eax
mov	eax, [esp+0F4h+var_D4]
push	eax
lea	ecx, [esp+0F8h+var_C4]
sub	esi, ecx
mov	eax, 2AAAAAABh
imul	esi
sar	edx, 1
mov	eax, edx
push	ebx
shr	eax, 1Fh
add	eax, edx
mov	edx, [esp+0FCh+var_D0]
push	eax
push	ecx
push	ebp
push	edx
push	edi
mov	edi, [esp+110h+var_CC]
call	sub_10031AF0
add	esp, 24h
test	eax, eax
jz	short loc_10031EB7
test	ebp, ebp
jz	short loc_10031EB7
mov	dword ptr [eax+14h], 0
			
mov	ecx, [esp+0ECh+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0DCh
retn
public PK11_FindFixedKey
			
sub	esp, 3Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+3Ch+var_4], eax
push	ebx
mov	ebx, [esp+40h+arg_C]
mov	eax, 4
lea	ecx, [esp+40h+var_38]
push	ebp
mov	ebp, [esp+44h+arg_4]
mov	[esp+44h+var_38], eax
mov	[esp+44h+var_2C], eax
mov	eax, 1
mov	[esp+44h+var_30], ecx
mov	ecx, [esp+44h+arg_8]
push	esi
mov	esi, [esp+48h+arg_0]
lea	edx, [esp+48h+var_39]
mov	[esp+48h+var_28], eax
mov	[esp+48h+var_20], eax
push	edi
mov	[esp+4Ch+var_39], 1
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_24], edx
lea	eax, [esp+4Ch+var_1C]
test	ecx, ecx
jz	short loc_10031F4B
mov	eax, [ecx+4]
mov	ecx, [ecx+8]
mov	[esp+4Ch+var_18], eax
mov	[esp+4Ch+var_1C], 102h
mov	[esp+4Ch+var_14], ecx
lea	eax, [esp+4Ch+var_10]
lea	edx, [esp+4Ch+var_34]
sub	eax, edx
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
lea	ecx, [esp+50h+var_34]
push	ecx
push	esi
call	sub_1002C4F0
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_10031F8D
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+3Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
push	ebx
push	0
push	ebp
mov	eax, 1
mov	ecx, esi
call	sub_10031980
add	esp, 0Ch
test	eax, eax
jz	short loc_10031F78
mov	ecx, [esp+4Ch+var_4]
mov	[eax+4], edi
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
mov	dword ptr [eax+34h], 1
call	@__security_check_cookie@4 
add	esp, 3Ch
retn
align 10h
public PK11_ListFixedKeysInSlot
			
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, [esp+58h+arg_8]
push	ebx
mov	[esp+5Ch+var_48], eax
push	ebp
mov	eax, 4
lea	ecx, [esp+60h+var_44]
xor	ebx, ebx
push	esi
mov	[esp+64h+var_44], eax
mov	[esp+64h+var_2C], eax
mov	eax, 1
mov	[esp+64h+var_30], ecx
mov	ecx, [esp+64h+arg_4]
push	edi
mov	edi, [esp+68h+arg_0]
lea	edx, [esp+68h+var_55]
mov	[esp+68h+var_28], eax
mov	[esp+68h+var_20], eax
mov	[esp+68h+var_4C], edi
mov	[esp+68h+var_55], 1
mov	[esp+68h+var_54], ebx
mov	[esp+68h+var_50], ebx
mov	[esp+68h+var_34], ebx
mov	[esp+68h+var_24], edx
lea	eax, [esp+68h+var_1C]
cmp	ecx, ebx
jz	short loc_1003205D
mov	eax, ecx
lea	esi, [eax+1]
mov	dl, [eax]
inc	eax
test	dl, dl
jnz	short loc_10032040
sub	eax, esi
mov	[esp+68h+var_14], eax
mov	[esp+68h+var_1C], 3
mov	[esp+68h+var_18], ecx
lea	eax, [esp+68h+var_10]
lea	edx, [esp+68h+var_34]
sub	eax, edx
lea	ecx, [esp+68h+var_54]
push	ecx
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
lea	ecx, [esp+70h+var_34]
push	ecx
push	edi
call	sub_1002C5B0
mov	ebp, eax
add	esp, 10h
cmp	ebp, ebx
jnz	short loc_100320A4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+58h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
cmp	[esp+68h+var_54], ebx
jle	loc_1003213B
jmp	short loc_100320B4
mov	edi, [esp+68h+var_4C]
mov	eax, [ebp+ebx*4+0]
lea	edx, [esp+68h+var_40]
push	edx
push	0
push	100h
push	eax
push	edi
mov	esi, 10h
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_100320ED
cmp	[esp+68h+var_38], 4
mov	eax, [esp+68h+var_3C]
jnz	short loc_100320E4
mov	esi, [eax]
push	eax
call	PORT_Free_Util
add	esp, 4
mov	edi, [ebp+ebx*4+0]
push	esi
call	sub_10024E60
add	esp, 4
test	edi, edi
jz	short loc_10032130
mov	ecx, [esp+68h+var_48]
push	ecx
mov	ecx, [esp+6Ch+var_4C]
push	0
push	eax
mov	eax, 1
call	sub_10031980
add	esp, 0Ch
test	eax, eax
jz	short loc_10032130
mov	edx, [esp+68h+var_50]
mov	[eax+4], edi
mov	dword ptr [eax+34h], 1
mov	[eax+10h], edx
mov	[esp+68h+var_50], eax
			
inc	ebx
cmp	ebx, [esp+68h+var_54]
jl	loc_100320B0
push	ebp
call	PORT_Free_Util
mov	ecx, [esp+6Ch+var_4]
mov	eax, [esp+6Ch+var_50]
add	esp, 4
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_14]
cmp	dword ptr [esi+1Ch], 0
jnz	short loc_1003219C
push	esi
call	PK11_ExtractKeyValue
add	esp, 4
test	eax, eax
jz	short loc_1003219C
mov	eax, [esp+4+arg_10]
mov	ecx, [esp+4+arg_C]
mov	edx, [esp+4+arg_8]
push	esi
push	eax
mov	eax, [esp+0Ch+arg_4]
push	ecx
mov	ecx, [esp+10h+arg_0]
push	edx
push	eax
push	ecx
call	sub_1001B290
add	esp, 18h
pop	esi
retn
			
mov	edx, [esi+0Ch]
mov	ecx, [esi+34h]
push	ebx
mov	ebx, [esp+8+arg_C]
push	ebp
mov	ebp, [esp+0Ch+arg_8]
push	edi
mov	edi, [esp+10h+arg_10]
push	edx
mov	edx, [esp+14h+arg_4]
push	edi
push	ebx
lea	eax, [esi+18h]
push	eax
mov	eax, [esp+20h+arg_0]
push	ebp
push	ecx
push	edx
push	eax
call	PK11_ImportSymKeyWithFlags
add	esp, 20h
test	eax, eax
jnz	short loc_100321E6
mov	ecx, [esp+10h+arg_4]
mov	edx, [esp+10h+arg_0]
push	esi
push	edi
push	ebx
push	ebp
push	ecx
push	edx
call	sub_1001B290
add	esp, 18h
pop	edi
pop	ebp
pop	ebx
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_4]
push	eax
mov	eax, [esp+4+arg_0]
push	0
push	0
push	ecx
push	edx
push	eax
call	sub_10032160
add	esp, 18h
retn
align 10h
			
push	ecx
mov	eax, [esp+4+arg_0]
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_4]
push	esi
push	edi
mov	edi, [eax+8]
xor	esi, esi
xor	ebx, ebx
mov	[esp+14h+var_4], esi
cmp	edi, esi
jz	short loc_10032267
cmp	[esp+14h+arg_8], esi
jle	short loc_100322BD
test	ebx, ebx
jnz	short loc_10032262
mov	ecx, [ebp+esi*4+0]
push	ecx
push	edi
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jnz	short loc_1003225B
lea	ebx, [eax+1]
inc	esi
cmp	esi, [esp+14h+arg_8]
jl	short loc_10032242
cmp	ebx, 1
jnz	short loc_100322BD
mov	edx, [esp+14h+arg_0]
mov	eax, [edx+0Ch]
mov	ecx, [esp+14h+arg_8]
push	eax
push	ecx
push	ebp
call	PK11_GetBestSlotMultiple
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10032298
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	edx, [esp+14h+arg_0]
mov	ecx, [esp+14h+arg_C]
mov	eax, [ebp+0]
push	edx
push	0
push	0
push	ecx
push	eax
push	esi
call	sub_10032160
push	esi
mov	[esp+30h+var_4], eax
call	PK11_FreeSlot
add	esp, 1Ch
			
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
			
mov	eax, [esp+arg_8]
mov	edx, [esp+arg_0]
push	eax
push	1
lea	ecx, [esp+8+arg_4]
push	ecx
push	edx
call	sub_10032220
add	esp, 10h
retn
align 10h
public PK11_KeyGenWithTemplate
			
sub	esp, 14h
push	ebx
push	ebp
xor	ebx, ebx
push	esi
xor	ebp, ebp
push	edi
mov	edi, [esp+24h+arg_0]
mov	[esp+24h+var_14], ebx
mov	[esp+24h+var_10], ebx
cmp	[esp+24h+arg_14], ebx
jbe	short loc_10032367
mov	eax, [esp+24h+arg_10]
add	eax, 4
lea	edx, [ebx+4]
mov	ecx, [eax-4]
dec	ecx
jz	short loc_1003233C
sub	ecx, 160h
jnz	short loc_10032353
mov	ecx, [eax]
cmp	ecx, ebx
jz	loc_100323B0
cmp	[eax+4], edx
jnz	short loc_100323B0
mov	ecx, [ecx]
mov	[esp+24h+var_10], ecx
jmp	short loc_10032353
mov	esi, [eax]
cmp	esi, ebx
jz	short loc_100323B0
cmp	dword ptr [eax+4], 1
jnz	short loc_100323B0
xor	ecx, ecx
cmp	[esi], bl
setnz	cl
mov	[esp+24h+var_14], ecx
			
inc	ebp
add	eax, 0Ch
cmp	ebp, [esp+24h+arg_14]
jb	short loc_10032317
cmp	[esp+24h+var_14], ebx
jnz	loc_100324F0
cmp	edi, ebx
jz	short loc_10032381
mov	edx, [esp+24h+arg_4]
push	edx
push	edi
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jnz	loc_100324F0
mov	ebp, [esp+24h+arg_18]
mov	eax, [esp+24h+arg_4]
push	ebp
push	eax
call	PK11_GetBestSlot
mov	edi, eax
add	esp, 8
cmp	edi, ebx
jnz	short loc_100323CD
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
			
push	0D1h
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
mov	ecx, [edi+4Ch]
push	ecx
xor	esi, esi
call	ds:PR_Lock
mov	eax, [edi+50h]
add	esp, 4
cmp	eax, ebx
jz	short loc_100323ED
mov	esi, eax
mov	edx, [esi+10h]
mov	[edi+50h], edx
jmp	short loc_100323FC
mov	eax, [edi+54h]
cmp	eax, ebx
jz	short loc_100323FF
mov	esi, eax
mov	eax, [esi+10h]
mov	[edi+54h], eax
dec	dword ptr [edi+58h]
mov	ecx, [edi+4Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 4
cmp	esi, ebx
jz	short loc_1003248A
mov	dx, [esi+3Ch]
mov	[esi+10h], ebx
cmp	dx, [edi+80h]
jnz	short loc_10032425
cmp	[esi+24h], ebx
jnz	short loc_10032439
lea	eax, [esi+28h]
push	eax
push	edi
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jz	short loc_100324B1
			
mov	edx, [esp+24h+arg_4]
mov	eax, 1
mov	[esi], edx
mov	[esi+18h], ebx
mov	[esi+1Ch], ebx
mov	[esi+20h], ebx
mov	[esi+14h], eax
mov	[esi+4], ebx
mov	[esi+8], edi
mov	cx, [edi+80h]
push	edi
mov	[esi+3Ch], cx
mov	[esi+0Ch], ebp
mov	[esi+30h], ebx
mov	[esi+2Ch], eax
mov	[esi+34h], ebx
mov	[esi+38h], ebx
mov	[esi+44h], ebx
mov	[esi+40h], ebx
call	PK11_ReferenceSlot
add	esp, 4
push	edi
call	PK11_FreeSlot
jmp	loc_1003260A
push	48h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	short loc_100324BA
lea	ecx, [esi+28h]
push	ecx
push	edi
mov	[esi+10h], ebx
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jnz	short loc_100324C7
push	esi
call	PK11_FreeSymKey
add	esp, 4
push	edi
xor	esi, esi
call	PK11_FreeSlot
jmp	loc_1003260A
cmp	[esi+24h], ebx
jnz	loc_10032439
push	esi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
push	edi
xor	esi, esi
call	PK11_FreeSlot
jmp	loc_1003260A
			
mov	edx, [edi+4Ch]
push	edx
xor	esi, esi
call	ds:PR_Lock
mov	eax, [edi+50h]
add	esp, 4
cmp	eax, ebx
jz	short loc_10032510
mov	esi, eax
mov	eax, [esi+10h]
mov	[edi+50h], eax
jmp	short loc_1003251F
mov	eax, [edi+54h]
cmp	eax, ebx
jz	short loc_10032522
mov	esi, eax
mov	ecx, [esi+10h]
mov	[edi+54h], ecx
dec	dword ptr [edi+58h]
mov	edx, [edi+4Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
cmp	esi, ebx
jz	short loc_1003256F
mov	ax, [esi+3Ch]
mov	[esi+10h], ebx
cmp	ax, [edi+80h]
jnz	short loc_10032548
cmp	[esi+24h], ebx
jnz	short loc_100325BB
lea	ecx, [esi+28h]
push	ecx
push	edi
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jnz	short loc_100325BB
push	esi
call	PK11_FreeSymKey
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
push	48h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	loc_100323C3
lea	edx, [esi+28h]
push	edx
push	edi
mov	[esi+10h], ebx
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jz	short loc_1003255C
cmp	eax, ebx
jnz	short loc_100325BB
push	esi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
			
mov	eax, [esp+24h+arg_4]
mov	ebp, [esp+24h+arg_18]
xor	ecx, ecx
cmp	[esp+24h+var_14], ebx
mov	[esi], eax
setz	cl
mov	[esi+18h], ebx
mov	[esi+1Ch], ebx
mov	[esi+20h], ebx
mov	[esi+4], ebx
mov	[esi+8], edi
push	edi
mov	[esi+14h], ecx
mov	dx, [edi+80h]
mov	[esi+3Ch], dx
mov	[esi+0Ch], ebp
mov	[esi+30h], ebx
mov	dword ptr [esi+2Ch], 1
mov	[esi+34h], ebx
mov	[esi+38h], ebx
mov	[esi+44h], ebx
mov	[esi+40h], ebx
call	PK11_ReferenceSlot
			
add	esp, 4
cmp	esi, ebx
jz	loc_100323C3
mov	eax, [esp+24h+var_10]
mov	ecx, [esp+24h+arg_8]
mov	[esi+30h], eax
mov	eax, [esp+24h+arg_C]
mov	dword ptr [esi+34h], 2
mov	[esp+24h+var_C], ecx
mov	[esp+24h+var_8], ebx
mov	[esp+24h+var_4], ebx
cmp	eax, ebx
jz	short loc_10032649
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	[esp+24h+var_8], edx
mov	[esp+24h+var_4], eax
cmp	[esp+24h+var_14], ebx
jz	short loc_1003266E
mov	ecx, [esi+8]
push	ebp
push	1
push	ecx
call	PK11_Authenticate
mov	edx, [esi+8]
push	edx
call	sub_10035690
add	esp, 10h
mov	edi, eax
mov	[esi+14h], ebx
jmp	short loc_1003268E
mov	edi, [esi+24h]
cmp	edi, ebx
jz	short loc_10032692
cmp	[esi+28h], ebx
jz	short loc_10032682
mov	eax, [esi+8]
cmp	[eax+30h], ebx
jnz	short loc_1003268E
mov	ecx, [esi+8]
push	ecx
call	sub_10035650
add	esp, 4
			
cmp	edi, ebx
jnz	short loc_100326AF
push	esi
call	PK11_FreeSymKey
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
mov	edx, [esi+8]
mov	eax, [edx]
mov	edx, [esp+24h+arg_14]
mov	eax, [eax+0EAh]
lea	ecx, [esi+4]
push	ecx
mov	ecx, [esp+28h+arg_10]
push	edx
push	ecx
lea	edx, [esp+30h+var_C]
push	edx
push	edi
call	eax
add	esp, 14h
mov	ebp, eax
cmp	[esp+24h+var_14], ebx
jz	short loc_100326EA
mov	ecx, [esi+8]
push	edi
push	ecx
call	sub_10035750
add	esp, 8
jmp	short loc_10032703
cmp	[esi+28h], ebx
jz	short loc_100326F7
mov	edx, [esi+8]
cmp	[edx+30h], ebx
jnz	short loc_10032703
mov	eax, [esi+8]
push	eax
call	sub_10035670
add	esp, 4
			
cmp	ebp, ebx
jz	short loc_10032726
push	esi
call	PK11_FreeSymKey
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 14h
retn
public PK11_ConvertSessionSymKeyToTokenSymKey
			
sub	esp, 10h
mov	ecx, [esp+10h+arg_4]
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	esi
mov	esi, [ebp+8]
push	edi
mov	ebx, 1
push	ecx
lea	eax, [esp+24h+arg_0]
push	ebx
push	esi
mov	byte ptr [esp+2Ch+arg_0], bl
mov	[esp+2Ch+var_C], ebx
mov	[esp+2Ch+var_8], eax
mov	[esp+2Ch+var_4], ebx
call	PK11_Authenticate
push	esi
call	sub_10035690
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_10032789
push	0FFFFE002h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
mov	edx, [esi]
lea	eax, [esp+20h+var_10]
push	eax
mov	eax, [ebp+4]
push	ebx
lea	ecx, [esp+28h+var_C]
push	ecx
mov	ecx, [edx+56h]
push	eax
push	edi
call	ecx
push	edi
push	esi
mov	ebx, eax
call	sub_10035750
add	esp, 1Ch
test	ebx, ebx
jz	short loc_100327C9
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
mov	edx, [esp+20h+var_10]
mov	eax, [ebp+0]
mov	ecx, [ebp+34h]
push	0
push	0
push	edx
push	eax
push	ecx
push	0
push	esi
call	PK11_SymKeyFromHandle
add	esp, 1Ch
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
align 10h
public PK11_PubWrapSymKey
			
sub	esp, 18h
mov	eax, [esp+18h+arg_C]
mov	ecx, [eax+8]
push	edi
mov	edi, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_14], ecx
mov	[esp+1Ch+var_18], 1
test	edi, edi
jnz	short loc_10032824
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 18h
retn
mov	edx, [esp+1Ch+arg_0]
push	ebp
push	104h
push	1
lea	eax, [esp+28h+arg_8]
push	eax
push	edi
mov	[esp+30h+arg_8], edx
call	sub_10032220
mov	ebp, eax
add	esp, 10h
mov	[esp+20h+var_10], ebp
test	ebp, ebp
jz	short loc_1003284E
mov	edi, ebp
push	esi
mov	esi, [edi+8]
test	esi, esi
jnz	short loc_1003286D
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 18h
retn
push	ebx
mov	ebx, [esp+28h+arg_4]
mov	ecx, [ebx+4]
push	ecx
call	sub_10026C80
mov	[esp+2Ch+var_C], eax
xor	eax, eax
push	eax
push	ebx
push	esi
mov	[esp+38h+var_8], eax
mov	[esp+38h+var_4], eax
call	PK11_ImportPublicKey
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jnz	short loc_100328B2
test	ebp, ebp
jz	short loc_100328A7
push	ebp
call	PK11_FreeSymKey
add	esp, 4
pop	ebx
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 18h
retn
lea	edx, [esp+28h+var_18]
push	edx
push	esi
call	sub_1002A6A0
add	esp, 8
cmp	[esp+28h+var_18], 0
mov	ebp, eax
jz	short loc_100328CF
cmp	dword ptr [esi+30h], 0
jnz	short loc_100328D8
push	esi
call	sub_10035650
add	esp, 4
mov	edx, [esp+28h+arg_C]
mov	eax, [esi]
lea	ecx, [esp+28h+var_14]
push	ecx
mov	ecx, [edx+4]
mov	edx, [edi+4]
push	ecx
push	edx
mov	edx, [eax+0F2h]
push	ebx
lea	ecx, [esp+38h+var_C]
push	ecx
push	ebp
call	edx
add	esp, 18h
cmp	[esp+28h+var_18], 0
mov	edi, eax
jz	short loc_1003290C
cmp	dword ptr [esi+30h], 0
jnz	short loc_10032915
push	esi
call	sub_10035670
add	esp, 4
mov	eax, [esp+28h+var_18]
push	eax
push	ebp
push	esi
call	sub_1002A710
mov	eax, [esp+34h+var_10]
add	esp, 0Ch
test	eax, eax
jz	short loc_10032935
push	eax
call	PK11_FreeSymKey
add	esp, 4
test	edi, edi
jz	short loc_10032953
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	ebx
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 18h
retn
mov	ecx, [esp+28h+var_14]
mov	edx, [esp+28h+arg_C]
pop	ebx
pop	esi
pop	ebp
mov	[edx+8], ecx
xor	eax, eax
pop	edi
add	esp, 18h
retn
align 10h
public PK11_WrapSymKey
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_10]
mov	ecx, [eax+8]
push	ebx
mov	ebx, [esp+20h+arg_8]
mov	eax, [ebx+8]
push	ebp
push	esi
mov	esi, [esp+28h+arg_C]
push	edi
xor	edi, edi
mov	[esp+2Ch+var_14], ecx
mov	[esp+2Ch+var_10], edi
mov	[esp+2Ch+var_18], edi
mov	[esp+2Ch+var_1C], 1
cmp	eax, edi
jz	short loc_100329AC
cmp	[esi+8], eax
jz	loc_10032A7A
mov	eax, [esi+8]
mov	ebp, [esp+2Ch+arg_0]
cmp	eax, edi
jz	short loc_100329E8
push	ebp
push	eax
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jz	short loc_100329E8
mov	eax, [esi+8]
push	ebx
push	0
push	0
push	106h
push	ebp
push	eax
call	sub_10032160
add	esp, 18h
mov	[esp+2Ch+var_10], eax
test	eax, eax
jnz	loc_10032A76
			
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_10032A0D
mov	ecx, [esi]
push	esi
push	0
push	0
push	104h
push	ecx
push	eax
call	sub_10032160
add	esp, 18h
mov	[esp+2Ch+var_10], eax
test	eax, eax
jnz	short loc_10032A72
cmp	[esi+1Ch], edi
jnz	short loc_10032A2A
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 1Ch
retn
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jnz	short loc_10032A42
push	eax
push	ebp
call	PK11_ParamFromIV
add	esp, 8
mov	[esp+2Ch+var_18], eax
mov	edi, eax
mov	edx, [esp+2Ch+arg_10]
push	edx
add	esi, 18h
push	esi
push	ebp
push	eax
mov	eax, ebx
call	sub_10031650
add	esp, 10h
mov	esi, eax
test	edi, edi
jz	short loc_10032A68
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 1Ch
retn
mov	esi, eax
jmp	short loc_10032A7E
mov	ebx, eax
jmp	short loc_10032A7E
mov	ebp, [esp+2Ch+arg_0]
			
mov	eax, [esp+2Ch+arg_4]
mov	edi, [ebx+8]
mov	[esp+2Ch+var_C], ebp
test	eax, eax
jnz	short loc_10032AA5
push	eax
push	ebp
call	PK11_ParamFromIV
xor	ecx, ecx
add	esp, 8
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+var_18], eax
cmp	eax, ecx
jz	short loc_10032AB5
mov	ecx, [eax+4]
mov	[esp+2Ch+var_8], ecx
mov	edx, [eax+8]
mov	[esp+2Ch+var_4], edx
jmp	short loc_10032ABD
mov	[esp+2Ch+var_8], ecx
mov	[esp+2Ch+var_4], ecx
mov	eax, [esp+2Ch+arg_10]
mov	ecx, [eax+8]
lea	edx, [esp+2Ch+var_1C]
push	edx
push	edi
mov	[esp+34h+var_14], ecx
call	sub_1002A6A0
add	esp, 8
cmp	[esp+2Ch+var_1C], 0
mov	ebp, eax
jz	short loc_10032AE5
cmp	dword ptr [edi+30h], 0
jnz	short loc_10032AEE
push	edi
call	sub_10035650
add	esp, 4
mov	edx, [esp+2Ch+arg_10]
mov	eax, [edi]
mov	eax, [eax+0F2h]
lea	ecx, [esp+2Ch+var_14]
push	ecx
mov	ecx, [edx+4]
mov	edx, [esi+4]
push	ecx
mov	ecx, [ebx+4]
push	edx
push	ecx
lea	edx, [esp+3Ch+var_C]
push	edx
push	ebp
call	eax
add	esp, 18h
cmp	[esp+2Ch+var_1C], 0
mov	[esp+2Ch+arg_8], eax
jz	short loc_10032B27
cmp	dword ptr [edi+30h], 0
jnz	short loc_10032B30
push	edi
call	sub_10035670
add	esp, 4
mov	ecx, [esp+2Ch+var_1C]
push	ecx
push	ebp
push	edi
call	sub_1002A710
xor	edi, edi
add	esp, 0Ch
cmp	[esp+2Ch+arg_8], edi
jz	short loc_10032BAB
cmp	[esi+1Ch], edi
jnz	short loc_10032B8A
mov	eax, [esi+8]
test	eax, eax
jnz	short loc_10032B65
push	0FFFFE028h
call	PORT_SetError_Util
add	esp, 4
or	edi, 0FFFFFFFFh
jmp	short loc_10032BB6
mov	ecx, [esi+4]
lea	edx, [esi+18h]
push	edx
push	0
push	11h
push	ecx
push	eax
call	sub_1002A0F0
add	esp, 14h
test	eax, eax
jnz	short loc_10032B84
mov	edx, [esi+20h]
mov	[esi+30h], edx
mov	edi, eax
test	eax, eax
jnz	short loc_10032BB6
mov	eax, [esp+2Ch+arg_10]
mov	ecx, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
push	eax
add	esi, 18h
push	esi
push	ecx
push	edx
mov	eax, ebx
call	sub_10031650
add	esp, 10h
mov	edi, eax
jmp	short loc_10032BB6
mov	eax, [esp+2Ch+var_14]
mov	ecx, [esp+2Ch+arg_10]
mov	[ecx+8], eax
			
mov	eax, [esp+2Ch+var_10]
test	eax, eax
jz	short loc_10032BC7
push	eax
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esp+2Ch+var_18]
test	eax, eax
jz	short loc_10032BDA
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 1Ch
retn
align 10h
public PK11_DeriveWithTemplate
			
push	ebp
mov	ebp, esp
and	esp, 0FFFFFFF8h
sub	esp, 134h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+134h+var_4], eax
mov	ecx, [ebp+arg_4]
mov	eax, [ebp+arg_0]
mov	edx, [ebp+arg_8]
push	ebx
mov	ebx, [eax+8]
mov	[esp+138h+var_124], ecx
mov	ecx, [ebp+arg_C]
mov	[esp+138h+var_128], eax
mov	eax, [ebp+arg_1C]
push	esi
mov	[esp+13Ch+var_12C], ecx
xor	ecx, ecx
push	edi
mov	[esp+140h+var_FC], edx
mov	[esp+140h+var_120], ecx
mov	[esp+140h+var_12D], 1
mov	[esp+140h+var_10C], 4
mov	[esp+140h+var_11C], 10h
mov	[esp+140h+var_118], ecx
lea	esi, [esp+140h+var_F8]
cmp	eax, 10h
jbe	short loc_10032C7B
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
			
xor	eax, eax
pop	edi
pop	esi
pop	ebx
mov	ecx, [esp+134h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
cmp	eax, ecx
jbe	short loc_10032C98
mov	esi, [ebp+arg_18]
lea	edx, [eax+eax*2]
add	edx, edx
add	edx, edx
mov	ecx, edx
shr	ecx, 2
lea	edi, [esp+140h+var_F8]
rep movsd
lea	esi, [esp+edx+140h+var_F8]
push	0
push	eax
lea	edx, [esp+148h+var_F8]
push	edx
call	sub_1002AC50
add	esp, 0Ch
xor	edi, edi
test	eax, eax
jnz	short loc_10032CC1
lea	eax, [esp+140h+var_10C]
mov	[esi], edi
mov	[esi+4], eax
mov	dword ptr [esi+8], 4
add	esi, 0Ch
mov	ecx, [ebp+arg_1C]
push	100h
push	ecx
lea	edx, [esp+148h+var_F8]
push	edx
call	sub_1002AC50
add	esp, 0Ch
test	eax, eax
jnz	short loc_10032D07
mov	eax, [ebp+arg_14]
mov	ecx, [esp+140h+var_12C]
push	eax
push	ecx
call	PK11_GetKeyType
lea	edx, [esp+148h+var_11C]
add	esp, 8
mov	dword ptr [esi], 100h
mov	[esi+4], edx
mov	dword ptr [esi+8], 4
mov	[esp+140h+var_11C], eax
add	esi, 0Ch
cmp	[ebp+arg_14], edi
jle	short loc_10032D44
mov	eax, [ebp+arg_1C]
push	161h
push	eax
lea	ecx, [esp+148h+var_F8]
push	ecx
call	sub_1002AC50
add	esp, 0Ch
test	eax, eax
jnz	short loc_10032D44
mov	edx, [ebp+arg_14]
lea	eax, [esp+140h+var_118]
mov	dword ptr [esi], 161h
mov	[esi+4], eax
mov	dword ptr [esi+8], 4
mov	[esp+140h+var_118], edx
add	esi, 0Ch
			
mov	eax, [ebp+arg_10]
cmp	eax, edi
jz	short loc_10032D77
mov	ecx, [ebp+arg_1C]
push	eax
push	ecx
lea	edx, [esp+148h+var_F8]
push	edx
call	sub_1002AC50
add	esp, 0Ch
test	eax, eax
jnz	short loc_10032D77
mov	eax, [ebp+arg_10]
lea	ecx, [esp+140h+var_12D]
mov	[esi], eax
mov	[esi+4], ecx
mov	dword ptr [esi+8], 1
add	esi, 0Ch
			
lea	edx, [esp+140h+var_F8]
sub	esi, edx
mov	eax, 2AAAAAABh
imul	esi
mov	esi, [esp+140h+var_124]
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	esi
push	ebx
mov	[esp+148h+var_110], eax
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jnz	short loc_10032DEF
mov	ebx, [esp+140h+var_128]
mov	eax, [ebx+0Ch]
push	eax
push	esi
call	PK11_GetBestSlot
mov	esi, eax
add	esp, 8
cmp	esi, edi
jz	loc_10032C64
mov	ecx, [esp+140h+var_124]
push	ebx
push	edi
push	edi
push	10Ch
push	ecx
push	esi
call	sub_10032160
mov	ebx, eax
push	esi
mov	[esp+15Ch+var_120], ebx
call	PK11_FreeSlot
add	esp, 1Ch
cmp	ebx, edi
jz	loc_10032C64
mov	[esp+140h+var_128], ebx
mov	ebx, [ebx+8]
mov	edx, [esp+140h+var_128]
mov	ecx, [ebx+4Ch]
mov	eax, [edx+0Ch]
push	ecx
mov	[esp+144h+var_114], eax
xor	esi, esi
call	ds:PR_Lock
mov	eax, [ebx+50h]
add	esp, 4
cmp	eax, edi
jz	short loc_10032E1A
mov	esi, eax
mov	edx, [esi+10h]
mov	[ebx+50h], edx
jmp	short loc_10032E29
mov	eax, [ebx+54h]
cmp	eax, edi
jz	short loc_10032E2C
mov	esi, eax
mov	eax, [esi+10h]
mov	[ebx+54h], eax
dec	dword ptr [ebx+58h]
mov	ecx, [ebx+4Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 4
cmp	esi, edi
jz	short loc_10032E71
mov	dx, [esi+3Ch]
mov	[esi+10h], edi
cmp	dx, [ebx+80h]
jnz	short loc_10032E52
cmp	[esi+24h], edi
jnz	short loc_10032ECA
lea	eax, [esi+28h]
push	eax
push	ebx
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, edi
jnz	short loc_10032ECA
push	esi
call	PK11_FreeSymKey
jmp	loc_10032C61
push	48h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, edi
jz	loc_10032C64
lea	ecx, [esi+28h]
push	ecx
push	ebx
mov	[esi+10h], edi
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, edi
jz	short loc_10032E66
cmp	eax, edi
jnz	short loc_10032ECA
push	esi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
xor	eax, eax
pop	edi
pop	esi
pop	ebx
mov	ecx, [esp+134h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
			
mov	edx, [esp+140h+var_12C]
xor	eax, eax
cmp	[ebp+arg_20], edi
mov	[esi], edx
mov	edx, [esp+140h+var_114]
setz	al
mov	[esi+18h], edi
mov	[esi+1Ch], edi
mov	[esi+20h], edi
mov	[esi+4], edi
mov	[esi+8], ebx
push	ebx
mov	[esi+14h], eax
mov	cx, [ebx+80h]
mov	[esi+3Ch], cx
mov	[esi+0Ch], edx
mov	[esi+30h], edi
mov	dword ptr [esi+2Ch], 1
mov	[esi+34h], edi
mov	[esi+38h], edi
mov	[esi+44h], edi
mov	[esi+40h], edi
call	PK11_ReferenceSlot
mov	eax, [ebp+arg_14]
mov	ecx, [esp+144h+var_124]
mov	[esi+30h], eax
mov	eax, [esp+144h+var_FC]
add	esp, 4
mov	[esp+140h+var_108], ecx
cmp	eax, edi
jz	short loc_10032F41
mov	edx, [eax+4]
mov	eax, [eax+8]
mov	[esp+140h+var_104], edx
mov	[esp+140h+var_100], eax
jmp	short loc_10032F49
mov	[esp+140h+var_104], edi
mov	[esp+140h+var_100], edi
mov	dword ptr [esi+34h], 1
cmp	[ebp+arg_20], edi
jz	short loc_10032F62
push	ebx
call	sub_10035690
add	esp, 4
mov	edi, eax
jmp	short loc_10032F7E
cmp	[esi+28h], edi
jz	short loc_10032F6F
mov	ecx, [esi+8]
cmp	[ecx+30h], edi
jnz	short loc_10032F7B
mov	edx, [esi+8]
push	edx
call	sub_10035650
add	esp, 4
mov	edi, [esi+24h]
test	edi, edi
jnz	short loc_10032FAA
cmp	[ebp+arg_20], edi
jnz	short loc_10032FA0
cmp	[esi+28h], edi
jz	short loc_10032F94
mov	eax, [esi+8]
cmp	[eax+30h], edi
jnz	short loc_10032FA0
mov	ecx, [esi+8]
push	ecx
call	sub_10035670
add	esp, 4
			
mov	[esp+140h+var_12C], 0B3h
jmp	short loc_10033004
mov	edx, [ebx]
lea	eax, [esi+4]
push	eax
mov	eax, [esp+144h+var_110]
push	eax
mov	eax, [esp+148h+var_128]
lea	ecx, [esp+148h+var_F8]
push	ecx
mov	ecx, [eax+4]
push	ecx
mov	ecx, [edx+0FAh]
lea	eax, [esp+150h+var_108]
push	eax
push	edi
call	ecx
add	esp, 18h
cmp	[ebp+arg_20], 0
mov	[esp+140h+var_12C], eax
jz	short loc_10032FE9
push	edi
push	ebx
call	sub_10035750
add	esp, 8
jmp	short loc_10033004
cmp	dword ptr [esi+28h], 0
jz	short loc_10032FF8
mov	edx, [esi+8]
cmp	dword ptr [edx+30h], 0
jnz	short loc_10033004
mov	eax, [esi+8]
push	eax
call	sub_10035670
add	esp, 4
			
mov	eax, [esp+140h+var_120]
test	eax, eax
jz	short loc_10033015
push	eax
call	PK11_FreeSymKey
add	esp, 4
cmp	[esp+140h+var_12C], 0
jz	short loc_1003303C
push	esi
call	PK11_FreeSymKey
add	esp, 4
xor	eax, eax
pop	edi
pop	esi
pop	ebx
mov	ecx, [esp+134h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
mov	ecx, [esp+140h+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
align 10h
public PK11_PubDerive
			
sub	esp, 78h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+78h+var_4], eax
mov	ecx, [esp+78h+arg_4]
mov	eax, [esp+78h+arg_0]
mov	edx, [esp+78h+arg_C]
push	ebx
push	ebp
mov	ebp, [eax+8]
push	edi
mov	edi, [esp+84h+arg_18]
mov	[esp+84h+var_68], ecx
mov	ecx, [esp+84h+arg_10]
xor	ebx, ebx
mov	[esp+84h+var_64], eax
mov	[esp+84h+var_6C], edx
mov	[esp+84h+var_74], ecx
mov	[esp+84h+var_60], edi
cmp	dword_100BACEC,	ebx
jnz	short loc_100330E0
push	80h
call	PORT_ZAlloc_Util
add	esp, 4
mov	dword_100BACEC,	eax
cmp	eax, ebx
jnz	short loc_100330DC
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
mov	byte ptr [eax+7Fh], 1
mov	edx, [ebp+4Ch]
push	esi
push	edx
xor	esi, esi
call	ds:PR_Lock
mov	eax, [ebp+50h]
add	esp, 4
cmp	eax, ebx
jz	short loc_10033101
mov	esi, eax
mov	eax, [esi+10h]
mov	[ebp+50h], eax
jmp	short loc_10033110
mov	eax, [ebp+54h]
cmp	eax, ebx
jz	short loc_10033113
mov	esi, eax
mov	ecx, [esi+10h]
mov	[ebp+54h], ecx
dec	dword ptr [ebp+58h]
mov	edx, [ebp+4Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
cmp	esi, ebx
jz	loc_100331B8
mov	ax, [esi+3Ch]
mov	[esi+10h], ebx
cmp	ax, [ebp+80h]
jnz	short loc_1003313D
cmp	[esi+24h], ebx
jnz	short loc_10033155
lea	ecx, [esi+28h]
push	ecx
push	ebp
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jz	loc_10033634	
			
mov	ecx, [esp+88h+arg_24]
mov	[esi], edi
mov	edi, 1
mov	[esi+18h], ebx
mov	[esi+1Ch], ebx
mov	[esi+20h], ebx
mov	[esi+14h], edi
mov	[esi+4], ebx
mov	[esi+8], ebp
mov	ax, [ebp+80h]
push	ebp
mov	[esi+3Ch], ax
mov	[esi+0Ch], ecx
mov	[esi+30h], ebx
mov	[esi+2Ch], edi
mov	[esi+34h], ebx
mov	[esi+38h], ebx
mov	[esi+44h], ebx
mov	[esi+40h], ebx
call	PK11_ReferenceSlot
mov	edx, [esp+8Ch+var_64]
mov	[esi+34h], edi
mov	eax, [edx+4]
add	esp, 4
cmp	eax, 6		
ja	loc_10033634	
jmp	ds:off_10033658[eax*4] 
push	48h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	loc_1003363D
lea	edx, [esi+28h]
push	edx
push	ebp
mov	[esi+10h], ebx
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jz	loc_10033634	
cmp	eax, ebx
jnz	loc_10033155
push	esi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
			
push	0FFFFE00Eh	
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10033634	
			
mov	al, [esp+88h+arg_8] 
mov	[esp+88h+var_4C], al
mov	eax, [esp+88h+var_6C]
mov	ecx, [eax+8]
mov	edx, [eax+4]
mov	eax, dword_100BACEC
mov	[esp+88h+var_43], eax
mov	eax, [esp+88h+var_74]
mov	[esp+88h+var_4B], ecx
mov	[esp+88h+var_47], edx
cmp	eax, ebx
jz	short loc_1003325E
mov	ecx, [eax+4]
mov	[esp+88h+var_43], ecx
mov	eax, [esp+88h+var_68]
cmp	dword ptr [eax+4], 3
jnz	short loc_10033278
mov	edx, [eax+4Ch]
mov	eax, [eax+48h]
mov	[esp+88h+var_3F], edx
mov	[esp+88h+var_3B], eax
jmp	short loc_10033286
mov	ecx, [eax+4Ch]
mov	edx, [eax+48h]
mov	[esp+88h+var_3F], ecx
mov	[esp+88h+var_3B], edx
mov	eax, [esp+88h+arg_14]
lea	ecx, [esp+88h+var_4C]
mov	[esp+88h+var_5C], eax
mov	[esp+88h+var_58], ecx
mov	[esp+88h+var_54], 15h
cmp	[esi+28h], ebx
jz	short loc_100332AE
mov	edx, [esi+8]
cmp	[edx+30h], ebx
jnz	short loc_100332BA
mov	eax, [esi+8]
push	eax
call	sub_10035650
add	esp, 4
mov	edx, [esp+88h+var_64]
mov	ecx, [ebp+0]
mov	ecx, [ecx+0FAh]
lea	eax, [esi+4]
push	eax
mov	eax, [edx+0Ch]
push	ebx
push	ebx
push	eax
mov	eax, [esi+24h]
lea	edx, [esp+98h+var_5C]
push	edx
push	eax
call	ecx
add	esp, 18h
mov	edi, eax
cmp	[esi+28h], ebx
jz	short loc_100332EE
mov	edx, [esi+8]
cmp	[edx+30h], ebx
jnz	short loc_100332FA
mov	eax, [esi+8]
push	eax
call	sub_10035670
add	esp, 4
cmp	edi, ebx
jnz	short loc_10033313
mov	eax, esi
pop	esi
pop	edi
pop	ebp
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
			
push	edi
jmp	loc_10033626
			
mov	ecx, [esp+88h+var_68] 
mov	eax, 4
mov	[esp+88h+var_75], 1
mov	[esp+88h+var_6C], eax
mov	[esp+88h+var_74], 10h
mov	[esp+88h+var_70], ebx
cmp	[ecx+4], eax
jnz	loc_10033217	
lea	edx, [esp+88h+var_6C]
mov	[esp+88h+var_30], edx
mov	edx, [esp+88h+arg_1C]
mov	[esp+88h+var_14], edi
mov	edi, [esp+88h+arg_20]
lea	ecx, [esp+88h+var_74]
mov	[esp+88h+var_2C], eax
mov	[esp+88h+var_20], eax
mov	[esp+88h+var_8], eax
mov	[esp+88h+var_50], eax
mov	eax, [esp+88h+var_60]
mov	[esp+88h+var_24], ecx
mov	[esp+88h+var_1C], edx
lea	ecx, [esp+88h+var_75]
lea	edx, [esp+88h+var_70]
push	edi
push	eax
mov	[esp+90h+var_34], ebx
mov	[esp+90h+var_28], 100h
mov	[esp+90h+var_18], ecx
mov	[esp+90h+var_10], 161h
mov	[esp+90h+var_C], edx
call	PK11_GetKeyType
add	esp, 8
mov	[esp+88h+var_70], edi
mov	[esi+30h], edi
cmp	edi, ebx
mov	[esp+88h+var_74], eax
mov	edi, 3
jz	short loc_100333C9
mov	edi, [esp+88h+var_50]
mov	eax, [esp+88h+var_68]
mov	edx, [eax+30h]
mov	eax, [eax+34h]
mov	ecx, [esp+88h+arg_14]
mov	[esp+88h+var_54], eax
mov	eax, esi
mov	[esp+88h+var_5C], ecx
mov	[esp+88h+var_58], edx
call	sub_10031010
mov	ecx, [ebp+0]
lea	eax, [esi+4]
push	eax
mov	eax, [esp+8Ch+var_64]
push	edi
lea	edx, [esp+90h+var_34]
push	edx
mov	edx, [eax+0Ch]
push	edx
mov	edx, [esi+24h]
lea	eax, [esp+98h+var_5C]
push	eax
mov	eax, [ecx+0FAh]
push	edx
call	eax
mov	edi, eax
add	esp, 18h
mov	eax, esi
call	sub_10031030
cmp	edi, ebx
jnz	loc_10033313
mov	eax, esi
pop	esi
pop	edi
pop	ebp
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
			
mov	ecx, [esp+88h+var_68] 
cmp	dword ptr [ecx+4], 6
mov	eax, 4
mov	[esp+88h+var_75], 1
mov	[esp+88h+var_50], eax
mov	[esp+88h+var_6C], 10h
mov	[esp+88h+var_70], ebx
jnz	loc_10033217	
lea	edx, [esp+88h+var_50]
mov	[esp+88h+var_30], edx
mov	edx, [esp+88h+arg_1C]
mov	[esp+88h+var_14], edi
mov	edi, [esp+88h+arg_20]
lea	ecx, [esp+88h+var_6C]
mov	[esp+88h+var_2C], eax
mov	[esp+88h+var_20], eax
mov	[esp+88h+var_8], eax
mov	[esp+88h+var_74], eax
mov	eax, [esp+88h+var_60]
mov	[esp+88h+var_24], ecx
mov	[esp+88h+var_1C], edx
lea	ecx, [esp+88h+var_75]
lea	edx, [esp+88h+var_70]
push	edi
push	eax
mov	[esp+90h+var_34], ebx
mov	[esp+90h+var_28], 100h
mov	[esp+90h+var_18], ecx
mov	[esp+90h+var_10], 161h
mov	[esp+90h+var_C], edx
call	PK11_GetKeyType
add	esp, 8
mov	ecx, edi
mov	[esp+88h+var_6C], eax
mov	[esp+88h+var_70], ecx
cmp	edi, ebx
jnz	short loc_10033509
push	eax
call	sub_10031420
mov	ecx, eax
add	esp, 4
mov	[esp+88h+var_70], ecx
cmp	ecx, ebx
jz	short loc_10033500
mov	[esp+88h+var_74], 3
jmp	short loc_10033509
mov	ecx, 14h
mov	[esp+88h+var_70], ecx
			
push	14h
mov	[esi+30h], ecx
call	PORT_ZAlloc_Util
mov	edi, eax
mov	eax, [esp+8Ch+var_68]
mov	dword ptr [edi], 2
mov	[edi+4], ebx
mov	[edi+8], ebx
mov	ecx, [eax+28h]
mov	[edi+0Ch], ecx
mov	edx, [eax+24h]
mov	eax, [esp+8Ch+arg_14]
mov	[edi+10h], edx
mov	[esp+8Ch+var_5C], eax
mov	eax, esi
mov	[esp+8Ch+var_58], edi
mov	[esp+8Ch+var_54], 14h
call	sub_10031010
mov	edx, [esp+8Ch+var_74]
mov	ecx, [ebp+0]
mov	ecx, [ecx+0FAh]
lea	eax, [esi+4]
push	eax
push	edx
mov	edx, [esp+94h+var_64]
lea	eax, [esp+94h+var_34]
push	eax
mov	eax, [edx+0Ch]
push	eax
mov	eax, [esi+24h]
lea	edx, [esp+9Ch+var_5C]
push	edx
push	eax
call	ecx
mov	ebx, eax
add	esp, 1Ch
mov	eax, esi
call	sub_10031030
test	ebx, ebx
jz	loc_10033612
push	0
push	0
call	NSS_Get_SEC_OctetStringTemplate_Util
mov	edx, [esp+90h+var_68]
push	eax
add	edx, 20h
push	edx
push	0
push	0
call	SEC_ASN1EncodeItem_Util
add	esp, 18h
mov	[esp+88h+var_60], eax
test	eax, eax
jnz	short loc_100335BD
push	14h
push	edi
call	PORT_ZFree_Util
jmp	short loc_10033631
mov	ecx, [eax+8]
mov	[edi+0Ch], ecx
mov	edx, [eax+4]
mov	eax, esi
mov	[edi+10h], edx
call	sub_10031010
mov	edx, [esp+88h+var_74]
mov	ecx, [ebp+0]
mov	ecx, [ecx+0FAh]
lea	eax, [esi+4]
push	eax
push	edx
mov	edx, [esp+90h+var_64]
lea	eax, [esp+90h+var_34]
push	eax
mov	eax, [edx+0Ch]
push	eax
mov	eax, [esi+24h]
lea	edx, [esp+98h+var_5C]
push	edx
push	eax
call	ecx
mov	ebx, eax
mov	eax, esi
call	sub_10031030
mov	edx, [esp+0A0h+var_60]
push	1
push	edx
call	SECITEM_FreeItem_Util
add	esp, 20h
push	14h
push	edi
call	PORT_ZFree_Util
add	esp, 8
test	ebx, ebx
jz	loc_10033427
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
			
push	esi		
call	PK11_FreeSymKey
add	esp, 4
mov	ecx, [esp+88h+var_4]
pop	esi
pop	edi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 78h
retn
align 4
dd offset loc_10033217	
dd offset loc_10033229
dd offset loc_10033229
dd offset loc_10033319
dd offset loc_10033229
dd offset loc_1003343C
align 10h
			
sub	esp, 14h
push	ebx
push	esi
push	edi
mov	ebx, eax
mov	edi, ecx
mov	ecx, [esp+20h+arg_10]
lea	eax, [ebx+ebx*2]
cmp	dword ptr [ecx+eax*4-0Ch], 161h
mov	[esp+20h+var_14], 1
jnz	short loc_100336A4
dec	ebx
mov	esi, [esp+20h+arg_8]
mov	edx, [esi+8]
push	edx
call	PORT_Alloc_Util
add	esp, 4
mov	[esp+20h+var_8], eax
test	eax, eax
jnz	short loc_100336E0
push	0FFFFE013h
call	PORT_SetError_Util
mov	eax, [esp+24h+arg_1C]
add	esp, 4
test	eax, eax
jz	short loc_100336D7
mov	dword ptr [eax], 2
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 14h
retn
mov	eax, [esi+8]
lea	ecx, [esp+20h+var_14]
push	ecx
push	edi
mov	[esp+28h+var_10], eax
call	sub_1002A6A0
add	esp, 8
cmp	[esp+20h+var_14], 0
mov	esi, eax
jz	short loc_10033704
cmp	dword ptr [edi+30h], 0
jnz	short loc_1003370D
push	edi
call	sub_10035650
add	esp, 4
mov	eax, [esp+20h+arg_0]
mov	ecx, [esp+20h+arg_4]
mov	edx, [edi]
mov	edx, [edx+86h]
push	ebp
push	eax
push	ecx
push	esi
call	edx
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_1003377B
cmp	[esp+24h+var_14], 0
jz	short loc_10033739
cmp	dword ptr [edi+30h], 0
jnz	short loc_10033742
push	edi
call	sub_10035670
add	esp, 4
mov	eax, [esp+24h+var_14]
push	eax
push	esi
push	edi
call	sub_1002A710
mov	ecx, [esp+30h+var_8]
push	ecx
call	PORT_Free_Util
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	eax, [esp+3Ch+arg_1C]
add	esp, 18h
test	eax, eax
jz	short loc_100337ED
mov	[eax], ebp
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 14h
retn
mov	ecx, [esp+24h+var_8]
mov	edx, [edi]
lea	eax, [esp+24h+var_10]
push	eax
mov	eax, [esp+28h+arg_8]
push	ecx
mov	ecx, [eax+8]
mov	eax, [eax+4]
push	ecx
mov	ecx, [edx+8Ah]
push	eax
push	esi
call	ecx
add	esp, 14h
cmp	[esp+24h+var_14], 0
mov	ebp, eax
jz	short loc_100337AE
cmp	dword ptr [edi+30h], 0
jnz	short loc_100337B7
push	edi
call	sub_10035670
add	esp, 4
mov	edx, [esp+24h+var_14]
push	edx
push	esi
push	edi
call	sub_1002A710
add	esp, 0Ch
test	ebp, ebp
jz	short loc_100337F7
mov	eax, [esp+24h+var_8]
push	eax
call	PORT_Free_Util
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	eax, [esp+30h+arg_1C]
add	esp, 0Ch
test	eax, eax
jz	short loc_100337ED
mov	[eax], ebp
			
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 14h
retn
mov	eax, [esp+24h+arg_14]
test	eax, eax
jnz	short loc_10033809
mov	ecx, [esp+24h+var_10]
mov	[esp+24h+var_4], ecx
jmp	short loc_1003380D
mov	[esp+24h+var_4], eax
mov	esi, [esp+24h+arg_C]
push	esi
push	edi
mov	[esp+2Ch+var_C], 0
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jz	short loc_1003384B
mov	edx, [esp+24h+arg_18]
mov	ecx, [esp+24h+arg_10]
push	edx
mov	edx, [esp+28h+arg_20]
lea	eax, [esp+28h+var_C]
push	eax
push	ebx
push	ecx
push	edx
push	4
push	esi
call	sub_10031AF0
add	esp, 1Ch
mov	esi, eax
jmp	short loc_100338B2
mov	ebp, [esp+24h+arg_18]
push	ebp
push	esi
call	PK11_GetBestSlot
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_1003388E
push	0FFFFE040h
call	PORT_SetError_Util
mov	eax, [esp+28h+var_8]
push	eax
call	PORT_Free_Util
mov	eax, [esp+2Ch+arg_1C]
add	esp, 8
test	eax, eax
jz	short loc_10033884
mov	dword ptr [eax], 30h
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 14h
retn
mov	edx, [esp+24h+arg_10]
mov	eax, [esp+24h+arg_20]
push	ebp
lea	ecx, [esp+28h+var_C]
push	ecx
push	ebx
push	edx
push	eax
push	4
push	esi
call	sub_10031AF0
push	edi
mov	esi, eax
call	PK11_FreeSlot
add	esp, 20h
mov	ecx, [esp+24h+var_8]
push	ecx
call	PORT_Free_Util
mov	eax, [esp+28h+arg_1C]
add	esp, 4
test	eax, eax
jz	short loc_100338D5
mov	edx, esi
neg	edx
sbb	edx, edx
and	edx, 0FFFFFFD0h
add	edx, 30h
mov	[eax], edx
pop	ebp
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 14h
retn
align 10h
			
push	ebp
mov	ebp, esp
and	esp, 0FFFFFFF8h
sub	esp, 150h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+150h+var_4], eax
mov	eax, [ebp+arg_0]
mov	[esp+150h+var_128], eax
mov	eax, [ebp+arg_4]
mov	[esp+150h+var_144], edx
mov	edx, [ebp+arg_10]
mov	[esp+150h+var_138], ecx
mov	ecx, [ebp+arg_8]
mov	[esp+150h+var_124], eax
mov	eax, [ebp+arg_14]
mov	[esp+150h+var_140], edx
mov	edx, [ebp+arg_1C]
push	esi
mov	[esp+154h+var_13C], ecx
mov	ecx, [ebp+arg_20]
mov	[esp+154h+var_12C], eax
xor	eax, eax
push	edi
mov	[esp+158h+var_134], ecx
mov	[esp+158h+var_130], eax
mov	[esp+158h+var_145], 1
mov	[esp+158h+var_108], 4
mov	[esp+158h+var_11C], 10h
mov	[esp+158h+var_118], eax
lea	esi, [esp+158h+var_F8]
cmp	edx, 10h
jbe	short loc_1003397C
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
pop	esi
mov	ecx, [esp+150h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
cmp	edx, eax
jbe	short loc_10033999
mov	esi, [ebp+arg_18]
lea	eax, [edx+edx*2]
add	eax, eax
add	eax, eax
mov	ecx, eax
shr	ecx, 2
lea	edi, [esp+158h+var_F8]
rep movsd
lea	esi, [esp+eax+158h+var_F8]
push	0
push	edx
lea	edx, [esp+160h+var_F8]
push	edx
call	sub_1002AC50
add	esp, 0Ch
test	eax, eax
jnz	short loc_100339C0
mov	[esi], eax
lea	eax, [esp+158h+var_108]
mov	[esi+4], eax
mov	dword ptr [esi+8], 4
add	esi, 0Ch
mov	ecx, [ebp+arg_1C]
push	100h
push	ecx
lea	edx, [esp+160h+var_F8]
push	edx
call	sub_1002AC50
add	esp, 0Ch
test	eax, eax
jnz	short loc_10033A07
mov	eax, [esp+158h+var_140]
mov	ecx, [esp+158h+var_13C]
push	eax
push	ecx
call	PK11_GetKeyType
lea	edx, [esp+160h+var_11C]
add	esp, 8
mov	dword ptr [esi], 100h
mov	[esi+4], edx
mov	dword ptr [esi+8], 4
mov	[esp+158h+var_11C], eax
add	esi, 0Ch
mov	edi, [ebp+arg_C]
test	edi, edi
jz	short loc_10033A37
mov	eax, [ebp+arg_1C]
push	edi
push	eax
lea	ecx, [esp+160h+var_F8]
push	ecx
call	sub_1002AC50
add	esp, 0Ch
test	eax, eax
jnz	short loc_10033A37
lea	edx, [esp+158h+var_145]
mov	[esi], edi
mov	[esi+4], edx
mov	dword ptr [esi+8], 1
add	esi, 0Ch
			
mov	edi, [esp+158h+var_140]
test	edi, edi
jle	short loc_10033A74
mov	eax, [ebp+arg_1C]
push	161h
push	eax
lea	ecx, [esp+160h+var_F8]
push	ecx
call	sub_1002AC50
add	esp, 0Ch
test	eax, eax
jnz	short loc_10033A74
lea	edx, [esp+158h+var_118]
mov	dword ptr [esi], 161h
mov	[esi+4], edx
mov	dword ptr [esi+8], 4
mov	[esp+158h+var_118], edi
add	esi, 0Ch
			
mov	edi, [esp+158h+var_138]
lea	eax, [esp+158h+var_F8]
sub	esi, eax
mov	eax, 2AAAAAABh
imul	esi
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
add	esi, edx
mov	[esp+158h+var_120], esi
cmp	edi, 1
jnz	short loc_10033AAC
cmp	dword ptr [ebx+124h], 0
jz	short loc_10033AAC
mov	ecx, [ebx+128h]
mov	[esp+158h+var_FC], ecx
jmp	short loc_10033B06
			
cmp	dword ptr [ebx+30h], 0
jnz	short loc_10033ABB
push	ebx
call	sub_10035650
add	esp, 4
mov	edx, [ebx]
mov	ecx, [ebx+40h]
mov	edx, [edx+22h]
lea	eax, [esp+158h+var_104]
push	eax
push	edi
push	ecx
call	edx
add	esp, 0Ch
cmp	dword ptr [ebx+30h], 0
mov	[esp+158h+var_14C], eax
jnz	short loc_10033AE2
push	ebx
call	sub_10035670
add	esp, 4
cmp	[esp+158h+var_14C], 0
jz	short loc_10033AF1
mov	[esp+158h+var_FC], 0
cmp	edi, 1
jnz	short loc_10033B06
mov	eax, [esp+158h+var_FC]
mov	[ebx+128h], eax
mov	[ebx+124h], edi
			
mov	eax, [esp+158h+var_144]
mov	[esp+158h+var_114], edi
test	eax, eax
jnz	short loc_10033B3E
push	eax
push	edi
call	PK11_ParamFromIV
mov	edi, eax
xor	eax, eax
add	esp, 8
mov	[esp+158h+var_130], edi
mov	[esp+158h+var_144], edi
cmp	edi, eax
jz	short loc_10033B52
mov	eax, edi
mov	ecx, [eax+4]
mov	[esp+158h+var_110], ecx
mov	edx, [eax+8]
mov	[esp+158h+var_10C], edx
jmp	short loc_10033B5A
mov	ecx, [eax+4]
mov	edi, [esp+158h+var_130]
mov	[esp+158h+var_110], ecx
mov	edx, [eax+8]
mov	[esp+158h+var_10C], edx
jmp	short loc_10033B5A
mov	[esp+158h+var_110], eax
mov	[esp+158h+var_10C], eax
			
test	[esp+158h+var_FC], 200h
jz	loc_10033C0E
mov	eax, [esp+158h+var_13C]
push	eax
push	ebx
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jnz	loc_10033C0E
mov	ecx, [esp+158h+var_134]
mov	eax, [esp+158h+var_12C]
push	ecx
mov	ecx, [esp+15Ch+var_140]
lea	edx, [esp+15Ch+var_14C]
push	edx
push	eax
mov	eax, [esp+164h+var_13C]
push	ecx
mov	ecx, [esp+168h+var_124]
lea	edx, [esp+168h+var_F8]
push	edx
push	eax
mov	eax, [esp+170h+var_128]
push	ecx
lea	edx, [esp+174h+var_114]
push	edx
push	eax
mov	eax, esi
mov	ecx, ebx
call	sub_10033680
mov	esi, eax
add	esp, 24h
test	esi, esi
jz	short loc_10033BE2
test	edi, edi
jz	short loc_10033BCC
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, esi
pop	edi
pop	esi
mov	ecx, [esp+150h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
cmp	[esp+158h+var_14C], 30h
jnz	short loc_10033C0E
test	edi, edi
jz	short loc_10033BF8
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
			
xor	eax, eax
pop	edi
pop	esi
mov	ecx, [esp+150h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
			
mov	ecx, [ebx+4Ch]
push	ecx
xor	esi, esi
call	ds:PR_Lock
mov	eax, [ebx+50h]
xor	edi, edi
add	esp, 4
cmp	eax, edi
jz	short loc_10033C30
mov	esi, eax
mov	edx, [esi+10h]
mov	[ebx+50h], edx
jmp	short loc_10033C3F
mov	eax, [ebx+54h]
cmp	eax, edi
jz	short loc_10033C42
mov	esi, eax
mov	eax, [esi+10h]
mov	[ebx+54h], eax
dec	dword ptr [ebx+58h]
mov	ecx, [ebx+4Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 4
cmp	esi, edi
jz	short loc_10033CB6
mov	dx, [esi+3Ch]
mov	[esi+10h], edi
cmp	dx, [ebx+80h]
jnz	short loc_10033C6C
cmp	[esi+24h], edi
jnz	loc_10033CF6
lea	eax, [esi+28h]
push	eax
push	ebx
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, edi
jnz	short loc_10033CF6
push	esi
call	PK11_FreeSymKey
add	esp, 4
			
mov	eax, [esp+158h+var_130]
cmp	eax, edi
jz	loc_10033BF8
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
xor	eax, eax
pop	edi
pop	esi
mov	ecx, [esp+150h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
push	48h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, edi
jz	short loc_10033C89
lea	ecx, [esi+28h]
push	ecx
push	ebx
mov	[esi+10h], edi
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, edi
jz	short loc_10033C80
cmp	eax, edi
jnz	short loc_10033CF6
push	esi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
jmp	short loc_10033C89
			
mov	edx, [esp+158h+var_13C]
xor	eax, eax
cmp	[esp+158h+var_134], edi
mov	[esi+18h], edi
setz	al
mov	[esi+1Ch], edi
mov	[esi+20h], edi
mov	[esi], edx
mov	edx, [esp+158h+var_12C]
lea	edi, [esi+4]
mov	[esi+8], ebx
mov	[esi+14h], eax
xor	eax, eax
mov	[edi], eax
mov	cx, [ebx+80h]
push	ebx
mov	[esi+3Ch], cx
mov	[esi+0Ch], edx
mov	[esi+30h], eax
mov	dword ptr [esi+2Ch], 1
mov	[esi+34h], eax
mov	[esi+38h], eax
mov	[esi+44h], eax
mov	[esi+40h], eax
call	PK11_ReferenceSlot
mov	eax, [esp+15Ch+var_140]
add	esp, 4
cmp	[esp+158h+var_134], 0
mov	[esp+158h+var_138], esi
mov	[esi+30h], eax
mov	dword ptr [esi+34h], 4
jz	short loc_10033D74
push	ebx
call	sub_10035690
add	esp, 4
mov	[esp+158h+var_144], eax
jmp	short loc_10033D96
cmp	dword ptr [esi+28h], 0
jz	short loc_10033D83
mov	ecx, [esi+8]
cmp	dword ptr [ecx+30h], 0
jnz	short loc_10033D8F
mov	edx, [esi+8]
push	edx
call	sub_10035650
add	esp, 4
mov	eax, [esi+24h]
mov	[esp+158h+var_144], eax
test	eax, eax
jnz	short loc_10033DA8
mov	edi, [esp+158h+var_124]
mov	[esp+158h+var_14C], 0B3h
jmp	short loc_10033DDF
mov	edx, [esp+158h+var_120]
mov	ecx, [ebx]
push	edi
mov	edi, [esp+15Ch+var_124]
push	edx
lea	edx, [esp+160h+var_F8]
push	edx
mov	edx, [edi+8]
push	edx
mov	edx, [edi+4]
push	edx
mov	edx, [esp+16Ch+var_128]
push	edx
lea	edx, [esp+170h+var_114]
push	edx
push	eax
mov	eax, [ecx+0F6h]
call	eax
mov	[esp+178h+var_14C], eax
mov	eax, [esp+178h+var_144]
add	esp, 20h
cmp	[esp+158h+var_134], 0
jz	short loc_10033DF6
test	eax, eax
jz	short loc_10033E11
push	eax
push	ebx
call	sub_10035750
add	esp, 8
jmp	short loc_10033E11
cmp	dword ptr [esi+28h], 0
jz	short loc_10033E05
mov	ecx, [esi+8]
cmp	dword ptr [ecx+30h], 0
jnz	short loc_10033E11
mov	edx, [esi+8]
push	edx
call	sub_10035670
add	esp, 4
			
mov	eax, [esp+158h+var_130]
test	eax, eax
jz	short loc_10033E24
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
cmp	[esp+158h+var_14C], 0
jz	short loc_10033E7B
push	esi
call	PK11_FreeSymKey
add	esp, 4
cmp	[esp+158h+var_14C], 30h
mov	[esp+158h+var_138], 0
jz	short loc_10033E7B
mov	eax, [esp+158h+var_134]
mov	ecx, [esp+158h+var_12C]
mov	edx, [esp+158h+var_140]
push	eax
push	0
push	ecx
mov	ecx, [esp+164h+var_13C]
push	edx
lea	eax, [esp+168h+var_F8]
push	eax
mov	eax, [esp+16Ch+var_128]
push	ecx
push	edi
lea	edx, [esp+174h+var_114]
push	edx
push	eax
mov	eax, [esp+17Ch+var_120]
mov	ecx, ebx
call	sub_10033680
add	esp, 24h
mov	[esp+158h+var_138], eax
			
mov	ecx, [esp+158h+var_4]
mov	eax, [esp+158h+var_138]
pop	edi
pop	esi
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
align 10h
public PK11_UnwrapSymKey
mov	eax, [esp+arg_0]
mov	ecx, [eax+0Ch]
mov	edx, [esp+arg_18]
push	ebx
mov	ebx, [eax+8]
push	0
push	0
push	0
push	ecx
mov	ecx, [esp+14h+arg_14]
push	edx
mov	edx, [esp+18h+arg_10]
push	ecx
mov	ecx, [esp+1Ch+arg_C]
push	edx
mov	edx, [eax+4]
push	ecx
mov	ecx, [esp+24h+arg_4]
push	edx
mov	edx, [esp+28h+arg_8]
call	sub_100338E0
add	esp, 24h
pop	ebx
retn
align 10h
public PK11_UnwrapSymKeyWithFlags
sub	esp, 0D0h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0D0h+var_4], eax
mov	eax, [esp+0D0h+arg_10]
mov	ecx, [esp+0D0h+arg_18]
push	ebx
mov	ebx, [esp+0D4h+arg_8]
push	ebp
mov	ebp, [esp+0D8h+arg_C]
push	esi
mov	esi, [esp+0DCh+arg_0]
push	edi
mov	edi, [esp+0E0h+arg_4]
lea	edx, [esp+0E0h+var_CD]
mov	[esp+0E0h+var_C8], eax
push	edx
lea	eax, [esp+0E4h+var_C4]
mov	[esp+0E4h+var_CC], ecx
mov	ecx, [esp+0E4h+arg_1C]
push	eax
push	ecx
mov	[esp+0ECh+var_CD], 1
call	sub_1002A810
mov	ecx, [esp+0ECh+var_CC]
push	0
push	eax
mov	eax, [esi+0Ch]
lea	edx, [esp+0F4h+var_C4]
push	edx
mov	edx, [esp+0F8h+arg_14]
push	eax
mov	eax, [esp+0FCh+var_C8]
push	ecx
mov	ecx, [esi+4]
push	edx
push	eax
push	ebp
push	ecx
mov	edx, ebx
mov	ebx, [esi+8]
mov	ecx, edi
call	sub_100338E0
mov	ecx, [esp+110h+var_4]
add	esp, 30h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0D0h
retn
align 10h
public PK11_UnwrapSymKeyWithFlagsPerm
sub	esp, 0D8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0D8h+var_4], eax
mov	eax, [esp+0D8h+arg_8]
mov	ecx, [esp+0D8h+arg_C]
mov	edx, [esp+0D8h+arg_10]
push	ebx
mov	ebx, [esp+0DCh+arg_20]
push	ebp
mov	ebp, [esp+0E0h+arg_4]
mov	[esp+0E0h+var_CC], eax
mov	eax, [esp+0E0h+arg_18]
push	esi
mov	[esp+0E4h+var_C8], eax
mov	eax, 1
push	edi
mov	edi, [esp+0E8h+arg_0]
mov	[esp+0E8h+var_D0], ecx
mov	[esp+0E8h+var_D4], edx
mov	[esp+0E8h+var_D5], al
lea	esi, [esp+0E8h+var_C4]
test	ebx, ebx
jz	short loc_1003401E
lea	ecx, [esp+0E8h+var_D5]
mov	[esp+0E8h+var_C4], eax
mov	[esp+0E8h+var_C0], ecx
mov	[esp+0E8h+var_BC], eax
lea	esi, [esp+0E8h+var_B8]
mov	eax, [esp+0E8h+arg_1C]
lea	edx, [esp+0E8h+var_D5]
push	edx
push	esi
push	eax
call	sub_1002A810
mov	ecx, eax
lea	edx, [esp+0F4h+var_C4]
sub	esi, edx
mov	eax, 2AAAAAABh
imul	esi
sar	edx, 1
add	ecx, edx
mov	eax, edx
mov	edx, [esp+0F4h+var_C8]
push	ebx
mov	ebx, [edi+8]
shr	eax, 1Fh
add	eax, ecx
mov	ecx, [edi+0Ch]
push	eax
lea	eax, [esp+0FCh+var_C4]
push	eax
mov	eax, [esp+100h+arg_14]
push	ecx
mov	ecx, [esp+104h+var_D4]
push	edx
mov	edx, [esp+108h+var_D0]
push	eax
mov	eax, [edi+4]
push	ecx
push	edx
mov	edx, [esp+114h+var_CC]
push	eax
mov	ecx, ebp
call	sub_100338E0
mov	ecx, [esp+118h+var_4]
add	esp, 30h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0D8h
retn
align 10h
public PK11_PubUnwrapSymKey
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
mov	eax, [esi+4]
push	edi
push	eax
call	sub_10026C80
mov	ebx, [esi+8]
mov	edi, eax
mov	eax, [esi+18h]
add	esp, 4
test	al, 1
jz	short loc_100340C6
shr	eax, 1
and	eax, 1
jmp	short loc_100340DA
mov	ecx, [esi+0Ch]
push	0
push	2
push	ecx
push	ebx
call	sub_1002A280
add	esp, 10h
movzx	eax, al
test	eax, eax
jz	short loc_100340EB
mov	edx, [esi+14h]
push	edx
push	ebx
call	sub_10016AB0
add	esp, 8
mov	eax, [esi+14h]
mov	ecx, [esp+0Ch+arg_10]
mov	edx, [esp+0Ch+arg_C]
push	0
push	0
push	0
push	eax
mov	eax, [esp+1Ch+arg_8]
push	ecx
mov	ecx, [esp+20h+arg_4]
push	edx
mov	edx, [esi+0Ch]
push	eax
push	ecx
push	edx
xor	edx, edx
mov	ecx, edi
call	sub_100338E0
add	esp, 24h
pop	edi
pop	esi
pop	ebx
retn
align 10h
public PK11_PubUnwrapSymKeyWithFlags
sub	esp, 0D4h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0D4h+var_4], eax
mov	eax, [esp+0D4h+arg_10]
push	ebx
push	ebp
mov	ebp, [esp+0DCh+arg_8]
push	esi
mov	esi, [esp+0E0h+arg_0]
mov	ecx, [esi+4]
push	edi
mov	edi, [esp+0E4h+arg_4]
push	ecx
mov	[esp+0E8h+var_D0], eax
call	sub_10026C80
mov	ecx, [esp+0E8h+arg_14]
mov	ebx, [esi+8]
lea	edx, [esp+0E8h+var_D1]
mov	[esp+0E8h+var_CC], eax
push	edx
lea	eax, [esp+0ECh+var_C4]
push	eax
push	ecx
mov	[esp+0F4h+var_D1], 1
call	sub_1002A810
mov	[esp+0F4h+var_C8], eax
mov	eax, [esi+18h]
add	esp, 10h
test	al, 1
jz	short loc_10034199
shr	eax, 1
and	eax, 1
jmp	short loc_100341B0
mov	edx, [esi+0Ch]
mov	eax, [esi+8]
push	0
push	2
push	edx
push	eax
call	sub_1002A280
add	esp, 10h
movzx	eax, al
test	eax, eax
jz	short loc_100341C1
mov	ecx, [esi+14h]
push	ecx
push	ebx
call	sub_10016AB0
add	esp, 8
mov	edx, [esp+0E4h+var_C8]
mov	ecx, [esi+14h]
push	0
push	edx
mov	edx, [esp+0ECh+var_D0]
lea	eax, [esp+0ECh+var_C4]
push	eax
mov	eax, [esp+0F0h+arg_C]
push	ecx
mov	ecx, [esi+0Ch]
push	edx
push	eax
push	ebp
push	edi
push	ecx
mov	ecx, [esp+108h+var_CC]
xor	edx, edx
call	sub_100338E0
mov	ecx, [esp+108h+var_4]
add	esp, 24h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0D4h
retn
align 10h
public PK11_PubUnwrapSymKeyWithFlagsPerm
			
sub	esp, 0D8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0D8h+var_4], eax
mov	eax, [esp+0D8h+arg_4]
mov	ecx, [esp+0D8h+arg_8]
mov	edx, [esp+0D8h+arg_10]
push	ebx
push	ebp
mov	ebp, [esp+0E0h+arg_18]
push	esi
mov	esi, [esp+0E4h+arg_0]
mov	[esp+0E4h+var_D0], eax
mov	eax, [esi+4]
push	edi
push	eax
mov	[esp+0ECh+var_D4], ecx
mov	[esp+0ECh+var_C8], edx
call	sub_10026C80
mov	ebx, [esi+8]
add	esp, 4
mov	[esp+0E8h+var_CC], eax
mov	[esp+0E8h+var_D5], 1
lea	edi, [esp+0E8h+var_C4]
test	ebp, ebp
jz	short loc_10034290
mov	eax, 1
lea	ecx, [esp+0E8h+var_D5]
mov	[esp+0E8h+var_C4], eax
mov	[esp+0E8h+var_C0], ecx
mov	[esp+0E8h+var_BC], eax
lea	edi, [esp+0E8h+var_B8]
mov	eax, [esp+0E8h+arg_14]
lea	edx, [esp+0E8h+var_D5]
push	edx
push	edi
push	eax
call	sub_1002A810
mov	ecx, eax
lea	edx, [esp+0F4h+var_C4]
sub	edi, edx
mov	eax, 2AAAAAABh
imul	edi
mov	eax, [esi+18h]
sar	edx, 1
mov	edi, edx
shr	edi, 1Fh
add	ecx, edx
add	esp, 0Ch
add	edi, ecx
test	al, 1
jz	short loc_100342CE
shr	eax, 1
and	eax, 1
jmp	short loc_100342E5
mov	eax, [esi+0Ch]
mov	ecx, [esi+8]
push	0
push	2
push	eax
push	ecx
call	sub_1002A280
add	esp, 10h
movzx	eax, al
test	eax, eax
jz	short loc_100342F6
mov	edx, [esi+14h]
push	edx
push	ebx
call	sub_10016AB0
add	esp, 8
mov	ecx, [esi+14h]
mov	edx, [esp+0E8h+var_C8]
push	ebp
push	edi
lea	eax, [esp+0F0h+var_C4]
push	eax
mov	eax, [esp+0F4h+arg_C]
push	ecx
mov	ecx, [esp+0F8h+var_D4]
push	edx
mov	edx, [esp+0FCh+var_D0]
push	eax
mov	eax, [esi+0Ch]
push	ecx
mov	ecx, [esp+104h+var_CC]
push	edx
push	eax
xor	edx, edx
call	sub_100338E0
mov	ecx, [esp+10Ch+var_4]
add	esp, 24h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0D8h
retn
align 10h
public PK11_CopySymKeyForSigning
sub	esp, 10h
push	ebx
push	esi
mov	esi, [esp+18h+arg_0]
cmp	dword ptr [esi+28h], 0
mov	ebx, 1
lea	eax, [esp+18h+var_D]
push	edi
mov	edi, [esi+8]
mov	[esp+1Ch+var_D], bl
mov	[esp+1Ch+var_C], 108h
mov	[esp+1Ch+var_8], eax
mov	[esp+1Ch+var_4], ebx
jz	short loc_10034386
cmp	dword ptr [edi+30h], 0
jnz	short loc_1003438F
push	edi
call	sub_10035650
add	esp, 4
mov	eax, [esi+4]
mov	ecx, [edi]
push	ebx
lea	edx, [esp+20h+var_C]
push	edx
mov	edx, [esi+24h]
push	eax
mov	eax, [ecx+66h]
push	edx
call	eax
add	esp, 10h
cmp	dword ptr [esi+28h], 0
mov	ebx, eax
jz	short loc_100343B8
mov	ecx, [esi+8]
cmp	dword ptr [ecx+30h], 0
jnz	short loc_100343C4
mov	edx, [esi+8]
push	edx
call	sub_10035670
add	esp, 4
test	ebx, ebx
jnz	short loc_100343DE
lea	eax, [esi+2Ch]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 10h
retn
mov	ecx, [esp+1Ch+arg_4]
push	esi
push	0
push	0
push	108h
push	ecx
push	edi
call	sub_10032160
add	esp, 18h
pop	edi
pop	esi
pop	ebx
add	esp, 10h
retn
align 10h
public PK11_MoveSymKey
			
mov	eax, [esp+arg_0]
push	esi
mov	esi, [esp+4+arg_10]
cmp	[esi+8], eax
jnz	short loc_10034435
cmp	[esp+4+arg_C], 0
jz	short loc_10034424
mov	eax, [esi+0Ch]
push	eax
push	esi
call	PK11_ConvertSessionSymKeyToTokenSymKey
add	esp, 8
pop	esi
retn
lea	ecx, [esi+2Ch]
push	ecx
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
mov	edx, [esp+4+arg_C]
mov	ecx, [esp+4+arg_8]
push	esi
push	edx
mov	edx, [esp+0Ch+arg_4]
push	ecx
mov	ecx, [esi]
push	edx
push	ecx
push	eax
call	sub_10032160
add	esp, 18h
pop	esi
retn
align 10h
			
sub	esp, 0D8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0D8h+var_4], eax
mov	eax, [esp+0D8h+arg_0]
mov	ecx, [esp+0D8h+arg_8]
mov	edx, [esp+0D8h+arg_20]
push	ebx
mov	ebx, [esp+0DCh+arg_1C]
push	ebp
mov	ebp, [esp+0E0h+arg_18]
push	esi
push	edi
mov	edi, [esp+0E8h+arg_4]
push	ebx
mov	[esp+0ECh+var_CC], eax
mov	[esp+0ECh+var_D0], ecx
mov	[esp+0ECh+var_D4], edx
lea	esi, [esp+0ECh+var_C4]
mov	[esp+0ECh+var_D6], 1
mov	[esp+0ECh+var_D5], 0
call	sub_1002A880
add	esp, 4
test	eax, eax
jz	short loc_100344DD
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
jmp	loc_100345F2
mov	eax, [esp+0E8h+arg_10]
mov	ecx, 4
test	eax, eax
jz	short loc_10034521
cmp	edi, 133h
jz	short loc_10034521
cmp	edi, 136h
jz	short loc_10034521
cmp	edi, 132h
jz	short loc_10034521
mov	[esp+0E8h+var_C8], eax
lea	eax, [esp+0E8h+var_C8]
mov	[esp+0E8h+var_C4], 161h
mov	[esp+0E8h+var_C0], eax
mov	[esp+0E8h+var_BC], ecx
lea	esi, [esp+0E8h+var_B8]
			
cmp	[esp+0E8h+arg_C], 0FFFFFFFFh
jz	short loc_10034541
lea	edx, [esp+0E8h+arg_C]
mov	dword ptr [esi], 100h
mov	[esi+4], edx
mov	[esi+8], ecx
add	esi, 0Ch
mov	eax, [esp+0E8h+arg_14]
test	eax, eax
jz	short loc_10034561
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	dword ptr [esi], 102h
mov	[esi+4], ecx
mov	[esi+8], edx
add	esi, 0Ch
lea	eax, [esp+0E8h+var_D5]
push	eax
lea	ecx, [esp+0ECh+var_D6]
push	ecx
push	esi
push	ebx
call	sub_1002A8A0
lea	edx, [eax+eax*2]
lea	eax, [esp+0F8h+var_D6]
push	eax
lea	esi, [esi+edx*4]
push	esi
push	ebp
call	sub_1002A810
mov	ebx, [esp+104h+arg_10]
lea	ecx, [eax+eax*2]
add	ecx, ecx
add	ecx, ecx
lea	edx, [esp+104h+var_C4]
sub	ecx, edx
add	ecx, esi
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	esi, edx
push	ebx
shr	esi, 1Fh
push	edi
add	esi, edx
call	sub_10025510
add	esp, 24h
cmp	eax, 80000EFEh
jnz	short loc_100345CC
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
jmp	short loc_100345F2
mov	ecx, [esp+0E8h+var_D4]
push	ecx
mov	ecx, [esp+0ECh+var_D0]
push	esi
lea	edx, [esp+0F0h+var_C4]
push	edx
mov	edx, [esp+0F4h+var_CC]
push	ecx
push	eax
push	edi
push	edx
call	PK11_KeyGenWithTemplate
add	esp, 1Ch
test	eax, eax
jz	short loc_100345F2
mov	[eax+30h], ebx
			
mov	ecx, [esp+0E8h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0D8h
retn
align 10h
public PK11_TokenKeyGenWithFlags
mov	eax, [esp+arg_1C]
mov	ecx, [esp+arg_18]
mov	edx, [esp+arg_14]
push	eax
mov	eax, [esp+4+arg_10]
push	ecx
mov	ecx, [esp+8+arg_C]
push	edx
mov	edx, [esp+0Ch+arg_8]
push	eax
mov	eax, [esp+10h+arg_4]
push	ecx
mov	ecx, [esp+14h+arg_0]
push	0FFFFFFFFh
push	edx
push	eax
push	ecx
call	sub_10034460
add	esp, 24h
retn
align 10h
public PK11_TokenKeyGen
mov	ecx, [esp+arg_C]
push	esi
xor	esi, esi
xor	edx, edx
push	edi
mov	edi, [esp+8+arg_4]
cmp	ecx, 0FFFFFFFFh
jnz	short loc_10034672
cmp	edi, 1002h
jnz	short loc_10034672
mov	esi, 1
xor	ecx, ecx
			
mov	eax, esi
neg	eax
sbb	eax, eax
and	eax, 100h
add	eax, 100h
or	eax, 800h
cmp	[esp+8+arg_14],	edx
jz	short loc_10034692
mov	edx, 5
push	ebx
mov	ebx, [esp+0Ch+arg_18]
push	ebx
push	edx
mov	edx, [esp+14h+arg_0]
push	eax
mov	eax, [esp+18h+arg_10]
push	eax
push	ecx
mov	ecx, [esp+20h+arg_8]
push	0FFFFFFFFh
push	ecx
push	edi
push	edx
call	sub_10034460
add	esp, 24h
pop	ebx
test	eax, eax
jz	short loc_100346C5
test	esi, esi
jz	short loc_100346C5
mov	dword ptr [eax+34h], 3
			
pop	edi
pop	esi
retn
align 10h
public PK11_KeyGen
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_4]
push	esi
xor	esi, esi
cmp	eax, 0FFFFFFFFh
jnz	short loc_100346EF
cmp	ecx, 1002h
jnz	short loc_100346EF
mov	esi, 1
xor	eax, eax
			
mov	edx, [esp+4+arg_10]
push	edx
mov	edx, esi
neg	edx
sbb	edx, edx
push	0
and	edx, 100h
add	edx, 100h
or	edx, 800h
push	edx
push	0
push	eax
mov	eax, [esp+18h+arg_8]
push	0FFFFFFFFh
push	eax
push	ecx
mov	ecx, [esp+24h+arg_0]
push	ecx
call	sub_10034460
add	esp, 24h
test	eax, eax
jz	short loc_10034736
test	esi, esi
jz	short loc_10034736
mov	dword ptr [eax+34h], 3
			
pop	esi
retn
align 10h
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	eax
push	5
push	900h
push	ecx
push	0
push	0FFFFFFFFh
push	0
push	133h
push	edx
call	sub_10034460
add	esp, 24h
retn
align 10h
public PK11_Derive
mov	eax, [esp+arg_14]
mov	ecx, [esp+arg_10]
mov	edx, [esp+arg_C]
push	0
push	0
push	0
push	eax
mov	eax, [esp+10h+arg_8]
push	ecx
mov	ecx, [esp+14h+arg_4]
push	edx
mov	edx, [esp+18h+arg_0]
push	eax
push	ecx
push	edx
call	PK11_DeriveWithTemplate
add	esp, 24h
retn
align 10h
public PK11_DeriveWithFlags
sub	esp, 0C8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0C8h+var_4], eax
mov	edx, [esp+0C8h+arg_18]
push	ebx
mov	ebx, [esp+0CCh+arg_8]
push	ebp
mov	ebp, [esp+0D0h+arg_C]
push	esi
mov	esi, [esp+0D4h+arg_0]
push	edi
mov	edi, [esp+0D8h+arg_4]
lea	eax, [esp+0D8h+var_C5]
push	eax
lea	ecx, [esp+0DCh+var_C4]
push	ecx
push	edx
mov	[esp+0E4h+var_C5], 1
call	sub_1002A810
mov	ecx, [esp+0E4h+arg_14]
mov	edx, [esp+0E4h+arg_10]
push	0
push	eax
lea	eax, [esp+0ECh+var_C4]
push	eax
push	ecx
push	edx
push	ebp
push	ebx
push	edi
push	esi
call	PK11_DeriveWithTemplate
mov	ecx, [esp+108h+var_4]
add	esp, 30h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0C8h
retn
align 10h
public PK11_DeriveWithFlagsPerm
sub	esp, 0CCh
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0CCh+var_4], eax
cmp	[esp+0CCh+arg_1C], 0
mov	eax, [esp+0CCh+arg_C]
push	ebx
mov	ebx, [esp+0D0h+arg_4]
push	ebp
mov	ebp, [esp+0D4h+arg_8]
push	esi
mov	[esp+0D8h+var_C8], eax
mov	eax, 1
push	edi
mov	edi, [esp+0DCh+arg_0]
mov	[esp+0DCh+var_C9], al
lea	esi, [esp+0DCh+var_C4]
jz	short loc_10034893
lea	ecx, [esp+0DCh+var_C9]
mov	[esp+0DCh+var_C4], eax
mov	[esp+0DCh+var_C0], ecx
mov	[esp+0DCh+var_BC], eax
lea	esi, [esp+0DCh+var_B8]
mov	eax, [esp+0DCh+arg_18]
lea	edx, [esp+0DCh+var_C9]
push	edx
push	esi
push	eax
call	sub_1002A810
mov	ecx, eax
lea	edx, [esp+0E8h+var_C4]
sub	esi, edx
mov	eax, 2AAAAAABh
imul	esi
sar	edx, 1
mov	eax, edx
add	ecx, edx
shr	eax, 1Fh
add	eax, ecx
mov	ecx, [esp+0E8h+arg_1C]
push	ecx
mov	ecx, [esp+0ECh+arg_10]
push	eax
mov	eax, [esp+0F0h+arg_14]
lea	edx, [esp+0F0h+var_C4]
push	edx
mov	edx, [esp+0F4h+var_C8]
push	eax
push	ecx
push	edx
push	ebp
push	ebx
push	edi
call	PK11_DeriveWithTemplate
mov	ecx, [esp+10Ch+var_4]
add	esp, 30h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0CCh
retn
align 10h
sub	esp, 14h
test	eax, eax
jnz	short loc_1003492A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 14h
retn
mov	ecx, [esp+14h+arg_0]
mov	edx, [esp+14h+arg_4]
push	0
push	0
push	0
mov	[esp+20h+var_14], ecx
push	0
mov	[esp+24h+var_10], edx
mov	edx, [esp+24h+arg_C]
push	edx
lea	ecx, [esp+28h+var_14]
mov	[esp+28h+var_8], ecx
mov	ecx, [esp+28h+arg_8]
push	ecx
lea	edx, [esp+2Ch+var_C]
push	edx
push	362h
push	eax
mov	[esp+38h+var_4], 8
call	PK11_DeriveWithTemplate
add	esp, 24h
add	esp, 14h
retn
align 10h
sub	esp, 0Ch
test	eax, eax
jz	short loc_100349C2
test	ecx, ecx
jz	short loc_100349C2
push	0
push	0
add	ecx, 4
push	0
mov	[esp+18h+var_8], ecx
mov	ecx, [esp+18h+arg_4]
push	ecx
mov	ecx, [esp+1Ch+arg_0]
push	edx
push	ecx
lea	edx, [esp+24h+var_C]
push	edx
push	360h
push	eax
mov	[esp+30h+var_4], 4
call	PK11_DeriveWithTemplate
add	esp, 24h
add	esp, 0Ch
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 0Ch
retn
align 10h
sub	esp, 38h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+38h+var_4], eax
mov	eax, [esp+38h+arg_0]
push	ebp
mov	ebp, [esp+3Ch+arg_C]
push	edi
mov	edi, [esp+40h+arg_8]
mov	[esp+40h+var_20], eax
mov	[esp+40h+var_2C], edi
mov	[esp+40h+var_28], edx
mov	[esp+40h+var_18], ecx
mov	[esp+40h+var_34], 0
test	eax, eax
jnz	short loc_10034A38
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	ebp
mov	ecx, [esp+38h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
mov	eax, [esp+40h+arg_4]
add	eax, 0FFFFFFFEh
push	ebx
push	esi
cmp	eax, 6		
ja	loc_10034CB3	
jmp	ds:off_10034CD8[eax*4] 
			
mov	esi, 392h	
mov	ebx, 14h
mov	[esp+48h+var_38], esi
jmp	short loc_10034A9F
			
mov	ebx, 1Ch	
mov	[esp+48h+var_38], 396h
jmp	short loc_10034A9B
			
mov	ebx, 20h	
mov	[esp+48h+var_38], 393h
jmp	short loc_10034A9B
			
mov	ebx, 30h	
mov	[esp+48h+var_38], 394h
jmp	short loc_10034A9B
			
mov	ebx, 40h	
mov	[esp+48h+var_38], 395h
			
mov	esi, [esp+48h+var_38]
test	ecx, ecx
jnz	short loc_10034ABB
push	ecx
push	edx
call	PK11_GetKeyType
push	eax
call	sub_10031420
mov	ecx, eax
add	esp, 0Ch
test	ecx, ecx
jnz	short loc_10034ABB
mov	ecx, ebx
			
mov	eax, ebx
imul	eax, 0FEh
cmp	ecx, eax
ja	loc_10034CB3	
xor	edx, edx
mov	eax, ecx
div	ebx
mov	edx, eax
imul	edx, ebx
mov	[esp+48h+var_30], eax
cmp	ecx, edx
jbe	short loc_10034AE3
inc	eax
mov	[esp+48h+var_30], eax
test	edi, edi
jz	short loc_10034AF2
cmp	dword ptr [edi+4], 0
jz	short loc_10034AF2
mov	edi, [edi+8]
jmp	short loc_10034AF4
			
xor	edi, edi
lea	eax, [edi+4]
push	eax
mov	[esp+4Ch+var_24], eax
call	PORT_Alloc_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_10034B14
push	0FFFFE013h
jmp	loc_10034CB8
mov	dword ptr [ebx], 1000000h
test	edi, edi
jz	short loc_10034B33
mov	eax, [esp+48h+var_2C]
mov	ecx, [eax+4]
push	edi		
push	ecx		
lea	edx, [ebx+4]
push	edx		
call	memcpy
add	esp, 0Ch
mov	edx, [esp+48h+var_20]
mov	eax, [esp+48h+var_28]
push	ebp
push	4
lea	ecx, [esp+50h+var_14]
push	ecx
push	edx
mov	[esp+58h+var_14], 362h
mov	[esp+58h+var_10], esi
mov	[esp+58h+var_C], 360h
mov	[esp+58h+var_8], eax
call	sub_10032220
mov	edi, eax
add	esp, 10h
mov	[esp+48h+var_2C], edi
test	edi, edi
jz	short loc_10034B72
mov	[esp+48h+var_20], edi
mov	eax, 1
mov	[esp+48h+var_1C], eax
cmp	[esp+48h+var_30], eax
jnb	short loc_10034BB7
mov	eax, [esp+48h+var_24]
push	eax
push	ebx
call	PORT_ZFree_Util
add	esp, 8
test	edi, edi
jz	short loc_10034B9C
push	edi
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esp+48h+var_34]
pop	esi
pop	ebx
pop	edi
pop	ebp
mov	ecx, [esp+38h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
mov	esi, [esp+48h+var_38]
mov	eax, [esp+48h+var_24]
push	ebp
push	esi
push	eax
mov	eax, [esp+54h+var_20]
push	ebx
call	sub_10034910
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	loc_10034C84
cmp	[esp+48h+var_30], 1
push	0
push	0
push	0
jnz	short loc_10034BEF
mov	ecx, [esp+54h+var_18]
mov	edx, [esp+54h+var_28]
push	ecx
push	ebp
push	edx
jmp	short loc_10034BF7
push	0
push	ebp
push	360h
push	0
push	esi
push	edi
call	PK11_DeriveWithTemplate
add	esp, 24h
push	edi
mov	esi, eax
call	PK11_FreeSymKey
add	esp, 4
test	esi, esi
jz	short loc_10034C84
mov	eax, [esp+48h+var_34]
mov	edi, eax
test	eax, eax
jnz	short loc_10034C22
mov	[esp+48h+var_34], esi
jmp	short loc_10034C65
mov	ecx, [esp+48h+var_30]
cmp	[esp+48h+var_1C], ecx
jnz	short loc_10034C38
mov	edx, [esp+48h+var_18]
mov	ecx, [esp+48h+var_28]
push	edx
push	ecx
jmp	short loc_10034C3F
push	0
push	360h
mov	edx, ebp
mov	ecx, esi
call	sub_10034980
add	esp, 8
push	esi
mov	[esp+4Ch+var_34], eax
call	PK11_FreeSymKey
push	edi
call	PK11_FreeSymKey
add	esp, 8
cmp	[esp+48h+var_34], 0
jz	short loc_10034C84
mov	eax, [esp+48h+var_1C]
inc	byte ptr [ebx+3]
inc	eax
mov	[esp+48h+var_1C], eax
cmp	eax, [esp+48h+var_30]
jbe	loc_10034BB3
mov	edi, [esp+48h+var_2C]
jmp	loc_10034B81
			
mov	edx, [esp+48h+var_24]
push	edx
push	ebx
call	PORT_ZFree_Util
mov	eax, [esp+50h+var_2C]
add	esp, 8
test	eax, eax
jz	short loc_10034CA3
push	eax
call	PK11_FreeSymKey
add	esp, 4
mov	eax, [esp+48h+var_34]
test	eax, eax
jz	short loc_10034CC0
push	eax
call	PK11_FreeSymKey
jmp	short loc_10034CBD
			
push	0FFFFE005h	
call	PORT_SetError_Util
add	esp, 4
mov	ecx, [esp+48h+var_4]
pop	esi
pop	ebx
pop	edi
pop	ebp
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 38h
retn
align 4
dd offset loc_10034CB3	
dd offset loc_10034CB3
dd offset loc_10034A61
dd offset loc_10034A70
dd offset loc_10034A7F
dd offset loc_10034A8E
align 10h
sub	esp, 78h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+78h+var_4], eax
mov	eax, [esp+78h+arg_0]
push	ebx
push	ebp
mov	ebp, [eax+8]
mov	[esp+80h+var_54], edx
mov	edx, [esp+80h+arg_8]
push	esi
mov	esi, [esp+84h+arg_14]
mov	[esp+84h+var_50], edx
mov	edx, [esp+84h+arg_10]
xor	ebx, ebx
cmp	dword ptr [ecx+4], 6
push	edi
mov	edi, [esp+88h+arg_C]
mov	[esp+88h+var_64], eax
mov	[esp+88h+var_70], ecx
mov	[esp+88h+var_60], edx
mov	[esp+88h+var_4C], esi
mov	[esp+88h+var_71], 1
mov	[esp+88h+var_38], 4
mov	[esp+88h+var_58], 10h
mov	[esp+88h+var_78], ebx
jz	short loc_10034D90
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
cmp	edx, 1
jz	short loc_10034DD0
cmp	edx, 2
jz	short loc_10034DD0
cmp	edx, 5
jz	short loc_10034DD0
cmp	edx, 6
jz	short loc_10034DD0
cmp	edx, 7
jz	short loc_10034DD0
cmp	edx, 8
jz	short loc_10034DD0
			
			
push	0FFFFE006h	
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
			
mov	eax, [ebp+4Ch]
push	eax
xor	esi, esi
call	ds:PR_Lock
mov	eax, [ebp+50h]
add	esp, 4
cmp	eax, ebx
jz	short loc_10034DF0
mov	esi, eax
mov	ecx, [esi+10h]
mov	[ebp+50h], ecx
jmp	short loc_10034DFF
mov	eax, [ebp+54h]
cmp	eax, ebx
jz	short loc_10034E02
mov	esi, eax
mov	edx, [esi+10h]
mov	[ebp+54h], edx
dec	dword ptr [ebp+58h]
mov	eax, [ebp+4Ch]
push	eax
call	ds:PR_Unlock
add	esp, 4
cmp	esi, ebx
jz	short loc_10034E47
mov	cx, [esi+3Ch]
mov	[esi+10h], ebx
cmp	cx, [ebp+80h]
jnz	short loc_10034E28
cmp	[esi+24h], ebx
jnz	short loc_10034E9E
lea	edx, [esi+28h]
push	edx
push	ebp
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jnz	short loc_10034E9E
push	esi
call	PK11_FreeSymKey
jmp	loc_10034D78
push	48h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jz	loc_10034D7B
lea	eax, [esi+28h]
push	eax
push	ebp
mov	[esi+10h], ebx
call	sub_1002A6A0
add	esp, 8
mov	[esi+24h], eax
cmp	eax, ebx
jz	short loc_10034E3C
cmp	eax, ebx
jnz	short loc_10034E9E
push	esi
call	PK11_FreeSymKey
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
			
mov	ecx, [esp+88h+var_54]
mov	eax, 1
mov	[esi], ecx
mov	ecx, [esp+88h+arg_18]
mov	[esi+18h], ebx
mov	[esi+1Ch], ebx
mov	[esi+20h], ebx
mov	[esi+14h], eax
mov	[esi+4], ebx
mov	[esi+8], ebp
mov	dx, [ebp+80h]
push	ebp
mov	[esi+3Ch], dx
mov	[esi+0Ch], ecx
mov	[esi+30h], ebx
mov	[esi+2Ch], eax
mov	[esi+34h], ebx
mov	[esi+38h], ebx
mov	[esi+44h], ebx
mov	[esi+40h], ebx
call	PK11_ReferenceSlot
mov	ecx, 1
mov	[esi+34h], ecx
lea	edx, [esp+8Ch+var_38]
mov	[esp+8Ch+var_30], edx
lea	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_24], edx
mov	edx, [esp+8Ch+var_50]
mov	[esp+8Ch+var_1C], edx
lea	edx, [esp+8Ch+var_71]
add	esp, 4
mov	eax, 4
mov	[esp+88h+var_18], edx
mov	edx, [esp+88h+var_54]
mov	[esp+88h+var_14], ecx
lea	ecx, [esp+88h+var_78]
push	edi
push	edx
mov	[esp+90h+var_68], esi
mov	[esp+90h+var_34], ebx
mov	[esp+90h+var_2C], eax
mov	[esp+90h+var_28], 100h
mov	[esp+90h+var_20], eax
mov	[esp+90h+var_10], 161h
mov	[esp+90h+var_C], ecx
mov	[esp+90h+var_8], eax
mov	[esp+90h+var_6C], eax
call	PK11_GetKeyType
mov	ecx, eax
add	esp, 8
mov	eax, edi
mov	[esp+88h+var_58], ecx
mov	[esp+88h+var_78], eax
cmp	edi, ebx
jnz	loc_10034FFE
push	ecx
call	sub_10031420
add	esp, 4
mov	[esp+88h+var_78], eax
cmp	eax, ebx
jz	short loc_10034F92
mov	[esp+88h+var_6C], 3
jmp	short loc_10034FFE
mov	eax, [esp+88h+var_60]
dec	eax
cmp	eax, 7		
ja	loc_10034DAE	
jmp	ds:off_100352E4[eax*4] 
			
mov	ecx, [esp+88h+var_70] 
add	ecx, 20h
call	sub_100317F0
mov	[esp+88h+var_78], eax
cmp	eax, ebx
jnz	short loc_10034FFE
push	esi
call	PK11_FreeSymKey
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
			
mov	eax, 14h	
jmp	short loc_10034FFA
			
mov	eax, 1Ch	
jmp	short loc_10034FFA
			
mov	eax, 20h	
jmp	short loc_10034FFA
			
mov	eax, 30h	
jmp	short loc_10034FFA
			
mov	eax, 40h	
			
mov	[esp+88h+var_78], eax
			
push	14h
mov	[esi+30h], eax
call	PORT_ZAlloc_Util
mov	edi, eax
add	esp, 4
cmp	edi, ebx
jz	short loc_10034FBB
mov	eax, [esp+88h+var_60]
mov	[edi], eax
mov	eax, [esp+88h+var_4C]
cmp	eax, ebx
jnz	short loc_10035027
mov	[edi+4], ebx
mov	[edi+8], ebx
jmp	short loc_10035033
mov	ecx, [eax+8]
mov	[edi+4], ecx
mov	edx, [eax+4]
mov	[edi+8], edx
mov	eax, [esp+88h+var_70]
mov	ecx, [eax+28h]
mov	[edi+0Ch], ecx
mov	edx, [eax+24h]
mov	eax, [esp+88h+arg_4]
mov	[edi+10h], edx
mov	[esp+88h+var_48], eax
mov	[esp+88h+var_44], edi
mov	[esp+88h+var_40], 14h
cmp	[esi+28h], ebx
jz	short loc_10035067
mov	ecx, [esi+8]
cmp	[ecx+30h], ebx
jnz	short loc_10035073
mov	edx, [esi+8]
push	edx
call	sub_10035650
add	esp, 4
mov	edx, [esp+88h+var_6C]
mov	ecx, [ebp+0]
mov	ecx, [ecx+0FAh]
lea	eax, [esi+4]
push	eax
push	edx
mov	edx, [esp+90h+var_64]
lea	eax, [esp+90h+var_34]
push	eax
mov	eax, [edx+0Ch]
push	eax
mov	eax, [esi+24h]
lea	edx, [esp+98h+var_48]
push	edx
push	eax
call	ecx
add	esp, 18h
cmp	dword ptr [esi+28h], 0
mov	ebx, eax
jz	short loc_100350B1
mov	edx, [esi+8]
cmp	dword ptr [edx+30h], 0
jnz	short loc_100350BD
mov	eax, [esi+8]
push	eax
call	sub_10035670
add	esp, 4
test	ebx, ebx
jz	loc_10035299
push	0
push	0
call	NSS_Get_SEC_OctetStringTemplate_Util
push	eax
mov	eax, [esp+94h+var_70]
add	eax, 20h
push	eax
push	0
push	0
call	SEC_ASN1EncodeItem_Util
add	esp, 18h
mov	[esp+88h+var_5C], eax
test	eax, eax
jz	loc_10035299
mov	ecx, [eax+8]
mov	[edi+0Ch], ecx
mov	edx, [eax+4]
mov	eax, esi
mov	[edi+10h], edx
call	sub_10031010
mov	edx, [esp+88h+var_6C]
mov	ecx, [ebp+0]
mov	ecx, [ecx+0FAh]
lea	eax, [esi+4]
push	eax
push	edx
mov	edx, [esp+90h+var_64]
lea	eax, [esp+90h+var_34]
push	eax
mov	eax, [edx+0Ch]
push	eax
mov	eax, [esi+24h]
lea	edx, [esp+98h+var_48]
push	edx
push	eax
call	ecx
mov	ebx, eax
add	esp, 18h
mov	eax, esi
call	sub_10031030
xor	edx, edx
cmp	ebx, edx
jz	loc_1003528A
cmp	[esp+88h+var_60], 1
jz	loc_1003528A
mov	eax, [esp+88h+var_78]
mov	ecx, [esp+88h+var_70]
add	ecx, 20h
mov	[esp+88h+var_3C], eax
mov	[esp+88h+var_58], 10h
call	sub_100317F0
mov	[esp+88h+var_78], eax
cmp	eax, edx
jnz	short loc_1003517D
mov	ecx, [esp+88h+var_5C]
push	1
push	ecx
jmp	loc_10035291
mov	[esi+30h], eax
mov	eax, [esp+88h+var_70]
mov	dword ptr [edi], 1
mov	[edi+4], edx
mov	[edi+8], edx
mov	edx, [eax+28h]
mov	[edi+0Ch], edx
mov	eax, [eax+24h]
mov	[edi+10h], eax
mov	eax, esi
call	sub_10031010
mov	edx, [esp+88h+var_6C]
mov	ecx, [ebp+0]
mov	ecx, [ecx+0FAh]
lea	eax, [esi+4]
push	eax
push	edx
mov	edx, [esp+90h+var_64]
lea	eax, [esp+90h+var_34]
push	eax
mov	eax, [edx+0Ch]
push	eax
mov	eax, [esi+24h]
lea	edx, [esp+98h+var_48]
push	edx
push	eax
call	ecx
mov	ebx, eax
add	esp, 18h
mov	eax, esi
call	sub_10031030
test	ebx, ebx
jz	short loc_1003522E
mov	eax, [esp+88h+var_5C]
mov	edx, [eax+8]
mov	[edi+0Ch], edx
mov	eax, [eax+4]
mov	[edi+10h], eax
mov	eax, esi
call	sub_10031010
mov	edx, [esp+88h+var_6C]
mov	ecx, [ebp+0]
mov	ecx, [ecx+0FAh]
lea	eax, [esi+4]
push	eax
push	edx
mov	edx, [esp+90h+var_64]
lea	eax, [esp+90h+var_34]
push	eax
mov	eax, [edx+0Ch]
push	eax
mov	eax, [esi+24h]
lea	edx, [esp+98h+var_48]
push	edx
push	eax
call	ecx
mov	ebx, eax
add	esp, 18h
mov	eax, esi
call	sub_10031030
test	ebx, ebx
jnz	short loc_1003528A
mov	edx, [esp+88h+var_50]
mov	eax, [esp+88h+var_4C]
mov	ecx, [esp+88h+var_60]
push	edx
mov	edx, [esp+8Ch+var_54]
push	eax
push	ecx
mov	ecx, [esp+94h+var_3C]
push	esi
call	sub_100349E0
mov	ebp, eax
push	esi
mov	[esp+9Ch+var_68], ebp
call	PK11_FreeSymKey
add	esp, 14h
test	ebp, ebp
jnz	short loc_1003528A
mov	edx, [esp+88h+var_5C]
push	1
push	edx
call	SECITEM_FreeItem_Util
push	14h
push	edi
call	PORT_ZFree_Util
add	esp, 10h
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+78h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
			
mov	eax, [esp+88h+var_5C]
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
			
push	14h
push	edi
call	PORT_ZFree_Util
add	esp, 8
test	ebx, ebx
jz	short loc_100352C9
mov	ecx, [esp+88h+var_68]
push	ecx
call	PK11_FreeSymKey
push	ebx
mov	[esp+90h+var_68], 0
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 0Ch
mov	ecx, [esp+88h+var_4]
mov	eax, [esp+88h+var_68]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
align 4
dd offset loc_10034FD9	
dd offset loc_10034DAE
dd offset loc_10034DAE
dd offset loc_10034FE0
dd offset loc_10034FE7
dd offset loc_10034FEE
dd offset loc_10034FF5
align 10h
public PK11_PubDeriveWithKDF
mov	ecx, [esp+arg_0]
mov	eax, [ecx+4]
test	eax, eax
js	short loc_1003538C
cmp	eax, 5
jle	short loc_10035355
cmp	eax, 6
jnz	short loc_1003538C
mov	eax, [esp+arg_2C]
mov	edx, [esp+arg_28]
push	eax
mov	eax, [esp+4+arg_24]
push	edx
mov	edx, [esp+8+arg_20]
push	eax
mov	eax, [esp+0Ch+arg_1C]
push	edx
mov	edx, [esp+10h+arg_14]
push	eax
push	edx
mov	edx, [esp+18h+arg_18]
push	ecx
mov	ecx, [esp+1Ch+arg_4]
call	sub_10034D00
add	esp, 1Ch
retn
mov	eax, [esp+arg_2C]
mov	edx, [esp+arg_20]
push	eax
mov	eax, [esp+4+arg_1C]
push	edx
mov	edx, [esp+8+arg_18]
push	eax
mov	eax, [esp+0Ch+arg_14]
push	edx
mov	edx, [esp+10h+arg_10]
push	eax
mov	eax, [esp+14h+arg_C]
push	edx
mov	edx, [esp+18h+arg_8]
push	eax
mov	eax, [esp+1Ch+arg_4]
push	edx
push	eax
push	ecx
call	PK11_PubDerive
add	esp, 28h
retn
			
push	0FFFFE00Eh
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
align 10h
public PK11_GetDefaultArray
mov	eax, [esp+arg_0]
test	eax, eax
jz	short loc_100353AE
mov	dword ptr [eax], 15h
mov	eax, offset off_100A6518
retn
align 10h
push	esi
push	0Ch
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_100353F4
mov	dword ptr [esi], 0
mov	dword ptr [esi+4], 0
call	ds:PR_NewLock
mov	[esi+8], eax
test	eax, eax
jnz	short loc_100353F8
push	esi
call	PORT_Free_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
mov	eax, esi
pop	esi
retn
align 10h
public PK11_GetFirstSafe
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+8]
push	eax
call	ds:PR_Lock
mov	esi, [edi]
add	esp, 4
test	esi, esi
jz	short loc_1003541C
inc	dword ptr [esi+0Ch]
mov	ecx, [edi+8]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
			
push	ebx
push	esi
push	240h
call	PORT_Alloc_Util
mov	esi, eax
xor	ebx, ebx
add	esp, 4
cmp	esi, ebx
jnz	short loc_1003544C
pop	esi
xor	eax, eax
pop	ebx
retn
push	ebp
mov	ebp, [esp+0Ch+arg_0]
push	edi
mov	edi, ds:PR_NewLock
cmp	[ebp+3Ch], ebx
jz	short loc_10035461
call	edi 
jmp	short loc_10035464
mov	eax, [ebp+20h]
mov	[esi+3Ch], eax
cmp	eax, ebx
jz	short loc_10035486
call	edi 
mov	[esi+4Ch], eax
cmp	eax, ebx
jnz	short loc_10035496
cmp	[ebp+3Ch], ebx
jz	short loc_10035486
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_DestroyLock
add	esp, 4
			
push	esi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
retn
mov	eax, 1
mov	[esi+8], eax
mov	[esi+20h], eax
mov	[esi+48h], eax
mov	[esi+50h], ebx
mov	[esi+54h], ebx
mov	[esi+58h], ebx
mov	[esi+5Ch], ebx
mov	[esi], ebx
mov	[esi+0Ch], ebx
mov	[esi+10h], ebx
mov	[esi+14h], ebx
mov	[esi+30h], ebx
mov	[esi+18h], ebx
mov	[esi+90h], ebx
mov	[esi+1Ch], ebx
mov	[esi+24h], ebx
mov	[esi+28h], ebx
mov	[esi+2Ch], ebx
mov	[esi+12Ch], ebx
mov	[esi+34h], ebx
mov	[esi+38h], ebx
mov	[esi+40h], ebx
mov	[esi+44h], ebx
mov	[esi+60h], ebx
mov	[esi+64h], ebx
mov	[esi+94h], ebx
mov	[esi+98h], ebx
mov	[esi+9Ch], ebx
mov	[esi+0A4h], ebx
mov	[esi+0B8h], bl
mov	[esi+0F9h], bl
mov	ecx, eax
mov	eax, 20202020h
mov	[esi+80h], cx
mov	dword ptr [esi+8Ch], 0FFFFFFFFh
xor	edx, edx
mov	[esi+88h], dx
mov	[esi+0A8h], eax
mov	[esi+0ACh], eax
mov	[esi+0B0h], eax
mov	[esi+0B4h], eax
pop	edi
pop	ebp
mov	[esi+4], ebx
mov	[esi+68h], ebx
mov	[esi+70h], ebx
mov	[esi+74h], ebx
mov	[esi+78h], ebx
mov	[esi+7Ch], ebx
mov	[esi+11Ch], ebx
mov	[esi+13Ch], ebx
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
public PK11_ReferenceSlot
			
push	esi
mov	esi, [esp+4+arg_0]
lea	eax, [esi+48h]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
push	esi
call	sub_10031050
mov	eax, [esi]
add	esp, 4
test	eax, eax
jz	short loc_100355B0
mov	ecx, [esi+40h]
mov	edx, [eax+3Ah]
push	ecx
call	edx
add	esp, 4
mov	eax, [esi+94h]
test	eax, eax
jz	short loc_100355C3
push	eax
call	PORT_Free_Util
add	esp, 4
cmp	dword ptr [esi+30h], 0
push	edi
mov	edi, ds:PR_DestroyLock
jz	short loc_100355DD
mov	eax, [esi+3Ch]
test	eax, eax
jz	short loc_100355DD
push	eax
call	edi 
add	esp, 4
			
mov	eax, [esi+4Ch]
mov	dword ptr [esi+3Ch], 0
test	eax, eax
jz	short loc_100355F8
push	eax
call	edi 
add	esp, 4
mov	dword ptr [esi+4Ch], 0
mov	eax, [esi+4]
pop	edi
test	eax, eax
jz	short loc_1003560B
push	1
push	eax
call	sub_10038900
add	esp, 8
push	esi
call	PORT_Free_Util
add	esp, 4
pop	esi
retn
align 10h
public PK11_FreeSlot
			
push	esi
mov	esi, [esp+4+arg_0]
lea	eax, [esi+48h]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_1003563F
push	esi
call	sub_10035590
add	esp, 4
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+3Ch]
mov	[esp+arg_0], ecx
jmp	ds:PR_Lock
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+3Ch]
mov	[esp+arg_0], ecx
jmp	ds:PR_Unlock
align 10h
			
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
xor	ebx, ebx
cmp	[esi+30h], ebx
jz	short loc_100356A2
cmp	[esi+2Ch], ebx
jz	short loc_100356B4
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	ebx, 1
cmp	dword ptr [esi+2Ch], 0
jz	short loc_100356C1
mov	eax, [esi+38h]
test	eax, eax
jnz	short loc_1003571F
mov	ecx, [esi]
mov	eax, [esi+40h]
mov	ecx, [ecx+32h]
push	edi
lea	edx, [esp+0Ch+arg_0]
push	edx
push	offset __PBE_GenerateBits
push	esi
push	6
push	eax
call	ecx
mov	edi, eax
add	esp, 14h
test	edi, edi
jnz	short loc_100356FC
mov	eax, [esp+0Ch+arg_0]
test	eax, eax
jz	short loc_100356F7
cmp	[esi+2Ch], edi
jz	short loc_1003571E
pop	edi
mov	[esi+38h], eax
pop	esi
pop	ebx
retn
mov	edi, 30h
test	ebx, ebx
jz	short loc_1003570D
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
xor	eax, eax
pop	edi
pop	esi
pop	ebx
retn
align 10h
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+30h], 0
jz	short loc_10035749
cmp	dword ptr [eax+2Ch], 0
jz	short loc_10035746
cmp	dword ptr [eax+38h], 0
jnz	short loc_10035749
xor	eax, eax
retn
			
mov	eax, 1
retn
align 10h
			
mov	ecx, [esp+arg_4]
test	ecx, ecx
jz	short locret_100357A8
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+30h], 0
push	edi
jz	short loc_10035774
cmp	dword ptr [esi+2Ch], 0
jz	short loc_10035770
cmp	dword ptr [esi+38h], 0
jnz	short loc_10035774
xor	edi, edi
jmp	short loc_10035779
			
mov	edi, 1
mov	eax, [esi+38h]
cmp	eax, ecx
jnz	short loc_1003578A
cmp	dword ptr [esi+2Ch], 0
jz	short loc_1003578A
test	eax, eax
jnz	short loc_10035795
			
mov	eax, [esi]
push	ecx
mov	ecx, [eax+36h]
call	ecx
add	esp, 4
test	edi, edi
jz	short loc_100357A6
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
retn
align 10h
push	esi
mov	esi, ds:PR_NewLock
push	edi
call	esi 
xor	edi, edi
mov	dword_100BADD0,	eax
mov	dword_100BADC8,	edi
call	esi 
mov	dword_100BADC4,	eax
mov	dword_100BADBC,	edi
call	esi 
mov	dword_100BAD70,	eax
mov	dword_100BAD68,	edi
call	esi 
mov	dword_100BADDC,	eax
mov	dword_100BADD4,	edi
call	esi 
mov	dword_100BAD64,	eax
mov	dword_100BAD5C,	edi
call	esi 
mov	dword_100BAD34,	eax
mov	dword_100BAD2C,	edi
call	esi 
mov	dword_100BAD58,	eax
mov	dword_100BAD50,	edi
call	esi 
mov	dword_100BAD1C,	eax
mov	dword_100BAD14,	edi
call	esi 
mov	dword_100BADB8,	eax
mov	dword_100BADB0,	edi
call	esi 
mov	dword_100BAD88,	eax
mov	dword_100BAD80,	edi
call	esi 
mov	dword_100BAD04,	eax
mov	dword_100BACFC,	edi
call	esi 
mov	dword_100BAD94,	eax
mov	dword_100BAD8C,	edi
call	esi 
mov	dword_100BAD7C,	eax
mov	dword_100BAD74,	edi
call	esi 
mov	dword_100BACF8,	eax
mov	dword_100BACF0,	edi
call	esi 
mov	dword_100BADAC,	eax
mov	dword_100BADA4,	edi
call	esi 
mov	dword_100BADA0,	eax
mov	dword_100BAD98,	edi
call	esi 
mov	dword_100BAD4C,	eax
mov	dword_100BAD44,	edi
call	esi 
mov	dword_100BAD28,	eax
mov	dword_100BAD20,	edi
call	esi 
mov	dword_100BAD40,	eax
mov	dword_100BAD38,	edi
call	esi 
mov	dword_100BAD08,	edi
pop	edi
mov	dword_100BAD10,	eax
xor	eax, eax
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
cmp	eax, 270h
ja	loc_1003598E
jz	loc_10035988	
cmp	eax, 133h
ja	short loc_10035954
cmp	eax, 132h
jnb	short loc_1003594E 
cmp	eax, 21h
ja	short loc_10035926
cmp	eax, 20h
jnb	short loc_10035920
cmp	eax, 11h	
ja	loc_10035A44	
movzx	eax, ds:byte_10035A60[eax]
jmp	ds:off_10035A54[eax*4] 
			
mov	eax, offset dword_100BACFC 
retn
			
mov	eax, offset dword_100BAD8C 
retn
mov	eax, offset dword_100BAD74
retn
add	eax, 0FFFFFEFFh	
cmp	eax, 21h
ja	loc_10035A44	
movzx	ecx, ds:byte_10035A84[eax]
jmp	ds:off_10035A74[ecx*4] 
			
mov	eax, offset dword_100BAD5C 
retn
			
mov	eax, offset dword_100BAD2C 
retn
			
			
mov	eax, offset dword_100BADD4 
retn
add	eax, 0FFFFFE00h	
cmp	eax, 60h
ja	loc_10035A44	
movzx	edx, ds:byte_10035AC0[eax]
jmp	ds:off_10035AA8[edx*4] 
			
mov	eax, offset dword_100BAD80 
retn
			
mov	eax, offset dword_100BAD38 
retn
			
mov	eax, offset dword_100BAD14 
retn
			
mov	eax, offset dword_100BADB0 
retn
			
			
mov	eax, offset dword_100BAD08 
retn
cmp	eax, 652h
ja	short loc_10035A04
cmp	eax, 651h
jnb	short loc_100359FE
cmp	eax, 376h
ja	short loc_100359D6
cmp	eax, 375h
jnb	loc_10035A47
add	eax, 0FFFFFCCEh	
cmp	eax, 3Fh
ja	loc_10035A44	
movzx	eax, ds:byte_10035B34[eax]
jmp	ds:off_10035B24[eax*4] 
			
mov	eax, offset dword_100BAD50 
retn
			
mov	eax, offset dword_100BADA4 
retn
cmp	eax, 552h
ja	short loc_10035A44 
cmp	eax, 551h
jnb	short loc_100359F8
cmp	eax, 380h
jb	short loc_10035A44 
cmp	eax, 381h
ja	short loc_10035A44 
			
mov	eax, offset dword_100BAD98 
retn
mov	eax, offset dword_100BADBC
retn
mov	eax, offset dword_100BADC8
retn
cmp	eax, 1089h
ja	short loc_10035A36
cmp	eax, 1086h
jnb	short loc_10035A30 
add	eax, 0FFFFEFC0h	
cmp	eax, 42h
ja	short loc_10035A44 
movzx	ecx, ds:byte_10035B80[eax]
jmp	ds:off_10035B74[ecx*4] 
			
mov	eax, offset dword_100BACF0 
retn
			
			
mov	eax, offset dword_100BAD68 
retn
cmp	eax, 80000EFEh
jz	short loc_10035A4D
cmp	eax, 0CE534367h
jz	short loc_10035A47
			
xor	eax, eax	
retn
			
mov	eax, offset dword_100BAD44
retn
mov	eax, offset dword_100BAD20
retn
align 4
dd offset loc_1003591A	
dd offset loc_10035A44
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     1
align 4
dd offset loc_10035942	
dd offset loc_1003594E
dd offset loc_10035A44
db	3,     3,     3,     3 
db	3,     3,     3,     3
db	3,     3,     3,     3
db	1,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	2,     2
align 4
			
dd offset loc_10035976,	offset loc_10035988, offset loc_10035A44 
db	5,     5,     5,     5 
db	5,     5,     5,     5
db	5,     5,     5,     5
db	1,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	2,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	3,     5,     5,     5
db	5,     3,     5,     5
db	5,     5,     5,     5
db	5,     5,     5,     5
db	4
align 4
			
dd offset loc_10035A44	
db	3,     3,     3,     3 
db	3,     3,     3,     3
db	3,     3,     3,     1
db	1,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     3,     3
db	3,     3,     2,     2
			
			
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	2,     2,     2,     2
db	0,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     2,     2,     2
db	2,     1,     1
align 10h
push	ebx
mov	ebx, [esp+4+Src]
push	esi
mov	esi, [esp+8+arg_C]
dec	esi
push	edi
js	short loc_10035BE9
mov	edi, edi
cmp	byte ptr [esi+ebx], 20h
jnz	short loc_10035BE9
dec	esi
jns	short loc_10035BE0
			
mov	eax, [esp+0Ch+arg_0]
inc	esi
test	eax, eax
jz	short loc_10035C01
lea	ecx, [esi+1]
push	ecx
push	eax
call	PORT_ArenaAlloc_Util
add	esp, 8
jmp	short loc_10035C15
mov	edi, [esp+0Ch+Dst]
test	edi, edi
jnz	short loc_10035C1F
lea	edx, [esi+1]
push	edx
call	PORT_Alloc_Util
add	esp, 4
mov	edi, eax
test	edi, edi
jnz	short loc_10035C1F
pop	edi
pop	esi
pop	ebx
retn
			
test	esi, esi
jz	short loc_10035C2E
push	esi		
push	ebx		
push	edi		
call	memcpy
add	esp, 0Ch
mov	byte ptr [edi+esi], 0
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
mov	eax, [esi+94h]
push	edi
xor	edi, edi
cmp	eax, edi
jz	short loc_10035C62
push	eax
call	PORT_Free_Util
add	esp, 4
mov	[esi+94h], edi
mov	[esi+98h], edi
cmp	[esi+30h], edi
jnz	short loc_10035C7A
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	ecx, [esi]
mov	eax, [esi+40h]
mov	ecx, [ecx+1Eh]
lea	edx, [esp+0Ch+arg_0]
push	edx
push	edi
push	eax
call	ecx
mov	ebx, eax
add	esp, 0Ch
cmp	ebx, edi
jz	short loc_10035CBC
cmp	[esi+30h], edi
jnz	short loc_10035CA6
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
push	ebx
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	eax, [esp+0Ch+arg_0]
lea	ecx, ds:0[eax*4]
push	ecx
call	PORT_Alloc_Util
add	esp, 4
mov	[esi+94h], eax
cmp	eax, edi
jnz	short loc_10035CF3
cmp	[esi+30h], edi
jnz	short loc_10035CEC
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	ecx, [esi]
mov	ecx, [ecx+1Eh]
lea	edx, [esp+0Ch+arg_0]
push	edx
push	eax
mov	eax, [esi+40h]
push	eax
call	ecx
add	esp, 0Ch
mov	ebx, eax
cmp	[esi+30h], edi
jnz	short loc_10035D1B
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
cmp	ebx, edi
jz	short loc_10035D46
mov	eax, [esi+94h]
push	eax
call	PORT_Free_Util
push	ebx
mov	[esi+94h], edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 0Ch
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
push	ebp
mov	ebp, [esp+10h+arg_0]
push	100h		
lea	ecx, [esi+140h]
push	edi		
push	ecx		
mov	[esi+98h], ebp
call	memset
add	esp, 0Ch
cmp	ebp, edi
jbe	short loc_10035D9D
lea	ebx, [ebx+0]
mov	edx, [esi+94h]
mov	ecx, [edx+edi*4]
cmp	ecx, 7FFh
jnb	short loc_10035D98
mov	eax, ecx
shr	ecx, 8
mov	dl, 1
and	eax, 0FFh
shl	dl, cl
lea	eax, [eax+esi+140h]
or	[eax], dl
inc	edi
cmp	edi, ebp
jb	short loc_10035D70
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
align 10h
public PK11_TokenRefresh
sub	esp, 0A4h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0A4h+var_4], eax
push	esi
mov	esi, [esp+0A8h+arg_0]
cmp	dword ptr [esi+30h], 0
push	edi
jnz	short loc_10035DE0
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	ecx, [esi]
mov	eax, [esi+40h]
mov	ecx, [ecx+1Ah]
lea	edx, [esp+0ACh+var_A4]
push	edx
push	eax
call	ecx
add	esp, 8
cmp	dword ptr [esi+30h], 0
mov	edi, eax
jnz	short loc_10035E08
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	short loc_10035E35
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
mov	ecx, [esp+0A4h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0A4h
retn
mov	eax, [esp+0ACh+var_44]
mov	ecx, eax
shr	ecx, 2
and	ecx, 1
mov	edx, eax
mov	[esi+24h], ecx
mov	ecx, eax
mov	[esi+34h], eax
shr	edx, 1
shr	eax, 8
and	edx, 1
and	ecx, 1
and	eax, 1
cmp	dword ptr [esi+130h], 0
mov	[esi+20h], edx
mov	[esi+28h], ecx
mov	[esi+12Ch], eax
jz	short loc_10035E78
mov	dword ptr [esi+12Ch], 0
mov	ecx, [esp+0ACh+var_4]
pop	edi
pop	esi
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 0A4h
retn
align 10h
sub	esp, 10h
push	1
lea	ecx, [esp+14h+var_C]
push	ecx
lea	eax, [esp+18h+var_10]
push	edx
mov	[esp+1Ch+var_10], 0CE534354h
mov	[esp+1Ch+var_C], 0
mov	[esp+1Ch+var_8], eax
mov	[esp+1Ch+var_4], 4
call	sub_1002C4F0
neg	eax
sbb	eax, eax
neg	eax
add	esp, 1Ch
retn
align 10h
public PK11_IsDisabled
			
			
mov	eax, [esp+arg_0]
mov	eax, [eax+18h]
retn
align 10h
public PK11_GetDisabledReason
mov	eax, [esp+arg_0]
mov	eax, [eax+1Ch]
retn
align 10h
public PK11_UserDisableSlot
			
mov	ecx, [esp+arg_0]
cmp	dword ptr [ecx+14h], 0
jz	short loc_10035F1A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
or	dword ptr [ecx+44h], 40000000h
mov	eax, 1
mov	[ecx+18h], eax
mov	[ecx+1Ch], eax
retn
align 10h
public PK11_UserEnableSlot
mov	eax, [esp+arg_0]
and	dword ptr [eax+44h], 0BFFFFFFFh
xor	ecx, ecx
mov	[eax+18h], ecx
mov	[eax+1Ch], ecx
lea	eax, [ecx+1]
retn
align 10h
public PK11_HasRootCerts
mov	eax, [esp+arg_0]
mov	eax, [eax+11Ch]
retn
align 10h
public PK11_GetDefaultFlags
mov	eax, [esp+arg_0]
mov	eax, [eax+44h]
retn
align 10h
public PK11_IsHW
			
mov	eax, [esp+arg_0]
mov	eax, [eax+10h]
retn
align 10h
public PK11_IsRemovable
mov	ecx, [esp+arg_0]
xor	eax, eax
cmp	[ecx+0Ch], eax
setz	al
retn
align 10h
public PK11_IsInternal
			
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
retn
align 10h
public PK11_IsFriendly
			
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+14h], 0
jnz	short loc_10035FB6
test	dword ptr [eax+44h], 10000000h
jnz	short loc_10035FB6
xor	eax, eax
retn
			
mov	eax, 1
retn
align 10h
public PK11_GetTokenName
			
			
mov	eax, [esp+arg_0]
add	eax, 0F9h
retn
align 10h
public PK11_GetSlotName
			
mov	eax, [esp+arg_0]
add	eax, 0B8h
retn
align 10h
public PK11_GetSlotSeries
			
			
mov	eax, [esp+arg_0]
movzx	eax, word ptr [eax+80h]
retn
align 10h
public PK11_GetCurrentWrapIndex
mov	eax, [esp+arg_0]
movzx	eax, word ptr [eax+88h]
retn
align 10h
public PK11_GetModuleID
mov	eax, [esp+arg_0]
mov	ecx, [eax+4]
mov	eax, [ecx+38h]
retn
align 10h
public PK11_GetSlotInfo
push	ebx
mov	ebx, [esp+4+arg_0]
cmp	dword ptr [ebx+30h], 0
push	ebp
jnz	short loc_10036029
mov	eax, [ebx+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
push	esi
push	edi
mov	edi, [esp+10h+Dst]
push	40h		
push	20h		
push	edi		
call	memset
mov	eax, 20202020h
mov	[edi+40h], eax
lea	esi, [edi+40h]
mov	[esi+4], eax
mov	[esi+8], eax
mov	[esi+0Ch], eax
mov	[esi+10h], eax
mov	[esi+14h], eax
mov	[esi+18h], eax
mov	[esi+1Ch], eax
mov	ecx, [ebx]
mov	edx, [ebx+40h]
mov	eax, [ecx+16h]
push	edi
push	edx
call	eax
add	esp, 14h
mov	ebp, eax
mov	eax, edi
cmp	edi, esi
jnb	short loc_10036090
cmp	byte ptr [eax],	0
jz	short loc_1003607C
inc	eax
cmp	eax, esi
jb	short loc_10036070
jmp	short loc_10036090
cmp	eax, esi
jnb	short loc_10036090
mov	ecx, esi
sub	ecx, eax
push	ecx		
push	20h		
push	eax		
call	memset
add	esp, 0Ch
			
mov	eax, esi
lea	ecx, [esi+20h]
pop	edi
pop	esi
cmp	eax, ecx
jnb	short loc_100360BE
jmp	short loc_100360A0
align 10h
			
cmp	byte ptr [eax],	0
jz	short loc_100360AC
inc	eax
cmp	eax, ecx
jb	short loc_100360A0
jmp	short loc_100360BE
cmp	eax, ecx
jnb	short loc_100360BE
sub	ecx, eax
push	ecx		
push	20h		
push	eax		
call	memset
add	esp, 0Ch
			
cmp	dword ptr [ebx+30h], 0
jnz	short loc_100360D1
mov	edx, [ebx+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
test	ebp, ebp
jz	short loc_100360EA
push	ebp
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
public PK11_GetTokenInfo
			
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+30h], 0
jnz	short loc_10036107
mov	eax, [eax+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	eax, 20202020h
push	ebx
push	ebp
push	esi
mov	esi, [esp+0Ch+Dst]
mov	[esi], eax
mov	[esi+4], eax
mov	[esi+8], eax
mov	[esi+0Ch], eax
mov	[esi+10h], eax
mov	[esi+14h], eax
mov	[esi+18h], eax
mov	[esi+1Ch], eax
mov	[esi+20h], eax
mov	[esi+24h], eax
mov	[esi+28h], eax
mov	[esi+2Ch], eax
mov	[esi+30h], eax
mov	[esi+34h], eax
mov	[esi+38h], eax
push	edi
lea	edi, [esi+20h]
mov	[edi+1Ch], eax
mov	[esi+40h], eax
mov	[esi+44h], eax
mov	[esi+48h], eax
lea	ebx, [esi+40h]
mov	[ebx+0Ch], eax
mov	[esi+50h], eax
lea	ebp, [esi+50h]
mov	[ebp+4], eax
mov	[ebp+8], eax
mov	[ebp+0Ch], eax
mov	eax, [esp+10h+arg_0]
mov	edx, [eax+40h]
mov	ecx, [eax]
mov	eax, [ecx+1Ah]
push	esi
push	edx
call	eax
add	esp, 8
mov	[esp+10h+Dst], eax
cmp	esi, edi
jnb	short loc_100361A0
nop
cmp	byte ptr [esi],	0
jz	short loc_1003618C
inc	esi
cmp	esi, edi
jb	short loc_10036180
jmp	short loc_100361A0
cmp	esi, edi
jnb	short loc_100361A0
mov	ecx, edi
sub	ecx, esi
push	ecx		
push	20h		
push	esi		
call	memset
add	esp, 0Ch
			
mov	eax, edi
add	edi, 20h
cmp	eax, edi
jnb	short loc_100361CE
lea	esp, [esp+0]
cmp	byte ptr [eax],	0
jz	short loc_100361BC
inc	eax
cmp	eax, edi
jb	short loc_100361B0
jmp	short loc_100361CE
cmp	eax, edi
jnb	short loc_100361CE
sub	edi, eax
push	edi		
push	20h		
push	eax		
call	memset
add	esp, 0Ch
			
mov	eax, ebx
add	ebx, 10h
cmp	eax, ebx
jnb	short loc_100361F5
cmp	byte ptr [eax],	0
jz	short loc_100361E3
inc	eax
cmp	eax, ebx
jb	short loc_100361D7
jmp	short loc_100361F5
cmp	eax, ebx
jnb	short loc_100361F5
sub	ebx, eax
push	ebx		
push	20h		
push	eax		
call	memset
add	esp, 0Ch
			
mov	eax, ebp
add	ebp, 10h
cmp	eax, ebp
jnb	short loc_1003621E
mov	edi, edi
cmp	byte ptr [eax],	0
jz	short loc_1003620C
inc	eax
cmp	eax, ebp
jb	short loc_10036200
jmp	short loc_1003621E
cmp	eax, ebp
jnb	short loc_1003621E
sub	ebp, eax
push	ebp		
push	20h		
push	eax		
call	memset
add	esp, 0Ch
			
mov	eax, [esp+10h+arg_0]
cmp	dword ptr [eax+30h], 0
pop	edi
pop	esi
pop	ebp
pop	ebx
jnz	short loc_10036239
mov	edx, [eax+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	eax, [esp+Dst]
test	eax, eax
jz	short loc_10036254
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
public PK11_NeedUserInit
			
sub	esp, 0A4h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0A4h+var_4], eax
push	esi
mov	esi, [esp+0A8h+arg_0]
mov	eax, [esi+34h]
shr	eax, 3
not	eax
test	al, 1
jz	short loc_100362A1
lea	ecx, [esp+0A8h+Dst]
push	ecx		
push	esi		
call	PK11_GetTokenInfo
add	esp, 8
test	eax, eax
jnz	short loc_100362A1
mov	edx, [esp+0A8h+var_44]
mov	[esi+34h], edx
			
mov	eax, [esi+34h]
mov	ecx, [esp+0A8h+var_4]
shr	eax, 3
pop	esi
not	eax
xor	ecx, esp
and	eax, 1
call	@__security_check_cookie@4 
add	esp, 0A4h
retn
align 10h
			
mov	eax, dword_100BADE0
push	esi
test	eax, eax
jz	short loc_100362F6
mov	esi, eax
add	eax, 48h
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_100362F6
push	esi
call	sub_10035590
add	esp, 4
			
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_10036313
lea	eax, [esi+48h]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	dword_100BADE0,	esi
pop	esi
retn
mov	dword_100BADE0,	0
pop	esi
retn
align 10h
			
cmp	dword_100BADE0,	0
jnz	short locret_10036352
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_10036347
lea	eax, [esi+48h]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	dword_100BADE0,	esi
pop	esi
retn
mov	dword_100BADE0,	0
pop	esi
retn
align 10h
push	esi
mov	esi, dword_100BADE0
push	edi
mov	edi, [esp+8+arg_0]
test	edi, edi
jz	short loc_10036388
lea	eax, [edi+48h]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	dword_100BADE0,	edi
pop	edi
mov	eax, esi
pop	esi
retn
pop	edi
mov	eax, esi
mov	dword_100BADE0,	0
pop	esi
retn
align 10h
public PK11_GetInternalKeySlot
			
mov	eax, dword_100BADE0
push	esi
test	eax, eax
jz	short loc_100363BD
mov	esi, eax
add	eax, 48h
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
call	SECMOD_GetInternalModule
test	eax, eax
jnz	short loc_100363D7
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
cmp	dword ptr [eax+0Ch], 0
jz	short loc_100363F3
mov	eax, [eax+28h]
mov	esi, [eax]
lea	edx, [esi+48h]
push	edx
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
mov	ecx, [eax+28h]
mov	esi, [ecx+4]
lea	edx, [esi+48h]
push	edx
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
public PK11_GetInternalSlot
			
call	SECMOD_GetInternalModule
test	eax, eax
jnz	short loc_10036429
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
cmp	dword ptr [eax+0Ch], 0
jz	short loc_10036434
jmp	PK11_GetInternalKeySlot
mov	eax, [eax+28h]
push	esi
mov	esi, [eax]
lea	ecx, [esi+48h]
push	ecx
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
public PK11_DoesMechanism
			
push	esi
mov	esi, [esp+4+arg_4]
cmp	esi, 80000EFEh
jnz	short loc_10036466
mov	eax, [esp+4+arg_0]
mov	eax, [eax+28h]
pop	esi
retn
cmp	esi, 7FFh
jnb	short loc_10036496
mov	ecx, esi
shr	ecx, 8
mov	eax, 1
shl	eax, cl
mov	ecx, [esp+4+arg_0]
and	esi, 0FFh
movsx	edx, byte ptr [esi+ecx+140h]
and	eax, edx
neg	eax
sbb	eax, eax
neg	eax
pop	esi
retn
mov	ecx, [esp+4+arg_0]
mov	edx, [ecx+98h]
xor	eax, eax
test	edx, edx
jle	short loc_100364BC
mov	ecx, [ecx+94h]
lea	esp, [esp+0]
cmp	[ecx], esi
jz	short loc_100364C0
inc	eax
add	ecx, 4
cmp	eax, edx
jl	short loc_100364B0
xor	eax, eax
pop	esi
retn
mov	eax, 1
pop	esi
retn
align 10h
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
push	ebx
mov	ebx, [esp+14h+arg_4]
push	ebp
mov	ebp, [esp+18h+arg_C]
push	esi
mov	esi, [esp+1Ch+arg_0]
test	ebp, ebp
jnz	short loc_10036507
cmp	ebx, 1
jnz	short loc_10036507
cmp	dword ptr [esi+124h], 0
jz	short loc_10036507
mov	eax, [esi+128h]
jmp	short loc_1003657B
			
cmp	dword ptr [esi+30h], 0
jnz	short loc_1003651A
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	ecx, [esi]
mov	eax, [esi+40h]
mov	ecx, [ecx+22h]
push	edi
lea	edx, [esp+20h+var_10]
push	edx
push	ebx
push	eax
call	ecx
add	esp, 0Ch
cmp	dword ptr [esi+30h], 0
mov	edi, eax
jnz	short loc_10036544
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
pop	edi
jnz	short loc_1003659D
mov	eax, [esp+1Ch+var_8]
cmp	ebx, 1
jnz	short loc_1003656B
cmp	dword ptr [esi+124h], 0
jnz	short loc_1003656B
mov	[esi+128h], eax
mov	dword ptr [esi+124h], 1
			
test	ebp, ebp
jz	short loc_1003657B
cmp	[esp+1Ch+var_10], ebp
ja	short loc_1003659D
cmp	[esp+1Ch+var_C], ebp
jb	short loc_1003659D
			
mov	ecx, [esp+1Ch+arg_8]
test	ecx, ecx
jz	short loc_10036589
and	eax, ecx
cmp	eax, ecx
jnz	short loc_1003659D
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
			
mov	ecx, [esp+1Ch+var_4]
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
mov	eax, 1
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
public PK11_GetBestKeyLength
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
push	esi
mov	esi, [esp+14h+arg_0]
cmp	dword ptr [esi+30h], 0
push	edi
jnz	short loc_100365E7
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	eax, [esp+18h+arg_4]
mov	ecx, [esi]
lea	edx, [esp+18h+var_10]
push	edx
mov	edx, [esi+40h]
push	eax
mov	eax, [ecx+22h]
push	edx
call	eax
add	esp, 0Ch
cmp	dword ptr [esi+30h], 0
mov	edi, eax
jnz	short loc_10036614
mov	ecx, [esi+3Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
pop	edi
pop	esi
jz	short loc_1003662B
xor	eax, eax
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
mov	ecx, [esp+10h+var_C]
mov	eax, [esp+10h+var_10]
sub	eax, ecx
neg	eax
sbb	eax, eax
and	eax, ecx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
public PK11_SeedRandom
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+3Ch]
push	edi
push	eax
call	ds:PR_Lock
mov	edx, [esp+0Ch+arg_8]
mov	eax, [esp+0Ch+arg_4]
mov	ecx, [esi]
push	edx
mov	edx, [esi+38h]
push	eax
mov	eax, [ecx+0FEh]
push	edx
call	eax
mov	ecx, [esi+3Ch]
push	ecx
mov	edi, eax
call	ds:PR_Unlock
add	esp, 14h
test	edi, edi
jz	short loc_100366A0
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
public PK11_GenerateRandomOnSlot
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+14h], 0
push	edi
jnz	short loc_100366C9
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	edx, [esp+8+arg_8]
mov	eax, [esp+8+arg_4]
mov	ecx, [esi]
push	edx
mov	edx, [esi+38h]
push	eax
mov	eax, [ecx+102h]
push	edx
call	eax
add	esp, 0Ch
cmp	dword ptr [esi+14h], 0
mov	edi, eax
jnz	short loc_100366F9
mov	ecx, [esi+3Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	short loc_10036712
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
mov	[ecx+13Ch], eax
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	eax, [eax+13Ch]
retn
align 10h
public PK11_FreeSlotListElement
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
xor	ebx, ebx
test	edi, edi
jz	short loc_100367AF
mov	esi, [esp+0Ch+arg_4]
test	esi, esi
jz	short loc_100367AF
mov	eax, [edi+8]
push	eax
call	ds:PR_Lock
mov	eax, [esi+0Ch]
add	esp, 4
lea	ecx, [eax-1]
mov	[esi+0Ch], ecx
cmp	eax, 1
jnz	short loc_10036772
mov	ebx, eax
mov	edx, [edi+8]
push	edx
call	ds:PR_Unlock
add	esp, 4
test	ebx, ebx
jz	short loc_100367A9
mov	edi, [esi+8]
lea	eax, [edi+48h]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_100367A0
push	edi
call	sub_10035590
add	esp, 4
push	esi
call	PORT_Free_Util
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
			
test	ebx, ebx
jz	locret_10036860
push	esi
mov	esi, [ebx]
test	esi, esi
jz	short loc_10036841
push	ebp
push	edi
mov	eax, [ebx+8]
mov	ebp, [esi]
push	eax
xor	edi, edi
call	ds:PR_Lock
mov	eax, [esi+0Ch]
add	esp, 4
lea	ecx, [eax-1]
mov	[esi+0Ch], ecx
cmp	eax, 1
jnz	short loc_10036802
mov	edi, eax
mov	edx, [ebx+8]
push	edx
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	short loc_10036839
mov	edi, [esi+8]
lea	eax, [edi+48h]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_10036830
push	edi
call	sub_10035590
add	esp, 4
push	esi
call	PORT_Free_Util
add	esp, 4
mov	esi, ebp
test	ebp, ebp
jnz	short loc_100367E1
pop	edi
pop	ebp
mov	eax, [ebx+8]
pop	esi
test	eax, eax
jz	short loc_10036853
push	eax
call	ds:PR_DestroyLock
add	esp, 4
mov	dword ptr [ebx+8], 0
mov	dword ptr [ebx], 0
retn
align 10h
public PK11_FreeSlotList
			
push	ebx
mov	ebx, [esp+4+arg_0]
call	sub_100367D0
push	ebx
call	PORT_Free_Util
add	esp, 4
pop	ebx
retn
align 10h
			
push	esi
push	10h
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_100368A6
or	eax, 0FFFFFFFFh
pop	esi
retn
push	ebx
push	edi
mov	edi, [esp+0Ch+arg_4]
lea	eax, [edi+48h]
push	eax
call	ds:PR_AtomicIncrement
mov	[esi+8], edi
mov	edi, [esp+10h+arg_0]
mov	dword ptr [esi+4], 0
mov	dword ptr [esi+0Ch], 1
mov	ecx, [edi+8]
push	ecx
call	ds:PR_Lock
mov	eax, [edi]
add	esp, 8
test	eax, eax
jz	short loc_10036900
mov	ecx, [esp+0Ch+arg_8]
test	ecx, ecx
jz	short loc_10036931
mov	edx, [eax+8]
mov	edx, [edx+4]
mov	ebx, [esi+8]
mov	ebx, [ebx+4]
mov	edx, [edx+64h]
cmp	edx, [ebx+64h]
jle	short loc_10036931
mov	eax, [eax]
test	eax, eax
jnz	short loc_100368E2
			
mov	edx, [edi+4]
mov	[esi+4], edx
mov	dword ptr [esi], 0
mov	[edi+4], esi
mov	ecx, [esi+4]
test	ecx, ecx
jz	short loc_10036918
mov	[ecx], esi
cmp	[edi], eax
jnz	short loc_1003691E
mov	[edi], esi
mov	eax, [edi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	ebx
xor	eax, eax
pop	esi
retn
			
test	eax, eax
jz	short loc_10036900
mov	ecx, [eax+4]
mov	[esi+4], ecx
mov	[eax+4], esi
mov	[esi], eax
jmp	short loc_1003690F
align 10h
			
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+8]
push	eax
call	ds:PR_Lock
mov	esi, [esp+0Ch+arg_4]
mov	eax, [esi+4]
add	esp, 4
test	eax, eax
jz	short loc_10036974
mov	ecx, [esi]
mov	[eax], ecx
jmp	short loc_10036978
mov	edx, [esi]
mov	[edi], edx
mov	eax, [esi]
test	eax, eax
jz	short loc_10036986
mov	ecx, [esi+4]
mov	[eax+4], ecx
jmp	short loc_1003698C
mov	edx, [esi+4]
mov	[edi+4], edx
mov	dword ptr [esi+4], 0
mov	dword ptr [esi], 0
mov	eax, [edi+8]
push	eax
call	ds:PR_Unlock
push	esi
push	edi
call	PK11_FreeSlotListElement
add	esp, 0Ch
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
public PK11_GetNextSafe
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
mov	eax, [edi+8]
push	eax
call	ds:PR_Lock
mov	ebx, [esp+10h+arg_4]
mov	esi, [ebx]
add	esp, 4
test	esi, esi
jnz	short loc_100369F5
cmp	[ebx+4], esi
jnz	short loc_100369F1
cmp	[esp+0Ch+arg_8], esi
jz	short loc_100369F1
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_100369F1
mov	esi, eax
			
test	esi, esi
jz	short loc_100369F8
inc	dword ptr [esi+0Ch]
mov	ecx, [edi+8]
push	ecx
call	ds:PR_Unlock
push	ebx
push	edi
call	PK11_FreeSlotListElement
add	esp, 0Ch
pop	edi
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+8]
push	ebp
push	esi
push	edi
push	eax
call	ds:PR_Lock
mov	edi, [ebx]
add	esp, 4
test	edi, edi
jz	short loc_10036A3E
inc	dword ptr [edi+0Ch]
mov	ecx, [ebx+8]
mov	ebp, ds:PR_Unlock
push	ecx
call	ebp 
add	esp, 4
test	edi, edi
jz	short loc_10036A97
mov	edx, [esp+10h+arg_4]
cmp	[edi+8], edx
jz	short loc_10036A9E
mov	eax, [ebx+8]
push	eax
call	ds:PR_Lock
mov	esi, [edi]
add	esp, 4
test	esi, esi
jnz	short loc_10036A7E
cmp	[edi+4], esi
jnz	short loc_10036A7A
mov	eax, [ebx]
cmp	eax, edi
jz	short loc_10036A7A
mov	esi, eax
			
test	esi, esi
jz	short loc_10036A81
inc	dword ptr [esi+0Ch]
mov	ecx, [ebx+8]
push	ecx
call	ebp 
push	edi
push	ebx
call	PK11_FreeSlotListElement
add	esp, 0Ch
mov	edi, esi
test	esi, esi
jnz	short loc_10036A51
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
push	ebx
mov	ebx, offset dword_100BADC8
call	sub_100367D0
mov	ebx, offset dword_100BADBC
call	sub_100367D0
mov	ebx, offset dword_100BAD68
call	sub_100367D0
mov	ebx, offset dword_100BADD4
call	sub_100367D0
mov	ebx, offset dword_100BAD5C
call	sub_100367D0
mov	ebx, offset dword_100BAD2C
call	sub_100367D0
mov	ebx, offset dword_100BAD50
call	sub_100367D0
mov	ebx, offset dword_100BAD14
call	sub_100367D0
mov	ebx, offset dword_100BADB0
call	sub_100367D0
mov	ebx, offset dword_100BAD80
call	sub_100367D0
mov	ebx, offset dword_100BACFC
call	sub_100367D0
mov	ebx, offset dword_100BAD8C
call	sub_100367D0
mov	ebx, offset dword_100BAD74
call	sub_100367D0
mov	ebx, offset dword_100BACF0
call	sub_100367D0
mov	ebx, offset dword_100BADA4
call	sub_100367D0
mov	ebx, offset dword_100BAD98
call	sub_100367D0
mov	ebx, offset dword_100BAD44
call	sub_100367D0
mov	ebx, offset dword_100BAD20
call	sub_100367D0
mov	ebx, offset dword_100BAD38
call	sub_100367D0
mov	ebx, offset dword_100BAD08
call	sub_100367D0
pop	ebx
retn
align 10h
mov	edx, [esp+arg_8]
push	ebx
mov	ebx, [esp+4+arg_4]
push	esi
mov	esi, [esp+8+arg_0]
xor	eax, eax
push	edi
test	edx, edx
jle	short loc_10036BAC
mov	edi, [esi+40h]
mov	ecx, ebx
lea	ebx, [ebx+0]
cmp	[ecx], edi
jz	short loc_10036BAC
inc	eax
add	ecx, 24h
cmp	eax, edx
jl	short loc_10036BA0
			
cmp	eax, edx
jz	short loc_10036C2E
cmp	dword ptr [esi+18h], 0
lea	eax, [eax+eax*8]
mov	ecx, [ebx+eax*4+4]
lea	eax, [ebx+eax*4]
mov	[esi+44h], ecx
mov	edx, [eax+8]
mov	[esi+60h], edx
mov	ecx, [eax+0Ch]
mov	[esi+64h], ecx
movsx	edx, byte ptr [eax+10h]
mov	[esi+11Ch], edx
jnz	short loc_10036C2E
test	dword ptr [esi+44h], 40000000h
jz	short loc_10036BF4
pop	edi
mov	dword ptr [esi+18h], 1
mov	dword ptr [esi+1Ch], 1
pop	esi
pop	ebx
retn
mov	edi, offset dword_100A6520
lea	esp, [esp+0]
mov	eax, [edi-4]
test	[esi+44h], eax
jz	short loc_10036C23
mov	ecx, [edi]
push	ecx
call	sub_100358D0
add	esp, 4
test	eax, eax
jz	short loc_10036C23
push	0
push	esi
push	eax
call	sub_10036890
add	esp, 0Ch
			
add	edi, 0Ch
cmp	edi, offset aVcardSa 
jl	short loc_10036C00
			
pop	edi
pop	esi
pop	ebx
retn
align 10h
public PK11_UpdateSlotAttribute
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_4]
mov	eax, [edi+8]
push	eax
xor	ebx, ebx
call	sub_100358D0
add	esp, 4
mov	esi, eax
mov	eax, [esp+0Ch+arg_0]
cmp	[esp+0Ch+arg_8], ebx
jz	short loc_10036C7A
mov	ecx, [edi+4]
or	[eax+44h], ecx
test	esi, esi
jz	short loc_10036CA2
push	ebx
push	eax
push	esi
call	sub_10036890
add	esp, 0Ch
pop	edi
pop	esi
pop	ebx
retn
mov	edx, [edi+4]
not	edx
and	[eax+44h], edx
test	esi, esi
jz	short loc_10036CA2
push	eax
push	esi
call	sub_10036A20
add	esp, 8
test	eax, eax
jz	short loc_10036CA2
push	eax
push	esi
call	sub_10036950
add	esp, 8
pop	edi
pop	esi
pop	ebx
retn
			
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
push	ebp
mov	ebp, [esp+4+arg_0]
cmp	dword ptr [ebp+18h], 0
jnz	short loc_10036D18
cmp	dword ptr [ebp+44h], 0
jz	short loc_10036D18
push	ebx
push	esi
push	edi
mov	ebx, offset dword_100A6520
lea	esp, [esp+0]
mov	eax, [ebx-4]
test	[ebp+44h], eax
jz	short loc_10036D0A
mov	ecx, [ebx]
push	ecx
call	sub_100358D0
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10036D0A
push	ebp
push	esi
call	sub_10036A20
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10036D0A
push	edi
push	esi
call	sub_10036950
push	edi
push	esi
call	PK11_FreeSlotListElement
add	esp, 10h
			
add	ebx, 0Ch
cmp	ebx, offset aVcardSa 
jl	short loc_10036CD0
pop	edi
pop	esi
pop	ebx
			
pop	ebp
retn
align 10h
			
sub	esp, 0C8h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0C8h+var_4], eax
push	ebx
push	esi
mov	esi, [esp+0D0h+arg_0]
xor	ebx, ebx
push	edi
cmp	[esi+30h], ebx
jnz	short loc_10036D52
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	ecx, [esi]
mov	eax, [esi+40h]
mov	ecx, [ecx+1Ah]
lea	edx, [esp+0D4h+Src]
push	edx
push	eax
call	ecx
add	esp, 8
mov	edi, eax
cmp	[esi+30h], ebx
jnz	short loc_10036D79
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
cmp	edi, ebx
jz	short loc_10036DA7
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+0C8h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0C8h
retn
mov	eax, [esp+0D4h+var_64]
inc	word ptr [esi+80h]
mov	ecx, eax
shr	ecx, 2
and	ecx, 1
mov	edx, eax
mov	[esi+24h], ecx
mov	ecx, eax
mov	[esi+34h], eax
shr	edx, 1
shr	eax, 8
and	edx, 1
and	ecx, 1
and	eax, 1
mov	[esi+20h], edx
mov	[esi+28h], ecx
mov	[esi+12Ch], eax
mov	[esi+134h], ebx
mov	[esi+138h], ebx
cmp	[esi+130h], ebx
jz	short loc_10036DF8
mov	[esi+12Ch], ebx
push	ebp
lea	ebp, [esi+0F9h]
mov	edi, 1Fh
cmp	[esp+edi+0D8h+Src], 20h
jnz	short loc_10036E32
cmp	byte ptr [esp+edi+0D8h+var_C8+3], 20h
jnz	short loc_10036E27
cmp	byte ptr [esp+edi+0D8h+var_C8+2], 20h
jnz	short loc_10036E2A
cmp	byte ptr [esp+edi+0D8h+var_C8+1], 20h
jnz	short loc_10036E2F
sub	edi, 4
jns	short loc_10036E04
jmp	short loc_10036E32
dec	edi
jmp	short loc_10036E32
sub	edi, 2
jmp	short loc_10036E32
sub	edi, 3
			
inc	edi
cmp	ebp, ebx
jnz	short loc_10036E49
lea	edx, [edi+1]
push	edx
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
cmp	ebp, ebx
jz	short loc_10036E5F
cmp	edi, ebx
jz	short loc_10036E5C
push	edi		
lea	eax, [esp+0DCh+Src]
push	eax		
push	ebp		
call	memcpy
add	esp, 0Ch
mov	[edi+ebp], bl
mov	ecx, [esp+0D8h+var_4C]
mov	eax, [esp+0D8h+var_74]
mov	edx, [esp+0D8h+var_50]
mov	[esi+78h], ecx
mov	ecx, [esp+0D8h+var_70]
mov	[esi+0A8h], eax
mov	eax, [esp+0D8h+var_68]
mov	[esi+0ACh], ecx
mov	ecx, [esi+13Ch]
mov	[esi+7Ch], edx
mov	edx, [esp+0D8h+var_6C]
mov	[esi+0B0h], edx
push	ecx
mov	[esi+0B4h], eax
call	sub_100126B0
add	esp, 4
cmp	[esi+20h], ebx
jnz	short loc_10036EBA
mov	eax, 1
cmp	[esp+0D8h+var_60], eax
jz	short loc_10036EBC
xor	eax, eax
push	esi
mov	[esi+2Ch], eax
call	sub_10035C40
add	esp, 4
cmp	eax, ebx
jnz	loc_10037185
mov	eax, [esp+0D8h+var_60]
mov	[esi+124h], ebx
mov	[esi+128h], ebx
cmp	eax, ebx
jnz	short loc_10036EED
mov	dword ptr [esi+5Ch], 320h
jmp	short loc_10036EFC
cmp	eax, 14h
jnb	short loc_10036EF7
mov	[esi+5Ch], ebx
jmp	short loc_10036EFC
shr	eax, 1
mov	[esi+5Ch], eax
			
cmp	[esi+38h], ebx
lea	ebp, [esi+38h]
jnz	short loc_10036F78
cmp	[esi+30h], ebx
jnz	short loc_10036F16
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Lock
add	esp, 4
mov	edx, [esi+2Ch]
mov	eax, [esi]
neg	edx
lea	ecx, [esp+0D8h+var_C8]
push	ecx
mov	ecx, [esi+40h]
sbb	edx, edx
push	offset __PBE_GenerateBits
and	edx, 2
or	edx, 4
push	esi
push	edx
mov	edx, [eax+32h]
push	ecx
call	edx
add	esp, 14h
mov	edi, eax
cmp	[esi+30h], ebx
jnz	short loc_10036F51
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Unlock
add	esp, 4
cmp	edi, ebx
jz	short loc_10036F6C
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
jmp	loc_10037185
mov	ecx, [esp+0D8h+var_C8]
mov	[ebp+0], ecx
jmp	loc_10037024
cmp	[esi+30h], ebx
jnz	short loc_10036F8A
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Lock
add	esp, 4
mov	eax, [esi]
mov	edx, [ebp+0]
mov	eax, [eax+3Eh]
lea	ecx, [esp+0D8h+var_24]
push	ecx
push	edx
call	eax
add	esp, 8
cmp	eax, 30h
jnz	short loc_10036FB5
mov	ecx, [esi]
mov	edx, [ebp+0]
mov	eax, [ecx+36h]
push	edx
call	eax
add	esp, 4
jmp	short loc_10036FC3
cmp	eax, 0B0h
jz	short loc_10036FC3
cmp	eax, 0B3h
jnz	short loc_10037012
			
mov	edx, [esi+2Ch]
mov	ecx, [esi]
mov	eax, [esi+40h]
mov	ecx, [ecx+32h]
neg	edx
push	ebp
sbb	edx, edx
push	offset __PBE_GenerateBits
and	edx, 2
push	esi
or	edx, 4
push	edx
push	eax
call	ecx
add	esp, 14h
cmp	eax, ebx
jz	short loc_10037012
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
mov	[ebp+0], ebx
cmp	[esi+30h], ebx
jnz	short loc_1003700A
push	esi
call	sub_10035670
add	esp, 4
			
or	eax, 0FFFFFFFFh
jmp	loc_10037185
			
cmp	[esi+30h], ebx
jnz	short loc_10037024
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
			
mov	eax, [esi+13Ch]
push	eax
call	sub_10012700
add	esp, 4
test	eax, eax
jnz	short loc_1003700A
cmp	[esi+14h], ebx
jnz	loc_10037110
cmp	[esi+28h], ebx
jz	loc_1003710B
call	PK11_GetInternalSlot
mov	edi, eax
cmp	edi, ebx
jz	loc_1003710B
push	esi
call	sub_10035650
mov	ecx, [esi]
mov	eax, [ebp+0]
mov	ecx, [ecx+102h]
push	20h
lea	edx, [esp+0E0h+var_24]
push	edx
push	eax
call	ecx
push	esi
mov	ebx, eax
call	sub_10035670
add	esp, 14h
test	ebx, ebx
jnz	short loc_100370AC
push	edi
call	sub_10035650
mov	edx, [edi]
mov	ecx, [edi+38h]
mov	edx, [edx+0FEh]
push	20h
lea	eax, [esp+0E0h+var_24]
push	eax
push	ecx
call	edx
push	edi
call	sub_10035670
add	esp, 14h
push	edi
call	sub_10035650
mov	eax, [edi]
mov	edx, [edi+38h]
mov	eax, [eax+102h]
push	20h
lea	ecx, [esp+0E0h+var_24]
push	ecx
push	edx
call	eax
push	edi
mov	ebx, eax
call	sub_10035670
add	esp, 14h
test	ebx, ebx
jnz	short loc_10037100
push	esi
call	sub_10035650
mov	ecx, [esi]
mov	eax, [ebp+0]
mov	ecx, [ecx+0FEh]
push	20h
lea	edx, [esp+0E0h+var_24]
push	edx
push	eax
call	ecx
push	esi
call	sub_10035670
add	esp, 14h
push	edi
call	PK11_FreeSlot
add	esp, 4
xor	ebx, ebx
			
cmp	[esi+14h], ebx
jz	short loc_10037183
cmp	[esi+20h], ebx
jnz	short loc_10037183
mov	edx, [esi]
mov	ecx, [esi+40h]
lea	eax, [esp+0D8h+var_C8]
push	eax
push	offset __PBE_GenerateBits
push	esi
mov	[esp+0E4h+var_C8], ebx
mov	edx, [edx+32h]
push	6
push	ecx
call	edx
add	esp, 14h
cmp	eax, 0E2h
jnz	short loc_10037144
mov	dword ptr [esi+20h], 1
jmp	short loc_10037183
cmp	eax, ebx
jnz	short loc_10037183
mov	eax, [esi]
mov	edx, [esp+0D8h+var_C8]
mov	eax, [eax+3Eh]
lea	ecx, [esp+0D8h+var_24]
push	ecx
push	edx
call	eax
add	esp, 8
test	eax, eax
jnz	short loc_10037174
test	[esp+0D8h+var_1C], 2
jnz	short loc_10037174
mov	dword ptr [esi+20h], 1
			
mov	ecx, [esi]
mov	edx, [esp+0D8h+var_C8]
mov	eax, [ecx+36h]
push	edx
call	eax
add	esp, 4
			
xor	eax, eax
			
mov	ecx, [esp+0D8h+var_4]
pop	ebp
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0C8h
retn
align 10h
			
sub	esp, 6Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+6Ch+var_4], eax
push	esi
mov	esi, [esp+70h+arg_8]
push	edi
mov	edi, [esp+74h+arg_0]
mov	eax, [edi+1Ch]
mov	[esi], eax
mov	ecx, [edi+4]
mov	eax, [esp+74h+arg_4]
mov	[esi+14h], ecx
mov	ecx, [esi]
mov	[esi+40h], eax
mov	edx, [edi+3Ch]
mov	[esi+30h], edx
lea	edx, [esp+74h+Src]
push	edx
mov	dword ptr [esi+124h], 0
push	eax
mov	eax, [ecx+16h]
call	eax
add	esp, 8
test	eax, eax
jnz	loc_100372EC
xor	ecx, ecx
cmp	[edi+4], ecx
push	ebp
setz	cl
mov	[esi+4], edi
lea	ebp, [esi+0B8h]
mov	edi, 3Fh
mov	al, 20h
mov	[esi+8], ecx
mov	edi, edi
cmp	[esp+edi+78h+Src], al
jnz	short loc_1003723A
cmp	[esp+edi+78h+var_6D], al
jnz	short loc_1003722F
cmp	[esp+edi+78h+var_6E], al
jnz	short loc_10037232
cmp	[esp+edi+78h+var_6F], al
jnz	short loc_10037237
sub	edi, 4
jns	short loc_10037210
jmp	short loc_1003723A
dec	edi
jmp	short loc_1003723A
sub	edi, 2
jmp	short loc_1003723A
sub	edi, 3
			
inc	edi
test	ebp, ebp
jnz	short loc_10037251
lea	edx, [edi+1]
push	edx
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	short loc_10037268
test	edi, edi
jz	short loc_10037264
push	edi		
lea	eax, [esp+7Ch+Src]
push	eax		
push	ebp		
call	memcpy
add	esp, 0Ch
mov	byte ptr [edi+ebp], 0
mov	ecx, [esp+78h+var_C]
xor	edx, edx
and	cl, 4
cmp	cl, 4
setz	dl
push	0Ch		
lea	eax, [esp+7Ch+Str1]
push	offset aActi	
push	eax		
mov	[esi+10h], edx
call	ds:strncmp
add	esp, 0Ch
neg	eax
sbb	eax, eax
inc	eax
mov	[esi+130h], eax
mov	al, byte ptr [esp+78h+var_C]
pop	ebp
test	al, 2
jnz	short loc_100372CD
mov	dword ptr [esi+0Ch], 1
test	al, 1
jnz	short loc_100372D1
pop	edi
mov	dword ptr [esi+18h], 1
mov	dword ptr [esi+1Ch], 4
pop	esi
mov	ecx, [esp+6Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 6Ch
retn
test	al, 1
jz	short loc_10037333
push	1
push	esi
call	sub_10036D20
add	esp, 8
test	eax, eax
jz	short loc_1003730B
cmp	dword ptr [esi+0Ch], 0
jz	short loc_10037333
cmp	dword ptr [esi+18h], 0
jnz	short loc_10037333
pop	edi
mov	dword ptr [esi+18h], 1
mov	dword ptr [esi+1Ch], 2
pop	esi
mov	ecx, [esp+6Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 6Ch
retn
mov	edx, esi
call	sub_10035EA0
test	eax, eax
jz	short loc_10037333
cmp	dword ptr [esi+11Ch], 0
jnz	short loc_10037329
mov	ecx, [esi+4]
mov	dword ptr [ecx+60h], 64h
mov	dword ptr [esi+11Ch], 1
			
mov	ecx, [esp+74h+var_4]
pop	edi
pop	esi
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 6Ch
retn
align 10h
			
sub	esp, 7Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+7Ch+var_4], eax
cmp	dword ptr [esi+18h], 0
jnz	short loc_100373E3
cmp	dword ptr [esi+0Ch], 0
jz	short loc_10037384
cmp	dword ptr [esi+38h], 0
jz	short loc_10037384
mov	eax, 1
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
			
mov	eax, [esi+13Ch]
test	eax, eax
jz	short loc_100373A6
push	eax
call	sub_1004DBD0
add	esp, 4
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
cmp	dword ptr [esi+30h], 0
jnz	short loc_100373B9
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	ecx, [esi]
mov	eax, [esi+40h]
mov	ecx, [ecx+16h]
lea	edx, [esp+7Ch+var_6C]
push	edx
push	eax
call	ecx
add	esp, 8
test	eax, eax
jz	short loc_100373F4
cmp	dword ptr [esi+30h], 0
jnz	short loc_100373E3
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 4
			
xor	eax, eax
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
test	[esp+7Ch+var_C], 1
jnz	short loc_10037434
mov	eax, [esi+38h]
test	eax, eax
jz	short loc_10037414
mov	ecx, [esi]
mov	edx, [ecx+36h]
push	eax
call	edx
add	esp, 4
mov	dword ptr [esi+38h], 0
cmp	dword ptr [esi+30h], 0
jnz	short loc_100373E3
push	esi
call	sub_10035670
add	esp, 4
xor	eax, eax
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
cmp	dword ptr [esi+38h], 0
jz	short loc_10037483
cmp	dword ptr [esi+30h], 0
jz	short loc_10037449
push	esi
call	sub_10035650
add	esp, 4
mov	eax, [esi]
mov	edx, [esi+38h]
mov	eax, [eax+3Eh]
lea	ecx, [esp+7Ch+var_7C]
push	ecx
push	edx
call	eax
add	esp, 8
test	eax, eax
jz	short loc_10037474
mov	ecx, [esi]
mov	edx, [esi+38h]
mov	eax, [ecx+36h]
push	edx
call	eax
add	esp, 4
mov	dword ptr [esi+38h], 0
cmp	dword ptr [esi+30h], 0
jz	short loc_10037489
push	esi
call	sub_10035670
add	esp, 4
cmp	dword ptr [esi+30h], 0
jnz	short loc_10037492
push	esi
call	sub_10035670
add	esp, 4
cmp	dword ptr [esi+38h], 0
jnz	loc_10037370
mov	ecx, [esp+7Ch+arg_0]
push	ecx
push	esi
call	sub_10036D20
mov	ecx, [esp+84h+var_4]
add	esp, 8
neg	eax
sbb	eax, eax
xor	ecx, esp
inc	eax
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
align 10h
public PK11_IsPresent
			
push	esi
mov	esi, [esp+4+arg_0]
push	1
call	sub_10037350
add	esp, 4
pop	esi
retn
align 10h
public PK11_IsInternalKeySlot
			
push	edi
mov	edi, [esp+4+arg_0]
cmp	dword ptr [edi+14h], 0
jnz	short loc_100374FF
xor	eax, eax
pop	edi
retn
push	esi
call	PK11_GetInternalKeySlot
mov	esi, eax
xor	eax, eax
cmp	esi, edi
setz	al
lea	ecx, [esi+48h]
push	ecx
mov	edi, eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_1003752A
push	esi
call	sub_10035590
add	esp, 4
pop	esi
mov	eax, edi
pop	edi
retn
align 10h
public PK11_TokenExists
push	ecx
push	ebp
push	edi
call	SECMOD_GetDefaultModuleListLock
mov	edi, eax
xor	ebp, ebp
mov	[esp+0Ch+var_4], edi
test	edi, edi
jnz	short loc_10037557
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	ebp
pop	ecx
retn
push	esi
call	SECMOD_GetInternalModule
test	eax, eax
jnz	short loc_100375D1
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
			
push	ebx
push	edi
call	SECMOD_GetReadLock
add	esp, 4
call	SECMOD_GetDefaultModuleList
mov	ebx, eax
test	ebx, ebx
jz	loc_10037641
test	ebp, ebp
jnz	loc_10037641
mov	eax, [ebx+4]
xor	edi, edi
cmp	[eax+2Ch], edi
jle	loc_10037637
lea	ecx, [ecx+0]
mov	ecx, [eax+28h]
mov	esi, [ecx+edi*4]
push	1
call	sub_10037350
add	esp, 4
test	eax, eax
jz	short loc_100375C6
mov	edx, [esp+14h+arg_0]
push	edx
push	esi
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jnz	short loc_10037632
mov	eax, [ebx+4]
inc	edi
cmp	edi, [eax+2Ch]
jl	short loc_100375A0
jmp	short loc_10037637
cmp	[eax+0Ch], ebp
jz	short loc_100375DF
call	PK11_GetInternalKeySlot
mov	esi, eax
jmp	short loc_100375F1
mov	eax, [eax+28h]
mov	esi, [eax]
lea	ecx, [esi+48h]
push	ecx
call	ds:PR_AtomicIncrement
add	esp, 4
test	esi, esi
jz	loc_1003756E
mov	edx, [esp+10h+arg_0]
push	edx
push	esi
call	PK11_DoesMechanism
mov	ebp, eax
lea	eax, [esi+48h]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 0Ch
test	eax, eax
jnz	short loc_10037620
push	esi
call	sub_10035590
add	esp, 4
test	ebp, ebp
jz	loc_1003756E
pop	esi
pop	edi
mov	eax, 1
pop	ebp
pop	ecx
retn
mov	ebp, 1
			
mov	ebx, [ebx]
test	ebx, ebx
jnz	loc_10037587
			
mov	eax, [esp+14h+var_4]
push	eax
call	SECMOD_ReleaseReadLock
add	esp, 4
pop	ebx
pop	esi
pop	edi
mov	eax, ebp
pop	ebp
pop	ecx
retn
align 10h
public PK11_GetAllTokens
			
sub	esp, 58h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+58h+var_4], eax
mov	eax, [esp+58h+arg_C]
push	ebx
xor	ebx, ebx
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_50], ebx
call	SECMOD_GetDefaultModuleListLock
mov	[esp+5Ch+var_4C], eax
cmp	eax, ebx
jnz	short loc_100376A9
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
mov	ecx, [esp+58h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
push	esi
push	edi
push	0Ch
call	PORT_Alloc_Util
mov	edi, ds:PR_NewLock
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jnz	short loc_100376C7
mov	[esp+64h+var_58], ebx
jmp	short loc_100376E8
mov	[esi], ebx
mov	[esi+4], ebx
call	edi 
mov	[esi+8], eax
cmp	eax, ebx
jnz	short loc_100376E4
push	esi
call	PORT_Free_Util
add	esp, 4
mov	[esp+64h+var_58], ebx
jmp	short loc_100376E8
mov	[esp+64h+var_58], esi
			
push	0Ch
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jnz	short loc_100376FE
mov	[esp+64h+var_54], ebx
jmp	short loc_1003771F
mov	[esi], ebx
mov	[esi+4], ebx
call	edi 
mov	[esi+8], eax
cmp	eax, ebx
jnz	short loc_1003771B
push	esi
call	PORT_Free_Util
add	esp, 4
mov	[esp+64h+var_54], ebx
jmp	short loc_1003771F
mov	[esp+64h+var_54], esi
			
push	ebp
push	0Ch
call	PORT_Alloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jnz	short loc_10037734
xor	ebp, ebp
jmp	short loc_10037751
mov	[esi], ebx
mov	[esi+4], ebx
call	edi 
mov	[esi+8], eax
cmp	eax, ebx
jnz	short loc_1003774F
push	esi
call	PORT_Free_Util
add	esp, 4
xor	ebp, ebp
jmp	short loc_10037751
mov	ebp, esi
			
mov	eax, [esp+68h+var_58]
cmp	eax, ebx
jz	loc_10037900
cmp	[esp+68h+var_54], ebx
jz	loc_100378EA
cmp	ebp, ebx
jz	loc_100378EA
mov	ecx, [esp+68h+var_4C]
push	ecx
call	SECMOD_GetReadLock
add	esp, 4
call	SECMOD_GetDefaultModuleList
mov	ebx, eax
test	ebx, ebx
jz	loc_10037843
jmp	short loc_10037790
align 10h
			
mov	eax, [esp+68h+var_50]
inc	eax
mov	[esp+68h+var_50], eax
mov	eax, [ebx+4]
xor	edi, edi
cmp	[eax+2Ch], edi
jle	loc_10037839
jmp	short loc_100377B0
align 10h
			
mov	eax, [eax+28h]
mov	ecx, [esp+68h+arg_8]
mov	esi, [eax+edi*4]
push	ecx
call	sub_10037350
add	esp, 4
test	eax, eax
jz	short loc_1003782C
cmp	[esp+68h+arg_4], 0
jz	short loc_100377D4
cmp	dword ptr [esi+20h], 0
jnz	short loc_1003782C
mov	eax, [esp+68h+arg_0]
cmp	eax, 0FFFFFFFFh
jz	short loc_100377EB
push	eax
push	esi
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jz	short loc_1003782C
mov	edx, [esp+68h+var_48]
push	edx
push	esi
call	sub_100168D0
add	esp, 8
test	eax, eax
jz	short loc_1003781C
cmp	dword ptr [esi+14h], 0
jnz	short loc_1003780C
test	dword ptr [esi+44h], 10000000h
jz	short loc_10037812
push	1
push	esi
push	ebp
jmp	short loc_10037824
mov	eax, [esp+68h+var_54]
push	1
push	esi
push	eax
jmp	short loc_10037824
mov	ecx, [esp+68h+var_58]
push	1
push	esi
push	ecx
			
call	sub_10036890
add	esp, 0Ch
			
mov	eax, [ebx+4]
inc	edi
cmp	edi, [eax+2Ch]
jl	loc_100377B0
mov	ebx, [ebx]
test	ebx, ebx
jnz	loc_10037790
mov	edx, [esp+68h+var_4C]
push	edx
call	SECMOD_ReleaseReadLock
mov	eax, [ebp+0]
mov	esi, [esp+6Ch+var_58]
add	esp, 4
test	eax, eax
jz	short loc_10037885
mov	ecx, [esi+4]
test	ecx, ecx
jnz	short loc_10037866
mov	[esi], eax
jmp	short loc_10037868
mov	[ecx], eax
mov	ecx, [esi+4]
mov	eax, [ebp+0]
mov	[eax+4], ecx
mov	edx, [ebp+4]
mov	[esi+4], edx
mov	dword ptr [ebp+4], 0
mov	dword ptr [ebp+0], 0
mov	ebx, ebp
call	sub_100367D0
push	ebp
call	PORT_Free_Util
mov	ebx, [esp+6Ch+var_54]
mov	eax, [ebx]
add	esp, 4
test	eax, eax
jz	short loc_100378C7
mov	ecx, [esi+4]
test	ecx, ecx
jnz	short loc_100378AA
mov	[esi], eax
jmp	short loc_100378AC
mov	[ecx], eax
mov	ecx, [esi+4]
mov	eax, [ebx]
mov	[eax+4], ecx
mov	edx, [ebx+4]
mov	[esi+4], edx
mov	dword ptr [ebx+4], 0
mov	dword ptr [ebx], 0
call	sub_100367D0
push	ebx
call	PORT_Free_Util
add	esp, 4
pop	ebp
pop	edi
mov	eax, esi
pop	esi
pop	ebx
mov	ecx, [esp+58h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 58h
retn
			
mov	ebx, eax
call	sub_100367D0
mov	eax, [esp+68h+var_58]
push	eax
call	PORT_Free_Util
add	esp, 4
xor	ebx, ebx
mov	eax, [esp+68h+var_54]
cmp	eax, ebx
jz	short loc_1003791C
mov	ebx, eax
call	sub_100367D0
mov	ecx, ebx
push	ecx
call	PORT_Free_Util
add	esp, 4
xor	ebx, ebx
cmp	ebp, ebx
jz	short loc_10037930
mov	ebx, ebp
call	sub_100367D0
push	ebp
call	PORT_Free_Util
add	esp, 4
mov	ecx, [esp+68h+var_4]
pop	ebp
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 58h
retn
align 10h
public PK11_GetBestSlotMultipleWithAttributes
			
sub	esp, 18h
push	ebx
mov	ebx, [esp+1Ch+arg_0]
push	ebp
push	esi
mov	esi, [ebx]
push	edi
xor	ebp, ebp
push	esi
mov	[esp+2Ch+var_14], ebp
call	sub_100358D0
mov	edi, eax
add	esp, 4
mov	[esp+28h+var_18], edi
cmp	edi, ebp
jz	short loc_1003797A
cmp	[edi], ebp
jnz	short loc_10037999
mov	eax, [esp+28h+arg_10]
push	eax
push	1
push	ebp
push	esi
call	PK11_GetAllTokens
add	esp, 10h
mov	[esp+28h+var_18], eax
mov	[esp+28h+var_14], 1
mov	edi, eax
cmp	edi, ebp
jz	loc_10037A53
push	ebp
call	PORT_SetError_Util
mov	[esp+2Ch+var_8], ebp
mov	ebp, [esp+2Ch+arg_C]
add	esp, 4
xor	ecx, ecx
test	ebp, ebp
jz	short loc_10037A0A
jmp	short loc_100379C0
align 10h
			
mov	eax, [ebx+ecx*4]
cmp	eax, 80000EFEh
jz	short loc_100379FB
cmp	eax, 220h
jz	short loc_100379FB
cmp	eax, 255h
jz	short loc_100379FB
cmp	eax, 250h
jz	short loc_100379FB
cmp	eax, 260h
jz	short loc_100379FB
cmp	eax, 270h
jz	short loc_100379FB
cmp	eax, 210h
jz	short loc_100379FB
cmp	eax, 200h
jnz	short loc_10037A02
			
inc	ecx
cmp	ecx, ebp
jb	short loc_100379C0
jmp	short loc_10037A0A
mov	[esp+28h+var_8], 1
			
mov	ecx, [edi+8]
push	ecx
call	ds:PR_Lock
mov	esi, [edi]
add	esp, 4
test	esi, esi
jz	short loc_10037A20
inc	dword ptr [esi+0Ch]
mov	edx, [edi+8]
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	ebx, esi
test	esi, esi
jnz	short loc_10037A74
cmp	[esp+28h+var_14], 0
jz	short loc_10037A4A
mov	ebx, edi
call	sub_100367D0
push	edi
call	PORT_Free_Util
add	esp, 4
call	PORT_GetError_Util
test	eax, eax
jnz	short loc_10037A60
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 18h
retn
align 10h
mov	ebp, [esp+28h+arg_C]
mov	esi, [ebx+8]
push	1
call	sub_10037350
add	esp, 4
test	eax, eax
jz	loc_10037B8F
mov	[esp+28h+var_C], 0
test	ebp, ebp
jz	loc_10037B2F
mov	esi, [esp+28h+arg_4]
mov	eax, [esp+28h+arg_8]
sub	eax, esi
mov	[esp+28h+var_10], eax
mov	eax, [esp+28h+arg_0]
sub	eax, esi
mov	[esp+28h+var_4], eax
jmp	short loc_10037AB7
mov	eax, [esp+28h+var_4]
mov	edi, [eax+esi]
mov	ebp, [ebx+8]
push	edi
push	ebp
call	PK11_DoesMechanism
add	esp, 8
test	eax, eax
jz	loc_10037B8B
mov	eax, [esp+28h+arg_4]
test	eax, eax
jz	short loc_10037ADC
cmp	dword ptr [esi], 0
jnz	short loc_10037AED
cmp	[esp+28h+arg_8], 0
jz	short loc_10037B19
mov	ecx, [esp+28h+var_10]
cmp	dword ptr [ecx+esi], 0
jz	short loc_10037B19
cmp	[esp+28h+arg_8], 0
jz	short loc_10037AFD
mov	edx, [esp+28h+var_10]
mov	ecx, [edx+esi]
jmp	short loc_10037AFF
xor	ecx, ecx
test	eax, eax
jz	short loc_10037B07
mov	eax, [esi]
jmp	short loc_10037B09
xor	eax, eax
push	ecx
push	eax
push	edi
push	ebp
call	sub_100364D0
add	esp, 10h
test	eax, eax
jnz	short loc_10037B8B
			
mov	eax, [esp+28h+var_C]
inc	eax
add	esi, 4
mov	[esp+28h+var_C], eax
cmp	eax, [esp+28h+arg_C]
jb	short loc_10037AB3
mov	edi, [esp+28h+var_18]
cmp	[esp+28h+var_8], 0
jz	short loc_10037B53
mov	eax, [ebx+8]
cmp	dword ptr [eax+24h], 0
jz	short loc_10037B53
mov	ecx, [esp+28h+arg_10]
push	ecx
push	1
push	eax
call	PK11_Authenticate
add	esp, 0Ch
test	eax, eax
jnz	short loc_10037B8F
			
mov	esi, [ebx+8]
lea	ecx, [esi+48h]
push	ecx
call	ds:PR_AtomicIncrement
push	ebx
push	edi
call	PK11_FreeSlotListElement
add	esp, 0Ch
cmp	[esp+28h+var_14], 0
jz	short loc_10037B81
mov	ebx, edi
call	sub_100367D0
push	edi
call	PORT_Free_Util
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 18h
retn
			
mov	edi, [esp+28h+var_18]
			
mov	edx, [edi+8]
push	edx
call	ds:PR_Lock
mov	esi, [ebx]
add	esp, 4
test	esi, esi
jnz	short loc_10037BB3
cmp	[ebx+4], esi
jnz	short loc_10037BAF
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_10037BAF
mov	esi, eax
			
test	esi, esi
jz	short loc_10037BB6
inc	dword ptr [esi+0Ch]
mov	eax, [edi+8]
push	eax
call	ds:PR_Unlock
push	ebx
push	edi
call	PK11_FreeSlotListElement
add	esp, 0Ch
mov	ebx, esi
test	esi, esi
jnz	loc_10037A70
jmp	loc_10037A33
align 10h
public PK11_GetBestSlotMultiple
			
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	eax
push	ecx
push	0
push	0
push	edx
call	PK11_GetBestSlotMultipleWithAttributes
add	esp, 14h
retn
align 10h
public PK11_GetBestSlot
			
mov	eax, [esp+arg_4]
push	eax
push	1
push	0
lea	ecx, [esp+0Ch+arg_0]
push	0
push	ecx
call	PK11_GetBestSlotMultipleWithAttributes
add	esp, 14h
retn
align 10h
public PK11_GetBestSlotWithAttributes
			
mov	eax, [esp+arg_C]
push	eax
push	1
lea	ecx, [esp+8+arg_8]
push	ecx
lea	edx, [esp+0Ch+arg_4]
push	edx
lea	eax, [esp+10h+arg_0]
push	eax
call	PK11_GetBestSlotMultipleWithAttributes
add	esp, 14h
retn
align 10h
sub	esp, 1Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+1Ch+var_4], eax
push	ebx
push	esi
mov	esi, [esp+24h+arg_0]
push	edi
xor	edi, edi
push	esi
mov	[esp+2Ch+var_14], esi
mov	[esp+2Ch+var_18], edi
mov	[esp+2Ch+var_1C], edi
call	sub_100358D0
mov	ebx, eax
add	esp, 4
cmp	ebx, edi
jz	short loc_10037C76
cmp	[ebx], edi
jnz	short loc_10037C8C
push	edi
push	edi
push	edi
push	esi
call	PK11_GetAllTokens
add	esp, 10h
mov	ebx, eax
mov	[esp+28h+var_18], 1
cmp	ebx, edi
jnz	short loc_10037CB1
push	0FFFFE006h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+1Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 1Ch
retn
mov	eax, [ebx+8]
push	ebp
mov	ebp, ds:PR_Lock
push	eax
call	ebp 
mov	edi, [ebx]
add	esp, 4
test	edi, edi
jz	short loc_10037CCA
inc	dword ptr [edi+0Ch]
mov	ecx, [ebx+8]
push	ecx
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	loc_10037D95
nop
mov	esi, [edi+8]
push	1
call	sub_10037350
add	esp, 4
test	eax, eax
jz	short loc_10037D44
cmp	dword ptr [esi+30h], 0
jnz	short loc_10037D00
mov	edx, [esi+3Ch]
push	edx
call	ebp 
add	esp, 4
mov	edx, [esp+2Ch+var_14]
mov	eax, [esi]
lea	ecx, [esp+2Ch+var_10]
push	ecx
mov	ecx, [esi+40h]
push	edx
mov	edx, [eax+22h]
push	ecx
call	edx
add	esp, 0Ch
cmp	dword ptr [esi+30h], 0
mov	ebp, eax
jnz	short loc_10037D2D
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Unlock
add	esp, 4
test	ebp, ebp
jnz	short loc_10037D3E
mov	eax, [esp+2Ch+var_C]
test	eax, eax
jz	short loc_10037D3E
cmp	eax, 0FFFFFFFFh
jnz	short loc_10037D87
			
mov	ebp, ds:PR_Lock
mov	ecx, [ebx+8]
push	ecx
call	ebp 
mov	esi, [edi]
add	esp, 4
test	esi, esi
jnz	short loc_10037D64
cmp	[edi+4], esi
jnz	short loc_10037D60
mov	eax, [ebx]
cmp	eax, edi
jz	short loc_10037D60
mov	esi, eax
			
test	esi, esi
jz	short loc_10037D67
inc	dword ptr [esi+0Ch]
mov	edx, [ebx+8]
push	edx
call	ds:PR_Unlock
push	edi
push	ebx
call	PK11_FreeSlotListElement
add	esp, 0Ch
mov	edi, esi
test	esi, esi
jnz	loc_10037CE0
jmp	short loc_10037D95
push	edi
push	ebx
mov	[esp+34h+var_1C], eax
call	PK11_FreeSlotListElement
add	esp, 8
			
cmp	[esp+2Ch+var_18], 0
pop	ebp
jz	short loc_10037DAB
call	sub_100367D0
push	ebx
call	PORT_Free_Util
add	esp, 4
mov	ecx, [esp+28h+var_4]
mov	eax, [esp+28h+var_1C]
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 1Ch
retn
align 10h
public PK11_RandomUpdate
push	ecx
push	esi
push	0
push	1
push	0
lea	eax, [esp+14h+var_4]
push	0
push	eax
mov	[esp+1Ch+var_4], 80000EFEh
call	PK11_GetBestSlotMultipleWithAttributes
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	short loc_10037E3C
call	SECMOD_GetInternalModule
test	eax, eax
jnz	short loc_10037E11
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
pop	ecx
retn
cmp	dword ptr [eax+0Ch], 0
jz	short loc_10037E20
call	PK11_GetInternalKeySlot
mov	esi, eax
jmp	short loc_10037E32
mov	ecx, [eax+28h]
mov	esi, [ecx]
lea	edx, [esi+48h]
push	edx
call	ds:PR_AtomicIncrement
add	esp, 4
test	esi, esi
jnz	short loc_10037E3C
or	eax, 0FFFFFFFFh
pop	esi
pop	ecx
retn
			
mov	eax, [esi+3Ch]
push	ebx
mov	ebx, [esi+14h]
push	ebp
push	edi
push	eax
call	ds:PR_Lock
mov	ebp, [esp+18h+arg_4]
mov	edx, [esp+18h+arg_0]
mov	ecx, [esi]
mov	eax, [esi+38h]
mov	ecx, [ecx+0FEh]
push	ebp
push	edx
push	eax
call	ecx
mov	edx, [esi+3Ch]
push	edx
mov	edi, eax
call	ds:PR_Unlock
add	esp, 14h
test	edi, edi
jz	short loc_10037E8B
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	edi, 0FFFFFFFFh
jmp	short loc_10037E8D
xor	edi, edi
lea	eax, [esi+48h]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_10037EA7
push	esi
call	sub_10035590
add	esp, 4
test	ebx, ebx
jnz	short loc_10037F0E
call	SECMOD_GetInternalModule
test	eax, eax
jnz	short loc_10037EC5
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
xor	esi, esi
jmp	short loc_10037EE6
cmp	dword ptr [eax+0Ch], 0
jz	short loc_10037ED4
call	PK11_GetInternalKeySlot
mov	esi, eax
jmp	short loc_10037EE6
mov	ecx, [eax+28h]
mov	esi, [ecx]
lea	edx, [esi+48h]
push	edx
call	ds:PR_AtomicIncrement
add	esp, 4
			
mov	eax, [esp+14h+arg_0]
push	ebp
push	eax
push	esi
call	PK11_SeedRandom
lea	ecx, [esi+48h]
push	ecx
mov	edi, eax
call	ds:PR_AtomicDecrement
add	esp, 10h
test	eax, eax
jnz	short loc_10037F0E
push	esi
call	sub_10035590
add	esp, 4
			
mov	eax, edi
pop	edi
pop	ebp
pop	ebx
pop	esi
pop	ecx
retn
align 10h
public PK11_GenerateRandom
			
push	ecx
push	esi
push	0
push	1
push	0
lea	eax, [esp+14h+var_4]
push	0
push	eax
mov	[esp+1Ch+var_4], 80000EFEh
call	PK11_GetBestSlotMultipleWithAttributes
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	short loc_10037F4B
or	eax, 0FFFFFFFFh
pop	esi
pop	ecx
retn
mov	ecx, [esp+8+arg_4]
mov	edx, [esp+8+arg_0]
push	edi
push	ecx
push	edx
push	esi
call	PK11_GenerateRandomOnSlot
mov	edi, eax
lea	eax, [esi+48h]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 10h
test	eax, eax
jnz	short loc_10037F78
push	esi
call	sub_10035590
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ecx
retn
align 10h
public PK11_ResetToken
sub	esp, 24h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+24h+var_4], eax
push	ebx
mov	ebx, [esp+28h+arg_4]
push	esi
mov	esi, [esp+2Ch+arg_0]
lea	edx, [esi+0F9h]
mov	eax, edx
push	edi
lea	edi, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10037FA4
sub	eax, edi
mov	edi, eax
cmp	edi, 20h
jbe	short loc_10037FB9
mov	edi, 20h
push	edi		
push	edx		
lea	eax, [esp+38h+Dst]
push	eax		
call	memcpy
add	esp, 0Ch
cmp	edi, 20h
jnb	short loc_10037FE4
mov	ecx, 20h
sub	ecx, edi
push	ecx		
lea	edx, [esp+edi+34h+Dst]
push	20h		
push	edx		
call	memset
add	esp, 0Ch
mov	eax, [esi+3Ch]
push	eax
call	ds:PR_Lock
mov	ecx, [esi]
mov	edx, [esi+40h]
mov	eax, [ecx+3Ah]
push	edx
call	eax
add	esp, 8
mov	dword ptr [esi+38h], 0
test	ebx, ebx
jz	short loc_1003801B
mov	eax, ebx
lea	edx, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10038010
sub	eax, edx
jmp	short loc_1003801D
xor	eax, eax
mov	ecx, [esi]
mov	ecx, [ecx+26h]
lea	edx, [esp+30h+Dst]
push	edx
push	eax
mov	eax, [esi+40h]
push	ebx
push	eax
call	ecx
push	1
push	esi
mov	edi, eax
call	sub_10036D20
mov	edx, [esi+3Ch]
push	edx
call	ds:PR_Unlock
add	esp, 1Ch
test	edi, edi
jz	short loc_1003806E
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+24h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 24h
retn
mov	esi, [esi+13Ch]
mov	eax, [esi+28h]
push	esi
push	eax
call	sub_100487C0
mov	ecx, [esp+38h+var_4]
add	esp, 8
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 24h
retn
align 10h
public PK11_WaitForTokenEvent
push	ecx
push	ebp
push	esi
mov	esi, [esp+0Ch+arg_0]
xor	ebp, ebp
mov	[esp+0Ch+var_4], ebp
cmp	[esi+0Ch], ebp
jz	short loc_100380B8
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
cmp	[esp+0Ch+arg_C], ebp
jnz	short loc_100380CD
push	5
call	ds:PR_SecondsToInterval
add	esp, 4
mov	[esp+0Ch+arg_C], eax
xor	eax, eax
cmp	[esp+0Ch+arg_4], ebp
push	edi
setz	al
mov	edi, eax
cmp	[esp+10h+arg_10], ebp
jnz	short loc_100380EA
movzx	ecx, word ptr [esi+80h]
mov	[esp+10h+arg_10], ecx
push	ebx
push	1
call	sub_10037350
add	esp, 4
cmp	eax, edi
jnz	short loc_1003814E
mov	ebx, [esp+14h+arg_8]
lea	ecx, [ecx+0]
test	edi, edi
jz	short loc_10038111
movzx	edx, word ptr [esi+80h]
cmp	[esp+14h+arg_10], edx
jnz	short loc_1003815F
test	ebx, ebx
jz	short loc_1003816A
cmp	ebx, 0FFFFFFFFh
jz	short loc_10038135
call	ds:PR_IntervalNow
test	ebp, ebp
jnz	short loc_1003812D
mov	[esp+14h+var_4], eax
mov	ebp, 1
sub	eax, [esp+14h+var_4]
cmp	eax, ebx
ja	short loc_1003816A
mov	eax, [esp+14h+arg_C]
push	eax
call	ds:PR_Sleep
push	1
call	sub_10037350
add	esp, 8
cmp	eax, edi
jz	short loc_10038100
xor	eax, eax
test	edi, edi
setnz	al
pop	ebx
pop	edi
pop	esi
pop	ebp
lea	eax, [eax+eax+1]
pop	ecx
retn
pop	ebx
pop	edi
pop	esi
mov	eax, 2
pop	ebp
pop	ecx
retn
			
xor	eax, eax
test	edi, edi
setz	al
pop	ebx
pop	edi
pop	esi
pop	ebp
lea	eax, [eax+eax+1]
pop	ecx
retn
align 10h
public SECMOD_HasRootCerts
			
push	ecx
push	ebp
call	SECMOD_GetDefaultModuleListLock
mov	ebp, eax
mov	[esp+8+var_4], 0
test	ebp, ebp
jnz	short loc_100381A7
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebp
pop	ecx
retn
push	ebx
push	ebp
call	SECMOD_GetReadLock
add	esp, 4
call	SECMOD_GetDefaultModuleList
mov	ebx, eax
test	ebx, ebx
jz	short loc_10038219
push	esi
push	edi
mov	edi, edi
mov	eax, [ebx+4]
xor	edi, edi
cmp	[eax+2Ch], edi
jle	short loc_100381F6
lea	ebx, [ebx+0]
mov	eax, [eax+28h]
mov	esi, [eax+edi*4]
push	1
call	sub_10037350
add	esp, 4
test	eax, eax
jz	short loc_100381ED
cmp	dword ptr [esi+11Ch], 0
jnz	short loc_1003820F
mov	eax, [ebx+4]
inc	edi
cmp	edi, [eax+2Ch]
jl	short loc_100381D0
mov	ebx, [ebx]
test	ebx, ebx
jnz	short loc_100381C0
pop	edi
pop	esi
push	ebp
call	SECMOD_ReleaseReadLock
mov	eax, [esp+10h+var_4]
add	esp, 4
pop	ebx
pop	ebp
pop	ecx
retn
pop	edi
mov	[esp+10h+var_4], 1
pop	esi
push	ebp
call	SECMOD_ReleaseReadLock
mov	eax, [esp+10h+var_4]
add	esp, 4
pop	ebx
pop	ebp
pop	ecx
retn
align 10h
public PK11_FindSlotsByNames
sub	esp, 10h
push	ebx
push	esi
call	SECMOD_GetDefaultModuleListLock
xor	ebx, ebx
mov	esi, eax
mov	[esp+18h+var_8], esi
mov	[esp+18h+var_C], ebx
mov	[esp+18h+var_10], ebx
cmp	esi, ebx
jnz	short loc_10038263
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
pop	esi
xor	eax, eax
pop	ebx
add	esp, 10h
retn
push	ebp
push	0Ch
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 4
cmp	ebp, ebx
jz	short loc_10038290
mov	[ebp+0], ebx
mov	[ebp+4], ebx
call	ds:PR_NewLock
mov	[ebp+8], eax
cmp	eax, ebx
jnz	short loc_100382A6
push	ebp
call	PORT_Free_Util
add	esp, 4
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 10h
retn
push	edi
mov	edi, [esp+20h+arg_0]
mov	[esp+20h+var_4], ebp
cmp	edi, ebx
jz	short loc_100382B7
cmp	[edi], bl
jnz	short loc_100382D7
mov	eax, [esp+20h+arg_4]
cmp	eax, ebx
jz	short loc_100382C3
cmp	[eax], bl
jnz	short loc_100382D7
mov	eax, [esp+20h+arg_8]
cmp	eax, ebx
jz	loc_10038495
cmp	[eax], bl
jz	loc_10038495
			
push	esi
call	SECMOD_GetReadLock
add	esp, 4
call	SECMOD_GetDefaultModuleList
mov	ebx, eax
test	ebx, ebx
jz	loc_1003843C
nop
mov	esi, [ebx+4]
test	esi, esi
jz	loc_10038430
test	edi, edi
jz	short loc_1003833D
mov	eax, [esi+10h]
test	eax, eax
jz	loc_10038424
mov	ecx, edi
lea	esp, [esp+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10038330
test	dl, dl
jz	short loc_1003832C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10038330
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10038310
xor	eax, eax
jmp	short loc_10038335
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	loc_10038424
xor	edi, edi
cmp	[esi+2Ch], edi
jle	loc_10038420
jmp	short loc_10038350
align 10h
			
mov	eax, [esi+28h]
test	eax, eax
jz	loc_10038418
mov	esi, [eax+edi*4]
test	esi, esi
jz	loc_10038418
cmp	[esp+20h+arg_C], 0
jz	short loc_1003837F
push	1
call	sub_10037350
add	esp, 4
test	eax, eax
jz	loc_10038409
mov	ecx, [esp+20h+arg_8]
test	ecx, ecx
jz	short loc_100383BA
lea	eax, [esi+0F9h]
test	eax, eax
jz	short loc_10038409
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_100383B1
test	dl, dl
jz	short loc_100383AD
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_100383B1
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10038391
xor	eax, eax
jmp	short loc_100383B6
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_10038409
mov	ecx, [esp+20h+arg_4]
test	ecx, ecx
jz	short loc_100383F9
lea	eax, [esi+0B8h]
test	eax, eax
jz	short loc_10038409
lea	esp, [esp+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_100383F0
test	dl, dl
jz	short loc_100383EC
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_100383F0
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_100383D0
xor	eax, eax
jmp	short loc_100383F5
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_10038409
push	1
push	esi
push	ebp
call	sub_10036890
add	esp, 0Ch
inc	[esp+20h+var_C]
			
mov	esi, [ebx+4]
inc	edi
cmp	edi, [esi+2Ch]
jl	loc_10038350
jmp	short loc_10038420
			
mov	[esp+20h+var_10], 0FFFFFFFFh
			
mov	edi, [esp+20h+arg_0]
			
mov	ebx, [ebx]
test	ebx, ebx
jnz	loc_100382F0
jmp	short loc_10038438
mov	[esp+20h+var_10], 0FFFFFFFFh
mov	esi, [esp+20h+var_8]
push	esi
call	SECMOD_ReleaseReadLock
add	esp, 4
cmp	[esp+20h+var_C], 0
jz	short loc_10038453
cmp	[esp+20h+var_10], 0FFFFFFFFh
jnz	short loc_10038489
push	0FFFFE041h
call	PORT_SetError_Util
mov	ebx, ebp
call	sub_100367D0
push	ebp
call	PORT_Free_Util
add	esp, 8
cmp	[esp+20h+var_10], 0FFFFFFFFh
mov	[esp+20h+var_4], 0
jnz	short loc_10038489
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
			
mov	eax, [esp+20h+var_4]
pop	edi
pop	ebp
pop	esi
pop	ebx
add	esp, 10h
retn
			
push	1
call	PK11_GetInternalKeySlot
push	eax
push	ebp
call	sub_10036890
add	esp, 0Ch
pop	edi
mov	eax, ebp
pop	ebp
pop	esi
pop	ebx
add	esp, 10h
retn
public PK11_FindSlotByName
sub	esp, 8
call	SECMOD_GetDefaultModuleListLock
mov	[esp+8+var_4], eax
mov	[esp+8+var_8], 0
test	eax, eax
jnz	short loc_100384DA
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 8
retn
push	ebp
mov	ebp, [esp+0Ch+arg_0]
test	ebp, ebp
jz	loc_100385BB
cmp	byte ptr [ebp+0], 0
jz	loc_100385BB
push	ebx
push	esi
push	eax
call	SECMOD_GetReadLock
add	esp, 4
call	SECMOD_GetDefaultModuleList
mov	ebx, eax
test	ebx, ebx
jz	loc_10038590
push	edi
lea	esp, [esp+0]
mov	eax, [ebx+4]
xor	edi, edi
cmp	[eax+2Ch], edi
jle	short loc_10038589
lea	ebx, [ebx+0]
mov	eax, [eax+28h]
mov	esi, [eax+edi*4]
push	1
call	sub_10037350
add	esp, 4
test	eax, eax
jz	short loc_10038569
mov	ecx, ebp
lea	eax, [esi+0F9h]
lea	esp, [esp+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10038560
test	dl, dl
jz	short loc_1003855C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10038560
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10038540
xor	eax, eax
jmp	short loc_10038565
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_10038574
mov	eax, [ebx+4]
inc	edi
cmp	edi, [eax+2Ch]
jl	short loc_10038520
jmp	short loc_10038589
lea	ecx, [esi+48h]
push	ecx
call	ds:PR_AtomicIncrement
add	esp, 4
mov	[esp+18h+var_8], esi
test	esi, esi
jnz	short loc_1003858F
			
mov	ebx, [ebx]
test	ebx, ebx
jnz	short loc_10038510
pop	edi
mov	edx, [esp+14h+var_4]
push	edx
call	SECMOD_ReleaseReadLock
mov	esi, [esp+18h+var_8]
add	esp, 4
test	esi, esi
jnz	short loc_100385B2
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	ebx
pop	ebp
add	esp, 8
retn
			
pop	ebp
add	esp, 8
jmp	PK11_GetInternalKeySlot
align 10h
cmp	dword_100BADFC,	0
jnz	short locret_100385E8
call	sub_1001B490
mov	dword_100BADFC,	eax
jmp	loc_100357B0
retn
align 10h
public SECMOD_GetInternalModule
			
mov	eax, dword_100BADF0
retn
align 10h
public SECMOD_GetDefaultModuleList
			
mov	eax, dword_100BADE4
retn
align 10h
public SECMOD_GetDeadModuleList
mov	eax, dword_100BADEC
retn
align 10h
public SECMOD_GetDBModuleList
mov	eax, dword_100BADE8
retn
align 10h
public SECMOD_GetDefaultModuleListLock
			
mov	eax, dword_100BADFC
retn
align 10h
			
mov	eax, dword_100BADFC
push	ebx
xor	ebx, ebx
test	eax, eax
jnz	short loc_1003865D
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
retn
push	eax
call	SECMOD_GetReadLock
mov	ecx, [esp+8+arg_0]
mov	edx, [ecx+2Ch]
add	esp, 4
xor	eax, eax
test	edx, edx
jle	short loc_1003869E
mov	ecx, [ecx+28h]
push	edi
mov	edi, [esp+8+arg_4]
push	esi
lea	esp, [esp+0]
mov	esi, [ecx]
cmp	[esi+40h], edi
jz	short loc_10038691
inc	eax
add	ecx, 4
cmp	eax, edx
jl	short loc_10038680
jmp	short loc_1003869C
push	esi
call	PK11_ReferenceSlot
add	esp, 4
mov	ebx, eax
pop	esi
pop	edi
mov	eax, dword_100BADFC
push	eax
call	SECMOD_ReleaseReadLock
add	esp, 4
test	ebx, ebx
jnz	short loc_100386BD
push	0FFFFE043h
call	PORT_SetError_Util
add	esp, 4
mov	eax, ebx
pop	ebx
retn
align 10h
public SECMOD_FindSlot
push	ecx
mov	eax, dword_100BADFC
push	edi
xor	edi, edi
mov	[esp+8+var_4], edi
cmp	eax, edi
jnz	short loc_100386F3
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
pop	ecx
retn
push	ebx
push	esi
push	eax
call	SECMOD_GetReadLock
mov	ebx, [esp+14h+arg_0]
add	esp, 4
cmp	[ebx+2Ch], edi
jle	short loc_10038776
push	ebp
mov	ebp, [esp+14h+arg_4]
lea	esp, [esp+0]
mov	eax, [ebx+28h]
mov	esi, [eax+edi*4]
push	esi
call	PK11_IsPresent
add	esp, 4
push	esi
test	eax, eax
jz	short loc_1003872B
call	PK11_GetTokenName
jmp	short loc_10038730
call	PK11_GetSlotName
mov	ecx, eax
add	esp, 4
mov	eax, ebp
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10038757
test	dl, dl
jz	short loc_10038753
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10038757
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10038737
xor	eax, eax
jmp	short loc_1003875C
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_10038768
inc	edi
cmp	edi, [ebx+2Ch]
jl	short loc_10038710
jmp	short loc_10038775
push	esi
call	PK11_ReferenceSlot
add	esp, 4
mov	[esp+14h+var_4], eax
pop	ebp
mov	ecx, dword_100BADFC
push	ecx
call	SECMOD_ReleaseReadLock
mov	esi, [esp+14h+var_4]
add	esp, 4
test	esi, esi
jnz	short loc_1003879A
push	0FFFFE043h
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	ebx
pop	edi
pop	ecx
retn
align 10h
public PK11_GetModInfo
mov	eax, [esp+arg_0]
mov	eax, [eax+1Ch]
test	eax, eax
jnz	short loc_100387BF
or	eax, 0FFFFFFFFh
retn
mov	ecx, [esp+arg_4]
mov	edx, [eax+0Ah]
push	esi
push	ecx
call	edx
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_100387E2
push	esi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
mov	eax, esi
neg	eax
sbb	eax, eax
pop	esi
retn
align 10h
public PK11_IsFIPS
mov	eax, dword_100BADF0
test	eax, eax
jz	short loc_10038803
cmp	dword ptr [eax+4], 0
jz	short loc_10038803
mov	eax, [eax+0Ch]
retn
			
xor	eax, eax
retn
align 10h
public SECMOD_UpdateModule
			
push	esi
mov	esi, [esp+4+arg_0]
push	esi
call	sub_1002DC10
add	esp, 4
test	eax, eax
jnz	short loc_1003882B
push	esi
call	sub_1002DBC0
add	esp, 4
pop	esi
retn
align 10h
public SECMOD_PubMechFlagstoInternal
mov	eax, [esp+arg_0]
test	eax, 8000000h
jz	short locret_10038845
and	eax, 0F7FFFFFFh
or	eax, 80000000h
retn
align 10h
public SECMOD_InternaltoPubMechFlags
mov	eax, [esp+arg_0]
test	eax, eax
jns	short locret_10038862
and	eax, 77FFFFFFh
or	eax, 8000000h
retn
align 10h
public SECMOD_IsModulePresent
mov	eax, dword_100BADFC
push	esi
xor	esi, esi
test	eax, eax
jnz	short loc_1003888D
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
push	eax
call	SECMOD_GetReadLock
mov	eax, dword_100BADE4
add	esp, 4
test	eax, eax
jz	short loc_100388B6
mov	ecx, [esp+4+arg_0]
mov	edx, [eax+4]
test	[edx+40h], ecx
jz	short loc_100388B0
mov	esi, 1
mov	eax, [eax]
test	eax, eax
jnz	short loc_100388A3
mov	eax, dword_100BADFC
push	eax
call	SECMOD_ReleaseReadLock
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
public SECMOD_ReferenceModule
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+20h]
push	eax
call	ds:PR_Lock
mov	ecx, [esi+20h]
inc	dword ptr [esi+24h]
push	ecx
call	ds:PR_Unlock
add	esp, 8
mov	eax, esi
pop	esi
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
push	edi
xor	edi, edi
cmp	[esp+8+arg_4], edi
jz	short loc_1003893C
mov	eax, [esi+20h]
push	eax
call	ds:PR_Lock
mov	eax, [esi+2Ch]
add	esp, 4
lea	ecx, [eax-1]
mov	[esi+2Ch], ecx
cmp	eax, 1
jnz	short loc_1003892B
mov	edi, eax
mov	edx, [esi+20h]
push	edx
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	short loc_1003897A
cmp	esi, dword_100BADF8
jnz	short loc_1003894E
mov	dword_100BADF8,	0
cmp	dword ptr [esi+8], 0
jz	short loc_1003895D
push	esi
call	sub_10024CE0
add	esp, 4
mov	eax, [esi+20h]
push	eax
call	ds:PR_DestroyLock
mov	ecx, [esi]
push	0
push	ecx
call	PORT_FreeArena_Util
add	esp, 0Ch
dec	dword_100BAE00
pop	edi
pop	esi
retn
align 10h
public SECMOD_CanDeleteInternalModule
xor	eax, eax
cmp	dword_100BADF8,	eax
setz	al
retn
align 10h
public SECMOD_UpdateSlotList
			
sub	esp, 14h
push	ebx
push	ebp
xor	ebp, ebp
xor	ebx, ebx
mov	[esp+1Ch+var_10], ebp
cmp	dword_100BADFC,	ebp
jnz	short loc_100389BB
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
push	esi
mov	esi, [esp+20h+arg_0]
mov	eax, [esi+20h]
push	edi
push	eax
call	ds:PR_Lock
mov	ecx, [esi+1Ch]
mov	eax, [ecx+12h]
lea	edx, [esp+28h+var_14]
push	edx
push	ebp
push	ebp
call	eax
add	esp, 10h
cmp	eax, ebp
jnz	loc_10038B6B
mov	eax, [esi+2Ch]
mov	ecx, [esp+24h+var_14]
cmp	ecx, eax
jnz	short loc_10038A07
mov	ecx, [esi+20h]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
jnb	short loc_10038A28
push	0FFFFE097h
call	PORT_SetError_Util
mov	eax, [esi+20h]
add	esp, 4
push	eax
call	ds:PR_Unlock
add	esp, 4
jmp	loc_10038B95
lea	edx, ds:0[ecx*4]
push	edx
call	PORT_Alloc_Util
add	esp, 4
mov	[esp+24h+var_10], eax
cmp	eax, ebp
jz	loc_10038B7A
mov	edx, [esp+24h+var_10]
mov	eax, [esi+1Ch]
mov	eax, [eax+12h]
lea	ecx, [esp+24h+var_14]
push	ecx
push	edx
push	ebp
call	eax
add	esp, 0Ch
cmp	eax, ebp
jnz	loc_10038B6B
mov	ecx, [esi+20h]
push	ecx
call	ds:PR_Unlock
mov	edx, [esi]
push	edx
call	PORT_ArenaMark_Util
add	esp, 8
mov	[esp+24h+var_C], eax
cmp	eax, ebp
jz	loc_10038B89
mov	eax, [esp+24h+var_14]
mov	edx, [esi]
lea	ecx, ds:0[eax*4]
push	ecx
push	edx
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esp+24h+var_8], eax
cmp	[esp+24h+var_14], ebp
jbe	short loc_10038AFB
mov	ebx, [esp+24h+var_10]
sub	eax, ebx
mov	[esp+24h+var_4], eax
mov	edi, edi
mov	eax, [ebx]
push	eax
push	esi
call	sub_10038640
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10038AEA
push	esi
call	sub_10035430
mov	edi, eax
add	esp, 4
test	edi, edi
jz	loc_10038B8D
mov	ecx, [ebx]
push	edi
push	ecx
push	esi
call	sub_100371A0
push	edi
push	0
call	sub_1004A870
add	esp, 14h
mov	edx, [esp+24h+var_4]
mov	[edx+ebx], edi
inc	ebp
add	ebx, 4
cmp	ebp, [esp+24h+var_14]
jb	short loc_10038AB0
push	0
call	sub_1004A8D0
mov	edx, [esp+28h+var_10]
push	edx
call	PORT_Free_Util
mov	eax, [esp+2Ch+var_C]
mov	ecx, [esi]
push	eax
push	ecx
call	PORT_ArenaUnmark_Util
mov	edx, dword_100BADFC
push	edx
call	NSSRWLock_LockWrite
mov	edx, dword_100BADFC
mov	eax, [esp+38h+var_8]
mov	ecx, [esp+38h+var_14]
mov	edi, [esi+2Ch]
mov	ebx, [esi+28h]
push	edx
mov	[esi+28h], eax
mov	[esi+2Ch], ecx
call	NSSRWLock_UnlockWrite
add	esp, 18h
xor	esi, esi
test	edi, edi
jz	short loc_10038B61
mov	edi, edi
mov	eax, [ebx+esi*4]
push	eax
call	PK11_FreeSlot
inc	esi
add	esp, 4
cmp	esi, edi
jb	short loc_10038B50
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
			
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
mov	eax, [esi+20h]
push	eax
call	ds:PR_Unlock
add	esp, 4
jmp	short loc_10038B95
mov	ebp, eax
jmp	short loc_10038B95
mov	ebp, [esp+24h+var_C]
mov	ebx, [esp+24h+var_8]
			
mov	eax, [esp+24h+var_10]
test	eax, eax
jz	short loc_10038BA6
push	eax
call	PORT_Free_Util
add	esp, 4
test	ebx, ebx
jz	short loc_10038BC9
xor	edi, edi
cmp	[esp+24h+var_14], edi
jbe	short loc_10038BC9
mov	eax, [ebx+edi*4]
test	eax, eax
jz	short loc_10038BC9
push	eax
call	PK11_FreeSlot
inc	edi
add	esp, 4
cmp	edi, [esp+24h+var_14]
jb	short loc_10038BB2
			
test	ebp, ebp
jz	short loc_10038BD9
mov	ecx, [esi]
push	ebp
push	ecx
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
align 10h
			
sub	esp, 8
cmp	dword_100BADFC,	0
mov	[esp+8+var_8], 0
mov	[esp+8+var_4], 0FFFFE098h
jnz	short loc_10038C1E
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 8
retn
push	esi
mov	esi, ds:PR_Lock
push	edi
mov	edi, [esp+10h+arg_0]
mov	eax, [edi+20h]
push	eax
call	esi 
mov	eax, [edi+68h]
add	esp, 4
test	al, 1
jz	short loc_10038C5F
mov	ecx, [edi+20h]
and	eax, 0FFFFFFFEh
push	ecx
mov	[edi+68h], eax
call	ds:PR_Unlock
push	0FFFFE098h
call	PORT_SetError_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
add	esp, 8
retn
or	eax, 2
push	ebx
push	ebp
mov	[edi+68h], eax
test	al, 2
jz	loc_10038D72
nop
mov	edx, [edi+20h]
push	edx
call	ds:PR_Unlock
push	edi
call	SECMOD_UpdateSlotList
mov	eax, dword_100BADFC
push	eax
call	SECMOD_GetReadLock
xor	ebx, ebx
add	esp, 0Ch
cmp	[edi+2Ch], ebx
jle	short loc_10038CD6
mov	ecx, [edi+28h]
mov	esi, [ecx+ebx*4]
cmp	dword ptr [esi+0Ch], 0
jnz	short loc_10038CCA
movzx	ebp, word ptr [esi+80h]
push	esi
mov	[esp+1Ch+var_8], 1
call	PK11_IsPresent
add	esp, 4
cmp	[esi+82h], bp
jnz	short loc_10038D19
cmp	[esi+84h], eax
jnz	short loc_10038D19
inc	ebx
cmp	ebx, [edi+2Ch]
jl	short loc_10038C95
mov	esi, ds:PR_Lock
mov	edx, dword_100BADFC
push	edx
call	SECMOD_ReleaseReadLock
add	esp, 4
cmp	dword ptr [edi+2Ch], 0
jz	short loc_10038CF2
cmp	[esp+18h+var_8], 0
jz	short loc_10038D5B
test	[esp+18h+arg_4], 1
jnz	short loc_10038D69
mov	eax, [esp+18h+arg_8]
push	eax
call	ds:PR_Sleep
mov	ecx, [edi+20h]
push	ecx
call	esi 
add	esp, 8
test	byte ptr [edi+68h], 2
jnz	loc_10038C70
jmp	short loc_10038D72
			
mov	edx, dword_100BADFC
push	edx
mov	[esi+84h], eax
mov	[esi+82h], bp
call	SECMOD_ReleaseReadLock
mov	eax, [edi+20h]
push	eax
call	ds:PR_Lock
mov	ecx, [edi+20h]
and	dword ptr [edi+68h], 0FFFFFFFEh
push	ecx
call	ds:PR_Unlock
push	esi
call	PK11_ReferenceSlot
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 8
retn
mov	edx, [edi+20h]
mov	[esp+18h+var_4], 0FFFFE043h
push	edx
jmp	short loc_10038D6D
mov	eax, [edi+20h]
push	eax
call	esi 
add	esp, 4
			
mov	ecx, [edi+20h]
and	dword ptr [edi+68h], 0FFFFFFFEh
push	ecx
call	ds:PR_Unlock
mov	edx, [esp+1Ch+var_4]
push	edx
call	PORT_SetError_Util
add	esp, 8
pop	ebp
pop	ebx
pop	edi
xor	eax, eax
pop	esi
add	esp, 8
retn
align 10h
public SECMOD_WaitForAnyTokenEvent
push	ecx
push	esi
call	sub_10024480
mov	esi, [esp+8+arg_0]
test	eax, eax
jz	loc_10038EE8
cmp	byte ptr [esi+6Ch], 2
jnz	short loc_10038DC3
cmp	byte ptr [esi+6Dh], 1
jb	loc_10038EE8
mov	eax, [esi+20h]
push	ebx
mov	ebx, ds:PR_Lock
push	ebp
push	edi
push	eax
call	ebx 
mov	eax, [esi+68h]
mov	ebp, ds:PR_Unlock
add	esp, 4
test	al, 1
jnz	short loc_10038E1A
mov	ecx, [esi+20h]
or	eax, 4
push	ecx
mov	[esi+68h], eax
call	ebp 
mov	edx, [esi+1Ch]
mov	ecx, [esp+18h+arg_4]
mov	edx, [edx+10Eh]
push	0
lea	eax, [esp+1Ch+var_4]
push	eax
push	ecx
call	edx
mov	edi, eax
mov	eax, [esi+20h]
push	eax
call	ebx 
and	dword ptr [esi+68h], 0FFFFFFFBh
add	esp, 14h
test	byte ptr [esi+68h], 1
jz	short loc_10038E39
mov	ecx, [esi+20h]
and	dword ptr [esi+68h], 0FFFFFFFEh
push	ecx
call	ebp 
push	0FFFFE098h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	ebp
pop	ebx
xor	eax, eax
pop	esi
pop	ecx
retn
mov	edx, [esi+20h]
push	edx
call	ebp 
add	esp, 4
cmp	edi, 54h
jnz	short loc_10038E60
mov	eax, [esp+14h+arg_8]
mov	ecx, [esp+14h+arg_4]
push	eax
push	ecx
push	esi
call	sub_10038BF0
add	esp, 0Ch
pop	edi
pop	ebp
pop	ebx
pop	esi
pop	ecx
retn
test	edi, edi
jz	short loc_10038E98
cmp	edi, 190h
jnz	short loc_10038E81
push	0FFFFE098h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
pop	ebx
xor	eax, eax
pop	esi
pop	ecx
retn
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	ebp
pop	ebx
xor	eax, eax
pop	esi
pop	ecx
retn
mov	edx, [esp+14h+var_4]
push	edx
push	esi
call	sub_10038640
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10038EC6
push	esi
call	SECMOD_UpdateSlotList
mov	eax, [esp+18h+var_4]
push	eax
push	esi
call	sub_10038640
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_10038EE0
mov	eax, [edi+13Ch]
test	eax, eax
jz	short loc_10038EE0
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_10038EE0
push	eax
call	sub_1004C2C0
add	esp, 4
			
mov	eax, edi
pop	edi
pop	ebp
pop	ebx
pop	esi
pop	ecx
retn
			
mov	ecx, [esp+8+arg_8]
mov	edx, [esp+8+arg_4]
push	ecx
push	edx
push	esi
call	sub_10038BF0
add	esp, 0Ch
pop	esi
pop	ecx
retn
align 10h
public SECMOD_CancelWait
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+20h]
push	edi
push	eax
xor	edi, edi
call	ds:PR_Lock
or	dword ptr [esi+68h], 1
mov	eax, [esi+68h]
add	esp, 4
test	al, 4
jz	loc_10038FA6
call	sub_10024480
test	eax, eax
jnz	short loc_10038F4F
push	0FFFFE001h
call	PORT_SetError_Util
mov	ecx, [esi+20h]
add	esp, 4
push	ecx
or	edi, 0FFFFFFFFh
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
mov	ecx, [esi+1Ch]
mov	edx, [ecx+6]
push	0
call	edx
add	esp, 4
test	eax, eax
jnz	short loc_10038F82
lea	eax, [esp+8+arg_0]
push	eax
push	0
push	esi
call	sub_10024610
mov	ecx, [esi+20h]
add	esp, 0Ch
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
push	eax
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
mov	ecx, [esi+20h]
add	esp, 8
push	ecx
or	edi, 0FFFFFFFFh
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
test	al, 2
jz	short loc_10038FB0
and	eax, 0FFFFFFFDh
mov	[esi+68h], eax
mov	ecx, [esi+20h]
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public SECMOD_HasRemovableSlots
mov	eax, dword_100BADFC
push	esi
xor	esi, esi
test	eax, eax
jnz	short loc_10038FED
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
push	eax
call	SECMOD_GetReadLock
mov	edx, [esp+8+arg_0]
mov	ecx, [edx+2Ch]
add	esp, 4
xor	eax, eax
test	ecx, ecx
jle	short loc_10039020
mov	edx, [edx+28h]
push	edi
mov	edi, [edx]
cmp	[edi+0Ch], esi
jz	short loc_10039018
inc	eax
add	edx, 4
cmp	eax, ecx
jl	short loc_10039007
jmp	short loc_1003901D
mov	esi, 1
pop	edi
test	ecx, ecx
jnz	short loc_10039027
mov	esi, 1
mov	eax, dword_100BADFC
push	eax
call	SECMOD_ReleaseReadLock
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
			
sub	esp, 1Ch
lea	ecx, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_18], 0
mov	[esp+1Ch+var_14], ecx
mov	[esp+1Ch+var_10], 4
mov	[esp+1Ch+var_C], 0CE534368h
mov	[esp+1Ch+var_8], eax
lea	edx, [eax+1]
lea	ebx, [ebx+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10039070
sub	eax, edx
push	edi
inc	eax
push	esi
mov	[esp+24h+var_4], eax
call	sub_10035650
mov	ecx, [esi+38h]
lea	edx, [esp+24h+var_1C]
push	edx
push	0
push	2
lea	eax, [esp+30h+var_18]
push	eax
push	ecx
push	esi
call	sub_1002A750
push	esi
mov	edi, eax
call	sub_10035670
add	esp, 20h
test	edi, edi
jz	short loc_100390C3
push	edi
call	sub_1001AFB0
push	eax
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 1Ch
retn
mov	edx, [esi+4]
push	edx
call	SECMOD_UpdateSlotList
add	esp, 4
pop	edi
add	esp, 1Ch
retn
align 10h
public SECMOD_CloseUserDB
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+40h]
push	edi
push	eax
push	offset aTokens0xX 
call	ds:PR_smprintf
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10039111
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
push	ebx
push	0CE534356h
call	sub_10039040
push	edi
mov	ebx, eax
call	ds:PR_smprintf_free
mov	eax, [esi+13Ch]
add	esp, 8
test	eax, eax
jz	short loc_10039148
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_10039148
push	eax
call	sub_1004C2C0
push	esi
call	PK11_IsPresent
add	esp, 8
			
mov	eax, ebx
pop	ebx
pop	edi
pop	esi
retn
align 10h
public SECMOD_RestartModules
sub	esp, 10h
mov	eax, dword_100BADFC
push	ebp
xor	ebp, ebp
mov	[esp+14h+var_C], ebp
test	eax, eax
jnz	short loc_10039178
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 10h
retn
push	eax
call	SECMOD_GetReadLock
mov	eax, dword_100BADE4
add	esp, 4
mov	[esp+14h+var_10], eax
test	eax, eax
jz	loc_1003929A
push	ebx
push	esi
push	edi
jmp	short loc_100391A0
align 10h
			
cmp	[esp+20h+arg_0], 0
mov	eax, [esp+20h+var_10]
mov	esi, [eax+4]
jnz	short loc_100391CA
mov	ecx, [esi+1Ch]
mov	eax, [ecx+12h]
lea	edx, [esp+20h+var_8]
push	edx
push	0
push	0
call	eax
add	esp, 0Ch
test	eax, eax
jz	loc_10039285
mov	ecx, [esi+1Ch]
mov	edx, [ecx+6]
push	0
call	edx
lea	eax, [esp+24h+var_4]
push	eax
push	0
push	esi
call	sub_10024610
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_10039222
call	PORT_GetError_Util
mov	[esp+20h+var_C], eax
xor	eax, eax
mov	ebp, edi
cmp	[esi+2Ch], eax
jle	loc_10039285
mov	ecx, [esi+28h]
mov	edx, [ecx+eax*4]
mov	dword ptr [edx+18h], 1
mov	ecx, [esi+28h]
mov	edx, [ecx+eax*4]
inc	eax
mov	dword ptr [edx+1Ch], 2
cmp	eax, [esi+2Ch]
jl	short loc_10039200
jmp	short loc_10039285
xor	edi, edi
cmp	[esi+2Ch], edi
jle	short loc_10039285
lea	esp, [esp+0]
mov	eax, [esi+28h]
mov	ecx, [eax+edi*4]
push	1
push	ecx
call	sub_10036D20
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1003927F
mov	edx, [esi+28h]
mov	eax, [edx+edi*4]
push	eax
call	PK11_IsPresent
add	esp, 4
test	eax, eax
jz	short loc_1003927F
call	PORT_GetError_Util
mov	ecx, [esi+28h]
mov	edx, [ecx+edi*4]
mov	dword ptr [edx+18h], 1
mov	[esp+20h+var_C], eax
mov	eax, [esi+28h]
mov	ecx, [eax+edi*4]
mov	ebp, ebx
mov	dword ptr [ecx+1Ch], 2
			
inc	edi
cmp	edi, [esi+2Ch]
jl	short loc_10039230
			
mov	edx, [esp+20h+var_10]
mov	eax, [edx]
mov	[esp+20h+var_10], eax
test	eax, eax
jnz	loc_100391A0
pop	edi
pop	esi
pop	ebx
mov	eax, dword_100BADFC
push	eax
call	SECMOD_ReleaseReadLock
add	esp, 4
test	ebp, ebp
jz	short loc_100392B9
mov	ecx, [esp+14h+var_C]
push	ecx
call	PORT_SetError_Util
add	esp, 4
mov	eax, ebp
pop	ebp
add	esp, 10h
retn
			
push	edi
push	8
call	PORT_Alloc_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10039337
push	esi
mov	esi, [esp+8+arg_4]
mov	dword ptr [edi], 0
mov	dword ptr [edi+4], 0
mov	eax, [esi+20h]
push	eax
call	ds:PR_Lock
mov	ecx, [esi+20h]
inc	dword ptr [esi+24h]
push	ecx
call	ds:PR_Unlock
mov	edx, dword_100BADFC
push	edx
mov	[edi+4], esi
call	NSSRWLock_LockWrite
mov	edx, [esp+14h+arg_0]
mov	eax, [edx]
add	esp, 0Ch
pop	esi
test	eax, eax
jz	short loc_10039323
mov	ecx, eax
mov	eax, [eax]
test	eax, eax
jnz	short loc_10039317
test	ecx, ecx
jnz	short loc_1003933C
mov	eax, dword_100BADFC
push	eax
mov	[edx], edi
call	NSSRWLock_UnlockWrite
add	esp, 4
xor	eax, eax
pop	edi
retn
or	eax, 0FFFFFFFFh
pop	edi
retn
push	0
push	edi
push	ecx
call	sub_1001B4E0
mov	eax, dword_100BADFC
add	esp, 0Ch
push	eax
call	NSSRWLock_UnlockWrite
add	esp, 4
xor	eax, eax
pop	edi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+4], 0
jz	short loc_10039394
cmp	dword_100BADF0,	0
jnz	short loc_10039394
mov	eax, [esi+20h]
push	eax
call	ds:PR_Lock
mov	ecx, [esi+20h]
inc	dword ptr [esi+24h]
push	ecx
call	ds:PR_Unlock
add	esp, 8
mov	dword_100BADF0,	esi
			
push	esi
push	offset dword_100BADE4
call	sub_100392C0
add	esp, 8
pop	esi
retn
align 10h
mov	eax, [esp+arg_0]
push	eax
push	offset dword_100BADEC
call	sub_100392C0
add	esp, 8
retn
align 10h
public SECMOD_FindModule
			
mov	eax, dword_100BADFC
push	ebx
xor	ebx, ebx
test	eax, eax
jnz	short loc_100393ED
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
retn
push	esi
push	edi
push	eax
call	SECMOD_GetReadLock
mov	eax, dword_100BADE4
mov	edi, [esp+10h+arg_0]
add	esp, 4
mov	esi, eax
test	eax, eax
jz	short loc_1003943F
mov	eax, [esi+4]
mov	ecx, [eax+14h]
mov	eax, edi
nop
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10039430
test	dl, dl
jz	short loc_1003942C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10039430
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10039410
xor	eax, eax
jmp	short loc_10039435
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_1003949B
mov	esi, [esi]
test	esi, esi
jnz	short loc_10039407
mov	eax, dword_100BADEC
mov	esi, eax
test	eax, eax
jz	short loc_100394B8
lea	ebx, [ebx+0]
mov	eax, [esi+4]
mov	ecx, [eax+14h]
mov	eax, edi
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10039478
test	dl, dl
jz	short loc_10039474
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10039478
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10039458
xor	eax, eax
jmp	short loc_1003947D
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_1003949B
mov	esi, [esi]
test	esi, esi
jnz	short loc_10039450
mov	eax, dword_100BADFC
push	eax
call	SECMOD_ReleaseReadLock
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
			
mov	ebx, [esi+4]
mov	ecx, [ebx+20h]
push	ecx
call	ds:PR_Lock
mov	edx, [ebx+20h]
inc	dword ptr [ebx+24h]
push	edx
call	ds:PR_Unlock
add	esp, 8
mov	eax, dword_100BADFC
push	eax
call	SECMOD_ReleaseReadLock
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
			
mov	eax, dword_100BADFC
push	esi
xor	esi, esi
test	eax, eax
jnz	short loc_100394ED
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
push	eax
call	SECMOD_GetReadLock
mov	eax, dword_100BADE4
add	esp, 4
test	eax, eax
jz	short loc_1003952F
mov	ecx, [esp+4+arg_0]
mov	edx, [eax+4]
cmp	ecx, [edx+38h]
jz	short loc_10039513
mov	eax, [eax]
test	eax, eax
jnz	short loc_10039503
jmp	short loc_1003952F
mov	esi, edx
mov	eax, [esi+20h]
push	eax
call	ds:PR_Lock
mov	ecx, [esi+20h]
inc	dword ptr [esi+24h]
push	ecx
call	ds:PR_Unlock
add	esp, 8
			
mov	edx, dword_100BADFC
push	edx
call	SECMOD_ReleaseReadLock
add	esp, 4
test	esi, esi
jnz	short loc_1003954F
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
mov	eax, dword_100BADFC
push	esi
push	eax
xor	esi, esi
call	SECMOD_GetReadLock
mov	eax, dword_100BADE4
add	esp, 4
test	eax, eax
jz	short loc_100395B0
mov	edx, [esp+4+arg_0]
mov	edi, edi
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_1003958C
cmp	edx, [ecx+1Ch]
jz	short loc_10039594
mov	eax, [eax]
test	eax, eax
jnz	short loc_10039580
jmp	short loc_100395B0
mov	esi, ecx
mov	ecx, [esi+20h]
push	ecx
call	ds:PR_Lock
mov	edx, [esi+20h]
inc	dword ptr [esi+24h]
push	edx
call	ds:PR_Unlock
add	esp, 8
			
mov	eax, dword_100BADFC
push	eax
call	SECMOD_ReleaseReadLock
add	esp, 4
test	esi, esi
jnz	short loc_100395CF
push	0FFFFE040h
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
public SECMOD_DestroyModule
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+20h]
push	edi
push	eax
xor	edi, edi
call	ds:PR_Lock
mov	eax, [esi+24h]
add	esp, 4
lea	ecx, [eax-1]
mov	[esi+24h], ecx
cmp	eax, 1
jnz	short loc_10039605
mov	edi, eax
mov	edx, [esi+20h]
push	edx
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	loc_100396AA
mov	eax, [esi+50h]
test	eax, eax
jz	short loc_10039631
push	eax
mov	dword ptr [esi+50h], 0
call	SECMOD_DestroyModule
add	esp, 4
push	ebx
mov	ebx, [esi+2Ch]
test	ebx, ebx
jnz	short loc_10039677
cmp	esi, dword_100BADF8
jnz	short loc_10039647
mov	dword_100BADF8,	ebx
cmp	dword ptr [esi+8], 0
jz	short loc_10039656
push	esi
call	sub_10024CE0
add	esp, 4
mov	eax, [esi+20h]
push	eax
call	ds:PR_DestroyLock
mov	ecx, [esi]
push	0
push	ecx
call	PORT_FreeArena_Util
add	esp, 0Ch
dec	dword_100BAE00
pop	ebx
pop	edi
pop	esi
retn
xor	edi, edi
test	ebx, ebx
jle	short loc_100396A9
lea	ecx, [ecx+0]
mov	edx, [esi+28h]
mov	eax, [edx+edi*4]
cmp	dword ptr [eax+18h], 0
jnz	short loc_10039695
push	eax
call	sub_10036CB0
add	esp, 4
mov	eax, [esi+28h]
mov	ecx, [eax+edi*4]
push	ecx
call	PK11_FreeSlot
inc	edi
add	esp, 4
cmp	edi, ebx
jl	short loc_10039680
pop	ebx
pop	edi
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_100396E9
push	edi
lea	ebx, [ebx+0]
mov	eax, [esi+4]
mov	edi, [esi]
test	eax, eax
jz	short loc_100396D9
push	eax
call	SECMOD_DestroyModule
add	esp, 4
mov	dword ptr [esi+4], 0
push	esi
call	PORT_Free_Util
add	esp, 4
mov	esi, edi
test	edi, edi
jnz	short loc_100396C0
pop	edi
pop	esi
retn
align 10h
mov	eax, dword_100BADFC
push	esi
xor	esi, esi
cmp	eax, esi
jz	short loc_1003970B
push	eax
call	NSSRWLock_Destroy
add	esp, 4
mov	dword_100BADFC,	esi
mov	eax, dword_100BADF0
cmp	eax, esi
jz	short loc_10039723
push	eax
call	SECMOD_DestroyModule
add	esp, 4
mov	dword_100BADF0,	esi
mov	eax, dword_100BADF4
cmp	eax, esi
jz	short loc_1003973B
push	eax
call	SECMOD_DestroyModule
add	esp, 4
mov	dword_100BADF4,	esi
mov	eax, dword_100BADE4
cmp	eax, esi
jz	short loc_10039753
push	eax
call	sub_100396B0
add	esp, 4
mov	dword_100BADE4,	esi
mov	eax, dword_100BADE8
cmp	eax, esi
jz	short loc_1003976B
push	eax
call	sub_100396B0
add	esp, 4
mov	dword_100BADE8,	esi
mov	eax, dword_100BADEC
cmp	eax, esi
jz	short loc_10039783
push	eax
call	sub_100396B0
add	esp, 4
mov	dword_100BADEC,	esi
call	sub_10036AB0
call	sub_10024DD0
cmp	dword_100BAE00,	esi
pop	esi
jz	short loc_100397A7
push	0FFFFE08Bh
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
cmp	dword_100BADF4,	0
push	esi
mov	esi, [esp+4+arg_0]
jz	short loc_100397FB
push	esi
call	SECMOD_GetDefaultModDBFlag
add	esp, 4
test	eax, eax
jz	short loc_100397F2
mov	eax, dword_100BADF4
push	eax
call	SECMOD_DestroyModule
mov	ecx, [esi+20h]
push	ecx
call	ds:PR_Lock
mov	edx, [esi+20h]
inc	dword ptr [esi+24h]
push	edx
call	ds:PR_Unlock
add	esp, 0Ch
jmp	short loc_10039815
cmp	dword_100BADF4,	0
jnz	short loc_1003981B
mov	eax, [esi+20h]
push	eax
call	ds:PR_Lock
mov	ecx, [esi+20h]
inc	dword ptr [esi+24h]
push	ecx
call	ds:PR_Unlock
add	esp, 8
mov	dword_100BADF4,	esi
push	esi
push	offset dword_100BADE8
call	sub_100392C0
add	esp, 8
pop	esi
retn
align 10h
public SECMOD_LookupSlot
mov	eax, [esp+arg_0]
push	esi
push	eax
call	sub_100394D0
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10039846
pop	esi
retn
mov	ecx, [esp+4+arg_4]
push	edi
push	ecx
push	esi
call	sub_10038640
push	esi
mov	edi, eax
call	SECMOD_DestroyModule
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public SECMOD_DeleteModuleEx
			
			
push	ecx
mov	eax, dword_100BADFC
mov	[esp+4+var_4], 0FFFFFFFFh
test	eax, eax
jnz	short loc_10039893
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ecx
retn
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_8]
push	esi
push	edi
push	eax
mov	dword ptr [ebp+0], 0
call	NSSRWLock_LockWrite
mov	esi, dword_100BADE4
mov	ebx, [esp+18h+arg_0]
add	esp, 4
mov	edi, offset dword_100BADE4
test	esi, esi
jz	short loc_1003990A
mov	edi, edi
test	ebx, ebx
jz	short loc_100398F9
mov	eax, [esi+4]
mov	ecx, [eax+14h]
mov	eax, ebx
lea	esp, [esp+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_100398F0
test	dl, dl
jz	short loc_100398EC
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_100398F0
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_100398D0
xor	eax, eax
jmp	short loc_100398F5
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_10039950
mov	ecx, [esp+14h+arg_4]
cmp	ecx, [esi+4]
jz	short loc_10039950
mov	edi, esi
mov	esi, [esi]
test	esi, esi
jnz	short loc_100398C0
mov	esi, dword_100BADEC
mov	edi, offset dword_100BADEC
test	esi, esi
jz	loc_100399B7
lea	ecx, [ecx+0]
test	ebx, ebx
jz	short loc_1003997B
mov	edx, [esi+4]
mov	ecx, [edx+14h]
mov	eax, ebx
lea	esp, [esp+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10039972
test	dl, dl
jz	short loc_1003994C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10039972
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10039930
xor	eax, eax
jmp	short loc_10039977
			
mov	eax, [esi+4]
cmp	dword ptr [eax+4], 0
jnz	short loc_100399AB
push	esi
push	edi
call	sub_1001B4C0
mov	edx, [esi+4]
push	edx
call	sub_1004AB40
add	esp, 0Ch
mov	[esp+14h+var_4], eax
jmp	short loc_100399B7
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_1003998E
mov	eax, [esp+14h+arg_4]
cmp	eax, [esi+4]
jz	short loc_1003998E
mov	edi, esi
mov	esi, [esi]
test	esi, esi
jnz	short loc_10039920
jmp	short loc_100399B7
			
mov	eax, [esi+4]
cmp	dword ptr [eax+4], 0
jnz	short loc_100399AB
push	esi
push	edi
call	sub_1001B4C0
add	esp, 8
mov	[esp+14h+var_4], 0
jmp	short loc_100399B7
			
xor	ecx, ecx
cmp	[eax+0Ch], ecx
setnz	cl
inc	ecx
mov	[ebp+0], ecx
			
mov	edx, dword_100BADFC
push	edx
call	NSSRWLock_UnlockWrite
mov	edi, [esp+18h+var_4]
add	esp, 4
test	edi, edi
jnz	short loc_10039A00
cmp	[esp+14h+arg_C], edi
jz	short loc_100399E0
mov	eax, [esi+4]
push	eax
call	sub_1002DC10
add	esp, 4
mov	eax, [esi+4]
test	eax, eax
jz	short loc_100399F7
push	eax
call	SECMOD_DestroyModule
add	esp, 4
mov	dword ptr [esi+4], 0
push	esi
call	PORT_Free_Util
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
public SECMOD_DeleteModule
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	1
push	eax
push	0
push	ecx
call	SECMOD_DeleteModuleEx
add	esp, 10h
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
mov	eax, [edi+14h]
push	eax
call	SECMOD_FindModule
add	esp, 4
test	eax, eax
jz	short loc_10039A55
push	eax
call	SECMOD_DestroyModule
add	esp, 4
mov	eax, 0FFFFFFFEh
pop	edi
retn
push	0
push	edi
call	sub_100248B0
add	esp, 8
test	eax, eax
jnz	short loc_10039AA5
cmp	[edi+50h], eax
jnz	short loc_10039A90
push	ebx
push	esi
mov	esi, dword_100BADF4
mov	ecx, [esi+20h]
push	ecx
call	ds:PR_Lock
mov	edx, [esi+20h]
inc	dword ptr [esi+24h]
push	edx
call	ds:PR_Unlock
add	esp, 8
mov	[edi+50h], esi
pop	esi
pop	ebx
push	edi
call	sub_1002DBC0
push	edi
call	sub_10039360
push	edi
call	sub_1004AA80
add	esp, 0Ch
pop	edi
retn
align 10h
public SECMOD_AddNewModuleEx
			
sub	esp, 8
push	esi
push	0
push	0
or	esi, 0FFFFFFFFh
call	ds:PR_SetErrorText
add	esp, 8
cmp	dword_100BADFC,	0
jnz	short loc_10039AE1
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, esi
pop	esi
add	esp, 8
retn
mov	eax, [esp+0Ch+arg_14]
mov	ecx, [esp+0Ch+arg_10]
mov	edx, [esp+0Ch+arg_0]
push	ebp
push	eax
mov	eax, [esp+14h+arg_4]
push	ecx
push	edx
push	eax
call	SECMOD_CreateModule
mov	ebp, eax
add	esp, 10h
test	ebp, ebp
jnz	short loc_10039B0D
pop	ebp
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
mov	eax, [ebp+10h]
test	eax, eax
jz	loc_10039BE7
cmp	byte ptr [eax],	0
jz	loc_10039BE7
push	ebp
call	sub_10039A30
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	loc_10039BE7
mov	edx, dword_100BADFC
mov	ecx, [esp+10h+arg_C]
push	edx
mov	[ebp+40h], ecx
call	SECMOD_GetReadLock
xor	eax, eax
add	esp, 4
mov	[esp+10h+var_8], eax
cmp	[ebp+2Ch], eax
jle	short loc_10039BC4
mov	ecx, [esp+10h+arg_8]
and	ecx, 40000000h
push	ebx
mov	[esp+14h+var_4], ecx
push	edi
mov	ecx, [ebp+28h]
mov	ebx, [ecx+eax*4]
xor	edi, edi
cmp	ds:dword_100A6614, edi
jle	short loc_10039BA4
mov	esi, offset off_100A6518
lea	ebx, [ebx+0]
mov	edx, [esi+4]
and	edx, [esp+18h+arg_8]
neg	edx
sbb	edx, edx
neg	edx
push	edx
push	esi
push	ebx
call	PK11_UpdateSlotAttribute
inc	edi
add	esp, 0Ch
add	esi, 0Ch
cmp	edi, ds:dword_100A6614
jl	short loc_10039B80
cmp	[esp+18h+var_4], 0
jz	short loc_10039BB4
push	ebx
call	PK11_UserDisableSlot
add	esp, 4
mov	eax, [esp+18h+var_8]
inc	eax
mov	[esp+18h+var_8], eax
cmp	eax, [ebp+2Ch]
jl	short loc_10039B65
pop	edi
pop	ebx
mov	eax, dword_100BADFC
push	eax
call	SECMOD_ReleaseReadLock
push	ebp
call	sub_1002DC10
add	esp, 8
test	eax, eax
jnz	short loc_10039BE5
push	ebp
call	sub_1002DBC0
add	esp, 4
mov	esi, eax
			
push	ebp
call	SECMOD_DestroyModule
add	esp, 4
pop	ebp
mov	eax, esi
pop	esi
add	esp, 8
retn
align 10h
public SECMOD_AddNewModule
			
			
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_4]
push	0
push	0
push	eax
mov	eax, [esp+0Ch+arg_0]
push	ecx
push	edx
push	eax
call	SECMOD_AddNewModuleEx
add	esp, 18h
retn
align 10h
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+4], 0
push	ebx
push	ebp
push	esi
push	edi
jz	short loc_10039C4E
cmp	dword ptr [eax+0Ch], 0
jz	short loc_10039C4E
mov	ebx, 65h
lea	ebp, [ebx+1Ah]
jmp	short loc_10039C58
			
mov	ebx, 4
mov	ebp, 64h
cmp	ebx, ebp
jnb	short loc_10039CAF
lea	esp, [esp+0]
mov	eax, [eax+38h]
push	eax
call	sub_100394D0
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10039CA8
push	ebx
push	esi
call	sub_10038640
push	esi
mov	edi, eax
call	SECMOD_DestroyModule
add	esp, 0Ch
test	edi, edi
jz	short loc_10039CA8
push	edi
call	PK11_IsPresent
push	edi
mov	esi, eax
call	PK11_FreeSlot
add	esp, 8
test	esi, esi
jz	short loc_10039CA8
inc	ebx
cmp	ebx, ebp
jnb	short loc_10039CAF
mov	eax, [esp+10h+arg_0]
jmp	short loc_10039C60
			
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
			
push	0FFFFE043h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
public SECMOD_OpenNewSlot
			
push	ebp
push	esi
mov	esi, [esp+8+arg_0]
push	esi
call	sub_10039C30
mov	ebp, eax
add	esp, 4
cmp	ebp, 0FFFFFFFFh
jnz	short loc_10039CEB
			
pop	esi
xor	eax, eax
pop	ebp
retn
cmp	dword ptr [esi+2Ch], 0
jz	short loc_10039CE6
mov	eax, [esi+28h]
mov	ecx, [eax]
push	ecx
call	PK11_ReferenceSlot
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10039CE6
mov	edx, [esp+8+arg_4]
push	ebx
push	5Dh
push	3Eh
push	edx
call	NSSUTIL_DoubleEscape
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jnz	short loc_10039D2C
push	esi
call	PK11_FreeSlot
add	esp, 4
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
retn
push	edi
push	ebx
push	ebp
push	offset aTokens0xXS 
call	ds:PR_smprintf
push	ebx
mov	edi, eax
call	PORT_Free_Util
add	esp, 10h
test	edi, edi
jnz	short loc_10039D63
push	esi
call	PK11_FreeSlot
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 8
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
retn
push	0CE534355h
mov	eax, edi
call	sub_10039040
push	edi
mov	ebx, eax
call	ds:PR_smprintf_free
push	esi
call	PK11_FreeSlot
add	esp, 0Ch
test	ebx, ebx
jnz	short loc_10039D5C
mov	eax, [esp+10h+arg_0]
push	ebp
push	eax
call	sub_10038640
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10039DBC
mov	eax, [esi+13Ch]
test	eax, eax
jz	short loc_10039DB3
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_10039DB3
push	eax
call	sub_1004C2C0
add	esp, 4
			
push	esi
call	PK11_IsPresent
add	esp, 4
pop	edi
pop	ebx
mov	eax, esi
pop	esi
pop	ebp
retn
align 10h
public SECMOD_OpenUserDB
mov	ecx, [esp+arg_0]
test	ecx, ecx
jz	short loc_10039DEE
mov	eax, dword_100BADF0
test	eax, eax
jnz	short loc_10039DF1
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
push	ecx
push	eax
call	SECMOD_OpenNewSlot
add	esp, 8
retn
db 14h dup(0CCh)
public SECMOD_DeleteInternalModule
push	ecx
cmp	dword_100BADF8,	0
mov	[esp+4+var_4], 0FFFFFFFFh
jz	short loc_10039E33
push	0FFFFE087h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ecx
retn
mov	eax, dword_100BADFC
test	eax, eax
jnz	short loc_10039E4E
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ecx
retn
push	ebp
push	esi
push	edi
push	eax
call	NSSRWLock_LockWrite
mov	edi, dword_100BADE4
add	esp, 4
mov	esi, offset dword_100BADE4
test	edi, edi
jz	short loc_10039ECB
mov	ebp, [esp+10h+arg_0]
lea	ecx, [ecx+0]
mov	eax, [edi+4]
mov	ecx, [eax+14h]
mov	eax, ebp
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10039E98
test	dl, dl
jz	short loc_10039E94
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10039E98
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_10039E78
xor	eax, eax
jmp	short loc_10039E9D
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jz	short loc_10039EAB
mov	esi, edi
mov	edi, [edi]
test	edi, edi
jnz	short loc_10039E70
jmp	short loc_10039ECB
mov	ecx, [edi+4]
cmp	dword ptr [ecx+4], 0
jz	short loc_10039ECB
push	edi
push	esi
call	sub_1001B4C0
mov	edx, [edi+4]
push	edx
call	sub_1004AB40
add	esp, 0Ch
mov	[esp+10h+var_4], eax
			
mov	eax, dword_100BADFC
push	eax
call	NSSRWLock_UnlockWrite
add	esp, 4
cmp	[esp+10h+var_4], 0
jnz	loc_1003A013
mov	ecx, [edi+4]
cmp	dword ptr [ecx+0Ch], 0
jz	short loc_10039EFB
push	offset aFlagsInternalC 
push	0
push	offset aNssInternalPkc 
jmp	short loc_10039F07
push	offset aFlagsInterna_0 
push	0
push	offset aNssInternalFip 
push	0
call	SECMOD_CreateModule
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_10039F77
mov	edx, [edi+4]
mov	eax, [edx+48h]
mov	ecx, [esi]
push	eax
push	ecx
call	PORT_ArenaStrdup_Util
push	0
mov	[esi+48h], eax
call	sub_10036360
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_10039F44
push	1
push	esi
call	sub_1002CD20
add	esp, 8
push	esi
call	sub_10039A30
add	esp, 4
mov	[esp+10h+var_4], eax
test	eax, eax
jz	short loc_10039F66
push	ebp
call	sub_100362D0
push	esi
call	SECMOD_DestroyModule
add	esp, 8
xor	esi, esi
test	ebp, ebp
jz	short loc_10039F73
push	ebp
call	PK11_FreeSlot
add	esp, 4
test	esi, esi
jnz	short loc_10039FC7
mov	edx, dword_100BADFC
push	edx
call	NSSRWLock_LockWrite
mov	eax, dword_100BADE4
add	esp, 4
test	eax, eax
jz	short loc_10039F9D
mov	edx, [edi]
mov	ecx, eax
mov	eax, edx
test	eax, eax
jnz	short loc_10039F91
test	ecx, ecx
jnz	short loc_10039FA5
mov	dword_100BADE4,	edi
jmp	short loc_10039FB1
push	0
push	edi
push	ecx
call	sub_1001B4E0
add	esp, 0Ch
mov	eax, dword_100BADFC
push	eax
call	NSSRWLock_UnlockWrite
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
pop	ecx
retn
mov	eax, dword_100BADF0
push	eax
mov	dword_100BADF8,	eax
mov	dword_100BADF0,	0
call	SECMOD_DestroyModule
mov	ecx, [edi+4]
push	ecx
call	sub_1002DC10
mov	eax, [edi+4]
add	esp, 8
test	eax, eax
jz	short loc_1003A004
push	eax
call	SECMOD_DestroyModule
add	esp, 4
mov	dword ptr [edi+4], 0
push	edi
call	PORT_Free_Util
add	esp, 4
mov	dword_100BADF0,	esi
mov	eax, [esp+10h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ecx
retn
align 10h
mov	edx, [esp+arg_0]
mov	ecx, offset off_100A68E0
cmp	edx, 29h
jz	short loc_1003A041
mov	eax, 29h
test	eax, eax
jz	short loc_1003A041
mov	eax, [ecx+18h]
add	ecx, 10h
cmp	eax, edx
jnz	short loc_1003A033
			
cmp	dword ptr [ecx+8], 0
jz	short loc_1003A04B
mov	eax, [ecx+4]
retn
or	eax, 0FFFFFFFFh
retn
align 10h
			
lea	edx, [ecx+eax]
cmp	ecx, edx
jnb	short loc_1003A09A
mov	al, [ecx]
inc	ecx
cmp	al, 61h
jb	short loc_1003A062
cmp	al, 7Ah
jbe	short loc_1003A096
cmp	al, 41h
jb	short loc_1003A06A
cmp	al, 5Ah
jbe	short loc_1003A096
cmp	al, 30h
jb	short loc_1003A072
cmp	al, 39h
jbe	short loc_1003A096
cmp	al, 20h
jz	short loc_1003A096
cmp	al, 27h
jz	short loc_1003A096
cmp	al, 28h
jz	short loc_1003A096
cmp	al, 29h
jz	short loc_1003A096
cmp	al, 2Bh
jb	short loc_1003A08A
cmp	al, 2Fh
jbe	short loc_1003A096
cmp	al, 3Ah
jz	short loc_1003A096
cmp	al, 3Dh
jz	short loc_1003A096
cmp	al, 3Fh
jnz	short loc_1003A0A0
			
cmp	ecx, edx
jb	short loc_1003A057
mov	eax, 1
retn
xor	eax, eax
retn
align 10h
mov	eax, [esi]
cmp	eax, edx
jnb	short loc_1003A0CC
mov	cl, [eax]
cmp	cl, 20h
jz	short loc_1003A0C7
cmp	cl, 0Dh
jz	short loc_1003A0C7
cmp	cl, 0Ah
jnz	short loc_1003A0CC
			
inc	eax
cmp	eax, edx
jb	short loc_1003A0B6
			
mov	[esi], eax
retn
align 10h
mov	eax, [ebx]
push	ebp
mov	ebp, [esp+4+arg_4]
cmp	eax, edx
jnb	short loc_1003A0F6
jmp	short loc_1003A0E0
align 10h
			
mov	cl, [eax]
cmp	cl, 20h
jz	short loc_1003A0F1
cmp	cl, 0Dh
jz	short loc_1003A0F1
cmp	cl, 0Ah
jnz	short loc_1003A0F6
			
inc	eax
cmp	eax, edx
jb	short loc_1003A0E0
			
mov	[ebx], eax
cmp	eax, edx
jnz	short loc_1003A101
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	esi
mov	esi, [esp+8+arg_0]
push	edi
xor	edi, edi
cmp	eax, edx
jnb	short loc_1003A133
lea	ecx, [ecx+0]
mov	cl, [eax]
cmp	cl, 20h
jz	short loc_1003A133
cmp	cl, 0Dh
jz	short loc_1003A133
cmp	cl, 0Ah
jz	short loc_1003A133
cmp	cl, 3Dh
jz	short loc_1003A133
inc	edi
cmp	edi, ebp
jge	short loc_1003A16A
mov	[esi], cl
inc	eax
inc	esi
cmp	eax, edx
jb	short loc_1003A110
			
mov	byte ptr [esi],	0
mov	[ebx], eax
cmp	eax, edx
jnb	short loc_1003A156
lea	esp, [esp+0]
mov	cl, [eax]
cmp	cl, 20h
jz	short loc_1003A151
cmp	cl, 0Dh
jz	short loc_1003A151
cmp	cl, 0Ah
jnz	short loc_1003A156
			
inc	eax
cmp	eax, edx
jb	short loc_1003A140
			
mov	[ebx], eax
cmp	eax, edx
jz	short loc_1003A16C
cmp	byte ptr [eax],	3Dh
jnz	short loc_1003A16C
pop	edi
inc	eax
pop	esi
mov	[ebx], eax
xor	eax, eax
pop	ebp
retn
mov	[ebx], eax
			
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
align 10h
sub	esp, 8
push	ebp
mov	ebp, [esp+0Ch+arg_0]
mov	ecx, [ebp+0]
push	esi
mov	esi, [esp+10h+arg_4]
push	edi
xor	edi, edi
mov	[esp+14h+var_4], edi
cmp	ecx, edx
jnb	short loc_1003A1B3
jmp	short loc_1003A1A0
align 10h
			
mov	al, [ecx]
cmp	al, 20h
jz	short loc_1003A1AE
cmp	al, 0Dh
jz	short loc_1003A1AE
cmp	al, 0Ah
jnz	short loc_1003A1B3
			
inc	ecx
cmp	ecx, edx
jb	short loc_1003A1A0
			
mov	[ebp+0], ecx
cmp	ecx, edx
jnz	short loc_1003A1C3
pop	edi
pop	esi
xor	eax, eax
pop	ebp
add	esp, 8
retn
cmp	byte ptr [ecx],	22h
jnz	short loc_1003A1D3
mov	[esp+14h+var_8], 1
inc	ecx
jmp	short loc_1003A1D7
mov	[esp+14h+var_8], edi
push	ebx
mov	ebx, esi
cmp	ecx, edx
jnb	loc_1003A293
mov	edi, edx
sub	edi, ecx
mov	al, [ecx]
cmp	al, 5Ch
jnz	short loc_1003A233
inc	ecx
dec	edi
cmp	ecx, edx
jnb	loc_1003A2DB
mov	al, [ecx]
movzx	esi, al
cmp	ds:word_100A6AB0[esi*2], 0
jl	short loc_1003A26F
cmp	edi, 2
jl	short loc_1003A26F
movzx	ebp, byte ptr [ecx+1]
cmp	ds:word_100A6AB0[ebp*2], 0
jl	short loc_1003A26F
movzx	ebp, byte ptr [ecx+1]
mov	al, byte ptr ds:word_100A6AB0[esi*2]
inc	ecx
shl	al, 4
dec	edi
or	al, byte ptr ds:word_100A6AB0[ebp*2]
jmp	short loc_1003A26F
cmp	al, 23h
jnz	short loc_1003A23C
cmp	ecx, [ebp+0]
jz	short loc_1003A26F
cmp	[esp+18h+var_8], 0
jnz	short loc_1003A26B
cmp	al, 2Ch
jz	short loc_1003A29A
cmp	al, 3Dh
jz	short loc_1003A29A
cmp	al, 22h
jz	short loc_1003A29A
cmp	al, 0Dh
jz	short loc_1003A29A
cmp	al, 0Ah
jz	short loc_1003A29A
cmp	al, 2Bh
jz	short loc_1003A29A
cmp	al, 3Ch
jz	short loc_1003A29A
cmp	al, 3Eh
jz	short loc_1003A29A
cmp	al, 23h
jz	short loc_1003A29A
cmp	al, 3Bh
jz	short loc_1003A29A
cmp	al, 22h
jz	short loc_1003A293
			
mov	esi, [esp+18h+var_4]
inc	esi
mov	[esp+18h+var_4], esi
cmp	esi, [esp+18h+arg_8]
jge	short loc_1003A2C6
mov	ebp, [esp+18h+arg_0]
mov	esi, [esp+18h+arg_4]
mov	[ebx], al
inc	ecx
inc	ebx
dec	edi
cmp	ecx, edx
jb	loc_1003A1E6
			
cmp	[esp+18h+var_8], 0
jnz	short loc_1003A2D6
			
cmp	ebx, esi
jbe	short loc_1003A2B4
mov	edi, edi
mov	al, [ebx-1]
cmp	al, 20h
jz	short loc_1003A2AF
cmp	al, 0Dh
jz	short loc_1003A2AF
cmp	al, 0Ah
jnz	short loc_1003A2B4
			
dec	ebx
cmp	ebx, esi
ja	short loc_1003A2A0
			
mov	[ebp+0], ecx
mov	eax, ebx
mov	byte ptr [ebx],	0
pop	ebx
pop	edi
sub	eax, esi
pop	esi
pop	ebp
add	esp, 8
retn
mov	eax, [esp+18h+arg_0]
pop	ebx
pop	edi
pop	esi
mov	[eax], ecx
xor	eax, eax
pop	ebp
add	esp, 8
retn
cmp	byte ptr [ecx],	22h
jz	short loc_1003A2E8
pop	ebx
pop	edi
pop	esi
mov	[ebp+0], ecx
xor	eax, eax
pop	ebp
add	esp, 8
retn
inc	ecx
lea	esi, [esp+18h+arg_0]
mov	[esp+18h+arg_0], ecx
call	sub_1003A0B0
mov	ecx, [esp+18h+arg_0]
mov	eax, [esp+18h+var_4]
mov	[ebp+0], ecx
mov	byte ptr [ebx],	0
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 8
retn
align 10h
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
mov	ebx, eax
push	esi
mov	esi, ecx
mov	dword ptr [edi+4], 0
test	ebx, ebx
jle	short loc_1003A384
test	bl, 1
jnz	short loc_1003A384
sar	ebx, 1
push	ebx
push	edi
push	ebp
call	SECITEM_AllocItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_1003A384
mov	eax, [edi+4]
test	ebx, ebx
jle	short loc_1003A37E
jmp	short loc_1003A350
align 10h
			
movzx	ecx, byte ptr [esi]
mov	dx, ds:word_100A6AB0[ecx*2]
movzx	ecx, byte ptr [esi+1]
shl	dx, 4
or	dx, ds:word_100A6AB0[ecx*2]
movzx	ecx, dx
test	cx, cx
js	short loc_1003A384
mov	[eax], cl
dec	ebx
inc	eax
add	esi, 2
test	ebx, ebx
jg	short loc_1003A350
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
			
test	ebp, ebp
jnz	short loc_1003A392
push	ebp
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
sub	esp, 444h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+444h+var_4], eax
push	ebx
xor	eax, eax
push	ebp
mov	ebp, [esp+44Ch+arg_0]
push	esi
push	edi
mov	[esp+454h+var_43C], eax
mov	[esp+454h+var_438], eax
mov	[esp+454h+var_434], eax
mov	[esp+454h+var_430], eax
mov	[esp+454h+var_42C], eax
mov	[esp+454h+var_428], eax
mov	[esp+454h+var_441], al
lea	eax, [esp+454h+var_424]
push	20h
mov	ebx, ecx
push	eax
or	esi, 0FFFFFFFFh
xor	edi, edi
call	sub_1003A0D0
add	esp, 8
test	eax, eax
jnz	loc_1003A4E2
push	400h
lea	ecx, [esp+458h+var_404]
push	ecx
push	ebx
call	sub_1003A180
add	esp, 0Ch
mov	[esp+454h+var_440], eax
test	eax, eax
jz	loc_1003A4E2
mov	eax, [ebx]
cmp	eax, edx
jnb	short loc_1003A425
mov	cl, [eax]
inc	eax
jmp	short loc_1003A429
mov	cl, [esp+454h+var_441]
mov	[ebx], eax
test	cl, cl
jz	short loc_1003A442
cmp	cl, 2Ch
jz	short loc_1003A442
cmp	cl, 3Bh
jz	short loc_1003A442
cmp	cl, 2Bh
jnz	loc_1003A4E2
			
push	4
lea	edx, [esp+458h+var_424]
push	edx
push	offset aOid_	
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003A4BA
lea	eax, [esp+454h+var_424]
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1003A461
sub	eax, edx
push	eax
lea	eax, [esp+458h+var_424]
push	eax
lea	ecx, [esp+45Ch+var_43C]
push	ecx
push	ebp
call	SEC_StringToOID
add	esp, 10h
test	eax, eax
jnz	short loc_1003A4E2
cmp	[esp+454h+var_404], 23h
jnz	loc_1003A53B
mov	eax, [esp+454h+var_440]
dec	eax
push	ebp
lea	ecx, [esp+458h+var_403]
lea	edi, [esp+458h+var_430]
call	sub_1003A310
add	esp, 4
test	eax, eax
jnz	short loc_1003A4E2
mov	ecx, edi
push	ecx
lea	edx, [esp+458h+var_43C]
push	edx
push	ebp
call	sub_10044ED0
add	esp, 0Ch
jmp	short loc_1003A4F1
mov	esi, offset off_100A68E0
cmp	ds:off_100A68E0, edi
jz	short loc_1003A4E2
mov	eax, [esi]
lea	edx, [esp+454h+var_424]
push	edx
push	eax
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jz	short loc_1003A50A
add	esi, 10h
cmp	[esi], edi
jnz	short loc_1003A4C7
			
push	0FFFFE007h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
			
mov	ecx, [esp+454h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 444h
retn
mov	edi, [esi+8]
mov	esi, [esi+0Ch]
push	edi
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jz	short loc_1003A4E2
mov	ecx, [eax]
mov	[esp+454h+var_43C], ecx
mov	edx, [eax+4]
mov	[esp+454h+var_438], edx
mov	eax, [eax+8]
mov	[esp+454h+var_434], eax
test	edi, edi
jnz	loc_1003A482
jmp	short loc_1003A4E2
test	edi, edi
jz	short loc_1003A4E2
mov	ebx, [esp+454h+var_440]
cmp	edi, 2Ah
jnz	short loc_1003A54D
cmp	ebx, 2
jnz	short loc_1003A4E2
cmp	esi, 13h
jnz	short loc_1003A563
mov	eax, ebx
lea	ecx, [esp+454h+var_404]
call	sub_1003A050
test	eax, eax
jz	short loc_1003A4E2
jmp	short loc_1003A57F
cmp	esi, 1Fh
jnz	short loc_1003A57F
mov	eax, ebx
lea	ecx, [esp+454h+var_404]
call	sub_1003A050
mov	esi, eax
neg	esi
sbb	esi, esi
and	esi, 7
add	esi, 0Ch
			
lea	ecx, [esp+454h+var_430]
push	ecx
push	esi
lea	eax, [esp+45Ch+var_404]
push	edi
push	ebp
mov	[esp+464h+var_42C], eax
mov	[esp+464h+var_428], ebx
call	sub_10044F20
add	esp, 10h
jmp	loc_1003A4F1
push	ecx
push	ebp
push	esi
push	edi
xor	edi, edi
push	edi
mov	esi, eax
call	CERT_CreateName
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_1003A5BC
pop	edi
pop	esi
pop	ebp
pop	ecx
retn
mov	eax, [esp+10h+arg_0]
push	ebx
lea	ebx, [esi+eax]
mov	[esp+14h+var_4], esi
cmp	esi, ebx
jnb	loc_1003A64E
mov	ecx, [ebp+0]
push	ecx
mov	edx, ebx
lea	ecx, [esp+18h+var_4]
call	sub_1003A3A0
add	esp, 4
test	eax, eax
jz	short loc_1003A656
test	edi, edi
jnz	short loc_1003A60A
mov	edx, [ebp+0]
push	edi
push	eax
push	edx
call	CERT_CreateRDN
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_1003A656
push	edi
push	ebp
call	CERT_AddRDN
add	esp, 8
jmp	short loc_1003A618
push	eax
mov	eax, [ebp+0]
push	edi
push	eax
call	sub_10045090
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003A656
mov	eax, [esp+14h+var_4]
cmp	byte ptr [eax-1], 2Bh
jz	short loc_1003A628
xor	edi, edi
cmp	eax, ebx
jnb	short loc_1003A646
lea	esp, [esp+0]
mov	cl, [eax]
cmp	cl, 20h
jz	short loc_1003A641
cmp	cl, 0Dh
jz	short loc_1003A641
cmp	cl, 0Ah
jnz	short loc_1003A646
			
inc	eax
cmp	eax, ebx
jb	short loc_1003A630
			
mov	[esp+14h+var_4], eax
cmp	eax, ebx
jb	short loc_1003A5D0
mov	ecx, [ebp+4]
cmp	dword ptr [ecx], 0
jnz	short loc_1003A667
			
push	ebp
call	CERT_DestroyName
add	esp, 4
pop	ebx
pop	edi
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
mov	eax, ecx
cmp	dword ptr [eax], 0
jz	short loc_1003A678
mov	edi, edi
add	eax, 4
cmp	dword ptr [eax], 0
jnz	short loc_1003A670
sub	eax, 4
cmp	ecx, eax
jnb	short loc_1003A692
nop
mov	esi, [eax]
mov	edx, [ecx]
mov	[ecx], esi
mov	[eax], edx
add	ecx, 4
sub	eax, 4
cmp	ecx, eax
jb	short loc_1003A680
pop	ebx
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ecx
retn
align 10h
public CERT_AsciiToName
mov	eax, [esp+arg_0]
mov	ecx, eax
push	esi
lea	esi, [ecx+1]
lea	ebx, [ebx+0]
mov	dl, [ecx]
inc	ecx
test	dl, dl
jnz	short loc_1003A6B0
sub	ecx, esi
pop	esi
mov	[esp+arg_0], ecx
jmp	loc_1003A5A0
align 10h
			
push	ecx
mov	ecx, [esp+4+Src]
mov	eax, [edi]
push	ebp
mov	ebp, [edi+4]
push	esi
lea	esi, [ecx+1]
nop
mov	dl, [ecx]
inc	ecx
test	dl, dl
jnz	short loc_1003A6E0
sub	ecx, esi
push	ebx
mov	[esp+10h+var_4], ecx
lea	esi, [ecx+ebp]
test	eax, eax
jnz	short loc_1003A711
inc	esi
lea	ebx, [esi+esi]
cmp	ebx, 0C8h
jnb	short loc_1003A706
mov	ebx, 0C8h
push	ebx
call	PORT_Alloc_Util
add	esp, 4
jmp	short loc_1003A723
cmp	[edi+8], esi
jnb	short loc_1003A726
lea	ebx, [esi+esi]
push	ebx
push	eax
call	PORT_Realloc_Util
add	esp, 8
mov	[edi+8], ebx
pop	ebx
test	eax, eax
jnz	short loc_1003A73F
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
pop	ecx
retn
mov	[edi], eax
add	eax, ebp
mov	[edi+4], esi
test	ebp, ebp
jz	short loc_1003A74B
dec	eax
mov	ecx, [esp+0Ch+var_4]
mov	edx, [esp+0Ch+Src]
inc	ecx
push	ecx		
push	edx		
push	eax		
call	memcpy
add	esp, 0Ch
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
align 10h
			
push	ecx
mov	ecx, [esp+4+arg_0]
push	ebp
push	esi
xor	esi, esi
xor	eax, eax
cmp	ecx, esi
jz	short loc_1003A787
mov	ecx, [ecx]
mov	[esp+0Ch+var_4], ecx
jmp	short loc_1003A78B
mov	[esp+0Ch+var_4], esi
xor	ebp, ebp
xor	dl, dl
cmp	edi, esi
jle	loc_1003A85B
mov	cl, [esi+ebx]
inc	eax
cmp	cl, 20h
jb	short loc_1003A812
cmp	cl, 7Fh
jz	short loc_1003A812
cmp	cl, 22h
jz	short loc_1003A80F
cmp	cl, 5Ch
jz	short loc_1003A80F
cmp	cl, 2Ch
jz	short loc_1003A7FD
cmp	cl, 3Dh
jz	short loc_1003A7FD
cmp	cl, 0Dh
jz	short loc_1003A7FD
cmp	cl, 0Ah
jz	short loc_1003A7FD
cmp	cl, 2Bh
jz	short loc_1003A7FD
cmp	cl, 3Ch
jz	short loc_1003A7FD
cmp	cl, 3Eh
jz	short loc_1003A7FD
cmp	cl, 23h
jz	short loc_1003A7FD
cmp	cl, 3Bh
jz	short loc_1003A7FD
cmp	cl, 20h
jnz	short loc_1003A815
cmp	dl, cl
jz	short loc_1003A7EF
cmp	dl, 0Dh
jz	short loc_1003A7EF
cmp	dl, 0Ah
jnz	short loc_1003A815
			
cmp	[esp+0Ch+var_4], 1
jnz	short loc_1003A815
mov	ebp, 1
jmp	short loc_1003A815
			
mov	edx, [esp+0Ch+var_4]
cmp	edx, 1
jnz	short loc_1003A80A
mov	ebp, edx
jmp	short loc_1003A815
cmp	edx, 2
jnz	short loc_1003A815
			
inc	eax
jmp	short loc_1003A815
			
add	eax, 2
			
inc	esi
mov	dl, cl
cmp	esi, edi
jl	loc_1003A797
test	ebp, ebp
jnz	short loc_1003A858
test	edi, edi
jle	short loc_1003A85B
cmp	[esp+0Ch+var_4], 1
jnz	short loc_1003A85B
mov	cl, [ebx+edi-1]
cmp	cl, 20h
jz	short loc_1003A853
cmp	cl, 0Dh
jz	short loc_1003A853
cmp	cl, 0Ah
jz	short loc_1003A853
mov	cl, [ebx]
cmp	cl, 20h
jz	short loc_1003A853
cmp	cl, 0Dh
jz	short loc_1003A853
cmp	cl, 0Ah
jnz	short loc_1003A85B
			
mov	ebp, 1
add	eax, 2
			
mov	ecx, [esp+0Ch+arg_0]
test	ecx, ecx
jz	short loc_1003A870
cmp	[esp+0Ch+var_4], 1
jnz	short loc_1003A870
test	ebp, ebp
jnz	short loc_1003A870
mov	[ecx], ebp
			
pop	esi
pop	ebp
pop	ecx
retn
align 10h
			
push	ecx
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_4]
push	esi
push	edi
mov	edi, eax
mov	eax, [esp+14h+arg_8]
mov	esi, ecx
test	eax, eax
jz	short loc_1003A89D
mov	eax, [eax]
mov	[esp+14h+var_4], eax
jmp	short loc_1003A8A5
mov	[esp+14h+var_4], 0
lea	ecx, [esp+14h+var_4]
push	ecx
mov	ebx, ebp
call	sub_1003A770
inc	eax
add	esp, 4
cmp	eax, [esp+14h+arg_0]
jle	short loc_1003A8D1
push	0FFFFE003h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
mov	edx, [esp+14h+var_4]
cmp	edx, 1
jnz	short loc_1003A8DE
mov	byte ptr [esi],	22h
inc	esi
xor	ecx, ecx
test	edi, edi
jle	short loc_1003A952
mov	al, [ecx+ebp]
cmp	al, 20h
jb	short loc_1003A929
cmp	al, 7Fh
jz	short loc_1003A929
cmp	al, 22h
jz	short loc_1003A920
cmp	al, 5Ch
jz	short loc_1003A920
cmp	al, 2Ch
jz	short loc_1003A91B
cmp	al, 3Dh
jz	short loc_1003A91B
cmp	al, 0Dh
jz	short loc_1003A91B
cmp	al, 0Ah
jz	short loc_1003A91B
cmp	al, 2Bh
jz	short loc_1003A91B
cmp	al, 3Ch
jz	short loc_1003A91B
cmp	al, 3Eh
jz	short loc_1003A91B
cmp	al, 23h
jz	short loc_1003A91B
cmp	al, 3Bh
jnz	short loc_1003A924
			
cmp	edx, 2
jnz	short loc_1003A924
			
mov	byte ptr [esi],	5Ch
inc	esi
			
mov	[esi], al
inc	esi
jmp	short loc_1003A94D
			
movzx	ebx, al
mov	byte ptr [esi],	5Ch
movsx	eax, al
shr	ebx, 4
mov	bl, ds:byte_100A6CB0[ebx]
mov	[esi+1], bl
and	eax, 0Fh
mov	al, ds:byte_100A6CB0[eax]
mov	[esi+2], al
add	esi, 3
inc	ecx
cmp	ecx, edi
jl	short loc_1003A8E4
cmp	edx, 1
jnz	short loc_1003A95B
mov	byte ptr [esi],	22h
inc	esi
mov	eax, [esp+14h+arg_8]
mov	byte ptr [esi],	0
test	eax, eax
jz	short loc_1003A968
mov	[eax], edx
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
public CERT_RFC1485_EscapeAndQuote
			
			
push	ecx
mov	ecx, [esp+4+arg_8]
mov	edx, [esp+4+arg_4]
lea	eax, [esp+4+var_4]
push	eax
mov	eax, [esp+8+arg_C]
push	ecx
mov	ecx, [esp+0Ch+arg_0]
push	edx
mov	[esp+10h+var_4], 1
call	sub_1003A880
add	esp, 10h
retn
align 10h
public CERT_GetOidString
			
			
sub	esp, 10h
mov	ecx, [esp+10h+arg_0]
mov	eax, [ecx+8]
push	ebp
push	edi
xor	edi, edi
xor	ebp, ebp
mov	[esp+18h+var_10], ebp
mov	[esp+18h+var_C], edi
cmp	eax, 400h
jbe	short loc_1003A9D4
push	0FFFFE004h
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	ebp
add	esp, 10h
retn
mov	ecx, [ecx+4]
cmp	byte ptr [ecx],	80h
lea	edx, [eax+ecx]
push	esi
mov	[esp+1Ch+arg_0], edx
jnz	short loc_1003AA18
cmp	eax, 2
jnz	short loc_1003AA18
movzx	eax, byte ptr [ecx+1]
push	eax
push	offset aLu	
call	ds:PR_smprintf
mov	esi, eax
add	esp, 8
cmp	esi, edi
jnz	short loc_1003AA0F
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
pop	ebp
add	esp, 10h
retn
			
cmp	ecx, edx
jnb	loc_1003AD0F
push	ebx
jmp	short loc_1003AA27
mov	edx, [esp+20h+arg_0]
mov	ebx, ecx
cmp	ecx, edx
jnb	short loc_1003AA3A
lea	ecx, [ecx+0]
test	byte ptr [ebx],	80h
jz	short loc_1003AA3A
inc	ebx
cmp	ebx, edx
jb	short loc_1003AA30
			
mov	eax, ebx
sub	eax, ecx
cmp	eax, 3		
ja	loc_1003AAF6	
xor	ecx, ecx
jmp	ds:off_1003AD18[eax*4] 
			
movzx	ecx, byte ptr [ebx-3] 
and	ecx, 7Fh
shl	ecx, 15h
cmp	ecx, edi
jz	loc_1003AC9B
			
movzx	edx, byte ptr [ebx-2] 
and	edx, 7Fh
shl	edx, 0Eh
or	ecx, edx
jz	loc_1003AC9B
			
movzx	eax, byte ptr [ebx-1] 
and	eax, 7Fh
shl	eax, 7
or	ecx, eax
jz	loc_1003AC9B
			
movzx	edx, byte ptr [ebx] 
and	edx, 7Fh
or	ecx, edx
test	byte ptr [ebx],	80h
jnz	loc_1003AC9B
cmp	ebp, edi
jnz	short loc_1003AAD7
mov	eax, 0CCCCCCCDh
mul	ecx
shr	edx, 5
mov	eax, edx
cmp	edx, 2
jb	short loc_1003AAB1
mov	eax, 2
lea	edx, [eax+eax*4]
add	edx, edx
add	edx, edx
add	edx, edx
sub	ecx, edx
push	ecx
push	eax
push	offset aOid_Lu_Lu 
call	ds:PR_smprintf
mov	ebp, eax
add	esp, 0Ch
mov	[esp+20h+var_10], ebp
jmp	loc_1003ACCE
push	ecx
push	ebp
push	offset aS_Lu	
mov	[esp+2Ch+var_C], ebp
call	ds:PR_smprintf
mov	ebp, eax
add	esp, 0Ch
mov	[esp+20h+var_10], ebp
jmp	loc_1003ACCE
cmp	eax, 9		
ja	loc_1003AC9B
add	eax, 0FFFFFFFCh
xor	esi, esi
cmp	eax, 5		
ja	loc_1003AC09	
jmp	ds:off_1003AD28[eax*4] 
			
mov	al, [ebx-9]	
and	al, 1
movzx	eax, al
cdq
xor	edi, edi
mov	esi, eax
shl	esi, 1Fh
mov	ecx, edi
or	ecx, esi
jz	loc_1003AC9B
			
mov	dl, [ebx-8]	
and	dl, 7Fh
movzx	eax, dl
cdq
shl	eax, 18h
or	esi, eax
mov	eax, edi
or	eax, esi
jz	loc_1003AC9B
			
mov	cl, [ebx-7]	
and	cl, 7Fh
movzx	eax, cl
cdq
shl	eax, 11h
or	esi, eax
mov	edx, edi
or	edx, esi
jz	loc_1003AC9B
			
mov	al, [ebx-6]	
and	al, 7Fh
movzx	eax, al
cdq
shl	eax, 0Ah
or	esi, eax
mov	ecx, edi
or	ecx, esi
jz	loc_1003AC9B
			
mov	dl, [ebx-5]	
and	dl, 7Fh
movzx	eax, dl
cdq
add	eax, eax
add	eax, eax
add	eax, eax
or	esi, eax
mov	eax, edi
or	eax, esi
jz	loc_1003AC9B
			
mov	cl, [ebx-4]	
and	cl, 7Fh
movzx	eax, cl
cdq
shld	edx, eax, 1Ch
shl	eax, 1Ch
or	edi, eax
or	esi, edx
mov	edx, edi
or	edx, esi
jz	loc_1003AC9B
movzx	eax, byte ptr [ebx-3]
and	al, 7Fh
movzx	eax, al
cdq
shld	edx, eax, 7
mov	ebp, edx
movzx	edx, byte ptr [ebx-2]
shl	eax, 7
mov	ecx, eax
and	dl, 7Fh
movzx	eax, dl
cdq
or	ecx, eax
movzx	eax, byte ptr [ebx-1]
or	ebp, edx
shld	ebp, ecx, 7
and	al, 7Fh
movzx	eax, al
cdq
or	ebp, edx
movzx	edx, byte ptr [ebx]
shl	ecx, 7
or	ecx, eax
shld	ebp, ecx, 7
and	dl, 7Fh
movzx	eax, dl
cdq
shl	ecx, 7
or	ecx, eax
or	ebp, edx
or	edi, ecx
or	esi, ebp
mov	ebp, [esp+20h+var_10]
test	byte ptr [ebx],	80h 
jnz	loc_1003AC9B
test	ebp, ebp
jnz	short loc_1003AC7E
push	ebp
push	28h
push	esi
push	edi
call	sub_1009FFE0
test	edx, edx
ja	short loc_1003AC2F
jb	short loc_1003AC2B
cmp	eax, 2
jnb	short loc_1003AC2F
mov	ecx, edx
jmp	short loc_1003AC36
			
mov	eax, 2
xor	ecx, ecx
mov	[esp+20h+var_4], ecx
mov	[esp+20h+var_8], eax
mov	edx, eax
mov	ebp, ecx
shld	ecx, eax, 2
add	eax, eax
add	eax, eax
add	edx, eax
mov	eax, [esp+20h+var_4]
adc	ebp, ecx
mov	ecx, [esp+20h+var_8]
shld	ebp, edx, 3
add	edx, edx
add	edx, edx
add	edx, edx
sub	edi, edx
sbb	esi, ebp
push	esi
push	edi
push	eax
push	ecx
push	offset aOid_Llu_Llu 
call	ds:PR_smprintf
mov	ebp, eax
add	esp, 14h
mov	[esp+20h+var_10], ebp
jmp	short loc_1003ACCE
push	esi
push	edi
push	ebp
push	offset aS_Llu	
mov	[esp+30h+var_C], ebp
call	ds:PR_smprintf
mov	ebp, eax
add	esp, 10h
mov	[esp+20h+var_10], ebp
jmp	short loc_1003ACCE
			
test	ebp, ebp
jnz	short loc_1003ACB5
push	offset aOid_unsupporte 
call	ds:PR_smprintf
mov	ebp, eax
add	esp, 4
mov	[esp+20h+var_10], ebp
jmp	short loc_1003ACCE
push	ebp
push	offset aS_unsupported 
mov	[esp+28h+var_C], ebp
call	ds:PR_smprintf
add	esp, 8
mov	ebp, eax
mov	[esp+20h+var_10], eax
			
mov	eax, [esp+20h+var_C]
xor	edi, edi
cmp	eax, edi
jz	short loc_1003ACE6
push	eax
call	ds:PR_smprintf_free
add	esp, 4
mov	[esp+20h+var_C], edi
cmp	ebp, edi
jz	short loc_1003AD01
lea	ecx, [ebx+1]
cmp	ecx, [esp+20h+arg_0]
jb	loc_1003AA23
pop	ebx
pop	esi
pop	edi
mov	eax, ebp
pop	ebp
add	esp, 10h
retn
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	ebx
pop	esi
pop	edi
mov	eax, ebp
pop	ebp
add	esp, 10h
retn
dd offset loc_1003AA74	
dd offset loc_1003AA62
dd offset loc_1003AA50
dd offset loc_1003AB78	
dd offset loc_1003AB60
dd offset loc_1003AB47
dd offset loc_1003AB2E
dd offset loc_1003AB14
mov	eax, [edi+8]
push	esi
lea	ecx, [eax+eax+2]
push	ecx
push	0
push	0
call	SECITEM_AllocItem_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1003AD5D
pop	esi
retn
mov	edx, [esi+4]
mov	byte ptr [edx],	23h
mov	eax, [edi+8]
lea	ecx, [eax+eax+1]
mov	[esi+8], ecx
xor	ecx, ecx
cmp	[edi+8], ecx
jbe	short loc_1003ADA5
push	ebx
mov	edx, [edi+4]
movzx	edx, byte ptr [edx+ecx]
mov	ebx, [esi+4]
mov	eax, edx
shr	eax, 4
mov	al, ds:byte_100A6CC0[eax]
mov	[ebx+ecx*2+1], al
mov	eax, [esi+4]
and	edx, 0Fh
mov	dl, ds:byte_100A6CC0[edx]
mov	[eax+ecx*2+2], dl
inc	ecx
cmp	ecx, [edi+8]
jb	short loc_1003AD75
pop	ebx
mov	eax, [esi+8]
mov	ecx, [esi+4]
mov	byte ptr [eax+ecx], 0
mov	eax, esi
pop	esi
retn
align 10h
mov	eax, 2038h
call	__alloca_probe
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+2038h+var_4], eax
mov	eax, [esp+2038h+arg_0]
push	ebx
push	ebp
mov	ebp, [esp+2040h+arg_4]
push	esi
mov	esi, [esp+2044h+arg_8]
mov	[esp+2044h+var_200C], eax
xor	eax, eax
neg	esi
push	edi
sbb	esi, esi
push	ebp
mov	edi, offset off_100A68E0
mov	[esp+204Ch+var_2038], eax
mov	[esp+204Ch+var_2030], eax
mov	[esp+204Ch+var_2034], eax
mov	[esp+204Ch+var_2024], eax
mov	[esp+204Ch+var_202C], eax
mov	[esp+204Ch+var_2028], 1
mov	[esp+204Ch+Src], eax
mov	[esp+204Ch+var_201C], 7FFFh
lea	ebx, [eax+1Fh]
and	esi, 109h
call	CERT_GetAVATag
add	esp, 4
cmp	eax, 29h
jz	short loc_1003AE52
mov	ecx, 29h
cmp	ecx, esi
jz	short loc_1003AE52
mov	ecx, [edi+18h]
add	edi, 10h
cmp	ecx, eax
jnz	short loc_1003AE44
			
cmp	[edi+8], esi
mov	esi, [esp+2048h+arg_8]
jz	short loc_1003AE77
mov	ecx, [edi]
mov	edx, [edi+4]
mov	eax, [edi+8]
mov	ebx, [edi+0Ch]
mov	[esp+2048h+Src], ecx
mov	[esp+2048h+var_201C], edx
mov	[esp+2048h+var_2018], eax
jmp	short loc_1003AE83
test	esi, esi
jz	short loc_1003AE83
mov	[esp+2048h+var_2034], 1
			
cmp	esi, 14h
jnz	short loc_1003AE97
cmp	ebx, 1Fh
jnz	short loc_1003AE97
mov	[esp+2048h+var_2034], 1
jmp	short loc_1003AEC5
			
cmp	[esp+2048h+var_2034], 0
jnz	short loc_1003AEBE
lea	ecx, [ebp+0Ch]
push	ecx
call	CERT_DecodeAVAValue
add	esp, 4
mov	[esp+2048h+var_2038], eax
test	eax, eax
jnz	short loc_1003AEBE
mov	[esp+2048h+var_2034], 1
test	esi, esi
jnz	short loc_1003AEC5
			
cmp	[esp+2048h+Src], 0
jnz	short loc_1003AEF5
			
push	ebp
call	CERT_GetOidString
add	esp, 4
mov	[esp+2048h+var_2030], eax
mov	[esp+2048h+Src], eax
test	eax, eax
jnz	short loc_1003AEF5
mov	eax, [esp+2048h+var_2038]
test	eax, eax
jz	short loc_1003AEED
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
or	eax, 0FFFFFFFFh
jmp	loc_1003B176
			
mov	esi, [esp+2048h+var_2034]
test	esi, esi
jz	short loc_1003AF0D
lea	edi, [ebp+0Ch]
call	sub_1003AD40
mov	[esp+2048h+var_2038], eax
test	eax, eax
jz	short loc_1003AF7D
mov	ebp, [esp+2048h+Src]
lea	ecx, [ebp+1]
mov	al, [ebp+0]
inc	ebp
test	al, al
jnz	short loc_1003AF14
sub	ebp, ecx
test	esi, esi
jz	short loc_1003AF2B
mov	edx, [esp+2048h+var_2038]
mov	esi, [edx+8]
jmp	short loc_1003AF44
lea	eax, [esp+2048h+var_2028]
push	eax
mov	eax, [esp+204Ch+var_2038]
mov	edi, [eax+8]
mov	ebx, [eax+4]
call	sub_1003A770
add	esp, 4
mov	esi, eax
lea	eax, [esi+ebp+2]
mov	[esp+2048h+var_2010], eax
mov	edi, esi
cmp	eax, 800h
jbe	short loc_1003AFCE
cmp	[esp+2048h+arg_8], 0
jz	short loc_1003AF97
push	eax
call	PORT_Alloc_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1003AFD2
mov	ecx, [esp+2048h+var_2038]
push	1
push	ecx
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esp+2048h+var_2030]
test	eax, eax
jz	short loc_1003AF8F
push	eax
call	ds:PR_smprintf_free
add	esp, 4
or	eax, 0FFFFFFFFh
jmp	loc_1003B176
cmp	ebp, 3FFh
jnb	short loc_1003AFA8
mov	edi, 7FAh
sub	edi, ebp
jmp	short loc_1003AFCE
cmp	esi, 3FFh
jnb	short loc_1003AFB9
mov	eax, 7FBh
sub	eax, esi
jmp	short loc_1003AFC0
mov	edi, 3FCh
mov	eax, edi
cmp	ebp, eax
jbe	short loc_1003AFCE
mov	[esp+2048h+var_2024], 1
mov	ebp, eax
			
lea	ebx, [esp+2048h+var_2008]
mov	edx, [esp+2048h+Src]
push	ebp		
push	edx		
push	ebx		
call	memcpy
add	esp, 0Ch
cmp	[esp+2048h+var_2024], 0
jz	short loc_1003AFF4
mov	word ptr [ebx+ebp-2], 2E2Eh
mov	byte ptr [ebx+ebp-3], 2Eh
mov	eax, [esp+2048h+var_2030]
mov	byte ptr [ebx+ebp], 3Dh
inc	ebp
test	eax, eax
jz	short loc_1003B00B
push	eax
call	ds:PR_smprintf_free
add	esp, 4
cmp	[esp+2048h+arg_8], 0
jnz	short loc_1003B01F
mov	eax, [esp+2048h+var_201C]
cmp	edi, eax
jbe	short loc_1003B01F
mov	edi, eax
			
cmp	esi, edi
jbe	short loc_1003B02D
mov	esi, edi
mov	[esp+2048h+var_202C], 1
cmp	[esp+2048h+var_2034], 0
jz	short loc_1003B068
mov	eax, [esp+2048h+var_2038]
mov	ecx, [eax+4]
push	esi		
lea	edi, [esi+ebp]
push	ecx		
add	ebp, ebx
push	ebp		
add	edi, ebx
call	memcpy
add	esp, 0Ch
cmp	[esp+2048h+var_202C], 0
mov	byte ptr [edi],	0
jz	short loc_1003B061
mov	word ptr [edi-2], 2E2Eh
mov	byte ptr [edi-3], 2Eh
xor	edi, edi
jmp	loc_1003B141
cmp	[esp+2048h+var_202C], 0
jnz	short loc_1003B095
mov	eax, [esp+2048h+var_2038]
mov	ecx, [eax+4]
mov	eax, [eax+8]
lea	edx, [esp+2048h+var_2028]
push	edx
push	ecx
mov	ecx, [esp+2050h+var_2010]
sub	ecx, ebp
push	ecx
lea	ecx, [ebx+ebp]
call	sub_1003A880
mov	edi, eax
jmp	loc_1003B13E
mov	ecx, [esp+2048h+var_2038]
mov	eax, [ecx+8]
cmp	eax, esi
jb	short loc_1003B0A2
mov	eax, esi
mov	ecx, [ecx+4]
lea	edx, [esp+2048h+var_2028]
push	edx
push	ecx
push	1803h
lea	ecx, [esp+2054h+var_1808]
call	sub_1003A880
mov	[esp+esi+2054h+var_1808], 0
mov	dl, [esp+esi+2054h+var_1809]
dec	esi
and	dl, 0C0h
add	esp, 0Ch
mov	edi, eax
cmp	dl, 80h
jnz	short loc_1003B0FA
lea	esp, [esp+0]
test	esi, esi
jz	short loc_1003B0FA
mov	[esp+esi+2048h+var_1808], 0
mov	al, [esp+esi+2048h+var_1809]
dec	esi
and	al, 0C0h
cmp	al, 80h
jz	short loc_1003B0E0
			
mov	[esp+esi+2048h+var_1807], 2E2Eh
add	esi, 3
mov	al, 22h
mov	[esp+esi+2048h+var_1808], 2Eh
cmp	[esp+2048h+var_1808], al
jnz	short loc_1003B122
inc	esi
mov	[esp+esi+2048h+var_1808], al
mov	byte ptr [esp+esi+2048h+var_1807], 0
add	esi, 2
push	esi		
lea	ecx, [esp+204Ch+var_1808]
push	ecx		
add	ebp, ebx
push	ebp		
call	memcpy
add	esp, 0Ch
mov	edx, [esp+2048h+var_2038]
push	1
push	edx
call	SECITEM_FreeItem_Util
add	esp, 8
test	edi, edi
jnz	short loc_1003B163
mov	edi, [esp+2048h+var_200C]
push	ebx		
call	sub_1003A6D0
add	esp, 4
mov	edi, eax
lea	eax, [esp+2048h+var_2008]
cmp	ebx, eax
jz	short loc_1003B174
push	ebx
call	PORT_Free_Util
add	esp, 4
mov	eax, edi
			
mov	ecx, [esp+2048h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 2038h
retn
align 10h
public CERT_NameToAsciiInvertible
			
			
sub	esp, 10h
mov	eax, [esp+10h+arg_0]
xor	ecx, ecx
push	edi
mov	edi, [eax+4]
mov	[esp+14h+var_10], 1
mov	[esp+14h+var_C], ecx
mov	[esp+14h+var_8], ecx
mov	[esp+14h+var_4], ecx
mov	[esp+14h+arg_0], edi
cmp	edi, ecx
jnz	short loc_1003B1C0
xor	eax, eax
pop	edi
add	esp, 10h
retn
mov	eax, edi
cmp	[edi], ecx
jz	short loc_1003B1CD
add	eax, 4
cmp	[eax], ecx
jnz	short loc_1003B1C6
push	ebx
push	ebp
lea	ebp, [eax-4]
push	esi
cmp	ebp, edi
jb	short loc_1003B24F
jmp	short loc_1003B1E0
align 10h
			
mov	ecx, [ebp+0]
mov	esi, [ecx]
mov	eax, 1
test	esi, esi
jz	short loc_1003B248
mov	edi, edi
mov	ebx, [esi]
add	esi, 4
test	ebx, ebx
jz	short loc_1003B248
cmp	[esp+20h+var_10], 0
jnz	short loc_1003B225
test	eax, eax
mov	eax, offset word_100A1520
jnz	short loc_1003B20E
mov	eax, offset asc_100A6D2C 
push	eax		
lea	edi, [esp+24h+var_C]
call	sub_1003A6D0
add	esp, 4
test	eax, eax
jnz	short loc_1003B25B
mov	edi, [esp+20h+arg_0]
jmp	short loc_1003B22D
mov	[esp+20h+var_10], 0
mov	edx, [esp+20h+arg_4]
push	edx
lea	eax, [esp+24h+var_C]
push	ebx
push	eax
call	sub_1003ADC0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003B25B
test	esi, esi
jnz	short loc_1003B1F0
			
sub	ebp, 4
cmp	ebp, edi
jnb	short loc_1003B1E0
mov	eax, [esp+20h+var_C]
pop	esi
pop	ebp
pop	ebx
pop	edi
add	esp, 10h
retn
			
mov	eax, [esp+20h+var_C]
test	eax, eax
jz	short loc_1003B26C
push	eax
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	ebp
pop	ebx
xor	eax, eax
pop	edi
add	esp, 10h
retn
align 10h
public CERT_NameToAscii
			
mov	eax, [esp+arg_0]
push	0
push	eax
call	CERT_NameToAsciiInvertible
add	esp, 8
retn
public CERT_DerNameToAscii
			
sub	esp, 8
push	esi
push	edi
push	800h
xor	edi, edi
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1003B2E1
mov	eax, [esp+10h+arg_0]
push	eax
push	offset dword_100A7B50
lea	ecx, [esp+18h+var_8]
push	ecx
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1003B2D6
push	eax
lea	edx, [esp+14h+var_8]
push	edx
call	CERT_NameToAsciiInvertible
add	esp, 8
mov	edi, eax
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
add	esp, 8
retn
align 10h
			
add	eax, 0Ch
push	ebp
push	eax
call	CERT_DecodeAVAValue
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_1003B305
pop	ebp
retn
push	ebx
mov	ebx, [ebp+4]
push	esi
push	edi
mov	edi, [ebp+8]
push	0
call	sub_1003A770
mov	ebx, [esp+14h+arg_0]
add	esp, 4
lea	esi, [eax+1]
push	esi
test	ebx, ebx
jz	short loc_1003B32F
push	ebx
call	PORT_ArenaZAlloc_Util
add	esp, 8
jmp	short loc_1003B337
call	PORT_ZAlloc_Util
add	esp, 4
mov	edi, eax
test	edi, edi
jz	short loc_1003B364
mov	ecx, [ebp+4]
mov	eax, [ebp+8]
push	0
push	ecx
push	esi
mov	ecx, edi
call	sub_1003A880
add	esp, 0Ch
test	eax, eax
jz	short loc_1003B364
test	ebx, ebx
jnz	short loc_1003B362
push	edi
call	PORT_Free_Util
add	esp, 4
xor	edi, edi
			
push	1
push	ebp
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebx
pop	ebp
retn
align 10h
			
push	ebx
mov	ebx, [eax+4]
push	ebp
mov	ebp, [esp+8+arg_4]
push	edi
xor	edi, edi
test	ebx, ebx
jz	short loc_1003B3D6
push	esi
mov	eax, [ebx]
add	ebx, 4
test	eax, eax
jz	short loc_1003B3BE
mov	esi, [eax]
test	esi, esi
jz	short loc_1003B3BA
mov	edi, [esi]
add	esi, 4
test	edi, edi
jz	short loc_1003B3BA
push	edi
call	CERT_GetAVATag
add	esp, 4
cmp	eax, ebp
jz	short loc_1003B3BE
test	esi, esi
jnz	short loc_1003B3A0
			
test	ebx, ebx
jnz	short loc_1003B391
			
pop	esi
test	edi, edi
jz	short loc_1003B3D6
mov	ecx, [esp+0Ch+arg_0]
push	ecx
mov	eax, edi
call	sub_1003B2F0
add	esp, 4
pop	edi
pop	ebp
pop	ebx
retn
			
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
push	ebx
mov	ebx, [eax+4]
push	ebp
xor	ebp, ebp
test	ebx, ebx
jz	short loc_1003B43A
push	esi
push	edi
lea	ecx, [ecx+0]
mov	eax, [ebx]
add	ebx, 4
test	eax, eax
jz	short loc_1003B422
mov	edi, [eax]
test	edi, edi
jz	short loc_1003B41E
nop
mov	esi, [edi]
add	edi, 4
test	esi, esi
jz	short loc_1003B41E
push	esi
call	CERT_GetAVATag
add	esp, 4
cmp	eax, [esp+10h+arg_4]
jnz	short loc_1003B41A
mov	ebp, esi
test	edi, edi
jnz	short loc_1003B400
			
test	ebx, ebx
jnz	short loc_1003B3F0
pop	edi
pop	esi
test	ebp, ebp
jz	short loc_1003B43A
mov	ecx, [esp+8+arg_0]
push	ecx
mov	eax, ebp
call	sub_1003B2F0
add	esp, 4
pop	ebp
pop	ebx
retn
			
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
			
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
mov	ebx, eax
test	ebp, ebp
jz	short loc_1003B4AF
test	ebx, ebx
jz	short loc_1003B4AF
cmp	byte ptr [ebx],	0
jz	short loc_1003B4AF
push	edi
push	ebx
call	PL_strlen
mov	ecx, [esp+10h+arg_4]
mov	edi, eax
add	esp, 4
cmp	[ecx], edi
jbe	short loc_1003B4B4
test	edi, edi
jz	short loc_1003B49C
push	esi
mov	esi, ebp
sub	ebx, ebp
mov	[esp+10h+arg_0], edi
jmp	short loc_1003B480
align 10h
			
movsx	eax, byte ptr [ebx+esi]
push	eax		
call	ds:tolower
mov	[esi], al
add	esp, 4
inc	esi
dec	[esp+10h+arg_0]
jnz	short loc_1003B480
mov	ecx, [esp+10h+arg_4]
pop	esi
or	edx, 0FFFFFFFFh
mov	byte ptr [edi+ebp], 0
lea	eax, [edi+ebp+1]
sub	edx, edi
add	[ecx], edx
pop	edi
pop	ebp
pop	ebx
retn
			
mov	eax, ebp
pop	ebp
pop	ebx
retn
pop	edi
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
push	ecx
push	esi
mov	esi, eax
test	esi, esi
jz	loc_1003B58E
mov	edx, [esp+8+arg_0]
test	edx, edx
jz	loc_1003B58E
mov	ecx, [edx+4]
test	ecx, ecx
jz	loc_1003B58E
push	ebx
mov	ebx, [edx+8]
test	ebx, ebx
jz	loc_1003B58D
cmp	byte ptr [ecx],	0
jz	loc_1003B58D
push	ebp
lea	ebp, [ebx+1]
xor	eax, eax
mov	[esp+10h+var_4], ebp
test	ebx, ebx
jz	short loc_1003B518
cmp	byte ptr [ecx+eax], 20h
jnb	short loc_1003B50F
add	ebp, 2
inc	eax
cmp	eax, ebx
jb	short loc_1003B506
mov	[esp+10h+var_4], ebp
mov	eax, [esp+10h+arg_4]
cmp	[eax], ebp
jbe	short loc_1003B58A
push	edi
xor	edi, edi
test	ebx, ebx
jz	short loc_1003B57C
mov	ebp, ds:tolower
lea	ecx, [ecx+0]
mov	eax, [edx+4]
mov	al, [edi+eax]
cmp	al, 20h
jnb	short loc_1003B55F
movzx	eax, al
mov	ecx, eax
mov	byte ptr [esi],	5Ch
shr	ecx, 4
mov	cl, ds:byte_100A6CB0[ecx]
mov	[esi+1], cl
and	eax, 0Fh
mov	al, ds:byte_100A6CB0[eax]
mov	[esi+2], al
add	esi, 3
jmp	short loc_1003B56F
movzx	ecx, al
push	ecx		
call	ebp 
mov	edx, [esp+18h+arg_0]
add	esp, 4
mov	[esi], al
inc	esi
inc	edi
cmp	edi, ebx
jb	short loc_1003B530
mov	ebp, [esp+14h+var_4]
mov	eax, [esp+14h+arg_4]
pop	edi
mov	byte ptr [esi],	0
sub	[eax], ebp
pop	ebp
pop	ebx
lea	eax, [esi+1]
pop	esi
pop	ecx
retn
mov	eax, esi
pop	ebp
			
pop	ebx
			
pop	esi
pop	ecx
retn
align 10h
sub	esp, 18h
push	ebx
push	800h
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1003B5BC
pop	ebx
add	esp, 18h
retn
push	ebp
push	esi
mov	esi, [esp+24h+arg_0]
mov	eax, [esi+44h]
push	edi
mov	[esp+28h+var_8], 0
mov	[esp+28h+var_18], eax
test	eax, eax
jnz	short loc_1003B5DF
mov	eax, 7D0h
mov	[esp+28h+var_18], eax
inc	eax
push	eax
push	ebx
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
mov	[esp+28h+var_14], edi
mov	ebp, edi
test	edi, edi
jz	loc_1003B714
push	1Fh
push	ebx
lea	eax, [esi+0CCh]
call	sub_1003B380
lea	ecx, [esp+30h+var_18]
push	ecx
push	edi
call	sub_1003B440
mov	ebp, eax
push	63h
push	ebx
lea	eax, [esi+0CCh]
call	sub_1003B380
lea	edx, [esp+40h+var_18]
push	edx
push	ebp
call	sub_1003B440
mov	ecx, [esp+48h+arg_0]
mov	esi, eax
lea	eax, [esp+48h+var_C]
push	eax
push	53h
push	ecx
call	CERT_FindCertExtension
add	esp, 2Ch
test	eax, eax
jnz	loc_1003B6E9
cmp	[esp+28h+var_8], eax
jz	loc_1003B6E9
lea	edx, [esp+28h+var_C]
push	edx
push	ebx
call	CERT_DecodeAltNameExtension
add	esp, 8
mov	[esp+28h+var_10], eax
test	eax, eax
jz	short loc_1003B6DA
mov	ebp, eax
mov	edi, edi
mov	eax, [ebp+0]
cmp	eax, 5
jnz	short loc_1003B6AF
push	1Fh
push	ebx
lea	eax, [ebp+4]
call	sub_1003B380
lea	ecx, [esp+30h+var_18]
push	ecx
push	esi
call	sub_1003B440
mov	esi, eax
push	63h
push	ebx
lea	eax, [ebp+4]
call	sub_1003B380
lea	edx, [esp+40h+var_18]
push	edx
push	esi
call	sub_1003B440
mov	edi, [esp+48h+var_14]
add	esp, 20h
jmp	short loc_1003B6C7
cmp	eax, 2
jnz	short loc_1003B6C9
lea	eax, [esp+28h+var_18]
push	eax
lea	ecx, [ebp+4]
push	ecx
mov	eax, esi
call	sub_1003B4C0
add	esp, 8
mov	esi, eax
push	ebp
call	CERT_GetNextGeneralName
mov	ebp, eax
add	esp, 4
cmp	ebp, [esp+28h+var_10]
jnz	short loc_1003B670
lea	edx, [esp+28h+var_C]
push	0
push	edx
call	SECITEM_FreeItem_Util
add	esp, 8
			
sub	esi, edi
inc	esi
xor	ebp, ebp
cmp	esi, 1
jle	short loc_1003B714
mov	eax, [esp+28h+arg_0]
mov	ecx, [eax]
push	esi
push	ecx
call	PORT_ArenaAlloc_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	short loc_1003B714
push	esi		
push	edi		
push	ebp		
call	memcpy
add	esp, 0Ch
			
push	0
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 18h
retn
align 10h
public CERT_GetFirstEmailAddress
			
			
mov	eax, [esp+arg_0]
test	eax, eax
jz	short loc_1003B747
mov	eax, [eax+118h]
test	eax, eax
jz	short loc_1003B747
cmp	byte ptr [eax],	0
jnz	short locret_1003B749
			
xor	eax, eax
retn
align 10h
public CERT_GetNextEmailAddress
			
			
cmp	[esp+arg_0], 0
push	esi
jz	short loc_1003B77B
mov	esi, [esp+4+arg_4]
test	esi, esi
jz	short loc_1003B77B
cmp	byte ptr [esi],	0
jz	short loc_1003B77B
push	esi
call	PL_strlen
lea	eax, [esi+eax+1]
add	esp, 4
test	eax, eax
jz	short loc_1003B77B
cmp	byte ptr [eax],	0
jnz	short loc_1003B77D
			
xor	eax, eax
pop	esi
retn
align 10h
public CERT_GetCertEmailAddress
push	esi
push	edi
mov	edi, [esp+8+arg_0]
push	1Fh
push	0
mov	eax, edi
call	sub_1003B380
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1003B7A9
push	63h
push	eax
mov	eax, edi
call	sub_1003B380
add	esp, 8
mov	esi, eax
push	esi
call	sub_1003D180
add	esp, 4
mov	edi, eax
test	esi, esi
jz	short loc_1003B7C1
push	esi
call	PORT_Free_Util
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public CERT_GetCommonName
			
mov	eax, [esp+arg_0]
push	29h
push	0
call	sub_1003B3E0
add	esp, 8
retn
align 10h
public CERT_GetCountryName
mov	eax, [esp+arg_0]
push	2Ah
push	0
call	sub_1003B380
add	esp, 8
retn
align 10h
public CERT_GetLocalityName
mov	eax, [esp+arg_0]
push	2Bh
push	0
call	sub_1003B380
add	esp, 8
retn
align 10h
public CERT_GetStateName
mov	eax, [esp+arg_0]
push	2Ch
push	0
call	sub_1003B380
add	esp, 8
retn
align 10h
public CERT_GetOrgName
			
mov	eax, [esp+arg_0]
push	2Dh
push	0
call	sub_1003B380
add	esp, 8
retn
align 10h
public CERT_GetDomainComponentName
			
mov	eax, [esp+arg_0]
push	30h
push	0
call	sub_1003B380
add	esp, 8
retn
align 10h
public CERT_GetOrgUnitName
			
mov	eax, [esp+arg_0]
push	2Eh
push	0
call	sub_1003B380
add	esp, 8
retn
align 10h
public CERT_GetCertUid
mov	eax, [esp+arg_0]
push	62h
push	0
call	sub_1003B380
add	esp, 8
retn
align 10h
public NSS_Get_CERT_TimeChoiceTemplate
			
mov	eax, offset dword_100A6DA8
retn
align 10h
public NSS_Get_CERT_CertificateTemplate
mov	eax, offset dword_100A6E28
retn
align 10h
public NSS_Get_SEC_SignedCertificateTemplate
mov	eax, offset dword_100A6F18
retn
align 10h
public NSS_Get_CERT_SequenceOfCertExtensionTemplate
			
			
			
mov	eax, offset dword_100A6D98
retn
align 10h
push	ebx
mov	ebx, [esp+4+arg_C]
push	esi
mov	esi, [esp+8+arg_8]
mov	eax, [esi+8]
push	edi
mov	edi, [esp+0Ch+arg_4]
add	eax, [edi+8]
mov	[ebx+8], eax
cmp	dword ptr [esi+4], 0
jz	short loc_1003B974
cmp	dword ptr [edi+4], 0
jz	short loc_1003B974
mov	edx, [esp+0Ch+arg_0]
push	eax
push	edx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[ebx+4], eax
test	eax, eax
jz	short loc_1003B974
mov	ecx, [esi+8]
mov	edx, [esi+4]
push	ecx		
push	edx		
push	eax		
call	memcpy
mov	eax, [edi+8]
mov	edx, [ebx+4]
mov	ecx, [edi+4]
add	edx, [esi+8]
push	eax		
push	ecx		
push	edx		
call	memcpy
add	esp, 18h
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
			
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
			
sub	esp, 30h
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1003B99F
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 30h
retn
push	ebx
push	esi
push	30h		
lea	eax, [esp+40h+Dst]
push	0		
push	eax		
call	memset
mov	ecx, [esp+48h+arg_0]
push	ecx
push	offset dword_100A29C0
lea	edx, [esp+50h+Dst]
push	edx
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 1Ch
test	eax, eax
jnz	short loc_1003BA05
mov	esi, [esp+3Ch+arg_4]
mov	[esi], eax
mov	[esi+4], eax
mov	[esi+8], eax
lea	eax, [esp+3Ch+Dst]
push	eax
push	offset dword_100A7008
push	esi
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1003BA05
mov	ecx, [esi+8]
mov	ebx, [esi+4]
push	ecx
call	PORT_Alloc_Util
add	esp, 4
mov	[esi+4], eax
test	eax, eax
jnz	short loc_1003BA1A
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	ebx
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 30h
retn
mov	edx, [esi+8]
push	edx		
push	ebx		
push	eax		
call	memcpy
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 14h
pop	esi
pop	ebx
xor	eax, eax
pop	edi
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1003BA5F
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 30h
retn
push	ebx
push	esi
push	30h		
lea	eax, [esp+40h+Dst]
push	0		
push	eax		
call	memset
mov	ecx, [esp+48h+arg_0]
push	ecx
push	offset dword_100A29C0
lea	edx, [esp+50h+Dst]
push	edx
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 1Ch
test	eax, eax
jnz	short loc_1003BAC5
mov	esi, [esp+3Ch+arg_4]
mov	[esi], eax
mov	[esi+4], eax
mov	[esi+8], eax
lea	eax, [esp+3Ch+Dst]
push	eax
push	offset dword_100A7078
push	esi
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1003BAC5
mov	ecx, [esi+8]
mov	ebx, [esi+4]
push	ecx
call	PORT_Alloc_Util
add	esp, 4
mov	[esi+4], eax
test	eax, eax
jnz	short loc_1003BADA
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	ebx
or	eax, 0FFFFFFFFh
pop	edi
add	esp, 30h
retn
mov	edx, [esi+8]
push	edx		
push	ebx		
push	eax		
call	memcpy
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 14h
pop	esi
pop	ebx
xor	eax, eax
pop	edi
add	esp, 30h
retn
align 10h
sub	esp, 0Ch
lea	eax, [esp+0Ch+var_C]
push	eax
push	esi
call	CERT_FindKeyUsageExtension
add	esp, 8
test	eax, eax
jnz	short loc_1003BB47
mov	eax, [esp+0Ch+var_8]
movzx	ecx, byte ptr [eax]
mov	[esi+134h], ecx
mov	dword ptr [esi+138h], 1
movzx	edx, byte ptr [eax]
push	eax
mov	[esi+130h], edx
call	PORT_Free_Util
add	esp, 4
mov	[esp+0Ch+var_8], 0
jmp	short loc_1003BB62
mov	eax, 0FFh
mov	[esi+130h], eax
mov	[esi+134h], eax
mov	dword ptr [esi+138h], 0
push	esi
call	sub_10044AC0
add	esp, 4
test	eax, eax
jz	short loc_1003BB80
mov	eax, 8000h
or	[esi+130h], eax
or	[esi+134h], eax
xor	eax, eax
add	esp, 0Ch
retn
align 10h
sub	esp, 0Ch
push	esi
mov	esi, [esp+10h+arg_0]
lea	eax, [esp+10h+var_C]
push	eax
push	esi
mov	dword ptr [esi+128h], 0
call	CERT_FindSubjectKeyIDExtension
add	esp, 8
test	eax, eax
jnz	short loc_1003BC02
mov	ecx, [esp+10h+Size]
mov	edx, [esi]
push	ecx
push	edx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+124h], eax
test	eax, eax
jz	short loc_1003BBF5
mov	ecx, [esp+10h+Size]
mov	edx, [esp+10h+Src]
push	ecx		
push	edx		
push	eax		
call	memcpy
mov	eax, [esp+1Ch+Size]
add	esp, 0Ch
mov	[esi+128h], eax
mov	dword ptr [esi+12Ch], 0
mov	ecx, [esp+10h+Src]
push	ecx
call	PORT_Free_Util
add	esp, 4
cmp	dword ptr [esi+128h], 0
jnz	short loc_1003BC43
mov	edx, [esi]
push	14h
push	edx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+124h], eax
test	eax, eax
jz	short loc_1003BC43
mov	ecx, [esi+68h]
mov	edx, [esi+64h]
push	ecx
push	edx
push	eax
push	4
call	PK11_HashBuf
add	esp, 10h
test	eax, eax
jnz	short loc_1003BC43
mov	dword ptr [esi+128h], 14h
			
mov	eax, [esi+128h]
neg	eax
sbb	eax, eax
neg	eax
dec	eax
pop	esi
add	esp, 0Ch
retn
align 10h
sub	esp, 0Ch
push	ebx
push	esi
mov	esi, eax
mov	eax, [esi]
push	esi
push	eax
call	sub_1003E990
add	esp, 8
cmp	dword ptr [esi+50h], 0
mov	[esi+16Ch], eax
jz	loc_1003BD45
lea	ecx, [esi+54h]
push	ecx
lea	ebx, [esi+48h]
push	ebx
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	loc_1003BD45
mov	eax, [esi+16Ch]
test	eax, eax
jz	loc_1003BD3A
cmp	dword ptr [eax+8], 0
jbe	short loc_1003BCEB
lea	edx, [esp+14h+var_C]
push	edx
push	esi
call	CERT_FindSubjectKeyIDExtension
add	esp, 8
test	eax, eax
jnz	loc_1003BD45
mov	ecx, [esi+16Ch]
push	edi
lea	eax, [esp+18h+var_C]
push	eax
push	ecx
call	SECITEM_ItemsAreEqual_Util
mov	edx, [esp+20h+var_8]
push	edx
mov	edi, eax
call	PORT_Free_Util
add	esp, 0Ch
test	edi, edi
pop	edi
jz	short loc_1003BD45
mov	eax, [esi+16Ch]
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_1003BD17
push	1
push	5
push	eax
call	sub_100427C0
add	esp, 0Ch
test	eax, eax
jz	short loc_1003BD17
push	eax
push	ebx
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	short loc_1003BD45
			
mov	eax, [esi+16Ch]
cmp	dword ptr [eax+18h], 0
jbe	short loc_1003BD3A
add	eax, 10h
push	eax
add	esi, 84h
push	esi
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	short loc_1003BD45
			
pop	esi
mov	eax, 1
pop	ebx
add	esp, 0Ch
retn
			
pop	esi
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
public SECKEY_DestroySubjectPublicKeyInfo
mov	eax, [esp+arg_0] 
			
test	eax, eax
jz	short locret_1003BD69
mov	eax, [eax]
test	eax, eax
jz	short locret_1003BD69
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
retn
align 10h
public CERT_GetSlopTime
mov	eax, dword_100BA5BC
retn
align 10h
public CERT_SetSlopTime
mov	eax, [esp+arg_0]
test	eax, eax
jns	short loc_1003BD8C
or	eax, 0FFFFFFFFh
retn
mov	dword_100BA5BC,	eax
xor	eax, eax
retn
align 10h
public CERT_GetCertTimes
			
push	esi
mov	esi, [esp+4+arg_0]
push	edi
test	esi, esi
jz	short loc_1003BDE5
mov	eax, [esp+8+arg_4]
test	eax, eax
jz	short loc_1003BDE5
mov	edi, [esp+8+arg_8]
test	edi, edi
jz	short loc_1003BDE5
lea	ecx, [esi+0B4h]
push	ecx
push	eax
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003BDF2
add	esi, 0C0h
push	esi
push	edi
call	DER_DecodeTimeChoice_Util
add	esp, 8
neg	eax
pop	edi
sbb	eax, eax
pop	esi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public CERT_CheckCertValidTimes
			
mov	eax, [esp+arg_0]
sub	esp, 10h
test	eax, eax
jnz	short loc_1003BE21
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
mov	eax, 3
add	esp, 10h
retn
cmp	[esp+10h+arg_C], 0
jz	short loc_1003BE35
cmp	dword ptr [eax+144h], 0
jnz	loc_1003BEBA
lea	ecx, [esp+10h+var_8]
push	ecx
lea	edx, [esp+14h+var_10]
push	edx
push	eax
call	CERT_GetCertTimes
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003BEB1
mov	eax, dword_100BA5BC
push	0FFFFFFFFh
cdq
push	0FFF0BDC0h
push	edx
push	eax
call	sub_1009FFA0
add	[esp+10h+var_10], eax
mov	eax, [esp+10h+var_C]
mov	ecx, [esp+10h+arg_8]
adc	eax, edx
mov	[esp+10h+var_C], eax
cmp	ecx, eax
mov	eax, [esp+10h+arg_4]
jg	short loc_1003BE96
jl	short loc_1003BE80
cmp	eax, [esp+10h+var_10]
jnb	short loc_1003BE96
push	0FFFFE00Bh
call	PORT_SetError_Util
add	esp, 4
mov	eax, 2
add	esp, 10h
retn
			
cmp	ecx, [esp+10h+var_4]
jl	short loc_1003BEBA
jg	short loc_1003BEA4
cmp	eax, [esp+10h+var_8]
jbe	short loc_1003BEBA
push	0FFFFE00Bh
call	PORT_SetError_Util
add	esp, 4
mov	eax, 1
add	esp, 10h
retn
			
xor	eax, eax
add	esp, 10h
retn
sub	esp, 20h
push	esi
mov	esi, [esp+24h+arg_0]
lea	eax, [esi+3Ch]
push	eax
lea	ecx, [esp+28h+var_10]
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003BF5C
cmp	[esi+4Ch], eax
jz	short loc_1003BEF9
add	esi, 48h
lea	edx, [esp+24h+var_20]
push	esi
push	edx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003BF5C
jmp	short loc_1003BF09
mov	[esp+24h+var_20], 0
mov	[esp+24h+var_1C], 0
mov	esi, [esp+24h+arg_4]
lea	eax, [esi+3Ch]
push	eax
lea	ecx, [esp+28h+var_18]
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003BF3C
cmp	[esi+4Ch], eax
jz	short loc_1003BF46
add	esi, 48h
lea	edx, [esp+24h+var_8]
push	esi
push	edx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jz	short loc_1003BF46
			
mov	eax, 1
pop	esi
add	esp, 20h
retn
			
mov	eax, [esp+24h+var_14]
cmp	eax, [esp+24h+var_C]
jg	short loc_1003BF5C
jl	short loc_1003BF3C
mov	ecx, [esp+24h+var_18]
cmp	ecx, [esp+24h+var_10]
jb	short loc_1003BF3C
			
xor	eax, eax
pop	esi
add	esp, 20h
retn
align 10h
			
cmp	[esp+arg_4], 0
mov	eax, [esp+arg_0]
jz	short loc_1003BFB5
cmp	eax, 0Bh	
ja	loc_1003C029	
jmp	ds:off_1003C030[eax*4] 
			
mov	eax, 8004h	
mov	ecx, 4
jmp	short loc_1003C012
			
mov	eax, 4		
lea	ecx, [eax-2]
jmp	short loc_1003C012
			
mov	eax, 4		
lea	ecx, [eax-3]
jmp	short loc_1003C012
			
mov	eax, 4		
lea	ecx, [eax+3]
jmp	short loc_1003C012
cmp	eax, 0Ah	
ja	short loc_1003C029 
jmp	ds:off_1003C060[eax*4] 
			
mov	eax, 80h	
mov	ecx, eax
jmp	short loc_1003C012
			
mov	eax, 4000h	
mov	ecx, 40h
jmp	short loc_1003C012
			
mov	eax, 0C000h	
mov	ecx, 40h
jmp	short loc_1003C012
			
			
mov	eax, 4		
			
mov	ecx, eax
jmp	short loc_1003C012
			
mov	ecx, 20h	
jmp	short loc_1003C00D
			
mov	eax, 4000h	
mov	ecx, 20h
jmp	short loc_1003C012
			
mov	eax, 80h	
lea	ecx, [eax-70h]
jmp	short loc_1003C012
			
mov	ecx, 4000h	
mov	eax, 2000h
			
mov	edx, [esp+arg_8]
test	edx, edx
jz	short loc_1003C01C
mov	[edx], eax
mov	eax, [esp+arg_C]
test	eax, eax
jz	short loc_1003C026
mov	[eax], ecx
xor	eax, eax
retn
			
or	eax, 0FFFFFFFFh	
retn
align 10h
dd offset loc_1003BFE2	
dd offset loc_1003BF8B
dd offset loc_1003BFE2
dd offset loc_1003BF97
dd offset loc_1003BF97
dd offset loc_1003BFA1
dd offset loc_1003C029
dd offset loc_1003BFAB
dd offset loc_1003C029
dd offset loc_1003BFAB
dd offset loc_1003BFAB
dd offset loc_1003BFCA	
dd offset loc_1003BFD6
dd offset loc_1003BFE2
dd offset loc_1003BFEB
dd offset loc_1003BFF2
dd offset loc_1003BFFE
dd offset loc_1003C029
dd offset loc_1003C029
dd offset loc_1003C029
dd offset loc_1003C008
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_1003C0AB
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
retn
push	esi
mov	esi, [esp+8+arg_4]
test	esi, 4000h
jz	short loc_1003C0F5
lea	eax, [edi+0D4h]
push	eax
and	esi, 0FFFFBFFFh
call	sub_1000F510
dec	eax
add	esp, 4
cmp	eax, 5		
ja	short loc_1003C11D 
jmp	ds:off_1003C130[eax*4] 
			
or	esi, 20h	
jmp	short loc_1003C0F5
			
or	esi, 80h	
jmp	short loc_1003C0F5
			
or	esi, 8		
jmp	short loc_1003C0F5
			
test	byte ptr [edi+130h], 88h 
jz	short loc_1003C11D 
			
test	esi, 2000h
jz	short loc_1003C10C
and	esi, 0FFFFDFFFh
test	byte ptr [edi+130h], 0C0h
jz	short loc_1003C11D 
mov	ecx, [edi+130h]
and	ecx, esi
cmp	ecx, esi
jnz	short loc_1003C11D 
pop	esi
xor	eax, eax
pop	edi
retn
			
push	0FFFFE05Ah	
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
retn
dd offset loc_1003C0DF	
dd offset loc_1003C11D
dd offset loc_1003C0E7
dd offset loc_1003C11D
dd offset loc_1003C0EC
align 10h
public CERT_DupCertificate
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1003C168
push	esi
call	sub_1004B930
push	eax
call	sub_10046950
add	esp, 8
mov	eax, esi
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	dword_100BAE04,	eax
retn
align 10h
public CERT_GetDefaultCertDB
			
mov	eax, dword_100BAE04
retn
align 10h
public CERT_AddOKDomainName
push	edi
mov	edi, [esp+4+arg_4]
test	edi, edi
jz	short loc_1003C216
mov	eax, edi
lea	edx, [eax+1]
mov	edi, edi
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1003C1A0
sub	eax, edx
jz	short loc_1003C216
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_0]
add	eax, 8
push	eax
mov	eax, [ebp+0]
push	eax
call	PORT_ArenaZAlloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_1003C1CE
pop	ebp
pop	ebx
or	eax, 0FFFFFFFFh
pop	edi
retn
push	esi
lea	esi, [ebx+4]
mov	edx, esi
mov	eax, edi
sub	edx, edi
mov	cl, [eax]
mov	[edx+eax], cl
inc	eax
test	cl, cl
jnz	short loc_1003C1D8
test	esi, esi
jz	short loc_1003C201
cmp	[esi], cl
jz	short loc_1003C201
mov	edi, ds:tolower
movsx	ecx, byte ptr [esi]
push	ecx		
call	edi 
mov	[esi], al
inc	esi
add	esp, 4
cmp	byte ptr [esi],	0
jnz	short loc_1003C1F0
			
mov	edx, [ebp+148h]
pop	esi
mov	[ebx], edx
mov	[ebp+148h], ebx
pop	ebp
pop	ebx
xor	eax, eax
pop	edi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
retn
align 10h
			
push	ecx
mov	eax, dword_100BA5C0
test	eax, eax
jns	short loc_1003C253
push	offset aNss_use_shexp_ 
call	ds:PR_GetEnv
add	esp, 4
neg	eax
sbb	eax, eax
neg	eax
mov	dword_100BA5C0,	eax
push	ebp
push	esi
push	edi
test	eax, eax
jz	short loc_1003C27C
push	ebx
call	PORT_RegExpValid
add	esp, 4
cmp	eax, 0FFFFFFFFh
jz	loc_1003C33B
mov	eax, [esp+10h+Str]
push	ebx
push	eax
call	PORT_RegExpCaseSearch
jmp	loc_1003C346
mov	esi, ds:strchr
push	2Ah		
push	ebx		
call	esi 
push	2Eh		
push	ebx		
mov	ebp, eax
call	esi 
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_1003C2A8
lea	ecx, [edi+1]
push	2Eh		
push	ecx		
call	esi 
add	esp, 8
mov	[esp+10h+var_4], eax
jmp	short loc_1003C2B0
mov	[esp+10h+var_4], 0
mov	edx, [esp+10h+Str]
push	2Eh		
push	edx		
call	esi 
add	esp, 8
mov	esi, eax
test	ebp, ebp
jz	short loc_1003C33B
mov	eax, [esp+10h+var_4]
test	eax, eax
jz	short loc_1003C33B
cmp	byte ptr [eax+1], 0
jz	short loc_1003C33B
test	esi, esi
jz	short loc_1003C33B
mov	ecx, edi
sub	ecx, ebp
cmp	ecx, 1
jnz	short loc_1003C33B
sub	eax, edi
cmp	eax, ecx
jle	short loc_1003C33B
push	2Ah		
push	ebx		
call	ds:strrchr
add	esp, 8
cmp	eax, ebp
jnz	short loc_1003C33B
mov	eax, [esp+10h+Str]
mov	edx, ebp
sub	edx, ebx
push	edx
push	eax
push	ebx
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003C33B
push	esi
push	edi
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jnz	short loc_1003C33B
mov	ecx, [esp+10h+Str]
push	4
push	offset aXn	
push	ecx
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003C334
cmp	ebp, ebx
jnz	short loc_1003C33B
			
pop	edi
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
			
mov	edx, [esp+10h+Str]
push	ebx
push	edx
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jz	short loc_1003C334
push	0FFFFD00Ch
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
pop	ecx
retn
align 10h
sub	esp, 0DCh
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0DCh+var_4], eax
mov	eax, [esp+0DCh+arg_0]
push	ebx
push	ebp
push	esi
mov	esi, [esp+0E8h+arg_4]
push	edi
lea	ecx, [esp+0ECh+var_C0]
push	ecx
xor	edi, edi
push	53h
push	eax
mov	[esp+0F8h+var_C8], esi
mov	[esp+0F8h+var_DC], edi
mov	[esp+0F8h+var_D4], edi
mov	[esp+0F8h+var_D8], edi
mov	[esp+0F8h+var_BC], edi
lea	ebx, [esp+0F8h+var_84]
mov	[esp+0F8h+var_D0], 80h
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jnz	loc_1003C6C5
lea	edx, [esp+0ECh+var_A4]
push	edx
push	esi
call	ds:PR_StringToNetAddr
neg	eax
sbb	esi, esi
inc	esi
push	800h
mov	[esp+0F8h+var_CC], esi
call	PORT_NewArena_Util
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, edi
jz	loc_1003C6BD
lea	ecx, [esp+0ECh+var_C0]
push	ecx
push	eax
call	CERT_DecodeAltNameExtension
mov	ebp, eax
add	esp, 8
mov	[esp+0ECh+var_C4], ebp
cmp	ebp, edi
jz	loc_1003C6BD
lea	ebx, [ebx+0]
mov	eax, [ebp+0]
cmp	eax, 3
jz	loc_1003C630
cmp	eax, 8
jnz	loc_1003C6A8
test	esi, esi
jz	short loc_1003C4A9
mov	eax, [ebp+0Ch]
mov	cx, [esp+0ECh+var_A4]
cmp	eax, 4
jnz	short loc_1003C4B2
cmp	cx, 2
jnz	short loc_1003C4B2
mov	ecx, [ebp+8]
mov	edx, [esp+0ECh+var_A0]
cmp	edx, [ecx]
jz	short loc_1003C496
movzx	edi, byte ptr [ecx]
movzx	eax, dl
sub	eax, edi
jnz	loc_1003C625
movzx	edi, byte ptr [ecx+1]
movzx	eax, dh
sub	eax, edi
jnz	loc_1003C625
movzx	edx, byte ptr [ecx+2]
movzx	eax, byte ptr [esp+0ECh+var_A0+2]
sub	eax, edx
jnz	loc_1003C625
movzx	ecx, byte ptr [ecx+3]
movzx	eax, byte ptr [esp+0ECh+var_A0+3]
sub	eax, ecx
jnz	loc_1003C625
			
xor	eax, eax
xor	edx, edx
test	eax, eax
setz	dl
mov	eax, edx
			
test	eax, eax
jnz	loc_1003C6D4
			
inc	[esp+0ECh+var_D8]
jmp	loc_1003C6A8
			
cmp	eax, 10h
jnz	loc_1003C584
cmp	cx, 17h
jnz	short loc_1003C4EA
mov	ecx, [ebp+8]
lea	edx, [esp+0ECh+var_9C]
jmp	short loc_1003C4D0
align 10h
			
mov	edi, [edx]
cmp	edi, [ecx]
jnz	loc_1003C5F9
sub	eax, 4
add	ecx, 4
add	edx, 4
cmp	eax, 4
jnb	short loc_1003C4D0
jmp	short loc_1003C496
cmp	eax, 10h
jnz	loc_1003C584
cmp	cx, 2
jnz	loc_1003C584
mov	ecx, [esp+0ECh+var_A0]
lea	eax, [esp+0ECh+var_B4]
push	eax
push	ecx
call	ds:PR_ConvertIPv4AddrToIPv6
mov	ecx, [ebp+8]
add	esp, 8
mov	eax, 10h
lea	edx, [esp+0ECh+var_B4]
lea	esp, [esp+0]
mov	edi, [edx]
cmp	edi, [ecx]
jnz	short loc_1003C544
sub	eax, 4
add	ecx, 4
add	edx, 4
cmp	eax, 4
jnb	short loc_1003C520
xor	eax, eax
xor	ecx, ecx
test	eax, eax
setz	cl
mov	eax, ecx
jmp	loc_1003C4A1
movzx	eax, byte ptr [edx]
movzx	edi, byte ptr [ecx]
sub	eax, edi
jnz	short loc_1003C570
movzx	eax, byte ptr [edx+1]
movzx	edi, byte ptr [ecx+1]
sub	eax, edi
jnz	short loc_1003C570
movzx	eax, byte ptr [edx+2]
movzx	edi, byte ptr [ecx+2]
sub	eax, edi
jnz	short loc_1003C570
movzx	eax, byte ptr [edx+3]
movzx	edx, byte ptr [ecx+3]
sub	eax, edx
			
sar	eax, 1Fh
or	eax, 1
xor	ecx, ecx
test	eax, eax
setz	cl
mov	eax, ecx
jmp	loc_1003C4A1
			
cmp	eax, 4
jnz	loc_1003C4A9
cmp	cx, 17h
jnz	loc_1003C4A9
mov	ecx, [ebp+8]
movzx	eax, byte ptr [ecx]
movzx	edx, byte ptr [ecx+1]
shl	eax, 8
or	eax, edx
movzx	edx, byte ptr [ecx+2]
movzx	ecx, byte ptr [ecx+3]
shl	eax, 8
or	eax, edx
shl	eax, 8
lea	edx, [esp+0ECh+var_B4]
or	eax, ecx
push	edx
push	eax
call	ds:PR_htonl
add	esp, 4
push	eax
call	ds:PR_ConvertIPv4AddrToIPv6
add	esp, 8
mov	eax, 10h
lea	ecx, [esp+0ECh+var_B4]
lea	edx, [esp+0ECh+var_9C]
mov	edi, edi
mov	edi, [edx]
cmp	edi, [ecx]
jnz	short loc_1003C5F9
sub	eax, 4
add	ecx, 4
add	edx, 4
cmp	eax, 4
jnb	short loc_1003C5E0
jmp	loc_1003C496
			
movzx	edi, byte ptr [ecx]
movzx	eax, byte ptr [edx]
sub	eax, edi
jnz	short loc_1003C625
movzx	eax, byte ptr [edx+1]
movzx	edi, byte ptr [ecx+1]
sub	eax, edi
jnz	short loc_1003C625
movzx	eax, byte ptr [edx+2]
movzx	edi, byte ptr [ecx+2]
sub	eax, edi
jnz	short loc_1003C625
movzx	eax, byte ptr [edx+3]
movzx	ecx, byte ptr [ecx+3]
sub	eax, ecx
			
sar	eax, 1Fh
or	eax, 1
jmp	loc_1003C498
test	esi, esi
jnz	short loc_1003C6A4
mov	esi, [ebp+0Ch]
mov	eax, [ebp+8]
mov	ecx, [esp+0ECh+var_D0]
push	esi
push	eax
push	ecx
push	ebx
call	CERT_RFC1485_EscapeAndQuote
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_1003C68D
call	PORT_GetError_Util
cmp	eax, 0FFFFE003h
jnz	short loc_1003C689
mov	edx, [esp+0ECh+var_DC]
lea	edi, [esi+esi*2+3]
push	edi
push	edx
mov	[esp+0F4h+var_D0], edi
call	PORT_ArenaAlloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1003C6C5
mov	eax, [ebp+8]
push	esi
push	eax
push	edi
push	ebx
call	CERT_RFC1485_EscapeAndQuote
add	esp, 10h
mov	edi, eax
test	edi, edi
jnz	short loc_1003C6A0
mov	ecx, [esp+0ECh+var_C8]
push	ecx
call	sub_1003C230
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1003C6E8
mov	esi, [esp+0ECh+var_CC]
inc	[esp+0ECh+var_D4]
			
push	ebp
call	CERT_GetNextGeneralName
mov	ebp, eax
add	esp, 4
cmp	ebp, [esp+0ECh+var_C4]
jnz	loc_1003C420
			
mov	eax, [esp+0ECh+var_D8]
test	esi, esi
jnz	short loc_1003C6C9
			
mov	eax, [esp+0ECh+var_D4]
test	eax, eax
jnz	short loc_1003C6D8
push	0FFFFE023h
jmp	short loc_1003C6DD
xor	esi, esi
jmp	short loc_1003C6E8
push	0FFFFD00Ch
call	PORT_SetError_Util
add	esp, 4
or	esi, 0FFFFFFFFh
			
mov	eax, [esp+0ECh+var_DC]
test	eax, eax
jz	short loc_1003C6FB
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
cmp	[esp+0ECh+var_BC], 0
jz	short loc_1003C711
lea	edx, [esp+0ECh+var_C0]
push	0
push	edx
call	SECITEM_FreeItem_Util
add	esp, 8
mov	ecx, [esp+0ECh+var_4]
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0DCh
retn
align 10h
			
mov	eax, [esp+arg_0]
sub	esp, 0Ch
push	esi
test	eax, eax
jz	short loc_1003C783
mov	esi, [esp+10h+arg_4]
test	esi, esi
jz	short loc_1003C783
lea	ecx, [esp+10h+var_C]
push	ecx
push	53h
push	eax
mov	[esp+1Ch+var_8], 0
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003C783
lea	edx, [esp+10h+var_C]
push	edx
push	esi
call	CERT_DecodeAltNameExtension
mov	esi, eax
lea	eax, [esp+18h+var_C]
push	0
push	eax
call	SECITEM_FreeItem_Util
add	esp, 10h
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
			
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
push	edi
xor	edi, edi
test	esi, esi
jnz	short loc_1003C7A1
pop	edi
xor	eax, eax
pop	esi
retn
mov	eax, esi
mov	ecx, [eax]
cmp	ecx, 3
jz	short loc_1003C7AF
cmp	ecx, 8
jnz	short loc_1003C7B0
inc	edi
push	eax
call	CERT_GetNextGeneralName
add	esp, 4
cmp	eax, esi
jnz	short loc_1003C7A3
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
push	ebx
mov	ebx, [esp+60h+arg_8]
push	ebp
mov	ebp, [esp+64h+arg_4]
push	esi
mov	esi, [esp+68h+arg_0]
mov	[esp+68h+var_58], esi
test	esi, esi
jz	short loc_1003C81A
test	ebx, ebx
jz	short loc_1003C81A
test	ebp, ebp
jz	short loc_1003C81A
mov	ecx, [ebx]
lea	eax, ds:0[ebp*4]
push	eax
push	ecx
mov	[ebx+8], ebp
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[ebx+0Ch], eax
test	eax, eax
jnz	short loc_1003C82F
			
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
push	edi
mov	edi, esi
mov	[esp+6Ch+var_5C], eax
cmp	ebp, 1
jb	loc_1003C8C8
mov	eax, [edi]
cmp	eax, 3
jz	loc_1003C8DE
cmp	eax, 8
jnz	loc_1003C92D
mov	eax, [edi+0Ch]
cmp	eax, 4
jnz	short loc_1003C874
mov	edx, 2
mov	[esp+6Ch+var_54], dx
mov	eax, [edi+0Ch]
mov	ecx, [edi+8]
push	eax
push	ecx
lea	edx, [esp+74h+var_50]
push	edx
jmp	short loc_1003C890
cmp	eax, 10h
jnz	short loc_1003C898
mov	eax, 17h
mov	[esp+6Ch+var_54], ax
mov	ecx, [edi+0Ch]
mov	edx, [edi+8]
push	ecx		
push	edx		
lea	eax, [esp+74h+Dst]
push	eax		
call	memcpy
add	esp, 0Ch
push	2Eh
lea	ecx, [esp+70h+var_34]
push	ecx
lea	edx, [esp+74h+var_54]
push	edx
call	ds:PR_NetAddrToString
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jz	short loc_1003C8C8
mov	ecx, [ebx]
lea	eax, [esp+6Ch+var_34]
push	eax
push	ecx
call	PORT_ArenaStrdup_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1003C90C
			
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
mov	edx, [edi+0Ch]
mov	eax, [ebx]
inc	edx
push	edx
push	eax
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1003C8C8
mov	ecx, [edi+0Ch]
mov	edx, [edi+8]
push	ecx		
push	edx		
push	esi		
call	memcpy
mov	eax, [edi+0Ch]
add	esp, 0Ch
mov	byte ptr [esi+eax], 0
mov	ecx, [esp+6Ch+var_5C]
mov	eax, esi
mov	[ecx], esi
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1003C917
add	[esp+6Ch+var_5C], 4
mov	esi, [esp+6Ch+var_58]
sub	eax, edx
add	[ebx+14h], eax
dec	ebp
push	edi
call	CERT_GetNextGeneralName
mov	edi, eax
add	esp, 4
cmp	edi, esi
jnz	loc_1003C836
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
mov	eax, ebp
neg	eax
pop	ebp
sbb	eax, eax
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
public CERT_GetValidDNSPatternsFromCert
push	ebp
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
xor	ebp, ebp
add	esp, 4
cmp	edi, ebp
jnz	short loc_1003C97C
pop	edi
xor	eax, eax
pop	ebp
retn
push	esi
push	18h
push	edi
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
cmp	esi, ebp
jnz	short loc_1003C99E
push	ebp
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
xor	eax, eax
pop	ebp
retn
mov	eax, [esp+0Ch+arg_0]
push	ebx
push	edi
push	eax
mov	[esi], edi
mov	[esi+4], ebp
mov	[esi+8], ebp
mov	[esi+0Ch], ebp
mov	[esi+14h], ebp
call	sub_1003C730
mov	ebx, eax
add	esp, 8
cmp	ebx, ebp
jz	short loc_1003C9EE
push	ebx
call	sub_1003C790
add	esp, 4
cmp	eax, ebp
jz	short loc_1003C9EE
push	esi
push	eax
push	ebx
call	sub_1003C7D0
add	esp, 0Ch
cmp	eax, ebp
jz	short loc_1003CA43
			
push	ebp
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	ebx
pop	esi
pop	edi
xor	eax, eax
pop	ebp
retn
			
mov	ecx, [esp+10h+arg_0]
add	ecx, 0CCh
push	ecx
call	CERT_GetCommonName
mov	ebx, eax
add	esp, 4
cmp	ebx, ebp
jz	short loc_1003C9DD
push	4
push	edi
mov	dword ptr [esi+8], 1
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+0Ch], eax
cmp	eax, ebp
jz	short loc_1003CA2F
push	ebx
push	edi
call	PORT_ArenaStrdup_Util
mov	edx, [esi+0Ch]
add	esp, 8
mov	[edx], eax
push	ebx
call	PORT_Free_Util
mov	eax, [esi+0Ch]
add	esp, 4
cmp	eax, ebp
jz	short loc_1003C9DD
cmp	[eax], ebp
jz	short loc_1003C9DD
pop	ebx
mov	eax, esi
pop	esi
pop	edi
pop	ebp
retn
align 10h
public CERT_VerifyCertName
sub	esp, 28h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+28h+var_4], eax
push	ebx
mov	ebx, [esp+2Ch+arg_0]
push	edi
mov	edi, [esp+30h+arg_4]
test	edi, edi
jz	loc_1003CBB2
mov	eax, edi
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1003CA75
sub	eax, edx
jz	loc_1003CBB2
push	esi
mov	esi, [ebx+148h]
test	esi, esi
jz	short loc_1003CAAB
nop
lea	eax, [esi+4]
push	eax
push	edi
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jz	loc_1003CB28
mov	esi, [esi]
test	esi, esi
jnz	short loc_1003CA90
push	edi
push	ebx
call	sub_1003C370
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_1003CB9E
call	PORT_GetError_Util
cmp	eax, 0FFFFE023h
jnz	loc_1003CB9E
add	ebx, 0CCh
push	ebx
call	CERT_GetCommonName
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	loc_1003CB91
lea	ecx, [esp+34h+var_24]
push	ecx
push	edi
call	ds:PR_StringToNetAddr
add	esp, 8
test	eax, eax
jnz	short loc_1003CB69
push	ebx
push	edi
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jnz	short loc_1003CB3C
push	ebx
xor	esi, esi
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
pop	ebx
mov	ecx, [esp+28h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
pop	esi
pop	edi
xor	eax, eax
pop	ebx
mov	ecx, [esp+28h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
push	0FFFFD00Ch
call	PORT_SetError_Util
add	esp, 4
push	ebx
or	esi, 0FFFFFFFFh
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
pop	ebx
mov	ecx, [esp+28h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
push	edi
call	sub_1003C230
add	esp, 4
push	ebx
mov	esi, eax
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
pop	ebx
mov	ecx, [esp+28h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
push	0FFFFD00Ch
call	PORT_SetError_Util
add	esp, 4
			
mov	eax, esi
pop	esi
pop	edi
pop	ebx
mov	ecx, [esp+28h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
mov	ecx, [esp+34h+var_4]
add	esp, 4
pop	edi
pop	ebx
xor	ecx, esp
or	eax, 0FFFFFFFFh
call	@__security_check_cookie@4 
add	esp, 28h
retn
align 10h
public CERT_CompareCerts
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
add	eax, 3Ch
push	eax
add	ecx, 3Ch
push	ecx
call	SECITEM_CompareItem_Util
add	esp, 8
neg	eax
sbb	eax, eax
inc	eax
retn
align 10h
public CERT_GetCertIssuerAndSN
push	ebx
mov	ebx, [esp+4+arg_4]
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
test	edi, edi
jnz	short loc_1003CC11
mov	edi, [ebx]
push	20h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1003CC35
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
			
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
lea	eax, [ebx+48h]
push	eax
push	esi
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003CC2F
lea	ecx, [ebx+0A8h]
push	ecx
lea	edx, [esi+0Ch]
push	edx
push	edi
call	CERT_CopyName
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003CC2F
add	ebx, 84h
push	ebx
lea	eax, [esi+14h]
push	eax
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
neg	eax
sbb	eax, eax
not	eax
pop	edi
and	eax, esi
pop	esi
pop	ebx
retn
align 10h
public CERT_MakeCANickname
			
			
push	ecx
push	ebx
mov	ebx, [esp+8+arg_0]
push	ebp
push	esi
push	edi
lea	edi, [ebx+0CCh]
push	edi
xor	ebp, ebp
call	CERT_GetCommonName
mov	esi, eax
add	esp, 4
mov	[esp+14h+var_4], esi
cmp	esi, ebp
jnz	short loc_1003CCB3
push	edi
call	CERT_GetOrgUnitName
add	esp, 4
mov	[esp+14h+var_4], eax
mov	esi, eax
add	ebx, 0A8h
push	ebx
call	CERT_GetOrgName
mov	edi, eax
add	esp, 4
cmp	edi, ebp
jnz	short loc_1003CCFC
push	ebx
call	CERT_GetDomainComponentName
mov	edi, eax
add	esp, 4
cmp	edi, ebp
jnz	short loc_1003CCFC
cmp	esi, ebp
jz	short loc_1003CCE5
mov	edi, esi
mov	[esp+14h+var_4], ebp
mov	esi, ebp
jmp	short loc_1003CCF4
push	offset aUnknownCa 
call	PORT_Strdup_Util
add	esp, 4
mov	edi, eax
cmp	edi, ebp
jz	loc_1003CDA0
			
mov	ebx, ds:PR_smprintf
mov	ebp, 1
test	esi, esi
jz	short loc_1003CD28
cmp	ebp, 1
jnz	short loc_1003CD19
push	edi
push	esi
push	offset aSS_1	
jmp	short loc_1003CD41
push	ebp
push	edi
push	esi
push	offset aSSD	
call	ebx 
add	esp, 10h
jmp	short loc_1003CD46
cmp	ebp, 1
jnz	short loc_1003CD3A
push	edi
push	offset dword_100A23E0
call	ebx 
add	esp, 8
jmp	short loc_1003CD46
push	ebp
push	edi
push	offset aSD	
call	ebx 
add	esp, 0Ch
			
mov	esi, eax
test	esi, esi
jz	short loc_1003CD7A
mov	eax, [esp+14h+arg_0]
mov	ecx, [eax+11Ch]
push	esi		
push	ecx		
call	CERT_FindCertByNickname
add	esp, 8
test	eax, eax
jz	short loc_1003CD7A
push	eax
call	CERT_DestroyCertificate
push	esi
call	PORT_Free_Util
mov	esi, [esp+1Ch+var_4]
add	esp, 8
inc	ebp
jmp	short loc_1003CD07
			
mov	eax, [esp+14h+var_4]
test	eax, eax
jz	short loc_1003CD8B
push	eax
call	PORT_Free_Util
add	esp, 4
test	edi, edi
jz	short loc_1003CD98
push	edi
call	PORT_Free_Util
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
align 10h
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
mov	eax, [esp+10h+arg_0]
push	esi
mov	esi, ecx
lea	ecx, [esp+14h+var_10]
push	ecx
push	eax
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_1003CE2E
mov	edx, [esp+14h+var_8]
mov	ecx, [esp+14h+var_C]
mov	eax, [esp+14h+var_10]
push	edi
mov	edi, edx
or	edi, ecx
or	edi, eax
pop	edi
jz	short loc_1003CE2E
test	al, 3
jz	short loc_1003CE07
or	esi, 0C0h
test	al, 18h
jz	short loc_1003CE0E
or	esi, 4
test	cl, 3
jz	short loc_1003CE16
or	esi, 20h
test	cl, 18h
jz	short loc_1003CE1E
or	esi, 2
test	dl, 3
jz	short loc_1003CE26
or	esi, 10h
test	dl, 18h
jz	short loc_1003CE2E
or	esi, 1
			
mov	ecx, [esp+14h+var_4]
mov	eax, esi
pop	esi
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
public CERT_IsCACert
			
sub	esp, 8
push	ebx
push	esi
mov	esi, [esp+10h+arg_0]
mov	ebx, [esi+13Ch]
test	bl, 7
jnz	short loc_1003CE9C
lea	eax, [esp+10h+var_8]
push	eax
push	esi
call	sub_1003E930
add	esp, 8
test	eax, eax
jnz	short loc_1003CE6C
cmp	[esp+10h+var_8], eax
jnz	short loc_1003CE99
cmp	dword ptr [esi+170h], 0
jz	short loc_1003CE9C
cmp	dword ptr [esi+7Ch], 0
jz	short loc_1003CE99
cmp	dword ptr [esi+80h], 0
jz	short loc_1003CE99
lea	ecx, [esi+78h]
push	ecx
call	DER_GetInteger_Util
add	esp, 4
test	eax, eax
js	short loc_1003CE99
cmp	eax, 2
jge	short loc_1003CE9C
			
or	ebx, 6
			
push	esi
mov	ecx, ebx
call	sub_1003CDC0
mov	edx, [esp+14h+arg_4]
add	esp, 4
mov	ecx, eax
test	cl, 7
mov	eax, 0
setnz	al
pop	esi
pop	ebx
test	edx, edx
jz	short loc_1003CEC0
mov	[edx], ecx
add	esp, 8
retn
align 10h
public CERT_CompareValidityTimes
sub	esp, 20h
push	esi
push	edi
mov	edi, [esp+28h+arg_0]
test	edi, edi
jz	loc_1003CFEB
mov	esi, [esp+28h+arg_4]
test	esi, esi
jz	loc_1003CFEB
lea	eax, [edi+4]
push	eax
lea	ecx, [esp+2Ch+var_20]
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003CFF8
lea	edx, [esi+4]
push	edx
lea	eax, [esp+2Ch+var_10]
push	eax
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003CFF8
add	edi, 10h
lea	ecx, [esp+28h+var_18]
push	edi
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003CFF8
add	esi, 10h
lea	edx, [esp+28h+var_8]
push	esi
push	edx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003CFF8
push	ebx
mov	ebx, [esp+2Ch+var_14]
push	ebp
cmp	[esp+30h+var_1C], ebx
jg	short loc_1003CFD4
mov	ebp, [esp+30h+var_20]
mov	edi, [esp+30h+var_18]
jl	short loc_1003CF6B
cmp	ebp, edi
ja	short loc_1003CFD4
mov	esi, [esp+30h+var_C]
mov	ecx, [esp+30h+var_4]
cmp	esi, ecx
jg	short loc_1003CFD4
mov	edx, [esp+30h+var_10]
mov	eax, [esp+30h+var_8]
jl	short loc_1003CF85
cmp	edx, eax
ja	short loc_1003CFD4
cmp	edi, eax
jnz	short loc_1003CF8D
cmp	ebx, ecx
jz	short loc_1003CFA4
cmp	ebx, ecx
jg	short loc_1003CFC7
jl	short loc_1003CF97
cmp	edi, eax
jnb	short loc_1003CFC7
			
pop	ebp
pop	ebx
pop	edi
mov	eax, 1
pop	esi
add	esp, 20h
retn
cmp	ebp, edx
jnz	short loc_1003CFBB
cmp	[esp+30h+var_1C], esi
jnz	short loc_1003CFBF
pop	ebp
pop	ebx
pop	edi
mov	eax, 2
pop	esi
add	esp, 20h
retn
cmp	[esp+30h+var_1C], esi
jg	short loc_1003CFC7
jl	short loc_1003CF97
cmp	ebp, edx
jmp	short loc_1003CF95
			
pop	ebp
pop	ebx
pop	edi
mov	eax, 3
pop	esi
add	esp, 20h
retn
			
push	0FFFFE008h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
pop	ebx
pop	edi
xor	eax, eax
pop	esi
add	esp, 20h
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
			
pop	edi
xor	eax, eax
pop	esi
add	esp, 20h
retn
sub	esp, 20h
push	esi
mov	esi, [esp+28h]
test	esi, esi
jz	loc_1003D0D4
lea	eax, [esi+0B4h]
push	eax
lea	ecx, [esp+18h]
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003D133
add	esi, 0C0h
lea	edx, [esp+4]
push	esi
push	edx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003D133
mov	esi, [esp+2Ch]
test	esi, esi
jz	loc_1003D0E8
lea	eax, [esi+0B4h]
push	eax
lea	ecx, [esp+20h]
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003D0F5
add	esi, 0C0h
lea	edx, [esp+0Ch]
push	esi
push	edx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003D0F5
mov	eax, [esp+18h]
xor	esi, esi
cmp	eax, [esp+20h]
jl	short loc_1003D0A5
jg	short loc_1003D0A0
mov	ecx, [esp+14h]
cmp	ecx, [esp+1Ch]
jbe	short loc_1003D0A5
mov	esi, 1
			
mov	edx, [esp+8]
xor	eax, eax
cmp	edx, [esp+10h]
jl	short loc_1003D0C2
jg	short loc_1003D0BD
mov	ecx, [esp+4]
cmp	ecx, [esp+0Ch]
jbe	short loc_1003D0C2
mov	eax, 1
			
test	esi, esi
jz	short loc_1003D0FF
test	eax, eax
jz	short loc_1003D103
mov	eax, 1
pop	esi
add	esp, 20h
retn
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
add	esp, 20h
retn
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
			
mov	eax, 1
pop	esi
add	esp, 20h
retn
test	eax, eax
jz	short loc_1003D133
call	ds:PR_Now
test	esi, esi
jz	short loc_1003D125
cmp	[esp+8], edx
jg	short loc_1003D11B
jl	short loc_1003D133
cmp	[esp+4], eax
jb	short loc_1003D133
mov	eax, 1
pop	esi
add	esp, 20h
retn
cmp	[esp+10h], edx
jg	short loc_1003D133
jl	short loc_1003D0F5
cmp	[esp+0Ch], eax
jb	short loc_1003D0F5
			
xor	eax, eax
pop	esi
add	esp, 20h
retn
align 10h
public CERT_DestroyCertArray
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	short loc_1003D175
push	ebx
mov	ebx, [esp+8+arg_4]
push	esi
xor	esi, esi
test	ebx, ebx
jz	short loc_1003D16A
mov	eax, [edi+esi*4]
test	eax, eax
jz	short loc_1003D165
push	eax
call	CERT_DestroyCertificate
add	esp, 4
inc	esi
cmp	esi, ebx
jb	short loc_1003D155
push	edi
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	ebx
pop	edi
retn
align 10h
			
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_1003D189
retn
push	esi
push	edi
push	eax
call	PORT_Strdup_Util
mov	edi, eax
add	esp, 4
mov	esi, edi
test	edi, edi
jnz	short loc_1003D19F
pop	edi
pop	esi
retn
cmp	byte ptr [edi],	0
jz	short loc_1003D1C2
push	ebx
mov	ebx, ds:tolower
jmp	short loc_1003D1B0
align 10h
			
movsx	eax, byte ptr [esi]
push	eax		
call	ebx 
mov	[esi], al
inc	esi
add	esp, 4
cmp	byte ptr [esi],	0
jnz	short loc_1003D1B0
pop	ebx
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public CERT_DecodeTrustString
push	ebp
mov	ebp, [esp+4+arg_0]
test	ebp, ebp
jnz	short loc_1003D1EB
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	ebx
mov	ebx, [esp+8+arg_4]
mov	dword ptr [ebp+0], 0
mov	dword ptr [ebp+4], 0
mov	dword ptr [ebp+8], 0
test	ebx, ebx
jnz	short loc_1003D21C
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	ebx
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	esi
mov	eax, ebx
push	edi
mov	ecx, ebp
xor	edi, edi
lea	esi, [eax+1]
mov	dl, [eax]
inc	eax
test	dl, dl
jnz	short loc_1003D227
sub	eax, esi
jz	short loc_1003D29F
movsx	eax, byte ptr [edi+ebx]
add	eax, 0FFFFFFD4h	
cmp	eax, 4Bh
ja	short loc_1003D2A6 
movzx	eax, ds:byte_1003D2DC[eax]
jmp	ds:off_1003D2B0[eax*4] 
			
or	dword ptr [ecx], 1 
jmp	short loc_1003D28C
			
or	dword ptr [ecx], 3 
jmp	short loc_1003D28C
			
or	dword ptr [ecx], 4 
jmp	short loc_1003D28C
			
or	dword ptr [ecx], 8 
jmp	short loc_1003D28C
			
or	dword ptr [ecx], 88h 
jmp	short loc_1003D28C
			
or	dword ptr [ecx], 18h 
jmp	short loc_1003D28C
			
or	dword ptr [ecx], 40h 
jmp	short loc_1003D28C
			
or	dword ptr [ecx], 100h 
jmp	short loc_1003D28C
			
or	dword ptr [ecx], 200h 
jmp	short loc_1003D28C
			
cmp	ecx, ebp	
lea	ecx, [ebp+4]
jz	short loc_1003D28C
lea	ecx, [ebp+8]
			
mov	eax, ebx
inc	edi
lea	esi, [eax+1]
mov	dl, [eax]
inc	eax
test	dl, dl
jnz	short loc_1003D292
sub	eax, esi
cmp	edi, eax
jb	short loc_1003D232
pop	edi
pop	esi
pop	ebx
xor	eax, eax
pop	ebp
retn
			
			
pop	edi		
pop	esi
pop	ebx
or	eax, 0FFFFFFFFh
pop	ebp
retn
align 10h
			
dd offset loc_1003D260,	offset loc_1003D25B, offset loc_1003D27A 
dd offset loc_1003D272,	offset loc_1003D24C, offset loc_1003D26D
dd offset loc_1003D256,	offset loc_1003D2A6
db    0Ah,   0Ah,   0Ah,   0Ah 
db    0Ah,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,     1
db    0Ah,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,   0Ah
db	2,   0Ah,   0Ah,   0Ah
db	3,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,     4
db    0Ah,   0Ah,   0Ah,     5
db    0Ah,     6,   0Ah,   0Ah
db    0Ah,   0Ah,   0Ah,   0Ah
db	7,   0Ah,   0Ah,   0Ah
db    0Ah,     8,   0Ah,     9
align 10h
public SECKEY_NewPrivateKeyList
			
push	esi		
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1003D35D
push	0Ch
push	esi
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003D361
push	eax
push	esi
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
pop	esi
retn
mov	[eax+8], esi
mov	[eax], eax
mov	[eax+4], eax
pop	esi
retn
align 10h
public CERT_DestroyCertList
			
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	esi, [edi]
cmp	esi, edi
jz	short loc_1003D3A1
lea	esp, [esp+0]
mov	eax, [esi+8]
push	eax
call	CERT_DestroyCertificate
mov	ecx, [esi+4]
mov	edx, [esi]
mov	[ecx], edx
mov	eax, [esi]
mov	ecx, [esi+4]
mov	[eax+4], ecx
mov	esi, [edi]
add	esp, 4
cmp	esi, edi
jnz	short loc_1003D380
mov	edx, [edi+8]
push	0
push	edx
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
retn
align 10h
public CERT_RemoveCertListNode
			
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	eax
call	CERT_DestroyCertificate
mov	ecx, [esi+4]
mov	edx, [esi]
mov	[ecx], edx
mov	eax, [esi]
mov	ecx, [esi+4]
add	esp, 4
mov	[eax+4], ecx
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	10h
push	eax
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003D40C
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	[eax], esi
mov	ecx, [esi+4]
mov	[eax+4], ecx
mov	edx, [esi+4]
mov	ecx, [esp+4+arg_4]
mov	[edx], eax
mov	edx, [esp+4+arg_8]
mov	[esi+4], eax
mov	[eax+8], ecx
mov	[eax+0Ch], edx
xor	eax, eax
pop	esi
retn
align 10h
public CERT_AddCertToListTail
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	10h
push	eax
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003D44C
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	[eax], esi
mov	ecx, [esi+4]
mov	[eax+4], ecx
mov	edx, [esi+4]
mov	ecx, [esp+4+arg_4]
mov	[edx], eax
mov	[esi+4], eax
mov	[eax+8], ecx
mov	dword ptr [eax+0Ch], 0
xor	eax, eax
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
push	edi
mov	edi, [esi]
push	10h
test	edi, edi
jnz	short loc_1003D4AD
mov	eax, [esi+8]
push	eax
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jz	short loc_1003D4BD
mov	[eax], esi
mov	ecx, [esi+4]
mov	[eax+4], ecx
mov	edx, [esi+4]
mov	ecx, [esp+8+arg_4]
mov	[edx], eax
mov	[esi+4], eax
mov	[eax+0Ch], edi
pop	edi
mov	[eax+8], ecx
xor	eax, eax
pop	esi
retn
mov	edx, [esi+8]
push	edx
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003D4C3
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	[eax], edi
mov	ecx, [edi+4]
mov	[eax+4], ecx
mov	edx, [edi+4]
mov	ecx, [esp+8+arg_4]
mov	[edx], eax
mov	edx, [esp+8+arg_8]
mov	[edi+4], eax
mov	[eax+0Ch], edx
pop	edi
mov	[eax+8], ecx
xor	eax, eax
pop	esi
retn
align 10h
public CERT_AddCertToListHead
			
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	0
push	eax
push	ecx
call	sub_1003D470
add	esp, 0Ch
retn
align 10h
			
mov	eax, [esp+0Ch]
sub	esp, 20h
push	ebx
mov	ebx, [esp+28h]
push	ebp
push	esi
mov	esi, [eax]
xor	ebp, ebp
push	edi
mov	edi, [eax+4]
test	ebx, ebx
jz	loc_1003D62A
lea	eax, [ebx+0B4h]
push	eax
lea	ecx, [esp+14h]
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003D666
lea	edx, [ebx+0C0h]
push	edx
lea	eax, [esp+24h]
push	eax
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003D666
mov	eax, [esp+38h]
test	eax, eax
jz	loc_1003D641
add	eax, 0B4h
push	eax
lea	ecx, [esp+1Ch]
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003D64E
mov	edx, [esp+38h]
add	edx, 0C0h
push	edx
lea	eax, [esp+2Ch]
push	eax
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	loc_1003D64E
mov	ecx, [esp+14h]
mov	[esp+34h], eax
cmp	ecx, [esp+1Ch]
jl	short loc_1003D5CF
jg	short loc_1003D5C7
mov	edx, [esp+10h]
cmp	edx, [esp+18h]
jbe	short loc_1003D5CF
mov	dword ptr [esp+34h], 1
			
mov	ecx, [esp+24h]
mov	[esp+3Ch], eax
cmp	ecx, [esp+2Ch]
jl	short loc_1003D5F1
jg	short loc_1003D5E9
mov	edx, [esp+20h]
cmp	edx, [esp+28h]
jbe	short loc_1003D5F1
mov	dword ptr [esp+3Ch], 1
			
push	eax
push	edi
push	esi
push	ebx
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jz	short loc_1003D606
mov	ebp, 1
mov	eax, [esp+38h]
push	0
push	edi
push	esi
push	eax
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jz	short loc_1003D65B
test	ebp, ebp
jnz	short loc_1003D65F
pop	edi
pop	esi
lea	eax, [ebp+1]
pop	ebp
pop	ebx
add	esp, 20h
retn
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 20h
retn
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
mov	eax, 1
pop	ebx
add	esp, 20h
retn
test	ebp, ebp
jnz	short loc_1003D666
cmp	dword ptr [esp+34h], 0
jnz	short loc_1003D64E
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 20h
retn
public CERT_AddCertToListSorted
			
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+8]
push	ebp
push	10h
push	eax
call	PORT_ArenaZAlloc_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	short loc_1003D690
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	esi
mov	esi, [ebx]
push	edi
mov	edi, [esp+10h+arg_4]
cmp	esi, ebx
jz	short loc_1003D6BF
lea	esp, [esp+0]
mov	eax, [esi+8]
cmp	edi, eax
jz	short loc_1003D6DA
mov	ecx, [esp+10h+arg_C]
push	ecx
push	eax
push	edi
call	[esp+1Ch+arg_8]
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003D6ED
mov	esi, [esi]
cmp	esi, ebx
jnz	short loc_1003D6A0
mov	[ebp+0], ebx
mov	ecx, [ebx+4]
mov	[ebp+4], ecx
mov	edx, [ebx+4]
mov	[edx], ebp
mov	[ebx+4], ebp
mov	[ebp+8], edi
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
push	edi
call	CERT_DestroyCertificate
add	esp, 4
mov	[ebp+8], edi
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
mov	[ebp+0], esi
mov	edx, [esi+4]
mov	[ebp+4], edx
mov	eax, [esi+4]
mov	[eax], ebp
mov	[esi+4], ebp
mov	[ebp+8], edi
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
public CERT_FilterCertListByUsage
			
push	ecx
push	ebx
mov	ebx, [esp+8+arg_0]
test	ebx, ebx
jz	short loc_1003D73A
mov	edx, [esp+8+arg_8]
lea	eax, [esp+8+arg_0]
push	eax
mov	eax, [esp+0Ch+arg_4]
lea	ecx, [esp+0Ch+var_4]
push	ecx
push	edx
push	eax
call	sub_1003BF70
add	esp, 10h
test	eax, eax
jz	short loc_1003D740
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
push	esi
mov	esi, [ebx]
cmp	esi, ebx
jz	loc_1003D7C8
push	ebp
mov	ebp, [esp+10h+arg_0]
push	edi
mov	eax, [esi+8]
xor	ecx, ecx
test	eax, eax
setz	cl
test	ecx, ecx
jnz	short loc_1003D79F
mov	ecx, [esp+14h+var_4]
push	ecx
push	eax
call	sub_1003C090
add	esp, 8
test	eax, eax
jnz	short loc_1003D79F
mov	[esp+14h+arg_0], eax
cmp	[esp+14h+arg_8], eax
jz	short loc_1003D792
mov	eax, [esi+8]
lea	edx, [esp+14h+arg_0]
push	edx
push	eax
call	CERT_IsCACert
mov	eax, [esp+1Ch+arg_0]
add	esp, 8
jmp	short loc_1003D79B
mov	ecx, [esi+8]
mov	eax, [ecx+13Ch]
test	ebp, eax
jnz	short loc_1003D7C0
			
mov	edx, [esi+8]
mov	edi, [esi]
push	edx
call	CERT_DestroyCertificate
mov	eax, [esi+4]
mov	ecx, [esi]
mov	[eax], ecx
mov	edx, [esi]
mov	eax, [esi+4]
add	esp, 4
mov	[edx+4], eax
mov	esi, edi
jmp	short loc_1003D7C2
mov	esi, [esi]
cmp	esi, ebx
jnz	short loc_1003D751
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
public CERT_IsUserCert
			
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
mov	eax, [esp+10h+arg_0]
lea	ecx, [esp+10h+var_10]
push	ecx
push	eax
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_1003D81A
mov	al, 40h
test	[esp+10h+var_10], al
jnz	short loc_1003D806
test	[esp+10h+var_C], al
jnz	short loc_1003D806
test	[esp+10h+var_8], al
jz	short loc_1003D81A
			
mov	eax, 1
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
			
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
public CERT_FilterCertListForUserCerts
			
			
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
push	ebp
mov	ebp, [esp+14h+arg_0]
test	ebp, ebp
jnz	short loc_1003D85A
or	eax, 0FFFFFFFFh
pop	ebp
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
push	esi
mov	esi, [ebp+0]
cmp	esi, ebp
jz	short loc_1003D8B6
push	ebx
push	edi
mov	bl, 40h
mov	eax, [esi+8]
lea	ecx, [esp+20h+var_10]
push	ecx
push	eax
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_1003D88D
test	[esp+20h+var_10], bl
jnz	short loc_1003D8AE
test	[esp+20h+var_C], bl
jnz	short loc_1003D8AE
test	[esp+20h+var_8], bl
jnz	short loc_1003D8AE
mov	edi, esi
mov	edx, [edi+8]
mov	esi, [esi]
push	edx
call	CERT_DestroyCertificate
mov	eax, [edi+4]
mov	ecx, [edi]
mov	[eax], ecx
mov	edx, [edi]
mov	eax, [edi+4]
add	esp, 4
mov	[edx+4], eax
jmp	short loc_1003D8B0
			
mov	esi, [esi]
cmp	esi, ebp
jnz	short loc_1003D866
pop	edi
pop	ebx
mov	ecx, [esp+18h+var_4]
pop	esi
pop	ebp
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
			
mov	eax, dword_100BAE0C
mov	[esp+arg_0], eax
jmp	ds:PR_Lock
align 10h
			
cmp	dword_100BAE08,	0
push	esi
mov	esi, ds:PR_NewLock
jnz	short loc_1003D8FB
call	esi 
mov	dword_100BAE08,	eax
test	eax, eax
jz	short loc_1003D928
cmp	dword_100BAE0C,	0
jnz	short loc_1003D92D
call	esi 
mov	dword_100BAE0C,	eax
test	eax, eax
jnz	short loc_1003D92D
mov	eax, dword_100BAE08
push	eax
call	ds:PR_DestroyLock
add	esp, 4
mov	dword_100BAE08,	0
or	eax, 0FFFFFFFFh
pop	esi
retn
			
xor	eax, eax
pop	esi
retn
align 10h
mov	eax, dword_100BAE08
push	esi
xor	esi, esi
push	edi
mov	edi, ds:PR_DestroyLock
test	eax, eax
jz	short loc_1003D961
push	eax
call	edi 
add	esp, 4
mov	dword_100BAE08,	esi
jmp	short loc_1003D964
or	esi, 0FFFFFFFFh
mov	eax, dword_100BAE0C
test	eax, eax
jz	short loc_1003D982
push	eax
call	edi 
add	esp, 4
pop	edi
mov	eax, esi
mov	dword_100BAE0C,	0
pop	esi
retn
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
			
mov	eax, dword_100BAE0C
mov	[esp+arg_0], eax
jmp	ds:PR_Unlock
align 10h
public PK11_IsReadOnly
			
mov	eax, [esp+arg_0]
mov	eax, [eax+20h]
retn
align 10h
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
mov	[ecx+20h], eax
retn
align 10h
mov	eax, [esp+arg_4]
push	eax
call	PORT_Alloc_Util
add	esp, 4
retn
align 10h
mov	eax, [esp+arg_4]
push	eax
call	PORT_Free_Util
pop	ecx
retn
align 10h
push	10h
call	PORT_Alloc_Util
add	esp, 4
retn
align 10h
push	esi
mov	esi, [esp+4+arg_4]
mov	eax, [esi+0Ch]
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
cmp	[esp+4+arg_8], 1
jnz	short loc_1003DA1E
mov	ecx, [esi+8]
push	1
push	ecx
call	SECITEM_FreeItem_Util
push	esi
call	PORT_Free_Util
add	esp, 0Ch
pop	esi
retn
push	0
push	offset off_100BA5C4
push	offset SECITEM_HashCompare
push	offset SECITEM_HashCompare
push	offset SECITEM_Hash
push	0
call	PL_NewHashTable
add	esp, 18h
mov	dword_100BAE18,	eax
test	eax, eax
jnz	short loc_1003DA5A
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
call	ds:PR_NewLock
mov	dword_100BAE1C,	eax
test	eax, eax
jnz	short loc_1003DA8F
mov	eax, dword_100BAE18
push	eax
call	PL_HashTableDestroy
push	0FFFFE013h
mov	dword_100BAE18,	0
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
			
push	esi
or	esi, 0FFFFFFFFh
cmp	dword_100BAE14,	0
jnz	short loc_1003DAB1
or	eax, esi
pop	esi
retn
mov	eax, [esp+4+arg_4]
add	eax, 3Ch
push	ebx
push	eax
call	SECITEM_DupItem_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1003DADA
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	ebx
mov	eax, esi
pop	esi
retn
push	ebp
mov	ebp, [esp+0Ch+arg_0]
push	edi
push	ebp
call	SECITEM_DupItem_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1003DB0B
push	1
push	ebx
call	SECITEM_FreeItem_Util
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 0Ch
pop	edi
pop	ebp
pop	ebx
mov	eax, esi
pop	esi
retn
mov	ecx, dword_100BAE14
push	ecx
call	ds:PR_Lock
mov	edx, dword_100BAE10
push	ebp
push	edx
call	PL_HashTableLookup
add	esp, 0Ch
test	eax, eax
jz	short loc_1003DB3B
mov	eax, dword_100BAE10
push	ebp
push	eax
call	PL_HashTableRemove
add	esp, 8
mov	ecx, dword_100BAE10
push	ebx
push	edi
push	ecx
call	PL_HashTableAdd
mov	edx, dword_100BAE14
mov	esi, eax
neg	esi
sbb	esi, esi
neg	esi
push	edx
dec	esi
call	ds:PR_Unlock
add	esp, 10h
pop	edi
pop	ebp
pop	ebx
mov	eax, esi
pop	esi
retn
align 10h
			
push	esi
or	esi, 0FFFFFFFFh
cmp	dword_100BAE1C,	0
jnz	short loc_1003DB81
or	eax, esi
pop	esi
retn
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_0]
push	edi
push	ebp
call	SECITEM_DupItem_Util
push	4
push	0
push	0
mov	edi, eax
call	SECITEM_AllocItem_Util
add	esp, 10h
mov	ebx, eax
test	edi, edi
jz	short loc_1003DC0E
test	ebx, ebx
jz	short loc_1003DC0E
mov	edx, dword_100BAE1C
mov	eax, [ebx+4]
mov	ecx, [esp+10h+arg_4]
push	edx
mov	[eax], ecx
call	ds:PR_Lock
mov	eax, dword_100BAE18
push	ebp
push	eax
call	PL_HashTableLookup
add	esp, 0Ch
test	eax, eax
jz	short loc_1003DBE1
mov	ecx, dword_100BAE18
push	ebp
push	ecx
call	PL_HashTableRemove
add	esp, 8
mov	edx, dword_100BAE18
push	ebx
push	edi
push	edx
call	PL_HashTableAdd
neg	eax
sbb	esi, esi
mov	eax, dword_100BAE1C
push	eax
neg	esi
call	ds:PR_Unlock
add	esp, 10h
dec	esi
jnz	short loc_1003DC1B
pop	edi
pop	ebp
pop	ebx
xor	eax, eax
pop	esi
retn
			
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	short loc_1003DC2A
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
test	ebx, ebx
jz	short loc_1003DC39
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
pop	edi
pop	ebp
pop	ebx
mov	eax, esi
pop	esi
retn
mov	eax, dword_100BAE1C
test	eax, eax
jnz	short loc_1003DC5A
push	0FFFFE09Ah
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	esi
push	eax
call	ds:PR_Lock
mov	eax, [esp+8+arg_0]
mov	ecx, dword_100BAE18
push	eax
push	ecx
call	PL_HashTableLookup
mov	edx, dword_100BAE1C
push	edx
mov	esi, eax
call	ds:PR_Unlock
add	esp, 10h
test	esi, esi
jnz	short loc_1003DC8D
xor	eax, eax
pop	esi
retn
cmp	dword ptr [esi+8], 4
jz	short loc_1003DCA5
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [esi+4]
mov	eax, [eax]
pop	esi
retn
align 10h
cmp	dword_100BAE18,	0
jz	short loc_1003DD01
mov	eax, dword_100BAE1C
push	eax
call	ds:PR_Lock
mov	ecx, dword_100BAE18
push	ecx
call	PL_HashTableDestroy
mov	edx, dword_100BAE1C
push	edx
mov	dword_100BAE18,	0
call	ds:PR_Unlock
mov	eax, dword_100BAE1C
push	eax
call	ds:PR_DestroyLock
add	esp, 10h
mov	dword_100BAE1C,	0
xor	eax, eax
retn
align 10h
			
cmp	dword_100BAE10,	0
jz	short loc_1003DD61
mov	eax, dword_100BAE14
push	eax
call	ds:PR_Lock
mov	ecx, dword_100BAE10
push	ecx
call	PL_HashTableDestroy
mov	edx, dword_100BAE14
push	edx
mov	dword_100BAE10,	0
call	ds:PR_Unlock
mov	eax, dword_100BAE14
push	eax
call	ds:PR_DestroyLock
add	esp, 10h
mov	dword_100BAE14,	0
call	sub_1003DCB0
xor	eax, eax
retn
align 10h
			
mov	eax, dword_100BAE14
test	eax, eax
jnz	short loc_1003DD7A
retn
push	esi
push	eax
call	ds:PR_Lock
mov	eax, [esp+8+arg_0]
mov	ecx, dword_100BAE10
push	eax
push	ecx
call	PL_HashTableLookup
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_1003DDA7
push	esi
call	SECITEM_DupItem_Util
add	esp, 4
mov	esi, eax
mov	edx, dword_100BAE14
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
public CERT_FindCertBySubjectKeyID
mov	eax, dword_100BAE14
push	edi
xor	edi, edi
test	eax, eax
jz	short loc_1003DE2A
push	esi
push	eax
call	ds:PR_Lock
mov	eax, [esp+0Ch+arg_4]
mov	ecx, dword_100BAE10
push	eax
push	ecx
call	PL_HashTableLookup
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_1003DDF9
push	esi
call	SECITEM_DupItem_Util
add	esp, 4
mov	esi, eax
mov	edx, dword_100BAE14
push	edx
call	ds:PR_Unlock
add	esp, 4
test	esi, esi
jz	short loc_1003DE25
mov	eax, [esp+8+arg_0]
push	esi
push	eax
call	CERT_FindCertByDERCert
push	1
push	esi
mov	edi, eax
call	SECITEM_FreeItem_Util
add	esp, 10h
pop	esi
mov	eax, edi
pop	edi
retn
mov	eax, edi
pop	edi
retn
align 10h
			
sub	esp, 28h
push	ebx
push	ebp
push	esi
mov	esi, [esp+34h+arg_0]
push	edi
lea	eax, [esp+38h+var_18]
push	eax
xor	edi, edi
push	esi
mov	[esp+40h+var_28], edi
xor	ebp, ebp
mov	[esp+40h+var_14], edi
call	sub_1003E830
lea	ecx, [esp+40h+var_C]
push	ecx
push	5Ch
push	esi
mov	[esp+4Ch+var_8], edi
call	CERT_FindCertExtension
add	esp, 14h
test	eax, eax
jnz	short loc_1003DE7B
lea	edx, [esp+38h+var_C]
push	edx
call	CERT_DecodeOidSequence
add	esp, 4
mov	[esp+38h+var_28], eax
lea	eax, [esp+38h+var_20]
push	eax
push	esi
call	sub_1003E930
add	esp, 8
test	eax, eax
jnz	short loc_1003DE90
lea	ebp, [eax+1]
mov	eax, [esp+38h+var_14]
cmp	eax, edi
jnz	short loc_1003DEDD
cmp	[esp+38h+var_28], edi
jnz	short loc_1003DED9
lea	ecx, [esp+38h+var_24]
push	ecx
push	esi
mov	[esp+40h+var_24], edi
call	CERT_IsCACert
mov	ebx, [esp+40h+var_24]
add	esp, 8
test	eax, eax
jz	short loc_1003DEBE
or	ebx, 4000h
cmp	ebp, edi
jz	short loc_1003DECE
cmp	[esp+38h+var_20], edi
jz	short loc_1003DECE
or	ebx, 4006h
			
or	ebx, 0E0h
jmp	loc_1003E0B3
xor	ebx, ebx
jmp	short loc_1003DEE0
movzx	ebx, byte ptr [eax]
push	eax
call	PORT_Free_Util
add	esp, 4
mov	[esp+38h+var_14], edi
test	bl, bl
jns	short loc_1003DF03
mov	eax, [esi+118h]
cmp	eax, edi
jz	short loc_1003DF03
cmp	byte ptr [eax],	0
jz	short loc_1003DF03
or	ebx, 20h
			
test	bl, 4
jz	short loc_1003DF0B
or	ebx, 2
mov	eax, [esp+38h+var_28]
cmp	eax, edi
jz	loc_1003E0B3
mov	esi, [eax+4]
cmp	esi, edi
jz	short loc_1003DF50
mov	edi, edi
mov	eax, [esi]
cmp	eax, edi
jz	short loc_1003DF50
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 95h
jz	short loc_1003DF3D
add	esi, 4
jnz	short loc_1003DF20
jmp	short loc_1003DF50
cmp	ebp, 1
jnz	short loc_1003DF4D
cmp	[esp+38h+var_20], edi
jz	short loc_1003DF4D
or	ebx, 2
jmp	short loc_1003DF50
			
or	ebx, 20h
			
mov	edx, [esp+38h+var_28]
mov	esi, [edx+4]
cmp	esi, edi
jz	short loc_1003DF90
jmp	short loc_1003DF60
align 10h
			
mov	eax, [esi]
cmp	eax, edi
jz	short loc_1003DF90
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 92h
jz	short loc_1003DF7D
add	esi, 4
jnz	short loc_1003DF60
jmp	short loc_1003DF90
cmp	ebp, 1
jnz	short loc_1003DF8D
cmp	[esp+38h+var_20], edi
jz	short loc_1003DF8D
or	ebx, 4
jmp	short loc_1003DF90
			
or	ebx, 40h
			
mov	eax, [esp+38h+var_28]
mov	esi, [eax+4]
cmp	esi, edi
jz	short loc_1003DFCE
jmp	short loc_1003DFA0
align 10h
			
mov	eax, [esi]
cmp	eax, edi
jz	short loc_1003DFCE
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 4Eh
jz	short loc_1003DFBB
add	esi, 4
jnz	short loc_1003DFA0
jmp	short loc_1003DFCE
cmp	ebp, 1
jnz	short loc_1003DFCB
cmp	[esp+38h+var_20], edi
jz	short loc_1003DFCB
or	ebx, 4
jmp	short loc_1003DFCE
			
or	ebx, 40h
			
mov	ecx, [esp+38h+var_28]
mov	esi, [ecx+4]
cmp	esi, edi
jz	short loc_1003E013
lea	esp, [esp+0]
mov	eax, [esi]
cmp	eax, edi
jz	short loc_1003E013
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 93h
jz	short loc_1003DFFD
add	esi, 4
jnz	short loc_1003DFE0
jmp	short loc_1003E013
cmp	ebp, 1
jnz	short loc_1003E00D
cmp	[esp+38h+var_20], edi
jz	short loc_1003E00D
or	ebx, 4
jmp	short loc_1003E013
			
or	ebx, 80h
			
mov	edx, [esp+38h+var_28]
mov	esi, [edx+4]
cmp	esi, edi
jz	short loc_1003E04F
mov	edi, edi
mov	eax, [esi]
cmp	eax, edi
jz	short loc_1003E04F
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 94h
jz	short loc_1003E03D
add	esi, 4
jnz	short loc_1003E020
jmp	short loc_1003E04F
cmp	ebp, 1
jnz	short loc_1003E04C
cmp	[esp+38h+var_20], edi
jz	short loc_1003E04C
or	ebx, ebp
jmp	short loc_1003E04F
			
or	ebx, 10h
			
mov	eax, [esp+38h+var_28]
mov	esi, [eax+4]
cmp	esi, edi
jz	short loc_1003E083
lea	ebx, [ebx+0]
mov	eax, [esi]
cmp	eax, edi
jz	short loc_1003E083
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 96h
jz	short loc_1003E07D
add	esi, 4
jnz	short loc_1003E060
jmp	short loc_1003E083
or	ebx, 8000h
			
mov	ecx, [esp+38h+var_28]
mov	esi, [ecx+4]
cmp	esi, edi
jz	short loc_1003E0B3
mov	edi, edi
mov	eax, [esi]
cmp	eax, edi
jz	short loc_1003E0B3
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 97h
jz	short loc_1003E0AD
add	esi, 4
jnz	short loc_1003E090
jmp	short loc_1003E0B3
or	ebx, 4000h
			
mov	eax, [esp+38h+var_8]
cmp	eax, edi
jz	short loc_1003E0C4
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+38h+var_28]
cmp	eax, edi
jz	short loc_1003E0D5
push	eax
call	CERT_DestroyUserNotice
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
add	esp, 28h
retn
align 10h
public CERT_CreateValidity
push	ebx
mov	ebx, [esp+4+arg_4]
push	ebp
mov	ebp, [esp+8+arg_0]
cmp	ebx, [esp+8+arg_C]
jl	short loc_1003E10A
jg	short loc_1003E0F8
cmp	ebp, [esp+8+arg_8]
jbe	short loc_1003E10A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
xor	eax, eax
pop	ebx
retn
			
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1003E122
pop	edi
pop	ebp
pop	ebx
retn
push	esi
push	1Ch
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1003E17C
push	ebx
push	ebp
lea	eax, [esi+4]
push	eax
push	edi
mov	[esi], edi
call	DER_EncodeTimeChoice_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1003E164
mov	ecx, [esp+10h+arg_C]
mov	edx, [esp+10h+arg_8]
push	ecx
push	edx
lea	eax, [esi+10h]
push	eax
push	edi
call	DER_EncodeTimeChoice_Util
add	esp, 10h
test	eax, eax
jz	short loc_1003E17C
mov	esi, [esi]
test	esi, esi
jz	short loc_1003E175
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
			
mov	eax, esi
pop	esi
pop	edi
pop	ebp
pop	ebx
retn
align 10h
push	ebx
push	esi
mov	esi, [esp+8+arg_4]
push	edi
test	esi, esi
jz	short loc_1003E1AC
mov	eax, [esi]
test	eax, eax
jz	short loc_1003E1AC
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
mov	ebx, [esp+0Ch+arg_8]
mov	edi, [esp+0Ch+arg_0]
lea	eax, [ebx+4]
push	eax
lea	ecx, [esi+4]
push	ecx
push	edi
mov	[esi], edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003E1DC
add	ebx, 10h
push	ebx
add	esi, 10h
push	esi
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
pop	edi
pop	esi
pop	ebx
retn
public CERT_ImportCerts
			
sub	esp, 30h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+30h+var_4], eax
mov	ecx, [esp+30h+arg_C]
mov	eax, [esp+30h+arg_8]
mov	edx, [esp+30h+arg_10]
push	ebx
mov	ebx, [esp+34h+arg_0]
push	ebp
push	esi
push	edi
mov	[esp+40h+var_28], ecx
mov	ecx, [esp+40h+arg_1C]
xor	edi, edi
xor	ebp, ebp
mov	[esp+40h+var_2C], eax
mov	[esp+40h+var_14], edx
mov	[esp+40h+var_18], ecx
test	eax, eax
jz	loc_1003E413
lea	edx, ds:0[eax*4]
push	edx
call	PORT_ZAlloc_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1003E24E
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+30h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 30h
retn
xor	esi, esi
xor	ebp, ebp
mov	[esp+40h+var_30], ebp
cmp	[esp+40h+var_2C], esi
jbe	short loc_1003E2D0
lea	esp, [esp+0]
mov	eax, [esp+40h+var_28]
mov	ecx, [eax+esi*4]
push	1		
push	0		
push	0		
push	ecx		
push	ebx		
call	CERT_NewTempCertificate
xor	ecx, ecx
add	esp, 14h
mov	[edi+ebp*4], eax
cmp	eax, ecx
jz	short loc_1003E2C5
lea	edx, [esp+40h+var_24]
push	edx
push	eax
mov	[esp+48h+var_24], ecx
mov	[esp+48h+var_20], ecx
mov	[esp+48h+var_1C], ecx
call	CERT_FindSubjectKeyIDExtension
add	esp, 8
test	eax, eax
jnz	short loc_1003E2C4
cmp	[esp+40h+var_20], eax
jz	short loc_1003E2B5
mov	eax, [edi+ebp*4]
push	eax
lea	ecx, [esp+44h+var_24]
push	ecx
call	sub_1003DAA0
add	esp, 8
lea	edx, [esp+40h+var_24]
push	0
push	edx
call	SECITEM_FreeItem_Util
add	esp, 8
inc	ebp
inc	esi
cmp	esi, [esp+40h+var_2C]
jb	short loc_1003E260
mov	[esp+40h+var_30], ebp
cmp	[esp+40h+arg_14], 0
jz	loc_1003E40F
xor	ebp, ebp
cmp	[esp+40h+var_30], ebp
jbe	loc_1003E40F
jmp	short loc_1003E2F0
align 10h
			
mov	eax, [edi+ebp*4]
push	eax
mov	[esp+44h+var_28], 0
call	SECKEY_UpdateCertPQG
mov	esi, [edi+ebp*4]
mov	ebx, [esi+13Ch]
add	esp, 4
test	bl, 7
jnz	short loc_1003E35A
lea	ecx, [esp+40h+var_24]
push	ecx
push	esi
call	sub_1003E930
add	esp, 8
test	eax, eax
jnz	short loc_1003E32A
cmp	[esp+40h+var_24], eax
jnz	short loc_1003E357
cmp	dword ptr [esi+170h], 0
jz	short loc_1003E35A
cmp	dword ptr [esi+7Ch], 0
jz	short loc_1003E357
cmp	dword ptr [esi+80h], 0
jz	short loc_1003E357
lea	edx, [esi+78h]
push	edx
call	DER_GetInteger_Util
add	esp, 4
test	eax, eax
js	short loc_1003E357
cmp	eax, 2
jge	short loc_1003E35A
			
or	ebx, 6
			
lea	eax, [esp+40h+var_10]
push	eax
push	esi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_1003E3B1
mov	edx, [esp+40h+var_8]
mov	ecx, [esp+40h+var_C]
mov	eax, [esp+40h+var_10]
mov	esi, edx
or	esi, ecx
or	esi, eax
jz	short loc_1003E3B1
test	al, 3
jz	short loc_1003E38A
or	ebx, 0C0h
test	al, 18h
jz	short loc_1003E391
or	ebx, 4
test	cl, 3
jz	short loc_1003E399
or	ebx, 20h
test	cl, 18h
jz	short loc_1003E3A1
or	ebx, 2
test	dl, 3
jz	short loc_1003E3A9
or	ebx, 10h
test	dl, 18h
jz	short loc_1003E3B1
or	ebx, 1
			
test	bl, 7
mov	eax, 0
setnz	al
test	eax, eax
jz	short loc_1003E3DE
mov	ecx, [edi+ebp*4]
push	ecx
call	CERT_MakeCANickname
add	esp, 4
cmp	[esp+40h+var_30], 1
mov	esi, eax
jbe	short loc_1003E3E2
mov	edx, [edi+ebp*4]
push	0
push	esi
push	edx
jmp	short loc_1003E3F3
mov	esi, [esp+40h+var_28]
mov	eax, [esp+40h+var_18]
test	eax, eax
jnz	short loc_1003E3EC
mov	eax, esi
push	0
push	eax
mov	eax, [edi+ebp*4]
push	eax
call	j___CERT_AddTempCertToPerm
add	esp, 0Ch
push	esi
call	PORT_Free_Util
inc	ebp
add	esp, 4
cmp	ebp, [esp+40h+var_30]
jb	loc_1003E2F0
			
mov	ebp, [esp+40h+var_30]
mov	eax, [esp+40h+var_14]
test	eax, eax
jz	short loc_1003E41F
mov	[eax], edi
jmp	short loc_1003E44E
test	edi, edi
jz	short loc_1003E44E
xor	esi, esi
test	ebp, ebp
jz	short loc_1003E445
lea	esp, [esp+0]
mov	eax, [edi+esi*4]
test	eax, eax
jz	short loc_1003E440
push	eax
call	CERT_DestroyCertificate
add	esp, 4
inc	esi
cmp	esi, ebp
jb	short loc_1003E430
push	edi
call	PORT_Free_Util
add	esp, 4
			
test	ebp, ebp
jnz	short loc_1003E45C
cmp	[esp+40h+var_2C], ebp
jnz	loc_1003E238
mov	ecx, [esp+40h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 30h
retn
align 10h
			
push	0
push	offset off_100BA5C4
push	offset SECITEM_HashCompare
push	offset SECITEM_HashCompare
push	offset SECITEM_Hash
push	0
call	PL_NewHashTable
add	esp, 18h
mov	dword_100BAE10,	eax
test	eax, eax
jnz	short loc_1003E4BA
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
call	ds:PR_NewLock
mov	dword_100BAE14,	eax
test	eax, eax
jnz	short loc_1003E4EF
mov	eax, dword_100BAE10
push	eax
call	PL_HashTableDestroy
push	0FFFFE013h
mov	dword_100BAE10,	0
call	PORT_SetError_Util
add	esp, 8
or	eax, 0FFFFFFFFh
retn
call	sub_1003DA20
test	eax, eax
jz	short loc_1003E501
call	sub_1003DD10
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
			
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+13Ch], 0
push	esi
lea	esi, [eax+13Ch]
jnz	short loc_1003E535
push	eax
call	sub_1003DE30
push	eax
push	esi
call	ds:PR_AtomicSet
add	esp, 0Ch
xor	eax, eax
pop	esi
retn
align 10h
			
push	ebp
push	800h
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_1003E556
pop	ebp
retn
push	ebx
push	esi
push	edi
push	188h
push	ebp
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_1003E697
cmp	[esp+10h+arg_4], 0
mov	[esi], ebp
jz	short loc_1003E5AF
mov	edi, [esp+10h+arg_0]
mov	eax, [edi+8]
push	eax
push	ebp
call	PORT_ArenaAlloc_Util
add	esp, 8
test	eax, eax
jz	loc_1003E697
mov	[esi+40h], eax
mov	ecx, [edi+8]
mov	[esi+44h], ecx
mov	edx, [edi+8]
mov	ecx, [edi+4]
push	edx		
push	ecx		
push	eax		
call	memcpy
add	esp, 0Ch
jmp	short loc_1003E5C4
mov	eax, [esp+10h+arg_0]
mov	edx, [eax]
mov	[esi+3Ch], edx
mov	ecx, [eax+4]
mov	[esi+40h], ecx
mov	edx, [eax+8]
mov	[esi+44h], edx
lea	eax, [esi+3Ch]
push	eax
push	offset dword_100A6F18
push	esi
push	ebp
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_1003E697
mov	ecx, [esi+114h]
push	ecx
call	sub_1003F100
add	esp, 4
cmp	eax, 1
jnz	short loc_1003E5F9
or	[esi+174h], eax
lea	edx, [esi+6Ch]
push	edx
lea	eax, [esi+84h]
push	eax
lea	ecx, [esi+48h]
push	ecx
push	ebp
call	sub_1003B910
add	esp, 10h
test	eax, eax
jnz	loc_1003E697
mov	ebx, [esp+10h+Src]
test	ebx, ebx
jnz	short loc_1003E629
mov	[esi+154h], ebx
jmp	short loc_1003E65B
mov	eax, ebx
lea	edx, [eax+1]
mov	edi, edi
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1003E630
sub	eax, edx
lea	edi, [eax+1]
push	edi
push	ebp
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esi+154h], eax
test	eax, eax
jz	short loc_1003E697
push	edi		
push	ebx		
push	eax		
call	memcpy
add	esp, 0Ch
push	esi
call	sub_1003B5A0
push	esi
mov	[esi+118h], eax
call	sub_1003BB90
add	esp, 8
test	eax, eax
jnz	short loc_1003E697
call	sub_1003BB00
test	eax, eax
jnz	short loc_1003E697
mov	eax, esi
call	sub_1003BC60
push	esi
mov	[esi+170h], eax
call	sub_1003E510
add	esp, 4
test	eax, eax
jz	short loc_1003E6A9
			
push	0
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
pop	ebx
xor	eax, eax
pop	ebp
retn
lea	edx, [esi+0CCh]
push	edx
call	CERT_NameToAscii
mov	edi, eax
xor	ebx, ebx
add	esp, 4
cmp	edi, ebx
jz	short loc_1003E6D5
mov	eax, [esi]
push	edi
push	eax
call	PORT_ArenaStrdup_Util
push	edi
mov	[esi+4], eax
call	PORT_Free_Util
add	esp, 0Ch
lea	ecx, [esi+0A8h]
push	ecx
call	CERT_NameToAscii
mov	edi, eax
add	esp, 4
cmp	edi, ebx
jz	short loc_1003E6FF
mov	edx, [esi]
push	edi
push	edx
call	PORT_ArenaStrdup_Util
push	edi
mov	[esi+8], eax
call	PORT_Free_Util
add	esp, 0Ch
pop	edi
mov	[esi+17Ch], ebx
mov	[esi+180h], ebx
mov	[esi+158h], ebx
mov	dword ptr [esi+164h], 1
mov	eax, esi
pop	esi
pop	ebx
pop	ebp
retn
align 10h
align 10h
public CERT_IsCADERCert
mov	eax, [esp+arg_0]
push	esi
push	0		
push	0		
push	eax		
call	__CERT_DecodeDERCertificate_0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_1003E75A
pop	esi
retn
mov	ecx, [esp+4+arg_4]
push	edi
push	ecx
push	esi
call	CERT_IsCACert
push	esi
mov	edi, eax
call	CERT_DestroyCertificate
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public CERT_IsRootDERCert
mov	eax, [esp+arg_0]
push	0		
push	0		
push	eax		
call	__CERT_DecodeDERCertificate_0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003E796
retn
push	esi
mov	esi, [eax+170h]
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
mov	edx, [esp+arg_0]
mov	eax, [edx+114h]
mov	[esp+arg_0], eax
jmp	sub_1003EAC0
align 10h
public CERT_FindCertExtension
			
mov	edx, [esp+arg_0]
mov	eax, [edx+114h]
mov	[esp+arg_0], eax
jmp	sub_1003EB90
align 10h
mov	eax, [esp+4]
mov	ecx, [esp+8]
lea	edx, [eax+78h]
push	2
mov	[eax+114h], ecx
mov	eax, [eax]
push	edx
push	eax
call	DER_SetUInteger
add	esp, 0Ch
retn
public CERT_StartCertExtensions
mov	eax, [esp+arg_0]
mov	ecx, [eax]
push	offset loc_1003E7F0
push	ecx
push	eax
call	sub_1003EBB0
add	esp, 0Ch
retn
align 10h
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
mov	edx, [ecx+114h]
push	eax
push	3Fh
push	edx
call	sub_1003EFE0
add	esp, 0Ch
retn
align 10h
public CERT_FindKeyUsageExtension
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
mov	edx, [ecx+114h]
push	eax
push	51h
push	edx
call	sub_1003EFE0
add	esp, 0Ch
retn
align 10h
public CERT_FindSubjectKeyIDExtension
			
sub	esp, 18h
mov	ecx, [esp+18h+arg_0]
mov	edx, [ecx+114h]
push	ebx
push	esi
lea	eax, [esp+20h+var_18]
xor	ebx, ebx
push	eax
push	50h
push	edx
mov	[esp+2Ch+var_18], ebx
mov	[esp+2Ch+var_14], ebx
mov	[esp+2Ch+var_10], ebx
mov	[esp+2Ch+var_C], ebx
mov	[esp+2Ch+var_8], ebx
mov	[esp+2Ch+var_4], ebx
call	sub_1003EB90
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jnz	short loc_1003E90C
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
cmp	edi, ebx
jz	short loc_1003E908
lea	eax, [esp+24h+var_18]
push	eax
push	ebx
push	ebx
call	NSS_Get_SEC_OctetStringTemplate_Util
add	esp, 8
push	eax
lea	ecx, [esp+2Ch+var_C]
push	ecx
push	edi
call	SEC_QuickDERDecodeItem_Util
mov	esi, eax
add	esp, 10h
cmp	esi, ebx
jnz	short loc_1003E8FC
mov	eax, [esp+24h+arg_4]
lea	edx, [esp+24h+var_C]
push	edx
push	eax
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
mov	esi, eax
push	ebx
push	edi
call	PORT_FreeArena_Util
add	esp, 8
jmp	short loc_1003E90B
or	esi, 0FFFFFFFFh
pop	edi
lea	ecx, [esp+20h+var_18]
push	ebx
push	ecx
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, esi
pop	esi
pop	ebx
add	esp, 18h
retn
align 10h
			
sub	esp, 0Ch
mov	ecx, [esp+0Ch+arg_0]
mov	edx, [ecx+114h]
push	esi
lea	eax, [esp+10h+var_C]
push	eax
xor	esi, esi
push	55h
push	edx
mov	[esp+1Ch+var_8], esi
mov	[esp+1Ch+var_4], esi
call	sub_1003EB90
add	esp, 0Ch
cmp	eax, esi
jnz	short loc_1003E97C
mov	ecx, [esp+10h+arg_4]
lea	eax, [esp+10h+var_C]
push	eax
push	ecx
call	CERT_DecodeBasicConstraintValue
mov	edx, [esp+18h+var_8]
push	edx
mov	esi, eax
call	PORT_Free_Util
add	esp, 0Ch
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
			
sub	esp, 0Ch
mov	ecx, [esp+0Ch+arg_4]
mov	edx, [ecx+114h]
xor	eax, eax
mov	[esp+0Ch+var_8], eax
mov	[esp+0Ch+var_4], eax
lea	eax, [esp+0Ch+var_C]
push	eax
push	5Bh
push	edx
call	sub_1003EB90
add	esp, 0Ch
test	eax, eax
jz	short loc_1003E9C0
xor	eax, eax
add	esp, 0Ch
retn
mov	ecx, [esp+0Ch+arg_0]
push	esi
lea	eax, [esp+10h+var_C]
push	eax
push	ecx
call	CERT_DecodeAuthKeyID
mov	edx, [esp+18h+var_8]
push	edx
mov	esi, eax
call	PORT_Free_Util
add	esp, 0Ch
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_CheckCertUsage
			
			
mov	eax, [esp+arg_0]
mov	eax, [eax+114h]
sub	esp, 0Ch
test	eax, eax
jnz	short loc_1003EA05
add	esp, 0Ch
retn
push	esi
lea	ecx, [esp+10h+var_C]
push	ecx
push	51h
push	eax
mov	[esp+1Ch+var_8], 0
call	sub_1003EFE0
mov	esi, eax
add	esp, 0Ch
cmp	esi, 0FFFFFFFFh
jnz	short loc_1003EA48
call	PORT_GetError_Util
mov	ecx, [esp+10h+var_8]
lea	esi, [eax+1FDDh]
neg	esi
push	ecx
sbb	esi, esi
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
mov	dl, [esp+10h+arg_4]
mov	eax, [esp+10h+var_8]
test	[eax], dl
jnz	short loc_1003EA64
push	0FFFFE026h
call	PORT_SetError_Util
add	esp, 4
or	esi, 0FFFFFFFFh
mov	ecx, [esp+10h+var_8]
push	ecx
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
push	esi
push	edi
mov	esi, eax
xor	edi, edi
test	esi, esi
jz	short loc_1003EAB3
cmp	[esi], edi
jz	short loc_1003EAA8
mov	edi, edi
mov	edi, [esi]
push	edi
push	ebx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jz	short loc_1003EAA8
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_1003EA90
			
mov	eax, [esi]
neg	eax
sbb	eax, eax
and	eax, edi
pop	edi
pop	esi
retn
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
push	ebp
push	esi
mov	esi, [esp+8+arg_0]
push	edi
xor	ebp, ebp
xor	edi, edi
test	esi, esi
jz	short loc_1003EAFA
cmp	[esi], edi
jz	short loc_1003EAF0
push	ebx
mov	ebx, [esp+10h+arg_4]
mov	edi, [esi]
push	edi
push	ebx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jz	short loc_1003EAEF
add	esi, 4
cmp	[esi], ebp
jnz	short loc_1003EAD8
pop	ebx
mov	eax, [esi]
neg	eax
sbb	eax, eax
and	eax, edi
jnz	short loc_1003EB0E
push	0FFFFE023h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	ecx, [esp+0Ch+arg_8]
test	ecx, ecx
jz	short loc_1003EB27
add	eax, 18h
push	eax
push	ecx
push	0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
mov	ebp, eax
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
retn
align 10h
push	esi
mov	esi, [esp+4+arg_8]
test	esi, esi
jz	short loc_1003EB82
mov	eax, [esp+4+arg_4]
push	eax
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jz	short loc_1003EB68
push	ebx
mov	ebx, eax
mov	eax, [esp+8+arg_0]
call	sub_1003EA80
pop	ebx
test	eax, eax
jnz	short loc_1003EB6D
push	0FFFFE023h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [eax+10h]
test	eax, eax
jnz	short loc_1003EB78
mov	[esi], eax
pop	esi
retn
xor	ecx, ecx
cmp	byte ptr [eax],	0FFh
setz	cl
mov	[esi], ecx
xor	eax, eax
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_4]
push	eax
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jnz	short loc_1003EBA5
or	eax, 0FFFFFFFFh
retn
mov	[esp+arg_4], eax
jmp	sub_1003EAC0
align 10h
			
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1003EBDD
push	18h
push	esi
call	PORT_ArenaAlloc_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003EBE1
push	eax
push	esi
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
pop	esi
retn
mov	ecx, [esp+4+arg_0]
mov	edx, [esp+4+arg_4]
mov	[eax+4], ecx
mov	ecx, [esp+4+arg_8]
mov	[eax+0Ch], esi
mov	[eax+8], edx
mov	[eax], ecx
mov	dword ptr [eax+10h], 0
mov	dword ptr [eax+14h], 0
pop	esi
retn
align 10h
public CERT_AddExtensionByOID
			
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+8]
push	24h
push	eax
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1003EC90
mov	ecx, [edi+0Ch]
push	8
push	ecx
call	PORT_ArenaAlloc_Util
add	esp, 8
test	eax, eax
jz	short loc_1003EC90
cmp	[esp+8+arg_C], 0
mov	edx, [edi+10h]
mov	[eax], edx
mov	[edi+10h], eax
mov	[eax+4], esi
mov	eax, [esp+8+arg_4]
mov	ecx, [eax]
mov	[esi], ecx
mov	edx, [eax+4]
mov	[esi+4], edx
mov	eax, [eax+8]
mov	[esi+8], eax
jz	short loc_1003EC70
mov	dword ptr [esi+10h], offset dword_100BA5D4
mov	dword ptr [esi+14h], 1
cmp	[esp+8+arg_10],	0
jz	short loc_1003EC96
mov	ecx, [esp+8+arg_8]
mov	edx, [edi+8]
push	ecx
add	esi, 18h
push	esi
push	edx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_1003ECAB
			
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [esp+8+arg_8]
mov	ecx, [eax]
mov	[esi+18h], ecx
mov	edx, [eax+4]
mov	[esi+1Ch], edx
mov	eax, [eax+8]
mov	[esi+20h], eax
inc	dword ptr [edi+14h]
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
public CERT_AddExtension
mov	eax, [esp+arg_4]
push	eax
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jnz	short loc_1003ECD5
or	eax, 0FFFFFFFFh
retn
mov	[esp+arg_4], eax
jmp	CERT_AddExtensionByOID
align 10h
			
mov	eax, [esp+arg_10]
mov	ecx, [esp+arg_8]
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	edx, [edi+8]
push	eax
push	ecx
push	0
push	edx
call	SEC_ASN1EncodeItem_Util
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_1003ED0A
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [esp+8+arg_4]
push	eax
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jz	short loc_1003ED04
mov	ecx, [esp+8+arg_C]
push	0
push	ecx
push	esi
push	eax
push	edi
call	CERT_AddExtensionByOID
add	esp, 14h
pop	edi
pop	esi
retn
			
push	esi
mov	esi, [esp+4+arg_4]
mov	ecx, [esi+8]
add	ecx, ecx
push	edi
add	ecx, ecx
xor	edi, edi
xor	dl, dl
xor	eax, eax
add	ecx, ecx
jz	short loc_1003ED65
push	ebx
test	al, 7
jnz	short loc_1003ED57
mov	ebx, [esi+4]
mov	edx, eax
shr	edx, 3
mov	dl, [edx+ebx]
test	dl, dl
jns	short loc_1003ED5D
mov	edi, eax
inc	eax
add	dl, dl
cmp	eax, ecx
jb	short loc_1003ED48
pop	ebx
mov	ecx, [esi+4]
mov	eax, [esp+8+arg_0]
inc	edi
mov	[eax+8], edi
pop	edi
mov	[eax+4], ecx
pop	esi
retn
align 10h
public CERT_EncodeAndAddBitStrExtension
mov	eax, [esp+arg_8]
sub	esp, 0Ch
push	esi
push	edi
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
call	sub_1003ED30
push	0
push	0
call	NSS_Get_SEC_BitStringTemplate_Util
mov	edi, [esp+24h+arg_0]
push	eax
mov	eax, [edi+8]
lea	edx, [esp+28h+var_C]
push	edx
push	0
push	eax
call	SEC_ASN1EncodeItem_Util
mov	esi, eax
add	esp, 20h
test	esi, esi
jnz	short loc_1003EDC4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
mov	ecx, [esp+14h+arg_4]
push	ecx
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jz	short loc_1003EDBB
mov	edx, [esp+14h+arg_C]
push	0
push	edx
push	esi
push	eax
push	edi
call	CERT_AddExtensionByOID
add	esp, 14h
pop	edi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_FinishExtensions
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
mov	eax, [edi+14h]
mov	edx, [edi+8]
lea	ecx, ds:4[eax*4]
push	ecx
push	edx
or	ebx, 0FFFFFFFFh
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1003EE46
mov	eax, [edi+4]
mov	ecx, [edi]
push	esi
push	eax
call	ecx
mov	eax, [edi+10h]
add	esp, 8
test	eax, eax
jz	short loc_1003EE3E
lea	ebx, [ebx+0]
mov	edx, [eax+4]
mov	[esi], edx
mov	eax, [eax]
add	esi, 4
test	eax, eax
jnz	short loc_1003EE30
mov	dword ptr [esi], 0
xor	ebx, ebx
mov	eax, [edi+0Ch]
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
public CERT_MergeExtensions
push	ecx
push	ebx
mov	ebx, [esp+8+arg_0]
mov	[esp+8+var_4], 0
test	ebx, ebx
jz	loc_1003EFC2
mov	eax, [esp+8+arg_4]
test	eax, eax
jz	loc_1003EFC2
push	edi
mov	edi, [eax]
test	edi, edi
jz	loc_1003EFBA
push	ebp
push	esi
nop
add	[esp+14h+arg_4], 4
push	edi
call	SECOID_FindOIDTag_Util
mov	esi, [ebx+10h]
add	esp, 4
mov	ebp, eax
test	esi, esi
jz	short loc_1003EEDC
test	ebp, ebp
jnz	short loc_1003EEC2
mov	eax, [esi+4]
push	eax
push	edi
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jnz	loc_1003EF7E
jmp	short loc_1003EED6
mov	ecx, [esi+4]
push	ecx
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, ebp
jz	loc_1003EF7E
mov	esi, [esi]
test	esi, esi
jnz	short loc_1003EEA7
mov	eax, [edi+14h]
test	eax, eax
jz	loc_1003EF96
mov	edx, [edi+10h]
cmp	byte ptr [edx+eax-1], 0
jz	loc_1003EF96
mov	[esp+14h+arg_0], 1
test	ebp, ebp
jz	loc_1003EFA3
mov	eax, [ebx+8]
push	24h
push	eax
lea	ebp, [edi+18h]
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_1003EFB0
mov	ecx, [ebx+0Ch]
push	8
push	ecx
call	PORT_ArenaAlloc_Util
add	esp, 8
test	eax, eax
jz	short loc_1003EFB0
cmp	[esp+14h+arg_0], 0
mov	edx, [ebx+10h]
mov	[eax], edx
mov	[ebx+10h], eax
mov	[eax+4], esi
mov	eax, [edi]
mov	[esi], eax
mov	ecx, [edi+4]
mov	[esi+4], ecx
mov	edx, [edi+8]
mov	[esi+8], edx
jz	short loc_1003EF62
mov	dword ptr [esi+10h], offset dword_100BA5D4
mov	dword ptr [esi+14h], 1
mov	eax, [ebx+8]
push	ebp
add	esi, 18h
push	esi
push	eax
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003EFB0
inc	dword ptr [ebx+14h]
mov	[esp+14h+var_4], eax
			
mov	ecx, [esp+14h+arg_4]
mov	edi, [ecx]
test	edi, edi
jnz	loc_1003EE90
mov	eax, [esp+14h+var_4]
pop	esi
pop	ebp
pop	edi
pop	ebx
pop	ecx
retn
			
mov	[esp+14h+arg_0], 0
jmp	loc_1003EF05
push	0FFFFE029h
call	PORT_SetError_Util
add	esp, 4
			
pop	esi
mov	[esp+10h+var_4], 0FFFFFFFFh
pop	ebp
mov	eax, [esp+0Ch+var_4]
pop	edi
pop	ebx
pop	ecx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
align 10h
			
sub	esp, 18h
push	ebx
push	edi
xor	edi, edi
push	800h
mov	[esp+24h+var_18], edi
mov	[esp+24h+var_10], edi
mov	[esp+24h+var_8], edi
mov	[esp+24h+Src], edi
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
cmp	ebx, edi
jnz	short loc_1003F013
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 18h
retn
mov	eax, [esp+20h+arg_4]
push	esi
push	eax
call	SECOID_FindOIDByTag_Util
add	esp, 4
cmp	eax, edi
jz	short loc_1003F07C
mov	edx, [esp+24h+arg_0]
lea	ecx, [esp+24h+var_C]
push	ecx
push	eax
push	edx
call	sub_1003EAC0
add	esp, 0Ch
cmp	eax, edi
jnz	short loc_1003F07C
lea	eax, [esp+24h+var_C]
push	eax
push	edi
push	edi
call	NSS_Get_SEC_BitStringTemplate_Util
add	esp, 8
push	eax
lea	ecx, [esp+2Ch+var_18]
push	ecx
push	ebx
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1003F07C
mov	edx, [esp+24h+var_10]
add	edx, 7
shr	edx, 3
push	edx
call	PORT_Alloc_Util
mov	esi, [esp+28h+arg_8]
add	esp, 4
mov	[esi+4], eax
cmp	eax, edi
jnz	short loc_1003F081
			
or	esi, 0FFFFFFFFh
jmp	short loc_1003F0A3
mov	ecx, [esp+24h+var_10]
mov	edx, [esp+24h+Src]
add	ecx, 7
shr	ecx, 3
push	ecx		
push	edx		
push	eax		
call	memcpy
mov	eax, [esp+30h+var_10]
add	esp, 0Ch
mov	[esi+8], eax
xor	esi, esi
push	edi
push	ebx
call	PORT_FreeArena_Util
mov	eax, [esp+2Ch+var_8]
add	esp, 8
cmp	eax, edi
jz	short loc_1003F0BE
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
pop	ebx
add	esp, 18h
retn
align 10h
			
mov	edx, [esp+arg_0]
xor	eax, eax
test	edx, edx
jz	short locret_1003F0FC
mov	ecx, [edx]
test	ecx, ecx
jz	short locret_1003F0FC
mov	ecx, [ecx+10h]
test	ecx, ecx
jz	short loc_1003F0EC
cmp	byte ptr [ecx],	0FFh
jz	short loc_1003F0F7
mov	ecx, [edx+4]
add	edx, 4
test	ecx, ecx
jnz	short loc_1003F0E0
retn
mov	eax, 1
			
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
push	edi
xor	edi, edi
test	esi, esi
jz	short loc_1003F132
cmp	[esi], edi
jz	short loc_1003F132
mov	ecx, [esi]
mov	eax, [ecx+10h]
test	eax, eax
jz	short loc_1003F12B
cmp	byte ptr [eax],	0FFh
jnz	short loc_1003F12B
push	ecx
call	SECOID_KnownCertExtenOID
add	esp, 4
test	eax, eax
jz	short loc_1003F137
			
add	esi, 4
cmp	[esi], edi
jnz	short loc_1003F110
			
mov	eax, edi
pop	edi
pop	esi
retn
pop	edi
mov	eax, 1
pop	esi
retn
align 10h
			
push	ecx
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_0]
xor	ebx, ebx
mov	[esp+0Ch+var_4], ebx
test	ebp, ebp
jnz	short loc_1003F158
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
mov	eax, [ebp+54h]
test	eax, eax
jnz	short loc_1003F163
pop	ebp
pop	ebx
pop	ecx
retn
push	esi
push	edi
mov	edi, eax
mov	esi, [edi]
test	esi, esi
jz	short loc_1003F1E2
lea	ecx, [ecx+0]
mov	eax, [esi+18h]
test	eax, eax
jz	short loc_1003F1B2
test	ebx, ebx
jnz	short loc_1003F1A1
push	eax
call	sub_1003F0D0
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	short loc_1003F1A1
cmp	dword ptr [ebp+8], 0
jz	short loc_1003F1C6
lea	eax, [ebp+4]
push	eax
call	DER_GetUInteger
add	esp, 4
cmp	eax, 1
jnz	short loc_1003F1C6
			
mov	ecx, [esi+18h]
push	ecx
call	sub_1003F100
add	esp, 4
cmp	eax, 1
jz	short loc_1003F1CD
mov	esi, [edi+4]
add	edi, 4
test	esi, esi
jnz	short loc_1003F170
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
			
push	0FFFFE094h
jmp	short loc_1003F1D2
push	0FFFFE095h
call	PORT_SetError_Util
mov	[esp+18h+var_4], 0FFFFFFFFh
add	esp, 4
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
push	edi
xor	edi, edi
test	esi, esi
jz	short loc_1003F227
cmp	[esi+8], edi
jz	short loc_1003F227
lea	eax, [esi+4]
push	eax
call	DER_GetUInteger
mov	edi, eax
add	esp, 4
cmp	edi, 1
jle	short loc_1003F227
push	0FFFFE093h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
			
mov	eax, [esi+58h]
test	eax, eax
jz	short loc_1003F277
push	eax
call	sub_1003F0D0
add	esp, 4
test	eax, eax
jz	short loc_1003F277
cmp	edi, 1
jz	short loc_1003F253
push	0FFFFE094h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [esi+58h]
push	ecx
call	sub_1003F100
add	esp, 4
cmp	eax, 1
jnz	short loc_1003F277
push	0FFFFE095h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
			
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
public CERT_KeyFromDERCrl
			
sub	esp, 48h
push	ebx
mov	ebx, [esp+4Ch+arg_0]
push	esi
push	edi
test	ebx, ebx
jnz	short loc_1003F29F
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	edi, eax
jmp	short loc_1003F2A1
mov	edi, ebx
push	30h		
lea	eax, [esp+58h+Dst]
push	0		
push	eax		
call	memset
mov	ecx, [esp+60h+arg_4]
push	ecx
push	offset dword_100A29C0
lea	edx, [esp+68h+Dst]
push	edx
push	edi
call	SEC_QuickDERDecodeItem_Util
mov	esi, eax
add	esp, 1Ch
test	esi, esi
jnz	short loc_1003F318
mov	[esp+54h+var_48], eax
mov	[esp+54h+var_44], eax
mov	[esp+54h+var_40], eax
mov	[esp+54h+var_3C], eax
mov	[esp+54h+var_38], eax
mov	[esp+54h+var_34], eax
lea	eax, [esp+54h+Dst]
push	eax
push	offset dword_100A7240
lea	ecx, [esp+5Ch+var_48]
push	ecx
push	edi
call	SEC_QuickDERDecodeItem_Util
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	short loc_1003F318
mov	eax, [esp+54h+arg_8]
lea	edx, [esp+54h+var_48]
push	edx
push	eax
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
mov	esi, eax
			
cmp	edi, ebx
jz	short loc_1003F327
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 48h
retn
public CERT_CompleteCRLDecodeEntries
			
			
mov	eax, [esp+arg_0]
push	ebx
push	esi
test	eax, eax
jz	short loc_1003F364
mov	esi, [eax+0B8h]
test	esi, esi
jz	short loc_1003F364
mov	ebx, 1
cmp	[esi+4], ebx
jz	short loc_1003F364
cmp	dword ptr [esi], 0
jnz	short loc_1003F358
pop	esi
xor	eax, eax
pop	ebx
retn
cmp	[esi+8], ebx
jz	short loc_1003F364
lea	ecx, [eax+78h]
test	ecx, ecx
jnz	short loc_1003F36A
			
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	edi
push	ecx
lea	edi, [eax+4]
mov	eax, [eax]
push	offset dword_100A7430
push	edi
push	eax
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1003F388
mov	[esi], eax
jmp	short loc_1003F38E
mov	[esi+4], ebx
mov	[esi+8], ebx
push	edi
call	sub_1003F140
add	esp, 4
pop	edi
test	eax, eax
jz	short loc_1003F39F
mov	[esi+10h], ebx
pop	esi
pop	ebx
retn
align 10h
public CERT_DecodeDERCrlWithFlags
			
push	ecx
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_4]
xor	ebx, ebx
mov	[esp+0Ch+var_4], offset	dword_100A74C0
test	ebp, ebp
jnz	short loc_1003F3D8
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	eax, [esp+0Ch+arg_C]
and	al, 9
cmp	al, 8
jz	short loc_1003F3C5
push	edi
mov	edi, [esp+10h+arg_0]
test	edi, edi
jnz	short loc_1003F403
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1003F403
pop	edi
pop	ebp
pop	ebx
pop	ecx
retn
			
push	esi
push	0BCh
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1003F42A
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1003F504
push	18h
push	edi
mov	[esi], edi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esi+0B8h], eax
test	eax, eax
jz	loc_1003F504
mov	ebx, eax
mov	al, byte ptr [esp+14h+arg_C]
test	al, 8
jz	short loc_1003F456
mov	dword ptr [ebx+14h], 1
test	al, 1
jz	short loc_1003F462
mov	[esi+0ACh], ebp
jmp	short loc_1003F48E
push	0Ch
push	edi
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esi+0ACh], eax
test	eax, eax
jz	loc_1003F504
push	ebp
push	eax
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003F504
mov	al, byte ptr [esp+14h+arg_C]
lea	ebp, [esi+4]
mov	[ebp+0], edi
test	al, 2
jz	short loc_1003F4A5
mov	ecx, offset dword_100A7520
mov	dword ptr [ebx], 1
jmp	short loc_1003F4A9
mov	ecx, [esp+14h+var_4]
mov	eax, [esp+14h+arg_8]
dec	eax
jz	short loc_1003F4BF
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_1003F504
mov	edx, [esi+0ACh]
push	edx
push	ecx
push	esi
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_1003F4DE
mov	dword ptr [ebx+0Ch], 1
jmp	short loc_1003F504
push	ebp
call	sub_1003F1F0
add	esp, 4
test	eax, eax
jnz	short loc_1003F4FD
cmp	dword ptr [ebx], 1
jz	short loc_1003F538
push	ebp
call	sub_1003F140
add	esp, 4
test	eax, eax
jz	short loc_1003F538
mov	dword ptr [ebx+10h], 1
			
test	byte ptr [esp+14h+arg_C], 4
jz	short loc_1003F51A
test	ebx, ebx
jz	short loc_1003F516
mov	dword ptr [ebx+4], 1
test	esi, esi
jnz	short loc_1003F538
cmp	[esp+14h+arg_0], 0
jnz	short loc_1003F530
test	edi, edi
jz	short loc_1003F530
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
			
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
			
mov	eax, esi
mov	dword ptr [esi+70h], 1
pop	esi
pop	edi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
public CERT_DecodeDERCrl
			
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	0
push	eax
push	ecx
push	edx
call	CERT_DecodeDERCrlWithFlags
add	esp, 10h
retn
align 10h
sub	esp, 0Ch
push	ebx
push	ebp
mov	ebp, [esp+14h+arg_8]
push	esi
xor	esi, esi
mov	ebx, eax
mov	[esp+18h+var_8], esi
mov	[esp+18h+var_4], esi
mov	[esp+18h+var_C], esi
cmp	[esp+18h+arg_C], esi
jnz	short loc_1003F5A7
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 0Ch
retn
mov	ecx, [esp+18h+arg_4]
push	edi
lea	eax, [esp+1Ch+var_C]
push	eax
push	ebp
push	ecx
lea	edx, [esp+28h+var_4]
push	edx
lea	eax, [esp+2Ch+arg_0]
push	eax
call	sub_10029790
mov	edi, eax
add	esp, 14h
test	edi, edi
jnz	short loc_1003F5F5
call	PORT_GetError_Util
cmp	eax, 0FFFFE089h
jz	loc_1003F67E
mov	ecx, [esp+1Ch+arg_C]
pop	edi
mov	[ecx], esi
pop	esi
mov	[esp+14h+var_8], 0FFFFFFFFh
mov	eax, [esp+14h+var_8]
pop	ebp
pop	ebx
add	esp, 0Ch
retn
or	ebx, 9
push	ebx
push	ebp
push	edi
push	0
call	CERT_DecodeDERCrlWithFlags
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_1003F645
mov	ecx, [esp+1Ch+arg_0]
mov	[esi+0B0h], ecx
mov	edx, [esp+1Ch+var_4]
mov	[esp+1Ch+arg_0], 0
mov	[esi+0B4h], edx
mov	eax, [esp+1Ch+var_C]
xor	edi, edi
test	eax, eax
jz	short loc_1003F65E
push	eax
mov	eax, [esi]
push	eax
call	PORT_ArenaStrdup_Util
add	esp, 8
mov	[esi+0A8h], eax
jmp	short loc_1003F64D
mov	[esp+1Ch+var_8], 0FFFFFFFFh
mov	eax, [esp+1Ch+var_C]
test	eax, eax
jz	short loc_1003F65E
push	eax
call	PORT_Free_Util
add	esp, 4
			
mov	eax, [esp+1Ch+arg_0]
test	eax, eax
jz	short loc_1003F66F
push	eax
call	PK11_FreeSlot
add	esp, 4
test	edi, edi
jz	short loc_1003F67E
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
			
mov	ecx, [esp+1Ch+arg_C]
mov	eax, [esp+1Ch+var_8]
pop	edi
mov	[ecx], esi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
public SEC_NewCrl
push	esi
push	edi
call	PK11_GetInternalKeySlot
mov	ecx, [esp+8+arg_4]
mov	edx, [esp+8+arg_8]
push	0
push	0
push	1
mov	esi, eax
mov	eax, [esp+14h+arg_C]
push	0
push	eax
push	ecx
push	edx
push	esi
call	PK11_ImportCRL
push	esi
mov	edi, eax
call	PK11_FreeSlot
add	esp, 24h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
public SEC_DupCrl
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1003F6EA
lea	eax, [esi+70h]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
xor	eax, eax
pop	esi
retn
align 10h
public SEC_DestroyCrl
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1003F754
lea	eax, [esi+70h]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
cmp	eax, 1
jge	short loc_1003F750
mov	eax, [esi+0B0h]
test	eax, eax
jz	short loc_1003F71E
push	eax
call	PK11_FreeSlot
add	esp, 4
mov	eax, [esi+0B8h]
test	eax, eax
jz	short loc_1003F73F
cmp	dword ptr [eax+14h], 1
jnz	short loc_1003F73F
mov	ecx, [esi+0ACh]
push	1
push	ecx
call	SECITEM_FreeItem_Util
add	esp, 8
			
mov	esi, [esi]
test	esi, esi
jz	short loc_1003F750
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
xor	eax, eax
pop	esi
retn
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public SEC_LookupCrls
push	esi
push	edi
mov	edi, [esp+8+arg_4]
push	800h
mov	dword ptr [edi], 0
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1003F785
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
push	ebx
push	10h
push	esi
call	PORT_ArenaAlloc_Util
mov	edx, [esp+14h+arg_8]
mov	ecx, [esp+14h+arg_0]
push	0
push	edx
mov	[eax], esi
mov	dword ptr [eax+8], 0
mov	dword ptr [eax+0Ch], 0
mov	[eax+4], ecx
push	eax
mov	[edi], eax
call	sub_10029420
mov	ebx, eax
add	esp, 14h
test	ebx, ebx
jz	short loc_1003F7CE
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
mov	dword ptr [edi], 0
mov	eax, ebx
pop	ebx
pop	edi
pop	esi
retn
align 10h
public NSS_Get_CERT_IssuerAndSNTemplate
			
mov	eax, offset dword_100A71E8
retn
align 10h
public NSS_Get_CERT_CrlTemplate
mov	eax, offset dword_100A72F0
retn
align 10h
public NSS_Get_CERT_SignedCrlTemplate
mov	eax, offset dword_100A74C0
retn
align 10h
public NSS_Get_CERT_SetOfSignedCrlTemplate
			
mov	eax, offset dword_100A7580
retn
align 10h
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_1003F829
retn
mov	edx, [eax+8]
mov	ecx, [esp+arg_4]
push	esi
mov	esi, [eax]
sub	esi, edx
cmp	ecx, esi
pop	esi
jbe	short loc_1003F84D
add	[eax+10h], ecx
mov	[esp+arg_4], ecx
mov	eax, [eax+0Ch]
mov	[esp+arg_0], eax
jmp	PORT_ArenaAlloc_Util
add	edx, ecx
mov	[eax+8], edx
mov	eax, [eax+4]
sub	eax, ecx
add	eax, edx
retn
align 10h
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_1003F869
retn
mov	ecx, [eax+8]
mov	edx, [eax]
sub	edx, ecx
cmp	edx, 10h
jnb	short loc_1003F88D
add	dword ptr [eax+10h], 10h
mov	[esp+arg_4], 10h
mov	eax, [eax+0Ch]
mov	[esp+arg_0], eax
jmp	PORT_ArenaAlloc_Util
mov	edx, [eax+4]
add	ecx, 10h
mov	[eax+8], ecx
lea	eax, [edx+ecx-10h]
retn
align 10h
public __PBE_DestroyContext
			
retn			
align 10h
			
push	edi
xor	edi, edi
cmp	dword_100BAE30,	edi
jnz	loc_1003F9DD
cmp	dword_100BAE28,	edi
jnz	loc_1003F9CB
cmp	dword_100BAE2C,	edi
jnz	loc_1003F9CB
cmp	dword_100BAE20,	edi
jnz	loc_1003F9CB
cmp	dword_100BAE24,	edi
jnz	loc_1003F9CB
push	esi
mov	esi, ds:PR_NewLock
call	esi 
mov	dword_100BAE28,	eax
call	esi 
push	edi
push	edi
push	offset PL_CompareValues
push	offset SECITEM_HashCompare
push	offset SECITEM_Hash
push	edi
mov	dword_100BAE20,	eax
call	PL_NewHashTable
push	edi
push	edi
push	offset PL_CompareValues
push	offset SECITEM_HashCompare
push	offset SECITEM_Hash
push	edi
mov	dword_100BAE2C,	eax
call	PL_NewHashTable
mov	esi, ds:PR_DestroyLock
mov	ecx, eax
mov	eax, dword_100BAE28
add	esp, 30h
mov	dword_100BAE24,	ecx
cmp	eax, edi
jz	short loc_1003F980
cmp	dword_100BAE20,	edi
jz	short loc_1003F974
cmp	dword_100BAE2C,	edi
jz	short loc_1003F974
cmp	ecx, edi
jz	short loc_1003F974
pop	esi
mov	dword_100BAE30,	1
xor	eax, eax
pop	edi
retn
			
push	eax
call	esi 
add	esp, 4
mov	dword_100BAE28,	edi
mov	eax, dword_100BAE20
cmp	eax, edi
jz	short loc_1003F995
push	eax
call	esi 
add	esp, 4
mov	dword_100BAE20,	edi
mov	eax, dword_100BAE2C
cmp	eax, edi
jz	short loc_1003F9AD
push	eax
call	PL_HashTableDestroy
add	esp, 4
mov	dword_100BAE2C,	edi
mov	eax, dword_100BAE24
cmp	eax, edi
jz	short loc_1003F9C5
push	eax
call	PL_HashTableDestroy
add	esp, 4
mov	dword_100BAE24,	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
			
or	eax, 0FFFFFFFFh
pop	edi
retn
cmp	dword_100BAE28,	edi
jz	short loc_1003F9D8
cmp	dword_100BAE2C,	edi
jz	short loc_1003F9D8
xor	eax, eax
pop	edi
retn
align 10h
			
test	esi, esi
jnz	short loc_1003FA15
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1003FA27
push	1
push	eax
call	SECITEM_ZfreeItem_Util
add	esp, 8
mov	eax, [esi]
test	eax, eax
jz	short loc_1003FA38
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
push	esi
call	PORT_Free_Util
add	esp, 4
xor	eax, eax
retn
align 10h
mov	eax, [esp+4]
test	eax, eax
jz	short loc_1003FA78
push	esi
mov	esi, [eax+0Ch]
test	esi, esi
jz	short loc_1003FA77
call	sub_1003FA00
test	eax, eax
jz	short loc_1003FA77
mov	eax, [esp+10h]
test	eax, eax
jz	short loc_1003FA77
mov	dword ptr [eax], 0FFFFFFFFh
			
pop	esi
xor	eax, eax
retn
align 10h
sub	esp, 28h
push	edi
mov	edi, 1
test	eax, eax
jnz	short loc_1003FA94
xor	eax, eax
pop	edi
add	esp, 28h
retn
mov	ecx, [eax+0B0h]
test	ecx, ecx
jz	short loc_1003FA8D
push	ebx
lea	ebx, [eax+2Ch]
test	ebx, ebx
jz	short loc_1003FAC5
mov	eax, [eax+0B4h]
mov	[esp+30h+var_10], eax
test	eax, eax
jz	short loc_1003FAC5
push	ecx
call	sub_10036730
add	esp, 4
mov	[esp+30h+var_C], eax
test	eax, eax
jnz	short loc_1003FACD
			
pop	ebx
xor	eax, eax
pop	edi
add	esp, 28h
retn
push	esi
mov	[esp+34h+var_8], edi
mov	[esp+34h+var_4], 0
call	sub_10050920
mov	esi, eax
test	esi, esi
jnz	short loc_1003FAEC
pop	esi
pop	ebx
pop	edi
add	esp, 28h
retn
push	0
push	0
lea	eax, [esp+3Ch+var_28]
push	eax
lea	ecx, [esp+40h+var_24]
push	ecx
push	0
push	esi
lea	edx, [esp+4Ch+var_10]
push	0
push	edx
call	sub_1004FF20
add	esp, 20h
test	eax, eax
jnz	short loc_1003FB3E
mov	eax, [esp+34h+var_24]
mov	ecx, [esp+34h+var_20]
lea	edx, [esp+34h+var_1C]
push	edx
push	ebx
mov	[esp+3Ch+var_18], eax
mov	[esp+3Ch+var_14], ecx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jz	short loc_1003FB34
xor	edi, edi
cmp	[esp+34h+var_28], 0CE534351h
jz	short loc_1003FB40
xor	edi, edi
push	esi
call	sub_10050930
add	esp, 4
pop	esi
pop	ebx
mov	eax, edi
pop	edi
add	esp, 28h
retn
align 10h
			
test	edi, edi
jz	short loc_1003FBDA
test	esi, esi
jz	short loc_1003FBDA
mov	ecx, [esi]
mov	eax, [ecx+0B8h]
push	ebx
mov	ebx, 1
cmp	[eax+4], ebx
jnz	short loc_1003FB8F
push	0FFFFE009h
mov	[esi+10h], ebx
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
retn
mov	eax, [edi+4]
test	eax, eax
jz	short loc_1003FBB6
mov	edx, [esp+4+arg_8]
push	edx
mov	edx, [esp+8+arg_4]
push	edx
mov	edx, [esp+0Ch+arg_0]
push	edx
push	eax
add	ecx, 78h
push	ecx
call	CERT_VerifySignedData
add	esp, 14h
test	eax, eax
jz	short loc_1003FBD0
cmp	dword ptr [edi+4], 0
jz	short loc_1003FBBF
mov	[esi+10h], ebx
push	0FFFFE020h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
retn
mov	[esi+10h], ebx
mov	[esi+14h], ebx
xor	eax, eax
pop	ebx
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
test	eax, eax
jz	short loc_1003FC12
test	ecx, ecx
jz	short loc_1003FC12
test	esi, esi
jz	short loc_1003FC12
mov	eax, [eax+8]
test	eax, eax
jz	short loc_1003FC12
push	ecx
push	eax
call	PL_HashTableLookup
add	esp, 8
mov	[esi], eax
xor	eax, eax
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
mov	eax, [esp+arg_0]
push	esi
test	eax, eax
jz	short loc_1003FC92
mov	ecx, [esp+4+arg_4]
test	ecx, ecx
jz	short loc_1003FC92
mov	esi, [esp+4+arg_8]
test	esi, esi
jz	short loc_1003FC92
xor	edx, edx
mov	dword ptr [esi], 0
cmp	dx, [eax+1Ch]
jz	short loc_1003FC6B
push	0FFFFE021h
call	PORT_SetError_Util
add	esp, 4
mov	eax, 3
pop	esi
retn
mov	eax, [eax+18h]
test	eax, eax
jnz	short loc_1003FC79
mov	eax, 4
pop	esi
retn
call	sub_1003FBF0
test	eax, eax
jz	short loc_1003FC89
mov	eax, 5
pop	esi
retn
xor	eax, eax
cmp	[esi], eax
pop	esi
setnz	al
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
mov	eax, 2
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
sub	esp, 10h
push	ebx
push	esi
mov	esi, [eax]
push	edi
mov	edi, [ecx]
test	esi, esi
jz	short loc_1003FCCA
test	edi, edi
jnz	short loc_1003FCE6
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
			
cmp	edi, esi
sbb	eax, eax
pop	edi
and	eax, 2
pop	esi
dec	eax
pop	ebx
add	esp, 10h
retn
mov	edx, [esi]
add	edx, 40h
push	edx
lea	eax, [esp+20h+var_10]
push	eax
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003FCD7
mov	ecx, [edi]
add	ecx, 40h
push	ecx
lea	edx, [esp+20h+var_8]
push	edx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	short loc_1003FCD7
mov	eax, [esp+1Ch+var_C]
mov	ecx, [esp+1Ch+var_4]
mov	edx, [esp+1Ch+var_10]
mov	ebx, [esp+1Ch+var_8]
cmp	eax, ecx
jl	short loc_1003FD44
jg	short loc_1003FD2E
cmp	edx, ebx
jbe	short loc_1003FD3A
pop	edi
pop	esi
mov	eax, 1
pop	ebx
add	esp, 10h
retn
cmp	eax, ecx
jg	short loc_1003FCD7
jl	short loc_1003FD44
cmp	edx, ebx
jnb	short loc_1003FCD7
			
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
align 10h
push	ebx
mov	ebx, [esp+4+arg_0]
push	ebp
mov	ebp, [esp+8+arg_4]
push	esi
mov	esi, [ebx]
push	edi
mov	edi, [ebp+0]
test	esi, esi
jz	short loc_1003FDBC
test	edi, edi
jz	short loc_1003FDBC
mov	ecx, [esi+14h]
mov	eax, 1
cmp	ecx, eax
jnz	short loc_1003FD7E
cmp	[edi+14h], eax
jz	short loc_1003FDA1
cmp	ecx, eax
jz	short loc_1003FDD1
cmp	[edi+14h], eax
jz	short loc_1003FDB4
mov	ecx, [esi]
mov	edx, [ecx+0B8h]
mov	ecx, [edx+4]
mov	edx, [edi]
mov	edx, [edx+0B8h]
mov	edx, [edx+4]
test	ecx, ecx
jnz	short loc_1003FDB0
test	edx, edx
jnz	short loc_1003FDD1
push	ebp		
push	ebx		
call	sub_1003FCB0
add	esp, 8
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
test	edx, edx
jnz	short loc_1003FDC9
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
cmp	edi, esi
sbb	eax, eax
and	eax, 2
dec	eax
			
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
push	ebp
mov	ebp, [esp+4+arg_4]
push	edi
xor	edi, edi
cmp	ebx, edi
jz	short loc_1003FE64
cmp	ebp, edi
jz	short loc_1003FE64
push	esi
push	38h
mov	[ebx], edi
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
cmp	esi, edi
jz	short loc_1003FE1C
push	edi
push	edi
call	NSSRWLock_New_Util
add	esp, 8
mov	[esi], eax
cmp	eax, edi
jnz	short loc_1003FE23
push	esi
call	PORT_Free_Util
add	esp, 4
pop	esi
pop	edi
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	eax, [esp+0Ch+arg_0]
cmp	eax, edi
jz	short loc_1003FE37
push	eax
call	CERT_DupCertificate
add	esp, 4
mov	[esi+4], eax
mov	eax, [esp+0Ch+arg_8]
push	eax
call	SECITEM_DupItem_Util
push	ebp
mov	[esi+0Ch], eax
call	SECITEM_DupItem_Util
add	esp, 8
mov	[esi+8], eax
mov	[esi+28h], edi
mov	[esi+2Ch], edi
mov	[esi+30h], edi
mov	[esi+34h], edi
mov	[ebx], esi
pop	esi
pop	edi
xor	eax, eax
pop	ebp
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	ebp
retn
align 10h
test	edi, edi
jz	short loc_1003FEB5
test	ebx, ebx
jz	short loc_1003FEB5
push	esi
push	8
mov	dword ptr [edi], 0
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1003FEA4
or	eax, 0FFFFFFFFh
pop	esi
retn
push	ebx
call	SECITEM_DupItem_Util
mov	[esi], eax
add	esp, 4
mov	[edi], esi
xor	eax, eax
pop	esi
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
test	eax, eax
jz	short loc_1003FF06
test	ecx, ecx
jz	short loc_1003FF06
test	esi, esi
jz	short loc_1003FF06
cmp	[esp+arg_4], 0
push	ebx
jnz	short loc_1003FF01
push	0
lea	ebx, [eax+4]
mov	eax, [esp+8+arg_0]
push	ecx
push	eax
call	sub_1003FDE0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1003FF01
mov	ecx, [ebx]
mov	[esi], ecx
pop	ebx
retn
			
or	eax, 0FFFFFFFFh
pop	ebx
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
test	eax, eax
jz	short loc_1003FF43
mov	ecx, dword_100BAE2C
test	ecx, ecx
jz	short loc_1003FF43
push	eax
mov	eax, [eax]
push	eax
push	ecx
call	PL_HashTableAdd
add	esp, 0Ch
neg	eax
sbb	eax, eax
neg	eax
dec	eax
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
test	eax, eax
jnz	short loc_1003FF74
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
mov	edx, [eax+10h]
test	edx, edx
jnz	short loc_1003FF8B
push	0FFFFE089h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
mov	ecx, [eax+18h]
push	esi
test	ecx, ecx
jz	short loc_1003FFAA
mov	esi, [ecx]
test	esi, esi
jz	short loc_1003FFF0
lea	eax, [esi+70h]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
mov	ecx, [eax+14h]
mov	esi, [ecx+edx*4-4]
test	esi, esi
jz	short loc_1003FFE3
mov	eax, [esi]
mov	edx, [eax+0B8h]
cmp	dword ptr [edx+4], 0
jnz	short loc_1003FFE3
cmp	[esp+4+arg_0], 1
jnz	short loc_1003FFD7
push	eax
call	CERT_CompleteCRLDecodeEntries
add	esp, 4
test	eax, eax
jnz	short loc_1003FFE3
mov	eax, [esi]
pop	esi
mov	[esp+arg_0], eax
jmp	SEC_DupCrl
			
push	0FFFFE089h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_10040016
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
retn
cmp	[esp+arg_4], 1
jnz	short loc_10040029
mov	eax, [eax]
push	eax
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
retn
mov	ecx, [eax]
push	ecx
call	NSSRWLock_UnlockRead_Util
pop	ecx
retn
align 10h
			
mov	eax, dword_100BAE20
test	eax, eax
jnz	short loc_1004004D
or	eax, 0FFFFFFFFh
retn
push	eax
call	ds:PR_Lock
mov	eax, [esp+4+arg_0]
mov	dword ptr [eax], offset	dword_100BAE20
add	esp, 4
xor	eax, eax
retn
align 10h
			
cmp	[esp+arg_0], 0
push	esi
jz	short loc_1004009D
mov	eax, [esp+4+arg_4]
test	eax, eax
jz	short loc_1004009D
mov	esi, [esp+4+arg_8]
test	esi, esi
jz	short loc_1004009D
push	eax
mov	eax, dword_100BAE24
push	eax
call	PL_HashTableLookup
add	esp, 8
mov	[esi], eax
xor	eax, eax
pop	esi
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_100400BC
or	eax, 0FFFFFFFFh
retn
cmp	dword ptr [eax], 0
jz	short loc_100400B8
mov	eax, dword_100BAE20
push	eax
call	ds:PR_Unlock
add	esp, 4
xor	eax, eax
retn
align 10h
			
test	ebx, ebx
jnz	short loc_100400F5
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
push	esi
push	1Ch
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1004010B
or	eax, 0FFFFFFFFh
pop	esi
retn
test	edi, edi
jz	short loc_1004012D
lea	eax, [edi+70h]
push	eax
call	ds:PR_AtomicIncrement
mov	ecx, [esp+8+arg_0]
mov	eax, edi
mov	[esi], eax
add	esp, 4
mov	[esi+4], ecx
mov	[ebx], esi
xor	eax, eax
pop	esi
retn
mov	ecx, [esp+4+arg_0]
xor	eax, eax
mov	[esi], eax
mov	[esi+4], ecx
mov	[ebx], esi
pop	esi
retn
align 10h
			
test	esi, esi
jnz	short loc_10040155
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	eax, [esi+8]
test	eax, eax
jz	short loc_1004016C
push	eax
call	PL_HashTableDestroy
add	esp, 4
mov	dword ptr [esi+8], 0
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_1004018C
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_10040185
push	1
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	dword ptr [esi+0Ch], 0
xor	eax, eax
retn
align 10h
			
push	esi
mov	esi, eax
test	esi, esi
jnz	short loc_100401A9
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
call	sub_10040140
mov	eax, [esi]
push	eax
call	SEC_DestroyCrl
push	esi
call	PORT_Free_Util
add	esp, 8
xor	eax, eax
pop	esi
retn
align 10h
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
xor	ebx, ebx
test	ebp, ebp
jnz	short loc_100401EF
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	eax, [ebp+0]
push	eax
call	CERT_CompleteCRLDecodeEntries
add	esp, 4
test	eax, eax
jz	short loc_1004020C
mov	dword ptr [ebp+18h], 1
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
cmp	[ebp+8], ebx
jz	short loc_1004021B
cmp	[ebp+0Ch], ebx
jz	short loc_1004021B
pop	ebp
xor	eax, eax
pop	ebx
retn
			
mov	ecx, [ebp+0]
mov	eax, [ecx+58h]
test	eax, eax
jz	short loc_10040230
cmp	dword ptr [eax], 0
jz	short loc_10040230
inc	ebx
add	eax, 4
jnz	short loc_10040225
			
push	esi
push	800h
shl	ebx, 4
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10040294
push	edi
push	14h
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10040268
push	1
push	esi
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
jmp	short loc_10040293
mov	[edi+0Ch], esi
test	ebx, ebx
jz	short loc_10040291
push	ebx
push	esi
mov	[edi], ebx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi+4], eax
test	eax, eax
jnz	short loc_10040291
push	1
push	esi
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
jmp	short loc_10040293
			
mov	eax, edi
			
pop	edi
mov	[ebp+0Ch], eax
test	eax, eax
jz	short loc_100402C1
push	eax
push	offset off_100BA5D8
push	offset PL_CompareValues
push	offset SECITEM_HashCompare
push	offset SECITEM_Hash
push	0
call	PL_NewHashTable
add	esp, 18h
mov	[ebp+8], eax
test	eax, eax
jnz	short loc_100402C8
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	edx, [ebp+0]
mov	esi, [edx+58h]
test	esi, esi
jz	short loc_100402EB
mov	eax, [esi]
test	eax, eax
jz	short loc_100402EB
push	eax
push	eax
mov	eax, [ebp+8]
push	eax
call	PL_HashTableAdd
add	esp, 0Ch
add	esi, 4
jnz	short loc_100402D2
			
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
			
test	eax, eax
jz	loc_100403C7
test	ecx, ecx
jz	loc_100403C7
test	edi, edi
jz	loc_100403C7
test	esi, esi
jz	loc_100403C7
cmp	dword ptr [eax], 0
jz	loc_100403C7
cmp	dword ptr [ecx], 0
jz	loc_100403C7
mov	dword ptr [esi], 0
mov	dword ptr [edi], 0
cmp	eax, ecx
jnz	short loc_10040351
mov	dword ptr [edi], 1
mov	dword ptr [esi], 0
xor	eax, eax
retn
mov	edx, [ecx+4]
cmp	edx, [eax+4]
jnz	short loc_1004034E
test	edx, edx
jnz	short loc_100403A7
mov	ecx, [ecx]
mov	eax, [eax]
mov	edx, [ecx+0B0h]
cmp	edx, [eax+0B0h]
jnz	short loc_100403A4
mov	edx, [ecx+0B4h]
cmp	edx, [eax+0B4h]
jnz	short loc_100403A4
mov	eax, [eax+0ACh]
mov	ecx, [ecx+0ACh]
push	eax
push	ecx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_1004039E
mov	dword ptr [edi], 1
retn
mov	dword ptr [esi], 1
			
xor	eax, eax
retn
cmp	edx, 1
jnz	short loc_100403C4
mov	edx, [eax]
mov	eax, [ecx]
mov	ecx, [eax+0ACh]
cmp	ecx, [edx+0ACh]
jnz	short loc_100403C4
mov	dword ptr [edi], 1
			
xor	eax, eax
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
align 10h
test	ebx, ebx
jnz	short loc_100403F5
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
retn
mov	eax, [ebx]
test	eax, eax
jz	short loc_100403F1
push	esi
push	edi
push	eax
call	NSSRWLock_Destroy_Util
xor	edi, edi
add	esp, 4
cmp	[ebx+10h], edi
jbe	short loc_10040448
lea	ecx, [ecx+0]
mov	eax, [ebx+14h]
test	eax, eax
jz	loc_100404A7
cmp	dword ptr [eax+edi*4], 0
jz	loc_100404A7
mov	esi, [eax+edi*4]
test	esi, esi
jz	short loc_1004049A
call	sub_10040140
mov	eax, [esi]
push	eax
call	SEC_DestroyCrl
push	esi
call	PORT_Free_Util
inc	edi
add	esp, 8
cmp	edi, [ebx+10h]
jb	short loc_10040410
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_10040458
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_10040468
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_1004047A
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_1004048C
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
push	ebx
call	PORT_Free_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
retn
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
			
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jnz	short loc_100404CB
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [esi]
test	eax, eax
jz	short loc_100404DC
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
push	ebx
mov	ebx, [esi+4]
call	sub_100403E0
pop	ebx
test	eax, eax
jnz	short loc_100404C6
push	esi
call	PORT_Free_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
mov	eax, [esp+4]
test	eax, eax
jz	short loc_1004052A
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_1004052A
push	eax
call	sub_100404B0
add	esp, 4
test	eax, eax
jz	short loc_1004052A
mov	eax, [esp+0Ch]
test	eax, eax
jz	short loc_1004052A
mov	dword ptr [eax], 0FFFFFFFFh
			
xor	eax, eax
retn
align 10h
push	ecx
mov	ecx, dword_100BAE30
mov	eax, dword_100BAE2C
push	esi
xor	esi, esi
mov	[esp+8+var_4], esi
cmp	ecx, esi
jnz	short loc_10040558
cmp	dword_100BAE28,	esi
jnz	short loc_1004058C
cmp	eax, esi
jnz	short loc_1004058C
xor	eax, eax
pop	esi
pop	ecx
retn
cmp	ecx, 1
jnz	short loc_1004058C
cmp	dword_100BAE28,	esi
jz	short loc_10040579
cmp	eax, esi
jz	short loc_10040579
cmp	dword_100BAE20,	esi
jz	short loc_10040579
cmp	dword_100BAE24,	esi
jnz	short loc_1004058C
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
pop	ecx
retn
			
push	edi
lea	ecx, [esp+0Ch+var_4]
push	ecx
push	offset loc_10040500
push	eax
call	PL_HashTableEnumerateEntries
mov	edx, dword_100BAE2C
push	edx
call	PL_HashTableDestroy
mov	eax, dword_100BAE28
mov	edi, ds:PR_DestroyLock
push	eax
mov	dword_100BAE2C,	esi
call	edi 
mov	edx, dword_100BAE24
lea	ecx, [esp+20h+var_4]
push	ecx
push	offset loc_1003FA50
push	edx
mov	dword_100BAE28,	esi
call	PL_HashTableEnumerateEntries
mov	eax, dword_100BAE24
push	eax
call	PL_HashTableDestroy
mov	ecx, dword_100BAE20
push	ecx
mov	dword_100BAE24,	esi
call	edi 
mov	eax, [esp+34h+var_4]
add	esp, 28h
pop	edi
mov	dword_100BAE20,	esi
mov	dword_100BAE30,	esi
pop	esi
pop	ecx
retn
align 10h
			
push	esi
push	edi
mov	esi, eax
test	ecx, ecx
jz	short loc_1004065D
mov	edx, [ecx+14h]
test	edx, edx
jz	short loc_1004065D
mov	edi, [ecx+10h]
cmp	esi, edi
jnb	short loc_1004065D
mov	eax, [edx+esi*4]
test	eax, eax
jz	short loc_1004065D
mov	edi, [edx+edi*4-4]
mov	[edx+esi*4], edi
mov	edx, [ecx+10h]
mov	esi, [ecx+14h]
mov	dword ptr [esi+edx*4-4], 0
dec	dword ptr [ecx+10h]
cmp	[ecx+18h], eax
jnz	short loc_10040651
mov	dword ptr [ecx+18h], 0
call	sub_10040190
test	eax, eax
jnz	short loc_1004065D
pop	edi
pop	esi
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
push	ebx
xor	ebx, ebx
cmp	esi, ebx
jnz	short loc_10040689
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	edi
mov	edi, [esi+10h]
xor	ecx, ecx
cmp	edi, ebx
jbe	short loc_100406AE
mov	eax, [esi+14h]
cmp	[eax], ebx
jz	short loc_100406B9
mov	edx, [eax]
cmp	[edx+10h], ebx
jz	short loc_100406B9
cmp	[edx+14h], ebx
jz	short loc_100406B9
inc	ecx
add	eax, 4
cmp	ecx, edi
jb	short loc_10040696
mov	eax, 0FFFEh
and	[esi+1Ch], ax
jmp	short loc_100406BE
			
or	word ptr [esi+1Ch], 1
cmp	[esi+1Ch], bx
jz	short loc_100406E6
cmp	[esi+18h], ebx
jz	short loc_100406CC
mov	[esi+18h], ebx
mov	ecx, [esi+14h]
push	offset PtFuncCompare 
push	4		
push	edi		
push	ecx		
call	ds:qsort
add	esp, 10h
pop	edi
xor	eax, eax
pop	ebx
retn
mov	edx, [esi+14h]
push	offset sub_1003FCB0 
push	4		
push	edi		
push	edx		
call	ds:qsort
mov	eax, [esi+10h]
add	esp, 10h
cmp	eax, ebx
jz	short loc_1004071C
mov	ecx, [esi+14h]
mov	ebx, [ecx+eax*4-4]
push	ebx
call	sub_100401D0
add	esp, 4
test	eax, eax
jz	short loc_1004071C
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
retn
			
pop	edi
mov	[esi+18h], ebx
xor	eax, eax
pop	ebx
retn
align 10h
			
sub	esp, 8
push	ebx
mov	ebx, eax
push	esi
test	ebx, ebx
jz	loc_10040845
cmp	[esp+10h+arg_0], 0
jz	loc_10040845
mov	esi, [esp+10h+arg_4]
test	esi, esi
jz	loc_10040845
push	ebp
xor	ebp, ebp
mov	dword ptr [esi], 0
push	edi
cmp	[ebx+10h], ebp
jbe	short loc_100407C3
mov	eax, [ebx+14h]
xor	ecx, ecx
mov	[esp+18h+var_8], ecx
mov	[esp+18h+var_4], ecx
cmp	eax, ecx
jz	loc_1004080C
mov	eax, [eax+ebp*4]
cmp	eax, ecx
jz	loc_1004080C
mov	ecx, [esp+18h+arg_0]
lea	esi, [esp+18h+var_4]
lea	edi, [esp+18h+var_8]
call	sub_10040300
test	eax, eax
jnz	short loc_100407FF
mov	esi, 1
cmp	[esp+18h+var_8], esi
jz	short loc_10040817
cmp	[esp+18h+var_4], esi
jnz	short loc_100407B8
mov	eax, ebp
mov	ecx, ebx
call	sub_10040610
test	eax, eax
jnz	short loc_1004082E
add	ebp, esi
cmp	ebp, [ebx+10h]
jb	short loc_10040765
mov	esi, [esp+18h+arg_4]
mov	eax, [ebx+10h]
mov	edx, [ebx+14h]
lea	ecx, ds:4[eax*4]
push	ecx
push	edx
call	PORT_Realloc_Util
add	esp, 8
test	eax, eax
jz	short loc_1004080C
inc	dword ptr [ebx+10h]
mov	ecx, [esp+18h+arg_0]
mov	[ebx+14h], eax
mov	ebx, [ebx+10h]
pop	edi
mov	[eax+ebx*4-4], ecx
pop	ebp
mov	dword ptr [esi], 1
pop	esi
xor	eax, eax
pop	ebx
add	esp, 8
retn
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
			
pop	edi
pop	ebp
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
push	0FFFFE099h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 8
retn
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 8
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 8
retn
align 10h
sub	esp, 18h
push	ebp
mov	ebp, [esp+1Ch+arg_0]
test	ebp, ebp
jnz	short loc_10040881
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 18h
retn
push	ebx
xor	eax, eax
push	esi
push	800h
mov	[esp+28h+var_10], eax
mov	[esp+28h+var_C], eax
mov	[esp+28h+var_8], eax
mov	[esp+28h+var_4], eax
call	PORT_NewArena_Util
mov	ecx, [ebp+8]
mov	[esp+28h+var_10], eax
mov	eax, [esp+28h+arg_C]
push	eax
push	ecx
lea	edx, [esp+30h+var_10]
push	edx
call	sub_100296E0
mov	ebx, eax
add	esp, 10h
cmp	ebx, 0FFFFFFFFh
jnz	short loc_100408CA
or	word ptr [ebp+1Ch], 2
jmp	loc_100409AC
mov	eax, 0FFFDh
and	[ebp+1Ch], ax
test	ebx, ebx
jnz	loc_100409AC
mov	eax, [esp+24h+var_8]
mov	[esp+24h+arg_0], eax
test	eax, eax
jz	loc_100409AC
push	edi
lea	esp, [esp+0]
mov	ecx, [esp+28h+arg_0]
mov	edi, [ecx+8]
mov	[esp+28h+var_18], 0
test	edi, edi
jz	loc_10040987
push	0
lea	ebx, [esp+2Ch+var_18]
call	sub_100400E0
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1004097D
mov	esi, [esp+28h+var_18]
lea	edx, [esp+28h+var_14]
push	edx
mov	[esp+2Ch+var_14], eax
push	esi
mov	eax, ebp
call	sub_10040730
add	esp, 8
cmp	[esp+28h+var_14], 1
mov	ebx, eax
jz	short loc_1004095A
test	esi, esi
jz	short loc_1004099B
call	sub_10040140
mov	eax, [esi]
push	eax
call	SEC_DestroyCrl
push	esi
call	PORT_Free_Util
add	esp, 8
xor	ebx, ebx
jmp	short loc_10040987
mov	ecx, [esp+28h+arg_4]
mov	eax, [esp+28h+arg_8]
mov	edx, ecx
or	edx, eax
jz	short loc_10040982
mov	edx, [esp+28h+arg_C]
push	edx
push	eax
push	ecx
mov	edi, ebp
call	sub_1003FB60
add	esp, 0Ch
mov	ebx, eax
jmp	short loc_10040982
or	word ptr [ebp+1Ch], 2
			
cmp	ebx, 0FFFFFFFFh
jz	short loc_100409AB
			
mov	eax, [esp+28h+arg_0]
mov	eax, [eax]
mov	[esp+28h+arg_0], eax
test	eax, eax
jnz	loc_100408F0
jmp	short loc_100409AB
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	ebx, 0FFFFFFFFh
			
pop	edi
			
cmp	[esp+24h+var_10], 0
jz	short loc_100409E5
mov	esi, [esp+24h+var_8]
test	esi, esi
jz	short loc_100409D6
jmp	short loc_100409C0
align 10h
			
mov	eax, [esi+8]
test	eax, eax
jz	short loc_100409D0
push	eax
call	SEC_DestroyCrl
add	esp, 4
mov	esi, [esi]
test	esi, esi
jnz	short loc_100409C0
mov	ecx, [esp+24h+var_10]
push	0
push	ecx
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
mov	eax, ebx
pop	ebx
pop	ebp
add	esp, 18h
retn
align 10h
sub	esp, 18h
push	ebx
push	ebp
push	esi
xor	esi, esi
push	edi
mov	edi, eax
xor	eax, eax
xor	ebx, ebx
xor	ebp, ebp
mov	[esp+28h+var_10], esi
mov	[esp+28h+var_18], esi
mov	[esp+28h+var_14], esi
cmp	edi, esi
jnz	short loc_10040A29
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 18h
retn
mov	edx, [edi+28h]
mov	ecx, [edi+20h]
mov	[esp+28h+var_8], edx
mov	edx, [edi+2Ch]
mov	[esp+28h+var_C], ecx
mov	[esp+28h+var_4], edx
cmp	ecx, 1
jz	short loc_10040A81
test	byte ptr [edi+1Ch], 2
jnz	short loc_10040A81
call	ds:PR_Now
mov	ebx, eax
mov	ebp, edx
xor	edx, edx
xor	eax, eax
cmp	[edi+10h], esi
jbe	short loc_10040A7B
mov	ecx, [edi+14h]
nop
cmp	[ecx], edx
jz	short loc_10040A6B
mov	esi, [ecx]
cmp	[esi+4], edx
jz	short loc_10040A76
inc	eax
add	ecx, 4
cmp	eax, [edi+10h]
jb	short loc_10040A60
jmp	short loc_10040A7B
mov	edx, 1
			
mov	ecx, [esp+28h+var_C]
mov	eax, edx
			
cmp	[esp+28h+var_8], 0
jnz	short loc_10040A8F
cmp	[esp+28h+var_4], 0
jz	short loc_10040B0C
cmp	ecx, 1
jz	short loc_10040B0C
test	byte ptr [edi+1Ch], 2
jnz	short loc_10040B0C
test	eax, eax
jnz	short loc_10040AD1
mov	esi, [edi+28h]
mov	edx, [edi+2Ch]
mov	ecx, ebx
sub	ecx, esi
mov	eax, ebp
sbb	eax, edx
cmp	eax, dword_100BA5EC
jg	short loc_10040B0C
jl	short loc_10040ABE
cmp	ecx, dword_100BA5E8
ja	short loc_10040B0C
cmp	ebp, edx
jl	short loc_10040B0C
jg	loc_10040BA2
cmp	ebx, esi
jb	short loc_10040B0C
jmp	loc_10040BA2
cmp	eax, 1
jnz	loc_10040BA2
mov	esi, [edi+28h]
mov	edx, [edi+2Ch]
mov	ecx, ebx
sub	ecx, esi
mov	eax, ebp
sbb	eax, edx
cmp	eax, dword_100BA5F4
jg	short loc_10040B0C
jl	short loc_10040AFA
cmp	ecx, dword_100BA5F0
ja	short loc_10040B0C
cmp	ebp, edx
jg	loc_10040BA2
jl	short loc_10040B0C
cmp	ebx, esi
jnb	loc_10040BA2
			
cmp	[esp+28h+arg_4], 0
jz	short loc_10040B1E
mov	eax, [edi]
push	eax
call	NSSRWLock_UnlockRead_Util
add	esp, 4
mov	ecx, [edi]
push	ecx
call	NSSRWLock_LockWrite_Util
mov	edx, [esp+2Ch+var_8]
add	esp, 4
cmp	edx, [edi+28h]
jnz	short loc_10040B7A
mov	eax, [esp+28h+var_4]
cmp	eax, [edi+2Ch]
jnz	short loc_10040B7A
mov	ecx, [esp+28h+arg_10]
mov	edx, [esp+28h+arg_C]
mov	eax, [esp+28h+arg_8]
push	ecx
push	edx
push	eax
push	edi
call	sub_10040860
mov	esi, 1
add	esp, 10h
mov	[esp+28h+var_10], eax
cmp	[edi+20h], esi
jnz	short loc_10040B68
mov	dword ptr [edi+20h], 0
mov	[esp+28h+var_18], esi
call	ds:PR_Now
mov	[edi+28h], eax
mov	[edi+2Ch], edx
jmp	short loc_10040B7F
			
mov	esi, 1
cmp	[esp+28h+arg_4], 0
jz	short loc_10040B91
mov	ecx, [edi]
push	ecx
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	edx, [edi]
push	edx
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
cmp	[esp+28h+var_18], esi
jz	short loc_10040BE4
			
mov	eax, ebx
or	eax, ebp
jnz	short loc_10040BB2
call	ds:PR_Now
mov	ebx, eax
mov	ebp, edx
mov	esi, [edi+30h]
mov	edx, [edi+34h]
mov	ecx, ebx
sub	ecx, esi
mov	eax, ebp
sbb	eax, edx
cmp	eax, dword_100BA5FC
jg	short loc_10040BE4
jl	short loc_10040BD2
cmp	ecx, dword_100BA5F8
ja	short loc_10040BE4
cmp	ebp, edx
jg	loc_10040CA3
jl	short loc_10040BE4
cmp	ebx, esi
jnb	loc_10040CA3
			
mov	ecx, [edi+30h]
mov	edx, [edi+34h]
xor	esi, esi
mov	[esp+28h+var_8], ecx
mov	[esp+28h+var_4], edx
mov	[esp+28h+var_14], esi
cmp	[edi+10h], esi
jbe	loc_10040CA3
lea	ebp, [esi+1]
mov	ebx, esi
mov	eax, [edi+14h]
mov	eax, [eax+esi*4]
test	eax, eax
jz	short loc_10040C63
cmp	dword ptr [eax+4], 0
jnz	short loc_10040C63
mov	eax, [eax]
call	sub_1003FA80
cmp	eax, ebp
jz	short loc_10040C63
cmp	ebx, ebp
jz	short loc_10040C44
cmp	[esp+28h+arg_4], 0
jz	short loc_10040C37
mov	ecx, [edi]
push	ecx
call	NSSRWLock_UnlockRead_Util
add	esp, 4
mov	edx, [edi]
push	edx
call	NSSRWLock_LockWrite_Util
add	esp, 4
mov	ebx, ebp
mov	eax, [esp+28h+var_8]
cmp	eax, [edi+30h]
jnz	short loc_10040C63
mov	ecx, [esp+28h+var_4]
cmp	ecx, [edi+34h]
jnz	short loc_10040C63
mov	eax, esi
mov	ecx, edi
call	sub_10040610
mov	[esp+28h+var_18], ebp
			
add	esi, ebp
cmp	esi, [edi+10h]
jb	short loc_10040C06
mov	[esp+28h+var_14], ebx
cmp	ebx, ebp
jnz	short loc_10040CA3
call	ds:PR_Now
cmp	[esp+28h+arg_4], 0
mov	[edi+30h], eax
mov	[edi+34h], edx
jz	short loc_10040C90
mov	edx, [edi]
push	edx
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	eax, [edi]
push	eax
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
mov	[esp+28h+var_14], 0
			
mov	esi, [esp+28h+arg_0]
test	esi, esi
jz	short loc_10040D12
cmp	dword ptr [edi+4], 0
jnz	short loc_10040D1C
push	2
push	esi
call	CERT_CheckCertUsage
add	esp, 8
test	eax, eax
jnz	short loc_10040D12
mov	ebx, [esp+28h+arg_4]
test	ebx, ebx
jz	short loc_10040CD3
mov	ecx, [edi]
push	ecx
call	NSSRWLock_UnlockRead_Util
add	esp, 4
mov	edx, [edi]
push	edx
call	NSSRWLock_LockWrite_Util
add	esp, 4
cmp	dword ptr [edi+4], 0
jnz	short loc_10040CF8
push	esi
mov	[esp+2Ch+var_18], 1
call	CERT_DupCertificate
add	esp, 4
mov	[edi+4], eax
test	ebx, ebx
jz	short loc_10040D07
mov	eax, [edi]
push	eax
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	ecx, [edi]
push	ecx
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
			
cmp	dword ptr [edi+4], 0
jz	loc_10040DD8
mov	edx, [esp+28h+arg_8]
or	edx, [esp+28h+arg_C]
jz	loc_10040DD8
xor	ebx, ebx
xor	ebp, ebp
cmp	[edi+10h], ebx
jbe	loc_10040DDC
mov	eax, [edi+14h]
mov	esi, [eax+ebx*4]
test	esi, esi
jz	loc_10040DCC
cmp	dword ptr [esi+10h], 1
jz	short loc_10040DA2
test	ebp, ebp
jnz	short loc_10040D70
cmp	[esp+28h+arg_4], ebp
jz	short loc_10040D60
mov	ecx, [edi]
push	ecx
call	NSSRWLock_UnlockRead_Util
add	esp, 4
mov	edx, [edi]
push	edx
call	NSSRWLock_LockWrite_Util
add	esp, 4
mov	ebp, 1
cmp	ebx, [edi+10h]
jnb	short loc_10040DA2
mov	eax, [edi+14h]
cmp	esi, [eax+ebx*4]
jnz	short loc_10040DA2
cmp	dword ptr [esi+10h], 1
jz	short loc_10040DA2
mov	ecx, [esp+28h+arg_10]
mov	edx, [esp+28h+arg_C]
mov	eax, [esp+28h+arg_8]
push	ecx
push	edx
push	eax
call	sub_1003FB60
add	esp, 0Ch
mov	[esp+28h+var_18], 1
			
test	ebp, ebp
jz	short loc_10040DCC
cmp	[esp+28h+var_18], 0
jnz	short loc_10040DCC
cmp	[esp+28h+arg_4], 0
jz	short loc_10040DBF
mov	ecx, [edi]
push	ecx
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	edx, [edi]
push	edx
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
xor	ebp, ebp
			
inc	ebx
cmp	ebx, [edi+10h]
jb	loc_10040D37
jmp	short loc_10040DDC
			
mov	ebp, [esp+28h+var_14]
			
cmp	[esp+28h+var_18], 0
jnz	short loc_10040DE9
cmp	dword ptr [edi+24h], 0
jz	short loc_10040E1C
test	ebp, ebp
jnz	short loc_10040E0E
cmp	[esp+28h+arg_4], ebp
jz	short loc_10040DFE
mov	eax, [edi]
push	eax
call	NSSRWLock_UnlockRead_Util
add	esp, 4
mov	ecx, [edi]
push	ecx
call	NSSRWLock_LockWrite_Util
add	esp, 4
mov	ebp, 1
mov	esi, edi
call	sub_10040670
mov	dword ptr [edi+24h], 0
test	ebp, ebp
jz	short loc_10040E3D
cmp	[esp+28h+arg_4], 0
jz	short loc_10040E32
mov	edx, [edi]
push	edx
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	eax, [edi]
push	eax
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
mov	eax, [esp+28h+var_10]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 18h
retn
align 10h
			
push	ecx
mov	eax, dword_100BAE28
push	edi
xor	edi, edi
mov	[esp+8+var_4], edi
test	eax, eax
jnz	short loc_10040E74
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
pop	ecx
retn
push	ebx
push	esi
push	eax
call	ds:PR_Lock
mov	ebx, [esp+14h+arg_4]
add	esp, 4
xor	esi, esi
test	ebx, ebx
jz	short loc_10040E93
mov	eax, dword_100BAE2C
test	eax, eax
jnz	short loc_10040EA5
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	esi, 0FFFFFFFFh
jmp	short loc_10040EB5
push	ebx
push	eax
call	PL_HashTableLookup
mov	edi, eax
add	esp, 8
mov	[esp+10h+var_4], edi
test	esi, esi
jz	short loc_10040EDA
mov	eax, dword_100BAE28
push	eax
call	ds:PR_Unlock
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 8
pop	esi
pop	ebx
or	eax, 0FFFFFFFFh
pop	edi
pop	ecx
retn
push	ebp
test	edi, edi
jnz	loc_10040F80
lea	edi, [esp+14h+var_4]
call	sub_1003FE80
mov	esi, [esp+14h+arg_18]
mov	ebp, [esp+14h+var_4]
mov	edi, eax
test	edi, edi
jnz	short loc_10040F41
test	ebp, ebp
jz	short loc_10040F3E
mov	ecx, [esp+14h+arg_8]
mov	edx, [esp+14h+arg_0]
push	ecx
push	edx
mov	ecx, ebx
mov	eax, ebp
call	sub_1003FED0
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10040F41
mov	eax, [esp+14h+arg_1C]
mov	dword ptr [eax], 1
mov	ecx, [esi]
mov	edx, [ecx]
push	edx
call	NSSRWLock_LockWrite_Util
add	esp, 4
mov	eax, ebp
call	sub_1003FF20
mov	edi, eax
test	edi, edi
jz	short loc_10040F41
or	edi, 0FFFFFFFFh
			
mov	eax, dword_100BAE28
push	eax
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	short loc_10040FB1
test	ebp, ebp
jz	short loc_10040F77
mov	ecx, [esp+14h+arg_1C]
cmp	dword ptr [ecx], 1
jnz	short loc_10040F6E
mov	edx, [esi]
mov	eax, [edx]
push	eax
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
push	ebp
call	sub_100404B0
add	esp, 4
			
pop	ebp
pop	esi
pop	ebx
or	eax, 0FFFFFFFFh
pop	edi
pop	ecx
retn
mov	ecx, dword_100BAE28
push	ecx
call	ds:PR_Unlock
add	esp, 4
cmp	[esp+14h+arg_8], 0
jnz	short loc_10040F9C
mov	eax, [edi+4]
jmp	short loc_10040FAB
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
mov	esi, [esp+14h+arg_18]
mov	[esi], eax
mov	edi, [esp+14h+arg_1C]
cmp	dword ptr [edi], 0
jnz	short loc_10040FC7
mov	edx, [esi]
mov	eax, [edx]
push	eax
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	esi, [esi]
test	esi, esi
jz	short loc_10040F77
mov	ecx, [esp+14h+arg_14]
mov	edx, [esp+14h+arg_10]
mov	eax, [esp+14h+arg_C]
push	ecx
xor	ecx, ecx
cmp	[edi], ecx
push	edx
mov	edx, [esp+1Ch+arg_0]
setz	cl
push	eax
mov	eax, esi
push	ecx
push	edx
call	sub_100409F0
add	esp, 14h
pop	ebp
pop	esi
pop	ebx
pop	edi
pop	ecx
retn
align 10h
			
sub	esp, 18h
xor	ecx, ecx
push	esi
mov	[esp+1Ch+var_8], ecx
mov	[esp+1Ch+var_14], ecx
mov	[esp+1Ch+var_18], ecx
mov	[esp+1Ch+var_4], ecx
mov	[esp+1Ch+var_10], ecx
cmp	[esp+1Ch+arg_0], ecx
jz	loc_10041188
mov	esi, [esp+1Ch+arg_4]
cmp	esi, ecx
jz	loc_10041188
mov	eax, [esp+1Ch+arg_18]
cmp	eax, ecx
jz	short loc_1004103A
mov	[eax], ecx
mov	eax, [esp+1Ch+arg_1C]
cmp	eax, ecx
jz	short loc_10041044
mov	[eax], ecx
push	ebx
mov	ebx, [esp+20h+arg_C]
push	edi
mov	edi, [esp+24h+arg_10]
mov	eax, ebx
or	eax, edi
jz	short loc_1004107B
push	ecx
push	edi
push	ebx
push	esi
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jz	short loc_1004107B
push	0FFFFE01Eh
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 18h
retn
			
mov	eax, [esp+24h+arg_14]
push	ebp
lea	ecx, [esp+28h+var_8]
push	ecx
mov	ecx, [esp+2Ch+arg_8]
lea	edx, [esp+2Ch+var_14]
push	edx
push	eax
push	edi
push	ebx
push	ecx
lea	edx, [esi+54h]
push	edx
push	esi
call	sub_10040E50
mov	ebp, eax
add	esp, 20h
test	ebp, ebp
jz	short loc_100410BD
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
pop	edi
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 18h
retn
mov	ecx, [esp+28h+arg_0]
mov	edx, [esp+28h+var_14]
lea	eax, [esp+28h+var_10]
push	eax
add	ecx, 84h
push	ecx
push	edx
call	sub_1003FC30
add	esp, 0Ch
cmp	eax, 4		
ja	short loc_10041150 
jmp	ds:off_100411A0[eax*4] 
			
mov	esi, [esp+28h+var_10] 
xor	eax, eax
cmp	[esi+10h], eax
jz	short loc_1004112B
cmp	[esi+14h], eax
jz	short loc_1004112B
mov	[esp+28h+var_10], eax
mov	[esp+28h+var_C], eax
lea	eax, [esi+0Ch]
push	eax
lea	ecx, [esp+2Ch+var_10]
push	ecx
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jnz	short loc_1004112B
cmp	edi, [esp+28h+var_C]
jl	short loc_10041121 
jg	short loc_1004112B
cmp	ebx, [esp+28h+var_10]
jnb	short loc_1004112B
			
			
mov	[esp+28h+var_18], 1 
jmp	short loc_10041150 
			
lea	edx, [esp+28h+var_4]
push	edx
push	esi
or	ebp, 0FFFFFFFFh
call	CERT_FindCRLEntryReasonExten
push	0FFFFE00Ch
call	PORT_SetError_Util
add	esp, 0Ch
jmp	short loc_10041150 
			
mov	[esp+28h+var_18], 2 
			
mov	eax, [esp+28h+var_8] 
mov	ecx, [esp+28h+var_14]
push	eax
push	ecx
call	sub_10040000
mov	eax, [esp+30h+arg_18]
add	esp, 8
test	eax, eax
jz	short loc_10041170
mov	edx, [esp+28h+var_18]
mov	[eax], edx
mov	eax, [esp+28h+arg_1C]
test	eax, eax
jz	short loc_1004117E
mov	ecx, [esp+28h+var_4]
mov	[eax], ecx
mov	eax, ebp
pop	ebp
pop	edi
pop	ebx
pop	esi
add	esp, 18h
retn
			
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 18h
retn
align 10h
dd offset loc_100410E6	
dd offset loc_10041150
dd offset loc_10041148
dd offset loc_10041148
align 10h
mov	eax, [esp+arg_14]
mov	ecx, [esp+arg_10]
mov	edx, [esp+arg_C]
push	0
push	0
push	eax
mov	eax, [esp+0Ch+arg_8]
push	ecx
mov	ecx, [esp+10h+arg_4]
push	edx
mov	edx, [esp+14h+arg_0]
push	eax
push	ecx
push	edx
call	sub_10041000
add	esp, 20h
retn
align 10h
public SEC_FindCrlByName
			
sub	esp, 8
mov	eax, [esp+8+arg_4]
push	edi
xor	edi, edi
mov	[esp+0Ch+var_8], edi
mov	[esp+0Ch+var_4], edi
test	eax, eax
jnz	short loc_1004121A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
add	esp, 8
retn
lea	ecx, [esp+0Ch+var_4]
push	ecx
lea	edx, [esp+10h+var_8]
push	edx
push	0
push	0
push	0
push	0
push	eax
push	0
call	sub_10040E50
add	esp, 20h
test	eax, eax
jnz	short loc_1004128D
push	esi
mov	esi, [esp+10h+var_8]
push	1
mov	eax, esi
call	sub_1003FF60
add	esp, 4
mov	edi, eax
test	esi, esi
jnz	short loc_10041267
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
pop	esi
mov	eax, edi
pop	edi
add	esp, 8
retn
cmp	[esp+10h+var_4], 1
jnz	short loc_10041281
mov	eax, [esi]
push	eax
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
pop	esi
mov	eax, edi
pop	edi
add	esp, 8
retn
mov	ecx, [esi]
push	ecx
call	NSSRWLock_UnlockRead_Util
add	esp, 4
pop	esi
mov	eax, edi
pop	edi
add	esp, 8
retn
align 10h
public CERT_CRLCacheRefreshIssuer
			
sub	esp, 8
mov	edx, [esp+8+arg_4]
lea	eax, [esp+8+var_8]
push	eax
lea	ecx, [esp+0Ch+var_4]
push	ecx
push	0
push	0
push	0
push	0
push	edx
push	0
mov	[esp+28h+var_4], 0
mov	[esp+28h+var_8], 0
call	sub_10040E50
add	esp, 20h
test	eax, eax
jnz	short loc_1004134A
push	ebx
mov	ebx, [esp+0Ch+var_8]
cmp	ebx, 1
setnz	al
push	esi
mov	esi, [esp+10h+var_4]
push	edi
mov	edi, eax
test	edi, edi
jz	short loc_100412F9
mov	ecx, [esi]
push	ecx
call	NSSRWLock_UnlockRead_Util
add	esp, 4
mov	edx, [esi]
push	edx
call	NSSRWLock_LockWrite_Util
add	esp, 4
mov	dword ptr [esi+20h], 1
test	edi, edi
jz	short loc_1004131A
mov	eax, [esi]
push	eax
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	ecx, [esi]
push	ecx
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
cmp	ebx, 1
jnz	short loc_1004133C
mov	edx, [esi]
push	edx
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 8
retn
mov	eax, [esi]
push	eax
call	NSSRWLock_UnlockRead_Util
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 8
retn
align 10h
public CERT_CacheCRL
			
sub	esp, 14h
push	ebp
xor	ebp, ebp
mov	[esp+18h+var_C], ebp
mov	[esp+18h+var_14], ebp
mov	[esp+18h+var_8], ebp
mov	[esp+18h+var_10], ebp
mov	[esp+18h+var_4], ebp
cmp	[esp+18h+arg_0], ebp
jz	loc_10041490
mov	eax, [esp+18h+arg_4]
cmp	eax, ebp
jz	loc_10041490
push	edi
push	3
push	1
push	eax
push	ebp
call	CERT_DecodeDERCrlWithFlags
mov	edi, eax
add	esp, 10h
cmp	edi, ebp
jnz	short loc_1004139E
pop	edi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 14h
retn
push	esi
lea	eax, [esp+20h+var_14]
push	eax
lea	ecx, [esp+24h+var_C]
push	ecx
push	ebp
push	ebp
push	ebp
push	ebp
lea	edx, [edi+2Ch]
push	edx
push	ebp
call	sub_10040E50
mov	esi, eax
add	esp, 20h
cmp	esi, ebp
jnz	loc_1004146D
xor	eax, eax
cmp	[esp+20h+var_14], 1
push	ebx
setnz	al
push	1
lea	ebx, [esp+28h+var_8]
mov	[esp+28h+arg_0], eax
call	sub_100400E0
mov	ebx, [esp+28h+var_C]
mov	esi, eax
add	esp, 4
cmp	esi, ebp
jnz	short loc_10041455
mov	ebp, [esp+24h+var_8]
test	ebp, ebp
jz	short loc_10041453
cmp	[esp+24h+arg_0], 0
jz	short loc_10041405
mov	ecx, [ebx]
push	ecx
call	NSSRWLock_UnlockRead_Util
add	esp, 4
mov	edx, [ebx]
push	edx
call	NSSRWLock_LockWrite_Util
lea	eax, [esp+28h+var_10]
push	eax
push	ebp
mov	eax, ebx
call	sub_10040730
add	esp, 0Ch
cmp	[esp+24h+var_10], 1
mov	esi, eax
jz	short loc_10041436
call	PORT_GetError_Util
mov	[esp+24h+var_4], eax
mov	eax, ebp
call	sub_10040190
cmp	[esp+24h+arg_0], 0
jz	short loc_10041448
mov	ecx, [ebx]
push	ecx
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	edx, [ebx]
push	edx
call	NSSRWLock_UnlockWrite_Util
add	esp, 4
xor	ebp, ebp
mov	eax, [esp+24h+var_14]
push	eax
push	ebx
call	sub_10040000
add	esp, 8
pop	ebx
cmp	[esp+20h+var_10], ebp
jnz	short loc_1004146D
or	esi, 0FFFFFFFFh
			
push	edi
call	SEC_DestroyCrl
mov	eax, [esp+24h+var_4]
add	esp, 4
cmp	eax, ebp
jz	short loc_10041487
push	eax
call	PORT_SetError_Util
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
pop	ebp
add	esp, 14h
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 14h
retn
align 10h
public CERT_UncacheCRL
			
sub	esp, 18h
push	ebx
xor	ebx, ebx
mov	[esp+1Ch+var_14], ebx
mov	[esp+1Ch+var_18], ebx
mov	[esp+1Ch+var_C], ebx
cmp	[esp+1Ch+arg_0], ebx
jz	loc_10041676
mov	eax, [esp+1Ch+arg_4]
cmp	eax, ebx
jz	loc_10041676
push	edi
push	3
push	1
push	eax
push	ebx
call	CERT_DecodeDERCrlWithFlags
mov	edi, eax
add	esp, 10h
mov	[esp+20h+var_10], edi
cmp	edi, ebx
jnz	short loc_100414FA
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 18h
retn
push	esi
lea	eax, [esp+24h+var_18]
push	eax
lea	ecx, [esp+28h+var_14]
push	ecx
push	ebx
push	ebx
push	ebx
push	ebx
lea	edx, [edi+2Ch]
push	edx
push	ebx
call	sub_10040E50
mov	esi, eax
add	esp, 20h
cmp	esi, ebx
jnz	loc_1004163C
xor	eax, eax
cmp	[esp+24h+var_18], 1
push	ebp
setnz	al
mov	[esp+28h+arg_0], ebx
push	1
lea	ebx, [esp+2Ch+arg_0]
mov	ebp, eax
mov	[esp+2Ch+var_8], ebp
call	sub_100400E0
mov	ebx, [esp+2Ch+var_14]
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	loc_1004160F
cmp	[esp+28h+arg_0], 0
jz	loc_1004160F
test	ebp, ebp
jz	short loc_1004156B
mov	ecx, [ebx]
push	ecx
call	NSSRWLock_UnlockRead_Util
add	esp, 4
mov	edx, [ebx]
push	edx
call	NSSRWLock_LockWrite_Util
xor	ebp, ebp
add	esp, 4
cmp	[ebx+10h], ebp
jbe	short loc_100415DE
lea	ecx, [ecx+0]
mov	eax, [ebx+14h]
mov	ecx, [eax+ebp*4]
mov	eax, [esp+28h+arg_0]
lea	esi, [esp+28h+var_4]
lea	edi, [esp+28h+var_14]
mov	[esp+28h+var_14], 0
call	sub_10040300
mov	esi, eax
test	esi, esi
jnz	short loc_100415B9
mov	edi, 1
cmp	[esp+28h+var_14], edi
jz	short loc_100415C8
add	ebp, edi
cmp	ebp, [ebx+10h]
jb	short loc_10041580
jmp	short loc_100415DE
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_100415DE
mov	eax, ebp
mov	ecx, ebx
call	sub_10040610
mov	esi, eax
test	esi, esi
jnz	short loc_100415DE
mov	[ebx+24h], edi
mov	[esp+28h+var_C], edi
			
cmp	[esp+28h+var_8], 0
jz	short loc_100415F0
mov	ecx, [ebx]
push	ecx
call	NSSRWLock_LockRead_Util
add	esp, 4
mov	edx, [ebx]
push	edx
call	NSSRWLock_UnlockWrite_Util
mov	eax, [esp+2Ch+arg_0]
add	esp, 4
call	sub_10040190
mov	edi, [esp+28h+var_10]
test	eax, eax
jz	short loc_1004160F
or	esi, 0FFFFFFFFh
			
pop	ebp
test	ebx, ebx
jnz	short loc_10041620
push	0FFFFE001h
call	PORT_SetError_Util
jmp	short loc_10041639
cmp	[esp+24h+var_18], 1
jnz	short loc_10041631
mov	eax, [ebx]
push	eax
call	NSSRWLock_UnlockWrite_Util
jmp	short loc_10041639
mov	ecx, [ebx]
push	ecx
call	NSSRWLock_UnlockRead_Util
			
add	esp, 4
push	edi
call	SEC_DestroyCrl
add	esp, 4
test	eax, eax
jz	short loc_10041655
or	esi, 0FFFFFFFFh
mov	eax, esi
pop	esi
pop	edi
pop	ebx
add	esp, 18h
retn
test	esi, esi
jnz	short loc_1004166D
cmp	[esp+24h+var_C], 1
jz	short loc_1004166D
push	0FFFFE089h
call	PORT_SetError_Util
add	esp, 4
			
mov	eax, esi
pop	esi
pop	edi
pop	ebx
add	esp, 18h
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 18h
retn
align 10h
push	ebp
xor	ebp, ebp
push	esi
test	edi, edi
jnz	short loc_100416B6
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
push	1
push	ebx
call	SECITEM_ZfreeItem_Util
add	esp, 8
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	30h
mov	[edi], ebp
call	PORT_ZAlloc_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_100416A5
mov	[edi], esi
mov	[esi+4], ebx
call	ds:PR_Now
mov	[esi+18h], eax
mov	eax, [esp+8+arg_4]
push	eax
mov	[esi+1Ch], edx
call	SECITEM_DupItem_Util
add	esp, 4
mov	[esi], eax
test	eax, eax
jnz	short loc_100416F7
call	sub_1003FA00
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	ecx, [esi+4]
mov	edx, [esp+8+arg_0]
push	ecx
push	edx
call	CERT_CacheCRL
add	esp, 8
test	eax, eax
jnz	short loc_10041724
mov	eax, [esi+18h]
mov	ecx, [esi+1Ch]
mov	[esi+10h], eax
mov	dword ptr [esi+8], 1
mov	[esi+14h], ecx
pop	esi
mov	eax, ebp
pop	ebp
retn
call	ds:PR_GetError
cmp	eax, 0FFFFE009h
jz	short loc_1004174A
cmp	eax, 0FFFFE099h
jz	short loc_10041741
mov	dword ptr [esi+28h], 1
jmp	short loc_10041751
mov	dword ptr [esi+24h], 1
jmp	short loc_10041751
mov	dword ptr [esi+20h], 1
			
mov	edx, [esi+4]
push	1
push	edx
or	ebp, 0FFFFFFFFh
call	SECITEM_ZfreeItem_Util
add	esp, 8
mov	dword ptr [esi+4], 0
pop	esi
mov	eax, ebp
pop	ebp
retn
align 10h
push	ecx
push	ebx
mov	ebx, [esp+8+arg_4]
push	esi
mov	[esp+0Ch+var_4], 0
test	ebx, ebx
jz	loc_1004190D
mov	esi, [esp+0Ch+arg_8]
test	esi, esi
jz	loc_1004190D
mov	eax, dword_100BAE20
test	eax, eax
jz	short loc_100417DD
push	eax
call	ds:PR_Lock
add	esp, 4
push	ebp
lea	eax, [esp+10h+arg_4]
push	eax
push	esi
push	offset dword_100BAE20
call	sub_10040070
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_100417EF
push	offset dword_100BAE20
call	sub_100400B0
push	1
push	ebx
call	SECITEM_ZfreeItem_Util
add	esp, 0Ch
pop	ebp
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
push	1
push	ebx
call	SECITEM_ZfreeItem_Util
add	esp, 8
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
push	edi
push	esi
mov	esi, [esp+18h+arg_0]
push	esi
lea	edi, [esp+1Ch+var_4]
call	sub_10041690
add	esp, 8
test	eax, eax
jnz	loc_10041892
mov	edi, [esp+14h+arg_4]
test	edi, edi
jnz	short loc_1004183B
mov	esi, [esp+14h+var_4]
mov	ecx, [esi]
mov	edx, dword_100BAE24
push	esi
push	ecx
push	edx
call	PL_HashTableAdd
add	esp, 0Ch
test	eax, eax
jnz	loc_100418F8
call	sub_1003FA00
jmp	loc_100418F5
cmp	dword ptr [edi+8], 0
jz	short loc_10041850
mov	eax, [edi+4]
push	eax
push	esi
call	CERT_UncacheCRL
add	esp, 8
mov	ebp, eax
mov	ecx, [edi]
mov	edx, dword_100BAE24
push	ecx
push	edx
call	PL_HashTableRemove
add	esp, 8
test	eax, eax
jnz	short loc_1004187A
mov	eax, [esp+14h+var_4]
mov	ecx, dword_100BAE24
push	eax
mov	eax, [eax]
push	eax
or	ebp, 0FFFFFFFFh
push	ecx
jmp	short loc_100418E9
mov	esi, edi
call	sub_1003FA00
mov	eax, [esp+14h+var_4]
mov	ecx, dword_100BAE24
push	eax
mov	eax, [eax]
push	eax
push	ecx
jmp	short loc_100418E9
mov	esi, [esp+14h+arg_4]
test	esi, esi
jz	short loc_100418DB
cmp	dword ptr [esi+8], 0
jz	short loc_100418BB
mov	eax, [esp+14h+var_4]
mov	ecx, [eax+18h]
mov	[esi+18h], ecx
mov	edx, [eax+1Ch]
mov	[esi+1Ch], edx
mov	esi, eax
call	sub_1003FA00
mov	ebp, eax
jmp	short loc_100418F8
mov	eax, [esi]
mov	ecx, dword_100BAE24
push	eax
push	ecx
call	PL_HashTableRemove
add	esp, 8
test	eax, eax
jnz	short loc_100418D6
or	ebp, 0FFFFFFFFh
jmp	short loc_100418DB
call	sub_1003FA00
			
mov	eax, [esp+14h+var_4]
mov	edx, [eax]
push	eax
mov	eax, dword_100BAE24
push	edx
push	eax
			
call	PL_HashTableAdd
add	esp, 0Ch
test	eax, eax
jnz	short loc_100418F8
or	ebp, 0FFFFFFFFh
			
push	offset dword_100BAE20
call	sub_100400B0
add	esp, 4
pop	edi
mov	eax, ebp
pop	ebp
pop	esi
pop	ebx
pop	ecx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
align 10h
sub	esp, 10h
xor	eax, eax
cmp	[esp+10h+arg_10], 1
mov	[esp+10h+var_10], eax
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_4], eax
mov	[esp+10h+var_C], eax
jz	short loc_1004195E
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
add	esp, 10h
retn
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	esi
mov	esi, [esp+1Ch+arg_8]
push	edi
lea	eax, [esp+20h+var_10]
push	eax
push	1
lea	ebx, [esi+2Ch]
push	ebx
push	ebp
mov	eax, 2
call	sub_1003F570
mov	edi, [esp+30h+var_10]
add	esp, 10h
test	edi, edi
jz	loc_10041A49
mov	ecx, [edi+0ACh]
mov	edx, [esi+0ACh]
push	ecx
push	edx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_100419FE
push	ebp
mov	[esp+24h+var_8], esi
call	PK11_ReferenceSlot
mov	[esi+0B0h], eax
mov	eax, [edi+0B4h]
mov	[esi+0B4h], eax
mov	eax, [esp+24h+arg_4]
add	esp, 4
cmp	dword ptr [edi+0A8h], 0
jz	short loc_100419DF
test	eax, eax
jnz	short loc_100419E7
mov	eax, [edi+0A8h]
test	eax, eax
jz	loc_10041AA6
mov	ecx, [esi]
push	eax
push	ecx
call	PORT_ArenaStrdup_Util
add	esp, 8
mov	[esi+0A8h], eax
jmp	loc_10041AA6
lea	edx, [edi+4]
push	edx
lea	eax, [esi+4]
push	eax
call	sub_1003BEC0
add	esp, 8
test	eax, eax
jnz	short loc_10041A24
push	0FFFFE02Ah
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10041AA6
cmp	dword ptr [edi+0A8h], 0
mov	edi, [esp+20h+arg_4]
jz	short loc_10041A3F
test	edi, edi
jnz	short loc_10041A3F
mov	ecx, [esp+20h+var_10]
mov	edi, [ecx+0A8h]
			
mov	[esp+20h+var_4], 1
jmp	short loc_10041A4D
mov	edi, [esp+20h+arg_4]
push	ebx
push	0
call	CERT_CRLCacheRefreshIssuer
mov	edx, [esp+28h+arg_C]
push	1
push	edi
push	ebx
push	edx
push	ebp
call	sub_10029970
add	esp, 1Ch
mov	[esp+20h+var_C], eax
test	eax, eax
jz	short loc_10041AA2
push	ebp
mov	[esp+24h+var_8], esi
call	PK11_ReferenceSlot
mov	[esi+0B0h], eax
mov	eax, [esp+24h+var_C]
add	esp, 4
mov	[esi+0B4h], eax
test	edi, edi
jz	short loc_10041AA2
mov	ecx, [esi]
push	edi
push	ecx
call	PORT_ArenaStrdup_Util
add	esp, 8
mov	[esi+0A8h], eax
			
mov	edi, [esp+20h+var_10]
			
test	edi, edi
jz	short loc_10041ACA
cmp	[esp+20h+var_4], 0
jz	short loc_10041AC1
cmp	[esp+20h+var_C], 0
jz	short loc_10041AC1
push	edi
call	SEC_DeletePermCRL
add	esp, 4
			
push	edi
call	SEC_DestroyCrl
add	esp, 4
mov	eax, [esp+20h+var_8]
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
align 10h
public SEC_FindCrlByDERCert
sub	esp, 0Ch
push	esi
push	edi
push	800h
xor	edi, edi
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10041B00
pop	edi
pop	esi
add	esp, 0Ch
retn
mov	ecx, [esp+14h+arg_4]
lea	eax, [esp+14h+var_C]
push	eax
push	ecx
push	esi
call	CERT_KeyFromDERCrl
add	esp, 0Ch
test	eax, eax
jnz	short loc_10041B30
mov	edx, [esp+14h+arg_8]
mov	ecx, [esp+14h+arg_0]
push	edx
lea	eax, [esp+18h+var_C]
push	eax
push	ecx
call	SEC_FindCrlByName
add	esp, 0Ch
mov	edi, eax
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_GetGeneralNameTypeFromString
push	esi
push	edi
mov	edi, [esp+8+arg_0]
xor	esi, esi
jmp	short loc_10041B60
align 10h
			
mov	eax, off_100BA604[esi*8]
push	eax
push	edi
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jz	short loc_10041B80
inc	esi
cmp	esi, 0Eh
jl	short loc_10041B60
pop	edi
xor	eax, eax
pop	esi
retn
mov	eax, dword_100BA600[esi*8]
pop	edi
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
push	30h
test	eax, eax
jz	short loc_10041BA5
push	eax
call	PORT_ArenaZAlloc_Util
add	esp, 8
jmp	short loc_10041BAD
call	PORT_ZAlloc_Util
add	esp, 4
test	eax, eax
jz	short locret_10041BBF
mov	ecx, [esp+arg_4]
mov	[eax], ecx
lea	ecx, [eax+28h]
mov	[ecx], ecx
mov	[eax+2Ch], ecx
retn
push	ebx
mov	ebx, [esp+4+arg_0]
push	ebp
mov	ebp, [esp+8+arg_4]
push	esi
push	edi
mov	edi, [esp+10h+arg_8]
mov	eax, [edi]
push	ebx
mov	[ebp+0], eax
call	PORT_ArenaMark_Util
mov	[esp+14h+arg_8], eax
mov	eax, [edi]
add	esp, 4
dec	eax
jz	short loc_10041C1B
sub	eax, 4
jz	short loc_10041BF4
add	edi, 4
add	ebp, 4
jmp	short loc_10041C38
lea	ecx, [edi+1Ch]
push	ecx
lea	edx, [ebp+1Ch]
push	edx
push	ebx
call	SECITEM_CopyItem_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10041C49
add	edi, 4
push	edi
add	ebp, 4
push	ebp
push	ebx
call	CERT_CopyName
jmp	short loc_10041C40
lea	eax, [edi+4]
push	eax
lea	ecx, [ebp+4]
push	ecx
push	ebx
call	SECITEM_CopyItem_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jnz	short loc_10041C49
add	edi, 10h
add	ebp, 10h
push	edi
push	ebp
push	ebx
call	SECITEM_CopyItem_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10041C5E
			
mov	edx, [esp+10h+arg_8]
push	edx
push	ebx
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
mov	eax, [esp+10h+arg_8]
push	eax
push	ebx
call	PORT_ArenaUnmark_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_10041CCD
push	edi
mov	edi, [esi+10h]
push	edi
call	ds:PR_Lock
dec	dword ptr [esi+8]
add	esp, 4
cmp	dword ptr [esi+8], 0
jg	short loc_10041CC2
mov	esi, [esi]
test	esi, esi
jz	short loc_10041CC2
push	0
push	esi
call	PORT_FreeArena_Util
push	edi
call	ds:PR_Unlock
push	edi
call	ds:PR_DestroyLock
add	esp, 10h
pop	edi
pop	esi
retn
			
push	edi
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
retn
align 10h
public CERT_GetNextGeneralName
			
mov	eax, [esp+arg_0]
mov	eax, [eax+28h]
sub	eax, 28h
retn
align 10h
public CERT_GetPrevGeneralName
mov	eax, [esp+arg_0]
mov	eax, [eax+2Ch]
sub	eax, 28h
retn
align 10h
public CERT_GetNextNameConstraint
			
mov	eax, [esp+arg_0]
mov	eax, [eax+54h]
sub	eax, 54h
retn
align 10h
public CERT_GetPrevNameConstraint
mov	eax, [esp+arg_0]
mov	eax, [eax+58h]
sub	eax, 54h
retn
align 10h
public CERT_EncodeGeneralName
			
			
push	ebx
mov	ebx, [esp+4+arg_8]
test	ebx, ebx
jnz	short loc_10041D2A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
retn
push	esi
push	edi
mov	edi, [esp+0Ch+arg_4]
test	edi, edi
jnz	short loc_10041D49
push	0Ch
push	ebx
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_10041DD4	
mov	esi, [esp+0Ch+arg_0]
cmp	dword ptr [esi], 5
jnz	short loc_10041D78
cmp	dword ptr [esi+20h], 0
jnz	short loc_10041D78
push	offset dword_100A7B50
lea	eax, [esi+4]
push	eax
lea	ecx, [esi+1Ch]
push	ecx
push	ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_10041DD4 
cmp	dword ptr [esi+20h], 0
jz	short loc_10041DD4 
			
mov	eax, [esi]
dec	eax
cmp	eax, 8		
ja	short loc_10041DD4 
jmp	ds:off_10041DDC[eax*4] 
			
mov	eax, offset dword_100A7798 
jmp	short loc_10041DC4
			
mov	eax, offset dword_100A7748 
jmp	short loc_10041DC4
			
mov	eax, offset dword_100A7758 
jmp	short loc_10041DC4
			
mov	eax, offset dword_100A77A8 
jmp	short loc_10041DC4
			
mov	eax, offset dword_100A76F8 
jmp	short loc_10041DC4
			
mov	eax, offset dword_100A77B8 
jmp	short loc_10041DC4
			
mov	eax, offset dword_100A7788 
jmp	short loc_10041DC4
			
mov	eax, offset dword_100A7768 
jmp	short loc_10041DC4
			
mov	eax, offset dword_100A7778 
			
push	eax
push	esi
push	edi
push	ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10041DD6
			
xor	eax, eax	
pop	edi
pop	esi
pop	ebx
retn
align 4
dd offset loc_10041D8E	
dd offset loc_10041D95
dd offset loc_10041DB8
dd offset loc_10041DBF
dd offset loc_10041DB1
dd offset loc_10041D87
dd offset loc_10041D9C
dd offset loc_10041DAA
			
push	ecx
mov	ecx, [esp+4+arg_4]
push	ebx
push	ebp
push	esi
push	edi
xor	edi, edi
mov	[esp+14h+var_4], edi
test	ecx, ecx
jz	short loc_10041E1F
mov	[esp+14h+var_4], 1
mov	edi, [esp+14h+var_4]
mov	eax, [ecx+28h]
lea	edx, [ecx+28h]
cmp	eax, edx
jz	short loc_10041E3F
lea	esp, [esp+0]
lea	ecx, [eax-28h]
mov	eax, [ecx+28h]
inc	edi
cmp	eax, edx
jnz	short loc_10041E30
mov	[esp+14h+var_4], edi
mov	esi, [ecx+28h]
mov	ebx, [esp+14h+arg_0]
lea	eax, ds:4[edi*4]
push	eax
push	ebx
sub	esi, 28h
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esp+14h+arg_4], eax
test	eax, eax
jz	loc_10041F57
xor	ebp, ebp
test	edi, edi
jle	loc_10041F4A
test	ebx, ebx
jnz	short loc_10041E86
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_10041F2C
push	0Ch
push	ebx
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_10041F28	
cmp	dword ptr [esi], 5
jnz	short loc_10041EC6
cmp	dword ptr [esi+20h], 0
jnz	short loc_10041EC6
push	offset dword_100A7B50
lea	ecx, [esi+4]
push	ecx
lea	edx, [esi+1Ch]
push	edx
push	ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_10041F28 
cmp	dword ptr [esi+20h], 0
jz	short loc_10041F28 
			
mov	eax, [esi]
dec	eax
cmp	eax, 8		
ja	short loc_10041F28 
jmp	ds:off_10041F60[eax*4] 
			
mov	eax, offset dword_100A7798 
jmp	short loc_10041F12
			
mov	eax, offset dword_100A7748 
jmp	short loc_10041F12
			
mov	eax, offset dword_100A7758 
jmp	short loc_10041F12
			
mov	eax, offset dword_100A77A8 
jmp	short loc_10041F12
			
mov	eax, offset dword_100A76F8 
jmp	short loc_10041F12
			
mov	eax, offset dword_100A77B8 
jmp	short loc_10041F12
			
mov	eax, offset dword_100A7788 
jmp	short loc_10041F12
			
mov	eax, offset dword_100A7768 
jmp	short loc_10041F12
			
mov	eax, offset dword_100A7778 
			
push	eax
push	esi
push	edi
push	ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_10041F28 
mov	edi, [esp+14h+var_4]
jmp	short loc_10041F2E
			
mov	edi, [esp+14h+var_4] 
xor	eax, eax
mov	ecx, [esp+14h+arg_4]
mov	[ecx+ebp*4], eax
test	eax, eax
jz	short loc_10041F57
mov	esi, [esi+28h]
inc	ebp
sub	esi, 28h
cmp	ebp, edi
jl	loc_10041E70
mov	eax, ecx
pop	edi
pop	esi
mov	dword ptr [eax+ebp*4], 0
pop	ebp
pop	ebx
pop	ecx
retn
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
dd offset loc_10041EDC	
dd offset loc_10041EE3
dd offset loc_10041F06
dd offset loc_10041F0D
dd offset loc_10041EFF
dd offset loc_10041ED5
dd offset loc_10041EEA
dd offset loc_10041EF8
align 10h
public CERT_DecodeGeneralName
			
			
push	ebx
mov	ebx, [esp+4+arg_0]
test	ebx, ebx
jnz	short loc_10041FAA
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
retn
mov	eax, [esp+4+arg_4]
push	ebp
push	eax
push	ebx
call	SECITEM_ArenaDupItem_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	short loc_10041FC2
pop	ebp
pop	ebx
retn
mov	ecx, [ebp+4]
push	esi
mov	esi, [esp+0Ch+arg_8]
push	edi
movzx	edi, byte ptr [ecx]
and	edi, 0Fh
inc	edi
test	esi, esi
jnz	short loc_10041FED
push	edi
push	ebx
call	sub_10041B90
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10041FF7
			
pop	edi		
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
lea	eax, [esi+28h]
mov	[esi], edi
mov	[eax], eax
mov	[esi+2Ch], eax
lea	eax, [edi-1]	
cmp	eax, 8
ja	short loc_10041FE6 
jmp	ds:off_10042080[eax*4] 
			
mov	eax, offset dword_100A7798 
jmp	short loc_10042043
			
mov	eax, offset dword_100A7748 
jmp	short loc_10042043
			
mov	eax, offset dword_100A7758 
jmp	short loc_10042043
			
mov	eax, offset dword_100A77A8 
jmp	short loc_10042043
			
mov	eax, offset dword_100A76F8 
jmp	short loc_10042043
			
mov	eax, offset dword_100A77B8 
jmp	short loc_10042043
			
mov	eax, offset dword_100A7788 
jmp	short loc_10042043
			
mov	eax, offset dword_100A7768 
jmp	short loc_10042043
			
mov	eax, offset dword_100A7778 
			
push	ebp
push	eax
push	esi
push	ebx
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10041FE6 
cmp	edi, 5
jnz	short loc_10042076
lea	edx, [esi+1Ch]
push	edx
push	offset dword_100A7B50
lea	eax, [esi+4]
push	eax
push	ebx
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_10041FE6	
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
dd offset loc_1004200D	
dd offset loc_10042014
dd offset loc_10042037
dd offset loc_1004203E
dd offset loc_10042030
dd offset loc_10042006
dd offset loc_1004201B
dd offset loc_10042029
align 10h
			
sub	esp, 8
mov	eax, [esp+8+arg_4]
xor	ecx, ecx
push	esi
mov	[esp+0Ch+var_8], ecx
mov	[esp+0Ch+var_4], ecx
cmp	eax, ecx
jz	loc_100421F5
mov	esi, [esp+0Ch+arg_0]
cmp	esi, ecx
jz	loc_100421F5
mov	eax, [eax]
push	ebx
push	ebp
push	edi
cmp	eax, ecx
jnz	short loc_100420F2
			
pop	edi		
pop	ebp
pop	ebx
xor	eax, eax
pop	esi
add	esp, 8
retn
align 10h
mov	esi, ebp
push	eax
push	esi
call	SECITEM_ArenaDupItem_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	short loc_100420DF 
mov	eax, [ebp+4]
movzx	ebx, byte ptr [eax]
push	30h
and	ebx, 0Fh
push	esi
inc	ebx
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_100420DF 
lea	esi, [edi+28h]
lea	eax, [ebx-1]
mov	[edi], ebx
mov	[esi], esi
mov	[edi+2Ch], esi
cmp	eax, 8		
ja	short loc_100420DF 
jmp	ds:off_1004220C[eax*4] 
			
mov	eax, offset dword_100A7798 
jmp	short loc_10042173
			
mov	eax, offset dword_100A7748 
jmp	short loc_10042173
			
mov	eax, offset dword_100A7758 
jmp	short loc_10042173
			
mov	eax, offset dword_100A77A8 
jmp	short loc_10042173
			
mov	eax, offset dword_100A76F8 
jmp	short loc_10042173
			
mov	eax, offset dword_100A77B8 
jmp	short loc_10042173
			
mov	eax, offset dword_100A7788 
jmp	short loc_10042173
			
mov	eax, offset dword_100A7768 
jmp	short loc_10042173
			
mov	eax, offset dword_100A7778 
			
push	ebp
mov	ebp, [esp+1Ch+arg_0]
push	eax
push	edi
push	ebp
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_100420DF	
cmp	ebx, 5
jnz	short loc_100421AE
lea	ecx, [edi+1Ch]
push	ecx
push	offset dword_100A7B50
lea	edx, [edi+4]
push	edx
push	ebp
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	loc_100420DF	
mov	ecx, [esp+18h+var_8]
test	ecx, ecx
jnz	short loc_100421C0
mov	eax, esi
mov	[esp+18h+var_8], eax
mov	ecx, esi
jmp	short loc_100421C4
mov	eax, [esp+18h+var_4]
mov	[edi+2Ch], eax
mov	[esi], ecx
mov	[eax], esi
mov	eax, [esp+18h+arg_4]
add	eax, 4
mov	[ecx+4], esi
mov	[esp+18h+arg_4], eax
mov	eax, [eax]
mov	[esp+18h+var_4], esi
test	eax, eax
jnz	loc_100420F0
mov	eax, [edi+28h]
pop	edi
pop	ebp
pop	ebx
sub	eax, 28h
pop	esi
add	esp, 8
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
add	esp, 8
retn
align 4
dd offset loc_1004213D	
dd offset loc_10042144
dd offset loc_10042167
dd offset loc_1004216E
dd offset loc_10042160
dd offset loc_10042136
dd offset loc_1004214B
dd offset loc_10042159
			
push	ecx
mov	ecx, [esp+4+arg_0]
push	ebx
push	ebp
push	esi
push	edi
xor	edi, edi
mov	[esp+14h+arg_0], edi
test	ecx, ecx
jz	short loc_1004224F
mov	[esp+14h+arg_0], 1
mov	edi, [esp+14h+arg_0]
mov	eax, [ecx+54h]
lea	edx, [ecx+54h]
cmp	eax, edx
jz	short loc_1004226F
lea	esp, [esp+0]
lea	ecx, [eax-54h]
mov	eax, [ecx+54h]
inc	edi
cmp	eax, edx
jnz	short loc_10042260
mov	[esp+14h+arg_0], edi
mov	esi, [ecx+54h]
mov	ebx, [esp+14h+arg_4]
lea	eax, ds:4[edi*4]
push	eax
push	ebx
sub	esi, 54h
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esp+14h+var_4], eax
test	eax, eax
jz	short loc_100422EC
xor	ebp, ebp
test	edi, edi
jle	short loc_100422DE
push	0Ch
push	ebx
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_100422C4
push	ebx
lea	ecx, [esi+30h]
push	ecx
push	esi
call	CERT_EncodeGeneralName
push	offset dword_100A7618
push	esi
push	edi
push	ebx
call	SEC_ASN1EncodeItem_Util
add	esp, 1Ch
mov	edx, [esp+14h+var_4]
mov	[edx+ebp*4], eax
test	eax, eax
jz	short loc_100422EC
mov	esi, [esi+54h]
inc	ebp
sub	esi, 54h
cmp	ebp, [esp+14h+arg_0]
jl	short loc_10042298
mov	eax, edx
mov	ecx, [esp+14h+arg_8]
pop	edi
pop	esi
pop	ebp
mov	[ecx], eax
xor	eax, eax
pop	ebx
pop	ecx
retn
			
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi]
push	edi
mov	edi, [esp+8+arg_4]
test	eax, eax
jz	short loc_10042325
push	1
lea	ecx, [esi+8]
push	ecx
push	edi
push	eax
call	sub_10042230
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jz	short loc_10042359
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10042341
push	0
lea	edx, [esi+0Ch]
push	edx
push	edi
push	eax
call	sub_10042230
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jz	short loc_10042359
mov	eax, [esp+8+arg_8]
push	offset dword_100A7678
push	esi
push	eax
push	edi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_1004235F
			
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
sub	esp, 8
mov	ecx, [esp+8+arg_4]
push	ebx
push	ebp
push	esi
xor	ebx, ebx
xor	eax, eax
xor	esi, esi
push	edi
mov	[esp+18h+var_4], eax
mov	[esp+18h+var_8], ebx
cmp	[ecx], ebx
jz	loc_10042438
mov	ebp, [esp+18h+arg_0]
mov	eax, ecx
jmp	short loc_100423A0
align 10h
			
mov	eax, [eax]
test	ebp, ebp
jz	loc_10042446
push	eax
push	ebp
call	SECITEM_ArenaDupItem_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_10042453
push	5Ch
push	ebp
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_10042453
push	edi
push	offset dword_100A7618
push	esi
push	ebp
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10042453
push	esi
lea	eax, [esi+30h]
push	eax
push	ebp
call	CERT_DecodeGeneralName
add	esp, 0Ch
cmp	eax, esi
jnz	short loc_10042453
lea	eax, [esi+28h]
mov	[eax], eax
mov	[esi+2Ch], eax
test	ebx, ebx
jnz	short loc_1004240B
mov	ebx, esi
mov	[esp+18h+var_4], esi
lea	eax, [ebx+54h]
mov	[esi+58h], eax
mov	edx, [eax]
lea	ecx, [esi+54h]
mov	[ecx], edx
mov	[eax], ecx
mov	eax, [esp+18h+var_8]
mov	ecx, [esp+18h+arg_4]
inc	eax
cmp	dword ptr [ecx+eax*4], 0
mov	[esp+18h+var_8], eax
lea	eax, [ecx+eax*4]
jnz	loc_100423A0
mov	eax, [esp+18h+var_4]
add	esi, 54h
pop	edi
mov	[eax+58h], esi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
align 10h
			
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_1004247A
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	edi
retn
mov	eax, [esp+4+arg_4]
push	ebx
push	esi
push	eax
push	edi
call	SECITEM_ArenaDupItem_Util
push	10h
push	edi
mov	ebx, eax
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_100424EB
push	ebx
push	offset dword_100A7678
push	esi
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_100424EB
mov	eax, [esi+8]
test	eax, eax
jz	short loc_100424CC
cmp	dword ptr [eax], 0
jz	short loc_100424CC
push	1
push	eax
push	edi
call	sub_10042370
add	esp, 0Ch
mov	[esi], eax
test	eax, eax
jz	short loc_100424EB
			
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_100424F1
cmp	dword ptr [eax], 0
jz	short loc_100424F1
push	0
push	eax
push	edi
call	sub_10042370
add	esp, 0Ch
mov	[esi+4], eax
test	eax, eax
jnz	short loc_100424F1
			
pop	esi
pop	ebx
xor	eax, eax
pop	edi
retn
			
mov	eax, esi
pop	esi
pop	ebx
pop	edi
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_8]
push	ebp
push	esi
mov	esi, [esp+0Ch+arg_4]
mov	ebp, esi
mov	[esp+0Ch+arg_4], ebx
test	esi, esi
jnz	short loc_10042529
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	edi
lea	ebx, [ebx+0]
			
mov	eax, [esp+10h+arg_0]
push	ebx
push	esi
push	eax
call	sub_10041BC0
add	esp, 0Ch
test	eax, eax
jnz	short loc_10042599
mov	ebx, [ebx+28h]
sub	ebx, 28h
cmp	ebx, [esp+10h+arg_4]
jz	short loc_100425A1
mov	eax, [esi+28h]
add	esi, 28h
lea	edi, [ebp+28h]
cmp	eax, edi
jnz	short loc_10042594
mov	eax, [esp+10h+arg_0]
push	30h
test	eax, eax
jz	short loc_10042571
push	eax
call	PORT_ArenaZAlloc_Util
add	esp, 8
jmp	short loc_10042579
call	PORT_ZAlloc_Util
add	esp, 4
test	eax, eax
jz	short loc_10042599
lea	ecx, [eax+28h]
mov	[eax+2Ch], esi
mov	dword ptr [eax], 0
mov	[ecx], edi
mov	[ebp+2Ch], ecx
mov	[esi], ecx
mov	esi, eax
jmp	short loc_10042530
lea	esi, [eax-28h]
jmp	short loc_10042530
			
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
			
push	ebx
push	esi
mov	esi, [esp+8+arg_4]
push	edi
mov	edi, [esp+0Ch+arg_0]
test	esi, esi
jnz	short loc_100425D8
push	5Ch
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004262A
lea	eax, [esi+28h]
mov	[eax], eax
mov	[esi+2Ch], eax
mov	ebx, [esp+0Ch+arg_8]
push	ebx
push	esi
push	edi
call	sub_10042500
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004262A
lea	eax, [ebx+30h]
push	eax
lea	ecx, [esi+30h]
push	ecx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004262A
lea	edx, [ebx+3Ch]
push	edx
lea	eax, [esi+3Ch]
push	eax
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004262A
add	ebx, 48h
push	ebx
lea	ecx, [esi+48h]
push	ecx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10042630
			
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
lea	eax, [esi+54h]
mov	[esi+58h], eax
pop	edi
mov	[eax], eax
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
			
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_1004264D
mov	eax, [esp+arg_4]
retn
push	edi
mov	edi, [esp+4+arg_4]
test	edi, edi
jz	short loc_1004266E
push	esi
mov	esi, [eax+2Ch]
lea	edx, [edi+28h]
mov	edi, [edi+2Ch]
mov	[esi], edx
lea	ecx, [eax+28h]
mov	[edi], ecx
mov	[ecx+4], edi
mov	[edx+4], esi
pop	esi
pop	edi
retn
			
mov	edx, [esp+arg_4]
mov	eax, [esp+arg_0]
lea	ecx, [edx+54h]
mov	[edx+58h], ecx
mov	[ecx], ecx
test	eax, eax
jnz	short loc_10042687
mov	eax, edx
retn
push	esi
mov	esi, [eax+58h]
mov	[esi], ecx
lea	edx, [eax+54h]
mov	[ecx], edx
mov	[edx+4], ecx
mov	[ecx+4], esi
pop	esi
retn
align 10h
			
push	ebp
mov	ebp, [esp+4+arg_8]
push	esi
mov	esi, [esp+8+arg_0]
mov	dword ptr [ebp+0], 0
test	esi, esi
jnz	short loc_100426BA
pop	esi
xor	eax, eax
pop	ebp
retn
push	ebx
mov	ebx, [esp+0Ch+arg_C]
push	edi
push	ebx
call	PORT_ArenaMark_Util
add	esp, 4
mov	[esp+10h+arg_8], eax
mov	edi, esi
nop
mov	eax, [esp+10h+arg_4]
cmp	[edi], eax
jnz	loc_1004277A
push	5Ch
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_1004279D
push	edi
lea	eax, [esi+28h]
push	esi
push	ebx
mov	[eax], eax
mov	[esi+2Ch], eax
call	sub_10042500
add	esp, 0Ch
test	eax, eax
jnz	loc_1004279D
lea	ecx, [edi+30h]
push	ecx
lea	edx, [esi+30h]
push	edx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004279D
lea	eax, [edi+3Ch]
push	eax
lea	ecx, [esi+3Ch]
push	ecx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004279D
lea	edx, [edi+48h]
push	edx
lea	eax, [esi+48h]
push	eax
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004279D
lea	eax, [esi+54h]
mov	[eax], eax
mov	[esi+58h], eax
mov	ecx, [ebp+0]
mov	[esi+58h], eax
mov	[eax], eax
test	ecx, ecx
jnz	short loc_10042763
mov	ecx, esi
jmp	short loc_10042773
mov	esi, [ecx+58h]
lea	edx, [ecx+54h]
mov	[esi], eax
mov	[eax], edx
mov	[edx+4], eax
mov	[eax+4], esi
mov	esi, [esp+10h+arg_0]
mov	[ebp+0], ecx
mov	edi, [edi+54h]
sub	edi, 54h
cmp	edi, esi
jnz	loc_100426D0
mov	edx, [esp+10h+arg_8]
push	edx
push	ebx
call	PORT_ArenaUnmark_Util
add	esp, 8
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
retn
			
mov	ecx, [esp+10h+arg_8]
push	ecx
push	ebx
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
pop	ebx
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
align 10h
			
mov	ecx, [esp+arg_0]
test	ecx, ecx
jz	short loc_100427DE 
mov	edx, [esp+arg_4]
mov	eax, ecx
mov	edi, edi
cmp	[eax], edx
jz	short loc_100427E1
mov	eax, [eax+28h]
sub	eax, 28h
cmp	eax, ecx
jnz	short loc_100427D0
			
xor	eax, eax	
retn
lea	ecx, [edx-1]	
cmp	ecx, 8
ja	short loc_100427DE 
movzx	ecx, ds:byte_10042810[ecx]
jmp	ds:off_10042808[ecx*4] 
			
			
add	eax, 4		
retn
			
cmp	[esp+arg_8], 0	
jz	short loc_100427F7 
add	eax, 1Ch
retn
align 4
dd offset loc_100427FB	
db	1,     0,     0,     0 
db	0
align 10h
mov	ecx, [esp+arg_0]
xor	eax, eax
mov	edx, ecx
test	ecx, ecx
jz	short locret_1004283B
lea	esp, [esp+0]
mov	ecx, [ecx+28h]
sub	ecx, 28h
inc	eax
cmp	ecx, edx
jnz	short loc_10042830
retn
align 10h
mov	eax, [esp+arg_0]
mov	ecx, [eax+8]
sub	esp, 8
push	ebp
xor	ebp, ebp
cmp	dword ptr [eax], 5
jz	short loc_10042867
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 8
retn
push	ebx
push	esi
push	edi
test	ecx, ecx
jz	loc_1004297D
mov	eax, [ecx]
test	eax, eax
jz	loc_1004295F
mov	eax, [eax]
add	ecx, 4
mov	[esp+18h+var_4], ecx
test	eax, eax
jz	loc_10042953
lea	ecx, [ecx+0]
mov	esi, [eax]
test	esi, esi
jz	loc_10042953
add	eax, 4
push	esi
mov	[esp+1Ch+var_8], eax
call	CERT_GetAVATag
add	esp, 4
cmp	eax, 1Fh
jz	short loc_100428B8
cmp	eax, 63h
jnz	loc_10042947
add	esi, 0Ch
push	esi
call	CERT_DecodeAVAValue
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	loc_10042987
mov	eax, [esp+18h+arg_4]
or	edi, 0FFFFFFFFh
push	30h
test	eax, eax
jz	short loc_100428E6
push	eax
call	PORT_ArenaZAlloc_Util
add	esp, 8
jmp	short loc_100428EE
call	PORT_ZAlloc_Util
add	esp, 4
mov	esi, eax
test	esi, esi
jz	short loc_10042916
mov	ecx, [esp+18h+arg_4]
lea	eax, [esi+28h]
mov	[eax], eax
mov	[esi+2Ch], eax
push	ebx
lea	eax, [esi+4]
push	eax
push	ecx
mov	dword ptr [esi], 2
call	SECITEM_CopyItem_Util
add	esp, 0Ch
mov	edi, eax
push	1
push	ebx
call	SECITEM_FreeItem_Util
add	esp, 8
test	edi, edi
jnz	short loc_10042987
test	ebp, ebp
jnz	short loc_1004292D
mov	ebp, esi
jmp	short loc_10042947
test	esi, esi
jz	short loc_10042947
mov	edx, [ebp+2Ch]
lea	ecx, [esi+28h]
mov	esi, [esi+2Ch]
lea	eax, [ebp+28h]
mov	[edx], ecx
mov	[esi], eax
mov	[eax+4], esi
mov	[ecx+4], edx
			
mov	eax, [esp+18h+var_8]
test	eax, eax
jnz	loc_10042890
			
mov	ecx, [esp+18h+var_4]
test	ecx, ecx
jnz	loc_10042872
test	ebp, ebp
jz	short loc_1004297D
mov	edx, [esp+18h+arg_0]
mov	esi, [ebp+2Ch]
lea	eax, [edx+28h]
mov	edx, [edx+2Ch]
lea	ecx, [ebp+28h]
mov	[edx], ecx
mov	[esi], eax
mov	[eax+4], esi
mov	[ecx+4], edx
			
pop	edi
pop	esi
pop	ebx
xor	eax, eax
pop	ebp
add	esp, 8
retn
			
pop	edi
pop	esi
pop	ebx
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 8
retn
align 10h
public CERT_GetConstrainedCertificateNames
			
sub	esp, 14h
push	ebx
mov	ebx, [esp+18h+arg_4]
test	ebx, ebx
jnz	short loc_100429C0
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	ebx
add	esp, 14h
retn
push	esi
push	30h
push	ebx
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100429E0
lea	eax, [esi+28h]
mov	dword ptr [esi], 5
mov	[eax], eax
mov	[esi+2Ch], eax
push	ebp
push	edi
mov	[esp+24h+arg_4], esi
test	esi, esi
jz	loc_10042B01
mov	edi, [esp+24h+arg_0]
lea	eax, [edi+0CCh]
push	eax
mov	[esp+28h+var_10], eax
lea	eax, [esi+4]
push	eax
push	ebx
call	CERT_CopyName
add	esp, 0Ch
test	eax, eax
jnz	loc_10042B01
lea	ecx, [edi+54h]
push	ecx
lea	edx, [esi+1Ch]
push	edx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_10042B01
push	ebx
push	esi
call	sub_10042840
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	loc_10042B01
push	ebx
push	edi
call	sub_1003C730
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10042A71
push	edi
call	sub_1003C790
push	edi
push	esi
mov	[esp+30h+var_14], eax
call	sub_10042640
add	esp, 0Ch
mov	[esp+24h+arg_4], eax
cmp	[esp+24h+var_14], ebp
jnz	loc_10042AF5
cmp	[esp+24h+arg_8], 0
jz	loc_10042AF5
mov	eax, [esp+24h+var_10]
push	eax
call	CERT_GetCommonName
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10042AF5
push	3
push	ebx
call	sub_10041B90
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10042AE8
mov	eax, esi
mov	[esp+24h+var_C], 0
mov	[esp+24h+var_8], esi
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10042AB1
sub	eax, edx
lea	ecx, [esp+24h+var_C]
push	ecx
lea	edx, [edi+4]
push	edx
push	ebx
mov	[esp+30h+var_4], eax
call	SECITEM_CopyItem_Util
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jnz	short loc_10042AE8
mov	eax, [esp+24h+arg_4]
push	edi
push	eax
call	sub_10042640
add	esp, 8
mov	[esp+24h+arg_4], eax
			
push	esi
call	PORT_Free_Util
add	esp, 4
test	ebp, ebp
jnz	short loc_10042B01
			
mov	eax, [esp+24h+arg_4]
pop	edi
pop	ebp
pop	esi
pop	ebx
add	esp, 14h
retn
			
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 14h
retn
align 10h
mov	ecx, [ebx+8]
test	ecx, ecx
jnz	short loc_10042B1B
			
or	eax, 0FFFFFFFFh
retn
mov	edx, [ebx+4]
cmp	byte ptr [edx],	2Eh
jz	short loc_10042B3B
cmp	[edi+8], ecx
jnz	short loc_10042B17
mov	eax, [edi+4]
push	ecx
push	edx
push	eax
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_10042B17
retn
mov	eax, [edi+8]
cmp	eax, ecx
jb	short loc_10042B17
push	esi
sub	eax, ecx
push	ecx
mov	ecx, [edi+4]
mov	esi, eax
push	edx
add	ecx, esi
push	ecx
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_10042B7C
test	esi, esi
jz	short loc_10042B81
mov	edx, [edi+4]
cmp	byte ptr [edx+esi-1], 2Eh
mov	ecx, [ebx+4]
setz	al
xor	edx, edx
cmp	byte ptr [ecx],	2Eh
setz	dl
add	eax, edx
cmp	eax, 1
jz	short loc_10042B81
or	eax, 0FFFFFFFFh
pop	esi
retn
			
xor	eax, eax
pop	esi
retn
align 10h
mov	ecx, [edi+8]
test	ecx, ecx
jnz	short loc_10042B9A
xor	eax, eax
retn
mov	eax, [ebx+8]
cmp	eax, ecx
jnb	short loc_10042BA5
or	eax, 0FFFFFFFFh
retn
sub	eax, ecx
push	esi
push	ecx
mov	ecx, [ebx+4]
mov	esi, eax
mov	eax, [edi+4]
push	eax
add	ecx, esi
push	ecx
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_10042BE2
test	esi, esi
jz	short loc_10042BE7
mov	edx, [ebx+4]
cmp	byte ptr [edx+esi-1], 2Eh
mov	ecx, [edi+4]
setz	al
xor	edx, edx
cmp	byte ptr [ecx],	2Eh
setz	dl
add	eax, edx
cmp	eax, 1
jz	short loc_10042BE7
or	eax, 0FFFFFFFFh
pop	esi
retn
			
xor	eax, eax
pop	esi
retn
align 10h
mov	ecx, [edi+8]
test	ecx, ecx
jnz	short loc_10042BFA
xor	eax, eax
retn
push	esi
mov	esi, [ebx+8]
cmp	esi, ecx
jb	short loc_10042C74
cmp	ecx, 1
jnz	short loc_10042C0F
mov	eax, [edi+4]
cmp	byte ptr [eax],	2Eh
jz	short loc_10042C5A
lea	eax, [ecx-1]
test	eax, eax
js	short loc_10042C29
mov	edx, [edi+4]
lea	esp, [esp+0]
cmp	byte ptr [edx+eax], 40h
jz	short loc_10042C5E
dec	eax
jns	short loc_10042C20
mov	edx, [edi+4]
mov	eax, ecx
push	eax
sub	esi, eax
mov	eax, [ebx+4]
push	edx
add	eax, esi
push	eax
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_10042C74
mov	ecx, [edi+4]
cmp	byte ptr [ecx],	2Eh
jz	short loc_10042C5A
test	esi, esi
jle	short loc_10042C74
mov	edx, [ebx+4]
cmp	byte ptr [esi+edx-1], 40h
jnz	short loc_10042C74
			
xor	eax, eax
pop	esi
retn
cmp	esi, ecx
jnz	short loc_10042C74
push	ecx
mov	ecx, [ebx+4]
push	edx
push	ecx
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jmp	short loc_10042C58
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
mov	eax, [ecx+8]
push	esi
cmp	eax, 4
jnz	short loc_10042CB6
cmp	dword ptr [edx+8], 8
jnz	short loc_10042CB6
mov	esi, [ecx+4]
mov	ecx, [edx+4]
xor	eax, eax
jmp	short loc_10042CA0
align 10h
			
mov	dl, [ecx+eax]
xor	dl, [esi+eax]
test	[ecx+eax+4], dl
jnz	short loc_10042CE6
inc	eax
cmp	eax, 4
jl	short loc_10042CA0
xor	eax, eax
pop	esi
retn
			
cmp	eax, 10h
jnz	short loc_10042CE6
cmp	dword ptr [edx+8], 20h
jnz	short loc_10042CE6
mov	esi, [ecx+4]
mov	ecx, [edx+4]
xor	eax, eax
lea	esp, [esp+0]
mov	dl, [ecx+eax]
xor	dl, [esi+eax]
test	[ecx+eax+10h], dl
jnz	short loc_10042CE6
inc	eax
cmp	eax, 10h
jl	short loc_10042CD0
xor	eax, eax
pop	esi
retn
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
push	ebp
push	esi
push	edi
mov	edi, [eax+8]
xor	esi, esi
cmp	edi, 2
jbe	short loc_10042D1E
mov	ebp, [eax+4]
lea	edx, [esi+2]
lea	ecx, [ebp+2]
cmp	byte ptr [ecx-2], 3Ah
jnz	short loc_10042D17
cmp	byte ptr [ecx-1], 2Fh
jnz	short loc_10042D17
cmp	byte ptr [ecx],	2Fh
jz	short loc_10042D25
			
inc	edx
inc	esi
inc	ecx
cmp	edx, edi
jb	short loc_10042D06
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
add	esi, 3
sub	edi, esi
add	ebp, esi
xor	ecx, ecx
mov	[eax+4], ebp
mov	[eax+8], edi
cmp	edi, ecx
jbe	short loc_10042D50
mov	edx, ebp
lea	ebx, [ebx+0]
cmp	byte ptr [edx+ecx], 2Fh
jz	short loc_10042D4D
inc	ecx
cmp	ecx, edi
jb	short loc_10042D40
jmp	short loc_10042D50
mov	[eax+8], ecx
			
mov	ecx, [eax+8]
dec	ecx
js	short loc_10042D66
mov	edx, ebp
cmp	byte ptr [edx+ecx], 3Ah
jz	short loc_10042D63
dec	ecx
jns	short loc_10042D58
jmp	short loc_10042D66
mov	[eax+8], ecx
			
mov	edx, [eax+8]
xor	ecx, ecx
test	edx, edx
jz	short loc_10042D95
mov	esi, ebp
cmp	byte ptr [esi+ecx], 40h
jz	short loc_10042D8A
inc	ecx
cmp	ecx, edx
jb	short loc_10042D71
mov	eax, [eax+8]
neg	eax
sbb	eax, eax
pop	edi
neg	eax
pop	esi
dec	eax
pop	ebp
retn
inc	ecx
add	esi, ecx
sub	edx, ecx
mov	[eax+4], esi
mov	[eax+8], edx
mov	eax, [eax+8]
neg	eax
sbb	eax, eax
pop	edi
neg	eax
pop	esi
dec	eax
pop	ebp
retn
align 10h
			
sub	esp, 18h
push	ebx
mov	ebx, [esp+1Ch+arg_4]
test	ebx, ebx
jnz	short loc_10042DD1
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 18h
retn
push	ebp
push	esi
mov	ebp, ebx
push	edi
mov	[esp+28h+var_18], ebp
jmp	short loc_10042DE4
align 10h
mov	ebp, [esp+28h+var_18]
mov	esi, [esp+28h+arg_0]
mov	ecx, [esi]
lea	eax, [ecx-1]	
cmp	eax, 8
ja	loc_10042F5D	
jmp	ds:off_10042F68[eax*4] 
			
lea	edi, [ebp+4]	
lea	ebx, [esi+4]
call	sub_10042B90
jmp	loc_10042F1A
			
lea	edi, [ebp+4]	
lea	ebx, [esi+4]
call	sub_10042BF0
jmp	loc_10042F1A
			
mov	eax, [esi+4]	
mov	ecx, [esi+8]
mov	edx, [esi+0Ch]
mov	[esp+28h+var_C], eax
lea	eax, [esp+28h+var_C]
mov	[esp+28h+var_8], ecx
mov	[esp+28h+var_4], edx
call	sub_10042CF0
test	eax, eax
jnz	loc_10042F5D	
lea	ebx, [ebp+4]
lea	edi, [esp+28h+var_C]
call	sub_10042B10
jmp	loc_10042F1A
			
mov	edx, [ebp+8]	
mov	esi, [esi+8]
xor	eax, eax
test	edx, edx
jz	loc_10042F16
jmp	short loc_10042E6A
mov	ebp, [esp+28h+var_18]
mov	ecx, [edx]
test	ecx, ecx
jz	loc_10042F16
test	esi, esi
jz	loc_10042F16
mov	ebp, [esi]
test	ebp, ebp
jz	short loc_10042ED9
mov	ebx, [ecx]
add	edx, 4
add	esi, 4
mov	[esp+28h+var_14], edx
mov	[esp+28h+var_10], esi
test	ebx, ebx
jz	short loc_10042ED5
mov	edi, [ebx]
test	edi, edi
jz	short loc_10042EC9
mov	esi, [ebp+0]
add	ebx, 4
test	esi, esi
jz	short loc_10042EC1
mov	ecx, [esi]
test	ecx, ecx
jz	short loc_10042EC1
push	ecx
push	edi
add	esi, 4
call	sub_10045750
add	esp, 8
test	eax, eax
jz	short loc_10042EC5
test	esi, esi
jnz	short loc_10042EA6
			
test	eax, eax
jnz	short loc_10042ED9
test	ebx, ebx
jnz	short loc_10042E96
test	eax, eax
jnz	short loc_10042ED9
mov	edx, [esp+28h+var_14]
mov	esi, [esp+28h+var_10]
test	edx, edx
jnz	short loc_10042E66
			
mov	ebp, [esp+28h+var_18]
jmp	short loc_10042F16
			
lea	edx, [ebp+4]	
lea	ecx, [esi+4]
call	sub_10042C80
jmp	short loc_10042F1A
			
mov	edi, [esp+28h+arg_8] 
test	edi, edi
jnz	short loc_10042F0D
cmp	ecx, [ebp+0]
jnz	short loc_10042F0D
lea	eax, [ebp+10h]
push	eax
add	esi, 10h
push	esi
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jnz	short loc_10042F3C
			
or	eax, 0FFFFFFFFh
jmp	short loc_10042F22
			
mov	eax, [esp+28h+arg_8] 
			
neg	eax
sbb	eax, eax
			
test	eax, eax
jz	short loc_10042F38
mov	ebx, [esp+28h+arg_4]
mov	ecx, [ebp+54h]
sub	ecx, 54h
mov	[esp+28h+var_18], ecx
cmp	ecx, ebx
jnz	loc_10042DE0
test	eax, eax
jnz	short loc_10042F4A
mov	edi, [esp+28h+arg_8]
neg	edi
sbb	edi, edi
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 18h
retn
mov	eax, [esp+28h+arg_8]
neg	eax
pop	edi
sbb	eax, eax
pop	esi
neg	eax
pop	ebp
dec	eax
pop	ebx
add	esp, 18h
retn
			
pop	edi		
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 18h
retn
dd offset loc_10042E0D	
dd offset loc_10042DFD
dd offset loc_10042F12
dd offset loc_10042E54
dd offset loc_10042F12
dd offset loc_10042E1D
dd offset loc_10042EDF
dd offset loc_10042F12
align 10h
push	ebp
mov	ebp, esp
and	esp, 0FFFFFFF8h
sub	esp, 110h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+110h+var_4], eax
mov	eax, [ebp+arg_0]
push	esi
push	edi
mov	ecx, 18h
mov	esi, offset dword_100A7868
lea	edi, [esp+118h+var_F8]
rep movsd
mov	ecx, 22h
mov	esi, offset dword_100A77D8
lea	edi, [esp+118h+var_98]
rep movsd
lea	ecx, [esp+118h+var_98]
mov	[esp+118h+var_100], ecx
lea	ecx, [esp+118h+var_104]
movsb
push	ecx
add	eax, 54h
xor	esi, esi
lea	edx, [esp+11Ch+var_F8]
push	eax
mov	[esp+120h+var_104], esi
mov	[esp+120h+var_FC], 88h
mov	[esp+120h+var_110], esi
mov	[esp+120h+var_10C], edx
mov	[esp+120h+var_108], 5Fh
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	short loc_10043038
lea	edx, [esp+118h+var_110]
push	edx
push	ebx
push	esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
pop	edi
pop	esi
mov	ecx, [esp+110h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
push	0FFFFE023h
call	PORT_SetError_Util
mov	ecx, [esp+11Ch+var_4]
add	esp, 4
pop	edi
pop	esi
xor	ecx, esp
or	eax, 0FFFFFFFFh
call	@__security_check_cookie@4 
mov	esp, ebp
pop	ebp
retn
align 10h
public CERT_FindNameConstraintsExten
			
			
sub	esp, 0Ch
push	ebx
push	ebp
mov	ebp, [esp+14h+arg_8]
push	esi
push	edi
mov	edi, [esp+1Ch+arg_4]
lea	eax, [esp+1Ch+var_C]
push	eax
push	56h
push	edi
mov	dword ptr [ebp+0], 0
call	CERT_FindCertExtension
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_100430C3
call	PORT_GetError_Util
cmp	eax, 0FFFFE023h
jnz	short loc_10043115
push	edi
lea	ebx, [esp+20h+var_C]
call	sub_10042F90
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_100430C3
call	PORT_GetError_Util
sub	eax, 0FFFFE023h
neg	eax
pop	edi
sbb	eax, eax
and	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
			
mov	edi, [esp+1Ch+arg_0]
push	edi
call	PORT_ArenaMark_Util
lea	ecx, [esp+20h+var_C]
push	ecx
push	edi
mov	ebx, eax
call	CERT_DecodeNameConstraintsExtension_0
add	esp, 0Ch
mov	[ebp+0], eax
test	eax, eax
jnz	short loc_100430E7
or	esi, 0FFFFFFFFh
mov	edx, [esp+1Ch+var_8]
push	edx
call	PORT_Free_Util
add	esp, 4
push	ebx
push	edi
cmp	esi, 0FFFFFFFFh
jnz	short loc_1004310D
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
call	PORT_ArenaUnmark_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
align 10h
public CERT_CheckNameSpace
			
push	ebx
mov	ebx, [esp+4+arg_4]
mov	eax, [ebx+4]
push	esi
mov	esi, [esp+8+arg_8]
push	edi
mov	edi, [esp+0Ch+arg_0]
test	eax, eax
jz	short loc_10043164
mov	edx, [esi]
push	edi
lea	ecx, [esp+10h+arg_4]
push	ecx
push	edx
push	eax
call	sub_100426A0
add	esp, 10h
test	eax, eax
jnz	short loc_1004319A
mov	eax, [esp+0Ch+arg_4]
test	eax, eax
jz	short loc_10043164
push	1
push	eax
push	esi
call	sub_10042DB0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004319A
			
mov	eax, [ebx]
test	eax, eax
jz	short loc_10043198
mov	edx, [esi]
push	edi
lea	ecx, [esp+10h+arg_4]
push	ecx
push	edx
push	eax
call	sub_100426A0
add	esp, 10h
test	eax, eax
jnz	short loc_1004319A
mov	eax, [esp+0Ch+arg_4]
test	eax, eax
jz	short loc_10043198
push	0
push	eax
push	esi
call	sub_10042DB0
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004319A
			
xor	eax, eax
			
pop	edi
pop	esi
pop	ebx
retn
align 10h
push	ecx
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_4]
xor	eax, eax
xor	ebx, ebx
mov	[esp+0Ch+var_4], eax
test	ebp, ebp
jz	short loc_10043221
mov	ecx, [esp+0Ch+arg_0]
mov	edx, [esp+0Ch+arg_C]
push	esi
push	edi
lea	eax, [esp+14h+arg_4]
push	eax
push	ecx
push	edx
call	CERT_FindNameConstraintsExten
add	esp, 0Ch
test	eax, eax
jz	short loc_100431D5
or	ebx, 0FFFFFFFFh
jmp	short loc_10043202
mov	edi, [esp+14h+arg_4]
mov	esi, ebp
jmp	short loc_100431E0
align 10h
			
test	edi, edi
jz	short loc_100431F7
mov	eax, [esp+14h+arg_C]
push	esi
push	edi
push	eax
call	CERT_CheckNameSpace
add	esp, 0Ch
test	eax, eax
jnz	short loc_10043206
mov	esi, [esi+28h]
sub	esi, 28h
inc	ebx
cmp	esi, ebp
jnz	short loc_100431E0
test	eax, eax
jz	short loc_1004321F
test	ebx, ebx
js	short loc_10043217
mov	ecx, [esp+14h+arg_8]
mov	edx, [ecx+ebx*4]
mov	[esp+14h+var_4], edx
jmp	short loc_1004321F
mov	ecx, [esp+14h+arg_0]
mov	[esp+14h+var_4], ecx
			
pop	edi
pop	esi
mov	ecx, [esp+0Ch+arg_10]
pop	ebp
pop	ebx
test	ecx, ecx
jz	short loc_10043230
mov	edx, [esp+4+var_4]
mov	[ecx], edx
pop	ecx
retn
align 10h
push	ebx
push	esi
push	edi
push	800h
xor	esi, esi
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_100432CB
push	14h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100432B1
mov	ebx, [esp+0Ch+arg_0]
test	ebx, ebx
jz	short loc_100432A4
push	30h
push	edi
call	PORT_ArenaZAlloc_Util
add	esp, 8
test	eax, eax
jz	short loc_1004328E
lea	ecx, [eax+28h]
mov	dword ptr [eax], 0
mov	[ecx], ecx
mov	[eax+2Ch], ecx
mov	[esi+4], eax
test	eax, eax
jz	short loc_100432B1
push	ebx
push	eax
push	edi
call	sub_10042500
add	esp, 0Ch
test	eax, eax
jnz	short loc_100432B1
call	ds:PR_NewLock
mov	[esi+10h], eax
test	eax, eax
jnz	short loc_100432C2
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
mov	[esi], edi
mov	dword ptr [esi+8], 1
pop	edi
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
public CERT_GetCertificateNames
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	0
push	eax
push	ecx
call	CERT_GetConstrainedCertificateNames
add	esp, 0Ch
retn
align 10h
public CERT_GetCertTrust
			
push	esi
push	edi
mov	edi, [esp+8+arg_0]
push	edi
call	sub_1003D8D0
mov	eax, [edi+160h]
add	esp, 4
test	eax, eax
jnz	short loc_1004332A
push	edi
or	esi, 0FFFFFFFFh
call	sub_1003D990
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
mov	edx, [eax]
mov	ecx, [esp+8+arg_4]
mov	[ecx], edx
mov	edx, [eax+4]
mov	[ecx+4], edx
mov	eax, [eax+8]
push	edi
mov	[ecx+8], eax
xor	esi, esi
call	sub_1003D990
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
			
call	sub_10050A90
test	eax, eax
jnz	short loc_10043363
push	eax
call	PORT_SetError_Util
add	esp, 4
retn
mov	edx, [eax]
push	esi
push	edi
mov	edi, 5
xor	esi, esi
mov	ecx, edi
test	edx, edx
jz	short loc_10043380
inc	esi
mov	edi, ecx
mov	ecx, edx
mov	edx, [eax+esi*4]
test	edx, edx
jnz	short loc_10043374
cmp	ecx, ds:dword_100A7E70
jnz	short loc_1004339D
push	edi
call	sub_1001AFB0
add	esp, 4
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7DD8
jnz	short loc_100433B3
xor	eax, eax
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7DE0
jnz	short loc_100433CC
mov	eax, 0FFFFE013h
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E14
jz	loc_10043497
cmp	ecx, ds:dword_100A7E2C
jnz	short loc_100433F1
mov	eax, 0FFFFE009h
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E30
jnz	short loc_1004340A
mov	eax, 0FFFFE007h
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E48
jnz	short loc_10043423
mov	eax, 0FFFFE00Fh
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E68
jnz	short loc_1004343C
mov	eax, 0FFFFE08Bh
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E60
jnz	short loc_10043455
mov	eax, 0FFFFE000h
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E54
jnz	short loc_1004346E
mov	eax, 0FFFFE00Dh
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E64
jnz	short loc_10043487
mov	eax, 0FFFFE01Ch
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E38
jz	short loc_10043497
cmp	ecx, ds:dword_100A7E3C
jnz	short loc_100434A8
			
mov	eax, 0FFFFE002h
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E44
jz	short loc_100434F0
cmp	ecx, ds:dword_100A7E58
jz	short loc_100434F0
cmp	ecx, ds:dword_100A7E50
jz	short loc_100434F0
cmp	ecx, ds:dword_100A7E4C
jz	short loc_100434F0
cmp	ecx, ds:dword_100A7DFC
jz	short loc_100434F0
cmp	ecx, ds:dword_100A7E6C
jz	short loc_100434F0
cmp	ecx, ds:dword_100A7E00
jz	short loc_100434F0
cmp	ecx, ds:dword_100A7E5C
jz	short loc_100434F0
cmp	ecx, ds:dword_100A7DDC
jnz	short loc_10043501
			
mov	eax, 0FFFFE001h
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
cmp	ecx, ds:dword_100A7E34
jz	short loc_10043581
cmp	ecx, ds:dword_100A7DE4
jz	short loc_10043581
cmp	ecx, ds:dword_100A7DE8
jz	short loc_10043581
cmp	ecx, ds:dword_100A7DEC
jz	short loc_10043581
cmp	ecx, ds:dword_100A7DF0
jz	short loc_10043581
cmp	ecx, ds:dword_100A7DF4
jz	short loc_10043581
cmp	ecx, ds:dword_100A7DF8
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E04
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E08
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E0C
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E10
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E18
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E1C
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E20
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E24
jz	short loc_10043581
cmp	ecx, ds:dword_100A7E28
jnz	short loc_10043592
			
mov	eax, 0FFFFE005h
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
xor	eax, eax
cmp	ecx, ds:dword_100A7E40
setz	al
lea	eax, ds:0FFFFE001h[eax*4]
push	eax
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
retn
public CERT_ChangeCertTrust
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
push	esi
push	eax
push	ecx
xor	esi, esi
call	sub_1004BC00
add	esp, 8
test	eax, eax
jz	short loc_100435D1
or	esi, 0FFFFFFFFh
call	sub_10043350
mov	eax, esi
pop	esi
retn
align 10h
public __CERT_AddTempCertToPerm
			
sub	esp, 24h
mov	eax, [esp+24h+arg_0]
push	ebx
push	eax
call	sub_1004B930
xor	ebx, ebx
add	esp, 4
mov	[esp+28h+var_24], eax
mov	[esp+28h+var_20], ebx
mov	[esp+28h+var_1C], ebx
mov	[esp+28h+var_18], ebx
mov	[esp+28h+var_14], ebx
mov	[esp+28h+var_10], ebx
mov	[esp+28h+var_C], ebx
mov	[esp+28h+var_8], ebx
mov	[esp+28h+var_4], ebx
cmp	eax, ebx
jnz	short loc_10043628
call	sub_10043350
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 24h
retn
push	esi
mov	esi, [eax+1Ch]
cmp	esi, ebx
jnz	short loc_10043646
push	0FFFFE018h
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 24h
retn
push	ebp
push	edi
push	ebx
push	eax
call	sub_100461D0
mov	edi, [esp+3Ch+Src]
mov	ebp, eax
add	esp, 8
cmp	ebp, ebx
jz	short loc_100436A2
cmp	edi, ebx
jz	short loc_100436B2
mov	ecx, ebp
mov	eax, edi
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_10043684
cmp	dl, bl
jz	short loc_10043680
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_10043684
add	eax, 2
add	ecx, 2
cmp	dl, bl
jnz	short loc_10043664
xor	eax, eax
jmp	short loc_10043689
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
cmp	eax, ebx
jz	short loc_100436B2
mov	ecx, [esp+34h+arg_0]
push	ebp
mov	[ecx+154h], ebx
call	sub_10050550
add	esp, 4
xor	ebp, ebp
cmp	edi, ebx
jz	short loc_100436B2
push	ebx		
push	edi		
call	sub_10050D50
add	esp, 8
mov	ebp, eax
			
mov	eax, [esi+14h]
lea	edx, [esp+34h+var_20]
push	edx
push	eax
call	sub_10048AB0
mov	ecx, [esp+3Ch+var_24]
mov	edx, [esi+14h]
push	ecx
push	edx
call	sub_10048A80
mov	edx, [esi+14h]
lea	eax, [esp+44h+var_10]
push	eax
lea	ecx, [esp+48h+var_20]
push	ecx
push	edx
call	sub_10048AC0
mov	eax, [esp+50h+var_24]
mov	[eax+1Ch], ebx
call	PK11_GetInternalKeySlot
mov	esi, eax
push	esi
call	sub_10036730
mov	ecx, [esp+54h+arg_0]
mov	edx, [ecx+118h]
mov	ecx, [esp+54h+var_24]
push	1
push	edx
lea	edx, [ecx+48h]
push	edx
lea	edx, [ecx+40h]
push	edx
lea	edx, [ecx+38h]
push	edx
lea	edx, [ecx+30h]
push	edx
push	ebp
add	ecx, 28h
push	ecx
push	1
push	ebx
push	eax
call	sub_1004DE50
add	esp, 4Ch
push	ebp
mov	edi, eax
call	sub_10050550
push	esi
call	PK11_FreeSlot
add	esp, 8
cmp	edi, ebx
jnz	short loc_10043761
call	sub_10050A60
cmp	eax, ds:dword_100A7E64
jnz	short loc_10043756
push	0FFFFE08Ah
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 24h
retn
mov	eax, [esp+34h+var_24]
push	edi
push	eax
call	sub_100494A0
add	esp, 8
lea	ecx, [esp+34h+var_24]
push	1
push	ecx
call	sub_1004A850
push	eax
call	sub_100480B0
mov	eax, [esp+40h+var_24]
mov	edx, [esp+40h+arg_0]
push	eax
mov	[edx+15Ch], ebx
call	sub_1004B900
add	esp, 10h
cmp	eax, ebx
jnz	short loc_100437AC
call	sub_10043350
pop	edi
pop	ebp
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 24h
retn
mov	ecx, [esp+34h+arg_8]
mov	[eax+150h], ebx
mov	dword ptr [eax+14Ch], 1
cmp	ecx, ebx
jnz	short loc_100437CE
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 24h
retn
push	ecx
push	eax
call	sub_1004BC00
add	esp, 8
test	eax, eax
jz	short loc_100437E4
or	ebx, 0FFFFFFFFh
call	sub_10043350
pop	edi
pop	ebp
pop	esi
mov	eax, ebx
pop	ebx
add	esp, 24h
retn
align 10h
align 10h
public CERT_NewTempCertificate
			
sub	esp, 10h
push	ebx
push	ebp
push	esi
push	edi
call	sub_1004A860
mov	edi, eax
mov	[esp+20h+var_10], edi
call	sub_1004A850
cmp	[esp+20h+arg_C], 0
mov	ebx, [esp+20h+arg_4]
mov	ebp, eax
jnz	loc_100438B5
mov	eax, [ebx+4]
mov	ecx, [ebx+8]
lea	edx, [esp+20h+var_C]
push	edx
push	edi
mov	[esp+28h+var_C], eax
mov	[esp+28h+Src], ecx
call	sub_10046E40
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10043862
mov	ecx, [esp+20h+arg_0]
lea	eax, [esp+20h+var_C]
push	eax
push	ecx
call	sub_10047580
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100438B5
push	0
lea	edx, [esp+24h+var_C]
push	edx
lea	eax, [esi+30h]
push	eax
call	sub_10050D00
add	esp, 0Ch
push	esi
test	eax, eax
jnz	short loc_10043898
call	sub_10046070
push	0FFFFE08Ah
call	PORT_SetError_Util
add	esp, 8
xor	esi, esi
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
call	sub_1004B900
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_100438AB
call	sub_10043350
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
			
push	2
push	edi
push	ebp
push	0
push	0
call	sub_1004A230
mov	esi, eax
add	esp, 14h
test	esi, esi
jnz	short loc_100438DA
call	sub_10043350
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
mov	ecx, [esi]
push	58h
push	ecx
call	sub_100504B0
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jnz	short loc_10043905
call	sub_10043350
push	esi
call	sub_10049400
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
mov	ecx, 9
mov	edi, ebp
rep movsd
xor	edi, edi
cmp	[esp+20h+arg_10], edi
jz	short loc_10043930
mov	edx, [ebx+4]
mov	eax, [ebx+8]
push	edx		
mov	edx, [ebp+0]
push	eax		
lea	ecx, [ebp+30h]
push	ecx		
push	edx		
call	sub_10050C70
add	esp, 10h
jmp	short loc_1004393C
mov	eax, [ebx+4]
mov	[ebp+30h], eax
mov	ecx, [ebx+8]
mov	[ebp+34h], ecx
push	ebp
call	sub_1004B8F0
mov	esi, eax
add	esp, 4
cmp	esi, edi
jz	loc_10043A31
mov	edx, [esi+4Ch]
mov	eax, [esi+50h]
push	edx		
mov	edx, [ebp+0]
push	eax		
lea	ecx, [ebp+38h]
push	ecx		
push	edx		
call	sub_10050C70
mov	eax, [esi+58h]
mov	ecx, [esi+5Ch]
push	eax		
mov	eax, [ebp+0]
push	ecx		
lea	edx, [ebp+40h]
push	edx		
push	eax		
call	sub_10050C70
lea	ecx, [esp+40h+var_C]
xor	eax, eax
push	ecx
lea	edx, [esi+3Ch]
push	edx
mov	[esp+48h+var_C], edi
mov	[esp+48h+Src], eax
mov	[esp+48h+Size],	eax
call	sub_1003BA40
mov	eax, [esp+48h+Src]
add	esp, 28h
cmp	eax, edi
jz	loc_10043A36
mov	edx, [ebp+0]
push	eax		
mov	eax, [esp+24h+Size]
push	eax		
lea	ecx, [ebp+48h]
push	ecx		
push	edx		
call	sub_10050C70
mov	eax, [esp+30h+Src]
push	eax
call	PORT_Free_Util
mov	edx, [esp+34h+arg_8]
add	esp, 14h
cmp	edx, edi
jz	short loc_100439ED
mov	eax, edx
lea	ebx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_100439D1
mov	ecx, [ebp+0]
sub	eax, ebx
push	eax		
push	edx		
push	5		
push	ecx		
call	sub_10050DB0
add	esp, 10h
mov	[ebp+20h], eax
mov	esi, [esi+118h]
cmp	esi, edi
jz	short loc_10043A1D
cmp	byte ptr [esi],	0
jz	short loc_10043A1D
mov	eax, esi
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10043A01
sub	eax, edx
mov	edx, [ebp+0]
push	eax		
push	esi		
push	2		
push	edx		
call	sub_10050DB0
add	esp, 10h
mov	[ebp+50h], eax
			
mov	eax, [esp+20h+var_10]
push	ebp
push	eax
call	sub_10046CE0
mov	esi, eax
add	esp, 8
cmp	esi, edi
jnz	short loc_10043A49
call	sub_10043350
push	ebp
call	sub_10049400
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
push	ebp
call	sub_100461A0
push	esi
call	sub_1004B900
add	esp, 8
cmp	eax, edi
jz	loc_100438CB
mov	[eax+14Ch], edi
pop	edi
pop	esi
pop	ebp
mov	dword ptr [eax+150h], 1
pop	ebx
add	esp, 10h
retn
align 10h
align 10h
public CERT_FindCertByIssuerAndSN
push	ecx
mov	eax, [esp+4+arg_4]
push	esi
push	0
push	eax
lea	ecx, [esp+10h+var_4]
push	ecx
call	PK11_FindCertByIssuerAndSN
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10043ABF
mov	eax, [esp+8+var_4]
test	eax, eax
jz	short loc_10043ABD
push	eax
call	PK11_FreeSlot
add	esp, 4
mov	eax, esi
pop	esi
pop	ecx
retn
align 10h
			
sub	esp, 1Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+1Ch+var_4], eax
mov	eax, [esp+1Ch+arg_0]
test	eax, eax
jnz	short loc_10043AFE
push	ecx
call	sub_10046950
add	esp, 4
mov	ecx, [esp+1Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 1Ch
retn
test	ecx, ecx
jnz	short loc_10043B1A
push	eax
call	sub_10046950
add	esp, 4
mov	ecx, [esp+1Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 1Ch
retn
mov	[esp+1Ch+var_1C], eax
push	0
lea	eax, [esp+20h+var_10]
push	eax
mov	[esp+24h+var_18], ecx
lea	ecx, [esp+24h+var_1C]
push	0
push	ecx
mov	[esp+2Ch+var_14], 0
mov	[esp+2Ch+var_10], 1
call	sub_1004A690
mov	ecx, [esp+2Ch+var_4]
add	esp, 10h
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 1Ch
retn
align 10h
public CERT_FindCertByDERCert
			
sub	esp, 8
mov	eax, [esp+8+arg_4]
mov	ecx, [eax+4]
mov	edx, [eax+8]
mov	[esp+8+var_8], ecx
mov	[esp+8+var_4], edx
call	sub_1004A860
lea	ecx, [esp+8+var_8]
push	ecx
push	eax
call	sub_10046E40
add	esp, 8
test	eax, eax
jnz	short loc_10043BA3
mov	eax, [esp+8+arg_0]
lea	edx, [esp+8+var_8]
push	edx
push	eax
call	sub_10047580
add	esp, 8
test	eax, eax
jnz	short loc_10043BA3
add	esp, 8
retn
			
push	eax
call	sub_1004B900
add	esp, 4
add	esp, 8
retn
public CERT_DestroyCertificate
			
mov	eax, [esp+arg_0]
test	eax, eax
jz	short locret_10043BDC
mov	ecx, [eax+15Ch]
test	ecx, ecx
jz	short loc_10043BCB
mov	[esp+arg_0], ecx
jmp	sub_100461A0
mov	eax, [eax]
test	eax, eax
jz	short locret_10043BDC
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
retn
align 10h
public CERT_SaveSMimeProfile
sub	esp, 54h
push	ebp
mov	ebp, [esp+58h+arg_0]
push	esi
xor	esi, esi
cmp	ebp, esi
jnz	short loc_10043BF8
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 54h
retn
mov	eax, [ebp+17Ch]
push	ebx
push	edi
cmp	eax, esi
jz	short loc_10043C3D
push	eax
call	PK11_IsInternal
add	esp, 4
test	eax, eax
jnz	short loc_10043C3D
call	PK11_GetInternalKeySlot
mov	edi, eax
cmp	edi, esi
jz	loc_10043EF2
push	esi
push	esi
push	esi
push	ebp
push	edi
call	PK11_ImportCert
push	edi
mov	ebx, eax
call	PK11_FreeSlot
add	esp, 18h
cmp	ebx, esi
jnz	loc_10043EF2
			
cmp	[ebp+17Ch], esi
jz	short loc_10043C6F
cmp	[ebp+14Ch], esi
jz	short loc_10043C6F
push	ebp
call	CERT_IsUserCert
add	esp, 4
test	eax, eax
jz	short loc_10043C6F
mov	eax, [esp+64h+arg_4]
cmp	eax, esi
jz	loc_10043EFD
cmp	[eax+8], esi
jz	loc_10043EFD
			
push	ebp
call	CERT_GetFirstEmailAddress
add	esp, 4
mov	[esp+64h+var_4C], eax
cmp	eax, esi
jz	loc_10043EFD
mov	edi, [esp+64h+arg_8]
mov	ebx, [esp+64h+arg_4]
push	ebp
mov	[esp+68h+var_54], 0FFFFFFFFh
mov	[esp+68h+var_48], esi
mov	[esp+68h+var_50], esi
mov	[esp+68h+var_40], esi
mov	[esp+68h+var_44], esi
call	sub_1004B930
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	loc_10043EF2
mov	eax, [ebp+1Ch]
mov	[esp+64h+var_3C], eax
test	eax, eax
jz	short loc_10043D0A
push	ebp
push	eax
call	sub_10046ED0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10043D35
mov	eax, [esi+34h]
mov	ecx, [eax]
mov	[esp+64h+var_14], ecx
mov	edx, [esi+34h]
mov	eax, [edx+4]
mov	[esp+64h+var_10], eax
mov	edx, [esi+30h]
mov	eax, [edx]
lea	ecx, [esp+64h+var_18]
mov	[esp+64h+var_8], eax
mov	[esp+64h+var_48], ecx
mov	ecx, [esi+30h]
mov	edx, [ecx+4]
lea	eax, [esp+64h+var_C]
mov	[esp+64h+var_4], edx
mov	[esp+64h+var_50], eax
jmp	short loc_10043D35
mov	edx, [esp+64h+arg_0]
mov	eax, [esp+64h+var_4C]
lea	ecx, [esp+64h+var_50]
push	ecx
add	edx, 54h
push	edx
push	eax
lea	ecx, [esp+70h+var_40]
push	ecx
call	sub_10029A80
add	esp, 10h
mov	[esp+64h+var_48], eax
mov	[esp+64h+var_44], 1
			
test	ebx, ebx
jnz	short loc_10043D3D
xor	edi, edi
jmp	short loc_10043D43
test	edi, edi
jnz	short loc_10043D43
xor	ebx, ebx
			
mov	eax, [esp+64h+var_50]
test	eax, eax
jz	short loc_10043DB9
test	edi, edi
jz	short loc_10043DB9
cmp	dword ptr [eax+8], 0
jnz	short loc_10043D67
mov	[esp+64h+var_38], 0
mov	[esp+64h+var_34], 80000000h
jmp	short loc_10043D81
push	eax
lea	edx, [esp+68h+var_38]
push	edx
call	DER_UTCTimeToTime_Util
add	esp, 8
mov	[esp+64h+var_54], eax
test	eax, eax
jnz	loc_10043E74
lea	eax, [esp+64h+var_30]
push	edi
push	eax
call	DER_UTCTimeToTime_Util
add	esp, 8
mov	[esp+64h+var_54], eax
test	eax, eax
jnz	loc_10043E74
mov	ecx, [esp+64h+var_2C]
cmp	ecx, [esp+64h+var_34]
jl	loc_10043E6C
jg	short loc_10043DB9
mov	edx, [esp+64h+var_30]
cmp	edx, [esp+64h+var_38]
jbe	loc_10043E6C
			
cmp	[esp+64h+var_3C], 0
jz	loc_10043E4A
test	esi, esi
jz	short loc_10043DF5
mov	eax, [edi+4]
mov	ecx, [edi+8]
mov	ebp, [esi]
push	eax		
push	ecx		
push	0		
push	ebp		
call	sub_10050C70
mov	[esi+30h], eax
mov	edx, [ebx+4]
mov	eax, [ebx+8]
push	edx		
push	eax		
push	0		
push	ebp		
call	sub_10050C70
add	esp, 20h
mov	[esi+34h], eax
jmp	short loc_10043E74
test	edi, edi
jz	short loc_10043E74
test	ebx, ebx
jz	short loc_10043E74
mov	edx, [edi+8]
mov	eax, [ebx+4]
mov	ecx, [edi+4]
mov	[esp+64h+var_1C], edx
lea	edx, [esp+64h+var_28]
mov	[esp+64h+var_28], eax
push	edx
lea	eax, [esp+68h+var_20]
mov	[esp+68h+var_20], ecx
mov	ecx, [ebx+8]
push	eax
push	ebp
mov	[esp+70h+var_24], ecx
call	sub_10046550
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10043E74
mov	ecx, [esp+64h+var_3C]
push	esi
push	ecx
call	sub_10046D40
add	esp, 8
neg	eax
sbb	eax, eax
mov	[esp+64h+var_54], eax
jmp	short loc_10043E74
mov	edx, [esp+64h+arg_0]
mov	eax, [esp+64h+var_4C]
mov	ecx, [esp+64h+var_40]
push	edi
push	ebx
add	edx, 54h
push	edx
push	eax
push	ecx
call	sub_10029D00
add	esp, 14h
mov	[esp+64h+var_54], eax
jmp	short loc_10043E74
			
mov	[esp+64h+var_54], 0
			
mov	eax, [esp+64h+var_48]
test	eax, eax
jz	short loc_10043E8E
cmp	[esp+64h+var_44], 0
jz	short loc_10043E8E
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
			
mov	eax, [esp+64h+var_50]
test	eax, eax
jz	short loc_10043EA8
cmp	[esp+64h+var_44], 0
jz	short loc_10043EA8
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
			
test	esi, esi
jz	short loc_10043EB5
push	esi
call	sub_100468D0
add	esp, 4
mov	eax, [esp+64h+var_40]
test	eax, eax
jz	short loc_10043EC6
push	eax
call	PK11_FreeSlot
add	esp, 4
cmp	[esp+64h+var_54], 0
jnz	short loc_10043EF2
mov	edx, [esp+64h+var_4C]
mov	eax, [esp+64h+arg_0]
push	edx
push	eax
call	CERT_GetNextEmailAddress
add	esp, 8
mov	[esp+64h+var_4C], eax
test	eax, eax
jz	short loc_10043EFD
mov	ebp, [esp+64h+arg_0]
xor	esi, esi
jmp	loc_10043C84
			
pop	edi
pop	ebx
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
add	esp, 54h
retn
			
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
add	esp, 54h
retn
align 10h
public CERT_FindSMimeProfile
push	ecx
push	esi
mov	esi, [esp+8+arg_0]
push	edi
xor	edi, edi
mov	[esp+0Ch+var_4], 0
test	esi, esi
jz	loc_10043FC9
mov	eax, [esi+118h]
test	eax, eax
jz	loc_10043FC9
cmp	byte ptr [eax],	0
jz	loc_10043FC9
push	esi
call	sub_1004B930
add	esp, 4
test	eax, eax
jz	loc_10043FD6
mov	ecx, [eax+1Ch]
test	ecx, ecx
jz	short loc_10043F96
push	eax
push	ecx
call	sub_10046ED0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10043F90
mov	eax, [esi+34h]
mov	ecx, [eax+4]
push	ecx
push	edi
push	edi
call	SECITEM_AllocItem_Util
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_10043F87
mov	edx, [esi+34h]
mov	eax, [edx]
mov	[edi+4], eax
push	esi
call	sub_100468D0
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ecx
retn
mov	edx, [esi+118h]
push	0
lea	ecx, [esi+54h]
push	ecx
push	edx
lea	eax, [esp+18h+var_4]
push	eax
call	sub_10029A80
mov	esi, eax
mov	eax, [esp+1Ch+var_4]
add	esp, 10h
test	eax, eax
jz	short loc_10043FC3
push	eax
call	PK11_FreeSlot
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ecx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
pop	ecx
retn
align 10h
public SECKEY_HashPassword
push	0FFFFE898h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
retn
public SEC_DeletePermCertificate
			
push	ebx
push	esi
push	edi
call	sub_1004A850
mov	ebx, [esp+0Ch+arg_0]
push	ebx
mov	edi, eax
call	sub_1004B930
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10044014
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	ebx
push	esi
call	sub_1004B320
add	esp, 8
test	eax, eax
jz	short loc_1004404D
push	esi
push	edi
call	sub_100476C0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1004404D
push	esi
call	sub_1004C130
add	esp, 4
test	eax, eax
jz	short loc_10044044
call	sub_10043350
push	ebx
call	sub_100468D0
add	esp, 4
			
push	0
push	esi
call	sub_100461E0
push	edi
mov	ebx, eax
call	sub_10047B90
push	esi
push	edi
call	sub_10047AB0
push	edi
call	sub_10047BB0
add	esp, 18h
mov	eax, ebx
pop	edi
neg	eax
pop	esi
sbb	eax, eax
pop	ebx
retn
align 10h
public CERT_FindCertByName
			
			
sub	esp, 18h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+18h+var_4], eax
mov	eax, [esp+18h+arg_4]
mov	ecx, [eax+4]
mov	edx, [eax+8]
push	ebx
push	esi
push	edi
mov	edi, [esp+24h+arg_0]
mov	[esp+24h+var_18], ecx
mov	[esp+24h+var_14], edx
mov	[esp+24h+var_10], 1
call	sub_1004A860
push	0
lea	ecx, [esp+28h+var_10]
push	ecx
push	0
lea	edx, [esp+30h+var_18]
push	edx
push	eax
call	sub_10046DD0
push	0
mov	esi, eax
lea	eax, [esp+3Ch+var_10]
push	eax
push	0
lea	ecx, [esp+44h+var_18]
push	ecx
push	edi
call	sub_10047380
mov	edi, eax
push	esi
mov	ecx, edi
call	sub_10043AD0
add	esp, 2Ch
mov	ebx, eax
test	esi, esi
jz	short loc_10044124
push	esi
call	sub_1004B900
add	esp, 4
test	eax, eax
jz	short loc_10044124
mov	ecx, [eax+15Ch]
test	ecx, ecx
jz	short loc_10044113
push	ecx
call	sub_100461A0
add	esp, 4
jmp	short loc_10044124
mov	eax, [eax]
test	eax, eax
jz	short loc_10044124
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
test	edi, edi
jz	short loc_1004415B
push	edi
call	sub_1004B900
add	esp, 4
test	eax, eax
jz	short loc_1004415B
mov	ecx, [eax+15Ch]
test	ecx, ecx
jz	short loc_1004414A
push	ecx
call	sub_100461A0
add	esp, 4
jmp	short loc_1004415B
mov	eax, [eax]
test	eax, eax
jz	short loc_1004415B
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
test	ebx, ebx
jz	short loc_1004417A
push	ebx
call	sub_1004B900
add	esp, 4
pop	edi
pop	esi
pop	ebx
mov	ecx, [esp+18h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 18h
retn
mov	ecx, [esp+24h+var_4]
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 18h
retn
align 10h
public CERT_FindCertByNickname
			
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
push	ebx
push	esi
mov	esi, [esp+18h+Str]
push	edi
mov	[esp+1Ch+var_10], 1
call	sub_1004A860
push	0
lea	ecx, [esp+20h+var_10]
push	ecx
push	0
push	esi
push	eax
call	sub_10046D60
push	0		
push	esi		
mov	edi, eax
call	PK11_FindCertFromNickname
mov	esi, eax
add	esp, 1Ch
test	esi, esi
jz	short loc_10044247
push	esi
call	sub_1004B930
push	edi
mov	ecx, eax
call	sub_10043AD0
mov	ebx, eax
mov	eax, [esi+15Ch]
add	esp, 8
test	eax, eax
jz	short loc_100441FD
push	eax
call	sub_100461A0
add	esp, 4
jmp	short loc_1004420E
mov	esi, [esi]
test	esi, esi
jz	short loc_1004420E
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
test	edi, edi
jz	short loc_10044249
push	edi
call	sub_1004B900
add	esp, 4
test	eax, eax
jz	short loc_10044249
mov	ecx, [eax+15Ch]
test	ecx, ecx
jz	short loc_10044234
push	ecx
call	sub_100461A0
add	esp, 4
jmp	short loc_10044249
mov	eax, [eax]
test	eax, eax
jz	short loc_10044249
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
jmp	short loc_10044249
mov	ebx, edi
			
test	ebx, ebx
jz	short loc_10044268
push	ebx
call	sub_1004B900
add	esp, 4
pop	edi
pop	esi
pop	ebx
mov	ecx, [esp+10h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
mov	ecx, [esp+1Ch+var_4]
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
			
sub	esp, 14h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+14h+var_4], eax
push	ebx
push	esi
xor	ebx, ebx
mov	esi, ecx
mov	[esp+1Ch+var_14], ebx
cmp	esi, ebx
jnz	short loc_100442BC
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
xor	eax, eax
pop	ebx
mov	ecx, [esp+14h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 14h
retn
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_10], eax
cmp	eax, ebx
jnz	short loc_100442D4
mov	eax, [esp+1Ch+arg_4]
mov	[esp+1Ch+var_8], ebx
mov	[esp+1Ch+var_C], eax
push	ebp
push	edi
call	sub_1004A860
push	ebx
lea	ecx, [esp+28h+var_10]
push	ecx
push	ebx
mov	ebp, eax
push	esi
push	ebp
call	sub_10046D60
mov	edi, eax
add	esp, 14h
cmp	edi, ebx
jnz	short loc_1004432E
push	40h		
push	esi		
call	ds:strchr
add	esp, 8
test	eax, eax
jz	short loc_1004432E
push	esi
call	sub_1003D180
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	short loc_1004432E
push	0
lea	edx, [esp+28h+var_10]
push	edx
push	0
push	ebx
push	ebp
call	sub_10046E60
push	ebx
mov	edi, eax
call	PORT_Free_Util
add	esp, 18h
			
cmp	[esp+24h+arg_0], 0
jz	short loc_10044346
push	0		
push	esi		
call	PK11_FindCertFromNickname
add	esp, 8
mov	[esp+24h+var_14], eax
jmp	short loc_100443BB
test	edi, edi
jz	short loc_10044373
push	edi
call	sub_10046200
mov	edx, [eax+24h]
lea	ecx, [esp+28h+var_10]
push	ecx
push	eax
call	edx
add	esp, 0Ch
test	eax, eax
jnz	short loc_10044373
push	edi
call	sub_1004B900
push	eax
call	CERT_DestroyCertificate
add	esp, 8
xor	edi, edi
			
push	0		
push	esi		
call	PK11_FindCertsFromNickname
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_10044411
mov	eax, [esp+24h+arg_4]
push	0
push	eax
push	esi
call	CERT_FilterCertListByUsage
add	esp, 0Ch
test	eax, eax
jnz	short loc_100443B2
mov	eax, [esi]
cmp	eax, esi
jz	short loc_100443B2
mov	ecx, [eax+8]
push	ecx
call	CERT_DupCertificate
add	esp, 4
mov	[esp+24h+var_14], eax
			
push	esi
call	CERT_DestroyCertList
add	esp, 4
mov	ebx, [esp+24h+var_14]
test	ebx, ebx
jz	short loc_10044411
push	ebx
call	sub_1004B930
push	edi
mov	ecx, eax
call	sub_10043AD0
mov	esi, eax
mov	eax, [ebx+15Ch]
add	esp, 8
test	eax, eax
jz	short loc_100443EB
push	eax
call	sub_100461A0
add	esp, 4
jmp	short loc_100443FC
mov	eax, [ebx]
test	eax, eax
jz	short loc_100443FC
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
test	edi, edi
jz	short loc_10044413
push	edi
call	sub_1004B900
push	eax
call	CERT_DestroyCertificate
add	esp, 8
jmp	short loc_10044413
			
mov	esi, edi
			
pop	edi
pop	ebp
test	esi, esi
jz	loc_100442A9
push	esi
call	sub_1004B900
mov	ecx, [esp+20h+var_4]
add	esp, 4
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 14h
retn
align 10h
public CERT_FindCertByNicknameOrEmailAddr
mov	ecx, [esp+Str]	
push	0		
push	1		
call	sub_10044280
add	esp, 8
retn
align 10h
public CERT_FindCertByNicknameOrEmailAddrForUsage
mov	eax, [esp+arg_8]
mov	ecx, [esp+Str]	
push	eax		
push	0		
call	sub_10044280
add	esp, 8
retn
align 10h
public CERT_CreateSubjectCertList
			
sub	esp, 14h
push	esi
push	edi
call	sub_1004A860
mov	ecx, [esp+1Ch+arg_8]
mov	edx, [ecx+4]
mov	ecx, [ecx+8]
push	0
push	0
mov	[esp+24h+var_10], edx
push	0
lea	edx, [esp+28h+var_10]
push	edx
push	eax
mov	[esp+30h+var_C], ecx
call	sub_10046E20
mov	ecx, [esp+30h+arg_4]
push	0
push	0
mov	edi, eax
push	0
lea	eax, [esp+3Ch+var_10]
push	eax
push	ecx
mov	[esp+44h+var_14], edi
call	sub_10047370
add	esp, 28h
mov	esi, eax
mov	[esp+1Ch+arg_8], esi
test	edi, edi
jnz	short loc_100444D9
test	esi, esi
jz	short loc_100444FC
cmp	[esp+1Ch+arg_0], 0
jnz	short loc_10044504
call	SECKEY_NewPrivateKeyList
mov	[esp+1Ch+arg_0], eax
test	eax, eax
jnz	short loc_10044504
push	edi
call	sub_100499A0
push	esi
call	sub_100499A0
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
add	esp, 14h
retn
			
push	ebx
mov	ebx, [esp+20h+arg_10]
push	ebp
mov	ebp, [esp+24h+arg_C]
test	edi, edi
jz	short loc_1004458E
mov	eax, [edi]
test	eax, eax
jz	short loc_1004458E
push	eax
call	sub_1004B900
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10044589
cmp	[esp+24h+arg_14], 0
mov	[esp+24h+var_8], ebp
mov	[esp+24h+var_4], ebx
jz	short loc_10044547
push	0
push	ebx
push	ebp
push	esi
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jnz	short loc_10044563
mov	eax, [esp+24h+arg_0]
lea	edx, [esp+24h+var_8]
push	edx
push	offset loc_1003D510
push	esi
push	eax
call	CERT_AddCertToListSorted
add	esp, 10h
test	eax, eax
jz	short loc_10044589
mov	eax, [esi+15Ch]
test	eax, eax
jz	short loc_10044578
push	eax
call	sub_100461A0
add	esp, 4
jmp	short loc_10044589
mov	esi, [esi]
test	esi, esi
jz	short loc_10044589
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
add	edi, 4
jnz	short loc_10044512
			
mov	edi, [esp+24h+arg_8]
test	edi, edi
jz	short loc_10044612
mov	eax, [edi]
test	eax, eax
jz	short loc_10044612
push	eax
call	sub_1004B900
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1004460D
cmp	[esp+24h+arg_14], 0
mov	[esp+24h+var_8], ebp
mov	[esp+24h+var_4], ebx
jz	short loc_100445CB
push	0
push	ebx
push	ebp
push	esi
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jnz	short loc_100445E7
mov	edx, [esp+24h+arg_0]
lea	ecx, [esp+24h+var_8]
push	ecx
push	offset loc_1003D510
push	esi
push	edx
call	CERT_AddCertToListSorted
add	esp, 10h
test	eax, eax
jz	short loc_1004460D
mov	eax, [esi+15Ch]
test	eax, eax
jz	short loc_100445FC
push	eax
call	sub_100461A0
add	esp, 4
jmp	short loc_1004460D
mov	esi, [esi]
test	esi, esi
jz	short loc_1004460D
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
add	edi, 4
jnz	short loc_10044596
			
mov	eax, [esp+24h+var_14]
push	eax
call	sub_10050550
mov	ecx, [esp+28h+arg_8]
push	ecx
call	sub_10050550
mov	eax, [esp+2Ch+arg_0]
add	esp, 8
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 14h
retn
align 10h
public SEC_CertNicknameConflict
			
mov	eax, [esp+Str]
mov	ecx, [esp+arg_8]
push	edi
push	eax		
push	ecx		
call	CERT_FindCertByNickname
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_1004465B
pop	edi
retn
mov	eax, [esp+4+arg_4]
push	esi
lea	edx, [edi+54h]
push	edx
push	eax
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
neg	eax
sbb	esi, esi
mov	eax, [edi+15Ch]
test	eax, eax
jz	short loc_1004468A
push	eax
call	sub_100461A0
add	esp, 4
lea	eax, [esi+1]
pop	esi
pop	edi
retn
mov	edi, [edi]
test	edi, edi
jz	short loc_1004469B
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
lea	eax, [esi+1]
pop	esi
pop	edi
retn
align 10h
public CERT_DecodeCertificatePoliciesExtension
			
sub	esp, 0Ch
push	ebp
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10044716
push	8
push	esi
call	PORT_ArenaZAlloc_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	short loc_1004470B
mov	eax, [esp+14h+arg_0]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	esi
mov	[ebp+0], esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004470B
lea	edx, [esp+14h+var_C]
push	edx
push	offset dword_100A7A30
push	ebp
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_1004471E
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
xor	eax, eax
pop	ebp
add	esp, 0Ch
retn
push	ebx
mov	ebx, [ebp+4]
mov	esi, [ebx]
test	esi, esi
jz	short loc_10044769
push	edi
lea	esp, [esp+0]
lea	eax, [esi+4]
push	eax
call	SECOID_FindOIDTag_Util
mov	edi, [esi+10h]
add	esp, 4
mov	[esi], eax
test	edi, edi
jz	short loc_1004475E
mov	esi, [edi]
test	esi, esi
jz	short loc_1004475E
lea	ecx, [esi+4]
push	ecx
call	SECOID_FindOIDTag_Util
add	esp, 4
add	edi, 4
mov	[esi], eax
jnz	short loc_10044745
			
mov	esi, [ebx+4]
add	ebx, 4
test	esi, esi
jnz	short loc_10044730
pop	edi
pop	ebx
pop	esi
mov	eax, ebp
pop	ebp
add	esp, 0Ch
retn
align 10h
sub	esp, 0Ch
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_100447E5
push	8
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_100447DA
mov	eax, [esp+14h+arg_0]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	esi
mov	[edi], esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_100447DA
lea	edx, [esp+14h+var_C]
push	edx
push	offset dword_100A7A80
push	edi
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_100447ED
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
mov	eax, edi
pop	edi
pop	esi
add	esp, 0Ch
retn
align 10h
mov	eax, [esp+arg_0]
test	eax, eax
jz	short loc_10044815
mov	eax, [eax]
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
xor	eax, eax
retn
align 10h
sub	esp, 18h
xor	eax, eax
push	ebx
push	800h
mov	[esp+20h+var_18], eax
mov	[esp+20h+var_14], eax
mov	[esp+20h+var_10], eax
mov	[esp+20h+var_C], eax
mov	[esp+20h+var_8], eax
mov	[esp+20h+var_4], eax
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_10044859
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 18h
retn
mov	eax, [esp+1Ch+arg_4]
push	edi
push	eax
push	offset dword_100A7A90
lea	ecx, [esp+28h+var_18]
push	ecx
push	ebx
call	SEC_QuickDERDecodeItem_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_100448EE
push	esi
mov	esi, [esp+24h+arg_0]
cmp	[esp+24h+var_10], eax
jnz	short loc_1004488E
mov	edx, [esi+4]
mov	dword ptr [edx], 0FFFFFFFFh
jmp	short loc_100448A0
lea	eax, [esp+24h+var_18]
push	eax
call	DER_GetInteger_Util
mov	ecx, [esi+4]
add	esp, 4
mov	[ecx], eax
cmp	[esp+24h+var_4], 0
jnz	short loc_100448B2
mov	edx, [esi+10h]
mov	dword ptr [edx], 0FFFFFFFFh
jmp	short loc_100448C4
lea	eax, [esp+24h+var_C]
push	eax
call	DER_GetInteger_Util
mov	ecx, [esi+10h]
add	esp, 4
mov	[ecx], eax
mov	edx, [esi+4]
mov	eax, [edx]
cmp	eax, 80000000h
jz	short loc_100448EA
cmp	eax, 7FFFFFFFh
jz	short loc_100448EA
mov	eax, [esi+10h]
mov	eax, [eax]
cmp	eax, 80000000h
jz	short loc_100448EA
cmp	eax, 7FFFFFFFh
jnz	short loc_100448ED
			
or	edi, 0FFFFFFFFh
pop	esi
push	0
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	ebx
add	esp, 18h
retn
align 10h
sub	esp, 0Ch
push	esi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1004492F
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 0Ch
retn
mov	eax, [esp+10h+arg_4]
push	edi
push	eax
push	offset dword_100A7AD0
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	esi
mov	[esp+24h+var_C], 0Ah
call	SEC_QuickDERDecodeItem_Util
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_1004496C
lea	edx, [esp+14h+var_C]
push	edx
call	DER_GetInteger_Util
mov	ecx, [esp+18h+arg_0]
mov	edx, [ecx+4]
add	esp, 4
mov	[edx], eax
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_DecodeUserNotice
sub	esp, 0Ch
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10044A05
push	2Ch
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100449FA
mov	eax, [esp+14h+arg_0]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	edi
mov	[esi], edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_100449FA
lea	edx, [esp+14h+var_C]
push	edx
push	offset dword_100A7970
push	esi
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_100449FA
cmp	[esi+18h], eax
jz	short loc_10044A0D
lea	eax, [esi+14h]
push	eax
push	offset dword_100A7930
lea	ecx, [esi+4]
push	ecx
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_10044A0D
			
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
			
pop	edi
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_DestroyUserNotice
			
mov	eax, [esp+arg_0] 
			
test	eax, eax
jz	short locret_10044A35
mov	eax, [eax]
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
retn
align 10h
public CERT_DecodeOidSequence
			
sub	esp, 0Ch
push	esi
push	edi
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10044AA5
push	8
push	esi
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10044A9A
mov	eax, [esp+14h+arg_0]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	esi
mov	[edi], esi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10044A9A
lea	edx, [esp+14h+var_C]
push	edx
push	offset dword_100A7AE0
push	edi
push	esi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_10044AAD
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
mov	eax, edi
pop	edi
pop	esi
add	esp, 0Ch
retn
align 10h
sub	esp, 0Ch
mov	ecx, [esp+0Ch+arg_0]
push	esi
push	edi
lea	eax, [esp+14h+var_C]
push	eax
push	5Ch
xor	edi, edi
push	ecx
mov	[esp+20h+var_8], edi
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jnz	short loc_10044B19
lea	edx, [esp+14h+var_C]
push	edx
call	CERT_DecodeOidSequence
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_10044B19
mov	esi, [edi+4]
test	esi, esi
jz	short loc_10044B19
lea	ecx, [ecx+0]
mov	eax, [esi]
test	eax, eax
jz	short loc_10044B19
push	eax
call	SECOID_FindOIDTag_Util
add	esp, 4
cmp	eax, 4Eh
jz	short loc_10044B45
add	esi, 4
jnz	short loc_10044B00
			
xor	esi, esi
test	edi, edi
jz	short loc_10044B2C
mov	eax, [edi]
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, [esp+14h+var_8]
test	eax, eax
jz	short loc_10044B3D
push	eax
call	PORT_Free_Util
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
mov	esi, 1
jmp	short loc_10044B1B
align 10h
public CERT_EncodePolicyConstraintsExtension
mov	ecx, [esp+arg_4]
push	esi
xor	esi, esi
test	ecx, ecx
jz	short loc_10044B82
mov	eax, [esp+4+arg_8]
test	eax, eax
jz	short loc_10044B82
push	offset dword_100A7A90
push	ecx
push	eax
mov	eax, [esp+10h+arg_0]
push	eax
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10044B7E
or	esi, 0FFFFFFFFh
mov	eax, esi
pop	esi
retn
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public CERT_EncodePolicyMappingExtension
mov	ecx, [esp+arg_4]
push	esi
xor	esi, esi
test	ecx, ecx
jz	short loc_10044BC2
mov	eax, [esp+4+arg_8]
test	eax, eax
jz	short loc_10044BC2
push	offset dword_100A7A80
push	ecx
push	eax
mov	eax, [esp+10h+arg_0]
push	eax
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10044BBE
or	esi, 0FFFFFFFFh
mov	eax, esi
pop	esi
retn
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public CERT_EncodeCertPoliciesExtension
mov	ecx, [esp+arg_4]
push	esi
xor	esi, esi
test	ecx, ecx
jz	short loc_10044C02
mov	eax, [esp+4+arg_8]
test	eax, eax
jz	short loc_10044C02
push	offset dword_100A7A30
push	ecx
push	eax
mov	eax, [esp+10h+arg_0]
push	eax
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10044BFE
or	esi, 0FFFFFFFFh
mov	eax, esi
pop	esi
retn
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public CERT_EncodeUserNotice
mov	ecx, [esp+arg_4]
push	esi
xor	esi, esi
test	ecx, ecx
jz	short loc_10044C42
mov	eax, [esp+4+arg_8]
test	eax, eax
jz	short loc_10044C42
push	offset dword_100A7970
push	ecx
push	eax
mov	eax, [esp+10h+arg_0]
push	eax
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10044C3E
or	esi, 0FFFFFFFFh
mov	eax, esi
pop	esi
retn
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public CERT_EncodeNoticeReference
mov	ecx, [esp+arg_4]
push	esi
xor	esi, esi
test	ecx, ecx
jz	short loc_10044C82
mov	eax, [esp+4+arg_8]
test	eax, eax
jz	short loc_10044C82
push	offset dword_100A7930
push	ecx
push	eax
mov	eax, [esp+10h+arg_0]
push	eax
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10044C7E
or	esi, 0FFFFFFFFh
mov	eax, esi
pop	esi
retn
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
public CERT_EncodeInhibitAnyExtension
mov	ecx, [esp+arg_4]
push	esi
xor	esi, esi
test	ecx, ecx
jz	short loc_10044CC2
mov	eax, [esp+4+arg_8]
test	eax, eax
jz	short loc_10044CC2
push	offset dword_100A7AD0
push	ecx
push	eax
mov	eax, [esp+10h+arg_0]
push	eax
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10044CBE
or	esi, 0FFFFFFFFh
mov	eax, esi
pop	esi
retn
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
			
push	esi
xor	esi, esi
mov	eax, ecx
test	ecx, ecx
jz	short loc_10044D05
cmp	[ecx], esi
jz	short loc_10044CE9
lea	ecx, [ecx+0]
add	eax, 4
inc	esi
cmp	dword ptr [eax], 0
jnz	short loc_10044CE0
lea	eax, ds:8[esi*4]
push	eax
lea	eax, ds:4[esi*4]
push	eax
push	ecx
push	edx
call	PORT_ArenaGrow_Util
add	esp, 10h
jmp	short loc_10044D10
push	8
push	edx
call	PORT_ArenaAlloc_Util
add	esp, 8
test	eax, eax
jz	short loc_10044D23
mov	ecx, [esp+4+arg_0]
mov	[eax+esi*4], ecx
mov	dword ptr [eax+esi*4+4], 0
pop	esi
retn
align 10h
public CERT_GetAVATag
			
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+4], 0
jz	short loc_10044D4B
push	eax
call	SECOID_FindOID_Util
add	esp, 4
test	eax, eax
jz	short loc_10044D4B
mov	eax, [eax+0Ch]
retn
			
or	eax, 0FFFFFFFFh
retn
align 10h
			
push	ebp
mov	ebp, [esp+4+arg_4]
push	edi
mov	edi, eax
push	edi
call	SECOID_FindOIDByTag_Util
add	esp, 4
test	eax, eax
jnz	short loc_10044D6B
pop	edi
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	ebx
mov	ebx, [eax+4]
push	esi
mov	esi, [eax+8]
push	edi
call	sub_1003A020
mov	edi, eax
add	esp, 4
test	edi, edi
jns	short loc_10044D97
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	ebx
pop	edi
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	eax, [esp+10h+arg_0]
push	esi
push	eax
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[ebp+4], eax
test	eax, eax
jz	short loc_10044D8F
push	esi		
push	ebx		
push	eax		
mov	[ebp+8], esi
call	memcpy
mov	ecx, [esp+1Ch+arg_8]
add	esp, 0Ch
pop	esi
pop	ebx
mov	[ecx], edi
pop	edi
xor	eax, eax
pop	ebp
retn
align 10h
			
push	ecx
push	ebx
push	ebp
mov	ebp, [eax+4]
push	esi
mov	esi, [eax+8]
mov	eax, [esp+10h+arg_4]
add	eax, 0FFFFFFF4h	
push	edi
mov	[esp+14h+Size],	0
cmp	eax, 10h
ja	loc_10044E8E	
movzx	eax, ds:byte_10044EB0[eax]
jmp	ds:off_10044EA4[eax*4] 
			
mov	ecx, [esp+14h+arg_0] 
lea	edi, [esi+esi*2]
add	edi, edi
push	edi
push	ecx
call	PORT_ArenaZAlloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_10044E8E 
lea	edx, [esp+14h+Size]
push	edx
push	edi
push	ebx
push	esi
push	ebp
push	1
call	PORT_UCS4_UTF8Conversion
add	esp, 18h
test	eax, eax
jz	short loc_10044E8E 
mov	eax, [esp+14h+arg_C]
mov	esi, [esp+14h+Size]
add	eax, eax
mov	ebp, ebx
add	eax, eax
jmp	short loc_10044E45
			
mov	eax, [esp+14h+arg_C] 
cmp	esi, eax
ja	short loc_10044E8E 
push	esi
call	DER_LengthLength
mov	ecx, [esp+18h+arg_0]
lea	edi, [eax+esi+1]
push	edi
push	ecx
call	PORT_ArenaAlloc_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10044E9B
mov	edx, [esp+14h+arg_4]
mov	ecx, [esp+14h+arg_8]
push	esi
push	edx
push	eax
mov	[ecx+4], eax
mov	[ecx+8], edi
call	DER_StoreHeader
push	esi		
push	ebp		
push	eax		
call	memcpy
add	esp, 18h
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
			
push	0FFFFE005h	
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
dd offset loc_10044E01	
dd offset loc_10044E8E
db	2,     2,     2,     0 
db	0,     2,     0,     2
db	2,     2,     2,     2
db	1
align 10h
push	esi
push	edi
mov	edi, [esp+8+arg_0]
push	18h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10044F15
mov	eax, [esp+8+arg_4]
push	eax
push	esi
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10044EFF
pop	edi
xor	eax, eax
pop	esi
retn
mov	ecx, [esp+8+arg_8]
push	ecx
lea	edx, [esi+0Ch]
push	edx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10044EFA
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
push	ecx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
push	18h
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10044F74
lea	eax, [esp+0Ch+var_4]
push	eax
mov	eax, [esp+10h+arg_4]
push	esi
push	edi
call	sub_10044D50
add	esp, 0Ch
test	eax, eax
jz	short loc_10044F55
pop	edi
xor	eax, eax
pop	esi
pop	ecx
retn
mov	ecx, [esp+0Ch+var_4]
mov	eax, [esp+0Ch+arg_8]
push	ecx
lea	edx, [esi+0Ch]
push	edx
push	eax
mov	eax, [esp+18h+arg_C]
push	edi
call	sub_10044DD0
add	esp, 10h
test	eax, eax
jnz	short loc_10044F4F
pop	edi
mov	eax, esi
pop	esi
pop	ecx
retn
align 10h
public CERT_CreateAVA
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_C]
mov	[esp+0Ch+var_C], 0
mov	[esp+0Ch+var_8], eax
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_10044F95
push	esi
push	edi
mov	edi, [esp+14h+arg_0]
sub	eax, edx
push	18h
push	edi
mov	[esp+1Ch+var_4], eax
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10044FF7
lea	eax, [esp+14h+arg_C]
push	eax
mov	eax, [esp+18h+arg_4]
push	esi
push	edi
call	sub_10044D50
add	esp, 0Ch
test	eax, eax
jz	short loc_10044FD8
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
mov	ecx, [esp+14h+arg_C]
mov	eax, [esp+14h+arg_8]
push	ecx
lea	edx, [esi+0Ch]
push	edx
push	eax
push	edi
lea	eax, [esp+24h+var_C]
call	sub_10044DD0
add	esp, 10h
test	eax, eax
jnz	short loc_10044FD0
pop	edi
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_CreateRDN
			
			
push	ebx
mov	ebx, [esp+4+arg_0]
push	ebp
push	esi
push	edi
push	4
push	ebx
call	PORT_ArenaAlloc_Util
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	short loc_10045084
mov	edi, [esp+10h+arg_4]
mov	esi, [esp+10h+arg_8]
xor	eax, eax
test	edi, edi
jz	short loc_1004503D
mov	eax, 1
test	esi, esi
jz	short loc_1004503D
lea	ecx, [esp+10h+arg_8]
add	ecx, 4
inc	eax
cmp	dword ptr [ecx], 0
jnz	short loc_10045034
			
lea	eax, ds:4[eax*4]
push	eax
push	ebx
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[ebp+0], eax
test	eax, eax
jnz	short loc_1004505A
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
test	edi, edi
jz	short loc_1004507E
mov	[eax], edi
add	eax, 4
mov	ecx, esi
test	esi, esi
jz	short loc_1004507E
lea	edx, [esp+10h+arg_8]
lea	ecx, [ecx+0]
add	edx, 4
mov	[eax], ecx
mov	ecx, [edx]
add	eax, 4
test	ecx, ecx
jnz	short loc_10045070
			
mov	dword ptr [eax], 0
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
mov	eax, [esp+arg_8]
mov	edx, [esp+arg_0]
push	esi
mov	esi, [esp+4+arg_4]
mov	ecx, [esi]
push	eax
call	sub_10044CD0
mov	[esi], eax
add	esp, 4
neg	eax
sbb	eax, eax
neg	eax
dec	eax
pop	esi
retn
align 10h
public CERT_CopyRDN
			
mov	ecx, [esp+arg_8]
mov	ecx, [ecx]
xor	eax, eax
push	esi
test	ecx, ecx
jz	loc_100451C4
cmp	[ecx], eax
jnz	short loc_100450F3
mov	esi, [esp+4+arg_4]
mov	ecx, [esi]
mov	edx, [esp+4+arg_0]
push	eax
call	sub_10044CD0
mov	[esi], eax
add	esp, 4
neg	eax
sbb	eax, eax
neg	eax
dec	eax
pop	esi
retn
mov	esi, [ecx]
test	esi, esi
jz	loc_100451C4
push	ebx
mov	ebx, [esp+8+arg_0]
push	edi
add	ecx, 4
push	18h
push	ebx
mov	[esp+14h+arg_8], ecx
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_100451BF
push	esi
push	edi
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	loc_100451BF
add	esi, 0Ch
push	esi
lea	edx, [edi+0Ch]
push	edx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_100451BF
mov	eax, [esp+0Ch+arg_4]
mov	ecx, [eax]
xor	esi, esi
mov	eax, ecx
test	ecx, ecx
jz	short loc_10045185
cmp	[ecx], esi
jz	short loc_10045169
lea	esp, [esp+0]
add	eax, 4
inc	esi
cmp	dword ptr [eax], 0
jnz	short loc_10045160
lea	edx, ds:8[esi*4]
push	edx
lea	eax, ds:4[esi*4]
push	eax
push	ecx
push	ebx
call	PORT_ArenaGrow_Util
add	esp, 10h
jmp	short loc_10045190
push	8
push	ebx
call	PORT_ArenaAlloc_Util
add	esp, 8
test	eax, eax
jz	short loc_1004519F
mov	[eax+esi*4], edi
mov	dword ptr [eax+esi*4+4], 0
mov	ecx, [esp+0Ch+arg_4]
mov	[ecx], eax
neg	eax
sbb	eax, eax
neg	eax
dec	eax
jnz	short loc_100451C2
mov	edx, [esp+0Ch+arg_8]
mov	esi, [edx]
test	esi, esi
jz	short loc_100451C2
mov	ecx, edx
jmp	loc_10045103
			
or	eax, 0FFFFFFFFh
			
pop	edi
pop	ebx
			
pop	esi
retn
align 10h
public NSS_Get_CERT_NameTemplate
mov	eax, offset dword_100A7B50
retn
align 10h
public CERT_CreateName
			
push	ecx
push	edi
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_100451F8
pop	edi
pop	ecx
retn
push	ebx
push	ebp
push	esi
push	8
push	edi
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[esp+14h+var_4], eax
test	eax, eax
jz	loc_10045298
mov	ebp, [esp+14h+arg_0]
mov	ebx, [esp+14h+arg_4]
mov	[eax], edi
test	ebp, ebp
jnz	short loc_10045224
xor	esi, esi
jmp	short loc_1004523A
mov	esi, 1
test	ebx, ebx
jz	short loc_1004523A
lea	eax, [esp+14h+arg_4]
add	eax, 4
inc	esi
cmp	dword ptr [eax], 0
jnz	short loc_10045231
			
lea	eax, ds:4[esi*4]
push	eax
push	edi
call	PORT_ArenaAlloc_Util
mov	ecx, [esp+1Ch+var_4]
add	esp, 8
mov	[ecx+4], eax
test	eax, eax
jnz	short loc_10045268
push	eax
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	ebp
pop	ebx
xor	eax, eax
pop	edi
pop	ecx
retn
test	esi, esi
jz	short loc_1004528E
mov	[eax], ebp
add	eax, 4
mov	ecx, ebx
test	ebx, ebx
jz	short loc_1004528E
lea	edx, [esp+14h+arg_4]
jmp	short loc_10045280
align 10h
			
add	edx, 4
mov	[eax], ecx
mov	ecx, [edx]
add	eax, 4
test	ecx, ecx
jnz	short loc_10045280
			
mov	dword ptr [eax], 0
mov	eax, [esp+14h+var_4]
pop	esi
pop	ebp
pop	ebx
pop	edi
pop	ecx
retn
align 10h
public CERT_DestroyName
			
			
mov	eax, [esp+arg_0]
test	eax, eax
jz	short locret_100452C6
mov	ecx, [eax]
mov	dword ptr [eax+4], 0
mov	dword ptr [eax], 0
test	ecx, ecx
jz	short locret_100452C6
push	0
push	ecx
call	PORT_FreeArena_Util
add	esp, 8
			
retn
align 10h
public CERT_AddRDN
			
			
mov	eax, [esp+arg_4]
push	esi
mov	esi, [esp+4+arg_0]
mov	ecx, [esi+4]
mov	edx, [esi]
push	eax
call	sub_10044CD0
mov	[esi+4], eax
add	esp, 4
neg	eax
sbb	eax, eax
neg	eax
dec	eax
pop	esi
retn
align 10h
public CERT_CopyName
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_4]
xor	ebx, ebx
cmp	edi, ebx
jz	loc_100453DA
mov	esi, [esp+0Ch+arg_8]
cmp	esi, ebx
jz	loc_100453DA
mov	eax, [edi]
mov	[edi+4], ebx
mov	[edi], ebx
cmp	eax, ebx
jz	short loc_10045332
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	edx, [esp+0Ch+arg_0]
mov	[edi], edx
mov	eax, [esi+4]
cmp	eax, ebx
jz	loc_100453D4
cmp	[eax], ebx
jnz	short loc_10045361
mov	ecx, [edi+4]
push	ebx
call	sub_10044CD0
add	esp, 4
mov	[edi+4], eax
neg	eax
sbb	eax, eax
pop	edi
neg	eax
pop	esi
dec	eax
pop	ebx
retn
push	ebp
mov	ebp, [eax]
cmp	ebp, ebx
jz	short loc_100453D3
jmp	short loc_10045378
align 10h
mov	edx, [esp+10h+arg_0]
mov	eax, [esp+10h+arg_4]
add	eax, 4
push	0
push	edx
mov	[esp+18h+arg_4], eax
call	CERT_CreateRDN
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100453D0
mov	eax, [esp+10h+arg_0]
push	ebp
push	esi
push	eax
call	CERT_CopyRDN
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jnz	short loc_100453D3
mov	ecx, [edi+4]
mov	edx, [edi]
push	esi
call	sub_10044CD0
mov	[edi+4], eax
add	esp, 4
neg	eax
sbb	eax, eax
neg	eax
dec	eax
mov	ebx, eax
jnz	short loc_100453D3
mov	ecx, [esp+10h+arg_4]
mov	ebp, [ecx]
test	ebp, ebp
jnz	short loc_10045370
pop	ebp
pop	edi
pop	esi
pop	ebx
retn
or	ebx, 0FFFFFFFFh
			
pop	ebp
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
			
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
push	esi
mov	esi, [ebp+8]
push	edi
test	esi, esi
jle	short loc_10045423
mov	eax, [ebp+4]
lea	ecx, [eax+esi-1]
movzx	eax, byte ptr [ecx]
cmp	eax, 20h
jz	short loc_1004541D
cmp	eax, 9
jz	short loc_1004541D
cmp	eax, 0Dh
jz	short loc_1004541D
cmp	eax, 0Ah
jnz	short loc_10045423
			
dec	esi
dec	ecx
test	esi, esi
jg	short loc_10045406
			
xor	ecx, ecx
test	esi, esi
jle	short loc_1004544D
mov	edx, [ebp+4]
lea	esp, [esp+0]
movzx	eax, byte ptr [edx+ecx]
cmp	eax, 20h
jz	short loc_10045448
cmp	eax, 9
jz	short loc_10045448
cmp	eax, 0Dh
jz	short loc_10045448
cmp	eax, 0Ah
jnz	short loc_1004544D
			
inc	ecx
cmp	ecx, esi
jl	short loc_10045430
			
xor	edi, edi
lea	ebx, [edi+20h]
cmp	ecx, esi
jge	short loc_10045492
mov	edx, [ebp+4]
movzx	eax, byte ptr [edx+ecx]
inc	ecx
cmp	eax, 20h
jz	short loc_1004547F
cmp	eax, 9
jz	short loc_1004547F
cmp	eax, 0Dh
jz	short loc_1004547F
cmp	eax, 0Ah
jz	short loc_1004547F
lea	ebx, [eax-41h]
cmp	ebx, 19h
ja	short loc_10045488
or	eax, 20h
jmp	short loc_10045488
			
mov	eax, 20h
cmp	ebx, eax
jz	short loc_1004548E
			
mov	[edx+edi], al
mov	ebx, eax
inc	edi
cmp	ecx, esi
jl	short loc_10045456
mov	[ebp+8], edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
public CERT_DecodeAVAValue
			
sub	esp, 0Ch
push	ebx
push	ebp
mov	ebp, [esp+14h+arg_0]
push	edi
xor	edi, edi
xor	ebx, ebx
mov	[esp+18h+var_C], edi
mov	[esp+18h+var_8], edi
mov	[esp+18h+var_4], edi
cmp	ebp, edi
jz	loc_10045684
cmp	[ebp+8], edi
jz	loc_10045684
mov	eax, [ebp+4]
cmp	eax, edi
jz	loc_10045684
movzx	eax, byte ptr [eax]
add	eax, 0FFFFFFF4h	
push	esi
cmp	eax, 12h
ja	loc_1004566D	
movzx	eax, ds:byte_100456B8[eax]
jmp	ds:off_1004569C[eax*4] 
			
push	edi		
push	edi
mov	ebx, 1
call	NSS_Get_SEC_UniversalStringTemplate
jmp	short loc_10045537
			
push	edi		
push	edi
call	NSS_Get_SEC_IA5StringTemplate_Util
jmp	short loc_10045537
			
push	edi		
push	edi
call	NSS_Get_SEC_PrintableStringTemplate
jmp	short loc_10045537
			
push	edi		
push	edi
mov	ebx, 3
call	NSS_Get_SEC_T61StringTemplate
jmp	short loc_10045537
			
push	edi		
push	edi
mov	ebx, 2
call	NSS_Get_SEC_BMPStringTemplate_Util
jmp	short loc_10045537
			
push	edi		
push	edi
call	NSS_Get_SEC_UTF8StringTemplate_Util
			
mov	esi, eax
xor	eax, eax
add	esp, 8
push	800h
mov	[esp+20h+var_C], eax
mov	[esp+20h+var_8], eax
mov	[esp+20h+var_4], eax
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_1004557C
push	ebp
push	esi
lea	ecx, [esp+24h+var_C]
push	ecx
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_10045586
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 8
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
test	ebx, ebx
jz	loc_1004564C
mov	eax, [esp+1Ch+var_4]
lea	eax, [eax+eax*2]
push	eax
push	edi
mov	[esp+24h+arg_0], eax
call	PORT_ArenaZAlloc_Util
mov	esi, eax
mov	eax, ebx
add	esp, 8
dec	eax
jz	short loc_10045619
dec	eax
jz	short loc_100455D3
dec	eax
jnz	loc_10045640
mov	eax, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+var_4]
lea	edx, [esp+1Ch+arg_0]
push	edx
mov	edx, [esp+20h+var_8]
push	eax
push	esi
push	ecx
push	edx
call	PORT_ISO88591_UTF8Conversion
add	esp, 14h
jmp	short loc_100455F6
mov	eax, [esp+1Ch+var_4]
test	al, 1
jnz	short loc_100455FA
mov	edx, [esp+1Ch+arg_0]
lea	ecx, [esp+1Ch+arg_0]
push	ecx
push	edx
push	esi
push	eax
mov	eax, [esp+2Ch+var_8]
push	eax
push	0
call	PORT_UCS2_UTF8Conversion_Util
add	esp, 18h
test	eax, eax
jnz	short loc_10045640
			
push	0
push	edi
call	PORT_FreeArena_Util
push	0FFFFE007h
call	PORT_SetError_Util
add	esp, 0Ch
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
mov	eax, [esp+1Ch+var_4]
test	al, 3
jnz	short loc_100455FA
mov	edx, [esp+1Ch+arg_0]
lea	ecx, [esp+1Ch+arg_0]
push	ecx
push	edx
push	esi
push	eax
mov	eax, [esp+2Ch+var_8]
push	eax
push	0
call	PORT_UCS4_UTF8Conversion
add	esp, 18h
test	eax, eax
jz	short loc_100455FA
			
mov	ecx, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_8], esi
mov	[esp+1Ch+var_4], ecx
lea	edx, [esp+1Ch+var_C]
push	edx
call	SECITEM_DupItem_Util
push	0
push	edi
mov	esi, eax
call	PORT_FreeArena_Util
add	esp, 0Ch
mov	eax, esi
pop	esi
pop	edi
pop	ebp
pop	ebx
add	esp, 0Ch
retn
			
			
push	0FFFFE007h	
call	PORT_SetError_Util
add	esp, 4
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
			
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 4
dd offset loc_1004550B	
dd offset loc_10045514
dd offset loc_10045502
dd offset loc_100454F4
dd offset loc_10045522
dd offset loc_1004566D
db	6,     6,     6,     1 
db	2,     6,     3,     6
db	6,     6,     6,     6
db	4,     6,     5
align 10h
mov	eax, [esp+arg_0]
push	ebx
push	esi
push	edi
push	eax
or	ebx, 0FFFFFFFFh
call	CERT_DecodeAVAValue
mov	ecx, [esp+10h+arg_4]
push	ecx
mov	esi, eax
call	CERT_DecodeAVAValue
add	esp, 8
mov	edi, eax
test	esi, esi
jz	short loc_10045729
cmp	dword ptr [esi+8], 0
jz	short loc_10045729
cmp	dword ptr [esi+4], 0
jz	short loc_10045729
test	edi, edi
jz	short loc_10045729
cmp	dword ptr [edi+8], 0
jz	short loc_10045729
cmp	dword ptr [edi+4], 0
jz	short loc_10045729
push	esi
call	sub_100453F0
push	edi
call	sub_100453F0
push	edi
push	esi
call	SECITEM_CompareItem_Util
add	esp, 10h
mov	ebx, eax
			
push	1
push	esi
call	SECITEM_FreeItem_Util
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 10h
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
			
push	ecx
push	ebp
mov	ebp, [esp+8+arg_4]
push	esi
mov	esi, [esp+0Ch+arg_0]
push	ebp
push	esi
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	loc_1004582C
push	ebx
push	edi
lea	edi, [ebp+0Ch]
lea	ebx, [esi+0Ch]
push	edi
push	ebx
call	SECITEM_CompareItem_Util
add	esp, 8
mov	[esp+14h+var_4], eax
test	eax, eax
jnz	short loc_1004578D
pop	edi
pop	ebx
pop	esi
pop	ebp
pop	ecx
retn
cmp	dword ptr [esi+14h], 0
jz	loc_10045826
mov	esi, [esi+10h]
test	esi, esi
jz	loc_10045826
cmp	dword ptr [ebp+14h], 0
jz	short loc_10045826
mov	ebp, [ebp+10h]
test	ebp, ebp
jz	short loc_10045826
mov	al, [esi]
cmp	al, [ebp+0]
jz	short loc_10045814
push	ebx
call	CERT_DecodeAVAValue
push	edi
mov	esi, eax
call	CERT_DecodeAVAValue
add	esp, 8
mov	edi, eax
test	esi, esi
jz	short loc_100457F7
cmp	dword ptr [esi+8], 0
jz	short loc_100457F7
cmp	dword ptr [esi+4], 0
jz	short loc_100457F7
test	edi, edi
jz	short loc_100457F7
cmp	dword ptr [edi+8], 0
jz	short loc_100457F7
cmp	dword ptr [edi+4], 0
jz	short loc_100457F7
push	edi
push	esi
call	SECITEM_CompareItem_Util
add	esp, 8
mov	[esp+14h+var_4], eax
			
push	1
push	esi
call	SECITEM_FreeItem_Util
push	1
push	edi
call	SECITEM_FreeItem_Util
mov	eax, [esp+24h+var_4]
add	esp, 10h
pop	edi
pop	ebx
pop	esi
pop	ebp
pop	ecx
retn
cmp	al, 13h
jnz	short loc_10045826
push	edi
push	ebx
call	sub_100456D0
add	esp, 8
mov	[esp+14h+var_4], eax
			
mov	eax, [esp+14h+var_4]
pop	edi
pop	ebx
pop	esi
pop	ebp
pop	ecx
retn
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
push	ebp
mov	ebp, [eax]
xor	edx, edx
push	esi
mov	esi, [ecx]
mov	eax, ebp
test	ebp, ebp
jz	short loc_10045859
cmp	[ebp+0], edx
jz	short loc_10045859
jmp	short loc_10045850
align 10h
			
add	eax, 4
inc	edx
cmp	dword ptr [eax], 0
jnz	short loc_10045850
			
xor	ecx, ecx
mov	eax, esi
test	esi, esi
jz	short loc_1004586E
cmp	[esi], ecx
jz	short loc_1004586E
add	eax, 4
inc	ecx
cmp	dword ptr [eax], 0
jnz	short loc_10045865
			
cmp	edx, ecx
jge	short loc_10045878
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
jle	short loc_10045882
pop	esi
mov	eax, 1
pop	ebp
retn
push	ebx
mov	ebx, [ebp+0]
push	edi
test	ebx, ebx
jz	short loc_100458DA
jmp	short loc_10045890
align 10h
			
mov	edx, [esp+10h+arg_4]
mov	edi, [edx]
mov	esi, [edi]
add	ebp, 4
test	esi, esi
jz	short loc_100458B7
nop
push	esi
push	ebx
add	edi, 4
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jz	short loc_100458C1
mov	esi, [edi]
test	esi, esi
jnz	short loc_100458A0
			
pop	edi
pop	ebx
pop	esi
mov	eax, 1
pop	ebp
retn
push	esi
push	ebx
call	sub_10045750
add	esp, 8
test	eax, eax
jnz	short loc_100458DC
test	esi, esi
jz	short loc_100458B7
mov	ebx, [ebp+0]
test	ebx, ebx
jnz	short loc_10045890
xor	eax, eax
pop	edi
pop	ebx
pop	esi
pop	ebp
retn
align 10h
public CERT_CompareName
			
mov	eax, [esp+arg_0]
mov	ecx, [esp+arg_4]
push	esi
mov	esi, [eax+4]
xor	edx, edx
push	edi
mov	edi, [ecx+4]
mov	eax, esi
test	esi, esi
jz	short loc_10045919
cmp	[esi], edx
jz	short loc_10045919
lea	esp, [esp+0]
add	eax, 4
inc	edx
cmp	dword ptr [eax], 0
jnz	short loc_10045910
			
xor	ecx, ecx
mov	eax, edi
test	edi, edi
jz	short loc_1004592E
cmp	[edi], ecx
jz	short loc_1004592E
add	eax, 4
inc	ecx
cmp	dword ptr [eax], 0
jnz	short loc_10045925
			
cmp	edx, ecx
jge	short loc_10045938
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
jle	short loc_10045942
pop	edi
mov	eax, 1
pop	esi
retn
mov	eax, [esi]
mov	ecx, [edi]
add	esi, 4
add	edi, 4
test	eax, eax
jz	short loc_1004596C
push	ecx
push	eax
call	sub_10045830
add	esp, 8
test	eax, eax
jnz	short loc_1004596E
mov	eax, [esi]
mov	ecx, [edi]
add	esi, 4
add	edi, 4
test	eax, eax
jnz	short loc_10045950
xor	eax, eax
pop	edi
pop	esi
retn
align 10h
public CERT_EncodeAuthKeyID
push	ebx
push	esi
mov	esi, [esp+8+arg_4]
mov	eax, [esi+0Ch]
or	ebx, 0FFFFFFFFh
push	edi
mov	edi, [esp+0Ch+arg_0]
test	eax, eax
jz	short loc_100459BF
cmp	dword ptr [esi+14h], 0
jz	short loc_100459AC
push	eax
push	edi
call	sub_10041E00
add	esp, 8
mov	[esi+1Ch], eax
test	eax, eax
jnz	short loc_100459C5
			
push	0FFFFE022h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
cmp	dword ptr [esi+14h], 0
jnz	short loc_100459AC
mov	eax, [esp+0Ch+arg_8]
push	offset dword_100A7B68
push	esi
push	eax
push	edi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_100459B9
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
align 10h
public CERT_DecodeAuthKeyID
			
sub	esp, 0Ch
push	ebx
push	esi
push	edi
mov	edi, [esp+18h+arg_0]
push	edi
call	PORT_ArenaMark_Util
push	20h
push	edi
mov	ebx, eax
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10045A83
mov	eax, [esp+18h+arg_4]
push	eax
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	edi
mov	dword ptr [esi+1Ch], 0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10045A83
lea	edx, [esp+18h+var_C]
push	edx
push	offset dword_100A7B68
push	esi
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10045A83
mov	eax, [esi+1Ch]
push	eax
push	edi
call	sub_100420B0
add	esp, 8
mov	[esi+0Ch], eax
test	eax, eax
jz	short loc_10045A70
cmp	dword ptr [esi+14h], 0
jnz	short loc_10045A70
push	0FFFFE022h
call	PORT_SetError_Util
add	esp, 4
			
push	ebx
push	edi
call	PORT_ArenaUnmark_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 0Ch
retn
			
push	ebx
push	edi
call	PORT_ArenaRelease_Util
add	esp, 8
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
align 10h
public CERT_EncodeBasicConstraintValue
sub	esp, 28h
xor	eax, eax
push	ebx
push	esi
push	edi
mov	edi, [esp+34h+arg_4]
mov	[esp+34h+var_28], eax
mov	[esp+34h+var_24], eax
mov	[esp+34h+var_20], eax
mov	[esp+34h+var_1C], eax
mov	[esp+34h+var_18], eax
mov	[esp+34h+var_14], eax
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_C], eax
mov	[esp+34h+var_8], eax
mov	[esp+34h+var_4], eax
mov	eax, [edi]
xor	esi, esi
xor	ebx, ebx
test	eax, eax
jnz	short loc_10045AFA
cmp	[edi+4], ebx
jl	short loc_10045AFA
push	0FFFFE022h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 28h
retn
			
push	ebp
mov	ebp, [esp+38h+arg_0]
mov	[esp+38h+var_4], ebp
cmp	eax, 1
jnz	short loc_10045B14
mov	[esp+38h+var_24], offset dword_100BA670
mov	[esp+38h+var_20], eax
test	eax, eax
jz	short loc_10045B6D
cmp	[edi+4], ebx
jl	short loc_10045B6D
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10045B48
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
pop	ebp
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 28h
retn
mov	eax, [edi+4]
push	eax
lea	ecx, [esp+3Ch+var_1C]
push	ecx
push	esi
call	SEC_ASN1EncodeUnsignedInteger_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10045B6D
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
jmp	short loc_10045B89
			
mov	eax, [esp+38h+arg_8]
push	offset dword_100A7BB8
lea	edx, [esp+3Ch+var_28]
push	edx
push	eax
push	ebp
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10045B8C
or	ebx, 0FFFFFFFFh
test	esi, esi
jz	short loc_10045B9B
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
pop	ebp
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
add	esp, 28h
retn
align 10h
public CERT_DecodeBasicConstraintValue
			
sub	esp, 28h
xor	eax, eax
push	ebx
push	esi
mov	[esp+30h+var_24], eax
mov	[esp+30h+var_20], eax
push	800h
mov	[esp+34h+var_28], eax
mov	[esp+34h+var_1C], eax
mov	[esp+34h+var_18], eax
mov	[esp+34h+var_14], eax
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_C], eax
mov	[esp+34h+var_8], eax
mov	[esp+34h+var_4], eax
mov	[esp+34h+var_24], offset dword_100BAE3C
mov	[esp+34h+var_20], 1
call	PORT_NewArena_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_10045C24
push	0FFFFE013h
call	PORT_SetError_Util
add	esp, 4
push	ebx
push	ebx
or	esi, 0FFFFFFFFh
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, esi
pop	esi
pop	ebx
add	esp, 28h
retn
mov	eax, [esp+30h+arg_4]
push	eax
push	offset dword_100A7BB8
lea	ecx, [esp+38h+var_28]
push	ecx
push	ebx
call	SEC_QuickDERDecodeItem_Util
mov	esi, eax
add	esp, 10h
cmp	esi, 0FFFFFFFFh
jz	loc_10045CCD
mov	eax, [esp+30h+var_24]
test	eax, eax
jz	short loc_10045C5A
xor	edx, edx
cmp	[eax], dl
setnz	dl
mov	eax, edx
jmp	short loc_10045C5C
xor	eax, eax
cmp	[esp+30h+var_18], 0
push	edi
mov	edi, [esp+34h+arg_0]
mov	[edi], eax
jnz	short loc_10045C89
test	eax, eax
jz	short loc_10045CCC
mov	dword ptr [edi+4], 0FFFFFFFEh
pop	edi
push	0
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, esi
pop	esi
pop	ebx
add	esp, 28h
retn
test	eax, eax
jz	short loc_10045CBC
lea	eax, [esp+34h+var_1C]
push	eax
call	DER_GetInteger_Util
add	esp, 4
test	eax, eax
js	short loc_10045CBC
cmp	eax, 7FFFFFFFh
jz	short loc_10045CBC
mov	[edi+4], eax
pop	edi
push	0
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, esi
pop	esi
pop	ebx
add	esp, 28h
retn
			
push	0FFFFE009h
call	PORT_SetError_Util
add	esp, 4
or	esi, 0FFFFFFFFh
pop	edi
push	0
push	ebx
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, esi
pop	esi
pop	ebx
add	esp, 28h
retn
public CERT_EncodeSubjectKeyID
mov	eax, [esp+arg_4]
push	esi
xor	esi, esi
test	eax, eax
jnz	short loc_10045CFD
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [esp+4+arg_0]
push	offset dword_100A7BF8
push	eax
mov	eax, [esp+0Ch+arg_8]
push	eax
push	ecx
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10045D1C
or	esi, 0FFFFFFFFh
mov	eax, esi
pop	esi
retn
public CERT_DecodePrivKeyUsagePeriodExtension
sub	esp, 0Ch
push	esi
push	edi
mov	edi, [esp+14h+arg_0]
push	1Ch
push	edi
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10045D6C
mov	eax, [esp+14h+arg_4]
push	eax
lea	ecx, [esp+18h+var_C]
push	ecx
push	edi
mov	[esi+18h], edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jnz	short loc_10045D6C
lea	edx, [esp+14h+var_C]
push	edx
push	offset dword_100A7C20
push	esi
push	edi
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_10045D74
			
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
pop	edi
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
align 10h
public CERT_EncodeAltNameExtension
push	ecx
mov	eax, [esp+4+arg_4]
push	esi
mov	esi, [esp+8+arg_0]
push	edi
push	eax
push	esi
xor	edi, edi
call	sub_10041E00
mov	edx, [esp+14h+arg_8]
push	offset dword_100A77C8
lea	ecx, [esp+18h+var_4]
push	ecx
push	edx
push	esi
mov	[esp+24h+var_4], eax
call	SEC_ASN1EncodeItem_Util
add	esp, 18h
test	eax, eax
jnz	short loc_10045DBB
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
pop	ecx
retn
mov	eax, edi
pop	edi
pop	esi
pop	ecx
retn
align 10h
public CERT_DecodeAltNameExtension
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jnz	short loc_10045DEA
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
xor	eax, eax
pop	esi
retn
mov	eax, [esp+4+arg_4]
push	eax
push	esi
call	SECITEM_ArenaDupItem_Util
add	esp, 8
test	eax, eax
jz	short loc_10045E43
push	eax
push	offset dword_100A77C8
lea	ecx, [esp+0Ch+arg_0]
push	ecx
push	esi
mov	[esp+14h+arg_0], 0
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jz	short loc_10045E43
mov	eax, [esp+4+arg_0]
test	eax, eax
jz	short loc_10045E36
cmp	dword ptr [eax], 0
jz	short loc_10045E36
push	eax
push	esi
call	sub_100420B0
add	esp, 8
pop	esi
retn
			
push	0FFFFE023h
call	PORT_SetError_Util
add	esp, 4
			
xor	eax, eax
pop	esi
retn
align 10h
public CERT_EncodeNameConstraintsExtension
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_0]
mov	edx, [esp+arg_4]
push	eax
push	ecx
push	edx
call	sub_10042300
add	esp, 0Ch
retn
align 10h
align 10h
public CERT_DecodeAuthInfoAccessExtension
			
			
push	ecx
push	ebx
mov	ebx, [esp+8+arg_0]
mov	[esp+8+var_4], 0
test	ebx, ebx
jnz	short loc_10045EA4
push	0FFFFE005h
call	PORT_SetError_Util
add	esp, 4
			
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	eax, [esp+8+arg_4]
push	eax
push	ebx
call	SECITEM_ArenaDupItem_Util
add	esp, 8
test	eax, eax
jz	short loc_10045E9F
push	eax
push	offset dword_100A7CB0
lea	ecx, [esp+10h+var_4]
push	ecx
push	ebx
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
test	eax, eax
jnz	short loc_10045E9F
mov	eax, [esp+8+var_4]
test	eax, eax
jz	short loc_10045E9F
push	edi
xor	edi, edi
cmp	[eax], edi
jz	short loc_10045F12
push	esi
mov	ecx, eax
xor	esi, esi
mov	edx, [ecx]
push	0
add	edx, 0Ch
push	edx
push	ebx
call	CERT_DecodeGeneralName
mov	ecx, [esp+1Ch+var_4]
mov	edx, [esi+ecx]
inc	edi
mov	[edx+18h], eax
mov	eax, [esp+1Ch+var_4]
lea	esi, ds:0[edi*4]
lea	ecx, [esi+eax]
add	esp, 0Ch
cmp	dword ptr [ecx], 0
jnz	short loc_10045EE2
pop	esi
pop	edi
pop	ebx
pop	ecx
retn
align 10h
public CERT_EncodeInfoAccessExtension
mov	ecx, [esp+arg_4]
push	ebx
test	ecx, ecx
jz	short loc_10045F90
mov	ebx, [esp+4+arg_8]
test	ebx, ebx
jz	short loc_10045F90
push	esi
xor	esi, esi
push	edi
mov	edi, [esp+0Ch+arg_0]
cmp	[ecx], esi
jz	short loc_10045F6A
xor	eax, eax
nop
mov	eax, [eax+ecx]
mov	edx, [eax+18h]
push	edi
lea	ecx, [eax+0Ch]
push	ecx
push	edx
call	CERT_EncodeGeneralName
add	esp, 0Ch
test	eax, eax
jz	short loc_10045F89
mov	ecx, [esp+0Ch+arg_4]
inc	esi
lea	eax, ds:0[esi*4]
cmp	dword ptr [eax+ecx], 0
jnz	short loc_10045F40
push	offset dword_100A7CB0
lea	eax, [esp+10h+arg_4]
push	eax
push	ebx
push	edi
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
neg	eax
sbb	eax, eax
pop	edi
neg	eax
pop	esi
dec	eax
pop	ebx
retn
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
			
or	eax, 0FFFFFFFFh
pop	ebx
retn
align 10h
			
push	ecx
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_0]
push	esi
mov	esi, [ebp+0]
push	esi
mov	[esp+14h+arg_0], esi
call	sub_100508A0
push	58h
push	esi
mov	[esp+1Ch+var_4], eax
call	sub_100504B0
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jnz	short loc_10045FCF
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
push	edi
mov	ecx, 9
mov	esi, ebp
mov	edi, ebx
rep movsd
lea	ecx, [ebx+40h]
push	ecx
mov	ecx, [esp+18h+arg_0]
lea	eax, [ebx+48h]
push	eax
lea	edi, [ebx+38h]
push	edi
lea	esi, [ebx+30h]
push	esi
lea	edx, [ebx+28h]
push	edx
mov	edx, [ebp+10h]
lea	eax, [ebx+24h]
push	eax
mov	eax, [edx]
push	ecx
push	0
push	eax
call	sub_1004F8C0
add	esp, 24h
test	eax, eax
jnz	short loc_10046046
cmp	[esi], eax
jz	short loc_10046046
cmp	[ebx+34h], eax
jz	short loc_10046046
cmp	[edi], eax
jz	short loc_10046046
cmp	[ebx+3Ch], eax
jz	short loc_10046046
cmp	[ebx+48h], eax
jz	short loc_10046046
cmp	[ebx+4Ch], eax
jz	short loc_10046046
mov	eax, [esp+14h+var_4]
test	eax, eax
jz	short loc_1004603E
mov	ecx, [esp+14h+arg_0]
push	eax
push	ecx
call	sub_100503C0
add	esp, 8
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
pop	ecx
retn
			
mov	eax, [esp+14h+var_4]
test	eax, eax
jz	short loc_1004605C
mov	edx, [esp+14h+arg_0]
push	eax
push	edx
call	sub_100503A0
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
			
sub	esp, 20h
push	ebp
xor	ebp, ebp
push	esi
mov	esi, [esp+28h+arg_0]
mov	[esp+28h+var_20], ebp
mov	[esp+28h+var_1C], ebp
mov	[esp+28h+var_18], ebp
mov	[esp+28h+var_14], ebp
mov	[esp+28h+var_10], ebp
mov	[esp+28h+var_C], ebp
mov	[esp+28h+var_8], ebp
mov	[esp+28h+var_4], ebp
cmp	esi, ebp
jz	loc_10046155
mov	eax, [esi+54h]
push	ebx
push	edi
mov	[esp+30h+arg_0], eax
call	sub_1004A850
mov	ebx, [esi+1Ch]
mov	edi, eax
cmp	ebx, ebp
jz	short loc_100460CD
mov	edx, [ebx+14h]
lea	ecx, [esp+30h+var_20]
push	ecx
push	edx
call	sub_10048AB0
add	esp, 8
jmp	short loc_100460D6
push	edi
call	sub_10047B90
add	esp, 4
lea	eax, [esi+4]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_1004615D
push	esi
cmp	ebx, ebp
jz	short loc_1004610D
mov	ecx, [ebx+14h]
push	ecx
call	sub_10048A80
mov	ecx, [ebx+14h]
lea	edx, [esp+38h+var_10]
push	edx
lea	eax, [esp+3Ch+var_20]
push	eax
push	ecx
call	sub_10048AC0
add	esp, 14h
jmp	short loc_1004611C
push	edi
call	sub_10047AB0
push	edi
call	sub_10047BB0
add	esp, 0Ch
xor	edi, edi
cmp	[esi+14h], ebp
jbe	short loc_10046138
mov	edx, [esi+10h]
mov	eax, [edx+edi*4]
push	eax
call	sub_1004E6D0
inc	edi
add	esp, 4
cmp	edi, [esi+14h]
jb	short loc_10046123
push	esi
call	sub_100493C0
mov	ecx, [esi]
push	ecx
call	sub_10050840
mov	edx, [esp+38h+arg_0]
push	edx
call	sub_100488C0
add	esp, 0Ch
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
add	esp, 20h
retn
cmp	ebx, ebp
jz	short loc_10046181
mov	edx, [ebx+14h]
lea	eax, [esp+30h+var_10]
push	eax
lea	ecx, [esp+34h+var_20]
push	ecx
push	edx
call	sub_10048AC0
add	esp, 0Ch
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
add	esp, 20h
retn
push	edi
call	sub_10047BB0
add	esp, 4
pop	edi
pop	ebx
pop	esi
xor	eax, eax
pop	ebp
add	esp, 20h
retn
align 10h
			
jmp	sub_10046070
align 10h
mov	eax, [esp+arg_0]
cmp	dword ptr [eax+34h], 0
jbe	short loc_100461C2
add	eax, 30h
cmp	dword ptr [eax], 0
jnz	short locret_100461C4
xor	eax, eax
retn
align 10h
			
jmp	sub_10049860
align 10h
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	1
push	eax
push	ecx
call	sub_100496E0
add	esp, 0Ch
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+24h], 1
push	edi
jnz	short loc_10046215
push	esi
call	sub_1004B8F0
add	esp, 4
push	esi
call	sub_10049360
mov	edi, [esi+54h]
add	esp, 4
test	edi, edi
jnz	short loc_1004623B
mov	eax, [esi+24h]
push	eax
lea	ecx, [esi+30h]
push	ecx
push	edi
call	sub_100488A0
mov	edi, eax
add	esp, 0Ch
mov	[esi+54h], edi
push	esi
call	sub_10049390
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
sub	esp, 8
push	edi
xor	edi, edi
mov	[esp+0Ch+var_4], 2
mov	[esp+0Ch+var_8], ebx
cmp	[ebx], edi
jz	loc_10046363
push	ebp
push	esi
lea	esp, [esp+0]
mov	eax, [esp+14h+var_8]
mov	esi, [eax]
cmp	dword ptr [esi+24h], 1
jnz	short loc_10046285
push	esi
call	sub_1004B8F0
add	esp, 4
push	esi
call	sub_10049360
mov	ebp, [esi+54h]
add	esp, 4
test	ebp, ebp
jnz	short loc_100462AB
mov	ecx, [esi+24h]
push	ecx
lea	edx, [esi+30h]
push	edx
push	ebp
call	sub_100488A0
mov	ebp, eax
add	esp, 0Ch
mov	[esi+54h], ebp
push	esi
call	sub_10049390
add	esp, 4
test	ebp, ebp
jnz	short loc_100462C9
mov	eax, [esp+14h+var_8]
mov	ecx, [eax]
push	ecx
call	sub_10046070
add	esp, 4
jmp	short loc_1004633F
mov	edx, [esp+14h+arg_0]
mov	eax, [ebp+10h]
push	edx
push	ebp
call	eax
add	esp, 8
sub	eax, 0
jz	short loc_1004630A
sub	eax, 2
jnz	short loc_100462F3
cmp	[esp+14h+var_4], 2
jnz	short loc_100462F3
mov	ecx, [esp+14h+var_8]
mov	edx, [ecx]
mov	[ebx+edi*4], edx
jmp	short loc_1004633E
			
mov	esi, [esp+14h+var_8]
mov	eax, [esi]
push	eax
call	sub_10046070
add	esp, 4
mov	dword ptr [esi], 0
jmp	short loc_1004633F
cmp	[esp+14h+var_4], 2
jnz	short loc_10046335
xor	esi, esi
test	edi, edi
jle	short loc_1004632F
mov	ecx, [ebx+esi*4]
push	ecx
call	sub_10046070
mov	dword ptr [ebx+esi*4], 0
inc	esi
add	esp, 4
cmp	esi, edi
jl	short loc_10046317
xor	edi, edi
mov	[esp+14h+var_4], edi
mov	edx, [esp+14h+var_8]
mov	eax, [edx]
mov	[ebx+edi*4], eax
inc	edi
			
mov	eax, [esp+14h+var_8]
add	eax, 4
cmp	dword ptr [eax], 0
mov	[esp+14h+var_8], eax
jnz	loc_10046270
pop	esi
pop	ebp
mov	dword ptr [ebx+edi*4], 0
mov	eax, ebx
pop	edi
add	esp, 8
retn
mov	[ebx+edi*4], edi
mov	eax, ebx
pop	edi
add	esp, 8
retn
align 10h
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
xor	eax, eax
mov	[esp+8+arg_0], eax
mov	ebx, ebp
cmp	[ebp+0], eax
jz	loc_10046418
push	esi
push	edi
lea	esp, [esp+0]
mov	esi, [ebx]
cmp	dword ptr [esi+24h], 1
jnz	short loc_100463A1
push	esi
call	sub_1004B8F0
add	esp, 4
push	esi
call	sub_10049360
mov	edi, [esi+54h]
add	esp, 4
test	edi, edi
jnz	short loc_100463C7
mov	eax, [esi+24h]
push	eax
lea	ecx, [esi+30h]
push	ecx
push	edi
call	sub_100488A0
mov	edi, eax
add	esp, 0Ch
mov	[esi+54h], edi
push	esi
call	sub_10049390
add	esp, 4
test	edi, edi
jz	short loc_100463F2
mov	edx, [edi+14h]
push	edi
call	edx
add	esp, 4
test	eax, eax
jz	short loc_100463F2
mov	eax, [esp+10h+arg_0]
mov	ecx, [ebx]
mov	[ebp+eax*4+0], ecx
inc	eax
mov	[esp+10h+arg_0], eax
jmp	short loc_100463FD
			
mov	edx, [ebx]
push	edx
call	sub_10046070
add	esp, 4
add	ebx, 4
cmp	dword ptr [ebx], 0
jnz	short loc_10046390
mov	eax, [esp+10h+arg_0]
pop	edi
mov	dword ptr [ebp+eax*4+0], 0
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
mov	[ebp+eax*4+0], eax
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
push	ebp
push	edi
push	ebx
xor	ebp, ebp
call	sub_10049900
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_1004644C
pop	edi
pop	ebp
pop	ebx
retn
push	esi
mov	esi, edi
cmp	[edi], ebp
jz	short loc_10046474
mov	eax, [esi]
push	eax
mov	eax, [eax+4]
push	ebx
push	eax
call	sub_1004DE00
add	esp, 0Ch
test	eax, eax
jz	short loc_1004646C
mov	ebp, 1
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_10046453
push	edi
call	sub_1004E7F0
add	esp, 4
pop	esi
pop	edi
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
			
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
cmp	dword ptr [esi+24h], 1
push	edi
jnz	short loc_100464A6
push	esi
call	sub_1004B8F0
add	esp, 4
push	esi
call	sub_10049360
mov	ebx, [esi+54h]
add	esp, 4
test	ebx, ebx
jnz	short loc_100464CC
mov	eax, [esi+24h]
push	eax
lea	ecx, [esi+30h]
push	ecx
push	ebx
call	sub_100488A0
mov	ebx, eax
add	esp, 0Ch
mov	[esi+54h], ebx
push	esi
call	sub_10049390
mov	esi, [esp+10h+arg_4]
add	esp, 4
cmp	dword ptr [esi+24h], 1
jnz	short loc_100464E8
push	esi
call	sub_1004B8F0
add	esp, 4
push	esi
call	sub_10049360
mov	edi, [esi+54h]
add	esp, 4
test	edi, edi
jnz	short loc_1004650E
mov	edx, [esi+24h]
push	edx
lea	eax, [esi+30h]
push	eax
push	edi
call	sub_100488A0
mov	edi, eax
add	esp, 0Ch
mov	[esi+54h], edi
push	esi
call	sub_10049390
add	esp, 4
test	ebx, ebx
jnz	short loc_10046526
xor	eax, eax
test	edi, edi
pop	edi
pop	esi
setnz	al
pop	ebx
retn
test	edi, edi
jnz	short loc_10046531
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
mov	ecx, [ebx+20h]
push	edi
push	ebx
call	ecx
add	esp, 8
neg	eax
sbb	eax, eax
pop	edi
and	eax, 0FFFFFFFEh
pop	esi
inc	eax
pop	ebx
retn
align 10h
mov	eax, [esp+arg_0]
push	ebp
push	esi
mov	esi, [eax+18h]
push	edi
mov	edi, [eax+1Ch]
call	sub_100507B0
mov	ebp, eax
test	ebp, ebp
jnz	short loc_1004656C
pop	edi
pop	esi
pop	ebp
retn
push	ebx
push	1
push	edi
push	esi
push	0
push	ebp
call	sub_1004A230
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_100465A3
push	38h
push	ebp
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_100465B3
push	esi
call	sub_10049400
add	esp, 4
pop	ebx
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
push	ebp
call	sub_10050840
add	esp, 4
pop	ebx
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
mov	ecx, 9
mov	edi, ebx
rep movsd
mov	esi, [esp+10h+arg_0]
mov	[ebx+24h], esi
mov	eax, [esi+50h]
push	ebp		
push	eax		
call	sub_10050D50
push	0
push	ebp
add	esi, 40h
push	esi
mov	[ebx+28h], eax
call	sub_10050CE0
mov	[ebx+2Ch], eax
mov	eax, [esp+24h+arg_4]
add	esp, 14h
test	eax, eax
jz	short loc_100465F9
push	0
push	ebp
push	eax
call	sub_10050CE0
add	esp, 0Ch
mov	[ebx+30h], eax
mov	eax, [esp+10h+arg_8]
test	eax, eax
jz	short loc_10046610
push	0
push	ebp
push	eax
call	sub_10050CE0
add	esp, 0Ch
mov	[ebx+34h], eax
mov	eax, ebx
pop	ebx
pop	edi
pop	esi
pop	ebp
retn
align 10h
mov	eax, [esp+arg_0]
push	esi
push	eax
call	sub_100514A0
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10046639
or	eax, 0FFFFFFFFh
pop	esi
retn
push	esi
call	sub_100513C0
add	esp, 4
test	eax, eax
jz	short loc_10046663
push	ebx
mov	ebx, [esp+8+arg_4]
push	edi
mov	edi, [esp+0Ch+arg_8]
push	edi
push	eax
call	ebx
push	esi
call	sub_100513F0
add	esp, 0Ch
test	eax, eax
jnz	short loc_10046650
pop	edi
pop	ebx
push	esi
call	sub_10051430
push	esi
call	sub_10051510
add	esp, 8
xor	eax, eax
pop	esi
retn
align 10h
mov	eax, [esp+4]
test	eax, eax
jz	short loc_10046691
push	eax
call	sub_10049480
add	esp, 4
xor	eax, eax
retn
align 10h
			
mov	eax, [esp+arg_0]
push	0
push	offset loc_10046680
push	eax
call	sub_10046620
add	esp, 0Ch
retn
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
push	ebx
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
mov	esi, [esp+60h+arg_0]
mov	eax, [esi]
push	3Ch
push	eax
mov	[esp+68h+var_54], esi
mov	[esp+68h+var_50], 10000h
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_1004670A
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+54h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
push	edi
mov	ecx, 9
mov	edi, ebx
rep movsd
mov	ecx, [ebp+4]
mov	edx, [ebp+0]
push	ecx
push	edx
lea	eax, [esp+6Ch+var_18]
push	eax
push	4
call	PK11_HashBuf
add	esp, 10h
test	eax, eax
jnz	loc_100467F2
mov	esi, [esp+64h+var_54]
lea	ecx, [esp+64h+var_2C]
push	esi
mov	[esp+68h+var_34], ecx
mov	[esp+68h+var_30], 14h
call	sub_10049360
xor	ebp, ebp
add	esp, 4
mov	[esp+64h+var_48], ebp
cmp	[esi+14h], ebp
jbe	loc_1004688C
nop
mov	edx, [esi+10h]
mov	esi, [edx+ebp*4]
mov	eax, [esi+4]
push	eax
call	sub_100127C0
lea	ecx, [esp+68h+var_4C]
push	ecx
mov	edi, eax
lea	edx, [esp+6Ch+var_3C]
push	edx
lea	eax, [esp+70h+var_40]
push	eax
lea	ecx, [esp+74h+var_44]
push	ecx
lea	edx, [esp+78h+var_38]
push	edx
lea	eax, [esp+7Ch+var_34]
push	eax
push	0
push	esi
call	sub_1004FB90
add	esp, 24h
test	eax, eax
jnz	loc_100468AA
mov	eax, [esp+64h+var_30]
mov	ecx, [esp+64h+var_40]
mov	esi, [esp+64h+var_44]
mov	edx, [esp+64h+var_38]
test	eax, eax
jnz	short loc_10046807
cmp	[esp+64h+var_4C], 0
jnz	short loc_100467E5
test	edx, edx
jz	short loc_100467C6
cmp	edx, 1
jnz	short loc_100467E5
test	esi, esi
jz	short loc_100467CF
cmp	esi, 1
jnz	short loc_100467E5
test	ecx, ecx
jz	short loc_100467D8
cmp	ecx, 1
jnz	short loc_100467E5
mov	eax, [esp+64h+var_3C]
test	eax, eax
jz	short loc_10046829
cmp	eax, 1
jz	short loc_10046829
			
mov	eax, [esp+64h+var_54]
push	eax
call	sub_10049390
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
mov	ecx, [esp+54h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
cmp	eax, 14h
jnz	short loc_100467E5
xor	ecx, ecx
mov	edi, edi
mov	ebp, [esp+ecx+64h+var_2C]
cmp	ebp, [esp+ecx+64h+var_18]
jnz	short loc_100467E5
sub	eax, 4
add	ecx, 4
cmp	eax, 4
jnb	short loc_10046810
mov	ebp, [esp+64h+var_48]
			
cmp	dword ptr [ebx+28h], 0
mov	eax, [esp+64h+var_50]
jz	short loc_10046837
cmp	edi, eax
jnb	short loc_1004683E
mov	[ebx+28h], edx
mov	esi, [esp+64h+var_44]
cmp	dword ptr [ebx+2Ch], 0
jz	short loc_10046848
cmp	edi, eax
jnb	short loc_1004684B
mov	[ebx+2Ch], esi
cmp	dword ptr [ebx+30h], 0
jz	short loc_10046855
cmp	edi, eax
jnb	short loc_1004685C
mov	ecx, [esp+64h+var_3C]
mov	[ebx+30h], ecx
cmp	dword ptr [ebx+34h], 0
jz	short loc_10046866
cmp	edi, eax
jnb	short loc_1004686D
mov	edx, [esp+64h+var_40]
mov	[ebx+34h], edx
mov	eax, [esp+64h+var_4C]
mov	ecx, [esp+64h+var_54]
inc	ebp
mov	[ebx+38h], eax
mov	[esp+64h+var_50], edi
mov	[esp+64h+var_48], ebp
mov	esi, ecx
cmp	ebp, [ecx+14h]
jb	loc_10046760
push	esi
call	sub_10049390
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
mov	ecx, [esp+54h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
mov	edx, [esp+64h+var_54]
push	edx
call	sub_10049390
mov	ecx, [esp+68h+var_4]
add	esp, 4
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
			
mov	eax, [esp+arg_0]
test	eax, eax
jz	short loc_100468E1
push	eax
call	sub_10049400
add	esp, 4
xor	eax, eax
retn
align 10h
push	ebx
push	ebp
mov	ebp, [esp+0Ch]
mov	eax, [ebp+0]
push	34h
push	eax
mov	[esp+14h], eax
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_10046911
pop	ebp
pop	ebx
retn
push	esi
push	edi
mov	ecx, 9
mov	esi, ebp
mov	edi, ebx
rep movsd
lea	eax, [ebx+30h]
push	eax
mov	eax, [esp+18h]
lea	ecx, [ebx+2Ch]
push	ecx
mov	ecx, [ebp+10h]
push	0
push	0
lea	edx, [ebx+24h]
push	edx
mov	edx, [ecx]
push	eax
push	0
push	edx
call	sub_1004FF20
add	esp, 20h
neg	eax
pop	edi
sbb	eax, eax
pop	esi
not	eax
pop	ebp
and	eax, ebx
pop	ebx
retn
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_10046962
push	esi
call	sub_10049480
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
mov	ecx, [esp+arg_0]
test	ecx, ecx
jz	short loc_10046987
cmp	dword ptr [ecx+24h], 0
lea	eax, [ecx+24h]
jz	short loc_10046987
cmp	dword ptr [ecx+28h], 0
ja	short locret_10046989
			
xor	eax, eax
retn
align 10h
sub	esp, 8
push	ebx
push	ebp
push	esi
xor	ebx, ebx
mov	esi, eax
xor	ebp, ebp
push	edi
mov	edi, ecx
mov	[esp+18h+var_4], ebx
cmp	esi, ebx
jnz	short loc_100469AA
mov	esi, [edi+1Ch]
cmp	[esp+18h+arg_C], ebx
jnz	short loc_100469B7
mov	eax, [edi+18h]
mov	[esp+18h+arg_C], eax
call	sub_100507B0
mov	[esp+18h+var_8], eax
test	eax, eax
jnz	short loc_100469CC
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
test	esi, esi
jz	short loc_100469E8
push	eax
push	0
push	0
lea	ecx, [edi+38h]
push	ecx
push	esi
call	sub_10046E20
mov	ebp, eax
mov	eax, [esp+2Ch+var_8]
add	esp, 14h
mov	ecx, [esp+18h+arg_C]
test	ecx, ecx
jz	short loc_10046A04
push	eax
push	0
push	0
lea	edx, [edi+38h]
push	edx
push	ecx
call	sub_10047190
add	esp, 14h
mov	ebx, eax
push	ebx		
push	ebp		
call	sub_100499F0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_10046A63
push	edi
call	sub_10046200
add	esp, 4
test	eax, eax
jz	short loc_10046A39
push	eax
mov	eax, [eax+0Ch]
call	eax
add	esp, 4
test	eax, eax
jz	short loc_10046A39
push	eax
call	sub_10046250
add	esp, 4
mov	ebx, eax
			
push	ebx
call	sub_10046370
mov	ecx, [esp+1Ch+arg_8]
mov	edx, [esp+1Ch+arg_4]
push	ecx
mov	esi, eax
mov	eax, [esp+20h+arg_0]
push	edx
push	eax
push	esi
call	sub_1004A690
push	esi
mov	edi, eax
call	sub_100499A0
add	esp, 18h
jmp	short loc_10046A67
mov	edi, [esp+18h+var_4]
mov	ecx, [esp+18h+var_8]
push	ecx
call	sub_10050840
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
sub	esp, 38h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+38h+var_4], eax
mov	ecx, [esp+38h+arg_C]
mov	edx, [esp+38h+arg_10]
mov	eax, [esp+38h+arg_4]
mov	[esp+38h+var_24], ecx
mov	ecx, [esp+38h+arg_14]
mov	[esp+38h+var_18], edx
mov	edx, [esp+38h+arg_18]
push	ebx
mov	ebx, [esp+3Ch+arg_24]
mov	[esp+3Ch+var_1C], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_2C], ecx
mov	ecx, [esp+3Ch+arg_1C]
mov	[esp+3Ch+var_20], edx
mov	edx, [eax]
push	ebp
push	esi
mov	esi, [esp+44h+arg_0]
mov	[esp+44h+var_28], ecx
xor	ecx, ecx
mov	[esp+44h+var_10], edx
mov	edx, [eax+4]
mov	eax, [eax+8]
push	edi
mov	edi, [esp+48h+arg_20]
mov	[esp+48h+var_14], ebx
mov	[esp+48h+var_30], ecx
mov	[esp+48h+var_C], edx
mov	[esp+48h+var_8], eax
mov	[esp+48h+var_38], ecx
cmp	esi, ecx
jz	loc_10046C0A
cmp	ebx, ecx
jz	loc_10046C0A
cmp	edi, ecx
jnz	short loc_10046B13
mov	edi, [esi+18h]
cmp	edi, ecx
jz	loc_10046C0A
push	ecx
push	edi
mov	[esp+50h+var_8], 1
call	sub_10049F10
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	loc_10046C0A
push	esi
push	ebp
call	sub_10049B90
add	esp, 8
test	eax, eax
jnz	loc_10046C01
mov	[esp+48h+var_34], 1
lea	esp, [esp+0]
mov	eax, [esp+48h+var_2C]
test	eax, eax
jz	short loc_10046B5E
cmp	[esp+48h+var_34], eax
jnb	short loc_10046BBE
push	esi
call	sub_1004B8F0
add	esp, 4
cmp	dword ptr [eax+170h], 0
jnz	short loc_10046BBA
mov	ecx, [esp+48h+var_24]
mov	eax, [esp+48h+var_1C]
push	edi
push	ecx
lea	edx, [esp+50h+var_10]
push	edx
push	eax
mov	eax, ebx
mov	ecx, esi
call	sub_10046990
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_10046BB2
push	esi
push	ebp
call	sub_10049B90
push	esi
mov	ebx, eax
call	sub_10046070
add	esp, 0Ch
test	ebx, ebx
jnz	short loc_10046C01
inc	[esp+48h+var_34]
mov	ebx, [esp+48h+var_14]
jmp	short loc_10046B50
mov	[esp+48h+var_38], 0FFFFFFFFh
mov	eax, [esp+48h+var_2C]
mov	ecx, [esp+48h+var_20]
mov	edx, [esp+48h+var_18]
push	ecx
push	eax
push	edx
push	ebp
call	sub_1004A170
add	esp, 10h
mov	[esp+48h+var_30], eax
test	eax, eax
jz	short loc_10046C01
push	ebp
call	sub_10049AD0
mov	eax, [esp+4Ch+var_28]
add	esp, 4
test	eax, eax
jz	short loc_10046BF1
mov	ecx, [esp+48h+var_38]
mov	[eax], ecx
cmp	[esp+48h+var_38], 0
jz	short loc_10046C26
mov	edx, ds:dword_100A7E54
push	edx
jmp	short loc_10046C1E
			
push	ebp
call	sub_10049AD0
add	esp, 4
			
mov	eax, [esp+48h+var_28]
test	eax, eax
jz	short loc_10046C18
mov	dword ptr [eax], 0FFFFFFFFh
mov	eax, ds:dword_100A7E54
push	eax
call	sub_10050AF0
add	esp, 4
mov	ecx, [esp+48h+var_4]
mov	eax, [esp+48h+var_30]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
align 10h
			
jmp	sub_10046A80
align 10h
push	edi
call	sub_10050920
mov	edi, eax
test	edi, edi
jnz	short loc_10046C5E
pop	edi
retn
push	esi
push	18h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10046C93
mov	eax, [esp+8+arg_0]
push	edi
mov	[esi+8], eax
mov	[esi+4], edi
call	sub_10049190
add	esp, 4
mov	[esi+14h], eax
test	eax, eax
jnz	short loc_10046C98
push	edi
call	sub_10050840
add	esp, 4
pop	esi
xor	eax, eax
pop	edi
retn
mov	eax, esi
pop	esi
pop	edi
retn
align 10h
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+14h]
test	eax, eax
jz	short loc_10046CC2
push	eax
call	sub_100488E0
mov	esi, eax
add	esp, 4
cmp	esi, 0FFFFFFFFh
jnz	short loc_10046CC5
pop	edi
or	eax, eax
pop	esi
retn
or	esi, 0FFFFFFFFh
mov	eax, [edi+4]
push	eax
call	sub_10050840
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
push	edi
mov	edi, [esp+4+arg_0]
mov	eax, [edi+14h]
test	eax, eax
jnz	short loc_10046CFE
mov	eax, ds:dword_100A7E34
push	eax
call	sub_10050AF0
add	esp, 4
xor	eax, eax
pop	edi
retn
push	esi
mov	esi, [esp+8+arg_4]
push	esi
push	eax
call	sub_100492D0
add	esp, 8
cmp	eax, esi
jnz	short loc_10046D19
cmp	[esi+1Ch], edi
jz	short loc_10046D19
mov	[esi+1Ch], edi
			
pop	esi
pop	edi
retn
align 10h
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_10046D2F
or	eax, 0FFFFFFFFh
retn
mov	[esp+arg_0], eax
jmp	loc_10048EF0
align 10h
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_10046D4F
or	eax, 0FFFFFFFFh
retn
mov	[esp+arg_0], eax
jmp	loc_10048FC0
align 10h
			
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
push	edi
xor	edi, edi
test	eax, eax
jnz	short loc_10046D70
pop	edi
retn
mov	ecx, [esp+4+arg_4]
push	esi
push	0
push	0
push	0
push	ecx
push	eax
call	sub_10048C00
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_10046DAB
mov	edx, [esp+8+arg_10]
mov	eax, [esp+8+arg_C]
mov	ecx, [esp+8+arg_8]
push	edx
push	eax
push	ecx
push	esi
call	sub_1004A690
push	esi
mov	edi, eax
call	sub_100499A0
add	esp, 14h
pop	esi
mov	eax, edi
pop	edi
retn
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_10046DBC
retn
mov	[esp+arg_0], eax
jmp	sub_10048DB0
align 10h
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
push	edi
xor	edi, edi
test	eax, eax
jnz	short loc_10046DE0
pop	edi
retn
mov	ecx, [esp+4+arg_4]
push	esi
push	0
push	0
push	0
push	ecx
push	eax
call	sub_10048B40
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_10046E1B
mov	edx, [esp+8+arg_10]
mov	eax, [esp+8+arg_C]
mov	ecx, [esp+8+arg_8]
push	edx
push	eax
push	ecx
push	esi
call	sub_1004A690
push	esi
mov	edi, eax
call	sub_100499A0
add	esp, 14h
pop	esi
mov	eax, edi
pop	edi
retn
			
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_10046E2C
retn
mov	[esp+arg_0], eax
jmp	sub_10048B40
align 10h
			
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_10046E4C
retn
mov	[esp+arg_0], eax
jmp	loc_10048E90
align 10h
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
push	edi
xor	edi, edi
test	eax, eax
jnz	short loc_10046E70
pop	edi
retn
mov	ecx, [esp+4+arg_4]
push	esi
push	0
push	0
push	0
push	ecx
push	eax
call	sub_10048D10
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_10046EAB
mov	edx, [esp+8+arg_10]
mov	eax, [esp+8+arg_C]
mov	ecx, [esp+8+arg_8]
push	edx
push	eax
push	ecx
push	esi
call	sub_1004A690
push	esi
mov	edi, eax
call	sub_100499A0
add	esp, 14h
pop	esi
mov	eax, edi
pop	edi
retn
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_10046EBC
retn
mov	[esp+arg_0], eax
jmp	loc_10048F60
align 10h
			
mov	eax, [esp+arg_0]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_10046EDC
retn
mov	[esp+arg_0], eax
jmp	loc_10049030
align 10h
push	edi
call	sub_10050920
mov	edi, eax
test	edi, edi
jnz	short loc_10046EFE
pop	edi
retn
push	esi
push	24h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10046F26
push	offset aTokens_0 
push	64h
call	NSSRWLock_New_Util
add	esp, 8
mov	[esi+18h], eax
test	eax, eax
jnz	short loc_10046F34
push	edi
call	sub_10050840
add	esp, 4
pop	esi
xor	eax, eax
pop	edi
retn
push	20h
push	esi
call	sub_100478E0
add	esp, 8
mov	[esi+4], edi
mov	dword ptr [esi], 1
mov	dword ptr [esi+20h], 0
mov	eax, esi
pop	esi
pop	edi
retn
align 10h
jmp	sub_1004C5B0
align 10h
			
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
push	edi
xor	ebx, ebx
xor	edi, edi
dec	dword ptr [esi]
jnz	short loc_10046FF4
mov	eax, [esi+10h]
cmp	eax, ebx
jz	short loc_10046F92
push	eax
call	sub_10051510
add	esp, 4
mov	[esi+10h], ebx
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_10046FB3
push	offset loc_10046F60
push	eax
call	sub_10051040
mov	eax, [esi+0Ch]
push	eax
call	sub_10051450
add	esp, 0Ch
mov	[esi+0Ch], ebx
mov	ecx, [esi+18h]
push	ecx
call	NSSRWLock_Destroy_Util
push	esi
mov	[esi+18h], ebx
call	sub_100479A0
mov	edi, eax
add	esp, 8
cmp	edi, 0FFFFFFFFh
jnz	short loc_10046FD5
pop	edi
pop	esi
or	eax, eax
pop	ebx
retn
mov	eax, [esi+20h]
cmp	eax, ebx
jz	short loc_10046FE8
mov	edx, [eax+4]
push	eax
call	edx
add	esp, 4
mov	[esi+20h], ebx
mov	eax, [esi+4]
push	eax
call	sub_10050840
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
push	ecx
push	ebx
push	ebp
push	esi
mov	esi, ecx
mov	dword ptr [eax], 1
mov	ecx, [esi+18h]
push	edi
push	ecx
call	NSSRWLock_LockRead_Util
mov	edx, [esi+0Ch]
push	edx
call	PK11_GetWindow
mov	ebx, eax
lea	ebp, ds:4[ebx*4]
push	ebp
push	0
call	sub_100504B0
mov	edi, eax
add	esp, 10h
test	edi, edi
jnz	short loc_1004704D
mov	eax, [esi+18h]
push	eax
call	NSSRWLock_UnlockRead_Util
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
push	ebp
push	0
call	sub_100504B0
add	esp, 8
mov	[esp+14h+var_4], eax
test	eax, eax
jnz	short loc_1004707A
mov	ecx, [esi+18h]
push	ecx
call	NSSRWLock_UnlockRead_Util
push	edi
call	sub_10050550
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	edx, [esi+0Ch]
push	ebx
push	edi
push	edx
call	sub_10051290
mov	eax, [esi+18h]
push	eax
call	NSSRWLock_UnlockRead_Util
xor	esi, esi
add	esp, 10h
mov	ebp, edi
cmp	[edi], esi
jz	short loc_100470D7
lea	esp, [esp+0]
mov	ecx, [ebp+0]
push	ecx
call	sub_1004C610
mov	ebx, eax
mov	edx, [ebx+44h]
push	edx
call	PK11_IsDisabled
add	esp, 8
test	eax, eax
jnz	short loc_100470C5
mov	eax, [esp+14h+var_4]
mov	[eax+esi*4], ebx
inc	esi
jmp	short loc_100470CE
push	ebx
call	sub_1004C260
add	esp, 4
add	ebp, 4
cmp	dword ptr [ebp+0], 0
jnz	short loc_100470A0
push	edi
call	sub_10050550
add	esp, 4
test	esi, esi
jnz	short loc_100470F9
mov	ecx, [esp+14h+var_4]
push	ecx
call	sub_10050550
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
			
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+18h]
push	eax
call	NSSRWLock_LockRead_Util
mov	ecx, [edi+10h]
push	ecx
call	sub_100513C0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004716F
push	ebx
mov	ebx, [esp+0Ch+arg_4]
push	esi
call	sub_1004DBD0
add	esp, 4
test	eax, eax
jz	short loc_1004715C
push	esi
call	sub_1004C640
lea	edx, [esp+10h+arg_0]
push	edx
push	eax
push	ebx
call	sub_10050EE0
add	esp, 10h
test	eax, eax
jnz	short loc_1004716E
mov	eax, [edi+10h]
push	eax
call	sub_100513F0
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10047136
pop	ebx
mov	ecx, [edi+10h]
push	ecx
call	sub_10051430
mov	edx, [edi+18h]
push	edx
call	NSSRWLock_UnlockRead_Util
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
			
sub	esp, 14h
mov	eax, [esp+14h+arg_C]
push	esi
push	edi
xor	edi, edi
push	edi
push	edi
mov	[esp+24h+var_C], eax
mov	[esp+24h+var_8], edi
mov	[esp+24h+var_14], edi
call	sub_10050FA0
mov	esi, eax
add	esp, 8
cmp	esi, edi
jnz	short loc_100471BF
pop	edi
xor	eax, eax
pop	esi
add	esp, 14h
retn
mov	ecx, [esp+1Ch+arg_4]
push	ebx
push	ebp
mov	ebp, [esp+24h+arg_0]
push	esi
push	ecx
push	ebp
call	sub_10048440
push	esi
call	PK11_GetWindow
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jz	short loc_10047203
lea	edx, ds:4[ebx*4]
push	edx
push	0
call	sub_100504B0
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10047203
push	ebx
push	edi
push	esi
call	sub_10051290
add	esp, 0Ch
			
push	edi
push	ebp
call	sub_10049F10
push	edi
mov	ebx, eax
call	sub_100499A0
push	esi
call	sub_10051450
add	esp, 10h
test	ebx, ebx
jz	loc_10047321
lea	eax, [esp+24h+var_4]
mov	ecx, ebp
call	sub_10047000
mov	ebp, eax
mov	[esp+24h+var_4], ebp
test	ebp, ebp
jz	loc_10047318
cmp	dword ptr [ebp+0], 0
jz	loc_1004732B
mov	eax, [ebp+0]
push	eax
call	sub_1004C580
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_100472EC
push	esi
xor	edi, edi
mov	[esp+28h+var_10], 0FFFFFFFFh
call	PK11_NeedLogin
add	esp, 4
test	eax, eax
jz	short loc_10047290
mov	edx, [esp+24h+var_C]
lea	ecx, [esp+24h+var_10]
push	ecx
mov	ecx, [esp+28h+arg_4]
push	edx
push	2
push	ecx
push	eax
push	esi
call	sub_1004D0A0
add	esp, 18h
mov	edi, eax
push	esi
call	sub_1004C5B0
add	esp, 4
cmp	[esp+24h+var_10], 0
jz	short loc_100472A6
inc	[esp+24h+var_14]
jmp	short loc_100472EC
test	edi, edi
jz	short loc_100472EC
push	0
push	edi
push	ebx
call	sub_1004A450
push	edi
mov	[esp+34h+var_10], eax
call	sub_10050550
add	esp, 10h
cmp	[esp+24h+var_10], 0
jz	short loc_100472CD
inc	[esp+24h+var_14]
jmp	short loc_100472EC
push	ebx
call	PK11_IsInternal
mov	ecx, [esp+28h+arg_C]
add	esp, 4
mov	[esp+24h+var_8], eax
test	ecx, ecx
jz	short loc_100472EC
cmp	eax, ecx
jnb	short loc_10047301
sub	ecx, eax
mov	[esp+24h+var_C], ecx
			
add	ebp, 4
cmp	dword ptr [ebp+0], 0
jnz	loc_10047246
mov	ecx, [esp+24h+arg_C]
mov	eax, [esp+24h+var_8]
test	eax, eax
jnz	short loc_10047331
cmp	[esp+24h+var_14], eax
jz	short loc_10047331
mov	edx, [esp+24h+var_4]
push	edx
call	sub_1004E770
add	esp, 4
push	ebx
call	sub_10049AD0
add	esp, 4
pop	ebp
pop	ebx
pop	edi
xor	eax, eax
pop	esi
add	esp, 14h
retn
mov	ecx, [esp+24h+arg_C]
jmp	short loc_10047335
			
mov	ebp, [esp+24h+var_4]
mov	eax, [esp+24h+arg_10]
push	eax
push	ecx
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	ebx
call	sub_1004A170
push	ebx
mov	esi, eax
call	sub_10049AD0
push	ebp
call	sub_1004E770
add	esp, 18h
pop	ebp
pop	ebx
pop	edi
mov	eax, esi
pop	esi
add	esp, 14h
retn
align 10h
jmp	sub_10047190
align 10h
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	esi
push	edi
xor	edi, edi
push	edi
push	edi
push	edi
push	eax
push	ecx
call	sub_10047190
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_100473BF
mov	edx, [esp+8+arg_10]
mov	eax, [esp+8+arg_C]
mov	ecx, [esp+8+arg_8]
push	edx
push	eax
push	ecx
push	esi
call	sub_1004A690
push	esi
mov	edi, eax
call	sub_100499A0
add	esp, 14h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
			
sub	esp, 10h
mov	eax, [esp+10h+arg_4]
push	ebp
mov	ebp, [esp+14h+arg_8]
push	esi
mov	esi, [esp+18h+arg_0]
push	edi
push	ebp
push	eax
xor	edi, edi
push	esi
mov	[esp+28h+var_10], edi
call	sub_10048640
add	esp, 0Ch
mov	[esp+1Ch+var_10], eax
cmp	eax, edi
jnz	loc_100474F0
lea	eax, [esp+1Ch+var_4]
mov	ecx, esi
call	sub_10047000
mov	[esp+1Ch+var_4], eax
cmp	eax, edi
jz	loc_100474EC
push	ebx
mov	ebx, eax
cmp	[eax], edi
jz	loc_100474E2
mov	ecx, [ebx]
push	ecx
call	sub_1004C580
mov	esi, eax
add	esp, 4
mov	[esp+20h+var_C], 0FFFFFFFFh
test	esi, esi
jz	loc_100474C5
push	esi
call	PK11_NeedLogin
add	esp, 4
test	eax, eax
jz	short loc_10047466
mov	ecx, [esp+20h+arg_4]
lea	edx, [esp+20h+var_C]
push	edx
push	2
push	ebp
push	ecx
push	eax
push	esi
call	sub_1004D400
add	esp, 18h
mov	[esp+20h+var_8], eax
push	esi
call	sub_1004C5B0
add	esp, 4
cmp	[esp+20h+var_C], 0
jnz	short loc_100474C5
cmp	[esp+20h+var_8], 0
jz	short loc_100474C5
test	edi, edi
jnz	short loc_10047495
mov	edx, [esp+20h+arg_0]
push	edi
push	edx
call	sub_10049F10
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_100474DE
push	1
lea	eax, [esp+24h+var_8]
push	eax
push	edi
call	sub_1004A450
add	esp, 0Ch
mov	[esp+20h+var_C], eax
test	eax, eax
jnz	short loc_100474BE
push	eax
push	1
lea	ecx, [esp+28h+var_10]
push	ecx
push	edi
call	sub_1004A170
add	esp, 10h
cmp	[esp+20h+var_10], 0
jnz	short loc_100474D1
			
add	ebx, 4
cmp	dword ptr [ebx], 0
jnz	loc_10047421
test	edi, edi
jz	short loc_100474DE
push	edi
call	sub_10049AD0
add	esp, 4
			
mov	eax, [esp+20h+var_4]
push	eax
call	sub_1004E770
add	esp, 4
pop	ebx
mov	eax, [esp+1Ch+var_10]
pop	edi
pop	esi
pop	ebp
add	esp, 10h
retn
align 10h
jmp	sub_100473D0
align 10h
sub	esp, 10h
push	esi
push	edi
xor	edi, edi
mov	[esp+18h+var_8], edi
mov	[esp+18h+var_4], edi
mov	[esp+18h+var_10], edi
mov	[esp+18h+var_C], edi
call	sub_100507B0
mov	esi, eax
cmp	esi, edi
jnz	short loc_1004753A
pop	edi
xor	eax, eax
pop	esi
add	esp, 10h
retn
mov	edx, [esp+18h+arg_4]
lea	eax, [esp+18h+var_10]
push	eax
lea	ecx, [esp+1Ch+var_8]
push	ecx
push	esi
push	edx
call	sub_1004AC20
add	esp, 10h
test	eax, eax
jnz	short loc_1004756F
mov	edx, [esp+18h+arg_0]
lea	eax, [esp+18h+var_10]
push	eax
lea	ecx, [esp+1Ch+var_8]
push	ecx
push	edx
call	sub_100473D0
add	esp, 0Ch
mov	edi, eax
push	esi
call	sub_10050840
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
add	esp, 10h
retn
			
jmp	sub_10047510
align 10h
mov	eax, [esp+4]
mov	ecx, [esp+8]
push	eax
push	ecx
call	sub_1004A600
add	esp, 8
retn
align 10h
			
sub	esp, 0Ch
push	edi
push	0
push	0
call	sub_10050FA0
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_100476B5
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	esi
push	edi
push	ebp
call	sub_100486F0
push	edi
call	PK11_GetWindow
mov	ebx, eax
add	esp, 0Ch
xor	esi, esi
test	ebx, ebx
jz	short loc_1004760B
lea	eax, ds:4[ebx*4]
push	eax
push	esi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004760B
push	ebx
push	esi
push	edi
call	sub_10051290
add	esp, 0Ch
			
push	esi
push	ebp
call	sub_10049F10
push	esi
mov	ebx, eax
call	sub_100499A0
push	edi
call	sub_10051450
add	esp, 10h
test	ebx, ebx
jz	loc_100476B2
lea	eax, [esp+1Ch+var_C]
mov	ecx, ebp
call	sub_10047000
mov	ebp, eax
test	ebp, ebp
jz	short loc_100476A9
cmp	dword ptr [ebp+0], 0
mov	edi, ebp
jz	short loc_10047685
mov	ecx, [edi]
push	ecx
call	sub_1004C580
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1004767D
push	esi
call	PK11_NeedLogin
add	esp, 4
test	eax, eax
jz	short loc_10047674
push	ebx
push	offset loc_10047590
push	2
push	eax
push	esi
call	sub_1004DBE0
add	esp, 14h
push	esi
call	sub_1004C5B0
add	esp, 4
add	edi, 4
cmp	dword ptr [edi], 0
jnz	short loc_10047644
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_8]
lea	ecx, [esp+1Ch+var_8]
push	ecx
push	ebx
mov	[esp+24h+var_8], edx
mov	[esp+24h+var_4], eax
call	sub_10049DC0
push	ebp
call	sub_1004E770
add	esp, 0Ch
push	ebx
call	sub_10049AD0
add	esp, 4
pop	esi
pop	ebp
pop	ebx
xor	eax, eax
pop	edi
add	esp, 0Ch
retn
align 10h
			
sub	esp, 0Ch
mov	ecx, [esp+0Ch+arg_0]
push	edi
xor	edi, edi
lea	eax, [esp+10h+var_8]
mov	[esp+10h+var_4], edi
call	sub_10047000
mov	[esp+10h+var_C], eax
cmp	eax, edi
jnz	short loc_100476E6
xor	eax, eax
pop	edi
add	esp, 0Ch
retn
push	esi
mov	esi, eax
mov	[esp+14h+var_8], eax
cmp	[eax], edi
jz	loc_100477AC
push	ebx
mov	ebx, [esp+18h+arg_4]
push	ebp
jmp	short loc_10047700
align 10h
			
mov	eax, [esi]
push	eax
call	sub_1004C580
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	short loc_10047775
push	2
lea	ecx, [ebx+48h]
push	ecx
lea	edx, [ebx+38h]
push	edx
lea	eax, [ebx+30h]
push	eax
push	0
push	ebp
call	sub_1004D6F0
mov	esi, eax
add	esp, 18h
test	esi, esi
jz	short loc_10047768
test	edi, edi
jnz	short loc_10047751
mov	ecx, [esp+1Ch+arg_0]
push	1
push	edi
push	ecx
push	esi
push	edi
call	sub_1004A230
mov	edi, eax
add	esp, 14h
neg	eax
sbb	eax, eax
neg	eax
dec	eax
jmp	short loc_1004775B
push	esi
push	edi
call	sub_100494A0
add	esp, 8
test	eax, eax
jz	short loc_10047768
push	esi
call	sub_1004E6D0
add	esp, 4
			
push	ebp
call	sub_1004C5B0
mov	esi, [esp+20h+var_8]
add	esp, 4
add	esi, 4
cmp	dword ptr [esi], 0
mov	[esp+1Ch+var_8], esi
jnz	loc_10047700
pop	ebp
test	edi, edi
jz	short loc_100477A7
add	ebx, 30h
push	ebx
push	edi
call	sub_100466C0
add	esp, 8
mov	[esp+18h+var_4], eax
test	eax, eax
mov	eax, [esp+18h+var_C]
jz	short loc_100477AB
xor	edi, edi
jmp	short loc_100477AB
mov	eax, [esp+18h+var_C]
			
pop	ebx
push	eax
call	sub_1004E770
add	esp, 4
pop	esi
test	edi, edi
jz	short loc_100477C3
push	edi
call	sub_10049400
add	esp, 4
mov	eax, [esp+10h+var_4]
pop	edi
add	esp, 0Ch
retn
align 10h
sub	esp, 0Ch
push	ebp
push	esi
push	edi
mov	edi, [esp+18h+arg_0]
xor	esi, esi
push	esi
push	edi
call	sub_1004A080
mov	ebp, eax
add	esp, 8
mov	[esp+18h+var_8], ebp
test	ebp, ebp
jnz	short loc_100477F7
pop	edi
pop	esi
pop	ebp
add	esp, 0Ch
retn
lea	eax, [esp+18h+var_4]
mov	ecx, edi
call	sub_10047000
mov	edi, eax
mov	[esp+18h+var_4], edi
test	edi, edi
jz	loc_100478AC
push	ebx
mov	ebx, edi
cmp	[edi], esi
jz	loc_1004789A
mov	ebp, [esp+1Ch+arg_4]
nop
mov	eax, [ebx]
push	eax
call	sub_1004C580
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1004788E
push	esi
mov	[esp+20h+var_C], 0FFFFFFFFh
xor	edi, edi
call	PK11_NeedLogin
add	esp, 4
test	eax, eax
jz	short loc_1004785D
lea	ecx, [esp+1Ch+var_C]
push	ecx
push	edi
push	2
push	ebp
push	eax
push	esi
call	sub_1004D960
add	esp, 18h
mov	edi, eax
push	esi
call	sub_1004C5B0
add	esp, 4
cmp	[esp+1Ch+var_C], 0
jnz	short loc_10047881
mov	edx, [esp+1Ch+var_8]
push	0
push	edi
push	edx
call	sub_1004A450
add	esp, 0Ch
mov	[esp+1Ch+var_C], eax
push	edi
call	sub_10050550
mov	edi, [esp+20h+var_4]
add	esp, 4
add	ebx, 4
cmp	dword ptr [ebx], 0
jnz	short loc_10047820
mov	ebp, [esp+1Ch+var_8]
push	0
push	0
push	0
push	ebp
call	sub_1004A170
add	esp, 10h
mov	esi, eax
pop	ebx
push	ebp
call	sub_10049AD0
push	edi
call	sub_1004E770
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
add	esp, 0Ch
retn
align 10h
jmp	sub_10046C50
align 10h
push	edi
call	sub_100507B0
mov	edi, eax
test	edi, edi
jnz	short loc_100478F1
or	eax, 0FFFFFFFFh
pop	edi
retn
push	esi
push	18h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004790F
call	ds:PR_NewLock
mov	[esi], eax
test	eax, eax
jnz	short loc_1004791E
push	edi
call	sub_10050840
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
retn
push	ebx
mov	ebx, [esp+0Ch+arg_4]
push	ebx
push	edi
call	sub_10049120
add	esp, 8
mov	[esi+8], eax
test	eax, eax
jz	short loc_10047967
push	ebx
push	edi
call	sub_10051680
add	esp, 8
mov	[esi+0Ch], eax
test	eax, eax
jz	short loc_10047967
push	ebx
push	edi
call	sub_10051650
add	esp, 8
mov	[esi+10h], eax
test	eax, eax
jz	short loc_10047967
push	ebx
push	edi
call	sub_10051650
add	esp, 8
mov	[esi+14h], eax
test	eax, eax
jnz	short loc_1004798B
			
mov	eax, [esi]
push	eax
call	ds:PR_DestroyLock
push	edi
call	sub_10050840
mov	ecx, [esp+14h+arg_0]
add	esp, 8
pop	ebx
pop	esi
mov	dword ptr [ecx+14h], 0
or	eax, 0FFFFFFFFh
pop	edi
retn
mov	edx, [esp+0Ch+arg_0]
mov	[esi+4], edi
pop	ebx
mov	[edx+14h], esi
pop	esi
xor	eax, eax
pop	edi
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+14h]
test	eax, eax
jnz	short loc_100479BF
mov	eax, ds:dword_100A7DDC
push	eax
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	ecx, [eax+8]
push	ecx
call	sub_100517C0
add	esp, 4
test	eax, eax
jz	short loc_100479E3
mov	edx, ds:dword_100A7E68
push	edx
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [esi+14h]
mov	ecx, [eax]
push	ecx
call	ds:PR_DestroyLock
mov	edx, [esi+14h]
mov	eax, [edx+8]
push	eax
call	sub_100516B0
mov	ecx, [esi+14h]
mov	edx, [ecx+0Ch]
push	edx
call	sub_100516B0
mov	eax, [esi+14h]
mov	ecx, [eax+10h]
push	ecx
call	sub_100516B0
mov	edx, [esi+14h]
mov	eax, [edx+14h]
push	eax
call	sub_100516B0
mov	ecx, [esi+14h]
mov	edx, [ecx+4]
push	edx
call	sub_10050840
add	esp, 18h
mov	dword ptr [esi+14h], 0
xor	eax, eax
pop	esi
retn
align 10h
			
mov	eax, [ebx+50h]
push	ebp
mov	ebp, [esp+4+arg_0]
push	edi
or	edi, 0FFFFFFFFh
test	eax, eax
jz	short loc_10047AA9
push	esi
push	eax
mov	eax, [ebp+14h]
push	eax
call	sub_100517F0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10047AA3
mov	ecx, [esp+0Ch+arg_4]
mov	edi, [esi]
push	ecx
push	edi
call	sub_10051220
push	edi
call	PK11_GetWindow
add	esp, 0Ch
test	eax, eax
jnz	short loc_10047A9D
push	edi
call	sub_10051450
mov	edx, [ebx+50h]
mov	eax, [ebp+14h]
push	edx
push	eax
call	sub_10051780
mov	ecx, [esi+10h]
push	ecx
call	sub_10050840
add	esp, 10h
pop	esi
pop	edi
xor	eax, eax
pop	ebp
retn
pop	esi
mov	eax, edi
pop	edi
pop	ebp
retn
mov	eax, edi
pop	edi
pop	ebp
retn
align 10h
			
push	ecx
push	ebx
mov	ebx, [esp+8+arg_4]
push	ebp
push	edi
mov	edi, [esp+10h+arg_0]
mov	eax, [edi+14h]
mov	ecx, [eax+8]
push	ebx
push	ecx
call	sub_100517F0
xor	ebp, ebp
add	esp, 8
cmp	eax, ebp
jz	loc_10047B7C
cmp	[eax], ebx
jnz	loc_10047B7C
mov	edx, [edi+14h]
mov	eax, [edx+8]
push	esi
push	ebx
push	eax
call	sub_10051780
mov	eax, [edi+14h]
lea	ecx, [ebx+40h]
push	ecx
mov	[esp+20h+var_4], ecx
mov	ecx, [eax+0Ch]
push	ecx
call	sub_100517F0
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_10047B23
mov	edx, [esi]
push	ebx
push	edx
call	sub_10051220
mov	eax, [esi+14h]
mov	ebp, [esi]
mov	esi, [esi+10h]
add	esp, 8
mov	[esp+14h+arg_0], eax
jmp	short loc_10047B25
mov	esi, ebp
push	ebp
call	PK11_GetWindow
add	esp, 4
test	eax, eax
jnz	short loc_10047B7B
mov	eax, [esp+14h+arg_0]
test	eax, eax
jz	short loc_10047B4A
mov	ecx, [edi+14h]
mov	edx, [ecx+10h]
push	eax
push	edx
call	sub_10051780
add	esp, 8
mov	eax, [edi+14h]
push	ebp
push	eax
call	sub_10047A40
push	ebp
call	sub_10051450
mov	ecx, [esp+20h+var_4]
mov	edx, [edi+14h]
mov	eax, [edx+0Ch]
push	ecx
push	eax
call	sub_10051780
add	esp, 14h
test	esi, esi
jz	short loc_10047B7B
push	esi
call	sub_10050840
add	esp, 4
			
pop	esi
			
pop	edi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+14h]
mov	edx, [ecx]
mov	[esp+arg_0], edx
jmp	ds:PR_Lock
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+14h]
mov	edx, [ecx]
mov	[esp+arg_0], edx
jmp	ds:PR_Unlock
align 10h
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
push	esi
call	sub_10049360
xor	ebx, ebx
add	esp, 4
cmp	[esi+14h], ebx
jbe	loc_10047C71
mov	ecx, [esi+10h]
push	edi
mov	edi, [esp+0Ch+arg_8]
mov	edx, [edi]
mov	eax, ecx
push	ebp
mov	ebp, [eax]
cmp	[ebp+4], edx
jz	short loc_10047C15
inc	ebx
add	eax, 4
cmp	ebx, [esi+14h]
jb	short loc_10047BF7
pop	ebp
pop	edi
push	esi
call	sub_10049390
add	esp, 4
pop	esi
pop	ebx
retn
mov	eax, [ecx+ebx*4]
push	eax
call	sub_1004E6D0
mov	ecx, [esi+14h]
mov	eax, [esi+10h]
mov	edx, [eax+ecx*4-4]
mov	[eax+ebx*4], edx
mov	eax, [esi+14h]
mov	ecx, [esi+10h]
mov	dword ptr [ecx+eax*4-4], 0
dec	dword ptr [esi+14h]
mov	edx, [edi+0Ch]
mov	eax, [edi+8]
mov	[eax+edx*4], esi
mov	eax, [edi+10h]
inc	dword ptr [edi+0Ch]
add	esp, 4
cmp	[edi+0Ch], eax
jnz	short loc_10047C6F
mov	edx, [edi+8]
add	eax, eax
lea	ecx, ds:0[eax*4]
push	ecx		
push	edx		
mov	[edi+10h], eax
call	sub_100505D0
add	esp, 8
mov	[edi+8], eax
pop	ebp
pop	edi
push	esi
call	sub_10049390
add	esp, 4
pop	esi
pop	ebx
retn
align 10h
sub	esp, 14h
push	28h
push	0
call	sub_100504B0
add	esp, 8
test	eax, eax
jnz	short loc_10047C9A
or	eax, 0FFFFFFFFh
add	esp, 14h
retn
mov	edx, [esp+14h+arg_4]
push	esi
push	edi
mov	edi, [esp+1Ch+arg_0]
mov	ecx, [edi+14h]
mov	[esp+1Ch+var_10], ecx
mov	[esp+1Ch+var_14], edx
mov	[esp+1Ch+var_C], eax
mov	[esp+1Ch+var_8], 0
mov	[esp+1Ch+var_4], 0Ah
mov	eax, [ecx]
push	eax
call	ds:PR_Lock
mov	edx, [edi+14h]
mov	eax, [edx+8]
lea	ecx, [esp+20h+var_14]
push	ecx
push	offset sub_10047BD0
push	eax
call	sub_10051850
xor	esi, esi
add	esp, 10h
cmp	[esp+1Ch+var_8], esi
jbe	short loc_10047D19
lea	ecx, [ecx+0]
mov	ecx, [esp+1Ch+var_C]
mov	eax, [ecx+esi*4]
cmp	dword ptr [eax+14h], 0
jnz	short loc_10047D12
push	eax
push	edi
call	sub_10047AB0
mov	edx, [esp+24h+var_C]
add	esp, 8
mov	dword ptr [edx+esi*4], 0
inc	esi
cmp	esi, [esp+1Ch+var_8]
jb	short loc_10047CF0
mov	eax, [edi+14h]
mov	ecx, [eax]
push	ecx
call	ds:PR_Unlock
mov	eax, [esp+20h+var_C]
xor	esi, esi
add	esp, 4
cmp	[esp+1Ch+var_8], esi
jbe	short loc_10047D51
cmp	dword ptr [eax+esi*4], 0
jz	short loc_10047D4A
mov	edx, [eax+esi*4]
push	edx
call	sub_1004B8D0
mov	eax, [esp+20h+var_C]
add	esp, 4
inc	esi
cmp	esi, [esp+1Ch+var_8]
jb	short loc_10047D34
push	eax
call	sub_10050550
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
add	esp, 14h
retn
align 10h
mov	eax, [esp+arg_C]
mov	ecx, [esp+arg_0]
push	ebx
mov	ebx, [esp+4+arg_4]
push	ebp
push	esi
mov	dword ptr [eax], 0
mov	edx, [ecx+0Ch]
lea	ebp, [ebx+40h]
push	ebp
push	edx
call	sub_100517F0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10047DBA
inc	dword ptr [esi+4]
call	ds:PR_Now
mov	[esi+8], eax
mov	eax, [esi]
push	ebx
push	eax
mov	[esi+0Ch], edx
call	sub_100511C0
add	esp, 8
pop	esi
pop	ebp
pop	ebx
retn
push	0
push	edi
call	sub_10050FA0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_10047DD2
			
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	18h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10047DCB
mov	[esi], ebx
mov	dword ptr [esi+4], 1
call	ds:PR_Now
mov	[esi+8], eax
mov	eax, [esp+0Ch+Src]
mov	[esi+0Ch], edx
mov	[esi+10h], edi
mov	dword ptr [esi+14h], 0
test	eax, eax
jz	short loc_10047E17
push	edi		
push	eax		
call	sub_10050D50
add	esp, 8
mov	[esi+14h], eax
push	offset sub_10046490
push	ebx
call	sub_10051030
mov	ecx, [esp+14h+arg_4]
push	ecx
push	ebx
call	sub_100511C0
add	esp, 10h
test	eax, eax
jnz	short loc_10047E5F
push	eax
push	edi
push	ebp
call	sub_10050CE0
add	esp, 0Ch
test	eax, eax
jz	short loc_10047DCB
mov	edx, [esp+0Ch+arg_0]
push	esi
push	eax
mov	eax, [edx+0Ch]
push	eax
call	sub_100516F0
add	esp, 0Ch
test	eax, eax
jnz	short loc_10047E5F
mov	ecx, [esp+0Ch+arg_C]
mov	[ecx], ebx
			
pop	esi
pop	ebp
pop	ebx
retn
align 10h
push	ebp
mov	ebp, [esp+4+arg_0]
mov	eax, [ebp+10h]
push	ebx
push	eax
call	sub_100517F0
add	esp, 8
test	eax, eax
jz	short loc_10047E8B
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	esi
push	18h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10047ECB
mov	ecx, [esp+8+arg_4]
mov	[esi], ecx
mov	dword ptr [esi+4], 1
call	ds:PR_Now
push	edi		
push	ebx		
mov	[esi+8], eax
mov	[esi+0Ch], edx
mov	dword ptr [esi+14h], 0
call	sub_10050D50
add	esp, 8
test	eax, eax
jnz	short loc_10047ED1
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	edx, [ebp+10h]
push	esi
push	eax
push	edx
call	sub_100516F0
add	esp, 0Ch
pop	esi
pop	ebp
retn
align 10h
mov	eax, [esp+arg_4]
mov	ecx, [eax+50h]
mov	edx, [esp+arg_0]
mov	eax, [edx+14h]
push	ebx
push	ebp
mov	ebp, [esp+8+arg_8]
push	esi
push	edi
push	ecx
push	eax
call	sub_100517F0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10047F3A
mov	eax, [esi]
push	ebp
push	eax
call	sub_100511C0
inc	dword ptr [esi+4]
add	esp, 8
mov	ebx, eax
call	ds:PR_Now
pop	edi
mov	[esi+8], eax
mov	[esi+0Ch], edx
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
call	sub_100507B0
mov	edi, eax
test	edi, edi
jz	short loc_10047F5F
push	1
push	edi
call	sub_10050FA0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_10047F67
			
push	edi
call	sub_10050840
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	ebp
push	ebx
call	sub_100511C0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10047F87
push	edi
call	sub_10050840
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
push	18h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10047F56
mov	[esi], ebx
mov	dword ptr [esi+4], 1
call	ds:PR_Now
mov	ecx, [esp+10h+arg_4]
mov	[esi+8], eax
mov	[esi+0Ch], edx
mov	[esi+10h], edi
mov	dword ptr [esi+14h], 0
mov	edx, [ecx+50h]
push	edi		
push	edx		
call	sub_10050D50
add	esp, 8
test	eax, eax
jz	short loc_10047F56
push	esi
push	eax
mov	eax, [esp+18h+arg_0]
mov	ecx, [eax+14h]
push	ecx
call	sub_100516F0
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_10047FED
push	edi
call	sub_10050840
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
align 10h
push	ecx
push	ebp
push	edi
xor	edi, edi
push	eax
mov	[esp+10h+var_4], edi
call	sub_10049900
mov	ebp, eax
add	esp, 4
cmp	ebp, edi
jnz	short loc_1004801F
pop	edi
or	eax, 0FFFFFFFFh
pop	ebp
pop	ecx
retn
push	esi
mov	esi, ebp
cmp	[ebp+0], edi
jz	short loc_10048098
push	ebx
mov	ecx, [esi]
push	ecx
call	sub_1004E700
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jz	short loc_1004806F
mov	edx, [esp+14h+arg_0]
push	ebx
push	edx
call	sub_100494A0
add	esp, 8
test	eax, eax
jnz	short loc_10048066
add	esi, 4
inc	edi
cmp	[esi], eax
jnz	short loc_10048028
pop	ebx
push	ebp
call	sub_1004E7F0
mov	eax, [esp+14h+var_4]
add	esp, 4
pop	esi
pop	edi
pop	ebp
pop	ecx
retn
push	ebx
call	sub_1004E6D0
add	esp, 4
xor	esi, esi
test	edi, edi
jle	short loc_1004808F
mov	eax, [ebp+esi*4+0]
mov	ecx, [eax+4]
mov	edx, [esp+14h+arg_0]
push	ecx
push	edx
call	sub_100495C0
inc	esi
add	esp, 8
cmp	esi, edi
jl	short loc_10048075
mov	[esp+14h+var_4], 0FFFFFFFFh
pop	ebx
push	ebp
call	sub_1004E7F0
mov	eax, [esp+14h+var_4]
add	esp, 4
pop	esi
pop	edi
pop	ebp
pop	ecx
retn
align 10h
			
sub	esp, 14h
push	ebx
push	ebp
push	esi
push	edi
xor	edi, edi
mov	[esp+24h+var_8], edi
cmp	[esp+24h+arg_8], edi
jbe	loc_10048393
mov	ebp, [esp+24h+arg_0]
jmp	short loc_100480D0
align 10h
			
mov	eax, [esp+24h+arg_4]
mov	ecx, [esp+24h+var_8]
mov	esi, [eax+ecx*4]
cmp	esi, edi
jz	loc_10048393
push	edi
push	esi
mov	[esp+2Ch+var_14], edi
mov	[esp+2Ch+var_C], edi
call	sub_100461D0
mov	edx, [ebp+14h]
mov	[esp+2Ch+var_10], eax
mov	eax, [edx]
push	eax
call	ds:PR_Lock
mov	ecx, [ebp+14h]
mov	edx, [ecx+8]
push	esi
push	edx
call	sub_100517F0
mov	ebx, eax
add	esp, 14h
test	ebx, ebx
jz	short loc_1004816D
inc	dword ptr [ebx+4]
call	ds:PR_Now
mov	[ebx+8], eax
mov	eax, [ebx]
push	eax
mov	[ebx+0Ch], edx
call	sub_10046950
mov	ecx, [ebp+14h]
mov	edx, [ecx]
push	edx
mov	ebx, eax
call	ds:PR_Unlock
mov	eax, [esp+2Ch+var_10]
push	eax
call	sub_10050550
push	ebx
mov	eax, esi
call	sub_10048000
add	esp, 10h
push	ebx
test	eax, eax
jnz	loc_10048380
call	sub_1004B8D0
push	esi
call	sub_10046070
mov	esi, ebx
jmp	loc_1004835C
mov	eax, [esi]
mov	ecx, [ebp+14h]
push	18h
push	eax
mov	[esp+2Ch+var_4], ecx
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_100481A3
mov	[ebx], esi
mov	dword ptr [ebx+4], 1
call	ds:PR_Now
mov	[ebx+8], eax
mov	[ebx+0Ch], edx
mov	dword ptr [ebx+14h], 0
mov	edx, [esp+24h+var_4]
mov	eax, [edx+8]
push	ebx
push	esi
push	eax
call	sub_100516F0
add	esp, 0Ch
test	eax, eax
jnz	loc_10048244
mov	[esp+24h+var_C], 1
call	sub_100507B0
mov	edi, eax
test	edi, edi
jz	short loc_10048244
mov	edx, [esp+24h+var_10]
mov	eax, [ebp+14h]
lea	ecx, [esp+24h+var_14]
push	ecx
push	edx
push	esi
push	eax
call	sub_10047D70
add	esp, 10h
test	eax, eax
jnz	short loc_10048244
mov	eax, [esp+24h+var_14]
mov	[esp+24h+var_C], 2
test	eax, eax
jz	loc_1004833D
mov	ebx, [esp+24h+var_10]
test	ebx, ebx
jz	short loc_10048224
mov	ecx, [ebp+14h]
push	eax
push	ecx
call	sub_10047E70
add	esp, 8
test	eax, eax
jnz	short loc_10048244
mov	eax, [esp+24h+var_14]
mov	[esp+24h+var_C], 3
cmp	dword ptr [esi+50h], 0
jz	loc_10048346
mov	edx, [ebp+14h]
push	eax
push	esi
push	edx
call	sub_10047EF0
add	esp, 0Ch
test	eax, eax
jz	loc_10048346
			
mov	edx, [esp+24h+var_10]
push	edx
call	sub_10050550
mov	ebx, [esp+28h+var_C]
xor	eax, eax
add	esp, 4
mov	[esp+24h+var_10], eax
mov	[esp+24h+var_14], eax
cmp	ebx, 1
jb	short loc_10048274
mov	eax, [ebp+14h]
mov	ecx, [eax+8]
push	esi
push	ecx
call	sub_10051780
add	esp, 8
cmp	ebx, 2
jb	short loc_100482B8
mov	eax, [ebp+14h]
mov	eax, [eax+0Ch]
lea	edx, [esi+40h]
push	edx
xor	edi, edi
push	eax
mov	[esp+2Ch+var_14], edi
call	sub_100517F0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_100482B4
mov	ecx, [ebx]
push	esi
push	ecx
call	sub_10051220
mov	edx, [ebx]
mov	eax, [ebx+14h]
mov	edi, [ebx+10h]
add	esp, 8
mov	[esp+24h+var_14], edx
mov	[esp+24h+var_10], eax
mov	ebx, [esp+24h+var_C]
cmp	ebx, 3
jz	short loc_100482C2
cmp	ebx, 5
jnz	short loc_100482DA
mov	eax, [esp+24h+var_10]
test	eax, eax
jz	short loc_100482DA
mov	ecx, [ebp+14h]
mov	edx, [ecx+10h]
push	eax
push	edx
call	sub_10051780
add	esp, 8
			
cmp	ebx, 4
jb	short loc_100482F2
mov	eax, [esp+24h+var_14]
mov	ecx, [ebp+14h]
push	eax
push	ecx
mov	ebx, esi
call	sub_10047A40
add	esp, 8
cmp	[esp+24h+var_14], 0
jz	short loc_10048316
mov	edx, [ebp+14h]
mov	eax, [edx+0Ch]
add	esi, 40h
push	esi
push	eax
call	sub_10051780
mov	ecx, [esp+2Ch+var_14]
push	ecx
call	sub_10051450
add	esp, 0Ch
test	edi, edi
jz	short loc_10048323
push	edi
call	sub_10050840
add	esp, 4
mov	edx, [ebp+14h]
mov	eax, [edx]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
push	edi
call	sub_10050840
add	esp, 4
			
mov	eax, [ebp+14h]
mov	ecx, [eax]
push	ecx
call	ds:PR_Unlock
mov	edx, [esp+28h+var_10]
push	edx
call	sub_10050550
add	esp, 8
test	esi, esi
jz	short loc_10048332
mov	eax, [esp+24h+var_8]
mov	ecx, [esp+24h+arg_4]
mov	[ecx+eax*4], esi
inc	eax
mov	[esp+24h+var_8], eax
cmp	eax, [esp+24h+arg_8]
jnb	short loc_10048393
xor	edi, edi
jmp	loc_100480D0
call	sub_10046070
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 14h
retn
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 14h
retn
align 10h
			
push	ebx
push	esi
push	edi
mov	esi, ecx
push	esi
mov	edi, eax
xor	ebx, ebx
call	sub_100466A0
add	esp, 4
push	esi
test	edi, edi
jz	short loc_10048401
call	sub_100514A0
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_100483CB
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
push	esi
call	sub_100513C0
add	esp, 4
test	eax, eax
jz	short loc_100483EC
push	eax
push	edi
call	sub_10051180
push	esi
call	sub_100513F0
add	esp, 0Ch
test	eax, eax
jnz	short loc_100483D8
push	esi
call	sub_10051430
push	esi
call	sub_10051510
add	esp, 8
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
call	PK11_GetWindow
mov	edi, eax
lea	eax, ds:4[edi*4]
push	eax
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_100483C5
push	edi
push	ebx
push	esi
call	sub_10051290
add	esp, 0Ch
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
align 10h
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
mov	eax, [edi+14h]
mov	ecx, [eax]
push	ecx
xor	ebx, ebx
call	ds:PR_Lock
mov	edx, [esp+10h+arg_4]
mov	eax, [edi+14h]
mov	ecx, [eax+0Ch]
push	edx
push	ecx
call	sub_100517F0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_1004848B
inc	dword ptr [esi+4]
call	ds:PR_Now
mov	ecx, [esi]
mov	[esi+8], eax
mov	eax, [esp+0Ch+arg_8]
mov	[esi+0Ch], edx
call	sub_100483A0
mov	ebx, eax
mov	edx, [edi+14h]
mov	eax, [edx]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
mov	eax, [edi+14h]
mov	ecx, [eax]
push	ecx
xor	ebx, ebx
call	ds:PR_Lock
mov	edx, [esp+10h+arg_4]
mov	eax, [edi+14h]
mov	ecx, [eax+10h]
push	edx
push	ecx
call	sub_100517F0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_100484EB
inc	dword ptr [esi+4]
call	ds:PR_Now
mov	ecx, [esi]
mov	[esi+8], eax
mov	eax, [esp+0Ch+arg_8]
mov	[esi+0Ch], edx
call	sub_100483A0
mov	ebx, eax
mov	edx, [edi+14h]
mov	eax, [edx]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
retn
			
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+14h]
mov	ecx, [eax]
push	ebp
push	esi
push	edi
push	ecx
xor	ebp, ebp
xor	edi, edi
call	ds:PR_Lock
mov	edx, [esp+14h+arg_4]
mov	eax, [ebx+14h]
mov	ecx, [eax+14h]
push	edx
push	ecx
call	sub_100517F0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	loc_100485DD
inc	dword ptr [esi+4]
call	ds:PR_Now
mov	edi, [esp+10h+arg_8]
mov	[esi+8], eax
mov	[esi+0Ch], edx
test	edi, edi
jnz	short loc_10048573
push	edi
push	edi
call	sub_10050FA0
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10048573
mov	edx, [ebx+14h]
mov	eax, [edx]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
			
mov	ecx, [esi]
push	ecx
call	sub_100514A0
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_100485A9
mov	edx, [ebx+14h]
mov	eax, [edx]
push	eax
call	ds:PR_Unlock
add	esp, 4
cmp	[esp+10h+arg_8], ebp
jnz	short loc_100485A2
push	edi
call	sub_10051450
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
push	esi
call	sub_100513C0
mov	ecx, eax
add	esp, 4
test	ecx, ecx
jz	short loc_100485CE
mov	eax, edi
call	sub_100483A0
push	esi
call	sub_100513F0
mov	ecx, eax
add	esp, 4
test	ecx, ecx
jnz	short loc_100485B8
push	esi
call	sub_10051430
push	esi
call	sub_10051510
add	esp, 8
mov	ecx, [ebx+14h]
mov	edx, [ecx]
push	edx
call	ds:PR_Unlock
add	esp, 4
cmp	[esp+10h+arg_8], ebp
jnz	short loc_1004862A
test	edi, edi
jz	short loc_1004862A
push	edi
call	PK11_GetWindow
mov	esi, eax
lea	eax, ds:0[esi*4]
push	eax
push	0
call	sub_100504B0
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_10048621
push	esi
push	ebp
push	edi
call	sub_10051290
add	esp, 0Ch
push	edi
call	sub_10051450
add	esp, 4
			
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
retn
align 10h
sub	esp, 58h
mov	eax, [esp+58h+arg_4]
mov	ecx, [eax]
mov	edx, [eax+4]
mov	eax, [esp+58h+arg_8]
push	ebx
push	esi
push	edi
mov	edi, [esp+64h+arg_0]
mov	[esp+64h+var_20], ecx
mov	ecx, [eax]
mov	[esp+64h+var_1C], edx
mov	edx, [eax+4]
mov	eax, [edi+14h]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_C], edx
mov	ecx, [eax]
push	ecx
xor	ebx, ebx
call	ds:PR_Lock
mov	eax, [edi+14h]
mov	ecx, [eax+8]
lea	edx, [esp+68h+var_58]
push	edx
push	ecx
call	sub_100517F0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_100486B0
inc	dword ptr [esi+4]
call	ds:PR_Now
mov	[esi+0Ch], edx
mov	edx, [esi]
push	edx
mov	[esi+8], eax
call	sub_10046950
add	esp, 4
mov	ebx, eax
mov	eax, [edi+14h]
mov	ecx, [eax]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
add	esp, 58h
retn
align 10h
mov	eax, [esp+4]
push	eax
call	sub_10046950
mov	ecx, [esp+10h]
push	eax
push	ecx
call	sub_10051180
add	esp, 0Ch
retn
align 10h
			
push	ebx
push	ebp
mov	ebp, [esp+8+arg_4]
xor	ebx, ebx
push	esi
test	ebp, ebp
jz	short loc_10048765
mov	esi, ebp
push	edi
mov	edi, [esp+10h+arg_0]
mov	eax, [edi+14h]
mov	ecx, [eax]
push	ecx
call	ds:PR_Lock
mov	edx, [edi+14h]
mov	eax, [edx+8]
push	esi
push	offset loc_100486D0
push	eax
call	sub_10051850
mov	ecx, [edi+14h]
mov	edx, [ecx]
push	edx
call	ds:PR_Unlock
add	esp, 14h
test	ebp, ebp
jnz	short loc_1004875E
push	esi
call	PK11_GetWindow
mov	edi, eax
lea	eax, ds:0[edi*4]
push	eax
push	ebp
call	sub_100504B0
mov	ebx, eax
push	edi
push	ebx
push	esi
call	sub_10051290
push	esi
call	sub_10051450
add	esp, 1Ch
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
push	0
push	0
call	sub_10050FA0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_100486FF
pop	esi
pop	ebp
pop	ebx
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+14h]
mov	ecx, [eax]
push	ecx
call	ds:PR_Lock
mov	edx, [esp+8+arg_8]
mov	eax, [esp+8+arg_4]
mov	ecx, [esi+14h]
push	edx
mov	edx, [ecx+8]
push	eax
push	edx
call	sub_10051850
mov	eax, [esi+14h]
mov	ecx, [eax]
push	ecx
call	ds:PR_Unlock
add	esp, 14h
pop	esi
retn
align 10h
			
push	ecx
push	ebp
push	0
push	0
call	sub_10050FA0
mov	ebp, eax
add	esp, 8
mov	[esp+8+var_4], ebp
test	ebp, ebp
jnz	short loc_100487DE
or	eax, 0FFFFFFFFh
pop	ebp
pop	ecx
retn
mov	eax, [esp+8+arg_0]
push	ebx
push	esi
push	ebp
push	eax
call	sub_100486F0
push	ebp
call	PK11_GetWindow
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	loc_10048883
lea	ecx, ds:4[esi*4]
push	ecx
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_10048827
push	ebp
call	sub_10051450
add	esp, 4
pop	esi
pop	ebx
or	eax, 0FFFFFFFFh
pop	ebp
pop	ecx
retn
push	edi
push	esi
push	ebx
push	ebp
call	sub_10051290
add	esp, 0Ch
cmp	dword ptr [ebx], 0
mov	edi, ebx
jz	short loc_10048879
mov	ebp, [esp+14h+arg_4]
mov	edi, edi
mov	esi, [edi]
push	0
push	2
lea	edx, [esi+48h]
push	edx
lea	eax, [esi+38h]
push	eax
push	0
push	ebp
call	sub_1004D400
add	esp, 18h
test	eax, eax
jz	short loc_1004886D
push	eax
push	esi
call	sub_100494A0
push	esi
call	sub_1004B8D0
add	esp, 0Ch
add	edi, 4
cmp	dword ptr [edi], 0
jnz	short loc_10048840
mov	ebp, [esp+14h+var_4]
push	ebx
call	sub_100499A0
add	esp, 4
pop	edi
push	ebp
call	sub_10051450
add	esp, 4
pop	esi
pop	ebx
xor	eax, eax
pop	ebp
pop	ecx
retn
align 10h
			
mov	eax, [esp+arg_8]
dec	eax
jz	short loc_100488AA
xor	eax, eax
retn
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	eax
push	ecx
call	sub_1004B0A0
add	esp, 8
retn
align 10h
mov	ecx, [esp+arg_0]
test	ecx, ecx
jnz	short loc_100488CC
or	eax, 0FFFFFFFFh
retn
mov	eax, [ecx]
dec	eax
jnz	short loc_100488C8
mov	[esp+arg_0], ecx
jmp	sub_1004B1C0
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+10h]
push	eax
call	sub_100517C0
add	esp, 4
test	eax, eax
jz	short loc_10048909
mov	ecx, ds:dword_100A7E68
push	ecx
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	edx, [esi+8]
push	edx
call	ds:PR_DestroyLock
mov	eax, [esi+10h]
push	eax
call	sub_100516B0
mov	ecx, [esi+0Ch]
push	ecx
call	sub_100516B0
add	esp, 0Ch
cmp	dword ptr [esi], 0
jz	short loc_1004893D
mov	edx, [esi+4]
push	edx
call	sub_10050840
add	esp, 4
xor	eax, eax
pop	esi
retn
push	esi
call	sub_10050550
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
mov	eax, [ebp+0Ch]
push	esi
lea	ebx, [edi+40h]
push	ebx
push	eax
call	sub_100517F0
add	esp, 8
test	eax, eax
jz	short loc_10048979
push	edi
push	eax
call	sub_100511C0
add	esp, 8
pop	esi
pop	ebp
pop	ebx
retn
push	0
push	0
call	sub_10050FA0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10048992
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	offset sub_10046490
push	esi
call	sub_10051030
push	edi
push	esi
call	sub_10051180
add	esp, 10h
test	eax, eax
jnz	short loc_100489B9
mov	ecx, [ebp+0Ch]
push	esi
push	ebx
push	ecx
call	sub_100516F0
add	esp, 0Ch
pop	esi
pop	ebp
pop	ebx
retn
align 10h
			
mov	eax, [ebx+10h]
push	esi
push	edi
push	eax
call	sub_100517F0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10048A0A
mov	ecx, [ebx+10h]
push	edi
push	ecx
call	sub_10051780
mov	eax, [esi+4]
add	esp, 8
test	eax, eax
jz	short loc_100489F1
push	eax
call	sub_100468D0
add	esp, 4
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10048A01
push	eax
call	sub_100468D0
add	esp, 4
push	esi
call	sub_10050550
add	esp, 4
pop	esi
retn
align 10h
mov	eax, [ebx+0Ch]
push	ebp
mov	ebp, [esp+4+arg_0]
push	esi
push	edi
lea	edi, [ebp+40h]
push	edi
push	eax
call	sub_100517F0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10048A7A
push	ebp
push	esi
call	sub_10051220
mov	ecx, [ebx+0Ch]
push	edi
push	ecx
call	sub_10051780
push	esi
call	PK11_GetWindow
add	esp, 14h
test	eax, eax
jnz	short loc_10048A58
push	esi
call	sub_10051450
add	esp, 4
pop	edi
pop	esi
pop	ebp
retn
push	1
lea	edx, [esp+10h+arg_0]
push	edx
push	esi
call	sub_10051290
mov	eax, [esp+18h+arg_0]
mov	ecx, [ebx+0Ch]
push	esi
add	eax, 40h
push	eax
push	ecx
call	sub_100516F0
add	esp, 18h
pop	edi
pop	esi
pop	ebp
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+10h]
push	edi
mov	edi, [esp+8+arg_4]
push	edi
push	eax
call	sub_100517F0
add	esp, 8
test	eax, eax
jz	short loc_10048AAD
cmp	[eax], edi
jnz	short loc_10048AAD
call	sub_100489C0
push	edi
call	sub_10048A10
add	esp, 4
			
pop	edi
pop	ebx
retn
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+8]
push	ecx
call	ds:PR_Lock
pop	ecx
retn
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+8]
push	ecx
call	ds:PR_Unlock
pop	ecx
retn
			
push	ebp
mov	ebp, [esp+4+arg_4]
push	esi
push	edi
push	ebx
xor	edi, edi
call	PK11_GetWindow
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_10048AEC
pop	edi
pop	esi
pop	ebp
retn
test	ebp, ebp
jz	short loc_10048AF6
cmp	ebp, esi
jnb	short loc_10048AF6
mov	esi, ebp
			
mov	eax, [esp+0Ch+arg_0]
test	eax, eax
jz	short loc_10048B0F
push	esi
push	eax
push	ebx
call	sub_10051290
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebp
retn
mov	ecx, [esp+0Ch+arg_8]
lea	eax, ds:4[esi*4]
push	eax
push	ecx
call	sub_100504B0
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10048B35
push	esi
push	edi
push	ebx
call	sub_10051290
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebp
retn
align 10h
			
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
mov	eax, [esi+8]
push	edi
push	eax
xor	edi, edi
call	ds:PR_Lock
mov	ecx, [esp+10h+arg_4]
mov	edx, [esi+0Ch]
push	ecx
push	edx
call	sub_100517F0
mov	ebx, eax
add	esp, 0Ch
test	ebx, ebx
jz	short loc_10048B89
push	ebx
call	sub_100466A0
mov	eax, [esp+10h+arg_10]
mov	ecx, [esp+10h+arg_C]
mov	edx, [esp+10h+arg_8]
push	eax
push	ecx
push	edx
call	sub_10048AD0
add	esp, 10h
mov	edi, eax
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
push	ecx
push	ebx
mov	ebx, [esp+10h]
push	esi
push	1
lea	eax, [esp+0Ch]
push	eax
push	ebx
call	sub_10051290
mov	ecx, [esp+14h]
push	0
push	ecx
mov	[esp+28h], eax
call	sub_100461D0
add	esp, 14h
cmp	dword ptr [esp+14h], 0
mov	esi, eax
jnz	short loc_10048BF2
test	esi, esi
jz	short loc_10048BF2
push	edi
mov	edi, [esp+1Ch]
mov	eax, [edi]
lea	edx, [esp+18h]
push	edx
push	eax
push	esi
call	sub_10050EE0
add	esp, 0Ch
test	eax, eax
jz	short loc_10048BF1
mov	[edi+4], ebx
pop	edi
			
push	esi
call	sub_10050550
add	esp, 4
pop	esi
pop	ebx
pop	ecx
retn
align 10h
sub	esp, 8
mov	eax, [esp+8+arg_4]
push	esi
mov	esi, [esp+0Ch+arg_0]
mov	ecx, [esi+8]
push	edi
xor	edi, edi
push	ecx
mov	[esp+14h+var_8], eax
mov	[esp+14h+var_4], edi
call	ds:PR_Lock
mov	eax, [esi+0Ch]
lea	edx, [esp+14h+var_8]
push	edx
push	offset loc_10048BA0
push	eax
call	sub_10051850
mov	eax, [esp+20h+var_4]
add	esp, 10h
cmp	eax, edi
jz	short loc_10048C64
push	ebx
push	eax
call	sub_100466A0
mov	ecx, [esp+18h+arg_10]
mov	edx, [esp+18h+arg_C]
mov	eax, [esp+18h+arg_8]
mov	ebx, [esp+18h+var_4]
push	ecx
push	edx
push	eax
call	sub_10048AD0
add	esp, 10h
mov	edi, eax
pop	ebx
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
add	esp, 8
retn
align 10h
push	ecx
push	esi
mov	esi, [esp+10h]
push	1
lea	eax, [esp+14h]
push	eax
push	esi
call	sub_10051290
add	esp, 0Ch
mov	[esp+4], eax
test	eax, eax
jnz	short loc_10048D0B
mov	eax, [esp+10h]
push	edi
mov	edi, [esp+18h]
mov	edx, [edi]
lea	ecx, [esp+8]
push	ecx
mov	ecx, [eax+50h]
push	edx
push	ecx
call	sub_10050EE0
add	esp, 0Ch
test	eax, eax
jz	short loc_10048D0A
push	esi
call	sub_100514A0
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10048D0A
push	esi
call	sub_100513C0
add	esp, 4
mov	[esp+14h], eax
test	eax, eax
jz	short loc_10048CFB
nop
mov	edx, [edi+4]
push	eax
push	edx
call	sub_10051180
push	esi
call	sub_100513F0
add	esp, 0Ch
mov	[esp+14h], eax
test	eax, eax
jnz	short loc_10048CE0
push	esi
call	sub_10051430
push	esi
call	sub_10051510
add	esp, 8
			
pop	edi
pop	esi
pop	ecx
retn
align 10h
sub	esp, 8
mov	eax, [esp+8+arg_4]
push	edi
xor	edi, edi
push	edi
push	edi
mov	[esp+14h+var_8], eax
call	sub_10050FA0
add	esp, 8
mov	[esp+0Ch+var_4], eax
test	eax, eax
jnz	short loc_10048D35
pop	edi
add	esp, 8
retn
push	ebx
push	esi
mov	esi, [esp+14h+arg_0]
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Lock
mov	eax, [esi+0Ch]
lea	edx, [esp+18h+var_8]
push	edx
push	offset loc_10048C80
push	eax
call	sub_10051850
mov	eax, [esp+24h+var_4]
add	esp, 10h
test	eax, eax
jz	short loc_10048D6C
push	eax
call	sub_100466A0
add	esp, 4
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Unlock
mov	ebx, [esp+18h+var_4]
add	esp, 4
test	ebx, ebx
jz	short loc_10048DA4
mov	edx, [esp+14h+arg_10]
mov	eax, [esp+14h+arg_C]
mov	ecx, [esp+14h+arg_8]
push	edx
push	eax
push	ecx
call	sub_10048AD0
mov	edx, [esp+20h+var_4]
push	edx
mov	edi, eax
call	sub_10051450
add	esp, 10h
pop	esi
pop	ebx
mov	eax, edi
pop	edi
add	esp, 8
retn
align 10h
			
sub	esp, 58h
push	esi
mov	esi, [esp+5Ch+arg_0]
mov	eax, [esi+8]
push	edi
push	eax
call	ds:PR_Lock
mov	eax, [esp+64h+arg_4]
mov	ecx, [eax]
mov	edx, [eax+4]
mov	eax, [esp+64h+arg_8]
mov	[esp+64h+var_20], ecx
mov	ecx, [eax]
mov	[esp+64h+var_1C], edx
mov	edx, [eax+4]
lea	eax, [esp+64h+var_58]
mov	[esp+64h+var_10], ecx
mov	ecx, [esi+10h]
push	eax
push	ecx
xor	edi, edi
mov	[esp+6Ch+var_C], edx
call	sub_100517F0
add	esp, 0Ch
test	eax, eax
jz	short loc_10048E09
mov	edx, [eax]
push	edx
call	sub_10046950
add	esp, 4
mov	edi, eax
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
add	esp, 58h
retn
align 10h
sub	esp, 24h
mov	ecx, [eax]
mov	edx, [eax+4]
lea	eax, [esp+24h+var_18]
mov	[esp+24h+var_20], ecx
push	eax
lea	ecx, [esp+28h+var_24]
push	ecx
mov	[esp+2Ch+var_1C], edx
call	sub_1003B980
add	esp, 8
test	eax, eax
jnz	short loc_10048E69
lea	edx, [esp+24h+var_C]
push	edx
lea	eax, [esp+28h+var_24]
push	eax
call	sub_1003BA40
add	esp, 8
test	eax, eax
jz	short loc_10048E70
mov	ecx, [esp+24h+var_14]
push	ecx
call	PORT_Free_Util
add	esp, 4
or	eax, 0FFFFFFFFh
add	esp, 24h
retn
mov	edx, [esp+24h+var_14]
mov	eax, [esp+24h+var_10]
mov	ecx, [esp+24h+var_8]
mov	[edi], edx
mov	edx, [esp+24h+var_4]
mov	[edi+4], eax
mov	[esi], ecx
mov	[esi+4], edx
xor	eax, eax
add	esp, 24h
retn
mov	eax, [esp+arg_4]
sub	esp, 10h
push	esi
push	edi
lea	esi, [esp+18h+var_8]
lea	edi, [esp+18h+var_10]
call	sub_10048E20
test	eax, eax
jz	short loc_10048EB2
pop	edi
xor	eax, eax
pop	esi
add	esp, 10h
retn
mov	edx, [esp+18h+arg_0]
lea	eax, [esp+18h+var_8]
push	eax
lea	ecx, [esp+1Ch+var_10]
push	ecx
push	edx
call	sub_10048DB0
mov	esi, eax
mov	eax, [esp+24h+var_10]
push	eax
call	PORT_Free_Util
mov	ecx, [esp+28h+var_8]
push	ecx
call	PORT_Free_Util
add	esp, 14h
pop	edi
mov	eax, esi
pop	esi
add	esp, 10h
retn
align 10h
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+8]
push	esi
push	edi
mov	edi, [esp+0Ch+arg_4]
mov	esi, [edi+24h]
push	eax
call	ds:PR_Lock
mov	ecx, [ebx+10h]
push	esi
push	ecx
call	sub_100517F0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10048F39
push	edi
call	sub_10046950
mov	edi, eax
mov	eax, [esi+4]
add	esp, 4
test	eax, eax
jz	short loc_10048F36
push	eax
call	sub_100468D0
add	esp, 4
mov	[esi+4], edi
mov	edx, [ebx+8]
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	eax, esi
neg	eax
sbb	eax, eax
pop	edi
neg	eax
pop	esi
dec	eax
pop	ebx
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	edi
push	eax
xor	edi, edi
call	ds:PR_Lock
mov	ecx, [esp+0Ch+arg_4]
mov	edx, [esi+10h]
push	ecx
push	edx
call	sub_100517F0
add	esp, 0Ch
test	eax, eax
jz	short loc_10048F99
mov	eax, [eax+4]
test	eax, eax
jz	short loc_10048F99
push	eax
call	sub_10046950
add	esp, 4
mov	edi, eax
			
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 20h
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+8]
push	esi
push	edi
mov	edi, [esp+0Ch+arg_4]
mov	esi, [edi+24h]
push	eax
call	ds:PR_Lock
mov	ecx, [ebx+10h]
push	esi
push	ecx
call	sub_100517F0
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_10049009
push	edi
call	sub_10046950
mov	edi, eax
mov	eax, [esi+8]
add	esp, 4
test	eax, eax
jz	short loc_10049006
push	eax
call	sub_100468D0
add	esp, 4
mov	[esi+8], edi
mov	edx, [ebx+8]
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	eax, esi
neg	eax
sbb	eax, eax
pop	edi
neg	eax
pop	esi
dec	eax
pop	ebx
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	edi
push	eax
xor	edi, edi
call	ds:PR_Lock
mov	ecx, [esp+0Ch+arg_4]
mov	edx, [esi+10h]
push	ecx
push	edx
call	sub_100517F0
add	esp, 0Ch
test	eax, eax
jz	short loc_10049069
mov	eax, [eax+8]
test	eax, eax
jz	short loc_10049069
push	eax
call	sub_10046950
add	esp, 4
mov	edi, eax
			
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
			
push	esi
push	edi
mov	edi, [esp+0Ch]
mov	edx, [edi+3Ch]
xor	eax, eax
xor	ecx, ecx
test	edx, edx
jz	short loc_100490A4
mov	esi, [edi+38h]
push	ebx
movzx	ebx, byte ptr [esi+ecx]
rol	eax, 4
inc	ecx
xor	eax, ebx
cmp	ecx, edx
jb	short loc_10049095
pop	ebx
mov	edx, [edi+4Ch]
xor	ecx, ecx
test	edx, edx
jz	short loc_100490BE
mov	esi, [edi+48h]
movzx	edi, byte ptr [esi+ecx]
rol	eax, 4
inc	ecx
xor	eax, edi
cmp	ecx, edx
jb	short loc_100490B0
pop	edi
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+0Ch]
push	edi
mov	edi, [esp+0Ch]
lea	eax, [esp+10h]
push	eax
lea	ecx, [esi+38h]
push	ecx
lea	edx, [edi+38h]
push	edx
call	sub_10050D00
add	esp, 0Ch
test	eax, eax
jz	short loc_10049114
lea	eax, [esp+10h]
push	eax
add	esi, 48h
push	esi
add	edi, 48h
push	edi
call	sub_10050D00
add	esp, 0Ch
test	eax, eax
jz	short loc_10049114
pop	edi
mov	eax, 1
pop	esi
retn
			
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	offset PL_CompareValues
push	offset loc_100490D0
push	offset loc_10049080
push	eax
push	ecx
call	sub_100515C0
add	esp, 14h
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	eax
call	ds:PR_Lock
mov	ecx, [esp+8+arg_8]
mov	edx, [esp+8+arg_4]
mov	eax, [esi+10h]
push	ecx
push	edx
push	eax
call	sub_10051850
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Unlock
add	esp, 14h
pop	esi
retn
align 10h
push	ebx
push	edi
mov	edi, [esp+8+arg_0]
test	edi, edi
jz	short loc_1004919E
xor	ebx, ebx
jmp	short loc_100491B1
call	sub_100507B0
mov	edi, eax
test	edi, edi
jnz	short loc_100491AC
pop	edi
pop	ebx
retn
mov	ebx, 1
push	esi
push	14h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10049234
call	ds:PR_NewLock
mov	[esi+8], eax
test	eax, eax
jz	short loc_10049203
push	offset PL_CompareValues
push	offset loc_100490D0
push	offset loc_10049080
push	0
push	edi
call	sub_100515C0
add	esp, 14h
mov	[esi+10h], eax
test	eax, eax
jz	short loc_10049203
push	0
push	edi
call	sub_10051680
add	esp, 8
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_10049247
			
mov	eax, [esi+8]
test	eax, eax
jz	short loc_10049214
push	eax
call	ds:PR_DestroyLock
add	esp, 4
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_10049224
push	eax
call	sub_100516B0
add	esp, 4
mov	esi, [esi+0Ch]
test	esi, esi
jz	short loc_10049234
push	esi
call	sub_100516B0
add	esp, 4
			
test	ebx, ebx
jz	short loc_10049241
push	edi
call	sub_10050840
add	esp, 4
pop	esi
pop	edi
xor	eax, eax
pop	ebx
retn
mov	[esi+4], edi
mov	[esi], ebx
mov	eax, esi
pop	esi
pop	edi
pop	ebx
retn
align 10h
push	ebx
push	esi
push	edi
mov	edi, eax
mov	eax, [edi]
push	0Ch
push	eax
mov	ebx, ecx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10049281
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	ebp
push	esi
mov	[esi], edi
mov	ecx, [ebx+10h]
push	edi
push	ecx
call	sub_100516F0
mov	ebp, eax
add	esp, 0Ch
test	ebp, ebp
jz	short loc_100492A5
push	esi
call	sub_10050550
add	esp, 4
test	ebp, ebp
jnz	short loc_100492C1
push	ebx
call	sub_10048950
mov	esi, eax
add	esp, 4
cmp	esi, 0FFFFFFFFh
jnz	short loc_100492BA
call	sub_100489C0
pop	ebp
pop	edi
mov	eax, esi
pop	esi
pop	ebx
retn
mov	eax, ebp
pop	ebp
pop	edi
pop	esi
pop	ebx
retn
align 10h
sub	esp, 58h
push	ebx
mov	ebx, [esp+5Ch+arg_0]
mov	eax, [ebx+8]
push	esi
push	edi
push	eax
call	ds:PR_Lock
mov	esi, [esp+68h+arg_4]
mov	edx, [esi+3Ch]
mov	eax, [esi+48h]
mov	ecx, [esi+38h]
mov	[esp+68h+var_1C], edx
lea	edx, [esp+68h+var_58]
mov	[esp+68h+var_10], eax
mov	eax, [ebx+10h]
mov	[esp+68h+var_20], ecx
mov	ecx, [esi+4Ch]
push	edx
push	eax
xor	edi, edi
mov	[esp+70h+var_C], ecx
call	sub_100517F0
add	esp, 0Ch
test	eax, eax
jz	short loc_10049328
mov	ecx, [eax]
push	ecx
call	sub_10046950
add	esp, 4
mov	edi, eax
test	edi, edi
jnz	short loc_10049344
mov	eax, esi
mov	ecx, ebx
call	sub_10049260
test	eax, eax
jnz	short loc_10049344
push	esi
call	sub_10046950
add	esp, 4
mov	edi, eax
			
mov	edx, [ebx+8]
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
align 10h
			
mov	ecx, [esp+arg_0]
mov	eax, [ecx+0Ch]
dec	eax
jz	short loc_1004937A
dec	eax
jnz	short locret_10049387
mov	eax, [ecx+8]
mov	[esp+arg_0], eax
jmp	ds:PR_EnterMonitor
mov	ecx, [ecx+8]
mov	[esp+arg_0], ecx
jmp	ds:PR_Lock
retn
align 10h
			
mov	ecx, [esp+arg_0]
mov	eax, [ecx+0Ch]
dec	eax
jz	short loc_100493AA
dec	eax
jnz	short locret_100493B7
mov	eax, [ecx+8]
mov	[esp+arg_0], eax
jmp	ds:PR_ExitMonitor
mov	ecx, [ecx+8]
mov	[esp+arg_0], ecx
jmp	ds:PR_Unlock
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+0Ch]
dec	eax
jz	short loc_100493E4
dec	eax
jnz	short loc_100493F8
mov	eax, [esi+8]
push	eax
call	ds:PR_DestroyMonitor
add	esp, 4
mov	dword ptr [esi+8], 0
pop	esi
retn
mov	ecx, [esi+8]
push	ecx
call	ds:PR_DestroyLock
mov	dword ptr [esi+8], 0
add	esp, 4
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
lea	eax, [esi+4]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_10049471
push	edi
xor	edi, edi
cmp	[esi+14h], edi
jbe	short loc_10049435
mov	edi, edi
mov	ecx, [esi+10h]
mov	edx, [ecx+edi*4]
push	edx
call	sub_1004E6D0
inc	edi
add	esp, 4
cmp	edi, [esi+14h]
jb	short loc_10049420
mov	eax, [esi+0Ch]
dec	eax
pop	edi
jz	short loc_1004944B
dec	eax
jnz	short loc_1004945F
mov	eax, [esi+8]
push	eax
call	ds:PR_DestroyMonitor
jmp	short loc_10049455
mov	ecx, [esi+8]
push	ecx
call	ds:PR_DestroyLock
mov	dword ptr [esi+8], 0
add	esp, 4
mov	edx, [esi]
push	edx
call	sub_10050840
add	esp, 4
mov	eax, 1
pop	esi
retn
xor	eax, eax
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
lea	eax, [esi+4]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
			
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
mov	eax, [esi+0Ch]
dec	eax
push	edi
jz	short loc_100494BC
dec	eax
jnz	short loc_100494C9
mov	eax, [esi+8]
push	eax
call	ds:PR_EnterMonitor
jmp	short loc_100494C6
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Lock
add	esp, 4
mov	eax, [esi+14h]
mov	ebx, [esp+0Ch+arg_4]
test	eax, eax
jnz	short loc_100494E0
mov	edx, [esi]
push	4
push	edx
call	sub_100504B0
jmp	short loc_10049514
xor	edi, edi
test	eax, eax
jz	short loc_10049500
mov	eax, [esi+10h]
mov	ecx, [eax+edi*4]
push	ebx
push	ecx
call	sub_1004E750
add	esp, 8
test	eax, eax
jnz	short loc_1004954C
inc	edi
cmp	edi, [esi+14h]
jb	short loc_100494E6
mov	ecx, [esi+14h]
mov	eax, [esi+10h]
lea	edx, ds:4[ecx*4]
push	edx		
push	eax		
call	sub_100505D0
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10049529
mov	ecx, [esi+14h]
mov	[esi+10h], edi
mov	[edi+ecx*4], ebx
inc	dword ptr [esi+14h]
mov	eax, [esi+0Ch]
dec	eax
jz	short loc_100495A2
dec	eax
jnz	short loc_100495AF
mov	edx, [esi+8]
push	edx
call	ds:PR_ExitMonitor
add	esp, 4
mov	eax, edi
neg	eax
sbb	eax, eax
pop	edi
neg	eax
pop	esi
dec	eax
pop	ebx
retn
mov	edx, [esi+10h]
mov	eax, [edx+edi*4]
mov	ecx, [eax+0Ch]
push	ecx
call	sub_10050550
mov	edx, [esi+10h]
mov	eax, [edx+edi*4]
mov	ecx, [ebx+0Ch]
mov	[eax+0Ch], ecx
mov	eax, [esi+0Ch]
add	esp, 4
dec	eax
jz	short loc_1004957F
dec	eax
jnz	short loc_1004958C
mov	edx, [esi+8]
push	edx
call	ds:PR_ExitMonitor
jmp	short loc_10049589
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
push	ebx
mov	dword ptr [ebx+0Ch], 0
call	sub_1004E6D0
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
neg	eax
sbb	eax, eax
pop	edi
neg	eax
pop	esi
dec	eax
pop	ebx
retn
align 10h
push	ecx
push	ebx
push	esi
mov	esi, [esp+0Ch+arg_0]
mov	eax, [esi+0Ch]
xor	ebx, ebx
dec	eax
push	edi
mov	[esp+10h+var_4], ebx
jz	short loc_100495E3
dec	eax
jnz	short loc_100495F0
mov	eax, [esi+8]
push	eax
call	ds:PR_EnterMonitor
jmp	short loc_100495ED
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Lock
add	esp, 4
mov	edi, [esi+14h]
test	edi, edi
jnz	short loc_1004962C
mov	eax, [esi+0Ch]
dec	eax
jz	short loc_10049618
dec	eax
jnz	loc_100496D2
mov	edx, [esi+8]
push	edx
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
xor	eax, eax
test	edi, edi
jz	short loc_1004966E
mov	edx, [esi+10h]
mov	ebx, [esp+10h+arg_4]
mov	ecx, edx
push	ebp
lea	esp, [esp+0]
mov	ebp, [ecx]
cmp	[ebp+4], ebx
jz	short loc_10049655
inc	eax
add	ecx, 4
cmp	eax, edi
jb	short loc_10049640
mov	ebx, [esp+14h+var_4]
jmp	short loc_1004966D
mov	ebx, [edx+eax*4]
mov	ecx, [edx+edi*4-4]
mov	[edx+eax*4], ecx
mov	edx, [esi+14h]
mov	eax, [esi+10h]
mov	dword ptr [eax+edx*4-4], 0
pop	ebp
dec	dword ptr [esi+14h]
mov	eax, [esi+14h]
jz	short loc_10049693
mov	edx, [esi+10h]
lea	ecx, ds:0[eax*4]
push	ecx		
push	edx		
call	sub_100505D0
add	esp, 8
test	eax, eax
jz	short loc_1004969F
mov	[esi+10h], eax
jmp	short loc_1004969F
mov	eax, [esi+10h]
push	eax
call	sub_10050550
add	esp, 4
			
push	ebx
call	sub_1004E6D0
mov	eax, [esi+0Ch]
add	esp, 4
dec	eax
jz	short loc_100496C5
dec	eax
jnz	short loc_100496D2
mov	ecx, [esi+8]
push	ecx
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
mov	edx, [esi+8]
push	edx
call	ds:PR_Unlock
add	esp, 4
			
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
push	ecx
push	ebp
push	esi
mov	esi, [esp+0Ch+arg_0]
mov	eax, [esi+0Ch]
push	edi
xor	edi, edi
xor	ebp, ebp
dec	eax
mov	[esp+10h+var_4], edi
jz	short loc_10049705
dec	eax
jnz	short loc_10049712
mov	eax, [esi+8]
push	eax
call	ds:PR_EnterMonitor
jmp	short loc_1004970F
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Lock
add	esp, 4
cmp	[esi+14h], edi
jbe	short loc_10049760
push	ebx
mov	edx, [esi+10h]
mov	ebx, [edx+edi*4]
push	ebx
call	sub_1004C670
mov	ebp, eax
mov	eax, [esi+10h]
add	esp, 4
mov	dword ptr [eax+edi*4], 0
test	ebp, ebp
jnz	short loc_10049742
push	ebx
call	sub_1004E6D0
add	esp, 4
jmp	short loc_10049751
mov	eax, [esp+14h+var_4]
mov	ecx, [esi+10h]
mov	[ecx+eax*4], ebx
inc	eax
mov	[esp+14h+var_4], eax
inc	edi
cmp	edi, [esi+14h]
jb	short loc_10049718
mov	eax, [esp+14h+var_4]
pop	ebx
test	eax, eax
jnz	short loc_10049775
mov	edx, [esi+10h]
push	edx
call	sub_10050550
add	esp, 4
mov	dword ptr [esi+14h], 0
jmp	short loc_10049778
mov	[esi+14h], eax
mov	eax, [esi+0Ch]
dec	eax
jz	short loc_10049795
dec	eax
jnz	short loc_100497A2
mov	eax, [esi+8]
push	eax
call	ds:PR_ExitMonitor
add	esp, 4
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ecx
retn
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ecx
retn
align 10h
push	ebx
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+0Ch]
xor	ebx, ebx
dec	eax
jz	short loc_100497CD
dec	eax
jnz	short loc_100497DA
mov	eax, [edi+8]
push	eax
call	ds:PR_EnterMonitor
jmp	short loc_100497D7
mov	ecx, [edi+8]
push	ecx
call	ds:PR_Lock
add	esp, 4
mov	eax, [edi+14h]
test	eax, eax
jz	short loc_1004981D
lea	edx, ds:4[eax*4]
push	edx
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1004981D
push	esi
xor	esi, esi
cmp	[edi+14h], esi
jbe	short loc_1004981C
mov	eax, [edi+10h]
mov	ecx, [eax+esi*4]
mov	edx, [ecx+4]
push	edx
call	sub_1004C2A0
mov	[ebx+esi*4], eax
inc	esi
add	esp, 4
cmp	esi, [edi+14h]
jb	short loc_10049801
pop	esi
			
mov	eax, [edi+0Ch]
dec	eax
jz	short loc_10049832
dec	eax
jnz	short loc_1004983F
mov	eax, [edi+8]
push	eax
call	ds:PR_ExitMonitor
jmp	short loc_1004983C
mov	ecx, [edi+8]
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, [esp+8+arg_4]
test	eax, eax
jz	short loc_1004984D
mov	dword ptr [eax], 0
pop	edi
mov	eax, ebx
pop	ebx
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+0Ch]
push	edi
xor	edi, edi
dec	eax
jz	short loc_1004987D
dec	eax
jnz	short loc_1004988A
mov	eax, [esi+8]
push	eax
call	ds:PR_EnterMonitor
jmp	short loc_10049887
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Lock
add	esp, 4
mov	ecx, [esi+14h]
xor	eax, eax
test	ecx, ecx
jz	short loc_100498D0
mov	edx, [esp+8+arg_4]
push	ebx
test	edx, edx
jnz	short loc_100498A7
mov	ebx, [esi+10h]
mov	ebx, [ebx+eax*4]
cmp	[ebx+0Ch], edi
jnz	short loc_100498B9
mov	ebx, [esi+10h]
mov	ebx, [ebx+eax*4]
cmp	[ebx+4], edx
jz	short loc_100498B9
inc	eax
cmp	eax, ecx
jb	short loc_10049898
jmp	short loc_100498CF
			
mov	edx, [esi+10h]
mov	eax, [edx+eax*4]
mov	ecx, [eax+0Ch]
push	0		
push	ecx		
call	sub_10050D50
add	esp, 8
mov	edi, eax
pop	ebx
mov	eax, [esi+0Ch]
dec	eax
jz	short loc_100498EB
dec	eax
jnz	short loc_100498F8
mov	edx, [esi+8]
push	edx
call	ds:PR_ExitMonitor
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
cmp	dword ptr [edi+14h], 0
jnz	short loc_1004990F
xor	eax, eax
pop	edi
retn
mov	eax, [edi+0Ch]
dec	eax
jz	short loc_10049924
dec	eax
jnz	short loc_10049931
mov	eax, [edi+8]
push	eax
call	ds:PR_EnterMonitor
jmp	short loc_1004992E
mov	ecx, [edi+8]
push	ecx
call	ds:PR_Lock
add	esp, 4
mov	edx, [edi+14h]
push	ebx
lea	eax, ds:4[edx*4]
push	eax
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1004996E
push	esi
xor	esi, esi
cmp	[edi+14h], esi
jbe	short loc_1004996D
mov	ecx, [edi+10h]
mov	edx, [ecx+esi*4]
push	edx
call	sub_1004E700
mov	[ebx+esi*4], eax
inc	esi
add	esp, 4
cmp	esi, [edi+14h]
jb	short loc_10049955
pop	esi
mov	eax, [edi+0Ch]
dec	eax
jz	short loc_10049989
dec	eax
jnz	short loc_10049996
mov	eax, [edi+8]
push	eax
call	ds:PR_ExitMonitor
add	esp, 4
mov	eax, ebx
pop	ebx
pop	edi
retn
mov	ecx, [edi+8]
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, ebx
pop	ebx
pop	edi
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	short loc_100499E8
cmp	dword ptr [edi], 0
push	esi
mov	esi, edi
jz	short loc_100499DE
mov	eax, [esi]
cmp	dword ptr [eax+54h], 0
push	eax
jz	short loc_100499CE
call	sub_1004B8F0
add	esp, 4
test	eax, eax
jz	short loc_100499D6
push	eax
call	CERT_DestroyCertificate
jmp	short loc_100499D3
call	sub_10046070
add	esp, 4
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_100499B1
push	edi
call	sub_10050550
add	esp, 4
pop	esi
pop	edi
retn
align 10h
push	ebx
mov	ebx, [esp+4+Src]
test	ebx, ebx
jz	loc_10049A84
push	ebp
mov	ebp, [esp+8+arg_4]
mov	eax, ebx
test	ebp, ebp
jz	short loc_10049A57
push	esi
xor	esi, esi
cmp	[ebx], esi
jz	short loc_10049A19
nop
add	eax, 4
inc	esi
cmp	dword ptr [eax], 0
jnz	short loc_10049A10
cmp	dword ptr [ebp+0], 0
mov	ecx, esi
mov	eax, ebp
jz	short loc_10049A2C
add	eax, 4
inc	ecx
cmp	dword ptr [eax], 0
jnz	short loc_10049A23
push	edi
lea	eax, ds:4[ecx*4]
push	eax		
push	ebx		
call	sub_100505D0
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_10049A5A
push	ebx
call	sub_10050550
push	ebp
call	sub_10050550
add	esp, 8
pop	edi
xor	eax, eax
pop	esi
pop	ebp
pop	ebx
retn
mov	eax, [ebp+0]
mov	edx, ebp
test	eax, eax
jz	short loc_10049A74
lea	ecx, [edi+esi*4]
add	edx, 4
mov	[ecx], eax
mov	eax, [edx]
add	ecx, 4
test	eax, eax
jnz	short loc_10049A66
push	ebp
call	sub_10050550
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
mov	eax, [esp+4+arg_4]
pop	ebx
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	short loc_10049ABF
mov	eax, [edi]
push	esi
mov	esi, edi
test	eax, eax
jz	short loc_10049AB5
push	eax
call	sub_100468D0
mov	eax, [esi+4]
add	esi, 4
add	esp, 4
test	eax, eax
jnz	short loc_10049AA2
push	edi
call	sub_10050550
add	esp, 4
pop	esi
pop	edi
retn
align 10h
			
push	ebp
push	edi
mov	edi, [esp+8+arg_0]
xor	ebp, ebp
cmp	edi, ebp
jz	loc_10049B85
lea	eax, [edi+0Ch]
push	ebx
mov	ebx, [eax]
cmp	ebx, eax
jz	loc_10049B77
push	esi
nop
cmp	[ebx+8], ebp
jz	short loc_10049B00
mov	eax, [ebx+0Ch]
mov	ecx, [edi+1Ch]
push	eax
call	ecx
jmp	short loc_10049B66
mov	esi, [ebx+0Ch]
lea	edx, [esi+4]
push	edx
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_10049B69
xor	edi, edi
cmp	[esi+14h], ebp
jbe	short loc_10049B35
jmp	short loc_10049B20
align 10h
			
mov	eax, [esi+10h]
mov	ecx, [eax+edi*4]
push	ecx
call	sub_1004E6D0
inc	edi
add	esp, 4
cmp	edi, [esi+14h]
jb	short loc_10049B20
mov	eax, [esi+0Ch]
dec	eax
jz	short loc_10049B4A
dec	eax
jnz	short loc_10049B5A
mov	edx, [esi+8]
push	edx
call	ds:PR_DestroyMonitor
jmp	short loc_10049B54
mov	eax, [esi+8]
push	eax
call	ds:PR_DestroyLock
mov	[esi+8], ebp
add	esp, 4
mov	ecx, [esi]
push	ecx
call	sub_10050840
mov	edi, [esp+14h+arg_0]
add	esp, 4
mov	ebx, [ebx]
lea	eax, [edi+0Ch]
cmp	ebx, eax
jnz	loc_10049AF0
pop	esi
mov	edx, [edi]
pop	ebx
pop	edi
pop	ebp
mov	[esp+arg_0], edx
jmp	sub_10050840
pop	edi
pop	ebp
retn
align 10h
			
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi]
push	20h
push	eax
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10049BAF
pop	edi
or	eax, 0FFFFFFFFh
pop	esi
retn
push	ebx
mov	ebx, [esp+0Ch+arg_4]
lea	ecx, [ebx+4]
push	ecx
mov	dword ptr [esi+8], 1
call	ds:PR_AtomicIncrement
lea	edx, [esi+10h]
push	edx
mov	[esi+0Ch], ebx
mov	eax, [edi+20h]
push	ebx
call	eax
mov	[esi+4], esi
lea	ecx, [edi+0Ch]
mov	[esi], ecx
mov	edx, [edi+10h]
mov	[esi+4], edx
mov	eax, [edi+10h]
add	esp, 0Ch
mov	[eax], esi
inc	dword ptr [edi+14h]
pop	ebx
mov	[edi+10h], esi
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
push	ecx
push	ebx
mov	ebx, [eax+0Ch]
add	eax, 0Ch
push	ebp
push	esi
push	edi
mov	[esp+14h+var_4], eax
cmp	ebx, eax
jz	loc_10049C9C
mov	esi, [ebx+0Ch]
mov	eax, [esi+0Ch]
xor	ebp, ebp
dec	eax
jz	short loc_10049C31
dec	eax
jnz	short loc_10049C3E
mov	eax, [esi+8]
push	eax
call	ds:PR_EnterMonitor
jmp	short loc_10049C3B
mov	ecx, [esi+8]
push	ecx
call	ds:PR_Lock
add	esp, 4
xor	edi, edi
cmp	[esi+14h], edi
jbe	short loc_10049C6A
mov	edx, [esp+14h+arg_0]
mov	eax, [esi+10h]
mov	ecx, [eax+edi*4]
push	edx
push	ecx
call	sub_1004E750
add	esp, 8
test	eax, eax
jnz	short loc_10049C65
inc	edi
cmp	edi, [esi+14h]
jb	short loc_10049C45
jmp	short loc_10049C6A
mov	ebp, 1
			
mov	eax, [esi+0Ch]
dec	eax
jz	short loc_10049C7F
dec	eax
jnz	short loc_10049C8C
mov	edx, [esi+8]
push	edx
call	ds:PR_ExitMonitor
jmp	short loc_10049C89
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
test	ebp, ebp
jnz	short loc_10049CA4
mov	ebx, [ebx]
cmp	ebx, [esp+14h+var_4]
jnz	loc_10049C17
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
pop	ecx
retn
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
pop	ecx
retn
align 10h
			
sub	esp, 8
push	ebx
add	eax, 0Ch
push	ebp
mov	ebp, [eax]
push	esi
push	edi
mov	[esp+18h+var_8], eax
cmp	ebp, eax
jz	short loc_10049CFD
mov	edi, [esp+18h+arg_0]
xor	esi, esi
lea	ebx, [ebp+10h]
lea	ecx, [ecx+0]
lea	eax, [esp+18h+var_4]
push	eax
push	edi
push	ebx
call	sub_10050D00
add	esp, 0Ch
test	eax, eax
jz	short loc_10049CEF
inc	esi
add	edi, 8
add	ebx, 8
cmp	esi, 2
jb	short loc_10049CD0
cmp	esi, 2
jz	short loc_10049D07
mov	ebp, [ebp+0]
cmp	ebp, [esp+18h+var_8]
jnz	short loc_10049CC4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
pop	edi
pop	esi
mov	eax, ebp
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
push	ecx
push	ebp
xor	ebp, ebp
push	esi
mov	esi, [ebx+0Ch]
mov	[esp+0Ch+var_4], ebp
cmp	[esp+0Ch+arg_4], ebp
jbe	short loc_10049D9E
push	edi
lea	eax, [ebx+0Ch]
cmp	esi, eax
jz	short loc_10049D96
cmp	dword ptr [esi+8], 0
mov	edi, esi
jnz	short loc_10049D76
mov	eax, [esi+0Ch]
mov	ecx, [ebx+28h]
push	eax
call	ecx
add	esp, 4
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_10049D6F
mov	edx, [edi+4]
mov	eax, [edi]
mov	esi, [esi]
mov	[edx], eax
mov	ecx, [edi]
mov	edx, [edi+4]
mov	[ecx+4], edx
dec	dword ptr [ebx+14h]
inc	[esp+10h+var_4]
jmp	short loc_10049D90
mov	dword ptr [esi+8], 1
mov	edi, [esi+0Ch]
lea	eax, [edi+4]
push	eax
call	ds:PR_AtomicIncrement
mov	ecx, [esp+14h+arg_0]
mov	[ecx+ebp*4], edi
mov	esi, [esi]
add	esp, 4
inc	ebp
cmp	ebp, [esp+10h+arg_4]
jb	short loc_10049D33
cmp	[esp+10h+var_4], 0
pop	edi
jnz	short loc_10049DB5
mov	edx, [esp+0Ch+arg_0]
cmp	dword ptr [edx], 0
jnz	short loc_10049DB5
mov	eax, ds:dword_100A7E44
push	eax
call	sub_10050AF0
add	esp, 4
			
pop	esi
xor	eax, eax
pop	ebp
pop	ecx
retn
align 10h
push	ebx
mov	ebx, [esp+4+arg_0]
lea	eax, [ebx+0Ch]
push	esi
mov	esi, [eax]
cmp	esi, eax
jz	short loc_10049E37
push	ebp
mov	ebp, [esp+0Ch+arg_4]
push	edi
cmp	dword ptr [esi+8], 0
mov	edi, esi
jnz	short loc_10049E0D
mov	eax, [esi+0Ch]
mov	ecx, [ebx+28h]
push	eax
call	ecx
add	esp, 4
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_10049E06
mov	edx, [edi+4]
mov	eax, [edi]
mov	esi, [esi]
mov	[edx], eax
mov	ecx, [edi]
mov	edx, [edi+4]
mov	[ecx+4], edx
dec	dword ptr [ebx+14h]
jmp	short loc_10049E2E
mov	dword ptr [esi+8], 1
mov	eax, [ebx+18h]
cmp	eax, 3		
ja	short loc_10049E2C 
jmp	ds:off_10049E3C[eax*4] 
			
mov	eax, [ebp+4]	
mov	ecx, [esi+0Ch]
mov	edx, [ebp+0]
push	eax
push	ecx
call	edx
add	esp, 8
mov	esi, [esi]	
lea	eax, [ebx+0Ch]
cmp	esi, eax
jnz	short loc_10049DD5
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
retn
dd offset loc_10049E1C	
dd offset loc_10049E1C
dd offset loc_10049E1C
align 10h
push	esi
mov	esi, [esp+8]
cmp	dword ptr [esi+54h], 0
jz	short loc_10049E72
push	esi
call	sub_1004B8F0
add	esp, 4
test	eax, eax
jz	short loc_10049E72
pop	esi
mov	[esp+4], eax
jmp	CERT_DestroyCertificate
			
push	esi
call	sub_10046070
add	esp, 4
pop	esi
retn
align 10h
mov	eax, [esp+4]
push	eax
call	sub_100461B0
mov	ecx, [esp+0Ch]
xor	edx, edx
add	esp, 4
mov	[ecx], edx
mov	[ecx+4], edx
mov	[ecx+8], edx
mov	[ecx+0Ch], edx
cmp	eax, edx
jz	short loc_10049EAC
mov	edx, [eax]
mov	[ecx], edx
mov	eax, [eax+4]
mov	[ecx+4], eax
xor	eax, eax
retn
align 10h
mov	eax, [esp+8]
xor	ecx, ecx
push	ecx
push	ecx
push	ecx
push	eax
push	ecx
push	ecx
mov	[eax+8], ecx
mov	[eax+0Ch], ecx
mov	eax, [esp+24h]
push	eax
push	ecx
mov	ecx, [esp+24h]
push	ecx
call	sub_1004F8C0
add	esp, 24h
retn
align 10h
push	esi
mov	esi, [esp+8]
push	esi
call	sub_10045FA0
mov	ecx, [esi+18h]
mov	[esp+0Ch], eax
push	1
lea	eax, [esp+10h]
push	eax
push	ecx
call	sub_100480B0
mov	eax, [esp+18h]
add	esp, 10h
pop	esi
retn
align 10h
			
push	ebx
push	ebp
push	esi
push	edi
call	sub_100507B0
mov	esi, eax
xor	ebx, ebx
cmp	esi, ebx
jnz	short loc_10049F25
xor	edi, edi
jmp	short loc_10049F5E
push	30h
push	esi
call	sub_100504B0
add	esp, 8
cmp	eax, ebx
jnz	short loc_10049F41
push	esi
call	sub_10050840
add	esp, 4
xor	edi, edi
jmp	short loc_10049F5E
lea	ecx, [eax+0Ch]
mov	[ecx], ecx
mov	[eax+10h], ecx
mov	ecx, [esp+10h+arg_0]
mov	[eax], esi
mov	[eax+4], ecx
mov	[eax+8], ebx
mov	dword ptr [eax+2Ch], 2
mov	edi, eax
			
mov	ebp, [esp+10h+arg_4]
mov	[edi+18h], ebx
mov	dword ptr [edi+1Ch], offset loc_10049E50
mov	dword ptr [edi+20h], offset loc_10049E80
mov	dword ptr [edi+24h], offset loc_10049EB0
mov	dword ptr [edi+28h], offset loc_10049EE0
cmp	ebp, ebx
jz	short loc_10049FE7
mov	ebx, [ebp+0]
test	ebx, ebx
jz	short loc_10049FE7
lea	esp, [esp+0]
mov	edx, [edi]
push	20h
push	edx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10049FDD
lea	eax, [ebx+4]
push	eax
mov	dword ptr [esi+8], 1
call	ds:PR_AtomicIncrement
lea	ecx, [esi+10h]
push	ecx
mov	[esi+0Ch], ebx
mov	edx, [edi+20h]
push	ebx
call	edx
mov	[esi+4], esi
lea	eax, [edi+0Ch]
mov	[esi], eax
mov	ecx, [edi+10h]
mov	[esi+4], ecx
mov	edx, [edi+10h]
mov	[edx], esi
add	esp, 0Ch
inc	dword ptr [edi+14h]
mov	[edi+10h], esi
mov	ebx, [ebp+4]
add	ebp, 4
test	ebx, ebx
jnz	short loc_10049F90
			
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
jmp	sub_100468D0
align 10h
mov	eax, [esp+4]
push	eax
call	sub_10046970
xor	edx, edx
add	esp, 4
cmp	eax, edx
jnz	short loc_1004A025
mov	ecx, ds:dword_100A7E34
push	ecx
call	sub_10050AF0
add	esp, 4
xor	eax, eax
retn
mov	ecx, [esp+8]
push	esi
mov	esi, [eax]
mov	[ecx], esi
mov	eax, [eax+4]
mov	[ecx+4], eax
mov	[ecx+8], edx
mov	[ecx+0Ch], edx
pop	esi
xor	eax, eax
retn
align 10h
mov	eax, [esp+8]
mov	ecx, [esp+0Ch]
mov	edx, [esp+4]
push	0
push	0
push	0
push	0
push	eax
push	ecx
push	0
push	edx
call	sub_1004FF20
add	esp, 20h
retn
align 10h
jmp	loc_100468F0
align 10h
			
push	ebp
push	esi
push	edi
call	sub_100507B0
mov	esi, eax
test	esi, esi
jnz	short loc_1004A092
xor	edi, edi
jmp	short loc_1004A0CF
push	30h
push	esi
call	sub_100504B0
add	esp, 8
test	eax, eax
jnz	short loc_1004A0AE
push	esi
call	sub_10050840
add	esp, 4
xor	edi, edi
jmp	short loc_1004A0CF
lea	ecx, [eax+0Ch]
mov	[ecx], ecx
mov	[eax+10h], ecx
mov	ecx, [esp+0Ch+arg_0]
mov	[eax], esi
mov	[eax+4], ecx
mov	dword ptr [eax+8], 0
mov	dword ptr [eax+2Ch], 1
mov	edi, eax
			
mov	ebp, [esp+0Ch+arg_4]
mov	dword ptr [edi+18h], 1
mov	dword ptr [edi+1Ch], offset loc_10049FF0
mov	dword ptr [edi+20h], offset loc_1004A000
mov	dword ptr [edi+24h], offset loc_1004A040
mov	dword ptr [edi+28h], offset loc_1004A070
test	ebp, ebp
jz	short loc_1004A160
push	ebx
mov	ebx, [ebp+0]
test	ebx, ebx
jz	short loc_1004A159
mov	edx, [edi]
push	20h
push	edx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004A14F
lea	eax, [ebx+4]
push	eax
mov	dword ptr [esi+8], 1
call	ds:PR_AtomicIncrement
lea	ecx, [esi+10h]
push	ecx
mov	[esi+0Ch], ebx
mov	edx, [edi+20h]
push	ebx
call	edx
mov	[esi+4], esi
lea	eax, [edi+0Ch]
mov	[esi], eax
mov	ecx, [edi+10h]
mov	[esi+4], ecx
mov	edx, [edi+10h]
mov	[edx], esi
add	esp, 0Ch
inc	dword ptr [edi+14h]
mov	[edi+10h], esi
mov	ebx, [ebp+4]
add	ebp, 4
test	ebx, ebx
jnz	short loc_1004A102
pop	ebx
mov	eax, edi
pop	edi
pop	esi
pop	ebp
retn
mov	eax, edi
pop	edi
pop	esi
pop	ebp
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+14h]
push	ebp
xor	ebp, ebp
test	eax, eax
jnz	short loc_1004A182
pop	ebp
pop	ebx
retn
push	edi
mov	edi, [esp+0Ch+arg_8]
test	edi, edi
jz	short loc_1004A18F
cmp	eax, edi
jnb	short loc_1004A191
mov	edi, eax
push	esi
mov	esi, [esp+10h+arg_4]
test	esi, esi
jnz	short loc_1004A1BA
mov	ecx, [esp+10h+arg_C]
lea	eax, ds:4[edi*4]
push	eax
push	ecx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004A1D5
mov	ebp, 1
push	edi
push	esi
call	sub_10049D20
add	esp, 8
test	eax, eax
jz	short loc_1004A1DC
test	ebp, ebp
jz	short loc_1004A1D5
push	esi
call	sub_10050550
add	esp, 4
			
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
mov	eax, esi
pop	esi
pop	edi
pop	ebp
pop	ebx
retn
align 10h
			
mov	eax, [esp+arg_0]
test	eax, eax
jnz	short loc_1004A207
push	8
push	eax
call	sub_100504B0
add	esp, 8
test	eax, eax
jz	short locret_1004A214
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_8]
mov	[eax], ecx
mov	[eax+4], edx
retn
align 10h
mov	ecx, [esp+arg_0]
mov	eax, [ecx]
mov	edx, [ecx+4]
retn
align 10h
			
push	ebx
push	edi
mov	edi, [esp+8+arg_0]
xor	ebx, ebx
test	edi, edi
jz	short loc_1004A27E
push	edi
call	sub_100508A0
add	esp, 4
mov	ebx, eax
push	esi
push	24h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004A2B6
mov	eax, [esp+0Ch+arg_8]
mov	ecx, [esp+0Ch+arg_C]
mov	[esi+18h], eax
mov	eax, [esp+0Ch+arg_10]
mov	[esi+0Ch], eax
dec	eax
mov	[esi], edi
mov	[esi+1Ch], ecx
jz	short loc_1004A28C
dec	eax
jnz	short loc_1004A2B6
call	ds:PR_NewMonitor
jmp	short loc_1004A292
call	sub_100507B0
mov	edi, eax
test	edi, edi
jnz	short loc_1004A247
pop	edi
pop	ebx
retn
call	ds:PR_NewLock
mov	[esi+8], eax
neg	eax
sbb	eax, eax
neg	eax
dec	eax
test	eax, eax
jnz	short loc_1004A2B6
mov	eax, [esp+0Ch+arg_4]
test	eax, eax
jz	short loc_1004A2D9
push	eax
push	esi
call	sub_100494A0
add	esp, 8
test	eax, eax
jz	short loc_1004A2D9
			
test	ebx, ebx
jz	short loc_1004A2CA
push	ebx
push	edi
call	sub_100503A0
add	esp, 8
pop	esi
pop	edi
xor	eax, eax
pop	ebx
retn
push	edi
call	sub_10050840
add	esp, 4
pop	esi
pop	edi
xor	eax, eax
pop	ebx
retn
			
lea	edx, [esi+4]
push	edx
call	ds:PR_AtomicIncrement
add	esp, 4
test	ebx, ebx
jz	short loc_1004A2F4
push	ebx
push	edi
call	sub_100503C0
add	esp, 8
mov	eax, esi
pop	esi
pop	edi
pop	ebx
retn
align 10h
sub	esp, 10h
push	ebp
mov	ebp, [esp+14h+arg_0]
push	esi
push	10h
lea	eax, [esp+1Ch+var_10]
push	0		
push	eax		
call	sub_10050BD0
push	ebx
mov	eax, edi
mov	dword ptr [ebp+0], 0
call	sub_10049C00
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_1004A347
push	ebx
call	sub_1004E6D0
add	esp, 4
mov	eax, esi
pop	esi
mov	dword ptr [ebp+0], 1
pop	ebp
add	esp, 10h
retn
mov	ecx, [edi]
push	ecx
call	sub_100508A0
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	loc_1004A3E4
mov	edx, [edi]
mov	ecx, [edi+24h]
push	edx
lea	eax, [esp+1Ch+var_10]
push	eax
push	ebx
call	ecx
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004A3D8
lea	edx, [esp+18h+var_10]
push	edx
mov	eax, edi
call	sub_10049CB0
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1004A3A7
mov	eax, [esi+0Ch]
push	ebx
push	eax
call	sub_100494A0
mov	ecx, [edi]
add	esp, 8
push	ebp
push	ecx
call	sub_100503C0
add	esp, 8
mov	eax, esi
pop	esi
pop	ebp
add	esp, 10h
retn
mov	ecx, [edi]
push	20h
push	ecx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004A3D8
mov	edx, [edi+2Ch]
mov	eax, [edi+8]
mov	ecx, [edi+4]
push	edx
push	eax
push	ecx
push	ebx
push	0
call	sub_1004A230
add	esp, 14h
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_1004A3F5
			
mov	edx, [edi]
push	ebp
push	edx
call	sub_100503A0
add	esp, 8
push	ebx
call	sub_1004E6D0
add	esp, 4
pop	esi
xor	eax, eax
pop	ebp
add	esp, 10h
retn
mov	eax, [esp+18h+var_10]
mov	[esi+10h], eax
mov	ecx, [esp+18h+var_C]
mov	[esi+14h], ecx
mov	edx, [esp+18h+var_8]
mov	[esi+18h], edx
mov	eax, [esp+18h+var_4]
mov	[esi+1Ch], eax
mov	[esi+4], esi
mov	dword ptr [esi+8], 0
lea	ecx, [edi+0Ch]
mov	[esi], ecx
mov	edx, [edi+10h]
mov	[esi+4], edx
mov	eax, [edi+10h]
mov	[eax], esi
mov	ecx, [edi]
inc	dword ptr [edi+14h]
push	ebp
push	ecx
mov	[edi+10h], esi
call	sub_100503C0
add	esp, 8
mov	eax, esi
pop	esi
pop	ebp
add	esp, 10h
retn
align 10h
			
sub	esp, 18h
push	esi
xor	esi, esi
mov	[esp+1Ch+var_18], esi
mov	[esp+1Ch+var_14], esi
cmp	[esp+1Ch+arg_4], esi
jz	loc_1004A5F7
push	edi
mov	edi, [esp+20h+arg_0]
push	ebx
push	ebp
nop
			
mov	eax, [esp+28h+arg_8]
test	eax, eax
jz	short loc_1004A482
cmp	[esp+28h+var_14], eax
jnb	loc_1004A5ED
mov	eax, [esp+28h+arg_4]
mov	ebx, [eax]
test	ebx, ebx
jz	loc_1004A5ED
test	esi, esi
jnz	loc_1004A5D6
push	10h
lea	ecx, [esp+2Ch+var_10]
push	esi		
push	ecx		
call	sub_10050BD0
push	ebx
mov	eax, edi
call	sub_10049C00
add	esp, 10h
test	eax, eax
jnz	loc_1004A5D6
mov	edx, [edi]
push	edx
call	sub_100508A0
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jz	loc_1004A559
mov	eax, [edi]
mov	edx, [edi+24h]
push	eax
lea	ecx, [esp+2Ch+var_10]
push	ecx
push	ebx
call	edx
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004A54D
lea	eax, [esp+28h+var_10]
push	eax
mov	eax, edi
call	sub_10049CB0
add	esp, 4
test	eax, eax
jz	short loc_1004A51C
mov	ecx, [eax+0Ch]
push	ebx
push	ecx
call	sub_100494A0
mov	edx, [edi]
add	esp, 8
push	ebp
push	edx
call	sub_100503C0
add	[esp+30h+arg_4], 4
add	esp, 8
inc	[esp+28h+var_14]
jmp	loc_1004A470
mov	edx, [edi]
push	20h
push	edx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004A54D
mov	eax, [edi+2Ch]
mov	ecx, [edi+8]
mov	edx, [edi+4]
push	eax
push	ecx
push	edx
push	ebx
push	0
call	sub_1004A230
add	esp, 14h
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_1004A57C
			
mov	eax, [edi]
push	ebp
push	eax
call	sub_100503A0
add	esp, 8
push	ebx
call	sub_1004E6D0
add	[esp+2Ch+arg_4], 4
mov	[esp+2Ch+var_18], 0FFFFFFFFh
mov	esi, [esp+2Ch+var_18]
add	esp, 4
inc	[esp+28h+var_14]
jmp	loc_1004A470
mov	ecx, [esp+28h+var_10]
mov	[esi+10h], ecx
mov	edx, [esp+28h+var_C]
mov	[esi+14h], edx
mov	eax, [esp+28h+var_8]
mov	[esi+18h], eax
mov	ecx, [esp+28h+var_4]
mov	[esi+1Ch], ecx
mov	[esi+4], esi
mov	dword ptr [esi+8], 0
lea	edx, [edi+0Ch]
mov	[esi], edx
mov	eax, [edi+10h]
mov	[esi+4], eax
mov	ecx, [edi+10h]
mov	[ecx], esi
mov	edx, [edi]
inc	dword ptr [edi+14h]
push	ebp
mov	[edi+10h], esi
mov	esi, [esp+2Ch+var_18]
push	edx
call	sub_100503C0
add	[esp+30h+arg_4], 4
add	esp, 8
inc	[esp+28h+var_14]
jmp	loc_1004A470
			
push	ebx
call	sub_1004E6D0
add	[esp+2Ch+arg_4], 4
add	esp, 4
inc	[esp+28h+var_14]
jmp	loc_1004A470
			
pop	ebp
pop	ebx
pop	edi
mov	eax, esi
pop	esi
add	esp, 18h
retn
mov	eax, esi
pop	esi
add	esp, 18h
retn
align 10h
push	ecx
push	ebx
mov	ebx, [esp+8+arg_4]
push	esi
push	edi
mov	edi, [esp+10h+arg_0]
lea	eax, [esp+10h+var_4]
push	eax
call	sub_1004A300
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1004A627
pop	edi
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
pop	ecx
retn
cmp	dword ptr [esi+8], 0
jnz	short loc_1004A668
mov	ecx, [esi+0Ch]
mov	edx, [edi+28h]
push	ecx
call	edx
add	esp, 4
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_1004A65A
mov	eax, [esi+4]
mov	ecx, [esi]
mov	[eax], ecx
mov	eax, [esi+4]
mov	edx, [esi]
mov	[edx+4], eax
or	eax, 0FFFFFFFFh
add	[edi+14h], eax
pop	edi
pop	esi
pop	ebx
pop	ecx
retn
pop	edi
mov	dword ptr [esi+8], 1
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
cmp	[esp+10h+var_4], 0
jnz	short loc_1004A67B
mov	ecx, [esi+0Ch]
push	ecx
call	sub_1004B8D0
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
			
sub	esp, 18h
mov	eax, [esp+18h+arg_4]
push	ebp
push	edi
xor	edi, edi
xor	ebp, ebp
mov	[esp+20h+var_18], edi
mov	[esp+20h+var_14], edi
mov	[esp+20h+var_10], edi
cmp	eax, edi
jnz	short loc_1004A6BF
call	ds:PR_Now
mov	[esp+20h+var_8], eax
mov	[esp+20h+var_4], edx
lea	eax, [esp+20h+var_8]
mov	[esp+20h+arg_4], eax
mov	eax, [esp+20h+arg_0]
cmp	eax, edi
jnz	short loc_1004A6D3
pop	edi
xor	eax, eax
pop	ebp
add	esp, 18h
retn
push	ebx
mov	ebx, [eax]
cmp	ebx, edi
jz	loc_1004A842
push	esi
nop
push	ebx
call	sub_10046200
mov	esi, eax
add	esp, 4
test	esi, esi
jz	loc_1004A82B
mov	ecx, [esp+28h+arg_8]
mov	edx, [esi+24h]
push	ecx
push	esi
call	edx
add	esp, 8
mov	[esp+28h+var_C], eax
test	edi, edi
jnz	short loc_1004A721
push	ebx
call	sub_10046950
mov	edi, eax
mov	eax, [esp+2Ch+var_C]
add	esp, 4
mov	[esp+28h+var_18], eax
jmp	loc_1004A829
cmp	[esp+28h+var_18], 0
jz	short loc_1004A774
test	eax, eax
jz	loc_1004A82B
cmp	[esp+28h+var_14], 0
jnz	short loc_1004A791
mov	edx, [esp+28h+arg_4]
mov	eax, [ebp+1Ch]
push	edx
push	ebp
call	eax
add	esp, 8
test	eax, eax
jnz	short loc_1004A791
mov	ecx, [esp+28h+arg_4]
mov	edx, [esi+1Ch]
push	ecx
push	esi
call	edx
add	esp, 8
test	eax, eax
jz	short loc_1004A7AF
push	edi
call	sub_10046070
push	ebx
call	sub_10046950
mov	[esp+30h+var_14], 1
jmp	loc_1004A824
test	eax, eax
jz	short loc_1004A730
push	edi
call	sub_10046070
push	ebx
call	sub_10046950
mov	ecx, [esp+30h+var_C]
mov	[esp+30h+var_18], ecx
jmp	loc_1004A824
			
mov	eax, [esp+28h+arg_4]
mov	ecx, [esi+1Ch]
push	eax
push	esi
mov	[esp+30h+var_14], 1
call	ecx
add	esp, 8
test	eax, eax
jz	loc_1004A82B
cmp	[esp+28h+var_10], 0
jnz	short loc_1004A7F0
mov	edx, [esp+28h+arg_8]
mov	eax, [ebp+28h]
push	edx
push	ebp
call	eax
add	esp, 8
test	eax, eax
jnz	short loc_1004A7F0
mov	ecx, [esp+28h+arg_8]
mov	edx, [esi+28h]
push	ecx
push	esi
call	edx
add	esp, 8
test	eax, eax
jz	short loc_1004A80A
push	edi
call	sub_10046070
push	ebx
call	sub_10046950
mov	[esp+30h+var_10], 1
jmp	short loc_1004A824
			
mov	eax, [esp+28h+arg_8]
mov	ecx, [esi+28h]
push	eax
push	esi
mov	[esp+30h+var_10], 1
call	ecx
add	esp, 8
test	eax, eax
jz	short loc_1004A82B
mov	edx, [ebp+20h]
push	esi
push	ebp
call	edx
add	esp, 8
test	eax, eax
jnz	short loc_1004A82B
push	edi
call	sub_10046070
push	ebx
call	sub_10046950
			
mov	edi, eax
add	esp, 8
mov	ebp, esi
			
mov	eax, [esp+28h+arg_0]
mov	ebx, [eax+4]
add	eax, 4
mov	[esp+28h+arg_0], eax
test	ebx, ebx
jnz	loc_1004A6E0
pop	esi
pop	ebx
mov	eax, edi
pop	edi
pop	ebp
add	esp, 18h
retn
align 10h
			
mov	eax, dword_100BAE40
retn
align 10h
			
mov	eax, dword_100BAE44
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jnz	short loc_1004A883
mov	esi, dword_100BAE40
test	esi, esi
jz	short loc_1004A8C1
push	ebx
mov	ebx, [esp+8+arg_4]
push	edi
push	ebx
push	esi
call	sub_100125A0
mov	edi, eax
push	edi
push	ebx
call	sub_10036720
add	esp, 10h
test	edi, edi
jz	short loc_1004A8BF
mov	eax, [esi+18h]
push	eax
call	NSSRWLock_LockWrite_Util
mov	ecx, [esi+0Ch]
push	edi
push	ecx
call	sub_10051180
mov	edx, [esi+18h]
push	edx
call	NSSRWLock_UnlockWrite_Util
add	esp, 10h
pop	edi
pop	ebx
xor	eax, eax
pop	esi
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jnz	short loc_1004A8E3
mov	esi, dword_100BAE40
test	esi, esi
jz	short loc_1004A90D
mov	eax, [esi+18h]
push	eax
call	NSSRWLock_LockWrite_Util
mov	ecx, [esi+10h]
push	ecx
call	sub_10051510
mov	edx, [esi+0Ch]
push	edx
call	sub_100514A0
mov	[esi+10h], eax
mov	eax, [esi+18h]
push	eax
call	NSSRWLock_UnlockWrite_Util
add	esp, 10h
xor	eax, eax
pop	esi
retn
align 10h
			
sub	esp, 8
push	esi
call	SECMOD_GetDefaultModuleListLock
cmp	dword_100BAE40,	0
mov	esi, eax
mov	[esp+0Ch+var_4], esi
jnz	loc_1004AA65
cmp	dword_100BAE44,	0
jnz	loc_1004AA65
push	ebx
push	0
push	0
push	0
push	0
call	sub_10046EF0
mov	ebx, eax
add	esp, 10h
test	ebx, ebx
jz	loc_1004AA4E
mov	eax, [ebx+4]
push	1
push	eax
call	sub_10050FA0
add	esp, 8
mov	[ebx+0Ch], eax
test	eax, eax
jz	loc_1004AA45
push	esi
call	SECMOD_GetReadLock
mov	ecx, [ebx+18h]
push	ecx
call	NSSRWLock_LockWrite_Util
add	esp, 8
call	SECMOD_GetDefaultModuleList
mov	ecx, eax
mov	[esp+10h+var_8], eax
test	ecx, ecx
jz	short loc_1004AA0D
push	ebp
push	edi
jmp	short loc_1004A9A6
mov	ecx, [esp+18h+var_8]
mov	eax, [ecx+4]
xor	ebp, ebp
cmp	[eax+2Ch], ebp
jle	short loc_1004A9FD
mov	edx, [eax+28h]
mov	edi, [edx+ebp*4]
push	edi
push	ebx
call	sub_100125A0
mov	esi, eax
push	esi
push	edi
call	sub_10036720
add	esp, 10h
test	esi, esi
jz	short loc_1004A9EC
mov	eax, [ebx+18h]
push	eax
call	NSSRWLock_LockWrite_Util
mov	ecx, [ebx+0Ch]
push	esi
push	ecx
call	sub_10051180
mov	edx, [ebx+18h]
push	edx
call	NSSRWLock_UnlockWrite_Util
add	esp, 10h
mov	eax, [esp+18h+var_8]
mov	eax, [eax+4]
inc	ebp
cmp	ebp, [eax+2Ch]
jl	short loc_1004A9B0
mov	ecx, [esp+18h+var_8]
mov	ecx, [ecx]
mov	[esp+18h+var_8], ecx
test	ecx, ecx
jnz	short loc_1004A9A2
mov	esi, [esp+18h+var_4]
pop	edi
pop	ebp
mov	ecx, [ebx+0Ch]
push	ecx
call	sub_100514A0
mov	edx, [ebx+18h]
push	edx
mov	[ebx+10h], eax
call	NSSRWLock_UnlockWrite_Util
push	esi
call	SECMOD_ReleaseReadLock
add	esp, 0Ch
cmp	dword ptr [ebx+10h], 0
jz	short loc_1004AA45
push	0
push	ebx
call	sub_100478D0
add	esp, 8
mov	dword_100BAE44,	eax
test	eax, eax
jnz	short loc_1004AA57
			
push	ebx
call	sub_10046F70
add	esp, 4
pop	ebx
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
mov	dword_100BAE40,	ebx
pop	ebx
xor	eax, eax
pop	esi
add	esp, 8
retn
			
mov	eax, ds:dword_100A7E6C
push	eax
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 8
retn
align 10h
			
push	ecx
mov	edx, [esp+4+arg_0]
mov	eax, dword_100BAE40
xor	ecx, ecx
push	ebp
mov	ebp, eax
mov	[esp+8+var_4], ecx
cmp	[edx+2Ch], ecx
jle	short loc_1004AB02
push	ebx
push	esi
push	edi
jmp	short loc_1004AAA0
align 10h
			
mov	edx, [edx+28h]
mov	ebx, [edx+ecx*4]
mov	esi, ebp
test	ebp, ebp
jnz	short loc_1004AAB2
mov	esi, eax
test	eax, eax
jz	short loc_1004AAED
push	ebx
push	esi
call	sub_100125A0
mov	edi, eax
push	edi
push	ebx
call	sub_10036720
add	esp, 10h
test	edi, edi
jz	short loc_1004AAE8
mov	eax, [esi+18h]
push	eax
call	NSSRWLock_LockWrite_Util
mov	ecx, [esi+0Ch]
push	edi
push	ecx
call	sub_10051180
mov	edx, [esi+18h]
push	edx
call	NSSRWLock_UnlockWrite_Util
add	esp, 10h
mov	eax, dword_100BAE40
mov	ecx, [esp+14h+var_4]
mov	edx, [esp+14h+arg_0]
inc	ecx
mov	[esp+14h+var_4], ecx
cmp	ecx, [edx+2Ch]
jl	short loc_1004AAA0
pop	edi
pop	esi
pop	ebx
test	ebp, ebp
jnz	short loc_1004AB0C
mov	ebp, eax
test	eax, eax
jz	short loc_1004AB36
mov	eax, [ebp+18h]
push	eax
call	NSSRWLock_LockWrite_Util
mov	ecx, [ebp+10h]
push	ecx
call	sub_10051510
mov	edx, [ebp+0Ch]
push	edx
call	sub_100514A0
mov	[ebp+10h], eax
mov	eax, [ebp+18h]
push	eax
call	NSSRWLock_UnlockWrite_Util
add	esp, 10h
xor	eax, eax
pop	ebp
pop	ecx
retn
align 10h
			
push	ebx
push	ebp
mov	ebp, dword_100BAE40
mov	eax, [ebp+18h]
push	edi
push	eax
call	NSSRWLock_LockWrite_Util
mov	ebx, [esp+10h+arg_0]
xor	edi, edi
add	esp, 4
cmp	[ebx+2Ch], edi
jle	short loc_1004ABA4
push	esi
mov	ecx, [ebx+28h]
mov	edx, [ecx+edi*4]
push	edx
call	sub_10036730
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1004AB9D
push	esi
call	sub_10012800
mov	eax, [ebp+0Ch]
push	esi
push	eax
call	sub_10051220
mov	ecx, [ebx+28h]
mov	edx, [ecx+edi*4]
push	0
push	edx
call	sub_10036720
push	esi
call	sub_1004C5B0
add	esp, 18h
inc	edi
cmp	edi, [ebx+2Ch]
jl	short loc_1004AB61
pop	esi
mov	eax, [ebp+10h]
push	eax
call	sub_10051510
mov	ecx, [ebp+0Ch]
push	ecx
call	sub_100514A0
mov	edx, [ebp+18h]
push	edx
mov	[ebp+10h], eax
call	NSSRWLock_UnlockWrite_Util
add	esp, 0Ch
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
align 10h
mov	eax, dword_100BAE40
push	esi
xor	esi, esi
test	eax, eax
jz	short loc_1004ABF4
push	eax
call	sub_10046F70
add	esp, 4
test	eax, eax
jnz	short loc_1004ABF1
mov	dword_100BAE40,	esi
jmp	short loc_1004ABF4
or	esi, 0FFFFFFFFh
			
mov	eax, dword_100BAE44
test	eax, eax
jz	short loc_1004AC0F
push	eax
call	sub_10046CA0
add	esp, 4
test	eax, eax
jnz	short loc_1004AC13
mov	dword_100BAE44,	eax
mov	eax, esi
pop	esi
retn
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
sub	esp, 24h
xor	eax, eax
mov	[esp+24h+var_18], eax
mov	[esp+24h+var_14], eax
mov	[esp+24h+var_10], eax
mov	[esp+24h+var_24], eax
mov	[esp+24h+Src], eax
mov	[esp+24h+Size],	eax
mov	eax, [esp+24h+arg_0]
mov	ecx, [eax]
mov	edx, [eax+4]
lea	eax, [esp+24h+var_24]
mov	[esp+24h+var_8], ecx
push	eax
lea	ecx, [esp+28h+var_C]
push	ecx
mov	[esp+2Ch+var_4], edx
call	sub_1003BA40
add	esp, 8
test	eax, eax
jz	short loc_1004AC69
or	eax, 0FFFFFFFFh
add	esp, 24h
retn
mov	edx, [esp+24h+Src]
mov	eax, [esp+24h+Size]
mov	ecx, [esp+24h+arg_C]
push	esi
mov	esi, [esp+28h+arg_4]
push	edx		
push	eax		
push	ecx		
push	esi		
call	sub_10050C70
lea	edx, [esp+38h+var_18]
push	edx
lea	eax, [esp+3Ch+var_C]
push	eax
call	sub_1003B980
add	esp, 18h
test	eax, eax
jz	short loc_1004ACAE
mov	ecx, [esp+28h+Src]
push	ecx
call	PORT_Free_Util
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
add	esp, 24h
retn
mov	edx, [esp+28h+var_14]
mov	eax, [esp+28h+var_10]
mov	ecx, [esp+28h+arg_8]
push	edx		
push	eax		
push	ecx		
push	esi		
call	sub_10050C70
mov	edx, [esp+38h+Src]
push	edx
call	PORT_Free_Util
mov	eax, [esp+3Ch+var_14]
push	eax
call	PORT_Free_Util
add	esp, 18h
xor	eax, eax
pop	esi
add	esp, 24h
retn
align 10h
			
mov	eax, [esp+4]
mov	eax, [eax+4]
mov	ecx, [eax+70h]
mov	edx, [eax+74h]
push	ecx
push	edx
push	0
push	0
call	sub_10050C70
add	esp, 10h
retn
align 10h
			
mov	eax, [esp+4]
mov	ecx, [eax+4]
mov	eax, [ecx+16Ch]
retn
align 10h
			
mov	eax, [esp+4]
sub	esp, 0Ch
push	ebx
mov	ebx, [eax+4]
push	esi
push	edi
mov	edi, [esp+20h]
cmp	dword ptr [edi+8], 0
mov	esi, 2
jbe	short loc_1004AD6E
lea	ecx, [esp+0Ch]
push	ecx
push	ebx
call	CERT_FindSubjectKeyIDExtension
add	esp, 8
test	eax, eax
jnz	short loc_1004AD6E
lea	edx, [esp+0Ch]
push	edx
push	edi
call	SECITEM_ItemsAreEqual_Util
mov	esi, eax
mov	eax, [esp+18h]
push	eax
call	PORT_Free_Util
add	esp, 0Ch
test	esi, esi
jz	short loc_1004ADB9
xor	esi, esi
			
mov	eax, [edi+0Ch]
test	eax, eax
jz	short loc_1004ADCA
push	1
push	5
push	eax
call	sub_100427C0
add	esp, 0Ch
test	eax, eax
jz	short loc_1004ADC5
push	eax
lea	ecx, [ebx+48h]
push	ecx
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	short loc_1004ADC5
add	edi, 10h
push	edi
add	ebx, 84h
push	ebx
call	SECITEM_ItemsAreEqual_Util
add	esp, 8
test	eax, eax
jz	short loc_1004ADC5
xor	esi, esi
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 0Ch
retn
pop	edi
pop	esi
mov	eax, 1
pop	ebx
add	esp, 0Ch
retn
			
mov	esi, 2
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 0Ch
retn
align 10h
			
mov	eax, [esp+4]
mov	eax, [eax+4]
lea	ecx, [esp+4]
push	ecx
push	eax
call	CERT_IsCACert
add	esp, 8
retn
align 10h
			
mov	ecx, [esp+8]
mov	eax, [esp+4]
push	esi
mov	esi, [eax+4]
push	1
push	ecx
call	sub_1004A220
add	esp, 4
push	edx
push	eax
push	esi
call	CERT_CheckCertValidTimes
add	esp, 10h
neg	eax
sbb	eax, eax
inc	eax
pop	esi
retn
align 10h
			
mov	ecx, [esp+8]
mov	edx, [ecx]
mov	eax, [esp+4]
cmp	edx, [eax]
jnz	short loc_1004AE51
mov	eax, [eax+4]
mov	ecx, [ecx+4]
mov	[esp+8], ecx
mov	[esp+4], eax
jmp	loc_1003D000
xor	eax, eax
retn
align 10h
			
sub	esp, 8
mov	eax, [esp+8+arg_4]
cmp	dword ptr [eax], 0
mov	[esp+8+var_8], 0
mov	[esp+8+var_4], 0
jz	short loc_1004AE84
mov	eax, 1
add	esp, 8
retn
push	ebx
mov	ebx, [eax+8]
mov	eax, [eax+4]
lea	ecx, [esp+0Ch+var_4]
push	ecx
lea	edx, [esp+10h+var_8]
push	edx
push	ebx
push	eax
call	sub_1003BF70
add	esp, 10h
test	eax, eax
jz	short loc_1004AEAA
xor	eax, eax
pop	ebx
add	esp, 8
retn
mov	ecx, [esp+0Ch+arg_0]
mov	edx, [esp+0Ch+var_8]
push	esi
push	edi
mov	edi, [ecx+4]
push	edx
push	edi
call	sub_1003C090
add	esp, 8
mov	esi, eax
neg	esi
sbb	esi, esi
inc	esi
jz	short loc_1004AEF8
mov	[esp+14h+arg_4], 0
test	ebx, ebx
jz	short loc_1004AEEA
lea	eax, [esp+14h+arg_4]
push	eax
push	edi
call	CERT_IsCACert
mov	edi, [esp+1Ch+arg_4]
add	esp, 8
jmp	short loc_1004AEF0
mov	edi, [edi+13Ch]
test	[esp+14h+var_4], edi
jnz	short loc_1004AEF8
xor	esi, esi
			
pop	edi
mov	eax, esi
pop	esi
pop	ebx
add	esp, 8
retn
align 10h
			
sub	esp, 20h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+20h+var_4], eax
mov	eax, [esp+20h+arg_4]
cmp	dword ptr [eax], 0
mov	ecx, [esp+20h+arg_0]
jz	short loc_1004AF3C
xor	eax, eax
mov	ecx, [esp+20h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 20h
retn
cmp	dword ptr [eax+8], 0
mov	eax, [eax+4]
push	esi
mov	esi, [ecx+4]
jnz	short loc_1004AF7C
lea	ecx, [esp+24h+var_1C]
push	ecx
lea	edx, [esp+28h+var_14]
push	edx
push	eax
push	esi
call	sub_1000B720
add	esp, 10h
test	eax, eax
jnz	short loc_1004AFA5
cmp	[esp+24h+var_1C], eax
jz	short loc_1004AFA5
mov	eax, 1
pop	esi
mov	ecx, [esp+20h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 20h
retn
lea	ecx, [esp+24h+var_18]
push	ecx
lea	edx, [esp+28h+var_20]
push	edx
push	eax
call	sub_1000A960
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004AFA5
lea	ecx, [esp+24h+var_10]
push	ecx
push	esi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jz	short loc_1004AFB7
			
xor	eax, eax
pop	esi
mov	ecx, [esp+20h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 20h
retn
mov	eax, [esp+24h+var_18]
cmp	eax, 3
jnz	short loc_1004AFCE
mov	eax, [esp+24h+var_8]
or	eax, [esp+24h+var_C]
or	eax, [esp+24h+var_10]
jmp	short loc_1004AFF2
test	eax, eax
jnz	short loc_1004AFD8
mov	eax, [esp+24h+var_10]
jmp	short loc_1004AFF2
cmp	eax, 1
jnz	short loc_1004AFE3
mov	eax, [esp+24h+var_C]
jmp	short loc_1004AFF2
xor	edx, edx
cmp	eax, 2
setnz	dl
lea	eax, [edx-1]
and	eax, [esp+24h+var_8]
			
mov	ecx, [esp+24h+var_20]
and	eax, ecx
xor	edx, edx
cmp	eax, ecx
mov	ecx, [esp+24h+var_4]
setz	dl
pop	esi
xor	ecx, esp
mov	eax, edx
call	@__security_check_cookie@4 
add	esp, 20h
retn
align 10h
			
mov	eax, [esp+4]
mov	eax, [eax+4]
test	eax, eax
jz	short loc_1004B03A
mov	eax, [eax+118h]
test	eax, eax
jz	short loc_1004B03A
cmp	byte ptr [eax],	0
jnz	short locret_1004B03C
			
xor	eax, eax
retn
align 10h
			
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_0]
mov	ecx, [eax+4]
lea	edx, [esp+0Ch+var_C]
xor	eax, eax
push	edx
add	ecx, 3Ch
push	ecx
mov	[esp+14h+var_C], eax
mov	[esp+14h+Src], eax
mov	[esp+14h+Size],	eax
call	sub_1003BA40
add	esp, 8
test	eax, eax
jnz	short loc_1004B098
mov	eax, [esp+0Ch+Src]
mov	ecx, [esp+0Ch+Size]
mov	edx, [esp+0Ch+arg_4]
push	eax		
mov	eax, [esp+10h+arg_8]
push	ecx		
push	edx		
push	eax		
call	sub_10050C70
mov	ecx, [esp+1Ch+Src]
push	ecx
call	PORT_Free_Util
add	esp, 14h
xor	eax, eax
add	esp, 0Ch
retn
or	eax, 0FFFFFFFFh
add	esp, 0Ch
retn
align 10h
			
sub	esp, 0Ch
mov	eax, [esp+0Ch+arg_4]
mov	ecx, [eax]
mov	edx, [eax+4]
push	esi
push	edi
xor	esi, esi
push	esi		
lea	eax, [esp+18h+var_C]
push	1		
push	eax		
mov	[esp+20h+var_8], ecx
mov	[esp+20h+var_4], edx
call	__CERT_DecodeDERCertificate_0
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jz	short loc_1004B148
mov	ecx, [esp+14h+arg_0]
push	34h
push	ecx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004B13F
mov	[esi+4], edi
pop	edi
mov	dword ptr [esi], 1
mov	dword ptr [esi+8], offset loc_1004ACF0
mov	dword ptr [esi+0Ch], offset loc_1004AD10
mov	dword ptr [esi+10h], offset loc_1004AD20
mov	dword ptr [esi+14h], offset loc_1004ADE0
mov	dword ptr [esi+18h], offset __PBE_GenerateBits
mov	dword ptr [esi+1Ch], offset loc_1004AE00
mov	dword ptr [esi+20h], offset loc_1004AE30
mov	dword ptr [esi+24h], offset sub_1004AE60
mov	dword ptr [esi+28h], offset sub_1004AF10
mov	dword ptr [esi+2Ch], offset loc_1004B020
mov	dword ptr [esi+30h], offset sub_1004B040
pop	esi
add	esp, 0Ch
retn
push	edi
call	CERT_DestroyCertificate
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
add	esp, 0Ch
retn
push	34h
push	eax
call	sub_100504B0
add	esp, 8
test	eax, eax
jz	short locret_1004B1B9
mov	ecx, [esp+arg_0]
mov	dword ptr [eax], 1
mov	[eax+4], ecx
mov	dword ptr [eax+8], offset loc_1004ACF0
mov	dword ptr [eax+0Ch], offset loc_1004AD10
mov	dword ptr [eax+10h], offset loc_1004AD20
mov	dword ptr [eax+14h], offset loc_1004ADE0
mov	dword ptr [eax+18h], offset __PBE_GenerateBits
mov	dword ptr [eax+1Ch], offset loc_1004AE00
mov	dword ptr [eax+20h], offset loc_1004AE30
mov	dword ptr [eax+24h], offset sub_1004AE60
mov	dword ptr [eax+28h], offset sub_1004AF10
mov	dword ptr [eax+2Ch], offset loc_1004B020
mov	dword ptr [eax+30h], offset sub_1004B040
retn
align 10h
			
push	ebp
mov	ebp, [esp+4+arg_0]
mov	eax, [ebp+4]
test	eax, eax
jz	short loc_1004B209
push	ebx
mov	ebx, [eax+184h]
push	esi
mov	esi, [eax+17Ch]
push	edi
mov	edi, [eax]
push	188h		
push	0		
push	eax		
call	memset
push	0
push	edi
call	PORT_FreeArena_Util
add	esp, 14h
test	esi, esi
jz	short loc_1004B206
test	ebx, ebx
jz	short loc_1004B206
push	esi
call	PK11_FreeSlot
add	esp, 4
			
pop	edi
pop	esi
pop	ebx
push	ebp
call	sub_10050550
add	esp, 4
xor	eax, eax
pop	ebp
retn
align 10h
			
test	edi, edi
jnz	short loc_1004B227
xor	eax, eax
retn
mov	eax, [esp+arg_0]
push	0Ch
push	eax
call	PORT_ArenaAlloc_Util
add	esp, 8
test	eax, eax
jz	short loc_1004B224
mov	ecx, [edi+28h]
xor	edx, edx
cmp	ecx, 2
jnz	short loc_1004B249
lea	edx, [ecx+1]
jmp	short loc_1004B266
cmp	ecx, 3
jnz	short loc_1004B253
lea	edx, [ecx+15h]
jmp	short loc_1004B266
cmp	ecx, 1
jnz	short loc_1004B25C
mov	edx, ecx
jmp	short loc_1004B266
cmp	ecx, 5
jnz	short loc_1004B266
mov	edx, 8
			
push	esi
mov	[eax], edx
mov	esi, [edi+2Ch]
xor	ecx, ecx
cmp	esi, 2
jnz	short loc_1004B278
lea	ecx, [esi+1]
jmp	short loc_1004B295
cmp	esi, 3
jnz	short loc_1004B282
lea	ecx, [esi+15h]
jmp	short loc_1004B295
cmp	esi, 1
jnz	short loc_1004B28B
mov	ecx, esi
jmp	short loc_1004B295
cmp	esi, 5
jnz	short loc_1004B295
mov	ecx, 8
			
pop	esi
test	cl, 30h
jz	short loc_1004B2A6
and	ecx, 0FFFFFFCFh
or	edx, 80h
mov	[eax], edx
or	[eax], ecx
mov	ecx, [edi+30h]
xor	edx, edx
cmp	ecx, 2
jnz	short loc_1004B2B7
lea	edx, [ecx+1]
jmp	short loc_1004B2D4
cmp	ecx, 3
jnz	short loc_1004B2C1
lea	edx, [ecx+15h]
jmp	short loc_1004B2D4
cmp	ecx, 1
jnz	short loc_1004B2CA
mov	edx, ecx
jmp	short loc_1004B2D4
cmp	ecx, 5
jnz	short loc_1004B2D4
mov	edx, 8
			
mov	[eax+4], edx
mov	ecx, [edi+34h]
xor	edx, edx
cmp	ecx, 2
jnz	short loc_1004B2EA
mov	edx, 3
mov	[eax+8], edx
retn
cmp	ecx, 3
jnz	short loc_1004B2F8
mov	edx, 18h
mov	[eax+8], edx
retn
cmp	ecx, 1
jnz	short loc_1004B303
mov	edx, ecx
mov	[eax+8], edx
retn
cmp	ecx, 5
jnz	short loc_1004B30D
mov	edx, 8
mov	[eax+8], edx
retn
align 10h
			
mov	eax, dword_100BAE40
push	ebx
mov	ebx, [esp+4+arg_0]
push	esi
push	edi
push	ebx
push	eax
call	sub_100476C0
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_1004B360
mov	eax, [esp+0Ch+arg_4]
mov	ecx, [eax]
push	ecx
call	sub_1004B220
add	esp, 4
push	edi
mov	esi, eax
call	sub_100468D0
add	esp, 4
test	esi, esi
jnz	short loc_1004B381
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
mov	edx, [esp+0Ch+arg_4]
mov	eax, [edx]
push	0Ch
push	eax
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
xor	eax, eax
test	esi, esi
jz	short loc_1004B3A1
mov	[esi], eax
mov	[esi+4], eax
mov	[esi+8], eax
push	0
push	0
push	ebx
call	sub_10046430
add	esp, 0Ch
test	eax, eax
jz	short loc_1004B39F
mov	eax, 40h
or	[esi], eax
or	[esi+4], eax
or	[esi+8], eax
mov	eax, esi
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
push	ebx
push	eax
call	sub_10049900
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1004B3C2
pop	ebx
retn
push	esi
push	edi
xor	edi, edi
mov	esi, ebx
cmp	[ebx], edi
jz	short loc_1004B40F
lea	esp, [esp+0]
test	edi, edi
jnz	short loc_1004B3E1
mov	ecx, [esi]
push	ecx
call	sub_1004E700
add	esp, 4
jmp	short loc_1004B405
mov	edx, [edi+4]
mov	eax, [edx+34h]
push	eax
call	PK11_IsInternal
add	esp, 4
test	eax, eax
jz	short loc_1004B407
push	edi
call	sub_1004E6D0
mov	ecx, [esi]
push	ecx
call	sub_1004E700
add	esp, 8
mov	edi, eax
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_1004B3D0
push	ebx
call	sub_1004E7F0
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
push	ecx
push	ebx
push	esi
mov	esi, [esp+0Ch+arg_8]
push	edi
xor	edi, edi
xor	eax, eax
mov	[esp+10h+Src], edi
cmp	esi, edi
jz	short loc_1004B43D
mov	ebx, [esi+0Ch]
mov	[esp+10h+arg_8], ebx
jmp	short loc_1004B453
mov	ecx, [esp+10h+arg_4]
cmp	[ecx+1Ch], edi
jz	loc_1004B507
mov	ecx, [ecx+20h]
mov	[esp+10h+arg_8], ecx
mov	ebx, ecx
cmp	ebx, edi
jz	loc_1004B507
cmp	esi, edi
jz	short loc_1004B49F
mov	edx, [esi+4]
mov	eax, [edx+34h]
push	eax
call	PK11_IsInternalKeySlot
add	esp, 4
test	eax, eax
jz	short loc_1004B482
push	3Ah		
push	ebx		
call	ds:strchr
add	esp, 8
test	eax, eax
jz	short loc_1004B49F
mov	ecx, [esi+4]
push	ecx
call	sub_1004C640
lea	edx, [esp+14h+arg_4]
push	edx
push	eax
mov	[esp+1Ch+Src], eax
call	sub_10050D90
add	esp, 0Ch
mov	edi, eax
			
push	ebp
lea	eax, [esp+14h+arg_4]
push	eax
push	ebx
call	sub_10050D90
mov	ebp, eax
mov	eax, [esp+1Ch+arg_0]
add	esp, 8
lea	ebx, [edi+ebp]
push	ebx
test	eax, eax
jz	short loc_1004B4C7
push	eax
call	PORT_ArenaAlloc_Util
add	esp, 8
jmp	short loc_1004B4CF
call	PORT_Alloc_Util
add	esp, 4
mov	ecx, [esp+14h+Src]
mov	esi, eax
test	ecx, ecx
jz	short loc_1004B4EF
lea	edx, [edi-1]
push	edx		
push	ecx		
push	esi		
call	memcpy
lea	eax, [edi+esi-1]
add	esp, 0Ch
mov	byte ptr [eax],	3Ah
inc	eax
mov	ecx, [esp+14h+arg_8]
dec	ebp
push	ebp		
push	ecx		
push	eax		
call	memcpy
add	esp, 0Ch
mov	byte ptr [ebx+esi-1], 0
mov	eax, esi
pop	ebp
			
pop	edi
pop	esi
pop	ebx
pop	ecx
retn
align 10h
			
push	esi
push	edi
mov	edi, [esp+8+arg_4]
mov	eax, edi
call	sub_1004B3B0
mov	esi, eax
mov	eax, [esp+8+arg_0]
push	esi		
push	edi		
push	eax		
call	sub_1004B420
add	esp, 0Ch
mov	edi, eax
test	esi, esi
jz	short loc_1004B53F
push	esi
call	sub_1004E6D0
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
sub	esp, 20h
push	ebp
push	esi
mov	esi, eax
mov	eax, [ebx+1Ch]
mov	[esp+28h+var_1C], eax
xor	ebp, ebp
push	edi
mov	eax, ebx
mov	[esp+2Ch+var_18], ebp
call	sub_1004B3B0
mov	edi, eax
mov	[esp+2Ch+var_4], edi
test	edi, edi
jz	short loc_1004B57B
mov	ebp, [edi+0Ch]
jmp	short loc_1004B584
cmp	[esp+2Ch+var_1C], ebp
jz	short loc_1004B584
mov	ebp, [ebx+20h]
			
cmp	dword ptr [esi+154h], 0
jnz	short loc_1004B591
test	ebp, ebp
jnz	short loc_1004B59C
cmp	[esp+2Ch+arg_0], 0
jz	loc_1004B682
mov	[esp+2Ch+Src], 0
test	edi, edi
jz	short loc_1004B5F0
mov	ecx, [edi+4]
mov	edx, [ecx+34h]
push	edx
call	PK11_IsInternalKeySlot
add	esp, 4
test	eax, eax
jz	short loc_1004B5CF
test	ebp, ebp
jz	short loc_1004B5F0
push	3Ah		
push	ebp		
call	ds:strchr
add	esp, 8
test	eax, eax
jz	short loc_1004B5F0
mov	eax, [edi+4]
push	eax
call	sub_1004C640
lea	ecx, [esp+30h+var_C]
push	ecx
push	eax
mov	[esp+38h+Src], eax
call	sub_10050D90
add	esp, 0Ch
mov	[esp+2Ch+var_20], eax
jmp	short loc_1004B5F8
			
mov	[esp+2Ch+var_20], 0
test	ebp, ebp
jz	short loc_1004B678
lea	edx, [esp+2Ch+var_C]
push	edx
push	ebp
call	sub_10050D90
mov	edx, [esi]
mov	[esp+34h+var_10], eax
add	eax, [esp+34h+var_20]
push	eax
push	edx
mov	[esp+3Ch+var_8], eax
call	PORT_ArenaAlloc_Util
mov	edi, eax
mov	eax, [esp+3Ch+Src]
add	esp, 10h
test	eax, eax
jz	short loc_1004B653
mov	ecx, [esp+2Ch+var_20]
dec	ecx
push	ecx		
push	eax		
push	edi		
call	memcpy
mov	ecx, [esp+38h+var_10]
mov	edx, [esp+38h+var_20]
dec	ecx
push	ecx		
lea	eax, [edi+edx]
push	ebp		
push	eax		
mov	byte ptr [eax-1], 3Ah
call	memcpy
add	esp, 18h
jmp	short loc_1004B663
mov	edx, [esp+2Ch+var_10]
dec	edx
push	edx		
push	ebp		
push	edi		
call	memcpy
add	esp, 0Ch
mov	eax, [esp+2Ch+var_8]
mov	byte ptr [edi+eax-1], 0
mov	[esi+154h], edi
mov	edi, [esp+2Ch+var_4]
jmp	short loc_1004B682
mov	dword ptr [esi+154h], 0
			
mov	eax, [esp+2Ch+var_1C]
test	eax, eax
jz	short loc_1004B705
push	ebx
push	eax
call	sub_10046EB0
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_1004B6D3
mov	ecx, [esi+4Ch]
mov	[ebx+38h], ecx
mov	edx, [esi+50h]
mov	[ebx+3Ch], edx
mov	eax, [esi+88h]
mov	edx, [esp+2Ch+var_1C]
mov	[ebx+48h], eax
mov	ecx, [esi+8Ch]
mov	[ebx+4Ch], ecx
mov	eax, [edx+8]
push	ebx
push	eax
call	sub_100476C0
mov	edi, eax
add	esp, 8
test	edi, edi
jz	loc_1004B77D
mov	ecx, [esi]
push	ecx
call	sub_1004B220
mov	ebp, eax
add	esp, 4
mov	[esp+2Ch+var_18], ebp
test	ebp, ebp
jz	short loc_1004B6FD
push	esi
call	sub_1003D8D0
push	esi
mov	[esi+160h], ebp
call	sub_1003D990
add	esp, 8
push	edi
call	sub_100468D0
jmp	short loc_1004B77A
test	edi, edi
jz	short loc_1004B77D
mov	eax, [esi+17Ch]
mov	edx, [edi+4]
cmp	eax, [edx+34h]
jz	short loc_1004B739
test	eax, eax
jz	short loc_1004B724
push	eax
call	PK11_FreeSlot
add	esp, 4
mov	eax, [edi+4]
mov	ecx, [eax+34h]
push	ecx
call	PK11_ReferenceSlot
add	esp, 4
mov	[esi+17Ch], eax
mov	dword ptr [esi+184h], 1
mov	edx, [edi]
push	esi
push	ebx
mov	[esi+180h], edx
call	sub_1004B320
mov	ebp, eax
add	esp, 8
mov	[esp+2Ch+var_18], ebp
test	ebp, ebp
jz	short loc_1004B774
push	esi
call	sub_1003D8D0
push	esi
mov	[esi+160h], ebp
call	sub_1003D990
add	esp, 8
push	edi
call	sub_1004E6D0
add	esp, 4
			
cmp	[esp+2Ch+var_18], 0
mov	eax, [ebx+18h]
mov	[esi+11Ch], eax
mov	dword ptr [esi+150h], 0
mov	dword ptr [esi+14Ch], 1
mov	[esi+15Ch], ebx
jz	short loc_1004B7BE
push	esi
call	sub_1003DE30
push	eax
add	esi, 13Ch
push	esi
call	ds:PR_AtomicSet
add	esp, 0Ch
pop	edi
pop	esi
pop	ebp
add	esp, 20h
retn
align 10h
			
sub	esp, 10h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+10h+var_4], eax
push	ebx
push	esi
push	edi
mov	ebx, edx
push	ebx
mov	edi, ecx
xor	esi, esi
call	sub_10049360
mov	eax, [ebx+54h]
add	esp, 4
test	eax, eax
jnz	short loc_1004B836
lea	eax, [ebx+30h]
push	eax
push	esi
call	sub_1004B0A0
add	esp, 8
test	eax, eax
jz	loc_1004B8B0
mov	esi, [eax+4]
test	esi, esi
jnz	short loc_1004B82D
push	eax
call	sub_1004B1C0
mov	ecx, ds:dword_100A7DDC
push	ecx
call	sub_10050AF0
add	esp, 8
jmp	loc_1004B8B0
cmp	dword ptr [ebx+54h], 0
jnz	short loc_1004B84A
mov	[ebx+54h], eax
mov	esi, [eax+4]
test	esi, esi
jnz	short loc_1004B861
mov	eax, ds:dword_100A7DDC
push	eax
call	sub_10050AF0
jmp	short loc_1004B8AD
push	eax
call	sub_1004B1C0
mov	edx, ds:dword_100A7DDC
push	edx
call	sub_10050AF0
add	esp, 8
jmp	short loc_1004B8B0
cmp	dword ptr [esi+15Ch], 0
jz	short loc_1004B8A5
test	edi, edi
jnz	short loc_1004B8A5
lea	ecx, [esp+1Ch+var_10]
push	ecx
push	esi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jz	short loc_1004B8B0
cmp	[ebx+1Ch], edi
jnz	short loc_1004B8B0
push	esi
push	ebx
call	sub_1004B320
push	esi
mov	edi, eax
call	sub_1003D8D0
push	esi
mov	[esi+160h], edi
call	sub_1003D990
add	esp, 10h
jmp	short loc_1004B8B0
			
push	edi
mov	eax, esi
call	sub_1004B550
add	esp, 4
			
push	ebx
call	sub_10049390
mov	ecx, [esp+20h+var_4]
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 10h
retn
align 10h
			
mov	edx, [esp+arg_0]
cmp	dword ptr [edx+54h], 0
jz	short loc_1004B8E4
mov	ecx, 1
jmp	sub_1004B7D0
xor	eax, eax
retn
align 10h
			
xor	ecx, ecx
mov	edx, [esp+arg_0]
jmp	sub_1004B7D0
align 10h
			
push	esi
push	edi
mov	edi, [esp+8+arg_0]
xor	ecx, ecx
mov	edx, edi
call	sub_1004B7D0
mov	esi, eax
test	esi, esi
jnz	short loc_1004B920
push	edi
call	sub_10046070
add	esp, 4
mov	eax, esi
pop	edi
pop	esi
retn
align 10h
			
sub	esp, 0Ch
push	ebx
mov	ebx, [esp+10h+arg_0]
mov	eax, [ebx+15Ch]
test	eax, eax
jnz	loc_1004BAF2
push	esi
call	sub_10050920
mov	esi, eax
mov	[esp+14h+arg_0], esi
test	esi, esi
jnz	short loc_1004B95C
pop	esi
pop	ebx
add	esp, 0Ch
retn
push	ebp
push	58h
push	esi
call	sub_100504B0
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	short loc_1004B99B
mov	eax, [ebx+40h]
mov	[ebp+30h], eax
mov	ecx, [ebx+44h]
push	2
mov	[ebp+34h], ecx
mov	dword ptr [ebp+24h], 1
mov	edx, [ebx+11Ch]
push	0
push	edx
push	0
push	esi
call	sub_1004A230
add	esp, 14h
test	eax, eax
jnz	short loc_1004B9AD
push	esi
call	sub_10050840
add	esp, 4
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
push	edi
mov	esi, eax
mov	ecx, 9
mov	edi, ebp
rep movsd
mov	eax, [ebx+4Ch]
mov	ecx, [ebx+50h]
mov	edi, [esp+1Ch+arg_0]
push	eax		
push	ecx		
lea	edx, [ebp+38h]
push	edx		
push	edi		
call	sub_10050C70
mov	eax, [ebx+58h]
mov	ecx, [ebx+5Ch]
push	eax		
push	ecx		
lea	edx, [ebp+40h]
push	edx		
push	edi		
call	sub_10050C70
lea	eax, [esp+3Ch+var_C]
push	eax
lea	ecx, [ebx+3Ch]
push	ecx
call	sub_1003BA40
add	esp, 28h
cmp	eax, 0FFFFFFFFh
jz	short loc_1004BA67
mov	edx, [esp+1Ch+Src]
mov	eax, [esp+1Ch+Size]
push	edx		
push	eax		
lea	ecx, [ebp+48h]
push	ecx		
push	edi		
call	sub_10050C70
mov	edx, [esp+2Ch+Src]
push	edx
call	PORT_Free_Util
mov	esi, [ebx+118h]
add	esp, 14h
test	esi, esi
jz	short loc_1004BA49
cmp	byte ptr [esi],	0
jz	short loc_1004BA49
mov	eax, esi
lea	edx, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1004BA30
sub	eax, edx
push	eax		
push	esi		
push	2		
push	edi		
call	sub_10050DB0
add	esp, 10h
mov	[ebp+50h], eax
			
cmp	dword ptr [ebx+17Ch], 0
jz	loc_1004BAD9
push	10h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1004BA7A
push	edi
call	sub_10050840
add	esp, 4
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 0Ch
retn
mov	eax, [ebx+17Ch]
push	eax
call	sub_10036730
push	eax
call	sub_1004C2A0
mov	[esi+4], eax
mov	ecx, [ebx+180h]
mov	[esi], ecx
mov	dword ptr [esi+8], 1
mov	ecx, [ebx+154h]
add	esp, 8
test	ecx, ecx
jz	short loc_1004BACF
mov	eax, ecx
lea	edx, [eax+1]
mov	[esp+1Ch+arg_0], edx
mov	dl, [eax]
inc	eax
test	dl, dl
jnz	short loc_1004BAB4
sub	eax, [esp+1Ch+arg_0]
push	eax		
push	ecx		
push	5		
push	edi		
call	sub_10050DB0
add	esp, 10h
mov	[esi+0Ch], eax
push	esi
push	ebp
call	sub_100494A0
add	esp, 8
push	ebx
xor	eax, eax
call	sub_1004B150
add	esp, 4
mov	[ebp+54h], eax
pop	edi
mov	[ebx+15Ch], ebp
mov	eax, ebp
pop	ebp
pop	esi
pop	ebx
add	esp, 0Ch
retn
align 10h
sub	esp, 1Ch
push	ebx
push	esi
push	edi
mov	esi, eax
xor	ebx, ebx
xor	edi, edi
push	esi
mov	[esp+2Ch+var_14], edi
mov	[esp+2Ch+var_18], ebx
mov	[esp+2Ch+var_1C], ebx
call	sub_10049900
add	esp, 4
mov	[esp+28h+var_4], eax
cmp	eax, ebx
jnz	short loc_1004BB32
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 1Ch
retn
push	ebp
mov	ebp, eax
cmp	[eax], ebx
jz	loc_1004BBCE
lea	eax, [esi+48h]
lea	ecx, [esi+38h]
add	esi, 30h
mov	[esp+2Ch+var_10], eax
mov	[esp+2Ch+var_C], ecx
mov	[esp+2Ch+var_8], esi
mov	edx, [esp+2Ch+var_10]
mov	eax, [esp+2Ch+var_C]
mov	ecx, [esp+2Ch+var_8]
mov	esi, [ebp+0]
push	2
push	edx
mov	edx, [esi+4]
push	eax
push	ecx
push	0
push	edx
call	sub_1004D6F0
mov	esi, [esi+4]
mov	edi, eax
mov	eax, [esi+34h]
push	eax
call	PK11_IsReadOnly
add	esp, 1Ch
mov	ebx, eax
test	edi, edi
jz	short loc_1004BB9B
push	edi
call	sub_1004E6D0
add	esp, 4
mov	[esp+2Ch+var_14], esi
test	ebx, ebx
jz	short loc_1004BBC2
jmp	short loc_1004BBB9
cmp	[esp+2Ch+var_18], 0
jnz	short loc_1004BBAA
test	ebx, ebx
jz	short loc_1004BBAA
mov	[esp+2Ch+var_18], esi
			
cmp	[esp+2Ch+var_1C], 0
jnz	short loc_1004BBB9
test	ebx, ebx
jnz	short loc_1004BBB9
mov	[esp+2Ch+var_1C], esi
			
add	ebp, 4
cmp	dword ptr [ebp+0], 0
jnz	short loc_1004BB52
mov	edi, [esp+2Ch+var_14]
mov	ebx, [esp+2Ch+var_1C]
mov	eax, [esp+2Ch+var_4]
push	eax
call	sub_1004E7F0
add	esp, 4
pop	ebp
test	edi, edi
jz	short loc_1004BBE5
mov	eax, edi
pop	edi
pop	esi
pop	ebx
add	esp, 1Ch
retn
mov	eax, ebx
test	ebx, ebx
jnz	short loc_1004BBEF
mov	eax, [esp+28h+var_18]
pop	edi
pop	esi
pop	ebx
add	esp, 1Ch
retn
align 10h
			
sub	esp, 10h
push	ebx
push	edi
mov	edi, [esp+18h+arg_0]
push	edi
call	sub_1004B930
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1004BC21
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
push	ebp
push	esi
push	edi
push	ebx
call	sub_1004B320
add	esp, 8
test	eax, eax
jz	short loc_1004BC66
mov	edx, [esp+20h+arg_4]
mov	esi, eax
sub	esi, edx
mov	ebp, 0Ch
mov	ecx, edx
mov	[esp+20h+var_C], esi
jmp	short loc_1004BC4A
mov	esi, [esp+20h+var_C]
mov	esi, [esi+ecx]
cmp	esi, [ecx]
jnz	short loc_1004BC77
sub	ebp, 4
add	ecx, 4
cmp	ebp, 4
jnb	short loc_1004BC46
pop	esi
pop	ebp
pop	edi
xor	eax, eax
pop	ebx
add	esp, 10h
retn
mov	eax, [edi]
push	0Ch
push	eax
call	PORT_ArenaAlloc_Util
mov	edx, [esp+28h+arg_4]
add	esp, 8
mov	ecx, [edx]
mov	esi, eax
mov	[esi], ecx
mov	eax, [edx+4]
mov	[esi+4], eax
mov	ecx, [edx+8]
push	edi
mov	[esi+8], ecx
call	sub_1003D8D0
push	edi
mov	[edi+160h], esi
call	sub_1003D990
add	esp, 8
call	sub_100507B0
mov	esi, eax
test	esi, esi
jz	short loc_1004BCDD
push	3Ch
push	esi
call	sub_100504B0
mov	ebp, eax
add	esp, 8
test	ebp, ebp
jz	short loc_1004BCD4
mov	edx, [edi+11Ch]
push	1
push	0
push	edx
push	0
push	esi
call	sub_1004A230
add	esp, 14h
test	eax, eax
jnz	short loc_1004BCE8
push	esi
call	sub_10050840
add	esp, 4
pop	esi
pop	ebp
pop	edi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
mov	esi, eax
mov	ecx, 9
mov	edi, ebp
rep movsd
mov	ecx, [esp+20h+arg_4]
mov	[ebp+24h], ebx
mov	eax, [ecx]
test	al, 30h
jnz	short loc_1004BD24
test	al, 2
jz	short loc_1004BD0B
mov	eax, 2
jmp	short loc_1004BD29
test	al, 1
jz	short loc_1004BD16
mov	eax, 1
jmp	short loc_1004BD29
movzx	eax, al
and	eax, 8
or	eax, 20h
shr	eax, 3
jmp	short loc_1004BD29
mov	eax, 3
			
mov	[ebp+28h], eax
mov	eax, [ecx]
test	al, al
jns	short loc_1004BD39
mov	eax, 3
jmp	short loc_1004BD5B
test	al, 2
jz	short loc_1004BD44
mov	eax, 2
jmp	short loc_1004BD5B
test	al, 1
jz	short loc_1004BD4F
mov	eax, 1
jmp	short loc_1004BD5B
movzx	eax, al
and	eax, 8
or	eax, 20h
shr	eax, 3
			
mov	[ebp+2Ch], eax
mov	eax, [ecx+4]
test	al, 30h
jnz	short loc_1004BD89
test	al, 2
jz	short loc_1004BD70
mov	eax, 2
jmp	short loc_1004BD8E
test	al, 1
jz	short loc_1004BD7B
mov	eax, 1
jmp	short loc_1004BD8E
movzx	eax, al
and	eax, 8
or	eax, 20h
shr	eax, 3
jmp	short loc_1004BD8E
mov	eax, 3
			
mov	[ebp+30h], eax
mov	eax, [ecx+8]
test	al, 30h
jnz	short loc_1004BDBC
test	al, 2
jz	short loc_1004BDA3
mov	eax, 2
jmp	short loc_1004BDC1
test	al, 1
jz	short loc_1004BDAE
mov	eax, 1
jmp	short loc_1004BDC1
movzx	eax, al
and	eax, 8
or	eax, 20h
shr	eax, 3
jmp	short loc_1004BDC1
mov	eax, 3
			
mov	[ebp+34h], eax
mov	eax, [ecx]
and	eax, 200h
mov	[ebp+38h], eax
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_1004BDF2
push	ebp
push	eax
call	sub_10046D20
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	loc_1004C048
cmp	[ebx+14h], eax
jz	loc_1004C048
mov	ecx, dword_100BAE40
mov	eax, ebx
mov	[esp+20h+var_10], ecx
call	sub_1004BB00
mov	esi, eax
xor	edi, edi
test	esi, esi
jz	loc_1004C045
mov	edx, [esi+34h]
push	edx
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	loc_1004BEB7
mov	esi, [esp+20h+var_10]
mov	eax, [esi+18h]
push	eax
call	NSSRWLock_LockRead_Util
mov	ecx, [esi+0Ch]
push	ecx
call	sub_100514A0
mov	edi, eax
add	esp, 8
test	edi, edi
jnz	short loc_1004BE68
mov	edx, [esp+20h+var_10]
mov	eax, [edx+18h]
push	eax
or	esi, 0FFFFFFFFh
call	NSSRWLock_UnlockRead_Util
add	esp, 4
push	ebp
call	sub_100468D0
add	esp, 4
mov	eax, esi
pop	esi
pop	ebp
pop	edi
pop	ebx
add	esp, 10h
retn
push	edi
call	sub_100513C0
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1004BE96
mov	ecx, [esi+34h]
push	ecx
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jz	short loc_1004BE96
push	edi
call	sub_100513F0
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1004BE77
			
push	edi
call	sub_10051430
push	edi
call	sub_10051510
mov	edx, [esp+28h+var_10]
mov	eax, [edx+18h]
push	eax
call	NSSRWLock_UnlockRead_Util
add	esp, 0Ch
mov	edi, 1
test	esi, esi
jz	loc_1004C045
test	edi, edi
jz	short loc_1004BF33
push	0
push	ebx
call	sub_100461D0
mov	ecx, [esi+34h]
push	ecx
mov	edi, eax
mov	[esp+2Ch+var_C], 0
call	PK11_IsInternal
add	esp, 0Ch
test	eax, eax
jz	short loc_1004BEEA
mov	eax, [ebx+50h]
jmp	short loc_1004BEEE
mov	eax, [esp+20h+var_C]
push	1
push	eax
lea	edx, [ebx+48h]
push	edx
lea	eax, [ebx+40h]
push	eax
lea	ecx, [ebx+38h]
push	ecx
lea	edx, [ebx+30h]
push	edx
push	edi
lea	eax, [ebx+28h]
push	eax
push	1
push	0
push	esi
call	sub_1004DE50
push	edi
mov	[esp+50h+var_C], eax
call	sub_10050550
mov	eax, [esp+50h+var_C]
add	esp, 30h
test	eax, eax
jz	loc_1004C045
push	eax
push	ebx
call	sub_100494A0
add	esp, 8
mov	edx, [ebp+38h]
push	1
push	edx
mov	edx, [ebp+30h]
push	edx
mov	edx, [ebp+34h]
push	edx
mov	edx, [ebp+2Ch]
push	edx
mov	edx, [ebp+28h]
push	edx
lea	edi, [ebx+48h]
push	edi
lea	eax, [ebx+38h]
push	eax
lea	ecx, [ebx+30h]
push	ecx
push	0
push	esi
call	sub_1004E230
add	esp, 2Ch
test	eax, eax
jnz	loc_1004C027
mov	eax, [esi+34h]
push	eax
call	PK11_IsInternalKeySlot
add	esp, 4
test	eax, eax
jnz	loc_1004C045
call	PK11_GetInternalKeySlot
push	0
push	ebx
mov	esi, eax
call	sub_100461D0
mov	ecx, [ebx+50h]
push	esi
mov	[esp+2Ch+var_10], eax
mov	[esp+2Ch+var_8], ecx
call	sub_10036730
push	esi
mov	[esp+30h+var_C], eax
call	PK11_FreeSlot
mov	edx, [esp+30h+var_8]
mov	ecx, [esp+30h+var_10]
push	1
push	edx
push	edi
lea	eax, [ebx+40h]
push	eax
lea	eax, [ebx+38h]
push	eax
mov	[esp+44h+var_8], eax
lea	eax, [ebx+30h]
push	eax
push	ecx
lea	edx, [ebx+28h]
push	edx
push	1
mov	[esp+54h+var_4], eax
mov	eax, [esp+54h+var_C]
push	0
push	eax
call	sub_1004DE50
mov	ecx, [esp+5Ch+var_10]
push	ecx
mov	esi, eax
call	sub_10050550
add	esp, 40h
test	esi, esi
jz	short loc_1004C045
push	esi
push	ebx
call	sub_100494A0
mov	edx, [ebp+38h]
mov	eax, [ebp+30h]
mov	ecx, [ebp+34h]
push	1
push	edx
mov	edx, [ebp+2Ch]
push	eax
mov	eax, [ebp+28h]
push	ecx
mov	ecx, [esp+38h+var_8]
push	edx
mov	edx, [esp+3Ch+var_4]
push	eax
mov	eax, [esp+40h+var_C]
push	edi
push	ecx
push	edx
push	0
push	eax
call	sub_1004E230
add	esp, 34h
test	eax, eax
jz	short loc_1004C045
push	eax
call	sub_1004E6D0
add	esp, 4
push	ebp
xor	esi, esi
call	sub_100468D0
add	esp, 4
mov	eax, esi
pop	esi
pop	ebp
pop	edi
pop	ebx
add	esp, 10h
retn
			
or	esi, 0FFFFFFFFh
			
push	ebp
call	sub_100468D0
add	esp, 4
mov	eax, esi
pop	esi
pop	ebp
pop	edi
pop	ebx
add	esp, 10h
retn
align 10h
push	ecx
push	ebx
push	ebp
xor	ebp, ebp
push	esi
xor	ebx, ebx
mov	[esp+10h+var_4], ebp
call	sub_10049360
add	esp, 4
cmp	[esi+14h], ebp
jbe	short loc_1004C0EA
push	edi
lea	ebx, [ebx+0]
mov	eax, [esi+10h]
mov	edi, [eax+ebp*4]
test	edi, edi
jz	short loc_1004C0DF
mov	ecx, [edi+4]
mov	edx, [ecx+34h]
push	edx
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jnz	short loc_1004C0D8
mov	eax, [edi+4]
mov	ecx, [esp+10h+arg_0]
cmp	ecx, [eax+34h]
jnz	short loc_1004C0D8
mov	edx, [esi+10h]
push	edi
mov	dword ptr [edx+ebp*4], 0
call	sub_1004C670
add	esp, 4
test	eax, eax
jnz	short loc_1004C0CB
push	edi
call	sub_1004E6D0
add	esp, 4
jmp	short loc_1004C0DF
mov	eax, [esi+10h]
mov	[eax+ebx*4], edi
inc	ebx
inc	[esp+10h+var_4]
jmp	short loc_1004C0DF
			
mov	ecx, [esi+10h]
mov	[ecx+ebx*4], edi
inc	ebx
			
inc	ebp
cmp	ebp, [esi+14h]
jb	short loc_1004C080
pop	edi
test	ebx, ebx
jnz	short loc_1004C112
mov	edx, [esi+10h]
push	edx
call	sub_10050550
add	esp, 4
push	esi
mov	dword ptr [esi+14h], 0
call	sub_10049390
mov	eax, [esp+10h+var_4]
add	esp, 4
neg	eax
pop	ebp
sbb	eax, eax
pop	ebx
pop	ecx
retn
push	esi
mov	[esi+14h], ebx
call	sub_10049390
mov	eax, [esp+10h+var_4]
add	esp, 4
neg	eax
pop	ebp
sbb	eax, eax
pop	ebx
pop	ecx
retn
align 10h
sub	esp, 8
push	ebx
mov	ebx, dword_100BAE40
push	ebp
push	esi
push	edi
mov	edi, [esp+18h+arg_0]
push	edi
xor	ebp, ebp
push	ebx
mov	[esp+20h+var_8], ebp
mov	[esp+20h+var_4], ebx
call	sub_100476C0
mov	esi, eax
mov	eax, [ebx+18h]
push	eax
call	NSSRWLock_LockRead_Util
push	edi
call	sub_10049360
add	esp, 10h
cmp	[edi+14h], ebp
jbe	short loc_1004C1B9
jmp	short loc_1004C170
align 10h
			
mov	ecx, [edi+10h]
mov	ebx, [ecx+ebp*4]
test	ebx, ebx
jz	short loc_1004C1AF
mov	edx, [ebx+4]
mov	eax, [edx+34h]
push	eax
call	PK11_IsReadOnly
add	esp, 4
test	eax, eax
jnz	short loc_1004C1AF
cmp	[esi+14h], eax
jz	short loc_1004C1AF
cmp	[esi+10h], eax
jz	short loc_1004C1AF
mov	ecx, [ebx+4]
mov	edx, [ecx+34h]
push	edx
call	sub_1004C060
add	esp, 4
cmp	eax, 0FFFFFFFFh
jnz	short loc_1004C1AF
mov	[esp+18h+var_8], eax
			
inc	ebp
cmp	ebp, [edi+14h]
jb	short loc_1004C170
mov	ebx, [esp+18h+var_4]
push	edi
call	sub_10049390
mov	eax, [ebx+18h]
push	eax
call	NSSRWLock_UnlockRead_Util
mov	eax, [esp+20h+var_8]
add	esp, 8
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
			
push	esi
mov	esi, [esp+8]
xor	ecx, ecx
mov	edx, esi
call	sub_1004B7D0
mov	eax, [eax+4]
mov	ecx, [esi+4]
push	eax
push	ecx
push	offset a2dS	
call	ds:printf
add	esp, 0Ch
pop	esi
retn
align 10h
public nss_DumpCertificateCacheInfo
push	ebx
mov	ebx, ds:printf
push	esi
mov	esi, dword_100BAE40
push	edi
mov	edi, dword_100BAE44
push	offset aCertificatesIn 
call	ebx 
push	0
push	offset loc_1004C1E0
push	esi
call	sub_10048780
push	offset aCertificates_0 
call	ebx 
mov	eax, [edi+14h]
add	esp, 14h
pop	edi
pop	esi
pop	ebx
test	eax, eax
jz	short locret_1004C25D
push	0
push	offset loc_1004C1E0
push	eax
call	sub_10049150
add	esp, 0Ch
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1004C293
lea	eax, [esi+8]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_1004C293
mov	ecx, [esi+4]
push	ecx
call	ds:PR_DestroyLock
mov	edx, [esi]
add	esp, 4
pop	esi
mov	[esp+arg_0], edx
jmp	sub_10050840
			
xor	eax, eax
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
lea	eax, [esi+8]
push	eax
call	ds:PR_AtomicIncrement
add	esp, 4
mov	eax, esi
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	dword ptr [eax+38h], 0
retn
align 10h
public PK11_GetSymKeyUserData
			
mov	eax, [esp+arg_0] 
mov	eax, [eax+40h]
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	eax, [eax]
test	eax, eax
jz	short loc_1004C2F4
push	eax
call	ds:PR_Lock
add	esp, 4
xor	eax, eax
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	eax, [eax]
test	eax, eax
jz	short loc_1004C314
mov	[esp+arg_0], eax
jmp	ds:PR_Unlock
xor	eax, eax
retn
align 10h
public PK11_GetWindow
			
mov	eax, [esp+arg_0]
mov	eax, [eax+0Ch]
retn
align 10h
			
sub	esp, 7Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+7Ch+var_4], eax
push	esi
mov	esi, [esp+80h+arg_0]
push	esi
call	sub_100126E0
add	esp, 4
test	eax, eax
jz	short loc_1004C374
mov	eax, [esi+44h]
push	eax
call	PK11_IsDisabled
add	esp, 4
neg	eax
sbb	eax, eax
inc	eax
pop	esi
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
cmp	dword_100BAE48,	0
jnz	short loc_1004C38D
push	1
call	ds:PR_SecondsToInterval
add	esp, 4
mov	dword_100BAE48,	eax
call	ds:PR_IntervalNow
mov	ecx, [esi+38h]
test	ecx, ecx
jz	short loc_1004C3A6
mov	edx, eax
sub	edx, ecx
cmp	edx, dword_100BAE48
jb	short loc_1004C3C4
push	ebp
mov	ebp, [esi+40h]
mov	[esi+38h], eax
test	ebp, ebp
jnz	short loc_1004C3DA
pop	ebp
xor	eax, eax
pop	esi
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
mov	eax, [esi+20h]
and	eax, 1
pop	esi
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
mov	eax, [esi+3Ch]
test	eax, eax
jz	short loc_1004C3EB
push	eax
call	ds:PR_Lock
add	esp, 4
mov	ecx, [esi+1Ch]
mov	edx, [ebp+16h]
push	edi
lea	eax, [esp+88h+var_6C]
push	eax
push	ecx
call	edx
mov	edi, eax
mov	eax, [esi+3Ch]
add	esp, 8
test	eax, eax
jz	short loc_1004C410
push	eax
call	ds:PR_Unlock
add	esp, 4
test	edi, edi
jz	short loc_1004C431
mov	eax, [esi+18h]
mov	ecx, [eax+0Ch]
pop	edi
pop	ebp
mov	byte ptr [ecx],	0
xor	eax, eax
pop	esi
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
mov	eax, [esp+88h+var_C]
mov	[esi+20h], eax
test	al, 1
jnz	loc_1004C4C6
mov	eax, [esi+18h]
test	eax, eax
jz	loc_1004C550
push	eax
call	PK11_NeedLogin
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_1004C483
push	edi
call	sub_1004C2E0
mov	eax, [edi+4]
add	esp, 4
test	eax, eax
jz	short loc_1004C47A
mov	edx, [ebp+36h]
push	eax
call	edx
add	esp, 4
mov	dword ptr [edi+4], 0
push	edi
call	sub_1004C300
add	esp, 4
mov	eax, [esi+18h]
mov	eax, [eax+0Ch]
cmp	byte ptr [eax],	0
jz	short loc_1004C49D
mov	byte ptr [eax],	0
mov	ecx, [esi+18h]
push	ecx
call	sub_10012800
add	esp, 4
mov	edx, [esi+18h]
mov	eax, [edx+0Ch]
mov	byte ptr [eax],	0
mov	ecx, [esi+18h]
push	ecx
call	sub_1004C600
add	esp, 4
pop	edi
pop	ebp
xor	eax, eax
pop	esi
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
mov	edx, [esi+18h]
push	edx
call	PK11_NeedLogin
mov	edi, eax
add	esp, 4
test	edi, edi
jz	short loc_1004C524
push	edi
call	sub_1004C2E0
mov	eax, [edi+4]
add	esp, 4
test	eax, eax
jz	short loc_1004C50D
mov	edx, [ebp+3Eh]
lea	ecx, [esp+88h+var_7C]
push	ecx
push	eax
call	edx
add	esp, 8
test	eax, eax
jz	short loc_1004C50D
mov	eax, [edi+4]
mov	ecx, [ebp+36h]
push	eax
call	ecx
add	esp, 4
mov	dword ptr [edi+4], 0
			
xor	edx, edx
cmp	[edi+4], edx
push	edi
setnz	dl
mov	ebp, edx
call	sub_1004C300
add	esp, 4
test	ebp, ebp
jnz	short loc_1004C564
mov	eax, [esi+18h]
push	eax
call	sub_10012800
mov	ecx, [esi+18h]
push	ecx
call	sub_1004C600
push	esi
call	sub_10012760
add	esp, 0Ch
test	eax, eax
jz	short loc_1004C564
mov	edx, [esi+18h]
mov	eax, [edx+0Ch]
mov	byte ptr [eax],	0
and	dword ptr [esi+20h], 0FFFFFFFEh
pop	edi
pop	ebp
xor	eax, eax
pop	esi
mov	ecx, [esp+7Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
			
mov	ecx, [esp+88h+var_4]
pop	edi
pop	ebp
pop	esi
xor	ecx, esp
mov	eax, 1
call	@__security_check_cookie@4 
add	esp, 7Ch
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
push	esi
call	sub_1004C330
add	esp, 4
test	eax, eax
jz	short loc_1004C59F
mov	eax, [esi+18h]
pop	esi
mov	[esp+arg_0], eax
jmp	sub_1004C2A0
xor	eax, eax
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1004C5F5
lea	eax, [esi+8]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_1004C5F5
mov	ecx, [esi+4]
push	ecx
call	ds:PR_DestroyLock
mov	edx, [esi+30h]
push	edx
call	sub_1004E8F0
mov	eax, [esi+14h]
push	eax
call	sub_1004C260
mov	ecx, [esi]
add	esp, 0Ch
pop	esi
mov	[esp+arg_0], ecx
jmp	sub_10050840
			
xor	eax, eax
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+30h]
mov	[esp+arg_0], ecx
jmp	loc_1004E8C0
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+14h]
mov	[esp+arg_0], ecx
jmp	sub_1004C2A0
mov	eax, [esp+arg_0]
mov	ecx, [eax+14h]
mov	[esp+arg_0], ecx
jmp	PK11_GetSymKeyUserData
public PK11_NeedLogin
			
mov	eax, [esp+arg_0]
mov	eax, [eax+24h]
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jnz	short loc_1004C650
mov	eax, offset byte_100A1623
pop	esi
retn
mov	eax, [esi+0Ch]
cmp	byte ptr [eax],	0
jnz	short loc_1004C664
mov	ecx, [esi+14h]
push	ecx
call	sub_1004C330
add	esp, 4
mov	eax, [esi+0Ch]
pop	esi
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
push	ebp
push	esi
mov	esi, [ebx+4]
mov	eax, [esi+14h]
push	edi
push	eax
xor	edi, edi
call	PK11_GetSymKeyUserData
mov	ebp, eax
mov	eax, [esi+30h]
add	esp, 4
test	eax, eax
jz	short loc_1004C69C
push	ebx
push	eax
call	sub_1004F3C0
add	esp, 8
cmp	[ebx+8], edi
jz	short loc_1004C6D5
mov	eax, [esi+24h]
test	eax, eax
jz	short loc_1004C6BA
push	eax
call	PK11_GetWindow
add	esp, 4
test	eax, eax
jz	short loc_1004C6BA
mov	esi, [esi+24h]
jmp	short loc_1004C6D1
			
mov	ecx, [esi+14h]
push	1
push	0
push	ecx
call	sub_10012470
add	esp, 0Ch
mov	esi, eax
mov	edi, 1
test	esi, esi
jnz	short loc_1004C6DD
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
retn
push	esi
call	sub_1004C2E0
mov	edx, [ebx]
mov	eax, [esi+4]
mov	ecx, [ebp+5Ah]
push	edx
push	eax
call	ecx
push	esi
mov	ebx, eax
call	sub_1004C300
add	esp, 10h
test	edi, edi
jz	short loc_1004C707
push	esi
call	sub_100124E0
add	esp, 4
xor	esi, esi
test	ebx, ebx
jz	short loc_1004C725
push	ebx
or	esi, 0FFFFFFFFh
call	sub_10050AF0
mov	edx, ds:dword_100A7E70
push	edx
call	sub_10050AF0
add	esp, 8
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
			
sub	esp, 10h
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
push	esi
mov	ebx, eax
xor	eax, eax
push	edi
mov	edi, edx
mov	[esp+20h+var_10], eax
mov	[esp+20h+var_4], eax
mov	eax, [edi+14h]
push	eax
mov	esi, ecx
call	PK11_GetSymKeyUserData
push	ebx
push	ebp
mov	[esp+2Ch+var_C], eax
call	sub_1004F880
add	esp, 0Ch
test	eax, eax
jz	short loc_1004C7C0
test	esi, esi
jz	short loc_1004C790
push	esi
call	PK11_GetWindow
add	esp, 4
test	eax, eax
jnz	short loc_1004C7C7
mov	ecx, ds:dword_100A7E34
push	ecx
call	sub_10050AF0
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
mov	eax, [edi+24h]
test	eax, eax
jz	short loc_1004C7A4
push	eax
call	PK11_GetWindow
add	esp, 4
test	eax, eax
jnz	short loc_1004C7C4
mov	edx, [edi+14h]
push	1
push	0
push	edx
call	sub_10012470
add	esp, 0Ch
mov	esi, eax
mov	[esp+20h+var_10], 1
jmp	short loc_1004C7C7
test	esi, esi
jnz	short loc_1004C7E3
mov	esi, [edi+24h]
			
test	esi, esi
jnz	short loc_1004C7E3
mov	eax, ds:dword_100A7E34
push	eax
call	sub_10050AF0
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
			
push	esi
call	sub_1004C2E0
mov	edx, [esi+4]
mov	eax, [esp+24h+var_C]
lea	ecx, [esp+24h+var_8]
push	ecx
mov	ecx, [eax+52h]
push	ebx
push	ebp
push	edx
call	ecx
push	esi
mov	ebx, eax
call	sub_1004C300
add	esp, 18h
test	ebx, ebx
jnz	short loc_1004C81F
mov	edx, [esp+20h+var_8]
push	edx
push	esi
push	edi
call	sub_1004E620
add	esp, 0Ch
mov	edi, eax
jmp	short loc_1004C837
push	ebx
call	sub_10050AF0
mov	eax, ds:dword_100A7E70
push	eax
call	sub_10050AF0
mov	edi, [esp+28h+var_4]
add	esp, 8
cmp	[esp+20h+var_10], 0
jz	short loc_1004C847
push	esi
call	sub_100124E0
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 10h
retn
align 10h
			
push	ebx
push	edi
mov	edi, [esp+8+arg_C]
lea	eax, ds:4[edi*4]
push	eax
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1004C8E0
push	esi
xor	esi, esi
test	edi, edi
jle	short loc_1004C8DF
push	ebp
mov	ebp, [esp+10h+arg_8]
mov	edi, ebx
sub	ebp, ebx
mov	edi, edi
mov	ecx, [edi+ebp]
mov	edx, [esp+10h+arg_4]
mov	eax, [esp+10h+arg_0]
push	ecx
push	edx
push	eax
call	sub_1004E620
add	esp, 0Ch
mov	[edi], eax
test	eax, eax
jz	short loc_1004C8BD
inc	esi
add	edi, 4
cmp	esi, [esp+10h+arg_C]
jl	short loc_1004C890
pop	ebp
pop	esi
pop	edi
mov	eax, ebx
pop	ebx
retn
dec	esi
test	esi, esi
jle	short loc_1004C8D3
mov	ecx, [ebx+esi*4]
push	ecx
call	sub_1004E6D0
dec	esi
add	esp, 4
test	esi, esi
jg	short loc_1004C8C2
push	ebx
call	sub_10050550
add	esp, 4
xor	eax, eax
pop	ebp
pop	esi
pop	edi
pop	ebx
retn
align 10h
			
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	eax, [esp+5Ch+arg_4]
push	ebx
push	ebp
mov	ebx, edx
mov	edx, [ebx+14h]
push	esi
push	edi
mov	edi, [esp+6Ch+arg_0]
push	edx
mov	[esp+70h+var_48], ebx
mov	[esp+70h+var_50], eax
mov	[esp+70h+var_54], ecx
call	PK11_GetSymKeyUserData
add	esp, 4
mov	[esp+6Ch+var_58], eax
test	edi, edi
jz	short loc_1004C934
mov	esi, edi
mov	[esp+6Ch+var_5C], esi
jmp	short loc_1004C93D
mov	eax, [ebx+24h]
mov	[esp+6Ch+var_5C], eax
mov	esi, eax
test	esi, esi
jz	loc_1004CBB6
cmp	dword ptr [esi+4], 0
jz	loc_1004CBB6
mov	ebp, [esp+6Ch+arg_C]
test	ebp, ebp
jnz	short loc_1004C95C
mov	ebp, 10h
xor	edi, edi
cmp	ebp, 10h
ja	loc_1004CA38
lea	ebx, [esp+6Ch+Src]
push	esi
call	sub_1004C2E0
mov	edx, [esp+70h+arg_8]
mov	eax, [esp+70h+var_50]
mov	ecx, [esi+4]
push	edx
mov	edx, [esp+74h+var_58]
push	eax
mov	eax, [edx+6Ah]
push	ecx
call	eax
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	loc_1004CA59
mov	ecx, [esp+6Ch+var_5C]
push	ecx
call	sub_1004C300
add	esp, 4
test	ebx, ebx
jz	short loc_1004C9B7
lea	ecx, [esp+6Ch+Src]
cmp	ebx, ecx
jz	short loc_1004C9B7
push	ebx
call	sub_10050550
add	esp, 4
			
cmp	esi, 12h
jz	loc_1004CBC0
cmp	esi, 13h
jz	loc_1004CBC0
cmp	esi, 20h
jz	loc_1004CBC0
cmp	esi, 21h
jz	loc_1004CBC0
cmp	esi, 54h
jz	loc_1004CBC0
cmp	esi, 0D0h
jz	loc_1004CBC0
cmp	esi, 0D1h
jz	loc_1004CBC0
			
push	esi
call	sub_10050AF0
mov	edx, ds:dword_100A7E70
push	edx
call	sub_10050AF0
mov	eax, [esp+74h+var_54]
add	esp, 8
test	eax, eax
jz	loc_1004CBDC
pop	edi
pop	esi
pop	ebp
mov	dword ptr [eax], 0FFFFFFFFh
xor	eax, eax
pop	ebx
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
lea	ecx, ds:0[ebp*4]
push	ecx
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	loc_1004C96B
lea	esi, [eax+2]
jmp	short loc_1004C9FC
mov	eax, [esp+6Ch+var_5C]
mov	ecx, [eax+4]
lea	edx, [esp+6Ch+var_4C]
push	edx
mov	edx, [esp+70h+var_58]
mov	eax, [edx+6Eh]
push	ebp
push	ebx
push	ecx
call	eax
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	loc_1004CB13
mov	edi, edi
add	edi, [esp+6Ch+var_4C]
cmp	[esp+6Ch+arg_C], 0
mov	[esp+6Ch+var_50], edi
ja	loc_1004CB31
cmp	edi, ebp
jb	loc_1004CB31
lea	ecx, [esp+6Ch+Src]
add	ebp, ebp
cmp	ebx, ecx
jnz	short loc_1004CAD0
lea	edx, ds:0[ebp*4]
push	edx
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1004CB1D
mov	ecx, 10h
lea	esi, [esp+6Ch+Src]
mov	edi, ebx
rep movsd
mov	edi, [esp+6Ch+var_50]
jmp	short loc_1004CAE3
lea	eax, ds:0[ebp*4]
push	eax		
push	ebx		
call	sub_100505D0
add	esp, 8
mov	ebx, eax
test	ebx, ebx
jz	short loc_1004CB1D
lea	ecx, [esp+6Ch+var_4C]
push	ecx
mov	ecx, [esp+70h+var_5C]
mov	edx, ebp
sub	edx, edi
push	edx
mov	edx, [ecx+4]
lea	eax, [ebx+edi*4]
push	eax
mov	eax, [esp+78h+var_58]
mov	ecx, [eax+6Eh]
push	edx
call	ecx
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	loc_1004CA80
mov	edx, [esp+6Ch+var_5C]
push	edx
jmp	loc_1004C99A
			
mov	eax, [esp+6Ch+var_5C]
push	eax
call	sub_1004C300
mov	esi, 2
jmp	loc_1004C99F
			
mov	ebp, [esp+6Ch+var_5C]
mov	ecx, [ebp+4]
mov	edx, [esp+6Ch+var_58]
mov	eax, [edx+72h]
push	ecx
call	eax
push	ebp
mov	esi, eax
call	sub_1004C300
add	esp, 8
test	esi, esi
jnz	loc_1004C9A2
test	edi, edi
jz	short loc_1004CB6D
mov	ecx, [esp+6Ch+var_48]
push	edi
push	ebx
push	ebp
push	ecx
call	sub_1004C860
add	esp, 10h
mov	esi, eax
jmp	short loc_1004CB7E
mov	edx, ds:dword_100A7E44
push	edx
call	sub_10050AF0
add	esp, 4
xor	esi, esi
test	ebx, ebx
jz	short loc_1004CB93
lea	eax, [esp+6Ch+Src]
cmp	ebx, eax
jz	short loc_1004CB93
push	ebx
call	sub_10050550
add	esp, 4
			
mov	eax, [esp+6Ch+var_54]
test	eax, eax
jz	short loc_1004CBA1
mov	dword ptr [eax], 0
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+5Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
			
mov	esi, 0B3h
jmp	loc_1004C9FC
			
mov	eax, ds:dword_100A7E44
push	eax
call	sub_10050AF0
mov	eax, [esp+70h+var_54]
add	esp, 4
test	eax, eax
jz	short loc_1004CBDC
mov	dword ptr [eax], 0
			
mov	ecx, [esp+6Ch+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
align 10h
			
sub	esp, 60h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+60h+var_4], eax
mov	eax, [esp+60h+arg_4]
push	ebx
push	ebp
mov	ebp, [esp+68h+arg_8]
push	esi
mov	esi, [esp+6Ch+arg_C]
push	edi
mov	edi, [esp+70h+arg_0]
or	ebx, 0FFFFFFFFh
mov	[esp+70h+var_48], edi
mov	[esp+70h+var_60], eax
mov	[esp+70h+var_4C], ebp
mov	[esp+70h+var_50], ecx
mov	[esp+70h+var_5C], edx
test	edi, edi
jnz	short loc_1004CC4F
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1004CDFB
xor	eax, eax
test	esi, esi
jz	short loc_1004CC6F
mov	ecx, ebp
cmp	dword ptr [ecx], 0
jz	short loc_1004CC66
inc	eax
add	ecx, 0Ch
cmp	eax, esi
jb	short loc_1004CC57
jmp	short loc_1004CC6F
lea	ecx, [eax+eax*2]
mov	edx, [ebp+ecx*4+4]
mov	ebx, [edx]
			
cmp	eax, esi
jnz	short loc_1004CC85
push	0FFFFE001h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1004CDFB
mov	eax, [edi+30h]
test	eax, eax
jz	short loc_1004CCDF
push	ebx
push	eax
call	sub_1004E920
add	esp, 8
test	eax, eax
jz	short loc_1004CCDF
mov	ecx, [esp+70h+var_50]
mov	edx, [edi+30h]
lea	eax, [esp+70h+var_54]
push	eax
push	ecx
push	esi
push	ebp
push	ebx
push	edx
call	sub_1004EF50
add	esp, 18h
cmp	[esp+70h+var_54], 0
jnz	short loc_1004CCDF
mov	ecx, [esp+70h+var_5C]
test	ecx, ecx
jz	loc_1004CFAE
pop	edi
pop	esi
pop	ebp
mov	dword ptr [ecx], 0
pop	ebx
mov	ecx, [esp+60h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
			
mov	eax, [edi+14h]
push	eax
call	PK11_GetSymKeyUserData
mov	[esp+74h+var_58], eax
mov	eax, [esp+74h+var_60]
add	esp, 4
test	eax, eax
jz	short loc_1004CCFD
mov	[esp+70h+var_60], eax
jmp	short loc_1004CD06
mov	ecx, [edi+24h]
mov	[esp+70h+var_60], ecx
mov	eax, ecx
test	eax, eax
jz	loc_1004CF85
cmp	dword ptr [eax+4], 0
jz	loc_1004CF85
mov	ebp, [esp+70h+var_50]
test	ebp, ebp
jnz	short loc_1004CD25
mov	ebp, 10h
xor	edi, edi
cmp	ebp, 10h
ja	short loc_1004CD32
lea	ebx, [esp+70h+Src]
jmp	short loc_1004CD56
lea	edx, ds:0[ebp*4]
push	edx
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_1004CD52
lea	esi, [eax+2]
jmp	loc_1004CDE7
mov	eax, [esp+70h+var_60]
push	eax
call	sub_1004C2E0
mov	eax, [esp+74h+var_4C]
mov	ecx, [esp+74h+var_60]
mov	edx, [ecx+4]
push	esi
push	eax
mov	eax, [esp+7Ch+var_58]
mov	ecx, [eax+6Ah]
push	edx
call	ecx
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	loc_1004CE22
mov	edx, [esp+70h+var_60]
push	edx
call	sub_1004C300
add	esp, 4
test	ebx, ebx
jz	short loc_1004CDA2
lea	edx, [esp+70h+Src]
cmp	ebx, edx
jz	short loc_1004CDA2
push	ebx
call	sub_10050550
add	esp, 4
			
cmp	esi, 12h
jz	loc_1004CF8F
cmp	esi, 13h
jz	loc_1004CF8F
cmp	esi, 20h
jz	loc_1004CF8F
cmp	esi, 21h
jz	loc_1004CF8F
cmp	esi, 54h
jz	loc_1004CF8F
cmp	esi, 0D0h
jz	loc_1004CF8F
cmp	esi, 0D1h
jz	loc_1004CF8F
			
push	esi
call	sub_10050AF0
mov	eax, ds:dword_100A7E70
push	eax
call	sub_10050AF0
add	esp, 8
			
mov	eax, [esp+70h+var_5C]
test	eax, eax
jz	loc_1004CFAC
pop	edi
pop	esi
pop	ebp
mov	dword ptr [eax], 0FFFFFFFFh
xor	eax, eax
pop	ebx
mov	ecx, [esp+60h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
mov	ecx, [esp+70h+var_60]
mov	edx, [ecx+4]
lea	eax, [esp+70h+var_54]
push	eax
mov	eax, [esp+74h+var_58]
mov	ecx, [eax+6Eh]
push	ebp
push	ebx
push	edx
call	ecx
mov	esi, eax
add	esp, 10h
test	esi, esi
jnz	loc_1004CEE3
jmp	short loc_1004CE50
align 10h
			
add	edi, [esp+70h+var_54]
cmp	[esp+70h+var_50], 0
mov	[esp+70h+var_4C], edi
ja	loc_1004CF01
cmp	edi, ebp
jb	loc_1004CF01
lea	edx, [esp+70h+Src]
add	ebp, ebp
cmp	ebx, edx
jnz	short loc_1004CEA0
lea	eax, ds:0[ebp*4]
push	eax
push	0
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1004CEED
mov	ecx, 10h
lea	esi, [esp+70h+Src]
mov	edi, ebx
rep movsd
mov	edi, [esp+70h+var_4C]
jmp	short loc_1004CEB3
lea	ecx, ds:0[ebp*4]
push	ecx		
push	ebx		
call	sub_100505D0
add	esp, 8
mov	ebx, eax
test	ebx, ebx
jz	short loc_1004CEED
lea	edx, [esp+70h+var_54]
push	edx
mov	edx, [esp+74h+var_60]
mov	eax, ebp
sub	eax, edi
push	eax
mov	eax, [edx+4]
lea	ecx, [ebx+edi*4]
push	ecx
mov	ecx, [esp+7Ch+var_58]
mov	edx, [ecx+6Eh]
push	eax
call	edx
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	loc_1004CE50
mov	eax, [esp+70h+var_60]
push	eax
jmp	loc_1004CD85
			
mov	ecx, [esp+70h+var_60]
push	ecx
call	sub_1004C300
mov	esi, 2
jmp	loc_1004CD8A
			
mov	ebp, [esp+70h+var_60]
mov	edx, [ebp+4]
mov	eax, [esp+70h+var_58]
mov	ecx, [eax+72h]
push	edx
call	ecx
push	ebp
mov	esi, eax
call	sub_1004C300
add	esp, 8
test	esi, esi
jnz	loc_1004CD8D
test	edi, edi
jz	short loc_1004CF3D
mov	edx, [esp+70h+var_48]
push	edi
push	ebx
push	ebp
push	edx
call	sub_1004C860
add	esp, 10h
mov	esi, eax
jmp	short loc_1004CF4D
mov	eax, ds:dword_100A7E44
push	eax
call	sub_10050AF0
add	esp, 4
xor	esi, esi
test	ebx, ebx
jz	short loc_1004CF62
lea	ecx, [esp+70h+Src]
cmp	ebx, ecx
jz	short loc_1004CF62
push	ebx
call	sub_10050550
add	esp, 4
			
mov	eax, [esp+70h+var_5C]
test	eax, eax
jz	short loc_1004CF70
mov	dword ptr [eax], 0
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+60h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
			
mov	esi, 0B3h
jmp	loc_1004CDE7
			
mov	ecx, ds:dword_100A7E44
push	ecx
call	sub_10050AF0
mov	eax, [esp+74h+var_5C]
add	esp, 4
test	eax, eax
jz	short loc_1004CFAC
mov	dword ptr [eax], 0
			
xor	eax, eax
mov	ecx, [esp+70h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 60h
retn
align 10h
			
sub	esp, 18h
push	esi
mov	esi, [esp+1Ch+arg_C]
mov	ecx, 1
lea	eax, [esp+1Ch+var_18]
cmp	esi, ecx
jnz	short loc_1004CFFE
mov	eax, ds:off_100A7DA8
mov	[esp+1Ch+var_18], ecx
mov	ecx, ds:dword_100A7DAC
mov	[esp+1Ch+var_14], eax
mov	[esp+1Ch+var_10], ecx
jmp	short loc_1004D01F
cmp	esi, 2
jz	short loc_1004D008
cmp	esi, 3
jnz	short loc_1004D023
mov	edx, ds:off_100A7DA0
mov	eax, ds:dword_100A7DA4
mov	[esp+1Ch+var_18], ecx
mov	[esp+1Ch+var_14], edx
mov	[esp+1Ch+var_10], eax
lea	eax, [esp+1Ch+var_C]
mov	dword ptr [eax], 0
mov	dword ptr [eax+8], 4
lea	ecx, [esp+1Ch+arg_8]
mov	[eax+4], ecx
lea	edx, [esp+1Ch+var_18]
sub	eax, edx
lea	ecx, [eax+0Ch]
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
cmp	esi, 3
pop	esi
jnz	short loc_1004D07A
mov	ecx, [esp+18h+arg_10]
push	ecx
mov	ecx, [esp+1Ch+arg_14]
push	eax
mov	eax, [esp+20h+arg_4]
lea	edx, [esp+20h+var_18]
push	edx
mov	edx, [esp+24h+arg_0]
push	eax
call	sub_1004C8F0
add	esp, 10h
add	esp, 18h
retn
mov	edx, [esp+18h+arg_4]
push	eax
mov	eax, [esp+1Ch+arg_0]
lea	ecx, [esp+1Ch+var_18]
push	ecx
mov	ecx, [esp+20h+arg_10]
push	edx
mov	edx, [esp+24h+arg_14]
push	eax
call	sub_1004CC00
add	esp, 10h
add	esp, 18h
retn
align 10h
			
sub	esp, 28h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+28h+var_4], eax
mov	edx, [esp+28h+arg_C]
mov	ecx, [esp+28h+arg_10]
push	ebx
mov	ebx, [esp+2Ch+arg_14]
push	ebp
push	esi
mov	esi, [esp+34h+arg_0]
mov	ebp, 1
push	edi
mov	edi, [esp+38h+arg_4]
lea	eax, [esp+38h+var_28]
cmp	edx, ebp
jnz	short loc_1004D0E0
mov	eax, ds:off_100A7DA8
mov	edx, ds:dword_100A7DAC
jmp	short loc_1004D0F0
cmp	edx, 2
jnz	short loc_1004D100
mov	eax, ds:off_100A7DA0
mov	edx, ds:dword_100A7DA4
mov	[esp+38h+var_24], eax
lea	eax, [esp+38h+var_1C]
mov	[esp+38h+var_20], edx
mov	[esp+38h+var_28], ebp
mov	edx, ds:off_100A7DB4
mov	[eax+4], edx
mov	edx, ds:dword_100A7DB8
mov	[eax+8], edx
mov	edx, [esp+38h+arg_8]
mov	ebp, [edx]
mov	edx, [edx+4]
mov	dword ptr [eax], 0
add	eax, 0Ch
mov	[eax+8], edx
mov	dword ptr [eax], 101h
mov	[eax+4], ebp
lea	edx, [esp+38h+var_28]
sub	eax, edx
lea	edx, [eax+0Ch]
mov	eax, 2AAAAAABh
imul	edx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
lea	edx, [esp+3Ch+var_28]
push	edx
push	edi
push	esi
mov	edx, ebx
call	sub_1004CC00
mov	ecx, [esp+48h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
align 10h
			
sub	esp, 2Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+2Ch+var_4], eax
mov	eax, [esp+2Ch+arg_8]
mov	ecx, [esp+2Ch+arg_14]
push	ebx
mov	ebx, [esp+30h+arg_4]
push	ebp
mov	ebp, [esp+34h+arg_10]
push	esi
push	edi
mov	edi, [esp+3Ch+arg_0]
push	0
push	eax
mov	[esp+44h+var_2C], ecx
mov	[esp+44h+var_28], 3
mov	[esp+44h+var_24], eax
call	sub_10050D90
add	esp, 8
mov	[esp+3Ch+var_20], eax
test	eax, eax
jz	short loc_1004D1BE
dec	eax
mov	[esp+3Ch+var_20], eax
mov	ecx, [esp+3Ch+arg_C]
mov	edx, 1
lea	eax, [esp+3Ch+var_1C]
cmp	ecx, edx
jnz	short loc_1004D1E8
mov	eax, ds:dword_100A7DAC
mov	[esp+3Ch+var_1C], edx
mov	edx, ds:off_100A7DA8
mov	[esp+3Ch+var_18], edx
mov	[esp+3Ch+var_14], eax
jmp	short loc_1004D205
cmp	ecx, 2
jnz	short loc_1004D209
mov	ecx, ds:off_100A7DA0
mov	[esp+3Ch+var_1C], edx
mov	edx, ds:dword_100A7DA4
mov	[esp+3Ch+var_18], ecx
mov	[esp+3Ch+var_14], edx
lea	eax, [esp+3Ch+var_10]
mov	ecx, ds:off_100A7DB4
mov	edx, ds:dword_100A7DB8
mov	[eax+4], ecx
mov	[eax+8], edx
mov	dword ptr [eax], 0
lea	ecx, [esp+3Ch+var_28]
sub	eax, ecx
lea	ecx, [eax+0Ch]
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
add	esi, edx
push	esi
lea	edx, [esp+40h+var_28]
push	edx
mov	edx, [esp+44h+var_2C]
push	ebx
push	edi
mov	ecx, ebp
call	sub_1004CC00
add	esp, 10h
test	eax, eax
jnz	short loc_1004D26E
mov	edx, [esp+3Ch+var_2C]
inc	[esp+3Ch+var_20]
push	esi
lea	eax, [esp+40h+var_28]
push	eax
push	ebx
push	edi
mov	ecx, ebp
call	sub_1004CC00
add	esp, 10h
mov	ecx, [esp+3Ch+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 2Ch
retn
align 10h
			
sub	esp, 28h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+28h+var_4], eax
mov	eax, [esp+28h+arg_8]
push	ebx
mov	ebx, [esp+2Ch+arg_4]
push	ebp
mov	ebp, [esp+30h+arg_14]
push	esi
push	edi
mov	edi, [esp+38h+arg_0]
push	0
push	eax
mov	[esp+40h+var_28], 0CE534352h
mov	[esp+40h+var_24], eax
call	sub_10050D90
add	esp, 8
mov	[esp+38h+var_20], eax
test	eax, eax
jz	short loc_1004D2D6
dec	eax
mov	[esp+38h+var_20], eax
mov	ecx, [esp+38h+arg_C]
mov	edx, 1
lea	eax, [esp+38h+var_1C]
cmp	ecx, edx
jnz	short loc_1004D300
mov	eax, ds:off_100A7DA8
mov	ecx, ds:dword_100A7DAC
mov	[esp+38h+var_1C], edx
mov	[esp+38h+var_18], eax
mov	[esp+38h+var_14], ecx
jmp	short loc_1004D31C
cmp	ecx, 2
jnz	short loc_1004D320
mov	eax, ds:dword_100A7DA4
mov	[esp+38h+var_1C], edx
mov	edx, ds:off_100A7DA0
mov	[esp+38h+var_18], edx
mov	[esp+38h+var_14], eax
lea	eax, [esp+38h+var_10]
mov	ecx, ds:off_100A7DB4
mov	edx, ds:dword_100A7DB8
mov	[eax+4], ecx
mov	[eax+8], edx
mov	dword ptr [eax], 0
lea	ecx, [esp+38h+var_28]
sub	eax, ecx
lea	ecx, [eax+0Ch]
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
add	esi, edx
mov	edx, [esp+38h+arg_10]
push	edx
push	esi
lea	eax, [esp+40h+var_28]
push	eax
push	ebx
mov	ecx, ebp
mov	edx, edi
call	sub_1004C8F0
add	esp, 10h
test	eax, eax
jnz	short loc_1004D389
mov	ecx, [esp+38h+arg_10]
inc	[esp+38h+var_20]
push	ecx
push	esi
lea	edx, [esp+40h+var_28]
push	edx
push	ebx
mov	ecx, ebp
mov	edx, edi
call	sub_1004C8F0
add	esp, 10h
mov	ecx, [esp+38h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
align 10h
push	esi
mov	esi, [eax]
mov	eax, [eax+4]
cmp	eax, 3
jb	short loc_1004D3F1
cmp	byte ptr [esi],	2
jnz	short loc_1004D3F1
push	edi
lea	edi, [eax-2]
movzx	eax, byte ptr [esi+1]
mov	edx, 2
test	al, al
jns	short loc_1004D3E1
mov	ecx, eax
and	ecx, 7Fh
sub	edi, ecx
xor	eax, eax
test	edi, edi
jle	short loc_1004D3E1
test	ecx, ecx
jz	short loc_1004D3E1
push	ebp
movzx	ebp, byte ptr [edx+esi]
shl	eax, 8
or	eax, ebp
inc	edx
dec	ecx
jnz	short loc_1004D3D3
pop	ebp
			
cmp	eax, edi
pop	edi
jnz	short loc_1004D3F1
add	edx, esi
mov	[ebx+4], eax
mov	[ebx], edx
xor	eax, eax
pop	esi
retn
			
or	eax, 0FFFFFFFFh
pop	esi
retn
align 10h
			
sub	esp, 48h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+48h+var_4], eax
mov	eax, [esp+48h+arg_4]
mov	ecx, [esp+48h+arg_C]
push	ebp
mov	ebp, [esp+4Ch+arg_0]
push	esi
push	edi
mov	edi, [esp+54h+arg_14]
mov	[esp+54h+var_48], eax
mov	[esp+54h+var_3C], ecx
mov	[esp+54h+var_44], edi
mov	[esp+54h+var_40], 0
lea	esi, [esp+54h+var_34]
test	ebp, ebp
jnz	short loc_1004D468
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
test	edi, edi
jz	short loc_1004D454
mov	dword ptr [edi], 0FFFFFFFFh
pop	edi
pop	esi
xor	eax, eax
pop	ebp
mov	ecx, [esp+48h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 48h
retn
push	ebx
mov	ebx, [esp+58h+arg_10]
mov	eax, 1
cmp	ebx, eax
jnz	short loc_1004D487
mov	edx, ds:off_100A7DA8
mov	[esp+58h+var_34], eax
mov	eax, ds:dword_100A7DAC
jmp	short loc_1004D4A0
cmp	ebx, 2
jz	short loc_1004D491
cmp	ebx, 3
jnz	short loc_1004D4AC
mov	edx, ds:off_100A7DA0
mov	[esp+58h+var_34], eax
mov	eax, ds:dword_100A7DA4
lea	esi, [esp+58h+var_28]
mov	[esp+58h+var_2C], eax
mov	[esp+58h+var_30], edx
mov	eax, ds:dword_100A7DB8
mov	edx, ds:off_100A7DB4
mov	[esi+8], eax
mov	eax, [esp+58h+arg_8]
mov	[esi+4], edx
mov	edx, [eax]
mov	eax, [eax+4]
mov	dword ptr [esi], 0
mov	[esi+10h], edx
mov	edx, [ecx]
mov	[esi+14h], eax
mov	eax, [ecx+4]
mov	dword ptr [esi+0Ch], 81h
mov	[esi+1Ch], edx
lea	edx, [esp+58h+var_34]
lea	ecx, [esi+18h]
sub	ecx, edx
mov	[esi+20h], eax
add	ecx, 0Ch
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	edi, edx
shr	edi, 1Fh
add	edi, edx
mov	dword ptr [esi+18h], 82h
cmp	ebx, 3
jnz	short loc_1004D526
mov	ecx, [esp+58h+var_48]
push	1
push	edi
lea	eax, [esp+60h+var_34]
push	eax
push	ecx
mov	ecx, [esp+68h+var_44]
mov	edx, ebp
call	sub_1004C8F0
jmp	short loc_1004D540
mov	eax, [esp+58h+var_48]
push	edi
lea	edx, [esp+5Ch+var_34]
push	edx
mov	edx, [esp+60h+var_44]
push	eax
push	ebp
mov	ecx, 1
call	sub_1004CC00
add	esp, 10h
test	eax, eax
jz	short loc_1004D552
mov	ecx, [eax]
mov	[esp+58h+var_40], ecx
jmp	loc_1004D5D5
mov	eax, [esp+58h+var_3C]
lea	ebx, [esp+58h+var_3C]
call	sub_1004D3A0
test	eax, eax
jz	short loc_1004D578
pop	ebx
pop	edi
pop	esi
xor	eax, eax
pop	ebp
mov	ecx, [esp+48h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 48h
retn
cmp	[esp+58h+arg_10], 3
mov	edx, [esp+58h+var_3C]
mov	eax, [esp+58h+var_38]
mov	dword ptr [esi+18h], 82h
mov	[esi+1Ch], edx
mov	[esi+20h], eax
jnz	short loc_1004D5AE
mov	edx, [esp+58h+var_48]
push	1
push	edi
lea	ecx, [esp+60h+var_34]
push	ecx
mov	ecx, [esp+64h+var_44]
push	edx
mov	edx, ebp
call	sub_1004C8F0
jmp	short loc_1004D5C8
mov	ecx, [esp+58h+var_48]
mov	edx, [esp+58h+var_44]
push	edi
lea	eax, [esp+5Ch+var_34]
push	eax
push	ecx
push	ebp
mov	ecx, 1
call	sub_1004CC00
add	esp, 10h
test	eax, eax
jz	short loc_1004D5DE
mov	edx, [eax]
mov	[esp+58h+var_40], edx
push	eax
call	sub_10050550
add	esp, 4
mov	ecx, [esp+58h+var_4]
mov	eax, [esp+58h+var_40]
pop	ebx
pop	edi
pop	esi
pop	ebp
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 48h
retn
align 10h
sub	esp, 28h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+28h+var_4], eax
mov	edx, [esp+28h+arg_C]
push	ebx
mov	ebx, [esp+2Ch+arg_10]
push	ebp
push	esi
mov	esi, [esp+34h+arg_0]
mov	ecx, 1
push	edi
mov	edi, [esp+38h+arg_4]
lea	eax, [esp+38h+var_28]
cmp	edx, ecx
jnz	short loc_1004D63C
mov	eax, ds:off_100A7DA8
mov	edx, ds:dword_100A7DAC
jmp	short loc_1004D64C
cmp	edx, 2
jnz	short loc_1004D65C
mov	eax, ds:off_100A7DA0
mov	edx, ds:dword_100A7DA4
mov	[esp+38h+var_24], eax
lea	eax, [esp+38h+var_1C]
mov	[esp+38h+var_20], edx
mov	[esp+38h+var_28], ecx
mov	edx, ds:off_100A7DB4
mov	[eax+4], edx
mov	edx, ds:dword_100A7DB8
mov	[eax+8], edx
mov	edx, [esp+38h+arg_8]
mov	ebp, [edx]
mov	edx, [edx+4]
mov	dword ptr [eax], 0
add	eax, 0Ch
mov	[eax+8], edx
mov	dword ptr [eax], 11h
mov	[eax+4], ebp
lea	edx, [esp+38h+var_28]
sub	eax, edx
lea	edx, [eax+0Ch]
mov	eax, 2AAAAAABh
imul	edx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
lea	edx, [esp+3Ch+var_28]
push	edx
push	edi
push	esi
mov	edx, ebx
call	sub_1004CC00
add	esp, 10h
test	eax, eax
jz	short loc_1004D6DB
mov	esi, [eax]
push	eax
call	sub_10050550
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+28h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 28h
retn
mov	ecx, [esp+38h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 28h
retn
			
sub	esp, 44h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+44h+var_4], eax
push	ebx
push	esi
mov	esi, [esp+4Ch+arg_4]
push	edi
mov	edi, [esp+50h+arg_0]
mov	[esp+50h+var_44], 0CE534353h
test	esi, esi
jnz	short loc_1004D718
mov	esi, [edi+24h]
xor	ebx, ebx
test	esi, esi
jz	loc_1004D7E4
cmp	[esi+4], ebx
jz	loc_1004D7E4
cmp	[esp+50h+arg_14], 2
lea	eax, [esp+50h+var_40]
jnz	short loc_1004D755
mov	eax, ds:off_100A7DA0
mov	ecx, ds:dword_100A7DA4
mov	[esp+50h+var_3C], eax
mov	[esp+50h+var_40], 1
mov	[esp+50h+var_38], ecx
lea	eax, [esp+50h+var_34]
mov	ecx, [esp+50h+arg_C]
mov	[eax], ebx
mov	dword ptr [eax+8], 4
lea	edx, [esp+50h+var_44]
mov	[eax+4], edx
mov	edx, [ecx]
mov	ecx, [ecx+4]
mov	[eax+14h], ecx
mov	ecx, [esp+50h+arg_10]
mov	[eax+10h], edx
mov	edx, [ecx]
mov	ecx, [ecx+4]
mov	dword ptr [eax+0Ch], 81h
add	eax, 18h
mov	[eax+4], edx
mov	[eax+8], ecx
mov	dword ptr [eax], 82h
lea	edx, [esp+50h+var_40]
sub	eax, edx
lea	ecx, [eax+0Ch]
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
lea	ecx, [esp+54h+var_40]
push	ecx
xor	edx, edx
push	esi
push	edi
lea	ecx, [edx+1]
call	sub_1004CC00
add	esp, 10h
test	eax, eax
jz	short loc_1004D7D0
mov	ebx, [eax]
push	eax
call	sub_10050550
add	esp, 4
pop	edi
pop	esi
mov	eax, ebx
pop	ebx
mov	ecx, [esp+44h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 44h
retn
			
push	0FFFFE041h
call	PORT_SetError_Util
mov	ecx, [esp+54h+var_4]
add	esp, 4
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 44h
retn
align 10h
sub	esp, 50h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+50h+var_4], eax
cmp	[esp+50h+arg_18], 0
mov	eax, [esp+50h+arg_14]
push	esi
mov	esi, [esp+54h+arg_4]
mov	edx, 0CE534351h
push	edi
mov	edi, [esp+58h+arg_0]
mov	[esp+58h+var_50], edx
mov	[esp+58h+var_4C], 1
jz	short loc_1004D856
mov	ecx, ds:off_100A7DA0
mov	[esp+58h+var_48], ecx
mov	ecx, ds:dword_100A7DA4
jmp	short loc_1004D866
mov	ecx, ds:off_100A7DA8
mov	[esp+58h+var_48], ecx
mov	ecx, ds:dword_100A7DAC
mov	[esp+58h+var_44], ecx
lea	ecx, [esp+58h+var_50]
mov	[esp+58h+var_3C], ecx
mov	ecx, [esp+58h+arg_8]
push	ebx
mov	ebx, [ecx]
mov	ecx, [ecx+4]
mov	[esp+5Ch+var_2C], ecx
mov	ecx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], ebx
mov	ebx, [ecx]
mov	ecx, [ecx+4]
push	0
push	eax
mov	[esp+64h+var_40], 0
mov	[esp+64h+var_38], 4
mov	[esp+64h+var_34], 101h
mov	[esp+64h+var_28], 11h
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_20], ecx
mov	[esp+64h+var_1C], edx
mov	[esp+64h+var_18], eax
call	sub_10050D90
add	esp, 8
mov	[esp+5Ch+var_14], eax
pop	ebx
test	eax, eax
jz	short loc_1004D8D6
dec	eax
mov	[esp+58h+var_14], eax
cmp	[esp+58h+arg_10], 0
mov	[esp+58h+var_10], 0CE534358h
jz	short loc_1004D8FA
mov	edx, ds:off_100A7DA0
mov	eax, ds:dword_100A7DA4
mov	[esp+58h+var_C], edx
mov	[esp+58h+var_8], eax
jmp	short loc_1004D90E
mov	ecx, ds:off_100A7DA8
mov	edx, ds:dword_100A7DAC
mov	[esp+58h+var_C], ecx
mov	[esp+58h+var_8], edx
lea	eax, [esp+58h+var_4C]
push	eax
mov	eax, 6
mov	ecx, esi
mov	edx, edi
call	sub_1004C730
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1004D949
mov	eax, [edi+30h]
test	eax, eax
jz	short loc_1004D947
mov	edx, [esp+58h+var_50]
push	6
lea	ecx, [esp+5Ch+var_4C]
push	ecx
push	edx
push	esi
push	eax
call	sub_1004F230
add	esp, 14h
mov	eax, esi
mov	ecx, [esp+58h+var_4]
pop	edi
pop	esi
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 50h
retn
align 10h
			
sub	esp, 2Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+2Ch+var_4], eax
mov	ecx, [esp+2Ch+arg_10]
push	ebx
mov	ebx, [esp+30h+arg_14]
push	esi
mov	esi, [esp+34h+arg_4]
push	edi
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], 0CE534351h
test	esi, esi
jnz	short loc_1004D998
mov	esi, [edi+24h]
test	esi, esi
jz	loc_1004DA50
cmp	dword ptr [esi+4], 0
jz	loc_1004DA50
mov	edx, [esp+38h+arg_C]
push	ebp
mov	ebp, 1
lea	eax, [esp+3Ch+var_28]
cmp	edx, ebp
jnz	short loc_1004D9C1
mov	eax, ds:off_100A7DA8
mov	edx, ds:dword_100A7DAC
jmp	short loc_1004D9D6
cmp	edx, 2
jz	short loc_1004D9CB
cmp	edx, 3
jnz	short loc_1004D9E6
mov	eax, ds:off_100A7DA0
mov	edx, ds:dword_100A7DA4
mov	[esp+3Ch+var_24], eax
lea	eax, [esp+3Ch+var_1C]
mov	[esp+3Ch+var_20], edx
mov	[esp+3Ch+var_28], ebp
mov	dword ptr [eax], 0
mov	dword ptr [eax+8], 4
add	eax, 0Ch
lea	edx, [esp+3Ch+var_2C]
mov	[eax-8], edx
mov	edx, [esp+3Ch+arg_8]
mov	ebp, [edx]
mov	edx, [edx+4]
mov	[eax+8], edx
mov	dword ptr [eax], 101h
mov	[eax+4], ebp
lea	edx, [esp+3Ch+var_28]
sub	eax, edx
lea	edx, [eax+0Ch]
mov	eax, 2AAAAAABh
imul	edx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
push	eax
lea	edx, [esp+40h+var_28]
push	edx
push	esi
push	edi
mov	edx, ebx
call	sub_1004CC00
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
mov	ecx, [esp+2Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 2Ch
retn
			
push	0FFFFE041h
call	PORT_SetError_Util
mov	ecx, [esp+3Ch+var_4]
add	esp, 4
pop	edi
pop	esi
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 2Ch
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	eax, [eax+30h]
test	eax, eax
jnz	short loc_1004DA8F
or	eax, 0FFFFFFFFh
retn
mov	[esp+arg_0], eax
jmp	sub_1004F020
align 10h
			
push	ecx
push	ebx
push	esi
mov	esi, [esp+0Ch+Size]
mov	eax, [esi+14h]
push	edi
push	eax
mov	[esp+14h+var_4], 0
call	PK11_GetSymKeyUserData
mov	edi, [esp+14h+arg_4]
add	esp, 4
mov	ebx, eax
test	edi, edi
jnz	short loc_1004DAD1
mov	edi, [esi+24h]
test	edi, edi
jz	loc_1004DBB8
cmp	dword ptr [edi+4], 0
jz	loc_1004DBB8
push	edi
call	sub_1004C2E0
mov	ecx, [esp+14h+arg_8]
mov	edx, [edi+4]
mov	eax, [ebx+96h]
push	ecx
push	edx
call	eax
add	esp, 0Ch
test	eax, eax
jz	short loc_1004DB09
push	edi
call	sub_1004C300
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
push	ebp
mov	ebp, [esp+14h+arg_10]
xor	eax, eax
xor	esi, esi
mov	[esp+14h+Size],	eax
test	ebp, ebp
jz	short loc_1004DB2E
mov	eax, [ebp+0]
test	eax, eax
jz	short loc_1004DB23
mov	esi, eax
mov	eax, [ebp+4]
mov	[esp+14h+Size],	eax
test	esi, esi
jnz	short loc_1004DB53
mov	ecx, [esp+14h+arg_14]
push	eax
push	ecx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1004DB53
push	edi
call	sub_1004C300
add	esp, 4
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
			
mov	eax, [esp+14h+arg_C]
mov	ecx, [eax+4]
lea	edx, [esp+14h+Size]
push	edx
mov	edx, [eax]
mov	eax, [edi+4]
push	esi
push	ecx
mov	ecx, [ebx+9Ah]
push	edx
push	eax
call	ecx
push	edi
mov	ebx, eax
call	sub_1004C300
add	esp, 18h
test	ebx, ebx
jz	short loc_1004DB90
push	esi
call	sub_10050550
add	esp, 4
pop	ebp
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
test	ebp, ebp
jnz	short loc_1004DBAE
mov	edx, [esp+14h+Size]
mov	eax, [esp+14h+arg_14]
push	esi		
push	edx		
push	ebp		
push	eax		
call	sub_10050C70
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
pop	ecx
retn
mov	eax, [esp+14h+var_4]
pop	ebp
pop	edi
pop	esi
pop	ebx
pop	ecx
retn
			
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
pop	ecx
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+14h]
mov	[esp+arg_0], ecx
jmp	sub_1004C330
sub	esp, 24h
push	ebx
push	esi
mov	esi, [esp+2Ch+arg_0]
mov	eax, [esi+14h]
push	eax
call	PK11_GetSymKeyUserData
mov	ebx, [esp+30h+arg_4]
add	esp, 4
mov	[esp+2Ch+var_24], eax
test	ebx, ebx
jnz	short loc_1004DC0C
mov	ebx, [esi+24h]
test	ebx, ebx
jz	loc_1004DDE1
cmp	dword ptr [ebx+4], 0
jz	loc_1004DDE1
mov	ecx, [esp+2Ch+arg_8]
mov	edx, 1
lea	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+arg_4], eax
cmp	ecx, edx
jnz	short loc_1004DC3D
mov	ecx, ds:off_100A7DA8
mov	[esp+2Ch+var_18], edx
mov	edx, ds:dword_100A7DAC
jmp	short loc_1004DC57
cmp	ecx, 2
jz	short loc_1004DC47
cmp	ecx, 3
jnz	short loc_1004DC67
mov	ecx, ds:off_100A7DA0
mov	[esp+2Ch+var_18], edx
mov	edx, ds:dword_100A7DA4
lea	eax, [esp+2Ch+var_C]
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+var_10], edx
mov	[esp+2Ch+var_14], ecx
mov	ecx, ds:off_100A7DB4
mov	edx, ds:dword_100A7DB8
mov	dword ptr [eax], 0
mov	[eax+4], ecx
mov	[eax+8], edx
call	sub_100507B0
mov	[esp+2Ch+var_1C], eax
test	eax, eax
jz	loc_1004DDEE
push	ebp
push	edi
push	40h
push	eax
mov	ebp, 10h
xor	edi, edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_1004DD52
push	ebx
call	sub_1004C2E0
mov	eax, [esp+38h+arg_4]
lea	ecx, [esp+38h+var_18]
sub	eax, ecx
lea	ecx, [eax+0Ch]
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	eax, edx
shr	eax, 1Fh
add	eax, edx
mov	edx, [ebx+4]
push	eax
mov	eax, [esp+3Ch+var_24]
lea	ecx, [esp+3Ch+var_18]
push	ecx
mov	ecx, [eax+6Ah]
push	edx
call	ecx
add	esp, 10h
test	eax, eax
jnz	short loc_1004DD49
mov	eax, [ebx+4]
mov	ecx, [esp+34h+var_24]
lea	edx, [esp+34h+var_20]
push	edx
mov	edx, [ecx+6Eh]
push	ebp
push	esi
push	eax
call	edx
add	esp, 10h
test	eax, eax
jnz	short loc_1004DD49
add	edi, [esp+34h+var_20]
cmp	edi, ebp
jb	short loc_1004DD6A
add	ebp, ebp
lea	eax, ds:0[ebp*4]
push	eax		
push	esi		
call	sub_100505D0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004DD49
lea	ecx, [esp+34h+var_20]
push	ecx
mov	ecx, [ebx+4]
mov	edx, ebp
sub	edx, edi
push	edx
mov	edx, [esp+3Ch+var_24]
lea	eax, [esi+edi*4]
push	eax
mov	eax, [edx+6Eh]
push	ecx
call	eax
add	esp, 10h
test	eax, eax
jz	short loc_1004DD06
			
push	ebx
call	sub_1004C300
add	esp, 4
			
mov	eax, [esp+34h+var_1C]
push	eax
call	sub_10050840
add	esp, 4
pop	edi
pop	ebp
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 24h
retn
mov	ecx, [ebx+4]
mov	edx, [esp+34h+var_24]
mov	eax, [edx+72h]
push	ecx
call	eax
push	ebx
mov	ebp, eax
call	sub_1004C300
add	esp, 8
test	ebp, ebp
jnz	short loc_1004DD52
test	edi, edi
jz	short loc_1004DDCA
mov	ecx, [esp+34h+arg_0]
push	edi
push	esi
push	ebx
push	ecx
call	sub_1004C860
mov	edi, eax
add	esp, 10h
test	edi, edi
jz	short loc_1004DDCA
mov	eax, [edi]
mov	esi, edi
test	eax, eax
jz	short loc_1004DDC1
mov	ebx, [esp+34h+arg_10]
mov	ebp, [esp+34h+arg_C]
push	ebx
push	eax
call	ebp
mov	eax, [esi+4]
add	esi, 4
add	esp, 8
test	eax, eax
jnz	short loc_1004DDB0
push	edi
call	sub_10050550
add	esp, 4
			
mov	edx, [esp+34h+var_1C]
push	edx
call	sub_10050840
add	esp, 4
pop	edi
pop	ebp
pop	esi
xor	eax, eax
pop	ebx
add	esp, 24h
retn
			
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 24h
retn
align 10h
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_1004DE0D
xor	eax, eax
pop	edi
retn
cmp	[esp+4+arg_4], 0
jz	short loc_1004DE09
mov	eax, [edi+14h]
push	esi
push	eax
mov	esi, 3
call	sub_100127E0
add	esp, 4
test	eax, eax
jnz	short loc_1004DE2F
mov	esi, 2
mov	ecx, [esp+8+arg_8]
mov	edx, [ecx]
mov	eax, [edi+34h]
push	esi
push	edx
push	eax
call	sub_1002C6E0
add	esp, 0Ch
neg	eax
sbb	eax, eax
pop	esi
neg	eax
pop	edi
retn
align 10h
			
sub	esp, 9Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+9Ch+var_4], eax
mov	ecx, [esp+9Ch+arg_24]
mov	eax, [esp+9Ch+arg_4]
push	ebx
mov	ebx, [esp+0A0h+arg_20]
push	ebp
mov	ebp, [esp+0A4h+arg_0]
push	esi
mov	esi, [esp+0A8h+arg_14]
mov	[esp+0A8h+var_8C], ecx
mov	[esp+0A8h+var_9C], eax
mov	eax, [esp+0A8h+arg_10]
xor	ecx, ecx
push	edi
mov	edi, [esp+0ACh+arg_18]
mov	[esp+0ACh+var_84], ebp
mov	[esp+0ACh+Src],	eax
mov	[esp+0ACh+var_88], esi
cmp	ebp, ecx
jnz	short loc_1004DEDB
push	0FFFFE041h
call	PORT_SetError_Util
add	esp, 4
			
xor	eax, eax
mov	ecx, [esp+0ACh+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 9Ch
retn
mov	edx, 1
cmp	[esp+0ACh+arg_8], edx
jnz	short loc_1004DEC0
mov	[esp+0ACh+var_80], ecx
mov	[esp+0ACh+var_7C], edx
cmp	[esp+0ACh+arg_28], ecx
jz	short loc_1004DF14
mov	edx, ds:off_100A7DA0
mov	[esp+0ACh+var_78], edx
mov	edx, ds:dword_100A7DA4
mov	[esp+0ACh+var_90], 2
jmp	short loc_1004DF2C
mov	edx, ds:off_100A7DA8
mov	[esp+0ACh+var_78], edx
mov	edx, ds:dword_100A7DAC
mov	[esp+0ACh+var_90], 1
mov	[esp+0ACh+var_70], ecx
mov	ecx, ds:off_100A7DB4
mov	[esp+0ACh+var_6C], ecx
mov	[esp+0ACh+var_74], edx
mov	edx, ds:dword_100A7DB8
lea	ecx, [esp+0ACh+var_80]
mov	[esp+0ACh+var_60], ecx
mov	ecx, [esp+0ACh+arg_C]
mov	[esp+0ACh+var_68], edx
mov	edx, [ecx]
mov	ecx, [ecx+4]
push	0
push	eax
mov	[esp+0B4h+var_64], 80h
mov	[esp+0B4h+var_5C], 4
mov	[esp+0B4h+var_58], 102h
mov	[esp+0B4h+var_54], edx
mov	[esp+0B4h+var_50], ecx
mov	[esp+0B4h+var_4C], 3
mov	[esp+0B4h+var_48], eax
call	sub_10050D90
add	esp, 8
mov	[esp+0ACh+var_44], eax
test	eax, eax
jz	short loc_1004DFA0
dec	eax
mov	[esp+0ACh+var_44], eax
mov	eax, [esi+4]
mov	ecx, [edi]
mov	edx, [esi]
mov	[esp+0ACh+var_38], eax
mov	eax, [esp+0ACh+arg_1C]
mov	[esp+0ACh+var_30], ecx
mov	ecx, [eax]
mov	[esp+0ACh+var_3C], edx
mov	edx, [edi+4]
mov	[esp+0ACh+var_24], ecx
mov	ecx, [ebx+4]
mov	[esp+0ACh+var_2C], edx
mov	edx, [eax+4]
mov	eax, [ebx]
mov	[esp+0ACh+var_14], ecx
mov	ecx, [esp+0ACh+var_8C]
mov	[esp+0ACh+var_18], eax
mov	[esp+0ACh+var_40], 11h
mov	[esp+0ACh+var_34], 81h
mov	[esp+0ACh+var_28], 101h
mov	[esp+0ACh+var_20], edx
mov	[esp+0ACh+var_1C], 82h
lea	eax, [esp+0ACh+var_10]
test	ecx, ecx
jz	short loc_1004E056
push	0
push	ecx
mov	[esp+0B4h+var_10], 0CE534352h
mov	[esp+0B4h+var_C], ecx
call	sub_10050D90
add	esp, 8
mov	[esp+0ACh+var_8], eax
test	eax, eax
jz	short loc_1004E04F
dec	eax
mov	[esp+0ACh+var_8], eax
lea	eax, [esp+0ACh+var_4]
lea	edx, [esp+0ACh+var_7C]
sub	eax, edx
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
mov	eax, [esp+0ACh+var_90]
push	0
push	eax
push	ebx
mov	ebx, [esp+0B8h+var_9C]
sar	edx, 1
push	edi
mov	esi, edx
push	ebx
shr	esi, 1Fh
push	ebp
add	esi, edx
call	sub_1004D400
mov	edi, eax
add	esp, 18h
test	edi, edi
jz	loc_1004E1F0
mov	ecx, [ebp+14h]
push	ecx
call	sub_1004C2A0
push	1
mov	ebx, eax
push	0
push	ebx
call	sub_10012470
mov	ebp, eax
xor	eax, eax
add	esp, 10h
cmp	ebp, eax
jnz	short loc_1004E0C3
push	edi
call	sub_1004E6D0
push	ebx
call	sub_1004C260
add	esp, 8
jmp	loc_1004DEC0
push	ebx
push	ebp
push	eax
push	1
lea	edx, [esp+0BCh+var_7C]
mov	[esp+0BCh+var_7C], 11h
mov	[esp+0BCh+var_78], eax
mov	[esp+0BCh+var_74], eax
mov	eax, [edi]
push	edx
push	eax
call	sub_1004F600
mov	esi, eax
mov	eax, [esp+0C4h+var_74]
xor	ecx, ecx
add	esp, 18h
cmp	eax, ecx
jle	short loc_1004E102
mov	edx, [esp+0ACh+var_78]
mov	[esp+0ACh+var_9C], edx
mov	[esp+0ACh+var_98], eax
jmp	short loc_1004E10A
mov	[esp+0ACh+var_9C], ecx
mov	[esp+0ACh+var_98], ecx
cmp	esi, ecx
jnz	short loc_1004E144
push	ecx
mov	ecx, [esp+0B0h+var_88]
lea	eax, [esp+0B0h+var_9C]
push	eax
push	ecx
call	sub_10050D00
add	esp, 0Ch
test	eax, eax
jnz	short loc_1004E137
mov	edx, ds:dword_100A7E64
push	edx
call	sub_10050AF0
add	esp, 4
or	esi, 0FFFFFFFFh
mov	eax, [esp+0ACh+var_9C]
push	eax
call	sub_10050550
add	esp, 4
cmp	esi, 0FFFFFFFFh
jnz	short loc_1004E163
push	edi
call	sub_1004E6D0
push	ebp
call	sub_100124E0
push	ebx
call	sub_1004C260
add	esp, 0Ch
jmp	loc_1004DEC0
mov	eax, [esp+0ACh+arg_C]
mov	ecx, [eax]
mov	edx, [eax+4]
mov	eax, [esp+0ACh+Src]
push	0
push	eax
mov	[esp+0B4h+var_7C], 102h
mov	[esp+0B4h+var_78], ecx
mov	[esp+0B4h+var_74], edx
mov	[esp+0B4h+var_70], 3
mov	[esp+0B4h+var_6C], eax
call	sub_10050D90
add	esp, 8
mov	[esp+0ACh+var_68], eax
test	eax, eax
jz	short loc_1004E1A7
dec	eax
mov	[esp+0ACh+var_68], eax
mov	ecx, [edi]
push	ebx
push	ebp
mov	esi, 2
push	esi
lea	eax, [esp+0B8h+var_7C]
push	eax
push	ecx
call	sub_1004F830
add	esp, 14h
cmp	dword ptr [edi+0Ch], 0
jnz	short loc_1004E1DB
mov	eax, [esp+0ACh+Src]
test	eax, eax
jz	short loc_1004E1DB
push	0		
push	eax		
call	sub_10050D50
add	esp, 8
mov	[edi+0Ch], eax
			
push	ebp
call	sub_100124E0
push	ebx
call	sub_1004C260
mov	ebp, [esp+0B4h+var_84]
add	esp, 8
jmp	short loc_1004E205
lea	edx, [esp+0ACh+var_7C]
push	edx
mov	eax, esi
mov	ecx, ebx
mov	edx, ebp
call	sub_1004C730
add	esp, 4
mov	edi, eax
test	edi, edi
jz	short loc_1004E222
mov	ebp, [ebp+30h]
test	ebp, ebp
jz	short loc_1004E222
push	esi
lea	eax, [esp+0B0h+var_7C]
push	eax
push	1
push	edi
push	ebp
call	sub_1004F230
add	esp, 14h
			
mov	eax, edi
jmp	loc_1004DEC2
align 10h
			
sub	esp, 0D4h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0D4h+var_4], eax
mov	eax, [esp+0D4h+arg_4]
push	ebx
push	ebp
mov	ebp, [esp+0DCh+arg_0]
push	esi
mov	esi, [esp+0E0h+arg_8]
lea	ecx, [esp+0E0h+var_18]
lea	edx, [esp+0E0h+var_28]
push	edi
mov	[esp+0E4h+var_D0], eax
mov	[esp+0E4h+var_D4], 0CE534353h
mov	[esp+0E4h+var_BC], ecx
mov	[esp+0E4h+var_B8], 14h
mov	[esp+0E4h+var_B4], edx
mov	[esp+0E4h+var_B0], 10h
call	PK11_GetInternalSlot
push	eax
call	sub_10036730
push	0
mov	edi, eax
call	sub_1004F530
push	0		
mov	ebx, eax
lea	eax, [esp+0F0h+var_BC]
push	eax		
push	esi		
push	ebx		
push	0		
push	edi		
call	sub_1004DAA0
mov	ecx, [edi+34h]
push	ecx
call	PK11_FreeSlot
push	ebx
call	sub_10050550
call	PK11_GetInternalSlot
push	eax
call	sub_10036730
push	0
mov	edi, eax
call	sub_1004F560
push	0		
lea	edx, [esp+118h+var_B4]
push	edx		
push	esi		
mov	ebx, eax
push	ebx		
push	0		
push	edi		
call	sub_1004DAA0
mov	eax, [edi+34h]
add	esp, 48h
push	eax
call	PK11_FreeSlot
push	ebx
call	sub_10050550
mov	eax, [esp+0ECh+arg_14]
dec	eax
add	esp, 8
cmp	eax, 4		
ja	short loc_1004E338 
jmp	ds:off_1004E5C8[eax*4] 
			
mov	eax, 0CE53435Ah	
jmp	short loc_1004E33D
			
mov	eax, 0CE534352h	
jmp	short loc_1004E33D
			
mov	eax, 0CE53435Bh	
jmp	short loc_1004E33D
			
mov	eax, 0CE534351h	
jmp	short loc_1004E33D
			
mov	eax, 0CE534353h	
jmp	short loc_1004E33D
mov	eax, 0CE534355h	
			
mov	[esp+0E4h+var_C0], eax
mov	eax, [esp+0E4h+arg_18]
dec	eax
cmp	eax, 4		
ja	short loc_1004E378 
jmp	ds:off_1004E5DC[eax*4] 
			
mov	eax, 0CE53435Ah	
jmp	short loc_1004E37D
			
mov	eax, 0CE534352h	
jmp	short loc_1004E37D
			
mov	eax, 0CE53435Bh	
jmp	short loc_1004E37D
			
mov	eax, 0CE534351h	
jmp	short loc_1004E37D
			
mov	eax, 0CE534353h	
jmp	short loc_1004E37D
mov	eax, 0CE534355h	
			
mov	[esp+0E4h+var_C4], eax
mov	eax, [esp+0E4h+arg_1C]
dec	eax
cmp	eax, 4		
ja	short loc_1004E3B8 
jmp	ds:off_1004E5F0[eax*4] 
			
mov	eax, 0CE53435Ah	
jmp	short loc_1004E3BD
			
mov	eax, 0CE534352h	
jmp	short loc_1004E3BD
			
mov	eax, 0CE53435Bh	
jmp	short loc_1004E3BD
			
mov	eax, 0CE534351h	
jmp	short loc_1004E3BD
			
mov	eax, 0CE534353h	
jmp	short loc_1004E3BD
mov	eax, 0CE534355h	
			
mov	[esp+0E4h+var_CC], eax
mov	eax, [esp+0E4h+arg_20]
dec	eax
cmp	eax, 4		
ja	short loc_1004E3F8 
jmp	ds:off_1004E604[eax*4] 
			
mov	eax, 0CE53435Ah	
jmp	short loc_1004E3FD
			
mov	eax, 0CE534352h	
jmp	short loc_1004E3FD
			
mov	eax, 0CE53435Bh	
jmp	short loc_1004E3FD
			
mov	eax, 0CE534351h	
jmp	short loc_1004E3FD
			
mov	eax, 0CE534353h	
jmp	short loc_1004E3FD
mov	eax, 0CE534355h	
			
cmp	[esp+0E4h+arg_28], 0
mov	ecx, ds:dword_100A7DAC
mov	edx, ds:off_100A7DA8
mov	esi, ds:dword_100A7DA4
mov	edi, ds:off_100A7DA0
mov	[esp+0E4h+var_C8], eax
mov	[esp+0E4h+var_AC], 1
jz	short loc_1004E435
mov	[esp+0E4h+var_A8], edi
mov	[esp+0E4h+var_A4], esi
jmp	short loc_1004E43D
mov	[esp+0E4h+var_A8], edx
mov	[esp+0E4h+var_A4], ecx
cmp	[esp+0E4h+arg_24], 0
lea	eax, [esp+0E4h+var_D4]
mov	[esp+0E4h+var_9C], eax
mov	eax, [esp+0E4h+arg_C]
mov	ebx, [eax]
mov	eax, [eax+4]
mov	[esp+0E4h+var_8C], eax
mov	eax, [esp+0E4h+arg_10]
mov	[esp+0E4h+var_90], ebx
mov	ebx, [eax]
mov	eax, [eax+4]
mov	[esp+0E4h+var_80], eax
lea	eax, [esp+0E4h+var_18]
mov	[esp+0E4h+var_84], ebx
mov	[esp+0E4h+var_78], eax
lea	eax, [esp+0E4h+var_28]
lea	ebx, [esp+0E4h+var_C4]
mov	[esp+0E4h+var_6C], eax
mov	[esp+0E4h+var_54], ebx
lea	eax, [esp+0E4h+var_C0]
lea	ebx, [esp+0E4h+var_CC]
mov	[esp+0E4h+var_60], eax
mov	eax, 4
mov	[esp+0E4h+var_48], ebx
lea	ebx, [esp+0E4h+var_C8]
mov	[esp+0E4h+var_A0], 0
mov	[esp+0E4h+var_98], 4
mov	[esp+0E4h+var_94], 81h
mov	[esp+0E4h+var_88], 82h
mov	[esp+0E4h+var_7C], 0CE5363B4h
mov	[esp+0E4h+var_74], 14h
mov	[esp+0E4h+var_70], 0CE5363B5h
mov	[esp+0E4h+var_68], 10h
mov	[esp+0E4h+var_64], 0CE536358h
mov	[esp+0E4h+var_5C], eax
mov	[esp+0E4h+var_58], 0CE536359h
mov	[esp+0E4h+var_50], eax
mov	[esp+0E4h+var_4C], 0CE53635Ah
mov	[esp+0E4h+var_44], eax
mov	[esp+0E4h+var_40], 0CE53635Bh
mov	[esp+0E4h+var_3C], ebx
mov	[esp+0E4h+var_38], eax
mov	[esp+0E4h+var_34], 0CE536360h
jz	short loc_1004E561
mov	[esp+0E4h+var_30], edi
mov	[esp+0E4h+var_2C], esi
jmp	short loc_1004E56F
mov	[esp+0E4h+var_30], edx
mov	[esp+0E4h+var_2C], ecx
lea	ecx, [esp+0E4h+var_AC]
push	ecx
mov	ecx, [esp+0E8h+var_D0]
mov	eax, 0Bh
mov	edx, ebp
call	sub_1004C730
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1004E5AC
mov	eax, [ebp+30h]
test	eax, eax
jz	short loc_1004E5AA
mov	ecx, [esp+0E4h+var_D4]
push	0Bh
lea	edx, [esp+0E8h+var_AC]
push	edx
push	ecx
push	esi
push	eax
call	sub_1004F230
add	esp, 14h
mov	eax, esi
mov	ecx, [esp+0E4h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0D4h
retn
align 4
dd offset loc_1004E32A	
dd offset loc_1004E31C
dd offset loc_1004E331
dd offset loc_1004E323
dd offset loc_1004E36A	
dd offset loc_1004E35C
dd offset loc_1004E371
dd offset loc_1004E363
dd offset loc_1004E3AA	
dd offset loc_1004E39C
dd offset loc_1004E3B1
dd offset loc_1004E3A3
dd offset loc_1004E3EA	
dd offset loc_1004E3DC
dd offset loc_1004E3F1
dd offset loc_1004E3E3
align 10h
			
sub	esp, 18h
push	ebx
push	ebp
mov	ebp, [esp+20h+arg_0]
push	esi
xor	ebx, ebx
push	edi
push	ebp
mov	[esp+2Ch+var_18], 1
mov	[esp+2Ch+var_14], ebx
mov	[esp+2Ch+var_10], ebx
mov	[esp+2Ch+var_C], 3
mov	[esp+2Ch+var_8], ebx
mov	[esp+2Ch+var_4], ebx
call	sub_1004C610
mov	edx, [esp+2Ch+arg_8]
mov	esi, eax
mov	eax, [esp+2Ch+arg_4]
push	esi
push	eax
push	ebx
push	2
lea	ecx, [esp+3Ch+var_18]
push	ecx
push	edx
call	sub_1004F600
push	esi
mov	edi, eax
call	sub_1004C260
add	esp, 20h
cmp	edi, ebx
jz	short loc_1004E686
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 18h
retn
push	10h
push	ebx
call	sub_100504B0
mov	esi, eax
add	esp, 8
cmp	esi, ebx
jz	short loc_1004E67C
mov	eax, [esp+28h+arg_8]
push	ebp
mov	[esi], eax
call	sub_1004C2A0
mov	[esi+4], eax
mov	eax, [esp+2Ch+var_14]
movzx	ecx, byte ptr [eax]
push	eax
mov	[esi+8], ecx
call	sub_10050550
mov	edx, [esp+30h+var_8]
add	esp, 8
pop	edi
mov	[esi+0Ch], edx
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 18h
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1004E6F4
mov	eax, [esi+4]
push	eax
call	sub_1004C5B0
mov	ecx, [esi+0Ch]
push	ecx
call	sub_10050550
push	esi
call	sub_10050550
add	esp, 0Ch
pop	esi
retn
align 10h
			
push	esi
push	10h
push	0
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004E749
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi]
mov	[esi], eax
mov	ecx, [edi+4]
push	ecx
call	sub_1004C2A0
mov	[esi+4], eax
mov	edx, [edi+8]
mov	[esi+8], edx
mov	edi, [edi+0Ch]
add	esp, 4
test	edi, edi
jz	short loc_1004E746
push	0		
push	edi		
call	sub_10050D50
add	esp, 8
mov	[esi+0Ch], eax
mov	eax, esi
pop	edi
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	edx, [eax+4]
mov	ecx, [esp+arg_4]
cmp	edx, [ecx+4]
jnz	short loc_1004E76C
mov	eax, [eax]
cmp	eax, [ecx]
jnz	short loc_1004E76C
mov	eax, 1
retn
			
xor	eax, eax
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	short loc_1004E79F
mov	eax, [edi]
push	esi
mov	esi, edi
test	eax, eax
jz	short loc_1004E795
push	eax
call	sub_1004C260
mov	eax, [esi+4]
add	esi, 4
add	esp, 4
test	eax, eax
jnz	short loc_1004E782
push	edi
call	sub_10050550
add	esp, 4
pop	esi
pop	edi
retn
align 10h
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jz	short loc_1004E7DF
mov	eax, [edi]
push	esi
mov	esi, edi
test	eax, eax
jz	short loc_1004E7D5
push	eax
call	sub_1004C5B0
mov	eax, [esi+4]
add	esi, 4
add	esp, 4
test	eax, eax
jnz	short loc_1004E7C2
push	edi
call	sub_10050550
add	esp, 4
pop	esi
pop	edi
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
test	ebx, ebx
jz	short loc_1004E836
cmp	dword ptr [ebx], 0
push	esi
mov	esi, ebx
jz	short loc_1004E82C
push	edi
mov	edi, [esi]
test	edi, edi
jz	short loc_1004E823
mov	eax, [edi+4]
push	eax
call	sub_1004C5B0
mov	ecx, [edi+0Ch]
push	ecx
call	sub_10050550
push	edi
call	sub_10050550
add	esp, 0Ch
add	esi, 4
cmp	dword ptr [esi], 0
jnz	short loc_1004E802
pop	edi
push	ebx
call	sub_10050550
add	esp, 4
pop	esi
pop	ebx
retn
align 10h
			
push	ecx
push	ebx
push	ebp
push	esi
push	edi
lea	ebx, [eax+24h]
mov	[esp+14h+var_4], 3
xor	ebp, ebp
mov	esi, [ebx]
mov	[ebx-0Ch], ebp
cmp	esi, ebp
jz	short loc_1004E8AF
mov	eax, [esi]
cmp	eax, ebp
jz	short loc_1004E8A2
mov	eax, [eax+4]
mov	[eax+4], ebp
mov	ecx, [esi]
mov	edi, [ecx+4]
cmp	edi, ebp
jz	short loc_1004E88B
mov	edx, [edi+4]
push	edx
call	sub_1004C5B0
mov	eax, [edi+0Ch]
push	eax
call	sub_10050550
push	edi
call	sub_10050550
add	esp, 0Ch
mov	ecx, [esi]
mov	edx, [ecx]
push	edx
call	sub_10050840
mov	eax, [esi+4]
add	esi, 4
add	esp, 4
cmp	eax, ebp
jnz	short loc_1004E861
mov	eax, [ebx]
push	eax
call	sub_10050550
add	esp, 4
mov	[ebx], ebp
add	ebx, 4
dec	[esp+14h+var_4]
jnz	short loc_1004E852
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1004E8EB
mov	eax, [esi+4]
push	eax
call	ds:PR_Lock
add	esp, 4
mov	eax, esi
call	sub_1004E840
mov	ecx, [esi+4]
pop	esi
mov	[esp+arg_0], ecx
jmp	ds:PR_Unlock
pop	esi
retn
align 10h
push	esi
mov	esi, [esp+4+arg_0]
test	esi, esi
jz	short loc_1004E91A
mov	eax, esi
call	sub_1004E840
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1004E911
push	eax
call	ds:PR_DestroyLock
add	esp, 4
push	esi
call	sub_10050550
add	esp, 4
pop	esi
retn
align 10h
push	esi
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+4]
push	eax
call	ds:PR_Lock
mov	eax, [esp+0Ch+arg_4]
add	esp, 4
cmp	eax, 1
jz	short loc_1004E988
cmp	eax, 0CE534351h
jz	short loc_1004E973
cmp	eax, 0CE534353h
jz	short loc_1004E95E
mov	ecx, [edi+4]
push	ecx
xor	esi, esi
call	ds:PR_Unlock
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
mov	ecx, [edi+4]
mov	esi, [edi+10h]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
mov	ecx, [edi+4]
mov	esi, [edi+14h]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
mov	ecx, [edi+4]
mov	esi, [edi+0Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
xor	eax, eax
mov	[ecx], eax
test	edx, edx
jz	short loc_1004E9EF
cmp	[edx], eax
jz	short loc_1004E9EF
push	esi
lea	ecx, [ecx+0]
inc	dword ptr [ecx]
mov	esi, [ecx]
add	edx, 4
cmp	[edx], eax
jnz	short loc_1004E9B0
cmp	esi, 0Ah
jb	short loc_1004E9D0
mov	edx, [esp+4+arg_0]
mov	[edx], eax
mov	dword ptr [edi], 0FFFFFFFFh
mov	[ecx], eax
pop	esi
retn
lea	eax, ds:4[esi*4]
push	eax
push	0
call	sub_100504B0
add	esp, 8
mov	ecx, eax
neg	ecx
sbb	ecx, ecx
neg	ecx
dec	ecx
mov	[edi], ecx
pop	esi
retn
			
mov	[edi], eax
xor	eax, eax
retn
align 10h
			
sub	esp, 8
push	ebx
push	ebp
mov	ebp, [esp+10h+arg_0]
mov	eax, [ebp+4]
push	esi
push	eax
xor	ebx, ebx
call	sub_1004C610
mov	esi, eax
add	esp, 4
mov	[esp+14h+var_8], esi
test	esi, esi
jnz	short loc_1004EA36
mov	ecx, ds:dword_100A7DE4
push	ecx
call	sub_10050AF0
add	esp, 4
jmp	loc_1004EAF4
mov	edx, [ebp+4]
push	edx
call	PK11_NeedLogin
add	esp, 4
mov	[esp+14h+var_4], eax
test	eax, eax
jnz	short loc_1004EA5D
mov	eax, ds:dword_100A7DE4
push	eax
call	sub_10050AF0
add	esp, 4
jmp	loc_1004EAF4
call	sub_100507B0
mov	ebx, eax
test	ebx, ebx
jz	loc_1004EAF4
push	10h
push	ebx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004EAF0
mov	[esi], ebx
mov	ecx, [ebp+4]
push	ecx
call	sub_1004C5B0
lea	edx, [edi+edi*2]
add	edx, edx
add	edx, edx
push	edx
push	ebx
mov	[esi+4], ebp
call	sub_100504B0
add	esp, 0Ch
mov	[esi+8], eax
test	eax, eax
jz	short loc_1004EAF0
xor	eax, eax
test	edi, edi
jz	short loc_1004EACA
xor	ecx, ecx
jmp	short loc_1004EAB0
align 10h
			
mov	ebp, [esp+14h+arg_4]
mov	ebp, [ebp+eax*4+0]
mov	edx, [esi+8]
mov	[ecx+edx], ebp
inc	eax
add	ecx, 0Ch
cmp	eax, edi
jb	short loc_1004EAB0
mov	ebp, [esp+14h+arg_0]
mov	eax, [esp+14h+var_8]
mov	ecx, [esp+14h+var_4]
mov	edx, [esi+8]
push	eax
mov	eax, [ebp+0]
push	ecx
push	ebx
push	edi
push	edx
push	eax
call	sub_1004F600
mov	ecx, [esp+2Ch+arg_8]
add	esp, 18h
mov	[ecx], eax
test	eax, eax
jz	short loc_1004EB21
			
mov	esi, [esp+14h+var_8]
			
mov	ecx, [esp+14h+arg_8]
mov	dword ptr [ecx], 0FFFFFFFFh
test	esi, esi
jz	short loc_1004EB0B
push	esi
call	sub_1004C260
add	esp, 4
test	ebx, ebx
jz	short loc_1004EB18
push	ebx
call	sub_10050840
add	esp, 4
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
mov	edx, [esp+14h+var_8]
mov	[esi+0Ch], edi
push	edx
mov	dword ptr [ecx], 0
call	sub_1004C260
add	esp, 4
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
			
mov	eax, [esi]
push	ebx
push	edi
push	eax
xor	edi, edi
call	sub_1004C610
mov	ebx, eax
push	ebx
call	sub_100126F0
add	esp, 8
test	eax, eax
jnz	short loc_1004EB9B
push	ebx
call	sub_100127E0
add	esp, 4
test	eax, eax
jz	short loc_1004EB7E
mov	edi, 1
push	ebx
mov	[esi+8], edi
call	sub_1004C260
add	esp, 4
mov	eax, edi
pop	edi
pop	ebx
retn
cmp	[esi+8], edi
jz	short loc_1004EBA0
mov	eax, esi
call	sub_1004E840
push	ebx
mov	[esi+8], edi
call	sub_1004C260
add	esp, 4
mov	eax, edi
pop	edi
pop	ebx
retn
mov	edi, 1
push	ebx
call	sub_1004C260
add	esp, 4
mov	eax, edi
pop	edi
pop	ebx
retn
align 10h
			
push	edi
test	ecx, ecx
jnz	short loc_1004EBC9
push	eax
push	offset dword_100A7D20
push	edx
lea	edi, [ecx+0Ah]
call	sub_1004EA00
add	esp, 0Ch
pop	edi
retn
cmp	ecx, 1
jnz	short loc_1004EBE2
push	eax
push	offset dword_100A7D4C
push	edx
lea	edi, [ecx+0Ah]
call	sub_1004EA00
add	esp, 0Ch
pop	edi
retn
cmp	ecx, 2
jnz	short loc_1004EBFB
push	eax
push	offset dword_100A7D7C
push	edx
lea	edi, [ecx+5]
call	sub_1004EA00
add	esp, 0Ch
pop	edi
retn
xor	eax, eax
pop	edi
retn
align 10h
sub	esp, 0Ch
push	esi
push	edi
mov	esi, eax
call	sub_1004EB40
test	eax, eax
jz	loc_1004ED32
cmp	dword ptr [esi+ebx*4+18h], 0
jnz	loc_1004ED32
cmp	dword ptr [esi+ebx*4+0Ch], 0
lea	edi, [esi+ebx*4+0Ch]
jz	loc_1004ED32
mov	ecx, [esp+14h+arg_0]
mov	edx, [esi]
push	ebp
lea	eax, [esp+18h+var_C]
push	eax
push	0Ah
push	3
push	ecx
push	0
push	edx
call	sub_1004CFD0
mov	ebp, eax
mov	eax, [esp+30h+var_C]
add	esp, 18h
mov	[esp+18h+var_4], ebp
test	eax, eax
jnz	loc_1004ED2B
push	edi
lea	edi, [esp+1Ch+var_C]
lea	ecx, [esp+1Ch+var_8]
mov	edx, ebp
call	sub_1004E9A0
mov	[esi+ebx*4+24h], eax
mov	eax, [esp+1Ch+var_C]
add	esp, 4
test	eax, eax
jnz	loc_1004ED2B
xor	edi, edi
cmp	[esp+18h+var_8], edi
jbe	short loc_1004ECB4
jmp	short loc_1004EC90
align 10h
			
mov	edx, [ebp+edi*4+0]
lea	eax, [esp+18h+var_C]
mov	ecx, ebx
call	sub_1004EBB0
mov	ecx, [esi+ebx*4+24h]
mov	[ecx+edi*4], eax
cmp	[esp+18h+var_C], 0
jnz	short loc_1004ECD0
inc	edi
cmp	edi, [esp+18h+var_8]
jb	short loc_1004EC90
push	ebp
call	sub_10050550
mov	eax, [esp+1Ch+var_C]
add	esp, 4
pop	ebp
pop	edi
mov	dword ptr [esi+ebx*4+18h], 1
pop	esi
add	esp, 0Ch
retn
xor	ebp, ebp
test	edi, edi
jz	short loc_1004ED00
mov	edx, [esi+ebx*4+24h]
mov	eax, [edx+ebp*4]
mov	ecx, [eax+4]
mov	edx, [ecx+4]
push	edx
call	sub_1004C2A0
mov	eax, [esi+ebx*4+24h]
mov	ecx, [eax+ebp*4]
mov	edx, [ecx]
push	edx
call	sub_10050840
inc	ebp
add	esp, 8
cmp	ebp, edi
jb	short loc_1004ECD6
mov	eax, [esi+ebx*4+24h]
push	eax
call	sub_10050550
mov	ecx, [esp+1Ch+var_4]
push	ecx
mov	dword ptr [esi+ebx*4+24h], 0
call	sub_1004E7F0
mov	eax, [esp+20h+var_C]
add	esp, 8
mov	dword ptr [esi+ebx*4+18h], 1
			
pop	ebp
pop	edi
pop	esi
add	esp, 0Ch
retn
			
pop	edi
xor	eax, eax
pop	esi
add	esp, 0Ch
retn
align 10h
sub	esp, 18h
push	esi
push	edi
mov	edi, [esp+20h+arg_0]
xor	esi, esi
mov	[esp+20h+var_8], 8
mov	[esp+20h+var_18], esi
mov	[esp+20h+var_14], esi
test	edi, edi
jnz	short loc_1004ED67
pop	edi
xor	eax, eax
pop	esi
add	esp, 18h
retn
call	sub_100507B0
mov	[esp+20h+var_4], eax
test	eax, eax
jz	short loc_1004ED5F
push	ebx
push	ebp
push	20h
push	eax
call	sub_100504B0
add	esp, 8
mov	[esp+28h+Src], eax
test	eax, eax
jz	loc_1004EF26
cmp	[esp+28h+arg_C], esi
jnz	short loc_1004ED9B
mov	[esp+28h+arg_C], 0FFFFFFFFh
mov	ebp, [edi]
test	ebp, ebp
jz	loc_1004EF0D
cmp	esi, [esp+28h+arg_C]
jnb	loc_1004EE79
cmp	[esp+28h+arg_8], 0
mov	[esp+28h+var_10], 0
jbe	short loc_1004EE1E
mov	esi, [esp+28h+arg_4]
add	esi, 4
mov	edx, [ebp+0Ch]
xor	eax, eax
test	edx, edx
jz	short loc_1004EE1E
mov	edi, [ebp+8]
mov	ebx, [esi-4]
mov	ecx, edi
cmp	ebx, [ecx]
jz	short loc_1004EDE4
inc	eax
add	ecx, 0Ch
cmp	eax, edx
jb	short loc_1004EDD6
jmp	short loc_1004EE1E
lea	eax, [eax+eax*2]
lea	eax, [edi+eax*4]
test	eax, eax
jz	short loc_1004EE1E
mov	ecx, [eax+8]
cmp	[esi+4], ecx
jnz	short loc_1004EE1E
mov	edx, [esi]
push	0
push	ecx
mov	ecx, [eax+4]
push	ecx
push	edx
call	sub_10050BE0
add	esp, 10h
test	eax, eax
jz	short loc_1004EE1E
mov	eax, [esp+28h+var_10]
inc	eax
add	esi, 0Ch
mov	[esp+28h+var_10], eax
cmp	eax, [esp+28h+arg_8]
jb	short loc_1004EDC5
			
mov	eax, [esp+28h+arg_8]
mov	esi, [esp+28h+var_18]
cmp	[esp+28h+var_10], eax
jnz	short loc_1004EE63
mov	ecx, [esp+28h+Src]
mov	eax, [esp+28h+var_8]
mov	[ecx+esi*4], ebp
inc	esi
mov	[esp+28h+var_18], esi
cmp	esi, eax
jnz	short loc_1004EE63
add	eax, eax
lea	edx, ds:0[eax*4]
push	edx		
push	ecx		
mov	[esp+30h+var_8], eax
call	sub_100505D0
add	esp, 8
mov	[esp+28h+Src], eax
test	eax, eax
jz	loc_1004EF26
			
mov	eax, [esp+28h+arg_0]
mov	ebp, [eax+4]
add	eax, 4
mov	[esp+28h+arg_0], eax
test	ebp, ebp
jnz	loc_1004EDA5
test	esi, esi
jz	loc_1004EF0D
lea	eax, ds:4[esi*4]
push	eax
push	0
call	sub_100504B0
add	esp, 8
mov	[esp+28h+var_14], eax
test	eax, eax
jz	loc_1004EF26
xor	ebp, ebp
test	esi, esi
jle	short loc_1004EF0D
mov	ebx, eax
mov	eax, [esp+28h+Src]
sub	eax, ebx
mov	[esp+28h+arg_0], eax
jmp	short loc_1004EEB7
mov	eax, [esp+28h+arg_0]
mov	ecx, [eax+ebx]
mov	edi, [ecx+4]
push	10h
push	0
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004EEFD
mov	edx, [edi]
mov	[esi], edx
mov	eax, [edi+4]
push	eax
call	sub_1004C2A0
mov	[esi+4], eax
mov	ecx, [edi+8]
mov	[esi+8], ecx
mov	edi, [edi+0Ch]
add	esp, 4
test	edi, edi
jz	short loc_1004EEFD
push	0		
push	edi		
call	sub_10050D50
add	esp, 8
mov	[esi+0Ch], eax
			
mov	[ebx], esi
test	esi, esi
jz	short loc_1004EF26
inc	ebp
add	ebx, 4
cmp	ebp, [esp+28h+var_18]
jl	short loc_1004EEB3
			
mov	ecx, [esp+28h+var_4]
push	ecx
call	sub_10050840
mov	eax, [esp+2Ch+var_14]
add	esp, 4
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 18h
retn
			
mov	edx, [esp+28h+var_14]
push	edx
call	sub_1004E7F0
mov	eax, [esp+2Ch+var_4]
push	eax
call	sub_10050840
add	esp, 8
pop	ebp
pop	ebx
pop	edi
xor	eax, eax
pop	esi
add	esp, 18h
retn
align 10h
push	ecx
push	ebx
push	ebp
push	esi
push	edi
mov	edi, [esp+14h+arg_0]
mov	eax, [edi]
push	eax
or	ebp, 0FFFFFFFFh
mov	[esp+18h+var_4], 0
call	sub_1004C610
mov	esi, eax
push	esi
call	sub_1004C330
push	esi
mov	ebx, eax
call	sub_1004C260
add	esp, 0Ch
test	ebx, ebx
jnz	short loc_1004EF87
xor	ebp, ebp
jmp	short loc_1004F002
mov	esi, [esp+14h+arg_4]
cmp	esi, 1
jz	short loc_1004EFAE
cmp	esi, 0CE534351h
jz	short loc_1004EFA7
cmp	esi, 0CE534353h
jnz	short loc_1004F002
mov	ebx, 1
jmp	short loc_1004EFB0
mov	ebx, 2
jmp	short loc_1004EFB0
xor	ebx, ebx
			
mov	ecx, [edi+4]
push	ecx
call	ds:PR_Lock
add	esp, 4
cmp	dword ptr [edi+ebx*4+0Ch], 0
jz	short loc_1004EFF5
push	esi
mov	eax, edi
call	sub_1004EC00
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_1004EFF5
mov	edx, [esp+14h+arg_10]
mov	eax, [esp+14h+arg_C]
mov	ecx, [esp+14h+arg_8]
push	edx
mov	edx, [edi+ebx*4+24h]
push	eax
push	ecx
push	edx
call	sub_1004ED40
add	esp, 10h
mov	[esp+14h+var_4], eax
			
mov	eax, [edi+4]
push	eax
call	ds:PR_Unlock
add	esp, 4
			
mov	eax, [esp+14h+arg_14]
test	eax, eax
jz	short loc_1004F00C
mov	[eax], ebp
mov	eax, [esp+14h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
align 10h
sub	esp, 10h
push	ebx
push	ebp
mov	ebp, [esp+18h+arg_0]
mov	eax, [ebp+0]
push	esi
push	edi
xor	ebx, ebx
push	eax
mov	[esp+24h+var_10], ebx
mov	[esp+24h+var_8], ebx
call	sub_1004C610
mov	esi, eax
push	esi
call	sub_1004C330
push	esi
mov	edi, eax
call	sub_1004C260
add	esp, 0Ch
cmp	edi, ebx
jz	loc_1004F0F6
mov	ecx, [ebp+4]
push	ecx
call	ds:PR_Lock
mov	eax, [esp+24h+arg_C]
add	esp, 4
cmp	eax, 1
jz	short loc_1004F089
cmp	eax, 0CE534351h
jz	short loc_1004F082
cmp	eax, 0CE534353h
jnz	short loc_1004F0CF
lea	edi, [ebx+1]
jmp	short loc_1004F08B
mov	edi, 2
jmp	short loc_1004F08B
xor	edi, edi
			
cmp	[ebp+edi*4+0Ch], ebx
jz	short loc_1004F0CF
cmp	[ebp+edi*4+18h], ebx
jz	short loc_1004F0CF
mov	esi, ebp
call	sub_1004EB40
test	eax, eax
jz	short loc_1004F0CF
mov	ecx, [ebp+edi*4+24h]
cmp	ecx, ebx
jz	short loc_1004F0CF
mov	eax, [ecx]
cmp	eax, ebx
jz	short loc_1004F0CF
mov	esi, [esp+20h+arg_8]
mov	edx, [esi+4]
mov	eax, [eax+4]
cmp	[eax+4], edx
jnz	short loc_1004F0C5
mov	eax, [eax]
cmp	eax, [esi]
jz	short loc_1004F101
mov	eax, [ecx+4]
add	ecx, 4
cmp	eax, ebx
jnz	short loc_1004F0B7
			
mov	edx, [esp+20h+arg_0]
mov	eax, [edx+4]
push	eax
call	ds:PR_Unlock
mov	eax, [esp+24h+var_8]
add	esp, 4
test	eax, eax
jz	short loc_1004F0F6
mov	ecx, [esp+20h+var_10]
push	eax
push	ecx
call	sub_100503A0
add	esp, 8
			
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
mov	ebx, [ecx]
mov	[esp+20h+var_C], ebx
test	ebx, ebx
jz	short loc_1004F0CF
mov	eax, [esp+20h+arg_4]
test	eax, eax
jz	short loc_1004F124
push	eax
mov	[esp+24h+var_10], eax
call	sub_100508A0
add	esp, 4
mov	[esp+20h+var_8], eax
cmp	[esp+20h+arg_14], 0
mov	[esp+20h+var_4], 0
jbe	loc_1004F1F4
mov	esi, [esp+20h+arg_10]
add	esi, 8
mov	edi, edi
mov	ecx, [ebx+0Ch]
xor	edi, edi
test	ecx, ecx
jz	loc_1004F1CF
mov	ebp, [ebx+8]
mov	edx, [esi-8]
mov	eax, ebp
cmp	edx, [eax]
jz	short loc_1004F163
inc	edi
add	eax, 0Ch
cmp	edi, ecx
jb	short loc_1004F155
jmp	short loc_1004F1CF
lea	eax, [edi+edi*2]
add	eax, eax
add	eax, eax
cmp	dword ptr [eax+ebp+8], 0
lea	ebx, [eax+ebp]
jz	short loc_1004F1CB
cmp	dword ptr [eax+ebp+8], 0FFFFFFFFh
jz	short loc_1004F1CB
mov	eax, [esi]
test	eax, eax
jz	short loc_1004F196
cmp	dword ptr [esi-4], 0
jz	loc_1004F0CF
cmp	eax, [ebx+8]
jb	loc_1004F0CF
jmp	short loc_1004F1B2
mov	edx, [ebx+8]
mov	eax, [esp+20h+var_10]
push	edx
push	eax
call	sub_100504B0
add	esp, 8
mov	[esi-4], eax
test	eax, eax
jz	loc_1004F0CF
mov	ecx, [ebx+8]
mov	edx, [ebx+4]
mov	eax, [esi-4]
push	ecx		
push	edx		
push	eax		
call	j_memcpy
mov	ecx, [ebx+8]
add	esp, 0Ch
mov	[esi], ecx
			
mov	ebx, [esp+20h+var_C]
			
cmp	edi, [ebx+0Ch]
jnz	short loc_1004F1DA
mov	dword ptr [esi], 0FFFFFFFFh
mov	eax, [esp+20h+var_4]
inc	eax
add	esi, 0Ch
mov	[esp+20h+var_4], eax
cmp	eax, [esp+20h+arg_14]
jb	loc_1004F140
mov	ebp, [esp+20h+arg_0]
mov	edx, [ebp+4]
push	edx
call	ds:PR_Unlock
mov	eax, [esp+24h+var_8]
add	esp, 4
test	eax, eax
jz	short loc_1004F217
push	eax
mov	eax, [esp+24h+var_10]
push	eax
call	sub_100503C0
add	esp, 8
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 10h
			
sub	esp, 8
push	ebx
push	ebp
push	esi
mov	esi, [esp+14h+arg_0]
mov	eax, [esi]
push	edi
xor	ebp, ebp
push	eax
mov	[esp+1Ch+var_4], ebp
call	sub_1004C610
mov	edi, eax
push	edi
call	sub_1004C330
push	edi
mov	ebx, eax
call	sub_1004C260
add	esp, 0Ch
cmp	ebx, ebp
jz	short loc_1004F291
mov	ecx, [esi+4]
push	ecx
call	ds:PR_Lock
mov	eax, [esp+1Ch+arg_8]
add	esp, 4
cmp	eax, 1
jz	short loc_1004F2A9
cmp	eax, 0CE534351h
jz	short loc_1004F2A2
cmp	eax, 0CE534353h
jz	short loc_1004F29B
mov	edx, [esi+4]
push	edx
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
mov	ebx, 1
jmp	short loc_1004F2AB
mov	ebx, 2
jmp	short loc_1004F2AB
xor	ebx, ebx
			
cmp	[esi+ebx*4+0Ch], ebp
jz	short loc_1004F2C0
cmp	[esi+ebx*4+18h], ebp
jz	short loc_1004F2C0
call	sub_1004EB40
test	eax, eax
jnz	short loc_1004F2D7
			
mov	eax, [esi+4]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 8
retn
mov	edi, [esi+ebx*4+24h]
test	edi, edi
jz	loc_1004F367
mov	eax, [edi]
test	eax, eax
jz	short loc_1004F304
mov	eax, [eax+4]
mov	edx, [eax+4]
mov	ecx, [esp+18h+arg_4]
cmp	edx, [ecx+4]
jnz	short loc_1004F2FE
mov	eax, [eax]
cmp	eax, [ecx]
jz	short loc_1004F31C
inc	ebp
add	edi, 4
jnz	short loc_1004F2E3
test	ebp, ebp
jz	short loc_1004F367
mov	eax, [esi+ebx*4+24h]
lea	ecx, ds:8[ebp*4]
push	ecx		
push	eax		
call	sub_100505D0
jmp	short loc_1004F370
mov	ecx, [edi]
mov	edx, [ecx+4]
mov	dword ptr [edx+4], 0
mov	eax, [edi]
mov	eax, [eax+4]
mov	[esp+18h+var_8], eax
test	eax, eax
jz	short loc_1004F358
mov	ecx, [eax+4]
push	ecx
call	sub_1004C5B0
mov	edx, [esp+1Ch+var_8]
mov	eax, [edx+0Ch]
push	eax
call	sub_10050550
mov	ecx, [esp+20h+var_8]
push	ecx
call	sub_10050550
add	esp, 0Ch
mov	edx, [edi]
mov	eax, [edx]
push	eax
call	sub_10050840
add	esp, 4
jmp	short loc_1004F377
			
push	8
push	0
call	sub_100504B0
mov	[esi+ebx*4+24h], eax
add	esp, 8
cmp	dword ptr [esi+ebx*4+24h], 0
jz	short loc_1004F3A5
mov	edx, [esp+18h+arg_4]
push	edx
call	sub_1004E700
mov	edx, eax
add	esp, 4
lea	eax, [esp+18h+var_4]
mov	ecx, ebx
call	sub_1004EBB0
mov	ecx, [esi+ebx*4+24h]
mov	edi, [esp+18h+var_4]
mov	[ecx+ebp*4], eax
jmp	short loc_1004F3A8
or	edi, 0FFFFFFFFh
mov	edx, [esi+4]
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
sub	esp, 8
push	ebx
push	ebp
push	esi
mov	esi, [esp+14h+arg_0]
mov	eax, [esi]
push	edi
push	eax
xor	ebp, ebp
call	sub_1004C610
mov	edi, eax
push	edi
call	sub_1004C330
push	edi
mov	ebx, eax
call	sub_1004C260
add	esp, 0Ch
test	ebx, ebx
jz	loc_1004F51D
mov	ecx, [esi+4]
push	ecx
call	ds:PR_Lock
lea	ebx, [esi+24h]
add	esp, 4
mov	[esp+18h+var_8], ebp
mov	[esp+18h+var_4], ebx
jmp	short loc_1004F410
align 10h
			
cmp	dword ptr [ebx-18h], 0
jz	loc_1004F4CE
cmp	dword ptr [ebx-0Ch], 0
jz	loc_1004F4CE
call	sub_1004EB40
test	eax, eax
jz	loc_1004F4CE
mov	edi, [ebx]
test	edi, edi
jz	loc_1004F4CE
cmp	dword ptr [edi], 0
jz	loc_1004F4CA
mov	edx, [esp+18h+arg_4]
mov	ecx, [edx+4]
jmp	short loc_1004F450
align 10h
			
mov	eax, [edi]
mov	eax, [eax+4]
cmp	[eax+4], ecx
jnz	short loc_1004F460
mov	eax, [eax]
cmp	eax, [edx]
jz	short loc_1004F46A
add	edi, 4
cmp	dword ptr [edi], 0
jnz	short loc_1004F450
jmp	short loc_1004F4CA
cmp	dword ptr [edi+4], 0
mov	ebp, edi
jz	short loc_1004F47B
add	edi, 4
cmp	dword ptr [edi+4], 0
jnz	short loc_1004F472
mov	ecx, [ebp+0]
mov	edx, [ecx+4]
mov	dword ptr [edx+4], 0
mov	eax, [ebp+0]
mov	ebx, [eax+4]
test	ebx, ebx
jz	short loc_1004F4AD
mov	ecx, [ebx+4]
push	ecx
call	sub_1004C5B0
mov	edx, [ebx+0Ch]
push	edx
call	sub_10050550
push	ebx
call	sub_10050550
add	esp, 0Ch
mov	eax, [ebp+0]
mov	ecx, [eax]
push	ecx
call	sub_10050840
mov	edx, [edi]
mov	ebx, [esp+1Ch+var_4]
mov	[ebp+0], edx
add	esp, 4
mov	dword ptr [edi], 0
			
test	ebp, ebp
jnz	short loc_1004F4E9
			
mov	eax, [esp+18h+var_8]
inc	eax
add	ebx, 4
mov	[esp+18h+var_8], eax
mov	[esp+18h+var_4], ebx
cmp	eax, 3
jb	loc_1004F410
jmp	short loc_1004F510
mov	edi, [esp+18h+var_8]
cmp	edi, 3
jnb	short loc_1004F510
mov	eax, [esi+edi*4+24h]
test	eax, eax
jz	short loc_1004F510
cmp	dword ptr [eax], 0
jnz	short loc_1004F510
push	eax
call	sub_10050550
add	esp, 4
mov	dword ptr [esi+edi*4+24h], 0
			
mov	eax, [esi+4]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 8
retn
align 10h
mov	eax, [esp+arg_0]
push	0Ch
push	eax
call	sub_100504B0
xor	ecx, ecx
add	esp, 8
cmp	eax, ecx
jz	short locret_1004F551
mov	dword ptr [eax], 220h
mov	[eax+4], ecx
mov	[eax+8], ecx
retn
align 10h
mov	eax, [esp+arg_0]
push	0Ch
push	eax
call	sub_100504B0
xor	ecx, ecx
add	esp, 8
cmp	eax, ecx
jz	short locret_1004F581
mov	dword ptr [eax], 210h
mov	[eax+4], ecx
mov	[eax+8], ecx
retn
align 10h
push	esi
push	30h
push	0
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1004F5D1
call	ds:PR_NewLock
mov	[esi+4], eax
test	eax, eax
jnz	short loc_1004F5D5
mov	eax, esi
call	sub_1004E840
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1004F5C8
push	eax
call	ds:PR_DestroyLock
add	esp, 4
push	esi
call	sub_10050550
add	esp, 4
xor	eax, eax
pop	esi
retn
mov	eax, [esp+4+arg_4]
mov	ecx, [esp+4+arg_8]
mov	edx, [esp+4+arg_C]
mov	[esi+0Ch], eax
mov	eax, [esp+4+arg_0]
mov	[esi], eax
mov	[esi+10h], ecx
mov	[esi+14h], edx
mov	eax, esi
pop	esi
retn
align 10h
			
sub	esp, 10h
mov	eax, [esp+10h+arg_14]
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
push	eax
mov	[esp+24h+var_10], ebp
xor	esi, esi
call	PK11_GetSymKeyUserData
mov	edi, [esp+24h+arg_10]
mov	ecx, [edi+4]
mov	[esp+24h+var_8], eax
mov	eax, [esp+24h+arg_C]
add	esp, 4
mov	[esp+20h+var_C], ecx
cmp	eax, ebp
jz	short loc_1004F648
push	eax
call	sub_100508A0
add	esp, 4
mov	[esp+20h+var_10], eax
cmp	eax, ebp
jz	loc_1004F7C2
push	edi
call	sub_1004C2E0
mov	edi, [esp+24h+arg_4]
mov	ebx, [esp+24h+arg_8]
lea	eax, [edi+8]
add	esp, 4
mov	[esp+20h+var_4], eax
cmp	[eax], ebp
jnz	loc_1004F71F
mov	edx, [esp+20h+arg_0]
mov	eax, [esp+20h+var_C]
mov	ecx, [esp+20h+var_8]
push	ebx
push	edi
push	edx
mov	edx, [ecx+62h]
push	eax
call	edx
add	esp, 10h
cmp	eax, ebp
jz	short loc_1004F6B2
cmp	eax, 12h
jz	short loc_1004F6B2
cmp	eax, 11h
jz	short loc_1004F6B2
mov	eax, [esp+20h+arg_10]
push	eax
call	sub_1004C300
mov	ecx, ds:dword_100A7E60
push	ecx
call	sub_10050AF0
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
			
cmp	ebx, ebp
jbe	short loc_1004F71A
mov	edi, [esp+20h+var_4]
lea	ebx, [ebx+0]
mov	eax, [edi]
test	eax, eax
jz	short loc_1004F709
cmp	eax, 0FFFFFFFFh
jz	short loc_1004F709
mov	ecx, [edi-8]
cmp	ecx, 3
jz	short loc_1004F6DB
cmp	ecx, 0CE534352h
jnz	short loc_1004F6DC
inc	eax
mov	edx, [esp+20h+arg_C]
push	eax
push	edx
call	sub_100504B0
add	esp, 8
mov	[edi-4], eax
test	eax, eax
jnz	short loc_1004F70E
mov	eax, [esp+20h+arg_10]
push	eax
call	sub_1004C300
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
			
mov	[edi-4], esi
mov	[edi], esi
inc	ebp
add	edi, 0Ch
cmp	ebp, ebx
jb	short loc_1004F6C0
mov	edi, [esp+20h+arg_4]
mov	esi, 1
mov	ecx, [esp+20h+arg_0]
mov	edx, [esp+20h+var_C]
mov	eax, [esp+20h+var_8]
push	ebx
push	edi
push	ecx
mov	ecx, [eax+62h]
push	edx
call	ecx
mov	edx, [esp+30h+arg_10]
push	edx
mov	edi, eax
call	sub_1004C300
add	esp, 14h
test	edi, edi
jz	short loc_1004F761
cmp	edi, 12h
jz	short loc_1004F761
cmp	edi, 11h
jz	short loc_1004F761
mov	eax, ds:dword_100A7E60
push	eax
call	sub_10050AF0
add	esp, 4
jmp	short loc_1004F77F
			
test	esi, esi
jz	short loc_1004F7CD
mov	eax, [esp+20h+arg_C]
test	eax, eax
jz	short loc_1004F7CD
mov	ecx, [esp+20h+var_10]
push	ecx
push	eax
call	sub_100503C0
add	esp, 8
test	eax, eax
jz	short loc_1004F7CD
test	esi, esi
jz	short loc_1004F7C2
mov	eax, [esp+20h+arg_C]
test	eax, eax
jz	short loc_1004F7A4
mov	edx, [esp+20h+var_10]
push	edx
push	eax
call	sub_100503A0
add	esp, 8
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
test	ebp, ebp
jz	short loc_1004F7C2
mov	esi, [esp+20h+arg_4]
add	esi, 4
mov	edi, ebp
mov	eax, [esi]
push	eax
call	sub_10050550
add	esp, 4
add	esi, 0Ch
dec	edi
jnz	short loc_1004F7B1
			
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
add	esp, 10h
retn
			
cmp	ebx, 1
jbe	short loc_1004F81D
cmp	edi, 12h
jz	short loc_1004F7DC
cmp	edi, 11h
jnz	short loc_1004F81D
test	ebx, ebx
jz	short loc_1004F81D
mov	esi, [esp+20h+var_4]
mov	eax, [esi]
test	eax, eax
jz	short loc_1004F7EF
cmp	eax, 0FFFFFFFFh
jnz	short loc_1004F817
mov	ecx, [esp+20h+arg_14]
mov	edx, [esp+20h+arg_10]
mov	eax, [esp+20h+arg_C]
push	ecx
push	edx
mov	edx, [esp+28h+arg_0]
push	eax
push	1
lea	ecx, [esi-8]
push	ecx
push	edx
mov	dword ptr [esi], 0
call	sub_1004F600
add	esp, 18h
add	esi, 0Ch
dec	ebx
jnz	short loc_1004F7E4
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 10h
retn
align 10h
mov	eax, [esp+arg_10]
push	esi
push	edi
push	eax
call	PK11_GetSymKeyUserData
mov	esi, [esp+0Ch+arg_C]
push	esi
mov	edi, eax
call	sub_1004C2E0
mov	ecx, [esp+10h+arg_8]
mov	edx, [esp+10h+arg_4]
mov	eax, [esp+10h+arg_0]
push	ecx
mov	ecx, [esi+4]
push	edx
mov	edx, [edi+66h]
push	eax
push	ecx
call	edx
push	esi
mov	edi, eax
call	sub_1004C300
add	esp, 1Ch
neg	edi
sbb	eax, eax
pop	edi
pop	esi
retn
align 10h
mov	edx, [esp+arg_4]
xor	eax, eax
push	esi
test	edx, edx
jz	short loc_1004F89E
mov	esi, [esp+4+arg_0]
mov	ecx, esi
cmp	dword ptr [ecx], 1
jz	short loc_1004F8A2
inc	eax
add	ecx, 0Ch
cmp	eax, edx
jb	short loc_1004F891
xor	eax, eax
pop	esi
retn
lea	eax, [eax+eax*2]
mov	ecx, [esi+eax*4+4]
xor	eax, eax
cmp	byte ptr [ecx],	1
pop	esi
setz	al
retn
align 10h
			
sub	esp, 6Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+6Ch+var_4], eax
mov	eax, [esp+6Ch+arg_4]
mov	ecx, [esp+6Ch+arg_8]
mov	edx, [esp+6Ch+arg_14]
push	ebx
mov	ebx, [esp+70h+arg_0]
push	ebp
mov	ebp, [esp+74h+arg_C]
mov	[esp+74h+var_58], eax
mov	eax, [esp+74h+arg_1C]
push	esi
mov	esi, [esp+78h+arg_18]
mov	[esp+78h+var_6C], eax
mov	eax, [esp+78h+arg_20]
push	edi
mov	[esp+7Ch+var_68], ecx
mov	ecx, [esp+7Ch+arg_10]
xor	edi, edi
mov	[esp+7Ch+var_64], eax
mov	[esp+7Ch+var_60], ebp
mov	[esp+7Ch+var_50], ecx
mov	[esp+7Ch+var_5C], edx
mov	[esp+7Ch+var_54], esi
lea	eax, [esp+7Ch+var_4C]
cmp	ebp, edi
jz	short loc_1004F946
mov	[esp+7Ch+var_4C], 80h
mov	[esp+7Ch+var_48], edi
mov	[esp+7Ch+var_44], edi
lea	eax, [esp+7Ch+var_40]
cmp	ecx, edi
jz	short loc_1004F959
mov	dword ptr [eax], 102h
mov	[eax+4], edi
mov	[eax+8], edi
add	eax, 0Ch
cmp	edx, edi
jz	short loc_1004F96C
mov	dword ptr [eax], 11h
mov	[eax+4], edi
mov	[eax+8], edi
add	eax, 0Ch
cmp	esi, edi
jz	short loc_1004F97F
mov	dword ptr [eax], 81h
mov	[eax+4], edi
mov	[eax+8], edi
add	eax, 0Ch
cmp	[esp+7Ch+var_6C], edi
jz	short loc_1004F994
mov	dword ptr [eax], 82h
mov	[eax+4], edi
mov	[eax+8], edi
add	eax, 0Ch
cmp	[esp+7Ch+var_64], edi
jz	short loc_1004F9A9
mov	dword ptr [eax], 101h
mov	[eax+4], edi
mov	[eax+8], edi
add	eax, 0Ch
lea	ecx, [esp+7Ch+var_4C]
sub	eax, ecx
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
add	esi, edx
jz	loc_1004FB71
mov	eax, [esp+7Ch+var_68]
mov	ecx, [ebx+4]
push	esi
lea	edx, [esp+80h+var_4C]
push	edx
push	1
push	ebx
push	eax
push	ecx
call	sub_1004DA80
add	esp, 18h
test	eax, eax
jz	loc_1004FA71
mov	ebp, [esp+7Ch+var_58]
cmp	ebp, edi
jnz	short loc_1004FA27
mov	edx, [ebx+4]
push	edx
call	PK11_NeedLogin
mov	ebp, eax
add	esp, 4
cmp	ebp, edi
jnz	short loc_1004FA27
mov	eax, ds:dword_100A7E34
push	eax
call	sub_10050AF0
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+6Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 6Ch
retn
			
mov	ecx, [ebx+4]
push	ecx
call	sub_1004C610
mov	edx, [esp+80h+var_68]
mov	ecx, [ebx]
mov	edi, eax
push	edi
push	ebp
push	edx
push	esi
lea	eax, [esp+90h+var_4C]
push	eax
push	ecx
call	sub_1004F600
push	edi
mov	esi, eax
call	sub_1004C260
add	esp, 20h
test	esi, esi
jz	short loc_1004FA6B
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+6Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 6Ch
retn
mov	ebp, [esp+7Ch+var_60]
xor	edi, edi
xor	eax, eax
cmp	ebp, edi
jz	short loc_1004FA97
mov	eax, [esp+7Ch+var_48]
cmp	eax, edi
jnz	short loc_1004FA86
mov	eax, 1
jmp	short loc_1004FA8F
xor	edx, edx
cmp	[eax], edi
setz	dl
mov	eax, edx
mov	[ebp+0], eax
mov	eax, 1
mov	esi, [esp+7Ch+var_50]
cmp	esi, edi
jz	short loc_1004FABF
lea	ecx, [eax+eax*2]
add	ecx, ecx
add	ecx, ecx
mov	edx, [esp+ecx+7Ch+var_44]
cmp	edx, edi
jle	short loc_1004FAB9
mov	ecx, [esp+ecx+7Ch+var_48]
mov	[esi], ecx
mov	[esi+4], edx
jmp	short loc_1004FABE
mov	[esi], edi
mov	[esi+4], edi
inc	eax
mov	esi, [esp+7Ch+var_5C]
cmp	esi, edi
jz	short loc_1004FAE7
lea	ecx, [eax+eax*2]
add	ecx, ecx
add	ecx, ecx
mov	edx, [esp+ecx+7Ch+var_44]
cmp	edx, edi
jle	short loc_1004FAE1
mov	ecx, [esp+ecx+7Ch+var_48]
mov	[esi], ecx
mov	[esi+4], edx
jmp	short loc_1004FAE6
mov	[esi], edi
mov	[esi+4], edi
inc	eax
mov	esi, [esp+7Ch+var_54]
cmp	esi, edi
jz	short loc_1004FB0F
lea	ecx, [eax+eax*2]
add	ecx, ecx
add	ecx, ecx
mov	edx, [esp+ecx+7Ch+var_44]
cmp	edx, edi
jle	short loc_1004FB09
mov	ecx, [esp+ecx+7Ch+var_48]
mov	[esi], ecx
mov	[esi+4], edx
jmp	short loc_1004FB0E
mov	[esi], edi
mov	[esi+4], edi
inc	eax
mov	esi, [esp+7Ch+var_6C]
cmp	esi, edi
jz	short loc_1004FB37
lea	ecx, [eax+eax*2]
add	ecx, ecx
add	ecx, ecx
mov	edx, [esp+ecx+7Ch+var_44]
cmp	edx, edi
jle	short loc_1004FB31
mov	ecx, [esp+ecx+7Ch+var_48]
mov	[esi], ecx
mov	[esi+4], edx
jmp	short loc_1004FB36
mov	[esi], edi
mov	[esi+4], edi
inc	eax
mov	edx, [esp+7Ch+var_64]
cmp	edx, edi
jz	short loc_1004FB71
lea	eax, [eax+eax*2]
add	eax, eax
add	eax, eax
mov	ecx, [esp+eax+7Ch+var_44]
cmp	ecx, edi
jle	short loc_1004FB6C
mov	eax, [esp+eax+7Ch+var_48]
pop	edi
pop	esi
pop	ebp
mov	[edx], eax
mov	[edx+4], ecx
xor	eax, eax
pop	ebx
mov	ecx, [esp+6Ch+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 6Ch
retn
mov	[edx], edi
mov	[edx+4], edi
			
mov	ecx, [esp+7Ch+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 6Ch
retn
align 10h
sub	esp, 80h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+80h+var_4], eax
mov	ecx, [esp+80h+arg_10]
mov	edx, [esp+80h+arg_14]
mov	eax, [esp+80h+arg_C]
mov	[esp+80h+var_6C], ecx
mov	ecx, [esp+80h+arg_1C]
push	ebx
push	ebp
mov	ebp, [esp+88h+arg_4]
mov	[esp+88h+var_60], ecx
push	esi
mov	esi, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_68], edx
lea	ecx, [esp+8Ch+var_70]
mov	[esp+8Ch+var_48], ecx
push	edi
mov	edi, [esp+90h+arg_8]
lea	ecx, [esp+90h+var_78]
mov	[esp+90h+var_30], ecx
mov	[esp+90h+var_64], eax
mov	eax, [esp+90h+arg_18]
lea	edx, [esp+90h+var_7D]
mov	[esp+90h+var_54], edx
lea	ecx, [esp+90h+var_7E]
push	7
lea	edx, [esp+94h+var_74]
mov	[esp+94h+var_3C], edx
mov	[esp+94h+var_18], ecx
mov	[esp+94h+var_5C], eax
mov	eax, 0CE534355h
lea	ecx, [esp+94h+var_58]
push	ecx
lea	edx, [esp+98h+var_7C]
mov	[esp+98h+var_24], edx
mov	edx, [edi]
push	0CE534353h
mov	[esp+9Ch+var_70], eax
mov	[esp+9Ch+var_74], eax
mov	[esp+9Ch+var_78], eax
mov	[esp+9Ch+var_7C], eax
mov	eax, 1
push	esi
mov	ebx, 4
mov	[esp+0A0h+var_C], edx
mov	edx, [esi+4]
mov	[esp+0A0h+var_58], eax
mov	[esp+0A0h+var_50], eax
mov	[esp+0A0h+var_14], eax
mov	eax, [edi+4]
push	0
push	edx
mov	[esp+0A8h+var_7D], 0
mov	[esp+0A8h+var_7E], 0
mov	[esp+0A8h+var_4C], 0CE536358h
mov	[esp+0A8h+var_44], ebx
mov	[esp+0A8h+var_40], 0CE536359h
mov	[esp+0A8h+var_38], ebx
mov	[esp+0A8h+var_34], 0CE53635Bh
mov	[esp+0A8h+var_2C], ebx
mov	[esp+0A8h+var_28], 0CE53635Ah
mov	[esp+0A8h+var_20], ebx
mov	[esp+0A8h+var_1C], 0CE536360h
mov	[esp+0A8h+var_10], 0CE5363B4h
mov	[esp+0A8h+var_8], eax
call	sub_1004DA80
add	esp, 18h
test	eax, eax
jz	short loc_1004FD41
test	ebp, ebp
jz	short loc_1004FCDF
mov	ebx, ebp
jmp	short loc_1004FCED
mov	eax, [esi+4]
push	eax
call	PK11_NeedLogin
add	esp, 4
mov	ebx, eax
test	ebx, ebx
jnz	short loc_1004FD08
mov	ecx, ds:dword_100A7E34
push	ecx
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
jmp	loc_1004FE6F
mov	edx, [esi+4]
push	edx
call	sub_1004C610
mov	ecx, [esi]
mov	ebp, eax
push	ebp
push	ebx
push	0
push	7
lea	eax, [esp+0A4h+var_58]
push	eax
push	ecx
call	sub_1004F600
push	ebp
mov	esi, eax
call	sub_1004C260
add	esp, 20h
test	esi, esi
jz	short loc_1004FD3C
mov	eax, esi
jmp	loc_1004FE6F
mov	ebx, 4
mov	eax, [esp+90h+var_8]
cmp	eax, 0FFFFFFFFh
jnz	short loc_1004FD4F
xor	eax, eax
mov	[edi+4], eax
mov	eax, [esp+90h+var_70]
add	eax, 31ACBCAFh	
cmp	eax, 0Ah
ja	short loc_1004FD8E 
movzx	edx, ds:byte_1004FEA0[eax]
jmp	ds:off_1004FE88[edx*4] 
			
mov	eax, 1		
jmp	short loc_1004FD90
			
mov	eax, 3		
jmp	short loc_1004FD90
			
mov	eax, 5		
jmp	short loc_1004FD90
			
mov	eax, 2		
jmp	short loc_1004FD90
			
mov	eax, ebx	
jmp	short loc_1004FD90
			
			
xor	eax, eax	
			
mov	ecx, [esp+90h+var_64]
mov	[ecx], eax
mov	eax, [esp+90h+var_74]
add	eax, 31ACBCAFh	
cmp	eax, 0Ah
ja	short loc_1004FDD2 
movzx	edx, ds:byte_1004FEC4[eax]
jmp	ds:off_1004FEAC[edx*4] 
			
mov	eax, 1		
jmp	short loc_1004FDD4
			
mov	eax, 3		
jmp	short loc_1004FDD4
			
mov	eax, 5		
jmp	short loc_1004FDD4
			
mov	eax, 2		
jmp	short loc_1004FDD4
			
mov	eax, ebx	
jmp	short loc_1004FDD4
			
			
xor	eax, eax	
			
mov	ecx, [esp+90h+var_6C]
mov	[ecx], eax
mov	eax, [esp+90h+var_78]
add	eax, 31ACBCAFh	
cmp	eax, 0Ah
ja	short loc_1004FE16 
movzx	edx, ds:byte_1004FEE8[eax]
jmp	ds:off_1004FED0[edx*4] 
			
mov	eax, 1		
jmp	short loc_1004FE18
			
mov	eax, 3		
jmp	short loc_1004FE18
			
mov	eax, 5		
jmp	short loc_1004FE18
			
mov	eax, 2		
jmp	short loc_1004FE18
			
mov	eax, ebx	
jmp	short loc_1004FE18
			
			
xor	eax, eax	
			
mov	ecx, [esp+90h+var_5C]
mov	[ecx], eax
mov	eax, [esp+90h+var_7C]
add	eax, 31ACBCAFh	
cmp	eax, 0Ah
ja	short loc_1004FE5A 
movzx	edx, ds:byte_1004FF0C[eax]
jmp	ds:off_1004FEF4[edx*4] 
			
mov	eax, 1		
jmp	short loc_1004FE5C
			
mov	eax, 3		
jmp	short loc_1004FE5C
			
mov	eax, 5		
jmp	short loc_1004FE5C
			
mov	eax, 2		
jmp	short loc_1004FE5C
			
mov	eax, ebx	
jmp	short loc_1004FE5C
			
			
xor	eax, eax	
			
mov	ecx, [esp+90h+var_68]
movzx	edx, [esp+90h+var_7E]
mov	[ecx], eax
mov	eax, [esp+90h+var_60]
mov	[eax], edx
xor	eax, eax
			
mov	ecx, [esp+90h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 80h
retn
dd offset loc_1004FD75	
dd offset loc_1004FD8A
dd offset loc_1004FD6E
dd offset loc_1004FD7C
dd offset loc_1004FD8E
db	5,     5,     5,     5 
db	5,     3,     4
align 4
dd offset loc_1004FDB9	
dd offset loc_1004FDCE
dd offset loc_1004FDB2
dd offset loc_1004FDC0
dd offset loc_1004FDD2
db	5,     5,     5,     5 
db	5,     3,     4
align 10h
dd offset loc_1004FDFD	
dd offset loc_1004FE12
dd offset loc_1004FDF6
dd offset loc_1004FE04
dd offset loc_1004FE16
db	5,     5,     5,     5 
db	5,     3,     4
align 4
dd offset loc_1004FE41	
dd offset loc_1004FE56
dd offset loc_1004FE3A
dd offset loc_1004FE48
dd offset loc_1004FE5A
db	5,     5,     5,     5 
db	5,     3,     4
align 10h
			
sub	esp, 74h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+74h+var_4], eax
mov	ecx, [esp+74h+arg_8]
mov	edx, [esp+74h+arg_10]
mov	eax, [esp+74h+arg_4]
push	ebx
push	ebp
mov	ebp, [esp+7Ch+arg_14]
push	esi
mov	esi, [esp+80h+arg_1C]
mov	[esp+80h+var_5C], ecx
mov	ecx, [esp+80h+arg_C]
mov	[esp+80h+var_74], edx
mov	edx, [esp+80h+arg_18]
xor	ebx, ebx
push	edi
mov	edi, [esp+84h+arg_0]
mov	[esp+84h+var_64], eax
mov	[esp+84h+var_6C], ecx
mov	[esp+84h+var_70], ebp
mov	[esp+84h+var_68], edx
mov	[esp+84h+var_60], esi
lea	eax, [esp+84h+var_58]
cmp	ebp, ebx
jz	short loc_1004FF9D
mov	[esp+84h+var_58], ebx
mov	[esp+84h+var_54], ebx
mov	[esp+84h+var_50], ebx
lea	eax, [esp+84h+var_4C]
cmp	ecx, ebx
jz	short loc_1004FFB0
mov	dword ptr [eax], 11h
mov	[eax+4], ebx
mov	[eax+8], ebx
add	eax, 0Ch
cmp	edx, ebx
jz	short loc_1004FFC3
mov	dword ptr [eax], 0CE534351h
mov	[eax+4], ebx
mov	[eax+8], ebx
add	eax, 0Ch
cmp	esi, ebx
jz	short loc_1004FFD6
mov	dword ptr [eax], 0CE534358h
mov	[eax+4], ebx
mov	[eax+8], ebx
add	eax, 0Ch
cmp	[esp+84h+var_74], ebx
jz	short loc_1004FFEB
mov	dword ptr [eax], 101h
mov	[eax+4], ebx
mov	[eax+8], ebx
add	eax, 0Ch
lea	ecx, [esp+84h+var_58]
sub	eax, ecx
mov	ecx, eax
mov	eax, 2AAAAAABh
imul	ecx
mov	eax, [edi+4]
sar	edx, 1
mov	esi, edx
shr	esi, 1Fh
add	esi, edx
push	esi
lea	edx, [esp+88h+var_58]
push	edx
push	0CE534351h
push	edi
push	ebx
push	eax
call	sub_1004DA80
add	esp, 18h
test	eax, eax
jz	loc_100500AD
mov	ebp, [esp+84h+var_64]
cmp	ebp, ebx
jnz	short loc_10050063
mov	ecx, [edi+4]
push	ecx
call	PK11_NeedLogin
mov	ebp, eax
add	esp, 4
cmp	ebp, ebx
jnz	short loc_10050063
mov	edx, ds:dword_100A7E34
push	edx
call	sub_10050AF0
add	esp, 4
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+74h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 74h
retn
			
mov	eax, [edi+4]
push	eax
call	sub_1004C610
mov	ecx, [esp+88h+var_5C]
mov	ebx, eax
mov	eax, [edi]
push	ebx
push	ebp
push	ecx
push	esi
lea	edx, [esp+98h+var_58]
push	edx
push	eax
call	sub_1004F600
push	ebx
mov	esi, eax
call	sub_1004C260
add	esp, 20h
test	esi, esi
jz	short loc_100500A7
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+74h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 74h
retn
mov	ebp, [esp+84h+var_70]
xor	ebx, ebx
xor	eax, eax
cmp	ebp, ebx
jz	short loc_100500C7
cmp	[esp+84h+var_50], ebx
jbe	short loc_100500C2
mov	ecx, [esp+84h+var_54]
mov	edx, [ecx]
mov	[ebp+0], edx
mov	eax, 1
mov	esi, [esp+84h+var_6C]
cmp	esi, ebx
jz	short loc_100500EF
lea	ecx, [eax+eax*2]
add	ecx, ecx
add	ecx, ecx
mov	edx, [esp+ecx+84h+var_50]
cmp	edx, ebx
jle	short loc_100500E9
mov	ecx, [esp+ecx+84h+var_54]
mov	[esi], ecx
mov	[esi+4], edx
jmp	short loc_100500EE
mov	[esi], ebx
mov	[esi+4], ebx
inc	eax
mov	ecx, [esp+84h+var_68]
cmp	ecx, ebx
jz	short loc_10050101
lea	edx, [eax+eax*2]
mov	edx, [esp+edx*4+84h+var_54]
mov	[ecx], edx
inc	eax
mov	esi, [esp+84h+var_60]
cmp	esi, ebx
jz	short loc_10050125
lea	ecx, [eax+eax*2]
add	ecx, ecx
add	ecx, ecx
cmp	[esp+ecx+84h+var_50], ebx
jbe	short loc_10050124
mov	ecx, [esp+ecx+84h+var_54]
xor	edx, edx
cmp	byte ptr [ecx],	1
setz	dl
mov	[esi], edx
inc	eax
mov	edx, [esp+84h+var_74]
cmp	edx, ebx
jz	short loc_1005015F
lea	eax, [eax+eax*2]
add	eax, eax
add	eax, eax
mov	ecx, [esp+eax+84h+var_50]
cmp	ecx, ebx
jle	short loc_1005015A
mov	eax, [esp+eax+84h+var_54]
pop	edi
pop	esi
pop	ebp
mov	[edx], eax
mov	[edx+4], ecx
xor	eax, eax
pop	ebx
mov	ecx, [esp+74h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 74h
retn
mov	[edx], ebx
mov	[edx+4], ebx
mov	ecx, [esp+84h+var_4]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
xor	eax, eax
call	@__security_check_cookie@4 
add	esp, 74h
retn
align 10h
sub	esp, 34h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+34h+var_4], eax
push	ebx
push	ebp
mov	ebp, [esp+3Ch+arg_4]
push	esi
mov	esi, [esp+40h+arg_8]
push	edi
mov	edi, [esp+44h+arg_0]
mov	eax, [edi+4]
push	eax
call	sub_1004C620
mov	ebx, [edi+4]
push	ebx
mov	[esp+4Ch+var_2C], eax
call	PK11_NeedLogin
push	0
push	esi
mov	[esp+54h+var_30], eax
mov	[esp+54h+var_34], 0
mov	[esp+54h+var_28], 3
mov	[esp+54h+var_24], esi
call	sub_10050D90
add	esp, 10h
mov	[esp+44h+var_20], eax
test	eax, eax
jz	short loc_100501E4
dec	eax
mov	[esp+44h+var_20], eax
mov	eax, [esp+44h+arg_C]
mov	ecx, [eax]
mov	edx, [eax+4]
mov	eax, [esp+44h+arg_10]
mov	[esp+44h+var_18], ecx
mov	ecx, [eax]
mov	[esp+44h+var_14], edx
mov	edx, [eax+4]
mov	[esp+44h+var_1C], 102h
mov	[esp+44h+var_10], 101h
mov	[esp+44h+var_C], ecx
mov	[esp+44h+var_8], edx
test	ebp, ebp
jz	short loc_10050241
push	ebp
call	PK11_GetWindow
add	esp, 4
test	eax, eax
jnz	short loc_1005023D
pop	edi
pop	esi
pop	ebp
or	eax, 0FFFFFFFFh
pop	ebx
mov	ecx, [esp+34h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 34h
retn
mov	esi, ebp
jmp	short loc_10050282
mov	esi, [esp+44h+var_30]
test	esi, esi
jz	short loc_10050256
push	esi
call	PK11_GetWindow
add	esp, 4
test	eax, eax
jnz	short loc_10050282
push	ebx
call	sub_1004C610
push	1
mov	ebp, eax
mov	eax, [ebx+14h]
push	0
push	eax
call	sub_10012470
push	ebp
mov	esi, eax
call	sub_1004C260
add	esp, 14h
test	esi, esi
jz	short loc_10050227
mov	[esp+44h+var_34], 1
			
mov	edx, [edi]
mov	eax, [esi+4]
push	3
lea	ecx, [esp+48h+var_28]
push	ecx
mov	ecx, [esp+4Ch+var_2C]
push	edx
mov	edx, [ecx+66h]
push	eax
call	edx
add	esp, 10h
cmp	[esp+44h+var_34], 0
mov	edi, eax
jz	short loc_100502AE
push	esi
call	sub_100124E0
add	esp, 4
mov	ecx, [esp+44h+var_4]
mov	eax, edi
pop	edi
pop	esi
neg	eax
pop	ebp
sbb	eax, eax
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 34h
retn
align 10h
push	esi
mov	esi, eax
cmp	dword ptr [esi], 4D41524Bh
jz	short loc_100502EE
mov	eax, ds:dword_100A7DEC
push	eax
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
mov	eax, [edi+1Ch]
test	eax, eax
jnz	short loc_10050309
mov	ecx, ds:dword_100A7DE8
push	ecx
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
push	eax
call	ds:PR_Lock
add	esp, 4
cmp	dword ptr [esi], 4D41524Bh
jz	short loc_10050338
mov	edx, [edi+1Ch]
push	edx
call	ds:PR_Unlock
mov	eax, ds:dword_100A7DEC
push	eax
call	sub_10050AF0
add	esp, 8
or	eax, 0FFFFFFFFh
pop	esi
retn
cmp	[esp+4+arg_0], 0
mov	dword ptr [esi], 0
jz	short loc_10050384
mov	edx, [esi+4]
mov	ecx, [edi+10h]
mov	eax, [ecx+4]
mov	esi, [ecx+0Ch]
push	ebx
mov	ebx, edx
sub	ebx, eax
sub	esi, eax
cmp	ebx, esi
pop	ebx
ja	short loc_1005037A
mov	eax, [edi+18h]
add	edx, eax
not	eax
and	edx, eax
mov	[ecx+0Ch], edx
mov	eax, [edi+1Ch]
push	eax
call	ds:PR_Unlock
add	esp, 4
xor	eax, eax
pop	esi
retn
push	edx
push	edi
call	PL_ArenaRelease
add	esp, 8
mov	eax, [edi+1Ch]
push	eax
call	ds:PR_Unlock
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
			
mov	eax, [esp+arg_4]
push	edi
mov	edi, [esp+4+arg_0]
push	1
call	sub_100502D0
add	esp, 4
pop	edi
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_4]
cmp	dword ptr [edi], 4D41524Bh
jz	short loc_100503E0
mov	eax, ds:dword_100A7DEC
push	eax
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	edi
retn
push	esi
mov	esi, [esp+8+arg_0]
mov	eax, [esi+1Ch]
test	eax, eax
jnz	short loc_10050401
mov	ecx, ds:dword_100A7DE8
push	ecx
call	sub_10050AF0
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
retn
push	eax
call	ds:PR_Lock
add	esp, 4
cmp	dword ptr [edi], 4D41524Bh
jz	short loc_10050431
mov	edx, [esi+1Ch]
push	edx
call	ds:PR_Unlock
mov	eax, ds:dword_100A7DEC
push	eax
call	sub_10050AF0
add	esp, 8
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
retn
mov	dword ptr [edi], 0
mov	ecx, [esi+1Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 4
pop	esi
xor	eax, eax
pop	edi
retn
align 10h
			
push	esi
mov	esi, eax
mov	eax, [esi+18h]
mov	edx, [esi+10h]
lea	ecx, [eax+ebx+8]
not	eax
and	ecx, eax
mov	eax, [edx+0Ch]
push	edi
lea	edi, [eax+ecx]
cmp	edi, [edx+8]
jbe	short loc_10050479
push	ecx
push	esi
call	PL_ArenaAllocate
add	esp, 8
jmp	short loc_1005047C
mov	[edx+0Ch], edi
test	eax, eax
jnz	short loc_10050493
mov	eax, ds:dword_100A7DE0
push	eax
call	sub_10050AF0
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
retn
push	ebx
mov	[eax], esi
lea	esi, [eax+8]
push	0		
push	esi		
mov	[eax+4], ebx
call	sub_10050BD0
add	esp, 0Ch
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_4]
lea	eax, [ebx+8]
cmp	eax, 8
jnb	short loc_100504CF
mov	eax, ds:dword_100A7DE0
push	eax
call	sub_10050AF0
add	esp, 4
xor	eax, eax
pop	ebx
retn
push	esi
mov	esi, [esp+8+arg_0]
test	esi, esi
jnz	short loc_1005050B
push	eax
push	1
call	ds:PR_Calloc
add	esp, 8
test	eax, eax
jnz	short loc_100504FC
mov	ecx, ds:dword_100A7DE0
push	ecx
call	sub_10050AF0
add	esp, 4
pop	esi
xor	eax, eax
pop	ebx
retn
mov	[eax+4], ebx
pop	esi
mov	dword ptr [eax], 0
add	eax, 8
pop	ebx
retn
mov	eax, [esi+1Ch]
test	eax, eax
jnz	short loc_10050526
mov	edx, ds:dword_100A7DE8
push	edx
call	sub_10050AF0
add	esp, 4
pop	esi
xor	eax, eax
pop	ebx
retn
push	edi
push	eax
call	ds:PR_Lock
mov	eax, esi
call	sub_10050450
mov	edi, eax
mov	eax, [esi+1Ch]
push	eax
call	ds:PR_Unlock
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_1005055D
xor	eax, eax
pop	edi
retn
mov	eax, [edi-8]
push	esi
lea	esi, [edi-8]
test	eax, eax
jnz	short loc_10050583
mov	eax, [esi+4]
push	eax
push	0		
push	edi		
call	sub_10050BD0
push	esi
call	ds:PR_Free
add	esp, 10h
pop	esi
xor	eax, eax
pop	edi
retn
mov	eax, [eax+1Ch]
test	eax, eax
jnz	short loc_1005059F
mov	ecx, ds:dword_100A7DE4
push	ecx
call	sub_10050AF0
add	esp, 4
pop	esi
or	eax, 0FFFFFFFFh
pop	edi
retn
push	eax
call	ds:PR_Lock
mov	edx, [esi+4]
push	edx
push	0		
push	edi		
call	sub_10050BD0
mov	eax, [esi]
mov	ecx, [eax+1Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 14h
pop	esi
xor	eax, eax
pop	edi
retn
align 10h
			
push	esi
mov	esi, [esp+4+Size]
lea	eax, [esi+8]
cmp	eax, 8
jnb	short loc_100505EF
mov	eax, ds:dword_100A7DE0
push	eax
call	sub_10050AF0
add	esp, 4
xor	eax, eax
pop	esi
retn
push	ebp
mov	ebp, [esp+8+Src]
test	ebp, ebp
jnz	short loc_1005060C
mov	ecx, ds:dword_100A7DE4
push	ecx
call	sub_10050AF0
add	esp, 4
pop	ebp
xor	eax, eax
pop	esi
retn
cmp	esi, [ebp-4]
push	edi
lea	edi, [ebp-8]
jnz	short loc_1005061B
pop	edi
mov	eax, ebp
pop	ebp
pop	esi
retn
push	ebx
mov	ebx, [edi]
test	ebx, ebx
jnz	loc_100506AB
push	eax
push	1
call	ds:PR_Calloc
add	esp, 8
test	eax, eax
jnz	short loc_1005064C
mov	edx, ds:dword_100A7DE0
push	edx
call	sub_10050AF0
add	esp, 4
pop	ebx
pop	edi
pop	ebp
xor	eax, eax
pop	esi
retn
mov	dword ptr [eax], 0
mov	[eax+4], esi
lea	ebx, [eax+8]
mov	eax, [edi+4]
cmp	esi, eax
jbe	short loc_1005067C
push	eax		
push	ebp		
push	ebx		
call	j_memcpy
mov	eax, [edi+4]
sub	esi, eax
push	esi
add	eax, ebx
push	0		
push	eax		
call	sub_10050BD0
add	esp, 18h
jmp	short loc_10050687
push	esi		
push	ebp		
push	ebx		
call	j_memcpy
add	esp, 0Ch
mov	eax, [edi+4]
push	eax
push	0		
push	ebp		
call	sub_10050BD0
push	edi
mov	dword ptr [edi+4], 0
call	ds:PR_Free
add	esp, 10h
mov	eax, ebx
pop	ebx
pop	edi
pop	ebp
pop	esi
retn
mov	eax, [ebx+1Ch]
test	eax, eax
jnz	short loc_100506C8
mov	ecx, ds:dword_100A7DE4
push	ecx
call	sub_10050AF0
add	esp, 4
pop	ebx
pop	edi
pop	ebp
xor	eax, eax
pop	esi
retn
push	eax
call	ds:PR_Lock
mov	eax, [edi+4]
add	esp, 4
cmp	esi, eax
jnb	short loc_100506FB
sub	eax, esi
push	eax
lea	edx, [esi+ebp]
push	0		
push	edx		
call	sub_10050BD0
mov	eax, [ebx+1Ch]
push	eax
call	ds:PR_Unlock
add	esp, 10h
pop	ebx
pop	edi
mov	eax, ebp
pop	ebp
pop	esi
retn
mov	eax, [ebx+18h]
mov	edx, [ebx+10h]
lea	ecx, [eax+esi+8]
not	eax
and	ecx, eax
mov	eax, [edx+0Ch]
lea	ebp, [eax+ecx]
cmp	ebp, [edx+8]
jbe	short loc_10050720
push	ecx
push	ebx
call	PL_ArenaAllocate
add	esp, 8
jmp	short loc_10050723
mov	[edx+0Ch], ebp
test	eax, eax
jnz	short loc_10050747
mov	ecx, [ebx+1Ch]
push	ecx
call	ds:PR_Unlock
mov	edx, ds:dword_100A7DE0
push	edx
call	sub_10050AF0
add	esp, 8
pop	ebx
pop	edi
pop	ebp
xor	eax, eax
pop	esi
retn
lea	ebp, [eax+8]
mov	[eax], ebx
mov	[eax+4], esi
mov	eax, [esp+10h+Src]
cmp	ebp, eax
jz	short loc_10050775
mov	ecx, [edi+4]
push	ecx		
push	eax		
push	ebp		
call	j_memcpy
mov	edx, [edi+4]
mov	eax, [esp+1Ch+Src]
push	edx
push	0		
push	eax		
call	sub_10050BD0
add	esp, 18h
mov	eax, [edi+4]
sub	esi, eax
push	esi
add	eax, ebp
push	0		
push	eax		
call	sub_10050BD0
mov	dword ptr [edi], 0
mov	dword ptr [edi+4], 0
mov	ecx, [ebx+1Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 10h
pop	ebx
pop	edi
mov	eax, ebp
pop	ebp
pop	esi
retn
align 10h
			
push	esi
push	28h
push	1
call	ds:PR_Calloc
add	esp, 8
test	eax, eax
jnz	short loc_100507D2
mov	eax, ds:dword_100A7DE0
push	eax
call	sub_10050AF0
add	esp, 4
jmp	short loc_100507E6
lea	esi, [eax+8]
mov	dword ptr [eax], 0
mov	dword ptr [eax+4], 20h
test	esi, esi
jnz	short loc_100507F9
mov	ecx, ds:dword_100A7DE0
push	ecx
call	sub_10050AF0
add	esp, 4
xor	eax, eax
pop	esi
retn
call	ds:PR_NewLock
mov	[esi+1Ch], eax
test	eax, eax
jnz	short loc_1005081F
push	esi
call	sub_10050550
mov	edx, ds:dword_100A7DE0
push	edx
call	sub_10050AF0
add	esp, 8
xor	eax, eax
pop	esi
retn
push	8
push	800h
push	offset dword_100A7DD4
push	esi
call	PL_InitArenaPool
add	esp, 10h
mov	eax, esi
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+1Ch]
test	eax, eax
jnz	short loc_1005085F
mov	eax, ds:dword_100A7DE8
push	eax
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
push	edi
push	eax
call	ds:PR_Lock
push	esi
call	PL_FinishArenaPool
mov	edi, [esi+1Ch]
push	edi
mov	dword ptr [esi+1Ch], 0
call	ds:PR_Unlock
push	edi
call	ds:PR_DestroyLock
push	esi
call	sub_10050550
add	esp, 14h
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
mov	eax, [edi+1Ch]
test	eax, eax
jnz	short loc_100508BE
mov	eax, ds:dword_100A7DE8
push	eax
call	sub_10050AF0
add	esp, 4
xor	eax, eax
pop	edi
retn
push	ebx
push	ebp
push	esi
push	eax
call	ds:PR_Lock
mov	ecx, [edi+10h]
mov	ebp, [ecx+0Ch]
add	esp, 4
mov	ebx, 8
mov	eax, edi
call	sub_10050450
mov	esi, eax
test	esi, esi
jnz	short loc_10050902
mov	edx, [edi+1Ch]
push	edx
call	ds:PR_Unlock
mov	eax, ds:dword_100A7DE0
push	eax
call	sub_10050AF0
add	esp, 8
pop	esi
pop	ebp
pop	ebx
xor	eax, eax
pop	edi
retn
mov	[esi+4], ebp
mov	dword ptr [esi], 4D41524Bh
mov	ecx, [edi+1Ch]
push	ecx
call	ds:PR_Unlock
add	esp, 4
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
pop	edi
retn
align 10h
			
call	sub_10050AB0
jmp	sub_100507B0
align 10h
			
push	esi
call	sub_10050AB0
mov	esi, [esp+4+arg_0]
mov	eax, [esi+1Ch]
test	eax, eax
jnz	short loc_10050954
mov	eax, ds:dword_100A7DE8
push	eax
call	sub_10050AF0
add	esp, 4
or	eax, 0FFFFFFFFh
pop	esi
retn
push	edi
push	eax
call	ds:PR_Lock
push	esi
call	PL_FinishArenaPool
mov	edi, [esi+1Ch]
push	edi
mov	dword ptr [esi+1Ch], 0
call	ds:PR_Unlock
push	edi
call	ds:PR_DestroyLock
push	esi
call	sub_10050550
add	esp, 14h
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
mov	eax, ds:PR_Free
push	eax
push	offset dword_100BA674
call	ds:PR_NewThreadPrivateIndex
add	esp, 8
retn
align 10h
			
cmp	dword_100BA674,	0FFFFFFFFh
jnz	short loc_100509D3
push	offset loc_10050990
push	offset dword_100BAE4C
call	ds:PR_CallOnce
add	esp, 8
test	eax, eax
jz	short loc_100509D3
xor	eax, eax
retn
			
mov	eax, dword_100BA674
push	ebx
push	esi
push	eax
call	ds:PR_GetThreadPrivate
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_10050A06
movzx	eax, word ptr [esi+2]
movzx	ecx, word ptr [esi]
cmp	ax, cx
jnz	short loc_10050A50
cmp	eax, 10h
jnb	short loc_10050A50
mov	eax, ecx
add	eax, eax
mov	ebx, eax
cmp	eax, 10h
jl	short loc_10050A0B
mov	ebx, 10h
push	edi
lea	ecx, ds:8[ebx*4]
push	ecx
push	1
call	ds:PR_Calloc
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10050A3A
test	esi, esi
jz	short loc_10050A37
movzx	edx, word ptr [esi]
push	edx		
push	esi		
push	edi		
call	j_memcpy
add	esp, 0Ch
mov	[edi], bx
mov	eax, dword_100BA674
push	edi
push	eax
call	ds:PR_SetThreadPrivate
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
			
mov	eax, esi
pop	esi
pop	ebx
retn
align 10h
			
call	sub_100509B0
test	eax, eax
jnz	short loc_10050A6F
mov	eax, ds:dword_100A7DE0
retn
movzx	ecx, word ptr [eax+2]
xor	edx, edx
cmp	dx, cx
jnz	short loc_10050A7D
xor	eax, eax
retn
mov	eax, [eax+ecx*4]
retn
align 10h
call	sub_100509B0
test	eax, eax
jnz	short loc_10050A9A
retn
movzx	ecx, word ptr [eax+2]
mov	dword ptr [eax+ecx*4+4], 0
add	eax, 4
retn
align 10h
			
call	sub_100509B0
test	eax, eax
jz	short locret_10050AC2
xor	ecx, ecx
mov	[eax+2], cx
mov	[eax+4], ecx
retn
align 10h
mov	eax, dword_100BA674
cmp	eax, 0FFFFFFFFh
jz	short locret_10050AE6
push	0
push	eax
call	ds:PR_SetThreadPrivate
add	esp, 8
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
test	edi, edi
jnz	short loc_10050B0D
call	sub_100509B0
test	eax, eax
jz	short loc_10050B52
xor	ecx, ecx
mov	[eax+2], cx
mov	[eax+4], ecx
pop	edi
retn
push	esi
call	sub_100509B0
mov	esi, eax
test	esi, esi
jz	short loc_10050B51
movzx	eax, word ptr [esi+2]
movzx	ecx, word ptr [esi]
cmp	ax, cx
jnb	short loc_10050B32
mov	edx, eax
mov	[esi+edx*4+4], edi
inc	word ptr [esi+2]
pop	esi
pop	edi
retn
lea	ecx, ds:0FFFFFFFCh[ecx*4]
push	ecx		
lea	edx, [esi+8]
push	edx		
lea	eax, [esi+4]
push	eax		
call	ds:memmove
movzx	ecx, word ptr [esi]
add	esp, 0Ch
mov	[esi+ecx*4], edi
pop	esi
pop	edi
retn
align 10h
mov	[esp+arg_0], 0
jmp	sub_100504B0
align 10h
mov	eax, [esp+arg_4]
push	eax
call	sub_10050550
pop	ecx
retn
align 10h
mov	[esp+arg_4], 10h
mov	[esp+arg_0], 0
jmp	sub_100504B0
align 10h
cmp	[esp+arg_8], 1
jnz	short locret_10050BB2
mov	eax, [esp+arg_4]
push	eax
call	sub_10050550
pop	ecx
retn
align 10h
align 10h
			
movzx	ecx, byte ptr [esp+Val]
mov	[esp+Val], ecx	
jmp	memset
align 10h
			
mov	eax, [esp+arg_C]
test	eax, eax
jz	short loc_10050BEE
mov	dword ptr [eax], 0
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	esi
mov	esi, [esp+4+arg_8]
push	edi
cmp	esi, 4
jb	short loc_10050C15
mov	eax, [edx]
cmp	eax, [ecx]
jnz	short loc_10050C19
sub	esi, 4
add	ecx, 4
add	edx, 4
cmp	esi, 4
jnb	short loc_10050C01
test	esi, esi
jz	short loc_10050C5C
movzx	eax, byte ptr [edx]
movzx	edi, byte ptr [ecx]
sub	eax, edi
jnz	short loc_10050C54
cmp	esi, 1
jbe	short loc_10050C5C
movzx	eax, byte ptr [edx+1]
movzx	edi, byte ptr [ecx+1]
sub	eax, edi
jnz	short loc_10050C54
cmp	esi, 2
jbe	short loc_10050C5C
movzx	eax, byte ptr [edx+2]
movzx	edi, byte ptr [ecx+2]
sub	eax, edi
jnz	short loc_10050C54
cmp	esi, 3
jbe	short loc_10050C5C
movzx	eax, byte ptr [edx+3]
movzx	ecx, byte ptr [ecx+3]
sub	eax, ecx
			
sar	eax, 1Fh
or	eax, 1
jnz	short loc_10050C64
			
pop	edi
mov	eax, 1
pop	esi
retn
pop	edi
xor	eax, eax
pop	esi
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
push	ebp
mov	ebp, [esp+8+arg_4]
push	esi
push	edi
test	ebp, ebp
jnz	short loc_10050C93
push	8
push	ebx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10050CB9
jmp	short loc_10050C95
mov	esi, ebp
mov	edi, [esp+10h+Size]
push	edi
push	ebx
mov	[esi+4], edi
call	sub_100504B0
add	esp, 8
mov	[esi], eax
test	eax, eax
jnz	short loc_10050CC0
cmp	esi, ebp
jz	short loc_10050CB9
push	esi
call	sub_10050550
add	esp, 4
			
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
test	edi, edi
jz	short loc_10050CD3
mov	ecx, [esp+10h+Src]
push	edi		
push	ecx		
push	eax		
call	j_memcpy
add	esp, 0Ch
pop	edi
mov	eax, esi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax]
mov	edx, [eax+4]
mov	eax, [esp+arg_8]
push	ecx		
mov	ecx, [esp+4+arg_4]
push	edx		
push	eax		
push	ecx		
call	sub_10050C70
add	esp, 10h
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_8]
test	esi, esi
jz	short loc_10050D0F
mov	dword ptr [esi], 0
mov	edx, [esp+4+arg_0]
test	edx, edx
jnz	short loc_10050D22
cmp	[esp+4+arg_4], edx
jnz	short loc_10050D44
lea	eax, [edx+1]
pop	esi
retn
mov	ecx, [esp+4+arg_4]
test	ecx, ecx
jz	short loc_10050D44
mov	eax, [edx+4]
cmp	eax, [ecx+4]
jnz	short loc_10050D44
push	esi
push	eax
mov	eax, [ecx]
mov	ecx, [edx]
push	eax
push	ecx
call	sub_10050BE0
add	esp, 10h
pop	esi
retn
			
xor	eax, eax
pop	esi
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+Src]
push	esi
push	edi
push	ebx
call	PL_strlen
lea	esi, [eax+1]
mov	eax, [esp+10h+arg_4]
push	esi
push	eax
call	sub_100504B0
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_10050D78
pop	edi
pop	esi
pop	ebx
retn
push	esi		
push	ebx		
push	edi		
call	j_memcpy
add	esp, 0Ch
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
mov	eax, [esp+arg_0]
push	eax
call	PL_strlen
mov	ecx, [esp+4+arg_4]
add	esp, 4
inc	eax
test	ecx, ecx
jz	short locret_10050DAC
mov	dword ptr [ecx], 0
retn
align 10h
			
mov	eax, [esp+arg_4]
push	esi
xor	esi, esi
push	edi
cmp	eax, 7		
ja	loc_10050EA7	
jmp	ds:off_10050EBC[eax*4] 
			
mov	eax, ds:dword_100A7E08 
push	eax
call	sub_10050AF0
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
			
mov	ecx, ds:dword_100A7DDC 
push	ecx
call	sub_10050AF0
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
			
mov	edi, [esp+8+Size] 
mov	edx, [esp+8+arg_0]
test	edi, edi
jnz	short loc_10050E0E
mov	eax, [esp+8+Src]
push	edx		
push	eax		
call	sub_10050D50
add	esp, 8
pop	edi
mov	esi, eax
pop	esi
retn
lea	ecx, [edi+1]
push	ecx
push	edx
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10050E26
pop	edi
xor	eax, eax
pop	esi
retn
mov	eax, [esp+8+Src]
push	edi		
push	eax		
push	esi		
call	j_memcpy
add	esp, 0Ch
pop	edi
mov	eax, esi
pop	esi
retn
			
mov	edx, ds:dword_100A7DDC 
push	edx
call	sub_10050AF0
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
			
mov	edi, [esp+8+Size] 
mov	eax, [esp+8+arg_0]
test	edi, edi
jnz	short loc_10050E6D
mov	ecx, [esp+8+Src]
push	eax		
push	ecx		
call	sub_10050D50
add	esp, 8
pop	edi
mov	esi, eax
pop	esi
retn
lea	edx, [edi+1]
push	edx
push	eax
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_10050E21
mov	ecx, [esp+8+Src]
push	edi		
push	ecx		
push	esi		
call	j_memcpy
add	esp, 0Ch
pop	edi
mov	eax, esi
pop	esi
retn
			
mov	eax, ds:dword_100A7DDC 
push	eax
call	sub_10050AF0
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
mov	ecx, ds:dword_100A7E08 
push	ecx
call	sub_10050AF0
add	esp, 4
pop	edi
mov	eax, esi
pop	esi
retn
align 4
dd offset loc_10050DDB	
dd offset loc_10050DEF
dd offset loc_10050DDB
dd offset loc_10050E3A
dd offset loc_10050E4E
dd offset loc_10050E3A
dd offset loc_10050E94
align 10h
			
push	ebp
mov	ebp, [esp+4+arg_0]
push	esi
push	edi
push	ebp
call	PL_strlen
mov	edi, [esp+10h+arg_8]
add	esp, 4
lea	esi, [eax+1]
test	edi, edi
jz	short loc_10050F01
mov	dword ptr [edi], 0
test	esi, esi
jnz	short loc_10050F0B
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
push	ebx
mov	ebx, [esp+10h+arg_4]
push	ebx
call	PL_strlen
add	esp, 4
inc	eax
test	edi, edi
jz	short loc_10050F24
mov	dword ptr [edi], 0
test	eax, eax
jz	short loc_10050F2C
cmp	esi, eax
jz	short loc_10050F33
pop	ebx
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
push	edi
push	esi
push	ebx
push	ebp
call	sub_10050BE0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
retn
align 10h
			
mov	ecx, [esp+4]
xor	eax, eax
cmp	ecx, [esp+8]
setz	al
retn
align 10h
			
push	esi
mov	esi, [edi+8]
test	esi, esi
jnz	short loc_10050F70
xor	eax, eax
pop	esi
retn
align 10h
			
mov	eax, [esi+8]
mov	ecx, [edi+10h]
push	ebx
push	eax
call	ecx
add	esp, 8
test	eax, eax
jnz	short loc_10050F95
mov	edx, [edi+8]
cmp	esi, [edx+4]
jz	short loc_10050F93
mov	esi, [esi]
test	esi, esi
jnz	short loc_10050F70
mov	eax, esi
pop	esi
retn
xor	esi, esi
mov	eax, esi
pop	esi
retn
align 10h
			
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
push	edi
test	ebp, ebp
jz	short loc_10050FB1
mov	edi, ebp
xor	ebx, ebx
jmp	short loc_10050FBD
call	sub_100507B0
mov	edi, eax
mov	ebx, 1
test	edi, edi
jnz	short loc_10050FC7
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
push	esi
push	1Ch
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_10050FED
test	ebp, ebp
jnz	short loc_10050FE6
push	edi
call	sub_10050930
add	esp, 4
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
cmp	[esp+10h+arg_4], 0
jz	short loc_10051015
call	ds:PR_NewLock
mov	[esi+4], eax
test	eax, eax
jnz	short loc_10051015
test	ebp, ebp
jz	short loc_10050FDD
push	esi
call	sub_10050550
add	esp, 4
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
retn
			
mov	[esi], edi
mov	[esi+18h], ebx
mov	dword ptr [esi+10h], offset loc_10050F50
mov	eax, esi
pop	esi
pop	edi
pop	ebp
pop	ebx
retn
align 10h
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
mov	[ecx+14h], eax
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_10051056
push	eax
call	ds:PR_Lock
add	esp, 4
push	esi
mov	esi, [ebx+8]
mov	dword ptr [ebx+8], 0
test	esi, esi
jz	short loc_100510A6
push	ebp
mov	ebp, [esp+0Ch+arg_4]
push	edi
jmp	short loc_10051070
align 10h
			
cmp	dword ptr [ebx+0Ch], 0
jbe	short loc_100510A4
test	ebp, ebp
jz	short loc_10051083
mov	eax, [esi+8]
push	eax
call	ebp
add	esp, 4
mov	edi, [esi]
mov	ecx, [esi+4]
mov	[ecx], edi
mov	edx, [esi]
mov	eax, [esi+4]
push	esi
mov	[edx+4], eax
call	sub_10050550
dec	dword ptr [ebx+0Ch]
add	esp, 4
mov	esi, edi
test	edi, edi
jnz	short loc_10051070
pop	edi
pop	ebp
mov	ebx, [ebx+4]
pop	esi
test	ebx, ebx
jz	short loc_100510B8
push	ebx
call	ds:PR_Unlock
add	esp, 4
pop	ebx
retn
align 10h
			
mov	eax, [ebx]
push	ebp
mov	ebp, [esp+4+arg_0]
push	esi
push	0Ch
push	eax
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_100510DF
pop	esi
or	eax, 0FFFFFFFFh
pop	ebp
retn
push	edi
mov	[esi], esi
mov	[esi+4], esi
mov	[esi+8], ebp
mov	edi, [ebx+8]
test	edi, edi
jz	short loc_10051132
cmp	dword ptr [ebx+14h], 0
jz	short loc_10051155
mov	ecx, [edi+8]
mov	edx, [ebx+14h]
push	ecx
push	ebp
call	edx
add	esp, 8
test	eax, eax
jle	short loc_1005111D
mov	eax, [ebx+8]
cmp	edi, [eax+4]
jz	short loc_1005113E
mov	edi, [edi]
test	edi, edi
jnz	short loc_100510F5
inc	dword ptr [ebx+0Ch]
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
mov	[esi], edi
mov	ecx, [edi+4]
mov	[esi+4], ecx
mov	edx, [edi+4]
mov	[edx], esi
mov	[edi+4], esi
cmp	edi, [ebx+8]
jnz	short loc_10051135
mov	[ebx+8], esi
inc	dword ptr [ebx+0Ch]
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
mov	eax, [edi]
mov	[esi], eax
mov	[esi+4], edi
mov	ecx, [edi]
mov	[ecx+4], esi
mov	[edi], esi
inc	dword ptr [ebx+0Ch]
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
mov	[esi], edi
mov	edx, [ebx+8]
mov	eax, [edx+4]
mov	[esi+4], eax
mov	ecx, [ebx+8]
mov	edx, [ecx+4]
mov	[edx], esi
mov	eax, [ebx+8]
mov	[eax+4], esi
inc	dword ptr [ebx+0Ch]
pop	edi
pop	esi
xor	eax, eax
pop	ebp
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_10051196
push	eax
call	ds:PR_Lock
add	esp, 4
mov	eax, [esp+4+arg_4]
push	eax
call	sub_100510C0
mov	ebx, [ebx+4]
add	esp, 4
test	ebx, ebx
jz	short loc_100511B4
push	ebx
call	ds:PR_Unlock
add	esp, 4
xor	eax, eax
pop	ebx
retn
align 10h
			
push	ebx
push	edi
mov	edi, [esp+8+arg_0]
mov	eax, [edi+4]
test	eax, eax
jz	short loc_100511D7
push	eax
call	ds:PR_Lock
add	esp, 4
mov	ebx, [esp+8+arg_4]
call	sub_10050F60
test	eax, eax
jz	short loc_100511FA
mov	edi, [edi+4]
test	edi, edi
jz	short loc_100511F5
push	edi
call	ds:PR_Unlock
add	esp, 4
pop	edi
xor	eax, eax
pop	ebx
retn
push	esi
push	ebx
mov	ebx, edi
call	sub_100510C0
mov	edi, [edi+4]
add	esp, 4
mov	esi, eax
test	edi, edi
jz	short loc_10051219
push	edi
call	ds:PR_Unlock
add	esp, 4
mov	eax, esi
pop	esi
pop	edi
pop	ebx
retn
align 10h
			
push	edi
mov	edi, [esp+4+arg_0]
mov	eax, [edi+4]
test	eax, eax
jz	short loc_10051236
push	eax
call	ds:PR_Lock
add	esp, 4
push	ebx
mov	ebx, [esp+8+arg_4]
call	sub_10050F60
pop	ebx
test	eax, eax
jz	short loc_10051273
cmp	eax, [edi+8]
jnz	short loc_1005124F
mov	ecx, [eax]
mov	[edi+8], ecx
mov	edx, [eax+4]
mov	ecx, [eax]
mov	[edx], ecx
mov	edx, [eax]
mov	ecx, [eax+4]
push	eax
mov	[edx+4], ecx
call	sub_10050550
add	esp, 4
dec	dword ptr [edi+0Ch]
jnz	short loc_10051273
mov	dword ptr [edi+8], 0
			
mov	edi, [edi+4]
test	edi, edi
jz	short loc_10051284
push	edi
call	ds:PR_Unlock
add	esp, 4
xor	eax, eax
pop	edi
retn
align 10h
			
push	ebx
mov	ebx, [esp+4+arg_0]
push	esi
mov	esi, [ebx+8]
push	edi
xor	edi, edi
test	esi, esi
jz	short loc_100512E7
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_100512B1
push	eax
call	ds:PR_Lock
add	esp, 4
mov	eax, [esp+0Ch+arg_8]
mov	ecx, [esp+0Ch+arg_4]
lea	esp, [esp+0]
mov	edx, [esi+8]
mov	[ecx+edi*4], edx
inc	edi
cmp	edi, eax
jz	short loc_100512D6
mov	esi, [esi]
cmp	esi, [ebx+8]
jz	short loc_100512D6
test	esi, esi
jnz	short loc_100512C0
			
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_100512E7
push	eax
call	ds:PR_Unlock
add	esp, 4
			
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
align 10h
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
xor	eax, eax
cmp	[ebp+4], eax
push	esi
setnz	al
push	edi
mov	edi, eax
call	sub_100507B0
mov	esi, eax
test	esi, esi
jz	short loc_10051327
push	1Ch
push	esi
call	sub_100504B0
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jnz	short loc_1005132E
push	esi
call	sub_10050930
add	esp, 4
pop	edi
pop	esi
pop	ebp
xor	eax, eax
pop	ebx
retn
test	edi, edi
jz	short loc_1005133F
call	ds:PR_NewLock
mov	[ebx+4], eax
test	eax, eax
jz	short loc_1005131E
mov	[ebx], esi
mov	dword ptr [ebx+18h], 1
mov	dword ptr [ebx+10h], offset loc_10050F50
mov	eax, [ebp+4]
test	eax, eax
jz	short loc_10051360
push	eax
call	ds:PR_Lock
add	esp, 4
cmp	dword ptr [ebp+0Ch], 0
jbe	short loc_100513A5
mov	esi, [ebp+8]
lea	esp, [esp+0]
mov	eax, [ebx+4]
mov	edi, [esi+8]
test	eax, eax
jz	short loc_10051384
push	eax
call	ds:PR_Lock
add	esp, 4
push	edi
call	sub_100510C0
mov	eax, [ebx+4]
add	esp, 4
test	eax, eax
jz	short loc_1005139E
push	eax
call	ds:PR_Unlock
add	esp, 4
mov	esi, [esi]
cmp	esi, [ebp+8]
jnz	short loc_10051370
mov	eax, [ebp+4]
test	eax, eax
jz	short loc_100513B6
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	edi
pop	esi
pop	ebp
mov	eax, ebx
pop	ebx
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi]
test	eax, eax
jz	short loc_100513D5
push	eax
call	ds:PR_Lock
add	esp, 4
mov	eax, [esi+4]
cmp	dword ptr [eax+0Ch], 0
jnz	short loc_100513E2
xor	eax, eax
pop	esi
retn
mov	eax, [eax+8]
mov	[esi+8], eax
mov	eax, [eax+8]
pop	esi
retn
align 10h
			
mov	ecx, [esp+arg_0]
mov	edx, [ecx+4]
cmp	dword ptr [edx+0Ch], 1
jz	short loc_10051420
mov	eax, [ecx+8]
test	eax, eax
jz	short loc_10051420
mov	eax, [eax]
mov	edx, [edx+8]
cmp	eax, [edx+4]
jnz	short loc_10051419
mov	dword ptr [ecx+8], 0
mov	eax, [eax+8]
retn
mov	[ecx+8], eax
mov	eax, [eax+8]
retn
			
xor	eax, eax
retn
align 10h
			
mov	eax, [esp+arg_0]
mov	ecx, [eax+4]
mov	edx, [ecx+8]
mov	[eax+8], edx
mov	eax, [eax]
test	eax, eax
jz	short loc_1005144D
mov	[esp+arg_0], eax
jmp	ds:PR_Unlock
xor	eax, eax
retn
			
push	esi
mov	esi, [esp+4+arg_0]
cmp	dword ptr [esi+18h], 0
jnz	short loc_10051466
push	0
push	esi
call	sub_10051040
add	esp, 8
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10051477
push	eax
call	ds:PR_DestroyLock
add	esp, 4
cmp	dword ptr [esi+18h], 0
jz	short loc_1005148A
mov	eax, [esi]
push	eax
call	sub_10050930
add	esp, 4
xor	esi, esi
push	esi
call	sub_10050550
add	esp, 4
xor	eax, eax
pop	esi
retn
align 10h
			
push	esi
push	0Ch
push	0
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_100514B5
pop	esi
retn
push	edi
mov	edi, [esp+8+arg_0]
push	edi
call	sub_100512F0
add	esp, 4
mov	[esi+4], eax
test	eax, eax
jnz	short loc_100514D8
push	esi
call	sub_10050550
add	esp, 4
pop	edi
xor	eax, eax
pop	esi
retn
mov	eax, [eax+8]
mov	[esi+8], eax
cmp	dword ptr [edi+4], 0
jz	short loc_10051504
call	ds:PR_NewLock
mov	[esi], eax
test	eax, eax
jnz	short loc_10051504
mov	ecx, [esi+4]
push	ecx
call	sub_10051450
push	esi
call	sub_10050550
add	esp, 8
xor	esi, esi
			
pop	edi
mov	eax, esi
pop	esi
retn
align 10h
			
push	ebx
mov	ebx, ds:PR_DestroyLock
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
mov	eax, [edi]
test	eax, eax
jz	short loc_10051529
push	eax
call	ebx 
add	esp, 4
mov	esi, [edi+4]
cmp	dword ptr [esi+18h], 0
jnz	short loc_1005153D
push	0
push	esi
call	sub_10051040
add	esp, 8
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1005154A
push	eax
call	ebx 
add	esp, 4
cmp	dword ptr [esi+18h], 0
jz	short loc_1005155D
mov	eax, [esi]
push	eax
call	sub_10050930
add	esp, 4
xor	esi, esi
push	esi
call	sub_10050550
push	edi
call	sub_10050550
add	esp, 8
pop	edi
pop	esi
pop	ebx
retn
push	esi
mov	esi, [esp+4+arg_0]
mov	edx, [esi+4]
xor	eax, eax
xor	ecx, ecx
test	edx, edx
jz	short loc_10051592
mov	esi, [esi]
push	edi
movzx	edi, byte ptr [esi+ecx]
rol	eax, 4
inc	ecx
xor	eax, edi
cmp	ecx, edx
jb	short loc_10051583
pop	edi
pop	esi
retn
align 10h
push	ecx
mov	ecx, [esp+0Ch]
mov	edx, [esp+8]
lea	eax, [esp]
push	eax
push	ecx
push	edx
call	sub_10050D00
add	esp, 10h
retn
align 10h
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_0]
test	edi, edi
jz	short loc_100515CF
xor	ebx, ebx
jmp	short loc_100515DB
call	sub_100507B0
mov	edi, eax
mov	ebx, 1
push	14h
push	edi
call	sub_100504B0
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_1005162F
call	ds:PR_NewLock
mov	[esi+8], eax
test	eax, eax
jz	short loc_1005162F
mov	eax, [esp+0Ch+arg_10]
mov	ecx, [esp+0Ch+arg_C]
mov	edx, [esp+0Ch+arg_8]
push	edi
push	offset off_100BA678
push	eax
mov	eax, [esp+18h+arg_4]
push	ecx
push	edx
push	eax
call	PL_NewHashTable
add	esp, 18h
mov	[esi+0Ch], eax
test	eax, eax
jnz	short loc_1005163E
mov	ecx, [esi+8]
push	ecx
call	ds:PR_DestroyLock
add	esp, 4
			
push	esi
call	sub_10050550
add	esp, 4
pop	edi
pop	esi
xor	eax, eax
pop	ebx
retn
mov	[esi], edi
pop	edi
mov	[esi+4], ebx
mov	dword ptr [esi+10h], 0
mov	eax, esi
pop	esi
pop	ebx
retn
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	offset loc_1009FF5E
push	offset loc_1009FF5E
push	offset PL_HashString
push	eax
push	ecx
call	sub_100515C0
add	esp, 14h
retn
align 10h
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_0]
push	offset PL_CompareValues
push	offset loc_100515A0
push	offset sub_10051570
push	eax
push	ecx
call	sub_100515C0
add	esp, 14h
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	eax
call	ds:PR_DestroyLock
mov	ecx, [esi+0Ch]
push	ecx
call	PL_HashTableDestroy
add	esp, 8
cmp	dword ptr [esi+4], 0
jz	short loc_100516DD
mov	edx, [esi]
pop	esi
mov	[esp+arg_0], edx
jmp	sub_10050840
push	esi
call	sub_10050550
add	esp, 4
pop	esi
retn
align 10h
			
push	ebx
push	esi
mov	esi, [esp+8+arg_0]
mov	eax, [esi+8]
push	edi
push	eax
or	edi, 0FFFFFFFFh
call	ds:PR_Lock
mov	ebx, [esp+10h+arg_8]
mov	ecx, [esp+10h+arg_4]
mov	edx, [esi+0Ch]
push	ebx
push	ecx
push	edx
call	PL_HashTableAdd
add	esp, 10h
test	eax, eax
jnz	short loc_1005173F
mov	eax, ds:dword_100A7DE0
push	eax
call	sub_10050AF0
mov	edx, [esi+8]
add	esp, 4
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
cmp	[eax+0Ch], ebx
jz	short loc_10051766
mov	ecx, ds:dword_100A7E5C
push	ecx
call	sub_10050AF0
mov	edx, [esi+8]
add	esp, 4
push	edx
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
mov	edx, [esi+8]
inc	dword ptr [esi+10h]
push	edx
xor	edi, edi
call	ds:PR_Unlock
add	esp, 4
mov	eax, edi
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	eax
call	ds:PR_Lock
mov	ecx, [esp+8+arg_4]
mov	edx, [esi+0Ch]
push	ecx
push	edx
call	PL_HashTableRemove
add	esp, 0Ch
test	eax, eax
jz	short loc_100517A7
dec	dword ptr [esi+10h]
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 4
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	edi
push	eax
call	ds:PR_Lock
mov	ecx, [esi+8]
mov	edi, [esi+10h]
push	ecx
call	ds:PR_Unlock
add	esp, 8
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+8]
push	edi
push	eax
call	ds:PR_Lock
mov	ecx, [esp+0Ch+arg_4]
mov	edx, [esi+0Ch]
push	ecx
push	edx
call	PL_HashTableLookup
mov	edi, eax
mov	eax, [esi+8]
push	eax
call	ds:PR_Unlock
add	esp, 10h
mov	eax, edi
pop	edi
pop	esi
retn
align 10h
mov	eax, [esp+0Ch]
mov	ecx, [eax+4]
push	ecx
mov	ecx, [esp+8]
mov	edx, [ecx+0Ch]
mov	ecx, [ecx+8]
push	edx
mov	edx, [eax]
push	ecx
call	edx
add	esp, 0Ch
xor	eax, eax
retn
align 10h
			
sub	esp, 8
mov	eax, [esp+8+arg_4]
mov	ecx, [esp+8+arg_8]
push	esi
mov	esi, [esp+0Ch+arg_0]
mov	edx, [esi+8]
push	edx
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_4], ecx
call	ds:PR_Lock
mov	ecx, [esi+0Ch]
lea	eax, [esp+10h+var_8]
push	eax
push	offset loc_10051830
push	ecx
call	PL_HashTableEnumerateEntries
mov	edx, [esi+8]
push	edx
call	ds:PR_Unlock
add	esp, 14h
pop	esi
add	esp, 8
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_certsel_5 
mov	[esp+38h+var_C], 10h
cmp	edi, ebx
jnz	short loc_100518FD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	0Fh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10051926
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2EAh
jmp	short loc_10051984
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10051955
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10051952
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10051984
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10051981
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	10h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 3Ch
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_3C], ebp
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_2C], offset aPkix_certsel_7 
mov	[esp+48h+var_C], 10h
cmp	eax, ebp
jz	loc_10051B99
mov	edi, [esp+48h+arg_0]
cmp	edi, ebp
jz	loc_10051B99
mov	esi, [esp+48h+arg_4]
cmp	esi, ebp
jz	loc_10051B99
push	ebx
lea	ecx, [esp+4Ch+var_38]
push	ecx
push	eax
mov	dword ptr [esi], 1
call	sub_10054A60
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_10051A29
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 0F2h
jmp	loc_10051B25
cmp	[esp+48h+var_38], 0FFFFFFFFh
jz	loc_10051B25
push	ebx
lea	eax, [esp+4Ch+var_3C]
push	eax
push	edi
call	sub_1007F4F0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_10051A5F
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 7Ch
jmp	loc_10051B25
mov	eax, [esp+48h+var_3C]
cmp	eax, ebp
jz	short loc_10051ABE
push	ebx
lea	edx, [esp+4Ch+var_34]
push	edx
push	eax
call	sub_1007BDD0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_10051A92
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 1Ah
jmp	loc_10051B25
mov	edx, [esp+48h+var_3C]
push	ebx
lea	ecx, [esp+4Ch+var_30]
push	ecx
push	edx
call	sub_1007BE50
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_10051ABE
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 1Bh
jmp	short loc_10051B25
			
mov	ecx, [esp+48h+var_38]
mov	edx, [esp+48h+var_34]
cmp	ecx, ebp
jl	short loc_10051AE9
cmp	[esp+48h+var_3C], ebp
jz	loc_10051B6F
cmp	edx, ebp
jz	loc_10051B6F
mov	eax, [esp+48h+var_30]
cmp	eax, 0FFFFFFFFh
jz	short loc_10051AE9
cmp	eax, ecx
jl	short loc_10051AF3
			
cmp	ecx, 0FFFFFFFEh
jnz	short loc_10051B25
cmp	edx, 1
jnz	short loc_10051B25
mov	[esi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10051B15
mov	ecx, [esp+48h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	339h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_1C], 339h
mov	[esp+48h+var_18], 1
			
mov	eax, [esp+48h+var_3C]
cmp	eax, ebp
jz	short loc_10051B56
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10051B52
push	ebx
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_3C], ebp
push	ebx
push	1
lea	eax, [esp+50h+var_2C]
push	10h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
			
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10051B8F
mov	edx, [esp+48h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0A7h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_1C], 0A7h
jmp	short loc_10051B1D
			
push	ebx
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
align 10h
sub	esp, 48h
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	[esp+54h+var_34], ebp
mov	[esp+54h+var_30], ebp
mov	[esp+54h+var_38], ebp
mov	[esp+54h+var_48], ebp
mov	[esp+54h+var_44], ebp
mov	[esp+54h+var_40], ebp
mov	[esp+54h+var_3C], ebp
mov	[esp+54h+var_2C], offset aPkix_certsel_8 
mov	[esp+54h+var_C], 10h
cmp	eax, ebp
jz	loc_10051F54
mov	esi, [esp+54h+arg_0]
cmp	esi, ebp
jz	loc_10051F54
mov	edi, [esp+54h+arg_4]
cmp	edi, ebp
jz	loc_10051F54
push	ebx
lea	ecx, [esp+58h+var_48]
push	ecx
push	eax
call	sub_10054B80
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10051C5F
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 0FCh
jmp	loc_10051E77
cmp	[esp+54h+var_48], ebp
jz	loc_10051EA8
push	ebx
lea	eax, [esp+58h+var_44]
push	eax
push	esi
call	sub_1007F720
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10051C94
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 86h
jmp	loc_10051E77
cmp	[esp+54h+var_44], ebp
jnz	short loc_10051CB6
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	loc_10051E67
mov	edx, [esp+54h+var_C]
push	ebx
push	2
push	edx
jmp	loc_10051E58
mov	ecx, [esp+54h+var_48]
push	ebx
lea	eax, [esp+58h+var_34]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10051CE5
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 284h
jmp	loc_10051E77
cmp	[esp+54h+var_34], ebp
jbe	loc_10051E77
mov	ecx, [esp+54h+var_44]
push	ebx
lea	eax, [esp+58h+var_30]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10051D1E
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 284h
jmp	loc_10051E77
mov	eax, [esp+54h+var_38]
xor	esi, esi
cmp	eax, ebp
jnz	loc_10051E77
lea	esp, [esp+0]
cmp	esi, [esp+54h+var_30]
jnb	loc_10051E41
mov	ecx, [esp+54h+var_44]
push	ebx
lea	eax, [esp+58h+var_40]
push	eax
push	esi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_10051E0E
mov	eax, [esp+54h+var_40]
push	ebx
lea	edx, [esp+58h+var_3C]
push	edx
push	eax
call	sub_100838F0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_10051E1F
mov	edx, [esp+54h+var_3C]
mov	eax, [esp+54h+var_48]
push	ebx
lea	ecx, [esp+58h+var_38]
push	ecx
push	edx
push	eax
call	sub_10077130
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_10051E30
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jz	short loc_10051DCE
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10051DCA
push	ebx
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_40], ebp
mov	eax, [esp+54h+var_3C]
cmp	eax, ebp
jz	short loc_10051DFF
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10051DFB
push	ebx
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_3C], ebp
mov	eax, [esp+54h+var_38]
inc	esi
cmp	eax, ebp
jz	loc_10051D30
jmp	short loc_10051E77
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 282h
jmp	short loc_10051E77
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 0A9h
jmp	short loc_10051E77
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 27Ch
jmp	short loc_10051E77
cmp	eax, ebp
jnz	short loc_10051E77
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10051E67
mov	ecx, [esp+54h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	0C5h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+54h+var_1C], 0C5h
mov	[esp+54h+var_18], 1
			
mov	eax, [esp+54h+var_48]
cmp	eax, ebp
jz	short loc_10051EA8
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10051EA4
push	ebx
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_48], ebp
			
mov	eax, [esp+54h+var_44]
cmp	eax, ebp
jz	short loc_10051ED9
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10051ED5
push	ebx
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_44], ebp
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jz	short loc_10051F0A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10051F06
push	ebx
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_40], ebp
mov	eax, [esp+54h+var_3C]
cmp	eax, ebp
jz	short loc_10051F3B
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10051F37
push	ebx
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_3C], ebp
push	ebx
push	1
lea	eax, [esp+5Ch+var_2C]
push	10h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 48h
retn
			
push	ebx
push	1
lea	ecx, [esp+5Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 48h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_certsel_9 
mov	[esp+3Ch+var_C], 10h
test	eax, eax
jz	loc_10052084
test	ebp, ebp
jz	loc_10052084
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_10052084
push	ebx
lea	ecx, [esp+40h+var_30]
push	ecx
push	eax
call	sub_10054E30
mov	ecx, [esp+48h+var_30]
xor	esi, esi
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
cmp	eax, esi
jz	short loc_10051FFC
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 0F4h
jmp	short loc_10052026
cmp	ecx, esi
jz	short loc_10052026
push	ebx
push	ecx
push	ebp
call	sub_100803A0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
cmp	eax, esi
jz	short loc_10052022
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 62h
mov	ecx, [esp+3Ch+var_30]
			
cmp	[esp+3Ch+var_18], esi
jnz	short loc_1005203C
cmp	eax, esi
jnz	short loc_1005203C
cmp	[esp+3Ch+var_14], esi
jnz	short loc_1005203C
cmp	[esp+3Ch+var_4], esi
jz	short loc_1005203E
			
mov	[edi], esi
cmp	ecx, esi
jz	short loc_1005206B
push	ebx
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, esi
jz	short loc_10052067
push	ebx
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_30], esi
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	10h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_certse_10 
mov	[esp+3Ch+var_C], 10h
test	eax, eax
jz	loc_100521B5
test	ebp, ebp
jz	loc_100521B5
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_100521B5
push	ebx
lea	ecx, [esp+40h+var_30]
push	ecx
push	eax
call	sub_10055010
mov	ecx, [esp+48h+var_30]
xor	esi, esi
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
cmp	eax, esi
jz	short loc_1005212C
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 0FAh
jmp	short loc_10052157
cmp	ecx, esi
jz	short loc_10052157
push	ebx
push	esi
push	ecx
push	ebp
call	sub_10080A70
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, esi
jz	short loc_10052153
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 61h
mov	ecx, [esp+3Ch+var_30]
			
cmp	[esp+3Ch+var_18], esi
jnz	short loc_1005216D
cmp	eax, esi
jnz	short loc_1005216D
cmp	[esp+3Ch+var_14], esi
jnz	short loc_1005216D
cmp	[esp+3Ch+var_4], esi
jz	short loc_1005216F
			
mov	[edi], esi
cmp	ecx, esi
jz	short loc_1005219C
push	ebx
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, esi
jz	short loc_10052198
push	ebx
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_30], esi
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	10h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 38h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_2C], offset aPkix_certse_11 
mov	[esp+44h+var_C], 10h
cmp	eax, ebp
jz	loc_1005237E
mov	esi, [esp+44h+arg_0]
cmp	esi, ebp
jz	loc_1005237E
mov	edi, [esp+44h+arg_4]
cmp	edi, ebp
jz	loc_1005237E
push	ebx
lea	ecx, [esp+48h+var_38]
push	ecx
push	eax
call	sub_100550E0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1005225F
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 0FBh
jmp	loc_10052303
cmp	[esp+44h+var_38], ebp
jz	loc_10052303
push	ebx
lea	eax, [esp+48h+var_34]
push	eax
push	esi
call	sub_100808B0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052291
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 84h
jmp	short loc_10052303
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	loc_10052334
push	ebx
lea	edx, [esp+48h+var_30]
push	edx
push	eax
mov	eax, [esp+50h+var_38]
push	eax
call	sub_1008CA20
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100522CA
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 9Ch
jmp	short loc_10052303
mov	esi, 1
cmp	[esp+44h+var_30], esi
jz	short loc_10052303
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_100522F7
mov	edx, [esp+44h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0C4h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], esi
mov	[esp+44h+var_1C], 0C4h
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_10052334
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10052330
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
			
mov	eax, [esp+44h+var_38]
cmp	eax, ebp
jz	short loc_10052365
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10052361
push	ebx
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_38], ebp
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	10h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 44h
push	ebp
mov	ebp, [esp+48h+arg_0]
push	esi
xor	eax, eax
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
mov	edx, 1
rep movsd
mov	[esp+50h+var_44], eax
mov	[esp+50h+var_40], eax
mov	[esp+50h+arg_0], eax
mov	[esp+50h+var_38], eax
mov	[esp+50h+var_34], edx
mov	[esp+50h+var_3C], eax
mov	[esp+50h+var_2C], offset aPkix_certse_12 
mov	[esp+50h+var_C], 10h
cmp	ebp, eax
jz	loc_100526AF
mov	esi, [esp+50h+arg_4]
cmp	esi, eax
jz	loc_100526AF
cmp	[esp+50h+arg_8], eax
jz	loc_100526AF
push	ebx
lea	eax, [esp+54h+var_34]
push	eax
push	ebp
call	sub_10055390
xor	edi, edi
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, edi
jz	short loc_10052444
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 0F9h
jmp	loc_100525DB
push	ebx
lea	edx, [esp+54h+var_44]
push	edx
push	ebp
call	sub_100552C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, edi
jz	short loc_1005246F
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 0FEh
jmp	loc_100525DB
cmp	[esp+50h+var_44], edi
jz	loc_100525DB
push	ebx
lea	ecx, [esp+54h+var_40]
push	ecx
push	esi
call	sub_1007DFE0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, edi
jz	short loc_100524A4
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 8Bh
jmp	loc_100525DB
cmp	[esp+50h+var_40], edi
jnz	short loc_100524CA
mov	eax, [esp+50h+arg_8]
mov	[eax], edi
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	loc_100525CB
mov	ecx, [esp+50h+var_C]
push	ebx
push	2
push	ecx
jmp	loc_100525BC
mov	eax, [esp+50h+var_44]
push	ebx
lea	edx, [esp+54h+var_30]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, edi
jz	short loc_100524F9
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 284h
jmp	loc_100525DB
mov	eax, [esp+50h+var_30]
xor	esi, esi
cmp	eax, edi
jbe	loc_1005259F
mov	eax, [esp+50h+var_44]
push	ebx
lea	edx, [esp+54h+arg_0]
push	edx
push	esi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, edi
jnz	loc_10052687
mov	edx, [esp+50h+arg_0]
mov	eax, [esp+50h+var_40]
push	ebx
lea	ecx, [esp+54h+var_38]
push	ecx
push	edx
push	eax
call	sub_10077130
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, edi
jnz	loc_1005269B
mov	eax, [esp+50h+arg_0]
cmp	eax, edi
jz	short loc_1005257C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, edi
jz	short loc_10052578
push	ebx
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], edi
mov	[esp+50h+arg_0], edi
mov	eax, 1
cmp	[esp+50h+var_38], eax
jnz	short loc_10052591
cmp	[esp+50h+var_34], edi
jz	short loc_100525DB
add	[esp+50h+var_3C], eax
add	esi, eax
mov	eax, [esp+50h+var_30]
cmp	esi, eax
jb	loc_10052507
cmp	[esp+50h+var_3C], eax
jz	short loc_100525DB
mov	ecx, [esp+50h+arg_8]
mov	[ecx], edi
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_100525CB
mov	edx, [esp+50h+var_C]
push	ebx
push	2
push	edx
push	edi
push	0C6h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+50h+var_1C], 0C6h
mov	[esp+50h+var_18], 1
			
mov	eax, [esp+50h+arg_0]
cmp	eax, edi
jz	short loc_1005260C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, edi
jz	short loc_10052608
push	ebx
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], edi
mov	[esp+50h+arg_0], edi
mov	eax, [esp+50h+var_40]
cmp	eax, edi
jz	short loc_1005263D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, edi
jz	short loc_10052639
push	ebx
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], edi
mov	[esp+50h+var_40], edi
mov	eax, [esp+50h+var_44]
cmp	eax, edi
jz	short loc_1005266E
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, edi
jz	short loc_1005266A
push	ebx
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], edi
mov	[esp+50h+var_44], edi
push	ebx
push	1
lea	eax, [esp+58h+var_2C]
push	10h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 283h
jmp	loc_100525DB
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 27Ch
jmp	loc_100525DB
			
push	ebx
push	edx
lea	ecx, [esp+58h+var_2C]
push	1Fh
push	ecx
mov	[esp+60h+var_18], edx
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
align 10h
sub	esp, 40h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_30], ebp
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_2C], offset aPkix_certse_13 
mov	[esp+4Ch+var_C], 10h
cmp	eax, ebp
jz	loc_1005295E
mov	esi, [esp+4Ch+arg_0]
cmp	esi, ebp
jz	loc_1005295E
mov	edi, [esp+4Ch+arg_4]
cmp	edi, ebp
jz	loc_1005295E
push	ebx
lea	ecx, [esp+50h+var_3C]
push	ecx
push	eax
call	sub_10055410
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10052767
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 0F5h
jmp	loc_100528B2
cmp	[esp+4Ch+var_3C], ebp
jz	loc_100528B2
push	ebx
lea	eax, [esp+50h+var_38]
push	eax
push	esi
call	sub_1007F160
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005279C
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 81h
jmp	loc_100528B2
cmp	[esp+4Ch+var_38], ebp
jz	loc_100528B2
mov	eax, [esp+4Ch+var_3C]
push	ebx
lea	edx, [esp+50h+var_34]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_100527D5
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 284h
jmp	loc_100528B2
xor	esi, esi
cmp	[esp+4Ch+var_34], ebp
jbe	loc_100528B2
mov	eax, [esp+4Ch+var_3C]
push	ebx
lea	edx, [esp+50h+var_40]
push	edx
push	esi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	short loc_1005285E
mov	edx, [esp+4Ch+var_40]
mov	eax, [esp+4Ch+var_38]
push	ebx
lea	ecx, [esp+50h+var_30]
push	ecx
push	edx
push	eax
call	sub_10077130
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	short loc_1005286F
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebp
jz	short loc_1005284E
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1005284A
push	ebx
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_40], ebp
cmp	[esp+4Ch+var_30], 1
jnz	short loc_10052880
inc	esi
cmp	esi, [esp+4Ch+var_34]
jb	short loc_100527E1
jmp	short loc_100528B2
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 283h
jmp	short loc_100528B2
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 27Ch
jmp	short loc_100528B2
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_100528A2
mov	ecx, [esp+4Ch+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	0C0h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 0C0h
			
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebp
jz	short loc_100528E3
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_100528DF
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_40], ebp
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_10052914
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10052910
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebp
jz	short loc_10052945
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10052941
push	ebx
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_38], ebp
push	ebx
push	1
lea	edx, [esp+54h+var_2C]
push	10h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
			
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_certse_14 
mov	[esp+3Ch+var_C], 10h
test	eax, eax
jz	loc_10052A66
test	ebp, ebp
jz	loc_10052A66
mov	esi, [esp+3Ch+arg_4]
test	esi, esi
jz	loc_10052A66
push	ebx
lea	ecx, [esp+40h+var_30]
push	ecx
push	eax
call	sub_100555D0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10052A06
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 0F7h
jmp	short loc_10052A30
mov	ecx, [esp+3Ch+var_30]
test	ecx, ecx
jz	short loc_10052A30
push	ebx
push	ecx
push	ebp
call	sub_10080770
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10052A30
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 0E1h
			
cmp	[esp+3Ch+var_18], 0
jnz	short loc_10052A47
test	eax, eax
jnz	short loc_10052A47
cmp	[esp+3Ch+var_14], eax
jnz	short loc_10052A47
cmp	[esp+3Ch+var_4], eax
jz	short loc_10052A4D
			
mov	dword ptr [esi], 0
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	10h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 38h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_certse_15 
mov	[esp+44h+var_C], 10h
cmp	eax, ebp
jz	loc_10052C29
mov	esi, [esp+44h+arg_0]
cmp	esi, ebp
jz	loc_10052C29
mov	edi, [esp+44h+arg_4]
cmp	edi, ebp
jz	loc_10052C29
push	ebx
lea	ecx, [esp+48h+var_38]
push	ecx
push	eax
call	sub_100558F0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052B0F
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 100h
jmp	loc_10052BAE
cmp	[esp+44h+var_38], ebp
jz	loc_10052BDF
push	ebx
lea	eax, [esp+48h+var_34]
push	eax
push	esi
call	sub_1007EF10
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052B41
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 8Fh
jmp	short loc_10052BAE
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_10052BAE
push	ebx
lea	edx, [esp+48h+var_30]
push	edx
push	eax
mov	eax, [esp+50h+var_38]
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052B76
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 2CBh
jmp	short loc_10052BAE
cmp	[esp+44h+var_30], ebp
jnz	short loc_10052BAE
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10052B9E
mov	edx, [esp+44h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0C7h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 0C7h
			
mov	eax, [esp+44h+var_38]
cmp	eax, ebp
jz	short loc_10052BDF
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10052BDB
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_38], ebp
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_10052C10
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10052C0C
push	ebx
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	10h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 38h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_certse_16 
mov	[esp+44h+var_C], 10h
cmp	eax, ebp
jz	loc_10052E29
mov	esi, [esp+44h+arg_0]
cmp	esi, ebp
jz	loc_10052E29
mov	edi, [esp+44h+arg_4]
cmp	edi, ebp
jz	loc_10052E29
push	ebx
lea	ecx, [esp+48h+var_38]
push	ecx
push	eax
call	sub_10055AD0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052CDF
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 0F1h
jmp	loc_10052DAE
cmp	[esp+44h+var_38], ebp
jz	loc_10052DDF
push	ebx
lea	eax, [esp+48h+var_34]
push	eax
push	esi
call	sub_1007ECB0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052D14
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 7Ah
jmp	loc_10052DAE
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jnz	short loc_10052D48
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10052D3E
mov	edx, [esp+44h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0B7h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
jmp	short loc_10052DA6
mov	edx, [esp+44h+var_38]
push	ebx
lea	ecx, [esp+48h+var_30]
push	ecx
push	eax
push	edx
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052D75
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 2CBh
jmp	short loc_10052DAE
mov	esi, 1
cmp	[esp+44h+var_30], esi
jz	short loc_10052DAE
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10052DA2
mov	ecx, [esp+44h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	0B7h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], esi
mov	[esp+44h+var_1C], 0B7h
			
mov	eax, [esp+44h+var_38]
cmp	eax, ebp
jz	short loc_10052DDF
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10052DDB
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_38], ebp
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_10052E10
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10052E0C
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
push	ebx
push	1
lea	ecx, [esp+4Ch+var_2C]
push	10h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 38h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_certse_17 
mov	[esp+44h+var_C], 10h
cmp	eax, ebp
jz	loc_10053027
mov	edi, [esp+44h+arg_0]
cmp	edi, ebp
jz	loc_10053027
mov	esi, [esp+44h+arg_4]
cmp	esi, ebp
jz	loc_10053027
push	ebx
lea	ecx, [esp+48h+var_38]
push	ecx
push	eax
call	sub_10055C70
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052EDF
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 101h
jmp	loc_10052FAC
cmp	[esp+44h+var_38], ebp
jz	loc_10052FDD
push	ebx
lea	eax, [esp+48h+var_34]
push	eax
push	edi
call	sub_1007E5B0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052F14
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 90h
jmp	loc_10052FAC
cmp	[esp+44h+var_34], ebp
jz	short loc_10052F46
mov	[esi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10052F3C
mov	edx, [esp+44h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0C8h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
jmp	short loc_10052FA4
mov	ecx, [esp+44h+var_38]
push	ebx
lea	eax, [esp+48h+var_30]
push	eax
push	ebp
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10052F73
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 2CBh
jmp	short loc_10052FAC
mov	edi, 1
cmp	[esp+44h+var_30], edi
jz	short loc_10052FAC
mov	[esi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10052FA0
mov	ecx, [esp+44h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	0C8h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], edi
mov	[esp+44h+var_1C], 0C8h
			
mov	eax, [esp+44h+var_38]
cmp	eax, ebp
jz	short loc_10052FDD
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10052FD9
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_38], ebp
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_1005300E
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1005300A
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
push	ebx
push	1
lea	ecx, [esp+4Ch+var_2C]
push	10h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
sub	esp, 38h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_certse_18 
mov	[esp+44h+var_C], 10h
cmp	eax, ebp
jz	loc_10053219
mov	esi, [esp+44h+arg_0]
cmp	esi, ebp
jz	loc_10053219
mov	edi, [esp+44h+arg_4]
cmp	edi, ebp
jz	loc_10053219
push	ebx
lea	ecx, [esp+48h+var_38]
push	ecx
push	eax
call	sub_10055BA0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100530CF
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 102h
jmp	loc_1005319E
cmp	[esp+44h+var_38], ebp
jz	loc_100531CF
push	ebx
lea	eax, [esp+48h+var_34]
push	eax
push	esi
call	sub_1007E7B0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10053104
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 91h
jmp	loc_1005319E
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jnz	short loc_10053138
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1005312E
mov	edx, [esp+44h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0C9h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
jmp	short loc_10053196
mov	edx, [esp+44h+var_38]
push	ebx
lea	ecx, [esp+48h+var_30]
push	ecx
push	eax
push	edx
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10053165
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 2CBh
jmp	short loc_1005319E
mov	esi, 1
cmp	[esp+44h+var_30], esi
jz	short loc_1005319E
mov	[edi], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10053192
mov	ecx, [esp+44h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	0C9h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], esi
mov	[esp+44h+var_1C], 0C9h
			
mov	eax, [esp+44h+var_38]
cmp	eax, ebp
jz	short loc_100531CF
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_100531CB
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_38], ebp
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_10053200
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_100531FC
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
push	ebx
push	1
lea	ecx, [esp+4Ch+var_2C]
push	10h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 60h
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+6Ch+var_2C]
rep movsd
mov	edi, [esp+6Ch+arg_0]
mov	eax, 1
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_48], ebp
mov	[esp+6Ch+var_58], ebp
mov	[esp+6Ch+var_44], ebp
mov	[esp+6Ch+var_54], ebp
mov	[esp+6Ch+var_40], ebp
mov	[esp+6Ch+var_3C], ebp
mov	[esp+6Ch+var_38], 0FFFFFFFFh
mov	[esp+6Ch+var_34], ebp
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+var_2C], offset aPkix_certsel_6 
mov	[esp+6Ch+var_C], 10h
cmp	edi, ebp
jz	loc_10053B1B
mov	esi, [esp+6Ch+arg_4]
cmp	esi, ebp
jz	loc_10053B1B
mov	eax, [edi+4]
push	ebx
mov	ebx, [esp+70h+arg_8]
cmp	eax, ebp
jz	short loc_10053301
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10053301
push	ebx
push	eax
lea	eax, [esp+78h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	edi, ebp
jmp	loc_10053950
			
mov	edi, [edi+4]
push	ebx
lea	ecx, [esp+74h+var_30]
push	ecx
push	edi
call	sub_10055D40
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005332F
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 0F8h
jmp	loc_10053950
cmp	edi, ebp
jz	loc_10053950
push	ebx
lea	eax, [esp+74h+var_38]
push	eax
push	edi
call	sub_10055870
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053362
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 103h
jmp	loc_10053950
cmp	[esp+70h+var_38], 0FFFFFFFFh
jz	short loc_100533CF
push	ebx
lea	edx, [esp+74h+var_34]
push	edx
push	esi
call	sub_1007D9B0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053390
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 93h
jmp	loc_1005394C
mov	ecx, [esp+70h+var_38]
cmp	ecx, [esp+70h+var_34]
jz	short loc_100533CF
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_100533BA
mov	edx, [esp+70h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0BFh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 0BFh
jmp	loc_10053950
			
push	ebx
lea	eax, [esp+74h+var_5C]
push	eax
push	edi
call	sub_10054880
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100533FA
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0FFh
jmp	loc_10053950
cmp	[esp+70h+var_5C], ebp
jz	loc_100534AD
push	ebx
lea	edx, [esp+74h+var_4C]
push	edx
push	esi
call	sub_1007DC60
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005342B
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 8Dh
jmp	loc_1005394C
mov	eax, [esp+70h+var_4C]
cmp	eax, ebp
jz	short loc_1005349A
mov	edx, [esp+70h+var_5C]
push	ebx
lea	ecx, [esp+74h+var_60]
push	ecx
push	eax
push	edx
call	sub_1008FF20
add	esp, 10h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005345F
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 435h
jmp	loc_1005394C
cmp	[esp+70h+var_60], ebp
jnz	short loc_100534AD
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10053485
mov	ecx, [esp+70h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	0BEh
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 0BEh
jmp	loc_10053950
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10053485
mov	edx, [esp+70h+var_C]
push	ebx
push	2
push	edx
jmp	short loc_10053476
			
push	ebx
lea	eax, [esp+74h+var_58]
push	eax
push	edi
call	sub_100556D0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100534D8
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0F6h
jmp	loc_10053950
cmp	[esp+70h+var_58], ebp
jz	loc_10053578
push	ebx
lea	edx, [esp+74h+var_48]
push	edx
push	esi
call	sub_1007DE20
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053509
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 83h
jmp	loc_1005394C
mov	edx, [esp+70h+var_48]
mov	eax, [esp+70h+var_58]
push	ebx
lea	ecx, [esp+74h+var_60]
push	ecx
push	edx
push	eax
call	sub_1008FF20
add	esp, 10h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005353D
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 435h
jmp	loc_10053950
cmp	[esp+70h+var_60], ebp
jnz	short loc_10053578
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10053563
mov	edx, [esp+70h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0BBh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 0BBh
jmp	loc_10053950
			
push	ebx
lea	eax, [esp+74h+var_54]
push	eax
push	edi
call	sub_100557A0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100535A3
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0FDh
jmp	loc_10053950
cmp	[esp+70h+var_54], ebp
jz	loc_10053643
push	ebx
lea	edx, [esp+74h+var_44]
push	edx
push	esi
call	sub_1007DAA0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100535D4
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 8Ah
jmp	loc_1005394C
mov	edx, [esp+70h+var_44]
mov	eax, [esp+70h+var_54]
push	ebx
lea	ecx, [esp+74h+var_60]
push	ecx
push	edx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053608
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 2CBh
jmp	loc_10053950
cmp	[esp+70h+var_60], ebp
jnz	short loc_10053643
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1005362E
mov	edx, [esp+70h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	0BDh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 0BDh
jmp	loc_10053950
			
push	ebx
lea	eax, [esp+74h+var_40]
push	eax
push	edi
call	sub_10054C50
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005366E
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0F3h
jmp	loc_10053950
mov	eax, [esp+70h+var_40]
cmp	eax, ebp
jz	short loc_100536D9
push	ebx
lea	edx, [esp+74h+var_60]
push	edx
push	esi
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005369E
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 2CBh
jmp	loc_1005394C
cmp	[esp+70h+var_60], ebp
jnz	short loc_100536D9
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_100536C4
mov	ecx, [esp+70h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	0BCh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 0BCh
jmp	loc_10053950
			
push	ebx
lea	edx, [esp+74h+var_3C]
push	edx
push	edi
call	sub_10054E30
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053700
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0F4h
jmp	loc_1005394C
mov	eax, [esp+70h+var_3C]
cmp	eax, ebp
jz	short loc_1005372F
push	ebx
push	eax
push	esi
call	sub_100803A0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005372F
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 62h
jmp	loc_10053950
			
lea	edx, [esp+70h+var_60]
push	edx
push	esi
mov	eax, edi
call	sub_100519A0
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053757
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0B8h
jmp	loc_1005394C
lea	ecx, [esp+70h+var_60]
push	ecx
push	esi
mov	eax, edi
call	sub_10051BD0
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053783
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 0C5h
jmp	loc_10053950
lea	eax, [esp+70h+var_60]
push	eax
push	esi
mov	eax, edi
call	sub_10051F80
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100537AF
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0BAh
jmp	loc_10053950
lea	edx, [esp+70h+var_60]
push	edx
push	esi
mov	eax, edi
call	sub_100520B0
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100537D7
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0C3h
jmp	loc_1005394C
lea	ecx, [esp+70h+var_60]
push	ecx
push	esi
mov	eax, edi
call	sub_100521E0
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053803
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 0C4h
jmp	loc_10053950
lea	eax, [esp+70h+var_60]
push	eax
push	esi
push	edi
call	sub_100523B0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005382E
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0C6h
jmp	loc_10053950
xor	edx, edx
cmp	[esp+70h+var_30], ebp
push	ebx
setz	dl
push	edx
push	esi
call	sub_100805E0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_1005385A
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0E0h
jmp	loc_1005394C
lea	ecx, [esp+70h+var_60]
push	ecx
push	esi
mov	eax, edi
call	sub_100526E0
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053886
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 0C0h
jmp	loc_10053950
lea	eax, [esp+70h+var_60]
push	eax
push	esi
mov	eax, edi
call	sub_10052990
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100538B2
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0C2h
jmp	loc_10053950
lea	edx, [esp+70h+var_60]
push	edx
push	esi
mov	eax, edi
call	sub_10052A90
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100538D7
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0C7h
jmp	short loc_1005394C
lea	ecx, [esp+70h+var_60]
push	ecx
push	esi
mov	eax, edi
call	sub_10052C60
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053900
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 0B7h
jmp	short loc_10053950
lea	eax, [esp+70h+var_60]
push	eax
push	esi
mov	eax, edi
call	sub_10052E60
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053929
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0C8h
jmp	short loc_10053950
lea	edx, [esp+70h+var_60]
push	edx
push	esi
mov	eax, edi
call	sub_10053050
add	esp, 8
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10053950
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0C9h
			
mov	[esp+70h+var_10], eax
			
mov	eax, [esp+70h+var_4C]
cmp	eax, ebp
jz	short loc_10053981
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_1005397D
push	ebx
push	eax
lea	ecx, [esp+78h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_4C], ebp
mov	eax, [esp+70h+var_5C]
cmp	eax, ebp
jz	short loc_100539B2
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_100539AE
push	ebx
push	eax
lea	edx, [esp+78h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_5C], ebp
mov	eax, [esp+70h+var_48]
cmp	eax, ebp
jz	short loc_100539E3
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_100539DF
push	ebx
push	eax
lea	eax, [esp+78h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_48], ebp
mov	eax, [esp+70h+var_58]
cmp	eax, ebp
jz	short loc_10053A14
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10053A10
push	ebx
push	eax
lea	ecx, [esp+78h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_58], ebp
mov	eax, [esp+70h+var_44]
cmp	eax, ebp
jz	short loc_10053A45
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10053A41
push	ebx
push	eax
lea	edx, [esp+78h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_44], ebp
mov	eax, [esp+70h+var_54]
cmp	eax, ebp
jz	short loc_10053A76
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10053A72
push	ebx
push	eax
lea	eax, [esp+78h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_54], ebp
mov	eax, [esp+70h+var_40]
cmp	eax, ebp
jz	short loc_10053AA7
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10053AA3
push	ebx
push	eax
lea	ecx, [esp+78h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_40], ebp
mov	eax, [esp+70h+var_3C]
cmp	eax, ebp
jz	short loc_10053AD8
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10053AD4
push	ebx
push	eax
lea	edx, [esp+78h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_3C], ebp
cmp	edi, ebp
jz	short loc_10053B01
push	ebx
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10053B01
push	ebx
push	eax
lea	eax, [esp+78h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
			
push	ebx
push	1
lea	ecx, [esp+78h+var_2C]
push	10h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 60h
retn
			
mov	edx, [esp+6Ch+arg_8]
push	edx
push	1
mov	[esp+74h+var_18], eax
lea	eax, [esp+74h+var_2C]
push	1Fh
push	eax
mov	[esp+7Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 60h
retn
align 10h
			
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_certselec 
mov	[esp+3Ch+var_C], 10h
test	ebp, ebp
jnz	short loc_10053BB3
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	edi, [esp+3Ch+arg_C]
push	edi
lea	edx, [esp+40h+var_30]
push	edx
push	0Ch
push	0Fh
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10053BE2
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 12Bh
jmp	short loc_10053C48
mov	eax, [esp+3Ch+arg_0]
test	eax, eax
jz	short loc_10053BF2
mov	ecx, [esp+3Ch+var_30]
mov	[ecx], eax
jmp	short loc_10053BFC
mov	edx, [esp+3Ch+var_30]
mov	dword ptr [edx], offset	sub_10053250
mov	esi, [esp+3Ch+arg_4]
mov	eax, [esp+3Ch+var_30]
mov	dword ptr [eax+4], 0
test	esi, esi
jz	short loc_10053C3A
push	edi
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10053C3A
push	edi
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
jmp	short loc_10053C48
			
mov	edx, [esp+3Ch+var_30]
mov	[edx+8], esi
mov	eax, [esp+3Ch+var_30]
mov	[ebp+0], eax
			
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	10h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certsel_2 
mov	[esp+30h+var_C], 10h
pop	esi
test	ecx, ecx
jz	short loc_10053CC5
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10053CC5
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	10h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_certsel_0 
mov	[esp+38h+var_C], 10h
test	edi, edi
jz	short loc_10053D91
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10053D91
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10053D73
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10053D73
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	10h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+4]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	10h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_certsel_1 
mov	[esp+34h+var_C], 10h
test	edi, edi
jnz	short loc_10053E19
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+4]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_10053E54
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10053E4D
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10053E88
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10053E88
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_10053EAC
			
push	esi
push	edi
mov	[edi+4], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10053EAC
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	10h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 38h
push	ebx
push	ebp
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_2C], offset aPkix_certsel_3 
mov	[esp+48h+var_C], 10h
cmp	[esp+48h+arg_0], ebx
jz	loc_10054189
mov	ebp, [esp+48h+arg_4]
cmp	ebp, ebx
jz	loc_10054189
cmp	[esp+48h+arg_8], ebx
jz	loc_10054189
mov	esi, [esp+48h+arg_C]
lea	eax, [esp+48h+var_38]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	loc_10053FCE
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 27Dh
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_10053F83
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10053F7F
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
			
mov	[esp+48h+var_38], ebx
mov	eax, [esp+48h+var_34]
cmp	eax, ebx
jz	short loc_10053FB4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10053FB0
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_34], ebx
push	esi
push	1
lea	ecx, [esp+50h+var_2C]
push	10h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
push	esi
lea	edx, [esp+4Ch+var_30]
push	edx
push	ebp
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10053FF9
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 284h
jmp	loc_10053F52
xor	edi, edi
cmp	[esp+48h+var_30], ebx
jbe	loc_10054138
push	esi
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	edi
push	ebp
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jnz	loc_10054162
mov	edx, [esp+48h+var_34]
mov	eax, [esp+48h+arg_0]
push	esi
push	edx
push	eax
mov	eax, [eax]
mov	[esp+54h+var_14], ebx
call	eax
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10054082
mov	[esp+48h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_10053F52
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_1005407C
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
xor	eax, eax
mov	[esp+48h+var_28], eax
cmp	[esp+48h+var_18], ebx
jnz	short loc_100540F8
cmp	eax, ebx
jnz	short loc_100540F8
cmp	[esp+48h+var_14], ebx
jnz	short loc_100540F8
cmp	[esp+48h+var_4], ebx
jnz	short loc_100540F8
mov	edx, [esp+48h+var_34]
mov	eax, [esp+48h+var_38]
push	esi
push	edx
push	eax
mov	[esp+54h+var_14], ebx
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_100540F8
mov	[esp+48h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_10053F52
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_100540F4
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_28], ebx
			
mov	eax, [esp+48h+var_34]
mov	[esp+48h+var_14], ebx
cmp	eax, ebx
jz	short loc_1005412D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10054129
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_34], ebx
inc	edi
cmp	edi, [esp+48h+var_30]
jb	loc_10054005
mov	ecx, [esp+48h+var_38]
push	esi
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10054176
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 28Dh
jmp	loc_10053F52
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 283h
jmp	loc_10053F52
mov	eax, [esp+48h+var_38]
mov	ecx, [esp+48h+arg_8]
mov	[esp+48h+var_14], ebx
mov	[ecx], eax
jmp	loc_10053F7F
			
mov	edx, [esp+48h+arg_C]
push	edx
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_certse_19 
mov	[esp+40h+var_C], 10h
test	esi, esi
jz	loc_100542EB
mov	ebp, [esp+40h+arg_4]
test	ebp, ebp
jz	loc_100542EB
mov	edi, [esp+40h+arg_8]
push	edi
push	0Fh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1005422E
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2EAh
jmp	short loc_1005428D
mov	eax, [esi+8]
mov	ecx, [esi]
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
push	ecx
call	sub_10053B50
mov	ebx, [esp+50h+var_30]
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10054260
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 0B1h
jmp	short loc_1005428D
mov	ecx, [esi+4]
push	edi
lea	eax, [ebx+4]
push	eax
push	ecx
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1005428A
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	short loc_1005428D
mov	[ebp+0], ebx
			
cmp	[esp+40h+var_18], 0
jnz	short loc_100542A4
test	eax, eax
jnz	short loc_100542A4
cmp	[esp+40h+var_14], eax
jnz	short loc_100542A4
cmp	[esp+40h+var_4], eax
jz	short loc_100542D1
			
test	ebx, ebx
jz	short loc_100542D1
push	edi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
test	eax, eax
jz	short loc_100542D1
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], 0
			
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	10h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB43C
push	1
mov	[esp+60h+var_50], offset aCertselector 
mov	[esp+60h+var_48], 0Ch
mov	[esp+60h+var_44], offset sub_100518A0
mov	[esp+60h+var_30], offset sub_100541C0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	10h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_certsel_4 
mov	[esp+68h+var_C], 10h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
xor	edi, edi
mov	[esp+38h+var_2C], offset aPkix_comcer_17 
mov	[esp+38h+var_C], 14h
cmp	ebx, edi
jnz	short loc_1005440D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	12h
push	ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, edi
jz	short loc_10054439
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2EDh
jmp	loc_100546FA
mov	eax, [ebx+0Ch]
cmp	eax, edi
jz	short loc_10054468
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_10054465
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+0Ch], edi
mov	eax, [ebx+10h]
cmp	eax, edi
jz	short loc_10054497
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_10054494
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+10h], edi
mov	eax, [ebx+14h]
cmp	eax, edi
jz	short loc_100544C6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100544C3
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+14h], edi
mov	eax, [ebx+18h]
cmp	eax, edi
jz	short loc_100544F5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100544F2
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+18h], edi
mov	eax, [ebx+1Ch]
cmp	eax, edi
jz	short loc_10054524
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_10054521
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+1Ch], edi
mov	eax, [ebx+20h]
cmp	eax, edi
jz	short loc_10054553
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_10054550
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+20h], edi
mov	eax, [ebx+2Ch]
cmp	eax, edi
jz	short loc_10054582
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1005457F
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+2Ch], edi
mov	eax, [ebx+24h]
cmp	eax, edi
jz	short loc_100545B1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100545AE
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+24h], edi
mov	eax, [ebx+30h]
cmp	eax, edi
jz	short loc_100545E0
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100545DD
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+30h], edi
mov	eax, [ebx+34h]
cmp	eax, edi
jz	short loc_1005460F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1005460C
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+34h], edi
mov	eax, [ebx+38h]
cmp	eax, edi
jz	short loc_1005463E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1005463B
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+38h], edi
mov	eax, [ebx+3Ch]
cmp	eax, edi
jz	short loc_1005466D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1005466A
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+3Ch], edi
mov	eax, [ebx+40h]
cmp	eax, edi
jz	short loc_1005469C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_10054699
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+40h], edi
mov	eax, [ebx+44h]
cmp	eax, edi
jz	short loc_100546CB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100546C8
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+44h], edi
mov	eax, [ebx+48h]
cmp	eax, edi
jz	short loc_100546FA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100546F7
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+48h], edi
			
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	14h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_comcertse 
mov	[esp+3Ch+var_C], 14h
cmp	esi, ebx
jnz	short loc_10054781
mov	eax, [esp+3Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	edi, [esp+3Ch+arg_4]
push	edi
lea	edx, [esp+40h+var_30]
push	edx
push	50h
push	12h
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100547B3
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 12Eh
jmp	loc_1005485E
mov	ecx, [esp+3Ch+var_30]
mov	dword ptr [ecx], 0FFFFFFFFh
mov	edx, [esp+3Ch+var_30]
mov	dword ptr [edx+4], 0FFFFFFFFh
mov	eax, [esp+3Ch+var_30]
mov	dword ptr [eax+8], 1
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+0Ch], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+10h], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+14h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+18h], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+1Ch], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+20h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+24h], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+28h], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+24h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+28h], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+2Ch], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+30h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+34h], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+38h], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+3Ch], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+40h], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+44h], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+48h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+4Ch], ebx
mov	edx, [esp+3Ch+var_30]
mov	[esi], edx
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	14h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_15 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10054921
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10054921
mov	eax, [edi+0Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10054903
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10054903
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+0Ch]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_comcert_9 
mov	[esp+34h+var_C], 14h
test	edi, edi
jnz	short loc_100549A9
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+0Ch]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_100549E4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100549DD
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+0Ch], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10054A18
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10054A18
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_10054A3C
			
push	esi
push	edi
mov	[edi+0Ch], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10054A3C
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_comcer_18 
mov	[esp+30h+var_C], 14h
pop	esi
test	ecx, ecx
jz	short loc_10054AB6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10054AB6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+4]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	14h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_comcer_11 
mov	[esp+34h+var_C], 14h
test	eax, eax
jnz	short loc_10054B39
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_8]
mov	edx, [esp+34h+arg_4]
push	esi
push	eax
mov	[eax+4], edx
call	sub_10095BC0
add	esp, 8
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10054B65
mov	eax, [eax+4]
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_1C], 2D0h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	14h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_19 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10054C21
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10054C21
mov	eax, [edi+10h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10054C03
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10054C03
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+10h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcert_2 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10054CF1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10054CF1
mov	eax, [edi+14h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10054CD3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10054CD3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+14h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_comcert_0 
mov	[esp+34h+var_C], 14h
test	edi, edi
jnz	short loc_10054D79
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+14h]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_10054DB4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10054DAD
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+14h], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10054DE8
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10054DE8
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_10054E0C
			
push	esi
push	edi
mov	[edi+14h], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10054E0C
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_20 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10054ED1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10054ED1
mov	eax, [edi+2Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10054EB3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10054EB3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+2Ch]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_comcert_4 
mov	[esp+34h+var_C], 14h
test	edi, edi
jnz	short loc_10054F59
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+2Ch]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_10054F94
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10054F8D
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+2Ch], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10054FC8
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10054FC8
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_10054FEC
			
push	esi
push	edi
mov	[edi+2Ch], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10054FEC
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_21 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_100550B1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100550B1
mov	eax, [edi+18h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055093
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055093
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+18h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcert_5 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10055181
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055181
mov	eax, [edi+1Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055163
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055163
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+1Ch]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_comcer_12 
mov	[esp+34h+var_C], 14h
test	edi, edi
jnz	short loc_10055209
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+1Ch]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_10055244
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_1005523D
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+1Ch], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055278
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055278
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_1005529C
			
push	esi
push	edi
mov	[edi+1Ch], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1005529C
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcert_7 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10055361
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055361
mov	eax, [edi+20h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055343
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055343
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+20h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_comcert_8 
mov	[esp+30h+var_C], 14h
pop	esi
test	ecx, ecx
jz	short loc_100553E6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_100553E6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+8]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	14h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcert_6 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_100554B1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100554B1
mov	eax, [edi+24h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055493
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055493
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+24h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_comcer_14 
mov	[esp+38h+var_C], 14h
test	ebx, ebx
jnz	short loc_1005553B
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	eax, [ebx+24h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055576
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1005556F
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	dword ptr [ebx+24h], 0
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	short loc_100555A9
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_100555A9
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_100555AC
			
mov	[ebx+24h], edi
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	14h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_comcer_13 
mov	[esp+30h+var_C], 14h
pop	esi
test	ecx, ecx
jz	short loc_10055626
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10055626
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+28h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	14h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_comcert_1 
mov	[esp+30h+var_C], 14h
pop	esi
lea	ecx, [esp+2Ch+var_2C]
test	eax, eax
jnz	short loc_100556A8
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [esp+2Ch+arg_4]
mov	[eax+28h], edx
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	14h
push	ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_22 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10055771
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055771
mov	eax, [edi+34h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055753
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055753
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+34h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_23 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10055841
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055841
mov	eax, [edi+38h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055823
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055823
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+38h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_comcer_24 
mov	[esp+30h+var_C], 14h
pop	esi
test	ecx, ecx
jz	short loc_100558C5
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_100558C5
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	14h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_25 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10055991
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055991
mov	eax, [edi+40h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055973
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055973
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+40h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_comcer_10 
mov	[esp+34h+var_C], 14h
test	edi, edi
jnz	short loc_10055A19
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+40h]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_10055A54
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10055A4D
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+40h], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055A88
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055A88
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_10055AAC
			
push	esi
push	edi
mov	[edi+40h], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10055AAC
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_26 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10055B71
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055B71
mov	eax, [edi+3Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055B53
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055B53
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+3Ch]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_27 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10055C41
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055C41
mov	eax, [edi+44h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055C23
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055C23
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+44h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcer_28 
mov	[esp+38h+var_C], 14h
test	edi, edi
jz	short loc_10055D11
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10055D11
mov	eax, [edi+48h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10055CF3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10055CF3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+48h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	14h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_comcer_29 
mov	[esp+30h+var_C], 14h
pop	esi
test	ecx, ecx
jz	short loc_10055D96
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10055D96
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+4Ch]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	14h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_comcert_3 
mov	[esp+34h+var_C], 14h
test	eax, eax
jnz	short loc_10055E19
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_8]
mov	edx, [esp+34h+arg_4]
push	esi
push	eax
mov	[eax+4Ch], edx
call	sub_10095BC0
add	esp, 8
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10055E45
mov	eax, [eax+4]
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_1C], 2D0h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	14h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebp, ebp
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_comcer_30 
mov	[esp+40h+var_C], 14h
cmp	edi, ebp
jz	loc_10056243
cmp	[esp+40h+arg_4], ebp
jz	loc_10056243
mov	esi, [esp+40h+arg_8]
push	esi
push	12h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10055ED1
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2EDh
jmp	loc_100561EA
lea	edx, [esp+40h+var_30]
push	esi
push	edx
call	sub_10054720
mov	ebx, [esp+48h+var_30]
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10055EFF
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 0F0h
jmp	loc_100561EA
mov	edx, [edi+4]
mov	[ebx+4], edx
mov	eax, [edi+8]
mov	[ebx+8], eax
mov	eax, [edi+0Ch]
cmp	eax, ebp
jz	short loc_10055F3C
push	esi
lea	ecx, [ebx+0Ch]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10055F3F
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+0Ch], ebp
mov	eax, [edi+10h]
cmp	eax, ebp
jz	short loc_10055F70
push	esi
lea	ecx, [ebx+10h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10055F73
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+10h], ebp
mov	eax, [edi+14h]
cmp	eax, ebp
jz	short loc_10055FA4
push	esi
lea	ecx, [ebx+14h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10055FA4
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
			
mov	eax, [edi+18h]
cmp	eax, ebp
jz	short loc_10055FD5
push	esi
lea	ecx, [ebx+18h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10055FD8
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+18h], ebp
mov	eax, [edi+1Ch]
cmp	eax, ebp
jz	short loc_10056009
push	esi
lea	ecx, [ebx+1Ch]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1005600C
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+1Ch], ebp
mov	eax, [edi+20h]
cmp	eax, ebp
jz	short loc_1005603D
push	esi
lea	ecx, [ebx+20h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10056040
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+20h], ebp
mov	eax, [edi+2Ch]
cmp	eax, ebp
jz	short loc_10056071
push	esi
lea	ecx, [ebx+2Ch]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10056071
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
			
mov	eax, [edi+28h]
mov	[ebx+28h], eax
mov	eax, [edi+30h]
cmp	eax, ebp
jz	short loc_100560A8
push	esi
lea	ecx, [ebx+30h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_100560AB
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+30h], ebp
mov	eax, [edi+34h]
cmp	eax, ebp
jz	short loc_100560DC
push	esi
lea	ecx, [ebx+34h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_100560DF
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+34h], ebp
mov	eax, [edi+38h]
cmp	eax, ebp
jz	short loc_10056110
push	esi
lea	ecx, [ebx+38h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10056113
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+38h], ebp
mov	eax, [edi+3Ch]
cmp	eax, ebp
jz	short loc_10056144
push	esi
lea	ecx, [ebx+3Ch]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10056147
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_100561EA
mov	[ebx+3Ch], ebp
mov	eax, [edi+40h]
cmp	eax, ebp
jz	short loc_10056175
push	esi
lea	ecx, [ebx+40h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10056178
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	short loc_100561EA
mov	[ebx+40h], ebp
mov	eax, [edi+44h]
cmp	eax, ebp
jz	short loc_100561A6
push	esi
lea	ecx, [ebx+44h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_100561A9
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	short loc_100561EA
mov	[ebx+44h], ebp
mov	eax, [edi+48h]
cmp	eax, ebp
jz	short loc_100561D7
push	esi
lea	ecx, [ebx+48h]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_100561DA
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	short loc_100561EA
mov	[ebx+48h], ebp
mov	eax, [edi+4Ch]
mov	ecx, [esp+40h+arg_4]
mov	[ebx+4Ch], eax
mov	eax, [esp+40h+var_28]
mov	[ecx], ebx
			
cmp	[esp+40h+var_18], ebp
jnz	short loc_10056200
cmp	eax, ebp
jnz	short loc_10056200
cmp	[esp+40h+var_14], ebp
jnz	short loc_10056200
cmp	[esp+40h+var_4], ebp
jz	short loc_10056229
			
cmp	ebx, ebp
jz	short loc_10056229
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_10056229
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
			
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	14h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	14h
push	ecx
mov	[esp+44h+var_2C], offset aPkix_comcer_16 
mov	[esp+44h+var_C], 14h
mov	dword_100BB4A8,	offset aComcertselpara 
mov	dword_100BB4B0,	50h
mov	dword_100BB4B4,	offset sub_100543B0
mov	dword_100BB4C8,	offset sub_10055E60
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_basicco_0 
mov	[esp+34h+var_C], 1
test	edi, edi
jnz	short loc_10056349
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	1
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10056372
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2DEh
jmp	short loc_100563A7
mov	eax, [edi]
test	eax, eax
jz	short loc_100563A7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100563A1
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
			
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB244
push	1
mov	[esp+60h+var_50], offset aBasicconstrain 
mov	[esp+60h+var_48], 0Ch
mov	[esp+60h+var_44], offset sub_100562F0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	1
push	ecx
mov	[esp+68h+var_2C], offset aPkix_basiccons 
mov	[esp+68h+var_C], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_certcha_5 
mov	[esp+38h+var_C], 8
cmp	edi, ebx
jnz	short loc_100564AD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	7
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_100564D6
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2E5h
jmp	short loc_10056534
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10056505
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10056502
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10056534
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10056531
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_14]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_certchain 
mov	[esp+40h+var_C], 8
cmp	ebp, ebx
jnz	short loc_100565B3
mov	eax, [esp+40h+arg_18]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+40h+arg_18]
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	14h
push	7
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100565E2
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 126h
jmp	short loc_1005662F
mov	ecx, [esp+40h+var_30]
mov	edx, [esp+40h+arg_0]
mov	edi, [esp+40h+arg_C]
mov	[ecx], edx
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_4]
mov	edx, [esp+40h+arg_8]
mov	[eax+0Ch], ecx
mov	eax, [esp+40h+var_30]
mov	[eax+10h], edx
cmp	edi, ebx
jz	short loc_1005667A
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1005667A
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10056660
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1005665C
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+40h+var_30]
mov	[edx+4], edi
mov	edi, [esp+40h+arg_10]
cmp	edi, ebx
jz	short loc_100566A7
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100566A7
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
jmp	loc_10056623
			
mov	ecx, [esp+40h+var_30]
mov	[ecx+8], edi
mov	edx, [esp+40h+var_30]
mov	[ebp+0], edx
jmp	short loc_1005665C
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certcha_2 
mov	[esp+30h+var_C], 8
pop	esi
test	ecx, ecx
jz	short loc_10056715
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10056715
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certcha_0 
mov	[esp+30h+var_C], 8
pop	esi
test	ecx, ecx
jz	short loc_10056796
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10056796
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+0Ch]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_certcha_3 
mov	[esp+38h+var_C], 8
test	edi, edi
jz	short loc_10056861
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10056861
mov	eax, [edi+8]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10056843
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10056843
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	8
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+8]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	8
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_certcha_7 
mov	[esp+34h+var_C], 8
test	edi, edi
jnz	short loc_100568E9
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+8]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_10056924
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_1005691D
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+8], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10056958
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10056958
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_1005697C
			
push	esi
push	edi
mov	[edi+8], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1005697C
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_certcha_1 
mov	[esp+38h+var_C], 8
test	edi, edi
jz	short loc_10056A41
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10056A41
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10056A23
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10056A23
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	8
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+4]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	8
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 38h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_0]
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_2C], offset aPkix_certcha_6 
mov	[esp+48h+var_C], 8
cmp	edi, ebx
jz	loc_10056C06
mov	ebp, [esp+48h+arg_4]
cmp	ebp, ebx
jz	loc_10056C06
mov	esi, [esp+48h+arg_8]
push	esi
push	7
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10056AE9
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2E5h
jmp	loc_10056B8A
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10056B18
push	esi
lea	ecx, [esp+4Ch+var_38]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10056B18
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 2C5h
jmp	short loc_10056B8A
			
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10056B47
push	esi
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10056B47
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 2C5h
jmp	short loc_10056B8A
			
mov	ecx, [esp+48h+var_34]
mov	edx, [esp+48h+var_38]
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
mov	eax, [edi+10h]
push	ecx
mov	ecx, [edi+0Ch]
push	edx
mov	edx, [edi]
push	eax
push	ecx
push	edx
call	sub_10056550
add	esp, 1Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10056B83
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 53h
jmp	short loc_10056B8A
mov	ecx, [esp+48h+var_30]
mov	[ebp+0], ecx
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_10056BBB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10056BB7
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_38], ebx
mov	eax, [esp+48h+var_34]
cmp	eax, ebx
jz	short loc_10056BEC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10056BE8
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_34], ebx
push	esi
push	1
lea	ecx, [esp+50h+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	edx, [esp+48h+arg_8]
push	edx
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB31C
push	1
mov	[esp+60h+var_50], offset aCertchaincheck 
mov	[esp+60h+var_48], 14h
mov	[esp+60h+var_44], offset sub_10056450
mov	[esp+60h+var_30], offset sub_10056A70
rep movsd
lea	ecx, [esp+60h+var_2C]
push	8
push	ecx
mov	[esp+68h+var_2C], offset aPkix_certcha_4 
mov	[esp+68h+var_C], 8
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_crlchec_1 
mov	[esp+34h+var_C], 1Bh
test	edi, edi
jnz	short loc_10056D29
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	19h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10056D52
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2F3h
jmp	short loc_10056D89
mov	eax, [edi+14h]
test	eax, eax
jz	short loc_10056D89
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10056D82
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+14h], 0
			
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Bh
push	ecx
mov	[esp+44h+var_2C], offset aPkix_crlchec_0 
mov	[esp+44h+var_C], 1Bh
mov	dword_100BB5A4,	offset aCrlchecker 
mov	dword_100BB5AC,	1Ch
mov	dword_100BB5B0,	offset sub_10056CD0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_14]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_crlchecke 
mov	[esp+40h+var_C], 1Bh
cmp	edi, ebx
jz	loc_10056F44
mov	ebp, [esp+40h+arg_1C]
cmp	ebp, ebx
jz	loc_10056F44
mov	esi, [esp+40h+arg_20]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	1Ch
push	19h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10056ECD
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 133h
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10056EB3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10056EAF
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	1Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	edx, [esp+40h+arg_10]
mov	eax, [esp+40h+arg_C]
mov	ecx, [esp+40h+arg_8]
push	esi
push	edx
mov	edx, [esp+48h+arg_4]
push	eax
mov	eax, [esp+4Ch+arg_0]
push	ecx
mov	ecx, [esp+50h+var_30]
push	edx
push	eax
push	ecx
call	sub_100589A0
add	esp, 1Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jnz	short loc_10056E82
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10056F26
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
jmp	loc_10056E82
mov	eax, [esp+40h+var_30]
mov	edx, [esp+40h+arg_18]
mov	[eax+14h], edi
mov	ecx, [esp+40h+var_30]
mov	[ecx+18h], edx
mov	eax, [esp+40h+var_30]
mov	[ebp+0], eax
jmp	loc_10056EAF
			
mov	eax, [esp+40h+arg_20]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 44h
push	ebx
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	[esp+50h+var_44], ebx
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_34], ebx
mov	[esp+50h+var_38], ebx
mov	[esp+50h+var_2C], offset aPkix_crlchec_2 
mov	[esp+50h+var_C], 8
cmp	[esp+50h+arg_0], ebx
jz	loc_100571AB
cmp	[esp+50h+arg_4], ebx
jz	loc_100571AB
mov	eax, [esp+50h+arg_C]
cmp	eax, ebx
jz	loc_100571AB
mov	esi, [esp+50h+arg_24]
mov	edx, [eax+14h]
push	esi
lea	ecx, [esp+54h+var_3C]
push	ecx
push	edx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005700E
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 284h
jmp	loc_10057157
cmp	[esp+50h+var_3C], ebx
jbe	loc_10057157
mov	edi, [esp+50h+arg_20]
push	ebp
mov	ebp, [esp+54h+arg_18]
mov	edx, [esp+54h+var_40]
mov	eax, [esp+54h+arg_C]
push	esi
lea	ecx, [esp+58h+var_44]
push	ecx
mov	ecx, [eax+14h]
push	edx
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_10057118
mov	eax, [esp+54h+var_44]
push	esi
lea	edx, [esp+58h+var_34]
push	edx
push	eax
call	sub_1007B750
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_10057125
cmp	[esp+54h+var_34], ebx
jz	short loc_100570D2
mov	edx, [esp+54h+var_44]
push	esi
lea	ecx, [esp+58h+var_30]
push	ecx
push	edx
call	sub_1007B650
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_10057136
mov	eax, [esp+54h+var_30]
cmp	eax, ebx
jz	short loc_100570D2
push	esi
lea	ecx, [esp+58h+var_38]
push	ecx
mov	ecx, [esp+5Ch+arg_4]
mov	edx, ebp
neg	edx
push	edi
sbb	edx, edx
and	edx, [esp+60h+arg_8]
push	ebx
push	edx
mov	edx, [esp+68h+arg_0]
push	ecx
mov	ecx, [esp+6Ch+var_44]
push	edx
push	ecx
call	eax
add	esp, 20h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_10057147
cmp	[esp+54h+var_38], 1
jz	loc_10057156
			
mov	eax, [esp+54h+var_44]
cmp	eax, ebx
jz	short loc_10057103
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100570FF
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_44], ebx
mov	eax, [esp+54h+var_40]
inc	eax
mov	[esp+54h+var_40], eax
cmp	eax, [esp+54h+var_3C]
jb	loc_10057021
jmp	short loc_10057156
mov	eax, [eax+4]
mov	[esp+54h+var_1C], 283h
jmp	short loc_10057152
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 0DBh
jmp	short loc_10057156
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 0D5h
jmp	short loc_10057156
mov	eax, [eax+4]
mov	[esp+54h+var_1C], 0D4h
mov	[esp+54h+var_10], eax
			
pop	ebp
			
mov	eax, [esp+50h+var_44]
mov	ecx, [esp+50h+arg_1C]
mov	edx, [esp+50h+var_38]
mov	[ecx], edx
cmp	eax, ebx
jz	short loc_10057192
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005718E
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_44], ebx
push	esi
push	1
lea	ecx, [esp+58h+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 44h
retn
			
mov	edx, [esp+50h+arg_24]
push	edx
push	1
lea	eax, [esp+58h+var_2C]
push	1Fh
push	eax
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 44h
retn
align 10h
sub	esp, 60h
push	ebx
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+70h+var_2C]
xor	ebx, ebx
rep movsd
mov	[esp+70h+var_3C], ebp
mov	[esp+70h+var_40], ebp
mov	[esp+70h+var_50], ebp
mov	[esp+70h+var_60], ebp
mov	[esp+70h+var_48], ebp
mov	[esp+70h+var_44], ebp
mov	[esp+70h+var_4C], ebp
mov	[esp+70h+var_54], ebp
mov	[esp+70h+var_38], ebp
mov	[esp+70h+var_58], ebp
mov	[esp+70h+var_5C], ebp
mov	[esp+70h+var_34], ebp
mov	[esp+70h+var_2C], offset aPkix_crlchec_3 
mov	[esp+70h+var_C], 8
cmp	[esp+70h+arg_0], ebp
jz	loc_10057805
cmp	[esp+70h+arg_4], ebp
jz	loc_10057805
cmp	[esp+70h+arg_C], ebp
jz	loc_10057805
mov	eax, [esp+70h+arg_20]
cmp	eax, ebp
jz	loc_10057805
mov	ecx, [eax]
mov	esi, [esp+70h+arg_24]
mov	edi, [esp+70h+arg_C]
push	esi
lea	edx, [esp+74h+var_54]
mov	[eax], ebp
mov	eax, [edi+14h]
push	edx
push	eax
mov	[esp+7Ch+var_34], ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100572AF
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 284h
jmp	loc_1005768C
cmp	[esp+70h+var_54], ebp
jbe	loc_100573EC
lea	esp, [esp+0]
mov	eax, [edi+14h]
push	esi
lea	edx, [esp+74h+var_60]
push	edx
push	ebx
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_10057390
mov	edx, [esp+70h+var_60]
push	esi
lea	ecx, [esp+74h+var_38]
push	ecx
push	edx
call	sub_1007B750
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_100573A4
cmp	[esp+70h+var_38], ebp
jz	short loc_10057352
mov	ecx, [esp+70h+var_60]
push	esi
lea	eax, [esp+74h+var_40]
push	eax
push	ecx
call	sub_1007B5D0
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_100573B4
mov	eax, [esp+70h+var_60]
push	esi
lea	edx, [esp+74h+var_3C]
push	edx
push	eax
call	sub_1007B650
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_100573C8
cmp	[esp+70h+var_40], ebp
jz	short loc_10057352
cmp	[esp+70h+var_3C], ebp
jnz	loc_100573DC
			
mov	eax, [esp+70h+var_60]
cmp	eax, ebp
jz	short loc_10057383
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_1005737F
push	esi
push	eax
lea	ecx, [esp+78h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_60], ebp
inc	ebx
cmp	ebx, [esp+70h+var_54]
jb	loc_100572C0
jmp	short loc_100573EC
			
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 283h
jmp	loc_1005768C
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0DBh
jmp	loc_10057688
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 0D5h
jmp	loc_1005768C
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 0D5h
jmp	loc_1005768C
mov	eax, [esp+70h+var_60]
mov	[esp+70h+var_48], eax
mov	[esp+70h+var_60], ebp
cmp	eax, ebp
jnz	short loc_1005742D
			
mov	eax, dword_100BAE9C
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 15Bh
mov	[esp+70h+var_10], 1Fh
cmp	eax, ebp
jz	loc_1005768C
mov	ecx, [esp+70h+var_C]
push	esi
push	1
push	ecx
push	ebp
push	15Bh
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1005768C
mov	edi, [esp+70h+arg_4]
push	esi
push	40h
push	edi
call	sub_10080770
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10057459
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 60h
jmp	loc_1005768C
mov	ebx, [esp+70h+arg_0]
push	esi
lea	eax, [esp+74h+var_5C]
push	eax
push	ebx
call	sub_10081930
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_10057488
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 80h
jmp	loc_1005768C
test	[esp+70h+arg_14], 8
jnz	short loc_100574A7
mov	eax, [esp+70h+var_5C]
cmp	eax, ebp
jz	loc_1005768C
cmp	[eax+0Ch], ebp
jz	loc_1005768C
push	esi
lea	edx, [esp+74h+var_4C]
push	edx
push	ebx
call	sub_1007DE20
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100574CE
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 83h
jmp	loc_10057688
mov	ebx, [esp+70h+arg_8]
mov	edx, [esp+70h+var_5C]
push	esi
lea	ecx, [esp+74h+var_44]
push	ecx
push	ebx
push	edx
push	edi
call	sub_100793C0
add	esp, 14h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jz	short loc_100574FF
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 15Ch
jmp	loc_10057688
xor	edi, edi
cmp	[esp+70h+var_54], ebp
jbe	loc_1005768C
jmp	short loc_10057510
align 10h
			
mov	edx, [esp+70h+arg_C]
mov	eax, [edx+14h]
push	esi
lea	ecx, [esp+74h+var_60]
push	ecx
push	edi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_10057390
mov	edx, [esp+70h+var_60]
push	esi
lea	ecx, [esp+74h+var_30]
push	ecx
push	edx
call	sub_1007B410
add	esp, 0Ch
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_1005764E
mov	edx, [esp+70h+var_44]
push	esi
lea	eax, [esp+74h+var_58]
push	eax
mov	eax, [esp+78h+var_60]
lea	ecx, [esp+78h+var_34]
push	ecx
push	edx
push	eax
call	[esp+84h+var_30]
add	esp, 14h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_1005765B
mov	ecx, [esp+70h+var_58]
mov	edx, [esp+70h+var_4C]
mov	eax, [esp+70h+var_48]
push	esi
push	ecx
push	edx
push	eax
call	[esp+80h+var_40]
add	esp, 10h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_1005766C
mov	edx, [esp+70h+arg_1C]
mov	eax, [esp+70h+arg_4]
push	esi
lea	ecx, [esp+74h+var_50]
push	ecx
mov	ecx, [esp+78h+arg_0]
push	edx
mov	edx, [esp+7Ch+var_60]
push	1
push	ebx
push	eax
push	ecx
push	edx
call	[esp+90h+var_3C]
add	esp, 20h
mov	[esp+70h+var_28], eax
cmp	eax, ebp
jnz	loc_1005767D
mov	eax, [esp+70h+var_50]
cmp	eax, ebp
jnz	loc_100576BE
mov	eax, [esp+70h+var_58]
cmp	eax, ebp
jz	short loc_10057610
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_1005760C
push	esi
push	eax
lea	eax, [esp+78h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_58], ebp
mov	eax, [esp+70h+var_60]
cmp	eax, ebp
jz	short loc_10057641
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_1005763D
push	esi
push	eax
lea	ecx, [esp+78h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_60], ebp
inc	edi
cmp	edi, [esp+70h+var_54]
jb	loc_10057510
jmp	short loc_1005768C
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0DAh
jmp	short loc_10057688
mov	ecx, [eax+4]
mov	[esp+70h+var_10], ecx
mov	[esp+70h+var_1C], 205h
jmp	short loc_1005768C
mov	edx, [eax+4]
mov	[esp+70h+var_10], edx
mov	[esp+70h+var_1C], 0D6h
jmp	short loc_1005768C
mov	eax, [eax+4]
mov	[esp+70h+var_1C], 0D4h
			
mov	[esp+70h+var_10], eax
			
mov	eax, [esp+70h+var_50]
cmp	eax, ebp
jnz	short loc_100576BE
mov	ecx, [esp+70h+var_5C]
cmp	ecx, ebp
jz	short loc_100576A1
cmp	[ecx+0Ch], ebp
ja	short loc_100576AB
test	[esp+70h+arg_14], 8
jz	short loc_100576BE
test	[esp+70h+arg_14], 10h
jz	short loc_100576BE
mov	eax, 1
mov	[esp+70h+var_50], eax
			
mov	ecx, [esp+70h+arg_18]
mov	[ecx], eax
mov	eax, [esp+70h+var_5C]
cmp	eax, ebp
jz	short loc_100576F8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_100576F4
push	esi
push	eax
lea	edx, [esp+78h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_5C], ebp
mov	eax, [esp+70h+var_58]
cmp	eax, ebp
jz	short loc_10057729
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10057725
push	esi
push	eax
lea	eax, [esp+78h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_58], ebp
mov	eax, [esp+70h+var_60]
cmp	eax, ebp
jz	short loc_1005775A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10057756
push	esi
push	eax
lea	ecx, [esp+78h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_60], ebp
mov	eax, [esp+70h+var_4C]
cmp	eax, ebp
jz	short loc_1005778B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_10057787
push	esi
push	eax
lea	edx, [esp+78h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_4C], ebp
cmp	[esp+70h+var_48], ebp
jz	short loc_100577BA
mov	eax, [esp+70h+var_48]
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_100577BA
push	esi
push	eax
lea	ecx, [esp+78h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
			
mov	eax, [esp+70h+var_44]
cmp	eax, ebp
jz	short loc_100577EB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_24], eax
cmp	eax, ebp
jz	short loc_100577E7
push	esi
push	eax
lea	edx, [esp+78h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_24], ebp
mov	[esp+70h+var_44], ebp
push	esi
push	1
lea	eax, [esp+78h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 60h
retn
			
mov	ecx, [esp+70h+arg_24]
push	ecx
push	1
lea	edx, [esp+78h+var_2C]
push	1Fh
push	edx
mov	[esp+80h+var_18], 1
mov	[esp+80h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 60h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_ekuchec_0 
mov	[esp+34h+var_C], 1Dh
test	edi, edi
jnz	short loc_10057899
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	1Ah
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_100578C2
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2D4h
jmp	short loc_1005792E
mov	eax, [edi+4]
test	eax, eax
jz	short loc_100578F9
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100578F2
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
mov	eax, [edi]
test	eax, eax
jz	short loc_1005792E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10057928
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	1Dh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Dh
push	ecx
mov	[esp+44h+var_2C], offset aPkix_ekuchecke 
mov	[esp+44h+var_C], 1Dh
mov	dword_100BB5C8,	offset aEkuchecker 
mov	dword_100BB5D0,	8
mov	dword_100BB5D4,	offset sub_10057840
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	ecx, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_expirat_0 
mov	[esp+38h+var_C], 8
test	ecx, ecx
jz	loc_10057AAA
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_10057AAA
mov	eax, [esp+38h+arg_C]
test	eax, eax
jz	loc_10057AAA
mov	esi, [esp+38h+arg_10]
mov	dword ptr [eax], 0
push	esi
lea	eax, [esp+3Ch+var_30]
push	eax
push	ecx
call	sub_100567C0
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10057A33
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 54h
jmp	short loc_10057A59
mov	edx, [esp+38h+var_30]
push	esi
push	edx
push	edi
call	sub_100803A0
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10057A59
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 62h
			
mov	eax, [esp+38h+var_30]
test	eax, eax
jz	short loc_10057A92
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10057A8A
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	[esp+38h+var_30], 0
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	eax, [esp+38h+arg_10]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_4]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_expiratio 
mov	[esp+38h+var_C], 8
test	edi, edi
jnz	short loc_10057B41
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	eax, [esp+38h+arg_0]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jnz	short loc_10057B7A
push	esi
lea	edx, [esp+3Ch+var_30]
push	edx
push	0
call	sub_10088CB0
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10057B76
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 180h
jmp	short loc_10057BA7
mov	eax, [esp+38h+var_30]
push	esi
push	edi
push	eax
push	0
push	0
push	1
push	offset sub_100579B0
call	sub_10056550
add	esp, 1Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10057BA7
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 53h
			
mov	eax, [esp+38h+var_30]
test	eax, eax
jz	short loc_10057BE0
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10057BD8
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	[esp+38h+var_30], 0
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_namecon_2 
mov	[esp+34h+var_C], 0Ah
test	edi, edi
jnz	short loc_10057C59
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	9
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10057C82
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2FFh
jmp	short loc_10057CEE
mov	eax, [edi]
test	eax, eax
jz	short loc_10057CB7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10057CB1
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
mov	eax, [edi+4]
test	eax, eax
jz	short loc_10057CEE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10057CE7
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	0Ah
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB364
push	1
mov	[esp+60h+var_50], offset aNameconstraint 
mov	[esp+60h+var_48], 0Ch
mov	[esp+60h+var_44], offset sub_10057C00
rep movsd
lea	ecx, [esp+60h+var_2C]
push	0Ah
push	ecx
mov	[esp+68h+var_2C], offset aPkix_namecon_1 
mov	[esp+68h+var_C], 0Ah
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_8]
xor	ebp, ebp
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_2C], offset aPkix_namecon_0 
mov	[esp+3Ch+var_C], 0Ah
push	ebx
cmp	edi, ebp
jnz	short loc_10057DFD
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
lea	ecx, [esp+40h+var_30]
push	ecx
push	0Ch
push	9
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10057E6F
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 13Fh
			
mov	eax, [esp+3Ch+var_30]
cmp	eax, ebp
jz	short loc_10057E56
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10057E52
push	ebx
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
			
mov	[esp+3Ch+var_30], ebp
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	0Ah
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
push	ebx
add	eax, 4
push	eax
push	56h
call	sub_10096B50
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10057E9B
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 32Eh
jmp	short loc_10057E25
mov	esi, [esp+3Ch+arg_0]
cmp	esi, ebp
jz	short loc_10057ECD
push	ebx
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10057ECD
push	ebx
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
jmp	loc_10057E25
			
mov	eax, [esp+3Ch+var_30]
mov	edx, [esp+3Ch+arg_4]
mov	[eax], esi
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+8], edx
mov	eax, [esp+3Ch+var_30]
mov	[edi], eax
jmp	loc_10057E52
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	ecx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_30], ebp
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_2C], offset aPkix_namecon_3 
mov	[esp+4Ch+var_C], 8
cmp	ecx, ebp
jz	loc_10058182
mov	ebx, [esp+4Ch+arg_4]
cmp	ebx, ebp
jz	loc_10058182
mov	eax, [esp+4Ch+arg_C]
cmp	eax, ebp
jz	loc_10058182
mov	esi, [esp+4Ch+arg_10]
mov	[eax], ebp
push	esi
lea	eax, [esp+50h+var_3C]
push	eax
push	ecx
call	sub_100567C0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10057F7E
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 54h
jmp	loc_10058137
mov	eax, [esp+4Ch+var_3C]
dec	dword ptr [eax+8]
mov	eax, [esp+4Ch+var_3C]
xor	edx, edx
cmp	[eax+8], ebp
push	esi
setz	dl
lea	ecx, [esp+50h+var_34]
push	ecx
push	ebx
mov	edi, edx
call	sub_10072240
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10057FBA
mov	edx, [eax+4]
mov	[esp+4Ch+var_1C], 247h
jmp	loc_10058133
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebp
jz	short loc_10057FCB
cmp	eax, 1
jnz	short loc_10057FF5
cmp	edi, ebp
jz	short loc_10057FFD
mov	eax, [esp+4Ch+var_3C]
mov	ecx, [eax]
push	esi
push	edi
push	ecx
push	ebx
call	sub_10080A70
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10057FF5
mov	edx, [eax+4]
mov	[esp+4Ch+var_1C], 61h
jmp	loc_10058133
			
cmp	edi, ebp
jnz	loc_1005810D
push	esi
lea	eax, [esp+50h+var_38]
push	eax
push	ebx
call	sub_100808B0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10058028
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 84h
jmp	loc_10058137
mov	ecx, [esp+4Ch+var_38]
cmp	ecx, ebp
jz	loc_1005810D
mov	eax, [esp+4Ch+var_3C]
cmp	[eax], ebp
jz	loc_100580DC
mov	eax, [eax]
push	esi
lea	edx, [esp+50h+var_30]
push	edx
push	eax
push	ecx
call	sub_10080BC0
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005806E
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 9Ah
jmp	loc_10058137
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebp
jz	short loc_1005809F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1005809B
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_38], ebp
mov	eax, [esp+4Ch+var_3C]
cmp	[eax], ebp
jz	short loc_100580D8
mov	eax, [eax]
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_100580CE
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	edx, [esp+4Ch+var_3C]
mov	[edx], ebp
mov	eax, [esp+4Ch+var_3C]
mov	ecx, [esp+4Ch+var_30]
mov	[eax], ecx
mov	eax, [esp+4Ch+arg_8]
cmp	eax, ebp
jz	short loc_1005810D
mov	edx, [esp+4Ch+var_3C]
mov	ecx, [edx+4]
push	esi
push	ecx
push	eax
call	sub_10077300
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005810D
mov	edx, [eax+4]
mov	[esp+4Ch+var_1C], 28Ah
jmp	short loc_10058133
			
mov	eax, [esp+4Ch+var_3C]
mov	ecx, [esp+4Ch+arg_0]
push	esi
push	eax
push	ecx
call	sub_10056890
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10058137
mov	edx, [eax+4]
mov	[esp+4Ch+var_1C], 58h
			
mov	[esp+4Ch+var_10], edx
			
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_10058168
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10058164
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
push	esi
push	1
lea	ecx, [esp+54h+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	edx, [esp+4Ch+arg_10]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_8]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_nameconst 
mov	[esp+38h+var_C], 8
test	edi, edi
jnz	short loc_10058211
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	eax, [esp+38h+arg_4]
mov	ecx, [esp+38h+arg_0]
push	ebx
mov	ebx, [esp+3Ch+arg_C]
lea	edx, [esp+3Ch+var_30]
push	edx
push	eax
push	ecx
call	sub_10057DA0
mov	esi, [esp+48h+var_30]
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1005824A
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 2A5h
jmp	short loc_10058277
push	ebx
push	edi
push	esi
push	0
push	0
push	0
push	offset sub_10057EF0
call	sub_10056550
add	esp, 1Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10058277
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 53h
			
test	esi, esi
jz	short loc_100582A4
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_100582A4
push	ebx
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	32h
push	ecx
mov	[esp+44h+var_2C], offset aPkix_ocspche_0 
mov	[esp+44h+var_C], 32h
mov	dword_100BB82C,	offset aOcspchecker 
mov	dword_100BB834,	18h
mov	dword_100BB838,	offset __PBE_GenerateBits
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_18]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_ocspcheck 
mov	[esp+3Ch+var_C], 32h
cmp	edi, ebx
jnz	short loc_10058381
mov	eax, [esp+3Ch+arg_1C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_1C]
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	18h
push	2Bh
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100583F8
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 126h
mov	eax, [esp+3Ch+var_30]
cmp	eax, ebx
jz	short loc_100583DF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100583DB
push	esi
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
			
mov	[esp+3Ch+var_30], ebx
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	32h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	ecx, [esp+3Ch+arg_10]
mov	edx, [esp+3Ch+arg_C]
mov	eax, [esp+3Ch+arg_8]
push	esi
push	ecx
mov	ecx, [esp+44h+arg_4]
push	edx
mov	edx, [esp+48h+arg_0]
push	eax
mov	eax, [esp+4Ch+var_30]
push	ecx
push	edx
push	eax
call	sub_100589A0
add	esp, 1Ch
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jnz	short loc_100583AE
mov	ecx, [esp+3Ch+var_30]
mov	edx, [esp+3Ch+arg_14]
mov	[ecx+14h], edx
mov	eax, [esp+3Ch+var_30]
mov	[edi], eax
jmp	short loc_100583DB
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_24]
mov	ecx, [esp+4Ch+arg_0]
push	esi
xor	ebx, ebx
lea	eax, [esp+50h+var_3C]
push	eax
push	ebx
push	ecx
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_30], ebx
mov	[esp+5Ch+var_38], 0FFFFE092h
xor	ebp, ebp
mov	[esp+5Ch+var_2C], offset aPkix_ocspche_1 
mov	[esp+5Ch+var_C], 32h
call	sub_100904A0
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100584B0
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 319h
jmp	short loc_10058515
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_10058515
push	esi
lea	ecx, [esp+50h+var_38]
push	ecx
lea	edx, [esp+54h+var_30]
push	edx
mov	edx, [esp+58h+arg_8]
lea	ecx, [esp+58h+var_34]
push	ecx
push	edx
push	eax
call	sub_10090630
add	esp, 18h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100584EF
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 31Ah
jmp	short loc_10058515
cmp	[esp+4Ch+var_34], ebx
jz	short loc_10058515
cmp	[esp+4Ch+var_30], ebx
jz	short loc_10058506
mov	ebp, 2
mov	[esp+4Ch+var_38], ebx
jmp	short loc_10058515
xor	ecx, ecx
cmp	[esp+4Ch+var_38], 0FFFFE00Ch
setz	cl
mov	ebp, ecx
			
mov	edx, [esp+4Ch+arg_1C]
mov	eax, [esp+4Ch+arg_20]
mov	[edx], ebp
mov	[eax], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_10058552
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005854E
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
push	esi
push	1
lea	edx, [esp+54h+var_2C]
push	32h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 48h
mov	eax, [esp+48h+arg_C]
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+58h+var_2C]
rep movsd
mov	esi, [esp+58h+arg_24]
xor	ebp, ebp
push	esi
push	2Bh
push	eax
mov	[esp+64h+var_3C], 0FFFFE092h
mov	[esp+64h+var_30], ebp
mov	[esp+64h+var_48], 1
mov	[esp+64h+var_40], ebp
mov	[esp+64h+var_34], ebp
mov	[esp+64h+var_44], ebp
xor	ebx, ebx
mov	[esp+64h+var_38], ebp
mov	[esp+64h+var_2C], offset aPkix_ocspche_2 
mov	[esp+64h+var_C], 32h
call	sub_10072630
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_100585F2
mov	ecx, [eax+4]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 301h
jmp	loc_100588CA
mov	edi, [esp+58h+arg_0]
push	esi
lea	edx, [esp+5Ch+var_40]
push	edx
push	ebp
push	edi
call	sub_100904A0
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_10058622
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 319h
jmp	loc_100588CA
mov	eax, [esp+58h+arg_14]
push	esi
lea	ecx, [esp+5Ch+var_34]
push	ecx
mov	ecx, [esp+60h+var_40]
lea	edx, [esp+60h+var_30]
push	edx
push	eax
push	ebp
push	ebp
push	ecx
push	edi
call	sub_1008D2F0
add	esp, 20h
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1005865E
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 31Eh
jmp	loc_100588CA
cmp	[esp+58h+var_30], ebp
jnz	short loc_1005866D
mov	[esp+58h+var_3C], ebp
jmp	loc_100588D0
movzx	edi, byte ptr [esp+58h+arg_14]
shr	edi, 6
and	edi, 1
jmp	short loc_10058680
align 10h
			
mov	[esp+58h+var_48], 1
mov	eax, offset aGet 
cmp	edi, ebp
jz	short loc_10058696
mov	eax, offset aPost 
push	esi
lea	ecx, [esp+5Ch+var_44]
push	ecx
mov	ecx, [esp+60h+arg_C]
lea	edx, [esp+60h+var_38]
push	edx
mov	edx, [ecx+14h]
push	edx
push	ebp
push	eax
mov	eax, [esp+70h+var_34]
push	eax
call	sub_1008DBC0
add	esp, 1Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_100586D8
mov	ecx, [eax+4]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 322h
mov	[esp+58h+var_48], ebp
jmp	loc_100587BC
cmp	[esp+58h+var_48], ebp
jz	loc_100587BC
mov	eax, [esp+58h+var_38]
cmp	eax, ebp
jnz	loc_100588B6
mov	ecx, [esp+58h+var_44]
push	esi
lea	edx, [esp+5Ch+var_3C]
push	edx
lea	eax, [esp+60h+var_48]
push	eax
push	ecx
call	sub_1008E450
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_10058726
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 323h
mov	[esp+58h+var_48], ebp
jmp	loc_100587BC
cmp	[esp+58h+var_48], ebp
jz	loc_100587BC
mov	edx, [esp+58h+var_44]
push	esi
lea	eax, [esp+5Ch+var_3C]
push	eax
lea	ecx, [esp+60h+var_48]
push	ecx
push	edx
call	sub_1008E530
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_10058765
mov	ecx, [eax+4]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 325h
mov	[esp+58h+var_48], ebp
jmp	short loc_100587BC
cmp	[esp+58h+var_48], ebp
jz	short loc_100587BC
mov	ecx, [esp+58h+arg_10]
push	esi
lea	edx, [esp+5Ch+var_38]
push	edx
mov	edx, [esp+60h+arg_0]
lea	eax, [esp+60h+var_48]
push	eax
mov	eax, [esp+64h+var_44]
push	ecx
push	edx
push	eax
call	sub_1008E740
add	esp, 18h
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_100587AA
mov	ecx, [eax+4]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 327h
mov	[esp+58h+var_48], ebp
jmp	short loc_100587BC
mov	ecx, [esp+58h+var_38]
cmp	ecx, ebp
jnz	loc_100588BE
cmp	[esp+58h+var_48], ebp
jnz	short loc_100587EF
			
cmp	edi, 1
jnz	short loc_100587E9
mov	ecx, [esp+58h+var_40]
cmp	ecx, ebp
jz	short loc_100587E9
cmp	[ecx], ebp
jz	short loc_100587E9
push	esi
push	ecx
call	sub_10090780
add	esp, 8
cmp	eax, ebp
jz	short loc_100587E5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+58h+var_28]
			
cmp	[esp+58h+var_48], ebp
jz	short loc_10058851
mov	ecx, [esp+58h+arg_8]
push	esi
lea	edx, [esp+5Ch+var_3C]
push	edx
xor	edx, edx
cmp	edi, 1
setz	dl
lea	eax, [esp+60h+var_48]
push	eax
mov	eax, [esp+64h+var_44]
push	ecx
mov	ecx, [esp+68h+var_40]
push	edx
push	eax
push	ecx
call	sub_1008EAB0
add	esp, 1Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_10058837
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 324h
mov	[esp+58h+var_48], ebp
jmp	short loc_10058851
cmp	[esp+58h+var_48], ebp
jnz	short loc_1005884C
xor	ebx, ebx
cmp	[esp+58h+var_3C], 0FFFFE00Ch
setz	bl
jmp	short loc_10058851
mov	ebx, 2
			
cmp	edi, ebp
jnz	short loc_100588C6
cmp	ebx, 2
jz	short loc_100588C6
cmp	ebx, 1
jz	short loc_100588C6
mov	ecx, [esp+58h+var_44]
cmp	ecx, ebp
jz	short loc_10058894
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1005888C
push	esi
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	eax, [esp+58h+var_28]
mov	[esp+58h+var_44], ebp
xor	ebx, ebx
mov	edi, 1
cmp	eax, ebp
jz	loc_10058680
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_28], ebp
jmp	loc_10058680
mov	ecx, [esp+58h+arg_20]
mov	[ecx], eax
jmp	short loc_100588CA
mov	edx, [esp+58h+arg_20]
mov	[edx], ecx
jmp	short loc_100588CA
			
cmp	ebx, ebp
jnz	short loc_100588E3
			
cmp	[esp+58h+var_30], ebp
jnz	short loc_100588D7
test	byte ptr [esp+58h+arg_14], 8
jz	short loc_100588E3
test	byte ptr [esp+58h+arg_14], 10h
jz	short loc_100588E3
mov	ebx, 1
			
mov	eax, [esp+58h+arg_18]
mov	ecx, [esp+58h+arg_1C]
mov	[eax], ebx
mov	eax, [esp+58h+var_40]
mov	[ecx], ebp
cmp	eax, ebp
jz	short loc_10058920
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1005891C
push	esi
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_40], ebp
mov	eax, [esp+58h+var_34]
cmp	eax, ebp
jz	short loc_10058951
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1005894D
push	esi
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_34], ebp
mov	eax, [esp+58h+var_44]
cmp	eax, ebp
jz	short loc_10058982
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1005897E
push	esi
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_44], ebp
push	esi
push	1
lea	edx, [esp+60h+var_2C]
push	32h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 48h
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_4]
mov	[eax+4], edx
mov	edx, [esp+34h+arg_10]
mov	[eax], ecx
mov	ecx, [esp+34h+arg_C]
mov	[eax+0Ch], edx
mov	edx, [esp+34h+arg_18]
push	edx
mov	[eax+8], ecx
mov	ecx, [esp+38h+arg_14]
push	1
mov	[eax+10h], ecx
lea	eax, [esp+3Ch+var_2C]
push	39h
push	eax
mov	[esp+44h+var_2C], offset aPkix_revocat_1 
mov	[esp+44h+var_C], 39h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_revocat_4 
mov	[esp+34h+var_C], 3Ah
test	edi, edi
jnz	short loc_10058A69
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	2Fh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10058A92
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 308h
jmp	short loc_10058AFE
mov	eax, [edi]
test	eax, eax
jz	short loc_10058AC7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10058AC1
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
mov	eax, [edi+4]
test	eax, eax
jz	short loc_10058AFE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10058AF7
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	3Ah
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [eax+8]
cmp	[edx+8], ecx
mov	edx, [esp+34h+arg_C]
mov	ecx, [esp+34h+arg_8]
sbb	eax, eax
push	edx
neg	eax
push	1
mov	[ecx], eax
lea	eax, [esp+3Ch+var_2C]
push	3
push	eax
mov	[esp+44h+var_2C], offset aPkix_revocat_5 
mov	[esp+44h+var_C], 3
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_8]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_revocatio 
mov	[esp+3Ch+var_C], 3Ah
cmp	edi, ebx
jnz	short loc_10058BE1
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_C]
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	10h
push	2Fh
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10058C58
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	eax, [esp+3Ch+var_30]
mov	[esp+3Ch+var_1C], 126h
cmp	eax, ebx
jz	short loc_10058C3F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10058C3B
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
			
mov	[esp+3Ch+var_30], ebx
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	3Ah
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	ecx, [esp+3Ch+var_30]
mov	edx, [esp+3Ch+arg_0]
mov	[ecx+8], edx
mov	eax, [esp+3Ch+var_30]
mov	ecx, [esp+3Ch+arg_4]
mov	[eax+0Ch], ecx
mov	edx, [esp+3Ch+var_30]
mov	[edx], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+4], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[edi], ecx
jmp	short loc_10058C3B
align 10h
			
sub	esp, 38h
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_30], edx
mov	[esp+40h+var_34], edx
mov	[esp+40h+var_38], edx
mov	[esp+40h+var_2C], offset aPkix_revocat_0 
mov	[esp+40h+var_C], 3Ah
cmp	edi, edx
jnz	short loc_10058CF7
mov	eax, [esp+40h+arg_1C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 38h
retn
push	ebx
push	ebp
mov	ebp, [esp+48h+arg_18]
cmp	ebp, edx
jz	short loc_10058D06
mov	eax, [edi+8]
jmp	short loc_10058D09
mov	eax, [edi+0Ch]
mov	ebx, [esp+48h+arg_C]
test	al, 2
jz	short loc_10058D14
and	ebx, 0FFFFFFEFh
mov	eax, [esp+48h+arg_8]
sub	eax, edx
mov	esi, [esp+48h+arg_1C]
jz	short loc_10058D96
dec	eax
jz	short loc_10058D55
mov	eax, dword_100BAE9C
cmp	eax, edx
jz	short loc_10058D40
push	esi
push	2
push	3Ah
push	edx
push	241h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 241h
jmp	loc_10058E87
mov	eax, [esp+48h+arg_14]
mov	ecx, [esp+48h+arg_10]
push	esi
lea	edx, [esp+4Ch+var_38]
push	edx
push	eax
push	offset sub_10058570
push	offset sub_10058440
push	ecx
push	ebx
push	1
call	sub_10058320
add	esp, 20h
mov	[esp+48h+var_28], eax
test	eax, eax
jz	loc_10058E07
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 134h
jmp	loc_10058E83
mov	ecx, [esp+48h+arg_4]
push	esi
lea	eax, [esp+4Ch+var_34]
push	eax
push	ecx
call	sub_10062380
add	esp, 0Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_10058DC1
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 36Ch
jmp	loc_10058E83
mov	ecx, [esp+48h+arg_14]
mov	edx, [esp+48h+var_34]
push	esi
lea	eax, [esp+4Ch+var_38]
push	eax
mov	eax, [esp+50h+arg_10]
push	ecx
push	edx
push	offset sub_100571E0
push	offset sub_10056F80
push	eax
push	ebx
push	0
call	sub_10056E10
add	esp, 24h
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_10058E07
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 133h
jmp	loc_10058E87
			
test	ebp, ebp
jnz	short loc_10058E0E
add	edi, 4
cmp	dword ptr [edi], 0
jnz	short loc_10058E32
push	esi
push	edi
call	sub_100755D0
add	esp, 8
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_10058E32
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 27Dh
jmp	short loc_10058E83
			
mov	eax, [esp+48h+var_38]
mov	ebx, [edi]
push	esi
push	eax
push	ebx
mov	[esp+54h+var_30], ebx
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_10058E60
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 278h
jmp	short loc_10058E87
push	esi
push	edi
push	offset sub_10058B20
push	ebx
call	sub_10077C70
add	esp, 10h
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_10058E87
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 27Bh
			
mov	[esp+48h+var_10], edx
			
mov	eax, [esp+48h+var_38]
pop	ebp
pop	ebx
test	eax, eax
jz	short loc_10058EBC
push	esi
push	eax
call	sub_100955D0
xor	edi, edi
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, edi
jz	short loc_10058EB8
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], edi
mov	[esp+40h+var_38], edi
mov	eax, [esp+40h+var_30]
test	eax, eax
jz	short loc_10058EED
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
test	eax, eax
jz	short loc_10058EED
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], 0
			
mov	eax, [esp+40h+var_34]
test	eax, eax
jz	short loc_10058F20
push	esi
push	eax
call	sub_100955D0
xor	edi, edi
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, edi
jz	short loc_10058F1C
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], edi
mov	[esp+40h+var_34], edi
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	3Ah
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 38h
retn
align 10h
sub	esp, 58h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	ecx, [esp+64h+arg_8]
xor	ebp, ebp
xor	eax, eax
mov	[esp+64h+var_54], ebp
mov	[esp+64h+var_48], ebp
mov	[esp+64h+var_58], eax
mov	[esp+64h+var_2C], offset aPkix_revocat_2 
mov	[esp+64h+var_C], 3Ah
cmp	ecx, ebp
jz	loc_100592B0
mov	edi, [esp+64h+arg_C]
cmp	edi, ebp
jz	loc_100592B0
mov	edx, [esp+64h+arg_20]
mov	esi, [edx]
mov	[esp+64h+var_38], esi
mov	[edx], ebp
cmp	[esp+64h+arg_14], ebp
jz	short loc_10058FAA
mov	edx, [ecx]
mov	ecx, [ecx+8]
jmp	short loc_10058FB0
mov	edx, [ecx+4]
mov	ecx, [ecx+0Ch]
mov	esi, [esp+64h+arg_24]
mov	[esp+64h+var_4C], ecx
mov	[esp+64h+var_50], edx
cmp	edx, ebp
jz	loc_10059223
mov	edx, [edi+0Ch]
xor	ecx, ecx
mov	[esp+64h+var_34], ecx
mov	[esp+64h+var_30], ecx
mov	[esp+64h+var_40], edx
mov	[esp+64h+var_3C], ebp
push	ebx
lea	ecx, [ecx+0]
mov	ecx, [esp+68h+var_50]
xor	edi, edi
mov	[esp+68h+arg_8], edi
cmp	[ecx+0Ch], ebp
jbe	loc_100591C9
cmp	eax, ebp
jz	short loc_10059020
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1005901C
push	esi
push	eax
lea	edx, [esp+70h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_58], ebp
mov	ecx, [esp+68h+var_50]
push	esi
lea	eax, [esp+6Ch+var_58]
push	eax
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_10059280
mov	eax, [esp+68h+var_58]
mov	ebx, [eax+4]
test	bl, 1
jz	loc_100591B7
mov	edi, [esp+68h+var_48]
cmp	edi, ebp
jnz	loc_100590ED
mov	edx, [esp+68h+arg_8]
cmp	[esp+edx*4+68h+var_34],	ebp
jnz	loc_100590ED
mov	ecx, [esp+68h+arg_1C]
push	esi
push	ecx
mov	ecx, [esp+70h+arg_10]
lea	edx, [esp+70h+var_44]
push	edx
mov	edx, [esp+74h+arg_C]
push	ecx
mov	ecx, [esp+78h+var_40]
push	ebx
push	edx
mov	edx, [esp+80h+arg_4]
push	eax
push	ecx
mov	ecx, [esp+88h+arg_0]
push	edx
mov	[esp+8Ch+var_44], ebp
mov	edx, [eax+0Ch]
push	ecx
call	edx
add	esp, 28h
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jz	short loc_100590C2
mov	ecx, [eax+4]
mov	[esp+68h+var_10], ecx
mov	[esp+68h+var_1C], 39Dh
mov	ecx, [esp+68h+var_44]
mov	edx, [esp+68h+arg_8]
mov	[esp+edx*4+68h+var_34],	ecx
cmp	ecx, 1
jz	loc_10059295
cmp	eax, ebp
jz	short loc_100590E9
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_28], ebp
mov	eax, [esp+68h+var_58]
			
test	byte ptr [esp+68h+var_4C], 1
jz	short loc_100590FC
cmp	edi, ebp
jz	loc_1005919B
cmp	[esp+68h+arg_10], ebp
jz	loc_1005919B
mov	edi, [esp+68h+arg_8]
cmp	[esp+edi*4+68h+var_34],	ebp
lea	edi, [esp+edi*4+68h+var_34]
jnz	loc_1005919B
test	bl, 2
jnz	loc_10059276
mov	edx, [esp+68h+arg_1C]
push	esi
lea	ecx, [esp+6Ch+var_38]
push	ecx
push	edx
mov	edx, [esp+74h+arg_C]
lea	ecx, [esp+74h+var_44]
push	ecx
mov	ecx, [esp+78h+var_40]
push	ebx
push	edx
mov	edx, [esp+80h+arg_4]
push	eax
push	ecx
mov	ecx, [esp+88h+arg_0]
push	edx
mov	[esp+8Ch+var_44], ebp
mov	edx, [eax+10h]
push	ecx
call	edx
add	esp, 28h
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jz	short loc_10059176
mov	ecx, [eax+4]
mov	[esp+68h+var_10], ecx
mov	[esp+68h+var_1C], 39Dh
mov	ecx, [esp+68h+var_44]
mov	[edi], ecx
cmp	ecx, 1
jz	loc_10059295
cmp	eax, ebp
jz	short loc_10059197
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_28], ebp
mov	eax, [esp+68h+var_58]
			
mov	edx, [esp+68h+arg_8]
mov	ecx, 2
cmp	[esp+edx*4+68h+var_34],	ecx
jnz	short loc_100591B3
test	bl, 20h
jz	loc_1005929E
mov	edi, [esp+68h+arg_8]
mov	ecx, [esp+68h+var_50]
inc	edi
mov	[esp+68h+arg_8], edi
cmp	edi, [ecx+0Ch]
jb	loc_10058FF3
cmp	[esp+68h+var_48], ebp
jnz	short loc_100591F6
test	byte ptr [esp+68h+var_4C], 1
jz	short loc_100591F6
cmp	[esp+68h+arg_10], ebp
jz	short loc_10059222
mov	ecx, [esp+68h+var_3C]
inc	ecx
mov	[esp+68h+var_48], 1
mov	[esp+68h+var_3C], ecx
cmp	ecx, 2
jl	loc_10058FE0
			
cmp	[esp+68h+arg_10], ebp
jz	short loc_10059222
xor	ecx, ecx
mov	edi, edi
mov	edx, 2
cmp	[esp+ecx*4+68h+var_34],	edx
jz	loc_100592A7
inc	ecx
cmp	ecx, edx
jl	short loc_10059200
test	byte ptr [esp+68h+var_4C], dl
jz	short loc_10059222
			
mov	[esp+68h+var_54], 1
			
pop	ebx
mov	ecx, [esp+64h+arg_18]
mov	edx, [esp+64h+var_54]
mov	[ecx], edx
cmp	eax, ebp
jz	short loc_1005925D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_10059259
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_58], ebp
push	esi
push	1
lea	ecx, [esp+6Ch+var_2C]
push	3Ah
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
test	bl, 10h
jnz	short loc_1005921A
jmp	loc_1005919B
mov	edx, [eax+4]
mov	eax, [esp+68h+var_58]
mov	[esp+68h+var_10], edx
mov	[esp+68h+var_1C], 283h
jmp	short loc_10059222
			
mov	eax, [esp+68h+var_58]
jmp	loc_1005921A
mov	[esp+68h+var_54], ecx
jmp	loc_10059222
mov	[esp+68h+var_54], edx
jmp	loc_10059222
			
mov	edx, [esp+64h+arg_24]
push	edx
push	1
lea	eax, [esp+6Ch+var_2C]
push	1Fh
push	eax
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
sub	esp, 38h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_0]
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_2C], offset aPkix_revocat_6 
mov	[esp+48h+var_C], 3Ah
cmp	edi, ebx
jz	loc_10059488
mov	ebp, [esp+48h+arg_4]
cmp	ebp, ebx
jz	loc_10059488
mov	esi, [esp+48h+arg_8]
push	esi
push	2Fh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10059359
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2E5h
jmp	loc_1005940C
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_1005937A
push	esi
lea	ecx, [esp+4Ch+var_38]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jnz	loc_100593FD
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10059398
push	esi
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jnz	short loc_100593FD
mov	ecx, [edi+0Ch]
mov	edx, [edi+8]
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
push	ecx
push	edx
call	sub_10058B80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_100593C7
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 39Fh
jmp	short loc_1005940C
mov	eax, [esp+48h+var_30]
mov	ecx, [esp+48h+var_38]
mov	[eax], ecx
mov	edx, [esp+48h+var_34]
push	esi
mov	[eax+4], edx
push	1
lea	edx, [esp+50h+var_2C]
push	3Ah
push	edx
mov	[esp+58h+var_38], ebx
mov	[ebp+0], eax
mov	[esp+58h+var_34], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 2C5h
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_1005943D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10059439
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_38], ebx
mov	eax, [esp+48h+var_34]
cmp	eax, ebx
jz	short loc_1005946E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_1005946A
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_34], ebx
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	3Ah
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	eax, [esp+48h+arg_8]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB8BC
push	1
mov	[esp+60h+var_50], offset aRevocationchec 
mov	[esp+60h+var_48], 10h
mov	[esp+60h+var_44], offset sub_10058A10
mov	[esp+60h+var_30], offset sub_100592E0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	3Ah
push	ecx
mov	[esp+68h+var_2C], offset aPkix_revocat_3 
mov	[esp+68h+var_C], 3Ah
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_policyc_3 
mov	[esp+38h+var_C], 0Bh
cmp	edi, ebx
jnz	short loc_100595AD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	0Ah
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_100595D9
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 303h
jmp	loc_100597F1
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_10059606
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10059604
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10059635
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10059632
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10059664
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10059661
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_10059693
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10059690
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+0Ch], ebx
mov	eax, [edi+10h]
cmp	eax, ebx
jz	short loc_100596C2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100596BF
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+10h], ebx
mov	eax, [edi+18h]
cmp	eax, ebx
jz	short loc_100596F1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100596EE
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+18h], ebx
mov	eax, [edi+1Ch]
cmp	eax, ebx
jz	short loc_10059720
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005971D
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+1Ch], ebx
mov	eax, [edi+20h]
cmp	eax, ebx
jz	short loc_1005974F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005974C
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+20h], ebx
mov	eax, [edi+48h]
mov	[edi+24h], ebx
mov	[edi+34h], ebx
mov	[edi+38h], ebx
mov	[edi+3Ch], ebx
mov	[edi+40h], ebx
mov	[edi+44h], ebx
mov	[edi+50h], ebx
cmp	eax, ebx
jz	short loc_10059793
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10059790
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+48h], ebx
mov	eax, [edi+4Ch]
cmp	eax, ebx
jz	short loc_100597C2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100597BF
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4Ch], ebx
mov	eax, [edi+54h]
cmp	eax, ebx
jz	short loc_100597F1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100597EE
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+54h], ebx
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 84h
push	ebx
xor	ebx, ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+90h+var_84]
rep movsd
mov	edi, [esp+90h+arg_0]
mov	[esp+90h+var_8], ebx
mov	[esp+90h+var_40], ebx
mov	[esp+90h+var_30], ebx
mov	[esp+90h+var_34], ebx
mov	[esp+90h+var_38], ebx
mov	[esp+90h+var_44], ebx
mov	[esp+90h+var_24], ebx
mov	[esp+90h+var_3C], ebx
mov	[esp+90h+var_2C], ebx
mov	[esp+90h+var_50], ebx
mov	[esp+90h+var_4C], ebx
mov	[esp+90h+var_48], ebx
mov	[esp+90h+var_18], ebx
mov	[esp+90h+var_1C], ebx
mov	[esp+90h+var_14], ebx
mov	[esp+90h+var_58], ebx
mov	[esp+90h+var_84], offset aPkix_policyc_4 
mov	[esp+90h+var_64], 0Bh
cmp	edi, ebx
jz	loc_1005A200
cmp	[esp+90h+arg_4], ebx
jz	loc_1005A200
mov	esi, [esp+90h+arg_8]
push	esi
push	0Ah
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebx
jz	short loc_100598C9
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 303h
jmp	loc_10059EF6
cmp	[edi], ebx
jz	loc_1005A1F4
cmp	[edi+4], ebx
jz	loc_1005A1F4
cmp	[edi+8], ebx
jz	loc_1005A1F4
cmp	[edi+0Ch], ebx
jz	loc_1005A1F1
cmp	[edi+10h], ebx
jz	loc_1005A1F1
cmp	[edi+1Ch], ebx
jz	loc_1005A1F1
push	esi		
lea	ecx, [esp+94h+var_18]
push	ecx		
push	ebx		
push	offset aCertpoliciesex 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+90h+var_80], eax
cmp	eax, ebx
jz	short loc_1005992F
mov	edx, [eax+4]
mov	[esp+90h+var_68], edx
mov	[esp+90h+var_74], 3CFh
jmp	loc_10059EF6
mov	edx, [edi+30h]
mov	eax, [edi+28h]
mov	ecx, [edi+2Ch]
mov	[esp+90h+var_54], edx
mov	edx, [edi+24h]
push	ebp
mov	ebp, [edi+14h]
mov	[esp+94h+var_10], edx
mov	edx, [edi+50h]
mov	[esp+94h+var_C], eax
mov	[esp+94h+var_20], ecx
mov	[esp+94h+var_4], ebp
mov	[esp+94h+var_28], edx
cmp	eax, ebx
jnz	short loc_10059982
cmp	ecx, ebx
jnz	short loc_10059982
cmp	[esp+94h+var_54], ebx
jnz	short loc_10059982
cmp	ebp, ebx
jnz	short loc_10059982
cmp	[esp+94h+var_10], ebx
jnz	short loc_10059982
cmp	edx, ebx
jz	short loc_100599DB
			
push	esi		
lea	eax, [esp+98h+var_1C]
push	eax		
push	ebx		
push	offset aTrue	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_100599B3
mov	ecx, [eax+4]
mov	[esp+94h+var_68], ecx
mov	[esp+94h+var_74], 3CFh
jmp	loc_10059EF5
cmp	[esp+94h+var_C], ebx
jz	short loc_100599DB
cmp	[esp+94h+var_20], ebx
jz	short loc_100599DB
cmp	[esp+94h+var_54], ebx
jz	short loc_100599DB
cmp	ebp, ebx
jz	short loc_100599DB
cmp	[esp+94h+var_10], ebx
jz	short loc_100599DB
cmp	[esp+94h+var_28], ebx
jnz	short loc_10059A0F
			
push	esi		
lea	edx, [esp+98h+var_14]
push	edx		
push	ebx		
push	offset aFalse	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059A0F
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], 3CFh
jmp	loc_10059EF5
			
cmp	[edi+48h], ebx
jz	short loc_10059A19
cmp	[edi+4Ch], ebx
jnz	short loc_10059A4A
push	esi		
lea	ecx, [esp+98h+var_58]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059A4A
mov	edx, [eax+4]
mov	[esp+94h+var_68], edx
mov	[esp+94h+var_74], 3CFh
jmp	loc_10059EF5
			
mov	eax, [edi]
push	esi		
cmp	eax, ebx
jz	short loc_10059A66
lea	ecx, [esp+98h+var_40]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059A7F
lea	edx, [esp+98h+var_40]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059A97
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	eax, [edi+4]
push	esi		
cmp	eax, ebx
jz	short loc_10059AB4
lea	ecx, [esp+98h+var_30]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059ACD
lea	edx, [esp+98h+var_30]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059AE5
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	eax, [edi+8]
push	esi		
cmp	eax, ebx
jz	short loc_10059B02
lea	ecx, [esp+98h+var_34]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059B1B
lea	edx, [esp+98h+var_34]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059B33
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	eax, [edi+0Ch]
push	esi		
cmp	eax, ebx
jz	short loc_10059B50
lea	ecx, [esp+98h+var_38]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059B69
lea	edx, [esp+98h+var_38]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059B81
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	eax, [edi+10h]
push	esi		
cmp	eax, ebx
jz	short loc_10059B9E
lea	ecx, [esp+98h+var_44]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059BB7
lea	edx, [esp+98h+var_44]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059BCF
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	eax, [edi+18h]
push	esi		
cmp	eax, ebx
jz	short loc_10059BEC
lea	ecx, [esp+98h+var_24]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059C05
lea	edx, [esp+98h+var_24]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059C1D
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	eax, [edi+1Ch]
push	esi		
cmp	eax, ebx
jz	short loc_10059C3A
lea	ecx, [esp+98h+var_3C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059C53
lea	edx, [esp+98h+var_3C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059C6B
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	eax, [edi+20h]
push	esi		
cmp	eax, ebx
jz	short loc_10059C88
lea	ecx, [esp+98h+var_2C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059CA1
lea	edx, [esp+98h+var_2C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059CB9
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	eax, [edi+48h]
cmp	eax, ebx
jz	short loc_10059CEB
push	esi
lea	ecx, [esp+98h+var_4C]
push	ecx
push	eax
call	sub_10064E70
add	esp, 0Ch
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059D27
mov	edx, [eax+4]
mov	[esp+94h+var_68], edx
mov	[esp+94h+var_74], 3BAh
jmp	loc_10059EF5
mov	eax, [esp+94h+var_58]
cmp	eax, ebx
jz	short loc_10059D21
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+94h+var_7C], eax
cmp	eax, ebx
jz	short loc_10059D1D
push	esi
push	eax
lea	eax, [esp+9Ch+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+94h+var_7C], ebx
jmp	loc_10059EF5
mov	eax, [esp+94h+var_58]
mov	[esp+94h+var_4C], eax
jmp	short loc_10059D2B
mov	eax, [esp+94h+var_58]
mov	ecx, [edi+4Ch]
cmp	ecx, ebx
jz	short loc_10059D5D
push	esi
lea	edx, [esp+98h+var_48]
push	edx
push	ecx
call	sub_10064E70
add	esp, 0Ch
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059D93
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], 3BAh
jmp	loc_10059EF5
cmp	eax, ebx
jz	short loc_10059D8F
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+94h+var_7C], eax
cmp	eax, ebx
jz	short loc_10059D8B
push	esi
push	eax
lea	ecx, [esp+9Ch+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+94h+var_7C], ebx
jmp	loc_10059EF5
mov	eax, [esp+94h+var_58]
mov	[esp+94h+var_48], eax
mov	eax, [edi+54h]
push	esi		
cmp	eax, ebx
jz	short loc_10059DB0
lea	edx, [esp+98h+var_50]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10059DC9
lea	eax, [esp+98h+var_50]
push	eax		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059DE1
mov	edx, [eax+4]
mov	[esp+94h+var_68], edx
mov	[esp+94h+var_74], ecx
jmp	loc_10059EF5
mov	ebp, [esp+94h+var_1C]
cmp	[esp+94h+var_28], ebx
mov	eax, [esp+94h+var_14]
mov	[esp+94h+var_28], ebp
jnz	short loc_10059DFA
mov	[esp+94h+var_28], eax
cmp	[esp+94h+var_54], ebx
mov	[esp+94h+var_54], ebp
jnz	short loc_10059E08
mov	[esp+94h+var_54], eax
cmp	[esp+94h+var_20], ebx
mov	[esp+94h+var_20], ebp
jnz	short loc_10059E16
mov	[esp+94h+var_20], eax
mov	edx, ebp
cmp	[esp+94h+var_C], ebx
jnz	short loc_10059E23
mov	edx, eax
mov	ecx, ebp
cmp	[esp+94h+var_10], ebx
jnz	short loc_10059E30
mov	ecx, eax
cmp	[esp+94h+var_4], ebx
jz	short loc_10059E3B
mov	eax, ebp
mov	ebp, [esp+94h+var_50]
push	ebp
mov	ebp, [esp+98h+var_28]
push	ebp
mov	ebp, [esp+9Ch+var_48]
push	ebp
mov	ebp, [esp+0A0h+var_4C]
push	ebp
mov	ebp, [edi+44h]
push	ebp
mov	ebp, [edi+40h]
push	ebp
mov	ebp, [edi+3Ch]
push	ebp
mov	ebp, [edi+38h]
mov	edi, [edi+34h]
push	ebp
push	edi
mov	edi, [esp+0B8h+var_54]
push	edi
mov	edi, [esp+0BCh+var_20]
push	edi
push	edx
mov	edx, [esp+0C4h+var_3C]
push	ecx
mov	ecx, [esp+0C8h+var_2C]
push	ecx
mov	ecx, [esp+0CCh+var_24]
push	edx
mov	edx, [esp+0D0h+var_44]
push	ecx
mov	ecx, [esp+0D4h+var_34]
push	eax
mov	eax, [esp+0D8h+var_38]
push	edx
mov	edx, [esp+0DCh+var_30]
push	eax
mov	eax, [esp+0E0h+var_40]
push	ecx
mov	ecx, [esp+0E4h+var_18]
push	edx
push	eax
push	ecx
lea	edx, [esp+0F0h+var_8]
push	esi
push	edx
call	sub_10098590
add	esp, 64h
mov	[esp+94h+var_80], eax
cmp	eax, ebx
jz	short loc_10059EE5
mov	eax, [eax+4]
mov	[esp+94h+var_68], eax
mov	[esp+94h+var_74], 3CDh
jmp	short loc_10059EF5
mov	ecx, [esp+94h+var_8]
mov	edx, [esp+94h+arg_4]
mov	[edx], ecx
			
pop	ebp
			
mov	eax, [esp+90h+var_40]
cmp	eax, ebx
jz	short loc_10059F27
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_10059F23
push	esi
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_40], ebx
mov	eax, [esp+90h+var_30]
cmp	eax, ebx
jz	short loc_10059F58
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_10059F54
push	esi
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_30], ebx
mov	eax, [esp+90h+var_34]
cmp	eax, ebx
jz	short loc_10059F89
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_10059F85
push	esi
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_34], ebx
mov	eax, [esp+90h+var_38]
cmp	eax, ebx
jz	short loc_10059FBA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_10059FB6
push	esi
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_38], ebx
mov	eax, [esp+90h+var_44]
cmp	eax, ebx
jz	short loc_10059FEB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_10059FE7
push	esi
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_44], ebx
mov	eax, [esp+90h+var_24]
cmp	eax, ebx
jz	short loc_1005A01C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A018
push	esi
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_24], ebx
mov	eax, [esp+90h+var_3C]
cmp	eax, ebx
jz	short loc_1005A04D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A049
push	esi
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_3C], ebx
mov	eax, [esp+90h+var_2C]
cmp	eax, ebx
jz	short loc_1005A07E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A07A
push	esi
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_2C], ebx
mov	eax, [esp+90h+var_4C]
cmp	eax, ebx
jz	short loc_1005A0AF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A0AB
push	esi
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_4C], ebx
mov	eax, [esp+90h+var_48]
cmp	eax, ebx
jz	short loc_1005A0E0
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A0DC
push	esi
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_48], ebx
mov	eax, [esp+90h+var_50]
cmp	eax, ebx
jz	short loc_1005A111
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A10D
push	esi
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_50], ebx
mov	eax, [esp+90h+var_18]
cmp	eax, ebx
jz	short loc_1005A142
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A13E
push	esi
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_18], ebx
mov	eax, [esp+90h+var_1C]
cmp	eax, ebx
jz	short loc_1005A173
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A16F
push	esi
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_1C], ebx
mov	eax, [esp+90h+var_14]
cmp	eax, ebx
jz	short loc_1005A1A4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A1A0
push	esi
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_14], ebx
mov	eax, [esp+90h+var_58]
cmp	eax, ebx
jz	short loc_1005A1D5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebx
jz	short loc_1005A1D1
push	esi
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebx
mov	[esp+90h+var_58], ebx
push	esi
push	1
lea	eax, [esp+98h+var_84]
push	0Bh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 84h
retn
			
push	esi
jmp	short loc_1005A208
			
push	esi
push	1
push	1Fh
lea	edx, [esp+9Ch+var_84]
push	edx
jmp	short loc_1005A211
			
mov	eax, [esp+90h+arg_8]
push	eax
push	1
push	1Fh
lea	ecx, [esp+9Ch+var_84]
push	ecx
mov	[esp+0A0h+var_70], 1
mov	[esp+0A0h+var_74], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 84h
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB388
push	1
mov	[esp+60h+var_50], offset aPolicycheckers 
mov	[esp+60h+var_48], 58h
mov	[esp+60h+var_44], offset sub_10059550
mov	[esp+60h+var_38], offset sub_10059810
rep movsd
lea	ecx, [esp+60h+var_2C]
push	0Bh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_policyc_2 
mov	[esp+68h+var_C], 0Bh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 40h
mov	eax, [esp+40h+arg_0]
push	ebx
push	ebp
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_30], ebx
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_38], ebx
mov	[esp+50h+var_34], ebx
mov	[esp+50h+var_2C], offset aPkix_policyc_6 
mov	[esp+50h+var_C], 8
cmp	eax, ebx
jz	loc_1005A5F6
mov	ebp, [esp+50h+arg_4]
cmp	ebp, ebx
jz	loc_1005A5F6
cmp	[esp+50h+arg_8], ebx
jz	loc_1005A5F6
mov	esi, [esp+50h+arg_C]
push	esi
lea	ecx, [esp+54h+var_30]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005A35E
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 284h
jmp	loc_1005A4EE
mov	eax, [esp+50h+var_40]
xor	edi, edi
cmp	eax, ebx
jnz	loc_1005A4E8
lea	esp, [esp+0]
cmp	edi, [esp+50h+var_30]
jnb	loc_1005A4E8
mov	ecx, [esp+50h+arg_0]
push	esi
lea	eax, [esp+54h+var_3C]
push	eax
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A59B
mov	eax, [esp+50h+var_3C]
push	esi
cmp	eax, ebx
jz	loc_1005A5AF
lea	edx, [esp+54h+var_38]
push	edx
push	eax
call	sub_10084540
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A5BA
mov	eax, [esp+50h+var_38]
cmp	eax, ebx
jz	short loc_1005A43E
push	esi
lea	ecx, [esp+54h+var_40]
push	ecx
push	eax
push	ebp
call	sub_10095750
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A5CE
cmp	[esp+50h+var_40], ebx
jnz	short loc_1005A448
mov	eax, [esp+50h+var_3C]
push	esi
lea	edx, [esp+54h+var_34]
push	edx
push	eax
call	sub_10084610
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A5E2
mov	eax, [esp+50h+var_34]
cmp	eax, ebx
jz	short loc_1005A444
push	esi
lea	ecx, [esp+54h+var_40]
push	ecx
push	eax
push	ebp
call	sub_10095750
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005A448
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 2CBh
jmp	loc_1005A4EE
mov	[esp+50h+var_40], ebx
jmp	short loc_1005A3EB
mov	[esp+50h+var_40], ebx
			
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_1005A479
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A475
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_3C], ebx
mov	eax, [esp+50h+var_38]
cmp	eax, ebx
jz	short loc_1005A4AA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A4A6
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_38], ebx
mov	eax, [esp+50h+var_34]
cmp	eax, ebx
jz	short loc_1005A4DB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A4D7
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_34], ebx
mov	eax, [esp+50h+var_40]
inc	edi
cmp	eax, ebx
jz	loc_1005A370
			
mov	edx, [esp+50h+arg_8]
mov	[edx], eax
			
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_1005A51F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A51B
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_3C], ebx
mov	eax, [esp+50h+var_38]
cmp	eax, ebx
jz	short loc_1005A550
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A54C
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_38], ebx
mov	eax, [esp+50h+var_34]
cmp	eax, ebx
jz	short loc_1005A581
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A57D
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_34], ebx
push	esi
push	1
lea	eax, [esp+58h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 283h
jmp	loc_1005A4EE
push	1
push	1Fh
lea	eax, [esp+5Ch+var_2C]
push	eax
jmp	short loc_1005A604
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 0ACh
jmp	loc_1005A4EE
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 2CBh
jmp	loc_1005A4EE
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 0ADh
jmp	loc_1005A4EE
			
mov	ecx, [esp+50h+arg_C]
push	ecx
push	1
push	1Fh
lea	edx, [esp+5Ch+var_2C]
push	edx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
			
sub	esp, 44h
push	ebx
xor	ebx, ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_44], ebx
mov	[esp+50h+var_30], ebx
mov	[esp+50h+var_34], ebx
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_38], ebx
mov	[esp+50h+var_2C], offset aPkix_policyc_9 
mov	[esp+50h+var_C], 8
cmp	[esp+50h+arg_4], ebx
jz	loc_1005AA1C
cmp	[esp+50h+arg_8], ebx
jz	loc_1005AA1C
mov	esi, [esp+50h+arg_C]
push	ebp
mov	ebp, [esp+54h+arg_0]
cmp	ebp, ebx
jz	short loc_1005A6BC
push	esi
lea	eax, [esp+58h+var_30]
push	eax
push	ebp
call	sub_100757C0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1005A6C0
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 284h
jmp	loc_1005A928
mov	eax, [esp+54h+var_28]
xor	edi, edi
cmp	[esp+54h+var_30], ebx
jbe	loc_1005A84D
lea	esp, [esp+0]
push	esi
lea	edx, [esp+58h+var_40]
push	edx
push	edi
push	ebp
call	sub_10075D80
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A88C
mov	eax, [esp+54h+var_40]
push	esi
cmp	eax, ebx
jz	loc_1005A8A0
lea	ecx, [esp+58h+var_3C]
push	ecx
push	eax
call	sub_10084540
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A8C9
mov	ecx, [esp+54h+var_3C]
cmp	ecx, ebx
jz	loc_1005A883
mov	eax, [esp+54h+arg_4]
push	esi
lea	edx, [esp+58h+var_34]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A8DA
cmp	[esp+54h+var_34], ebx
jz	short loc_1005A7A3
cmp	[esp+54h+var_44], ebx
jnz	short loc_1005A765
lea	ecx, [esp+54h+var_44]
push	esi
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A8EB
mov	eax, [esp+54h+var_40]
push	esi
lea	edx, [esp+58h+var_38]
push	edx
push	eax
call	sub_10084610
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A8FC
mov	ecx, [esp+54h+var_38]
mov	edx, [esp+54h+var_44]
push	esi
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_1005A90D
			
mov	ecx, [esp+54h+var_40]
cmp	ecx, ebx
jz	short loc_1005A7D8
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A7D0
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	eax, [esp+54h+var_28]
mov	[esp+54h+var_40], ebx
mov	ecx, [esp+54h+var_3C]
cmp	ecx, ebx
jz	short loc_1005A80D
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A805
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	eax, [esp+54h+var_28]
mov	[esp+54h+var_3C], ebx
mov	ecx, [esp+54h+var_38]
cmp	ecx, ebx
jz	short loc_1005A842
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A83A
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	eax, [esp+54h+var_28]
mov	[esp+54h+var_38], ebx
inc	edi
cmp	edi, [esp+54h+var_30]
jb	loc_1005A6D0
mov	ecx, [esp+54h+var_44]
cmp	ecx, ebx
jz	loc_1005A91E
push	esi
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	loc_1005A91E
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 28Dh
jmp	loc_1005A928
mov	[esp+54h+var_34], ebx
jmp	loc_1005A7A3
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 283h
jmp	loc_1005A928
push	1
lea	edx, [esp+5Ch+var_2C]
push	1Fh
push	edx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 44h
retn
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 0ACh
jmp	short loc_1005A928
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 2CBh
jmp	short loc_1005A928
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 27Dh
jmp	short loc_1005A928
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 0ADh
jmp	short loc_1005A928
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 278h
jmp	short loc_1005A928
			
mov	ecx, [esp+54h+arg_8]
mov	edx, [esp+54h+var_44]
mov	[ecx], edx
			
cmp	[esp+54h+var_18], ebx
jnz	short loc_1005A93E
cmp	eax, ebx
jnz	short loc_1005A93E
cmp	[esp+54h+var_14], ebx
jnz	short loc_1005A93E
cmp	[esp+54h+var_4], ebx
jz	short loc_1005A96F
			
mov	eax, [esp+54h+var_44]
cmp	eax, ebx
jz	short loc_1005A96F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A96B
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_44], ebx
			
mov	eax, [esp+54h+var_40]
cmp	eax, ebx
jz	short loc_1005A9A0
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A99C
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_40], ebx
mov	eax, [esp+54h+var_3C]
cmp	eax, ebx
jz	short loc_1005A9D1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A9CD
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_3C], ebx
mov	eax, [esp+54h+var_38]
cmp	eax, ebx
jz	short loc_1005AA02
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005A9FE
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_38], ebx
push	esi
push	1
lea	ecx, [esp+5Ch+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 44h
retn
			
mov	edx, [esp+50h+arg_C]
push	edx
push	1
lea	eax, [esp+58h+var_2C]
push	1Fh
push	eax
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 44h
retn
align 10h
sub	esp, 40h
push	ebx
push	ebp
mov	ebp, [esp+48h+arg_0]
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	[esp+50h+var_38], ebx
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_34], ebx
mov	[esp+50h+var_30], ebx
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_2C], offset aPkix_policyc_7 
mov	[esp+50h+var_C], 8
cmp	ebp, ebx
jz	loc_1005AD31
cmp	[esp+50h+arg_4], ebx
jz	loc_1005AD31
mov	esi, [esp+50h+arg_8]
lea	eax, [esp+50h+var_3C]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005AAD1
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 27Dh
jmp	loc_1005AC13
push	esi
lea	edx, [esp+54h+var_34]
push	edx
push	ebp
call	sub_100757C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005AAFC
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 284h
jmp	loc_1005AC13
xor	edi, edi
cmp	[esp+50h+var_34], ebx
jbe	loc_1005AC09
push	esi
lea	edx, [esp+54h+var_38]
push	edx
push	edi
push	ebp
call	sub_10075D80
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1005ACD6
mov	eax, [esp+50h+var_38]
push	esi
cmp	eax, ebx
jz	loc_1005ACEA
lea	ecx, [esp+54h+var_40]
push	ecx
push	eax
call	sub_10084540
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1005ACF5
mov	eax, [esp+50h+var_40]
mov	ecx, [esp+50h+var_3C]
push	esi
lea	edx, [esp+54h+var_30]
push	edx
push	eax
push	ecx
call	sub_10077130
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1005AD09
cmp	[esp+50h+var_30], ebx
jnz	short loc_1005AB94
mov	edx, [esp+50h+var_40]
mov	eax, [esp+50h+var_3C]
push	esi
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1005AD1D
mov	ecx, [esp+50h+var_38]
cmp	ecx, ebx
jz	short loc_1005ABC9
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005ABC1
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	eax, [esp+50h+var_28]
mov	[esp+50h+var_38], ebx
mov	ecx, [esp+50h+var_40]
cmp	ecx, ebx
jz	short loc_1005ABFE
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005ABF6
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	eax, [esp+50h+var_28]
mov	[esp+50h+var_40], ebx
inc	edi
cmp	edi, [esp+50h+var_34]
jb	loc_1005AB08
mov	edx, [esp+50h+arg_4]
mov	ecx, [esp+50h+var_3C]
mov	[edx], ecx
			
cmp	[esp+50h+var_18], ebx
jnz	short loc_1005AC29
cmp	eax, ebx
jnz	short loc_1005AC29
cmp	[esp+50h+var_14], ebx
jnz	short loc_1005AC29
cmp	[esp+50h+var_4], ebx
jz	short loc_1005AC5A
			
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_1005AC5A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005AC56
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_3C], ebx
			
mov	eax, [esp+50h+var_38]
cmp	eax, ebx
jz	short loc_1005AC8B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005AC87
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_38], ebx
mov	eax, [esp+50h+var_40]
cmp	eax, ebx
jz	short loc_1005ACBC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005ACB8
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_40], ebx
push	esi
push	1
lea	edx, [esp+58h+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 283h
jmp	loc_1005AC13
push	1
push	1Fh
lea	edx, [esp+5Ch+var_2C]
push	edx
jmp	short loc_1005AD3F
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 0ACh
jmp	loc_1005AC13
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 27Ch
jmp	loc_1005AC13
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 278h
jmp	loc_1005AC13
			
mov	eax, [esp+50h+arg_8]
push	eax
push	1
push	1Fh
lea	ecx, [esp+5Ch+var_2C]
push	ecx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
sub	esp, 38h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_2C], offset aPkix_policy_15 
mov	[esp+44h+var_C], 8
cmp	edi, ebp
jz	loc_1005AF44
cmp	[esp+44h+arg_4], ebp
jz	loc_1005AF44
lea	eax, [esp+44h+var_34]
push	ebx
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	loc_1005AE4E
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 27Dh
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_1005AE04
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1005AE00
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
mov	eax, [esp+44h+var_38]
			
cmp	eax, ebp
jz	short loc_1005AE35
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1005AE31
push	ebx
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_38], ebp
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
push	ebx
lea	edx, [esp+48h+var_30]
push	edx
push	edi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1005AE79
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 284h
jmp	loc_1005ADD3
xor	esi, esi
cmp	[esp+44h+var_30], ebp
jbe	loc_1005AF2D
push	ebx
lea	ecx, [esp+48h+var_38]
push	ecx
push	esi
push	edi
call	sub_10075D80
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jnz	short loc_1005AF05
mov	edx, [esp+44h+var_38]
mov	eax, [esp+44h+var_34]
push	ebx
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jnz	short loc_1005AF19
mov	eax, [esp+44h+var_38]
cmp	eax, ebp
jz	short loc_1005AEEB
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1005AEE5
push	ebx
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
xor	eax, eax
mov	[esp+44h+var_38], eax
inc	esi
cmp	esi, [esp+44h+var_30]
jb	short loc_1005AE85
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+arg_4]
mov	[edx], ecx
mov	[esp+44h+var_34], ebp
jmp	loc_1005AE08
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 283h
jmp	loc_1005ADD3
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 278h
jmp	loc_1005ADD3
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+arg_4]
mov	eax, [esp+44h+var_38]
mov	[edx], ecx
mov	[esp+44h+var_34], ebp
jmp	loc_1005AE08
			
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
			
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+arg_0], 0
mov	[esp+38h+var_2C], offset aPkix_policyc_1 
mov	[esp+38h+var_C], 8
test	ebp, ebp
jz	loc_1005B09A
mov	esi, [esp+38h+arg_8]
test	esi, esi
jz	loc_1005B09A
lea	eax, [esp+38h+arg_0]
push	ebx
push	eax
call	sub_100755D0
xor	edi, edi
add	esp, 8
mov	[esp+38h+var_28], eax
cmp	eax, edi
jz	short loc_1005AFDF
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 27Dh
jmp	short loc_1005B03A
mov	edx, [esp+38h+arg_0]
push	ebx
push	ebp
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, edi
jz	short loc_1005B007
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 278h
jmp	short loc_1005B03A
cmp	[esp+38h+arg_4], edi
jz	short loc_1005B034
mov	edx, [esp+38h+arg_0]
push	ebx
push	edx
call	sub_10075700
add	esp, 8
mov	[esp+38h+var_28], eax
cmp	eax, edi
jz	short loc_1005B034
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 28Dh
jmp	short loc_1005B03A
			
mov	edx, [esp+38h+arg_0]
mov	[esi], edx
			
cmp	[esp+38h+var_18], edi
jnz	short loc_1005B050
cmp	eax, edi
jnz	short loc_1005B050
cmp	[esp+38h+var_14], edi
jnz	short loc_1005B050
cmp	[esp+38h+var_4], edi
jz	short loc_1005B081
			
mov	eax, [esp+38h+arg_0]
cmp	eax, edi
jz	short loc_1005B081
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1005B07D
push	ebx
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[esp+38h+arg_0], edi
			
push	ebx
push	1
lea	ecx, [esp+40h+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
push	ebx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
			
sub	esp, 34h
push	ebx
push	ebp
mov	ebp, [esp+3Ch+arg_4]
push	esi
push	edi
mov	ebx, eax
xor	eax, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_34], eax
mov	[esp+44h+arg_4], eax
mov	[esp+44h+var_30], eax
mov	[esp+44h+var_2C], offset aPkix_policy_10 
mov	[esp+44h+var_C], 8
cmp	ebp, eax
jz	loc_1005B33F
cmp	[esp+44h+arg_0], eax
jz	loc_1005B33F
cmp	[esp+44h+arg_10], eax
jz	loc_1005B33F
mov	edi, [esp+44h+arg_C]
cmp	edi, eax
jz	short loc_1005B19C
push	ebx
push	edi
call	sub_10095450
xor	esi, esi
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1005B15B
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
jmp	loc_1005B2C7
mov	[esp+44h+var_34], edi
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+arg_10]
push	ebx
lea	eax, [esp+48h+arg_4]
push	eax
mov	eax, [edx+50h]
push	ecx
mov	ecx, [esp+50h+arg_8]
push	eax
push	ecx
push	ebp
call	sub_100648E0
add	esp, 18h
mov	[esp+44h+var_28], eax
cmp	eax, esi
jz	short loc_1005B1CA
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 34Bh
jmp	loc_1005B2C7
lea	ecx, [esp+44h+var_34]
push	ecx
push	1
push	ebp
call	sub_1005AF70
add	esp, 0Ch
xor	esi, esi
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1005B15F
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 344h
jmp	loc_1005B2C7
cmp	edi, esi
mov	edi, [esp+44h+arg_10]
jnz	loc_1005B27A
mov	eax, [edi+10h]
cmp	eax, esi
jz	short loc_1005B209
push	ebx
lea	ecx, [esp+48h+var_30]
push	ecx
push	eax
push	ebp
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, esi
jz	short loc_1005B20F
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 2CBh
jmp	loc_1005B2C7
mov	[esp+44h+var_30], esi
jmp	short loc_1005B27A
cmp	[esp+44h+var_30], esi
jz	short loc_1005B27A
mov	eax, [edi+4Ch]
cmp	eax, esi
jz	short loc_1005B244
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1005B241
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
mov	[edi+4Ch], esi
mov	eax, [esp+44h+arg_4]
cmp	eax, esi
jz	short loc_1005B273
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1005B273
push	ebx
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
jmp	short loc_1005B2C7
			
mov	edx, [esp+44h+arg_4]
mov	[edi+4Ch], edx
			
mov	eax, [esp+44h+arg_4]
mov	ecx, [esp+44h+arg_0]
push	ebx
push	eax
push	ecx
call	sub_10064AD0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, esi
jz	short loc_1005B2A6
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 34Ah
jmp	short loc_1005B2C7
push	ebx
push	edi
call	sub_10095BC0
add	esp, 8
mov	[esp+44h+var_28], eax
cmp	eax, esi
jz	short loc_1005B2C7
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 2D0h
			
mov	eax, [esp+44h+arg_4]
cmp	eax, esi
jz	short loc_1005B2F8
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1005B2F4
push	ebx
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
mov	[esp+44h+arg_4], esi
mov	eax, [esp+44h+var_34]
cmp	eax, esi
jz	short loc_1005B325
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1005B325
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
			
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
push	ebx
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
			
sub	esp, 44h
push	ebx
push	ebp
mov	ebp, [esp+4Ch+arg_0]
xor	ebx, ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	[esp+54h+var_34], ebx
mov	[esp+54h+var_38], ebx
mov	[esp+54h+var_30], ebx
mov	[esp+54h+var_40], ebx
mov	[esp+54h+var_44], ebx
mov	[esp+54h+var_3C], ebx
mov	[esp+54h+var_2C], offset aPkix_policy_11 
mov	[esp+54h+var_C], 8
cmp	ebp, ebx
jz	loc_1005B696
mov	edi, [esp+54h+arg_C]
cmp	edi, ebx
jz	loc_1005B696
cmp	[esp+54h+arg_10], ebx
jz	loc_1005B696
cmp	[esp+54h+arg_14], ebx
jz	loc_1005B696
mov	esi, [esp+54h+arg_18]
push	esi
lea	eax, [esp+58h+var_34]
push	eax
push	edi
call	sub_10066B00
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1005B40C
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 34Eh
jmp	loc_1005B5E9
mov	edx, [esp+54h+var_34]
mov	eax, [esp+54h+arg_10]
push	esi
cmp	edx, [eax+44h]
jnb	loc_1005B53C
lea	ecx, [esp+58h+var_40]
push	ecx
push	edi
call	sub_10064810
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1005B448
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 34Dh
jmp	loc_1005B5E9
mov	eax, [esp+54h+var_40]
cmp	eax, ebx
jz	short loc_1005B47B
push	esi
lea	ecx, [esp+58h+var_38]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1005B47B
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 284h
jmp	loc_1005B5E9
			
xor	edi, edi
cmp	[esp+54h+var_38], ebx
jbe	loc_1005B5E9
mov	ebp, [esp+54h+arg_8]
jmp	short loc_1005B490
align 10h
			
mov	ecx, [esp+54h+var_40]
push	esi
lea	eax, [esp+58h+var_44]
push	eax
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	short loc_1005B514
mov	edx, [esp+54h+arg_14]
mov	eax, [esp+54h+arg_10]
mov	ecx, [esp+54h+var_44]
push	esi
push	edx
mov	edx, [esp+5Ch+arg_4]
push	eax
mov	eax, [esp+60h+arg_0]
push	ecx
push	ebp
push	edx
push	eax
call	sub_1005B370
add	esp, 1Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	short loc_1005B528
mov	eax, [esp+54h+var_44]
cmp	eax, ebx
jz	short loc_1005B508
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005B504
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_44], ebx
inc	edi
cmp	edi, [esp+54h+var_38]
jb	short loc_1005B490
jmp	loc_1005B5E9
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 283h
jmp	loc_1005B5E9
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 340h
jmp	loc_1005B5E9
lea	ecx, [esp+58h+var_3C]
push	ecx
push	edi
call	sub_100669B0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1005B566
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 34Fh
jmp	loc_1005B5E9
mov	eax, [esp+54h+var_3C]
push	esi
cmp	eax, ebx
jnz	short loc_1005B57D
push	1
push	1Fh
lea	eax, [esp+60h+var_2C]
push	eax
jmp	loc_1005B6A4
lea	ecx, [esp+58h+var_30]
push	ecx
push	ebp
push	eax
call	sub_10077130
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1005B5A5
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 27Ch
jmp	short loc_1005B5E9
cmp	[esp+54h+var_30], ebx
jz	short loc_1005B5E9
mov	eax, [esp+54h+arg_10]
mov	ecx, [esp+54h+arg_8]
mov	edx, [esp+54h+arg_4]
push	eax
push	ecx
push	edx
push	ebp
push	edi
mov	eax, esi
call	sub_1005B0D0
add	esp, 14h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1005B5DF
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 348h
jmp	short loc_1005B5E9
mov	ecx, [esp+54h+arg_14]
mov	dword ptr [ecx], 1
			
mov	eax, [esp+54h+var_40]
cmp	eax, ebx
jz	short loc_1005B61A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005B616
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_40], ebx
mov	eax, [esp+54h+var_44]
cmp	eax, ebx
jz	short loc_1005B64B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005B647
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_44], ebx
mov	eax, [esp+54h+var_3C]
cmp	eax, ebx
jz	short loc_1005B67C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1005B678
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_3C], ebx
push	esi
push	1
lea	edx, [esp+5Ch+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
			
mov	eax, [esp+54h+arg_18]
push	eax
push	1
push	1Fh
lea	ecx, [esp+60h+var_2C]
push	ecx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
sub	esp, 3Ch
push	ebp
mov	ebp, [esp+40h+arg_10]
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	esi, [esp+48h+arg_0]
xor	eax, eax
mov	[esp+48h+var_38], edx
mov	[esp+48h+var_34], edx
mov	[esp+48h+var_30], edx
mov	[esp+48h+var_3C], eax
mov	[esp+48h+var_2C], offset aPkix_policyc_8 
mov	[esp+48h+var_C], 8
cmp	esi, edx
jz	loc_1005B930
cmp	[esp+48h+arg_8], edx
jz	loc_1005B930
cmp	ebx, edx
jz	loc_1005B930
mov	ecx, [ebx+40h]
dec	ecx
cmp	[ebx+44h], ecx
jz	short loc_1005B76B
mov	eax, [esp+48h+arg_C]
push	ebp
lea	edx, [esp+4Ch+var_3C]
push	edx
push	esi
push	eax
call	sub_1005A630
add	esp, 10h
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1005B765
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 347h
jmp	loc_1005B8E3
mov	eax, [esp+48h+var_3C]
xor	edx, edx
cmp	[ebx+3Ch], edx
jnz	short loc_1005B778
cmp	eax, edx
jnz	loc_1005B8EE
mov	ecx, [ebx+18h]
mov	edi, [esp+48h+arg_4]
push	ebp
lea	edx, [esp+4Ch+var_38]
push	edx
push	ebx
push	ecx
push	eax
push	edi
push	esi
call	sub_1005B370
add	esp, 1Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1005B7AA
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 340h
jmp	loc_1005B8DF
cmp	[esp+48h+var_38], 0
jnz	loc_1005B844
cmp	dword ptr [ebx+48h], 0
jz	loc_1005B8E3
cmp	dword ptr [ebx+14h], 0
jz	short loc_1005B7CF
mov	[esp+48h+var_34], 1
jmp	short loc_1005B801
mov	ecx, [ebx+20h]
push	ebp
lea	eax, [esp+4Ch+var_34]
push	eax
push	esi
push	ecx
call	sub_10077130
add	esp, 10h
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1005B7FA
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 27Ch
jmp	loc_1005B8DF
cmp	[esp+48h+var_34], 0
jz	short loc_1005B839
mov	eax, [esp+48h+var_3C]
mov	ecx, [ebx+48h]
push	ebx
push	eax
push	edi
push	esi
push	ecx
mov	eax, ebp
call	sub_1005B0D0
add	esp, 14h
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1005B82F
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 348h
jmp	loc_1005B8DF
mov	[esp+48h+var_38], 1
jmp	short loc_1005B844
cmp	[esp+48h+var_38], 0
jz	loc_1005B8E3
			
test	edi, edi
jz	short loc_1005B887
cmp	dword ptr [ebx+50h], 0
jz	short loc_1005B887
cmp	dword ptr [ebx+24h], 0
jz	short loc_1005B887
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1005B875
mov	ecx, [esp+48h+var_C]
push	ebp
push	2
push	ecx
push	0
push	392h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 392h
jmp	short loc_1005B8E3
			
mov	eax, [ebx+54h]
test	eax, eax
jz	short loc_1005B8E3
push	ebp
lea	edx, [esp+4Ch+var_30]
push	edx
push	esi
push	eax
call	sub_10077130
add	esp, 10h
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1005B8B7
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 27Ch
jmp	short loc_1005B8E3
cmp	[esp+48h+var_30], 0
jz	short loc_1005B8E3
mov	ecx, [ebx+54h]
push	ebp
push	esi
push	ecx
call	sub_10077300
add	esp, 0Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1005B8E3
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 28Ah
			
mov	[esp+48h+var_10], edx
			
cmp	[esp+48h+var_3C], 0
jz	short loc_1005B917
mov	eax, [esp+48h+var_3C]
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
test	eax, eax
jz	short loc_1005B917
push	ebp
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], 0
			
push	ebp
push	1
lea	ecx, [esp+50h+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
			
push	ebp
push	1
lea	edx, [esp+50h+var_2C]
push	1Fh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
align 10h
			
sub	esp, 54h
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+5Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	[esp+64h+var_30], ebx
mov	[esp+64h+var_3C], ebx
mov	[esp+64h+var_34], ebx
mov	[esp+64h+var_38], ebx
mov	[esp+64h+var_4C], ebx
mov	[esp+64h+var_54], ebx
mov	[esp+64h+var_44], ebx
mov	[esp+64h+var_50], ebx
mov	[esp+64h+var_48], ebx
mov	[esp+64h+var_40], ebx
mov	[esp+64h+var_2C], offset aPkix_policy_12 
mov	[esp+64h+var_C], 8
cmp	ebp, ebx
jz	loc_1005BF4F
cmp	[esp+64h+arg_C], ebx
jz	loc_1005BF4F
mov	esi, [esp+64h+arg_10]
push	esi
lea	eax, [esp+68h+var_30]
push	eax
push	ebp
call	sub_10066B00
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_1005B9F6
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 34Eh
jmp	loc_1005BE13
push	esi
lea	edx, [esp+68h+var_4C]
push	edx
push	ebp
call	sub_10064810
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_1005BA1D
mov	eax, [eax+4]
mov	[esp+64h+var_1C], 34Dh
jmp	loc_1005BE0F
mov	eax, [esp+64h+var_4C]
cmp	eax, ebx
jz	short loc_1005BA50
push	esi
lea	ecx, [esp+68h+var_3C]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_1005BA50
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 284h
jmp	loc_1005BE13
			
mov	eax, [esp+64h+var_30]
mov	ecx, [esp+64h+arg_C]
cmp	eax, [ecx+44h]
jnb	loc_1005BB2F
xor	edi, edi
cmp	[esp+64h+var_3C], ebx
jbe	loc_1005BE13
mov	ebx, [esp+64h+arg_8]
mov	ebp, [esp+64h+arg_4]
mov	eax, [esp+64h+var_4C]
push	esi
lea	edx, [esp+68h+var_54]
push	edx
push	edi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+64h+var_28], eax
test	eax, eax
jnz	short loc_1005BAF9
mov	eax, [esp+64h+var_54]
push	esi
test	eax, eax
jz	short loc_1005BB0B
mov	ecx, [esp+68h+arg_C]
push	ecx
push	ebx
push	ebp
push	eax
call	sub_1005B960
add	esp, 14h
mov	[esp+64h+var_28], eax
test	eax, eax
jnz	short loc_1005BB19
mov	eax, [esp+64h+var_54]
test	eax, eax
jz	short loc_1005BAEB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
test	eax, eax
jz	short loc_1005BAE3
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], 0
mov	[esp+64h+var_54], 0
inc	edi
cmp	edi, [esp+64h+var_3C]
jb	short loc_1005BA75
xor	ebx, ebx
jmp	loc_1005BE13
mov	eax, [eax+4]
mov	[esp+64h+var_1C], 283h
xor	ebx, ebx
jmp	loc_1005BE0F
			
push	1
push	1Fh
lea	ecx, [esp+70h+var_2C]
push	ecx
jmp	loc_1005BF5D
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 33Fh
xor	ebx, ebx
jmp	loc_1005BE13
push	esi
lea	eax, [esp+68h+var_44]
push	eax
push	ebp
call	sub_100669B0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_1005BB5A
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 34Fh
jmp	loc_1005BE13
mov	eax, [esp+64h+var_44]
push	esi
cmp	eax, ebx
jz	loc_1005BDC1
lea	ecx, [esp+68h+var_34]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_1005BB91
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 284h
jmp	loc_1005BE13
mov	[esp+64h+arg_0], ebx
cmp	[esp+64h+var_34], ebx
jbe	loc_1005BE13
nop
mov	ecx, [esp+64h+arg_0]
mov	edx, [esp+64h+var_44]
push	esi
lea	eax, [esp+68h+var_50]
push	eax
push	ecx
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jnz	loc_1005BDAF
cmp	[esp+64h+var_50], ebx
jz	loc_1005BDC0
xor	eax, eax
mov	[esp+64h+var_38], eax
xor	edi, edi
cmp	edi, [esp+64h+var_3C]
jnb	loc_1005BCDF
mov	ecx, [esp+64h+var_4C]
push	esi
lea	eax, [esp+68h+var_54]
push	eax
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jnz	loc_1005BDCF
mov	eax, [esp+64h+var_54]
push	esi
cmp	eax, ebx
jz	loc_1005BB0B
lea	edx, [esp+68h+var_48]
push	edx
push	eax
call	sub_10066770
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jnz	loc_1005BDDC
mov	ecx, [esp+64h+var_48]
cmp	ecx, ebx
jz	loc_1005BDED
mov	eax, [esp+64h+var_50]
cmp	eax, ebx
jz	short loc_1005BC67
push	esi
lea	edx, [esp+68h+var_38]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_1005BC6B
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 2CBh
jmp	loc_1005BE13
mov	[esp+64h+var_38], ebx
mov	eax, [esp+64h+var_54]
cmp	eax, ebx
jz	short loc_1005BC9C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BC98
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_54], ebx
mov	eax, [esp+64h+var_48]
cmp	eax, ebx
jz	short loc_1005BCCD
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BCC9
push	esi
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_48], ebx
mov	eax, [esp+64h+var_38]
inc	edi
cmp	eax, ebx
jz	loc_1005BBD6
jmp	loc_1005BD69
cmp	eax, ebx
jnz	loc_1005BD69
cmp	[esp+64h+arg_8], ebx
jz	short loc_1005BD11
mov	eax, [esp+64h+var_50]
mov	ecx, [esp+64h+arg_8]
push	esi
lea	edx, [esp+68h+var_40]
push	edx
push	eax
push	ecx
call	sub_1005A630
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jnz	loc_1005BDF3
mov	edx, [esp+64h+arg_C]
mov	edi, [esp+64h+var_40]
mov	eax, [esp+64h+arg_4]
mov	ecx, [esp+64h+var_50]
push	edx
push	edi
push	eax
push	ecx
push	ebp
mov	eax, esi
call	sub_1005B0D0
add	esp, 14h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jnz	loc_1005BE04
cmp	edi, ebx
jz	short loc_1005BD69
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BD65
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_40], ebx
			
mov	eax, [esp+64h+var_50]
cmp	eax, ebx
jz	short loc_1005BD9A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BD96
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_50], ebx
mov	eax, [esp+64h+arg_0]
inc	eax
mov	[esp+64h+arg_0], eax
cmp	eax, [esp+64h+var_34]
jb	loc_1005BBA0
jmp	short loc_1005BE13
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 283h
jmp	short loc_1005BE13
push	esi
push	1
push	1Fh
lea	edx, [esp+70h+var_2C]
push	edx
jmp	loc_1005BF5D
mov	eax, [eax+4]
mov	[esp+64h+var_1C], 283h
jmp	short loc_1005BE0F
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 352h
jmp	short loc_1005BE13
push	esi
jmp	loc_1005BF54
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 347h
jmp	short loc_1005BE13
mov	eax, [eax+4]
mov	[esp+64h+var_1C], 348h
			
mov	[esp+64h+var_10], eax
			
mov	eax, [esp+64h+var_4C]
cmp	eax, ebx
jz	short loc_1005BE44
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BE40
push	esi
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_4C], ebx
mov	eax, [esp+64h+var_54]
cmp	eax, ebx
jz	short loc_1005BE75
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BE71
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_54], ebx
mov	eax, [esp+64h+var_44]
cmp	eax, ebx
jz	short loc_1005BEA6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BEA2
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_44], ebx
mov	eax, [esp+64h+var_50]
cmp	eax, ebx
jz	short loc_1005BED7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BED3
push	esi
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_50], ebx
mov	eax, [esp+64h+var_48]
cmp	eax, ebx
jz	short loc_1005BF08
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BF04
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_48], ebx
mov	eax, [esp+64h+var_40]
cmp	eax, ebx
jz	short loc_1005BF35
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_1005BF35
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
			
push	esi
push	1
lea	ecx, [esp+6Ch+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 54h
retn
			
mov	edx, [esp+64h+arg_10]
push	edx
push	1
push	1Fh
lea	eax, [esp+70h+var_2C]
push	eax
			
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 54h
retn
align 10h
			
sub	esp, 68h
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+70h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+78h+var_2C]
rep movsd
mov	[esp+78h+var_40], ebx
mov	[esp+78h+var_44], ebx
mov	[esp+78h+var_3C], ebx
mov	[esp+78h+var_34], ebx
mov	[esp+78h+var_30], ebx
mov	[esp+78h+var_38], ebx
mov	[esp+78h+var_50], ebx
mov	[esp+78h+var_54], ebx
mov	[esp+78h+var_60], ebx
mov	[esp+78h+var_4C], ebx
mov	[esp+78h+var_5C], ebx
mov	[esp+78h+var_68], ebx
mov	[esp+78h+var_58], ebx
mov	[esp+78h+var_64], ebx
mov	[esp+78h+var_48], ebx
mov	[esp+78h+var_2C], offset aPkix_policy_16 
mov	[esp+78h+var_C], 8
cmp	[ebp+18h], ebx
jz	loc_1005C603
cmp	[ebp+14h], ebx
jnz	loc_1005C603
mov	edi, [esp+78h+arg_0]
cmp	edi, ebx
jz	loc_1005C5D2
cmp	[esp+78h+arg_8], ebx
jz	loc_1005C5D2
cmp	[esp+78h+arg_C], ebx
jz	loc_1005C5D2
mov	esi, [esp+78h+arg_10]
push	esi
lea	eax, [esp+7Ch+var_60]
push	eax
push	edi
call	sub_10066770
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C053
mov	ecx, [eax+4]
mov	[esp+78h+var_10], ecx
mov	[esp+78h+var_1C], 352h
jmp	loc_1005C637
mov	eax, [ebp+10h]
cmp	eax, ebx
jz	loc_1005C5A8
mov	ecx, [esp+78h+var_60]
cmp	ecx, ebx
jz	loc_1005C5A8
push	esi
lea	edx, [esp+7Ch+var_40]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C096
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 2CBh
jmp	loc_1005C637
push	esi
lea	ecx, [esp+7Ch+var_68]
push	ecx
push	edi
call	sub_100666A0
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C0C1
mov	edx, [eax+4]
mov	[esp+78h+var_10], edx
mov	[esp+78h+var_1C], 350h
jmp	loc_1005C637
cmp	[esp+78h+var_40], ebx
jnz	loc_1005C1F4
mov	eax, [esp+78h+var_68]
cmp	eax, ebx
jz	loc_1005C177
push	esi
lea	ecx, [esp+7Ch+var_4C]
push	ecx
push	eax
call	sub_10066770
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C102
mov	edx, [eax+4]
mov	[esp+78h+var_10], edx
mov	[esp+78h+var_1C], 352h
jmp	loc_1005C637
mov	ecx, [esp+78h+var_4C]
cmp	ecx, ebx
jnz	short loc_1005C134
push	esi
push	1
lea	eax, [esp+80h+var_2C]
push	1Fh
push	eax
mov	[esp+88h+var_18], 1
mov	[esp+88h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 68h
retn
mov	eax, [ebp+10h]
cmp	eax, ebx
jz	short loc_1005C167
push	esi
lea	edx, [esp+7Ch+var_44]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C16B
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 2CBh
jmp	loc_1005C637
mov	[esp+78h+var_44], ebx
cmp	[esp+78h+var_68], ebx
jz	short loc_1005C177
cmp	[esp+78h+var_44], ebx
jz	short loc_1005C1F4
			
mov	edx, [esp+78h+var_60]
mov	eax, [ebp+1Ch]
push	esi
lea	ecx, [esp+7Ch+var_3C]
push	ecx
push	edx
push	eax
call	sub_10077130
add	esp, 10h
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C1AA
mov	ecx, [eax+4]
mov	[esp+78h+var_10], ecx
mov	[esp+78h+var_1C], 27Ch
jmp	loc_1005C637
cmp	[esp+78h+var_3C], ebx
jnz	short loc_1005C1C2
mov	edx, [esp+78h+arg_C]
mov	dword ptr [edx], 1
jmp	loc_1005C637
mov	eax, [esp+78h+var_60]
mov	ecx, [esp+78h+arg_8]
push	esi
push	eax
push	ecx
call	sub_10077300
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C1F4
mov	edx, [eax+4]
mov	[esp+78h+var_10], edx
mov	[esp+78h+var_1C], 28Ah
jmp	loc_1005C637
			
push	esi
lea	eax, [esp+7Ch+var_38]
push	eax
push	edi
call	sub_10066B00
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C21F
mov	ecx, [eax+4]
mov	[esp+78h+var_10], ecx
mov	[esp+78h+var_1C], 34Eh
jmp	loc_1005C637
mov	edx, [esp+78h+var_38]
cmp	edx, [ebp+40h]
jnz	loc_1005C3B5
cmp	[esp+78h+var_40], 1
jnz	loc_1005C637
mov	ecx, [esp+78h+arg_8]
push	esi
lea	eax, [esp+7Ch+var_54]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C269
mov	edx, [eax+4]
mov	[esp+78h+var_10], edx
mov	[esp+78h+var_1C], 284h
jmp	loc_1005C637
cmp	[esp+78h+var_54], ebx
jz	short loc_1005C2C5
push	esi
lea	eax, [esp+7Ch+var_48]
push	eax
push	edi
call	sub_10066840
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C29A
mov	ecx, [eax+4]
mov	[esp+78h+var_10], ecx
mov	[esp+78h+var_1C], 351h
jmp	loc_1005C637
push	esi
lea	edx, [esp+7Ch+var_30]
push	edx
push	edi
call	sub_10066A80
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C2C5
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 353h
jmp	loc_1005C637
			
cmp	[esp+78h+var_68], ebx
jnz	short loc_1005C2F5
push	esi
push	1
lea	ecx, [esp+80h+var_2C]
push	1Fh
push	ecx
mov	[esp+88h+var_18], 1
mov	[esp+88h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 68h
retn
xor	edi, edi
cmp	[esp+78h+var_54], ebx
jbe	loc_1005C596
mov	eax, [esp+78h+arg_8]
push	esi
lea	edx, [esp+7Ch+var_5C]
push	edx
push	edi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jnz	short loc_1005C38D
mov	ecx, [esp+78h+var_48]
mov	edx, [esp+78h+var_5C]
mov	eax, [esp+78h+var_68]
push	ebp
push	ebx
push	ecx
push	edx
push	eax
mov	eax, esi
call	sub_1005B0D0
add	esp, 14h
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jnz	short loc_1005C3A1
mov	eax, [esp+78h+var_5C]
cmp	eax, ebx
jz	short loc_1005C374
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C370
push	esi
push	eax
lea	ecx, [esp+80h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_5C], ebx
inc	edi
cmp	edi, [esp+78h+var_54]
jb	short loc_1005C301
mov	ecx, [esp+78h+arg_C]
mov	dword ptr [ecx], 1
jmp	loc_1005C637
mov	edx, [eax+4]
mov	[esp+78h+var_10], edx
mov	[esp+78h+var_1C], 283h
jmp	loc_1005C637
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 348h
jmp	loc_1005C637
push	esi
lea	edx, [esp+7Ch+var_64]
push	edx
push	edi
call	sub_10064810
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C3E0
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 34Dh
jmp	loc_1005C637
mov	eax, [esp+78h+var_64]
push	esi
cmp	eax, ebx
jnz	short loc_1005C412
push	1
lea	ecx, [esp+80h+var_2C]
push	1Fh
push	ecx
mov	[esp+88h+var_18], 1
mov	[esp+88h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 68h
retn
lea	edx, [esp+7Ch+var_50]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C43C
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 284h
jmp	loc_1005C637
mov	eax, [esp+78h+var_50]
cmp	eax, ebx
jbe	loc_1005C50D
lea	edi, [eax-1]
jmp	short loc_1005C450
align 10h
			
mov	edx, [esp+78h+var_64]
push	esi
lea	ecx, [esp+7Ch+var_58]
push	ecx
push	edi
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jnz	loc_1005C53C
mov	ecx, [esp+78h+arg_8]
mov	edx, [esp+78h+var_58]
push	esi
lea	eax, [esp+7Ch+var_34]
push	eax
push	ecx
push	ebp
push	edx
call	sub_1005BF80
add	esp, 14h
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jnz	loc_1005C550
cmp	[esp+78h+var_34], 1
jnz	short loc_1005C4D0
mov	eax, [esp+78h+var_64]
push	esi
push	edi
push	eax
call	sub_10076100
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jnz	loc_1005C564
push	esi
push	ebp
call	sub_10095BC0
add	esp, 8
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jnz	loc_1005C578
mov	eax, [esp+78h+var_58]
cmp	eax, ebx
jz	short loc_1005C501
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C4FD
push	esi
push	eax
lea	ecx, [esp+80h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_58], ebx
dec	edi
lea	edx, [edi+1]
test	edx, edx
jnz	loc_1005C450
mov	edx, [esp+78h+var_64]
push	esi
lea	ecx, [esp+7Ch+var_50]
push	ecx
push	edx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, ebx
jz	short loc_1005C58C
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 284h
jmp	loc_1005C637
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 283h
jmp	loc_1005C637
mov	ecx, [eax+4]
mov	[esp+78h+var_10], ecx
mov	[esp+78h+var_1C], 33Eh
jmp	loc_1005C637
mov	edx, [eax+4]
mov	[esp+78h+var_10], edx
mov	[esp+78h+var_1C], 27Fh
jmp	loc_1005C637
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 2D0h
jmp	loc_1005C637
cmp	[esp+78h+var_50], ebx
jnz	loc_1005C637
mov	ecx, [esp+78h+arg_C]
mov	dword ptr [ecx], 1
jmp	loc_1005C637
			
push	esi
push	1
lea	edx, [esp+80h+var_2C]
push	1Fh
push	edx
mov	[esp+88h+var_18], 1
mov	[esp+88h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 68h
retn
			
mov	eax, [esp+78h+arg_10]
push	eax
push	1
lea	ecx, [esp+80h+var_2C]
push	1Fh
push	ecx
mov	[esp+88h+var_18], 1
mov	[esp+88h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 68h
retn
			
mov	eax, dword_100BAE9C
mov	esi, [esp+78h+arg_10]
cmp	eax, ebx
jz	short loc_1005C627
push	esi
push	2
push	8
push	ebx
push	35Ch
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+78h+var_18], 1
mov	[esp+78h+var_1C], 35Ch
			
mov	eax, [esp+78h+var_60]
cmp	eax, ebx
jz	short loc_1005C668
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C664
push	esi
push	eax
lea	edx, [esp+80h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_60], ebx
mov	eax, [esp+78h+var_4C]
cmp	eax, ebx
jz	short loc_1005C699
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C695
push	esi
push	eax
lea	eax, [esp+80h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_4C], ebx
mov	eax, [esp+78h+var_5C]
cmp	eax, ebx
jz	short loc_1005C6CA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C6C6
push	esi
push	eax
lea	ecx, [esp+80h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_5C], ebx
mov	eax, [esp+78h+var_68]
cmp	eax, ebx
jz	short loc_1005C6FB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C6F7
push	esi
push	eax
lea	edx, [esp+80h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_68], ebx
mov	eax, [esp+78h+var_58]
cmp	eax, ebx
jz	short loc_1005C72C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C728
push	esi
push	eax
lea	eax, [esp+80h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_58], ebx
mov	eax, [esp+78h+var_64]
cmp	eax, ebx
jz	short loc_1005C75D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C759
push	esi
push	eax
lea	ecx, [esp+80h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_64], ebx
mov	eax, [esp+78h+var_48]
cmp	eax, ebx
jz	short loc_1005C78E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebx
jz	short loc_1005C78A
push	esi
push	eax
lea	edx, [esp+80h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebx
mov	[esp+78h+var_48], ebx
push	esi
push	1
lea	eax, [esp+80h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 68h
retn
align 10h
sub	esp, 3Ch
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_3C], ebp
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_2C], offset aPkix_policy_13 
mov	[esp+48h+var_C], 8
cmp	[esp+48h+arg_0], ebp
jz	loc_1005CC62
mov	edi, [esp+48h+arg_C]
cmp	edi, ebp
jz	loc_1005CC62
cmp	[edi+20h], ebp
jz	loc_1005CC62
lea	eax, [esp+48h+var_38]
push	ebx
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1005C831
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 27Dh
jmp	loc_1005CBBA
mov	eax, [edi+20h]
push	ebx
lea	edx, [esp+4Ch+var_30]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1005C85F
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 284h
jmp	loc_1005CBBA
xor	esi, esi
cmp	[esp+48h+var_30], ebp
jbe	loc_1005C95F
jmp	short loc_1005C870
align 10h
			
mov	eax, [edi+20h]
push	ebx
lea	edx, [esp+4Ch+var_3C]
push	edx
push	esi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1005C9B1
mov	edx, [esp+48h+var_3C]
mov	eax, [esp+48h+arg_0]
push	ebx
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	edx
push	eax
call	sub_1005A630
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1005C9C5
mov	eax, [esp+48h+var_34]
push	ebx
cmp	eax, ebp
jz	short loc_1005C905
mov	ecx, [esp+4Ch+var_38]
push	eax
push	ecx
call	sub_10077A90
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1005C9D9
mov	edx, [esp+48h+var_34]
push	ebx
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005C8FF
push	ebx
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_34], ebp
jmp	short loc_1005C923
mov	ecx, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+var_38]
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1005C9ED
mov	eax, [esp+48h+var_3C]
cmp	eax, ebp
jz	short loc_1005C954
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005C950
push	ebx
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_3C], ebp
inc	esi
cmp	esi, [esp+48h+var_30]
jb	loc_1005C870
cmp	[edi+3Ch], ebp
jbe	loc_1005CB09
cmp	[esp+48h+arg_4], ebp
jz	loc_1005CB09
cmp	[edi+48h], ebp
jz	loc_1005CB09
mov	eax, [edi+54h]
cmp	eax, ebp
jz	loc_1005CB09
push	ebx
lea	edx, [esp+4Ch+var_30]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1005CA01
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 284h
jmp	loc_1005CBBA
			
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 283h
jmp	loc_1005CBBA
			
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 347h
jmp	loc_1005CBBA
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 27Ah
jmp	loc_1005CBBA
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 278h
jmp	loc_1005CBBA
xor	edi, edi
cmp	[esp+48h+var_30], ebp
jbe	loc_1005CB05
lea	ecx, [ecx+0]
mov	esi, [esp+48h+arg_C]
mov	edx, [esi+54h]
push	ebx
lea	ecx, [esp+4Ch+var_3C]
push	ecx
push	edi
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_1005C9B1
mov	ecx, [esp+48h+var_3C]
mov	edx, [esp+48h+arg_0]
push	ebx
lea	eax, [esp+4Ch+var_34]
push	eax
push	ecx
push	edx
call	sub_1005A630
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1005C9C5
mov	eax, [esp+48h+arg_8]
mov	ecx, [esp+48h+var_3C]
mov	edx, [esp+48h+arg_C]
push	esi
mov	esi, [esp+4Ch+var_34]
push	esi
push	eax
mov	eax, [edx+48h]
push	ecx
push	eax
mov	eax, ebx
call	sub_1005B0D0
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1005CB33
mov	ecx, [esp+48h+var_38]
push	ebx
push	esi
push	ecx
call	sub_10077A90
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1005CB44
cmp	esi, ebp
jz	short loc_1005CAC9
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005CAC5
push	ebx
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_34], ebp
mov	eax, [esp+48h+var_3C]
cmp	eax, ebp
jz	short loc_1005CAFA
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005CAF6
push	ebx
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_3C], ebp
inc	edi
cmp	edi, [esp+48h+var_30]
jb	loc_1005CA10
mov	edi, [esp+48h+arg_C]
			
mov	edx, [esp+48h+var_38]
push	ebx
push	edx
call	sub_10075700
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1005CB55
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 28Dh
jmp	loc_1005CBBA
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 348h
jmp	short loc_1005CBBA
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 27Ah
jmp	short loc_1005CBBA
mov	eax, [edi+20h]
cmp	eax, ebp
jz	short loc_1005CB84
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005CB81
push	ebx
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[edi+20h], ebp
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_1005CBB3
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005CBB3
push	ebx
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
jmp	short loc_1005CBBA
			
mov	eax, [esp+48h+var_38]
mov	[edi+20h], eax
			
mov	eax, [esp+48h+var_3C]
cmp	eax, ebp
jz	short loc_1005CBEB
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005CBE7
push	ebx
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_3C], ebp
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_1005CC1C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005CC18
push	ebx
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_1005CC49
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1005CC49
push	ebx
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
push	ebx
push	1
lea	ecx, [esp+50h+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
			
push	ebx
push	1
lea	edx, [esp+50h+var_2C]
push	1Fh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
mov	ebp, [esp+44h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
mov	ebx, eax
xor	eax, eax
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_2C], offset aPkix_policy_14 
mov	[esp+4Ch+var_C], 8
cmp	esi, eax
jz	loc_1005CFA5
cmp	ebp, eax
jz	loc_1005CFA5
cmp	[ebp+1Ch], eax
jz	loc_1005CFA5
push	ebx
lea	eax, [esp+50h+var_38]
push	eax
push	esi
call	sub_10072240
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
test	eax, eax
jz	short loc_1005CD2C
mov	ecx, [eax+4]
push	ebx
push	1
mov	[esp+54h+var_10], ecx
lea	ecx, [esp+54h+var_2C]
push	8
push	ecx
mov	[esp+5Ch+var_1C], 247h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
cmp	[esp+4Ch+var_38], 0
jnz	short loc_1005CD79
mov	eax, [ebp+34h]
test	eax, eax
jz	short loc_1005CD79
dec	eax
push	ebx
push	ebp
mov	[ebp+34h], eax
call	sub_10095BC0
add	esp, 8
mov	[esp+4Ch+var_28], eax
test	eax, eax
jz	short loc_1005CD79
mov	edx, [eax+4]
push	ebx
push	1
lea	ecx, [esp+54h+var_2C]
push	8
push	ecx
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 2D0h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
push	ebx
lea	eax, [esp+50h+var_34]
push	eax
push	esi
call	sub_1007FB00
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
test	eax, eax
jz	short loc_1005CDB9
mov	ecx, [eax+4]
push	ebx
push	1
mov	[esp+54h+var_10], ecx
lea	ecx, [esp+54h+var_2C]
push	8
push	ecx
mov	[esp+5Ch+var_1C], 89h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
cmp	[esp+4Ch+var_34], 0
jnz	short loc_1005CDC7
mov	dword ptr [ebp+34h], 0
cmp	dword ptr [ebp+18h], 0
jz	loc_1005CF8B
cmp	dword ptr [ebp+14h], 0
jnz	loc_1005CF8B
mov	eax, [ebp+1Ch]
lea	edx, [esp+4Ch+var_30]
push	edx
push	eax
call	sub_1005AD60
mov	edi, [esp+54h+var_30]
xor	esi, esi
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, esi
jz	short loc_1005CE0E
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 343h
jmp	loc_1005CF62
mov	eax, [ebp+18h]
push	ebx
lea	edx, [esp+50h+var_3C]
push	edx
push	edi
push	ebp
push	eax
call	sub_1005BF80
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, esi
jz	short loc_1005CE3E
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 33Eh
jmp	loc_1005CF62
cmp	[esp+4Ch+var_3C], 1
jnz	short loc_1005CE74
mov	eax, [ebp+18h]
cmp	eax, esi
jz	short loc_1005CE74
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, esi
jz	short loc_1005CE71
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], esi
mov	[ebp+18h], esi
			
mov	eax, [ebp+18h]
cmp	eax, esi
jz	short loc_1005CE99
push	ebx
push	eax
call	sub_10095BC0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, esi
jz	short loc_1005CE99
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
jmp	loc_1005CF5A
			
push	ebx
push	ebp
call	sub_10095BC0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, esi
jz	short loc_1005CEB7
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
jmp	loc_1005CF5A
mov	eax, [ebp+18h]
cmp	eax, esi
jz	short loc_1005CF1F
mov	ecx, [ebp+40h]
push	ebx
lea	edx, [esp+50h+var_3C]
push	edx
push	ecx
push	eax
call	sub_10064C10
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, esi
jz	short loc_1005CEEA
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 354h
jmp	short loc_1005CF62
cmp	[esp+4Ch+var_3C], esi
jz	short loc_1005CF1F
mov	eax, [ebp+18h]
cmp	eax, esi
jz	short loc_1005CF1F
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, esi
jz	short loc_1005CF1C
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], esi
mov	[ebp+18h], esi
			
mov	eax, [ebp+18h]
cmp	eax, esi
jz	short loc_1005CF41
push	ebx
push	eax
call	sub_10095BC0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, esi
jz	short loc_1005CF41
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
jmp	short loc_1005CF5A
			
push	ebx
push	ebp
call	sub_10095BC0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, esi
jz	short loc_1005CF62
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
			
mov	[esp+4Ch+var_1C], 2D0h
			
cmp	edi, esi
jz	short loc_1005CF8B
push	ebx
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, esi
jz	short loc_1005CF8B
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], esi
			
push	ebx
push	1
lea	ecx, [esp+54h+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
push	ebx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 74h
push	ebx
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+84h+var_2C]
rep movsd
mov	ecx, [esp+84h+arg_0]
mov	[esp+84h+var_50], ebp
mov	[esp+84h+var_5C], ebp
mov	[esp+84h+var_34], ebp
mov	[esp+84h+var_38], ebp
mov	[esp+84h+var_30], ebp
mov	[esp+84h+var_40], ebp
mov	[esp+84h+var_3C], ebp
mov	[esp+84h+var_48], ebp
mov	[esp+84h+var_4C], ebp
mov	[esp+84h+var_74], ebp
mov	[esp+84h+var_54], ebp
mov	[esp+84h+var_64], ebp
mov	[esp+84h+var_60], ebp
mov	[esp+84h+var_58], ebp
mov	[esp+84h+var_6C], ebp
mov	[esp+84h+var_68], ebp
mov	[esp+84h+var_44], ebp
mov	[esp+84h+var_70], ebp
mov	[esp+84h+var_2C], offset aPkix_policyc_5 
mov	[esp+84h+var_C], 8
cmp	ecx, ebp
jz	loc_1005DE02
mov	ebx, [esp+84h+arg_4]
cmp	ebx, ebp
jz	loc_1005DE02
mov	edi, [esp+84h+arg_8]
cmp	edi, ebp
jz	loc_1005DE02
mov	eax, [esp+84h+arg_C]
cmp	eax, ebp
jz	loc_1005DE02
mov	esi, [esp+84h+arg_10]
mov	[eax], ebp
push	esi
lea	eax, [esp+88h+var_74]
push	eax
push	ecx
call	sub_100567C0
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D0AD
mov	ecx, [eax+4]
mov	[esp+84h+var_1C], 54h
jmp	loc_1005DAFB
mov	eax, [esp+84h+var_74]
cmp	eax, ebp
jz	loc_1005DDD8
cmp	[eax], ebp
jz	loc_1005DDD8
mov	edx, [eax+40h]
dec	edx
cmp	[eax+44h], edx
jz	short loc_1005D0F1
push	esi
lea	eax, [esp+88h+var_68]
push	eax
push	ebx
call	sub_1007F910
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D0F1
mov	ecx, [eax+4]
mov	[esp+84h+var_1C], 88h
jmp	loc_1005DAFB
			
mov	eax, [esp+84h+var_68]
cmp	eax, ebp
jz	loc_1005D207
mov	ecx, [esp+84h+var_74]
push	esi
lea	edx, [esp+88h+var_5C]
push	edx
mov	edx, [ecx+10h]
push	edx
push	eax
call	sub_1005A2D0
add	esp, 10h
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D130
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 345h
jmp	loc_1005DAFF
cmp	[esp+84h+var_5C], ebp
jz	short loc_1005D16B
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1005D156
mov	ecx, [esp+84h+var_C]
push	esi
push	2
push	ecx
push	ebp
push	240h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+84h+var_18], 1
mov	[esp+84h+var_1C], 240h
jmp	loc_1005DAFF
mov	eax, [esp+84h+var_68]
push	esi
lea	edx, [esp+88h+var_44]
push	edx
push	eax
call	sub_1005AA50
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D196
mov	ecx, [eax+4]
mov	[esp+84h+var_1C], 346h
jmp	loc_1005DAFB
mov	eax, [esp+84h+var_74]
cmp	[eax+54h], ebp
jz	short loc_1005D1CE
mov	edx, [eax+54h]
push	esi
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D1C7
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	ecx, [esp+84h+var_74]
mov	[ecx+54h], ebp
mov	ebx, [esp+84h+var_44]
cmp	ebx, ebp
jz	short loc_1005D200
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D200
push	esi
push	eax
lea	edx, [esp+8Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
jmp	loc_1005DAFF
			
mov	eax, [esp+84h+var_74]
mov	[eax+54h], ebx
mov	ecx, [esp+84h+var_74]
cmp	[ecx+18h], ebp
jz	loc_1005D740
mov	ebx, [esp+84h+arg_4]
push	esi
lea	edx, [esp+88h+var_54]
push	edx
push	ebx
call	sub_1007F720
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D246
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 86h
jmp	loc_1005DAFF
mov	eax, [esp+84h+var_54]
cmp	eax, ebp
jz	short loc_1005D279
push	esi
lea	ecx, [esp+88h+var_50]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D279
mov	edx, [eax+4]
mov	[esp+84h+var_10], edx
mov	[esp+84h+var_1C], 284h
jmp	loc_1005DAFF
			
mov	eax, [esp+84h+var_74]
cmp	[esp+84h+var_50], ebp
jbe	loc_1005D66B
push	esi
add	eax, 50h
push	eax
push	ebx
call	sub_1007FFA0
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D2AD
mov	ecx, [eax+4]
mov	[esp+84h+var_1C], 4Eh
jmp	loc_1005DAFB
xor	edi, edi
cmp	[esp+84h+var_50], ebp
jbe	loc_1005D597
lea	esp, [esp+0]
mov	eax, [esp+84h+var_54]
push	esi
lea	edx, [esp+88h+var_64]
push	edx
push	edi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jnz	loc_1005D4C9
mov	edx, [esp+84h+var_64]
push	esi
lea	ecx, [esp+88h+var_60]
push	ecx
push	edx
call	sub_100838F0
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jnz	loc_1005D4DD
mov	ecx, [esp+84h+var_64]
push	esi
lea	eax, [esp+88h+var_6C]
push	eax
push	ecx
call	sub_100839C0
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jnz	loc_1005D4F1
mov	ecx, [esp+84h+var_74]
mov	eax, [ecx+10h]
mov	edx, [esp+84h+var_60]
cmp	eax, ebp
jz	short loc_1005D392
cmp	edx, ebp
jz	short loc_1005D38A
mov	ecx, [ecx+10h]
push	esi
lea	eax, [esp+88h+var_5C]
push	eax
push	edx
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jnz	loc_1005D501
cmp	[esp+84h+var_5C], ebp
jnz	short loc_1005D3A2
mov	edx, [esp+84h+var_68]
mov	eax, [esp+84h+arg_4]
mov	ecx, [esp+84h+var_6C]
mov	ebx, [esp+84h+var_74]
push	esi
push	edx
mov	edx, [esp+8Ch+var_60]
push	eax
push	ecx
push	edx
call	sub_1005B6D0
mov	ecx, eax
add	esp, 14h
mov	[esp+84h+var_70], ecx
cmp	ecx, ebp
jnz	loc_1005DCD4
jmp	short loc_1005D401
cmp	eax, ebp
jnz	loc_1005D4C0
cmp	edx, ebp
jnz	loc_1005D4C0
mov	[esp+84h+var_5C], 1
mov	eax, [esp+84h+var_58]
cmp	eax, ebp
jz	short loc_1005D3D3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D3CF
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_58], ebp
mov	eax, [esp+84h+var_6C]
cmp	eax, ebp
jz	short loc_1005D3F1
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jnz	loc_1005D515
mov	ecx, [esp+84h+var_6C]
mov	[esp+84h+var_58], ecx
mov	[esp+84h+var_48], 1
mov	eax, [esp+84h+var_64]
cmp	eax, ebp
jz	short loc_1005D432
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D42E
push	esi
push	eax
lea	edx, [esp+8Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_64], ebp
mov	eax, [esp+84h+var_60]
cmp	eax, ebp
jz	short loc_1005D463
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D45F
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_60], ebp
mov	eax, [esp+84h+var_6C]
cmp	eax, ebp
jz	short loc_1005D494
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D490
push	esi
push	eax
lea	ecx, [esp+8Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_6C], ebp
inc	edi
cmp	edi, [esp+84h+var_50]
jb	loc_1005D2C0
mov	ecx, 1
cmp	[esp+84h+var_48], ecx
jnz	loc_1005D597
mov	eax, [esp+84h+var_74]
cmp	[eax+38h], ebp
jbe	short loc_1005D52D
mov	[esp+84h+var_4C], ecx
jmp	loc_1005D573
			
mov	[esp+84h+var_5C], ebp
jmp	loc_1005D356
mov	edx, [eax+4]
mov	[esp+84h+var_10], edx
mov	[esp+84h+var_1C], 283h
jmp	loc_1005DAFF
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 0A9h
jmp	loc_1005DAFF
mov	ecx, [eax+4]
mov	[esp+84h+var_1C], 0AAh
jmp	loc_1005DAFB
mov	edx, [eax+4]
mov	[esp+84h+var_10], edx
mov	[esp+84h+var_1C], 32Fh
jmp	loc_1005DAFF
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
jmp	loc_1005DAFF
mov	edx, [eax+44h]
add	edx, ecx
cmp	edx, [eax+40h]
jnb	short loc_1005D569
mov	ecx, [esp+84h+arg_4]
push	esi
lea	eax, [esp+88h+var_4C]
push	eax
push	ecx
call	sub_10072240
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D569
mov	edx, [eax+4]
mov	[esp+84h+var_10], edx
mov	[esp+84h+var_1C], 247h
jmp	loc_1005DAFF
			
cmp	[esp+84h+var_4C], ebp
jz	short loc_1005D597
mov	eax, [esp+84h+var_74]
mov	ecx, [esp+84h+var_68]
mov	edx, [esp+84h+var_58]
push	esi
push	eax
mov	eax, [eax+18h]
push	ecx
push	edx
push	eax
call	sub_1005B960
add	esp, 14h
mov	[esp+84h+var_70], eax
cmp	eax, ebp
jnz	loc_1005DCD0
			
mov	eax, [esp+84h+var_74]
cmp	[eax+18h], ebp
jz	loc_1005D63D
mov	edx, [eax+44h]
mov	eax, [eax+18h]
push	esi
lea	ecx, [esp+88h+var_40]
push	ecx
inc	edx
push	edx
push	eax
call	sub_10064C10
add	esp, 10h
mov	[esp+84h+var_70], eax
cmp	eax, ebp
jnz	loc_1005DCD0
cmp	[esp+84h+var_40], ebp
jz	short loc_1005D63D
mov	eax, [esp+84h+var_74]
cmp	[eax+18h], ebp
jz	short loc_1005D605
mov	ecx, [eax+18h]
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D5FE
push	esi
push	eax
lea	edx, [esp+8Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	eax, [esp+84h+var_74]
mov	[eax+18h], ebp
mov	eax, [esp+84h+var_74]
cmp	[eax+48h], ebp
jz	short loc_1005D63D
mov	ecx, [eax+48h]
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D636
push	esi
push	eax
lea	edx, [esp+8Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	eax, [esp+84h+var_74]
mov	[eax+48h], ebp
			
mov	ecx, [esp+84h+var_74]
push	esi
push	ecx
call	sub_10095BC0
add	esp, 8
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	loc_1005D739
mov	edx, [eax+4]
mov	[esp+84h+var_10], edx
mov	[esp+84h+var_1C], 2D0h
jmp	loc_1005DAFF
cmp	[eax+18h], ebp
jz	short loc_1005D6A3
mov	eax, [eax+18h]
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D698
push	esi
push	eax
lea	ecx, [esp+8Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	edx, [esp+84h+var_74]
mov	[edx+18h], ebp
mov	eax, [esp+84h+var_74]
cmp	[eax+48h], ebp
jz	short loc_1005D6DB
mov	eax, [eax+48h]
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D6D0
push	esi
push	eax
lea	ecx, [esp+8Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	edx, [esp+84h+var_74]
mov	[edx+48h], ebp
mov	eax, [esp+84h+var_74]
cmp	[eax+4Ch], ebp
jz	short loc_1005D713
mov	eax, [eax+4Ch]
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D708
push	esi
push	eax
lea	ecx, [esp+8Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	edx, [esp+84h+var_74]
mov	[edx+4Ch], ebp
mov	eax, [esp+84h+var_74]
push	esi
push	eax
call	sub_10095BC0
add	esp, 8
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D740
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 2D0h
jmp	loc_1005DAFF
mov	edi, [esp+84h+arg_8]
			
mov	eax, [esp+84h+var_74]
cmp	[eax+34h], ebp
jnz	short loc_1005D780
cmp	[eax+18h], ebp
jnz	short loc_1005D780
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1005D76B
mov	ecx, [esp+84h+var_C]
push	esi
push	2
push	ecx
push	ebp
push	59h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+84h+var_18], 1
mov	[esp+84h+var_1C], 59h
jmp	loc_1005DAFF
			
mov	edx, [eax]
push	esi
push	edx
push	edi
call	sub_10077300
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D7A9
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 28Ah
jmp	loc_1005DAFF
mov	ecx, [esp+84h+var_74]
mov	edx, [ecx+4]
push	esi
push	edx
push	edi
call	sub_10077300
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D7D7
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 28Ah
jmp	loc_1005DAFF
mov	ecx, [esp+84h+var_74]
mov	edx, [ecx+8]
push	esi
push	edx
push	edi
call	sub_10077300
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D805
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 28Ah
jmp	loc_1005DAFF
mov	ecx, [esp+84h+var_74]
mov	edx, [ecx+0Ch]
push	esi
push	edx
push	edi
call	sub_10077300
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D833
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 28Ah
jmp	loc_1005DAFF
mov	eax, [esp+84h+var_74]
mov	edi, 1
add	[eax+44h], edi
mov	eax, [esp+84h+var_74]
mov	ecx, [eax+44h]
cmp	ecx, [eax+40h]
jz	loc_1005DA0B
mov	ecx, [esp+84h+var_68]
cmp	ecx, ebp
jz	short loc_1005D87D
mov	edx, [esp+84h+var_58]
push	eax
mov	eax, [esp+88h+var_48]
push	edx
push	eax
push	ecx
mov	ebx, esi
call	sub_1005C7B0
add	esp, 10h
mov	[esp+84h+var_70], eax
cmp	eax, ebp
jnz	loc_1005DCD0
mov	eax, [esp+84h+var_74]
cmp	[eax+48h], ebp
jz	short loc_1005D8B5
mov	ecx, [eax+48h]
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005D8AA
push	esi
push	eax
lea	edx, [esp+8Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	eax, [esp+84h+var_74]
mov	[eax+48h], ebp
mov	eax, [esp+84h+var_74]
mov	ecx, [eax+4Ch]
mov	[eax+48h], ecx
mov	ecx, [esp+84h+arg_4]
mov	edx, [esp+84h+var_74]
push	esi
lea	eax, [esp+88h+var_3C]
push	eax
push	ecx
mov	[edx+4Ch], ebp
call	sub_10072240
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D8F4
mov	edx, [eax+4]
mov	[esp+84h+var_10], edx
mov	[esp+84h+var_1C], 247h
jmp	loc_1005DAFF
or	edi, 0FFFFFFFFh
cmp	[esp+84h+var_3C], ebp
jnz	short loc_1005D921
mov	eax, [esp+84h+var_74]
cmp	[eax+34h], ebp
jbe	short loc_1005D90D
add	[eax+34h], edi
mov	eax, [esp+84h+var_74]
cmp	[eax+3Ch], ebp
jbe	short loc_1005D919
add	[eax+3Ch], edi
mov	eax, [esp+84h+var_74]
cmp	[eax+38h], ebp
jbe	short loc_1005D921
add	[eax+38h], edi
			
mov	ebx, [esp+84h+arg_4]
push	esi
lea	eax, [esp+88h+var_38]
push	eax
push	ebx
call	sub_1007FB00
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D94F
mov	ecx, [eax+4]
mov	[esp+84h+var_1C], 89h
jmp	loc_1005DAFB
mov	eax, [esp+84h+var_38]
cmp	eax, edi
jz	short loc_1005D963
mov	ecx, [esp+84h+var_74]
cmp	eax, [ecx+34h]
jnb	short loc_1005D963
mov	[ecx+34h], eax
			
push	esi
lea	edx, [esp+88h+var_34]
push	edx
push	ebx
call	sub_1007FC90
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D98E
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 87h
jmp	loc_1005DAFF
mov	eax, [esp+84h+var_34]
cmp	eax, edi
jz	short loc_1005D9A2
mov	ecx, [esp+84h+var_74]
cmp	eax, [ecx+3Ch]
jnb	short loc_1005D9A2
mov	[ecx+3Ch], eax
			
push	esi
lea	ecx, [esp+88h+var_30]
push	ecx
push	ebx
call	sub_1007FE20
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005D9CD
mov	edx, [eax+4]
mov	[esp+84h+var_10], edx
mov	[esp+84h+var_1C], 82h
jmp	loc_1005DAFF
mov	eax, [esp+84h+var_30]
cmp	eax, edi
jz	short loc_1005D9E1
mov	ecx, [esp+84h+var_74]
cmp	eax, [ecx+38h]
jnb	short loc_1005D9E1
mov	[ecx+38h], eax
			
mov	eax, [esp+84h+var_74]
push	esi
push	eax
call	sub_10095BC0
add	esp, 8
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	loc_1005DCC6
mov	ecx, [eax+4]
mov	[esp+84h+var_1C], 2D0h
jmp	loc_1005DAFB
mov	edx, [esp+84h+arg_4]
push	eax
push	edx
mov	eax, esi
call	sub_1005CC90
add	esp, 8
mov	[esp+84h+var_70], eax
cmp	eax, ebp
jnz	loc_1005DCD0
mov	eax, [esp+84h+var_74]
cmp	[eax+34h], ebp
jnz	short loc_1005DA66
cmp	[eax+18h], ebp
jnz	short loc_1005DA66
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1005DA55
mov	ecx, [esp+84h+var_C]
push	esi
push	2
push	ecx
push	ebp
push	59h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+84h+var_18], edi
mov	[esp+84h+var_1C], 59h
jmp	loc_1005DAFF
			
cmp	[eax+48h], ebp
jz	short loc_1005DA9A
mov	edx, [eax+48h]
push	esi
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DA93
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	ecx, [esp+84h+var_74]
mov	[ecx+48h], ebp
mov	eax, [esp+84h+var_74]
cmp	[eax+4Ch], ebp
jz	short loc_1005DAD2
mov	edx, [eax+4Ch]
push	esi
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DACB
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	ecx, [esp+84h+var_74]
mov	[ecx+4Ch], ebp
			
mov	edx, [esp+84h+var_74]
mov	eax, [esp+84h+arg_0]
push	esi
push	edx
push	eax
call	sub_10056890
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1005DAFF
mov	ecx, [eax+4]
mov	[esp+84h+var_1C], 58h
			
mov	[esp+84h+var_10], ecx
			
mov	eax, [esp+84h+var_74]
cmp	eax, ebp
jz	short loc_1005DB30
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DB2C
push	esi
push	eax
lea	edx, [esp+8Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_74], ebp
mov	eax, [esp+84h+var_54]
cmp	eax, ebp
jz	short loc_1005DB61
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DB5D
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_54], ebp
mov	eax, [esp+84h+var_64]
cmp	eax, ebp
jz	short loc_1005DB92
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DB8E
push	esi
push	eax
lea	ecx, [esp+8Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_64], ebp
mov	eax, [esp+84h+var_58]
cmp	eax, ebp
jz	short loc_1005DBBF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DBBF
push	esi
push	eax
lea	edx, [esp+8Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
			
mov	eax, [esp+84h+var_6C]
cmp	eax, ebp
jz	short loc_1005DBF0
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DBEC
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_6C], ebp
mov	eax, [esp+84h+var_60]
cmp	eax, ebp
jz	short loc_1005DC21
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DC1D
push	esi
push	eax
lea	ecx, [esp+8Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_60], ebp
mov	eax, [esp+84h+var_70]
cmp	eax, ebp
jz	short loc_1005DC4E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DC4E
push	esi
push	eax
lea	edx, [esp+8Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
			
mov	eax, [esp+84h+var_68]
cmp	eax, ebp
jz	short loc_1005DC7F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DC7B
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	[esp+84h+var_68], ebp
mov	eax, [esp+84h+var_44]
cmp	eax, ebp
jz	short loc_1005DCAC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DCAC
push	esi
push	eax
lea	ecx, [esp+8Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
			
push	esi
push	1
lea	edx, [esp+8Ch+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 74h
retn
cmp	[esp+84h+var_70], ebp
jz	loc_1005DAD2
			
mov	ecx, [esp+84h+var_70]
mov	eax, [ecx+4]
mov	[esp+84h+var_10], eax
cmp	eax, 1Fh
jnz	short loc_1005DCED
mov	[esp+84h+var_28], ecx
mov	[esp+84h+var_70], ebp
jmp	loc_1005DAFF
mov	eax, [esp+84h+var_74]
cmp	[eax+18h], ebp
jz	short loc_1005DD25
mov	edx, [eax+18h]
push	esi
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DD1E
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	ecx, [esp+84h+var_74]
mov	[ecx+18h], ebp
mov	eax, [esp+84h+var_74]
cmp	[eax+48h], ebp
jz	short loc_1005DD5D
mov	edx, [eax+48h]
push	esi
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DD56
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	ecx, [esp+84h+var_74]
mov	[ecx+48h], ebp
mov	eax, [esp+84h+var_74]
cmp	[eax+4Ch], ebp
jz	short loc_1005DD95
mov	edx, [eax+4Ch]
push	esi
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_24], eax
cmp	eax, ebp
jz	short loc_1005DD8E
push	esi
push	eax
lea	eax, [esp+8Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_24], ebp
mov	ecx, [esp+84h+var_74]
mov	[ecx+4Ch], ebp
mov	edx, [esp+84h+var_74]
cmp	[edx+34h], ebp
jnz	loc_1005DAD2
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	loc_1005D76B
mov	ecx, [esp+84h+var_C]
push	esi
push	2
push	ecx
push	ebp
push	59h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+84h+var_18], 1
mov	[esp+84h+var_1C], 59h
jmp	loc_1005DAFF
			
push	esi
push	1
lea	eax, [esp+8Ch+var_2C]
push	1Fh
push	eax
mov	[esp+94h+var_18], 1
mov	[esp+94h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 74h
retn
			
mov	ecx, [esp+84h+arg_10]
push	ecx
push	1
lea	edx, [esp+8Ch+var_2C]
push	1Fh
push	edx
mov	[esp+94h+var_18], 1
mov	[esp+94h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 74h
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
mov	ebx, eax
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_30], ebp
mov	[esp+4Ch+var_2C], offset aPkix_policyc_0 
mov	[esp+4Ch+var_C], 0Bh
cmp	esi, ebp
jz	loc_1005E1F8
mov	edi, [esp+4Ch+arg_18]
cmp	edi, ebp
jz	loc_1005E1F8
push	ebx
lea	eax, [esp+50h+var_3C]
push	eax
push	58h
push	0Ah
call	sub_100952A0
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005DEC1
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 143h
jmp	loc_1005E180
mov	edx, [esp+4Ch+var_3C]
push	ebx
push	edx
push	58h
call	sub_10096B50
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1005E171
mov	ecx, [esp+4Ch+var_3C]
push	ebx
add	ecx, 4
push	ecx
push	59h
call	sub_10096B50
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005DF04
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
jmp	loc_1005E178
mov	eax, [esp+4Ch+var_3C]
push	ebx
add	eax, 8
push	eax
push	5Ah
call	sub_10096B50
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005DF2B
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
jmp	loc_1005E178
mov	edx, [esp+4Ch+var_3C]
push	ebx
add	edx, 0Ch
push	edx
push	11Eh
call	sub_10096B50
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1005E171
mov	ecx, [esp+4Ch+var_3C]
push	ebx
add	ecx, 10h
push	ecx
push	12Fh
call	sub_10096B50
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005DF77
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
jmp	loc_1005E178
push	ebx
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
push	ebx
cmp	eax, ebp
jz	short loc_1005DFA1
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
jmp	loc_1005E180
mov	ecx, [esp+50h+var_3C]
push	esi
mov	[ecx+1Ch], esi
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
push	ebx
cmp	eax, ebp
jz	short loc_1005DFD1
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
jmp	loc_1005E180
mov	eax, [esp+50h+var_3C]
lea	ecx, [esp+50h+var_30]
push	ecx
push	esi
mov	[eax+20h], esi
call	sub_10075890
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005E002
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 287h
jmp	loc_1005E180
mov	eax, [esp+4Ch+var_3C]
cmp	[esp+4Ch+var_30], ebp
jz	short loc_1005E035
mov	dword ptr [eax+14h], 1
mov	ecx, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_C]
mov	[ecx+24h], edx
mov	ecx, [esp+4Ch+var_3C]
mov	[ecx+2Ch], eax
mov	ecx, [esp+4Ch+arg_14]
cmp	eax, ebp
jz	short loc_1005E063
xor	eax, eax
jmp	short loc_1005E066
mov	edx, [eax+10h]
push	ebx
lea	ecx, [eax+14h]
push	ecx
push	edx
push	esi
call	sub_10077130
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005E013
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 27Ch
jmp	loc_1005E180
lea	eax, [ecx+1]
mov	edx, [esp+4Ch+var_3C]
mov	[edx+34h], eax
mov	eax, [esp+4Ch+arg_10]
mov	edx, [esp+4Ch+var_3C]
mov	[edx+30h], eax
cmp	eax, ebp
jz	short loc_1005E080
xor	eax, eax
jmp	short loc_1005E083
lea	eax, [ecx+1]
mov	edx, [esp+4Ch+var_3C]
mov	[edx+38h], eax
mov	eax, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+var_3C]
mov	[edx+28h], eax
cmp	eax, ebp
jz	short loc_1005E09D
xor	eax, eax
jmp	short loc_1005E0A0
lea	eax, [ecx+1]
mov	edx, [esp+4Ch+var_3C]
mov	[edx+3Ch], eax
mov	eax, [esp+4Ch+var_3C]
mov	[eax+40h], ecx
mov	ecx, [esp+4Ch+var_3C]
mov	[ecx+44h], ebp
mov	edx, [esp+4Ch+var_3C]
mov	[edx+50h], ebp
mov	ecx, [esp+4Ch+var_3C]
mov	edx, [ecx+10h]
lea	eax, [esp+4Ch+var_34]
push	eax
push	1
push	edx
call	sub_1005AF70
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005E0EF
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 344h
jmp	loc_1005E180
mov	edx, [esp+4Ch+var_34]
mov	eax, [esp+4Ch+var_3C]
push	ebx
lea	ecx, [esp+50h+var_38]
push	ecx
mov	ecx, [eax+10h]
push	edx
push	ebp
push	ebp
push	ecx
call	sub_100648E0
add	esp, 18h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1005E125
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 34Bh
jmp	short loc_1005E180
mov	eax, [esp+4Ch+var_38]
mov	ecx, [esp+4Ch+var_3C]
mov	[ecx+18h], eax
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebp
jz	short loc_1005E154
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1005E150
push	ebx
jmp	loc_1005DFBA
mov	eax, [esp+4Ch+var_38]
mov	ecx, [esp+4Ch+var_3C]
mov	[ecx+48h], eax
mov	edx, [esp+4Ch+var_3C]
mov	[edx+4Ch], ebp
mov	eax, [esp+4Ch+var_3C]
mov	[eax+54h], ebp
mov	ecx, [esp+4Ch+var_3C]
mov	[edi], ecx
jmp	short loc_1005E1AD
			
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
			
mov	[esp+4Ch+var_1C], 32Eh
			
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_1005E1B1
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1005E1AD
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
			
mov	[esp+4Ch+var_3C], ebp
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebp
jz	short loc_1005E1DE
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1005E1DE
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
			
push	ebx
push	1
lea	ecx, [esp+54h+var_2C]
push	0Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
push	ebx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_18]
xor	ebp, ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_2C], offset aPkix_policyche 
mov	[esp+40h+var_C], 8
cmp	edi, ebp
jnz	short loc_1005E295
mov	eax, [esp+40h+arg_1C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	eax, [esp+40h+arg_14]
mov	ecx, [esp+40h+arg_10]
push	ebx
mov	ebx, [esp+44h+arg_1C]
lea	edx, [esp+44h+var_30]
push	edx
mov	edx, [esp+48h+arg_C]
push	eax
mov	eax, [esp+4Ch+arg_8]
push	ecx
mov	ecx, [esp+50h+arg_4]
push	edx
mov	edx, [esp+54h+arg_0]
push	eax
push	ecx
push	edx
mov	eax, ebx
call	sub_1005DE40
mov	esi, [esp+60h+var_30]
add	esp, 1Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1005E2E4
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 349h
jmp	short loc_1005E33F
mov	edx, [esi]
lea	ecx, [esp+44h+var_34]
push	ecx
push	1
push	edx
call	sub_1005AF70
mov	ebp, [esp+50h+var_34]
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1005E313
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 344h
jmp	short loc_1005E33F
push	ebx
push	edi
push	esi
push	ebp
push	0
push	0
push	offset sub_1005CFD0
call	sub_10056550
add	esp, 1Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1005E33F
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 53h
			
test	esi, esi
jz	short loc_1005E36C
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
test	eax, eax
jz	short loc_1005E36C
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], 0
			
test	ebp, ebp
jz	short loc_1005E399
push	ebx
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
test	eax, eax
jz	short loc_1005E399
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], 0
			
push	ebx
push	1
lea	ecx, [esp+4Ch+var_2C]
push	8
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_signatu_2 
mov	[esp+38h+var_C], 3Ch
cmp	edi, ebx
jnz	short loc_1005E41D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	34h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_1005E449
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 30Ah
jmp	loc_1005E4D8
mov	eax, [edi+8]
mov	[edi], ebx
cmp	eax, ebx
jz	short loc_1005E47A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005E477
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_1005E4A9
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005E4A6
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+0Ch], ebx
mov	eax, [edi+10h]
cmp	eax, ebx
jz	short loc_1005E4D8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005E4D5
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+10h], ebx
			
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	3Ch
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB970
push	1
mov	[esp+60h+var_50], offset aSignaturecheck 
mov	[esp+60h+var_48], 14h
mov	[esp+60h+var_44], offset sub_1005E3C0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	3Ch
push	ecx
mov	[esp+68h+var_2C], offset aPkix_signatu_1 
mov	[esp+68h+var_C], 3Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_signatu_0 
mov	[esp+40h+var_C], 3Ch
cmp	esi, ebp
jz	loc_1005E712
mov	edi, [esp+40h+arg_8]
cmp	edi, ebp
jz	loc_1005E712
push	ebx
lea	eax, [esp+44h+var_34]
push	eax
push	14h
push	34h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	loc_1005E680
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 147h
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_1005E636
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1005E632
push	ebx
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_30], ebp
mov	eax, [esp+40h+var_34]
cmp	eax, ebp
jz	short loc_1005E667
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1005E663
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
			
mov	[esp+40h+var_34], ebp
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	3Ch
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	edx, [esp+40h+var_34]
mov	dword ptr [edx], 1
mov	eax, [esp+40h+var_34]
mov	edx, [esp+40h+arg_4]
mov	[eax+0Ch], ebp
mov	ecx, [esp+40h+var_34]
push	ebx
push	esi
mov	[ecx+4], edx
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	ebx
cmp	eax, ebp
jz	short loc_1005E6C6
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
jmp	loc_1005E605
mov	ecx, [esp+44h+var_34]
lea	edx, [esp+44h+var_30]
push	edx
push	51h
mov	[ecx+8], esi
call	sub_10096B50
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1005E6F8
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 32Eh
jmp	loc_1005E605
mov	ecx, [esp+40h+var_30]
mov	edx, [esp+40h+var_34]
mov	[edx+10h], ecx
mov	eax, [esp+40h+var_34]
mov	[esp+40h+var_30], ebp
mov	[edi], eax
jmp	loc_1005E663
			
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 40h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	ecx, [esp+50h+arg_0]
xor	ebp, ebp
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_34], ebx
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_38], ebx
mov	[esp+50h+var_30], ebx
mov	[esp+50h+var_2C], offset aPkix_signatu_3 
mov	[esp+50h+var_C], 8
cmp	ecx, ebx
jz	loc_1005EB5E
mov	edi, [esp+50h+arg_4]
cmp	edi, ebx
jz	loc_1005EB5E
mov	eax, [esp+50h+arg_C]
cmp	eax, ebx
jz	loc_1005EB5E
mov	esi, [esp+50h+arg_10]
mov	[eax], ebx
push	esi
lea	eax, [esp+54h+var_40]
push	eax
push	ecx
call	sub_100567C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005E7D4
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 54h
jmp	loc_1005EA57
mov	eax, [esp+50h+var_40]
dec	dword ptr [eax+4]
mov	eax, [esp+50h+var_40]
cmp	[eax+8], ebx
jz	short loc_1005E811
mov	edx, [eax+8]
push	esi
push	edx
call	sub_10095450
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005E811
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
jmp	loc_1005EA57
			
mov	ecx, [esp+50h+var_40]
mov	eax, [ecx]
mov	edx, [ecx+8]
mov	[esp+50h+var_34], edx
cmp	eax, ebx
jnz	short loc_1005E85C
cmp	[ecx+0Ch], ebx
jnz	short loc_1005E85C
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1005E847
mov	ecx, [esp+50h+var_C]
push	esi
push	2
push	ecx
push	ebx
push	249h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 249h
jmp	loc_1005EA57
			
cmp	eax, 1
jnz	short loc_1005E872
push	esi
push	edx
push	edi
call	sub_100800F0
mov	ebp, eax
add	esp, 0Ch
cmp	ebp, ebx
jz	short loc_1005E8AB
mov	eax, dword_100BAE9C
mov	[esp+50h+var_28], ebp
cmp	eax, ebx
jz	short loc_1005E896
mov	edx, [esp+50h+var_C]
push	esi
push	2
push	edx
push	ebx
push	41Eh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 41Eh
jmp	loc_1005EA57
push	esi
lea	eax, [esp+54h+var_3C]
push	eax
push	edi
call	sub_1007E7B0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005E8D6
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 91h
jmp	loc_1005EA57
mov	eax, [esp+50h+var_34]
mov	ecx, [esp+50h+var_3C]
push	esi
lea	edx, [esp+54h+var_38]
push	edx
push	eax
push	ecx
call	sub_1008F5F0
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005E90A
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 38Eh
jmp	loc_1005EA57
mov	ecx, [esp+50h+var_38]
cmp	ecx, ebx
jnz	short loc_1005E93E
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_1005E934
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jnz	loc_1005E7F9
mov	eax, [esp+50h+var_3C]
mov	ecx, eax
mov	[esp+50h+var_38], ecx
cmp	eax, ebx
jz	short loc_1005E968
push	esi
push	ecx
call	sub_10095450
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005E968
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
jmp	loc_1005EA57
			
mov	eax, [esp+50h+var_40]
cmp	[eax+8], ebx
jz	short loc_1005E9A4
mov	edx, [eax+8]
push	esi
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005E999
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	ecx, [esp+50h+var_40]
mov	[ecx+8], ebx
mov	eax, [esp+50h+var_40]
mov	edx, [esp+50h+var_38]
mov	[eax+8], edx
mov	eax, [esp+50h+var_40]
cmp	[eax+4], ebx
jz	short loc_1005E9FE
push	esi
push	20h
push	edi
call	sub_10080770
mov	edx, [esp+5Ch+var_40]
xor	ecx, ecx
add	esp, 0Ch
cmp	eax, ebx
setz	cl
mov	[esp+50h+var_30], eax
mov	[edx], ecx
cmp	eax, ebx
jz	short loc_1005E9FE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005E9FA
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_30], ebx
			
mov	eax, [esp+50h+arg_8]
cmp	eax, ebx
jz	short loc_1005EA2D
mov	ecx, [esp+50h+var_40]
mov	edx, [ecx+10h]
push	esi
push	edx
push	eax
call	sub_10077300
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005EA2D
mov	eax, [eax+4]
mov	[esp+50h+var_1C], 28Ah
jmp	short loc_1005EA53
			
mov	ecx, [esp+50h+var_40]
mov	edx, [esp+50h+arg_0]
push	esi
push	ecx
push	edx
call	sub_10056890
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1005EA57
mov	eax, [eax+4]
mov	[esp+50h+var_1C], 58h
mov	[esp+50h+var_10], eax
			
mov	eax, [esp+50h+var_40]
cmp	eax, ebx
jz	short loc_1005EA88
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EA84
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_40], ebx
mov	eax, [esp+50h+var_34]
cmp	eax, ebx
jz	short loc_1005EAB5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EAB5
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
			
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_1005EAE6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EAE2
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_3C], ebx
mov	eax, [esp+50h+var_38]
cmp	eax, ebx
jz	short loc_1005EB17
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EB13
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_38], ebx
mov	eax, [esp+50h+var_30]
cmp	eax, ebx
jz	short loc_1005EB44
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EB44
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
			
push	esi
push	1
lea	eax, [esp+58h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	ecx, [esp+50h+arg_10]
push	ecx
push	1
lea	edx, [esp+58h+var_2C]
push	1Fh
push	edx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_8]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_signature 
mov	[esp+38h+var_C], 8
test	edi, edi
jz	loc_1005EC7D
mov	eax, [esp+38h+arg_0]
test	eax, eax
jz	loc_1005EC7D
mov	edx, [esp+38h+arg_4]
push	ebx
mov	ebx, [esp+3Ch+arg_C]
lea	ecx, [esp+3Ch+var_30]
push	ecx
push	edx
push	eax
call	sub_1005E590
mov	esi, [esp+48h+var_30]
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1005EC0A
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 3B6h
jmp	short loc_1005EC37
push	ebx
push	edi
push	esi
push	0
push	0
push	0
push	offset sub_1005E740
call	sub_10056550
add	esp, 1Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1005EC37
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 53h
			
test	esi, esi
jz	short loc_1005EC64
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_1005EC64
push	ebx
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	ecx, [esp+38h+arg_C]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_targetc_2 
mov	[esp+38h+var_C], 3Fh
cmp	edi, ebx
jnz	short loc_1005ED0D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	37h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_1005ED39
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 30Dh
jmp	loc_1005EE51
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_1005ED66
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005ED64
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	eax, [edi+18h]
cmp	eax, ebx
jz	short loc_1005ED95
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005ED92
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+18h], ebx
mov	eax, [edi+1Ch]
cmp	eax, ebx
jz	short loc_1005EDC4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EDC1
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+1Ch], ebx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_1005EDF3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EDF0
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_1005EE22
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EE1F
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_1005EE51
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005EE4E
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+0Ch], ebx
			
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	3Fh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB9DC
push	1
mov	[esp+60h+var_50], offset aTargetcertchec 
mov	[esp+60h+var_48], 20h
mov	[esp+60h+var_44], offset sub_1005ECB0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	3Fh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_targetc_1 
mov	[esp+68h+var_C], 3Fh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 4Ch
push	ebx
push	ebp
mov	ebp, [esp+54h+arg_8]
xor	ebx, ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
mov	eax, 1
rep movsd
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_40], ebx
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_2C], offset aPkix_targetc_0 
mov	[esp+5Ch+var_C], 3Fh
cmp	ebp, ebx
jnz	short loc_1005EF7F
mov	ecx, [esp+5Ch+arg_C]
push	ecx
push	eax
lea	edx, [esp+64h+var_2C]
push	1Fh
push	edx
mov	[esp+6Ch+var_18], eax
mov	[esp+6Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
mov	esi, [esp+5Ch+arg_C]
push	esi
lea	eax, [esp+60h+var_44]
push	eax
push	5Ch
call	sub_10096B50
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005EFAF
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 32Eh
jmp	loc_1005F1A1
push	esi
lea	edx, [esp+60h+var_40]
push	edx
push	53h
call	sub_10096B50
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005EFDB
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 32Eh
jmp	loc_1005F1A1
push	esi
lea	ecx, [esp+60h+var_4C]
push	ecx
push	20h
push	37h
call	sub_100952A0
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F009
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 14Ah
jmp	loc_1005F1A1
mov	edi, [esp+5Ch+arg_0]
cmp	edi, ebx
jz	loc_1005F104
push	esi
lea	eax, [esp+60h+var_48]
push	eax
push	edi
call	sub_10053CF0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F040
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 0B4h
jmp	loc_1005F1A1
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	loc_1005F104
push	esi
lea	edx, [esp+60h+var_3C]
push	edx
push	eax
call	sub_100550E0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F077
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 0FBh
jmp	loc_1005F1A1
mov	edx, [esp+5Ch+var_48]
push	esi
lea	ecx, [esp+60h+var_38]
push	ecx
push	edx
call	sub_10055410
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F0A6
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 0F5h
jmp	loc_1005F1A1
mov	edx, [esp+5Ch+var_48]
push	esi
lea	ecx, [esp+60h+var_34]
push	ecx
push	edx
call	sub_100552C0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F0D5
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 0FEh
jmp	loc_1005F1A1
mov	edx, [esp+5Ch+var_48]
push	esi
lea	ecx, [esp+60h+var_30]
push	ecx
push	edx
call	sub_10055390
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F104
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 0FEh
jmp	loc_1005F1A1
			
mov	ecx, [esp+5Ch+var_4C]
mov	edx, [esp+5Ch+arg_4]
mov	[ecx+14h], edx
mov	eax, [esp+5Ch+var_4C]
mov	ecx, [esp+5Ch+var_30]
mov	[eax+10h], ecx
cmp	edi, ebx
jz	short loc_1005F145
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F145
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
jmp	short loc_1005F1A1
			
mov	eax, [esp+5Ch+var_4C]
mov	[eax], edi
mov	ecx, [esp+5Ch+var_3C]
mov	edx, [esp+5Ch+var_4C]
mov	[edx+4], ecx
mov	eax, [esp+5Ch+var_38]
mov	ecx, [esp+5Ch+var_4C]
mov	[esp+5Ch+var_3C], ebx
mov	[ecx+8], eax
mov	edx, [esp+5Ch+var_34]
mov	eax, [esp+5Ch+var_4C]
mov	[esp+5Ch+var_38], ebx
mov	[eax+0Ch], edx
mov	ecx, [esp+5Ch+var_44]
mov	edx, [esp+5Ch+var_4C]
mov	[esp+5Ch+var_34], ebx
mov	[edx+18h], ecx
mov	eax, [esp+5Ch+var_40]
mov	ecx, [esp+5Ch+var_4C]
mov	[esp+5Ch+var_44], ebx
mov	[ecx+1Ch], eax
mov	edx, [esp+5Ch+var_4C]
mov	[esp+5Ch+var_40], ebx
mov	[ebp+0], edx
mov	[esp+5Ch+var_4C], ebx
			
mov	eax, [esp+5Ch+var_44]
cmp	eax, ebx
jz	short loc_1005F1D2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F1CE
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_44], ebx
mov	eax, [esp+5Ch+var_40]
cmp	eax, ebx
jz	short loc_1005F203
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F1FF
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_40], ebx
mov	eax, [esp+5Ch+var_3C]
cmp	eax, ebx
jz	short loc_1005F234
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F230
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_3C], ebx
mov	eax, [esp+5Ch+var_38]
cmp	eax, ebx
jz	short loc_1005F265
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F261
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_38], ebx
mov	eax, [esp+5Ch+var_34]
cmp	eax, ebx
jz	short loc_1005F296
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F292
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_34], ebx
mov	eax, [esp+5Ch+var_4C]
cmp	eax, ebx
jz	short loc_1005F2C7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F2C3
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_4C], ebx
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	short loc_1005F2F8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F2F4
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_48], ebx
push	esi
push	1
lea	ecx, [esp+64h+var_2C]
push	3Fh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
align 10h
sub	esp, 4Ch
push	ebx
push	ebp
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, [esp+5Ch+arg_0]
xor	ebp, ebp
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_30], ebx
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_40], ebx
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_2C], offset aPkix_targetc_3 
mov	[esp+5Ch+var_C], 8
cmp	ecx, ebx
jz	loc_1005F9C2
cmp	[esp+5Ch+arg_4], ebx
jz	loc_1005F9C2
mov	eax, [esp+5Ch+arg_C]
cmp	eax, ebx
jz	loc_1005F9C2
mov	esi, [esp+5Ch+arg_10]
mov	[eax], ebx
push	esi
lea	eax, [esp+60h+var_4C]
push	eax
push	ecx
call	sub_100567C0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
lea	edi, [ebx+1]
cmp	eax, ebx
jz	short loc_1005F3BD
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 54h
jmp	loc_1005F87E
mov	eax, [esp+5Ch+var_4C]
dec	dword ptr [eax+14h]
mov	edx, [esp+5Ch+var_4C]
cmp	[edx+4], ebx
jz	loc_1005F46A
mov	ecx, [esp+5Ch+arg_4]
push	esi
lea	eax, [esp+60h+var_38]
push	eax
push	ecx
call	sub_100808B0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F400
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 84h
jmp	loc_1005F882
mov	ecx, [esp+5Ch+var_38]
mov	edx, [esp+5Ch+var_4C]
push	esi
lea	eax, [esp+60h+var_44]
push	eax
mov	eax, [edx+4]
push	ecx
push	eax
call	sub_1008CA20
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F433
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 9Bh
jmp	loc_1005F87E
cmp	[esp+5Ch+var_44], edi
jz	short loc_1005F46A
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1005F459
mov	edx, [esp+5Ch+var_C]
push	esi
push	2
push	edx
push	ebx
push	420h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+5Ch+var_18], edi
mov	[esp+5Ch+var_1C], 420h
jmp	loc_1005F882
			
mov	ecx, [esp+5Ch+arg_4]
push	esi
lea	eax, [esp+60h+var_40]
push	eax
push	ecx
call	sub_1007DFE0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F499
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 8Bh
jmp	loc_1005F882
mov	eax, [esp+5Ch+var_4C]
cmp	[eax+0Ch], ebx
jz	loc_1005F5EB
cmp	[esp+5Ch+var_40], ebx
jz	loc_1005F5EB
mov	edx, [eax+0Ch]
push	esi
lea	ecx, [esp+60h+arg_0]
push	ecx
push	edx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F4DE
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 284h
jmp	loc_1005F882
mov	eax, [esp+5Ch+arg_0]
xor	edi, edi
cmp	eax, ebx
jbe	loc_1005F586
lea	esp, [esp+0]
mov	edx, [esp+5Ch+var_4C]
mov	eax, [edx+0Ch]
push	esi
lea	ecx, [esp+60h+var_48]
push	ecx
push	edi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jnz	loc_1005F5BF
mov	edx, [esp+5Ch+var_48]
mov	eax, [esp+5Ch+var_40]
push	esi
lea	ecx, [esp+60h+var_44]
push	ecx
push	edx
push	eax
call	sub_10077130
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jnz	loc_1005F5D3
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	short loc_1005F568
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F564
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_48], ebx
cmp	[esp+5Ch+var_44], 1
mov	eax, [esp+5Ch+var_4C]
jnz	short loc_1005F579
cmp	[eax+10h], ebx
jz	short loc_1005F5EB
inc	ebp
mov	eax, [esp+5Ch+arg_0]
inc	edi
cmp	edi, eax
jb	loc_1005F4F0
cmp	ebp, eax
jz	short loc_1005F5E7
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1005F5AA
mov	ecx, [esp+5Ch+var_C]
push	esi
push	2
push	ecx
push	ebx
push	3D3h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 3D3h
jmp	loc_1005F882
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 283h
jmp	loc_1005F882
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 27Ch
jmp	loc_1005F882
mov	eax, [esp+5Ch+var_4C]
			
push	esi
cmp	[eax+14h], ebx
jnz	loc_1005F82B
cmp	[eax], ebx
jz	short loc_1005F651
mov	eax, [eax]
lea	edx, [esp+60h+var_30]
push	edx
push	eax
call	sub_10053C70
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F621
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 0B6h
jmp	loc_1005F87E
mov	edx, [esp+5Ch+arg_4]
mov	eax, [esp+5Ch+var_4C]
mov	ecx, [eax]
push	esi
push	edx
push	ecx
call	[esp+68h+var_30]
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F677
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 0C1h
jmp	loc_1005F882
mov	eax, [esp+60h+arg_4]
push	ebx
push	eax
call	sub_100805E0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F677
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 0E0h
jmp	loc_1005F87E
			
mov	eax, [esp+5Ch+arg_4]
push	esi
lea	edx, [esp+60h+var_3C]
push	edx
push	eax
call	sub_1007F160
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F6A2
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 81h
jmp	loc_1005F87E
mov	eax, [esp+5Ch+var_4C]
cmp	[eax+8], ebx
jz	loc_1005F780
cmp	[esp+5Ch+var_3C], ebx
jz	loc_1005F780
mov	eax, [eax+8]
push	esi
lea	edx, [esp+60h+arg_0]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F6E3
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 284h
jmp	loc_1005F87E
xor	edi, edi
cmp	[esp+5Ch+arg_0], ebx
jbe	loc_1005F780
lea	ebp, [edi+1]
mov	eax, [esp+5Ch+var_4C]
mov	ecx, [eax+8]
push	esi
lea	edx, [esp+60h+var_48]
push	edx
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jnz	loc_1005F7D9
mov	eax, [esp+5Ch+var_48]
mov	ecx, [esp+5Ch+var_3C]
push	esi
lea	edx, [esp+60h+var_44]
push	edx
push	eax
push	ecx
call	sub_10077130
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jnz	loc_1005F7ED
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	short loc_1005F76A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F766
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_48], ebx
cmp	[esp+5Ch+var_44], ebp
jnz	loc_1005F7FD
add	edi, ebp
cmp	edi, [esp+5Ch+arg_0]
jb	loc_1005F6F2
			
mov	edi, [esp+5Ch+arg_8]
cmp	edi, ebx
jz	loc_1005F882
mov	edx, [esp+5Ch+var_4C]
mov	eax, [edx+18h]
push	esi
push	eax
push	edi
call	sub_10077300
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jnz	loc_1005F873
mov	eax, [esp+5Ch+arg_4]
push	esi
lea	edx, [esp+60h+var_34]
push	edx
push	eax
call	sub_1007DC60
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	loc_1005F853
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 8Dh
jmp	loc_1005F87E
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 283h
jmp	loc_1005F882
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 27Ch
jmp	loc_1005F87E
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1005F81D
mov	edx, [esp+5Ch+var_C]
push	esi
push	2
push	edx
push	ebx
push	1BCh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+5Ch+var_18], ebp
mov	[esp+5Ch+var_1C], 1BCh
jmp	short loc_1005F882
mov	eax, [esp+60h+arg_4]
push	1
push	eax
call	sub_100805E0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	loc_1005F780
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 0E0h
jmp	short loc_1005F87E
cmp	[esp+5Ch+var_40], ebx
jz	short loc_1005F882
mov	edx, [esp+5Ch+var_4C]
mov	eax, [edx+1Ch]
push	esi
push	eax
push	edi
call	sub_10077300
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005F882
mov	ecx, [eax+4]
mov	[esp+5Ch+var_1C], 28Ah
			
mov	[esp+5Ch+var_10], ecx
			
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	short loc_1005F8B3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F8AF
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_38]
cmp	eax, ebx
jz	short loc_1005F8E4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F8E0
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_38], ebx
mov	eax, [esp+5Ch+var_40]
cmp	eax, ebx
jz	short loc_1005F915
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F911
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_40], ebx
mov	eax, [esp+5Ch+var_3C]
cmp	eax, ebx
jz	short loc_1005F946
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F942
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_3C], ebx
mov	eax, [esp+5Ch+var_34]
cmp	eax, ebx
jz	short loc_1005F977
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F973
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_34], ebx
mov	eax, [esp+5Ch+var_4C]
cmp	eax, ebx
jz	short loc_1005F9A8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1005F9A4
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_4C], ebx
push	esi
push	1
lea	edx, [esp+64h+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
			
mov	eax, [esp+5Ch+arg_10]
push	eax
push	1
lea	ecx, [esp+64h+var_2C]
push	1Fh
push	ecx
mov	[esp+6Ch+var_18], 1
mov	[esp+6Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
sub	esp, 30h
push	ebx
mov	ebx, [esp+34h+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_targetcer 
mov	[esp+3Ch+var_C], 8
test	ebx, ebx
jnz	short loc_1005FA53
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_C]
mov	eax, [esp+3Ch+arg_4]
mov	ecx, [esp+3Ch+arg_0]
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	eax
push	ecx
call	sub_1005EF00
mov	edi, [esp+4Ch+var_30]
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1005FA8C
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 3D5h
jmp	short loc_1005FAB9
push	esi
push	ebx
push	edi
push	0
push	0
push	0
push	offset sub_1005F320
call	sub_10056550
add	esp, 1Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1005FAB9
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 53h
			
test	edi, edi
jz	short loc_1005FAE6
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_1005FAE6
push	esi
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
			
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	8
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_trustan_3 
mov	[esp+38h+var_C], 40h
cmp	edi, ebx
jnz	short loc_1005FB5D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	38h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_1005FB89
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 30Eh
jmp	loc_1005FC43
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_1005FBB6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005FBB4
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_1005FBE5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005FBE2
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_1005FC14
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005FC11
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_1005FC43
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1005FC40
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+0Ch], ebx
			
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	40h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_2C], offset aPkix_trustan_4 
mov	[esp+3Ch+var_C], 40h
test	esi, esi
jz	loc_1005FE3A
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_1005FE3A
mov	ebp, [esp+3Ch+arg_8]
test	ebp, ebp
jz	loc_1005FE3A
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebx
push	38h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1005FCD7
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 1F0h
jmp	loc_1005FE20
push	ebx
lea	ecx, [esp+44h+var_30]
push	ecx
push	edi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1005FD02
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 152h
jmp	loc_1005FE20
cmp	[esp+40h+var_30], 38h
mov	dword ptr [ebp+0], 0
jnz	loc_1005FE20
mov	eax, [esi]
mov	ecx, [edi]
test	eax, eax
jz	short loc_1005FD54
test	ecx, ecx
jz	loc_1005FE20
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	loc_1005FE19
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	loc_1005FE20
test	ecx, ecx
jnz	loc_1005FE20
mov	edx, [edi+4]
mov	eax, [esi+4]
push	ebx
lea	ecx, [esp+44h+arg_0]
push	ecx
push	edx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1005FD8E
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2CBh
jmp	loc_1005FE20
cmp	[esp+40h+arg_0], 0
jz	loc_1005FE20
mov	eax, [edi+8]
mov	ecx, [esi+8]
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_1005FDE3
cmp	[esp+40h+arg_0], eax
jz	short loc_1005FE20
mov	esi, [esi+0Ch]
test	esi, esi
jz	short loc_1005FDF8
mov	eax, [edi+0Ch]
test	eax, eax
jz	short loc_1005FDF4
push	ebx
lea	ecx, [esp+44h+arg_0]
push	ecx
push	eax
push	esi
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1005FE12
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2CBh
jmp	short loc_1005FE20
test	esi, esi
jnz	short loc_1005FE08
cmp	dword ptr [edi+0Ch], 0
jnz	short loc_1005FE08
mov	[esp+40h+arg_0], 1
jmp	short loc_1005FE19
			
mov	[esp+40h+arg_0], 0
jmp	short loc_1005FE20
cmp	[esp+40h+arg_0], 0
jz	short loc_1005FE20
			
mov	eax, [esp+40h+arg_0]
mov	[ebp+0], eax
			
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	40h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_C]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_2C], offset aPkix_trustan_5 
mov	[esp+4Ch+var_C], 40h
cmp	esi, ebx
jz	loc_10060017
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_10060017
mov	edi, [esp+4Ch+arg_8]
push	edi
push	38h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005FF02
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+54h+var_2C]
push	40h
push	edx
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 30Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	eax, [esi]
push	edi
cmp	eax, ebx
jz	short loc_1005FF69
lea	ecx, [esp+50h+var_38]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005FF48
			
mov	edx, [eax+4]
push	edi
push	1
mov	[esp+54h+var_10], edx
lea	edx, [esp+54h+var_2C]
push	40h
push	edx
mov	[esp+5Ch+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	eax, [esp+4Ch+var_38]
push	edi
push	1
lea	edx, [esp+54h+var_2C]
push	40h
push	edx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	ecx, [esi+4]
lea	eax, [esp+50h+var_34]
push	eax
push	ecx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jnz	short loc_1005FF1F
mov	ecx, [esi+8]
push	edi
lea	eax, [esp+50h+var_30]
push	eax
push	ecx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jnz	short loc_1005FF1F
mov	esi, [esi+0Ch]
cmp	esi, ebx
jz	short loc_1005FFE3
push	edi
lea	eax, [esp+50h+var_3C]
push	eax
push	esi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1005FFE7
mov	ecx, [eax+4]
push	edi
push	1
lea	edx, [esp+54h+var_2C]
push	40h
push	edx
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	[esp+4Ch+var_3C], ebx
mov	ecx, [esp+4Ch+var_34]
mov	eax, ecx
shl	eax, 5
sub	eax, ecx
add	eax, [esp+4Ch+var_3C]
push	edi
add	eax, [esp+50h+var_30]
push	1
lea	edx, [esp+54h+var_2C]
push	40h
push	edx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	eax, [esp+4Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	1Fh
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 44h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	edi, [esp+54h+arg_0]
mov	[esp+54h+var_44], ebx
mov	[esp+54h+var_30], ebx
mov	[esp+54h+var_3C], ebx
mov	[esp+54h+var_38], ebx
mov	[esp+54h+var_34], ebx
mov	[esp+54h+var_40], ebx
mov	[esp+54h+var_2C], offset aPkix_trustan_6 
mov	[esp+54h+var_C], 40h
cmp	edi, ebx
jz	loc_10060395
mov	ebp, [esp+54h+arg_4]
cmp	ebp, ebx
jz	loc_10060395
mov	esi, [esp+54h+arg_8]
push	esi
push	38h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_100600D5
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 30Eh
jmp	loc_10060286
push	esi		
lea	ecx, [esp+58h+var_44]
push	ecx		
push	ebx		
cmp	[edi], ebx
jz	loc_10060173
push	offset aTrustedCertS 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1006010E
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 3CFh
jmp	loc_10060286
mov	ecx, [edi]
push	esi
lea	eax, [esp+58h+var_3C]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1006013B
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 316h
jmp	loc_10060286
mov	eax, [esp+54h+var_3C]
mov	ecx, [esp+54h+var_44]
push	eax
push	ecx
lea	edx, [esp+5Ch+var_30]
push	esi
push	edx
call	sub_10098590
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	loc_1006027F
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 3CDh
jmp	loc_10060286
push	offset aTrustedCaNameS 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1006019D
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 3CFh
jmp	loc_10060286
mov	ecx, [edi+4]
push	esi
lea	eax, [esp+58h+var_38]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_100601CB
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 316h
jmp	loc_10060286
mov	ecx, [edi+8]
push	esi
lea	eax, [esp+58h+var_34]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_100601F9
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 316h
jmp	loc_10060286
mov	edi, [edi+0Ch]
push	esi		
cmp	edi, ebx
jz	short loc_10060216
lea	eax, [esp+58h+var_40]
push	eax
push	edi
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006022F
lea	ecx, [esp+58h+var_40]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10060244
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], ecx
jmp	short loc_10060286
mov	eax, [esp+54h+var_40]
mov	ecx, [esp+54h+var_34]
mov	edx, [esp+54h+var_38]
push	eax
mov	eax, [esp+58h+var_44]
push	ecx
push	edx
push	eax
lea	ecx, [esp+64h+var_30]
push	esi
push	ecx
call	sub_10098590
add	esp, 18h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1006027F
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 3CDh
jmp	short loc_10060286
			
mov	eax, [esp+54h+var_30]
mov	[ebp+0], eax
			
mov	eax, [esp+54h+var_44]
cmp	eax, ebx
jz	short loc_100602B7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100602B3
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_44], ebx
mov	eax, [esp+54h+var_3C]
cmp	eax, ebx
jz	short loc_100602E8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100602E4
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_3C], ebx
mov	eax, [esp+54h+var_38]
cmp	eax, ebx
jz	short loc_10060319
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_10060315
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_38], ebx
mov	eax, [esp+54h+var_34]
cmp	eax, ebx
jz	short loc_1006034A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_10060346
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_34], ebx
mov	eax, [esp+54h+var_40]
cmp	eax, ebx
jz	short loc_1006037B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_10060377
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_40], ebx
push	esi
push	1
lea	eax, [esp+5Ch+var_2C]
push	40h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
			
mov	ecx, [esp+54h+arg_8]
push	ecx
push	1
lea	edx, [esp+5Ch+var_2C]
push	1Fh
push	edx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BBA00
push	1
mov	[esp+60h+var_50], offset aTrustanchor 
mov	[esp+60h+var_48], 10h
mov	[esp+60h+var_44], offset sub_1005FB00
mov	[esp+60h+var_40], offset sub_1005FC60
mov	[esp+60h+var_3C], offset sub_1005FE70
mov	[esp+60h+var_38], offset sub_10060050
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	40h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_trustan_2 
mov	[esp+68h+var_C], 40h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_trustanch 
mov	[esp+40h+var_C], 40h
cmp	edi, ebx
jz	loc_100605C9
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_100605C9
mov	esi, [esp+40h+arg_8]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	10h
push	38h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1006052D
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 14Bh
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10060513
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1006050F
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	40h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	esi
push	edi
call	sub_10081190
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10060550
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 0CCh
jmp	short loc_100604E2
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	esi
cmp	eax, ebx
jz	short loc_1006057A
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
jmp	loc_100604E2
mov	ecx, [esp+44h+var_30]
mov	[ecx], edi
mov	edx, [esp+44h+var_30]
mov	[edx+4], ebx
mov	eax, [esp+44h+var_30]
mov	[eax+8], ebx
mov	eax, [esp+44h+var_30]
mov	edx, [eax]
lea	ecx, [eax+0Ch]
push	ecx
push	edx
call	sub_100808B0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100605BD
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 84h
jmp	loc_100604E2
mov	ecx, [esp+40h+var_30]
mov	[ebp+0], ecx
jmp	loc_1006050F
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_trustan_0 
mov	[esp+38h+var_C], 40h
test	edi, edi
jz	short loc_1006069F
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1006069F
mov	eax, [edi]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10060682
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10060682
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	40h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	40h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_trustan_1 
mov	[esp+38h+var_C], 40h
test	edi, edi
jz	short loc_10060771
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10060771
mov	eax, [edi+0Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10060753
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10060753
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	40h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+0Ch]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	40h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
xor	edi, edi
mov	[esp+38h+var_2C], offset aPkix_proces_26 
mov	[esp+38h+var_C], 36h
cmp	ebx, edi
jnz	short loc_100607FD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	30h
push	ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, edi
jz	short loc_10060829
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 305h
jmp	loc_100609CE
mov	eax, [ebx]
cmp	eax, edi
jz	short loc_10060856
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_10060854
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx], edi
mov	eax, [ebx+4]
cmp	eax, edi
jz	short loc_10060885
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_10060882
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+4], edi
mov	eax, [ebx+8]
cmp	eax, edi
jz	short loc_100608B4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100608B1
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+8], edi
mov	eax, [ebx+0Ch]
cmp	eax, edi
jz	short loc_100608E3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100608E0
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+0Ch], edi
mov	eax, [ebx+10h]
cmp	eax, edi
jz	short loc_10060912
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1006090F
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+10h], edi
mov	eax, [ebx+24h]
cmp	eax, edi
jz	short loc_10060941
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1006093E
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+24h], edi
mov	eax, [ebx+34h]
cmp	eax, edi
jz	short loc_10060970
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1006096D
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+34h], edi
mov	eax, [ebx+28h]
cmp	eax, edi
jz	short loc_1006099F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1006099C
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+28h], edi
mov	eax, [ebx+38h]
cmp	eax, edi
jz	short loc_100609CE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_100609CB
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+38h], edi
			
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
xor	edi, edi
mov	[esp+3Ch+var_2C], offset aPkix_proces_27 
mov	[esp+3Ch+var_C], 36h
cmp	ebp, edi
jz	loc_10060D72
mov	esi, [esp+3Ch+arg_4]
cmp	esi, edi
jz	loc_10060D72
cmp	[esp+3Ch+arg_8], edi
jz	loc_10060D72
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebx
push	30h
push	ebp
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060A67
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 1ECh
jmp	loc_10060D3C
push	ebx
lea	ecx, [esp+44h+var_30]
push	ecx
push	esi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060A92
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 152h
jmp	loc_10060D3C
cmp	[esp+40h+var_30], 30h
mov	eax, [esp+40h+arg_8]
mov	[eax], edi
jnz	loc_10060D3C
mov	ecx, [ebp+20h]
cmp	ecx, [esi+20h]
jnz	loc_10060D3C
mov	edx, [ebp+2Ch]
cmp	edx, [esi+2Ch]
jnz	loc_10060D3C
mov	eax, [ebp+30h]
cmp	eax, [esi+30h]
jnz	loc_10060D3C
mov	ecx, [ebp+0]
cmp	ecx, edi
jz	short loc_10060B00
mov	eax, [esi]
cmp	eax, edi
jz	short loc_10060B0E
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060B17
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	loc_10060D3C
cmp	[esi], edi
jnz	short loc_10060B0E
mov	[esp+40h+arg_0], 1
jmp	short loc_10060B21
			
mov	[esp+40h+arg_0], edi
jmp	loc_10060D3C
cmp	[esp+40h+arg_0], edi
jz	loc_10060D3C
mov	eax, [ebp+4]
cmp	eax, edi
jz	short loc_10060B5F
mov	ecx, [esi+4]
cmp	ecx, edi
jz	short loc_10060B5B
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060B6E
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	loc_10060D3C
cmp	eax, edi
jnz	short loc_10060B0E
cmp	[esi+4], edi
jnz	short loc_10060B0E
mov	[esp+40h+arg_0], 1
jmp	short loc_10060B78
cmp	[esp+40h+arg_0], edi
jz	loc_10060D3C
mov	eax, [ebp+0Ch]
cmp	eax, edi
jz	short loc_10060BBA
mov	ecx, [esi+0Ch]
cmp	ecx, edi
jz	short loc_10060BB2
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060BCD
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	loc_10060D3C
cmp	eax, edi
jnz	loc_10060B0E
cmp	[esi+0Ch], edi
jnz	loc_10060B0E
mov	[esp+40h+arg_0], 1
jmp	short loc_10060BD7
cmp	[esp+40h+arg_0], edi
jz	loc_10060D3C
mov	eax, [ebp+8]
cmp	eax, edi
jz	short loc_10060C19
mov	ecx, [esi+8]
cmp	ecx, edi
jz	short loc_10060C11
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060C2C
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	loc_10060D3C
cmp	eax, edi
jnz	loc_10060B0E
cmp	[esi+8], edi
jnz	loc_10060B0E
mov	[esp+40h+arg_0], 1
jmp	short loc_10060C36
cmp	[esp+40h+arg_0], edi
jz	loc_10060D3C
mov	eax, [ebp+10h]
cmp	eax, edi
jz	short loc_10060C78
mov	ecx, [esi+10h]
cmp	ecx, edi
jz	short loc_10060C70
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060C8B
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	loc_10060D3C
cmp	eax, edi
jnz	loc_10060B0E
cmp	[esi+10h], edi
jnz	loc_10060B0E
mov	[esp+40h+arg_0], 1
jmp	short loc_10060C95
cmp	[esp+40h+arg_0], edi
jz	loc_10060D3C
mov	eax, [ebp+28h]
cmp	eax, edi
jz	short loc_10060CD4
mov	ecx, [esi+28h]
cmp	ecx, edi
jz	short loc_10060CCC
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060CE7
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	short loc_10060D3C
cmp	eax, edi
jnz	loc_10060B0E
cmp	[esi+28h], edi
jnz	loc_10060B0E
mov	[esp+40h+arg_0], 1
jmp	short loc_10060CED
cmp	[esp+40h+arg_0], edi
jz	short loc_10060D3C
mov	eax, [ebp+38h]
cmp	eax, edi
jz	short loc_10060D28
mov	ecx, [esi+38h]
cmp	ecx, edi
jz	short loc_10060D24
push	ebx
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10060D62
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	short loc_10060D3C
cmp	eax, edi
jnz	short loc_10060D56
cmp	[esi+38h], edi
jnz	short loc_10060D56
mov	eax, 1
mov	[esp+40h+arg_0], eax
mov	edx, [esp+40h+arg_8]
mov	[edx], eax
			
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_8]
mov	[esp+40h+arg_0], edi
mov	[ecx], edi
jmp	short loc_10060D3C
mov	eax, [esp+40h+arg_0]
cmp	eax, edi
jnz	short loc_10060D36
mov	ecx, [esp+40h+arg_8]
mov	[ecx], edi
jmp	short loc_10060D3C
			
mov	ecx, [esp+3Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 48h
push	ebx
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	esi, [esp+54h+arg_0]
mov	[esp+54h+var_40], ebx
mov	[esp+54h+var_38], ebx
mov	[esp+54h+var_3C], ebx
mov	[esp+54h+var_30], ebx
mov	[esp+54h+var_34], ebx
mov	[esp+54h+var_44], ebx
mov	[esp+54h+var_48], ebx
mov	[esp+54h+var_2C], offset aPkix_proces_28 
mov	[esp+54h+var_C], 36h
cmp	esi, ebx
jz	loc_10060FFA
cmp	[esp+54h+arg_4], ebx
jz	loc_10060FFA
push	ebp
mov	ebp, [esp+58h+arg_8]
push	ebp
push	30h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10060E27
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 305h
jmp	loc_10060FE0
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_10060E58
push	ebp
lea	ecx, [esp+5Ch+var_40]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10060E5C
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2CFh
jmp	loc_10060FE0
mov	[esp+58h+var_40], ebx
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_10060E8E
push	ebp
lea	ecx, [esp+5Ch+var_38]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10060E92
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2CFh
jmp	loc_10060FE0
mov	[esp+58h+var_38], ebx
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_10060EC4
push	ebp
lea	ecx, [esp+5Ch+var_3C]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10060EC8
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2CFh
jmp	loc_10060FE0
mov	[esp+58h+var_3C], ebx
mov	eax, [esi+8]
cmp	eax, ebx
jz	short loc_10060EFA
push	ebp
lea	ecx, [esp+5Ch+var_30]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10060EFE
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2CFh
jmp	loc_10060FE0
mov	[esp+58h+var_30], ebx
mov	eax, [esi+10h]
cmp	eax, ebx
jz	short loc_10060F30
push	ebp
lea	ecx, [esp+5Ch+var_34]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10060F34
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2CFh
jmp	loc_10060FE0
mov	[esp+58h+var_34], ebx
mov	eax, [esi+28h]
mov	edi, [esi+20h]
cmp	eax, ebx
jz	short loc_10060F66
push	ebp
lea	ecx, [esp+5Ch+var_44]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10060F6A
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2CFh
jmp	short loc_10060FE0
mov	[esp+58h+var_44], ebx
mov	eax, [esi+38h]
cmp	eax, ebx
jz	short loc_10060F99
push	ebp
lea	ecx, [esp+5Ch+var_48]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10060F9D
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2CFh
jmp	short loc_10060FE0
mov	[esp+58h+var_48], ebx
mov	ecx, [esp+58h+var_44]
mov	edx, [esp+58h+var_48]
lea	edx, [edx+ecx]
mov	ecx, [esp+58h+var_40]
mov	eax, ecx
shl	eax, 5
sub	eax, ecx
add	eax, [esp+58h+var_3C]
shl	edx, 7
add	edx, [esi+30h]
add	eax, [esp+58h+var_38]
add	edx, [esi+2Ch]
mov	ecx, eax
shl	ecx, 5
shl	edx, 7
sub	ecx, eax
add	edx, edi
add	ecx, edx
add	ecx, [esp+58h+var_34]
mov	edx, [esp+58h+arg_4]
add	ecx, [esp+58h+var_30]
mov	[edx], ecx
			
push	ebp
push	1
lea	eax, [esp+60h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 48h
retn
			
mov	ecx, [esp+54h+arg_8]
push	ecx
push	1
lea	edx, [esp+5Ch+var_2C]
push	1Fh
push	edx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 48h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_proces_29 
mov	[esp+40h+var_C], 36h
cmp	edi, ebx
jz	loc_10061384
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10061384
mov	esi, [esp+40h+arg_8]
push	esi
push	30h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100610A1
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 305h
jmp	loc_10061323
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	48h
push	30h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100610CF
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 36Ah
jmp	loc_10061323
mov	eax, [edi]
mov	edx, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10061100
push	esi
push	edx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10061102
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_10061323
mov	[edx], ebx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10061137
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 4
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1006113E
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_10061323
mov	eax, [esp+40h+var_30]
mov	[eax+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10061173
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 8
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1006117A
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_10061323
mov	eax, [esp+40h+var_30]
mov	[eax+8], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_100611AF
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 0Ch
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100611B6
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_10061323
mov	eax, [esp+40h+var_30]
mov	[eax+0Ch], ebx
mov	eax, [edi+10h]
cmp	eax, ebx
jz	short loc_100611EB
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 10h
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100611F2
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_10061323
mov	eax, [esp+40h+var_30]
mov	[eax+10h], ebx
mov	ecx, [edi+14h]
mov	edx, [esp+40h+var_30]
mov	[edx+14h], ecx
mov	eax, [edi+18h]
mov	ecx, [esp+40h+var_30]
mov	[ecx+18h], eax
mov	edx, [edi+1Ch]
mov	eax, [esp+40h+var_30]
mov	[eax+1Ch], edx
mov	ecx, [edi+20h]
mov	edx, [esp+40h+var_30]
mov	[edx+20h], ecx
mov	eax, [edi+24h]
cmp	eax, ebx
jz	short loc_1006124F
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 24h
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10061256
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_10061323
mov	eax, [esp+40h+var_30]
mov	[eax+24h], ebx
mov	eax, [edi+34h]
cmp	eax, ebx
jz	short loc_1006128B
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 34h
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10061292
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	loc_10061323
mov	eax, [esp+40h+var_30]
mov	[eax+34h], ebx
mov	eax, [edi+28h]
cmp	eax, ebx
jz	short loc_100612C4
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 28h
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100612CB
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	short loc_10061323
mov	eax, [esp+40h+var_30]
mov	[eax+28h], ebx
mov	eax, [edi+38h]
cmp	eax, ebx
jz	short loc_100612FD
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 38h
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10061304
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	short loc_10061323
mov	eax, [esp+40h+var_30]
mov	[eax+38h], ebx
mov	ecx, [edi+2Ch]
mov	edx, [esp+40h+var_30]
mov	[edx+2Ch], ecx
mov	eax, [edi+30h]
mov	ecx, [esp+40h+var_30]
mov	[ecx+30h], eax
mov	edx, [esp+40h+var_30]
mov	eax, [esp+40h+var_28]
mov	[ebp+0], edx
			
cmp	[esp+40h+var_18], ebx
jnz	short loc_10061339
cmp	eax, ebx
jnz	short loc_10061339
cmp	[esp+40h+var_14], ebx
jnz	short loc_10061339
cmp	[esp+40h+var_4], ebx
jz	short loc_1006136A
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1006136A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10061366
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_30], ebx
			
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	36h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_processin 
mov	[esp+40h+var_C], 36h
cmp	edi, ebx
jnz	short loc_10061423
mov	eax, [esp+40h+arg_4]
push	eax
mov	ebp, 1
push	ebp
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], ebp
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+40h+arg_4]
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	48h
push	30h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
mov	ebp, 1
cmp	eax, ebx
jz	short loc_1006149F
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 145h
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10061486
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10061482
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	ebp
lea	edx, [esp+48h+var_2C]
push	36h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	ecx, [esp+40h+var_30]
push	esi
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100614C6
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 27Dh
jmp	short loc_10061455
mov	eax, [esp+40h+var_30]
mov	ecx, [eax]
push	esi
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100614F2
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 28Dh
jmp	loc_10061455
mov	eax, [esp+40h+var_30]
push	esi
add	eax, 0Ch
push	eax
push	ebx
call	sub_10088CB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10061520
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 180h
jmp	loc_10061455
mov	edx, [esp+40h+var_30]
mov	[edx+4], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+8], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+10h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+14h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+18h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+1Ch], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+20h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+24h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+34h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+28h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+38h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+2Ch], ebp
mov	edx, [esp+40h+var_30]
mov	[edx+30h], ebp
mov	eax, [esp+40h+var_30]
mov	[eax+3Ch], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+40h], ebp
mov	edx, [esp+40h+var_30]
mov	[edx+44h], ebp
mov	eax, [esp+40h+var_30]
mov	[edi], eax
jmp	loc_10061482
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_process_0 
mov	[esp+30h+var_C], 36h
pop	esi
lea	ecx, [esp+2Ch+var_2C]
test	eax, eax
jnz	short loc_100615F8
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [esp+2Ch+arg_4]
mov	[eax+3Ch], edx
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	36h
push	ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_process_1 
mov	[esp+30h+var_C], 36h
pop	esi
lea	ecx, [esp+2Ch+var_2C]
test	eax, eax
jnz	short loc_10061678
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [esp+2Ch+arg_4]
mov	[eax+40h], edx
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	36h
push	ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_process_2 
mov	[esp+38h+var_C], 36h
test	ebx, ebx
jz	loc_10061794
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_10061794
mov	eax, [ebx]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10061717
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10061711
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	dword ptr [ebx], 0
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
push	esi
test	eax, eax
jz	short loc_10061759
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	36h
push	eax
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
push	edi
mov	[ebx], edi
call	sub_10075700
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1006177B
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 28Dh
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_proces_15 
mov	[esp+38h+var_C], 36h
test	edi, edi
jz	short loc_1006186F
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1006186F
mov	eax, [edi]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10061852
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10061852
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_process_3 
mov	[esp+30h+var_C], 36h
pop	esi
lea	ecx, [esp+2Ch+var_2C]
test	eax, eax
jnz	short loc_100618F8
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [esp+2Ch+arg_4]
mov	[eax+44h], edx
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	36h
push	ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_proces_14 
mov	[esp+38h+var_C], 36h
test	edi, edi
jz	short loc_100619C1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100619C1
mov	eax, [edi+0Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_100619A3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_100619A3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+0Ch]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
xor	ebp, ebp
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_process_4 
mov	[esp+3Ch+var_C], 36h
cmp	ebx, ebp
jnz	short loc_10061A4F
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	eax, [ebx+0Ch]
mov	esi, [esp+3Ch+arg_8]
cmp	eax, ebp
jz	short loc_10061A82
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10061A7F
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
mov	[ebx+0Ch], ebp
mov	edi, [esp+3Ch+arg_4]
cmp	edi, ebp
jz	short loc_10061AB5
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10061AB5
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
mov	eax, [esp+48h+var_28]
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
jmp	short loc_10061AD9
			
push	esi
push	ebx
mov	[ebx+0Ch], edi
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10061AD9
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 2D0h
			
cmp	[esp+3Ch+var_18], ebp
jnz	short loc_10061AEF
cmp	eax, ebp
jnz	short loc_10061AEF
cmp	[esp+3Ch+var_14], ebp
jnz	short loc_10061AEF
cmp	[esp+3Ch+var_4], ebp
jz	short loc_10061B1E
			
mov	eax, [ebx+0Ch]
cmp	eax, ebp
jz	short loc_10061B1E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10061B1B
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
mov	[ebx+0Ch], ebp
			
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_process_5 
mov	[esp+38h+var_C], 36h
test	edi, edi
jz	short loc_10061BE1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10061BE1
mov	eax, [edi+8]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10061BC3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10061BC3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+8]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
xor	ebp, ebp
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_process_6 
mov	[esp+3Ch+var_C], 36h
cmp	ebx, ebp
jnz	short loc_10061C6F
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	eax, [ebx+8]
mov	esi, [esp+3Ch+arg_8]
cmp	eax, ebp
jz	short loc_10061CA2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10061C9F
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
mov	[ebx+8], ebp
mov	edi, [esp+3Ch+arg_4]
cmp	edi, ebp
jz	short loc_10061CD5
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10061CD5
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
mov	eax, [esp+48h+var_28]
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
jmp	short loc_10061CF9
			
push	esi
push	ebx
mov	[ebx+8], edi
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10061CF9
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 2D0h
			
cmp	[esp+3Ch+var_18], ebp
jnz	short loc_10061D0F
cmp	eax, ebp
jnz	short loc_10061D0F
cmp	[esp+3Ch+var_14], ebp
jnz	short loc_10061D0F
cmp	[esp+3Ch+var_4], ebp
jz	short loc_10061D3E
			
mov	eax, [ebx+8]
cmp	eax, ebp
jz	short loc_10061D3E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10061D3B
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
mov	[ebx+8], ebp
			
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_proces_20 
mov	[esp+3Ch+var_C], 36h
test	ebx, ebx
jz	loc_10061ECB
mov	ebp, [esp+3Ch+arg_4]
test	ebp, ebp
jz	loc_10061ECB
cmp	dword ptr [ebx+10h], 0
mov	edi, [esp+3Ch+arg_8]
lea	esi, [ebx+10h]
jnz	loc_10061E63
push	edi
push	esi
call	sub_100755D0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10061DEB
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+44h+var_10], eax
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
mov	[esp+4Ch+var_1C], 3EEh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	ecx, [esi]
push	edi
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10061E28
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3F2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
push	edi
push	ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10061E63
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+44h+var_10], eax
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
mov	[esp+4Ch+var_1C], 2D0h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esi]
test	eax, eax
jz	short loc_10061EAC
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10061EAC
push	edi
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
mov	[esp+4Ch+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esi]
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
mov	[ebp+0], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
xor	ebp, ebp
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_process_7 
mov	[esp+3Ch+var_C], 36h
cmp	ebx, ebp
jnz	short loc_10061F5F
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	eax, [ebx+10h]
mov	esi, [esp+3Ch+arg_8]
cmp	eax, ebp
jz	short loc_10061F92
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10061F8F
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
mov	[ebx+10h], ebp
mov	edi, [esp+3Ch+arg_4]
cmp	edi, ebp
jz	short loc_10061FC5
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10061FC5
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
mov	eax, [esp+48h+var_28]
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
jmp	short loc_10061FE9
			
push	esi
push	ebx
mov	[ebx+10h], edi
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10061FE9
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 2D0h
			
cmp	[esp+3Ch+var_18], ebp
jnz	short loc_10061FFF
cmp	eax, ebp
jnz	short loc_10061FFF
cmp	[esp+3Ch+var_14], ebp
jnz	short loc_10061FFF
cmp	[esp+3Ch+var_4], ebp
jz	short loc_1006202E
			
mov	eax, [ebx+10h]
cmp	eax, ebp
jz	short loc_1006202E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006202B
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
mov	[ebx+10h], ebp
			
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_proces_21 
mov	[esp+30h+var_C], 36h
pop	esi
test	ecx, ecx
jz	short loc_100620A6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_100620A6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+20h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_proces_17 
mov	[esp+38h+var_C], 36h
test	edi, edi
jz	short loc_10062171
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10062171
mov	eax, [edi+24h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10062153
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10062153
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+24h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_proces_18 
mov	[esp+38h+var_C], 36h
test	edi, edi
jz	short loc_10062241
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10062241
mov	eax, [edi+34h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10062223
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10062223
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+34h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_process_8 
mov	[esp+34h+var_C], 36h
test	edi, edi
jnz	short loc_100622C9
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+34h]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_10062304
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100622FD
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+34h], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10062338
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10062338
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_1006235C
			
push	esi
push	edi
mov	[edi+34h], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1006235C
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_process_9 
mov	[esp+38h+var_C], 36h
test	eax, eax
jz	loc_1006246A
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_1006246A
cmp	dword ptr [eax+28h], 0
mov	edi, [esp+38h+arg_8]
lea	esi, [eax+28h]
jnz	short loc_10062405
push	edi
push	esi
call	sub_100755D0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10062405
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+40h+var_10], eax
lea	eax, [esp+40h+var_2C]
push	36h
push	eax
mov	[esp+48h+var_1C], 3EEh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esi]
test	eax, eax
jz	short loc_1006244D
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1006244D
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	36h
push	eax
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esi]
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	36h
push	eax
mov	[ebx], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
xor	ebp, ebp
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_proces_10 
mov	[esp+3Ch+var_C], 36h
cmp	ebx, ebp
jnz	short loc_100624FF
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	eax, [ebx+28h]
mov	esi, [esp+3Ch+arg_8]
cmp	eax, ebp
jz	short loc_10062532
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006252F
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
mov	[ebx+28h], ebp
mov	edi, [esp+3Ch+arg_4]
cmp	edi, ebp
jz	short loc_10062565
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10062565
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
mov	eax, [esp+48h+var_28]
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
jmp	short loc_10062589
			
push	esi
push	ebx
mov	[ebx+28h], edi
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10062589
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 2D0h
			
cmp	[esp+3Ch+var_18], ebp
jnz	short loc_1006259F
cmp	eax, ebp
jnz	short loc_1006259F
cmp	[esp+3Ch+var_14], ebp
jnz	short loc_1006259F
cmp	[esp+3Ch+var_4], ebp
jz	short loc_100625CE
			
mov	eax, [ebx+28h]
cmp	eax, ebp
jz	short loc_100625CE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebp
jz	short loc_100625CB
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebp
mov	[ebx+28h], ebp
			
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_proces_19 
mov	[esp+38h+var_C], 36h
test	edi, edi
jz	short loc_10062691
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10062691
mov	eax, [edi+38h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10062673
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10062673
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+38h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_proces_23 
mov	[esp+30h+var_C], 36h
pop	esi
test	ecx, ecx
jz	short loc_10062716
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10062716
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+18h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_proces_11 
mov	[esp+34h+var_C], 36h
test	eax, eax
jnz	short loc_10062799
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_8]
mov	edx, [esp+34h+arg_4]
push	esi
push	eax
mov	[eax+18h], edx
call	sub_10095BC0
add	esp, 8
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_100627C5
mov	eax, [eax+4]
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_1C], 2D0h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	36h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_proces_24 
mov	[esp+30h+var_C], 36h
pop	esi
test	ecx, ecx
jz	short loc_10062836
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10062836
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+1Ch]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_proces_12 
mov	[esp+34h+var_C], 36h
test	eax, eax
jnz	short loc_100628B9
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_8]
mov	edx, [esp+34h+arg_4]
push	esi
push	eax
mov	[eax+1Ch], edx
call	sub_10095BC0
add	esp, 8
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_100628E5
mov	eax, [eax+4]
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_1C], 2D0h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	36h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_proces_22 
mov	[esp+30h+var_C], 36h
pop	esi
test	ecx, ecx
jz	short loc_10062956
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10062956
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+14h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	36h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_proces_13 
mov	[esp+34h+var_C], 36h
test	eax, eax
jnz	short loc_100629D9
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_8]
mov	edx, [esp+34h+arg_4]
push	esi
push	eax
mov	[eax+14h], edx
call	sub_10095BC0
add	esp, 8
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10062A05
mov	eax, [eax+4]
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_1C], 2D0h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	36h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_proces_16 
mov	[esp+38h+var_C], 36h
test	edi, edi
jz	short loc_10062AC1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10062AC1
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10062AA3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10062AA3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+4]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	36h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 54h
push	ebx
xor	ebx, ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	edi, [esp+64h+arg_0]
mov	[esp+64h+var_3C], ebx
mov	[esp+64h+var_30], ebx
mov	[esp+64h+var_54], ebx
mov	[esp+64h+var_50], ebx
mov	[esp+64h+var_4C], ebx
mov	[esp+64h+var_48], ebx
mov	[esp+64h+var_38], ebx
mov	[esp+64h+var_34], ebx
mov	[esp+64h+var_44], ebx
mov	[esp+64h+var_40], ebx
mov	[esp+64h+var_2C], offset aPkix_proces_30 
mov	[esp+64h+var_C], 36h
cmp	edi, ebx
jz	loc_1006301B
mov	ebp, [esp+64h+arg_4]
cmp	ebp, ebx
jz	loc_1006301B
mov	esi, [esp+64h+arg_8]
push	esi
push	30h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062B85
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 305h
jmp	loc_10062E4C
push	esi		
lea	ecx, [esp+68h+var_3C]
push	ecx		
push	ebx		
push	offset aTrustAnchorsBe 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062BB6
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 3CFh
jmp	loc_10062E4C
mov	eax, [edi]
push	esi		
cmp	eax, ebx
jz	short loc_10062BD2
lea	ecx, [esp+68h+var_54]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10062BEB
lea	edx, [esp+68h+var_54]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062C03
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], ecx
jmp	loc_10062E4C
mov	eax, [edi+0Ch]
push	esi		
cmp	eax, ebx
jz	short loc_10062C20
lea	ecx, [esp+68h+var_50]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10062C39
lea	edx, [esp+68h+var_50]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062C51
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], ecx
jmp	loc_10062E4C
mov	eax, [edi+8]
push	esi		
cmp	eax, ebx
jz	short loc_10062C6E
lea	ecx, [esp+68h+var_4C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10062C87
lea	edx, [esp+68h+var_4C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062C9F
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], ecx
jmp	loc_10062E4C
mov	eax, [edi+10h]
push	esi		
cmp	eax, ebx
jz	short loc_10062CBC
lea	ecx, [esp+68h+var_48]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10062CD5
lea	edx, [esp+68h+var_48]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062CED
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], ecx
jmp	loc_10062E4C
mov	eax, offset aTrue 
cmp	[edi+20h], ebx
jnz	short loc_10062CFC
mov	eax, offset aFalse 
push	esi		
lea	ecx, [esp+68h+var_38]
push	ecx		
push	ebx		
push	eax		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062D29
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 3CFh
jmp	loc_10062E4C
push	esi
lea	eax, [esp+68h+var_34]
push	eax
push	edi
call	sub_10062380
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062D54
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 36Ch
jmp	loc_10062E4C
mov	eax, [esp+64h+var_34]
push	esi		
cmp	eax, ebx
jz	short loc_10062D72
lea	edx, [esp+68h+var_44]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10062D8B
lea	eax, [esp+68h+var_44]
push	eax		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062DA3
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], ecx
jmp	loc_10062E4C
mov	eax, [edi+38h]
push	esi		
cmp	eax, ebx
jz	short loc_10062DC0
lea	ecx, [esp+68h+var_40]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10062DD9
lea	edx, [esp+68h+var_40]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062DEE
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], ecx
jmp	short loc_10062E4C
mov	ecx, [edi+30h]
mov	edx, [edi+2Ch]
mov	eax, [esp+64h+var_40]
push	ecx
mov	ecx, [esp+68h+var_44]
push	edx
mov	edx, [esp+6Ch+var_38]
push	eax
mov	eax, [esp+70h+var_48]
push	ecx
mov	ecx, [esp+74h+var_4C]
push	edx
mov	edx, [esp+78h+var_50]
push	eax
mov	eax, [esp+7Ch+var_54]
push	ecx
mov	ecx, [esp+80h+var_3C]
push	edx
push	eax
push	ecx
lea	edx, [esp+8Ch+var_30]
push	esi
push	edx
call	sub_10098590
add	esp, 30h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10062E45
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 3CDh
jmp	short loc_10062E4C
mov	ecx, [esp+64h+var_30]
mov	[ebp+0], ecx
			
mov	eax, [esp+64h+var_3C]
cmp	eax, ebx
jz	short loc_10062E7D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062E79
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_3C], ebx
mov	eax, [esp+64h+var_54]
cmp	eax, ebx
jz	short loc_10062EAE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062EAA
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_54], ebx
mov	eax, [esp+64h+var_50]
cmp	eax, ebx
jz	short loc_10062EDF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062EDB
push	esi
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_50], ebx
mov	eax, [esp+64h+var_4C]
cmp	eax, ebx
jz	short loc_10062F10
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062F0C
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_4C], ebx
mov	eax, [esp+64h+var_48]
cmp	eax, ebx
jz	short loc_10062F41
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062F3D
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_48], ebx
mov	eax, [esp+64h+var_38]
cmp	eax, ebx
jz	short loc_10062F72
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062F6E
push	esi
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_38], ebx
mov	eax, [esp+64h+var_34]
cmp	eax, ebx
jz	short loc_10062F9F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062F9F
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
			
mov	eax, [esp+64h+var_44]
cmp	eax, ebx
jz	short loc_10062FD0
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062FCC
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_44], ebx
mov	eax, [esp+64h+var_40]
cmp	eax, ebx
jz	short loc_10063001
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10062FFD
push	esi
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_40], ebx
push	esi
push	1
lea	edx, [esp+6Ch+var_2C]
push	36h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 54h
retn
			
mov	eax, [esp+64h+arg_8]
push	eax
push	1
lea	ecx, [esp+6Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 54h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB8E0
push	1
mov	[esp+60h+var_50], offset aProcessingpara 
mov	[esp+60h+var_48], 48h
mov	[esp+60h+var_44], offset sub_100607A0
mov	[esp+60h+var_40], offset sub_100609F0
mov	[esp+60h+var_3C], offset sub_10060DA0
mov	[esp+60h+var_38], offset sub_10062AF0
mov	[esp+60h+var_30], offset sub_10061030
rep movsd
lea	ecx, [esp+60h+var_2C]
push	36h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_proces_25 
mov	[esp+68h+var_C], 36h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_validat_2 
mov	[esp+34h+var_C], 43h
test	edi, edi
jnz	short loc_10063149
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	39h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10063172
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 30Fh
jmp	short loc_100631DE
mov	eax, [edi]
test	eax, eax
jz	short loc_100631A7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100631A1
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
mov	eax, [edi+4]
test	eax, eax
jz	short loc_100631DE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100631D7
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	43h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_2C], offset aPkix_validat_3 
mov	[esp+40h+var_C], 43h
test	edi, edi
jz	loc_10063396
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_10063396
mov	ebp, [esp+40h+arg_8]
test	ebp, ebp
jz	loc_10063396
mov	esi, [esp+40h+arg_C]
push	esi
push	39h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1006328C
mov	eax, [eax+4]
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	43h
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 1F1h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	esi
lea	ecx, [esp+44h+var_30]
push	ecx
push	ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100632CC
mov	edx, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], edx
lea	edx, [esp+48h+var_2C]
push	43h
push	edx
mov	[esp+50h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+var_30], 39h
mov	dword ptr [ebp+0], 0
jnz	loc_1006337C
mov	ecx, [ebx]
mov	edx, [edi]
push	esi
lea	eax, [esp+44h+arg_0]
push	eax
push	ecx
push	edx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10063323
mov	eax, [eax+4]
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	43h
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2CBh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+arg_0], 0
jz	short loc_1006337C
mov	edx, [ebx+4]
mov	eax, [edi+4]
push	esi
lea	ecx, [esp+44h+arg_0]
push	ecx
push	edx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10063371
mov	ecx, [eax+4]
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	43h
push	edx
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 2CBh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+40h+arg_0]
test	eax, eax
jz	short loc_1006337C
mov	[ebp+0], eax
			
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	43h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_validat_4 
mov	[esp+40h+var_C], 43h
test	esi, esi
jz	loc_100634E4
mov	ebp, [esp+40h+arg_4]
test	ebp, ebp
jz	loc_100634E4
mov	edi, [esp+40h+arg_8]
push	edi
push	39h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1006345E
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	43h
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 30Fh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	edx, [esi]
push	edi
lea	ecx, [esp+44h+var_34]
push	ecx
push	edx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1006349F
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	43h
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	edx, [esi+4]
push	edi
lea	ecx, [esp+44h+var_30]
push	ecx
push	edx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_10063477
mov	eax, [esp+40h+var_34]
mov	ecx, eax
shl	ecx, 5
push	edi
sub	ecx, eax
add	ecx, [esp+44h+var_30]
push	1
lea	edx, [esp+48h+var_2C]
push	43h
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_2C], offset aPkix_validat_5 
mov	[esp+4Ch+var_C], 43h
cmp	edi, ebx
jz	loc_1006370D
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_1006370D
mov	esi, [esp+4Ch+arg_8]
push	esi
push	39h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006359D
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 30Fh
jmp	loc_10063660
push	esi		
lea	ecx, [esp+50h+var_3C]
push	ecx		
push	ebx		
push	offset aProcessingPara 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100635CE
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CFh
jmp	loc_10063660
mov	ecx, [edi]
push	esi
lea	eax, [esp+50h+var_38]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100635F8
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 316h
jmp	short loc_10063660
mov	ecx, [edi+4]
push	esi
lea	eax, [esp+50h+var_34]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10063623
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 316h
jmp	short loc_10063660
mov	eax, [esp+4Ch+var_34]
mov	ecx, [esp+4Ch+var_38]
mov	edx, [esp+4Ch+var_3C]
push	eax
push	ecx
push	edx
lea	eax, [esp+58h+var_30]
push	esi
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10063659
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 3CDh
jmp	short loc_10063660
mov	edx, [esp+4Ch+var_30]
mov	[ebp+0], edx
			
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_10063691
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006368D
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_100636C2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100636BE
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_100636F3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100636EF
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
push	esi
push	1
lea	eax, [esp+54h+var_2C]
push	43h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	ecx, [esp+4Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BBA24
push	1
mov	[esp+60h+var_50], offset aValidateparams 
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_100630F0
mov	[esp+60h+var_40], offset sub_10063200
mov	[esp+60h+var_3C], offset sub_100633D0
mov	[esp+60h+var_38], offset sub_10063520
rep movsd
lea	ecx, [esp+60h+var_2C]
push	43h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_validatep 
mov	[esp+68h+var_C], 43h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_resourc_3 
mov	[esp+38h+var_C], 38h
cmp	esi, ebx
jnz	short loc_1006382D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	32h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10063856
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 307h
jmp	short loc_10063864
mov	[esi], ebx
mov	[esi+4], ebx
mov	[esi+8], ebx
mov	[esi+0Ch], ebx
mov	[esi+10h], ebx
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	38h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_resourc_4 
mov	[esp+38h+var_C], 38h
test	esi, esi
jz	loc_10063976
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_10063976
mov	ebp, [esp+38h+arg_8]
test	ebp, ebp
jz	loc_10063976
push	ebx
mov	ebx, [esp+3Ch+arg_C]
push	ebx
push	32h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100638F4
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 1EEh
jmp	short loc_1006395C
push	ebx
lea	ecx, [esp+40h+arg_0]
push	ecx
push	edi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1006391C
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 152h
jmp	short loc_1006395C
cmp	[esp+3Ch+arg_0], 32h
mov	dword ptr [ebp+0], 0
jnz	short loc_1006395C
mov	eax, [esi]
cmp	eax, [edi]
jnz	short loc_10063957
mov	ecx, [esi+4]
cmp	ecx, [edi+4]
jnz	short loc_10063957
mov	edx, [esi+8]
cmp	edx, [edi+8]
jnz	short loc_10063957
mov	eax, [esi+0Ch]
cmp	eax, [edi+0Ch]
jnz	short loc_10063957
mov	ecx, [esi+10h]
cmp	ecx, [edi+10h]
jnz	short loc_10063957
mov	eax, 1
jmp	short loc_10063959
			
xor	eax, eax
mov	[ebp+0], eax
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	38h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_resourc_5 
mov	[esp+38h+var_C], 38h
test	esi, esi
jz	loc_10063A63
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10063A63
mov	edi, [esp+38h+arg_8]
push	edi
push	32h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10063A2A
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+40h+var_10], eax
lea	eax, [esp+40h+var_2C]
push	38h
push	eax
mov	[esp+48h+var_1C], 307h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	ecx, [esi+0Ch]
mov	edx, [esi+8]
lea	eax, [edx+ecx*2]
mov	ecx, [esi+4]
lea	edx, [ecx+eax*2]
mov	eax, [esi]
mov	ecx, eax
shl	ecx, 5
sub	ecx, eax
push	edi
lea	edx, [ecx+edx*2]
add	edx, [esi+10h]
push	1
lea	eax, [esp+40h+var_2C]
push	38h
push	eax
mov	[ebx], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
xor	ebx, ebx
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_2C], offset aPkix_resourc_6 
mov	[esp+44h+var_C], 38h
cmp	edi, ebx
jz	loc_10063BB9
mov	ebp, [esp+44h+arg_4]
cmp	ebp, ebx
jz	loc_10063BB9
mov	esi, [esp+44h+arg_8]
push	esi
push	32h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10063B02
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 307h
jmp	short loc_10063B6E
push	esi		
lea	ecx, [esp+48h+var_34]
push	ecx		
push	ebx		
push	offset aMaxtimeDMaxfan 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10063B30
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 3CFh
jmp	short loc_10063B6E
mov	eax, [edi+8]
mov	ecx, [edi+4]
mov	edx, [edi]
push	eax
mov	eax, [esp+48h+var_34]
push	ecx
push	edx
push	eax
lea	ecx, [esp+54h+var_30]
push	esi
push	ecx
call	sub_10098590
add	esp, 18h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10063B67
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 3CDh
jmp	short loc_10063B6E
mov	eax, [esp+44h+var_30]
mov	[ebp+0], eax
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_10063B9F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10063B9B
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_34], ebx
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	38h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB928
push	1
mov	[esp+60h+var_50], offset aResourcelimits 
mov	[esp+60h+var_48], 14h
mov	[esp+60h+var_44], offset sub_100637D0
mov	[esp+60h+var_40], offset sub_10063880
mov	[esp+60h+var_3C], offset sub_100639B0
mov	[esp+60h+var_38], offset sub_10063A90
rep movsd
lea	ecx, [esp+60h+var_2C]
push	38h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_resourc_2 
mov	[esp+68h+var_C], 38h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_resourc_1 
mov	[esp+30h+var_C], 38h
pop	esi
test	ecx, ecx
jz	short loc_10063CD5
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10063CD5
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	38h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_resourcel 
mov	[esp+30h+var_C], 38h
pop	esi
test	ecx, ecx
jz	short loc_10063D56
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10063D56
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+4]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	38h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_resourc_0 
mov	[esp+30h+var_C], 38h
pop	esi
test	ecx, ecx
jz	short loc_10063DD6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10063DD6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+8]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	38h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_buildre_3 
mov	[esp+34h+var_C], 4
test	edi, edi
jnz	short loc_10063E59
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	3
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10063E82
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2E1h
jmp	short loc_10063EEE
mov	eax, [edi]
test	eax, eax
jz	short loc_10063EB7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10063EB1
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
mov	eax, [edi+4]
test	eax, eax
jz	short loc_10063EEE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10063EE7
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	4
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_2C], offset aPkix_buildre_4 
mov	[esp+40h+var_C], 4
test	edi, edi
jz	loc_100640A6
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_100640A6
mov	ebp, [esp+40h+arg_8]
test	ebp, ebp
jz	loc_100640A6
mov	esi, [esp+40h+arg_C]
push	esi
push	3
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10063F9C
mov	eax, [eax+4]
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	4
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 1DAh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	esi
lea	ecx, [esp+44h+var_30]
push	ecx
push	ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10063FDC
mov	edx, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], edx
lea	edx, [esp+48h+var_2C]
push	4
push	edx
mov	[esp+50h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+var_30], 3
mov	dword ptr [ebp+0], 0
jnz	loc_1006408C
mov	ecx, [ebx]
mov	edx, [edi]
push	esi
lea	eax, [esp+44h+arg_0]
push	eax
push	ecx
push	edx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10064033
mov	eax, [eax+4]
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	4
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2CBh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+arg_0], 0
jz	short loc_1006408C
mov	edx, [ebx+4]
mov	eax, [edi+4]
push	esi
lea	ecx, [esp+44h+arg_0]
push	ecx
push	edx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10064081
mov	ecx, [eax+4]
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	4
push	edx
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 2CBh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+40h+arg_0]
test	eax, eax
jz	short loc_1006408C
mov	[ebp+0], eax
			
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	4
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_buildre_5 
mov	[esp+40h+var_C], 4
test	esi, esi
jz	loc_100641FB
mov	ebp, [esp+40h+arg_4]
test	ebp, ebp
jz	loc_100641FB
mov	edi, [esp+40h+arg_8]
push	edi
push	3
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1006416E
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	4
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2E1h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	edx, [esi]
push	edi
lea	ecx, [esp+44h+var_34]
push	ecx
push	edx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100641AF
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	4
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	edx, [esi+4]
push	edi
lea	ecx, [esp+44h+var_30]
push	ecx
push	edx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_10064187
mov	ecx, [esp+40h+var_34]
mov	eax, ecx
shl	eax, 5
sub	eax, ecx
add	eax, [esp+40h+var_30]
push	edi
mov	ecx, eax
push	1
shl	ecx, 5
lea	edx, [esp+48h+var_2C]
sub	ecx, eax
push	4
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 3Ch
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_0]
mov	[esp+48h+var_3C], ebp
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_2C], offset aPkix_buildre_6 
mov	[esp+48h+var_C], 4
cmp	edi, ebp
jz	loc_1006441E
cmp	[esp+48h+arg_4], ebp
jz	loc_1006441E
mov	esi, [esp+48h+arg_8]
push	esi
push	3
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_100642AA
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2E1h
jmp	loc_10064372
push	ebx
mov	ebx, [edi]
push	esi		
lea	ecx, [esp+50h+var_3C]
push	ecx		
push	ebp		
push	offset aValidateresu_0 
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_100642DE
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CFh
jmp	loc_10064371
push	esi
lea	eax, [esp+50h+var_38]
push	eax
push	ebx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10064306
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 316h
jmp	short loc_10064371
mov	edi, [edi+4]
push	esi
lea	edx, [esp+50h+var_34]
push	edx
push	edi
call	sub_100962D0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10064331
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 316h
jmp	short loc_10064371
mov	ecx, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_38]
mov	eax, [esp+4Ch+var_3C]
push	ecx
push	edx
push	eax
lea	ecx, [esp+58h+var_30]
push	esi
push	ecx
call	sub_10098590
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10064367
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CDh
jmp	short loc_10064371
mov	eax, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+arg_4]
mov	[ecx], eax
			
pop	ebx
mov	eax, [esp+48h+var_3C]
cmp	eax, ebp
jz	short loc_100643A3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1006439F
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_3C], ebp
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_100643D4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_100643D0
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_10064405
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10064401
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_34], ebp
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	4
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
			
mov	eax, [esp+48h+arg_8]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB28C
push	1
mov	[esp+60h+var_50], offset aBuildresult 
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_10063E00
mov	[esp+60h+var_40], offset sub_10063F10
mov	[esp+60h+var_3C], offset sub_100640E0
mov	[esp+60h+var_38], offset sub_10064230
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	4
push	ecx
mov	[esp+68h+var_2C], offset aPkix_buildre_2 
mov	[esp+68h+var_C], 4
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_buildre_1 
mov	[esp+40h+var_C], 4
cmp	edi, ebp
jz	loc_1006463D
mov	ebx, [esp+40h+arg_4]
cmp	ebx, ebp
jz	loc_1006463D
cmp	[esp+40h+arg_8], ebp
jz	loc_1006463D
mov	esi, [esp+40h+arg_C]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	8
push	3
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1006456E
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 124h
jmp	short loc_10064593
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	esi
cmp	eax, ebp
jz	short loc_100645DE
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_100645C4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_100645C0
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
			
mov	[esp+40h+var_30], ebp
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	4
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+44h+var_30]
push	ebx
mov	[eax], edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	esi
cmp	eax, ebp
jz	short loc_100645FE
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	short loc_10064587
mov	edx, [esp+44h+var_30]
mov	[edx+4], ebx
mov	eax, [esp+44h+var_30]
mov	ecx, [eax+4]
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10064631
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 28Dh
jmp	loc_10064593
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_8]
mov	[ecx], eax
jmp	short loc_100645C0
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_buildresu 
mov	[esp+38h+var_C], 4
test	edi, edi
jz	short loc_1006470F
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1006470F
mov	eax, [edi]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_100646F2
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_100646F2
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	4
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	4
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_buildre_0 
mov	[esp+38h+var_C], 4
test	edi, edi
jz	short loc_100647E1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100647E1
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_100647C3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_100647C3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	4
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+4]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	4
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_policyn_1 
mov	[esp+38h+var_C], 0Eh
test	edi, edi
jz	short loc_100648B1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100648B1
mov	eax, [edi+14h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10064893
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10064893
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Eh
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+14h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Eh
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_policynod 
mov	[esp+40h+var_C], 0Eh
cmp	edi, ebx
jz	loc_10064AA1
mov	ebp, [esp+40h+arg_C]
cmp	ebp, ebx
jz	loc_10064AA1
cmp	[esp+40h+arg_10], ebx
jz	loc_10064AA1
mov	esi, [esp+40h+arg_14]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	1Ch
push	0Dh
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1006495E
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 144h
jmp	short loc_10064983
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100649CE
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
			
call	sub_10078030
mov	[esp+4Ch+var_24], ebx
add	esp, 0Ch
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_100649B4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100649B0
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	0Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+40h+var_30]
mov	[eax], edi
mov	edi, [esp+40h+arg_4]
cmp	edi, ebx
jz	short loc_100649F7
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100649F7
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	short loc_10064977
			
mov	edx, [esp+40h+var_30]
mov	[edx+4], edi
cmp	edi, ebx
jz	short loc_10064A28
push	esi
push	edi
call	sub_10075700
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10064A28
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 28Dh
jmp	loc_10064983
			
mov	ecx, [esp+40h+arg_8]
mov	edx, [esp+40h+var_30]
push	esi
push	ebp
mov	[edx+8], ecx
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	esi
cmp	eax, ebx
jz	short loc_10064A51
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
jmp	loc_10064977
mov	ecx, [esp+44h+var_30]
push	ebp
mov	[ecx+0Ch], ebp
call	sub_10075700
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10064A7D
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 28Dh
jmp	loc_10064983
mov	eax, [esp+40h+var_30]
mov	[eax+10h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+14h], ebx
mov	edx, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_10]
mov	[edx+18h], ebx
mov	eax, [esp+40h+var_30]
mov	[ecx], eax
jmp	loc_100649B0
			
mov	ecx, [esp+40h+arg_14]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_policyn_2 
mov	[esp+38h+var_C], 0Eh
test	esi, esi
jz	loc_10064BD6
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_10064BD6
mov	eax, [esi+14h]
push	ebx
mov	ebx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], eax
test	eax, eax
jnz	short loc_10064B53
lea	eax, [esp+3Ch+var_30]
push	ebx
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10064B4C
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 27Dh
jmp	short loc_10064BBD
mov	eax, [esp+3Ch+var_30]
mov	[esi+14h], eax
mov	[edi+10h], esi
mov	edx, [esi+18h]
push	ebx
inc	edx
push	edi
push	eax
mov	[edi+18h], edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10064B81
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 11Fh
jmp	short loc_10064BBD
push	ebx
push	esi
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10064B9C
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
jmp	short loc_10064BB5
push	ebx
push	edi
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10064BBD
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 2D0h
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	0Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
			
sub	esp, 3Ch
push	ebx
mov	ebx, [esp+40h+arg_0]
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_30], ebp
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_2C], offset aPkix_policyn_3 
mov	[esp+4Ch+var_C], 0Eh
cmp	ebx, ebp
jz	loc_10064E42
cmp	[esp+4Ch+arg_8], ebp
jz	loc_10064E42
mov	ecx, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_C]
cmp	ecx, ebp
jz	loc_10064DED
mov	eax, [ebx+14h]
cmp	eax, ebp
jnz	short loc_10064C83
mov	[esp+4Ch+var_34], 1
jmp	loc_10064DED
cmp	ecx, 1
jbe	loc_10064D64
push	esi
lea	ecx, [esp+50h+var_38]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10064CB3
mov	edx, [eax+4]
mov	[esp+4Ch+var_1C], 284h
jmp	loc_10064DE9
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebp
jbe	loc_10064D64
lea	edi, [eax-1]
mov	ecx, [ebx+14h]
push	esi
lea	eax, [esp+50h+var_3C]
push	eax
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10064D8F
mov	eax, [esp+4Ch+arg_4]
mov	ecx, [esp+4Ch+var_3C]
push	esi
lea	edx, [esp+50h+var_30]
push	edx
dec	eax
push	eax
push	ecx
call	sub_10064C10
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10064D9C
cmp	[esp+4Ch+var_30], 1
jnz	short loc_10064D27
mov	edx, [ebx+14h]
push	esi
push	edi
push	edx
call	sub_10076100
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10064DAD
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_10064D58
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10064D54
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
dec	edi
lea	ecx, [edi+1]
test	ecx, ecx
jnz	loc_10064CC2
			
mov	eax, [ebx+14h]
push	esi
lea	edx, [esp+50h+var_38]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10064DBE
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 284h
jmp	short loc_10064DED
mov	edx, [eax+4]
mov	[esp+4Ch+var_1C], 283h
jmp	short loc_10064DE9
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 354h
jmp	short loc_10064DED
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 27Fh
jmp	short loc_10064DED
cmp	[esp+4Ch+var_38], ebp
jnz	short loc_10064DCC
mov	[esp+4Ch+var_34], 1
push	esi
push	ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10064DED
mov	edx, [eax+4]
mov	[esp+4Ch+var_1C], 2D0h
			
mov	[esp+4Ch+var_10], edx
			
mov	eax, [esp+4Ch+var_34]
mov	ecx, [esp+4Ch+arg_8]
mov	[ecx], eax
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_10064E28
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10064E24
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
push	esi
push	1
lea	eax, [esp+54h+var_2C]
push	0Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	ecx, [esp+4Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
sub	esp, 44h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	edi, [esp+54h+arg_0]
mov	[esp+54h+var_40], ebx
mov	[esp+54h+var_3C], ebx
mov	[esp+54h+var_44], ebx
mov	[esp+54h+var_38], ebx
mov	[esp+54h+var_34], ebx
mov	[esp+54h+var_30], ebx
mov	[esp+54h+var_2C], offset aPkix_singlepol 
mov	[esp+54h+var_C], 0Eh
cmp	edi, ebx
jz	loc_1006516F
mov	ebp, [esp+54h+arg_4]
cmp	ebp, ebx
jz	loc_1006516F
cmp	[edi], ebx
jz	loc_1006515F
cmp	[edi+0Ch], ebx
jz	loc_1006515F
mov	esi, [esp+54h+arg_8]
push	esi		
lea	eax, [esp+58h+var_40]
push	eax		
push	ebx		
push	offset aSSSSD	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10064F0F
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 48h
jmp	loc_10065050
mov	eax, [edi]
push	esi
lea	edx, [esp+58h+var_3C]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10064F3C
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 335h
jmp	loc_10065050
mov	eax, [edi+0Ch]
push	esi
lea	edx, [esp+58h+var_34]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10064F6A
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 28Fh
jmp	loc_10065050
mov	eax, [edi+4]
push	esi		
cmp	eax, ebx
jz	short loc_10064F9C
lea	edx, [esp+58h+var_44]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10064FCC
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 28Fh
jmp	loc_10065050
lea	ecx, [esp+58h+var_44]
push	ecx		
push	ebx		
push	offset asc_100AA82C 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10064FCC
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 48h
jmp	loc_10065050
			
mov	eax, offset aCritical_0	
cmp	[edi+8], ebx
jnz	short loc_10064FDB
mov	eax, offset aNotCritical 
push	esi		
lea	ecx, [esp+58h+var_38]
push	ecx		
push	ebx		
push	eax		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10065005
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 48h
jmp	short loc_10065050
mov	eax, [edi+18h]
mov	ecx, [esp+54h+var_34]
mov	edx, [esp+54h+var_38]
push	eax
mov	eax, [esp+58h+var_44]
push	ecx
mov	ecx, [esp+5Ch+var_3C]
push	edx
mov	edx, [esp+60h+var_40]
push	eax
push	ecx
push	edx
lea	eax, [esp+6Ch+var_30]
push	esi
push	eax
call	sub_10098590
add	esp, 20h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10065049
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 3CDh
jmp	short loc_10065050
mov	edx, [esp+54h+var_30]
mov	[ebp+0], edx
			
mov	eax, [esp+54h+var_40]
cmp	eax, ebx
jz	short loc_10065081
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1006507D
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_40], ebx
mov	eax, [esp+54h+var_3C]
cmp	eax, ebx
jz	short loc_100650B2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100650AE
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_3C], ebx
mov	eax, [esp+54h+var_44]
cmp	eax, ebx
jz	short loc_100650E3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100650DF
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_44], ebx
mov	eax, [esp+54h+var_38]
cmp	eax, ebx
jz	short loc_10065114
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_10065110
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_38], ebx
mov	eax, [esp+54h+var_34]
cmp	eax, ebx
jz	short loc_10065145
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_10065141
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_34], ebx
push	esi
push	1
lea	edx, [esp+5Ch+var_2C]
push	0Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
			
mov	eax, [esp+54h+arg_8]
push	eax
push	1
push	1Fh
lea	ecx, [esp+60h+var_2C]
push	ecx
jmp	short loc_1006517D
			
mov	edx, [esp+54h+arg_8]
push	edx
push	1
push	1Fh
lea	eax, [esp+60h+var_2C]
push	eax
mov	[esp+64h+var_1C], 2BCh
mov	[esp+64h+var_18], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
			
sub	esp, 50h
mov	eax, [esp+50h+arg_0]
push	ebx
xor	ebx, ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_30], ebx
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], ebx
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_2C], offset aPkix_policyn_5 
mov	[esp+5Ch+var_C], 0Eh
cmp	eax, ebx
jz	loc_100656F8
cmp	[esp+5Ch+arg_8], ebx
jz	loc_100656F8
mov	esi, [esp+5Ch+arg_C]
push	ebp
push	esi
lea	ecx, [esp+64h+var_50]
push	ecx
push	eax
call	sub_10064E70
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10065236
mov	edx, [eax+4]
mov	ebp, [esp+60h+var_50]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 1B1h
jmp	loc_1006553D
mov	edi, [esp+60h+arg_4]
push	esi		
cmp	edi, ebx
jz	short loc_100652A4
lea	eax, [esp+64h+var_4C]
push	eax		
push	ebx		
push	offset aSS	
push	ebx		
call	sub_10097D90
mov	ebp, [esp+74h+var_50]
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10065273
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Fh
jmp	loc_1006553D
mov	edx, [esp+60h+var_4C]
push	ebp
push	edi
push	edx
lea	eax, [esp+6Ch+var_40]
push	esi
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_100652EE
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 1B3h
jmp	loc_1006553D
lea	edx, [esp+64h+var_4C]
push	edx		
push	ebx		
push	offset dword_100A23E0 
push	ebx		
call	sub_10097D90
mov	ebp, [esp+74h+var_50]
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_100652D8
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Fh
jmp	loc_1006553D
mov	edx, [esp+60h+var_4C]
push	ebp
push	edx
lea	eax, [esp+68h+var_40]
push	esi
push	eax
call	sub_10098590
add	esp, 10h
jmp	short loc_10065288
cmp	ebp, ebx
jz	short loc_1006531B
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_10065317
push	esi
push	eax
lea	edx, [esp+68h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
mov	eax, [esp+60h+var_28]
mov	ecx, [esp+60h+arg_0]
mov	ecx, [ecx+14h]
mov	ebp, [esp+60h+var_40]
cmp	ecx, ebx
jz	short loc_10065355
push	esi
lea	edx, [esp+64h+var_38]
push	edx
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10065355
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 284h
jmp	loc_1006553D
			
cmp	[esp+60h+var_38], ebx
jz	loc_10065537
push	esi		
cmp	edi, ebx
jz	loc_100653E9
lea	edx, [esp+64h+var_34]
push	edx		
push	ebx		
push	offset aS_	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10065398
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Fh
jmp	loc_1006553D
mov	edx, [esp+60h+var_34]
push	edi
push	edx
lea	eax, [esp+68h+var_3C]
push	esi
push	eax
call	sub_10098590
add	esp, 10h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jnz	loc_10065290
push	esi		
lea	edx, [esp+64h+var_30]
push	edx		
push	ebx		
push	offset aSS_3	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10065419
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Fh
jmp	loc_1006553D
lea	edx, [esp+64h+var_3C]
push	edx		
push	ebx		
push	offset a_	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_100653B8
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 1A0h
jmp	loc_1006553D
xor	edi, edi
cmp	[esp+60h+var_38], ebx
jbe	loc_10065537
mov	eax, [esp+60h+arg_0]
mov	ecx, [eax+14h]
push	esi
lea	edx, [esp+64h+var_44]
push	edx
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jnz	loc_100656BC
mov	eax, [esp+60h+var_3C]
mov	ecx, [esp+60h+var_44]
push	esi
lea	edx, [esp+64h+var_48]
push	edx
push	eax
push	ecx
call	sub_100651A0
add	esp, 10h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jnz	loc_100656D0
mov	edx, [esp+60h+var_48]
mov	eax, [esp+60h+var_30]
push	edx
push	ebp
push	eax
lea	ecx, [esp+6Ch+var_40]
push	esi
push	ecx
call	sub_10098590
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jnz	loc_100656E4
mov	ecx, [esp+60h+var_44]
cmp	ecx, ebx
jz	short loc_100654C6
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_100654BE
push	esi
push	eax
lea	edx, [esp+68h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
mov	eax, [esp+60h+var_28]
mov	[esp+60h+var_44], ebx
mov	ecx, [esp+60h+var_48]
cmp	ecx, ebx
jz	short loc_100654FB
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_100654F3
push	esi
push	eax
lea	eax, [esp+68h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
mov	eax, [esp+60h+var_28]
mov	[esp+60h+var_48], ebx
cmp	ebp, ebx
jz	short loc_10065528
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_10065524
push	esi
push	eax
lea	ecx, [esp+68h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
mov	eax, [esp+60h+var_28]
mov	ebp, [esp+60h+var_40]
inc	edi
cmp	edi, [esp+60h+var_38]
jb	loc_10065425
			
mov	ecx, [esp+60h+arg_8]
mov	[ecx], ebp
			
cmp	[esp+60h+var_18], ebx
jnz	short loc_10065553
cmp	eax, ebx
jnz	short loc_10065553
cmp	[esp+60h+var_14], ebx
jnz	short loc_10065553
cmp	[esp+60h+var_4], ebx
jz	short loc_1006557C
			
cmp	ebp, ebx
jz	short loc_1006557C
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_1006557C
push	esi
push	eax
lea	edx, [esp+68h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
			
mov	eax, [esp+60h+var_34]
pop	ebp
cmp	eax, ebx
jz	short loc_100655AE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100655AA
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_34], ebx
mov	eax, [esp+5Ch+var_4C]
cmp	eax, ebx
jz	short loc_100655DF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100655DB
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_4C], ebx
mov	eax, [esp+5Ch+var_30]
cmp	eax, ebx
jz	short loc_10065610
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006560C
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_30], ebx
mov	eax, [esp+5Ch+var_3C]
cmp	eax, ebx
jz	short loc_10065641
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006563D
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_3C], ebx
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	short loc_10065672
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006566E
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_44]
cmp	eax, ebx
jz	short loc_100656A3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006569F
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_44], ebx
push	esi
push	1
lea	eax, [esp+64h+var_2C]
push	0Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 50h
retn
mov	edx, [eax+4]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 283h
jmp	loc_1006553D
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Eh
jmp	loc_1006553D
mov	edx, [eax+4]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 1B3h
jmp	loc_1006553D
			
mov	ecx, [esp+5Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+64h+var_2C]
push	1Fh
push	edx
mov	[esp+6Ch+var_18], 1
mov	[esp+6Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_policyn_4 
mov	[esp+3Ch+var_C], 0Eh
test	esi, esi
jz	loc_10065816
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_10065816
mov	edi, [esp+3Ch+arg_8]
push	edi
push	0Dh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100657B6
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	0Eh
push	ecx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 304h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
push	edi
lea	ecx, [esp+40h+var_30]
push	ecx
push	0
push	esi
call	sub_100651A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100657F7
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	0Eh
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 1A3h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	0Eh
push	ecx
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_policyn_6 
mov	[esp+38h+var_C], 0Eh
cmp	edi, ebx
jnz	short loc_100658AD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	0Dh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_100658D9
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 304h
jmp	loc_1006599C
mov	eax, [edi]
mov	[edi+8], ebx
cmp	eax, ebx
jz	short loc_10065909
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10065907
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10065938
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10065935
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_10065967
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10065964
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+0Ch], ebx
mov	eax, [edi+14h]
cmp	eax, ebx
jz	short loc_10065996
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10065993
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+14h], ebx
mov	[edi+10h], ebx
mov	[edi+18h], ebx
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	0Eh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 34h
push	ebp
mov	ebp, [esp+38h+arg_4]
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], edx
mov	[esp+40h+var_34], edx
mov	[esp+40h+var_2C], offset aPkix_singlep_0 
mov	[esp+40h+var_C], 0Eh
cmp	ebx, edx
jz	loc_10065B5B
mov	esi, [esp+40h+arg_0]
cmp	esi, edx
jz	loc_10065B5B
cmp	[ebx], edx
jz	loc_10065B4F
cmp	[ebx+0Ch], edx
jz	loc_10065B4F
mov	eax, [ebx+4]
cmp	eax, edx
jz	short loc_10065A5F
push	ebp
lea	ecx, [esp+44h+var_34]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10065A63
mov	edx, [eax+4]
push	ebp
push	1
mov	[esp+48h+var_10], edx
lea	edx, [esp+48h+var_2C]
push	0Eh
push	edx
mov	[esp+50h+var_1C], 1C8h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
xor	eax, eax
jmp	short loc_10065A67
mov	eax, [esp+40h+var_34]
cmp	dword ptr [ebx+8], 1
jnz	short loc_10065A80
mov	ecx, eax
shl	ecx, 5
sub	ecx, eax
add	ecx, 0FFh
mov	[esp+40h+var_34], ecx
jmp	short loc_10065A8B
mov	edx, eax
shl	edx, 5
sub	edx, eax
mov	[esp+40h+var_34], edx
mov	ecx, [ebx]
push	ebp
lea	eax, [esp+44h+var_30]
push	eax
push	ecx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10065ACC
mov	edx, [eax+4]
push	ebp
push	1
mov	[esp+48h+var_10], edx
lea	edx, [esp+48h+var_2C]
push	0Eh
push	edx
mov	[esp+50h+var_1C], 1C9h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	eax, [esp+40h+var_34]
mov	ecx, eax
shl	ecx, 5
sub	ecx, eax
add	ecx, [esp+40h+var_30]
mov	eax, [ebx+0Ch]
push	ebp
lea	edx, [esp+44h+var_30]
push	edx
push	eax
mov	[esp+4Ch+var_34], ecx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10065B21
mov	ecx, [eax+4]
push	ebp
push	1
lea	edx, [esp+48h+var_2C]
push	0Eh
push	edx
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 1C7h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	ecx, [esp+40h+var_34]
mov	eax, ecx
shl	eax, 5
push	ebp
sub	eax, ecx
add	eax, [esp+44h+var_30]
push	1
lea	edx, [esp+48h+var_2C]
push	0Eh
push	edx
mov	[esp+50h+var_34], eax
mov	[esi], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
push	ebp
push	1
push	1Fh
lea	eax, [esp+4Ch+var_2C]
push	eax
jmp	short loc_10065B65
			
push	ebp
push	1
push	1Fh
lea	ecx, [esp+4Ch+var_2C]
push	ecx
mov	[esp+50h+var_1C], 2BCh
mov	[esp+50h+var_18], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 34h
push	ebx
mov	ebx, [esp+38h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_policyn_7 
mov	[esp+40h+var_C], 0Eh
test	ebx, ebx
jz	loc_10065CE1
cmp	[esp+40h+arg_4], 0
jz	loc_10065CE1
mov	edi, [esp+40h+arg_8]
push	edi
push	0Dh
push	ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10065C1D
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 304h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
lea	ecx, [esp+40h+var_30]
push	edi
push	ecx
call	sub_100659C0
add	esp, 8
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10065C5B
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 3B9h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	eax, [esp+40h+var_30]
mov	esi, eax
shl	esi, 5
sub	esi, eax
add	esi, [ebx+10h]
mov	ebx, [ebx+14h]
test	ebx, ebx
jz	short loc_10065CAF
push	edi
lea	eax, [esp+44h+var_34]
push	eax
push	ebx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10065CB7
mov	ecx, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], ecx
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[esp+50h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	[esp+40h+var_34], 0
mov	eax, [esp+40h+arg_4]
mov	edx, esi
shl	edx, 5
push	edi
sub	edx, esi
add	edx, [esp+44h+var_34]
push	1
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[eax], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], edx
mov	[esp+3Ch+var_2C], offset aPkix_singlep_1 
mov	[esp+3Ch+var_C], 0Eh
cmp	ebx, edx
jz	loc_10065E78
cmp	ebp, edx
jz	loc_10065E78
cmp	[esp+3Ch+arg_4], edx
jz	loc_10065E78
lea	edi, [edx+1]
cmp	ebx, ebp
jnz	short loc_10065D8B
mov	[esp+3Ch+var_30], edi
			
mov	esi, [esp+3Ch+arg_8]
			
mov	ecx, [esp+3Ch+var_30]
mov	edx, [esp+3Ch+arg_4]
push	esi
push	edi
lea	eax, [esp+44h+var_2C]
push	0Eh
push	eax
mov	[edx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [ebx+8]
cmp	eax, [ebp+8]
jnz	short loc_10065D65
mov	ecx, [ebx+18h]
cmp	ecx, [ebp+18h]
jnz	short loc_10065D65
mov	eax, [ebx+4]
cmp	eax, edx
jz	short loc_10065DDA
mov	ecx, [ebp+4]
cmp	ecx, edx
jz	short loc_10065DD6
mov	esi, [esp+3Ch+arg_8]
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10065DF2
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 2CBh
jmp	short loc_10065D69
cmp	eax, edx
jnz	short loc_10065DE9
cmp	[ebp+4], edx
jnz	short loc_10065DE9
mov	esi, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], edi
jmp	short loc_10065DFD
			
mov	[esp+3Ch+var_30], edx
jmp	loc_10065D65
cmp	[esp+3Ch+var_30], 0
jz	loc_10065D69
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_10065E6D
mov	eax, [ebp+0]
test	eax, eax
jz	short loc_10065E6D
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jnz	short loc_10065DC5
cmp	[esp+3Ch+var_30], eax
jz	loc_10065D69
mov	ecx, [ebx+0Ch]
test	ecx, ecx
jz	short loc_10065E6A
mov	eax, [ebp+0Ch]
test	eax, eax
jz	short loc_10065E6A
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	loc_10065D69
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 2CDh
jmp	loc_10065D69
			
push	esi
jmp	short loc_10065E82
			
push	esi
push	edi
push	1Fh
lea	edx, [esp+48h+var_2C]
push	edx
jmp	short loc_10065E8A
			
mov	eax, [esp+3Ch+arg_8]
mov	edi, 1
push	eax
push	edi
push	1Fh
lea	ecx, [esp+48h+var_2C]
push	ecx
mov	[esp+4Ch+var_18], edi
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
mov	ebx, [esp+34h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_policyn_8 
mov	[esp+40h+var_C], 0Eh
test	ebx, ebx
jz	loc_1006608B
mov	edi, [esp+40h+arg_4]
test	edi, edi
jz	loc_1006608B
mov	ebp, [esp+40h+arg_8]
test	ebp, ebp
jz	loc_1006608B
mov	esi, [esp+40h+arg_C]
push	esi
push	0Dh
push	ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10065F4B
mov	eax, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], eax
mov	eax, [esp+48h+var_30]
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[esp+50h+var_1C], 1EBh
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	ebx, edi
jnz	short loc_10065F78
push	esi
push	1
mov	[esp+48h+var_30], 1
mov	eax, [esp+48h+var_30]
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	esi
lea	ecx, [esp+44h+arg_0]
push	ecx
push	edi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10065F9F
mov	edx, [eax+4]
mov	[esp+40h+var_1C], 152h
jmp	loc_10066066
cmp	[esp+40h+arg_0], 0Dh
jnz	loc_1006606A
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_10066004
mov	ecx, [edi+14h]
test	ecx, ecx
jz	short loc_10066000
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1006603D
mov	eax, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], eax
mov	eax, [esp+48h+var_30]
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[esp+50h+var_1C], 2CCh
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
test	eax, eax
jnz	short loc_10066014
cmp	dword ptr [edi+14h], 0
jnz	short loc_10066014
mov	[esp+40h+var_30], 1
jmp	short loc_10066044
			
push	esi
push	1
mov	[esp+48h+var_30], 0
mov	eax, [esp+48h+var_30]
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+var_30], 0
jz	short loc_1006606A
push	esi
lea	ecx, [esp+44h+var_30]
push	ecx
push	edi
call	sub_10065D10
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1006606A
mov	edx, [eax+4]
mov	[esp+40h+var_1C], 3B8h
mov	[esp+40h+var_10], edx
			
mov	eax, [esp+40h+var_30]
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	0Eh
push	ecx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+40h+arg_C]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 38h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_2C], offset aPkix_policy_17 
mov	[esp+44h+var_C], 0Eh
cmp	edi, ebp
jz	loc_100662DD
mov	ecx, [edi]
cmp	ecx, ebp
jz	loc_100662DD
mov	eax, [edi+0Ch]
cmp	eax, ebp
jz	loc_100662DD
mov	esi, [esp+44h+arg_C]
push	ebx
push	esi
lea	edx, [esp+4Ch+var_34]
push	edx
mov	edx, [edi+4]
push	eax
mov	eax, [edi+8]
push	eax
push	edx
push	ecx
call	sub_100648E0
add	esp, 18h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	loc_100661C5
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 34Bh
			
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_1006617A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1006617A
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
mov	eax, [esp+48h+var_38]
pop	ebx
cmp	eax, ebp
jz	short loc_100661AC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_100661A8
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_38], ebp
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	0Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
mov	eax, [esp+48h+arg_4]
cmp	eax, ebp
jz	short loc_100661F8
mov	ecx, [esp+48h+var_34]
push	esi
push	ecx
push	eax
call	sub_10064AD0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_100661F8
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 34Ah
jmp	loc_1006614D
			
mov	edi, [edi+14h]
cmp	edi, ebp
jz	short loc_1006622A
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
push	edi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1006622A
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 284h
jmp	loc_1006614D
			
xor	ebx, ebx
cmp	[esp+48h+var_30], ebp
jbe	short loc_1006629E
push	esi
lea	edx, [esp+4Ch+var_38]
push	edx
push	ebx
push	edi
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_100662B5
mov	eax, [esp+48h+var_34]
mov	ecx, [esp+48h+var_38]
push	esi
push	ebp
push	eax
push	ecx
call	sub_100660C0
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_100662C9
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_10066297
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10066293
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
inc	ebx
cmp	ebx, [esp+48h+var_30]
jb	short loc_10066232
mov	eax, [esp+48h+arg_8]
cmp	eax, ebp
jz	loc_1006614D
mov	edx, [esp+48h+var_34]
mov	[eax], edx
jmp	loc_1006617A
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 283h
jmp	loc_1006614D
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 34Ch
jmp	loc_1006614D
			
mov	eax, [esp+44h+arg_C]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 64h
push	ebp
mov	ebp, [esp+68h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+70h+var_2C]
rep movsd
mov	[esp+70h+var_5C], 0
mov	[esp+70h+var_2C], offset aPkix_policyn_9 
mov	[esp+70h+var_C], 0Eh
test	ebp, ebp
jz	loc_100665C6
cmp	[esp+70h+arg_4], 0
jz	loc_100665C6
push	ebx
mov	ebx, [esp+74h+arg_8]
push	ebx
push	0Dh
push	ebp
call	sub_10072630
xor	edx, edx
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edx
jz	short loc_10066387
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 304h
jmp	loc_100665AC
mov	eax, [ebp+0]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+74h+var_58]
rep movsd
mov	[esp+74h+var_60], edx
mov	[esp+74h+var_64], edx
mov	[esp+74h+arg_0], edx
mov	[esp+74h+var_58], offset aPkix_policy_17 
mov	[esp+74h+var_38], 0Eh
cmp	eax, edx
jz	loc_10066565
mov	ecx, [ebp+0Ch]
cmp	ecx, edx
jz	loc_10066565
push	ebx
lea	edx, [esp+78h+var_64]
push	edx
mov	edx, [ebp+4]
push	ecx
mov	ecx, [ebp+8]
push	ecx
push	edx
push	eax
call	sub_100648E0
xor	edi, edi
add	esp, 18h
mov	[esp+74h+var_54], eax
cmp	eax, edi
jz	loc_10066473
mov	eax, [eax+4]
mov	[esp+74h+var_3C], eax
mov	[esp+74h+var_48], 34Bh
			
mov	eax, [esp+74h+var_64]
cmp	eax, edi
jz	short loc_1006642B
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_50], eax
cmp	eax, edi
jz	short loc_1006642B
push	ebx
push	eax
lea	edx, [esp+7Ch+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_50], edi
			
mov	eax, [esp+74h+arg_0]
			
cmp	eax, edi
jz	short loc_1006645C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_50], eax
cmp	eax, edi
jz	short loc_10066458
push	ebx
push	eax
lea	eax, [esp+7Ch+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_50], edi
mov	[esp+74h+arg_0], edi
push	ebx
push	1
lea	ecx, [esp+7Ch+var_58]
push	0Eh
push	ecx
call	sub_100781E0
add	esp, 10h
jmp	loc_10066589
mov	ebp, [ebp+14h]
cmp	ebp, edi
jz	short loc_100664A5
push	ebx
lea	ecx, [esp+78h+var_60]
push	ecx
push	ebp
call	sub_100757C0
add	esp, 0Ch
mov	[esp+74h+var_54], eax
cmp	eax, edi
jz	short loc_100664A5
mov	edx, [eax+4]
mov	[esp+74h+var_3C], edx
mov	[esp+74h+var_48], 284h
jmp	loc_100663FE
			
xor	esi, esi
cmp	[esp+74h+var_60], edi
jbe	loc_10066554
push	ebx
lea	eax, [esp+78h+arg_0]
push	eax
push	esi
push	ebp
call	sub_10075D80
add	esp, 10h
mov	[esp+74h+var_54], eax
cmp	eax, edi
jnz	short loc_1006652C
mov	ecx, [esp+74h+var_64]
mov	edx, [esp+74h+arg_0]
push	ebx
push	edi
push	ecx
push	edx
call	sub_100660C0
add	esp, 10h
mov	[esp+74h+var_54], eax
cmp	eax, edi
jnz	short loc_10066540
mov	eax, [esp+74h+arg_0]
cmp	eax, edi
jz	short loc_10066518
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_50], eax
cmp	eax, edi
jz	short loc_10066512
push	ebx
push	eax
lea	eax, [esp+7Ch+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_50], edi
xor	eax, eax
mov	[esp+74h+arg_0], eax
inc	esi
cmp	esi, [esp+74h+var_60]
jb	short loc_100664B1
mov	ecx, [esp+74h+var_64]
mov	[esp+74h+var_5C], ecx
jmp	loc_1006642F
mov	ecx, [eax+4]
mov	[esp+74h+var_3C], ecx
mov	[esp+74h+var_48], 283h
jmp	loc_100663FE
mov	edx, [eax+4]
mov	[esp+74h+var_3C], edx
mov	[esp+74h+var_48], 34Ch
jmp	loc_100663FE
mov	ecx, [esp+74h+var_64]
mov	eax, [esp+74h+arg_0]
mov	[esp+74h+var_5C], ecx
jmp	loc_1006642F
			
push	ebx
push	1
lea	edx, [esp+7Ch+var_58]
push	1Fh
push	edx
mov	[esp+84h+var_44], 1
mov	[esp+84h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
xor	edi, edi
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_100665A2
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 34Ch
jmp	short loc_100665AC
mov	ecx, [esp+74h+arg_4]
mov	edx, [esp+74h+var_5C]
mov	[ecx], edx
			
push	ebx
push	1
lea	eax, [esp+7Ch+var_2C]
push	0Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 64h
retn
			
mov	ecx, [esp+70h+arg_8]
push	ecx
push	1
lea	edx, [esp+78h+var_2C]
push	1Fh
push	edx
mov	[esp+80h+var_18], 1
mov	[esp+80h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 64h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB3F4
push	1
mov	[esp+60h+var_50], offset aPolicynode 
mov	[esp+60h+var_48], 1Ch
mov	[esp+60h+var_44], offset sub_10065850
mov	[esp+60h+var_40], offset sub_10065EB0
mov	[esp+60h+var_3C], offset sub_10065B90
mov	[esp+60h+var_38], offset sub_10065730
mov	[esp+60h+var_30], offset sub_10066310
rep movsd
lea	ecx, [esp+60h+var_2C]
push	0Eh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_policyn_0 
mov	[esp+68h+var_C], 0Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_policy_18 
mov	[esp+38h+var_C], 0Eh
test	edi, edi
jz	short loc_10066741
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10066741
mov	eax, [edi+10h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10066723
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10066723
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Eh
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+10h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Eh
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_policy_19 
mov	[esp+38h+var_C], 0Eh
test	edi, edi
jz	short loc_1006680F
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1006680F
mov	eax, [edi]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_100667F2
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_100667F2
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Eh
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Eh
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_policy_20 
mov	[esp+3Ch+var_C], 0Eh
test	edi, edi
jz	loc_1006697A
mov	ebp, [esp+3Ch+arg_4]
test	ebp, ebp
jz	loc_1006697A
mov	eax, [edi+4]
mov	esi, [esp+3Ch+arg_8]
test	eax, eax
jz	short loc_100668D3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_100668D3
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	0Eh
push	edx
mov	[esp+4Ch+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	eax, [edi+4]
mov	[esp+3Ch+var_30], eax
test	eax, eax
jnz	short loc_10066920
lea	ecx, [esp+3Ch+var_30]
push	esi
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1006691C
mov	edx, [eax+4]
push	esi
push	1
mov	[esp+44h+var_10], edx
lea	edx, [esp+44h+var_2C]
push	0Eh
push	edx
mov	[esp+4Ch+var_1C], 27Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
push	esi
push	eax
call	sub_10075700
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1006695A
mov	eax, [eax+4]
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	0Eh
push	edx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 28Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	ecx, [esp+3Ch+var_30]
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	0Eh
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_policy_21 
mov	[esp+38h+var_C], 0Eh
test	edi, edi
jz	short loc_10066A51
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10066A51
mov	eax, [edi+0Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10066A33
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10066A33
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Eh
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+0Ch]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Eh
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_policy_22 
mov	[esp+30h+var_C], 0Eh
pop	esi
test	ecx, ecx
jz	short loc_10066AD6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10066AD6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+8]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	0Eh
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_policy_23 
mov	[esp+30h+var_C], 0Eh
pop	esi
test	ecx, ecx
jz	short loc_10066B56
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10066B56
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+18h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	0Eh
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_validat_6 
mov	[esp+38h+var_C], 44h
cmp	edi, ebx
jnz	short loc_10066BDD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	3Ah
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10066C09
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 310h
jmp	loc_10066C94
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10066C38
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10066C35
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_10066C65
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10066C63
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10066C94
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10066C91
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
			
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	44h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_2C], offset aPkix_validat_7 
mov	[esp+3Ch+var_C], 44h
test	esi, esi
jz	loc_10066E34
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_10066E34
mov	ebx, [esp+3Ch+arg_8]
test	ebx, ebx
jz	loc_10066E34
push	ebp
mov	ebp, [esp+40h+arg_C]
push	ebp
push	3Ah
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10066D27
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 1F2h
jmp	loc_10066E1A
push	ebp
lea	ecx, [esp+44h+var_30]
push	ecx
push	edi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10066D52
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 152h
jmp	loc_10066E1A
cmp	[esp+40h+var_30], 3Ah
mov	dword ptr [ebx], 0
jnz	loc_10066E1A
mov	ecx, [edi]
mov	edx, [esi]
push	ebp
lea	eax, [esp+44h+arg_0]
push	eax
push	ecx
push	edx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_10066DAF
cmp	[esp+40h+arg_0], eax
jz	loc_10066E1A
mov	eax, [esi+4]
mov	ecx, [edi+4]
test	eax, eax
jz	short loc_10066DC0
test	ecx, ecx
jz	short loc_10066DC0
push	ebp
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10066DCB
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	short loc_10066E1A
			
xor	edx, edx
cmp	eax, ecx
setz	dl
mov	[esp+40h+arg_0], edx
cmp	[esp+40h+arg_0], 0
jz	short loc_10066E1A
mov	eax, [esi+8]
mov	ecx, [edi+8]
test	eax, eax
jz	short loc_10066E09
test	ecx, ecx
jz	short loc_10066E09
push	ebp
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10066E14
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2CBh
jmp	short loc_10066E1A
			
xor	edx, edx
cmp	eax, ecx
setz	dl
mov	[esp+40h+arg_0], edx
mov	eax, [esp+40h+arg_0]
mov	[ebx], eax
			
push	ebp
push	1
lea	ecx, [esp+48h+var_2C]
push	44h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_C]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 38h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_0]
mov	[esp+44h+var_38], 0
mov	[esp+44h+var_34], 0
mov	[esp+44h+var_30], 0
mov	[esp+44h+var_2C], offset aPkix_validat_8 
mov	[esp+44h+var_C], 44h
test	esi, esi
jz	loc_10067009
mov	ebp, [esp+44h+arg_4]
test	ebp, ebp
jz	loc_10067009
mov	edi, [esp+44h+arg_8]
push	edi
push	3Ah
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_10066F06
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+4Ch+var_10], eax
lea	eax, [esp+4Ch+var_2C]
push	44h
push	eax
mov	[esp+54h+var_1C], 310h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
mov	edx, [esi]
push	edi
lea	ecx, [esp+48h+var_38]
push	ecx
push	edx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_10066F47
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+4Ch+var_10], eax
lea	eax, [esp+4Ch+var_2C]
push	44h
push	eax
mov	[esp+54h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10066F8D
push	edi
lea	ecx, [esp+48h+var_34]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_10066F8D
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+4Ch+var_2C]
push	44h
push	eax
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
mov	esi, [esi+8]
test	esi, esi
jz	short loc_10066FD3
push	edi
lea	eax, [esp+48h+var_30]
push	eax
push	esi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_10066FD3
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+4Ch+var_2C]
push	44h
push	eax
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
mov	ecx, [esp+44h+var_38]
mov	eax, ecx
shl	eax, 5
sub	eax, ecx
add	eax, [esp+44h+var_34]
push	edi
mov	edx, eax
shl	edx, 5
sub	edx, eax
add	edx, [esp+48h+var_30]
push	1
lea	eax, [esp+4Ch+var_2C]
push	44h
push	eax
mov	[ebp+0], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
mov	ecx, [esp+44h+arg_8]
push	ecx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 40h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	edi, [esp+50h+arg_0]
mov	[esp+50h+var_38], ebx
mov	[esp+50h+var_30], ebx
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_34], ebx
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_2C], offset aPkix_validat_9 
mov	[esp+50h+var_C], 44h
cmp	edi, ebx
jz	loc_100672FD
mov	ebp, [esp+50h+arg_4]
cmp	ebp, ebx
jz	loc_100672FD
mov	esi, [esp+50h+arg_8]
push	esi
push	3Ah
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100670C1
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 310h
jmp	loc_1006721F
push	esi		
lea	ecx, [esp+54h+var_38]
push	ecx		
push	ebx		
push	offset aTrustanchorSPu 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100670F2
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 3CFh
jmp	loc_1006721F
mov	eax, [edi+4]
push	esi		
cmp	eax, ebx
jz	short loc_10067124
lea	ecx, [esp+54h+var_40]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10067154
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 316h
jmp	loc_1006721F
lea	eax, [esp+54h+var_40]
push	eax		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10067154
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 3CFh
jmp	loc_1006721F
			
mov	eax, [edi]
push	esi
lea	edx, [esp+54h+var_34]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10067181
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 316h
jmp	loc_1006721F
mov	edi, [edi+8]
push	esi		
cmp	edi, ebx
jz	short loc_100671B0
lea	ecx, [esp+54h+var_3C]
push	ecx
push	edi
call	sub_100962D0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100671DD
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 316h
jmp	short loc_1006721F
lea	eax, [esp+54h+var_3C]
push	eax		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100671DD
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 3CFh
jmp	short loc_1006721F
			
mov	edx, [esp+50h+var_3C]
mov	eax, [esp+50h+var_34]
mov	ecx, [esp+50h+var_40]
push	edx
mov	edx, [esp+54h+var_38]
push	eax
push	ecx
push	edx
lea	eax, [esp+60h+var_30]
push	esi
push	eax
call	sub_10098590
add	esp, 18h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10067218
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 3CDh
jmp	short loc_1006721F
mov	edx, [esp+50h+var_30]
mov	[ebp+0], edx
			
mov	eax, [esp+50h+var_38]
cmp	eax, ebx
jz	short loc_10067250
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1006724C
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_38], ebx
mov	eax, [esp+50h+var_40]
cmp	eax, ebx
jz	short loc_10067281
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1006727D
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_40], ebx
mov	eax, [esp+50h+var_34]
cmp	eax, ebx
jz	short loc_100672B2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_100672AE
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_34], ebx
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_100672E3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_100672DF
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_3C], ebx
push	esi
push	1
lea	ecx, [esp+58h+var_2C]
push	44h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	edx, [esp+50h+arg_8]
push	edx
push	1
lea	eax, [esp+58h+var_2C]
push	1Fh
push	eax
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BBA48
push	1
mov	[esp+60h+var_50], offset aValidateresult 
mov	[esp+60h+var_48], 0Ch
mov	[esp+60h+var_44], offset sub_10066B80
mov	[esp+60h+var_40], offset sub_10066CB0
mov	[esp+60h+var_3C], offset sub_10066E70
mov	[esp+60h+var_38], offset sub_10067040
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	44h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_validat_1 
mov	[esp+68h+var_C], 44h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_validat_0 
mov	[esp+40h+var_C], 44h
cmp	edi, ebx
jz	loc_1006751D
mov	ebp, [esp+40h+arg_C]
cmp	ebp, ebx
jz	loc_1006751D
mov	esi, [esp+40h+arg_10]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	0Ch
push	3Ah
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10067444
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 14Dh
jmp	short loc_10067469
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100674B4
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
			
call	sub_10078030
mov	[esp+4Ch+var_24], ebx
add	esp, 0Ch
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1006749A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10067496
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	44h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+40h+var_30]
mov	[eax], edi
mov	edi, [esp+40h+arg_4]
cmp	edi, ebx
jz	short loc_100674DD
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100674DD
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	short loc_1006745D
			
mov	edx, [esp+40h+var_30]
mov	[edx+4], edi
mov	edi, [esp+40h+arg_8]
cmp	edi, ebx
jz	short loc_1006750A
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1006750A
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
jmp	loc_1006745D
			
mov	ecx, [esp+40h+var_30]
mov	[ecx+8], edi
mov	edx, [esp+40h+var_30]
mov	[ebp+0], edx
jmp	loc_10067496
			
mov	edx, [esp+40h+arg_10]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_validater 
mov	[esp+38h+var_C], 44h
test	edi, edi
jz	short loc_100675F1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100675F1
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_100675D3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_100675D3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	44h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+4]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	44h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_verifynod 
mov	[esp+40h+var_C], 45h
cmp	edi, ebx
jz	loc_1006774F
mov	ebp, [esp+40h+arg_C]
cmp	ebp, ebx
jz	loc_1006774F
mov	esi, [esp+40h+arg_10]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	10h
push	3Bh
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10067694
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 14Eh
jmp	short loc_100676B9
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10067704
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_100676EA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100676E6
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	45h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+40h+var_30]
mov	[eax], edi
mov	edi, [esp+40h+arg_8]
cmp	edi, ebx
jz	short loc_1006772D
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1006772D
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	short loc_100676AD
			
mov	edx, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_4]
mov	[edx+0Ch], edi
mov	eax, [esp+40h+var_30]
mov	[eax+8], ecx
mov	edx, [esp+40h+var_30]
mov	[edx+4], ebx
mov	eax, [esp+40h+var_30]
mov	[ebp+0], eax
jmp	short loc_100676E6
			
mov	eax, [esp+40h+arg_10]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 38h
push	ebx
mov	ebx, [esp+3Ch+arg_0]
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_2C], offset aPkix_verifyn_0 
mov	[esp+48h+var_C], 45h
cmp	ebx, ebp
jz	loc_10067992
mov	edi, [esp+48h+arg_4]
cmp	edi, ebp
jz	loc_10067992
mov	eax, [ebx+4]
mov	esi, [esp+48h+arg_8]
mov	[esp+48h+var_38], eax
cmp	eax, ebp
jnz	loc_100678D6
mov	eax, [edi+8]
dec	eax
cmp	[ebx+8], eax
jz	short loc_10067818
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10067806
push	esi
push	2
push	45h
push	ebp
push	2A8h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2A8h
jmp	short loc_1006788B
lea	ecx, [esp+48h+var_38]
push	esi
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1006783F
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 27Dh
jmp	short loc_1006788B
mov	eax, [esp+48h+var_38]
push	esi
push	edi
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_10067863
mov	ecx, [eax+4]
mov	[esp+48h+var_1C], 120h
jmp	short loc_10067887
mov	edx, [esp+48h+var_38]
mov	[ebx+4], edx
push	esi
push	ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1006788B
mov	ecx, [eax+4]
mov	[esp+48h+var_1C], 2D0h
			
mov	[esp+48h+var_10], ecx
			
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_100678BC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_100678B8
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_34], ebp
push	esi
push	1
lea	eax, [esp+50h+var_2C]
push	45h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
push	esi
lea	ecx, [esp+4Ch+var_30]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_100678FE
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 284h
jmp	short loc_1006788B
cmp	[esp+48h+var_30], 1
jz	short loc_10067937
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10067922
mov	ecx, [esp+48h+var_C]
push	esi
push	2
push	ecx
push	ebp
push	0Ah
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 0Ah
jmp	loc_1006788B
mov	eax, [esp+48h+var_38]
push	esi
lea	edx, [esp+4Ch+var_34]
push	edx
push	ebp
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_10067963
mov	ecx, [eax+4]
mov	[esp+48h+var_1C], 283h
jmp	loc_10067887
mov	edx, [esp+48h+var_34]
push	esi
push	edi
push	edx
call	sub_10067780
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	loc_1006786A
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 422h
jmp	loc_1006788B
			
mov	ecx, [esp+48h+arg_8]
push	ecx
push	1
lea	edx, [esp+50h+var_2C]
push	1Fh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
sub	esp, 34h
mov	eax, [esp+34h+arg_0]
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_34], ebx
mov	[esp+40h+var_2C], offset aPkix_verifyn_3 
mov	[esp+40h+var_C], 45h
cmp	eax, ebx
jnz	short loc_10067A25
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	esi, [esp+40h+arg_8]
push	ebp
push	esi
lea	edx, [esp+48h+var_30]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10067A55
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 284h
jmp	loc_10067B06
xor	edi, edi
cmp	[esp+44h+var_30], ebx
jbe	loc_10067B06
mov	ebp, [esp+44h+arg_4]
mov	edx, [esp+44h+arg_0]
push	esi
lea	ecx, [esp+48h+var_34]
push	ecx
push	edi
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	short loc_10067AE6
mov	eax, [esp+44h+var_34]
mov	[eax+8], ebp
mov	eax, [esp+44h+var_34]
cmp	[eax+4], ebx
jz	short loc_10067AAE
mov	edx, [eax+4]
push	esi
lea	ecx, [ebp+1]
push	ecx
push	edx
call	sub_100679C0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	short loc_10067AF7
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_10067ADD
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10067AD7
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
xor	eax, eax
mov	[esp+44h+var_34], eax
inc	edi
cmp	edi, [esp+44h+var_30]
jb	short loc_10067A65
jmp	short loc_10067B0A
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 283h
jmp	short loc_10067B06
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 427h
			
mov	eax, [esp+44h+var_34]
pop	ebp
cmp	eax, ebx
jz	short loc_10067B38
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10067B34
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_34], ebx
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	45h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
			
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_verifyn_2 
mov	[esp+38h+var_C], 45h
test	esi, esi
jz	loc_10067C59
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_10067C59
mov	eax, [esi+4]
push	ebx
mov	ebx, [esp+3Ch+arg_8]
push	ebp
mov	ebp, [esi+8]
mov	[esp+40h+var_30], eax
test	eax, eax
jnz	short loc_10067BE7
lea	eax, [esp+40h+var_30]
push	ebx
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10067BE0
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 27Dh
jmp	short loc_10067C3F
mov	edx, [esp+40h+var_30]
mov	[esi+4], edx
inc	ebp
push	ebx
mov	[edi+8], ebp
mov	eax, [esi+4]
push	edi
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10067C12
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 120h
jmp	short loc_10067C3F
mov	eax, [edi+4]
test	eax, eax
jz	short loc_10067C3F
mov	edx, [edi+8]
push	ebx
inc	edx
push	edx
push	eax
call	sub_100679C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10067C3F
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 427h
			
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	45h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 48h
push	ebx
push	ebp
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+58h+var_2C]
rep movsd
mov	edi, [esp+58h+arg_0]
mov	[esp+58h+var_3C], ebx
mov	[esp+58h+var_48], ebx
mov	[esp+58h+var_30], ebx
mov	[esp+58h+var_38], ebx
mov	[esp+58h+var_34], ebx
mov	[esp+58h+var_44], ebx
mov	[esp+58h+var_40], ebx
mov	[esp+58h+var_2C], offset aPkix_singlever 
mov	[esp+58h+var_C], 45h
cmp	edi, ebx
jz	loc_10067FF0
mov	ebp, [esp+58h+arg_4]
cmp	ebp, ebx
jz	loc_10067FF0
cmp	[edi], ebx
jz	loc_10067FF0
mov	eax, [edi+0Ch]
mov	esi, [esp+58h+arg_8]
push	esi		
cmp	eax, ebx
jz	short loc_10067D16
lea	ecx, [esp+5Ch+var_48]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 1B6h
jmp	short loc_10067D2F
lea	edx, [esp+5Ch+var_48]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10067D47
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], ecx
jmp	loc_10067EB0
mov	edx, [edi]
push	esi
lea	ecx, [esp+5Ch+var_38]
push	ecx
push	edx
call	sub_1007DE20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10067D74
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 83h
jmp	loc_10067EB0
mov	eax, [esp+58h+var_38]
push	esi		
cmp	eax, ebx
jz	short loc_10067D92
lea	ecx, [esp+5Ch+var_44]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 436h
jmp	short loc_10067DAB
lea	edx, [esp+5Ch+var_44]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10067DC3
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], ecx
jmp	loc_10067EB0
mov	edx, [edi]
push	esi
lea	ecx, [esp+5Ch+var_34]
push	ecx
push	edx
call	sub_1007DC60
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10067DF0
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 8Dh
jmp	loc_10067EB0
mov	eax, [esp+58h+var_34]
push	esi		
cmp	eax, ebx
jz	short loc_10067E0E
lea	ecx, [esp+5Ch+var_40]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 436h
jmp	short loc_10067E27
lea	edx, [esp+5Ch+var_40]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10067E3C
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], ecx
jmp	short loc_10067EB0
push	esi		
lea	ecx, [esp+5Ch+var_3C]
push	ecx		
push	ebx		
push	offset aCertIssuerSSub 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10067E6A
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 48h
jmp	short loc_10067EB0
mov	eax, [esp+58h+var_48]
mov	ecx, [edi+8]
mov	edx, [esp+58h+var_40]
push	eax
mov	eax, [esp+5Ch+var_44]
push	ecx
mov	ecx, [esp+60h+var_3C]
push	edx
push	eax
push	ecx
lea	edx, [esp+6Ch+var_30]
push	esi
push	edx
call	sub_10098590
add	esp, 1Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10067EA9
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 3CDh
jmp	short loc_10067EB0
mov	ecx, [esp+58h+var_30]
mov	[ebp+0], ecx
			
mov	eax, [esp+58h+var_3C]
cmp	eax, ebx
jz	short loc_10067EE1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10067EDD
push	esi
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_3C], ebx
mov	eax, [esp+58h+var_48]
cmp	eax, ebx
jz	short loc_10067F12
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10067F0E
push	esi
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_48], ebx
mov	eax, [esp+58h+var_38]
cmp	eax, ebx
jz	short loc_10067F43
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10067F3F
push	esi
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_38], ebx
mov	eax, [esp+58h+var_34]
cmp	eax, ebx
jz	short loc_10067F74
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10067F70
push	esi
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_34], ebx
mov	eax, [esp+58h+var_44]
cmp	eax, ebx
jz	short loc_10067FA5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10067FA1
push	esi
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_44], ebx
mov	eax, [esp+58h+var_40]
cmp	eax, ebx
jz	short loc_10067FD6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10067FD2
push	esi
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_40], ebx
push	esi
push	1
lea	edx, [esp+60h+var_2C]
push	45h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 48h
retn
			
mov	eax, [esp+58h+arg_8]
push	eax
push	1
lea	ecx, [esp+60h+var_2C]
push	1Fh
push	ecx
mov	[esp+68h+var_18], 1
mov	[esp+68h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 48h
retn
align 10h
			
sub	esp, 50h
mov	eax, [esp+50h+arg_0]
push	ebx
xor	ebx, ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_30], ebx
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], ebx
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_2C], offset aPkix_verifyn_7 
mov	[esp+5Ch+var_C], 45h
cmp	eax, ebx
jz	loc_10068578
cmp	[esp+5Ch+arg_8], ebx
jz	loc_10068578
mov	esi, [esp+5Ch+arg_C]
push	ebp
push	esi
lea	ecx, [esp+64h+var_50]
push	ecx
push	eax
call	sub_10067C90
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_100680B6
mov	edx, [eax+4]
mov	ebp, [esp+60h+var_50]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 1B2h
jmp	loc_100683BD
mov	edi, [esp+60h+arg_4]
push	esi		
cmp	edi, ebx
jz	short loc_10068124
lea	eax, [esp+64h+var_4C]
push	eax		
push	ebx		
push	offset aSS	
push	ebx		
call	sub_10097D90
mov	ebp, [esp+74h+var_50]
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_100680F3
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Fh
jmp	loc_100683BD
mov	edx, [esp+60h+var_4C]
push	ebp
push	edi
push	edx
lea	eax, [esp+6Ch+var_40]
push	esi
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_1006816E
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 1B3h
jmp	loc_100683BD
lea	edx, [esp+64h+var_4C]
push	edx		
push	ebx		
push	offset dword_100A23E0 
push	ebx		
call	sub_10097D90
mov	ebp, [esp+74h+var_50]
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10068158
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Fh
jmp	loc_100683BD
mov	edx, [esp+60h+var_4C]
push	ebp
push	edx
lea	eax, [esp+68h+var_40]
push	esi
push	eax
call	sub_10098590
add	esp, 10h
jmp	short loc_10068108
cmp	ebp, ebx
jz	short loc_1006819B
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_10068197
push	esi
push	eax
lea	edx, [esp+68h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
mov	eax, [esp+60h+var_28]
mov	ecx, [esp+60h+arg_0]
mov	ecx, [ecx+4]
mov	ebp, [esp+60h+var_40]
cmp	ecx, ebx
jz	short loc_100681D5
push	esi
lea	edx, [esp+64h+var_38]
push	edx
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_100681D5
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 284h
jmp	loc_100683BD
			
cmp	[esp+60h+var_38], ebx
jz	loc_100683B7
push	esi		
cmp	edi, ebx
jz	loc_10068269
lea	edx, [esp+64h+var_34]
push	edx		
push	ebx		
push	offset aS_	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10068218
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Fh
jmp	loc_100683BD
mov	edx, [esp+60h+var_34]
push	edi
push	edx
lea	eax, [esp+68h+var_3C]
push	esi
push	eax
call	sub_10098590
add	esp, 10h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jnz	loc_10068110
push	esi		
lea	edx, [esp+64h+var_30]
push	edx		
push	ebx		
push	offset aSS_3	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10068299
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Fh
jmp	loc_100683BD
lea	edx, [esp+64h+var_3C]
push	edx		
push	ebx		
push	offset a_	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jz	short loc_10068238
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 1A0h
jmp	loc_100683BD
xor	edi, edi
cmp	[esp+60h+var_38], ebx
jbe	loc_100683B7
mov	eax, [esp+60h+arg_0]
mov	ecx, [eax+4]
push	esi
lea	edx, [esp+64h+var_44]
push	edx
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jnz	loc_1006853C
mov	eax, [esp+60h+var_3C]
mov	ecx, [esp+60h+var_44]
push	esi
lea	edx, [esp+64h+var_48]
push	edx
push	eax
push	ecx
call	sub_10068020
add	esp, 10h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jnz	loc_10068550
mov	edx, [esp+60h+var_48]
mov	eax, [esp+60h+var_30]
push	edx
push	ebp
push	eax
lea	ecx, [esp+6Ch+var_40]
push	esi
push	ecx
call	sub_10098590
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, ebx
jnz	loc_10068564
mov	ecx, [esp+60h+var_44]
cmp	ecx, ebx
jz	short loc_10068346
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_1006833E
push	esi
push	eax
lea	edx, [esp+68h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
mov	eax, [esp+60h+var_28]
mov	[esp+60h+var_44], ebx
mov	ecx, [esp+60h+var_48]
cmp	ecx, ebx
jz	short loc_1006837B
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_10068373
push	esi
push	eax
lea	eax, [esp+68h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
mov	eax, [esp+60h+var_28]
mov	[esp+60h+var_48], ebx
cmp	ebp, ebx
jz	short loc_100683A8
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_100683A4
push	esi
push	eax
lea	ecx, [esp+68h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
mov	eax, [esp+60h+var_28]
mov	ebp, [esp+60h+var_40]
inc	edi
cmp	edi, [esp+60h+var_38]
jb	loc_100682A5
			
mov	ecx, [esp+60h+arg_8]
mov	[ecx], ebp
			
cmp	[esp+60h+var_18], ebx
jnz	short loc_100683D3
cmp	eax, ebx
jnz	short loc_100683D3
cmp	[esp+60h+var_14], ebx
jnz	short loc_100683D3
cmp	[esp+60h+var_4], ebx
jz	short loc_100683FC
			
cmp	ebp, ebx
jz	short loc_100683FC
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, ebx
jz	short loc_100683FC
push	esi
push	eax
lea	edx, [esp+68h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], ebx
			
mov	eax, [esp+60h+var_34]
pop	ebp
cmp	eax, ebx
jz	short loc_1006842E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006842A
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_34], ebx
mov	eax, [esp+5Ch+var_4C]
cmp	eax, ebx
jz	short loc_1006845F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006845B
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_4C], ebx
mov	eax, [esp+5Ch+var_30]
cmp	eax, ebx
jz	short loc_10068490
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006848C
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_30], ebx
mov	eax, [esp+5Ch+var_3C]
cmp	eax, ebx
jz	short loc_100684C1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100684BD
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_3C], ebx
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	short loc_100684F2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100684EE
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_44]
cmp	eax, ebx
jz	short loc_10068523
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006851F
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_44], ebx
push	esi
push	1
lea	eax, [esp+64h+var_2C]
push	45h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 50h
retn
mov	edx, [eax+4]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 283h
jmp	loc_100683BD
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 19Eh
jmp	loc_100683BD
mov	edx, [eax+4]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 1B3h
jmp	loc_100683BD
			
mov	ecx, [esp+5Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+64h+var_2C]
push	1Fh
push	edx
mov	[esp+6Ch+var_18], 1
mov	[esp+6Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_verifyn_6 
mov	[esp+3Ch+var_C], 45h
test	esi, esi
jz	loc_10068696
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_10068696
mov	edi, [esp+3Ch+arg_8]
push	edi
push	3Bh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10068636
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	45h
push	ecx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 311h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
push	edi
lea	ecx, [esp+40h+var_30]
push	ecx
push	0
push	esi
call	sub_10068020
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10068677
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	45h
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 1A3h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	45h
push	ecx
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_verifyn_8 
mov	[esp+38h+var_C], 45h
cmp	edi, ebx
jnz	short loc_1006872D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	3Bh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10068759
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 311h
jmp	loc_100687E7
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_10068786
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10068784
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_100687B5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100687B2
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_100687E4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100687E1
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+0Ch], ebx
mov	[edi+8], ebx
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	45h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
sub	esp, 34h
push	ebp
mov	ebp, [esp+38h+arg_4]
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], edx
mov	[esp+40h+var_34], edx
mov	[esp+40h+var_2C], offset aPkix_singlev_0 
mov	[esp+40h+var_C], 45h
cmp	ebx, edx
jz	loc_10068901
mov	esi, [esp+40h+arg_0]
cmp	esi, edx
jz	loc_10068901
mov	eax, [ebx]
cmp	eax, edx
jz	short loc_1006888D
push	ebp
lea	ecx, [esp+44h+var_34]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10068891
mov	edx, [eax+4]
push	ebp
push	1
lea	eax, [esp+48h+var_2C]
push	45h
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 1C5h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	[esp+40h+var_34], edx
mov	ecx, [ebx+0Ch]
push	ebp
lea	eax, [esp+44h+var_30]
push	eax
push	ecx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100688D3
mov	edx, [eax+4]
push	ebp
push	1
lea	eax, [esp+48h+var_2C]
push	45h
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 1C6h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	ecx, [esp+40h+var_34]
mov	eax, ecx
shl	eax, 5
sub	eax, ecx
add	eax, [esp+40h+var_30]
push	ebp
push	1
mov	[esp+48h+var_34], eax
mov	[esi], eax
lea	eax, [esp+48h+var_2C]
push	45h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
push	ebp
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 34h
push	ebx
mov	ebx, [esp+38h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_verifyn_9 
mov	[esp+40h+var_C], 45h
test	ebx, ebx
jz	loc_10068A74
mov	edi, [esp+40h+arg_4]
test	edi, edi
jz	loc_10068A74
mov	esi, [esp+40h+arg_8]
push	esi
push	3Bh
push	ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100689BE
mov	eax, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	45h
push	eax
mov	[esp+50h+var_1C], 311h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
lea	ecx, [esp+40h+var_30]
push	esi
push	ecx
call	sub_10068800
add	esp, 8
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100689FC
mov	edx, [eax+4]
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	45h
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 3BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_10068A42
push	esi
lea	eax, [esp+44h+var_34]
push	eax
push	ebx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10068A4A
mov	ecx, [eax+4]
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	45h
push	eax
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	[esp+40h+var_34], 0
mov	eax, [esp+40h+var_30]
mov	edx, eax
shl	edx, 5
push	esi
sub	edx, eax
add	edx, [esp+44h+var_34]
push	1
lea	eax, [esp+48h+var_2C]
push	45h
push	eax
mov	[edi], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_singlev_1 
mov	[esp+3Ch+var_C], 45h
test	ebx, ebx
jz	loc_10068BD6
test	ebp, ebp
jz	loc_10068BD6
mov	esi, [esp+3Ch+arg_4]
test	esi, esi
jz	loc_10068BD6
cmp	ebx, ebp
jnz	short loc_10068B0F
mov	[esp+3Ch+var_30], 1
jmp	loc_10068BA3
mov	eax, [ebx+8]
cmp	eax, [ebp+8]
jnz	loc_10068BA3
mov	ecx, [ebx]
test	ecx, ecx
jz	loc_10068BC6
mov	eax, [ebp+0]
test	eax, eax
jz	loc_10068BC6
mov	edi, [esp+3Ch+arg_8]
push	edi
lea	edx, [esp+40h+var_30]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jnz	short loc_10068B78
cmp	[esp+3Ch+var_30], eax
jz	short loc_10068BA3
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_10068B8D
mov	ecx, [ebp+0Ch]
test	ecx, ecx
jz	short loc_10068B89
push	edi
lea	edx, [esp+40h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10068BA3
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 2CBh
jmp	short loc_10068BA3
test	eax, eax
jnz	short loc_10068B9B
cmp	dword ptr [ebp+0Ch], 0
mov	[esp+3Ch+var_30], 1
jz	short loc_10068BA3
mov	[esp+3Ch+var_30], 0
			
mov	edx, [esp+3Ch+arg_8]
mov	ecx, [esp+3Ch+var_30]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	45h
push	eax
mov	[esi], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
push	1Fh
lea	edx, [esp+48h+var_2C]
push	edx
jmp	short loc_10068BE4
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
push	1Fh
lea	ecx, [esp+48h+var_2C]
push	ecx
mov	[esp+4Ch+var_1C], 2BCh
mov	[esp+4Ch+var_18], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
mov	ebx, [esp+34h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_verify_10 
mov	[esp+40h+var_C], 45h
test	ebx, ebx
jz	loc_10068E09
mov	esi, [esp+40h+arg_4]
test	esi, esi
jz	loc_10068E09
mov	ebp, [esp+40h+arg_8]
test	ebp, ebp
jz	loc_10068E09
mov	edi, [esp+40h+arg_C]
push	edi
push	3Bh
push	ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10068CAB
mov	eax, [eax+4]
mov	ecx, [esp+40h+var_30]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	45h
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 1F3h
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	ebx, esi
jnz	short loc_10068CD8
push	edi
push	1
mov	[esp+48h+var_30], 1
mov	ecx, [esp+48h+var_30]
lea	edx, [esp+48h+var_2C]
push	45h
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	edi
lea	ecx, [esp+44h+arg_0]
push	ecx
push	esi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10068D1F
mov	edx, [eax+4]
mov	ecx, [esp+40h+var_30]
push	edi
push	1
mov	[esp+48h+var_10], edx
lea	edx, [esp+48h+var_2C]
push	45h
push	edx
mov	[esp+50h+var_1C], 152h
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+arg_0], 3Bh
jnz	loc_10068DE8
push	edi
lea	eax, [esp+44h+var_30]
push	eax
push	esi
call	sub_10068AB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10068D71
mov	ecx, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], ecx
mov	ecx, [esp+48h+var_30]
lea	edx, [esp+48h+var_2C]
push	45h
push	edx
mov	[esp+50h+var_1C], 3BBh
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+var_30], 0
jz	short loc_10068DE8
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_10068DD2
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10068DCE
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
push	ebx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10068DE8
mov	eax, [eax+4]
mov	ecx, [esp+40h+var_30]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	45h
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2CCh
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
test	ebx, ebx
jnz	short loc_10068DE0
cmp	dword ptr [esi+4], 0
mov	[esp+40h+var_30], 1
jz	short loc_10068DE8
mov	[esp+40h+var_30], 0
			
mov	ecx, [esp+40h+var_30]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	45h
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 38h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_2C], offset aPkix_verify_12 
mov	[esp+44h+var_C], 45h
cmp	edi, ebp
jz	loc_1006901E
mov	eax, [edi]
cmp	eax, ebp
jz	loc_1006901E
mov	esi, [esp+44h+arg_C]
mov	edx, [edi+0Ch]
push	ebx
push	esi
lea	ecx, [esp+4Ch+var_34]
push	ecx
mov	ecx, [edi+8]
push	edx
push	ecx
push	eax
call	sub_10067620
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	loc_10068F39
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 424h
			
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_10068EEE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10068EEE
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
mov	eax, [esp+48h+var_38]
pop	ebx
cmp	eax, ebp
jz	short loc_10068F20
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10068F1C
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_38], ebp
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	45h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
mov	edi, [edi+4]
cmp	edi, ebp
jz	short loc_10068F6B
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
push	edi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_10068F6B
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 284h
jmp	loc_10068EC1
			
xor	ebx, ebx
cmp	[esp+48h+var_30], ebp
jbe	short loc_10068FDF
push	esi
lea	edx, [esp+4Ch+var_38]
push	edx
push	ebx
push	edi
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_10068FF6
mov	eax, [esp+48h+var_34]
mov	ecx, [esp+48h+var_38]
push	esi
push	ebp
push	eax
push	ecx
call	sub_10068E40
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_1006900A
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_10068FD8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10068FD4
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
inc	ebx
cmp	ebx, [esp+48h+var_30]
jb	short loc_10068F73
mov	eax, [esp+48h+arg_8]
cmp	eax, ebp
jz	loc_10068EC1
mov	edx, [esp+48h+var_34]
mov	[eax], edx
jmp	loc_10068EEE
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 283h
jmp	loc_10068EC1
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 425h
jmp	loc_10068EC1
			
mov	eax, [esp+44h+arg_C]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 64h
push	ebp
mov	ebp, [esp+68h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+70h+var_2C]
rep movsd
mov	[esp+70h+var_5C], 0
mov	[esp+70h+var_2C], offset aPkix_verify_11 
mov	[esp+70h+var_C], 45h
test	ebp, ebp
jz	loc_100692F9
cmp	[esp+70h+arg_4], 0
jz	loc_100692F9
push	ebx
mov	ebx, [esp+74h+arg_8]
push	ebx
push	3Bh
push	ebp
call	sub_10072630
xor	edx, edx
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edx
jz	short loc_100690C7
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 311h
jmp	loc_100692DF
mov	eax, [ebp+0]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+74h+var_58]
rep movsd
mov	[esp+74h+var_60], edx
mov	[esp+74h+var_64], edx
mov	[esp+74h+arg_0], edx
mov	[esp+74h+var_58], offset aPkix_verify_12 
mov	[esp+74h+var_38], 45h
push	ebx
cmp	eax, edx
jz	loc_10069299
mov	edx, [ebp+0Ch]
lea	ecx, [esp+78h+var_64]
push	ecx
mov	ecx, [ebp+8]
push	edx
push	ecx
push	eax
call	sub_10067620
xor	edi, edi
add	esp, 14h
mov	[esp+74h+var_54], eax
cmp	eax, edi
jz	loc_100691A7
mov	edx, [eax+4]
mov	[esp+74h+var_3C], edx
mov	[esp+74h+var_48], 424h
			
mov	eax, [esp+74h+var_64]
cmp	eax, edi
jz	short loc_1006915F
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_50], eax
cmp	eax, edi
jz	short loc_1006915F
push	ebx
push	eax
lea	eax, [esp+7Ch+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_50], edi
			
mov	eax, [esp+74h+arg_0]
			
cmp	eax, edi
jz	short loc_10069190
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_50], eax
cmp	eax, edi
jz	short loc_1006918C
push	ebx
push	eax
lea	ecx, [esp+7Ch+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_50], edi
mov	[esp+74h+arg_0], edi
push	ebx
push	1
lea	edx, [esp+7Ch+var_58]
push	45h
push	edx
call	sub_100781E0
add	esp, 10h
jmp	loc_100692BC
mov	ebp, [ebp+4]
cmp	ebp, edi
jz	short loc_100691D9
push	ebx
lea	eax, [esp+78h+var_60]
push	eax
push	ebp
call	sub_100757C0
add	esp, 0Ch
mov	[esp+74h+var_54], eax
cmp	eax, edi
jz	short loc_100691D9
mov	ecx, [eax+4]
mov	[esp+74h+var_3C], ecx
mov	[esp+74h+var_48], 284h
jmp	loc_10069132
			
xor	esi, esi
cmp	[esp+74h+var_60], edi
jbe	loc_10069288
push	ebx
lea	edx, [esp+78h+arg_0]
push	edx
push	esi
push	ebp
call	sub_10075D80
add	esp, 10h
mov	[esp+74h+var_54], eax
cmp	eax, edi
jnz	short loc_10069260
mov	eax, [esp+74h+var_64]
mov	ecx, [esp+74h+arg_0]
push	ebx
push	edi
push	eax
push	ecx
call	sub_10068E40
add	esp, 10h
mov	[esp+74h+var_54], eax
cmp	eax, edi
jnz	short loc_10069274
mov	eax, [esp+74h+arg_0]
cmp	eax, edi
jz	short loc_1006924C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_50], eax
cmp	eax, edi
jz	short loc_10069246
push	ebx
push	eax
lea	edx, [esp+7Ch+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_50], edi
xor	eax, eax
mov	[esp+74h+arg_0], eax
inc	esi
cmp	esi, [esp+74h+var_60]
jb	short loc_100691E5
mov	edx, [esp+74h+var_64]
mov	[esp+74h+var_5C], edx
jmp	loc_10069163
mov	eax, [eax+4]
mov	[esp+74h+var_3C], eax
mov	[esp+74h+var_48], 283h
jmp	loc_10069132
mov	ecx, [eax+4]
mov	[esp+74h+var_3C], ecx
mov	[esp+74h+var_48], 425h
jmp	loc_10069132
mov	edx, [esp+74h+var_64]
mov	eax, [esp+74h+arg_0]
mov	[esp+74h+var_5C], edx
jmp	loc_10069163
push	1
lea	eax, [esp+7Ch+var_58]
push	1Fh
push	eax
mov	[esp+84h+var_44], 1
mov	[esp+84h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
xor	edi, edi
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_100692D5
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 425h
jmp	short loc_100692DF
mov	edx, [esp+74h+arg_4]
mov	eax, [esp+74h+var_5C]
mov	[edx], eax
			
push	ebx
push	1
lea	ecx, [esp+7Ch+var_2C]
push	45h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 64h
retn
			
mov	edx, [esp+70h+arg_8]
push	edx
push	1
lea	eax, [esp+78h+var_2C]
push	1Fh
push	eax
mov	[esp+80h+var_18], 1
mov	[esp+80h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 64h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BBA6C
push	1
mov	[esp+60h+var_50], offset aVerifynode 
mov	[esp+60h+var_48], 10h
mov	[esp+60h+var_44], offset sub_100686D0
mov	[esp+60h+var_40], offset sub_10068C10
mov	[esp+60h+var_3C], offset sub_10068930
mov	[esp+60h+var_38], offset sub_100685B0
mov	[esp+60h+var_30], offset sub_10069050
rep movsd
lea	ecx, [esp+60h+var_2C]
push	45h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_verifyn_5 
mov	[esp+68h+var_C], 45h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 2Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_verifyn_1 
mov	[esp+38h+var_C], 45h
test	edi, edi
jz	loc_100694A7
mov	ebp, [esp+38h+arg_4]
test	ebp, ebp
jz	loc_100694A7
mov	eax, [edi+0Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10069449
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10069442
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	dword ptr [edi+0Ch], 0
push	esi
push	ebp
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1006948B
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	45h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	45h
push	edx
mov	[edi+0Ch], ebp
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_4]
mov	eax, [edi]
mov	esi, [esp+3Ch+arg_8]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_verifyn_4 
mov	[esp+3Ch+var_C], 45h
cmp	eax, ebx
jz	short loc_10069541
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006953F
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
mov	[edi], ebx
push	ebp
mov	ebp, [esp+40h+arg_0]
cmp	ebp, ebx
jz	loc_10069678
mov	eax, [ebp+4]
cmp	eax, ebx
jz	loc_1006961A
push	esi
lea	ecx, [esp+44h+arg_0]
push	ecx
push	eax
mov	[esp+4Ch+arg_0], ebx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10069588
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 284h
jmp	loc_10069678
xor	edi, edi
cmp	[esp+40h+arg_0], ebx
jbe	loc_1006961A
mov	ecx, [ebp+4]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jnz	loc_1006964D
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1006960F
mov	edx, [esp+40h+arg_4]
push	esi
push	edx
push	eax
call	sub_100694E0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jnz	loc_1006965E
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10069607
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10069603
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_30], ebx
mov	ecx, [esp+40h+arg_4]
cmp	[ecx], ebx
jnz	short loc_10069678
inc	edi
cmp	edi, [esp+40h+arg_0]
jb	loc_10069594
			
mov	eax, [ebp+0Ch]
cmp	eax, ebx
jz	short loc_10069678
cmp	[eax+8], ebx
jz	short loc_10069678
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1006966F
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
jmp	short loc_10069678
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 283h
jmp	short loc_10069678
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 426h
jmp	short loc_10069678
mov	edx, [ebp+0Ch]
mov	eax, [esp+40h+arg_4]
mov	[eax], edx
			
mov	eax, [esp+40h+var_30]
pop	ebp
cmp	eax, ebx
jz	short loc_100696AA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100696A6
push	esi
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_30], ebx
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	45h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_addtoveri 
mov	[esp+3Ch+var_C], 42h
test	eax, eax
jnz	short loc_1006972F
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_8]
test	esi, esi
jz	short loc_10069799
mov	edx, [esp+3Ch+arg_4]
push	ebx
lea	ecx, [esp+40h+var_30]
push	ecx
push	edx
push	ebp
push	eax
call	sub_10067620
add	esp, 14h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10069765
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 424h
jmp	short loc_10069799
test	ebp, ebp
jnz	short loc_10069771
mov	ecx, [esp+3Ch+var_30]
mov	[esi], ecx
jmp	short loc_10069799
mov	edx, [esp+3Ch+var_30]
mov	eax, [esi]
push	ebx
push	edx
push	eax
call	sub_10067780
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10069799
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 422h
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	42h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 44h
mov	eax, [esp+44h+arg_0]
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	[esp+50h+var_38], ebp
mov	[esp+50h+var_44], ebp
mov	[esp+50h+var_40], ebp
mov	[esp+50h+var_30], ebp
mov	[esp+50h+var_3C], ebp
mov	[esp+50h+var_2C], offset aPkix_checkcert 
mov	[esp+50h+var_C], 42h
cmp	eax, ebp
jz	loc_10069AA7
mov	esi, [esp+50h+arg_4]
cmp	esi, ebp
jz	loc_10069AA7
cmp	[esp+50h+arg_C], ebp
jz	loc_10069AA7
mov	edi, [esp+50h+arg_10]
cmp	edi, ebp
jz	loc_10069AA7
mov	ecx, [edi]
push	ebx
lea	edx, [esp+54h+var_40]
push	edx
push	eax
mov	[esp+5Ch+var_3C], ecx
mov	[edi], ebp
call	sub_1007EB00
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1006985D
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 7Fh
jmp	loc_10069A2C
push	ebx
lea	ecx, [esp+54h+var_34]
push	ecx
push	esi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_10069888
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 284h
jmp	loc_10069A2C
mov	eax, [esp+50h+arg_C]
mov	esi, [eax]
cmp	esi, [esp+50h+var_34]
jnb	loc_1006994F
jmp	short loc_100698A0
align 10h
			
mov	edx, [esp+50h+arg_4]
push	ebx
lea	ecx, [esp+54h+var_44]
push	ecx
push	esi
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jnz	loc_1006998A
mov	ecx, [esp+50h+var_44]
push	ebx
lea	eax, [esp+54h+var_38]
push	eax
push	ecx
call	sub_100566C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jnz	loc_1006999E
mov	eax, [esp+50h+var_40]
mov	ecx, [esp+50h+arg_0]
push	ebx
lea	edx, [esp+54h+var_3C]
push	edx
mov	edx, [esp+58h+var_44]
push	eax
push	ecx
push	edx
call	[esp+64h+var_38]
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jnz	loc_100699AF
mov	eax, [esp+50h+var_3C]
cmp	eax, ebp
jnz	loc_100699C0
mov	eax, [esp+50h+var_44]
cmp	eax, ebp
jz	short loc_10069944
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_10069940
push	ebx
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_44], ebp
inc	esi
cmp	esi, [esp+50h+var_34]
jb	loc_100698A0
mov	ecx, [esp+50h+var_40]
cmp	ecx, ebp
jz	loc_10069A2C
mov	eax, [esp+50h+arg_8]
cmp	eax, ebp
jz	short loc_100699CA
push	ebx
push	eax
push	ecx
call	sub_100774D0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_100699CA
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 28Bh
jmp	loc_10069A2C
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 283h
jmp	loc_10069A2C
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 55h
jmp	short loc_10069A2C
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 52h
jmp	short loc_10069A2C
mov	ecx, [esp+50h+arg_C]
mov	[ecx], esi
mov	[edi], eax
jmp	short loc_10069A2C
			
mov	ecx, [esp+50h+var_40]
push	ebx
lea	eax, [esp+54h+var_30]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_100699F6
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 284h
jmp	short loc_10069A2C
cmp	[esp+50h+var_30], ebp
jz	short loc_10069A2C
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10069A1C
mov	ecx, [esp+50h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	406h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 406h
			
mov	eax, [esp+50h+var_44]
cmp	eax, ebp
jz	short loc_10069A5D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_10069A59
push	ebx
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_44], ebp
mov	eax, [esp+50h+var_40]
cmp	eax, ebp
jz	short loc_10069A8E
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_10069A8A
push	ebx
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_40], ebp
push	ebx
push	1
lea	ecx, [esp+58h+var_2C]
push	42h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
			
push	ebx
push	1
lea	edx, [esp+58h+var_2C]
push	1Fh
push	edx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
sub	esp, 40h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_2C], offset aPkix_retrieveo 
mov	[esp+4Ch+var_C], 42h
cmp	esi, ebp
jz	loc_10069D6A
cmp	[esp+4Ch+arg_8], ebp
jz	loc_10069D6A
push	ebx
lea	eax, [esp+50h+var_38]
push	eax
push	esi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10069B45
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 284h
jmp	loc_10069C5E
mov	edi, [esp+4Ch+var_38]
dec	edi
cmp	edi, ebp
jl	loc_10069C56
push	ebx
lea	edx, [esp+50h+var_3C]
push	edx
push	edi
push	esi
call	sub_10075D80
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10069CD9
mov	ecx, [esp+4Ch+var_3C]
push	ebx
lea	eax, [esp+50h+var_40]
push	eax
push	ecx
call	sub_100567C0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10069CED
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebp
jz	short loc_10069BED
push	ebx
lea	edx, [esp+50h+var_34]
push	edx
push	eax
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10069D01
cmp	[esp+4Ch+var_34], 34h
jnz	short loc_10069BE2
mov	eax, [esp+4Ch+var_40]
mov	esi, [eax+8]
cmp	esi, ebp
jz	short loc_10069BD8
push	ebx
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jnz	loc_10069D15
mov	ecx, [esp+4Ch+arg_4]
mov	[ecx], esi
mov	esi, [esp+4Ch+arg_0]
cmp	[esp+4Ch+var_34], 0Ah
jz	loc_10069D2D
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_10069C1E
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10069C1A
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebp
jz	short loc_10069C4F
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10069C4B
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_40], ebp
dec	edi
jns	loc_10069B52
mov	esi, ebp
			
mov	ecx, [esp+4Ch+arg_8]
mov	[ecx], esi
			
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_10069C8F
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10069C8B
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebp
jz	short loc_10069CC0
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10069CBC
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_40], ebp
push	ebx
push	1
lea	ecx, [esp+54h+var_2C]
push	42h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 283h
jmp	loc_10069C5E
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 54h
jmp	loc_10069C5E
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2CEh
jmp	loc_10069C5E
push	ebx
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
jmp	loc_10069C5E
mov	edx, [esp+4Ch+var_40]
mov	esi, [edx+18h]
cmp	esi, ebp
jz	loc_10069C58
push	ebx
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	loc_10069C58
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
jmp	loc_10069C5E
			
push	ebx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
align 10h
sub	esp, 50h
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	[esp+5Ch+var_34], ebp
mov	[esp+5Ch+var_44], ebp
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_40], ebp
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_2C], offset aPkix_checkchai 
mov	[esp+5Ch+var_C], 42h
cmp	[esp+5Ch+arg_0], ebp
jz	loc_1006A50C
cmp	[esp+5Ch+arg_C], ebp
jz	loc_1006A50C
cmp	[esp+5Ch+arg_10], ebp
jz	loc_1006A50C
cmp	[esp+5Ch+arg_1C], ebp
jz	loc_1006A50C
cmp	[esp+5Ch+arg_20], ebp
jz	loc_1006A4F9
mov	ecx, [esp+5Ch+arg_24]
cmp	ecx, ebp
jz	loc_1006A4F9
cmp	[esp+5Ch+arg_28], ebp
jz	loc_1006A4F9
cmp	[esp+5Ch+arg_8], ebp
jz	loc_1006A4F9
mov	eax, [esp+5Ch+arg_2C]
cmp	eax, ebp
jz	loc_1006A4E6
cmp	[esp+5Ch+arg_30], ebp
jz	loc_1006A4E6
cmp	[esp+5Ch+arg_34], ebp
jz	loc_1006A4E6
mov	edx, [eax]
push	ebx
mov	ebx, [esp+60h+arg_3C]
mov	[eax], ebp
mov	eax, [ecx]
xor	edi, edi
mov	[esp+60h+var_44], edx
mov	[esp+60h+var_38], eax
cmp	[ebx+28h], ebp
jz	loc_1006A156
mov	[esp+60h+var_3C], edi
call	SECKEY_NewPrivateKeyList
mov	esi, eax
mov	[esp+60h+var_40], esi
cmp	esi, edi
jnz	short loc_10069ECA
			
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_10069EB4
mov	ecx, [esp+60h+var_C]
push	ebx
push	2
push	ecx
push	edi
push	edi
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+60h+var_18], 1
call	sub_10093EA0
mov	[esp+60h+var_28], eax
jmp	loc_1006A369
mov	eax, [esp+60h+arg_8]
push	ebx
lea	edx, [esp+64h+var_50]
push	edx
push	eax
call	sub_10060600
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, edi
jz	short loc_10069EF9
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 3E4h
jmp	loc_1006A369
mov	eax, [esp+60h+var_50]
push	ebx
lea	edx, [esp+64h+var_48]
push	edx
push	eax
call	sub_10081BC0
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, edi
jz	short loc_10069F28
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 7Eh
jmp	loc_1006A369
mov	edx, [esp+60h+var_48]
push	edx
push	esi
call	CERT_AddCertToListHead
add	esp, 8
test	eax, eax
jnz	loc_10069E98
mov	eax, [esp+60h+var_50]
mov	[esp+60h+var_48], edi
cmp	eax, edi
jz	short loc_10069F73
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, edi
jz	short loc_10069F6F
push	ebx
push	eax
lea	edx, [esp+68h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], edi
mov	[esp+60h+var_50], edi
mov	eax, [esp+60h+arg_1C]
mov	ebp, [eax]
cmp	ebp, [esp+60h+arg_4]
jnb	loc_1006A029
mov	esi, [esp+60h+arg_0]
lea	ebx, [ebx+0]
push	ebx
lea	ecx, [esp+64h+var_50]
push	ecx
push	ebp
push	esi
call	sub_10075D80
add	esp, 10h
mov	[esp+60h+var_28], eax
cmp	eax, edi
jnz	loc_1006A084
mov	eax, [esp+60h+var_50]
push	ebx
lea	edx, [esp+64h+var_48]
push	edx
push	eax
call	sub_10081BC0
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, edi
jnz	loc_1006A098
mov	ecx, [esp+60h+var_48]
mov	edx, [esp+60h+var_40]
push	ecx
push	edx
call	CERT_AddCertToListHead
add	esp, 8
test	eax, eax
jnz	loc_10069E98
mov	eax, [esp+60h+var_50]
mov	[esp+60h+var_48], edi
cmp	eax, edi
jz	short loc_1006A01A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, edi
jz	short loc_1006A016
push	ebx
push	eax
lea	eax, [esp+68h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], edi
mov	[esp+60h+var_50], edi
inc	ebp
cmp	ebp, [esp+60h+arg_4]
jb	loc_10069F90
mov	esi, [esp+60h+var_40]
mov	eax, [ebx+2Ch]
mov	ecx, [ebx+28h]
lea	edx, [esp+60h+var_3C]
push	edx
push	esi
push	eax
call	ecx
add	esp, 0Ch
test	eax, eax
jz	short loc_1006A0AC
mov	eax, dword_100BAE9C
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 0E3h
mov	[esp+60h+var_10], 1Fh
cmp	eax, edi
jz	loc_1006A0E6
mov	edx, [esp+60h+var_C]
push	ebx
push	1
push	edx
push	edi
push	0E3h
push	eax
call	sub_10074820
add	esp, 18h
mov	eax, [esp+60h+var_28]
jmp	loc_1006A369
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 283h
jmp	loc_1006A369
mov	edx, [eax+4]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 7Eh
jmp	loc_1006A369
cmp	[esp+60h+var_3C], edi
jnz	loc_1006A156
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_1006A0D6
mov	ecx, [esp+60h+var_C]
push	ebx
push	2
push	ecx
push	edi
push	0E3h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 0E3h
mov	eax, [esp+60h+var_28]
			
mov	ecx, [esp+60h+var_50]
cmp	ecx, edi
jz	loc_1006A38F
mov	edx, [esp+60h+arg_38]
push	edx
push	eax
mov	esi, eax
push	ebp
mov	eax, ecx
call	sub_100696D0
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, edi
jz	loc_1006A4D5
mov	eax, dword_100BAE9C
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2
mov	[esp+60h+var_10], 1Fh
cmp	eax, edi
jz	loc_1006A393
mov	ecx, [esp+60h+var_C]
push	ebx
push	1
push	ecx
push	edi
push	2
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006A393
			
mov	eax, [esp+60h+arg_8]
push	ebx
lea	edx, [esp+64h+var_50]
push	edx
push	eax
call	sub_10060600
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, edi
jz	short loc_1006A185
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 3E4h
jmp	loc_1006A369
mov	edx, [esp+60h+arg_1C]
mov	ebp, [edx]
cmp	ebp, [esp+60h+arg_4]
jnb	loc_1006A2EE
mov	esi, [esp+60h+var_4C]
lea	esp, [esp+0]
cmp	esi, edi
jz	short loc_1006A1C9
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, edi
jz	short loc_1006A1C9
push	ebx
push	eax
lea	eax, [esp+68h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], edi
			
mov	edx, [esp+60h+arg_0]
mov	esi, [esp+60h+var_50]
push	ebx
lea	ecx, [esp+64h+var_50]
push	ecx
push	ebp
push	edx
mov	[esp+70h+var_50], edi
call	sub_10075D80
add	esp, 10h
mov	[esp+60h+var_28], eax
cmp	eax, edi
jnz	loc_1006A328
mov	ecx, [esp+60h+var_50]
cmp	ecx, edi
jz	loc_1006A2DF
mov	eax, [esp+60h+var_38]
cmp	eax, edi
jnz	short loc_1006A248
mov	edx, [esp+60h+arg_20]
lea	eax, [esp+60h+var_44]
push	eax
mov	eax, [esp+64h+arg_14]
push	edx
mov	edx, [esp+68h+arg_C]
push	eax
push	edx
push	ecx
call	sub_100697C0
add	esp, 14h
mov	[esp+60h+var_28], eax
cmp	eax, edi
jnz	loc_1006A339
mov	ecx, [esp+60h+var_44]
cmp	ecx, edi
jnz	loc_1006A34A
mov	eax, [esp+60h+arg_20]
mov	[eax], edi
jmp	short loc_1006A24D
cmp	eax, 1
jnz	short loc_1006A2BD
mov	edx, [esp+60h+arg_28]
push	ebx
lea	ecx, [esp+64h+var_44]
push	ecx
mov	ecx, [esp+68h+arg_4]
push	edx
xor	edx, edx
dec	ecx
cmp	ebp, ecx
mov	ecx, [esp+6Ch+arg_10]
setz	dl
lea	eax, [esp+6Ch+var_30]
push	eax
mov	eax, [esp+70h+arg_18]
push	edx
mov	edx, [esp+74h+var_50]
push	1
push	eax
push	ecx
push	esi
push	edx
call	sub_10058F40
mov	ecx, [esp+88h+var_44]
add	esp, 28h
mov	[esp+60h+var_28], eax
cmp	ecx, edi
jnz	loc_1006A456
cmp	[esp+60h+var_30], 1
jz	loc_1006A471
cmp	eax, edi
jnz	loc_1006A365
mov	eax, [esp+60h+arg_20]
mov	[esp+60h+var_38], edi
mov	[eax], edi
mov	ecx, [esp+60h+arg_38]
mov	eax, [esp+60h+var_50]
push	ecx
push	edi
push	ebp
call	sub_100696D0
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, edi
jnz	loc_1006A4B3
inc	ebp
cmp	ebp, [esp+60h+arg_4]
jb	loc_1006A1A0
mov	[esp+60h+var_4C], esi
mov	eax, [esp+60h+arg_34]
mov	ecx, [esp+60h+arg_30]
mov	edx, [esp+60h+arg_C]
push	eax
push	ecx
push	edx
call	sub_10069AD0
add	esp, 0Ch
mov	[esp+60h+var_28], eax
cmp	eax, edi
jz	loc_1006A4C7
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 39Bh
jmp	short loc_1006A369
mov	edx, [eax+4]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 283h
jmp	short loc_1006A365
mov	ecx, [eax+4]
mov	[esp+60h+var_10], ecx
mov	[esp+60h+var_1C], 0E5h
jmp	short loc_1006A365
mov	edx, [esp+60h+arg_1C]
mov	[edx], ebp
mov	edx, [esp+60h+arg_24]
mov	[edx], edi
mov	edx, [esp+60h+arg_2C]
mov	[edx], ecx
			
mov	[esp+60h+var_4C], esi
			
cmp	[esp+60h+var_18], edi
jnz	loc_1006A0EA
cmp	eax, edi
jnz	loc_1006A0EA
cmp	[esp+60h+var_14], edi
jnz	loc_1006A0EA
cmp	[esp+60h+var_4], edi
jnz	loc_1006A0EA
mov	esi, [esp+60h+var_34]
			
mov	eax, [esp+60h+var_48]
cmp	eax, edi
jz	short loc_1006A3A4
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	eax, [esp+60h+var_40]
cmp	eax, edi
jz	short loc_1006A3B5
push	eax
call	CERT_DestroyCertList
add	esp, 4
cmp	esi, edi
jz	short loc_1006A3DE
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, edi
jz	short loc_1006A3DE
push	ebx
push	eax
lea	eax, [esp+68h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], edi
			
mov	eax, [esp+60h+var_50]
cmp	eax, edi
jz	short loc_1006A40F
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, edi
jz	short loc_1006A40B
push	ebx
push	eax
lea	ecx, [esp+68h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], edi
mov	[esp+60h+var_50], edi
mov	eax, [esp+60h+var_4C]
cmp	eax, edi
jz	short loc_1006A43C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+60h+var_24], eax
cmp	eax, edi
jz	short loc_1006A43C
push	ebx
push	eax
lea	edx, [esp+68h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_24], edi
			
push	ebx
push	1
lea	eax, [esp+68h+var_2C]
push	42h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 50h
retn
mov	edx, [esp+60h+arg_1C]
mov	[edx], ebp
mov	edx, [esp+60h+arg_24]
mov	dword ptr [edx], 1
jmp	loc_1006A35C
mov	[esp+60h+var_4C], esi
cmp	eax, edi
jnz	loc_1006A369
mov	ecx, [esp+60h+var_2C]
push	ebx
lea	eax, [esp+64h+var_28]
push	eax
push	edi
push	42h
push	96h
push	ecx
push	42h
call	sub_100723C0
add	esp, 1Ch
mov	[esp+60h+var_24], eax
cmp	eax, edi
jz	loc_1006A07B
mov	[esp+60h+var_28], eax
mov	[esp+60h+var_24], edi
jmp	loc_1006A369
mov	edx, [eax+4]
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 2
jmp	loc_1006A365
mov	edx, [esp+60h+arg_2C]
mov	[edx], edi
jmp	loc_1006A369
mov	[esp+60h+var_28], esi
mov	edx, [esi]
mov	[esp+60h+var_1C], edx
xor	esi, esi
jmp	loc_1006A393
			
mov	ecx, [esp+5Ch+arg_3C]
push	ecx
push	1
push	1Fh
lea	edx, [esp+68h+var_2C]
push	edx
jmp	short loc_1006A51D
			
mov	eax, [esp+5Ch+arg_3C]
push	eax
push	1
push	1Fh
lea	ecx, [esp+68h+var_2C]
push	ecx
jmp	short loc_1006A51D
			
mov	edx, [esp+5Ch+arg_3C]
push	edx
push	1
push	1Fh
lea	eax, [esp+68h+var_2C]
push	eax
			
mov	[esp+6Ch+var_18], 1
mov	[esp+6Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_14]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_initializ 
mov	[esp+38h+var_C], 2Ah
test	esi, esi
jnz	short loc_1006A59D
push	esi
mov	edi, 1
push	edi
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], edi
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
cmp	dword_100BAE58,	0
jz	short loc_1006A5BF
push	0
push	1
lea	ecx, [esp+40h+var_2C]
push	2Ah
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	eax, [esp+38h+arg_0]
lea	edx, [esp+38h+var_30]
push	edx
push	0
push	eax
call	sub_10093F50
add	esp, 0Ch
mov	[esp+38h+var_28], eax
mov	edi, 1
test	eax, eax
jz	short loc_1006A5F4
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 237h
jmp	loc_1006A7AA
cmp	[esp+38h+arg_4], 0
mov	ecx, [esp+38h+var_30]
mov	[esi], ecx
jz	short loc_1006A62F
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1006A622
mov	edx, [esp+38h+var_C]
push	ecx
push	2
push	edx
push	0
push	298h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_1C], 298h
jmp	loc_1006A7A6
mov	eax, 3
cmp	[esp+38h+arg_8], eax
ja	loc_1006A77D
cmp	[esp+38h+arg_C], eax
jb	loc_1006A77D
mov	edx, [esp+38h+arg_10]
push	ecx
push	offset dword_100BAE80
push	0
push	20h
mov	[edx], eax
call	sub_100935C0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1006A67C
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 20Eh
jmp	loc_1006A7AA
mov	ecx, [esp+38h+var_30]
push	ecx
push	offset dword_100BAE7C
push	0
push	20h
call	sub_100935C0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1006A6AE
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 20Eh
jmp	loc_1006A7AA
mov	eax, [esp+38h+var_30]
push	eax
push	offset dword_100BAE84
push	0Ah
push	20h
call	sub_100935C0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1006A6E0
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 20Eh
jmp	loc_1006A7AA
mov	edx, [esp+38h+var_30]
push	edx
push	offset dword_100BAE88
push	0Ah
push	20h
call	sub_100935C0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jnz	loc_1006A668
mov	ecx, [esp+38h+var_30]
push	ecx
push	offset dword_100BAE8C
push	0Ah
push	20h
call	sub_100935C0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jnz	loc_1006A69A
mov	eax, [esp+38h+var_30]
push	eax
push	offset dword_100BAE90
push	5
push	5
call	sub_100935C0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jnz	short loc_1006A6CC
cmp	dword_100BAEA4,	eax
jnz	short loc_1006A775
mov	edx, [esp+38h+var_30]
push	edx
push	offset dword_100BAEA4
call	sub_100947D0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1006A775
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 29Dh
jmp	short loc_1006A7AA
			
mov	dword_100BAE58,	edi
jmp	short loc_1006A7AA
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1006A79E
push	ecx
mov	ecx, [esp+3Ch+var_C]
push	2
push	ecx
push	0
push	29Bh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_1C], 29Bh
mov	[esp+38h+var_18], edi
			
mov	edx, [esp+38h+var_30]
push	edx
push	edi
lea	eax, [esp+40h+var_2C]
push	2Ah
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
xor	edi, edi
mov	[esp+34h+var_2C], offset aPkix_shutdown	
mov	[esp+34h+var_C], 2Ah
cmp	dword_100BAE58,	edi
jnz	short loc_1006A81B
mov	eax, [esp+34h+arg_0]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	2Ah
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, dword_100BAE98
mov	esi, [esp+34h+arg_0]
mov	dword_100BAE58,	edi
cmp	eax, edi
jz	loc_1006A8CB
push	ebx
mov	ebx, dword_100BAE9C
push	ebp
mov	ebp, dword_100BAEA0
push	esi
push	eax
mov	dword_100BAE98,	edi
mov	dword_100BAE9C,	edi
mov	dword_100BAEA0,	edi
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_1006A877
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
cmp	ebx, edi
jz	short loc_1006A8A0
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_1006A8A0
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
			
cmp	ebp, edi
jz	short loc_1006A8C9
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_1006A8C9
push	esi
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
			
pop	ebp
pop	ebx
mov	eax, dword_100BAEA4
cmp	eax, edi
jz	short loc_1006A8FF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
cmp	eax, edi
jz	short loc_1006A8F9
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], edi
mov	dword_100BAEA4,	edi
mov	eax, dword_100BAE80
cmp	eax, edi
jz	short loc_1006A933
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
cmp	eax, edi
jz	short loc_1006A92D
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], edi
mov	dword_100BAE80,	edi
mov	eax, dword_100BAE7C
cmp	eax, edi
jz	short loc_1006A967
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
cmp	eax, edi
jz	short loc_1006A961
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], edi
mov	dword_100BAE7C,	edi
mov	eax, dword_100BAE84
cmp	eax, edi
jz	short loc_1006A99B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
cmp	eax, edi
jz	short loc_1006A995
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], edi
mov	dword_100BAE84,	edi
mov	eax, dword_100BAE88
cmp	eax, edi
jz	short loc_1006A9CF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
cmp	eax, edi
jz	short loc_1006A9C9
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], edi
mov	dword_100BAE88,	edi
mov	eax, dword_100BAE8C
cmp	eax, edi
jz	short loc_1006AA03
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
cmp	eax, edi
jz	short loc_1006A9FD
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], edi
mov	dword_100BAE8C,	edi
mov	eax, dword_100BAE90
cmp	eax, edi
jz	short loc_1006AA37
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
cmp	eax, edi
jz	short loc_1006AA31
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], edi
mov	dword_100BAE90,	edi
mov	eax, dword_100BAE94
cmp	eax, edi
jz	short loc_1006AA6B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
cmp	eax, edi
jz	short loc_1006AA65
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], edi
mov	dword_100BAE94,	edi
mov	eax, [esp+34h+var_4]
cmp	eax, edi
jz	short loc_1006AA81
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_4], edi
push	esi
call	sub_100942A0
add	esp, 4
mov	[esp+34h+var_28], eax
cmp	eax, edi
jz	short loc_1006AAA1
mov	ecx, [eax+4]
mov	[esp+34h+var_10], ecx
mov	[esp+34h+var_1C], 3B4h
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	2Ah
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_forward_2 
mov	[esp+38h+var_C], 20h
cmp	esi, ebx
jnz	short loc_1006AB1D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	1Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_1006AB49
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2F5h
jmp	loc_1006B044
mov	eax, [esi+48h]
mov	dword ptr [esi], 1
mov	[esi+4], ebx
mov	[esi+8], ebx
mov	[esi+0Ch], ebx
mov	[esi+10h], ebx
mov	[esi+14h], ebx
mov	[esi+18h], ebx
mov	[esi+1Ch], ebx
mov	[esi+20h], ebx
mov	[esi+24h], ebx
mov	[esi+28h], ebx
mov	[esi+2Ch], ebx
mov	[esi+30h], ebx
mov	[esi+34h], ebx
mov	[esi+38h], ebx
mov	[esi+3Ch], ebx
mov	[esi+40h], ebx
mov	[esi+44h], ebx
cmp	eax, ebx
jz	short loc_1006ABB1
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006ABAE
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+48h], ebx
mov	eax, [esi+4Ch]
cmp	eax, ebx
jz	short loc_1006ABE0
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006ABDD
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+4Ch], ebx
mov	eax, [esi+50h]
cmp	eax, ebx
jz	short loc_1006AC0F
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AC0C
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+50h], ebx
mov	eax, [esi+54h]
cmp	eax, ebx
jz	short loc_1006AC3E
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AC3B
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+54h], ebx
mov	eax, [esi+58h]
cmp	eax, ebx
jz	short loc_1006AC6D
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AC6A
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+58h], ebx
mov	eax, [esi+5Ch]
cmp	eax, ebx
jz	short loc_1006AC9C
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AC99
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+5Ch], ebx
mov	eax, [esi+60h]
cmp	eax, ebx
jz	short loc_1006ACCB
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006ACC8
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+60h], ebx
mov	eax, [esi+64h]
cmp	eax, ebx
jz	short loc_1006ACFA
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006ACF7
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+64h], ebx
mov	eax, [esi+68h]
cmp	eax, ebx
jz	short loc_1006AD29
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AD26
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+68h], ebx
mov	eax, [esi+6Ch]
cmp	eax, ebx
jz	short loc_1006AD58
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AD55
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+6Ch], ebx
mov	eax, [esi+70h]
cmp	eax, ebx
jz	short loc_1006AD87
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AD84
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+70h], ebx
mov	eax, [esi+74h]
cmp	eax, ebx
jz	short loc_1006ADB6
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006ADB3
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+74h], ebx
mov	eax, [esi+78h]
cmp	eax, ebx
jz	short loc_1006ADE5
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006ADE2
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+78h], ebx
mov	eax, [esi+7Ch]
cmp	eax, ebx
jnz	loc_1006B01C
mov	eax, [esi+9Ch]
mov	[esi+80h], ebx
mov	[esi+84h], ebx
mov	[esi+88h], ebx
mov	[esi+98h], ebx
cmp	eax, ebx
jz	short loc_1006AE3D
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AE37
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+9Ch], ebx
mov	eax, [esi+0A0h]
cmp	eax, ebx
jz	short loc_1006AE72
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AE6C
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0A0h], ebx
mov	eax, [esi+0A4h]
cmp	eax, ebx
jz	short loc_1006AEA7
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AEA1
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0A4h], ebx
mov	eax, [esi+0A8h]
cmp	eax, ebx
jz	short loc_1006AEDC
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AED6
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0A8h], ebx
mov	eax, [esi+0ACh]
cmp	eax, ebx
jz	short loc_1006AF11
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AF0B
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0ACh], ebx
mov	eax, [esi+0B0h]
cmp	eax, ebx
jz	short loc_1006AF46
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AF40
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0B0h], ebx
mov	eax, [esi+0B4h]
cmp	eax, ebx
jz	short loc_1006AF7B
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AF75
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0B4h], ebx
mov	eax, [esi+0B8h]
cmp	eax, ebx
jz	short loc_1006AFB0
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AFAA
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0B8h], ebx
mov	eax, [esi+0BCh]
cmp	eax, ebx
jz	short loc_1006AFE5
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006AFDF
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0BCh], ebx
mov	eax, [esi+0C0h]
cmp	eax, ebx
jz	short loc_1006B044
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006B014
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0C0h], ebx
jmp	short loc_1006B044
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1006B041
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+7Ch], ebx
			
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	20h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_28]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_14]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_forwardbu 
mov	[esp+40h+var_C], 20h
cmp	edi, ebx
jz	loc_1006B411
cmp	[esp+40h+arg_18], ebx
jz	loc_1006B411
cmp	[esp+40h+arg_24], ebx
jz	loc_1006B411
cmp	[esp+40h+arg_1C], ebx
jz	loc_1006B411
push	ebp
lea	eax, [esp+44h+var_30]
push	eax
push	0CCh
push	1Ch
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1006B0EC
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 138h
jmp	loc_1006B1B5
mov	edx, [esp+40h+var_30]
mov	dword ptr [edx], 1
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_0]
mov	[eax+4], ecx
mov	edx, [esp+40h+var_30]
mov	[edx+8], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+0Ch], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+10h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+14h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+18h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+1Ch], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+20h], ebx
mov	eax, [esp+40h+var_30]
mov	edx, [esp+40h+arg_4]
mov	[eax+24h], ebx
mov	ecx, [esp+40h+var_30]
mov	eax, [esp+40h+arg_8]
mov	[ecx+28h], edx
mov	ecx, [esp+40h+var_30]
mov	[ecx+2Ch], eax
mov	edx, [esp+40h+var_30]
mov	esi, [esp+40h+arg_10]
mov	[edx+30h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+3Ch], eax
mov	edx, [esp+40h+var_30]
mov	eax, [esp+40h+arg_C]
mov	[edx+34h], eax
mov	ecx, [esp+40h+var_30]
mov	dword ptr [ecx+38h], 1
mov	edx, [esp+40h+var_30]
mov	[edx+3Ch], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+40h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+44h], ebx
cmp	esi, ebx
jz	short loc_1006B200
push	ebp
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1006B200
push	ebp
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
			
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1006B1E6
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1006B1E2
push	ebp
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	ebp
push	1
lea	eax, [esp+48h+var_2C]
push	20h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+var_30]
push	ebp
push	edi
mov	[eax+48h], esi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	ebp
cmp	eax, ebx
jz	short loc_1006B222
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	short loc_1006B1A9
mov	edx, [esp+44h+var_30]
mov	esi, [esp+44h+arg_18]
mov	[edx+4Ch], edi
mov	eax, [esp+44h+var_30]
push	esi
mov	[eax+50h], ebx
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	ebp
cmp	eax, ebx
jnz	short loc_1006B21A
mov	edx, [esp+44h+var_30]
mov	[edx+54h], esi
mov	esi, [esp+44h+arg_1C]
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1006B26E
push	ebp
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
jmp	loc_1006B1A9
mov	ecx, [esp+40h+var_30]
mov	[ecx+58h], esi
mov	edx, [esp+40h+var_30]
mov	esi, [esp+40h+arg_20]
mov	[edx+5Ch], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+60h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+64h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+68h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+6Ch], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+70h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+74h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+78h], ebx
cmp	esi, ebx
jz	short loc_1006B2D3
push	ebp
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1006B2D3
push	ebp
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	loc_1006B1A9
			
mov	edx, [esp+40h+var_30]
mov	[edx+7Ch], esi
cmp	esi, ebx
jz	loc_1006B402
mov	eax, [esi+80h]
mov	ecx, [esp+40h+var_30]
mov	[ecx+80h], eax
mov	edx, [esi+84h]
mov	eax, [esp+40h+var_30]
mov	[eax+84h], edx
mov	ecx, [esi+88h]
mov	edx, [esp+40h+var_30]
mov	[edx+88h], ecx
mov	eax, [esi+90h]
mov	ecx, [esp+40h+var_30]
mov	[ecx+90h], eax
mov	edx, [esi+8Ch]
mov	eax, [esp+40h+var_30]
mov	[eax+8Ch], edx
mov	ecx, [esi+94h]
mov	edx, [esp+40h+var_30]
mov	[edx+94h], ecx
mov	eax, [esi+98h]
mov	ecx, [esp+40h+var_30]
mov	[ecx+98h], eax
mov	edx, [esi+9Ch]
mov	eax, [esp+40h+var_30]
mov	[eax+9Ch], edx
mov	ecx, [esi+0A0h]
mov	edx, [esp+40h+var_30]
mov	[edx+0A0h], ecx
mov	eax, [esi+0A4h]
mov	ecx, [esp+40h+var_30]
mov	[ecx+0A4h], eax
mov	edx, [esi+0A8h]
mov	eax, [esp+40h+var_30]
mov	[eax+0A8h], edx
mov	ecx, [esi+0ACh]
mov	edx, [esp+40h+var_30]
mov	[edx+0ACh], ecx
mov	eax, [esi+0B0h]
mov	ecx, [esp+40h+var_30]
mov	[ecx+0B0h], eax
mov	edx, [esi+0B4h]
mov	eax, [esp+40h+var_30]
mov	[eax+0B4h], edx
mov	ecx, [esi+0B8h]
mov	edx, [esp+40h+var_30]
mov	[edx+0B8h], ecx
mov	eax, [esi+0BCh]
mov	ecx, [esp+40h+var_30]
mov	[ecx+0BCh], eax
mov	edx, [esi+0C0h]
mov	eax, [esp+40h+var_30]
mov	[eax+0C0h], edx
mov	ecx, [esi+0C8h]
mov	edx, [esp+40h+var_30]
mov	[edx+0C8h], ecx
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_24]
mov	[ecx], eax
jmp	loc_1006B1E2
			
push	ebp
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_0]
push	esi
push	edi
mov	ebx, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_build_get 
mov	[esp+40h+var_C], 3
push	ebp
test	ebx, ebx
jnz	short loc_1006B4A3
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	edx, [ebx+18h]
lea	ecx, [esp+44h+var_30]
push	ecx
push	edx
call	sub_100625F0
xor	edi, edi
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_1006B4D2
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 372h
jmp	loc_1006B55F
mov	ecx, [esp+40h+var_30]
lea	eax, [ebx+10h]
lea	esi, [ebx+0Ch]
add	ebx, 14h
mov	[eax], edi
mov	[esi], edi
mov	[ebx], edi
cmp	ecx, edi
jz	loc_1006B590
push	ebp
push	eax
push	ecx
call	sub_10063D00
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_1006B511
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 399h
jmp	short loc_1006B55F
mov	edx, [esp+40h+var_30]
push	ebp
push	esi
push	edx
call	sub_10063D80
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_1006B539
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 398h
jmp	short loc_1006B55F
mov	ecx, [esp+40h+var_30]
push	ebp
push	ebx
push	ecx
call	sub_10063C80
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_1006B55F
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 39Ah
			
mov	eax, [esp+40h+var_30]
cmp	eax, edi
jz	short loc_1006B590
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, edi
jz	short loc_1006B58C
push	ebp
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], edi
mov	[esp+40h+var_30], edi
			
push	ebp
push	1
lea	ecx, [esp+48h+var_2C]
push	3
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 5Ch
push	ebx
xor	ebx, ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+6Ch+var_2C]
rep movsd
mov	edi, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_38], ebx
mov	[esp+6Ch+var_30], ebx
mov	[esp+6Ch+var_34], ebx
mov	[esp+6Ch+var_5C], ebx
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_50], ebx
mov	[esp+6Ch+var_4C], ebx
mov	[esp+6Ch+var_48], ebx
mov	[esp+6Ch+var_44], ebx
mov	[esp+6Ch+var_40], ebx
mov	[esp+6Ch+var_3C], ebx
mov	[esp+6Ch+var_2C], offset aPkix_forward_3 
mov	[esp+6Ch+var_C], 20h
cmp	edi, ebx
jz	loc_1006BCBF
mov	ebp, [esp+6Ch+arg_4]
cmp	ebp, ebx
jz	loc_1006BCBF
mov	esi, [esp+6Ch+arg_8]
push	esi
push	1Ch
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B64D
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], 2F5h
jmp	loc_1006BA8A
push	esi		
lea	ecx, [esp+70h+var_38]
push	ecx		
push	ebx		
push	offset aBuildstatusSTr 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B67E
mov	edx, [eax+4]
mov	[esp+6Ch+var_10], edx
mov	[esp+6Ch+var_1C], 3CFh
jmp	loc_1006BA8A
mov	eax, [edi]
cmp	eax, 0Fh	
ja	short loc_1006B6FC 
jmp	ds:off_1006BCF0[eax*4] 
			
mov	eax, offset aBuild_shortcut 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_initial 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_tryaia 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_aiapendi 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_collecti 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_gatherpe 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_certvali 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_abandonn 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_dateprep 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_checktru 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_checkt_0 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_addtocha 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_valchain 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_valcha_0 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_extendch 
jmp	short loc_1006B701
			
mov	eax, offset aBuild_getnextc 
jmp	short loc_1006B701
mov	eax, offset aInvalidStatus 
			
push	esi		
lea	ecx, [esp+70h+var_34]
push	ecx		
push	ebx		
push	eax		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B72E
mov	edx, [eax+4]
mov	[esp+6Ch+var_10], edx
mov	[esp+6Ch+var_1C], 3CFh
jmp	loc_1006BA8A
mov	eax, [edi+48h]
push	esi		
cmp	eax, ebx
jz	short loc_1006B74B
lea	ecx, [esp+70h+var_5C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B764
lea	edx, [esp+70h+var_5C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B77C
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	eax, [edi+4Ch]
push	esi		
cmp	eax, ebx
jz	short loc_1006B799
lea	ecx, [esp+70h+var_58]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B7B2
lea	edx, [esp+70h+var_58]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B7CA
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	eax, [edi+50h]
push	esi		
cmp	eax, ebx
jz	short loc_1006B7E7
lea	ecx, [esp+70h+var_54]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B800
lea	edx, [esp+70h+var_54]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B818
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	eax, [edi+54h]
push	esi		
cmp	eax, ebx
jz	short loc_1006B835
lea	ecx, [esp+70h+var_50]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B84E
lea	edx, [esp+70h+var_50]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B866
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	eax, [edi+58h]
push	esi		
cmp	eax, ebx
jz	short loc_1006B883
lea	ecx, [esp+70h+var_4C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B89C
lea	edx, [esp+70h+var_4C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B8B4
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	eax, [edi+60h]
push	esi		
cmp	eax, ebx
jz	short loc_1006B8D1
lea	ecx, [esp+70h+var_48]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B8EA
lea	edx, [esp+70h+var_48]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B902
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	eax, [edi+70h]
push	esi		
cmp	eax, ebx
jz	short loc_1006B91F
lea	ecx, [esp+70h+var_44]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B938
lea	edx, [esp+70h+var_44]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B950
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	eax, [edi+74h]
push	esi		
cmp	eax, ebx
jz	short loc_1006B96D
lea	ecx, [esp+70h+var_40]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B986
lea	edx, [esp+70h+var_40]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B99E
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	eax, [edi+7Ch]
push	esi		
cmp	eax, ebx
jz	short loc_1006B9BB
lea	ecx, [esp+70h+var_3C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_1006B9D4
lea	edx, [esp+70h+var_3C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006B9EC
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], ecx
jmp	loc_1006BA8A
mov	ecx, [esp+6Ch+var_3C]
mov	edx, [esp+6Ch+var_40]
mov	eax, [esp+6Ch+var_44]
push	ecx
mov	ecx, [esp+70h+var_48]
push	edx
mov	edx, [esp+74h+var_4C]
push	eax
mov	eax, [esp+78h+var_50]
push	ecx
mov	ecx, [esp+7Ch+var_54]
push	edx
mov	edx, [esp+80h+var_58]
push	eax
mov	eax, [esp+84h+var_5C]
push	ecx
mov	ecx, [edi+3Ch]
push	edx
mov	edx, [edi+38h]
push	eax
mov	eax, [edi+34h]
push	ecx
mov	ecx, [edi+30h]
push	edx
mov	edx, [edi+2Ch]
push	eax
mov	eax, [edi+28h]
push	ecx
mov	ecx, [edi+18h]
push	edx
mov	edx, [edi+14h]
push	eax
mov	eax, [edi+10h]
push	ecx
mov	ecx, [edi+0Ch]
push	edx
mov	edx, [edi+8]
push	eax
mov	eax, [edi+4]
push	ecx
mov	ecx, [esp+0B8h+var_34]
push	edx
mov	edx, [esp+0BCh+var_38]
push	eax
push	ecx
push	edx
lea	eax, [esp+0C8h+var_30]
push	esi
push	eax
call	sub_10098590
add	esp, 64h
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1006BA83
mov	ecx, [eax+4]
mov	[esp+6Ch+var_10], ecx
mov	[esp+6Ch+var_1C], 3CDh
jmp	short loc_1006BA8A
mov	edx, [esp+6Ch+var_30]
mov	[ebp+0], edx
			
mov	eax, [esp+6Ch+var_38]
cmp	eax, ebx
jz	short loc_1006BABB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BAB7
push	esi
push	eax
lea	eax, [esp+74h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_38], ebx
mov	eax, [esp+6Ch+var_34]
cmp	eax, ebx
jz	short loc_1006BAEC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BAE8
push	esi
push	eax
lea	ecx, [esp+74h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_34], ebx
mov	eax, [esp+6Ch+var_5C]
cmp	eax, ebx
jz	short loc_1006BB1D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BB19
push	esi
push	eax
lea	edx, [esp+74h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_5C], ebx
mov	eax, [esp+6Ch+var_58]
cmp	eax, ebx
jz	short loc_1006BB4E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BB4A
push	esi
push	eax
lea	eax, [esp+74h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_58], ebx
mov	eax, [esp+6Ch+var_54]
cmp	eax, ebx
jz	short loc_1006BB7F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BB7B
push	esi
push	eax
lea	ecx, [esp+74h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_54], ebx
mov	eax, [esp+6Ch+var_50]
cmp	eax, ebx
jz	short loc_1006BBB0
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BBAC
push	esi
push	eax
lea	edx, [esp+74h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_50], ebx
mov	eax, [esp+6Ch+var_4C]
cmp	eax, ebx
jz	short loc_1006BBE1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BBDD
push	esi
push	eax
lea	eax, [esp+74h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_4C], ebx
mov	eax, [esp+6Ch+var_48]
cmp	eax, ebx
jz	short loc_1006BC12
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BC0E
push	esi
push	eax
lea	ecx, [esp+74h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_48], ebx
mov	eax, [esp+6Ch+var_44]
cmp	eax, ebx
jz	short loc_1006BC43
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BC3F
push	esi
push	eax
lea	edx, [esp+74h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_44], ebx
mov	eax, [esp+6Ch+var_40]
cmp	eax, ebx
jz	short loc_1006BC74
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BC70
push	esi
push	eax
lea	eax, [esp+74h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_40], ebx
mov	eax, [esp+6Ch+var_3C]
cmp	eax, ebx
jz	short loc_1006BCA5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1006BCA1
push	esi
push	eax
lea	ecx, [esp+74h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_24], ebx
mov	[esp+6Ch+var_3C], ebx
push	esi
push	1
lea	edx, [esp+74h+var_2C]
push	20h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 5Ch
retn
			
mov	eax, [esp+6Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+74h+var_2C]
push	1Fh
push	ecx
mov	[esp+7Ch+var_18], 1
mov	[esp+7Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 5Ch
retn
align 10h
dd offset loc_1006B693	
dd offset loc_1006B69A
dd offset loc_1006B6A1
dd offset loc_1006B6A8
dd offset loc_1006B6AF
dd offset loc_1006B6B6
dd offset loc_1006B6BD
dd offset loc_1006B6C4
dd offset loc_1006B6CB
dd offset loc_1006B6D2
dd offset loc_1006B6D9
dd offset loc_1006B6E0
dd offset loc_1006B6E7
dd offset loc_1006B6EE
dd offset loc_1006B6F5
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB610
push	1
mov	[esp+60h+var_50], offset aForwardbuilder 
mov	[esp+60h+var_48], 0CCh
mov	[esp+60h+var_44], offset sub_1006AAC0
mov	[esp+60h+var_38], offset sub_1006B5B0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	20h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_forward_1 
mov	[esp+68h+var_C], 20h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_forward_0 
mov	[esp+30h+var_C], 20h
pop	esi
test	eax, eax
jz	short loc_1006BE3D
test	edx, edx
jz	short loc_1006BE3D
mov	eax, [eax]
cmp	eax, 5
jz	short loc_1006BE21
cmp	eax, 0Ah
jz	short loc_1006BE21
cmp	eax, 0Dh
jz	short loc_1006BE21
cmp	eax, 3
jz	short loc_1006BE21
push	ebx
push	1
lea	eax, [esp+34h+var_2C]
push	20h
push	eax
mov	dword ptr [edx], 0
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
push	ebx
push	1
lea	eax, [esp+34h+var_2C]
push	20h
push	eax
mov	dword ptr [edx], 1
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
push	ebx
push	1
lea	ecx, [esp+34h+var_2C]
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 38h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_0]
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_2C], offset aPkix_build_s_0 
mov	[esp+48h+var_C], 3
cmp	edi, ebx
jz	loc_1006C027
mov	ebp, [esp+48h+arg_4]
cmp	ebp, ebx
jz	loc_1006C027
cmp	[esp+48h+arg_8], ebx
jz	loc_1006C027
mov	esi, [esp+48h+arg_C]
push	esi
push	5
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1006BEF3
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2E3h
jmp	loc_1006BFAB
push	esi
push	5
push	ebp
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1006BF1B
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 2E3h
jmp	loc_1006BFAB
push	esi
lea	edx, [esp+4Ch+var_38]
push	edx
push	edi
call	sub_100804C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1006BF43
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 92h
jmp	short loc_1006BFAB
push	esi
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	ebp
call	sub_100804C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1006BF6B
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 92h
jmp	short loc_1006BFAB
mov	ecx, [esp+48h+var_34]
mov	edx, [esp+48h+var_38]
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
push	ecx
push	edx
call	sub_10095CE0
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1006BF9C
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2C0h
jmp	short loc_1006BFAB
mov	edx, [esp+48h+arg_8]
xor	ecx, ecx
cmp	[esp+48h+var_30], ebx
setz	cl
mov	[edx], ecx
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_1006BFDC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_1006BFD8
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_38], ebx
mov	eax, [esp+48h+var_34]
cmp	eax, ebx
jz	short loc_1006C00D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_1006C009
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_34], ebx
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	eax, [esp+48h+arg_C]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 50h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	esi, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_40], ebp
mov	[esp+5Ch+var_3C], ebp
mov	[esp+5Ch+var_38], ebp
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_34], ebp
mov	[esp+5Ch+var_30], ebp
mov	[esp+5Ch+var_2C], offset aPkix_build_ver 
mov	[esp+5Ch+var_C], 3
cmp	esi, ebp
jz	loc_1006C559
mov	edi, [esp+5Ch+arg_8]
cmp	edi, ebp
jz	loc_1006C559
cmp	[esi+60h], ebp
jz	loc_1006C54D
cmp	[esi+4Ch], ebp
jz	loc_1006C54D
cmp	[esi+58h], ebp
jz	loc_1006C54D
mov	eax, [esi+50h]
cmp	eax, ebp
jz	short loc_1006C100
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C100
push	ebx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
jmp	loc_1006C4C6
			
mov	ecx, [esi+50h]
xor	eax, eax
mov	[esp+5Ch+arg_0], ecx
cmp	[esi+80h], ebp
jz	short loc_1006C11B
cmp	[esi+0C8h], ebp
setnz	al
inc	eax
push	ebx
lea	edx, [esp+60h+var_4C]
push	edx
push	eax
push	ecx
call	sub_10080E20
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1006C147
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 98h
jmp	loc_1006C4A5
mov	ecx, [esp+5Ch+var_4C]
mov	eax, [esp+5Ch+arg_0]
push	ebx
lea	edx, [esp+60h+var_3C]
push	edx
mov	[edi], ecx
mov	ecx, [esi+58h]
push	eax
push	ecx
call	sub_10077130
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1006C180
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 27Ch
jmp	loc_1006C4A5
cmp	[esp+5Ch+var_3C], ebp
jz	loc_1006C233
mov	edi, [esp+5Ch+arg_C]
cmp	edi, ebp
jz	short loc_1006C1F9
mov	ecx, [esp+5Ch+var_2C]
push	ebx
lea	eax, [esp+60h+var_44]
push	eax
push	ebp
push	3
push	296h
push	ecx
push	3
mov	[esp+78h+var_44], ebp
call	sub_100723C0
add	esp, 1Ch
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C1C3
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_24], ebp
mov	eax, [edi+0Ch]
cmp	eax, ebp
jz	short loc_1006C1F2
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C1EF
push	ebx
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
mov	[edi+0Ch], ebp
mov	eax, [esp+5Ch+var_44]
mov	[edi+0Ch], eax
cmp	[esp+5Ch+var_4C], ebp
jnz	short loc_1006C22C
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1006C21F
mov	ecx, [esp+5Ch+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	296h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+5Ch+var_1C], 296h
jmp	loc_1006C49D
mov	dword ptr [esi+44h], 1
mov	edi, [esp+5Ch+arg_4]
cmp	edi, ebp
jz	loc_1006C337
push	ebx
lea	edx, [esp+60h+var_40]
push	edx
push	edi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1006C26A
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 284h
jmp	loc_1006C4A5
xor	esi, esi
cmp	[esp+5Ch+var_40], ebp
jbe	loc_1006C337
push	ebx
lea	ecx, [esp+60h+var_50]
push	ecx
push	esi
push	edi
call	sub_10075D80
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1006C378
mov	eax, [esp+5Ch+var_50]
push	ebx
lea	edx, [esp+60h+var_38]
push	edx
push	eax
call	sub_10056740
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1006C38C
cmp	[esp+5Ch+var_38], 1
jnz	short loc_1006C2FB
mov	edx, [esp+5Ch+var_50]
push	ebx
lea	ecx, [esp+60h+var_34]
push	ecx
push	edx
call	sub_100566C0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1006C3A0
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+var_50]
push	ebx
lea	eax, [esp+60h+var_30]
push	eax
push	ebp
push	ecx
push	edx
call	[esp+70h+var_34]
add	esp, 14h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1006C3B4
mov	eax, [esp+5Ch+var_50]
cmp	eax, ebp
jz	short loc_1006C32C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C328
push	ebx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
mov	[esp+5Ch+var_50], ebp
inc	esi
cmp	esi, [esp+5Ch+var_40]
jb	loc_1006C276
			
cmp	[esp+5Ch+var_4C], ebp
jz	loc_1006C4A5
mov	ecx, [esp+5Ch+arg_0]
push	ebx
lea	eax, [esp+60h+var_48]
push	eax
push	ecx
mov	[esp+68h+var_44], ebp
call	sub_1007E7B0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jz	loc_1006C443
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 91h
jmp	loc_1006C4A5
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 283h
jmp	loc_1006C4A5
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 57h
jmp	loc_1006C4A5
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 55h
jmp	loc_1006C4A5
mov	[esp+5Ch+var_14], 1
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
cmp	ecx, 1Fh
jz	loc_1006C4A5
mov	esi, [esp+5Ch+arg_C]
cmp	esi, ebp
jz	short loc_1006C439
mov	ecx, [esi+0Ch]
cmp	ecx, ebp
jz	short loc_1006C407
push	ebx
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C400
push	ebx
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
mov	eax, [esp+5Ch+var_28]
mov	[esi+0Ch], ebp
cmp	eax, ebp
jz	short loc_1006C436
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C432
push	ebx
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
jmp	short loc_1006C4A5
mov	eax, [esp+5Ch+var_28]
mov	[esi+0Ch], eax
mov	[esp+5Ch+var_1C], 40Fh
jmp	short loc_1006C4A5
mov	ecx, [esp+5Ch+var_48]
push	ebx
lea	eax, [esp+60h+var_44]
push	eax
push	ecx
call	sub_1008F4F0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1006C46F
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 38Fh
jmp	short loc_1006C4A5
cmp	[esp+5Ch+var_44], ebp
jz	short loc_1006C4A5
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1006C495
mov	ecx, [esp+5Ch+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	29Ch
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+5Ch+var_1C], 29Ch
mov	[esp+5Ch+var_18], 1
			
mov	eax, [esp+5Ch+arg_0]
cmp	eax, ebp
jz	short loc_1006C4D2
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C4D2
push	ebx
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
mov	[esp+68h+var_24], ebp
add	esp, 0Ch
			
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebp
jz	short loc_1006C503
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C4FF
push	ebx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
mov	[esp+5Ch+var_48], ebp
mov	eax, [esp+5Ch+var_50]
cmp	eax, ebp
jz	short loc_1006C534
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006C530
push	ebx
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
mov	[esp+5Ch+var_50], ebp
push	ebx
push	1
lea	edx, [esp+64h+var_2C]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 50h
retn
			
push	ebx
push	1
push	1Fh
lea	eax, [esp+68h+var_2C]
push	eax
jmp	short loc_1006C563
			
push	ebx
push	1
push	1Fh
lea	ecx, [esp+68h+var_2C]
push	ecx
mov	[esp+6Ch+var_1C], 2BCh
mov	[esp+6Ch+var_18], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 50h
retn
align 10h
			
sub	esp, 84h
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+90h+var_84]
rep movsd
mov	[esp+90h+var_58], ebp
mov	[esp+90h+var_30], ebp
mov	[esp+90h+var_44], ebp
mov	[esp+90h+var_4C], ebp
mov	[esp+90h+var_24], ebp
mov	[esp+90h+var_1C], ebp
mov	[esp+90h+var_34], ebp
mov	[esp+90h+var_28], ebp
mov	[esp+90h+var_38], ebp
mov	[esp+90h+var_50], ebp
mov	[esp+90h+var_2C], ebp
mov	[esp+90h+var_54], ebp
mov	[esp+90h+var_3C], ebp
mov	[esp+90h+var_48], ebp
mov	[esp+90h+var_40], ebp
mov	[esp+90h+var_14], ebp
mov	[esp+90h+var_8], ebp
mov	[esp+90h+var_10], ebp
mov	[esp+90h+var_18], ebp
mov	[esp+90h+var_4], ebp
mov	[esp+90h+var_84], offset aPkix_build_val 
mov	[esp+90h+var_64], 3
cmp	[esp+90h+arg_0], ebp
jz	loc_1006D15F
cmp	[esp+90h+arg_4], ebp
jz	loc_1006D15F
cmp	[esp+90h+arg_8], ebp
jz	loc_1006D15F
lea	eax, [esp+90h+var_58]
push	ebx
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C665
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 27Dh
jmp	loc_1006CE64
mov	eax, [esp+90h+arg_4]
push	ebx
lea	edx, [esp+94h+var_44]
push	edx
push	eax
call	sub_10076300
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C697
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 28Ch
jmp	loc_1006CE64
mov	eax, [esp+90h+var_44]
push	ebx
lea	edx, [esp+94h+var_20]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C6C6
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 284h
jmp	loc_1006CE64
mov	edi, [esp+90h+arg_0]
mov	esi, [edi+98h]
cmp	[esp+90h+arg_C], ebp
jz	loc_1006C830
mov	eax, [edi+9Ch]
push	ebx
lea	edx, [esp+94h+var_54]
push	edx
push	eax
call	sub_10057AE0
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C711
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 1BBh
jmp	loc_1006CE64
mov	edx, [esp+90h+var_54]
mov	eax, [esp+90h+var_58]
push	ebx
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C740
			
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 278h
jmp	loc_1006CE64
mov	eax, [esp+90h+var_54]
cmp	eax, ebp
jz	short loc_1006C771
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006C76D
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_54], ebp
push	ebx
lea	eax, [esp+94h+var_3C]
push	eax
push	esi
call	sub_10061B40
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C79C
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 375h
jmp	loc_1006CE64
mov	eax, [esp+90h+var_20]
mov	ecx, [esp+90h+var_3C]
push	ebx
lea	edx, [esp+94h+var_54]
push	edx
push	eax
push	ecx
call	sub_1005F9F0
add	esp, 10h
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C7D0
mov	edx, [eax+4]
mov	[esp+90h+var_68], edx
mov	[esp+90h+var_74], 1BBh
jmp	loc_1006CE64
mov	eax, [esp+90h+var_54]
mov	ecx, [esp+90h+var_58]
push	ebx
push	eax
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C7FF
mov	edx, [eax+4]
mov	[esp+90h+var_68], edx
mov	[esp+90h+var_74], 278h
jmp	loc_1006CE64
mov	eax, [esp+90h+var_54]
cmp	eax, ebp
jz	short loc_1006C830
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006C82C
push	ebx
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_54], ebp
			
push	ebx
lea	ecx, [esp+94h+var_30]
push	ecx
push	esi
call	sub_10061D60
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C85B
mov	edx, [eax+4]
mov	[esp+90h+var_68], edx
mov	[esp+90h+var_74], 36Fh
jmp	loc_1006CE64
push	ebx
lea	eax, [esp+94h+var_8]
push	eax
push	esi
call	sub_10062050
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C889
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 371h
jmp	loc_1006CE64
push	ebx
lea	edx, [esp+94h+var_10]
push	edx
push	esi
call	sub_10062900
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C8B7
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 379h
jmp	loc_1006CE64
push	ebx
lea	ecx, [esp+94h+var_18]
push	ecx
push	esi
call	sub_100626C0
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C8E2
mov	edx, [eax+4]
mov	[esp+90h+var_68], edx
mov	[esp+90h+var_74], 377h
jmp	loc_1006CE64
push	ebx
lea	eax, [esp+94h+var_4]
push	eax
push	esi
call	sub_100627E0
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C910
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 378h
jmp	loc_1006CE64
mov	eax, [esp+90h+var_20]
mov	ecx, [esp+90h+var_18]
push	ebx
lea	edx, [esp+94h+var_38]
push	edx
mov	edx, [esp+98h+var_4]
push	eax
mov	eax, [esp+9Ch+var_10]
push	ecx
mov	ecx, [esp+0A0h+var_8]
push	edx
mov	edx, [esp+0A4h+var_30]
push	eax
push	ecx
push	edx
call	sub_1005E230
add	esp, 20h
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C961
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 342h
jmp	loc_1006CE64
mov	ecx, [esp+90h+var_38]
mov	edx, [esp+90h+var_58]
push	ebx
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C990
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 278h
jmp	loc_1006CE64
lea	ecx, [esp+90h+var_4C]
push	ebx
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006C9BA
mov	edx, [eax+4]
mov	[esp+90h+var_68], edx
mov	[esp+90h+var_74], 27Dh
jmp	loc_1006CE64
xor	esi, esi
cmp	dword_100BA6A4,	ebp
jz	loc_1006CA4E
mov	eax, offset dword_100BA6A4
lea	ecx, [ecx+0]
mov	edx, [eax]
push	ebx
lea	ecx, [esp+94h+var_40]
push	ecx
push	edx
call	sub_10096B50
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jnz	loc_1006CA8A
mov	eax, [esp+90h+var_40]
mov	ecx, [esp+90h+var_4C]
push	ebx
push	eax
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jnz	loc_1006C72C
mov	eax, [esp+90h+var_40]
cmp	eax, ebp
jz	short loc_1006CA3D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CA39
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_40], ebp
inc	esi
cmp	dword_100BA6A4[esi*4], ebp
lea	eax, dword_100BA6A4[esi*4]
jnz	short loc_1006C9D0
mov	eax, [edi+0B4h]
cmp	eax, ebp
jz	loc_1006CBDB
push	ebx
lea	edx, [esp+94h+var_C]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CA9E
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 284h
jmp	loc_1006CE64
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 32Eh
jmp	loc_1006CE64
xor	esi, esi
cmp	[esp+90h+var_C], ebp
jbe	loc_1006CBDB
lea	ecx, [ecx+0]
mov	edx, [edi+0B4h]
push	ebx
lea	ecx, [esp+94h+var_50]
push	ecx
push	esi
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jnz	loc_1006CC0D
mov	ecx, [esp+90h+var_50]
push	ebx
lea	eax, [esp+94h+var_14]
push	eax
push	ecx
call	sub_10056740
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jnz	loc_1006CC21
cmp	[esp+90h+var_14], 1
push	ebx
jnz	short loc_1006CB4D
mov	eax, [esp+94h+var_50]
lea	edx, [esp+94h+var_48]
push	edx
push	eax
call	sub_100569A0
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jnz	loc_1006CC35
mov	eax, [esp+90h+var_48]
cmp	eax, ebp
jz	short loc_1006CB9C
mov	ecx, [esp+90h+var_4C]
push	ebx
push	eax
push	ecx
call	sub_10077900
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CB6B
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 279h
jmp	loc_1006CE64
mov	edx, [esp+94h+var_50]
mov	eax, [esp+94h+var_58]
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jnz	loc_1006C72C
mov	eax, [esp+90h+var_48]
cmp	eax, ebp
jz	short loc_1006CB9C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CB98
push	ebx
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_48], ebp
			
mov	eax, [esp+90h+var_50]
cmp	eax, ebp
jz	short loc_1006CBCD
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CBC9
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_50], ebp
inc	esi
cmp	esi, [esp+90h+var_C]
jb	loc_1006CAB0
			
mov	esi, [esp+90h+arg_8]
push	ebx
lea	edx, [esp+94h+var_24]
push	edx
push	esi
call	sub_10060600
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CC49
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 3E4h
jmp	loc_1006CE64
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 283h
jmp	loc_1006CE64
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 56h
jmp	loc_1006CE64
mov	edx, [eax+4]
mov	[esp+90h+var_68], edx
mov	[esp+90h+var_74], 56h
jmp	loc_1006CE64
mov	edx, [esp+90h+var_24]
push	ebx
lea	ecx, [esp+94h+var_1C]
push	ecx
push	edx
call	sub_1007E7B0
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CC78
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 91h
jmp	loc_1006CE64
mov	edx, [esp+90h+var_20]
mov	eax, [esp+90h+var_1C]
push	ebx
lea	ecx, [esp+94h+var_28]
push	ecx
push	edx
push	eax
call	sub_1005EB90
add	esp, 10h
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CCAC
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 3B5h
jmp	loc_1006CE64
mov	edx, [esp+90h+var_28]
mov	eax, [esp+90h+var_58]
push	ebx
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CCDB
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 278h
jmp	loc_1006CE64
push	ebx
lea	edx, [esp+94h+var_34]
push	edx
push	esi
call	sub_100606D0
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CD06
mov	eax, [eax+4]
mov	[esp+90h+var_68], eax
mov	[esp+90h+var_74], 3E3h
jmp	loc_1006CE64
mov	edx, [esp+90h+var_20]
mov	eax, [esp+90h+var_34]
push	ebx
lea	ecx, [esp+94h+var_2C]
push	ecx
push	edx
push	eax
call	sub_100581B0
add	esp, 10h
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CD3A
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 2A4h
jmp	loc_1006CE64
mov	edx, [esp+90h+var_2C]
mov	eax, [esp+90h+var_58]
push	ebx
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+90h+var_80], eax
cmp	eax, ebp
jz	short loc_1006CD69
mov	ecx, [eax+4]
mov	[esp+90h+var_68], ecx
mov	[esp+90h+var_74], 278h
jmp	loc_1006CE64
mov	eax, [edi+64h]
cmp	eax, ebp
jz	short loc_1006CD98
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CD95
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[edi+64h], ebp
mov	eax, [esp+90h+var_44]
cmp	eax, ebp
jz	short loc_1006CDCA
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CDCA
push	ebx
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
jmp	loc_1006CE64
			
mov	eax, [edi+68h]
mov	ecx, [esp+90h+var_44]
mov	[edi+64h], ecx
cmp	eax, ebp
jz	short loc_1006CE00
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CDFD
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[edi+68h], ebp
mov	eax, [esp+90h+var_4C]
cmp	eax, ebp
jz	short loc_1006CE1A
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jnz	short loc_1006CDB2
mov	eax, [edi+6Ch]
mov	ecx, [esp+90h+var_4C]
mov	[edi+68h], ecx
cmp	eax, ebp
jz	short loc_1006CE50
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CE4D
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[edi+6Ch], ebp
mov	eax, [esp+90h+var_58]
mov	[edi+6Ch], eax
mov	[esp+90h+var_58], ebp
mov	[edi+1Ch], ebp
mov	[edi+20h], ebp
mov	[edi+3Ch], ebp
			
mov	eax, [esp+90h+var_40]
cmp	eax, ebp
jz	short loc_1006CE95
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CE91
push	ebx
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_40], ebp
mov	eax, [esp+90h+var_44]
cmp	eax, ebp
jz	short loc_1006CEC6
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CEC2
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_44], ebp
mov	eax, [esp+90h+var_4C]
cmp	eax, ebp
jz	short loc_1006CEF7
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CEF3
push	ebx
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_4C], ebp
mov	eax, [esp+90h+var_54]
cmp	eax, ebp
jz	short loc_1006CF28
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CF24
push	ebx
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_54], ebp
mov	eax, [esp+90h+var_58]
cmp	eax, ebp
jz	short loc_1006CF59
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CF55
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_58], ebp
mov	eax, [esp+90h+var_30]
cmp	eax, ebp
jz	short loc_1006CF8A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CF86
push	ebx
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_30], ebp
mov	eax, [esp+90h+var_24]
cmp	eax, ebp
jz	short loc_1006CFBB
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CFB7
push	ebx
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_24], ebp
mov	eax, [esp+90h+var_1C]
cmp	eax, ebp
jz	short loc_1006CFEC
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006CFE8
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_1C], ebp
mov	eax, [esp+90h+var_3C]
cmp	eax, ebp
jz	short loc_1006D01D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006D019
push	ebx
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_3C], ebp
mov	eax, [esp+90h+var_28]
cmp	eax, ebp
jz	short loc_1006D04E
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006D04A
push	ebx
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_28], ebp
mov	eax, [esp+90h+var_34]
cmp	eax, ebp
jz	short loc_1006D07F
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006D07B
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_34], ebp
mov	eax, [esp+90h+var_2C]
cmp	eax, ebp
jz	short loc_1006D0B0
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006D0AC
push	ebx
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_2C], ebp
mov	eax, [esp+90h+var_38]
cmp	eax, ebp
jz	short loc_1006D0E1
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006D0DD
push	ebx
push	eax
lea	ecx, [esp+98h+var_84]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_38], ebp
mov	eax, [esp+90h+var_50]
cmp	eax, ebp
jz	short loc_1006D112
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006D10E
push	ebx
push	eax
lea	edx, [esp+98h+var_84]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_50], ebp
mov	eax, [esp+90h+var_48]
cmp	eax, ebp
jz	short loc_1006D143
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+90h+var_7C], eax
cmp	eax, ebp
jz	short loc_1006D13F
push	ebx
push	eax
lea	eax, [esp+98h+var_84]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+90h+var_7C], ebp
mov	[esp+90h+var_48], ebp
push	ebx
push	1
lea	ecx, [esp+98h+var_84]
push	3
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 84h
retn
			
push	ebx
push	1
lea	edx, [esp+98h+var_84]
push	1Fh
push	edx
mov	[esp+0A0h+var_70], 1
mov	[esp+0A0h+var_74], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 84h
retn
align 10h
			
sub	esp, 40h
push	ebx
push	ebp
mov	ebp, [esp+48h+arg_10]
push	esi
push	edi
mov	ebx, eax
xor	eax, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	[esp+50h+var_34], eax
mov	[esp+50h+var_3C], eax
mov	[esp+50h+var_38], eax
mov	[esp+50h+var_40], eax
mov	[esp+50h+var_30], eax
mov	[esp+50h+var_2C], offset aPkix_build_v_0 
mov	[esp+50h+var_C], 3
cmp	ebx, eax
jz	loc_1006D416
mov	edi, [esp+50h+arg_0]
cmp	edi, eax
jz	loc_1006D416
mov	esi, [esp+50h+arg_4]
cmp	esi, eax
jz	loc_1006D416
cmp	[esp+50h+arg_8], eax
jz	loc_1006D416
mov	[esi], eax
mov	ecx, [ebx+64h]
push	ebp
lea	eax, [esp+54h+var_34]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1006D22D
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 284h
jmp	loc_1006D363
push	ebp
push	0
lea	eax, [esp+58h+var_38]
push	eax
lea	ecx, [esp+5Ch+var_3C]
push	ecx
lea	edx, [esp+60h+var_30]
push	edx
lea	eax, [ebx+30h]
push	eax
lea	ecx, [ebx+3Ch]
push	ecx
mov	ecx, [ebx+98h]
lea	edx, [ebx+20h]
push	edx
mov	edx, [ebx+68h]
lea	eax, [ebx+1Ch]
push	eax
mov	eax, [ebx+0BCh]
push	ecx
mov	ecx, [ebx+6Ch]
push	edx
mov	edx, [esp+7Ch+var_34]
push	eax
mov	eax, [ebx+64h]
push	ecx
push	edi
push	edx
push	eax
call	sub_10069DA0
mov	ecx, [esp+90h+var_30]
xor	ebx, ebx
add	esp, 40h
mov	[esp+50h+var_28], eax
cmp	ecx, ebx
jz	short loc_1006D28C
mov	[esi], ecx
jmp	loc_1006D363
cmp	eax, ebx
jz	loc_1006D323
mov	[esp+50h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_1006D363
mov	esi, [esp+50h+arg_C]
cmp	esi, ebx
jz	short loc_1006D319
mov	ecx, [esi+0Ch]
cmp	ecx, ebx
jz	short loc_1006D2E7
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1006D2E0
push	ebp
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	eax, [esp+50h+var_28]
mov	[esi+0Ch], ebx
cmp	eax, ebx
jz	short loc_1006D316
push	ebp
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1006D312
push	ebp
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
jmp	short loc_1006D363
mov	eax, [esp+50h+var_28]
mov	[esi+0Ch], eax
mov	[esp+50h+var_1C], 0E6h
jmp	short loc_1006D363
mov	ecx, [esp+50h+var_38]
mov	edx, [esp+50h+var_3C]
push	ebp
lea	eax, [esp+54h+var_40]
push	eax
push	ecx
push	edi
push	edx
call	sub_100673D0
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1006D355
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 41Bh
jmp	short loc_1006D363
mov	ecx, [esp+50h+var_40]
mov	edx, [esp+50h+arg_8]
mov	[edx], ecx
mov	[esp+50h+var_40], ebx
			
mov	eax, [esp+50h+var_3C]
test	eax, eax
jz	short loc_1006D396
push	ebp
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, esi
jz	short loc_1006D392
push	ebp
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], esi
mov	[esp+50h+var_3C], esi
mov	eax, [esp+50h+var_38]
test	eax, eax
jz	short loc_1006D3C9
push	ebp
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, esi
jz	short loc_1006D3C5
push	ebp
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], esi
mov	[esp+50h+var_38], esi
mov	eax, [esp+50h+var_40]
test	eax, eax
jz	short loc_1006D3FC
push	ebp
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, esi
jz	short loc_1006D3F8
push	ebp
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], esi
mov	[esp+50h+var_40], esi
push	ebp
push	1
lea	eax, [esp+58h+var_2C]
push	3
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
push	ebp
push	1
lea	ecx, [esp+58h+var_2C]
push	1Fh
push	ecx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_build_sor 
mov	[esp+3Ch+var_C], 3
test	eax, eax
jz	short loc_1006D4DE
test	ebp, ebp
jz	short loc_1006D4DE
push	ebx
lea	ecx, [esp+40h+var_30]
push	ecx
push	offset sub_1006BE70
push	eax
call	sub_10077C70
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1006D4BE
mov	edx, [eax+4]
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	3
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 27Bh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	3
push	ecx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 4Ch
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+58h+var_2C]
rep movsd
mov	esi, [esp+58h+arg_0]
mov	[esp+58h+var_4C], ebp
mov	[esp+58h+var_44], ebp
mov	[esp+58h+var_40], ebp
mov	[esp+58h+var_30], ebp
mov	[esp+58h+var_38], ebp
mov	[esp+58h+var_48], ebp
mov	[esp+58h+var_34], ebp
mov	[esp+58h+var_3C], ebp
mov	[esp+58h+var_2C], offset aPkix_build_bui 
mov	[esp+58h+var_C], 3
cmp	esi, ebp
jz	loc_1006DA2E
mov	eax, [esi+4Ch]
cmp	eax, ebp
jz	loc_1006DA2E
cmp	[esi+54h], ebp
jz	loc_1006DA2E
push	ebx
lea	ecx, [esp+5Ch+var_44]
push	ecx
push	eax
call	sub_1007DE20
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D5A3
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 83h
jmp	loc_1006D8C2
mov	ecx, [esi+4Ch]
push	ebx
lea	eax, [esp+5Ch+var_40]
push	eax
push	ecx
call	sub_1007ECB0
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D5D1
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 7Ah
jmp	loc_1006D8C2
lea	eax, [esp+58h+var_4C]
push	ebx
push	eax
call	sub_10054720
add	esp, 8
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D5FB
mov	ecx, [eax+4]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 0F0h
jmp	loc_1006D8C2
mov	edx, [esp+58h+var_44]
mov	eax, [esp+58h+var_4C]
push	ebx
push	edx
push	eax
call	sub_10054950
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D62A
mov	ecx, [eax+4]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 10Ch
jmp	loc_1006D8C2
mov	eax, [esp+58h+var_40]
cmp	eax, ebp
jz	short loc_1006D65D
mov	edx, [esp+58h+var_4C]
push	ebx
push	eax
push	edx
call	sub_100559C0
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D65D
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 10Dh
jmp	loc_1006D8C2
			
mov	eax, [esi+9Ch]
cmp	eax, ebp
jz	short loc_1006D691
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1006D691
push	ebx
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
jmp	loc_1006D8C2
			
mov	eax, [esi+9Ch]
mov	edx, [esp+58h+var_4C]
push	ebx
push	eax
push	edx
mov	[esp+64h+var_30], eax
call	sub_10054F00
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D6C6
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 106h
jmp	loc_1006D8C2
mov	ecx, [esi+4]
mov	edx, [esp+58h+var_4C]
push	ebx
push	ecx
push	edx
call	sub_10054AE0
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D6F4
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 104h
jmp	loc_1006D8C2
mov	ecx, [esi+54h]
mov	edx, [esp+58h+var_4C]
push	ebx
push	ecx
push	edx
call	sub_100551B0
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D722
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 10Bh
jmp	loc_1006D8C2
mov	edx, [esi+98h]
push	ebx
lea	ecx, [esp+5Ch+var_38]
push	ecx
push	edx
call	sub_10061B40
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D753
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 375h
jmp	loc_1006D8C2
mov	eax, [esp+58h+var_38]
cmp	eax, ebp
jz	loc_1006D7EC
push	ebx
lea	ecx, [esp+5Ch+var_48]
push	ecx
push	eax
call	sub_10053CF0
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D78A
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 0B5h
jmp	loc_1006D8C2
mov	eax, [esp+58h+var_48]
cmp	eax, ebp
jz	short loc_1006D7EC
push	ebx
lea	ecx, [esp+5Ch+var_3C]
push	ecx
push	eax
call	sub_10055410
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D7BD
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 0F5h
jmp	loc_1006D8C2
mov	ecx, [esp+58h+var_48]
push	ebx
lea	eax, [esp+5Ch+var_34]
push	eax
push	ecx
call	sub_100555D0
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D7EC
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 0F5h
jmp	loc_1006D8C2
			
mov	eax, [esp+58h+var_34]
mov	ecx, [esp+58h+var_4C]
push	ebx
push	eax
push	ecx
call	sub_10055650
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D81B
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 108h
jmp	loc_1006D8C2
mov	eax, [esp+58h+var_3C]
mov	ecx, [esp+58h+var_4C]
push	ebx
push	eax
push	ecx
call	sub_100554E0
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D847
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 107h
jmp	short loc_1006D8C2
push	ebx
lea	edi, [esi+70h]
push	edi
push	ebp
push	ebp
call	sub_10053B50
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D86F
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 0B1h
jmp	short loc_1006D8C2
mov	ecx, [esp+58h+var_4C]
mov	edx, [edi]
push	ebx
push	ecx
push	edx
call	sub_10053DC0
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D899
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 0CBh
jmp	short loc_1006D8C2
lea	ecx, [esi+60h]
push	ebx
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1006D8BF
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 27Dh
jmp	short loc_1006D8C2
mov	[esi+8], ebp
			
mov	eax, [esp+58h+var_4C]
cmp	eax, ebp
jz	short loc_1006D8F3
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1006D8EF
push	ebx
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_4C], ebp
mov	eax, [esp+58h+var_44]
cmp	eax, ebp
jz	short loc_1006D924
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1006D920
push	ebx
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_44], ebp
mov	eax, [esp+58h+var_40]
cmp	eax, ebp
jz	short loc_1006D955
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1006D951
push	ebx
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_40], ebp
mov	eax, [esp+58h+var_30]
cmp	eax, ebp
jz	short loc_1006D982
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1006D982
push	ebx
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
			
mov	eax, [esp+58h+var_3C]
cmp	eax, ebp
jz	short loc_1006D9B3
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1006D9AF
push	ebx
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_3C], ebp
mov	eax, [esp+58h+var_48]
cmp	eax, ebp
jz	short loc_1006D9E4
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1006D9E0
push	ebx
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_48], ebp
mov	eax, [esp+58h+var_38]
cmp	eax, ebp
jz	short loc_1006DA15
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1006DA11
push	ebx
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_38], ebp
push	ebx
push	1
lea	ecx, [esp+60h+var_2C]
push	3
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 4Ch
retn
			
push	ebx
push	1
lea	edx, [esp+60h+var_2C]
push	1Fh
push	edx
mov	[esp+68h+var_18], 1
mov	[esp+68h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 4Ch
retn
align 10h
sub	esp, 40h
push	ebp
push	esi
push	edi
xor	ebp, ebp
push	ebx
lea	eax, [esp+50h+var_34]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
push	ebp
push	ebp
mov	[esp+5Ch+var_38], ebp
mov	[esp+5Ch+var_3C], ebp
mov	[esp+5Ch+var_40], ebp
mov	[esp+5Ch+var_34], ebp
mov	[esp+5Ch+var_30], ebp
mov	[esp+5Ch+var_2C], offset aPkix_build_sel 
mov	[esp+5Ch+var_C], 3
call	sub_10053B50
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	loc_1006DBA4
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 0B1h
			
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebp
jz	short loc_1006DAF8
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006DAF4
push	ebx
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
			
mov	[esp+4Ch+var_40], ebp
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_1006DB29
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006DB25
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebp
jz	short loc_1006DB5A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006DB56
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_38], ebp
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebp
jz	short loc_1006DB8B
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006DB87
push	ebx
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_34], ebp
push	ebx
push	1
lea	edx, [esp+54h+var_2C]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	edx, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+var_34]
push	ebx
push	edx
push	eax
call	sub_10053DC0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1006DBD3
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 0CBh
jmp	loc_1006DAC7
mov	eax, [esp+4Ch+var_34]
push	ebx
lea	edx, [esp+50h+var_30]
push	edx
push	eax
call	sub_10053C70
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1006DC02
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 0B6h
jmp	loc_1006DAC7
mov	edi, [esp+4Ch+arg_0]
xor	esi, esi
cmp	[edi+0Ch], ebp
jbe	loc_1006DD4A
push	ebx
lea	edx, [esp+50h+var_38]
push	edx
push	esi
push	edi
call	sub_10075D80
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1006DD59
mov	ecx, [esp+4Ch+var_38]
push	ebx
lea	eax, [esp+50h+var_3C]
push	eax
push	ecx
call	sub_10060600
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1006DD6D
mov	edx, [esp+4Ch+var_3C]
mov	eax, [esp+4Ch+var_34]
push	ebx
push	edx
push	eax
call	[esp+58h+var_30]
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	short loc_1006DCB5
cmp	[esp+4Ch+var_40], ebp
jnz	short loc_1006DC86
lea	ecx, [esp+4Ch+var_40]
push	ebx
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1006DD81
mov	edx, [esp+4Ch+var_3C]
mov	eax, [esp+4Ch+var_40]
push	ebx
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1006DCDE
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 278h
jmp	loc_1006DAC7
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006DCDA
push	ebx
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_28], ebp
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_1006DD0F
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006DD0B
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebp
jz	short loc_1006DD40
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1006DD3C
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_38], ebp
inc	esi
cmp	esi, [edi+0Ch]
jb	loc_1006DC11
mov	edx, [esp+4Ch+var_40]
mov	eax, [esp+4Ch+arg_8]
mov	[eax], edx
jmp	loc_1006DAF4
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 283h
jmp	loc_1006DAC7
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3E4h
jmp	loc_1006DAC7
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 27Dh
jmp	loc_1006DAC7
align 10h
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_3C], ebp
mov	[esp+48h+var_2C], offset aPkix_build_rem 
mov	[esp+48h+var_C], 3
cmp	eax, ebp
jz	loc_1006DF32
mov	edi, [esp+48h+arg_4]
cmp	edi, ebp
jz	loc_1006DF32
mov	[esp+48h+var_34], ebp
cmp	[eax+0Ch], ebp
jbe	loc_1006DF32
jmp	short loc_1006DDF9
mov	eax, ecx
mov	edx, [esp+48h+var_34]
push	ebx
lea	ecx, [esp+4Ch+var_38]
push	ecx
push	edx
push	eax
xor	esi, esi
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1006DF97
jmp	short loc_1006DE20
align 10h
			
cmp	esi, [edi+0Ch]
jnb	loc_1006DF4B
mov	eax, [esp+48h+var_3C]
mov	[esp+48h+var_30], ebp
cmp	eax, ebp
jz	short loc_1006DE5E
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1006DE5A
push	ebx
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_3C], ebp
push	ebx
lea	ecx, [esp+4Ch+var_3C]
push	ecx
push	esi
push	edi
call	sub_10075D80
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1006DFA7
mov	eax, [esp+48h+var_3C]
mov	ecx, [esp+48h+var_38]
push	ebx
lea	edx, [esp+4Ch+var_30]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1006DFBB
cmp	[esp+48h+var_30], ebp
jnz	short loc_1006DEAA
inc	esi
jmp	loc_1006DE20
push	ebx
push	esi
push	edi
call	sub_10076100
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	loc_1006DE20
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 27Fh
mov	[esp+48h+var_10], edx
			
mov	eax, [esp+48h+var_3C]
cmp	eax, ebp
jz	short loc_1006DF01
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1006DEFD
push	ebx
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_3C], ebp
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_1006DF32
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1006DF2E
push	ebx
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
			
push	ebx
push	1
lea	edx, [esp+50h+var_2C]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_1006DF7C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1006DF78
push	ebx
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
mov	eax, [esp+48h+var_34]
mov	ecx, [esp+48h+arg_0]
inc	eax
mov	[esp+48h+var_34], eax
cmp	eax, [ecx+0Ch]
jb	loc_1006DDF7
jmp	loc_1006DED0
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 283h
jmp	loc_1006DECC
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 283h
jmp	loc_1006DED0
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 2CBh
jmp	loc_1006DED0
align 10h
sub	esp, 4Ch
push	ebx
push	ebp
mov	ebp, [esp+54h+arg_0]
push	esi
push	edi
mov	ebx, eax
xor	eax, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_40], eax
mov	[esp+5Ch+arg_0], eax
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_2C], offset aPkix_build_gat 
mov	[esp+5Ch+var_C], 3
cmp	ebp, eax
jz	loc_1006E4D8
mov	edi, [esp+5Ch+arg_4]
cmp	edi, eax
jz	loc_1006E4D8
mov	ecx, [esp+5Ch+arg_8]
cmp	ecx, eax
jz	loc_1006E4D8
mov	edx, [ecx]
mov	[ecx], eax
mov	ecx, [ebp+60h]
mov	[esp+5Ch+var_48], edx
cmp	ecx, eax
jz	short loc_1006E080
push	ebx
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
test	eax, eax
jz	short loc_1006E077
push	ebx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], 0
mov	dword ptr [ebp+60h], 0
xor	eax, eax
mov	ecx, [ebp+8]
cmp	ecx, [ebp+84h]
jnb	loc_1006E256
nop
mov	eax, [ebp+8]
mov	ecx, [ebp+0ACh]
push	ebx
lea	edx, [esp+60h+arg_0]
push	edx
push	eax
push	ecx
call	sub_10075D80
xor	esi, esi
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, esi
jnz	loc_1006E29F
mov	eax, [esp+5Ch+arg_0]
push	ebx
lea	edx, [esp+60h+var_3C]
push	edx
push	eax
call	sub_1007B750
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, esi
jnz	loc_1006E2B3
mov	ecx, [ebp+38h]
cmp	ecx, [esp+5Ch+var_3C]
jnz	loc_1006E211
cmp	dword ptr [ebp+0], 5
jnz	short loc_1006E0F3
mov	[esp+5Ch+var_44], esi
mov	[esp+5Ch+var_40], esi
jmp	short loc_1006E14E
mov	eax, [esp+5Ch+arg_0]
push	ebx
lea	edx, [esp+60h+var_44]
push	edx
push	eax
call	sub_1007B6D0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, esi
jnz	loc_1006E2C7
cmp	[esp+5Ch+var_44], esi
jz	short loc_1006E144
mov	eax, [ebp+9Ch]
push	ebx
lea	ecx, [esp+60h+var_4C]
push	ecx
mov	ecx, [esp+64h+arg_0]
lea	edx, [esp+64h+var_40]
push	edx
push	eax
push	edi
push	ecx
call	sub_10073100
add	esp, 18h
mov	[esp+5Ch+var_28], eax
cmp	eax, esi
jnz	loc_1006E2DB
cmp	[esp+5Ch+var_40], esi
jnz	loc_1006E207
push	ebx
cmp	[esp+60h+var_48], esi
jnz	short loc_1006E1AE
mov	eax, [esp+60h+arg_0]
lea	edx, [esp+60h+var_38]
push	edx
push	eax
call	sub_1007B390
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, esi
jnz	loc_1006E2EF
mov	eax, [ebp+74h]
push	ebx
lea	ecx, [esp+60h+var_4C]
push	ecx
mov	ecx, [ebp+70h]
lea	edx, [esp+64h+var_48]
push	edx
mov	edx, [esp+68h+arg_0]
push	eax
push	ecx
push	edx
call	[esp+74h+var_38]
add	esp, 18h
mov	[esp+5Ch+var_28], eax
cmp	eax, esi
jz	short loc_1006E1D9
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 203h
jmp	loc_1006E45C
mov	edx, [ebp+74h]
lea	eax, [esp+60h+var_4C]
push	eax
mov	eax, [ebp+70h]
lea	ecx, [esp+64h+var_48]
push	ecx
mov	ecx, [esp+68h+arg_0]
push	edx
push	eax
push	ecx
call	sub_1007B490
add	esp, 18h
mov	[esp+5Ch+var_28], eax
cmp	eax, esi
jnz	loc_1006E303
cmp	[esp+5Ch+var_44], esi
jz	short loc_1006E207
mov	eax, [esp+5Ch+var_4C]
cmp	eax, esi
jz	loc_1006E32B
mov	edx, [esp+5Ch+arg_0]
push	ebx
push	eax
push	edi
push	edx
call	sub_10073850
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, esi
jnz	loc_1006E317
			
cmp	[esp+5Ch+var_4C], esi
jz	loc_1006E32B
mov	eax, [esp+5Ch+arg_0]
cmp	eax, esi
jz	short loc_1006E242
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, esi
jz	short loc_1006E23E
push	ebx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], esi
mov	[esp+5Ch+arg_0], esi
inc	dword ptr [ebp+8]
mov	ecx, [ebp+8]
cmp	ecx, [ebp+84h]
jb	loc_1006E090
xor	eax, eax
mov	ecx, [esp+5Ch+var_4C]
cmp	ecx, eax
jz	loc_1006E37A
cmp	dword ptr [ecx+0Ch], 1
jbe	loc_1006E37A
mov	[esp+5Ch+var_34], eax
lea	eax, [esp+5Ch+var_34]
push	eax
mov	eax, ecx
call	sub_1006D440
add	esp, 4
mov	[esp+5Ch+var_28], eax
test	eax, eax
jz	loc_1006E341
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 30h
jmp	loc_1006E45A
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 283h
jmp	loc_1006E45C
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 0DBh
jmp	loc_1006E45C
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 0D8h
jmp	loc_1006E45C
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 40h
jmp	loc_1006E45C
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 0D7h
jmp	loc_1006E45C
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 0CFh
jmp	loc_1006E45C
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 3Eh
jmp	loc_1006E45C
			
mov	ecx, [esp+5Ch+var_48]
mov	edx, [esp+5Ch+arg_8]
mov	dword ptr [ebp+0], 5
mov	[edx], ecx
jmp	loc_1006E45C
mov	eax, [esp+5Ch+var_4C]
test	eax, eax
jz	short loc_1006E372
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
test	eax, eax
jz	short loc_1006E372
push	ebx
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], 0
			
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_4C], eax
			
mov	edx, [ebp+0B0h]
lea	ecx, [esp+5Ch+var_30]
push	ecx
push	edi
push	edx
call	sub_1006DA60
mov	esi, [esp+68h+var_30]
xor	edi, edi
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, edi
jz	short loc_1006E3B1
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 1C4h
jmp	loc_1006E431
mov	ecx, [esp+5Ch+var_4C]
push	ecx
push	esi
call	sub_1006DDA0
add	esp, 8
mov	[esp+5Ch+var_28], eax
cmp	eax, edi
jz	short loc_1006E3D8
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 396h
jmp	short loc_1006E431
push	ebx
lea	eax, [ebp+60h]
push	eax
mov	eax, [esp+64h+var_4C]
push	eax
push	esi
call	sub_10077670
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, edi
jz	short loc_1006E404
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 288h
jmp	short loc_1006E431
mov	eax, [ebp+60h]
push	ebx
lea	edx, [ebp+0Ch]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, edi
jz	short loc_1006E42E
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 284h
jmp	short loc_1006E431
mov	[ebp+14h], edi
			
cmp	esi, edi
jz	short loc_1006E45A
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, edi
jz	short loc_1006E45A
push	ebx
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], edi
			
xor	esi, esi
			
mov	eax, [esp+5Ch+arg_0]
cmp	eax, esi
jz	short loc_1006E48D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, esi
jz	short loc_1006E489
push	ebx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], esi
mov	[esp+5Ch+arg_0], esi
mov	eax, [esp+5Ch+var_4C]
cmp	eax, esi
jz	short loc_1006E4BE
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, esi
jz	short loc_1006E4BA
push	ebx
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], esi
mov	[esp+5Ch+var_4C], esi
push	ebx
push	1
lea	edx, [esp+64h+var_2C]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
			
push	ebx
push	1
lea	eax, [esp+64h+var_2C]
push	1Fh
push	eax
mov	[esp+6Ch+var_18], 1
mov	[esp+6Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
align 10h
sub	esp, 38h
push	ebp
mov	ebp, [esp+3Ch+arg_0]
push	esi
push	edi
xor	eax, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_34], eax
mov	[esp+44h+var_30], eax
mov	[esp+44h+var_38], eax
mov	[esp+44h+var_2C], offset aPkix_build_upd 
mov	[esp+44h+var_C], 3
push	ebp
cmp	ebx, eax
jnz	short loc_1006E575
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
mov	edx, [ebx+50h]
lea	ecx, [esp+48h+var_34]
push	ecx
push	edx
call	sub_10081210
xor	esi, esi
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, esi
jz	short loc_1006E5E9
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 7Dh
			
mov	eax, [esp+44h+var_38]
cmp	eax, esi
jz	short loc_1006E5D0
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1006E5CC
push	ebp
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
			
mov	[esp+44h+var_38], esi
push	ebp
push	1
lea	eax, [esp+4Ch+var_2C]
push	3
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
cmp	[ebx+34h], esi
jz	short loc_1006E5FB
cmp	[esp+44h+var_34], esi
jz	short loc_1006E5FB
mov	eax, 1
jmp	short loc_1006E5FD
			
xor	eax, eax
mov	[ebx+34h], eax
cmp	eax, 1
jnz	short loc_1006E59F
mov	edx, [ebx+50h]
push	ebp
lea	ecx, [esp+48h+var_38]
push	ecx
push	edx
call	sub_100804C0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, esi
jz	short loc_1006E633
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 92h
jmp	loc_1006E59F
mov	eax, [ebx+48h]
mov	ecx, [esp+44h+var_38]
cmp	eax, esi
jz	short loc_1006E6A7
push	ebp
lea	edx, [esp+48h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095CE0
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, esi
jz	short loc_1006E66A
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 2C0h
jmp	loc_1006E59F
cmp	[esp+44h+var_30], esi
jle	loc_1006E59F
mov	eax, [ebx+48h]
cmp	eax, esi
jz	short loc_1006E6A3
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1006E6A0
push	ebp
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
mov	[ebx+48h], esi
mov	ecx, [esp+44h+var_38]
mov	[ebx+48h], ecx
jmp	loc_1006E5CC
align 10h
			
sub	esp, 90h
mov	eax, [esp+90h+arg_0]
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+98h+arg_C]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+0A0h+var_8C]
rep movsd
mov	[esp+0A0h+var_1C], ebx
mov	[esp+0A0h+var_10], ebx
mov	[esp+0A0h+var_8], ebx
mov	[esp+0A0h+var_30], ebx
mov	[esp+0A0h+var_C], ebx
mov	[esp+0A0h+var_58], ebx
mov	[esp+0A0h+var_38], ebx
mov	[esp+0A0h+var_20], ebx
mov	[esp+0A0h+var_14], ebx
mov	[esp+0A0h+var_18], ebx
mov	[esp+0A0h+var_28], ebx
mov	[esp+0A0h+var_40], ebx
mov	[esp+0A0h+var_50], ebx
mov	[esp+0A0h+var_44], ebx
mov	[esp+0A0h+var_34], ebx
mov	[esp+0A0h+var_3C], ebx
mov	[esp+0A0h+var_2C], ebx
mov	[esp+0A0h+var_24], ebx
mov	[esp+0A0h+var_54], ebx
mov	[esp+0A0h+var_4C], ebx
mov	[esp+0A0h+var_60], ebx
mov	[esp+0A0h+var_90], ebx
mov	[esp+0A0h+var_5C], ebx
mov	[esp+0A0h+var_48], ebx
mov	[esp+0A0h+var_4], ebx
mov	[esp+0A0h+var_8C], offset aPkix_buildforw 
mov	[esp+0A0h+var_6C], 3
cmp	eax, ebx
jz	loc_10070634
mov	esi, [esp+0A0h+arg_4]
cmp	esi, ebx
jz	loc_10070634
mov	edi, [esp+0A0h+arg_8]
cmp	edi, ebx
jz	loc_10070634
mov	ecx, [eax]
mov	[eax], ebx
mov	eax, [esi+48h]
mov	[esp+0A0h+var_48], ecx
cmp	eax, ebx
jz	short loc_1006E7C2
push	ebp
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, ebx
jz	short loc_1006E7C2
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
mov	[esp+0ACh+var_84], ebx
jmp	loc_1006FF8C
			
mov	eax, [esi+48h]
mov	ecx, [esi+34h]
mov	[esp+0A0h+var_58], eax
mov	eax, [edi]
mov	[esp+0A0h+var_30], ecx
cmp	eax, ebx
jz	short loc_1006E7FD
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, ebx
jz	short loc_1006E7FB
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], ebx
mov	[edi], ebx
			
mov	eax, [esp+0A0h+var_88]
xor	edi, edi
			
cmp	[esp+0A0h+var_1C], edi
jnz	loc_1006FF95
mov	ecx, [esp+0A0h+var_4]
mov	edx, ecx
inc	ecx
mov	[esp+0A0h+var_4], ecx
cmp	edx, 0FAh
ja	loc_1006F8E2
cmp	[esi+94h], edi
jz	loc_1006E8BB
mov	eax, [esp+0A0h+var_38]
cmp	eax, edi
jz	short loc_1006E86A
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006E866
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_38], edi
push	ebp
lea	ecx, [esp+0A4h+var_38]
push	ecx
push	edi
call	sub_10088CB0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F7EA
mov	eax, [esp+0A0h+var_38]
mov	ecx, [esi+0A0h]
push	ebp
lea	edx, [esp+0A4h+var_18]
push	edx
push	eax
push	ecx
call	sub_10095CE0
add	esp, 10h
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F7FE
cmp	[esp+0A0h+var_18], edi
jl	loc_1006F812
mov	eax, [esi]
cmp	eax, 1
jnz	loc_1006E9B1
push	esi
mov	ebx, ebp
call	sub_1006D510
add	esp, 4
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F91C
cmp	[esi+88h], edi
jbe	short loc_1006E914
mov	eax, [esi+58h]
push	ebp
lea	edx, [esp+0A4h+var_28]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F930
mov	eax, [esp+0A0h+var_28]
dec	eax
mov	[esp+0A0h+var_28], eax
cmp	eax, [esi+88h]
jb	short loc_1006E92C
mov	dword ptr [esi], 2
jmp	loc_1006E9B6
align 10h
mov	esi, [esp+0A0h+arg_4]
jmp	loc_1006E801
mov	eax, [esi+50h]
lea	ebx, [esi+50h]
cmp	eax, edi
jz	short loc_1006E95D
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006E95B
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[ebx], edi
mov	edx, [esp+0A0h+var_28]
mov	eax, [esi+0B8h]
push	ebp
push	ebx
push	edx
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F944
mov	ecx, [ebx]
mov	edx, [esi+60h]
push	ebp
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F958
mov	eax, 1
mov	[esi+0Ch], eax
mov	[esi+40h], eax
mov	dword ptr [esi], 6
jmp	loc_1006EBC3
cmp	eax, 2
jnz	short loc_1006E9CF
cmp	dword ptr [esi+38h], 1
jnz	short loc_1006E9C7
mov	dword ptr [esi], 4
jmp	loc_1006EBC3
mov	dword ptr [esi], 3
jmp	short loc_1006E9D8
cmp	eax, 3
jnz	loc_1006EBC3
mov	eax, [esi+0C0h]
cmp	eax, edi
jz	loc_1006EBC3
push	ebp
lea	ecx, [esp+0A4h+var_44]
push	ecx
mov	ecx, [esi+4Ch]
lea	edx, [esp+0A8h+var_48]
push	edx
push	ecx
push	eax
call	sub_10099170
mov	ecx, [esp+0B4h+var_48]
add	esp, 14h
mov	[esp+0A0h+var_88], eax
cmp	ecx, edi
jnz	loc_1006F96C
lea	ebx, [esi+0Ch]
mov	[ebx], edi
mov	eax, [esp+0A0h+var_88]
cmp	eax, edi
jz	loc_1006EB01
mov	eax, [eax+4]
mov	[esp+0A0h+var_70], eax
cmp	eax, 1Fh
jz	loc_1006FEAD
mov	eax, [esp+0A0h+var_5C]
xor	edi, edi
cmp	eax, edi
jz	short loc_1006EA5E
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006EA5E
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
			
mov	eax, [esp+0A0h+var_88]
mov	[esp+0A0h+var_5C], eax
mov	[esp+0A0h+var_88], edi
cmp	[esi+74h], edi
jz	loc_1006EB01
mov	edx, [esi+4Ch]
push	ebp
lea	ecx, [esp+0A4h+var_60]
push	ecx
push	edi
push	edi
push	edx
call	sub_10067620
add	esp, 14h
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F97A
mov	eax, [esp+0A0h+var_5C]
mov	ecx, [esp+0A0h+var_60]
push	ebp
push	eax
push	ecx
call	sub_100693D0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F9BD
mov	edx, [esp+0A0h+var_60]
mov	eax, [esi+74h]
push	ebp
push	edx
push	eax
call	sub_10067B60
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F9EF
mov	eax, [esp+0A0h+var_60]
cmp	eax, edi
jz	short loc_1006EB01
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006EAFD
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_60], edi
			
mov	eax, [esp+0A0h+var_44]
cmp	eax, edi
jz	loc_1006EBB5
push	ebp
lea	edx, [esp+0A4h+var_34]
push	edx
push	eax
mov	eax, [esi+70h]
push	eax
call	sub_10053ED0
add	esp, 10h
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FA32
mov	eax, [esp+0A0h+var_44]
cmp	eax, edi
jz	short loc_1006EB5D
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006EB59
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_44], edi
mov	edx, [esp+0A0h+var_34]
push	ebp
push	ebx
push	edx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FA46
mov	eax, [esi+60h]
cmp	eax, edi
jz	short loc_1006EBA7
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006EBA4
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esi+60h], edi
mov	ecx, [esp+0A0h+var_34]
mov	[esi+60h], ecx
mov	[esi+14h], edi
mov	[esp+0A0h+var_34], edi
xor	edx, edx
cmp	edx, [ebx]
sbb	eax, eax
and	eax, 2
add	eax, 4
mov	[esi], eax
			
mov	eax, [esp+0A0h+var_54]
cmp	eax, edi
jz	short loc_1006EBF4
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006EBF0
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_54], edi
mov	eax, [esi+70h]
push	ebp
lea	edx, [esp+0A4h+var_54]
push	edx
push	eax
call	sub_10053CF0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FA5A
mov	ecx, [esi]
cmp	ecx, 4
jz	short loc_1006EC1E
cmp	ecx, 5
jnz	short loc_1006EC5C
mov	edx, [esp+0A0h+var_54]
lea	ecx, [esp+0A0h+var_48]
push	ecx
push	edx
push	esi
mov	eax, ebp
call	sub_1006DFD0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FA6E
mov	ecx, [esp+0A0h+var_48]
cmp	ecx, edi
jnz	loc_1006F96C
cmp	[esi+0Ch], edi
jbe	loc_1006F0A5
mov	dword ptr [esi], 6
jmp	short loc_1006EC65
cmp	ecx, 6
jnz	loc_1006ED4B
mov	eax, [esi+50h]
lea	ebx, [esi+50h]
cmp	eax, edi
jz	short loc_1006EC96
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006EC94
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[ebx], edi
mov	ecx, [esi+14h]
mov	edx, [esi+60h]
push	ebp
push	ebx
push	ecx
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F944
cmp	[esi+74h], edi
jz	short loc_1006ECD8
mov	ecx, [ebx]
push	ebp
lea	eax, [esp+0A4h+var_60]
push	eax
push	edi
push	edi
push	ecx
call	sub_10067620
add	esp, 14h
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FA82
mov	edx, [esp+0A0h+var_60]
mov	ecx, [esi+0B4h]
push	edx
lea	eax, [esp+0A4h+var_10]
push	eax
push	ecx
push	esi
mov	ebx, ebp
call	sub_1006C060
mov	ecx, eax
add	esp, 10h
mov	[esp+0A0h+var_90], ecx
cmp	ecx, edi
jz	short loc_1006ED19
mov	[esp+0A0h+var_74], 1
mov	eax, [ecx+4]
mov	[esp+0A0h+var_70], eax
cmp	eax, 1Fh
jz	loc_1006FAC5
mov	eax, [esp+0A0h+var_88]
cmp	[esp+0A0h+var_78], edi
jnz	loc_1006F0DB
cmp	eax, edi
jnz	loc_1006F0DB
cmp	[esp+0A0h+var_74], edi
jnz	loc_1006F0DB
cmp	[esp+0A0h+var_64], edi
jnz	loc_1006F0DB
mov	dword ptr [esi], 8
jmp	short loc_1006ED54
cmp	ecx, 8
jnz	loc_1006EDDD
push	ebp
mov	ebx, esi
call	sub_1006E510
add	esp, 4
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FB4F
mov	eax, [esp+0A0h+var_58]
mov	edx, [esi+34h]
mov	[esp+0A0h+var_30], edx
cmp	eax, edi
jz	short loc_1006EDA3
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006ED9F
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_58], edi
mov	eax, [esi+48h]
cmp	eax, edi
jz	short loc_1006EDC0
push	ebp
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jnz	loc_1006FB63
cmp	[esp+0A0h+var_10], 1
mov	ecx, [esi+48h]
mov	[esp+0A0h+var_58], ecx
jz	loc_1006F1A7
mov	dword ptr [esi], 0Bh
jmp	short loc_1006EDF4
cmp	ecx, 9
jz	loc_1006F1AD
cmp	ecx, 0Ah
jz	loc_1006F1F2
cmp	ecx, 0Bh
jnz	short loc_1006EE1D
mov	edx, [esi+50h]
mov	eax, [esi+58h]
push	ebp
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F958
mov	dword ptr [esi], 0Eh
mov	eax, [esp+0A0h+var_88]
jmp	short loc_1006EE26
cmp	ecx, 0Eh
jnz	loc_1006F3DE
cmp	[esi+8Ch], edi
jz	short loc_1006EE3C
mov	ebx, 1
cmp	[esi+2Ch], ebx
jbe	loc_1006FBBF
mov	edx, [esi+50h]
push	ebp
lea	ecx, [esp+0A4h+var_8]
push	ecx
push	edx
call	sub_10072240
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FCE4
mov	ecx, [esi+54h]
push	ebp
lea	eax, [esp+0A4h+var_40]
push	eax
push	ecx
call	sub_100958C0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FCF8
mov	ebx, [esi+4]
cmp	[esp+0A0h+var_8], edi
jnz	loc_1006EFB4
mov	eax, [esi+50h]
push	ebp
lea	edx, [esp+0A4h+var_50]
push	edx
push	eax
inc	ebx
call	sub_1007E300
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FD0C
mov	eax, [esp+0A0h+var_50]
cmp	eax, edi
jz	short loc_1006EED6
push	ebp
lea	ecx, [esp+0A4h+var_20]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F930
mov	eax, [esp+0A0h+var_50]
jmp	short loc_1006EEDD
mov	[esp+0A0h+var_20], edi
xor	esi, esi
cmp	[esp+0A0h+var_20], edi
jbe	loc_1006EF7C
xor	edi, edi
mov	edi, edi
push	ebp
lea	edx, [esp+0A4h+var_3C]
push	edx
push	esi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FD20
mov	eax, [esp+0A0h+arg_4]
mov	eax, [eax+54h]
push	ebp
cmp	eax, edi
jz	loc_1006FD3D
mov	ecx, [esp+0A4h+var_3C]
push	ecx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FD4B
mov	eax, [esp+0A0h+var_3C]
cmp	eax, edi
jz	short loc_1006EF6A
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006EF66
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_3C], edi
mov	eax, [esp+0A0h+var_50]
inc	esi
cmp	esi, [esp+0A0h+var_20]
jb	loc_1006EEF0
xor	esi, esi
cmp	eax, esi
jz	short loc_1006EFAB
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, esi
jz	short loc_1006EFA7
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], esi
mov	[esp+0A0h+var_50], esi
mov	esi, [esp+0A0h+arg_4]
xor	edi, edi
mov	edx, [esi+58h]
mov	eax, [esp+0A0h+var_40]
push	ebp
lea	ecx, [esp+0A4h+var_24]
push	ecx
mov	ecx, [esi+50h]
push	esi
push	edx
mov	edx, [esp+0B0h+var_58]
push	eax
mov	eax, [esp+0B4h+var_30]
push	ecx
mov	ecx, [esi+2Ch]
push	edx
mov	edx, [esi+90h]
push	eax
dec	ecx
push	ecx
push	edx
push	ebx
call	sub_1006B060
add	esp, 2Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FD68
mov	eax, [esp+0A0h+var_40]
cmp	eax, edi
jz	short loc_1006F02A
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F026
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_40], edi
mov	eax, [esp+0A0h+var_54]
cmp	eax, edi
jz	short loc_1006F05B
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F057
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_54], edi
mov	edx, [esp+0A0h+var_60]
mov	ebx, [esp+0A0h+var_24]
push	ebp
mov	[ebx+74h], edx
push	esi
mov	[esp+0A8h+var_60], edi
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F08F
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_88]
mov	esi, ebx
mov	[esp+0A0h+arg_4], esi
mov	[esp+0A0h+var_24], edi
jmp	loc_1006E803
mov	dword ptr [esi], 7
mov	eax, [esp+0A0h+var_88]
mov	ebx, 1
cmp	[esi+38h], ebx
jnz	loc_1006F4B4
mov	ecx, [esi+90h]
mov	[esi+38h], edi
mov	[esi+8], edi
mov	[esi+28h], ecx
mov	dword ptr [esi], 2
mov	eax, [esp+0A0h+var_88]
jmp	loc_1006E803
			
cmp	[esi+74h], edi
jz	short loc_1006F152
push	ebp
push	ecx
mov	ecx, [esp+0A8h+var_60]
push	ecx
call	sub_100693D0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F862
mov	edx, [esp+0A0h+var_60]
mov	eax, [esi+74h]
push	ebp
push	edx
push	eax
call	sub_10067B60
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FAD2
mov	ecx, [esp+0A0h+var_60]
cmp	ecx, edi
jz	short loc_1006F14E
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F146
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_88]
mov	[esp+0A0h+var_60], edi
mov	ecx, [esp+0A0h+var_90]
mov	edx, [esp+0A0h+var_5C]
mov	[esp+0A0h+var_74], edi
cmp	edx, edi
jz	short loc_1006F18B
push	ebp
push	edx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F183
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_88]
mov	ecx, [esp+0A0h+var_90]
mov	[esp+0A0h+var_5C], ecx
mov	[esp+0A0h+var_90], edi
cmp	[esi+44h], edi
jnz	loc_1006FB15
mov	dword ptr [esi], 0Fh
jmp	loc_1006F3E7
mov	dword ptr [esi], 9
mov	ecx, [esi+50h]
push	ebp
lea	eax, [esp+0A4h+var_4C]
push	eax
push	ecx
call	sub_10060470
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FB7B
mov	edx, [esp+0A0h+var_4C]
mov	eax, [esi+58h]
push	edi
push	edx
push	eax
push	esi
mov	ebx, ebp
call	sub_1006C590
add	esp, 10h
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FB8F
mov	dword ptr [esi], 0Ah
mov	ecx, [esp+0A0h+var_60]
push	ebp
push	ecx
mov	ecx, [esp+0A8h+var_4C]
lea	edx, [esp+0A8h+var_2C]
push	edx
lea	eax, [esp+0ACh+var_48]
push	eax
push	ecx
mov	eax, esi
call	sub_1006D190
add	esp, 14h
mov	ecx, eax
mov	[esp+0A0h+var_90], ecx
cmp	[esp+0A0h+var_48], edi
jnz	loc_1006FF91
cmp	ecx, edi
jz	short loc_1006F23D
mov	[esp+0A0h+var_74], 1
mov	eax, [ecx+4]
mov	[esp+0A0h+var_70], eax
cmp	eax, 1Fh
jz	loc_1006FAC5
mov	eax, [esi+74h]
cmp	eax, edi
jz	short loc_1006F290
mov	edx, [esp+0A0h+var_60]
push	ebp
push	edx
push	eax
call	sub_10067B60
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F9EF
mov	eax, [esp+0A0h+var_60]
cmp	eax, edi
jz	short loc_1006F290
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F28C
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_60], edi
			
cmp	[esp+0A0h+var_78], edi
jnz	short loc_1006F2AC
cmp	[esp+0A0h+var_88], edi
jnz	short loc_1006F2AC
cmp	[esp+0A0h+var_74], edi
jnz	short loc_1006F2AC
cmp	[esp+0A0h+var_64], edi
jz	loc_1006FBA3
			
mov	eax, [esp+0A0h+var_5C]
cmp	eax, edi
jz	short loc_1006F2D9
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F2D9
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
			
mov	edx, [esp+0A0h+var_90]
mov	ecx, [esp+0A0h+var_4C]
xor	eax, eax
mov	[esp+0A0h+var_5C], edx
mov	[esp+0A0h+var_90], eax
mov	[esp+0A0h+var_74], edi
cmp	ecx, edi
jz	short loc_1006F320
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F318
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_90]
mov	[esp+0A0h+var_4C], edi
cmp	[esi+44h], edi
jz	loc_1006F3D6
cmp	eax, edi
jz	short loc_1006F356
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F352
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_90], edi
mov	eax, [esp+0A0h+var_88]
mov	ecx, [esp+0A0h+var_8C]
push	ebp
lea	edx, [esp+0A4h+var_90]
push	edx
push	eax
push	3
push	296h
push	ecx
push	3
call	sub_100723C0
add	esp, 1Ch
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F387
mov	[esp+0A0h+var_90], eax
mov	[esp+0A0h+var_84], edi
mov	edx, [esp+0A0h+var_90]
mov	eax, [esi+74h]
push	ebp
push	edx
push	eax
call	sub_100693D0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006F862
mov	eax, [esp+0A0h+var_90]
cmp	eax, edi
jz	short loc_1006F3D6
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F3D2
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_90], edi
			
mov	dword ptr [esi], 0Fh
jmp	short loc_1006F3E7
cmp	dword ptr [esi], 0Fh
jnz	loc_1006F0AF
			
mov	[esp+0A0h+var_74], edi
mov	eax, [esi+50h]
cmp	eax, edi
jz	short loc_1006F41A
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F417
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esi+50h], edi
mov	ebx, 1
cmp	[esi+40h], ebx
jnz	short loc_1006F480
mov	eax, [esi+60h]
lea	ebx, [esi+60h]
cmp	eax, edi
jz	short loc_1006F455
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F453
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[ebx], edi
push	ebp
push	ebx
call	sub_100755D0
add	esp, 8
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FD7C
mov	[esi+0Ch], edi
mov	[esi+40h], edi
mov	dword ptr [esi], 2
mov	eax, [esp+0A0h+var_88]
jmp	loc_1006E803
add	[esi+14h], ebx
mov	eax, [esi+14h]
cmp	eax, [esi+0Ch]
jnb	short loc_1006F4AB
cmp	[esi+90h], edi
jz	short loc_1006F49C
dec	dword ptr [esi+28h]
jz	loc_1006FD90
mov	dword ptr [esi], 6
mov	eax, [esp+0A0h+var_88]
jmp	loc_1006E803
mov	eax, [esp+0A0h+var_88]
jmp	loc_1006F0B4
			
cmp	[esi+7Ch], edi
jnz	short loc_1006F4C7
mov	[esp+0A0h+var_1C], ebx
xor	edi, edi
jmp	loc_1006F748
mov	eax, [esi+58h]
push	ebp
lea	edx, [esp+0A4h+var_14]
push	edx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FA46
mov	ecx, [esp+0A0h+var_14]
mov	edx, [esi+58h]
push	ebp
dec	ecx
push	ecx
push	edx
call	sub_10076100
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FE60
lea	edi, [esi+74h]
xor	ebx, ebx
cmp	[edi], ebx
jnz	short loc_1006F52F
mov	eax, [esi+4Ch]
push	ebp
push	edi
push	ebx
push	ebx
push	eax
call	sub_10067620
add	esp, 14h
mov	[esp+0A0h+var_88], eax
cmp	eax, ebx
jnz	loc_1006FE74
mov	ecx, [esp+0A0h+var_90]
cmp	ecx, ebx
jz	short loc_1006F564
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, ebx
jz	short loc_1006F55C
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], ebx
mov	eax, [esp+0A0h+var_88]
mov	[esp+0A0h+var_90], ebx
push	ebp
lea	edx, [esp+0A4h+var_90]
push	edx
push	eax
mov	eax, [esp+0ACh+var_8C]
push	3
push	3A6h
push	eax
push	3
call	sub_100723C0
add	esp, 1Ch
mov	[esp+0A0h+var_84], eax
cmp	eax, ebx
jz	short loc_1006F591
mov	[esp+0A0h+var_90], eax
mov	[esp+0A0h+var_84], ebx
mov	ecx, [esp+0A0h+var_90]
mov	edx, [edi]
push	ebp
push	ecx
push	edx
call	sub_100693D0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, ebx
jnz	loc_1006FEFD
mov	eax, [esp+0A0h+var_90]
cmp	eax, ebx
jz	short loc_1006F5DF
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, ebx
jz	short loc_1006F5DB
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], ebx
mov	[esp+0A0h+var_90], ebx
mov	eax, [esi+7Ch]
cmp	eax, ebx
jz	short loc_1006F5FC
push	ebp
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, ebx
jnz	loc_1006FF32
mov	eax, [esp+0A0h+var_60]
mov	ebx, [esi+7Ch]
test	eax, eax
jz	short loc_1006F638
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
test	eax, eax
jz	short loc_1006F630
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], 0
mov	[esp+0A0h+var_60], 0
mov	edx, [edi]
push	ebp
mov	[esp+0A4h+var_60], edx
push	esi
mov	dword ptr [edi], 0
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
test	eax, eax
jz	short loc_1006F66D
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
xor	edi, edi
mov	[esp+0A0h+var_84], edi
jmp	short loc_1006F66F
xor	edi, edi
mov	esi, ebx
mov	eax, [esi+74h]
mov	[esp+0A0h+arg_4], esi
cmp	eax, edi
jz	short loc_1006F6CF
mov	ecx, [esp+0A0h+var_60]
cmp	ecx, edi
jz	short loc_1006F6CF
push	ebp
push	ecx
push	eax
call	sub_10067B60
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_1006FF44
mov	eax, [esp+0A0h+var_60]
cmp	eax, edi
jz	short loc_1006F6CF
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F6CB
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_60], edi
			
mov	eax, [esp+0A0h+var_58]
cmp	eax, edi
jz	short loc_1006F700
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F6FC
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_58], edi
mov	eax, [esi+48h]
cmp	eax, edi
jz	short loc_1006F71D
push	ebp
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jnz	loc_1006FF7C
mov	ecx, [esi+34h]
mov	eax, [esi+48h]
mov	[esp+0A0h+var_30], ecx
mov	ecx, 1
add	[esi+14h], ecx
mov	[esp+0A0h+var_58], eax
mov	eax, [esi+14h]
cmp	eax, [esi+0Ch]
jb	short loc_1006F792
cmp	[esi+38h], ecx
jz	loc_1006F7D0
mov	eax, [esp+0A0h+var_88]
mov	ecx, [esi+50h]
cmp	ecx, edi
jz	short loc_1006F77B
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F774
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esi+50h], edi
mov	eax, [esp+0A0h+var_88]
cmp	[esp+0A0h+var_1C], edi
jnz	loc_1006E920
xor	edi, edi
lea	ebx, [edi+1]
jmp	loc_1006F4B4
mov	eax, [esi+50h]
mov	dword ptr [esi], 6
cmp	eax, edi
jz	loc_1006E7FD
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F7C8
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esi+50h], edi
jmp	loc_1006E7FD
mov	ecx, [esi+90h]
mov	[esi+38h], edi
mov	[esi+8], edi
mov	[esi+28h], ecx
mov	dword ptr [esi], 2
jmp	loc_1006E7FD
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 180h
jmp	loc_1006FF95
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 2C0h
jmp	loc_1006FF95
cmp	[esi+74h], edi
jz	loc_1006F8E2
mov	ecx, [esp+0A0h+var_8C]
push	ebp
lea	eax, [esp+0A4h+var_90]
push	eax
push	edi
push	3
push	3DBh
push	ecx
push	3
call	sub_100723C0
add	esp, 1Ch
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F848
mov	[esp+0A0h+var_90], eax
mov	[esp+0A0h+var_84], edi
mov	edx, [esp+0A0h+var_90]
mov	eax, [esi+74h]
push	ebp
push	edx
push	eax
call	sub_100693D0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jz	short loc_1006F8A5
			
mov	[esp+0A0h+var_78], 1
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_7C], 428h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAD
mov	ecx, [esp+0A0h+var_6C]
push	ebp
push	1
push	ecx
xor	edi, edi
push	edi
push	428h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
mov	ecx, [esp+0A0h+var_5C]
cmp	ecx, edi
jz	short loc_1006F8D6
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006F8D2
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_88]
mov	ecx, [esp+0A0h+var_90]
mov	[esp+0A0h+var_5C], ecx
mov	[esp+0A0h+var_90], edi
			
mov	ecx, dword_100BAE9C
cmp	ecx, edi
jz	short loc_1006F907
mov	edx, [esp+0A0h+var_6C]
push	ebp
push	2
push	edx
push	edi
push	3DBh
push	ecx
call	sub_10074820
mov	eax, [esp+0B8h+var_88]
add	esp, 18h
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 3DBh
jmp	loc_1006FF95
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 26h
jmp	loc_1006FF95
			
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 284h
jmp	loc_1006FF95
			
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 283h
jmp	loc_1006FF95
			
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 278h
jmp	loc_1006FF95
			
mov	edx, [esp+0A0h+arg_0]
mov	[edx], ecx
jmp	loc_1006FF95
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 424h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAD
mov	ecx, [esp+0A0h+var_6C]
push	ebp
push	1
push	ecx
xor	edi, edi
push	edi
push	424h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
mov	[esp+0A0h+var_78], 1
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_7C], 428h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAD
mov	edx, [esp+0A0h+var_6C]
push	ebp
push	1
push	edx
jmp	loc_1006F88F
			
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 423h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAD
mov	ecx, [esp+0A0h+var_6C]
push	ebp
push	1
push	ecx
xor	edi, edi
push	edi
push	423h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 0CAh
jmp	loc_1006FF95
			
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 284h
jmp	loc_1006FF95
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 0B5h
jmp	loc_1006FF95
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 29h
jmp	loc_1006FF95
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 424h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAD
mov	edx, [esp+0A0h+var_6C]
push	ebp
push	1
push	edx
xor	edi, edi
push	edi
push	424h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
			
mov	[esp+0A0h+var_88], ecx
mov	[esp+0A0h+var_90], edi
jmp	loc_1006FEAF
mov	[esp+0A0h+var_78], 1
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_7C], 423h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAD
mov	edx, [esp+0A0h+var_6C]
push	ebp
push	1
push	edx
xor	edi, edi
push	edi
push	423h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
mov	ecx, dword_100BAE9C
cmp	ecx, edi
jz	short loc_1006FB3A
mov	eax, [esp+0A0h+var_6C]
push	ebp
push	2
push	eax
push	edi
push	296h
push	ecx
call	sub_10074820
mov	eax, [esp+0B8h+var_88]
add	esp, 18h
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 296h
jmp	loc_1006FF95
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 33h
jmp	loc_1006FF95
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
jmp	loc_1006FF91
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 3E0h
jmp	loc_1006FF95
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 35h
jmp	loc_1006FF95
mov	edx, [esp+0A0h+var_2C]
mov	eax, [esp+0A0h+arg_8]
mov	[eax], edx
mov	[esp+0A0h+var_2C], edi
mov	dword ptr [esi], 9
jmp	loc_1006FF91
cmp	[esi+74h], edi
jz	loc_1006FCAE
mov	edx, [esp+0A0h+var_8C]
push	ebp
lea	ecx, [esp+0A4h+var_90]
push	ecx
push	eax
push	3
push	18Bh
push	edx
push	3
call	sub_100723C0
add	esp, 1Ch
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006FBF5
mov	[esp+0A0h+var_90], eax
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_90]
mov	ecx, [esp+0A0h+var_60]
push	ebp
push	eax
push	ecx
call	sub_100693D0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jz	short loc_1006FC19
mov	[esp+0A0h+var_78], ebx
jmp	loc_1006F9C5
mov	eax, [esp+0A0h+var_60]
mov	ecx, [esi+74h]
push	ebp
push	eax
push	ecx
call	sub_10067B60
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jz	short loc_1006FC3C
mov	[esp+0A0h+var_78], ebx
jmp	loc_1006FADA
mov	ecx, [esp+0A0h+var_60]
cmp	ecx, edi
jz	short loc_1006FC71
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006FC69
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_88]
mov	[esp+0A0h+var_60], edi
mov	ecx, [esp+0A0h+var_5C]
cmp	ecx, edi
jz	short loc_1006FCA2
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006FC9E
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_88]
mov	edx, [esp+0A0h+var_90]
mov	[esp+0A0h+var_5C], edx
mov	[esp+0A0h+var_90], edi
mov	ecx, dword_100BAE9C
cmp	ecx, edi
jz	short loc_1006FCD3
mov	eax, [esp+0A0h+var_6C]
push	ebp
push	2
push	eax
push	edi
push	18Bh
push	ecx
call	sub_10074820
mov	eax, [esp+0B8h+var_88]
add	esp, 18h
mov	[esp+0A0h+var_78], ebx
mov	[esp+0A0h+var_7C], 18Bh
jmp	loc_1006FF95
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 247h
jmp	loc_1006FF95
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 2C5h
jmp	loc_1006FF95
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 78h
jmp	loc_1006FF95
mov	ecx, [eax+4]
mov	esi, [esp+0A0h+arg_4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 283h
xor	edi, edi
jmp	loc_1006FF95
push	1
push	1Fh
lea	edx, [esp+0ACh+var_8C]
push	edx
jmp	loc_1007063E
mov	ecx, [eax+4]
mov	esi, [esp+0A0h+arg_4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 278h
xor	edi, edi
jmp	loc_1006FF95
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 1F8h
jmp	loc_1006FF95
mov	ecx, [eax+4]
mov	[esp+0A0h+var_70], ecx
mov	[esp+0A0h+var_7C], 27Dh
jmp	loc_1006FF95
mov	eax, [esp+0A0h+var_88]
cmp	[esi+74h], edi
jz	loc_1006FE2A
mov	ecx, [esp+0A0h+var_8C]
push	ebp
lea	edx, [esp+0A4h+var_90]
push	edx
push	eax
push	3
push	1CAh
push	ecx
push	3
call	sub_100723C0
add	esp, 1Ch
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006FDCA
mov	[esp+0A0h+var_90], eax
mov	[esp+0A0h+var_84], edi
mov	edx, [esp+0A0h+var_90]
mov	eax, [esi+74h]
push	ebp
push	edx
push	eax
call	sub_100693D0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jz	short loc_1006FDED
mov	[esp+0A0h+var_78], ebx
jmp	loc_1006F86A
mov	ecx, [esp+0A0h+var_5C]
cmp	ecx, edi
jz	short loc_1006FE1E
push	ebp
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1006FE1A
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_88]
mov	ecx, [esp+0A0h+var_90]
mov	[esp+0A0h+var_5C], ecx
mov	[esp+0A0h+var_90], edi
mov	ecx, dword_100BAE9C
cmp	ecx, edi
jz	short loc_1006FE4F
mov	edx, [esp+0A0h+var_6C]
push	ebp
push	2
push	edx
push	edi
push	1CAh
push	ecx
call	sub_10074820
mov	eax, [esp+0B8h+var_88]
add	esp, 18h
mov	[esp+0A0h+var_78], ebx
mov	[esp+0A0h+var_7C], 1CAh
jmp	loc_1006FF95
mov	edx, [eax+4]
mov	[esp+0A0h+var_70], edx
mov	[esp+0A0h+var_7C], 27Fh
jmp	loc_1006FF95
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 424h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, ebx
jz	short loc_1006FEAD
mov	ecx, [esp+0A0h+var_6C]
push	ebp
push	1
push	ecx
push	0
push	424h
			
push	eax
call	sub_10074820
add	esp, 18h
			
xor	edi, edi
			
cmp	[esi+7Ch], edi
jz	loc_100702F4
jmp	short loc_1006FEC0
align 10h
			
mov	ebx, [esi+7Ch]
cmp	ebx, edi
jz	loc_100702F4
push	ebp
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+0A0h+var_84], eax
push	ebp
cmp	eax, edi
jnz	loc_100702DD
push	esi
call	sub_100955D0
add	esp, 8
cmp	eax, edi
jz	short loc_1006FEF9
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	esi, ebx
jmp	short loc_1006FEC0
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 428h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, ebx
jz	short loc_1006FEAD
mov	edx, [esp+0A0h+var_6C]
push	ebp
push	1
push	edx
push	0
push	428h
jmp	loc_1006FEA4
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
mov	[esp+0ACh+var_84], ebx
jmp	short loc_1006FF8C
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 423h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAD
mov	ecx, [esp+0A0h+var_6C]
push	ebp
push	1
push	ecx
push	edi
push	423h
jmp	loc_1006FEA4
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
mov	[esp+0ACh+var_84], edi
			
add	esp, 0Ch
xor	edi, edi
			
mov	eax, [esp+0A0h+var_88]
			
cmp	[esp+0A0h+var_70], 1Fh
jz	loc_1006FEAF
mov	[esp+0A0h+var_90], eax
mov	ebx, ebp
lea	edx, [esp+0A0h+var_C]
mov	eax, esi
call	sub_1006BDC0
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jz	short loc_1006FFFD
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 1F7h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAF
mov	ecx, [esp+0A0h+var_6C]
push	ebp
push	1
push	ecx
push	edi
push	1F7h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
cmp	[esp+0A0h+var_C], edi
jnz	loc_1007013C
cmp	[esi+7Ch], edi
jz	loc_100700FB
mov	eax, [esp+0A0h+var_60]
mov	ecx, [esi+7Ch]
cmp	ecx, edi
jz	short loc_10070038
push	ebp
push	ecx
call	sub_10095450
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jnz	loc_100701C2
mov	eax, [esp+0A0h+var_60]
mov	ebx, [esi+7Ch]
cmp	eax, edi
jz	short loc_10070068
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070064
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_60], edi
mov	eax, [esi+74h]
push	ebp
mov	[esp+0A4h+var_60], eax
push	esi
mov	[esi+74h], edi
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070097
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	eax, [esp+0A0h+var_60]
mov	esi, ebx
mov	ecx, [esi+74h]
cmp	ecx, edi
jz	short loc_100700F2
cmp	eax, edi
jz	short loc_100700F2
push	ebp
push	eax
push	ecx
call	sub_10067B60
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jnz	loc_100701DA
mov	eax, [esp+0A0h+var_60]
cmp	eax, edi
jz	short loc_100700F2
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_100700EC
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
xor	eax, eax
mov	[esp+0A0h+var_60], eax
			
cmp	[esi+7Ch], edi
jnz	loc_10070017
mov	eax, [esi+48h]
mov	edx, [esp+0A0h+var_30]
mov	[esi+34h], edx
cmp	eax, edi
jz	short loc_10070131
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1007012E
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esi+48h], edi
mov	ecx, [esp+0A0h+var_58]
mov	[esi+48h], ecx
mov	[esp+0A0h+var_58], edi
mov	edx, [esp+0A0h+arg_8]
mov	eax, [esp+0A0h+var_90]
cmp	[edx], edi
jnz	loc_100702D0
cmp	eax, edi
jnz	loc_100702D0
mov	eax, [esp+0A0h+var_5C]
cmp	eax, edi
jnz	loc_10070223
mov	ecx, [esi+74h]
push	ebp
lea	eax, [esp+0A4h+var_5C]
push	eax
push	ecx
call	sub_100694E0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jz	loc_1007021B
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 426h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAF
mov	edx, [esp+0A0h+var_6C]
push	ebp
push	1
push	edx
push	edi
push	426h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
jmp	loc_1006FF91
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], 1
mov	[esp+0A0h+var_7C], 423h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAF
mov	ecx, [esp+0A0h+var_6C]
push	ebp
push	1
push	ecx
push	edi
push	423h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
mov	eax, [esp+0A0h+var_5C]
cmp	eax, edi
jz	short loc_10070238
mov	[esp+0A0h+var_88], eax
mov	[esp+0A0h+var_7C], 28h
mov	[esp+0A0h+var_5C], edi
jmp	loc_1006FEAF
mov	ecx, [esp+0A0h+var_8C]
push	ebp
lea	eax, [esp+0A4h+var_90]
push	eax
push	edi
push	3
push	3A6h
push	ecx
mov	ebx, 1
push	3
mov	[esp+0BCh+var_7C], 3A6h
mov	[esp+0BCh+var_78], ebx
call	sub_100723C0
add	esp, 1Ch
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070276
mov	[esp+0A0h+var_90], eax
mov	[esp+0A0h+var_84], edi
mov	edx, [esp+0A0h+var_90]
mov	eax, [esi+74h]
push	ebp
push	edx
push	eax
call	sub_100693D0
add	esp, 0Ch
mov	[esp+0A0h+var_88], eax
cmp	eax, edi
jz	loc_1006FEAF
mov	eax, dword_100BAE9C
mov	[esp+0A0h+var_78], ebx
mov	[esp+0A0h+var_7C], 428h
mov	[esp+0A0h+var_70], 1Fh
cmp	eax, edi
jz	loc_1006FEAF
mov	ecx, [esp+0A0h+var_6C]
push	ebp
push	ebx
push	ecx
push	edi
push	428h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1006FEAF
			
mov	[esp+0A0h+var_88], eax
mov	[esp+0A0h+var_90], edi
jmp	loc_1006FEAF
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
jmp	loc_1006FF91
			
xor	eax, eax
cmp	eax, edi
jz	short loc_1007031F
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1007031F
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
			
mov	eax, [esp+0A0h+var_24]
cmp	eax, edi
jz	short loc_1007034C
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1007034C
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
			
mov	eax, [esp+0A0h+var_2C]
cmp	eax, edi
jz	short loc_10070379
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070379
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
			
mov	eax, [esp+0A0h+var_90]
cmp	eax, edi
jz	short loc_100703AA
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_100703A6
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_90], edi
mov	eax, [esp+0A0h+var_5C]
cmp	eax, edi
jz	short loc_100703DB
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_100703D7
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_5C], edi
mov	eax, [esp+0A0h+var_60]
cmp	eax, edi
jz	short loc_1007040C
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070408
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_60], edi
mov	eax, [esp+0A0h+var_40]
cmp	eax, edi
jz	short loc_1007043D
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070439
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_40], edi
mov	eax, [esp+0A0h+var_54]
cmp	eax, edi
jz	short loc_1007046E
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1007046A
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_54], edi
mov	eax, [esp+0A0h+var_50]
cmp	eax, edi
jz	short loc_1007049F
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1007049B
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_50], edi
mov	eax, [esp+0A0h+var_3C]
cmp	eax, edi
jz	short loc_100704D0
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_100704CC
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_3C], edi
mov	eax, [esp+0A0h+var_4C]
cmp	eax, edi
jz	short loc_10070501
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_100704FD
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_4C], edi
mov	eax, [esp+0A0h+var_58]
cmp	eax, edi
jz	short loc_1007052E
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_1007052E
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
			
xor	eax, eax
cmp	eax, edi
jz	short loc_10070559
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070559
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
			
mov	eax, [esp+0A0h+var_38]
cmp	eax, edi
jz	short loc_1007058A
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070586
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_38], edi
mov	eax, [esp+0A0h+var_34]
cmp	eax, edi
jz	short loc_100705BB
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_100705B7
push	ebp
push	eax
lea	edx, [esp+0A8h+var_8C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_34], edi
mov	eax, [esp+0A0h+var_44]
cmp	eax, edi
jz	short loc_100705EC
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_100705E8
push	ebp
push	eax
lea	eax, [esp+0A8h+var_8C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
mov	[esp+0A0h+var_44], edi
xor	eax, eax
cmp	eax, edi
jz	short loc_10070617
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0A0h+var_84], eax
cmp	eax, edi
jz	short loc_10070617
push	ebp
push	eax
lea	ecx, [esp+0A8h+var_8C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0A0h+var_84], edi
			
push	ebp
push	1
lea	edx, [esp+0A8h+var_8C]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 90h
retn
			
push	ebp
push	1
push	1Fh
lea	eax, [esp+0ACh+var_8C]
push	eax
mov	[esp+0B0h+var_78], 1
mov	[esp+0B0h+var_7C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 90h
retn
align 10h
sub	esp, 54h
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ebx, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	edi, [esp+64h+arg_8]
mov	eax, [edi]
mov	esi, [esp+64h+arg_0]
mov	[edi], ebp
mov	edx, [esi+0B0h]
mov	ecx, [esi+0A4h]
mov	[esp+64h+arg_0], edx
push	ebx
lea	edx, [esp+68h+var_54]
push	edx
mov	[esp+6Ch+arg_8], eax
mov	eax, [esi+9Ch]
lea	edx, [esp+6Ch+var_38]
push	edx
push	eax
mov	eax, [esp+74h+arg_0]
push	eax
push	ecx
mov	[esp+7Ch+var_54], ebp
mov	[esp+7Ch+var_50], ebp
mov	[esp+7Ch+var_4C], ebp
mov	[esp+7Ch+var_3C], ebp
mov	[esp+7Ch+var_40], ebp
mov	[esp+7Ch+var_38], ebp
mov	[esp+7Ch+var_48], ebp
mov	[esp+7Ch+var_34], ebp
mov	[esp+7Ch+var_2C], offset aPkix_build_che 
mov	[esp+7Ch+var_C], 3
mov	[esp+7Ch+var_30], ecx
call	sub_100728A0
add	esp, 18h
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	loc_1007079D
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 40h
			
cmp	[esp+64h+arg_8], ebp
jnz	loc_10070A16
			
cmp	[esp+64h+var_38], ebp
jz	loc_10070A16
cmp	[esp+64h+var_48], ebp
jz	short loc_1007073E
cmp	[esp+64h+var_34], ebp
jnz	loc_10070A16
mov	ecx, [esp+64h+var_30]
mov	esi, eax
mov	eax, [esp+64h+arg_0]
push	ebx
push	eax
push	ecx
call	sub_10072C50
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	loc_10070A12
mov	eax, dword_100BAE9C
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 41h
mov	[esp+64h+var_10], 1Fh
cmp	eax, ebp
jz	loc_10070A18
mov	edx, [esp+64h+var_C]
push	ebx
push	1
push	edx
push	ebp
push	41h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_10070A18
cmp	[esp+64h+var_38], ebp
jz	loc_1007071A
mov	eax, [esp+64h+var_54]
push	ebx
lea	edx, [esp+68h+var_50]
push	edx
push	eax
call	sub_10064670
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_100707D6
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 2Eh
jmp	loc_1007071A
mov	eax, [esp+64h+var_50]
push	ebx
lea	edx, [esp+68h+var_4C]
push	edx
push	eax
call	sub_10067550
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_10070805
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 41Dh
jmp	loc_1007071A
mov	eax, [esp+64h+var_50]
cmp	eax, ebp
jz	short loc_10070836
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_10070832
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_50], ebp
mov	ecx, [esp+64h+var_4C]
push	ebx
lea	eax, [esp+68h+var_3C]
push	eax
push	ecx
call	sub_10060600
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_10070865
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 3E4h
jmp	loc_1007071A
mov	ecx, [esp+64h+arg_0]
cmp	ecx, ebp
jz	short loc_100708A5
cmp	[esi+80h], ebp
jz	short loc_100708A5
mov	edx, [esp+64h+var_4C]
push	ebx
lea	eax, [esp+68h+var_48]
push	eax
push	edx
push	ecx
call	sub_10077130
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_100708A5
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 27Ch
jmp	loc_1007071A
			
cmp	[esp+64h+var_48], ebp
jnz	short loc_100708B3
cmp	[esi+0C8h], ebp
jz	short loc_100708BB
cmp	[esi+80h], ebp
jnz	short loc_100708EB
mov	eax, [esp+64h+var_3C]
push	ebx
lea	edx, [esp+68h+var_48]
push	edx
push	ebp
push	eax
call	sub_10080E20
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_100708EB
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 98h
jmp	loc_1007071A
			
cmp	[esp+64h+var_48], ebp
jz	loc_1007071A
mov	eax, [esp+64h+var_54]
push	ebx
lea	edx, [esp+68h+var_40]
push	edx
push	eax
call	sub_10064740
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_10070924
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 2Dh
jmp	loc_1007071A
mov	edx, [esp+64h+var_4C]
mov	eax, [esp+64h+var_40]
push	1
push	edx
push	eax
push	esi
call	sub_1006C590
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_10070955
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 35h
jmp	loc_1007071A
mov	edx, [esi+74h]
push	ebx
push	edx
mov	edx, [esp+6Ch+var_4C]
lea	eax, [esp+6Ch+var_50]
push	eax
lea	ecx, [esp+70h+arg_8]
push	ecx
push	edx
mov	eax, esi
mov	[esp+78h+var_14], ebp
call	sub_1006D190
add	esp, 14h
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_100709C2
mov	[esp+64h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_1007071A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_100709BC
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
xor	eax, eax
mov	[esp+64h+var_28], eax
mov	ecx, [esp+64h+arg_8]
cmp	ecx, ebp
jz	short loc_100709D1
mov	[edi], ecx
jmp	loc_1007071A
cmp	[esp+64h+var_18], ebp
jnz	loc_10070724
cmp	eax, ebp
jnz	loc_10070724
cmp	[esp+64h+var_14], ebp
jnz	loc_10070724
cmp	[esp+64h+var_4], ebp
jnz	loc_10070724
mov	ecx, [esp+64h+var_54]
mov	edx, [esp+64h+arg_4]
mov	[edx], ecx
mov	[esp+64h+var_54], ebp
mov	[esp+64h+var_34], 1
jmp	loc_10070724
mov	[esp+64h+var_28], esi
			
mov	esi, ebp
			
mov	eax, [esp+64h+var_54]
cmp	eax, ebp
jz	short loc_10070A49
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_10070A45
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_54], ebp
mov	eax, [esp+64h+var_50]
cmp	eax, ebp
jz	short loc_10070A7A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_10070A76
push	ebx
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_50], ebp
cmp	esi, ebp
jz	short loc_10070AA3
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_10070AA3
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
			
mov	eax, [esp+64h+var_40]
cmp	eax, ebp
jz	short loc_10070AD4
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_10070AD0
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_40], ebp
mov	eax, [esp+64h+var_4C]
cmp	eax, ebp
jz	short loc_10070B05
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_10070B01
push	ebx
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_4C], ebp
mov	eax, [esp+64h+var_3C]
cmp	eax, ebp
jz	short loc_10070B36
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_10070B32
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_3C], ebp
push	ebx
push	1
lea	eax, [esp+6Ch+var_2C]
push	3
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 54h
retn
			
sub	esp, 0E0h
mov	eax, [esp+0E0h+arg_8]
mov	edx, [esp+0E0h+arg_4]
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+0ECh+var_E0]
rep movsd
mov	[esp+0ECh+var_5C], ebp
mov	[esp+0ECh+var_64], ebp
mov	[esp+0ECh+var_68], ebp
mov	[esp+0ECh+var_54], ebp
mov	[esp+0ECh+var_A0], ebp
mov	[esp+0ECh+var_8C], ebp
mov	[esp+0ECh+var_78], ebp
mov	[esp+0ECh+var_94], ebp
mov	[esp+0ECh+var_B4], ebp
mov	[esp+0ECh+var_9C], ebp
mov	[esp+0ECh+var_6C], ebp
mov	[esp+0ECh+var_AC], ebp
mov	[esp+0ECh+var_A4], ebp
mov	[esp+0ECh+var_70], ebp
mov	[esp+0ECh+var_B0], ebp
mov	[esp+0ECh+var_84], ebp
mov	[esp+0ECh+var_7C], ebp
mov	[esp+0ECh+var_98], ebp
mov	[esp+0ECh+var_90], ebp
mov	[esp+0ECh+var_88], ebp
mov	[esp+0ECh+var_60], ebp
mov	[esp+0ECh+var_50], ebp
mov	[esp+0ECh+var_58], ebp
mov	[esp+0ECh+var_80], ebp
mov	[esp+0ECh+var_E0], offset aPkix_build_ini 
mov	[esp+0ECh+var_C0], 3
cmp	[esp+0ECh+arg_0], ebp
jz	loc_10071DF2
cmp	edx, ebp
jz	loc_10071DF2
cmp	eax, ebp
jz	loc_10071DF2
cmp	[esp+0ECh+arg_C], ebp
jz	loc_10071DF2
mov	ecx, [edx]
mov	[edx], ebp
mov	[esp+0ECh+var_74], ecx
mov	ecx, [eax]
mov	[esp+0ECh+var_A8], ecx
mov	[eax], ebp
lea	esi, [ebp+1]
cmp	ecx, ebp
jnz	loc_10071994
mov	edi, [esp+0ECh+arg_0]
push	ebx
lea	edx, [esp+0F0h+var_84]
push	edx
push	edi
call	sub_10061920
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070C78
mov	eax, [eax+4]
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_D0], 36Dh
jmp	loc_10071A93
push	ebx
lea	ecx, [esp+0F0h+var_78]
push	ecx
push	edi
call	sub_100617D0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070CA3
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 376h
jmp	loc_10071A93
mov	ecx, [esp+0ECh+var_78]
push	ebx
lea	eax, [esp+0F0h+var_5C]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070CD5
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 284h
jmp	loc_10071A93
push	ebx
lea	eax, [esp+0F0h+var_A0]
push	eax
push	edi
call	sub_10061B40
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070D00
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 375h
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_A0]
push	ebx
lea	edx, [esp+0F0h+var_8C]
push	edx
push	eax
call	sub_10053CF0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070D2F
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 0B5h
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_8C]
push	ebx
lea	edx, [esp+0F0h+var_B4]
push	edx
push	eax
call	sub_10054C50
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070D5E
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 0F3h
jmp	loc_10071A93
mov	edx, [esp+0ECh+var_8C]
push	ebx
push	esi
push	edx
call	sub_10055DC0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070D89
mov	eax, [eax+4]
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_D0], 109h
jmp	loc_10071A93
push	ebx
lea	ecx, [esp+0F0h+var_B0]
push	ecx
push	edi
call	sub_10062A20
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070DB4
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 36Eh
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_B0]
cmp	eax, ebp
jz	short loc_10070DEA
push	ebx
lea	ecx, [esp+0F0h+var_68]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070DEA
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 284h
jmp	loc_10071A93
			
cmp	[esp+0ECh+var_B4], ebp
jnz	loc_10070E8D
cmp	[esp+0ECh+var_68], ebp
jnz	short loc_10070E2E
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10070E1D
mov	ecx, [esp+0ECh+var_C0]
push	ebx
push	2
push	ecx
push	ebp
push	2ABh
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+0ECh+var_CC], esi
mov	[esp+0ECh+var_D0], 2ABh
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_B0]
push	ebx
lea	edx, [esp+0F0h+var_B4]
push	edx
push	ebp
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070E5E
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 283h
jmp	loc_10071A93
mov	edx, [esp+0ECh+var_B0]
push	ebx
push	ebp
push	edx
call	sub_10076100
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	loc_10070F66
mov	eax, [eax+4]
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_D0], 283h
jmp	loc_10071A93
cmp	[esp+0ECh+var_68], ebp
jz	loc_10070F66
mov	edx, [esp+0ECh+var_B0]
push	ebx
lea	ecx, [esp+0F0h+var_9C]
push	ecx
push	ebp
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070ECA
mov	eax, [eax+4]
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_D0], 283h
jmp	loc_10071A93
mov	edx, [esp+0ECh+var_9C]
mov	eax, [esp+0ECh+var_B4]
push	ebx
lea	ecx, [esp+0F0h+var_54]
push	ecx
push	edx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070F01
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 2CBh
jmp	loc_10071A93
cmp	[esp+0ECh+var_54], ebp
jz	short loc_10070F35
mov	edx, [esp+0ECh+var_B0]
push	ebx
push	ebp
push	edx
call	sub_10076100
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070F35
mov	eax, [eax+4]
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_D0], 283h
jmp	loc_10071A93
			
mov	eax, [esp+0ECh+var_9C]
cmp	eax, ebp
jz	short loc_10070F66
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10070F62
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_9C], ebp
			
mov	eax, [esp+0ECh+var_B4]
cmp	eax, ebp
jnz	short loc_10070F88
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	loc_10070E1D
mov	edx, [esp+0ECh+var_C0]
push	ebx
push	2
push	edx
jmp	loc_10070E0E
push	ebx
lea	ecx, [esp+0F0h+var_58]
push	ecx
push	eax
call	sub_10081070
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070FB6
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 98h
jmp	loc_10071A93
mov	ecx, [esp+0ECh+var_B4]
push	ebx
lea	eax, [esp+0F0h+var_94]
push	eax
push	ecx
call	sub_1007E300
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10070FE5
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 78h
jmp	loc_10071A93
mov	ecx, [esp+0ECh+var_B4]
push	ebx
lea	eax, [esp+0F0h+var_7C]
push	eax
push	ecx
call	sub_1007E7B0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10071014
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 91h
jmp	loc_10071A93
lea	eax, [esp+0ECh+var_98]
push	ebx
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_1007103E
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 27Dh
jmp	loc_10071A93
mov	edx, [esp+0ECh+var_B4]
mov	eax, [esp+0ECh+var_98]
push	ebx
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_1007106D
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 278h
jmp	loc_10071A93
cmp	[edi+40h], ebp
jz	loc_1007117D
mov	edx, [esp+0ECh+var_84]
mov	eax, [esp+0ECh+var_8C]
push	ebx
push	edx
push	eax
call	sub_10054F00
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_100710A5
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 106h
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_A0]
push	ebx
lea	edx, [esp+0F0h+var_50]
push	edx
push	eax
call	sub_10053C70
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_100710D7
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 0B6h
jmp	loc_10071A93
mov	edx, [esp+0ECh+var_B4]
mov	eax, [esp+0ECh+var_A0]
push	ebx
push	edx
push	eax
call	[esp+0F8h+var_50]
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	loc_1007117D
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
cmp	ecx, 1Fh
jz	loc_10071A93
mov	ecx, [esp+0ECh+arg_10]
cmp	ecx, ebp
jz	short loc_10071170
push	ebx
push	ecx
mov	ecx, [esp+0F4h+var_B4]
push	eax
push	ebp
push	ecx
call	sub_10067620
mov	esi, eax
add	esp, 14h
cmp	esi, ebp
jz	short loc_10071170
mov	eax, [esp+0ECh+var_DC]
cmp	eax, ebp
jz	short loc_10071157
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071157
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
			
mov	[esp+0ECh+var_DC], esi
			
mov	[esp+0ECh+var_D0], 424h
mov	[esp+0ECh+var_C4], 1Fh
jmp	loc_10071A93
			
mov	[esp+0ECh+var_D0], 62h
jmp	loc_10071A93
			
cmp	[esp+0ECh+var_58], ebp
jz	loc_10071230
cmp	[edi+10h], ebp
jnz	loc_10071230
mov	eax, [esp+0ECh+arg_10]
cmp	eax, ebp
jz	short loc_100711B9
push	ebx
push	eax
mov	eax, [esp+0F4h+var_B4]
push	ebp
push	ebp
push	eax
call	sub_10067620
add	esp, 14h
cmp	eax, ebp
jz	short loc_100711B9
mov	[esp+0ECh+var_DC], eax
jmp	short loc_1007115B
			
mov	edx, [esp+0ECh+var_7C]
push	ebx
lea	ecx, [esp+0F0h+var_90]
push	ecx
push	ebp
push	ebp
push	edx
call	sub_100673D0
add	esp, 14h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_100711EA
mov	eax, [eax+4]
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_D0], 41Bh
jmp	loc_10071A93
mov	edx, [esp+0ECh+var_98]
mov	eax, [esp+0ECh+var_90]
push	ebx
lea	ecx, [esp+0F0h+var_88]
push	ecx
push	edx
push	eax
call	sub_100644F0
add	esp, 10h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_1007121E
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 2Ch
jmp	loc_10071A93
mov	edx, [esp+0ECh+var_88]
mov	eax, [esp+0ECh+arg_C]
mov	[eax], edx
jmp	loc_10071A93
			
push	ebx
lea	ecx, [esp+0F0h+var_AC]
push	ecx
push	edi
call	sub_10062380
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_1007125B
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 36Ch
jmp	loc_10071A93
mov	ecx, [esp+0ECh+var_AC]
push	ebx
lea	eax, [esp+0F0h+var_64]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_1007128D
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 284h
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_64]
cmp	eax, esi
jbe	loc_100713E3
lea	esi, [eax-1]
cmp	esi, ebp
jbe	loc_100713E3
mov	ecx, [esp+0ECh+var_AC]
push	ebx
lea	eax, [esp+0F0h+var_A4]
push	eax
push	esi
push	ecx
mov	[esp+0FCh+var_C8], ebp
call	sub_10075D80
add	esp, 10h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10071308
mov	[esp+0ECh+var_C8], 1
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
cmp	ecx, 1Fh
jz	loc_10071A93
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071304
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_DC], ebp
mov	ecx, [esp+0ECh+var_A4]
push	ebx
lea	eax, [esp+0F0h+var_60]
push	eax
push	ecx
mov	[esp+0F8h+var_C8], ebp
call	sub_1007B550
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_1007136B
mov	[esp+0ECh+var_C8], 1
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
cmp	ecx, 1Fh
jz	loc_10071A93
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071367
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_DC], ebp
cmp	[esp+0ECh+var_60], ebp
jz	short loc_100713AB
mov	eax, [esp+0ECh+var_AC]
push	ebx
push	esi
push	eax
call	sub_10076100
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jnz	loc_10071411
mov	ecx, [esp+0ECh+var_A4]
mov	edx, [esp+0ECh+var_AC]
push	ebx
push	ecx
push	ebp
push	edx
call	sub_10075B40
add	esp, 10h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jnz	short loc_10071425
mov	eax, [esp+0ECh+var_A4]
cmp	eax, ebp
jz	short loc_100713DC
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_100713D8
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_A4], ebp
dec	esi
jnz	loc_100712A7
			
push	ebx
lea	eax, [esp+0F0h+var_70]
push	eax
push	edi
call	sub_100620D0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10071439
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 36Bh
jmp	loc_10071A93
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 27Fh
jmp	loc_10071A93
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 286h
jmp	loc_10071A93
push	ebx
lea	edx, [esp+0F0h+var_6C]
push	edx
push	edi
call	sub_100621A0
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10071467
mov	eax, [eax+4]
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_D0], 373h
jmp	loc_10071A93
cmp	[edi+3Ch], ebp
jz	short loc_10071496
lea	ecx, [esp+0ECh+var_80]
push	ebx
push	ecx
call	sub_10099080
add	esp, 8
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10071496
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 3
jmp	loc_10071A93
			
mov	eax, [esp+0ECh+var_5C]
mov	ecx, [esp+0ECh+var_64]
mov	edx, [esp+0ECh+var_68]
mov	[esp+0ECh+var_4C], eax
mov	eax, [esp+0ECh+var_84]
mov	[esp+0ECh+var_30], eax
mov	eax, [esp+0ECh+var_AC]
mov	[esp+0ECh+var_48], ecx
mov	ecx, [esp+0ECh+var_B4]
mov	[esp+0ECh+var_44], edx
mov	edx, [esp+0ECh+var_7C]
mov	[esp+0ECh+var_20], eax
mov	eax, [esp+0ECh+var_B0]
mov	[esp+0ECh+var_28], ecx
mov	ecx, [esp+0ECh+var_78]
mov	[esp+0ECh+var_24], edx
mov	edx, [esp+0ECh+var_70]
mov	[esp+0ECh+var_14], eax
mov	eax, [edi+44h]
mov	[esp+0ECh+var_1C], ecx
mov	ecx, [esp+0ECh+var_6C]
mov	[esp+0ECh+var_18], edx
mov	edx, [esp+0ECh+var_80]
mov	[esp+0ECh+var_4], eax
push	ebx
lea	eax, [esp+0F0h+var_4C]
mov	[esp+0F0h+var_34], edi
mov	[esp+0F0h+var_2C], ebp
mov	[esp+0F0h+var_10], ecx
mov	[esp+0F0h+var_C], edx
call	sub_1006B440
add	esp, 4
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_1007156A
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 2Ah
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_98]
mov	ecx, [esp+0ECh+var_94]
push	ebx
lea	edx, [esp+0F0h+var_A8]
push	edx
mov	edx, [esp+0F4h+var_B4]
push	ebp
push	eax
mov	eax, [esp+0FCh+var_40]
push	ecx
mov	ecx, [esp+100h+var_3C]
push	edx
push	ebp
push	1
push	eax
push	ecx
push	ebp
call	sub_1006B060
add	esp, 2Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_100715B8
mov	edx, [eax+4]
mov	[esp+0ECh+var_C4], edx
mov	[esp+0ECh+var_D0], 31h
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_A8]
mov	ecx, [esp+0ECh+var_4C]
mov	[eax+80h], ecx
mov	edx, [esp+0ECh+var_48]
mov	[eax+84h], edx
mov	ecx, [esp+0ECh+var_44]
mov	[eax+88h], ecx
mov	edx, [esp+0ECh+var_3C]
mov	[eax+90h], edx
mov	ecx, [esp+0ECh+var_40]
mov	[eax+8Ch], ecx
mov	edx, [esp+0ECh+var_38]
mov	[eax+94h], edx
mov	ecx, [esp+0ECh+var_34]
mov	[eax+98h], ecx
mov	eax, [esp+0ECh+var_30]
cmp	eax, ebp
jz	short loc_10071653
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_1007164C
			
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_30]
mov	edi, [esp+0ECh+var_A8]
mov	[edi+9Ch], eax
mov	eax, [esp+0ECh+var_2C]
lea	esi, [edi+0A0h]
mov	[esi], eax
mov	eax, [esp+0ECh+var_28]
cmp	eax, ebp
jz	short loc_100716A8
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_100716A1
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_28]
mov	[edi+0A4h], eax
mov	eax, [esp+0ECh+var_24]
cmp	eax, ebp
jz	short loc_100716D6
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jnz	loc_10071634
mov	eax, [esp+0ECh+var_24]
mov	[edi+0A8h], eax
mov	eax, [esp+0ECh+var_20]
cmp	eax, ebp
jz	short loc_10071718
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071711
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_20]
mov	[edi+0ACh], eax
mov	eax, [esp+0ECh+var_1C]
cmp	eax, ebp
jz	short loc_1007175A
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071753
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_1C]
mov	[edi+0B0h], eax
mov	eax, [esp+0ECh+var_18]
cmp	eax, ebp
jz	short loc_10071788
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jnz	loc_10071634
mov	eax, [esp+0ECh+var_18]
mov	[edi+0B4h], eax
mov	eax, [esp+0ECh+var_14]
cmp	eax, ebp
jz	short loc_100717CA
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_100717C3
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_14]
mov	[edi+0B8h], eax
mov	eax, [esp+0ECh+var_10]
cmp	eax, ebp
jz	short loc_1007180C
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071805
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_10]
mov	[edi+0BCh], eax
mov	edx, [esp+0ECh+var_C]
mov	[edi+0C0h], edx
mov	eax, [esp+0ECh+var_4]
mov	[esp+0ECh+var_80], ebp
mov	[edi+0C8h], eax
mov	eax, [esp+0ECh+var_38]
cmp	eax, ebp
jz	short loc_10071862
push	ebx
push	esi
push	eax
call	sub_10088E40
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10071862
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 17Eh
jmp	loc_10071A93
			
mov	esi, [esp+0ECh+arg_10]
cmp	esi, ebp
jz	short loc_1007188E
mov	eax, [esp+0ECh+var_B4]
push	ebx
lea	edx, [edi+74h]
push	edx
push	ebp
push	ebp
push	eax
call	sub_10067620
add	esp, 14h
cmp	eax, ebp
jz	short loc_1007188E
mov	[esp+0ECh+var_DC], eax
jmp	loc_1007115B
			
lea	ecx, [esp+0ECh+var_74]
push	ecx
lea	edx, [esp+0F0h+var_88]
push	edx
push	edi
mov	eax, ebx
mov	[esp+0F8h+var_C8], ebp
call	sub_10070670
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_100718F0
mov	[esp+0ECh+var_C8], 1
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
cmp	ecx, 1Fh
jz	loc_10071A93
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_100718EC
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_DC], ebp
mov	eax, [esp+0ECh+var_74]
cmp	eax, ebp
jz	short loc_10071913
mov	ecx, [esp+0ECh+arg_4]
mov	edx, [esp+0ECh+arg_8]
mov	[ecx], eax
mov	[edx], edi
mov	[esp+0ECh+var_A8], ebp
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_88]
cmp	eax, ebp
jz	short loc_10071939
mov	ecx, [esp+0ECh+arg_C]
mov	[ecx], eax
cmp	esi, ebp
jz	loc_10071A93
mov	edx, [edi+74h]
mov	[esi], edx
mov	[edi+74h], ebp
jmp	loc_10071A93
cmp	[esp+0ECh+var_94], ebp
jz	short loc_1007199B
mov	edi, [esp+0ECh+var_A8]
push	ebx
lea	ecx, [esp+0F0h+var_90]
push	ecx
lea	edx, [esp+0F4h+var_74]
push	edi
push	edx
mov	dword ptr [edi], 1
call	sub_1006E6B0
add	esp, 10h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jnz	short loc_100719D0
mov	ecx, [esp+0ECh+var_74]
cmp	ecx, ebp
jz	short loc_100719D0
mov	eax, [esp+0ECh+arg_4]
mov	[eax], ecx
mov	ecx, [esp+0ECh+arg_C]
mov	[ecx], ebp
mov	ecx, [esp+0ECh+arg_8]
mov	[ecx], edi
mov	[esp+0ECh+var_A8], ebp
jmp	loc_10071A93
mov	esi, [esp+0ECh+arg_10]
mov	ecx, [esp+0ECh+var_A8]
mov	edx, [ecx+0A4h]
push	ebx
lea	eax, [esp+0F0h+var_94]
push	eax
push	edx
call	sub_1007E300
add	esp, 0Ch
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_1007193F
mov	eax, [eax+4]
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_D0], 78h
jmp	loc_10071A93
			
cmp	esi, ebp
jz	short loc_10071A0F
cmp	[edi+74h], ebp
jz	short loc_10071A0A
mov	edx, [edi+74h]
push	ebx
push	edx
call	sub_10095450
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071A06
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
jmp	loc_10071A93
mov	eax, [esp+0ECh+var_DC]
mov	ecx, [edi+74h]
mov	[esi], ecx
mov	ecx, [esp+0ECh+var_90]
cmp	ecx, ebp
jz	short loc_10071A63
cmp	eax, ebp
jnz	short loc_10071A63
mov	eax, [edi+58h]
push	ebx
lea	edx, [esp+0F0h+var_88]
push	edx
push	eax
push	ecx
call	sub_100644F0
add	esp, 10h
mov	[esp+0ECh+var_DC], eax
cmp	eax, ebp
jz	short loc_10071A47
mov	ecx, [eax+4]
mov	[esp+0ECh+var_C4], ecx
mov	[esp+0ECh+var_D0], 2Ch
jmp	short loc_10071A93
mov	edx, [esp+0ECh+var_88]
mov	eax, [esp+0ECh+arg_C]
mov	ecx, [esp+0ECh+arg_8]
mov	[eax], edx
mov	[ecx], edi
mov	[esp+0ECh+var_A8], ebp
jmp	short loc_10071A93
			
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10071A83
mov	edx, [esp+0ECh+var_C0]
push	ebx
push	2
push	edx
push	ebp
push	3E9h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+0ECh+var_CC], 1
mov	[esp+0ECh+var_D0], 3E9h
			
mov	eax, [esp+0ECh+var_A0]
cmp	eax, ebp
jz	short loc_10071AC4
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071AC0
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_A0], ebp
mov	eax, [esp+0ECh+var_8C]
cmp	eax, ebp
jz	short loc_10071AF5
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071AF1
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_8C], ebp
mov	eax, [esp+0ECh+var_78]
cmp	eax, ebp
jz	short loc_10071B26
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071B22
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_78], ebp
mov	eax, [esp+0ECh+var_94]
cmp	eax, ebp
jz	short loc_10071B57
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071B53
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_94], ebp
mov	eax, [esp+0ECh+var_B4]
cmp	eax, ebp
jz	short loc_10071B88
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071B84
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_B4], ebp
mov	eax, [esp+0ECh+var_6C]
cmp	eax, ebp
jz	short loc_10071BBF
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071BB8
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_6C], ebp
mov	eax, [esp+0ECh+var_AC]
cmp	eax, ebp
jz	short loc_10071BF0
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071BEC
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_AC], ebp
mov	eax, [esp+0ECh+var_A4]
cmp	eax, ebp
jz	short loc_10071C21
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071C1D
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_A4], ebp
mov	eax, [esp+0ECh+var_70]
cmp	eax, ebp
jz	short loc_10071C52
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071C4E
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_70], ebp
mov	eax, [esp+0ECh+var_B0]
cmp	eax, ebp
jz	short loc_10071C83
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071C7F
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_B0], ebp
mov	eax, [esp+0ECh+var_9C]
cmp	eax, ebp
jz	short loc_10071CB4
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071CB0
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_9C], ebp
mov	eax, [esp+0ECh+var_84]
cmp	eax, ebp
jz	short loc_10071CE5
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071CE1
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_84], ebp
mov	eax, [esp+0ECh+var_7C]
cmp	eax, ebp
jz	short loc_10071D16
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071D12
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_7C], ebp
mov	eax, [esp+0ECh+var_98]
cmp	eax, ebp
jz	short loc_10071D47
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071D43
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_98], ebp
mov	eax, [esp+0ECh+var_90]
cmp	eax, ebp
jz	short loc_10071D78
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071D74
push	ebx
push	eax
lea	edx, [esp+0F4h+var_E0]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_90], ebp
mov	eax, [esp+0ECh+var_A8]
cmp	eax, ebp
jz	short loc_10071DA5
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071DA5
push	ebx
push	eax
lea	eax, [esp+0F4h+var_E0]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
			
mov	eax, [esp+0ECh+var_80]
cmp	eax, ebp
jz	short loc_10071DD6
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0ECh+var_D8], eax
cmp	eax, ebp
jz	short loc_10071DD2
push	ebx
push	eax
lea	ecx, [esp+0F4h+var_E0]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0ECh+var_D8], ebp
mov	[esp+0ECh+var_80], ebp
push	ebx
push	1
lea	edx, [esp+0F4h+var_E0]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 0E0h
retn
			
push	ebx
push	1
lea	eax, [esp+0F4h+var_E0]
push	1Fh
push	eax
mov	[esp+0FCh+var_CC], 1
mov	[esp+0FCh+var_D0], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 0E0h
retn
align 10h
sub	esp, 34h
push	ebp
mov	ebp, [esp+38h+arg_4]
push	esi
push	edi
xor	eax, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+arg_4], eax
mov	[esp+40h+var_30], eax
mov	[esp+40h+var_2C], offset aPkix_build_res 
mov	[esp+40h+var_C], 3
cmp	ebp, eax
jz	loc_10071FA2
cmp	[esp+40h+arg_8], eax
jz	loc_10071FA2
mov	esi, [esp+40h+arg_0]
mov	ecx, [esi]
push	ebx
lea	edx, [esp+44h+arg_4]
push	edx
mov	[esi], eax
lea	eax, [esp+48h+var_34]
push	ebp
push	eax
mov	[esp+50h+var_34], ecx
call	sub_1006E6B0
xor	edi, edi
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jnz	short loc_10071EA9
mov	ecx, [esp+40h+var_34]
cmp	ecx, edi
jz	short loc_10071EA9
mov	[esi], ecx
mov	ecx, [esp+40h+arg_8]
mov	esi, [esp+40h+arg_4]
mov	[ecx], edi
jmp	loc_10071F60
			
mov	esi, [esp+40h+arg_C]
cmp	esi, edi
jz	short loc_10071EEC
mov	ecx, [ebp+74h]
cmp	ecx, edi
jz	short loc_10071EE7
push	ebx
push	ecx
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, edi
jz	short loc_10071EE3
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
mov	esi, [esp+4Ch+arg_4]
add	esp, 0Ch
mov	[esp+40h+var_24], edi
jmp	short loc_10071F60
mov	eax, [esp+40h+var_28]
mov	ecx, [ebp+74h]
mov	[esi], ecx
mov	esi, [esp+40h+arg_4]
cmp	esi, edi
jz	short loc_10071F30
cmp	eax, edi
jnz	short loc_10071F30
mov	eax, [ebp+58h]
push	ebx
lea	edx, [esp+44h+var_30]
push	edx
push	eax
push	esi
call	sub_100644F0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, edi
jz	short loc_10071F24
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2Ch
jmp	short loc_10071F60
mov	edx, [esp+40h+var_30]
mov	eax, [esp+40h+arg_8]
mov	[eax], edx
jmp	short loc_10071F60
			
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_10071F50
mov	ecx, [esp+40h+var_C]
push	ebx
push	2
push	ecx
push	edi
push	3E9h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 3E9h
			
cmp	esi, edi
jz	short loc_10071F89
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, edi
jz	short loc_10071F89
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], edi
			
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	3
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
			
sub	esp, 34h
mov	eax, [esp+34h+arg_0]
push	ebp
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_34], edx
mov	[esp+40h+var_30], edx
mov	[esp+40h+var_2C], offset aPkix_buildchai 
mov	[esp+40h+var_C], 3
cmp	eax, edx
jz	loc_1007220D
mov	edi, [esp+40h+arg_4]
cmp	edi, edx
jz	loc_1007220D
mov	ebp, [esp+40h+arg_8]
cmp	ebp, edx
jz	loc_1007220D
cmp	[esp+40h+arg_C], edx
jz	loc_1007220D
mov	ecx, [edi]
mov	[edi], edx
mov	esi, [ebp+0]
push	ebx
mov	ebx, [esp+44h+arg_14]
mov	[esp+44h+arg_0], ecx
cmp	esi, edx
jnz	loc_100720FA
mov	edx, [esp+44h+arg_10]
push	edx
lea	ecx, [esp+48h+var_30]
push	ecx
lea	edx, [esp+4Ch+var_34]
push	edx
lea	ecx, [esp+50h+arg_0]
push	ecx
push	eax
call	sub_10070B50
add	esp, 14h
mov	[esp+44h+var_28], eax
test	eax, eax
jz	loc_10072158
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	esi, [esp+44h+var_34]
mov	[esp+44h+var_1C], 2Bh
			
mov	eax, [esp+44h+var_30]
test	eax, eax
jz	short loc_100720B3
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
test	eax, eax
jz	short loc_100720B3
push	ebx
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], 0
			
test	esi, esi
jz	short loc_100720E0
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
test	eax, eax
jz	short loc_100720E0
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], 0
			
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	3
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	ecx, [esp+44h+arg_10]
mov	[ebp+0], edx
cmp	[esi], edx
push	ecx
lea	edx, [esp+48h+var_30]
mov	[esp+48h+var_34], esi
push	edx
jnz	short loc_10072136
lea	ecx, [esp+4Ch+var_34]
push	ecx
lea	edx, [esp+50h+arg_0]
push	edx
push	eax
call	sub_10070B50
add	esp, 14h
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_10072158
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
jmp	loc_10072076
lea	eax, [esp+4Ch+arg_0]
push	esi
push	eax
call	sub_10071E20
add	esp, 10h
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1007215C
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
jmp	loc_1007207A
			
mov	esi, [esp+44h+var_34]
mov	eax, [esp+44h+arg_0]
test	eax, eax
jz	short loc_10072176
mov	edx, [esp+44h+arg_C]
mov	[edi], eax
mov	[ebp+0], esi
xor	esi, esi
mov	[edx], esi
jmp	loc_10072082
mov	edi, [esp+44h+var_30]
test	edi, edi
jnz	short loc_100721B3
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007219E
mov	ecx, [esp+44h+var_C]
push	ebx
push	2
push	ecx
push	edi
push	3E9h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 3E9h
jmp	loc_100720B3
test	esi, esi
jz	short loc_100721FB
cmp	dword ptr [esi+48h], 0
jz	short loc_100721FB
cmp	dword ptr [esi+34h], 0
jz	short loc_100721FB
mov	edx, [esi+48h]
mov	eax, [esi+0B0h]
mov	ecx, [esi+0A4h]
push	ebx
push	edi
push	edx
push	eax
push	ecx
call	sub_10072E00
add	esp, 14h
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_100721FB
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 3Fh
jmp	loc_10072082
			
mov	eax, [esp+44h+arg_C]
mov	dword ptr [ebp+0], 0
mov	[eax], edi
jmp	loc_100720B3
			
mov	ecx, [esp+40h+arg_14]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
			
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
xor	ebp, ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_iscertsel 
mov	[esp+44h+var_C], 6
cmp	edi, ebp
jz	loc_10072390
mov	ebx, [esp+44h+arg_4]
cmp	ebx, ebp
jz	loc_10072390
mov	esi, [esp+44h+arg_8]
push	esi
lea	eax, [esp+48h+var_34]
push	eax
push	edi
call	sub_1007DC60
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100722B5
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 8Dh
jmp	short loc_10072314
push	esi
lea	edx, [esp+48h+var_30]
push	edx
push	edi
call	sub_1007DE20
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100722DD
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 83h
jmp	short loc_10072314
mov	ecx, [esp+44h+var_34]
mov	eax, [esp+44h+var_30]
cmp	ecx, ebp
jz	short loc_10072312
cmp	eax, ebp
jz	short loc_10072312
push	esi
push	ebx
push	eax
push	ecx
call	sub_1008FF20
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10072314
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 435h
jmp	short loc_10072314
			
mov	[ebx], ebp
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_10072345
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10072341
push	esi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
mov	eax, [esp+44h+var_30]
cmp	eax, ebp
jz	short loc_10072376
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10072372
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_30], ebp
push	esi
push	1
lea	ecx, [esp+4Ch+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	edx, [esp+44h+arg_8]
push	edx
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
			
sub	esp, 30h
cmp	[esp+30h+arg_4], 0
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_throw 
mov	[esp+3Ch+var_C], 1Eh
jz	loc_100724AB
mov	ebx, [esp+3Ch+arg_14]
test	ebx, ebx
jz	loc_100724AB
mov	esi, [esp+3Ch+arg_10]
mov	dword ptr [ebx], 0
mov	eax, 1Fh
test	esi, esi
jz	short loc_10072454
cmp	[esi+4], eax
jnz	short loc_10072454
mov	edi, [esp+3Ch+arg_18]
push	edi
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_1007244B
push	edi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
pop	edi
pop	esi
xor	eax, eax
pop	ebx
add	esp, 30h
retn
pop	edi
mov	[ebx], esi
pop	esi
pop	ebx
add	esp, 30h
retn
			
cmp	[esp+3Ch+arg_C], eax
jz	short loc_1007245E
mov	eax, [esp+3Ch+arg_0]
mov	ecx, [esp+3Ch+arg_18]
push	ecx
mov	ecx, [esp+40h+arg_8]
lea	edx, [esp+40h+var_30]
push	edx
push	ecx
push	0
push	esi
push	eax
call	sub_10073F50
add	esp, 18h
mov	[esp+3Ch+var_24], eax
test	eax, eax
jnz	short loc_1007249E
test	esi, esi
jnz	short loc_1007249E
mov	edx, [esp+3Ch+var_30]
cmp	[edx+8], esi
jnz	short loc_1007249E
call	PORT_GetError
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+8], eax
mov	eax, [esp+3Ch+var_24]
			
mov	edx, [esp+3Ch+var_30]
pop	edi
pop	esi
mov	[ebx], edx
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+3Ch+arg_18]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
mov	eax, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_checktype 
mov	[esp+38h+var_C], 30h
test	eax, eax
jz	loc_100725F6
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_100725F6
mov	esi, [esp+38h+arg_C]
push	esi
lea	ecx, [esp+3Ch+arg_0]
push	ecx
push	eax
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1007255F
mov	edx, [eax+4]
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	30h
push	eax
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 150h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
push	esi
lea	eax, [esp+3Ch+var_30]
push	eax
push	edi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1007259D
mov	ecx, [eax+4]
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	30h
push	eax
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 151h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	eax, [esp+38h+arg_0]
cmp	eax, [esp+38h+arg_8]
jnz	short loc_100725AD
cmp	eax, [esp+38h+var_30]
jz	short loc_100725DE
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100725CE
mov	edx, [esp+38h+var_C]
push	esi
push	2
push	edx
push	0
push	317h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
mov	[esp+38h+var_1C], 317h
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	ecx, [esp+38h+arg_C]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
			
mov	eax, [esp+arg_8]
mov	ecx, [esp+arg_4]
push	eax
mov	eax, [esp+4+arg_0]
push	ecx
push	eax
push	eax
call	sub_100724E0
add	esp, 10h
retn
align 10h
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_hash 
mov	[esp+34h+var_C], 30h
test	edx, edx
jz	short loc_100726B1
test	esi, esi
jnz	short loc_100726B1
mov	eax, [esp+34h+arg_C]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	edi, [esp+34h+arg_8]
test	edi, edi
jnz	short loc_100726E5
mov	edx, [esp+34h+arg_C]
push	edx
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Fh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
xor	eax, eax
xor	ecx, ecx
test	edx, edx
jz	short loc_10072706
push	ebx
push	ebp
nop
movzx	ebx, byte ptr [ecx+esi]
mov	ebp, eax
shl	ebp, 5
sub	ebp, eax
inc	ecx
lea	eax, [ebp+ebx+0]
cmp	ecx, edx
jb	short loc_100726F0
pop	ebp
pop	ebx
mov	ecx, [esp+34h+arg_C]
push	ecx
push	1
lea	edx, [esp+3Ch+var_2C]
push	30h
push	edx
mov	[edi], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_duplicate 
mov	[esp+38h+var_C], 30h
test	edi, edi
jz	short loc_100727C7
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100727C7
mov	esi, [esp+38h+arg_8]
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_100727AC
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	30h
push	ecx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	30h
push	ecx
mov	[ebx], edi
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
mov	al, [esp+arg_0]
lea	ecx, [eax-30h]
cmp	cl, 9
ja	short loc_10072813
movsx	eax, al
sub	eax, 30h
retn
lea	edx, [eax-61h]
cmp	dl, 5
ja	short loc_10072822
movsx	eax, al
sub	eax, 57h
retn
lea	ecx, [eax-41h]
cmp	cl, 5
ja	short loc_10072831
movsx	eax, al
sub	eax, 37h
retn
or	eax, 0FFFFFFFFh
retn
align 10h
			
mov	al, [esp+arg_0]
cmp	al, 9
ja	short loc_1007284F
movsx	eax, al
add	eax, 30h
retn
lea	ecx, [eax-0Ah]
cmp	cl, 5
ja	short loc_1007285E
movsx	eax, al
add	eax, 57h
retn
or	al, 0FFh
retn
align 10h
			
mov	al, [esp+arg_0]
lea	ecx, [eax-1]
cmp	cl, 7Dh
ja	short loc_10072891
cmp	al, 26h
jz	short loc_10072891
cmp	[esp+arg_4], 0
jz	short loc_1007288B
cmp	al, 14h
jb	short loc_10072891
mov	eax, 1
retn
			
xor	eax, eax
retn
align 10h
sub	esp, 48h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+58h+var_2C]
rep movsd
mov	edi, [esp+58h+arg_0]
mov	[esp+58h+var_44], ebx
mov	[esp+58h+var_48], ebx
mov	[esp+58h+var_40], ebx
mov	[esp+58h+var_3C], ebx
mov	[esp+58h+var_34], ebx
mov	[esp+58h+var_30], ebx
mov	[esp+58h+var_2C], offset aPkix_cachecert 
mov	[esp+58h+var_C], 3
cmp	edi, ebx
jz	loc_10072C13
mov	ebp, [esp+58h+arg_4]
cmp	ebp, ebx
jz	loc_10072C13
mov	eax, [esp+58h+arg_C]
cmp	eax, ebx
jz	loc_10072C13
cmp	[esp+58h+arg_10], ebx
jz	loc_10072C13
mov	esi, [esp+58h+arg_14]
mov	[eax], ebx
lea	eax, [esp+58h+var_48]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_1007293D
mov	ecx, [eax+4]
mov	[esp+58h+var_1C], 27Dh
mov	ebp, ebx
jmp	loc_10072B08
mov	edx, [esp+58h+var_48]
push	esi
push	edi
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_1007296A
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 278h
mov	ebp, ebx
jmp	loc_10072B0C
mov	ecx, [esp+58h+var_48]
push	esi
push	ebp
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10072997
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 278h
mov	ebp, ebx
jmp	loc_10072B0C
mov	ecx, [esp+58h+var_48]
mov	edx, dword_100BAE84
push	esi
lea	eax, [esp+5Ch+var_44]
push	eax
push	ecx
push	edx
call	sub_10093CA0
inc	dword_100BAE60
mov	ebp, eax
mov	eax, [esp+68h+var_44]
add	esp, 10h
cmp	eax, ebx
jz	loc_10072B3D
cmp	ebp, ebx
jnz	loc_10072B0C
push	esi
lea	ecx, [esp+5Ch+var_40]
push	ecx
push	ebx
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_100729F9
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 283h
jmp	loc_10072B0C
mov	ecx, [esp+58h+var_44]
push	esi
lea	eax, [esp+5Ch+var_3C]
push	eax
push	1
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10072A2A
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 283h
jmp	loc_10072B0C
mov	edi, [esp+58h+arg_8]
cmp	edi, ebx
jz	short loc_10072A8F
mov	ecx, [esp+58h+var_40]
push	esi
lea	eax, [esp+5Ch+var_30]
push	eax
push	ecx
push	edi
call	sub_10095CE0
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10072A62
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2C0h
jmp	loc_10072B0C
mov	ecx, [esp+58h+var_3C]
push	esi
lea	eax, [esp+5Ch+var_34]
push	eax
push	ecx
push	edi
call	sub_10095CE0
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10072A8F
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 2C0h
jmp	short loc_10072B0C
			
cmp	[esp+58h+var_34], ebx
jg	short loc_10072AD5
cmp	[esp+58h+var_30], ebx
jg	short loc_10072AD5
mov	eax, [esp+58h+arg_10]
mov	ecx, [esp+58h+var_44]
push	esi
push	eax
push	2
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10072AC9
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 283h
jmp	short loc_10072B0C
mov	eax, [esp+58h+arg_C]
mov	dword ptr [eax], 1
jmp	short loc_10072B0C
			
mov	ecx, [esp+58h+arg_C]
inc	dword_100BAE64
mov	edx, [esp+58h+var_48]
push	esi
mov	[ecx], ebx
mov	eax, dword_100BAE84
push	edx
push	eax
call	sub_10093A70
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebx
jz	short loc_10072B0C
mov	ecx, [eax+4]
mov	[esp+58h+var_1C], 210h
mov	[esp+58h+var_10], ecx
			
mov	eax, [esp+58h+var_44]
cmp	eax, ebx
jz	short loc_10072B3D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10072B39
push	esi
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_44], ebx
			
mov	eax, [esp+58h+var_48]
cmp	eax, ebx
jz	short loc_10072B6E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10072B6A
push	esi
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_48], ebx
cmp	ebp, ebx
jz	short loc_10072B97
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10072B97
push	esi
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
			
mov	eax, [esp+58h+var_40]
cmp	eax, ebx
jz	short loc_10072BC8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10072BC4
push	esi
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_40], ebx
mov	eax, [esp+58h+var_3C]
cmp	eax, ebx
jz	short loc_10072BF9
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebx
jz	short loc_10072BF5
push	esi
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebx
mov	[esp+58h+var_3C], ebx
push	esi
push	1
lea	ecx, [esp+60h+var_2C]
push	3
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 48h
retn
			
mov	edx, [esp+58h+arg_14]
push	edx
push	1
lea	eax, [esp+60h+var_2C]
push	1Fh
push	eax
mov	[esp+68h+var_18], 1
mov	[esp+68h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 48h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_cachece_0 
mov	[esp+40h+var_C], 3
cmp	edi, ebx
jz	loc_10072DC5
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10072DC5
mov	esi, [esp+40h+arg_8]
lea	eax, [esp+40h+var_30]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10072CC3
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 27Dh
jmp	loc_10072D7A
mov	edx, [esp+40h+var_30]
push	esi
push	edi
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10072CEE
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 278h
jmp	loc_10072D7A
mov	ecx, [esp+40h+var_30]
push	esi
push	ebp
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10072D16
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 278h
jmp	short loc_10072D7A
mov	eax, [esp+40h+var_30]
mov	ecx, dword_100BAE84
push	esi
push	eax
push	ecx
mov	[esp+4Ch+var_14], ebx
call	sub_10093A70
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10072D74
mov	[esp+40h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
cmp	ecx, 1Fh
jz	short loc_10072D7A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10072D70
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_28], ebx
inc	dword_100BAE64
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10072DAB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10072DA7
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	3
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_2C], offset aPkix_cachece_1 
mov	[esp+4Ch+var_C], 3
cmp	edi, ebx
jz	loc_100730C3
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_100730C3
cmp	[esp+4Ch+arg_8], ebx
jz	loc_100730C3
cmp	[esp+4Ch+arg_C], ebx
jz	loc_100730C3
mov	esi, [esp+4Ch+arg_10]
lea	eax, [esp+4Ch+var_38]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10072E93
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 27Dh
jmp	loc_10072FE9
mov	edx, [esp+4Ch+var_38]
push	esi
push	edi
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10072EBE
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 278h
jmp	loc_10072FE9
mov	ecx, [esp+4Ch+var_38]
push	esi
push	ebp
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10072EE9
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 278h
jmp	loc_10072FE9
lea	eax, [esp+4Ch+var_3C]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10072F13
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 27Dh
jmp	loc_10072FE9
push	esi
lea	edx, [esp+50h+var_34]
push	edx
push	0E10h
call	sub_10088E40
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10072F42
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 17Eh
jmp	loc_10072FE9
mov	ecx, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_3C]
push	esi
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10072F6E
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 278h
jmp	short loc_10072FE9
mov	ecx, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+var_3C]
push	esi
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10072F9A
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 278h
jmp	short loc_10072FE9
mov	ecx, [esp+4Ch+arg_C]
mov	edx, [esp+4Ch+var_3C]
push	esi
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10072FC6
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 278h
jmp	short loc_10072FE9
mov	ecx, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+var_38]
mov	eax, dword_100BAE84
push	esi
push	ecx
push	edx
push	eax
call	sub_10093760
add	esp, 10h
inc	dword_100BAE5C
mov	[esp+4Ch+var_30], eax
			
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_1007301A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10073016
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_1007304B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10073047
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_30]
cmp	eax, ebx
jz	short loc_10073078
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10073078
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
			
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_100730A9
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100730A5
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
push	esi
push	1
lea	edx, [esp+54h+var_2C]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	eax, [esp+4Ch+arg_10]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	1Fh
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 64h
push	ebx
xor	ebx, ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+74h+var_2C]
rep movsd
mov	edi, [esp+74h+arg_0]
mov	[esp+74h+var_60], ebx
mov	[esp+74h+var_64], ebx
mov	[esp+74h+var_50], ebx
mov	[esp+74h+var_4C], ebx
mov	[esp+74h+var_58], ebx
mov	[esp+74h+var_48], ebx
mov	[esp+74h+var_54], ebx
mov	[esp+74h+var_44], ebx
mov	[esp+74h+var_5C], ebx
mov	[esp+74h+var_30], ebx
mov	[esp+74h+var_34], ebx
mov	[esp+74h+var_38], ebx
mov	[esp+74h+var_3C], ebx
mov	[esp+74h+var_40], ebx
mov	[esp+74h+var_2C], offset aPkix_cachece_2 
mov	[esp+74h+var_C], 3
cmp	edi, ebx
jz	loc_1007381E
mov	ebp, [esp+74h+arg_4]
cmp	ebp, ebx
jz	loc_1007381E
cmp	[esp+74h+arg_C], ebx
jz	loc_1007380B
cmp	[esp+74h+arg_10], ebx
jz	loc_1007380B
mov	esi, [esp+74h+arg_14]
mov	eax, [esp+74h+arg_C]
lea	ecx, [esp+74h+var_64]
push	esi
push	ecx
mov	[eax], ebx
call	sub_100755D0
add	esp, 8
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_100731C9
mov	edx, [eax+4]
mov	[esp+74h+var_1C], 27Dh
jmp	loc_10073607
mov	eax, [esp+74h+var_64]
push	esi
push	edi
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_100731F4
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 278h
jmp	loc_1007360B
push	esi
lea	edx, [esp+78h+var_48]
push	edx
push	ebp
call	sub_10054880
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_1007321F
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 0FFh
jmp	loc_1007360B
mov	eax, [esp+74h+var_48]
push	esi
cmp	eax, ebx
jnz	short loc_10073236
push	1
push	1Fh
lea	ecx, [esp+80h+var_2C]
push	ecx
jmp	loc_1007382F
mov	edx, [esp+78h+var_64]
push	eax
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_10073260
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 278h
jmp	loc_1007360B
mov	edx, [esp+74h+var_64]
mov	eax, dword_100BAE88
push	esi
lea	ecx, [esp+78h+var_50]
push	ecx
push	edx
push	eax
call	sub_10093CA0
mov	ecx, [esp+84h+var_50]
inc	dword_100BAE6C
add	esp, 10h
mov	[esp+74h+var_30], eax
cmp	ecx, ebx
jz	loc_1007360B
cmp	eax, ebx
jnz	loc_1007360B
push	esi
lea	edx, [esp+78h+var_44]
push	edx
push	ebx
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_100732C3
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 283h
jmp	loc_1007360B
mov	edi, [esp+74h+arg_8]
cmp	edi, ebx
jz	short loc_100732FE
mov	edx, [esp+74h+var_44]
push	esi
lea	ecx, [esp+78h+var_3C]
push	ecx
push	edx
push	edi
call	sub_10095CE0
add	esp, 10h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_100732FE
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 2C0h
jmp	loc_1007360B
			
push	esi
cmp	[esp+78h+var_3C], ebx
jg	loc_100735D1
mov	edx, [esp+78h+var_50]
lea	ecx, [esp+78h+var_4C]
push	ecx
push	1
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_10073339
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 283h
jmp	loc_1007360B
push	esi
lea	ecx, [esp+78h+var_5C]
push	ecx
push	ebx
push	ebx
call	sub_10053B50
add	esp, 10h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_10073361
mov	edx, [eax+4]
mov	[esp+74h+var_1C], 0B1h
jmp	loc_10073607
mov	eax, [esp+74h+var_5C]
push	esi
push	ebp
push	eax
call	sub_10053DC0
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_1007338C
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 0CBh
jmp	loc_1007360B
mov	eax, [esp+74h+var_5C]
push	esi
lea	edx, [esp+78h+var_34]
push	edx
push	eax
call	sub_10053C70
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_100733BB
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 0B6h
jmp	loc_1007360B
lea	edx, [esp+74h+var_58]
push	esi
push	edx
call	sub_100755D0
add	esp, 8
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_100733E5
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 27Dh
jmp	loc_1007360B
mov	edx, [esp+74h+var_4C]
push	esi
lea	ecx, [esp+78h+var_40]
push	ecx
push	edx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_10073414
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 284h
jmp	loc_1007360B
xor	ebp, ebp
cmp	[esp+74h+var_40], ebx
jbe	loc_10073555
mov	edx, [esp+74h+var_4C]
push	esi
lea	ecx, [esp+78h+var_60]
push	ecx
push	ebp
push	edx
call	sub_10075D80
add	esp, 10h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jnz	loc_10073593
mov	ecx, [esp+74h+var_60]
push	esi
lea	eax, [esp+78h+var_54]
push	eax
push	ecx
call	sub_100804C0
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jnz	loc_100735A0
cmp	edi, ebx
jz	short loc_10073483
mov	eax, [esp+74h+var_54]
push	esi
lea	edx, [esp+78h+var_38]
push	edx
push	edi
push	eax
call	sub_10095CE0
add	esp, 10h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jnz	loc_100735B1
push	esi
cmp	[esp+78h+var_38], ebx
jl	loc_100735D1
mov	ecx, [esp+78h+var_60]
mov	edx, [esp+78h+var_5C]
push	ecx
push	edx
call	[esp+80h+var_34]
add	esp, 0Ch
push	esi
cmp	eax, ebx
jnz	short loc_100734C4
mov	eax, [esp+78h+var_60]
mov	ecx, [esp+78h+var_58]
push	eax
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jnz	loc_1007324C
jmp	short loc_100734E8
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100734E8
push	esi
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
			
mov	eax, [esp+74h+var_60]
cmp	eax, ebx
jz	short loc_10073519
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10073515
push	esi
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_60], ebx
mov	eax, [esp+74h+var_54]
cmp	eax, ebx
jz	short loc_1007354A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10073546
push	esi
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_54], ebx
inc	ebp
cmp	ebp, [esp+74h+var_40]
jb	loc_10073420
mov	ecx, [esp+74h+arg_C]
cmp	[ecx], ebx
jz	loc_1007360B
mov	eax, [esp+74h+var_58]
cmp	eax, ebx
jz	short loc_100735C2
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100735C2
push	esi
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
jmp	short loc_1007360B
mov	edx, [eax+4]
mov	[esp+74h+var_1C], 283h
jmp	short loc_10073607
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 92h
jmp	short loc_1007360B
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 2C0h
jmp	short loc_1007360B
			
mov	eax, [esp+74h+arg_10]
mov	ecx, [esp+74h+var_58]
mov	[eax], ecx
jmp	short loc_1007360B
			
mov	edx, [esp+78h+arg_C]
inc	dword_100BAE70
mov	eax, [esp+78h+var_64]
mov	[edx], ebx
mov	ecx, dword_100BAE88
push	eax
push	ecx
call	sub_10093A70
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_1007360B
mov	edx, [eax+4]
mov	[esp+74h+var_1C], 210h
			
mov	[esp+74h+var_10], edx
			
mov	eax, [esp+74h+var_48]
cmp	eax, ebx
jz	short loc_1007363C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10073638
push	esi
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_48], ebx
mov	eax, [esp+74h+var_5C]
cmp	eax, ebx
jz	short loc_1007366D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10073669
push	esi
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_5C], ebx
mov	eax, [esp+74h+var_64]
cmp	eax, ebx
jz	short loc_1007369E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_1007369A
push	esi
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_64], ebx
mov	eax, [esp+74h+var_50]
cmp	eax, ebx
jz	short loc_100736CF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100736CB
push	esi
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_50], ebx
mov	eax, [esp+74h+var_44]
cmp	eax, ebx
jz	short loc_10073700
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100736FC
push	esi
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_44], ebx
mov	eax, [esp+74h+var_60]
cmp	eax, ebx
jz	short loc_10073731
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_1007372D
push	esi
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_60], ebx
mov	eax, [esp+74h+var_4C]
cmp	eax, ebx
jz	short loc_10073762
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_1007375E
push	esi
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_4C], ebx
mov	eax, [esp+74h+var_58]
cmp	eax, ebx
jz	short loc_10073793
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_1007378F
push	esi
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_58], ebx
mov	eax, [esp+74h+var_54]
cmp	eax, ebx
jz	short loc_100737C4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100737C0
push	esi
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_54], ebx
mov	eax, [esp+74h+var_30]
cmp	eax, ebx
jz	short loc_100737F1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100737F1
push	esi
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
			
push	esi
push	1
lea	ecx, [esp+7Ch+var_2C]
push	3
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 64h
retn
			
mov	edx, [esp+74h+arg_14]
push	edx
push	1
push	1Fh
lea	eax, [esp+80h+var_2C]
push	eax
jmp	short loc_1007382F
			
mov	ecx, [esp+74h+arg_14]
push	ecx
push	1
push	1Fh
lea	edx, [esp+80h+var_2C]
push	edx
			
mov	[esp+84h+var_1C], 2BCh
mov	[esp+84h+var_18], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 64h
retn
align 10h
sub	esp, 4Ch
push	ebx
push	ebp
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	edi, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_40], ebx
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_30], 0E10h
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_2C], offset aPkix_cachece_3 
mov	[esp+5Ch+var_C], 3
cmp	edi, ebx
jz	loc_10073BCE
mov	ebp, [esp+5Ch+arg_4]
cmp	ebp, ebx
jz	loc_10073BCE
mov	eax, [esp+5Ch+arg_8]
cmp	eax, ebx
jz	loc_10073BCE
mov	esi, [esp+5Ch+arg_C]
push	esi
lea	ecx, [esp+60h+var_3C]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100738F0
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 284h
jmp	loc_10073AC3
cmp	[esp+5Ch+var_3C], ebx
jz	loc_10073AC3
lea	eax, [esp+5Ch+var_4C]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10073924
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 27Dh
jmp	loc_10073AC3
mov	edx, [esp+5Ch+var_4C]
push	esi
push	edi
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1007394F
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 278h
jmp	loc_10073AC3
push	esi
lea	ecx, [esp+60h+var_44]
push	ecx
push	ebp
call	sub_10054880
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1007397A
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 0FFh
jmp	loc_10073AC3
mov	eax, [esp+5Ch+var_44]
push	esi
cmp	eax, ebx
jnz	short loc_10073991
push	1
push	1Fh
lea	eax, [esp+68h+var_2C]
push	eax
jmp	loc_10073BDC
mov	ecx, [esp+60h+var_4C]
push	eax
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100739BB
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 278h
jmp	loc_10073AC3
lea	eax, [esp+5Ch+var_48]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100739E5
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 27Dh
jmp	loc_10073AC3
push	esi
lea	edx, [esp+60h+var_38]
push	edx
push	edi
call	sub_1007B550
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10073A10
mov	eax, [eax+4]
mov	[esp+5Ch+var_10], eax
mov	[esp+5Ch+var_1C], 0DCh
jmp	loc_10073AC3
mov	eax, 168h
cmp	[esp+5Ch+var_38], ebx
jnz	short loc_10073A1F
mov	eax, [esp+5Ch+var_30]
push	esi
lea	ecx, [esp+60h+var_40]
push	ecx
push	eax
call	sub_10088E40
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10073A47
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 17Eh
jmp	short loc_10073AC3
mov	eax, [esp+5Ch+var_40]
mov	ecx, [esp+5Ch+var_48]
push	esi
push	eax
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10073A73
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 278h
jmp	short loc_10073AC3
mov	eax, [esp+5Ch+arg_8]
mov	ecx, [esp+5Ch+var_48]
push	esi
push	eax
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10073A9F
mov	edx, [eax+4]
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 278h
jmp	short loc_10073AC3
mov	eax, [esp+5Ch+var_48]
mov	ecx, [esp+5Ch+var_4C]
mov	edx, dword_100BAE88
push	esi
push	eax
push	ecx
push	edx
call	sub_10093760
add	esp, 10h
inc	dword_100BAE68
mov	[esp+5Ch+var_34], eax
			
mov	eax, [esp+5Ch+var_44]
cmp	eax, ebx
jz	short loc_10073AF4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10073AF0
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_44], ebx
mov	eax, [esp+5Ch+var_4C]
cmp	eax, ebx
jz	short loc_10073B25
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10073B21
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_4C], ebx
mov	eax, [esp+5Ch+var_48]
cmp	eax, ebx
jz	short loc_10073B56
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10073B52
push	esi
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_40]
cmp	eax, ebx
jz	short loc_10073B87
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10073B83
push	esi
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_40], ebx
mov	eax, [esp+5Ch+var_34]
cmp	eax, ebx
jz	short loc_10073BB4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10073BB4
push	esi
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebx
			
push	esi
push	1
lea	edx, [esp+64h+var_2C]
push	3
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
			
mov	eax, [esp+5Ch+arg_C]
push	eax
push	1
push	1Fh
lea	ecx, [esp+68h+var_2C]
push	ecx
mov	[esp+6Ch+var_18], 1
mov	[esp+6Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 4Ch
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_error_equ 
mov	[esp+38h+var_C], 1Eh
test	esi, esi
jz	loc_10073DA4
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_10073DA4
mov	eax, [esp+38h+arg_8]
test	eax, eax
jz	loc_10073DA4
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+40h+arg_C]
cmp	esi, edi
jz	loc_10073D84
push	ebp
push	1Bh
push	esi
mov	[eax], ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10073C83
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 1D7h
jmp	loc_10073D8A
push	ebp
lea	ecx, [esp+44h+var_30]
push	ecx
push	edi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10073CAE
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 1A9h
jmp	loc_10073D8A
cmp	[esp+40h+var_30], 1Bh
jnz	loc_10073D8A
mov	eax, [esi+4]
cmp	eax, [edi+4]
jnz	loc_10073D8A
mov	eax, [esi+0Ch]
mov	ecx, [edi+0Ch]
test	eax, eax
jz	short loc_10073CD5
test	ecx, ecx
jz	short loc_10073CD9
jmp	short loc_10073CEE
test	ecx, ecx
jz	short loc_10073D22
mov	ebx, 1
test	eax, eax
jz	loc_10073D8A
test	ecx, ecx
jz	loc_10073D8A
push	ebp
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10073D17
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 1B0h
jmp	short loc_10073D8A
cmp	[esp+40h+arg_0], 0
jz	short loc_10073D8A
test	ebx, ebx
jnz	short loc_10073D8A
mov	eax, [esi+10h]
mov	ecx, [edi+10h]
cmp	eax, ecx
jnz	short loc_10073D8A
test	eax, eax
jz	short loc_10073D36
test	ecx, ecx
jz	short loc_10073D3A
jmp	short loc_10073D47
test	ecx, ecx
jz	short loc_10073D69
mov	ebx, 1
test	eax, eax
jz	short loc_10073D8A
test	ecx, ecx
jz	short loc_10073D8A
push	ebp
lea	edx, [esp+44h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_10073D06
cmp	[esp+40h+arg_0], eax
jz	short loc_10073D8A
test	ebx, ebx
jnz	short loc_10073D8A
mov	ecx, [esi]
cmp	ecx, [edi]
jz	short loc_10073D74
mov	ebx, 1
mov	edx, [esi+8]
cmp	edx, [edi+8]
jnz	short loc_10073D8A
test	ebx, ebx
jnz	short loc_10073D8A
mov	eax, [esp+40h+arg_8]
mov	dword ptr [eax], 1
			
push	ebp
push	1
lea	ecx, [esp+48h+var_2C]
push	1Eh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	edx, [esp+38h+arg_C]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_error_des 
mov	[esp+38h+var_C], 1Eh
cmp	edi, ebx
jnz	short loc_10073E2D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	1Bh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10073E56
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2D5h
jmp	short loc_10073EB4
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_10073E85
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10073E82
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+0Ch], ebx
mov	eax, [edi+10h]
cmp	eax, ebx
jz	short loc_10073EB4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10073EB1
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+10h], ebx
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	1Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_error_has 
mov	[esp+30h+var_C], 1Eh
pop	esi
test	ecx, ecx
jz	short loc_10073F23
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10073F23
mov	[eax], ecx
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+34h+var_2C]
push	1Eh
push	ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	edx, [esp+2Ch+arg_8]
push	edx
push	1
lea	eax, [esp+34h+var_2C]
push	1Fh
push	eax
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_10]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_error_cre 
mov	[esp+40h+var_C], 1Eh
cmp	ebp, ebx
jnz	short loc_10073FB3
mov	eax, [esp+40h+arg_14]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+40h+arg_14]
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	14h
push	1Bh
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jnz	loc_10074069
mov	eax, [esp+40h+arg_0]
mov	edi, [esp+40h+arg_4]
mov	ecx, [esp+40h+var_30]
mov	[ecx+4], eax
mov	eax, edi
cmp	edi, ebx
jz	loc_100740A3
mov	ecx, [esp+40h+var_30]
cmp	eax, ecx
jz	short loc_10074071
mov	eax, [eax+0Ch]
cmp	eax, ebx
jnz	short loc_10073FF2
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	loc_100740A3
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10074057
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10074053
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	1Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10074091
mov	edx, [esp+40h+var_C]
push	esi
push	2
push	edx
push	ebx
push	297h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 297h
jmp	short loc_10074026
			
mov	ecx, [esp+40h+var_30]
mov	[ecx+0Ch], edi
mov	edi, [esp+40h+arg_8]
cmp	edi, ebx
jz	short loc_100740D0
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100740D0
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
jmp	loc_1007401A
			
mov	eax, [esp+40h+var_30]
mov	edx, [esp+40h+arg_C]
mov	[eax+10h], edi
mov	ecx, [esp+40h+var_30]
mov	[ecx], edx
mov	eax, [esp+40h+var_30]
mov	ecx, [eax]
mov	edx, ds:dword_100AE898[ecx*4]
mov	[eax+8], edx
mov	eax, [esp+40h+var_30]
mov	[ebp+0], eax
jmp	loc_10074053
align 10h
sub	esp, 54h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+54h+var_4], eax
mov	eax, [esp+54h+arg_0]
push	ebx
mov	ebx, [esp+58h+arg_8]
push	ebp
mov	ebp, [esp+5Ch+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_50]
rep movsd
mov	[esp+64h+var_54], 0
mov	[esp+64h+var_50], offset aPkix_error_get 
mov	[esp+64h+var_30], 1Eh
test	eax, eax
jz	short loc_100741A3
test	ebp, ebp
jz	short loc_100741A3
mov	eax, [eax]
push	eax
push	offset aErrorCodeD 
lea	ecx, [esp+6Ch+Src]
push	20h
push	ecx
call	ds:PR_snprintf
push	ebx		
lea	edx, [esp+78h+var_54]
push	edx		
push	0		
lea	eax, [esp+80h+Src]
push	eax		
push	0		
call	sub_10097D90
mov	ecx, [esp+88h+var_54]
push	ebx
push	1
lea	edx, [esp+90h+var_50]
push	1Eh
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 34h
pop	edi
pop	esi
pop	ebp
pop	ebx
mov	ecx, [esp+54h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
			
push	ebx
push	1
lea	eax, [esp+6Ch+var_50]
push	1Fh
push	eax
mov	[esp+74h+var_3C], 1
mov	[esp+74h+var_40], 2BCh
call	sub_100781E0
mov	ecx, [esp+74h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 54h
retn
align 10h
sub	esp, 40h
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_2C], offset aPkix_error_tos 
mov	[esp+4Ch+var_C], 1Eh
cmp	edi, ebx
jz	loc_100744F2
cmp	[esp+4Ch+arg_4], ebx
jz	loc_100744F2
mov	esi, [esp+4Ch+arg_8]
push	esi
push	1Bh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1007425E
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2D5h
jmp	loc_10074415
push	ebp
mov	ebp, [edi+4]
push	esi
lea	ecx, [esp+54h+var_30]
push	ecx
push	edi
call	sub_10074100
mov	edi, [edi+0Ch]
add	esp, 0Ch
cmp	edi, ebx
jz	loc_10074340
inc	dword_100BA6C0
push	esi
lea	edx, [esp+54h+var_38]
push	edx
push	edi
call	sub_100962D0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100742AD
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 1A6h
jmp	loc_100743E7
push	esi		
lea	ecx, [esp+54h+var_40]
push	ecx		
push	ebx		
push	offset aCauseDS	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100742DE
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 3CFh
jmp	loc_100743E7
mov	eax, [esp+50h+var_38]
mov	ecx, dword_100BA6C0
mov	edx, [esp+50h+var_40]
push	eax
push	ecx
push	edx
lea	eax, [esp+5Ch+var_3C]
push	esi
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_100743D8
mov	eax, [esp+50h+var_40]
cmp	eax, ebx
jz	short loc_1007433A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_10074336
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_40], ebx
dec	dword_100BA6C0
mov	edi, offset aSErrorSS 
cmp	[esp+50h+var_3C], ebx
jnz	short loc_10074350
mov	edi, offset aSErrorS 
cmp	ebp, 47h
jl	short loc_10074357
xor	ebp, ebp
mov	ecx, Src[ebp*4]
push	esi		
lea	eax, [esp+54h+var_34]
push	eax		
push	ebx		
push	ecx		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10074388
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 3CFh
jmp	short loc_100743E7
push	esi		
lea	eax, [esp+54h+var_40]
push	eax		
push	ebx		
push	edi		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100743AE
mov	ecx, [eax+4]
mov	[esp+50h+var_1C], 3CFh
jmp	short loc_100743E3
mov	edx, [esp+50h+var_3C]
mov	eax, [esp+50h+var_30]
mov	ecx, [esp+50h+var_34]
push	edx
mov	edx, [esp+54h+var_40]
push	eax
mov	eax, [esp+58h+arg_4]
push	ecx
push	edx
push	esi
push	eax
call	sub_10098590
add	esp, 18h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100743E7
mov	ecx, [eax+4]
mov	[esp+50h+var_1C], 3CDh
mov	[esp+50h+var_10], ecx
			
mov	eax, [esp+50h+var_30]
pop	ebp
cmp	eax, ebx
jz	short loc_10074415
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10074415
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
			
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_10074446
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10074442
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebx
jz	short loc_10074477
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10074473
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_40], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_100744A8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100744A4
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_100744D9
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100744D5
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
push	esi
push	1
lea	ecx, [esp+54h+var_2C]
push	1Eh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 40h
retn
			
mov	edx, [esp+4Ch+arg_8]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 40h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB5EC
push	1
mov	[esp+60h+var_50], offset aError	
mov	[esp+60h+var_48], 14h
mov	[esp+60h+var_44], offset sub_10073DD0
mov	[esp+60h+var_40], offset sub_10073C00
mov	[esp+60h+var_3C], offset sub_10073ED0
mov	[esp+60h+var_38], offset sub_100741E0
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	1Eh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_error_reg 
mov	[esp+68h+var_C], 1Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 20h
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+28h+arg_0]
push	edi
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_1C], ebx
mov	[esp+2Ch+var_18], ebx
mov	[esp+2Ch+var_14], ebx
mov	[esp+2Ch+var_10], ebx
cmp	ebp, ebx
jz	loc_10074809
mov	edi, [esp+2Ch+Src]
cmp	edi, ebx
jz	loc_10074809
mov	eax, dword_100BAEA4
push	esi
mov	esi, [esp+30h+arg_14]
push	esi
push	eax
call	sub_10094900
add	esp, 8
test	eax, eax
jnz	loc_100747FF
mov	ecx, dword_100BAEA0
mov	edx, dword_100BAE9C
push	esi		
lea	eax, [esp+34h+var_18]
push	eax		
push	ebx		
push	edi		
push	ebx		
mov	[esp+44h+var_4], ecx
mov	dword_100BAEA0,	ebx
mov	[esp+44h+var_8], edx
mov	dword_100BAE9C,	ebx
call	sub_10097D90
add	esp, 14h
test	eax, eax
jnz	loc_1007476B
mov	eax, [esp+30h+arg_8]
push	esi		
cmp	eax, ebx
jz	short loc_10074678
lea	ecx, [esp+34h+var_14]
push	ecx		
push	ebx		
push	eax		
push	ebx		
call	sub_10097D90
add	esp, 14h
test	eax, eax
jnz	loc_1007476B
push	esi
lea	edx, [esp+34h+var_1C]
push	edx
push	ebx
push	offset aSS_2	
jmp	short loc_10074683
lea	eax, [esp+34h+var_1C]
push	eax		
push	ebx		
push	offset dword_100A23E0 
push	ebx		
call	sub_10097D90
add	esp, 14h
test	eax, eax
jnz	loc_1007476B
mov	ecx, [esp+30h+var_14]
mov	edx, [esp+30h+var_18]
mov	eax, [esp+30h+var_1C]
push	ecx
push	edx
push	eax
lea	ecx, [esp+3Ch+var_10]
push	esi
push	ecx
call	sub_10098590
add	esp, 14h
test	eax, eax
jnz	loc_1007476B
push	esi
lea	edx, [esp+34h+var_C]
push	edx
push	ebp
call	sub_100757C0
add	esp, 0Ch
test	eax, eax
jnz	loc_1007476B
cmp	[esp+30h+var_C], ebx
jbe	loc_1007476B
mov	edi, [esp+30h+arg_10]
mov	ebp, [esp+30h+arg_C]
mov	ecx, [esp+30h+arg_0]
push	esi
lea	eax, [esp+34h+var_20]
push	eax
push	ebx
push	ecx
call	sub_10075D80
add	esp, 10h
test	eax, eax
jnz	short loc_10074769
mov	eax, [esp+30h+var_20]
cmp	[eax+8], edi
sbb	ecx, ecx
inc	ecx
jz	short loc_10074748
cmp	dword ptr [eax], 0
jz	short loc_10074748
mov	ecx, [esp+30h+arg_0]
cmp	ecx, dword_100BAE9C
jnz	short loc_1007471E
cmp	edi, 3
jbe	short loc_1007472B
jmp	short loc_10074748
cmp	ecx, dword_100BAEA0
jnz	short loc_1007472B
cmp	edi, 3
jbe	short loc_10074748
			
cmp	ebp, [eax+0Ch]
jnz	short loc_10074748
mov	edx, [esp+30h+var_10]
push	esi
push	ebp
push	edi
push	edx
push	eax
mov	eax, [eax]
call	eax
add	esp, 14h
test	eax, eax
jnz	short loc_10074769
mov	eax, [esp+30h+var_20]
			
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+30h+var_20], 0
test	eax, eax
jnz	short loc_10074769
inc	ebx
cmp	ebx, [esp+30h+var_C]
jb	loc_100746E2
			
xor	ebx, ebx
			
mov	eax, [esp+30h+var_1C]
cmp	eax, ebx
jz	short loc_1007477D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+30h+var_18]
cmp	eax, ebx
jz	short loc_1007478F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+30h+var_14]
cmp	eax, ebx
jz	short loc_100747A1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+30h+var_10]
cmp	eax, ebx
jz	short loc_100747B3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	eax, [esp+30h+var_20]
cmp	eax, ebx
jz	short loc_100747C5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
cmp	dword_100BAE9C,	ebx
jnz	short loc_100747DA
mov	eax, [esp+30h+var_8]
cmp	eax, ebx
jz	short loc_100747DA
mov	dword_100BAE9C,	eax
			
cmp	dword_100BAEA0,	ebx
jnz	short loc_100747EF
mov	eax, [esp+30h+var_4]
cmp	eax, ebx
jz	short loc_100747EF
mov	dword_100BAEA0,	eax
			
mov	ecx, dword_100BAEA4
push	esi
push	ecx
call	sub_10094980
add	esp, 8
pop	esi
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 20h
retn
			
pop	edi
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 20h
retn
align 10h
			
sub	esp, 5Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+5Ch+var_4], eax
mov	eax, [esp+5Ch+arg_8]
mov	ecx, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
push	ebx
mov	ebx, [esp+60h+arg_14]
push	ebp
mov	ebp, [esp+64h+arg_0]
push	esi
push	edi
mov	[esp+6Ch+var_5C], eax
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_54], ecx
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+70h+var_50]
rep movsd
push	offset aErrorCodeD 
lea	ecx, [esp+74h+var_24]
push	20h
push	ecx
mov	[esp+7Ch+var_58], edx
mov	[esp+7Ch+var_50], offset aPkix_logger_ch 
mov	[esp+7Ch+var_30], 2Ch
call	ds:PR_snprintf
mov	edx, [esp+7Ch+var_58]
mov	eax, [esp+7Ch+var_54]
mov	ecx, [esp+7Ch+var_5C]
push	ebx
push	edx
push	eax
push	ecx
lea	edx, [esp+8Ch+var_24]
push	edx
push	ebp
call	sub_100745C0
push	ebx
push	1
mov	[esp+9Ch+var_4C], eax
lea	eax, [esp+9Ch+var_50]
push	2Ch
push	eax
call	sub_100781E0
mov	ecx, [esp+0A4h+var_4]
add	esp, 38h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 5Ch
retn
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_logger_de 
mov	[esp+34h+var_C], 2Ch
test	esi, esi
jnz	short loc_10074929
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	26h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10074952
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2FCh
jmp	short loc_10074996
mov	eax, [esi+4]
mov	dword ptr [esi], 0
test	eax, eax
jz	short loc_1007498F
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10074988
push	edi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [esi+4], 0
mov	dword ptr [esi+0Ch], 0
push	edi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	2Ch
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_2C], offset aPkix_logger_to 
mov	[esp+4Ch+var_C], 2Ch
cmp	edi, ebx
jz	loc_10074B9A
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_10074B9A
mov	esi, [esp+4Ch+arg_8]
push	esi
push	26h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10074A2D
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2FCh
jmp	loc_10074B1E
push	esi		
lea	ecx, [esp+50h+var_38]
push	ecx		
push	ebx		
push	offset aLoggerContextS 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10074A5E
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CFh
jmp	loc_10074B1E
mov	eax, [edi+4]
push	esi		
cmp	eax, ebx
jz	short loc_10074A7B
lea	ecx, [esp+50h+var_3C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10074A94
lea	edx, [esp+50h+var_3C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10074AA9
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], ecx
jmp	short loc_10074B1E
mov	edx, [edi+0Ch]
mov	eax, Src[edx*4]
push	esi		
lea	ecx, [esp+50h+var_34]
push	ecx		
push	ebx		
push	eax		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10074ADD
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 3CFh
jmp	short loc_10074B1E
mov	edx, [esp+4Ch+var_34]
mov	eax, [edi+8]
mov	ecx, [esp+4Ch+var_3C]
push	edx
mov	edx, [esp+50h+var_38]
push	eax
push	ecx
push	edx
lea	eax, [esp+5Ch+var_30]
push	esi
push	eax
call	sub_10098590
add	esp, 18h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10074B17
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 3CDh
jmp	short loc_10074B1E
mov	edx, [esp+4Ch+var_30]
mov	[ebp+0], edx
			
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_10074B4F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10074B4B
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_10074B80
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10074B7C
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
push	esi
push	1
lea	edx, [esp+54h+var_2C]
push	2Ch
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	eax, [esp+4Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	1Fh
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_logger_eq 
mov	[esp+38h+var_C], 2Ch
test	edi, edi
jz	loc_10074D33
mov	esi, [esp+38h+arg_4]
test	esi, esi
jz	loc_10074D33
cmp	[esp+38h+arg_8], 0
jz	loc_10074D33
push	ebx
mov	ebx, [esp+3Ch+arg_C]
push	ebx
push	26h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10074C45
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 1EAh
jmp	loc_10074D1A
cmp	edi, esi
jnz	short loc_10074C58
mov	ecx, [esp+3Ch+arg_8]
mov	dword ptr [ecx], 1
jmp	loc_10074D1A
mov	edx, [esp+3Ch+arg_8]
push	ebx
lea	eax, [esp+40h+var_30]
push	eax
push	esi
mov	dword ptr [edx], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10074C8D
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 152h
jmp	loc_10074D1A
cmp	[esp+3Ch+var_30], 26h
jnz	loc_10074D1A
mov	edx, [edi]
mov	[esp+3Ch+arg_0], 0
cmp	edx, [esi]
jnz	short loc_10074D1A
mov	eax, [edi+0Ch]
cmp	eax, [esi+0Ch]
jnz	short loc_10074D1A
mov	eax, [edi+4]
test	eax, eax
jz	short loc_10074CE9
mov	ecx, [esi+4]
test	ecx, ecx
jz	short loc_10074CE5
push	ebx
lea	edx, [esp+40h+arg_0]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10074D04
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 2CBh
jmp	short loc_10074D1A
test	eax, eax
jnz	short loc_10074CFA
cmp	dword ptr [esi+4], 0
jnz	short loc_10074CFA
mov	eax, 1
mov	[esp+3Ch+arg_0], eax
jmp	short loc_10074D0C
			
mov	[esp+3Ch+arg_0], 0
jmp	short loc_10074D1A
mov	eax, [esp+3Ch+arg_0]
test	eax, eax
jz	short loc_10074D1A
mov	ecx, [edi+8]
cmp	ecx, [esi+8]
jnz	short loc_10074D1A
mov	edx, [esp+3Ch+arg_8]
mov	[edx], eax
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	2Ch
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	ecx, [esp+38h+arg_C]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_logger_ha 
mov	[esp+3Ch+var_C], 2Ch
test	esi, esi
jz	loc_10074E61
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_10074E61
mov	edi, [esp+3Ch+arg_8]
push	edi
push	26h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10074DE6
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	2Ch
push	ecx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2FCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10074E2C
push	edi
lea	ecx, [esp+40h+var_30]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10074E34
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	2Ch
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	[esp+3Ch+var_30], 0
mov	eax, [esi]
add	eax, [esp+3Ch+var_30]
push	edi
shl	eax, 7
add	eax, [esi+8]
push	1
shl	eax, 7
add	eax, [esi+0Ch]
lea	ecx, [esp+44h+var_2C]
push	2Ch
push	ecx
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_logger_du 
mov	[esp+40h+var_C], 2Ch
cmp	esi, ebx
jz	loc_10074FED
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10074FED
mov	edi, [esp+40h+arg_8]
push	edi
push	26h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10074F01
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2FCh
jmp	loc_10074F8C
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	10h
push	26h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10074F2C
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 13Eh
jmp	short loc_10074F8C
mov	edx, [esi]
mov	eax, [esp+40h+var_30]
mov	[eax], edx
mov	ecx, [esi+8]
mov	edx, [esp+40h+var_30]
mov	[edx+8], ecx
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_10074F70
mov	ecx, [esp+40h+var_30]
push	edi
add	ecx, 4
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10074F77
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C5h
jmp	short loc_10074F8C
mov	eax, [esp+40h+var_30]
mov	[eax+4], ebx
mov	ecx, [esi+0Ch]
mov	edx, [esp+40h+var_30]
mov	[edx+0Ch], ecx
mov	eax, [esp+40h+var_30]
mov	[ebp+0], eax
mov	eax, [esp+40h+var_28]
			
cmp	[esp+40h+var_18], ebx
jnz	short loc_10074FA2
cmp	eax, ebx
jnz	short loc_10074FA2
cmp	[esp+40h+var_14], ebx
jnz	short loc_10074FA2
cmp	[esp+40h+var_4], ebx
jz	short loc_10074FD3
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10074FD3
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10074FCF
push	edi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_30], ebx
			
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	2Ch
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB778
push	1
mov	[esp+60h+var_50], offset aLogger 
mov	[esp+60h+var_48], 10h
mov	[esp+60h+var_44], offset sub_100748D0
mov	[esp+60h+var_40], offset sub_10074BD0
mov	[esp+60h+var_3C], offset sub_10074D60
mov	[esp+60h+var_38], offset sub_100749B0
mov	[esp+60h+var_30], offset sub_10074E90
rep movsd
lea	ecx, [esp+60h+var_2C]
push	2Ch
push	ecx
mov	[esp+68h+var_2C], offset aPkix_logger_re 
mov	[esp+68h+var_C], 2Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	ebp
mov	ebp, [esp+34h+arg_4]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+arg_4], ebx
mov	[esp+3Ch+var_2C], offset aPkix_list_cr_0 
mov	[esp+3Ch+var_C], 2Bh
cmp	ebp, ebx
jnz	short loc_10075123
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+3Ch+arg_8]
push	esi
lea	edx, [esp+40h+arg_4]
push	edx
push	14h
push	25h
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10075152
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 1A2h
jmp	short loc_1007517F
mov	ecx, [esp+3Ch+arg_4]
mov	[ecx], ebx
mov	edx, [esp+3Ch+arg_4]
mov	[edx+4], ebx
mov	eax, [esp+3Ch+arg_4]
mov	[eax+8], ebx
mov	ecx, [esp+3Ch+arg_4]
mov	eax, [esp+3Ch+arg_0]
mov	[ecx+0Ch], ebx
mov	edx, [esp+3Ch+arg_4]
mov	[edx+10h], eax
mov	ecx, [esp+3Ch+arg_4]
mov	[ebp+0], ecx
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_list_dest 
mov	[esp+38h+var_C], 2Bh
cmp	esi, ebx
jnz	short loc_100751FD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	25h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10075226
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2FBh
jmp	short loc_1007529E
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_10075253
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10075251
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi], ebx
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_10075295
lea	ebx, [ebx+0]
mov	ecx, [eax+4]
push	edi
mov	[esi+4], ecx
push	eax
mov	[eax+4], ebx
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1007528E
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	eax, [esi+4]
cmp	eax, ebx
jnz	short loc_10075260
mov	[esi+8], ebx
mov	[esi+0Ch], ebx
mov	[esi+10h], ebx
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	2Bh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
			
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_list_dupl 
mov	[esp+3Ch+var_C], 2Bh
test	esi, esi
jz	loc_1007546A
cmp	[esp+3Ch+arg_4], ebx
jz	loc_1007546A
mov	edi, [esp+3Ch+arg_8]
push	edi
push	25h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007532E
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 2FBh
jmp	loc_100753E3
push	edi
cmp	[esi+8], ebx
jz	short loc_10075362
mov	edx, [esp+40h+arg_4]
push	edx
push	esi
call	sub_10072730
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	loc_100753E3
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 196h
jmp	loc_100753E3
mov	eax, [esi+10h]
lea	edx, [esp+40h+var_30]
push	edx
push	eax
call	sub_100750C0
mov	ebx, [esp+48h+var_30]
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10075390
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 27Eh
jmp	short loc_100753E3
mov	edx, [esi+0Ch]
mov	[ebx+0Ch], edx
mov	eax, [esi]
test	eax, eax
jz	short loc_100753CB
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_100753CB
push	edi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
mov	eax, [esp+48h+var_28]
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
jmp	short loc_100753E3
			
mov	ecx, [esi]
mov	[ebx], ecx
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_10075440
mov	[ebx+4], esi
mov	eax, [esp+3Ch+var_28]
mov	edx, [esp+3Ch+arg_4]
mov	[edx], ebx
			
cmp	[esp+3Ch+var_18], 0
jnz	short loc_100753FA
test	eax, eax
jnz	short loc_100753FA
cmp	[esp+3Ch+var_14], eax
jnz	short loc_100753FA
cmp	[esp+3Ch+var_4], eax
jz	short loc_10075427
			
test	ebx, ebx
jz	short loc_10075427
push	edi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10075427
push	edi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
			
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	2Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
push	edi
lea	edx, [ebx+4]
push	edx
push	esi
call	sub_100752C0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100753DD
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 280h
jmp	loc_100753E3
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_list_gete 
mov	[esp+38h+var_C], 2Bh
test	eax, eax
jz	loc_10075598
test	ebp, ebp
jz	loc_10075598
cmp	dword ptr [eax+10h], 0
jnz	short loc_10075527
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100754FE
push	ebx
push	2
push	2Bh
push	0
push	238h
push	eax
call	sub_10074820
add	esp, 18h
push	ebx
push	1
lea	eax, [esp+40h+var_2C]
push	2Bh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 238h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
cmp	edx, [eax+0Ch]
jb	short loc_10075573
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007554A
push	ebx
push	2
push	2Bh
push	0
push	22Eh
push	eax
call	sub_10074820
add	esp, 18h
push	ebx
push	1
lea	eax, [esp+40h+var_2C]
push	2Bh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 22Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
lea	ecx, [edx+1]
dec	ecx
mov	eax, [eax+4]
jnz	short loc_10075576
push	ebx
push	1
mov	[ebp+0], eax
lea	eax, [esp+40h+var_2C]
push	2Bh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
push	ebx
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
			
sub	esp, 5Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+6Ch+var_58]
xor	ebp, ebp
rep movsd
mov	eax, 2Bh
mov	[esp+6Ch+var_58], offset aPkix_list_crea 
mov	[esp+6Ch+var_38], eax
cmp	[esp+6Ch+arg_0], ebx
jnz	short loc_10075630
mov	eax, [esp+6Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+74h+var_58]
push	1Fh
push	ecx
mov	[esp+7Ch+var_44], 1
mov	[esp+7Ch+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 5Ch
retn
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+6Ch+var_2C]
rep movsd
mov	esi, [esp+6Ch+arg_4]
push	esi
lea	edx, [esp+70h+var_5C]
push	edx
push	14h
push	25h
mov	[esp+7Ch+var_5C], ebx
mov	[esp+7Ch+var_2C], offset aPkix_list_cr_0 
mov	[esp+7Ch+var_C], eax
call	sub_100952A0
add	esp, 10h
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1007567F
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], 1A2h
jmp	short loc_100756A9
mov	ecx, [esp+6Ch+var_5C]
mov	[ecx], ebx
mov	edx, [esp+6Ch+var_5C]
mov	[edx+4], ebx
mov	eax, [esp+6Ch+var_5C]
mov	[eax+8], ebx
mov	ecx, [esp+6Ch+var_5C]
mov	[ecx+0Ch], ebx
mov	edx, [esp+6Ch+var_5C]
mov	dword ptr [edx+10h], 1
mov	ebp, [esp+6Ch+var_5C]
push	esi
push	1
lea	eax, [esp+74h+var_2C]
push	2Bh
push	eax
call	sub_100781E0
add	esp, 10h
mov	[esp+6Ch+var_54], eax
cmp	eax, ebx
jz	short loc_100756D4
mov	ecx, [eax+4]
mov	[esp+6Ch+var_3C], ecx
mov	[esp+6Ch+var_48], 27Eh
jmp	short loc_100756DA
mov	edx, [esp+6Ch+arg_0]
mov	[edx], ebp
push	esi
push	1
lea	eax, [esp+74h+var_58]
push	2Bh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 5Ch
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_list_seti 
mov	[esp+34h+var_C], 2Bh
test	eax, eax
jnz	short loc_10075759
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
cmp	dword ptr [eax+10h], 0
mov	esi, [esp+34h+arg_4]
jnz	short loc_10075793
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10075781
push	esi
push	2
push	2Bh
push	0
push	238h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+34h+var_18], 1
mov	[esp+34h+var_1C], 238h
jmp	short loc_1007579A
mov	dword ptr [eax+8], 1
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_list_getl 
mov	[esp+34h+var_C], 2Bh
test	eax, eax
jz	short loc_10075862
mov	ecx, [esp+34h+arg_4]
test	ecx, ecx
jz	short loc_10075862
cmp	dword ptr [eax+10h], 0
mov	esi, [esp+34h+arg_8]
jnz	short loc_10075845
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007581D
push	esi
push	2
push	2Bh
push	0
push	238h
push	eax
call	sub_10074820
add	esp, 18h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	2Bh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 238h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [eax+0Ch]
push	esi
push	1
mov	[ecx], eax
lea	ecx, [esp+3Ch+var_2C]
push	2Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	edx, [esp+34h+arg_8]
push	edx
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Fh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_list_isem 
mov	[esp+34h+var_C], 2Bh
test	eax, eax
jz	short loc_10075937
mov	ecx, [esp+34h+arg_4]
test	ecx, ecx
jz	short loc_10075937
cmp	dword ptr [eax+10h], 0
mov	esi, [esp+34h+arg_8]
jnz	short loc_10075915
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100758ED
push	esi
push	2
push	2Bh
push	0
push	238h
push	eax
call	sub_10074820
add	esp, 18h
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	2Bh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 238h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
xor	edx, edx
cmp	[eax+0Ch], edx
push	esi
setz	dl
push	1
lea	eax, [esp+3Ch+var_2C]
push	2Bh
push	eax
mov	[ecx], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	ecx, [esp+34h+arg_8]
push	ecx
push	1
lea	edx, [esp+3Ch+var_2C]
push	1Fh
push	edx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_list_appe 
mov	[esp+38h+var_C], 2Bh
test	edi, edi
jnz	short loc_100759D1
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
cmp	dword ptr [edi+8], 0
jz	short loc_10075A0E
mov	eax, dword_100BAE9C
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_100759F9
push	esi
push	2
push	2Bh
push	0
push	336h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
mov	[esp+38h+var_1C], 336h
jmp	loc_10075AB7
cmp	dword ptr [edi+10h], 0
jnz	short loc_10075A48
mov	eax, dword_100BAE9C
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10075A36
push	esi
push	2
push	2Bh
push	0
push	238h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
mov	[esp+38h+var_1C], 238h
jmp	short loc_10075AB7
mov	eax, [edi+0Ch]
push	ebp
mov	ebp, edi
test	eax, eax
jz	short loc_10075A58
dec	eax
mov	ebp, [ebp+4]
jnz	short loc_10075A52
mov	esi, [esp+3Ch+arg_8]
push	ebx
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	0
call	sub_100750C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10075ACF
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 27Eh
			
mov	eax, [esp+40h+var_30]
test	eax, eax
jz	short loc_10075AB5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
test	eax, eax
jz	short loc_10075AB5
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], 0
			
pop	ebx
pop	ebp
			
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	2Bh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	short loc_10075B02
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
test	eax, eax
jz	short loc_10075B02
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], 0
jmp	short loc_10075A84
			
mov	edx, [esp+40h+var_30]
push	esi
push	edi
mov	[edx], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10075B2E
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2D0h
jmp	loc_10075A84
mov	ecx, [esp+40h+var_30]
mov	[ebp+4], ecx
inc	dword ptr [edi+0Ch]
jmp	loc_10075AB5
align 10h
			
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_2C], offset aPkix_list_inse 
mov	[esp+40h+var_C], 2Bh
cmp	esi, ebp
jnz	short loc_10075BA5
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
push	ebx
mov	ebx, [esp+44h+arg_C]
cmp	[esi+8], ebp
jz	short loc_10075BE1
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10075BCC
push	ebx
push	2
push	2Bh
push	ebp
push	336h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 336h
jmp	loc_10075C68
cmp	[esi+10h], ebp
jnz	short loc_10075C15
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10075C03
push	ebx
push	2
push	2Bh
push	ebp
push	238h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 238h
jmp	short loc_10075C68
push	ebx
lea	edx, [esp+48h+var_34]
push	edx
push	ebp
call	sub_100750C0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10075C82
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 27Eh
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_10075C68
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10075C68
push	ebx
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
			
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
cmp	[esi+0Ch], ebp
jz	loc_10075D0E
mov	edx, [esp+44h+arg_4]
lea	ecx, [esp+44h+var_30]
push	ecx
mov	eax, esi
call	sub_100754A0
add	esp, 4
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10075CB7
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 282h
jmp	short loc_10075C3B
mov	edi, [esp+44h+var_30]
mov	ebp, [esp+44h+arg_8]
mov	ecx, [edi]
mov	eax, [esp+44h+var_34]
mov	[eax], ecx
test	ebp, ebp
jz	short loc_10075CFF
push	ebx
push	ebp
call	sub_10095450
add	esp, 8
mov	[esp+44h+var_24], eax
test	eax, eax
jz	short loc_10075CFB
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], 0
xor	ebp, ebp
jmp	loc_10075C3B
mov	eax, [esp+44h+var_34]
mov	[edi], ebp
mov	ecx, [edi+4]
mov	[eax+4], ecx
mov	[edi+4], eax
xor	ebp, ebp
jmp	short loc_10075D4C
mov	edi, [esp+44h+arg_8]
cmp	edi, ebp
jz	short loc_10075D40
push	ebx
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10075D40
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
jmp	loc_10075C3B
			
mov	eax, [esp+44h+var_34]
mov	[eax], edi
mov	[eax+4], ebp
mov	[esi+4], eax
inc	dword ptr [esi+0Ch]
push	ebx
push	esi
call	sub_10095BC0
add	esp, 8
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	loc_10075C68
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 2D0h
jmp	loc_10075C68
align 10h
			
sub	esp, 58h
mov	eax, [esp+58h+arg_0]
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_58]
xor	ebx, ebx
rep movsd
mov	[esp+64h+var_58], offset aPkix_list_geti 
mov	[esp+64h+var_38], 2Bh
test	eax, eax
jz	loc_10075F23
cmp	[esp+64h+arg_8], ebx
jz	loc_10075F23
cmp	[eax+10h], ebx
jnz	short loc_10075E0D
mov	eax, dword_100BAE9C
mov	esi, [esp+64h+arg_C]
test	eax, eax
jz	short loc_10075DE4
push	esi
push	2
push	2Bh
push	ebx
push	238h
push	eax
call	sub_10074820
add	esp, 18h
push	esi
push	1
lea	edx, [esp+6Ch+var_58]
push	2Bh
push	edx
mov	[esp+74h+var_44], 1
mov	[esp+74h+var_48], 238h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	ecx, [esp+64h+arg_4]
mov	esi, [esp+64h+arg_C]
mov	[esp+64h+var_2C], offset aPkix_list_gete 
mov	[esp+64h+var_C], 2Bh
cmp	ecx, [eax+0Ch]
jb	short loc_10075E6A
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10075E58
push	esi
push	2
push	2Bh
push	0
push	22Eh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 22Eh
jmp	short loc_10075E78
inc	ecx
jmp	short loc_10075E70
align 10h
			
dec	ecx
mov	eax, [eax+4]
jnz	short loc_10075E70
mov	ebx, eax
push	esi
push	1
lea	eax, [esp+6Ch+var_2C]
push	2Bh
push	eax
call	sub_100781E0
add	esp, 10h
mov	[esp+64h+var_54], eax
test	eax, eax
jz	short loc_10075EBA
mov	ecx, [eax+4]
push	esi
push	1
lea	edx, [esp+6Ch+var_58]
push	2Bh
push	edx
mov	[esp+74h+var_3C], ecx
mov	[esp+74h+var_48], 282h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
mov	eax, [ebx]
test	eax, eax
jz	short loc_10075F02
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+64h+var_50], eax
test	eax, eax
jz	short loc_10075F02
push	esi
push	eax
lea	edx, [esp+6Ch+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+6Ch+var_58]
push	2Bh
push	edx
mov	[esp+74h+var_50], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
			
mov	eax, [ebx]
mov	ecx, [esp+64h+arg_8]
push	esi
push	1
lea	edx, [esp+6Ch+var_58]
push	2Bh
push	edx
mov	[ecx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
			
mov	eax, [esp+64h+arg_C]
push	eax
push	1
lea	ecx, [esp+6Ch+var_58]
push	1Fh
push	ecx
mov	[esp+74h+var_44], 1
mov	[esp+74h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
			
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_list_se_0 
mov	[esp+38h+var_C], 2Bh
test	ebp, ebp
jnz	short loc_10075FAB
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
cmp	dword ptr [ebp+8], 0
push	ebx
mov	ebx, [esp+3Ch+arg_C]
jz	short loc_10075FE9
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10075FD4
push	ebx
push	2
push	2Bh
push	0
push	336h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 336h
jmp	loc_100760E1
cmp	dword ptr [ebp+10h], 0
jnz	short loc_10076022
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007600D
push	ebx
push	2
push	2Bh
push	0
push	238h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 238h
jmp	loc_100760E1
lea	edx, [esp+3Ch+arg_0]
push	edx
mov	edx, [esp+40h+arg_4]
mov	eax, ebp
call	sub_100754A0
add	esp, 4
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10076051
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 282h
jmp	loc_100760E1
mov	edi, [esp+3Ch+arg_0]
cmp	dword ptr [edi], 0
jz	short loc_1007608B
mov	ecx, [edi]
push	ebx
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10076085
push	ebx
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
mov	dword ptr [edi], 0
mov	esi, [esp+3Ch+arg_8]
test	esi, esi
jz	short loc_100760BE
push	ebx
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_100760BE
push	ebx
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
jmp	short loc_100760E1
			
push	ebx
push	ebp
mov	[edi], esi
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100760E1
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 2D0h
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
			
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_list_dele 
mov	[esp+40h+var_C], 2Bh
cmp	edi, ebp
jnz	short loc_10076165
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
push	ebx
mov	ebx, [esp+44h+arg_8]
cmp	[edi+8], ebp
jz	short loc_100761A1
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1007618C
push	ebx
push	2
push	2Bh
push	ebp
push	336h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 336h
jmp	loc_100762D8
cmp	[edi+10h], ebp
jnz	short loc_100761D8
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_100761C3
push	ebx
push	2
push	2Bh
push	ebp
push	238h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 238h
jmp	loc_100762D8
lea	edx, [esp+44h+var_34]
push	edx
mov	edx, [esp+48h+arg_4]
mov	eax, edi
call	sub_100754A0
add	esp, 4
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10076207
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 282h
jmp	loc_100762D8
mov	esi, [esp+44h+var_34]
cmp	[esi], ebp
jz	short loc_10076238
mov	ecx, [esi]
push	ebx
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10076236
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esi], ebp
mov	eax, [esi+4]
cmp	eax, ebp
jz	short loc_1007624F
mov	ecx, [eax]
mov	[esi], ecx
mov	edx, [eax+4]
push	ebx
mov	[eax], ebp
mov	[esi+4], edx
push	eax
jmp	short loc_1007628C
mov	eax, [esp+44h+arg_4]
cmp	eax, ebp
jz	short loc_10076282
lea	ecx, [esp+44h+var_30]
lea	edx, [eax-1]
push	ecx
mov	eax, edi
call	sub_100754A0
add	esp, 4
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10076286
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 282h
jmp	short loc_100762D8
mov	eax, edi
jmp	short loc_1007628A
mov	eax, [esp+44h+var_30]
push	ebx
push	esi
mov	[eax+4], ebp
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_100762B2
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
mov	[esp+50h+var_24], ebp
add	esp, 0Ch
push	ebx
push	edi
call	sub_10095BC0
add	esp, 8
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100762D5
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 2D0h
jmp	short loc_100762D8
dec	dword ptr [edi+0Ch]
			
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_2C], offset aPkix_list_reve 
mov	[esp+4Ch+var_C], 2Bh
cmp	eax, ebp
jz	loc_100765AC
cmp	[esp+4Ch+arg_4], ebp
jz	loc_100765AC
mov	esi, [esp+4Ch+arg_8]
cmp	[eax+10h], ebp
jnz	short loc_10076388
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10076373
push	esi
push	2
push	2Bh
push	ebp
push	238h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 238h
jmp	loc_100764DA
mov	eax, [eax+0Ch]
lea	ecx, [esp+4Ch+var_34]
push	esi
push	ecx
mov	[esp+54h+var_30], eax
call	sub_100755D0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_100763B9
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 27Eh
jmp	loc_100764DE
mov	edi, 1
cmp	[esp+4Ch+var_30], edi
jb	loc_100764A7
jmp	short loc_100763D0
align 10h
			
mov	ecx, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+arg_0]
push	esi
lea	eax, [esp+50h+var_38]
push	eax
sub	ecx, edi
push	ecx
push	edx
call	sub_10075D80
mov	ebx, [esp+5Ch+var_38]
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10076570
push	esi
lea	eax, [esp+50h+var_3C]
push	eax
push	ebx
call	sub_100958C0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10076584
mov	ecx, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+var_34]
push	esi
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_10076598
cmp	ebx, ebp
jz	short loc_10076467
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1007645D
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	eax, [esp+4Ch+var_28]
xor	ebx, ebx
mov	[esp+4Ch+var_38], ebx
mov	ecx, [esp+4Ch+var_3C]
cmp	ecx, ebp
jz	short loc_1007649C
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10076494
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+var_3C], ebp
inc	edi
cmp	edi, [esp+4Ch+var_30]
jbe	loc_100763D0
mov	ecx, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+arg_4]
mov	[edx], ecx
			
cmp	ebx, ebp
jz	short loc_100764DE
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_100764DA
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
			
mov	eax, [esp+4Ch+var_28]
			
mov	ecx, [esp+4Ch+var_3C]
cmp	ecx, ebp
jz	short loc_10076513
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1007650B
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+var_3C], ebp
cmp	[esp+4Ch+var_18], ebp
jnz	short loc_10076529
cmp	eax, ebp
jnz	short loc_10076529
cmp	[esp+4Ch+var_14], ebp
jnz	short loc_10076529
cmp	[esp+4Ch+var_4], ebp
jz	short loc_10076556
			
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebp
jz	short loc_10076556
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_10076556
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
			
push	esi
push	1
lea	eax, [esp+54h+var_2C]
push	2Bh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 283h
jmp	loc_100764B1
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 280h
jmp	loc_100764B1
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 278h
jmp	loc_100764B1
			
mov	ecx, [esp+4Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
			
sub	esp, 38h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_0]
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_2C], offset aPkix_list_to_0 
mov	[esp+48h+var_C], 2Bh
cmp	edi, ebx
jz	loc_100768D8
mov	ebp, [esp+48h+arg_4]
cmp	ebp, ebx
jz	loc_100768D8
mov	esi, [esp+48h+arg_8]
push	esi		
cmp	[edi+10h], ebx
jz	loc_10076732
lea	eax, [esp+4Ch+arg_0]
push	eax
push	edi
call	sub_10075890
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10076665
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 287h
jmp	loc_1007682B
push	esi		
lea	edx, [esp+4Ch+var_38]
push	edx		
cmp	[esp+50h+arg_0], ebx
jz	short loc_100766AD
push	ebx		
push	offset aEmpty	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1007669C
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 1A1h
jmp	loc_1007682B
mov	ecx, [esp+48h+var_38]
pop	edi
pop	esi
mov	[ebp+0], ecx
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 38h
retn
mov	eax, [edi+4]
push	eax
call	sub_100765E0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_100766D5
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 290h
jmp	loc_1007682B
push	esi		
lea	edx, [esp+4Ch+var_34]
push	edx		
push	ebx		
push	offset dword_100A23E0 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10076706
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 3CFh
jmp	loc_1007682B
mov	ecx, [esp+48h+var_38]
mov	edx, [esp+48h+var_34]
push	ecx
push	edx
push	esi
push	ebp
call	sub_10098590
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	loc_1007682B
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
jmp	loc_10076823
mov	eax, [edi]
lea	ecx, [esp+4Ch+var_38]
push	ecx		
cmp	eax, ebx
jnz	short loc_10076768
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1007678D
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 3CFh
jmp	loc_1007682B
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1007678D
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 316h
jmp	loc_1007682B
			
mov	edi, [edi+4]
cmp	edi, ebx
jnz	short loc_100767A5
mov	eax, [esp+48h+var_38]
pop	edi
pop	esi
mov	[ebp+0], eax
pop	ebp
xor	eax, eax
pop	ebx
add	esp, 38h
retn
push	esi
lea	ecx, [esp+4Ch+var_30]
push	ecx
push	edi
call	sub_100765E0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_100767CD
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 290h
jmp	short loc_1007682B
push	esi		
lea	eax, [esp+4Ch+var_34]
push	eax		
push	ebx		
push	offset aSS_4	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_100767FB
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 3CFh
jmp	short loc_1007682B
mov	edx, [esp+48h+var_30]
mov	eax, [esp+48h+var_38]
mov	ecx, [esp+48h+var_34]
push	edx
push	eax
push	ecx
push	esi
push	ebp
call	sub_10098590
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1007682B
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 3CDh
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_1007685C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10076858
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_38], ebx
mov	eax, [esp+48h+var_30]
cmp	eax, ebx
jz	short loc_1007688D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10076889
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_30], ebx
mov	eax, [esp+48h+var_34]
cmp	eax, ebx
jz	short loc_100768BE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_100768BA
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_34], ebx
push	esi
push	1
lea	eax, [esp+50h+var_2C]
push	2Bh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	ecx, [esp+48h+arg_8]
push	ecx
push	1
lea	edx, [esp+50h+var_2C]
push	1Fh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
xor	ebx, ebx
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_2C], offset aPkix_list_tost 
mov	[esp+44h+var_C], 2Bh
cmp	edi, ebx
jz	loc_10076AB5
mov	ebp, [esp+44h+arg_4]
cmp	ebp, ebx
jz	loc_10076AB5
mov	esi, [esp+44h+arg_8]
push	esi
push	25h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10076985
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 2FBh
jmp	loc_10076A39
cmp	[edi+10h], ebx
jnz	short loc_100769BC
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_100769AA
mov	ecx, [esp+44h+var_C]
push	esi
push	2
push	ecx
push	ebx
push	238h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 238h
jmp	short loc_10076A39
push	esi
lea	edx, [esp+48h+var_34]
push	edx
push	edi
call	sub_100765E0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_100769E4
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 290h
jmp	short loc_10076A39
push	esi		
lea	ecx, [esp+48h+var_30]
push	ecx		
push	ebx		
push	offset aS	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10076A0E
mov	edx, [eax+4]
mov	[esp+44h+var_1C], 3CFh
jmp	short loc_10076A35
mov	eax, [esp+44h+var_34]
mov	ecx, [esp+44h+var_30]
push	eax
push	ecx
push	esi
push	ebp
call	sub_10098590
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10076A39
mov	edx, [eax+4]
mov	[esp+44h+var_1C], 3CDh
mov	[esp+44h+var_10], edx
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_10076A6A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10076A66
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_34], ebx
mov	eax, [esp+44h+var_30]
cmp	eax, ebx
jz	short loc_10076A9B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10076A97
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_30], ebx
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 40h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	edi, [esp+50h+arg_0]
xor	ebx, ebx
xor	ebp, ebp
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_3C], ebp
mov	[esp+50h+var_2C], offset aPkix_list_equa 
mov	[esp+50h+var_C], 2Bh
test	edi, edi
jz	loc_10076E2D
cmp	[esp+50h+arg_4], ebx
jz	loc_10076E2D
cmp	[esp+50h+arg_8], ebx
jz	loc_10076E2D
mov	esi, [esp+50h+arg_C]
push	esi
push	25h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_10076B84
mov	eax, [eax+4]
push	esi
push	1
lea	edx, [esp+58h+var_2C]
push	2Bh
push	edx
mov	[esp+60h+var_10], eax
mov	[esp+60h+var_1C], 1E9h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	eax, [esp+50h+arg_4]
cmp	edi, eax
jnz	short loc_10076BB0
mov	ecx, [esp+50h+arg_8]
push	esi
push	1
lea	edx, [esp+58h+var_2C]
push	2Bh
push	edx
mov	dword ptr [ecx], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	edx, [esp+50h+arg_8]
push	esi
lea	ecx, [esp+54h+var_34]
push	ecx
push	eax
mov	[edx], ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_10076BF6
mov	edx, [eax+4]
push	esi
push	1
mov	[esp+58h+var_10], edx
lea	edx, [esp+58h+var_2C]
push	2Bh
push	edx
mov	[esp+60h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
cmp	[esp+50h+var_34], 25h
jnz	loc_10076DD3
cmp	[edi+10h], ebx
jnz	short loc_10076C5A
mov	eax, [esp+50h+arg_4]
cmp	[eax+10h], ebx
jnz	short loc_10076C5A
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10076C30
mov	ecx, [esp+50h+var_C]
push	esi
push	2
push	ecx
push	0
push	239h
push	eax
call	sub_10074820
add	esp, 18h
push	esi
push	1
lea	edx, [esp+58h+var_2C]
push	2Bh
push	edx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 239h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	eax, [edi+0Ch]
mov	edx, [esp+50h+arg_4]
mov	[esp+50h+var_30], eax
mov	[esp+50h+var_38], ebx
cmp	eax, [edx+0Ch]
jnz	loc_10076D6F
xor	edi, edi
mov	[esp+50h+var_38], 1
test	eax, eax
jz	loc_10076D6F
cmp	[esp+50h+var_38], 0
jz	loc_10076D6F
mov	ecx, [esp+50h+arg_0]
push	esi
lea	eax, [esp+54h+var_40]
push	eax
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+50h+var_28], eax
test	eax, eax
jnz	loc_10076DED
mov	eax, [esp+50h+arg_4]
push	esi
lea	edx, [esp+54h+var_3C]
push	edx
push	edi
push	eax
call	sub_10075D80
mov	ebx, [esp+60h+var_40]
mov	ebp, [esp+60h+var_3C]
add	esp, 10h
mov	[esp+50h+var_28], eax
test	eax, eax
jnz	loc_10076E05
test	ebx, ebx
jnz	short loc_10076CE4
test	ebp, ebp
jnz	short loc_10076CE8
jmp	loc_10076D64
test	ebp, ebp
jnz	short loc_10076CF2
mov	[esp+50h+var_38], 0
jmp	short loc_10076D64
push	esi
lea	ecx, [esp+54h+var_38]
push	ecx
push	ebp
push	ebx
call	sub_10095750
add	esp, 10h
mov	[esp+50h+var_28], eax
test	eax, eax
jnz	loc_10076E19
push	esi
push	ebx
call	sub_100955D0
xor	ebx, ebx
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_10076D35
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
push	esi
push	ebp
mov	[esp+58h+var_40], ebx
call	sub_100955D0
xor	ebp, ebp
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_10076D60
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_3C], ebp
			
inc	edi
cmp	edi, [esp+50h+var_30]
jb	loc_10076C84
			
mov	ecx, [esp+50h+arg_8]
mov	edx, [esp+50h+var_38]
mov	[ecx], edx
			
test	ebx, ebx
jz	short loc_10076DA6
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
test	eax, eax
jz	short loc_10076DA6
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], 0
			
test	ebp, ebp
jz	short loc_10076DD3
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
test	eax, eax
jz	short loc_10076DD3
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], 0
			
push	esi
push	1
lea	edx, [esp+58h+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	ecx, [eax+4]
mov	ebx, [esp+50h+var_40]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 283h
jmp	loc_10076D79
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 283h
jmp	loc_10076D79
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2CBh
jmp	loc_10076D79
			
mov	eax, [esp+50h+arg_C]
push	eax
push	1
lea	ecx, [esp+58h+var_2C]
push	1Fh
push	ecx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
sub	esp, 38h
push	ebx
push	ebp
mov	ebp, [esp+40h+arg_0]
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_2C], offset aPkix_list_hash 
mov	[esp+48h+var_C], 2Bh
cmp	ebp, ebx
jz	loc_10077059
cmp	[esp+48h+arg_4], ebx
jz	loc_10077059
mov	esi, [esp+48h+arg_8]
push	esi
push	25h
push	ebp
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_10076EEC
mov	eax, [eax+4]
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	2Bh
push	edx
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 2FBh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
cmp	[ebp+10h], ebx
jnz	short loc_10076F3C
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10076F12
mov	ecx, [esp+48h+var_C]
push	esi
push	2
push	ecx
push	0
push	238h
push	eax
call	sub_10074820
add	esp, 18h
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	2Bh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 238h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	eax, [ebp+0Ch]
xor	edi, edi
mov	[esp+48h+arg_0], eax
test	eax, eax
jz	loc_10076FE6
lea	ecx, [ecx+0]
push	esi
lea	edx, [esp+4Ch+var_38]
push	edx
push	edi
push	ebp
call	sub_10075D80
mov	ebx, [esp+58h+var_38]
add	esp, 10h
mov	[esp+48h+var_28], eax
test	eax, eax
jnz	loc_10077037
test	ebx, ebx
jnz	short loc_10076F7E
mov	[esp+48h+var_34], 64h
jmp	short loc_10076F99
push	esi
lea	eax, [esp+4Ch+var_34]
push	eax
push	ebx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jnz	loc_10077048
mov	eax, [esp+48h+var_30]
mov	ecx, eax
shl	ecx, 5
sub	ecx, eax
add	ecx, [esp+48h+var_34]
mov	[esp+48h+var_30], ecx
test	ebx, ebx
jz	short loc_10076FDB
push	esi
push	ebx
call	sub_100955D0
xor	ebx, ebx
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10076FD7
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_38], ebx
inc	edi
cmp	edi, [esp+48h+arg_0]
jb	loc_10076F50
mov	edx, [esp+48h+var_30]
mov	eax, [esp+48h+arg_4]
mov	[eax], edx
			
test	ebx, ebx
jz	short loc_1007701D
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
test	eax, eax
jz	short loc_1007701D
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], 0
			
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 283h
jmp	short loc_10076FF0
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 285h
jmp	short loc_10076FF0
			
mov	eax, [esp+48h+arg_8]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB754
push	1
mov	[esp+60h+var_50], offset aList 
mov	[esp+60h+var_48], 14h
mov	[esp+60h+var_44], offset sub_100751A0
mov	[esp+60h+var_40], offset sub_10076AF0
mov	[esp+60h+var_3C], offset sub_10076E60
mov	[esp+60h+var_38], offset sub_10076910
mov	[esp+60h+var_30], offset sub_100752C0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	2Bh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_list_regi 
mov	[esp+68h+var_C], 2Bh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 38h
mov	eax, [esp+38h+arg_0]
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_2C], offset aPkix_list_cont 
mov	[esp+48h+var_C], 2Bh
cmp	eax, ebp
jz	loc_100772C6
cmp	[esp+48h+arg_4], ebp
jz	loc_100772C6
cmp	[esp+48h+arg_8], ebp
jz	loc_100772C6
mov	esi, [esp+48h+arg_C]
push	esi
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_100771CB
mov	edx, [eax+4]
push	esi
push	1
lea	ecx, [esp+50h+var_2C]
push	2Bh
push	ecx
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 284h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
xor	edi, edi
cmp	[esp+48h+var_34], ebp
jbe	loc_10077257
mov	ecx, [esp+48h+arg_0]
push	esi
lea	eax, [esp+4Ch+var_38]
push	eax
push	edi
push	ecx
call	sub_10075D80
mov	ebx, [esp+58h+var_38]
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_100772A4
cmp	ebx, ebp
jz	short loc_1007724A
mov	eax, [esp+48h+arg_4]
push	esi
lea	edx, [esp+4Ch+var_30]
push	edx
push	ebx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_100772B5
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10077244
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
xor	ebx, ebx
mov	[esp+48h+var_38], ebx
cmp	[esp+48h+var_30], ebp
jnz	short loc_10077257
inc	edi
cmp	edi, [esp+48h+var_34]
jb	short loc_100771D7
			
mov	ecx, [esp+48h+arg_8]
mov	edx, [esp+48h+var_30]
mov	[ecx], edx
			
cmp	ebx, ebp
jz	short loc_1007728A
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1007728A
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
push	esi
push	1
lea	ecx, [esp+50h+var_2C]
push	2Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 283h
jmp	short loc_10077261
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2CBh
jmp	short loc_10077261
			
mov	edx, [esp+48h+arg_C]
push	edx
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
			
sub	esp, 38h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_list_re_0 
mov	[esp+44h+var_C], 2Bh
cmp	edi, ebp
jz	loc_100774A1
cmp	[esp+44h+arg_4], ebp
jz	loc_100774A1
mov	esi, [esp+44h+arg_8]
push	esi
lea	eax, [esp+48h+var_34]
push	eax
push	edi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1007738D
mov	ecx, [eax+4]
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	2Bh
push	edx
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 284h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
push	ebx
xor	ebx, ebx
cmp	[esp+48h+var_34], ebp
jbe	loc_10077487
jmp	short loc_100773A4
align 10h
mov	edi, [esp+48h+arg_0]
push	esi
lea	edx, [esp+4Ch+var_38]
push	edx
push	ebx
push	edi
call	sub_10075D80
mov	edi, [esp+58h+var_38]
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_1007741A
cmp	edi, ebp
jz	short loc_1007740B
mov	ecx, [esp+48h+arg_4]
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
push	edi
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_10077427
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10077405
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
xor	edi, edi
mov	[esp+48h+var_38], edi
cmp	[esp+48h+var_30], ebp
jnz	short loc_10077438
inc	ebx
cmp	ebx, [esp+48h+var_34]
jb	short loc_100773A0
jmp	short loc_1007745E
mov	eax, [eax+4]
mov	[esp+48h+var_1C], 283h
jmp	short loc_1007745A
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 2CBh
jmp	short loc_1007745E
mov	edx, [esp+48h+arg_0]
push	esi
push	ebx
push	edx
call	sub_10076100
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1007745E
mov	eax, [eax+4]
mov	[esp+48h+var_1C], 27Fh
mov	[esp+48h+var_10], eax
			
cmp	edi, ebp
jz	short loc_10077487
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10077487
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
pop	ebx
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_list_remo 
mov	[esp+40h+var_C], 2Bh
cmp	[esp+40h+arg_0], ebp
jz	loc_10077642
mov	edi, [esp+40h+arg_4]
cmp	edi, ebp
jz	loc_10077642
mov	esi, [esp+40h+arg_8]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	edi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10077559
mov	ecx, [eax+4]
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	2Bh
push	edx
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 284h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
push	ebx
xor	ebx, ebx
cmp	[esp+44h+var_30], ebp
jbe	loc_10077628
jmp	short loc_10077574
jmp	short loc_10077570
align 10h
			
mov	edi, [esp+44h+arg_4]
push	esi
lea	edx, [esp+48h+var_34]
push	edx
push	ebx
push	edi
call	sub_10075D80
mov	edi, [esp+54h+var_34]
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jnz	short loc_100775DF
cmp	edi, ebp
jz	short loc_100775D6
mov	eax, [esp+44h+arg_0]
push	esi
push	edi
push	eax
call	sub_10077300
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jnz	short loc_100775F0
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_100775D0
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
xor	edi, edi
mov	[esp+44h+var_34], edi
inc	ebx
cmp	ebx, [esp+44h+var_30]
jb	short loc_10077570
jmp	short loc_100775FF
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 283h
jmp	short loc_100775FF
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 2CBh
			
cmp	edi, ebp
jz	short loc_10077628
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10077628
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
			
pop	ebx
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 38h
mov	eax, [esp+38h+arg_8]
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_2C], offset aPkix_list_merg 
mov	[esp+48h+var_C], 2Bh
cmp	eax, ebp
jnz	short loc_100776DD
mov	eax, [esp+48h+arg_C]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	esi, [esp+48h+arg_C]
lea	edx, [esp+48h+var_30]
push	esi
push	edx
mov	[eax], ebp
call	sub_100755D0
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1007770D
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 27Dh
jmp	loc_1007788A
mov	eax, [esp+48h+arg_0]
cmp	eax, ebp
jz	short loc_10077730
push	esi
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1007787B
xor	edi, edi
cmp	[esp+48h+var_34], ebp
jbe	short loc_100777B5
jmp	short loc_10077740
align 10h
			
mov	ecx, [esp+48h+arg_0]
push	esi
lea	eax, [esp+4Ch+var_38]
push	eax
push	edi
push	ecx
call	sub_10075D80
mov	ebx, [esp+58h+var_38]
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1007785D
mov	edx, [esp+48h+var_30]
push	esi
push	ebx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1007786E
cmp	ebx, ebp
jz	short loc_100777AE
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_100777A8
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
xor	ebx, ebx
mov	[esp+48h+var_38], ebx
inc	edi
cmp	edi, [esp+48h+var_34]
jb	short loc_10077740
mov	eax, [esp+48h+arg_4]
mov	[esp+48h+var_34], ebp
cmp	eax, ebp
jz	short loc_100777DC
push	esi
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1007787B
xor	edi, edi
cmp	[esp+48h+var_34], ebp
jbe	short loc_10077851
mov	ecx, [esp+48h+arg_4]
push	esi
lea	eax, [esp+4Ch+var_38]
push	eax
push	edi
push	ecx
call	sub_10075D80
mov	ebx, [esp+58h+var_38]
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_1007785D
mov	edx, [esp+48h+var_30]
push	esi
push	ebx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_1007786E
cmp	ebx, ebp
jz	short loc_1007784A
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10077844
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
xor	ebx, ebx
mov	[esp+48h+var_38], ebx
inc	edi
cmp	edi, [esp+48h+var_34]
jb	short loc_100777E4
mov	eax, [esp+48h+var_30]
mov	ecx, [esp+48h+arg_8]
mov	[ecx], eax
jmp	short loc_100778B7
			
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 283h
jmp	short loc_1007788A
			
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 278h
jmp	short loc_10077886
			
mov	edx, [eax+4]
mov	[esp+48h+var_1C], 284h
mov	[esp+48h+var_10], edx
			
mov	eax, [esp+48h+var_30]
cmp	eax, ebp
jz	short loc_100778B7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_100778B7
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
cmp	ebx, ebp
jz	short loc_100778E0
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_100778E0
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
push	esi
push	1
lea	ecx, [esp+50h+var_2C]
push	2Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
			
sub	esp, 34h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_list_ap_0 
mov	[esp+40h+var_C], 2Bh
cmp	[esp+40h+arg_0], ebp
jnz	short loc_10077963
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	edi, [esp+40h+arg_4]
mov	esi, [esp+40h+arg_8]
cmp	edi, ebp
jz	loc_10077A70
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	edi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1007799E
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 284h
jmp	loc_10077A70
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	loc_10077A70
push	ebx
xor	ebx, ebx
cmp	eax, ebp
jbe	loc_10077A6F
jmp	short loc_100779BB
mov	edi, [esp+44h+arg_4]
push	esi
lea	ecx, [esp+48h+var_34]
push	ecx
push	ebx
push	edi
call	sub_10075D80
mov	edi, [esp+54h+var_34]
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jnz	short loc_10077A26
mov	edx, [esp+44h+arg_0]
push	esi
push	edi
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jnz	short loc_10077A37
cmp	edi, ebp
jz	short loc_10077A1D
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10077A17
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
xor	edi, edi
mov	[esp+44h+var_34], edi
inc	ebx
cmp	ebx, [esp+44h+var_30]
jb	short loc_100779B7
jmp	short loc_10077A46
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 283h
jmp	short loc_10077A46
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 278h
			
cmp	edi, ebp
jz	short loc_10077A6F
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10077A6F
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
			
pop	ebx
			
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	2Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
			
sub	esp, 38h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_4]
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_2C], offset aPkix_list_ap_1 
mov	[esp+44h+var_C], 3
cmp	edi, ebp
jz	loc_10077C39
cmp	[esp+44h+arg_0], ebp
jz	loc_10077C39
mov	esi, [esp+44h+arg_8]
push	esi
lea	eax, [esp+48h+var_34]
push	eax
push	edi
call	sub_100757C0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10077B1D
mov	ecx, [eax+4]
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	2Bh
push	edx
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 284h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
push	ebx
xor	ebx, ebx
cmp	[esp+48h+var_34], ebp
jbe	loc_10077C1F
jmp	short loc_10077B34
align 10h
mov	edi, [esp+48h+arg_4]
push	esi
lea	edx, [esp+4Ch+var_38]
push	edx
push	ebx
push	edi
call	sub_10075D80
mov	edi, [esp+58h+var_38]
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_10077BC5
mov	ecx, [esp+48h+arg_0]
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
push	edi
push	ecx
call	sub_10077130
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_10077BD6
cmp	[esp+48h+var_30], ebp
jnz	short loc_10077B89
mov	edx, [esp+48h+arg_0]
push	esi
push	edi
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	short loc_10077BE7
cmp	edi, ebp
jz	short loc_10077BB8
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10077BB2
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
xor	edi, edi
mov	[esp+48h+var_38], edi
inc	ebx
cmp	ebx, [esp+48h+var_34]
jb	loc_10077B30
jmp	short loc_10077BF6
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 283h
jmp	short loc_10077BF6
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 27Ch
jmp	short loc_10077BF6
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 278h
			
cmp	edi, ebp
jz	short loc_10077C1F
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10077C1F
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
pop	ebx
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	2Bh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
			
sub	esp, 44h
mov	eax, [esp+44h+arg_0]
push	ebx
push	ebp
push	esi
xor	ebp, ebp
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	[esp+54h+var_44], ebp
mov	[esp+54h+var_40], ebp
mov	[esp+54h+var_3C], ebx
mov	[esp+54h+var_34], ebp
mov	[esp+54h+var_38], ebp
mov	[esp+54h+var_2C], offset aPkix_list_bubb 
mov	[esp+54h+var_C], 3
cmp	eax, ebp
jz	loc_10077FF8
cmp	[esp+54h+arg_4], ebp
jz	loc_10077FF8
cmp	[esp+54h+arg_8], ebp
jz	loc_10077FF8
mov	esi, [esp+54h+arg_C]
cmp	[eax+8], ebp
jz	short loc_10077D0A
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10077CF5
push	esi
push	2
push	3
push	ebp
push	197h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 197h
jmp	loc_10077F0F
push	esi
lea	ecx, [esp+58h+var_44]
push	ecx
push	eax
call	sub_100752C0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10077D35
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 280h
jmp	loc_10077F0F
mov	ecx, [esp+54h+var_44]
push	esi
lea	eax, [esp+58h+var_38]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10077D64
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 284h
jmp	loc_10077F0F
mov	eax, [esp+54h+var_38]
cmp	eax, 1
jbe	short loc_10077D78
xor	edi, edi
dec	eax
mov	[esp+54h+arg_0], edi
cmp	eax, ebp
ja	short loc_10077D8B
mov	edx, [esp+54h+var_44]
mov	eax, [esp+54h+arg_8]
mov	[eax], edx
jmp	loc_10077F3C
mov	edi, [esp+54h+arg_0]
mov	ecx, [esp+54h+var_44]
push	esi
lea	eax, [esp+58h+var_3C]
push	eax
push	edi
push	ecx
call	sub_10075D80
mov	ebx, [esp+64h+var_3C]
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_10077F00
inc	edi
mov	[esp+54h+var_30], edi
cmp	edi, [esp+54h+var_38]
jnb	loc_10077E90
mov	edi, edi
mov	eax, [esp+54h+var_44]
push	esi
lea	edx, [esp+58h+var_40]
push	edx
push	edi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_10077FB0
mov	edx, [esp+54h+var_40]
push	esi
lea	ecx, [esp+58h+var_34]
push	ecx
push	edx
push	ebx
call	[esp+64h+arg_4]
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_10077FBC
cmp	[esp+54h+var_34], ebp
jle	short loc_10077E54
mov	eax, [esp+54h+var_44]
push	esi
push	ebx
push	edi
push	eax
call	sub_10075F50
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_10077FD0
cmp	ebx, ebp
jz	short loc_10077E4A
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10077E4A
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
			
mov	ebx, [esp+54h+var_40]
mov	[esp+54h+var_3C], ebx
jmp	short loc_10077E81
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jz	short loc_10077E85
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10077E81
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
			
mov	[esp+54h+var_40], ebp
inc	edi
cmp	edi, [esp+54h+var_38]
jb	loc_10077DC0
mov	eax, [esp+54h+arg_0]
mov	ecx, [esp+54h+var_44]
push	esi
push	ebx
push	eax
push	ecx
call	sub_10075F50
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_10077FE4
cmp	ebx, ebp
jz	short loc_10077EDF
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10077ED9
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
xor	ebx, ebx
mov	[esp+54h+var_3C], ebx
mov	ecx, [esp+54h+var_38]
mov	eax, [esp+54h+var_30]
dec	ecx
mov	[esp+54h+arg_0], eax
cmp	eax, ecx
jb	loc_10077D87
mov	edx, [esp+54h+var_44]
mov	eax, [esp+54h+arg_8]
mov	[eax], edx
jmp	short loc_10077F3C
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 283h
			
mov	eax, [esp+54h+var_44]
cmp	eax, ebp
jz	short loc_10077F40
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10077F3C
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
			
mov	[esp+54h+var_44], ebp
cmp	ebx, ebp
jz	short loc_10077F69
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10077F69
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
			
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jz	short loc_10077F96
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10077F96
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
			
push	esi
push	1
lea	ecx, [esp+5Ch+var_2C]
push	2Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
jmp	loc_10077F07
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 11Ah
jmp	loc_10077F0F
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 28Eh
jmp	loc_10077F0F
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 28Eh
jmp	loc_10077F0F
			
mov	edx, [esp+54h+arg_C]
push	edx
push	1
lea	eax, [esp+5Ch+var_2C]
push	1Fh
push	eax
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
			
push	ecx
mov	eax, [esp+4+arg_0]
mov	eax, [eax+28h]
push	ebx
push	ebp
mov	ebp, [esp+0Ch+arg_4]
xor	ebx, ebx
push	esi
push	edi
mov	edi, [esp+14h+arg_8]
mov	[esp+14h+var_4], ebx
cmp	eax, ebx
jnz	short loc_10078067
lea	ecx, [esp+14h+var_4]
push	edi
push	ecx
call	sub_100755D0
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1007809A
lea	ebx, [eax+1]
jmp	short loc_1007806B
mov	[esp+14h+var_4], eax
mov	edx, [esp+14h+var_4]
push	edi
push	ebp
push	edx
call	sub_10075970
mov	esi, eax
add	esp, 0Ch
test	esi, esi
jz	short loc_100780CA
test	ebx, ebx
jz	short loc_1007809A
mov	eax, [esp+14h+var_4]
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+14h+var_4], 0
			
call	sub_10093EA0
cmp	esi, eax
jz	short loc_100780AD
push	edi
push	esi
call	sub_100955D0
add	esp, 8
			
test	ebp, ebp
jz	short loc_100780C4
call	sub_10093EA0
cmp	ebp, eax
jz	short loc_100780C4
push	edi
push	ebp
call	sub_100955D0
add	esp, 8
			
pop	edi
pop	esi
pop	ebp
pop	ebx
pop	ecx
retn
mov	ecx, [esp+14h+var_4]
mov	edx, [esp+14h+arg_0]
mov	[edx+28h], ecx
jmp	short loc_100780AD
align 10h
			
push	ebx
push	ebp
push	esi
mov	esi, [esp+0Ch+arg_0]
xor	ebp, ebp
push	edi
cmp	[esi+14h], ebp
jnz	short loc_10078110
cmp	[esi+4], ebp
jnz	short loc_10078110
mov	eax, [esi+28h]
cmp	eax, ebp
jz	short loc_10078110
mov	edi, [esp+10h+arg_10]
push	edi
lea	ebx, [esi+0Ch]
push	ebx
push	ebp
push	eax
call	sub_10075D80
add	esp, 10h
jmp	short loc_10078137
			
mov	edi, [esp+10h+arg_10]
mov	eax, [esi+4]
mov	ecx, [esp+10h+arg_C]
mov	edx, [esp+10h+arg_8]
push	edi
lea	ebx, [esi+0Ch]
push	ebx
push	eax
mov	eax, [esi]
push	ecx
mov	ecx, [esp+20h+arg_4]
push	edx
push	eax
push	ecx
call	sub_100723C0
add	esp, 1Ch
mov	[esi+8], eax
cmp	[ebx], ebp
jz	short loc_1007817B
mov	ebp, [esi+4]
call	sub_10093EA0
cmp	ebp, eax
jz	short loc_10078172
test	ebp, ebp
jz	short loc_10078172
push	edi
push	ebp
call	sub_100955D0
xor	ebp, ebp
add	esp, 8
mov	[esi+8], eax
cmp	eax, ebp
jz	short loc_1007816F
push	edi
push	eax
push	esi
call	sub_10078030
add	esp, 0Ch
mov	[esi+8], ebp
mov	[esi+4], ebp
			
mov	edx, [ebx]
mov	[esi+8], edx
xor	ebp, ebp
jmp	short loc_100781B8
cmp	[esi+4], ebp
jz	short loc_100781B8
mov	ebx, [esi+8]
call	sub_10093EA0
cmp	ebx, eax
jz	short loc_100781B2
cmp	ebx, ebp
jz	short loc_100781B2
push	edi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esi+8], eax
cmp	eax, ebp
jz	short loc_100781AF
push	edi
push	eax
push	esi
call	sub_10078030
add	esp, 0Ch
mov	[esi+8], ebp
mov	[esi+8], ebp
			
mov	eax, [esi+4]
mov	[esi+8], eax
			
mov	eax, [esi+28h]
cmp	eax, ebp
jz	short loc_100781CC
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esi+28h], ebp
mov	eax, [esi+8]
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
			
push	esi
mov	esi, [esp+4+arg_0]
mov	eax, [esi+24h]
push	edi
mov	edi, [esp+8+arg_C]
test	eax, eax
jz	short loc_1007821B
push	edi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esi+8], eax
test	eax, eax
jz	short loc_10078214
push	edi
push	eax
push	esi
call	sub_10078030
add	esp, 0Ch
mov	dword ptr [esi+8], 0
mov	dword ptr [esi+24h], 0
cmp	dword ptr [esi+14h], 0
jnz	short loc_10078232
cmp	dword ptr [esi+4], 0
jnz	short loc_10078232
cmp	dword ptr [esi+28h], 0
jnz	short loc_10078232
pop	edi
xor	eax, eax
pop	esi
retn
			
mov	eax, [esi+1Ch]
mov	ecx, [esi+10h]
mov	edx, [esp+8+arg_4]
push	edi
push	eax
push	ecx
push	edx
push	esi
call	sub_100780E0
add	esp, 14h
pop	edi
pop	esi
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_crlsele_0 
mov	[esp+38h+var_C], 1Ah
cmp	edi, ebx
jnz	short loc_100782AD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	17h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_100782D6
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2F1h
jmp	short loc_10078336
mov	eax, [edi+4]
mov	[edi], ebx
cmp	eax, ebx
jz	short loc_10078307
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10078304
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10078336
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10078333
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	1Ah
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 68h
push	ebp
mov	ebp, [esp+6Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+74h+var_2C]
rep movsd
mov	[esp+74h+var_5C], 0
mov	[esp+74h+var_2C], offset aPkix_crlsele_1 
mov	[esp+74h+var_C], 1Ah
test	ebp, ebp
jz	loc_1007861D
cmp	[esp+74h+arg_4], 0
jz	loc_1007861D
push	ebx
mov	ebx, [esp+78h+arg_8]
push	ebx
push	17h
push	ebp
call	sub_10072630
xor	edx, edx
add	esp, 0Ch
mov	[esp+78h+var_28], eax
cmp	eax, edx
jz	short loc_100783C7
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 2F1h
jmp	loc_10078603
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+78h+var_58]
rep movsd
mov	[esp+78h+var_60], edx
mov	[esp+78h+var_64], edx
mov	[esp+78h+arg_0], edx
mov	[esp+78h+var_68], edx
mov	[esp+78h+var_58], offset aPkix_crlsele_2 
mov	[esp+78h+var_38], 1Ah
push	ebx		
cmp	[ebp+4], edx
jnz	short loc_10078425
push	1
lea	ecx, [esp+80h+var_58]
push	1Fh
push	ecx
mov	[esp+88h+var_44], 1
mov	[esp+88h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
xor	esi, esi
jmp	loc_100785DD
lea	eax, [esp+7Ch+var_64]
push	eax		
push	edx		
push	offset aMatchcallback0 
push	edx		
call	sub_10097D90
xor	esi, esi
add	esp, 14h
mov	[esp+78h+var_54], eax
cmp	eax, esi
jz	short loc_10078457
mov	ecx, [eax+4]
mov	[esp+78h+var_3C], ecx
mov	[esp+78h+var_48], 3CFh
jmp	loc_10078538
mov	eax, [ebp+4]
push	ebx		
cmp	eax, esi
jz	short loc_10078477
lea	edx, [esp+7Ch+arg_0]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 118h
jmp	short loc_10078493
lea	eax, [esp+7Ch+arg_0]
push	eax		
push	esi		
push	offset aNull	
push	esi		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+78h+var_54], eax
cmp	eax, esi
jz	short loc_100784AB
mov	edx, [eax+4]
mov	[esp+78h+var_3C], edx
mov	[esp+78h+var_48], ecx
jmp	loc_10078538
mov	eax, [ebp+8]
push	ebx		
cmp	eax, esi
jz	short loc_100784C8
lea	ecx, [esp+7Ch+var_68]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_100784E1
lea	edx, [esp+7Ch+var_68]
push	edx		
push	esi		
push	offset aNull	
push	esi		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+78h+var_54], eax
cmp	eax, esi
jz	short loc_100784F6
mov	eax, [eax+4]
mov	[esp+78h+var_3C], eax
mov	[esp+78h+var_48], ecx
jmp	short loc_10078538
mov	ecx, [esp+78h+var_68]
mov	edx, [esp+78h+arg_0]
mov	eax, [ebp+0]
push	ecx
mov	ecx, [esp+7Ch+var_64]
push	edx
push	eax
push	ecx
lea	edx, [esp+88h+var_60]
push	ebx
push	edx
call	sub_10098590
add	esp, 18h
mov	[esp+78h+var_54], eax
cmp	eax, esi
jz	short loc_10078530
mov	eax, [eax+4]
mov	[esp+78h+var_3C], eax
mov	[esp+78h+var_48], 3CDh
jmp	short loc_10078538
mov	ecx, [esp+78h+var_60]
mov	[esp+78h+var_5C], ecx
			
mov	eax, [esp+78h+arg_0]
cmp	eax, esi
jz	short loc_10078569
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_50], eax
cmp	eax, esi
jz	short loc_10078565
push	ebx
push	eax
lea	edx, [esp+80h+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_50], esi
mov	[esp+78h+arg_0], esi
mov	eax, [esp+78h+var_68]
cmp	eax, esi
jz	short loc_1007859A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_50], eax
cmp	eax, esi
jz	short loc_10078596
push	ebx
push	eax
lea	eax, [esp+80h+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_50], esi
mov	[esp+78h+var_68], esi
mov	eax, [esp+78h+var_64]
cmp	eax, esi
jz	short loc_100785CB
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_50], eax
cmp	eax, esi
jz	short loc_100785C7
push	ebx
push	eax
lea	ecx, [esp+80h+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_50], esi
mov	[esp+78h+var_64], esi
push	ebx
push	1
lea	edx, [esp+80h+var_58]
push	1Ah
push	edx
call	sub_100781E0
add	esp, 10h
mov	[esp+78h+var_28], eax
cmp	eax, esi
jz	short loc_100785F6
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 17Bh
jmp	short loc_10078603
mov	ecx, [esp+78h+arg_4]
mov	edx, [esp+78h+var_5C]
mov	[ecx], edx
			
push	ebx
push	1
lea	eax, [esp+80h+var_2C]
push	1Ah
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 68h
retn
			
mov	ecx, [esp+74h+arg_8]
push	ecx
push	1
lea	edx, [esp+7Ch+var_2C]
push	1Fh
push	edx
mov	[esp+84h+var_18], 1
mov	[esp+84h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 68h
retn
align 10h
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_0]
xor	ebx, ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_2C], offset aPkix_crlsele_3 
mov	[esp+44h+var_C], 1Ah
cmp	esi, ebx
jz	loc_100787A1
mov	ebp, [esp+44h+arg_4]
cmp	ebp, ebx
jz	loc_100787A1
mov	edi, [esp+44h+arg_8]
push	edi
push	17h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_100786DA
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+4Ch+var_10], eax
lea	eax, [esp+4Ch+var_2C]
push	1Ah
push	eax
mov	[esp+54h+var_1C], 2F1h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_10078721
push	edi
lea	ecx, [esp+48h+var_30]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10078725
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Ah
push	eax
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
mov	[esp+44h+var_30], ebx
mov	eax, [esi+8]
cmp	eax, ebx
jz	short loc_1007876C
push	edi
lea	ecx, [esp+48h+var_34]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10078770
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Ah
push	eax
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
mov	[esp+44h+var_34], ebx
mov	eax, [esi]
mov	ecx, [esp+44h+var_34]
lea	eax, [eax+ecx*8]
mov	edx, eax
shl	edx, 5
push	edi
sub	edx, eax
add	edx, [esp+48h+var_30]
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Ah
push	eax
mov	[ebp+0], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	ecx, [esp+44h+arg_8]
push	ecx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_crlsele_4 
mov	[esp+38h+var_C], 1Ah
test	edi, edi
jz	loc_10078988
mov	esi, [esp+38h+arg_4]
test	esi, esi
jz	loc_10078988
cmp	[esp+38h+arg_8], 0
jz	loc_10078988
push	ebx
mov	ebx, [esp+3Ch+arg_C]
push	ebx
push	17h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007884D
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 1E4h
jmp	loc_1007896F
cmp	edi, esi
jnz	short loc_10078860
mov	ecx, [esp+3Ch+arg_8]
mov	dword ptr [ecx], 1
jmp	loc_1007896F
mov	edx, [esp+3Ch+arg_8]
push	ebx
lea	eax, [esp+40h+arg_0]
push	eax
push	esi
mov	dword ptr [edx], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10078895
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 152h
jmp	loc_1007896F
cmp	[esp+3Ch+arg_0], 17h
jnz	loc_1007896F
mov	edx, [edi]
xor	eax, eax
cmp	edx, [esi]
setz	al
mov	[esp+3Ch+var_30], eax
test	eax, eax
jz	loc_1007896F
mov	eax, [edi+4]
test	eax, eax
jz	short loc_100788F3
mov	ecx, [esi+4]
test	ecx, ecx
jz	short loc_100788EF
push	ebx
lea	edx, [esp+40h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007890D
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 110h
jmp	loc_1007896F
test	eax, eax
jnz	short loc_10078903
cmp	dword ptr [esi+4], 0
jnz	short loc_10078903
mov	[esp+3Ch+var_30], 1
jmp	short loc_10078914
			
mov	[esp+3Ch+var_30], 0
jmp	short loc_1007896F
cmp	[esp+3Ch+var_30], 0
jz	short loc_1007896F
mov	eax, [edi+8]
test	eax, eax
jz	short loc_1007894F
mov	ecx, [esi+8]
test	ecx, ecx
jz	short loc_1007894B
push	ebx
lea	edx, [esp+40h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10078965
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 110h
jmp	short loc_1007896F
test	eax, eax
jnz	short loc_1007895D
cmp	dword ptr [esi+8], 0
mov	[esp+3Ch+var_30], 1
jz	short loc_10078965
mov	[esp+3Ch+var_30], 0
			
mov	ecx, [esp+3Ch+arg_8]
mov	edx, [esp+3Ch+var_30]
mov	[ecx], edx
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	1Ah
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	ecx, [esp+38h+arg_C]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_crlsele_5 
mov	[esp+40h+var_C], 1Ah
cmp	edi, ebx
jz	loc_10078B45
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10078B45
mov	esi, [esp+40h+arg_8]
push	esi
push	17h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10078A31
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2F1h
jmp	loc_10078AE4
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	0Ch
push	17h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10078A5F
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 157h
jmp	loc_10078AE4
mov	eax, [esp+40h+var_30]
mov	edx, [edi]
mov	[eax], edx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10078A99
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 4
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10078AA0
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2CAh
jmp	short loc_10078AE4
mov	eax, [esp+40h+var_30]
mov	[eax+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10078AD2
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 8
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10078ADD
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C3h
jmp	short loc_10078AE4
mov	eax, [esp+40h+var_30]
mov	[eax+8], ebx
mov	eax, [esp+40h+var_28]
mov	ecx, [esp+40h+var_30]
mov	[ebp+0], ecx
			
cmp	[esp+40h+var_18], ebx
jnz	short loc_10078AFA
cmp	eax, ebx
jnz	short loc_10078AFA
cmp	[esp+40h+var_14], ebx
jnz	short loc_10078AFA
cmp	[esp+40h+var_4], ebx
jz	short loc_10078B2B
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10078B2B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10078B27
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_30], ebx
			
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	1Ah
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 54h
mov	eax, [esp+54h+arg_0]
push	ebx
xor	ebx, ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_2C]
mov	edx, 1
rep movsd
mov	[esp+60h+var_40], ebx
mov	[esp+60h+var_4C], ebx
mov	[esp+60h+var_50], ebx
mov	[esp+60h+var_44], ebx
mov	[esp+60h+var_54], edx
mov	[esp+60h+var_34], ebx
mov	[esp+60h+var_3C], ebx
mov	[esp+60h+var_38], ebx
mov	[esp+60h+var_48], ebx
mov	[esp+60h+var_30], ebx
mov	[esp+60h+var_2C], offset aPkix_crlsele_8 
mov	[esp+60h+var_C], 1Ah
cmp	eax, ebx
jz	loc_10079073
mov	edi, [esp+60h+arg_4]
cmp	edi, ebx
jz	loc_10079073
mov	ecx, [esp+60h+arg_8]
mov	esi, [esp+60h+arg_C]
push	ebp
mov	[ecx], edx
mov	ebp, [eax+4]
cmp	ebp, ebx
jz	loc_10079059
push	esi
lea	edx, [esp+68h+var_50]
push	edx
push	ebp
call	sub_1007A770
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078C2E
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 112h
jmp	loc_10078F02
cmp	[esp+64h+var_50], ebx
jz	loc_10078D58
push	esi
lea	ecx, [esp+68h+var_40]
push	ecx
push	edi
mov	[esp+70h+var_54], ebx
call	sub_10085F40
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078C67
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 16Dh
jmp	loc_10078F02
mov	ecx, [esp+64h+var_50]
push	esi
lea	eax, [esp+68h+var_34]
push	eax
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078C96
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 284h
jmp	loc_10078F02
xor	edi, edi
cmp	[esp+64h+var_34], ebx
jbe	short loc_10078D1B
mov	edi, edi
mov	ecx, [esp+64h+var_50]
push	esi
lea	eax, [esp+68h+var_4C]
push	eax
push	edi
push	ecx
call	sub_10075D80
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jnz	short loc_10078D2C
mov	eax, [esp+64h+var_4C]
mov	ecx, [esp+64h+var_40]
push	esi
lea	edx, [esp+68h+var_54]
push	edx
push	eax
push	ecx
call	sub_1008FF20
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jnz	short loc_10078D40
mov	eax, [esp+64h+var_4C]
cmp	eax, ebx
jz	short loc_10078D0D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10078D09
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_4C], ebx
cmp	[esp+64h+var_54], 1
jz	short loc_10078D1B
inc	edi
cmp	edi, [esp+64h+var_34]
jb	short loc_10078CA0
			
cmp	[esp+64h+var_54], ebx
jnz	short loc_10078D54
mov	edx, [esp+64h+arg_8]
mov	[edx], ebx
jmp	loc_10078F02
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 283h
jmp	loc_10078F02
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 435h
jmp	loc_10078F02
mov	edi, [esp+64h+arg_4]
push	esi
lea	eax, [esp+68h+var_44]
push	eax
push	ebp
call	sub_1007A940
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078D83
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 111h
jmp	loc_10078F02
cmp	[esp+64h+var_44], ebx
jz	short loc_10078DF8
push	esi
lea	edx, [esp+68h+var_30]
push	edx
push	ebp
call	sub_1007AB20
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078DB4
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 115h
jmp	loc_10078F02
cmp	[esp+64h+var_30], ebx
jz	short loc_10078DF8
mov	edx, [esp+64h+var_44]
push	esi
lea	ecx, [esp+68h+var_54]
push	ecx
push	edx
push	edi
mov	[esp+74h+var_54], ebx
call	sub_10085C20
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078DEE
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 17Dh
jmp	loc_10078F02
cmp	[esp+64h+var_54], ebx
jz	loc_10078EFC
			
push	esi
lea	edx, [esp+68h+var_48]
push	edx
push	edi
call	sub_10085140
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078E23
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 16Ch
jmp	loc_10078F02
cmp	[esp+64h+var_48], ebx
jz	loc_10078F02
push	esi
lea	ecx, [esp+68h+var_3C]
push	ecx
push	ebp
mov	[esp+70h+var_54], ebx
call	sub_1007AC70
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078E5C
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 114h
jmp	loc_10078F02
mov	eax, [esp+64h+var_3C]
cmp	eax, ebx
jz	short loc_10078E98
mov	edx, [esp+64h+var_48]
push	esi
lea	ecx, [esp+68h+var_54]
push	ecx
push	edx
push	eax
call	sub_10095CE0
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078E91
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 2C0h
jmp	short loc_10078F02
cmp	[esp+64h+var_54], 1
jz	short loc_10078EFC
push	esi
lea	edx, [esp+68h+var_38]
push	edx
push	ebp
call	sub_1007ABA0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078EC0
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 113h
jmp	short loc_10078F02
mov	eax, [esp+64h+var_38]
cmp	eax, ebx
jz	short loc_10078F02
mov	edx, [esp+64h+var_48]
push	esi
lea	ecx, [esp+68h+var_54]
push	ecx
push	eax
push	edx
call	sub_10095CE0
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebx
jz	short loc_10078EF5
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 2C0h
jmp	short loc_10078F02
cmp	[esp+64h+var_54], 1
jnz	short loc_10078F02
			
mov	ecx, [esp+64h+arg_8]
mov	[ecx], ebx
			
mov	eax, [esp+64h+var_50]
cmp	eax, ebx
jz	short loc_10078F33
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10078F2F
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_50], ebx
mov	eax, [esp+64h+var_44]
cmp	eax, ebx
jz	short loc_10078F64
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10078F60
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_44], ebx
mov	eax, [esp+64h+var_40]
cmp	eax, ebx
jz	short loc_10078F95
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10078F91
push	esi
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_40], ebx
mov	eax, [esp+64h+var_4C]
cmp	eax, ebx
jz	short loc_10078FC6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10078FC2
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_4C], ebx
mov	eax, [esp+64h+var_48]
cmp	eax, ebx
jz	short loc_10078FF7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10078FF3
push	esi
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_48], ebx
mov	eax, [esp+64h+var_3C]
cmp	eax, ebx
jz	short loc_10079028
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10079024
push	esi
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_3C], ebx
mov	eax, [esp+64h+var_38]
cmp	eax, ebx
jz	short loc_10079059
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebx
jz	short loc_10079055
push	esi
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebx
mov	[esp+64h+var_38], ebx
			
push	esi
push	1
lea	eax, [esp+6Ch+var_2C]
push	1Ah
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 54h
retn
			
mov	ecx, [esp+60h+arg_C]
push	ecx
push	edx
mov	[esp+68h+var_18], edx
lea	edx, [esp+68h+var_2C]
push	1Fh
push	edx
mov	[esp+70h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 54h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB55C
push	1
mov	[esp+60h+var_50], offset aCrlselector 
mov	[esp+60h+var_48], 0Ch
mov	[esp+60h+var_44], offset sub_10078250
mov	[esp+60h+var_40], offset sub_100787D0
mov	[esp+60h+var_3C], offset sub_10078650
mov	[esp+60h+var_38], offset sub_10078350
mov	[esp+60h+var_30], offset sub_100789C0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	1Ah
push	ecx
mov	[esp+68h+var_2C], offset aPkix_crlselect 
mov	[esp+68h+var_C], 1Ah
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_8]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_crlsele_7 
mov	[esp+40h+var_C], 1Ah
cmp	ebp, ebx
jnz	short loc_100791A3
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+40h+arg_C]
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	0Ch
push	17h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007921B
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 132h
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10079201
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100791FD
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	1Ah
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+40h+arg_0]
cmp	eax, ebx
jz	short loc_1007922B
mov	ecx, [esp+40h+var_30]
mov	[ecx], eax
jmp	short loc_10079235
mov	edx, [esp+40h+var_30]
mov	dword ptr [edx], offset	sub_10078B80
mov	edi, [esp+40h+arg_4]
mov	eax, [esp+40h+var_30]
mov	[eax+4], ebx
cmp	edi, ebx
jz	short loc_1007926E
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007926E
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
jmp	loc_100791D0
			
mov	edx, [esp+40h+var_30]
mov	[edx+8], edi
mov	eax, [esp+40h+var_30]
mov	[ebp+0], eax
jmp	loc_100791FD
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_crlsele_9 
mov	[esp+38h+var_C], 1Ah
test	edi, edi
jz	loc_10079387
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_10079387
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10079309
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10079302
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	dword ptr [edi+4], 0
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
push	esi
test	eax, eax
jz	short loc_1007934B
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	1Ah
push	eax
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
push	edi
mov	[edi+4], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1007936E
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2D0h
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	1Ah
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
push	ebx
push	ebp
push	esi
xor	ebx, ebx
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_30], ebp
mov	[esp+4Ch+var_2C], offset aPkix_crlsele_6 
mov	[esp+4Ch+var_C], 8
cmp	eax, ebx
jnz	short loc_10079431
mov	eax, [esp+4Ch+arg_10]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	1Fh
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	esi, [esp+4Ch+arg_10]
push	esi
lea	edx, [esp+50h+var_34]
push	edx
push	eax
call	sub_1007DC60
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10079460
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 83h
jmp	loc_100795D1
mov	edi, [esp+4Ch+arg_8]
push	esi
cmp	edi, ebx
jz	short loc_100794C0
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10079492
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
jmp	loc_100795D1
mov	[esp+4Ch+var_38], edi
lea	ecx, [esp+4Ch+var_3C]
push	esi
push	ecx
call	sub_1007A680
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100794EA
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 10Fh
jmp	loc_100795D1
lea	edx, [esp+50h+var_38]
push	edx
push	ebx
call	sub_10088CB0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10079496
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 180h
jmp	loc_100795D1
mov	eax, [esp+4Ch+var_34]
mov	ecx, [esp+4Ch+var_3C]
push	esi
push	eax
push	ecx
call	sub_1007A840
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10079519
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 10Eh
jmp	loc_100795D1
mov	eax, [esp+4Ch+arg_4]
mov	ecx, [esp+4Ch+var_3C]
push	esi
push	eax
push	ecx
call	sub_1007AD40
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10079548
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 116h
jmp	loc_100795D1
mov	eax, [esp+4Ch+var_38]
mov	ecx, [esp+4Ch+var_3C]
push	esi
push	eax
push	ecx
call	sub_1007AA10
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10079574
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 117h
jmp	short loc_100795D1
push	esi
lea	eax, [esp+50h+var_30]
push	eax
push	ebx
push	ebx
call	sub_10079140
mov	ebp, [esp+5Ch+var_30]
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100795A1
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 173h
jmp	short loc_100795D1
mov	edx, [esp+4Ch+var_3C]
push	esi
push	edx
push	ebp
call	sub_10079290
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100795C9
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 17Ah
jmp	short loc_100795D1
mov	ecx, [esp+4Ch+arg_C]
mov	[ecx], ebp
xor	ebp, ebp
			
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_10079602
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100795FE
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_10079633
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1007962F
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_10079664
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10079660
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
cmp	ebp, ebx
jz	short loc_1007968D
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1007968D
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
			
push	esi
push	1
lea	eax, [esp+54h+var_2C]
push	8
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_comcrls_0 
mov	[esp+38h+var_C], 15h
cmp	edi, ebx
jnz	short loc_1007970D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	13h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10079739
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2EEh
jmp	loc_10079851
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_10079766
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10079764
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10079795
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10079792
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_100797C4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100797C1
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+0Ch], ebx
mov	eax, [edi+14h]
cmp	eax, ebx
jz	short loc_100797F3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100797F0
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+14h], ebx
mov	eax, [edi+18h]
cmp	eax, ebx
jz	short loc_10079822
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1007981F
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+18h], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10079851
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1007984E
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
			
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	15h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 48h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	esi, [esp+54h+arg_0]
mov	[esp+54h+var_48], ebp
mov	[esp+54h+var_44], ebp
mov	[esp+54h+var_40], ebp
mov	[esp+54h+var_3C], ebp
mov	[esp+54h+var_38], ebp
mov	[esp+54h+var_30], ebp
mov	[esp+54h+var_34], ebp
mov	[esp+54h+var_2C], offset aPkix_comcrls_2 
mov	[esp+54h+var_C], 15h
cmp	esi, ebp
jz	loc_10079C09
mov	edi, [esp+54h+arg_4]
cmp	edi, ebp
jz	loc_10079C09
push	ebx		
lea	eax, [esp+58h+var_34]
push	eax		
push	ebp		
push	offset aIssuernamesSDa 
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_100798FD
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 3CFh
jmp	loc_10079ACA
mov	eax, [esi]
push	ebx		
cmp	eax, ebp
jz	short loc_10079919
lea	edx, [esp+58h+var_48]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10079932
lea	eax, [esp+58h+var_48]
push	eax		
push	ebp		
push	offset aNull	
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_1007994A
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], ecx
jmp	loc_10079ACA
mov	eax, [esi+0Ch]
push	ebx		
cmp	eax, ebp
jz	short loc_10079967
lea	ecx, [esp+58h+var_44]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 185h
jmp	short loc_10079980
lea	edx, [esp+58h+var_44]
push	edx		
push	ebp		
push	offset aNull	
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10079998
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], ecx
jmp	loc_10079ACA
mov	eax, [esi+14h]
push	ebx		
cmp	eax, ebp
jz	short loc_100799B5
lea	ecx, [esp+58h+var_40]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 22h
jmp	short loc_100799CE
lea	edx, [esp+58h+var_40]
push	edx		
push	ebp		
push	offset aNull	
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_100799E6
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], ecx
jmp	loc_10079ACA
mov	eax, [esi+18h]
push	ebx		
cmp	eax, ebp
jz	short loc_10079A03
lea	ecx, [esp+58h+var_3C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 22h
jmp	short loc_10079A1C
lea	edx, [esp+58h+var_3C]
push	edx		
push	ebp		
push	offset aNull	
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10079A34
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], ecx
jmp	loc_10079ACA
mov	eax, [esi+4]
push	ebx		
cmp	eax, ebp
jz	short loc_10079A51
lea	ecx, [esp+58h+var_38]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 0DEh
jmp	short loc_10079A6A
lea	edx, [esp+58h+var_38]
push	edx		
push	ebp		
push	offset aNull	
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10079A7F
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], ecx
jmp	short loc_10079ACA
mov	ecx, [esp+54h+var_38]
mov	edx, [esp+54h+var_3C]
mov	eax, [esp+54h+var_40]
push	ecx
mov	ecx, [esp+58h+var_44]
push	edx
mov	edx, [esp+5Ch+var_48]
push	eax
mov	eax, [esp+60h+var_34]
push	ecx
push	edx
push	eax
lea	ecx, [esp+6Ch+var_30]
push	ebx
push	ecx
call	sub_10098590
add	esp, 20h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_10079AC4
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 3CDh
jmp	short loc_10079ACA
mov	eax, [esp+54h+var_30]
mov	[edi], eax
			
mov	eax, [esp+54h+var_48]
cmp	eax, ebp
jz	short loc_10079AFB
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10079AF7
push	ebx
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_48], ebp
mov	eax, [esp+54h+var_44]
cmp	eax, ebp
jz	short loc_10079B2C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10079B28
push	ebx
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_44], ebp
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jz	short loc_10079B5D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10079B59
push	ebx
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_40], ebp
mov	eax, [esp+54h+var_3C]
cmp	eax, ebp
jz	short loc_10079B8E
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10079B8A
push	ebx
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_3C], ebp
mov	eax, [esp+54h+var_38]
cmp	eax, ebp
jz	short loc_10079BBF
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10079BBB
push	ebx
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_38], ebp
mov	eax, [esp+54h+var_34]
cmp	eax, ebp
jz	short loc_10079BF0
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10079BEC
push	ebx
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_34], ebp
push	ebx
push	1
lea	ecx, [esp+5Ch+var_2C]
push	15h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 48h
retn
			
push	ebx
push	1
lea	edx, [esp+5Ch+var_2C]
push	1Fh
push	edx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 48h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_comcrls_1 
mov	[esp+38h+var_C], 15h
test	esi, esi
jz	short loc_10079CED
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	short loc_10079CED
push	ebx
mov	ebx, [esp+3Ch+arg_8]
push	ebx
push	13h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10079CA7
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 2EEh
jmp	short loc_10079CD4
lea	ecx, [esp+3Ch+var_30]
push	ecx
push	esi
call	sub_10079870
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10079CCE
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 119h
jmp	short loc_10079CD4
mov	eax, [esp+3Ch+var_30]
mov	[edi], eax
			
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	15h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 40h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	esi, [esp+50h+arg_0]
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_38], ebx
mov	[esp+50h+var_30], ebx
mov	[esp+50h+var_34], ebx
mov	[esp+50h+var_2C], offset aPkix_comcrls_3 
mov	[esp+50h+var_C], 15h
cmp	esi, ebx
jz	loc_10079F66
mov	ebp, [esp+50h+arg_4]
cmp	ebp, ebx
jz	loc_10079F66
mov	edi, [esp+50h+arg_8]
push	edi
push	13h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10079DB6
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+58h+var_2C]
push	15h
push	ecx
mov	[esp+60h+var_10], eax
mov	[esp+60h+var_1C], 2EEh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_10079DFC
push	edi
lea	ecx, [esp+54h+var_3C]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10079E00
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+58h+var_2C]
push	15h
push	ecx
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	[esp+50h+var_3C], ebx
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_10079E47
push	edi
lea	ecx, [esp+54h+var_40]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10079E4B
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+58h+var_2C]
push	15h
push	ecx
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	[esp+50h+var_40], ebx
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_10079E92
push	edi
lea	ecx, [esp+54h+var_38]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10079E96
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+58h+var_2C]
push	15h
push	ecx
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	[esp+50h+var_38], ebx
mov	eax, [esi+14h]
cmp	eax, ebx
jz	short loc_10079EDD
push	edi
lea	ecx, [esp+54h+var_30]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10079EE1
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+58h+var_2C]
push	15h
push	ecx
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	[esp+50h+var_30], ebx
mov	eax, [esi+18h]
cmp	eax, ebx
jz	short loc_10079F28
push	edi
lea	ecx, [esp+54h+var_34]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10079F2C
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+58h+var_2C]
push	15h
push	ecx
mov	[esp+60h+var_10], edx
mov	[esp+60h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
mov	[esp+50h+var_34], ebx
mov	eax, [esp+50h+var_40]
mov	ecx, [esp+50h+var_3C]
lea	edx, [eax+ecx*8]
mov	eax, [esp+50h+var_38]
lea	ecx, [eax+edx*8]
mov	edx, [esp+50h+var_34]
push	edi
lea	eax, [edx+ecx*8]
add	eax, [esp+54h+var_30]
push	1
lea	ecx, [esp+58h+var_2C]
push	15h
push	ecx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	edx, [esp+50h+arg_8]
push	edx
push	1
lea	eax, [esp+58h+var_2C]
push	1Fh
push	eax
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_0]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_comcrls_4 
mov	[esp+40h+var_C], 15h
cmp	ebp, ebx
jz	loc_1007A30D
mov	esi, [esp+40h+arg_4]
cmp	esi, ebx
jz	loc_1007A30D
cmp	[esp+40h+arg_8], ebx
jz	loc_1007A30D
mov	edi, [esp+40h+arg_C]
push	edi
push	13h
push	ebp
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A030
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	[esp+50h+var_1C], 1E1h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	ebp, esi
jnz	short loc_1007A058
mov	ecx, [esp+40h+arg_8]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	dword ptr [ecx], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	edx, [esp+40h+arg_8]
push	edi
lea	eax, [esp+44h+arg_0]
push	eax
push	esi
mov	[edx], ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A09E
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+arg_0], 13h
jnz	loc_1007A2F3
mov	ecx, [ebp+0]
cmp	ecx, ebx
jz	short loc_1007A0F7
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_1007A105
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A123
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	[esp+50h+var_1C], 281h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esi], ebx
jnz	short loc_1007A105
mov	[esp+40h+var_30], 1
jmp	short loc_1007A12E
			
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	[esp+50h+var_30], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+var_30], 1
jnz	loc_1007A2F3
mov	eax, [ebp+0Ch]
cmp	eax, ebx
jz	short loc_1007A181
mov	ecx, [esi+0Ch]
cmp	ecx, ebx
jz	short loc_1007A17D
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A194
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	[esp+50h+var_1C], 182h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	eax, ebx
jnz	short loc_1007A105
cmp	[esi+0Ch], ebx
jnz	loc_1007A105
mov	[esp+40h+var_30], 1
jmp	short loc_1007A19F
cmp	[esp+40h+var_30], 1
jnz	loc_1007A2F3
mov	eax, [ebp+14h]
cmp	eax, ebx
jz	short loc_1007A1F6
mov	ecx, [esi+14h]
cmp	ecx, ebx
jz	short loc_1007A1EE
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A209
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	[esp+50h+var_1C], 20h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	eax, ebx
jnz	loc_1007A105
cmp	[esi+14h], ebx
jnz	loc_1007A105
mov	[esp+40h+var_30], 1
jmp	short loc_1007A214
cmp	[esp+40h+var_30], 1
jnz	loc_1007A2F3
mov	eax, [ebp+18h]
cmp	eax, ebx
jz	short loc_1007A26B
mov	ecx, [esi+18h]
cmp	ecx, ebx
jz	short loc_1007A263
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A27E
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	[esp+50h+var_1C], 20h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	eax, ebx
jnz	loc_1007A105
cmp	[esi+18h], ebx
jnz	loc_1007A105
mov	[esp+40h+var_30], 1
jmp	short loc_1007A285
cmp	[esp+40h+var_30], 1
jnz	short loc_1007A2F3
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_1007A2D8
mov	ecx, [esi+4]
cmp	ecx, ebx
jz	short loc_1007A2D4
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A2E9
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
mov	[esp+50h+var_1C], 76h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	eax, ebx
jnz	short loc_1007A2E5
mov	[esp+40h+var_30], 1
cmp	[esi+4], ebx
jz	short loc_1007A2E9
mov	[esp+40h+var_30], ebx
			
mov	ecx, [esp+40h+arg_8]
mov	edx, [esp+40h+var_30]
mov	[ecx], edx
			
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_comcrls_5 
mov	[esp+40h+var_C], 15h
cmp	edi, ebx
jz	loc_1007A5A4
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_1007A5A4
mov	esi, [esp+40h+arg_8]
push	esi
push	13h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A3B1
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2EEh
jmp	loc_1007A543
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	1Ch
push	13h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A3DF
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2BEh
jmp	loc_1007A543
mov	eax, [edi+4]
mov	edx, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1007A414
push	esi
add	edx, 4
push	edx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A417
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 2C2h
jmp	loc_1007A543
mov	[edx+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_1007A44C
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 8
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A453
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C2h
jmp	loc_1007A543
mov	eax, [esp+40h+var_30]
mov	[eax+8], ebx
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_1007A484
mov	ecx, [esp+40h+var_30]
push	esi
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A48A
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C6h
jmp	loc_1007A543
mov	eax, [esp+40h+var_30]
mov	[eax], ebx
mov	eax, [edi+0Ch]
cmp	eax, ebx
jz	short loc_1007A4BF
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 0Ch
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A4C6
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C4h
jmp	loc_1007A543
mov	eax, [esp+40h+var_30]
mov	[eax+0Ch], ebx
mov	eax, [edi+14h]
cmp	eax, ebx
jz	short loc_1007A4F8
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 14h
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A4FF
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C8h
jmp	short loc_1007A543
mov	eax, [esp+40h+var_30]
mov	[eax+14h], ebx
mov	eax, [edi+18h]
cmp	eax, ebx
jz	short loc_1007A531
mov	ecx, [esp+40h+var_30]
push	esi
add	ecx, 18h
push	ecx
push	eax
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007A53C
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2C9h
jmp	short loc_1007A543
mov	eax, [esp+40h+var_30]
mov	[eax+18h], ebx
mov	eax, [esp+40h+var_28]
mov	ecx, [esp+40h+var_30]
mov	[ebp+0], ecx
			
cmp	[esp+40h+var_18], ebx
jnz	short loc_1007A559
cmp	eax, ebx
jnz	short loc_1007A559
cmp	[esp+40h+var_14], ebx
jnz	short loc_1007A559
cmp	[esp+40h+var_4], ebx
jz	short loc_1007A58A
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1007A58A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007A586
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_30], ebx
			
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	15h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB4CC
push	1
mov	[esp+60h+var_50], offset aComcrlselparam 
mov	[esp+60h+var_48], 1Ch
mov	[esp+60h+var_44], offset sub_100796B0
mov	[esp+60h+var_40], offset sub_10079FA0
mov	[esp+60h+var_3C], offset sub_10079D20
mov	[esp+60h+var_38], offset sub_10079C40
mov	[esp+60h+var_30], offset sub_1007A340
rep movsd
lea	ecx, [esp+60h+var_2C]
push	15h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_comcrlsel 
mov	[esp+68h+var_C], 15h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_comcrls_6 
mov	[esp+3Ch+var_C], 15h
cmp	edi, ebx
jnz	short loc_1007A6E1
mov	eax, [esp+3Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_4]
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	1Ch
push	13h
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1007A710
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 12Fh
jmp	short loc_1007A74A
mov	ecx, [esp+3Ch+var_30]
mov	[ecx], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+4], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+8], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+0Ch], ebx
mov	edx, [esp+3Ch+var_30]
mov	dword ptr [edx+10h], 1
mov	eax, [esp+3Ch+var_30]
mov	[eax+14h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+18h], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edi], edx
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	15h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcrls_7 
mov	[esp+38h+var_C], 15h
test	edi, edi
jz	short loc_1007A80F
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1007A80F
mov	eax, [edi]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_1007A7F2
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1007A7F2
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_comcrls_8 
mov	[esp+38h+var_C], 15h
test	esi, esi
jnz	short loc_1007A8A1
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	edi, [esp+38h+arg_8]
push	ebx
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	short loc_1007A927
cmp	dword ptr [esi], 0
jnz	short loc_1007A8E0
lea	edx, [esp+3Ch+var_30]
push	edi
push	edx
call	sub_100755D0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007A8DA
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 27Dh
jmp	short loc_1007A927
mov	ecx, [esp+3Ch+var_30]
mov	[esi], ecx
mov	edx, [esi]
push	edi
push	ebx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007A906
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 278h
jmp	short loc_1007A927
push	edi
push	esi
call	sub_10095BC0
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007A927
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 2D0h
			
push	edi
push	1
lea	edx, [esp+44h+var_2C]
push	15h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcrls_9 
mov	[esp+38h+var_C], 15h
test	edi, edi
jz	short loc_1007A9E1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1007A9E1
mov	eax, [edi+0Ch]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_1007A9C3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1007A9C3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+0Ch]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_comcrl_10 
mov	[esp+34h+var_C], 15h
test	edi, edi
jnz	short loc_1007AA69
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [edi+0Ch]
mov	esi, [esp+34h+arg_8]
test	eax, eax
jz	short loc_1007AAA4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_1007AA9D
push	esi
push	eax
lea	edx, [esp+3Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+0Ch], 0
push	ebx
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1007AAD8
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1007AAD8
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_1007AAFC
			
push	esi
push	edi
mov	[edi+0Ch], ebx
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1007AAFC
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_comcrl_11 
mov	[esp+30h+var_C], 15h
pop	esi
test	ecx, ecx
jz	short loc_1007AB76
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007AB76
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+10h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	15h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcrl_12 
mov	[esp+38h+var_C], 15h
test	edi, edi
jz	short loc_1007AC41
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1007AC41
mov	eax, [edi+14h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_1007AC23
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1007AC23
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+14h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_comcrl_13 
mov	[esp+38h+var_C], 15h
test	edi, edi
jz	short loc_1007AD11
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1007AD11
mov	eax, [edi+18h]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_1007ACF3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1007ACF3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+18h]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	15h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_comcrl_14 
mov	[esp+38h+var_C], 15h
test	ebx, ebx
jnz	short loc_1007AD9B
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
mov	esi, [esp+38h+arg_8]
test	edi, edi
jz	short loc_1007ADD2
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1007ADD2
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
jmp	short loc_1007ADF6
			
push	esi
push	ebx
mov	[ebx+8], edi
call	sub_10095BC0
add	esp, 8
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1007ADF6
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 2D0h
			
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	15h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_certsto_6 
mov	[esp+38h+var_C], 11h
cmp	esi, ebx
jnz	short loc_1007AE6D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	10h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_1007AE96
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2EBh
jmp	short loc_1007AED3
mov	eax, [esi+1Ch]
mov	[esi], ebx
mov	[esi+4], ebx
mov	[esi+8], ebx
mov	[esi+0Ch], ebx
mov	[esi+10h], ebx
cmp	eax, ebx
jz	short loc_1007AED3
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1007AED0
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+1Ch], ebx
			
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	11h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_certsto_7 
mov	[esp+3Ch+var_C], 11h
test	esi, esi
jz	loc_1007AFEC
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_1007AFEC
mov	edi, [esp+3Ch+arg_8]
push	edi
push	10h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007AF76
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	11h
push	ecx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2EBh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	eax, [esi+1Ch]
test	eax, eax
jz	short loc_1007AFBC
push	edi
lea	ecx, [esp+40h+var_30]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007AFBC
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	11h
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 0DDh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+3Ch+var_30]
shl	eax, 7
add	eax, [esi+10h]
push	edi
add	eax, [esi+0Ch]
push	1
add	eax, [esi+8]
lea	ecx, [esp+44h+var_2C]
add	eax, [esi+4]
push	11h
add	eax, [esi]
push	ecx
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_certsto_8 
mov	[esp+3Ch+var_C], 11h
test	edi, edi
jz	loc_1007B127
mov	esi, [esp+3Ch+arg_4]
test	esi, esi
jz	loc_1007B127
mov	ebp, [esp+3Ch+arg_8]
test	ebp, ebp
jz	loc_1007B127
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebx
push	10h
push	esi
push	edi
call	sub_100724E0
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1007B09D
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 11h
jmp	short loc_1007B10D
mov	ecx, [edi]
cmp	ecx, [esi]
jnz	short loc_1007B0FE
mov	edx, [edi+4]
cmp	edx, [esi+4]
jnz	short loc_1007B0FE
mov	eax, [edi+8]
cmp	eax, [esi+8]
jnz	short loc_1007B0FE
mov	ecx, [edi+0Ch]
cmp	ecx, [esi+0Ch]
jnz	short loc_1007B0FE
mov	edx, [edi+10h]
cmp	edx, [esi+10h]
jnz	short loc_1007B0FE
mov	edi, [edi+1Ch]
mov	esi, [esi+1Ch]
mov	[esp+40h+var_30], 1
cmp	edi, esi
jz	short loc_1007B106
push	ebx
lea	eax, [esp+44h+var_30]
push	eax
push	esi
push	edi
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1007B106
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 0D3h
jmp	short loc_1007B10D
			
mov	[esp+40h+var_30], 0
			
mov	edx, [esp+40h+var_30]
mov	[ebp+0], edx
			
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB460
push	1
mov	[esp+60h+var_50], offset aCertstore 
mov	[esp+60h+var_48], 28h
mov	[esp+60h+var_44], offset sub_1007AE10
mov	[esp+60h+var_40], offset sub_1007B020
mov	[esp+60h+var_3C], offset sub_1007AEF0
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	11h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_certsto_4 
mov	[esp+68h+var_C], 11h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_0]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_certsto_5 
mov	[esp+40h+var_C], 11h
cmp	ebp, ebx
jz	loc_1007B359
mov	edi, [esp+40h+arg_4]
cmp	edi, ebx
jz	loc_1007B359
cmp	[esp+40h+arg_28], ebx
jz	loc_1007B359
mov	esi, [esp+40h+arg_2C]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	28h
push	10h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007B2B7
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 12Ch
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1007B29D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007B299
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	11h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	edx, [esp+40h+var_30]
mov	[edx], ebp
mov	eax, [esp+40h+var_30]
mov	edx, [esp+40h+arg_8]
mov	[eax+4], edi
mov	ecx, [esp+40h+var_30]
mov	edi, [esp+40h+arg_1C]
mov	[ecx+8], edx
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_C]
mov	[eax+0Ch], ecx
mov	edx, [esp+40h+var_30]
mov	eax, [esp+40h+arg_10]
mov	[edx+10h], eax
mov	ecx, [esp+40h+var_30]
mov	edx, [esp+40h+arg_14]
mov	[ecx+14h], edx
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_18]
mov	[eax+18h], ecx
mov	edx, [esp+40h+var_30]
mov	eax, [esp+40h+arg_20]
mov	ecx, [esp+40h+arg_24]
mov	[edx+20h], eax
mov	edx, [esp+40h+var_30]
mov	[edx+24h], ecx
cmp	edi, ebx
jz	short loc_1007B343
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007B343
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
jmp	loc_1007B26C
			
mov	ecx, [esp+40h+var_30]
mov	eax, [esp+40h+arg_28]
mov	[ecx+1Ch], edi
mov	edx, [esp+40h+var_30]
mov	[eax], edx
jmp	loc_1007B299
			
mov	eax, [esp+40h+arg_2C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certstore 
mov	[esp+30h+var_C], 11h
pop	esi
test	ecx, ecx
jz	short loc_1007B3E5
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007B3E5
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certsto_9 
mov	[esp+30h+var_C], 11h
pop	esi
test	ecx, ecx
jz	short loc_1007B466
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007B466
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+4]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_certsto_0 
mov	[esp+34h+var_C], 11h
test	eax, eax
jz	short loc_1007B51A
mov	edi, [esp+34h+arg_4]
test	edi, edi
jz	short loc_1007B51A
mov	edx, [esp+34h+arg_C]
test	edx, edx
jz	short loc_1007B51A
mov	ecx, [esp+34h+arg_10]
test	ecx, ecx
jz	short loc_1007B51A
mov	esi, [esp+34h+arg_14]
push	esi
push	ecx
mov	ecx, [esp+3Ch+arg_8]
push	edx
mov	edx, [eax+8]
push	ecx
push	edi
push	eax
call	edx
add	esp, 18h
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_1007B502
mov	eax, [eax+4]
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_1C], 0D0h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	11h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	edx, [esp+34h+arg_14]
push	edx
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Fh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certsto_1 
mov	[esp+30h+var_C], 11h
pop	esi
test	ecx, ecx
jz	short loc_1007B5A6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007B5A6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+10h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certst_10 
mov	[esp+30h+var_C], 11h
pop	esi
test	ecx, ecx
jz	short loc_1007B626
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007B626
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+14h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certst_11 
mov	[esp+30h+var_C], 11h
pop	esi
test	ecx, ecx
jz	short loc_1007B6A6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007B6A6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+18h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certsto_2 
mov	[esp+30h+var_C], 11h
pop	esi
test	ecx, ecx
jz	short loc_1007B726
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007B726
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+20h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_certsto_3 
mov	[esp+30h+var_C], 11h
pop	esi
test	ecx, ecx
jz	short loc_1007B7A6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007B7A6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+24h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_8]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_cer_29 
mov	[esp+38h+var_C], 7
test	edi, edi
jnz	short loc_1007B831
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	esi, [esp+38h+arg_C]
push	esi
lea	edx, [esp+3Ch+var_30]
push	edx
push	8
push	6
call	sub_100952A0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1007B860
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 125h
jmp	short loc_1007B87B
mov	ecx, [esp+38h+var_30]
mov	edx, [esp+38h+arg_0]
mov	[ecx], edx
mov	eax, [esp+38h+var_30]
mov	ecx, [esp+38h+arg_4]
mov	[eax+4], ecx
mov	edx, [esp+38h+var_30]
mov	[edi], edx
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	7
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_cer_18 
mov	[esp+34h+var_C], 7
test	esi, esi
jnz	short loc_1007B8F9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	6
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_1007B922
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2E4h
jmp	short loc_1007B92F
mov	dword ptr [esi], 0
mov	dword ptr [esi+4], 0
push	edi
push	1
lea	eax, [esp+3Ch+var_2C]
push	7
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
xor	ebx, ebx
xor	ebp, ebp
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_2C], offset aPkix_pl_cer_19 
mov	[esp+44h+var_C], 7
cmp	edi, ebx
jz	loc_1007BAA8
cmp	[esp+44h+arg_4], ebx
jz	loc_1007BAA8
mov	esi, [esp+44h+arg_8]
push	esi
push	6
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_1007B9C5
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 1CFh
jmp	loc_1007BA5D
cmp	[edi], ebx
jz	short loc_1007B9E4
mov	ebp, [edi+4]
cmp	ebp, 0FFFFFFFEh
jnz	short loc_1007B9D8
mov	eax, offset aCa1 
jmp	short loc_1007B9E9
mov	eax, offset aCaD 
mov	edi, 1
jmp	short loc_1007B9EB
mov	eax, offset aCa	
xor	edi, edi
push	esi		
lea	ecx, [esp+48h+var_34]
push	ecx		
push	ebx		
push	eax		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_1007BA15
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 3CFh
jmp	short loc_1007BA5D
mov	eax, [esp+44h+var_34]
lea	ecx, [esp+44h+var_30]
cmp	edi, ebx
jz	short loc_1007BA46
push	ebp
push	eax
push	esi
push	ecx
call	sub_10098590
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_1007BA53
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 3CDh
jmp	short loc_1007BA5D
push	eax
push	esi
push	ecx
call	sub_10098590
add	esp, 0Ch
jmp	short loc_1007BA2D
mov	eax, [esp+44h+var_30]
mov	ecx, [esp+44h+arg_4]
mov	[ecx], eax
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_1007BA8E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1007BA8A
push	esi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_34], ebx
push	esi
push	1
lea	eax, [esp+4Ch+var_2C]
push	7
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	ecx, [esp+44h+arg_8]
push	ecx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_pl_cer_20 
mov	[esp+40h+var_C], 7
test	esi, esi
jz	loc_1007BBE2
mov	ebp, [esp+40h+arg_4]
test	ebp, ebp
jz	loc_1007BBE2
mov	edi, [esp+40h+arg_8]
push	edi
push	6
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1007BB6E
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	7
push	eax
mov	[esp+50h+var_1C], 2E4h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
cmp	dword ptr [esi], 0
jz	short loc_1007BB7D
mov	ecx, [esi+4]
add	ecx, 2
mov	[esp+40h+var_34], ecx
push	edi
lea	edx, [esp+44h+var_30]
push	edx
lea	eax, [esp+48h+var_34]
push	4
push	eax
call	sub_10072650
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1007BBC2
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	7
push	eax
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 20Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	edx, [esp+40h+var_30]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	7
push	eax
mov	[ebp+0], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_cer_21 
mov	[esp+38h+var_C], 7
test	esi, esi
jz	loc_1007BCF8
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_1007BCF8
mov	ebx, [esp+38h+arg_8]
test	ebx, ebx
jz	loc_1007BCF8
push	ebp
mov	ebp, [esp+3Ch+arg_C]
push	ebp
push	6
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007BC84
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 1DCh
jmp	short loc_1007BCDE
cmp	esi, edi
jnz	short loc_1007BC90
mov	dword ptr [ebx], 1
jmp	short loc_1007BCDE
push	ebp
lea	ecx, [esp+40h+arg_0]
push	ecx
push	edi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007BCB8
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 152h
jmp	short loc_1007BCDE
cmp	[esp+3Ch+arg_0], 6
jz	short loc_1007BCC7
mov	dword ptr [ebx], 0
jmp	short loc_1007BCDE
mov	eax, [esi]
cmp	[edi], eax
jnz	short loc_1007BCBF
test	eax, eax
jz	short loc_1007BC88
mov	eax, [edi+4]
xor	ecx, ecx
cmp	eax, [esi+4]
setz	cl
mov	[ebx], ecx
			
push	ebp
push	1
lea	edx, [esp+44h+var_2C]
push	7
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB2F8
push	1
mov	[esp+60h+var_50], offset aCertbasicconst 
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_1007B8A0
mov	[esp+60h+var_40], offset sub_1007BC10
mov	[esp+60h+var_3C], offset sub_1007BAE0
mov	[esp+60h+var_38], offset sub_1007B950
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	7
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_certba 
mov	[esp+68h+var_C], 7
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_basicc 
mov	[esp+30h+var_C], 7
pop	esi
test	ecx, ecx
jz	short loc_1007BE25
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007BE25
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	7
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_basi_0 
mov	[esp+30h+var_C], 7
pop	esi
test	ecx, ecx
jz	short loc_1007BEA6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1007BEA6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+4]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	7
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 5Ch
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+68h+var_2C]
rep movsd
mov	[esp+68h+var_54], ebp
mov	[esp+68h+var_5C], ebp
mov	[esp+68h+var_58], ebp
mov	[esp+68h+var_50], ebp
mov	[esp+68h+var_4C], ebp
mov	[esp+68h+var_48], ebp
mov	[esp+68h+var_2C], offset aPkix_pl_cer_31 
mov	[esp+68h+var_C], 6
cmp	eax, ebp
jz	loc_1007C48E
mov	edi, [esp+68h+arg_0]
cmp	edi, ebp
jz	loc_1007C48E
lea	ecx, [esp+68h+var_38]
push	ecx
push	58h
push	eax
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jz	short loc_1007BF3F
mov	[edi], ebp
jmp	loc_1007C34F
lea	edx, [esp+68h+var_38]
push	edx
call	CERT_DecodeCertificatePoliciesExtension
mov	esi, eax
mov	eax, [esp+6Ch+var_34]
push	eax
mov	[esp+70h+var_3C], esi
call	PORT_Free_Util
add	esp, 8
cmp	esi, ebp
jnz	short loc_1007BF92
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1007BF7D
mov	ecx, [esp+68h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	6Bh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+68h+var_18], 1
mov	[esp+68h+var_1C], 6Bh
jmp	loc_1007C34F
mov	esi, [esi+4]
mov	[esp+68h+var_40], esi
cmp	esi, ebp
jnz	short loc_1007BFA4
mov	[edi], ebp
jmp	loc_1007C342
lea	edx, [esp+68h+var_54]
push	ebx
push	edx
call	sub_100755D0
add	esp, 8
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jz	short loc_1007BFCE
mov	eax, [eax+4]
mov	[esp+68h+var_10], eax
mov	[esp+68h+var_1C], 27Dh
jmp	loc_1007C342
mov	eax, [esi]
mov	[esp+68h+var_44], eax
cmp	eax, ebp
jnz	short loc_1007C00A
mov	ecx, [esp+68h+var_54]
push	ebx
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jz	loc_1007C338
mov	edx, [eax+4]
mov	[esp+68h+var_10], edx
mov	[esp+68h+var_1C], 28Dh
jmp	loc_1007C342
mov	eax, [esp+68h+var_44]
mov	edi, [eax+10h]
cmp	edi, ebp
jz	loc_1007C186
lea	ecx, [esp+68h+var_58]
push	ebx
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C299
mov	esi, [edi]
cmp	esi, ebp
jz	loc_1007C164
lea	esp, [esp+0]
push	ebx
lea	edx, [esp+6Ch+var_5C]
push	edx
lea	eax, [esi+4]
push	eax
call	sub_10096A10
add	esp, 0Ch
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C2AD
mov	edx, [esi+18h]
mov	eax, [esi+14h]
push	ebx		
lea	ecx, [esp+6Ch+var_48]
push	ecx		
push	edx		
push	eax		
call	sub_10091AD0
add	esp, 10h
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C2C1
mov	edx, [esp+68h+var_48]
mov	eax, [esp+68h+var_5C]
push	ebx
lea	ecx, [esp+6Ch+var_4C]
push	ecx
push	edx
push	eax
call	sub_100846E0
add	esp, 10h
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C2D2
mov	ecx, [esp+68h+var_4C]
mov	edx, [esp+68h+var_58]
push	ebx
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C2E3
mov	eax, [esp+68h+var_5C]
cmp	eax, ebp
jz	short loc_1007C0F4
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C0F0
push	ebx
push	eax
lea	eax, [esp+70h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_5C], ebp
mov	eax, [esp+68h+var_48]
cmp	eax, ebp
jz	short loc_1007C125
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C121
push	ebx
push	eax
lea	ecx, [esp+70h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_48], ebp
mov	eax, [esp+68h+var_4C]
cmp	eax, ebp
jz	short loc_1007C156
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C152
push	ebx
push	eax
lea	edx, [esp+70h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_4C], ebp
mov	esi, [edi+4]
add	edi, 4
cmp	esi, ebp
jnz	loc_1007C040
mov	eax, [esp+68h+var_58]
push	ebx
push	eax
call	sub_10075700
add	esp, 8
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C2F4
mov	esi, [esp+68h+var_40]
mov	eax, [esp+68h+var_44]
push	ebx
lea	ecx, [esp+6Ch+var_5C]
push	ecx
add	eax, 4
push	eax
call	sub_10096A10
add	esp, 0Ch
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C305
mov	eax, [esp+68h+var_58]
mov	ecx, [esp+68h+var_5C]
push	ebx
lea	edx, [esp+6Ch+var_50]
push	edx
push	eax
push	ecx
call	sub_10082FB0
add	esp, 10h
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C316
mov	edx, [esp+68h+var_50]
mov	eax, [esp+68h+var_54]
push	ebx
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+68h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C327
mov	eax, [esp+68h+var_5C]
cmp	eax, ebp
jz	short loc_1007C218
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C214
push	ebx
push	eax
lea	ecx, [esp+70h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_5C], ebp
mov	eax, [esp+68h+var_58]
cmp	eax, ebp
jz	short loc_1007C249
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C245
push	ebx
push	eax
lea	edx, [esp+70h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_58], ebp
mov	eax, [esp+68h+var_50]
cmp	eax, ebp
jz	short loc_1007C27A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C276
push	ebx
push	eax
lea	eax, [esp+70h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_50], ebp
mov	eax, [esi+4]
add	esi, 4
mov	[esp+68h+var_40], esi
mov	[esp+68h+var_44], eax
cmp	eax, ebp
jnz	loc_1007C006
mov	edi, [esp+68h+arg_0]
jmp	loc_1007BFD8
mov	ecx, [eax+4]
mov	[esp+68h+var_10], ecx
mov	[esp+68h+var_1C], 27Dh
jmp	loc_1007C342
mov	edx, [eax+4]
mov	[esp+68h+var_10], edx
mov	[esp+68h+var_1C], 32Eh
jmp	loc_1007C342
mov	eax, [eax+4]
mov	[esp+68h+var_10], eax
mov	[esp+68h+var_1C], 38h
jmp	short loc_1007C342
mov	ecx, [eax+4]
mov	[esp+68h+var_10], ecx
mov	[esp+68h+var_1C], 0AEh
jmp	short loc_1007C342
mov	edx, [eax+4]
mov	[esp+68h+var_10], edx
mov	[esp+68h+var_1C], 278h
jmp	short loc_1007C342
mov	eax, [eax+4]
mov	[esp+68h+var_10], eax
mov	[esp+68h+var_1C], 28Dh
jmp	short loc_1007C342
mov	ecx, [eax+4]
mov	[esp+68h+var_10], ecx
mov	[esp+68h+var_1C], 32Eh
jmp	short loc_1007C342
mov	edx, [eax+4]
mov	[esp+68h+var_10], edx
mov	[esp+68h+var_1C], 0A8h
jmp	short loc_1007C342
mov	eax, [eax+4]
mov	[esp+68h+var_10], eax
mov	[esp+68h+var_1C], 278h
jmp	short loc_1007C342
mov	eax, [esp+68h+var_54]
mov	[edi], eax
mov	[esp+68h+var_54], ebp
			
mov	ecx, [esp+68h+var_3C]
push	ecx
call	CERT_DestroyUserNotice
add	esp, 4
			
mov	eax, [esp+68h+var_54]
cmp	eax, ebp
jz	short loc_1007C380
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C37C
push	ebx
push	eax
lea	edx, [esp+70h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_54], ebp
mov	eax, [esp+68h+var_5C]
cmp	eax, ebp
jz	short loc_1007C3B1
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C3AD
push	ebx
push	eax
lea	eax, [esp+70h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_5C], ebp
mov	eax, [esp+68h+var_58]
cmp	eax, ebp
jz	short loc_1007C3E2
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C3DE
push	ebx
push	eax
lea	ecx, [esp+70h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_58], ebp
mov	eax, [esp+68h+var_50]
cmp	eax, ebp
jz	short loc_1007C413
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C40F
push	ebx
push	eax
lea	edx, [esp+70h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_50], ebp
mov	eax, [esp+68h+var_4C]
cmp	eax, ebp
jz	short loc_1007C444
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C440
push	ebx
push	eax
lea	eax, [esp+70h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_4C], ebp
mov	eax, [esp+68h+var_48]
cmp	eax, ebp
jz	short loc_1007C475
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C471
push	ebx
push	eax
lea	ecx, [esp+70h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], ebp
mov	[esp+68h+var_48], ebp
push	ebx
push	1
lea	edx, [esp+70h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 5Ch
retn
			
push	ebx
push	1
lea	eax, [esp+70h+var_2C]
push	1Fh
push	eax
mov	[esp+78h+var_18], 1
mov	[esp+78h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 5Ch
retn
align 10h
sub	esp, 4Ch
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+58h+var_2C]
rep movsd
mov	[esp+58h+var_4C], ebp
mov	[esp+58h+var_48], ebp
mov	[esp+58h+var_44], ebp
mov	[esp+58h+var_40], ebp
mov	[esp+58h+var_2C], offset aPkix_pl_cer_33 
mov	[esp+58h+var_C], 6
cmp	eax, ebp
jz	loc_1007C830
mov	esi, [esp+58h+arg_0]
cmp	esi, ebp
jz	loc_1007C830
lea	ecx, [esp+58h+var_38]
push	ecx
push	59h
push	eax
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jz	short loc_1007C527
mov	[esi], ebp
jmp	loc_1007C753
lea	edx, [esp+58h+var_38]
push	edx
call	sub_10044780
mov	esi, eax
mov	eax, [esp+5Ch+var_34]
push	eax
mov	[esp+60h+var_3C], esi
call	PORT_Free_Util
add	esp, 8
cmp	esi, ebp
jnz	short loc_1007C57A
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1007C565
mov	ecx, [esp+58h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	75h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 75h
jmp	loc_1007C753
mov	eax, [esi+4]
push	ebx
cmp	eax, ebp
jz	loc_1007C831
mov	edi, eax
lea	eax, [esp+5Ch+var_4C]
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1007C5B1
mov	ecx, [eax+4]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 27Dh
jmp	loc_1007C746
			
mov	esi, [edi]
push	ebx
lea	edx, [esp+5Ch+var_48]
push	edx
push	esi
call	sub_10096A10
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C6F4
push	ebx
lea	eax, [esp+5Ch+var_44]
push	eax
add	esi, 0Ch
push	esi
call	sub_10096A10
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C705
mov	edx, [esp+58h+var_44]
mov	eax, [esp+58h+var_48]
push	ebx
lea	ecx, [esp+5Ch+var_40]
push	ecx
push	edx
push	eax
call	sub_10083A90
add	esp, 10h
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C716
mov	ecx, [esp+58h+var_40]
mov	edx, [esp+58h+var_4C]
push	ebx
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jnz	loc_1007C727
mov	eax, [esp+58h+var_48]
cmp	eax, ebp
jz	short loc_1007C660
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C65C
push	ebx
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_48], ebp
mov	eax, [esp+58h+var_44]
cmp	eax, ebp
jz	short loc_1007C691
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C68D
push	ebx
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_44], ebp
mov	eax, [esp+58h+var_40]
cmp	eax, ebp
jz	short loc_1007C6C2
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C6BE
push	ebx
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_40], ebp
add	edi, 4
cmp	[edi], ebp
jnz	loc_1007C5B1
mov	ecx, [esp+58h+var_4C]
push	ebx
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+58h+var_28], eax
cmp	eax, ebp
jz	short loc_1007C738
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 28Dh
jmp	short loc_1007C746
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 32Eh
jmp	short loc_1007C746
mov	ecx, [eax+4]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 32Eh
jmp	short loc_1007C746
mov	edx, [eax+4]
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 0ABh
jmp	short loc_1007C746
mov	eax, [eax+4]
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 278h
jmp	short loc_1007C746
mov	eax, [esp+58h+var_4C]
mov	ecx, [esp+58h+arg_0]
mov	[ecx], eax
mov	[esp+58h+var_4C], ebp
			
mov	edx, [esp+58h+var_3C]
push	edx
call	sub_10044800
add	esp, 4
			
mov	eax, [esp+58h+var_4C]
cmp	eax, ebp
jz	short loc_1007C784
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C780
push	ebx
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_4C], ebp
mov	eax, [esp+58h+var_48]
cmp	eax, ebp
jz	short loc_1007C7B5
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C7B1
push	ebx
push	eax
lea	ecx, [esp+60h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_48], ebp
mov	eax, [esp+58h+var_44]
cmp	eax, ebp
jz	short loc_1007C7E6
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C7E2
push	ebx
push	eax
lea	edx, [esp+60h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_44], ebp
mov	eax, [esp+58h+var_40]
cmp	eax, ebp
jz	short loc_1007C817
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, ebp
jz	short loc_1007C813
push	ebx
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], ebp
mov	[esp+58h+var_40], ebp
push	ebx
push	1
lea	ecx, [esp+60h+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 4Ch
retn
			
push	ebx
push	1
lea	edx, [esp+60h+var_2C]
push	1Fh
push	edx
mov	[esp+68h+var_18], 1
mov	[esp+68h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 4Ch
retn
align 10h
			
sub	esp, 58h
push	ebp
mov	ebp, [esp+5Ch+arg_4]
or	ecx, 0FFFFFFFFh
push	esi
push	edi
mov	[esp+64h+var_58], ecx
mov	[esp+64h+var_54], ecx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	[esp+64h+var_2C], offset aPkix_pl_cer_35 
mov	[esp+64h+var_C], 6
test	eax, eax
jz	loc_1007C964
mov	edi, [esp+64h+arg_0]
test	edi, edi
jz	loc_1007C964
test	ebp, ebp
jz	loc_1007C964
lea	ecx, [esp+64h+var_50]
push	ecx
push	5Ah
push	eax
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jnz	short loc_1007C93E
lea	edx, [esp+64h+var_58]
lea	ecx, [esp+64h+var_50]
mov	[esp+64h+var_40], edx
push	ecx
lea	edx, [esp+68h+var_44]
lea	eax, [esp+68h+var_54]
push	edx
mov	[esp+6Ch+var_34], eax
call	sub_10044820
mov	esi, eax
mov	eax, [esp+6Ch+var_4C]
push	eax
call	PORT_Free_Util
add	esp, 0Ch
test	esi, esi
jz	short loc_1007C93E
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007C915
mov	ecx, [esp+64h+var_C]
push	ebx
push	2
push	ecx
push	0
push	71h
push	eax
call	sub_10074820
add	esp, 18h
push	ebx
push	1
lea	ecx, [esp+6Ch+var_2C]
push	6
push	ecx
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 71h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
			
mov	edx, [esp+64h+var_58]
mov	eax, [esp+64h+var_54]
push	ebx
push	1
lea	ecx, [esp+6Ch+var_2C]
push	6
mov	[edi], edx
push	ecx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
			
push	ebx
push	1
lea	edx, [esp+6Ch+var_2C]
push	1Fh
push	edx
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
align 10h
sub	esp, 48h
mov	eax, [esp+48h+arg_0]
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	[esp+54h+var_48], 0FFFFFFFFh
mov	[esp+54h+var_2C], offset aPkix_pl_cer_38 
mov	[esp+54h+var_C], 6
test	eax, eax
jz	loc_1007CA81
mov	ebx, [esp+54h+arg_4]
test	ebx, ebx
jz	loc_1007CA81
lea	ecx, [esp+54h+var_44]
push	ecx
push	11Eh
push	eax
call	CERT_FindCertExtension
mov	edi, [esp+60h+arg_8]
add	esp, 0Ch
test	eax, eax
jnz	short loc_1007CA62
lea	eax, [esp+54h+var_44]
push	eax
lea	ecx, [esp+58h+var_38]
lea	edx, [esp+58h+var_48]
push	ecx
mov	[esp+5Ch+var_34], edx
call	sub_10044910
mov	edx, [esp+5Ch+var_40]
push	edx
mov	esi, eax
call	PORT_Free_Util
add	esp, 0Ch
test	esi, esi
jz	short loc_1007CA62
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007CA39
mov	ecx, [esp+54h+var_C]
push	edi
push	2
push	ecx
push	0
push	6Eh
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	eax, [esp+5Ch+var_2C]
push	6
push	eax
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 6Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 48h
retn
			
mov	edx, [esp+54h+var_48]
push	edi
push	1
lea	eax, [esp+5Ch+var_2C]
push	6
push	eax
mov	[ebx], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 48h
retn
			
mov	ecx, [esp+54h+arg_8]
push	ecx
push	1
lea	edx, [esp+5Ch+var_2C]
push	1Fh
push	edx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 48h
retn
align 10h
			
sub	esp, 38h
push	ebp
mov	ebp, [esp+3Ch+arg_8]
push	esi
xor	eax, eax
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_38], eax
mov	[esp+44h+var_34], eax
mov	[esp+44h+var_30], eax
mov	[esp+44h+var_2C], offset aPkix_pl_cert_4 
mov	[esp+44h+var_C], 6
cmp	ebx, eax
jz	loc_1007CCC3
cmp	[esp+44h+arg_4], eax
jz	loc_1007CCC3
mov	esi, [ebx]
cmp	esi, eax
jz	loc_1007CCC3
cmp	[ebx+4], eax
jnz	loc_1007CC6E
cmp	[ebx+18h], eax
jnz	loc_1007CC6E
mov	edi, [esp+44h+arg_0]
cmp	edi, eax
jnz	short loc_1007CB58
push	ebp
push	ebx
call	sub_10095E70
add	esp, 8
mov	[esp+44h+var_24], eax
test	eax, eax
jz	short loc_1007CB54
push	ebp
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], 0
mov	[esp+44h+var_1C], 2D2h
jmp	loc_1007CC77
mov	[esp+44h+var_8], ebx
cmp	dword ptr [ebx+4], 0
jnz	loc_1007CC39
cmp	dword ptr [ebx+18h], 0
jnz	loc_1007CC39
lea	ecx, [esp+44h+var_38]
push	ecx
push	53h
push	esi
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jz	short loc_1007CB96
mov	edx, [esp+44h+arg_4]
mov	dword ptr [edx], 0
mov	dword ptr [ebx+18h], 1
jmp	loc_1007CC77
cmp	dword ptr [ebx+8], 0
jnz	short loc_1007CBE6
push	800h
call	PORT_NewArena_Util
add	esp, 4
test	eax, eax
jnz	short loc_1007CBE3
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007CBCE
mov	ecx, [esp+44h+var_C]
push	ebp
push	2
push	ecx
push	0
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 338h
jmp	loc_1007CC77
mov	[ebx+8], eax
mov	eax, [ebx+8]
lea	edx, [esp+44h+var_38]
push	edx
push	eax
call	CERT_DecodeAltNameExtension
mov	ecx, [esp+4Ch+var_34]
push	ecx
mov	esi, eax
call	PORT_Free_Util
add	esp, 0Ch
test	esi, esi
jnz	short loc_1007CC36
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007CC24
mov	edx, [esp+44h+var_C]
push	ebp
push	2
push	edx
push	esi
push	6Ah
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 6Ah
jmp	short loc_1007CC77
mov	[ebx+4], esi
			
test	edi, edi
jnz	short loc_1007CC6E
cmp	[esp+44h+var_8], ebx
jnz	short loc_1007CC6E
push	ebp
push	ebx
call	sub_10095F10
xor	esi, esi
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1007CC6A
push	ebp
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
mov	[esp+44h+var_8], esi
			
mov	ecx, [ebx+4]
mov	edx, [esp+44h+arg_4]
mov	[edx], ecx
			
mov	eax, [esp+44h+var_8]
test	eax, eax
jz	short loc_1007CCAA
push	ebp
push	eax
call	sub_10095F10
xor	esi, esi
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, esi
jz	short loc_1007CCA6
push	ebp
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], esi
mov	[esp+44h+var_8], esi
push	ebp
push	1
lea	ecx, [esp+4Ch+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
push	ebp
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
xor	edi, edi
mov	[esp+38h+var_2C], offset aPkix_pl_cert_d 
mov	[esp+38h+var_C], 6
cmp	ebx, edi
jnz	short loc_1007CD4D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	5
push	ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, edi
jz	short loc_1007CD79
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2E3h
jmp	loc_1007D0FD
mov	eax, [ebx+10h]
cmp	eax, edi
jz	short loc_1007CDA8
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CDA5
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+10h], edi
mov	eax, [ebx+0Ch]
cmp	eax, edi
jz	short loc_1007CDD7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CDD4
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+0Ch], edi
mov	eax, [ebx+14h]
cmp	eax, edi
jz	short loc_1007CE06
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CE03
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+14h], edi
mov	eax, [ebx+1Ch]
cmp	eax, edi
jz	short loc_1007CE35
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CE32
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+1Ch], edi
mov	eax, [ebx+20h]
cmp	eax, edi
jz	short loc_1007CE64
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CE61
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+20h], edi
mov	eax, [ebx+24h]
cmp	eax, edi
jz	short loc_1007CE93
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CE90
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+24h], edi
mov	eax, [ebx+28h]
cmp	eax, edi
jz	short loc_1007CEC2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CEBF
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+28h], edi
mov	eax, [ebx+34h]
cmp	eax, edi
jz	short loc_1007CEF1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CEEE
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+34h], edi
mov	eax, [ebx+2Ch]
cmp	eax, edi
jz	short loc_1007CF20
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CF1D
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+2Ch], edi
mov	eax, [ebx+3Ch]
cmp	eax, edi
jz	short loc_1007CF4F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CF4C
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+3Ch], edi
mov	eax, [ebx+44h]
cmp	eax, edi
jz	short loc_1007CF7E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CF7B
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+44h], edi
mov	eax, [ebx+4Ch]
cmp	eax, edi
jz	short loc_1007CFAD
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CFAA
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+4Ch], edi
mov	eax, [ebx+58h]
cmp	eax, edi
jz	short loc_1007CFDC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007CFD9
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+58h], edi
mov	eax, [ebx+70h]
cmp	eax, edi
jz	short loc_1007D00B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007D008
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+70h], edi
mov	eax, [ebx+7Ch]
cmp	eax, edi
jz	short loc_1007D03A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007D037
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+7Ch], edi
mov	eax, [ebx+80h]
cmp	eax, edi
jz	short loc_1007D06F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007D069
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+80h], edi
mov	eax, [ebx+84h]
cmp	eax, edi
jz	short loc_1007D0A4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007D09E
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+84h], edi
mov	eax, [ebx+8Ch]
cmp	eax, edi
jz	short loc_1007D0D9
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1007D0D3
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[ebx+8Ch], edi
mov	eax, [ebx+8]
cmp	eax, edi
jz	short loc_1007D0F0
push	edi
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	[ebx+8], edi
mov	[ebx+4], edi
mov	eax, [ebx]
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	[ebx], edi
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_cert_h 
mov	[esp+38h+var_C], 6
test	esi, esi
jz	loc_1007D205
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_1007D205
mov	edi, [esp+38h+arg_8]
push	edi
push	5
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1007D19E
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	6
push	edx
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2E3h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	eax, [esi]
mov	ecx, [eax+40h]
mov	eax, [eax+44h]
push	edi
lea	edx, [esp+3Ch+arg_0]
push	edx
push	eax
push	ecx
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1007D1E6
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	6
push	edx
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 20Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	ecx, [esp+38h+arg_0]
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	6
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_cert_e 
mov	[esp+38h+var_C], 6
test	esi, esi
jz	loc_1007D354
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_1007D354
mov	ebp, [esp+38h+arg_8]
test	ebp, ebp
jz	loc_1007D354
push	ebx
mov	ebx, [esp+3Ch+arg_C]
push	ebx
push	5
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007D2B4
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 1DBh
jmp	short loc_1007D310
cmp	esi, edi
jnz	short loc_1007D2C1
mov	dword ptr [ebp+0], 1
jmp	short loc_1007D310
push	ebx
lea	ecx, [esp+40h+arg_0]
push	ecx
push	edi
mov	dword ptr [ebp+0], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1007D2F0
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 152h
jmp	short loc_1007D310
cmp	[esp+3Ch+arg_0], 5
jnz	short loc_1007D310
mov	eax, [esi]
mov	ecx, [edi]
test	eax, eax
jz	short loc_1007D32A
test	ecx, ecx
jz	short loc_1007D32A
push	ecx
push	eax
call	CERT_CompareCerts
add	esp, 8
mov	[ebp+0], eax
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_C]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_4]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_pl_cert_1 
mov	[esp+3Ch+var_C], 6
cmp	edi, ebx
jz	loc_1007D531
mov	esi, [esp+3Ch+arg_0]
cmp	esi, ebx
jz	loc_1007D531
push	ebp
mov	ebp, [esp+40h+arg_8]
push	ebp
lea	eax, [esp+44h+var_30]
push	eax
push	90h
push	5
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007D40A
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 141h
jmp	loc_1007D517
mov	edx, [esp+40h+var_30]
mov	[edx], esi
mov	eax, [esp+40h+var_30]
mov	[eax+10h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+0Ch], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+14h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+18h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+1Ch], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+20h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+24h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+28h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+2Ch], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+30h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+34h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+38h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+3Ch], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+40h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+44h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+48h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+4Ch], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+50h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+54h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+58h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+5Ch], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+60h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+64h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+68h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+6Ch], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+70h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+74h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+8], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+4], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+78h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+7Ch], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+80h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+84h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+88h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+8Ch], ebx
mov	edx, [esp+40h+var_30]
mov	[edi], edx
push	ebp
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_cer_81 
mov	[esp+3Ch+var_C], 6
test	esi, esi
jz	loc_1007D664
mov	ebp, [esp+3Ch+arg_4]
test	ebp, ebp
jz	loc_1007D664
call	CERT_GetDefaultCertDB
push	1		
push	0		
push	0		
push	esi		
push	eax		
call	CERT_NewTempCertificate
mov	edi, [esp+50h+arg_8]
mov	esi, eax
add	esp, 14h
test	esi, esi
jz	short loc_1007D627
push	ebx
push	edi
lea	eax, [esp+44h+var_30]
push	eax
push	esi
call	sub_1007D390
mov	ebx, [esp+4Ch+var_30]
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1007D640
mov	ecx, [eax+4]
push	esi
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 69h
call	CERT_DestroyCertificate
add	esp, 4
			
test	ebx, ebx
jz	short loc_1007D626
push	edi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
test	eax, eax
jz	short loc_1007D626
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], 0
			
pop	ebx
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
push	edi
push	ebx
push	ebp
call	sub_10075970
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1007D5F9
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 278h
jmp	short loc_1007D5F9
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
			
sub	esp, 68h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+74h+var_2C]
rep movsd
mov	[esp+74h+var_64], ebp
mov	[esp+74h+var_2C], offset aPkix_pl_cert_c 
mov	[esp+74h+var_C], 6
cmp	[esp+74h+arg_4], ebp
jz	loc_1007D980
mov	eax, [esp+74h+arg_0]
cmp	eax, ebp
jz	loc_1007D980
mov	ecx, [eax+40h]
mov	eax, [eax+44h]
push	ebx
mov	ebx, [esp+78h+arg_8]
push	ebx		
lea	edx, [esp+7Ch+var_64]
push	edx		
push	eax		
push	ecx		
call	sub_10091AD0
add	esp, 10h
mov	[esp+78h+var_28], eax
cmp	eax, ebp
jz	short loc_1007D71C
mov	eax, [eax+4]
mov	[esp+78h+var_10], eax
mov	[esp+78h+var_1C], 38h
jmp	loc_1007D935
mov	eax, [esp+78h+var_64]
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+78h+var_58]
rep movsd
mov	ebp, eax
mov	[esp+78h+Src], edx
mov	[esp+78h+var_5C], edx
mov	[esp+78h+var_58], offset aPkix_pl_cert_0 
mov	[esp+78h+var_38], 6
push	ebx
cmp	eax, edx
jz	loc_1007D8FB
lea	ecx, [esp+7Ch+Src]
push	ecx
push	eax
call	sub_10091C60
add	esp, 0Ch
mov	[esp+78h+var_54], eax
test	eax, eax
jz	short loc_1007D77F
mov	edx, [eax+4]
mov	[esp+78h+var_3C], edx
mov	[esp+78h+var_48], 3Bh
jmp	loc_1007D8BC
push	ebx
lea	eax, [esp+7Ch+Size]
push	eax
push	ebp
call	sub_10091D90
add	esp, 0Ch
mov	[esp+78h+var_54], eax
test	eax, eax
jz	short loc_1007D7AA
mov	ecx, [eax+4]
mov	[esp+78h+var_3C], ecx
mov	[esp+78h+var_48], 3Ah
jmp	loc_1007D8BC
mov	edx, [esp+78h+Size]
push	edx
push	0
push	0
call	SECITEM_AllocItem_Util
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_1007D7F6
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007D7E1
mov	ecx, [esp+78h+var_38]
push	ebx
push	2
push	ecx
push	edi
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+78h+var_44], 1
mov	[esp+78h+var_48], 338h
jmp	loc_1007D8BC
mov	edx, [esp+78h+Size]
mov	eax, [esp+78h+Src]
mov	ecx, [edi+4]
push	edx		
push	eax		
push	ecx		
call	memcpy
call	CERT_GetDefaultCertDB
push	1		
push	0		
push	0		
push	edi		
push	eax		
call	CERT_NewTempCertificate
mov	esi, eax
add	esp, 20h
test	esi, esi
jnz	short loc_1007D853
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007D841
mov	edx, [esp+78h+var_38]
push	ebx
push	2
push	edx
push	esi
push	6Ch
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+78h+var_44], 1
mov	[esp+78h+var_48], 6Ch
jmp	short loc_1007D888
push	ebx
lea	eax, [esp+7Ch+var_5C]
push	eax
push	esi
call	sub_1007D390
add	esp, 0Ch
mov	[esp+78h+var_54], eax
test	eax, eax
jz	short loc_1007D87B
mov	ecx, [eax+4]
mov	[esp+78h+var_3C], ecx
mov	[esp+78h+var_48], 69h
jmp	short loc_1007D888
mov	edx, [esp+78h+var_5C]
mov	eax, [esp+78h+arg_4]
mov	[eax], edx
			
push	1
push	edi
call	SECITEM_FreeItem_Util
add	esp, 8
test	esi, esi
jz	short loc_1007D8BC
cmp	[esp+78h+var_44], 0
jnz	short loc_1007D8B3
cmp	[esp+78h+var_54], 0
jnz	short loc_1007D8B3
cmp	[esp+78h+var_40], 0
jnz	short loc_1007D8B3
cmp	[esp+78h+var_30], 0
jz	short loc_1007D8BC
			
push	esi
call	CERT_DestroyCertificate
add	esp, 4
			
mov	eax, [esp+78h+Src]
xor	esi, esi
cmp	eax, esi
jz	short loc_1007D8EF
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+78h+var_50], eax
cmp	eax, esi
jz	short loc_1007D8EB
push	ebx
push	eax
lea	ecx, [esp+80h+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_50], esi
mov	[esp+78h+Src], esi
push	ebx
push	1
push	6
lea	edx, [esp+84h+var_58]
push	edx
jmp	short loc_1007D914
push	1
push	1Fh
lea	eax, [esp+84h+var_58]
mov	[esp+84h+var_44], 1
mov	[esp+84h+var_48], 2BCh
push	eax
call	sub_100781E0
add	esp, 10h
mov	[esp+78h+var_28], eax
test	eax, eax
jz	short loc_1007D933
mov	ecx, [eax+4]
mov	[esp+78h+var_10], ecx
mov	[esp+78h+var_1C], 69h
xor	ebp, ebp
mov	eax, [esp+78h+var_64]
cmp	eax, ebp
jz	short loc_1007D966
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+78h+var_24], eax
cmp	eax, ebp
jz	short loc_1007D962
push	ebx
push	eax
lea	edx, [esp+80h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+78h+var_24], ebp
mov	[esp+78h+var_64], ebp
push	ebx
push	1
lea	eax, [esp+80h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 68h
retn
			
mov	ecx, [esp+74h+arg_8]
push	ecx
push	1
lea	edx, [esp+7Ch+var_2C]
push	1Fh
push	edx
mov	[esp+84h+var_18], 1
mov	[esp+84h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 68h
retn
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
xor	edx, edx
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_cer_22 
mov	[esp+34h+var_C], 6
test	eax, eax
jz	loc_1007DA68
mov	eax, [eax]
test	eax, eax
jz	short loc_1007DA68
mov	ecx, [esp+34h+arg_4]
test	ecx, ecx
jz	short loc_1007DA68
mov	esi, [esp+34h+arg_8]
cmp	[eax+80h], edx
jz	short loc_1007DA4E
mov	eax, [eax+7Ch]
movzx	edx, byte ptr [eax]
cmp	edx, 2
jbe	short loc_1007DA4E
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1007DA26
push	esi
push	2
push	6
push	0
push	42Ah
push	eax
call	sub_10074820
add	esp, 18h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	6
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 42Ah
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
push	esi
push	1
mov	[ecx], edx
lea	ecx, [esp+3Ch+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	edx, [esp+34h+arg_8]
push	edx
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Fh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
xor	ebx, ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_2C], offset aPkix_pl_cer_23 
mov	[esp+4Ch+var_C], 6
cmp	edi, ebx
jz	loc_1007DC2B
cmp	[edi], ebx
jz	loc_1007DC2B
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_1007DC2B
mov	esi, [esp+4Ch+arg_8]
cmp	[edi+24h], ebx
jnz	loc_1007DBAC
push	esi
push	edi
call	sub_10095E70
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1007DB2C
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_1C], 2D2h
jmp	loc_1007DBE0
mov	[esp+4Ch+var_8], edi
cmp	[edi+24h], ebx
jnz	short loc_1007DB83
mov	eax, [edi]
mov	ecx, [eax+84h]
push	esi		
mov	[esp+50h+var_38], ecx
mov	ecx, [eax+88h]
mov	eax, [eax+8Ch]
lea	edx, [esp+50h+var_3C]
push	edx		
push	eax		
push	ecx		
call	sub_10090F20
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1007DB76
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 1Fh
jmp	short loc_1007DBE0
mov	ecx, [esp+4Ch+var_3C]
mov	[edi+24h], ecx
cmp	[esp+4Ch+var_8], edi
jnz	short loc_1007DBAC
push	esi
push	edi
call	sub_10095F10
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1007DBA8
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_8], ebx
			
mov	eax, [edi+24h]
cmp	eax, ebx
jz	short loc_1007DBDA
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1007DBDA
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
jmp	short loc_1007DBE0
			
mov	ecx, [edi+24h]
mov	[ebp+0], ecx
			
mov	eax, [esp+4Ch+var_8]
cmp	eax, ebx
jz	short loc_1007DC11
push	esi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1007DC0D
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_8], ebx
push	esi
push	1
lea	eax, [esp+54h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	ecx, [esp+4Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cert_g 
mov	[esp+40h+var_C], 6
cmp	esi, ebx
jz	loc_1007DDE7
cmp	[esi], ebx
jz	loc_1007DDE7
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_1007DDE7
mov	edi, [esp+40h+arg_8]
cmp	[esi+10h], ebx
jnz	loc_1007DD3F
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007DCEC
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_1C], 2D2h
jmp	loc_1007DD9C
mov	[esp+40h+var_8], esi
cmp	[esi+10h], ebx
jnz	short loc_1007DD16
mov	eax, [esi]
lea	ecx, [eax+0CCh]
add	eax, 54h
cmp	[eax+4], ebx
jnz	short loc_1007DD6D
mov	[esp+40h+var_30], ebx
mov	ecx, [esp+40h+var_30]
mov	[esi+10h], ecx
cmp	[esp+40h+var_8], esi
jnz	short loc_1007DD3F
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007DD3B
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
			
mov	eax, [esi+10h]
cmp	eax, ebx
jz	short loc_1007DD96
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007DD96
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
jmp	short loc_1007DD9C
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	ecx
push	eax
call	sub_1008FCA0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007DD09
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 42Dh
jmp	short loc_1007DD9C
			
mov	ecx, [esi+10h]
mov	[ebp+0], ecx
			
mov	eax, [esp+40h+var_8]
cmp	eax, ebx
jz	short loc_1007DDCD
push	edi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007DDC9
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cert_2 
mov	[esp+40h+var_C], 6
cmp	esi, ebx
jz	loc_1007DFB2
cmp	[esi], ebx
jz	loc_1007DFB2
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_1007DFB2
mov	edi, [esp+40h+arg_8]
cmp	[esi+0Ch], ebx
jnz	loc_1007DF4C
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007DEC1
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	6
push	edx
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	[esp+40h+var_8], esi
cmp	[esi+0Ch], ebx
jnz	short loc_1007DF23
mov	eax, [esi]
push	edi
lea	edx, [esp+44h+var_30]
lea	ecx, [eax+0A8h]
push	edx
add	eax, 48h
push	ecx
push	eax
call	sub_1008FCA0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007DF16
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	6
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 42Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	ecx, [esp+40h+var_30]
mov	[esi+0Ch], ecx
cmp	[esp+40h+var_8], esi
jnz	short loc_1007DF4C
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007DF48
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
			
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_1007DF92
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007DF92
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	6
push	edx
mov	[esp+50h+var_24], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esi+0Ch]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	6
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
sub	esp, 38h
push	ebx
mov	ebx, [esp+3Ch+arg_0]
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_2C], offset aPkix_pl_cer_24 
mov	[esp+48h+var_C], 6
cmp	ebx, ebp
jz	loc_1007E2CD
cmp	[esp+48h+arg_4], ebp
jz	loc_1007E2CD
mov	esi, [esp+48h+arg_8]
cmp	[ebx+14h], ebp
jnz	loc_1007E1F4
cmp	[ebx+18h], ebp
jnz	loc_1007E1F4
push	esi
push	ebx
call	sub_10095E70
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1007E077
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
mov	eax, [esp+54h+var_28]
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_1C], 2D2h
jmp	loc_1007E237
mov	[esp+48h+var_8], ebx
cmp	[ebx+14h], ebp
jnz	loc_1007E1CB
cmp	[ebx+18h], ebp
jnz	loc_1007E1CB
push	esi
lea	ecx, [esp+4Ch+var_30]
push	ecx
push	1
call	sub_1007CAB0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1007E0B9
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 85h
jmp	loc_1007E237
mov	edi, [esp+48h+var_30]
cmp	edi, ebp
jnz	short loc_1007E0CD
mov	dword ptr [ebx+18h], 1
jmp	loc_1007E237
lea	eax, [esp+48h+var_34]
push	esi
push	eax
call	sub_100755D0
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1007E0F7
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 27Dh
jmp	loc_1007E237
			
push	esi
lea	edx, [esp+4Ch+var_38]
push	edx
push	edi
call	sub_10089370
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1007E1A0
mov	eax, [esp+48h+var_38]
mov	ecx, [esp+48h+var_34]
push	esi
push	eax
push	ecx
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1007E1B4
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_1007E162
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1007E15E
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
push	edi
call	CERT_GetNextGeneralName
mov	edi, eax
add	esp, 4
cmp	edi, [esp+48h+var_30]
jnz	short loc_1007E0F7
mov	eax, [esp+48h+var_34]
push	esi
push	eax
mov	[ebx+14h], eax
call	sub_10075700
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1007E1C5
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 28Dh
jmp	loc_1007E237
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 1FAh
jmp	loc_1007E237
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 278h
jmp	short loc_1007E237
cmp	[esp+48h+var_8], ebx
jnz	short loc_1007E1F8
			
push	esi
push	ebx
call	sub_10095F10
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1007E1F0
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_8], ebp
			
mov	eax, [esp+48h+var_28]
mov	ecx, [ebx+14h]
cmp	ecx, ebp
jz	short loc_1007E22E
push	esi
push	ecx
call	sub_10095450
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1007E22A
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
mov	eax, [esp+54h+var_28]
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
jmp	short loc_1007E237
mov	eax, [esp+48h+var_28]
mov	ecx, [ebx+14h]
mov	edx, [esp+48h+arg_4]
mov	[edx], ecx
			
mov	ecx, [esp+48h+var_38]
cmp	ecx, ebp
jz	short loc_1007E26C
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1007E264
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	eax, [esp+48h+var_28]
mov	[esp+48h+var_38], ebp
cmp	[esp+48h+var_18], ebp
jnz	short loc_1007E282
cmp	eax, ebp
jnz	short loc_1007E282
cmp	[esp+48h+var_14], ebp
jnz	short loc_1007E282
cmp	[esp+48h+var_4], ebp
jz	short loc_1007E2B3
			
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_1007E2B3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1007E2AF
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_34], ebp
			
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	eax, [esp+48h+arg_8]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
			
sub	esp, 3Ch
push	ebx
mov	ebx, [esp+40h+arg_0]
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	[esp+4Ch+var_30], ebp
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_2C], offset aPkix_pl_cert_3 
mov	[esp+4Ch+var_C], 6
cmp	ebx, ebp
jz	loc_1007E579
mov	eax, [ebx]
cmp	eax, ebp
jz	loc_1007E579
cmp	[esp+4Ch+arg_4], ebp
jz	loc_1007E579
mov	esi, [esp+4Ch+arg_8]
cmp	[eax+4], ebp
jnz	short loc_1007E38D
push	esi
lea	eax, [esp+50h+var_30]
push	eax
push	ebp
call	sub_1007CAB0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1007E3ED
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 85h
jmp	loc_1007E4AD
push	800h
call	PORT_NewArena_Util
mov	edi, eax
add	esp, 4
mov	[esp+4Ch+var_34], edi
cmp	edi, ebp
jnz	short loc_1007E3D9
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1007E3C4
mov	edx, [esp+4Ch+var_C]
push	esi
push	2
push	edx
push	ebp
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 338h
jmp	loc_1007E4C7
mov	eax, [ebx]
push	edi
push	eax
call	CERT_GetCertificateNames
mov	ebx, eax
mov	eax, [esp+54h+var_28]
add	esp, 8
jmp	short loc_1007E3F1
mov	ebx, [esp+4Ch+var_30]
cmp	ebx, ebp
jz	loc_1007E4AD
lea	ecx, [esp+4Ch+var_38]
push	esi
push	ecx
mov	edi, ebx
call	sub_100755D0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1007E425
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 27Dh
jmp	loc_1007E4AD
			
push	esi
lea	eax, [esp+50h+var_3C]
push	eax
push	edi
call	sub_10089370
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1007E4FA
mov	ecx, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+var_38]
push	esi
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1007E50B
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_1007E490
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1007E48C
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
push	edi
call	CERT_GetNextGeneralName
mov	edi, eax
add	esp, 4
cmp	edi, ebx
jnz	short loc_1007E425
mov	eax, [esp+4Ch+arg_4]
mov	ecx, [esp+4Ch+var_38]
mov	[eax], ecx
mov	eax, [esp+4Ch+var_28]
			
cmp	[esp+4Ch+var_18], ebp
jnz	short loc_1007E4C3
cmp	eax, ebp
jnz	short loc_1007E4C3
cmp	[esp+4Ch+var_14], ebp
jnz	short loc_1007E4C3
cmp	[esp+4Ch+var_4], ebp
jz	short loc_1007E51C
			
mov	edi, [esp+4Ch+var_34]
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebp
jz	short loc_1007E520
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1007E4F4
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_38], ebp
jmp	short loc_1007E520
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 1FAh
jmp	short loc_1007E4AD
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 278h
jmp	short loc_1007E4AD
mov	edi, [esp+4Ch+var_34]
			
cmp	edi, ebp
jz	short loc_1007E52E
push	ebp
push	edi
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_1007E55F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1007E55B
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_3C], ebp
push	esi
push	1
lea	ecx, [esp+54h+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	edx, [esp+4Ch+arg_8]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cer_25 
mov	[esp+40h+var_C], 6
cmp	edi, ebx
jz	loc_1007E779
cmp	[edi], ebx
jz	loc_1007E779
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_1007E779
mov	esi, [esp+40h+arg_8]
cmp	[edi+1Ch], ebx
jnz	loc_1007E6C3
push	esi
push	edi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007E63C
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_1C], 2D2h
jmp	loc_1007E72E
mov	[esp+40h+var_8], edi
cmp	[edi+1Ch], ebx
jnz	short loc_1007E69A
mov	eax, [edi]
add	eax, 0D8h
cmp	[eax+4], ebx
jz	loc_1007E6F1
cmp	[eax+8], ebx
jz	loc_1007E6F1
push	esi
lea	ecx, [esp+44h+var_30]
push	ecx
push	eax
call	sub_10096A10
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007E689
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 32Eh
jmp	loc_1007E72E
mov	eax, [esp+40h+var_30]
mov	[edi+1Ch], eax
mov	[esp+40h+var_30], ebx
cmp	[esp+40h+var_8], edi
jnz	short loc_1007E6C3
push	esi
push	edi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007E6BF
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
			
mov	eax, [edi+1Ch]
cmp	eax, ebx
jz	short loc_1007E728
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007E728
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
jmp	short loc_1007E72E
			
mov	eax, dword_100BAE9C
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 8
mov	[esp+40h+var_10], 1Fh
cmp	eax, ebx
jz	short loc_1007E72E
mov	ecx, [esp+40h+var_C]
push	esi
push	1
push	ecx
push	ebx
push	8
push	eax
call	sub_10074820
add	esp, 18h
jmp	short loc_1007E72E
			
mov	ecx, [edi+1Ch]
mov	[ebp+0], ecx
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1007E75F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007E75B
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	ebp, ebp
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_2C], offset aPkix_pl_cert_5 
mov	[esp+3Ch+var_C], 6
cmp	esi, ebp
jz	loc_1007EAC5
cmp	[esi], ebp
jz	loc_1007EAC5
cmp	[esp+3Ch+arg_4], ebp
jz	loc_1007EAC5
push	ebx
mov	ebx, [esp+40h+arg_8]
cmp	[esi+20h], ebp
jnz	loc_1007E9D2
push	ebx
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007E83A
push	ebx
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_1C], 2D2h
jmp	loc_1007EA5D
mov	[esp+40h+var_8], esi
cmp	[esi+20h], ebp
jnz	loc_1007E9A9
push	ebx
lea	ecx, [esp+44h+var_30]
push	ecx
push	4
push	31h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1007E875
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 141h
jmp	loc_1007EA61
mov	eax, [esp+40h+var_30]
mov	[eax], ebp
mov	ecx, [esp+40h+var_30]
push	ebx
push	ecx
push	28h
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1007E8A7
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 299h
jmp	loc_1007EA61
mov	eax, [esp+40h+var_30]
mov	esi, [esi]
mov	edi, [eax]
add	esi, 0D4h
cmp	edi, ebp
jz	loc_1007EA2A
cmp	esi, ebp
jz	loc_1007EA2A
lea	ecx, [esi+4]
push	ecx
lea	edx, [edi+4]
push	edx
push	ebp
call	SECOID_CopyAlgorithmID_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_1007E913
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1007E8FA
mov	ecx, [esp+40h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	3A9h
push	eax
call	sub_10074820
add	esp, 18h
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 3A9h
jmp	loc_1007EA77
add	edi, 1Ch
add	esi, 1Ch
cmp	edi, ebp
jz	loc_1007EA00
cmp	esi, ebp
jz	loc_1007EA00
mov	edx, [esi]
mov	[edi], edx
mov	eax, [esi+8]
push	eax
call	PORT_ZAlloc_Util
add	esp, 4
mov	[edi+4], eax
cmp	eax, ebp
jnz	short loc_1007E979
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1007E960
mov	ecx, [esp+40h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 338h
jmp	loc_1007EA77
mov	edx, [esi+8]
mov	ecx, [esi+4]
add	edx, 7
shr	edx, 3
push	edx		
push	ecx		
push	eax		
call	memcpy
mov	edx, [esi+8]
mov	eax, [esp+4Ch+arg_0]
mov	[edi+8], edx
mov	ecx, [esp+4Ch+var_30]
add	esp, 0Ch
mov	[eax+20h], ecx
mov	esi, eax
cmp	[esp+40h+var_8], eax
jnz	short loc_1007E9D2
push	ebx
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007E9CE
push	ebx
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_8], ebp
			
mov	eax, [esi+20h]
cmp	eax, ebp
jz	short loc_1007EA54
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007EA54
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
jmp	short loc_1007EA5D
			
push	ebx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	eax, [esi+20h]
mov	ecx, [esp+40h+arg_4]
mov	[ecx], eax
			
mov	eax, [esp+40h+var_28]
			
cmp	[esp+40h+var_18], ebp
jnz	short loc_1007EA77
cmp	eax, ebp
jnz	short loc_1007EA77
cmp	[esp+40h+var_14], ebp
jnz	short loc_1007EA77
cmp	[esp+40h+var_4], ebp
jz	short loc_1007EAAB
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_1007EAAB
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007EAA4
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_30], ebp
mov	[esi+20h], ebp
			
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cert_6 
mov	[esp+40h+var_C], 6
cmp	esi, ebx
jz	loc_1007EC74
cmp	[esi], ebx
jz	loc_1007EC74
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_1007EC74
mov	edi, [esp+40h+arg_8]
cmp	[esi+28h], ebx
jnz	loc_1007EBFB
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007EB8C
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_1C], 2D2h
jmp	loc_1007EC29
mov	[esp+40h+var_8], esi
cmp	[esi+28h], ebx
jnz	short loc_1007EBD2
mov	ecx, [esi]
mov	eax, [ecx+114h]
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
call	sub_10096C20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007EBC5
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 204h
jmp	short loc_1007EC29
mov	ecx, [esp+40h+var_30]
mov	[esi+28h], ecx
cmp	[esp+40h+var_8], esi
jnz	short loc_1007EBFB
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007EBF7
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
			
mov	esi, [esi+28h]
cmp	esi, ebx
jz	short loc_1007EC26
push	edi
push	ebp
push	esi
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007EC29
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2C7h
jmp	short loc_1007EC29
mov	[ebp+0], ebx
			
mov	eax, [esp+40h+var_8]
cmp	eax, ebx
jz	short loc_1007EC5A
push	edi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007EC56
push	edi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 40h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	esi, [esp+50h+arg_0]
xor	ebx, ebx
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_2C], offset aPkix_pl_cert_7 
mov	[esp+50h+var_C], 6
cmp	esi, ebx
jz	loc_1007EED9
cmp	[esi], ebx
jz	loc_1007EED9
mov	ebp, [esp+50h+arg_4]
cmp	ebp, ebx
jz	loc_1007EED9
mov	edi, [esp+50h+arg_8]
cmp	[esi+34h], ebx
jnz	loc_1007EE48
cmp	[esi+38h], ebx
jnz	loc_1007EE48
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1007ED49
push	edi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_1C], 2D2h
jmp	loc_1007EE7C
mov	[esp+50h+var_8], esi
cmp	[esi+34h], ebx
jnz	loc_1007EE1F
cmp	[esi+38h], ebx
jnz	loc_1007EE1F
push	800h
call	PORT_NewArena_Util
mov	ecx, eax
add	esp, 4
mov	[esp+50h+var_3C], ecx
cmp	ecx, ebx
jnz	short loc_1007EDAB
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1007ED96
mov	ecx, [esp+50h+var_C]
push	edi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 338h
jmp	loc_1007EE7C
mov	eax, [esi]
push	eax
push	ecx
call	sub_1003E990
add	esp, 8
cmp	eax, ebx
jnz	short loc_1007EDCA
mov	dword ptr [esi+38h], 1
mov	[ebp+0], ebx
jmp	loc_1007EE7C
mov	edx, [eax]
mov	ecx, [eax+4]
mov	eax, [eax+8]
mov	[esp+50h+var_38], edx
cmp	eax, ebx
jnz	short loc_1007EDE9
mov	dword ptr [esi+38h], 1
mov	[ebp+0], ebx
jmp	loc_1007EE7C
push	edi		
lea	edx, [esp+54h+var_40]
push	edx		
push	eax		
push	ecx		
call	sub_10091AD0
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1007EE12
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 38h
jmp	short loc_1007EE7C
mov	ecx, [esp+50h+var_40]
mov	[esi+34h], ecx
cmp	[esp+50h+var_8], esi
jnz	short loc_1007EE48
			
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1007EE44
push	edi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_8], ebx
			
mov	eax, [esi+34h]
cmp	eax, ebx
jz	short loc_1007EE76
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1007EE76
push	edi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
jmp	short loc_1007EE7C
			
mov	ecx, [esi+34h]
mov	[ebp+0], ecx
			
mov	eax, [esp+50h+var_8]
cmp	eax, ebx
jz	short loc_1007EEAD
push	edi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1007EEA9
push	edi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_8], ebx
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_1007EEBF
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
push	edi
push	1
lea	eax, [esp+58h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	ecx, [esp+50h+arg_8]
push	ecx
push	1
lea	edx, [esp+58h+var_2C]
push	1Fh
push	edx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
			
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_0]
xor	ebx, ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_2C], offset aPkix_pl_cer_26 
mov	[esp+44h+var_C], 6
cmp	esi, ebx
jz	loc_1007F123
cmp	[esi], ebx
jz	loc_1007F123
mov	ebp, [esp+44h+arg_4]
cmp	ebp, ebx
jz	loc_1007F123
mov	edi, [esp+44h+arg_8]
cmp	[esi+2Ch], ebx
jnz	loc_1007F091
cmp	[esi+30h], ebx
jnz	loc_1007F091
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1007EFA9
push	edi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_1C], 2D2h
jmp	loc_1007F0C5
mov	[esp+44h+var_8], esi
cmp	[esi+2Ch], ebx
jnz	loc_1007F068
cmp	[esi+30h], ebx
jnz	loc_1007F068
push	ebx
push	ebx
push	ebx
call	SECITEM_AllocItem_Util
mov	ecx, eax
add	esp, 0Ch
mov	[esp+44h+var_34], ecx
cmp	ecx, ebx
jnz	short loc_1007F009
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1007EFF4
mov	ecx, [esp+44h+var_C]
push	edi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 338h
jmp	loc_1007F0C5
mov	eax, [esi]
push	ecx
push	eax
call	CERT_FindSubjectKeyIDExtension
add	esp, 8
test	eax, eax
jz	short loc_1007F028
mov	dword ptr [esi+30h], 1
mov	[ebp+0], ebx
jmp	loc_1007F0C5
mov	eax, [esp+44h+var_34]
mov	ecx, [eax+8]
push	edi		
lea	edx, [esp+48h+var_30]
push	edx		
mov	edx, [eax+4]
push	ecx		
push	edx		
call	sub_10091AD0
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_1007F05B
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 38h
jmp	short loc_1007F0C5
mov	ecx, [esp+44h+var_30]
mov	[esi+2Ch], ecx
cmp	[esp+44h+var_8], esi
jnz	short loc_1007F091
			
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1007F08D
push	edi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_8], ebx
			
mov	eax, [esi+2Ch]
cmp	eax, ebx
jz	short loc_1007F0BF
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1007F0BF
push	edi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
jmp	short loc_1007F0C5
			
mov	ecx, [esi+2Ch]
mov	[ebp+0], ecx
			
mov	eax, [esp+44h+var_8]
cmp	eax, ebx
jz	short loc_1007F0F6
push	edi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1007F0F2
push	edi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_8], ebx
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_1007F109
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
push	edi
push	1
lea	eax, [esp+4Ch+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	ecx, [esp+44h+arg_8]
push	ecx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
			
sub	esp, 44h
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	edi, [esp+54h+arg_0]
mov	[esp+54h+var_3C], ebp
mov	[esp+54h+var_40], ebp
mov	[esp+54h+var_44], ebp
mov	[esp+54h+var_2C], offset aPkix_pl_cer_27 
mov	[esp+54h+var_C], 6
cmp	edi, ebp
jz	loc_1007F4B9
cmp	[edi], ebp
jz	loc_1007F4B9
mov	ebx, [esp+54h+arg_4]
cmp	ebx, ebp
jz	loc_1007F4B9
mov	esi, [esp+54h+arg_8]
cmp	[edi+3Ch], ebp
jnz	loc_1007F3CF
cmp	[edi+40h], ebp
jnz	loc_1007F3CF
push	esi
push	edi
call	sub_10095E70
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F1FD
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_1C], 2D2h
jmp	loc_1007F402
mov	[esp+54h+var_8], edi
cmp	[edi+3Ch], ebp
jnz	loc_1007F3A2
cmp	[edi+40h], ebp
jnz	loc_1007F3A2
mov	eax, [edi]
lea	ecx, [esp+54h+var_38]
push	ecx
push	5Ch
push	eax
call	CERT_FindCertExtension
add	esp, 0Ch
test	eax, eax
jz	short loc_1007F237
mov	dword ptr [edi+40h], 1
mov	[ebx], ebp
jmp	loc_1007F402
lea	edx, [esp+54h+var_38]
push	edx
call	CERT_DecodeOidSequence
mov	ebx, eax
add	esp, 4
mov	[esp+54h+var_3C], ebx
cmp	ebx, ebp
jnz	short loc_1007F280
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1007F26B
mov	ecx, [esp+54h+var_C]
push	esi
push	2
push	ecx
push	ebp
push	70h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 70h
jmp	loc_1007F402
mov	edx, [esp+54h+var_34]
push	edx
call	PORT_Free_Util
mov	ebx, [ebx+4]
add	esp, 4
cmp	ebx, ebp
jnz	short loc_1007F2A6
mov	eax, [esp+54h+arg_4]
mov	dword ptr [edi+40h], 1
mov	[eax], ebp
jmp	loc_1007F402
lea	ecx, [esp+54h+var_44]
push	esi
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_1007F2D0
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 27Dh
jmp	loc_1007F402
mov	eax, [ebx]
cmp	eax, ebp
jz	short loc_1007F342
push	esi
lea	ecx, [esp+58h+var_40]
push	ecx
push	eax
add	ebx, 4
call	sub_10096A10
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	short loc_1007F36C
mov	edx, [esp+54h+var_40]
mov	eax, [esp+54h+var_44]
push	esi
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	short loc_1007F380
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jz	short loc_1007F33C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F338
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_40], ebp
mov	eax, [ebx]
cmp	eax, ebp
jnz	short loc_1007F2D6
mov	ecx, [esp+54h+var_44]
push	esi
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_1007F391
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 28Dh
jmp	loc_1007F402
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 32Eh
jmp	loc_1007F402
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 278h
jmp	short loc_1007F402
mov	eax, [esp+54h+var_44]
mov	[edi+3Ch], eax
mov	[esp+54h+var_44], ebp
cmp	[esp+54h+var_8], edi
jnz	short loc_1007F3CB
			
push	esi
push	edi
call	sub_10095F10
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F3C7
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_8], ebp
mov	ebx, [esp+54h+arg_4]
			
mov	eax, [edi+3Ch]
cmp	eax, ebp
jz	short loc_1007F3FD
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F3FD
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
jmp	short loc_1007F402
			
mov	eax, [edi+3Ch]
mov	[ebx], eax
			
mov	eax, [esp+54h+var_8]
cmp	eax, ebp
jz	short loc_1007F433
push	esi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F42F
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_8], ebp
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jz	short loc_1007F464
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F460
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_40], ebp
mov	eax, [esp+54h+var_44]
cmp	eax, ebp
jz	short loc_1007F495
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F491
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	[esp+54h+var_44], ebp
mov	ecx, [esp+54h+var_3C]
push	ecx
call	CERT_DestroyUserNotice
push	esi
push	1
lea	edx, [esp+60h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 14h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
			
mov	eax, [esp+54h+arg_8]
push	eax
push	1
lea	ecx, [esp+5Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
			
sub	esp, 50h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+50h+var_4], eax
mov	eax, [esp+50h+arg_4]
push	ebx
mov	ebx, [esp+54h+arg_0]
push	ebp
mov	ebp, [esp+58h+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_48]
rep movsd
mov	[esp+60h+var_4C], eax
mov	[esp+60h+var_50], 0
mov	[esp+60h+var_48], offset aPkix_pl_cer_28 
mov	[esp+60h+var_28], 6
test	ebx, ebx
jz	loc_1007F6DC
cmp	dword ptr [ebx], 0
jz	loc_1007F6DC
test	eax, eax
jz	loc_1007F6DC
cmp	dword ptr [ebx+44h], 0
jnz	loc_1007F662
cmp	dword ptr [ebx+48h], 0
jnz	loc_1007F662
push	ebp
push	ebx
call	sub_10095E70
add	esp, 8
mov	[esp+60h+var_40], eax
test	eax, eax
jz	short loc_1007F59D
push	ebp
push	eax
lea	eax, [esp+68h+var_48]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_40], 0
mov	[esp+60h+var_38], 2D2h
jmp	loc_1007F69D
cmp	dword ptr [ebx+44h], 0
mov	[esp+60h+var_24], ebx
jnz	short loc_1007F60C
cmp	dword ptr [ebx+48h], 0
jnz	short loc_1007F60C
mov	esi, [ebx]
lea	ecx, [esp+60h+var_18]
push	ecx
push	esi
call	sub_1003E930
add	esp, 8
test	eax, eax
jz	short loc_1007F60C
lea	edx, [esp+60h+var_10]
push	edx
push	esi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_1007F5E7
mov	al, 18h
test	[esp+60h+var_10], al
jnz	short loc_1007F5FD
test	[esp+60h+var_C], al
jnz	short loc_1007F5FD
test	[esp+60h+var_8], al
jnz	short loc_1007F5FD
mov	eax, [esp+60h+var_4C]
mov	dword ptr [ebx+48h], 1
mov	dword ptr [eax], 0
jmp	loc_1007F69D
			
mov	eax, 1
mov	[esp+60h+var_50], 0FFFFFFFFh
jmp	short loc_1007F62E
			
xor	eax, eax
cmp	[esp+60h+var_18], eax
setnz	al
test	eax, eax
jz	short loc_1007F62E
mov	ecx, [esp+60h+var_14]
mov	[esp+60h+var_50], 0FFFFFFFFh
cmp	ecx, 0FFFFFFFEh
jz	short loc_1007F62E
mov	[esp+60h+var_50], ecx
			
mov	edx, [esp+60h+var_50]
push	ebp
lea	ecx, [esp+64h+var_1C]
push	ecx
push	edx
push	eax
call	sub_1007B7D0
add	esp, 10h
mov	[esp+60h+var_44], eax
test	eax, eax
jz	short loc_1007F65B
mov	eax, [eax+4]
mov	[esp+60h+var_2C], eax
mov	[esp+60h+var_38], 4Fh
jmp	short loc_1007F69D
mov	ecx, [esp+60h+var_1C]
mov	[ebx+44h], ecx
			
mov	eax, [ebx+44h]
test	eax, eax
jz	short loc_1007F694
push	ebp
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+60h+var_40], eax
test	eax, eax
jz	short loc_1007F694
push	ebp
push	eax
lea	edx, [esp+68h+var_48]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_40], 0
jmp	short loc_1007F69D
			
mov	eax, [ebx+44h]
mov	ecx, [esp+60h+var_4C]
mov	[ecx], eax
			
mov	eax, [esp+60h+var_24]
test	eax, eax
jz	short loc_1007F6D0
push	ebp
push	eax
call	sub_10095F10
xor	esi, esi
add	esp, 8
mov	[esp+60h+var_40], eax
cmp	eax, esi
jz	short loc_1007F6CC
push	ebp
push	eax
lea	edx, [esp+68h+var_48]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+60h+var_40], esi
mov	[esp+60h+var_24], esi
push	ebp
push	1
push	6
lea	eax, [esp+6Ch+var_48]
push	eax
jmp	short loc_1007F6F6
			
push	ebp
push	1
push	1Fh
lea	ecx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_34], 1
mov	[esp+6Ch+var_38], 2BCh
push	ecx
call	sub_100781E0
mov	ecx, [esp+70h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	ebp, ebp
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_2C], offset aPkix_pl_cer_30 
mov	[esp+3Ch+var_C], 6
cmp	esi, ebp
jz	loc_1007F8E1
cmp	[esi], ebp
jz	loc_1007F8E1
mov	edi, [esp+3Ch+arg_4]
cmp	edi, ebp
jz	loc_1007F8E1
push	ebx
mov	ebx, [esp+40h+arg_8]
cmp	[esi+4Ch], ebp
jnz	loc_1007F836
cmp	[esi+50h], ebp
jnz	loc_1007F836
push	ebx
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F7B5
push	ebx
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_1C], 2D2h
jmp	loc_1007F869
mov	[esp+40h+var_8], esi
cmp	[esi+4Ch], ebp
jnz	short loc_1007F802
cmp	[esi+50h], ebp
jnz	short loc_1007F802
mov	eax, [esi]
lea	ecx, [esp+40h+var_30]
push	ecx
call	sub_1007BED0
add	esp, 4
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1007F7EB
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 73h
jmp	short loc_1007F869
cmp	[esp+40h+var_30], ebp
jnz	short loc_1007F7FC
mov	dword ptr [esi+50h], 1
mov	[edi], ebp
jmp	short loc_1007F869
cmp	[esp+40h+var_8], esi
jnz	short loc_1007F82B
			
push	ebx
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F827
push	ebx
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_8], ebp
mov	ecx, [esp+40h+var_30]
mov	[esi+4Ch], ecx
mov	[esp+40h+var_30], ebp
			
mov	eax, [esi+4Ch]
cmp	eax, ebp
jz	short loc_1007F864
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F864
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
jmp	short loc_1007F869
			
mov	eax, [esi+4Ch]
mov	[edi], eax
			
mov	eax, [esp+40h+var_8]
cmp	eax, ebp
jz	short loc_1007F89A
push	ebx
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F896
push	ebx
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_8], ebp
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_1007F8C7
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F8C7
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
			
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	ebp, ebp
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_2C], offset aPkix_pl_cer_32 
mov	[esp+3Ch+var_C], 6
cmp	esi, ebp
jz	loc_1007FAD1
cmp	[esi], ebp
jz	loc_1007FAD1
mov	edi, [esp+3Ch+arg_4]
cmp	edi, ebp
jz	loc_1007FAD1
push	ebx
mov	ebx, [esp+40h+arg_8]
cmp	[esi+58h], ebp
jnz	loc_1007FA26
cmp	[esi+54h], ebp
jnz	loc_1007FA26
push	ebx
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007F9A5
push	ebx
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_1C], 2D2h
jmp	loc_1007FA59
mov	[esp+40h+var_8], esi
cmp	[esi+58h], ebp
jnz	short loc_1007F9F2
cmp	[esi+54h], ebp
jnz	short loc_1007F9F2
mov	eax, [esi]
lea	ecx, [esp+40h+var_30]
push	ecx
call	sub_1007C4C0
add	esp, 4
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_1007F9DB
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 74h
jmp	short loc_1007FA59
cmp	[esp+40h+var_30], ebp
jnz	short loc_1007F9EC
mov	dword ptr [esi+54h], 1
mov	[edi], ebp
jmp	short loc_1007FA59
cmp	[esp+40h+var_8], esi
jnz	short loc_1007FA1B
			
push	ebx
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FA17
push	ebx
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_8], ebp
mov	ecx, [esp+40h+var_30]
mov	[esi+58h], ecx
mov	[esp+40h+var_30], ebp
			
mov	eax, [esi+58h]
cmp	eax, ebp
jz	short loc_1007FA54
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FA54
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
jmp	short loc_1007FA59
			
mov	eax, [esi+58h]
mov	[edi], eax
			
mov	eax, [esp+40h+var_8]
cmp	eax, ebp
jz	short loc_1007FA8A
push	ebx
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FA86
push	ebx
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+var_8], ebp
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_1007FAB7
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FAB7
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
			
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
			
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_pl_cer_34 
mov	[esp+40h+var_C], 6
cmp	esi, ebp
jz	loc_1007FC63
cmp	[esi], ebp
jz	loc_1007FC63
mov	edi, [esp+40h+arg_4]
cmp	edi, ebp
jz	loc_1007FC63
push	ebx
mov	ebx, [esp+44h+arg_8]
cmp	[esi+5Ch], ebp
jnz	loc_1007FC13
push	ebx
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FB90
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_1C], 2D2h
jmp	loc_1007FC18
mov	[esp+44h+var_8], esi
cmp	[esi+5Ch], ebp
jnz	short loc_1007FBEA
or	eax, 0FFFFFFFFh
lea	ecx, [esp+44h+var_30]
push	ecx
lea	edx, [esp+48h+var_34]
mov	[esi+60h], eax
mov	[esi+64h], eax
mov	eax, [esi]
push	edx
mov	dword ptr [esi+5Ch], 1
call	sub_1007C860
add	esp, 8
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1007FBD6
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 72h
jmp	short loc_1007FC18
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+var_30]
mov	[esi+60h], ecx
mov	[esi+64h], edx
cmp	[esp+44h+var_8], esi
jnz	short loc_1007FC13
push	ebx
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FC0F
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_8], ebp
			
mov	ecx, [esi+60h]
mov	[edi], ecx
			
mov	eax, [esp+44h+var_8]
cmp	eax, ebp
jz	short loc_1007FC49
push	ebx
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FC45
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_8], ebp
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_pl_cer_36 
mov	[esp+40h+var_C], 6
cmp	esi, ebp
jz	loc_1007FDF3
cmp	[esi], ebp
jz	loc_1007FDF3
mov	edi, [esp+40h+arg_4]
cmp	edi, ebp
jz	loc_1007FDF3
push	ebx
mov	ebx, [esp+44h+arg_8]
cmp	[esi+5Ch], ebp
jnz	loc_1007FDA3
push	ebx
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FD20
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_1C], 2D2h
jmp	loc_1007FDA8
mov	[esp+44h+var_8], esi
cmp	[esi+5Ch], ebp
jnz	short loc_1007FD7A
or	eax, 0FFFFFFFFh
lea	ecx, [esp+44h+var_30]
push	ecx
lea	edx, [esp+48h+var_34]
mov	[esi+60h], eax
mov	[esi+64h], eax
mov	eax, [esi]
push	edx
mov	dword ptr [esi+5Ch], 1
call	sub_1007C860
add	esp, 8
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1007FD66
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 72h
jmp	short loc_1007FDA8
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+var_30]
mov	[esi+60h], ecx
mov	[esi+64h], edx
cmp	[esp+44h+var_8], esi
jnz	short loc_1007FDA3
push	ebx
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FD9F
push	ebx
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_8], ebp
			
mov	ecx, [esi+64h]
mov	[edi], ecx
			
mov	eax, [esp+44h+var_8]
cmp	eax, ebp
jz	short loc_1007FDD9
push	ebx
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1007FDD5
push	ebx
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_8], ebp
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cer_37 
mov	[esp+40h+var_C], 6
cmp	esi, ebx
jz	loc_1007FF6B
cmp	[esi], ebx
jz	loc_1007FF6B
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_1007FF6B
mov	edi, [esp+40h+arg_8]
cmp	[esi+68h], ebx
jnz	short loc_1007FEA3
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007FEF4
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_1C], 2D2h
			
mov	eax, [esp+40h+var_8]
cmp	eax, ebx
jz	short loc_1007FED4
push	edi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_1007FED0
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_8], ebx
mov	ecx, [esi+6Ch]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	6
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	[esp+40h+var_8], esi
cmp	[esi+68h], ebx
jnz	short loc_1007FF49
mov	edx, [esi]
push	edi
lea	ecx, [esp+44h+var_30]
push	ecx
push	edx
mov	dword ptr [esi+68h], 1
mov	dword ptr [esi+6Ch], 0FFFFFFFFh
call	sub_1007C990
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1007FF38
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 6Fh
jmp	loc_1007FEA3
mov	ecx, [esp+40h+var_30]
mov	[esi+6Ch], ecx
cmp	[esp+40h+var_8], esi
jnz	loc_1007FEA3
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	loc_1007FED0
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
jmp	loc_1007FEC4
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 58h
mov	eax, [esp+58h+arg_0]
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	[esp+64h+var_2C], offset aPkix_pl_cert_a 
mov	[esp+64h+var_C], 6
cmp	eax, ebx
jz	loc_100800B9
cmp	[esp+64h+arg_4], ebx
jz	loc_100800B9
mov	eax, [eax]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_58]
rep movsd
mov	[esp+64h+arg_0], ebx
mov	[esp+64h+var_58], offset aPkix_pl_cer_39 
mov	[esp+64h+var_38], 6
cmp	eax, ebx
jz	short loc_10080044
mov	eax, [eax+114h]
cmp	eax, ebx
jz	short loc_10080044
lea	ecx, [esp+64h+arg_0]
push	ecx
push	58h
push	eax
call	sub_1003EB30
mov	esi, [esp+70h+arg_8]
push	esi
neg	eax
sbb	ebx, ebx
push	1
lea	edx, [esp+78h+var_58]
push	6
not	ebx
and	ebx, [esp+7Ch+arg_0]
push	edx
call	sub_100781E0
add	esp, 1Ch
jmp	short loc_1008006A
			
mov	esi, [esp+64h+arg_8]
push	esi
push	1
lea	eax, [esp+6Ch+var_58]
push	1Fh
push	eax
mov	[esp+74h+var_44], 1
mov	[esp+74h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_1008009A
mov	ecx, [eax+4]
push	esi
push	1
lea	eax, [esp+6Ch+var_2C]
push	6
push	eax
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 99h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
mov	edx, [esp+64h+arg_4]
push	esi
push	1
lea	eax, [esp+6Ch+var_2C]
push	6
push	eax
mov	[edx], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
			
mov	ecx, [esp+64h+arg_8]
push	ecx
push	1
lea	edx, [esp+6Ch+var_2C]
push	1Fh
push	edx
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 58h
retn
align 10h
sub	esp, 44h
push	ebx
mov	ebx, [esp+48h+arg_0]
push	ebp
push	esi
xor	eax, eax
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	[esp+54h+var_44], eax
mov	[esp+54h+var_30], eax
mov	[esp+54h+var_40], eax
mov	[esp+54h+var_38], eax
mov	[esp+54h+var_3C], eax
mov	[esp+54h+var_2C], offset aPkix_pl_cert_v 
mov	[esp+54h+var_C], 6
cmp	ebx, eax
jz	loc_1008036D
cmp	[ebx], eax
jz	loc_1008036D
mov	ebp, [esp+54h+arg_4]
cmp	ebp, eax
jz	loc_1008036D
mov	esi, [esp+54h+arg_8]
mov	ecx, dword_100BAE80
push	esi
lea	eax, [esp+58h+var_44]
push	eax
push	ebp
push	ecx
call	sub_10093CA0
mov	edi, eax
mov	eax, [esp+64h+var_44]
add	esp, 10h
mov	[esp+54h+var_34], edi
test	eax, eax
jz	short loc_100801B8
test	edi, edi
jnz	short loc_100801B8
push	esi
lea	edx, [esp+58h+var_40]
push	edx
push	eax
push	ebx
call	sub_10095750
add	esp, 10h
mov	[esp+54h+var_28], eax
test	eax, eax
jz	short loc_100801A5
mov	eax, [eax+4]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 2CBh
jmp	loc_100802C2
mov	eax, 1
cmp	[esp+54h+var_40], eax
jz	loc_100802C2
mov	[esp+54h+var_38], eax
			
mov	ecx, [ebp+0]
mov	edi, [ebx]
push	ecx
add	edi, 0Ch
call	SECKEY_ExtractPublicKey
add	esp, 4
mov	[esp+54h+arg_0], eax
test	eax, eax
jnz	short loc_10080207
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100801F2
mov	edx, [esp+54h+var_C]
push	esi
push	2
push	edx
push	0
push	3A8h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 3A8h
jmp	loc_100802BE
lea	eax, [esp+54h+var_3C]
push	eax
push	esi
call	sub_1009C290
add	esp, 8
mov	[esp+54h+var_28], eax
test	eax, eax
jz	short loc_10080231
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 2B4h
jmp	loc_100802B1
mov	edx, [esp+54h+var_3C]
mov	eax, [esp+54h+arg_0]
push	edx
push	eax
push	edi
call	CERT_VerifySignedDataWithPublicKey
add	esp, 0Ch
test	eax, eax
jz	short loc_10080294
call	PORT_GetError_Util
cmp	eax, 0FFFFE0B0h
jz	short loc_10080261
push	0FFFFE00Ah
call	PORT_SetError_Util
add	esp, 4
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10080282
mov	ecx, [esp+54h+var_C]
push	esi
push	2
push	ecx
push	0
push	3B7h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 3B7h
jmp	short loc_100802B1
cmp	[esp+54h+var_38], 0
jnz	short loc_100802B1
mov	edx, dword_100BAE80
push	esi
push	ebx
push	ebp
push	edx
call	sub_10093760
add	esp, 10h
mov	[esp+54h+var_30], eax
			
mov	eax, [esp+54h+arg_0]
push	eax
call	SECKEY_DestroyPublicKey
add	esp, 4
mov	edi, [esp+54h+var_34]
			
mov	eax, [esp+54h+var_44]
test	eax, eax
jz	short loc_100802F5
push	esi
push	eax
call	sub_100955D0
xor	ebx, ebx
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100802F1
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_44], ebx
test	edi, edi
jz	short loc_10080322
push	esi
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
test	eax, eax
jz	short loc_10080322
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], 0
			
mov	eax, [esp+54h+var_30]
test	eax, eax
jz	short loc_10080353
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
test	eax, eax
jz	short loc_10080353
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], 0
			
push	esi
push	1
lea	ecx, [esp+5Ch+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
			
mov	edx, [esp+54h+arg_8]
push	edx
push	1
lea	eax, [esp+5Ch+var_2C]
push	1Fh
push	eax
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
			
sub	esp, 3Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	edi, [esp+44h+arg_0]
mov	[esp+44h+var_2C], offset aPkix_pl_cer_40 
mov	[esp+44h+var_C], 6
test	edi, edi
jnz	short loc_100803F9
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 3Ch
retn
mov	eax, [esp+44h+arg_4]
mov	esi, [esp+44h+arg_8]
test	eax, eax
jz	short loc_1008042D
push	esi
lea	edx, [esp+48h+var_3C]
push	edx
push	eax
call	sub_100883F0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1008043B
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 183h
jmp	short loc_100804A3
call	ds:PR_Now
mov	[esp+44h+var_3C], eax
mov	[esp+44h+var_38], edx
mov	ecx, [esi]
mov	edx, [esi+4]
mov	eax, ecx
mov	[esp+44h+var_30], edx
and	eax, 2
xor	edx, edx
or	eax, edx
jnz	short loc_10080456
and	ecx, 4
or	ecx, eax
jz	short loc_1008045B
mov	eax, 1
mov	ecx, [esp+44h+var_3C]
mov	edx, [edi]
push	eax
mov	eax, [esp+48h+var_38]
push	eax
push	ecx
push	edx
call	CERT_CheckCertValidTimes
add	esp, 10h
test	eax, eax
jz	short loc_100804A3
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10080493
mov	ecx, [esp+44h+var_C]
push	esi
push	2
push	ecx
push	0
push	5Dh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 5Dh
			
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 3Ch
retn
align 10h
			
sub	esp, 34h
mov	eax, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_pl_cert_8 
mov	[esp+3Ch+var_C], 6
test	eax, eax
jz	loc_100805A6
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_100805A6
mov	eax, [eax]
add	eax, 0C0h
push	eax
lea	ecx, [esp+40h+var_34]
push	ecx
call	DER_DecodeTimeChoice_Util
mov	esi, [esp+44h+arg_8]
add	esp, 8
test	eax, eax
jz	short loc_10080563
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008053B
mov	edx, [esp+3Ch+var_C]
push	esi
push	2
push	edx
push	0
push	18Dh
push	eax
call	sub_10074820
add	esp, 18h
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	6
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 18Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 34h
retn
mov	eax, [esp+3Ch+var_30]
mov	ecx, [esp+3Ch+var_34]
push	esi
push	edi
push	eax
push	ecx
call	sub_10088480
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1008058E
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 17Fh
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 34h
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 34h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_8]
xor	ebx, ebx
mov	[esp+3Ch+var_2C], offset aPkix_pl_cer_41 
mov	[esp+3Ch+var_C], 6
test	edi, edi
jz	loc_10080746
test	esi, esi
jz	loc_10080746
mov	eax, [esi+4]
mov	ecx, [esi]
shrd	ecx, eax, 1
sar	eax, 1
test	ecx, ecx
jnz	short loc_10080633
test	eax, eax
jz	short loc_10080642
			
shrd	ecx, eax, 1
inc	ebx
sar	eax, 1
test	ecx, ecx
jnz	short loc_10080633
test	eax, eax
jnz	short loc_10080633
mov	eax, [edi]
push	ebp
push	eax
call	sub_1003E510
mov	eax, [esp+44h+arg_4]
mov	ecx, [edi]
mov	ebp, [ecx+13Ch]
add	esp, 4
test	eax, eax
jnz	short loc_100806B4
cmp	ebx, 8
jz	short loc_10080668
cmp	ebx, 0Bh
jnz	short loc_100806B4
mov	[esp+40h+arg_0], 4
mov	[esp+40h+var_30], 4007h
mov	eax, [esp+40h+arg_0]
mov	ecx, [edi]
push	eax
push	ecx
call	sub_1003C090
add	esp, 8
test	eax, eax
jz	short loc_100806F8
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100806AA
mov	edx, [esp+40h+var_C]
push	esi
push	2
push	edx
push	0
push	60h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_1C], 60h
jmp	short loc_10080724
			
lea	edx, [esp+40h+var_30]
push	edx
lea	ecx, [esp+44h+arg_0]
push	ecx
push	eax
push	ebx
call	sub_1003BF70
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_10080678
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100806EE
mov	edx, [esp+40h+var_C]
push	esi
push	2
push	edx
push	0
push	40Dh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_1C], 40Dh
jmp	short loc_10080724
test	[esp+40h+var_30], ebp
jnz	short loc_1008072C
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008071C
mov	ecx, [esp+40h+var_C]
push	esi
push	2
push	ecx
push	0
push	5Ch
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_1C], 5Ch
			
mov	[esp+40h+var_18], 1
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
xor	edx, edx
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_cer_42 
mov	[esp+34h+var_C], 6
test	eax, eax
jz	loc_1008087E
mov	ecx, [eax]
test	ecx, ecx
jz	loc_1008087E
mov	esi, [esp+34h+arg_8]
cmp	[ecx+138h], edx
jz	loc_10080866
mov	eax, [esp+34h+arg_4]
test	al, 1
jz	short loc_100807CA
mov	edx, 80h
test	al, 2
jz	short loc_100807D1
or	edx, 40h
test	al, 4
jz	short loc_100807D8
or	edx, 20h
test	al, 8
jz	short loc_100807DF
or	edx, 10h
test	al, 10h
jz	short loc_100807E6
or	edx, 8
test	al, 20h
jz	short loc_100807ED
or	edx, 4
test	al, 40h
jz	short loc_100807F4
or	edx, 2
test	al, al
jns	short loc_100807FB
or	edx, 1
test	eax, 100h
jz	short loc_1008082A
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10080820
push	esi
push	2
push	6
push	0
push	187h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+34h+var_1C], 187h
jmp	short loc_1008085E
push	edx
push	ecx
call	sub_1003C090
add	esp, 8
test	eax, eax
jz	short loc_10080866
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10080856
mov	ecx, [esp+34h+var_C]
push	esi
push	2
push	ecx
push	0
push	60h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+34h+var_1C], 60h
mov	[esp+34h+var_18], 1
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cert_9 
mov	[esp+40h+var_C], 6
cmp	esi, ebx
jz	loc_10080A3D
cmp	[esi], ebx
jz	loc_10080A3D
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10080A3D
mov	edi, [esp+40h+arg_8]
cmp	[esi+70h], ebx
jnz	loc_100809BE
cmp	[esi+74h], ebx
jnz	loc_100809BE
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10080945
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_1C], 2D2h
jmp	loc_100809F2
mov	[esp+40h+var_8], esi
cmp	[esi+70h], ebx
jnz	short loc_10080995
cmp	[esi+74h], ebx
jnz	short loc_10080995
mov	edx, [esi]
push	edi
lea	ecx, [esp+44h+var_30]
push	ecx
push	edx
call	sub_1008C290
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1008097D
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 0A0h
jmp	short loc_100809F2
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jnz	short loc_1008098C
mov	dword ptr [esi+74h], 1
mov	[esi+70h], eax
cmp	[esp+40h+var_8], esi
jnz	short loc_100809BE
			
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100809BA
push	edi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
			
mov	eax, [esi+70h]
cmp	eax, ebx
jz	short loc_100809EC
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100809EC
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
jmp	short loc_100809F2
			
mov	eax, [esi+70h]
mov	[ebp+0], eax
			
mov	eax, [esp+40h+var_8]
cmp	eax, ebx
jz	short loc_10080A23
push	edi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10080A1F
push	edi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebx
mov	ebx, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
mov	eax, 1
rep movsd
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_2C], offset aPkix_pl_cer_43 
mov	[esp+3Ch+var_C], 6
test	ebx, ebx
jnz	short loc_10080ACF
mov	ecx, [esp+3Ch+arg_C]
push	ecx
push	eax
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], eax
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_C]
test	edi, edi
jz	loc_10080B9D
push	ebp
push	800h
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_10080B25
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10080B13
mov	ecx, [esp+40h+var_C]
push	esi
push	2
push	ecx
push	ebp
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 338h
jmp	short loc_10080B9C
mov	edx, [esp+40h+arg_8]
mov	eax, [ebx]
push	edx
push	ebp
push	eax
call	CERT_GetConstrainedCertificateNames
push	esi
lea	ecx, [esp+50h+var_30]
push	ecx
push	edi
push	eax
call	sub_1008B4C0
add	esp, 1Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10080B5C
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 9Dh
jmp	short loc_10080B91
mov	edi, 1
cmp	[esp+40h+var_30], edi
jz	short loc_10080B91
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10080B85
mov	ecx, [esp+40h+var_C]
push	esi
push	2
push	ecx
push	0
push	77h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], edi
mov	[esp+40h+var_1C], 77h
			
push	0
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
pop	ebp
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_cert_m 
mov	[esp+3Ch+var_C], 6
test	edi, edi
jz	loc_10080CCF
mov	ebp, [esp+3Ch+arg_8]
test	ebp, ebp
jz	loc_10080CCF
mov	eax, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_C]
push	esi
test	eax, eax
jnz	short loc_10080C70
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10080C54
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	6
push	ecx
mov	[esp+4Ch+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	6
push	ecx
mov	[ebp+0], edi
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
lea	ecx, [esp+40h+var_30]
push	ecx
push	eax
push	edi
call	sub_1008C7C0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10080CAF
mov	edx, [eax+4]
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	6
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 0A4h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	6
push	ecx
mov	[ebp+0], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_C]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 20h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+20h+var_4], eax
mov	eax, [esp+20h+arg_0]
xor	edx, edx
push	esi
mov	esi, ecx
mov	[ebx], edx
test	eax, eax
jz	loc_10080DEE
mov	ecx, [eax]
mov	eax, [eax+4]
shrd	ecx, eax, 1
sar	eax, 1
test	ecx, ecx
jnz	short loc_10080D34
test	eax, eax
jz	short loc_10080D43
			
shrd	ecx, eax, 1
inc	edx
sar	eax, 1
test	ecx, ecx
jnz	short loc_10080D34
test	eax, eax
jnz	short loc_10080D34
cmp	[esp+24h+arg_4], 0
mov	esi, [esi]
jnz	short loc_10080D76
lea	eax, [esp+24h+var_1C]
push	eax
lea	ecx, [esp+28h+var_14]
push	ecx
push	edx
push	esi
call	sub_1000B720
mov	edx, [esp+34h+var_1C]
add	esp, 10h
mov	[ebx], edx
pop	esi
mov	ecx, [esp+20h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 20h
retn
lea	eax, [esp+24h+var_18]
push	eax
lea	ecx, [esp+28h+var_20]
push	ecx
push	edx
call	sub_1000A960
add	esp, 0Ch
test	eax, eax
jnz	short loc_10080DEE
lea	edx, [esp+24h+var_10]
push	edx
push	esi
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	short loc_10080DEE
mov	edx, [esp+24h+var_18]
mov	ecx, [esp+24h+var_8]
mov	esi, [esp+24h+var_10]
push	edi
mov	edi, [esp+28h+var_C]
test	edx, edx
jnz	short loc_10080DB8
mov	eax, esi
jmp	short loc_10080DCC
cmp	edx, 1
jnz	short loc_10080DC1
mov	eax, edi
jmp	short loc_10080DCC
xor	eax, eax
cmp	edx, 2
setnz	al
dec	eax
and	eax, ecx
			
test	eax, eax
jnz	short loc_10080DDB
cmp	edx, 3
jnz	short loc_10080DDB
or	ecx, edi
or	ecx, esi
mov	eax, ecx
			
mov	ecx, [esp+28h+var_20]
mov	edx, eax
and	edx, ecx
pop	edi
cmp	edx, ecx
jnz	short loc_10080E00
mov	dword ptr [ebx], 1
			
xor	eax, eax
pop	esi
mov	ecx, [esp+20h+var_4]
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 20h
retn
test	al, 1
jz	short loc_10080DEE
test	al, 0Ah
jnz	short loc_10080DEE
mov	ecx, [esp+24h+var_4]
pop	esi
xor	ecx, esp
or	eax, 0FFFFFFFFh
call	@__security_check_cookie@4 
add	esp, 20h
retn
align 10h
			
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_2C], offset aPkix_pl_cert_i 
mov	[esp+40h+var_C], 6
cmp	esi, ebp
jz	loc_10081041
cmp	[esp+40h+arg_8], ebp
jz	loc_10081041
mov	edi, [esp+40h+arg_C]
push	ebx
push	1
push	edi
lea	ebx, [esp+4Ch+var_34]
mov	ecx, esi
call	sub_10080D00
add	esp, 8
pop	ebx
test	eax, eax
jz	short loc_10080ED0
mov	eax, [esp+40h+arg_8]
mov	[eax], ebp
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10080EA7
mov	ecx, [esp+40h+var_C]
push	edi
push	2
push	ecx
push	ebp
push	98h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 98h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	eax, [esp+40h+arg_4]
cmp	eax, 2
jz	loc_1008101C
cmp	eax, 1
jnz	short loc_10080EEE
cmp	[esi+88h], ebp
jnz	loc_1008101C
cmp	edi, ebp
jz	loc_10080FFD
mov	eax, [esi+7Ch]
cmp	eax, ebp
jz	loc_10080FFD
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
call	sub_1007B550
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10080F40
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	6
push	eax
mov	[esp+50h+var_1C], 0DCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	edx, [esi+7Ch]
push	edi
lea	ecx, [esp+44h+var_34]
push	ecx
push	esi
push	edx
mov	[esp+50h+var_14], ebp
call	[esp+50h+var_30]
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10080FA1
mov	[esp+40h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_10081028
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_10080F9B
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
xor	eax, eax
mov	[esp+40h+var_28], eax
cmp	[esp+40h+var_18], ebp
jnz	short loc_10080FDE
cmp	eax, ebp
jnz	short loc_10080FDE
cmp	[esp+40h+var_14], ebp
jnz	short loc_10080FDE
cmp	[esp+40h+var_4], ebp
jnz	short loc_10080FDE
mov	eax, [esp+40h+var_34]
cmp	eax, ebp
jz	short loc_10080FDE
mov	ecx, [esp+40h+arg_8]
push	edi
push	1
mov	[ecx], eax
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	edx, [esp+40h+arg_8]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
mov	[edx], ebp
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_8]
push	edi
push	1
mov	[eax], ebp
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	ecx, [esi+88h]
mov	edx, [esp+40h+arg_8]
mov	[edx], ecx
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 38h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+38h+var_4], eax
mov	eax, [esp+38h+arg_0]
push	ebx
mov	ebx, [esp+3Ch+arg_4]
push	ebp
mov	ebp, [esp+40h+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_30]
rep movsd
mov	[esp+48h+var_38], eax
mov	[esp+48h+var_30], offset aPkix_pl_cer_10 
mov	[esp+48h+var_10], 6
test	eax, eax
jz	loc_10081158
test	ebx, ebx
jz	loc_10081158
xor	edx, edx
mov	[ebx], edx
test	ebp, ebp
jz	loc_1008114C
mov	eax, [ebp+4]
mov	ecx, [ebp+0]
shrd	ecx, eax, 1
sar	eax, 1
test	ecx, ecx
jnz	short loc_100810E2
test	eax, eax
jz	short loc_100810F1
			
shrd	ecx, eax, 1
inc	edx
sar	eax, 1
test	ecx, ecx
jnz	short loc_100810E2
test	eax, eax
jnz	short loc_100810E2
mov	eax, [esp+48h+var_38]
mov	eax, [eax]
lea	ecx, [esp+48h+var_38]
push	ecx
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	edx
push	eax
call	sub_1000B720
mov	edx, [esp+58h+var_38]
add	esp, 10h
mov	[ebx], edx
test	eax, eax
jz	short loc_1008114C
mov	dword ptr [ebx], 0
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008113C
mov	ecx, [esp+48h+var_10]
push	ebp
push	2
push	ecx
push	0
push	98h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_1C], 1
mov	[esp+48h+var_20], 98h
			
push	ebp
push	1
push	6
lea	edx, [esp+54h+var_30]
push	edx
jmp	short loc_10081172
			
push	ebp
push	1
push	1Fh
lea	eax, [esp+54h+var_30]
mov	[esp+54h+var_1C], 1
mov	[esp+54h+var_20], 2BCh
push	eax
call	sub_100781E0
mov	ecx, [esp+58h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 38h
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_cert_s 
mov	[esp+30h+var_C], 6
pop	esi
test	eax, eax
jnz	short loc_100811E9
mov	eax, [esp+2Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+34h+var_2C]
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [esp+2Ch+arg_4]
push	edx
push	1
mov	dword ptr [eax+88h], 1
lea	eax, [esp+34h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_cer_11 
mov	[esp+30h+var_C], 6
pop	esi
test	ecx, ecx
jz	short loc_10081266
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10081266
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+78h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_cer_79 
mov	[esp+30h+var_C], 6
pop	esi
lea	ecx, [esp+2Ch+var_2C]
test	eax, eax
jnz	short loc_100812E8
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [esp+2Ch+arg_4]
mov	[eax+78h], edx
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_pl_cer_80 
mov	[esp+38h+var_C], 6
test	ebx, ebx
jz	short loc_100813A8
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	short loc_100813A8
mov	esi, [esp+38h+arg_8]
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1008138C
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	6
push	ecx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
push	esi
push	1
lea	ecx, [esp+40h+var_2C]
push	6
push	ecx
mov	[ebx+7Ch], edi
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 38h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_0]
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_2C], offset aPkix_pl_cer_17 
mov	[esp+48h+var_C], 6
cmp	edi, ebx
jz	loc_10081646
cmp	[edi], ebx
jz	loc_10081646
mov	ebp, [esp+48h+arg_4]
cmp	ebp, ebx
jz	loc_10081646
mov	esi, [esp+48h+arg_8]
cmp	[edi+80h], ebx
jnz	loc_1008159C
push	esi
push	edi
call	sub_10095E70
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10081477
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_1C], 2D2h
jmp	loc_100815D6
mov	[esp+48h+var_8], edi
cmp	[edi+80h], ebx
jnz	loc_10081573
push	ebx
push	ebx
push	ebx
call	SECITEM_AllocItem_Util
add	esp, 0Ch
mov	[esp+48h+var_38], eax
cmp	eax, ebx
jnz	short loc_100814CF
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_100814BA
mov	ecx, [esp+48h+var_C]
push	esi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 338h
jmp	loc_100815D6
mov	edx, [edi]
push	eax
push	5Dh
push	edx
call	CERT_FindCertExtension
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jz	loc_100815D6
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+48h+var_30], eax
cmp	eax, ebx
jnz	short loc_10081530
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_100814BA
mov	ecx, [esp+48h+var_C]
push	esi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 338h
jmp	loc_100815D6
mov	edx, [esp+48h+var_38]
push	edx
push	eax
call	CERT_DecodeAuthInfoAccessExtension
push	esi
lea	ecx, [esp+54h+var_34]
push	ecx
push	eax
call	sub_1008A820
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10081563
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 231h
jmp	short loc_100815D6
mov	eax, [esp+48h+var_34]
mov	[edi+80h], eax
cmp	[esp+48h+var_8], edi
jnz	short loc_1008159C
push	esi
push	edi
call	sub_10095F10
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10081598
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_8], ebx
			
mov	eax, [edi+80h]
cmp	eax, ebx
jz	short loc_100815CD
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_100815CD
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
jmp	short loc_100815D6
			
mov	eax, [edi+80h]
mov	[ebp+0], eax
			
mov	eax, [esp+48h+var_8]
cmp	eax, ebx
jz	short loc_10081607
push	esi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10081603
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_8], ebx
mov	eax, [esp+48h+var_30]
cmp	eax, ebx
jz	short loc_10081619
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_1008162C
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	eax, [esp+48h+arg_8]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 40h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	edi, [esp+50h+arg_0]
xor	ebx, ebx
mov	[esp+50h+var_38], 9
mov	[esp+50h+var_34], offset dword_100ACD08
mov	[esp+50h+var_30], 8
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_2C], offset aPkix_pl_cer_46 
mov	[esp+50h+var_C], 6
cmp	edi, ebx
jz	loc_100818FD
cmp	[edi], ebx
jz	loc_100818FD
mov	ebp, [esp+50h+arg_4]
cmp	ebp, ebx
jz	loc_100818FD
mov	esi, [esp+50h+arg_8]
cmp	[edi+84h], ebx
jnz	loc_10081853
push	esi
push	edi
call	sub_10095E70
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1008172B
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_1C], 2D2h
jmp	loc_1008188D
mov	[esp+50h+var_8], edi
cmp	[edi+84h], ebx
jnz	loc_1008182A
push	ebx
push	ebx
push	ebx
call	SECITEM_AllocItem_Util
add	esp, 0Ch
mov	[esp+50h+var_40], eax
cmp	eax, ebx
jnz	short loc_10081783
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008176E
mov	ecx, [esp+50h+var_C]
push	esi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 338h
jmp	loc_1008188D
push	eax
mov	eax, [edi]
lea	edx, [esp+54h+var_38]
push	edx
push	eax
call	sub_1003E7B0
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jz	loc_1008188D
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+50h+var_3C], eax
cmp	eax, ebx
jnz	short loc_100817E7
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008176E
mov	ecx, [esp+50h+var_C]
push	esi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 338h
jmp	loc_1008188D
mov	edx, [esp+50h+var_40]
push	edx
push	eax
call	CERT_DecodeAuthInfoAccessExtension
push	esi
lea	ecx, [esp+5Ch+arg_0]
push	ecx
push	eax
call	sub_1008A820
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1008181A
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 231h
jmp	short loc_1008188D
mov	eax, [esp+50h+arg_0]
mov	[edi+84h], eax
cmp	[esp+50h+var_8], edi
jnz	short loc_10081853
push	esi
push	edi
call	sub_10095F10
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1008184F
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_8], ebx
			
mov	eax, [edi+84h]
cmp	eax, ebx
jz	short loc_10081884
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_10081884
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
jmp	short loc_1008188D
			
mov	eax, [edi+84h]
mov	[ebp+0], eax
			
mov	eax, [esp+50h+var_8]
cmp	eax, ebx
jz	short loc_100818BE
push	esi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_100818BA
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_8], ebx
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_100818D0
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, [esp+50h+var_40]
cmp	eax, ebx
jz	short loc_100818E3
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
push	esi
push	1
lea	edx, [esp+58h+var_2C]
push	6
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	eax, [esp+50h+arg_8]
push	eax
push	1
lea	ecx, [esp+58h+var_2C]
push	1Fh
push	ecx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
			
sub	esp, 34h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_34], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cer_44 
mov	[esp+40h+var_C], 6
cmp	edi, ebx
jz	loc_10081B89
cmp	[edi], ebx
jz	loc_10081B89
cmp	[esp+40h+arg_4], ebx
jz	loc_10081B89
mov	esi, [esp+40h+arg_8]
cmp	[edi+8Ch], ebx
push	ebp
lea	ebp, [edi+8Ch]
jnz	loc_10081AD1
push	esi
push	edi
call	sub_10095E70
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_100819C7
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_1C], 2D2h
jmp	loc_10081AD1
mov	[esp+44h+var_8], edi
cmp	[ebp+0], ebx
jnz	loc_10081AD1
push	esi
push	ebp
call	sub_100755D0
add	esp, 8
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_100819F6
mov	ecx, [eax+4]
mov	[esp+44h+var_1C], 27Dh
jmp	loc_10081ACD
mov	edx, [edi]
push	edx
call	sub_10009F00
add	esp, 4
mov	[esp+44h+arg_0], eax
cmp	eax, ebx
jz	loc_10081AD1
mov	eax, [eax]
cmp	eax, ebx
jz	loc_10081AD1
cmp	[eax], ebx
jz	loc_10081AD1
xor	ecx, ecx
mov	eax, [ecx+eax]
push	esi
lea	edx, [esp+48h+var_34]
push	edx
mov	edx, [edi]
add	edx, 0A8h
push	edx
push	eax
call	sub_10086C80
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	short loc_10081AB1
mov	ecx, [esp+44h+var_34]
mov	edx, [ebp+0]
push	esi
push	ecx
push	ebx
push	edx
call	sub_10075B40
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	short loc_10081AC2
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_10081A90
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10081A8C
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_34], ebx
mov	eax, [esp+44h+var_30]
mov	edx, [esp+44h+arg_0]
inc	eax
lea	ecx, ds:0[eax*4]
mov	[esp+44h+var_30], eax
mov	eax, [edx]
cmp	[ecx+eax], ebx
jnz	loc_10081A21
jmp	short loc_10081AD1
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 161h
jmp	short loc_10081AD1
mov	ecx, [eax+4]
mov	[esp+44h+var_1C], 278h
mov	[esp+44h+var_10], ecx
			
mov	eax, [ebp+0]
cmp	eax, ebx
jz	short loc_10081B04
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10081B04
push	esi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
mov	eax, [ebp+0]
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
cmp	eax, ebx
jnz	short loc_10081AD8
			
mov	eax, [ebp+0]
mov	ecx, [esp+44h+arg_4]
mov	[ecx], eax
mov	eax, [esp+44h+var_8]
pop	ebp
cmp	eax, ebx
jz	short loc_10081B3F
push	esi
push	eax
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10081B3B
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
mov	eax, [esp+40h+var_34]
cmp	eax, ebx
jz	short loc_10081B70
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10081B6C
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_34], ebx
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	6
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_cer_12 
mov	[esp+34h+var_C], 6
test	eax, eax
jz	short loc_10081C1B
mov	esi, [esp+34h+arg_4]
test	esi, esi
jz	short loc_10081C1B
mov	eax, [eax]
push	eax
call	CERT_DupCertificate
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	6
push	edx
mov	[esi], eax
call	sub_100781E0
add	esp, 14h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 0C4h
push	ebx
xor	ebx, ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+0D0h+var_C4]
rep movsd
mov	edi, [esp+0D0h+arg_0]
mov	[esp+0D0h+var_38], ebx
mov	[esp+0D0h+var_6C], ebx
mov	[esp+0D0h+var_8], ebx
mov	[esp+0D0h+var_2C], ebx
mov	[esp+0D0h+var_1C], ebx
mov	[esp+0D0h+var_70], ebx
mov	[esp+0D0h+var_58], ebx
mov	[esp+0D0h+var_98], ebx
mov	[esp+0D0h+var_3C], ebx
mov	[esp+0D0h+var_50], ebx
mov	[esp+0D0h+var_60], ebx
mov	[esp+0D0h+var_64], ebx
mov	[esp+0D0h+var_48], ebx
mov	[esp+0D0h+var_78], ebx
mov	[esp+0D0h+var_30], ebx
mov	[esp+0D0h+var_88], ebx
mov	[esp+0D0h+var_18], ebx
mov	[esp+0D0h+var_40], ebx
mov	[esp+0D0h+var_28], ebx
mov	[esp+0D0h+var_68], ebx
mov	[esp+0D0h+var_20], ebx
mov	[esp+0D0h+var_80], ebx
mov	[esp+0D0h+var_34], ebx
mov	[esp+0D0h+var_94], ebx
mov	[esp+0D0h+var_24], ebx
mov	[esp+0D0h+var_90], ebx
mov	[esp+0D0h+var_5C], ebx
mov	[esp+0D0h+var_8C], ebx
mov	[esp+0D0h+var_10], ebx
mov	[esp+0D0h+var_14], ebx
mov	[esp+0D0h+var_C], ebx
mov	[esp+0D0h+var_54], ebx
mov	[esp+0D0h+var_84], ebx
mov	[esp+0D0h+var_4C], ebx
mov	[esp+0D0h+var_7C], ebx
mov	[esp+0D0h+var_44], ebx
mov	[esp+0D0h+var_74], ebx
mov	[esp+0D0h+var_C4], offset aPkix_pl_cer_45 
mov	[esp+0D0h+var_A4], 6
cmp	edi, ebx
jz	loc_10082DB9
cmp	[edi], ebx
jz	loc_10082DB9
cmp	[esp+0D0h+arg_8], ebx
jz	loc_10082DB9
push	ebp
mov	ebp, [esp+0D4h+arg_4]
mov	eax, offset aIssuerSSubject 
cmp	ebp, ebx
jnz	short loc_10081D82
mov	eax, offset aVersionVDSeria 
mov	esi, [esp+0D4h+arg_C]
push	esi		
lea	ecx, [esp+0D8h+var_6C]
push	ecx		
push	ebx		
push	eax		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081DB6
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], 3CFh
jmp	loc_10082777
push	esi
lea	eax, [esp+0D8h+var_1C]
push	eax
push	edi
call	sub_1007DE20
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081DE4
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 83h
jmp	loc_10082777
mov	eax, [esp+0D4h+var_1C]
push	esi
lea	edx, [esp+0D8h+var_70]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081E16
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 436h
jmp	loc_10082777
push	esi
lea	edx, [esp+0D8h+var_58]
push	edx
push	edi
call	sub_1007DC60
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081E44
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], 8Dh
jmp	loc_10082777
push	esi		
cmp	[esp+0D8h+var_58], ebx
jz	short loc_10081E6A
mov	edx, [esp+0D8h+var_58]
lea	ecx, [esp+0D8h+var_98]
push	ecx
push	edx
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 436h
jmp	short loc_10081E83
lea	eax, [esp+0D8h+var_98]
push	eax		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081E9B
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_10082777
cmp	ebp, ebx
jz	short loc_10081EF0
mov	eax, [esp+0D4h+var_98]
mov	ecx, [esp+0D4h+var_70]
mov	edx, [esp+0D4h+var_6C]
push	eax
push	ecx
push	edx
lea	eax, [esp+0E0h+var_38]
push	esi
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081EDB
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 3CDh
jmp	loc_10082777
mov	edx, [esp+0D4h+var_38]
mov	eax, [esp+0D4h+arg_8]
mov	[eax], edx
jmp	loc_10082777
push	esi
lea	ecx, [esp+0D8h+var_4]
push	ecx
push	edi
call	sub_1007D9B0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081F1E
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], 93h
jmp	loc_10082777
push	esi
lea	eax, [esp+0D8h+var_8]
push	eax
push	edi
call	sub_1007DAA0
mov	ebp, [esp+0E0h+var_8]
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081F53
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 8Ah
jmp	loc_1008274E
push	esi
lea	edx, [esp+0D8h+var_2C]
push	edx
push	ebp
call	sub_100962D0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081F81
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], 22h
jmp	loc_1008274E
mov	edx, [edi]
push	esi
lea	ecx, [esp+0D8h+var_3C]
push	ecx
add	edx, 0B4h
push	edx
call	sub_10088550
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081FB7
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], 186h
jmp	loc_1008274E
mov	edx, [edi]
push	esi
lea	ecx, [esp+0D8h+var_50]
push	ecx
add	edx, 0C0h
push	edx
call	sub_10088550
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10081FED
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], 186h
jmp	loc_1008274E
push	esi
lea	ecx, [esp+0D8h+var_60]
push	ecx
push	edi
call	sub_1007DFE0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082018
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], 8Ch
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_60], ebx
jz	short loc_10082038
mov	ecx, [esp+0D8h+var_60]
lea	eax, [esp+0D8h+var_64]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10082051
lea	edx, [esp+0D8h+var_64]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082069
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	ecx, [esp+0D8h+var_48]
push	ecx
push	edi
call	sub_1007ECB0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082097
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], 7Ah
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_48], ebx
jz	short loc_100820BD
mov	ecx, [esp+0D8h+var_48]
lea	eax, [esp+0D8h+var_78]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 3Dh
jmp	short loc_100820D6
lea	edx, [esp+0D8h+var_78]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_100820EE
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	ecx, [esp+0D8h+var_30]
push	ecx
push	edi
call	sub_1007EF10
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_1008211C
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], 8Fh
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_30], ebx
jz	short loc_10082142
mov	ecx, [esp+0D8h+var_30]
lea	eax, [esp+0D8h+var_88]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 3Dh
jmp	short loc_1008215B
lea	edx, [esp+0D8h+var_88]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082173
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	ecx, [esp+0D8h+var_18]
push	ecx
push	edi
call	sub_1007E7B0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_100821A1
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], 91h
jmp	loc_1008274E
mov	ecx, [esp+0D4h+var_18]
push	esi
lea	eax, [esp+0D8h+var_40]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_100821D6
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], 390h
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_28]
push	eax
push	edi
call	sub_1007EB00
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082204
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 7Fh
jmp	loc_1008274E
mov	eax, [esp+0D4h+var_28]
push	esi		
cmp	eax, ebx
jz	short loc_10082225
lea	edx, [esp+0D8h+var_68]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_1008223E
lea	eax, [esp+0D8h+var_68]
push	eax		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082256
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_20]
push	eax
push	edi
call	sub_1007F160
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082284
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 81h
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_20], ebx
jz	short loc_100822AA
mov	eax, [esp+0D8h+var_20]
lea	edx, [esp+0D8h+var_80]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_100822C3
lea	ecx, [esp+0D8h+var_80]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_100822DB
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_34]
push	eax
push	edi
call	sub_1007F4F0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082309
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 7Ch
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_34], ebx
jz	short loc_1008232F
mov	eax, [esp+0D8h+var_34]
lea	edx, [esp+0D8h+var_94]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 50h
jmp	short loc_10082348
lea	ecx, [esp+0D8h+var_94]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082360
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_24]
push	eax
push	edi
call	sub_1007F720
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_1008238E
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 86h
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_24], ebx
jz	short loc_100823B4
mov	eax, [esp+0D8h+var_24]
lea	edx, [esp+0D8h+var_90]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_100823CD
lea	ecx, [esp+0D8h+var_90]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_100823E5
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_5C]
push	eax
push	edi
call	sub_1007F910
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082410
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 88h
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_5C], ebx
jz	short loc_10082430
mov	eax, [esp+0D8h+var_5C]
lea	edx, [esp+0D8h+var_8C]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10082449
lea	ecx, [esp+0D8h+var_8C]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082461
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_10]
push	eax
push	edi
call	sub_1007FB00
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_1008248F
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 89h
jmp	loc_1008274E
push	esi
lea	edx, [esp+0D8h+var_14]
push	edx
push	edi
call	sub_1007FC90
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_100824BD
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], 87h
jmp	loc_1008274E
push	esi
lea	ecx, [esp+0D8h+var_C]
push	ecx
push	edi
call	sub_1007FE20
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_100824EB
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], 82h
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_54]
push	eax
push	edi
call	sub_100808B0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082519
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 84h
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_54], ebx
jz	short loc_1008253F
mov	eax, [esp+0D8h+var_54]
lea	edx, [esp+0D8h+var_84]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10082558
lea	ecx, [esp+0D8h+var_84]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082570
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_4C]
push	eax
push	edi
call	sub_100813E0
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_1008259E
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 79h
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_4C], ebx
jz	short loc_100825C4
mov	eax, [esp+0D8h+var_4C]
lea	edx, [esp+0D8h+var_7C]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_100825DD
lea	ecx, [esp+0D8h+var_7C]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_100825F5
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
push	esi
lea	eax, [esp+0D8h+var_44]
push	eax
push	edi
call	sub_10081680
add	esp, 0Ch
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_10082623
mov	ecx, [eax+4]
mov	[esp+0D4h+var_A8], ecx
mov	[esp+0D4h+var_B4], 8Eh
jmp	loc_1008274E
push	esi		
cmp	[esp+0D8h+var_44], ebx
jz	short loc_10082649
mov	eax, [esp+0D8h+var_44]
lea	edx, [esp+0D8h+var_74]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10082662
lea	ecx, [esp+0D8h+var_74]
push	ecx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_1008267A
mov	edx, [eax+4]
mov	[esp+0D4h+var_A8], edx
mov	[esp+0D4h+var_B4], ecx
jmp	loc_1008274E
mov	eax, [edi+78h]
mov	ecx, [esp+0D4h+var_74]
push	eax
mov	edx, [esp+0D8h+var_7C]
mov	eax, [esp+0D8h+var_84]
push	ecx
mov	ecx, [esp+0DCh+var_C]
push	edx
mov	edx, [esp+0E0h+var_14]
push	eax
mov	eax, [esp+0E4h+var_10]
push	ecx
mov	ecx, [esp+0E8h+var_8C]
push	edx
mov	edx, [esp+0ECh+var_90]
push	eax
mov	eax, [esp+0F0h+var_94]
push	ecx
mov	ecx, [esp+0F4h+var_80]
push	edx
mov	edx, [esp+0F8h+var_68]
push	eax
mov	eax, [esp+0FCh+var_40]
push	ecx
mov	ecx, [esp+100h+var_88]
push	edx
mov	edx, [esp+104h+var_78]
push	eax
mov	eax, [esp+108h+var_64]
push	ecx
mov	ecx, [esp+10Ch+var_50]
push	edx
mov	edx, [esp+110h+var_3C]
push	eax
mov	eax, [esp+114h+var_98]
push	ecx
mov	ecx, [esp+118h+var_70]
push	edx
mov	edx, [esp+11Ch+var_2C]
push	eax
mov	eax, [esp+120h+var_4]
push	ecx
mov	ecx, [esp+124h+var_6C]
push	edx
inc	eax
push	eax
push	ecx
lea	edx, [esp+130h+var_38]
push	esi
push	edx
call	sub_10098590
add	esp, 64h
mov	[esp+0D4h+var_C0], eax
cmp	eax, ebx
jz	short loc_1008273E
mov	eax, [eax+4]
mov	[esp+0D4h+var_A8], eax
mov	[esp+0D4h+var_B4], 3CDh
jmp	short loc_1008274E
mov	ecx, [esp+0D4h+var_38]
mov	edx, [esp+0D4h+arg_8]
mov	[edx], ecx
			
cmp	ebp, ebx
jz	short loc_10082777
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+0D4h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082777
push	esi
push	eax
lea	eax, [esp+0DCh+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D4h+var_BC], ebx
			
mov	eax, [esp+0D4h+var_2C]
pop	ebp
cmp	eax, ebx
jz	short loc_100827AF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_100827A8
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_2C], ebx
mov	eax, [esp+0D0h+var_1C]
cmp	eax, ebx
jz	short loc_100827DF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_100827DF
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_70]
cmp	eax, ebx
jz	short loc_10082810
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_1008280C
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_70], ebx
mov	eax, [esp+0D0h+var_58]
cmp	eax, ebx
jz	short loc_1008283D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_1008283D
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_98]
cmp	eax, ebx
jz	short loc_1008286E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_1008286A
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_98], ebx
mov	eax, [esp+0D0h+var_3C]
cmp	eax, ebx
jz	short loc_100828A5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_1008289E
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_3C], ebx
mov	eax, [esp+0D0h+var_50]
cmp	eax, ebx
jz	short loc_100828DC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_100828D5
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_50], ebx
mov	eax, [esp+0D0h+var_60]
cmp	eax, ebx
jz	short loc_10082909
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082909
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_64]
cmp	eax, ebx
jz	short loc_1008293A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082936
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_64], ebx
mov	eax, [esp+0D0h+var_48]
cmp	eax, ebx
jz	short loc_1008296A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_1008296A
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_78]
cmp	eax, ebx
jz	short loc_1008299B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082997
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_78], ebx
mov	eax, [esp+0D0h+var_30]
cmp	eax, ebx
jz	short loc_100829CB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_100829CB
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_88]
cmp	eax, ebx
jz	short loc_100829FC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_100829F8
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_88], ebx
mov	eax, [esp+0D0h+var_18]
cmp	eax, ebx
jz	short loc_10082A2C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082A2C
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_40]
cmp	eax, ebx
jz	short loc_10082A63
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082A5C
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_40], ebx
mov	eax, [esp+0D0h+var_28]
cmp	eax, ebx
jz	short loc_10082A9A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082A93
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_28], ebx
mov	eax, [esp+0D0h+var_68]
cmp	eax, ebx
jz	short loc_10082ACB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082AC7
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_68], ebx
mov	eax, [esp+0D0h+var_20]
cmp	eax, ebx
jz	short loc_10082AFB
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082AFB
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_80]
cmp	eax, ebx
jz	short loc_10082B2C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082B28
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_80], ebx
mov	eax, [esp+0D0h+var_34]
cmp	eax, ebx
jz	short loc_10082B5C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082B5C
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_94]
cmp	eax, ebx
jz	short loc_10082B8D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082B89
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_94], ebx
mov	eax, [esp+0D0h+var_24]
cmp	eax, ebx
jz	short loc_10082BBD
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082BBD
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_90]
cmp	eax, ebx
jz	short loc_10082BEE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082BEA
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_90], ebx
mov	eax, [esp+0D0h+var_5C]
cmp	eax, ebx
jz	short loc_10082C1B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082C1B
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_8C]
cmp	eax, ebx
jz	short loc_10082C4C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082C48
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_8C], ebx
mov	eax, [esp+0D0h+var_54]
cmp	eax, ebx
jz	short loc_10082C79
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082C79
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_84]
cmp	eax, ebx
jz	short loc_10082CAA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082CA6
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_84], ebx
mov	eax, [esp+0D0h+var_4C]
cmp	eax, ebx
jz	short loc_10082CDA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082CDA
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_7C]
cmp	eax, ebx
jz	short loc_10082D0B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082D07
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_7C], ebx
mov	eax, [esp+0D0h+var_44]
cmp	eax, ebx
jz	short loc_10082D3B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082D3B
push	esi
push	eax
lea	eax, [esp+0D8h+var_C4]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
			
mov	eax, [esp+0D0h+var_74]
cmp	eax, ebx
jz	short loc_10082D6C
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082D68
push	esi
push	eax
lea	ecx, [esp+0D8h+var_C4]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_74], ebx
mov	eax, [esp+0D0h+var_6C]
cmp	eax, ebx
jz	short loc_10082D9D
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+0D0h+var_BC], eax
cmp	eax, ebx
jz	short loc_10082D99
push	esi
push	eax
lea	edx, [esp+0D8h+var_C4]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+0D0h+var_BC], ebx
mov	[esp+0D0h+var_6C], ebx
push	esi
push	1
lea	eax, [esp+0D8h+var_C4]
push	6
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 0C4h
retn
			
mov	ecx, [esp+0D0h+arg_C]
push	ecx
push	1
lea	edx, [esp+0D8h+var_C4]
push	1Fh
push	edx
mov	[esp+0E0h+var_B0], 1
mov	[esp+0E0h+var_B4], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 0C4h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_cert_t 
mov	[esp+3Ch+var_C], 6
test	esi, esi
jz	loc_10082ED6
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_10082ED6
mov	edi, [esp+3Ch+arg_8]
push	edi
push	5
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10082E76
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	6
push	ecx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2E3h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
push	edi
lea	ecx, [esp+40h+var_30]
push	ecx
push	0
push	esi
call	sub_10081C50
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10082EB7
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	6
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 0DFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	6
push	ecx
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB2D4
push	1
mov	[esp+60h+var_50], offset aCert 
mov	[esp+60h+var_48], 90h
mov	[esp+60h+var_44], offset sub_1007CCF0
mov	[esp+60h+var_40], offset sub_1007D240
mov	[esp+60h+var_3C], offset sub_1007D120
mov	[esp+60h+var_38], offset sub_10082DF0
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	6
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_cert_r 
mov	[esp+68h+var_C], 6
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cer_47 
mov	[esp+40h+var_C], 0Ch
cmp	edi, ebx
jz	loc_100830CD
mov	ebp, [esp+40h+arg_8]
cmp	ebp, ebx
jz	loc_100830CD
mov	esi, [esp+40h+arg_C]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	8
push	0Bh
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10083024
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 128h
jmp	short loc_10083049
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10083094
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_1008307A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10083076
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	0Ch
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+40h+var_30]
mov	[eax], edi
mov	edi, [esp+40h+arg_4]
cmp	edi, ebx
jz	short loc_100830BD
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100830BD
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	short loc_1008303D
			
mov	edx, [esp+40h+var_30]
mov	[edx+4], edi
mov	eax, [esp+40h+var_30]
mov	[ebp+0], eax
jmp	short loc_10083076
			
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_cer_48 
mov	[esp+34h+var_C], 0Ch
test	edi, edi
jnz	short loc_10083159
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	0Bh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10083182
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2E7h
jmp	short loc_100831EE
mov	eax, [edi]
test	eax, eax
jz	short loc_100831B7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100831B1
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
mov	eax, [edi+4]
test	eax, eax
jz	short loc_100831EE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100831E7
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	0Ch
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_2C], offset aPkix_pl_cer_49 
mov	[esp+4Ch+var_C], 0Ch
cmp	edi, ebx
jz	loc_1008342F
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_1008342F
mov	esi, [esp+4Ch+arg_8]
push	esi
push	0Bh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1008328D
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2E7h
jmp	loc_10083382
mov	eax, [edi]
push	esi
cmp	eax, ebx
jnz	short loc_100832A2
push	1
push	1Fh
lea	ecx, [esp+58h+var_2C]
push	ecx
jmp	loc_1008343D
lea	edx, [esp+50h+var_38]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100832CC
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 335h
jmp	loc_10083382
mov	edi, [edi+4]
push	esi		
cmp	edi, ebx
jz	short loc_100832E9
lea	ecx, [esp+50h+var_3C]
push	ecx
push	edi
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10083302
lea	edx, [esp+50h+var_3C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10083317
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], ecx
jmp	short loc_10083382
push	esi		
lea	ecx, [esp+50h+var_34]
push	ecx		
push	ebx		
push	offset aSS_5	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10083345
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 1B4h
jmp	short loc_10083382
mov	eax, [esp+4Ch+var_3C]
mov	ecx, [esp+4Ch+var_38]
mov	edx, [esp+4Ch+var_34]
push	eax
push	ecx
push	edx
lea	eax, [esp+58h+var_30]
push	esi
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1008337B
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 1B3h
jmp	short loc_10083382
mov	edx, [esp+4Ch+var_30]
mov	[ebp+0], edx
			
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_100833B3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100833AF
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_100833E4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100833E0
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_10083415
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10083411
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
push	esi
push	1
lea	eax, [esp+54h+var_2C]
push	0Ch
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	ecx, [esp+4Ch+arg_8]
push	ecx
push	1
push	1Fh
lea	edx, [esp+58h+var_2C]
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_2C], offset aPkix_pl_cer_50 
mov	[esp+40h+var_C], 0Ch
test	esi, esi
jz	loc_100835B0
mov	ebp, [esp+40h+arg_4]
test	ebp, ebp
jz	loc_100835B0
mov	edi, [esp+40h+arg_8]
push	edi
push	0Bh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100834EE
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	0Ch
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2E7h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	eax, [esi]
push	edi
test	eax, eax
jz	loc_100835B5
lea	edx, [esp+44h+var_30]
push	edx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10083537
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	0Ch
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 1AFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	esi, [esi+4]
test	esi, esi
jz	short loc_1008357D
push	edi
lea	ecx, [esp+44h+var_34]
push	ecx
push	esi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10083585
mov	edx, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], edx
lea	edx, [esp+48h+var_2C]
push	0Ch
push	edx
mov	[esp+50h+var_1C], 1ADh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	[esp+40h+var_34], 0
mov	eax, [esp+40h+var_30]
mov	ecx, eax
shl	ecx, 5
push	edi
sub	ecx, eax
add	ecx, [esp+44h+var_34]
push	1
lea	edx, [esp+48h+var_2C]
push	0Ch
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 34h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_2C], offset aPkix_pl_cer_51 
mov	[esp+40h+var_C], 0Ch
test	esi, esi
jz	loc_10083818
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_10083818
cmp	[esp+40h+arg_8], 0
jz	loc_10083818
mov	edi, [esp+40h+arg_C]
push	edi
push	0Bh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10083679
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	0Ch
push	eax
mov	[esp+50h+var_1C], 1DEh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
cmp	esi, ebx
jnz	short loc_100836A0
mov	ecx, [esp+40h+arg_8]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	0Ch
push	eax
mov	dword ptr [ecx], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100836DF
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	0Ch
push	eax
mov	[esp+50h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
cmp	[esp+40h+var_30], 0Bh
jz	short loc_10083709
mov	ecx, [esp+40h+arg_8]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	0Ch
push	eax
mov	dword ptr [ecx], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	ecx, [esi]
test	ecx, ecx
jz	loc_100837EF
mov	eax, [ebx]
test	eax, eax
jz	loc_100837EF
push	edi
lea	edx, [esp+44h+var_34]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008375D
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	0Ch
push	eax
mov	[esp+50h+var_1C], 330h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
cmp	[esp+40h+var_34], 0
jz	short loc_100837CC
mov	eax, [esi+4]
test	eax, eax
jz	short loc_100837B6
mov	ecx, [ebx+4]
test	ecx, ecx
jz	short loc_100837B2
push	edi
lea	edx, [esp+44h+var_34]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100837CC
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	0Ch
push	eax
mov	[esp+50h+var_1C], 281h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
test	eax, eax
jnz	short loc_100837C4
cmp	dword ptr [ebx+4], 0
mov	[esp+40h+var_34], 1
jz	short loc_100837CC
mov	[esp+40h+var_34], 0
			
mov	ecx, [esp+40h+arg_8]
mov	edx, [esp+40h+var_34]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	0Ch
push	eax
mov	[ecx], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	edx, [esp+40h+arg_C]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB3AC
push	1
mov	[esp+60h+var_50], offset aCertpolicyinfo 
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_10083100
mov	[esp+60h+var_40], offset sub_100835E0
mov	[esp+60h+var_3C], offset sub_10083460
mov	[esp+60h+var_38], offset sub_10083210
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	0Ch
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_certpo 
mov	[esp+68h+var_C], 0Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_cer_52 
mov	[esp+38h+var_C], 0Ch
test	edi, edi
jz	short loc_1008398F
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1008398F
mov	eax, [edi]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10083972
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10083972
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Ch
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Ch
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_cer_53 
mov	[esp+38h+var_C], 0Ch
test	edi, edi
jz	short loc_10083A61
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_10083A61
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10083A43
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10083A43
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Ch
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+4]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Ch
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cer_54 
mov	[esp+40h+var_C], 0Dh
cmp	edi, ebx
jz	loc_10083BB1
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10083BB1
cmp	[esp+40h+arg_8], ebx
jz	loc_10083BB1
mov	esi, [esp+40h+arg_C]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	8
push	0Ch
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10083B0E
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 129h
jmp	short loc_10083B33
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	esi
cmp	eax, ebx
jz	short loc_10083B7E
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10083B64
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10083B60
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	0Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+44h+var_30]
push	ebp
mov	[eax], edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10083B9E
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	short loc_10083B27
mov	edx, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_8]
mov	[edx+4], ebp
mov	eax, [esp+40h+var_30]
mov	[ecx], eax
jmp	short loc_10083B60
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_cer_55 
mov	[esp+34h+var_C], 0Dh
test	edi, edi
jnz	short loc_10083C39
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	0Ch
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10083C62
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2E8h
jmp	short loc_10083CCE
mov	eax, [edi]
test	eax, eax
jz	short loc_10083C97
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10083C91
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
mov	eax, [edi+4]
test	eax, eax
jz	short loc_10083CCE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10083CC7
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	0Dh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_2C], offset aPkix_pl_cer_56 
mov	[esp+4Ch+var_C], 0Dh
cmp	edi, ebx
jz	loc_10083F1D
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_10083F1D
mov	esi, [esp+4Ch+arg_8]
push	esi
push	0Ch
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10083D6D
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2E8h
jmp	loc_10083E70
mov	eax, [edi]
push	esi		
cmp	eax, ebx
jz	short loc_10083D89
lea	ecx, [esp+50h+var_3C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10083DA2
lea	edx, [esp+50h+var_3C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10083DBA
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], ecx
jmp	loc_10083E70
mov	eax, [edi+4]
push	esi		
cmp	eax, ebx
jz	short loc_10083DD7
lea	ecx, [esp+50h+var_38]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 316h
jmp	short loc_10083DF0
lea	edx, [esp+50h+var_38]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10083E05
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], ecx
jmp	short loc_10083E70
push	esi		
lea	ecx, [esp+50h+var_34]
push	ecx		
push	ebx		
push	offset aSS_6	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10083E33
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 1B4h
jmp	short loc_10083E70
mov	eax, [esp+4Ch+var_38]
mov	ecx, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+var_34]
push	eax
push	ecx
push	edx
lea	eax, [esp+58h+var_30]
push	esi
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10083E69
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 1B3h
jmp	short loc_10083E70
mov	edx, [esp+4Ch+var_30]
mov	[ebp+0], edx
			
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_10083EA1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10083E9D
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_10083ED2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10083ECE
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_10083F03
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10083EFF
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
push	esi
push	1
lea	eax, [esp+54h+var_2C]
push	0Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	ecx, [esp+4Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_0]
xor	ebx, ebx
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_2C], offset aPkix_pl_cer_57 
mov	[esp+44h+var_C], 0Dh
cmp	esi, ebx
jz	loc_1008409B
mov	ebp, [esp+44h+arg_4]
cmp	ebp, ebx
jz	loc_1008409B
mov	edi, [esp+44h+arg_8]
push	edi
push	0Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10083FDA
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+4Ch+var_2C]
push	0Dh
push	edx
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 2E8h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_10084020
push	edi
lea	ecx, [esp+48h+var_34]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_10084024
mov	edx, [eax+4]
push	edi
push	1
mov	[esp+4Ch+var_10], edx
lea	edx, [esp+4Ch+var_2C]
push	0Dh
push	edx
mov	[esp+54h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
mov	[esp+44h+var_34], ebx
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_1008406B
push	edi
lea	ecx, [esp+48h+var_30]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_1008406F
mov	edx, [eax+4]
push	edi
push	1
mov	[esp+4Ch+var_10], edx
lea	edx, [esp+4Ch+var_2C]
push	0Dh
push	edx
mov	[esp+54h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
mov	[esp+44h+var_30], ebx
mov	eax, [esp+44h+var_34]
mov	ecx, eax
shl	ecx, 5
push	edi
sub	ecx, eax
add	ecx, [esp+48h+var_30]
push	1
lea	edx, [esp+4Ch+var_2C]
push	0Dh
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_2C], offset aPkix_pl_cer_58 
mov	[esp+40h+var_C], 0Dh
cmp	esi, ebp
jz	loc_1008425C
mov	edi, [esp+40h+arg_4]
cmp	edi, ebp
jz	loc_1008425C
cmp	[esp+40h+arg_8], ebp
jz	loc_1008425C
push	ebx
mov	ebx, [esp+44h+arg_C]
push	ebx
push	0Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1008414F
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 1DFh
jmp	loc_10084242
cmp	esi, edi
jnz	short loc_10084162
mov	ecx, [esp+44h+arg_8]
mov	dword ptr [ecx], 1
jmp	loc_10084242
push	ebx
lea	edx, [esp+48h+var_30]
push	edx
push	edi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1008418D
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 152h
jmp	loc_10084242
cmp	[esp+44h+var_30], 0Ch
jz	short loc_1008419F
mov	ecx, [esp+44h+arg_8]
mov	[ecx], ebp
jmp	loc_10084242
mov	ecx, [esi]
cmp	ecx, ebp
jz	short loc_100841D8
mov	eax, [edi]
cmp	eax, ebp
jz	loc_10084234
push	ebx
lea	edx, [esp+48h+var_34]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100841E6
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 2CBh
jmp	short loc_10084242
cmp	[edi], ebp
jnz	short loc_10084234
mov	[esp+44h+var_34], 1
jmp	short loc_100841EC
cmp	[esp+44h+var_34], ebp
jz	short loc_10084238
mov	eax, [esi+4]
cmp	eax, ebp
jz	short loc_10084227
mov	ecx, [edi+4]
cmp	ecx, ebp
jz	short loc_10084223
push	ebx
lea	edx, [esp+48h+var_34]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10084238
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 2CBh
jmp	short loc_10084242
cmp	eax, ebp
jnz	short loc_10084234
mov	[esp+44h+var_34], 1
cmp	[edi+4], ebp
jz	short loc_10084238
			
mov	[esp+44h+var_34], ebp
			
mov	ecx, [esp+44h+arg_8]
mov	edx, [esp+44h+var_34]
mov	[ecx], edx
			
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	0Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 60h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+68h+var_2C]
rep movsd
mov	esi, [esp+68h+arg_0]
mov	[esp+68h+var_60], 0
mov	[esp+68h+var_2C], offset aPkix_pl_cer_59 
mov	[esp+68h+var_C], 0Dh
test	esi, esi
jz	loc_10084470
cmp	[esp+68h+arg_4], 0
jz	loc_10084470
push	ebx
mov	ebx, [esp+6Ch+arg_8]
push	ebx
push	0Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+6Ch+var_28], eax
test	eax, eax
jz	short loc_10084301
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], 2BFh
jmp	loc_10084457
mov	eax, [esi+4]
push	ebp
mov	ebp, [esi]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+70h+var_58]
rep movsd
mov	[esp+70h+var_5C], eax
mov	[esp+70h+arg_0], 0
mov	[esp+70h+var_58], offset aPkix_pl_cer_54 
mov	[esp+70h+var_38], 0Dh
test	ebp, ebp
jz	loc_1008440F
test	eax, eax
jz	loc_1008440F
push	ebx
lea	ecx, [esp+74h+arg_0]
push	ecx
push	8
push	0Ch
call	sub_100952A0
xor	edi, edi
add	esp, 10h
mov	[esp+70h+var_54], eax
cmp	eax, edi
jz	short loc_10084370
mov	edx, [eax+4]
mov	[esp+70h+var_3C], edx
mov	[esp+70h+var_48], 129h
jmp	short loc_10084395
push	ebx
push	ebp
call	sub_10095450
add	esp, 8
mov	[esp+70h+var_50], eax
push	ebx
cmp	eax, edi
jz	short loc_100843DA
push	eax
lea	eax, [esp+78h+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_50], edi
mov	eax, [esp+70h+arg_0]
cmp	eax, edi
jz	short loc_100843C6
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+70h+var_50], eax
cmp	eax, edi
jz	short loc_100843C2
push	ebx
push	eax
lea	edx, [esp+78h+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+70h+var_50], edi
			
mov	[esp+70h+arg_0], edi
push	ebx
push	1
lea	eax, [esp+78h+var_58]
push	0Dh
push	eax
call	sub_100781E0
add	esp, 10h
jmp	short loc_10084433
mov	ecx, [esp+74h+arg_0]
mov	esi, [esp+74h+var_5C]
push	esi
mov	[ecx], ebp
call	sub_10095450
add	esp, 8
mov	[esp+70h+var_50], eax
cmp	eax, edi
jz	short loc_100843FE
push	ebx
push	eax
lea	edx, [esp+78h+var_58]
push	edx
jmp	short loc_10084389
mov	eax, [esp+70h+arg_0]
mov	[eax+4], esi
mov	ecx, [esp+70h+arg_0]
mov	[esp+70h+var_60], ecx
jmp	short loc_100843C2
			
push	ebx
push	1
lea	ecx, [esp+78h+var_58]
push	1Fh
push	ecx
mov	[esp+80h+var_44], 1
mov	[esp+80h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
xor	edi, edi
mov	[esp+70h+var_28], eax
pop	ebp
cmp	eax, edi
jz	short loc_1008444D
mov	edx, [eax+4]
mov	[esp+6Ch+var_10], edx
mov	[esp+6Ch+var_1C], 0ABh
jmp	short loc_10084457
mov	eax, [esp+6Ch+arg_4]
mov	ecx, [esp+6Ch+var_60]
mov	[eax], ecx
			
push	ebx
push	1
lea	edx, [esp+74h+var_2C]
push	0Dh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 60h
retn
			
mov	eax, [esp+68h+arg_8]
push	eax
push	1
lea	ecx, [esp+70h+var_2C]
push	1Fh
push	ecx
mov	[esp+78h+var_18], 1
mov	[esp+78h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 60h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB3D0
push	1
mov	[esp+60h+var_50], offset aCertpolicymap	
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_10083BE0
mov	[esp+60h+var_40], offset sub_100840D0
mov	[esp+60h+var_3C], offset sub_10083F50
mov	[esp+60h+var_38], offset sub_10083CF0
mov	[esp+60h+var_30], offset sub_10084290
rep movsd
lea	ecx, [esp+60h+var_2C]
push	0Dh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_cer_16 
mov	[esp+68h+var_C], 0Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_cer_60 
mov	[esp+38h+var_C], 0Dh
test	edi, edi
jz	short loc_100845DF
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100845DF
mov	eax, [edi]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_100845C2
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_100845C2
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Dh
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Dh
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_cer_61 
mov	[esp+38h+var_C], 0Dh
test	edi, edi
jz	short loc_100846B1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_100846B1
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10084693
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10084693
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Dh
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+4]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	0Dh
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cer_62 
mov	[esp+40h+var_C], 0Fh
cmp	edi, ebx
jz	loc_10084801
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10084801
cmp	[esp+40h+arg_8], ebx
jz	loc_10084801
mov	esi, [esp+40h+arg_C]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	8
push	0Eh
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1008475E
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 12Ah
jmp	short loc_10084783
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
push	esi
cmp	eax, ebx
jz	short loc_100847CE
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_100847B4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100847B0
push	esi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	0Fh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+44h+var_30]
push	ebp
mov	[eax], edi
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100847EE
push	esi
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
jmp	short loc_10084777
mov	edx, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_8]
mov	[edx+4], ebp
mov	eax, [esp+40h+var_30]
mov	[ecx], eax
jmp	short loc_100847B0
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_cer_63 
mov	[esp+34h+var_C], 0Fh
test	edi, edi
jnz	short loc_10084889
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	0Eh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_100848B2
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2E9h
jmp	short loc_1008491E
mov	eax, [edi]
test	eax, eax
jz	short loc_100848E7
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_100848E1
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi], 0
mov	eax, [edi+4]
test	eax, eax
jz	short loc_1008491E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10084917
push	esi
push	eax
lea	ecx, [esp+3Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	0Fh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_2C], offset aPkix_pl_cer_64 
mov	[esp+4Ch+var_C], 0Fh
cmp	edi, ebx
jz	loc_10084B88
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_10084B88
mov	esi, [esp+4Ch+arg_8]
push	esi
push	0Eh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100849BD
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2E9h
jmp	loc_10084AB1
cmp	[edi], ebx
jz	loc_10084B5E
cmp	[edi+4], ebx
jz	loc_10084B5E
push	esi		
lea	ecx, [esp+50h+var_38]
push	ecx		
push	ebx		
push	offset aSS_0	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100849FF
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CFh
jmp	loc_10084AB1
mov	eax, [edi]
push	esi		
cmp	eax, ebx
jz	short loc_10084A1B
lea	ecx, [esp+50h+var_3C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 335h
jmp	short loc_10084A34
lea	edx, [esp+50h+var_3C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10084A49
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], ecx
jmp	short loc_10084AB1
mov	edx, [edi+4]
push	esi
lea	ecx, [esp+50h+var_34]
push	ecx
push	edx
call	sub_100910B0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10084A74
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 3Ch
jmp	short loc_10084AB1
mov	ecx, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_3C]
mov	eax, [esp+4Ch+var_38]
push	ecx
push	edx
push	eax
lea	ecx, [esp+58h+var_30]
push	esi
push	ecx
call	sub_10098590
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10084AAA
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CDh
jmp	short loc_10084AB1
mov	eax, [esp+4Ch+var_30]
mov	[ebp+0], eax
			
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_10084AE2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10084ADE
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_10084B13
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10084B0F
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_10084B44
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10084B40
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
push	esi
push	1
lea	ecx, [esp+54h+var_2C]
push	0Fh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
push	esi
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	eax, [esp+4Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	1Fh
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_2C], offset aPkix_pl_cer_65 
mov	[esp+40h+var_C], 0Fh
test	esi, esi
jz	loc_10084D43
mov	ebp, [esp+40h+arg_4]
test	ebp, ebp
jz	loc_10084D43
mov	edi, [esp+40h+arg_8]
push	edi
push	0Eh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10084C4E
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	0Fh
push	eax
mov	[esp+50h+var_1C], 2E9h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	eax, [esi]
test	eax, eax
jz	loc_10084D1A
cmp	dword ptr [esi+4], 0
jz	loc_10084D1A
push	edi
lea	ecx, [esp+44h+var_30]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10084CA1
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	0Fh
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 1AFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	esi, [esi+4]
test	esi, esi
jz	short loc_10084CE7
push	edi
lea	eax, [esp+44h+var_34]
push	eax
push	esi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10084CEF
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	0Fh
push	eax
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 1AAh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	[esp+40h+var_34], 0
mov	eax, [esp+40h+var_30]
mov	edx, eax
shl	edx, 5
push	edi
sub	edx, eax
add	edx, [esp+44h+var_34]
push	1
lea	eax, [esp+48h+var_2C]
push	0Fh
push	eax
mov	[ebp+0], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
sub	esp, 34h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_2C], offset aPkix_pl_cer_66 
mov	[esp+40h+var_C], 0Fh
test	edi, edi
jz	loc_10084F91
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_10084F91
cmp	[esp+40h+arg_8], 0
jz	loc_10084F91
mov	esi, [esp+40h+arg_C]
push	esi
push	0Eh
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10084E09
mov	eax, [eax+4]
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	0Fh
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 1E0h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
cmp	edi, ebx
jnz	short loc_10084E30
mov	ecx, [esp+40h+arg_8]
push	esi
push	1
mov	dword ptr [ecx], 1
lea	ecx, [esp+48h+var_2C]
push	0Fh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
push	esi
lea	edx, [esp+44h+var_30]
push	edx
push	ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10084E6F
mov	eax, [eax+4]
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	0Fh
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
cmp	[esp+40h+var_30], 0Eh
jz	short loc_10084E99
mov	ecx, [esp+40h+arg_8]
push	esi
push	1
mov	dword ptr [ecx], 0
lea	ecx, [esp+48h+var_2C]
push	0Fh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	ecx, [edi]
test	ecx, ecx
jz	loc_10084F68
mov	eax, [ebx]
test	eax, eax
jz	loc_10084F68
push	esi
lea	edx, [esp+44h+var_34]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10084EED
mov	eax, [eax+4]
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	0Fh
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 330h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
cmp	[esp+40h+var_34], 0
jz	short loc_10084F45
mov	ecx, [edi+4]
test	ecx, ecx
jz	short loc_10084F42
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_10084F42
push	esi
lea	edx, [esp+44h+var_34]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10084F45
mov	eax, [eax+4]
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	0Fh
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 39h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
push	esi
jmp	short loc_10084F96
			
mov	edx, [esp+40h+arg_8]
mov	eax, [esp+40h+var_34]
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	0Fh
push	ecx
mov	[edx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
push	esi
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB418
push	1
mov	[esp+60h+var_50], offset aCertpolicyqual 
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_10084830
mov	[esp+60h+var_40], offset sub_10084D70
mov	[esp+60h+var_3C], offset sub_10084BC0
mov	[esp+60h+var_38], offset sub_10084940
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	0Fh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_cer_15 
mov	[esp+68h+var_C], 0Fh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_crl__2 
mov	[esp+30h+var_C], 17h
pop	esi
test	eax, eax
jz	loc_10085110
mov	eax, [eax]
test	eax, eax
jz	short loc_10085110
test	edx, edx
jz	short loc_10085110
mov	eax, [eax+0Ch]
test	eax, eax
jnz	short loc_100850AC
push	ebx
push	1
push	1Fh
lea	eax, [esp+38h+var_2C]
push	eax
jmp	short loc_1008511A
movzx	eax, byte ptr [eax]
cmp	eax, 1
jbe	short loc_100850F8
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100850D2
push	ebx
push	2
push	17h
push	0
push	429h
push	eax
call	sub_10074820
add	esp, 18h
push	ebx
push	1
lea	ecx, [esp+34h+var_2C]
push	17h
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 429h
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
push	ebx
push	1
lea	ecx, [esp+34h+var_2C]
push	17h
push	ecx
mov	[edx], eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
push	ebx
push	1
push	1Fh
lea	edx, [esp+38h+var_2C]
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
			
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
xor	ebx, ebx
xor	ebp, ebp
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_2C], offset aPkix_pl_crl_ge 
mov	[esp+4Ch+var_C], 17h
cmp	esi, ebx
jz	loc_10085350
cmp	[esi], ebx
jz	loc_10085350
cmp	[esp+4Ch+arg_4], ebx
jz	loc_10085350
mov	edi, [esp+4Ch+arg_8]
cmp	[esi+10h], ebx
jnz	loc_100852F1
cmp	[esi+0Ch], ebx
jnz	loc_100852F1
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100851EA
push	edi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	ecx, [esp+54h+var_2C]
push	17h
push	ecx
mov	[esp+5Ch+var_24], ebx
mov	[esp+5Ch+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	[esp+4Ch+var_8], esi
cmp	[esi+10h], ebx
jnz	loc_100852C8
cmp	[esi+0Ch], ebx
jnz	loc_100852C8
push	800h
mov	[esp+50h+var_38], ebx
mov	[esp+50h+Size],	ebx
mov	[esp+50h+Src], ebx
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
cmp	ebp, ebx
jnz	short loc_10085269
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008523F
mov	ecx, [esp+4Ch+var_C]
push	edi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	ecx, [esp+54h+var_2C]
push	17h
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 338h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	eax, [esi]
lea	edx, [esp+4Ch+var_38]
push	edx
add	eax, 4
push	eax
push	ebp
call	CERT_FindCRLNumberExten
add	esp, 0Ch
test	eax, eax
jnz	short loc_100852BB
mov	edx, [esp+4Ch+Size]
mov	eax, [esp+4Ch+Src]
push	edi		
lea	ecx, [esp+50h+var_3C]
push	ecx		
push	edx		
push	eax		
call	sub_10090F20
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100852B2
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 1Fh
jmp	short loc_10085328
mov	edx, [esp+4Ch+var_3C]
mov	[esi+0Ch], edx
jmp	short loc_100852C2
mov	dword ptr [esi+10h], 1
cmp	[esp+4Ch+var_8], esi
jnz	short loc_100852F1
			
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100852ED
push	edi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_8], ebx
			
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_1008531F
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1008531F
push	edi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
jmp	short loc_10085328
			
mov	edx, [esi+0Ch]
mov	eax, [esp+4Ch+arg_4]
mov	[eax], edx
			
cmp	ebp, ebx
jz	short loc_10085336
push	ebx
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
push	edi
push	1
lea	ecx, [esp+54h+var_2C]
push	17h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	edx, [esp+4Ch+arg_8]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_crl__3 
mov	[esp+3Ch+var_C], 17h
test	ebx, ebx
jz	loc_10085547
cmp	dword ptr [ebx], 0
jz	loc_10085547
mov	edi, [esp+3Ch+arg_0]
test	edi, edi
jz	loc_10085547
cmp	dword ptr [ebx+8], 0
jnz	loc_10085492
push	ebp
push	ebx
call	sub_10095E70
xor	esi, esi
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, esi
jz	short loc_1008540D
push	ebp
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_1C], 2D2h
jmp	loc_100854FB
mov	[esp+3Ch+var_8], ebx
cmp	[ebx+8], esi
jnz	short loc_10085469
mov	eax, [ebx]
add	eax, 14h
cmp	[eax+4], esi
jz	loc_100854C4
cmp	[eax+8], esi
jz	loc_100854C4
push	ebp
lea	ecx, [esp+40h+var_30]
push	ecx
push	eax
call	sub_10096A10
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
cmp	eax, esi
jz	short loc_10085458
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 32Eh
jmp	loc_100854FB
mov	eax, [esp+3Ch+var_30]
mov	[ebx+8], eax
mov	[esp+3Ch+var_30], esi
cmp	[esp+3Ch+var_8], ebx
jnz	short loc_10085492
push	ebp
push	ebx
call	sub_10095F10
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, esi
jz	short loc_1008548E
push	ebp
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_8], esi
			
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_100854F6
push	ebp
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_100854F6
push	ebp
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
jmp	short loc_100854FB
			
mov	eax, dword_100BAE9C
cmp	eax, esi
jz	short loc_100854E4
mov	ecx, [esp+3Ch+var_C]
push	ebp
push	2
push	ecx
push	esi
push	32Bh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 32Bh
jmp	short loc_100854FB
			
mov	ecx, [ebx+8]
mov	[edi], ecx
			
mov	eax, [esp+3Ch+var_30]
test	eax, eax
jz	short loc_1008552E
push	ebp
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, esi
jz	short loc_1008552A
push	ebp
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_30], esi
push	ebp
push	1
lea	eax, [esp+44h+var_2C]
push	17h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_crl__4 
mov	[esp+3Ch+var_C], 17h
test	ebx, ebx
jz	loc_1008573D
cmp	dword ptr [ebx], 0
jz	loc_1008573D
mov	edi, [esp+3Ch+arg_0]
test	edi, edi
jz	loc_1008573D
cmp	dword ptr [ebx+14h], 0
jnz	loc_100856D6
push	ebp
push	ebx
call	sub_10095E70
xor	esi, esi
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, esi
jz	short loc_10085611
push	ebp
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
mov	[esp+4Ch+var_24], esi
mov	[esp+4Ch+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	[esp+3Ch+var_8], ebx
cmp	[ebx+14h], esi
jnz	loc_100856AD
mov	eax, [ebx]
mov	edx, [eax+58h]
push	ebp
lea	ecx, [esp+40h+var_30]
push	ecx
push	edx
call	sub_100877E0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
cmp	eax, esi
jz	short loc_10085662
mov	eax, [eax+4]
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 162h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	ecx, [esp+3Ch+var_30]
push	ebp
push	ecx
call	sub_10075700
add	esp, 8
mov	[esp+3Ch+var_28], eax
cmp	eax, esi
jz	short loc_100856A0
mov	edx, [eax+4]
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 28Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
mov	[ebx+14h], eax
cmp	[esp+3Ch+var_8], ebx
jnz	short loc_100856D6
push	ebp
push	ebx
call	sub_10095F10
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, esi
jz	short loc_100856D2
push	ebp
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_8], esi
			
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_1008571F
push	ebp
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_1008571F
push	ebp
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
mov	[esp+4Ch+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	eax, [ebx+14h]
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
mov	[edi], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebp
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_pl_crl_de 
mov	[esp+38h+var_C], 17h
cmp	esi, ebx
jnz	short loc_100857CD
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	14h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_100857F9
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2EFh
jmp	loc_1008591F
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_10085808
push	eax
call	j_SEC_DestroyCrl
add	esp, 4
mov	eax, [esi+1Ch]
cmp	eax, ebx
jz	short loc_1008581A
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esi+4]
mov	[esi], ebx
mov	[esi+1Ch], ebx
mov	[esi+10h], ebx
cmp	eax, ebx
jz	short loc_10085851
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1008584E
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+4], ebx
mov	eax, [esi+8]
cmp	eax, ebx
jz	short loc_10085880
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1008587D
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+8], ebx
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_100858AF
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100858AC
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0Ch], ebx
mov	eax, [esi+14h]
cmp	eax, ebx
jz	short loc_100858DE
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100858DB
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+14h], ebx
mov	eax, [esi+18h]
cmp	eax, ebx
jz	short loc_1008590D
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1008590A
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+18h], ebx
mov	esi, [esi+20h]
cmp	esi, ebx
jz	short loc_1008591F
push	1
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
			
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	17h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_crl_ha 
mov	[esp+38h+var_C], 17h
test	esi, esi
jz	loc_10085A85
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_10085A85
mov	edi, [esp+38h+arg_8]
push	edi
push	14h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_100859BE
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	17h
push	edx
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2EFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	eax, [esi+1Ch]
test	eax, eax
jnz	short loc_100859D5
mov	esi, [esi]
test	esi, esi
jz	short loc_10085A3E
mov	eax, [esi+0ACh]
test	eax, eax
jz	short loc_10085A3E
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_10085A3E
mov	eax, [eax+8]
push	edi
lea	edx, [esp+3Ch+arg_0]
push	edx
push	eax
push	ecx
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10085A1F
mov	ecx, [eax+4]
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	17h
push	edx
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 1ACh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edx, [esp+38h+arg_0]
push	edi
push	1
mov	[ebx], edx
lea	edx, [esp+40h+var_2C]
push	17h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10085A5C
mov	ecx, [esp+38h+var_C]
push	edi
push	2
push	ecx
push	0
push	45h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	17h
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 45h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	eax, eax
mov	[esp+40h+var_30], eax
mov	[esp+40h+var_34], eax
mov	[esp+40h+var_2C], offset aPkix_pl_crl_eq 
mov	[esp+40h+var_C], 17h
cmp	esi, eax
jz	loc_10085BF2
mov	edi, [esp+40h+arg_4]
cmp	edi, eax
jz	loc_10085BF2
mov	ebp, [esp+40h+arg_8]
cmp	ebp, eax
jz	loc_10085BF2
push	ebx
mov	ebx, [esp+44h+arg_C]
push	ebx
push	14h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_10085B41
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 1E2h
jmp	loc_10085BD8
cmp	esi, edi
jz	loc_10085BD1
push	ebx
lea	ecx, [esp+48h+arg_0]
push	ecx
push	edi
mov	dword ptr [ebp+0], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_10085B78
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 152h
jmp	short loc_10085BD8
cmp	[esp+44h+arg_0], 14h
jnz	short loc_10085BD8
mov	eax, [esi+1Ch]
test	eax, eax
jz	short loc_10085B8C
mov	[esp+44h+var_30], eax
jmp	short loc_10085BA0
mov	esi, [esi]
test	esi, esi
jz	short loc_10085BA0
mov	esi, [esi+0ACh]
test	esi, esi
jz	short loc_10085BA0
mov	[esp+44h+var_30], esi
			
mov	eax, [edi+1Ch]
test	eax, eax
jnz	short loc_10085BB7
mov	eax, [edi]
test	eax, eax
jz	short loc_10085BBB
mov	eax, [eax+0ACh]
test	eax, eax
jz	short loc_10085BBB
mov	[esp+44h+var_34], eax
			
mov	eax, [esp+44h+var_34]
mov	ecx, [esp+44h+var_30]
push	eax
push	ecx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_10085BD8
mov	dword ptr [ebp+0], 1
			
push	ebx
push	1
lea	edx, [esp+4Ch+var_2C]
push	17h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
xor	ebp, ebp
rep movsd
mov	[esp+48h+var_2C], offset aPkix_pl_crl_ve 
mov	[esp+48h+var_C], 17h
test	eax, eax
jz	loc_10085D80
mov	esi, [eax]
test	esi, esi
jz	loc_10085D80
mov	eax, [esp+48h+arg_4]
test	eax, eax
jz	loc_10085D80
cmp	[esp+48h+arg_8], ebp
jz	loc_10085D80
cmp	[esi+50h], ebp
mov	edi, [eax+4]
push	ebx
mov	ebx, [eax]
lea	eax, [esi+4Ch]
jz	short loc_10085CD4
cmp	[eax+8], ebp
jz	short loc_10085CD4
push	eax
lea	eax, [esp+50h+var_3C]
push	eax
mov	ebp, 1
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jz	short loc_10085CD4
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10085CC3
mov	ecx, [esp+4Ch+arg_C]
mov	edx, [esp+4Ch+var_C]
push	ecx
push	2
push	edx
push	0
push	18Fh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_18], ebp
mov	[esp+4Ch+var_1C], 18Fh
jmp	loc_10085D62
			
add	esi, 40h
lea	eax, [esp+4Ch+var_34]
push	esi
push	eax
call	DER_DecodeTimeChoice_Util
add	esp, 8
test	eax, eax
jz	short loc_10085D20
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10085D0E
mov	ecx, [esp+4Ch+arg_C]
mov	edx, [esp+4Ch+var_C]
push	ecx
push	2
push	edx
push	0
push	18Eh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 18Eh
jmp	short loc_10085D62
test	ebp, ebp
jz	short loc_10085D58
cmp	[esp+4Ch+var_38], edi
jl	short loc_10085D58
jg	short loc_10085D32
cmp	[esp+4Ch+var_3C], ebx
jb	short loc_10085D58
cmp	[esp+4Ch+var_30], edi
jg	short loc_10085D4C
jl	short loc_10085D40
cmp	[esp+4Ch+var_34], ebx
ja	short loc_10085D4C
mov	ecx, [esp+4Ch+arg_8]
mov	dword ptr [ecx], 1
jmp	short loc_10085D62
			
mov	edx, [esp+4Ch+arg_8]
mov	dword ptr [edx], 0
jmp	short loc_10085D62
			
mov	eax, [esp+4Ch+arg_8]
mov	dword ptr [eax], 0
			
mov	ecx, [esp+4Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+54h+var_2C]
push	17h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
			
mov	eax, [esp+48h+arg_C]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_C]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_pl_crl_cr 
mov	[esp+3Ch+var_C], 17h
cmp	edi, ebx
jnz	short loc_10085E11
mov	eax, [esp+3Ch+arg_10]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_10]
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	24h
push	14h
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10085E43
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 131h
jmp	loc_10085ED7
mov	edx, [esp+3Ch+var_30]
mov	eax, [esp+3Ch+arg_0]
mov	[edx], eax
mov	ecx, [esp+3Ch+var_30]
mov	edx, [esp+3Ch+arg_4]
mov	[ecx+1Ch], edx
mov	eax, [esp+3Ch+var_30]
mov	[eax+4], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+8], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+0Ch], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+10h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	eax, [esp+3Ch+arg_8]
mov	[ecx+14h], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+18h], ebx
cmp	eax, ebx
jz	short loc_10085ECD
push	eax
call	SECITEM_DupItem_Util
mov	ecx, [esp+40h+var_30]
mov	[ecx+20h], eax
mov	edx, [esp+40h+var_30]
add	esp, 4
cmp	[edx+20h], ebx
jnz	short loc_10085ECD
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10085EBF
mov	ecx, [esp+3Ch+var_C]
push	esi
push	2
push	ecx
push	ebx
push	ebx
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], ebx
jmp	short loc_10085EED
			
mov	edx, [esp+3Ch+var_30]
mov	eax, [esp+3Ch+var_28]
mov	[edi], edx
cmp	[esp+3Ch+var_18], ebx
jnz	short loc_10085EED
cmp	eax, ebx
jnz	short loc_10085EED
cmp	[esp+3Ch+var_14], ebx
jnz	short loc_10085EED
cmp	[esp+3Ch+var_4], ebx
jz	short loc_10085F1E
			
mov	eax, [esp+3Ch+var_30]
cmp	eax, ebx
jz	short loc_10085F1E
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10085F1A
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_30], ebx
			
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_crl__0 
mov	[esp+40h+var_C], 17h
cmp	esi, ebx
jz	loc_100860CF
cmp	[esi], ebx
jz	loc_100860CF
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_100860CF
mov	edi, [esp+40h+arg_8]
cmp	[esi+4], ebx
jnz	loc_10086069
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10085FE1
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	17h
push	edx
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	[esp+40h+var_8], esi
cmp	[esi+4], ebx
jnz	short loc_10086040
mov	eax, [esi]
push	edi
lea	edx, [esp+44h+var_30]
lea	ecx, [eax+38h]
push	edx
add	eax, 2Ch
push	ecx
push	eax
call	sub_1008FCA0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10086033
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	17h
push	edx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 42Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	ecx, [esp+40h+var_30]
mov	[esi+4], ecx
cmp	[esp+40h+var_8], esi
jnz	short loc_10086069
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10086065
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
			
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_100860AF
push	edi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100860AF
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	17h
push	edx
mov	[esp+50h+var_24], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esi+4]
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	17h
push	edx
mov	[ebp+0], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_crl__5 
mov	[esp+40h+var_C], 17h
cmp	esi, ebx
jz	loc_10086285
cmp	[esi], ebx
jz	loc_10086285
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10086285
mov	edi, [esp+40h+arg_8]
cmp	[esi+18h], ebx
jnz	loc_10086225
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_100861A1
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	17h
push	ecx
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	ecx, [esi]
mov	[esp+40h+var_8], esi
mov	eax, [ecx+5Ch]
cmp	[esi+18h], ebx
jnz	short loc_100861FC
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
call	sub_10096C20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_100861EF
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	17h
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 204h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	ecx, [esp+40h+var_30]
mov	[esi+18h], ecx
cmp	[esp+40h+var_8], esi
jnz	short loc_10086225
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10086221
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
			
mov	esi, [esi+18h]
cmp	esi, ebx
jz	short loc_10086268
push	edi
push	ebp
push	esi
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1008626B
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	17h
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2C7h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	[ebp+0], ebx
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	17h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [eax+1Ch]
mov	[edx], ecx
mov	dword ptr [eax+1Ch], 0
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	17h
push	ecx
mov	[esp+44h+var_2C], offset aPkix_pl_crl__6 
mov	[esp+44h+var_C], 17h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 64h
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+6Ch+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+74h+var_2C]
rep movsd
mov	esi, [esp+74h+arg_0]
mov	[esp+74h+var_40], ebx
mov	[esp+74h+var_3C], ebx
mov	[esp+74h+var_38], ebx
mov	[esp+74h+var_34], ebx
mov	[esp+74h+var_58], ebx
mov	[esp+74h+var_44], ebx
mov	[esp+74h+var_54], ebx
mov	[esp+74h+var_50], ebx
mov	[esp+74h+var_4C], ebx
mov	[esp+74h+var_48], ebx
mov	[esp+74h+var_64], ebx
mov	[esp+74h+var_60], ebx
mov	[esp+74h+var_5C], ebx
mov	[esp+74h+var_30], ebx
mov	[esp+74h+var_2C], offset aPkix_pl_crl__1 
mov	[esp+74h+var_C], 17h
cmp	esi, ebx
jz	loc_10086969
cmp	[esi], ebx
jz	loc_10086969
cmp	[esp+74h+arg_4], ebx
jz	loc_10086969
push	ebp		
lea	eax, [esp+78h+var_44]
push	eax		
push	ebx		
push	offset aVersionVDIssue 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_100863D4
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 3CFh
jmp	loc_10086796
mov	ebx, ebp
lea	edx, [esp+74h+arg_0]
mov	eax, esi
call	sub_10085060
xor	edi, edi
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_100863FF
mov	edx, [eax+4]
mov	[esp+74h+var_10], edx
mov	[esp+74h+var_1C], 170h
jmp	loc_10086794
push	ebp
lea	eax, [esp+78h+var_40]
push	eax
push	esi
call	sub_10085F40
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_1008642A
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 16Dh
jmp	loc_100866E0
mov	eax, [esp+74h+var_40]
push	ebp
lea	edx, [esp+78h+var_54]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_10086459
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 436h
jmp	loc_100866E0
mov	eax, [esi]
push	ebp
lea	edx, [esp+78h+var_50]
push	edx
add	eax, 40h
push	eax
call	sub_10088550
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_10086489
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 186h
jmp	loc_100866E0
mov	eax, [esi]
push	ebp
lea	edx, [esp+78h+var_4C]
push	edx
add	eax, 4Ch
push	eax
call	sub_10088550
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_100864B9
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 186h
jmp	loc_100866E0
lea	edx, [esp+74h+var_3C]
push	ebp
push	edx
mov	ebx, esi
call	sub_10085380
add	esp, 8
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_100864E5
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 16Fh
jmp	loc_100866E0
mov	edx, [esp+74h+var_3C]
push	ebp
lea	ecx, [esp+78h+var_48]
push	ecx
push	edx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_10086514
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], 335h
jmp	loc_100866E0
push	ebp
lea	ecx, [esp+78h+var_38]
push	ecx
push	esi
call	sub_10085140
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_1008653F
mov	edx, [eax+4]
mov	[esp+74h+var_10], edx
mov	[esp+74h+var_1C], 16Ch
jmp	loc_100866E0
mov	eax, [esp+74h+var_38]
push	ebp		
cmp	eax, edi
jz	short loc_1008655D
lea	ecx, [esp+78h+var_64]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 22h
jmp	short loc_10086576
lea	edx, [esp+78h+var_64]
push	edx		
push	edi		
push	offset aNull	
push	edi		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_1008658E
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], ecx
jmp	loc_100866E0
lea	ecx, [esp+74h+var_34]
push	ebp
push	ecx
call	sub_10085570
add	esp, 8
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_100865B8
mov	edx, [eax+4]
mov	[esp+74h+var_10], edx
mov	[esp+74h+var_1C], 16Ah
jmp	loc_100866E0
mov	eax, [esp+74h+var_34]
push	ebp		
cmp	eax, edi
jz	short loc_100865D6
lea	ecx, [esp+78h+var_60]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_100865EF
lea	edx, [esp+78h+var_60]
push	edx		
push	edi		
push	offset aNull	
push	edi		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_10086607
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], ecx
jmp	loc_100866E0
push	ebp
lea	ecx, [esp+78h+var_58]
push	ecx
push	esi
call	sub_10086100
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_10086632
mov	edx, [eax+4]
mov	[esp+74h+var_10], edx
mov	[esp+74h+var_1C], 169h
jmp	loc_100866E0
mov	eax, [esp+74h+var_58]
push	ebp		
cmp	eax, edi
jz	short loc_10086650
lea	ecx, [esp+78h+var_5C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10086669
lea	edx, [esp+78h+var_5C]
push	edx		
push	edi		
push	offset aNull	
push	edi		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_1008667E
mov	eax, [eax+4]
mov	[esp+74h+var_10], eax
mov	[esp+74h+var_1C], ecx
jmp	short loc_100866E0
mov	ecx, [esp+74h+var_5C]
mov	edx, [esp+74h+var_60]
mov	eax, [esp+74h+var_64]
push	ecx
mov	ecx, [esp+78h+var_48]
push	edx
mov	edx, [esp+7Ch+var_4C]
push	eax
mov	eax, [esp+80h+var_50]
push	ecx
mov	ecx, [esp+84h+var_54]
push	edx
mov	edx, [esp+88h+arg_0]
push	eax
mov	eax, [esp+8Ch+var_44]
push	ecx
inc	edx
push	edx
push	eax
lea	ecx, [esp+98h+var_30]
push	ebp
push	ecx
call	sub_10098590
add	esp, 2Ch
mov	[esp+74h+var_28], eax
cmp	eax, edi
jz	short loc_100866D6
mov	edx, [eax+4]
mov	[esp+74h+var_10], edx
mov	[esp+74h+var_1C], 3CDh
jmp	short loc_100866E0
mov	eax, [esp+74h+var_30]
mov	ecx, [esp+74h+arg_4]
mov	[ecx], eax
			
mov	eax, [esp+74h+var_40]
cmp	eax, edi
jz	short loc_1008670D
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, edi
jz	short loc_1008670D
push	ebp
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], edi
			
mov	eax, [esp+74h+var_3C]
cmp	eax, edi
jz	short loc_1008673A
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, edi
jz	short loc_1008673A
push	ebp
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], edi
			
mov	eax, [esp+74h+var_38]
cmp	eax, edi
jz	short loc_10086767
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, edi
jz	short loc_10086767
push	ebp
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], edi
			
mov	eax, [esp+74h+var_34]
cmp	eax, edi
jz	short loc_10086794
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
test	eax, eax
jz	short loc_10086794
push	ebp
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], edi
			
xor	ebx, ebx
mov	eax, [esp+74h+var_58]
cmp	eax, ebx
jz	short loc_100867C7
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100867C3
push	ebp
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_58], ebx
mov	eax, [esp+74h+var_54]
cmp	eax, ebx
jz	short loc_100867F8
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100867F4
push	ebp
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_54], ebx
mov	eax, [esp+74h+var_50]
cmp	eax, ebx
jz	short loc_10086829
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10086825
push	ebp
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_50], ebx
mov	eax, [esp+74h+var_4C]
cmp	eax, ebx
jz	short loc_1008685A
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10086856
push	ebp
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_4C], ebx
mov	eax, [esp+74h+var_48]
cmp	eax, ebx
jz	short loc_1008688B
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10086887
push	ebp
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_48], ebx
mov	eax, [esp+74h+var_64]
cmp	eax, ebx
jz	short loc_100868BC
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100868B8
push	ebp
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_64], ebx
mov	eax, [esp+74h+var_60]
cmp	eax, ebx
jz	short loc_100868ED
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_100868E9
push	ebp
push	eax
lea	eax, [esp+7Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_60], ebx
mov	eax, [esp+74h+var_5C]
cmp	eax, ebx
jz	short loc_1008691E
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_1008691A
push	ebp
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_5C], ebx
mov	eax, [esp+74h+var_44]
cmp	eax, ebx
jz	short loc_1008694F
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_1008694B
push	ebp
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_44], ebx
push	ebp
push	1
lea	eax, [esp+7Ch+var_2C]
push	17h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 64h
retn
			
push	ebp
push	1
lea	ecx, [esp+7Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+84h+var_18], 1
mov	[esp+84h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 64h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_crl_to 
mov	[esp+3Ch+var_C], 17h
test	esi, esi
jz	loc_10086A84
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_10086A84
mov	edi, [esp+3Ch+arg_8]
push	edi
push	14h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10086A26
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2EFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
push	edi
lea	ecx, [esp+40h+var_30]
push	ecx
push	esi
call	sub_10086320
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10086A65
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 17Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	17h
push	ecx
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	17h
push	ecx
mov	[esp+44h+var_2C], offset aPkix_pl_crl_re 
mov	[esp+44h+var_C], 17h
mov	dword_100BB4F0,	offset aCrl 
mov	dword_100BB4F8,	24h
mov	dword_100BB4FC,	offset sub_10085770
mov	dword_100BB500,	offset sub_10085AC0
mov	dword_100BB504,	offset sub_10085940
mov	dword_100BB508,	offset sub_100869A0
mov	dword_100BB510,	offset sub_10072730
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_crldp_des 
mov	[esp+34h+var_C], 1Bh
test	esi, esi
jnz	short loc_10086BA9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	15h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10086BD2
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2F3h
jmp	short loc_10086BF1
cmp	dword ptr [esi+4], 2
jnz	short loc_10086BEB
mov	eax, [esi+8]
push	eax
call	CERT_DestroyName
add	esp, 4
mov	dword ptr [esi+8], 0
mov	dword ptr [esi], 0
push	edi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Bh
push	ecx
mov	[esp+44h+var_2C], offset aPkix_crldp_r_0 
mov	[esp+44h+var_C], 1Bh
mov	dword_100BB514,	offset aCrldistpoint 
mov	dword_100BB51C,	10h
mov	dword_100BB520,	offset sub_10086B50
mov	dword_100BB534,	offset sub_10072730
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	ebp, ebp
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_2C], offset aPkix_pl_crldp_ 
mov	[esp+3Ch+var_C], 18h
cmp	esi, ebp
jnz	short loc_10086CE1
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebx
lea	edx, [esp+44h+var_30]
push	edx
push	10h
push	15h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10086D14
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 141h
jmp	loc_10086E3C
mov	ecx, [esp+40h+var_30]
mov	[ecx], esi
mov	edx, [esp+40h+var_30]
mov	[edx+0Ch], ebp
cmp	[esi+0Ch], ebp
jz	short loc_10086D31
mov	eax, [esp+40h+var_30]
mov	dword ptr [eax+0Ch], 1
mov	edi, 1
cmp	[esi], edi
jnz	short loc_10086D5A
mov	ecx, [esp+40h+var_30]
mov	[ecx+4], edi
mov	edx, [esi+4]
mov	eax, [esp+40h+var_30]
mov	[eax+8], edx
mov	ecx, [esp+40h+var_30]
mov	edx, [esp+40h+arg_8]
mov	[edx], ecx
jmp	loc_10086E69
lea	ecx, [esi+4]
mov	esi, [esi+14h]
mov	[esp+40h+arg_0], ecx
cmp	esi, ebp
jz	short loc_10086DA3
cmp	[esi+28h], ebp
jz	short loc_10086D9E
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10086D8D
mov	edx, [esp+40h+var_C]
push	ebx
push	2
push	edx
push	ebp
push	2ACh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], edi
mov	[esp+40h+var_1C], 2ACh
jmp	loc_10086E3C
lea	edi, [esi+4]
jmp	short loc_10086DA7
mov	edi, [esp+40h+arg_4]
push	800h
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_10086DEC
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10086DDA
mov	ecx, [esp+40h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	356h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 356h
jmp	short loc_10086E3A
push	8
push	ebp
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	loc_10086E87
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10086E1F
mov	edx, [esp+40h+var_C]
push	ebx
push	2
push	edx
			
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
			
push	0
push	ebp
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 0
call	PORT_FreeArena_Util
add	esp, 8
xor	ebp, ebp
			
mov	eax, [esp+40h+var_30]
cmp	eax, ebp
jz	short loc_10086E6D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_10086E69
push	ebx
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
			
mov	[esp+40h+var_30], ebp
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	18h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
push	edi
push	esi
push	ebp
call	CERT_CopyName
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jnz	short loc_10086EB1
mov	eax, dword_100BAE9C
test	eax, eax
jz	loc_10086E1F
mov	ecx, [esp+40h+var_C]
push	ebx
push	2
push	ecx
jmp	loc_10086E12
mov	edx, [esp+40h+arg_0]
push	edx
push	esi
call	CERT_AddRDN
add	esp, 8
cmp	eax, 0FFFFFFFFh
jnz	short loc_10086EDE
mov	eax, dword_100BAE9C
test	eax, eax
jz	loc_10086E1F
mov	ecx, [esp+40h+var_C]
push	ebx
push	2
push	ecx
jmp	loc_10086E12
mov	edx, [esp+40h+var_30]
mov	dword ptr [edx+4], 2
mov	eax, [esp+40h+var_30]
mov	edx, [esp+40h+arg_8]
mov	[eax+8], esi
mov	ecx, [esp+40h+var_30]
xor	ebp, ebp
mov	[edx], ecx
jmp	loc_10086E69
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_pl_crle_0 
mov	[esp+38h+var_C], 19h
cmp	esi, ebx
jnz	short loc_10086F6D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	16h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10086F96
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2F0h
jmp	short loc_10086FFC
mov	eax, [esi+4]
mov	[esi+0Ch], ebx
mov	[esi+10h], ebx
mov	[esi], ebx
cmp	eax, ebx
jz	short loc_10086FCD
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10086FCA
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+4], ebx
mov	eax, [esi+8]
cmp	eax, ebx
jz	short loc_10086FFC
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10086FF9
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+8], ebx
			
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	19h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 34h
push	ebx
push	esi
push	edi
mov	ebx, eax
xor	eax, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], eax
mov	[esp+40h+var_34], eax
mov	[esp+40h+var_2C], offset aPkix_pl_crl_10 
mov	[esp+40h+var_C], 19h
cmp	ebx, eax
jz	loc_10087218
cmp	[esp+40h+arg_0], eax
jz	loc_10087218
push	ebp
push	800h
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_100870B1
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008709C
mov	ecx, [esp+44h+arg_4]
mov	edx, [esp+44h+var_C]
push	ecx
push	2
push	edx
push	ebp
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 338h
jmp	loc_10087144
mov	edi, [ebx]
test	edi, edi
jz	short loc_1008712F
jmp	short loc_100870C0
align 10h
			
add	ebx, 4
test	edi, edi
jz	loc_10087162
push	0Ch
push	ebp
call	PORT_ArenaZAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_10087190
push	offset dword_100A6D48
push	edi
push	esi
push	ebp
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	loc_100871CA
mov	eax, [esp+44h+arg_4]
mov	edx, [esi+8]
push	eax
mov	eax, [esi+4]
lea	ecx, [esp+48h+var_30]
push	ecx
push	edx
push	eax
call	sub_10072650
add	esp, 10h
mov	[esp+44h+var_28], eax
test	eax, eax
jnz	loc_10087204
mov	ecx, [esp+44h+var_30]
mov	edi, [ebx]
shl	ecx, 7
add	[esp+44h+var_34], ecx
test	edi, edi
jnz	short loc_100870C0
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+arg_0]
mov	[edx], ecx
			
push	0
push	ebp
call	PORT_FreeArena_Util
add	esp, 8
mov	eax, [esp+44h+arg_4]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	19h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	edx, [esp+44h+arg_4]
push	edx
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100871B5
mov	ecx, [esp+44h+arg_4]
mov	edx, [esp+44h+var_C]
push	ecx
push	2
push	edx
push	0
push	356h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 356h
jmp	loc_10087139
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100871EF
mov	ecx, [esp+44h+arg_4]
mov	edx, [esp+44h+var_C]
push	ecx
push	2
push	edx
push	0
push	3A5h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 3A5h
jmp	loc_10087139
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 20Ch
jmp	loc_10087139
			
mov	edx, [esp+40h+arg_4]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 40h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
xor	ebp, ebp
rep movsd
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_2C], offset aPkix_pl_crle_2 
mov	[esp+50h+var_C], 19h
test	edx, edx
jz	loc_100874E1
mov	esi, [esp+50h+arg_0]
test	esi, esi
jz	loc_100874E1
mov	edi, [esp+50h+arg_4]
test	edi, edi
jz	loc_100874E1
mov	eax, edx
mov	ecx, esi
cmp	[edx], ebx
jz	short loc_100872B3
add	eax, 4
inc	ebx
cmp	[eax], ebp
jnz	short loc_100872A7
mov	[esp+50h+var_40], ebx
cmp	[esi], ebp
jz	short loc_100872C0
add	ecx, 4
inc	ebp
cmp	dword ptr [ecx], 0
jnz	short loc_100872B7
cmp	ebx, ebp
jz	short loc_100872E8
mov	ecx, [esp+50h+arg_8]
push	ecx
push	1
lea	edx, [esp+58h+var_2C]
push	19h
push	edx
mov	dword ptr [edi], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
test	ebx, ebx
jnz	short loc_10087314
test	ebp, ebp
jnz	short loc_10087314
mov	ecx, [esp+50h+arg_8]
push	ecx
push	1
lea	edx, [esp+58h+var_2C]
push	19h
push	edx
mov	dword ptr [edi], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	ebx, esi
mov	esi, 1
push	1000h
mov	edi, edx
mov	[esp+54h+var_3C], esi
call	PORT_NewArena_Util
mov	ebp, eax
add	esp, 4
test	ebp, ebp
jnz	short loc_10087382
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10087358
mov	ecx, [esp+50h+arg_8]
mov	edx, [esp+50h+var_C]
push	ecx
push	2
push	edx
push	ebp
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	ecx, [esp+50h+arg_8]
push	ecx
push	1
lea	edx, [esp+58h+var_2C]
push	19h
push	edx
mov	[esp+60h+var_18], esi
mov	[esp+60h+var_1C], 338h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
cmp	[esp+50h+var_40], 0
jz	loc_100874AE
jmp	short loc_1008739D
align 10h
mov	edi, [esp+50h+var_38]
mov	ebx, [esp+50h+var_34]
mov	esi, 1
sub	[esp+50h+var_40], esi
mov	esi, [edi]
mov	eax, [ebx]
add	edi, 4
add	ebx, 4
mov	[esp+50h+var_38], edi
mov	[esp+50h+var_30], eax
mov	[esp+50h+var_34], ebx
test	esi, esi
jz	loc_100874E1
test	eax, eax
jz	loc_100874E1
push	0Ch
push	ebp
call	PORT_ArenaZAlloc_Util
mov	edi, eax
add	esp, 8
test	edi, edi
jz	short loc_10087438
push	0Ch
push	ebp
call	PORT_ArenaZAlloc_Util
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_10087438
push	offset dword_100A6D48
push	esi
push	edi
push	ebp
call	SEC_ASN1EncodeItem_Util
mov	esi, eax
add	esp, 10h
test	esi, esi
jz	short loc_1008746F
mov	eax, [esp+50h+var_30]
push	offset dword_100A6D48
push	eax
push	ebx
push	ebp
call	SEC_ASN1EncodeItem_Util
add	esp, 10h
test	eax, eax
jz	short loc_1008746F
push	eax
push	esi
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	loc_100874A6
cmp	[esp+50h+var_40], eax
jnz	loc_10087390
jmp	loc_100874AE
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008745D
mov	ecx, [esp+50h+arg_8]
mov	edx, [esp+50h+var_C]
push	ecx
push	2
push	edx
push	0
push	356h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 356h
jmp	short loc_100874B8
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10087494
mov	ecx, [esp+50h+arg_8]
mov	edx, [esp+50h+var_C]
push	ecx
push	2
push	edx
push	0
push	3A5h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 3A5h
jmp	short loc_100874B8
mov	[esp+50h+var_3C], 0
			
mov	edx, [esp+50h+arg_4]
mov	eax, [esp+50h+var_3C]
mov	[edx], eax
			
push	0
push	ebp
call	PORT_FreeArena_Util
mov	ecx, [esp+58h+arg_8]
add	esp, 8
push	ecx
push	1
lea	edx, [esp+58h+var_2C]
push	19h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	eax, [esp+50h+arg_8]
push	eax
push	1
lea	ecx, [esp+58h+var_2C]
push	1Fh
push	ecx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_crle_1 
mov	[esp+3Ch+var_C], 19h
test	esi, esi
jz	loc_100876A8
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_100876A8
mov	ebp, [esp+3Ch+arg_8]
test	ebp, ebp
jz	loc_100876A8
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebx
push	16h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008758F
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 1E3h
jmp	loc_10087664
cmp	dword ptr [esi], 0
jz	loc_1008767E
cmp	dword ptr [edi], 0
jz	loc_1008767E
cmp	esi, edi
jnz	short loc_100875B1
mov	dword ptr [ebp+0], 1
jmp	loc_10087664
push	ebx
lea	ecx, [esp+44h+arg_0]
push	ecx
push	edi
mov	dword ptr [ebp+0], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100875E3
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 152h
jmp	loc_10087664
cmp	[esp+40h+arg_0], 16h
jnz	short loc_10087664
mov	eax, [edi]
mov	ecx, [esi]
push	eax
push	ecx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jz	short loc_10087605
			
mov	dword ptr [ebp+0], 0
jmp	short loc_10087664
mov	edx, [edi]
mov	eax, [esi]
add	edx, 0Ch
push	edx
add	eax, 0Ch
push	eax
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_100875FC
mov	edx, [edi]
mov	eax, [edx+18h]
push	ebx
lea	ecx, [esp+44h+var_30]
push	ecx
mov	ecx, [esi]
mov	edx, [ecx+18h]
push	eax
call	sub_10087250
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008764F
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 164h
jmp	short loc_10087664
cmp	[esp+40h+var_30], 1
jnz	short loc_100875FC
mov	eax, [esi+0Ch]
xor	ecx, ecx
cmp	eax, [edi+0Ch]
setz	cl
mov	[ebp+0], ecx
			
push	ebx
push	1
lea	edx, [esp+48h+var_2C]
push	19h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+arg_0], ebx
mov	[esp+3Ch+var_2C], offset aPkix_pl_crle_4 
mov	[esp+3Ch+var_C], 19h
cmp	ebp, ebx
jz	loc_100877AE
mov	esi, [esp+3Ch+arg_4]
cmp	esi, ebx
jz	loc_100877AE
mov	edi, [esp+3Ch+arg_8]
push	edi
lea	eax, [esp+40h+arg_0]
push	eax
push	14h
push	16h
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1008776C
mov	ecx, [eax+4]
push	edi
push	1
lea	edx, [esp+44h+var_2C]
push	19h
push	edx
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 130h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	edx, [esp+3Ch+arg_0]
mov	[edx], ebp
mov	eax, [esp+3Ch+arg_0]
mov	[eax+4], ebx
mov	ecx, [esp+3Ch+arg_0]
mov	[ecx+8], ebx
mov	edx, [esp+3Ch+arg_0]
mov	[edx+0Ch], ebx
mov	eax, [esp+3Ch+arg_0]
push	edi
push	1
mov	[eax+10h], ebx
mov	ecx, [esp+44h+arg_0]
lea	edx, [esp+44h+var_2C]
push	19h
push	edx
mov	[esi], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 44h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	[esp+50h+var_44], ebp
mov	[esp+50h+var_40], ebp
mov	[esp+50h+var_2C], offset aPkix_pl_crle_3 
mov	[esp+50h+var_C], 19h
cmp	[esp+50h+arg_4], ebp
jnz	short loc_10087843
mov	eax, [esp+50h+arg_8]
push	eax
push	1
lea	ecx, [esp+58h+var_2C]
push	1Fh
push	ecx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
mov	esi, [esp+50h+arg_8]
mov	edi, [esp+50h+arg_0]
lea	edx, [esp+50h+var_44]
push	esi
push	edx
call	sub_100755D0
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_10087875
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 27Dh
jmp	loc_10087978
push	ebx
cmp	edi, ebp
jz	loc_1008792F
cmp	[edi], ebp
jz	loc_1008792F
mov	eax, [edi]
push	esi
lea	edx, [esp+58h+var_40]
push	edx
push	eax
call	sub_100876E0
mov	ebx, [esp+60h+var_40]
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_1008793B
mov	eax, [edi]
mov	ecx, [eax]
push	esi		
mov	[esp+58h+var_38], ecx
mov	ecx, [eax+4]
mov	eax, [eax+8]
lea	edx, [esp+58h+var_3C]
push	edx		
push	eax		
push	ecx		
call	sub_10090F20
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_100879D8
mov	eax, [esp+54h+var_3C]
mov	[ebx+4], eax
mov	ecx, [edi]
push	esi
mov	[ebx], ecx
mov	edx, [esp+58h+var_44]
push	ebx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	loc_100879EC
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_1008791C
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
add	edi, 4
mov	[esp+54h+var_40], ebp
cmp	[edi], ebp
jnz	loc_10087886
mov	eax, [esp+54h+var_28]
			
mov	edx, [esp+54h+arg_4]
mov	ecx, [esp+54h+var_44]
mov	[edx], ecx
jmp	short loc_10087977
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 130h
			
cmp	ebx, ebp
jz	short loc_10087977
push	esi
push	ebx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebp
jz	short loc_10087973
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebp
mov	eax, [esp+54h+var_28]
			
pop	ebx
cmp	[esp+50h+var_18], ebp
jnz	short loc_1008798E
cmp	eax, ebp
jnz	short loc_1008798E
cmp	[esp+50h+var_14], ebp
jnz	short loc_1008798E
cmp	[esp+50h+var_4], ebp
jz	short loc_100879BF
			
mov	eax, [esp+50h+var_44]
cmp	eax, ebp
jz	short loc_100879BF
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_100879BB
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_44], ebp
			
push	esi
push	1
lea	ecx, [esp+58h+var_2C]
push	19h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 1Fh
jmp	loc_1008794A
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 278h
jmp	loc_1008794A
			
sub	esp, 2Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_crle_7 
mov	[esp+38h+var_C], 19h
test	esi, esi
jz	loc_10087B2A
mov	ebp, [esp+38h+arg_4]
test	ebp, ebp
jz	loc_10087B2A
cmp	dword ptr [esi+10h], 0
mov	edi, [esp+38h+arg_8]
jnz	loc_10087B0B
cmp	dword ptr [esi+0Ch], 0
jnz	loc_10087B0B
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10087AA0
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	19h
push	eax
mov	[esp+48h+var_24], 0
mov	[esp+48h+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
cmp	dword ptr [esi+10h], 0
mov	[esp+38h+var_8], esi
jnz	short loc_10087ADA
cmp	dword ptr [esi+0Ch], 0
jnz	short loc_10087ADA
mov	edx, [esi]
lea	ecx, [esp+38h+arg_0]
push	ecx
push	edx
call	CERT_FindCRLEntryReasonExten
add	esp, 8
test	eax, eax
jnz	short loc_10087ACD
mov	eax, [esp+38h+arg_0]
mov	[esi+0Ch], eax
jmp	short loc_10087AD4
mov	dword ptr [esi+10h], 1
cmp	[esp+38h+var_8], esi
jnz	short loc_10087B0B
			
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10087B03
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	[esp+38h+var_8], 0
			
mov	edx, [esi+0Ch]
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	19h
push	eax
mov	[ebp+0], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_crle_8 
mov	[esp+40h+var_C], 19h
cmp	esi, ebx
jz	loc_10087CE5
cmp	[esi], ebx
jz	loc_10087CE5
mov	ebp, [esp+40h+arg_4]
cmp	ebp, ebx
jz	loc_10087CE5
mov	edi, [esp+40h+arg_8]
cmp	[esi+8], ebx
jnz	loc_10087C85
push	edi
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10087C01
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	[esp+40h+var_8], esi
cmp	[esi+8], ebx
jnz	short loc_10087C5C
mov	ecx, [esi]
mov	eax, [ecx+18h]
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
call	sub_10096C20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10087C4F
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 204h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	ecx, [esp+40h+var_30]
mov	[esi+8], ecx
cmp	[esp+40h+var_8], esi
jnz	short loc_10087C85
push	edi
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10087C81
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
mov	[esp+40h+var_8], ebx
			
mov	esi, [esi+8]
cmp	esi, ebx
jz	short loc_10087CC8
push	edi
push	ebp
push	esi
call	sub_100958C0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10087CCB
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2C7h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	[ebp+0], ebx
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 78h
push	ebp
mov	ebp, [esp+7Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+84h+var_2C]
rep movsd
mov	[esp+84h+var_5C], 0
mov	[esp+84h+var_2C], offset aPkix_pl_crle_5 
mov	[esp+84h+var_C], 19h
test	ebp, ebp
jz	loc_100880D1
cmp	[esp+84h+arg_4], 0
jz	loc_100880D1
push	ebx
mov	ebx, [esp+88h+arg_8]
push	ebx
push	16h
push	ebp
call	sub_10072630
xor	edx, edx
add	esp, 0Ch
mov	[esp+88h+var_28], eax
cmp	eax, edx
jz	short loc_10087D9D
mov	eax, [eax+4]
mov	[esp+88h+var_10], eax
mov	[esp+88h+var_1C], 2F0h
jmp	loc_100880B7
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+88h+var_58]
rep movsd
mov	[esp+88h+var_74], edx
mov	[esp+88h+var_60], edx
mov	[esp+88h+var_68], edx
mov	[esp+88h+var_70], edx
mov	[esp+88h+var_6C], edx
mov	[esp+88h+var_78], edx
mov	[esp+88h+var_64], edx
mov	[esp+88h+var_58], offset aPkix_pl_crle_6 
mov	[esp+88h+var_38], 19h
cmp	[ebp+4], edx
jz	loc_1008806D
cmp	[ebp+0], edx
jz	loc_1008806D
push	ebx		
lea	ecx, [esp+8Ch+var_68]
push	ecx		
push	edx		
push	offset aSerialnumberSR 
push	edx		
call	sub_10097D90
xor	esi, esi
add	esp, 14h
mov	[esp+88h+var_54], eax
cmp	eax, esi
jz	short loc_10087E1E
mov	edx, [eax+4]
mov	[esp+88h+var_3C], edx
mov	[esp+88h+var_48], 3CFh
jmp	loc_10087F64
mov	ecx, [ebp+4]
push	ebx
lea	eax, [esp+8Ch+var_70]
push	eax
push	ecx
call	sub_100962D0
add	esp, 0Ch
mov	[esp+88h+var_54], eax
cmp	eax, esi
jz	short loc_10087E4C
mov	edx, [eax+4]
mov	[esp+88h+var_3C], edx
mov	[esp+88h+var_48], 23h
jmp	loc_10087F64
mov	ecx, [ebp+0]
push	ebx
lea	eax, [esp+8Ch+var_6C]
push	eax
add	ecx, 0Ch
push	ecx
call	sub_10088550
add	esp, 0Ch
mov	[esp+88h+var_54], eax
cmp	eax, esi
jz	short loc_10087E7D
mov	edx, [eax+4]
mov	[esp+88h+var_3C], edx
mov	[esp+88h+var_48], 186h
jmp	loc_10087F64
push	ebx
lea	eax, [esp+8Ch+var_74]
push	eax
push	ebp
call	sub_10087B60
add	esp, 0Ch
mov	[esp+88h+var_54], eax
cmp	eax, esi
jz	short loc_10087EA8
mov	ecx, [eax+4]
mov	[esp+88h+var_3C], ecx
mov	[esp+88h+var_48], 166h
jmp	loc_10087F64
mov	eax, [esp+88h+var_74]
push	ebx		
cmp	eax, esi
jz	short loc_10087EC6
lea	edx, [esp+8Ch+var_78]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_10087EDF
lea	eax, [esp+8Ch+var_78]
push	eax		
push	esi		
push	offset aNull	
push	esi		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+88h+var_54], eax
cmp	eax, esi
jz	short loc_10087EF4
mov	edx, [eax+4]
mov	[esp+88h+var_3C], edx
mov	[esp+88h+var_48], ecx
jmp	short loc_10087F64
push	ebx
lea	eax, [esp+8Ch+var_64]
push	eax
push	ebp
call	sub_10087A00
add	esp, 0Ch
mov	[esp+88h+var_54], eax
cmp	eax, esi
jz	short loc_10087F1C
mov	ecx, [eax+4]
mov	[esp+88h+var_3C], ecx
mov	[esp+88h+var_48], 167h
jmp	short loc_10087F64
mov	edx, [esp+88h+var_78]
mov	eax, [esp+88h+var_6C]
mov	ecx, [esp+88h+var_64]
push	edx
mov	edx, [esp+8Ch+var_70]
push	eax
mov	eax, [esp+90h+var_68]
push	ecx
push	edx
push	eax
lea	ecx, [esp+9Ch+var_60]
push	ebx
push	ecx
call	sub_10098590
add	esp, 1Ch
mov	[esp+88h+var_54], eax
cmp	eax, esi
jz	short loc_10087F5C
mov	edx, [eax+4]
mov	[esp+88h+var_3C], edx
mov	[esp+88h+var_48], 3CDh
jmp	short loc_10087F64
mov	eax, [esp+88h+var_60]
mov	[esp+88h+var_5C], eax
			
mov	eax, [esp+88h+var_74]
cmp	eax, esi
jz	short loc_10087F95
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+88h+var_50], eax
cmp	eax, esi
jz	short loc_10087F91
push	ebx
push	eax
lea	ecx, [esp+90h+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+88h+var_50], esi
mov	[esp+88h+var_74], esi
mov	eax, [esp+88h+var_70]
cmp	eax, esi
jz	short loc_10087FC6
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+88h+var_50], eax
cmp	eax, esi
jz	short loc_10087FC2
push	ebx
push	eax
lea	edx, [esp+90h+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+88h+var_50], esi
mov	[esp+88h+var_70], esi
mov	eax, [esp+88h+var_6C]
cmp	eax, esi
jz	short loc_10087FF7
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+88h+var_50], eax
cmp	eax, esi
jz	short loc_10087FF3
push	ebx
push	eax
lea	eax, [esp+90h+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+88h+var_50], esi
mov	[esp+88h+var_6C], esi
mov	eax, [esp+88h+var_78]
cmp	eax, esi
jz	short loc_10088028
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+88h+var_50], eax
cmp	eax, esi
jz	short loc_10088024
push	ebx
push	eax
lea	ecx, [esp+90h+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+88h+var_50], esi
mov	[esp+88h+var_78], esi
mov	eax, [esp+88h+var_68]
cmp	eax, esi
jz	short loc_10088059
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+88h+var_50], eax
cmp	eax, esi
jz	short loc_10088055
push	ebx
push	eax
lea	edx, [esp+90h+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+88h+var_50], esi
mov	[esp+88h+var_68], esi
push	ebx
push	1
lea	eax, [esp+90h+var_58]
push	19h
push	eax
call	sub_100781E0
add	esp, 10h
jmp	short loc_10088091
			
push	ebx
push	1
lea	ecx, [esp+90h+var_58]
push	1Fh
push	ecx
mov	[esp+98h+var_44], 1
mov	[esp+98h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
xor	esi, esi
mov	[esp+88h+var_28], eax
cmp	eax, esi
jz	short loc_100880AA
mov	edx, [eax+4]
mov	[esp+88h+var_10], edx
mov	[esp+88h+var_1C], 168h
jmp	short loc_100880B7
mov	eax, [esp+88h+arg_4]
mov	ecx, [esp+88h+var_5C]
mov	[eax], ecx
			
push	ebx
push	1
lea	edx, [esp+90h+var_2C]
push	19h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 78h
retn
			
mov	eax, [esp+84h+arg_8]
push	eax
push	1
lea	ecx, [esp+8Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+94h+var_18], 1
mov	[esp+94h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 78h
retn
align 10h
sub	esp, 34h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_pl_crle_9 
mov	[esp+40h+var_C], 19h
test	edi, edi
jz	loc_10088314
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_10088314
mov	esi, [esp+40h+arg_8]
push	esi
push	16h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10088196
mov	eax, [eax+4]
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2F0h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	eax, [edi]
push	esi
test	eax, eax
jnz	short loc_100881AB
push	1
push	1Fh
lea	ecx, [esp+4Ch+var_2C]
push	ecx
jmp	loc_10088322
mov	ecx, [eax+10h]
test	ecx, ecx
jnz	short loc_100881C0
push	1
push	1Fh
lea	edx, [esp+4Ch+var_2C]
push	edx
jmp	loc_10088322
mov	eax, [eax+14h]
lea	edx, [esp+44h+arg_0]
push	edx
push	eax
push	ecx
call	sub_10072650
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10088202
mov	ecx, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], ecx
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+var_1C], 1A8h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	eax, [edi+4]
push	esi
lea	edx, [esp+44h+var_34]
push	edx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10088244
mov	ecx, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], ecx
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	edx, [esp+40h+var_34]
mov	eax, [edi]
shl	edx, 7
add	[esp+40h+arg_0], edx
xor	ecx, ecx
mov	[esp+40h+var_34], ecx
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_100882A0
lea	ecx, [esp+40h+var_34]
push	esi
push	ecx
call	sub_10087020
add	esp, 8
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008829C
mov	edx, [eax+4]
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 165h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	ecx, [esp+40h+var_34]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
shl	ecx, 7
add	[esp+48h+arg_0], ecx
push	edi
call	sub_10087A00
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100882E6
mov	ecx, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], ecx
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+var_1C], 167h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	eax, [esp+40h+arg_0]
mov	edx, [esp+40h+var_30]
push	esi
push	1
lea	eax, [eax+edx*8+1848h]
lea	ecx, [esp+48h+var_2C]
push	19h
push	ecx
mov	[esp+50h+arg_0], eax
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
push	1Fh
lea	eax, [esp+4Ch+var_2C]
push	eax
			
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB538
push	1
mov	[esp+60h+var_50], offset aCrlentry 
mov	[esp+60h+var_48], 14h
mov	[esp+60h+var_44], offset sub_10086F10
mov	[esp+60h+var_40], offset sub_10087510
mov	[esp+60h+var_3C], offset sub_10088110
mov	[esp+60h+var_38], offset sub_10087D20
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	19h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_crlent 
mov	[esp+68h+var_C], 19h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_date_g 
mov	[esp+30h+var_C], 1Ch
pop	esi
test	ecx, ecx
jz	short loc_1008844B
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1008844B
mov	edx, [ecx]
mov	[eax], edx
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+4]
push	edx
push	1
mov	[eax+4], ecx
lea	eax, [esp+34h+var_2C]
push	1Ch
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_8]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_date_c 
mov	[esp+38h+var_C], 1Ch
test	edi, edi
jnz	short loc_100884E1
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	esi, [esp+38h+arg_C]
push	esi
lea	edx, [esp+3Ch+var_30]
push	edx
push	8
push	18h
call	sub_100952A0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10088510
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 141h
jmp	short loc_1008852B
mov	edx, [esp+38h+var_30]
mov	ecx, [esp+38h+arg_0]
mov	eax, [esp+38h+arg_4]
mov	[edx], ecx
mov	ecx, [esp+38h+var_30]
mov	[ecx+4], eax
mov	edx, [esp+38h+var_30]
mov	[edi], edx
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	1Ch
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
xor	ebx, ebx
rep movsd
mov	[esp+38h+var_2C], offset aPkix_pl_date_t 
mov	[esp+38h+var_C], 1Ch
test	eax, eax
jz	loc_100886A4
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_100886A4
mov	ecx, [eax]
sub	ecx, 0Bh
jz	short loc_10088615
dec	ecx
jz	short loc_100885D0
mov	eax, dword_100BAE9C
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_100885BB
push	esi
push	2
push	1Ch
push	ebx
push	40Ah
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
mov	[esp+38h+var_1C], 40Ah
jmp	loc_10088684
push	eax
call	DER_GeneralizedDayToAscii_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1008865A
mov	eax, dword_100BAE9C
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10088603
mov	ecx, [esp+38h+var_C]
push	esi
push	2
push	ecx
push	ebx
push	191h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
mov	[esp+38h+var_1C], 191h
jmp	short loc_10088684
push	eax
call	DER_UTCDayToAscii_Util
mov	ebx, eax
add	esp, 4
test	ebx, ebx
jnz	short loc_1008865A
mov	eax, dword_100BAE9C
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_10088648
mov	edx, [esp+38h+var_C]
push	esi
push	2
push	edx
push	ebx
push	193h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
mov	[esp+38h+var_1C], 193h
jmp	short loc_10088684
			
mov	esi, [esp+38h+arg_8]
push	esi		
push	edi		
push	0		
push	ebx		
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10088684
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 3CFh
			
push	ebx
call	ds:PR_Free
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	1Ch
push	ecx
call	sub_100781E0
add	esp, 14h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_date_d 
mov	[esp+34h+var_C], 1Ch
test	eax, eax
jnz	short loc_10088739
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	18h
push	eax
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10088760
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2F2h
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Ch
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 38h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_0]
mov	[esp+44h+var_38], 0
mov	[esp+44h+var_34], 0
mov	[esp+44h+var_30], 0
mov	[esp+44h+var_2C], offset aPkix_pl_date_3 
mov	[esp+44h+var_C], 1Ch
test	esi, esi
jz	loc_1008889E
mov	ebx, [esp+44h+arg_4]
test	ebx, ebx
jz	loc_1008889E
mov	edi, [esp+44h+arg_8]
push	edi
push	18h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_100887FB
mov	eax, [eax+4]
mov	[esp+44h+var_1C], 2F2h
jmp	short loc_1008886B
mov	ecx, [esi+4]
mov	edx, [esi]
push	ecx
push	edx
lea	eax, [esp+4Ch+var_38]
push	eax
push	0
call	DER_EncodeTimeChoice_Util
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_10088849
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10088837
mov	ecx, [esp+44h+var_C]
push	edi
push	2
push	ecx
push	0
push	190h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 190h
jmp	short loc_1008886F
push	edi
lea	edx, [esp+48h+var_38]
push	ebx
push	edx
call	sub_10088550
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1008886F
mov	eax, [eax+4]
mov	[esp+44h+var_1C], 186h
mov	[esp+44h+var_10], eax
			
cmp	[esp+44h+var_34], 0
jz	short loc_10088885
lea	ecx, [esp+44h+var_38]
push	0
push	ecx
call	SECITEM_FreeItem_Util
add	esp, 8
push	edi
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Ch
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 38h
retn
			
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_date_h 
mov	[esp+38h+var_C], 1Ch
test	esi, esi
jz	loc_100889AE
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_100889AE
mov	edi, [esp+38h+arg_8]
push	edi
push	18h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008894E
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	1Ch
push	ecx
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2F2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
push	edi
lea	ecx, [esp+3Ch+arg_0]
push	ecx
push	8
push	esi
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008898F
mov	edx, [eax+4]
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	1Ch
push	ecx
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 20Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	eax, [esp+38h+arg_0]
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	1Ch
push	ecx
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_date_4 
mov	[esp+38h+var_C], 1Ch
test	edi, edi
jz	loc_10088A94
mov	esi, [esp+38h+arg_4]
test	esi, esi
jz	short loc_10088A94
mov	ebp, [esp+38h+arg_8]
test	ebp, ebp
jz	short loc_10088A94
push	ebx
mov	ebx, [esp+3Ch+arg_C]
push	ebx
push	18h
push	esi
push	edi
call	sub_100724E0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10088A4D
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 11h
jmp	short loc_10088A7A
mov	eax, [edi]
mov	ecx, [esi]
mov	edi, [edi+4]
mov	esi, [esi+4]
cmp	eax, ecx
jnz	short loc_10088A63
cmp	edi, esi
jnz	short loc_10088A65
xor	eax, eax
jmp	short loc_10088A77
cmp	edi, esi
jg	short loc_10088A72
jl	short loc_10088A6D
cmp	eax, ecx
jnb	short loc_10088A72
or	eax, 0FFFFFFFFh
jmp	short loc_10088A77
			
mov	eax, 1
			
mov	[ebp+0], eax
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	1Ch
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_C]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_2C], offset aPkix_pl_date_e 
mov	[esp+3Ch+var_C], 1Ch
test	edi, edi
jz	loc_10088BDF
mov	ebp, [esp+3Ch+arg_4]
test	ebp, ebp
jz	loc_10088BDF
mov	ebx, [esp+3Ch+arg_8]
test	ebx, ebx
jz	loc_10088BDF
mov	esi, [esp+3Ch+arg_C]
push	esi
push	18h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10088B5C
mov	eax, [eax+4]
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	1Ch
push	edx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 1E5h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
cmp	edi, ebp
jnz	short loc_10088B80
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	1Ch
push	edx
mov	dword ptr [ebx], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
push	esi
push	ebx
push	ebp
push	edi
mov	dword ptr [ebx], 0
call	sub_100889E0
xor	edi, edi
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, edi
jz	short loc_10088BC5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_10088BC1
push	esi
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
mov	[esp+3Ch+var_28], edi
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	1Ch
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Ch
push	ecx
mov	[esp+44h+var_2C], offset aPkix_crldp_reg 
mov	[esp+44h+var_C], 1Bh
mov	dword_100BB580,	offset aDate 
mov	dword_100BB588,	8
mov	dword_100BB58C,	offset sub_100886E0
mov	dword_100BB590,	offset sub_10088AD0
mov	dword_100BB594,	offset sub_100888D0
mov	dword_100BB598,	offset sub_10088780
mov	dword_100BB59C,	offset sub_100889E0
mov	dword_100BB5A0,	offset sub_10072730
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 3Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_4]
xor	ebx, ebx
mov	[esp+48h+var_3C], ebx
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_2C], offset aPkix_pl_date_0 
mov	[esp+48h+var_C], 1Ch
cmp	edi, ebx
jnz	short loc_10088D15
mov	eax, [esp+48h+arg_8]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
mov	eax, [esp+48h+arg_0]
mov	esi, [esp+48h+arg_8]
cmp	eax, ebx
jnz	short loc_10088D61
call	ds:PR_Now
mov	[esp+48h+var_34], eax
mov	[esp+48h+var_30], edx
push	esi
lea	eax, [esp+4Ch+var_3C]
push	eax
push	8
push	18h
call	sub_100952A0
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	loc_10088DD7
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 141h
jmp	loc_10088DF2
push	esi
lea	edx, [esp+4Ch+arg_4]
push	edx
lea	ecx, [esp+50h+var_38]
push	ecx
push	ebx
push	eax
call	sub_10098140
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10088D8F
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 3D1h
jmp	short loc_10088DF2
mov	eax, [esp+48h+var_38]
push	eax
lea	ecx, [esp+4Ch+var_34]
push	ecx
call	DER_AsciiToTime_Util
add	esp, 8
test	eax, eax
jz	short loc_10088D2F
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10088DC5
mov	edx, [esp+48h+var_C]
push	esi
push	2
push	edx
push	ebx
push	18Ch
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 18Ch
jmp	short loc_10088DF2
mov	edx, [esp+48h+var_34]
mov	eax, [esp+48h+var_3C]
mov	[eax], edx
mov	ecx, [esp+48h+var_30]
mov	edx, [esp+48h+var_3C]
mov	[edx+4], ecx
mov	eax, [esp+48h+var_3C]
mov	[edi], eax
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_10088E23
push	esi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10088E1F
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_38], ebx
push	esi
push	1
lea	edx, [esp+50h+var_2C]
push	1Ch
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
align 10h
			
sub	esp, 30h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_2C], offset aPkix_pl_date_1 
mov	[esp+3Ch+var_C], 1Ch
cmp	[esp+3Ch+arg_4], ebp
jnz	short loc_10088E9F
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	edx, [esp+3Ch+arg_0]
push	ebx
push	edx
call	ds:PR_SecondsToInterval
mov	ebx, eax
call	ds:PR_Now
mov	esi, eax
add	esi, ebx
mov	ebx, [esp+44h+arg_8]
push	ebx
lea	eax, [esp+48h+var_30]
push	eax
mov	edi, edx
push	8
push	18h
adc	edi, ebp
call	sub_100952A0
add	esp, 14h
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10088EEA
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 141h
jmp	short loc_10088F01
mov	edx, [esp+40h+var_30]
mov	[edx], esi
mov	eax, [esp+40h+var_30]
mov	edx, [esp+40h+arg_4]
mov	[eax+4], edi
mov	ecx, [esp+40h+var_30]
mov	[edx], ecx
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	1Ch
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 5Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_58]
rep movsd
mov	edi, [esp+64h+arg_8]
mov	esi, [esp+64h+arg_C]
mov	[esp+64h+var_2C], offset aPkix_pl_date_2 
mov	[esp+64h+var_C], 1Ch
mov	[esp+64h+var_5C], 0
mov	[esp+64h+var_58], offset aPkix_pl_date_c 
mov	[esp+64h+var_38], 1Ch
push	esi
test	edi, edi
jnz	short loc_10088F95
push	1
push	1Fh
lea	eax, [esp+70h+var_58]
mov	[esp+70h+var_44], 1
mov	[esp+70h+var_48], 2BCh
push	eax
jmp	short loc_10088FE4
lea	ecx, [esp+68h+var_5C]
push	ecx
push	8
push	18h
call	sub_100952A0
add	esp, 10h
mov	[esp+64h+var_54], eax
test	eax, eax
jz	short loc_10088FBF
mov	edx, [eax+4]
mov	[esp+64h+var_3C], edx
mov	[esp+64h+var_48], 141h
jmp	short loc_10088FDA
mov	ecx, [esp+64h+var_5C]
mov	eax, [esp+64h+arg_0]
mov	edx, [esp+64h+arg_4]
mov	[ecx], eax
mov	eax, [esp+64h+var_5C]
mov	[eax+4], edx
mov	ecx, [esp+64h+var_5C]
mov	[edi], ecx
push	esi
push	1
push	1Ch
lea	edx, [esp+70h+var_58]
push	edx
call	sub_100781E0
add	esp, 10h
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10089003
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 17Fh
push	esi
push	1
lea	ecx, [esp+6Ch+var_2C]
push	1Ch
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 5Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_gene_6 
mov	[esp+30h+var_C], 21h
pop	esi
test	eax, eax
jz	short loc_1008907C
mov	ecx, [esp+2Ch+arg_4]
test	ecx, ecx
jz	short loc_1008907C
mov	eax, [eax]
test	eax, eax
jz	short loc_1008907C
mov	eax, [eax+4]
mov	[ecx], eax
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	21h
push	edx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+34h+var_2C]
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 48h
push	ebx
push	ebp
mov	ebp, [esp+50h+arg_4]
push	esi
push	edi
mov	ebx, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+58h+var_2C]
rep movsd
mov	[esp+58h+var_48], 0
mov	[esp+58h+var_2C], offset aPkix_pl_othern 
mov	[esp+58h+var_C], 21h
test	ebx, ebx
jz	loc_10089279
mov	esi, [esp+58h+arg_0]
test	esi, esi
jz	loc_10089279
push	ebp
lea	eax, [esp+5Ch+var_48]
push	eax
push	18h
call	sub_10094350
xor	edi, edi
add	esp, 0Ch
mov	[esp+58h+var_28], eax
cmp	eax, edi
jz	short loc_1008912B
mov	ecx, [eax+4]
mov	eax, [esp+58h+var_48]
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 299h
jmp	loc_100891CC
mov	eax, [esp+58h+var_48]
lea	edx, [ebx+4]
push	edx
push	eax
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10089177
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_10089161
mov	ecx, [esp+58h+var_C]
push	ebp
push	2
push	ecx
push	edi
push	338h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	eax, [esp+58h+var_48]
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 338h
jmp	short loc_100891CC
mov	edx, [esp+58h+var_48]
add	ebx, 10h
push	ebx
add	edx, 0Ch
push	edx
push	edi
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_100891C6
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_10089161
mov	ecx, [esp+58h+var_C]
push	ebp
push	2
push	ecx
push	edi
push	338h
push	eax
call	sub_10074820
mov	eax, [esp+70h+var_48]
add	esp, 18h
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 338h
jmp	short loc_100891CC
mov	eax, [esp+58h+var_48]
mov	[esi], eax
			
cmp	eax, edi
jz	loc_1008925F
cmp	[esp+58h+var_18], edi
jnz	short loc_100891EC
cmp	[esp+58h+var_28], edi
jnz	short loc_100891EC
cmp	[esp+58h+var_14], edi
jnz	short loc_100891EC
cmp	[esp+58h+var_4], edi
jz	short loc_1008925F
			
mov	edx, [eax]
mov	[esp+58h+var_44], edx
mov	ecx, [eax+4]
mov	[esp+58h+var_40], ecx
mov	edx, [eax+8]
mov	[esp+58h+var_3C], edx
mov	ecx, [eax+0Ch]
mov	[esp+58h+var_38], ecx
mov	edx, [eax+10h]
mov	[esp+58h+var_34], edx
mov	eax, [eax+14h]
lea	ecx, [esp+58h+var_44]
push	edi
push	ecx
mov	[esp+60h+var_30], eax
call	SECITEM_FreeItem_Util
lea	edx, [esp+60h+var_38]
push	edi
push	edx
call	SECITEM_FreeItem_Util
mov	eax, [esp+68h+var_48]
add	esp, 10h
cmp	eax, edi
jz	short loc_1008925B
push	ebp
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+58h+var_24], eax
cmp	eax, edi
jz	short loc_1008925B
push	ebp
push	eax
lea	eax, [esp+60h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+58h+var_24], edi
			
mov	[esp+58h+var_48], edi
			
push	ebp
push	1
lea	ecx, [esp+60h+var_2C]
push	21h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 48h
retn
			
push	ebp
push	1
lea	edx, [esp+60h+var_2C]
push	1Fh
push	edx
mov	[esp+68h+var_18], 1
mov	[esp+68h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 48h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_direct 
mov	[esp+3Ch+var_C], 21h
test	eax, eax
jz	short loc_1008933F
test	ebp, ebp
jz	short loc_1008933F
push	ebx
lea	ecx, [esp+40h+var_30]
push	ecx
add	eax, 4
push	eax
push	0
call	sub_1008FCA0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10089317
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 42Dh
jmp	short loc_1008931E
mov	eax, [esp+3Ch+var_30]
mov	[ebp+0], eax
push	0
call	ds:PR_Free
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	21h
push	ecx
call	sub_100781E0
add	esp, 14h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
			
sub	esp, 3Ch
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	esi, [esp+48h+arg_0]
mov	[esp+48h+var_3C], ebp
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_2C], offset aPkix_pl_genera 
mov	[esp+48h+var_C], 21h
cmp	esi, ebp
jz	loc_100895FE
cmp	[esp+48h+arg_4], ebp
jz	loc_100895FE
push	ebx
mov	ebx, [esp+4Ch+arg_8]
push	ebx
lea	eax, [esp+50h+var_3C]
push	eax
push	18h
push	1Dh
call	sub_100952A0
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_100893F1
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 141h
jmp	loc_100895B3
mov	edi, [esi]
push	esi
call	sub_10043240
add	esp, 4
cmp	eax, ebp
jnz	short loc_1008942A
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1008941D
mov	edx, [esp+4Ch+var_C]
push	ebx
push	2
push	edx
push	ebp
push	67h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_1C], 67h
jmp	loc_100895AB
mov	ecx, [esp+4Ch+var_3C]
mov	[ecx], eax
mov	edx, [esp+4Ch+var_3C]
mov	[edx+4], edi
mov	eax, [esp+4Ch+var_3C]
mov	[eax+8], ebp
mov	ecx, [esp+4Ch+var_3C]
mov	[ecx+10h], ebp
mov	edx, [esp+4Ch+var_3C]
mov	[edx+14h], ebp
mov	eax, [esp+4Ch+var_3C]
mov	[eax+0Ch], ebp
lea	eax, [edi-1]	
cmp	eax, 8
ja	loc_10089583	
jmp	ds:off_1008962C[eax*4] 
			
lea	ecx, [esp+4Ch+var_38] 
push	ebx
push	ecx
mov	eax, esi
call	sub_100890B0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_10089492
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 337h
jmp	loc_100895B3
mov	eax, [esp+4Ch+var_3C]
mov	ecx, [esp+4Ch+var_38]
mov	[eax+10h], ecx
mov	edx, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+var_3C]
mov	[edx], eax
jmp	loc_100895E0
			
lea	edx, [esp+4Ch+var_34] 
push	edx
mov	eax, esi
call	sub_100892B0
add	esp, 4
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_100894D7
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 195h
jmp	loc_100895B3
mov	edx, [esp+4Ch+var_34]
mov	ecx, [esp+4Ch+var_3C]
mov	[ecx+8], edx
mov	edx, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+var_3C]
mov	[edx], eax
jmp	loc_100895E0
			
push	ebx		
lea	eax, [esp+50h+var_30]
push	eax
add	esi, 4
push	esi
call	sub_10096A10
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1008951F
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 32Eh
jmp	loc_100895B3
mov	edx, [esp+4Ch+var_3C]
mov	eax, [esp+4Ch+var_30]
mov	[edx+0Ch], eax
mov	edx, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+var_3C]
mov	[edx], eax
jmp	loc_100895E0
			
add	esi, 4		
push	esi
call	SECITEM_DupItem_Util
mov	ecx, [esp+50h+var_3C]
mov	[ecx+14h], eax
mov	edx, [esp+50h+var_3C]
add	esp, 4
cmp	[edx+14h], ebp
jnz	loc_1008949D
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_10089579
mov	ecx, [esp+4Ch+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_1C], 338h
jmp	short loc_100895AB
mov	eax, dword_100BAE9C 
cmp	eax, ebp
jz	short loc_100895A3
mov	ecx, [esp+4Ch+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	2A6h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_1C], 2A6h
			
mov	[esp+4Ch+var_18], 1
			
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebp
jz	short loc_100895E4
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_100895E0
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
			
mov	[esp+4Ch+var_3C], ebp
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	21h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
			
mov	ecx, [esp+48h+arg_8]
push	ecx
push	1
lea	edx, [esp+50h+var_2C]
push	1Fh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
align 4
dd offset loc_10089539	
dd offset loc_10089539
dd offset loc_10089539
dd offset loc_100894AC
dd offset loc_10089539
dd offset loc_10089539
dd offset loc_10089539
dd offset loc_100894F1
sub	esp, 44h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	esi, [esp+50h+arg_0]
xor	ebx, ebx
mov	[esp+50h+var_2C], offset aPkix_pl_gene_1 
mov	[esp+50h+var_C], 21h
cmp	esi, ebx
jnz	short loc_100896AD
mov	eax, [esp+50h+arg_4]
push	eax
push	1
lea	ecx, [esp+58h+var_2C]
push	1Fh
push	ecx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 44h
retn
mov	edi, [esp+50h+arg_4]
push	edi
push	1Dh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100896D9
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 2F6h
jmp	loc_100897D2
mov	eax, [esi+14h]
push	1
push	eax
call	SECITEM_FreeItem_Util
mov	eax, [esi+10h]
add	esp, 8
mov	[esi+14h], ebx
cmp	eax, ebx
jz	short loc_10089765
mov	ecx, [eax]
mov	[esp+50h+var_44], ecx
mov	edx, [eax+4]
mov	[esp+50h+var_40], edx
mov	ecx, [eax+8]
mov	[esp+50h+var_3C], ecx
mov	edx, [eax+0Ch]
mov	[esp+50h+var_38], edx
mov	ecx, [eax+10h]
mov	[esp+50h+var_34], ecx
mov	edx, [eax+14h]
lea	eax, [esp+50h+var_44]
push	ebx
push	eax
mov	[esp+58h+var_30], edx
call	SECITEM_FreeItem_Util
lea	ecx, [esp+58h+var_38]
push	ebx
push	ecx
call	SECITEM_FreeItem_Util
mov	eax, [esi+10h]
add	esp, 10h
cmp	eax, ebx
jz	short loc_10089762
push	edi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1008975F
push	edi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esi+10h], ebx
mov	[esi+10h], ebx
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_10089774
push	eax
call	sub_10041C80
add	esp, 4
mov	eax, [esi+8]
cmp	eax, ebx
jz	short loc_100897A3
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_100897A0
push	edi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esi+8], ebx
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_100897D2
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_100897CF
push	edi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esi+0Ch], ebx
			
push	edi
push	1
lea	edx, [esp+58h+var_2C]
push	21h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 44h
retn
align 10h
sub	esp, 5Ch
push	ebp
mov	ebp, [esp+60h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+68h+var_2C]
rep movsd
mov	[esp+68h+var_5C], 0
mov	[esp+68h+var_2C], offset aPkix_pl_gene_2 
mov	[esp+68h+var_C], 21h
test	ebp, ebp
jz	loc_10089B01
cmp	[esp+68h+arg_4], 0
jz	loc_10089B01
push	ebx
mov	ebx, [esp+6Ch+arg_8]
push	ebx
push	1Dh
push	ebp
call	sub_10072630
add	esp, 0Ch
mov	[esp+6Ch+var_28], eax
test	eax, eax
jz	short loc_10089862
mov	eax, [eax+4]
mov	[esp+6Ch+var_10], eax
mov	[esp+6Ch+var_1C], 2F6h
jmp	loc_10089AE7
mov	eax, [ebp+4]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+6Ch+var_58]
dec	eax
rep movsd
mov	[esp+6Ch+arg_0], 0
mov	[esp+6Ch+var_58], offset aPkix_pl_gene_3 
mov	[esp+6Ch+var_38], 21h
cmp	eax, 8		
ja	loc_10089A51	
jmp	ds:off_10089B30[eax*4] 
			
cmp	dword ptr [ebp+14h], 0 
push	ebx		
jnz	short loc_100898C3
push	1
push	1Fh
lea	ecx, [esp+78h+var_58]
mov	[esp+78h+var_44], 1
mov	[esp+78h+var_48], 2BCh
push	ecx
jmp	loc_10089ABC
mov	ebp, [ebp+14h]
mov	eax, [ebp+8]
mov	ecx, [ebp+4]
lea	edx, [esp+70h+var_5C]
push	edx		
push	eax		
push	ecx		
push	1		
call	sub_10097D90
add	esp, 14h
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	loc_10089A7F
mov	edx, [eax+4]
mov	[esp+6Ch+var_3C], edx
mov	[esp+6Ch+var_48], 3CFh
jmp	loc_10089A7F
			
push	ebx		
lea	eax, [esp+70h+var_5C]
push	eax		
push	0		
push	offset aEdipartynameDe 
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	loc_10089A7F
mov	ecx, [eax+4]
mov	[esp+6Ch+var_3C], ecx
mov	[esp+6Ch+var_48], 3CFh
jmp	loc_10089A7F
			
push	ebx		
lea	edx, [esp+70h+var_5C]
push	edx		
push	0		
push	offset aX400addressDer 
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	loc_10089A7F
mov	eax, [eax+4]
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_48], 3CFh
jmp	loc_10089A7F
			
mov	edx, [ebp+14h]	
push	ebx
lea	ecx, [esp+70h+arg_0]
push	ecx
push	edx
call	sub_10092330
add	esp, 0Ch
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	short loc_10089999
mov	eax, [eax+4]
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_48], 246h
jmp	loc_10089A7F
			
mov	edx, [esp+6Ch+arg_0]
push	ebx
lea	ecx, [esp+70h+var_5C]
push	ecx
push	0
push	edx
jmp	short loc_10089941
			
mov	ebp, [ebp+10h]	
push	ebx
test	ebp, ebp
jnz	short loc_100899CE
push	1
push	1Fh
lea	ecx, [esp+78h+var_58]
mov	[esp+78h+var_44], 1
mov	[esp+78h+var_48], 2BCh
push	ecx
jmp	loc_10089ABC
lea	edx, [esp+70h+arg_0]
push	edx
add	ebp, 0Ch
push	ebp
call	sub_100924C0
add	esp, 0Ch
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	short loc_10089999
mov	eax, [eax+4]
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_48], 32Ah
jmp	loc_10089A7F
			
mov	ebp, [ebp+0Ch]	
push	ebx
lea	ecx, [esp+70h+var_5C]
push	ecx
push	ebp
call	sub_100962D0
add	esp, 0Ch
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	short loc_10089A7F
mov	edx, [eax+4]
mov	[esp+6Ch+var_3C], edx
mov	[esp+6Ch+var_48], 335h
jmp	short loc_10089A7F
			
mov	ebp, [ebp+8]	
push	ebx
lea	eax, [esp+70h+var_5C]
push	eax
push	ebp
call	sub_100962D0
add	esp, 0Ch
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	short loc_10089A7F
mov	ecx, [eax+4]
mov	[esp+6Ch+var_3C], ecx
mov	[esp+6Ch+var_48], 436h
jmp	short loc_10089A7F
mov	eax, dword_100BAE9C 
test	eax, eax
jz	short loc_10089A6F
push	ebx
push	2
push	21h
push	0
push	3DEh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+6Ch+var_44], 1
mov	[esp+6Ch+var_48], 3DEh
			
mov	eax, [esp+6Ch+arg_0]
test	eax, eax
jz	short loc_10089AB2
push	ebx
push	eax
call	sub_10094630
xor	esi, esi
add	esp, 8
mov	[esp+6Ch+var_50], eax
cmp	eax, esi
jz	short loc_10089AAE
push	ebx
push	eax
lea	edx, [esp+74h+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+arg_0], esi
push	ebx
push	1
push	21h
lea	eax, [esp+78h+var_58]
push	eax
			
call	sub_100781E0
add	esp, 10h
mov	[esp+6Ch+var_28], eax
test	eax, eax
jz	short loc_10089ADD
mov	ecx, [eax+4]
mov	[esp+6Ch+var_10], ecx
mov	[esp+6Ch+var_1C], 200h
jmp	short loc_10089AE7
mov	edx, [esp+6Ch+var_5C]
mov	eax, [esp+6Ch+arg_4]
mov	[eax], edx
			
push	ebx
push	1
lea	ecx, [esp+74h+var_2C]
push	21h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 5Ch
retn
			
mov	edx, [esp+68h+arg_8]
push	edx
push	1
lea	eax, [esp+70h+var_2C]
push	1Fh
push	eax
mov	[esp+78h+var_18], 1
mov	[esp+78h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 5Ch
retn
align 10h
dd offset loc_1008989E	
dd offset loc_1008989E
dd offset loc_10089934
dd offset loc_10089A26
dd offset loc_100898FD
dd offset loc_1008989E
dd offset loc_1008996B
dd offset loc_100899FB
align 10h
sub	esp, 34h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_2C], offset aPkix_pl_gene_4 
mov	[esp+40h+var_C], 21h
test	esi, esi
jz	loc_10089D71
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_10089D71
mov	edi, [esp+40h+arg_8]
push	edi
push	1Dh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10089BDE
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	21h
push	eax
mov	[esp+50h+var_1C], 2F6h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	eax, [esi+4]
dec	eax
cmp	eax, 8		
ja	loc_10089D27	
jmp	ds:off_10089DA0[eax*4] 
			
cmp	dword ptr [esi+14h], 0 
push	edi
jnz	short loc_10089C07
push	1
push	1Fh
lea	ecx, [esp+4Ch+var_2C]
push	ecx
jmp	loc_10089D7F
mov	esi, [esi+14h]
mov	eax, [esi+8]
mov	ecx, [esi+4]
lea	edx, [esp+44h+arg_0]
push	edx
push	eax
push	ecx
call	sub_10072650
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	loc_10089D27	
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	21h
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 20Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	ecx, [esi+0Ch]	
push	edi
lea	eax, [esp+44h+arg_0]
push	eax
push	ecx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	loc_10089D27	
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	21h
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 332h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
cmp	dword ptr [esi+10h], 0 
push	edi
jnz	short loc_10089CAE
push	1
push	1Fh
lea	eax, [esp+4Ch+var_2C]
push	eax
jmp	loc_10089D7F
mov	eax, [esi+10h]
mov	edx, [eax+14h]
mov	eax, [eax+10h]
lea	ecx, [esp+44h+var_34]
push	ecx
push	edx
push	eax
call	sub_10072650
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10089CF6
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	21h
push	eax
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 20Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
mov	esi, [esi+10h]
mov	eax, [esi+8]
mov	ecx, [esi+4]
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
push	ecx
call	sub_10072650
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	loc_10089C2B
mov	ecx, [esp+40h+var_30]
add	ecx, [esp+40h+var_34]
mov	[esp+40h+arg_0], ecx
			
mov	edx, [esp+40h+arg_0] 
mov	[ebx], edx
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	21h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	eax, [esi+8]	
push	edi
lea	edx, [esp+44h+arg_0]
push	edx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10089D27 
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 434h
jmp	short loc_10089D2D
			
mov	ecx, [esp+40h+arg_8]
push	ecx
push	1
push	1Fh
lea	edx, [esp+4Ch+var_2C]
push	edx
			
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
dd offset loc_10089BF2	
dd offset loc_10089BF2
dd offset loc_10089BF2
dd offset loc_10089D46
dd offset loc_10089BF2
dd offset loc_10089BF2
dd offset loc_10089BF2
dd offset loc_10089C53
align 10h
sub	esp, 2Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_gene_5 
mov	[esp+38h+var_C], 21h
test	esi, esi
jz	loc_10089F8E
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_10089F8E
mov	ebp, [esp+38h+arg_8]
test	ebp, ebp
jz	loc_10089F8E
push	ebx
mov	ebx, [esp+3Ch+arg_C]
push	ebx
push	1Dh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10089E44
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 1E7h
jmp	short loc_10089EAE
cmp	esi, edi
jz	short loc_10089EA7 
push	ebx
lea	ecx, [esp+40h+arg_0]
push	ecx
push	edi
mov	dword ptr [ebp+0], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10089E77
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 152h
jmp	short loc_10089EAE
cmp	[esp+3Ch+arg_0], 1Dh
jnz	short loc_10089EAE
mov	eax, [esi+4]
cmp	eax, [edi+4]
jnz	short loc_10089EAE
dec	eax
cmp	eax, 8		
ja	short loc_10089EA7 
jmp	ds:off_10089FBC[eax*4] 
			
mov	eax, [edi+14h]	
mov	ecx, [esi+14h]
push	eax
push	ecx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_10089EAE
			
mov	dword ptr [ebp+0], 1 
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	21h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	edx, [edi+0Ch]	
mov	eax, [esi+0Ch]
push	ebx
push	ebp
push	edx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10089EAE
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 330h
jmp	short loc_10089EAE
			
mov	ecx, [esi+10h]	
test	ecx, ecx
jz	short loc_10089F32
mov	eax, [edi+10h]
test	eax, eax
jz	short loc_10089F32
add	eax, 0Ch
push	eax
add	ecx, 0Ch
push	ecx
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_10089EAE
mov	edx, [edi+10h]
mov	eax, [esi+10h]
push	edx
push	eax
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jz	loc_10089EA7	
jmp	loc_10089EAE
			
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	edx, [edi+8]	
mov	eax, [esi+8]
push	ebx
push	ebp
push	edx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	loc_10089EAE
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 42Fh
jmp	loc_10089EAE
			
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 4
dd offset loc_10089E93	
dd offset loc_10089E93
dd offset loc_10089E93
dd offset loc_10089F5C
dd offset loc_10089E93
dd offset loc_10089E93
dd offset loc_10089E93
dd offset loc_10089EC8
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB634
push	1
mov	[esp+60h+var_50], offset aGeneralname 
mov	[esp+60h+var_48], 18h
mov	[esp+60h+var_44], offset sub_10089650
mov	[esp+60h+var_40], offset sub_10089DD0
mov	[esp+60h+var_3C], offset sub_10089B60
mov	[esp+60h+var_38], offset sub_100897F0
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	21h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_gene_0 
mov	[esp+68h+var_C], 21h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+arg_4], 0
mov	[esp+38h+var_2C], offset aPkix_pl_info_1 
mov	[esp+38h+var_C], 25h
test	ebp, ebp
jz	loc_1008A17B
mov	edi, [esp+38h+arg_8]
test	edi, edi
jz	loc_1008A17B
push	ebx
lea	eax, [esp+3Ch+arg_4]
push	eax
push	8
push	21h
call	sub_100952A0
xor	esi, esi
add	esp, 10h
mov	[esp+38h+var_28], eax
cmp	eax, esi
jz	short loc_1008A13B
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 13Bh
mov	eax, [esp+38h+arg_4]
cmp	eax, esi
jz	short loc_1008A122
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, esi
jz	short loc_1008A11E
push	ebx
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], esi
			
mov	[esp+38h+arg_4], esi
push	ebx
push	1
lea	edx, [esp+40h+var_2C]
push	25h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
mov	edx, [esp+38h+arg_4]
mov	eax, [esp+38h+arg_0]
push	ebx
push	ebp
mov	[edx], eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, esi
jz	short loc_1008A16C
push	ebx
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], esi
jmp	short loc_1008A0F1
mov	edx, [esp+38h+arg_4]
mov	[edx+4], ebp
mov	eax, [esp+38h+arg_4]
mov	[edi], eax
jmp	short loc_1008A11E
			
push	ebx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_info_5 
mov	[esp+34h+var_C], 25h
test	edi, edi
jnz	short loc_1008A209
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	21h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_1008A232
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2D8h
jmp	short loc_1008A269
mov	eax, [edi+4]
test	eax, eax
jz	short loc_1008A269
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_1008A262
push	esi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [edi+4], 0
			
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	25h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_2C], offset aPkix_pl_info_6 
mov	[esp+4Ch+var_C], 25h
cmp	edi, ebx
jz	loc_1008A4D0
mov	ebp, [esp+4Ch+arg_4]
cmp	ebp, ebx
jz	loc_1008A4D0
mov	esi, [esp+4Ch+arg_8]
push	esi
push	21h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1008A30D
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2F8h
jmp	loc_1008A423
push	esi		
lea	ecx, [esp+50h+var_38]
push	ecx		
push	ebx		
push	offset aMethodSLocatio 
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1008A33E
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CFh
jmp	loc_1008A423
mov	eax, [edi]
dec	eax
cmp	eax, 4		
ja	short loc_1008A369 
jmp	ds:off_1008A500[eax*4] 
			
mov	eax, offset aCaissuers 
jmp	short loc_1008A36E
			
mov	eax, offset aOcsp 
jmp	short loc_1008A36E
			
mov	eax, offset aTimestamping 
jmp	short loc_1008A36E
			
mov	eax, offset aCarepository 
jmp	short loc_1008A36E
			
			
mov	eax, offset aUnknown 
			
push	esi		
lea	ecx, [esp+50h+var_34]
push	ecx		
push	ebx		
push	eax		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1008A39B
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CFh
jmp	loc_1008A423
mov	eax, [edi+4]
push	esi		
cmp	eax, ebx
jz	short loc_1008A3B8
lea	ecx, [esp+50h+var_3C]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 1FFh
jmp	short loc_1008A3D1
lea	edx, [esp+50h+var_3C]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1008A3E6
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], ecx
jmp	short loc_1008A423
mov	ecx, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+var_34]
mov	eax, [esp+4Ch+var_38]
push	ecx
push	edx
push	eax
lea	ecx, [esp+58h+var_30]
push	esi
push	ecx
call	sub_10098590
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1008A41C
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CDh
jmp	short loc_1008A423
mov	eax, [esp+4Ch+var_30]
mov	[ebp+0], eax
			
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_1008A454
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1008A450
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_1008A485
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1008A481
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_1008A4B6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1008A4B2
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
push	esi
push	1
lea	ecx, [esp+54h+var_2C]
push	25h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	edx, [esp+4Ch+arg_8]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
dd offset loc_1008A34D	
dd offset loc_1008A35B
dd offset loc_1008A369
dd offset loc_1008A362
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_info_7 
mov	[esp+38h+var_C], 25h
test	esi, esi
jz	loc_1008A612
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_1008A612
mov	edi, [esp+38h+arg_8]
push	edi
push	21h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008A59E
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	25h
push	edx
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2F8h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	eax, [esi+4]
test	eax, eax
jz	short loc_1008A5E4
push	edi
lea	ecx, [esp+3Ch+arg_0]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008A5E8
mov	edx, [eax+4]
push	edi
push	1
mov	[esp+40h+var_10], edx
lea	edx, [esp+40h+var_2C]
push	25h
push	edx
mov	[esp+48h+var_1C], 2CFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
xor	eax, eax
jmp	short loc_1008A5EC
mov	eax, [esp+38h+arg_0]
mov	ecx, [esi]
push	edi
push	1
shl	ecx, 7
add	eax, ecx
lea	edx, [esp+40h+var_2C]
push	25h
push	edx
mov	[esp+48h+arg_0], eax
mov	[ebx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_2C], offset aPkix_pl_info_8 
mov	[esp+3Ch+var_C], 25h
test	esi, esi
jz	loc_1008A751
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_1008A751
mov	ebp, [esp+3Ch+arg_8]
test	ebp, ebp
jz	loc_1008A751
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebx
push	21h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008A6B7
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 1E8h
jmp	loc_1008A737
cmp	esi, edi
jnz	short loc_1008A6C4
mov	dword ptr [ebp+0], 1
jmp	short loc_1008A737
push	ebx
lea	ecx, [esp+44h+arg_0]
push	ecx
push	edi
mov	dword ptr [ebp+0], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008A6F3
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 152h
jmp	short loc_1008A737
cmp	[esp+40h+arg_0], 21h
jnz	short loc_1008A737
mov	dword ptr [ebp+0], 0
mov	eax, [esi]
cmp	eax, [edi]
jnz	short loc_1008A737
push	ebx
lea	ecx, [esp+44h+var_30]
push	ecx
push	edi
push	esi
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008A730
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 2CBh
jmp	short loc_1008A737
mov	eax, [esp+40h+var_30]
mov	[ebp+0], eax
			
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	25h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_C]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB6C4
push	1
mov	[esp+60h+var_50], offset aInfoaccess 
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_1008A1B0
mov	[esp+60h+var_40], offset sub_1008A640
mov	[esp+60h+var_3C], offset sub_1008A520
mov	[esp+60h+var_38], offset sub_1008A290
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	25h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_infoac 
mov	[esp+68h+var_C], 25h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 38h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_38], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_2C], offset aPkix_pl_info_0 
mov	[esp+44h+var_C], 25h
cmp	[esp+44h+arg_4], ebp
jnz	short loc_1008A887
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
push	ebx
mov	ebx, [esp+48h+arg_8]
lea	edx, [esp+48h+var_38]
push	ebx
push	edx
call	sub_100755D0
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	loc_1008A95E
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 27Dh
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_1008A8E6
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1008A8E2
push	ebx
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
mov	[esp+48h+var_38], ebp
mov	eax, [esp+48h+var_30]
cmp	eax, ebp
jz	short loc_1008A913
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1008A913
push	ebx
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
			
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_1008A944
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1008A940
push	ebx
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_34], ebp
push	ebx
push	1
lea	ecx, [esp+50h+var_2C]
push	25h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
mov	ecx, [esp+48h+arg_0]
cmp	ecx, ebp
jz	loc_1008A8B5
xor	edi, edi
cmp	[ecx], ebp
jz	loc_1008AA8E
mov	esi, ecx
mov	edx, [esi]
mov	eax, [edx+18h]
cmp	eax, ebp
jz	loc_1008AA81
push	ebx
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	eax
call	sub_10089370
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1008AA9D
mov	edx, [esi]
push	edx
call	SECOID_FindOIDTag_Util
add	eax, 0FFFFFF7Eh
add	esp, 4
cmp	eax, 0AAh	
ja	loc_1008AAD9	
movzx	eax, ds:byte_1008AB24[eax]
jmp	ds:off_1008AB10[eax*4] 
			
mov	eax, 2		
jmp	short loc_1008A9E1
			
mov	eax, 1		
jmp	short loc_1008A9E1
			
mov	eax, 3		
jmp	short loc_1008A9E1
			
mov	eax, 5		
			
mov	edx, [esp+48h+var_34]
lea	ecx, [esp+48h+var_30]
push	ecx
push	edx
push	eax
call	sub_1008A080
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1008AAB1
mov	esi, [esp+48h+var_30]
mov	eax, [esp+48h+var_38]
push	ebx
push	esi
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jnz	loc_1008AAC5
cmp	esi, ebp
jz	short loc_1008AA4C
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1008AA48
push	ebx
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_30], ebp
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_1008AA7D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1008AA79
push	ebx
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_34], ebp
mov	ecx, [esp+48h+arg_0]
inc	edi
cmp	[ecx+edi*4], ebp
lea	esi, [ecx+edi*4]
jnz	loc_1008A976
mov	edx, [esp+48h+var_38]
mov	eax, [esp+48h+arg_4]
mov	[eax], edx
jmp	loc_1008A8E2
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 1FAh
jmp	loc_1008A8B5
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 230h
jmp	loc_1008A8B5
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 278h
jmp	loc_1008A8B5
			
			
mov	eax, dword_100BAE9C 
cmp	eax, ebp
jz	short loc_1008AAF9
mov	ecx, [esp+48h+var_C]
push	ebx
push	2
push	ecx
push	ebp
push	401h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 401h
jmp	loc_1008A8B5
align 10h
			
dd offset loc_1008A9DC,	offset loc_1008AAD9 
db	4,     4,     4,     4 
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     1
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     4,     4,     4
db	4,     2,     3
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_info_2 
mov	[esp+30h+var_C], 25h
pop	esi
test	ecx, ecx
jz	short loc_1008AC25
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1008AC25
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	25h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_info_4 
mov	[esp+38h+var_C], 25h
test	edi, edi
jz	short loc_1008ACF1
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1008ACF1
mov	eax, [edi+4]
mov	esi, [esp+38h+arg_8]
test	eax, eax
jz	short loc_1008ACD3
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1008ACD3
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	25h
push	edx
mov	[esp+48h+var_24], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [edi+4]
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	25h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 38h
mov	eax, [esp+38h+arg_0]
push	ebx
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
xor	ebx, ebx
rep movsd
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_30], ebp
mov	[esp+48h+Str1],	ebp
mov	[esp+48h+var_2C], offset aPkix_pl_info_3 
mov	[esp+48h+var_C], 25h
cmp	eax, ebp
jz	loc_1008AE4D
mov	edi, [esp+48h+arg_4]
cmp	edi, ebp
jz	loc_1008AE4D
mov	eax, [eax+4]
mov	esi, [esp+48h+arg_8]
cmp	eax, ebp
jz	short loc_1008ADF2
push	esi
lea	ecx, [esp+4Ch+var_38]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1008ADA2
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 1FFh
jmp	short loc_1008ADF4
mov	edx, [esp+48h+var_38]
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
lea	ecx, [esp+50h+Str1]
push	ecx
push	ebp
push	edx
call	sub_10098140
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_1008ADD4
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 3D1h
jmp	short loc_1008ADF4
mov	ecx, [esp+48h+Str1]
push	5		
push	offset aHttp_2	
push	ecx		
call	ds:strncmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1008ADF2
mov	ebx, 1
			
mov	[edi], ebx
			
mov	edx, [esp+48h+Str1]
push	esi
push	edx
call	sub_10094630
mov	eax, [esp+50h+var_38]
add	esp, 8
cmp	eax, ebp
jz	short loc_1008AE33
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_1008AE2F
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
push	esi
push	1
lea	ecx, [esp+50h+var_2C]
push	25h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	edx, [esp+48h+arg_8]
push	edx
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
			
sub	esp, 40h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
xor	ebp, ebp
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_2C], offset aPkix_pl_cer_71 
mov	[esp+4Ch+var_C], 9
cmp	esi, ebp
jz	loc_1008B176
cmp	[esp+4Ch+arg_4], ebp
jz	loc_1008B176
cmp	[esi+0Ch], ebp
jnz	loc_1008B10F
push	ebx
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008AF15
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_24], ebp
mov	[esp+5Ch+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	[esp+4Ch+var_8], esi
cmp	[esi+0Ch], ebp
jnz	loc_1008B0E6
lea	ecx, [esp+4Ch+var_3C]
push	ebx
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1008AF60
mov	edx, [eax+4]
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 27Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	edi, [esi+8]
mov	edx, [esi+4]
xor	ecx, ecx
mov	[esp+4Ch+var_30], edi
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_38], ecx
cmp	edi, ebp
jbe	loc_1008B038
lea	esp, [esp+0]
cmp	edx, ebp
jz	loc_1008B176
mov	eax, [edx+ecx*4]
cmp	eax, ebp
jz	loc_1008B07A
mov	eax, [eax]
cmp	eax, ebp
jz	loc_1008B02B
mov	esi, eax
mov	edi, esi
push	ebx
lea	eax, [esp+50h+var_40]
push	eax
push	esi
call	sub_10089370
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1008B089
mov	ecx, [esp+4Ch+var_40]
mov	edx, [esp+4Ch+var_3C]
push	ebx
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1008B0B1
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebp
jz	short loc_1008B00C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008B008
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_40], ebp
push	esi
call	CERT_GetNextNameConstraint
mov	esi, eax
add	esp, 4
cmp	esi, edi
jnz	short loc_1008AFA1
mov	edx, [esp+4Ch+var_34]
mov	edi, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_38]
mov	esi, [esp+4Ch+arg_0]
inc	ecx
mov	[esp+4Ch+var_38], ecx
cmp	ecx, edi
jb	loc_1008AF80
mov	edx, [esp+4Ch+var_3C]
push	ebx
push	edx
call	sub_10075700
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	loc_1008B0D9
mov	eax, [eax+4]
push	ebx
push	1
mov	[esp+54h+var_10], eax
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_1C], 28Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
push	ebx
push	1
push	1Fh
lea	edx, [esp+58h+var_2C]
push	edx
jmp	loc_1008B180
mov	eax, [eax+4]
push	ebx
push	1
mov	[esp+54h+var_10], eax
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_1C], 1FAh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	ecx, [eax+4]
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 278h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	ecx, [esp+4Ch+var_3C]
mov	[esi+0Ch], ecx
cmp	[esp+4Ch+var_8], esi
jnz	short loc_1008B10F
push	ebx
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008B10B
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_8], ebp
			
mov	eax, [esi+0Ch]
cmp	eax, ebp
jz	short loc_1008B154
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008B154
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_24], ebp
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
			
mov	ecx, [esi+0Ch]
mov	edx, [esp+4Ch+arg_4]
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[edx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
			
push	ebx
push	1
push	1Fh
lea	ecx, [esp+58h+var_2C]
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
align 10h
			
sub	esp, 40h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
xor	ebp, ebp
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_2C], offset aPkix_pl_cer_72 
mov	[esp+4Ch+var_C], 9
cmp	esi, ebp
jz	loc_1008B497
cmp	[esp+4Ch+arg_4], ebp
jz	loc_1008B497
cmp	[esi+10h], ebp
jnz	loc_1008B430
push	ebx
push	esi
call	sub_10095E70
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008B235
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_24], ebp
mov	[esp+5Ch+var_1C], 2D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	[esp+4Ch+var_8], esi
cmp	[esi+10h], ebp
jnz	loc_1008B407
lea	ecx, [esp+4Ch+var_3C]
push	ebx
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1008B280
mov	edx, [eax+4]
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 27Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	edi, [esi+8]
mov	edx, [esi+4]
xor	ecx, ecx
mov	[esp+4Ch+var_30], edi
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_38], ecx
cmp	edi, ebp
jbe	loc_1008B359
lea	esp, [esp+0]
cmp	edx, ebp
jz	loc_1008B497
mov	eax, [edx+ecx*4]
cmp	eax, ebp
jz	loc_1008B39B
mov	eax, [eax+4]
cmp	eax, ebp
jz	loc_1008B34C
mov	esi, eax
mov	edi, esi
push	ebx
lea	eax, [esp+50h+var_40]
push	eax
push	esi
call	sub_10089370
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1008B3AA
mov	ecx, [esp+4Ch+var_40]
mov	edx, [esp+4Ch+var_3C]
push	ebx
push	ecx
push	edx
call	sub_10075970
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jnz	loc_1008B3D2
mov	eax, [esp+4Ch+var_40]
cmp	eax, ebp
jz	short loc_1008B32D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008B329
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_40], ebp
push	esi
call	CERT_GetNextNameConstraint
mov	esi, eax
add	esp, 4
cmp	esi, edi
jnz	short loc_1008B2C2
mov	edx, [esp+4Ch+var_34]
mov	edi, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_38]
mov	esi, [esp+4Ch+arg_0]
inc	ecx
mov	[esp+4Ch+var_38], ecx
cmp	ecx, edi
jb	loc_1008B2A0
mov	edx, [esp+4Ch+var_3C]
push	ebx
push	edx
call	sub_10075700
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	loc_1008B3FA
mov	eax, [eax+4]
push	ebx
push	1
mov	[esp+54h+var_10], eax
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_1C], 28Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
push	ebx
push	1
push	1Fh
lea	edx, [esp+58h+var_2C]
push	edx
jmp	loc_1008B4A1
mov	eax, [eax+4]
push	ebx
push	1
mov	[esp+54h+var_10], eax
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_1C], 1FAh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	ecx, [eax+4]
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 278h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	ecx, [esp+4Ch+var_3C]
mov	[esi+10h], ecx
cmp	[esp+4Ch+var_8], esi
jnz	short loc_1008B430
push	ebx
push	esi
call	sub_10095F10
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008B42C
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
mov	[esp+4Ch+var_8], ebp
			
mov	eax, [esi+10h]
cmp	eax, ebp
jz	short loc_1008B475
push	ebx
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008B475
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[esp+5Ch+var_24], ebp
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
			
mov	ecx, [esi+10h]
mov	edx, [esp+4Ch+arg_4]
push	ebx
push	1
lea	eax, [esp+54h+var_2C]
push	9
push	eax
mov	[edx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
			
push	ebx
push	1
push	1Fh
lea	ecx, [esp+58h+var_2C]
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_cer_67 
mov	[esp+38h+var_C], 9
test	edi, edi
jz	loc_1008B663
mov	esi, [esp+38h+arg_4]
test	esi, esi
jz	loc_1008B663
mov	eax, [esp+38h+arg_8]
test	eax, eax
jz	loc_1008B663
push	ebx
push	ebp
push	800h
mov	dword ptr [eax], 1
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+40h+var_30], eax
test	eax, eax
jnz	short loc_1008B579
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008B54B
mov	ecx, [esp+40h+arg_C]
mov	edx, [esp+40h+var_C]
push	ecx
push	2
push	edx
push	0
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	9
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 338h
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
mov	ebp, [esi+4]
lea	esp, [esp+0]
mov	ebx, [esi+8]
xor	esi, esi
test	ebx, ebx
jz	short loc_1008B5B4
lea	esp, [esp+0]
test	ebp, ebp
jz	short loc_1008B5CB
mov	eax, [ebp+esi*4+0]
test	eax, eax
jz	short loc_1008B5F9
push	edi
push	eax
mov	eax, [esp+48h+var_30]
push	eax
call	CERT_CheckNameSpace
add	esp, 0Ch
test	eax, eax
jnz	short loc_1008B627
inc	esi
cmp	esi, ebx
jb	short loc_1008B590
push	edi
call	CERT_GetNextGeneralName
mov	edi, eax
add	esp, 4
cmp	edi, [esp+40h+arg_0]
jz	short loc_1008B636
mov	esi, [esp+40h+arg_4]
jmp	short loc_1008B580
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
cmp	eax, 0FFFFFFFFh
jnz	short loc_1008B636
mov	edx, [esp+40h+arg_8]
mov	dword ptr [edx], 0
			
mov	eax, [esp+40h+var_30]
push	0
push	eax
call	PORT_FreeArena_Util
mov	ecx, [esp+48h+arg_C]
add	esp, 8
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	9
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_pl_cer_68 
mov	[esp+38h+var_C], 9
cmp	esi, ebx
jnz	short loc_1008B6ED
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	8
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_1008B719
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2E6h
jmp	loc_1008B7AF
mov	eax, [esi+4]
push	edi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_1008B73F
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 1F9h
jmp	short loc_1008B7AF
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_1008B751
push	ebx
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	[esi], ebx
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_1008B780
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1008B77D
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0Ch], ebx
mov	eax, [esi+10h]
cmp	eax, ebx
jz	short loc_1008B7AF
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1008B7AC
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+10h], ebx
			
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	9
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 74h
mov	eax, [esp+74h+arg_0]
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+80h+var_2C]
rep movsd
mov	[esp+80h+var_5C], ebp
mov	[esp+80h+var_2C], offset aPkix_pl_cer_69 
mov	[esp+80h+var_C], 9
cmp	eax, ebp
jz	loc_1008BB1F
cmp	[esp+80h+arg_4], ebp
jz	loc_1008BB1F
push	ebx
mov	ebx, [esp+84h+arg_8]
push	ebx
push	8
push	eax
call	sub_10072630
add	esp, 0Ch
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1008B845
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 2E6h
jmp	loc_1008BB05
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+84h+var_58]
rep movsd
push	ebx		
lea	ecx, [esp+88h+var_68]
push	ecx		
push	ebp		
push	offset aPermittedNameS 
push	ebp		
mov	[esp+98h+var_68], ebp
mov	[esp+98h+var_6C], ebp
mov	[esp+98h+var_64], ebp
mov	[esp+98h+var_74], ebp
mov	[esp+98h+var_70], ebp
mov	[esp+98h+var_60], ebp
mov	[esp+98h+var_58], offset aPkix_pl_cer_70 
mov	[esp+98h+var_38], 9
call	sub_10097D90
add	esp, 14h
mov	[esp+84h+var_54], eax
cmp	eax, ebp
jz	short loc_1008B8B0
mov	edx, [eax+4]
mov	[esp+84h+var_3C], edx
mov	[esp+84h+var_48], 3CFh
mov	edi, ebp
jmp	loc_1008B9E4
mov	esi, [esp+84h+arg_0]
lea	eax, [esp+84h+var_6C]
push	eax
push	esi
call	sub_1008AE80
mov	edi, [esp+8Ch+var_6C]
add	esp, 8
mov	[esp+84h+var_54], eax
cmp	eax, ebp
jz	short loc_1008B8E5
mov	ecx, [eax+4]
mov	[esp+84h+var_3C], ecx
mov	[esp+84h+var_48], 0A3h
jmp	loc_1008B9E4
push	ebx		
cmp	edi, ebp
jz	short loc_1008B8FF
lea	edx, [esp+88h+var_74]
push	edx
push	edi
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_1008B918
lea	eax, [esp+88h+var_74]
push	eax		
push	ebp		
push	offset aNull	
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+84h+var_54], eax
cmp	eax, ebp
jz	short loc_1008B930
mov	edx, [eax+4]
mov	[esp+84h+var_3C], edx
mov	[esp+84h+var_48], ecx
jmp	loc_1008B9E4
lea	eax, [esp+84h+var_64]
push	eax
push	esi
call	sub_1008B1A0
add	esp, 8
mov	[esp+84h+var_54], eax
cmp	eax, ebp
jz	short loc_1008B95A
mov	ecx, [eax+4]
mov	[esp+84h+var_3C], ecx
mov	[esp+84h+var_48], 0A2h
jmp	loc_1008B9E4
mov	eax, [esp+84h+var_64]
push	ebx		
cmp	eax, ebp
jz	short loc_1008B978
lea	edx, [esp+88h+var_70]
push	edx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 28Fh
jmp	short loc_1008B991
lea	eax, [esp+88h+var_70]
push	eax		
push	ebp		
push	offset aNull	
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+84h+var_54], eax
cmp	eax, ebp
jz	short loc_1008B9A6
mov	edx, [eax+4]
mov	[esp+84h+var_3C], edx
mov	[esp+84h+var_48], ecx
jmp	short loc_1008B9E4
mov	eax, [esp+84h+var_70]
mov	ecx, [esp+84h+var_74]
mov	edx, [esp+84h+var_68]
push	eax
push	ecx
push	edx
lea	eax, [esp+90h+var_60]
push	ebx
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+84h+var_54], eax
cmp	eax, ebp
jz	short loc_1008B9DC
mov	ecx, [eax+4]
mov	[esp+84h+var_3C], ecx
mov	[esp+84h+var_48], 3CDh
jmp	short loc_1008B9E4
mov	edx, [esp+84h+var_60]
mov	[esp+84h+var_5C], edx
			
mov	eax, [esp+84h+var_68]
cmp	eax, ebp
jz	short loc_1008BA15
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_50], eax
cmp	eax, ebp
jz	short loc_1008BA11
push	ebx
push	eax
lea	eax, [esp+8Ch+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_50], ebp
mov	[esp+84h+var_68], ebp
cmp	edi, ebp
jz	short loc_1008BA3E
push	ebx
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_50], eax
cmp	eax, ebp
jz	short loc_1008BA3E
push	ebx
push	eax
lea	ecx, [esp+8Ch+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_50], ebp
			
mov	eax, [esp+84h+var_64]
cmp	eax, ebp
jz	short loc_1008BA6B
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_50], eax
cmp	eax, ebp
jz	short loc_1008BA6B
push	ebx
push	eax
lea	edx, [esp+8Ch+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_50], ebp
			
mov	eax, [esp+84h+var_74]
cmp	eax, ebp
jz	short loc_1008BA9C
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_50], eax
cmp	eax, ebp
jz	short loc_1008BA98
push	ebx
push	eax
lea	eax, [esp+8Ch+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_50], ebp
mov	[esp+84h+var_74], ebp
mov	eax, [esp+84h+var_70]
cmp	eax, ebp
jz	short loc_1008BACD
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+84h+var_50], eax
cmp	eax, ebp
jz	short loc_1008BAC9
push	ebx
push	eax
lea	ecx, [esp+8Ch+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_50], ebp
mov	[esp+84h+var_70], ebp
push	ebx
push	1
lea	edx, [esp+8Ch+var_58]
push	9
push	edx
call	sub_100781E0
add	esp, 10h
mov	[esp+84h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BAF8
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 0A5h
jmp	short loc_1008BB05
mov	ecx, [esp+84h+arg_4]
mov	edx, [esp+84h+var_5C]
mov	[ecx], edx
			
push	ebx
push	1
lea	eax, [esp+8Ch+var_2C]
push	9
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 74h
retn
			
mov	ecx, [esp+80h+arg_8]
push	ecx
push	1
lea	edx, [esp+88h+var_2C]
push	1Fh
push	edx
mov	[esp+90h+var_18], 1
mov	[esp+90h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 74h
retn
align 10h
sub	esp, 3Ch
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	esi, [esp+48h+arg_0]
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_3C], ebp
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_2C], offset aPkix_pl_cer_73 
mov	[esp+48h+var_C], 9
cmp	esi, ebp
jz	loc_1008BD0B
cmp	[esp+48h+arg_4], ebp
jz	loc_1008BD0B
push	ebx
mov	ebx, [esp+4Ch+arg_8]
push	ebx
push	8
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1008BBCB
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2E6h
jmp	loc_1008BCF1
lea	ecx, [esp+4Ch+var_30]
push	ecx
push	esi
call	sub_1008AE80
mov	edi, [esp+54h+var_30]
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1008BBF9
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 0A3h
jmp	loc_1008BC9B
cmp	edi, ebp
jz	short loc_1008BC25
push	ebx
lea	eax, [esp+50h+var_3C]
push	eax
push	edi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1008BC29
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 2CFh
jmp	short loc_1008BC9B
mov	[esp+4Ch+var_3C], ebp
lea	edx, [esp+4Ch+var_34]
push	edx
push	esi
call	sub_1008B1A0
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1008BC50
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 0A2h
jmp	short loc_1008BC9B
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebp
jz	short loc_1008BC80
push	ebx
lea	ecx, [esp+50h+var_38]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1008BC84
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 2CFh
jmp	short loc_1008BC9B
mov	[esp+4Ch+var_38], ebp
mov	eax, [esp+4Ch+var_3C]
mov	ecx, [esp+4Ch+arg_4]
shl	eax, 7
add	eax, [esp+4Ch+var_38]
shl	eax, 7
add	eax, [esi+8]
mov	[ecx], eax
			
cmp	edi, ebp
jz	short loc_1008BCC4
push	ebx
push	edi
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008BCC4
push	ebx
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
			
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebp
jz	short loc_1008BCF1
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1008BCF1
push	ebx
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebp
			
push	ebx
push	1
lea	ecx, [esp+54h+var_2C]
push	9
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
			
mov	edx, [esp+48h+arg_8]
push	edx
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
align 10h
sub	esp, 40h
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_30], ebp
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_2C], offset aPkix_pl_cer_74 
mov	[esp+4Ch+var_C], 9
cmp	esi, ebp
jz	loc_1008C04B
mov	edi, [esp+4Ch+arg_4]
cmp	edi, ebp
jz	loc_1008C04B
cmp	[esp+4Ch+arg_8], ebp
jz	loc_1008C04B
push	ebx
mov	ebx, [esp+50h+arg_C]
push	ebx
push	8
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BDCB
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 1DDh
jmp	loc_1008C031
cmp	esi, edi
jnz	short loc_1008BDDE
mov	ecx, [esp+50h+arg_8]
mov	dword ptr [ecx], 1
jmp	loc_1008C031
mov	edx, [esp+50h+arg_8]
push	ebx
lea	eax, [esp+54h+arg_0]
push	eax
push	edi
mov	[edx], ebp
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BE0F
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 152h
jmp	loc_1008C031
cmp	[esp+50h+arg_0], 8
jnz	loc_1008C031
lea	edx, [esp+50h+var_34]
push	edx
push	esi
call	sub_1008AE80
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BE44
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 0A3h
jmp	loc_1008BF7D
lea	ecx, [esp+50h+var_3C]
push	ecx
push	edi
call	sub_1008AE80
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BE6E
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 0A3h
jmp	loc_1008BF7D
mov	ecx, [esp+50h+var_34]
cmp	ecx, ebp
jz	short loc_1008BEAA
mov	eax, [esp+50h+var_3C]
cmp	eax, ebp
jz	short loc_1008BEBA
push	ebx
lea	edx, [esp+54h+var_40]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BEC3
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2CBh
jmp	loc_1008BF7D
cmp	[esp+50h+var_3C], ebp
jnz	short loc_1008BEBA
mov	[esp+50h+var_40], 1
jmp	short loc_1008BECE
			
mov	[esp+50h+var_40], ebp
jmp	loc_1008BF7D
cmp	[esp+50h+var_40], 1
jnz	loc_1008BF7D
lea	ecx, [esp+50h+var_30]
push	ecx
push	esi
call	sub_1008B1A0
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BEF8
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 0A2h
jmp	loc_1008BF7D
lea	eax, [esp+50h+var_38]
push	eax
push	edi
call	sub_1008B1A0
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BF1F
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 0A2h
jmp	short loc_1008BF7D
mov	ecx, [esp+50h+var_30]
cmp	ecx, ebp
jz	short loc_1008BF58
mov	eax, [esp+50h+var_38]
cmp	eax, ebp
jz	short loc_1008BEBA
push	ebx
lea	edx, [esp+54h+var_40]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1008BF6C
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 2CBh
jmp	short loc_1008BF7D
cmp	[esp+50h+var_38], ebp
jnz	loc_1008BEBA
mov	[esp+50h+var_40], 1
jmp	short loc_1008BF73
cmp	[esp+50h+var_40], 1
jnz	short loc_1008BF7D
mov	ecx, [esp+50h+arg_8]
mov	dword ptr [ecx], 1
			
mov	eax, [esp+50h+var_34]
cmp	eax, ebp
jz	short loc_1008BFAA
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1008BFAA
push	ebx
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
			
mov	eax, [esp+50h+var_3C]
cmp	eax, ebp
jz	short loc_1008BFD7
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1008BFD7
push	ebx
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
			
mov	eax, [esp+50h+var_30]
cmp	eax, ebp
jz	short loc_1008C004
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1008C004
push	ebx
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
			
mov	eax, [esp+50h+var_38]
cmp	eax, ebp
jz	short loc_1008C031
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1008C031
push	ebx
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
			
push	ebx
push	1
lea	eax, [esp+58h+var_2C]
push	9
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
			
mov	ecx, [esp+4Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB340
push	1
mov	[esp+60h+var_50], offset aCertnameconstr 
mov	[esp+60h+var_48], 14h
mov	[esp+60h+var_44], offset sub_1008B690
mov	[esp+60h+var_40], offset sub_1008BD40
mov	[esp+60h+var_3C], offset sub_1008BB50
mov	[esp+60h+var_38], offset sub_1008B7D0
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	9
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_cer_14 
mov	[esp+68h+var_C], 9
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 34h
push	ebx
push	ebp
mov	ebp, [esp+3Ch+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_0]
xor	ebx, ebx
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_2C], offset aPkix_pl_cer_13 
mov	[esp+44h+var_C], 9
cmp	esi, ebx
jz	loc_1008C25C
mov	edi, [esp+44h+arg_4]
cmp	edi, ebx
jz	loc_1008C25C
push	ebp
lea	eax, [esp+48h+var_34]
push	eax
push	14h
push	8
call	sub_100952A0
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_1008C198
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 127h
jmp	short loc_1008C1FB
push	ebp
lea	edx, [esp+48h+var_30]
push	edx
push	4
call	sub_10094350
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	short loc_1008C1C1
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 299h
jmp	short loc_1008C1FB
mov	edx, [esp+44h+var_34]
mov	dword ptr [edx+8], 1
mov	eax, [esp+44h+var_30]
mov	ecx, [esp+44h+var_34]
mov	[ecx+4], eax
mov	edx, [esp+44h+var_30]
mov	[edx], esi
mov	eax, [esp+44h+var_34]
mov	[eax+0Ch], ebx
mov	ecx, [esp+44h+var_34]
mov	[ecx+10h], ebx
mov	edx, [esp+44h+var_34]
mov	[edx], ebx
mov	eax, [esp+44h+var_34]
mov	[edi], eax
mov	eax, [esp+44h+var_28]
			
cmp	[esp+44h+var_18], ebx
jnz	short loc_1008C211
cmp	eax, ebx
jnz	short loc_1008C211
cmp	[esp+44h+var_14], ebx
jnz	short loc_1008C211
cmp	[esp+44h+var_4], ebx
jz	short loc_1008C242
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_1008C242
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1008C23E
push	ebp
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_34], ebx
			
push	ebp
push	1
lea	edx, [esp+4Ch+var_2C]
push	9
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
push	ebp
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 34h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_34], 0
mov	[esp+40h+var_2C], offset aPkix_pl_certna 
mov	[esp+40h+var_C], 9
test	edi, edi
jz	loc_1008C416
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_1008C416
cmp	dword ptr [edi], 0
jz	loc_1008C416
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1008C347
mov	eax, dword_100BAE9C
mov	edi, [esp+40h+arg_8]
test	eax, eax
jz	short loc_1008C31E
mov	ecx, [esp+40h+var_C]
push	edi
push	2
push	ecx
push	esi
push	338h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	9
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 338h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
lea	edx, [esp+40h+var_34]
push	edx
push	edi
push	esi
call	CERT_FindNameConstraintsExten
mov	edi, [esp+4Ch+arg_8]
add	esp, 0Ch
test	eax, eax
jz	short loc_1008C391
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008C37F
mov	ecx, [esp+40h+var_C]
push	edi
push	2
push	ecx
push	0
push	188h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 188h
jmp	short loc_1008C3F2
mov	eax, [esp+40h+var_34]
test	eax, eax
jnz	short loc_1008C3A7
push	eax
push	esi
mov	[ebx], eax
call	PORT_FreeArena_Util
add	esp, 8
jmp	short loc_1008C3D7
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	eax
call	sub_1008C120
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008C3CF
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 0A1h
jmp	short loc_1008C3DB
mov	eax, [esp+40h+var_30]
mov	[eax], esi
mov	[ebx], eax
mov	eax, [esp+40h+var_28]
cmp	[esp+40h+var_18], 0
jnz	short loc_1008C3F2
test	eax, eax
jnz	short loc_1008C3F2
cmp	[esp+40h+var_14], eax
jnz	short loc_1008C3F2
cmp	[esp+40h+var_4], eax
jz	short loc_1008C3FD
			
push	0
push	esi
call	PORT_FreeArena_Util
add	esp, 8
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	9
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_8]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebx, ebx
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cer_76 
mov	[esp+40h+var_C], 9
cmp	edi, ebx
jnz	short loc_1008C4B3
push	ebp
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebx
jnz	short loc_1008C4FB
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008C4E6
mov	ecx, [esp+40h+var_C]
push	ebp
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 338h
jmp	loc_1008C59B
push	10h
push	esi
call	PORT_ArenaZAlloc_Util
add	esp, 8
cmp	eax, ebx
jnz	short loc_1008C53C
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008C52A
mov	edx, [esp+40h+var_C]
push	ebp
push	2
push	edx
push	ebx
push	356h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 356h
jmp	short loc_1008C591
push	ebp
lea	ecx, [esp+44h+var_30]
push	ecx
push	eax
mov	[eax], ebx
mov	[eax+4], ebx
mov	[eax+8], ebx
mov	[eax+0Ch], ebx
call	sub_1008C120
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1008C56F
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 0A1h
jmp	short loc_1008C57B
mov	eax, [esp+40h+var_30]
mov	[eax], esi
mov	[edi], eax
mov	eax, [esp+40h+var_28]
cmp	[esp+40h+var_18], ebx
jnz	short loc_1008C591
cmp	eax, ebx
jnz	short loc_1008C591
cmp	[esp+40h+var_14], ebx
jnz	short loc_1008C591
cmp	[esp+40h+var_4], ebx
jz	short loc_1008C59B
			
push	ebx
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
push	ebp
push	1
lea	eax, [esp+48h+var_2C]
push	9
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_0]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+arg_0], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_cer_77 
mov	[esp+40h+var_C], 9
cmp	ebp, ebx
jz	loc_1008C791
mov	edi, [esp+40h+arg_4]
cmp	edi, ebx
jz	loc_1008C791
cmp	[esp+40h+arg_8], ebx
jz	loc_1008C791
push	10h
push	ebp
call	PORT_ArenaZAlloc_Util
add	esp, 8
mov	[esp+40h+var_30], eax
test	eax, eax
jnz	short loc_1008C674
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008C646
mov	ecx, [esp+40h+arg_C]
mov	edx, [esp+40h+var_C]
push	ecx
push	2
push	edx
push	ebx
push	356h
push	eax
call	sub_10074820
add	esp, 18h
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	9
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 356h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	esi, [edi]
test	esi, esi
jz	short loc_1008C6BF
lea	ebx, [ebx+0]
push	esi
push	0
push	ebp
call	sub_100425B0
add	esp, 0Ch
test	eax, eax
jz	short loc_1008C6EA
test	ebx, ebx
jnz	short loc_1008C69A
mov	[esp+40h+arg_0], eax
jmp	short loc_1008C6A4
push	eax
push	ebx
call	sub_10042670
add	esp, 8
push	esi
mov	ebx, eax
call	CERT_GetNextNameConstraint
mov	esi, eax
add	esp, 4
cmp	esi, [edi]
jnz	short loc_1008C680
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_0]
mov	[eax], ecx
mov	esi, [edi+4]
test	esi, esi
jz	loc_1008C769
xor	edi, edi
lea	esp, [esp+0]
push	esi
push	0
push	ebp
call	sub_100425B0
add	esp, 0Ch
test	eax, eax
jz	short loc_1008C6EA
test	edi, edi
jnz	short loc_1008C73A
mov	[esp+40h+arg_0], eax
jmp	short loc_1008C744
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008C70C
mov	ecx, [esp+40h+arg_C]
mov	edx, [esp+40h+var_C]
push	ecx
push	2
push	edx
push	0
push	64h
push	eax
call	sub_10074820
add	esp, 18h
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	9
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 64h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	eax
push	edi
call	sub_10042670
add	esp, 8
push	esi
mov	edi, eax
call	CERT_GetNextNameConstraint
mov	edx, [esp+44h+arg_4]
mov	esi, eax
add	esp, 4
cmp	esi, [edx+4]
jnz	loc_1008C6D0
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_0]
mov	[eax+4], ecx
mov	ecx, [esp+40h+arg_C]
mov	edx, [esp+40h+arg_8]
mov	eax, [esp+40h+var_30]
push	ecx
push	1
mov	[edx], eax
lea	edx, [esp+48h+var_2C]
push	9
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 38h
push	ebp
mov	ebp, [esp+3Ch+arg_0]
push	esi
xor	eax, eax
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_30], eax
mov	[esp+44h+var_38], eax
mov	[esp+44h+var_34], eax
mov	[esp+44h+var_2C], offset aPkix_pl_cer_75 
mov	[esp+44h+var_C], 9
cmp	ebp, eax
jz	loc_1008C9EC
cmp	[esp+44h+arg_4], eax
jz	loc_1008C9EC
cmp	[esp+44h+arg_8], eax
jz	loc_1008C9EC
push	ebx
mov	ebx, [esp+48h+arg_C]
lea	eax, [esp+48h+var_30]
push	ebx
push	eax
call	sub_1008C450
mov	esi, [esp+50h+var_30]
add	esp, 8
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1008C847
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 9Fh
jmp	loc_1008C969
mov	edi, [ebp+8]
mov	edx, [esp+48h+arg_4]
add	edi, [edx+8]
mov	eax, [esi+4]
push	ebx
push	eax
mov	[esp+50h+arg_0], edi
call	sub_10094630
add	esp, 8
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1008C87E
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 1F9h
jmp	loc_1008C969
push	ebx
lea	edx, [esp+4Ch+var_38]
push	edx
lea	eax, ds:0[edi*4]
push	eax
call	sub_10094350
add	esp, 0Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1008C8B0
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 299h
jmp	loc_1008C969
mov	edx, [esp+48h+var_38]
mov	[esi+4], edx
mov	edi, [ebp+4]
xor	ebx, ebx
cmp	[ebp+8], ebx
jbe	short loc_1008C8FD
mov	eax, [esp+48h+arg_C]
mov	edx, [edi]
push	eax
mov	eax, [esi]
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	edx
push	eax
call	sub_1008C5C0
add	esp, 10h
mov	[esp+48h+var_28], eax
test	eax, eax
jnz	loc_1008C9C7
mov	ecx, [esp+48h+var_38]
mov	edx, [esp+48h+var_34]
mov	[ecx], edx
add	[esp+48h+var_38], 4
inc	ebx
add	edi, 4
cmp	ebx, [ebp+8]
jb	short loc_1008C8C1
mov	ebp, [esp+48h+arg_4]
mov	edi, [ebp+4]
xor	ebx, ebx
cmp	[ebp+8], ebx
jbe	short loc_1008C94C
jmp	short loc_1008C910
align 10h
			
mov	edx, [esp+48h+arg_C]
mov	ecx, [edi]
push	edx
mov	edx, [esi]
lea	eax, [esp+4Ch+var_34]
push	eax
push	ecx
push	edx
call	sub_1008C5C0
add	esp, 10h
mov	[esp+48h+var_28], eax
test	eax, eax
jnz	loc_1008C9D8
mov	eax, [esp+48h+var_38]
mov	ecx, [esp+48h+var_34]
mov	[eax], ecx
add	[esp+48h+var_38], 4
inc	ebx
add	edi, 4
cmp	ebx, [ebp+8]
jb	short loc_1008C910
mov	eax, [esp+48h+arg_0]
mov	ecx, [esp+48h+arg_8]
mov	[esi+8], eax
xor	eax, eax
mov	[esi+0Ch], eax
mov	[esi+10h], eax
mov	eax, [esp+48h+var_28]
mov	[ecx], esi
			
mov	ebx, [esp+48h+arg_C]
			
cmp	[esp+48h+var_18], 0
jnz	short loc_1008C980
test	eax, eax
jnz	short loc_1008C980
cmp	[esp+48h+var_14], eax
jnz	short loc_1008C980
cmp	[esp+48h+var_4], eax
jz	short loc_1008C9AD
			
test	esi, esi
jz	short loc_1008C9AD
push	ebx
push	esi
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
test	eax, eax
jz	short loc_1008C9AD
push	ebx
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], 0
			
push	ebx
push	1
lea	eax, [esp+50h+var_2C]
push	9
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 9Eh
jmp	short loc_1008C965
mov	edx, [eax+4]
mov	[esp+48h+var_10], edx
mov	[esp+48h+var_1C], 9Eh
jmp	loc_1008C965
			
mov	ecx, [esp+44h+arg_C]
push	ecx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
			
sub	esp, 40h
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_2C], offset aPkix_pl_cer_78 
mov	[esp+4Ch+var_C], 9
cmp	esi, ebx
jz	loc_1008CC79
mov	eax, [esp+4Ch+arg_8]
cmp	eax, ebx
jz	loc_1008CC79
mov	edi, [esp+4Ch+arg_C]
push	ebp
mov	ebp, 1
mov	[eax], ebp
cmp	[esp+50h+arg_0], ebx
jz	loc_1008CC5F
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	[esp+50h+var_34], eax
cmp	eax, ebx
jnz	short loc_1008CADD
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008CAB7
mov	ecx, [esp+50h+var_C]
push	edi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	eax, [esp+58h+var_2C]
push	9
push	eax
mov	[esp+60h+var_18], ebp
mov	[esp+60h+var_1C], 338h
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 40h
retn
mov	eax, [esi+4]
mov	[esp+50h+var_30], eax
cmp	eax, ebx
jnz	short loc_1008CB0F
mov	edx, edi
push	edx
mov	[esp+54h+var_18], ebp
mov	[esp+54h+var_1C], 2BCh
push	ebp
lea	eax, [esp+58h+var_2C]
push	1Fh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 40h
retn
mov	edx, [esp+50h+arg_0]
mov	ebp, [esi+8]
push	edi
lea	ecx, [esp+54h+var_3C]
push	ecx
push	edx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1008CB41
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 284h
jmp	loc_1008CC51
mov	[esp+50h+arg_4], ebx
cmp	[esp+50h+var_3C], ebx
jbe	loc_1008CC51
nop
mov	edx, [esp+50h+arg_4]
mov	eax, [esp+50h+arg_0]
push	edi
lea	ecx, [esp+54h+var_40]
push	ecx
push	edx
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1008CC0C
mov	edx, [esp+50h+var_40]
push	edi
lea	ecx, [esp+54h+var_38]
push	ecx
push	edx
call	sub_10089020
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jnz	loc_1008CC1D
mov	eax, [esp+50h+var_40]
cmp	eax, ebx
jz	short loc_1008CBC4
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_1008CBC0
push	edi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_40], ebx
xor	esi, esi
cmp	ebp, ebx
jbe	short loc_1008CBF7
lea	ebx, [ebx+0]
mov	ecx, [esp+50h+var_30]
mov	eax, [ecx+esi*4]
cmp	eax, ebx
jz	short loc_1008CC2E
mov	edx, [esp+50h+var_38]
push	edx
push	eax
mov	eax, [esp+58h+var_34]
push	eax
call	CERT_CheckNameSpace
add	esp, 0Ch
cmp	eax, ebx
jnz	short loc_1008CC46
inc	esi
cmp	esi, ebp
jb	short loc_1008CBD0
mov	eax, [esp+50h+arg_4]
inc	eax
mov	[esp+50h+arg_4], eax
cmp	eax, [esp+50h+var_3C]
jb	loc_1008CB50
jmp	short loc_1008CC51
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 283h
jmp	short loc_1008CC51
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 1FBh
jmp	short loc_1008CC51
push	edi
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
push	1
jmp	loc_1008CAF8
cmp	eax, 0FFFFFFFFh
jnz	short loc_1008CC51
mov	ecx, [esp+50h+arg_8]
mov	[ecx], ebx
			
mov	edx, [esp+50h+var_34]
push	ebx
push	edx
call	PORT_FreeArena_Util
add	esp, 8
push	edi
push	1
lea	eax, [esp+58h+var_2C]
push	9
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 40h
retn
			
mov	ecx, [esp+4Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+54h+var_2C]
push	1Fh
push	edx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 40h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_pl_ocsp_1 
mov	[esp+38h+var_C], 33h
cmp	esi, ebx
jnz	short loc_1008CD0D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	2Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_1008CD39
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 302h
jmp	loc_1008CDF6
mov	eax, [esi+10h]
cmp	eax, ebx
jz	short loc_1008CD49
push	eax
call	CERT_DestroyOCSPRequest
add	esp, 4
mov	eax, [esi+14h]
cmp	eax, ebx
jz	short loc_1008CD5B
push	1
push	eax
call	SECITEM_FreeItem_Util
add	esp, 8
mov	eax, [esi+18h]
cmp	eax, ebx
jz	short loc_1008CD6B
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_1008CD98
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1008CD96
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi], ebx
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_1008CDC7
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1008CDC4
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+4], ebx
mov	eax, [esi+0Ch]
cmp	eax, ebx
jz	short loc_1008CDF6
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_1008CDF3
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0Ch], ebx
			
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	33h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 38h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	esi, [esp+48h+arg_0]
xor	ebp, ebp
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_2C], offset aPkix_pl_ocsp_2 
mov	[esp+48h+var_C], 33h
cmp	esi, ebx
jz	loc_1008D00F
cmp	[esp+48h+arg_4], ebx
jz	loc_1008D00F
mov	edi, [esp+48h+arg_8]
push	edi
push	2Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1008CE9E
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+50h+var_10], eax
lea	eax, [esp+50h+var_2C]
push	33h
push	eax
mov	[esp+58h+var_1C], 302h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	ecx, [esp+48h+arg_4]
mov	[ecx], ebx
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_1008CEEA
push	edi
lea	edx, [esp+4Ch+var_38]
push	edx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1008CEEE
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+50h+var_10], eax
lea	eax, [esp+50h+var_2C]
push	33h
push	eax
mov	[esp+58h+var_1C], 94h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	[esp+48h+var_38], ebx
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_1008CF35
push	edi
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	eax
call	sub_10095A20
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1008CF39
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+50h+var_2C]
push	33h
push	eax
mov	[esp+58h+var_10], edx
mov	[esp+58h+var_1C], 184h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	[esp+48h+var_34], ebx
cmp	dword ptr [esi+8], 1
jnz	short loc_1008CF44
mov	ebp, 0FFh
mov	esi, [esi+0Ch]
cmp	esi, ebx
jz	short loc_1008CF8B
push	edi
lea	eax, [esp+4Ch+var_30]
push	eax
push	esi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1008CF8F
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+50h+var_2C]
push	33h
push	eax
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 94h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	[esp+48h+var_30], ebx
test	ebp, 0FFFFFFh
jnz	short loc_1008CFA1
cmp	[esp+48h+var_38], ebx
jnz	short loc_1008CFA1
xor	eax, eax
jmp	short loc_1008CFA6
			
mov	eax, 1
test	eax, 0FFFFFFh
jnz	short loc_1008CFB7
cmp	[esp+48h+var_34], ebx
jnz	short loc_1008CFB7
xor	eax, eax
jmp	short loc_1008CFBC
			
mov	eax, 1
test	eax, 0FFFFFFh
jnz	short loc_1008CFEB
cmp	[esp+48h+var_30], ebx
jnz	short loc_1008CFEB
mov	edx, [esp+48h+arg_4]
push	edi
xor	eax, eax
push	1
mov	[edx], eax
lea	eax, [esp+50h+var_2C]
push	33h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	edx, [esp+48h+arg_4]
mov	eax, 1
push	edi
push	eax
mov	[edx], eax
lea	eax, [esp+50h+var_2C]
push	33h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	ecx, [esp+48h+arg_8]
push	ecx
push	1
lea	edx, [esp+50h+var_2C]
push	1Fh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
xor	ebp, ebp
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_pl_ocsp_3 
mov	[esp+40h+var_C], 33h
cmp	edi, ebp
jz	loc_1008D22A
mov	esi, [esp+40h+arg_4]
cmp	esi, ebp
jz	loc_1008D22A
cmp	[esp+40h+arg_8], ebp
jz	loc_1008D22A
push	ebx
mov	ebx, [esp+44h+arg_C]
push	ebx
push	2Ch
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1008D0BF
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 1D5h
jmp	loc_1008D206
cmp	edi, esi
jnz	short loc_1008D0D0
mov	[esp+44h+var_34], 1
jmp	loc_1008D206
push	ebx
lea	ecx, [esp+48h+var_30]
push	ecx
push	esi
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1008D0FB
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 152h
jmp	loc_1008D206
cmp	[esp+44h+var_30], 2Ch
jnz	loc_1008D206
mov	eax, [edi+8]
cmp	eax, [esi+8]
jnz	loc_1008D206
mov	ecx, [edi]
cmp	ecx, ebp
jz	short loc_1008D14E
mov	eax, [esi]
cmp	eax, ebp
jz	loc_1008D202
push	ebx
lea	edx, [esp+48h+var_34]
push	edx
push	eax
push	ecx
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1008D160
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 76h
jmp	loc_1008D206
cmp	[esi], ebp
jnz	loc_1008D202
mov	[esp+44h+var_34], 1
jmp	short loc_1008D16A
cmp	[esp+44h+var_34], ebp
jz	loc_1008D206
mov	eax, [edi+4]
cmp	eax, ebp
jz	short loc_1008D1A5
mov	ecx, [esi+4]
cmp	ecx, ebp
jz	short loc_1008D1A1
push	ebx
lea	edx, [esp+48h+var_34]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1008D1B4
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 182h
jmp	short loc_1008D206
cmp	eax, ebp
jnz	short loc_1008D202
cmp	[esi+4], ebp
jnz	short loc_1008D202
mov	[esp+44h+var_34], 1
jmp	short loc_1008D1BA
cmp	[esp+44h+var_34], ebp
jz	short loc_1008D206
mov	eax, [edi+0Ch]
cmp	eax, ebp
jz	short loc_1008D1F5
mov	ecx, [esi+0Ch]
cmp	ecx, ebp
jz	short loc_1008D1F1
push	ebx
lea	edx, [esp+48h+var_34]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1008D206
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 76h
jmp	short loc_1008D206
cmp	eax, ebp
jnz	short loc_1008D202
mov	[esp+44h+var_34], 1
cmp	[esi+0Ch], ebp
jz	short loc_1008D206
			
mov	[esp+44h+var_34], ebp
			
mov	ecx, [esp+44h+arg_8]
mov	edx, [esp+44h+var_34]
push	ebx
push	1
lea	eax, [esp+4Ch+var_2C]
push	33h
push	eax
mov	[ecx], edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB850
push	1
mov	[esp+60h+var_50], offset aOcsprequest 
mov	[esp+60h+var_48], 1Ch
mov	[esp+60h+var_44], offset sub_1008CCB0
mov	[esp+60h+var_40], offset sub_1008D040
mov	[esp+60h+var_3C], offset sub_1008CE10
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	33h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_ocspre 
mov	[esp+68h+var_C], 33h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 44h
push	ebx
push	ebp
mov	ebp, [esp+4Ch+arg_0]
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	[esp+54h+var_44], ebx
mov	[esp+54h+var_34], ebx
mov	[esp+54h+var_30], ebx
mov	[esp+54h+var_40], ebx
mov	[esp+54h+var_2C], offset aPkix_pl_ocsp_4 
mov	[esp+54h+var_C], 33h
cmp	ebp, ebx
jz	loc_1008D5F9
cmp	[esp+54h+arg_18], ebx
jz	loc_1008D5F9
mov	edi, [esp+54h+arg_1C]
push	edi
lea	eax, [esp+58h+var_44]
push	eax
push	1Ch
push	2Ch
call	sub_100952A0
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1008D36E
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 141h
jmp	short loc_1008D393
push	edi
push	ebp
call	sub_10095450
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1008D3DE
push	edi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
			
call	sub_10078030
mov	[esp+60h+var_24], ebx
add	esp, 0Ch
			
mov	eax, [esp+54h+var_44]
cmp	eax, ebx
jz	short loc_1008D3C4
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1008D3C0
push	edi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
mov	[esp+60h+var_24], ebx
add	esp, 0Ch
mov	[esp+54h+var_44], ebx
push	edi
push	1
lea	eax, [esp+5Ch+var_2C]
push	33h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
mov	esi, [esp+54h+arg_8]
mov	eax, [esp+54h+var_44]
mov	[eax], ebp
cmp	esi, ebx
jz	short loc_1008D407
push	edi
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1008D407
push	edi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
jmp	short loc_1008D387
			
mov	edx, [esp+54h+var_44]
mov	[edx+4], esi
mov	esi, [esp+54h+arg_C]
cmp	esi, ebx
jz	short loc_1008D434
push	edi
push	esi
call	sub_10095450
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1008D434
push	edi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
jmp	loc_1008D387
			
mov	ecx, [esp+54h+var_44]
mov	[ecx+0Ch], esi
mov	edx, [esp+54h+var_44]
mov	[edx+10h], ebx
mov	eax, [esp+54h+var_44]
mov	[eax+14h], ebx
mov	ecx, [esp+54h+var_44]
mov	[ecx+18h], ebx
mov	ebp, [ebp+0]
call	CERT_GetDefaultCertDB
test	[esp+54h+arg_10], 4
mov	ecx, 1
jz	short loc_1008D466
mov	ecx, ebx
lea	edx, [esp+54h+var_40]
push	edx
push	ecx
push	ebp
push	eax
call	sub_100075D0
add	esp, 10h
cmp	eax, ebx
jnz	short loc_1008D4D6
call	PORT_GetError_Util
cmp	eax, 0FFFFE023h
jz	short loc_1008D4C2
cmp	eax, 0FFFFE075h
jz	short loc_1008D4C2
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008D4AD
mov	ecx, [esp+54h+var_C]
push	edi
push	2
push	ecx
push	ebx
push	1A5h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 1A5h
jmp	loc_1008D393
			
push	ebx
call	PORT_SetError_Util
mov	edx, [esp+58h+arg_14]
add	esp, 4
mov	[edx], ebx
jmp	loc_1008D393
mov	ecx, [esp+54h+var_44]
mov	edx, [esp+54h+arg_14]
mov	ebp, 1
mov	[ecx+18h], eax
mov	[edx], ebp
cmp	esi, ebx
jz	short loc_1008D4F0
mov	esi, [esi]
jmp	short loc_1008D4F2
mov	esi, ebx
mov	eax, [esp+54h+arg_8]
cmp	eax, ebx
jz	short loc_1008D525
push	edi
lea	ecx, [esp+58h+var_34]
push	ecx
push	eax
call	sub_100883F0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_1008D533
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 183h
jmp	loc_1008D393
call	ds:PR_Now
mov	[esp+54h+var_34], eax
mov	[esp+54h+var_30], edx
mov	eax, [esp+54h+var_40]
mov	ecx, [esp+54h+var_30]
mov	edx, [esp+54h+var_34]
push	esi
push	eax
mov	eax, [esp+5Ch+arg_0]
push	ecx
mov	ecx, [eax]
push	edx
mov	edx, [esp+64h+arg_4]
mov	eax, [edx]
push	ecx
push	eax
call	sub_10005AC0
mov	ecx, [esp+6Ch+var_44]
mov	esi, eax
add	esp, 18h
mov	[ecx+10h], esi
cmp	esi, ebx
jnz	short loc_1008D597
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008D586
mov	edx, [esp+54h+var_C]
push	edi
push	2
push	edx
push	ebx
push	3EAh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], ebp
mov	[esp+54h+var_1C], 3EAh
jmp	loc_1008D393
push	83h
push	esi
call	CERT_AddOCSPAcceptableResponses
add	esp, 8
cmp	eax, 0FFFFFFFFh
jnz	short loc_1008D5DB
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1008D5CA
mov	ecx, [esp+54h+var_C]
push	edi
push	2
push	ecx
push	ebx
push	3E7h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], ebp
mov	[esp+54h+var_1C], 3E7h
jmp	loc_1008D393
push	ebx
push	esi
push	ebx
call	CERT_EncodeOCSPRequest
mov	edx, [esp+60h+var_44]
mov	ecx, [esp+60h+arg_18]
mov	[edx+14h], eax
mov	eax, [esp+60h+var_44]
mov	[ecx], eax
jmp	loc_1008D3BD
			
mov	ecx, [esp+54h+arg_1C]
push	ecx
push	1
lea	edx, [esp+5Ch+var_2C]
push	1Fh
push	edx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_ocsp_9 
mov	[esp+30h+var_C], 33h
pop	esi
test	ecx, ecx
jz	short loc_1008D686
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1008D686
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+14h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	33h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_ocs_10 
mov	[esp+30h+var_C], 33h
pop	esi
test	ecx, ecx
jz	short loc_1008D706
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1008D706
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+18h]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	33h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
xor	edi, edi
mov	[esp+34h+var_2C], offset aPkix_pl_ocsp_5 
mov	[esp+34h+var_C], 34h
cmp	esi, edi
jnz	short loc_1008D78B
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
push	ebp
mov	ebp, [esp+38h+arg_4]
push	ebp
push	2Dh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, edi
jz	short loc_1008D7B8
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2DAh
jmp	loc_1008D8B2
mov	eax, [esi+30h]
cmp	eax, edi
jz	short loc_1008D7CB
push	eax
call	CERT_DestroyOCSPResponse
add	esp, 4
mov	[esi+30h], edi
mov	eax, [esi+34h]
cmp	eax, edi
jz	short loc_1008D7DE
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	[esi+34h], edi
push	ebx
mov	ebx, [esi+8]
cmp	ebx, edi
jz	short loc_1008D812
cmp	word ptr [ebx],	1
jnz	short loc_1008D812
mov	eax, [esi+10h]
cmp	eax, edi
jz	short loc_1008D7FF
push	eax
mov	eax, [ebx+24h]
call	eax
add	esp, 4
mov	[esi+10h], edi
mov	eax, [esi+0Ch]
cmp	eax, edi
jz	short loc_1008D812
mov	ecx, [ebx+0Ch]
push	eax
call	ecx
add	esp, 4
mov	[esi+0Ch], edi
			
mov	eax, [esi]
pop	ebx
cmp	eax, edi
jz	short loc_1008D825
push	edi
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	[esi], edi
mov	eax, [esi+28h]
cmp	eax, edi
jz	short loc_1008D854
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1008D851
push	ebp
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[esi+28h], edi
mov	eax, [esi+2Ch]
cmp	eax, edi
jz	short loc_1008D883
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1008D880
push	ebp
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[esi+2Ch], edi
mov	eax, [esi+4]
cmp	eax, edi
jz	short loc_1008D8B2
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1008D8AF
push	ebp
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[esi+4], edi
			
push	ebp
push	1
lea	edx, [esp+40h+var_2C]
push	34h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_ocsp_6 
mov	[esp+38h+var_C], 34h
test	esi, esi
jz	loc_1008D9BA
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_1008D9BA
mov	edi, [esp+38h+arg_8]
push	edi
push	2Dh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008D94E
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	34h
push	edx
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 2DAh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	ecx, [esi+18h]
cmp	dword ptr [ecx+4], 0
jnz	short loc_1008D976
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	34h
push	edx
mov	dword ptr [ebx], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	eax, ecx
mov	edx, [eax+8]
mov	eax, [eax+4]
push	edi
push	ebx
push	edx
push	eax
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008D9A1
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 20Ch
push	edi
push	1
lea	edx, [esp+40h+var_2C]
push	34h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_ocsp_7 
mov	[esp+3Ch+var_C], 34h
test	esi, esi
jz	loc_1008DB09
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_1008DB09
mov	ebp, [esp+3Ch+arg_8]
test	ebp, ebp
jz	loc_1008DB09
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebx
push	2Dh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008DA6F
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 1D2h
jmp	loc_1008DAEF
cmp	esi, edi
jnz	short loc_1008DA7C
mov	dword ptr [ebp+0], 1
jmp	short loc_1008DAEF
push	ebx
lea	ecx, [esp+44h+var_30]
push	ecx
push	edi
mov	dword ptr [ebp+0], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1008DAAB
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 152h
jmp	short loc_1008DAEF
cmp	[esp+40h+var_30], 2Dh
jnz	short loc_1008DAEF
mov	ecx, [esi+18h]
mov	eax, [ecx+4]
mov	edx, [edi+18h]
mov	ebp, [edx+4]
test	eax, eax
jz	short loc_1008DAEF
test	ebp, ebp
jz	short loc_1008DAEF
mov	edi, [ecx+8]
cmp	edi, [edx+8]
jnz	short loc_1008DAEF
xor	esi, esi
test	edi, edi
jz	short loc_1008DAE5
sub	ebp, eax
mov	cl, [eax]
mov	dl, [eax+ebp]
inc	eax
cmp	cl, dl
jnz	short loc_1008DAEF
inc	esi
cmp	esi, edi
jb	short loc_1008DAD6
mov	eax, [esp+40h+arg_8]
mov	dword ptr [eax], 1
			
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	34h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_C]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	34h
push	ecx
mov	[esp+44h+var_2C], offset aPkix_pl_ocsp_0 
mov	[esp+44h+var_C], 34h
mov	dword_100BB874,	offset aOcspresponse 
mov	dword_100BB87C,	38h
mov	dword_100BB880,	offset sub_1008D730
mov	dword_100BB884,	offset sub_1008D9F0
mov	dword_100BB888,	offset sub_1008D8D0
mov	dword_100BB894,	offset sub_10072730
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 184h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+184h+var_4], eax
mov	ecx, [esp+184h+arg_8]
mov	edx, [esp+184h+arg_14]
mov	eax, [esp+184h+arg_4]
push	ebx
mov	ebx, [esp+188h+arg_0]
push	ebp
mov	ebp, [esp+18Ch+arg_10]
mov	[esp+18Ch+var_13C], ecx
mov	ecx, [esp+18Ch+arg_18]
push	esi
push	edi
mov	[esp+194h+var_180], ecx
mov	[esp+194h+var_12C], edx
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+194h+var_168]
rep movsd
mov	[esp+194h+var_114], ebx
mov	[esp+194h+Size], eax
mov	[esp+194h+var_108], ebp
mov	[esp+194h+var_134], edx
mov	[esp+194h+var_184], edx
mov	[esp+194h+var_178], edx
mov	[esp+194h+var_128], edx
mov	[esp+194h+var_130], edx
mov	[esp+194h+var_16C], edx
mov	[esp+194h+var_118], edx
mov	[esp+194h+var_120], edx
mov	[esp+194h+var_170], edx
mov	[esp+194h+var_174], edx
mov	[esp+194h+var_138], edx
mov	[esp+194h+var_124], edx
mov	[esp+194h+Src],	edx
mov	[esp+194h+var_168], offset aPkix_pl_ocsp_8 
mov	[esp+194h+var_148], 34h
cmp	ebp, edx
jz	loc_1008DD73
cmp	[esp+194h+var_12C], edx
jz	loc_1008DD73
mov	ecx, offset aGet 
lea	ecx, [ecx+0]
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1008DCB0
test	dl, dl
jz	short loc_1008DCAC
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1008DCB0
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_1008DC90
xor	eax, eax
jmp	short loc_1008DCB5
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_1008DD22
mov	eax, [esp+194h+Size]
mov	ecx, offset aPost 
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1008DCE2
test	dl, dl
jz	short loc_1008DCDE
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1008DCE2
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_1008DCC2
xor	eax, eax
jmp	short loc_1008DCE7
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
test	eax, eax
jnz	short loc_1008DD22
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008DD0D
mov	edx, [esp+194h+var_180]
push	edx
push	2
push	34h
push	0
push	439h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+194h+var_154], 1
mov	[esp+194h+var_158], 439h
jmp	loc_1008E3B9
			
mov	eax, [ebp+0]
mov	[esp+194h+var_134], eax
mov	dword ptr [ebp+0], 0
test	eax, eax
jz	short loc_1008DDB2
mov	eax, [esp+194h+var_12C]
mov	eax, [eax]
mov	[esp+194h+var_184], eax
test	eax, eax
jnz	short loc_1008DD52
mov	ecx, [esp+194h+var_180]
push	ecx
push	1
push	1Fh
lea	edx, [esp+1A0h+var_168]
push	edx
jmp	short loc_1008DD81
mov	edi, [eax+8]
mov	ecx, [eax+0Ch]
mov	[esp+194h+var_170], ecx
mov	edx, [eax+10h]
mov	[esp+194h+var_174], edx
test	edi, edi
jz	short loc_1008DD73
test	ecx, ecx
jz	short loc_1008DD73
test	edx, edx
jnz	loc_1008E1F1
			
mov	eax, [esp+194h+var_180]
push	eax
push	1
push	1Fh
lea	ecx, [esp+1A0h+var_168]
push	ecx
			
mov	[esp+1A4h+var_154], 1
mov	[esp+1A4h+var_158], 2BCh
call	sub_100781E0
mov	ecx, [esp+1A4h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 184h
retn
mov	eax, [esp+194h+var_180]
mov	edx, [eax+10h]
mov	[esp+194h+var_10C], edx
push	eax
test	ebx, ebx
jnz	short loc_1008DDD0
push	1
push	1Fh
lea	eax, [esp+1A0h+var_168]
push	eax
jmp	short loc_1008DD81
lea	ecx, [esp+198h+var_138]
push	ecx
push	ebx
call	sub_1008D630
add	esp, 0Ch
mov	[esp+194h+var_164], eax
test	eax, eax
jz	short loc_1008DDFA
mov	edx, [eax+4]
mov	[esp+194h+var_14C], edx
mov	[esp+194h+var_158], 320h
jmp	loc_1008E3B9
mov	edi, [esp+194h+var_13C]
test	edi, edi
jz	short loc_1008DE08
mov	[esp+194h+var_13C], edi
jmp	short loc_1008DE13
call	SEC_GetRegisteredHttpClient
mov	edi, eax
mov	[esp+194h+var_13C], eax
test	edi, edi
jz	loc_1008E3A7
cmp	word ptr [edi],	1
jnz	loc_1008E3A7
mov	eax, [esp+194h+Size]
xor	ebp, ebp
mov	ecx, offset aPost 
mov	dl, [eax]
cmp	dl, [ecx]
jnz	short loc_1008DE50
test	dl, dl
jz	short loc_1008DE4C
mov	dl, [eax+1]
cmp	dl, [ecx+1]
jnz	short loc_1008DE50
add	eax, 2
add	ecx, 2
test	dl, dl
jnz	short loc_1008DE30
xor	eax, eax
jmp	short loc_1008DE55
			
sbb	eax, eax
sbb	eax, 0FFFFFFFFh
mov	esi, [esp+194h+var_180]
mov	edx, [esp+194h+var_114]
xor	ebx, ebx
test	eax, eax
setz	bl
push	esi
lea	ecx, [esp+198h+var_128]
push	ecx
lea	eax, [edi+4]
push	edx
mov	[esp+1A0h+var_178], eax
mov	[esp+1A0h+var_110], ebx
call	sub_1008D6B0
add	esp, 0Ch
mov	[esp+194h+var_164], eax
test	eax, eax
jz	short loc_1008DEA0
mov	eax, [eax+4]
mov	[esp+194h+var_14C], eax
mov	[esp+194h+var_158], 321h
jmp	loc_1008E3B9
lea	ecx, [esp+194h+var_16C]
push	ecx
mov	ecx, [esp+198h+var_128]
lea	edx, [esp+198h+var_120]
push	edx
lea	eax, [esp+19Ch+var_130]
push	eax
push	ecx
call	sub_100069D0
add	esp, 10h
cmp	eax, 0FFFFFFFFh
mov	eax, [esp+194h+var_130]
jz	loc_1008E258
test	eax, eax
jz	loc_1008E258
cmp	[esp+194h+var_16C], ebp
jz	loc_1008E258
mov	ecx, [esp+194h+var_120]
lea	edx, [esp+194h+var_170]
push	edx
mov	edx, [esp+198h+var_178]
push	ecx
push	eax
mov	eax, [edx]
call	eax
add	esp, 0Ch
test	eax, eax
jz	short loc_1008DF2B
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008DF16
mov	ecx, [esp+194h+var_148]
push	esi
push	2
push	ecx
push	0
push	328h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+194h+var_154], 1
mov	[esp+194h+var_158], 328h
jmp	loc_1008E3B9
mov	esi, [esp+194h+var_16C]
test	ebx, ebx
jnz	loc_1008E07C
mov	eax, esi
lea	edx, [eax+1]
lea	esp, [esp+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1008DF40
sub	eax, edx
mov	edi, eax
cmp	byte ptr [edi+esi-1], 2Fh
jz	short loc_1008DF57
mov	ebx, 1
mov	esi, [esp+194h+var_138]
mov	edx, [esi+8]
add	edx, 2
mov	eax, 0AAAAAAABh
mul	edx
shr	edx, 1
add	edx, edx
add	edx, edx
cmp	edx, 0FFh
jbe	short loc_1008DFB0
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008DF9B
mov	ecx, [esp+194h+var_180]
mov	edx, [esp+194h+var_148]
push	ecx
push	2
push	edx
push	0
push	43Ah
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+194h+var_154], 1
mov	[esp+194h+var_158], 43Ah
jmp	loc_1008E3B9
push	100h		
lea	eax, [esp+198h+Dst]
push	0		
push	eax		
call	memset
mov	edx, [esi+8]
mov	eax, [esi+4]
lea	ecx, [esp+1A0h+Dst]
push	ecx
push	edx
push	eax
call	PL_Base64Encode
lea	ecx, [esp+1ACh+Dst]
push	0
push	ecx
call	sub_10006BE0
add	eax, edi
add	eax, ebx
push	eax
call	PORT_Alloc_Util
mov	ebp, eax
add	esp, 24h
test	ebp, ebp
jnz	short loc_1008E035
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008E020
mov	edx, [esp+194h+var_180]
mov	ecx, [esp+194h+var_148]
push	edx
push	2
push	ecx
push	0
push	338h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+194h+var_154], 1
mov	[esp+194h+var_158], 338h
jmp	loc_1008E3B9
mov	ecx, [esp+194h+var_16C]
mov	edx, ebp
jmp	short loc_1008E040
align 10h
			
mov	al, [ecx]
mov	[edx], al
inc	ecx
inc	edx
test	al, al
jnz	short loc_1008E040
lea	eax, [edi+ebp]
cmp	eax, ebp
jbe	short loc_1008E05E
test	ebx, ebx
jz	short loc_1008E05E
mov	edx, 2Fh
mov	[eax], dx
inc	eax
			
push	eax
lea	eax, [esp+198h+Dst]
push	eax
call	sub_10006BE0
mov	edi, [esp+19Ch+var_13C]
mov	ebx, [esp+19Ch+var_110]
add	esp, 8
mov	esi, ebp
mov	edx, [esp+194h+var_10C]
lea	ecx, [esp+194h+var_174]
push	ecx
push	edx
call	ds:PR_SecondsToInterval
mov	ecx, [esp+19Ch+var_170]
mov	edx, [esp+19Ch+var_178]
add	esp, 4
push	eax
mov	eax, [esp+19Ch+Size]
push	eax
mov	eax, [edx+0Ch]
push	esi
push	offset aHttp_1	
push	ecx
call	eax
add	esp, 18h
mov	esi, eax
test	ebp, ebp
jz	short loc_1008E0BE
push	ebp
call	PORT_Free_Util
add	esp, 4
xor	ebp, ebp
cmp	esi, ebp
jz	short loc_1008E0E3
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	loc_1008DF16
mov	ecx, [esp+194h+var_180]
mov	edx, [esp+194h+var_148]
push	ecx
push	2
push	edx
push	ebp
jmp	loc_1008DF08
cmp	ebx, ebp
jz	short loc_1008E10D
mov	eax, [esp+194h+var_138]
mov	ecx, [eax+8]
mov	edx, [eax+4]
mov	eax, [esp+194h+var_174]
push	offset aApplicationO_0 
push	ecx
mov	ecx, [esp+19Ch+var_178]
push	edx
mov	edx, [ecx+10h]
push	eax
call	edx
add	esp, 10h
test	eax, eax
jnz	short loc_1008E0C4
mov	esi, [esp+194h+var_180]
push	esi
lea	eax, [esp+198h+var_184]
push	eax
push	38h
push	2Dh
call	sub_100952A0
add	esp, 10h
mov	[esp+194h+var_164], eax
cmp	eax, ebp
jz	short loc_1008E13F
mov	ecx, [eax+4]
mov	[esp+194h+var_14C], ecx
mov	[esp+194h+var_158], 141h
jmp	loc_1008E3B9
mov	ebx, [esp+194h+var_114]
push	esi
push	ebx
call	sub_10095450
add	esp, 8
mov	[esp+194h+var_160], eax
cmp	eax, ebp
jz	short loc_1008E170
push	esi
push	eax
lea	edx, [esp+19Ch+var_168]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+194h+var_160], ebp
jmp	loc_1008E3B9
mov	eax, [esp+194h+var_184]
mov	[eax+4], ebx
mov	ecx, [esp+194h+var_184]
mov	[ecx+8], edi
mov	edx, [esp+194h+var_170]
mov	eax, [esp+194h+var_184]
mov	[eax+0Ch], edx
mov	ecx, [esp+194h+var_174]
mov	edx, [esp+194h+var_184]
mov	[esp+194h+var_170], ebp
mov	[edx+10h], ecx
mov	eax, [esp+194h+var_184]
mov	ecx, [esp+194h+arg_C]
mov	[esp+194h+var_174], ebp
mov	[eax+14h], ecx
call	CERT_GetDefaultCertDB
mov	edx, [esp+194h+var_184]
mov	[edx+1Ch], eax
mov	eax, [esp+194h+var_184]
mov	[eax+18h], ebp
mov	ecx, [esp+194h+var_184]
mov	[ecx], ebp
mov	edx, [esp+194h+var_184]
mov	[edx+20h], ebp
mov	eax, [esp+194h+var_184]
mov	[eax+24h], ebp
mov	ecx, [esp+194h+var_184]
mov	[ecx+28h], ebp
mov	edx, [esp+194h+var_184]
mov	[edx+2Ch], ebp
mov	eax, [esp+194h+var_184]
mov	[eax+30h], ebp
mov	ecx, [esp+194h+var_184]
mov	[ecx+34h], ebp
mov	eax, [esp+194h+var_184]
cmp	word ptr [edi],	1
jnz	loc_1008E3AB
mov	esi, [esp+194h+var_180]
mov	ecx, [esi+14h]
mov	[esp+194h+Size], ecx
mov	eax, [eax+10h]
lea	edx, [esp+194h+Size]
push	edx
lea	ecx, [esp+198h+Src]
push	ecx
push	0
lea	edx, [esp+1A0h+var_118]
push	edx
lea	ecx, [esp+1A4h+var_124]
push	ecx
mov	ecx, [edi+1Ch]
lea	edx, [esp+1A8h+var_134]
add	edi, 4
push	edx
push	eax
mov	[esp+1B0h+var_178], edi
call	ecx
add	esp, 1Ch
test	eax, eax
jz	short loc_1008E28E
mov	eax, dword_100BAE9C
test	eax, eax
jz	loc_1008DF16
mov	edx, [esp+194h+var_148]
push	esi
push	2
push	edx
jmp	loc_1008DF06
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008E279
mov	edx, [esp+194h+var_148]
push	esi
push	2
push	edx
push	0
push	40Eh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+194h+var_154], 1
mov	[esp+194h+var_158], 40Eh
jmp	loc_1008E3B9
mov	eax, [esp+194h+var_118]
push	offset aApplicationOcs 
push	eax
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jnz	loc_1008DEF5
mov	eax, [esp+194h+var_134]
test	eax, eax
jz	short loc_1008E2BC
mov	edx, [esp+194h+var_108]
jmp	loc_1008E3B7
mov	eax, 0C8h
cmp	word ptr [esp+194h+var_124], ax
jz	short loc_1008E2FE
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008E2E9
mov	ecx, [esp+194h+var_148]
push	esi
push	2
push	ecx
push	0
push	31Dh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+194h+var_154], 1
mov	[esp+194h+var_158], 31Dh
jmp	loc_1008E3B9
push	800h
call	PORT_NewArena_Util
mov	edx, [esp+198h+var_184]
mov	[edx], eax
mov	eax, [esp+198h+var_184]
add	esp, 4
cmp	dword ptr [eax], 0
jnz	short loc_1008E351
mov	eax, dword_100BAE9C
test	eax, eax
jz	loc_1008E020
mov	ecx, [esp+194h+var_148]
push	esi
push	2
push	ecx
push	0
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+194h+var_154], 1
mov	[esp+194h+var_158], 338h
jmp	short loc_1008E3B9
mov	edx, [esp+194h+Size]
mov	eax, [eax]
push	edx
push	0
push	eax
call	SECITEM_AllocItem_Util
mov	ecx, [esp+1A0h+var_184]
mov	[ecx+18h], eax
mov	eax, [esp+1A0h+var_184]
add	esp, 0Ch
cmp	dword ptr [eax+18h], 0
jnz	short loc_1008E38E
mov	eax, dword_100BAE9C
test	eax, eax
jz	loc_1008E020
mov	edx, [esp+194h+var_148]
push	esi
push	2
push	edx
jmp	loc_1008E010
mov	ecx, [esp+194h+Size]
mov	edx, [esp+194h+Src]
mov	eax, [eax+18h]
push	ecx		
mov	ecx, [eax+4]
push	edx		
push	ecx		
call	memcpy
add	esp, 0Ch
			
mov	eax, [esp+194h+var_184]
mov	edx, [esp+194h+var_12C]
mov	[esp+194h+var_184], 0
mov	[edx], eax
			
mov	eax, [esp+194h+var_16C]
test	eax, eax
jz	short loc_1008E3CA
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+194h+var_130]
test	eax, eax
jz	short loc_1008E3DB
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+194h+var_184]
mov	esi, [esp+194h+var_180]
test	eax, eax
jz	short loc_1008E412
push	esi
push	eax
call	sub_100955D0
xor	edi, edi
add	esp, 8
mov	[esp+194h+var_160], eax
cmp	eax, edi
jz	short loc_1008E40E
push	esi
push	eax
lea	eax, [esp+19Ch+var_168]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+194h+var_160], edi
mov	[esp+194h+var_184], edi
mov	eax, [esp+194h+var_170]
test	eax, eax
jz	short loc_1008E427
mov	ecx, [esp+194h+var_178]
mov	edx, [ecx+8]
push	eax
call	edx
add	esp, 4
mov	eax, [esp+194h+var_174]
test	eax, eax
jz	short loc_1008E43C
push	eax
mov	eax, [esp+198h+var_178]
mov	ecx, [eax+20h]
call	ecx
add	esp, 4
push	esi
push	1
push	34h
lea	edx, [esp+1A0h+var_168]
push	edx
jmp	loc_1008DD91
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_ocs_11 
mov	[esp+34h+var_C], 34h
test	esi, esi
jz	short loc_1008E4F5
mov	eax, [esi+18h]
test	eax, eax
jz	short loc_1008E4F5
push	eax
call	CERT_DecodeOCSPResponse
add	esp, 4
mov	[esi+30h], eax
test	eax, eax
jz	short loc_1008E4C4
mov	edx, [esp+34h+arg_C]
mov	eax, [esp+34h+arg_4]
mov	ecx, [esp+34h+arg_8]
push	edx
mov	dword ptr [eax], 1
push	1
lea	eax, [esp+3Ch+var_2C]
push	34h
push	eax
mov	dword ptr [ecx], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edx, [esp+34h+arg_4]
mov	dword ptr [edx], 0
call	PORT_GetError_Util
mov	edx, [esp+34h+arg_C]
mov	ecx, [esp+34h+arg_8]
push	edx
push	1
mov	[ecx], eax
lea	eax, [esp+3Ch+var_2C]
push	34h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	ecx, [esp+34h+arg_C]
push	ecx
push	1
lea	edx, [esp+3Ch+var_2C]
push	1Fh
push	edx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_ocs_12 
mov	[esp+34h+var_C], 34h
test	eax, eax
jz	short loc_1008E5CE
mov	eax, [eax+30h]
test	eax, eax
jz	short loc_1008E5CE
mov	edi, [esp+34h+arg_4]
test	edi, edi
jz	short loc_1008E5CE
mov	esi, [esp+34h+arg_8]
test	esi, esi
jz	short loc_1008E5CE
push	eax
call	CERT_GetOCSPResponseStatus
add	esp, 4
test	eax, eax
jnz	short loc_1008E5A5
mov	dword ptr [edi], 1
mov	[esi], eax
mov	eax, [esp+34h+arg_C]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	34h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	dword ptr [edi], 0
call	PORT_GetError_Util
mov	[esi], eax
mov	eax, [esp+34h+arg_C]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	34h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	edx, [esp+34h+arg_C]
push	edx
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Fh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
cmp	dword ptr [ebx+14h], 0
push	ebp
mov	ebp, [esp+34h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_pl_ocs_14 
mov	[esp+3Ch+var_C], 34h
jz	loc_1008E6B6
lea	eax, [esp+3Ch+var_30]
push	eax
push	0
push	0
mov	eax, 1
xor	edx, edx
mov	ecx, ebp
mov	[esp+48h+var_30], 0
call	sub_1009FF80
push	eax
call	sub_1009C050
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1008E678
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 2B0h
jmp	loc_1008E70E
mov	edx, [esp+3Ch+var_30]
mov	eax, [esp+3Ch+arg_C]
mov	ecx, [esp+3Ch+arg_8]
push	edx
mov	edx, [esp+40h+arg_10]
push	0
push	eax
mov	eax, [esp+48h+arg_0]
push	ecx
mov	ecx, [ebx+28h]
push	edx
mov	edx, [ebx+2Ch]
push	eax
mov	eax, [ebx+14h]
push	ecx
push	0
push	edx
call	eax
add	esp, 24h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1008E71B
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
jmp	short loc_1008E706
mov	edx, [ebx+24h]
mov	eax, [ebx+20h]
mov	ecx, [ebx+34h]
push	0
push	0
push	edx
mov	edx, [ebx+1Ch]
push	eax
push	ebp
push	1
push	ecx
push	edx
call	CERT_VerifyCert
add	esp, 20h
test	eax, eax
jz	short loc_1008E71B
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008E6FE
mov	ecx, [esp+3Ch+arg_14]
mov	edx, [esp+3Ch+var_C]
push	ecx
push	2
push	edx
push	0
push	0E1h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 0E1h
push	0FFFFE090h
call	PORT_SetError_Util
add	esp, 4
			
mov	eax, [esp+3Ch+arg_14]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	34h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 44h
push	ebx
mov	ebx, [esp+48h+arg_0]
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	[esp+54h+var_44], 0FFFFFFFFh
mov	[esp+54h+var_38], ebp
mov	[esp+54h+var_34], ebp
mov	[esp+54h+var_40], ebp
mov	[esp+54h+var_30], ebp
mov	[esp+54h+var_3C], ebp
mov	[esp+54h+var_2C], offset aPkix_pl_ocs_13 
mov	[esp+54h+var_C], 34h
cmp	ebx, ebp
jz	loc_1008EA79
cmp	[esp+54h+arg_4], ebp
jz	loc_1008EA79
cmp	[esp+54h+arg_C], ebp
jz	loc_1008EA79
mov	eax, [esp+54h+arg_10]
cmp	eax, ebp
jz	loc_1008EA79
mov	ecx, [eax]
mov	[eax], ebp
mov	esi, [ebx+30h]
mov	[esp+54h+var_40], ecx
cmp	esi, ebp
jnz	short loc_1008E81C
push	0FFFFE081h
			
call	PORT_SetError_Util
add	esp, 4
			
mov	edx, [esp+54h+arg_C]
mov	dword ptr [edx], 0
			
test	ebp, ebp
jz	loc_1008EA4A
cmp	dword ptr [ebp+2Ch], 0
jz	short loc_1008E7EC
mov	eax, [esp+54h+var_44]
mov	[ebp+30h], eax
cmp	[esp+54h+var_44], 0
jz	loc_1008EA3B
call	PORT_GetError_Util
mov	[ebp+34h], eax
mov	eax, [ebx+34h]
test	eax, eax
jz	loc_1008EA4A
push	eax
call	CERT_DestroyCertificate
mov	dword ptr [ebx+34h], 0
jmp	loc_1008EA47
lea	edx, [esp+54h+var_3C]
push	edx
push	esi
call	sub_10006110
push	esi
mov	edi, eax
call	sub_10006130
add	esp, 0Ch
cmp	[esp+54h+var_40], 0
mov	ebp, eax
jnz	loc_1008E94F
push	0Bh
call	ds:PR_Now
push	edx
push	eax
mov	eax, [esp+60h+arg_4]
mov	ecx, [eax]
push	ecx
call	CERT_FindCertIssuer
add	esp, 10h
cmp	dword ptr [ebp+2Ch], 0
mov	esi, eax
mov	[esp+54h+var_38], esi
jz	short loc_1008E879
cmp	dword ptr [ebp+30h], 0
jnz	short loc_1008E8A9
mov	edx, [ebp+28h]
push	edx
call	CERT_DupCertificate
add	esp, 4
mov	[ebx+34h], eax
mov	ecx, [ebx+1Ch]
push	esi
push	ebp
push	edi
push	ecx
call	sub_100080A0
add	esp, 10h
mov	[ebx+34h], eax
test	eax, eax
jnz	short loc_1008E8B2
call	PORT_GetError_Util
cmp	eax, 0FFFFE073h
jnz	loc_1008E7CD
push	0FFFFE090h
jmp	loc_1008E7C5
mov	eax, [ebp+34h]
push	eax
jmp	loc_1008E7C5
mov	edx, [esp+54h+arg_14]
push	edx
lea	ecx, [ebx+2Ch]
push	ecx
push	eax
call	sub_1007D6A0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
test	eax, eax
jz	short loc_1008E8E0
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 69h
jmp	loc_1008E7CD
add	edi, 1Ch
lea	esi, [ebx+20h]
push	edi
push	esi
mov	dword ptr [ebp+2Ch], 1
call	DER_GeneralizedTimeToTime_Util
add	esp, 8
mov	[esp+54h+var_44], eax
test	eax, eax
jz	short loc_1008E911
push	0FFFFE081h
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1008EA21
mov	edi, [esp+54h+arg_14]
mov	ecx, [esi+4]
mov	edx, [esi]
push	edi
lea	eax, [ebx+28h]
push	eax
push	ecx
push	edx
call	sub_10088480
add	esp, 10h
mov	[esp+54h+var_28], eax
test	eax, eax
jz	short loc_1008E953
mov	eax, [eax+4]
mov	ecx, [esp+54h+arg_C]
mov	[esp+54h+var_10], eax
mov	[esp+54h+var_1C], 17Fh
mov	dword ptr [ecx], 1
jmp	loc_1008E7D7
mov	edi, [esp+54h+arg_14]
mov	ecx, [ebx+34h]
mov	edx, [ebx+1Ch]
push	ecx
push	edx
call	sub_10007190
add	esp, 8
xor	esi, esi
test	eax, eax
jnz	loc_1008EA0A
mov	eax, [ebx+34h]
push	esi
push	eax
call	CERT_IsCACert
push	edi
neg	eax
lea	ecx, [esp+60h+var_40]
push	ecx
sbb	eax, eax
lea	edx, [esp+64h+var_34]
push	edx
mov	edx, [esp+68h+arg_8]
neg	eax
lea	ecx, [esp+68h+var_30]
push	ecx
add	eax, 0Ah
push	eax
push	edx
mov	[esp+74h+var_14], esi
call	sub_1008E600
add	esp, 20h
mov	[esp+54h+var_28], eax
cmp	eax, esi
jz	short loc_1008E9E7
mov	[esp+54h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
cmp	ecx, 1Fh
jz	short loc_1008EA21
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, esi
jz	short loc_1008E9E3
push	edi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], esi
mov	[esp+54h+var_28], esi
cmp	[esp+54h+var_14], esi
jz	short loc_1008E9FA
mov	[esp+54h+var_44], 0FFFFFFFFh
jmp	loc_1008E7CD
mov	eax, [esp+54h+var_40]
cmp	eax, esi
jz	short loc_1008EA0A
mov	ecx, [esp+54h+arg_10]
mov	[ecx], eax
jmp	short loc_1008EA21
			
mov	edx, [esp+54h+var_3C]
mov	eax, [ebx+34h]
push	esi
push	edx
push	ebp
push	eax
call	sub_10006F80
add	esp, 10h
mov	[esp+54h+var_44], eax
			
cmp	[esp+54h+var_44], 0
jnz	loc_1008E7CD
mov	ecx, [esp+54h+arg_C]
mov	dword ptr [ecx], 1
jmp	loc_1008E7D7
mov	ecx, [ebx+34h]
push	ecx
call	CERT_DupCertificate
mov	[ebp+28h], eax
add	esp, 4
			
mov	eax, [esp+54h+var_38]
test	eax, eax
jz	short loc_1008EA5B
push	eax
call	CERT_DestroyCertificate
add	esp, 4
mov	edx, [esp+54h+arg_14]
push	edx
push	1
lea	eax, [esp+5Ch+var_2C]
push	34h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
			
mov	ecx, [esp+54h+arg_14]
push	ecx
push	1
lea	edx, [esp+5Ch+var_2C]
push	1Fh
push	edx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
sub	esp, 38h
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_4]
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_38], ebx
mov	[esp+44h+var_2C], offset aPkix_pl_ocs_15 
mov	[esp+44h+var_C], 34h
cmp	esi, ebx
jz	loc_1008EC6D
cmp	[esp+44h+arg_10], ebx
jz	loc_1008EC6D
cmp	[esp+44h+arg_14], ebx
jz	loc_1008EC6D
cmp	[esi+34h], ebx
jz	loc_1008EC5D
cmp	[esi+4], ebx
jz	loc_1008EC5D
mov	edi, [esp+44h+arg_0]
cmp	edi, ebx
jz	loc_1008EC4D
cmp	[edi], ebx
jz	loc_1008EC4D
mov	eax, [esp+44h+arg_C]
push	ebp
mov	ebp, [esp+48h+arg_18]
cmp	eax, ebx
jz	short loc_1008EB7D
push	ebp
lea	ecx, [esp+4Ch+var_34]
push	ecx
push	eax
call	sub_100883F0
add	esp, 0Ch
cmp	eax, ebx
jz	short loc_1008EB6F
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_1008EB6F
push	ebp
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
			
mov	eax, [esp+48h+var_34]
mov	edx, [esp+48h+var_30]
mov	ecx, eax
or	ecx, edx
jnz	short loc_1008EB8B
call	ds:PR_Now
mov	[esp+48h+var_34], eax
mov	[esp+48h+var_30], edx
lea	ecx, [esp+48h+var_38]
push	ecx
mov	ecx, [esi+30h]
push	edx
mov	edx, [esi+34h]
push	eax
mov	eax, [edi]
push	edx
mov	edx, [esi+1Ch]
push	eax
push	ecx
push	edx
call	sub_10008650
mov	esi, eax
add	esp, 1Ch
cmp	esi, ebx
jnz	short loc_1008EBCF
mov	eax, [esp+48h+var_30]
mov	ecx, [esp+48h+var_34]
mov	edx, [esp+48h+var_38]
push	eax
mov	eax, [edx+14h]
push	ecx
push	eax
call	sub_100076E0
mov	esi, eax
add	esp, 0Ch
cmp	esi, ebx
jz	short loc_1008EBD5
cmp	[esp+48h+arg_8], ebx
jz	short loc_1008EC0C
mov	eax, [esp+48h+var_38]
mov	[esp+48h+arg_4], ebx
cmp	eax, ebx
jz	short loc_1008EBF4
mov	edx, [edi]
lea	ecx, [esp+48h+arg_4]
push	ecx
push	eax
push	edx
call	sub_10008600
add	esp, 0Ch
jmp	short loc_1008EC04
mov	ecx, [edi]
lea	eax, [esp+48h+arg_4]
push	eax
push	ecx
call	sub_100087B0
add	esp, 8
cmp	[esp+48h+arg_4], ebx
jz	short loc_1008EC0C
mov	[edi], ebx
			
cmp	esi, ebx
jnz	short loc_1008EC22
mov	edx, [esp+48h+arg_10]
mov	eax, [esp+48h+arg_14]
mov	dword ptr [edx], 1
mov	[eax], ebx
jmp	short loc_1008EC33
mov	ecx, [esp+48h+arg_10]
mov	[ecx], ebx
call	PORT_GetError_Util
mov	edx, [esp+48h+arg_14]
mov	[edx], eax
push	ebp
push	1
lea	eax, [esp+50h+var_2C]
push	34h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 38h
retn
			
mov	ecx, [esp+44h+arg_18]
push	ecx
push	1
push	1Fh
lea	edx, [esp+50h+var_2C]
push	edx
jmp	short loc_1008EC7B
			
mov	eax, [esp+44h+arg_18]
push	eax
push	1
push	1Fh
lea	ecx, [esp+50h+var_2C]
push	ecx
jmp	short loc_1008EC7B
			
mov	edx, [esp+44h+arg_18]
push	edx
push	1
push	1Fh
lea	eax, [esp+50h+var_2C]
push	eax
			
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ebx, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_pl_destro 
mov	[esp+3Ch+var_C], 37h
test	ebx, ebx
jnz	short loc_1008ECFB
push	ebp
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
lea	ecx, [ebx+4]
push	0
push	ecx
call	SECOID_DestroyAlgorithmID_Util
push	0
add	ebx, 1Ch
push	ebx
call	SECITEM_FreeItem_Util
push	ebp
push	1
lea	edx, [esp+54h+var_2C]
push	37h
push	edx
call	sub_100781E0
add	esp, 20h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 58h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_58]
rep movsd
mov	esi, [esp+60h+arg_0]
mov	[esp+60h+var_58], offset aPkix_pl_publ_1 
mov	[esp+60h+var_38], 37h
test	esi, esi
jnz	short loc_1008ED89
mov	eax, [esp+60h+arg_4]
push	eax
push	1
lea	ecx, [esp+68h+var_58]
push	1Fh
push	ecx
mov	[esp+70h+var_44], 1
mov	[esp+70h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 58h
retn
push	ebp
mov	ebp, [esp+64h+arg_4]
push	ebp
push	31h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+64h+var_54], eax
test	eax, eax
jz	short loc_1008EDB6
mov	edx, [eax+4]
mov	[esp+64h+var_3C], edx
mov	[esp+64h+var_48], 306h
jmp	loc_1008EE5C
push	ebx
mov	ebx, [esi]
test	ebx, ebx
jz	loc_1008EE5B
lea	eax, [ebx+4]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+68h+var_2C]
rep movsd
push	0
push	eax
mov	[esp+70h+var_2C], offset aPkix_pl_destro 
mov	[esp+70h+var_C], 37h
call	SECOID_DestroyAlgorithmID_Util
push	0
add	ebx, 1Ch
push	ebx
call	SECITEM_FreeItem_Util
push	ebp
push	1
lea	ecx, [esp+80h+var_2C]
push	37h
push	ecx
call	sub_100781E0
add	esp, 20h
mov	[esp+68h+var_54], eax
test	eax, eax
jz	short loc_1008EE22
mov	edx, [eax+4]
mov	[esp+68h+var_3C], edx
mov	[esp+68h+var_48], 194h
jmp	short loc_1008EE5B
mov	esi, [esp+68h+arg_0]
mov	eax, [esi]
test	eax, eax
jz	short loc_1008EE5B
push	ebp
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+68h+var_50], eax
test	eax, eax
jz	short loc_1008EE55
push	ebp
push	eax
lea	eax, [esp+70h+var_58]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_50], 0
mov	dword ptr [esi], 0
			
pop	ebx
push	ebp
push	1
lea	ecx, [esp+6Ch+var_58]
push	37h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
add	esp, 58h
retn
align 10h
sub	esp, 88h
push	ebp
mov	ebp, [esp+8Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+94h+var_2C]
rep movsd
mov	[esp+94h+var_84], 0
mov	[esp+94h+var_2C], offset aPkix_pl_publ_2 
mov	[esp+94h+var_C], 37h
test	ebp, ebp
jz	loc_1008F0F5
cmp	[esp+94h+arg_4], 0
jz	loc_1008F0F5
push	ebx
mov	ebx, [esp+98h+arg_8]
push	ebx
push	31h
push	ebp
call	sub_10072630
xor	edx, edx
add	esp, 0Ch
mov	[esp+98h+var_28], eax
cmp	eax, edx
jz	short loc_1008EF06
mov	eax, [eax+4]
mov	[esp+98h+var_10], eax
mov	[esp+98h+var_1C], 306h
jmp	loc_1008F0D8
mov	eax, [ebp+0]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+98h+var_7C]
rep movsd
mov	[esp+98h+Src], edx
mov	[esp+98h+var_7C], offset aPkix_pl_publ_3 
mov	[esp+98h+var_5C], 37h
cmp	eax, edx
jz	loc_1008F08D
mov	ecx, [eax+4]
mov	[esp+98h+var_50], ecx
mov	edx, [eax+8]
mov	[esp+98h+var_4C], edx
mov	ecx, [eax+0Ch]
mov	[esp+98h+var_48], ecx
mov	edx, [eax+10h]
mov	[esp+98h+var_44], edx
mov	ecx, [eax+14h]
mov	[esp+98h+var_40], ecx
mov	edx, [eax+18h]
lea	eax, [esp+98h+var_50]
push	eax
mov	[esp+9Ch+var_3C], edx
call	SECOID_GetAlgorithmTag_Util
xor	edi, edi
add	esp, 4
cmp	eax, edi
jz	short loc_1008EFC6
push	eax
call	SECOID_FindOIDTagDescription_Util
add	esp, 4
mov	[esp+98h+Src], eax
cmp	eax, edi
jnz	loc_1008F022
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_1008EFA7
mov	ecx, [esp+98h+var_5C]
push	ebx
push	2
push	ecx
push	edi
push	3AAh
push	eax
call	sub_10074820
add	esp, 18h
push	ebx
push	1
push	37h
lea	edx, [esp+0A4h+var_7C]
mov	[esp+0A4h+var_68], 1
mov	[esp+0A4h+var_6C], 3AAh
push	edx
jmp	loc_1008F0A7
mov	edx, [esp+98h+var_50]
mov	eax, [esp+98h+var_4C]
mov	ecx, [esp+98h+var_48]
mov	[esp+98h+var_38], edx
push	ebx
lea	edx, [esp+9Ch+Src]
mov	[esp+9Ch+var_34], eax
push	edx
lea	eax, [esp+0A0h+var_38]
push	eax
mov	[esp+0A4h+var_30], ecx
call	sub_100924C0
add	esp, 0Ch
mov	[esp+98h+var_78], eax
cmp	eax, edi
jz	short loc_1008F017
mov	ecx, [eax+4]
push	ebx
push	1
push	37h
lea	edx, [esp+0A4h+var_7C]
mov	[esp+0A4h+var_60], ecx
mov	[esp+0A4h+var_6C], 32Ah
push	edx
jmp	loc_1008F0A7
mov	eax, [esp+98h+Src]
mov	esi, 1
jmp	short loc_1008F024
mov	esi, edi
push	ebx		
lea	edx, [esp+9Ch+var_84]
push	edx		
push	edi		
push	eax		
push	edi		
call	sub_10097D90
add	esp, 14h
mov	[esp+98h+var_78], eax
cmp	eax, edi
jz	short loc_1008F04C
mov	eax, [eax+4]
mov	[esp+98h+var_60], eax
mov	[esp+98h+var_6C], 3F0h
cmp	esi, edi
jz	short loc_1008F081
mov	eax, [esp+98h+Src]
cmp	eax, edi
jz	short loc_1008F081
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+98h+var_74], eax
cmp	eax, edi
jz	short loc_1008F07D
push	ebx
push	eax
lea	ecx, [esp+0A0h+var_7C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+98h+var_74], edi
mov	[esp+98h+Src], edi
			
push	ebx
push	1
push	37h
lea	edx, [esp+0A4h+var_7C]
push	edx
jmp	short loc_1008F0A7
push	ebx
push	1
push	1Fh
lea	eax, [esp+0A4h+var_7C]
mov	[esp+0A4h+var_68], 1
mov	[esp+0A4h+var_6C], 2BCh
push	eax
			
call	sub_100781E0
add	esp, 10h
mov	[esp+98h+var_28], eax
test	eax, eax
jz	short loc_1008F0CB
mov	ecx, [eax+4]
mov	[esp+98h+var_10], ecx
mov	[esp+98h+var_1C], 391h
jmp	short loc_1008F0D8
mov	edx, [esp+98h+var_84]
mov	eax, [esp+98h+arg_4]
mov	[eax], edx
			
push	ebx
push	1
lea	ecx, [esp+0A0h+var_2C]
push	37h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 88h
retn
			
mov	edx, [esp+94h+arg_8]
push	edx
push	1
lea	eax, [esp+9Ch+var_2C]
push	1Fh
push	eax
mov	[esp+0A4h+var_18], 1
mov	[esp+0A4h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 88h
retn
align 10h
sub	esp, 40h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_0]
mov	[esp+48h+var_2C], offset aPkix_pl_publ_4 
mov	[esp+48h+var_C], 37h
test	edi, edi
jz	loc_1008F2AF
cmp	[esp+48h+arg_4], 0
jz	loc_1008F2AF
mov	esi, [esp+48h+arg_8]
push	esi
push	31h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jz	short loc_1008F1AB
mov	eax, [eax+4]
push	esi
push	1
mov	[esp+50h+var_10], eax
lea	eax, [esp+50h+var_2C]
push	37h
push	eax
mov	[esp+58h+var_1C], 306h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 40h
retn
mov	eax, [edi]
test	eax, eax
jnz	short loc_1008F1C0
push	esi
push	1
push	1Fh
lea	ecx, [esp+54h+var_2C]
push	ecx
jmp	loc_1008F2BD
mov	edx, [eax+4]
mov	edi, [eax+10h]
mov	ecx, [eax+8]
push	ebx
mov	ebx, [eax+18h]
push	ebp
mov	ebp, [eax+1Ch]
mov	[esp+50h+var_38], edx
mov	edx, [eax+0Ch]
mov	[esp+50h+var_38], edi
mov	edi, [eax+14h]
mov	[esp+50h+var_38], ebp
mov	ebp, [eax+20h]
mov	eax, [eax+24h]
mov	[esp+50h+var_30], eax
push	esi
lea	eax, [esp+54h+var_40]
push	eax
push	edx
push	ecx
call	sub_10072650
add	esp, 10h
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1008F22E
mov	ecx, [eax+4]
pop	ebp
pop	ebx
push	esi
push	1
lea	eax, [esp+50h+var_2C]
push	37h
push	eax
mov	[esp+58h+var_10], ecx
mov	[esp+58h+var_1C], 20Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 40h
retn
push	esi
lea	edx, [esp+54h+var_3C]
push	edx
push	ebx
push	edi
call	sub_10072650
add	esp, 10h
mov	[esp+50h+var_28], eax
test	eax, eax
jnz	short loc_1008F262
mov	edx, [esp+50h+var_30]
push	esi
lea	ecx, [esp+54h+arg_0]
push	ecx
push	edx
push	ebp
call	sub_10072650
add	esp, 10h
mov	[esp+50h+var_28], eax
test	eax, eax
jz	short loc_1008F28B
mov	eax, [eax+4]
pop	ebp
pop	ebx
push	esi
push	1
mov	[esp+50h+var_10], eax
lea	eax, [esp+50h+var_2C]
push	37h
push	eax
mov	[esp+58h+var_1C], 20Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 40h
retn
mov	ecx, [esp+50h+arg_0]
mov	edx, [esp+50h+arg_4]
pop	ebp
pop	ebx
push	esi
push	1
lea	eax, [esp+50h+var_2C]
push	37h
push	eax
mov	[edx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 40h
retn
			
mov	ecx, [esp+48h+arg_8]
push	ecx
push	1
push	1Fh
lea	edx, [esp+54h+var_2C]
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 40h
retn
align 10h
sub	esp, 2Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_publ_5 
mov	[esp+38h+var_C], 37h
test	esi, esi
jz	loc_1008F415
mov	edi, [esp+38h+arg_4]
test	edi, edi
jz	loc_1008F415
mov	ebp, [esp+38h+arg_8]
test	ebp, ebp
jz	loc_1008F415
push	ebx
mov	ebx, [esp+3Ch+arg_C]
push	ebx
push	31h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1008F354
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 1EDh
jmp	short loc_1008F3D1
cmp	esi, edi
jnz	short loc_1008F361
mov	dword ptr [ebp+0], 1
jmp	short loc_1008F3D1
push	ebx
lea	ecx, [esp+40h+arg_0]
push	ecx
push	edi
mov	dword ptr [ebp+0], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1008F390
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 152h
jmp	short loc_1008F3D1
cmp	[esp+3Ch+arg_0], 31h
jnz	short loc_1008F3D1
mov	esi, [esi]
mov	edi, [edi]
test	esi, esi
jz	short loc_1008F3EB
test	edi, edi
jz	short loc_1008F3EB
lea	eax, [edi+4]
push	eax
lea	ecx, [esi+4]
push	ecx
call	SECOID_CompareAlgorithmID_Util
add	esp, 8
test	eax, eax
jnz	short loc_1008F3C7
add	edi, 1Ch
push	edi
add	esi, 1Ch
push	esi
call	SECITEM_CompareItem_Util
add	esp, 8
xor	edx, edx
test	eax, eax
setz	dl
mov	[ebp+0], edx
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	37h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_C]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB904
push	1
mov	[esp+60h+var_50], offset aPublickey 
mov	[esp+60h+var_48], 4
mov	[esp+60h+var_44], offset sub_1008ED30
mov	[esp+60h+var_40], offset sub_1008F2E0
mov	[esp+60h+var_3C], offset sub_1008F130
mov	[esp+60h+var_38], offset sub_1008EE80
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	37h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_publ_0 
mov	[esp+68h+var_C], 37h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
xor	ebx, ebx
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_pl_public 
mov	[esp+3Ch+var_C], 37h
test	eax, eax
jz	loc_1008F5BA
mov	ebp, [esp+3Ch+arg_4]
test	ebp, ebp
jz	loc_1008F5BA
mov	esi, [eax]
push	esi
call	sub_1000F510
mov	edi, [esp+40h+arg_8]
add	esp, 4
test	eax, eax
jnz	short loc_1008F58E
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008F564
mov	ecx, [esp+3Ch+var_C]
push	edi
push	2
push	ecx
push	ebx
push	38Dh
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	edx, [esp+44h+var_2C]
push	37h
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 38Dh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
cmp	eax, 2
jnz	short loc_1008F59D
cmp	[esi+18h], ebx
jnz	short loc_1008F59D
mov	ebx, 1
			
push	edi
push	1
lea	edx, [esp+44h+var_2C]
push	37h
push	edx
mov	[ebp+0], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 34h
mov	eax, [esp+34h+arg_0]
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_34], ebp
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_pl_publ_6 
mov	[esp+40h+var_C], 37h
cmp	eax, ebp
jz	loc_1008F947
mov	ecx, [esp+40h+arg_4]
cmp	ecx, ebp
jz	loc_1008F947
cmp	[esp+40h+arg_8], ebp
jz	loc_1008F947
mov	edi, [eax]
push	ebx
cmp	edi, ebp
jz	loc_1008F919
mov	ebx, [ecx]
cmp	ebx, ebp
jz	loc_1008F919
push	edi
call	sub_1000F510
mov	esi, eax
add	esp, 4
cmp	esi, ebp
mov	ebp, [esp+44h+arg_C]
jnz	short loc_1008F6A0
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008F68B
mov	ecx, [esp+44h+var_C]
push	ebp
push	2
push	ecx
push	0
push	1F4h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 1F4h
jmp	loc_1008F877
push	ebx
call	sub_1000F510
add	esp, 4
test	eax, eax
jnz	short loc_1008F6E3
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008F6CE
mov	edx, [esp+44h+var_C]
push	ebp
push	2
push	edx
push	0
push	3AEh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 3AEh
jmp	loc_1008F877
cmp	esi, 2
jnz	loc_1008F86D
cmp	dword ptr [edi+18h], 0
jnz	loc_1008F86D
cmp	eax, esi
jz	short loc_1008F72F
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008F71A
mov	ecx, [esp+44h+var_C]
push	ebp
push	esi
push	ecx
push	0
push	3ADh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 3ADh
jmp	loc_1008F877
cmp	dword ptr [ebx+18h], 0
jnz	short loc_1008F76B
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008F756
mov	edx, [esp+44h+var_C]
push	ebp
push	2
push	edx
push	0
push	3ACh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 3ACh
jmp	loc_1008F877
push	ebp
lea	eax, [esp+48h+var_34]
push	eax
push	28h
mov	esi, 1
push	esi
call	sub_10094430
add	esp, 10h
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1008F79D
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 44h
jmp	loc_1008F87B
mov	edx, [esp+44h+var_34]
push	edi
push	edx
push	0
call	SECKEY_CopySubjectPublicKeyInfo
add	esp, 0Ch
test	eax, eax
jz	short loc_1008F7E3
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008F7D2
mov	ecx, [esp+44h+var_C]
push	ebp
push	2
push	ecx
push	0
push	3A7h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], esi
mov	[esp+44h+var_1C], 3A7h
jmp	loc_1008F877
mov	edx, [esp+44h+var_34]
add	ebx, 10h
push	ebx
add	edx, 10h
push	edx
push	0
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_1008F82C
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008F81E
mov	ecx, [esp+44h+var_C]
push	ebp
push	2
push	ecx
push	0
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], esi
mov	[esp+44h+var_1C], 338h
jmp	short loc_1008F877
push	ebp
lea	edx, [esp+48h+var_30]
push	edx
push	4
push	31h
call	sub_100952A0
add	esp, 10h
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1008F857
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 141h
jmp	short loc_1008F87B
mov	edx, [esp+44h+var_30]
mov	eax, [esp+44h+var_34]
mov	[edx], eax
mov	ecx, [esp+44h+var_30]
mov	edx, [esp+44h+arg_8]
mov	[edx], ecx
jmp	short loc_1008F877
			
mov	eax, [esp+44h+arg_8]
mov	dword ptr [eax], 0
			
mov	eax, [esp+44h+var_28]
			
mov	ecx, [esp+44h+var_34]
xor	edi, edi
cmp	ecx, edi
jz	short loc_1008F8FF
mov	esi, 194h
lea	ebx, [ebx+0]
cmp	[esp+44h+var_18], edi
jnz	short loc_1008F8A6
cmp	eax, edi
jnz	short loc_1008F8A6
cmp	[esp+44h+var_14], edi
jnz	short loc_1008F8A6
cmp	[esp+44h+var_4], edi
jz	short loc_1008F8FF
			
push	ebp
mov	eax, ecx
call	sub_1008ECA0
add	esp, 4
mov	[esp+44h+var_28], eax
cmp	eax, edi
jz	short loc_1008F8CE
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	ecx, [esp+44h+var_34]
mov	[esp+44h+var_1C], esi
cmp	ecx, edi
jnz	short loc_1008F890
jmp	short loc_1008F8FF
mov	eax, [esp+44h+var_34]
cmp	eax, edi
jz	short loc_1008F8FF
push	ebp
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, edi
jz	short loc_1008F8FB
push	ebp
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], edi
mov	[esp+44h+var_34], edi
			
push	ebp
push	1
lea	eax, [esp+4Ch+var_2C]
push	37h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	ecx, [esp+44h+arg_C]
push	ecx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_x500_2 
mov	[esp+34h+var_C], 46h
test	esi, esi
jnz	short loc_1008F9D9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	3Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_1008FA02
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2DDh
jmp	short loc_1008FA19
mov	eax, [esi]
test	eax, eax
jz	short loc_1008FA19
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
mov	dword ptr [esi], 0
			
push	edi
push	1
lea	eax, [esp+3Ch+var_2C]
push	46h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_x500_3 
mov	[esp+38h+var_C], 46h
test	esi, esi
jz	loc_1008FB5D
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_1008FB5D
mov	edi, [esp+38h+arg_8]
push	edi
push	3Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008FABE
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+40h+var_10], eax
lea	eax, [esp+40h+var_2C]
push	46h
push	eax
mov	[esp+48h+var_1C], 2DDh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
add	esi, 4
push	esi
call	CERT_NameToAscii
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1008FB19
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008FAF0
mov	ecx, [esp+38h+var_C]
push	edi
push	2
push	ecx
push	esi
push	0A6h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	46h
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 0A6h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
push	esi
call	PL_strlen
push	edi		
push	ebx		
push	eax		
push	esi		
push	0		
call	sub_10097D90
add	esp, 18h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008FB44
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 3CFh
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	46h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_x500_4 
mov	[esp+38h+var_C], 46h
test	esi, esi
jz	loc_1008FC73
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_1008FC73
mov	edi, [esp+38h+arg_8]
push	edi
push	3Ch
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008FC0E
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+40h+var_10], eax
lea	eax, [esp+40h+var_2C]
push	46h
push	eax
mov	[esp+48h+var_1C], 2DDh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edx, [esi+14h]
mov	eax, [esi+10h]
push	edi
lea	ecx, [esp+3Ch+arg_0]
push	ecx
push	edx
push	eax
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1008FC54
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	46h
push	eax
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 20Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edx, [esp+38h+arg_0]
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	46h
push	eax
mov	[ebx], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
sub	esp, 34h
push	ebp
mov	ebp, [esp+38h+arg_8]
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], edx
mov	[esp+40h+var_34], edx
mov	[esp+40h+var_2C], offset aPkix_pl_x500na 
mov	[esp+40h+var_C], 46h
cmp	ebp, edx
jnz	short loc_1008FD05
mov	eax, [esp+40h+arg_C]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	esi, [esp+40h+arg_0]
push	ebx
mov	ebx, [esp+44h+arg_4]
cmp	esi, edx
jnz	short loc_1008FD4C
cmp	ebx, edx
jnz	short loc_1008FD4C
mov	eax, dword_100BAE9C
mov	edi, [esp+44h+arg_C]
cmp	eax, edx
jz	short loc_1008FD37
push	edi
push	2
push	46h
push	edx
push	2BCh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
jmp	loc_1008FED6
			
push	800h
call	PORT_NewArena_Util
mov	edi, [esp+48h+arg_C]
add	esp, 4
mov	[esp+44h+var_30], eax
test	eax, eax
jnz	short loc_1008FD9B
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008FD86
mov	edx, [esp+44h+var_C]
push	edi
push	2
push	edx
push	0
push	338h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 338h
jmp	loc_1008FED6
push	edi
lea	eax, [esp+48h+var_34]
push	eax
push	18h
push	3Ch
call	sub_100952A0
add	esp, 10h
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1008FDC9
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 14Fh
jmp	loc_1008FEBF
mov	edx, [esp+44h+var_34]
mov	ecx, [esp+44h+var_30]
mov	[edx], ecx
mov	eax, [esp+44h+var_34]
mov	dword ptr [eax+4], 0
test	esi, esi
jz	short loc_1008FE13
mov	edx, [esp+44h+var_34]
push	esi
add	edx, 0Ch
push	edx
push	ecx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jnz	short loc_1008FE0F
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008FD86
mov	ecx, [esp+44h+var_C]
push	edi
push	2
push	ecx
jmp	loc_1008FD76
mov	ecx, [esp+44h+var_30]
test	ebx, ebx
jz	short loc_1008FE62
mov	edx, [esp+44h+var_34]
push	ebx
add	edx, 4
push	edx
push	ecx
call	CERT_CopyName
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jnz	loc_1008FEB4
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008FE50
mov	ecx, [esp+44h+var_C]
push	edi
push	2
push	ecx
push	0
push	65h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 65h
jmp	short loc_1008FED6
mov	eax, [esp+44h+var_34]
lea	edx, [eax+0Ch]
push	edx
push	offset dword_100A7B50
add	eax, 4
push	eax
push	ecx
call	SEC_QuickDERDecodeItem_Util
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	short loc_1008FEB4
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1008FEA2
mov	ecx, [esp+44h+var_C]
push	edi
push	2
push	ecx
push	0
push	3AFh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 3AFh
jmp	short loc_1008FED6
			
mov	edx, [esp+44h+var_34]
mov	eax, [esp+44h+var_28]
mov	[ebp+0], edx
cmp	[esp+44h+var_18], 0
jnz	short loc_1008FED6
test	eax, eax
jnz	short loc_1008FED6
cmp	[esp+44h+var_14], eax
jnz	short loc_1008FED6
cmp	[esp+44h+var_4], eax
jz	short loc_1008FEFA
			
mov	eax, [esp+44h+var_34]
test	eax, eax
jz	short loc_1008FEE7
push	edi
push	eax
call	sub_100955D0
jmp	short loc_1008FEF7
mov	eax, [esp+44h+var_30]
test	eax, eax
jz	short loc_1008FEFA
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
			
push	edi
push	1
lea	eax, [esp+4Ch+var_2C]
push	46h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_x500_0 
mov	[esp+38h+var_C], 46h
test	edi, edi
jz	loc_1008FFF7
mov	esi, [esp+38h+arg_4]
test	esi, esi
jz	loc_1008FFF7
mov	ebx, [esp+38h+arg_8]
test	ebx, ebx
jz	loc_1008FFF7
cmp	edi, esi
jnz	short loc_1008FF91
mov	edx, [esp+38h+arg_C]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	46h
push	eax
mov	dword ptr [ebx], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
cmp	dword ptr [edi+10h], 0
lea	eax, [edi+0Ch]
lea	ecx, [esi+0Ch]
jz	short loc_1008FFE7
cmp	dword ptr [ecx+4], 0
jz	short loc_1008FFE7
push	ecx
push	eax
call	SECITEM_CompareItem_Util
add	esp, 8
test	eax, eax
jz	short loc_1008FFC1
add	esi, 4
push	esi
add	edi, 4
push	edi
call	CERT_CompareName
add	esp, 8
mov	edx, [esp+38h+arg_C]
xor	ecx, ecx
test	eax, eax
push	edx
setz	cl
push	1
lea	eax, [esp+40h+var_2C]
push	46h
push	eax
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_C]
push	ecx
push	1
push	1Fh
lea	edx, [esp+44h+var_2C]
push	edx
jmp	short loc_10090005
			
mov	eax, [esp+38h+arg_C]
push	eax
push	1
push	1Fh
lea	ecx, [esp+44h+var_2C]
push	ecx
mov	[esp+48h+var_1C], 2BCh
mov	[esp+48h+var_18], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_x500_6 
mov	[esp+34h+var_C], 46h
test	eax, eax
jz	loc_10090115
mov	ecx, [esp+34h+arg_4]
test	ecx, ecx
jz	loc_10090115
mov	esi, [esp+34h+arg_8]
test	esi, esi
jz	loc_10090115
cmp	dword ptr [eax+10h], 0
mov	edi, [esp+34h+arg_C]
jnz	short loc_100900A1
push	edi
push	1
lea	edx, [esp+3Ch+var_2C]
push	46h
push	edx
mov	dword ptr [esi], 0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
add	eax, 0Ch
push	eax
push	ecx
call	SECITEM_ArenaDupItem_Util
add	esp, 8
test	eax, eax
jnz	short loc_100900FB
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100900D3
mov	ecx, [esp+34h+var_C]
push	edi
push	2
push	ecx
push	0
push	338h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	edx, [esp+3Ch+var_2C]
push	46h
push	edx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 338h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
push	edi
push	1
lea	edx, [esp+3Ch+var_2C]
push	46h
push	edx
mov	[esi], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	eax, [esp+34h+arg_C]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_2C], offset aPkix_pl_x500_5 
mov	[esp+3Ch+var_C], 46h
test	edi, edi
jz	loc_1009028A
mov	ebp, [esp+3Ch+arg_4]
test	ebp, ebp
jz	loc_1009028A
mov	ebx, [esp+3Ch+arg_8]
test	ebx, ebx
jz	loc_1009028A
mov	esi, [esp+3Ch+arg_C]
push	esi
push	3Ch
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100901DC
mov	eax, [eax+4]
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	46h
push	ecx
mov	[esp+4Ch+var_1C], 1D6h
mov	[esp+4Ch+var_10], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
cmp	edi, ebp
jnz	short loc_10090200
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	46h
push	ecx
mov	dword ptr [ebx], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
push	esi
lea	ecx, [esp+40h+arg_0]
push	ecx
push	ebp
mov	dword ptr [ebx], 0
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10090246
mov	edx, [eax+4]
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	46h
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
cmp	[esp+3Ch+arg_0], 3Ch
jnz	short loc_10090270
push	esi
push	ebx
push	ebp
push	edi
call	sub_1008FF20
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10090270
mov	eax, [eax+4]
mov	[esp+3Ch+var_1C], 435h
mov	[esp+3Ch+var_10], eax
			
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	46h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+3Ch+arg_C]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BBA90
push	1
mov	[esp+60h+var_50], offset aX500name 
mov	[esp+60h+var_48], 18h
mov	[esp+60h+var_44], offset sub_1008F980
mov	[esp+60h+var_40], offset sub_10090150
mov	[esp+60h+var_3C], offset sub_1008FB90
mov	[esp+60h+var_38], offset sub_1008FA40
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	46h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_x500_1 
mov	[esp+68h+var_C], 46h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_ocs_16 
mov	[esp+34h+var_C], 31h
test	esi, esi
jnz	short loc_100903B9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	2Ah
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_100903E2
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 300h
jmp	short loc_100903F1
mov	esi, [esi]
test	esi, esi
jz	short loc_100903F1
push	esi
call	CERT_DestroyOCSPCertID
add	esp, 4
			
push	edi
push	1
lea	eax, [esp+3Ch+var_2C]
push	31h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB808
push	1
mov	[esp+60h+var_50], offset aOcspcertid 
mov	[esp+60h+var_48], 4
mov	[esp+60h+var_44], offset sub_10090360
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	31h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_ocspce 
mov	[esp+68h+var_C], 31h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 38h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	edi, [esp+48h+arg_0]
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_2C], offset aPkix_pl_ocs_17 
mov	[esp+48h+var_C], 1Ch
cmp	edi, ebx
jz	loc_100905FB
mov	ebp, [esp+48h+arg_8]
cmp	ebp, ebx
jz	loc_100905FB
mov	esi, [esp+48h+arg_C]
push	esi
lea	eax, [esp+4Ch+var_38]
push	eax
push	4
push	2Ah
call	sub_100952A0
add	esp, 10h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10090565
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 141h
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_1009054B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10090547
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
			
mov	[esp+48h+var_38], ebx
push	esi
push	1
lea	ecx, [esp+50h+var_2C]
push	31h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	eax, [esp+48h+arg_4]
cmp	eax, ebx
jz	short loc_10090595
push	esi
lea	edx, [esp+4Ch+var_34]
push	edx
push	eax
call	sub_100883F0
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_100905A3
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 183h
jmp	short loc_1009051A
call	ds:PR_Now
mov	[esp+48h+var_34], eax
mov	[esp+48h+var_30], edx
mov	ecx, [esp+48h+var_30]
mov	edx, [esp+48h+var_34]
mov	eax, [edi]
push	ecx
push	edx
push	eax
call	CERT_CreateOCSPCertID
mov	ecx, [esp+54h+var_38]
mov	[ecx], eax
mov	eax, [esp+54h+var_38]
add	esp, 0Ch
cmp	[eax], ebx
jnz	short loc_100905F3
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_100905E6
mov	edx, [esp+48h+var_C]
push	esi
push	2
push	edx
push	ebx
push	141h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
jmp	loc_10090512
mov	[ebp+0], eax
jmp	loc_10090547
			
mov	edx, [esp+48h+arg_C]
push	edx
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 38h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_0]
mov	[esp+44h+var_34], 0
mov	[esp+44h+var_30], 0
mov	[esp+44h+var_2C], offset aPkix_pl_ocs_18 
mov	[esp+44h+var_C], 1Ch
test	esi, esi
jz	loc_10090748
mov	ebp, [esp+44h+arg_8]
test	ebp, ebp
jz	loc_10090748
cmp	[esp+44h+arg_C], 0
jz	loc_10090748
mov	eax, [esp+44h+arg_4]
mov	edi, [esp+44h+arg_14]
test	eax, eax
jz	short loc_100906D4
push	edi
lea	ecx, [esp+48h+var_34]
push	ecx
push	eax
call	sub_100883F0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_100906E2
mov	edx, [eax+4]
push	edi
push	1
mov	[esp+4Ch+var_10], edx
lea	edx, [esp+4Ch+var_2C]
push	31h
push	edx
mov	[esp+54h+var_1C], 183h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
call	ds:PR_Now
mov	[esp+44h+var_34], eax
mov	[esp+44h+var_30], edx
mov	ecx, [esp+44h+arg_10]
lea	eax, [esp+44h+arg_0]
push	eax
mov	eax, [esp+48h+var_30]
push	ecx
mov	ecx, [esp+4Ch+var_34]
lea	edx, [esp+4Ch+var_38]
push	edx
mov	edx, [esi]
push	1
push	eax
push	ecx
push	edx
call	sub_10007780
add	esp, 1Ch
test	eax, eax
jnz	short loc_10090717
mov	eax, 1
cmp	[esp+44h+arg_0], eax
jz	short loc_10090719
xor	eax, eax
mov	[ebp+0], eax
test	eax, eax
jz	short loc_1009072F
mov	ecx, [esp+44h+arg_C]
xor	eax, eax
cmp	[esp+44h+var_38], eax
setz	al
mov	[ecx], eax
push	edi
push	1
lea	edx, [esp+4Ch+var_2C]
push	31h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
			
mov	eax, [esp+44h+arg_14]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 38h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_ocs_19 
mov	[esp+38h+var_C], 1Ch
test	esi, esi
jz	short loc_100907F2
mov	eax, [esi]
test	eax, eax
jz	short loc_100907F2
lea	ecx, [esp+38h+var_30]
push	ecx
push	eax
call	sub_100087B0
add	esp, 8
cmp	[esp+38h+var_30], 0
jz	short loc_100907D6
mov	dword ptr [esi], 0
mov	edx, [esp+38h+arg_4]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	31h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	ecx, [esp+38h+arg_4]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_bigi_0 
mov	[esp+38h+var_C], 2
test	edi, edi
jz	loc_10090949
mov	esi, [esp+38h+arg_4]
test	esi, esi
jz	loc_10090949
mov	ebx, [esp+38h+arg_8]
test	ebx, ebx
jz	loc_10090949
push	ebp
mov	ebp, [esp+3Ch+arg_C]
push	ebp
push	2
push	esi
push	edi
call	sub_100724E0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10090898
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 0Fh
jmp	loc_1009092F
mov	dword ptr [ebx], 0
mov	ecx, [esi]
mov	eax, [edi+4]
mov	esi, [esi+4]
mov	edx, [edi]
cmp	eax, esi
jnb	short loc_100908B4
mov	dword ptr [ebx], 0FFFFFFFFh
jmp	short loc_1009092F
jbe	short loc_100908BE
mov	dword ptr [ebx], 1
jmp	short loc_1009092F
cmp	eax, esi
jnz	short loc_1009092F
mov	esi, eax
cmp	eax, 4
jb	short loc_100908E4
lea	esp, [esp+0]
mov	eax, [edx]
cmp	eax, [ecx]
jnz	short loc_100908E8
sub	esi, 4
add	ecx, 4
add	edx, 4
cmp	esi, 4
jnb	short loc_100908D0
test	esi, esi
jz	short loc_1009092B
movzx	eax, byte ptr [edx]
movzx	edi, byte ptr [ecx]
sub	eax, edi
jnz	short loc_10090923
cmp	esi, 1
jbe	short loc_1009092B
movzx	eax, byte ptr [edx+1]
movzx	edi, byte ptr [ecx+1]
sub	eax, edi
jnz	short loc_10090923
cmp	esi, 2
jbe	short loc_1009092B
movzx	eax, byte ptr [edx+2]
movzx	edi, byte ptr [ecx+2]
sub	eax, edi
jnz	short loc_10090923
cmp	esi, 3
jbe	short loc_1009092B
movzx	eax, byte ptr [edx+3]
movzx	ecx, byte ptr [ecx+3]
sub	eax, ecx
			
sar	eax, 1Fh
or	eax, 1
jmp	short loc_1009092D
			
xor	eax, eax
mov	[ebx], eax
			
push	ebp
push	1
lea	edx, [esp+44h+var_2C]
push	2
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_bigi_1 
mov	[esp+34h+var_C], 2
test	esi, esi
jnz	short loc_100909D9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	2
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10090A02
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2DFh
jmp	short loc_10090A44
mov	eax, [esi]
test	eax, eax
jz	short loc_10090A37
push	edi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10090A31
push	edi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [esi], 0
mov	dword ptr [esi], 0
mov	dword ptr [esi+4], 0
push	edi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	2
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	ebp, ebp
mov	[esp+3Ch+Src], ebp
mov	[esp+3Ch+var_2C], offset aPkix_pl_bigi_2 
mov	[esp+3Ch+var_C], 2
cmp	esi, ebp
jz	loc_10090BD7
cmp	[esp+3Ch+arg_4], ebp
jz	loc_10090BD7
push	ebx
mov	ebx, [esp+40h+arg_8]
push	ebx
push	2
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10090ACF
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2DFh
jmp	loc_10090B8C
mov	eax, [esi+4]
push	ebx
lea	ecx, [esp+44h+Src]
lea	eax, [eax+eax+1]
push	ecx
push	eax
mov	[esp+4Ch+arg_0], eax
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10090B05
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 299h
jmp	loc_10090B8C
xor	edi, edi
cmp	[esi+4], edi
jbe	short loc_10090B4F
lea	esp, [esp+0]
mov	eax, [esi]
mov	cl, [edi+eax]
sar	cl, 4
and	cl, 0Fh
movzx	edx, cl
push	edx
call	sub_10072840
mov	ecx, [esp+44h+Src]
mov	[ecx+ebp], al
mov	edx, [esi]
mov	al, [edi+edx]
and	al, 0Fh
movzx	ecx, al
push	ecx
call	sub_10072840
mov	edx, [esp+48h+Src]
mov	[edx+ebp+1], al
inc	edi
add	esp, 8
add	ebp, 2
cmp	edi, [esi+4]
jb	short loc_10090B10
mov	eax, [esp+40h+Src]
mov	edx, [esp+40h+arg_4]
mov	ecx, [esp+40h+arg_0]
push	ebx		
push	edx		
mov	byte ptr [ecx+eax-1], 0
mov	eax, [esp+48h+Src]
push	0		
push	eax		
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10090B8A
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 3CFh
xor	ebp, ebp
			
mov	eax, [esp+40h+Src]
cmp	eax, ebp
jz	short loc_10090BBD
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_10090BB9
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esp+40h+Src], ebp
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	2
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_bigi_3 
mov	[esp+38h+var_C], 2
test	esi, esi
jz	loc_10090CCF
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_10090CCF
mov	edi, [esp+38h+arg_8]
push	edi
push	2
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10090C8E
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	2
push	ecx
mov	[esp+48h+var_1C], 2DFh
mov	[esp+48h+var_10], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	ecx, [esi+4]
mov	edx, [esi]
push	edi
push	ebx
push	ecx
push	edx
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10090CB6
mov	eax, [eax+4]
mov	[esp+38h+var_1C], 20Ch
mov	[esp+38h+var_10], eax
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	2
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_pl_bigi_4 
mov	[esp+40h+var_C], 2
test	edi, edi
jz	loc_10090E49
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_10090E49
mov	ebp, [esp+40h+arg_8]
test	ebp, ebp
jz	loc_10090E49
mov	esi, [esp+40h+arg_C]
push	esi
push	2
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10090D94
mov	eax, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	2
push	eax
mov	[esp+50h+var_1C], 1D8h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	esi
lea	ecx, [esp+44h+arg_0]
push	ecx
push	ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10090DD4
mov	edx, [eax+4]
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	2
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+arg_0], 2
mov	dword ptr [ebp+0], 0
jnz	short loc_10090E2F
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	ebx
push	edi
call	sub_10090820
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10090E23
mov	ecx, [eax+4]
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	2
push	eax
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 1Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
xor	edx, edx
cmp	[esp+40h+var_30], edx
setz	dl
mov	[ebp+0], edx
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	2
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 50h
mov	eax, [esp+50h+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB268
push	1
mov	[esp+60h+var_50], offset aBigint 
mov	[esp+60h+var_4C], 0
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_10090980
mov	[esp+60h+var_40], offset sub_10090D00
mov	[esp+60h+var_3C], offset sub_10090C10
mov	[esp+60h+var_38], offset sub_10090A60
mov	[esp+60h+var_34], offset sub_10090820
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	2
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_bigint 
mov	[esp+68h+var_C], 2
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	ebx
mov	ebx, [esp+34h+arg_8]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_pl_bigi_5 
mov	[esp+40h+var_C], 2
test	ebx, ebx
jz	loc_1009107B
mov	ebp, [esp+40h+Src]
test	ebp, ebp
jz	loc_1009107B
mov	esi, [esp+40h+Size]
mov	edi, [esp+40h+arg_C]
test	esi, esi
jnz	short loc_10090FA2
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10090F8D
push	edi
push	2
push	2
push	esi
push	21h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 21h
jmp	loc_1009102E
push	edi
lea	eax, [esp+44h+var_30]
push	eax
push	8
push	2
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10090FCD
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 141h
jmp	short loc_10091017
mov	edx, [esp+40h+var_30]
push	edi
push	edx
push	esi
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10090FF5
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 299h
jmp	short loc_10091017
mov	edx, [esp+40h+var_30]
mov	eax, [edx]
push	esi		
push	ebp		
push	eax		
call	memcpy
mov	ecx, [esp+4Ch+var_30]
mov	[ecx+4], esi
mov	edx, [esp+4Ch+var_30]
mov	eax, [esp+4Ch+var_28]
add	esp, 0Ch
mov	[ebx], edx
			
cmp	[esp+40h+var_18], 0
jnz	short loc_1009102E
test	eax, eax
jnz	short loc_1009102E
cmp	[esp+40h+var_14], eax
jnz	short loc_1009102E
cmp	[esp+40h+var_4], eax
jz	short loc_10091061
			
mov	eax, [esp+40h+var_30]
test	eax, eax
jz	short loc_10091061
push	edi
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, esi
jz	short loc_1009105D
push	edi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], esi
mov	[esp+40h+var_30], esi
			
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	2
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+40h+arg_C]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+Src], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_byte_3 
mov	[esp+3Ch+var_C], 5
test	ebp, ebp
jz	loc_100912BB
mov	ecx, [esp+3Ch+arg_4]
test	ecx, ecx
jz	loc_100912BB
mov	eax, [ebp+4]
push	ebx
test	eax, eax
jnz	short loc_1009112D
mov	eax, [esp+40h+arg_8]
push	eax		
push	ecx		
push	0		
push	offset asc_100AE764 
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	loc_10091230
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
jmp	loc_10091228
mov	edx, [esp+40h+arg_8]
push	edx
lea	ecx, [esp+44h+Src]
lea	eax, [eax+eax*2+2]
push	ecx
push	eax
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10091160
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 11Dh
jmp	loc_10091230
mov	eax, [esp+40h+Src]
mov	byte ptr [eax],	0
mov	ecx, [ebp+0]
movzx	edx, byte ptr [ecx]
push	edx
push	offset a02x	
call	ds:PR_smprintf
mov	esi, eax
push	esi
call	PL_strlen
mov	ebx, eax
mov	eax, [esp+4Ch+Src]
push	esi
push	eax
call	PL_strcat
push	esi
mov	[esp+58h+Src], eax
call	ds:PR_smprintf_free
mov	edi, 1
add	esp, 18h
cmp	[ebp+4], edi
jbe	short loc_100911ED
mov	ecx, [ebp+0]
movzx	edx, byte ptr [ecx+edi]
push	edx
push	offset a02x_0	
call	ds:PR_smprintf
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_10091281
push	esi
call	PL_strlen
add	ebx, eax
mov	eax, [esp+44h+Src]
push	esi
push	eax
call	PL_strcat
push	esi
mov	[esp+50h+Src], eax
call	ds:PR_smprintf_free
inc	edi
add	esp, 10h
cmp	edi, [ebp+4]
jb	short loc_100911A6
mov	eax, [esp+40h+Src]
mov	edx, [esp+40h+arg_8]
mov	byte ptr [ebx+eax], 5Dh
mov	ecx, [esp+40h+Src]
mov	eax, [esp+40h+arg_4]
push	edx		
push	eax		
mov	byte ptr [ebx+ecx+1], 0
mov	ecx, [esp+48h+Src]
push	0		
push	ecx		
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10091230
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 149h
			
mov	eax, [esp+40h+Src]
mov	esi, [esp+40h+arg_8]
xor	edi, edi
pop	ebx
cmp	eax, edi
jz	short loc_10091268
push	esi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_10091264
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
mov	[esp+3Ch+Src], edi
push	esi
push	1
lea	ecx, [esp+44h+var_2C]
push	5
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100912A6
mov	ecx, [esp+40h+arg_8]
mov	edx, [esp+40h+var_C]
push	ecx
push	2
push	edx
push	0
push	38Bh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 38Bh
jmp	loc_10091230
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	ebx, eax
mov	[esp+3Ch+var_2C], offset aPkix_pl_byte_6 
mov	[esp+3Ch+var_C], 5
test	ebp, ebp
jz	loc_10091433
test	ebx, ebx
jz	loc_10091433
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_10091433
mov	eax, [esp+3Ch+arg_8]
push	eax
push	4
push	ebx
push	ebp
call	sub_100724E0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009137F
mov	edx, [esp+3Ch+arg_8]
mov	ecx, [eax+4]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	5
push	eax
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 10h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	dword ptr [edi], 0
mov	ecx, [ebx]
mov	eax, [ebp+4]
mov	ebx, [ebx+4]
mov	edx, [ebp+0]
cmp	eax, ebx
jnb	short loc_100913B8
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	5
push	eax
mov	dword ptr [edi], 0FFFFFFFFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
jbe	short loc_100913DE
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	5
push	eax
mov	dword ptr [edi], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
cmp	eax, ebx
jnz	short loc_10091415
xor	esi, esi
test	eax, eax
jz	short loc_10091415
mov	ebx, ecx
sub	ebx, edx
lea	esp, [esp+0]
cmp	dword ptr [edi], 0
jnz	short loc_10091415
mov	al, [edx]
mov	cl, [ebx+edx]
cmp	al, cl
jnb	short loc_10091406
mov	dword ptr [edi], 0FFFFFFFFh
jmp	short loc_1009140E
jbe	short loc_1009140E
mov	dword ptr [edi], 1
			
inc	esi
inc	edx
cmp	esi, [ebp+4]
jb	short loc_100913F0
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	5
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
mov	[esp+3Ch+Src], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_byte_4 
mov	[esp+3Ch+var_C], 5
test	edi, edi
jz	loc_100916A4
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_100916A4
mov	esi, [esp+3Ch+arg_8]
push	esi
push	4
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100914E2
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 2E2h
jmp	loc_1009161E
mov	eax, [edi+4]
push	ebp
push	esi		
test	eax, eax
jnz	short loc_1009151B
push	ebx		
push	eax		
push	offset asc_100AE764 
push	eax		
call	sub_10097D90
add	esp, 14h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	loc_1009161D
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 149h
jmp	loc_1009161D
lea	edx, [esp+44h+Src]
lea	eax, [eax+eax*4+2]
push	edx
push	eax
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10091549
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 299h
jmp	loc_1009161D
mov	ecx, [esp+40h+Src]
mov	byte ptr [ecx],	0
mov	edx, [edi]
movzx	eax, byte ptr [edx]
push	eax
push	offset a03u	
call	ds:PR_smprintf
mov	esi, eax
push	esi
call	PL_strlen
mov	ecx, [esp+4Ch+Src]
push	esi
push	ecx
mov	ebx, eax
call	PL_strcat
push	esi
mov	[esp+58h+Src], eax
call	ds:PR_smprintf_free
mov	ebp, 1
add	esp, 18h
cmp	[edi+4], ebp
jbe	short loc_100915D6
mov	edi, edi
mov	edx, [edi]
movzx	eax, byte ptr [edx+ebp]
push	eax
push	offset a03u_0	
call	ds:PR_smprintf
mov	esi, eax
add	esp, 8
test	esi, esi
jz	loc_1009166A
push	esi
call	PL_strlen
mov	ecx, [esp+44h+Src]
push	esi
push	ecx
add	ebx, eax
call	PL_strcat
push	esi
mov	[esp+50h+Src], eax
call	ds:PR_smprintf_free
inc	ebp
add	esp, 10h
cmp	ebp, [edi+4]
jb	short loc_10091590
mov	edx, [esp+40h+Src]
mov	ecx, [esp+40h+arg_8]
mov	byte ptr [ebx+edx], 5Dh
mov	eax, [esp+40h+Src]
mov	edx, [esp+40h+arg_4]
push	ecx		
push	edx		
mov	byte ptr [ebx+eax+1], 0
mov	eax, [esp+48h+Src]
push	0		
push	eax		
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10091619
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 3CFh
			
mov	esi, [esp+40h+arg_8]
			
pop	ebp
mov	eax, [esp+3Ch+Src]
xor	edi, edi
cmp	eax, edi
jz	short loc_10091651
push	esi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_1009164D
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
mov	[esp+3Ch+Src], edi
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	5
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009168F
mov	edx, [esp+40h+arg_8]
mov	ecx, [esp+40h+var_C]
push	edx
push	2
push	ecx
push	0
push	38Bh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 38Bh
jmp	loc_10091619
			
mov	ecx, [esp+3Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_pl_byte_5 
mov	[esp+40h+var_C], 5
test	edi, edi
jz	loc_1009182A
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_1009182A
mov	ebp, [esp+40h+arg_8]
test	ebp, ebp
jz	loc_1009182A
mov	esi, [esp+40h+arg_C]
push	esi
push	4
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10091774
mov	eax, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	5
push	eax
mov	[esp+50h+var_1C], 1CEh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	esi
lea	ecx, [esp+44h+arg_0]
push	ecx
push	ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_100917B4
mov	edx, [eax+4]
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	5
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+arg_0], 4
mov	dword ptr [ebp+0], 0
jnz	short loc_10091810
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	edi
mov	eax, ebx
call	sub_100912F0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10091804
mov	ecx, [eax+4]
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	5
push	eax
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 37h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
xor	edx, edx
cmp	[esp+40h+var_30], edx
setz	dl
mov	[ebp+0], edx
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	5
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_byte_7 
mov	[esp+34h+var_C], 5
test	esi, esi
jnz	short loc_100918B9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	4
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_100918E2
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2E2h
jmp	short loc_10091924
mov	eax, [esi]
test	eax, eax
jz	short loc_10091917
push	edi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+34h+var_24], eax
test	eax, eax
jz	short loc_10091911
push	edi
push	eax
lea	eax, [esp+3Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+34h+var_24], 0
mov	dword ptr [esi], 0
mov	dword ptr [esi], 0
mov	dword ptr [esi+4], 0
push	edi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	5
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_byte_8 
mov	[esp+38h+var_C], 5
test	esi, esi
jz	loc_100919FF
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_100919FF
mov	edi, [esp+38h+arg_8]
push	edi
push	4
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_100919BE
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	5
push	ecx
mov	[esp+48h+var_1C], 2E2h
mov	[esp+48h+var_10], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	ecx, [esi+4]
mov	edx, [esi]
push	edi
push	ebx
push	ecx
push	edx
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_100919E6
mov	eax, [eax+4]
mov	[esp+38h+var_1C], 20Ch
mov	[esp+38h+var_10], eax
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	5
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB2B0
push	1
mov	[esp+60h+var_50], offset aBytearray 
mov	[esp+60h+var_48], 8
mov	[esp+60h+var_44], offset sub_10091860
mov	[esp+60h+var_40], offset sub_100916E0
mov	[esp+60h+var_3C], offset sub_10091940
mov	[esp+60h+var_38], offset sub_10091470
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	5
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_byte_2 
mov	[esp+68h+var_C], 5
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_bytear 
mov	[esp+3Ch+var_C], 5
test	ebp, ebp
jnz	short loc_10091B33
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	edi, [esp+3Ch+arg_C]
push	ebx
push	edi
lea	edx, [esp+44h+var_30]
push	edx
push	8
push	4
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10091B66
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 142h
jmp	loc_10091BF4
mov	esi, [esp+40h+Size]
mov	edx, [esp+40h+var_30]
mov	[edx+4], esi
mov	eax, [esp+40h+var_30]
mov	dword ptr [eax], 0
test	esi, esi
jz	short loc_10091BE9
mov	ebx, [esp+40h+Src]
push	edi
test	ebx, ebx
jnz	short loc_10091BB1
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	edx, [esp+44h+var_30]
push	edx
push	esi
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10091BD8
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 299h
jmp	short loc_10091BF4
mov	edx, [esp+40h+var_30]
mov	eax, [edx]
push	esi		
push	ebx		
push	eax		
call	memcpy
add	esp, 0Ch
mov	ecx, [esp+40h+var_30]
mov	eax, [esp+40h+var_28]
mov	[ebp+0], ecx
			
xor	esi, esi
cmp	[esp+40h+var_18], esi
jnz	short loc_10091C0C
cmp	eax, esi
jnz	short loc_10091C0C
cmp	[esp+40h+var_14], esi
jnz	short loc_10091C0C
cmp	[esp+40h+var_4], esi
jz	short loc_10091C3D
			
mov	eax, [esp+40h+var_30]
cmp	eax, esi
jz	short loc_10091C3D
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, esi
jz	short loc_10091C39
push	edi
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], esi
mov	[esp+40h+var_30], esi
			
push	edi
push	1
lea	eax, [esp+48h+var_2C]
push	5
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	edx, edx
mov	[esp+3Ch+Dst], edx
mov	[esp+3Ch+var_2C], offset aPkix_pl_byte_0 
mov	[esp+3Ch+var_C], 5
test	esi, esi
jz	loc_10091D5E
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_10091D5E
mov	eax, [esi+4]
mov	edi, [esp+3Ch+arg_8]
test	eax, eax
jz	short loc_10091CF3
push	edi
lea	ecx, [esp+40h+Dst]
push	ecx
push	eax
call	sub_10094350
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10091CDB
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	edx, [esp+3Ch+Dst]
mov	[esp+3Ch+var_1C], 299h
jmp	short loc_10091CF9
mov	eax, [esi+4]
mov	ecx, [esi]
mov	edx, [esp+3Ch+Dst]
push	eax		
push	ecx		
push	edx		
call	memcpy
mov	edx, [esp+48h+Dst]
add	esp, 0Ch
mov	eax, [esp+3Ch+var_28]
mov	[ebx], edx
cmp	[esp+3Ch+var_18], 0
jnz	short loc_10091D10
test	eax, eax
jnz	short loc_10091D10
cmp	[esp+3Ch+var_14], eax
jnz	short loc_10091D10
cmp	[esp+3Ch+var_4], eax
jz	short loc_10091D45
			
test	edx, edx
jz	short loc_10091D45
push	edi
push	edx
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10091D3D
push	edi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+Dst], 0
			
push	edi
push	1
lea	ecx, [esp+44h+var_2C]
push	5
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	edx, [esp+3Ch+arg_8]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	1Fh
push	eax
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_byte_1 
mov	[esp+30h+var_C], 5
pop	esi
test	ecx, ecx
jz	short loc_10091DE6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_10091DE6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+4]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	5
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_lockobjec 
mov	[esp+34h+var_C], 30h
test	esi, esi
jnz	short loc_10091E69
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
call	sub_10093EA0
cmp	esi, eax
jz	short loc_10091E7F
mov	edx, [esi-10h]
push	edx
call	ds:PR_Lock
add	esp, 4
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_unlockobj 
mov	[esp+34h+var_C], 30h
test	esi, esi
jnz	short loc_10091EF9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
call	sub_10093EA0
mov	edi, [esp+34h+arg_4]
cmp	esi, eax
jz	short loc_10091F51
mov	edx, [esi-10h]
push	edx
call	ds:PR_Unlock
add	esp, 4
cmp	eax, 0FFFFFFFFh
jnz	short loc_10091F51
mov	eax, dword_100BAE9C
mov	[esp+34h+var_18], 1
mov	[esp+34h+var_1C], 1B9h
mov	[esp+34h+var_10], 1Fh
test	eax, eax
jz	short loc_10091F51
mov	ecx, [esp+34h+var_C]
push	edi
push	1
push	ecx
push	0
push	1B9h
push	eax
call	sub_10074820
add	esp, 18h
			
push	edi
push	1
lea	edx, [esp+3Ch+var_2C]
push	30h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_pl_getoid 
mov	[esp+38h+var_C], 35h
test	ebx, ebx
jz	loc_10092024
cmp	[esp+38h+arg_0], 0
jz	short loc_10092024
test	ebp, ebp
jz	short loc_10092024
xor	esi, esi
xor	ecx, ecx
movsx	eax, byte ptr [ebx+edx]
mov	edi, eax
and	edi, 7Fh
shl	ecx, 7
inc	edx
or	ecx, edi
test	al, al
jns	short loc_10092019
inc	esi
cmp	esi, 4
jb	short loc_10091FB1
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10091FEC
mov	ecx, [esp+38h+arg_8]
push	ecx
push	2
push	35h
push	0
push	23Fh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
mov	[esp+38h+var_1C], 23Fh
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	35h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
mov	eax, [esp+38h+arg_0]
mov	[eax], ecx
mov	[ebp+0], edx
jmp	short loc_10091FFC
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
			
sub	esp, 38h
push	ebx
mov	ebx, [esp+3Ch+arg_0]
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_34], ebp
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_30], ebp
mov	[esp+48h+var_2C], offset aPkix_pl_helper 
mov	[esp+48h+var_C], 30h
cmp	ebx, ebp
jz	loc_100922FE
cmp	[esp+48h+arg_8], ebp
jz	loc_100922FE
mov	edi, [esp+48h+arg_4]
cmp	edi, ebp
jnz	short loc_100920F5
mov	eax, dword_100BAE9C
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 212h
mov	[esp+48h+var_10], 1Fh
cmp	eax, ebp
jz	loc_1009220A
mov	ecx, [esp+48h+arg_C]
push	ecx
push	1
push	30h
push	ebp
push	212h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_100921A0
mov	edx, [esp+48h+arg_C]
push	edx
lea	eax, [esp+4Ch+var_34]
push	eax
push	0Bh
call	sub_10094350
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebp
jz	short loc_10092122
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 299h
jmp	short loc_100921A0
xor	esi, esi
cmp	edi, ebp
mov	ebp, ds:PR_snprintf
jbe	short loc_1009216C
mov	edi, edi
mov	edx, [ebx+esi*4]
mov	eax, [esp+48h+var_34]
push	edx
push	offset aD_0	
push	0Bh
push	eax
call	ebp 
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jz	loc_10092228
mov	ecx, [esp+48h+var_34]
push	ecx
call	PL_strlen
mov	edx, [esp+4Ch+var_30]
inc	esi
add	esp, 4
lea	eax, [edx+eax+1]
mov	[esp+48h+var_30], eax
cmp	esi, edi
jb	short loc_10092130
mov	eax, [esp+48h+arg_C]
mov	edx, [esp+48h+var_30]
push	eax
lea	ecx, [esp+4Ch+var_38]
push	ecx
push	edx
call	sub_10094350
add	esp, 0Ch
mov	[esp+48h+var_28], eax
test	eax, eax
jz	loc_10092262
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 299h
xor	ebp, ebp
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebp
jz	short loc_100921D5
mov	esi, [esp+48h+arg_C]
push	esi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_100921D1
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_38], ebp
			
mov	eax, [esp+48h+var_34]
cmp	eax, ebp
jz	short loc_1009220A
mov	esi, [esp+48h+arg_C]
push	esi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebp
jz	short loc_10092206
push	esi
push	eax
lea	ecx, [esp+50h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebp
mov	[esp+48h+var_34], ebp
			
mov	edx, [esp+48h+arg_C]
push	edx
push	1
lea	eax, [esp+50h+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009224D
mov	ecx, [esp+48h+arg_C]
mov	edx, [esp+48h+var_C]
push	ecx
push	2
push	edx
push	0
push	38Ch
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 38Ch
jmp	loc_1009219E
mov	ecx, [esp+48h+var_38]
xor	esi, esi
mov	byte ptr [ecx],	0
test	edi, edi
jz	short loc_100922BA
nop
mov	edx, [ebx+esi*4]
mov	eax, [esp+48h+var_34]
push	edx
push	offset aD_0	
push	0Bh
push	eax
call	ebp 
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jz	short loc_100922E0
mov	ecx, [esp+48h+var_34]
mov	edx, [esp+48h+var_38]
push	ecx
push	edx
call	PL_strcat
lea	eax, [edi-1]
add	esp, 8
cmp	esi, eax
jnb	short loc_100922B5
mov	ecx, [esp+48h+var_38]
push	offset a__0	
push	ecx
call	PL_strcat
add	esp, 8
inc	esi
cmp	esi, edi
jb	short loc_10092270
mov	edx, [esp+48h+var_38]
mov	eax, [esp+48h+var_30]
mov	byte ptr [eax+edx-1], 0
mov	ecx, [esp+48h+var_38]
mov	edx, [esp+48h+arg_8]
mov	[edx], ecx
mov	[esp+48h+var_38], 0
xor	ebp, ebp
jmp	loc_100921D5
mov	eax, dword_100BAE9C
test	eax, eax
jz	loc_1009224D
mov	edx, [esp+48h+arg_C]
mov	ecx, [esp+48h+var_C]
push	edx
push	2
push	ecx
jmp	loc_1009223D
			
mov	ecx, [esp+48h+arg_C]
push	ecx
push	1
lea	edx, [esp+50h+var_2C]
push	1Fh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
align 10h
sub	esp, 34h
mov	eax, [esp+34h+arg_0]
push	ebx
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_pl_ipaddr 
mov	[esp+44h+var_C], 30h
cmp	eax, ebp
jz	loc_10092492
cmp	[esp+44h+arg_4], ebp
jz	loc_10092492
mov	ebx, [eax+4]
cmp	ebx, ebp
jz	loc_10092492
mov	esi, [eax+8]
mov	edi, [esp+44h+arg_8]
cmp	esi, ebp
jnz	short loc_100923C8
mov	eax, dword_100BAE9C
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 245h
mov	[esp+44h+var_10], 1Fh
cmp	eax, ebp
jz	loc_10092478
push	edi
push	1
push	30h
push	ebp
push	245h
push	eax
call	sub_10074820
add	esp, 18h
jmp	short loc_10092447
push	edi
lea	eax, [esp+48h+var_34]
push	eax
lea	ecx, ds:0[esi*4]
push	ecx
call	sub_10094350
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100923F7
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 299h
jmp	short loc_10092447
xor	eax, eax
cmp	esi, ebp
jbe	short loc_10092410
lea	ecx, [ecx+0]
movsx	ecx, byte ptr [eax+ebx]
mov	edx, [esp+44h+var_34]
mov	[edx+eax*4], ecx
inc	eax
cmp	eax, esi
jb	short loc_10092400
mov	ecx, [esp+44h+var_34]
push	edi
lea	eax, [esp+48h+var_30]
push	eax
push	esi
push	ecx
call	sub_10092060
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1009243D
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 211h
jmp	short loc_10092447
mov	eax, [esp+44h+var_30]
mov	ecx, [esp+44h+arg_4]
mov	[ecx], eax
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_10092478
push	edi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_10092474
push	edi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
			
push	edi
push	1
lea	eax, [esp+4Ch+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	ecx, [esp+44h+arg_8]
push	ecx
push	1
lea	edx, [esp+4Ch+var_2C]
push	1Fh
push	edx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
push	ebx
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_3C], ebx
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_2C], offset aPkix_pl_oidbyt 
mov	[esp+48h+var_C], 35h
cmp	eax, ebx
jz	loc_100926EA
cmp	[esp+48h+arg_4], ebx
jz	loc_100926EA
mov	edx, [eax+4]
mov	[esp+48h+arg_0], edx
cmp	edx, ebx
jz	loc_100926EA
mov	ecx, [eax+8]
push	ebp
mov	ebp, [esp+4Ch+arg_8]
cmp	ecx, ebx
jnz	short loc_10092567
mov	eax, dword_100BAE9C
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 329h
mov	[esp+4Ch+var_10], 1Fh
cmp	eax, ebx
jz	loc_100926D0
push	ebp
push	1
push	35h
push	ebx
push	329h
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1009269F
xor	edi, edi
xor	eax, eax
cmp	ecx, ebx
jbe	short loc_10092580
nop
test	byte ptr [eax+edx], 80h
jnz	short loc_10092577
inc	edi
inc	eax
cmp	eax, ecx
jb	short loc_10092570
cmp	edi, ebx
jnz	short loc_100925B2
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1009259D
push	ebp
push	2
push	35h
push	ebx
push	23Eh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 23Eh
jmp	loc_1009269F
push	ebp
lea	eax, [esp+50h+var_3C]
inc	edi
push	eax
lea	ecx, ds:0[edi*4]
push	ecx
call	sub_10094350
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100925E5
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 299h
jmp	loc_1009269F
xor	esi, esi
cmp	edi, ebx
jbe	short loc_10092655
jmp	short loc_100925F0
align 10h
			
mov	edx, [esp+4Ch+var_34]
mov	ebx, [esp+4Ch+arg_0]
push	ebp
lea	eax, [esp+50h+var_34]
push	eax
lea	ecx, [esp+54h+var_38]
push	ecx
call	sub_10091F70
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
test	eax, eax
jnz	short loc_10092682
mov	ecx, [esp+4Ch+var_38]
test	esi, esi
jnz	short loc_10092647
cmp	ecx, 28h
jb	short loc_10092628
cmp	ecx, 50h
sbb	eax, eax
add	eax, 2
mov	edx, [esp+4Ch+var_3C]
mov	[edx], eax
mov	edx, [esp+4Ch+var_3C]
lea	eax, [eax+eax*4]
add	eax, eax
add	eax, eax
add	eax, eax
sub	ecx, eax
mov	[edx+4], ecx
mov	esi, 1
jmp	short loc_1009264E
mov	eax, [esp+4Ch+var_3C]
mov	[eax+esi*4], ecx
inc	esi
cmp	esi, edi
jb	short loc_100925F0
xor	ebx, ebx
mov	ecx, [esp+4Ch+var_3C]
push	ebp
lea	eax, [esp+50h+var_30]
push	eax
push	edi
push	ecx
call	sub_10092060
add	esp, 10h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10092695
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 211h
jmp	short loc_1009269F
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 206h
xor	ebx, ebx
jmp	short loc_1009269F
mov	eax, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+arg_4]
mov	[ecx], eax
			
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_100926D0
push	ebp
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_100926CC
push	ebp
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
			
push	ebp
push	1
lea	eax, [esp+54h+var_2C]
push	35h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
			
mov	ecx, [esp+48h+arg_8]
push	ecx
push	1
lea	edx, [esp+50h+var_2C]
push	1Fh
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_utf16_to_ 
mov	[esp+38h+var_C], 3Eh
test	ebp, ebp
jz	loc_10092A84
cmp	[esp+38h+arg_C], 0
jz	loc_10092A84
cmp	[esp+38h+arg_10], 0
jz	loc_10092A84
mov	eax, [esp+38h+arg_4]
push	ebx
lea	edi, ds:0[eax*4]
test	al, 1
jz	short loc_100927AF
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009279A
mov	ecx, [esp+3Ch+arg_14]
push	ecx
push	2
push	3Eh
push	0
push	410h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 410h
jmp	loc_100929EB
xor	esi, esi
test	eax, eax
jz	short loc_10092820
lea	ebx, [esi+3]
cmp	byte ptr [esi+ebp], 0
jnz	short loc_100927E6
mov	edx, [esp+3Ch+arg_8]
movzx	eax, byte ptr [esi+ebp+1]
push	edx
push	eax
call	sub_10072870
add	esp, 8
test	eax, eax
jz	short loc_100927E6
cmp	byte ptr [esi+ebp+1], 26h
jnz	short loc_100927E1
sub	edi, 3
jmp	short loc_10092814
sub	edi, 7
jmp	short loc_10092814
			
mov	al, [esi+ebp]
cmp	al, 0D8h
jb	short loc_10092814
cmp	al, 0DBh
ja	short loc_10092814
cmp	ebx, [esp+3Ch+arg_4]
jnb	short loc_1009285A
mov	al, [esi+ebp+2]
cmp	al, 0DCh
jb	loc_10092894
cmp	al, 0DFh
ja	loc_10092894
sub	edi, 4
add	esi, 2
add	ebx, 2
			
add	esi, 2
add	ebx, 2
cmp	esi, [esp+3Ch+arg_4]
jb	short loc_100927B8
mov	ecx, [esp+3Ch+arg_14]
mov	eax, [esp+3Ch+arg_10]
mov	edx, [esp+3Ch+arg_C]
push	ecx
mov	[eax], edi
push	edx
inc	edi
push	edi
call	sub_10094350
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	loc_100928CE
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 299h
jmp	loc_100929D4
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009287F
mov	ecx, [esp+3Ch+arg_14]
mov	edx, [esp+3Ch+var_C]
push	ecx
push	2
push	edx
push	0
push	411h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 411h
jmp	loc_100929EB
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100928B9
mov	ecx, [esp+3Ch+arg_14]
mov	edx, [esp+3Ch+var_C]
push	ecx
push	2
push	edx
push	0
push	412h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 412h
jmp	loc_100929EB
mov	edx, [esp+3Ch+arg_C]
mov	esi, [edx]
xor	edi, edi
cmp	[esp+3Ch+arg_4], edi
jbe	loc_100929CD
cmp	byte ptr [edi+ebp], 0
jnz	short loc_10092909
mov	eax, [esp+3Ch+arg_8]
movzx	ecx, byte ptr [edi+ebp+1]
push	eax
push	ecx
call	sub_10072870
add	esp, 8
test	eax, eax
jz	short loc_10092909
mov	dl, [edi+ebp+1]
mov	[esi], dl
inc	esi
jmp	loc_100929C0
			
mov	bl, [edi+ebp+1]
cmp	bl, 26h
jnz	short loc_1009292F
cmp	byte ptr [edi+ebp], 0
jnz	short loc_1009292F
mov	word ptr [esi],	6126h
mov	word ptr [esi+2], 706Dh
mov	byte ptr [esi+4], 3Bh
add	esi, 5
jmp	loc_100929C0
			
mov	cl, [edi+ebp]
cmp	cl, 0D8h
jb	short loc_1009299B
cmp	cl, 0DBh
ja	short loc_1009299B
mov	dl, [edi+ebp+2]
cmp	dl, 0DCh
jb	short loc_1009299B
cmp	dl, 0DFh
ja	short loc_1009299B
movzx	eax, byte ptr [edi+ebp+3]
movzx	edx, dl
movzx	ecx, cl
shl	edx, 8
or	eax, edx
shl	ecx, 8
movzx	edx, bl
or	ecx, edx
and	ecx, 0FFFFh
sub	ecx, 0D7F7h
and	eax, 0FFFFh
shl	ecx, 0Ah
add	eax, ecx
push	eax
push	offset aX08x	
push	0Dh
push	esi
call	ds:PR_snprintf
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jz	loc_10092A4A
add	edi, 2
add	esi, 0Ch
jmp	short loc_100929C0
			
movzx	eax, bl
push	eax
movzx	ecx, cl
push	ecx
push	offset aX02x02x	
push	9
push	esi
call	ds:PR_snprintf
add	esp, 14h
cmp	eax, 0FFFFFFFFh
jz	loc_10092A4A
add	esi, 8
			
add	edi, 2
cmp	edi, [esp+3Ch+arg_4]
jb	loc_100928E0
mov	byte ptr [esi],	0
mov	eax, [esp+3Ch+var_28]
cmp	[esp+3Ch+var_18], 0
jnz	short loc_100929EB
test	eax, eax
jnz	short loc_100929EB
cmp	[esp+3Ch+var_14], eax
jnz	short loc_100929EB
cmp	[esp+3Ch+var_4], eax
jz	short loc_10092A2C
			
mov	edx, [esp+3Ch+arg_C]
mov	eax, [edx]
test	eax, eax
jz	short loc_10092A2C
mov	esi, [esp+3Ch+arg_14]
push	esi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10092A22
push	esi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
mov	ecx, [esp+3Ch+arg_C]
mov	dword ptr [ecx], 0
			
mov	edx, [esp+3Ch+arg_14]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	3Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10092A6F
mov	edx, [esp+3Ch+arg_14]
mov	ecx, [esp+3Ch+var_C]
push	edx
push	2
push	ecx
push	0
push	38Ch
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 38Ch
jmp	loc_100929EB
			
mov	ecx, [esp+38h+arg_14]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 44h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	esi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_2C], offset aPkix_escascii_ 
mov	[esp+4Ch+var_C], 3Eh
test	esi, esi
jz	loc_10093012
mov	ecx, [esp+4Ch+arg_C]
test	ecx, ecx
jz	loc_10093012
cmp	[esp+4Ch+arg_10], 0
jz	loc_10093012
mov	eax, [esp+4Ch+arg_4]
push	ebx
push	ebp
test	eax, eax
jnz	short loc_10092B4A
mov	eax, [esp+54h+arg_14]
push	eax
push	ecx
push	0
call	sub_10094350
add	esp, 0Ch
mov	[esp+54h+var_28], eax
test	eax, eax
jz	loc_10092EF2
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 299h
jmp	loc_10092EF2
lea	edx, [eax+eax]
xor	edi, edi
mov	[esp+54h+var_40], edx
test	eax, eax
jz	loc_10092C24
lea	ebx, [edi+0Bh]
lea	ebp, [edi+7]
mov	eax, [esp+54h+arg_8]
movzx	ecx, byte ptr [esi]
push	eax
push	ecx
call	sub_10072870
add	esp, 8
test	eax, eax
jnz	short loc_10092B7F
cmp	byte ptr [esi],	26h
jnz	loc_10092C5B
push	offset aAmp	
push	esi
call	PL_strstr
add	esp, 8
cmp	eax, esi
jnz	short loc_10092BA4
sub	[esp+54h+var_40], 8
add	edi, 4
add	esi, 4
add	ebp, 4
add	ebx, 4
jmp	short loc_10092C16
push	offset asc_100AE88C 
push	esi
call	PL_strstr
add	esp, 8
cmp	eax, esi
jz	short loc_10092BC8
push	offset asc_100AE888 
push	esi
call	PL_strstr
add	esp, 8
cmp	eax, esi
jnz	short loc_10092C16
mov	eax, [esp+54h+arg_4]
cmp	ebp, eax
ja	short loc_10092BEE
mov	edx, [esp+54h+arg_0]
cmp	byte ptr [edi+edx+7], 3Bh
jnz	short loc_10092BEE
sub	[esp+54h+var_40], 0Eh
add	edi, 7
add	esi, 7
add	ebp, 7
add	ebx, 7
jmp	short loc_10092C16
			
cmp	ebx, eax
ja	loc_10092C95
mov	eax, [esp+54h+arg_0]
cmp	byte ptr [edi+eax+0Bh],	3Bh
jnz	loc_10092C95
sub	[esp+54h+var_40], 14h
add	edi, 0Bh
add	esi, 0Bh
add	ebp, 0Bh
add	ebx, 0Bh
			
inc	edi
inc	esi
inc	ebp
inc	ebx
cmp	edi, [esp+54h+arg_4]
jb	loc_10092B61
mov	eax, [esp+54h+arg_14]
mov	esi, [esp+54h+arg_C]
mov	ecx, [esp+54h+var_40]
push	eax
push	esi
push	ecx
call	sub_10094350
add	esp, 0Ch
mov	[esp+54h+var_28], eax
test	eax, eax
jz	loc_10092CCF
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 299h
jmp	loc_10092EF2
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10092C80
mov	ecx, [esp+54h+arg_14]
mov	edx, [esp+54h+var_C]
push	ecx
push	2
push	edx
push	0
push	227h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 227h
jmp	loc_10092F09
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10092CBA
mov	ecx, [esp+54h+arg_14]
mov	edx, [esp+54h+var_C]
push	ecx
push	2
push	edx
push	0
push	22Ch
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 22Ch
jmp	loc_10092F09
mov	esi, [esi]
xor	edi, edi
cmp	[esp+54h+arg_4], edi
jbe	loc_10092EE8
lea	ecx, [ecx+0]
mov	ebx, [esp+54h+arg_0]
mov	eax, [esp+54h+arg_8]
movzx	ecx, byte ptr [edi+ebx]
lea	ebp, [edi+ebx]
push	eax
push	ecx
call	sub_10072870
add	esp, 8
test	eax, eax
jz	short loc_10092D0E
mov	byte ptr [esi],	0
mov	dl, [ebp+0]
mov	[esi+1], dl
add	esi, 2
jmp	loc_10092ED9
push	offset aAmp	
push	ebp
call	PL_strstr
add	esp, 8
cmp	eax, ebp
jnz	short loc_10092D30
mov	word ptr [esi],	2600h
add	esi, 2
add	edi, 5
jmp	loc_10092EDA
push	offset asc_100AE88C 
push	ebp
call	PL_strstr
add	esp, 8
cmp	eax, ebp
jz	short loc_10092D58
push	offset asc_100AE888 
push	ebp
call	PL_strstr
add	esp, 8
cmp	eax, ebp
jnz	loc_10092C5B
lea	eax, [edi+7]
cmp	eax, [esp+54h+arg_4]
ja	loc_10092C5B
xor	ecx, ecx
cmp	byte ptr [edi+ebx+7], 3Bh
setnz	cl
lea	ecx, ds:4[ecx*4]
mov	ebx, ecx
lea	eax, [ebx+edi+3]
mov	[esp+54h+var_38], ebx
mov	[esp+54h+var_30], eax
cmp	eax, [esp+54h+arg_4]
ja	loc_10092FD8
mov	edx, [esp+54h+arg_0]
cmp	byte ptr [eax+edx], 3Bh
jnz	loc_10092FD8
xor	ebp, ebp
test	ebx, ebx
jz	short loc_10092DF0
lea	eax, [edi+edx+3]
mov	al, [eax+ebp]
cmp	al, 30h
jl	short loc_10092DB1
cmp	al, 39h
jle	short loc_10092DC8
mov	cl, al
or	cl, 20h
cmp	cl, 61h
jl	loc_10092F64
cmp	cl, 66h
jg	loc_10092F64
cmp	ebx, 8
jnz	short loc_10092DEB
push	eax
call	sub_10072800
mov	edx, [esp+58h+arg_0]
mov	ecx, 7
sub	ecx, ebp
add	ecx, ecx
add	ecx, ecx
shl	eax, cl
add	esp, 4
or	[esp+54h+var_3C], eax
inc	ebp
cmp	ebp, ebx
jb	short loc_10092DA2
movzx	edx, byte ptr [edi+edx+3]
push	edx
call	sub_10072800
mov	ebp, [esp+58h+arg_0]
mov	bl, al
movzx	eax, byte ptr [edi+ebp+4]
push	eax
shl	bl, 4
call	sub_10072800
movzx	ecx, byte ptr [edi+ebp+5]
or	al, bl
push	ecx
mov	[esp+60h+var_41], al
call	sub_10072800
movzx	edx, byte ptr [edi+ebp+6]
mov	bl, al
push	edx
shl	bl, 4
call	sub_10072800
or	bl, al
mov	eax, [esp+64h+var_38]
add	esp, 10h
mov	byte ptr [esp+54h+var_34], bl
cmp	eax, 4
jnz	short loc_10092E7E
mov	al, [esp+54h+var_41]
cmp	al, 0D8h
jb	short loc_10092E52
cmp	al, 0DFh
jbe	loc_10092F9E
test	al, al
jnz	short loc_10092E74
mov	eax, [esp+54h+arg_8]
mov	ecx, [esp+54h+var_34]
push	eax
push	ecx
call	sub_10072870
add	esp, 8
test	eax, eax
jnz	loc_10092C5B
mov	al, [esp+54h+var_41]
mov	[esi], al
mov	[esi+1], bl
add	esi, 2
jmp	short loc_10092ED5
cmp	eax, 8
jnz	short loc_10092ED5
cmp	[esp+54h+var_41], 0
jnz	loc_10092C5B
dec	bl
cmp	bl, 0Fh
ja	loc_10092C5B
mov	ecx, [esp+54h+var_3C]
sub	ecx, 10000h
mov	eax, ecx
shr	eax, 0Ah
add	eax, 0D800h
mov	edx, eax
mov	[esp+54h+var_3C], ecx
and	ecx, 3FFh
shr	edx, 8
mov	[esi], dl
mov	[esi+1], al
add	ecx, 0DC00h
mov	eax, ecx
shr	eax, 8
mov	[esi+2], al
mov	[esi+3], cl
add	esi, 4
			
mov	edi, [esp+54h+var_30]
inc	edi
cmp	edi, [esp+54h+arg_4]
jb	loc_10092CE0
mov	eax, [esp+54h+var_28]
mov	ecx, [esp+54h+var_40]
mov	edx, [esp+54h+arg_10]
mov	[edx], ecx
			
cmp	[esp+54h+var_18], 0
jnz	short loc_10092F09
test	eax, eax
jnz	short loc_10092F09
cmp	[esp+54h+var_14], eax
jnz	short loc_10092F09
cmp	[esp+54h+var_4], eax
jz	short loc_10092F46
			
mov	esi, [esp+54h+arg_C]
mov	eax, [esi]
test	eax, eax
jz	short loc_10092F46
mov	edi, [esp+54h+arg_14]
push	edi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+54h+var_24], eax
test	eax, eax
jz	short loc_10092F40
push	edi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], 0
mov	dword ptr [esi], 0
			
mov	ecx, [esp+54h+arg_14]
push	ecx
push	1
lea	edx, [esp+5Ch+var_2C]
push	3Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 44h
retn
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10092F89
mov	ecx, [esp+54h+arg_14]
mov	edx, [esp+54h+var_C]
push	ecx
push	2
push	edx
push	0
push	22Bh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 22Bh
jmp	loc_10092F09
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10092FC3
mov	ecx, [esp+54h+arg_14]
mov	edx, [esp+54h+var_C]
push	ecx
push	2
push	edx
push	0
push	22Ah
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 22Ah
jmp	loc_10092F09
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10092FFD
mov	ecx, [esp+54h+arg_14]
mov	edx, [esp+54h+var_C]
push	ecx
push	2
push	edx
push	0
push	3DFh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 3DFh
jmp	loc_10092F09
			
mov	eax, [esp+4Ch+arg_14]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	1Fh
push	ecx
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 44h
retn
align 10h
sub	esp, 2Ch
cmp	[esp+2Ch+arg_0], 0
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_utf16_t_0 
mov	[esp+34h+var_C], 3Eh
jz	loc_100931B9
mov	edi, [esp+34h+arg_C]
test	edi, edi
jz	loc_100931B9
cmp	[esp+34h+arg_10], 0
jz	loc_100931B9
push	ebx
mov	ebx, [esp+38h+arg_14]
push	ebp
mov	ebp, [esp+3Ch+arg_4]
push	ebx
push	edi
lea	esi, [ebp+ebp+0]
push	esi
push	1
call	sub_10094430
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100930BE
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 44h
jmp	loc_10093153
mov	edx, [esp+3Ch+arg_10]
mov	eax, [edi]
mov	ecx, [esp+3Ch+arg_0]
push	edx
push	esi
push	eax
push	ebp
push	ecx
push	0
call	PORT_UCS2_UTF8Conversion_Util
add	esp, 18h
test	eax, eax
jnz	short loc_1009310E
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100930FC
mov	edx, [esp+3Ch+var_C]
push	ebx
push	2
push	edx
push	0
push	357h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 357h
jmp	short loc_1009316A
mov	ebp, [esp+3Ch+arg_8]
mov	eax, [esp+3Ch+arg_10]
mov	esi, [eax]
test	ebp, ebp
jz	short loc_1009311D
inc	esi
mov	ecx, [edi]
push	ebx		
push	edi		
push	esi		
push	ecx		
call	sub_10094520
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10093144
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 393h
jmp	short loc_10093153
test	ebp, ebp
jz	short loc_10093153
mov	eax, [edi]
mov	byte ptr [eax+esi-1], 0
mov	eax, [esp+3Ch+var_28]
			
cmp	[esp+3Ch+var_18], 0
jnz	short loc_1009316A
test	eax, eax
jnz	short loc_1009316A
cmp	[esp+3Ch+var_14], eax
jnz	short loc_1009316A
cmp	[esp+3Ch+var_4], eax
jz	short loc_1009319F
			
mov	eax, [edi]
test	eax, eax
jz	short loc_1009319F
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10093199
push	ebx
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
mov	dword ptr [edi], 0
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	3Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	eax, [esp+34h+arg_14]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
cmp	[esp+2Ch+arg_0], 0
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_utf8_to_u 
mov	[esp+34h+var_C], 3Eh
jz	loc_10093348
mov	edi, [esp+34h+arg_8]
test	edi, edi
jz	loc_10093348
cmp	[esp+34h+arg_C], 0
jz	loc_10093348
push	ebx
mov	ebx, [esp+38h+arg_10]
push	ebp
mov	ebp, [esp+3Ch+arg_4]
push	ebx
push	edi
lea	esi, [ebp+ebp+0]
push	esi
push	1
call	sub_10094430
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10093267
mov	ecx, [eax+4]
mov	[esp+3Ch+var_1C], 299h
jmp	short loc_100932DE
mov	edx, [esp+3Ch+arg_C]
mov	eax, [edi]
mov	ecx, [esp+3Ch+arg_0]
push	edx
push	esi
push	eax
push	ebp
push	ecx
push	1
call	PORT_UCS2_UTF8Conversion_Util
add	esp, 18h
test	eax, eax
jnz	short loc_100932B7
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100932A5
mov	edx, [esp+3Ch+var_C]
push	ebx
push	2
push	edx
push	0
push	357h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 357h
jmp	short loc_100932F9
mov	eax, [esp+3Ch+arg_C]
mov	ecx, [eax]
mov	edx, [edi]
push	ebx		
push	edi		
push	ecx		
push	edx		
call	sub_10094520
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100932E2
mov	ecx, [eax+4]
mov	[esp+3Ch+var_1C], 393h
mov	[esp+3Ch+var_10], ecx
cmp	[esp+3Ch+var_18], 0
jnz	short loc_100932F9
test	eax, eax
jnz	short loc_100932F9
cmp	[esp+3Ch+var_14], eax
jnz	short loc_100932F9
cmp	[esp+3Ch+var_4], eax
jz	short loc_1009332E
			
mov	eax, [edi]
test	eax, eax
jz	short loc_1009332E
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10093328
push	ebx
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
mov	dword ptr [edi], 0
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	3Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	ecx, [esp+34h+arg_10]
push	ecx
push	1
lea	edx, [esp+3Ch+var_2C]
push	1Fh
push	edx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
align 10h
sub	esp, 2Ch
push	ebx
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
xor	ebx, ebx
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_pl_hash_4 
mov	[esp+3Ch+var_C], 22h
cmp	ebp, ebx
jnz	short loc_100933EF
mov	eax, [esp+3Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+3Ch+arg_4]
push	edi
push	1Eh
push	ebp
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009341B
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 2F7h
jmp	loc_1009350D
mov	ecx, [ebp+0]
xor	eax, eax
mov	[esp+3Ch+arg_0], eax
cmp	[ecx+4], ebx
jbe	loc_100934B8
lea	ecx, [ecx+0]
mov	edx, [ebp+0]
mov	ecx, [edx]
mov	esi, [ecx+eax*4]
cmp	esi, ebx
jz	short loc_100934A7
lea	esp, [esp+0]
mov	eax, [esi]
cmp	eax, ebx
jz	short loc_1009346D
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1009346B
push	edi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
mov	[esi], ebx
mov	eax, [esi+4]
cmp	eax, ebx
jz	short loc_1009349C
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10093499
push	edi
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
mov	[esi+4], ebx
mov	esi, [esi+0Ch]
cmp	esi, ebx
jnz	short loc_10093440
mov	eax, [esp+3Ch+arg_0]
mov	ecx, [ebp+0]
inc	eax
mov	[esp+3Ch+arg_0], eax
cmp	eax, [ecx+4]
jb	loc_10093430
mov	edx, [ebp+0]
push	edi
push	edx
call	sub_100974D0
add	esp, 8
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_100934DE
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 361h
jmp	short loc_1009350D
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_1009350D
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1009350A
push	edi
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
mov	[ebp+4], ebx
			
push	edi
push	1
lea	edx, [esp+44h+var_2C]
push	22h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB658
push	1
mov	[esp+60h+var_50], offset aHashtable 
mov	[esp+60h+var_48], 0Ch
mov	[esp+60h+var_44], offset sub_10093390
rep movsd
lea	ecx, [esp+60h+var_2C]
push	22h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_hash_3 
mov	[esp+68h+var_C], 22h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	ebx
mov	ebx, [esp+34h+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_hashta 
mov	[esp+3Ch+var_C], 22h
test	ebx, ebx
jnz	short loc_10093623
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	edi, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_C]
test	edi, edi
jnz	short loc_10093661
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009364C
push	esi
push	2
push	22h
push	edi
push	2BDh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BDh
jmp	loc_1009370A
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	0Ch
push	1Eh
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009368C
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 139h
jmp	short loc_100936F3
mov	edx, [esp+3Ch+var_30]
push	esi
push	edx
push	edi
call	sub_10096E80
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100936B4
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 360h
jmp	short loc_100936F3
mov	edx, [esp+3Ch+var_30]
add	edx, 4
push	esi
push	edx
call	sub_10094B40
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100936DE
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 1A4h
jmp	short loc_100936F3
mov	eax, [esp+3Ch+arg_4]
mov	edx, [esp+3Ch+var_30]
mov	[edx+8], eax
mov	ecx, [esp+3Ch+var_30]
mov	eax, [esp+3Ch+var_28]
mov	[ebx], ecx
			
cmp	[esp+3Ch+var_18], 0
jnz	short loc_1009370A
test	eax, eax
jnz	short loc_1009370A
cmp	[esp+3Ch+var_14], eax
jnz	short loc_1009370A
cmp	[esp+3Ch+var_4], eax
jz	short loc_10093743
			
mov	eax, [esp+3Ch+var_30]
test	eax, eax
jz	short loc_10093743
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_1009373B
push	esi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_30], 0
			
push	esi
push	1
lea	eax, [esp+44h+var_2C]
push	22h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 40h
push	ebx
push	ebp
mov	ebp, [esp+48h+arg_0]
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
rep movsd
mov	[esp+50h+var_40], ebx
mov	[esp+50h+var_3C], ebx
mov	[esp+50h+var_38], ebx
mov	[esp+50h+var_34], ebx
mov	[esp+50h+var_2C], offset aPkix_pl_hash_0 
mov	[esp+50h+var_C], 22h
cmp	ebp, ebx
jz	loc_10093A37
mov	edi, [esp+50h+arg_4]
cmp	edi, ebx
jz	loc_10093A37
cmp	[esp+50h+arg_8], ebx
jz	loc_10093A37
mov	esi, [esp+50h+arg_C]
push	esi
lea	eax, [esp+54h+arg_0]
push	eax
push	edi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100937EA
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 2CFh
jmp	loc_100939EB
push	esi
lea	edx, [esp+54h+var_30]
push	edx
push	edi
call	sub_10095120
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10093815
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 313h
jmp	loc_100939EB
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_10093849
push	esi
push	eax
call	sub_10094C70
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10093842
mov	ecx, [eax+4]
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 2A0h
jmp	loc_100939EB
mov	edx, [ebp+4]
mov	[esp+50h+var_40], edx
mov	ecx, [esp+50h+arg_0]
mov	edx, [ebp+0]
push	esi
lea	eax, [esp+54h+var_34]
push	eax
push	ecx
push	edx
call	sub_10097610
add	esp, 10h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_1009387C
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 362h
jmp	loc_100939EB
mov	eax, [ebp+8]
cmp	eax, ebx
jz	loc_1009392B
cmp	[esp+50h+var_34], eax
jb	loc_1009392B
mov	eax, [esp+50h+arg_0]
push	esi
lea	ecx, [esp+54h+var_38]
push	ecx
mov	ecx, [ebp+0]
lea	edx, [esp+58h+var_3C]
push	edx
push	eax
push	ecx
call	sub_100976C0
add	esp, 14h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_100938C9
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 362h
jmp	loc_100939EB
mov	eax, [esp+50h+var_3C]
cmp	eax, ebx
jz	short loc_100938FA
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_100938F6
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_3C], ebx
mov	eax, [esp+50h+var_38]
cmp	eax, ebx
jz	short loc_1009392B
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_10093927
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_38], ebx
			
mov	edx, [esp+50h+var_30]
mov	eax, [esp+50h+arg_0]
mov	ecx, [esp+50h+arg_8]
push	esi
push	edx
mov	edx, [ebp+0]
push	eax
push	ecx
push	edi
push	edx
call	sub_10097020
add	esp, 18h
mov	[esp+50h+var_28], eax
cmp	eax, ebx
jz	short loc_10093964
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 35Fh
jmp	loc_100939EB
push	esi
push	edi
call	sub_10095450
add	esp, 8
mov	[esp+50h+var_24], eax
push	esi
cmp	eax, ebx
jz	short loc_1009398B
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
jmp	short loc_100939EB
mov	edx, [esp+54h+arg_8]
push	edx
call	sub_10095450
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_100939B5
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
jmp	short loc_100939EB
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_100939EB
cmp	[esp+50h+var_40], eax
jnz	short loc_100939EB
push	esi
push	eax
call	sub_10094CF0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_100939E7
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
mov	[esp+50h+var_40], ebx
			
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_10093A1D
cmp	[esp+50h+var_40], eax
jnz	short loc_10093A1D
push	esi
push	eax
call	sub_10094CF0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebx
jz	short loc_10093A1D
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebx
			
push	esi
push	1
lea	eax, [esp+58h+var_2C]
push	22h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
			
mov	ecx, [esp+50h+arg_C]
push	ecx
push	1
lea	edx, [esp+58h+var_2C]
push	1Fh
push	edx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 40h
retn
align 10h
			
sub	esp, 3Ch
push	ebx
push	ebp
mov	ebp, [esp+44h+arg_0]
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_2C], offset aPkix_pl_hash_1 
mov	[esp+4Ch+var_C], 22h
cmp	ebp, ebx
jz	loc_10093C6D
mov	edi, [esp+4Ch+arg_4]
cmp	edi, ebx
jz	loc_10093C6D
mov	esi, [esp+4Ch+arg_8]
push	esi
lea	eax, [esp+50h+var_30]
push	eax
push	edi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10093AEC
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 2CFh
jmp	loc_10093C21
push	esi
lea	edx, [esp+50h+arg_0]
push	edx
push	edi
call	sub_10095120
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10093B17
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 313h
jmp	loc_10093C21
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_10093B4B
push	esi
push	eax
call	sub_10094C70
add	esp, 8
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10093B44
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 2A0h
jmp	loc_10093C21
mov	edx, [ebp+4]
mov	[esp+4Ch+var_3C], edx
mov	edx, [esp+4Ch+arg_0]
push	esi
lea	eax, [esp+50h+var_34]
push	eax
mov	eax, [esp+54h+var_30]
lea	ecx, [esp+54h+var_38]
push	ecx
mov	ecx, [ebp+0]
push	edx
push	eax
push	edi
push	ecx
call	sub_100971D0
add	esp, 1Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_10093B89
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 364h
jmp	loc_10093C21
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_10093BBF
cmp	[esp+4Ch+var_3C], eax
jnz	short loc_10093BBF
push	esi
push	eax
call	sub_10094CF0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10093BBB
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
			
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_10093BF0
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10093BEC
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_10093C21
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10093C1D
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
			
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_10093C53
cmp	[esp+4Ch+var_3C], eax
jnz	short loc_10093C53
push	esi
push	eax
call	sub_10094CF0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10093C53
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
			
push	esi
push	1
lea	ecx, [esp+54h+var_2C]
push	22h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	edx, [esp+4Ch+arg_8]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
			
sub	esp, 38h
push	ebx
push	ebp
mov	ebp, [esp+40h+arg_0]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_2C], offset aPkix_pl_hash_2 
mov	[esp+48h+var_C], 22h
cmp	ebp, ebx
jz	loc_10093E72
mov	edi, [esp+48h+arg_4]
cmp	edi, ebx
jz	loc_10093E72
cmp	[esp+48h+arg_8], ebx
jz	loc_10093E72
mov	esi, [esp+48h+arg_C]
push	esi
lea	eax, [esp+4Ch+var_30]
push	eax
push	edi
call	sub_10095A20
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10093D22
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 2CFh
jmp	loc_10093E26
push	esi
lea	edx, [esp+4Ch+arg_0]
push	edx
push	edi
call	sub_10095120
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10093D4D
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 313h
jmp	loc_10093E26
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_10093D81
push	esi
push	eax
call	sub_10094C70
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10093D7A
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 2A0h
jmp	loc_10093E26
mov	edx, [ebp+4]
mov	[esp+48h+var_38], edx
mov	ecx, [esp+48h+arg_0]
mov	edx, [esp+48h+var_30]
push	esi
lea	eax, [esp+4Ch+var_34]
push	eax
mov	eax, [ebp+0]
push	ecx
push	edx
push	edi
push	eax
call	sub_10097380
add	esp, 18h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10093DB7
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
mov	[esp+48h+var_1C], 363h
jmp	short loc_10093E26
mov	eax, [esp+48h+var_34]
cmp	eax, ebx
jz	short loc_10093DE6
push	esi
push	eax
call	sub_10095450
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10093DE6
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
jmp	short loc_10093E26
			
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_10093E1C
cmp	[esp+48h+var_38], eax
jnz	short loc_10093E1C
push	esi
push	eax
call	sub_10094CF0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10093E18
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_38], ebx
			
mov	ecx, [esp+48h+arg_8]
mov	edx, [esp+48h+var_34]
mov	[ecx], edx
			
mov	eax, [ebp+4]
cmp	eax, ebx
jz	short loc_10093E58
cmp	[esp+48h+var_38], eax
jnz	short loc_10093E58
push	esi
push	eax
call	sub_10094CF0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10093E58
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
			
push	esi
push	1
lea	ecx, [esp+50h+var_2C]
push	22h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	edx, [esp+48h+arg_C]
push	edx
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
			
mov	eax, offset dword_100AFA58
retn
align 10h
sub	esp, 88h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+88h+var_4], eax
push	ebx
mov	ebx, [esp+8Ch+arg_0]
push	ebp
mov	ebp, ds:PR_snprintf
push	esi
push	edi
mov	[esp+98h+var_88], 0
mov	edi, ebx
mov	esi, offset dword_100BB224
mov	ecx, [esi]
mov	eax, ecx
test	ebx, ebx
jz	short loc_10093EF8
mov	edx, [edi]
cmp	ecx, edx
jbe	short loc_10093EF6
sub	eax, edx
jmp	short loc_10093EF8
xor	eax, eax
			
add	[esp+98h+var_88], eax
cmp	dword_100BAEAC,	0
jz	short loc_10093F24
test	eax, eax
jz	short loc_10093F24
cmp	dword ptr [esi-4], 0
jnz	short loc_10093F24
push	ecx
push	offset aUnknownRefD 
lea	eax, [esp+0A0h+var_84]
push	80h
push	eax
call	ebp 
add	esp, 10h
			
add	esi, 24h
add	edi, 4
cmp	esi, offset dword_100BBAB8
jl	short loc_10093EE4
mov	ecx, [esp+98h+var_4]
mov	eax, [esp+98h+var_88]
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 88h
retn
align 10h
sub	esp, 30h
cmp	dword_100BAEA8,	0
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_initia 
mov	[esp+38h+var_C], 30h
jz	short loc_10093F9F
push	0
push	1
lea	eax, [esp+40h+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
call	ds:PR_NewLock
mov	dword_100BB21C,	eax
test	eax, eax
jnz	short loc_10093FB9
pop	edi
mov	eax, offset dword_100AFA58
pop	esi
add	esp, 30h
retn
push	offset aNss_strict_shu 
call	ds:PR_GetEnv
add	esp, 4
test	eax, eax
jz	short loc_10093FDE
push	offset aPkix	
call	ds:PR_NewLogModule
add	esp, 4
mov	dword_100BAEAC,	eax
mov	ecx, [esp+38h+var_30]
push	ecx
call	sub_10095220
mov	edx, [esp+3Ch+var_30]
push	edx
call	sub_10074520
mov	eax, [esp+40h+var_30]
push	eax
call	sub_100984F0
mov	ecx, [esp+44h+var_30]
push	ecx
call	sub_10090E80
mov	edx, [esp+48h+var_30]
push	edx
call	sub_10091A30
mov	eax, [esp+4Ch+var_30]
push	eax
call	sub_10093530
mov	ecx, [esp+50h+var_30]
push	ecx
call	sub_10077090
mov	edx, [esp+54h+var_30]
push	edx
call	sub_10075020
mov	eax, [esp+58h+var_30]
push	eax
call	sub_10094AB0
mov	ecx, [esp+5Ch+var_30]
push	ecx
call	sub_10096970
mov	edx, [esp+60h+var_30]
push	edx
call	sub_10097880
mov	eax, [esp+64h+var_30]
push	eax
call	sub_1007BD30
mov	ecx, [esp+68h+var_30]
push	ecx
call	sub_10082F10
mov	edx, [esp+6Ch+var_30]
push	edx
call	sub_10086AC0
mov	eax, [esp+70h+var_30]
push	eax
call	sub_10088350
mov	ecx, [esp+74h+var_30]
push	ecx
call	sub_10088C10
mov	edx, [esp+78h+var_30]
add	esp, 40h
push	edx
call	sub_10089FE0
mov	eax, [esp+3Ch+var_30]
push	eax
call	sub_1008C080
mov	ecx, [esp+40h+var_30]
push	ecx
call	sub_1008F450
mov	edx, [esp+44h+var_30]
push	edx
call	sub_100603D0
mov	eax, [esp+48h+var_30]
push	eax
call	sub_100902C0
mov	ecx, [esp+4Ch+var_30]
push	ecx
call	sub_10099B20
mov	edx, [esp+50h+var_30]
push	edx
call	sub_10064450
mov	eax, [esp+54h+var_30]
push	eax
call	sub_10063050
mov	ecx, [esp+58h+var_30]
push	ecx
call	sub_10063740
mov	edx, [esp+5Ch+var_30]
push	edx
call	sub_10067330
mov	eax, [esp+60h+var_30]
push	eax
call	sub_1007B160
mov	ecx, [esp+64h+var_30]
push	ecx
call	sub_10056C40
mov	edx, [esp+68h+var_30]
push	edx
call	sub_100594C0
mov	eax, [esp+6Ch+var_30]
push	eax
call	sub_10054320
mov	ecx, [esp+70h+var_30]
push	ecx
call	sub_10056280
mov	edx, [esp+74h+var_30]
push	edx
call	sub_100790A0
mov	eax, [esp+78h+var_30]
add	esp, 40h
push	eax
call	sub_1007A5E0
mov	ecx, [esp+3Ch+var_30]
push	ecx
call	sub_10083850
mov	edx, [esp+40h+var_30]
push	edx
call	sub_10084FC0
mov	eax, [esp+44h+var_30]
push	eax
call	sub_100844A0
mov	ecx, [esp+48h+var_30]
push	ecx
call	sub_10066600
mov	edx, [esp+4Ch+var_30]
push	edx
call	sub_1005EE70
mov	eax, [esp+50h+var_30]
push	eax
call	sub_100563C0
mov	ecx, [esp+54h+var_30]
push	ecx
call	sub_1005A240
mov	edx, [esp+58h+var_30]
push	edx
call	sub_100999A0
mov	eax, [esp+5Ch+var_30]
push	eax
call	sub_10056DB0
mov	ecx, [esp+60h+var_30]
push	ecx
call	sub_1006BD30
mov	edx, [esp+64h+var_30]
push	edx
call	sub_1005E500
mov	eax, [esp+68h+var_30]
push	eax
call	sub_10057D10
mov	ecx, [esp+6Ch+var_30]
push	ecx
call	sub_1009ED60
mov	edx, [esp+70h+var_30]
push	edx
call	sub_10063BF0
mov	eax, [esp+74h+var_30]
push	eax
call	sub_10094740
mov	ecx, [esp+78h+var_30]
add	esp, 40h
push	ecx
call	sub_1008A780
mov	edx, [esp+3Ch+var_30]
push	edx
call	sub_10098AD0
mov	eax, [esp+40h+var_30]
push	eax
call	sub_100582C0
mov	ecx, [esp+44h+var_30]
push	ecx
call	sub_10090410
mov	edx, [esp+48h+var_30]
push	edx
call	sub_1008D260
mov	eax, [esp+4Ch+var_30]
push	eax
call	sub_1008DB40
mov	ecx, [esp+50h+var_30]
push	ecx
call	sub_1009A7F0
mov	edx, [esp+54h+var_30]
push	edx
call	sub_10069330
mov	eax, [esp+58h+var_30]
push	eax
call	sub_10057950
mov	ecx, [esp+5Ch+var_30]
push	ecx
call	sub_10086C10
mov	esi, [esp+60h+arg_8]
add	esp, 28h
test	esi, esi
jz	short loc_1009426B
mov	eax, [esp+38h+arg_4]
lea	edx, [esp+38h+var_30]
push	edx
push	0
push	eax
push	0
call	sub_1009C050
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10094265
mov	ecx, [eax+4]
mov	[esp+38h+var_10], ecx
mov	[esp+38h+var_1C], 2B0h
jmp	short loc_10094275
mov	edx, [esp+38h+var_30]
mov	[esi], edx
mov	dword_100BAEA8,	1
mov	eax, [esp+38h+var_30]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
cmp	dword_100BAEA8,	0
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_shutdo 
mov	[esp+34h+var_C], 30h
jnz	short loc_100942EA
mov	eax, [esp+34h+arg_0]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edx, dword_100BB21C
push	edx
call	ds:PR_DestroyLock
mov	esi, [esp+38h+arg_0]
push	esi
call	sub_10099C50
push	0
call	sub_10093EB0
push	offset aNss_strict_shu 
call	ds:PR_GetEnv
add	esp, 10h
test	esi, esi
jz	short loc_10094323
push	esi
call	sub_1009C180
add	esp, 4
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	30h
push	eax
mov	dword_100BAEA8,	0
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_4]
mov	[esp+34h+var_2C], offset aPkix_pl_malloc 
mov	[esp+34h+var_C], 2Dh
test	edi, edi
jnz	short loc_100943A9
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	ecx, [esp+34h+arg_0]
mov	esi, [esp+34h+arg_8]
test	ecx, ecx
jnz	short loc_100943BD
mov	dword ptr [edi], 0
jmp	short loc_100943D4
test	esi, esi
jz	short loc_100943EC
mov	eax, [esi+8]
test	eax, eax
jz	short loc_100943EC
push	ecx
push	eax
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi], eax
			
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	2Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
push	ecx
call	ds:PR_Malloc
add	esp, 4
test	eax, eax
jnz	short loc_100943D2
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10094418
mov	edx, [esp+34h+var_C]
push	esi
push	2
push	edx
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+34h+var_18], 1
call	sub_10093EA0
mov	[esp+34h+var_28], eax
jmp	short loc_100943D4
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_8]
mov	[esp+34h+var_2C], offset aPkix_pl_calloc 
mov	[esp+34h+var_C], 2Dh
test	edi, edi
jnz	short loc_10094489
mov	eax, [esp+34h+arg_C]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edx, [esp+34h+arg_0]
mov	esi, [esp+34h+arg_C]
test	edx, edx
jz	short loc_100944F6
mov	ecx, [esp+34h+arg_4]
test	ecx, ecx
jz	short loc_100944F6
test	esi, esi
jz	short loc_100944B6
mov	eax, [esi+8]
test	eax, eax
jz	short loc_100944B6
push	ecx
push	eax
call	PORT_ArenaAlloc_Util
add	esp, 8
mov	[edi], eax
jmp	short loc_100944FC
			
push	ecx
push	edx
call	ds:PR_Calloc
add	esp, 8
test	eax, eax
jnz	short loc_100944B2
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100944E3
mov	edx, [esp+34h+var_C]
push	esi
push	2
push	edx
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+34h+var_18], 1
call	sub_10093EA0
mov	[esp+34h+var_28], eax
jmp	short loc_100944FC
			
mov	dword ptr [edi], 0
			
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	2Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_pl_reallo 
mov	[esp+38h+var_C], 2Dh
test	ebp, ebp
jnz	short loc_1009457B
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
push	ebx
mov	ebx, [esp+3Ch+arg_C]
test	ebx, ebx
jz	short loc_100945B3
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_100945B3
mov	edi, [esp+3Ch+Size]
push	edi
push	eax
call	PORT_ArenaAlloc_Util
mov	esi, eax
add	esp, 8
test	esi, esi
jz	short loc_100945AE
mov	edx, [esp+3Ch+Src]
push	edi		
push	edx		
push	esi		
call	memcpy
add	esp, 0Ch
mov	[ebp+0], esi
jmp	short loc_10094607
			
mov	esi, [esp+3Ch+Size]
mov	eax, [esp+3Ch+Src]
push	esi
push	eax
call	ds:PR_Realloc
add	esp, 8
test	eax, eax
jnz	short loc_10094604
test	esi, esi
jnz	short loc_100945D3
mov	[ebp+0], eax
jmp	short loc_10094607
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_100945F1
mov	ecx, [esp+3Ch+var_C]
push	ebx
push	2
push	ecx
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
call	sub_10093EA0
mov	[esp+3Ch+var_28], eax
jmp	short loc_10094607
mov	[ebp+0], eax
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	2Dh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_4]
mov	[esp+34h+var_2C], offset aPkix_pl_free 
mov	[esp+34h+var_C], 2Dh
test	esi, esi
jz	short loc_10094663
cmp	dword ptr [esi+8], 0
jnz	short loc_10094671
mov	eax, [esp+34h+arg_0]
push	eax
call	ds:PR_Free
add	esp, 4
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	2Dh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_moni_3 
mov	[esp+34h+var_C], 2Eh
test	esi, esi
jnz	short loc_100946E9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	27h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10094712
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2FDh
jmp	short loc_10094724
mov	eax, [esi]
push	eax
call	ds:PR_DestroyMonitor
add	esp, 4
mov	dword ptr [esi], 0
push	edi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	2Eh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB79C
push	1
mov	[esp+60h+var_50], offset aMonitorlock 
mov	[esp+60h+var_48], 4
mov	[esp+60h+var_44], offset sub_10094690
rep movsd
lea	ecx, [esp+60h+var_2C]
push	2Eh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_monito 
mov	[esp+68h+var_C], 2Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_moni_0 
mov	[esp+38h+var_C], 2Eh
test	edi, edi
jnz	short loc_10094831
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	esi, [esp+38h+arg_4]
push	esi
lea	edx, [esp+3Ch+var_30]
push	edx
push	4
push	27h
call	sub_100952A0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10094860
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 19Ch
jmp	short loc_100948DB
call	ds:PR_NewMonitor
mov	ecx, [esp+38h+var_30]
mov	[ecx], eax
mov	eax, [esp+38h+var_30]
cmp	dword ptr [eax], 0
jnz	short loc_100948D9
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1009489E
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	eax, dword_100BAE9C
mov	[esp+38h+var_30], 0
test	eax, eax
jz	short loc_100948C7
mov	ecx, [esp+38h+var_C]
push	esi
push	2
push	ecx
push	0
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
mov	[esp+38h+var_1C], 338h
jmp	short loc_100948DB
mov	[edi], eax
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	2Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_moni_1 
mov	[esp+30h+var_C], 2Eh
pop	esi
test	eax, eax
jnz	short loc_10094959
mov	eax, [esp+2Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+34h+var_2C]
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [eax]
push	edx
call	ds:PR_EnterMonitor
mov	eax, [esp+30h+arg_4]
push	eax
push	0
lea	ecx, [esp+38h+var_2C]
push	2Eh
push	ecx
call	sub_100781E0
add	esp, 14h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_moni_2 
mov	[esp+30h+var_C], 2Eh
pop	esi
test	eax, eax
jnz	short loc_100949D9
mov	eax, [esp+2Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+34h+var_2C]
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [eax]
push	edx
call	ds:PR_ExitMonitor
mov	eax, [esp+30h+arg_4]
push	eax
push	0
lea	ecx, [esp+38h+var_2C]
push	2Eh
push	ecx
call	sub_100781E0
add	esp, 14h
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_mute_3 
mov	[esp+34h+var_C], 2Fh
test	esi, esi
jnz	short loc_10094A59
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	28h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10094A82
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2FEh
jmp	short loc_10094A94
mov	eax, [esi]
push	eax
call	ds:PR_DestroyLock
add	esp, 4
mov	dword ptr [esi], 0
push	edi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	2Fh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB7C0
push	1
mov	[esp+60h+var_50], offset aMutex	
mov	[esp+60h+var_48], 4
mov	[esp+60h+var_44], offset sub_10094A00
rep movsd
lea	ecx, [esp+60h+var_2C]
push	2Fh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_mutex_ 
mov	[esp+68h+var_C], 2Fh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_mute_0 
mov	[esp+38h+var_C], 2Fh
test	edi, edi
jnz	short loc_10094BA1
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	esi, [esp+38h+arg_4]
push	esi
lea	edx, [esp+3Ch+var_30]
push	edx
push	4
push	28h
call	sub_100952A0
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10094BD0
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 13Dh
jmp	short loc_10094C49
call	ds:PR_NewLock
mov	ecx, [esp+38h+var_30]
mov	[ecx], eax
mov	eax, [esp+38h+var_30]
cmp	dword ptr [eax], 0
jnz	short loc_10094C47
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_10094C0E
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
mov	eax, dword_100BAE9C
mov	[esp+38h+var_30], 0
test	eax, eax
jz	short loc_10094C34
mov	ecx, [esp+38h+var_C]
push	esi
push	2
push	ecx
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_18], 1
call	sub_10093EA0
mov	[esp+38h+var_28], eax
jmp	short loc_10094C49
mov	[edi], eax
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	2Fh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_mute_1 
mov	[esp+30h+var_C], 2Fh
pop	esi
test	eax, eax
jnz	short loc_10094CC9
mov	eax, [esp+2Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+34h+var_2C]
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	edx, [eax]
push	edx
call	ds:PR_Lock
mov	eax, [esp+30h+arg_4]
push	eax
push	1
lea	ecx, [esp+38h+var_2C]
push	2Fh
push	ecx
call	sub_100781E0
add	esp, 14h
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_mute_2 
mov	[esp+34h+var_C], 2Fh
test	eax, eax
jnz	short loc_10094D49
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edx, [eax]
push	edx
call	ds:PR_Unlock
mov	esi, [esp+38h+arg_4]
add	esp, 4
cmp	eax, 0FFFFFFFFh
jnz	short loc_10094D97
mov	eax, dword_100BAE9C
mov	[esp+34h+var_18], 1
mov	[esp+34h+var_1C], 1B8h
mov	[esp+34h+var_10], 1Fh
test	eax, eax
jz	short loc_10094D97
mov	ecx, [esp+34h+var_C]
push	esi
push	1
push	ecx
push	0
push	1B8h
push	eax
call	sub_10074820
add	esp, 18h
			
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	2Fh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_obje_0 
mov	[esp+30h+var_C], 30h
pop	esi
test	eax, eax
jz	loc_10094E81
test	edx, edx
jz	loc_10094E81
add	eax, 0FFFFFFE0h
cmp	dword ptr [eax+8], 3Dh
jb	short loc_10094E16
push	ebx
push	1
lea	eax, [esp+34h+var_2C]
push	30h
push	eax
mov	[esp+3Ch+var_1C], 403h
mov	[esp+3Ch+var_10], 1Fh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
cmp	dword ptr [eax], 0EEFACADEh
jnz	short loc_10094E3F
cmp	dword ptr [eax+4], 0FEEDC0FFh
jnz	short loc_10094E3F
push	ebx
push	1
mov	[edx], eax
lea	eax, [esp+34h+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10094E5A
push	ebx
push	2
push	30h
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+2Ch+var_18], 1
call	sub_10093EA0
push	ebx
push	1
mov	[esp+34h+var_28], eax
lea	eax, [esp+34h+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
push	ebx
push	1
lea	ecx, [esp+34h+var_2C]
push	1Fh
push	ecx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ebx, ecx
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], ebp
mov	[esp+40h+var_2C], offset aPkix_pl_obje_5 
mov	[esp+40h+var_C], 30h
cmp	eax, ebp
jnz	short loc_10094F0D
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
lea	edx, [esp+40h+var_30]
call	sub_10094DB0
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10094F32
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 394h
jmp	loc_10094FE8
mov	esi, [esp+40h+var_30]
cmp	[esi+0Ch], ebp
jz	short loc_10094F79
mov	eax, dword_100BAE9C
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 315h
mov	[esp+40h+var_10], 1Fh
cmp	eax, ebp
jz	loc_10094FE8
mov	edx, [esp+40h+var_C]
push	ebx
push	1
push	edx
push	ebp
push	315h
push	eax
call	sub_10074820
add	esp, 18h
jmp	short loc_10094FE8
cmp	[esi+14h], ebp
jz	short loc_10094FA9
mov	eax, [esi+14h]
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_10094FA6
push	ebx
push	eax
lea	ecx, [esp+48h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esi+14h], ebp
mov	edx, [esi+10h]
push	edx
call	ds:PR_DestroyLock
mov	[esi+10h], ebp
push	ebx
mov	dword ptr [esi], 0DEADBEEFh
push	esi
mov	dword ptr [esi+4], 0BAADF00Dh
call	sub_10094630
add	esp, 0Ch
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_10094FE8
push	ebx
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
			
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_obj_15 
mov	[esp+34h+var_C], 30h
test	esi, esi
jz	short loc_10095072
mov	ecx, [esp+34h+arg_4]
test	ecx, ecx
jz	short loc_10095072
mov	eax, [esp+34h+arg_8]
test	eax, eax
jz	short loc_10095072
xor	edx, edx
cmp	esi, ecx
setz	dl
lea	ecx, [esp+34h+var_2C]
mov	[eax], edx
mov	eax, [esp+34h+arg_C]
push	eax
push	1
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	edx, [esp+34h+arg_C]
push	edx
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Fh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_obj_16 
mov	[esp+30h+var_C], 30h
pop	esi
test	ecx, ecx
jz	short loc_100950F3
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_100950F3
mov	[eax], ecx
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+34h+var_2C]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	edx, [esp+2Ch+arg_8]
push	edx
push	1
lea	eax, [esp+34h+var_2C]
push	1Fh
push	eax
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
			
sub	esp, 54h
mov	eax, [esp+54h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_2C]
rep movsd
mov	[esp+60h+var_54], 0
mov	[esp+60h+var_2C], offset aPkix_pl_object 
mov	[esp+60h+var_C], 30h
test	eax, eax
jz	loc_100951EA
mov	ebp, [esp+60h+arg_4]
test	ebp, ebp
jz	loc_100951EA
push	ebx
mov	ebx, [esp+64h+arg_8]
lea	edx, [esp+64h+var_54]
call	sub_10094DB0
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_1009518D
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 394h
jmp	short loc_100951D0
mov	ecx, [esp+64h+var_54]
mov	eax, [ecx+8]
cmp	eax, 3Dh
jb	short loc_100951AB
mov	[esp+64h+var_1C], 403h
mov	[esp+64h+var_10], 1Fh
jmp	short loc_100951D0
lea	esi, [eax+eax*8]
lea	esi, dword_100BB220[esi*4]
mov	ecx, 9
lea	edi, [esp+64h+var_50]
rep movsd
mov	eax, [esp+64h+var_40]
test	eax, eax
jnz	short loc_100951CD
mov	eax, offset sub_10095010
mov	[ebp+0], eax
			
push	ebx
push	1
lea	edx, [esp+6Ch+var_2C]
push	30h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
			
mov	eax, [esp+60h+arg_8]
push	eax
push	1
lea	ecx, [esp+68h+var_2C]
push	1Fh
push	ecx
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_44], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB7E4
push	1
mov	[esp+60h+var_50], offset aObject 
mov	[esp+60h+var_48], 20h
rep movsd
lea	ecx, [esp+60h+var_2C]
push	1Eh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_obje_1 
mov	[esp+68h+var_C], 1Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 30h
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_pl_obje_2 
mov	[esp+3Ch+var_C], 30h
cmp	[esp+3Ch+arg_8], ebx
jnz	short loc_100952FF
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_C]
cmp	esi, 3Dh
jl	short loc_10095321
mov	[esp+3Ch+var_1C], 403h
mov	[esp+3Ch+var_10], 1Fh
jmp	loc_10095428
mov	eax, [esp+3Ch+arg_4]
push	ebp
push	edi
lea	edx, [esp+44h+var_30]
push	edx
add	eax, 20h
lea	ebp, [esi+esi*8]
push	eax
lea	ebp, dword_100BB220[ebp*4]
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1009535E
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 299h
jmp	loc_100953F6
mov	edx, [esp+40h+var_30]
mov	dword ptr [edx], 0EEFACADEh
mov	eax, [esp+40h+var_30]
mov	dword ptr [eax+4], 0FEEDC0FFh
mov	ecx, [esp+40h+var_30]
mov	[ecx+8], esi
mov	edx, [esp+40h+var_30]
mov	esi, 1
mov	[edx+0Ch], esi
mov	eax, [esp+40h+var_30]
mov	[eax+14h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+18h], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+1Ch], ebx
call	ds:PR_NewLock
mov	ecx, [esp+40h+var_30]
mov	[ecx+10h], eax
mov	eax, [esp+40h+var_30]
cmp	[eax+10h], ebx
jnz	short loc_100953DC
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_100953CD
mov	edx, [esp+40h+var_C]
push	edi
push	2
push	edx
push	ebx
push	ebx
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], esi
call	sub_10093EA0
mov	[esp+40h+var_28], eax
jmp	short loc_100953F6
mov	ecx, [esp+40h+arg_8]
add	eax, 20h
add	ebp, 4
push	ebp
mov	[ecx], eax
mov	[esp+44h+var_30], ebx
call	ds:PR_AtomicIncrement
add	esp, 4
			
mov	eax, [esp+40h+var_30]
pop	ebp
cmp	eax, ebx
jz	short loc_10095428
push	edi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, ebx
jz	short loc_10095424
push	edi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_30], ebx
			
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 5Ch
push	ebx
mov	ebx, [esp+60h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+68h+var_58]
rep movsd
mov	[esp+68h+var_5C], 0
mov	[esp+68h+var_58], offset aPkix_pl_obje_3 
mov	[esp+68h+var_38], 30h
test	ebx, ebx
jnz	short loc_100954B3
mov	eax, [esp+68h+arg_4]
push	eax
push	1
lea	ecx, [esp+70h+var_58]
push	1Fh
push	ecx
mov	[esp+78h+var_44], 1
mov	[esp+78h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 5Ch
retn
push	ebp
mov	ebp, [esp+6Ch+arg_4]
test	ebp, ebp
jz	short loc_100954C6
cmp	dword ptr [ebp+8], 0
jnz	loc_1009557A
call	sub_10093EA0
cmp	ebx, eax
jz	loc_1009557A
cmp	dword ptr [ebx-18h], 3Dh
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+6Ch+var_2C]
lea	eax, [ebx-20h]
rep movsd
mov	[esp+6Ch+var_2C], offset aPkix_pl_obje_0 
mov	[esp+6Ch+var_C], 30h
jb	short loc_1009550E
mov	[esp+6Ch+var_1C], 403h
mov	[esp+6Ch+var_10], 1Fh
jmp	short loc_10095551
cmp	dword ptr [eax], 0EEFACADEh
jnz	short loc_10095525
cmp	dword ptr [eax+4], 0FEEDC0FFh
jnz	short loc_10095525
mov	[esp+6Ch+var_5C], eax
jmp	short loc_10095551
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10095540
push	ebp
push	2
push	30h
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+6Ch+var_18], 1
call	sub_10093EA0
mov	[esp+6Ch+var_28], eax
			
push	ebp
push	1
lea	edx, [esp+74h+var_2C]
push	30h
push	edx
call	sub_100781E0
add	esp, 10h
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	short loc_10095594
mov	eax, [eax+4]
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_48], 394h
			
push	ebp
push	1
lea	ecx, [esp+74h+var_58]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 5Ch
retn
mov	ecx, [esp+6Ch+var_5C]
add	ecx, 0Ch
push	ecx
call	ds:PR_AtomicIncrement
add	esp, 4
cmp	eax, 1
jg	short loc_1009557A
mov	edx, [esp+6Ch+var_3C]
push	ebp
push	edx
push	318h
lea	eax, [esp+78h+var_58]
push	1Fh
push	eax
call	sub_100780E0
add	esp, 14h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 5Ch
retn
align 10h
			
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_obje_4 
mov	[esp+38h+var_C], 30h
test	edi, edi
jnz	short loc_10095631
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
push	ebx
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	short loc_10095644
cmp	dword ptr [ebx+8], 0
jnz	loc_10095736
call	sub_10093EA0
cmp	edi, eax
jz	loc_10095736
lea	edx, [esp+3Ch+var_30]
mov	eax, edi
call	sub_10094DB0
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10095678
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 394h
jmp	loc_10095736
mov	esi, [esp+3Ch+var_30]
lea	eax, [esi+0Ch]
push	eax
call	ds:PR_AtomicDecrement
add	esp, 4
test	eax, eax
jnz	short loc_10095705
mov	eax, [esi+8]
cmp	eax, 3Dh
jb	short loc_100956AA
mov	[esp+3Ch+var_1C], 403h
mov	[esp+3Ch+var_10], 1Fh
jmp	loc_10095736
lea	esi, [eax+eax*8]
mov	eax, dword_100BB22C[esi*4]
lea	esi, dword_100BB220[esi*4]
test	eax, eax
jz	short loc_100956ED
push	ebx
push	edi
call	eax 
add	esp, 8
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100956ED
push	ebx
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
mov	[esp+48h+var_10], 1Fh
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_28], 0
			
add	esi, 4
push	esi
call	ds:PR_AtomicDecrement
add	esp, 4
mov	ecx, ebx
mov	eax, edi
call	sub_10094EB0
jmp	short loc_10095732
jns	short loc_10095736
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10095725
mov	edx, [esp+3Ch+var_C]
push	ebx
push	2
push	edx
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
call	sub_10093EA0
mov	[esp+3Ch+var_28], eax
			
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
			
sub	esp, 58h
mov	eax, [esp+58h+arg_0]
push	ebp
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	[esp+64h+var_58], edx
mov	[esp+64h+var_54], edx
mov	[esp+64h+var_2C], offset aPkix_pl_obje_6 
mov	[esp+64h+var_C], 30h
cmp	eax, edx
jz	loc_10095893
mov	ebp, [esp+64h+arg_4]
cmp	ebp, edx
jz	loc_10095893
mov	esi, [esp+64h+arg_8]
cmp	esi, edx
jz	loc_10095893
push	ebx
mov	ebx, [esp+68h+arg_C]
lea	edx, [esp+68h+var_58]
call	sub_10094DB0
mov	[esp+68h+var_28], eax
test	eax, eax
jz	short loc_100957CA
mov	eax, [eax+4]
mov	[esp+68h+var_1C], 394h
jmp	loc_10095875
lea	edx, [esp+68h+var_54]
mov	eax, ebp
call	sub_10094DB0
mov	[esp+68h+var_28], eax
test	eax, eax
jz	short loc_100957F1
mov	ecx, [eax+4]
mov	[esp+68h+var_10], ecx
mov	[esp+68h+var_1C], 394h
jmp	loc_10095879
mov	eax, [esp+68h+var_58]
cmp	dword ptr [eax+1Ch], 0
jz	short loc_10095815
mov	ecx, [esp+68h+var_54]
cmp	dword ptr [ecx+1Ch], 0
jz	short loc_10095815
mov	edx, [eax+18h]
cmp	edx, [ecx+18h]
jz	short loc_10095815
mov	dword ptr [esi], 0
jmp	short loc_10095879
			
mov	eax, [eax+8]
cmp	eax, 3Dh
jb	short loc_1009582F
mov	[esp+68h+var_1C], 403h
mov	[esp+68h+var_10], 1Fh
jmp	short loc_10095879
lea	esi, [eax+eax*8]
lea	esi, dword_100BB220[esi*4]
mov	ecx, 9
lea	edi, [esp+68h+var_50]
rep movsd
mov	eax, [esp+68h+var_40]
test	eax, eax
jnz	short loc_10095851
mov	eax, offset sub_10095010
mov	ecx, [esp+68h+arg_8]
mov	edx, [esp+68h+arg_0]
push	ebx
push	ecx
push	ebp
push	edx
call	eax
add	esp, 10h
mov	[esp+68h+var_28], eax
test	eax, eax
jz	short loc_10095879
mov	eax, [eax+4]
mov	[esp+68h+var_1C], 314h
mov	[esp+68h+var_10], eax
			
push	ebx
push	1
lea	ecx, [esp+70h+var_2C]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
			
mov	edx, [esp+64h+arg_C]
push	edx
push	1
lea	eax, [esp+6Ch+var_2C]
push	1Fh
push	eax
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
			
sub	esp, 54h
push	ebp
mov	ebp, [esp+58h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_2C]
rep movsd
mov	[esp+60h+var_54], 0
mov	[esp+60h+var_2C], offset aPkix_pl_obje_7 
mov	[esp+60h+var_C], 30h
test	ebp, ebp
jz	loc_100959E4
cmp	[esp+60h+arg_4], 0
jz	loc_100959E4
push	ebx
mov	ebx, [esp+64h+arg_8]
lea	edx, [esp+64h+var_54]
mov	eax, ebp
call	sub_10094DB0
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10095931
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 394h
jmp	loc_100959CA
mov	ecx, [esp+64h+var_54]
mov	eax, [ecx+8]
cmp	eax, 3Dh
jb	short loc_1009594F
mov	[esp+64h+var_1C], 403h
mov	[esp+64h+var_10], 1Fh
jmp	short loc_100959CA
lea	esi, [eax+eax*8]
lea	esi, dword_100BB220[esi*4]
mov	ecx, 9
lea	edi, [esp+64h+var_50]
rep movsd
mov	eax, [esp+64h+var_30]
test	eax, eax
jnz	short loc_100959A7
mov	eax, dword_100BAE9C
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 3FCh
mov	[esp+64h+var_10], 1Fh
test	eax, eax
jz	short loc_100959CA
mov	edx, [esp+64h+var_C]
push	ebx
push	1
push	edx
push	0
push	3FCh
push	eax
call	sub_10074820
add	esp, 18h
jmp	short loc_100959CA
mov	ecx, [esp+64h+arg_4]
push	ebx
push	ecx
push	ebp
call	eax
add	esp, 0Ch
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_100959CA
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 314h
			
push	ebx
push	1
lea	eax, [esp+6Ch+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
			
mov	ecx, [esp+60h+arg_8]
push	ecx
push	1
lea	edx, [esp+68h+var_2C]
push	1Fh
push	edx
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
align 10h
			
sub	esp, 54h
push	ebp
mov	ebp, [esp+58h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_2C]
rep movsd
mov	[esp+60h+var_54], 0
mov	[esp+60h+var_2C], offset aPkix_pl_obje_8 
mov	[esp+60h+var_C], 30h
test	ebp, ebp
jz	loc_10095B8E
cmp	[esp+60h+arg_4], 0
jz	loc_10095B8E
push	ebx
mov	ebx, [esp+64h+arg_8]
lea	edx, [esp+64h+var_54]
mov	eax, ebp
call	sub_10094DB0
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10095A91
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 394h
jmp	loc_10095B74
mov	eax, [esp+64h+var_54]
cmp	dword ptr [eax+1Ch], 0
jnz	loc_10095B67
mov	eax, [eax+8]
cmp	eax, 3Dh
jb	short loc_10095ABC
mov	[esp+64h+var_1C], 403h
mov	[esp+64h+var_10], 1Fh
jmp	loc_10095B74
lea	esi, [eax+eax*8]
lea	esi, dword_100BB220[esi*4]
mov	ecx, 9
lea	edi, [esp+64h+var_50]
rep movsd
mov	eax, [esp+64h+var_3C]
test	eax, eax
jnz	short loc_10095ADE
mov	eax, offset sub_100950A0
push	ebx
lea	ecx, [esp+68h+arg_0]
push	ecx
push	ebp
call	eax
add	esp, 0Ch
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10095B03
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 314h
jmp	short loc_10095B74
mov	esi, [esp+64h+var_54]
cmp	dword ptr [esi+1Ch], 0
jnz	short loc_10095B67
push	ebx
push	ebp
call	sub_10091E10
add	esp, 8
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10095B30
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 1B5h
jmp	short loc_10095B74
cmp	dword ptr [esi+1Ch], 0
jnz	short loc_10095B44
mov	ecx, [esp+64h+arg_0]
mov	[esi+18h], ecx
mov	dword ptr [esi+1Ch], 1
push	ebx
push	ebp
call	sub_10091EA0
add	esp, 8
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10095B67
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 1B9h
jmp	short loc_10095B74
			
mov	eax, [esp+64h+var_54]
mov	ecx, [eax+18h]
mov	edx, [esp+64h+arg_4]
mov	[edx], ecx
			
push	ebx
push	1
lea	eax, [esp+6Ch+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
			
mov	ecx, [esp+60h+arg_8]
push	ecx
push	1
lea	edx, [esp+68h+var_2C]
push	1Fh
push	edx
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
align 10h
			
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
xor	ebp, ebp
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_2C], offset aPkix_pl_obje_9 
mov	[esp+3Ch+var_C], 30h
cmp	edi, ebp
jnz	short loc_10095C21
mov	eax, [esp+3Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
push	ebx
mov	ebx, [esp+40h+arg_4]
lea	edx, [esp+40h+var_30]
mov	eax, edi
call	sub_10094DB0
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10095C4A
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 394h
jmp	short loc_10095CC4
push	ebx
push	edi
call	sub_10091E10
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10095C69
mov	eax, [eax+4]
mov	[esp+40h+var_1C], 1B5h
jmp	short loc_10095CC0
mov	esi, [esp+40h+var_30]
mov	[esi+18h], ebp
mov	[esi+1Ch], ebp
cmp	[esi+14h], ebp
jz	short loc_10095CA3
mov	ecx, [esi+14h]
push	ebx
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebp
jz	short loc_10095CA0
push	ebx
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebp
mov	[esi+14h], ebp
push	ebx
push	edi
call	sub_10091EA0
add	esp, 8
mov	[esp+40h+var_28], eax
cmp	eax, ebp
jz	short loc_10095CC4
mov	eax, [eax+4]
mov	[esp+40h+var_1C], 1B9h
mov	[esp+40h+var_10], eax
			
push	ebx
push	1
lea	ecx, [esp+48h+var_2C]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
			
sub	esp, 54h
push	ebp
mov	ebp, [esp+58h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_2C]
rep movsd
mov	[esp+60h+var_54], 0
mov	[esp+60h+var_2C], offset aPkix_pl_obj_10 
mov	[esp+60h+var_C], 30h
test	ebp, ebp
jz	loc_10095E34
mov	esi, [esp+60h+arg_4]
test	esi, esi
jz	loc_10095E34
cmp	[esp+60h+arg_8], 0
jz	loc_10095E34
push	ebx
mov	ebx, [esp+64h+arg_C]
lea	edx, [esp+64h+var_54]
mov	eax, ebp
call	sub_10094DB0
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10095D5D
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 394h
jmp	loc_10095E1A
lea	edx, [esp+64h+arg_0]
mov	eax, esi
call	sub_10094DB0
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10095D84
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 394h
jmp	loc_10095E1A
mov	edx, [esp+64h+var_54]
mov	eax, [edx+8]
cmp	eax, 3Dh
jb	short loc_10095DA2
mov	[esp+64h+var_1C], 403h
mov	[esp+64h+var_10], 1Fh
jmp	short loc_10095E1A
lea	esi, [eax+eax*8]
lea	esi, dword_100BB220[esi*4]
mov	ecx, 9
lea	edi, [esp+64h+var_50]
rep movsd
mov	eax, [esp+64h+var_34]
test	eax, eax
jnz	short loc_10095DF2
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10095DE0
mov	ecx, [esp+64h+var_C]
push	ebx
push	2
push	ecx
push	0
push	3FBh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 3FBh
jmp	short loc_10095E1A
mov	edx, [esp+64h+arg_8]
mov	ecx, [esp+64h+arg_4]
push	ebx
push	edx
push	ecx
push	ebp
call	eax
add	esp, 10h
mov	[esp+64h+var_28], eax
test	eax, eax
jz	short loc_10095E1A
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 314h
			
push	ebx
push	1
lea	eax, [esp+6Ch+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
			
mov	ecx, [esp+60h+arg_C]
push	ecx
push	1
lea	edx, [esp+68h+var_2C]
push	1Fh
push	edx
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_obj_11 
mov	[esp+34h+var_C], 30h
test	eax, eax
jnz	short loc_10095EC9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	eax
call	sub_10091E10
add	esp, 8
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10095EEE
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 293h
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_obj_12 
mov	[esp+34h+var_C], 30h
test	eax, eax
jnz	short loc_10095F69
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	eax
call	sub_10091EA0
add	esp, 8
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10095F8E
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 405h
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 58h
mov	eax, [esp+58h+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_58]
xor	ebp, ebp
rep movsd
mov	[esp+64h+var_58], offset aPkix_pl_obj_13 
mov	[esp+64h+var_38], 30h
test	eax, eax
jz	loc_100960D1
cmp	[esp+64h+arg_4], ebp
jz	loc_100960D1
cmp	dword ptr [eax-18h], 3Dh
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	esi, [esp+64h+arg_8]
mov	[esp+64h+var_2C], offset aPkix_pl_obje_0 
mov	[esp+64h+var_C], 30h
jb	short loc_1009602A
mov	[esp+64h+var_1C], 403h
mov	[esp+64h+var_10], 1Fh
jmp	short loc_1009606D
cmp	dword ptr [eax-20h], 0EEFACADEh
jnz	short loc_10096041
cmp	dword ptr [eax-1Ch], 0FEEDC0FFh
jnz	short loc_10096041
lea	ebp, [eax-20h]
jmp	short loc_1009606D
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009605C
push	esi
push	2
push	30h
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+64h+var_18], 1
call	sub_10093EA0
mov	[esp+64h+var_28], eax
			
push	esi
push	1
lea	eax, [esp+6Ch+var_2C]
push	30h
push	eax
call	sub_100781E0
add	esp, 10h
mov	[esp+64h+var_54], eax
test	eax, eax
jz	short loc_100960AF
mov	ecx, [eax+4]
push	esi
push	1
mov	[esp+6Ch+var_3C], ecx
lea	ecx, [esp+6Ch+var_58]
push	30h
push	ecx
mov	[esp+74h+var_48], 394h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
mov	edx, [ebp+8]
mov	eax, [esp+64h+arg_4]
push	esi
push	1
lea	ecx, [esp+6Ch+var_58]
push	30h
push	ecx
mov	[eax], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
			
mov	edx, [esp+64h+arg_8]
push	edx
push	1
lea	eax, [esp+6Ch+var_58]
push	1Fh
push	eax
mov	[esp+74h+var_44], 1
mov	[esp+74h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
align 10h
sub	esp, 34h
push	ebx
mov	ebx, [esp+38h+arg_0]
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_34], ebp
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_pl_obj_17 
mov	[esp+44h+var_C], 30h
cmp	ebx, ebp
jz	loc_1009629A
cmp	[esp+44h+arg_4], ebp
jz	loc_1009629A
mov	esi, [esp+44h+arg_8]
push	esi
lea	eax, [esp+48h+arg_0]
push	eax
push	ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_10096172
mov	ecx, [eax+4]
mov	[esp+44h+var_1C], 2CEh
jmp	loc_1009621A
mov	eax, [esp+44h+arg_0]
cmp	eax, 3Dh
jb	short loc_10096190
mov	[esp+44h+var_1C], 403h
mov	[esp+44h+var_10], 1Fh
jmp	loc_1009621E
lea	edx, [eax+eax*8]
mov	edi, dword_100BB220[edx*4]
push	esi		
lea	eax, [esp+48h+var_34]
push	eax		
push	ebp		
push	offset aS@addressX 
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100961C4
mov	ecx, [eax+4]
mov	[esp+44h+var_1C], 3CFh
jmp	short loc_1009621A
push	esi		
lea	edx, [esp+48h+var_30]
push	edx		
push	ebp		
push	edi		
push	ebp		
call	sub_10097D90
add	esp, 14h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_100961EE
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 3CFh
jmp	short loc_1009621E
mov	ecx, [esp+44h+var_30]
mov	edx, [esp+44h+var_34]
mov	eax, [esp+44h+arg_4]
push	ebx
push	ecx
push	edx
push	esi
push	eax
call	sub_10098590
add	esp, 14h
mov	[esp+44h+var_28], eax
cmp	eax, ebp
jz	short loc_1009621E
mov	ecx, [eax+4]
mov	[esp+44h+var_1C], 3CDh
			
mov	[esp+44h+var_10], ecx
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebp
jz	short loc_1009624F
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1009624B
push	esi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_34], ebp
mov	eax, [esp+44h+var_30]
cmp	eax, ebp
jz	short loc_10096280
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebp
jz	short loc_1009627C
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebp
mov	[esp+44h+var_30], ebp
push	esi
push	1
lea	ecx, [esp+4Ch+var_2C]
push	30h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
mov	edx, [esp+44h+arg_8]
push	edx
push	1
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
			
sub	esp, 58h
mov	eax, [esp+58h+arg_0]
push	ebp
push	esi
push	edi
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	[esp+64h+var_54], ebp
mov	[esp+64h+var_58], ebp
mov	[esp+64h+var_2C], offset aPkix_pl_obj_14 
mov	[esp+64h+var_C], 30h
cmp	eax, ebp
jz	loc_100964AB
cmp	[esp+64h+arg_4], ebp
jz	loc_100964AB
push	ebx
mov	ebx, [esp+68h+arg_8]
lea	edx, [esp+68h+var_54]
call	sub_10094DB0
cmp	eax, ebp
mov	ebp, [esp+68h+var_54]
mov	[esp+68h+var_28], eax
jz	short loc_10096344
mov	eax, [eax+4]
mov	[esp+68h+var_10], eax
mov	[esp+68h+var_1C], 394h
jmp	loc_10096427
cmp	dword ptr [ebp+14h], 0
jnz	loc_10096417
mov	eax, [ebp+8]
cmp	eax, 3Dh
jb	short loc_1009636B
mov	[esp+68h+var_1C], 403h
mov	[esp+68h+var_10], 1Fh
jmp	loc_10096427
lea	esi, [eax+eax*8]
lea	esi, dword_100BB220[esi*4]
mov	ecx, 9
lea	edi, [esp+68h+var_50]
rep movsd
mov	eax, [esp+68h+var_38]
test	eax, eax
jnz	short loc_1009638D
mov	eax, offset sub_10096100
mov	esi, [esp+68h+arg_0]
push	ebx
lea	ecx, [esp+6Ch+var_58]
push	ecx
push	esi
call	eax
add	esp, 0Ch
mov	[esp+68h+var_28], eax
test	eax, eax
jz	short loc_100963B6
mov	edx, [eax+4]
mov	[esp+68h+var_10], edx
mov	[esp+68h+var_1C], 314h
jmp	short loc_10096427
cmp	dword ptr [ebp+14h], 0
jnz	short loc_10096417
push	ebx
push	esi
call	sub_10091E10
add	esp, 8
mov	[esp+68h+var_28], eax
test	eax, eax
jz	short loc_100963DF
mov	eax, [eax+4]
mov	[esp+68h+var_10], eax
mov	[esp+68h+var_1C], 1B5h
jmp	short loc_10096427
cmp	dword ptr [ebp+14h], 0
jnz	short loc_100963F4
mov	ecx, [esp+68h+var_58]
mov	[ebp+14h], ecx
mov	[esp+68h+var_58], 0
push	ebx
push	esi
call	sub_10091EA0
add	esp, 8
mov	[esp+68h+var_28], eax
test	eax, eax
jz	short loc_10096417
mov	edx, [eax+4]
mov	[esp+68h+var_10], edx
mov	[esp+68h+var_1C], 1B9h
jmp	short loc_10096427
			
mov	eax, [ebp+14h]
mov	ecx, [esp+68h+arg_4]
mov	[ecx], eax
mov	dword ptr [ebp+14h], 0
			
test	ebp, ebp
jz	short loc_1009645E
cmp	dword ptr [ebp+14h], 0
jz	short loc_1009645E
mov	edx, [ebp+14h]
push	ebx
push	edx
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, esi
jz	short loc_1009645B
push	ebx
push	eax
lea	eax, [esp+70h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], esi
mov	[ebp+14h], esi
			
mov	eax, [esp+68h+var_58]
test	eax, eax
jz	short loc_10096491
push	ebx
push	eax
call	sub_100955D0
xor	esi, esi
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, esi
jz	short loc_1009648D
push	ebx
push	eax
lea	ecx, [esp+70h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], esi
mov	[esp+68h+var_58], esi
push	ebx
push	1
lea	edx, [esp+70h+var_2C]
push	30h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
			
mov	eax, [esp+64h+arg_8]
push	eax
push	1
lea	ecx, [esp+6Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
align 10h
sub	esp, 2Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_oid_co 
mov	[esp+38h+var_C], 35h
test	edi, edi
jz	short loc_10096570
mov	esi, [esp+38h+arg_4]
test	esi, esi
jz	short loc_10096570
mov	ebp, [esp+38h+arg_8]
test	ebp, ebp
jz	short loc_10096570
push	ebx
mov	ebx, [esp+3Ch+arg_C]
push	ebx
push	2Eh
push	esi
push	edi
call	sub_100724E0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10096549
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 12h
jmp	short loc_10096556
push	esi
push	edi
call	SECITEM_CompareItem_Util
add	esp, 8
mov	[ebp+0], eax
push	ebx
push	1
lea	ecx, [esp+44h+var_2C]
push	35h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_C]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_oid_de 
mov	[esp+34h+var_C], 35h
test	esi, esi
jnz	short loc_100965F9
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	2Eh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10096622
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2DBh
jmp	short loc_1009662D
push	0
push	esi
call	SECITEM_FreeItem_Util
add	esp, 8
push	edi
push	1
lea	eax, [esp+3Ch+var_2C]
push	35h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_oid_ha 
mov	[esp+38h+var_C], 35h
test	esi, esi
jz	loc_10096710
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_10096710
mov	edi, [esp+38h+arg_8]
push	edi
push	2Eh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_100966CE
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	35h
push	ecx
mov	[esp+48h+var_1C], 2DBh
mov	[esp+48h+var_10], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	ecx, [esi+8]
mov	edx, [esi+4]
push	edi
push	ebx
push	ecx
push	edx
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_100966F7
mov	eax, [eax+4]
mov	[esp+38h+var_1C], 20Ch
mov	[esp+38h+var_10], eax
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	35h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 58h
push	ebx
mov	ebx, [esp+5Ch+arg_0]
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+68h+var_58]
rep movsd
mov	eax, 35h
mov	[esp+68h+var_58], offset aPkix_pl_oid_eq 
mov	[esp+68h+var_38], eax
test	ebx, ebx
jz	loc_1009684B
mov	ebp, [esp+68h+arg_4]
test	ebp, ebp
jz	loc_1009684B
cmp	[esp+68h+arg_8], 0
jz	loc_1009684B
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+68h+var_2C]
rep movsd
mov	esi, [esp+68h+arg_C]
push	esi
push	2Eh
push	ebp
push	ebx
mov	[esp+78h+var_2C], offset aPkix_pl_oid_co 
mov	[esp+78h+var_C], eax
call	sub_100724E0
add	esp, 10h
mov	[esp+68h+var_28], eax
test	eax, eax
jz	short loc_100967D5
mov	eax, [eax+4]
mov	edi, [esp+68h+arg_0]
mov	[esp+68h+var_10], eax
mov	[esp+68h+var_1C], 12h
jmp	short loc_100967E1
push	ebp
push	ebx
call	SECITEM_CompareItem_Util
add	esp, 8
mov	edi, eax
push	esi
push	1
lea	ecx, [esp+70h+var_2C]
push	35h
push	ecx
call	sub_100781E0
add	esp, 10h
mov	[esp+68h+var_54], eax
test	eax, eax
jz	short loc_10096824
mov	edx, [eax+4]
push	esi
push	1
mov	[esp+70h+var_3C], edx
lea	edx, [esp+70h+var_58]
push	35h
push	edx
mov	[esp+78h+var_48], 32Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 58h
retn
mov	ecx, [esp+68h+arg_8]
xor	eax, eax
test	edi, edi
setz	al
push	esi
push	1
lea	edx, [esp+70h+var_58]
push	35h
push	edx
mov	[ecx], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 58h
retn
			
mov	eax, [esp+68h+arg_C]
push	eax
push	1
lea	ecx, [esp+70h+var_58]
push	1Fh
push	ecx
mov	[esp+78h+var_44], 1
mov	[esp+78h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 58h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
xor	ebx, ebx
mov	[esp+3Ch+var_2C], offset aPkix_pl_oid_to 
mov	[esp+3Ch+var_C], 35h
test	esi, esi
jz	loc_10096935
mov	ebp, [esp+3Ch+arg_4]
test	ebp, ebp
jz	short loc_10096935
mov	edi, [esp+3Ch+arg_8]
push	edi
push	2Eh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100968E6
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 2DBh
jmp	short loc_10096914
push	esi
call	CERT_GetOidString
push	edi		
push	ebp		
mov	ebx, eax
push	0		
push	ebx		
push	0		
call	sub_10097D90
add	esp, 18h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10096914
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 3CFh
			
push	ebx
call	ds:PR_smprintf_free
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	35h
push	edx
call	sub_100781E0
add	esp, 14h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	35h
push	ecx
mov	[esp+44h+var_2C], offset aPkix_pl_oid_re 
mov	[esp+44h+var_C], 35h
mov	dword_100BB898,	offset aOid 
mov	dword_100BB8A0,	0Ch
mov	dword_100BB8A4,	offset sub_100965A0
mov	dword_100BB8A8,	offset sub_10096740
mov	dword_100BB8AC,	offset sub_10096650
mov	dword_100BB8B0,	offset sub_10096880
mov	dword_100BB8B4,	offset sub_100964E0
mov	dword_100BB8B8,	offset sub_10072730
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
mov	ebp, [esp+38h+arg_4]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_oid_cr 
mov	[esp+40h+var_C], 35h
cmp	ebp, ebx
jz	loc_10096B1E
mov	edi, [esp+40h+arg_0]
cmp	edi, ebx
jz	loc_10096B1E
mov	esi, [esp+40h+arg_8]
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	0Ch
push	2Eh
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10096ACD
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 141h
mov	eax, [esp+40h+var_30]
cmp	eax, ebx
jz	short loc_10096AB3
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, ebx
jz	short loc_10096AAF
push	esi
push	eax
lea	eax, [esp+48h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], ebx
			
mov	[esp+40h+var_30], ebx
push	esi
push	1
lea	ecx, [esp+48h+var_2C]
push	35h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	edx, [esp+40h+var_30]
push	edi
push	edx
push	ebx
call	SECITEM_CopyItem_Util
add	esp, 0Ch
test	eax, eax
jz	short loc_10096B15
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10096B00
mov	ecx, [esp+40h+var_C]
push	esi
push	2
push	ecx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 338h
jmp	loc_10096A82
mov	edx, [esp+40h+var_30]
mov	[ebp+0], edx
jmp	short loc_10096AAF
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	edi, [esp+34h+arg_4]
mov	[esp+34h+var_2C], offset aPkix_pl_oid__0 
mov	[esp+34h+var_C], 35h
test	edi, edi
jnz	short loc_10096BA9
mov	eax, [esp+34h+arg_8]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edx, [esp+34h+arg_0]
push	edx
call	SECOID_FindOIDByTag_Util
mov	esi, [esp+38h+arg_8]
add	esp, 4
test	eax, eax
jnz	short loc_10096BF1
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10096BDF
mov	ecx, [esp+34h+var_C]
push	esi
push	2
push	ecx
push	0
push	3AAh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+34h+var_18], 1
mov	[esp+34h+var_1C], 3AAh
jmp	short loc_10096C00
push	esi
push	edi
push	eax
call	sub_10096A10
add	esp, 0Ch
mov	[esp+34h+var_28], eax
push	esi
push	1
lea	edx, [esp+3Ch+var_2C]
push	35h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
xor	ebp, ebp
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_30], ebp
mov	[esp+44h+var_2C], offset aPkix_pl_oid_ge 
mov	[esp+44h+var_C], 35h
cmp	[esp+44h+arg_4], ebx
jnz	short loc_10096C87
mov	eax, [esp+44h+arg_8]
push	eax
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
mov	esi, [esp+44h+arg_8]
lea	edx, [esp+44h+var_34]
push	esi
push	edx
call	sub_100755D0
add	esp, 8
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jz	loc_10096D28
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 27Dh
			
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_10096CE5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10096CE1
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
			
mov	[esp+44h+var_34], ebx
cmp	ebp, ebx
jz	short loc_10096D0E
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10096D0E
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
			
push	esi
push	1
lea	edx, [esp+4Ch+var_2C]
push	35h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
mov	edi, [esp+44h+arg_0]
cmp	edi, ebx
jz	short loc_10096DAC
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_10096DAC
add	edi, 4
cmp	[eax+14h], ebx
jz	short loc_10096DA6
mov	ecx, [eax+10h]
cmp	[ecx], bl
jz	short loc_10096DA6
push	esi
lea	edx, [esp+48h+var_30]
push	edx
push	eax
call	sub_10096A10
mov	ebp, [esp+50h+var_30]
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	short loc_10096DBB
mov	eax, [esp+44h+var_34]
push	esi
push	ebp
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	short loc_10096DCF
cmp	ebp, ebx
jz	short loc_10096DA6
push	esi
push	ebp
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10096DA0
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
xor	ebp, ebp
mov	[esp+44h+var_30], ebp
			
mov	eax, [edi]
cmp	eax, ebx
jnz	short loc_10096D36
			
mov	ecx, [esp+44h+var_34]
mov	edx, [esp+44h+arg_4]
mov	[edx], ecx
jmp	loc_10096CE1
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 32Eh
jmp	loc_10096CB4
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 278h
jmp	loc_10096CB4
align 10h
			
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_pl_keycom 
mov	[esp+38h+var_C], 22h
test	eax, eax
jz	short loc_10096E4A
test	ebx, ebx
jz	short loc_10096E4A
test	edx, edx
jz	short loc_10096E4A
mov	eax, [eax]
xor	ecx, ecx
cmp	eax, [ebx]
push	ebp
setz	cl
push	1
push	22h
mov	[edx], ecx
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
push	ebp
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_primha 
mov	[esp+3Ch+var_C], 22h
test	ebp, ebp
jnz	short loc_10096EE3
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_8]
test	esi, esi
jnz	short loc_10096F21
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10096F0C
push	edi
push	2
push	22h
push	esi
push	2BDh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BDh
jmp	loc_10096FC4
push	edi
lea	edx, [esp+40h+var_30]
push	edx
push	8
call	sub_10094350
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10096F4A
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 299h
jmp	short loc_10096FAD
mov	edx, [esp+3Ch+var_30]
mov	[edx+4], esi
mov	eax, [esp+3Ch+var_30]
push	edi
push	eax
lea	ecx, ds:0[esi*4]
push	ecx
call	sub_10094350
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10096F80
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 299h
jmp	short loc_10096FAD
xor	ecx, ecx
test	esi, esi
jz	short loc_10096FA6
jmp	short loc_10096F90
align 10h
			
mov	eax, [esp+3Ch+var_30]
mov	edx, [eax]
mov	dword ptr [edx+ecx*4], 0
inc	ecx
cmp	ecx, esi
jb	short loc_10096F90
mov	eax, [esp+3Ch+var_28]
mov	ecx, [esp+3Ch+var_30]
mov	[ebp+0], ecx
			
cmp	[esp+3Ch+var_18], 0
jnz	short loc_10096FC4
test	eax, eax
jnz	short loc_10096FC4
cmp	[esp+3Ch+var_14], eax
jnz	short loc_10096FC4
cmp	[esp+3Ch+var_4], eax
jz	short loc_10096FFD
			
mov	eax, [esp+3Ch+var_30]
test	eax, eax
jz	short loc_10096FFD
push	edi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
test	eax, eax
jz	short loc_10096FF5
push	edi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_30], 0
			
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	22h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	ecx, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_prim_0 
mov	[esp+38h+var_C], 22h
test	ecx, ecx
jz	loc_10097197
cmp	[esp+38h+arg_4], 0
jz	loc_10097197
cmp	[esp+38h+arg_8], 0
jz	loc_10097197
push	ebx
mov	ebx, [esp+3Ch+arg_C]
xor	edx, edx
mov	eax, ebx
div	dword ptr [ecx+4]
mov	eax, [ecx]
mov	esi, [eax+edx*4]
push	ebp
mov	ebp, [esp+40h+arg_14]
lea	edi, [eax+edx*4]
test	esi, esi
jz	short loc_100970F1
lea	esp, [esp+0]
cmp	[esi+8], ebx
jnz	short loc_100970E8
mov	eax, [esp+40h+arg_10]
push	ebp
test	eax, eax
jnz	short loc_100970BE
mov	ebx, [esi]
mov	eax, [esp+44h+arg_4]
lea	edx, [esp+44h+var_30]
call	sub_10096DF0
add	esp, 4
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_10097116
mov	ebx, [esp+40h+arg_C]
jmp	short loc_100970D8
mov	edx, [esi]
lea	ecx, [esp+44h+var_30]
push	ecx
mov	ecx, [esp+48h+arg_4]
push	edx
push	ecx
call	eax
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_10097127
cmp	[esi+8], ebx
jnz	short loc_100970E8
mov	edi, 1
cmp	[esp+40h+var_30], edi
jz	short loc_10097138
			
lea	edi, [esi+0Ch]
mov	esi, [edi]
test	esi, esi
jnz	short loc_10097090
push	ebp
push	edi
push	10h
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10097164
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 299h
jmp	short loc_1009717D
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 155h
jmp	short loc_1009717D
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 155h
jmp	short loc_1009717D
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10097156
mov	ecx, [esp+40h+var_C]
push	ebp
push	2
push	ecx
push	0
push	13h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], edi
mov	[esp+40h+var_1C], 13h
jmp	short loc_1009717D
mov	edi, [edi]
mov	eax, [esp+40h+arg_4]
mov	ecx, [esp+40h+arg_8]
mov	[edi], eax
mov	[edi+4], ecx
mov	[edi+8], ebx
mov	dword ptr [edi+0Ch], 0
			
push	ebp
push	1
lea	edx, [esp+48h+var_2C]
push	22h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	eax, [esp+38h+arg_14]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 34h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	ecx, [esp+40h+arg_0]
mov	[esp+40h+var_2C], offset aPkix_pl_prim_1 
mov	[esp+40h+var_C], 22h
test	ecx, ecx
jz	loc_10097350
mov	ebp, [esp+40h+arg_4]
test	ebp, ebp
jz	loc_10097350
mov	edx, [esp+40h+arg_10]
test	edx, edx
jz	loc_10097350
mov	eax, [esp+40h+arg_14]
test	eax, eax
jz	loc_10097350
mov	dword ptr [edx], 0
mov	dword ptr [eax], 0
push	ebx
mov	ebx, [esp+44h+arg_8]
xor	edx, edx
mov	eax, ebx
div	dword ptr [ecx+4]
mov	eax, [ecx]
mov	edi, [esp+44h+arg_18]
mov	esi, [eax+edx*4]
mov	[esp+44h+var_30], esi
test	esi, esi
jz	loc_10097336
cmp	[esi+8], ebx
jnz	short loc_100972A1
mov	eax, [esp+44h+arg_C]
push	edi
test	eax, eax
jnz	short loc_1009727F
mov	ebx, [esi]
lea	edx, [esp+48h+var_34]
mov	eax, ebp
call	sub_10096DF0
add	esp, 4
mov	[esp+44h+var_28], eax
test	eax, eax
jnz	short loc_100972B1
mov	ebx, [esp+44h+arg_8]
jmp	short loc_10097295
mov	edx, [esi]
lea	ecx, [esp+48h+var_34]
push	ecx
push	edx
push	ebp
call	eax
add	esp, 10h
mov	[esp+44h+var_28], eax
test	eax, eax
jnz	short loc_100972C2
cmp	[esi+8], ebx
jnz	short loc_100972A1
cmp	[esp+44h+var_34], 1
jz	short loc_100972D3
			
mov	[esp+44h+var_30], esi
mov	esi, [esi+0Ch]
test	esi, esi
jnz	short loc_10097253
jmp	loc_10097336
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 155h
jmp	short loc_10097336
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 155h
jmp	short loc_10097336
mov	eax, [esp+44h+var_30]
cmp	esi, eax
jz	short loc_100972E3
mov	edx, [esi+0Ch]
mov	[eax+0Ch], edx
jmp	short loc_100972F6
mov	ecx, [esp+44h+arg_0]
mov	eax, ebx
xor	edx, edx
div	dword ptr [ecx+4]
mov	eax, [ecx]
mov	ecx, [esi+0Ch]
mov	[eax+edx*4], ecx
mov	edx, [esi]
mov	eax, [esp+44h+arg_10]
mov	[eax], edx
mov	ecx, [esi+4]
mov	edx, [esp+44h+arg_14]
mov	[edx], ecx
xor	ebx, ebx
push	edi
push	esi
mov	[esi], ebx
mov	[esi+4], ebx
mov	[esi+0Ch], ebx
call	sub_10094630
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_10097336
push	edi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
			
push	edi
push	1
lea	ecx, [esp+4Ch+var_2C]
push	22h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
			
mov	edx, [esp+40h+arg_18]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	ecx, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_pl_prim_2 
mov	[esp+40h+var_C], 22h
test	ecx, ecx
jz	loc_10097498
mov	ebp, [esp+40h+arg_4]
test	ebp, ebp
jz	loc_10097498
mov	ebx, [esp+40h+arg_10]
test	ebx, ebx
jz	loc_10097498
mov	eax, [esp+40h+arg_8]
mov	dword ptr [ebx], 0
xor	edx, edx
div	dword ptr [ecx+4]
mov	eax, [ecx]
mov	edi, [esp+40h+arg_14]
mov	esi, [eax+edx*4]
test	esi, esi
jz	short loc_1009744E
nop
cmp	dword ptr [ebx], 0
jnz	short loc_1009744E
mov	ecx, [esp+40h+arg_8]
cmp	[esi+8], ecx
jnz	short loc_10097447
mov	eax, [esp+40h+arg_C]
push	edi
lea	edx, [esp+44h+var_30]
test	eax, eax
jnz	short loc_10097425
mov	ebx, [esi]
mov	eax, ebp
call	sub_10096DF0
add	esp, 4
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_1009746E
mov	ebx, [esp+40h+arg_10]
jmp	short loc_10097437
mov	ecx, [esi]
push	edx
push	ecx
push	ebp
call	eax
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	short loc_1009747F
mov	edx, [esp+40h+arg_8]
cmp	[esi+8], edx
jnz	short loc_10097447
cmp	[esp+40h+var_30], 1
jz	short loc_10097491
			
mov	esi, [esi+0Ch]
test	esi, esi
jnz	short loc_100973F0
			
mov	dword ptr [ebx], 0
			
push	edi
push	1
lea	edx, [esp+48h+var_2C]
push	22h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 155h
jmp	short loc_10097454
mov	[esp+40h+var_10], 1Fh
mov	[esp+40h+var_1C], 155h
jmp	short loc_10097454
mov	ecx, [esi+4]
mov	[ebx], ecx
jmp	short loc_10097454
			
mov	eax, [esp+40h+arg_14]
push	eax
push	1
lea	ecx, [esp+48h+var_2C]
push	1Fh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
xor	edi, edi
mov	[esp+38h+var_2C], offset aPkix_pl_prim_5 
mov	[esp+38h+var_C], 22h
cmp	ebp, edi
jnz	short loc_1009752D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
xor	ecx, ecx
push	ebx
mov	ebx, [esp+3Ch+arg_4]
mov	[esp+3Ch+arg_0], ecx
cmp	[ebp+4], edi
jbe	short loc_10097597
lea	ecx, [ecx+0]
mov	edx, [ebp+0]
mov	eax, [edx+ecx*4]
cmp	eax, edi
jz	short loc_1009758D
lea	ebx, [ebx+0]
mov	esi, [eax+0Ch]
push	ebx
push	eax
mov	[eax+4], edi
mov	[eax], edi
mov	[eax+8], edi
mov	[eax+0Ch], edi
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_10097583
push	ebx
push	eax
lea	eax, [esp+44h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
mov	eax, esi
cmp	esi, edi
jnz	short loc_10097550
mov	ecx, [esp+3Ch+arg_0]
inc	ecx
mov	[esp+3Ch+arg_0], ecx
cmp	ecx, [ebp+4]
jb	short loc_10097540
mov	eax, [ebp+0]
cmp	eax, edi
jz	short loc_100975C6
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_100975C3
push	ebx
push	eax
lea	ecx, [esp+44h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
mov	[ebp+0], edi
push	ebx
push	ebp
mov	[ebp+4], edi
call	sub_10094630
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, edi
jz	short loc_100975EE
push	ebx
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], edi
push	ebx
push	1
lea	eax, [esp+44h+var_2C]
push	22h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	ecx, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_pl_prim_3 
mov	[esp+38h+var_C], 22h
test	ecx, ecx
jz	short loc_10097687
mov	esi, [esp+38h+arg_8]
test	esi, esi
jz	short loc_10097687
mov	eax, [esp+38h+arg_4]
xor	edx, edx
div	dword ptr [ecx+4]
mov	eax, [ecx]
mov	edx, [eax+edx*4]
test	edx, edx
jz	short loc_10097668
lea	ebx, [ebx+0]
mov	edx, [edx+0Ch]
inc	ebx
test	edx, edx
jnz	short loc_10097660
mov	ecx, [esp+38h+arg_C]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	22h
push	edx
mov	[esi], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_C]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_prim_4 
mov	[esp+34h+var_C], 22h
test	esi, esi
jz	loc_10097796
cmp	[esp+34h+arg_8], 0
jz	loc_10097796
cmp	[esp+34h+arg_C], 0
jz	loc_10097796
mov	edi, [esp+34h+arg_4]
xor	edx, edx
mov	eax, edi
div	dword ptr [esi+4]
mov	eax, [esi]
push	ebx
mov	ebx, [esp+38h+arg_10]
mov	ecx, [eax+edx*4]
test	ecx, ecx
jz	short loc_1009777D
mov	edx, [ecx]
mov	eax, [esp+38h+arg_8]
mov	[eax], edx
mov	edx, [ecx+4]
mov	eax, [esp+38h+arg_C]
mov	[eax], edx
xor	edx, edx
mov	eax, edi
div	dword ptr [esi+4]
mov	eax, [esi]
mov	esi, [ecx+0Ch]
push	ebx
push	ecx
mov	[eax+edx*4], esi
mov	dword ptr [ecx], 0
mov	dword ptr [ecx+4], 0
mov	dword ptr [ecx+0Ch], 0
call	sub_10094630
add	esp, 8
mov	[esp+38h+var_24], eax
test	eax, eax
jz	short loc_1009777D
push	ebx
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], 0
			
push	ebx
push	1
lea	edx, [esp+40h+var_2C]
push	22h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	eax, [esp+34h+arg_10]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_rwlo_0 
mov	[esp+34h+var_C], 3Bh
test	esi, esi
jnz	short loc_10097829
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	33h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_10097852
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 309h
jmp	short loc_10097864
mov	eax, [esi]
push	eax
call	ds:PR_DestroyRWLock
add	esp, 4
mov	dword ptr [esi], 0
push	edi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	3Bh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
push	esi
xor	eax, eax
push	edi
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_40], eax
mov	[esp+58h+var_3C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB94C
push	1
mov	[esp+60h+var_50], offset aRwlock 
mov	[esp+60h+var_48], 0Ch
mov	[esp+60h+var_44], offset sub_100977D0
rep movsd
lea	ecx, [esp+60h+var_2C]
push	3Bh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_rwlock 
mov	[esp+68h+var_C], 3Bh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_2C], offset aPkix_pl_stri_4 
mov	[esp+3Ch+var_C], 3Eh
test	edx, edx
jz	loc_100979D4
mov	ebx, [esp+3Ch+arg_0]
test	ebx, ebx
jz	loc_100979D4
cmp	[esp+3Ch+arg_4], 0
jz	loc_100979D4
mov	eax, [edx]
mov	edx, [edx+4]
mov	ecx, [ebx]
xor	esi, esi
xor	edi, edi
push	ebp
test	edx, edx
jz	short loc_1009799D
mov	ebx, [ebx+4]
mov	ebp, ecx
mov	[esp+40h+var_30], ebx
sub	ebp, eax
cmp	edi, [esp+40h+var_30]
jnb	short loc_10097995
test	esi, esi
jnz	short loc_100979B0
mov	cl, [eax+ebp]
mov	bl, [eax]
cmp	bl, cl
jnb	short loc_10097988
or	esi, 0FFFFFFFFh
jmp	short loc_1009798F
jbe	short loc_1009798F
mov	esi, 1
			
inc	edi
inc	eax
cmp	edi, edx
jb	short loc_10097970
test	esi, esi
jnz	short loc_100979B0
mov	ebx, [esp+40h+arg_0]
mov	eax, [ebx+4]
cmp	edx, eax
jnb	short loc_100979A9
or	esi, 0FFFFFFFFh
jmp	short loc_100979B0
jbe	short loc_100979B0
mov	esi, 1
			
mov	ecx, [esp+40h+arg_8]
mov	eax, [esp+40h+arg_4]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	3Eh
push	edx
mov	[eax], esi
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_pl_stri_2 
mov	[esp+38h+var_C], 3Eh
cmp	edi, ebx
jnz	short loc_10097A6D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	36h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10097A96
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 0Eh
jmp	short loc_10097AF8
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10097AC8
push	esi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10097AC2
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
mov	[edi+0Ch], ebx
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_10097AF8
push	esi
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10097AF3
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	[edi+4], ebx
			
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	3Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	edi, [esp+40h+arg_0]
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_pl_stri_3 
mov	[esp+40h+var_C], 3Eh
test	edi, edi
jz	loc_10097C6A
mov	ebx, [esp+40h+arg_4]
test	ebx, ebx
jz	loc_10097C6A
mov	ebp, [esp+40h+arg_8]
test	ebp, ebp
jz	loc_10097C6A
mov	esi, [esp+40h+arg_C]
push	esi
push	36h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10097BB4
mov	eax, [eax+4]
push	esi
push	1
mov	[esp+48h+var_10], eax
lea	eax, [esp+48h+var_2C]
push	3Eh
push	eax
mov	[esp+50h+var_1C], 1EFh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
push	esi
lea	ecx, [esp+44h+arg_0]
push	ecx
push	ebx
call	sub_10095FB0
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10097BF4
mov	edx, [eax+4]
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	3Eh
push	eax
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 152h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
cmp	[esp+40h+arg_0], 36h
mov	dword ptr [ebp+0], 0
jnz	short loc_10097C50
push	esi
lea	eax, [esp+44h+var_30]
push	eax
push	ebx
mov	edx, edi
call	sub_10097910
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_10097C44
mov	ecx, [eax+4]
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	3Eh
push	eax
mov	[esp+50h+var_10], ecx
mov	[esp+50h+var_1C], 3CEh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
xor	edx, edx
cmp	[esp+40h+var_30], edx
setz	dl
mov	[ebp+0], edx
push	esi
push	1
lea	eax, [esp+48h+var_2C]
push	3Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+40h+arg_C]
push	ecx
push	1
lea	edx, [esp+48h+var_2C]
push	1Fh
push	edx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_stri_5 
mov	[esp+38h+var_C], 3Eh
test	esi, esi
jz	loc_10097D5F
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_10097D5F
mov	edi, [esp+38h+arg_8]
push	edi
push	36h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10097D1E
mov	eax, [eax+4]
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	3Eh
push	ecx
mov	[esp+48h+var_1C], 30Ch
mov	[esp+48h+var_10], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	ecx, [esi+4]
mov	edx, [esi]
push	edi
push	ebx
push	ecx
push	edx
call	sub_10072650
add	esp, 10h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10097D46
mov	eax, [eax+4]
mov	[esp+38h+var_1C], 20Ch
mov	[esp+38h+var_10], eax
push	edi
push	1
lea	ecx, [esp+40h+var_2C]
push	3Eh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_8]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 30h
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_pl_string 
mov	[esp+3Ch+var_C], 3Eh
cmp	[esp+3Ch+arg_C], ebx
jz	loc_100980F2
mov	esi, [esp+3Ch+Src]
cmp	esi, ebx
jz	loc_100980F2
push	ebp
mov	ebp, [esp+40h+arg_10]
push	ebp
lea	eax, [esp+44h+var_30]
push	eax
push	10h
push	36h
call	sub_100952A0
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_10097E01
mov	ecx, [eax+4]
mov	[esp+40h+var_1C], 11Eh
jmp	loc_1009808A
mov	edx, [esp+40h+var_30]
mov	edi, [esp+40h+arg_0]
mov	[edx], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+4], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+8], ebx
mov	edx, [esp+40h+var_30]
mov	[edx+0Ch], ebx
cmp	edi, 4		
ja	loc_1009804D	
jmp	ds:off_10098120[edi*4] 
			
push	esi		
call	PL_strlen
mov	ecx, [esp+44h+var_30]
mov	[ecx+0Ch], eax
mov	eax, [esp+44h+var_30]
lea	edx, [eax+8]
mov	eax, [eax+0Ch]
push	ebp
push	edx
inc	eax
push	eax
call	sub_10094350
add	esp, 10h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jnz	loc_1009807F
mov	eax, [esp+40h+var_30]
mov	edx, [eax+0Ch]
mov	eax, [eax+8]
inc	edx
push	edx		
push	esi		
push	eax		
call	memcpy
mov	eax, [esp+4Ch+var_30]
xor	edx, edx
push	ebp
cmp	edi, 4
setz	dl
lea	ecx, [eax+4]
push	ecx
mov	ecx, [eax+0Ch]
push	eax
push	edx
mov	edx, [eax+8]
push	ecx
push	edx
call	sub_10092AC0
add	esp, 24h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	loc_10097FD5
mov	ecx, [eax+4]
mov	[esp+40h+var_1C], 1BAh
jmp	loc_1009808A
			
mov	eax, [esp+40h+var_30] 
push	ebp
lea	edx, [eax+4]
push	edx
push	eax
mov	eax, [esp+4Ch+Size]
push	eax
push	esi
call	sub_100931F0
add	esp, 14h
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	loc_10097FD5
mov	ecx, [eax+4]
mov	[esp+40h+var_1C], 415h
jmp	loc_1009808A
			
mov	ebx, [esp+40h+Size] 
test	bl, 1
jz	short loc_10097F56
mov	eax, [esp+40h+var_30]
xor	esi, esi
cmp	eax, esi
jz	short loc_10097F21
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, esi
jz	short loc_10097F1D
push	ebp
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], esi
mov	[esp+40h+var_30], esi
mov	eax, dword_100BAE9C
cmp	eax, esi
jz	short loc_10097F41
mov	ecx, [esp+40h+var_C]
push	ebp
push	2
push	ecx
push	esi
push	410h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 410h
jmp	loc_100980A5
xor	eax, eax
test	ebx, ebx
jz	short loc_10097F9E
mov	edi, [esp+40h+var_28]
lea	edx, [eax+2]
test	edi, edi
jnz	short loc_10097F9E
mov	cl, [eax+esi]
cmp	cl, 0D8h
jb	short loc_10097F94
cmp	cl, 0DBh
ja	short loc_10097F94
cmp	edx, ebx
jnb	short loc_10097FE4
mov	cl, [eax+esi+2]
cmp	cl, 0DCh
jb	loc_1009801A
cmp	cl, 0DFh
ja	loc_1009801A
add	eax, 2
add	edx, 2
			
add	eax, 2
add	edx, 2
cmp	eax, ebx
jb	short loc_10097F63
			
mov	edx, [esp+40h+var_30]
mov	[edx+4], ebx
mov	eax, [esp+40h+var_30]
push	ebp
push	eax
push	ebx
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jnz	loc_1009807F
mov	edx, [esp+40h+var_30]
mov	eax, [edx]
push	ebx		
push	esi		
push	eax		
call	memcpy
mov	eax, [esp+4Ch+var_28]
add	esp, 0Ch
			
mov	ecx, [esp+40h+arg_C]
mov	edx, [esp+40h+var_30]
mov	[ecx], edx
jmp	loc_1009808E
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10098005
mov	edx, [esp+40h+var_C]
push	ebp
push	2
push	edx
push	0
push	411h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 411h
jmp	loc_100980A5
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009803B
mov	ecx, [esp+40h+var_C]
push	ebp
push	2
push	ecx
push	0
push	412h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 412h
jmp	short loc_100980A5
			
			
mov	eax, dword_100BAE9C 
cmp	eax, ebx
jz	short loc_1009806D
mov	ecx, [esp+40h+var_C]
push	ebp
push	2
push	ecx
push	ebx
push	400h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 400h
jmp	short loc_100980A5
			
mov	ecx, [eax+4]
mov	[esp+40h+var_1C], 299h
			
mov	[esp+40h+var_10], ecx
cmp	[esp+40h+var_18], 0
jnz	short loc_100980A5
test	eax, eax
jnz	short loc_100980A5
cmp	[esp+40h+var_14], eax
jnz	short loc_100980A5
cmp	[esp+40h+var_4], eax
jz	short loc_100980D8
			
mov	eax, [esp+40h+var_30]
xor	esi, esi
cmp	eax, esi
jz	short loc_100980D8
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+40h+var_24], eax
cmp	eax, esi
jz	short loc_100980D4
push	ebp
push	eax
lea	edx, [esp+48h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+40h+var_24], esi
mov	[esp+40h+var_30], esi
			
push	ebp
push	1
lea	eax, [esp+48h+var_2C]
push	3Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	ecx, [esp+3Ch+arg_10]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
dd offset loc_10097EB1	
dd offset loc_10097EE5
dd offset loc_1009804D
dd offset loc_10097E30
align 10h
			
sub	esp, 2Ch
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_2C], offset aPkix_pl_stri_0 
mov	[esp+3Ch+var_C], 3Eh
test	esi, esi
jz	loc_10098308
mov	ebp, [esp+3Ch+arg_8]
test	ebp, ebp
jz	loc_10098308
mov	ebx, [esp+3Ch+arg_C]
test	ebx, ebx
jz	loc_10098308
mov	eax, [esp+3Ch+arg_4]
cmp	eax, 4		
ja	loc_100982BC	
jmp	ds:off_10098338[eax*4] 
			
mov	edi, [esp+3Ch+arg_10] 
mov	edx, [esi+4]
xor	ecx, ecx
cmp	eax, 4
mov	eax, [esi]
push	edi
setz	cl
push	ebx
push	ebp
push	ecx
push	edx
push	eax
call	sub_10092720
add	esp, 18h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	loc_100982EE
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	3Eh
push	eax
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 413h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	edi, [esp+3Ch+arg_10] 
push	edi
push	ebx
push	ebp
push	0
mov	edx, [esi+4]
mov	eax, [esi]
push	edx
push	eax
call	sub_10093040
add	esp, 18h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	loc_100982EE
mov	ecx, [eax+4]
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	3Eh
push	eax
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 414h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	edi, [esp+3Ch+arg_10] 
push	edi
push	ebx
push	ebp
push	1
jmp	short loc_100981FC
			
mov	edi, [esp+3Ch+arg_10] 
mov	eax, [esi+4]
push	edi
push	ebp
push	eax
mov	[ebx], eax
call	sub_10094350
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10098290
mov	edx, [eax+4]
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	3Eh
push	eax
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 299h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	eax, [ebx]
mov	ecx, [esi]
mov	edx, [ebp+0]
push	eax		
push	ecx		
push	edx		
call	memcpy
add	esp, 0Ch
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	3Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
mov	eax, dword_100BAE9C 
mov	edi, [esp+3Ch+arg_10]
test	eax, eax
jz	short loc_100982DE
push	edi
push	2
push	3Eh
push	0
push	400h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 400h
			
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	3Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+3Ch+arg_10]
push	ecx
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 2Ch
retn
align 4
dd offset loc_100981F3	
dd offset loc_1009824B
dd offset loc_10098240
dd offset loc_1009819F
align 10h
sub	esp, 5Ch
push	ebp
mov	ebp, [esp+60h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+68h+var_58]
rep movsd
mov	[esp+68h+Src], 0
mov	[esp+68h+var_58], offset aPkix_pl_stri_6 
mov	[esp+68h+var_38], 3Eh
test	ebp, ebp
jz	loc_100984B8
cmp	[esp+68h+arg_4], 0
jz	loc_100984B8
push	ebx
mov	ebx, [esp+6Ch+arg_8]
push	ebx
push	36h
push	ebp
call	sub_10072630
add	esp, 0Ch
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	short loc_100983C2
mov	eax, [eax+4]
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_48], 0Eh
jmp	loc_1009846B
mov	eax, [ebp+4]
push	ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+70h+var_2C]
rep movsd
lea	ecx, [esp+70h+arg_0]
push	ecx
mov	ecx, [ebp+0]
lea	edx, [esp+74h+Src]
push	edx
push	0
push	eax
push	ecx
mov	[esp+84h+var_2C], offset aPkix_pl_stri_0 
mov	[esp+84h+var_C], 3Eh
call	sub_10092720
add	esp, 18h
mov	[esp+6Ch+var_28], eax
test	eax, eax
jz	short loc_10098416
mov	edx, [eax+4]
mov	[esp+6Ch+var_10], edx
mov	[esp+6Ch+var_1C], 413h
push	ebx
push	1
lea	eax, [esp+74h+var_2C]
push	3Eh
push	eax
call	sub_100781E0
add	esp, 10h
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	short loc_1009843D
mov	ecx, [eax+4]
mov	[esp+6Ch+var_48], 3D1h
jmp	short loc_10098467
mov	edx, [esp+6Ch+arg_4]
mov	eax, [esp+6Ch+Src]
push	ebx		
push	edx		
push	0		
push	eax		
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	short loc_1009846B
mov	ecx, [eax+4]
mov	[esp+6Ch+var_48], 3CFh
mov	[esp+6Ch+var_3C], ecx
			
mov	eax, [esp+6Ch+Src]
test	eax, eax
jz	short loc_1009849E
push	ebx
push	eax
call	sub_10094630
xor	esi, esi
add	esp, 8
mov	[esp+6Ch+var_50], eax
cmp	eax, esi
jz	short loc_1009849A
push	ebx
push	eax
lea	edx, [esp+74h+var_58]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+Src], esi
push	ebx
push	1
lea	eax, [esp+74h+var_58]
push	3Eh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 5Ch
retn
			
mov	ecx, [esp+68h+arg_8]
push	ecx
push	1
lea	edx, [esp+70h+var_58]
push	1Fh
push	edx
mov	[esp+78h+var_44], 1
mov	[esp+78h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 5Ch
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_34], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB9B8
push	1
mov	[esp+60h+var_50], offset aString 
mov	[esp+60h+var_48], 10h
mov	[esp+60h+var_44], offset sub_10097A10
mov	[esp+60h+var_40], offset sub_10097B20
mov	[esp+60h+var_3C], offset sub_10097CA0
mov	[esp+60h+var_38], offset sub_10098350
mov	[esp+60h+var_30], offset sub_10072730
rep movsd
lea	ecx, [esp+60h+var_2C]
push	3Eh
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_stri_1 
mov	[esp+68h+var_C], 3Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
			
sub	esp, 74h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+80h+var_58]
rep movsd
mov	edx, 3Eh
mov	[esp+80h+var_6C], ebp
mov	[esp+80h+Src], ebp
mov	[esp+80h+var_70], ebp
mov	[esp+80h+var_58], offset aPkix_pl_sprint 
mov	[esp+80h+var_38], edx
cmp	[esp+80h+arg_0], ebp
jz	loc_1009892A
mov	eax, [esp+80h+arg_8]
cmp	eax, ebp
jz	loc_1009892A
push	ebx
mov	ebx, [esp+84h+arg_4]
push	ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+88h+var_2C]
rep movsd
mov	[esp+88h+var_C], edx
lea	ecx, [esp+88h+var_68]
push	ecx
mov	ecx, [eax+4]
lea	edx, [esp+8Ch+var_70]
push	edx
mov	edx, [eax]
push	ebp
push	ecx
push	edx
mov	[esp+9Ch+var_2C], offset aPkix_pl_stri_0 
call	sub_10092720
add	esp, 18h
mov	[esp+84h+var_28], eax
test	eax, eax
jz	short loc_10098637
mov	eax, [eax+4]
mov	[esp+84h+var_10], eax
mov	[esp+84h+var_1C], 413h
push	ebx
push	1
lea	ecx, [esp+8Ch+var_2C]
push	3Eh
push	ecx
call	sub_100781E0
add	esp, 10h
mov	[esp+84h+var_54], eax
test	eax, eax
jz	short loc_10098665
mov	edx, [eax+4]
mov	[esp+84h+var_3C], edx
mov	[esp+84h+var_48], 3D1h
jmp	loc_100988BD
mov	eax, [esp+84h+var_68]
inc	eax
push	eax
call	ds:PR_Malloc
mov	edi, eax
add	esp, 4
test	edi, edi
jnz	short loc_100986AC
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10098696
mov	ecx, [esp+84h+var_38]
push	ebx
push	2
push	ecx
push	edi
push	edi
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+84h+var_44], 1
call	sub_10093EA0
mov	[esp+84h+var_54], eax
jmp	loc_100988BD
xor	esi, esi
xor	ebp, ebp
mov	[esp+84h+var_60], edi
cmp	[esp+84h+var_68], esi
jbe	loc_10098888
lea	eax, [esp+84h+arg_8]
lea	ebx, [ebp+1]
jmp	short loc_100986D0
align 10h
			
mov	edx, [esp+84h+var_70]
mov	cl, [edx+ebp]
cmp	cl, 25h
jnz	loc_10098833
cmp	ebx, [esp+84h+var_68]
jnb	loc_10098833
movsx	ecx, byte ptr [edx+ebp+1]
add	ecx, 0FFFFFFA8h	
cmp	ecx, 20h
ja	loc_10098818	
movzx	edx, ds:byte_10098968[ecx]
jmp	ds:off_1009895C[edx*4] 
			
mov	byte ptr [esi+edi], 25h	
mov	ecx, [esp+84h+var_70]
mov	dl, [ecx+ebp+1]
add	eax, 4
mov	[esi+edi+1], dl
mov	[esp+84h+var_64], eax
mov	eax, [eax]
add	esi, 2
add	ebp, 2
add	ebx, 2
mov	byte ptr [esi+edi], 0
test	eax, eax
jz	short loc_10098762
mov	ecx, [esp+84h+arg_4]
push	ecx
lea	edx, [esp+88h+var_5C]
push	edx
lea	ecx, [esp+8Ch+var_6C]
push	ecx
push	0
push	eax
call	sub_10098140
add	esp, 14h
mov	[esp+84h+var_54], eax
test	eax, eax
jnz	loc_10098860
mov	eax, [esp+84h+var_6C]
jmp	short loc_10098768
xor	eax, eax
mov	[esp+84h+var_6C], eax
mov	ecx, [esp+84h+Src]
push	eax
push	edi
test	ecx, ecx
jz	short loc_1009877E
push	ecx
call	ds:PR_sprintf_append
add	esp, 0Ch
jmp	short loc_10098787
call	ds:PR_smprintf
add	esp, 8
mov	[esp+84h+Src], eax
mov	eax, [esp+84h+var_6C]
test	eax, eax
jz	short loc_100987AC
mov	edx, [esp+84h+arg_4]
push	edx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+84h+var_6C], 0
mov	eax, [esp+84h+var_64]
add	edi, esi
xor	esi, esi
jmp	loc_10098839
			
mov	byte ptr [esi+edi], 25h	
mov	ecx, [esp+84h+var_70]
mov	dl, [ecx+ebp+1]
mov	ecx, [esp+84h+Src]
add	eax, 4
mov	[esp+84h+var_64], eax
mov	eax, [eax]
mov	[esi+edi+1], dl
add	esi, 2
add	ebp, 2
add	ebx, 2
push	eax
mov	byte ptr [esi+edi], 0
push	edi
test	ecx, ecx
jz	short loc_10098801
push	ecx
call	ds:PR_sprintf_append
add	esp, 0Ch
mov	[esp+84h+Src], eax
mov	eax, [esp+84h+var_64]
add	edi, esi
xor	esi, esi
jmp	short loc_10098839
call	ds:PR_smprintf
add	esp, 8
mov	[esp+84h+Src], eax
mov	eax, [esp+84h+var_64]
add	edi, esi
xor	esi, esi
jmp	short loc_10098839
			
			
mov	byte ptr [esi+edi], 25h	
mov	ecx, [esp+84h+var_70]
mov	dl, [ecx+ebp+1]
mov	[esi+edi+1], dl
add	esi, 2
add	ebp, 2
add	ebx, 2
jmp	short loc_10098839
			
mov	[esi+edi], cl
inc	esi
inc	ebp
inc	ebx
			
cmp	ebp, [esp+84h+var_68]
jb	loc_100986D0
test	esi, esi
jz	short loc_10098881
mov	eax, [esp+84h+Src]
mov	byte ptr [esi+edi], 0
push	edi
test	eax, eax
jz	short loc_10098874
push	eax
call	ds:PR_sprintf_append
add	esp, 8
jmp	short loc_1009887D
mov	eax, [eax+4]
mov	ebx, [esp+84h+arg_4]
mov	[esp+84h+var_48], 3D1h
jmp	short loc_100988B5
call	ds:PR_smprintf
add	esp, 4
mov	[esp+84h+Src], eax
mov	ebx, [esp+84h+arg_4]
mov	ecx, [esp+84h+arg_0]
mov	edx, [esp+84h+Src]
push	ebx		
push	ecx		
push	0		
push	edx		
push	0		
call	sub_10097D90
add	esp, 14h
mov	[esp+84h+var_54], eax
test	eax, eax
jz	short loc_100988B9
mov	eax, [eax+4]
mov	[esp+84h+var_48], 3CFh
mov	[esp+84h+var_3C], eax
mov	ebp, [esp+84h+var_60]
			
mov	eax, [esp+84h+var_70]
xor	esi, esi
cmp	eax, esi
jz	short loc_100988F0
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+84h+var_50], eax
cmp	eax, esi
jz	short loc_100988EC
push	ebx
push	eax
lea	ecx, [esp+8Ch+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+84h+var_50], esi
mov	[esp+84h+var_70], esi
cmp	ebp, esi
jz	short loc_100988FE
push	ebp
call	ds:PR_Free
add	esp, 4
mov	eax, [esp+84h+Src]
cmp	eax, esi
jz	short loc_10098910
push	eax
call	ds:PR_smprintf_free
add	esp, 4
push	ebx
push	1
lea	edx, [esp+8Ch+var_58]
push	3Eh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 74h
retn
			
mov	eax, [esp+80h+arg_4]
push	eax
push	1
lea	ecx, [esp+88h+var_58]
push	1Fh
push	ecx
mov	[esp+90h+var_44], 1
mov	[esp+90h+var_48], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 74h
retn
align 4
dd offset loc_10098709	
dd offset loc_10098818
db	2,     2,     2,     2 
db	2,     2,     2,     2
db	0,     2,     2,     2
db	2,     0,     2,     2
db	2,     2,     2,     0
db	2,     2,     2,     1
db	2,     0,     2,     2
db	0
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_pl_aiam_3 
mov	[esp+38h+var_C], ebx
cmp	esi, ebx
jnz	short loc_100989E9
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	edi, [esp+38h+arg_4]
push	edi
push	ebx
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_10098A14
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2D3h
jmp	loc_10098AA9
mov	eax, [esi+0Ch]
mov	[esi], ebx
mov	[esi+4], ebx
mov	[esi+8], ebx
cmp	eax, ebx
jz	short loc_10098A4B
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10098A48
push	edi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+0Ch], ebx
mov	eax, [esi+10h]
cmp	eax, ebx
jz	short loc_10098A7A
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10098A77
push	edi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+10h], ebx
mov	eax, [esi+14h]
cmp	eax, ebx
jz	short loc_10098AA9
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10098AA6
push	edi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[esi+14h], ebx
			
push	edi
push	1
lea	eax, [esp+40h+var_2C]
push	ebx
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	0
push	ecx
mov	[esp+44h+var_2C], offset aPkix_pl_aiamgr 
mov	[esp+44h+var_C], 0
mov	dword_100BB220,	offset aAiamgr 
mov	dword_100BB228,	28h
mov	dword_100BB22C,	offset sub_10098990
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 64h
push	ebx
xor	ebx, ebx
push	ebp
mov	ebp, [esp+6Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+74h+var_2C]
rep movsd
mov	[esp+74h+var_5C], ebx
mov	[esp+74h+var_60], ebx
mov	[esp+74h+var_30], ebx
mov	[esp+74h+var_40], ebx
mov	[esp+74h+var_64], ebx
mov	[esp+74h+var_54], ebx
mov	[esp+74h+var_50], ebx
mov	[esp+74h+var_58], ebx
mov	[esp+74h+var_44], ebx
mov	[esp+74h+var_48], ebx
mov	[esp+74h+var_4C], ebx
mov	[esp+74h+var_34], ebx
mov	[esp+74h+var_38], ebx
mov	[esp+74h+var_3C], ebx
mov	[esp+74h+var_2C], offset aPkix_pl_aiam_2 
mov	[esp+74h+var_C], ebx
cmp	ebp, ebx
jz	loc_10099047
mov	ecx, [esp+74h+arg_4]
cmp	ecx, ebx
jz	loc_10099047
mov	edx, [esp+74h+arg_8]
cmp	edx, ebx
jz	loc_10099047
mov	esi, [esp+74h+arg_C]
cmp	esi, ebx
jz	loc_10099047
mov	eax, [edx]
mov	edi, [esp+74h+arg_10]
mov	[edx], ebx
mov	[esp+74h+var_4C], eax
mov	[esi], ebx
cmp	eax, ebx
jnz	loc_10098DE0
push	edi
lea	eax, [esp+78h+var_5C]
push	eax
push	ecx
call	sub_1008AC50
add	esp, 0Ch
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_10098C07
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 232h
jmp	loc_10098F52
call	SEC_GetRegisteredHttpClient
mov	[ebp+18h], eax
cmp	eax, ebx
jnz	short loc_10098C48
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10098C33
mov	edx, [esp+74h+var_C]
push	edi
push	2
push	edx
push	ebx
push	338h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 338h
jmp	loc_10098F68
cmp	word ptr [eax],	1
jnz	loc_10098E97
mov	esi, [edi+10h]
add	eax, 4
mov	[esp+74h+var_64], eax
mov	eax, [esp+74h+var_5C]
push	edi		
cmp	eax, ebx
jz	short loc_10098C7A
lea	ecx, [esp+78h+var_60]
push	ecx
push	eax
call	sub_100962D0
add	esp, 0Ch
mov	ecx, 1FFh
jmp	short loc_10098C93
lea	edx, [esp+78h+var_60]
push	edx		
push	ebx		
push	offset aNull	
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	ecx, 3CFh
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_10098CAB
mov	edx, [eax+4]
mov	[esp+74h+var_10], edx
mov	[esp+74h+var_1C], ecx
jmp	loc_10098F52
mov	edx, [esp+74h+var_60]
push	edi
lea	eax, [esp+78h+var_30]
push	eax
lea	ecx, [esp+7Ch+var_48]
push	ecx
push	ebx
push	edx
call	sub_10098140
add	esp, 14h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_10098CE0
mov	ecx, [eax+4]
mov	[esp+74h+var_10], ecx
mov	[esp+74h+var_1C], 3D1h
jmp	loc_10098F52
lea	edx, [esp+74h+var_58]
push	edx
mov	edx, [esp+78h+var_48]
lea	eax, [esp+78h+var_40]
push	eax
lea	ecx, [esp+7Ch+var_44]
push	ecx
push	edx
call	sub_100069D0
add	esp, 10h
test	eax, eax
jnz	loc_10098E62
mov	eax, [esp+74h+var_44]
cmp	eax, ebx
jz	loc_10098E62
cmp	[esp+74h+var_58], ebx
jz	loc_10098E62
mov	edx, [esp+74h+var_40]
lea	ecx, [esp+74h+var_54]
push	ecx
push	edx
push	eax
mov	eax, [esp+80h+var_64]
mov	ecx, [eax]
call	ecx
add	esp, 0Ch
test	eax, eax
jz	short loc_10098D69
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10098D54
mov	edx, [esp+74h+var_C]
push	edi
push	2
push	edx
push	ebx
push	219h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 219h
jmp	loc_10098F68
mov	eax, [esp+74h+var_54]
lea	ecx, [esp+74h+var_50]
push	ecx
push	esi
mov	[ebp+1Ch], eax
call	ds:PR_SecondsToInterval
mov	edx, [esp+7Ch+var_58]
mov	ecx, [esp+7Ch+var_64]
add	esp, 4
push	eax
mov	eax, [esp+7Ch+var_54]
push	offset aGet	
push	edx
mov	edx, [ecx+0Ch]
push	offset aHttp_1	
push	eax
call	edx
add	esp, 18h
test	eax, eax
jz	short loc_10098DD9
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10098DC4
mov	ecx, [esp+74h+var_C]
push	edi
push	2
push	ecx
push	ebx
push	226h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 226h
jmp	loc_10098F68
mov	edx, [esp+74h+var_50]
mov	[ebp+20h], edx
mov	eax, [ebp+18h]
cmp	word ptr [eax],	1
jnz	loc_10098E97
mov	ecx, [edi+14h]
mov	[esp+74h+arg_0], ecx
lea	edx, [esp+74h+arg_0]
push	edx
lea	ecx, [esp+78h+var_3C]
push	ecx
push	ebx
lea	edx, [esp+80h+var_38]
push	edx
lea	esi, [eax+4]
mov	eax, [ebp+20h]
lea	ecx, [esp+84h+var_34]
push	ecx
lea	edx, [esp+88h+var_4C]
push	edx
mov	[esp+8Ch+var_50], eax
push	eax
mov	eax, [esi+18h]
mov	[esp+90h+var_64], esi
call	eax
add	esp, 1Ch
test	eax, eax
jz	loc_10098ECC
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10098DC4
mov	ecx, [esp+74h+var_C]
push	edi
push	2
push	ecx
push	ebx
push	226h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 226h
jmp	loc_10098F68
			
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10098E82
mov	ecx, [esp+74h+var_C]
push	edi
push	2
push	ecx
push	ebx
push	40Eh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 40Eh
jmp	loc_10098F68
			
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10098EB7
mov	edx, [esp+74h+var_C]
push	edi
push	2
push	edx
push	ebx
push	40Ch
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 40Ch
jmp	loc_10098F68
mov	eax, [esp+74h+var_4C]
cmp	eax, ebx
jz	short loc_10098EE3
mov	edx, [esp+74h+arg_8]
mov	[edx], eax
mov	eax, [esp+74h+var_28]
jmp	short loc_10098F52
mov	eax, [esp+74h+arg_C]
mov	ecx, [esp+74h+arg_0]
mov	edx, [esp+74h+var_3C]
push	edi
push	eax
mov	eax, [esp+7Ch+var_38]
push	ecx
mov	ecx, [esp+80h+var_34]
push	edx
push	eax
push	ecx
call	sub_10099DD0
add	esp, 18h
mov	[esp+74h+var_28], eax
cmp	eax, ebx
jz	short loc_10098F21
mov	edx, [eax+4]
mov	[esp+74h+var_10], edx
mov	[esp+74h+var_1C], 217h
jmp	short loc_10098F52
mov	ecx, [ebp+20h]
cmp	ecx, ebx
jz	short loc_10098F38
mov	eax, [esi+20h]
push	ecx
call	eax
mov	eax, [esp+78h+var_28]
add	esp, 4
mov	[ebp+20h], ebx
mov	ecx, [ebp+1Ch]
cmp	ecx, ebx
jz	short loc_10098F4F
push	ecx
mov	ecx, [esi+8]
call	ecx
mov	eax, [esp+78h+var_28]
add	esp, 4
mov	[ebp+1Ch], ebx
mov	[ebp+18h], ebx
			
cmp	[esp+74h+var_18], ebx
jnz	short loc_10098F68
cmp	eax, ebx
jnz	short loc_10098F68
cmp	[esp+74h+var_14], ebx
jnz	short loc_10098F68
cmp	[esp+74h+var_4], ebx
jz	short loc_10098F99
			
mov	eax, [ebp+20h]
cmp	eax, ebx
jz	short loc_10098F7F
push	eax
mov	eax, [esp+78h+var_64]
mov	ecx, [eax+20h]
call	ecx
add	esp, 4
mov	[ebp+20h], ebx
mov	eax, [ebp+1Ch]
cmp	eax, ebx
jz	short loc_10098F96
mov	edx, [esp+74h+var_64]
push	eax
mov	eax, [edx+8]
call	eax
add	esp, 4
mov	[ebp+1Ch], ebx
mov	[ebp+18h], ebx
mov	eax, [esp+74h+var_5C]
cmp	eax, ebx
jz	short loc_10098FCA
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10098FC6
push	edi
push	eax
lea	ecx, [esp+7Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_5C], ebx
mov	eax, [esp+74h+var_60]
cmp	eax, ebx
jz	short loc_10098FFB
push	edi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+74h+var_24], eax
cmp	eax, ebx
jz	short loc_10098FF7
push	edi
push	eax
lea	edx, [esp+7Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+74h+var_24], ebx
mov	[esp+74h+var_60], ebx
mov	eax, [esp+74h+var_48]
cmp	eax, ebx
jz	short loc_1009900C
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+74h+var_44]
cmp	eax, ebx
jz	short loc_1009901D
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+74h+var_58]
cmp	eax, ebx
jz	short loc_1009902E
push	eax
call	PORT_Free_Util
add	esp, 4
push	edi
push	1
lea	eax, [esp+7Ch+var_2C]
push	ebx
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 64h
retn
			
mov	ecx, [esp+74h+arg_10]
push	ecx
push	1
lea	edx, [esp+7Ch+var_2C]
push	1Fh
push	edx
mov	[esp+84h+var_18], 1
mov	[esp+84h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 64h
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
xor	ebx, ebx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_2C], offset aPkix_pl_aiam_0 
mov	[esp+3Ch+var_C], ebx
cmp	edi, ebx
jnz	short loc_100990DD
mov	eax, [esp+3Ch+arg_4]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	esi, [esp+3Ch+arg_4]
push	esi
lea	edx, [esp+40h+var_30]
push	edx
push	28h
push	ebx
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009910B
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 121h
jmp	short loc_1009914F
mov	ecx, [esp+3Ch+var_30]
mov	[ecx], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+4], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+8], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+0Ch], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+10h], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+14h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[ecx+18h], ebx
mov	edx, [esp+3Ch+var_30]
mov	[edx+1Ch], ebx
mov	eax, [esp+3Ch+var_30]
mov	[eax+20h], ebx
mov	ecx, [esp+3Ch+var_30]
mov	[edi], ecx
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	ebx
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 44h
push	ebx
push	ebp
mov	ebp, [esp+4Ch+arg_0]
push	esi
xor	ebx, ebx
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+54h+var_2C]
rep movsd
mov	[esp+54h+var_3C], ebx
mov	[esp+54h+var_34], ebx
mov	[esp+54h+var_40], ebx
mov	[esp+54h+var_44], ebx
mov	[esp+54h+var_2C], offset aPkix_pl_aiam_1 
mov	[esp+54h+var_C], ebx
cmp	ebp, ebx
jz	loc_10099606
mov	ecx, [esp+54h+arg_4]
cmp	ecx, ebx
jz	loc_10099606
mov	edx, [esp+54h+arg_8]
cmp	edx, ebx
jz	loc_10099606
mov	esi, [esp+54h+arg_C]
cmp	esi, ebx
jz	loc_10099606
mov	eax, [edx]
mov	[esi], ebx
mov	esi, [esp+54h+arg_10]
mov	[esp+54h+var_30], eax
mov	[edx], ebx
cmp	eax, ebx
jnz	short loc_10099264
push	esi
lea	edi, [ebp+0Ch]
push	edi
push	ecx
call	sub_100813E0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10099211
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 79h
jmp	loc_1009945D
mov	ecx, [edi]
cmp	ecx, ebx
jz	short loc_10099242
push	esi
lea	edx, [esp+58h+var_3C]
push	edx
push	ecx
call	sub_100757C0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jz	short loc_10099242
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 284h
jmp	loc_1009945D
			
cmp	[edi], ebx
jz	short loc_10099259
mov	ecx, [esp+54h+var_3C]
cmp	ecx, ebx
jz	short loc_10099259
mov	[ebp+4], ebx
mov	[ebp+8], ecx
mov	[ebp+14h], ebx
jmp	short loc_10099268
			
mov	edx, [esp+54h+arg_C]
mov	[edx], ebx
jmp	loc_1009945D
mov	eax, [esp+54h+var_28]
mov	edi, [ebp+4]
mov	[esp+54h+arg_0], edi
cmp	edi, [ebp+8]
jnb	loc_10099418
mov	ecx, [ebp+0Ch]
push	esi
lea	eax, [esp+58h+var_44]
push	eax
push	edi
push	ecx
mov	[esp+64h+var_38], ebx
call	sub_10075D80
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_1009957A
mov	eax, [esp+54h+var_44]
push	esi
lea	edx, [esp+58h+var_38]
push	edx
push	eax
call	sub_1008ABD0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_1009958E
mov	ecx, [esp+54h+var_38]
cmp	ecx, 2
jz	short loc_10099306
cmp	ecx, 5
jz	short loc_10099306
mov	ecx, [esp+54h+var_44]
cmp	ecx, ebx
jz	loc_1009940A
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100992F9
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
			
mov	eax, [esp+54h+var_28]
mov	[esp+54h+var_44], ebx
jmp	loc_1009940A
			
mov	eax, [esp+54h+var_44]
push	esi
lea	edx, [esp+58h+var_34]
push	edx
push	eax
call	sub_1008AD20
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_100995A2
cmp	[esp+54h+var_34], 1
jnz	loc_1009954C
mov	eax, [esp+54h+var_44]
push	esi
lea	ecx, [esp+58h+var_40]
push	ecx
lea	edx, [esp+5Ch+var_30]
push	edx
push	eax
push	ebp
call	sub_10098B30
add	esp, 14h
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_100995B6
mov	ecx, [esp+54h+var_30]
cmp	ecx, ebx
jnz	loc_100995CA
cmp	[ebp+14h], ebx
lea	edi, [ebp+14h]
jnz	short loc_1009937F
push	esi
push	edi
call	sub_100755D0
add	esp, 8
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_100995DE
mov	ecx, [esp+54h+var_40]
mov	edx, [edi]
push	esi
push	ecx
push	edx
call	sub_10077900
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebx
jnz	loc_100995F2
mov	ecx, [esp+54h+var_40]
cmp	ecx, ebx
jz	short loc_100993D1
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100993C9
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	eax, [esp+54h+var_28]
mov	[esp+54h+var_40], ebx
mov	ecx, [esp+54h+var_44]
cmp	ecx, ebx
jz	short loc_10099406
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100993FE
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	eax, [esp+54h+var_28]
mov	[esp+54h+var_44], ebx
mov	edi, [esp+54h+arg_0]
			
inc	edi
mov	[esp+54h+arg_0], edi
cmp	edi, [ebp+8]
jb	loc_10099278
mov	ecx, [ebp+0Ch]
cmp	ecx, ebx
jz	short loc_1009944B
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_10099444
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	eax, [esp+54h+var_28]
mov	[ebp+0Ch], ebx
mov	ecx, [esp+54h+arg_8]
mov	[ecx], ebx
mov	edx, [ebp+14h]
mov	ecx, [esp+54h+arg_C]
mov	[ecx], edx
mov	[ebp+14h], ebx
			
cmp	[esp+54h+var_18], ebx
jnz	short loc_10099473
cmp	eax, ebx
jnz	short loc_10099473
cmp	[esp+54h+var_14], ebx
jnz	short loc_10099473
cmp	[esp+54h+var_4], ebx
jz	short loc_100994D1
			
mov	eax, [ebp+0Ch]
cmp	eax, ebx
jz	short loc_100994A2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1009949F
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[ebp+0Ch], ebx
mov	eax, [ebp+14h]
cmp	eax, ebx
jz	short loc_100994D1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100994CE
push	esi
push	eax
lea	eax, [esp+5Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[ebp+14h], ebx
			
mov	eax, [esp+54h+var_40]
cmp	eax, ebx
jz	short loc_10099502
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_100994FE
push	esi
push	eax
lea	ecx, [esp+5Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_40], ebx
mov	eax, [esp+54h+var_44]
cmp	eax, ebx
jz	short loc_10099533
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	short loc_1009952F
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+54h+var_24], ebx
mov	[esp+54h+var_44], ebx
push	esi
push	1
lea	eax, [esp+5Ch+var_2C]
push	ebx
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
mov	ecx, [esp+54h+var_44]
cmp	ecx, ebx
jz	loc_1009940A
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+54h+var_24], eax
cmp	eax, ebx
jz	loc_100992F9
push	esi
push	eax
lea	edx, [esp+5Ch+var_2C]
push	edx
jmp	loc_100992ED
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 283h
jmp	loc_1009945D
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 234h
jmp	loc_1009945D
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 233h
jmp	loc_1009945D
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 6
jmp	loc_1009945D
mov	edx, [esp+54h+arg_8]
mov	[ebp+4], edi
mov	[edx], ecx
mov	ecx, [esp+54h+arg_C]
mov	[ecx], ebx
jmp	loc_1009945D
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 27Dh
jmp	loc_1009945D
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 0Dh
jmp	loc_1009945D
			
mov	ecx, [esp+54h+arg_10]
push	ecx
push	1
lea	edx, [esp+5Ch+var_2C]
push	1Fh
push	edx
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 44h
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
xor	ebx, ebx
mov	[esp+38h+var_2C], offset aPkix_pl_coll_0 
mov	[esp+38h+var_C], 13h
cmp	edi, ebx
jnz	short loc_1009969D
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	esi, [esp+38h+arg_4]
push	esi
push	11h
push	edi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, ebx
jz	short loc_100996C9
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2ECh
jmp	loc_10099754
mov	eax, [edi]
cmp	eax, ebx
jz	short loc_100996F6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_100996F4
push	esi
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi], ebx
mov	eax, [edi+4]
cmp	eax, ebx
jz	short loc_10099725
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10099722
push	esi
push	eax
lea	ecx, [esp+40h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+4], ebx
mov	eax, [edi+8]
cmp	eax, ebx
jz	short loc_10099754
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, ebx
jz	short loc_10099751
push	esi
push	eax
lea	edx, [esp+40h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], ebx
mov	[edi+8], ebx
			
push	esi
push	1
lea	eax, [esp+40h+var_2C]
push	13h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 30h
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	esi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_coll_1 
mov	[esp+3Ch+var_C], 13h
test	esi, esi
jz	loc_10099859
mov	ebx, [esp+3Ch+arg_4]
test	ebx, ebx
jz	loc_10099859
mov	edi, [esp+3Ch+arg_8]
push	edi
push	11h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_100997F6
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+44h+var_2C]
push	13h
push	edx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 2ECh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	edx, [esi]
push	edi
lea	ecx, [esp+40h+var_30]
push	ecx
push	edx
call	sub_10095A20
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_10099837
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+44h+var_2C]
push	13h
push	edx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 3D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
mov	ecx, [esp+3Ch+var_30]
push	edi
push	1
lea	edx, [esp+44h+var_2C]
shl	ecx, 7
push	13h
push	edx
mov	[ebx], ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	edi, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_coll_2 
mov	[esp+3Ch+var_C], 13h
test	edi, edi
jz	loc_10099967
mov	esi, [esp+3Ch+arg_4]
test	esi, esi
jz	loc_10099967
mov	ebp, [esp+3Ch+arg_8]
test	ebp, ebp
jz	loc_10099967
push	ebx
mov	ebx, [esp+40h+arg_C]
push	ebx
push	11h
push	esi
push	edi
call	sub_100724E0
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1009990D
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 2ECh
jmp	short loc_10099924
mov	eax, [edi]
mov	ecx, [esi]
cmp	eax, ecx
jnz	short loc_1009993E
mov	[esp+40h+var_30], 1
mov	ecx, [esp+40h+var_30]
mov	[ebp+0], ecx
			
push	ebx
push	1
lea	edx, [esp+48h+var_2C]
push	13h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
push	ebx
lea	edx, [esp+44h+var_30]
push	edx
push	ecx
push	eax
call	sub_10095750
add	esp, 10h
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1009991D
mov	eax, [eax+4]
mov	[esp+40h+var_10], eax
mov	[esp+40h+var_1C], 3D0h
jmp	short loc_10099924
			
mov	eax, [esp+3Ch+arg_C]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 50h
push	esi
push	edi
xor	eax, eax
mov	[esp+58h+var_4C], eax
mov	[esp+58h+var_38], eax
mov	[esp+58h+var_34], eax
mov	[esp+58h+var_30], eax
mov	eax, [esp+58h+arg_0]
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB484
push	1
mov	[esp+60h+var_50], offset aCollectioncert 
mov	[esp+60h+var_48], 0Ch
mov	[esp+60h+var_44], offset sub_10099640
mov	[esp+60h+var_40], offset sub_10099890
mov	[esp+60h+var_3C], offset sub_10099770
rep movsd
lea	ecx, [esp+60h+var_2C]
push	13h
push	ecx
mov	[esp+68h+var_2C], offset aPkix_pl_collec 
mov	[esp+68h+var_C], 13h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 50h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_http_2 
mov	[esp+34h+var_C], 23h
test	esi, esi
jnz	short loc_10099A89
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
push	ebp
mov	ebp, [esp+38h+arg_4]
push	ebp
push	1Fh
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_10099AB3
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2D6h
jmp	short loc_10099AFA
mov	eax, [esi+8]
mov	edi, [esi]
test	eax, eax
jz	short loc_10099ACC
push	eax
mov	eax, [edi+20h]
call	eax
add	esp, 4
mov	dword ptr [esi+8], 0
mov	eax, [esi+4]
test	eax, eax
jz	short loc_10099AE3
mov	ecx, [edi+8]
push	eax
call	ecx
add	esp, 4
mov	dword ptr [esi+4], 0
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_10099AFA
push	eax
call	PORT_Free_Util
add	esp, 4
mov	dword ptr [esi+0Ch], 0
			
push	ebp
push	1
lea	edx, [esp+40h+var_2C]
push	23h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
push	eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
push	1
lea	ecx, [esp+3Ch+var_2C]
push	23h
push	ecx
mov	[esp+44h+var_2C], offset aPkix_pl_httpce 
mov	[esp+44h+var_C], 23h
mov	dword_100BB67C,	offset aHttpcertstorec 
mov	dword_100BB684,	10h
mov	dword_100BB688,	offset sub_10099A30
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
mov	eax, [esp+4]
push	ebp
push	edi
xor	edi, edi
test	eax, eax
jz	short loc_10099BFB
mov	ebp, [esp+10h]
test	ebp, ebp
jz	short loc_10099BFB
push	ebx
mov	ebx, [eax]
push	esi
mov	esi, [eax+8]
cmp	[esp+1Ch], edi
jle	short loc_10099BCF
mov	eax, [ebp+edi*4+0]
push	esi
push	ebx
push	eax
call	sub_1007D560
add	esp, 0Ch
test	eax, eax
jz	short loc_10099BC8
cmp	dword ptr [eax+4], 1Fh
jz	short loc_10099BD6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
test	eax, eax
jnz	short loc_10099BE5
inc	edi
cmp	edi, [esp+1Ch]
jl	short loc_10099BA1
pop	esi
pop	ebx
pop	edi
xor	eax, eax
pop	ebp
retn
mov	ecx, [esp+14h]
pop	esi
pop	ebx
pop	edi
mov	[ecx+4], eax
or	eax, 0FFFFFFFFh
pop	ebp
retn
mov	edx, [esp+14h]
pop	esi
pop	ebx
mov	dword ptr [eax+4], 1Fh
pop	edi
mov	[edx+4], eax
or	eax, 0FFFFFFFFh
pop	ebp
retn
			
pop	edi
or	eax, 0FFFFFFFFh
pop	ebp
retn
align 10h
push	offset aSmime3_dll 
call	ds:PR_LoadLibrary
add	esp, 4
mov	dword_100BAEB4,	eax
test	eax, eax
jnz	short loc_10099C2B
or	eax, 0FFFFFFFFh
retn
push	offset aCert_decodec_0 
push	eax
call	ds:PR_FindFunctionSymbol
mov	dword_100BAEB0,	eax
add	esp, 8
neg	eax
sbb	eax, eax
neg	eax
dec	eax
retn
align 10h
mov	eax, dword_100BAEB4
test	eax, eax
jz	short loc_10099C6D
push	eax
call	ds:PR_UnloadLibrary
add	esp, 4
mov	dword_100BAEB4,	0
mov	eax, ds:dword_100B0578
mov	ecx, ds:dword_100B057C
mov	edx, ds:dword_100B0580
mov	dword_100BAEB0,	0
mov	dword_100BAEB8,	eax
mov	dword_100BAEBC,	ecx
mov	dword_100BAEC0,	edx
retn
align 10h
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_pl_http_1 
mov	[esp+38h+var_C], 23h
test	ebx, ebx
jz	loc_10099D9C
mov	edi, [esp+38h+arg_8]
test	edi, edi
jz	loc_10099D9C
push	offset loc_10099C10
push	offset dword_100BAEB8
call	ds:PR_CallOnce
mov	esi, [esp+40h+arg_10]
add	esp, 8
test	eax, eax
jz	short loc_10099D21
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10099D17
mov	ecx, [esp+38h+var_C]
push	esi
push	2
push	ecx
push	0
push	4Ch
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+38h+var_1C], 4Ch
jmp	short loc_10099D7B
mov	eax, dword_100BAEB0
test	eax, eax
jnz	short loc_10099D3D
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10099D17
mov	edx, [esp+38h+var_C]
push	esi
push	2
push	edx
jmp	short loc_10099D0A
mov	ecx, [esp+38h+arg_C]
mov	edx, [esp+38h+arg_4]
push	ecx
push	edi
push	edx
push	ebx
call	eax 
add	esp, 10h
test	eax, eax
jz	short loc_10099D83
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_10099D73
mov	ecx, [esp+38h+var_C]
push	esi
push	2
push	ecx
push	0
push	3B0h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+38h+var_1C], 3B0h
mov	[esp+38h+var_18], 1
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	23h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	eax, [esp+38h+arg_10]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 38h
push	ebx
push	ebp
mov	ebp, [esp+40h+arg_10]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	esi, [esp+48h+arg_14]
xor	ebx, ebx
mov	[esp+48h+var_2C], offset aPkix_pl_http_0 
mov	[esp+48h+var_C], 23h
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_30], esi
mov	[esp+48h+var_38], ebx
cmp	ebp, ebx
jnz	short loc_10099E3B
push	esi
push	1
lea	eax, [esp+50h+var_2C]
push	1Fh
push	eax
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
mov	ecx, 0C8h
cmp	[esp+48h+arg_0], cx
jz	short loc_10099EBC
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10099E61
push	esi
push	2
push	23h
push	ebx
push	17h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 17h
			
mov	eax, [esp+48h+var_38]
cmp	eax, ebx
jz	short loc_10099EA2
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10099E9E
push	esi
push	eax
lea	edx, [esp+50h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
			
mov	[esp+48h+var_38], ebx
push	esi
push	1
lea	eax, [esp+50h+var_2C]
push	23h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 38h
retn
cmp	[esp+48h+arg_4], ebx
jnz	short loc_10099EF1
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10099EDF
push	esi
push	2
push	23h
push	ebx
push	2A7h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2A7h
jmp	short loc_10099E71
mov	edi, [esp+48h+arg_8]
cmp	edi, ebx
jnz	short loc_10099F2B
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_10099F16
push	esi
push	2
push	23h
push	ebx
push	2AAh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2AAh
jmp	loc_10099E71
lea	edx, [esp+48h+var_38]
push	esi
push	edx
call	sub_100755D0
add	esp, 8
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10099F55
mov	eax, [eax+4]
mov	[esp+48h+var_10], eax
mov	[esp+48h+var_1C], 27Dh
jmp	loc_10099E71
mov	edx, [esp+48h+arg_C]
push	esi
lea	ecx, [esp+4Ch+var_38]
push	ecx
push	offset loc_10099B80
push	edx
push	edi
mov	[esp+5Ch+var_14], ebx
call	sub_10099CA0
add	esp, 14h
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_10099FBB
mov	[esp+48h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+48h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_10099E71
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+48h+var_24], eax
cmp	eax, ebx
jz	short loc_10099FB7
push	esi
push	eax
lea	eax, [esp+50h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+48h+var_24], ebx
mov	[esp+48h+var_28], ebx
mov	eax, [esp+48h+var_34]
cmp	eax, ebx
jz	short loc_10099FCC
mov	[esp+48h+var_28], eax
jmp	loc_10099E71
mov	ecx, [esp+48h+var_38]
mov	[ebp+0], ecx
jmp	loc_10099E9E
align 10h
sub	esp, 3Ch
push	ebx
push	ebp
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	edi, [esp+4Ch+Src]
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_34], ebx
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_2C], offset aPkix_httpcerts 
mov	[esp+4Ch+var_C], 11h
cmp	edi, ebx
jz	loc_1009A1FF
mov	ebp, [esp+4Ch+arg_C]
cmp	ebp, ebx
jz	loc_1009A1FF
cmp	[esp+4Ch+arg_10], ebx
jz	loc_1009A1FF
mov	esi, [esp+4Ch+arg_14]
push	esi		
lea	eax, [esp+50h+var_38]
push	eax		
push	ebx		
push	offset aSD_0	
push	ebx		
mov	[ebp+0], ebx
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009A073
mov	ecx, [eax+4]
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 3CFh
jmp	loc_1009A121
push	esi		
lea	edx, [esp+50h+var_34]
push	edx		
push	ebx		
push	edi		
push	ebx		
call	sub_10097D90
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009A0A0
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 3CFh
jmp	loc_1009A121
mov	edi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+var_34]
mov	eax, [esp+4Ch+var_38]
movzx	ecx, di
push	ecx
push	edx
push	eax
lea	ecx, [esp+58h+var_30]
push	esi
push	ecx
call	sub_10098590
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009A0D9
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CFh
jmp	short loc_1009A121
cmp	[esp+4Ch+var_3C], ebx
jnz	short loc_1009A113
mov	ecx, [esp+4Ch+Src]
mov	edx, [esp+4Ch+arg_0]
push	esi		
lea	eax, [esp+50h+var_3C]
push	eax		
push	ebp		
push	edi		
push	ecx		
push	edx		
push	ebx		
call	sub_1009F670
add	esp, 1Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009A113
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 3BFh
jmp	short loc_1009A121
			
mov	edx, [esp+4Ch+var_3C]
mov	ecx, [esp+4Ch+arg_10]
mov	[ecx], edx
mov	[esp+4Ch+var_3C], ebx
			
mov	eax, [esp+4Ch+var_38]
cmp	eax, ebx
jz	short loc_1009A152
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1009A14E
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_38], ebx
mov	eax, [esp+4Ch+var_34]
cmp	eax, ebx
jz	short loc_1009A183
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1009A17F
push	esi
push	eax
lea	ecx, [esp+54h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_34], ebx
mov	eax, [esp+4Ch+var_30]
cmp	eax, ebx
jz	short loc_1009A1B4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1009A1B0
push	esi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_30], ebx
mov	eax, [esp+4Ch+var_3C]
cmp	eax, ebx
jz	short loc_1009A1E5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1009A1E1
push	esi
push	eax
lea	eax, [esp+54h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+4Ch+var_24], ebx
mov	[esp+4Ch+var_3C], ebx
push	esi
push	1
lea	ecx, [esp+54h+var_2C]
push	11h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	edx, [esp+4Ch+arg_14]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
			
sub	esp, 3Ch
push	ebx
push	ebp
mov	ebp, [esp+44h+arg_0]
push	esi
push	edi
mov	ebx, eax
xor	eax, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	[esp+4Ch+arg_0], 0FFFFFFFFh
mov	[esp+4Ch+Dst], eax
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_2C], offset aPkix_pl_http_6 
mov	[esp+4Ch+var_C], 24h
cmp	ebp, eax
jz	loc_1009A655
mov	esi, [esp+4Ch+arg_4]
cmp	esi, eax
jz	loc_1009A655
mov	edx, off_100BA808
mov	[esi], eax
mov	eax, [ebp+1Ch]
cmp	eax, 4
jbe	short loc_1009A2A3
add	eax, 0FFFFFFFCh
lea	ecx, [eax+ebx]
push	ecx
mov	ecx, [ebp+48h]
push	edx
add	ecx, eax
push	ecx
jmp	short loc_1009A2A9
mov	eax, [ebp+48h]
push	ebx
push	edx
push	eax
call	PL_strnstr
add	[ebp+1Ch], ebx
add	esp, 0Ch
mov	[esp+4Ch+var_38], eax
test	eax, eax
jnz	short loc_1009A2E7
mov	eax, [esp+4Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	24h
mov	dword ptr [ebp+0], 4
push	ecx
mov	dword ptr [esi], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	ecx, [esp+4Ch+arg_8]
mov	esi, eax
sub	esi, [ebp+48h]
push	ecx
lea	edx, [esp+50h+Dst]
push	edx
lea	eax, [esi+1]
push	eax
mov	[esp+58h+var_30], esi
call	sub_10094350
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
test	eax, eax
jz	short loc_1009A33B
mov	ecx, [eax+4]
mov	eax, [esp+4Ch+arg_8]
push	eax
push	1
mov	[esp+54h+var_10], ecx
lea	ecx, [esp+54h+var_2C]
push	24h
push	ecx
mov	[esp+5Ch+var_1C], 299h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	edx, [ebp+48h]
mov	eax, [esp+4Ch+Dst]
push	esi		
push	edx		
push	eax		
call	memcpy
mov	ecx, [esp+58h+Dst]
mov	byte ptr [ecx+esi], 0
mov	eax, [ebp+70h]
mov	ecx, [esp+58h+Dst]
add	esp, 0Ch
mov	[ebp+58h], ecx
test	eax, eax
jz	short loc_1009A365
mov	[eax], ecx
mov	edx, [ebp+18h]
mov	eax, off_100BA80C
mov	ecx, [ebp+48h]
push	edx
push	eax
push	ecx
call	PL_strnstr
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_1009A3B3
push	0FFFFE077h
mov	dword ptr [ebp+0], 9
call	PORT_SetError_Util
mov	eax, [esp+50h+arg_8]
add	esp, 4
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	24h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	ebx, ds:strchr
mov	byte ptr [edi],	0
mov	edx, [ebp+48h]
push	20h		
push	edx		
call	ebx 
mov	esi, eax
add	esp, 8
test	esi, esi
jnz	short loc_1009A3F2
			
mov	eax, [esp+4Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	24h
push	ecx
mov	dword ptr [ebp+0], 9
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	eax, off_100BA810
mov	ecx, [ebp+48h]
push	5
push	eax
push	ecx
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1009A3CD
inc	esi
push	20h		
push	esi		
call	ebx 
add	esp, 8
test	eax, eax
jz	short loc_1009A3CD
push	esi		
mov	byte ptr [eax],	0
call	ds:atoi
add	esp, 4
mov	[ebp+20h], eax
cmp	eax, 0C8h
jnz	short loc_1009A3CD
mov	edx, [esp+4Ch+var_38]
add	edi, 2
mov	byte ptr [edx],	0
push	3Ah		
push	edi		
call	ebx 
add	esp, 8
test	eax, eax
jz	short loc_1009A3CD
lea	esi, [eax+1]
mov	byte ptr [eax],	0
cmp	byte ptr [esi],	20h
jnz	loc_1009A3CD
mov	eax, off_100BA80C
push	eax		
inc	esi
push	esi		
call	ds:strstr
mov	ebx, eax
add	esp, 8
test	ebx, ebx
jz	short loc_1009A46D
mov	byte ptr [ebx],	0
push	offset aContentType 
push	edi
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jnz	short loc_1009A4AD
push	esi
call	PORT_Strdup_Util
add	esp, 4
mov	[ebp+54h], eax
mov	eax, [esp+4Ch+arg_0]
test	ebx, ebx
jz	short loc_1009A4CF
lea	edi, [ebx+2]
test	edi, edi
jz	short loc_1009A4CF
mov	ecx, [esp+4Ch+var_38]
add	ecx, 2
cmp	edi, ecx
jnb	short loc_1009A4CF
mov	ebx, ds:strchr
jmp	short loc_1009A438
push	offset aContentLength 
push	edi
call	PL_strcasecmp
add	esp, 8
test	eax, eax
jnz	short loc_1009A48B
push	esi		
call	ds:atoi
add	esp, 4
mov	[esp+4Ch+arg_0], eax
jmp	short loc_1009A48F
			
mov	ecx, [ebp+6Ch]
test	ecx, ecx
jz	short loc_1009A4DB
mov	edx, [ebp+54h]
mov	[ecx], edx
cmp	dword ptr [ebp+54h], 0
jz	loc_1009A3CD
mov	esi, [esp+4Ch+var_30]
add	esi, 4
sub	[ebp+1Ch], esi
mov	edx, [ebp+1Ch]
cmp	eax, 0FFFFFFFFh
jz	short loc_1009A541
test	eax, eax
jz	short loc_1009A524
mov	ecx, [ebp+24h]
mov	[ebp+14h], eax
test	ecx, ecx
jz	short loc_1009A50D
cmp	ecx, eax
jb	loc_1009A3CD
cmp	edx, eax
jb	short loc_1009A572
mov	edx, [esp+4Ch+arg_4]
mov	dword ptr [ebp+0], 8
mov	dword ptr [edx], 0
jmp	short loc_1009A583
mov	eax, [esp+4Ch+arg_4]
mov	dword ptr [ebp+14h], 0
mov	dword ptr [ebp+0], 8
mov	dword ptr [eax], 0
jmp	loc_1009A5EA
mov	eax, [ebp+24h]
lea	ecx, [edx+1000h]
mov	dword ptr [ebp+14h], 0FFFFFFFFh
mov	[esp+4Ch+arg_0], ecx
test	eax, eax
jz	short loc_1009A56B
cmp	ecx, eax
jbe	short loc_1009A56B
cmp	edx, eax
jnb	loc_1009A3CD
mov	[esp+4Ch+arg_0], eax
mov	ecx, eax
			
mov	eax, [esp+4Ch+arg_0]
mov	[ebp+18h], ecx
mov	ecx, [esp+4Ch+arg_4]
mov	dword ptr [ebp+0], 6
mov	dword ptr [ecx], 1
test	eax, eax
jle	short loc_1009A5EA
mov	edx, [esp+4Ch+arg_8]
push	edx
lea	ecx, [esp+50h+var_34]
push	ecx
push	eax
call	sub_10094350
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
test	eax, eax
jz	short loc_1009A5CF
mov	edx, [eax+4]
mov	eax, [esp+4Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	24h
push	ecx
mov	[esp+5Ch+var_10], edx
mov	[esp+5Ch+var_1C], 299h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	eax, [ebp+1Ch]
test	eax, eax
jz	short loc_1009A5EA
mov	ecx, [esp+4Ch+var_34]
push	eax		
mov	eax, [ebp+48h]
add	eax, esi
push	eax		
push	ecx		
call	memcpy
add	esp, 0Ch
			
mov	edx, [esp+4Ch+arg_8]
mov	eax, [ebp+48h]
push	edx
push	eax
call	sub_10094630
add	esp, 8
mov	[esp+4Ch+var_28], eax
test	eax, eax
jz	short loc_1009A630
mov	ecx, [eax+4]
mov	eax, [esp+4Ch+arg_8]
push	eax
push	1
mov	[esp+54h+var_10], ecx
lea	ecx, [esp+54h+var_2C]
push	24h
push	ecx
mov	[esp+5Ch+var_1C], 1F9h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
mov	eax, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+var_34]
push	eax
push	1
lea	ecx, [esp+54h+var_2C]
push	24h
push	ecx
mov	[ebp+48h], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
			
mov	edx, [esp+4Ch+arg_8]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
xor	edi, edi
mov	[esp+34h+var_2C], offset aPkix_pl_http_3 
mov	[esp+34h+var_C], 24h
cmp	esi, edi
jnz	short loc_1009A6EB
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
push	ebx
mov	ebx, [esp+38h+arg_4]
push	ebx
push	20h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
cmp	eax, edi
jz	short loc_1009A718
mov	edx, [eax+4]
mov	[esp+38h+var_10], edx
mov	[esp+38h+var_1C], 2D7h
jmp	loc_1009A7D0
mov	eax, [esi+58h]
cmp	eax, edi
jz	short loc_1009A72C
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esi+58h], edi
mov	eax, [esi+54h]
cmp	eax, edi
jz	short loc_1009A73F
push	eax
call	PORT_Free_Util
add	esp, 4
mov	[esi+54h], edi
mov	eax, [esi+40h]
cmp	eax, edi
jz	short loc_1009A753
push	eax
call	ds:PR_smprintf_free
add	esp, 4
mov	[esi+40h], edi
mov	eax, [esi+44h]
cmp	eax, edi
jz	short loc_1009A767
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esi+44h], edi
mov	eax, [esi+48h]
cmp	eax, edi
jz	short loc_1009A77B
push	ebx
push	eax
call	sub_10094630
add	esp, 8
mov	[esi+48h], edi
mov	eax, [esi+4Ch]
cmp	eax, edi
jz	short loc_1009A78E
push	eax
call	PORT_Free_Util
add	esp, 4
mov	[esi+4Ch], edi
mov	eax, [esi+50h]
cmp	eax, edi
jz	short loc_1009A7A1
push	eax
call	PORT_Free_Util
add	esp, 4
mov	[esi+50h], edi
mov	eax, [esi+78h]
cmp	eax, edi
jz	short loc_1009A7D0
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+38h+var_24], eax
cmp	eax, edi
jz	short loc_1009A7CD
push	ebx
push	eax
lea	eax, [esp+40h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+38h+var_24], edi
mov	[esi+78h], edi
			
push	ebx
push	1
lea	ecx, [esp+40h+var_2C]
push	24h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	eax, 1
mov	word_100BAEC4, ax
mov	ecx, 9
mov	esi, offset off_100BA7E4
mov	edi, offset dword_100BAEC8
push	offset word_100BAEC4
mov	[esp+38h+var_2C], offset aPkix_pl_httpde 
mov	[esp+38h+var_C], 24h
mov	dword_100BB6A0,	offset aHttpdefaultcli 
mov	dword_100BB6A8,	80h
mov	dword_100BB6AC,	offset sub_1009A690
rep movsd
call	SEC_RegisterDefaultHttpClient
mov	ecx, [esp+38h+arg_0]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	24h
push	edx
call	sub_100781E0
add	esp, 14h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 34h
push	ebp
mov	ebp, [esp+38h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	[esp+40h+var_30], 0
mov	[esp+40h+var_2C], offset aPkix_pl_http_7 
mov	[esp+40h+var_C], 24h
push	ebp
test	ebx, ebx
jnz	short loc_1009A8DF
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
mov	eax, [ebx+3Ch]
mov	edx, [ebx+78h]
mov	eax, [eax+8]
lea	ecx, [esp+44h+var_34]
push	ecx
push	edx
call	eax
add	esp, 0Ch
mov	[esp+40h+var_28], eax
test	eax, eax
jz	short loc_1009A90C
mov	ecx, [eax+4]
mov	[esp+40h+var_10], ecx
mov	[esp+40h+var_1C], 3BDh
jmp	short loc_1009A965
mov	eax, [esp+40h+var_34]
test	eax, eax
jnz	short loc_1009A921
mov	dword ptr [ebx], 2
mov	eax, 1
jmp	short loc_1009A95F
cmp	eax, 0FFFFE8D2h
jz	short loc_1009A95B
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009A949
mov	edx, [esp+40h+var_C]
push	ebp
push	2
push	edx
push	0
push	3FEh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+40h+var_18], 1
mov	[esp+40h+var_1C], 3FEh
jmp	short loc_1009A965
mov	eax, [esp+40h+var_30]
mov	ecx, [esp+40h+arg_0]
mov	[ecx], eax
			
push	ebp
push	1
lea	edx, [esp+48h+var_2C]
push	24h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 34h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
xor	edx, edx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], edx
mov	[esp+3Ch+var_2C], offset aPkix_pl_http_8 
mov	[esp+3Ch+var_C], 24h
test	ebx, ebx
jz	loc_1009AA88
test	ebp, ebp
jz	loc_1009AA88
cmp	[esp+3Ch+arg_4], edx
jz	loc_1009AA88
mov	[ebp+0], edx
mov	eax, [ebx+40h]
xor	esi, esi
cmp	eax, esi
jnz	short loc_1009A9E3
cmp	[ebx+44h], esi
jz	loc_1009AA65
cmp	eax, esi
jz	short loc_1009A9E8
mov	edx, [ebx+28h]
jmp	short loc_1009A9EE
mov	eax, [ebx+44h]
mov	edx, [ebx+2Ch]
push	[esp+3Ch+arg_8]
mov	ecx, [ebx+3Ch]
mov	ecx, [ecx+0Ch]
lea	edi, [esp+40h+var_30]
push	edi
push	edx
push	eax
mov	eax, [ebx+78h]
push	eax
call	ecx
add	esp, 14h
mov	[esp+3Ch+var_28], eax
cmp	eax, esi
jz	short loc_1009AA3C
mov	ecx, [esp+3Ch+arg_8]
mov	edx, [eax+4]
push	ecx
push	1
mov	[esp+44h+var_10], edx
lea	edx, [esp+44h+var_2C]
push	24h
push	edx
mov	[esp+4Ch+var_1C], 3CAh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	edx, [esp+3Ch+var_30]
mov	[ebx+48h], esi
mov	[ebx+18h], esi
mov	[ebx+1Ch], esi
cmp	edx, esi
jl	short loc_1009AA5C
mov	dword ptr [ebx], 4
mov	dword ptr [ebp+0], 1
jmp	short loc_1009AA65
mov	dword ptr [ebx], 3
mov	[ebp+0], esi
			
mov	ecx, [esp+3Ch+arg_8]
mov	eax, [esp+3Ch+arg_4]
push	ecx
push	1
mov	[eax], edx
lea	edx, [esp+44h+var_2C]
push	24h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_http_9 
mov	[esp+3Ch+var_C], 24h
test	ebx, ebx
jz	loc_1009AB90
test	ebp, ebp
jz	loc_1009AB90
mov	edi, [esp+3Ch+arg_4]
test	edi, edi
jz	loc_1009AB90
mov	esi, [esp+3Ch+arg_8]
push	esi
mov	dword ptr [ebp+0], 0
mov	eax, [ebx+3Ch]
mov	edx, [ebx+78h]
mov	eax, [eax+14h]
push	0
lea	ecx, [esp+44h+var_30]
push	ecx
push	edx
call	eax
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009AB60
mov	ecx, [eax+4]
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	24h
push	edx
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 3C8h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
test	eax, eax
js	short loc_1009AB75
mov	dword ptr [ebx], 4
mov	dword ptr [ebp+0], 1
push	esi
push	1
lea	edx, [esp+44h+var_2C]
push	24h
push	edx
mov	[edi], eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
mov	eax, [esp+3Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_htt_10 
mov	[esp+3Ch+var_C], 24h
test	ebx, ebx
jz	loc_1009AD13
cmp	[esp+3Ch+arg_0], 0
jz	loc_1009AD13
add	dword ptr [ebx+18h], 400h
mov	eax, [ebx+18h]
push	ebp		
lea	esi, [ebx+48h]
push	esi		
push	eax		
mov	eax, [esi]
push	eax		
call	sub_10094520
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009AC50
mov	ecx, [eax+4]
push	ebp
push	1
mov	[esp+44h+var_10], ecx
lea	ecx, [esp+44h+var_2C]
push	24h
push	ecx
mov	[esp+4Ch+var_1C], 393h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	ecx, [ebx+1Ch]
mov	eax, [ebx+18h]
mov	edx, [ebx+3Ch]
mov	edx, [edx+10h]
push	ebp
sub	eax, ecx
lea	edi, [esp+40h+var_30]
push	edi
push	eax
mov	eax, [esi]
add	eax, ecx
mov	ecx, [ebx+78h]
push	eax
push	ecx
call	edx
add	esp, 14h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009ACA3
mov	eax, [eax+4]
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	24h
push	ecx
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 3C9h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
test	eax, eax
jle	short loc_1009ACEA
mov	ecx, [esp+3Ch+arg_0]
push	ebp
push	ecx
push	ebx
call	sub_1009A230
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009ACFA
mov	edx, [eax+4]
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	24h
push	ecx
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 21Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+arg_0]
mov	dword ptr [ebx], 5
mov	dword ptr [eax], 0
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	24h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebp
push	1
lea	edx, [esp+44h+var_2C]
push	1Fh
push	edx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	ebp
mov	ebp, [esp+34h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+3Ch+var_2C]
rep movsd
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_2C], offset aPkix_pl_htt_11 
mov	[esp+3Ch+var_C], 24h
test	ebx, ebx
jz	loc_1009AE32
mov	esi, [esp+3Ch+arg_0]
test	esi, esi
jz	loc_1009AE32
mov	eax, [ebx+3Ch]
mov	edx, [ebx+78h]
mov	eax, [eax+14h]
push	ebp
lea	ecx, [esp+40h+var_30]
push	ecx
push	0
push	edx
call	eax
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009ADCD
mov	ecx, [eax+4]
push	ebp
push	1
lea	eax, [esp+44h+var_2C]
push	24h
push	eax
mov	[esp+4Ch+var_10], ecx
mov	[esp+4Ch+var_1C], 3C8h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	eax, [esp+3Ch+var_30]
test	eax, eax
jle	short loc_1009AE13
add	[ebx+1Ch], eax
push	ebp
push	esi
push	ebx
call	sub_1009A230
add	esp, 0Ch
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009AE19
mov	edx, [eax+4]
push	ebp
push	1
lea	eax, [esp+44h+var_2C]
push	24h
push	eax
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 21Eh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
mov	dword ptr [esi], 0
push	ebp
push	1
lea	eax, [esp+44h+var_2C]
push	24h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
			
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	1Fh
push	ecx
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 30h
retn
align 10h
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_htt_12 
mov	[esp+38h+var_C], 24h
test	ebx, ebx
jz	loc_1009B076
cmp	[esp+38h+arg_0], 0
jz	loc_1009B076
mov	ecx, [ebx+14h]
mov	eax, [ebx+1Ch]
push	ebp
mov	ebp, [ebx+3Ch]
cmp	ecx, 0FFFFFFFFh
jz	short loc_1009AEBC
mov	edi, [esp+3Ch+arg_4]
sub	ecx, eax
mov	esi, ecx
jmp	loc_1009AFA9
mov	edi, [ebx+18h]
mov	edx, edi
sub	edx, eax
cmp	edx, 200h
jge	loc_1009AFA3
mov	esi, [ebx+24h]
lea	ecx, [edi+1000h]
test	esi, esi
jz	short loc_1009AEE2
cmp	ecx, esi
jbe	short loc_1009AEE2
mov	ecx, esi
			
cmp	ecx, eax
ja	short loc_1009AF61
mov	edi, [esp+3Ch+arg_4]
mov	[ebx+14h], eax
mov	eax, [esp+3Ch+arg_0]
mov	dword ptr [ebx], 9
mov	dword ptr [eax], 0
mov	eax, [esp+3Ch+var_28]
			
xor	esi, esi
cmp	eax, esi
jz	loc_1009B05D
cmp	dword ptr [eax], 388h
jnz	loc_1009B05D
cmp	dword ptr [ebx+14h], 0FFFFFFFFh
jnz	loc_1009B057
mov	edx, [ebx+1Ch]
mov	ecx, [esp+3Ch+arg_0]
push	edi
mov	[ebx+14h], edx
mov	dword ptr [ebx], 8
push	eax
mov	[ecx], esi
call	sub_100955D0
add	esp, 8
mov	[esp+3Ch+var_24], eax
cmp	eax, esi
jz	short loc_1009AF58
push	edi
push	eax
lea	edx, [esp+44h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_28], esi
jmp	loc_1009B05D
cmp	edi, ecx
jnb	short loc_1009AFA3
mov	edi, [esp+3Ch+arg_4]
lea	eax, [ebx+48h]
push	edi		
push	eax		
push	ecx		
mov	[ebx+18h], ecx
mov	ecx, [eax]
push	ecx		
call	sub_10094520
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009AF99
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 393h
jmp	loc_1009AF01
mov	eax, [ebx+1Ch]
mov	edx, [ebx+18h]
sub	edx, eax
jmp	short loc_1009AFA7
			
mov	edi, [esp+3Ch+arg_4]
mov	esi, edx
cmp	dword ptr [ebx], 7
push	edi
jnz	short loc_1009AFDE
mov	ecx, [ebx+78h]
mov	edx, [ebp+14h]
lea	eax, [esp+40h+var_30]
push	eax
push	0
push	ecx
call	edx
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009B012
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 3C8h
jmp	loc_1009AF01
mov	ecx, [ebx+48h]
lea	edx, [esp+40h+var_30]
push	edx
mov	edx, [ebx+78h]
add	ecx, eax
mov	eax, [ebp+10h]
push	esi
push	ecx
push	edx
call	eax
add	esp, 14h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009B012
mov	ecx, [eax+4]
mov	[esp+3Ch+var_10], ecx
mov	[esp+3Ch+var_1C], 3C9h
jmp	loc_1009AF01
			
mov	eax, [esp+3Ch+var_30]
test	eax, eax
jnz	short loc_1009B02C
mov	edx, [esp+3Ch+arg_0]
mov	dword ptr [ebx], 7
mov	dword ptr [edx], 1
jmp	short loc_1009B05D
add	[ebx+1Ch], eax
cmp	esi, eax
jg	short loc_1009B04B
cmp	dword ptr [ebx+14h], 0FFFFFFFFh
jz	short loc_1009B04B
mov	eax, [esp+3Ch+arg_0]
mov	dword ptr [ebx], 8
mov	dword ptr [eax], 0
jmp	short loc_1009B05D
			
mov	ecx, [esp+3Ch+arg_0]
mov	dword ptr [ecx], 1
jmp	short loc_1009B05D
mov	dword ptr [ebx], 9
			
push	edi
push	1
lea	eax, [esp+44h+var_2C]
push	24h
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	ecx, [esp+38h+arg_4]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 34h
push	ebx
push	ebp
mov	ebp, [esp+3Ch+arg_0]
push	esi
push	edi
mov	ebx, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
mov	eax, 1
rep movsd
mov	[esp+44h+var_34], eax
mov	[esp+44h+var_2C], offset aPkix_pl_htt_13 
mov	[esp+44h+var_C], 24h
test	ebx, ebx
jnz	short loc_1009B110
push	ebp
push	eax
mov	[esp+4Ch+var_18], eax
lea	eax, [esp+4Ch+var_2C]
push	1Fh
push	eax
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
			
mov	eax, [ebx]
dec	eax
cmp	eax, 8		
ja	loc_1009B238	
jmp	ds:off_1009B284[eax*4] 
			
lea	ecx, [esp+44h+var_34] 
push	ebp
push	ecx
call	sub_1009A880
add	esp, 8
mov	[esp+44h+var_28], eax
test	eax, eax
jz	loc_1009B21A
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 21Bh
jmp	loc_1009B269	
			
push	ebp		
lea	edx, [esp+48h+var_30]
push	edx
lea	eax, [esp+4Ch+var_34]
push	eax
call	sub_1009A980
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	loc_1009B21A
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 225h
jmp	loc_1009B269	
			
push	ebp		
lea	ecx, [esp+48h+var_30]
push	ecx
lea	edx, [esp+4Ch+var_34]
push	edx
call	sub_1009AAC0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1009B21A
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 224h
jmp	loc_1009B269	
			
lea	eax, [esp+44h+var_34] 
push	ebp
push	eax
call	sub_1009ABC0
add	esp, 8
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1009B21A
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 223h
jmp	loc_1009B269	
			
lea	ecx, [esp+44h+var_34] 
push	ebp
push	ecx
call	sub_1009AD40
add	esp, 8
mov	[esp+44h+var_28], eax
test	eax, eax
jz	short loc_1009B21A
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 222h
jmp	short loc_1009B269 
			
lea	edx, [esp+44h+var_34] 
push	ebp
push	edx
call	sub_1009AE60
add	esp, 8
mov	[esp+44h+var_28], eax
test	eax, eax
jnz	short loc_1009B227
			
cmp	[esp+44h+var_34], 0
jnz	loc_1009B110
jmp	short loc_1009B269 
mov	edx, [eax+4]
mov	[esp+44h+var_10], edx
mov	[esp+44h+var_1C], 221h
jmp	short loc_1009B269 
mov	eax, dword_100BAE9C 
test	eax, eax
jz	short loc_1009B259
mov	ecx, [esp+44h+var_C]
push	ebp
push	2
push	ecx
push	0
push	21Fh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 21Fh
			
push	ebp		
push	1
lea	edx, [esp+4Ch+var_2C]
push	24h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 4
dd offset loc_1009B151	
dd offset loc_1009B184
dd offset loc_1009B1B3
dd offset loc_1009B1DD
dd offset loc_1009B204
dd offset loc_1009B204
dd offset loc_1009B269
dd offset loc_1009B269
align 10h
sub	esp, 5Ch
push	ebx
push	ebp
mov	ebp, [esp+64h+arg_0]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+6Ch+var_2C]
rep movsd
mov	eax, 24h
mov	[esp+6Ch+var_5C], ebx
mov	[esp+6Ch+var_2C], offset aPkix_pl_http_4 
mov	[esp+6Ch+var_C], eax
cmp	ebp, ebx
jz	loc_1009B51C
cmp	[esp+6Ch+arg_8], ebx
jz	loc_1009B51C
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+6Ch+var_58]
rep movsd
mov	esi, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_38], eax
push	esi
lea	eax, [esp+70h+arg_0]
push	eax
push	80h
push	20h
mov	[esp+7Ch+arg_0], ebx
mov	[esp+7Ch+var_58], offset aPkix_pl_http_5 
call	sub_100952A0
add	esp, 10h
mov	[esp+6Ch+var_54], eax
cmp	eax, ebx
jz	short loc_1009B350
mov	ecx, [eax+4]
mov	[esp+6Ch+var_3C], ecx
mov	ecx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_48], 13Ah
jmp	loc_1009B472
mov	edx, [esp+6Ch+arg_0]
mov	[edx+8], ebx
mov	eax, [esp+6Ch+arg_0]
mov	dx, [esp+6Ch+arg_4]
mov	[eax], ebx
mov	ecx, [esp+6Ch+arg_0]
mov	[ecx+4], dx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+0Ch], ebx
mov	ecx, [esp+6Ch+arg_0]
mov	[ecx+10h], ebx
mov	edx, [esp+6Ch+arg_0]
mov	[edx+14h], ebx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+18h], ebx
mov	ecx, [esp+6Ch+arg_0]
mov	[ecx+1Ch], ebx
mov	edx, [esp+6Ch+arg_0]
mov	[edx+20h], ebx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+24h], ebx
mov	ecx, [esp+6Ch+arg_0]
mov	[ecx+28h], ebx
mov	edx, [esp+6Ch+arg_0]
mov	[edx+2Ch], ebx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+30h], ebx
mov	ecx, [esp+6Ch+arg_0]
mov	[ecx+3Ch], ebx
mov	edx, [esp+6Ch+arg_0]
mov	[edx+40h], ebx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+44h], ebx
mov	ecx, [esp+6Ch+arg_0]
push	ebp
mov	[ecx+48h], ebx
call	PORT_Strdup_Util
mov	edx, [esp+70h+arg_0]
mov	[edx+4Ch], eax
mov	ecx, [esp+70h+arg_0]
add	esp, 4
cmp	[ecx+4Ch], ebx
jnz	short loc_1009B416
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1009B408
mov	ecx, [esp+6Ch+var_38]
push	esi
push	2
push	ecx
push	ebx
push	ebx
push	eax
call	sub_10074820
mov	ecx, [esp+84h+arg_0]
add	esp, 18h
mov	[esp+6Ch+var_44], 1
mov	[esp+6Ch+var_48], ebx
jmp	short loc_1009B488
mov	[ecx+50h], ebx
mov	edx, [esp+6Ch+arg_0]
mov	[edx+54h], ebx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+58h], ebx
mov	ecx, [esp+6Ch+arg_0]
mov	[ecx+5Ch], ebx
mov	edx, [esp+6Ch+arg_0]
mov	[edx+60h], ebx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+64h], ebx
mov	ecx, [esp+6Ch+arg_0]
mov	[ecx+68h], ebx
mov	edx, [esp+6Ch+arg_0]
mov	[edx+6Ch], ebx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+70h], ebx
mov	ecx, [esp+6Ch+arg_0]
mov	[ecx+74h], ebx
mov	edx, [esp+6Ch+arg_0]
mov	[edx+78h], ebx
mov	eax, [esp+6Ch+arg_0]
mov	[eax+7Ch], esi
mov	ecx, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_5C], ecx
cmp	[esp+6Ch+var_44], ebx
jnz	short loc_1009B488
cmp	eax, ebx
jnz	short loc_1009B488
cmp	[esp+6Ch+var_40], ebx
jnz	short loc_1009B488
cmp	[esp+6Ch+var_30], ebx
jz	short loc_1009B4B5
			
cmp	ecx, ebx
jz	short loc_1009B4B5
push	esi
push	ecx
call	sub_100955D0
add	esp, 8
mov	[esp+6Ch+var_50], eax
cmp	eax, ebx
jz	short loc_1009B4B1
push	esi
push	eax
lea	ecx, [esp+74h+var_58]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+6Ch+var_50], ebx
mov	[esp+6Ch+arg_0], ebx
			
push	esi
push	1
lea	edx, [esp+74h+var_58]
push	24h
push	edx
call	sub_100781E0
add	esp, 10h
mov	[esp+6Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009B4F8
mov	eax, [eax+4]
push	esi
push	1
mov	[esp+74h+var_10], eax
lea	eax, [esp+74h+var_2C]
push	24h
push	eax
mov	[esp+7Ch+var_1C], 21Ch
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 5Ch
retn
mov	ecx, [esp+6Ch+arg_8]
mov	edx, [esp+6Ch+var_5C]
push	esi
push	1
lea	eax, [esp+74h+var_2C]
push	24h
push	eax
mov	[ecx], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 5Ch
retn
			
mov	ecx, [esp+6Ch+arg_C]
push	ecx
push	1
lea	edx, [esp+74h+var_2C]
push	1Fh
push	edx
mov	[esp+7Ch+var_18], 1
mov	[esp+7Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 5Ch
retn
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_htt_14 
mov	[esp+34h+var_C], 24h
test	eax, eax
jz	short loc_1009B5C3
cmp	[esp+34h+arg_4], 0
jz	short loc_1009B5C3
mov	esi, [esp+34h+arg_8]
push	esi
push	20h
push	eax
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_1009B5AB
mov	eax, [eax+4]
mov	[esp+34h+var_10], eax
mov	[esp+34h+var_1C], 3B2h
push	esi
push	1
lea	ecx, [esp+3Ch+var_2C]
push	24h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	edx, [esp+34h+arg_8]
push	edx
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Fh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 3Ch
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	esi, [esp+48h+arg_0]
mov	[esp+48h+var_3C], ebx
mov	[esp+48h+var_38], ebx
mov	[esp+48h+var_34], ebx
mov	[esp+48h+var_30], ebx
mov	[esp+48h+var_2C], offset aPkix_pl_htt_15 
mov	[esp+48h+var_C], 24h
cmp	esi, ebx
jz	loc_1009B90B
cmp	[esp+48h+arg_14], ebx
jz	loc_1009B90B
mov	edi, [esp+48h+arg_18]
push	edi
push	20h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+48h+var_28], eax
cmp	eax, ebx
jz	short loc_1009B67E
mov	eax, [eax+4]
push	edi
push	1
lea	edx, [esp+50h+var_2C]
push	24h
push	edx
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 3B2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
mov	ecx, [esp+48h+arg_4]
push	4
push	offset aHttp_1	
push	ecx
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jz	short loc_1009B6DF
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1009B6B6
mov	edx, [esp+48h+var_C]
push	edi
push	2
push	edx
push	ebx
push	408h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	edx, [esp+50h+var_2C]
push	24h
push	edx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 408h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
push	ebp
mov	ebp, [esp+4Ch+arg_C]
push	4
push	offset aPost	
push	ebp
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	short loc_1009B6FD
mov	[esi+5Ch], ebx
jmp	short loc_1009B71C
push	3
push	offset aGet	
push	ebp
call	PL_strncasecmp
add	esp, 0Ch
test	eax, eax
jnz	loc_1009B8C1
mov	dword ptr [esi+5Ch], 1
mov	eax, [esp+4Ch+arg_8]
cmp	eax, ebx
jz	short loc_1009B759
push	eax
call	PORT_Strdup_Util
add	esp, 4
mov	[esi+50h], eax
cmp	eax, ebx
jnz	short loc_1009B759
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1009B750
mov	ecx, [esp+4Ch+var_C]
push	edi
push	2
push	ecx
push	ebx
push	ebx
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_1C], ebx
jmp	loc_1009B8E9
			
mov	eax, [esp+4Ch+arg_10]
push	edi		
lea	edx, [esp+50h+var_3C]
push	edx		
movzx	edx, word ptr [esi+4]
lea	ecx, [esp+54h+var_30]
push	ecx		
mov	ecx, [esi+4Ch]
push	edx		
push	ecx		
push	eax		
mov	[esi+8], eax
call	sub_10099FE0
add	esp, 18h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009B7AE
mov	edx, [eax+4]
pop	ebp
push	edi
push	1
mov	[esp+50h+var_10], edx
lea	edx, [esp+50h+var_2C]
push	24h
push	edx
mov	[esp+58h+var_1C], 216h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
mov	eax, [esp+4Ch+var_3C]
push	edi
lea	ecx, [esp+50h+var_38]
push	ecx
push	eax
mov	[esi+78h], eax
call	sub_1009F9F0
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009B7F5
mov	edx, [eax+4]
pop	ebp
push	edi
push	1
mov	[esp+50h+var_10], edx
lea	edx, [esp+50h+var_2C]
push	24h
push	edx
mov	[esp+58h+var_1C], 3C5h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
mov	edx, [esp+4Ch+var_3C]
mov	eax, [esp+4Ch+var_38]
push	edi
lea	ecx, [esp+50h+var_34]
push	ecx
push	edx
mov	[esi+3Ch], eax
call	sub_1009FA70
add	esp, 0Ch
mov	[esp+4Ch+var_28], eax
cmp	eax, ebx
jz	short loc_1009B840
mov	eax, [eax+4]
pop	ebp
push	edi
push	1
lea	edx, [esp+50h+var_2C]
push	24h
push	edx
mov	[esp+58h+var_10], eax
mov	[esp+58h+var_1C], 3C6h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
mov	ecx, [esp+4Ch+var_34]
mov	[esi+34h], ecx
mov	ecx, [esp+4Ch+var_30]
xor	edx, edx
neg	ecx
sbb	ecx, ecx
add	ecx, 2
push	edi
push	esi
mov	[esi+38h], edx
mov	[esi+64h], ebx
mov	[esi+10h], ebx
mov	[esi+60h], ebx
mov	[esi], ecx
call	sub_10095450
add	esp, 8
mov	[esp+4Ch+var_24], eax
cmp	eax, ebx
jz	short loc_1009B8A1
push	edi
push	eax
lea	edx, [esp+54h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
pop	ebp
push	edi
push	1
lea	edx, [esp+50h+var_2C]
push	24h
push	edx
mov	[esp+58h+var_24], ebx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
mov	eax, [esp+4Ch+arg_14]
pop	ebp
push	edi
push	1
lea	edx, [esp+50h+var_2C]
push	24h
push	edx
mov	[eax], esi
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
mov	eax, dword_100BAE9C
cmp	eax, ebx
jz	short loc_1009B8E1
mov	ecx, [esp+4Ch+var_C]
push	edi
push	2
push	ecx
push	ebx
push	409h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+4Ch+var_1C], 409h
pop	ebp
push	edi
push	1
lea	edx, [esp+50h+var_2C]
push	24h
push	edx
mov	[esp+58h+var_18], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
			
mov	eax, [esp+48h+arg_18]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 3Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_htt_16 
mov	[esp+34h+var_C], 24h
test	esi, esi
jnz	short loc_1009B999
mov	eax, [esp+34h+arg_10]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_10]
push	edi
push	20h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_1009B9C2
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 397h
jmp	short loc_1009B9E7
mov	eax, [esp+34h+arg_4]
mov	ecx, [esp+34h+arg_8]
mov	[esi+64h], eax
mov	eax, [esp+34h+arg_C]
mov	[esi+10h], ecx
mov	[esi+60h], eax
test	eax, eax
jz	short loc_1009B9E0
cmp	byte ptr [eax],	0
jnz	short loc_1009B9E7
mov	dword ptr [esi+60h], offset aApplicationO_0 
			
push	edi
push	1
lea	edx, [esp+3Ch+var_2C]
push	24h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+50h+var_4], eax
mov	ecx, [esp+50h+arg_1C]
mov	eax, [esp+50h+arg_18]
push	ebx
mov	ebx, [esp+54h+arg_0]
push	ebp
mov	ebp, [esp+58h+arg_14]
push	esi
push	edi
mov	[esp+60h+var_4C], ecx
mov	[esp+60h+var_48], eax
mov	eax, [esp+60h+arg_20]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_44]
rep movsd
mov	[esp+60h+var_18], ebp
mov	[esp+60h+var_50], eax
mov	[esp+60h+var_44], offset aPkix_pl_htt_17 
mov	[esp+60h+var_24], 24h
push	eax
test	ebx, ebx
jnz	short loc_1009BA7C
push	1
push	1Fh
lea	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_30], 1
mov	[esp+6Ch+var_34], 2BCh
push	edx
jmp	loc_1009BC1C
push	20h
push	ebx
call	sub_10072630
add	esp, 0Ch
mov	[esp+60h+var_40], eax
test	eax, eax
jz	short loc_1009BAA3
mov	eax, [eax+4]
mov	[esp+60h+var_28], eax
mov	[esp+60h+var_34], 397h
jmp	loc_1009BC0E
mov	edi, [esp+60h+var_48]
test	edi, edi
jnz	short loc_1009BAF5
cmp	[ebx+8], edi
jnz	short loc_1009BAFE
mov	eax, dword_100BAE9C
mov	[esp+60h+var_30], 1
mov	[esp+60h+var_34], 2BCh
mov	[esp+60h+var_28], 1Fh
test	eax, eax
jz	loc_1009BC0E
mov	ecx, [esp+60h+var_50]
mov	edx, [esp+60h+var_24]
push	ecx
push	1
push	edx
push	edi
push	2BCh
push	eax
call	sub_10074820
add	esp, 18h
jmp	loc_1009BC0E
cmp	dword ptr [edi], 0
jnz	loc_1009BC9C
mov	eax, [ebx]
cmp	eax, 2
jz	short loc_1009BB44
cmp	eax, 1
jz	short loc_1009BB44
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009BB2F
mov	ecx, [esp+60h+var_50]
mov	edx, [esp+60h+var_24]
push	ecx
push	2
push	edx
push	0
push	21Ah
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+60h+var_30], 1
mov	[esp+60h+var_34], 21Ah
jmp	loc_1009BC0E
			
test	ebp, ebp
jz	short loc_1009BB51
mov	[ebx+30h], ebp
mov	eax, [ebp+0]
mov	[ebx+24h], eax
mov	eax, [esp+60h+arg_C]
mov	ecx, [esp+60h+arg_4]
mov	edx, [esp+60h+arg_8]
mov	[ebx+70h], eax
movzx	eax, word ptr [ebx+4]
mov	[ebx+68h], ecx
mov	ecx, [esp+60h+arg_10]
mov	[ebx+6Ch], edx
mov	[ebx+74h], ecx
mov	[esp+60h+var_14], 0
cmp	eax, 50h
jz	short loc_1009BB91
push	eax
push	offset aD	
lea	eax, [esp+68h+var_14]
push	10h
push	eax
call	ds:PR_snprintf
add	esp, 10h
mov	eax, [ebx+5Ch]
test	eax, eax
jnz	loc_1009BC67
mov	ecx, [ebx+10h]
mov	edx, [ebx+60h]
push	ecx
mov	ecx, [ebx+4Ch]
push	edx
mov	edx, [ebx+50h]
lea	eax, [esp+68h+var_14]
push	eax
push	ecx
push	edx
push	offset aPostSHttp1_0_0 
call	ds:PR_smprintf
add	esp, 18h
mov	ebp, eax
lea	edx, [eax+1]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1009BBC4
mov	ecx, [esp+60h+var_50]
sub	eax, edx
mov	esi, eax
mov	eax, [ebx+10h]
push	ecx
add	eax, esi
lea	edi, [ebx+44h]
push	edi
push	eax
mov	[ebx+2Ch], eax
call	sub_10094350
add	esp, 0Ch
mov	[esp+60h+var_40], eax
test	eax, eax
jz	short loc_1009BC37
mov	edx, [eax+4]
mov	[esp+60h+var_28], edx
mov	[esp+60h+var_34], 299h
test	ebp, ebp
jz	short loc_1009BC0E
push	ebp
call	ds:PR_smprintf_free
add	esp, 4
			
mov	eax, [esp+60h+var_50]
push	eax
push	1
push	24h
lea	ecx, [esp+6Ch+var_44]
push	ecx
call	sub_100781E0
mov	ecx, [esp+70h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 50h
retn
mov	eax, [edi]
push	esi		
push	ebp		
push	eax		
call	memcpy
mov	ecx, [ebx+10h]
mov	edx, [ebx+64h]
mov	eax, [edi]
push	ecx		
push	edx		
add	eax, esi
push	eax		
call	memcpy
push	ebp
call	ds:PR_smprintf_free
mov	ebp, [esp+7Ch+var_18]
mov	edi, [esp+7Ch+var_48]
add	esp, 1Ch
jmp	short loc_1009BC9C
cmp	eax, 1
jnz	short loc_1009BC9C
mov	edx, [ebx+4Ch]
mov	eax, [ebx+50h]
lea	ecx, [esp+60h+var_14]
push	ecx
push	edx
push	eax
push	offset aGetSHttp1_0Hos 
call	ds:PR_smprintf
add	esp, 10h
mov	[ebx+40h], eax
lea	edx, [eax+1]
lea	ecx, [ecx+0]
mov	cl, [eax]
inc	eax
test	cl, cl
jnz	short loc_1009BC90
sub	eax, edx
mov	[ebx+28h], eax
			
mov	esi, [esp+60h+var_50]
push	esi
mov	eax, ebx
call	sub_1009B0B0
add	esp, 4
mov	[esp+60h+var_40], eax
test	eax, eax
jz	short loc_1009BCC7
mov	ecx, [eax+4]
mov	[esp+60h+var_28], ecx
mov	[esp+60h+var_34], 21Dh
jmp	loc_1009BC0E
mov	eax, [ebx]
dec	eax
cmp	eax, 8		
ja	loc_1009BD61	
movzx	edx, ds:byte_1009BDB8[eax]
jmp	ds:off_1009BDA8[edx*4] 
			
mov	eax, [esp+60h+var_4C] 
add	ebx, 34h
mov	dword ptr [eax], 0FFFFFFFEh
jmp	short loc_1009BD52
			
mov	ecx, [ebx+30h]	
test	ecx, ecx
jz	short loc_1009BD1A
mov	eax, [ebx+14h]
cmp	eax, 0FFFFFFFFh
jz	short loc_1009BD14
cmp	[ebx+24h], eax
jb	short loc_1009BD14
mov	[ecx], eax
mov	ecx, [esp+60h+var_4C]
xor	ebx, ebx
mov	dword ptr [ecx], 0FFFFFFFFh
jmp	short loc_1009BD52
			
mov	dword ptr [ecx], 0
mov	ecx, [esp+60h+var_4C]
xor	ebx, ebx
mov	dword ptr [ecx], 0FFFFFFFFh
jmp	short loc_1009BD52
			
mov	edx, [ebx+68h]	
mov	ax, [ebx+20h]
mov	[edx], ax
cmp	dword ptr [ebx+30h], 0
jz	short loc_1009BD3E
mov	ecx, [ebx+14h]
mov	[ebp+0], ecx
mov	eax, [ebx+74h]
test	eax, eax
jz	short loc_1009BD4A
mov	edx, [ebx+48h]
mov	[eax], edx
mov	eax, [esp+60h+var_4C]
xor	ebx, ebx
mov	[eax], ebx
			
test	edi, edi
jz	loc_1009BC0E
mov	[edi], ebx
jmp	loc_1009BC0E
			
			
mov	ecx, [esp+60h+var_4C] 
mov	dword ptr [ecx], 0FFFFFFFFh
mov	eax, dword_100BAE9C
test	eax, eax
jz	loc_1009BB2F
mov	edx, [esp+60h+var_24]
push	esi
push	2
push	edx
push	0
push	21Ah
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+60h+var_30], 1
mov	[esp+60h+var_34], 21Ah
jmp	loc_1009BC0E
align 4
dd offset loc_1009BD28	
dd offset loc_1009BCF0
dd offset loc_1009BD61
db	0,     3,     0,     1 
db	2
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	[esp+34h+var_2C], offset aPkix_pl_htt_18 
mov	[esp+34h+var_C], 24h
test	eax, eax
jnz	short loc_1009BE29
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	esi, [esp+34h+arg_4]
push	esi
push	20h
push	eax
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_1009BE50
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 397h
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	24h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
mov	eax, dword_100BAEEC
mov	ecx, [esp+arg_8]
mov	edx, [esp+arg_4]
push	eax
mov	eax, [esp+4+arg_0]
push	ecx
push	edx
push	eax
call	sub_1009B2B0
add	esp, 10h
test	eax, eax
jz	short loc_1009BEA5
mov	ecx, dword_100BAEEC
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
mov	eax, dword_100BAEEC
mov	ecx, [esp+arg_4]
mov	edx, [esp+arg_0]
push	eax
push	ecx
push	edx
call	sub_1009B550
add	esp, 0Ch
test	eax, eax
jz	short loc_1009BEE0
mov	ecx, dword_100BAEEC
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
			
mov	eax, dword_100BAEEC
mov	ecx, [esp+arg_0]
push	eax
push	ecx
call	sub_100955D0
add	esp, 8
test	eax, eax
jz	short loc_1009BF1B
mov	edx, dword_100BAEEC
push	edx
push	eax
call	sub_100955D0
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
mov	eax, dword_100BAEEC
mov	ecx, [esp+arg_14]
mov	edx, [esp+arg_10]
push	eax
mov	eax, [esp+4+arg_C]
push	ecx
mov	ecx, [esp+8+arg_8]
push	edx
mov	edx, [esp+0Ch+arg_4]
push	eax
mov	eax, [esp+10h+arg_0]
push	ecx
push	edx
push	eax
call	sub_1009B5F0
add	esp, 1Ch
test	eax, eax
jz	short loc_1009BF64
mov	ecx, dword_100BAEEC
push	ecx
push	eax
call	sub_100955D0
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
mov	eax, dword_100BAEEC
mov	ecx, [esp+arg_C]
mov	edx, [esp+arg_8]
push	eax
mov	eax, [esp+4+arg_4]
push	ecx
mov	ecx, [esp+8+arg_0]
push	edx
push	eax
push	ecx
call	sub_1009B940
add	esp, 14h
test	eax, eax
jz	short loc_1009BFAA
mov	edx, dword_100BAEEC
push	edx
push	eax
call	sub_100955D0
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
public RSA_FormatBlock
			
or	eax, 0FFFFFFFFh
retn
align 10h
push	ecx
mov	eax, dword_100BAEEC
mov	edx, [esp+4+arg_4]
push	eax
mov	eax, [esp+8+arg_18]
lea	ecx, [esp+8+var_4]
push	ecx
mov	ecx, [esp+0Ch+arg_14]
push	edx
mov	edx, [esp+10h+arg_10]
push	eax
mov	eax, [esp+14h+arg_C]
push	ecx
mov	ecx, [esp+18h+arg_8]
push	edx
mov	edx, [esp+1Ch+arg_0]
push	eax
push	ecx
push	edx
mov	[esp+28h+var_4], 0FFFFFFFFh
call	sub_1009BA00
add	esp, 24h
test	eax, eax
jz	short loc_1009C019
mov	ecx, dword_100BAEEC
push	ecx
push	eax
call	sub_100955D0
mov	eax, [esp+0Ch+var_4]
add	esp, 8
pop	ecx
retn
xor	eax, eax
pop	ecx
retn
align 10h
mov	eax, dword_100BAEEC
mov	ecx, [esp+arg_0]
push	eax
push	ecx
call	sub_1009BDD0
add	esp, 8
test	eax, eax
jz	short loc_1009C04B
mov	edx, dword_100BAEEC
push	edx
push	eax
call	sub_100955D0
add	esp, 8
or	eax, 0FFFFFFFFh
retn
xor	eax, eax
retn
align 10h
			
sub	esp, 30h
push	ebx
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_C]
xor	ebx, ebx
xor	ebp, ebp
mov	[esp+40h+var_30], ebx
mov	[esp+40h+var_2C], offset aPkix_pl_nsscon 
mov	[esp+40h+var_C], 16h
push	ebx
cmp	esi, ebx
jnz	short loc_1009C0B1
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
lea	ecx, [esp+44h+var_30]
push	ecx
push	30h
call	sub_10094350
add	esp, 0Ch
mov	[esp+40h+var_28], eax
cmp	eax, ebx
jz	short loc_1009C0DC
mov	edx, [eax+4]
mov	[esp+40h+var_10], edx
mov	[esp+40h+var_1C], 299h
jmp	loc_1009C163
cmp	[esp+40h+arg_4], 1
jnz	short loc_1009C0F2
push	800h
call	PORT_NewArena_Util
add	esp, 4
mov	ebp, eax
mov	eax, [esp+40h+var_30]
mov	edx, [esp+40h+arg_0]
mov	[eax+8], ebp
mov	ecx, [esp+40h+var_30]
mov	[ecx], edx
mov	eax, [esp+40h+var_30]
mov	edx, [esp+40h+arg_8]
mov	[eax+4], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+0Ch], edx
mov	eax, [esp+40h+var_30]
mov	dword ptr [eax+10h], 3Ch
mov	ecx, [esp+40h+var_30]
mov	dword ptr [ecx+14h], 10000h
mov	edx, [esp+40h+var_30]
mov	dword ptr [edx+18h], 7E900h
mov	eax, [esp+40h+var_30]
mov	[eax+1Ch], ebx
mov	ecx, [esp+40h+var_30]
mov	dword ptr [ecx+20h], 0E10h
mov	edx, [esp+40h+var_30]
mov	[edx+24h], ebx
mov	eax, [esp+40h+var_30]
mov	[eax+28h], ebx
mov	ecx, [esp+40h+var_30]
mov	[ecx+2Ch], ebx
mov	edx, [esp+40h+var_30]
mov	[esi], edx
push	ebx
push	1
lea	eax, [esp+48h+var_2C]
push	16h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 30h
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_nssc_0 
mov	[esp+34h+var_C], 16h
test	esi, esi
jnz	short loc_1009C1D5
push	esi
push	1
lea	eax, [esp+3Ch+var_2C]
push	1Fh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	eax, [esi+8]
test	eax, eax
jz	short loc_1009C1E7
push	0
push	eax
call	PORT_FreeArena_Util
add	esp, 8
push	0
push	esi
call	sub_10094630
push	0
push	1
lea	ecx, [esp+44h+var_2C]
push	16h
push	ecx
call	sub_100781E0
add	esp, 18h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_8]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
pop	edi
pop	esi
push	0
mov	[esp+30h+var_2C], offset aPkix_pl_nssc_1 
mov	[esp+30h+var_C], 16h
push	1
test	eax, eax
jnz	short loc_1009C266
lea	eax, [esp+34h+var_2C]
push	1Fh
push	eax
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
mov	ecx, [esp+34h+arg_0]
mov	edx, [esp+34h+arg_4]
mov	[eax], ecx
mov	[eax+4], edx
lea	eax, [esp+34h+var_2C]
push	16h
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_nssc_2 
mov	[esp+30h+var_C], 16h
pop	esi
test	ecx, ecx
jz	short loc_1009C2E3
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1009C2E3
mov	ecx, [ecx+0Ch]
push	0
push	1
lea	edx, [esp+34h+var_2C]
push	16h
push	edx
mov	[eax], ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
push	0
push	1
lea	eax, [esp+34h+var_2C]
push	1Fh
push	eax
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
align 10h
sub	esp, 50h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+50h+var_4], eax
mov	edx, [esp+50h+arg_8]
mov	eax, [esp+50h+arg_C]
push	ebx
push	ebp
mov	ebp, [esp+58h+arg_4]
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_3C]
rep movsd
mov	[esp+60h+var_44], edx
mov	[esp+60h+var_40], eax
mov	[esp+60h+var_4C], ebx
mov	[esp+60h+var_3C], offset aPkix_pl_pk11_0 
mov	[esp+60h+var_1C], 11h
cmp	[esp+60h+arg_0], ebx
jz	loc_1009C4C6
test	ebp, ebp
jz	loc_1009C4C6
test	edx, edx
jz	loc_1009C4C6
cmp	[ebp+0], ebx
jnz	short loc_1009C38A
push	eax
push	1
push	1Fh
lea	eax, [esp+6Ch+var_3C]
push	eax
jmp	loc_1009C4D0
mov	ecx, [eax]
mov	eax, [eax+4]
shrd	ecx, eax, 1
sar	eax, 1
test	ecx, ecx
jnz	short loc_1009C3A0
test	eax, eax
jz	short loc_1009C3AF
lea	ecx, [ecx+0]
			
shrd	ecx, eax, 1
inc	ebx
sar	eax, 1
test	ecx, ecx
jnz	short loc_1009C3A0
test	eax, eax
jnz	short loc_1009C3A0
lea	ecx, [esp+60h+var_50]
push	ecx
lea	edx, [esp+64h+var_48]
push	edx
push	ebx
call	sub_1000A960
add	esp, 0Ch
test	eax, eax
jnz	loc_1009C4AC
mov	ecx, [ebp+0]
lea	eax, [esp+60h+var_10]
push	eax
push	ecx
call	CERT_GetCertTrust
add	esp, 8
test	eax, eax
jnz	loc_1009C4AC
cmp	ebx, 0Bh
jz	short loc_1009C45C
cmp	ebx, 0Ah
jz	short loc_1009C45C
mov	eax, [ebp+0]
cmp	ebx, 8
jnz	short loc_1009C443
mov	eax, [eax+13Ch]
test	al, 2
jz	short loc_1009C40D
mov	eax, [esp+60h+var_C]
mov	[esp+60h+var_50], 1
jmp	short loc_1009C437
test	al, 4
jz	short loc_1009C41F
mov	eax, [esp+60h+var_10]
mov	[esp+60h+var_50], 0
jmp	short loc_1009C437
mov	eax, 2
mov	[esp+60h+var_50], eax
xor	edx, edx
cmp	eax, 2
setnz	dl
lea	eax, [edx-1]
and	eax, [esp+60h+var_8]
			
mov	ecx, [esp+60h+var_48]
and	eax, ecx
cmp	eax, ecx
jnz	short loc_1009C4AC
jmp	short loc_1009C4A4
mov	eax, [esp+60h+var_50]
test	eax, eax
jnz	short loc_1009C451
mov	eax, [esp+60h+var_10]
jmp	short loc_1009C437
cmp	eax, 1
jnz	short loc_1009C428
mov	eax, [esp+60h+var_C]
jmp	short loc_1009C437
			
mov	esi, [esp+60h+var_48]
mov	edx, [esp+60h+var_8]
mov	ebp, [esp+60h+var_C]
mov	edi, [esp+60h+var_10]
xor	ecx, ecx
mov	[esp+60h+var_50], ecx
test	ecx, ecx
jnz	short loc_1009C47A
mov	eax, edi
jmp	short loc_1009C48E
cmp	ecx, 1
jnz	short loc_1009C483
mov	eax, ebp
jmp	short loc_1009C48E
xor	eax, eax
cmp	ecx, 2
setnz	al
dec	eax
and	eax, edx
			
and	eax, esi
cmp	eax, esi
jz	short loc_1009C4A0
inc	ecx
cmp	ecx, 3
jl	short loc_1009C472
mov	[esp+60h+var_50], ecx
jmp	short loc_1009C4AC
mov	[esp+60h+var_50], ecx
mov	[esp+60h+var_4C], 1
			
mov	edx, [esp+60h+var_40]
mov	eax, [esp+60h+var_44]
mov	ecx, [esp+60h+var_4C]
push	edx
push	1
mov	[eax], ecx
push	11h
lea	eax, [esp+6Ch+var_3C]
push	eax
jmp	short loc_1009C4E0
			
push	eax
push	1
push	1Fh
lea	ecx, [esp+6Ch+var_3C]
push	ecx
mov	[esp+70h+var_28], 1
mov	[esp+70h+var_2C], 2BCh
call	sub_100781E0
mov	ecx, [esp+70h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 50h
retn
align 10h
sub	esp, 58h
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	esi, [esp+64h+arg_0]
mov	[esp+64h+var_34], ebp
mov	[esp+64h+var_30], ebp
mov	[esp+64h+var_48], ebp
mov	[esp+64h+var_44], ebp
mov	[esp+64h+var_50], ebp
mov	[esp+64h+var_54], ebp
mov	[esp+64h+var_58], ebp
mov	[esp+64h+var_4C], ebp
mov	[esp+64h+var_40], ebp
mov	[esp+64h+var_3C], ebp
mov	[esp+64h+var_2C], offset aPkix_pl_pk11_4 
mov	[esp+64h+var_C], 11h
cmp	esi, ebp
jz	loc_1009C95D
cmp	[esp+64h+arg_4], ebp
jz	loc_1009C95D
call	CERT_GetDefaultCertDB
mov	[esp+64h+arg_0], eax
push	ebx
lea	eax, [esp+68h+var_48]
push	eax
push	esi
call	sub_10054880
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009C59A
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 0FFh
jmp	loc_1009C713
push	ebx
lea	edx, [esp+68h+var_44]
push	edx
push	esi
call	sub_10054E30
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009C5C5
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 0F4h
jmp	loc_1009C713
mov	eax, [esp+64h+var_44]
cmp	eax, ebp
jz	short loc_1009C5FF
push	ebx
lea	ecx, [esp+68h+var_34]
push	ecx
push	eax
call	sub_100883F0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009C5F8
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 183h
jmp	loc_1009C713
mov	edi, 1
jmp	short loc_1009C601
mov	edi, ebp
cmp	[esp+64h+var_48], ebp
jz	short loc_1009C681
push	800h
call	PORT_NewArena_Util
mov	esi, eax
add	esp, 4
cmp	esi, ebp
jz	loc_1009C94A
mov	ecx, [esp+64h+var_48]
push	ebx
lea	eax, [esp+68h+var_40]
push	eax
push	esi
push	ecx
call	sub_10090030
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009C64E
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 433h
jmp	loc_1009C705
mov	eax, [esp+64h+var_40]
cmp	eax, ebp
jz	short loc_1009C674
mov	ecx, [esp+64h+var_30]
mov	edx, [esp+64h+var_34]
push	edi
push	ecx
push	edx
push	eax
mov	eax, [esp+74h+arg_0]
push	eax
push	ebp
call	CERT_CreateSubjectCertList
add	esp, 18h
mov	[esp+64h+var_58], eax
push	ebp
push	esi
call	PORT_FreeArena_Util
mov	[esp+6Ch+var_4C], ebp
jmp	short loc_1009C6B8
lea	ecx, [esp+64h+var_3C]
push	ecx
push	ebx
call	sub_1009C290
add	esp, 8
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009C6A8
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 2B4h
jmp	short loc_1009C713
mov	eax, [esp+64h+var_3C]
push	eax
push	6
call	PK11_ListCerts
mov	[esp+6Ch+var_58], eax
mov	esi, [esp+6Ch+var_58]
add	esp, 8
cmp	esi, ebp
jz	loc_1009C946
lea	ecx, [esp+64h+var_50]
push	ebx
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	loc_1009C7F0
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 27Dh
			
mov	esi, [esp+64h+var_4C]
mov	eax, [esp+64h+var_58]
cmp	eax, ebp
jz	short loc_1009C705
push	eax
call	CERT_DestroyCertList
add	esp, 4
			
cmp	esi, ebp
jz	short loc_1009C713
push	ebp
push	esi
call	PORT_FreeArena_Util
add	esp, 8
			
mov	eax, [esp+64h+var_48]
cmp	eax, ebp
jz	short loc_1009C744
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009C740
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_48], ebp
mov	eax, [esp+64h+var_44]
cmp	eax, ebp
jz	short loc_1009C775
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009C771
push	ebx
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_44], ebp
mov	eax, [esp+64h+var_54]
cmp	eax, ebp
jz	short loc_1009C7A6
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009C7A2
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_54], ebp
mov	eax, [esp+64h+var_50]
cmp	eax, ebp
jz	short loc_1009C7D7
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009C7D3
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_50], ebp
push	ebx
push	1
lea	ecx, [esp+6Ch+var_2C]
push	11h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
mov	edi, [esi]
cmp	edi, [esp+64h+var_58]
jz	loc_1009C942
lea	esp, [esp+0]
mov	eax, [edi+8]
push	eax
call	CERT_DupCertificate
mov	esi, eax
add	esp, 4
cmp	esi, ebp
jz	loc_1009C936
push	ebx
lea	ecx, [esp+68h+var_54]
push	ecx
push	esi
mov	[esp+70h+var_14], ebp
call	sub_1007D390
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009C874
mov	[esp+64h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_1009C6F0
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009C86E
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
xor	eax, eax
mov	[esp+64h+var_28], eax
cmp	[esp+64h+var_18], ebp
jnz	loc_1009C92D
cmp	eax, ebp
jnz	loc_1009C92D
cmp	[esp+64h+var_14], ebp
jnz	loc_1009C92D
cmp	[esp+64h+var_4], ebp
jnz	loc_1009C92D
mov	eax, [esp+64h+var_54]
mov	ecx, [esp+64h+var_50]
push	ebx
push	eax
push	ecx
mov	[esp+70h+var_14], ebp
call	sub_10075970
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009C8FA
mov	[esp+64h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_1009C6F0
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009C8F6
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_28], ebp
mov	eax, [esp+64h+var_54]
cmp	eax, ebp
jz	short loc_1009C936
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009C927
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_54], ebp
jmp	short loc_1009C936
			
push	esi
call	CERT_DestroyCertificate
add	esp, 4
			
mov	edi, [edi]
cmp	edi, [esp+64h+var_58]
jnz	loc_1009C800
mov	[esp+64h+var_14], ebp
mov	esi, [esp+64h+var_4C]
mov	ecx, [esp+64h+var_50]
mov	edx, [esp+64h+arg_4]
mov	[edx], ecx
mov	[esp+64h+var_50], ebp
jmp	loc_1009C6F4
			
push	ebx
push	1
lea	edx, [esp+6Ch+var_2C]
push	1Fh
push	edx
mov	[esp+74h+var_18], 1
mov	[esp+74h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 58h
retn
align 10h
sub	esp, 34h
push	ebx
push	ebp
push	esi
push	edi
call	CERT_GetDefaultCertDB
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+44h+var_2C]
rep movsd
mov	esi, [esp+44h+arg_C]
mov	ebp, eax
mov	[esp+44h+var_34], ebx
mov	[esp+44h+var_30], ebx
mov	[esp+44h+var_2C], offset aPkix_pl_pk11_1 
mov	[esp+44h+var_C], 11h
cmp	[esp+44h+arg_0], ebx
jz	loc_1009CB54
cmp	esi, ebx
jz	loc_1009CB54
mov	edi, [esp+44h+arg_8]
cmp	edi, ebx
jz	loc_1009CB3A
cmp	[edi+0Ch], ebx
jbe	loc_1009CB3A
push	esi
lea	eax, [esp+48h+var_34]
push	eax
push	ebx
push	edi
call	sub_10075D80
add	esp, 10h
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	loc_1009CAE9
push	esi
push	ebx
push	edi
call	sub_10076100
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	loc_1009CAFA
mov	edx, [esp+44h+var_34]
push	esi
lea	ecx, [esp+48h+var_30]
push	ecx
push	edx
call	sub_100862C0
add	esp, 0Ch
mov	[esp+44h+var_28], eax
cmp	eax, ebx
jnz	short loc_1009CA82
mov	eax, [esp+44h+var_30]
cmp	eax, ebx
jz	short loc_1009CAAB
mov	ecx, [esp+44h+var_34]
mov	edx, [ecx+20h]
push	edx
push	eax
push	ebp
call	sub_10041770
mov	eax, [esp+50h+var_34]
add	esp, 0Ch
mov	[esp+44h+var_30], ebx
cmp	eax, ebx
jz	short loc_1009CADE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1009CAD8
push	esi
push	eax
lea	eax, [esp+4Ch+var_2C]
push	eax
jmp	short loc_1009CACC
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1009CAA7
push	esi
push	eax
lea	ecx, [esp+4Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_28], ebx
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_1009CADE
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1009CAD8
push	esi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
			
xor	eax, eax
mov	[esp+44h+var_34], eax
			
cmp	[edi+0Ch], ebx
ja	loc_1009C9F3
jmp	short loc_1009CB0D
mov	eax, [eax+4]
mov	[esp+44h+var_10], eax
mov	[esp+44h+var_1C], 283h
jmp	short loc_1009CB09
mov	ecx, [eax+4]
mov	[esp+44h+var_10], ecx
mov	[esp+44h+var_1C], 27Fh
mov	eax, [esp+44h+var_34]
cmp	eax, ebx
jz	short loc_1009CB3A
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+44h+var_24], eax
cmp	eax, ebx
jz	short loc_1009CB36
push	esi
push	eax
lea	edx, [esp+4Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+44h+var_24], ebx
mov	[esp+44h+var_34], ebx
			
push	esi
push	1
lea	eax, [esp+4Ch+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
			
push	esi
push	1
lea	ecx, [esp+4Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+54h+var_18], 1
mov	[esp+54h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
add	esp, 34h
retn
align 10h
sub	esp, 50h
mov	eax, [ebx+1Ch]
push	ebp
push	esi
push	edi
xor	ebp, ebp
push	ebp
push	0F4240h
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	ecx, [ebx+18h]
push	eax
push	ecx
mov	[esp+6Ch+var_40], ebp
mov	[esp+6Ch+var_48], 1
mov	[esp+6Ch+var_50], ebp
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_44], ebp
mov	[esp+6Ch+var_2C], offset aChechcachehasf 
mov	[esp+6Ch+var_C], 11h
call	sub_1009FFA0
push	ebp
mov	[esp+60h+var_38], edx
mov	edx, [ebx+24h]
push	0F4240h
mov	[esp+64h+var_3C], eax
mov	eax, [ebx+20h]
push	edx
push	eax
call	sub_1009FFA0
mov	ecx, [esp+5Ch+arg_4]
mov	esi, [esp+5Ch+arg_8]
or	ecx, esi
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_30], edx
jnz	short loc_1009CC0E
call	ds:PR_Now
mov	[esp+5Ch+arg_4], eax
mov	esi, edx
mov	eax, [esp+5Ch+arg_0]
push	ebx
lea	edx, [esp+60h+var_50]
push	edx
push	eax
call	sub_10081930
add	esp, 0Ch
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1009CC3D
mov	ecx, [eax+4]
mov	[esp+5Ch+var_10], ecx
mov	[esp+5Ch+var_1C], 80h
jmp	loc_1009CE34
mov	eax, [esp+5Ch+var_50]
cmp	eax, ebp
jz	loc_1009CE38
cmp	[eax+0Ch], ebp
jz	short loc_1009CC9C
lea	edx, [esp+5Ch+var_40]
push	edx
mov	[esp+60h+var_48], ebp
call	sub_10040040
add	esp, 4
test	eax, eax
mov	eax, [esp+5Ch+var_50]
jz	short loc_1009CCD4
cmp	eax, ebp
jz	loc_1009CE38
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1009CC94
push	ebx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
xor	eax, eax
mov	[esp+5Ch+var_50], eax
jmp	short loc_1009CCD4
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1009CCC1
push	ebx
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
xor	eax, eax
mov	[esp+5Ch+var_50], eax
jmp	loc_1009CE38
align 10h
mov	eax, [esp+5Ch+var_50]
			
cmp	eax, ebp
jz	loc_1009CE38
mov	ecx, [esp+5Ch+var_44]
cmp	ecx, [eax+0Ch]
jnb	loc_1009CE38
push	ebx
lea	edx, [esp+60h+var_4C]
push	edx
push	ecx
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+5Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1009CD2F
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1009CD26
push	ebx
push	eax
lea	eax, [esp+64h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
mov	[esp+5Ch+var_28], ebp
jmp	loc_1009CE26
mov	ecx, [esp+5Ch+var_4C]
mov	eax, [ecx]
cmp	dword ptr [eax], 1
jnz	loc_1009CDF5
mov	edi, [eax+34h]
cmp	edi, ebp
jz	loc_1009CDF5
lea	esp, [esp+0]
mov	eax, [edi]
cmp	eax, ebp
jz	loc_1009CDF5
lea	edx, [esp+5Ch+arg_0]
push	edx
push	eax
mov	eax, [esp+64h+var_40]
push	eax
mov	[esp+68h+arg_0], ebp
add	edi, 4
call	sub_10040070
add	esp, 0Ch
test	eax, eax
jnz	short loc_1009CDE1
mov	eax, [esp+5Ch+arg_0]
cmp	eax, ebp
jz	short loc_1009CDE1
cmp	[eax+8], ebp
jz	short loc_1009CDC2
mov	edx, [eax+10h]
add	edx, [esp+5Ch+var_3C]
mov	ecx, [eax+14h]
adc	ecx, [esp+5Ch+var_38]
cmp	ecx, esi
jg	short loc_1009CDEB
jl	short loc_1009CD9F
cmp	edx, [esp+5Ch+arg_4]
ja	short loc_1009CDEB
xor	ebp, ebp
cmp	[eax+24h], ebp
jz	short loc_1009CDC2
mov	edx, [eax+18h]
add	edx, [esp+5Ch+var_3C]
mov	ecx, [eax+1Ch]
adc	ecx, [esp+5Ch+var_38]
cmp	ecx, esi
jg	short loc_1009CDEB
jl	short loc_1009CDC0
cmp	edx, [esp+5Ch+arg_4]
ja	short loc_1009CDEB
xor	ebp, ebp
			
cmp	[eax+20h], ebp
jz	short loc_1009CDE1
mov	ecx, [eax+18h]
add	ecx, [esp+5Ch+var_34]
mov	eax, [eax+1Ch]
adc	eax, [esp+5Ch+var_30]
cmp	eax, esi
jg	short loc_1009CDED
jl	short loc_1009CDE1
cmp	ecx, [esp+5Ch+arg_4]
ja	short loc_1009CDED
			
cmp	edi, ebp
jnz	loc_1009CD50
jmp	short loc_1009CDF5
			
xor	ebp, ebp
			
mov	[esp+5Ch+var_48], 1
			
mov	eax, [esp+5Ch+var_4C]
cmp	eax, ebp
jz	short loc_1009CE26
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1009CE22
push	ebx
push	eax
lea	ecx, [esp+64h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
mov	[esp+5Ch+var_4C], ebp
			
inc	[esp+5Ch+var_44]
cmp	[esp+5Ch+var_48], ebp
jz	loc_1009CCD0
mov	eax, [esp+5Ch+var_50]
			
mov	ecx, [esp+5Ch+var_48]
mov	edx, [esp+5Ch+arg_C]
mov	[edx], ecx
mov	ecx, [esp+5Ch+var_40]
cmp	ecx, ebp
jz	short loc_1009CE57
push	ecx
call	sub_100400B0
mov	eax, [esp+60h+var_50]
add	esp, 4
cmp	eax, ebp
jz	short loc_1009CE84
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+5Ch+var_24], eax
cmp	eax, ebp
jz	short loc_1009CE80
push	ebx
push	eax
lea	edx, [esp+64h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+5Ch+var_24], ebp
mov	[esp+5Ch+var_50], ebp
push	ebx
push	1
lea	eax, [esp+64h+var_2C]
push	11h
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 50h
retn
align 10h
sub	esp, 44h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+50h+var_2C]
mov	edx, 1
rep movsd
mov	[esp+50h+var_40], 2
mov	[esp+50h+var_3C], edx
mov	[esp+50h+var_38], ebp
mov	[esp+50h+var_34], ebp
mov	[esp+50h+var_30], ebp
mov	[esp+50h+var_2C], offset aPkix_pl_pk11_2 
mov	[esp+50h+var_C], 11h
cmp	[esp+50h+arg_0], ebp
jz	loc_1009D034
mov	edi, [esp+50h+arg_4]
cmp	edi, ebp
jz	loc_1009D034
mov	eax, [esp+50h+arg_8]
cmp	eax, ebp
jz	loc_1009D034
mov	ecx, [esp+50h+arg_1C]
cmp	ecx, ebp
jz	loc_1009D038
mov	esi, [edi]
push	ebx
mov	ebx, [eax]
mov	eax, [esp+54h+arg_C]
cmp	eax, ebp
jz	short loc_1009CF4F
push	ecx
lea	ecx, [esp+58h+var_34]
push	ecx
push	eax
call	sub_100883F0
add	esp, 0Ch
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_1009CF4B
mov	edx, [eax+4]
mov	[esp+54h+var_10], edx
mov	[esp+54h+var_1C], 183h
jmp	loc_1009D00E
mov	ecx, [esp+54h+arg_1C]
lea	eax, [esp+54h+var_38]
push	eax
push	ecx
call	sub_1009C290
add	esp, 8
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jz	short loc_1009CF79
mov	ecx, [eax+4]
mov	[esp+54h+var_10], ecx
mov	[esp+54h+var_1C], 2B4h
jmp	loc_1009D00E
mov	edx, [esp+54h+arg_14]
mov	ecx, [esp+54h+var_38]
push	edx
mov	edx, [esp+58h+var_30]
lea	eax, [esp+58h+var_40]
push	eax
mov	eax, [esp+5Ch+var_34]
push	ecx
push	edx
push	eax
push	ebp
push	ebx
push	esi
call	sub_10041000
add	esp, 20h
cmp	eax, 0FFFFFFFFh
jz	short loc_1009CFF7
cmp	[esp+54h+arg_10], ebp
jz	short loc_1009CFBC
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jz	short loc_1009CFF7
cmp	eax, 1
jnz	short loc_1009D00E
mov	eax, 2
jmp	short loc_1009D010
mov	edx, [esp+54h+var_30]
mov	eax, [esp+54h+var_34]
mov	ebx, [esp+54h+arg_1C]
lea	ecx, [esp+54h+var_3C]
push	ecx
push	edx
push	eax
push	edi
call	sub_1009CB80
add	esp, 10h
mov	[esp+54h+var_28], eax
cmp	eax, ebp
jnz	short loc_1009D00E
mov	eax, [esp+54h+var_40]
cmp	eax, ebp
jnz	short loc_1009CFFE
cmp	[esp+54h+var_3C], ebp
jnz	short loc_1009CFF7
mov	ecx, [esp+54h+arg_14]
cmp	dword ptr [ecx], 6
jz	short loc_1009D00E
			
mov	eax, 1
jmp	short loc_1009D010
cmp	eax, 1
jnz	short loc_1009D00E
mov	eax, 2
cmp	[esp+54h+var_3C], ebp
jnz	short loc_1009D010
			
mov	eax, ebp
			
mov	edx, [esp+54h+arg_18]
mov	[edx], eax
mov	eax, [esp+54h+arg_1C]
push	eax
push	1
lea	ecx, [esp+5Ch+var_2C]
push	11h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
			
mov	ecx, [esp+50h+arg_1C]
push	ecx
push	edx
mov	[esp+58h+var_18], edx
lea	edx, [esp+58h+var_2C]
push	1Fh
push	edx
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 44h
retn
align 10h
sub	esp, 54h
push	ebp
xor	ebp, ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+60h+var_2C]
rep movsd
mov	edi, [esp+60h+arg_0]
mov	[esp+60h+var_3C], ebp
mov	[esp+60h+var_54], ebp
mov	[esp+60h+var_48], ebp
mov	[esp+60h+var_50], ebp
mov	[esp+60h+var_38], ebp
mov	[esp+60h+var_30], ebp
mov	[esp+60h+var_44], ebp
mov	[esp+60h+var_34], ebp
mov	[esp+60h+var_4C], ebp
mov	[esp+60h+var_40], ebp
mov	[esp+60h+var_2C], offset aPkix_pl_pk11_3 
mov	[esp+60h+var_C], 11h
cmp	edi, ebp
jz	loc_1009D63B
mov	esi, [esp+60h+arg_4]
cmp	esi, ebp
jz	loc_1009D63B
mov	eax, [esp+60h+arg_C]
cmp	eax, ebp
jz	loc_1009D63B
cmp	[esp+60h+arg_10], ebp
jz	loc_1009D63B
push	ebx
mov	ebx, [esp+64h+arg_14]
mov	[eax], ebp
push	ebx
lea	eax, [esp+68h+var_38]
push	eax
push	esi
call	sub_10053C70
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009D110
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 0B6h
jmp	loc_1009D4CB
push	ebx
lea	edx, [esp+68h+var_44]
push	edx
push	esi
call	sub_10053CF0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009D13B
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 0B3h
jmp	loc_1009D4CB
mov	edx, [esp+64h+var_44]
lea	ecx, [esp+64h+var_48]
push	ecx
push	edx
call	sub_1009C500
add	esp, 8
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009D169
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 33Ah
jmp	loc_1009D4CB
mov	eax, [esp+64h+var_48]
cmp	eax, ebp
jz	short loc_1009D19C
push	ebx
lea	ecx, [esp+68h+var_3C]
push	ecx
push	eax
call	sub_100757C0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009D19C
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 284h
jmp	loc_1009D4CB
			
push	ebx
lea	eax, [esp+68h+var_34]
push	eax
push	edi
call	sub_1007B6D0
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009D1C7
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 0D8h
jmp	loc_1009D4CB
push	ebx
lea	edx, [esp+68h+var_30]
push	edx
push	edi
call	sub_1007B550
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009D1F2
mov	eax, [eax+4]
mov	[esp+64h+var_10], eax
mov	[esp+64h+var_1C], 0DCh
jmp	loc_1009D4CB
lea	ecx, [esp+64h+var_50]
push	ebx
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009D21C
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 27Dh
jmp	loc_1009D4CB
xor	esi, esi
cmp	[esp+64h+var_3C], ebp
jbe	loc_1009D45E
mov	edi, [esp+64h+arg_8]
lea	esp, [esp+0]
mov	ecx, [esp+64h+var_48]
push	ebx
lea	eax, [esp+68h+var_54]
push	eax
push	esi
push	ecx
mov	[esp+74h+var_14], ebp
call	sub_10075D80
add	esp, 10h
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	short loc_1009D293
mov	[esp+64h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_1009D4CB
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D28D
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
xor	eax, eax
mov	[esp+64h+var_28], eax
cmp	[esp+64h+var_18], ebp
jnz	loc_1009D453
cmp	eax, ebp
jnz	loc_1009D453
cmp	[esp+64h+var_14], ebp
jnz	loc_1009D453
cmp	[esp+64h+var_4], ebp
jnz	loc_1009D453
mov	eax, [esp+64h+var_54]
mov	ecx, [esp+64h+arg_4]
push	ebx
push	eax
push	ecx
call	[esp+70h+var_38]
add	esp, 0Ch
mov	[esp+64h+var_40], eax
cmp	eax, ebp
jnz	loc_1009D384
mov	edx, [esp+64h+var_34]
mov	eax, [esp+64h+var_54]
push	ebx
push	edx
push	eax
call	sub_10081290
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jnz	loc_1009D471
cmp	[esp+64h+var_30], ebp
jz	short loc_1009D31B
mov	ecx, [esp+64h+arg_0]
mov	edx, [esp+64h+var_54]
push	ebx
push	ecx
push	edx
call	sub_10081310
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jnz	loc_1009D482
mov	eax, [esp+64h+var_54]
mov	ecx, [esp+64h+var_50]
push	ebx
push	eax
push	ecx
mov	[esp+70h+var_14], ebp
call	sub_10075970
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jz	loc_1009D422
mov	[esp+64h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
cmp	ecx, 1Fh
jz	loc_1009D4CB
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D37B
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_28], ebp
jmp	loc_1009D422
cmp	edi, ebp
jz	short loc_1009D3F9
mov	edx, [esp+64h+var_54]
push	ebx
lea	ecx, [esp+68h+var_4C]
push	ecx
push	eax
push	ebp
push	edx
call	sub_10067620
add	esp, 14h
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jnz	loc_1009D493
mov	eax, [esp+64h+var_4C]
push	ebx
push	eax
push	edi
call	sub_10067B60
add	esp, 0Ch
mov	[esp+64h+var_28], eax
cmp	eax, ebp
jnz	loc_1009D603
mov	eax, [esp+64h+var_4C]
cmp	eax, ebp
jz	short loc_1009D3F5
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D3F1
push	ebx
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_4C], ebp
mov	eax, [esp+64h+var_40]
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D41E
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_40], ebp
			
mov	eax, [esp+64h+var_54]
cmp	eax, ebp
jz	short loc_1009D453
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D44F
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_54], ebp
			
inc	esi
cmp	esi, [esp+64h+var_3C]
jb	loc_1009D230
mov	eax, [esp+64h+var_50]
mov	ecx, [esp+64h+arg_10]
mov	[esp+64h+var_14], ebp
mov	[ecx], eax
jmp	loc_1009D4F8
mov	ecx, [eax+4]
mov	[esp+64h+var_10], ecx
mov	[esp+64h+var_1C], 0CDh
jmp	short loc_1009D4CB
mov	edx, [eax+4]
mov	[esp+64h+var_10], edx
mov	[esp+64h+var_1C], 0CEh
jmp	short loc_1009D4CB
mov	eax, dword_100BAE9C
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 424h
mov	[esp+64h+var_10], 1Fh
cmp	eax, ebp
jz	short loc_1009D4CB
mov	ecx, [esp+64h+var_C]
push	ebx
push	1
push	ecx
push	ebp
push	424h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	eax, [esp+64h+var_50]
cmp	eax, ebp
jz	short loc_1009D4FC
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D4F8
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
			
mov	[esp+64h+var_50], ebp
mov	eax, [esp+64h+var_54]
cmp	eax, ebp
jz	short loc_1009D52D
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D529
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_54], ebp
mov	eax, [esp+64h+var_48]
cmp	eax, ebp
jz	short loc_1009D55A
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D55A
push	ebx
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
			
mov	eax, [esp+64h+var_44]
cmp	eax, ebp
jz	short loc_1009D58B
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D587
push	ebx
push	eax
lea	edx, [esp+6Ch+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_44], ebp
mov	eax, [esp+64h+var_4C]
cmp	eax, ebp
jz	short loc_1009D5BC
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D5B8
push	ebx
push	eax
lea	eax, [esp+6Ch+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
mov	[esp+64h+var_4C], ebp
mov	eax, [esp+64h+var_40]
cmp	eax, ebp
jz	short loc_1009D5E9
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+64h+var_24], eax
cmp	eax, ebp
jz	short loc_1009D5E9
push	ebx
push	eax
lea	ecx, [esp+6Ch+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+64h+var_24], ebp
			
push	ebx
push	1
lea	edx, [esp+6Ch+var_2C]
push	11h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
mov	eax, dword_100BAE9C
mov	[esp+64h+var_18], 1
mov	[esp+64h+var_1C], 423h
mov	[esp+64h+var_10], 1Fh
cmp	eax, ebp
jz	loc_1009D4CB
mov	edx, [esp+64h+var_C]
push	ebx
push	1
push	edx
push	ebp
push	423h
jmp	loc_1009D4C2
			
mov	eax, [esp+60h+arg_14]
push	eax
push	1
lea	ecx, [esp+68h+var_2C]
push	1Fh
push	ecx
mov	[esp+70h+var_18], 1
mov	[esp+70h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 54h
retn
align 10h
sub	esp, 5Ch
push	esi
push	edi
xor	eax, eax
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+64h+var_2C]
rep movsd
mov	edi, [esp+64h+arg_0]
mov	[esp+64h+var_54], eax
mov	[esp+64h+var_5C], eax
mov	[esp+64h+var_58], eax
mov	[esp+64h+var_2C], offset aPkix_pl_pk11_6 
mov	[esp+64h+var_C], 11h
cmp	edi, eax
jz	loc_1009D962
cmp	[edi+0Ch], eax
jz	loc_1009D962
mov	ecx, [ebx+18h]
push	ebp
push	eax
mov	eax, [ebx+1Ch]
push	0F4240h
push	eax
push	ecx
call	sub_1009FFA0
xor	esi, esi
push	esi
mov	ebp, edx
mov	edx, [ebx+24h]
push	0F4240h
mov	[esp+70h+var_34], eax
mov	eax, [ebx+20h]
push	edx
push	eax
call	sub_1009FFA0
push	ebx
lea	ecx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_40], edx
mov	edx, [esp+6Ch+arg_4]
push	ecx
push	edx
mov	[esp+74h+var_44], eax
call	sub_100883F0
add	esp, 0Ch
mov	[esp+68h+var_28], eax
cmp	eax, esi
jz	short loc_1009D71E
mov	eax, [eax+4]
mov	[esp+68h+var_10], eax
mov	[esp+68h+var_1C], 183h
jmp	loc_1009D907
lea	ecx, [esp+68h+var_54]
push	ecx
call	sub_10040040
add	esp, 4
cmp	eax, 0FFFFFFFFh
jnz	short loc_1009D749
push	ebx
push	1
lea	edx, [esp+70h+var_2C]
push	11h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
add	esp, 5Ch
retn
cmp	[edi+0Ch], esi
jbe	loc_1009D907
mov	ecx, [esp+68h+var_58]
push	ebx
lea	eax, [esp+6Ch+var_5C]
push	eax
push	ecx
push	edi
mov	[esp+78h+var_4C], esi
call	sub_10075D80
add	esp, 10h
mov	[esp+68h+var_28], eax
cmp	eax, esi
jnz	loc_1009D8F8
mov	eax, [esp+68h+var_5C]
cmp	[eax+0Ch], esi
jnz	loc_1009D85A
mov	eax, [eax]
cmp	dword ptr [eax], 1
jnz	loc_1009D85A
mov	ecx, [eax+34h]
cmp	ecx, esi
jz	loc_1009D8B4
lea	esp, [esp+0]
mov	eax, [ecx]
cmp	eax, esi
jz	loc_1009D854
lea	edx, [esp+68h+var_50]
push	edx
push	eax
mov	eax, [esp+70h+var_54]
add	ecx, 4
push	eax
mov	[esp+74h+var_50], esi
mov	[esp+74h+var_48], ecx
call	sub_10040070
add	esp, 0Ch
test	eax, eax
jz	short loc_1009D844
mov	eax, [esp+68h+var_50]
cmp	eax, esi
jz	short loc_1009D844
cmp	[eax+28h], esi
jnz	short loc_1009D838
cmp	[eax+8], esi
mov	esi, [esp+68h+var_38]
mov	edi, [esp+68h+var_3C]
jz	short loc_1009D818
mov	edx, [eax+10h]
add	edx, [esp+68h+var_34]
mov	ecx, [eax+14h]
adc	ecx, ebp
cmp	ecx, esi
jg	short loc_1009D836
jl	short loc_1009D7FC
cmp	edx, edi
ja	short loc_1009D836
cmp	dword ptr [eax+24h], 0
jz	short loc_1009D818
mov	edx, [eax+18h]
add	edx, [esp+68h+var_34]
mov	ecx, [eax+1Ch]
adc	ecx, ebp
cmp	ecx, esi
jg	short loc_1009D836
jl	short loc_1009D818
cmp	edx, edi
ja	short loc_1009D836
			
cmp	dword ptr [eax+20h], 0
jz	short loc_1009D842
mov	ecx, [eax+18h]
add	ecx, [esp+68h+var_44]
mov	eax, [eax+1Ch]
adc	eax, [esp+68h+var_40]
cmp	eax, esi
jl	short loc_1009D842
jg	short loc_1009D836
cmp	ecx, edi
jbe	short loc_1009D842
			
xor	esi, esi
mov	[esp+68h+var_4C], 1
jmp	short loc_1009D844
			
xor	esi, esi
			
mov	ecx, [esp+68h+var_48]
mov	edi, [esp+68h+arg_0]
cmp	ecx, esi
jnz	loc_1009D7A0
cmp	[esp+68h+var_4C], esi
jz	short loc_1009D8B4
			
mov	ecx, [esp+68h+var_5C]
push	ebx
push	ecx
push	edi
mov	[esp+74h+var_14], esi
call	sub_10077300
add	esp, 0Ch
mov	[esp+68h+var_28], eax
cmp	eax, esi
jz	short loc_1009D8B8
mov	[esp+68h+var_14], 1
mov	ecx, [eax+4]
mov	[esp+68h+var_10], ecx
cmp	ecx, 1Fh
jz	short loc_1009D907
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, esi
jz	short loc_1009D8AE
push	ebx
push	eax
lea	edx, [esp+70h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], esi
mov	[esp+68h+var_28], esi
jmp	short loc_1009D8B8
			
inc	[esp+68h+var_58]
			
mov	eax, [esp+68h+var_5C]
cmp	eax, esi
jz	short loc_1009D8E9
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, esi
jz	short loc_1009D8E5
push	ebx
push	eax
lea	eax, [esp+70h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], esi
mov	[esp+68h+var_5C], esi
mov	ecx, [esp+68h+var_58]
cmp	ecx, [edi+0Ch]
jb	loc_1009D752
jmp	short loc_1009D907
mov	edx, [eax+4]
mov	[esp+68h+var_10], edx
mov	[esp+68h+var_1C], 283h
			
mov	eax, [esp+68h+var_54]
cmp	eax, esi
jz	short loc_1009D918
push	eax
call	sub_100400B0
add	esp, 4
mov	eax, [esp+68h+var_5C]
cmp	eax, esi
jz	short loc_1009D949
push	ebx
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+68h+var_24], eax
cmp	eax, esi
jz	short loc_1009D945
push	ebx
push	eax
lea	eax, [esp+70h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+68h+var_24], esi
mov	[esp+68h+var_5C], esi
push	ebx
push	1
lea	ecx, [esp+70h+var_2C]
push	11h
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
add	esp, 5Ch
retn
			
push	ebx
push	1
lea	edx, [esp+6Ch+var_2C]
push	11h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 5Ch
retn
align 10h
sub	esp, 6Ch
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+78h+var_2C]
rep movsd
mov	esi, 1
mov	[esp+78h+var_50], ebp
mov	[esp+78h+var_54], ebp
mov	[esp+78h+var_58], ebp
mov	[esp+78h+var_5C], ebp
mov	[esp+78h+var_60], ebp
mov	[esp+78h+var_68], ebp
mov	[esp+78h+var_48], ebp
mov	[esp+78h+var_2C], offset aPkix_pl_pk11_7 
mov	[esp+78h+var_C], 11h
cmp	[ebx+4], esi
jnz	loc_1009DCB0
mov	eax, [ebx]
mov	eax, [eax+34h]
cmp	eax, ebp
jz	loc_1009DCB0
mov	esi, [ebx+8]
mov	edi, eax
mov	ebp, [edi]
test	ebp, ebp
jz	loc_1009DB1F
cmp	dword ptr [esi+8], 0
jz	loc_1009DB1F
mov	ecx, [esi+0Ch]
inc	ecx
push	ecx
call	ds:PR_Malloc
add	esp, 4
mov	[esp+78h+var_50], eax
test	eax, eax
jz	loc_1009DB13
mov	edx, [esi+0Ch]
mov	ecx, [esi+8]
push	edx		
push	ecx		
push	eax		
call	memcpy
mov	edx, [esi+0Ch]
mov	eax, [esp+84h+var_50]
lea	ecx, [esp+84h+var_58]
push	ecx
mov	byte ptr [eax+edx], 0
lea	edx, [esp+88h+var_4C]
push	edx
lea	ecx, [esp+8Ch+var_54]
push	ecx
push	eax
call	sub_100069D0
add	esp, 1Ch
test	eax, eax
jz	short loc_1009DA59
push	0FFFFE0AFh
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1009DB13
mov	eax, [esp+78h+var_4C]
mov	ecx, [esp+78h+var_54]
lea	edx, [esp+78h+var_5C]
push	edx
mov	edx, [esp+7Ch+arg_4]
push	eax
mov	eax, [edx]
push	ecx
call	eax
add	esp, 0Ch
test	eax, eax
jz	short loc_1009DA8C
push	0FFFFE0AFh
call	PORT_SetError_Util
add	esp, 4
jmp	loc_1009DB13
mov	edx, [esp+78h+arg_8]
mov	eax, [edx+10h]
lea	ecx, [esp+78h+var_60]
push	ecx
push	eax
call	ds:PR_SecondsToInterval
mov	ecx, [esp+80h+var_58]
mov	edx, [esp+80h+var_5C]
add	esp, 4
push	eax
mov	eax, [esp+80h+arg_4]
push	offset aGet	
push	ecx
mov	ecx, [eax+0Ch]
push	offset aHttp_1	
push	edx
call	ecx
add	esp, 18h
test	eax, eax
jnz	short loc_1009DB13
mov	edx, [esp+78h+arg_8]
mov	eax, [edx+14h]
mov	[esp+78h+var_64], eax
cmp	eax, 80000h
jnb	short loc_1009DAEA
mov	[esp+78h+var_64], 80000h
lea	eax, [esp+78h+var_64]
push	eax
mov	eax, [esp+7Ch+var_60]
lea	ecx, [esp+7Ch+var_68]
push	ecx
mov	ecx, [esp+80h+arg_4]
push	0
push	0
lea	edx, [esp+88h+var_6C]
push	edx
mov	edx, [ecx+18h]
push	0
push	eax
call	edx
add	esp, 1Ch
			
mov	eax, [esp+78h+var_68]
test	eax, eax
jnz	loc_1009DBB4
			
push	esi
call	CERT_GetNextGeneralName
mov	esi, eax
mov	eax, [esp+7Ch+var_68]
add	esp, 4
add	edi, 4
test	eax, eax
jnz	short loc_1009DBB4
cmp	[edi], eax
jz	short loc_1009DB42
cmp	esi, [ebx+8]
jnz	loc_1009D9E4
lea	eax, [esp+78h+var_44]
push	eax
mov	[esp+7Ch+var_44], 0
mov	[esp+7Ch+var_40], offset aBadcrl 
mov	[esp+7Ch+var_3C], 6
call	SECITEM_DupItem_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jnz	short loc_1009DBA7
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009DB92
mov	ecx, [esp+78h+arg_8]
mov	edx, [esp+78h+var_C]
push	ecx
push	2
push	edx
push	0
push	0
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+78h+var_18], 1
mov	[esp+78h+var_1C], 0
jmp	loc_1009DC31
mov	eax, [ebx]
mov	ecx, [eax+34h]
mov	ebp, [ecx]
mov	edi, [esp+78h+var_48]
jmp	short loc_1009DBEC
			
mov	edx, [esp+78h+var_64]
mov	[esp+78h+var_34], eax
lea	eax, [esp+78h+var_38]
push	eax
mov	[esp+7Ch+var_38], 0
mov	[esp+7Ch+var_30], edx
call	SECITEM_DupItem_Util
mov	esi, eax
add	esp, 4
test	esi, esi
jz	short loc_1009DB6D
push	3
push	1
push	esi
push	0
call	CERT_DecodeDERCrlWithFlags
add	esp, 10h
mov	edi, eax
mov	eax, [esp+78h+arg_8]
mov	ecx, [esp+78h+arg_0]
push	eax
push	ecx
push	ebp
push	esi
push	edi
call	sub_10085DB0
add	esp, 14h
mov	[esp+78h+var_28], eax
test	eax, eax
jz	short loc_1009DC31
mov	edx, [eax+4]
push	esi
mov	[esp+7Ch+var_10], edx
mov	[esp+7Ch+var_1C], 15Fh
call	PORT_Free_Util
add	esp, 4
test	edi, edi
jz	short loc_1009DC31
push	edi
call	SEC_DestroyCrl
add	esp, 4
			
xor	ebp, ebp
mov	eax, [esp+78h+var_60]
cmp	eax, ebp
jz	short loc_1009DC4B
mov	edx, [esp+78h+arg_4]
push	eax
mov	eax, [edx+20h]
call	eax
add	esp, 4
mov	eax, [esp+78h+var_5C]
cmp	eax, ebp
jz	short loc_1009DC63
mov	ecx, [esp+78h+arg_4]
mov	edx, [ecx+8]
push	eax
call	edx
add	esp, 4
mov	eax, [esp+78h+var_58]
cmp	eax, ebp
jz	short loc_1009DC74
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+78h+var_54]
cmp	eax, ebp
jz	short loc_1009DC85
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+78h+var_50]
pop	edi
pop	esi
cmp	eax, ebp
pop	ebp
jz	short loc_1009DC99
push	eax
call	PORT_Free_Util
add	esp, 4
mov	eax, [esp+6Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+74h+var_2C]
push	11h
push	ecx
call	sub_100781E0
add	esp, 7Ch
retn
			
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1009DCD4
mov	ecx, [esp+78h+arg_8]
push	ecx
push	2
push	11h
push	ebp
push	40Bh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+78h+var_18], esi
mov	[esp+78h+var_1C], 40Bh
jmp	loc_1009DC33
align 10h
sub	esp, 40h
push	ebp
push	esi
xor	ebp, ebp
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+4Ch+var_2C]
rep movsd
mov	[esp+4Ch+var_34], ebp
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_2C], offset aPkix_pl_pk11_5 
mov	[esp+4Ch+var_C], 11h
cmp	[esp+4Ch+arg_0], ebp
jz	loc_1009E031
cmp	[esp+4Ch+arg_8], ebp
jz	loc_1009E031
cmp	[esp+4Ch+arg_C], ebp
jz	loc_1009E031
push	ebx
mov	ebx, [esp+50h+arg_4]
cmp	ebx, ebp
jz	loc_1009E003
cmp	[ebx+4], ebp
jz	loc_1009E003
call	SEC_GetRegisteredHttpClient
mov	esi, [esp+50h+arg_10]
mov	[esp+50h+var_30], eax
cmp	eax, ebp
jz	loc_1009DF42
cmp	word ptr [eax],	1
jnz	loc_1009DF42
mov	eax, [ebx+4]
mov	edi, [eax+8]
mov	eax, [eax+0Ch]
push	eax
push	edi
mov	ebx, esi
mov	[esp+58h+arg_0], edi
call	sub_1009D670
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1009DDB0
mov	eax, [eax+4]
mov	[esp+50h+var_10], eax
mov	[esp+50h+var_1C], 1C3h
jmp	loc_1009DF42
cmp	[edi+0Ch], ebp
jbe	loc_1009DF34
lea	esp, [esp+0]
mov	eax, [esp+50h+var_38]
cmp	eax, ebp
jz	short loc_1009DDF1
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1009DDED
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_38], ebp
mov	edi, [esp+50h+var_34]
mov	eax, [esp+50h+arg_0]
push	esi
lea	edx, [esp+54h+var_38]
push	edx
push	edi
push	eax
call	sub_10075D80
add	esp, 10h
mov	[esp+50h+var_28], eax
push	esi
cmp	eax, ebp
jz	short loc_1009DE33
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	loc_1009DF1E
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
jmp	loc_1009DF12
mov	edx, [esp+54h+var_30]
mov	ebx, [esp+54h+var_38]
add	edx, 4
push	edx
lea	eax, [esp+58h+var_40]
push	eax
call	sub_1009D980
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jnz	loc_1009DEF9
cmp	[esp+50h+var_40], ebp
jz	loc_1009DF22
cmp	[esp+50h+var_3C], ebp
jnz	short loc_1009DE82
lea	ecx, [esp+50h+var_3C]
push	esi
push	ecx
call	sub_100755D0
add	esp, 8
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jnz	loc_1009DFEF
mov	edx, [esp+50h+var_40]
mov	eax, [esp+50h+var_3C]
push	esi
push	edx
push	eax
call	sub_10075970
add	esp, 0Ch
mov	[esp+50h+var_28], eax
cmp	eax, ebp
jz	short loc_1009DEC6
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1009DEC2
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_28], ebp
mov	eax, [esp+50h+var_40]
cmp	eax, ebp
jz	short loc_1009DF22
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1009DEF3
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_40], ebp
jmp	short loc_1009DF22
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1009DF1E
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
			
mov	[esp+50h+var_28], ebp
			
mov	ecx, [esp+50h+arg_0]
inc	edi
mov	[esp+50h+var_34], edi
cmp	edi, [ecx+0Ch]
jb	loc_1009DDC0
mov	eax, [esp+50h+var_3C]
mov	ecx, [esp+50h+arg_C]
mov	[ecx], eax
mov	[esp+50h+var_3C], ebp
			
mov	eax, [esp+50h+var_38]
cmp	eax, ebp
jz	short loc_1009DF73
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1009DF6F
push	esi
push	eax
lea	edx, [esp+58h+var_2C]
push	edx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_38], ebp
mov	eax, [esp+50h+var_40]
cmp	eax, ebp
jz	short loc_1009DFA4
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1009DFA0
push	esi
push	eax
lea	eax, [esp+58h+var_2C]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_40], ebp
mov	eax, [esp+50h+var_3C]
cmp	eax, ebp
jz	short loc_1009DFD5
push	esi
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+50h+var_24], eax
cmp	eax, ebp
jz	short loc_1009DFD1
push	esi
push	eax
lea	ecx, [esp+58h+var_2C]
push	ecx
call	sub_10078030
add	esp, 0Ch
mov	[esp+50h+var_24], ebp
mov	[esp+50h+var_3C], ebp
push	esi
push	1
lea	edx, [esp+58h+var_2C]
push	11h
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
mov	edx, [eax+4]
mov	[esp+50h+var_10], edx
mov	[esp+50h+var_1C], 27Dh
jmp	loc_1009DF42
			
mov	eax, [esp+50h+arg_10]
push	eax
push	1
lea	ecx, [esp+58h+var_2C]
push	1Fh
push	ecx
mov	[esp+60h+var_18], 1
mov	[esp+60h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
			
mov	edx, [esp+4Ch+arg_10]
push	edx
push	1
lea	eax, [esp+54h+var_2C]
push	1Fh
push	eax
mov	[esp+5Ch+var_18], 1
mov	[esp+5Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 40h
retn
align 10h
			
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_pk11ce 
mov	[esp+38h+var_C], 11h
test	edi, edi
jnz	short loc_1009E0C1
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
mov	esi, [esp+38h+arg_4]
push	esi
lea	edx, [esp+3Ch+var_30]
push	edx
push	1
push	1
push	0
push	offset sub_1009CEA0
push	offset sub_1009C990
push	offset sub_1009C310
push	0
push	0
push	offset sub_1009DCF0
push	offset sub_1009D060
call	sub_1007B1F0
add	esp, 30h
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1009E10F
mov	eax, [eax+4]
mov	[esp+38h+var_10], eax
mov	[esp+38h+var_1C], 0D1h
jmp	short loc_1009E115
mov	ecx, [esp+38h+var_30]
mov	[edi], ecx
push	esi
push	1
lea	edx, [esp+40h+var_2C]
push	11h
push	edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
			
mov	ecx, ebx
shr	ecx, 8
movzx	eax, cl
shr	eax, 4
cmp	eax, 9
jle	short loc_1009E144
add	al, 37h
jmp	short loc_1009E146
add	al, 30h
movsx	ecx, cl
and	ecx, 0Fh
cmp	ecx, 9
jle	short loc_1009E156
add	cl, 37h
jmp	short loc_1009E159
add	cl, 30h
push	esi
mov	esi, ds:printf
movsx	ecx, cl
movsx	edx, al
push	ecx
push	edx
push	offset aCC	
call	esi 
movzx	eax, bl
shr	eax, 4
add	esp, 0Ch
cmp	eax, 9
jle	short loc_1009E181
add	al, 37h
jmp	short loc_1009E183
add	al, 30h
movsx	ecx, bl
and	ecx, 0Fh
cmp	ecx, 9
jle	short loc_1009E193
add	cl, 37h
jmp	short loc_1009E196
add	cl, 30h
movsx	ecx, cl
movsx	edx, al
push	ecx
push	edx
push	offset aCC	
call	esi 
push	offset asc_100B0FA0 
call	esi 
add	esp, 10h
pop	esi
retn
align 10h
push	ebx
push	esi
push	edi
mov	ebx, eax
call	sub_1009E130
mov	edi, ds:printf
xor	esi, esi
push	offset asc_100B0FAC 
call	edi 
mov	cl, [esi+ebx]
movzx	eax, cl
shr	eax, 4
add	esp, 4
cmp	eax, 9
jle	short loc_1009E1EE
add	al, 37h
jmp	short loc_1009E1F0
add	al, 30h
movsx	ecx, cl
and	ecx, 0Fh
cmp	ecx, 9
jle	short loc_1009E200
add	cl, 37h
jmp	short loc_1009E203
add	cl, 30h
movsx	ecx, cl
movsx	edx, al
push	ecx
push	edx
push	offset aCC	
call	edi 
add	esp, 0Ch
cmp	esi, 7
jnz	short loc_1009E224
push	offset asc_100B0FA8 
call	edi 
add	esp, 4
inc	esi
cmp	esi, 10h
jb	short loc_1009E1D2
push	offset asc_100B0FA8 
call	edi 
add	esp, 4
xor	esi, esi
mov	al, [esi+ebx]
cmp	al, 20h
jl	short loc_1009E251
cmp	al, 7Dh
jg	short loc_1009E251
movsx	eax, al
push	eax
push	offset aC	
call	edi 
add	esp, 8
jmp	short loc_1009E25B
			
push	offset a__0	
call	edi 
add	esp, 4
inc	esi
cmp	esi, 10h
jb	short loc_1009E236
push	offset asc_100A5D14 
call	edi 
add	esp, 4
pop	edi
pop	esi
pop	ebx
retn
align 10h
push	ebx
push	ebp
mov	ebp, [esp+8+arg_0]
push	esi
push	edi
mov	ebx, eax
test	ebp, ebp
jz	short loc_1009E283
call	sub_1009E130
mov	edi, ds:printf
xor	esi, esi
test	ebp, ebp
jz	short loc_1009E2E7
nop
push	offset asc_100B0FAC 
call	edi 
mov	cl, [esi+ebx]
movzx	eax, cl
shr	eax, 4
add	esp, 4
cmp	eax, 9
jle	short loc_1009E2AC
add	al, 37h
jmp	short loc_1009E2AE
add	al, 30h
movsx	ecx, cl
and	ecx, 0Fh
cmp	ecx, 9
jle	short loc_1009E2BE
add	cl, 37h
jmp	short loc_1009E2C1
add	cl, 30h
movsx	ecx, cl
movsx	edx, al
push	ecx
push	edx
push	offset aCC	
call	edi 
add	esp, 0Ch
cmp	esi, 7
jnz	short loc_1009E2E2
push	offset asc_100B0FA8 
call	edi 
add	esp, 4
inc	esi
cmp	esi, ebp
jb	short loc_1009E290
mov	esi, ebp
cmp	ebp, 10h
jnb	short loc_1009E30F
mov	edi, edi
push	offset asc_100B0FB0 
call	edi
add	esp, 4
cmp	esi, 7
jnz	short loc_1009E309
push	offset asc_100B0FA8 
call	edi
add	esp, 4
inc	esi
cmp	esi, 10h
jb	short loc_1009E2F0
push	offset asc_100B0FA8 
call	edi 
add	esp, 4
xor	esi, esi
test	ebp, ebp
jz	short loc_1009E34A
nop
mov	al, [esi+ebx]
cmp	al, 20h
jl	short loc_1009E33B
cmp	al, 7Dh
jg	short loc_1009E33B
movsx	eax, al
push	eax
push	offset aC	
call	edi 
add	esp, 8
jmp	short loc_1009E345
			
push	offset a__0	
call	edi 
add	esp, 4
inc	esi
cmp	esi, ebp
jb	short loc_1009E320
push	offset asc_100A5D14 
call	edi 
add	esp, 4
pop	edi
pop	esi
pop	ebp
pop	ebx
retn
align 10h
			
push	ebx
push	esi
push	edi
mov	edi, [esp+0Ch+arg_4]
xor	esi, esi
mov	ebx, edi
cmp	dword_100BAEF0,	esi
jz	short loc_1009E3D2
push	ebp
call	ds:PR_Now
mov	ebp, ds:printf
push	edx
push	eax
push	offset aLld	
call	ebp 
add	esp, 0Ch
test	edi, edi
jnz	short loc_1009E3A8
mov	ebx, [esp+10h+arg_0]
call	sub_1009E130
push	offset asc_100A5D14 
call	ebp 
add	esp, 4
pop	ebp
pop	edi
pop	esi
pop	ebx
retn
mov	ebp, [esp+10h+arg_0]
cmp	edi, 10h
jb	short loc_1009E3C5
shr	edi, 4
lea	eax, [esi+ebp]
call	sub_1009E1C0
sub	ebx, 10h
add	esi, 10h
dec	edi
jnz	short loc_1009E3B4
push	ebx
lea	eax, [esi+ebp]
call	sub_1009E270
add	esp, 4
pop	ebp
pop	edi
pop	esi
pop	ebx
retn
align 10h
			
sub	esp, 78h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+78h+var_4], eax
mov	eax, [esp+78h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+80h+var_78]
rep movsd
mov	[esp+80h+var_78], offset aPkix_pl_sock_5 
mov	[esp+80h+var_58], 3Dh
mov	esi, 1
test	eax, eax
jnz	short loc_1009E434
push	ebx
push	esi
push	1Fh
lea	eax, [esp+8Ch+var_78]
mov	[esp+8Ch+var_64], esi
mov	[esp+8Ch+var_68], 2BCh
push	eax
jmp	short loc_1009E48A
mov	ecx, [eax]
lea	edx, [esp+80h+var_4C]
push	edx
mov	[esp+84h+var_4C], 0
mov	[esp+84h+var_44], esi
push	eax
mov	eax, [ecx+74h]
call	eax
add	esp, 8
test	eax, eax
jz	short loc_1009E481
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009E475
mov	ecx, [esp+80h+var_58]
push	ebx
push	2
push	ecx
push	0
push	3F8h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+80h+var_64], esi
mov	[esp+80h+var_68], 3F8h
push	ebx
push	esi
push	3Dh
lea	edx, [esp+8Ch+var_78]
push	edx
call	sub_100781E0
mov	ecx, [esp+90h+var_4]
add	esp, 10h
pop	edi
pop	esi
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
align 10h
sub	esp, 0A4h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+0A4h+var_4], eax
push	ebp
mov	ebp, [esp+0A8h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+0B0h+var_A4]
rep movsd
mov	[esp+0B0h+var_A4], offset aPkix_pl_sock_4 
mov	[esp+0B0h+var_84], 3Dh
test	ebx, ebx
jnz	short loc_1009E511
push	ebp
push	1
push	1Fh
lea	eax, [esp+0BCh+var_A4]
mov	[esp+0BCh+var_90], 1
mov	[esp+0BCh+var_94], 2BCh
push	eax
jmp	loc_1009E609
call	ds:PR_NewTCPSocket
test	eax, eax
jnz	short loc_1009E551
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009E53C
mov	ecx, [esp+0B0h+var_84]
push	ebp
push	2
push	ecx
push	0
push	366h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+0B0h+var_90], 1
mov	[esp+0B0h+var_94], 366h
jmp	loc_1009E5FF
cmp	dword ptr [ebx+4], 0
mov	[ebx+0Ch], eax
mov	dword ptr [ebx+8], 3
jnz	loc_1009E5FF
mov	edx, [eax]
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+0B0h+var_78]
rep movsd
lea	ecx, [esp+0B0h+var_4C]
mov	esi, 1
push	ecx
mov	[esp+0B4h+var_78], offset aPkix_pl_sock_5 
mov	[esp+0B4h+var_58], 3Dh
mov	[esp+0B4h+var_4C], 0
mov	[esp+0B4h+var_44], esi
mov	edx, [edx+74h]
push	eax
call	edx
add	esp, 8
test	eax, eax
jz	short loc_1009E5D7
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009E5CB
mov	ecx, [esp+0B0h+var_58]
push	ebp
push	2
push	ecx
push	0
push	3F8h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+0B0h+var_64], esi
mov	[esp+0B0h+var_68], 3F8h
push	ebp
push	esi
lea	edx, [esp+0B8h+var_78]
push	3Dh
push	edx
call	sub_100781E0
add	esp, 10h
mov	[esp+0B0h+var_A0], eax
test	eax, eax
jz	short loc_1009E5FF
mov	eax, [eax+4]
mov	[esp+0B0h+var_88], eax
mov	[esp+0B0h+var_94], 3CBh
			
push	ebp
push	1
push	3Dh
lea	ecx, [esp+0BCh+var_A4]
push	ecx
call	sub_100781E0
mov	ecx, [esp+0C0h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 0A4h
retn
align 10h
sub	esp, 78h
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+78h+var_4], eax
push	ebx
push	ebp
mov	ebp, [esp+80h+arg_0]
push	esi
push	edi
mov	ebx, ecx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+88h+var_78]
rep movsd
mov	[esp+88h+var_78], offset aPkix_pl_sock_6 
mov	[esp+88h+var_58], 3Dh
test	ebp, ebp
jnz	short loc_1009E68E
push	ebx
mov	edi, 1
push	edi
push	1Fh
lea	eax, [esp+94h+var_78]
mov	[esp+94h+var_64], edi
mov	[esp+94h+var_68], 2BCh
push	eax
jmp	loc_1009E7BC
call	ds:PR_NewTCPSocket
mov	esi, eax
mov	edi, 1
test	esi, esi
jnz	short loc_1009E6D0
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009E6BF
mov	ecx, [esp+88h+var_58]
push	ebx
push	2
push	ecx
push	esi
push	366h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+88h+var_64], edi
mov	[esp+88h+var_68], 366h
jmp	loc_1009E7B3
cmp	dword ptr [ebp+4], 0
mov	[ebp+10h], esi
jnz	short loc_1009E6FE
push	esi
call	sub_1009E3E0
add	esp, 4
mov	[esp+88h+var_74], eax
test	eax, eax
jz	short loc_1009E6FE
mov	edx, [eax+4]
mov	[esp+88h+var_5C], edx
mov	[esp+88h+var_68], 3CBh
jmp	loc_1009E7B3
			
mov	[esp+88h+var_4C], 2
mov	[esp+88h+var_44], edi
mov	eax, [esi]
mov	edx, [eax+74h]
lea	ecx, [esp+88h+var_4C]
push	ecx
push	esi
call	edx
add	esp, 8
test	eax, eax
jz	short loc_1009E74D
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009E73F
mov	ecx, [esp+88h+var_58]
push	ebx
push	2
push	ecx
push	0
push	3F8h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+88h+var_64], edi
mov	[esp+88h+var_68], 3F8h
jmp	short loc_1009E7B3
mov	edx, [ebp+24h]
push	edx
push	esi
call	ds:PR_Bind
add	esp, 8
cmp	eax, 0FFFFFFFFh
jnz	short loc_1009E7AC
call	ds:PR_GetError
push	edi
push	eax
call	ds:PR_ErrorToString
push	eax
push	offset aPkix_pl_sock_7 
call	ds:printf
mov	eax, dword_100BAE9C
add	esp, 10h
test	eax, eax
jz	short loc_1009E79E
mov	ecx, [esp+88h+var_58]
push	ebx
push	2
push	ecx
push	0
push	359h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+88h+var_64], edi
mov	[esp+88h+var_68], 359h
jmp	short loc_1009E7B3
mov	dword ptr [ebp+8], 0
			
push	ebx
push	edi
push	3Dh
lea	edx, [esp+94h+var_78]
push	edx
call	sub_100781E0
mov	ecx, [esp+98h+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 78h
retn
align 10h
sub	esp, 2Ch
push	ebp
mov	ebp, [esp+30h+arg_0]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_pl_sock_8 
mov	[esp+38h+var_C], 3Dh
test	ebx, ebx
jz	loc_1009E8E9
mov	eax, [ebx+0Ch]
test	eax, eax
jz	loc_1009E8E9
mov	ecx, [ebx+4]
mov	edx, [ebx+24h]
push	ecx
push	edx
push	eax
call	ds:PR_Connect
add	esp, 0Ch
cmp	eax, 0FFFFFFFFh
jnz	loc_1009E8BE
call	ds:PR_GetError
mov	[ebp+0], eax
cmp	eax, 0FFFFE8D2h
jnz	short loc_1009E86C
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	3Dh
push	ecx
mov	dword ptr [ebx+8], 4
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009E891
mov	ecx, [esp+38h+arg_4]
mov	edx, [esp+38h+var_C]
push	ecx
push	2
push	edx
push	0
push	35Bh
push	eax
call	sub_10074820
add	esp, 18h
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	3Dh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 35Bh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
mov	eax, [esp+38h+arg_4]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	3Dh
mov	dword ptr [ebp+0], 0
push	ecx
mov	dword ptr [ebx+8], 5
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_4]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 2Ch
retn
align 10h
			
sub	esp, 38h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+40h+var_2C]
rep movsd
mov	esi, [esp+40h+arg_0]
mov	[esp+40h+var_2C], offset aPkix_pl_sock_9 
mov	[esp+40h+var_C], 3Dh
test	esi, esi
jz	loc_1009EA9B
mov	eax, [esi+0Ch]
test	eax, eax
jz	loc_1009EA9B
push	0
lea	edx, [esp+44h+var_38]
push	1
push	edx
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_34], 6
call	ds:PR_Poll
mov	edi, [esp+4Ch+arg_8]
add	esp, 0Ch
test	eax, eax
jns	short loc_1009E9CB
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009E9A3
mov	ecx, [esp+40h+var_C]
push	edi
push	2
push	ecx
push	0
push	385h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	3Dh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 385h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 38h
retn
jz	short loc_1009E9EF
mov	eax, [esp+40h+var_34+2]
mov	ecx, [esi+0Ch]
push	eax
push	ecx
call	ds:PR_ConnectContinue
add	esp, 8
test	eax, eax
jnz	short loc_1009EA11
cmp	word ptr [esp+40h+var_34+2], 8
jnz	loc_1009EA72
mov	edx, [esp+40h+arg_4]
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	3Dh
push	ecx
mov	dword ptr [edx], 0FFFFE8D2h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 38h
retn
cmp	eax, 0FFFFFFFFh
jnz	short loc_1009EA72
call	ds:PR_GetError
mov	ecx, [esp+40h+arg_4]
mov	[ecx], eax
cmp	eax, 0FFFFE8D2h
jz	short loc_1009EA83
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009EA4A
mov	edx, [esp+40h+var_C]
push	edi
push	2
push	edx
push	0
push	35Ah
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	3Dh
push	ecx
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 35Ah
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 38h
retn
			
mov	eax, [esp+40h+arg_4]
mov	dword ptr [eax], 0
mov	dword ptr [esi+8], 5
push	edi
push	1
lea	ecx, [esp+48h+var_2C]
push	3Dh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 38h
retn
			
mov	edx, [esp+40h+arg_8]
push	edx
push	1
lea	eax, [esp+48h+var_2C]
push	1Fh
push	eax
mov	[esp+50h+var_18], 1
mov	[esp+50h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 38h
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_sock_0 
mov	[esp+34h+var_C], 3Dh
test	esi, esi
jnz	short loc_1009EB29
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
mov	edi, [esp+34h+arg_4]
push	edi
push	35h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+34h+var_28], eax
test	eax, eax
jz	short loc_1009EB52
mov	edx, [eax+4]
mov	[esp+34h+var_10], edx
mov	[esp+34h+var_1C], 2DCh
jmp	short loc_1009EB6D
cmp	dword ptr [esi], 0
jz	short loc_1009EB5C
mov	esi, [esi+10h]
jmp	short loc_1009EB5F
mov	esi, [esi+0Ch]
test	esi, esi
jz	short loc_1009EB6D
push	esi
call	ds:PR_Close
add	esp, 4
			
push	edi
push	1
lea	eax, [esp+3Ch+var_2C]
push	3Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_sock_1 
mov	[esp+38h+var_C], 3Dh
test	esi, esi
jz	short loc_1009EC36
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	short loc_1009EC36
mov	edi, [esp+38h+arg_8]
push	edi
push	35h
push	esi
call	sub_10072630
add	esp, 0Ch
mov	[esp+38h+var_28], eax
test	eax, eax
jz	short loc_1009EC06
mov	eax, [eax+4]
push	edi
push	1
mov	[esp+40h+var_10], eax
lea	eax, [esp+40h+var_2C]
push	3Dh
push	eax
mov	[esp+48h+var_1C], 30Bh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
mov	eax, [esi+24h]
movzx	ecx, word ptr [eax]
mov	edx, [esi+4]
add	edx, ecx
movzx	ecx, word ptr [eax+2]
push	edi
lea	edx, [ecx+edx*8]
add	edx, [eax+4]
push	1
lea	eax, [esp+40h+var_2C]
push	3Dh
push	eax
mov	[ebx], edx
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_8]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	edi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_sock_2 
mov	[esp+38h+var_C], 3Dh
test	edi, edi
jz	loc_1009ED33
mov	esi, [esp+38h+arg_4]
test	esi, esi
jz	loc_1009ED33
mov	ebx, [esp+38h+arg_8]
test	ebx, ebx
jz	short loc_1009ED33
push	ebp
mov	ebp, [esp+3Ch+arg_C]
push	ebp
push	35h
push	esi
push	edi
mov	dword ptr [ebx], 0
call	sub_100724E0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009ECE7
mov	eax, [eax+4]
mov	[esp+3Ch+var_10], eax
mov	[esp+3Ch+var_1C], 30Bh
jmp	short loc_1009ED19
mov	ecx, [edi+4]
cmp	ecx, [esi+4]
jnz	short loc_1009ED19
mov	eax, [edi+24h]
mov	ecx, [esi+24h]
cmp	eax, ecx
jz	short loc_1009ED13
mov	dx, [eax]
cmp	dx, [ecx]
jnz	short loc_1009ED19
mov	edx, [eax+4]
cmp	edx, [ecx+4]
jnz	short loc_1009ED19
mov	ax, [eax+2]
cmp	ax, [ecx+2]
jnz	short loc_1009ED19
mov	dword ptr [ebx], 1
			
push	ebp
push	1
lea	ecx, [esp+44h+var_2C]
push	3Dh
push	ecx
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	edx, [esp+38h+arg_C]
push	edx
push	1
lea	eax, [esp+40h+var_2C]
push	1Fh
push	eax
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
sub	esp, 50h
push	ebx
push	esi
push	edi
xor	ebx, ebx
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+5Ch+var_2C]
rep movsd
mov	ecx, 9
lea	esi, [esp+5Ch+var_50]
mov	edi, offset dword_100BB994
mov	[esp+5Ch+var_50], offset aSocket 
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_48], 44h
mov	[esp+5Ch+var_44], offset sub_1009EAD0
mov	[esp+5Ch+var_40], offset sub_1009EC70
mov	[esp+5Ch+var_3C], offset sub_1009EB90
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_34], ebx
mov	[esp+5Ch+var_30], ebx
push	offset aSockettrace 
mov	[esp+60h+var_2C], offset aPkix_pl_socket 
mov	[esp+60h+var_C], 3Dh
rep movsd
call	ds:PR_GetEnv
add	esp, 4
cmp	eax, ebx
jz	short loc_1009EDF5
mov	al, [eax]
cmp	al, bl
jz	short loc_1009EDF5
xor	ecx, ecx
cmp	al, 31h
setz	cl
mov	dword_100BAEF0,	ecx
			
mov	edx, [esp+5Ch+arg_0]
push	edx
push	1
lea	eax, [esp+64h+var_2C]
push	3Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 50h
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_soc_10 
mov	[esp+34h+var_C], 3Dh
test	esi, esi
jz	loc_1009EEDC
mov	eax, [esi+10h]
test	eax, eax
jz	loc_1009EEDC
mov	ecx, [esp+34h+arg_4]
push	ecx
push	eax
call	ds:PR_Listen
mov	edi, [esp+3Ch+arg_8]
add	esp, 8
cmp	eax, 0FFFFFFFFh
jnz	short loc_1009EEBD
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009EE95
mov	edx, [esp+34h+var_C]
push	edi
push	2
push	edx
push	0
push	365h
push	eax
call	sub_10074820
add	esp, 18h
push	edi
push	1
lea	eax, [esp+3Ch+var_2C]
push	3Dh
push	eax
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 365h
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
push	edi
push	1
lea	eax, [esp+3Ch+var_2C]
push	3Dh
push	eax
mov	dword ptr [esi+8], 1
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
			
mov	ecx, [esp+34h+arg_8]
push	ecx
push	1
lea	edx, [esp+3Ch+var_2C]
push	1Fh
push	edx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	esi, [esp+34h+arg_0]
mov	[esp+34h+var_2C], offset aPkix_pl_soc_11 
mov	[esp+34h+var_C], 3Dh
test	esi, esi
jnz	short loc_1009EF69
mov	eax, [esp+34h+arg_4]
push	eax
push	1
lea	ecx, [esp+3Ch+var_2C]
push	1Fh
push	ecx
mov	[esp+44h+var_18], 1
mov	[esp+44h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
cmp	dword ptr [esi], 0
jz	short loc_1009EF73
mov	eax, [esi+10h]
jmp	short loc_1009EF76
mov	eax, [esi+0Ch]
push	2
push	eax
call	ds:PR_Shutdown
mov	edi, [esp+3Ch+arg_4]
add	esp, 8
cmp	eax, 0FFFFFFFFh
jnz	short loc_1009EFBE
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009EFAC
mov	edx, [esp+34h+var_C]
push	edi
push	2
push	edx
push	0
push	38Ah
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+34h+var_18], 1
mov	[esp+34h+var_1C], 38Ah
jmp	short loc_1009EFC5
mov	dword ptr [esi+8], 9
push	edi
push	1
lea	eax, [esp+3Ch+var_2C]
push	3Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 2Ch
retn
db 13h dup(0CCh)
			
sub	esp, 2Ch
push	ebx
mov	ebx, [esp+30h+arg_4]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	[esp+38h+var_2C], offset aPkix_pl_soc_12 
mov	[esp+38h+var_C], 3Dh
test	ebx, ebx
jz	loc_1009F0EB
cmp	[esp+38h+arg_C], 0
jz	loc_1009F0EB
mov	esi, [esp+38h+arg_0]
mov	ecx, [esi+4]
mov	eax, [esi+0Ch]
push	ebp
mov	ebp, [esp+3Ch+arg_8]
push	ecx
push	0
push	ebp
push	ebx
push	eax
call	ds:PR_Send
mov	edi, eax
add	esp, 14h
test	edi, edi
js	short loc_1009F06D
xor	edx, edx
cmp	dword ptr [esi+8], 8
push	edi
setz	dl
push	ebx
lea	edx, [edx+edx+5]
mov	[esi+8], edx
call	sub_1009E360
add	esp, 8
jmp	short loc_1009F0C7
call	ds:PR_GetError
cmp	eax, 0FFFFE892h
jz	short loc_1009F0B1
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009F09F
mov	ecx, [esp+3Ch+arg_10]
mov	edx, [esp+3Ch+var_C]
push	ecx
push	2
push	edx
push	0
push	389h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 389h
jmp	short loc_1009F0CD
xor	eax, eax
cmp	dword ptr [esi+8], 7
mov	[esi+18h], ebx
setz	al
mov	[esi+20h], ebp
lea	eax, [eax+eax+6]
mov	[esi+8], eax
mov	ecx, [esp+3Ch+arg_C]
mov	[ecx], edi
mov	edx, [esp+3Ch+arg_10]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	3Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_10]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 2Ch
push	ebx
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_2C], offset aPkix_pl_soc_13 
mov	[esp+38h+var_C], 3Dh
test	esi, esi
jz	loc_1009F25D
mov	ebx, [esp+38h+arg_4]
test	ebx, ebx
jz	loc_1009F25D
cmp	[esp+38h+arg_C], 0
jz	loc_1009F25D
mov	ecx, [esi+4]
mov	eax, [esi+0Ch]
push	ebp
mov	ebp, [esp+3Ch+arg_8]
push	ecx
push	0
push	ebp
push	ebx
push	eax
call	ds:PR_Recv
mov	edi, eax
add	esp, 14h
test	edi, edi
jle	short loc_1009F1A7
xor	edx, edx
cmp	dword ptr [esi+8], 8
push	edi
setz	dl
push	ebx
add	edx, 5
mov	[esi+8], edx
call	sub_1009E360
add	esp, 8
jmp	loc_1009F239
jnz	short loc_1009F1E0
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009F1CE
mov	ecx, [esp+3Ch+arg_10]
mov	edx, [esp+3Ch+var_C]
push	ecx
push	2
push	edx
push	0
push	388h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 388h
jmp	short loc_1009F23F
call	ds:PR_GetError
cmp	eax, 0FFFFE892h
jz	short loc_1009F224
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009F212
mov	ecx, [esp+3Ch+arg_10]
mov	edx, [esp+3Ch+var_C]
push	ecx
push	2
push	edx
push	0
push	387h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 387h
jmp	short loc_1009F23F
xor	eax, eax
cmp	dword ptr [esi+8], 6
mov	[esi+14h], ebx
setz	al
mov	[esi+1Ch], ebp
add	eax, 7
mov	[esi+8], eax
mov	ecx, [esp+3Ch+arg_C]
mov	[ecx], edi
			
mov	edx, [esp+3Ch+arg_10]
push	edx
push	1
lea	eax, [esp+44h+var_2C]
push	3Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebp
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
			
mov	ecx, [esp+38h+arg_10]
push	ecx
push	1
lea	edx, [esp+40h+var_2C]
push	1Fh
push	edx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebx
add	esp, 2Ch
retn
align 10h
			
sub	esp, 3Ch
push	ebp
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+48h+var_2C]
rep movsd
mov	esi, [esp+48h+arg_0]
xor	ebp, ebp
mov	[esp+48h+var_38], ebp
mov	[esp+48h+var_3C], ebp
mov	[esp+48h+var_2C], offset aPkix_pl_soc_14 
mov	[esp+48h+var_C], 3Dh
cmp	esi, ebp
jnz	short loc_1009F2F5
mov	eax, [esp+48h+arg_C]
push	eax
push	1
lea	ecx, [esp+50h+var_2C]
push	1Fh
push	ecx
mov	[esp+58h+var_18], 1
mov	[esp+58h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
mov	edx, [esi+0Ch]
push	ebx
mov	ebx, [esp+4Ch+arg_4]
xor	eax, eax
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_30], eax
cmp	ebx, ebp
jz	short loc_1009F322
mov	eax, [esi+8]
cmp	eax, 6
jz	short loc_1009F318
cmp	eax, 8
jnz	short loc_1009F322
mov	edx, 2
mov	word ptr [esp+4Ch+var_30], dx
			
cmp	[esp+4Ch+arg_8], ebp
jz	short loc_1009F33B
mov	eax, [esi+8]
cmp	eax, 7
jz	short loc_1009F335
cmp	eax, 8
jnz	short loc_1009F33B
or	word ptr [esp+4Ch+var_30], 1
			
push	ebp
lea	eax, [esp+50h+var_34]
push	1
push	eax
call	ds:PR_Poll
mov	edi, [esp+58h+arg_C]
add	esp, 0Ch
cmp	eax, ebp
jge	short loc_1009F389
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	short loc_1009F374
mov	ecx, [esp+4Ch+var_C]
push	edi
push	2
push	ecx
push	ebp
push	385h
push	eax
call	sub_10074820
add	esp, 18h
			
mov	[esp+4Ch+var_18], 1
mov	[esp+4Ch+var_1C], 385h
jmp	loc_1009F465
jle	loc_1009F42A
test	byte ptr [esp+4Ch+var_30+2], 2
jz	short loc_1009F3D9
mov	eax, [esi+20h]
mov	ecx, [esi+18h]
push	edi
lea	edx, [esp+50h+var_3C]
push	edx
push	eax
push	ecx
push	esi
call	sub_1009EFF0
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1009F3C9
mov	edx, [eax+4]
mov	[esp+4Ch+var_10], edx
mov	[esp+4Ch+var_1C], 3CAh
jmp	loc_1009F465
mov	eax, [esp+4Ch+var_3C]
mov	[ebx], eax
cmp	eax, ebp
jl	short loc_1009F3D9
mov	[esi+18h], ebp
mov	[esi+20h], ebp
			
test	byte ptr [esp+4Ch+var_30+2], 1
jz	loc_1009F465
mov	ecx, [esi+1Ch]
mov	edx, [esi+14h]
push	edi
lea	eax, [esp+50h+var_38]
push	eax
push	ecx
push	edx
push	esi
call	sub_1009F120
add	esp, 14h
mov	[esp+4Ch+var_28], eax
cmp	eax, ebp
jz	short loc_1009F414
mov	eax, [eax+4]
mov	[esp+4Ch+var_10], eax
mov	[esp+4Ch+var_1C], 3C9h
jmp	short loc_1009F465
mov	eax, [esp+4Ch+var_38]
mov	ecx, [esp+4Ch+arg_8]
mov	[ecx], eax
cmp	eax, ebp
jl	short loc_1009F465
mov	[esi+14h], ebp
mov	[esi+1Ch], ebp
jmp	short loc_1009F465
cmp	eax, ebp
jnz	short loc_1009F465
call	ds:PR_GetError
cmp	eax, 0FFFFE892h
jz	short loc_1009F455
mov	eax, dword_100BAE9C
cmp	eax, ebp
jz	loc_1009F374
mov	edx, [esp+4Ch+var_C]
push	edi
push	2
push	edx
jmp	loc_1009F365
cmp	ebx, ebp
jz	short loc_1009F45B
mov	[ebx], ebp
mov	eax, [esp+4Ch+arg_8]
cmp	eax, ebp
jz	short loc_1009F465
mov	[eax], ebp
			
push	edi
push	1
lea	eax, [esp+54h+var_2C]
push	3Dh
push	eax
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
pop	ebp
add	esp, 3Ch
retn
align 10h
			
sub	esp, 30h
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+38h+var_2C]
rep movsd
mov	esi, [esp+38h+arg_0]
mov	[esp+38h+var_30], 0
mov	[esp+38h+var_2C], offset aPkix_pl_soc_15 
mov	[esp+38h+var_C], 3Dh
test	esi, esi
jz	loc_1009F63D
cmp	[esp+38h+arg_4], 0
jz	loc_1009F63D
mov	eax, [esi+4]
mov	ecx, [esi+10h]
push	ebx
push	eax
push	0
push	ecx
call	ds:PR_Accept
mov	ebx, [esp+48h+arg_8]
mov	edi, eax
add	esp, 0Ch
test	edi, edi
jnz	short loc_1009F53B
call	ds:PR_GetError
cmp	eax, 0FFFFE892h
jz	short loc_1009F525
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009F510
mov	edx, [esp+3Ch+var_C]
push	ebx
push	2
push	edx
push	0
push	358h
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 358h
jmp	loc_1009F624
mov	eax, [esp+3Ch+arg_4]
mov	dword ptr [esi+8], 2
mov	dword ptr [eax], 0
jmp	loc_1009F624
push	ebx
lea	ecx, [esp+40h+var_30]
push	ecx
push	44h
push	35h
call	sub_100952A0
add	esp, 10h
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009F569
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 148h
jmp	loc_1009F624
mov	eax, [esp+3Ch+var_30]
mov	dword ptr [eax], 0
mov	ecx, [esi+4]
mov	edx, [esp+3Ch+var_30]
mov	[edx+4], ecx
mov	eax, [esp+3Ch+var_30]
mov	[eax+0Ch], edi
mov	ecx, [esp+3Ch+var_30]
mov	dword ptr [ecx+10h], 0
mov	edx, [esp+3Ch+var_30]
mov	dword ptr [edx+24h], 0
mov	eax, [esp+3Ch+var_30]
mov	dword ptr [eax+8], 5
mov	ecx, [esp+3Ch+var_30]
mov	dword ptr [ecx+40h], offset sub_1009EF10
mov	edx, [esp+3Ch+var_30]
mov	dword ptr [edx+28h], offset sub_1009EE20
mov	eax, [esp+3Ch+var_30]
mov	dword ptr [eax+2Ch], offset sub_1009F480
mov	ecx, [esp+3Ch+var_30]
mov	dword ptr [ecx+30h], offset sub_1009E920
mov	edx, [esp+3Ch+var_30]
mov	dword ptr [edx+34h], offset sub_1009EFF0
mov	eax, [esp+3Ch+var_30]
mov	dword ptr [eax+38h], offset sub_1009F120
mov	ecx, [esp+3Ch+var_30]
mov	dword ptr [ecx+3Ch], offset sub_1009F290
cmp	dword ptr [esi+4], 0
jnz	short loc_1009F61A
push	edi
call	sub_1009E3E0
add	esp, 4
mov	[esp+3Ch+var_28], eax
test	eax, eax
jz	short loc_1009F61A
mov	edx, [eax+4]
mov	[esp+3Ch+var_10], edx
mov	[esp+3Ch+var_1C], 3CBh
jmp	short loc_1009F624
			
mov	eax, [esp+3Ch+var_30]
mov	ecx, [esp+3Ch+arg_4]
mov	[ecx], eax
			
push	ebx
push	1
lea	edx, [esp+44h+var_2C]
push	3Dh
push	edx
call	sub_100781E0
add	esp, 10h
pop	ebx
pop	edi
pop	esi
add	esp, 30h
retn
			
mov	eax, [esp+38h+arg_8]
push	eax
push	1
lea	ecx, [esp+40h+var_2C]
push	1Fh
push	ecx
mov	[esp+48h+var_18], 1
mov	[esp+48h+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
pop	edi
pop	esi
add	esp, 30h
retn
align 10h
sub	esp, 46Ch
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+46Ch+var_4], eax
mov	eax, [esp+46Ch+arg_10]
mov	edx, [esp+46Ch+arg_14]
push	ebx
mov	ebx, [esp+470h+Str]
push	ebp
mov	ebp, [esp+474h+arg_18]
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+47Ch+var_464]
rep movsd
mov	[esp+47Ch+var_468], eax
mov	[esp+47Ch+var_438], edx
mov	[esp+47Ch+var_46C], 0
mov	[esp+47Ch+var_464], offset aPkix_pl_sock_3 
mov	[esp+47Ch+var_444], 3Dh
test	ebx, ebx
jz	loc_1009F9B0
test	eax, eax
jz	loc_1009F9B0
test	edx, edx
jz	loc_1009F9B0
mov	esi, ds:PR_GetHostByName
lea	eax, [esp+47Ch+var_434]
push	eax
push	400h
lea	ecx, [esp+484h+var_404]
push	ecx
push	ebx
call	esi 
add	esp, 10h
mov	edi, 4
test	eax, eax
jnz	short loc_1009F71A
cmp	[esp+47Ch+var_42A], di
jz	short loc_1009F758
push	2Eh		
push	ebx		
call	ds:strchr
add	esp, 8
test	eax, eax
jz	short loc_1009F72D
mov	byte ptr [eax],	0
lea	edx, [esp+47Ch+var_434]
push	edx
push	400h
lea	eax, [esp+484h+var_404]
push	eax
push	ebx
call	esi 
add	esp, 10h
test	eax, eax
jnz	loc_1009F97A
cmp	[esp+47Ch+var_42A], di
jnz	loc_1009F97A
mov	esi, [esp+47Ch+arg_C]
mov	ecx, 2
push	esi
mov	[esp+480h+var_424], cx
call	ds:PR_htons
mov	ebx, [esp+480h+arg_0]
xor	edi, edi
add	esp, 4
mov	[esp+47Ch+var_422], ax
cmp	ebx, edi
jz	loc_1009F812
mov	[esp+47Ch+var_420], edi
push	ebp
lea	edx, [esp+480h+var_46C]
push	edx
push	44h
push	35h
call	sub_100952A0
add	esp, 10h
mov	[esp+47Ch+var_460], eax
cmp	eax, edi
jz	loc_1009F865
mov	ecx, [eax+4]
mov	[esp+47Ch+var_448], ecx
mov	[esp+47Ch+var_454], 148h
			
cmp	[esp+47Ch+var_450], edi
jnz	short loc_1009F7D0
test	eax, eax
jnz	short loc_1009F7D0
cmp	[esp+47Ch+var_44C], edi
jnz	short loc_1009F7D0
cmp	[esp+47Ch+var_43C], edi
jz	short loc_1009F803
			
mov	eax, [esp+47Ch+var_46C]
xor	esi, esi
cmp	eax, esi
jz	short loc_1009F803
push	ebp
push	eax
call	sub_100955D0
add	esp, 8
mov	[esp+47Ch+var_45C], eax
cmp	eax, esi
jz	short loc_1009F7FF
push	ebp
push	eax
lea	eax, [esp+484h+var_464]
push	eax
call	sub_10078030
add	esp, 0Ch
mov	[esp+47Ch+var_45C], esi
mov	[esp+47Ch+var_46C], esi
			
push	ebp
push	1
push	3Dh
lea	ecx, [esp+488h+var_464]
push	ecx
jmp	loc_1009F9CA
lea	edx, [esp+47Ch+var_424]
push	edx
push	esi
lea	eax, [esp+484h+var_434]
push	eax
push	edi
call	ds:PR_EnumerateHostEnt
add	esp, 10h
cmp	eax, 0FFFFFFFFh
jnz	loc_1009F78D
mov	eax, dword_100BAE9C
cmp	eax, edi
jz	short loc_1009F850
mov	ecx, [esp+47Ch+var_444]
push	ebp
push	2
push	ecx
push	edi
push	35Dh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+47Ch+var_450], 1
mov	[esp+47Ch+var_454], 35Dh
jmp	loc_1009F7D0
mov	edx, [esp+47Ch+var_46C]
mov	ecx, [esp+47Ch+arg_4]
mov	[edx], ebx
mov	eax, [esp+47Ch+var_46C]
mov	[eax+4], ecx
mov	edx, [esp+47Ch+var_46C]
mov	[edx+0Ch], edi
mov	eax, [esp+47Ch+var_46C]
mov	[eax+10h], edi
mov	edx, [esp+47Ch+var_46C]
lea	ecx, [esp+47Ch+var_424]
mov	[edx+24h], ecx
mov	eax, [esp+47Ch+var_46C]
mov	dword ptr [eax+28h], offset sub_1009EE20
mov	ecx, [esp+47Ch+var_46C]
mov	dword ptr [ecx+2Ch], offset sub_1009F480
mov	edx, [esp+47Ch+var_46C]
mov	dword ptr [edx+30h], offset sub_1009E920
mov	eax, [esp+47Ch+var_46C]
mov	dword ptr [eax+34h], offset sub_1009EFF0
mov	ecx, [esp+47Ch+var_46C]
mov	dword ptr [ecx+38h], offset sub_1009F120
mov	edx, [esp+47Ch+var_46C]
mov	dword ptr [edx+3Ch], offset sub_1009F290
mov	eax, [esp+47Ch+var_46C]
mov	dword ptr [eax+40h], offset sub_1009EF10
cmp	ebx, edi
jz	short loc_1009F923
mov	ecx, [esp+47Ch+var_46C]
push	ecx
mov	ecx, ebp
call	sub_1009E630
add	esp, 4
mov	[esp+47Ch+var_460], eax
cmp	eax, edi
jz	short loc_1009F90E
mov	edx, [eax+4]
mov	[esp+47Ch+var_448], edx
mov	[esp+47Ch+var_454], 3C3h
jmp	loc_1009F7BA
mov	ecx, [esp+47Ch+var_468]
mov	[ecx], edi
mov	edx, [esp+47Ch+var_438]
mov	ecx, [esp+47Ch+var_46C]
mov	[edx], ecx
jmp	loc_1009F7BA
mov	ebx, [esp+47Ch+var_46C]
push	ebp
call	sub_1009E4B0
add	esp, 4
mov	[esp+47Ch+var_460], eax
test	eax, eax
jz	short loc_1009F94C
mov	edx, [eax+4]
mov	[esp+47Ch+var_448], edx
mov	[esp+47Ch+var_454], 3C1h
jmp	loc_1009F7BA
mov	eax, [esp+47Ch+var_468]
mov	ebx, [esp+47Ch+var_46C]
push	ebp
push	eax
call	sub_1009E7E0
add	esp, 8
mov	[esp+47Ch+var_460], eax
test	eax, eax
jz	short loc_1009F914
mov	ecx, [eax+4]
mov	[esp+47Ch+var_448], ecx
mov	[esp+47Ch+var_454], 3BEh
jmp	loc_1009F7BA
			
mov	eax, dword_100BAE9C
test	eax, eax
jz	short loc_1009F99B
mov	edx, [esp+47Ch+var_444]
push	ebp
push	2
push	edx
push	0
push	35Eh
push	eax
call	sub_10074820
add	esp, 18h
mov	[esp+47Ch+var_450], 1
mov	[esp+47Ch+var_454], 35Eh
jmp	loc_1009F7D0
			
push	ebp
push	1
push	1Fh
lea	edx, [esp+488h+var_464]
mov	[esp+488h+var_450], 1
mov	[esp+488h+var_454], 2BCh
push	edx
call	sub_100781E0
mov	ecx, [esp+48Ch+var_4]
add	esp, 10h
pop	edi
pop	esi
pop	ebp
pop	ebx
xor	ecx, esp
call	@__security_check_cookie@4 
add	esp, 46Ch
retn
align 10h
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_soc_16 
mov	[esp+30h+var_C], 3Dh
pop	esi
test	ecx, ecx
jz	short loc_1009FA46
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1009FA46
add	ecx, 28h
mov	[eax], ecx
mov	eax, [esp+2Ch+arg_8]
push	eax
push	1
lea	ecx, [esp+34h+var_2C]
push	3Dh
push	ecx
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	edx, [esp+2Ch+arg_8]
push	edx
push	1
lea	eax, [esp+34h+var_2C]
push	1Fh
push	eax
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
sub	esp, 2Ch
push	esi
push	edi
mov	ecx, 0Bh
mov	esi, offset dword_100BBAC0
lea	edi, [esp+34h+var_2C]
rep movsd
mov	ecx, [esp+34h+arg_0]
pop	edi
mov	[esp+30h+var_2C], offset aPkix_pl_soc_17 
mov	[esp+30h+var_C], 3Dh
pop	esi
test	ecx, ecx
jz	short loc_1009FAC6
mov	eax, [esp+2Ch+arg_4]
test	eax, eax
jz	short loc_1009FAC6
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [ecx+0Ch]
push	edx
push	1
mov	[eax], ecx
lea	eax, [esp+34h+var_2C]
push	3Dh
push	eax
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
mov	ecx, [esp+2Ch+arg_8]
push	ecx
push	1
lea	edx, [esp+34h+var_2C]
push	1Fh
push	edx
mov	[esp+3Ch+var_18], 1
mov	[esp+3Ch+var_1C], 2BCh
call	sub_100781E0
add	esp, 10h
add	esp, 2Ch
retn
			
jmp	ds:PL_CompareStrings
			
cmp	cl, 40h
jnb	short loc_1009FF9A
cmp	cl, 20h
jnb	short loc_1009FF90
shld	edx, eax, cl
shl	eax, cl
retn
mov	edx, eax
xor	eax, eax
and	cl, 1Fh
shl	edx, cl
retn
xor	eax, eax
xor	edx, edx
retn
align 10h
			
mov	eax, [esp+arg_4]
mov	ecx, [esp+arg_C]
or	ecx, eax
mov	ecx, [esp+arg_8]
jnz	short loc_1009FFB9
mov	eax, [esp+arg_0]
mul	ecx
retn	10h
push	ebx
mul	ecx
mov	ebx, eax
mov	eax, [esp+4+arg_0]
mul	[esp+4+arg_C]
add	ebx, eax
mov	eax, [esp+4+arg_0]
mul	ecx
add	edx, ebx
pop	ebx
retn	10h
align 10h
push	ebx
push	esi
mov	eax, [esp+8+arg_C]
or	eax, eax
jnz	short loc_100A0002
mov	ecx, [esp+8+arg_8]
mov	eax, [esp+8+arg_4]
xor	edx, edx
div	ecx
mov	ebx, eax
mov	eax, [esp+8+arg_0]
div	ecx
mov	edx, ebx
jmp	short loc_100A0043
mov	ecx, eax
mov	ebx, [esp+8+arg_8]
mov	edx, [esp+8+arg_4]
mov	eax, [esp+8+arg_0]
shr	ecx, 1
rcr	ebx, 1
shr	edx, 1
rcr	eax, 1
or	ecx, ecx
jnz	short loc_100A0010
div	ebx
mov	esi, eax
mul	[esp+8+arg_C]
mov	ecx, eax
mov	eax, [esp+8+arg_8]
mul	esi
add	edx, ecx
jb	short loc_100A003E
cmp	edx, [esp+8+arg_4]
ja	short loc_100A003E
jb	short loc_100A003F
cmp	eax, [esp+8+arg_0]
jbe	short loc_100A003F
			
dec	esi
			
xor	edx, edx
mov	eax, esi
pop	esi
pop	ebx
retn	10h
align 10h
align 4
			
push	ebx
push	esi
push	edi
mov	edx, [esp+0Ch+arg_0]
mov	eax, [esp+0Ch+arg_4]
mov	ecx, [esp+0Ch+arg_8]
push	ebp
push	edx
push	eax
push	ecx
push	ecx
push	offset sub_100A010C
push	large dword ptr	fs:0
mov	eax, ___security_cookie
xor	eax, esp
mov	[esp+28h+var_20], eax
mov	large fs:0, esp
			
mov	eax, [esp+28h+arg_4]
mov	ebx, [eax+8]
mov	ecx, [esp+28h+arg_0]
xor	ebx, [ecx]
mov	esi, [eax+0Ch]
cmp	esi, 0FFFFFFFEh
jz	short loc_100A00FE
mov	edx, [esp+28h+arg_8]
cmp	edx, 0FFFFFFFEh
jz	short loc_100A00D0
cmp	esi, edx
jbe	short loc_100A00FE
lea	esi, [esi+esi*2]
lea	ebx, [ebx+esi*4+10h]
mov	ecx, [ebx]
mov	[eax+0Ch], ecx
cmp	dword ptr [ebx+4], 0
jnz	short loc_100A00AE
push	101h
mov	eax, [ebx+8]
call	sub_100A0941
mov	ecx, 1
mov	eax, [ebx+8]
call	sub_100A0960
jmp	short loc_100A00AE
			
pop	large dword ptr	fs:0
add	esp, 18h
pop	edi
pop	esi
pop	ebx
retn
			
mov	ecx, [esp+arg_0]
test	dword ptr [ecx+4], 6
mov	eax, 1
jz	short locret_100A0151
mov	eax, [esp+arg_4]
mov	ecx, [eax+8]
xor	ecx, eax
call	@__security_check_cookie@4 
push	ebp
mov	ebp, [eax+18h]
push	dword ptr [eax+0Ch]
push	dword ptr [eax+10h]
push	dword ptr [eax+14h]
call	sub_100A007C
add	esp, 0Ch
pop	ebp
mov	eax, [esp+arg_4]
mov	edx, [esp+arg_C]
mov	[edx], eax
mov	eax, 3
retn
push	ebp
mov	ecx, [esp+8]
mov	ebp, [ecx]
push	dword ptr [ecx+1Ch]
push	dword ptr [ecx+18h]
push	dword ptr [ecx+28h]
call	sub_100A007C
add	esp, 0Ch
pop	ebp
retn	4
push	ebp
push	esi
push	edi
push	ebx
mov	ebp, edx
xor	eax, eax
xor	ebx, ebx
xor	edx, edx
xor	esi, esi
xor	edi, edi
call	ecx
pop	ebx
pop	edi
pop	esi
pop	ebp
retn
mov	ebp, edx
mov	esi, ecx
mov	eax, ecx
push	1
call	sub_100A0941
xor	eax, eax
xor	ebx, ebx
xor	ecx, ecx
xor	edx, edx
xor	edi, edi
jmp	esi
push	ebp
mov	ebp, esp
push	ebx
push	esi
push	edi
push	0		
push	0		
push	offset loc_100A01B3 
push	ecx		
call	RtlUnwind
pop	edi
pop	esi
pop	ebx
pop	ebp
retn
			
push	ebp
mov	ebp, [esp+4+arg_0]
push	edx
push	ecx
push	[esp+0Ch+arg_4]
call	sub_100A007C
add	esp, 0Ch
pop	ebp
retn	8
align 10h
mov	edi, edi
push	ebp
mov	ebp, esp
sub	esp, 18h
mov	eax, [ebp+arg_0]
push	ebx
mov	ebx, [ebp+TargetFrame]
push	esi
mov	esi, [ebx+8]
xor	esi, [eax]
push	edi
mov	eax, [esi]
mov	[ebp+var_1], 0
mov	[ebp+var_C], 1
lea	edi, [ebx+10h]
cmp	eax, 0FFFFFFFEh
jz	short loc_100A0206
mov	ecx, [esi+4]
add	ecx, edi
xor	ecx, [eax+edi]
call	[ebp+arg_4]
mov	ecx, [esi+0Ch]
mov	edx, [esi+8]
add	ecx, edi
xor	ecx, [edx+edi]
call	[ebp+arg_4]
mov	eax, [ebp+arg_8]
test	byte ptr [eax+4], 66h
jnz	loc_100A0333
lea	ecx, [ebp+var_18]
mov	[ebx-4], ecx
mov	ebx, [ebx+0Ch]
mov	[ebp+var_18], eax
mov	eax, [ebp+arg_10]
mov	[ebp+var_14], eax
cmp	ebx, 0FFFFFFFEh
jz	short loc_100A0298
jmp	short loc_100A0240
align 10h
			
lea	edx, [ebx+ebx*2]
mov	ecx, [esi+edx*4+14h]
lea	eax, [esi+edx*4+10h]
mov	[ebp+var_10], eax
mov	eax, [eax]
mov	[ebp+var_8], eax
test	ecx, ecx
jz	short loc_100A026B
mov	edx, edi
call	sub_100A016E
mov	[ebp+var_1], 1
test	eax, eax
jl	short loc_100A02A2
jg	short loc_100A02AB
mov	eax, [ebp+var_8]
mov	ebx, eax
cmp	eax, 0FFFFFFFEh
jnz	short loc_100A0240
cmp	[ebp+var_1], 0
jz	short loc_100A0298
			
mov	eax, [esi]
cmp	eax, 0FFFFFFFEh
jz	short loc_100A028A
mov	ecx, [esi+4]
add	ecx, edi
xor	ecx, [eax+edi]
call	[ebp+arg_4]
mov	ecx, [esi+0Ch]
mov	edx, [esi+8]
add	ecx, edi
xor	ecx, [edx+edi]
call	[ebp+arg_4]
			
mov	eax, [ebp+var_C]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
retn
mov	[ebp+var_C], 0
jmp	short loc_100A0278
mov	eax, [ebp+arg_8]
cmp	dword ptr [eax], 0E06D7363h
jnz	short loc_100A02DF
cmp	dword_100BBB04,	0
jz	short loc_100A02DF
push	offset dword_100BBB04
call	sub_100A09F4
add	esp, 4
test	eax, eax
jz	short loc_100A02DF
mov	ecx, [ebp+arg_8]
push	1
push	ecx
call	dword_100BBB04
add	esp, 8
			
mov	ecx, [ebp+TargetFrame] 
call	sub_100A019E
mov	eax, [ebp+TargetFrame]
cmp	[eax+0Ch], ebx
jz	short loc_100A0300
mov	edx, [ebp+arg_0]
push	edx
push	edi
mov	edx, ebx
mov	ecx, eax
call	sub_100A01B8
mov	eax, [ebp+TargetFrame]
mov	ecx, [ebp+var_8]
mov	[eax+0Ch], ecx
mov	eax, [esi]
cmp	eax, 0FFFFFFFEh
jz	short loc_100A0318
mov	ecx, [esi+4]
add	ecx, edi
xor	ecx, [eax+edi]
call	[ebp+arg_4]
mov	ecx, [esi+0Ch]
mov	edx, [esi+8]
add	ecx, edi
xor	ecx, [edx+edi]
call	[ebp+arg_4]
mov	eax, [ebp+var_10]
mov	ecx, [eax+8]
mov	edx, edi
call	sub_100A0185
mov	edx, 0FFFFFFFEh
cmp	[ebx+0Ch], edx
jz	loc_100A0298
mov	ecx, [ebp+arg_0]
push	ecx
push	edi
mov	ecx, ebx
call	sub_100A01B8
jmp	loc_100A0278
			
mov	edi, edi
push	ebp
mov	ebp, esp
mov	eax, 0E06D7363h
cmp	[ebp+arg_0], eax
jnz	short loc_100A036E
push	[ebp+arg_4]
push	eax
call	_XcptFilter
pop	ecx
pop	ecx
pop	ebp
retn
xor	eax, eax
pop	ebp
retn
mov	edi, edi
push	ebp
mov	ebp, esp
push	esi
mov	esi, [ebp+arg_0]
xor	eax, eax
jmp	short loc_100A038E
test	eax, eax
jnz	short loc_100A0393
mov	ecx, [esi]
test	ecx, ecx
jz	short loc_100A038B
call	ecx
add	esi, 4
cmp	esi, [ebp+arg_4]
jb	short loc_100A037F
pop	esi
pop	ebp
retn
push	80h		
call	ds:malloc
pop	ecx
mov	Memory,	eax
mov	dword_100BBAF4,	eax
test	eax, eax
jnz	short loc_100A03B2
inc	eax
retn
and	dword ptr [eax], 0
xor	eax, eax
retn
			
mov	edi, edi
push	ebp
mov	ebp, esp
push	ebx
xor	eax, eax
push	esi
push	edi
cmp	[ebp+arg_4], eax
jnz	short loc_100A03ED
cmp	dword_100BAEF4,	eax
jle	short loc_100A03E6
dec	dword_100BAEF4
mov	edi, ds:InterlockedCompareExchange
push	eax
mov	esi, offset Target
jmp	loc_100A04CB
			
xor	eax, eax
jmp	loc_100A0538
cmp	[ebp+arg_4], 1
jnz	loc_100A0535
mov	ecx, large fs:18h
mov	ebx, [ecx+4]
mov	edi, ds:InterlockedCompareExchange
mov	[ebp+arg_4], eax
push	eax
mov	esi, offset Target
jmp	short loc_100A0423
cmp	eax, ebx
jz	short loc_100A042D
push	3E8h		
call	ds:Sleep
push	0		
push	ebx		
push	esi		
call	edi 
test	eax, eax
jnz	short loc_100A0412
jmp	short loc_100A0434
mov	[ebp+arg_4], 1
mov	eax, dword_100BBAEC
push	2
pop	edi
test	eax, eax
jz	short loc_100A0449
push	1Fh
call	_amsg_exit
jmp	short loc_100A0482
push	offset dword_100A14CC
push	offset dword_100A14C4
mov	dword_100BBAEC,	1
call	sub_100A0372
pop	ecx
pop	ecx
test	eax, eax
jnz	loc_100A03E6
push	offset dword_100A14C0
push	offset dword_100A14BC
call	_initterm
pop	ecx
mov	dword_100BBAEC,	edi
xor	ebx, ebx
pop	ecx
cmp	[ebp+arg_4], ebx
jnz	short loc_100A0492
push	ebx		
push	esi		
call	ds:InterlockedExchange
cmp	dword_100BBB00,	ebx
jz	short loc_100A04B6
push	offset dword_100BBB00
call	sub_100A09F4
pop	ecx
test	eax, eax
jz	short loc_100A04B6
push	[ebp+arg_8]
push	edi
push	[ebp+arg_0]
call	dword_100BBB00
			
inc	dword_100BAEF4
jmp	short loc_100A0535
push	3E8h		
call	ds:Sleep
push	0		
push	1		
push	esi		
call	edi 
test	eax, eax
jnz	short loc_100A04BE
mov	eax, dword_100BBAEC
cmp	eax, 2
jz	short loc_100A04E8
push	1Fh
call	_amsg_exit
pop	ecx
jmp	short loc_100A0535
mov	ebx, Memory
test	ebx, ebx
jz	short loc_100A0522
mov	edi, dword_100BBAF4
add	edi, 0FFFFFFFCh
jmp	short loc_100A0508
mov	eax, [edi]
test	eax, eax
jz	short loc_100A0505
call	eax
sub	edi, 4
cmp	edi, ebx
jnb	short loc_100A04FD
push	ebx		
call	ds:free
and	dword_100BBAF4,	0
and	Memory,	0
pop	ecx
push	0		
push	esi		
mov	dword_100BBAEC,	0
call	ds:InterlockedExchange
			
xor	eax, eax
inc	eax
pop	edi
pop	esi
pop	ebx
pop	ebp
retn	0Ch
push	2Ch
push	offset dword_100B10A8
call	__SEH_prolog4
mov	ecx, [ebp+arg_4]
xor	edx, edx
inc	edx
mov	[ebp+var_1C], edx
xor	esi, esi
mov	[ebp+ms_exc.registration.TryLevel], esi
mov	dword_100BA830,	ecx
cmp	ecx, esi
jnz	short loc_100A0573
cmp	dword_100BAEF4,	esi
jnz	short loc_100A0573
mov	[ebp+var_1C], esi
jmp	loc_100A0779
			
cmp	ecx, edx
jz	short loc_100A0580
cmp	ecx, 2
jnz	loc_100A060D
mov	eax, dword_100BBAFC
cmp	eax, esi
jz	short loc_100A05BF
mov	[ebp+ms_exc.registration.TryLevel], edx
mov	dword_100BAEF8,	edx
push	[ebp+arg_8]
push	ecx
push	[ebp+arg_0]
call	eax 
mov	[ebp+var_1C], eax
jmp	short loc_100A05BC
mov	eax, [ebp-14h]
mov	ecx, [eax]
mov	ecx, [ecx]
mov	[ebp-20h], ecx
push	eax
push	ecx
call	sub_100A0352
pop	ecx
pop	ecx
retn
mov	esp, [ebp-18h]
xor	esi, esi
mov	[ebp-1Ch], esi
mov	[ebp+ms_exc.registration.TryLevel], esi
cmp	[ebp+var_1C], esi
jz	loc_100A0779
mov	[ebp+ms_exc.registration.TryLevel], 2
push	[ebp+arg_8]
push	[ebp+arg_4]
push	[ebp+arg_0]
call	sub_100A03B8
mov	[ebp+var_1C], eax
jmp	short loc_100A05FE
mov	eax, [ebp-14h]
mov	ecx, [eax]
mov	ecx, [ecx]
mov	[ebp-24h], ecx
push	eax
push	ecx
call	sub_100A0352
pop	ecx
pop	ecx
retn
mov	esp, [ebp-18h]
xor	esi, esi
mov	[ebp-1Ch], esi
mov	[ebp+ms_exc.registration.TryLevel], esi
cmp	[ebp+var_1C], esi
jz	loc_100A0779
mov	ecx, [ebp+arg_4]
mov	[ebp+ms_exc.registration.TryLevel], 3
push	[ebp+arg_8]
push	ecx
push	[ebp+arg_0]
call	sub_100A0A72
mov	[ebp+var_1C], eax
jmp	short loc_100A0641
mov	eax, [ebp-14h]
mov	ecx, [eax]
mov	ecx, [ecx]
mov	[ebp-28h], ecx
push	eax
push	ecx
call	sub_100A0352
pop	ecx
pop	ecx
retn
mov	esp, [ebp-18h]
xor	esi, esi
mov	[ebp-1Ch], esi
mov	[ebp+ms_exc.registration.TryLevel], esi
cmp	[ebp+arg_4], 1
jnz	loc_100A06EA
cmp	[ebp+var_1C], esi
jnz	loc_100A06EA
mov	[ebp+ms_exc.registration.TryLevel], 4
push	esi
push	esi
push	[ebp+arg_0]
call	sub_100A0A72
jmp	short loc_100A0683
mov	eax, [ebp-14h]
mov	ecx, [eax]
mov	ecx, [ecx]
mov	[ebp-2Ch], ecx
push	eax
push	ecx
call	sub_100A0352
pop	ecx
pop	ecx
retn
mov	esp, [ebp-18h]
xor	esi, esi
mov	[ebp+ms_exc.registration.TryLevel], esi
mov	[ebp+ms_exc.registration.TryLevel], 5
push	esi
push	esi
push	[ebp+arg_0]
call	sub_100A03B8
jmp	short loc_100A06B2
mov	eax, [ebp-14h]
mov	ecx, [eax]
mov	ecx, [ecx]
mov	[ebp-30h], ecx
push	eax
push	ecx
call	sub_100A0352
pop	ecx
pop	ecx
retn
mov	esp, [ebp-18h]
xor	esi, esi
mov	[ebp+ms_exc.registration.TryLevel], esi
mov	eax, dword_100BBAFC
cmp	eax, esi
jz	short loc_100A06EA
mov	[ebp+ms_exc.registration.TryLevel], 6
push	esi
push	esi
push	[ebp+arg_0]
call	eax 
jmp	short loc_100A06E7
mov	eax, [ebp-14h]
mov	ecx, [eax]
mov	ecx, [ecx]
mov	[ebp-34h], ecx
push	eax
push	ecx
call	sub_100A0352
pop	ecx
pop	ecx
retn
mov	esp, [ebp-18h]
xor	esi, esi
mov	[ebp+ms_exc.registration.TryLevel], esi
			
cmp	[ebp+arg_4], esi
jz	short loc_100A06F9
cmp	[ebp+arg_4], 3
jnz	loc_100A0779
mov	[ebp+ms_exc.registration.TryLevel], 7
push	[ebp+arg_8]
push	[ebp+arg_4]
push	[ebp+arg_0]
call	sub_100A03B8
mov	[ebp+var_1C], eax
jmp	short loc_100A072F
mov	eax, [ebp-14h]
mov	ecx, [eax]
mov	ecx, [ecx]
mov	[ebp-38h], ecx
push	eax
push	ecx
call	sub_100A0352
pop	ecx
pop	ecx
retn
mov	esp, [ebp-18h]
xor	esi, esi
mov	[ebp-1Ch], esi
mov	[ebp+ms_exc.registration.TryLevel], esi
mov	eax, dword_100BBAFC
cmp	eax, esi
jz	short loc_100A0779
cmp	dword_100BAEF8,	esi
jz	short loc_100A0779
mov	[ebp+ms_exc.registration.TryLevel], 8
push	[ebp+arg_8]
push	[ebp+arg_4]
push	[ebp+arg_0]
call	eax 
mov	[ebp+var_1C], eax
jmp	short loc_100A0776
mov	eax, [ebp-14h]
mov	ecx, [eax]
mov	ecx, [ecx]
mov	[ebp-3Ch], ecx
push	eax
push	ecx
call	sub_100A0352
pop	ecx
pop	ecx
retn
mov	esp, [ebp-18h]
xor	esi, esi
mov	[ebp-1Ch], esi
mov	[ebp+ms_exc.registration.TryLevel], esi
			
mov	[ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call	sub_100A0790
mov	eax, [ebp+var_1C]
call	__SEH_epilog4
retn	0Ch
			
mov	dword_100BA830,	0FFFFFFFFh
retn
public DllEntryPoint
mov	edi, edi
push	ebp
mov	ebp, esp
cmp	[ebp+arg_4], 1
jnz	short loc_100A07AB
call	sub_100A0AF6
pop	ebp
jmp	loc_100A053F
mov	edi, edi
push	ebp
mov	ebp, esp
sub	esp, 328h
mov	dword_100BB000,	eax
mov	dword_100BAFFC,	ecx
mov	dword_100BAFF8,	edx
mov	dword_100BAFF4,	ebx
mov	dword_100BAFF0,	esi
mov	dword_100BAFEC,	edi
mov	word_100BB018, ss
mov	word_100BB00C, cs
mov	word_100BAFE8, ds
mov	word_100BAFE4, es
mov	word_100BAFE0, fs
mov	word_100BAFDC, gs
pushf
pop	dword_100BB010
mov	eax, [ebp+var_s0]
mov	dword_100BB004,	eax
mov	eax, [ebp+4]
mov	dword_100BB008,	eax
lea	eax, [ebp+arg_0]
mov	dword_100BB014,	eax
mov	eax, [ebp+var_320]
mov	dword_100BAF50,	10001h
mov	eax, dword_100BB008
mov	dword_100BAF0C,	eax
mov	dword_100BAF00,	0C0000409h
mov	dword_100BAF04,	1
mov	eax, ___security_cookie
mov	[ebp+var_328], eax
mov	eax, dword_100BA818
mov	[ebp+var_324], eax
push	0		
call	ds:SetUnhandledExceptionFilter
push	offset ExceptionInfo 
call	ds:UnhandledExceptionFilter
push	0C0000409h	
call	ds:GetCurrentProcess
push	eax		
call	ds:TerminateProcess
leave
retn
align 10h
push	esi
mov	eax, [esp+14h]
or	eax, eax
jnz	short loc_100A08D1
mov	ecx, [esp+10h]
mov	eax, [esp+0Ch]
xor	edx, edx
div	ecx
mov	ebx, eax
mov	eax, [esp+8]
div	ecx
mov	esi, eax
mov	eax, ebx
mul	dword ptr [esp+10h]
mov	ecx, eax
mov	eax, esi
mul	dword ptr [esp+10h]
add	edx, ecx
jmp	short loc_100A0918
mov	ecx, eax
mov	ebx, [esp+10h]
mov	edx, [esp+0Ch]
mov	eax, [esp+8]
shr	ecx, 1
rcr	ebx, 1
shr	edx, 1
rcr	eax, 1
or	ecx, ecx
jnz	short loc_100A08DF
div	ebx
mov	esi, eax
mul	dword ptr [esp+14h]
mov	ecx, eax
mov	eax, [esp+10h]
mul	esi
add	edx, ecx
jb	short loc_100A090D
cmp	edx, [esp+0Ch]
ja	short loc_100A090D
jb	short loc_100A0916
cmp	eax, [esp+8]
jbe	short loc_100A0916
			
dec	esi
sub	eax, [esp+10h]
sbb	edx, [esp+14h]
			
xor	ebx, ebx
sub	eax, [esp+8]
sbb	edx, [esp+0Ch]
neg	edx
neg	eax
sbb	edx, 0
mov	ecx, edx
mov	edx, ebx
mov	ebx, ecx
mov	ecx, eax
mov	eax, esi
pop	esi
retn	10h
align 4
push	ebx
push	ecx
mov	ebx, offset dword_100BA820
jmp	short loc_100A094C
			
push	ebx
push	ecx
mov	ebx, offset dword_100BA820
mov	ecx, [esp+8+arg_0]
mov	[ebx+8], ecx
mov	[ebx+4], eax
mov	[ebx+0Ch], ebp
push	ebp
push	ecx
push	eax
pop	eax
pop	ecx
pop	ebp
pop	ecx
pop	ebx
retn	4
call	eax
retn
align 10h
mov	edi, edi
push	ebp
mov	ebp, esp
mov	ecx, [ebp+arg_0]
mov	eax, 5A4Dh
cmp	[ecx], ax
jz	short loc_100A0986
xor	eax, eax
pop	ebp
retn
mov	eax, [ecx+3Ch]
add	eax, ecx
cmp	dword ptr [eax], 4550h
jnz	short loc_100A0982
xor	edx, edx
mov	ecx, 10Bh
cmp	[eax+18h], cx
setz	dl
mov	eax, edx
pop	ebp
retn
align 10h
mov	edi, edi
push	ebp
mov	ebp, esp
mov	eax, [ebp+arg_0]
mov	ecx, [eax+3Ch]
add	ecx, eax
movzx	eax, word ptr [ecx+14h]
push	ebx
push	esi
movzx	esi, word ptr [ecx+6]
xor	edx, edx
push	edi
lea	eax, [eax+ecx+18h]
test	esi, esi
jbe	short loc_100A09ED
mov	edi, [ebp+arg_4]
mov	ecx, [eax+0Ch]
cmp	edi, ecx
jb	short loc_100A09E5
mov	ebx, [eax+8]
add	ebx, ecx
cmp	edi, ebx
jb	short loc_100A09EF
inc	edx
add	eax, 28h
cmp	edx, esi
jb	short loc_100A09D5
xor	eax, eax
pop	edi
pop	esi
pop	ebx
pop	ebp
retn
			
push	8
push	offset stru_100B1128
call	__SEH_prolog4
and	[ebp+ms_exc.registration.TryLevel], 0
mov	esi, 10000000h
push	esi
call	sub_100A0970
pop	ecx
test	eax, eax
jz	short loc_100A0A51
mov	eax, [ebp+arg_0]
sub	eax, esi
push	eax
push	esi
call	sub_100A09B0
pop	ecx
pop	ecx
test	eax, eax
jz	short loc_100A0A51
mov	eax, [eax+24h]
shr	eax, 1Fh
not	eax
and	eax, 1
mov	[ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
jmp	short loc_100A0A5A
mov	eax, [ebp+ms_exc.exc_ptr] 
mov	eax, [eax]
mov	eax, [eax]
xor	ecx, ecx
cmp	eax, 0C0000005h
setz	cl
mov	eax, ecx
retn
mov	esp, [ebp+ms_exc.old_esp] 
			
mov	[ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
xor	eax, eax
call	__SEH_epilog4
retn
			
xor	eax, eax
inc	eax
retn	0Ch
			
mov	edi, edi
push	ebp
mov	ebp, esp
push	[ebp+arg_C]
push	[ebp+arg_8]	
push	[ebp+TargetFrame] 
push	[ebp+arg_0]	
push	offset @__security_check_cookie@4 
push	offset ___security_cookie 
call	sub_100A01D0
add	esp, 18h
pop	ebp
retn
mov	edi, edi
push	ebp
mov	ebp, esp
sub	esp, 10h
mov	eax, ___security_cookie
and	[ebp+SystemTimeAsFileTime.dwLowDateTime], 0
and	[ebp+SystemTimeAsFileTime.dwHighDateTime], 0
push	ebx
push	edi
mov	edi, 0BB40E64Eh
mov	ebx, 0FFFF0000h
cmp	eax, edi
jz	short loc_100A0B28
test	ebx, eax
jz	short loc_100A0B28
not	eax
mov	dword_100BA818,	eax
jmp	short loc_100A0B83
			
push	esi
lea	eax, [ebp+SystemTimeAsFileTime]
push	eax		
call	ds:GetSystemTimeAsFileTime
mov	esi, [ebp+SystemTimeAsFileTime.dwHighDateTime]
xor	esi, [ebp+SystemTimeAsFileTime.dwLowDateTime]
call	ds:GetCurrentProcessId
xor	esi, eax
call	ds:GetCurrentThreadId
xor	esi, eax
call	ds:GetTickCount
xor	esi, eax
lea	eax, [ebp+PerformanceCount]
push	eax		
call	ds:QueryPerformanceCounter
mov	eax, dword ptr [ebp+PerformanceCount+4]
xor	eax, dword ptr [ebp+PerformanceCount]
xor	esi, eax
cmp	esi, edi
jz	short loc_100A0B6F
test	___security_cookie, ebx
jnz	short loc_100A0B74
mov	esi, 0BB40E64Fh
mov	___security_cookie, esi
not	esi
mov	dword_100BA818,	esi
pop	esi
pop	edi
pop	ebx
leave
retn
align 4
align 80h
dd 100h	dup(?)
extrn GetSystemTimeAsFileTime:dword 
			
extrn GetCurrentProcessId:dword	
			
extrn GetCurrentThreadId:dword 
			
extrn GetTickCount:dword 
			
extrn QueryPerformanceCounter:dword 
			
extrn SetUnhandledExceptionFilter:dword	
			
extrn UnhandledExceptionFilter:dword 
			
extrn GetCurrentProcess:dword 
			
extrn TerminateProcess:dword 
			
extrn InterlockedCompareExchange:dword 
			
			
extrn Sleep:dword	
			
			
extrn InterlockedExchange:dword	
			
			
extrn __imp_RtlUnwind:dword 
extrn PR_htons:dword	
			
extrn PR_Accept:dword	
			
extrn PR_Send:dword	
			
extrn PR_Shutdown:dword	
			
extrn PR_Listen:dword	
			
extrn PR_ConnectContinue:dword 
			
extrn PR_Bind:dword	
			
extrn PR_ErrorToString:dword 
			
extrn PR_FindFunctionSymbol:dword 
			
extrn PR_DestroyRWLock:dword 
			
extrn PR_Realloc:dword	
			
extrn PR_Malloc:dword	
			
extrn PR_GetThreadPrivate:dword	
			
extrn PR_SetThreadPrivate:dword	
			
			
extrn PR_NewThreadPrivateIndex:dword 
			
extrn PR_Free:dword	
			
extrn PR_Calloc:dword	
			
extrn PR_sprintf_append:dword 
			
extrn PR_GetError:dword	
			
extrn PR_AtomicSet:dword 
			
			
extrn PR_NetAddrToString:dword 
			
extrn PR_ConvertIPv4AddrToIPv6:dword 
			
			
extrn PR_htonl:dword	
			
extrn PR_SetErrorText:dword 
			
extrn PR_Sleep:dword	
			
			
extrn PR_FindSymbol:dword 
			
extrn PR_LoadLibrary:dword 
			
			
extrn PR_UnloadLibrary:dword 
			
extrn PR_IntervalToSeconds:dword 
			
			
extrn PR_IntervalToMilliseconds:dword 
			
			
extrn PR_IntervalToMicroseconds:dword 
			
extrn PR_NewLogModule:dword 
			
			
extrn PR_AtomicDecrement:dword 
			
extrn PR_AtomicIncrement:dword 
			
extrn PR_AtomicAdd:dword 
			
extrn PR_LogPrint:dword	
			
extrn PR_CallOnceWithArg:dword
			
			
extrn PR_IntervalNow:dword 
			
extrn PR_GetEnv:dword	
			
extrn PR_Poll:dword	
			
extrn PR_TicksPerSecond:dword 
			
extrn PR_Recv:dword	
			
extrn PR_snprintf:dword	
			
extrn PR_Write:dword	
			
extrn PR_NewTCPSocket:dword 
			
extrn PR_SecondsToInterval:dword 
			
extrn PR_StringToNetAddr:dword 
			
extrn PR_GetHostByName:dword 
			
extrn PR_EnumerateHostEnt:dword	
			
			
extrn PR_Connect:dword	
			
extrn PR_InitializeNetAddr:dword 
			
extrn PR_Close:dword	
			
extrn PR_DestroyMonitor:dword 
			
extrn PR_NewMonitor:dword 
			
extrn PR_Now:dword	
			
extrn PR_EnterMonitor:dword 
			
extrn PR_ExitMonitor:dword 
			
extrn PR_NotifyCondVar:dword 
			
extrn PR_NotifyAllCondVar:dword	
			
extrn PR_CallOnce:dword	
			
extrn PR_Lock:dword	
			
extrn PR_Unlock:dword	
			
extrn PR_WaitCondVar:dword 
			
extrn PR_DestroyLock:dword 
			
extrn PR_NewLock:dword	
			
extrn PR_NewCondVar:dword 
			
extrn PR_smprintf:dword	
			
extrn PR_smprintf_free:dword 
			
extrn __imp_PL_strnstr:dword 
			
extrn __imp_PL_strstr:dword 
extrn __imp_PL_strcat:dword 
extrn __imp_PL_strlen:dword 
extrn __imp_PL_strncpyz:dword 
extrn __imp_PL_strcatn:dword 
extrn __imp_PL_Base64Encode:dword 
extrn __imp_PL_strcasecmp:dword	
extrn __imp_PL_strncasecmp:dword 
extrn __imp_PL_HashTableEnumerateEntries:dword
			
			
extrn __imp_PL_CompareValues:dword 
extrn __imp_PL_NewHashTable:dword 
extrn __imp_PL_HashTableAdd:dword 
extrn __imp_PL_HashTableRemove:dword 
extrn __imp_PL_HashTableLookup:dword 
extrn __imp_PL_ArenaRelease:dword 
extrn __imp_PL_ArenaAllocate:dword 
extrn __imp_PL_InitArenaPool:dword 
extrn __imp_PL_FinishArenaPool:dword 
extrn __imp_PL_HashString:dword	
extrn PL_CompareStrings:dword 
extrn __imp_PL_HashTableDestroy:dword 
extrn __imp__amsg_exit:dword 
			
extrn __imp__initterm:dword 
extrn free:dword	
			
extrn malloc:dword	
			
extrn __imp__XcptFilter:dword 
extrn printf:dword	
			
extrn qsort:dword	
			
			
extrn tolower:dword	
			
extrn fopen:dword	
			
extrn _iob:dword	
			
extrn fprintf:dword	
			
extrn fflush:dword	
			
extrn fclose:dword	
			
extrn isspace:dword	
			
			
extrn strstr:dword	
			
extrn strchr:dword	
			
extrn atoi:dword	
			
extrn memmove:dword	
			
			
extrn strtol:dword	
			
extrn strncmp:dword	
			
extrn getenv:dword	
			
extrn isdigit:dword	
			
extrn __imp_memcpy:dword 
extrn strrchr:dword	
			
			
extrn __imp_memset:dword 
extrn _mktemp:dword	
extrn __imp_NSSBase64Decoder_Create_Util:dword
			
			
extrn __imp_NSSBase64Encoder_Create_Util:dword
			
extrn __imp_NSSBase64Decoder_Update_Util:dword
			
extrn __imp_NSSBase64Encoder_Update_Util:dword
			
extrn __imp_NSSBase64Decoder_Destroy_Util:dword
			
extrn __imp_NSSBase64Encoder_Destroy_Util:dword
			
extrn __imp_NSSBase64_DecodeBuffer_Util:dword
			
extrn __imp_BTOA_ConvertItemToAscii_Util:dword
			
extrn __imp_ATOB_ConvertAsciiToItem_Util:dword
			
extrn __imp_ATOB_AsciiToData_Util:dword	
extrn __imp_BTOA_DataToAscii_Util:dword	
extrn __imp_SEC_ASN1LengthLength_Util:dword
			
extrn __imp_SEC_ASN1DecodeInteger_Util:dword
			
extrn __imp_SEC_ASN1EncodeUnsignedInteger_Util:dword
			
extrn __imp_SEC_ASN1EncodeInteger_Util:dword
			
extrn __imp_SEC_ASN1EncodeItem_Util:dword
			
extrn __imp_SEC_ASN1Encode_Util:dword 
extrn __imp_SEC_ASN1EncoderClearTakeFromBuf_Util:dword
			
extrn __imp_SEC_ASN1EncoderSetTakeFromBuf_Util:dword
			
extrn __imp_SEC_ASN1EncoderClearStreaming_Util:dword
			
extrn __imp_SEC_ASN1EncoderSetStreaming_Util:dword
			
extrn __imp_SEC_ASN1EncoderClearNotifyProc_Util:dword
			
extrn __imp_SEC_ASN1EncoderSetNotifyProc_Util:dword
			
extrn __imp_SEC_ASN1EncoderAbort_Util:dword
			
extrn __imp_SEC_ASN1EncoderFinish_Util:dword
			
extrn __imp_SEC_ASN1EncoderUpdate_Util:dword
			
extrn __imp_SEC_ASN1EncoderStart_Util:dword
			
extrn __imp_SEC_QuickDERDecodeItem_Util:dword
			
extrn __imp_SEC_ASN1DecodeItem_Util:dword
			
extrn __imp_SEC_ASN1Decode_Util:dword 
extrn __imp_SEC_ASN1DecoderClearNotifyProc_Util:dword
			
extrn __imp_SEC_ASN1DecoderSetNotifyProc_Util:dword
			
extrn __imp_SEC_ASN1DecoderClearFilterProc_Util:dword
			
extrn __imp_SEC_ASN1DecoderSetFilterProc_Util:dword
			
extrn __imp_SEC_ASN1DecoderAbort_Util:dword
			
extrn __imp_SEC_ASN1DecoderFinish_Util:dword
			
extrn __imp_NSSBase64_EncodeItem_Util:dword
			
extrn __imp_SEC_ASN1DecoderStart_Util:dword
			
extrn __imp_DER_EncodeTimeChoice_Util:dword
			
extrn __imp_DER_DecodeTimeChoice_Util:dword
			
extrn __imp_CERT_GenTime2FormattedAscii_Util:dword
			
extrn __imp_DER_GeneralizedTimeToTime_Util:dword
			
extrn __imp_DER_TimeToGeneralizedTimeArena_Util:dword
			
extrn __imp_DER_TimeToGeneralizedTime_Util:dword
			
extrn __imp_DER_TimeChoiceDayToAscii_Util:dword
			
extrn __imp_DER_GeneralizedDayToAscii_Util:dword
			
extrn __imp_DER_UTCDayToAscii_Util:dword
			
extrn __imp_DER_UTCTimeToAscii_Util:dword
			
extrn __imp_DER_UTCTimeToTime_Util:dword
			
extrn __imp_DER_AsciiToTime_Util:dword 
extrn __imp_DER_TimeToUTCTime_Util:dword
			
extrn __imp_DER_GetInteger_Util:dword 
extrn __imp_DER_Lengths_Util:dword 
extrn __imp_DER_Encode_Util:dword 
extrn __imp_SGN_CompareDigestInfo_Util:dword
			
extrn __imp_SGN_CopyDigestInfo_Util:dword
			
extrn __imp_SGN_DestroyDigestInfo_Util:dword
			
extrn __imp_SGN_CreateDigestInfo_Util:dword
			
extrn __imp_SECITEM_ZfreeItem_Util:dword
			
extrn __imp_SECITEM_FreeItem_Util:dword	
extrn __imp_SECITEM_ArenaDupItem_Util:dword
			
extrn __imp_SECITEM_DupItem_Util:dword 
extrn __imp_SECITEM_CopyItem_Util:dword	
extrn __imp_SECITEM_ItemsAreEqual_Util:dword
			
extrn __imp_SECITEM_CompareItem_Util:dword
			
extrn __imp_SECITEM_AllocItem_Util:dword
			
extrn __imp_SECOID_AddEntry_Util:dword 
extrn __imp_SECOID_FindOIDTagDescription_Util:dword
			
extrn __imp_SECOID_CompareAlgorithmID_Util:dword
			
extrn __imp_SECOID_DestroyAlgorithmID_Util:dword
			
extrn __imp_SECOID_GetAlgorithmTag_Util:dword
			
extrn __imp_SECOID_CopyAlgorithmID_Util:dword
			
extrn __imp_SECOID_SetAlgorithmID_Util:dword
			
extrn __imp_SECOID_FindOIDByTag_Util:dword
			
extrn __imp_SECOID_FindOIDTag_Util:dword
			
extrn __imp_SECOID_FindOID_Util:dword 
extrn __imp_NSS_PutEnv_Util:dword 
extrn __imp_PORT_UCS2_ASCIIConversion_Util:dword
			
extrn __imp_PORT_UCS2_UTF8Conversion_Util:dword
			
extrn __imp_PORT_SetUCS2_UTF8ConversionFunction_Util:dword
			
extrn __imp_PORT_SetUCS2_ASCIIConversionFunction_Util:dword
			
extrn __imp_PORT_SetUCS4_UTF8ConversionFunction_Util:dword
			
extrn __imp_PORT_ArenaStrdup_Util:dword	
extrn __imp_PORT_ArenaUnmark_Util:dword	
extrn __imp_PORT_ArenaRelease_Util:dword
			
extrn __imp_PORT_ArenaMark_Util:dword 
extrn __imp_PORT_ArenaGrow_Util:dword 
extrn __imp_NSSRWLock_New_Util:dword 
extrn __imp_NSSRWLock_Destroy_Util:dword
			
extrn __imp_NSSRWLock_LockRead_Util:dword
			
extrn __imp_NSSRWLock_LockWrite_Util:dword
			
extrn __imp_NSSRWLock_UnlockRead_Util:dword
			
extrn __imp_NSSRWLock_UnlockWrite_Util:dword
			
extrn __imp_NSS_Get_SEC_SetOfAnyTemplate_Util:dword
			
extrn __imp_NSS_Get_SEC_UniversalStringTemplate:dword
			
extrn __imp_NSS_Get_SEC_PrintableStringTemplate:dword
			
extrn __imp_NSS_Get_SEC_T61StringTemplate:dword
			
extrn __imp_NSS_Get_SEC_BMPStringTemplate_Util:dword
			
extrn __imp_NSS_Get_SEC_UTF8StringTemplate_Util:dword
			
extrn __imp_PORT_ISO88591_UTF8Conversion:dword
			
extrn __imp_PORT_UCS4_UTF8Conversion:dword
			
extrn __imp_DER_LengthLength:dword 
extrn __imp_DER_StoreHeader:dword 
extrn __imp_DER_GetUInteger:dword 
extrn __imp_SECOID_KnownCertExtenOID:dword
			
extrn __imp_NSS_Get_SEC_IA5StringTemplate_Util:dword
			
extrn __imp_SECITEM_HashCompare:dword 
extrn __imp_SECITEM_Hash:dword 
extrn __imp_PORT_RegExpValid:dword 
extrn __imp_PORT_RegExpCaseSearch:dword	
extrn __imp_NSS_Get_SEC_SkipTemplate:dword
			
extrn __imp_SEC_StringToOID:dword 
extrn __imp_NSSUTIL_ArgParseModuleSpec:dword
			
extrn __imp_NSSUTIL_MkSlotString:dword 
extrn __imp_NSSUTIL_MkNSSString:dword 
extrn __imp_NSSUTIL_MkModuleSpec:dword 
extrn __imp_NSSUTIL_DoubleEscapeSize:dword
			
extrn __imp_NSSUTIL_ArgStrip:dword 
extrn __imp_NSSUTIL_ArgFetchValue:dword	
extrn __imp_NSSUTIL_ArgSkipParameter:dword
			
extrn __imp_NSSUTIL_ArgGetLabel:dword 
extrn __imp_NSSUTIL_ArgDecodeNumber:dword
			
extrn __imp_NSSUTIL_ArgIsBlank:dword 
extrn __imp_NSSUTIL_EscapeSize:dword 
extrn __imp_NSSUTIL_Escape:dword 
extrn __imp_NSSUTIL_ArgHasFlag:dword 
extrn __imp_NSSUTIL_ArgGetParamValue:dword
			
extrn __imp_NSSUTIL_ArgParseSlotInfo:dword
			
extrn __imp_NSSUTIL_ArgReadLong:dword 
extrn __imp_NSSUTIL_ArgParseCipherFlags:dword
			
extrn __imp_SECOID_FindOIDByMechanism:dword
			
extrn __imp_PORT_LoadLibraryFromOrigin:dword
			
extrn __imp_NSS_Get_SEC_ObjectIDTemplate_Util:dword
			
extrn __imp__SGN_VerifyPKCS1DigestInfo:dword
			
extrn __imp_SGN_DecodeDigestInfo:dword 
extrn __imp_NSS_Get_SEC_BitStringTemplate_Util:dword
			
extrn __imp_NSS_GetAlgorithmPolicy:dword
			
extrn __imp_NSS_Get_SEC_SequenceOfObjectIDTemplate:dword
			
extrn __imp_NSS_Get_SEC_NullTemplate_Util:dword
			
extrn __imp_NSS_Get_SEC_OctetStringTemplate_Util:dword
			
extrn __imp_NSS_Get_SEC_PointerToAnyTemplate_Util:dword
			
extrn __imp_NSS_Get_SECOID_AlgorithmIDTemplate_Util:dword
			
extrn __imp_NSS_Get_SEC_SequenceOfAnyTemplate:dword
			
extrn __imp_NSS_Get_SEC_PointerToGeneralizedTimeTemplate:dword
			
extrn __imp_NSS_Get_SEC_PointerToEnumeratedTemplate:dword
			
extrn __imp_NSS_Get_SEC_GeneralizedTimeTemplate_Util:dword
			
extrn __imp_NSS_Get_SEC_EnumeratedTemplate:dword
			
extrn __imp_NSS_Get_SEC_IntegerTemplate_Util:dword
			
extrn __imp_DER_SetUInteger:dword 
extrn __imp_NSS_Get_SEC_AnyTemplate_Util:dword
			
extrn __imp_SEC_ASN1DecoderUpdate_Util:dword
			
extrn __imp_NSSRWLock_HaveWriteLock_Util:dword
			
extrn __imp_PORT_FreeArena_Util:dword 
extrn __imp_PORT_ArenaZAlloc_Util:dword	
extrn __imp_PORT_ArenaAlloc_Util:dword 
extrn __imp_PORT_NewArena_Util:dword 
extrn __imp_PORT_GetError_Util:dword 
extrn __imp_PORT_ZFree_Util:dword 
extrn __imp_PORT_Realloc_Util:dword 
extrn __imp_SECOID_Init:dword 
extrn __imp_SECOID_Shutdown:dword 
extrn __imp_PORT_ZAlloc_Util:dword 
extrn __imp_NSS_InitializePRErrorTable:dword
			
extrn __imp_PORT_SetError_Util:dword 
extrn __imp_NSSUTIL_DoubleEscape:dword 
extrn __imp_PORT_Free_Util:dword 
extrn __imp_PORT_Strdup_Util:dword 
extrn __imp_PORT_Alloc_Util:dword 
assume cs:_rdata

dd offset sub_100A0396
align 4
align 10h
align 4
align 10h
			
align 4
			
align 10h
align 4
align 4
align 4
align 10h
align 10h
align 4
			
			
align 10h
			
db 'keyPrefix=',27h,'%s',27h,' secmod=',27h,'%s',27h,' flags=%s updatedir=',27h,'%s',27h
db ' updateCertPrefix=',27h,'%s',27h,' updateKeyPrefix=',27h,'%s',27h,' updateid='
db 27h,'%s',27h,' updateTokenDescription=',27h,'%s',27h,' %s" NSS="flags=internal'
db ',moduleDB,moduleDBOnly,critical%s"',0
align 4
align 4
align 10h
			
align 4
			
align 10h
			
			
align 10h
			
align 4
			
align 4
align 4
align 10h
			
dd 18h,	6, 3 dup(0)
dd 500h, 0Ch, 6	dup(0)
			
dd 0Ch
dd 0Ch
dd 0Ch
dd 0Ch
dd 0Ch
dd 0Ch
dd 0Ch
dd 0Ch
dd 0Ch
			
dd 0Ch
dd offset dword_100A1860
align 10h
dd offset dword_100A18F0
align 10h
dd offset dword_100A1860
align 10h
dd 0Ch
dd 0Ch
dd 28h,	800h, 4
dd offset dword_100A1820
align 10h
dd 4, 1Ch, 6 dup(0)
align 4
align 4
align 10h
dd 10h,	6, 3 dup(0)
dd 6011h, 0Ch
dd offset off_100A19A8
dd 5 dup(0)
dd offset dword_100A19B0
align 10h
dd 44h,	2, 4, 2	dup(0)
dd 800h, 10h
dd offset dword_100A7B50
dd 0
dd 800h, 18h
dd offset dword_100A27A8
align 10h
dd 0A0h, 40h
dd offset dword_100A19F0
align 20h
			
			
			
			
			
			
			
			
			
align 8
			
dd 88h,	4800h, 0
dd offset off_100A1A74
align 8
dd 4, 18h, 2 dup(0)
dd 4, 24h, 2 dup(0)
dd 2, 30h, 6 dup(0)
dd 0Ch,	1000h, 4
dd offset dword_100A1A88
align 8
dd 3A0h, 8
dd offset dword_100A6D98
dd 5 dup(0)
dd 20h,	43A0h, 0
dd offset off_100A1A64
align 8
dd 43A1h, 0Ch
dd offset off_100A1A70
align 8
dd 2010h, 14h
dd offset dword_100A1AE8
align 8
dd 3A2h, 18h
dd offset dword_100A6D98
dd 5 dup(0)
dd 38h,	4800h, 0
dd offset off_100A1A74
align 8
dd 3, 18h, 2 dup(0)
dd 43A0h, 24h
dd offset off_100A1A78
dd 5 dup(0)
dd offset dword_100A1B88
align 8
			
dd 0Ch,	1000h, 4
dd offset dword_100A1B28
align 8
dd 3A0h, 8
dd offset dword_100A1BD8
dd 5 dup(0)
dd 20h,	6, 3 dup(0)
dd 4, 10h, 6 dup(0)
dd offset dword_100A1C28
align 8
			
dd 18h,	0Ah, 4,	2 dup(0)
dd 3A0h, 14h
dd offset dword_100A1C68
dd 5 dup(0)
dd 2Ch,	1000h, 4
dd offset dword_100A1A88
dd 0
dd 400h, 8, 2 dup(0)
dd 2 dup(18h), 2 dup(0)
dd 43A0h, 24h
dd offset off_100A1A7C
align 8
dd 3A1h, 28h
dd offset dword_100A6D98
dd 5 dup(0)
dd 30h,	43A0h, 0
dd offset off_100A1A64
dd 0
dd 400h, 0Ch, 2	dup(0)
dd 18h,	1Ch, 2 dup(0)
dd 2010h, 28h
dd offset dword_100A1CB8
align 8
dd 3A1h, 2Ch
dd offset dword_100A6D98
dd 5 dup(0)
dd 48h,	20400h,	3 dup(0)
dd 1000h, 0Ch
dd offset dword_100A1D28
dd 0
dd 4800h, 10h
dd offset off_100A1A74
align 8
dd 3, 28h, 2 dup(0)
dd 43A0h, 34h
dd offset off_100A1A78
dd 5 dup(0)
			
dd offset dword_100A7B50
align 8
			
dd offset off_100A1A6C
align 8
dd offset off_100A1A60
align 8
dd offset off_100A1A68
align 8
dd 10h,	18h, 3 dup(0)
dd 43A0h, 0Ch
dd offset off_100A1A80
dd 5 dup(0)
dd offset dword_100A1E58
align 8
dd offset off_100A1A68
align 8
dd offset off_100A1A60
align 8
dd 10h,	1000h, 0
dd offset dword_100A7B50
dd 0
dd 500h, 4, 6 dup(0)
align 8
db 'Host: %s%s',0Dh,0Ah
db 'Content-Type: application/ocsp-request',0Dh,0Ah
db 'Content-Length: %u',0Dh,0Ah
db 0Dh,0Ah,0
align 4
			
db 'Host: %s%s',0Dh,0Ah
db 0Dh,0Ah,0
			
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
db 0Dh,0Ah,0
align 10h
			
align 4
			
align 4
			
			
align 10h
align 4
dd 2 dup(0)
dd offset asc_100A2020	
align 10h
dd 3A0h, 0Ch
dd offset dword_100A202C+4
dd 5 dup(0)
dd offset dword_100A2040
align 10h
			
dd 0Ch
dd 8, 80h, 0
dd offset dword_100A2080
align 10h
dd 2A1h, 4
dd offset dword_100A2070
dd 1, 82h, 0
dd offset dword_100A2080
dd 2, 4	dup(0)
			
dd 18h,	6, 3 dup(0)
dd 500h, 0Ch, 6	dup(0)
dd offset dword_100A2120
dd 0
dd offset dword_100A212C+4
align 10h
dd offset dword_100A2150
align 10h
dd offset dword_100A2170
align 10h
dd 88h,	800h, 0
dd offset dword_100A20E0
align 10h
dd 4, 18h, 2 dup(0)
dd 4, 24h, 2 dup(0)
dd 2, 30h, 6 dup(0)
dd 24h,	6, 3 dup(0)
dd 101h, 0Ch, 2	dup(0)
dd 4, 18h, 6 dup(0)
dd offset dword_100A21F0
dd 0
			
dd offset dword_100A2240
align 10h
dd 2Ch,	1000h, 4
dd offset dword_100A2190
dd 0
dd 400h, 8, 2 dup(0)
dd 2 dup(18h), 2 dup(0)
dd 3A0h, 24h
dd offset dword_100A217C+4
align 10h
dd 3A1h, 28h
dd offset dword_100A2250
dd 5 dup(0)
			
dd 30h,	3A0h, 0
dd offset dword_100A215C+4
dd 0
dd 400h, 0Ch, 2	dup(0)
dd 18h,	1Ch, 2 dup(0)
dd 2010h, 28h
dd offset dword_100A2260
align 10h
dd 3A1h, 2Ch
dd offset dword_100A2250
align 20h
dd 48h,	1000h, 0Ch
dd offset dword_100A22D0
dd 0
dd 800h, 10h
dd offset dword_100A20E0
align 10h
dd 3, 28h, 2 dup(0)
dd 3A0h, 34h
dd offset dword_100A2140
align 20h
dd 18h,	0Ah, 4,	4 dup(0)
dd offset dword_100A2080
align 20h
			
align 10h
			
align 4
align 4
align 4
align 4
align 8
dd offset dword_100BA040
dd 1
dd offset dword_100BAB84
align 10h
dd 2
dd offset dword_100BA050
dd 4 dup(0)
dd offset dword_100BA060
dd 1
dd offset dword_100BAB88
align 10h
dd 2
dd offset dword_100BA070
dd 4 dup(0)
dd offset dword_100BA080
dd 4 dup(0)
dd 2
dd offset dword_100BA090
dd 4 dup(0)
dd offset dword_100BA0A0
align 20h
dd 2
dd offset dword_100BA0B0
dd 4 dup(0)
dd offset dword_100A77C8
align 10h
dd offset dword_100A7B30
align 10h
dd 44h,	0A0h, 34h
dd offset dword_100A77C8
dd 1, 0A1h, 4
dd offset dword_100A7B30
dd 2, 4	dup(0)
dd 44h,	43A0h, 18h
dd offset off_100A2598
align 10h
dd 4181h, 38h
dd offset off_100A259C
align 10h
dd 1A2h, 30h
dd offset dword_100A77C8
dd 5 dup(0)
			
dd offset dword_100A2600
align 10h
			
dd offset __PBE_GenerateBits
dd offset __PBE_DestroyContext
dd offset __PBE_DestroyContext
dd offset sub_1000EB10
dd 3 dup(0)
dd 10h
dd offset sub_1000EB20
dd offset PK11_CloneContext
dd offset PK11_DestroyContext
dd offset PK11_DigestBegin
dd offset PK11_DigestOp
dd offset PK11_DigestFinal
dd 40h,	1, 0
dd 10h
dd offset sub_1000EB30
dd offset PK11_CloneContext
dd offset PK11_DestroyContext
dd offset PK11_DigestBegin
dd offset PK11_DigestOp
dd offset PK11_DigestFinal
dd 40h,	2, 0
dd 14h
dd offset sub_1000EB40
dd offset PK11_CloneContext
dd offset PK11_DestroyContext
dd offset PK11_DigestBegin
dd offset PK11_DigestOp
dd offset PK11_DigestFinal
dd 40h,	3, 0
dd 20h
dd offset sub_1000EB60
dd offset PK11_CloneContext
dd offset PK11_DestroyContext
dd offset PK11_DigestBegin
dd offset PK11_DigestOp
dd offset PK11_DigestFinal
dd 40h,	4, 0
dd 30h
dd offset sub_1000EB70
dd offset PK11_CloneContext
dd offset PK11_DestroyContext
dd offset PK11_DigestBegin
dd offset PK11_DigestOp
dd offset PK11_DigestFinal
dd 80h,	5, 0
dd 40h
dd offset sub_1000EB80
dd offset PK11_CloneContext
dd offset PK11_DestroyContext
dd offset PK11_DigestBegin
dd offset PK11_DigestOp
dd offset PK11_DigestFinal
dd 80h,	6, 0
dd 1Ch
dd offset sub_1000EB50
dd offset PK11_CloneContext
dd offset PK11_DestroyContext
dd offset PK11_DigestBegin
dd offset PK11_DigestOp
dd offset PK11_DigestFinal
dd 40h,	7, 0
			
			
			
			
dd 28h,	4800h, 4
dd offset off_100A27A0
align 8
dd 3, 1Ch, 6 dup(0)
dd 10h,	2 dup(0)
dd 18h,	400h, 3	dup(0)
dd 16h,	0Ch, 6 dup(0)
			
dd 0ACh, 2, 14h, 2 dup(0)
dd 2, 20h, 6 dup(0)
			
dd offset off_100A27A0
align 8
dd 20h,	3A0h, 0
dd offset dword_100A2868
align 8
dd 3A1h, 4
dd offset dword_100A2868
align 8
dd 43A2h, 8
dd offset off_100A27A4
align 8
dd 43A3h, 14h
dd offset off_100A27A4
dd 5 dup(0)
			
			
dd 28h,	2, 4, 2	dup(0)
dd 2, 10h, 2 dup(0)
dd 2, 1Ch, 6 dup(0)
			
dd 0ACh, 2, 14h, 2 dup(0)
dd 2, 20h, 2 dup(0)
dd 80000h, 7 dup(0)
			
align 10h
			
dd 30h,	400h, 3	dup(0)
dd 4800h, 0Ch
dd offset off_100A29B8
align 10h
dd 3, 24h, 6 dup(0)
dd 0Ch,	6, 3 dup(0)
dd 80000h, 7 dup(0)
			
dd 18h,	2, 3 dup(0)
dd offset dword_100A2A70+20h
dd 1
align 10h
align 4
align 10h
align 8
			
align 4
align 4
align 10h
			
align 4
			
align 4
			
			
align 10h
			
align 10h
			
			
align 4
			
align 4
			
align 4
			
align 10h
			
			
align 4
			
align 4
			
			
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
			
align 4
			
align 4
			
align 4
			
align 4
			
			
align 4
			
align 10h
			
align 10h
			
align 10h
			
			
align 4
			
align 4
			
align 4
			
			
align 4
			
align 4
			
align 4
			
align 4
			
align 10h
			
			
			
			
			
align 4
			
align 4
			
align 4
			
			
			
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 10h
			
align 10h
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
			
			
align 4
			
			
align 4
			
align 4
			
align 4
			
			
align 10h
			
align 4
			
align 4
			
align 4
			
align 10h
			
			
align 4
			
align 4
			
			
align 4
			
			
			
align 10h
			
align 4
			
align 10h
			
align 10h
			
align 4
			
align 4
			
			
align 4
			
align 10h
			
align 4
			
align 10h
			
			
align 4
			
align 4
			
align 10h
align 4
			
align 4
align 4
			
align 10h
			
dd offset sub_100243F0
dd offset sub_10024410
dd offset sub_10024430
dd 3, 2	dup(0)
			
dd 1, 2	dup(0)
			
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 10h
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 10h
align 4
align 4
align 4
align 4
			
align 10h
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
			
align 4
			
align 10h
			
align 4
align 4
align 4
align 4
align 10h
align 4
			
align 10h
align 10h
			
align 4
align 10h
align 4
align 4
align 10h
align 4
			
align 4
align 4
align 10h
align 4
			
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 10h
			
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 10h
align 10h
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 10h
align 4
align 10h
align 10h
align 10h
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
			
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
			
			
align 4
align 10h
			
align 4
			
align 4
align 4
align 4
align 4
align 10h
align 10h
align 10h
align 4
align 4
align 10h
align 4
align 4
			
align 10h
			
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
			
align 4
align 4
			
			
align 4
align 10h
align 10h
align 4
align 4
align 4
			
align 4
			
align 10h
			
align 4
			
align 4
			
align 4
db 0Ah
db 'Maximum number of concurrent open sessions: %d',0Ah
db 0Ah,0
align 10h
align 4
align 4
align 4
align 4
			
			
align 4
align 4
align 10h
align 10h
align 4
align 10h
align 4
			
align 4
align 4
align 10h
align 4
dd 30h,	2, 3 dup(0)
dd 2, 0Ch, 2 dup(0)
dd 2, 18h, 6 dup(0)
			
dd 30h,	2, 3 dup(0)
dd 2, 0Ch, 2 dup(0)
dd 2, 18h, 2 dup(0)
dd 4, 24h, 6 dup(0)
			
dd 18h,	2, 3 dup(0)
dd 4, 0Ch, 6 dup(0)
dd 18h,	2, 7 dup(0)
			
align 4
			
align 10h
dd 108h, 109h, 10Ah, 10Bh, 2 dup(0)
dd 106h, 107h, 10Ch
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
			
align 4
align 10h
align 4
align 10h
			
align 4
align 4
			
align 4
align 4
align 4
align 4
align 4
			
dd 44h,	2 dup(4), 2 dup(0)
dd 2, 10h, 6 dup(0)
			
dd 44h,	2 dup(4), 2 dup(0)
dd 2, 10h, 6 dup(0)
			
			
align 10h
			
dd 44h,	2 dup(4), 2 dup(0)
dd 2, 10h, 2 dup(0)
dd 102h, 1Ch, 2	dup(0)
dd 5100h, 28h
dd offset off_100A61C8
dd 5 dup(0)
			
dd 44h,	4800h, 4
dd offset off_100A61C8
dd 0
dd 4800h, 1Ch
dd offset off_100A61C8
dd 5 dup(0)
			
			
dd 10h,	6, 3 dup(0)
dd 6011h, 0Ch
dd offset off_100A6270
dd 5 dup(0)
dd offset dword_100A6278
align 8
			
dd 38h,	2, 4, 2	dup(0)
dd 4800h, 10h
dd offset off_100A6274
align 8
dd 4, 28h, 2 dup(0)
dd 1A0h, 34h
dd offset dword_100A62B8
dd 5 dup(0)
dd offset dword_100A62C8
align 8
			
dd 78h,	2, 0Ch,	2 dup(0)
dd 2, 18h, 2 dup(0)
dd 2, 24h, 2 dup(0)
dd 2, 30h, 2 dup(0)
dd 2, 3Ch, 2 dup(0)
dd 2, 48h, 2 dup(0)
dd 2, 54h, 2 dup(0)
dd 2, 60h, 2 dup(0)
dd 2, 6Ch, 6 dup(0)
dd 2, 18h, 2 dup(0)
dd 2, 0Ch, 2 dup(0)
			
dd 28h,	4800h, 4
dd offset off_100A6274
align 8
dd 4, 1Ch, 6 dup(0)
dd offset dword_100A6428
align 8
			
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
			
			
dd 1
			
dd offset aDsa		
dd 2, 11h
dd offset aEcc		
dd 40000h, 1041h
dd offset aDh		
dd 20h,	21h
dd offset aRc2		
dd 4, 102h
dd offset aRc4		
dd 8, 111h
dd offset aDes		
dd 10h,	122h
dd offset aAes		
dd 2000h, 1082h
dd offset aCamellia	
dd 10000h, 552h
dd offset aSeed		
dd 20000h, 652h
dd offset aRc5		
dd 80h,	332h
dd offset aSha1		
dd 100h, 220h
dd offset aSha256	
dd 4000h, 250h
dd offset aSha512	
dd 8000h, 270h
dd offset aMd5		
dd 200h, 210h
dd offset aMd2		
dd 400h, 200h
dd offset aSsl		
dd 800h, 370h
dd offset aTls		
dd 1000h, 375h
dd offset aSkipjack	
dd 40h,	1002h
dd offset aPubliclyReadab 
dd 10000000h, 0FFFFFFFFh
dd offset aRandomNumGener 
dd 80000000h, 80000EFEh
			
			
align 4
align 4
align 10h
			
align 8
			
db ',RC2,RC4,DES,RANDOM,SHA1,MD5,MD2,SSL,TLS,AES,Camellia,SEED,SHA256'
db ',SHA512]})',0
align 4
			
align 4
			
db 'RC4,DES,RANDOM,SHA1,MD5,MD2,SSL,TLS,AES,Camellia,SEED,SHA256,SHA5'
db '12]})',0
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 10h
			
			
dd 280h, 29h, 1Fh
dd offset aSt		
dd 80h,	2Ch, 1Fh
dd offset aO		
dd 80h,	2Dh, 1Fh
dd offset aOu		
dd 80h,	2Eh, 1Fh
dd offset aDnqualifier	
dd 7FFFh, 2Fh, 13h
dd offset aC_0		
dd 2, 2Ah, 13h
dd offset aSerialnumber	
dd 40h,	106h, 13h
dd offset asc_100A68AC	
dd 80h,	2Bh, 1Fh
dd offset aTitle	
dd 40h,	108h, 1Fh
dd offset aSn		
dd 40h,	105h, 1Fh
dd offset aGivenname	
dd 40h,	10Ch, 1Fh
dd offset aInitials	
dd 40h,	10Dh, 1Fh
dd offset aGenerationqual 
dd 40h,	10Eh, 1Fh
dd offset aDc		
dd 80h,	30h, 16h
dd offset aMail		
dd 100h, 63h, 16h
dd offset aUid		
dd 100h, 62h, 1Fh
dd offset aPostaladdress 
dd 80h,	109h, 1Fh
dd offset aPostalcode	
dd 28h,	10Ah, 1Fh
dd offset aPostofficebox 
dd 28h,	10Bh, 1Fh
dd offset aHouseidentifie 
dd 40h,	10Fh, 1Fh
dd offset aE		
dd 80h,	1Fh, 16h
dd offset aStreet	
dd 80h,	107h, 1Fh
dd offset aPseudonym	
dd 40h,	110h, 1Fh
dd offset aIncorporationl 
dd 80h,	136h, 1Fh
dd offset aIncorporations 
dd 80h,	137h, 1Fh
dd offset aIncorporationc 
dd 2, 138h, 13h
dd offset aBusinesscatego 
dd 40h,	139h, 1Fh
dd offset aName		
dd 40h,	13Dh, 1Fh, 0
dd 100h, 2 dup(0)
			
dw 0FFFFh
dd 17h dup(0FFFFFFFFh),	10000h,	30002h,	50004h,	70006h
dd 90008h, 3 dup(0FFFFFFFFh), 0AFFFFh, 0C000Bh,	0E000Dh
dd 0FFFF000Fh, 0Ch dup(0FFFFFFFFh), 0AFFFFh, 0C000Bh, 0E000Dh
dd 0FFFF000Fh, 4Ch dup(0FFFFFFFFh)
			
db 31h,	32h, 33h
dd 37363534h, 62613938h, 66656463h
			
align 4
align 4
align 4
align 4
align 4
align 10h
			
			
			
			
			
align 8
			
dd 24h,	6, 3 dup(0)
dd 101h, 0Ch, 2	dup(0)
dd 4, 18h, 6 dup(0)
			
dd offset dword_100A6D48
align 8
dd 0Ch,	17h, 2 dup(0)
dd 0Bh,	18h, 2 dup(0)
dd 0Ch,	4 dup(0)
dd 1Ch,	4800h, 4
dd offset off_100A6D30
dd 0
dd 4800h, 10h
dd offset off_100A6D30
dd 5 dup(0)
			
dd 188h, 43A0h,	78h
dd offset off_100A6D3C
align 8
dd 2, 84h, 2 dup(0)
dd 4800h, 90h
dd offset off_100A6D34
dd 0
dd 20000h, 48h,	2 dup(0)
dd 800h, 0A8h
dd offset dword_100A7B50
dd 0
dd 800h, 0B0h
dd offset dword_100A6DE8
dd 0
dd 20000h, 54h,	2 dup(0)
dd 800h, 0CCh
dd offset dword_100A7B50
dd 0
dd 20000h, 60h,	2 dup(0)
dd 800h, 0D4h
dd offset dword_100A27A8
align 8
dd 4181h, 0FCh
dd offset off_100A6D38
align 8
dd 4182h, 108h
dd offset off_100A6D38
align 8
dd 3A3h, 114h
dd offset dword_100A6D98
dd 5 dup(0)
			
dd 188h, 20000h, 0Ch, 2	dup(0)
dd 800h, 0
dd offset dword_100A6E28
dd 0
dd 4800h, 18h
dd offset off_100A6D34
align 8
dd 3, 30h, 6 dup(0)
dd 10h,	2 dup(0)
dd 0Ch,	43A0h, 0
dd offset off_100A6D40
dd 0
dd 8000h, 3 dup(0)
dd 8000h, 3 dup(0)
dd 8000h, 3 dup(0)
dd 8000h, 3 dup(0)
dd 400h, 3 dup(0)
dd 80000h, 7 dup(0)
dd 0Ch,	43A0h, 0
dd offset off_100A6D40
dd 0
dd 8000h, 3 dup(0)
dd 8000h, 3 dup(0)
dd 400h, 3 dup(0)
dd 80000h, 7 dup(0)
dd 0Ch,	43A0h, 0
dd offset off_100A6D40
dd 0
dd 400h, 3 dup(0)
dd 80000h, 7 dup(0)
dd 10h,	2 dup(0)
dd 18h,	43A0h, 0
dd offset off_100A6D40
align 8
dd 2, 3	dup(0)
dd 8000h, 3 dup(0)
dd 400h, 0Ch, 2	dup(0)
dd 80000h, 7 dup(0)
align 10h
align 4
align 4
align 8
			
dd 24h,	6, 3 dup(0)
dd 101h, 0Ch, 2	dup(0)
dd 4, 18h, 6 dup(0)
			
dd offset dword_100A7188
align 8
dd 20h,	20000h,	3 dup(0)
dd 800h, 0Ch
dd offset dword_100A7B50
align 8
dd 2, 14h, 6 dup(0)
			
			
			
dd 18h,	102h, 0Ch, 2 dup(0)
dd 8000h, 3 dup(0)
dd 400h, 3 dup(0)
dd 80000h, 7 dup(0)
			
dd 1Ch,	2, 3 dup(0)
dd 4800h, 0Ch
dd offset off_100A723C
align 10h
dd 2110h, 18h
dd offset dword_100A7188
dd 5 dup(0)
			
dd 5Ch,	102h, 4, 2 dup(0)
dd 4800h, 10h
dd offset off_100A7238
dd 0
dd 20000h, 28h,	2 dup(0)
dd 800h, 34h
dd offset dword_100A7B50
dd 0
dd 4800h, 3Ch
dd offset off_100A723C
dd 0
dd 4900h, 48h
dd offset off_100A723C
align 10h
dd 2110h, 54h
dd offset dword_100A72A0
align 10h
dd 3A0h, 58h
dd offset dword_100A71D8
dd 5 dup(0)
dd 5Ch,	102h, 4, 2 dup(0)
dd 4800h, 10h
dd offset off_100A7238
dd 0
dd 20000h, 28h,	2 dup(0)
dd 800h, 34h
dd offset dword_100A7B50
dd 0
dd 4800h, 3Ch
dd offset off_100A723C
dd 0
dd 4900h, 48h
dd offset off_100A723C
align 10h
dd 0A110h, 3 dup(0)
dd 3A0h, 58h
dd offset dword_100A71D8
dd 5 dup(0)
dd 5Ch,	8102h, 3 dup(0)
dd 8000h, 3 dup(0)
dd 8000h, 3 dup(0)
dd 0C800h, 3Ch
dd offset off_100A723C
dd 0
dd 0C900h, 48h
dd offset off_100A723C
align 10h
dd 2110h, 54h
dd offset dword_100A72A0
dd 0
dd 80000h, 7 dup(0)
			
dd 0BCh, 20000h, 78h, 2	dup(0)
dd 800h, 4
dd offset dword_100A72F0
dd 0
dd 4800h, 84h
dd offset off_100A7238
align 10h
dd 3, 9Ch, 6 dup(0)
dd 0BCh, 20000h, 78h, 2	dup(0)
dd 800h, 4
dd offset dword_100A7390
dd 0
dd 4800h, 84h
dd offset off_100A7238
align 10h
dd 3, 9Ch, 6 dup(0)
dd offset dword_100A74C0
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 10h
			
			
			
align 8
			
dd 5Ch,	400h, 30h, 2 dup(0)
dd 4180h, 3Ch
dd offset off_100A7604
align 8
dd 4181h, 48h
dd offset off_100A7604
dd 5 dup(0)
			
dd offset off_100A7600
align 8
			
dd 10h,	1A0h, 8
dd offset dword_100A7668
align 8
dd 1A1h, 0Ch
dd offset dword_100A7668
dd 5 dup(0)
dd 18h,	6, 0Ch,	2 dup(0)
dd 42A0h, 0
dd offset off_100A7600
dd 5 dup(0)
			
dd offset dword_100A76B8
dd 30h,	90h, 2 dup(0)
dd 30h,	6, 10h,	2 dup(0)
dd 400h, 4, 6 dup(0)
			
dd offset off_100A7608
dd 30h
			
dd offset off_100A7608
dd 30h
			
dd offset off_100A7600
dd 30h
			
dd offset off_100A7600
dd 30h
			
dd offset off_100A7600
dd 30h
			
dd offset off_100A7608
dd 30h
			
dd offset off_100A7610
dd 30h
			
dd offset off_100A760C
dd 30h
			
dd offset off_100A7600
align 8
			
dd 4550306h, 46061308h,	636E6172h, 300E3165h, 5503060Ch
dd 5130704h, 69726150h,	30103173h, 5503060Eh, 7130A04h
dd 532F4D50h, 314E4447h, 60C300Eh, 0B045503h, 43440513h
dd 31495353h, 60C300Eh,	3045503h, 47490513h, 31412F43h
dd 6213023h, 48862A09h,	10DF786h, 14160109h
align 8
			
dd 672E0382h, 82053066h, 716D2E03h, 3820530h, 3065722Eh
dd 2E038205h, 5307479h,	702E0382h, 8205306Dh, 6C622E03h
dd 3820530h, 30666D2Eh,	2E038205h, 5306677h, 702E0382h
dd 82053066h, 636E2E03h, 3820530h, 66742Eh
			
			
dd 0Ch,	16h, 2 dup(0)
dd 8, 1Ah, 2 dup(0)
dd 0Dh,	1Eh, 2 dup(0)
dd 0Fh,	0Ch, 2 dup(0)
dd 0Eh,	4 dup(0)
			
dd 10h,	800h, 0
dd offset dword_100A78D0
align 10h
dd 6010h, 0Ch
dd offset off_100A78C8
dd 5 dup(0)
			
dd 2Ch,	900h, 4
dd offset dword_100A7930
dd 0
dd 900h, 20h
dd offset dword_100A78D0
dd 5 dup(0)
dd 1Ch,	6, 4, 2	dup(0)
dd 400h, 10h, 6	dup(0)
dd 14h,	6, 4, 2	dup(0)
dd 2110h, 10h
dd offset dword_100A79B0
dd 5 dup(0)
			
dd offset dword_100A79F0
dd 18h,	6, 3 dup(0)
dd 6, 0Ch, 6 dup(0)
			
dd offset dword_100A7A3C+4
dd 18h
			
dd 18h,	4180h, 0
dd offset off_100A78C8
align 10h
dd 4181h, 0Ch
dd offset off_100A78C8
dd 5 dup(0)
			
dd 0Ch
dd offset off_100A78CC
align 10h
			
dd 18h,	6, 3 dup(0)
dd 400h, 0Ch, 6	dup(0)
			
dd offset dword_100A7AF0
dd 4, 2011h, 0
dd offset dword_100A7AF0
dd 4
			
dd offset dword_100A7B30
dd 8
			
dd 20h,	4180h, 0
dd offset off_100A7B64
align 8
dd 1A1h, 1Ch
dd offset dword_100A77C8
align 8
dd 4182h, 10h
dd offset off_100A7B60
dd 5 dup(0)
			
dd 28h,	101h, 3	dup(0)
dd 102h, 0Ch, 6	dup(0)
dd 16h,	3 dup(0)
			
			
align 10h
dd 1Ch,	4180h, 0
dd offset off_100A7C18
align 10h
dd 4181h, 0Ch
dd offset off_100A7C18
align 20h
dd 20h,	0
dd offset dword_100A77C8
align 10h
dd 1Ch,	6, 3 dup(0)
dd 400h, 0Ch, 6	dup(0)
			
dd offset dword_100A7C70
align 10h
align 4
db 0Ah
db 'Certificates in the temporary store:',0Ah,0
db 0Ah
db 'Certificates in the cache:',0Ah,0
align 4
dd 4
dd 1, 3, 80h, 102h, 11h, 81h, 82h, 101h, 0CE534352h, 0Ah
dd 1, 3, 0CE5363B4h, 0CE5363B5h, 81h, 101h, 0CE536358h
dd 0CE536359h, 0CE53635Bh, 0CE53635Ah, 0Bh
dd 1, 3, 11h, 101h, 0CE534358h,	0CE534351h, 7
			
			
			
			
			
			
dd offset dword_100A7DBC
dd offset dword_100A7DC4+4
dd 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
align 4
			
align 4
align 4
			
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
			
align 4
			
align 4
align 10h
align 10h
align 10h
align 4
align 4
align 4
align 4
			
align 4
			
align 4
align 4
align 4
			
align 10h
			
align 4
			
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
			
align 10h
align 10h
			
align 4
			
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
			
align 4
			
align 10h
			
align 4
align 4
align 4
align 4
align 4
align 4
			
align 4
			
align 4
align 10h
align 4
align 4
align 4
align 10h
align 10h
align 4
			
align 4
align 10h
			
align 10h
			
align 10h
			
align 10h
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
align 10h
			
align 10h
			
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
			
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
			
align 4
align 4
align 4
align 4
align 4
			
align 4
align 4
align 4
align 4
			
align 4
			
align 4
			
align 8
db 9,'certPoliciesExtension:    ',9,'%s',0Ah
db 9,'policyMappingsExtension:  ',9,'%s',0Ah
db 9,'policyConstraintsExtension:',9,'%s',0Ah
db 9,'inhibitAnyPolicyExtension:',9,'%s',0Ah
db 9,'anyPolicyOID:             ',9,'%s',0Ah
db 9,'initialIsAnyPolicy:       ',9,'%s',0Ah
db 9,'validPolicyTree:          ',9,'%s',0Ah
db 9,'userInitialPolicySet:     ',9,'%s',0Ah
db 9,'mappedUserPolicySet:      ',9,'%s',0Ah
db 9,'policyQualifiersRejected: ',9,'%s',0Ah
db 9,'initialPolMappingInhibit: ',9,'%s',0Ah
db 9,'initialExplicitPolicy:    ',9,'%s',0Ah
db 9,'initialAnyPolicyInhibit:  ',9,'%s',0Ah
db 9,'explicitPolicy:           ',9,'%d',0Ah
db 9,'inhibitAnyPolicy:         ',9,'%d',0Ah
db 9,'policyMapping:            ',9,'%d',0Ah
db 9,'numCerts:                 ',9,'%d',0Ah
db 9,'certsProcessed:           ',9,'%d',0Ah
db 9,'anyPolicyNodeAtBottom:    ',9,'%s',0Ah
db 9,'newAnyPolicyNode:         ',9,'%s',0Ah
db 9,'certPoliciesCritical:     ',9,'%s',0Ah
db 9,'mappedPolicyOIDs:         ',9,'%s',0Ah
db '}',0
align 4
align 4
align 10h
align 4
align 4
align 4
			
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 10h
align 4
align 4
db 9,'Trusted CA Name:         %s',0Ah
db 9,'Trusted CA PublicKey:    %s',0Ah
db 9,'Initial Name Constraints:%s',0Ah
db ']',0Ah,0
db 9,'Trusted Cert:',9,'%s',0Ah
db ']',0Ah,0
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
			
align 4
			
align 4
align 4
align 4
align 4
			
align 4
align 4
align 4
			
align 4
			
align 4
			
align 10h
			
align 4
			
align 10h
align 4
			
align 10h
align 4
align 4
			
			
align 4
			
align 4
			
			
align 4
			
			
align 4
			
align 4
align 10h
db 9,'Trust Anchors: ',0Ah
db 9,'********BEGIN LIST OF TRUST ANCHORS********',0Ah
db 9,9,'%s',0Ah
db 9,'********END LIST OF TRUST ANCHORS********',0Ah
db 9,'Date:    ',9,9,'%s',0Ah
db 9,'Target Constraints:    %s',0Ah
db 9,'Initial Policies:      %s',0Ah
db 9,'Qualifiers Rejected:   %s',0Ah
db 9,'Cert Stores:           %s',0Ah
db 9,'Resource Limits:       %s',0Ah
db 9,'CRL Checking Enabled:  %d',0Ah
db ']',0Ah,0
align 4
align 10h
align 10h
align 10h
align 4
align 10h
align 10h
db 9,'Processing Params: ',0Ah
db 9,'********BEGIN PROCESSING PARAMS********',0Ah
db 9,9,'%s',0Ah
db 9,'********END PROCESSING PARAMS********',0Ah
db 9,'Chain:    ',9,9,'%s',0Ah
db ']',0Ah,0
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
db 9,'MaxTime:           ',9,9,'%d',0Ah
db 9,'MaxFanout:         ',9,9,'%d',0Ah
db 9,'MaxDepth:         ',9,9,'%d',0Ah
db ']',0Ah,0
align 10h
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
db 9,'ValidateResult: ',9,9,'%s',9,'CertChain:    ',9,9,'%s',0Ah
db ']',0Ah,0
align 4
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
			
align 4
align 4
align 10h
align 10h
align 4
align 10h
align 10h
align 4
align 10h
align 4
			
align 4
			
db '%s',0
align 10h
			
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
db 9,'TrustAnchor: ',9,9,'%s',9,'PubKey:    ',9,9,'%s',0Ah
db 9,'PolicyTree:  ',9,9,'%s',0Ah
db ']',0Ah,0
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 10h
align 10h
align 4
			
align 4
align 4
align 10h
align 4
			
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 8
db 9,'{buildStatus: ',9,'%s',0Ah
db 9,'traversedCACerts: ',9,'%d',0Ah
db 9,'certStoreIndex: ',9,'%d',0Ah
db 9,'numCerts: ',9,'%d',0Ah
db 9,'numAias: ',9,'%d',0Ah
db 9,'certIndex: ',9,'%d',0Ah
db 9,'aiaIndex: ',9,'%d',0Ah
db 9,'numFanout: ',9,'%d',0Ah
db 9,'numDepth:  ',9,'%d',0Ah
db 9,'reasonCode:  ',9,'%d',0Ah
db 9,'canBeCached: ',9,'%d',0Ah
db 9,'useOnlyLocal: ',9,'%d',0Ah
db 9,'revChecking: ',9,'%d',0Ah
db 9,'validityDate: ',9,'%s',0Ah
db 9,'prevCert: ',9,'%s',0Ah
db 9,'candidateCert: ',9,'%s',0Ah
db 9,'traversedSubjNames: ',9,'%s',0Ah
db 9,'trustChain: ',9,'%s',0Ah
db 9,'candidateCerts: ',9,'%s',0Ah
db 9,'certSel: ',9,'%s',0Ah
db 9,'verifyNode: ',9,'%s',0Ah
db 9,'parentState: ',9,'%s}',0Ah,0
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
			
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
			
align 4
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
			
align 4
align 4
align 4
db '*** Cause (%d): %s',0
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 10h
align 4
db 9,'Logger: ',0Ah
db 9,'Context:          %s',0Ah
db 9,'Maximum Level:    %d',0Ah
db 9,'Component Name:   %s',0Ah
db ']',0Ah,0
align 4
align 4
			
align 10h
align 4
align 10h
align 4
align 4
align 4
			
align 4
align 10h
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
			
db 9,'[',0Ah
db 9,'MatchCallback: 0x%x',0Ah
db 9,'Params:          %s',0Ah
db 9,'Context:         %s',0Ah
db 9,']',0Ah,0
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
			
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
db 9,'[',0Ah
db 9,'IssuerNames:     %s',0Ah
db 9,'Date:            %s',0Ah
db 9,'maxCRLNumber:    %s',0Ah
db 9,'minCRLNumber:    %s',0Ah
db 9,'Certificate:     %s',0Ah
db 9,']',0Ah,0
align 4
align 4
align 4
align 10h
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
			
align 4
align 4
			
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 8
db 9,'Version:         v%d',0Ah
db 9,'SerialNumber:    %s',0Ah
db 9,'Issuer:          %s',0Ah
db 9,'Subject:         %s',0Ah
db 9,'Validity: [From: %s',0Ah
db 9,'           To:   %s]',0Ah
db 9,'SubjectAltNames: %s',0Ah
db 9,'AuthorityKeyId:  %s',0Ah
db 9,'SubjectKeyId:    %s',0Ah
db 9,'SubjPubKeyAlgId: %s',0Ah
db 9,'CritExtOIDs:     %s',0Ah
db 9,'ExtKeyUsages:    %s',0Ah
db 9,'BasicConstraint: %s',0Ah
db 9,'CertPolicyInfo:  %s',0Ah
db 9,'PolicyMappings:  %s',0Ah
db 9,'ExplicitPolicy:  %d',0Ah
db 9,'InhibitMapping:  %d',0Ah
db 9,'InhibitAnyPolicy:%d',0Ah
db 9,'NameConstraints: %s',0Ah
db 9,'AuthorityInfoAccess: %s',0Ah
db 9,'SubjectInfoAccess: %s',0Ah
db 9,'CacheFlag:       %d',0Ah
db ']',0Ah,0
align 4
db 9,' Subject:         %s]',0
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
			
align 4
align 4
align 4
align 4
align 4
align 4
			
			
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
			
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 10h
align 4
align 4
align 4
align 4
align 4
db 9,'Version:         v%d',0Ah
db 9,'Issuer:          %s',0Ah
db 9,'Update:   [Last: %s',0Ah
db 9,'           Next: %s]',0Ah
db 9,'SignatureAlgId:  %s',0Ah
db 9,'CRL Number     : %s',0Ah
db 0Ah
db 9,'Entry List:      %s',0Ah
db 0Ah
db 9,'CritExtOIDs:     %s',0Ah
db ']',0Ah,0
align 4
align 10h
align 10h
align 10h
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
			
align 4
db 9,'[',0Ah
db 9,'SerialNumber:    %s',0Ah
db 9,'ReasonCode:      %d',0Ah
db 9,'RevocationDate:  %s',0Ah
db 9,'CritExtOIDs:     %s',0Ah
db 9,']',0Ah
db 9,0
align 4
align 4
align 4
			
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 4
align 10h
align 4
align 4
			
align 10h
			
align 4
			
align 4
align 4
align 10h
			
align 4
			
align 4
align 4
			
align 4
			
align 4
align 10h
			
align 4
db 9,9,'Permitted Name:  %s',0Ah
db 9,9,'Excluded Name:   %s',0Ah
db 9,']',0Ah,0
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 10h
align 4
align 4
align 4
align 4
align 10h
			
align 10h
align 4
align 4
align 4
align 4
align 4
			
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 10h
align 4
align 4
align 10h
align 4
align 4
			
align 4
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
			
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
			
align 4
			
align 4
align 4
align 4
			
			
			
align 4
dd 4 dup(0)
dd 0FFFFE00Dh, 5 dup(0)
dd 0FFFFE00Dh, 8 dup(0)
dd 0FFFFE009h, 2 dup(0)
dd 0FFFFE0A2h, 4 dup(0)
dd 0FFFFE024h, 0FFFFE025h, 3 dup(0)
dd 0FFFFE005h, 2 dup(0)
dd 0FFFFE0A3h, 24h dup(0)
dd 2 dup(0FFFFE0A3h), 0FFFFE005h, 0Dh dup(0)
dd 0FFFFE0A0h, 2 dup(0)
dd 0FFFFE05Bh, 0FFFFE00Bh, 2 dup(0)
dd 0FFFFE05Ah, 16h dup(0)
dd 0FFFFE070h, 1Dh dup(0)
dd 0FFFFE089h, 0FFFFE00Ch, 0
dd 0FFFFE015h, 2 dup(0)
dd 3 dup(0FFFFE070h), 9	dup(0)
dd 0FFFFE024h, 18h dup(0)
dd 0FFFFE05Bh, 0
dd 0FFFFE05Ah, 20h dup(0)
dd 0FFFFE0B2h, 38h dup(0)
dd 0FFFFE0A2h, 6Eh dup(0)
dd 0FFFFE09Eh, 30h dup(0)
dd 0FFFFE05Bh, 2 dup(0)
dd 0FFFFE0A4h, 0FFFFE009h, 0Fh dup(0)
dd 2 dup(0FFFFE005h), 23h dup(0)
dd 0FFFFE0A6h, 6 dup(0)
dd 3 dup(0FFFFE0A5h), 3	dup(0)
dd 0FFFFE0A3h, 6 dup(0)
dd 0FFFFE0A3h, 1Dh dup(0)
dd 7 dup(0FFFFE005h), 0FFFFE0A6h, 6 dup(0)
dd 0FFFFE0A5h, 2 dup(0)
dd 2 dup(0FFFFE005h), 3	dup(0)
dd 0FFFFE005h, 2 dup(0)
dd 0FFFFE09Fh, 0FFFFE005h, 0FFFFE090h, 6 dup(0)
dd 0FFFFE024h, 4Ch dup(0)
dd 0FFFFE014h, 0
dd 0FFFFE005h, 0
dd 0FFFFE013h, 0FFFFE005h, 0FFFFE028h, 5 dup(0)
dd 0FFFFE00Dh, 0FFFFE0A5h, 3 dup(0)
dd 0FFFFE0A2h, 0
dd 0FFFFE005h, 0FFFFE0A2h, 0FFFFE005h, 2 dup(0)
dd 0FFFFE0A5h, 0Dh dup(0)
dd 2 dup(0FFFFE005h), 5Fh dup(0)
dd 0FFFFE077h, 8 dup(0)
dd 0FFFFE092h, 0
dd 0FFFFE079h, 0FFFFE005h, 9 dup(0)
dd 2 dup(0FFFFE005h), 0
dd 0FFFFE005h, 2 dup(0)
dd 0FFFFE025h, 1Dh dup(0)
dd 0FFFFE005h, 4 dup(0)
dd 0FFFFE0A6h, 47h dup(0)
dd 0FFFFE0A3h, 0FFFFE0A4h, 0FFFFE00Dh, 4 dup(0)
dd 3 dup(0FFFFE005h), 1Eh dup(0)
dd 0FFFFE005h, 0Eh dup(0)
dd 0FFFFE09Eh, 3 dup(0)
dd 0FFFFE005h, 11h dup(0)
dd 0FFFFE07Dh, 3 dup(0)
dd 0FFFFE081h, 9 dup(0)
dd 0FFFFE0A3h, 0FFFFE005h, 0FFFFE0AAh, 4 dup(0)
dd 2 dup(0FFFFE029h), 5	dup(0)
dd 0FFFFE026h, 2 dup(0)
dd 3 dup(0FFFFE005h), 0Dh dup(0)
dd 0FFFFE070h, 8 dup(0)
dd 0FFFFE021h, 0FFFFE01Bh, 10h dup(0)
align 10h
align 10h
align 4
align 4
align 10h
align 4
align 4
dd 0EEFACADEh, 0FEEDC0FFh, 1Bh,	1, 4 dup(0)
			
dd 1Fh,	0FFFFE0A6h, 3 dup(0)
align 4
align 4
align 10h
			
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
			
align 10h
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
			
align 4
align 10h
align 4
align 4
align 4
align 10h
align 10h
align 10h
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 4
align 10h
			
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
			
align 4
			
			
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
align 4
			
align 4
align 4
dd offset NSS_Get_CERT_IssuerAndSNTemplate
dd offset NSS_Get_SECOID_AlgorithmIDTemplate_Util
dd offset NSS_Get_SEC_SetOfAnyTemplate_Util
dd offset NSS_Get_CERT_SetOfSignedCrlTemplate
align 4
			
align 4
			
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
align 10h
align 10h
align 4
align 4
align 4
dd 4, 2, 5
			
align 4
align 4
align 4
align 4
			
align 10h
align 10h
align 4
align 4
			
align 4
align 4
align 10h
			
align 4
align 4
			
align 4
align 4
db 'Host: %s%s',0Dh,0Ah
db 'Content-Type: %s',0Dh,0Ah
db 'Content-Length: %u',0Dh,0Ah
db 0Dh,0Ah,0
align 10h
align 4
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
			
align 10h
align 10h
align 10h
align 4
align 4
align 4
align 4
align 10h
align 10h
align 10h
align 10h
align 4
			
align 10h
align 4
			
align 4
			
align 4
			
align 10h
align 4
align 10h
			
dd 86808006h, 808180h, 86031000h, 80828680h, 45050514h
dd 85854545h, 585h, 50803030h, 8008080h, 38272800h, 805750h
dd 30370007h, 88505030h, 20000000h, 80888028h, 80h
dw 800h
dd 7000800h, 8,	0
dd 0			
dw 2 dup(0)		
dd 0			
dd 0			
dd 0			
dd 0			
dd 0			
dd 0			
dd 0			
dd 0			
dd 0			
dd 0			
dw 0			
dw 0			
dd 0			
dd offset ___security_cookie 
dd offset ___safe_se_handler_table 
dd 2			
dd rva sub_100A0AD1
dd 0FFFFFFB4h, 0
dd 0FFFFFFFEh, 0
dd offset sub_100A0790
align 8
dd offset sub_100A05A0
dd offset sub_100A05B4
dd 0
dd offset sub_100A05E2
dd offset sub_100A05F6
align 10h
dd offset sub_100A0625
dd offset sub_100A0639
dd 0
dd offset sub_100A066A
dd offset sub_100A067E
align 8
dd offset sub_100A0699
dd offset sub_100A06AD
dd 0
dd offset sub_100A06CE
dd offset sub_100A06E2
align 10h
dd offset sub_100A0713
dd offset sub_100A0727
dd 0
dd offset sub_100A075A
dd offset sub_100A076E
align 8
dd 0			
dd 0FFFFFFD8h		
dd 0			
dd 0FFFFFFFEh		
dd offset loc_100A0A3A	
dd offset loc_100A0A4E	
dd 0			
dd 0			
dd rva aNssutil3_dll	
dd rva __imp_NSSBase64Decoder_Create_Util 
dd 0			
dd 0			
dd rva aLibplc4_dll	
dd rva __imp_PL_strnstr	
dd 0			
dd 0			
dd rva aLibplds4_dll	
dd rva __imp_PL_HashTableEnumerateEntries 
dd 0			
dd 0			
dd rva aLibnspr4_dll	
dd rva PR_htons		
dd 0			
dd 0			
dd rva aMsvcrt_dll	
dd rva __imp__amsg_exit	
dd 0			
dd 0			
dd rva aKernel32_dll	
dd rva GetSystemTimeAsFileTime 
dd 5 dup(0)
dd rva word_100B31BA
dd rva word_100B31A4
dd rva word_100B3194
dd rva word_100B317A
dd rva word_100B315C
dd rva word_100B3140
dd rva word_100B312C
dd rva word_100B3118
dd rva word_100B30FA
dd rva word_100B30F2
dd rva word_100B30DC
dd rva word_100B30D0
dd 0
dd rva word_100B2F9A
dd rva word_100B2F90
dd rva word_100B2F82
dd rva word_100B2F76
dd rva word_100B2F60
dd rva word_100B2F56
dd rva word_100B2F42
dd rva word_100B2F2A
dd rva word_100B2F16
dd rva word_100B2F08
dd rva word_100B2EFC
dd rva word_100B2EE6
dd rva word_100B2ED0
dd rva word_100B2EB4
dd rva word_100B2EAA
dd rva word_100B2E9E
dd rva word_100B2E8A
dd rva word_100B2E7C
dd rva word_100B2E6C
dd rva word_100B2E56
dd rva word_100B2E3A
dd rva word_100B2E2E
dd rva word_100B2E1C
dd rva word_100B2E10
dd rva word_100B2E00
dd rva word_100B2DEE
dd rva word_100B2DDA
dd rva word_100B2DC2
dd rva word_100B2DA6
dd rva word_100B2D8A
dd rva word_100B2D78
dd rva word_100B2D62
dd rva word_100B2D4C
dd rva word_100B2D3C
dd rva word_100B2D2E
dd rva word_100B2D18
dd rva word_100B2D06
dd rva word_100B2CFA
dd rva word_100B2CF0
dd rva word_100B2CDC
dd rva word_100B2CD2
dd rva word_100B2CC4
dd rva word_100B2CB8
dd rva word_100B2CA6
dd rva word_100B2C8E
dd rva word_100B2C78
dd rva word_100B2C64
dd rva word_100B2C4E
dd rva word_100B2C40
dd rva word_100B2C28
dd rva word_100B2C1C
dd rva word_100B2C08
dd rva word_100B2BF8
dd rva word_100B2BEE
dd rva word_100B2BDC
dd rva word_100B2BCA
dd rva word_100B2BB6
dd rva word_100B2BA0
dd rva word_100B2B92
dd rva word_100B2B88
dd rva word_100B2B7C
dd rva word_100B2B6A
dd rva word_100B2B58
dd rva word_100B2B4A
dd rva word_100B2B3A
dd rva word_100B2B2C
dd rva word_100B2B18
dd 0
dd rva word_100B29D6
dd rva word_100B29CA
dd rva word_100B29BE
dd rva word_100B29B0
dd rva word_100B29A2
dd rva word_100B2990
dd rva word_100B2980
dd rva word_100B296E
dd 0
dd rva word_100B2A4C
dd rva word_100B2A3A
dd rva word_100B2A28
dd rva word_100B2A12
dd rva word_100B29FC
dd rva word_100B2A96
dd rva word_100B2AA8
dd rva word_100B2ABC
dd rva word_100B2AD0
dd rva word_100B2AE6
dd rva word_100B2AF6
dd rva word_100B2A60
dd 0
dd rva word_100B30B6
dd rva word_100B30AE
dd rva word_100B30A4
dd rva word_100B3096
dd rva word_100B3080
dd rva word_100B3078
dd rva word_100B306E
dd rva word_100B3066
dd rva word_100B305E
dd rva word_100B3054
dd rva word_100B304A
dd rva word_100B3040
dd rva word_100B3036
dd rva word_100B302C
dd rva word_100B3022
dd rva word_100B301A
dd rva word_100B3010
dd rva word_100B3006
dd rva word_100B2FFC
dd rva word_100B2FF2
dd rva word_100B2FE8
dd rva word_100B2FDE
dd rva word_100B2FD4
dd rva word_100B2FCA
dd rva word_100B2FC0
dd 0
dd rva word_100B2142
dd rva word_100B2162
dd rva word_100B2182
dd rva word_100B21A2
dd rva word_100B21C2
dd rva word_100B21E2
dd rva word_100B2102
dd rva word_100B20E2
dd rva word_100B20CA
dd rva word_100B20B2
dd rva word_100B2096
dd rva word_100B2078
dd rva word_100B2052
dd rva word_100B2034
dd rva word_100B201A
dd rva word_100B2004
dd rva word_100B1FDC
dd rva word_100B1FB6
dd rva word_100B1F90
dd rva word_100B1F6C
dd rva word_100B1F46
dd rva word_100B1F22
dd rva word_100B1F06
dd rva word_100B1EE8
dd rva word_100B1ECA
dd rva word_100B1EAE
dd rva word_100B1E90
dd rva word_100B1E76
dd rva word_100B1E60
dd rva word_100B1E3A
dd rva word_100B1E16
dd rva word_100B1DF0
dd rva word_100B1DCC
dd rva word_100B1DB0
dd rva word_100B1D92
dd rva word_100B2200
dd rva word_100B1D58
dd rva word_100B1D3C
dd rva word_100B1D20
dd rva word_100B1CFC
dd rva word_100B1CDA
dd rva word_100B1CB4
dd rva word_100B1C92
dd rva word_100B1C72
dd rva word_100B1C50
dd rva word_100B1C36
dd rva word_100B1C1C
dd rva word_100B1C02
dd rva word_100B1BEA
dd rva word_100B1BD0
dd rva word_100B1BBA
dd rva word_100B1BA6
dd rva word_100B1B94
dd rva word_100B1B76
dd rva word_100B1B5C
dd rva word_100B1B3E
dd rva word_100B1B22
dd rva word_100B1B08
dd rva word_100B1AF0
dd rva word_100B1AD4
dd rva word_100B1ABC
dd rva word_100B1AA4
dd rva word_100B1A86
dd rva word_100B1A6A
dd rva word_100B1A50
dd rva word_100B1A38
dd rva word_100B1A14
dd rva word_100B19F2
dd rva word_100B19D0
dd rva word_100B19B2
dd rva word_100B1994
dd rva word_100B1976
dd rva word_100B195A
dd rva word_100B1940
dd rva word_100B192A
dd rva word_100B1918
dd rva word_100B18F6
dd rva word_100B18D6
dd rva word_100B18AA
dd rva word_100B187E
dd rva word_100B1852
dd rva word_100B183A
dd rva word_100B1822
dd rva word_100B1808
dd rva word_100B17F2
dd rva word_100B17DC
dd rva word_100B221C
dd rva word_100B2232
dd rva word_100B224C
dd rva word_100B2266
dd rva word_100B2282
dd rva word_100B229E
dd rva word_100B293C
dd rva word_100B2916
dd rva word_100B28F0
dd rva word_100B28D0
dd rva word_100B28AA
dd rva word_100B2884
dd rva word_100B2864
dd rva word_100B2848
dd rva word_100B2834
dd rva word_100B2822
dd rva word_100B2810
dd rva word_100B27F4
dd rva word_100B27CE
dd rva word_100B27B8
dd rva word_100B27A8
dd rva word_100B2794
dd rva word_100B277C
dd rva word_100B2760
dd rva word_100B274E
dd rva word_100B2730
dd rva word_100B2718
dd rva word_100B2702
dd rva word_100B26EA
dd rva word_100B26CE
dd rva word_100B26BA
dd rva word_100B26A2
dd rva word_100B2686
dd rva word_100B2670
dd rva word_100B2656
dd rva word_100B2640
dd rva word_100B262A
dd rva word_100B2618
dd rva word_100B2602
dd rva word_100B25E6
dd rva word_100B25CA
dd rva word_100B25B4
dd rva word_100B2596
dd rva word_100B257A
dd rva word_100B255C
dd rva word_100B2538
dd rva word_100B251A
dd rva word_100B2502
dd rva word_100B24DC
dd rva word_100B24C2
dd rva word_100B2498
dd rva word_100B2478
dd rva word_100B2450
dd rva word_100B2428
dd rva word_100B23FE
dd rva word_100B23DA
dd rva word_100B23AA
dd rva word_100B2380
dd rva word_100B2354
dd rva word_100B2332
dd rva word_100B230E
dd rva word_100B22FC
dd rva word_100B22DC
dd rva word_100B1D74
dd rva word_100B22BC
dd rva word_100B17C6
dd rva word_100B17AE
dd rva word_100B1796
dd rva word_100B1780
dd rva word_100B176A
dd rva word_100B1758
dd rva word_100B1744
dd rva word_100B1736
dd rva word_100B1724
dd rva word_100B1710
dd rva word_100B16F2
dd rva word_100B16DC
dd rva word_100B16C4
dd rva word_100B16B2
dd rva word_100B169E
dd rva word_100B168C
dd 0
db 'PORT_Alloc_Util',0
db 'PORT_Strdup_Util',0
align 2
db 'PORT_Free_Util',0
align 4
db 'NSSUTIL_DoubleEscape',0
align 4
db 'PORT_SetError_Util',0
align 2
db 'NSS_InitializePRErrorTable',0
align 10h
db 'PORT_ZAlloc_Util',0
align 4
db 'SECOID_Shutdown',0
db 'SECOID_Init',0
db 'PORT_Realloc_Util',0
db 'PORT_ZFree_Util',0
db 'PORT_GetError_Util',0
align 10h
db 'PORT_NewArena_Util',0
align 2
db 'PORT_ArenaAlloc_Util',0
align 2
db 'PORT_ArenaZAlloc_Util',0
db 'PORT_FreeArena_Util',0
db 'PORT_ArenaGrow_Util',0
db 'PORT_ArenaMark_Util',0
db 'PORT_ArenaRelease_Util',0
align 2
db 'PORT_ArenaUnmark_Util',0
db 'PORT_ArenaStrdup_Util',0
db 'PORT_SetUCS4_UTF8ConversionFunction_Util',0
align 2
db 'PORT_SetUCS2_ASCIIConversionFunction_Util',0
db 'PORT_SetUCS2_UTF8ConversionFunction_Util',0
align 2
db 'PORT_UCS2_UTF8Conversion_Util',0
db 'PORT_UCS2_ASCIIConversion_Util',0
align 4
db 'NSS_PutEnv_Util',0
db 'SECOID_FindOID_Util',0
db 'SECOID_FindOIDTag_Util',0
align 2
db 'SECOID_FindOIDByTag_Util',0
align 2
db 'SECOID_SetAlgorithmID_Util',0
align 4
db 'SECOID_CopyAlgorithmID_Util',0
db 'SECOID_GetAlgorithmTag_Util',0
db 'SECOID_DestroyAlgorithmID_Util',0
align 2
db 'SECOID_CompareAlgorithmID_Util',0
align 4
db 'SECOID_FindOIDTagDescription_Util',0
db 'SECOID_AddEntry_Util',0
align 10h
db 'SECITEM_AllocItem_Util',0
align 2
db 'SECITEM_CompareItem_Util',0
align 2
db 'SECITEM_ItemsAreEqual_Util',0
align 4
db 'SECITEM_CopyItem_Util',0
db 'SECITEM_DupItem_Util',0
align 4
db 'SECITEM_ArenaDupItem_Util',0
db 'SECITEM_FreeItem_Util',0
db 'SECITEM_ZfreeItem_Util',0
align 2
db 'SGN_CreateDigestInfo_Util',0
db 'SGN_DestroyDigestInfo_Util',0
align 4
db 'SGN_CopyDigestInfo_Util',0
db 'SGN_CompareDigestInfo_Util',0
align 4
db 'DER_Encode_Util',0
db 'DER_Lengths_Util',0
align 2
db 'DER_GetInteger_Util',0
db 'DER_TimeToUTCTime_Util',0
align 2
db 'DER_AsciiToTime_Util',0
align 2
db 'DER_UTCTimeToTime_Util',0
align 4
db 'DER_UTCTimeToAscii_Util',0
db 'DER_UTCDayToAscii_Util',0
align 10h
db 'DER_GeneralizedDayToAscii_Util',0
align 2
db 'DER_TimeChoiceDayToAscii_Util',0
db 'DER_TimeToGeneralizedTime_Util',0
align 4
db 'DER_TimeToGeneralizedTimeArena_Util',0
db 'DER_GeneralizedTimeToTime_Util',0
align 4
db 'CERT_GenTime2FormattedAscii_Util',0
align 10h
db 'DER_DecodeTimeChoice_Util',0
db 'DER_EncodeTimeChoice_Util',0
db 'SEC_ASN1DecoderStart_Util',0
db 'SEC_ASN1DecoderUpdate_Util',0
align 2
db 'SEC_ASN1DecoderFinish_Util',0
align 10h
db 'SEC_ASN1DecoderAbort_Util',0
db 'SEC_ASN1DecoderSetFilterProc_Util',0
db 'SEC_ASN1DecoderClearFilterProc_Util',0
db 'SEC_ASN1DecoderSetNotifyProc_Util',0
db 'SEC_ASN1DecoderClearNotifyProc_Util',0
db 'SEC_ASN1Decode_Util',0
db 'SEC_ASN1DecodeItem_Util',0
db 'SEC_QuickDERDecodeItem_Util',0
db 'SEC_ASN1EncoderStart_Util',0
db 'SEC_ASN1EncoderUpdate_Util',0
align 4
db 'SEC_ASN1EncoderFinish_Util',0
align 2
db 'SEC_ASN1EncoderAbort_Util',0
db 'SEC_ASN1EncoderSetNotifyProc_Util',0
db 'SEC_ASN1EncoderClearNotifyProc_Util',0
db 'SEC_ASN1EncoderSetStreaming_Util',0
align 10h
db 'SEC_ASN1EncoderClearStreaming_Util',0
align 2
db 'SEC_ASN1EncoderSetTakeFromBuf_Util',0
align 4
db 'SEC_ASN1EncoderClearTakeFromBuf_Util',0
align 4
db 'SEC_ASN1Encode_Util',0
db 'SEC_ASN1EncodeItem_Util',0
db 'SEC_ASN1EncodeInteger_Util',0
align 2
db 'SEC_ASN1EncodeUnsignedInteger_Util',0
align 4
db 'SEC_ASN1DecodeInteger_Util',0
align 2
db 'SEC_ASN1LengthLength_Util',0
db 'BTOA_DataToAscii_Util',0
db 'ATOB_AsciiToData_Util',0
db 'ATOB_ConvertAsciiToItem_Util',0
align 2
db 'BTOA_ConvertItemToAscii_Util',0
align 2
db 'NSSBase64Decoder_Create_Util',0
align 2
db 'NSSBase64Encoder_Create_Util',0
align 2
db 'NSSBase64Decoder_Update_Util',0
align 2
db 'NSSBase64Encoder_Update_Util',0
align 2
db 'NSSBase64Decoder_Destroy_Util',0
db 'NSSBase64Encoder_Destroy_Util',0
db 'NSSBase64_DecodeBuffer_Util',0
db 'NSSBase64_EncodeItem_Util',0
db 'NSSRWLock_New_Util',0
align 2
db 'NSSRWLock_Destroy_Util',0
align 4
db 'NSSRWLock_LockRead_Util',0
db 'NSSRWLock_LockWrite_Util',0
align 2
db 'NSSRWLock_UnlockRead_Util',0
db 'NSSRWLock_UnlockWrite_Util',0
align 4
db 'NSSRWLock_HaveWriteLock_Util',0
align 4
db 'NSS_Get_SEC_AnyTemplate_Util',0
align 4
db 'DER_SetUInteger',0
db 'NSS_Get_SEC_IntegerTemplate_Util',0
align 2
db 'NSS_Get_SEC_EnumeratedTemplate',0
align 4
db 'NSS_Get_SEC_GeneralizedTimeTemplate_Util',0
align 10h
db 'NSS_Get_SEC_PointerToEnumeratedTemplate',0
db 'NSS_Get_SEC_PointerToGeneralizedTimeTemplate',0
align 2
db 'NSS_Get_SEC_SequenceOfAnyTemplate',0
db 'NSS_Get_SECOID_AlgorithmIDTemplate_Util',0
db 'NSS_Get_SEC_PointerToAnyTemplate_Util',0
db 'NSS_Get_SEC_OctetStringTemplate_Util',0
align 4
db 'NSS_Get_SEC_NullTemplate_Util',0
db 'NSS_Get_SEC_SequenceOfObjectIDTemplate',0
align 2
db 'NSS_GetAlgorithmPolicy',0
align 4
db 'NSS_Get_SEC_BitStringTemplate_Util',0
align 2
db 'SGN_DecodeDigestInfo',0
align 2
db '_SGN_VerifyPKCS1DigestInfo',0
align 4
db 'NSS_Get_SEC_ObjectIDTemplate_Util',0
db 'PORT_LoadLibraryFromOrigin',0
align 2
db 'SECOID_FindOIDByMechanism',0
db 'NSSUTIL_ArgParseCipherFlags',0
db 'NSSUTIL_ArgReadLong',0
db 'NSSUTIL_ArgParseSlotInfo',0
align 2
db 'NSSUTIL_ArgGetParamValue',0
align 2
db 'NSSUTIL_ArgHasFlag',0
align 4
db 'NSSUTIL_Escape',0
align 2
db 'NSSUTIL_EscapeSize',0
align 10h
db 'NSSUTIL_ArgIsBlank',0
align 2
db 'NSSUTIL_ArgDecodeNumber',0
db 'NSSUTIL_ArgGetLabel',0
db 'NSSUTIL_ArgSkipParameter',0
align 2
db 'NSSUTIL_ArgFetchValue',0
db 'NSSUTIL_ArgStrip',0
align 2
db 'NSSUTIL_DoubleEscapeSize',0
align 2
db 'NSSUTIL_MkModuleSpec',0
align 2
db 'NSSUTIL_MkNSSString',0
db 'NSSUTIL_MkSlotString',0
align 10h
db 'NSSUTIL_ArgParseModuleSpec',0
align 2
db 'SEC_StringToOID',0
db 'NSS_Get_SEC_SkipTemplate',0
align 4
db 'PORT_RegExpCaseSearch',0
db 'PORT_RegExpValid',0
align 4
db 'SECITEM_Hash',0
align 4
db 'SECITEM_HashCompare',0
db 'NSS_Get_SEC_IA5StringTemplate_Util',0
align 4
db 'SECOID_KnownCertExtenOID',0
align 10h
db 'DER_GetUInteger',0
db 'DER_StoreHeader',0
db 'DER_LengthLength',0
align 4
db 'PORT_UCS4_UTF8Conversion',0
align 4
db 'PORT_ISO88591_UTF8Conversion',0
align 4
db 'NSS_Get_SEC_UTF8StringTemplate_Util',0
db 'NSS_Get_SEC_BMPStringTemplate_Util',0
align 10h
db 'NSS_Get_SEC_T61StringTemplate',0
db 'NSS_Get_SEC_PrintableStringTemplate',0
db 'NSS_Get_SEC_UniversalStringTemplate',0
db 'NSS_Get_SEC_SetOfAnyTemplate_Util',0
align 2
db 'PL_strncasecmp',0
align 10h
db 'PL_strcasecmp',0
db 'PL_Base64Encode',0
db 'PL_strcatn',0
align 10h
db 'PL_strncpyz',0
db 'PL_strlen',0
db 'PL_strcat',0
db 'PL_strstr',0
db 'PL_strnstr',0
align 10h
db 'PL_HashTableLookup',0
align 2
db 'PL_HashTableRemove',0
align 4
db 'PL_HashTableAdd',0
db 'PL_NewHashTable',0
db 'PL_CompareValues',0
align 10h
db 'PL_HashTableDestroy',0
db 'PL_HashTableEnumerateEntries',0
align 2
db 'PL_ArenaRelease',0
db 'PL_ArenaAllocate',0
align 4
db 'PL_InitArenaPool',0
align 10h
db 'PL_FinishArenaPool',0
align 2
db 'PL_HashString',0
db 'PL_CompareStrings',0
align 4
db 'PR_smprintf_free',0
align 4
db 'PR_smprintf',0
db 'PR_NewCondVar',0
db 'PR_NewLock',0
align 4
db 'PR_DestroyLock',0
align 2
db 'PR_WaitCondVar',0
align 4
db 'PR_Unlock',0
db 'PR_Lock',0
db 'PR_CallOnce',0
db 'PR_NotifyAllCondVar',0
db 'PR_NotifyCondVar',0
align 2
db 'PR_ExitMonitor',0
align 4
db 'PR_EnterMonitor',0
db 'PR_Now',0
align 4
db 'PR_NewMonitor',0
db 'PR_DestroyMonitor',0
db 'PR_Close',0
align 4
db 'PR_InitializeNetAddr',0
align 10h
db 'PR_Connect',0
align 2
db 'PR_EnumerateHostEnt',0
db 'PR_GetHostByName',0
align 4
db 'PR_StringToNetAddr',0
align 2
db 'PR_SecondsToInterval',0
align 2
db 'PR_NewTCPSocket',0
db 'PR_Write',0
align 4
db 'PR_snprintf',0
db 'PR_Recv',0
db 'PR_TicksPerSecond',0
db 'PR_Poll',0
db 'PR_GetEnv',0
db 'PR_IntervalNow',0
align 4
db 'PR_CallOnceWithArg',0
align 2
db 'PR_LogPrint',0
db 'PR_AtomicAdd',0
align 4
db 'PR_AtomicIncrement',0
align 2
db 'PR_AtomicDecrement',0
align 4
db 'PR_NewLogModule',0
db 'PR_IntervalToMicroseconds',0
db 'PR_IntervalToMilliseconds',0
db 'PR_IntervalToSeconds',0
align 2
db 'PR_UnloadLibrary',0
align 2
db 'PR_LoadLibrary',0
align 10h
db 'PR_FindSymbol',0
db 'PR_Sleep',0
align 4
db 'PR_SetErrorText',0
db 'PR_htonl',0
align 2
db 'PR_ConvertIPv4AddrToIPv6',0
align 2
db 'PR_NetAddrToString',0
align 4
db 'PR_AtomicSet',0
align 4
db 'PR_GetError',0
db 'PR_sprintf_append',0
db 'PR_Calloc',0
db 'PR_Free',0
db 'PR_NewThreadPrivateIndex',0
align 10h
db 'PR_SetThreadPrivate',0
db 'PR_GetThreadPrivate',0
db 'PR_Malloc',0
db 'PR_Realloc',0
align 2
db 'PR_DestroyRWLock',0
align 2
db 'PR_FindFunctionSymbol',0
db 'PR_ErrorToString',0
align 2
db 'PR_Bind',0
db 'PR_ConnectContinue',0
align 2
db 'PR_Listen',0
db 'PR_Shutdown',0
db 'PR_Send',0
db 'PR_Accept',0
db 'PR_htons',0
align 2
align 10h
db '_mktemp',0
db 'memset',0
align 4
db 'strrchr',0
db 'memcpy',0
align 4
db 'isdigit',0
db 'getenv',0
align 4
db 'strncmp',0
db 'strtol',0
align 10h
db 'memmove',0
db 'atoi',0
align 2
db 'strchr',0
align 4
db 'strstr',0
align 2
db 'isspace',0
db 'fclose',0
align 2
db 'fflush',0
align 4
db 'fprintf',0
db '_iob',0
align 2
db 'fopen',0
db 'tolower',0
db 'qsort',0
db 'printf',0
align 2
align 2
db '_XcptFilter',0
db 'malloc',0
align 2
db 'free',0
align 2
db '_initterm',0
db '_amsg_exit',0
align 10h
db 'RtlUnwind',0
db 'InterlockedExchange',0
db 'Sleep',0
db 'InterlockedCompareExchange',0
align 4
db 'TerminateProcess',0
align 4
db 'GetCurrentProcess',0
db 'UnhandledExceptionFilter',0
align 4
db 'SetUnhandledExceptionFilter',0
db 'QueryPerformanceCounter',0
db 'GetTickCount',0
align 4
db 'GetCurrentThreadId',0
align 2
db 'GetCurrentProcessId',0
db 'GetSystemTimeAsFileTime',0
align 10h
dd 0			
dd 54275E6Eh		
dw 0			
dw 0			
dd rva aNss3_dll	
dd 1			
dd 312h			
dd 312h			
dd rva off_100B3228	
dd rva off_100B3E70	
dd rva word_100B4AB8	
			
dd rva BTOA_DataToAscii, rva CERT_AddCertToListHead, rva CERT_AddCertToListSorted
dd rva CERT_AddCertToListTail, rva CERT_AddExtension, rva CERT_AddExtensionByOID
dd rva CERT_AddOCSPAcceptableResponses,	rva CERT_AddOKDomainName
dd rva CERT_AddRDN, rva	CERT_AllocCERTRevocationFlags
dd rva CERT_AsciiToName, rva CERT_CRLCacheRefreshIssuer
dd rva CERT_CacheCRL, rva CERT_CacheOCSPResponseFromSideChannel
dd rva CERT_CertChainFromCert, rva CERT_CertListFromCert
dd rva CERT_CertTimesValid, rva	CERT_ChangeCertTrust, rva CERT_CheckCertUsage
dd rva CERT_CheckCertValidTimes, rva CERT_CheckNameSpace
dd rva CERT_CheckOCSPStatus, rva CERT_ClearOCSPCache, rva CERT_CompareCerts
dd rva CERT_CompareName, rva CERT_CompareValidityTimes
dd rva CERT_CompleteCRLDecodeEntries, rva CERT_CopyName
dd rva CERT_CopyRDN, rva CERT_CreateAVA, rva CERT_CreateCertificate
dd rva CERT_CreateCertificateRequest, rva CERT_CreateEncodedOCSPErrorResponse
dd rva CERT_CreateEncodedOCSPSuccessResponse, rva CERT_CreateName
dd rva CERT_CreateOCSPCertID, rva CERT_CreateOCSPRequest
dd rva CERT_CreateOCSPSingleResponseGood, rva CERT_CreateOCSPSingleResponseRevoked
dd rva CERT_CreateOCSPSingleResponseUnknown, rva CERT_CreateRDN
dd rva CERT_CreateSubjectCertList, rva CERT_CreateValidity
dd rva CERT_DecodeAVAValue, rva	CERT_DecodeAltNameExtension
dd rva CERT_DecodeAuthInfoAccessExtension, rva CERT_DecodeAuthKeyID
dd rva CERT_DecodeBasicConstraintValue,	rva CERT_DecodeCRLDistributionPoints
dd rva CERT_DecodeCertificatePoliciesExtension,	rva CERT_DecodeDERCrl
dd rva CERT_DecodeDERCrlWithFlags, rva CERT_DecodeGeneralName
dd rva CERT_DecodeNameConstraintsExtension, rva	CERT_DecodeOCSPRequest
dd rva CERT_DecodeOCSPResponse,	rva CERT_DecodeOidSequence
dd rva CERT_DecodePrivKeyUsagePeriodExtension, rva CERT_DecodeTrustString
dd rva CERT_DecodeUserNotice, rva CERT_DerNameToAscii
dd rva CERT_DestroyCERTRevocationFlags,	rva CERT_DestroyCertArray
dd rva CERT_DestroyCertList, rva CERT_DestroyCertificate
dd rva CERT_DestroyCertificateList, rva	CERT_DestroyUserNotice
dd rva SECKEY_DestroySubjectPublicKeyInfo, rva CERT_DestroyName
dd rva CERT_DestroyOCSPCertID, rva CERT_DestroyOCSPRequest
dd rva CERT_DestroyOCSPResponse, 2 dup(rva CERT_DestroyUserNotice)
dd rva SECKEY_DestroySubjectPublicKeyInfo, rva CERT_DisableOCSPChecking
dd rva CERT_DisableOCSPDefaultResponder, rva CERT_DistNamesFromCertList
dd rva CERT_DupCertList, rva CERT_DupCertificate, rva CERT_DupDistNames
dd rva CERT_EnableOCSPChecking,	rva CERT_EnableOCSPDefaultResponder
dd rva CERT_EncodeAltNameExtension, rva	CERT_EncodeAndAddBitStrExtension
dd rva CERT_EncodeAuthKeyID, rva CERT_EncodeBasicConstraintValue
dd rva CERT_EncodeCRLDistributionPoints, rva CERT_EncodeCertPoliciesExtension
dd rva CERT_EncodeGeneralName, rva CERT_EncodeInfoAccessExtension
dd rva CERT_EncodeInhibitAnyExtension, rva CERT_EncodeNameConstraintsExtension
dd rva CERT_EncodeNoticeReference, rva CERT_EncodeOCSPRequest
dd rva CERT_EncodePolicyConstraintsExtension, rva CERT_EncodePolicyMappingExtension
dd rva CERT_EncodeSubjectKeyID,	rva CERT_EncodeUserNotice
dd rva CERT_ExtractPublicKey, rva CERT_FilterCertListByCANames
dd rva CERT_FilterCertListByUsage, rva CERT_FilterCertListForUserCerts
dd rva CERT_FindCRLEntryReasonExten, rva CERT_FindCRLNumberExten
dd rva CERT_FindCertByDERCert, rva CERT_FindCertByIssuerAndSN
dd rva CERT_FindCertByName, rva	CERT_FindCertByNickname
dd rva CERT_FindCertByNicknameOrEmailAddr, rva CERT_FindCertByNicknameOrEmailAddrForUsage
dd rva CERT_FindCertBySubjectKeyID, rva	CERT_FindCertExtension
dd rva CERT_FindCertIssuer, rva	CERT_FindKeyUsageExtension
dd rva CERT_FindNameConstraintsExten, rva CERT_FindSMimeProfile
dd rva CERT_FindSubjectKeyIDExtension, rva CERT_FindUserCertByUsage
dd rva CERT_FindUserCertsByUsage, rva CERT_FinishCertificateRequestAttributes
dd rva CERT_FinishExtensions, rva CERT_ForcePostMethodForOCSP
dd rva CERT_FormatName,	2 dup(rva CERT_FreeNicknames)
dd rva CERT_GenTime2FormattedAscii, rva	CERT_GetAVATag
dd rva CERT_GetCertChainFromCert, rva CERT_GetCertEmailAddress
dd rva CERT_GetCertIssuerAndSN,	rva CERT_GetCertNicknames
dd rva CERT_GetCertTimes, rva CERT_GetCertTrust, rva CERT_GetCertUid
dd rva CERT_GetCertificateNames, rva CERT_GetCertificateRequestExtensions
dd rva CERT_GetClassicOCSPDisabledPolicy, rva CERT_GetClassicOCSPEnabledHardFailurePolicy
dd rva CERT_GetClassicOCSPEnabledSoftFailurePolicy, rva	CERT_GetCommonName
dd rva CERT_GetConstrainedCertificateNames, rva	CERT_GetCountryName
dd rva __PBE_GenerateBits, rva CERT_GetDefaultCertDB, rva CERT_GetDomainComponentName
dd rva CERT_GetEncodedOCSPResponse, rva	CERT_GetFirstEmailAddress
dd rva CERT_GetGeneralNameTypeFromString, rva CERT_GetLocalityName
dd rva CERT_GetNextEmailAddress, rva CERT_GetNextGeneralName
dd rva CERT_GetNextNameConstraint, rva CERT_GetOCSPAuthorityInfoAccessLocation
dd rva CERT_GetOCSPResponseStatus, rva CERT_GetOCSPStatusForCertID
dd rva CERT_GetOidString, rva CERT_GetOrgName, rva CERT_GetOrgUnitName
dd rva CERT_GetPKIXVerifyNistRevocationPolicy, rva CERT_GetPrevGeneralName
dd rva CERT_GetPrevNameConstraint, rva CERT_GetSSLCACerts
dd rva CERT_GetSlopTime, rva CERT_GetStateName,	rva CERT_GetSubjectNameDigest
dd rva CERT_GetSubjectPublicKeyDigest, rva CERT_GetUsePKIXForValidation
dd rva CERT_GetValidDNSPatternsFromCert, rva CERT_Hexify
dd rva CERT_ImportCAChain, rva CERT_ImportCAChainTrusted
dd rva CERT_ImportCRL, rva CERT_ImportCerts, rva CERT_IsCACert
dd rva CERT_IsCADERCert, rva CERT_IsRootDERCert, rva CERT_IsUserCert
dd rva CERT_KeyFromDERCrl, rva CERT_MakeCANickname, rva	CERT_MergeExtensions
dd rva CERT_NameToAscii, rva CERT_NameToAsciiInvertible
dd rva SECKEY_NewPrivateKeyList, rva CERT_NewTempCertificate
dd rva CERT_NicknameStringsFromCertList, rva CERT_OCSPCacheSettings
dd rva __nss_InitLock, rva CERT_PKIXVerifyCert,	rva CERT_PostOCSPRequest
dd rva CERT_RFC1485_EscapeAndQuote, rva	CERT_RegisterAlternateOCSPAIAInfoCallBack
dd rva CERT_RemoveCertListNode,	rva CERT_SaveSMimeProfile
dd rva CERT_SetOCSPDefaultResponder, rva CERT_SetOCSPFailureMode
dd rva CERT_SetOCSPTimeout, rva	CERT_SetSlopTime, rva CERT_SetUsePKIXForValidation
dd rva CERT_StartCRLEntryExtensions, rva CERT_StartCRLExtensions
dd rva CERT_StartCertExtensions, rva CERT_StartCertificateRequestAttributes
dd rva CERT_UncacheCRL,	rva CERT_VerifyCACertForUsage
dd rva CERT_VerifyCert,	rva CERT_VerifyCertName, rva CERT_VerifyCertNow
dd rva CERT_VerifyCertificate, rva CERT_VerifyCertificateNow
dd rva CERT_VerifyOCSPResponseSignature, rva CERT_VerifySignedData
dd rva CERT_VerifySignedDataWithPublicKey, rva CERT_VerifySignedDataWithPublicKeyInfo
dd rva DER_AsciiToTime,	rva DER_DecodeTimeChoice, rva DER_Encode
dd rva DER_EncodeTimeChoice, rva DER_GeneralizedDayToAscii
dd rva DER_GeneralizedTimeToTime, rva DER_GetInteger, rva DER_Lengths
dd rva DER_TimeChoiceDayToAscii, rva DER_TimeToGeneralizedTime
dd rva DER_TimeToGeneralizedTimeArena, rva DER_TimeToUTCTime
dd rva DER_UTCDayToAscii, rva DER_UTCTimeToAscii, rva DER_UTCTimeToTime
dd rva DSAU_DecodeDerSig, rva DSAU_DecodeDerSigToLen, rva DSAU_EncodeDerSig
dd rva DSAU_EncodeDerSigWithLen, rva HASH_Begin, rva HASH_Clone
dd rva HASH_Create, rva	HASH_Destroy, rva HASH_End, rva	HASH_GetHashObject
dd rva HASH_GetHashObjectByOidTag, rva HASH_GetHashTypeByOidTag
dd rva HASH_GetType, rva HASH_HashBuf, rva HASH_ResultLen
dd rva HASH_ResultLenByOidTag, rva HASH_ResultLenContext
dd rva HASH_Update, rva	NSSBase64Decoder_Create, rva NSSBase64Decoder_Destroy
dd rva NSSBase64Decoder_Update,	rva NSSBase64Encoder_Create
dd rva NSSBase64Encoder_Destroy, rva NSSBase64Encoder_Update
dd rva NSSBase64_DecodeBuffer, rva NSSBase64_EncodeItem
dd rva NSSRWLock_Destroy, rva NSSRWLock_HaveWriteLock
dd rva SECMOD_GetReadLock, rva NSSRWLock_LockWrite, rva	NSSRWLock_New
dd rva SECMOD_ReleaseReadLock, rva NSSRWLock_UnlockWrite
dd rva NSS_GetVersion, rva NSS_Get_CERT_CertificateRequestTemplate
dd rva NSS_Get_CERT_CertificateTemplate, rva NSS_Get_CERT_CrlTemplate
dd rva NSS_Get_CERT_IssuerAndSNTemplate, rva NSS_Get_CERT_NameTemplate
dd rva NSS_Get_CERT_SequenceOfCertExtensionTemplate, rva NSS_Get_CERT_SetOfSignedCrlTemplate
dd rva NSS_Get_CERT_SignedCrlTemplate, rva NSS_Get_CERT_SignedDataTemplate
dd rva NSS_Get_CERT_SubjectPublicKeyInfoTemplate, rva NSS_Get_CERT_TimeChoiceTemplate
dd rva NSS_Get_SECKEY_DSAPublicKeyTemplate, rva	NSS_Get_SECKEY_EncryptedPrivateKeyInfoTemplate
dd rva NSS_Get_SECKEY_PointerToEncryptedPrivateKeyInfoTemplate
dd rva NSS_Get_SECKEY_PointerToPrivateKeyInfoTemplate
dd rva NSS_Get_SECKEY_PrivateKeyInfoTemplate, rva NSS_Get_SECKEY_RSAPSSParamsTemplate
dd rva NSS_Get_SECKEY_RSAPublicKeyTemplate, rva	NSS_Get_SECOID_AlgorithmIDTemplate
dd rva NSS_Get_SEC_AnyTemplate,	rva NSS_Get_SEC_BMPStringTemplate
dd rva NSS_Get_SEC_BitStringTemplate, rva NSS_Get_SEC_BooleanTemplate
dd rva NSS_Get_SEC_GeneralizedTimeTemplate, rva	NSS_Get_SEC_IA5StringTemplate
dd rva NSS_Get_SEC_IntegerTemplate, rva	NSS_Get_SEC_NullTemplate
dd rva NSS_Get_SEC_ObjectIDTemplate, rva NSS_Get_SEC_OctetStringTemplate
dd rva NSS_Get_SEC_PointerToAnyTemplate, rva NSS_Get_SEC_PointerToOctetStringTemplate
dd rva NSS_Get_SEC_SetOfAnyTemplate, rva NSS_Get_SEC_SignedCertificateTemplate
dd rva NSS_Get_SEC_UTCTimeTemplate, rva	NSS_Get_SEC_UTF8StringTemplate
dd rva NSS_Get_sgn_DigestInfoTemplate, rva NSS_Init, rva NSS_InitContext
dd rva NSS_InitReadWrite, rva NSS_InitWithMerge, rva NSS_Initialize
dd rva NSS_IsInitialized, rva NSS_NoDB_Init, rva NSS_PutEnv
dd rva NSS_RegisterShutdown, rva NSS_Shutdown, rva NSS_ShutdownContext
dd rva NSS_UnregisterShutdown, rva NSS_VersionCheck, rva PBE_CreateContext
dd rva PBE_DestroyContext, rva SECMOD_PubCipherFlagstoInternal
dd rva PK11SDR_Decrypt,	rva PK11SDR_Encrypt, rva PK11_AlgtagToMechanism
dd rva PK11_Authenticate, rva PK11_BlockData, rva PK11_ChangePW
dd rva PK11_CheckSSOPassword, rva PK11_CheckUserPassword
dd rva PK11_CipherOp, rva PK11_CloneContext, rva PK11_ConfigurePKCS11
dd rva PK11_ConvertSessionPrivKeyToTokenPrivKey, rva PK11_ConvertSessionSymKeyToTokenSymKey
dd rva PK11_CopySymKeyForSigning, rva PK11_CopyTokenPrivKeyToSessionPrivKey
dd rva PK11_CreateContextBySymKey, rva PK11_CreateDigestContext
dd rva PK11_CreateGenericObject, rva PK11_CreateMergeLog
dd rva PK11_CreatePBEAlgorithmID, rva PK11_CreatePBEParams
dd rva PK11_CreatePBEV2AlgorithmID, rva	PK11_DEREncodePublicKey
dd rva PK11_Decrypt, rva PK11_DeleteTokenCertAndKey, rva PK11_DeleteTokenPrivateKey
dd rva PK11_DeleteTokenPublicKey, rva PK11_DeleteTokenSymKey
dd rva PK11_Derive, rva	PK11_DeriveWithFlags, rva PK11_DeriveWithFlagsPerm
dd rva PK11_DeriveWithTemplate,	rva PK11_DestroyContext
dd rva PK11_DestroyGenericObject, rva PK11_DestroyGenericObjects
dd rva PK11_DestroyMergeLog, rva PK11_DestroyObject, rva PK11_DestroyPBEParams
dd rva PK11_DestroyTokenObject,	rva PK11_DigestBegin, rva PK11_DigestFinal
dd rva PK11_DigestKey, rva PK11_DigestOp, rva PK11_DoesMechanism
dd rva PK11_Encrypt, rva PK11_ExportDERPrivateKeyInfo
dd rva PK11_ExportEncryptedPrivKeyInfo,	rva PK11_ExportEncryptedPrivateKeyInfo
dd rva PK11_ExportPrivKeyInfo, rva PK11_ExportPrivateKeyInfo
dd rva PK11_ExtractKeyValue, rva PK11_Finalize,	rva PK11_FindBestKEAMatch
dd rva PK11_FindCertAndKeyByRecipientList, rva PK11_FindCertAndKeyByRecipientListNew
dd rva PK11_FindCertByIssuerAndSN, rva PK11_FindCertFromDERCert
dd rva PK11_FindCertFromDERCertItem, rva PK11_FindCertFromNickname
dd rva PK11_FindCertInSlot, rva	PK11_FindCertsFromEmailAddress
dd rva PK11_FindCertsFromNickname, rva PK11_FindFixedKey
dd rva PK11_FindGenericObjects,	rva PK11_FindKeyByAnyCert
dd rva PK11_FindKeyByDERCert, rva PK11_FindKeyByKeyID
dd rva PK11_FindPrivateKeyFromCert, rva	PK11_FindSlotByName
dd rva PK11_FindSlotsByNames, rva PK11_FortezzaHasKEA
dd rva PK11_FortezzaMapSig, rva	PK11_FreeSlot, rva PK11_FreeSlotList
dd rva PK11_FreeSlotListElement, rva PK11_FreeSymKey, rva PK11_GenerateFortezzaIV
dd rva PK11_GenerateKeyPair, rva PK11_GenerateKeyPairWithFlags
dd rva PK11_GenerateKeyPairWithOpFlags,	rva PK11_GenerateNewParam
dd rva PK11_GenerateRandom, rva	PK11_GenerateRandomOnSlot
dd rva PK11_GetAllSlotsForCert,	rva PK11_GetAllTokens
dd rva PK11_GetBestKeyLength, rva PK11_GetBestSlot, rva	PK11_GetBestSlotMultiple
dd rva PK11_GetBestSlotMultipleWithAttributes, rva PK11_GetBestSlotWithAttributes
dd rva PK11_GetBestWrapMechanism, rva PK11_GetBlockSize
dd rva PK11_GetCertFromPrivateKey, rva PK11_GetCurrentWrapIndex
dd rva PK11_GetDefaultArray, rva PK11_GetDefaultFlags
dd rva PK11_GetDisabledReason, rva PK11_GetFirstSafe, rva PK11_GetIVLength
dd rva PK11_GetInternalKeySlot,	rva PK11_GetInternalSlot
dd rva __PK11_GetKeyData, rva PK11_GetKeyGen, rva PK11_GetKeyLength
dd rva PK11_GetKeyStrength, rva	PK11_GetKeyType, rva PK11_GetLowLevelKeyIDForCert
dd rva PK11_GetLowLevelKeyIDForPrivateKey, rva PK11_GetPrevGenericObject
dd rva PK11_GetMinimumPwdLength, rva PK11_GetModInfo, rva SECKEY_GetPublicKeyType
dd rva PK11_GetModuleID, rva SECKEY_GetPublicKeyType, rva PK11_GetNextSafe
dd rva PK11_GetNextSymKey, rva PK11_GetPBECryptoMechanism
dd rva PK11_GetPBEIV, rva PK11_GetPQGParamsFromPrivateKey
dd rva PK11_GetPadMechanism, rva PK11_GetPrevGenericObject
dd rva PK11_GetPublicKeyNickname, rva PK11_GetPrivateModulusLen
dd rva PK11_GetPublicKeyNickname, rva PK11_GetSlotFromKey
dd rva PK11_GetSlotFromPrivateKey, rva PK11_GetSymKeyUserData
dd rva PK11_GetSlotInfo, rva PK11_GetSlotName, rva PK11_GetSlotPWValues
dd rva PK11_GetSlotSeries, rva SECKEY_GetPublicKeyType
dd rva PK11_GetSymKeyNickname, rva PK11_GetSymKeyType
dd rva PK11_GetSymKeyUserData, rva PK11_GetTokenInfo, rva PK11_GetTokenName
dd rva PK11_GetWindow, rva PK11_GetWrapKey, rva	PK11_HasRootCerts
dd rva PK11_HashBuf, rva PK11_IVFromParam, rva PK11_ImportCRL
dd rva PK11_ImportCert,	rva PK11_ImportCertForKey, rva PK11_ImportCertForKeyToSlot
dd rva PK11_ImportDERCert, rva PK11_ImportDERCertForKey
dd rva PK11_ImportDERPrivateKeyInfo, rva PK11_ImportDERPrivateKeyInfoAndReturnKey
dd rva PK11_ImportEncryptedPrivateKeyInfo, rva PK11_ImportEncryptedPrivateKeyInfoAndReturnKey
dd rva PK11_ImportPrivateKeyInfo, rva PK11_ImportPrivateKeyInfoAndReturnKey
dd rva PK11_ImportPublicKey, rva PK11_ImportSymKey, rva	PK11_ImportSymKeyWithFlags
dd rva PK11_InitPin, rva PK11_IsDisabled, rva PK11_IsFIPS
dd rva PK11_IsFriendly,	rva PK11_IsHW, rva PK11_IsInternal
dd rva PK11_IsInternalKeySlot, rva PK11_IsLoggedIn, rva	PK11_IsPresent
dd rva PK11_IsReadOnly,	rva PK11_IsRemovable, rva PK11_KeyForCertExists
dd rva PK11_KeyForDERCertExists, rva PK11_KeyGen, rva PK11_KeyGenWithTemplate
dd rva PK11_LinkGenericObject, rva PK11_ListCerts, rva PK11_ListCertsInSlot
dd rva PK11_ListFixedKeysInSlot, rva PK11_ListPrivKeysInSlot
dd rva PK11_ListPrivateKeysInSlot, rva PK11_ListPublicKeysInSlot
dd rva PK11_LoadPrivKey, rva PK11_Logout, rva PK11_LogoutAll
dd rva PK11_MakeIDFromPubKey, rva PK11_MakeKEAPubKey, rva PK11_MapPBEMechanismToCryptoMechanism
dd rva PK11_MapSignKeyType, rva	PK11_MechanismToAlgtag
dd rva PK11_MergeTokens, rva PK11_MoveSymKey, rva PK11_NeedLogin
dd rva PK11_NeedPWInit,	rva PK11_NeedUserInit, rva PK11_PBEKeyGen
dd rva PK11_PQG_DestroyParams, rva PK11_PQG_DestroyVerify
dd rva PK11_PQG_GetBaseFromParams, rva SECKEY_GetPublicKeyType
dd rva PK11_PQG_GetHFromVerify,	rva PK11_PQG_GetPrimeFromParams
dd rva PK11_PQG_GetSeedFromVerify, rva PK11_PQG_GetSubPrimeFromParams
dd rva PK11_PQG_NewParams, rva PK11_PQG_NewVerify, rva PK11_PQG_ParamGen
dd rva PK11_PQG_ParamGenSeedLen, rva PK11_PQG_ParamGenV2
dd rva PK11_PQG_VerifyParams, rva PK11_ParamFromAlgid
dd rva PK11_ParamFromIV, rva PK11_ParamToAlgid,	rva PK11_PrivDecrypt
dd rva PK11_PrivDecryptPKCS1, rva PK11_ProtectedAuthenticationPath
dd rva PK11_PubDecryptRaw, rva PK11_PubDerive, rva PK11_PubDeriveWithKDF
dd rva PK11_PubEncrypt,	rva PK11_PubEncryptPKCS1, rva PK11_PubEncryptRaw
dd rva PK11_PubUnwrapSymKey, rva PK11_PubUnwrapSymKeyWithFlags
dd rva PK11_PubUnwrapSymKeyWithFlagsPerm, rva PK11_PubWrapSymKey
dd rva PK11_RandomUpdate, rva PK11_RawPBEKeyGen, rva PK11_ReadRawAttribute
dd rva PK11_ReferenceSlot, rva PK11_ReferenceSymKey, rva PK11_ResetToken
dd rva PK11_RestoreContext, rva	PK11_SaveContext, rva PK11_SaveContextAlloc
dd rva PK11_SeedRandom,	rva PK11_SetFortezzaHack, rva PK11_SetPasswordFunc
dd 2 dup(rva PK11_SetPublicKeyNickname), rva PK11_SetSlotPWValues
dd rva PK11_SetSymKeyNickname, rva PK11_SetSymKeyUserData
dd rva PK11_SetWrapKey,	rva PK11_Sign, rva PK11_SignWithSymKey
dd rva PK11_SignatureLen, rva PK11_SymKeyFromHandle, rva PK11_TokenExists
dd rva PK11_TokenKeyGen, rva PK11_TokenKeyGenWithFlags
dd rva PK11_TokenRefresh, rva PK11_TraverseCertsForNicknameInSlot
dd rva PK11_TraverseCertsForSubjectInSlot, rva PK11_TraverseSlotCerts
dd rva PK11_UnconfigurePKCS11, rva PK11_UnlinkGenericObject
dd rva PK11_UnwrapPrivKey, rva PK11_UnwrapSymKey, rva PK11_UnwrapSymKeyWithFlags
dd rva PK11_UnwrapSymKeyWithFlagsPerm, rva PK11_UpdateSlotAttribute
dd rva PK11_UserDisableSlot, rva PK11_UserEnableSlot, rva PK11_Verify
dd rva PK11_VerifyKeyOK, rva PK11_VerifyRecover, rva PK11_WaitForTokenEvent
dd rva PK11_WrapPrivKey, rva PK11_WrapSymKey, rva PK11_WriteRawAttribute
dd rva PORT_Alloc, rva PORT_ArenaAlloc,	rva PORT_ArenaGrow
dd rva PORT_ArenaMark, rva PORT_ArenaRelease, rva PORT_ArenaStrdup
dd rva PORT_ArenaUnmark, rva PORT_ArenaZAlloc, rva PORT_Free
dd rva PORT_FreeArena, rva PORT_GetError, rva PORT_NewArena
dd rva PORT_Realloc, rva PORT_SetError,	rva PORT_SetUCS2_ASCIIConversionFunction
dd rva PORT_SetUCS2_UTF8ConversionFunction, rva	PORT_SetUCS4_UTF8ConversionFunction
dd rva PORT_Strdup, rva	PORT_UCS2_ASCIIConversion, rva PORT_UCS2_UTF8Conversion
dd rva PORT_ZAlloc, rva	PORT_ZFree, rva	RSA_FormatBlock
dd rva SECITEM_AllocItem, rva SECITEM_ArenaDupItem, rva	SECITEM_CompareItem
dd rva SECITEM_CopyItem, rva SECITEM_DupItem, rva SECITEM_FreeItem
dd rva SECITEM_ItemsAreEqual, rva SECITEM_ZfreeItem, rva SECKEY_AddPrivateKeyToListTail
dd rva SECKEY_CacheStaticFlags,	rva SECKEY_ConvertToPublicKey
dd rva SECKEY_CopyEncryptedPrivateKeyInfo, rva SECKEY_CopyPrivateKey
dd rva SECKEY_CopyPrivateKeyInfo, rva SECKEY_CopyPublicKey
dd rva SECKEY_CopySubjectPublicKeyInfo,	rva SECKEY_CreateDHPrivateKey
dd rva SECKEY_CreateECPrivateKey, rva SECKEY_CreateRSAPrivateKey
dd rva SECKEY_CreateSubjectPublicKeyInfo, rva SECKEY_DecodeDERSubjectPublicKeyInfo
dd rva SECKEY_DestroyEncryptedPrivateKeyInfo, rva SECKEY_DestroyPrivateKey
dd rva SECKEY_DestroyPrivateKeyInfo, rva SECKEY_DestroyPrivateKeyList
dd rva SECKEY_DestroyPublicKey,	rva SECKEY_DestroyPublicKeyList
dd rva SECKEY_DestroySubjectPublicKeyInfo, rva SECKEY_ECParamsToBasePointOrderLen
dd rva SECKEY_ECParamsToKeySize, rva SECKEY_EncodeDERSubjectPublicKeyInfo
dd rva SECKEY_ExtractPublicKey,	2 dup(rva SECKEY_GetPublicKeyType)
dd rva SECKEY_HashPassword, rva	SECKEY_ImportDERPublicKey
dd rva SECKEY_NewPrivateKeyList, rva SECKEY_PublicKeyStrength
dd rva SECKEY_PublicKeyStrengthInBits, rva SECKEY_RemovePrivateKeyListNode
dd rva SECKEY_SignatureLen, rva	SECKEY_UpdateCertPQG, rva SECMOD_AddNewModule
dd rva SECMOD_AddNewModuleEx, rva SECMOD_CanDeleteInternalModule
dd rva SECMOD_CancelWait, rva SECMOD_CloseUserDB, rva SECMOD_CreateModule
dd rva SECMOD_DeleteInternalModule, rva	SECMOD_DeleteModule
dd rva SECMOD_DeleteModuleEx, rva SECMOD_DestroyModule
dd rva SECMOD_FindModule, rva SECMOD_FindSlot, rva SECMOD_FreeModuleSpecList
dd rva SECMOD_GetDBModuleList, rva SECMOD_GetDeadModuleList
dd rva SECMOD_GetDefaultModDBFlag, rva SECMOD_GetDefaultModuleList
dd rva SECMOD_GetDefaultModuleListLock,	rva SECMOD_GetInternalModule
dd rva SECMOD_GetModuleSpecList, rva SECMOD_GetReadLock
dd rva SECMOD_GetSkipFirstFlag,	rva SECMOD_HasRemovableSlots
dd rva SECMOD_HasRootCerts, rva	SECMOD_InternaltoPubMechFlags
dd rva SECMOD_IsModulePresent, rva SECMOD_LoadModule, rva SECMOD_LoadUserModule
dd rva SECMOD_LookupSlot, rva SECMOD_OpenNewSlot, rva SECMOD_OpenUserDB
dd rva SECMOD_PubCipherFlagstoInternal,	rva SECMOD_PubMechFlagstoInternal
dd rva SECMOD_ReferenceModule, rva SECMOD_ReleaseReadLock
dd rva SECMOD_RestartModules, rva SECMOD_UnloadUserModule
dd rva SECMOD_UpdateModule, rva	SECMOD_UpdateSlotList
dd rva SECMOD_WaitForAnyTokenEvent, rva	SECOID_AddEntry
dd rva SECOID_CompareAlgorithmID, rva SECOID_CopyAlgorithmID
dd rva SECOID_DestroyAlgorithmID, rva SECOID_FindOID, rva SECOID_FindOIDByTag
dd rva SECOID_FindOIDTag, rva SECOID_FindOIDTagDescription
dd rva SECOID_GetAlgorithmTag, rva SECOID_SetAlgorithmID
dd rva SEC_ASN1Decode, rva SEC_ASN1DecodeInteger, rva SEC_ASN1DecodeItem
dd rva SEC_ASN1DecoderAbort, rva SEC_ASN1DecoderClearFilterProc
dd rva SEC_ASN1DecoderClearNotifyProc, rva SEC_ASN1DecoderFinish
dd rva SEC_ASN1DecoderSetFilterProc, rva SEC_ASN1DecoderSetNotifyProc
dd rva SEC_ASN1DecoderStart, rva SEC_ASN1DecoderUpdate
dd rva SEC_ASN1Encode, rva SEC_ASN1EncodeInteger, rva SEC_ASN1EncodeItem
dd rva SEC_ASN1EncodeUnsignedInteger, rva SEC_ASN1EncoderAbort
dd rva SEC_ASN1EncoderClearNotifyProc, rva SEC_ASN1EncoderClearStreaming
dd rva SEC_ASN1EncoderClearTakeFromBuf,	rva SEC_ASN1EncoderFinish
dd rva SEC_ASN1EncoderSetNotifyProc, rva SEC_ASN1EncoderSetStreaming
dd rva SEC_ASN1EncoderSetTakeFromBuf, rva SEC_ASN1EncoderStart
dd rva SEC_ASN1EncoderUpdate, rva SEC_ASN1LengthLength
dd rva SEC_CertNicknameConflict, rva SEC_DeletePermCRL
dd rva SEC_DeletePermCertificate, rva SEC_DerSignData
dd rva SEC_DestroyCrl, rva SEC_DupCrl, rva SEC_FindCrlByDERCert
dd rva SEC_FindCrlByName, rva SEC_GetRegisteredHttpClient
dd rva SEC_GetSignatureAlgorithmOidTag,	rva SEC_LookupCrls
dd rva SEC_NewCrl, rva SEC_PKCS5GetCryptoAlgorithm, rva	SEC_PKCS5GetIV
dd rva SEC_PKCS5GetKeyLength, rva SEC_PKCS5GetPBEAlgorithm
dd rva SEC_PKCS5IsAlgorithmPBEAlg, rva SEC_PKCS5IsAlgorithmPBEAlgTag
dd rva SEC_QuickDERDecodeItem, rva SEC_RegisterDefaultHttpClient
dd rva SEC_SignData, rva SGN_Begin, rva	SGN_CompareDigestInfo
dd rva SGN_CopyDigestInfo, rva SGN_CreateDigestInfo, rva SGN_DestroyContext
dd rva SGN_DestroyDigestInfo, rva SGN_Digest, rva SGN_End
dd rva SGN_NewContext, rva SGN_Update, rva VFY_Begin, rva VFY_CreateContext
dd rva VFY_CreateContextDirect,	rva VFY_CreateContextWithAlgorithmID
dd rva VFY_DestroyContext, rva VFY_End,	rva VFY_EndWithSignature
dd rva VFY_Update, rva VFY_VerifyData, rva VFY_VerifyDataDirect
dd rva VFY_VerifyDataWithAlgorithmID, rva VFY_VerifyDigest
dd rva VFY_VerifyDigestDirect, rva VFY_VerifyDigestWithAlgorithmID
dd rva __CERT_AddTempCertToPerm, rva __PBE_DestroyContext
dd rva __CERT_DecodeDERCertificate, rva	__CERT_NewTempCertificate
dd 2 dup(rva __nss_InitLock), rva __PBE_GenerateBits, rva __PBE_DestroyContext
dd rva __PBE_GenerateBits, rva __PK11_CreateContextByRawKey
dd rva __PK11_GetKeyData, rva __nss_InitLock, rva mktemp
dd rva nss_DumpCertificateCacheInfo
			
dd rva aBtoa_datatoasc,	rva aCert_addcertto, rva aCert_addcert_0 
dd rva aCert_addcert_1,	rva aCert_addextens, rva aCert_addexte_0
dd rva aCert_addocspac,	rva aCert_addokdoma, rva aCert_addrdn
dd rva aCert_alloccert,	rva aCert_asciitona, rva aCert_crlcacher
dd rva aCert_cachecrl, rva aCert_cacheocsp, rva	aCert_certchain
dd rva aCert_certlistf,	rva aCert_certtimes, rva aCert_changecer
dd rva aCert_checkcert,	rva aCert_checkce_0, rva aCert_checkname
dd rva aCert_checkocsp,	rva aCert_clearocsp, rva aCert_comparece
dd rva aCert_comparena,	rva aCert_compareva, rva aCert_completec
dd rva aCert_copyname, rva aCert_copyrdn, rva aCert_createava
dd rva aCert_createcer,	rva aCert_createc_0, rva aCert_createenc
dd rva aCert_createe_0,	rva aCert_createnam, rva aCert_createocs
dd rva aCert_createo_0,	rva aCert_createo_1, rva aCert_createo_2
dd rva aCert_createo_3,	rva aCert_createrdn, rva aCert_createsub
dd rva aCert_createval,	rva aCert_decodeava, rva aCert_decodealt
dd rva aCert_decodeaut,	rva aCert_decodea_0, rva aCert_decodebas
dd rva aCert_decodecrl,	rva aCert_decodecer, rva aCert_decodeder
dd rva aCert_decoded_0,	rva aCert_decodegen, rva aCert_decodenam
dd rva aCert_decodeocs,	rva aCert_decodeo_0, rva aCert_decodeoid
dd rva aCert_decodepri,	rva aCert_decodetru, rva aCert_decodeuse
dd rva aCert_dernameto,	rva aCert_destroyce, rva aCert_destroy_0
dd rva aCert_destroy_1,	rva aCert_destroy_2, rva aCert_destroy_3
dd rva aCert_destroy_4,	rva aCert_destroy_5, rva aCert_destroyna
dd rva aCert_destroyoc,	rva aCert_destroy_6, rva aCert_destroy_7
dd rva aCert_destroyoi,	rva aCert_destroyus, rva aCert_destroyva
dd rva aCert_disableoc,	rva aCert_disable_0, rva aCert_distnames
dd rva aCert_dupcertli,	rva aCert_dupcertif, rva aCert_dupdistna
dd rva aCert_enableocs,	rva aCert_enableo_0, rva aCert_encodealt
dd rva aCert_encodeand,	rva aCert_encodeaut, rva aCert_encodebas
dd rva aCert_encodecrl,	rva aCert_encodecer, rva aCert_encodegen
dd rva aCert_encodeinf,	rva aCert_encodeinh, rva aCert_encodenam
dd rva aCert_encodenot,	rva aCert_encodeocs, rva aCert_encodepol
dd rva aCert_encodep_0,	rva aCert_encodesub, rva aCert_encodeuse
dd rva aCert_extractpu,	rva aCert_filtercer, rva aCert_filterc_0
dd rva aCert_filterc_1,	rva aCert_findcrlen, rva aCert_findcrlnu
dd rva aCert_findcertb,	rva aCert_findcer_0, rva aCert_findcer_1
dd rva aCert_findcer_2,	rva aCert_findcer_3, rva aCert_findcer_4
dd rva aCert_findcer_5,	rva aCert_findcerte, rva aCert_findcerti
dd rva aCert_findkeyus,	rva aCert_findnamec, rva aCert_findsmime
dd rva aCert_findsubje,	rva aCert_finduserc, rva aCert_finduse_0
dd rva aCert_finishcer,	rva aCert_finishext, rva aCert_forcepost
dd rva aCert_formatnam,	rva aCert_freedistn, rva aCert_freenickn
dd rva aCert_gentime2f,	rva aCert_getavatag, rva aCert_getcertch
dd rva aCert_getcertem,	rva aCert_getcertis, rva aCert_getcertni
dd rva aCert_getcertti,	rva aCert_getcerttr, rva aCert_getcertui
dd rva aCert_getcertif,	rva aCert_getcert_0, rva aCert_getclassi
dd rva aCert_getclas_0,	rva aCert_getclas_1, rva aCert_getcommon
dd rva aCert_getconstr,	rva aCert_getcountr, rva aCert_getdbcont
dd rva aCert_getdefaul,	rva aCert_getdomain, rva aCert_getencode
dd rva aCert_getfirste,	rva aCert_getgenera, rva aCert_getlocali
dd rva aCert_getnextem,	rva aCert_getnextge, rva aCert_getnextna
dd rva aCert_getocspau,	rva aCert_getocspre, rva aCert_getocspst
dd rva aCert_getoidstr,	rva aCert_getorgnam, rva aCert_getorguni
dd rva aCert_getpkixve,	rva aCert_getprevge, rva aCert_getprevna
dd rva aCert_getsslcac,	rva aCert_getslopti, rva aCert_getstaten
dd rva aCert_getsubjec,	rva aCert_getsubj_0, rva aCert_getusepki
dd rva aCert_getvalidd,	rva aCert_hexify, rva aCert_importcac
dd rva aCert_importc_0,	rva aCert_importcrl, rva aCert_importcer
dd rva aCert_iscacert, rva aCert_iscaderce, rva	aCert_isrootder
dd rva aCert_isusercer,	rva aCert_keyfromde, rva aCert_makecanic
dd rva aCert_mergeexte,	rva aCert_nametoasc, rva aCert_nametoa_0
dd rva aCert_newcertli,	rva aCert_newtempce, rva aCert_nicknames
dd rva aCert_ocspcache,	rva aCert_opencertd, rva aCert_pkixverif
dd rva aCert_postocspr,	rva aCert_rfc1485_e, rva aCert_registera
dd rva aCert_removecer,	rva aCert_savesmime, rva aCert_setocspde
dd rva aCert_setocspfa,	rva aCert_setocspti, rva aCert_setslopti
dd rva aCert_setusepki,	rva aCert_startcrle, rva aCert_startcr_0
dd rva aCert_startcert,	rva aCert_startce_0, rva aCert_uncachecr
dd rva aCert_verifycac,	rva aCert_verifycer, rva aCert_verifyc_0
dd rva aCert_verifyc_1,	rva aCert_verifyc_2, rva aCert_verifyc_3
dd rva aCert_verifyocs,	rva aCert_verifysig, rva aCert_verifys_0
dd rva aCert_verifys_1,	rva aDer_asciitotim, rva aDer_decodetime
dd rva aDer_encode, rva	aDer_encodetime, rva aDer_generalize
dd rva aDer_generali_0,	rva aDer_getinteger, rva aDer_lengths
dd rva aDer_timechoice,	rva aDer_timetogene, rva aDer_timetoge_0
dd rva aDer_timetoutct,	rva aDer_utcdaytoas, rva aDer_utctimetoa
dd rva aDer_utctimetot,	rva aDsau_decodeder, rva aDsau_decoded_0
dd rva aDsau_encodeder,	rva aDsau_encoded_0, rva aHash_begin
dd rva aHash_clone, rva	aHash_create, rva aHash_destroy
dd rva aHash_end, rva aHash_gethashob, rva aHash_gethash_0
dd rva aHash_gethashty,	rva aHash_gettype, rva aHash_hashbuf
dd rva aHash_resultlen,	rva aHash_resultl_0, rva aHash_resultl_1
dd rva aHash_update, rva aNssbase64decod, rva aNssbase64dec_0
dd rva aNssbase64dec_1,	rva aNssbase64encod, rva aNssbase64enc_0
dd rva aNssbase64enc_1,	rva aNssbase64_deco, rva aNssbase64_enco
dd rva aNssrwlock_dest,	rva aNssrwlock_have, rva aNssrwlock_lock
dd rva aNssrwlock_lo_0,	rva aNssrwlock_new, rva	aNssrwlock_unlo
dd rva aNssrwlock_un_0,	rva aNss_getversion, rva aNss_get_cert_c
dd rva aNss_get_cert_0,	rva aNss_get_cert_1, rva aNss_get_cert_i
dd rva aNss_get_cert_n,	rva aNss_get_cert_s, rva aNss_get_cert_2
dd rva aNss_get_cert_3,	rva aNss_get_cert_4, rva aNss_get_cert_5
dd rva aNss_get_cert_t,	rva aNss_get_seckey, rva aNss_get_seck_0
dd rva aNss_get_seck_1,	rva aNss_get_seck_2, rva aNss_get_seck_3
dd rva aNss_get_seck_4,	rva aNss_get_seck_5, rva aNss_get_secoid
dd rva aNss_get_sec_an,	rva aNss_get_sec_bm, rva aNss_get_sec_bi
dd rva aNss_get_sec_bo,	rva aNss_get_sec_ge, rva aNss_get_sec_ia
dd rva aNss_get_sec_in,	rva aNss_get_sec_nu, rva aNss_get_sec_ob
dd rva aNss_get_sec_oc,	rva aNss_get_sec_po, rva aNss_get_sec__0
dd rva aNss_get_sec_se,	rva aNss_get_sec_si, rva aNss_get_sec_ut
dd rva aNss_get_sec__1,	rva aNss_get_sgn_di, rva aNss_init
dd rva aNss_initcontex,	rva aNss_initreadwr, rva aNss_initwithme
dd rva aNss_initialize,	rva aNss_isinitiali, rva aNss_nodb_init
dd rva aNss_putenv, rva	aNss_registersh, rva aNss_shutdown
dd rva aNss_shutdownco,	rva aNss_unregister, rva aNss_versionche
dd rva aPbe_createcont,	rva aPbe_destroycon, rva aPbe_generatebi
dd rva aPk11sdr_decryp,	rva aPk11sdr_encryp, rva aPk11_algtagtom
dd rva aPk11_authentic,	rva aPk11_blockdata, rva aPk11_changepw
dd rva aPk11_checkssop,	rva aPk11_checkuser, rva aPk11_cipherop
dd rva aPk11_clonecont,	rva aPk11_configure, rva aPk11_convertse
dd rva aPk11_convert_0,	rva aPk11_copysymke, rva aPk11_copytoken
dd rva aPk11_createcon,	rva aPk11_createdig, rva aPk11_creategen
dd rva aPk11_createmer,	rva aPk11_createpbe, rva aPk11_createp_0
dd rva aPk11_createp_1,	rva aPk11_derencode, rva aPk11_decrypt
dd rva aPk11_deletetok,	rva aPk11_deletet_0, rva aPk11_deletet_1
dd rva aPk11_deletet_2,	rva aPk11_derive, rva aPk11_derivewit
dd rva aPk11_derivew_0,	rva aPk11_derivew_1, rva aPk11_destroyco
dd rva aPk11_destroyge,	rva aPk11_destroy_0, rva aPk11_destroyme
dd rva aPk11_destroyob,	rva aPk11_destroypb, rva aPk11_destroyto
dd rva aPk11_digestbeg,	rva aPk11_digestfin, rva aPk11_digestkey
dd rva aPk11_digestop, rva aPk11_doesmecha, rva	aPk11_encrypt
dd rva aPk11_exportder,	rva aPk11_exportenc, rva aPk11_exporte_0
dd rva aPk11_exportpri,	rva aPk11_exportp_0, rva aPk11_extractke
dd rva aPk11_finalize, rva aPk11_findbestk, rva	aPk11_findcerta
dd rva aPk11_findcer_0,	rva aPk11_findcertb, rva aPk11_findcertf
dd rva aPk11_findcer_1,	rva aPk11_findcer_2, rva aPk11_findcerti
dd rva aPk11_findcerts,	rva aPk11_findcer_3, rva aPk11_findfixed
dd rva aPk11_findgener,	rva aPk11_findkeyby, rva aPk11_findkey_0
dd rva aPk11_findkey_1,	rva aPk11_findpriva, rva aPk11_findslotb
dd rva aPk11_findslots,	rva aPk11_fortezzah, rva aPk11_fortezzam
dd rva aPk11_freeslot, rva aPk11_freeslotl, rva	aPk11_freeslo_0
dd rva aPk11_freesymke,	rva aPk11_generatef, rva aPk11_generatek
dd rva aPk11_generat_0,	rva aPk11_generat_1, rva aPk11_generaten
dd rva aPk11_generater,	rva aPk11_generat_2, rva aPk11_getallslo
dd rva aPk11_getalltok,	rva aPk11_getbestke, rva aPk11_getbestsl
dd rva aPk11_getbest_0,	rva aPk11_getbest_1, rva aPk11_getbest_2
dd rva aPk11_getbestwr,	rva aPk11_getblocks, rva aPk11_getcertfr
dd rva aPk11_getcurren,	rva aPk11_getdefaul, rva aPk11_getdefa_0
dd rva aPk11_getdisabl,	rva aPk11_getfirsts, rva aPk11_getivleng
dd rva aPk11_getintern,	rva aPk11_getinte_0, rva aPk11_getkeydat
dd rva aPk11_getkeygen,	rva aPk11_getkeylen, rva aPk11_getkeystr
dd rva aPk11_getkeytyp,	rva aPk11_getlowlev, rva aPk11_getlowl_0
dd rva aPk11_getmechan,	rva aPk11_getminimu, rva aPk11_getmodinf
dd rva aPk11_getmodule,	rva aPk11_getmodu_0, rva aPk11_getnextge
dd rva aPk11_getnextsa,	rva aPk11_getnextsy, rva aPk11_getpbecry
dd rva aPk11_getpbeiv, rva aPk11_getpqgpar, rva	aPk11_getpadmec
dd rva aPk11_getprevge,	rva aPk11_getprivat, rva aPk11_getpriv_0
dd rva aPk11_getpublic,	rva aPk11_getslotfr, rva aPk11_getslot_0
dd rva aPk11_getslotid,	rva aPk11_getslotin, rva aPk11_getslotna
dd rva aPk11_getslotpw,	rva aPk11_getslotse, rva aPk11_getsymkey
dd rva aPk11_getsymk_0,	rva aPk11_getsymk_1, rva aPk11_getsymk_2
dd rva aPk11_gettokeni,	rva aPk11_gettokenn, rva aPk11_getwindow
dd rva aPk11_getwrapke,	rva aPk11_hasrootce, rva aPk11_hashbuf
dd rva aPk11_ivfrompar,	rva aPk11_importcrl, rva aPk11_importcer
dd rva aPk11_importc_0,	rva aPk11_importc_1, rva aPk11_importder
dd rva aPk11_importd_0,	rva aPk11_importd_1, rva aPk11_importd_2
dd rva aPk11_importenc,	rva aPk11_importe_0, rva aPk11_importpri
dd rva aPk11_importp_0,	rva aPk11_importpub, rva aPk11_importsym
dd rva aPk11_imports_0,	rva aPk11_initpin, rva aPk11_isdisable
dd rva aPk11_isfips, rva aPk11_isfriendl, rva aPk11_ishw
dd rva aPk11_isinterna,	rva aPk11_isinter_0, rva aPk11_isloggedi
dd rva aPk11_ispresent,	rva aPk11_isreadonl, rva aPk11_isremovab
dd rva aPk11_keyforcer,	rva aPk11_keyforder, rva aPk11_keygen
dd rva aPk11_keygenwit,	rva aPk11_linkgener, rva aPk11_listcerts
dd rva aPk11_listcer_0,	rva aPk11_listfixed, rva aPk11_listprivk
dd rva aPk11_listpriva,	rva aPk11_listpubli, rva aPk11_loadprivk
dd rva aPk11_logout, rva aPk11_logoutall, rva aPk11_makeidfro
dd rva aPk11_makekeapu,	rva aPk11_mappbemec, rva aPk11_mapsignke
dd rva aPk11_mechanism,	rva aPk11_mergetoke, rva aPk11_movesymke
dd rva aPk11_needlogin,	rva aPk11_needpwini, rva aPk11_needuseri
dd rva aPk11_pbekeygen,	rva aPk11_pqg_destr, rva aPk11_pqg_des_0
dd rva aPk11_pqg_getba,	rva aPk11_pqg_getco, rva aPk11_pqg_gethf
dd rva aPk11_pqg_getpr,	rva aPk11_pqg_getse, rva aPk11_pqg_getsu
dd rva aPk11_pqg_newpa,	rva aPk11_pqg_newve, rva aPk11_pqg_param
dd rva aPk11_pqg_par_0,	rva aPk11_pqg_par_1, rva aPk11_pqg_verif
dd rva aPk11_paramfrom,	rva aPk11_paramfr_0, rva aPk11_paramtoal
dd rva aPk11_privdecry,	rva aPk11_privdec_0, rva aPk11_protected
dd rva aPk11_pubdecryp,	rva aPk11_pubderive, rva aPk11_pubderi_0
dd rva aPk11_pubencryp,	rva aPk11_pubencr_0, rva aPk11_pubencr_1
dd rva aPk11_pubunwrap,	rva aPk11_pubunwr_0, rva aPk11_pubunwr_1
dd rva aPk11_pubwrapsy,	rva aPk11_randomupd, rva aPk11_rawpbekey
dd rva aPk11_readrawat,	rva aPk11_reference, rva aPk11_referen_0
dd rva aPk11_resettoke,	rva aPk11_restoreco, rva aPk11_saveconte
dd rva aPk11_savecon_0,	rva aPk11_seedrando, rva aPk11_setfortez
dd rva aPk11_setpasswo,	rva aPk11_setprivat, rva aPk11_setpublic
dd rva aPk11_setslotpw,	rva aPk11_setsymkey, rva aPk11_setsymk_0
dd rva aPk11_setwrapke,	rva aPk11_sign,	rva aPk11_signwiths
dd rva aPk11_signature,	rva aPk11_symkeyfro, rva aPk11_tokenexis
dd rva aPk11_tokenkeyg,	rva aPk11_tokenke_0, rva aPk11_tokenrefr
dd rva aPk11_traversec,	rva aPk11_travers_0, rva aPk11_traverses
dd rva aPk11_unconfigu,	rva aPk11_unlinkgen, rva aPk11_unwrappri
dd rva aPk11_unwrapsym,	rva aPk11_unwraps_0, rva aPk11_unwraps_1
dd rva aPk11_updateslo,	rva aPk11_userdisab, rva aPk11_userenabl
dd rva aPk11_verify, rva aPk11_verifykey, rva aPk11_verifyrec
dd rva aPk11_waitforto,	rva aPk11_wrapprivk, rva aPk11_wrapsymke
dd rva aPk11_writerawa,	rva aPort_alloc, rva aPort_arenaallo
dd rva aPort_arenagrow,	rva aPort_arenamark, rva aPort_arenarele
dd rva aPort_arenastrd,	rva aPort_arenaunma, rva aPort_arenazall
dd rva aPort_free, rva aPort_freearena,	rva aPort_geterror
dd rva aPort_newarena, rva aPort_realloc, rva aPort_seterror
dd rva aPort_setucs2_a,	rva aPort_setucs2_u, rva aPort_setucs4_u
dd rva aPort_strdup, rva aPort_ucs2_asci, rva aPort_ucs2_utf8
dd rva aPort_zalloc, rva aPort_zfree, rva aRsa_formatbloc
dd rva aSecitem_alloci,	rva aSecitem_arenad, rva aSecitem_compar
dd rva aSecitem_copyit,	rva aSecitem_dupite, rva aSecitem_freeit
dd rva aSecitem_itemsa,	rva aSecitem_zfreei, rva aSeckey_addpriv
dd rva aSeckey_cachest,	rva aSeckey_convert, rva aSeckey_copyenc
dd rva aSeckey_copypri,	rva aSeckey_copyp_0, rva aSeckey_copypub
dd rva aSeckey_copysub,	rva aSeckey_created, rva aSeckey_createe
dd rva aSeckey_creater,	rva aSeckey_creates, rva aSeckey_decoded
dd rva aSeckey_destroy,	rva aSeckey_destr_0, rva aSeckey_destr_1
dd rva aSeckey_destr_2,	rva aSeckey_destr_3, rva aSeckey_destr_4
dd rva aSeckey_destr_5,	rva aSeckey_ecparam, rva aSeckey_ecpar_0
dd rva aSeckey_encoded,	rva aSeckey_extract, rva aSeckey_getpriv
dd rva aSeckey_getpubl,	rva aSeckey_hashpas, rva aSeckey_importd
dd rva aSeckey_newpriv,	rva aSeckey_publick, rva aSeckey_publi_0
dd rva aSeckey_removep,	rva aSeckey_signatu, rva aSeckey_updatec
dd rva aSecmod_addnewm,	rva aSecmod_addne_0, rva aSecmod_candele
dd rva aSecmod_cancelw,	rva aSecmod_closeus, rva aSecmod_createm
dd rva aSecmod_deletei,	rva aSecmod_deletem, rva aSecmod_delet_0
dd rva aSecmod_destroy,	rva aSecmod_findmod, rva aSecmod_findslo
dd rva aSecmod_freemod,	rva aSecmod_getdbmo, rva aSecmod_getdead
dd rva aSecmod_getdefa,	rva aSecmod_getde_0, rva aSecmod_getde_1
dd rva aSecmod_getinte,	rva aSecmod_getmodu, rva aSecmod_getread
dd rva aSecmod_getskip,	rva aSecmod_hasremo, rva aSecmod_hasroot
dd rva aSecmod_interna,	rva aSecmod_ismodul, rva aSecmod_loadmod
dd rva aSecmod_loaduse,	rva aSecmod_lookups, rva aSecmod_opennew
dd rva aSecmod_openuse,	rva aSecmod_pubciph, rva aSecmod_pubmech
dd rva aSecmod_referen,	rva aSecmod_release, rva aSecmod_restart
dd rva aSecmod_unloadu,	rva aSecmod_updatem, rva aSecmod_updates
dd rva aSecmod_waitfor,	rva aSecoid_addentr, rva aSecoid_compare
dd rva aSecoid_copyalg,	rva aSecoid_destroy, rva aSecoid_findoid
dd rva aSecoid_findo_0,	rva aSecoid_findo_1, rva aSecoid_findo_2
dd rva aSecoid_getalgo,	rva aSecoid_setalgo, rva aSec_asn1decode
dd rva aSec_asn1deco_0,	rva aSec_asn1deco_1, rva aSec_asn1deco_2
dd rva aSec_asn1deco_3,	rva aSec_asn1deco_4, rva aSec_asn1deco_5
dd rva aSec_asn1deco_6,	rva aSec_asn1deco_7, rva aSec_asn1deco_8
dd rva aSec_asn1deco_9,	rva aSec_asn1encode, rva aSec_asn1enco_0
dd rva aSec_asn1enco_1,	rva aSec_asn1enco_2, rva aSec_asn1enco_3
dd rva aSec_asn1enco_4,	rva aSec_asn1enco_5, rva aSec_asn1enco_6
dd rva aSec_asn1enco_7,	rva aSec_asn1enco_8, rva aSec_asn1enco_9
dd rva aSec_asn1enc_10,	rva aSec_asn1enc_11, rva aSec_asn1enc_12
dd rva aSec_asn1length,	rva aSec_certnickna, rva aSec_deleteperm
dd rva aSec_deletepe_0,	rva aSec_dersigndat, rva aSec_destroycrl
dd rva aSec_dupcrl, rva	aSec_findcrlbyd, rva aSec_findcrlbyn
dd rva aSec_getregiste,	rva aSec_getsignatu, rva aSec_lookupcrls
dd rva aSec_newcrl, rva	aSec_pkcs5getcr, rva aSec_pkcs5getiv
dd rva aSec_pkcs5getke,	rva aSec_pkcs5getpb, rva aSec_pkcs5isalg
dd rva aSec_pkcs5isa_0,	rva aSec_quickderde, rva aSec_registerde
dd rva aSec_signdata, rva aSgn_begin, rva aSgn_comparedig
dd rva aSgn_copydigest,	rva aSgn_createdige, rva aSgn_destroycon
dd rva aSgn_destroydig,	rva aSgn_digest, rva aSgn_end
dd rva aSgn_newcontext,	rva aSgn_update, rva aVfy_begin
dd rva aVfy_createcont,	rva aVfy_createco_0, rva aVfy_createco_1
dd rva aVfy_destroycon,	rva aVfy_end, rva aVfy_endwithsig
dd rva aVfy_update, rva	aVfy_verifydata, rva aVfy_verifyda_0
dd rva aVfy_verifyda_1,	rva aVfy_verifydige, rva aVfy_verifydi_0
dd rva aVfy_verifydi_1,	rva a__cert_addtemp, rva a__cert_closepe
dd rva a__cert_decoded,	rva a__cert_newtemp, rva a__cert_travers
dd rva a__cert_trave_0,	rva a__pbe_createco, rva a__pbe_destroyc
dd rva a__pbe_generate,	rva a__pk11_createc, rva a__pk11_getkeyd
dd rva a__nss_initlock,	rva aMktemp, rva aNss_dumpcertif
			
dw 0Fh,	10h, 11h, 12h, 13h, 14h, 15h, 16h, 17h,	18h, 19h
dw 1Ah,	1Bh, 1Ch, 1Dh, 1Eh, 1Fh, 20h, 21h, 22h,	23h, 24h
dw 25h,	26h, 27h, 28h, 29h, 2Ah, 2Bh, 2Ch, 2Dh,	2Eh, 2Fh
dw 30h,	31h, 32h, 33h, 34h, 35h, 36h, 37h, 38h,	39h, 3Ah
dw 3Bh,	3Ch, 3Dh, 3Eh, 3Fh, 40h, 41h, 42h, 43h,	44h, 45h
dw 46h,	47h, 48h, 49h, 4Ah, 4Bh, 4Ch, 4Dh, 4Eh,	4Fh, 50h
dw 51h,	52h, 53h, 54h, 55h, 56h, 57h, 58h, 59h,	5Ah, 5Bh
dw 5Ch,	5Dh, 5Eh, 5Fh, 60h, 61h, 62h, 63h, 64h,	65h, 66h
dw 67h,	68h, 69h, 6Ah, 6Bh, 6Ch, 6Dh, 6Eh, 6Fh,	70h, 71h
dw 72h,	73h, 74h, 75h, 76h, 77h, 78h, 79h, 7Ah,	7Bh, 7Ch
dw 7Dh,	7Eh, 7Fh, 80h, 81h, 82h, 83h, 84h, 85h,	86h, 87h
dw 88h,	89h, 8Ah, 8Bh, 8Ch, 8Dh, 8Eh, 8Fh, 90h,	91h, 92h
dw 93h,	94h, 95h, 96h, 97h, 98h, 99h, 9Ah, 9Bh,	9Ch, 9Dh
dw 9Eh,	9Fh, 0A0h, 0A1h, 0A2h, 0A3h, 0A4h, 0A5h, 0A6h
dw 0A7h, 0A8h, 0A9h, 0AAh, 0ABh, 0ACh, 0ADh, 0AEh, 0AFh
dw 0B0h, 0B1h, 0B2h, 0B3h, 0B4h, 0B5h, 0B6h, 0B7h, 0B8h
dw 0B9h, 0BAh, 0BBh, 0BCh, 0BDh, 0BEh, 0BFh, 0C0h, 0C1h
dw 0C2h, 0C3h, 0C4h, 0C5h, 0C6h, 0C7h, 0C8h, 0C9h, 0CAh
dw 0CBh, 0CCh, 0CDh, 0CEh, 0CFh, 0D0h, 0D1h, 0D2h, 0D3h
dw 0D4h, 0D5h, 0D6h, 0D7h, 0D8h, 0D9h, 0DAh, 0DBh, 0DCh
dw 0DDh, 0DEh, 0DFh, 0E0h, 0E1h, 0E2h, 0E3h, 0E4h, 0E5h
dw 0E6h, 0E7h, 0E8h, 0E9h, 0EAh, 0EBh, 0ECh, 0EDh, 0EEh
dw 0EFh, 0F0h, 0F1h, 0F2h, 0F3h, 0F4h, 0F5h, 0F6h, 0F7h
dw 0F8h, 0F9h, 0FAh, 0FBh, 0FCh, 0FDh, 0FEh, 0FFh, 100h
dw 101h, 102h, 103h, 104h, 105h, 106h, 107h, 108h, 109h
dw 10Ah, 10Bh, 10Ch, 10Dh, 10Eh, 10Fh, 110h, 111h, 112h
dw 113h, 114h, 115h, 116h, 117h, 118h, 119h, 11Ah, 11Bh
dw 11Ch, 11Dh, 11Eh, 11Fh, 120h, 121h, 122h, 123h, 124h
dw 125h, 126h, 127h, 128h, 129h, 12Ah, 12Bh, 12Ch, 12Dh
dw 12Eh, 12Fh, 130h, 131h, 132h, 133h, 134h, 135h, 136h
dw 137h, 138h, 139h, 13Ah, 13Bh, 13Ch, 13Dh, 13Eh, 13Fh
dw 140h, 141h, 142h, 143h, 144h, 145h, 146h, 147h, 148h
dw 149h, 14Ah, 14Bh, 14Ch, 14Dh, 14Eh, 14Fh, 150h, 151h
dw 152h, 153h, 154h, 155h, 156h, 157h, 158h, 159h, 15Ah
dw 15Bh, 15Ch, 15Dh, 15Eh, 15Fh, 160h, 161h, 162h, 163h
dw 164h, 165h, 166h, 167h, 168h, 169h, 16Ah, 16Bh, 16Ch
dw 16Dh, 16Eh, 16Fh, 170h, 171h, 172h, 173h, 174h, 175h
dw 176h, 177h, 178h, 179h, 17Ah, 17Bh, 17Ch, 17Dh, 17Eh
dw 17Fh, 180h, 181h, 182h, 183h, 184h, 185h, 186h, 187h
dw 188h, 189h, 18Ah, 18Bh, 18Ch, 18Dh, 18Eh, 18Fh, 190h
dw 191h, 192h, 193h, 194h, 195h, 196h, 197h, 198h, 199h
dw 19Ah, 19Bh, 19Ch, 19Dh, 19Eh, 19Fh, 1A0h, 1A1h, 1A2h
dw 1A3h, 1A4h, 1A5h, 1A6h, 1A7h, 1A8h, 1A9h, 1AAh, 1ABh
dw 1ACh, 1ADh, 1AEh, 1AFh, 1B0h, 1B1h, 1B2h, 1B3h, 1B4h
dw 1B5h, 1B6h, 1B7h, 1B8h, 1B9h, 1BAh, 1BBh, 1BCh, 1BDh
dw 1BEh, 1BFh, 1C0h, 1C1h, 1C2h, 1C3h, 1C4h, 1C5h, 1C6h
dw 1C7h, 1C8h, 1C9h, 1CAh, 1CBh, 1CCh, 1CDh, 1CEh, 1CFh
dw 1D0h, 1D1h, 1D2h, 1D3h, 1D4h, 1D5h, 1D6h, 1D7h, 1D8h
dw 1D9h, 1DAh, 1DBh, 1DCh, 1DDh, 1DEh, 1DFh, 1E0h, 1E1h
dw 1E2h, 1E3h, 1E4h, 1E5h, 1E6h, 1E7h, 1E8h, 1E9h, 1EAh
dw 1EBh, 1ECh, 1EDh, 1EEh, 1EFh, 1F0h, 1F1h, 1F2h, 1F3h
dw 1F4h, 1F5h, 1F6h, 1F7h, 1F8h, 1F9h, 1FAh, 1FBh, 1FCh
dw 1FDh, 1FEh, 1FFh, 200h, 201h, 202h, 203h, 204h, 205h
dw 206h, 207h, 208h, 209h, 20Ah, 20Bh, 20Ch, 20Dh, 20Eh
dw 20Fh, 210h, 211h, 212h, 213h, 214h, 215h, 216h, 217h
dw 218h, 219h, 21Ah, 21Bh, 21Ch, 21Dh, 21Eh, 21Fh, 220h
dw 221h, 222h, 223h, 224h, 225h, 226h, 227h, 228h, 229h
dw 22Ah, 22Bh, 22Ch, 22Dh, 22Eh, 22Fh, 230h, 231h, 232h
dw 233h, 234h, 235h, 236h, 237h, 238h, 239h, 23Ah, 23Bh
dw 23Ch, 23Dh, 23Eh, 23Fh, 240h, 241h, 242h, 243h, 244h
dw 245h, 246h, 247h, 248h, 249h, 24Ah, 24Bh, 24Ch, 24Dh
dw 24Eh, 24Fh, 250h, 251h, 252h, 253h, 254h, 255h, 256h
dw 257h, 258h, 259h, 25Ah, 25Bh, 25Ch, 25Dh, 25Eh, 25Fh
dw 260h, 261h, 262h, 263h, 264h, 265h, 266h, 267h, 268h
dw 269h, 26Ah, 26Bh, 26Ch, 26Dh, 26Eh, 26Fh, 270h, 271h
dw 272h, 273h, 274h, 275h, 276h, 277h, 278h, 279h, 27Ah
dw 27Bh, 27Ch, 27Dh, 27Eh, 27Fh, 280h, 281h, 282h, 283h
dw 284h, 285h, 286h, 287h, 288h, 289h, 28Ah, 28Bh, 28Ch
dw 28Dh, 28Eh, 28Fh, 290h, 291h, 292h, 293h, 294h, 295h
dw 296h, 297h, 298h, 299h, 29Ah, 29Bh, 29Ch, 29Dh, 29Eh
dw 29Fh, 2A0h, 2A1h, 2A2h, 2A3h, 2A4h, 2A5h, 2A6h, 2A7h
dw 2A8h, 2A9h, 2AAh, 2ABh, 2ACh, 2ADh, 2AEh, 2AFh, 2B0h
dw 2B1h, 2B2h, 2B3h, 2B4h, 2B5h, 2B6h, 2B7h, 2B8h, 2B9h
dw 2BAh, 2BBh, 2BCh, 2BDh, 2BEh, 2BFh, 2C0h, 2C1h, 2C2h
dw 2C3h, 2C4h, 2C5h, 2C6h, 2C7h, 2C8h, 2C9h, 2CAh, 2CBh
dw 2CCh, 2CDh, 2CEh, 2CFh, 2D0h, 2D1h, 2D2h, 2D3h, 2D4h
dw 2D5h, 2D6h, 2D7h, 2D8h, 2D9h, 2DAh, 2DBh, 2DCh, 2DDh
dw 2DEh, 2DFh, 2E0h, 2E1h, 2E2h, 2E3h, 2E4h, 2E5h, 2E6h
dw 2E7h, 2E8h, 2E9h, 2EAh, 2EBh, 2ECh, 2EDh, 2EEh, 2EFh
dw 2F0h, 2F1h, 2F2h, 2F3h, 2F4h, 2F5h, 2F6h, 2F7h, 2F8h
dw 2F9h, 2FAh, 2FBh, 2FCh, 2FDh, 2FEh, 2FFh, 300h, 301h
dw 302h, 303h, 304h, 305h, 306h, 307h, 308h, 309h, 30Ah
dw 30Bh, 30Ch, 30Dh, 30Eh, 30Fh, 310h, 311h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 800h
assume cs:_data

			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
dd 1, 0
dd 11h,	0
			
dd 18h,	6, 3 dup(0)
dd 500h, 0Ch, 6	dup(0)
			
dd 28h,	800h, 4
dd offset dword_100BA0C0
align 10h
dd 4, 1Ch, 6 dup(0)
dd 30h,	400h, 3	dup(0)
dd 800h, 0Ch
dd offset dword_100BA0C0
align 10h
dd 3, 24h, 6 dup(0)
			
			
align 8
			
			
dd offset aC_initialize	
dd offset aC_finalize	
dd offset aC_getinfo	
dd offset aC_getfunctionl 
dd offset aC_getslotlist 
dd offset aC_getslotinfo 
dd offset aC_gettokeninfo 
dd offset aC_getmechanism 
dd offset aC_getmechani_0 
dd offset aC_inittoken	
dd offset aC_initpin	
dd offset aC_setpin	
dd offset aC_opensession 
dd offset aC_closesession 
dd offset aC_closeallsess 
dd offset aC_getsessionin 
dd offset aC_getoperation 
dd offset aC_setoperation 
dd offset aC_login	
dd offset aC_logout	
dd offset aC_createobject 
dd offset aC_copyobject	
dd offset aC_destroyobjec 
dd offset aC_getobjectsiz 
dd offset aC_getattribute 
dd offset aC_setattribute 
dd offset aC_findobjectsi 
dd offset aC_findobjects 
dd offset aC_findobjectsf 
dd offset aC_encryptinit 
dd offset aC_encrypt	
dd offset aC_encryptupdat 
dd offset aC_encryptfinal 
dd offset aC_decryptinit 
dd offset aC_decrypt	
dd offset aC_decryptupdat 
dd offset aC_decryptfinal 
dd offset aC_digestinit	
dd offset aC_digest	
dd offset aC_digestupdate 
dd offset aC_digestkey	
dd offset aC_digestfinal 
dd offset aC_signinit	
dd offset aC_sign	
dd offset aC_signupdate	
dd offset aC_signfinal	
dd offset aC_signrecoveri 
dd offset aC_signrecover 
dd offset aC_verifyinit	
dd offset aC_verify	
dd offset aC_verifyupdate 
dd offset aC_verifyfinal 
dd offset aC_verifyrecove 
dd offset aC_verifyreco_0 
dd offset aC_digestencryp 
dd offset aC_decryptdiges 
dd offset aC_signencryptu 
dd offset aC_decryptverif 
dd offset aC_generatekey 
dd offset aC_generatekeyp 
dd offset aC_wrapkey	
dd offset aC_unwrapkey_0 
dd offset aC_derivekey	
dd offset aC_seedrandom	
dd offset aC_generaterand 
dd offset aC_getfunctions 
dd offset aC_cancelfuncti 
dd offset aC_waitforslote 
			
			
			
			
			
			
			
			
			
			
dd 321h, 1081h,	551h, 651h, 321h, 121h,	400h, 341h, 311h
dd 301h, 331h, 101h, 141h, 1008h
			
align 10h
			
dd 30h,	4, 3 dup(0)
dd 4800h, 0Ch
dd offset off_100A6478
align 10h
dd 4, 24h, 6 dup(0)
dd 1000000h
			
dd offset dword_100BA5A0
dd 10h
			
			
			
dd offset sub_1003D9D0
dd offset sub_1003D9E0
dd offset sub_1003D9F0
			
dd offset __PBE_DestroyContext
dd offset sub_1003F860
dd offset __PBE_DestroyContext
			
dd 2
dd offset aEmail	
dd 2
dd offset aRfc822	
dd 3
dd offset aDns		
dd 4
dd offset aX400		
dd 4
dd offset aX400addr	
dd 5
dd offset aDirectory	
dd 5
dd offset aDn		
dd 6
dd offset aEdi		
dd 6
dd offset aEdiparty	
dd 7
dd offset aUri		
dd 8
dd offset aIp		
dd 8
dd offset aIpaddr	
dd 9
dd offset aRegisterid	
			
dd offset sub_10050B70
dd offset sub_10050B80
dd offset sub_10050BA0
dd 92h,	93h, 94h, 95h, 96h, 97h, 0
			
dd 53h,	55h, 56h, 5Ch, 3Fh, 0
			
align 8
			
			
dd offset aBasicconstra_0 
dd offset aBigint_0	
dd offset aBuild	
dd offset aBuildresult_0 
dd offset aBytearray_0	
dd offset aCert_0	
dd offset aCertbasiccon_0 
dd offset aCertchainche_0 
dd offset aCertnamecons_1 
dd offset aCertnamecons_0 
dd offset aCertpolicychec 
dd offset aCertpolicyin_0 
dd offset aCertpolicyma_0 
dd offset aCertpolicynode 
dd offset aCertpolicyqu_0 
dd offset aCertselector_0 
dd offset aCertstore_0	
dd offset aCertvfypkix	
dd offset aCollectionce_0 
dd offset aComcertselpa_0 
dd offset aComcrlselpar_0 
dd offset aContext	
dd offset aCrl		
dd offset aCrldp	
dd offset aCrlentry_0	
dd offset aCrlselector_0 
dd offset aCrlchecker_0	
dd offset aDate_0	
dd offset aEkuchecker_0	
dd offset aError_0	
dd offset aFatal	
dd offset aForwardbuild_0 
dd offset aGeneralname_0 
dd offset aHashtable_0	
dd offset aHttpcertstor_0 
dd offset aHttpdefaultc_0 
dd offset aInfoaccess_0	
dd offset aLdapclient	
dd offset aLdapdefaultcli 
dd offset aLdaprequest	
dd offset aLdapresponse	
dd offset aLifecycle	
dd offset aList_0	
dd offset aLogger_0	
dd offset aMem		
dd offset aMonitorlock_0 
dd offset aMutex_0	
dd offset aObject_0	
dd offset aOcspcertid_0	
dd offset aOcspchecker_0 
dd offset aOcsprequest_0 
dd offset aOcspresponse_0 
dd offset aOid		
dd offset aProcessingpa_0 
dd offset aPublickey_0	
dd offset aResourcelimi_0 
dd offset aRevocationmeth 
dd offset aRevocationch_0 
dd offset aRwlock_0	
dd offset aSignatureche_0 
dd offset aSocket_0	
dd offset aString_0	
dd offset aTargetcertch_0 
dd offset aTrustanchor_0 
dd offset aUserdefinedmod 
dd offset aValidate	
dd offset aValidatepara_0 
dd offset aValidateresu_1 
dd offset aVerifynode_0	
dd offset aX500name_0	
dd offset sub_1009BEB0
dd offset sub_1009BEF0
dd offset sub_1009BF20
dd offset sub_1009BF70
dd offset RSA_FormatBlock
dd offset sub_1009BFC0
dd offset sub_1009C020
dd offset sub_1009BEF0
			
			
			
			
			
			
align 10h
			
			
dd 0FFFFFFFFh, 400h, 0FFFFFC01h, 35h, 0Bh, 40h,	3FFh, 80h
dd 0FFFFFF81h, 18h, 8, 20h, 7Fh, 2 dup(0)
dd 4002A000h, 2	dup(0)
dd 4005C800h, 2	dup(0)
dd 4008FA00h, 2	dup(0)
dd 400C9C40h, 2	dup(0)
dd 400FC350h, 2	dup(0)
dd 4012F424h, 0
dd 80000000h, 40169896h, 0
dd 20000000h, 4019BEBCh, 0
dd 0C9BF0400h, 40348E1Bh, 0A1000000h, 1BCECCEDh, 404ED3C2h
dd 0B59EF020h, 0ADA82B70h, 40699DC5h, 25FD5DD0h, 4F8E1AE5h
dd 4083EB19h, 95D79671h, 8D050E43h, 409EAF29h, 44A0BFF9h
dd 8F1281EDh, 40B98281h, 0A6D53CBFh, 1F49FFCFh,	40D3C278h
dd 8CE0C66Fh, 47C980E9h, 41A893BAh, 556B85BCh, 0F78D3927h
dd 427CE070h, 0DE8EDDBCh, 0EBFB9DF9h, 4351AA7Eh, 0E376E6A1h
dd 2F29F2CCh, 44268184h, 0AA171028h, 0E310AEF8h, 44FAC4C5h
dd 0F3D4A7EBh, 4AE1EBF7h, 45CF957Ah, 91C7CC65h,	0A0AEA60Eh
dd 46A3E319h, 0C17650Dh, 75868175h, 4D48C976h, 0A7E44258h
dd 353B3993h, 53EDB2B8h, 5DE5A74Dh, 3B5DC53Dh, 5A929E8Bh
dd 0F0A65DFFh, 54C020A1h, 61378CA5h, 5A8BFDD1h,	5D25D88Bh
dd 67DBF989h, 0F3F895AAh, 0C8A2BF27h, 6E80DD5Dh, 979BC94Ch
dd 52028A20h, 7525C460h, 0
dd 0CCCDCCCDh, 0CCCCCCCCh, 3FFBCCCCh, 0D70A3D71h, 0A3D70A3h
dd 3FF8A3D7h, 0DF3B645Ah, 6E978D4Fh, 3FF58312h,	652CD3C3h
dd 1758E219h, 3FF1D1B7h, 84230FD0h, 0AC471B47h,	3FEEA7C5h
dd 69B6A640h, 0BD05AF6Ch, 3FEB8637h, 42BC3D33h,	94D5E57Ah
dd 3FE7D6BFh, 0CEFDFDC2h, 77118461h, 3FE4ABCCh,	0E15B4C2Fh
dd 94BEC44Dh, 3FC9E695h, 3B53C492h, 14CD4475h, 3FAF9ABEh
dd 94BA67DEh, 1EAD4539h, 3F94CFB1h, 0E2C62324h,	313BBABCh
dd 3F7A8B61h, 0C1595561h, 7C53B17Eh, 3F5FBB12h,	8D2FEED7h
dd 8592BE06h, 3F44FB15h, 0E9A53F24h, 0EA27A539h, 3F2AA87Fh
dd 0E4A1AC7Dh, 467C64BCh, 3E55DDD0h, 0CC067B63h, 83775423h
dd 3D8191FFh, 193AFA91h, 4325637Ah, 3CACC031h, 38D18921h
dd 0B8974782h, 3BD7FD00h, 85888DCh, 0E3E8B11Bh,	3B03A686h
dd 424584C6h, 7599B607h, 3A2EDB37h, 0D21C7133h,	0EE32DB23h
dd 395A9049h, 0C0BE87A6h, 82A5DA57h, 32B5A2A6h,	11B268E2h
dd 449F52A7h, 2C10B759h, 2DE44925h, 534F3436h, 256BCEAEh
dd 0A404598Fh, 7DC2DEC0h, 1EC6E8FBh, 5A88E79Eh,	0BF3C9157h
dd 18228350h, 62654B4Eh, 0AF8F83FDh, 117D9406h,	9FDE2DE4h
dd 4C8D2CEh, 0AD8A6DDh,	7 dup(0)
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
dd ?
			
			
			
			
align 8
			
dd ?
			
align 10h
			
dd ?
			
align 8
			
dd ?
			
align 10h
			
dd ?
			
align 8
			
dd ?
			
align 10h
			
dd ?
			
align 8
			
dd ?
			
align 10h
			
dd ?
			
align 8
			
dd ?
			
align 10h
			
dd ?
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
dd 2 dup(?)
			
			
			
			
			
dd 2 dup(?)
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
align 10h
			
dd ?
dd 10h dup(?)
			
dd 22h dup(?)
align 10h
align 4
align 4
align 4
			
align 10h
align 4
dd 80h dup(?)
			
			
			
dd 5 dup(?)
align 10h
dd 4 dup(?)
align 8
align 10h
dd ?
dd 4 dup(?)
align 8
dd ?
dd 5 dup(?)
align 10h
dd 5 dup(?)
dd ?
align 20h
align 8
dd 5 dup(?)
dd ?
dd 5 dup(?)
dd ?
dd 2 dup(?)
align 10h
			
			
			
			
			
			
			
			
align 800h
end DllEntryPoint

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	2DDF8526C9BBB256289CA8BF11C40510
; Input	CRC32 :	329E28E1

; File Name   :	C:\compspace\Diff\openssl\obj\t_x509a.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CERT_AUX_print
_X509_CERT_AUX_print proc near

var_54		= byte ptr -54h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 54h ; 'T'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+54h+var_4], eax
		push	esi
		mov	esi, [esp+58h+arg_0]
		push	edi
		mov	edi, [esp+5Ch+arg_4]
		test	edi, edi
		jz	loc_200
		cmp	dword ptr [edi], 0
		push	ebx
		push	ebp
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		jz	loc_C0
		mov	ecx, [esp+68h+arg_8]
		mov	bl, 1
		lea	eax, [ecx+2]
		push	eax
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		push	ecx
		push	offset ??_C@_0BF@HIELOFJA@?$CF?$CKsTrusted?5Uses?3?6?$CF?$CKs?$AA@ ; "%*sTrusted Uses:\n%*s"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi]
		xor	ebp, ebp
		call	_sk_num
		add	esp, 1Ch
		test	eax, eax
		jle	short loc_AC

loc_62:					; CODE XREF: _X509_CERT_AUX_print+AAj
		test	bl, bl
		jnz	short loc_76
		push	offset ??_C@_02KEGNLNML@?0?5?$AA@ ; `string'
		push	esi
		call	_BIO_puts
		add	esp, 8
		jmp	short loc_78
; ---------------------------------------------------------------------------

loc_76:					; CODE XREF: _X509_CERT_AUX_print+64j
		xor	bl, bl

loc_78:					; CODE XREF: _X509_CERT_AUX_print+74j
		push	0
		push	ebp
		push	dword ptr [edi]
		call	_sk_value
		add	esp, 8
		push	eax
		lea	eax, [esp+6Ch+var_54]
		push	50h ; 'P'
		push	eax
		call	_OBJ_obj2txt
		lea	eax, [esp+74h+var_54]
		push	eax
		push	esi
		call	_BIO_puts
		push	dword ptr [edi]
		inc	ebp
		call	_sk_num
		add	esp, 1Ch
		cmp	ebp, eax
		jl	short loc_62

loc_AC:					; CODE XREF: _X509_CERT_AUX_print+60j
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_puts
		mov	ebp, [esp+6Ch+arg_8]
		add	esp, 8
		jmp	short loc_D3
; ---------------------------------------------------------------------------

loc_C0:					; CODE XREF: _X509_CERT_AUX_print+31j
		mov	ebp, [esp+68h+arg_8]
		push	ebp
		push	offset ??_C@_0BF@FFIBMJKN@?$CF?$CKsNo?5Trusted?5Uses?4?6?$AA@ ;	"%*sNo Trusted Uses.\n"
		push	esi
		call	_BIO_printf
		add	esp, 10h

loc_D3:					; CODE XREF: _X509_CERT_AUX_print+BEj
		cmp	dword ptr [edi+4], 0
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		jz	loc_170
		lea	eax, [ebp+2]
		mov	bl, 1
		push	eax
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		push	ebp
		push	offset ??_C@_0BG@NDCEOKG@?$CF?$CKsRejected?5Uses?3?6?$CF?$CKs?$AA@ ; "%*sRejected Uses:\n%*s"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+4]
		call	_sk_num
		add	esp, 1Ch
		test	eax, eax
		jle	short loc_160
		xor	ebp, ebp
		nop	word ptr [eax+eax+00h]

loc_110:				; CODE XREF: _X509_CERT_AUX_print+15Aj
		test	bl, bl
		jnz	short loc_124
		push	offset ??_C@_02KEGNLNML@?0?5?$AA@ ; `string'
		push	esi
		call	_BIO_puts
		add	esp, 8
		jmp	short loc_126
; ---------------------------------------------------------------------------

loc_124:				; CODE XREF: _X509_CERT_AUX_print+112j
		xor	bl, bl

loc_126:				; CODE XREF: _X509_CERT_AUX_print+122j
		push	0
		push	ebp
		push	dword ptr [edi+4]
		call	_sk_value
		add	esp, 8
		push	eax
		lea	eax, [esp+6Ch+var_54]
		push	50h ; 'P'
		push	eax
		call	_OBJ_obj2txt
		lea	eax, [esp+74h+var_54]
		push	eax
		push	esi
		call	_BIO_puts
		push	dword ptr [edi+4]
		inc	ebp
		call	_sk_num
		add	esp, 1Ch
		cmp	ebp, eax
		jl	short loc_110
		mov	ebp, [esp+64h+arg_8]

loc_160:				; CODE XREF: _X509_CERT_AUX_print+106j
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_puts
		add	esp, 8
		jmp	short loc_17F
; ---------------------------------------------------------------------------

loc_170:				; CODE XREF: _X509_CERT_AUX_print+DCj
		push	ebp
		push	offset ??_C@_0BG@PFHOLBMC@?$CF?$CKsNo?5Rejected?5Uses?4?6?$AA@ ; "%*sNo	Rejected Uses.\n"
		push	esi
		call	_BIO_printf
		add	esp, 10h

loc_17F:				; CODE XREF: _X509_CERT_AUX_print+16Ej
		mov	eax, [edi+8]
		test	eax, eax
		jz	short loc_19D
		push	dword ptr [eax+8]
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		push	ebp
		push	offset ??_C@_0O@PPOPLKH@?$CF?$CKsAlias?3?5?$CFs?6?$AA@ ; "%*sAlias: %s\n"
		push	esi
		call	_BIO_printf
		add	esp, 14h

loc_19D:				; CODE XREF: _X509_CERT_AUX_print+184j
		cmp	dword ptr [edi+0Ch], 0
		jz	short loc_1FE
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		push	ebp
		push	offset ??_C@_0M@JKLKMBPD@?$CF?$CKsKey?5Id?3?5?$AA@ ; "%*sKey Id: "
		push	esi
		call	_BIO_printf
		mov	eax, [edi+0Ch]
		xor	ebx, ebx
		add	esp, 10h
		cmp	[eax], ebx
		jle	short loc_1EE
		mov	ebp, offset ??_C@_00CNPNBAHC@?$AA@ ; `string'

loc_1C5:				; CODE XREF: _X509_CERT_AUX_print+1ECj
		mov	eax, [eax+8]
		test	ebx, ebx
		movzx	eax, byte ptr [eax+ebx]
		push	eax
		mov	eax, offset ??_C@_01JLIPDDHJ@?3?$AA@ ; ":"
		cmovz	eax, ebp
		push	eax
		push	offset ??_C@_06NOCHPHKC@?$CFs?$CF02X?$AA@ ; "%s%02X"
		push	esi
		call	_BIO_printf
		mov	eax, [edi+0Ch]
		inc	ebx
		add	esp, 10h
		cmp	ebx, [eax]
		jl	short loc_1C5

loc_1EE:				; CODE XREF: _X509_CERT_AUX_print+1BEj
		push	1
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_write
		add	esp, 0Ch

loc_1FE:				; CODE XREF: _X509_CERT_AUX_print+1A1j
		pop	ebp
		pop	ebx

loc_200:				; CODE XREF: _X509_CERT_AUX_print+21j
		mov	ecx, [esp+5Ch+var_4]
		mov	eax, 1
		pop	edi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 54h
		retn
_X509_CERT_AUX_print endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 218h
; COMDAT (pick any)
		public ??_C@_00CNPNBAHC@?$AA@
; `string'
??_C@_00CNPNBAHC@?$AA@ db 0		; DATA XREF: _X509_CERT_AUX_print+2Co
					; _X509_CERT_AUX_print+41o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21Ch
; COMDAT (pick any)
		public ??_C@_0BF@HIELOFJA@?$CF?$CKsTrusted?5Uses?3?6?$CF?$CKs?$AA@
; `string'
??_C@_0BF@HIELOFJA@?$CF?$CKsTrusted?5Uses?3?6?$CF?$CKs?$AA@ db '%*sTrusted Uses:',0Ah
					; DATA XREF: _X509_CERT_AUX_print+47o
		db '%*s',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 234h
; COMDAT (pick any)
		public ??_C@_02KEGNLNML@?0?5?$AA@
; `string'
??_C@_02KEGNLNML@?0?5?$AA@ db 2Ch, 20h,	0 ; DATA XREF: _X509_CERT_AUX_print+66o
					; _X509_CERT_AUX_print+114o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 238h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah, 0	; DATA XREF: _X509_CERT_AUX_print:loc_ACo
					; _X509_CERT_AUX_print:loc_160o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 23Ch
; COMDAT (pick any)
		public ??_C@_0BF@FFIBMJKN@?$CF?$CKsNo?5Trusted?5Uses?4?6?$AA@
; `string'
??_C@_0BF@FFIBMJKN@?$CF?$CKsNo?5Trusted?5Uses?4?6?$AA@ db '%*sNo Trusted Uses.',0Ah,0
					; DATA XREF: _X509_CERT_AUX_print+C5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 254h
; COMDAT (pick any)
		public ??_C@_0BG@NDCEOKG@?$CF?$CKsRejected?5Uses?3?6?$CF?$CKs?$AA@
; `string'
??_C@_0BG@NDCEOKG@?$CF?$CKsRejected?5Uses?3?6?$CF?$CKs?$AA@ db '%*sRejected Uses:',0Ah
					; DATA XREF: _X509_CERT_AUX_print+EEo
		db '%*s',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 26Ch
; COMDAT (pick any)
		public ??_C@_0BG@PFHOLBMC@?$CF?$CKsNo?5Rejected?5Uses?4?6?$AA@
; `string'
??_C@_0BG@PFHOLBMC@?$CF?$CKsNo?5Rejected?5Uses?4?6?$AA@	db '%*sNo Rejected Uses.',0Ah,0
					; DATA XREF: _X509_CERT_AUX_print+171o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 284h
; COMDAT (pick any)
		public ??_C@_0O@PPOPLKH@?$CF?$CKsAlias?3?5?$CFs?6?$AA@
; `string'
??_C@_0O@PPOPLKH@?$CF?$CKsAlias?3?5?$CFs?6?$AA@	db '%*sAlias: %s',0Ah,0
					; DATA XREF: _X509_CERT_AUX_print+18Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 294h
; COMDAT (pick any)
		public ??_C@_0M@JKLKMBPD@?$CF?$CKsKey?5Id?3?5?$AA@
; `string'
??_C@_0M@JKLKMBPD@?$CF?$CKsKey?5Id?3?5?$AA@ db '%*sKey Id: ',0
					; DATA XREF: _X509_CERT_AUX_print+1A9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2A0h
; COMDAT (pick any)
		public ??_C@_01JLIPDDHJ@?3?$AA@
; `string'
??_C@_01JLIPDDHJ@?3?$AA@ db ':',0       ; DATA XREF: _X509_CERT_AUX_print+1CFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2A4h
; COMDAT (pick any)
		public ??_C@_06NOCHPHKC@?$CFs?$CF02X?$AA@
; `string'
??_C@_06NOCHPHKC@?$CFs?$CF02X?$AA@ db '%s%02X',0 ; DATA XREF: _X509_CERT_AUX_print+1D8o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_num:near	; CODE XREF: _X509_CERT_AUX_print+56p
					; _X509_CERT_AUX_print+A0p ...
		extrn _sk_value:near	; CODE XREF: _X509_CERT_AUX_print+7Dp
					; _X509_CERT_AUX_print+12Cp
		extrn _BIO_write:near	; CODE XREF: _X509_CERT_AUX_print+1F6p
		extrn _BIO_puts:near	; CODE XREF: _X509_CERT_AUX_print+6Cp
					; _X509_CERT_AUX_print+98p ...
		extrn _BIO_printf:near	; CODE XREF: _X509_CERT_AUX_print+4Dp
					; _X509_CERT_AUX_print+CBp ...
		extrn _OBJ_obj2txt:near	; CODE XREF: _X509_CERT_AUX_print+8Dp
					; _X509_CERT_AUX_print+13Cp
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _X509_CERT_AUX_print+20Dp
		extrn __chkstk:near	; CODE XREF: _X509_CERT_AUX_print+5p
		extrn ___security_cookie:near ;	DATA XREF: _X509_CERT_AUX_print+Ar


		end

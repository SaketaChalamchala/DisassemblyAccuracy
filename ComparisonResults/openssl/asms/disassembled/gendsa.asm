;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	B7230868C3636258AA06AFB1F2A1180A
; Input	CRC32 :	6F6EC1BE

; File Name   :	C:\compspace\Diff\openssl\obj\gendsa.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _gendsa_main
_gendsa_main	proc near

ErrMsg		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 1Ch
		call	__chkstk
		push	ebx
		xor	eax, eax
		xor	ebx, ebx
		push	ebp
		push	esi
		push	edi
		xor	esi, esi
		mov	[esp+2Ch+var_14], eax
		mov	[esp+2Ch+ErrMsg], eax
		xor	edi, edi
		mov	[esp+2Ch+var_8], eax
		xor	ebp, ebp
		mov	[esp+2Ch+var_C], eax
		mov	[esp+2Ch+var_10], eax
		mov	[esp+2Ch+var_18], eax
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+2Ch+var_4], esi
		test	eax, eax
		jnz	short loc_74
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_74
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_74:					; CODE XREF: _gendsa_main+3Bj
					; _gendsa_main+52j
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_79B
		mov	edi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		dec	edi
		add	ebx, 4
		test	edi, edi
		jle	$bad$141
		nop	dword ptr [eax+eax+00h]

loc_A0:					; CODE XREF: _gendsa_main+4B9j
		mov	esi, [ebx]
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_B0:					; CODE XREF: _gendsa_main+CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_D0
		test	dl, dl
		jz	short loc_CC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_D0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_B0

loc_CC:					; CODE XREF: _gendsa_main+B8j
		xor	eax, eax
		jmp	short loc_D5
; ---------------------------------------------------------------------------

loc_D0:					; CODE XREF: _gendsa_main+B4j
					; _gendsa_main+C0j
		sbb	eax, eax
		or	eax, 1

loc_D5:					; CODE XREF: _gendsa_main+CEj
		test	eax, eax
		jnz	short loc_F6
		dec	edi
		cmp	edi, 1
		jl	$bad$141
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	esi, [esp+2Ch+ErrMsg]
		mov	[esp+2Ch+var_4], eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_F6:					; CODE XREF: _gendsa_main+D7j
		mov	ecx, offset ??_C@_08KCDBEMAI@?9passout?$AA@ ; "-passout"
		mov	eax, esi
		nop	dword ptr [eax]

loc_100:				; CODE XREF: _gendsa_main+11Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_120
		test	dl, dl
		jz	short loc_11C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_120
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_100

loc_11C:				; CODE XREF: _gendsa_main+108j
		xor	eax, eax
		jmp	short loc_125
; ---------------------------------------------------------------------------

loc_120:				; CODE XREF: _gendsa_main+104j
					; _gendsa_main+110j
		sbb	eax, eax
		or	eax, 1

loc_125:				; CODE XREF: _gendsa_main+11Ej
		test	eax, eax
		jnz	short loc_146
		dec	edi
		cmp	edi, 1
		jl	$bad$141
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	esi, [esp+2Ch+ErrMsg]
		mov	[esp+2Ch+var_8], eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_146:				; CODE XREF: _gendsa_main+127j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi
		nop	dword ptr [eax]

loc_150:				; CODE XREF: _gendsa_main+16Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_170
		test	dl, dl
		jz	short loc_16C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_170
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_150

loc_16C:				; CODE XREF: _gendsa_main+158j
		xor	eax, eax
		jmp	short loc_175
; ---------------------------------------------------------------------------

loc_170:				; CODE XREF: _gendsa_main+154j
					; _gendsa_main+160j
		sbb	eax, eax
		or	eax, 1

loc_175:				; CODE XREF: _gendsa_main+16Ej
		test	eax, eax
		jnz	short loc_196
		dec	edi
		cmp	edi, 1
		jl	$bad$141
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	esi, [esp+2Ch+ErrMsg]
		mov	[esp+2Ch+var_18], eax
		jmp	loc_4B3
; ---------------------------------------------------------------------------

loc_196:				; CODE XREF: _gendsa_main+177j
		mov	ecx, offset ??_C@_05LGFPCDPE@?9rand?$AA@ ; "-rand"
		mov	eax, esi
		nop	dword ptr [eax]

loc_1A0:				; CODE XREF: _gendsa_main+1BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1C0
		test	dl, dl
		jz	short loc_1BC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1C0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1A0

loc_1BC:				; CODE XREF: _gendsa_main+1A8j
		xor	eax, eax
		jmp	short loc_1C5
; ---------------------------------------------------------------------------

loc_1C0:				; CODE XREF: _gendsa_main+1A4j
					; _gendsa_main+1B0j
		sbb	eax, eax
		or	eax, 1

loc_1C5:				; CODE XREF: _gendsa_main+1BEj
		test	eax, eax
		jnz	short loc_1E6
		dec	edi
		cmp	edi, 1
		jl	$bad$141
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	esi, [esp+2Ch+ErrMsg]
		mov	[esp+2Ch+var_14], eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_1E6:				; CODE XREF: _gendsa_main+1C7j
		mov	ecx, offset ??_C@_01JOAMLHOP@?9?$AA@ ; `string'
		mov	eax, esi
		nop	dword ptr [eax]

loc_1F0:				; CODE XREF: _gendsa_main+20Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_210
		test	dl, dl
		jz	short loc_20C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_210
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1F0

loc_20C:				; CODE XREF: _gendsa_main+1F8j
		xor	eax, eax
		jmp	short loc_215
; ---------------------------------------------------------------------------

loc_210:				; CODE XREF: _gendsa_main+1F4j
					; _gendsa_main+200j
		sbb	eax, eax
		or	eax, 1

loc_215:				; CODE XREF: _gendsa_main+20Ej
		test	eax, eax
		jz	$bad$141
		mov	ecx, offset ??_C@_04POMGKAPN@?9des?$AA@	; "-des"
		mov	eax, esi

loc_224:				; CODE XREF: _gendsa_main+23Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_244
		test	dl, dl
		jz	short loc_240
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_244
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_224

loc_240:				; CODE XREF: _gendsa_main+22Cj
		xor	eax, eax
		jmp	short loc_249
; ---------------------------------------------------------------------------

loc_244:				; CODE XREF: _gendsa_main+228j
					; _gendsa_main+234j
		sbb	eax, eax
		or	eax, 1

loc_249:				; CODE XREF: _gendsa_main+242j
		test	eax, eax
		jnz	short loc_25D
		call	_EVP_des_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_25D:				; CODE XREF: _gendsa_main+24Bj
		mov	ecx, offset ??_C@_05DHJJCNDB@?9des3?$AA@ ; "-des3"
		mov	eax, esi

loc_264:				; CODE XREF: _gendsa_main+27Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_284
		test	dl, dl
		jz	short loc_280
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_284
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_264

loc_280:				; CODE XREF: _gendsa_main+26Cj
		xor	eax, eax
		jmp	short loc_289
; ---------------------------------------------------------------------------

loc_284:				; CODE XREF: _gendsa_main+268j
					; _gendsa_main+274j
		sbb	eax, eax
		or	eax, 1

loc_289:				; CODE XREF: _gendsa_main+282j
		test	eax, eax
		jnz	short loc_29D
		call	_EVP_des_ede3_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_29D:				; CODE XREF: _gendsa_main+28Bj
		mov	ecx, offset ??_C@_05OHJDGOPB@?9idea?$AA@ ; "-idea"
		mov	eax, esi

loc_2A4:				; CODE XREF: _gendsa_main+2BEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2C4
		test	dl, dl
		jz	short loc_2C0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2C4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2A4

loc_2C0:				; CODE XREF: _gendsa_main+2ACj
		xor	eax, eax
		jmp	short loc_2C9
; ---------------------------------------------------------------------------

loc_2C4:				; CODE XREF: _gendsa_main+2A8j
					; _gendsa_main+2B4j
		sbb	eax, eax
		or	eax, 1

loc_2C9:				; CODE XREF: _gendsa_main+2C2j
		test	eax, eax
		jnz	short loc_2DD
		call	_EVP_idea_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_2DD:				; CODE XREF: _gendsa_main+2CBj
		mov	ecx, offset ??_C@_05IAIHCPC@?9seed?$AA@	; "-seed"
		mov	eax, esi

loc_2E4:				; CODE XREF: _gendsa_main+2FEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_304
		test	dl, dl
		jz	short loc_300
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_304
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2E4

loc_300:				; CODE XREF: _gendsa_main+2ECj
		xor	eax, eax
		jmp	short loc_309
; ---------------------------------------------------------------------------

loc_304:				; CODE XREF: _gendsa_main+2E8j
					; _gendsa_main+2F4j
		sbb	eax, eax
		or	eax, 1

loc_309:				; CODE XREF: _gendsa_main+302j
		test	eax, eax
		jnz	short loc_31D
		call	_EVP_seed_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_31D:				; CODE XREF: _gendsa_main+30Bj
		mov	ecx, offset ??_C@_07ELMDAGHH@?9aes128?$AA@ ; "-aes128"
		mov	eax, esi

loc_324:				; CODE XREF: _gendsa_main+33Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_344
		test	dl, dl
		jz	short loc_340
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_344
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_324

loc_340:				; CODE XREF: _gendsa_main+32Cj
		xor	eax, eax
		jmp	short loc_349
; ---------------------------------------------------------------------------

loc_344:				; CODE XREF: _gendsa_main+328j
					; _gendsa_main+334j
		sbb	eax, eax
		or	eax, 1

loc_349:				; CODE XREF: _gendsa_main+342j
		test	eax, eax
		jnz	short loc_35D
		call	_EVP_aes_128_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_35D:				; CODE XREF: _gendsa_main+34Bj
		mov	ecx, offset ??_C@_07LNHJABBM@?9aes192?$AA@ ; "-aes192"
		mov	eax, esi

loc_364:				; CODE XREF: _gendsa_main+37Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_384
		test	dl, dl
		jz	short loc_380
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_384
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_364

loc_380:				; CODE XREF: _gendsa_main+36Cj
		xor	eax, eax
		jmp	short loc_389
; ---------------------------------------------------------------------------

loc_384:				; CODE XREF: _gendsa_main+368j
					; _gendsa_main+374j
		sbb	eax, eax
		or	eax, 1

loc_389:				; CODE XREF: _gendsa_main+382j
		test	eax, eax
		jnz	short loc_39D
		call	_EVP_aes_192_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_39D:				; CODE XREF: _gendsa_main+38Bj
		mov	ecx, offset ??_C@_07MCLKJCJC@?9aes256?$AA@ ; "-aes256"
		mov	eax, esi

loc_3A4:				; CODE XREF: _gendsa_main+3BEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3C4
		test	dl, dl
		jz	short loc_3C0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3C4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3A4

loc_3C0:				; CODE XREF: _gendsa_main+3ACj
		xor	eax, eax
		jmp	short loc_3C9
; ---------------------------------------------------------------------------

loc_3C4:				; CODE XREF: _gendsa_main+3A8j
					; _gendsa_main+3B4j
		sbb	eax, eax
		or	eax, 1

loc_3C9:				; CODE XREF: _gendsa_main+3C2j
		test	eax, eax
		jnz	short loc_3DD
		call	_EVP_aes_256_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_3DD:				; CODE XREF: _gendsa_main+3CBj
		mov	ecx, offset ??_C@_0N@MALOKPBG@?9camellia128?$AA@ ; "-camellia128"
		mov	eax, esi

loc_3E4:				; CODE XREF: _gendsa_main+3FEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_404
		test	dl, dl
		jz	short loc_400
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_404
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3E4

loc_400:				; CODE XREF: _gendsa_main+3ECj
		xor	eax, eax
		jmp	short loc_409
; ---------------------------------------------------------------------------

loc_404:				; CODE XREF: _gendsa_main+3E8j
					; _gendsa_main+3F4j
		sbb	eax, eax
		or	eax, 1

loc_409:				; CODE XREF: _gendsa_main+402j
		test	eax, eax
		jnz	short loc_41D
		call	_EVP_camellia_128_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	loc_4AF
; ---------------------------------------------------------------------------

loc_41D:				; CODE XREF: _gendsa_main+40Bj
		mov	ecx, offset ??_C@_0N@DGAEKIHN@?9camellia192?$AA@ ; "-camellia192"
		mov	eax, esi

loc_424:				; CODE XREF: _gendsa_main+43Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_444
		test	dl, dl
		jz	short loc_440
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_444
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_424

loc_440:				; CODE XREF: _gendsa_main+42Cj
		xor	eax, eax
		jmp	short loc_449
; ---------------------------------------------------------------------------

loc_444:				; CODE XREF: _gendsa_main+428j
					; _gendsa_main+434j
		sbb	eax, eax
		or	eax, 1

loc_449:				; CODE XREF: _gendsa_main+442j
		test	eax, eax
		jnz	short loc_45A
		call	_EVP_camellia_192_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	short loc_4AF
; ---------------------------------------------------------------------------

loc_45A:				; CODE XREF: _gendsa_main+44Bj
		mov	ecx, offset ??_C@_0N@EJMHDLPD@?9camellia256?$AA@ ; "-camellia256"
		mov	eax, esi

loc_461:				; CODE XREF: _gendsa_main+47Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_481
		test	dl, dl
		jz	short loc_47D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_481
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_461

loc_47D:				; CODE XREF: _gendsa_main+469j
		xor	eax, eax
		jmp	short loc_486
; ---------------------------------------------------------------------------

loc_481:				; CODE XREF: _gendsa_main+465j
					; _gendsa_main+471j
		sbb	eax, eax
		or	eax, 1

loc_486:				; CODE XREF: _gendsa_main+47Fj
		test	eax, eax
		jnz	short loc_497
		call	_EVP_camellia_256_cbc
		mov	esi, [esp+2Ch+ErrMsg]
		mov	ebp, eax
		jmp	short loc_4AF
; ---------------------------------------------------------------------------

loc_497:				; CODE XREF: _gendsa_main+488j
		cmp	byte ptr [esi],	2Dh ; '-'
		jz	$bad$141
		cmp	[esp+2Ch+ErrMsg], 0
		jnz	$bad$141
		mov	[esp+2Ch+ErrMsg], esi

loc_4AF:				; CODE XREF: _gendsa_main+F1j
					; _gendsa_main+141j ...
		mov	eax, [esp+2Ch+var_18]

loc_4B3:				; CODE XREF: _gendsa_main+191j
		dec	edi
		add	ebx, 4
		test	edi, edi
		jg	loc_A0
		test	esi, esi
		jz	$bad$141
		push	0
		push	eax
		push	dword ptr ds:_bio_err
		call	_setup_engine
		lea	eax, [esp+38h+var_C]
		push	eax
		mov	eax, [esp+3Ch+var_8]
		push	0
		push	eax
		push	0
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 20h
		test	eax, eax
		jnz	short loc_50D
		push	offset ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; "Error getting password\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_797
; ---------------------------------------------------------------------------

loc_50D:				; CODE XREF: _gendsa_main+4F3j
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		push	esi
		push	3
		mov	edi, eax
		push	6Ch ; 'l'
		push	edi
		mov	[esp+40h+var_10], edi
		call	_BIO_ctrl
		add	esp, 14h
		test	eax, eax
		jnz	short loc_53F
		push	esi		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		jmp	loc_797
; ---------------------------------------------------------------------------

loc_53F:				; CODE XREF: _gendsa_main+52Ej
		push	0
		push	0
		push	0
		push	edi
		call	_PEM_read_bio_DSAparams
		mov	ebx, eax
		add	esp, 10h
		test	ebx, ebx
		jnz	short loc_56C
		push	offset ??_C@_0CD@MGLINGFB@unable?5to?5load?5DSA?5parameter?5fil@ ; "unable to load DSA parameter file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_799
; ---------------------------------------------------------------------------

loc_56C:				; CODE XREF: _gendsa_main+552j
		push	edi
		call	_BIO_free
		xor	eax, eax
		mov	[esp+30h+var_10], eax
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jz	loc_79B
		mov	esi, [esp+2Ch+var_4]
		test	esi, esi
		jnz	short loc_5E0
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	esi
		push	6Ah ; 'j'
		push	edi
		call	_BIO_ctrl
		add	esp, 14h

loc_5AD:				; CODE XREF: _gendsa_main+5F0j
		push	1
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		add	esp, 0Ch
		test	eax, eax
		mov	eax, [esp+2Ch+var_14]
		jnz	short loc_601
		test	eax, eax
		jnz	short loc_605
		push	offset ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ ; "warning, not much extra random data, co"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short loc_61F
; ---------------------------------------------------------------------------

loc_5E0:				; CODE XREF: _gendsa_main+596j
		push	esi
		push	5
		push	6Ch ; 'l'
		push	edi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_5AD
		push	esi		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		jmp	loc_79B
; ---------------------------------------------------------------------------

loc_601:				; CODE XREF: _gendsa_main+5C5j
		test	eax, eax
		jz	short loc_61F

loc_605:				; CODE XREF: _gendsa_main+5C9j
		push	eax
		call	_app_RAND_load_files
		push	eax
		push	offset ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; "%ld semi-random	bytes loaded\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h

loc_61F:				; CODE XREF: _gendsa_main+5DEj
					; _gendsa_main+603j
		push	dword ptr [ebx+0Ch]
		call	_BN_num_bits
		push	eax
		push	offset ??_C@_0BN@CCBGICPL@Generating?5DSA?5key?0?5?$CFd?5bits?6?$AA@ ; "Generating DSA key, %d bits\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	ebx
		call	_DSA_generate_key
		add	esp, 14h
		test	eax, eax
		jz	loc_79B
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_write_file
		push	[esp+34h+var_C]
		push	0
		push	0
		push	0
		push	ebp
		push	ebx
		push	edi
		call	_PEM_write_bio_DSAPrivateKey
		add	esp, 24h
		test	eax, eax
		jz	loc_79B
		xor	ebp, ebp
		jmp	loc_7BF
; ---------------------------------------------------------------------------

$bad$141:				; CODE XREF: _gendsa_main+95j
					; _gendsa_main+DDj ...
		push	offset ??_C@_0CE@KPGIHDAJ@usage?3?5gendsa?5?$FLargs?$FN?5dsaparam?9fi@ ; "usage: gendsa	[args] dsaparam-file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CH@NPNHIHDF@?5?9out?5file?5?9?5output?5the?5key?5to?5?8@ ; " -out	file - output the key to 'file'\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DN@IDLJKFDO@?5?9des?5?5?5?5?5?5?9?5encrypt?5the?5generat@	; " -des      -	encrypt	the generated key "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EP@OJFINGMB@?5?9des3?5?5?5?5?5?9?5encrypt?5the?5generat@ ; " -des3     - encrypt the generated key "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DO@PGELAIFN@?5?9idea?5?5?5?5?5?9?5encrypt?5the?5generat@ ; " -idea     - encrypt the generated key "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_07KIGMBBIJ@?5?9seed?6?$AA@	; " -seed\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "		   encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; "	-aes128, -aes192, -aes256\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "		   encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ ; " -camellia128, -camellia192, -camellia2"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "		   encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DI@IGMMGMDL@?5?9engine?5e?5?9?5use?5engine?5e?0?5possi@ ;	" -engine e - use engine e, possibly a h"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	3Bh ; ';'
		push	3Bh ; ';'
		push	offset ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; "	-rand file%cfile%c...\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EB@KLOHJNHD@?5?5?5?5?5?5?5?5?5?5?5?9?5load?5the?5file?5?$CIor?5t@	; "	      -	load the file (or the file"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@NBGNPKEI@?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number?5g@ ; "		    the	random number generato"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0BA@OPOOMPOL@?5dsaparam?9file?6?$AA@ ; " dsaparam-file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EI@HGDOGCNC@?5?5?5?5?5?5?5?5?5?5?5?9?5a?5DSA?5parameter?5fil@ ; "		  - a DSA parameter file as ge"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h

loc_797:				; CODE XREF: _gendsa_main+508j
					; _gendsa_main+53Aj
		xor	ebx, ebx

loc_799:				; CODE XREF: _gendsa_main+567j
		xor	edi, edi

loc_79B:				; CODE XREF: _gendsa_main+81j
					; _gendsa_main+58Aj ...
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	eax, [esp+30h+var_10]
		add	esp, 4
		test	eax, eax
		jz	short loc_7BA
		push	eax
		call	_BIO_free
		add	esp, 4

loc_7BA:				; CODE XREF: _gendsa_main+7AFj
		mov	ebp, 1

loc_7BF:				; CODE XREF: _gendsa_main+675j
		test	edi, edi
		jz	short loc_7CC
		push	edi
		call	_BIO_free_all
		add	esp, 4

loc_7CC:				; CODE XREF: _gendsa_main+7C1j
		test	ebx, ebx
		jz	short loc_7D9
		push	ebx
		call	_DSA_free
		add	esp, 4

loc_7D9:				; CODE XREF: _gendsa_main+7CEj
		mov	ecx, [esp+2Ch+var_C]
		test	ecx, ecx
		jz	short loc_7EA
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_7EA:				; CODE XREF: _gendsa_main+7DFj
		pop	edi
		pop	esi
		mov	eax, ebp
		pop	ebp
		pop	ebx
		add	esp, 1Ch
		retn
_gendsa_main	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7F4h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _gendsa_main+A2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7FCh
; COMDAT (pick any)
		public ??_C@_08KCDBEMAI@?9passout?$AA@
; `string'
??_C@_08KCDBEMAI@?9passout?$AA@	db '-passout',0 ; DATA XREF: _gendsa_main:loc_F6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 808h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _gendsa_main:loc_146o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 810h
; COMDAT (pick any)
		public ??_C@_05LGFPCDPE@?9rand?$AA@
; `string'
??_C@_05LGFPCDPE@?9rand?$AA@ db	'-rand',0 ; DATA XREF: _gendsa_main:loc_196o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 818h
; COMDAT (pick any)
		public ??_C@_01JOAMLHOP@?9?$AA@
; `string'
??_C@_01JOAMLHOP@?9?$AA@ db 2Dh, 0	; DATA XREF: _gendsa_main:loc_1E6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 81Ch
; COMDAT (pick any)
		public ??_C@_04POMGKAPN@?9des?$AA@
; `string'
??_C@_04POMGKAPN@?9des?$AA@ db '-des',0 ; DATA XREF: _gendsa_main+21Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 824h
; COMDAT (pick any)
		public ??_C@_05DHJJCNDB@?9des3?$AA@
; `string'
??_C@_05DHJJCNDB@?9des3?$AA@ db	'-des3',0 ; DATA XREF: _gendsa_main:loc_25Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 82Ch
; COMDAT (pick any)
		public ??_C@_05OHJDGOPB@?9idea?$AA@
; `string'
??_C@_05OHJDGOPB@?9idea?$AA@ db	'-idea',0 ; DATA XREF: _gendsa_main:loc_29Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 834h
; COMDAT (pick any)
		public ??_C@_05IAIHCPC@?9seed?$AA@
; `string'
??_C@_05IAIHCPC@?9seed?$AA@ db '-seed',0 ; DATA XREF: _gendsa_main:loc_2DDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 83Ch
; COMDAT (pick any)
		public ??_C@_07ELMDAGHH@?9aes128?$AA@
; `string'
??_C@_07ELMDAGHH@?9aes128?$AA@ db '-aes128',0 ; DATA XREF: _gendsa_main:loc_31Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 844h
; COMDAT (pick any)
		public ??_C@_07LNHJABBM@?9aes192?$AA@
; `string'
??_C@_07LNHJABBM@?9aes192?$AA@ db '-aes192',0 ; DATA XREF: _gendsa_main:loc_35Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84Ch
; COMDAT (pick any)
		public ??_C@_07MCLKJCJC@?9aes256?$AA@
; `string'
??_C@_07MCLKJCJC@?9aes256?$AA@ db '-aes256',0 ; DATA XREF: _gendsa_main:loc_39Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 854h
; COMDAT (pick any)
		public ??_C@_0N@MALOKPBG@?9camellia128?$AA@
; `string'
??_C@_0N@MALOKPBG@?9camellia128?$AA@ db	'-camellia128',0 ; DATA XREF: _gendsa_main:loc_3DDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 864h
; COMDAT (pick any)
		public ??_C@_0N@DGAEKIHN@?9camellia192?$AA@
; `string'
??_C@_0N@DGAEKIHN@?9camellia192?$AA@ db	'-camellia192',0 ; DATA XREF: _gendsa_main:loc_41Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 874h
; COMDAT (pick any)
		public ??_C@_0N@EJMHDLPD@?9camellia256?$AA@
; `string'
??_C@_0N@EJMHDLPD@?9camellia256?$AA@ db	'-camellia256',0 ; DATA XREF: _gendsa_main:loc_45Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 884h
; COMDAT (pick any)
		public ??_C@_0CE@KPGIHDAJ@usage?3?5gendsa?5?$FLargs?$FN?5dsaparam?9fi@
; `string'
??_C@_0CE@KPGIHDAJ@usage?3?5gendsa?5?$FLargs?$FN?5dsaparam?9fi@	db 'usage: gendsa [args] dsaparam-file',0Ah,0
					; DATA XREF: _gendsa_main:$bad$141o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8A8h
; COMDAT (pick any)
		public ??_C@_0CH@NPNHIHDF@?5?9out?5file?5?9?5output?5the?5key?5to?5?8@
; `string'
??_C@_0CH@NPNHIHDF@?5?9out?5file?5?9?5output?5the?5key?5to?5?8@	db ' -out file - output the key to ',27h,'file',27h,0Ah,0
					; DATA XREF: _gendsa_main+68Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8D0h
; COMDAT (pick any)
		public ??_C@_0DN@IDLJKFDO@?5?9des?5?5?5?5?5?5?9?5encrypt?5the?5generat@
; `string'
??_C@_0DN@IDLJKFDO@?5?9des?5?5?5?5?5?5?9?5encrypt?5the?5generat@ db ' -des      - encrypt the generated key with DES in cbc mode',0Ah,0
					; DATA XREF: _gendsa_main+69Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 910h
; COMDAT (pick any)
		public ??_C@_0EP@OJFINGMB@?5?9des3?5?5?5?5?5?9?5encrypt?5the?5generat@
; `string'
??_C@_0EP@OJFINGMB@?5?9des3?5?5?5?5?5?9?5encrypt?5the?5generat@	db ' -des3     - encrypt the generated key with DES in ede cbc mode ('
					; DATA XREF: _gendsa_main+6AAo
		db '168 bit key)',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 960h
; COMDAT (pick any)
		public ??_C@_0DO@PGELAIFN@?5?9idea?5?5?5?5?5?9?5encrypt?5the?5generat@
; `string'
??_C@_0DO@PGELAIFN@?5?9idea?5?5?5?5?5?9?5encrypt?5the?5generat@	db ' -idea     - encrypt the generated key with IDEA in cbc mode',0Ah,0
					; DATA XREF: _gendsa_main+6BAo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9A0h
; COMDAT (pick any)
		public ??_C@_07KIGMBBIJ@?5?9seed?6?$AA@
; `string'
??_C@_07KIGMBBIJ@?5?9seed?6?$AA@ db ' -seed',0Ah,0 ; DATA XREF: _gendsa_main+6CAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9A8h
; COMDAT (pick any)
		public ??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@	db '                 encrypt PEM output with cbc seed',0Ah,0
					; DATA XREF: _gendsa_main+6DAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9DCh
; COMDAT (pick any)
		public ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
; `string'
??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ db	' -aes128, -aes192, -aes256',0Ah,0
					; DATA XREF: _gendsa_main+6EAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9F8h
; COMDAT (pick any)
		public ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@	db '                 encrypt PEM output with cbc aes',0Ah,0
					; DATA XREF: _gendsa_main+6FDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A2Ch
; COMDAT (pick any)
		public ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
; `string'
??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ db ' -camellia128, -camellia192, -camellia256',0Ah,0
					; DATA XREF: _gendsa_main+70Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A58h
; COMDAT (pick any)
		public ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@	db '                 encrypt PEM output with cbc camellia',0Ah,0
					; DATA XREF: _gendsa_main+71Do
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A90h
; COMDAT (pick any)
		public ??_C@_0DI@IGMMGMDL@?5?9engine?5e?5?9?5use?5engine?5e?0?5possi@
; `string'
??_C@_0DI@IGMMGMDL@?5?9engine?5e?5?9?5use?5engine?5e?0?5possi@ db ' -engine e - use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _gendsa_main+72Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AC8h
; COMDAT (pick any)
		public ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
; `string'
??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ db	' -rand file%cfile%c...',0Ah,0
					; DATA XREF: _gendsa_main+741o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0AE0h
; COMDAT (pick any)
		public ??_C@_0EB@KLOHJNHD@?5?5?5?5?5?5?5?5?5?5?5?9?5load?5the?5file?5?$CIor?5t@
; `string'
??_C@_0EB@KLOHJNHD@?5?5?5?5?5?5?5?5?5?5?5?9?5load?5the?5file?5?$CIor?5t@ db '           - load the file (or the files in the directory) into',0Ah
					; DATA XREF: _gendsa_main+751o
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B24h
; COMDAT (pick any)
		public ??_C@_0CK@NBGNPKEI@?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number?5g@
; `string'
??_C@_0CK@NBGNPKEI@?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number?5g@ db	'             the random number generator',0Ah,0
					; DATA XREF: _gendsa_main+761o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B50h
; COMDAT (pick any)
		public ??_C@_0BA@OPOOMPOL@?5dsaparam?9file?6?$AA@
; `string'
??_C@_0BA@OPOOMPOL@?5dsaparam?9file?6?$AA@ db ' dsaparam-file',0Ah,0
					; DATA XREF: _gendsa_main+774o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0B60h
; COMDAT (pick any)
		public ??_C@_0EI@HGDOGCNC@?5?5?5?5?5?5?5?5?5?5?5?9?5a?5DSA?5parameter?5fil@
; `string'
??_C@_0EI@HGDOGCNC@?5?5?5?5?5?5?5?5?5?5?5?9?5a?5DSA?5parameter?5fil@ db	'           - a DSA parameter file as generated by the dsaparam co'
					; DATA XREF: _gendsa_main+784o
		db 'mmand',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA8h
; COMDAT (pick any)
		public ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; `string'
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ db 'Error getting password',0Ah,0
					; DATA XREF: _gendsa_main+4F5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BC0h
; COMDAT (pick any)
		public ??_C@_0CD@MGLINGFB@unable?5to?5load?5DSA?5parameter?5fil@
; `string'
??_C@_0CD@MGLINGFB@unable?5to?5load?5DSA?5parameter?5fil@ db 'unable to load DSA parameter file',0Ah,0
					; DATA XREF: _gendsa_main+554o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0BE4h
; COMDAT (pick any)
		public ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
; `string'
??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ db 'warning, not much extra random data, consider using the -rand opt'
					; DATA XREF: _gendsa_main+5CBo
		db 'ion',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C2Ch
; COMDAT (pick any)
		public ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
; `string'
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ db '%ld semi-random bytes loaded',0Ah,0
					; DATA XREF: _gendsa_main+60Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4Ch
; COMDAT (pick any)
		public ??_C@_0BN@CCBGICPL@Generating?5DSA?5key?0?5?$CFd?5bits?6?$AA@
; `string'
??_C@_0BN@CCBGICPL@Generating?5DSA?5key?0?5?$CFd?5bits?6?$AA@ db 'Generating DSA key, %d bits',0Ah,0
					; DATA XREF: _gendsa_main+628o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _gendsa_main+56p
					; _gendsa_main+59Ap
					; DATA XREF: ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _gendsa_main+531p
					; _gendsa_main+5F3p
					; DATA XREF: ...
		extrn _CRYPTO_free:near	; CODE XREF: _gendsa_main+7E2p
		extrn _BIO_s_file:near	; CODE XREF: _gendsa_main+3Dp
					; _gendsa_main:loc_50Dp ...
		extrn _BIO_new:near	; CODE XREF: _gendsa_main+43p
					; _gendsa_main+513p ...
		extrn _BIO_free:near	; CODE XREF: _gendsa_main+56Dp
					; _gendsa_main+7B2p
		extrn _BIO_ctrl:near	; CODE XREF: _gendsa_main+67p
					; _gendsa_main+524p ...
		extrn _BIO_free_all:near ; CODE	XREF: _gendsa_main+7C4p
		extrn _BIO_printf:near	; CODE XREF: _gendsa_main+500p
					; _gendsa_main+55Fp ...
		extrn _BN_num_bits:near	; CODE XREF: _gendsa_main+622p
		extrn _EVP_des_cbc:near	; CODE XREF: _gendsa_main+24Dp
		extrn _EVP_des_ede3_cbc:near ; CODE XREF: _gendsa_main+28Dp
		extrn _EVP_idea_cbc:near ; CODE	XREF: _gendsa_main+2CDp
		extrn _EVP_aes_128_cbc:near ; CODE XREF: _gendsa_main+34Dp
		extrn _EVP_aes_192_cbc:near ; CODE XREF: _gendsa_main+38Dp
		extrn _EVP_aes_256_cbc:near ; CODE XREF: _gendsa_main+3CDp
		extrn _EVP_camellia_128_cbc:near ; CODE	XREF: _gendsa_main+40Dp
		extrn _EVP_camellia_192_cbc:near ; CODE	XREF: _gendsa_main+44Dp
		extrn _EVP_camellia_256_cbc:near ; CODE	XREF: _gendsa_main+48Ap
		extrn _EVP_seed_cbc:near ; CODE	XREF: _gendsa_main+30Dp
		extrn _DSA_free:near	; CODE XREF: _gendsa_main+7D1p
		extrn _DSA_generate_key:near ; CODE XREF: _gendsa_main+639p
		extrn _ERR_print_errors:near ; CODE XREF: _gendsa_main+7A1p
		extrn _app_RAND_load_file:near ; CODE XREF: _gendsa_main+5B7p
		extrn _app_RAND_write_file:near	; CODE XREF: _gendsa_main+651p
		extrn _app_RAND_load_files:near	; CODE XREF: _gendsa_main+606p
		extrn _app_passwd:near	; CODE XREF: _gendsa_main+4E9p
		extrn _setup_engine:near ; CODE	XREF: _gendsa_main+4D0p
		extrn _load_config:near	; CODE XREF: _gendsa_main+77p
		extrn _PEM_write_bio_DSAPrivateKey:near	; CODE XREF: _gendsa_main+663p
		extrn _PEM_read_bio_DSAparams:near ; CODE XREF:	_gendsa_main+546p
		extrn __chkstk:near	; CODE XREF: _gendsa_main+5p
		extrn _bio_err:near	; DATA XREF: _gendsa_main+30r
					; _gendsa_main+4Bw ...


		end

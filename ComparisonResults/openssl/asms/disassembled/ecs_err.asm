;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	22B57881219586FCECB51E6B4A67BB41
; Input	CRC32 :	2E5DDEFB

; File Name   :	C:\compspace\Diff\openssl\obj\ecs_err.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
_ECDSA_str_functs dd 2A068000h		; DATA XREF: _ERR_load_ECDSA_stringsr
					; _ERR_load_ECDSA_strings+12o
		dd offset ??_C@_0M@KDLAGBMI@ECDSA_CHECK?$AA@ ; "ECDSA_CHECK"
		dd 2A064000h
		dd offset ??_C@_0BG@PPIAHALF@ECDSA_DATA_NEW_METHOD?$AA@	; "ECDSA_DATA_NEW_METHOD"
		dd 2A065000h
		dd offset ??_C@_0O@HPIOKGCH@ECDSA_do_sign?$AA@ ; "ECDSA_do_sign"
		dd 2A066000h
		dd offset ??_C@_0BA@EHPKHBIM@ECDSA_do_verify?$AA@ ; "ECDSA_do_verify"
		dd 2A069000h
		dd offset ??_C@_0BB@HEIMJKCN@ECDSA_METHOD_new?$AA@ ; "ECDSA_METHOD_new"
		dd 2A067000h
		dd offset ??_C@_0BB@IKKHAHBP@ECDSA_sign_setup?$AA@ ; "ECDSA_sign_setup"
		dd 2 dup(0)
_ECDSA_str_reasons dd 2A000064h		; DATA XREF: _ERR_load_ECDSA_strings+1Do
		dd offset ??_C@_0O@NKHGIDL@bad?5signature?$AA@ ; "bad signature"
		dd 2A000065h
		dd offset ??_C@_0BM@LDGAMALI@data?5too?5large?5for?5key?5size?$AA@ ; "data too large for key size"
		dd 2A000066h
		dd offset ??_C@_0L@JHHGCIEK@err?5ec?5lib?$AA@ ;	"err ec	lib"
		dd 2A000067h
		dd offset ??_C@_0BD@FMCFODNL@missing?5parameters?$AA@ ;	"missing parameters"
		dd 2A00006Ah
		dd offset ??_C@_0BG@CMMPCEJC@need?5new?5setup?5values?$AA@ ; "need new setup values"
		dd 2A00006Bh
		dd offset ??_C@_0BA@MAGMKJLO@non?5fips?5method?$AA@ ; "non fips	method"
		dd 2A000068h
		dd offset ??_C@_0CA@PEINDBLK@random?5number?5generation?5failed?$AA@ ; "random number generation failed"
		dd 2A000069h
		dd offset ??_C@_0BI@IHHJBEMD@signature?5malloc?5failed?$AA@ ; "signature malloc	failed"
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
; COMDAT (pick any)
		public ??_C@_0M@KDLAGBMI@ECDSA_CHECK?$AA@
; `string'
??_C@_0M@KDLAGBMI@ECDSA_CHECK?$AA@ db 'ECDSA_CHECK',0 ; DATA XREF: .data:00000004o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
; COMDAT (pick any)
		public ??_C@_0BG@PPIAHALF@ECDSA_DATA_NEW_METHOD?$AA@
; `string'
??_C@_0BG@PPIAHALF@ECDSA_DATA_NEW_METHOD?$AA@ db 'ECDSA_DATA_NEW_METHOD',0
					; DATA XREF: .data:0000000Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
; COMDAT (pick any)
		public ??_C@_0O@HPIOKGCH@ECDSA_do_sign?$AA@
; `string'
??_C@_0O@HPIOKGCH@ECDSA_do_sign?$AA@ db	'ECDSA_do_sign',0 ; DATA XREF: .data:00000014o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
; COMDAT (pick any)
		public ??_C@_0BA@EHPKHBIM@ECDSA_do_verify?$AA@
; `string'
??_C@_0BA@EHPKHBIM@ECDSA_do_verify?$AA@	db 'ECDSA_do_verify',0 ; DATA XREF: .data:0000001Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
; COMDAT (pick any)
		public ??_C@_0BB@HEIMJKCN@ECDSA_METHOD_new?$AA@
; `string'
??_C@_0BB@HEIMJKCN@ECDSA_METHOD_new?$AA@ db 'ECDSA_METHOD_new',0
					; DATA XREF: .data:00000024o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
; COMDAT (pick any)
		public ??_C@_0BB@IKKHAHBP@ECDSA_sign_setup?$AA@
; `string'
??_C@_0BB@IKKHAHBP@ECDSA_sign_setup?$AA@ db 'ECDSA_sign_setup',0
					; DATA XREF: .data:0000002Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
; COMDAT (pick any)
		public ??_C@_0O@NKHGIDL@bad?5signature?$AA@
; `string'
??_C@_0O@NKHGIDL@bad?5signature?$AA@ db	'bad signature',0 ; DATA XREF: .data:0000003Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FCh
; COMDAT (pick any)
		public ??_C@_0BM@LDGAMALI@data?5too?5large?5for?5key?5size?$AA@
; `string'
??_C@_0BM@LDGAMALI@data?5too?5large?5for?5key?5size?$AA@ db 'data too large for key size',0
					; DATA XREF: .data:00000044o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 118h
; COMDAT (pick any)
		public ??_C@_0L@JHHGCIEK@err?5ec?5lib?$AA@
; `string'
??_C@_0L@JHHGCIEK@err?5ec?5lib?$AA@ db 'err ec lib',0 ; DATA XREF: .data:0000004Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 124h
; COMDAT (pick any)
		public ??_C@_0BD@FMCFODNL@missing?5parameters?$AA@
; `string'
??_C@_0BD@FMCFODNL@missing?5parameters?$AA@ db 'missing parameters',0
					; DATA XREF: .data:00000054o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 138h
; COMDAT (pick any)
		public ??_C@_0BG@CMMPCEJC@need?5new?5setup?5values?$AA@
; `string'
??_C@_0BG@CMMPCEJC@need?5new?5setup?5values?$AA@ db 'need new setup values',0
					; DATA XREF: .data:0000005Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 150h
; COMDAT (pick any)
		public ??_C@_0BA@MAGMKJLO@non?5fips?5method?$AA@
; `string'
??_C@_0BA@MAGMKJLO@non?5fips?5method?$AA@ db 'non fips method',0
					; DATA XREF: .data:00000064o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 160h
; COMDAT (pick any)
		public ??_C@_0CA@PEINDBLK@random?5number?5generation?5failed?$AA@
; `string'
??_C@_0CA@PEINDBLK@random?5number?5generation?5failed?$AA@ db 'random number generation failed',0
					; DATA XREF: .data:0000006Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 180h
; COMDAT (pick any)
		public ??_C@_0BI@IHHJBEMD@signature?5malloc?5failed?$AA@
; `string'
??_C@_0BI@IHHJBEMD@signature?5malloc?5failed?$AA@ db 'signature malloc failed',0
					; DATA XREF: .data:00000074o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 198h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ERR_load_ECDSA_strings
_ERR_load_ECDSA_strings	proc near
		push	_ECDSA_str_functs
		call	_ERR_func_error_string
		add	esp, 4
		test	eax, eax
		jnz	short locret_1C4
		push	offset _ECDSA_str_functs
		push	eax
		call	_ERR_load_strings
		push	offset _ECDSA_str_reasons
		push	0
		call	_ERR_load_strings
		add	esp, 10h

locret_1C4:				; CODE XREF: _ERR_load_ECDSA_strings+10j
		retn
_ERR_load_ECDSA_strings	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_func_error_string:near ; CODE XREF: _ERR_load_ECDSA_strings+6p
		extrn _ERR_load_strings:near ; CODE XREF: _ERR_load_ECDSA_strings+18p
					; _ERR_load_ECDSA_strings+24p


		end

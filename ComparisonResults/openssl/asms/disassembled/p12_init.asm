;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	626ACECAA6DE1407C8FB3C370521B4A8
; Input	CRC32 :	E0F42312

; File Name   :	C:\compspace\Diff\openssl\obj\p12_init.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_init
_PKCS12_init	proc near

arg_0		= dword	ptr  4

		push	edi
		call	_PKCS12_new
		mov	edi, eax
		test	edi, edi
		jnz	short loc_25
		push	46h ; 'F'
		push	offset ??_C@_0BL@GCPHMLDE@?4?2crypto?2pkcs12?2p12_init?4c?$AA@ ; ".\\crypto\\pkcs12\\p12_init.c"
		push	41h ; 'A'
		push	6Dh ; 'm'
		push	23h ; '#'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_25:					; CODE XREF: _PKCS12_init+Aj
		push	3
		push	dword ptr [edi]
		call	_ASN1_INTEGER_set
		push	[esp+0Ch+arg_0]
		call	_OBJ_nid2obj
		mov	ecx, [edi+8]
		add	esp, 0Ch
		cmp	[esp+4+arg_0], 15h
		mov	[ecx+10h], eax
		jz	short loc_52
		push	53h ; 'S'
		push	offset ??_C@_0BL@GCPHMLDE@?4?2crypto?2pkcs12?2p12_init?4c?$AA@ ; ".\\crypto\\pkcs12\\p12_init.c"
		push	77h ; 'w'
		jmp	short loc_6F
; ---------------------------------------------------------------------------

loc_52:					; CODE XREF: _PKCS12_init+45j
		push	4
		call	_ASN1_STRING_type_new
		mov	ecx, [edi+8]
		add	esp, 4
		mov	[ecx+14h], eax
		test	eax, eax
		jnz	short loc_88
		push	4Eh ; 'N'
		push	offset ??_C@_0BL@GCPHMLDE@?4?2crypto?2pkcs12?2p12_init?4c?$AA@ ; ".\\crypto\\pkcs12\\p12_init.c"
		push	41h ; 'A'

loc_6F:					; CODE XREF: _PKCS12_init+50j
		push	6Dh ; 'm'
		push	23h ; '#'
		call	_ERR_put_error
		add	esp, 14h

$err$12:
		push	edi
		call	_PKCS12_free
		add	esp, 4
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_88:					; CODE XREF: _PKCS12_init+64j
		mov	eax, edi
		pop	edi
		retn
_PKCS12_init	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
; COMDAT (pick any)
		public ??_C@_0BL@GCPHMLDE@?4?2crypto?2pkcs12?2p12_init?4c?$AA@
; `string'
??_C@_0BL@GCPHMLDE@?4?2crypto?2pkcs12?2p12_init?4c?$AA@	db '.\crypto\pkcs12\p12_init.c',0
					; DATA XREF: _PKCS12_init+Eo
					; _PKCS12_init+49o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_put_error:near ; CODE XREF: _PKCS12_init+19p
					; _PKCS12_init+73p
		extrn _ASN1_STRING_type_new:near ; CODE	XREF: _PKCS12_init+54p
		extrn _ASN1_INTEGER_set:near ; CODE XREF: _PKCS12_init+29p
		extrn _OBJ_nid2obj:near	; CODE XREF: _PKCS12_init+32p
		extrn _PKCS12_new:near	; CODE XREF: _PKCS12_init+1p
		extrn _PKCS12_free:near	; CODE XREF: _PKCS12_init+7Cp


		end

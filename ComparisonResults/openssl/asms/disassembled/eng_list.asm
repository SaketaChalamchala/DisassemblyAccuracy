;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	D42BEA6DB9E64A2DB118928B2711E34B
; Input	CRC32 :	D233649A

; File Name   :	C:\compspace\Diff\openssl\obj\eng_list.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
_engine_list_head dd ?			; DATA XREF: _ENGINE_by_id+3Ar
					; _ENGINE_get_first+14r ...
_engine_list_tail dd ?			; DATA XREF: _ENGINE_get_last+14r
					; _engine_list_add+6Fr	...
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_add
_ENGINE_add	proc near

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		push	edi
		mov	edi, 1
		test	esi, esi
		jnz	short loc_34
		push	102h
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	43h ; 'C'
		push	69h ; 'i'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_34:					; CODE XREF: _ENGINE_add+Dj
		cmp	dword ptr [esi], 0
		jz	short loc_94
		cmp	dword ptr [esi+4], 0
		jz	short loc_94
		push	109h
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		push	esi
		call	_engine_list_add
		add	esp, 14h
		test	eax, eax
		jnz	short loc_79
		push	10Bh
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	6Eh ; 'n'
		push	69h ; 'i'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	edi, edi

loc_79:					; CODE XREF: _ENGINE_add+55j
		push	10Eh
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		add	esp, 10h
		mov	eax, edi
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_94:					; CODE XREF: _ENGINE_add+2Fj
					; _ENGINE_add+35j
		push	106h
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	6Ch ; 'l'
		push	69h ; 'i'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
_ENGINE_add	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_by_id
_ENGINE_by_id	proc near		; CODE XREF: _ENGINE_by_id+117p

arg_0		= dword	ptr  4

		push	ebx
		mov	ebx, [esp+4+arg_0]
		test	ebx, ebx
		jnz	short loc_D9
		push	14Ah
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	43h ; 'C'
		push	6Ah ; 'j'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_D9:					; CODE XREF: _ENGINE_by_id+7j
		push	esi
		push	edi
		push	14Dh
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		mov	esi, ds:_engine_list_head
		add	esp, 10h
		test	esi, esi
		jz	short loc_15C

loc_FB:					; CODE XREF: _ENGINE_by_id+7Ej
		mov	ecx, [esi]
		mov	eax, ebx
		nop	dword ptr [eax+eax+00h]

loc_104:				; CODE XREF: _ENGINE_by_id+6Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_124
		test	dl, dl
		jz	short loc_120
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_124
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_104

loc_120:				; CODE XREF: _ENGINE_by_id+58j
		xor	eax, eax
		jmp	short loc_129
; ---------------------------------------------------------------------------

loc_124:				; CODE XREF: _ENGINE_by_id+54j
					; _ENGINE_by_id+60j
		sbb	eax, eax
		or	eax, 1

loc_129:				; CODE XREF: _ENGINE_by_id+6Ej
		test	eax, eax
		jz	short loc_136
		mov	esi, [esi+6Ch]
		test	esi, esi
		jnz	short loc_FB
		jmp	short loc_15C
; ---------------------------------------------------------------------------

loc_136:				; CODE XREF: _ENGINE_by_id+77j
		test	byte ptr [esi+54h], 4
		jz	short loc_159
		call	_ENGINE_new
		mov	edi, eax
		test	edi, edi
		jnz	short loc_14B
		xor	esi, esi
		jmp	short loc_15C
; ---------------------------------------------------------------------------

loc_14B:				; CODE XREF: _ENGINE_by_id+91j
		push	esi
		push	edi
		call	_engine_cpy
		add	esp, 8
		mov	esi, edi
		jmp	short loc_15C
; ---------------------------------------------------------------------------

loc_159:				; CODE XREF: _ENGINE_by_id+86j
		inc	dword ptr [esi+58h]

loc_15C:				; CODE XREF: _ENGINE_by_id+45j
					; _ENGINE_by_id+80j ...
		push	164h
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		add	esp, 10h
		test	esi, esi
		jnz	loc_24B
		mov	ecx, offset ??_C@_07OBLKMMON@dynamic?$AA@ ; "dynamic"
		mov	eax, ebx
		nop	dword ptr [eax]

loc_184:				; CODE XREF: _ENGINE_by_id+EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1A4
		test	dl, dl
		jz	short loc_1A0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1A4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_184

loc_1A0:				; CODE XREF: _ENGINE_by_id+D8j
		xor	eax, eax
		jmp	short loc_1A9
; ---------------------------------------------------------------------------

loc_1A4:				; CODE XREF: _ENGINE_by_id+D4j
					; _ENGINE_by_id+E0j
		sbb	eax, eax
		or	eax, 1

loc_1A9:				; CODE XREF: _ENGINE_by_id+EEj
		test	eax, eax
		jz	$notfound$32
		push	offset ??_C@_0BA@JCBHDDHM@OPENSSL_ENGINES?$AA@ ; "OPENSSL_ENGINES"
		call	dword ptr ds:__imp__getenv
		test	eax, eax
		mov	edi, offset ??_C@_0BM@OIJEAGLM@C?3?2openssl?2some?1lib?1engines?$AA@ ; "C:\\openssl\\some/lib/engines"
		push	offset ??_C@_07OBLKMMON@dynamic?$AA@ ; "dynamic"
		cmovnz	edi, eax
		call	_ENGINE_by_id
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jz	short $notfound$32
		push	0
		push	ebx
		push	offset ??_C@_02OLOABKKD@ID?$AA@	; "ID"
		push	esi
		call	_ENGINE_ctrl_cmd_string
		add	esp, 10h
		test	eax, eax
		jz	short $notfound$32
		push	0
		push	offset ??_C@_01FDFGLJHB@2?$AA@ ; `string'
		push	offset ??_C@_08FOPBLCPF@DIR_LOAD?$AA@ ;	"DIR_LOAD"
		push	esi
		call	_ENGINE_ctrl_cmd_string
		add	esp, 10h
		test	eax, eax
		jz	short $notfound$32
		push	0
		push	edi
		push	offset ??_C@_07NNLCLNII@DIR_ADD?$AA@ ; "DIR_ADD"
		push	esi
		call	_ENGINE_ctrl_cmd_string
		add	esp, 10h
		test	eax, eax
		jz	short $notfound$32
		push	0
		push	offset ??_C@_01HIHLOKLC@1?$AA@ ; "1"
		push	offset ??_C@_08OIMNLDBA@LIST_ADD?$AA@ ;	"LIST_ADD"
		push	esi
		call	_ENGINE_ctrl_cmd_string
		add	esp, 10h
		test	eax, eax
		jz	short $notfound$32
		push	0
		push	0
		push	offset ??_C@_04ICOEJIDH@LOAD?$AA@ ; "LOAD"
		push	esi
		call	_ENGINE_ctrl_cmd_string
		add	esp, 10h
		test	eax, eax
		jz	short $notfound$32

loc_24B:				; CODE XREF: _ENGINE_by_id+C0j
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$notfound$32:				; CODE XREF: _ENGINE_by_id+F7j
					; _ENGINE_by_id+123j ...
		push	esi
		call	_ENGINE_free
		push	186h
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	74h ; 't'
		push	6Ah ; 'j'
		push	26h ; '&'
		call	_ERR_put_error
		push	ebx
		push	offset ??_C@_03LNKDLDCI@id?$DN?$AA@ ; `string'
		push	2
		call	_ERR_add_error_data
		add	esp, 24h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		retn
_ENGINE_by_id	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 284h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_get_first
_ENGINE_get_first proc near
		push	esi
		push	0BCh ; '¼'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		mov	esi, ds:_engine_list_head
		add	esp, 10h
		test	esi, esi
		jz	short loc_2A8
		inc	dword ptr [esi+58h]

loc_2A8:				; CODE XREF: _ENGINE_get_first+1Fj
		push	0C2h ; 'Â'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		add	esp, 10h
		mov	eax, esi
		pop	esi
		retn
_ENGINE_get_first endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_get_last
_ENGINE_get_last proc near
		push	esi
		push	0CAh ; 'Ê'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		mov	esi, ds:_engine_list_tail
		add	esp, 10h
		test	esi, esi
		jz	short loc_2E8
		inc	dword ptr [esi+58h]

loc_2E8:				; CODE XREF: _ENGINE_get_last+1Fj
		push	0D0h ; 'Ð'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		add	esp, 10h
		mov	eax, esi
		pop	esi
		retn
_ENGINE_get_last endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 304h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_get_next
_ENGINE_get_next proc near

arg_0		= dword	ptr  4

		push	edi
		mov	edi, [esp+4+arg_0]
		test	edi, edi
		jnz	short loc_329
		push	0D9h ; 'Ù'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	43h ; 'C'
		push	73h ; 's'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_329:				; CODE XREF: _ENGINE_get_next+7j
		push	esi
		push	0DCh ; 'Ü'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		mov	esi, [edi+6Ch]
		add	esp, 10h
		test	esi, esi
		jz	short loc_34A
		inc	dword ptr [esi+58h]

loc_34A:				; CODE XREF: _ENGINE_get_next+41j
		push	0E3h ; 'ã'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		push	edi
		call	_ENGINE_free
		add	esp, 14h
		mov	eax, esi
		pop	esi
		pop	edi
		retn
_ENGINE_get_next endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 36Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_get_prev
_ENGINE_get_prev proc near

arg_0		= dword	ptr  4

		push	edi
		mov	edi, [esp+4+arg_0]
		test	edi, edi
		jnz	short loc_391
		push	0EDh ; 'í'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	43h ; 'C'
		push	74h ; 't'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_391:				; CODE XREF: _ENGINE_get_prev+7j
		push	esi
		push	0F0h ; 'ð'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		mov	esi, [edi+68h]
		add	esp, 10h
		test	esi, esi
		jz	short loc_3B2
		inc	dword ptr [esi+58h]

loc_3B2:				; CODE XREF: _ENGINE_get_prev+41j
		push	0F7h ; '÷'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		push	edi
		call	_ENGINE_free
		add	esp, 14h
		mov	eax, esi
		pop	esi
		pop	edi
		retn
_ENGINE_get_prev endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_remove
_ENGINE_remove	proc near

arg_0		= dword	ptr  4

		cmp	[esp+arg_0], 0
		push	esi
		mov	esi, 1
		jnz	short loc_3FD
		push	117h
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	43h ; 'C'
		push	7Bh ; '{'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_3FD:				; CODE XREF: _ENGINE_remove+Bj
		push	11Ah
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		push	[esp+14h+arg_0]
		call	_engine_list_remove
		add	esp, 14h
		test	eax, eax
		jnz	short loc_43A
		push	11Ch
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	6Eh ; 'n'
		push	7Bh ; '{'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	esi, esi

loc_43A:				; CODE XREF: _ENGINE_remove+4Aj
		push	11Fh
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		add	esp, 10h
		mov	eax, esi
		pop	esi
		retn
_ENGINE_remove	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 454h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_up_ref
_ENGINE_up_ref	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		test	eax, eax
		jnz	short loc_47A
		push	190h
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	43h ; 'C'
		push	0BEh ; '¾'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_47A:				; CODE XREF: _ENGINE_up_ref+6j
		push	193h
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		add	eax, 58h ; 'X'
		push	1
		push	eax
		call	_CRYPTO_add_lock
		add	esp, 14h
		mov	eax, 1
		retn
_ENGINE_up_ref	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 49Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_engine_cpy	proc near		; CODE XREF: _ENGINE_by_id+99p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	ecx, [esp+arg_0]
		mov	eax, [edx]
		mov	[ecx], eax
		mov	eax, [edx+4]
		mov	[ecx+4], eax
		mov	eax, [edx+8]
		mov	[ecx+8], eax
		mov	eax, [edx+0Ch]
		mov	[ecx+0Ch], eax
		mov	eax, [edx+10h]
		mov	[ecx+10h], eax
		mov	eax, [edx+14h]
		mov	[ecx+14h], eax
		mov	eax, [edx+18h]
		mov	[ecx+18h], eax
		mov	eax, [edx+1Ch]
		mov	[ecx+1Ch], eax
		mov	eax, [edx+20h]
		mov	[ecx+20h], eax
		mov	eax, [edx+24h]
		mov	[ecx+24h], eax
		mov	eax, [edx+28h]
		mov	[ecx+28h], eax
		mov	eax, [edx+2Ch]
		mov	[ecx+2Ch], eax
		mov	eax, [edx+34h]
		mov	[ecx+34h], eax
		mov	eax, [edx+38h]
		mov	[ecx+38h], eax
		mov	eax, [edx+3Ch]
		mov	[ecx+3Ch], eax
		mov	eax, [edx+40h]
		mov	[ecx+40h], eax
		mov	eax, [edx+44h]
		mov	[ecx+44h], eax
		mov	eax, [edx+48h]
		mov	[ecx+48h], eax
		mov	eax, [edx+50h]
		mov	[ecx+50h], eax
		mov	eax, [edx+54h]
		mov	[ecx+54h], eax
		retn
_engine_cpy	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 51Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_engine_list_add proc near		; CODE XREF: _ENGINE_add+4Bp

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		xor	ecx, ecx
		test	esi, esi
		jnz	short loc_540
		push	6Ch ; 'l'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	43h ; 'C'
		push	78h ; 'x'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_540:				; CODE XREF: _engine_list_add+9j
		push	edi
		mov	edi, ds:_engine_list_head
		test	edi, edi
		jz	short loc_5C2
		nop

loc_54C:				; CODE XREF: _engine_list_add+69j
		test	ecx, ecx
		jnz	short loc_5A8
		mov	eax, [esi]
		mov	ecx, [edi]

loc_554:				; CODE XREF: _engine_list_add+52j
		mov	dl, [ecx]
		cmp	dl, [eax]
		jnz	short loc_574
		test	dl, dl
		jz	short loc_570
		mov	dl, [ecx+1]
		cmp	dl, [eax+1]
		jnz	short loc_574
		add	ecx, 2
		add	eax, 2
		test	dl, dl
		jnz	short loc_554

loc_570:				; CODE XREF: _engine_list_add+40j
		xor	eax, eax
		jmp	short loc_579
; ---------------------------------------------------------------------------

loc_574:				; CODE XREF: _engine_list_add+3Cj
					; _engine_list_add+48j
		sbb	eax, eax
		or	eax, 1

loc_579:				; CODE XREF: _engine_list_add+56j
		mov	edi, [edi+6Ch]
		xor	ecx, ecx
		test	eax, eax
		setz	cl
		test	edi, edi
		jnz	short loc_54C
		test	ecx, ecx
		jnz	short loc_5A8
		mov	eax, ds:_engine_list_tail
		test	eax, eax
		jz	short loc_5A1
		cmp	[eax+6Ch], ecx
		jnz	short loc_5A1
		mov	[eax+6Ch], esi
		mov	[esi+68h], eax
		jmp	short loc_5FA
; ---------------------------------------------------------------------------

loc_5A1:				; CODE XREF: _engine_list_add+76j
					; _engine_list_add+7Bj
		push	87h ; ''
		jmp	short loc_5CC
; ---------------------------------------------------------------------------

loc_5A8:				; CODE XREF: _engine_list_add+32j
					; _engine_list_add+6Dj
		push	75h ; 'u'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	67h ; 'g'
		push	78h ; 'x'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_5C2:				; CODE XREF: _engine_list_add+2Dj
		cmp	ds:_engine_list_tail, ecx
		jz	short loc_5E4
		push	7Bh ; '{'

loc_5CC:				; CODE XREF: _engine_list_add+8Aj
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	6Eh ; 'n'
		push	78h ; 'x'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_5E4:				; CODE XREF: _engine_list_add+ACj
		push	offset _engine_list_cleanup
		mov	ds:_engine_list_head, esi
		mov	[esi+68h], ecx
		call	_engine_cleanup_add_last
		add	esp, 4

loc_5FA:				; CODE XREF: _engine_list_add+83j
		inc	dword ptr [esi+58h]
		mov	eax, 1
		pop	edi
		mov	ds:_engine_list_tail, esi
		mov	dword ptr [esi+6Ch], 0
		pop	esi
		retn
_engine_list_add endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 614h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_engine_list_cleanup proc near		; DATA XREF: _engine_list_add:loc_5E4o
		mov	eax, ds:_engine_list_head
		push	esi
		mov	esi, eax
		test	eax, eax
		jz	short loc_679

loc_620:				; CODE XREF: _engine_list_cleanup+63j
		push	11Ah
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		push	esi
		call	_engine_list_remove
		add	esp, 14h
		test	eax, eax
		jnz	short loc_658
		push	11Ch
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	6Eh ; 'n'
		push	7Bh ; '{'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h

loc_658:				; CODE XREF: _engine_list_cleanup+2Aj
		push	11Fh
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		mov	eax, ds:_engine_list_head
		add	esp, 10h
		mov	esi, eax
		test	eax, eax
		jnz	short loc_620

loc_679:				; CODE XREF: _engine_list_cleanup+Aj
		pop	esi
		retn
_engine_list_cleanup endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 67Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_engine_list_remove proc near		; CODE XREF: _ENGINE_remove+40p
					; _engine_list_cleanup+20p

arg_0		= dword	ptr  4

		mov	ecx, [esp+arg_0]
		test	ecx, ecx
		jnz	short loc_69F
		push	9Dh ; ''
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	43h ; 'C'
		push	79h ; 'y'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_69F:				; CODE XREF: _engine_list_remove+6j
		mov	edx, ds:_engine_list_head
		mov	eax, edx
		test	edx, edx
		jz	short loc_6B7
		nop

loc_6AC:				; CODE XREF: _engine_list_remove+39j
		cmp	eax, ecx
		jz	short loc_6D2
		mov	eax, [eax+6Ch]
		test	eax, eax
		jnz	short loc_6AC

loc_6B7:				; CODE XREF: _engine_list_remove+2Dj
					; _engine_list_remove+58j
		push	0A6h ; '¦'
		push	offset ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@ ; ".\\crypto\\engine\\eng_list.c"
		push	69h ; 'i'
		push	79h ; 'y'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_6D2:				; CODE XREF: _engine_list_remove+32j
		test	eax, eax
		jz	short loc_6B7
		push	esi
		mov	esi, [ecx+6Ch]
		test	esi, esi
		jz	short loc_6E4
		mov	eax, [ecx+68h]
		mov	[esi+68h], eax

loc_6E4:				; CODE XREF: _engine_list_remove+60j
		mov	esi, [ecx+68h]
		test	esi, esi
		jz	short loc_6F1
		mov	eax, [ecx+6Ch]
		mov	[esi+6Ch], eax

loc_6F1:				; CODE XREF: _engine_list_remove+6Dj
		pop	esi
		cmp	edx, ecx
		jnz	short loc_6FE
		mov	eax, [ecx+6Ch]
		mov	ds:_engine_list_head, eax

loc_6FE:				; CODE XREF: _engine_list_remove+78j
		cmp	ds:_engine_list_tail, ecx
		jnz	short loc_70E
		mov	eax, [ecx+68h]
		mov	ds:_engine_list_tail, eax

loc_70E:				; CODE XREF: _engine_list_remove+88j
		push	0
		push	ecx
		call	_engine_free_util
		add	esp, 8
		mov	eax, 1
		retn
_engine_list_remove endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 720h
; COMDAT (pick any)
		public ??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@
; `string'
??_C@_0BL@GECMNLJC@?4?2crypto?2engine?2eng_list?4c?$AA@	db '.\crypto\engine\eng_list.c',0
					; DATA XREF: _ENGINE_add+14o
					; _ENGINE_add+3Co ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 73Ch
; COMDAT (pick any)
		public ??_C@_07OBLKMMON@dynamic?$AA@
; `string'
??_C@_07OBLKMMON@dynamic?$AA@ db 'dynamic',0 ; DATA XREF: _ENGINE_by_id+C6o
					; _ENGINE_by_id+10Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 744h
; COMDAT (pick any)
		public ??_C@_0BA@JCBHDDHM@OPENSSL_ENGINES?$AA@
; char `string'[]
??_C@_0BA@JCBHDDHM@OPENSSL_ENGINES?$AA@	db 'OPENSSL_ENGINES',0
					; DATA XREF: _ENGINE_by_id+FDo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 754h
; COMDAT (pick any)
		public ??_C@_0BM@OIJEAGLM@C?3?2openssl?2some?1lib?1engines?$AA@
; `string'
??_C@_0BM@OIJEAGLM@C?3?2openssl?2some?1lib?1engines?$AA@ db 'C:\openssl\some/lib/engines',0
					; DATA XREF: _ENGINE_by_id+10Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 770h
; COMDAT (pick any)
		public ??_C@_02OLOABKKD@ID?$AA@
; `string'
??_C@_02OLOABKKD@ID?$AA@ db 'ID',0      ; DATA XREF: _ENGINE_by_id+128o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 774h
; COMDAT (pick any)
		public ??_C@_01FDFGLJHB@2?$AA@
; `string'
??_C@_01FDFGLJHB@2?$AA@	db 32h,	0	; DATA XREF: _ENGINE_by_id+13Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 778h
; COMDAT (pick any)
		public ??_C@_08FOPBLCPF@DIR_LOAD?$AA@
; `string'
??_C@_08FOPBLCPF@DIR_LOAD?$AA@ db 'DIR_LOAD',0 ; DATA XREF: _ENGINE_by_id+141o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 784h
; COMDAT (pick any)
		public ??_C@_07NNLCLNII@DIR_ADD?$AA@
; `string'
??_C@_07NNLCLNII@DIR_ADD?$AA@ db 'DIR_ADD',0 ; DATA XREF: _ENGINE_by_id+156o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78Ch
; COMDAT (pick any)
		public ??_C@_01HIHLOKLC@1?$AA@
; `string'
??_C@_01HIHLOKLC@1?$AA@	db '1',0        ; DATA XREF: _ENGINE_by_id+16Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 790h
; COMDAT (pick any)
		public ??_C@_08OIMNLDBA@LIST_ADD?$AA@
; `string'
??_C@_08OIMNLDBA@LIST_ADD?$AA@ db 'LIST_ADD',0 ; DATA XREF: _ENGINE_by_id+16Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 79Ch
; COMDAT (pick any)
		public ??_C@_04ICOEJIDH@LOAD?$AA@
; `string'
??_C@_04ICOEJIDH@LOAD?$AA@ db 'LOAD',0  ; DATA XREF: _ENGINE_by_id+185o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7A4h
; COMDAT (pick any)
		public ??_C@_03LNKDLDCI@id?$DN?$AA@
; `string'
??_C@_03LNKDLDCI@id?$DN?$AA@ dd	3D6469h	; DATA XREF: _ENGINE_by_id+1B9o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; char *__cdecl	_getenv(const char *VarName)
		extrn __imp__getenv:near ; CODE	XREF: _ENGINE_by_id+102p
					; DATA XREF: _ENGINE_by_id+102r
		extrn _CRYPTO_lock:near	; CODE XREF: _ENGINE_add+45p
					; _ENGINE_add+7Fp ...
		extrn _CRYPTO_add_lock:near ; CODE XREF: _ENGINE_up_ref+38p
		extrn _ERR_put_error:near ; CODE XREF: _ENGINE_add+1Fp
					; _ENGINE_add+67p ...
		extrn _ERR_add_error_data:near ; CODE XREF: _ENGINE_by_id+1C0p
		extrn _ENGINE_ctrl_cmd_string:near ; CODE XREF:	_ENGINE_by_id+12Ep
					; _ENGINE_by_id+147p ...
		extrn _ENGINE_new:near	; CODE XREF: _ENGINE_by_id+88p
		extrn _ENGINE_free:near	; CODE XREF: _ENGINE_by_id+19Ep
					; _ENGINE_get_next+5Ap	...
		extrn _engine_cleanup_add_last:near ; CODE XREF: _engine_list_add+D6p
		extrn _engine_free_util:near ; CODE XREF: _engine_list_remove+95p


		end

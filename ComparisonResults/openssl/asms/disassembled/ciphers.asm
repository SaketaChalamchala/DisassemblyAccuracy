;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F93BF6DDB000DAAE32AA4B8E0CB87EA0
; Input	CRC32 :	66F5C06A

; File Name   :	C:\compspace\Diff\openssl\obj\ciphers.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
_ciphers_usage	dd offset ??_C@_0BF@DCLNOKMJ@usage?3?5ciphers?5args?6?$AA@
					; DATA XREF: _ciphers_main:loc_3C1r
					; _ciphers_main+2C6o
					; "usage: ciphers args\n"
		dd offset ??_C@_0FC@EDMBFFLI@?5?9v?5?5?5?5?5?5?5?5?5?5?9?5verbose?5mode?0?5a?5t@ ; " -v		 - verbose mode, a textual "...
		dd offset ??_C@_0CC@CKMNLLBF@?5?9V?5?5?5?5?5?5?5?5?5?5?9?5even?5more?5verbose@ ; " -V	       - even more verbose\n"
		dd offset ??_C@_0BK@NAJKLLNN@?5?9ssl2?5?5?5?5?5?5?5?9?5SSL2?5mode?6?$AA@ ; " -ssl2	 - SSL2	mode\n"
		dd offset ??_C@_0BK@IDOKDINN@?5?9ssl3?5?5?5?5?5?5?5?9?5SSL3?5mode?6?$AA@ ; " -ssl3	 - SSL3	mode\n"
		dd offset ??_C@_0BK@JKOLEECJ@?5?9tls1?5?5?5?5?5?5?5?9?5TLS1?5mode?6?$AA@ ; " -tls1	 - TLS1	mode\n"
		dd 0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
; COMDAT (pick any)
		public ??_C@_0BF@DCLNOKMJ@usage?3?5ciphers?5args?6?$AA@
; `string'
??_C@_0BF@DCLNOKMJ@usage?3?5ciphers?5args?6?$AA@ db 'usage: ciphers args',0Ah,0
					; DATA XREF: .data:_ciphers_usageo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 34h
; COMDAT (pick any)
		public ??_C@_0FC@EDMBFFLI@?5?9v?5?5?5?5?5?5?5?5?5?5?9?5verbose?5mode?0?5a?5t@
; `string'
??_C@_0FC@EDMBFFLI@?5?9v?5?5?5?5?5?5?5?5?5?5?9?5verbose?5mode?0?5a?5t@ db ' -v          - verbose mode, a textual listing of the SSL/TLS cip'
					; DATA XREF: .data:00000004o
		db 'hers in OpenSSL',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
; COMDAT (pick any)
		public ??_C@_0CC@CKMNLLBF@?5?9V?5?5?5?5?5?5?5?5?5?5?9?5even?5more?5verbose@
; `string'
??_C@_0CC@CKMNLLBF@?5?9V?5?5?5?5?5?5?5?5?5?5?9?5even?5more?5verbose@ db	' -V          - even more verbose',0Ah,0
					; DATA XREF: .data:00000008o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
; COMDAT (pick any)
		public ??_C@_0BK@NAJKLLNN@?5?9ssl2?5?5?5?5?5?5?5?9?5SSL2?5mode?6?$AA@
; `string'
??_C@_0BK@NAJKLLNN@?5?9ssl2?5?5?5?5?5?5?5?9?5SSL2?5mode?6?$AA@ db ' -ssl2       - SSL2 mode',0Ah,0
					; DATA XREF: .data:0000000Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
; COMDAT (pick any)
		public ??_C@_0BK@IDOKDINN@?5?9ssl3?5?5?5?5?5?5?5?9?5SSL3?5mode?6?$AA@
; `string'
??_C@_0BK@IDOKDINN@?5?9ssl3?5?5?5?5?5?5?5?9?5SSL3?5mode?6?$AA@ db ' -ssl3       - SSL3 mode',0Ah,0
					; DATA XREF: .data:00000010o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
; COMDAT (pick any)
		public ??_C@_0BK@JKOLEECJ@?5?9tls1?5?5?5?5?5?5?5?9?5TLS1?5mode?6?$AA@
; `string'
??_C@_0BK@JKOLEECJ@?5?9tls1?5?5?5?5?5?5?5?9?5TLS1?5mode?6?$AA@ db ' -tls1       - TLS1 mode',0Ah,0
					; DATA XREF: .data:00000014o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 100h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ciphers_main
_ciphers_main	proc near

var_220		= dword	ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_20C		= dword	ptr -20Ch
var_208		= dword	ptr -208h
var_204		= byte ptr -204h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 220h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+220h+var_4], eax
		push	ebx
		push	ebp
		push	esi
		push	edi
		mov	edi, [esp+230h+arg_4]
		mov	ebx, 1
		mov	[esp+230h+var_20C], ebx
		mov	[esp+230h+var_214], 0
		mov	[esp+230h+var_208], 0
		mov	[esp+230h+var_21C], 0
		call	_SSLv23_server_method
		cmp	dword ptr ds:_bio_err, 0
		mov	esi, dword ptr ds:__imp____acrt_iob_func
		mov	[esp+230h+var_220], eax
		jnz	short loc_173
		push	0
		push	2
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	dword ptr ds:_bio_err, eax

loc_173:				; CODE XREF: _ciphers_main+5Aj
		push	0
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		push	0
		push	dword ptr ds:_bio_err
		mov	ebp, eax
		mov	[esp+240h+var_218], ebp
		call	_load_config
		add	esp, 10h
		test	eax, eax
		jz	loc_399
		mov	ebx, [esp+230h+arg_0]
		add	edi, 4
		dec	ebx
		cmp	ebx, 1
		jl	loc_31A

loc_1B4:				; CODE XREF: _ciphers_main+214j
		mov	esi, [edi]
		mov	ecx, offset ??_C@_02EJEOCNCO@?9v?$AA@ ;	`string'
		mov	eax, esi
		nop	dword ptr [eax]

loc_1C0:				; CODE XREF: _ciphers_main+DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1E0
		test	dl, dl
		jz	short loc_1DC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1E0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1C0

loc_1DC:				; CODE XREF: _ciphers_main+C8j
		xor	eax, eax
		jmp	short loc_1E5
; ---------------------------------------------------------------------------

loc_1E0:				; CODE XREF: _ciphers_main+C4j
					; _ciphers_main+D0j
		sbb	eax, eax
		or	eax, 1

loc_1E5:				; CODE XREF: _ciphers_main+DEj
		test	eax, eax
		jnz	short loc_1F6
		mov	[esp+230h+var_214], 1
		jmp	loc_30D
; ---------------------------------------------------------------------------

loc_1F6:				; CODE XREF: _ciphers_main+E7j
		mov	ecx, offset ??_C@_02NMMKAJIM@?9V?$AA@ ;	`string'
		mov	eax, esi
		nop	dword ptr [eax]

loc_200:				; CODE XREF: _ciphers_main+11Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_220
		test	dl, dl
		jz	short loc_21C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_220
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_200

loc_21C:				; CODE XREF: _ciphers_main+108j
		xor	eax, eax
		jmp	short loc_225
; ---------------------------------------------------------------------------

loc_220:				; CODE XREF: _ciphers_main+104j
					; _ciphers_main+110j
		sbb	eax, eax
		or	eax, 1

loc_225:				; CODE XREF: _ciphers_main+11Ej
		test	eax, eax
		jnz	short loc_23E
		mov	[esp+230h+var_208], 1
		mov	[esp+230h+var_214], 1
		jmp	loc_30D
; ---------------------------------------------------------------------------

loc_23E:				; CODE XREF: _ciphers_main+127j
		mov	ecx, offset ??_C@_05IHFBIKKN@?9ssl3?$AA@ ; "-ssl3"
		mov	eax, esi

loc_245:				; CODE XREF: _ciphers_main+15Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_265
		test	dl, dl
		jz	short loc_261
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_265
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_245

loc_261:				; CODE XREF: _ciphers_main+14Dj
		xor	eax, eax
		jmp	short loc_26A
; ---------------------------------------------------------------------------

loc_265:				; CODE XREF: _ciphers_main+149j
					; _ciphers_main+155j
		sbb	eax, eax
		or	eax, 1

loc_26A:				; CODE XREF: _ciphers_main+163j
		test	eax, eax
		jnz	short loc_27C
		call	_SSLv3_client_method
		mov	[esp+230h+var_220], eax
		jmp	loc_30D
; ---------------------------------------------------------------------------

loc_27C:				; CODE XREF: _ciphers_main+16Cj
		mov	ecx, offset ??_C@_05BIEHJHLL@?9tls1?$AA@ ; "-tls1"
		mov	eax, esi

loc_283:				; CODE XREF: _ciphers_main+19Dj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2A3
		test	dl, dl
		jz	short loc_29F
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2A3
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_283

loc_29F:				; CODE XREF: _ciphers_main+18Bj
		xor	eax, eax
		jmp	short loc_2A8
; ---------------------------------------------------------------------------

loc_2A3:				; CODE XREF: _ciphers_main+187j
					; _ciphers_main+193j
		sbb	eax, eax
		or	eax, 1

loc_2A8:				; CODE XREF: _ciphers_main+1A1j
		test	eax, eax
		jnz	short loc_2B7
		call	_TLSv1_client_method
		mov	[esp+230h+var_220], eax
		jmp	short loc_30D
; ---------------------------------------------------------------------------

loc_2B7:				; CODE XREF: _ciphers_main+1AAj
		push	2		; MaxCount
		push	offset ??_C@_02JNAPBCPB@?9h?$AA@ ; "-h"
		push	esi		; Str1
		call	dword ptr ds:__imp__strncmp
		add	esp, 0Ch
		test	eax, eax
		jz	loc_3C1
		mov	eax, [edi]
		mov	ecx, offset ??_C@_02GIPFNJGC@?9?$DP?$AA@ ; `string'
		mov	[esp+230h+var_21C], eax
		nop	dword ptr [eax+eax+00h]

loc_2E0:				; CODE XREF: _ciphers_main+1FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_300
		test	dl, dl
		jz	short loc_2FC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_300
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2E0

loc_2FC:				; CODE XREF: _ciphers_main+1E8j
		xor	eax, eax
		jmp	short loc_305
; ---------------------------------------------------------------------------

loc_300:				; CODE XREF: _ciphers_main+1E4j
					; _ciphers_main+1F0j
		sbb	eax, eax
		or	eax, 1

loc_305:				; CODE XREF: _ciphers_main+1FEj
		test	eax, eax
		jz	loc_3C1

loc_30D:				; CODE XREF: _ciphers_main+F1j
					; _ciphers_main+139j ...
		dec	ebx
		add	edi, 4
		cmp	ebx, 1
		jge	loc_1B4

loc_31A:				; CODE XREF: _ciphers_main+AEj
		call	_SSL_library_init
		push	[esp+230h+var_220]
		call	_SSL_CTX_new
		mov	ebx, eax
		add	esp, 4
		mov	[esp+230h+var_210], ebx
		test	ebx, ebx
		jz	short loc_366
		mov	eax, [esp+230h+var_21C]
		test	eax, eax
		jz	loc_3F5
		push	eax
		push	ebx
		call	_SSL_CTX_set_cipher_list
		add	esp, 8
		test	eax, eax
		jnz	loc_3F5
		push	offset ??_C@_0BG@GFGOMLEN@Error?5in?5cipher?5list?6?$AA@ ; "Error in cipher list\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_366:				; CODE XREF: _ciphers_main+233j
		xor	edi, edi

$err$90:				; CODE XREF: _ciphers_main+306j
		call	_SSL_load_error_strings
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

$end$91:				; CODE XREF: _ciphers_main+37Dj
					; _ciphers_main+46Dj
		test	ebx, ebx
		jz	short loc_388
		push	ebx
		call	_SSL_CTX_free
		add	esp, 4

loc_388:				; CODE XREF: _ciphers_main+27Dj
		test	edi, edi
		jz	short loc_395
		push	edi
		call	_SSL_free
		add	esp, 4

loc_395:				; CODE XREF: _ciphers_main+28Aj
		mov	ebx, [esp+230h+var_20C]

loc_399:				; CODE XREF: _ciphers_main+9Aj
					; _ciphers_main+2F3j
		test	ebp, ebp
		jz	short loc_3A6
		push	ebp
		call	_BIO_free_all
		add	esp, 4

loc_3A6:				; CODE XREF: _ciphers_main+29Bj
		mov	ecx, [esp+230h+var_4]
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 220h
		retn
; ---------------------------------------------------------------------------

loc_3C1:				; CODE XREF: _ciphers_main+1CAj
					; _ciphers_main+207j
		mov	eax, _ciphers_usage
		mov	esi, offset _ciphers_usage
		test	eax, eax
		jz	short loc_3EE
		nop

loc_3D0:				; CODE XREF: _ciphers_main+2ECj
		push	eax
		push	offset ??_C@_02DKCKIIND@?$CFs?$AA@ ; `string'
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	eax, [esi+4]
		lea	esi, [esi+4]
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_3D0

loc_3EE:				; CODE XREF: _ciphers_main+2CDj
		mov	ebx, 1
		jmp	short loc_399
; ---------------------------------------------------------------------------

loc_3F5:				; CODE XREF: _ciphers_main+23Bj
					; _ciphers_main+24Dj
		push	ebx
		call	_SSL_new
		mov	edi, eax
		add	esp, 4
		mov	[esp+230h+var_220], edi
		test	edi, edi
		jz	$err$90
		cmp	[esp+230h+var_214], 0
		jnz	short loc_482
		xor	esi, esi
		push	esi
		push	edi
		call	_SSL_get_cipher_list
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jz	short loc_463
		mov	ebx, [esp+230h+var_220]
		nop	dword ptr [eax+00000000h]

loc_430:				; CODE XREF: _ciphers_main+35Dj
		test	esi, esi
		jz	short loc_442
		push	offset ??_C@_01JLIPDDHJ@?3?$AA@	; `string'
		push	ebp
		call	_BIO_printf
		add	esp, 8

loc_442:				; CODE XREF: _ciphers_main+332j
		push	edi
		push	offset ??_C@_02DKCKIIND@?$CFs?$AA@ ; `string'
		push	ebp
		call	_BIO_printf
		inc	esi
		push	esi
		push	ebx
		call	_SSL_get_cipher_list
		mov	edi, eax
		add	esp, 14h
		test	edi, edi
		jnz	short loc_430
		mov	ebx, [esp+230h+var_210]

loc_463:				; CODE XREF: _ciphers_main+323j
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	ebp
		call	_BIO_printf
		mov	edi, [esp+238h+var_220]
		add	esp, 8
		mov	[esp+230h+var_20C], 0
		jmp	$end$91
; ---------------------------------------------------------------------------

loc_482:				; CODE XREF: _ciphers_main+311j
		push	edi
		call	_SSL_get_ciphers
		mov	ebx, eax
		xor	esi, esi
		push	ebx
		call	_sk_num
		add	esp, 8
		test	eax, eax
		jle	loc_561
		nop	dword ptr [eax]

loc_4A0:				; CODE XREF: _ciphers_main+457j
		push	esi
		push	ebx
		call	_sk_value
		add	esp, 8
		mov	ebp, eax
		cmp	[esp+230h+var_208], 0
		jz	short loc_530
		push	ebp
		call	_SSL_CIPHER_get_id
		mov	ecx, eax
		add	esp, 4
		shr	eax, 10h
		mov	edi, ecx
		movzx	eax, al
		and	edi, 0FF000000h
		mov	[esp+230h+var_21C], eax
		mov	eax, ecx
		shr	eax, 8
		movzx	edx, cl
		movzx	eax, al
		push	edx
		push	eax
		cmp	edi, 2000000h
		jnz	short loc_4FC
		push	[esp+238h+var_21C]
		push	offset ??_C@_0BN@DGNNEJI@?5?5?5?5?50x?$CF02X?00x?$CF02X?00x?$CF02X?5?9?5?$AA@ ;	"     0x%02X,0x%02X,0x%02X - "
		push	[esp+240h+var_218]
		call	_BIO_printf
		add	esp, 14h
		jmp	short loc_530
; ---------------------------------------------------------------------------

loc_4FC:				; CODE XREF: _ciphers_main+3E3j
		cmp	edi, 3000000h
		jnz	short loc_517
		push	offset ??_C@_0BL@MOIFKCLN@?5?5?5?5?5?5?5?5?5?50x?$CF02X?00x?$CF02X?5?9?5?$AA@ ;	"	   0x%02X,0x%02X - "
		push	[esp+23Ch+var_218]
		call	_BIO_printf
		add	esp, 10h
		jmp	short loc_530
; ---------------------------------------------------------------------------

loc_517:				; CODE XREF: _ciphers_main+402j
		push	[esp+238h+var_21C]
		shr	ecx, 18h
		push	ecx
		push	offset ??_C@_0BP@PGNJAPNJ@0x?$CF02X?00x?$CF02X?00x?$CF02X?00x?$CF02X?5?9?5?$AA@	; "0x%02X,0x%02X,0x%02X,0x%02X - "
		push	[esp+244h+var_218]
		call	_BIO_printf
		add	esp, 18h

loc_530:				; CODE XREF: _ciphers_main+3B1j
					; _ciphers_main+3FAj ...
		push	200h
		lea	eax, [esp+234h+var_204]
		push	eax
		push	ebp
		call	_SSL_CIPHER_description
		mov	ebp, [esp+23Ch+var_218]
		push	eax
		push	ebp
		call	_BIO_puts
		push	ebx
		inc	esi
		call	_sk_num
		add	esp, 18h
		cmp	esi, eax
		jl	loc_4A0
		mov	edi, [esp+230h+var_220]

loc_561:				; CODE XREF: _ciphers_main+397j
		mov	ebx, [esp+230h+var_210]
		mov	[esp+230h+var_20C], 0
		jmp	$end$91
_ciphers_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 574h
; COMDAT (pick any)
		public ??_C@_02EJEOCNCO@?9v?$AA@
; `string'
??_C@_02EJEOCNCO@?9v?$AA@ db 2Dh, 76h, 0 ; DATA	XREF: _ciphers_main+B6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 578h
; COMDAT (pick any)
		public ??_C@_02NMMKAJIM@?9V?$AA@
; `string'
??_C@_02NMMKAJIM@?9V?$AA@ db 2Dh, 56h, 0 ; DATA	XREF: _ciphers_main:loc_1F6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 57Ch
; COMDAT (pick any)
		public ??_C@_05IHFBIKKN@?9ssl3?$AA@
; `string'
??_C@_05IHFBIKKN@?9ssl3?$AA@ db	'-ssl3',0 ; DATA XREF: _ciphers_main:loc_23Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 584h
; COMDAT (pick any)
		public ??_C@_05BIEHJHLL@?9tls1?$AA@
; `string'
??_C@_05BIEHJHLL@?9tls1?$AA@ db	'-tls1',0 ; DATA XREF: _ciphers_main:loc_27Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58Ch
; COMDAT (pick any)
		public ??_C@_02JNAPBCPB@?9h?$AA@
; char `string'[3]
??_C@_02JNAPBCPB@?9h?$AA@ db '-h',0     ; DATA XREF: _ciphers_main+1B9o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 590h
; COMDAT (pick any)
		public ??_C@_02GIPFNJGC@?9?$DP?$AA@
; `string'
??_C@_02GIPFNJGC@?9?$DP?$AA@ db	2Dh, 3Fh, 0 ; DATA XREF: _ciphers_main+1D2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 594h
; COMDAT (pick any)
		public ??_C@_02DKCKIIND@?$CFs?$AA@
; `string'
??_C@_02DKCKIIND@?$CFs?$AA@ db 25h, 73h, 0 ; DATA XREF:	_ciphers_main+2D1o
					; _ciphers_main+343o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 598h
; COMDAT (pick any)
		public ??_C@_0BG@GFGOMLEN@Error?5in?5cipher?5list?6?$AA@
; `string'
??_C@_0BG@GFGOMLEN@Error?5in?5cipher?5list?6?$AA@ db 'Error in cipher list',0Ah,0
					; DATA XREF: _ciphers_main+253o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5B0h
; COMDAT (pick any)
		public ??_C@_01JLIPDDHJ@?3?$AA@
; `string'
??_C@_01JLIPDDHJ@?3?$AA@ db 3Ah, 0	; DATA XREF: _ciphers_main+334o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5B4h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah, 0	; DATA XREF: _ciphers_main:loc_463o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5B8h
; COMDAT (pick any)
		public ??_C@_0BN@DGNNEJI@?5?5?5?5?50x?$CF02X?00x?$CF02X?00x?$CF02X?5?9?5?$AA@
; `string'
??_C@_0BN@DGNNEJI@?5?5?5?5?50x?$CF02X?00x?$CF02X?00x?$CF02X?5?9?5?$AA@ db '     0x%02X,0x%02X,0x%02X - ',0
					; DATA XREF: _ciphers_main+3E9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5D8h
; COMDAT (pick any)
		public ??_C@_0BL@MOIFKCLN@?5?5?5?5?5?5?5?5?5?50x?$CF02X?00x?$CF02X?5?9?5?$AA@
; `string'
??_C@_0BL@MOIFKCLN@?5?5?5?5?5?5?5?5?5?50x?$CF02X?00x?$CF02X?5?9?5?$AA@ db '          0x%02X,0x%02X - ',0
					; DATA XREF: _ciphers_main+404o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5F4h
; COMDAT (pick any)
		public ??_C@_0BP@PGNJAPNJ@0x?$CF02X?00x?$CF02X?00x?$CF02X?00x?$CF02X?5?9?5?$AA@
; `string'
??_C@_0BP@PGNJAPNJ@0x?$CF02X?00x?$CF02X?00x?$CF02X?00x?$CF02X?5?9?5?$AA@ db '0x%02X,0x%02X,0x%02X,0x%02X - ',0
					; DATA XREF: _ciphers_main+41Fo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _ciphers_main+60p
					; _ciphers_main+77p
					; DATA XREF: ...
; int __cdecl _strncmp(const char *Str1, const char *Str2, size_t MaxCount)
		extrn __imp__strncmp:near ; CODE XREF: _ciphers_main+1BFp
					; DATA XREF: _ciphers_main+1BFr
		extrn _sk_num:near	; CODE XREF: _ciphers_main+38Dp
					; _ciphers_main+44Dp
		extrn _sk_value:near	; CODE XREF: _ciphers_main+3A2p
		extrn _BIO_new_fp:near	; CODE XREF: _ciphers_main+66p
					; _ciphers_main+7Dp
		extrn _BIO_puts:near	; CODE XREF: _ciphers_main+446p
		extrn _BIO_free_all:near ; CODE	XREF: _ciphers_main+29Ep
		extrn _BIO_printf:near	; CODE XREF: _ciphers_main+25Ep
					; _ciphers_main+2DCp ...
		extrn _ERR_print_errors:near ; CODE XREF: _ciphers_main+273p
		extrn _load_config:near	; CODE XREF: _ciphers_main+90p
		extrn _SSL_CTX_set_cipher_list:near ; CODE XREF: _ciphers_main+243p
		extrn _SSL_CTX_new:near	; CODE XREF: _ciphers_main+223p
		extrn _SSL_CTX_free:near ; CODE	XREF: _ciphers_main+280p
		extrn _SSL_CIPHER_get_id:near ;	CODE XREF: _ciphers_main+3B4p
		extrn _SSL_get_cipher_list:near	; CODE XREF: _ciphers_main+317p
					; _ciphers_main+351p
		extrn _SSL_load_error_strings:near ; CODE XREF:	_ciphers_main:$err$90p
		extrn _SSL_new:near	; CODE XREF: _ciphers_main+2F6p
		extrn _SSL_free:near	; CODE XREF: _ciphers_main+28Dp
		extrn _SSLv3_client_method:near	; CODE XREF: _ciphers_main+16Ep
		extrn _SSLv23_server_method:near ; CODE	XREF: _ciphers_main+44p
		extrn _TLSv1_client_method:near	; CODE XREF: _ciphers_main+1ACp
		extrn _SSL_get_ciphers:near ; CODE XREF: _ciphers_main+383p
		extrn _SSL_library_init:near ; CODE XREF: _ciphers_main:loc_31Ap
		extrn _SSL_CIPHER_description:near ; CODE XREF:	_ciphers_main+43Bp
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _ciphers_main+2B5p
		extrn __chkstk:near	; CODE XREF: _ciphers_main+5p
		extrn _bio_err:near	; DATA XREF: _ciphers_main+49r
					; _ciphers_main+6Ew ...
		extrn ___security_cookie:near ;	DATA XREF: _ciphers_main+Ar


		end

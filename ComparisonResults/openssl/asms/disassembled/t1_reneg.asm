;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	D2632EB824223280163AD7518B3A7C83
; Input	CRC32 :	851E7D55

; File Name   :	C:\compspace\Diff\openssl\obj\t1_reneg.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ssl_add_clienthello_renegotiate_ext
_ssl_add_clienthello_renegotiate_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	edx, [esp+arg_4]
		push	esi
		mov	esi, [esp+4+arg_0]
		test	edx, edx
		jz	short loc_5F
		mov	eax, [esi+58h]
		mov	cl, [eax+3D4h]
		movzx	eax, cl
		inc	eax
		cmp	eax, [esp+4+arg_C]
		jle	short loc_3F
		push	7Ah ; 'z'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	14Fh
		push	12Ah
		push	14h
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_3F:					; CODE XREF: _ssl_add_clienthello_renegotiate_ext+1Ej
		mov	[edx], cl
		mov	ecx, [esi+58h]
		movzx	eax, byte ptr [ecx+3D4h]
		push	eax		; Size
		lea	eax, [ecx+394h]
		push	eax		; Src
		lea	eax, [edx+1]
		push	eax		; Dst
		call	_memcpy
		add	esp, 0Ch

loc_5F:					; CODE XREF: _ssl_add_clienthello_renegotiate_ext+Bj
		mov	eax, [esi+58h]
		pop	esi
		movzx	ecx, byte ptr [eax+3D4h]
		mov	eax, [esp+arg_8]
		inc	ecx
		mov	[eax], ecx
		mov	eax, 1
		retn
_ssl_add_clienthello_renegotiate_ext endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 78h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ssl_add_serverhello_renegotiate_ext
_ssl_add_serverhello_renegotiate_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		push	esi
		mov	esi, [esp+8+arg_4]
		push	edi
		mov	edi, [esp+0Ch+arg_0]
		test	esi, esi
		jz	loc_10E
		mov	eax, [edi+58h]
		mov	bl, [eax+415h]
		mov	dl, [eax+3D4h]
		movzx	eax, bl
		inc	eax
		movzx	ecx, dl
		add	eax, ecx
		cmp	eax, [esp+0Ch+arg_C]
		jle	short loc_CD
		push	0CAh ; 'Ê'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	14Fh
		push	12Bh
		push	14h
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_CD:					; CODE XREF: _ssl_add_serverhello_renegotiate_ext+2Fj
		add	dl, bl
		mov	[esi], dl
		inc	esi
		mov	ecx, [edi+58h]
		movzx	eax, byte ptr [ecx+3D4h]
		push	eax		; Size
		lea	eax, [ecx+394h]
		push	eax		; Src
		push	esi		; Dst
		call	_memcpy
		mov	ecx, [edi+58h]
		movzx	eax, byte ptr [ecx+415h]
		push	eax		; Size
		lea	eax, [ecx+3D5h]
		push	eax		; Src
		movzx	eax, byte ptr [ecx+3D4h]
		add	eax, esi
		push	eax		; Dst
		call	_memcpy
		add	esp, 18h

loc_10E:				; CODE XREF: _ssl_add_serverhello_renegotiate_ext+Dj
		mov	eax, [edi+58h]
		pop	edi
		pop	esi
		pop	ebx
		movzx	ecx, byte ptr [eax+415h]
		movzx	eax, byte ptr [eax+3D4h]
		inc	eax
		add	ecx, eax
		mov	eax, [esp+arg_8]
		mov	[eax], ecx
		mov	eax, 1
		retn
_ssl_add_serverhello_renegotiate_ext endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 134h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ssl_parse_clienthello_renegotiate_ext
_ssl_parse_clienthello_renegotiate_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	ecx, [esp+arg_8]
		cmp	ecx, 1
		jge	short loc_168
		push	9Ah ; 'š'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	150h
		push	12Ch
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+14h+arg_C]
		add	esp, 14h
		mov	dword ptr [eax], 2Fh ; '/'
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_168:				; CODE XREF: _ssl_parse_clienthello_renegotiate_ext+7j
		push	edi
		mov	edi, [esp+4+arg_4]
		movzx	edx, byte ptr [edi]
		lea	eax, [edx+1]
		cmp	eax, ecx
		jz	short loc_1A3
		push	0A4h ; '¤'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	150h
		push	12Ch
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+18h+arg_C]
		add	esp, 14h
		mov	dword ptr [eax], 2Fh ; '/'
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_1A3:				; CODE XREF: _ssl_parse_clienthello_renegotiate_ext+41j
		mov	eax, [esp+4+arg_0]
		push	ebx
		mov	ebx, [eax+58h]
		movzx	ecx, byte ptr [ebx+3D4h]
		cmp	edx, ecx
		jz	short loc_1E3
		push	0ACh ; '¬'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	151h
		push	12Ch
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+1Ch+arg_C]
		add	esp, 14h
		pop	ebx
		mov	dword ptr [eax], 28h ; '('
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_1E3:				; CODE XREF: _ssl_parse_clienthello_renegotiate_ext+80j
		lea	edx, [edi+1]
		push	esi
		lea	esi, [ebx+394h]
		sub	ecx, 4
		jb	short loc_205
		xchg	ax, ax

loc_1F4:				; CODE XREF: _ssl_parse_clienthello_renegotiate_ext+CFj
		mov	eax, [edx]
		cmp	eax, [esi]
		jnz	short loc_20A
		add	edx, 4
		add	esi, 4
		sub	ecx, 4
		jnb	short loc_1F4

loc_205:				; CODE XREF: _ssl_parse_clienthello_renegotiate_ext+BCj
		cmp	ecx, 0FFFFFFFCh
		jz	short loc_265

loc_20A:				; CODE XREF: _ssl_parse_clienthello_renegotiate_ext+C4j
		mov	al, [edx]
		cmp	al, [esi]
		jnz	short loc_237
		cmp	ecx, 0FFFFFFFDh
		jz	short loc_265
		mov	al, [edx+1]
		cmp	al, [esi+1]
		jnz	short loc_237
		cmp	ecx, 0FFFFFFFEh
		jz	short loc_265
		mov	al, [edx+2]
		cmp	al, [esi+2]
		jnz	short loc_237
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_265
		mov	al, [edx+3]
		cmp	al, [esi+3]
		jz	short loc_265

loc_237:				; CODE XREF: _ssl_parse_clienthello_renegotiate_ext+DAj
					; _ssl_parse_clienthello_renegotiate_ext+E7j ...
		push	0B4h ; '´'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	151h
		push	12Ch
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+20h+arg_C]
		add	esp, 14h
		pop	esi
		pop	ebx
		mov	dword ptr [eax], 28h ; '('
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_265:				; CODE XREF: _ssl_parse_clienthello_renegotiate_ext+D4j
					; _ssl_parse_clienthello_renegotiate_ext+DFj ...
		pop	esi
		mov	dword ptr [ebx+418h], 1
		mov	eax, 1
		pop	ebx
		pop	edi
		retn
_ssl_parse_clienthello_renegotiate_ext endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 278h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ssl_parse_serverhello_renegotiate_ext
_ssl_parse_serverhello_renegotiate_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	edi
		mov	edi, [esp+8+arg_0]
		mov	eax, [edi+58h]
		mov	cl, [eax+3D4h]
		movzx	esi, byte ptr [eax+415h]
		movzx	eax, cl
		add	esi, eax
		jz	short loc_2D3
		test	cl, cl
		jnz	short loc_2B0
		push	offset ??_C@_0DF@FOJLJJF@?$CBexpected_len?5?$HM?$HM?5s?9?$DOs3?9?$DOprevious@ ;	"!expected_len || s->s3->previous_client"...
		push	0F0h ; 'ð'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		call	_OpenSSLDie
		add	esp, 0Ch

loc_2B0:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+1Fj
		mov	eax, [edi+58h]
		cmp	byte ptr [eax+415h], 0
		jnz	short loc_2D3
		push	offset ??_C@_0DF@NEPCJNKN@?$CBexpected_len?5?$HM?$HM?5s?9?$DOs3?9?$DOprevious@ ; "!expected_len	|| s->s3->previous_server"...
		push	0F1h ; 'ñ'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		call	_OpenSSLDie
		add	esp, 0Ch

loc_2D3:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+1Bj
					; _ssl_parse_serverhello_renegotiate_ext+42j
		mov	ecx, [esp+8+arg_8]
		cmp	ecx, 1
		jge	short loc_309
		push	0F6h ; 'ö'
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	150h
		push	12Dh
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+1Ch+arg_C]
		add	esp, 14h
		pop	edi
		mov	dword ptr [eax], 2Fh ; '/'
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_309:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+62j
		push	ebx
		mov	ebx, [esp+0Ch+arg_4]
		movzx	edx, byte ptr [ebx]
		inc	ebx
		lea	eax, [edx+1]
		cmp	eax, ecx
		jz	short loc_347
		push	100h
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	150h
		push	12Dh
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+20h+arg_C]
		add	esp, 14h
		pop	ebx
		pop	edi
		mov	dword ptr [eax], 2Fh ; '/'
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_347:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+9Fj
		cmp	edx, esi
		jz	short loc_379
		push	108h
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	151h
		push	12Dh
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+20h+arg_C]
		add	esp, 14h
		pop	ebx
		pop	edi
		mov	dword ptr [eax], 28h ; '('
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_379:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+D1j
		mov	edi, [edi+58h]
		mov	edx, ebx
		push	ebp
		movzx	ebp, byte ptr [edi+3D4h]
		lea	esi, [edi+394h]
		mov	ecx, ebp
		sub	ecx, 4
		jb	short loc_3A9
		nop	dword ptr [eax+eax+00h]

loc_398:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+12Fj
		mov	eax, [edx]
		cmp	eax, [esi]
		jnz	short loc_3AE
		add	edx, 4
		add	esi, 4
		sub	ecx, 4
		jnb	short loc_398

loc_3A9:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+119j
		cmp	ecx, 0FFFFFFFCh
		jz	short loc_40A

loc_3AE:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+124j
		mov	al, [edx]
		cmp	al, [esi]
		jnz	short loc_3DB
		cmp	ecx, 0FFFFFFFDh
		jz	short loc_40A
		mov	al, [edx+1]
		cmp	al, [esi+1]
		jnz	short loc_3DB
		cmp	ecx, 0FFFFFFFEh
		jz	short loc_40A
		mov	al, [edx+2]
		cmp	al, [esi+2]
		jnz	short loc_3DB
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_40A
		mov	al, [edx+3]
		cmp	al, [esi+3]
		jz	short loc_40A

loc_3DB:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+13Aj
					; _ssl_parse_serverhello_renegotiate_ext+147j ...
		push	110h
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	151h
		push	12Dh
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+24h+arg_C]
		add	esp, 14h
		pop	ebp
		pop	ebx
		pop	edi
		mov	dword ptr [eax], 28h ; '('
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_40A:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+134j
					; _ssl_parse_serverhello_renegotiate_ext+13Fj ...
		movzx	esi, byte ptr [edi+415h]
		lea	edx, [edi+3D5h]
		lea	ecx, [ebx+ebp]
		sub	esi, 4
		jb	short loc_430

loc_41F:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+1B6j
		mov	eax, [ecx]
		cmp	eax, [edx]
		jnz	short loc_435
		add	ecx, 4
		add	edx, 4
		sub	esi, 4
		jnb	short loc_41F

loc_430:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+1A5j
		cmp	esi, 0FFFFFFFCh
		jz	short loc_491

loc_435:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+1ABj
		mov	al, [ecx]
		cmp	al, [edx]
		jnz	short loc_462
		cmp	esi, 0FFFFFFFDh
		jz	short loc_491
		mov	al, [ecx+1]
		cmp	al, [edx+1]
		jnz	short loc_462
		cmp	esi, 0FFFFFFFEh
		jz	short loc_491
		mov	al, [ecx+2]
		cmp	al, [edx+2]
		jnz	short loc_462
		cmp	esi, 0FFFFFFFFh
		jz	short loc_491
		mov	al, [ecx+3]
		cmp	al, [edx+3]
		jz	short loc_491

loc_462:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+1C1j
					; _ssl_parse_serverhello_renegotiate_ext+1CEj ...
		push	119h
		push	offset ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ ; ".\\ssl\\t1_reneg.c"
		push	151h
		push	12Dh
		push	14h
		call	_ERR_put_error
		mov	eax, [esp+24h+arg_C]
		add	esp, 14h
		pop	ebp
		pop	ebx
		pop	edi
		mov	dword ptr [eax], 2Fh ; '/'
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_491:				; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+1BBj
					; _ssl_parse_serverhello_renegotiate_ext+1C6j ...
		pop	ebp
		pop	ebx
		mov	dword ptr [edi+418h], 1
		mov	eax, 1
		pop	edi
		pop	esi
		retn
_ssl_parse_serverhello_renegotiate_ext endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A8h
; COMDAT (pick any)
		public ??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@
; `string'
??_C@_0BB@PAPPDELN@?4?2ssl?2t1_reneg?4c?$AA@ db	'.\ssl\t1_reneg.c',0
					; DATA XREF: _ssl_add_clienthello_renegotiate_ext+22o
					; _ssl_add_serverhello_renegotiate_ext+36o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4BCh
; COMDAT (pick any)
		public ??_C@_0DF@FOJLJJF@?$CBexpected_len?5?$HM?$HM?5s?9?$DOs3?9?$DOprevious@
; `string'
??_C@_0DF@FOJLJJF@?$CBexpected_len?5?$HM?$HM?5s?9?$DOs3?9?$DOprevious@ db '!expected_len || s->s3->previous_client_finished_len',0
					; DATA XREF: _ssl_parse_serverhello_renegotiate_ext+21o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4F4h
; COMDAT (pick any)
		public ??_C@_0DF@NEPCJNKN@?$CBexpected_len?5?$HM?$HM?5s?9?$DOs3?9?$DOprevious@
; `string'
??_C@_0DF@NEPCJNKN@?$CBexpected_len?5?$HM?$HM?5s?9?$DOs3?9?$DOprevious@	db '!expected_len || s->s3->previous_server_finished_len',0
					; DATA XREF: _ssl_parse_serverhello_renegotiate_ext+44o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _OpenSSLDie:near	; CODE XREF: _ssl_parse_serverhello_renegotiate_ext+30p
					; _ssl_parse_serverhello_renegotiate_ext+53p
		extrn _ERR_put_error:near
					; CODE XREF: _ssl_add_clienthello_renegotiate_ext+33p
					; _ssl_add_serverhello_renegotiate_ext+47p ...
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _ssl_add_clienthello_renegotiate_ext+57p
					; _ssl_add_serverhello_renegotiate_ext+6Dp ...


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F0D48971795BD67380E769A0EAC6D001
; Input	CRC32 :	823F5281

; File Name   :	C:\compspace\Diff\openssl\obj\s_time.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
_host		dd offset ??_C@_0P@IIPDLKPA@localhost?34433?$AA@
					; DATA XREF: _doConnection+4Dr
					; _parseArgs+69w ...
					; "localhost:4433"
_maxTime	dd 1Eh			; DATA XREF: _parseArgs+45Fw
					; _s_time_init+46w ...
; char `s_time_usage'::`2'::umsg[]
?umsg@?1??s_time_usage@@9@9 db '-time arg     - max number of seconds to collect data, default %d'
					; DATA XREF: _s_time_usage+61o
		db 0Ah
		db '-verify arg   - turn on peer certificate verification, arg == dep'
		db 'th',0Ah
		db '-cert arg     - certificate file to use, PEM format assumed',0Ah
		db '-key arg      - RSA file to use, PEM format assumed, key is in ce'
		db 'rt file',0Ah
		db '                file if not specified by this option',0Ah
		db '-CApath arg   - PEM format directory of CA',27h,'s',0Ah
		db '-CAfile arg   - PEM format file of CA',27h,'s',0Ah
		db '-cipher       - preferred cipher to use, play with ',27h,'openssl ci'
		db 'phers',27h,0Ah
		db 0Ah,0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1E4h
; COMDAT (pick any)
		public ??_C@_0P@IIPDLKPA@localhost?34433?$AA@
; `string'
??_C@_0P@IIPDLKPA@localhost?34433?$AA@ db 'localhost:4433',0 ; DATA XREF: .data:_hosto
					; _s_time_inito ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 1F4h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
_t_cert_file	dd ?			; DATA XREF: _parseArgs+1A9w
					; _s_time_init+Aw ...
_t_key_file	dd ?			; DATA XREF: _parseArgs+1F9w
					; _s_time_init+14w ...
_CApath		dd ?			; DATA XREF: _parseArgs+249w
					; _s_time_init+1Ew ...
_CAfile		dd ?			; DATA XREF: _parseArgs+299w
					; _s_time_init+28w ...
_tm_cipher	dd ?			; DATA XREF: _parseArgs+2E9w
					; _s_time_init+32w ...
_tm_verify	dd ?			; DATA XREF: _parseArgs+12Aw
					; _s_time_init+3Cw
_tm_ctx		dd ?			; DATA XREF: _doConnection+64r
					; _s_time_init+50w ...
_s_time_meth	dd ?			; DATA XREF: _parseArgs+415w
					; _s_time_init+5Aw ...
_s_www_path	dd ?			; DATA XREF: _parseArgs+379w
					; _s_time_init+64w ...
_bytes_read	dd ?			; DATA XREF: _s_time_init+6Ew
					; _s_time_main+1A4w ...
_st_bugs	dd ?			; DATA XREF: _parseArgs+3D1w
					; _s_time_init+78w ...
_perform	dd ?			; DATA XREF: _parseArgs+A9w
					; _parseArgs+E9w ...
_t_nbio		dd ?			; DATA XREF: _parseArgs+329w
					; _s_time_init+8Cw
_exitNow	dd ?			; DATA XREF: _s_time_init+96w
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 22Ch
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _fprintf+Fp ...
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 234h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 258h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_doConnection	proc near		; CODE XREF: _s_time_main+1E2p
					; _s_time_main+3D2p ...

readfds		= fd_set ptr -108h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 108h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+108h+var_4], eax
		push	ebx
		mov	ebx, [esp+10Ch+arg_0]
		push	edi
		call	_BIO_s_connect
		push	eax
		call	_BIO_new
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jnz	short loc_2A4
		pop	edi
		pop	ebx
		mov	ecx, [esp+108h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 108h
		retn
; ---------------------------------------------------------------------------

loc_2A4:				; CODE XREF: _doConnection+33j
		push	esi
		push	_host
		push	0
		push	64h ; 'd'
		push	edi
		call	_BIO_ctrl
		add	esp, 10h
		test	ebx, ebx
		jnz	short loc_2CB
		push	ds:_tm_ctx
		call	_SSL_new
		mov	esi, eax
		jmp	short loc_2D3
; ---------------------------------------------------------------------------

loc_2CB:				; CODE XREF: _doConnection+62j
		push	ebx
		mov	esi, ebx
		call	_SSL_set_connect_state

loc_2D3:				; CODE XREF: _doConnection+71j
		add	esp, 4
		push	edi
		push	edi
		push	esi
		call	_SSL_set_bio
		push	esi
		call	_SSL_connect
		mov	edi, eax
		push	edi
		call	_BIO_sock_should_retry
		add	esp, 14h
		test	eax, eax
		jz	short loc_354
		push	ebp
		mov	ebp, dword ptr ds:__imp__select@20 ; select(x,x,x,x,x)
		nop	dword ptr [eax+00h]
		db	66h, 66h
		nop	word ptr [eax+eax+00000000h]

loc_308:				; CODE XREF: _doConnection+F9j
		push	offset ??_C@_06KKGLJNJB@DELAY?6?$AA@ ; "DELAY\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	esi
		call	_SSL_get_fd
		add	esp, 0Ch
		mov	[esp+118h+readfds.fd_array], eax
		mov	[esp+118h+readfds.fd_count], 1
		lea	ecx, [eax+1]
		push	0		; timeout
		push	0		; exceptfds
		push	0		; writefds
		lea	eax, [esp+124h+readfds]
		push	eax		; readfds
		push	ecx		; nfds
		call	ebp ; select(x,x,x,x,x)	; select(x,x,x,x,x)
		push	esi
		call	_SSL_connect
		mov	edi, eax
		push	edi
		call	_BIO_sock_should_retry
		add	esp, 8
		test	eax, eax
		jnz	short loc_308
		pop	ebp

loc_354:				; CODE XREF: _doConnection+99j
		test	edi, edi
		jg	short loc_3C5
		push	offset ??_C@_06CBJFBFDH@ERROR?6?$AA@ ; "ERROR\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	eax, dword ptr ds:_verify_error
		add	esp, 8
		test	eax, eax
		jz	short loc_390
		push	eax
		call	_X509_verify_cert_error_string
		push	eax
		push	offset ??_C@_0BB@EHGPOOCJ@verify?5error?3?$CFs?6?$AA@ ;	"verify	error:%s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h
		jmp	short loc_39E
; ---------------------------------------------------------------------------

loc_390:				; CODE XREF: _doConnection+11Aj
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

loc_39E:				; CODE XREF: _doConnection+136j
		test	ebx, ebx
		jnz	short loc_3AB
		push	esi
		call	_SSL_free
		add	esp, 4

loc_3AB:				; CODE XREF: _doConnection+148j
		pop	esi
		pop	edi
		xor	eax, eax
		pop	ebx
		mov	ecx, [esp+108h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 108h
		retn
; ---------------------------------------------------------------------------

loc_3C5:				; CODE XREF: _doConnection+FEj
		mov	ecx, [esp+114h+var_4]
		mov	eax, esi
		pop	esi
		pop	edi
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 108h
		retn
_doConnection	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3E0h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int fprintf(FILE *File, const	char *Format, ...)
		public _fprintf
_fprintf	proc near		; CODE XREF: _s_time_main+177p
					; _s_time_main+3EDp

File		= dword	ptr  4
Format		= dword	ptr  8
arg_8		= byte ptr  0Ch

		lea	eax, [esp+arg_8]
		push	eax
		push	0
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
_fprintf	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 404h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_parseArgs	proc near		; CODE XREF: _s_time_main+65p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		push	ebp
		push	esi
		mov	esi, [esp+0Ch+arg_0]
		xor	ebp, ebp
		push	edi
		mov	edi, [esp+10h+arg_4]
		dec	esi
		add	edi, 4
		mov	dword ptr ds:_verify_depth, ebp
		mov	dword ptr ds:_verify_error, ebp
		cmp	esi, 1
		jl	loc_8AD

loc_42B:				; CODE XREF: _parseArgs+487j
		mov	ebx, [edi]
		mov	ecx, offset ??_C@_08FABEHMEN@?9connect?$AA@ ; "-connect"
		mov	eax, ebx

loc_434:				; CODE XREF: _parseArgs+4Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_454
		test	dl, dl
		jz	short loc_450
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_454
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_434

loc_450:				; CODE XREF: _parseArgs+38j
		xor	eax, eax
		jmp	short loc_459
; ---------------------------------------------------------------------------

loc_454:				; CODE XREF: _parseArgs+34j
					; _parseArgs+40j
		sbb	eax, eax
		or	eax, 1

loc_459:				; CODE XREF: _parseArgs+4Ej
		test	eax, eax
		jnz	short loc_477
		dec	esi
		cmp	esi, 1
		jl	$bad$120
		mov	eax, [edi+4]
		add	edi, 4
		mov	_host, eax
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_477:				; CODE XREF: _parseArgs+57j
		mov	ecx, offset ??_C@_06MJBNDFGP@?9reuse?$AA@ ; "-reuse"
		mov	eax, ebx
		nop	word ptr [eax+eax+00h]

loc_484:				; CODE XREF: _parseArgs+9Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4A4
		test	dl, dl
		jz	short loc_4A0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4A4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_484

loc_4A0:				; CODE XREF: _parseArgs+88j
		xor	eax, eax
		jmp	short loc_4A9
; ---------------------------------------------------------------------------

loc_4A4:				; CODE XREF: _parseArgs+84j
					; _parseArgs+90j
		sbb	eax, eax
		or	eax, 1

loc_4A9:				; CODE XREF: _parseArgs+9Ej
		test	eax, eax
		jnz	short loc_4BC
		mov	ds:_perform, 2
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_4BC:				; CODE XREF: _parseArgs+A7j
		mov	ecx, offset ??_C@_04PFBHIFJN@?9new?$AA@	; "-new"
		mov	eax, ebx
		nop

loc_4C4:				; CODE XREF: _parseArgs+DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4E4
		test	dl, dl
		jz	short loc_4E0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4E4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4C4

loc_4E0:				; CODE XREF: _parseArgs+C8j
		xor	eax, eax
		jmp	short loc_4E9
; ---------------------------------------------------------------------------

loc_4E4:				; CODE XREF: _parseArgs+C4j
					; _parseArgs+D0j
		sbb	eax, eax
		or	eax, 1

loc_4E9:				; CODE XREF: _parseArgs+DEj
		test	eax, eax
		jnz	short loc_4FC
		mov	ds:_perform, 1
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_4FC:				; CODE XREF: _parseArgs+E7j
		mov	ecx, offset ??_C@_07FILEFCOC@?9verify?$AA@ ; "-verify"
		mov	eax, ebx
		nop

loc_504:				; CODE XREF: _parseArgs+11Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_524
		test	dl, dl
		jz	short loc_520
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_524
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_504

loc_520:				; CODE XREF: _parseArgs+108j
		xor	eax, eax
		jmp	short loc_529
; ---------------------------------------------------------------------------

loc_524:				; CODE XREF: _parseArgs+104j
					; _parseArgs+110j
		sbb	eax, eax
		or	eax, 1

loc_529:				; CODE XREF: _parseArgs+11Ej
		test	eax, eax
		jnz	short loc_56B
		dec	esi
		mov	ds:_tm_verify, 5
		cmp	esi, 1
		jl	$bad$120
		push	dword ptr [edi+4] ; Str
		add	edi, 4
		call	dword ptr ds:__imp__atoi
		push	eax
		push	offset ??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@ ; "verify depth is %d\n"
		push	dword ptr ds:_bio_err
		mov	dword ptr ds:_verify_depth, eax
		call	_BIO_printf
		add	esp, 10h
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_56B:				; CODE XREF: _parseArgs+127j
		mov	ecx, offset ??_C@_05DLEDECNE@?9cert?$AA@ ; "-cert"
		mov	eax, ebx
		xchg	ax, ax

loc_574:				; CODE XREF: _parseArgs+18Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_594
		test	dl, dl
		jz	short loc_590
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_594
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_574

loc_590:				; CODE XREF: _parseArgs+178j
		xor	eax, eax
		jmp	short loc_599
; ---------------------------------------------------------------------------

loc_594:				; CODE XREF: _parseArgs+174j
					; _parseArgs+180j
		sbb	eax, eax
		or	eax, 1

loc_599:				; CODE XREF: _parseArgs+18Ej
		test	eax, eax
		jnz	short loc_5B7
		dec	esi
		cmp	esi, 1
		jl	$bad$120
		mov	eax, [edi+4]
		add	edi, 4
		mov	ds:_t_cert_file, eax
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_5B7:				; CODE XREF: _parseArgs+197j
		mov	ecx, offset ??_C@_04FMEKFICB@?9key?$AA@	; "-key"
		mov	eax, ebx
		nop	word ptr [eax+eax+00h]

loc_5C4:				; CODE XREF: _parseArgs+1DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5E4
		test	dl, dl
		jz	short loc_5E0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5E4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5C4

loc_5E0:				; CODE XREF: _parseArgs+1C8j
		xor	eax, eax
		jmp	short loc_5E9
; ---------------------------------------------------------------------------

loc_5E4:				; CODE XREF: _parseArgs+1C4j
					; _parseArgs+1D0j
		sbb	eax, eax
		or	eax, 1

loc_5E9:				; CODE XREF: _parseArgs+1DEj
		test	eax, eax
		jnz	short loc_607
		dec	esi
		cmp	esi, 1
		jl	$bad$120
		mov	eax, [edi+4]
		add	edi, 4
		mov	ds:_t_key_file,	eax
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_607:				; CODE XREF: _parseArgs+1E7j
		mov	ecx, offset ??_C@_07MNNNLALG@?9CApath?$AA@ ; "-CApath"
		mov	eax, ebx
		nop	word ptr [eax+eax+00h]

loc_614:				; CODE XREF: _parseArgs+22Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_634
		test	dl, dl
		jz	short loc_630
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_634
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_614

loc_630:				; CODE XREF: _parseArgs+218j
		xor	eax, eax
		jmp	short loc_639
; ---------------------------------------------------------------------------

loc_634:				; CODE XREF: _parseArgs+214j
					; _parseArgs+220j
		sbb	eax, eax
		or	eax, 1

loc_639:				; CODE XREF: _parseArgs+22Ej
		test	eax, eax
		jnz	short loc_657
		dec	esi
		cmp	esi, 1
		jl	$bad$120
		mov	eax, [edi+4]
		add	edi, 4
		mov	ds:_CApath, eax
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_657:				; CODE XREF: _parseArgs+237j
		mov	ecx, offset ??_C@_07EAFCHGPO@?9CAfile?$AA@ ; "-CAfile"
		mov	eax, ebx
		nop	word ptr [eax+eax+00h]

loc_664:				; CODE XREF: _parseArgs+27Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_684
		test	dl, dl
		jz	short loc_680
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_684
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_664

loc_680:				; CODE XREF: _parseArgs+268j
		xor	eax, eax
		jmp	short loc_689
; ---------------------------------------------------------------------------

loc_684:				; CODE XREF: _parseArgs+264j
					; _parseArgs+270j
		sbb	eax, eax
		or	eax, 1

loc_689:				; CODE XREF: _parseArgs+27Ej
		test	eax, eax
		jnz	short loc_6A7
		dec	esi
		cmp	esi, 1
		jl	$bad$120
		mov	eax, [edi+4]
		add	edi, 4
		mov	ds:_CAfile, eax
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_6A7:				; CODE XREF: _parseArgs+287j
		mov	ecx, offset ??_C@_07DJFOHCGH@?9cipher?$AA@ ; "-cipher"
		mov	eax, ebx
		nop	word ptr [eax+eax+00h]

loc_6B4:				; CODE XREF: _parseArgs+2CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_6D4
		test	dl, dl
		jz	short loc_6D0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_6D4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_6B4

loc_6D0:				; CODE XREF: _parseArgs+2B8j
		xor	eax, eax
		jmp	short loc_6D9
; ---------------------------------------------------------------------------

loc_6D4:				; CODE XREF: _parseArgs+2B4j
					; _parseArgs+2C0j
		sbb	eax, eax
		or	eax, 1

loc_6D9:				; CODE XREF: _parseArgs+2CEj
		test	eax, eax
		jnz	short loc_6F7
		dec	esi
		cmp	esi, 1
		jl	$bad$120
		mov	eax, [edi+4]
		add	edi, 4
		mov	ds:_tm_cipher, eax
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_6F7:				; CODE XREF: _parseArgs+2D7j
		mov	ecx, offset ??_C@_05OHEBDJNH@?9nbio?$AA@ ; "-nbio"
		mov	eax, ebx
		nop	word ptr [eax+eax+00h]

loc_704:				; CODE XREF: _parseArgs+31Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_724
		test	dl, dl
		jz	short loc_720
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_724
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_704

loc_720:				; CODE XREF: _parseArgs+308j
		xor	eax, eax
		jmp	short loc_729
; ---------------------------------------------------------------------------

loc_724:				; CODE XREF: _parseArgs+304j
					; _parseArgs+310j
		sbb	eax, eax
		or	eax, 1

loc_729:				; CODE XREF: _parseArgs+31Ej
		test	eax, eax
		jnz	short loc_73C
		mov	ds:_t_nbio, 1
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_73C:				; CODE XREF: _parseArgs+327j
		mov	ecx, offset ??_C@_04MHKEOKJG@?9www?$AA@	; "-www"
		mov	eax, ebx
		nop

loc_744:				; CODE XREF: _parseArgs+35Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_764
		test	dl, dl
		jz	short loc_760
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_764
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_744

loc_760:				; CODE XREF: _parseArgs+348j
		xor	eax, eax
		jmp	short loc_769
; ---------------------------------------------------------------------------

loc_764:				; CODE XREF: _parseArgs+344j
					; _parseArgs+350j
		sbb	eax, eax
		or	eax, 1

loc_769:				; CODE XREF: _parseArgs+35Ej
		test	eax, eax
		jnz	short loc_7A5
		dec	esi
		cmp	esi, 1
		jl	$bad$120
		mov	ecx, [edi+4]
		add	edi, 4
		mov	ds:_s_www_path,	ecx
		lea	edx, [ecx+1]

loc_786:				; CODE XREF: _parseArgs+387j
		mov	al, [ecx]
		inc	ecx
		test	al, al
		jnz	short loc_786
		sub	ecx, edx
		cmp	ecx, 1F9Ch
		jbe	loc_884
		push	offset ??_C@_0BG@DFJLMDBH@?9www?5option?5too?5long?6?$AA@ ; "-www option too long\n"
		jmp	loc_871
; ---------------------------------------------------------------------------

loc_7A5:				; CODE XREF: _parseArgs+367j
		mov	ecx, offset ??_C@_05DJGMLKH@?9bugs?$AA@	; "-bugs"
		mov	eax, ebx

loc_7AC:				; CODE XREF: _parseArgs+3C2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_7CC
		test	dl, dl
		jz	short loc_7C8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_7CC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_7AC

loc_7C8:				; CODE XREF: _parseArgs+3B0j
		xor	eax, eax
		jmp	short loc_7D1
; ---------------------------------------------------------------------------

loc_7CC:				; CODE XREF: _parseArgs+3ACj
					; _parseArgs+3B8j
		sbb	eax, eax
		or	eax, 1

loc_7D1:				; CODE XREF: _parseArgs+3C6j
		test	eax, eax
		jnz	short loc_7E4
		mov	ds:_st_bugs, 1
		jmp	loc_884
; ---------------------------------------------------------------------------

loc_7E4:				; CODE XREF: _parseArgs+3CFj
		mov	ecx, offset ??_C@_05IHFBIKKN@?9ssl3?$AA@ ; "-ssl3"
		mov	eax, ebx

loc_7EB:				; CODE XREF: _parseArgs+401j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_80B
		test	dl, dl
		jz	short loc_807
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_80B
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_7EB

loc_807:				; CODE XREF: _parseArgs+3EFj
		xor	eax, eax
		jmp	short loc_810
; ---------------------------------------------------------------------------

loc_80B:				; CODE XREF: _parseArgs+3EBj
					; _parseArgs+3F7j
		sbb	eax, eax
		or	eax, 1

loc_810:				; CODE XREF: _parseArgs+405j
		test	eax, eax
		jnz	short loc_820
		call	_SSLv3_client_method
		mov	ds:_s_time_meth, eax
		jmp	short loc_884
; ---------------------------------------------------------------------------

loc_820:				; CODE XREF: _parseArgs+40Ej
		mov	eax, offset ??_C@_05OHPGHBKD@?9time?$AA@ ; "-time"

loc_825:				; CODE XREF: _parseArgs+43Bj
		mov	cl, [ebx]
		cmp	cl, [eax]
		jnz	short loc_845
		test	cl, cl
		jz	short loc_841
		mov	cl, [ebx+1]
		cmp	cl, [eax+1]
		jnz	short loc_845
		add	ebx, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_825

loc_841:				; CODE XREF: _parseArgs+429j
		xor	eax, eax
		jmp	short loc_84A
; ---------------------------------------------------------------------------

loc_845:				; CODE XREF: _parseArgs+425j
					; _parseArgs+431j
		sbb	eax, eax
		or	eax, 1

loc_84A:				; CODE XREF: _parseArgs+43Fj
		test	eax, eax
		jnz	short loc_893
		dec	esi
		cmp	esi, 1
		jl	short $bad$120
		push	dword ptr [edi+4] ; Str
		add	edi, 4
		call	dword ptr ds:__imp__atoi
		add	esp, 4
		mov	_maxTime, eax
		test	eax, eax
		jg	short loc_884
		push	offset ??_C@_0BC@HEPFGEH@time?5must?5be?5?$DO?50?6?$AA@	; "time	must be	> 0\n"

loc_871:				; CODE XREF: _parseArgs+39Cj
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebp, 1
		add	esp, 8

loc_884:				; CODE XREF: _parseArgs+6Ej
					; _parseArgs+B3j ...
		dec	esi
		add	edi, 4
		cmp	esi, 1
		jge	loc_42B
		jmp	short loc_8AD
; ---------------------------------------------------------------------------

loc_893:				; CODE XREF: _parseArgs+448j
		push	dword ptr [edi]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		mov	ebp, 1

loc_8AD:				; CODE XREF: _parseArgs+21j
					; _parseArgs+48Dj
		mov	eax, ds:_perform
		mov	ecx, 3
		test	eax, eax
		cmovz	eax, ecx
		mov	ds:_perform, eax
		test	ebp, ebp
		jz	short loc_8D2

$bad$120:				; CODE XREF: _parseArgs+5Dj
					; _parseArgs+137j ...
		call	_s_time_usage
		pop	edi
		pop	esi
		pop	ebp
		or	eax, 0FFFFFFFFh
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_8D2:				; CODE XREF: _parseArgs+4BFj
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		retn
_parseArgs	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8DCh
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int printf(const char	*Format, ...)
		public _printf
_printf		proc near		; CODE XREF: _s_time_main+19Dp
					; _s_time_main+37Fp ...

Format		= dword	ptr  4
arg_4		= byte ptr  8

		push	esi
		mov	esi, [esp+4+Format]
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		lea	ecx, [esp+4+arg_4]
		push	ecx
		push	0
		push	esi
		push	eax
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		pop	esi
		retn
_printf		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 90Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_s_time_init	proc near		; CODE XREF: _s_time_main+2Ep
		mov	_host, offset ??_C@_0P@IIPDLKPA@localhost?34433?$AA@ ; "localhost:4433"
		mov	ds:_t_cert_file, 0
		mov	ds:_t_key_file,	0
		mov	ds:_CApath, 0
		mov	ds:_CAfile, 0
		mov	ds:_tm_cipher, 0
		mov	ds:_tm_verify, 0
		mov	_maxTime, 1Eh
		mov	ds:_tm_ctx, 0
		mov	ds:_s_time_meth, 0
		mov	ds:_s_www_path,	0
		mov	ds:_bytes_read,	0
		mov	ds:_st_bugs, 0
		mov	ds:_perform, 0
		mov	ds:_t_nbio, 0
		mov	ds:_exitNow, 0
		retn
_s_time_init	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9B0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _s_time_main
_s_time_main	proc near

var_2054	= qword	ptr -2054h
var_204C	= qword	ptr -204Ch
var_201C	= dword	ptr -201Ch
var_2018	= qword	ptr -2018h
var_200C	= dword	ptr -200Ch
var_2008	= byte ptr -2008h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		and	esp, 0FFFFFFC0h
		mov	eax, 2034h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+2034h+var_4], eax
		push	ebx
		push	esi
		mov	esi, [ebp+arg_4]
		push	edi
		xor	edi, edi
		mov	[esp+2040h+var_200C], 1
		call	_s_time_init
		mov	ebx, dword ptr ds:__imp____acrt_iob_func
		cmp	dword ptr ds:_bio_err, edi
		jnz	short loc_A07
		push	edi
		push	2
		call	ebx ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	dword ptr ds:_bio_err, eax

loc_A07:				; CODE XREF: _s_time_main+3Fj
		call	_SSLv23_client_method
		push	esi
		push	[ebp+arg_0]
		mov	ds:_s_time_meth, eax
		call	_parseArgs
		add	esp, 8
		test	eax, eax
		js	loc_105A
		call	_SSL_library_init
		push	ds:_s_time_meth
		call	_SSL_CTX_new
		add	esp, 4
		mov	ds:_tm_ctx, eax
		test	eax, eax
		jnz	short loc_A5B
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [esp+2034h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	esp, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_A5B:				; CODE XREF: _s_time_main+8Fj
		push	1
		push	eax
		call	_SSL_CTX_set_quiet_shutdown
		add	esp, 8
		cmp	ds:_st_bugs, edi
		jz	short loc_A85
		push	0
		push	80000BFFh
		push	20h ; ' '
		push	ds:_tm_ctx
		call	_SSL_CTX_ctrl
		add	esp, 10h

loc_A85:				; CODE XREF: _s_time_main+BCj
		push	ds:_tm_cipher
		push	ds:_tm_ctx
		call	_SSL_CTX_set_cipher_list
		push	ds:_t_key_file
		push	ds:_t_cert_file
		push	ds:_tm_ctx
		call	_set_cert_stuff
		add	esp, 14h
		test	eax, eax
		jz	loc_105A
		call	_SSL_load_error_strings
		push	ds:_CApath
		push	ds:_CAfile
		push	ds:_tm_ctx
		call	_SSL_CTX_load_verify_locations
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_AED
		push	ds:_tm_ctx
		call	_SSL_CTX_set_default_verify_paths
		add	esp, 4
		test	eax, eax
		jnz	short loc_AFB

loc_AED:				; CODE XREF: _s_time_main+129j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

loc_AFB:				; CODE XREF: _s_time_main+13Bj
		cmp	ds:_tm_cipher, edi
		jnz	short loc_B2F
		push	offset ??_C@_0L@FGHMCCKA@SSL_CIPHER?$AA@ ; "SSL_CIPHER"
		call	dword ptr ds:__imp__getenv
		add	esp, 4
		mov	ds:_tm_cipher, eax
		test	eax, eax
		jnz	short loc_B2F
		push	offset ??_C@_0BF@MNJGNACF@No?5CIPHER?5specified?6?$AA@ ; "No CIPHER specified\n"
		push	2
		call	ebx ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8

loc_B2F:				; CODE XREF: _s_time_main+151j
					; _s_time_main+168j
		mov	eax, ds:_perform
		mov	esi, dword ptr ds:__imp___time64
		test	al, 1
		jz	$next$102
		push	_maxTime
		push	offset ??_C@_0DB@HGDJEMJJ@Collecting?5connection?5statistics@ ;	"Collecting connection statistics for %d"...
		call	_printf
		push	0		; Time
		mov	ds:_bytes_read,	edi
		call	esi ; __imp___time64
		mov	esi, _maxTime
		mov	ecx, eax
		add	esi, ecx
		mov	dword ptr [esp+204Ch+var_2018+4], edx
		push	1
		push	0
		mov	[esp+2054h+var_201C], esi
		call	_app_tminterval
		push	0		; Time
		fstp	st
		call	dword ptr ds:__imp___time64
		add	esp, 18h
		cmp	esi, eax
		jl	loc_CD7
		nop	dword ptr [eax+00h]

loc_B90:				; CODE XREF: _s_time_main+321j
		push	0
		call	_doConnection
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	loc_105A
		mov	eax, ds:_s_www_path
		test	eax, eax
		jz	short loc_C1D
		push	eax
		push	offset ??_C@_0BE@BCFPKLCN@GET?5?$CFs?5HTTP?11?40?$AN?6?$AN?6?$AA@ ; "GET %s HTTP/1.0\r\n\r\n"
		lea	eax, [esp+2048h+var_2008]
		push	2000h
		push	eax
		call	_BIO_snprintf
		lea	ecx, [esp+2050h+var_2008]
		add	esp, 10h
		lea	edx, [ecx+1]
		nop	dword ptr [eax+00h]

loc_BD0:				; CODE XREF: _s_time_main+225j
		mov	al, [ecx]
		inc	ecx
		test	al, al
		jnz	short loc_BD0
		sub	ecx, edx
		lea	eax, [esp+2040h+var_2008]
		push	ecx
		push	eax
		push	esi
		call	_SSL_write
		push	2000h
		lea	eax, [esp+2050h+var_2008]
		push	eax
		push	esi
		call	_SSL_read
		add	esp, 18h
		test	eax, eax
		jle	short loc_C1D
		nop	dword ptr [eax+00h]

loc_C00:				; CODE XREF: _s_time_main+26Bj
		add	ds:_bytes_read,	eax
		lea	eax, [esp+2040h+var_2008]
		push	2000h
		push	eax
		push	esi
		call	_SSL_read
		add	esp, 0Ch
		test	eax, eax
		jg	short loc_C00

loc_C1D:				; CODE XREF: _s_time_main+1FBj
					; _s_time_main+24Aj
		push	3
		push	esi
		call	_SSL_set_shutdown
		add	esp, 8
		push	2		; how
		push	esi
		call	_SSL_get_fd
		add	esp, 4
		push	eax		; s
		call	dword ptr ds:__imp__shutdown@8 ; shutdown(x,x)
		push	esi
		call	_SSL_get_fd
		add	esp, 4
		push	eax		; s
		call	dword ptr ds:__imp__closesocket@4 ; closesocket(x)
		push	0
		push	0
		push	8
		push	esi
		inc	edi
		call	_SSL_ctrl
		add	esp, 10h
		test	eax, eax
		jz	short loc_C65
		mov	ebx, 72h ; 'r'
		jmp	short loc_C99
; ---------------------------------------------------------------------------

loc_C65:				; CODE XREF: _s_time_main+2ACj
		push	esi
		call	_SSL_version
		add	esp, 4
		cmp	eax, 301h
		jnz	short loc_C7C
		mov	ebx, 74h ; 't'
		jmp	short loc_C99
; ---------------------------------------------------------------------------

loc_C7C:				; CODE XREF: _s_time_main+2C3j
		cmp	eax, 300h
		jnz	short loc_C8A
		mov	ebx, 33h ; '3'
		jmp	short loc_C99
; ---------------------------------------------------------------------------

loc_C8A:				; CODE XREF: _s_time_main+2D1j
		xor	ebx, ebx
		cmp	eax, 2
		setz	bl
		lea	ebx, ds:2Ah[ebx*8]

loc_C99:				; CODE XREF: _s_time_main+2B3j
					; _s_time_main+2CAj ...
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax		; File
		push	ebx		; Ch
		call	dword ptr ds:__imp__fputc
		mov	ebx, dword ptr ds:__imp____acrt_iob_func
		push	1
		call	ebx ; __imp____acrt_iob_func
		push	eax		; File
		call	dword ptr ds:__imp__fflush
		push	esi
		call	_SSL_free
		push	0		; Time
		call	dword ptr ds:__imp___time64
		mov	esi, [esp+205Ch+var_201C]
		add	esp, 1Ch
		cmp	esi, eax
		jge	loc_B90

loc_CD7:				; CODE XREF: _s_time_main+1D6j
		push	1
		push	1
		call	_app_tminterval
		fldz
		faddp	st(1), st
		push	0		; Time
		fstp	qword ptr [esp+34h]
		call	dword ptr ds:__imp___time64
		movsd	xmm1, qword ptr	[esp+34h]
		add	esp, 0Ch
		movd	xmm0, edi
		mov	eax, 8
		cvtdq2pd xmm0, xmm0
		push	ds:_bytes_read
		divsd	xmm0, xmm1
		call	__chkstk
		mov	eax, 8
		movsd	[esp+204Ch+var_204C], xmm0
		call	__chkstk
		movsd	[esp+2054h+var_2054], xmm1
		push	edi
		push	offset ??_C@_0EG@BBCBIEDO@?6?6?$CFd?5connections?5in?5?$CF?42fs?$DL?5?$CF?42f?5@ ; "\n\n%d connections in %.2fs; %.2f conne"...
		call	_printf
		push	0		; Time
		call	dword ptr ds:__imp___time64
		mov	ecx, eax
		mov	dword ptr [esp+2060h+var_2018+4], edx
		mov	eax, ds:_bytes_read
		cdq
		idiv	edi
		push	eax
		mov	eax, _maxTime
		sub	eax, esi
		add	eax, ecx
		push	eax
		push	edi
		push	offset ??_C@_0ED@GJCIILCE@?$CFd?5connections?5in?5?$CFld?5real?5secon@ ; "%d connections in %ld	real seconds, %ld"...
		call	_printf
		mov	eax, ds:_perform
		add	esp, 30h
		mov	esi, dword ptr ds:__imp___time64

$next$102:				; CODE XREF: _s_time_main+18Cj
		test	al, 2
		jz	loc_105A
		push	offset ??_C@_0CF@CKDDPNGE@?6?6Now?5timing?5with?5session?5id?5reu@ ; "\n\nNow timing with session id reuse.\n"
		call	_printf
		push	0
		call	_doConnection
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jnz	short loc_DAA
		push	offset ??_C@_0BK@DONHIJCM@Unable?5to?5get?5connection?6?$AA@ ; "Unable to get connection\n"
		push	2
		call	ebx ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8
		jmp	loc_105A
; ---------------------------------------------------------------------------

loc_DAA:				; CODE XREF: _s_time_main+3DEj
		mov	eax, ds:_s_www_path
		test	eax, eax
		jz	short loc_E07
		push	eax
		push	offset ??_C@_0BE@BCFPKLCN@GET?5?$CFs?5HTTP?11?40?$AN?6?$AN?6?$AA@ ; "GET %s HTTP/1.0\r\n\r\n"
		lea	eax, [esp+2048h+var_2008]
		push	2000h
		push	eax
		call	_BIO_snprintf
		lea	ecx, [esp+2050h+var_2008]
		add	esp, 10h
		lea	edx, [ecx+1]

loc_DD2:				; CODE XREF: _s_time_main+427j
		mov	al, [ecx]
		inc	ecx
		test	al, al
		jnz	short loc_DD2
		sub	ecx, edx
		lea	eax, [esp+2040h+var_2008]
		push	ecx
		push	eax
		push	edi
		call	_SSL_write
		add	esp, 0Ch
		nop	word ptr [eax+eax+00h]

loc_DF0:				; CODE XREF: _s_time_main+455j
		push	2000h
		lea	eax, [esp+2044h+var_2008]
		push	eax
		push	edi
		call	_SSL_read
		add	esp, 0Ch
		test	eax, eax
		jg	short loc_DF0

loc_E07:				; CODE XREF: _s_time_main+401j
		push	3
		push	edi
		call	_SSL_set_shutdown
		add	esp, 8
		push	2		; how
		push	edi
		call	_SSL_get_fd
		add	esp, 4
		push	eax		; s
		call	dword ptr ds:__imp__shutdown@8 ; shutdown(x,x)
		push	edi
		call	_SSL_get_fd
		add	esp, 4
		push	eax		; s
		call	dword ptr ds:__imp__closesocket@4 ; closesocket(x)
		xor	ebx, ebx
		push	ebx		; Time
		call	esi ; __imp___time64
		mov	esi, _maxTime
		mov	ecx, eax
		add	esi, ecx
		mov	dword ptr [esp+2044h+var_2018+4], edx
		push	offset ??_C@_09KDONLFBI@starting?6?$AA@	; "starting\n"
		mov	[esp+2048h+var_201C], esi
		call	_printf
		push	1
		push	ebx
		mov	ds:_bytes_read,	ebx
		call	_app_tminterval
		push	ebx		; Time
		fstp	st
		call	dword ptr ds:__imp___time64
		add	esp, 14h
		cmp	esi, eax
		jl	loc_FBD
		mov	esi, dword ptr ds:__imp____acrt_iob_func
		nop	dword ptr [eax]

loc_E80:				; CODE XREF: _s_time_main+607j
		push	edi
		call	_doConnection
		add	esp, 4
		test	eax, eax
		jz	$end$103
		mov	eax, ds:_s_www_path
		test	eax, eax
		jz	short loc_F0D
		push	eax
		push	offset ??_C@_0BE@BCFPKLCN@GET?5?$CFs?5HTTP?11?40?$AN?6?$AN?6?$AA@ ; "GET %s HTTP/1.0\r\n\r\n"
		lea	eax, [esp+2048h+var_2008]
		push	2000h
		push	eax
		call	_BIO_snprintf
		lea	ecx, [esp+2050h+var_2008]
		add	esp, 10h
		lea	edx, [ecx+1]
		nop	dword ptr [eax+00000000h]

loc_EC0:				; CODE XREF: _s_time_main+515j
		mov	al, [ecx]
		inc	ecx
		test	al, al
		jnz	short loc_EC0
		sub	ecx, edx
		lea	eax, [esp+2040h+var_2008]
		push	ecx
		push	eax
		push	edi
		call	_SSL_write
		push	2000h
		lea	eax, [esp+2050h+var_2008]
		push	eax
		push	edi
		call	_SSL_read
		add	esp, 18h
		test	eax, eax
		jle	short loc_F0D
		nop	dword ptr [eax+00h]

loc_EF0:				; CODE XREF: _s_time_main+55Bj
		add	ds:_bytes_read,	eax
		lea	eax, [esp+2040h+var_2008]
		push	2000h
		push	eax
		push	edi
		call	_SSL_read
		add	esp, 0Ch
		test	eax, eax
		jg	short loc_EF0

loc_F0D:				; CODE XREF: _s_time_main+4E8j
					; _s_time_main+53Aj
		push	3
		push	edi
		call	_SSL_set_shutdown
		add	esp, 8
		push	2		; how
		push	edi
		call	_SSL_get_fd
		add	esp, 4
		push	eax		; s
		call	dword ptr ds:__imp__shutdown@8 ; shutdown(x,x)
		push	edi
		call	_SSL_get_fd
		add	esp, 4
		push	eax		; s
		call	dword ptr ds:__imp__closesocket@4 ; closesocket(x)
		push	0
		push	0
		push	8
		inc	ebx
		push	edi
		mov	dword ptr [esp+2050h+var_2018],	ebx
		call	_SSL_ctrl
		add	esp, 10h
		test	eax, eax
		jz	short loc_F59
		mov	ebx, 72h ; 'r'
		jmp	short loc_F8D
; ---------------------------------------------------------------------------

loc_F59:				; CODE XREF: _s_time_main+5A0j
		push	edi
		call	_SSL_version
		add	esp, 4
		cmp	eax, 301h
		jnz	short loc_F70
		mov	ebx, 74h ; 't'
		jmp	short loc_F8D
; ---------------------------------------------------------------------------

loc_F70:				; CODE XREF: _s_time_main+5B7j
		cmp	eax, 300h
		jnz	short loc_F7E
		mov	ebx, 33h ; '3'
		jmp	short loc_F8D
; ---------------------------------------------------------------------------

loc_F7E:				; CODE XREF: _s_time_main+5C5j
		xor	ebx, ebx
		cmp	eax, 2
		setz	bl
		lea	ebx, ds:2Ah[ebx*8]

loc_F8D:				; CODE XREF: _s_time_main+5A7j
					; _s_time_main+5BEj ...
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		push	ebx		; Ch
		call	dword ptr ds:__imp__fputc
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	dword ptr ds:__imp__fflush
		push	0		; Time
		call	dword ptr ds:__imp___time64
		mov	ebx, dword ptr [esp+2058h+var_2018]
		add	esp, 18h
		cmp	[esp+2040h+var_201C], eax
		jge	loc_E80

loc_FBD:				; CODE XREF: _s_time_main+4C1j
		push	1
		push	1
		call	_app_tminterval
		fldz
		add	esp, 8
		faddp	st(1), st
		movd	xmm0, ebx
		cvtdq2pd xmm0, xmm0
		mov	eax, 8
		push	ds:_bytes_read
		fstp	[esp+2044h+var_2018]
		movsd	xmm1, [esp+2044h+var_2018]
		divsd	xmm0, xmm1
		call	__chkstk
		mov	eax, 8
		movsd	[esp+204Ch+var_204C], xmm0
		call	__chkstk
		movsd	[esp+2054h+var_2054], xmm1
		push	ebx
		push	offset ??_C@_0EG@BBCBIEDO@?6?6?$CFd?5connections?5in?5?$CF?42fs?$DL?5?$CF?42f?5@ ; "\n\n%d connections in %.2fs; %.2f conne"...
		call	_printf
		push	0		; Time
		call	dword ptr ds:__imp___time64
		mov	esi, eax
		test	ebx, ebx
		mov	eax, ds:_bytes_read
		mov	ecx, 1
		cdq
		cmovnz	ecx, ebx
		idiv	ecx
		push	eax
		mov	eax, _maxTime
		sub	eax, [esp+2064h+var_201C]
		add	eax, esi
		push	eax
		push	ebx
		push	offset ??_C@_0ED@GJCIILCE@?$CFd?5connections?5in?5?$CFld?5real?5secon@ ; "%d connections in %ld	real seconds, %ld"...
		call	_printf
		add	esp, 30h
		mov	[esp+2040h+var_200C], 0

$end$103:				; CODE XREF: _s_time_main+4DBj
		push	edi
		call	_SSL_free
		add	esp, 4

loc_105A:				; CODE XREF: _s_time_main+6Fj
					; _s_time_main+102j ...
		mov	ecx, ds:_tm_ctx
		test	ecx, ecx
		jz	short loc_1077
		push	ecx
		call	_SSL_CTX_free
		add	esp, 4
		mov	ds:_tm_ctx, 0

loc_1077:				; CODE XREF: _s_time_main+6B2j
		mov	ecx, [esp+2040h+var_4]
		mov	eax, [esp+2040h+var_200C]
		pop	edi
		pop	esi
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	esp, ebp
		pop	ebp
		retn
_s_time_main	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1090h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_s_time_usage	proc near		; CODE XREF: _parseArgs:$bad$120p
		push	offset ??_C@_0BH@IHIAGBMN@usage?3?5s_time?5?$DMargs?$DO?6?6?$AA@ ; "usage: s_time <args>\n\n"
		call	_printf
		push	offset ??_C@_0P@IIPDLKPA@localhost?34433?$AA@ ;	"localhost:4433"
		push	offset ??_C@_0DO@DHOFADPP@?9connect?5host?3port?5?9?5host?3port?5t@ ; "-connect	host:port - host:port to conne"...
		call	_printf
		push	offset ??_C@_0CK@JAAPKFKC@?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9blo@ ; "-nbio	    - Run with non-blocking I"...
		call	_printf
		push	offset ??_C@_0CA@NMCANHHL@?9ssl2?5?5?5?5?5?5?5?5?5?9?5Just?5use?5SSLv2?6?$AA@ ;	"-ssl2	       - Just use SSLv2\n"
		call	_printf
		push	offset ??_C@_0CA@NMFHEAFB@?9ssl3?5?5?5?5?5?5?5?5?5?9?5Just?5use?5SSLv3?6?$AA@ ;	"-ssl3	       - Just use SSLv3\n"
		call	_printf
		push	offset ??_C@_0CP@NHEENKJK@?9bugs?5?5?5?5?5?5?5?5?5?9?5Turn?5on?5SSL?5bug?5@ ; "-bugs	     - Turn on SSL bug compati"...
		call	_printf
		push	offset ??_C@_0CL@CODCFINN@?9new?5?5?5?5?5?5?5?5?5?5?9?5Just?5time?5new?5co@ ; "-new	     - Just time new connectio"...
		call	_printf
		push	offset ??_C@_0CM@DMDCIMPH@?9reuse?5?5?5?5?5?5?5?5?9?5Just?5time?5connec@ ; "-reuse	  - Just time connection re"...
		call	_printf
		push	offset ??_C@_0CP@CPFFJOGO@?9www?5page?5?5?5?5?5?9?5Retrieve?5?8page?8?5@ ; "-www page	  - Retrieve 'page' from th"...
		call	_printf
		push	1Eh
		push	offset ?umsg@?1??s_time_usage@@9@9 ; "-time arg	    - max number of seconds t"...
		call	_printf
		add	esp, 30h
		retn
_s_time_usage	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1100h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; time_t __cdecl static	time(time_t *Time)
_time		proc near
		jmp	dword ptr ds:__imp___time64
_time		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1108h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_tm_Time_F	proc near

arg_0		= dword	ptr  4

		push	1
		push	[esp+4+arg_0]
		call	_app_tminterval
		add	esp, 8
		retn
_tm_Time_F	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1118h
; COMDAT (pick any)
		public ??_C@_0BH@IHIAGBMN@usage?3?5s_time?5?$DMargs?$DO?6?6?$AA@
; char `string'[]
??_C@_0BH@IHIAGBMN@usage?3?5s_time?5?$DMargs?$DO?6?6?$AA@ db 'usage: s_time <args>',0Ah
					; DATA XREF: _s_time_usageo
		db 0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1130h
; COMDAT (pick any)
		public ??_C@_0DO@DHOFADPP@?9connect?5host?3port?5?9?5host?3port?5t@
; char `string'[]
??_C@_0DO@DHOFADPP@?9connect?5host?3port?5?9?5host?3port?5t@ db	'-connect host:port - host:port to connect to (default is %s)',0Ah,0
					; DATA XREF: _s_time_usage+Fo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1170h
; COMDAT (pick any)
		public ??_C@_0CK@JAAPKFKC@?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9blo@
; char `string'[]
??_C@_0CK@JAAPKFKC@?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9blo@ db '-nbio         - Run with non-blocking IO',0Ah,0
					; DATA XREF: _s_time_usage+19o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 119Ch
; COMDAT (pick any)
		public ??_C@_0CA@NMCANHHL@?9ssl2?5?5?5?5?5?5?5?5?5?9?5Just?5use?5SSLv2?6?$AA@
; char `string'[]
??_C@_0CA@NMCANHHL@?9ssl2?5?5?5?5?5?5?5?5?5?9?5Just?5use?5SSLv2?6?$AA@ db '-ssl2         - Just use SSLv2',0Ah,0
					; DATA XREF: _s_time_usage+23o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11BCh
; COMDAT (pick any)
		public ??_C@_0CA@NMFHEAFB@?9ssl3?5?5?5?5?5?5?5?5?5?9?5Just?5use?5SSLv3?6?$AA@
; char `string'[]
??_C@_0CA@NMFHEAFB@?9ssl3?5?5?5?5?5?5?5?5?5?9?5Just?5use?5SSLv3?6?$AA@ db '-ssl3         - Just use SSLv3',0Ah,0
					; DATA XREF: _s_time_usage+2Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11DCh
; COMDAT (pick any)
		public ??_C@_0CP@NHEENKJK@?9bugs?5?5?5?5?5?5?5?5?5?9?5Turn?5on?5SSL?5bug?5@
; char `string'[]
??_C@_0CP@NHEENKJK@?9bugs?5?5?5?5?5?5?5?5?5?9?5Turn?5on?5SSL?5bug?5@ db	'-bugs         - Turn on SSL bug compatibility',0Ah,0
					; DATA XREF: _s_time_usage+37o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 120Ch
; COMDAT (pick any)
		public ??_C@_0CL@CODCFINN@?9new?5?5?5?5?5?5?5?5?5?5?9?5Just?5time?5new?5co@
; char `string'[]
??_C@_0CL@CODCFINN@?9new?5?5?5?5?5?5?5?5?5?5?9?5Just?5time?5new?5co@ db	'-new          - Just time new connections',0Ah,0
					; DATA XREF: _s_time_usage+41o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1238h
; COMDAT (pick any)
		public ??_C@_0CM@DMDCIMPH@?9reuse?5?5?5?5?5?5?5?5?9?5Just?5time?5connec@
; char `string'[]
??_C@_0CM@DMDCIMPH@?9reuse?5?5?5?5?5?5?5?5?9?5Just?5time?5connec@ db '-reuse        - Just time connection reuse',0Ah,0
					; DATA XREF: _s_time_usage+4Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1264h
; COMDAT (pick any)
		public ??_C@_0CP@CPFFJOGO@?9www?5page?5?5?5?5?5?9?5Retrieve?5?8page?8?5@
; char `string'[]
??_C@_0CP@CPFFJOGO@?9www?5page?5?5?5?5?5?9?5Retrieve?5?8page?8?5@ db '-www page     - Retrieve ',27h,'page',27h,' from the site',0Ah,0
					; DATA XREF: _s_time_usage+55o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1294h
; COMDAT (pick any)
		public ??_C@_08FABEHMEN@?9connect?$AA@
; `string'
??_C@_08FABEHMEN@?9connect?$AA@	db '-connect',0 ; DATA XREF: _parseArgs+29o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12A0h
; COMDAT (pick any)
		public ??_C@_06MJBNDFGP@?9reuse?$AA@
; `string'
??_C@_06MJBNDFGP@?9reuse?$AA@ db '-reuse',0 ; DATA XREF: _parseArgs:loc_477o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12A8h
; COMDAT (pick any)
		public ??_C@_04PFBHIFJN@?9new?$AA@
; `string'
??_C@_04PFBHIFJN@?9new?$AA@ db '-new',0 ; DATA XREF: _parseArgs:loc_4BCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12B0h
; COMDAT (pick any)
		public ??_C@_07FILEFCOC@?9verify?$AA@
; `string'
??_C@_07FILEFCOC@?9verify?$AA@ db '-verify',0 ; DATA XREF: _parseArgs:loc_4FCo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12B8h
; COMDAT (pick any)
		public ??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@
; `string'
??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@ db 'verify depth is %d',0Ah,0
					; DATA XREF: _parseArgs+14Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12CCh
; COMDAT (pick any)
		public ??_C@_05DLEDECNE@?9cert?$AA@
; `string'
??_C@_05DLEDECNE@?9cert?$AA@ db	'-cert',0 ; DATA XREF: _parseArgs:loc_56Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12D4h
; COMDAT (pick any)
		public ??_C@_04FMEKFICB@?9key?$AA@
; `string'
??_C@_04FMEKFICB@?9key?$AA@ db '-key',0 ; DATA XREF: _parseArgs:loc_5B7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12DCh
; COMDAT (pick any)
		public ??_C@_07MNNNLALG@?9CApath?$AA@
; `string'
??_C@_07MNNNLALG@?9CApath?$AA@ db '-CApath',0 ; DATA XREF: _parseArgs:loc_607o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12E4h
; COMDAT (pick any)
		public ??_C@_07EAFCHGPO@?9CAfile?$AA@
; `string'
??_C@_07EAFCHGPO@?9CAfile?$AA@ db '-CAfile',0 ; DATA XREF: _parseArgs:loc_657o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12ECh
; COMDAT (pick any)
		public ??_C@_07DJFOHCGH@?9cipher?$AA@
; `string'
??_C@_07DJFOHCGH@?9cipher?$AA@ db '-cipher',0 ; DATA XREF: _parseArgs:loc_6A7o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12F4h
; COMDAT (pick any)
		public ??_C@_05OHEBDJNH@?9nbio?$AA@
; `string'
??_C@_05OHEBDJNH@?9nbio?$AA@ db	'-nbio',0 ; DATA XREF: _parseArgs:loc_6F7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12FCh
; COMDAT (pick any)
		public ??_C@_04MHKEOKJG@?9www?$AA@
; `string'
??_C@_04MHKEOKJG@?9www?$AA@ db '-www',0 ; DATA XREF: _parseArgs:loc_73Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1304h
; COMDAT (pick any)
		public ??_C@_0BG@DFJLMDBH@?9www?5option?5too?5long?6?$AA@
; `string'
??_C@_0BG@DFJLMDBH@?9www?5option?5too?5long?6?$AA@ db '-www option too long',0Ah,0
					; DATA XREF: _parseArgs+397o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 131Ch
; COMDAT (pick any)
		public ??_C@_05DJGMLKH@?9bugs?$AA@
; `string'
??_C@_05DJGMLKH@?9bugs?$AA@ db '-bugs',0 ; DATA XREF: _parseArgs:loc_7A5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1324h
; COMDAT (pick any)
		public ??_C@_05IHFBIKKN@?9ssl3?$AA@
; `string'
??_C@_05IHFBIKKN@?9ssl3?$AA@ db	'-ssl3',0 ; DATA XREF: _parseArgs:loc_7E4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 132Ch
; COMDAT (pick any)
		public ??_C@_05OHPGHBKD@?9time?$AA@
; `string'
??_C@_05OHPGHBKD@?9time?$AA@ db	'-time',0 ; DATA XREF: _parseArgs:loc_820o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1334h
; COMDAT (pick any)
		public ??_C@_0BC@HEPFGEH@time?5must?5be?5?$DO?50?6?$AA@
; `string'
??_C@_0BC@HEPFGEH@time?5must?5be?5?$DO?50?6?$AA@ db 'time must be > 0',0Ah,0
					; DATA XREF: _parseArgs+468o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1348h
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _parseArgs+491o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 135Ch
; COMDAT (pick any)
		public ??_C@_0L@FGHMCCKA@SSL_CIPHER?$AA@
; char `string'[]
??_C@_0L@FGHMCCKA@SSL_CIPHER?$AA@ db 'SSL_CIPHER',0 ; DATA XREF: _s_time_main+153o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1368h
; COMDAT (pick any)
		public ??_C@_0BF@MNJGNACF@No?5CIPHER?5specified?6?$AA@
; char `string'[]
??_C@_0BF@MNJGNACF@No?5CIPHER?5specified?6?$AA@	db 'No CIPHER specified',0Ah,0
					; DATA XREF: _s_time_main+16Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1380h
; COMDAT (pick any)
		public ??_C@_0DB@HGDJEMJJ@Collecting?5connection?5statistics@
; char `string'[]
??_C@_0DB@HGDJEMJJ@Collecting?5connection?5statistics@ db 'Collecting connection statistics for %d seconds',0Ah,0
					; DATA XREF: _s_time_main+198o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13B4h
; COMDAT (pick any)
		public ??_C@_0BE@BCFPKLCN@GET?5?$CFs?5HTTP?11?40?$AN?6?$AN?6?$AA@
; `string'
??_C@_0BE@BCFPKLCN@GET?5?$CFs?5HTTP?11?40?$AN?6?$AN?6?$AA@ db 'GET %s HTTP/1.0',0Dh,0Ah
					; DATA XREF: _s_time_main+1FEo
					; _s_time_main+404o ...
		db 0Dh,0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 13C8h
; COMDAT (pick any)
		public ??_C@_0EG@BBCBIEDO@?6?6?$CFd?5connections?5in?5?$CF?42fs?$DL?5?$CF?42f?5@
; char `string'[]
??_C@_0EG@BBCBIEDO@?6?6?$CFd?5connections?5in?5?$CF?42fs?$DL?5?$CF?42f?5@ db 0Ah
					; DATA XREF: _s_time_main+37Ao
					; _s_time_main+658o
		db 0Ah
		db '%d connections in %.2fs; %.2f connections/user sec, bytes read %l'
		db 'd',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1410h
; COMDAT (pick any)
		public ??_C@_0ED@GJCIILCE@?$CFd?5connections?5in?5?$CFld?5real?5secon@
; char `string'[]
??_C@_0ED@GJCIILCE@?$CFd?5connections?5in?5?$CFld?5real?5secon@	db '%d connections in %ld real seconds, %ld bytes read per connection'
					; DATA XREF: _s_time_main+3A6o
					; _s_time_main+68Co
		db 0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1454h
; COMDAT (pick any)
		public ??_C@_0CF@CKDDPNGE@?6?6Now?5timing?5with?5session?5id?5reu@
; char `string'[]
??_C@_0CF@CKDDPNGE@?6?6Now?5timing?5with?5session?5id?5reu@ db 0Ah
					; DATA XREF: _s_time_main+3C6o
		db 0Ah
		db 'Now timing with session id reuse.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 147Ch
; COMDAT (pick any)
		public ??_C@_0BK@DONHIJCM@Unable?5to?5get?5connection?6?$AA@
; char `string'[]
??_C@_0BK@DONHIJCM@Unable?5to?5get?5connection?6?$AA@ db 'Unable to get connection',0Ah,0
					; DATA XREF: _s_time_main+3E0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1498h
; COMDAT (pick any)
		public ??_C@_09KDONLFBI@starting?6?$AA@
; char `string'[]
??_C@_09KDONLFBI@starting?6?$AA@ db 'starting',0Ah,0 ; DATA XREF: _s_time_main+497o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14A4h
; COMDAT (pick any)
		public ??_C@_06KKGLJNJB@DELAY?6?$AA@
; `string'
??_C@_06KKGLJNJB@DELAY?6?$AA@ db 'DELAY',0Ah,0 ; DATA XREF: _doConnection:loc_308o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14ACh
; COMDAT (pick any)
		public ??_C@_06CBJFBFDH@ERROR?6?$AA@
; `string'
??_C@_06CBJFBFDH@ERROR?6?$AA@ db 'ERROR',0Ah,0 ; DATA XREF: _doConnection+100o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14B4h
; COMDAT (pick any)
		public ??_C@_0BB@EHGPOOCJ@verify?5error?3?$CFs?6?$AA@
; `string'
??_C@_0BB@EHGPOOCJ@verify?5error?3?$CFs?6?$AA@ db 'verify error:%s',0Ah,0
					; DATA XREF: _doConnection+123o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 14C8h
; COMDAT (pick any)
		public __real@0000000000000000
__real@0000000000000000	dd 2 dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _printf+7p
					; _s_time_main+44p ...
; int __cdecl _fflush(FILE *File)
		extrn __imp__fflush:near ; CODE	XREF: _s_time_main+304p
					; _s_time_main+5EEp
					; DATA XREF: ...
; int __cdecl _fputc(int Ch, FILE *File)
		extrn __imp__fputc:near	; CODE XREF: _s_time_main+2F3p
					; _s_time_main+5E3p
					; DATA XREF: ...
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _fprintf+19p	...
; int __cdecl _atoi(const char *Str)
		extrn __imp__atoi:near	; CODE XREF: _parseArgs+143p
					; _parseArgs+456p
					; DATA XREF: ...
; char *__cdecl	_getenv(const char *VarName)
		extrn __imp__getenv:near ; CODE	XREF: _s_time_main+158p
					; DATA XREF: _s_time_main+158r
; int __stdcall	closesocket(SOCKET s)
		extrn __imp__closesocket@4:near	; CODE XREF: _s_time_main+294p
					; _s_time_main+47Ep ...
; int __stdcall	select(int nfds, fd_set	*readfds, fd_set *writefds, fd_set *exceptfds, const struct timeval *timeout)
		extrn __imp__select@20:near ; CODE XREF: _doConnection+E4p
					; DATA XREF: _doConnection+9Cr
; int __stdcall	shutdown(SOCKET	s, int how)
		extrn __imp__shutdown@8:near ; CODE XREF: _s_time_main+284p
					; _s_time_main+46Ep ...
		extrn _BIO_new_fp:near	; CODE XREF: _s_time_main+4Ap
		extrn _BIO_new:near	; CODE XREF: _doConnection+27p
		extrn _BIO_ctrl:near	; CODE XREF: _doConnection+58p
		extrn _BIO_s_connect:near ; CODE XREF: _doConnection+21p
		extrn _BIO_sock_should_retry:near ; CODE XREF: _doConnection+8Fp
					; _doConnection+EFp
		extrn _BIO_printf:near	; CODE XREF: _doConnection+BBp
					; _doConnection+10Bp ...
		extrn _BIO_snprintf:near ; CODE	XREF: _s_time_main+20Dp
					; _s_time_main+413p ...
; __time64_t __cdecl __time64(__time64_t *Time)
		extrn __imp___time64:near ; CODE XREF: _s_time_main+1AAp
					; _s_time_main+1CBp ...
		extrn _X509_verify_cert_error_string:near ; CODE XREF: _doConnection+11Dp
		extrn _ERR_print_errors:near ; CODE XREF: _doConnection+13Ep
					; _s_time_main+143p
		extrn _app_tminterval:near ; CODE XREF:	_s_time_main+1C2p
					; _s_time_main+32Bp ...
		extrn _SSL_CTX_set_cipher_list:near ; CODE XREF: _s_time_main+E1p
		extrn _SSL_CTX_new:near	; CODE XREF: _s_time_main+80p
		extrn _SSL_CTX_free:near ; CODE	XREF: _s_time_main+6B5p
		extrn _SSL_get_fd:near	; CODE XREF: _doConnection+C1p
					; _s_time_main+27Bp ...
		extrn _SSL_set_bio:near	; CODE XREF: _doConnection+81p
		extrn _SSL_load_error_strings:near ; CODE XREF:	_s_time_main+108p
		extrn _SSL_new:near	; CODE XREF: _doConnection+6Ap
		extrn _SSL_free:near	; CODE XREF: _doConnection+14Bp
					; _s_time_main+30Bp ...
		extrn _SSL_connect:near	; CODE XREF: _doConnection+87p
					; _doConnection+E7p
		extrn _SSL_read:near	; CODE XREF: _s_time_main+240p
					; _s_time_main+261p ...
		extrn _SSL_write:near	; CODE XREF: _s_time_main+230p
					; _s_time_main+432p ...
		extrn _SSL_ctrl:near	; CODE XREF: _s_time_main+2A2p
					; _s_time_main+596p
		extrn _SSL_CTX_ctrl:near ; CODE	XREF: _s_time_main+CDp
		extrn _SSLv3_client_method:near	; CODE XREF: _parseArgs+410p
		extrn _SSLv23_client_method:near ; CODE	XREF: _s_time_main:loc_A07p
		extrn _SSL_set_connect_state:near ; CODE XREF: _doConnection+76p
		extrn _SSL_library_init:near ; CODE XREF: _s_time_main+75p
		extrn _SSL_CTX_set_quiet_shutdown:near ; CODE XREF: _s_time_main+AEp
		extrn _SSL_set_shutdown:near ; CODE XREF: _s_time_main+270p
					; _s_time_main+45Ap ...
		extrn _SSL_version:near	; CODE XREF: _s_time_main+2B6p
					; _s_time_main+5AAp
		extrn _SSL_CTX_set_default_verify_paths:near ; CODE XREF: _s_time_main+131p
		extrn _SSL_CTX_load_verify_locations:near ; CODE XREF: _s_time_main+11Fp
		extrn _set_cert_stuff:near ; CODE XREF:	_s_time_main+F8p
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _doConnection+40p
					; _doConnection+161p ...
		extrn __chkstk:near	; CODE XREF: _doConnection+5p
					; _s_time_main+Bp ...
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso
		extrn _bio_err:near	; DATA XREF: _doConnection+B5r
					; _doConnection+105r ...
		extrn _verify_depth:near ; DATA	XREF: _parseArgs+12w
					; _parseArgs+155w
		extrn _verify_error:near ; DATA	XREF: _doConnection+110r
					; _parseArgs+18w
		extrn ___security_cookie:near ;	DATA XREF: _doConnection+Ar
					; _s_time_main+10r
		extrn __fltused:near


		end

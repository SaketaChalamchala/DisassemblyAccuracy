;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	5678CFB9B665AA5DF134BB3DCBA0C51F
; Input	CRC32 :	BC0B13FF

; File Name   :	C:\compspace\Diff\openssl\obj\pk7_smime.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_decrypt
_PKCS7_decrypt	proc near

var_1004	= byte ptr -1004h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= byte ptr  14h

		mov	eax, 1004h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+1004h+var_4], eax
		push	ebx
		mov	ebx, [esp+1008h+arg_C]
		push	ebp
		mov	ebp, [esp+100Ch+arg_4]
		push	esi
		mov	esi, [esp+1010h+arg_8]
		push	edi
		mov	edi, [esp+1014h+arg_0]
		test	edi, edi
		jnz	short loc_5E
		push	211h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	8Fh ; 'è'
		push	72h ; 'r'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		jmp	loc_224
; ---------------------------------------------------------------------------

loc_5E:					; CODE XREF: _PKCS7_decrypt+3Aj
		push	dword ptr [edi+10h]
		call	_OBJ_obj2nid
		add	esp, 4
		cmp	eax, 17h
		jz	short loc_8D
		push	216h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	71h ; 'q'
		push	72h ; 'r'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		jmp	loc_224
; ---------------------------------------------------------------------------

loc_8D:					; CODE XREF: _PKCS7_decrypt+6Cj
		test	esi, esi
		jz	short loc_BE
		push	ebp
		push	esi
		call	_X509_check_private_key
		add	esp, 8
		test	eax, eax
		jnz	short loc_BE
		push	21Ch
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	7Fh ; ''
		push	72h ; 'r'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		jmp	loc_224
; ---------------------------------------------------------------------------

loc_BE:					; CODE XREF: _PKCS7_decrypt+8Fj
					; _PKCS7_decrypt+9Dj
		push	esi
		push	0
		push	ebp
		push	edi
		call	_PKCS7_dataDecode
		mov	edi, eax
		add	esp, 10h
		test	edi, edi
		jnz	short loc_F0
		push	221h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	77h ; 'w'
		push	72h ; 'r'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		jmp	loc_224
; ---------------------------------------------------------------------------

loc_F0:					; CODE XREF: _PKCS7_decrypt+CFj
		test	[esp+1014h+arg_10], 1
		jz	loc_1AA
		call	_BIO_f_buffer
		push	eax
		call	_BIO_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_137
		push	229h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		push	72h ; 'r'
		push	21h ; '!'
		call	_ERR_put_error
		push	edi
		call	_BIO_free_all
		add	esp, 18h
		xor	eax, eax
		jmp	loc_224
; ---------------------------------------------------------------------------

loc_137:				; CODE XREF: _PKCS7_decrypt+110j
		push	edi
		push	esi
		call	_BIO_push
		mov	ebp, eax
		add	esp, 8
		test	ebp, ebp
		jnz	short loc_172
		push	22Eh
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		push	72h ; 'r'
		push	21h ; '!'
		call	_ERR_put_error
		push	esi
		call	_BIO_free_all
		push	edi
		call	_BIO_free_all
		add	esp, 1Ch
		xor	eax, eax
		jmp	loc_224
; ---------------------------------------------------------------------------

loc_172:				; CODE XREF: _PKCS7_decrypt+145j
		push	ebx
		push	ebp
		call	_SMIME_text
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jle	short loc_1A7
		push	edi
		call	_BIO_method_type
		add	esp, 4
		cmp	eax, 20Ah
		jnz	short loc_1A7
		push	0
		push	0
		push	71h ; 'q'
		push	edi
		call	_BIO_ctrl
		add	esp, 10h
		neg	eax
		sbb	eax, eax
		and	esi, eax

loc_1A7:				; CODE XREF: _PKCS7_decrypt+180j
					; _PKCS7_decrypt+190j
		push	ebp
		jmp	short loc_21A
; ---------------------------------------------------------------------------

loc_1AA:				; CODE XREF: _PKCS7_decrypt+F8j
		push	1000h
		lea	eax, [esp+1018h+var_1004]
		push	eax
		push	edi
		call	_BIO_read
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jle	short loc_1EF

loc_1C3:				; CODE XREF: _PKCS7_decrypt+1EDj
		push	esi
		lea	eax, [esp+1018h+var_1004]
		push	eax
		push	ebx
		call	_BIO_write
		add	esp, 0Ch
		cmp	eax, esi
		jnz	short loc_217
		push	1000h
		lea	eax, [esp+1018h+var_1004]
		push	eax
		push	edi
		call	_BIO_read
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jg	short loc_1C3

loc_1EF:				; CODE XREF: _PKCS7_decrypt+1C1j
		push	edi
		mov	esi, 1
		call	_BIO_method_type
		add	esp, 4
		cmp	eax, 20Ah
		jnz	short loc_219
		push	0
		push	0
		push	71h ; 'q'
		push	edi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jnz	short loc_219

loc_217:				; CODE XREF: _PKCS7_decrypt+1D4j
		xor	esi, esi

loc_219:				; CODE XREF: _PKCS7_decrypt+202j
					; _PKCS7_decrypt+215j
		push	edi

loc_21A:				; CODE XREF: _PKCS7_decrypt+1A8j
		call	_BIO_free_all
		mov	eax, esi
		add	esp, 4

loc_224:				; CODE XREF: _PKCS7_decrypt+59j
					; _PKCS7_decrypt+88j ...
		mov	ecx, [esp+1014h+var_4]
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 1004h
		retn
_PKCS7_decrypt	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 240h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_encrypt
_PKCS7_encrypt	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	edi
		call	_PKCS7_new
		mov	edi, eax
		test	edi, edi
		jnz	short loc_268
		push	1E9h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		push	73h ; 's'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_268:				; CODE XREF: _PKCS7_encrypt+Aj
		push	ebx
		push	esi
		push	17h
		push	edi
		call	_PKCS7_set_type
		add	esp, 8
		test	eax, eax
		jz	short $err$22
		push	[esp+0Ch+arg_8]
		push	edi
		call	_PKCS7_set_cipher
		add	esp, 8
		test	eax, eax
		jnz	short loc_2B8
		push	1F0h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	79h ; 'y'

loc_296:				; CODE XREF: _PKCS7_encrypt+E2j
		push	73h ; 's'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h

$err$22:				; CODE XREF: _PKCS7_encrypt+37j
					; _PKCS7_encrypt+CEj
		push	0
		call	_BIO_free_all
		push	edi
		call	_PKCS7_free
		add	esp, 8
		xor	eax, eax
		pop	esi
		pop	ebx
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_2B8:				; CODE XREF: _PKCS7_encrypt+48j
		mov	ebx, [esp+0Ch+arg_0]
		xor	esi, esi
		push	ebx
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_2F3
		nop	dword ptr [eax+eax+00h]

loc_2D0:				; CODE XREF: _PKCS7_encrypt+B1j
		push	esi
		push	ebx
		call	_sk_value
		push	eax
		push	edi
		call	_PKCS7_add_recipient
		add	esp, 10h
		test	eax, eax
		jz	short loc_316
		push	ebx
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_2D0

loc_2F3:				; CODE XREF: _PKCS7_encrypt+89j
		mov	eax, [esp+0Ch+arg_C]
		test	eax, 1000h
		jnz	short loc_310
		push	eax
		push	[esp+10h+arg_4]
		push	edi
		call	_PKCS7_final
		add	esp, 0Ch
		test	eax, eax
		jz	short $err$22

loc_310:				; CODE XREF: _PKCS7_encrypt+BCj
		pop	esi
		pop	ebx
		mov	eax, edi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_316:				; CODE XREF: _PKCS7_encrypt+A3j
		push	1F7h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	78h ; 'x'
		jmp	loc_296
_PKCS7_encrypt	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 328h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_final
_PKCS7_final	proc near		; CODE XREF: _PKCS7_encrypt+C4p
					; _PKCS7_sign+EEp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	edi
		xor	edi, edi
		push	edi
		push	[esp+0Ch+arg_0]
		call	_PKCS7_dataInit
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jnz	short loc_35C
		push	75h ; 'u'
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		push	86h ; 'Ü'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_35C:				; CODE XREF: _PKCS7_final+15j
		push	[esp+8+arg_8]
		push	esi
		push	[esp+10h+arg_4]
		call	_SMIME_crlf_copy
		push	0
		push	0
		push	0Bh
		push	esi
		call	_BIO_ctrl
		push	esi
		push	[esp+28h+arg_0]
		call	_PKCS7_dataFinal
		add	esp, 24h
		test	eax, eax
		jnz	short loc_3B0
		push	7Eh ; '~'
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	91h ; 'ë'
		push	86h ; 'Ü'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		push	esi
		call	_BIO_free_all
		add	esp, 4
		mov	eax, edi
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_3B0:				; CODE XREF: _PKCS7_final+5Dj
		mov	edi, 1

$err$6:
		push	esi
		call	_BIO_free_all
		add	esp, 4
		mov	eax, edi
		pop	edi
		pop	esi
		retn
_PKCS7_final	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_get0_signers
_PKCS7_get0_signers proc near		; CODE XREF: _PKCS7_verify+EBp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		mov	ebx, [esp+4+arg_0]
		test	ebx, ebx
		jnz	short loc_3EC
		push	1ACh
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	8Fh ; 'è'
		push	7Ch ; '|'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_3EC:				; CODE XREF: _PKCS7_get0_signers+7j
		push	dword ptr [ebx+10h]
		call	_OBJ_obj2nid
		add	esp, 4
		cmp	eax, 16h
		jz	short loc_418
		push	1B1h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	71h ; 'q'
		push	7Ch ; '|'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_418:				; CODE XREF: _PKCS7_get0_signers+36j
		push	ebx
		call	_PKCS7_get_signer_info
		mov	ebx, eax
		push	ebx
		call	_sk_num
		add	esp, 8
		test	eax, eax
		jg	short loc_44C
		push	1BAh
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	8Eh ; 'é'
		push	7Ch ; '|'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_44C:				; CODE XREF: _PKCS7_get0_signers+67j
		push	ebp
		call	_sk_new_null
		mov	ebp, eax
		test	ebp, ebp
		jnz	short loc_475
		push	1BFh
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		push	7Ch ; '|'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_475:				; CODE XREF: _PKCS7_get0_signers+92j
		push	esi
		push	edi
		push	ebx
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_4F0

loc_486:				; CODE XREF: _PKCS7_get0_signers+12Aj
		push	esi
		push	ebx
		call	_sk_value
		add	esp, 8
		mov	edi, [eax+4]
		mov	eax, [esp+10h+arg_4]
		test	eax, eax
		jz	short loc_4AD
		push	dword ptr [edi+4]
		push	dword ptr [edi]
		push	eax
		call	_X509_find_by_issuer_and_serial
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_4D4

loc_4AD:				; CODE XREF: _PKCS7_get0_signers+D5j
		test	[esp+10h+arg_8], 10h
		jnz	short loc_507
		mov	eax, [esp+10h+arg_0]
		mov	eax, [eax+14h]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_507
		push	dword ptr [edi+4]
		push	dword ptr [edi]
		push	eax
		call	_X509_find_by_issuer_and_serial
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_507

loc_4D4:				; CODE XREF: _PKCS7_get0_signers+E7j
		push	eax
		push	ebp
		call	_sk_push
		add	esp, 8
		test	eax, eax
		jz	short loc_4F7
		push	ebx
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_486

loc_4F0:				; CODE XREF: _PKCS7_get0_signers+C0j
		pop	edi
		pop	esi
		mov	eax, ebp
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_4F7:				; CODE XREF: _PKCS7_get0_signers+11Cj
		push	ebp
		call	_sk_free
		add	esp, 4
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_507:				; CODE XREF: _PKCS7_get0_signers+EEj
					; _PKCS7_get0_signers+FCj ...
		push	1D2h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	80h ; 'Ä'
		push	7Ch ; '|'
		push	21h ; '!'
		call	_ERR_put_error
		push	ebp
		call	_sk_free
		add	esp, 18h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_PKCS7_get0_signers endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 530h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_sign
_PKCS7_sign	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	esi
		call	_PKCS7_new
		mov	esi, eax
		test	esi, esi
		jnz	short loc_555
		push	4Ch ; 'L'
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		push	74h ; 't'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_555:				; CODE XREF: _PKCS7_sign+Aj
		push	ebx
		push	edi
		push	16h
		push	esi
		call	_PKCS7_set_type
		add	esp, 8
		test	eax, eax
		jz	short $err$25
		push	15h
		push	esi
		call	_PKCS7_content_new
		add	esp, 8
		test	eax, eax
		jz	short $err$25
		mov	eax, [esp+0Ch+arg_4]
		mov	ebx, [esp+0Ch+arg_10]
		test	eax, eax
		jz	short loc_5BD
		push	ebx
		push	0
		push	eax
		push	[esp+18h+arg_0]
		push	esi
		call	_PKCS7_sign_add_signer
		add	esp, 14h
		test	eax, eax
		jnz	short loc_5BD
		push	57h ; 'W'
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	99h ; 'ô'
		push	74h ; 't'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h

$err$25:				; CODE XREF: _PKCS7_sign+34j
					; _PKCS7_sign+43j ...
		push	esi
		call	_PKCS7_free
		add	esp, 4
		xor	eax, eax
		pop	edi
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_5BD:				; CODE XREF: _PKCS7_sign+4Fj
					; _PKCS7_sign+64j
		test	bl, 2
		jnz	short loc_5FC
		mov	ebx, [esp+0Ch+arg_8]
		xor	edi, edi
		push	ebx
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_5F8

loc_5D5:				; CODE XREF: _PKCS7_sign+C6j
		push	edi
		push	ebx
		call	_sk_value
		push	eax
		push	esi
		call	_PKCS7_add_certificate
		add	esp, 10h
		test	eax, eax
		jz	short $err$25
		push	ebx
		inc	edi
		call	_sk_num
		add	esp, 4
		cmp	edi, eax
		jl	short loc_5D5

loc_5F8:				; CODE XREF: _PKCS7_sign+A3j
		mov	ebx, [esp+0Ch+arg_10]

loc_5FC:				; CODE XREF: _PKCS7_sign+90j
		test	bl, 40h
		jz	short loc_610
		push	0
		push	1
		push	1
		push	esi
		call	_PKCS7_ctrl
		add	esp, 10h

loc_610:				; CODE XREF: _PKCS7_sign+CFj
		test	ebx, 5000h
		jnz	short loc_62A
		push	ebx
		push	[esp+10h+arg_C]
		push	esi
		call	_PKCS7_final
		add	esp, 0Ch
		test	eax, eax
		jz	short $err$25

loc_62A:				; CODE XREF: _PKCS7_sign+E6j
		pop	edi
		pop	ebx
		mov	eax, esi
		pop	esi
		retn
_PKCS7_sign	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 630h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_sign_add_signer
_PKCS7_sign_add_signer proc near	; CODE XREF: _PKCS7_sign+5Ap

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	esi
		mov	esi, [esp+4+arg_4]
		push	edi
		mov	edi, [esp+8+arg_8]
		push	edi
		push	esi
		call	_X509_check_private_key
		add	esp, 8
		test	eax, eax
		jnz	short loc_668
		push	0A3h ; '£'
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	7Fh ; ''
		push	89h ; 'â'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_668:				; CODE XREF: _PKCS7_sign_add_signer+16j
		push	ebp
		push	[esp+0Ch+arg_C]
		mov	ebp, [esp+10h+arg_0]
		push	edi
		push	esi
		push	ebp
		call	_PKCS7_add_signature
		mov	edi, eax
		add	esp, 10h
		test	edi, edi
		jnz	short loc_6A3
		push	0A9h ; '©'
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	7Ch ; '|'
		push	89h ; 'â'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebp
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6A3:				; CODE XREF: _PKCS7_sign_add_signer+50j
		push	ebx
		mov	ebx, [esp+10h+arg_10]
		test	bl, 2
		jnz	short loc_6BF
		push	esi
		push	ebp
		call	_PKCS7_add_certificate
		add	esp, 8
		test	eax, eax
		jz	loc_84D

loc_6BF:				; CODE XREF: _PKCS7_sign_add_signer+7Bj
		test	ebx, 100h
		jnz	loc_869
		push	0
		push	edi
		call	_PKCS7_add_attrib_content_type
		add	esp, 8
		test	eax, eax
		jz	loc_84D
		test	ebx, 200h
		jnz	loc_822
		call	_sk_new_null
		mov	esi, eax
		test	esi, esi
		jnz	short loc_717
		push	0B8h ; '∏'
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		push	89h ; 'â'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		pop	ebp
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_717:				; CODE XREF: _PKCS7_sign_add_signer+C3j
		push	0FFFFFFFFh
		push	1ABh
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	$err$24
		push	329h
		call	_OBJ_nid2sn
		push	eax
		call	_EVP_get_digestbyname
		add	esp, 8
		test	eax, eax
		jz	short loc_75E
		push	0FFFFFFFFh
		push	329h
		push	esi
		call	_PKCS7_simple_smimecap
		add	esp, 0Ch
		test	eax, eax
		jz	$err$24

loc_75E:				; CODE XREF: _PKCS7_sign_add_signer+114j
		push	0FFFFFFFFh
		push	32Dh
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	$err$24
		push	0FFFFFFFFh
		push	1A7h
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	$err$24
		push	0FFFFFFFFh
		push	1A3h
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	$err$24
		push	0FFFFFFFFh
		push	2Ch ; ','
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	$err$24
		push	80h ; 'Ä'
		push	25h ; '%'
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	$err$24
		push	40h ; '@'
		push	25h ; '%'
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	short $err$24
		push	0FFFFFFFFh
		push	1Fh
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	short $err$24
		push	28h ; '('
		push	25h ; '%'
		push	esi
		call	_add_cipher_smcap
		add	esp, 0Ch
		test	eax, eax
		jz	short $err$24
		push	esi
		push	edi
		call	_PKCS7_add_attrib_smimecap
		add	esp, 8
		test	eax, eax
		jz	short $err$24
		push	offset _X509_ALGOR_free
		push	esi
		call	_sk_pop_free
		add	esp, 8

loc_822:				; CODE XREF: _PKCS7_sign_add_signer+B4j
		test	ebx, 8000h
		jz	short loc_869
		push	edi
		push	ebp
		call	_pkcs7_copy_existing_digest
		add	esp, 8
		test	eax, eax
		jz	short loc_84D
		test	ebx, 4000h
		jnz	short loc_869
		push	edi
		call	_PKCS7_SIGNER_INFO_sign
		add	esp, 4
		test	eax, eax
		jnz	short loc_869

loc_84D:				; CODE XREF: _PKCS7_sign_add_signer+89j
					; _PKCS7_sign_add_signer+A8j ...
		pop	ebx
		pop	ebp
		pop	edi
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

$err$24:				; CODE XREF: _PKCS7_sign_add_signer+F9j
					; _PKCS7_sign_add_signer+128j ...
		push	offset _X509_ALGOR_free
		push	esi
		call	_sk_pop_free
		add	esp, 8
		xor	eax, eax
		pop	ebx
		pop	ebp
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_869:				; CODE XREF: _PKCS7_sign_add_signer+95j
					; _PKCS7_sign_add_signer+1F8j ...
		pop	ebx
		pop	ebp
		mov	eax, edi
		pop	edi
		pop	esi
		retn
_PKCS7_sign_add_signer endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 870h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_verify
_PKCS7_verify	proc near

var_10B0	= dword	ptr -10B0h
var_10AC	= dword	ptr -10ACh
var_10A8	= dword	ptr -10A8h
var_10A4	= dword	ptr -10A4h
var_10A0	= dword	ptr -10A0h
var_109C	= dword	ptr -109Ch
var_1098	= dword	ptr -1098h
var_1094	= dword	ptr -1094h
var_1090	= dword	ptr -1090h
var_108C	= byte ptr -108Ch
var_1004	= byte ptr -1004h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, 10B0h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+10B0h+var_4], eax
		mov	eax, [esp+10B0h+arg_8]
		mov	[esp+10B0h+var_10B0], eax
		mov	eax, [esp+10B0h+arg_10]
		push	ebx
		mov	ebx, [esp+10B4h+arg_0]
		mov	[esp+10B4h+var_1098], eax
		mov	eax, [esp+10B4h+arg_14]
		push	ebp
		mov	ebp, [esp+10B8h+arg_C]
		mov	[esp+10B8h+var_10AC], eax
		xor	eax, eax
		mov	[esp+10B8h+var_1094], ebp
		mov	[esp+10B8h+var_109C], eax
		mov	[esp+10B8h+var_10A4], eax
		push	esi
		mov	esi, [esp+10BCh+arg_4]
		test	ebx, ebx
		jnz	short loc_8E6
		push	107h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	8Fh ; 'è'
		jmp	loc_CFC
; ---------------------------------------------------------------------------

loc_8E6:				; CODE XREF: _PKCS7_verify+60j
		push	dword ptr [ebx+10h]
		call	_OBJ_obj2nid
		add	esp, 4
		cmp	eax, 16h
		jz	short loc_907
		push	10Ch
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	71h ; 'q'
		jmp	loc_CFC
; ---------------------------------------------------------------------------

loc_907:				; CODE XREF: _PKCS7_verify+84j
		push	0
		push	0
		push	2
		push	ebx
		call	_PKCS7_ctrl
		add	esp, 10h
		test	eax, eax
		jz	short loc_92F
		test	ebp, ebp
		jnz	short loc_92F
		push	112h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	7Ah ; 'z'
		jmp	loc_CFC
; ---------------------------------------------------------------------------

loc_92F:				; CODE XREF: _PKCS7_verify+A8j
					; _PKCS7_verify+ACj
		push	ebx
		call	_PKCS7_get_signer_info
		add	esp, 4
		mov	[esp+10BCh+var_10A8], eax
		test	eax, eax
		jz	loc_CF0
		push	eax
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jz	loc_CF0
		push	[esp+10BCh+var_10AC]
		push	esi
		push	ebx
		call	_PKCS7_get0_signers
		mov	ebp, eax
		add	esp, 0Ch
		mov	[esp+10BCh+var_1090], ebp
		test	ebp, ebp
		jz	loc_D08
		test	byte ptr [esp+10BCh+var_10AC], 20h
		push	edi
		jnz	loc_B05
		push	ebp
		xor	edi, edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	loc_B05
		mov	esi, [esp+10C0h+var_10AC]
		and	esi, 8
		mov	[esp+10C0h+var_10A0], esi
		nop	dword ptr [eax+eax+00h]

loc_9A0:				; CODE XREF: _PKCS7_verify+1F8j
		push	edi
		push	ebp
		call	_sk_value
		add	esp, 8
		mov	ecx, eax
		test	esi, esi
		jnz	short loc_9E4
		mov	eax, [ebx+14h]
		push	dword ptr [eax+8]
		lea	eax, [esp+10C4h+var_108C]
		push	ecx
		push	[esp+10C8h+var_10B0]
		push	eax
		call	_X509_STORE_CTX_init
		add	esp, 10h
		test	eax, eax
		jz	loc_A6D
		lea	eax, [esp+10C0h+var_108C]
		push	offset ??_C@_0L@GGDBHMO@smime_sign?$AA@	; "smime_sign"
		push	eax
		call	_X509_STORE_CTX_set_default
		add	esp, 8
		jmp	short loc_A00
; ---------------------------------------------------------------------------

loc_9E4:				; CODE XREF: _PKCS7_verify+13Ej
		push	0
		push	ecx
		push	[esp+10C8h+var_10B0]
		lea	eax, [esp+10CCh+var_108C]
		push	eax
		call	_X509_STORE_CTX_init
		add	esp, 10h
		test	eax, eax
		jz	loc_AFB

loc_A00:				; CODE XREF: _PKCS7_verify+172j
		test	[esp+10C0h+var_10AC], 2000h
		jnz	short loc_A1D
		mov	eax, [ebx+14h]
		push	dword ptr [eax+0Ch]
		lea	eax, [esp+10C4h+var_108C]
		push	eax
		call	_X509_STORE_CTX_set0_crls
		add	esp, 8

loc_A1D:				; CODE XREF: _PKCS7_verify+198j
		lea	eax, [esp+10C0h+var_108C]
		push	eax
		call	_X509_verify_cert
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jg	short loc_A41
		lea	eax, [esp+10C0h+var_108C]
		push	eax
		call	_X509_STORE_CTX_get_error
		add	esp, 4
		mov	[esp+10C0h+var_109C], eax

loc_A41:				; CODE XREF: _PKCS7_verify+1BEj
		lea	eax, [esp+10C0h+var_108C]
		push	eax
		call	_X509_STORE_CTX_cleanup
		add	esp, 4
		test	esi, esi
		jle	short loc_ACA
		push	ebp
		inc	edi
		call	_sk_num
		add	esp, 4
		cmp	edi, eax
		jge	loc_B05
		mov	esi, [esp+10C0h+var_10A0]
		jmp	loc_9A0
; ---------------------------------------------------------------------------

loc_A6D:				; CODE XREF: _PKCS7_verify+15Aj
		push	140h

loc_A72:				; CODE XREF: _PKCS7_verify+290j
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	0Bh

loc_A79:				; CODE XREF: _PKCS7_verify+2DDj
		push	75h ; 'u'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h

loc_A85:				; CODE XREF: _PKCS7_verify+289j
		xor	esi, esi

loc_A87:				; CODE XREF: _PKCS7_verify+2FAj
					; _PKCS7_verify+339j ...
		xor	ebx, ebx

$err$68:				; CODE XREF: _PKCS7_verify+416j
					; _PKCS7_verify+45Ej
		mov	eax, [esp+10C0h+var_1094]
		pop	edi
		cmp	[esp+10BCh+var_10A4], eax
		jnz	short loc_AA1
		test	eax, eax
		jz	short loc_AA1
		push	esi
		call	_BIO_pop
		add	esp, 4

loc_AA1:				; CODE XREF: _PKCS7_verify+222j
					; _PKCS7_verify+226j
		push	esi
		call	_BIO_free_all
		push	ebp
		call	_sk_free
		add	esp, 8
		mov	eax, ebx
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+10B0h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 10B0h
		retn
; ---------------------------------------------------------------------------

loc_ACA:				; CODE XREF: _PKCS7_verify+1E0j
		push	150h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	75h ; 'u'
		push	75h ; 'u'
		push	21h ; '!'
		call	_ERR_put_error
		mov	eax, [esp+10D4h+var_109C]
		push	eax
		call	_X509_verify_cert_error_string
		push	eax
		push	offset ??_C@_0O@HFNJECFC@Verify?5error?3?$AA@ ;	"Verify	error:"
		push	2
		call	_ERR_add_error_data
		add	esp, 24h
		jmp	short loc_A85
; ---------------------------------------------------------------------------

loc_AFB:				; CODE XREF: _PKCS7_verify+18Aj
		push	145h
		jmp	loc_A72
; ---------------------------------------------------------------------------

loc_B05:				; CODE XREF: _PKCS7_verify+107j
					; _PKCS7_verify+11Aj ...
		mov	esi, [esp+10C0h+var_1094]
		test	esi, esi
		jz	short loc_B52
		push	esi
		call	_BIO_method_type
		add	esp, 4
		cmp	eax, 401h
		jnz	short loc_B52
		lea	eax, [esp+10C0h+var_10A0]
		push	eax
		push	0
		push	3
		push	esi
		call	_BIO_ctrl
		push	eax
		push	[esp+10D4h+var_10A0]
		call	_BIO_new_mem_buf
		add	esp, 18h
		mov	[esp+10C0h+var_10A4], eax
		test	eax, eax
		jnz	short loc_B58
		push	165h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		jmp	loc_A79
; ---------------------------------------------------------------------------

loc_B52:				; CODE XREF: _PKCS7_verify+29Bj
					; _PKCS7_verify+2ABj
		mov	eax, esi
		mov	[esp+10C0h+var_10A4], esi

loc_B58:				; CODE XREF: _PKCS7_verify+2CFj
		push	eax
		push	ebx
		call	_PKCS7_dataInit
		mov	esi, eax
		add	esp, 8
		mov	[esp+10C0h+var_10B0], esi
		test	esi, esi
		jz	loc_A87
		mov	edi, [esp+10C0h+var_10AC]
		and	edi, 1
		jz	short loc_BC2
		call	_BIO_s_mem
		push	eax
		call	_BIO_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_BAE
		push	170h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	41h ; 'A'
		push	75h ; 'u'
		push	21h ; '!'
		call	_ERR_put_error
		mov	esi, [esp+10D4h+var_10B0]
		add	esp, 14h
		jmp	loc_A87
; ---------------------------------------------------------------------------

loc_BAE:				; CODE XREF: _PKCS7_verify+31Bj
		push	0
		push	0
		push	82h ; 'Ç'
		push	esi
		call	_BIO_ctrl
		add	esp, 10h
		jmp	short loc_BC6
; ---------------------------------------------------------------------------

loc_BC2:				; CODE XREF: _PKCS7_verify+307j
		mov	esi, [esp+10C0h+var_1098]

loc_BC6:				; CODE XREF: _PKCS7_verify+350j
		push	1000h
		lea	eax, [esp+10C4h+var_1004]
		push	eax
		push	[esp+10C8h+var_10B0]
		call	_BIO_read
		add	esp, 0Ch
		test	eax, eax
		jle	short loc_C1B
		mov	ebp, [esp+10C0h+var_10B0]

loc_BE7:				; CODE XREF: _PKCS7_verify+3A5j
		test	esi, esi
		jz	short loc_BFD
		push	eax
		lea	eax, [esp+10C4h+var_1004]
		push	eax
		push	esi
		call	_BIO_write
		add	esp, 0Ch

loc_BFD:				; CODE XREF: _PKCS7_verify+379j
		push	1000h
		lea	eax, [esp+10C4h+var_1004]
		push	eax
		push	ebp
		call	_BIO_read
		add	esp, 0Ch
		test	eax, eax
		jg	short loc_BE7
		mov	ebp, [esp+10C0h+var_1090]

loc_C1B:				; CODE XREF: _PKCS7_verify+371j
		test	edi, edi
		jz	short loc_C63
		push	[esp+10C0h+var_1098]
		push	esi
		call	_SMIME_text
		add	esp, 8
		test	eax, eax
		jnz	short loc_C5A
		push	182h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	81h ; 'Å'
		push	75h ; 'u'
		push	21h ; '!'
		call	_ERR_put_error
		push	esi
		call	_BIO_free
		mov	esi, [esp+10D8h+var_10B0]
		add	esp, 18h
		jmp	loc_A87
; ---------------------------------------------------------------------------

loc_C5A:				; CODE XREF: _PKCS7_verify+3BEj
		push	esi
		call	_BIO_free
		add	esp, 4

loc_C63:				; CODE XREF: _PKCS7_verify+3ADj
		test	byte ptr [esp+10C0h+var_10AC], 4
		jnz	short loc_C7D
		mov	esi, [esp+10C0h+var_10A8]
		xor	edi, edi
		push	esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jg	short loc_C94

loc_C7D:				; CODE XREF: _PKCS7_verify+3F8j
		mov	esi, [esp+10C0h+var_10B0]
		mov	ebx, 1
		jmp	$err$68
; ---------------------------------------------------------------------------
		align 10h

loc_C90:				; CODE XREF: _PKCS7_verify+457j
		mov	esi, [esp+10C0h+var_10A8]

loc_C94:				; CODE XREF: _PKCS7_verify+40Bj
		push	edi
		push	esi
		call	_sk_value
		push	edi
		push	ebp
		mov	esi, eax
		call	_sk_value
		push	eax
		push	esi
		mov	esi, [esp+10D8h+var_10B0]
		push	ebx
		push	esi
		call	_PKCS7_signatureVerify
		add	esp, 20h
		test	eax, eax
		jle	short loc_CD3
		push	[esp+10C0h+var_10A8]
		inc	edi
		call	_sk_num
		add	esp, 4
		cmp	edi, eax
		jl	short loc_C90
		mov	ebx, 1
		jmp	$err$68
; ---------------------------------------------------------------------------

loc_CD3:				; CODE XREF: _PKCS7_verify+446j
		push	190h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	69h ; 'i'
		push	75h ; 'u'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_A87
; ---------------------------------------------------------------------------

loc_CF0:				; CODE XREF: _PKCS7_verify+CEj
					; _PKCS7_verify+DFj
		push	130h
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	7Bh ; '{'

loc_CFC:				; CODE XREF: _PKCS7_verify+71j
					; _PKCS7_verify+92j ...
		push	75h ; 'u'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h

loc_D08:				; CODE XREF: _PKCS7_verify+FBj
		mov	ecx, [esp+10BCh+var_4]
		xor	eax, eax
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 10B0h
		retn
_PKCS7_verify	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D24h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_add_cipher_smcap proc near		; CODE XREF: _PKCS7_sign_add_signer+EFp
					; _PKCS7_sign_add_signer+136p ...

arg_4		= dword	ptr  8

		push	[esp+arg_4]
		call	_OBJ_nid2sn
		push	eax
		call	_EVP_get_cipherbyname
		add	esp, 8
		test	eax, eax
		jnz	_PKCS7_simple_smimecap
		mov	eax, 1
		retn
_add_cipher_smcap endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D44h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_add_digest_smcap proc near

arg_4		= dword	ptr  8

		push	[esp+arg_4]
		call	_OBJ_nid2sn
		push	eax
		call	_EVP_get_digestbyname
		add	esp, 8
		test	eax, eax
		jnz	_PKCS7_simple_smimecap
		mov	eax, 1
		retn
_add_digest_smcap endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D64h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_pkcs7_copy_existing_digest proc near	; CODE XREF: _PKCS7_sign_add_signer+1FCp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		push	ebp
		push	esi
		push	edi
		push	[esp+10h+arg_0]
		call	_PKCS7_get_signer_info
		mov	ebx, eax
		xor	esi, esi
		push	ebx
		call	_sk_num
		add	esp, 8
		test	eax, eax
		jle	short loc_DC9
		mov	ebp, [esp+10h+arg_4]

loc_D86:				; CODE XREF: _pkcs7_copy_existing_digest+63j
		push	esi
		push	ebx
		call	_sk_value
		mov	edi, eax
		add	esp, 8
		cmp	ebp, edi
		jz	short loc_DC9
		push	dword ptr [edi+0Ch]
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_DBB
		mov	eax, [edi+8]
		push	dword ptr [eax]
		mov	eax, [ebp+8]
		push	dword ptr [eax]
		call	_OBJ_cmp
		add	esp, 8
		test	eax, eax
		jz	short loc_DEE

loc_DBB:				; CODE XREF: _pkcs7_copy_existing_digest+3Fj
		push	ebx
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_D86

loc_DC9:				; CODE XREF: _pkcs7_copy_existing_digest+1Cj
					; _pkcs7_copy_existing_digest+30j ...
		push	0F5h ; 'ı'
		push	offset ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ ;	".\\crypto\\pkcs7\\pk7_smime.c"
		push	9Ah ; 'ö'
		push	8Ah ; 'ä'
		push	21h ; '!'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_DEE:				; CODE XREF: _pkcs7_copy_existing_digest+55j
		push	dword ptr [edi+0Ch]
		call	_PKCS7_digest_from_attributes
		add	esp, 4
		test	eax, eax
		jz	short loc_DC9
		push	dword ptr [eax]
		push	dword ptr [eax+8]
		push	ebp
		call	_PKCS7_add1_attrib_digest
		add	esp, 0Ch
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_pkcs7_copy_existing_digest endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E10h
; COMDAT (pick any)
		public ??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@
; `string'
??_C@_0BL@EEIGAKG@?4?2crypto?2pkcs7?2pk7_smime?4c?$AA@ db '.\crypto\pkcs7\pk7_smime.c',0
					; DATA XREF: _PKCS7_decrypt+41o
					; _PKCS7_decrypt+73o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E2Ch
; COMDAT (pick any)
		public ??_C@_0L@GGDBHMO@smime_sign?$AA@
; `string'
??_C@_0L@GGDBHMO@smime_sign?$AA@ db 'smime_sign',0 ; DATA XREF: _PKCS7_verify+164o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E38h
; COMDAT (pick any)
		public ??_C@_0O@HFNJECFC@Verify?5error?3?$AA@
; `string'
??_C@_0O@HFNJECFC@Verify?5error?3?$AA@ db 'Verify error:',0 ; DATA XREF: _PKCS7_verify+27Ao
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_num:near	; CODE XREF: _PKCS7_encrypt+7Fp
					; _PKCS7_encrypt+A7p ...
		extrn _sk_value:near	; CODE XREF: _PKCS7_encrypt+92p
					; _PKCS7_get0_signers+C4p ...
		extrn _sk_new_null:near	; CODE XREF: _PKCS7_get0_signers+89p
					; _PKCS7_sign_add_signer+BAp
		extrn _sk_free:near	; CODE XREF: _PKCS7_get0_signers+134p
					; _PKCS7_get0_signers+15Cp ...
		extrn _sk_pop_free:near	; CODE XREF: _PKCS7_sign_add_signer+1EAp
					; _PKCS7_sign_add_signer+22Ap
		extrn _sk_push:near	; CODE XREF: _PKCS7_get0_signers+112p
		extrn _BIO_method_type:near ; CODE XREF: _PKCS7_decrypt+183p
					; _PKCS7_decrypt+1F5p ...
		extrn _BIO_new:near	; CODE XREF: _PKCS7_decrypt+104p
					; _PKCS7_verify+30Fp
		extrn _BIO_free:near	; CODE XREF: _PKCS7_verify+3D9p
					; _PKCS7_verify+3EBp
		extrn _BIO_read:near	; CODE XREF: _PKCS7_decrypt+1B5p
					; _PKCS7_decrypt+1E1p ...
		extrn _BIO_write:near	; CODE XREF: _PKCS7_decrypt+1CAp
					; _PKCS7_verify+385p
		extrn _BIO_ctrl:near	; CODE XREF: _PKCS7_decrypt+199p
					; _PKCS7_decrypt+20Bp ...
		extrn _BIO_push:near	; CODE XREF: _PKCS7_decrypt+139p
		extrn _BIO_pop:near	; CODE XREF: _PKCS7_verify+229p
		extrn _BIO_free_all:near ; CODE	XREF: _PKCS7_decrypt+128p
					; _PKCS7_decrypt+15Dp ...
		extrn _BIO_s_mem:near	; CODE XREF: _PKCS7_verify+309p
		extrn _BIO_new_mem_buf:near ; CODE XREF: _PKCS7_verify+2C1p
		extrn _BIO_f_buffer:near ; CODE	XREF: _PKCS7_decrypt+FEp
		extrn _ERR_put_error:near ; CODE XREF: _PKCS7_decrypt+4Fp
					; _PKCS7_decrypt+7Ep ...
		extrn _ERR_add_error_data:near ; CODE XREF: _PKCS7_verify+281p
		extrn _SMIME_crlf_copy:near ; CODE XREF: _PKCS7_final+3Dp
		extrn _SMIME_text:near	; CODE XREF: _PKCS7_decrypt+174p
					; _PKCS7_verify+3B4p
		extrn _OBJ_nid2sn:near	; CODE XREF: _PKCS7_sign_add_signer+104p
					; _add_cipher_smcap+4p	...
		extrn _OBJ_obj2nid:near	; CODE XREF: _PKCS7_decrypt+61p
					; _PKCS7_get0_signers+2Bp ...
		extrn _OBJ_cmp:near	; CODE XREF: _pkcs7_copy_existing_digest+4Bp
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _add_cipher_smcap+Ap
		extrn _EVP_get_digestbyname:near ; CODE	XREF: _PKCS7_sign_add_signer+10Ap
					; _add_digest_smcap+Ap
		extrn _X509_STORE_CTX_init:near	; CODE XREF: _PKCS7_verify+150p
					; _PKCS7_verify+180p
		extrn _X509_STORE_CTX_cleanup:near ; CODE XREF:	_PKCS7_verify+1D6p
		extrn _X509_STORE_CTX_get_error:near ; CODE XREF: _PKCS7_verify+1C5p
		extrn _X509_STORE_CTX_set0_crls:near ; CODE XREF: _PKCS7_verify+1A5p
		extrn _X509_STORE_CTX_set_default:near ; CODE XREF: _PKCS7_verify+16Ap
		extrn _PKCS7_new:near	; CODE XREF: _PKCS7_encrypt+1p
					; _PKCS7_sign+1p
		extrn _PKCS7_free:near	; CODE XREF: _PKCS7_encrypt+6Ap
					; _PKCS7_sign+7Fp
		extrn _PKCS7_ctrl:near	; CODE XREF: _PKCS7_sign+D8p
					; _PKCS7_verify+9Ep
		extrn _PKCS7_set_type:near ; CODE XREF:	_PKCS7_encrypt+2Dp
					; _PKCS7_sign+2Ap
		extrn _PKCS7_SIGNER_INFO_sign:near ; CODE XREF:	_PKCS7_sign_add_signer+211p
		extrn _PKCS7_add_certificate:near ; CODE XREF: _PKCS7_sign+AEp
					; _PKCS7_sign_add_signer+7Fp
		extrn _PKCS7_content_new:near ;	CODE XREF: _PKCS7_sign+39p
		extrn _PKCS7_signatureVerify:near ; CODE XREF: _PKCS7_verify+43Cp
		extrn _PKCS7_dataInit:near ; CODE XREF:	_PKCS7_final+9p
					; _PKCS7_verify+2EAp
		extrn _PKCS7_dataFinal:near ; CODE XREF: _PKCS7_final+53p
		extrn _PKCS7_dataDecode:near ; CODE XREF: _PKCS7_decrypt+C3p
		extrn _PKCS7_add_signature:near	; CODE XREF: _PKCS7_sign_add_signer+44p
		extrn _PKCS7_get_signer_info:near ; CODE XREF: _PKCS7_get0_signers+55p
					; _PKCS7_verify+C0p ...
		extrn _PKCS7_add_recipient:near	; CODE XREF: _PKCS7_encrypt+99p
		extrn _PKCS7_set_cipher:near ; CODE XREF: _PKCS7_encrypt+3Ep
		extrn _PKCS7_digest_from_attributes:near
					; CODE XREF: _pkcs7_copy_existing_digest+8Dp
		extrn _PKCS7_add_attrib_smimecap:near
					; CODE XREF: _PKCS7_sign_add_signer+1D8p
		extrn _PKCS7_simple_smimecap:near ; CODE XREF: _PKCS7_sign_add_signer+11Ep
					; _add_cipher_smcap+14j ...
		extrn _PKCS7_add_attrib_content_type:near
					; CODE XREF: _PKCS7_sign_add_signer+9Ep
		extrn _PKCS7_add1_attrib_digest:near
					; CODE XREF: _pkcs7_copy_existing_digest+9Fp
		extrn _X509_verify_cert_error_string:near ; CODE XREF: _PKCS7_verify+274p
		extrn _X509_ALGOR_free:near ; DATA XREF: _PKCS7_sign_add_signer+1E4o
					; _PKCS7_sign_add_signer:$err$24o
		extrn _X509_check_private_key:near ; CODE XREF:	_PKCS7_decrypt+93p
					; _PKCS7_sign_add_signer+Cp
		extrn _X509_verify_cert:near ; CODE XREF: _PKCS7_verify+1B2p
		extrn _X509_find_by_issuer_and_serial:near
					; CODE XREF: _PKCS7_get0_signers+DDp
					; _PKCS7_get0_signers+104p
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _PKCS7_decrypt+231p
					; _PKCS7_verify+24Ep ...
		extrn __chkstk:near	; CODE XREF: _PKCS7_decrypt+5p
					; _PKCS7_verify+5p
		extrn ___security_cookie:near ;	DATA XREF: _PKCS7_decrypt+Ar
					; _PKCS7_verify+Ar


		end

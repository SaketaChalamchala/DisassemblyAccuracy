;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	746D8A1979F35A84C9BBF0825AA81101
; Input	CRC32 :	095734E7

; File Name   :	C:\compspace\Diff\openssl\obj\pem_x509.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PEM_read_X509
_PEM_read_X509	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		push	offset ??_C@_0M@BFIJENPO@CERTIFICATE?$AA@ ; "CERTIFICATE"
		push	offset _d2i_X509
		call	_PEM_ASN1_read
		add	esp, 18h
		retn
_PEM_read_X509	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 24h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PEM_read_bio_X509
_PEM_read_bio_X509 proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		push	offset ??_C@_0M@BFIJENPO@CERTIFICATE?$AA@ ; "CERTIFICATE"
		push	offset _d2i_X509
		call	_PEM_ASN1_read_bio
		add	esp, 18h
		retn
_PEM_read_bio_X509 endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 48h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PEM_write_X509
_PEM_write_X509	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	0
		push	0
		push	0
		push	0
		push	[esp+14h+arg_4]
		push	[esp+18h+arg_0]
		push	offset ??_C@_0M@BFIJENPO@CERTIFICATE?$AA@ ; "CERTIFICATE"
		push	offset _i2d_X509
		call	_PEM_ASN1_write
		add	esp, 24h
		retn
_PEM_write_X509	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 70h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PEM_write_bio_X509
_PEM_write_bio_X509 proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	0
		push	0
		push	0
		push	0
		push	[esp+14h+arg_4]
		push	[esp+18h+arg_0]
		push	offset ??_C@_0M@BFIJENPO@CERTIFICATE?$AA@ ; "CERTIFICATE"
		push	offset _i2d_X509
		call	_PEM_ASN1_write_bio
		add	esp, 24h
		retn
_PEM_write_bio_X509 endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
; COMDAT (pick any)
		public ??_C@_0M@BFIJENPO@CERTIFICATE?$AA@
; `string'
??_C@_0M@BFIJENPO@CERTIFICATE?$AA@ db 'CERTIFICATE',0 ; DATA XREF: _PEM_read_X509+10o
					; _PEM_read_bio_X509+10o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _d2i_X509:near	; DATA XREF: _PEM_read_X509+15o
					; _PEM_read_bio_X509+15o
		extrn _i2d_X509:near	; DATA XREF: _PEM_write_X509+17o
					; _PEM_write_bio_X509+17o
		extrn _PEM_ASN1_read_bio:near ;	CODE XREF: _PEM_read_bio_X509+1Ap
		extrn _PEM_ASN1_write_bio:near ; CODE XREF: _PEM_write_bio_X509+1Cp
		extrn _PEM_ASN1_read:near ; CODE XREF: _PEM_read_X509+1Ap
		extrn _PEM_ASN1_write:near ; CODE XREF:	_PEM_write_X509+1Cp


		end

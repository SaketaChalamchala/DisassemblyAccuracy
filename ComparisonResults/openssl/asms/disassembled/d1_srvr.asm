;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	1C00F90BDE1F6F8536137E48118C600D
; Input	CRC32 :	723C94F6

; File Name   :	C:\compspace\Diff\openssl\obj\d1_srvr.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _dtls1_accept
_dtls1_accept	proc near		; DATA XREF: _dtls1_accept+9D0o
					; .rdata:00000C8Co ...

var_1C		= qword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 8
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		push	0		; Time
		call	dword ptr ds:__imp___time64
		mov	[esp+18h+var_4], eax
		add	esp, 4
		xor	eax, eax
		mov	[esp+14h+var_8], eax
		mov	eax, 8
		call	__chkstk
		xorps	xmm0, xmm0
		lea	eax, [esp+1Ch+var_4]
		movsd	[esp+1Ch+var_1C], xmm0
		push	4
		push	eax
		call	_RAND_add
		add	esp, 10h
		call	_ERR_clear_error
		push	0		; dwErrCode
		call	dword ptr ds:__imp__SetLastError@4 ; SetLastError(x)
		mov	esi, [esp+14h+arg_0]
		mov	ebx, [esi+0D0h]
		test	ebx, ebx
		jnz	short loc_6F
		mov	eax, [esi+0E4h]
		mov	eax, [eax+9Ch]
		test	eax, eax
		cmovnz	ebx, eax

loc_6F:					; CODE XREF: _dtls1_accept+5Cj
		mov	eax, [esi+5Ch]
		push	esi
		mov	ebp, [eax+254h]
		inc	dword ptr [esi+1Ch]
		mov	[esp+18h+arg_0], ebp
		call	_SSL_state
		add	esp, 4
		test	eax, 3000h
		jz	short loc_9F
		push	esi
		call	_SSL_state
		add	esp, 4
		test	eax, 4000h
		jz	short loc_A8

loc_9F:					; CODE XREF: _dtls1_accept+8Dj
		push	esi
		call	_SSL_clear
		add	esp, 4

loc_A8:					; CODE XREF: _dtls1_accept+9Dj
		mov	eax, [esi+5Ch]
		mov	[eax+254h], ebp
		cmp	dword ptr [esi+98h], 0
		jnz	short loc_E2
		push	0CBh ; 'Ë'
		push	offset ??_C@_0BA@BMNEEFGP@?4?2ssl?2d1_srvr?4c?$AA@ ; ".\\ssl\\d1_srvr.c"
		push	0B3h ; '³'
		push	0F6h ; 'ö'
		push	14h
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_E2:					; CODE XREF: _dtls1_accept+B8j
		cmp	dword ptr [esi+188h], 0
		jz	short loc_104
		push	esi
		call	_dtls1_stop_timer
		add	esp, 4
		mov	dword ptr [esi+188h], 0
		inc	dword ptr [esi+18Ch]

loc_104:				; CODE XREF: _dtls1_accept+E9j
		push	edi
		xor	ecx, ecx

loc_107:				; CODE XREF: _dtls1_accept+987j
		mov	ebp, [esi+34h]
		mov	edi, 200h
		mov	eax, ebp
		cmp	eax, 2100h
		jg	short loc_16E
		jz	short loc_136
		sub	eax, 3
		jz	loc_98C
		sub	eax, 1FFDh
		jz	loc_83D
		sub	eax, 3
		jmp	loc_837
; ---------------------------------------------------------------------------

loc_136:				; CODE XREF: _dtls1_accept+118j
		push	0
		push	0
		push	0Bh
		push	dword ptr [esi+10h]
		mov	dword ptr [esi+18h], 2
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jle	loc_A0F
		mov	eax, [esi+58h]
		mov	dword ptr [esi+18h], 1
		mov	eax, [eax+350h]
		mov	[esi+34h], eax
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_16E:				; CODE XREF: _dtls1_accept+116j
		cmp	eax, 3004h
		jg	loc_82B
		jz	loc_81F
		sub	eax, 2110h	; switch 242 cases
		cmp	eax, 0F1h ; 'ñ'
		ja	$LN141		; jumptable 00000196 default case
		movzx	eax, ds:$LN155[eax]
		jmp	ds:$LN166[eax*4] ; switch jump
; ---------------------------------------------------------------------------

$LN27:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8480,8481
		mov	dword ptr [esi+30h], 0
		call	_dtls1_clear_record_buffer
		push	esi
		call	_dtls1_start_timer
		push	esi
		call	_ssl3_send_hello_request
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jle	$end$167
		mov	eax, [esi+58h]
		push	esi
		mov	dword ptr [eax+350h], 2110h
		mov	dword ptr [esi+34h], 2100h
		mov	dword ptr [esi+44h], 0
		call	_ssl3_init_finished_mac
		add	esp, 4
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN29:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		mov	dword ptr [esi+34h], 3 ; jumptable 00000196 case 8482
		jmp	loc_932
; ---------------------------------------------------------------------------

$LN30:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8464-8466
		mov	dword ptr [esi+30h], 0
		call	_ssl3_get_client_hello
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jle	$end$167
		push	esi
		call	_dtls1_stop_timer
		add	esp, 4
		cmp	edi, 1
		jnz	short loc_23F
		push	0
		push	0
		push	20h ; ' '
		push	esi
		call	_SSL_ctrl
		add	esp, 10h
		test	eax, 2000h
		jz	short loc_23F
		mov	dword ptr [esi+34h], 2113h
		jmp	short loc_246
; ---------------------------------------------------------------------------

loc_23F:				; CODE XREF: _dtls1_accept+21Ej
					; _dtls1_accept+234j
		mov	dword ptr [esi+34h], 2130h

loc_246:				; CODE XREF: _dtls1_accept+23Dj
		cmp	[esp+18h+arg_0], 0
		mov	dword ptr [esi+44h], 0
		jz	loc_92E
		mov	ecx, [esi+58h]
		mov	eax, [ecx+8]
		mov	[ecx+54h], eax
		mov	eax, [ecx+0Ch]
		mov	[ecx+58h], eax
		cmp	dword ptr [esi+34h], 2130h
		jnz	loc_92E
		mov	eax, [esi+5Ch]
		mov	edi, 2
		mov	ecx, edi
		mov	dword ptr [eax+254h], 0
		mov	eax, [esi+5Ch]
		mov	[eax+228h], cx
		mov	ecx, 1
		mov	eax, [esi+5Ch]
		mov	[eax+224h], cx
		mov	eax, [esi+5Ch]
		mov	[eax+226h], cx
		jmp	$end$167
; ---------------------------------------------------------------------------

$LN36:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8467,8468
		call	_dtls1_send_hello_verify_request
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jle	$end$167
		mov	eax, [esi+58h]
		mov	dword ptr [esi+34h], 2100h
		mov	dword ptr [eax+350h], 2110h
		cmp	dword ptr [esi], 100h
		jz	loc_92E
		push	esi
		call	_ssl3_init_finished_mac
		add	esp, 4
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN39:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8496,8497
		mov	dword ptr [esi+190h], 2
		call	_dtls1_start_timer
		push	esi
		call	_ssl3_send_server_hello
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jle	$end$167
		cmp	dword ptr [esi+6Ch], 0
		jz	short loc_33D
		cmp	dword ptr [esi+140h], 0
		mov	eax, 21D0h
		mov	ecx, 21F0h
		mov	dword ptr [esi+44h], 0
		cmovnz	eax, ecx
		mov	[esi+34h], eax
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_33D:				; CODE XREF: _dtls1_accept+318j
		mov	dword ptr [esi+34h], 2140h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN45:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		mov	eax, [esi+58h]	; jumptable 00000196 cases 8512,8513
		mov	eax, [eax+344h]
		test	byte ptr [eax+10h], 4
		jnz	short loc_3A4
		test	dword ptr [eax+0Ch], 100h
		jnz	short loc_3A4
		push	esi
		call	_dtls1_start_timer
		push	esi
		call	_ssl3_send_server_certificate
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jle	$end$167
		cmp	dword ptr [esi+12Ch], 0
		mov	eax, 2150h
		mov	ecx, 2200h
		mov	dword ptr [esi+44h], 0
		cmovnz	eax, ecx
		mov	[esi+34h], eax
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_3A4:				; CODE XREF: _dtls1_accept+35Dj
					; _dtls1_accept+366j
		mov	[esp+18h+var_8], 1
		mov	dword ptr [esi+34h], 2150h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN51:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		mov	ecx, [esi+58h]	; jumptable 00000196 cases 8528,8529
		mov	eax, [ecx+344h]
		mov	edx, [eax+0Ch]
		mov	dword ptr [ecx+370h], 0
		test	edx, 100h
		jz	short loc_3EC
		mov	eax, [esi+0E4h]
		cmp	dword ptr [eax+14Ch], 0
		jnz	short loc_452

loc_3EC:				; CODE XREF: _dtls1_accept+3DBj
		test	dl, 88h
		jnz	short loc_452
		test	dl, 1
		jz	short loc_437
		mov	eax, [esi+98h]
		mov	ecx, [eax+40h]
		test	ecx, ecx
		jz	short loc_452
		mov	eax, [esi+58h]
		mov	eax, [eax+344h]
		test	byte ptr [eax+20h], 2
		jz	short loc_437
		push	ecx
		call	_EVP_PKEY_size
		mov	ecx, [esi+58h]
		add	esp, 4
		shl	eax, 3
		mov	ecx, [ecx+344h]
		test	byte ptr [ecx+20h], 8
		mov	ecx, 400h
		cmovnz	ecx, edi
		cmp	eax, ecx
		jg	short loc_452

loc_437:				; CODE XREF: _dtls1_accept+3F4j
					; _dtls1_accept+410j
		mov	[esp+18h+var_8], 1
		mov	dword ptr [esi+34h], 2160h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_452:				; CODE XREF: _dtls1_accept+3EAj
					; _dtls1_accept+3EFj ...
		push	esi
		call	_dtls1_start_timer
		push	esi
		call	_ssl3_send_server_key_exchange
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jle	$end$167
		mov	dword ptr [esi+34h], 2160h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN58:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		mov	ecx, [esi+0C8h]	; jumptable 00000196 cases 8544,8545
		test	cl, 1
		jz	short loc_4F5
		mov	eax, [esi+0C0h]
		cmp	dword ptr [eax+9Ch], 0
		jz	short loc_49D
		test	cl, 4
		jnz	short loc_4F5

loc_49D:				; CODE XREF: _dtls1_accept+496j
		mov	edi, [esi+58h]
		mov	edx, [edi+344h]
		mov	eax, [edx+10h]
		test	al, 4
		jz	short loc_4B2
		test	cl, 2
		jz	short loc_4F5

loc_4B2:				; CODE XREF: _dtls1_accept+4ABj
		test	al, 20h
		jnz	short loc_4F5
		test	dword ptr [edx+0Ch], 100h
		jnz	short loc_4F5
		push	esi
		mov	dword ptr [edi+390h], 1
		call	_dtls1_start_timer
		push	esi
		call	_ssl3_send_certificate_request
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jle	$end$167
		mov	dword ptr [esi+34h], 2170h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_4F5:				; CODE XREF: _dtls1_accept+487j
					; _dtls1_accept+49Bj ...
		mov	eax, [esi+58h]
		mov	ecx, 1
		mov	dword ptr [eax+390h], 0
		mov	dword ptr [esi+34h], 2170h
		jmp	loc_932
; ---------------------------------------------------------------------------

$LN65:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8560,8561
		call	_dtls1_start_timer
		push	esi
		call	_ssl3_send_server_done
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jle	$end$167
		mov	eax, [esi+58h]
		mov	dword ptr [eax+350h], 2180h
		mov	dword ptr [esi+34h], 2100h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN70:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		mov	eax, [esi+58h]	; jumptable 00000196 cases 8576,8577
		cmp	dword ptr [eax+390h], 0
		jz	short loc_56B
		push	esi
		call	_ssl3_get_client_certificate
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jle	$end$167

loc_56B:				; CODE XREF: _dtls1_accept+556j
		mov	dword ptr [esi+44h], 0
		mov	dword ptr [esi+34h], 2190h
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN73:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8592,8593
		call	_ssl3_get_client_key_exchange
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jle	$end$167
		mov	dword ptr [esi+34h], 21A0h
		mov	dword ptr [esi+44h], 0
		cmp	edi, 2
		jnz	short loc_5B7
		mov	dword ptr [esi+34h], 21C0h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_5B7:				; CODE XREF: _dtls1_accept+5A2j
		mov	ecx, [esi+8]
		mov	eax, [ecx+64h]
		test	byte ptr [eax+38h], 2
		mov	dword ptr [esi+34h], 21A0h
		mov	dword ptr [esi+44h], 0
		jz	short loc_61A
		mov	eax, [esi+0C0h]
		cmp	dword ptr [eax+9Ch], 0
		jz	loc_92E
		mov	eax, [esi+58h]
		cmp	dword ptr [eax+178h], 0
		jz	loc_A3C
		or	dword ptr [eax], 20h
		push	esi
		call	_ssl3_digest_cached_records
		add	esp, 4
		test	eax, eax
		jnz	loc_92E
		pop	edi
		mov	dword ptr [esi+34h], 5
		or	eax, 0FFFFFFFFh
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_61A:				; CODE XREF: _dtls1_accept+5CFj
		mov	eax, [esi+58h]
		mov	ecx, [ecx+64h]
		add	eax, 1B4h
		push	eax
		push	4
		push	esi
		mov	eax, [ecx+1Ch]
		call	eax
		mov	eax, [esi+8]
		mov	ecx, [eax+64h]
		mov	eax, [esi+58h]
		add	eax, 1C4h
		push	eax
		mov	eax, [ecx+1Ch]
		push	40h ; '@'
		push	esi
		call	eax
		add	esp, 18h
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN82:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8608,8609
		call	_ssl3_get_cert_verify
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jle	$end$167
		mov	dword ptr [esi+34h], 21C0h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN84:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		mov	eax, [esi+58h]	; jumptable 00000196 cases 8640,8641
		cmp	dword ptr [eax+180h], 0
		jnz	short loc_68C
		mov	eax, [esi+5Ch]
		mov	dword ptr [eax+2E8h], 1

loc_68C:				; CODE XREF: _dtls1_accept+67Dj
		push	21C1h
		push	21C0h
		push	esi
		call	_ssl3_get_finished
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jle	$end$167
		push	esi
		call	_dtls1_stop_timer
		add	esp, 4
		cmp	dword ptr [esi+6Ch], 0
		jz	short loc_6CB
		mov	dword ptr [esi+34h], 3
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_6CB:				; CODE XREF: _dtls1_accept+6B6j
		cmp	dword ptr [esi+140h], 0
		mov	eax, 21D0h
		mov	ecx, 21F0h
		mov	dword ptr [esi+44h], 0
		cmovnz	eax, ecx
		mov	[esi+34h], eax
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN91:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8688,8689
		call	_ssl3_send_newsession_ticket
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jle	$end$167
		mov	dword ptr [esi+34h], 21D0h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN93:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		push	esi		; jumptable 00000196 cases 8704,8705
		call	_ssl3_send_cert_status
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jle	$end$167
		mov	dword ptr [esi+34h], 2150h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN95:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		mov	eax, [esi+58h]	; jumptable 00000196 cases 8656,8657
		mov	ecx, [esi+0C0h]
		push	esi
		mov	eax, [eax+344h]
		mov	[ecx+0B4h], eax
		mov	eax, [esi+8]
		mov	eax, [eax+64h]
		mov	eax, [eax+8]
		call	eax
		add	esp, 4
		test	eax, eax
		jz	loc_ABC
		push	21D1h
		push	21D0h
		push	esi
		call	_dtls1_send_change_cipher_spec
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jle	$end$167
		mov	eax, [esi+8]
		mov	dword ptr [esi+34h], 21E0h
		mov	dword ptr [esi+44h], 0
		push	22h ; '"'
		mov	eax, [eax+64h]
		push	esi
		mov	eax, [eax+10h]
		call	eax
		add	esp, 8
		test	eax, eax
		jz	loc_ABC
		push	2
		push	esi
		call	_dtls1_reset_seq_numbers
		add	esp, 8
		jmp	loc_92E
; ---------------------------------------------------------------------------

$LN99:					; CODE XREF: _dtls1_accept+196j
					; DATA XREF: .text$mn:$LN166o
		mov	eax, [esi+8]	; jumptable 00000196 cases 8672,8673
		mov	eax, [eax+64h]
		push	dword ptr [eax+2Ch]
		push	dword ptr [eax+28h]
		push	21E1h
		push	21E0h
		push	esi
		call	_ssl3_send_finished
		mov	edi, eax
		add	esp, 14h
		test	edi, edi
		jle	$end$167
		cmp	dword ptr [esi+6Ch], 0
		mov	eax, [esi+58h]
		mov	dword ptr [esi+34h], 2100h
		jz	short loc_809
		mov	dword ptr [eax+350h], 21C0h
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_809:				; CODE XREF: _dtls1_accept+7F1j
		mov	dword ptr [eax+350h], 3
		mov	dword ptr [esi+44h], 0
		jmp	loc_92E
; ---------------------------------------------------------------------------

loc_81F:				; CODE XREF: _dtls1_accept+179j
		mov	dword ptr [esi+190h], 1
		jmp	short loc_83D
; ---------------------------------------------------------------------------

loc_82B:				; CODE XREF: _dtls1_accept+173j
		cmp	eax, 4000h
		jz	short loc_83D
		cmp	eax, 6000h

loc_837:				; CODE XREF: _dtls1_accept+131j
		jnz	$LN141		; jumptable 00000196 default case

loc_83D:				; CODE XREF: _dtls1_accept+128j
					; _dtls1_accept+829j ...
		mov	dword ptr [esi+24h], 1
		test	ebx, ebx
		jz	short loc_852
		push	1
		push	10h
		push	esi
		call	ebx
		add	esp, 0Ch

loc_852:				; CODE XREF: _dtls1_accept+846j
		mov	eax, [esi]
		and	eax, 0FF00h
		cmp	eax, 0FE00h
		jnz	loc_AE3
		cmp	dword ptr [esi+3Ch], 0
		mov	dword ptr [esi+4], 2000h
		jnz	short loc_899
		call	_BUF_MEM_new
		mov	edi, eax
		test	edi, edi
		jz	loc_ABC
		push	4000h
		push	edi
		call	_BUF_MEM_grow
		add	esp, 8
		test	eax, eax
		jz	loc_A89
		mov	[esi+3Ch], edi

loc_899:				; CODE XREF: _dtls1_accept+86Fj
		push	esi
		call	_ssl3_setup_buffers
		add	esp, 4
		test	eax, eax
		jz	loc_ABC
		mov	eax, [esi+5Ch]
		mov	dword ptr [esi+44h], 0
		mov	dword ptr [eax+2E8h], 0
		mov	eax, [esi+58h]
		mov	dword ptr [eax+180h], 0
		cmp	dword ptr [esi+34h], 3004h
		jz	short loc_902
		push	1
		push	esi
		call	_ssl_init_wbio_buffer
		add	esp, 8
		test	eax, eax
		jz	loc_ABC
		push	esi
		call	_ssl3_init_finished_mac
		mov	eax, [esi+0E4h]
		add	esp, 4
		mov	dword ptr [esi+34h], 2110h
		inc	dword ptr [eax+40h]
		jmp	short loc_92E
; ---------------------------------------------------------------------------

loc_902:				; CODE XREF: _dtls1_accept+8D2j
		mov	eax, [esi+58h]
		cmp	dword ptr [eax+418h], 0
		jnz	short loc_91E
		test	dword ptr [esi+100h], 40000h
		jz	loc_A94

loc_91E:				; CODE XREF: _dtls1_accept+90Cj
		mov	eax, [esi+0E4h]
		inc	dword ptr [eax+44h]
		mov	dword ptr [esi+34h], 2120h

loc_92E:				; CODE XREF: _dtls1_accept+169j
					; _dtls1_accept+1E7j ...
		mov	ecx, [esp+18h+var_8]

loc_932:				; CODE XREF: _dtls1_accept+1F3j
					; _dtls1_accept+50Ej
		mov	eax, [esi+58h]
		cmp	dword ptr [eax+354h], 0
		jnz	short loc_981
		test	ecx, ecx
		jnz	short loc_981
		cmp	[esi+0E8h], ecx
		jz	short loc_963
		push	ecx
		push	ecx
		push	0Bh
		push	dword ptr [esi+10h]
		call	_BIO_ctrl
		mov	edi, eax
		add	esp, 10h
		test	edi, edi
		jle	$end$167

loc_963:				; CODE XREF: _dtls1_accept+948j
		test	ebx, ebx
		jz	short loc_981
		mov	edi, [esi+34h]
		cmp	edi, ebp
		jz	short loc_981
		push	1
		push	2001h
		push	esi
		mov	[esi+34h], ebp
		call	ebx
		add	esp, 0Ch
		mov	[esi+34h], edi

loc_981:				; CODE XREF: _dtls1_accept+93Cj
					; _dtls1_accept+940j ...
		xor	ecx, ecx
		mov	[esp+18h+var_8], ecx
		jmp	loc_107
; ---------------------------------------------------------------------------

loc_98C:				; CODE XREF: _dtls1_accept+11Dj
		push	esi
		call	_ssl3_cleanup_key_block
		push	esi
		call	_ssl_free_wbio_buffer
		add	esp, 8
		mov	dword ptr [esi+44h], 0
		cmp	dword ptr [esi+190h], 2
		jnz	short loc_9E5
		push	2
		push	esi
		mov	dword ptr [esi+190h], 0
		mov	dword ptr [esi+28h], 0
		call	_ssl_update_cache
		mov	eax, [esi+0E4h]
		add	esp, 8
		inc	dword ptr [eax+48h]
		mov	dword ptr [esi+20h], offset _dtls1_accept
		test	ebx, ebx
		jz	short loc_9E5
		push	1
		push	20h ; ' '
		push	esi
		call	ebx
		add	esp, 0Ch

loc_9E5:				; CODE XREF: _dtls1_accept+9A9j
					; _dtls1_accept+9D9j
		mov	eax, [esi+5Ch]
		xor	ecx, ecx
		mov	edi, 1
		mov	[eax+228h], cx
		mov	eax, [esi+5Ch]
		mov	[eax+224h], cx
		mov	eax, [esi+5Ch]
		mov	[eax+226h], cx
		jmp	$end$167
; ---------------------------------------------------------------------------

loc_A0F:				; CODE XREF: _dtls1_accept+150j
		push	8
		push	dword ptr [esi+10h]
		call	_BIO_test_flags
		add	esp, 8
		test	eax, eax
		jnz	loc_AC3
		mov	eax, [esi+58h]
		mov	dword ptr [esi+18h], 1
		mov	eax, [eax+350h]
		mov	[esi+34h], eax
		jmp	loc_AC3
; ---------------------------------------------------------------------------

loc_A3C:				; CODE XREF: _dtls1_accept+5EEj
		push	2B2h
		push	offset ??_C@_0BA@BMNEEFGP@?4?2ssl?2d1_srvr?4c?$AA@ ; ".\\ssl\\d1_srvr.c"
		push	44h ; 'D'
		push	0F6h ; 'ö'
		push	14h
		call	_ERR_put_error
		add	esp, 14h
		mov	dword ptr [esi+34h], 5
		or	eax, 0FFFFFFFFh
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

$LN141:					; CODE XREF: _dtls1_accept+189j
					; _dtls1_accept+196j ...
		push	386h		; jumptable 00000196 default case
		push	offset ??_C@_0BA@BMNEEFGP@?4?2ssl?2d1_srvr?4c?$AA@ ; ".\\ssl\\d1_srvr.c"
		push	0FFh
		push	0F6h ; 'ö'
		push	14h
		call	_ERR_put_error
		add	esp, 14h
		jmp	short loc_AC3
; ---------------------------------------------------------------------------

loc_A89:				; CODE XREF: _dtls1_accept+890j
		push	edi
		call	_BUF_MEM_free
		add	esp, 4
		jmp	short loc_ABC
; ---------------------------------------------------------------------------

loc_A94:				; CODE XREF: _dtls1_accept+918j
		push	128h
		push	offset ??_C@_0BA@BMNEEFGP@?4?2ssl?2d1_srvr?4c?$AA@ ; ".\\ssl\\d1_srvr.c"
		push	152h
		push	0F6h ; 'ö'
		push	14h
		call	_ERR_put_error
		push	28h ; '('
		push	2
		push	esi
		call	_ssl3_send_alert
		add	esp, 20h

loc_ABC:				; CODE XREF: _dtls1_accept+760j
					; _dtls1_accept+7A4j ...
		mov	dword ptr [esi+34h], 5

loc_AC3:				; CODE XREF: _dtls1_accept+A1Ej
					; _dtls1_accept+A37j ...
		or	edi, 0FFFFFFFFh

$end$167:				; CODE XREF: _dtls1_accept+1BDj
					; _dtls1_accept+20Cj ...
		dec	dword ptr [esi+1Ch]
		test	ebx, ebx
		jz	short loc_AD9
		push	edi
		push	2002h
		push	esi
		call	ebx
		add	esp, 0Ch

loc_AD9:				; CODE XREF: _dtls1_accept+ACBj
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_AE3:				; CODE XREF: _dtls1_accept+85Ej
		push	0EDh ; 'í'
		push	offset ??_C@_0BA@BMNEEFGP@?4?2ssl?2d1_srvr?4c?$AA@ ; ".\\ssl\\d1_srvr.c"
		push	44h ; 'D'
		push	0F6h ; 'ö'
		push	14h
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
_dtls1_accept	endp

; ---------------------------------------------------------------------------
		align 4
$LN166		dd offset $LN30, offset	$LN36, offset $LN27, offset $LN29
					; DATA XREF: _dtls1_accept+196r
		dd offset $LN39, offset	$LN45, offset $LN51, offset $LN58 ; jump table for switch statement
		dd offset $LN65, offset	$LN70, offset $LN73, offset $LN82
		dd offset $LN84, offset	$LN95, offset $LN99, offset $LN91
		dd offset $LN93, offset	$LN141
$LN155		db 0, 0, 0, 1, 1, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
					; DATA XREF: _dtls1_accept+18Fr
		db 11h,	11h, 11h, 2, 2,	3, 11h,	11h, 11h, 11h, 11h, 11h	; indirect table for switch statement
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 4, 4, 11h, 11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 5, 5, 11h, 11h, 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h
		db 11h,	11h, 11h, 11h, 6, 6, 11h, 11h, 11h, 11h, 11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 7, 7, 11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 11h,	8, 8, 11h, 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 9, 9, 11h, 11h, 11h, 11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h,	0Ah, 0Ah
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 11h,	11h, 11h, 0Bh, 0Bh, 11h, 11h, 11h, 11h,	11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 11h,	11h, 0Ch, 0Ch, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 0Dh, 0Dh,	11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 11h,	0Eh, 0Eh, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 0Fh, 0Fh, 11h,	11h, 11h
		db 11h,	11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h,	11h, 11h
		db 10h,	10h
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C48h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_dtls1_get_server_method proc near	; DATA XREF: .rdata:00000CD8o
					; .rdata:00000D50o ...

arg_0		= dword	ptr  4

		mov	ecx, [esp+arg_0]
		cmp	ecx, 1FFFFh
		jnz	short loc_C5A
		mov	eax, offset ?DTLS_server_method_data@?1??DTLS_server_method@@9@9 ; `DTLS_server_method'::`2'::DTLS_server_method_data
		retn
; ---------------------------------------------------------------------------

loc_C5A:				; CODE XREF: _dtls1_get_server_method+Aj
		cmp	ecx, 0FEFFh
		jnz	short loc_C68
		mov	eax, offset ?DTLSv1_server_method_data@?1??DTLSv1_server_method@@9@9 ; `DTLSv1_server_method'::`2'::DTLSv1_server_method_data
		retn
; ---------------------------------------------------------------------------

loc_C68:				; CODE XREF: _dtls1_get_server_method+18j
		xor	edx, edx
		mov	eax, offset ?DTLSv1_2_server_method_data@?1??DTLSv1_2_server_method@@9@9 ; `DTLSv1_2_server_method'::`2'::DTLSv1_2_server_method_data
		cmp	ecx, 0FEFDh
		cmovnz	eax, edx
		retn
_dtls1_get_server_method endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0C7Ch
; `DTLSv1_server_method'::`2'::DTLSv1_server_method_data
?DTLSv1_server_method_data@?1??DTLSv1_server_method@@9@9 dd 0FEFFh
					; DATA XREF: _dtls1_get_server_method+1Ao
					; _DTLSv1_server_methodo
		dd offset _dtls1_new
		dd offset _dtls1_clear
		dd offset _dtls1_free
		dd offset _dtls1_accept
		dd offset _ssl_undefined_function
		dd offset _ssl3_read
		dd offset _ssl3_peek
		dd offset _ssl3_write
		dd offset _dtls1_shutdown
		dd offset _ssl3_renegotiate
		dd offset _ssl3_renegotiate_check
		dd offset _dtls1_get_message
		dd offset _dtls1_read_bytes
		dd offset _dtls1_write_app_data_bytes
		dd offset _dtls1_dispatch_alert
		dd offset _dtls1_ctrl
		dd offset _ssl3_ctx_ctrl
		dd offset _ssl3_get_cipher_by_char
		dd offset _ssl3_put_cipher_by_char
		dd offset _ssl3_pending
		dd offset _ssl3_num_ciphers
		dd offset _dtls1_get_cipher
		dd offset _dtls1_get_server_method
		dd offset _dtls1_default_timeout
		dd offset _DTLSv1_enc_data
		dd offset _ssl_undefined_void_function
		dd offset _ssl3_callback_ctrl
		dd offset _ssl3_ctx_callback_ctrl
		dd 0
; `DTLSv1_2_server_method'::`2'::DTLSv1_2_server_method_data
?DTLSv1_2_server_method_data@?1??DTLSv1_2_server_method@@9@9 dd	0FEFDh
					; DATA XREF: _dtls1_get_server_method+22o
					; _DTLSv1_2_server_methodo
		dd offset _dtls1_new
		dd offset _dtls1_clear
		dd offset _dtls1_free
		dd offset _dtls1_accept
		dd offset _ssl_undefined_function
		dd offset _ssl3_read
		dd offset _ssl3_peek
		dd offset _ssl3_write
		dd offset _dtls1_shutdown
		dd offset _ssl3_renegotiate
		dd offset _ssl3_renegotiate_check
		dd offset _dtls1_get_message
		dd offset _dtls1_read_bytes
		dd offset _dtls1_write_app_data_bytes
		dd offset _dtls1_dispatch_alert
		dd offset _dtls1_ctrl
		dd offset _ssl3_ctx_ctrl
		dd offset _ssl3_get_cipher_by_char
		dd offset _ssl3_put_cipher_by_char
		dd offset _ssl3_pending
		dd offset _ssl3_num_ciphers
		dd offset _dtls1_get_cipher
		dd offset _dtls1_get_server_method
		dd offset _dtls1_default_timeout
		dd offset _DTLSv1_2_enc_data
		dd offset _ssl_undefined_void_function
		dd offset _ssl3_callback_ctrl
		dd offset _ssl3_ctx_callback_ctrl
		dd 0
; `DTLS_server_method'::`2'::DTLS_server_method_data
?DTLS_server_method_data@?1??DTLS_server_method@@9@9 dd	1FFFFh
					; DATA XREF: _dtls1_get_server_method+Co
					; _DTLS_server_methodo
		dd offset _dtls1_new
		dd offset _dtls1_clear
		dd offset _dtls1_free
		dd offset _dtls1_accept
		dd offset _ssl_undefined_function
		dd offset _ssl3_read
		dd offset _ssl3_peek
		dd offset _ssl3_write
		dd offset _dtls1_shutdown
		dd offset _ssl3_renegotiate
		dd offset _ssl3_renegotiate_check
		dd offset _dtls1_get_message
		dd offset _dtls1_read_bytes
		dd offset _dtls1_write_app_data_bytes
		dd offset _dtls1_dispatch_alert
		dd offset _dtls1_ctrl
		dd offset _ssl3_ctx_ctrl
		dd offset _ssl3_get_cipher_by_char
		dd offset _ssl3_put_cipher_by_char
		dd offset _ssl3_pending
		dd offset _ssl3_num_ciphers
		dd offset _dtls1_get_cipher
		dd offset _dtls1_get_server_method
		dd offset _dtls1_default_timeout
		dd offset _DTLSv1_2_enc_data
		dd offset _ssl_undefined_void_function
		dd offset _ssl3_callback_ctrl
		dd offset _ssl3_ctx_callback_ctrl
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0DE0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DTLS_server_method
_DTLS_server_method proc near
		mov	eax, offset ?DTLS_server_method_data@?1??DTLS_server_method@@9@9 ; `DTLS_server_method'::`2'::DTLS_server_method_data
		retn
_DTLS_server_method endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0DE8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DTLSv1_2_server_method
_DTLSv1_2_server_method	proc near
		mov	eax, offset ?DTLSv1_2_server_method_data@?1??DTLSv1_2_server_method@@9@9 ; `DTLSv1_2_server_method'::`2'::DTLSv1_2_server_method_data
		retn
_DTLSv1_2_server_method	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0DF0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DTLSv1_server_method
_DTLSv1_server_method proc near
		mov	eax, offset ?DTLSv1_server_method_data@?1??DTLSv1_server_method@@9@9 ; `DTLSv1_server_method'::`2'::DTLSv1_server_method_data
		retn
_DTLSv1_server_method endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0DF8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_dtls1_send_hello_verify_request proc near ; CODE XREF:	_dtls1_accept+2B1p

arg_0		= dword	ptr  4

		push	ebx
		push	ebp
		push	esi
		mov	esi, [esp+0Ch+arg_0]
		push	edi
		cmp	dword ptr [esi+34h], 2113h
		jnz	loc_E95
		mov	eax, [esi+3Ch]
		mov	ebx, [eax+4]
		mov	word ptr [ebx+0Ch], 0FFFEh
		mov	eax, [esi+0E4h]
		lea	edi, [ebx+0Ch]
		mov	ebp, edi
		mov	edx, [eax+78h]
		test	edx, edx
		jz	short loc_EA5
		mov	ecx, [esi+5Ch]
		lea	eax, [ecx+204h]
		push	eax
		lea	eax, [ecx+4]
		push	eax
		push	esi
		call	edx
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_EA5
		mov	eax, [esi+5Ch]
		mov	al, [eax+204h]
		mov	[edi+2], al
		add	edi, 3
		mov	eax, [esi+5Ch]
		push	dword ptr [eax+204h] ; Size
		add	eax, 4
		push	eax		; Src
		push	edi		; Dst
		call	_memcpy
		mov	eax, [esi+5Ch]
		add	edi, [eax+204h]
		mov	eax, edi
		sub	eax, ebp
		push	eax
		push	0
		push	eax
		push	3
		push	ebx
		push	esi
		call	_dtls1_set_message_header
		add	esp, 24h
		mov	dword ptr [esi+34h], 2114h
		sub	edi, ebx
		mov	dword ptr [esi+48h], 0
		mov	[esi+44h], edi

loc_E95:				; CODE XREF: _dtls1_send_hello_verify_request+Fj
		push	16h
		push	esi
		call	_dtls1_do_write
		add	esp, 8
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_EA5:				; CODE XREF: _dtls1_send_hello_verify_request+31j
					; _dtls1_send_hello_verify_request+49j
		push	3BEh
		push	offset ??_C@_0BA@BMNEEFGP@?4?2ssl?2d1_srvr?4c?$AA@ ; ".\\ssl\\d1_srvr.c"
		push	44h ; 'D'
		push	108h
		push	14h
		call	_ERR_put_error
		add	esp, 14h
		mov	dword ptr [esi+34h], 5
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_dtls1_send_hello_verify_request endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0ED0h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; time_t __cdecl static	time(time_t *Time)
_time		proc near
		jmp	dword ptr ds:__imp___time64
_time		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ED8h
; COMDAT (pick any)
		public ??_C@_0BA@BMNEEFGP@?4?2ssl?2d1_srvr?4c?$AA@
; `string'
??_C@_0BA@BMNEEFGP@?4?2ssl?2d1_srvr?4c?$AA@ db '.\ssl\d1_srvr.c',0
					; DATA XREF: _dtls1_accept+BFo
					; _dtls1_accept+A41o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _DTLSv1_enc_data:near ; DATA XREF: .rdata:00000CE0o
		extrn _DTLSv1_2_enc_data:near ;	DATA XREF: .rdata:00000D58o
					; .rdata:00000DD0o
		extrn _dtls1_new:near	; DATA XREF: .rdata:00000C80o
					; .rdata:00000CF8o ...
		extrn _dtls1_free:near	; DATA XREF: .rdata:00000C88o
					; .rdata:00000D00o ...
		extrn _dtls1_clear:near	; DATA XREF: .rdata:00000C84o
					; .rdata:00000CFCo ...
		extrn _dtls1_ctrl:near	; DATA XREF: .rdata:00000CBCo
					; .rdata:00000D34o ...
		extrn _dtls1_shutdown:near ; DATA XREF:	.rdata:00000CA0o
					; .rdata:00000D18o ...
		extrn _dtls1_get_message:near ;	DATA XREF: .rdata:00000CACo
					; .rdata:00000D24o ...
		extrn _dtls1_dispatch_alert:near ; DATA	XREF: .rdata:00000CB8o
					; .rdata:00000D30o ...
		extrn _ssl_undefined_function:near ; DATA XREF:	.rdata:00000C90o
					; .rdata:00000D08o ...
		extrn _ssl_undefined_void_function:near	; DATA XREF: .rdata:00000CE4o
					; .rdata:00000D5Co ...
		extrn _ssl3_get_cipher_by_char:near ; DATA XREF: .rdata:00000CC4o
					; .rdata:00000D3Co ...
		extrn _ssl3_put_cipher_by_char:near ; DATA XREF: .rdata:00000CC8o
					; .rdata:00000D40o ...
		extrn _ssl3_num_ciphers:near ; DATA XREF: .rdata:00000CD0o
					; .rdata:00000D48o ...
		extrn _ssl3_renegotiate:near ; DATA XREF: .rdata:00000CA4o
					; .rdata:00000D1Co ...
		extrn _ssl3_renegotiate_check:near ; DATA XREF:	.rdata:00000CA8o
					; .rdata:00000D20o ...
		extrn _ssl3_read:near	; DATA XREF: .rdata:00000C94o
					; .rdata:00000D0Co ...
		extrn _ssl3_peek:near	; DATA XREF: .rdata:00000C98o
					; .rdata:00000D10o ...
		extrn _ssl3_write:near	; DATA XREF: .rdata:00000C9Co
					; .rdata:00000D14o ...
		extrn _ssl3_ctx_ctrl:near ; DATA XREF: .rdata:00000CC0o
					; .rdata:00000D38o ...
		extrn _ssl3_callback_ctrl:near ; DATA XREF: .rdata:00000CE8o
					; .rdata:00000D60o ...
		extrn _ssl3_ctx_callback_ctrl:near ; DATA XREF:	.rdata:00000CECo
					; .rdata:00000D64o ...
		extrn _ssl3_pending:near ; DATA	XREF: .rdata:00000CCCo
					; .rdata:00000D44o ...
		extrn _dtls1_read_bytes:near ; DATA XREF: .rdata:00000CB0o
					; .rdata:00000D28o ...
		extrn _dtls1_write_app_data_bytes:near ; DATA XREF: .rdata:00000CB4o
					; .rdata:00000D2Co ...
		extrn _dtls1_default_timeout:near ; DATA XREF: .rdata:00000CDCo
					; .rdata:00000D54o ...
		extrn _dtls1_get_cipher:near ; DATA XREF: .rdata:00000CD4o
					; .rdata:00000D4Co ...
; __time64_t __cdecl __time64(__time64_t *Time)
		extrn __imp___time64:near ; CODE XREF: _dtls1_accept+Fp
					; DATA XREF: _dtls1_accept+Fr ...
; void __stdcall SetLastError(DWORD dwErrCode)
		extrn __imp__SetLastError@4:near ; CODE	XREF: _dtls1_accept+4Ap
					; DATA XREF: _dtls1_accept+4Ar
		extrn _BUF_MEM_new:near	; CODE XREF: _dtls1_accept+871p
		extrn _BUF_MEM_free:near ; CODE	XREF: _dtls1_accept+A8Ap
		extrn _BUF_MEM_grow:near ; CODE	XREF: _dtls1_accept+886p
		extrn _BIO_test_flags:near ; CODE XREF:	_dtls1_accept+A14p
		extrn _BIO_ctrl:near	; CODE XREF: _dtls1_accept+146p
					; _dtls1_accept+951p
		extrn _ERR_put_error:near ; CODE XREF: _dtls1_accept+D0p
					; _dtls1_accept+A4Fp ...
		extrn _ERR_clear_error:near ; CODE XREF: _dtls1_accept+43p
		extrn _EVP_PKEY_size:near ; CODE XREF: _dtls1_accept+413p
		extrn _SSL_clear:near	; CODE XREF: _dtls1_accept+A0p
		extrn _SSL_ctrl:near	; CODE XREF: _dtls1_accept+227p
		extrn _SSL_state:near	; CODE XREF: _dtls1_accept+80p
					; _dtls1_accept+90p
		extrn _ssl_update_cache:near ; CODE XREF: _dtls1_accept+9BFp
		extrn _ssl3_init_finished_mac:near ; CODE XREF:	_dtls1_accept+1DFp
					; _dtls1_accept+2E4p ...
		extrn _ssl3_send_server_certificate:near ; CODE	XREF: _dtls1_accept+36Fp
		extrn _ssl3_send_newsession_ticket:near	; CODE XREF: _dtls1_accept+6EFp
		extrn _ssl3_send_cert_status:near ; CODE XREF: _dtls1_accept+715p
		extrn _ssl3_get_finished:near ;	CODE XREF: _dtls1_accept+697p
		extrn _ssl3_cleanup_key_block:near ; CODE XREF:	_dtls1_accept+98Dp
		extrn _ssl3_send_alert:near ; CODE XREF: _dtls1_accept+AB4p
		extrn _ssl3_send_finished:near ; CODE XREF: _dtls1_accept+7D1p
		extrn _ssl3_setup_buffers:near ; CODE XREF: _dtls1_accept+89Ap
		extrn _ssl3_digest_cached_records:near ; CODE XREF: _dtls1_accept+5F8p
		extrn _dtls1_do_write:near ; CODE XREF:	_dtls1_send_hello_verify_request+A0p
		extrn _dtls1_set_message_header:near
					; CODE XREF: _dtls1_send_hello_verify_request+82p
		extrn _dtls1_send_change_cipher_spec:near ; CODE XREF: _dtls1_accept+771p
		extrn _dtls1_clear_record_buffer:near ;	CODE XREF: _dtls1_accept+1A5p
		extrn _dtls1_reset_seq_numbers:near ; CODE XREF: _dtls1_accept+7ADp
		extrn _dtls1_start_timer:near ;	CODE XREF: _dtls1_accept+1ABp
					; _dtls1_accept+2FCp ...
		extrn _dtls1_stop_timer:near ; CODE XREF: _dtls1_accept+ECp
					; _dtls1_accept+213p ...
		extrn _ssl3_get_client_hello:near ; CODE XREF: _dtls1_accept+200p
		extrn _ssl3_send_server_hello:near ; CODE XREF:	_dtls1_accept+302p
		extrn _ssl3_send_hello_request:near ; CODE XREF: _dtls1_accept+1B1p
		extrn _ssl3_send_server_key_exchange:near ; CODE XREF: _dtls1_accept+459p
		extrn _ssl3_send_certificate_request:near ; CODE XREF: _dtls1_accept+4D0p
		extrn _ssl3_send_server_done:near ; CODE XREF: _dtls1_accept+51Ap
		extrn _ssl3_get_client_certificate:near	; CODE XREF: _dtls1_accept+559p
		extrn _ssl3_get_client_key_exchange:near ; CODE	XREF: _dtls1_accept+57Fp
		extrn _ssl3_get_cert_verify:near ; CODE	XREF: _dtls1_accept+64Ep
		extrn _ssl_init_wbio_buffer:near ; CODE	XREF: _dtls1_accept+8D7p
		extrn _ssl_free_wbio_buffer:near ; CODE	XREF: _dtls1_accept+993p
		extrn _RAND_add:near	; CODE XREF: _dtls1_accept+3Bp
		extrn __chkstk:near	; CODE XREF: _dtls1_accept+5p
					; _dtls1_accept+27p
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _dtls1_send_hello_verify_request+68p
		extrn __fltused:near


		end

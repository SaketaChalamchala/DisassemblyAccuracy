;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	A44A0726F90F842CD7BB1200C64A0368
; Input	CRC32 :	81C0FB7F

; File Name   :	C:\compspace\Diff\openssl\obj\p12_decr.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_item_decrypt_d2i
_PKCS12_item_decrypt_d2i proc near

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, 8
		call	__chkstk
		push	0
		lea	eax, [esp+0Ch+var_8]
		push	eax
		lea	eax, [esp+10h+var_4]
		push	eax
		mov	eax, [esp+14h+arg_10]
		push	dword ptr [eax]
		push	dword ptr [eax+8]
		push	[esp+1Ch+arg_C]
		push	[esp+20h+arg_8]
		push	[esp+24h+arg_0]
		call	_PKCS12_pbe_crypt
		add	esp, 20h
		test	eax, eax
		jnz	short loc_55
		push	8Bh ; '‹'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	75h ; 'u'
		push	6Ah ; 'j'
		push	23h ; '#'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_55:					; CODE XREF: _PKCS12_item_decrypt_d2i+35j
		push	esi
		mov	esi, [esp+0Ch+var_4]
		lea	eax, [esp+0Ch+arg_10]
		push	edi
		push	[esp+10h+arg_4]
		mov	[esp+14h+arg_10], esi
		push	[esp+14h+var_8]
		push	eax
		push	0
		call	_ASN1_item_d2i
		add	esp, 10h
		mov	edi, eax
		cmp	[esp+10h+arg_14], 0
		jz	short loc_8C
		push	[esp+10h+var_8]
		push	esi
		call	_OPENSSL_cleanse
		add	esp, 8

loc_8C:					; CODE XREF: _PKCS12_item_decrypt_d2i+7Dj
		test	edi, edi
		jnz	short loc_A8
		push	9Fh ; 'Ÿ'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	65h ; 'e'
		push	6Ah ; 'j'
		push	23h ; '#'
		call	_ERR_put_error
		add	esp, 14h

loc_A8:					; CODE XREF: _PKCS12_item_decrypt_d2i+8Ej
		push	esi
		call	_CRYPTO_free
		add	esp, 4
		mov	eax, edi
		pop	edi
		pop	esi
		add	esp, 8
		retn
_PKCS12_item_decrypt_d2i endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_item_i2d_encrypt
_PKCS12_item_i2d_encrypt proc near

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, 4
		call	__chkstk
		push	esi
		push	edi
		push	4
		mov	[esp+10h+var_4], 0
		call	_ASN1_STRING_type_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_FE
		push	0B2h ; '²'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	41h ; 'A'
		push	6Ch ; 'l'
		push	23h ; '#'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_FE:					; CODE XREF: _PKCS12_item_i2d_encrypt+22j
		push	[esp+0Ch+arg_4]
		lea	eax, [esp+10h+var_4]
		push	eax
		push	[esp+14h+arg_10]
		call	_ASN1_item_i2d
		mov	ecx, [esp+18h+var_4]
		add	esp, 0Ch
		mov	edi, eax
		test	ecx, ecx
		jnz	short loc_144
		push	0B7h ; '·'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	66h ; 'f'
		push	6Ch ; 'l'
		push	23h ; '#'
		call	_ERR_put_error
		add	esp, 14h
		push	esi
		call	_ASN1_OCTET_STRING_free
		add	esp, 4
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_144:				; CODE XREF: _PKCS12_item_i2d_encrypt+5Fj
		push	1
		push	esi
		lea	eax, [esi+8]
		push	eax
		push	edi
		push	ecx
		push	[esp+20h+arg_C]
		push	[esp+24h+arg_8]
		push	[esp+28h+arg_0]
		call	_PKCS12_pbe_crypt
		add	esp, 20h
		test	eax, eax
		jnz	short loc_195
		push	0BCh ; '¼'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	67h ; 'g'
		push	6Ch ; 'l'
		push	23h ; '#'
		call	_ERR_put_error
		push	[esp+20h+var_4]
		call	_CRYPTO_free
		add	esp, 18h

$err$9:
		push	esi
		call	_ASN1_OCTET_STRING_free
		add	esp, 4
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_195:				; CODE XREF: _PKCS12_item_i2d_encrypt+A7j
		cmp	[esp+0Ch+arg_14], 0
		jz	short loc_1A9
		push	edi
		push	[esp+10h+var_4]
		call	_OPENSSL_cleanse
		add	esp, 8

loc_1A9:				; CODE XREF: _PKCS12_item_i2d_encrypt+DEj
		push	[esp+0Ch+var_4]
		call	_CRYPTO_free
		add	esp, 4
		mov	eax, esi
		pop	edi
		pop	esi
		pop	ecx
		retn
_PKCS12_item_i2d_encrypt endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_pbe_crypt
_PKCS12_pbe_crypt proc near		; CODE XREF: _PKCS12_item_decrypt_d2i+2Bp
					; _PKCS12_item_i2d_encrypt+9Dp

var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= byte ptr -90h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		mov	eax, 9Ch ; 'œ'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+9Ch+var_4], eax
		mov	eax, [esp+9Ch+arg_C]
		push	ebx
		mov	ebx, [esp+0A0h+arg_14]
		push	ebp
		mov	ebp, [esp+0A4h+arg_18]
		mov	[esp+0A4h+var_94], eax
		mov	eax, [esp+0A4h+arg_10]
		push	esi
		mov	esi, [esp+0A8h+arg_4]
		mov	[esp+0A8h+var_98], eax
		lea	eax, [esp+0A8h+var_90]
		push	edi
		mov	edi, [esp+0ACh+arg_0]
		push	eax
		call	_EVP_CIPHER_CTX_init
		push	[esp+0B0h+arg_1C]
		lea	eax, [esp+0B4h+var_90]
		push	eax
		push	dword ptr [edi+4]
		push	[esp+0BCh+arg_8]
		push	esi
		push	dword ptr [edi]
		call	_EVP_PBE_CipherInit
		add	esp, 1Ch
		test	eax, eax
		jnz	short loc_255
		push	57h ; 'W'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	73h ; 's'
		push	77h ; 'w'
		push	23h ; '#'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		jmp	loc_332
; ---------------------------------------------------------------------------

loc_255:				; CODE XREF: _PKCS12_pbe_crypt+7Bj
		push	5Bh ; '['
		lea	eax, [esp+0B0h+var_90]
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	eax
		call	_EVP_CIPHER_CTX_block_size
		mov	edi, [esp+0B8h+var_98]
		add	esp, 4
		add	eax, edi
		push	eax
		call	_CRYPTO_malloc
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_298
		push	5Ch ; '\'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	41h ; 'A'
		push	77h ; 'w'
		push	23h ; '#'
		call	_ERR_put_error
		add	esp, 14h
		jmp	$err$10
; ---------------------------------------------------------------------------

loc_298:				; CODE XREF: _PKCS12_pbe_crypt+C0j
		push	edi
		push	[esp+0B0h+var_94]
		lea	eax, [esp+0B4h+var_9C]
		push	eax
		lea	eax, [esp+0B8h+var_90]
		push	esi
		push	eax
		call	_EVP_CipherUpdate
		add	esp, 14h
		test	eax, eax
		jnz	short loc_2D3
		push	esi
		call	_CRYPTO_free
		push	63h ; 'c'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	6
		push	77h ; 'w'
		push	23h ; '#'
		xor	esi, esi
		call	_ERR_put_error
		add	esp, 18h
		jmp	short $err$10
; ---------------------------------------------------------------------------

loc_2D3:				; CODE XREF: _PKCS12_pbe_crypt+F6j
		mov	edi, [esp+0ACh+var_9C]
		lea	eax, [esp+0ACh+var_9C]
		push	eax
		lea	eax, [edi+esi]
		push	eax
		lea	eax, [esp+0B4h+var_90]
		push	eax
		call	_EVP_CipherFinal_ex
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_310
		push	esi
		call	_CRYPTO_free
		push	6Ch ; 'l'
		push	offset ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ ;	".\\crypto\\pkcs12\\p12_decr.c"
		push	74h ; 't'
		push	77h ; 'w'
		push	23h ; '#'
		xor	esi, esi
		call	_ERR_put_error
		add	esp, 18h
		jmp	short $err$10
; ---------------------------------------------------------------------------

loc_310:				; CODE XREF: _PKCS12_pbe_crypt+133j
		test	ebp, ebp
		jz	short loc_31D
		mov	eax, [esp+0ACh+var_9C]
		add	eax, edi
		mov	[ebp+0], eax

loc_31D:				; CODE XREF: _PKCS12_pbe_crypt+156j
		test	ebx, ebx
		jz	short $err$10
		mov	[ebx], esi

$err$10:				; CODE XREF: _PKCS12_pbe_crypt+D7j
					; _PKCS12_pbe_crypt+115j ...
		lea	eax, [esp+0ACh+var_90]
		push	eax
		call	_EVP_CIPHER_CTX_cleanup
		add	esp, 4
		mov	eax, esi

loc_332:				; CODE XREF: _PKCS12_pbe_crypt+94j
		mov	ecx, [esp+0ACh+var_4]
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 9Ch
		retn
_PKCS12_pbe_crypt endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34Ch
; COMDAT (pick any)
		public ??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@
; `string'
??_C@_0BL@GDMBNEK@?4?2crypto?2pkcs12?2p12_decr?4c?$AA@ db '.\crypto\pkcs12\p12_decr.c',0
					; DATA XREF: _PKCS12_item_decrypt_d2i+3Co
					; _PKCS12_item_decrypt_d2i+95o	...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _CRYPTO_malloc:near ; CODE XREF: _PKCS12_pbe_crypt+B4p
		extrn _CRYPTO_free:near	; CODE XREF: _PKCS12_item_decrypt_d2i+A9p
					; _PKCS12_item_i2d_encrypt+C2p	...
		extrn _OPENSSL_cleanse:near ; CODE XREF: _PKCS12_item_decrypt_d2i+84p
					; _PKCS12_item_i2d_encrypt+E5p
		extrn _ERR_put_error:near ; CODE XREF: _PKCS12_item_decrypt_d2i+47p
					; _PKCS12_item_decrypt_d2i+A0p	...
		extrn _ASN1_STRING_type_new:near ; CODE	XREF: _PKCS12_item_i2d_encrypt+16p
		extrn _ASN1_OCTET_STRING_free:near ; CODE XREF:	_PKCS12_item_i2d_encrypt+7Ap
					; _PKCS12_item_i2d_encrypt+CBp
		extrn _ASN1_item_d2i:near ; CODE XREF: _PKCS12_item_decrypt_d2i+6Ep
		extrn _ASN1_item_i2d:near ; CODE XREF: _PKCS12_item_i2d_encrypt+4Fp
		extrn _EVP_CIPHER_CTX_block_size:near ;	CODE XREF: _PKCS12_pbe_crypt+A5p
		extrn _EVP_CipherUpdate:near ; CODE XREF: _PKCS12_pbe_crypt+ECp
		extrn _EVP_CipherFinal_ex:near ; CODE XREF: _PKCS12_pbe_crypt+129p
		extrn _EVP_CIPHER_CTX_init:near	; CODE XREF: _PKCS12_pbe_crypt+53p
		extrn _EVP_CIPHER_CTX_cleanup:near ; CODE XREF:	_PKCS12_pbe_crypt+16Cp
		extrn _EVP_PBE_CipherInit:near ; CODE XREF: _PKCS12_pbe_crypt+71p
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _PKCS12_pbe_crypt+183p
		extrn __chkstk:near	; CODE XREF: _PKCS12_item_decrypt_d2i+5p
					; _PKCS12_item_i2d_encrypt+5p ...
		extrn ___security_cookie:near ;	DATA XREF: _PKCS12_pbe_crypt+Ar


		end

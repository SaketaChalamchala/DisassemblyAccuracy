;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	B6DB89CA6BEFBFCF3E57FD8DF09FD141
; Input	CRC32 :	D946E2C4

; File Name   :	C:\compspace\Diff\openssl\obj\openssl.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		public _functions
_functions	dd 1			; DATA XREF: _do_cmd+35Do
					; _prog_init+22o ...
off_4		dd offset ??_C@_06MCIJCFHC@verify?$AA@ ; DATA XREF: _do_cmd+362r
					; _do_cmd:loc_FD7r ...
					; "verify"
		dd offset _verify_main
		dd 1
		dd offset ??_C@_09HAGJHI@asn1parse?$AA@	; "asn1parse"
		dd offset _asn1parse_main
		dd 1
		dd offset ??_C@_03GHLFAJII@req?$AA@ ; `string'
		dd offset _req_main
		dd 1
		dd offset ??_C@_04OOHKHMCO@dgst?$AA@ ; "dgst"
		dd offset _dgst_main
		dd 1
		dd offset ??_C@_02OCEEKELO@dh?$AA@ ; `string'
		dd offset _dh_main
		dd 1
		dd offset ??_C@_07IBCFADID@dhparam?$AA@	; "dhparam"
		dd offset _dhparam_main
		dd 1
		dd offset ??_C@_03NONKPJJM@enc?$AA@ ; "enc"
		dd offset _enc_main
		dd 1
		dd offset ??_C@_06NKIEGJEO@passwd?$AA@ ; "passwd"
		dd offset _passwd_main
		dd 1
		dd offset ??_C@_05DDBNJLOA@gendh?$AA@ ;	"gendh"
		dd offset _gendh_main
		dd 1
		dd offset ??_C@_06EJJOIICM@errstr?$AA@ ; "errstr"
		dd offset _errstr_main
		dd 1
		dd offset ??_C@_02DGMJAJHC@ca?$AA@ ; `string'
		dd offset _ca_main
		dd 1
		dd offset ??_C@_03GJBFOAJL@crl?$AA@ ; `string'
		dd offset _crl_main
		dd 1
		dd offset ??_C@_03DFNMMEBL@rsa?$AA@ ; `string'
		dd offset _rsa_main
		dd 1
		dd offset ??_C@_06PGNBHEJI@rsautl?$AA@ ; "rsautl"
		dd offset _rsautl_main
		dd 1
		dd offset ??_C@_03EAKOMMFI@dsa?$AA@ ; `string'
		dd offset _dsa_main
		dd 1
		dd offset ??_C@_08OAGHGFAN@dsaparam?$AA@ ; "dsaparam"
		dd offset _dsaparam_main
		dd 1
		dd offset ??_C@_02HCBHEC@ec?$AA@ ; `string'
		dd offset _ec_main
		dd 1
		dd offset ??_C@_07EPIIFHOH@ecparam?$AA@	; "ecparam"
		dd offset _ecparam_main
		dd 1
		dd offset ??_C@_04BNGFMDFF@x509?$AA@ ; "x509"
		dd offset _x509_main
		dd 1
		dd offset ??_C@_06LJNOOBNH@genrsa?$AA@ ; "genrsa"
		dd offset _genrsa_main
		dd 1
		dd offset ??_C@_06MMKMOJJE@gendsa?$AA@ ; "gendsa"
		dd offset _gendsa_main
		dd 1
		dd offset ??_C@_07OJHNPOF@genpkey?$AA@ ; "genpkey"
		dd offset _genpkey_main
		dd 1
		dd offset ??_C@_08EHDEPPCE@s_server?$AA@ ; "s_server"
		dd offset _s_server_main
		dd 1
		dd offset ??_C@_08IHGCEKH@s_client?$AA@	; "s_client"
		dd offset _s_client_main
		dd 1
		dd offset ??_C@_05HJCMGBKF@speed?$AA@ ;	"speed"
		dd offset _speed_main
		dd 1
		dd offset ??_C@_06FADCGJAC@s_time?$AA@ ; "s_time"
		dd offset _s_time_main
		dd 1
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _version_main
		dd 1
		dd offset ??_C@_05EENODLBB@pkcs7?$AA@ ;	"pkcs7"
		dd offset _pkcs7_main
		dd 1
		dd offset ??_C@_03LDDFAKEI@cms?$AA@ ; `string'
		dd offset _cms_main
		dd 1
		dd offset ??_C@_09EKKLKHGL@crl2pkcs7?$AA@ ; "crl2pkcs7"
		dd offset _crl2pkcs7_main
		dd 1
		dd offset ??_C@_07IHLBHBCP@sess_id?$AA@	; "sess_id"
		dd offset _sess_id_main
		dd 1
		dd offset ??_C@_07CHGICOIP@ciphers?$AA@	; "ciphers"
		dd offset _ciphers_main
		dd 1
		dd offset ??_C@_04BOGNIPMA@nseq?$AA@ ; "nseq"
		dd offset _nseq_main
		dd 1
		dd offset ??_C@_06IDAJNGAK@pkcs12?$AA@ ; "pkcs12"
		dd offset _pkcs12_main
		dd 1
		dd offset ??_C@_05MDEGCHNO@pkcs8?$AA@ ;	"pkcs8"
		dd offset _pkcs8_main
		dd 1
		dd offset ??_C@_04JMMJFDFL@pkey?$AA@ ; "pkey"
		dd offset _pkey_main
		dd 1
		dd offset ??_C@_09CCPBLJJJ@pkeyparam?$AA@ ; "pkeyparam"
		dd offset _pkeyparam_main
		dd 1
		dd offset ??_C@_07NFJGABMH@pkeyutl?$AA@	; "pkeyutl"
		dd offset _pkeyutl_main
		dd 1
		dd offset ??_C@_05NBLLCIIN@spkac?$AA@ ;	"spkac"
		dd offset _spkac_main
		dd 1
		dd offset ??_C@_05LMICONNH@smime?$AA@ ;	"smime"
		dd offset _smime_main
		dd 1
		dd offset ??_C@_04HKINGDKC@rand?$AA@ ; "rand"
		dd offset _rand_main
		dd 1
		dd offset ??_C@_06LOBMEHPF@engine?$AA@ ; "engine"
		dd offset _engine_main
		dd 1
		dd offset ??_C@_04HCKEBPGM@ocsp?$AA@ ; "ocsp"
		dd offset _ocsp_main
		dd 1
		dd offset ??_C@_05NIKGJPCK@prime?$AA@ ;	"prime"
		dd offset _prime_main
		dd 1
		dd offset ??_C@_02FHFEMMFE@ts?$AA@ ; `string'
		dd offset _ts_main
		dd 1
		dd offset ??_C@_03NPHLOKFJ@srp?$AA@ ; `string'
		dd offset _srp_main
		dd 2
		dd offset ??_C@_03ODADJPDG@md4?$AA@ ; `string'
		dd offset _dgst_main
		dd 2
		dd offset ??_C@_03PKBIKOHH@md5?$AA@ ; `string'
		dd offset _dgst_main
		dd 2
		dd offset ??_C@_03JNBDOPOP@sha?$AA@ ; `string'
		dd offset _dgst_main
		dd 2
		dd offset ??_C@_04PGHFOLLE@sha1?$AA@ ; "sha1"
		dd offset _dgst_main
		dd 2
		dd offset ??_C@_04ELNKPKEC@mdc2?$AA@ ; "mdc2"
		dd offset _dgst_main
		dd 2
		dd offset ??_C@_06HGILBMJP@rmd160?$AA@ ; "rmd160"
		dd offset _dgst_main
		dd 3
		dd offset ??_C@_0M@PDGNIOMI@aes?9128?9cbc?$AA@ ; "aes-128-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0M@MONPIKGC@aes?9128?9ecb?$AA@ ; "aes-128-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0M@FAPBPJFE@aes?9192?9cbc?$AA@ ; "aes-192-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0M@GNEDPNPO@aes?9192?9ecb?$AA@ ; "aes-192-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0M@ICEPNGNF@aes?9256?9cbc?$AA@ ; "aes-256-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0M@LPPNNCHP@aes?9256?9ecb?$AA@ ; "aes-256-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0BB@GDOINOHE@camellia?9128?9cbc?$AA@ ; "camellia-128-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0BB@FOFKNKNO@camellia?9128?9ecb?$AA@ ; "camellia-128-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0BB@MAHEKJOI@camellia?9192?9cbc?$AA@ ; "camellia-192-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0BB@PNMGKNEC@camellia?9192?9ecb?$AA@ ; "camellia-192-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0BB@BCMKIGGJ@camellia?9256?9cbc?$AA@ ; "camellia-256-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0BB@CPHIICMD@camellia?9256?9ecb?$AA@ ; "camellia-256-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_06JEFEFGEJ@base64?$AA@ ; "base64"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_03CAPBGDEJ@des?$AA@ ; `string'
		dd offset _enc_main
		dd 3
		dd offset ??_C@_04PLELGNGH@des3?$AA@ ; "des3"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_04OIMGPLKJ@desx?$AA@ ; "desx"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_04CLEBCOKH@idea?$AA@ ; "idea"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_04MENKDCKE@seed?$AA@ ; "seed"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_03OODGMOHK@rc4?$AA@ ; `string'
		dd offset _enc_main
		dd 3
		dd offset ??_C@_06GNNJIOGN@rc4?940?$AA@	; "rc4-40"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_03LIGMGJPM@rc2?$AA@ ; `string'
		dd offset _enc_main
		dd 3
		dd offset ??_C@_02HIEKPFIC@bf?$AA@ ; `string'
		dd offset _enc_main
		dd 3
		dd offset ??_C@_04HJDBPPOC@cast?$AA@ ; "cast"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07LCLHACCC@des?9ecb?$AA@ ; "des-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07PILJICGA@des?9ede?$AA@ ; "des-ede"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08LJCBLNOK@des?9ede3?$AA@ ; "des-ede3"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07IPAFAGII@des?9cbc?$AA@ ; "des-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0M@EKLHMDEA@des?9ede?9cbc?$AA@ ; "des-ede-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0N@FPCHEGKG@des?9ede3?9cbc?$AA@	; "des-ede3-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07JBBHJPBF@des?9cfb?$AA@ ; "des-cfb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0M@FEKFFKNN@des?9ede?9cfb?$AA@ ; "des-ede-cfb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0N@EBDFNPDL@des?9ede3?9cfb?$AA@	; "des-ede3-cfb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07NLMBCAKN@des?9ofb?$AA@ ; "des-ofb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0M@BOHDOFGF@des?9ede?9ofb?$AA@ ; "des-ede-ofb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0N@LODGAID@des?9ede3?9ofb?$AA@ ; "des-ede3-ofb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08LCPAFJCA@idea?9cbc?$AA@ ; "idea-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08IPECFNIK@idea?9ecb?$AA@ ; "idea-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08KMOCMALN@idea?9cfb?$AA@ ; "idea-cfb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08OGDEHPAF@idea?9ofb?$AA@ ; "idea-ofb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08BHHJAAOC@seed?9cbc?$AA@ ; "seed-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08CKMLAEEI@seed?9ecb?$AA@ ; "seed-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08JGLJJHP@seed?9cfb?$AA@ ; "seed-cfb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08EDLNCGMH@seed?9ofb?$AA@ ; "seed-ofb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07JCAFNCNH@rc2?9cbc?$AA@ ; "rc2-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07KPLHNGHN@rc2?9ecb?$AA@ ; "rc2-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07IMBHELEK@rc2?9cfb?$AA@ ; "rc2-cfb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_07MGMBPEPC@rc2?9ofb?$AA@ ; "rc2-ofb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0L@CLELMECA@rc2?964?9cbc?$AA@ ;	"rc2-64-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_0L@CHEFJHBP@rc2?940?9cbc?$AA@ ;	"rc2-40-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_06LFFGAFHI@bf?9cbc?$AA@	; "bf-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_06IIOEABNC@bf?9ecb?$AA@	; "bf-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_06KLEEJMOF@bf?9cfb?$AA@	; "bf-cfb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_06OBJCCDFN@bf?9ofb?$AA@	; "bf-ofb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_09BGLDNNDK@cast5?9cbc?$AA@ ; "cast5-cbc"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_09CLABNJJA@cast5?9ecb?$AA@ ; "cast5-ecb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_09IKBEEKH@cast5?9cfb?$AA@ ; "cast5-cfb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_09ECHHPLBP@cast5?9ofb?$AA@ ; "cast5-ofb"
		dd offset _enc_main
		dd 3
		dd offset ??_C@_08DICLOHAG@cast?9cbc?$AA@ ; "cast-cbc"
		dd offset _enc_main
		dd 3 dup(0)
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 534h
; COMDAT (pick any)
		public ??_C@_06MCIJCFHC@verify?$AA@
; `string'
??_C@_06MCIJCFHC@verify?$AA@ db	'verify',0 ; DATA XREF: .data:off_4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 53Ch
; COMDAT (pick any)
		public ??_C@_09HAGJHI@asn1parse?$AA@
; `string'
??_C@_09HAGJHI@asn1parse?$AA@ db 'asn1parse',0 ; DATA XREF: .data:00000010o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 548h
; COMDAT (pick any)
		public ??_C@_03GHLFAJII@req?$AA@
; `string'
??_C@_03GHLFAJII@req?$AA@ dd 716572h	; DATA XREF: .data:0000001Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54Ch
; COMDAT (pick any)
		public ??_C@_04OOHKHMCO@dgst?$AA@
; `string'
??_C@_04OOHKHMCO@dgst?$AA@ db 'dgst',0  ; DATA XREF: .data:00000028o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 554h
; COMDAT (pick any)
		public ??_C@_02OCEEKELO@dh?$AA@
; `string'
??_C@_02OCEEKELO@dh?$AA@ db 64h, 68h, 0	; DATA XREF: .data:00000034o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 558h
; COMDAT (pick any)
		public ??_C@_07IBCFADID@dhparam?$AA@
; `string'
??_C@_07IBCFADID@dhparam?$AA@ db 'dhparam',0 ; DATA XREF: .data:00000040o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 560h
; COMDAT (pick any)
		public ??_C@_03NONKPJJM@enc?$AA@
; `string'
??_C@_03NONKPJJM@enc?$AA@ db 'enc',0    ; DATA XREF: .data:0000004Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 564h
; COMDAT (pick any)
		public ??_C@_06NKIEGJEO@passwd?$AA@
; `string'
??_C@_06NKIEGJEO@passwd?$AA@ db	'passwd',0 ; DATA XREF: .data:00000058o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 56Ch
; COMDAT (pick any)
		public ??_C@_05DDBNJLOA@gendh?$AA@
; `string'
??_C@_05DDBNJLOA@gendh?$AA@ db 'gendh',0 ; DATA XREF: .data:00000064o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 574h
; COMDAT (pick any)
		public ??_C@_06EJJOIICM@errstr?$AA@
; `string'
??_C@_06EJJOIICM@errstr?$AA@ db	'errstr',0 ; DATA XREF: .data:00000070o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 57Ch
; COMDAT (pick any)
		public ??_C@_02DGMJAJHC@ca?$AA@
; `string'
??_C@_02DGMJAJHC@ca?$AA@ db 63h, 61h, 0	; DATA XREF: .data:0000007Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 580h
; COMDAT (pick any)
		public ??_C@_03GJBFOAJL@crl?$AA@
; `string'
??_C@_03GJBFOAJL@crl?$AA@ dd 6C7263h	; DATA XREF: .data:00000088o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 584h
; COMDAT (pick any)
		public ??_C@_03DFNMMEBL@rsa?$AA@
; `string'
??_C@_03DFNMMEBL@rsa?$AA@ dd 617372h	; DATA XREF: .data:00000094o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 588h
; COMDAT (pick any)
		public ??_C@_06PGNBHEJI@rsautl?$AA@
; `string'
??_C@_06PGNBHEJI@rsautl?$AA@ db	'rsautl',0 ; DATA XREF: .data:000000A0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 590h
; COMDAT (pick any)
		public ??_C@_03EAKOMMFI@dsa?$AA@
; `string'
??_C@_03EAKOMMFI@dsa?$AA@ dd 617364h	; DATA XREF: .data:000000ACo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 594h
; COMDAT (pick any)
		public ??_C@_08OAGHGFAN@dsaparam?$AA@
; `string'
??_C@_08OAGHGFAN@dsaparam?$AA@ db 'dsaparam',0 ; DATA XREF: .data:000000B8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5A0h
; COMDAT (pick any)
		public ??_C@_02HCBHEC@ec?$AA@
; `string'
??_C@_02HCBHEC@ec?$AA@ db 65h, 63h, 0	; DATA XREF: .data:000000C4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5A4h
; COMDAT (pick any)
		public ??_C@_07EPIIFHOH@ecparam?$AA@
; `string'
??_C@_07EPIIFHOH@ecparam?$AA@ db 'ecparam',0 ; DATA XREF: .data:000000D0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5ACh
; COMDAT (pick any)
		public ??_C@_04BNGFMDFF@x509?$AA@
; `string'
??_C@_04BNGFMDFF@x509?$AA@ db 'x509',0  ; DATA XREF: .data:000000DCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5B4h
; COMDAT (pick any)
		public ??_C@_06LJNOOBNH@genrsa?$AA@
; `string'
??_C@_06LJNOOBNH@genrsa?$AA@ db	'genrsa',0 ; DATA XREF: .data:000000E8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5BCh
; COMDAT (pick any)
		public ??_C@_06MMKMOJJE@gendsa?$AA@
; `string'
??_C@_06MMKMOJJE@gendsa?$AA@ db	'gendsa',0 ; DATA XREF: .data:000000F4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5C4h
; COMDAT (pick any)
		public ??_C@_07OJHNPOF@genpkey?$AA@
; `string'
??_C@_07OJHNPOF@genpkey?$AA@ db	'genpkey',0 ; DATA XREF: .data:00000100o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5CCh
; COMDAT (pick any)
		public ??_C@_08EHDEPPCE@s_server?$AA@
; `string'
??_C@_08EHDEPPCE@s_server?$AA@ db 's_server',0 ; DATA XREF: .data:0000010Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5D8h
; COMDAT (pick any)
		public ??_C@_08IHGCEKH@s_client?$AA@
; `string'
??_C@_08IHGCEKH@s_client?$AA@ db 's_client',0 ; DATA XREF: .data:00000118o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5E4h
; COMDAT (pick any)
		public ??_C@_05HJCMGBKF@speed?$AA@
; `string'
??_C@_05HJCMGBKF@speed?$AA@ db 'speed',0 ; DATA XREF: .data:00000124o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5ECh
; COMDAT (pick any)
		public ??_C@_06FADCGJAC@s_time?$AA@
; `string'
??_C@_06FADCGJAC@s_time?$AA@ db	's_time',0 ; DATA XREF: .data:00000130o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5F4h
; COMDAT (pick any)
		public ??_C@_07CPCPJPKL@version?$AA@
; `string'
??_C@_07CPCPJPKL@version?$AA@ db 'version',0 ; DATA XREF: .data:0000013Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5FCh
; COMDAT (pick any)
		public ??_C@_05EENODLBB@pkcs7?$AA@
; `string'
??_C@_05EENODLBB@pkcs7?$AA@ db 'pkcs7',0 ; DATA XREF: .data:00000148o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 604h
; COMDAT (pick any)
		public ??_C@_03LDDFAKEI@cms?$AA@
; `string'
??_C@_03LDDFAKEI@cms?$AA@ dd 736D63h	; DATA XREF: .data:00000154o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 608h
; COMDAT (pick any)
		public ??_C@_09EKKLKHGL@crl2pkcs7?$AA@
; `string'
??_C@_09EKKLKHGL@crl2pkcs7?$AA@	db 'crl2pkcs7',0 ; DATA XREF: .data:00000160o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 614h
; COMDAT (pick any)
		public ??_C@_07IHLBHBCP@sess_id?$AA@
; `string'
??_C@_07IHLBHBCP@sess_id?$AA@ db 'sess_id',0 ; DATA XREF: .data:0000016Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 61Ch
; COMDAT (pick any)
		public ??_C@_07CHGICOIP@ciphers?$AA@
; `string'
??_C@_07CHGICOIP@ciphers?$AA@ db 'ciphers',0 ; DATA XREF: .data:00000178o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 624h
; COMDAT (pick any)
		public ??_C@_04BOGNIPMA@nseq?$AA@
; `string'
??_C@_04BOGNIPMA@nseq?$AA@ db 'nseq',0  ; DATA XREF: .data:00000184o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 62Ch
; COMDAT (pick any)
		public ??_C@_06IDAJNGAK@pkcs12?$AA@
; `string'
??_C@_06IDAJNGAK@pkcs12?$AA@ db	'pkcs12',0 ; DATA XREF: .data:00000190o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 634h
; COMDAT (pick any)
		public ??_C@_05MDEGCHNO@pkcs8?$AA@
; `string'
??_C@_05MDEGCHNO@pkcs8?$AA@ db 'pkcs8',0 ; DATA XREF: .data:0000019Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 63Ch
; COMDAT (pick any)
		public ??_C@_04JMMJFDFL@pkey?$AA@
; `string'
??_C@_04JMMJFDFL@pkey?$AA@ db 'pkey',0  ; DATA XREF: .data:000001A8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 644h
; COMDAT (pick any)
		public ??_C@_09CCPBLJJJ@pkeyparam?$AA@
; `string'
??_C@_09CCPBLJJJ@pkeyparam?$AA@	db 'pkeyparam',0 ; DATA XREF: .data:000001B4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 650h
; COMDAT (pick any)
		public ??_C@_07NFJGABMH@pkeyutl?$AA@
; `string'
??_C@_07NFJGABMH@pkeyutl?$AA@ db 'pkeyutl',0 ; DATA XREF: .data:000001C0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 658h
; COMDAT (pick any)
		public ??_C@_05NBLLCIIN@spkac?$AA@
; `string'
??_C@_05NBLLCIIN@spkac?$AA@ db 'spkac',0 ; DATA XREF: .data:000001CCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 660h
; COMDAT (pick any)
		public ??_C@_05LMICONNH@smime?$AA@
; `string'
??_C@_05LMICONNH@smime?$AA@ db 'smime',0 ; DATA XREF: .data:000001D8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 668h
; COMDAT (pick any)
		public ??_C@_04HKINGDKC@rand?$AA@
; `string'
??_C@_04HKINGDKC@rand?$AA@ db 'rand',0  ; DATA XREF: .data:000001E4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 670h
; COMDAT (pick any)
		public ??_C@_06LOBMEHPF@engine?$AA@
; `string'
??_C@_06LOBMEHPF@engine?$AA@ db	'engine',0 ; DATA XREF: .data:000001F0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 678h
; COMDAT (pick any)
		public ??_C@_04HCKEBPGM@ocsp?$AA@
; `string'
??_C@_04HCKEBPGM@ocsp?$AA@ db 'ocsp',0  ; DATA XREF: .data:000001FCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 680h
; COMDAT (pick any)
		public ??_C@_05NIKGJPCK@prime?$AA@
; `string'
??_C@_05NIKGJPCK@prime?$AA@ db 'prime',0 ; DATA XREF: .data:00000208o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 688h
; COMDAT (pick any)
		public ??_C@_02FHFEMMFE@ts?$AA@
; `string'
??_C@_02FHFEMMFE@ts?$AA@ db 74h, 73h, 0	; DATA XREF: .data:00000214o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68Ch
; COMDAT (pick any)
		public ??_C@_03NPHLOKFJ@srp?$AA@
; `string'
??_C@_03NPHLOKFJ@srp?$AA@ dd 707273h	; DATA XREF: .data:00000220o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 690h
; COMDAT (pick any)
		public ??_C@_03ODADJPDG@md4?$AA@
; `string'
??_C@_03ODADJPDG@md4?$AA@ dd 34646Dh	; DATA XREF: .data:0000022Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 694h
; COMDAT (pick any)
		public ??_C@_03PKBIKOHH@md5?$AA@
; `string'
??_C@_03PKBIKOHH@md5?$AA@ dd 35646Dh	; DATA XREF: .data:00000238o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 698h
; COMDAT (pick any)
		public ??_C@_03JNBDOPOP@sha?$AA@
; `string'
??_C@_03JNBDOPOP@sha?$AA@ dd 616873h	; DATA XREF: .data:00000244o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 69Ch
; COMDAT (pick any)
		public ??_C@_04PGHFOLLE@sha1?$AA@
; `string'
??_C@_04PGHFOLLE@sha1?$AA@ db 'sha1',0  ; DATA XREF: .data:00000250o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6A4h
; COMDAT (pick any)
		public ??_C@_04ELNKPKEC@mdc2?$AA@
; `string'
??_C@_04ELNKPKEC@mdc2?$AA@ db 'mdc2',0  ; DATA XREF: .data:0000025Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6ACh
; COMDAT (pick any)
		public ??_C@_06HGILBMJP@rmd160?$AA@
; `string'
??_C@_06HGILBMJP@rmd160?$AA@ db	'rmd160',0 ; DATA XREF: .data:00000268o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6B4h
; COMDAT (pick any)
		public ??_C@_0M@PDGNIOMI@aes?9128?9cbc?$AA@
; `string'
??_C@_0M@PDGNIOMI@aes?9128?9cbc?$AA@ db	'aes-128-cbc',0 ; DATA XREF: .data:00000274o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6C0h
; COMDAT (pick any)
		public ??_C@_0M@MONPIKGC@aes?9128?9ecb?$AA@
; `string'
??_C@_0M@MONPIKGC@aes?9128?9ecb?$AA@ db	'aes-128-ecb',0 ; DATA XREF: .data:00000280o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6CCh
; COMDAT (pick any)
		public ??_C@_0M@FAPBPJFE@aes?9192?9cbc?$AA@
; `string'
??_C@_0M@FAPBPJFE@aes?9192?9cbc?$AA@ db	'aes-192-cbc',0 ; DATA XREF: .data:0000028Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6D8h
; COMDAT (pick any)
		public ??_C@_0M@GNEDPNPO@aes?9192?9ecb?$AA@
; `string'
??_C@_0M@GNEDPNPO@aes?9192?9ecb?$AA@ db	'aes-192-ecb',0 ; DATA XREF: .data:00000298o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6E4h
; COMDAT (pick any)
		public ??_C@_0M@ICEPNGNF@aes?9256?9cbc?$AA@
; `string'
??_C@_0M@ICEPNGNF@aes?9256?9cbc?$AA@ db	'aes-256-cbc',0 ; DATA XREF: .data:000002A4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6F0h
; COMDAT (pick any)
		public ??_C@_0M@LPPNNCHP@aes?9256?9ecb?$AA@
; `string'
??_C@_0M@LPPNNCHP@aes?9256?9ecb?$AA@ db	'aes-256-ecb',0 ; DATA XREF: .data:000002B0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6FCh
; COMDAT (pick any)
		public ??_C@_0BB@GDOINOHE@camellia?9128?9cbc?$AA@
; `string'
??_C@_0BB@GDOINOHE@camellia?9128?9cbc?$AA@ db 'camellia-128-cbc',0
					; DATA XREF: .data:000002BCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 710h
; COMDAT (pick any)
		public ??_C@_0BB@FOFKNKNO@camellia?9128?9ecb?$AA@
; `string'
??_C@_0BB@FOFKNKNO@camellia?9128?9ecb?$AA@ db 'camellia-128-ecb',0
					; DATA XREF: .data:000002C8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 724h
; COMDAT (pick any)
		public ??_C@_0BB@MAHEKJOI@camellia?9192?9cbc?$AA@
; `string'
??_C@_0BB@MAHEKJOI@camellia?9192?9cbc?$AA@ db 'camellia-192-cbc',0
					; DATA XREF: .data:000002D4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 738h
; COMDAT (pick any)
		public ??_C@_0BB@PNMGKNEC@camellia?9192?9ecb?$AA@
; `string'
??_C@_0BB@PNMGKNEC@camellia?9192?9ecb?$AA@ db 'camellia-192-ecb',0
					; DATA XREF: .data:000002E0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74Ch
; COMDAT (pick any)
		public ??_C@_0BB@BCMKIGGJ@camellia?9256?9cbc?$AA@
; `string'
??_C@_0BB@BCMKIGGJ@camellia?9256?9cbc?$AA@ db 'camellia-256-cbc',0
					; DATA XREF: .data:000002ECo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 760h
; COMDAT (pick any)
		public ??_C@_0BB@CPHIICMD@camellia?9256?9ecb?$AA@
; `string'
??_C@_0BB@CPHIICMD@camellia?9256?9ecb?$AA@ db 'camellia-256-ecb',0
					; DATA XREF: .data:000002F8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 774h
; COMDAT (pick any)
		public ??_C@_06JEFEFGEJ@base64?$AA@
; `string'
??_C@_06JEFEFGEJ@base64?$AA@ db	'base64',0 ; DATA XREF: .data:00000304o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 77Ch
; COMDAT (pick any)
		public ??_C@_03CAPBGDEJ@des?$AA@
; `string'
??_C@_03CAPBGDEJ@des?$AA@ dd 736564h	; DATA XREF: .data:00000310o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 780h
; COMDAT (pick any)
		public ??_C@_04PLELGNGH@des3?$AA@
; `string'
??_C@_04PLELGNGH@des3?$AA@ db 'des3',0  ; DATA XREF: .data:0000031Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 788h
; COMDAT (pick any)
		public ??_C@_04OIMGPLKJ@desx?$AA@
; `string'
??_C@_04OIMGPLKJ@desx?$AA@ db 'desx',0  ; DATA XREF: .data:00000328o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 790h
; COMDAT (pick any)
		public ??_C@_04CLEBCOKH@idea?$AA@
; `string'
??_C@_04CLEBCOKH@idea?$AA@ db 'idea',0  ; DATA XREF: .data:00000334o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 798h
; COMDAT (pick any)
		public ??_C@_04MENKDCKE@seed?$AA@
; `string'
??_C@_04MENKDCKE@seed?$AA@ db 'seed',0  ; DATA XREF: .data:00000340o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7A0h
; COMDAT (pick any)
		public ??_C@_03OODGMOHK@rc4?$AA@
; `string'
??_C@_03OODGMOHK@rc4?$AA@ dd 346372h	; DATA XREF: .data:0000034Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7A4h
; COMDAT (pick any)
		public ??_C@_06GNNJIOGN@rc4?940?$AA@
; `string'
??_C@_06GNNJIOGN@rc4?940?$AA@ db 'rc4-40',0 ; DATA XREF: .data:00000358o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7ACh
; COMDAT (pick any)
		public ??_C@_03LIGMGJPM@rc2?$AA@
; `string'
??_C@_03LIGMGJPM@rc2?$AA@ dd 326372h	; DATA XREF: .data:00000364o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7B0h
; COMDAT (pick any)
		public ??_C@_02HIEKPFIC@bf?$AA@
; `string'
??_C@_02HIEKPFIC@bf?$AA@ db 62h, 66h, 0	; DATA XREF: .data:00000370o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7B4h
; COMDAT (pick any)
		public ??_C@_04HJDBPPOC@cast?$AA@
; `string'
??_C@_04HJDBPPOC@cast?$AA@ db 'cast',0  ; DATA XREF: .data:0000037Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7BCh
; COMDAT (pick any)
		public ??_C@_07LCLHACCC@des?9ecb?$AA@
; `string'
??_C@_07LCLHACCC@des?9ecb?$AA@ db 'des-ecb',0 ; DATA XREF: .data:00000388o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7C4h
; COMDAT (pick any)
		public ??_C@_07PILJICGA@des?9ede?$AA@
; `string'
??_C@_07PILJICGA@des?9ede?$AA@ db 'des-ede',0 ; DATA XREF: .data:00000394o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7CCh
; COMDAT (pick any)
		public ??_C@_08LJCBLNOK@des?9ede3?$AA@
; `string'
??_C@_08LJCBLNOK@des?9ede3?$AA@	db 'des-ede3',0 ; DATA XREF: .data:000003A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7D8h
; COMDAT (pick any)
		public ??_C@_07IPAFAGII@des?9cbc?$AA@
; `string'
??_C@_07IPAFAGII@des?9cbc?$AA@ db 'des-cbc',0 ; DATA XREF: .data:000003ACo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7E0h
; COMDAT (pick any)
		public ??_C@_0M@EKLHMDEA@des?9ede?9cbc?$AA@
; `string'
??_C@_0M@EKLHMDEA@des?9ede?9cbc?$AA@ db	'des-ede-cbc',0 ; DATA XREF: .data:000003B8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7ECh
; COMDAT (pick any)
		public ??_C@_0N@FPCHEGKG@des?9ede3?9cbc?$AA@
; `string'
??_C@_0N@FPCHEGKG@des?9ede3?9cbc?$AA@ db 'des-ede3-cbc',0 ; DATA XREF: .data:000003C4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7FCh
; COMDAT (pick any)
		public ??_C@_07JBBHJPBF@des?9cfb?$AA@
; `string'
??_C@_07JBBHJPBF@des?9cfb?$AA@ db 'des-cfb',0 ; DATA XREF: .data:000003D0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 804h
; COMDAT (pick any)
		public ??_C@_0M@FEKFFKNN@des?9ede?9cfb?$AA@
; `string'
??_C@_0M@FEKFFKNN@des?9ede?9cfb?$AA@ db	'des-ede-cfb',0 ; DATA XREF: .data:000003DCo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 810h
; COMDAT (pick any)
		public ??_C@_0N@EBDFNPDL@des?9ede3?9cfb?$AA@
; `string'
??_C@_0N@EBDFNPDL@des?9ede3?9cfb?$AA@ db 'des-ede3-cfb',0 ; DATA XREF: .data:000003E8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 820h
; COMDAT (pick any)
		public ??_C@_07NLMBCAKN@des?9ofb?$AA@
; `string'
??_C@_07NLMBCAKN@des?9ofb?$AA@ db 'des-ofb',0 ; DATA XREF: .data:000003F4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 828h
; COMDAT (pick any)
		public ??_C@_0M@BOHDOFGF@des?9ede?9ofb?$AA@
; `string'
??_C@_0M@BOHDOFGF@des?9ede?9ofb?$AA@ db	'des-ede-ofb',0 ; DATA XREF: .data:00000400o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 834h
; COMDAT (pick any)
		public ??_C@_0N@LODGAID@des?9ede3?9ofb?$AA@
; `string'
??_C@_0N@LODGAID@des?9ede3?9ofb?$AA@ db	'des-ede3-ofb',0 ; DATA XREF: .data:0000040Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 844h
; COMDAT (pick any)
		public ??_C@_08LCPAFJCA@idea?9cbc?$AA@
; `string'
??_C@_08LCPAFJCA@idea?9cbc?$AA@	db 'idea-cbc',0 ; DATA XREF: .data:00000418o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 850h
; COMDAT (pick any)
		public ??_C@_08IPECFNIK@idea?9ecb?$AA@
; `string'
??_C@_08IPECFNIK@idea?9ecb?$AA@	db 'idea-ecb',0 ; DATA XREF: .data:00000424o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 85Ch
; COMDAT (pick any)
		public ??_C@_08KMOCMALN@idea?9cfb?$AA@
; `string'
??_C@_08KMOCMALN@idea?9cfb?$AA@	db 'idea-cfb',0 ; DATA XREF: .data:00000430o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 868h
; COMDAT (pick any)
		public ??_C@_08OGDEHPAF@idea?9ofb?$AA@
; `string'
??_C@_08OGDEHPAF@idea?9ofb?$AA@	db 'idea-ofb',0 ; DATA XREF: .data:0000043Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 874h
; COMDAT (pick any)
		public ??_C@_08BHHJAAOC@seed?9cbc?$AA@
; `string'
??_C@_08BHHJAAOC@seed?9cbc?$AA@	db 'seed-cbc',0 ; DATA XREF: .data:00000448o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 880h
; COMDAT (pick any)
		public ??_C@_08CKMLAEEI@seed?9ecb?$AA@
; `string'
??_C@_08CKMLAEEI@seed?9ecb?$AA@	db 'seed-ecb',0 ; DATA XREF: .data:00000454o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88Ch
; COMDAT (pick any)
		public ??_C@_08JGLJJHP@seed?9cfb?$AA@
; `string'
??_C@_08JGLJJHP@seed?9cfb?$AA@ db 'seed-cfb',0 ; DATA XREF: .data:00000460o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 898h
; COMDAT (pick any)
		public ??_C@_08EDLNCGMH@seed?9ofb?$AA@
; `string'
??_C@_08EDLNCGMH@seed?9ofb?$AA@	db 'seed-ofb',0 ; DATA XREF: .data:0000046Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8A4h
; COMDAT (pick any)
		public ??_C@_07JCAFNCNH@rc2?9cbc?$AA@
; `string'
??_C@_07JCAFNCNH@rc2?9cbc?$AA@ db 'rc2-cbc',0 ; DATA XREF: .data:00000478o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8ACh
; COMDAT (pick any)
		public ??_C@_07KPLHNGHN@rc2?9ecb?$AA@
; `string'
??_C@_07KPLHNGHN@rc2?9ecb?$AA@ db 'rc2-ecb',0 ; DATA XREF: .data:00000484o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8B4h
; COMDAT (pick any)
		public ??_C@_07IMBHELEK@rc2?9cfb?$AA@
; `string'
??_C@_07IMBHELEK@rc2?9cfb?$AA@ db 'rc2-cfb',0 ; DATA XREF: .data:00000490o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8BCh
; COMDAT (pick any)
		public ??_C@_07MGMBPEPC@rc2?9ofb?$AA@
; `string'
??_C@_07MGMBPEPC@rc2?9ofb?$AA@ db 'rc2-ofb',0 ; DATA XREF: .data:0000049Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8C4h
; COMDAT (pick any)
		public ??_C@_0L@CLELMECA@rc2?964?9cbc?$AA@
; `string'
??_C@_0L@CLELMECA@rc2?964?9cbc?$AA@ db 'rc2-64-cbc',0 ; DATA XREF: .data:000004A8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8D0h
; COMDAT (pick any)
		public ??_C@_0L@CHEFJHBP@rc2?940?9cbc?$AA@
; `string'
??_C@_0L@CHEFJHBP@rc2?940?9cbc?$AA@ db 'rc2-40-cbc',0 ; DATA XREF: .data:000004B4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8DCh
; COMDAT (pick any)
		public ??_C@_06LFFGAFHI@bf?9cbc?$AA@
; `string'
??_C@_06LFFGAFHI@bf?9cbc?$AA@ db 'bf-cbc',0 ; DATA XREF: .data:000004C0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8E4h
; COMDAT (pick any)
		public ??_C@_06IIOEABNC@bf?9ecb?$AA@
; `string'
??_C@_06IIOEABNC@bf?9ecb?$AA@ db 'bf-ecb',0 ; DATA XREF: .data:000004CCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8ECh
; COMDAT (pick any)
		public ??_C@_06KLEEJMOF@bf?9cfb?$AA@
; `string'
??_C@_06KLEEJMOF@bf?9cfb?$AA@ db 'bf-cfb',0 ; DATA XREF: .data:000004D8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8F4h
; COMDAT (pick any)
		public ??_C@_06OBJCCDFN@bf?9ofb?$AA@
; `string'
??_C@_06OBJCCDFN@bf?9ofb?$AA@ db 'bf-ofb',0 ; DATA XREF: .data:000004E4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8FCh
; COMDAT (pick any)
		public ??_C@_09BGLDNNDK@cast5?9cbc?$AA@
; `string'
??_C@_09BGLDNNDK@cast5?9cbc?$AA@ db 'cast5-cbc',0 ; DATA XREF: .data:000004F0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 908h
; COMDAT (pick any)
		public ??_C@_09CLABNJJA@cast5?9ecb?$AA@
; `string'
??_C@_09CLABNJJA@cast5?9ecb?$AA@ db 'cast5-ecb',0 ; DATA XREF: .data:000004FCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 914h
; COMDAT (pick any)
		public ??_C@_09IKBEEKH@cast5?9cfb?$AA@
; `string'
??_C@_09IKBEEKH@cast5?9cfb?$AA@	db 'cast5-cfb',0 ; DATA XREF: .data:00000508o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 920h
; COMDAT (pick any)
		public ??_C@_09ECHHPLBP@cast5?9ofb?$AA@
; `string'
??_C@_09ECHHPLBP@cast5?9ofb?$AA@ db 'cast5-ofb',0 ; DATA XREF: .data:00000514o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 92Ch
; COMDAT (pick any)
		public ??_C@_08DICLOHAG@cast?9cbc?$AA@
; `string'
??_C@_08DICLOHAG@cast?9cbc?$AA@	db 'cast-cbc',0 ; DATA XREF: .data:00000520o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 938h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		public _config
_config		dd ?			; DATA XREF: _main+1A8w _main+1E1r ...
		public _default_config_file
_default_config_file dd	?		; DATA XREF: _main+199w
		public _bio_err
_bio_err	dd ?			; DATA XREF: _do_cmd+33Br _do_cmd+34Br ...
		align 8
; `lock_dbg_cb'::`2'::modes
?modes@?1??lock_dbg_cb@@9@9 dd ?	; DATA XREF: _lock_dbg_cb+2Cr
					; _lock_dbg_cb+3Dw ...
		dd 28h dup(?)
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9ECh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl SortFnByName(const void *, const void *)
_SortFnByName	proc near		; DATA XREF: _prog_init+1Ao

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_0]
		push	esi
		mov	esi, [esp+4+arg_4]
		mov	eax, [edx]
		mov	ecx, [esi]
		cmp	eax, ecx
		jz	short loc_A01
		sub	eax, ecx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_A01:				; CODE XREF: _SortFnByName+Fj
		mov	eax, [esi+4]
		mov	ecx, [edx+4]
		nop	dword ptr [eax+eax+00h]

loc_A0C:				; CODE XREF: _SortFnByName+3Aj
		mov	dl, [ecx]
		cmp	dl, [eax]
		jnz	short loc_A2C
		test	dl, dl
		jz	short loc_A28
		mov	dl, [ecx+1]
		cmp	dl, [eax+1]
		jnz	short loc_A2C
		add	ecx, 2
		add	eax, 2
		test	dl, dl
		jnz	short loc_A0C

loc_A28:				; CODE XREF: _SortFnByName+28j
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_A2C:				; CODE XREF: _SortFnByName+24j
					; _SortFnByName+30j
		sbb	eax, eax
		or	eax, 1
		pop	esi
		retn
_SortFnByName	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A34h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _fprintf+Fp
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A3Ch
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A60h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_do_cmd		proc near		; CODE XREF: _main+27Fp _main+33Bp

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 0Ch
		call	__chkstk
		push	esi
		push	edi
		mov	edi, [esp+14h+arg_4]
		test	edi, edi
		jle	loc_1064
		mov	esi, [esp+14h+arg_8]
		mov	eax, [esi]
		test	eax, eax
		jz	loc_1064
		mov	[esp+14h+var_8], eax
		lea	eax, [esp+14h+var_C]
		push	eax
		push	[esp+18h+arg_0]
		call	_lh_retrieve
		add	esp, 8
		test	eax, eax
		jnz	short loc_AC1
		push	dword ptr [esi]
		call	_EVP_get_digestbyname
		add	esp, 4
		test	eax, eax
		jz	short loc_AD1
		mov	[esp+14h+var_C], 2
		lea	eax, [esp+14h+var_C]
		mov	[esp+14h+var_4], offset	_dgst_main

loc_AC1:				; CODE XREF: _do_cmd+3Dj
		mov	eax, [eax+8]
		push	esi
		push	edi
		call	eax
		add	esp, 8
		pop	edi
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_AD1:				; CODE XREF: _do_cmd+4Bj
		push	dword ptr [esi]
		call	_EVP_get_cipherbyname
		add	esp, 4
		test	eax, eax
		jz	short loc_B03
		mov	[esp+14h+var_C], 3
		lea	eax, [esp+14h+var_C]
		mov	[esp+14h+var_4], offset	_enc_main
		mov	eax, [eax+8]
		push	esi
		push	edi
		call	eax
		add	esp, 8
		pop	edi
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_B03:				; CODE XREF: _do_cmd+7Dj
		push	ebx
		push	3		; MaxCount
		push	offset ??_C@_03GGODHGCB@no?9?$AA@ ; "no-"
		push	dword ptr [esi]	; Str1
		call	dword ptr ds:__imp__strncmp
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_B7C
		push	eax
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		mov	ebx, eax
		mov	eax, [esi]
		add	eax, 3
		mov	[esp+20h+var_8], eax
		lea	eax, [esp+20h+var_C]
		push	eax
		push	[esp+24h+arg_0]
		call	_lh_retrieve
		add	esp, 10h
		mov	edi, eax
		neg	edi
		sbb	edi, edi
		neg	edi
		jnz	short loc_B56
		push	dword ptr [esi]
		jmp	short loc_B5C
; ---------------------------------------------------------------------------

loc_B56:				; CODE XREF: _do_cmd+F0j
		mov	eax, [esi]
		add	eax, 3
		push	eax

loc_B5C:				; CODE XREF: _do_cmd+F4j
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		push	ebx
		call	_BIO_printf
		add	esp, 0Ch
		push	ebx
		call	_BIO_free_all
		add	esp, 4
		mov	eax, edi
		pop	ebx
		pop	edi
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_B7C:				; CODE XREF: _do_cmd+B8j
		mov	edx, [esi]
		mov	ecx, offset ??_C@_04KNNLNNGO@quit?$AA@ ; "quit"
		mov	eax, edx

loc_B85:				; CODE XREF: _do_cmd+13Fj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_BA5
		test	bl, bl
		jz	short loc_BA1
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_BA5
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_B85

loc_BA1:				; CODE XREF: _do_cmd+12Dj
		xor	eax, eax
		jmp	short loc_BAA
; ---------------------------------------------------------------------------

loc_BA5:				; CODE XREF: _do_cmd+129j _do_cmd+135j
		sbb	eax, eax
		or	eax, 1

loc_BAA:				; CODE XREF: _do_cmd+143j
		test	eax, eax
		jz	loc_105A
		mov	ecx, offset ??_C@_01IIACKFLH@q?$AA@ ; `string'
		mov	eax, edx
		nop	dword ptr [eax+00000000h]

loc_BC0:				; CODE XREF: _do_cmd+17Aj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_BE0
		test	bl, bl
		jz	short loc_BDC
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_BE0
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_BC0

loc_BDC:				; CODE XREF: _do_cmd+168j
		xor	eax, eax
		jmp	short loc_BE5
; ---------------------------------------------------------------------------

loc_BE0:				; CODE XREF: _do_cmd+164j _do_cmd+170j
		sbb	eax, eax
		or	eax, 1

loc_BE5:				; CODE XREF: _do_cmd+17Ej
		test	eax, eax
		jz	loc_105A
		mov	ecx, offset ??_C@_04MKNBDEPB@exit?$AA@ ; "exit"
		mov	eax, edx

loc_BF4:				; CODE XREF: _do_cmd+1AEj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_C14
		test	bl, bl
		jz	short loc_C10
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_C14
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_BF4

loc_C10:				; CODE XREF: _do_cmd+19Cj
		xor	eax, eax
		jmp	short loc_C19
; ---------------------------------------------------------------------------

loc_C14:				; CODE XREF: _do_cmd+198j _do_cmd+1A4j
		sbb	eax, eax
		or	eax, 1

loc_C19:				; CODE XREF: _do_cmd+1B2j
		test	eax, eax
		jz	loc_105A
		mov	ecx, offset ??_C@_03MDONDFG@bye?$AA@ ; `string'
		mov	eax, edx

loc_C28:				; CODE XREF: _do_cmd+1E2j
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_C48
		test	bl, bl
		jz	short loc_C44
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_C48
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_C28

loc_C44:				; CODE XREF: _do_cmd+1D0j
		xor	eax, eax
		jmp	short loc_C4D
; ---------------------------------------------------------------------------

loc_C48:				; CODE XREF: _do_cmd+1CCj _do_cmd+1D8j
		sbb	eax, eax
		or	eax, 1

loc_C4D:				; CODE XREF: _do_cmd+1E6j
		test	eax, eax
		jz	loc_105A
		mov	ecx, offset ??_C@_0BH@HLMIEIJD@list?9standard?9commands?$AA@ ; "list-standard-commands"
		mov	eax, edx
		nop	dword ptr [eax+00h]

loc_C60:				; CODE XREF: _do_cmd+21Aj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_C80
		test	bl, bl
		jz	short loc_C7C
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_C80
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_C60

loc_C7C:				; CODE XREF: _do_cmd+208j
		xor	eax, eax
		jmp	short loc_C85
; ---------------------------------------------------------------------------

loc_C80:				; CODE XREF: _do_cmd+204j _do_cmd+210j
		sbb	eax, eax
		or	eax, 1

loc_C85:				; CODE XREF: _do_cmd+21Ej
		test	eax, eax
		jz	loc_E84
		mov	ecx, offset ??_C@_0BN@CJIDHFPI@list?9message?9digest?9commands?$AA@ ; "list-message-digest-commands"
		mov	eax, edx

loc_C94:				; CODE XREF: _do_cmd+24Ej
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_CB4
		test	bl, bl
		jz	short loc_CB0
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_CB4
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_C94

loc_CB0:				; CODE XREF: _do_cmd+23Cj
		xor	eax, eax
		jmp	short loc_CB9
; ---------------------------------------------------------------------------

loc_CB4:				; CODE XREF: _do_cmd+238j _do_cmd+244j
		sbb	eax, eax
		or	eax, 1

loc_CB9:				; CODE XREF: _do_cmd+252j
		test	eax, eax
		jz	loc_E84
		mov	ecx, offset ??_C@_0BP@HAIMMLBF@list?9message?9digest?9algorithms?$AA@ ;	"list-message-digest-algorithms"
		mov	eax, edx

loc_CC8:				; CODE XREF: _do_cmd+282j
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_CE8
		test	bl, bl
		jz	short loc_CE4
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_CE8
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_CC8

loc_CE4:				; CODE XREF: _do_cmd+270j
		xor	eax, eax
		jmp	short loc_CED
; ---------------------------------------------------------------------------

loc_CE8:				; CODE XREF: _do_cmd+26Cj _do_cmd+278j
		sbb	eax, eax
		or	eax, 1

loc_CED:				; CODE XREF: _do_cmd+286j
		test	eax, eax
		jz	loc_E84
		mov	ecx, offset ??_C@_0BF@CICLLHFG@list?9cipher?9commands?$AA@ ; "list-cipher-commands"
		mov	eax, edx
		nop	dword ptr [eax+00h]

loc_D00:				; CODE XREF: _do_cmd+2BAj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_D20
		test	bl, bl
		jz	short loc_D1C
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_D20
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_D00

loc_D1C:				; CODE XREF: _do_cmd+2A8j
		xor	eax, eax
		jmp	short loc_D25
; ---------------------------------------------------------------------------

loc_D20:				; CODE XREF: _do_cmd+2A4j _do_cmd+2B0j
		sbb	eax, eax
		or	eax, 1

loc_D25:				; CODE XREF: _do_cmd+2BEj
		test	eax, eax
		jz	loc_E84
		mov	ecx, offset ??_C@_0BH@DFGCPIEG@list?9cipher?9algorithms?$AA@ ; "list-cipher-algorithms"
		mov	eax, edx

loc_D34:				; CODE XREF: _do_cmd+2EEj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_D54
		test	bl, bl
		jz	short loc_D50
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_D54
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_D34

loc_D50:				; CODE XREF: _do_cmd+2DCj
		xor	eax, eax
		jmp	short loc_D59
; ---------------------------------------------------------------------------

loc_D54:				; CODE XREF: _do_cmd+2D8j _do_cmd+2E4j
		sbb	eax, eax
		or	eax, 1

loc_D59:				; CODE XREF: _do_cmd+2F2j
		test	eax, eax
		jz	loc_E84
		mov	ecx, offset ??_C@_0BL@DHINNCNP@list?9public?9key?9algorithms?$AA@ ; "list-public-key-algorithms"
		mov	eax, edx

loc_D68:				; CODE XREF: _do_cmd+322j
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_D88
		test	bl, bl
		jz	short loc_D84
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_D88
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_D68

loc_D84:				; CODE XREF: _do_cmd+310j
		xor	eax, eax
		jmp	short loc_D8D
; ---------------------------------------------------------------------------

loc_D88:				; CODE XREF: _do_cmd+30Cj _do_cmd+318j
		sbb	eax, eax
		or	eax, 1

loc_D8D:				; CODE XREF: _do_cmd+326j
		test	eax, eax
		jz	loc_E84
		push	edx
		push	offset ??_C@_0CM@FKICDIKK@openssl?3Error?3?5?8?$CFs?8?5is?5an?5invali@ ; "openssl:Error: '%s' is an invalid comma"...
		push	ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@COOOCHPJ@?6Standard?5commands?$AA@ ; "\nStandard commands"
		push	ds:_bio_err
		call	_BIO_printf
		xor	ebx, ebx
		add	esp, 14h
		xor	esi, esi
		mov	edi, offset _functions
		cmp	off_4, ebx
		jz	loc_E68
		xchg	ax, ax

loc_DD0:				; CODE XREF: _do_cmd+402j
		mov	eax, esi
		xor	ecx, ecx
		and	eax, 80000003h
		jns	short loc_DE0
		dec	eax
		or	eax, 0FFFFFFFCh
		inc	eax

loc_DE0:				; CODE XREF: _do_cmd+379j
		inc	esi
		test	eax, eax
		jnz	short loc_DFD
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	ecx, 1

loc_DFD:				; CODE XREF: _do_cmd+383j
		mov	eax, [edi]
		cmp	eax, ebx
		jz	short loc_E45
		mov	ebx, eax
		test	ecx, ecx
		jnz	short loc_E1C
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_E1C:				; CODE XREF: _do_cmd+3A7j
		cmp	ebx, 2
		jnz	short loc_E28
		push	offset ??_C@_0EE@JBGNFJJM@?6Message?5Digest?5commands?5?$CIsee?5th@ ; "\nMessage Digest	commands (see the `dgs"...
		jmp	short loc_E32
; ---------------------------------------------------------------------------

loc_E28:				; CODE XREF: _do_cmd+3BFj
		cmp	ebx, 3
		jnz	short loc_E45
		push	offset ??_C@_0DL@FNLPEHCM@?6Cipher?5commands?5?$CIsee?5the?5?$GAenc?8?5@ ; "\nCipher commands (see the `enc' comman"...

loc_E32:				; CODE XREF: _do_cmd+3C6j
		push	ds:_bio_err
		mov	esi, 1
		call	_BIO_printf
		add	esp, 8

loc_E45:				; CODE XREF: _do_cmd+3A1j _do_cmd+3CBj
		push	dword ptr [edi+4]
		push	offset ??_C@_05EGPACALF@?$CF?918s?$AA@ ; "%-18s"
		push	ds:_bio_err
		call	_BIO_printf
		add	edi, 0Ch
		add	esp, 0Ch
		cmp	dword ptr [edi+4], 0
		jnz	loc_DD0

loc_E68:				; CODE XREF: _do_cmd+368j
		push	offset ??_C@_02PHMGELLB@?6?6?$AA@ ; `string'
		push	ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		xor	eax, eax

$end$130:
		pop	ebx
		pop	edi
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_E84:				; CODE XREF: _do_cmd+227j _do_cmd+25Bj ...
		mov	ecx, offset ??_C@_0BH@HLMIEIJD@list?9standard?9commands?$AA@ ; "list-standard-commands"
		mov	eax, edx
		nop	dword ptr [eax+eax+00h]

loc_E90:				; CODE XREF: _do_cmd+44Aj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_EB0
		test	bl, bl
		jz	short loc_EAC
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_EB0
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_E90

loc_EAC:				; CODE XREF: _do_cmd+438j
		xor	eax, eax
		jmp	short loc_EB5
; ---------------------------------------------------------------------------

loc_EB0:				; CODE XREF: _do_cmd+434j _do_cmd+440j
		sbb	eax, eax
		or	eax, 1

loc_EB5:				; CODE XREF: _do_cmd+44Ej
		test	eax, eax
		jnz	short loc_EC1
		lea	edi, [eax+1]
		jmp	loc_F9C
; ---------------------------------------------------------------------------

loc_EC1:				; CODE XREF: _do_cmd+457j
		mov	ecx, offset ??_C@_0BN@CJIDHFPI@list?9message?9digest?9commands?$AA@ ; "list-message-digest-commands"
		mov	eax, edx

loc_EC8:				; CODE XREF: _do_cmd+482j
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_EE8
		test	bl, bl
		jz	short loc_EE4
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_EE8
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_EC8

loc_EE4:				; CODE XREF: _do_cmd+470j
		xor	eax, eax
		jmp	short loc_EED
; ---------------------------------------------------------------------------

loc_EE8:				; CODE XREF: _do_cmd+46Cj _do_cmd+478j
		sbb	eax, eax
		or	eax, 1

loc_EED:				; CODE XREF: _do_cmd+486j
		test	eax, eax
		jnz	short loc_EF9
		lea	edi, [eax+2]
		jmp	loc_F9C
; ---------------------------------------------------------------------------

loc_EF9:				; CODE XREF: _do_cmd+48Fj
		mov	ecx, offset ??_C@_0BP@HAIMMLBF@list?9message?9digest?9algorithms?$AA@ ;	"list-message-digest-algorithms"
		mov	eax, edx

loc_F00:				; CODE XREF: _do_cmd+4BAj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_F20
		test	bl, bl
		jz	short loc_F1C
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_F20
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_F00

loc_F1C:				; CODE XREF: _do_cmd+4A8j
		xor	eax, eax
		jmp	short loc_F25
; ---------------------------------------------------------------------------

loc_F20:				; CODE XREF: _do_cmd+4A4j _do_cmd+4B0j
		sbb	eax, eax
		or	eax, 1

loc_F25:				; CODE XREF: _do_cmd+4BEj
		test	eax, eax
		jnz	short loc_F2E
		lea	edi, [eax+5]
		jmp	short loc_F9C
; ---------------------------------------------------------------------------

loc_F2E:				; CODE XREF: _do_cmd+4C7j
		mov	ecx, offset ??_C@_0BL@DHINNCNP@list?9public?9key?9algorithms?$AA@ ; "list-public-key-algorithms"
		mov	eax, edx

loc_F35:				; CODE XREF: _do_cmd+4EFj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_F55
		test	bl, bl
		jz	short loc_F51
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_F55
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_F35

loc_F51:				; CODE XREF: _do_cmd+4DDj
		xor	eax, eax
		jmp	short loc_F5A
; ---------------------------------------------------------------------------

loc_F55:				; CODE XREF: _do_cmd+4D9j _do_cmd+4E5j
		sbb	eax, eax
		or	eax, 1

loc_F5A:				; CODE XREF: _do_cmd+4F3j
		test	eax, eax
		jnz	short loc_F63
		lea	edi, [eax+4]
		jmp	short loc_F9C
; ---------------------------------------------------------------------------

loc_F63:				; CODE XREF: _do_cmd+4FCj
		mov	eax, offset ??_C@_0BH@DFGCPIEG@list?9cipher?9algorithms?$AA@ ; "list-cipher-algorithms"

loc_F68:				; CODE XREF: _do_cmd+522j
		mov	cl, [edx]
		cmp	cl, [eax]
		jnz	short loc_F88
		test	cl, cl
		jz	short loc_F84
		mov	cl, [edx+1]
		cmp	cl, [eax+1]
		jnz	short loc_F88
		add	edx, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_F68

loc_F84:				; CODE XREF: _do_cmd+510j
		xor	eax, eax
		jmp	short loc_F8D
; ---------------------------------------------------------------------------

loc_F88:				; CODE XREF: _do_cmd+50Cj _do_cmd+518j
		sbb	eax, eax
		or	eax, 1

loc_F8D:				; CODE XREF: _do_cmd+526j
		test	eax, eax
		mov	edi, 3
		mov	ecx, 6
		cmovz	edi, ecx

loc_F9C:				; CODE XREF: _do_cmd+45Cj _do_cmd+494j ...
		push	0
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		push	0
		push	ds:_bio_err
		mov	ebx, eax
		call	_load_config
		add	esp, 10h
		test	eax, eax
		jz	loc_104E
		cmp	edi, 4
		jnz	short loc_1014
		push	ebx
		call	_list_pkey
		add	esp, 4

loc_FD7:				; CODE XREF: _do_cmd+5C7j _do_cmd+5CCj
		cmp	off_4, 0
		jz	short loc_1002
		mov	esi, offset off_4

loc_FE5:				; CODE XREF: _do_cmd+5A0j
		cmp	[esi-4], edi
		jnz	short loc_FFA
		push	dword ptr [esi]
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		push	ebx
		call	_BIO_printf
		add	esp, 0Ch

loc_FFA:				; CODE XREF: _do_cmd+588j
		add	esi, 0Ch
		cmp	dword ptr [esi], 0
		jnz	short loc_FE5

loc_1002:				; CODE XREF: _do_cmd+57Ej
		push	ebx
		call	_BIO_free_all
		add	esp, 4
		xor	eax, eax
		pop	ebx
		pop	edi
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_1014:				; CODE XREF: _do_cmd+56Cj
		cmp	edi, 5
		jnz	short loc_1029
		push	ebx
		push	offset _list_md_fn
		call	_EVP_MD_do_all_sorted
		add	esp, 8
		jmp	short loc_FD7
; ---------------------------------------------------------------------------

loc_1029:				; CODE XREF: _do_cmd+5B7j
		cmp	edi, 6
		jnz	short loc_FD7
		push	ebx
		push	offset _list_cipher_fn
		call	_EVP_CIPHER_do_all_sorted
		add	esp, 8
		push	ebx
		call	_BIO_free_all
		add	esp, 4
		xor	eax, eax
		pop	ebx
		pop	edi
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_104E:				; CODE XREF: _do_cmd+563j
		pop	ebx
		pop	edi
		mov	eax, 1
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_105A:				; CODE XREF: _do_cmd+14Cj _do_cmd+187j ...
		pop	ebx
		pop	edi
		or	eax, 0FFFFFFFFh
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_1064:				; CODE XREF: _do_cmd+12j _do_cmd+20j
		pop	edi
		xor	eax, eax
		pop	esi
		add	esp, 0Ch
		retn
_do_cmd		endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 106Ch
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int fprintf(FILE *File, const	char *Format, ...)
		public _fprintf
_fprintf	proc near		; CODE XREF: _lock_dbg_cb+A3p
					; _main+131p

File		= dword	ptr  4
Format		= dword	ptr  8
arg_8		= byte ptr  0Ch

		lea	eax, [esp+arg_8]
		push	eax
		push	0
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
_fprintf	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1090h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_function_LHASH_COMP proc near		; DATA XREF: _prog_init+2Do

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		push	8		; MaxCount
		push	dword ptr [eax+4] ; Str2
		mov	eax, [esp+8+arg_0]
		push	dword ptr [eax+4] ; Str1
		call	dword ptr ds:__imp__strncmp
		add	esp, 0Ch
		retn
_function_LHASH_COMP endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_function_LHASH_HASH proc near		; DATA XREF: _prog_init+32o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		push	dword ptr [eax+4]
		call	_lh_strhash
		add	esp, 4
		retn
_function_LHASH_HASH endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_function_cmp	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		push	8		; MaxCount
		push	dword ptr [eax+4] ; Str2
		mov	eax, [esp+8+arg_0]
		push	dword ptr [eax+4] ; Str1
		call	dword ptr ds:__imp__strncmp
		add	esp, 0Ch
		retn
_function_cmp	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10D8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_function_hash	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		push	dword ptr [eax+4]
		call	_lh_strhash
		add	esp, 4
		retn
_function_hash	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10E8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_list_cipher	proc near

arg_0		= dword	ptr  4

		push	[esp+arg_0]
		push	offset _list_cipher_fn
		call	_EVP_CIPHER_do_all_sorted
		add	esp, 8
		retn
_list_cipher	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10FCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_list_cipher_fn	proc near		; DATA XREF: _do_cmd+5CFo
					; _list_cipher+4o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, [esp+arg_0]
		test	eax, eax
		jz	short loc_1123
		push	eax
		call	_EVP_CIPHER_nid
		push	eax
		call	_OBJ_nid2sn
		push	eax
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		push	[esp+10h+arg_C]
		call	_BIO_printf
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_1123:				; CODE XREF: _list_cipher_fn+6j
		mov	eax, [esp+arg_4]
		mov	edx, offset ??_C@_0M@KPKKGHMB@?$DMundefined?$DO?$AA@ ; "<undefined>"
		test	eax, eax
		mov	ecx, edx
		cmovnz	ecx, eax
		mov	eax, [esp+arg_8]
		test	eax, eax
		cmovnz	edx, eax
		push	edx
		push	ecx
		push	offset ??_C@_09IIOICOJP@?$CFs?5?$DN?$DO?5?$CFs?6?$AA@ ;	"%s => %s\n"
		push	[esp+0Ch+arg_C]
		call	_BIO_printf
		add	esp, 10h
		retn
_list_cipher_fn	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1150h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_list_md	proc near

arg_0		= dword	ptr  4

		push	[esp+arg_0]
		push	offset _list_md_fn
		call	_EVP_MD_do_all_sorted
		add	esp, 8
		retn
_list_md	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1164h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_list_md_fn	proc near		; DATA XREF: _do_cmd+5BAo _list_md+4o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, [esp+arg_0]
		test	eax, eax
		jz	short loc_118B
		push	eax
		call	_EVP_MD_type
		push	eax
		call	_OBJ_nid2sn
		push	eax
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		push	[esp+10h+arg_C]
		call	_BIO_printf
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_118B:				; CODE XREF: _list_md_fn+6j
		mov	eax, [esp+arg_4]
		mov	edx, offset ??_C@_0M@KPKKGHMB@?$DMundefined?$DO?$AA@ ; "<undefined>"
		test	eax, eax
		mov	ecx, edx
		cmovnz	ecx, eax
		mov	eax, [esp+arg_8]
		test	eax, eax
		cmovnz	edx, eax
		push	edx
		push	ecx
		push	offset ??_C@_09IIOICOJP@?$CFs?5?$DN?$DO?5?$CFs?6?$AA@ ;	"%s => %s\n"
		push	[esp+0Ch+arg_C]
		call	_BIO_printf
		add	esp, 10h
		retn
_list_md_fn	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 11B8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_list_pkey	proc near		; CODE XREF: _do_cmd+56Fp

var_14		= byte ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 14h
		call	__chkstk
		push	esi
		xor	esi, esi
		call	_EVP_PKEY_asn1_get_count
		test	eax, eax
		jle	loc_12A9
		push	ebx
		push	edi
		mov	edi, [esp+20h+arg_0]
		mov	ebx, offset ??_C@_07GECJFPBJ@Builtin?$AA@ ; "Builtin"

loc_11DD:				; CODE XREF: _list_pkey+E9j
		push	esi
		call	_EVP_PKEY_asn1_get0
		push	eax
		lea	eax, [esp+28h+var_C]
		push	eax
		lea	eax, [esp+2Ch+var_4]
		push	eax
		lea	eax, [esp+30h+var_14]
		push	eax
		lea	eax, [esp+34h+var_8]
		push	eax
		lea	eax, [esp+38h+var_10]
		push	eax
		call	_EVP_PKEY_asn1_get0_info
		add	esp, 1Ch
		test	[esp+20h+var_14], 1
		jz	short loc_123B
		push	[esp+20h+var_10]
		call	_OBJ_nid2ln
		push	eax
		push	offset ??_C@_09BKOKIJBF@Name?3?5?$CFs?6?$AA@ ; "Name: %s\n"
		push	edi
		call	_BIO_printf
		push	[esp+30h+var_8]
		call	_OBJ_nid2ln
		push	eax
		push	offset ??_C@_0BE@LMOINBDA@?7Type?3?5Alias?5to?5?$CFs?6?$AA@ ; "\tType: Alias to	%s\n"
		push	edi
		call	_BIO_printf
		add	esp, 20h
		jmp	short loc_1299
; ---------------------------------------------------------------------------

loc_123B:				; CODE XREF: _list_pkey+52j
		push	[esp+20h+var_4]
		push	offset ??_C@_09BKOKIJBF@Name?3?5?$CFs?6?$AA@ ; "Name: %s\n"
		push	edi
		call	_BIO_printf
		test	[esp+2Ch+var_14], 2
		mov	eax, offset ??_C@_08GKOOPLMO@External?$AA@ ; "External"
		cmovz	eax, ebx
		push	eax
		push	offset ??_C@_0BF@FNPAJFKA@?7Type?3?5?$CFs?5Algorithm?6?$AA@ ; "\tType: %s Algorithm\n"
		push	edi
		call	_BIO_printf
		push	[esp+38h+var_10]
		call	_OBJ_nid2ln
		push	eax
		push	offset ??_C@_09DIEJJCHJ@?7OID?3?5?$CFs?6?$AA@ ;	"\tOID:	%s\n"
		push	edi
		call	_BIO_printf
		mov	eax, [esp+48h+var_C]
		mov	ecx, offset ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@ ; "(none)"
		test	eax, eax
		cmovnz	ecx, eax
		push	ecx
		push	offset ??_C@_0BB@OIAJPBNP@?7PEM?5string?3?5?$CFs?6?$AA@	; "\tPEM string: %s\n"
		push	edi
		mov	[esp+54h+var_C], ecx
		call	_BIO_printf
		add	esp, 34h

loc_1299:				; CODE XREF: _list_pkey+81j
		inc	esi
		call	_EVP_PKEY_asn1_get_count
		cmp	esi, eax
		jl	loc_11DD
		pop	edi
		pop	ebx

loc_12A9:				; CODE XREF: _list_pkey+14j
		pop	esi
		add	esp, 14h
		retn
_list_pkey	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 12B0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_lock_dbg_cb	proc near		; DATA XREF: _main+10Co

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	edx, [esp+arg_4]
		xor	eax, eax
		push	ebx
		mov	ebx, [esp+4+arg_0]
		mov	ecx, ebx
		and	ecx, 0Ch
		push	esi
		cmp	ecx, 4
		jz	short loc_12D2
		cmp	ecx, 8
		jz	short loc_12D2

loc_12CB:				; CODE XREF: _lock_dbg_cb+49j
		mov	eax, offset ??_C@_0N@MICJCNHE@invalid?5mode?$AA@ ; "invalid mode"
		jmp	short loc_1337
; ---------------------------------------------------------------------------

loc_12D2:				; CODE XREF: _lock_dbg_cb+14j
					; _lock_dbg_cb+19j
		cmp	edx, 28h ; '('
		ja	short loc_1332
		test	bl, 1
		jz	short loc_12F6
		cmp	ds:?modes@?1??lock_dbg_cb@@9@9[edx*4], eax ; `lock_dbg_cb'::`2'::modes
		jz	short loc_12EC
		mov	eax, offset ??_C@_0P@DLDEBFAD@already?5locked?$AA@ ; "already locked"
		jmp	short loc_1337
; ---------------------------------------------------------------------------

loc_12EC:				; CODE XREF: _lock_dbg_cb+33j
		pop	esi
		mov	ds:?modes@?1??lock_dbg_cb@@9@9[edx*4], ecx ; `lock_dbg_cb'::`2'::modes
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_12F6:				; CODE XREF: _lock_dbg_cb+2Aj
		test	bl, 2
		jz	short loc_12CB
		mov	esi, ds:?modes@?1??lock_dbg_cb@@9@9[edx*4] ; `lock_dbg_cb'::`2'::modes
		test	esi, esi
		jnz	short loc_130D
		mov	eax, offset ??_C@_0L@CKIDBNLG@not?5locked?$AA@ ; "not locked"
		jmp	short loc_1337
; ---------------------------------------------------------------------------

loc_130D:				; CODE XREF: _lock_dbg_cb+54j
		cmp	esi, ecx
		jz	short loc_1321
		cmp	ecx, 4
		mov	eax, offset ??_C@_0BO@MEMMBFGL@CRYPTO_r_unlock?5on?5write?5lock?$AA@ ; "CRYPTO_r_unlock	on write lock"
		mov	esi, offset ??_C@_0BN@LHOFANHL@CRYPTO_w_unlock?5on?5read?5lock?$AA@ ; "CRYPTO_w_unlock on read lock"
		cmovnz	eax, esi

loc_1321:				; CODE XREF: _lock_dbg_cb+5Fj
		mov	ds:?modes@?1??lock_dbg_cb@@9@9[edx*4], 0 ; `lock_dbg_cb'::`2'::modes

$err$16:
		test	eax, eax
		jz	short loc_135B
		jmp	short loc_1337
; ---------------------------------------------------------------------------

loc_1332:				; CODE XREF: _lock_dbg_cb+25j
		mov	eax, offset ??_C@_0BD@EEHOPEAJ@type?5out?5of?5bounds?$AA@ ; "type out of bounds"

loc_1337:				; CODE XREF: _lock_dbg_cb+20j
					; _lock_dbg_cb+3Aj ...
		push	[esp+8+arg_C]
		push	[esp+0Ch+arg_8]
		push	edx
		push	ebx
		push	eax
		push	offset ??_C@_0DH@MDGCFGCO@openssl?5?$CIlock_dbg_cb?$CJ?3?5?$CFs?5?$CImode?$DN@ ; "openssl (lock_dbg_cb): %s (mode=%d, typ"...
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 1Ch

loc_135B:				; CODE XREF: _lock_dbg_cb+7Ej
		pop	esi
		pop	ebx
		retn
_lock_dbg_cb	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1360h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public _main
_main		proc near

var_45C		= dword	ptr -45Ch
var_458		= dword	ptr -458h
var_454		= dword	ptr -454h
var_450		= dword	ptr -450h
var_44C		= dword	ptr -44Ch
var_444		= dword	ptr -444h
var_440		= dword	ptr -440h
var_43C		= byte ptr -43Ch
var_438		= dword	ptr -438h
var_430		= byte ptr -430h
Buf		= byte ptr -40Ch
var_4		= dword	ptr -4
argc		= dword	ptr  4
argv		= dword	ptr  8
envp		= dword	ptr  0Ch

		mov	eax, 454h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+454h+var_4], eax
		cmp	ds:_bio_err, 0
		push	ebx
		mov	ebx, [esp+458h+argv]
		push	ebp
		mov	ebp, dword ptr ds:__imp____acrt_iob_func
		push	esi
		push	edi
		mov	[esp+464h+var_44C], 0
		mov	[esp+464h+var_444], 0
		mov	[esp+464h+var_440], 0
		jnz	short loc_13D8
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	ds:_bio_err, eax
		test	eax, eax
		jz	short loc_13D8
		push	2
		call	ebp ; __imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	ds:_bio_err
		call	_BIO_ctrl
		add	esp, 14h

loc_13D8:				; CODE XREF: _main+48j	_main+5Fj
		mov	edi, dword ptr ds:__imp__getenv
		push	offset ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@ ; "OPENSSL_DEBUG_MEMORY"
		call	edi ; __imp__getenv
		add	esp, 4
		test	eax, eax
		jz	short loc_1465
		push	offset ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@ ; "OPENSSL_DEBUG_MEMORY"
		mov	esi, offset ??_C@_03MCADLMAF@off?$AA@ ;	`string'
		call	edi ; __imp__getenv
		add	esp, 4
		nop	dword ptr [eax+eax+00h]

loc_1400:				; CODE XREF: _main+BAj
		mov	cl, [eax]
		cmp	cl, [esi]
		jnz	short loc_1420
		test	cl, cl
		jz	short loc_141C
		mov	cl, [eax+1]
		cmp	cl, [esi+1]
		jnz	short loc_1420
		add	eax, 2
		add	esi, 2
		test	cl, cl
		jnz	short loc_1400

loc_141C:				; CODE XREF: _main+A8j
		xor	eax, eax
		jmp	short loc_1425
; ---------------------------------------------------------------------------

loc_1420:				; CODE XREF: _main+A4j	_main+B0j
		sbb	eax, eax
		or	eax, 1

loc_1425:				; CODE XREF: _main+BEj
		test	eax, eax
		jz	short loc_1453
		push	offset _CRYPTO_dbg_get_options
		push	offset _CRYPTO_dbg_set_options
		push	offset _CRYPTO_dbg_free
		push	offset _CRYPTO_dbg_realloc
		push	offset _CRYPTO_dbg_malloc
		call	_CRYPTO_set_mem_debug_functions
		push	3
		call	_CRYPTO_set_mem_debug_options
		add	esp, 18h
		jmp	short loc_1465
; ---------------------------------------------------------------------------

loc_1453:				; CODE XREF: _main+C7j
		push	0
		push	0
		push	0
		push	0
		push	0
		call	_CRYPTO_set_mem_debug_functions
		add	esp, 14h

loc_1465:				; CODE XREF: _main+8Aj	_main+F1j
		push	1
		call	_CRYPTO_mem_ctrl
		push	offset _lock_dbg_cb
		call	_CRYPTO_set_locking_callback
		push	offset ??_C@_0N@FDOBJDJB@OPENSSL_FIPS?$AA@ ; "OPENSSL_FIPS"
		call	edi ; __imp__getenv
		add	esp, 0Ch
		test	eax, eax
		jz	short $LN87
		push	offset ??_C@_0BK@FHHMPOAK@FIPS?5mode?5not?5supported?4?6?$AA@ ;	"FIPS mode not supported.\n"
		push	2
		call	ebp ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------

$LN87:					; CODE XREF: _main+122j
		push	dword ptr ds:__imp__free
		push	dword ptr ds:__imp__realloc
		push	dword ptr ds:__imp__malloc
		call	_CRYPTO_set_mem_functions
		call	_ERR_load_crypto_strings
		call	_OPENSSL_add_all_algorithms_noconf
		call	_ENGINE_load_builtin_engines
		call	_setup_ui_method
		push	offset ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@ ; "OPENSSL_CONF"
		call	edi ; __imp__getenv
		mov	esi, eax
		add	esp, 10h
		test	esi, esi
		jnz	short loc_14F7
		push	offset ??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@ ; "SSLEAY_CONF"
		call	edi ; __imp__getenv
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_14F7
		call	_make_config_name
		mov	[esp+464h+var_44C], eax
		mov	esi, eax

loc_14F7:				; CODE XREF: _main+17Aj _main+18Aj
		push	0
		mov	ds:_default_config_file, esi
		call	_NCONF_new
		lea	ecx, [esp+468h+var_43C]
		mov	ds:_config, eax
		push	ecx
		push	esi
		push	eax
		call	_NCONF_load
		add	esp, 10h
		test	eax, eax
		jnz	short loc_1559
		call	_ERR_peek_last_error
		and	eax, 0FFFh
		cmp	eax, 72h ; 'r'
		jnz	short loc_15A9
		push	esi
		push	offset ??_C@_0CF@MJDHKIAL@WARNING?3?5can?8t?5open?5config?5file?3@ ; "WARNING: can't open config file: %s\n"
		push	ds:_bio_err
		call	_BIO_printf
		call	_ERR_clear_error
		push	ds:_config
		call	_NCONF_free
		add	esp, 10h
		mov	ds:_config, 0

loc_1559:				; CODE XREF: _main+1BAj
		call	_prog_init
		mov	esi, eax
		lea	eax, [esp+38h]
		push	28h ; '('
		push	eax
		push	dword ptr [ebx]
		mov	[esp+470h+var_454], esi
		call	_program_name
		lea	eax, [esp+44h]
		mov	[esp+3Ch], eax
		lea	eax, [esp+470h+var_438]
		push	eax
		push	esi
		call	_lh_retrieve
		add	esp, 14h
		test	eax, eax
		jz	short $LN88
		lea	ecx, [esp+38h]
		push	ebx
		push	[esp+468h+argc]
		mov	[ebx], ecx
		mov	eax, [eax+8]
		call	eax
		add	esp, 8
		mov	ebx, eax
		jmp	$end$90
; ---------------------------------------------------------------------------

loc_15A9:				; CODE XREF: _main+1C9j
		push	ds:_bio_err
		call	_ERR_print_errors
		push	ds:_config
		call	_NCONF_free
		add	esp, 8
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------

$LN88:					; CODE XREF: _main+22Aj
		mov	ecx, [esp+464h+argc]
		cmp	ecx, 1
		jz	short loc_15F6
		lea	eax, [ebx+4]
		push	eax
		lea	eax, [ecx-1]
		push	eax
		push	esi
		call	_do_cmd
		mov	ebx, eax
		add	esp, 0Ch
		test	ebx, ebx
		jns	$end$90
		jmp	loc_16FD
; ---------------------------------------------------------------------------

loc_15F6:				; CODE XREF: _main+274j _main+376j
		lea	edi, [esp+60h]
		mov	ebx, 400h
		xor	eax, eax

loc_1601:				; CODE XREF: _main+30Cj
		test	eax, eax
		mov	byte ptr [edi],	0
		mov	ecx, offset ??_C@_09FPPPFFOJ@OpenSSL?$DO?5?$AA@	; "OpenSSL> "
		mov	esi, offset ??_C@_01PPODPGHN@?$DO?$AA@ ; `string'
		push	1
		cmovz	esi, ecx
		call	ebp ; __imp____acrt_iob_func
		push	eax		; File
		push	esi		; Str
		call	dword ptr ds:__imp__fputs
		push	1
		call	ebp ; __imp____acrt_iob_func
		push	eax		; File
		call	dword ptr ds:__imp__fflush
		push	0
		call	ebp ; __imp____acrt_iob_func
		push	eax		; File
		push	ebx		; MaxCount
		push	edi		; Buf
		call	dword ptr ds:__imp__fgets
		add	esp, 24h
		test	eax, eax
		jz	loc_16F9
		cmp	byte ptr [edi],	0
		jz	loc_16F9
		mov	eax, edi
		lea	edx, [eax+1]

loc_1650:				; CODE XREF: _main+2F5j
		mov	cl, [eax]
		inc	eax
		test	cl, cl
		jnz	short loc_1650
		sub	eax, edx
		cmp	eax, 1
		jle	short loc_166E
		cmp	byte ptr [eax+edi-2], 5Ch ; '\'
		jnz	short loc_166E
		sub	eax, 2
		add	edi, eax
		sub	ebx, eax
		jmp	short loc_1601
; ---------------------------------------------------------------------------

loc_166E:				; CODE XREF: _main+2FCj _main+303j
		lea	eax, [esp+464h+var_450]
		push	eax
		lea	eax, [esp+20h]
		push	eax
		lea	eax, [esp+68h]
		push	eax
		lea	eax, [esp+470h+var_444]
		push	eax
		call	_chopup_args
		add	esp, 10h
		test	eax, eax
		jz	short loc_16DB
		push	[esp+464h+var_450]
		mov	esi, [esp+468h+var_454]
		push	dword ptr [esp+20h]
		push	esi
		call	_do_cmd
		add	esp, 0Ch
		test	eax, eax
		js	short loc_16FD
		jz	short loc_16C2
		mov	eax, [esp+464h+var_450]
		push	dword ptr [eax]
		push	offset ??_C@_0N@FMACNLAG@error?5in?5?$CFs?6?$AA@ ; "error in %s\n"
		push	ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

loc_16C2:				; CODE XREF: _main+347j
		push	0
		push	0
		push	0Bh
		push	ds:_bio_err
		call	_BIO_ctrl
		add	esp, 10h
		jmp	loc_15F6
; ---------------------------------------------------------------------------

loc_16DB:				; CODE XREF: _main+32Cj
		push	offset ??_C@_09GHMBOEJG@bad?5exit?6?$AA@ ; "bad	exit\n"
		push	ds:_bio_err
		call	_BIO_printf
		mov	esi, [esp+46Ch+var_454]
		add	esp, 8
		mov	ebx, 1
		jmp	short $end$90
; ---------------------------------------------------------------------------

loc_16F9:				; CODE XREF: _main+2DCj _main+2E5j
		mov	esi, [esp+464h+var_454]

loc_16FD:				; CODE XREF: _main+291j _main+345j
		xor	ebx, ebx

$end$90:				; CODE XREF: _main+244j _main+28Bj ...
		mov	eax, [esp+464h+var_44C]
		test	eax, eax
		jz	short loc_1710
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_1710:				; CODE XREF: _main+3A5j
		mov	eax, ds:_config
		test	eax, eax
		jz	short loc_172C
		push	eax
		call	_NCONF_free
		add	esp, 4
		mov	ds:_config, 0

loc_172C:				; CODE XREF: _main+3B7j
		test	esi, esi
		jz	short loc_1739
		push	esi
		call	_lh_free
		add	esp, 4

loc_1739:				; CODE XREF: _main+3CEj
		mov	eax, [esp+464h+var_444]
		test	eax, eax
		jz	short loc_174A
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_174A:				; CODE XREF: _main+3DFj
		push	1
		call	_CONF_modules_unload
		call	_destroy_ui_method
		call	_OBJ_cleanup
		call	_EVP_cleanup
		call	_ENGINE_cleanup
		call	_CRYPTO_cleanup_all_ex_data
		push	0
		call	_ERR_remove_thread_state
		call	_RAND_cleanup
		call	_ERR_free_strings
		call	_COMP_zlib_cleanup
		push	ds:_bio_err
		call	_CRYPTO_mem_leaks
		mov	eax, ds:_bio_err
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_17AA
		push	eax
		call	_BIO_free
		add	esp, 4
		mov	ds:_bio_err, 0

loc_17AA:				; CODE XREF: _main+435j
		push	ebx		; Code
		call	dword ptr ds:__imp__exit
_main		endp

; ---------------------------------------------------------------------------
$LN89		db 0CCh
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 17B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_prog_init	proc near		; CODE XREF: _main:loc_1559p
		xor	ecx, ecx
		cmp	off_4, ecx
		jz	short loc_17CD
		mov	eax, offset off_4
		nop

loc_17C4:				; CODE XREF: _prog_init+17j
		lea	eax, [eax+0Ch]
		inc	ecx
		cmp	dword ptr [eax], 0
		jnz	short loc_17C4

loc_17CD:				; CODE XREF: _prog_init+8j
		push	edi
		push	offset _SortFnByName ; PtFuncCompare
		push	0Ch		; SizeOfElements
		push	ecx		; NumOfElements
		push	offset _functions ; Base
		call	dword ptr ds:__imp__qsort
		push	offset _function_LHASH_COMP
		push	offset _function_LHASH_HASH
		call	_lh_new
		mov	edi, eax
		add	esp, 18h
		test	edi, edi
		jnz	short loc_17FB
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_17FB:				; CODE XREF: _prog_init+43j
		cmp	off_4, 0
		push	esi
		mov	esi, offset _functions
		jz	short loc_181D

loc_180A:				; CODE XREF: _prog_init+67j
		push	esi
		push	edi
		call	_lh_insert
		add	esi, 0Ch
		add	esp, 8
		cmp	dword ptr [esi+4], 0
		jnz	short loc_180A

loc_181D:				; CODE XREF: _prog_init+54j
		pop	esi
		mov	eax, edi
		pop	edi
		retn
_prog_init	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1824h
; COMDAT (pick any)
		public ??_C@_0N@MICJCNHE@invalid?5mode?$AA@
; `string'
??_C@_0N@MICJCNHE@invalid?5mode?$AA@ db	'invalid mode',0 ; DATA XREF: _lock_dbg_cb:loc_12CBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1834h
; COMDAT (pick any)
		public ??_C@_0BD@EEHOPEAJ@type?5out?5of?5bounds?$AA@
; `string'
??_C@_0BD@EEHOPEAJ@type?5out?5of?5bounds?$AA@ db 'type out of bounds',0
					; DATA XREF: _lock_dbg_cb:loc_1332o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1848h
; COMDAT (pick any)
		public ??_C@_0P@DLDEBFAD@already?5locked?$AA@
; `string'
??_C@_0P@DLDEBFAD@already?5locked?$AA@ db 'already locked',0 ; DATA XREF: _lock_dbg_cb+35o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1858h
; COMDAT (pick any)
		public ??_C@_0L@CKIDBNLG@not?5locked?$AA@
; `string'
??_C@_0L@CKIDBNLG@not?5locked?$AA@ db 'not locked',0 ; DATA XREF: _lock_dbg_cb+56o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1864h
; COMDAT (pick any)
		public ??_C@_0BO@MEMMBFGL@CRYPTO_r_unlock?5on?5write?5lock?$AA@
; `string'
??_C@_0BO@MEMMBFGL@CRYPTO_r_unlock?5on?5write?5lock?$AA@ db 'CRYPTO_r_unlock on write lock',0
					; DATA XREF: _lock_dbg_cb+64o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1884h
; COMDAT (pick any)
		public ??_C@_0BN@LHOFANHL@CRYPTO_w_unlock?5on?5read?5lock?$AA@
; `string'
??_C@_0BN@LHOFANHL@CRYPTO_w_unlock?5on?5read?5lock?$AA@	db 'CRYPTO_w_unlock on read lock',0
					; DATA XREF: _lock_dbg_cb+69o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18A4h
; COMDAT (pick any)
		public ??_C@_0DH@MDGCFGCO@openssl?5?$CIlock_dbg_cb?$CJ?3?5?$CFs?5?$CImode?$DN@
; char `string'[]
??_C@_0DH@MDGCFGCO@openssl?5?$CIlock_dbg_cb?$CJ?3?5?$CFs?5?$CImode?$DN@	db 'openssl (lock_dbg_cb): %s (mode=%d, type=%d) at %s:%d',0Ah,0
					; DATA XREF: _lock_dbg_cb+92o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18DCh
; COMDAT (pick any)
		public ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@
; char `string'[]
??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@ db	'OPENSSL_DEBUG_MEMORY',0
					; DATA XREF: _main+7Eo	_main+8Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18F4h
; COMDAT (pick any)
		public ??_C@_03MCADLMAF@off?$AA@
; `string'
??_C@_03MCADLMAF@off?$AA@ dd 66666Fh	; DATA XREF: _main+91o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18F8h
; COMDAT (pick any)
		public ??_C@_0N@FDOBJDJB@OPENSSL_FIPS?$AA@
; char `string'[]
??_C@_0N@FDOBJDJB@OPENSSL_FIPS?$AA@ db 'OPENSSL_FIPS',0 ; DATA XREF: _main+116o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1908h
; COMDAT (pick any)
		public ??_C@_0BK@FHHMPOAK@FIPS?5mode?5not?5supported?4?6?$AA@
; char `string'[]
??_C@_0BK@FHHMPOAK@FIPS?5mode?5not?5supported?4?6?$AA@ db 'FIPS mode not supported.',0Ah,0
					; DATA XREF: _main+124o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1924h
; COMDAT (pick any)
		public ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
; char `string'[]
??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@ db 'OPENSSL_CONF',0 ; DATA XREF: _main+16Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1934h
; COMDAT (pick any)
		public ??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@
; char `string'[]
??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@ db 'SSLEAY_CONF',0 ; DATA XREF: _main+17Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1940h
; COMDAT (pick any)
		public ??_C@_0CF@MJDHKIAL@WARNING?3?5can?8t?5open?5config?5file?3@
; `string'
??_C@_0CF@MJDHKIAL@WARNING?3?5can?8t?5open?5config?5file?3@ db 'WARNING: can',27h,'t open config file: %s',0Ah,0
					; DATA XREF: _main+1CCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1968h
; COMDAT (pick any)
		public ??_C@_01PPODPGHN@?$DO?$AA@
; `string'
??_C@_01PPODPGHN@?$DO?$AA@ db 3Eh, 0	; DATA XREF: _main+2ABo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 196Ch
; COMDAT (pick any)
		public ??_C@_09FPPPFFOJ@OpenSSL?$DO?5?$AA@
; char `string'[]
??_C@_09FPPPFFOJ@OpenSSL?$DO?5?$AA@ db 'OpenSSL> ',0 ; DATA XREF: _main+2A6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1978h
; COMDAT (pick any)
		public ??_C@_0N@FMACNLAG@error?5in?5?$CFs?6?$AA@
; `string'
??_C@_0N@FMACNLAG@error?5in?5?$CFs?6?$AA@ db 'error in %s',0Ah,0 ; DATA XREF: _main+34Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1988h
; COMDAT (pick any)
		public ??_C@_09GHMBOEJG@bad?5exit?6?$AA@
; `string'
??_C@_09GHMBOEJG@bad?5exit?6?$AA@ db 'bad exit',0Ah,0 ; DATA XREF: _main:loc_16DBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1994h
; COMDAT (pick any)
		public ??_C@_03GGODHGCB@no?9?$AA@
; char `string'[4]
??_C@_03GGODHGCB@no?9?$AA@ db 'no-',0   ; DATA XREF: _do_cmd+A6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1998h
; COMDAT (pick any)
		public ??_C@_03OFAPEBGM@?$CFs?6?$AA@
; `string'
??_C@_03OFAPEBGM@?$CFs?6?$AA@ db '%s',0Ah,0 ; DATA XREF: _do_cmd:loc_B5Co
					; _do_cmd+58Co	...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 199Ch
; COMDAT (pick any)
		public ??_C@_04KNNLNNGO@quit?$AA@
; `string'
??_C@_04KNNLNNGO@quit?$AA@ db 'quit',0  ; DATA XREF: _do_cmd+11Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19A4h
; COMDAT (pick any)
		public ??_C@_01IIACKFLH@q?$AA@
; `string'
??_C@_01IIACKFLH@q?$AA@	db 71h,	0	; DATA XREF: _do_cmd+152o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19A8h
; COMDAT (pick any)
		public ??_C@_04MKNBDEPB@exit?$AA@
; `string'
??_C@_04MKNBDEPB@exit?$AA@ db 'exit',0  ; DATA XREF: _do_cmd+18Do
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19B0h
; COMDAT (pick any)
		public ??_C@_03MDONDFG@bye?$AA@
; `string'
??_C@_03MDONDFG@bye?$AA@ dd 657962h	; DATA XREF: _do_cmd+1C1o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19B4h
; COMDAT (pick any)
		public ??_C@_0BH@HLMIEIJD@list?9standard?9commands?$AA@
; `string'
??_C@_0BH@HLMIEIJD@list?9standard?9commands?$AA@ db 'list-standard-commands',0
					; DATA XREF: _do_cmd+1F5o
					; _do_cmd:loc_E84o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19CCh
; COMDAT (pick any)
		public ??_C@_0BN@CJIDHFPI@list?9message?9digest?9commands?$AA@
; `string'
??_C@_0BN@CJIDHFPI@list?9message?9digest?9commands?$AA@	db 'list-message-digest-commands',0
					; DATA XREF: _do_cmd+22Do
					; _do_cmd:loc_EC1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19ECh
; COMDAT (pick any)
		public ??_C@_0BP@HAIMMLBF@list?9message?9digest?9algorithms?$AA@
; `string'
??_C@_0BP@HAIMMLBF@list?9message?9digest?9algorithms?$AA@ db 'list-message-digest-algorithms',0
					; DATA XREF: _do_cmd+261o
					; _do_cmd:loc_EF9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A0Ch
; COMDAT (pick any)
		public ??_C@_0BF@CICLLHFG@list?9cipher?9commands?$AA@
; `string'
??_C@_0BF@CICLLHFG@list?9cipher?9commands?$AA@ db 'list-cipher-commands',0
					; DATA XREF: _do_cmd+295o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A24h
; COMDAT (pick any)
		public ??_C@_0BH@DFGCPIEG@list?9cipher?9algorithms?$AA@
; `string'
??_C@_0BH@DFGCPIEG@list?9cipher?9algorithms?$AA@ db 'list-cipher-algorithms',0
					; DATA XREF: _do_cmd+2CDo
					; _do_cmd:loc_F63o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A3Ch
; COMDAT (pick any)
		public ??_C@_0BL@DHINNCNP@list?9public?9key?9algorithms?$AA@
; `string'
??_C@_0BL@DHINNCNP@list?9public?9key?9algorithms?$AA@ db 'list-public-key-algorithms',0
					; DATA XREF: _do_cmd+301o
					; _do_cmd:loc_F2Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A58h
; COMDAT (pick any)
		public ??_C@_0CM@FKICDIKK@openssl?3Error?3?5?8?$CFs?8?5is?5an?5invali@
; `string'
??_C@_0CM@FKICDIKK@openssl?3Error?3?5?8?$CFs?8?5is?5an?5invali@	db 'openssl:Error: ',27h,'%s',27h,' is an invalid command.',0Ah,0
					; DATA XREF: _do_cmd+336o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A84h
; COMDAT (pick any)
		public ??_C@_0BD@COOOCHPJ@?6Standard?5commands?$AA@
; `string'
??_C@_0BD@COOOCHPJ@?6Standard?5commands?$AA@ db	0Ah ; DATA XREF: _do_cmd+346o
		db 'Standard commands',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A98h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah, 0	; DATA XREF: _do_cmd+385o _do_cmd+3A9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1A9Ch
; COMDAT (pick any)
		public ??_C@_0EE@JBGNFJJM@?6Message?5Digest?5commands?5?$CIsee?5th@
; `string'
??_C@_0EE@JBGNFJJM@?6Message?5Digest?5commands?5?$CIsee?5th@ db	0Ah
					; DATA XREF: _do_cmd+3C1o
		db 'Message Digest commands (see the `dgst',27h,' command for more detai'
		db 'ls)',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AE0h
; COMDAT (pick any)
		public ??_C@_0DL@FNLPEHCM@?6Cipher?5commands?5?$CIsee?5the?5?$GAenc?8?5@
; `string'
??_C@_0DL@FNLPEHCM@?6Cipher?5commands?5?$CIsee?5the?5?$GAenc?8?5@ db 0Ah
					; DATA XREF: _do_cmd+3CDo
		db 'Cipher commands (see the `enc',27h,' command for more details)',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B1Ch
; COMDAT (pick any)
		public ??_C@_05EGPACALF@?$CF?918s?$AA@
; `string'
??_C@_05EGPACALF@?$CF?918s?$AA@	db '%-18s',0 ; DATA XREF: _do_cmd+3E8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B24h
; COMDAT (pick any)
		public ??_C@_02PHMGELLB@?6?6?$AA@
; `string'
??_C@_02PHMGELLB@?6?6?$AA@ db 2	dup(0Ah), 0 ; DATA XREF: _do_cmd:loc_E68o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B28h
; COMDAT (pick any)
		public ??_C@_09BKOKIJBF@Name?3?5?$CFs?6?$AA@
; `string'
??_C@_09BKOKIJBF@Name?3?5?$CFs?6?$AA@ db 'Name: %s',0Ah,0 ; DATA XREF: _list_pkey+5Eo
					; _list_pkey+87o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B34h
; COMDAT (pick any)
		public ??_C@_0BE@LMOINBDA@?7Type?3?5Alias?5to?5?$CFs?6?$AA@
; `string'
??_C@_0BE@LMOINBDA@?7Type?3?5Alias?5to?5?$CFs?6?$AA@ db	9,'Type: Alias to %s',0Ah,0
					; DATA XREF: _list_pkey+73o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B48h
; COMDAT (pick any)
		public ??_C@_08GKOOPLMO@External?$AA@
; `string'
??_C@_08GKOOPLMO@External?$AA@ db 'External',0 ; DATA XREF: _list_pkey+97o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B54h
; COMDAT (pick any)
		public ??_C@_07GECJFPBJ@Builtin?$AA@
; `string'
??_C@_07GECJFPBJ@Builtin?$AA@ db 'Builtin',0 ; DATA XREF: _list_pkey+20o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B5Ch
; COMDAT (pick any)
		public ??_C@_0BF@FNPAJFKA@?7Type?3?5?$CFs?5Algorithm?6?$AA@
; `string'
??_C@_0BF@FNPAJFKA@?7Type?3?5?$CFs?5Algorithm?6?$AA@ db	9,'Type: %s Algorithm',0Ah,0
					; DATA XREF: _list_pkey+A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B74h
; COMDAT (pick any)
		public ??_C@_09DIEJJCHJ@?7OID?3?5?$CFs?6?$AA@
; `string'
??_C@_09DIEJJCHJ@?7OID?3?5?$CFs?6?$AA@ db 9,'OID: %s',0Ah,0 ; DATA XREF: _list_pkey+B5o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B80h
; COMDAT (pick any)
		public ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@
; `string'
??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@ db '(none)',0 ; DATA XREF: _list_pkey+C4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B88h
; COMDAT (pick any)
		public ??_C@_0BB@OIAJPBNP@?7PEM?5string?3?5?$CFs?6?$AA@
; `string'
??_C@_0BB@OIAJPBNP@?7PEM?5string?3?5?$CFs?6?$AA@ db 9,'PEM string: %s',0Ah,0
					; DATA XREF: _list_pkey+CFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B9Ch
; COMDAT (pick any)
		public ??_C@_0M@KPKKGHMB@?$DMundefined?$DO?$AA@
; `string'
??_C@_0M@KPKKGHMB@?$DMundefined?$DO?$AA@ db '<undefined>',0 ; DATA XREF: _list_cipher_fn+2Bo
					; _list_md_fn+2Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1BA8h
; COMDAT (pick any)
		public ??_C@_09IIOICOJP@?$CFs?5?$DN?$DO?5?$CFs?6?$AA@
; `string'
??_C@_09IIOICOJP@?$CFs?5?$DN?$DO?5?$CFs?6?$AA@ db '%s => %s',0Ah,0
					; DATA XREF: _list_cipher_fn+42o
					; _list_md_fn+42o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _verify_main:near	; DATA XREF: .data:00000008o
		extrn _asn1parse_main:near ; DATA XREF:	.data:00000014o
		extrn _req_main:near	; DATA XREF: .data:00000020o
		extrn _dgst_main:near	; DATA XREF: .data:0000002Co
					; .data:00000230o ...
		extrn _dh_main:near	; DATA XREF: .data:00000038o
		extrn _dhparam_main:near ; DATA	XREF: .data:00000044o
		extrn _enc_main:near	; DATA XREF: .data:00000050o
					; .data:00000278o ...
		extrn _passwd_main:near	; DATA XREF: .data:0000005Co
		extrn _gendh_main:near	; DATA XREF: .data:00000068o
		extrn _errstr_main:near	; DATA XREF: .data:00000074o
		extrn _ca_main:near	; DATA XREF: .data:00000080o
		extrn _crl_main:near	; DATA XREF: .data:0000008Co
		extrn _rsa_main:near	; DATA XREF: .data:00000098o
		extrn _rsautl_main:near	; DATA XREF: .data:000000A4o
		extrn _dsa_main:near	; DATA XREF: .data:000000B0o
		extrn _dsaparam_main:near ; DATA XREF: .data:000000BCo
		extrn _ec_main:near	; DATA XREF: .data:000000C8o
		extrn _ecparam_main:near ; DATA	XREF: .data:000000D4o
		extrn _x509_main:near	; DATA XREF: .data:000000E0o
		extrn _genrsa_main:near	; DATA XREF: .data:000000ECo
		extrn _gendsa_main:near	; DATA XREF: .data:000000F8o
		extrn _genpkey_main:near ; DATA	XREF: .data:00000104o
		extrn _s_server_main:near ; DATA XREF: .data:00000110o
		extrn _s_client_main:near ; DATA XREF: .data:0000011Co
		extrn _speed_main:near	; DATA XREF: .data:00000128o
		extrn _s_time_main:near	; DATA XREF: .data:00000134o
		extrn _version_main:near ; DATA	XREF: .data:00000140o
		extrn _pkcs7_main:near	; DATA XREF: .data:0000014Co
		extrn _cms_main:near	; DATA XREF: .data:00000158o
		extrn _crl2pkcs7_main:near ; DATA XREF:	.data:00000164o
		extrn _sess_id_main:near ; DATA	XREF: .data:00000170o
		extrn _ciphers_main:near ; DATA	XREF: .data:0000017Co
		extrn _nseq_main:near	; DATA XREF: .data:00000188o
		extrn _pkcs12_main:near	; DATA XREF: .data:00000194o
		extrn _pkcs8_main:near	; DATA XREF: .data:000001A0o
		extrn _pkey_main:near	; DATA XREF: .data:000001ACo
		extrn _pkeyparam_main:near ; DATA XREF:	.data:000001B8o
		extrn _pkeyutl_main:near ; DATA	XREF: .data:000001C4o
		extrn _spkac_main:near	; DATA XREF: .data:000001D0o
		extrn _smime_main:near	; DATA XREF: .data:000001DCo
		extrn _rand_main:near	; DATA XREF: .data:000001E8o
		extrn _engine_main:near	; DATA XREF: .data:000001F4o
		extrn _ocsp_main:near	; DATA XREF: .data:00000200o
		extrn _prime_main:near	; DATA XREF: .data:0000020Co
		extrn _ts_main:near	; DATA XREF: .data:00000218o
		extrn _srp_main:near	; DATA XREF: .data:00000224o
		extrn __imp____acrt_iob_func:near ; CODE XREF: _do_cmd+BDp
					; _do_cmd+540p	...
; int __cdecl _fflush(FILE *File)
		extrn __imp__fflush:near ; CODE	XREF: _main+2C4p
					; DATA XREF: _main+2C4r
; char *__cdecl	_fgets(char *Buf, int MaxCount,	FILE *File)
		extrn __imp__fgets:near	; CODE XREF: _main+2D1p
					; DATA XREF: _main+2D1r
; int __cdecl _fputs(const char	*Str, FILE *File)
		extrn __imp__fputs:near	; CODE XREF: _main+2B9p
					; DATA XREF: _main+2B9r
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _fprintf+19p
					; DATA XREF: ...
; int __cdecl _strncmp(const char *Str1, const char *Str2, size_t MaxCount)
		extrn __imp__strncmp:near ; CODE XREF: _do_cmd+ADp
					; _function_LHASH_COMP+10p ...
; void __cdecl _free(void *Memory)
		extrn __imp__free:near	; DATA XREF: _main:$LN87r
; void *__cdecl	_malloc(size_t Size)
		extrn __imp__malloc:near ; DATA	XREF: _main+14Dr
; void *__cdecl	_realloc(void *Memory, size_t NewSize)
		extrn __imp__realloc:near ; DATA XREF: _main+147r
; void __cdecl _qsort(void *Base, size_t NumOfElements,	size_t SizeOfElements, int (__cdecl *PtFuncCompare)(const void *, const	void *))
		extrn __imp__qsort:near	; CODE XREF: _prog_init+27p
					; DATA XREF: _prog_init+27r
; void __cdecl __noreturn _exit(int Code)
		extrn __imp__exit:near	; CODE XREF: _main+13Bp _main+264p ...
; char *__cdecl	_getenv(const char *VarName)
		extrn __imp__getenv:near ; CODE	XREF: _main+83p _main+96p ...
		extrn _CRYPTO_mem_ctrl:near ; CODE XREF: _main+107p
		extrn _CRYPTO_cleanup_all_ex_data:near ; CODE XREF: _main+405p
		extrn _CRYPTO_set_locking_callback:near	; CODE XREF: _main+111p
		extrn _CRYPTO_set_mem_functions:near ; CODE XREF: _main+153p
		extrn _CRYPTO_set_mem_debug_functions:near ; CODE XREF:	_main+E2p
					; _main+FDp
		extrn _CRYPTO_free:near	; CODE XREF: _main+3A8p _main+3E2p
		extrn _CRYPTO_set_mem_debug_options:near ; CODE	XREF: _main+E9p
		extrn _CRYPTO_dbg_malloc:near ;	DATA XREF: _main+DDo
		extrn _CRYPTO_dbg_realloc:near ; DATA XREF: _main+D8o
		extrn _CRYPTO_dbg_free:near ; DATA XREF: _main+D3o
		extrn _CRYPTO_dbg_set_options:near ; DATA XREF:	_main+CEo
		extrn _CRYPTO_dbg_get_options:near ; DATA XREF:	_main+C9o
		extrn _CRYPTO_mem_leaks:near ; CODE XREF: _main+426p
		extrn _BIO_s_file:near	; CODE XREF: _main+4Ap
		extrn _BIO_new_fp:near	; CODE XREF: _do_cmd+C7p _do_cmd+54Ap
		extrn _BIO_new:near	; CODE XREF: _main+50p
		extrn _BIO_free:near	; CODE XREF: _main+438p
		extrn _BIO_ctrl:near	; CODE XREF: _main+70p	_main+36Ep
		extrn _BIO_free_all:near ; CODE	XREF: _do_cmd+10Bp
					; _do_cmd+5A3p	...
		extrn _BIO_printf:near	; CODE XREF: _do_cmd+102p _do_cmd+341p ...
		extrn _OBJ_nid2ln:near	; CODE XREF: _list_pkey+58p
					; _list_pkey+6Dp ...
		extrn _OBJ_nid2sn:near	; CODE XREF: _list_cipher_fn+Fp
					; _list_md_fn+Fp
		extrn _OBJ_cleanup:near	; CODE XREF: _main+3F6p
		extrn _EVP_MD_type:near	; CODE XREF: _list_md_fn+9p
		extrn _EVP_CIPHER_nid:near ; CODE XREF:	_list_cipher_fn+9p
		extrn _OPENSSL_add_all_algorithms_noconf:near ;	CODE XREF: _main+15Dp
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _do_cmd+73p
		extrn _EVP_get_digestbyname:near ; CODE	XREF: _do_cmd+41p
		extrn _EVP_cleanup:near	; CODE XREF: _main+3FBp
		extrn _EVP_CIPHER_do_all_sorted:near ; CODE XREF: _do_cmd+5D4p
					; _list_cipher+9p
		extrn _EVP_MD_do_all_sorted:near ; CODE	XREF: _do_cmd+5BFp
					; _list_md+9p
		extrn _EVP_PKEY_asn1_get_count:near ; CODE XREF: _list_pkey+Dp
					; _list_pkey+E2p
		extrn _EVP_PKEY_asn1_get0:near ; CODE XREF: _list_pkey+26p
		extrn _EVP_PKEY_asn1_get0_info:near ; CODE XREF: _list_pkey+45p
		extrn _lh_new:near	; CODE XREF: _prog_init+37p
		extrn _lh_free:near	; CODE XREF: _main+3D1p
		extrn _lh_insert:near	; CODE XREF: _prog_init+58p
		extrn _lh_retrieve:near	; CODE XREF: _do_cmd+33p _do_cmd+E0p ...
		extrn _lh_strhash:near	; CODE XREF: _function_LHASH_HASH+7p
					; _function_hash+7p
		extrn _NCONF_new:near	; CODE XREF: _main+19Fp
		extrn _NCONF_free:near	; CODE XREF: _main+1E7p _main+25Ap ...
		extrn _NCONF_load:near	; CODE XREF: _main+1B0p
		extrn _CONF_modules_unload:near	; CODE XREF: _main+3ECp
		extrn _RAND_cleanup:near ; CODE	XREF: _main+411p
		extrn _ERR_peek_last_error:near	; CODE XREF: _main+1BCp
		extrn _ERR_clear_error:near ; CODE XREF: _main+1DCp
		extrn _ERR_print_errors:near ; CODE XREF: _main+24Fp
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _main+158p
		extrn _ERR_free_strings:near ; CODE XREF: _main+416p
		extrn _ERR_remove_thread_state:near ; CODE XREF: _main+40Cp
		extrn _ENGINE_load_builtin_engines:near	; CODE XREF: _main+162p
		extrn _ENGINE_cleanup:near ; CODE XREF:	_main+400p
		extrn _setup_ui_method:near ; CODE XREF: _main+167p
		extrn _destroy_ui_method:near ;	CODE XREF: _main+3F1p
		extrn _program_name:near ; CODE	XREF: _main+20Dp
		extrn _chopup_args:near	; CODE XREF: _main+322p
		extrn _load_config:near	; CODE XREF: _do_cmd+559p
		extrn _make_config_name:near ; CODE XREF: _main+18Cp
		extrn _COMP_zlib_cleanup:near ;	CODE XREF: _main+41Bp
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
		extrn __chkstk:near	; CODE XREF: _do_cmd+5p _list_pkey+5p	...
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso
		extrn ___security_cookie:near ;	DATA XREF: _main+Ar


		end

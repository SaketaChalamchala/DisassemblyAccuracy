;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	0FDBF6E7958BEF673D78435AF07F69D5
; Input	CRC32 :	A503655F

; File Name   :	C:\compspace\Diff\openssl\obj\cms_att.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_add1_attr
_CMS_signed_add1_attr proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		add	eax, 0Ch
		push	eax
		call	_X509at_add1_attr
		add	esp, 8
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_CMS_signed_add1_attr endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_add1_attr_by_NID
_CMS_signed_add1_attr_by_NID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	[esp+arg_10]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_C]
		add	eax, 0Ch
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	eax
		call	_X509at_add1_attr_by_NID
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_CMS_signed_add1_attr_by_NID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 44h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_add1_attr_by_OBJ
_CMS_signed_add1_attr_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	[esp+arg_10]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_C]
		add	eax, 0Ch
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	eax
		call	_X509at_add1_attr_by_OBJ
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_CMS_signed_add1_attr_by_OBJ endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_add1_attr_by_txt
_CMS_signed_add1_attr_by_txt proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	[esp+arg_10]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_C]
		add	eax, 0Ch
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	eax
		call	_X509at_add1_attr_by_txt
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_CMS_signed_add1_attr_by_txt endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 94h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_delete_attr
_CMS_signed_delete_attr	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		push	dword ptr [eax+0Ch]
		call	_X509at_delete_attr
		add	esp, 8
		retn
_CMS_signed_delete_attr	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_get0_data_by_OBJ
_CMS_signed_get0_data_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	dword ptr [eax+0Ch]
		call	_X509at_get0_data_by_OBJ
		add	esp, 10h
		retn
_CMS_signed_get0_data_by_OBJ endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_get_attr
_CMS_signed_get_attr proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		push	dword ptr [eax+0Ch]
		call	_X509at_get_attr
		add	esp, 8
		retn
_CMS_signed_get_attr endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_get_attr_by_NID
_CMS_signed_get_attr_by_NID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		push	dword ptr [eax+0Ch]
		call	_X509at_get_attr_by_NID
		add	esp, 0Ch
		retn
_CMS_signed_get_attr_by_NID endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_get_attr_by_OBJ
_CMS_signed_get_attr_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		push	dword ptr [eax+0Ch]
		call	_X509at_get_attr_by_OBJ
		add	esp, 0Ch
		retn
_CMS_signed_get_attr_by_OBJ endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 108h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_signed_get_attr_count
_CMS_signed_get_attr_count proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		push	dword ptr [eax+0Ch]
		call	_X509at_get_attr_count
		add	esp, 4
		retn
_CMS_signed_get_attr_count endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 118h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_add1_attr
_CMS_unsigned_add1_attr	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		add	eax, 18h
		push	eax
		call	_X509at_add1_attr
		add	esp, 8
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_CMS_unsigned_add1_attr	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 134h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_add1_attr_by_NID
_CMS_unsigned_add1_attr_by_NID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	[esp+arg_10]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_C]
		add	eax, 18h
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	eax
		call	_X509at_add1_attr_by_NID
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_CMS_unsigned_add1_attr_by_NID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 15Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_add1_attr_by_OBJ
_CMS_unsigned_add1_attr_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	[esp+arg_10]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_C]
		add	eax, 18h
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	eax
		call	_X509at_add1_attr_by_OBJ
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_CMS_unsigned_add1_attr_by_OBJ endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 184h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_add1_attr_by_txt
_CMS_unsigned_add1_attr_by_txt proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	[esp+arg_10]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_C]
		add	eax, 18h
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	eax
		call	_X509at_add1_attr_by_txt
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_CMS_unsigned_add1_attr_by_txt endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_delete_attr
_CMS_unsigned_delete_attr proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		push	dword ptr [eax+18h]
		call	_X509at_delete_attr
		add	esp, 8
		retn
_CMS_unsigned_delete_attr endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1C0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_get0_data_by_OBJ
_CMS_unsigned_get0_data_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	dword ptr [eax+18h]
		call	_X509at_get0_data_by_OBJ
		add	esp, 10h
		retn
_CMS_unsigned_get0_data_by_OBJ endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1DCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_get_attr
_CMS_unsigned_get_attr proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		push	dword ptr [eax+18h]
		call	_X509at_get_attr
		add	esp, 8
		retn
_CMS_unsigned_get_attr endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_get_attr_by_NID
_CMS_unsigned_get_attr_by_NID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		push	dword ptr [eax+18h]
		call	_X509at_get_attr_by_NID
		add	esp, 0Ch
		retn
_CMS_unsigned_get_attr_by_NID endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 208h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_get_attr_by_OBJ
_CMS_unsigned_get_attr_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		push	dword ptr [eax+18h]
		call	_X509at_get_attr_by_OBJ
		add	esp, 0Ch
		retn
_CMS_unsigned_get_attr_by_OBJ endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 220h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_unsigned_get_attr_count
_CMS_unsigned_get_attr_count proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		push	dword ptr [eax+18h]
		call	_X509at_get_attr_count
		add	esp, 4
		retn
_CMS_unsigned_get_attr_count endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _X509at_get_attr_count:near ; CODE XREF: _CMS_signed_get_attr_count+7p
					; _CMS_unsigned_get_attr_count+7p
		extrn _X509at_get_attr_by_NID:near
					; CODE XREF: _CMS_signed_get_attr_by_NID+Fp
					; _CMS_unsigned_get_attr_by_NID+Fp
		extrn _X509at_get_attr_by_OBJ:near
					; CODE XREF: _CMS_signed_get_attr_by_OBJ+Fp
					; _CMS_unsigned_get_attr_by_OBJ+Fp
		extrn _X509at_get_attr:near ; CODE XREF: _CMS_signed_get_attr+Bp
					; _CMS_unsigned_get_attr+Bp
		extrn _X509at_delete_attr:near ; CODE XREF: _CMS_signed_delete_attr+Bp
					; _CMS_unsigned_delete_attr+Bp
		extrn _X509at_add1_attr:near ; CODE XREF: _CMS_signed_add1_attr+Cp
					; _CMS_unsigned_add1_attr+Cp
		extrn _X509at_add1_attr_by_OBJ:near
					; CODE XREF: _CMS_signed_add1_attr_by_OBJ+18p
					; _CMS_unsigned_add1_attr_by_OBJ+18p
		extrn _X509at_add1_attr_by_NID:near
					; CODE XREF: _CMS_signed_add1_attr_by_NID+18p
					; _CMS_unsigned_add1_attr_by_NID+18p
		extrn _X509at_add1_attr_by_txt:near
					; CODE XREF: _CMS_signed_add1_attr_by_txt+18p
					; _CMS_unsigned_add1_attr_by_txt+18p
		extrn _X509at_get0_data_by_OBJ:near
					; CODE XREF: _CMS_signed_get0_data_by_OBJ+13p
					; _CMS_unsigned_get0_data_by_OBJ+13p


		end

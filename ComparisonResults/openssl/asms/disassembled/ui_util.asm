;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	7AECB385FBD28FD6213EA81C1B51AC6C
; Input	CRC32 :	64C5358E

; File Name   :	C:\compspace\Diff\openssl\obj\ui_util.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _UI_UTIL_read_pw
_UI_UTIL_read_pw proc near		; CODE XREF: _UI_UTIL_read_pw_string+47p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebx
		mov	ebx, [esp+4+arg_8]
		push	esi
		xor	esi, esi
		cmp	ebx, 1
		jge	short loc_13
		pop	esi
		or	eax, 0FFFFFFFFh
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_13:					; CODE XREF: _UI_UTIL_read_pw+Bj
		push	edi
		call	_UI_new
		mov	edi, eax
		test	edi, edi
		jz	short loc_7E
		dec	ebx
		push	ebx
		push	0
		push	[esp+14h+arg_0]
		push	0
		push	[esp+1Ch+arg_C]
		push	edi
		call	_UI_add_input_string
		mov	esi, eax
		add	esp, 18h
		test	esi, esi
		js	short loc_6E
		cmp	[esp+0Ch+arg_10], 0
		jz	short loc_5F
		push	[esp+0Ch+arg_0]
		push	ebx
		push	0
		push	[esp+18h+arg_4]
		push	0
		push	[esp+20h+arg_C]
		push	edi
		call	_UI_add_verify_string
		add	esp, 1Ch
		mov	esi, eax

loc_5F:					; CODE XREF: _UI_UTIL_read_pw+41j
		test	esi, esi
		js	short loc_6E
		push	edi
		call	_UI_process
		add	esp, 4
		mov	esi, eax

loc_6E:					; CODE XREF: _UI_UTIL_read_pw+3Aj
					; _UI_UTIL_read_pw+61j
		push	edi
		call	_UI_free
		xor	eax, eax
		add	esp, 4
		test	esi, esi
		cmovg	esi, eax

loc_7E:					; CODE XREF: _UI_UTIL_read_pw+1Dj
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebx
		retn
_UI_UTIL_read_pw endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 84h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _UI_UTIL_read_pw_string
_UI_UTIL_read_pw_string	proc near

var_204		= byte ptr -204h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, 204h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+204h+var_4], eax
		mov	eax, [esp+204h+arg_8]
		mov	edx, 200h
		mov	ecx, [esp+204h+arg_0]
		push	esi
		push	[esp+208h+arg_C]
		push	eax
		mov	eax, [esp+210h+arg_4]
		cmp	eax, edx
		cmovg	eax, edx
		push	eax
		lea	eax, [esp+214h+var_204]
		push	eax
		push	ecx
		call	_UI_UTIL_read_pw
		mov	esi, eax
		lea	eax, [esp+21Ch+var_204]
		push	200h
		push	eax
		call	_OPENSSL_cleanse
		mov	ecx, [esp+224h+var_4]
		add	esp, 1Ch
		mov	eax, esi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 204h
		retn
_UI_UTIL_read_pw_string	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _OPENSSL_cleanse:near ; CODE XREF: _UI_UTIL_read_pw_string+58p
		extrn _UI_new:near	; CODE XREF: _UI_UTIL_read_pw+14p
		extrn _UI_free:near	; CODE XREF: _UI_UTIL_read_pw+6Fp
		extrn _UI_add_input_string:near	; CODE XREF: _UI_UTIL_read_pw+2Ep
		extrn _UI_add_verify_string:near ; CODE	XREF: _UI_UTIL_read_pw+55p
		extrn _UI_process:near	; CODE XREF: _UI_UTIL_read_pw+64p
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: _UI_UTIL_read_pw_string+6Cp
		extrn __chkstk:near	; CODE XREF: _UI_UTIL_read_pw_string+5p
		extrn ___security_cookie:near ;	DATA XREF: _UI_UTIL_read_pw_string+Ar


		end

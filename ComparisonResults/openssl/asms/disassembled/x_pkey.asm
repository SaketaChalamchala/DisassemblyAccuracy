;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	CB92DEE84E9C4724FB28A97DAB74684D
; Input	CRC32 :	AA0CBE60

; File Name   :	C:\compspace\Diff\openssl\obj\x_pkey.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_PKEY_free
_X509_PKEY_free	proc near		; CODE XREF: _d2i_X509_PKEY+1A1p

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jz	short loc_76
		push	83h ; 'ƒ'
		push	offset ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@ ; ".\\crypto\\asn1\\x_pkey.c"
		push	5
		lea	eax, [esi+30h]
		push	0FFFFFFFFh
		push	eax
		call	_CRYPTO_add_lock
		add	esp, 14h
		test	eax, eax
		jg	short loc_76
		mov	eax, [esi+4]
		test	eax, eax
		jz	short loc_37
		push	eax
		call	_X509_ALGOR_free
		add	esp, 4

loc_37:					; CODE XREF: _X509_PKEY_free+2Cj
		mov	eax, [esi+8]
		test	eax, eax
		jz	short loc_47
		push	eax
		call	_ASN1_STRING_free
		add	esp, 4

loc_47:					; CODE XREF: _X509_PKEY_free+3Cj
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_57
		push	eax
		call	_EVP_PKEY_free
		add	esp, 4

loc_57:					; CODE XREF: _X509_PKEY_free+4Cj
		mov	eax, [esi+14h]
		test	eax, eax
		jz	short loc_6D
		cmp	dword ptr [esi+18h], 0
		jz	short loc_6D
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_6D:					; CODE XREF: _X509_PKEY_free+5Cj
					; _X509_PKEY_free+62j
		push	esi
		call	_CRYPTO_free
		add	esp, 4

loc_76:					; CODE XREF: _X509_PKEY_free+7j
					; _X509_PKEY_free+25j
		pop	esi
		retn
_X509_PKEY_free	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 78h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_PKEY_new
_X509_PKEY_new	proc near		; CODE XREF: _d2i_X509_PKEY:loc_136p
		push	esi
		push	6Dh ; 'm'
		push	offset ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@ ; ".\\crypto\\asn1\\x_pkey.c"
		push	34h ; '4'
		call	_CRYPTO_malloc
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_AC

$err2$8:
		push	6Dh ; 'm'
		push	offset ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@ ; ".\\crypto\\asn1\\x_pkey.c"
		push	41h ; 'A'
		push	0ADh ; '­'
		push	0Dh
		call	_ERR_put_error
		add	esp, 14h

loc_A8:					; CODE XREF: _X509_PKEY_new+44j
					; _X509_PKEY_new+55j
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_AC:					; CODE XREF: _X509_PKEY_new+16j
		mov	dword ptr [esi], 0
		call	_X509_ALGOR_new
		mov	[esi+4], eax
		test	eax, eax
		jz	short loc_A8
		push	4
		call	_ASN1_STRING_type_new
		add	esp, 4
		mov	[esi+8], eax
		test	eax, eax
		jz	short loc_A8
		mov	dword ptr [esi+0Ch], 0
		xorps	xmm0, xmm0
		mov	dword ptr [esi+10h], 0
		mov	eax, esi
		mov	dword ptr [esi+14h], 0
		mov	dword ptr [esi+18h], 0
		mov	dword ptr [esi+1Ch], 0
		movups	xmmword	ptr [esi+20h], xmm0
		mov	dword ptr [esi+30h], 1
		pop	esi
		retn
_X509_PKEY_new	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 104h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_X509_PKEY
_d2i_X509_PKEY	proc near

var_2C		= dword	ptr -2Ch
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 2Ch ; ','
		call	__chkstk
		push	ebx
		mov	ebx, [esp+30h+arg_4]
		push	ebp
		push	esi
		push	edi
		mov	edi, [esp+3Ch+arg_0]
		mov	eax, [ebx]
		mov	[esp+3Ch+var_8], ebx
		mov	[esp+3Ch+var_C], eax
		mov	[esp+3Ch+var_24], 3Ah ;	':'
		test	edi, edi
		jz	short loc_136
		mov	esi, [edi]
		test	esi, esi
		jnz	short loc_149

loc_136:				; CODE XREF: _d2i_X509_PKEY+2Aj
		call	_X509_PKEY_new
		mov	esi, eax
		test	esi, esi
		jnz	short loc_149
		lea	ecx, [eax+4Bh]
		jmp	loc_26C
; ---------------------------------------------------------------------------

loc_149:				; CODE XREF: _d2i_X509_PKEY+30j
					; _d2i_X509_PKEY+3Bj
		mov	ecx, [esp+3Ch+arg_8]
		mov	eax, [ebx]
		mov	[esp+3Ch+var_2C], eax
		test	ecx, ecx
		jnz	short loc_15D
		mov	[esp+3Ch+var_10], ecx
		jmp	short loc_163
; ---------------------------------------------------------------------------

loc_15D:				; CODE XREF: _d2i_X509_PKEY+51j
		add	eax, ecx
		mov	[esp+3Ch+var_10], eax

loc_163:				; CODE XREF: _d2i_X509_PKEY+57j
		lea	eax, [esp+3Ch+arg_8]
		push	eax
		lea	eax, [esp+40h+var_2C]
		push	eax
		call	_asn1_GetSequence
		add	esp, 8
		test	eax, eax
		jnz	short loc_181
		lea	ecx, [eax+4Eh]
		jmp	loc_26C
; ---------------------------------------------------------------------------

loc_181:				; CODE XREF: _d2i_X509_PKEY+73j
		mov	eax, [esp+3Ch+var_2C]
		lea	ebp, [esi+4]
		push	[esp+3Ch+var_14]
		mov	[esp+40h+var_C], eax
		lea	eax, [esp+40h+var_2C]
		push	eax
		push	ebp
		call	_d2i_X509_ALGOR
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_1AA
		lea	ecx, [eax+4Fh]
		jmp	loc_26C
; ---------------------------------------------------------------------------

loc_1AA:				; CODE XREF: _d2i_X509_PKEY+9Cj
		mov	eax, [esp+3Ch+var_C]
		mov	edx, [esp+3Ch+var_2C]
		sub	eax, edx
		mov	ecx, [esp+3Ch+var_14]
		add	ecx, eax
		mov	[esp+3Ch+var_C], edx
		push	ecx
		lea	eax, [esp+40h+var_2C]
		mov	[esp+40h+var_14], ecx
		push	eax
		lea	eax, [esi+8]
		push	eax
		call	_d2i_ASN1_OCTET_STRING
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_1E0
		lea	ecx, [eax+50h]
		jmp	loc_26C
; ---------------------------------------------------------------------------

loc_1E0:				; CODE XREF: _d2i_X509_PKEY+D2j
		mov	eax, [esp+3Ch+var_C]
		sub	eax, [esp+3Ch+var_2C]
		add	[esp+3Ch+var_14], eax
		mov	eax, [ebp+0]
		push	dword ptr [eax]
		call	_OBJ_obj2nid
		push	eax
		call	_OBJ_nid2ln
		push	eax
		call	_EVP_get_cipherbyname
		add	esp, 0Ch
		mov	[esi+1Ch], eax
		test	eax, eax
		jnz	short loc_219
		mov	[esp+3Ch+var_24], 0A5h ; '¥'
		lea	ecx, [eax+57h]
		jmp	short loc_26C
; ---------------------------------------------------------------------------

loc_219:				; CODE XREF: _d2i_X509_PKEY+106j
		mov	eax, [ebp+0]
		mov	eax, [eax+4]
		cmp	dword ptr [eax], 4
		jnz	short loc_24F
		mov	eax, [eax+4]
		mov	ecx, [eax]
		cmp	ecx, 10h
		jle	short loc_23D
		mov	[esp+3Ch+var_24], 87h ;	'‡'
		mov	ecx, 5Eh ; '^'
		jmp	short loc_26C
; ---------------------------------------------------------------------------

loc_23D:				; CODE XREF: _d2i_X509_PKEY+128j
		push	ecx		; Size
		push	dword ptr [eax+8] ; Src
		lea	eax, [esi+20h]
		push	eax		; Dst
		call	_memcpy
		add	esp, 0Ch
		jmp	short loc_256
; ---------------------------------------------------------------------------

loc_24F:				; CODE XREF: _d2i_X509_PKEY+11Ej
		xorps	xmm0, xmm0
		movups	xmmword	ptr [esi+20h], xmm0

loc_256:				; CODE XREF: _d2i_X509_PKEY+149j
		lea	eax, [esp+3Ch+var_2C]
		push	eax
		call	_asn1_const_Finish
		add	esp, 4
		test	eax, eax
		jnz	short loc_2B7
		mov	ecx, 65h ; 'e'

loc_26C:				; CODE XREF: _d2i_X509_PKEY+40j
					; _d2i_X509_PKEY+78j ...
		mov	[esp+3Ch+var_4], ecx

$err$22:
		push	ecx
		push	offset ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@ ; ".\\crypto\\asn1\\x_pkey.c"
		push	[esp+44h+var_24]
		push	9Fh ; 'Ÿ'
		push	0Dh
		call	_ERR_put_error
		mov	ecx, [ebx]
		mov	eax, [esp+50h+var_C]
		sub	eax, ecx
		push	eax
		push	ecx
		call	_asn1_add_error
		add	esp, 1Ch
		test	esi, esi
		jz	short loc_2AD
		test	edi, edi
		jz	short loc_2A4
		cmp	[edi], esi
		jz	short loc_2AD

loc_2A4:				; CODE XREF: _d2i_X509_PKEY+19Aj
		push	esi
		call	_X509_PKEY_free
		add	esp, 4

loc_2AD:				; CODE XREF: _d2i_X509_PKEY+196j
					; _d2i_X509_PKEY+19Ej
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_2B7:				; CODE XREF: _d2i_X509_PKEY+161j
		mov	eax, [esp+3Ch+var_2C]
		mov	[ebx], eax
		test	edi, edi
		jz	short loc_2C3
		mov	[edi], esi

loc_2C3:				; CODE XREF: _d2i_X509_PKEY+1BBj
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 2Ch
		retn
_d2i_X509_PKEY	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2D0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_X509_PKEY
_i2d_X509_PKEY	proc near
		xor	eax, eax
		retn
_i2d_X509_PKEY	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D4h
; COMDAT (pick any)
		public ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@
; `string'
??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@ db '.\crypto\asn1\x_pkey.c',0
					; DATA XREF: _X509_PKEY_free+Eo
					; _X509_PKEY_new+3o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _CRYPTO_add_lock:near ; CODE XREF: _X509_PKEY_free+1Bp
		extrn _CRYPTO_malloc:near ; CODE XREF: _X509_PKEY_new+Ap
		extrn _CRYPTO_free:near	; CODE XREF: _X509_PKEY_free+65p
					; _X509_PKEY_free+6Ep
		extrn _ERR_put_error:near ; CODE XREF: _X509_PKEY_new+28p
					; _d2i_X509_PKEY+17Dp
		extrn _ASN1_STRING_free:near ; CODE XREF: _X509_PKEY_free+3Fp
		extrn _ASN1_STRING_type_new:near ; CODE	XREF: _X509_PKEY_new+48p
		extrn _d2i_ASN1_OCTET_STRING:near ; CODE XREF: _d2i_X509_PKEY+C8p
		extrn _asn1_const_Finish:near ;	CODE XREF: _d2i_X509_PKEY+157p
		extrn _OBJ_nid2ln:near	; CODE XREF: _d2i_X509_PKEY+F3p
		extrn _OBJ_obj2nid:near	; CODE XREF: _d2i_X509_PKEY+EDp
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _d2i_X509_PKEY+F9p
		extrn _EVP_PKEY_free:near ; CODE XREF: _X509_PKEY_free+4Fp
		extrn _asn1_GetSequence:near ; CODE XREF: _d2i_X509_PKEY+69p
		extrn _asn1_add_error:near ; CODE XREF:	_d2i_X509_PKEY+18Cp
		extrn _X509_ALGOR_new:near ; CODE XREF:	_X509_PKEY_new+3Ap
		extrn _X509_ALGOR_free:near ; CODE XREF: _X509_PKEY_free+2Fp
		extrn _d2i_X509_ALGOR:near ; CODE XREF:	_d2i_X509_PKEY+92p
		extrn __chkstk:near	; CODE XREF: _d2i_X509_PKEY+5p
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _d2i_X509_PKEY+141p


		end

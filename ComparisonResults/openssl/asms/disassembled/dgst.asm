;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	ABF7C3ADDE49B0BDF8E374C944502CC3
; Input	CRC32 :	2FDF882C

; File Name   :	C:\compspace\Diff\openssl\obj\dgst.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _dgst_main
_dgst_main	proc near

var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 0A0h ; ' '
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+0A0h+var_4], eax
		push	ebx
		push	ebp
		xor	eax, eax
		mov	[esp+0A8h+var_98], 0
		push	esi
		push	edi
		mov	edi, [esp+0B0h+arg_4]
		xor	esi, esi
		push	88h ; 'ˆ'
		push	offset ??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@	; ".\\apps\\dgst.c"
		xor	ebp, ebp
		mov	[esp+0B8h+var_9C], 0
		push	2000h
		mov	ebx, 1
		mov	[esp+0BCh+var_88], 0
		mov	[esp+0BCh+var_90], 0
		mov	[esp+0BCh+var_74], 0
		mov	[esp+0BCh+var_60], 0
		mov	[esp+0BCh+var_3C], 0
		mov	[esp+0BCh+var_84], 3
		mov	[esp+0BCh+var_30], 0
		mov	[esp+0BCh+var_68], esi
		mov	[esp+0BCh+var_50], eax
		mov	[esp+0BCh+var_34], eax
		mov	[esp+0BCh+var_94], 0FFFFFFFFh
		mov	[esp+0BCh+var_6C], eax
		mov	[esp+0BCh+var_64], eax
		mov	[esp+0BCh+var_A0], eax
		mov	[esp+0BCh+var_58], eax
		mov	[esp+0BCh+var_4C], eax
		mov	[esp+0BCh+var_38], eax
		mov	[esp+0BCh+var_44], eax
		mov	[esp+0BCh+var_40], eax
		mov	[esp+0BCh+var_8C], eax
		mov	[esp+0BCh+var_54], eax
		mov	[esp+0BCh+var_80], eax
		mov	[esp+0BCh+var_48], ebp
		mov	[esp+0BCh+var_70], eax
		call	_CRYPTO_malloc
		add	esp, 0Ch
		mov	[esp+0B0h+var_5C], eax
		test	eax, eax
		jnz	short loc_101
		push	offset ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; "out of memory\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_86C
; ---------------------------------------------------------------------------

loc_101:				; CODE XREF: _dgst_main+E7j
		mov	eax, dword ptr ds:_bio_err
		test	eax, eax
		jnz	short loc_141
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_141
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_141:				; CODE XREF: _dgst_main+108j
					; _dgst_main+11Fj
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	$end$285
		push	28h ; '('
		lea	eax, [esp+0B4h+var_2C]
		push	eax
		push	dword ptr [edi]
		call	_program_name
		lea	eax, [esp+0BCh+var_2C]
		push	eax
		call	_EVP_get_digestbyname
		mov	ebx, [esp+0C0h+arg_0]
		add	edi, 4
		dec	ebx
		mov	[esp+0C0h+var_7C], eax
		add	esp, 10h
		mov	[esp+0B0h+arg_0], ebx
		mov	[esp+0B0h+var_78], edi
		test	ebx, ebx
		jle	loc_A74
		nop	word ptr [eax+eax+00000000h]

loc_1A0:				; CODE XREF: _dgst_main+7F9j
		mov	esi, [edi]
		cmp	byte ptr [esi],	2Dh ; '-'
		jnz	loc_7FF
		mov	ecx, offset ??_C@_02HOPLMLDK@?9c?$AA@ ;	`string'
		mov	eax, esi

loc_1B2:				; CODE XREF: _dgst_main+1CCj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1D2
		test	dl, dl
		jz	short loc_1CE
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1D2
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1B2

loc_1CE:				; CODE XREF: _dgst_main+1BAj
		xor	eax, eax
		jmp	short loc_1D7
; ---------------------------------------------------------------------------

loc_1D2:				; CODE XREF: _dgst_main+1B6j
					; _dgst_main+1C2j
		sbb	eax, eax
		or	eax, 1

loc_1D7:				; CODE XREF: _dgst_main+1D0j
		test	eax, eax
		jnz	short loc_1E8
		mov	[esp+0B0h+var_60], 1
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_1E8:				; CODE XREF: _dgst_main+1D9j
		mov	ecx, offset ??_C@_02CNCCOICK@?9r?$AA@ ;	`string'
		mov	eax, esi
		nop

loc_1F0:				; CODE XREF: _dgst_main+20Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_210
		test	dl, dl
		jz	short loc_20C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_210
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1F0

loc_20C:				; CODE XREF: _dgst_main+1F8j
		xor	eax, eax
		jmp	short loc_215
; ---------------------------------------------------------------------------

loc_210:				; CODE XREF: _dgst_main+1F4j
					; _dgst_main+200j
		sbb	eax, eax
		or	eax, 1

loc_215:				; CODE XREF: _dgst_main+20Ej
		test	eax, eax
		jnz	short loc_226
		mov	[esp+0B0h+var_60], 2
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_226:				; CODE XREF: _dgst_main+217j
		mov	ecx, offset ??_C@_05LGFPCDPE@?9rand?$AA@ ; "-rand"
		mov	eax, esi
		nop	dword ptr [eax]

loc_230:				; CODE XREF: _dgst_main+24Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_250
		test	dl, dl
		jz	short loc_24C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_250
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_230

loc_24C:				; CODE XREF: _dgst_main+238j
		xor	eax, eax
		jmp	short loc_255
; ---------------------------------------------------------------------------

loc_250:				; CODE XREF: _dgst_main+234j
					; _dgst_main+240j
		sbb	eax, eax
		or	eax, 1

loc_255:				; CODE XREF: _dgst_main+24Ej
		test	eax, eax
		jnz	short loc_272
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_34], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_272:				; CODE XREF: _dgst_main+257j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_280:				; CODE XREF: _dgst_main+29Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2A0
		test	dl, dl
		jz	short loc_29C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2A0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_280

loc_29C:				; CODE XREF: _dgst_main+288j
		xor	eax, eax
		jmp	short loc_2A5
; ---------------------------------------------------------------------------

loc_2A0:				; CODE XREF: _dgst_main+284j
					; _dgst_main+290j
		sbb	eax, eax
		or	eax, 1

loc_2A5:				; CODE XREF: _dgst_main+29Ej
		test	eax, eax
		jnz	short loc_2C5
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_30], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_2C5:				; CODE XREF: _dgst_main+2A7j
		mov	ecx, offset ??_C@_05LLLFPBKO@?9sign?$AA@ ; "-sign"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_2D0:				; CODE XREF: _dgst_main+2EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2F0
		test	dl, dl
		jz	short loc_2EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2D0

loc_2EC:				; CODE XREF: _dgst_main+2D8j
		xor	eax, eax
		jmp	short loc_2F5
; ---------------------------------------------------------------------------

loc_2F0:				; CODE XREF: _dgst_main+2D4j
					; _dgst_main+2E0j
		sbb	eax, eax
		or	eax, 1

loc_2F5:				; CODE XREF: _dgst_main+2EEj
		test	eax, eax
		jnz	short loc_312
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_68], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_312:				; CODE XREF: _dgst_main+2F7j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_320:				; CODE XREF: _dgst_main+33Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_340
		test	dl, dl
		jz	short loc_33C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_340
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_320

loc_33C:				; CODE XREF: _dgst_main+328j
		xor	eax, eax
		jmp	short loc_345
; ---------------------------------------------------------------------------

loc_340:				; CODE XREF: _dgst_main+324j
					; _dgst_main+330j
		sbb	eax, eax
		or	eax, 1

loc_345:				; CODE XREF: _dgst_main+33Ej
		test	eax, eax
		jnz	short loc_362
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_38], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_362:				; CODE XREF: _dgst_main+347j
		mov	ecx, offset ??_C@_07FILEFCOC@?9verify?$AA@ ; "-verify"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_370:				; CODE XREF: _dgst_main+38Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_390
		test	dl, dl
		jz	short loc_38C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_390
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_370

loc_38C:				; CODE XREF: _dgst_main+378j
		xor	eax, eax
		jmp	short loc_395
; ---------------------------------------------------------------------------

loc_390:				; CODE XREF: _dgst_main+374j
					; _dgst_main+380j
		sbb	eax, eax
		or	eax, 1

loc_395:				; CODE XREF: _dgst_main+38Ej
		test	eax, eax
		jnz	short loc_3C2
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_68], eax
		mov	[esp+0B0h+var_6C], 1
		mov	[esp+0B0h+var_64], 1
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_3C2:				; CODE XREF: _dgst_main+397j
		mov	ecx, offset ??_C@_09BIBKEPCC@?9prverify?$AA@ ; "-prverify"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_3D0:				; CODE XREF: _dgst_main+3EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3F0
		test	dl, dl
		jz	short loc_3EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3D0

loc_3EC:				; CODE XREF: _dgst_main+3D8j
		xor	eax, eax
		jmp	short loc_3F5
; ---------------------------------------------------------------------------

loc_3F0:				; CODE XREF: _dgst_main+3D4j
					; _dgst_main+3E0j
		sbb	eax, eax
		or	eax, 1

loc_3F5:				; CODE XREF: _dgst_main+3EEj
		test	eax, eax
		jnz	short loc_41A
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_68], eax
		mov	[esp+0B0h+var_64], 1
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_41A:				; CODE XREF: _dgst_main+3F7j
		mov	ecx, offset ??_C@_0L@OJINPCDP@?9signature?$AA@ ; "-signature"
		mov	eax, esi

loc_421:				; CODE XREF: _dgst_main+43Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_441
		test	dl, dl
		jz	short loc_43D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_441
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_421

loc_43D:				; CODE XREF: _dgst_main+429j
		xor	eax, eax
		jmp	short loc_446
; ---------------------------------------------------------------------------

loc_441:				; CODE XREF: _dgst_main+425j
					; _dgst_main+431j
		sbb	eax, eax
		or	eax, 1

loc_446:				; CODE XREF: _dgst_main+43Fj
		test	eax, eax
		jnz	short loc_463
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_50], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_463:				; CODE XREF: _dgst_main+448j
		mov	ecx, offset ??_C@_08OAHLMBGP@?9keyform?$AA@ ; "-keyform"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_470:				; CODE XREF: _dgst_main+48Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_490
		test	dl, dl
		jz	short loc_48C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_490
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_470

loc_48C:				; CODE XREF: _dgst_main+478j
		xor	eax, eax
		jmp	short loc_495
; ---------------------------------------------------------------------------

loc_490:				; CODE XREF: _dgst_main+474j
					; _dgst_main+480j
		sbb	eax, eax
		or	eax, 1

loc_495:				; CODE XREF: _dgst_main+48Ej
		test	eax, eax
		jnz	short loc_4BA
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		push	dword ptr [edi+4]
		add	edi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+0B0h+var_84], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_4BA:				; CODE XREF: _dgst_main+497j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi

loc_4C1:				; CODE XREF: _dgst_main+4DBj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4E1
		test	dl, dl
		jz	short loc_4DD
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4E1
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4C1

loc_4DD:				; CODE XREF: _dgst_main+4C9j
		xor	eax, eax
		jmp	short loc_4E6
; ---------------------------------------------------------------------------

loc_4E1:				; CODE XREF: _dgst_main+4C5j
					; _dgst_main+4D1j
		sbb	eax, eax
		or	eax, 1

loc_4E6:				; CODE XREF: _dgst_main+4DFj
		test	eax, eax
		jnz	short loc_511
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		add	edi, 4
		push	eax
		push	dword ptr [edi]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		add	esp, 0Ch
		mov	[esp+0B0h+var_98], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_511:				; CODE XREF: _dgst_main+4E8j
		mov	ecx, offset ??_C@_0N@FEJBABNG@?9engine_impl?$AA@ ; "-engine_impl"
		mov	eax, esi

loc_518:				; CODE XREF: _dgst_main+532j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_538
		test	dl, dl
		jz	short loc_534
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_538
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_518

loc_534:				; CODE XREF: _dgst_main+520j
		xor	eax, eax
		jmp	short loc_53D
; ---------------------------------------------------------------------------

loc_538:				; CODE XREF: _dgst_main+51Cj
					; _dgst_main+528j
		sbb	eax, eax
		or	eax, 1

loc_53D:				; CODE XREF: _dgst_main+536j
		test	eax, eax
		jnz	short loc_54E
		mov	[esp+0B0h+var_40], 1
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_54E:				; CODE XREF: _dgst_main+53Fj
		mov	ecx, offset ??_C@_04FHOEMGIO@?9hex?$AA@	; "-hex"
		mov	eax, esi

loc_555:				; CODE XREF: _dgst_main+56Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_575
		test	dl, dl
		jz	short loc_571
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_575
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_555

loc_571:				; CODE XREF: _dgst_main+55Dj
		xor	eax, eax
		jmp	short loc_57A
; ---------------------------------------------------------------------------

loc_575:				; CODE XREF: _dgst_main+559j
					; _dgst_main+565j
		sbb	eax, eax
		or	eax, 1

loc_57A:				; CODE XREF: _dgst_main+573j
		test	eax, eax
		jnz	short loc_587
		mov	[esp+0B0h+var_94], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_587:				; CODE XREF: _dgst_main+57Cj
		mov	ecx, offset ??_C@_07MHGMHDIE@?9binary?$AA@ ; "-binary"
		mov	eax, esi
		xchg	ax, ax

loc_590:				; CODE XREF: _dgst_main+5AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5B0
		test	dl, dl
		jz	short loc_5AC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5B0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_590

loc_5AC:				; CODE XREF: _dgst_main+598j
		xor	eax, eax
		jmp	short loc_5B5
; ---------------------------------------------------------------------------

loc_5B0:				; CODE XREF: _dgst_main+594j
					; _dgst_main+5A0j
		sbb	eax, eax
		or	eax, 1

loc_5B5:				; CODE XREF: _dgst_main+5AEj
		test	eax, eax
		jnz	short loc_5C6
		mov	[esp+0B0h+var_94], 1
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_5C6:				; CODE XREF: _dgst_main+5B7j
		mov	ecx, offset ??_C@_02DBLKFNPN@?9d?$AA@ ;	"-d"
		mov	eax, esi
		nop	dword ptr [eax]

loc_5D0:				; CODE XREF: _dgst_main+5EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5F0
		test	dl, dl
		jz	short loc_5EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5D0

loc_5EC:				; CODE XREF: _dgst_main+5D8j
		xor	eax, eax
		jmp	short loc_5F5
; ---------------------------------------------------------------------------

loc_5F0:				; CODE XREF: _dgst_main+5D4j
					; _dgst_main+5E0j
		sbb	eax, eax
		or	eax, 1

loc_5F5:				; CODE XREF: _dgst_main+5EEj
		test	eax, eax
		jnz	short loc_606
		mov	[esp+0B0h+var_3C], 1
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_606:				; CODE XREF: _dgst_main+5F7j
		mov	ecx, offset ??_C@_0BC@FNMAMJJG@?9fips?9fingerprint?$AA@	; "-fips-fingerprint"
		mov	eax, esi
		nop	dword ptr [eax]

loc_610:				; CODE XREF: _dgst_main+62Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_630
		test	dl, dl
		jz	short loc_62C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_630
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_610

loc_62C:				; CODE XREF: _dgst_main+618j
		xor	eax, eax
		jmp	short loc_635
; ---------------------------------------------------------------------------

loc_630:				; CODE XREF: _dgst_main+614j
					; _dgst_main+620j
		sbb	eax, eax
		or	eax, 1

loc_635:				; CODE XREF: _dgst_main+62Ej
		test	eax, eax
		jnz	short loc_646
		mov	[esp+0B0h+var_8C], offset ??_C@_0BB@CGGLALOK@etaonrishdlcupfm?$AA@ ; "etaonrishdlcupfm"
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_646:				; CODE XREF: _dgst_main+637j
		mov	ecx, offset ??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@ ; "-non-fips-allow"
		mov	eax, esi
		nop	dword ptr [eax]

loc_650:				; CODE XREF: _dgst_main+66Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_670
		test	dl, dl
		jz	short loc_66C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_670
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_650

loc_66C:				; CODE XREF: _dgst_main+658j
		xor	eax, eax
		jmp	short loc_675
; ---------------------------------------------------------------------------

loc_670:				; CODE XREF: _dgst_main+654j
					; _dgst_main+660j
		sbb	eax, eax
		or	eax, 1

loc_675:				; CODE XREF: _dgst_main+66Ej
		test	eax, eax
		jnz	short loc_686
		mov	[esp+0B0h+var_80], 1
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_686:				; CODE XREF: _dgst_main+677j
		mov	ecx, offset ??_C@_05JCMEMCJF@?9hmac?$AA@ ; "-hmac"
		mov	eax, esi
		nop	dword ptr [eax]

loc_690:				; CODE XREF: _dgst_main+6AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_6B0
		test	dl, dl
		jz	short loc_6AC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_6B0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_690

loc_6AC:				; CODE XREF: _dgst_main+698j
		xor	eax, eax
		jmp	short loc_6B5
; ---------------------------------------------------------------------------

loc_6B0:				; CODE XREF: _dgst_main+694j
					; _dgst_main+6A0j
		sbb	eax, eax
		or	eax, 1

loc_6B5:				; CODE XREF: _dgst_main+6AEj
		test	eax, eax
		jnz	short loc_6D2
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_8C], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_6D2:				; CODE XREF: _dgst_main+6B7j
		mov	ecx, offset ??_C@_04MOAFFFPK@?9mac?$AA@	; "-mac"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_6E0:				; CODE XREF: _dgst_main+6FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_700
		test	dl, dl
		jz	short loc_6FC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_700
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_6E0

loc_6FC:				; CODE XREF: _dgst_main+6E8j
		xor	eax, eax
		jmp	short loc_705
; ---------------------------------------------------------------------------

loc_700:				; CODE XREF: _dgst_main+6E4j
					; _dgst_main+6F0j
		sbb	eax, eax
		or	eax, 1

loc_705:				; CODE XREF: _dgst_main+6FEj
		test	eax, eax
		jnz	short loc_722
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+0B0h+var_54], eax
		jmp	loc_7F3
; ---------------------------------------------------------------------------

loc_722:				; CODE XREF: _dgst_main+707j
		mov	ecx, offset ??_C@_07FNCAFLJP@?9sigopt?$AA@ ; "-sigopt"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_730:				; CODE XREF: _dgst_main+74Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_750
		test	dl, dl
		jz	short loc_74C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_750
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_730

loc_74C:				; CODE XREF: _dgst_main+738j
		xor	eax, eax
		jmp	short loc_755
; ---------------------------------------------------------------------------

loc_750:				; CODE XREF: _dgst_main+734j
					; _dgst_main+740j
		sbb	eax, eax
		or	eax, 1

loc_755:				; CODE XREF: _dgst_main+74Ej
		test	eax, eax
		jnz	short loc_77F
		dec	ebx
		cmp	ebx, 1
		jl	loc_7FF
		test	ebp, ebp
		jnz	short loc_776
		call	_sk_new_null
		mov	ebp, eax
		test	ebp, ebp
		jz	loc_7FF

loc_776:				; CODE XREF: _dgst_main+765j
		push	dword ptr [edi+4]
		add	edi, 4
		push	ebp
		jmp	short loc_7D1
; ---------------------------------------------------------------------------

loc_77F:				; CODE XREF: _dgst_main+757j
		mov	ecx, offset ??_C@_07HDBCJIKB@?9macopt?$AA@ ; "-macopt"
		mov	eax, esi

loc_786:				; CODE XREF: _dgst_main+7A0j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_7A6
		test	dl, dl
		jz	short loc_7A2
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_7A6
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_786

loc_7A2:				; CODE XREF: _dgst_main+78Ej
		xor	eax, eax
		jmp	short loc_7AB
; ---------------------------------------------------------------------------

loc_7A6:				; CODE XREF: _dgst_main+78Aj
					; _dgst_main+796j
		sbb	eax, eax
		or	eax, 1

loc_7AB:				; CODE XREF: _dgst_main+7A4j
		test	eax, eax
		jnz	short loc_7DF
		dec	ebx
		cmp	ebx, 1
		jl	short loc_7FF
		mov	eax, [esp+0B0h+var_70]
		test	eax, eax
		jnz	short loc_7CA
		call	_sk_new_null
		mov	[esp+0B0h+var_70], eax
		test	eax, eax
		jz	short loc_7FF

loc_7CA:				; CODE XREF: _dgst_main+7BBj
		push	dword ptr [edi+4]
		add	edi, 4
		push	eax

loc_7D1:				; CODE XREF: _dgst_main+77Dj
		call	_sk_push
		add	esp, 8
		test	eax, eax
		jz	short loc_7FF
		jmp	short loc_7F3
; ---------------------------------------------------------------------------

loc_7DF:				; CODE XREF: _dgst_main+7ADj
		lea	eax, [esi+1]
		push	eax
		call	_EVP_get_digestbyname
		add	esp, 4
		test	eax, eax
		jz	short loc_7FF
		mov	[esp+0B0h+var_7C], eax

loc_7F3:				; CODE XREF: _dgst_main+1E3j
					; _dgst_main+221j ...
		dec	ebx
		add	edi, 4
		test	ebx, ebx
		jg	loc_1A0

loc_7FF:				; CODE XREF: _dgst_main+1A5j
					; _dgst_main+25Dj ...
		cmp	[esp+0B0h+var_64], 0
		mov	[esp+0B0h+var_48], ebp
		mov	[esp+0B0h+var_78], edi
		mov	[esp+0B0h+arg_0], ebx
		jz	loc_8ED
		mov	eax, [esp+0B0h+var_50]
		test	eax, eax
		jnz	loc_8ED
		push	offset ??_C@_0DD@GKPODFDO@No?5signature?5to?5verify?3?5use?5the?5@ ; "No signature to verify: use the -signat"...

loc_82A:				; CODE XREF: _dgst_main+AF6j
					; _dgst_main+BC7j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_838:				; CODE XREF: _dgst_main+A5Aj
					; _dgst_main+B99j ...
		mov	ebx, 1

$end$285:				; CODE XREF: _dgst_main+14Ej
					; _dgst_main+FA8j ...
		push	2000h
		push	[esp+0B4h+var_5C]
		call	_OPENSSL_cleanse
		push	[esp+0B8h+var_5C]
		call	_CRYPTO_free
		mov	eax, [esp+0BCh+var_88]
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_868
		push	eax
		call	_BIO_free
		add	esp, 4

loc_868:				; CODE XREF: _dgst_main+85Dj
		mov	ebp, [esp+0B0h+var_48]

loc_86C:				; CODE XREF: _dgst_main+FCj
		mov	eax, [esp+0B0h+var_44]
		test	eax, eax
		jz	short loc_87D
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_87D:				; CODE XREF: _dgst_main+872j
		push	[esp+0B0h+var_74]
		call	_BIO_free_all
		push	[esp+0B4h+var_A0]
		call	_EVP_PKEY_free
		add	esp, 8
		test	ebp, ebp
		jz	short loc_89F
		push	ebp
		call	_sk_free
		add	esp, 4

loc_89F:				; CODE XREF: _dgst_main+894j
		mov	eax, [esp+0B0h+var_70]
		test	eax, eax
		jz	short loc_8B0
		push	eax
		call	_sk_free
		add	esp, 4

loc_8B0:				; CODE XREF: _dgst_main+8A5j
		mov	eax, [esp+0B0h+var_58]
		test	eax, eax
		jz	short loc_8C1
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_8C1:				; CODE XREF: _dgst_main+8B6j
		mov	eax, [esp+0B0h+var_90]
		test	eax, eax
		jz	short loc_8D2
		push	eax
		call	_BIO_free
		add	esp, 4

loc_8D2:				; CODE XREF: _dgst_main+8C7j
		mov	ecx, [esp+0B0h+var_4]
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 0A0h
		retn
; ---------------------------------------------------------------------------

loc_8ED:				; CODE XREF: _dgst_main+813j
					; _dgst_main+81Fj
		test	ebx, ebx
		jle	loc_A5F
		mov	eax, [edi]
		cmp	byte ptr [eax],	2Dh ; '-'
		jnz	loc_A5F
		push	eax
		push	offset ??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@ ; "unknown option '%s'\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0N@NDELNNPO@options?5are?6?$AA@ ; "options	are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DN@FOLCEOOL@?9c?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@ ;	"-c		 to output the digest wi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@GBFCJLIB@?9r?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@ ;	"-r		 to output the digest in"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CG@ENDMFKMC@?9d?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5debug?5@ ;	"-d		 to output debug info\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CE@CLNAEPPP@?9hex?5?5?5?5?5?5?5?5?5?5?5?5output?5as?5hex?5du@ ; "-hex	       output as hex dump\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CH@LAJCNBHL@?9binary?5?5?5?5?5?5?5?5?5output?5in?5binary@	; "-binary	   output in binary form\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CJ@ONPOPFDN@?9hmac?5arg?5?5?5?5?5?5?5set?5the?5HMAC?5key@	; "-hmac arg	   set the HMAC	key to arg"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0CO@PLNAMJPF@?9non?9fips?9allow?5allow?5use?5of?5non@ ; "-non-fips-allow allow use	of non FIPS d"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@BMCAMLFJ@?9sign?5?5?5file?5?5?5?5sign?5digest?5usin@ ;	"-sign	 file	 sign digest using priva"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DN@EFCACMAO@?9verify?5file?5?5?5?5verify?5a?5signatu@ ; "-verify file    verify a	signature usin"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DO@GEMDHAA@?9prverify?5file?5?5verify?5a?5signatu@ ; "-prverify file  verify a signature usin"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@PAGBKFPO@?9keyform?5arg?5?5?5?5key?5file?5format?5@ ; "-keyform arg	key file format	(PEM or"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@ECKLJJDH@?9out?5filename?5?5?5output?5to?5filena@ ; "-out filename   output to	filename rath"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CF@LIPHEFLJ@?9signature?5file?5signature?5to?5ver@ ; "-signature file signature to verify\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CF@EANICGDJ@?9sigopt?5nm?3v?5?5?5?5signature?5parame@ ; "-sigopt nm:v    signature parameter\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CM@HGAGEEFO@?9hmac?5key?5?5?5?5?5?5?5create?5hashed?5MA@ ; "-hmac	key	  create hashed	MAC with "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DE@EAJCPJLC@?9mac?5algorithm?5?5create?5MAC?5?$CInot?5@ ;	"-mac algorithm	 create	MAC (not neccess"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@LDFLCNGL@?9macopt?5nm?3v?5?5?5?5MAC?5algorithm?5pa@ ; "-macopt	nm:v	MAC algorithm parameter"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ ; "-engine e	    use	engine e, possibly "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		push	offset _list_md_fn
		call	_EVP_MD_do_all_sorted
		add	esp, 28h
		jmp	loc_838
; ---------------------------------------------------------------------------

loc_A5F:				; CODE XREF: _dgst_main+8EFj
					; _dgst_main+8FAj
		mov	eax, [esp+0B0h+var_40]
		xor	ecx, ecx
		mov	esi, [esp+0B0h+var_68]
		test	eax, eax
		cmovnz	ecx, [esp+0B0h+var_98]
		mov	[esp+0B0h+var_9C], ecx

loc_A74:				; CODE XREF: _dgst_main+191j
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	[esp+0B4h+var_88], eax
		call	_BIO_f_md
		push	eax
		call	_BIO_new
		mov	edi, eax
		add	esp, 8
		mov	eax, [esp+0B0h+var_88]
		mov	[esp+0B0h+var_90], edi
		test	eax, eax
		jz	loc_10A3
		test	edi, edi
		jz	loc_10A3
		cmp	[esp+0B0h+var_3C], 0
		jz	short loc_ACF
		push	offset _BIO_debug_callback
		push	eax
		call	_BIO_set_callback
		push	dword ptr ds:_bio_err
		push	[esp+0BCh+var_88]
		call	_BIO_set_callback_arg
		add	esp, 10h

loc_ACF:				; CODE XREF: _dgst_main+AB0j
		push	0
		lea	eax, [esp+0B4h+var_44]
		push	eax
		push	0
		push	[esp+0BCh+var_38]
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 14h
		test	eax, eax
		jnz	short loc_AFB
		push	offset ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; "Error getting password\n"
		jmp	loc_82A
; ---------------------------------------------------------------------------

loc_AFB:				; CODE XREF: _dgst_main+AEFj
		cmp	[esp+0B0h+var_94], 0FFFFFFFFh
		jnz	short loc_B0D
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+0B0h+var_94], eax

loc_B0D:				; CODE XREF: _dgst_main+B00j
		mov	eax, [esp+0B0h+var_34]
		test	eax, eax
		jz	short loc_B26
		push	0
		push	dword ptr ds:_bio_err
		push	eax
		call	_app_RAND_load_file
		add	esp, 0Ch

loc_B26:				; CODE XREF: _dgst_main+B13j
		mov	edi, [esp+0B0h+var_30]
		test	edi, edi
		jz	short loc_B52
		cmp	[esp+0B0h+var_94], 0
		jz	short loc_B45
		push	offset ??_C@_02GMLFBBN@wb?$AA@ ; "wb"
		push	edi
		call	_BIO_new_file
		jmp	short loc_B65
; ---------------------------------------------------------------------------

loc_B45:				; CODE XREF: _dgst_main+B36j
		push	offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		push	edi
		call	_BIO_new_file
		jmp	short loc_B65
; ---------------------------------------------------------------------------

loc_B52:				; CODE XREF: _dgst_main+B2Fj
		push	0
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp

loc_B65:				; CODE XREF: _dgst_main+B43j
					; _dgst_main+B50j
		add	esp, 8
		mov	[esp+0B0h+var_74], eax
		test	eax, eax
		jnz	short loc_B9E
		test	edi, edi
		mov	eax, offset ??_C@_08NJHPALLI@?$CIstdout?$CJ?$AA@ ; "(stdout)"
		cmovnz	eax, edi
		push	eax
		push	offset ??_C@_0BO@DPODBOGA@Error?5opening?5output?5file?5?$CFs?6?$AA@ ; "Error opening output file %s\n"

loc_B80:				; CODE XREF: _dgst_main+E7Cj
					; _dgst_main+E87j ...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 10h
		jmp	loc_838
; ---------------------------------------------------------------------------

loc_B9E:				; CODE XREF: _dgst_main+B6Ej
		mov	edi, [esp+0B0h+var_54]
		xor	ecx, ecx
		test	edi, edi
		setnz	cl
		xor	eax, eax
		cmp	[esp+0B0h+var_8C], eax
		setnz	al
		add	ecx, eax
		xor	eax, eax
		test	esi, esi
		setnz	al
		add	ecx, eax
		cmp	ecx, 1
		jle	short loc_BCC
		push	offset ??_C@_0CO@GBKPBPPB@MAC?5and?5Signing?5key?5cannot?5both?5@ ; "MAC and Signing key cannot	both be	spec"...
		jmp	loc_82A
; ---------------------------------------------------------------------------

loc_BCC:				; CODE XREF: _dgst_main+BC0j
		test	esi, esi
		jz	short loc_C1B
		cmp	[esp+0B0h+var_6C], 0
		push	offset ??_C@_08CIIMFNPL@key?5file?$AA@ ; "key file"
		push	[esp+0B4h+var_98]
		jz	short loc_BF6
		push	0
		push	0
		push	[esp+0C0h+var_84]
		push	esi
		push	dword ptr ds:_bio_err
		call	_load_pubkey
		jmp	short loc_C0C
; ---------------------------------------------------------------------------

loc_BF6:				; CODE XREF: _dgst_main+BDEj
		push	[esp+0B8h+var_44]
		push	0
		push	[esp+0C0h+var_84]
		push	esi
		push	dword ptr ds:_bio_err
		call	_load_key

loc_C0C:				; CODE XREF: _dgst_main+BF4j
		add	esp, 1Ch
		mov	[esp+0B0h+var_A0], eax
		test	eax, eax
		jz	loc_838

loc_C1B:				; CODE XREF: _dgst_main+BCEj
		test	edi, edi
		jz	loc_D0C
		xor	ebx, ebx
		mov	[esp+0B0h+var_98], 0
		push	ebx
		push	[esp+0B4h+var_9C]
		lea	eax, [esp+0B8h+var_98]
		push	edi
		push	eax
		push	dword ptr ds:_bio_err
		call	_init_gen_str
		add	esp, 14h
		test	eax, eax
		jz	$mac_end$286
		mov	edi, [esp+0B0h+var_70]
		test	edi, edi
		jz	short loc_C91
		push	edi
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_C91

loc_C65:				; CODE XREF: _dgst_main+C8Fj
		push	esi
		push	edi
		call	_sk_value
		mov	edi, eax
		push	edi
		push	[esp+0BCh+var_98]
		call	_pkey_ctrl_string
		add	esp, 10h
		test	eax, eax
		jle	short loc_CC6
		mov	edi, [esp+0B0h+var_70]
		inc	esi
		push	edi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_C65

loc_C91:				; CODE XREF: _dgst_main+C54j
					; _dgst_main+C63j
		lea	eax, [esp+0B0h+var_A0]
		push	eax
		push	[esp+0B4h+var_98]
		call	_EVP_PKEY_keygen
		add	esp, 8
		test	eax, eax
		jg	short loc_CE7
		push	offset ??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@	; "Error generating key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	short $mac_end$286
; ---------------------------------------------------------------------------

loc_CC6:				; CODE XREF: _dgst_main+C7Dj
		push	edi
		push	offset ??_C@_0BK@CMBNPJKN@MAC?5parameter?5error?5?$CC?$CFs?$CC?6?$AA@ ;	"MAC parameter error \"%s\"\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 10h
		jmp	short $mac_end$286
; ---------------------------------------------------------------------------

loc_CE7:				; CODE XREF: _dgst_main+CA4j
		mov	ebx, 1

$mac_end$286:				; CODE XREF: _dgst_main+C48j
					; _dgst_main+CC4j ...
		mov	eax, [esp+0B0h+var_98]
		test	eax, eax
		jz	short loc_CFD
		push	eax
		call	_EVP_PKEY_CTX_free
		add	esp, 4

loc_CFD:				; CODE XREF: _dgst_main+CF2j
		test	ebx, ebx
		jz	loc_838
		mov	ebx, [esp+0B0h+arg_0]

loc_D0C:				; CODE XREF: _dgst_main+C1Dj
		cmp	[esp+0B0h+var_80], 0
		mov	edi, [esp+0B0h+var_90]
		jz	short loc_D34
		lea	eax, [esp+0B0h+var_80]
		push	eax
		push	0
		push	78h ; 'x'
		push	edi
		call	_BIO_ctrl
		push	8
		push	[esp+0C4h+var_80]
		call	_EVP_MD_CTX_set_flags
		add	esp, 18h

loc_D34:				; CODE XREF: _dgst_main+D15j
		mov	eax, [esp+0B0h+var_8C]
		test	eax, eax
		jz	short loc_D5F
		mov	esi, [esp+0B0h+var_9C]
		push	0FFFFFFFFh
		push	eax
		push	esi
		push	357h
		call	_EVP_PKEY_new_mac_key
		add	esp, 10h
		mov	[esp+0B0h+var_A0], eax
		test	eax, eax
		jz	loc_838
		jmp	short loc_D6E
; ---------------------------------------------------------------------------

loc_D5F:				; CODE XREF: _dgst_main+D3Aj
		cmp	[esp+0B0h+var_A0], 0
		jz	loc_E8C
		mov	esi, [esp+0B0h+var_9C]

loc_D6E:				; CODE XREF: _dgst_main+D5Dj
		lea	eax, [esp+0B0h+var_84]
		mov	[esp+0B0h+var_84], 0
		push	eax
		push	0
		push	78h ; 'x'
		push	edi
		mov	[esp+0C0h+var_8C], 0
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jnz	short loc_DB7

loc_D94:				; CODE XREF: _dgst_main+EA8j
		push	offset ??_C@_0BH@HIAIGHKF@Error?5getting?5context?6?$AA@ ; "Error getting context\n"

loc_D99:				; CODE XREF: _dgst_main+DE8j
					; _dgst_main+EF3j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_838
; ---------------------------------------------------------------------------

loc_DB7:				; CODE XREF: _dgst_main+D92j
		cmp	[esp+0B0h+var_64], 0
		lea	eax, [esp+0B0h+var_8C]
		push	[esp+0B0h+var_A0]
		push	esi
		push	[esp+0B8h+var_7C]
		push	eax
		push	[esp+0C0h+var_84]
		jz	short loc_DD7
		call	_EVP_DigestVerifyInit
		jmp	short loc_DDC
; ---------------------------------------------------------------------------

loc_DD7:				; CODE XREF: _dgst_main+DCEj
		call	_EVP_DigestSignInit

loc_DDC:				; CODE XREF: _dgst_main+DD5j
		add	esp, 14h
		test	eax, eax
		jnz	short loc_DEA
		push	offset ??_C@_0BH@BMFBNJBH@Error?5setting?5context?6?$AA@ ; "Error setting context\n"
		jmp	short loc_D99
; ---------------------------------------------------------------------------

loc_DEA:				; CODE XREF: _dgst_main+DE1j
		test	ebp, ebp
		jz	short loc_E2C
		push	ebp
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_E2C
		nop	dword ptr [eax]

loc_E00:				; CODE XREF: _dgst_main+E26j
		push	esi
		push	ebp
		call	_sk_value
		mov	edi, eax
		push	edi
		push	[esp+0BCh+var_8C]
		call	_pkey_ctrl_string
		add	esp, 10h
		test	eax, eax
		jle	short loc_E81
		push	ebp
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_E00
		mov	edi, [esp+0B0h+var_90]

loc_E2C:				; CODE XREF: _dgst_main+DECj
					; _dgst_main+DFBj ...
		mov	ebp, [esp+0B0h+var_50]
		test	ebp, ebp
		jz	loc_F22
		cmp	[esp+0B0h+var_A0], 0
		jz	loc_F22
		push	offset ??_C@_02JDPG@rb?$AA@ ; `string'
		push	ebp
		call	_BIO_new_file
		push	[esp+0B8h+var_A0]
		mov	esi, eax
		call	_EVP_PKEY_size
		push	1C9h
		mov	edi, eax
		push	offset ??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@	; ".\\apps\\dgst.c"
		push	edi
		call	_CRYPTO_malloc
		add	esp, 18h
		mov	[esp+0B0h+var_58], eax
		test	esi, esi
		jnz	short loc_EEA
		push	ebp
		push	offset ??_C@_0CB@GJFPMJA@Error?5opening?5signature?5file?5?$CFs?6@ ; "Error opening signature file %s\n"
		jmp	loc_B80
; ---------------------------------------------------------------------------

loc_E81:				; CODE XREF: _dgst_main+E18j
		push	edi
		push	offset ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@ ; "parameter error \"%s\"\n"
		jmp	loc_B80
; ---------------------------------------------------------------------------

loc_E8C:				; CODE XREF: _dgst_main+D64j
		lea	eax, [esp+0B0h+var_80]
		mov	[esp+0B0h+var_80], 0
		push	eax
		push	0
		push	78h ; 'x'
		push	edi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jz	loc_D94
		mov	eax, [esp+0B0h+var_7C]
		test	eax, eax
		jnz	short loc_EBF
		call	_EVP_md5
		mov	[esp+0B0h+var_7C], eax

loc_EBF:				; CODE XREF: _dgst_main+EB4j
		push	[esp+0B0h+var_9C]
		push	eax
		push	[esp+0B8h+var_80]
		call	_EVP_DigestInit_ex
		add	esp, 0Ch
		test	eax, eax
		jnz	loc_E2C
		lea	eax, [esp+0B0h+var_2C]
		push	eax
		push	offset ??_C@_0BJ@CIENJBPC@Error?5setting?5digest?5?$CFs?6?$AA@ ; "Error	setting	digest %s\n"
		jmp	loc_B80
; ---------------------------------------------------------------------------

loc_EEA:				; CODE XREF: _dgst_main+E74j
		test	eax, eax
		jnz	short loc_EF8
		push	offset ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; "Out of memory\n"
		jmp	loc_D99
; ---------------------------------------------------------------------------

loc_EF8:				; CODE XREF: _dgst_main+EECj
		push	edi
		push	eax
		push	esi
		call	_BIO_read
		mov	edi, eax
		push	esi
		mov	[esp+0C0h+var_4C], edi
		call	_BIO_free
		add	esp, 10h
		test	edi, edi
		jg	short loc_F1E
		push	ebp
		push	offset ??_C@_0CB@CPOCADA@Error?5reading?5signature?5file?5?$CFs?6@ ; "Error reading signature file %s\n"
		jmp	loc_B80
; ---------------------------------------------------------------------------

loc_F1E:				; CODE XREF: _dgst_main+F11j
		mov	edi, [esp+0B0h+var_90]

loc_F22:				; CODE XREF: _dgst_main+E32j
					; _dgst_main+E3Dj
		push	[esp+0B0h+var_88]
		push	edi
		call	_BIO_push
		mov	esi, [esp+0B8h+var_7C]
		add	esp, 8
		mov	ebp, eax
		test	esi, esi
		jnz	short loc_F55
		lea	eax, [esp+0B0h+var_54]
		push	eax
		push	esi
		push	78h ; 'x'
		push	edi
		call	_BIO_ctrl
		push	[esp+0C0h+var_54]
		call	_EVP_MD_CTX_md
		add	esp, 14h
		mov	esi, eax

loc_F55:				; CODE XREF: _dgst_main+F37j
		test	ebx, ebx
		jnz	short loc_FAD
		push	ebx
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	ebx
		push	6Ah ; 'j'
		push	[esp+0C0h+var_88]
		call	_BIO_ctrl
		push	edi
		push	offset ??_C@_05MHOFLBOO@stdin?$AA@ ; "stdin"
		push	ebx
		push	ebx
		push	[esp+0D4h+var_4C]
		push	[esp+0D8h+var_58]
		push	[esp+0DCh+var_A0]
		push	[esp+0E0h+var_94]
		push	[esp+0E4h+var_60]
		push	ebp
		push	[esp+0ECh+var_5C]
		push	[esp+0F0h+var_74]
		call	_do_fp
		add	esp, 44h
		mov	ebx, eax
		jmp	$end$285
; ---------------------------------------------------------------------------

loc_FAD:				; CODE XREF: _dgst_main+F57j
		xor	ebx, ebx
		mov	[esp+0B0h+var_6C], ebx
		cmp	[esp+0B0h+var_94], ebx
		jnz	short loc_FF5
		mov	eax, [esp+0B0h+var_A0]
		test	eax, eax
		jz	short loc_FE0
		push	eax
		call	_EVP_PKEY_get0_asn1
		add	esp, 4
		test	eax, eax
		jz	short loc_FE0
		push	eax
		lea	eax, [esp+0B4h+var_6C]
		push	eax
		push	ebx
		push	ebx
		push	ebx
		push	ebx
		call	_EVP_PKEY_asn1_get0_info
		add	esp, 18h

loc_FE0:				; CODE XREF: _dgst_main+FBFj
					; _dgst_main+FCCj
		test	esi, esi
		jz	short loc_FF5
		push	esi
		call	_EVP_MD_type
		push	eax
		call	_OBJ_nid2sn
		add	esp, 8
		mov	ebx, eax

loc_FF5:				; CODE XREF: _dgst_main+FB7j
					; _dgst_main+FE2j
		xor	esi, esi
		mov	[esp+0B0h+var_9C], 0
		cmp	[esp+0B0h+arg_0], esi
		jle	loc_10B6
		mov	edi, dword ptr ds:__imp__perror

loc_1012:				; CODE XREF: _dgst_main+1094j
		mov	eax, [esp+0B0h+var_78]
		push	dword ptr [eax+esi*4]
		push	3
		push	6Ch ; 'l'
		push	[esp+0BCh+var_88]
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		mov	eax, [esp+0B0h+var_78]
		jg	short loc_103F
		push	dword ptr [eax+esi*4] ;	ErrMsg
		call	edi ; __imp__perror
		add	esp, 4
		inc	[esp+0B0h+var_9C]
		jmp	short loc_108C
; ---------------------------------------------------------------------------

loc_103F:				; CODE XREF: _dgst_main+102Fj
		push	[esp+0B0h+var_90]
		push	dword ptr [eax+esi*4]
		push	ebx
		push	[esp+0BCh+var_6C]
		push	[esp+0C0h+var_4C]
		push	[esp+0C4h+var_58]
		push	[esp+0C8h+var_A0]
		push	[esp+0CCh+var_94]
		push	[esp+0D0h+var_60]
		push	ebp
		push	[esp+0D8h+var_5C]
		push	[esp+0DCh+var_74]
		call	_do_fp
		mov	ecx, [esp+0E0h+var_9C]
		test	eax, eax
		push	0
		push	0
		push	1
		push	[esp+0ECh+var_90]
		cmovnz	ecx, eax
		mov	[esp+0F0h+var_9C], ecx
		call	_BIO_ctrl
		add	esp, 40h

loc_108C:				; CODE XREF: _dgst_main+103Dj
		inc	esi
		cmp	esi, [esp+0B0h+arg_0]
		jl	loc_1012
		mov	ebx, [esp+0B0h+var_9C]
		jmp	$end$285
; ---------------------------------------------------------------------------

loc_10A3:				; CODE XREF: _dgst_main+A9Dj
					; _dgst_main+AA5j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		jmp	loc_838
; ---------------------------------------------------------------------------

loc_10B6:				; CODE XREF: _dgst_main+1006j
		xor	ebx, ebx
		jmp	$end$285
_dgst_main	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10C0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _do_fp
_do_fp		proc near		; CODE XREF: _dgst_main+F9Ep
					; _dgst_main+1068p

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h
arg_20		= dword	ptr  24h
arg_24		= dword	ptr  28h
arg_28		= dword	ptr  2Ch

		mov	eax, 8
		call	__chkstk
		push	ebx
		mov	ebx, [esp+0Ch+arg_4]
		push	esi
		mov	esi, [esp+10h+arg_8]
		push	2000h
		push	ebx
		push	esi
		call	_BIO_read
		add	esp, 0Ch
		test	eax, eax
		js	short loc_10FC

loc_10E7:				; CODE XREF: _do_fp+3Aj
		jz	short loc_1129
		push	2000h
		push	ebx
		push	esi
		call	_BIO_read
		add	esp, 0Ch
		test	eax, eax
		jns	short loc_10E7

loc_10FC:				; CODE XREF: _do_fp+25j
		push	[esp+10h+arg_28]
		push	offset ??_C@_0BC@DKNKBAL@Read?5Error?5in?5?$CFs?6?$AA@ ; "Read Error in	%s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 10h
		mov	eax, 1
		pop	esi
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_1129:				; CODE XREF: _do_fp:loc_10E7j
		push	edi
		mov	edi, [esp+14h+arg_18]
		test	edi, edi
		jz	short loc_1196
		lea	eax, [esp+14h+var_4]
		push	eax
		push	0
		push	78h ; 'x'
		push	esi
		call	_BIO_ctrl
		push	[esp+24h+arg_1C]
		push	edi
		push	[esp+2Ch+var_4]
		call	_EVP_DigestVerifyFinal
		add	esp, 1Ch
		test	eax, eax
		jle	short loc_1170
		push	offset ??_C@_0N@EMAJAODF@Verified?5OK?6?$AA@ ; "Verified OK\n"
		push	[esp+18h+arg_0]
		call	_BIO_printf
		add	esp, 8
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_1170:				; CODE XREF: _do_fp+94j
		jnz	short loc_118F
		push	offset ??_C@_0BG@PBEFODBB@Verification?5Failure?6?$AA@ ; "Verification Failure\n"
		push	[esp+18h+arg_0]
		call	_BIO_printf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_118F:				; CODE XREF: _do_fp:loc_1170j
		push	offset ??_C@_0BG@DEPCNIJM@Error?5Verifying?5Data?6?$AA@	; "Error Verifying Data\n"
		jmp	short loc_11CF
; ---------------------------------------------------------------------------

loc_1196:				; CODE XREF: _do_fp+70j
		cmp	[esp+14h+arg_14], 0
		jz	short loc_1216
		lea	eax, [esp+14h+var_4]
		push	eax
		push	0
		push	78h ; 'x'
		push	esi
		call	_BIO_ctrl
		lea	eax, [esp+24h+var_8]
		mov	[esp+24h+var_8], 2000h
		push	eax
		push	ebx
		push	[esp+2Ch+var_4]
		call	_EVP_DigestSignFinal
		add	esp, 1Ch
		test	eax, eax
		jnz	short loc_11F4
		push	offset ??_C@_0BE@MGCALGC@Error?5Signing?5Data?6?$AA@ ; "Error Signing Data\n"

loc_11CF:				; CODE XREF: _do_fp+D4j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_11F4:				; CODE XREF: _do_fp+108j
		mov	eax, [esp+14h+var_8]

loc_11F8:				; CODE XREF: _do_fp+16Bj
		cmp	[esp+14h+arg_10], 0
		jz	short loc_1247
		push	eax
		push	ebx
		push	[esp+1Ch+arg_0]
		call	_BIO_write
		add	esp, 0Ch
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_1216:				; CODE XREF: _do_fp+DBj
		push	2000h
		push	ebx
		push	esi
		call	_BIO_gets
		add	esp, 0Ch
		mov	[esp+14h+var_8], eax
		test	eax, eax
		jns	short loc_11F8
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_1247:				; CODE XREF: _do_fp+13Dj
		mov	edi, [esp+14h+arg_0]
		push	ebp
		mov	ebp, [esp+18h+arg_C]
		cmp	ebp, 2
		jnz	short loc_1296
		xor	esi, esi
		test	eax, eax
		jle	short loc_127A
		nop	dword ptr [eax+eax+00h]

loc_1260:				; CODE XREF: _do_fp+1B8j
		movzx	eax, byte ptr [esi+ebx]
		push	eax
		push	offset ??_C@_04NOJCDH@?$CF02x?$AA@ ; "%02x"
		push	edi
		call	_BIO_printf
		inc	esi
		add	esp, 0Ch
		cmp	esi, [esp+18h+var_8]
		jl	short loc_1260

loc_127A:				; CODE XREF: _do_fp+199j
		push	[esp+18h+arg_28]
		push	offset ??_C@_05PJFEANEA@?5?$CK?$CFs?6?$AA@ ; " *%s\n"
		push	edi
		call	_BIO_printf
		add	esp, 0Ch
		xor	eax, eax
		pop	ebp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_1296:				; CODE XREF: _do_fp+193j
		mov	eax, [esp+18h+arg_20]
		test	eax, eax
		jz	loc_1328
		push	eax
		push	edi
		call	_BIO_puts
		mov	eax, [esp+20h+arg_24]
		add	esp, 8
		test	eax, eax
		jz	short loc_12C3
		push	eax
		push	offset ??_C@_03LGHHPJDO@?9?$CFs?$AA@ ; `string'
		push	edi
		call	_BIO_printf
		add	esp, 0Ch

loc_12C3:				; CODE XREF: _do_fp+1F2j _do_fp+26Ej
		push	[esp+18h+arg_28]
		push	offset ??_C@_06BDNPOLDF@?$CI?$CFs?$CJ?$DN?5?$AA@ ; "(%s)= "
		push	edi
		call	_BIO_printf
		add	esp, 0Ch

loc_12D5:				; CODE XREF: _do_fp+283j
		xor	esi, esi
		cmp	[esp+18h+var_8], esi
		jle	short loc_1310
		nop	dword ptr [eax]

loc_12E0:				; CODE XREF: _do_fp+24Ej
		test	ebp, ebp
		jz	short loc_12F6
		test	esi, esi
		jz	short loc_12F6
		push	offset ??_C@_01JLIPDDHJ@?3?$AA@	; `string'
		push	edi
		call	_BIO_printf
		add	esp, 8

loc_12F6:				; CODE XREF: _do_fp+222j _do_fp+226j
		movzx	eax, byte ptr [esi+ebx]
		push	eax
		push	offset ??_C@_04NOJCDH@?$CF02x?$AA@ ; "%02x"
		push	edi
		call	_BIO_printf
		inc	esi
		add	esp, 0Ch
		cmp	esi, [esp+18h+var_8]
		jl	short loc_12E0

loc_1310:				; CODE XREF: _do_fp+21Bj
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	edi
		call	_BIO_printf
		add	esp, 8
		xor	eax, eax
		pop	ebp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_1328:				; CODE XREF: _do_fp+1DCj
		mov	eax, [esp+18h+arg_24]
		test	eax, eax
		jz	short loc_12C3
		push	[esp+18h+arg_28]
		push	eax
		push	offset ??_C@_08ICADHBHK@?$CFs?$CI?$CFs?$CJ?$DN?5?$AA@ ;	"%s(%s)= "
		push	edi
		call	_BIO_printf
		add	esp, 10h
		jmp	short loc_12D5
_do_fp		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1348h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_list_md_fn	proc near		; DATA XREF: _dgst_main+A4Do

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_C		= dword	ptr  10h

		push	edi
		mov	edi, [esp+4+arg_0]
		test	edi, edi
		jz	loc_13DA
		push	esi
		push	edi
		call	_EVP_MD_type
		push	eax
		call	_OBJ_nid2ln
		mov	ecx, [esp+10h+arg_4]
		add	esp, 8
		mov	esi, eax
		mov	edx, esi
		push	ebx

loc_136E:				; CODE XREF: _list_md_fn+40j
		mov	bl, [ecx]
		cmp	bl, [edx]
		jnz	short loc_138E
		test	bl, bl
		jz	short loc_138A
		mov	al, [ecx+1]
		cmp	al, [edx+1]
		jnz	short loc_138E
		add	ecx, 2
		add	edx, 2
		test	al, al
		jnz	short loc_136E

loc_138A:				; CODE XREF: _list_md_fn+2Ej
		xor	eax, eax
		jmp	short loc_1393
; ---------------------------------------------------------------------------

loc_138E:				; CODE XREF: _list_md_fn+2Aj
					; _list_md_fn+36j
		sbb	eax, eax
		or	eax, 1

loc_1393:				; CODE XREF: _list_md_fn+44j
		pop	ebx
		test	eax, eax
		jnz	short loc_13D9
		push	edi
		call	_EVP_MD_flags
		add	esp, 4
		test	al, 2
		jnz	short loc_13D9
		push	20h ; ' '       ; Val
		push	esi		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		test	eax, eax
		jz	short loc_13C6
		push	edi
		call	_EVP_MD_type
		push	eax
		call	_OBJ_nid2sn
		add	esp, 8
		mov	esi, eax

loc_13C6:				; CODE XREF: _list_md_fn+6Bj
		push	esi
		push	esi
		push	offset ??_C@_0CP@GAPFEHMI@?9?$CF?914s?5to?5use?5the?5?$CFs?5message?5dig@ ; "-%-14s to use the %s message digest alg"...
		push	[esp+14h+arg_C]
		call	_BIO_printf
		add	esp, 10h

loc_13D9:				; CODE XREF: _list_md_fn+4Ej
					; _list_md_fn+5Bj
		pop	esi

loc_13DA:				; CODE XREF: _list_md_fn+7j
		pop	edi
		retn
_list_md_fn	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13DCh
; COMDAT (pick any)
		public ??_C@_0CP@GAPFEHMI@?9?$CF?914s?5to?5use?5the?5?$CFs?5message?5dig@
; `string'
??_C@_0CP@GAPFEHMI@?9?$CF?914s?5to?5use?5the?5?$CFs?5message?5dig@ db '-%-14s to use the %s message digest algorithm',0Ah,0
					; DATA XREF: _list_md_fn+80o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 140Ch
; COMDAT (pick any)
		public ??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@
; `string'
??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@ db '.\apps\dgst.c',0 ; DATA XREF: _dgst_main+34o
					; _dgst_main+E60o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 141Ch
; COMDAT (pick any)
		public ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
; `string'
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ db 'out of memory',0Ah,0
					; DATA XREF: _dgst_main+E9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 142Ch
; COMDAT (pick any)
		public ??_C@_02HOPLMLDK@?9c?$AA@
; `string'
??_C@_02HOPLMLDK@?9c?$AA@ db 2Dh, 63h, 0 ; DATA	XREF: _dgst_main+1ABo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1430h
; COMDAT (pick any)
		public ??_C@_02CNCCOICK@?9r?$AA@
; `string'
??_C@_02CNCCOICK@?9r?$AA@ db 2Dh, 72h, 0 ; DATA	XREF: _dgst_main:loc_1E8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1434h
; COMDAT (pick any)
		public ??_C@_05LGFPCDPE@?9rand?$AA@
; `string'
??_C@_05LGFPCDPE@?9rand?$AA@ db	'-rand',0 ; DATA XREF: _dgst_main:loc_226o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 143Ch
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _dgst_main:loc_272o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1444h
; COMDAT (pick any)
		public ??_C@_05LLLFPBKO@?9sign?$AA@
; `string'
??_C@_05LLLFPBKO@?9sign?$AA@ db	'-sign',0 ; DATA XREF: _dgst_main:loc_2C5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 144Ch
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _dgst_main:loc_312o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1454h
; COMDAT (pick any)
		public ??_C@_07FILEFCOC@?9verify?$AA@
; `string'
??_C@_07FILEFCOC@?9verify?$AA@ db '-verify',0 ; DATA XREF: _dgst_main:loc_362o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 145Ch
; COMDAT (pick any)
		public ??_C@_09BIBKEPCC@?9prverify?$AA@
; `string'
??_C@_09BIBKEPCC@?9prverify?$AA@ db '-prverify',0 ; DATA XREF: _dgst_main:loc_3C2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1468h
; COMDAT (pick any)
		public ??_C@_0L@OJINPCDP@?9signature?$AA@
; `string'
??_C@_0L@OJINPCDP@?9signature?$AA@ db '-signature',0 ; DATA XREF: _dgst_main:loc_41Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1474h
; COMDAT (pick any)
		public ??_C@_08OAHLMBGP@?9keyform?$AA@
; `string'
??_C@_08OAHLMBGP@?9keyform?$AA@	db '-keyform',0 ; DATA XREF: _dgst_main:loc_463o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1480h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _dgst_main:loc_4BAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1488h
; COMDAT (pick any)
		public ??_C@_0N@FEJBABNG@?9engine_impl?$AA@
; `string'
??_C@_0N@FEJBABNG@?9engine_impl?$AA@ db	'-engine_impl',0 ; DATA XREF: _dgst_main:loc_511o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1498h
; COMDAT (pick any)
		public ??_C@_04FHOEMGIO@?9hex?$AA@
; `string'
??_C@_04FHOEMGIO@?9hex?$AA@ db '-hex',0 ; DATA XREF: _dgst_main:loc_54Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14A0h
; COMDAT (pick any)
		public ??_C@_07MHGMHDIE@?9binary?$AA@
; `string'
??_C@_07MHGMHDIE@?9binary?$AA@ db '-binary',0 ; DATA XREF: _dgst_main:loc_587o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14A8h
; COMDAT (pick any)
		public ??_C@_02DBLKFNPN@?9d?$AA@
; `string'
??_C@_02DBLKFNPN@?9d?$AA@ db '-d',0     ; DATA XREF: _dgst_main:loc_5C6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14ACh
; COMDAT (pick any)
		public ??_C@_0BC@FNMAMJJG@?9fips?9fingerprint?$AA@
; `string'
??_C@_0BC@FNMAMJJG@?9fips?9fingerprint?$AA@ db '-fips-fingerprint',0
					; DATA XREF: _dgst_main:loc_606o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14C0h
; COMDAT (pick any)
		public ??_C@_0BB@CGGLALOK@etaonrishdlcupfm?$AA@
; `string'
??_C@_0BB@CGGLALOK@etaonrishdlcupfm?$AA@ db 'etaonrishdlcupfm',0
					; DATA XREF: _dgst_main+639o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14D4h
; COMDAT (pick any)
		public ??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@
; `string'
??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@ db '-non-fips-allow',0
					; DATA XREF: _dgst_main:loc_646o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14E4h
; COMDAT (pick any)
		public ??_C@_05JCMEMCJF@?9hmac?$AA@
; `string'
??_C@_05JCMEMCJF@?9hmac?$AA@ db	'-hmac',0 ; DATA XREF: _dgst_main:loc_686o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14ECh
; COMDAT (pick any)
		public ??_C@_04MOAFFFPK@?9mac?$AA@
; `string'
??_C@_04MOAFFFPK@?9mac?$AA@ db '-mac',0 ; DATA XREF: _dgst_main:loc_6D2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14F4h
; COMDAT (pick any)
		public ??_C@_07FNCAFLJP@?9sigopt?$AA@
; `string'
??_C@_07FNCAFLJP@?9sigopt?$AA@ db '-sigopt',0 ; DATA XREF: _dgst_main:loc_722o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14FCh
; COMDAT (pick any)
		public ??_C@_07HDBCJIKB@?9macopt?$AA@
; `string'
??_C@_07HDBCJIKB@?9macopt?$AA@ db '-macopt',0 ; DATA XREF: _dgst_main:loc_77Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1504h
; COMDAT (pick any)
		public ??_C@_0DD@GKPODFDO@No?5signature?5to?5verify?3?5use?5the?5@
; `string'
??_C@_0DD@GKPODFDO@No?5signature?5to?5verify?3?5use?5the?5@ db 'No signature to verify: use the -signature option',0Ah,0
					; DATA XREF: _dgst_main+825o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1538h
; COMDAT (pick any)
		public ??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@
; `string'
??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@ db	'unknown option ',27h,'%s',27h,0Ah,0
					; DATA XREF: _dgst_main+901o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1550h
; COMDAT (pick any)
		public ??_C@_0N@NDELNNPO@options?5are?6?$AA@
; `string'
??_C@_0N@NDELNNPO@options?5are?6?$AA@ db 'options are',0Ah,0 ; DATA XREF: _dgst_main+911o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1560h
; COMDAT (pick any)
		public ??_C@_0DN@FOLCEOOL@?9c?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@
; `string'
??_C@_0DN@FOLCEOOL@?9c?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@ db '-c              to output the digest with separating colons',0Ah,0
					; DATA XREF: _dgst_main+921o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 15A0h
; COMDAT (pick any)
		public ??_C@_0DK@GBFCJLIB@?9r?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@
; `string'
??_C@_0DK@GBFCJLIB@?9r?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@ db '-r              to output the digest in coreutils format',0Ah,0
					; DATA XREF: _dgst_main+931o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 15DCh
; COMDAT (pick any)
		public ??_C@_0CG@ENDMFKMC@?9d?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5debug?5@
; `string'
??_C@_0CG@ENDMFKMC@?9d?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5debug?5@ db '-d              to output debug info',0Ah,0
					; DATA XREF: _dgst_main+941o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1604h
; COMDAT (pick any)
		public ??_C@_0CE@CLNAEPPP@?9hex?5?5?5?5?5?5?5?5?5?5?5?5output?5as?5hex?5du@
; `string'
??_C@_0CE@CLNAEPPP@?9hex?5?5?5?5?5?5?5?5?5?5?5?5output?5as?5hex?5du@ db	'-hex            output as hex dump',0Ah,0
					; DATA XREF: _dgst_main+951o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1628h
; COMDAT (pick any)
		public ??_C@_0CH@LAJCNBHL@?9binary?5?5?5?5?5?5?5?5?5output?5in?5binary@
; `string'
??_C@_0CH@LAJCNBHL@?9binary?5?5?5?5?5?5?5?5?5output?5in?5binary@ db '-binary         output in binary form',0Ah,0
					; DATA XREF: _dgst_main+961o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1650h
; COMDAT (pick any)
		public ??_C@_0CJ@ONPOPFDN@?9hmac?5arg?5?5?5?5?5?5?5set?5the?5HMAC?5key@
; `string'
??_C@_0CJ@ONPOPFDN@?9hmac?5arg?5?5?5?5?5?5?5set?5the?5HMAC?5key@ db '-hmac arg       set the HMAC key to arg',0Ah,0
					; DATA XREF: _dgst_main+971o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 167Ch
; COMDAT (pick any)
		public ??_C@_0CO@PLNAMJPF@?9non?9fips?9allow?5allow?5use?5of?5non@
; `string'
??_C@_0CO@PLNAMJPF@?9non?9fips?9allow?5allow?5use?5of?5non@ db '-non-fips-allow allow use of non FIPS digest',0Ah,0
					; DATA XREF: _dgst_main+984o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16ACh
; COMDAT (pick any)
		public ??_C@_0DH@BMCAMLFJ@?9sign?5?5?5file?5?5?5?5sign?5digest?5usin@
; `string'
??_C@_0DH@BMCAMLFJ@?9sign?5?5?5file?5?5?5?5sign?5digest?5usin@ db '-sign   file    sign digest using private key in file',0Ah,0
					; DATA XREF: _dgst_main+994o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16E4h
; COMDAT (pick any)
		public ??_C@_0DN@EFCACMAO@?9verify?5file?5?5?5?5verify?5a?5signatu@
; `string'
??_C@_0DN@EFCACMAO@?9verify?5file?5?5?5?5verify?5a?5signatu@ db	'-verify file    verify a signature using public key in file',0Ah,0
					; DATA XREF: _dgst_main+9A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1724h
; COMDAT (pick any)
		public ??_C@_0DO@GEMDHAA@?9prverify?5file?5?5verify?5a?5signatu@
; `string'
??_C@_0DO@GEMDHAA@?9prverify?5file?5?5verify?5a?5signatu@ db '-prverify file  verify a signature using private key in file',0Ah,0
					; DATA XREF: _dgst_main+9B4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1764h
; COMDAT (pick any)
		public ??_C@_0DB@PAGBKFPO@?9keyform?5arg?5?5?5?5key?5file?5format?5@
; `string'
??_C@_0DB@PAGBKFPO@?9keyform?5arg?5?5?5?5key?5file?5format?5@ db '-keyform arg    key file format (PEM or ENGINE)',0Ah,0
					; DATA XREF: _dgst_main+9C4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1798h
; COMDAT (pick any)
		public ??_C@_0DH@ECKLJJDH@?9out?5filename?5?5?5output?5to?5filena@
; `string'
??_C@_0DH@ECKLJJDH@?9out?5filename?5?5?5output?5to?5filena@ db '-out filename   output to filename rather than stdout',0Ah,0
					; DATA XREF: _dgst_main+9D4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 17D0h
; COMDAT (pick any)
		public ??_C@_0CF@LIPHEFLJ@?9signature?5file?5signature?5to?5ver@
; `string'
??_C@_0CF@LIPHEFLJ@?9signature?5file?5signature?5to?5ver@ db '-signature file signature to verify',0Ah,0
					; DATA XREF: _dgst_main+9E4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 17F8h
; COMDAT (pick any)
		public ??_C@_0CF@EANICGDJ@?9sigopt?5nm?3v?5?5?5?5signature?5parame@
; `string'
??_C@_0CF@EANICGDJ@?9sigopt?5nm?3v?5?5?5?5signature?5parame@ db	'-sigopt nm:v    signature parameter',0Ah,0
					; DATA XREF: _dgst_main+9F4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1820h
; COMDAT (pick any)
		public ??_C@_0CM@HGAGEEFO@?9hmac?5key?5?5?5?5?5?5?5create?5hashed?5MA@
; `string'
??_C@_0CM@HGAGEEFO@?9hmac?5key?5?5?5?5?5?5?5create?5hashed?5MA@	db '-hmac key       create hashed MAC with key',0Ah,0
					; DATA XREF: _dgst_main+A07o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 184Ch
; COMDAT (pick any)
		public ??_C@_0DE@EAJCPJLC@?9mac?5algorithm?5?5create?5MAC?5?$CInot?5@
; `string'
??_C@_0DE@EAJCPJLC@?9mac?5algorithm?5?5create?5MAC?5?$CInot?5@ db '-mac algorithm  create MAC (not neccessarily HMAC)',0Ah,0
					; DATA XREF: _dgst_main+A17o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1880h
; COMDAT (pick any)
		public ??_C@_0DB@LDFLCNGL@?9macopt?5nm?3v?5?5?5?5MAC?5algorithm?5pa@
; `string'
??_C@_0DB@LDFLCNGL@?9macopt?5nm?3v?5?5?5?5MAC?5algorithm?5pa@ db '-macopt nm:v    MAC algorithm parameters or key',0Ah,0
					; DATA XREF: _dgst_main+A27o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18B4h
; COMDAT (pick any)
		public ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
; `string'
??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ db '-engine e       use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _dgst_main+A37o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18F0h
; COMDAT (pick any)
		public ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; `string'
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ db 'Error getting password',0Ah,0
					; DATA XREF: _dgst_main+AF1o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1908h
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 'wb',0       ; DATA XREF: _dgst_main+B38o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 190Ch
; COMDAT (pick any)
		public ??_C@_01NOFIACDB@w?$AA@
; `string'
??_C@_01NOFIACDB@w?$AA@	db 77h,	0	; DATA XREF: _dgst_main:loc_B45o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1910h
; COMDAT (pick any)
		public ??_C@_08NJHPALLI@?$CIstdout?$CJ?$AA@
; `string'
??_C@_08NJHPALLI@?$CIstdout?$CJ?$AA@ db	'(stdout)',0 ; DATA XREF: _dgst_main+B72o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 191Ch
; COMDAT (pick any)
		public ??_C@_0BO@DPODBOGA@Error?5opening?5output?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BO@DPODBOGA@Error?5opening?5output?5file?5?$CFs?6?$AA@ db 'Error opening output file %s',0Ah,0
					; DATA XREF: _dgst_main+B7Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 193Ch
; COMDAT (pick any)
		public ??_C@_0CO@GBKPBPPB@MAC?5and?5Signing?5key?5cannot?5both?5@
; `string'
??_C@_0CO@GBKPBPPB@MAC?5and?5Signing?5key?5cannot?5both?5@ db 'MAC and Signing key cannot both be specified',0Ah,0
					; DATA XREF: _dgst_main+BC2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 196Ch
; COMDAT (pick any)
		public ??_C@_08CIIMFNPL@key?5file?$AA@
; `string'
??_C@_08CIIMFNPL@key?5file?$AA@	db 'key file',0 ; DATA XREF: _dgst_main+BD5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1978h
; COMDAT (pick any)
		public ??_C@_0BK@CMBNPJKN@MAC?5parameter?5error?5?$CC?$CFs?$CC?6?$AA@
; `string'
??_C@_0BK@CMBNPJKN@MAC?5parameter?5error?5?$CC?$CFs?$CC?6?$AA@ db 'MAC parameter error "%s"',0Ah,0
					; DATA XREF: _dgst_main+CC7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1994h
; COMDAT (pick any)
		public ??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@
; `string'
??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@ db 'Error generating key',0Ah,0
					; DATA XREF: _dgst_main+CA6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19ACh
; COMDAT (pick any)
		public ??_C@_0BH@HIAIGHKF@Error?5getting?5context?6?$AA@
; `string'
??_C@_0BH@HIAIGHKF@Error?5getting?5context?6?$AA@ db 'Error getting context',0Ah,0
					; DATA XREF: _dgst_main:loc_D94o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19C4h
; COMDAT (pick any)
		public ??_C@_0BH@BMFBNJBH@Error?5setting?5context?6?$AA@
; `string'
??_C@_0BH@BMFBNJBH@Error?5setting?5context?6?$AA@ db 'Error setting context',0Ah,0
					; DATA XREF: _dgst_main+DE3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19DCh
; COMDAT (pick any)
		public ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@
; `string'
??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@ db 'parameter error "%s"',0Ah,0
					; DATA XREF: _dgst_main+E82o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19F4h
; COMDAT (pick any)
		public ??_C@_0BJ@CIENJBPC@Error?5setting?5digest?5?$CFs?6?$AA@
; `string'
??_C@_0BJ@CIENJBPC@Error?5setting?5digest?5?$CFs?6?$AA@	db 'Error setting digest %s',0Ah,0
					; DATA XREF: _dgst_main+EE0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A10h
; COMDAT (pick any)
		public ??_C@_02JDPG@rb?$AA@
; `string'
??_C@_02JDPG@rb?$AA@ db	72h, 62h, 0	; DATA XREF: _dgst_main+E43o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A14h
; COMDAT (pick any)
		public ??_C@_0CB@GJFPMJA@Error?5opening?5signature?5file?5?$CFs?6@
; `string'
??_C@_0CB@GJFPMJA@Error?5opening?5signature?5file?5?$CFs?6@ db 'Error opening signature file %s',0Ah,0
					; DATA XREF: _dgst_main+E77o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A38h
; COMDAT (pick any)
		public ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
; `string'
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ db 'Out of memory',0Ah,0
					; DATA XREF: _dgst_main+EEEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A48h
; COMDAT (pick any)
		public ??_C@_0CB@CPOCADA@Error?5reading?5signature?5file?5?$CFs?6@
; `string'
??_C@_0CB@CPOCADA@Error?5reading?5signature?5file?5?$CFs?6@ db 'Error reading signature file %s',0Ah,0
					; DATA XREF: _dgst_main+F14o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A6Ch
; COMDAT (pick any)
		public ??_C@_05MHOFLBOO@stdin?$AA@
; `string'
??_C@_05MHOFLBOO@stdin?$AA@ db 'stdin',0 ; DATA XREF: _dgst_main+F6Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A74h
; COMDAT (pick any)
		public ??_C@_0BC@DKNKBAL@Read?5Error?5in?5?$CFs?6?$AA@
; `string'
??_C@_0BC@DKNKBAL@Read?5Error?5in?5?$CFs?6?$AA@	db 'Read Error in %s',0Ah,0
					; DATA XREF: _do_fp+40o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A88h
; COMDAT (pick any)
		public ??_C@_0N@EMAJAODF@Verified?5OK?6?$AA@
; `string'
??_C@_0N@EMAJAODF@Verified?5OK?6?$AA@ db 'Verified OK',0Ah,0 ; DATA XREF: _do_fp+96o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A98h
; COMDAT (pick any)
		public ??_C@_0BG@PBEFODBB@Verification?5Failure?6?$AA@
; `string'
??_C@_0BG@PBEFODBB@Verification?5Failure?6?$AA@	db 'Verification Failure',0Ah,0
					; DATA XREF: _do_fp+B2o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AB0h
; COMDAT (pick any)
		public ??_C@_0BG@DEPCNIJM@Error?5Verifying?5Data?6?$AA@
; `string'
??_C@_0BG@DEPCNIJM@Error?5Verifying?5Data?6?$AA@ db 'Error Verifying Data',0Ah,0
					; DATA XREF: _do_fp:loc_118Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AC8h
; COMDAT (pick any)
		public ??_C@_0BE@MGCALGC@Error?5Signing?5Data?6?$AA@
; `string'
??_C@_0BE@MGCALGC@Error?5Signing?5Data?6?$AA@ db 'Error Signing Data',0Ah,0
					; DATA XREF: _do_fp+10Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1ADCh
; COMDAT (pick any)
		public ??_C@_04NOJCDH@?$CF02x?$AA@
; `string'
??_C@_04NOJCDH@?$CF02x?$AA@ db '%02x',0 ; DATA XREF: _do_fp+1A5o _do_fp+23Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AE4h
; COMDAT (pick any)
		public ??_C@_05PJFEANEA@?5?$CK?$CFs?6?$AA@
; `string'
??_C@_05PJFEANEA@?5?$CK?$CFs?6?$AA@ db ' *%s',0Ah,0 ; DATA XREF: _do_fp+1BEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AECh
; COMDAT (pick any)
		public ??_C@_03LGHHPJDO@?9?$CFs?$AA@
; `string'
??_C@_03LGHHPJDO@?9?$CFs?$AA@ dd 73252Dh ; DATA	XREF: _do_fp+1F5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AF0h
; COMDAT (pick any)
		public ??_C@_06BDNPOLDF@?$CI?$CFs?$CJ?$DN?5?$AA@
; `string'
??_C@_06BDNPOLDF@?$CI?$CFs?$CJ?$DN?5?$AA@ db '(%s)= ',0 ; DATA XREF: _do_fp+207o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AF8h
; COMDAT (pick any)
		public ??_C@_08ICADHBHK@?$CFs?$CI?$CFs?$CJ?$DN?5?$AA@
; `string'
??_C@_08ICADHBHK@?$CFs?$CI?$CFs?$CJ?$DN?5?$AA@ db '%s(%s)= ',0 ; DATA XREF: _do_fp+275o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B04h
; COMDAT (pick any)
		public ??_C@_01JLIPDDHJ@?3?$AA@
; `string'
??_C@_01JLIPDDHJ@?3?$AA@ db 3Ah, 0	; DATA XREF: _do_fp+228o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B08h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah, 0	; DATA XREF: _do_fp:loc_1310o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _dgst_main+123p
					; _dgst_main+B56p ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _dgst_main+1034p
					; DATA XREF: _dgst_main+100Cr
; char *__cdecl	_strchr(const char *Str, int Val)
		extrn __imp__strchr:near ; CODE	XREF: _list_md_fn+60p
					; DATA XREF: _list_md_fn+60r
		extrn _sk_num:near	; CODE XREF: _dgst_main+C59p
					; _dgst_main+C85p ...
		extrn _sk_value:near	; CODE XREF: _dgst_main+C67p
					; _dgst_main+E02p
		extrn _sk_new_null:near	; CODE XREF: _dgst_main+767p
					; _dgst_main+7BDp
		extrn _sk_free:near	; CODE XREF: _dgst_main+897p
					; _dgst_main+8A8p
		extrn _sk_push:near	; CODE XREF: _dgst_main:loc_7D1p
		extrn _CRYPTO_malloc:near ; CODE XREF: _dgst_main+D9p
					; _dgst_main+E66p
		extrn _CRYPTO_free:near	; CODE XREF: _dgst_main+84Fp
					; _dgst_main+875p ...
		extrn _OPENSSL_cleanse:near ; CODE XREF: _dgst_main+846p
		extrn _BIO_set_callback:near ; CODE XREF: _dgst_main+AB8p
		extrn _BIO_set_callback_arg:near ; CODE	XREF: _dgst_main+AC7p
		extrn _BIO_s_file:near	; CODE XREF: _dgst_main+10Ap
					; _dgst_main:loc_A74p
		extrn _BIO_new_file:near ; CODE	XREF: _dgst_main+B3Ep
					; _dgst_main+B4Bp ...
		extrn _BIO_new_fp:near	; CODE XREF: _dgst_main+B60p
		extrn _BIO_new:near	; CODE XREF: _dgst_main+110p
					; _dgst_main+A7Ap ...
		extrn _BIO_free:near	; CODE XREF: _dgst_main+860p
					; _dgst_main+8CAp ...
		extrn _BIO_read:near	; CODE XREF: _dgst_main+EFBp
					; _do_fp+1Bp ...
		extrn _BIO_gets:near	; CODE XREF: _do_fp+15Dp
		extrn _BIO_write:near	; CODE XREF: _do_fp+145p
		extrn _BIO_puts:near	; CODE XREF: _dgst_main+CB1p
					; _do_fp+1E4p
		extrn _BIO_ctrl:near	; CODE XREF: _dgst_main+134p
					; _dgst_main+D21p ...
		extrn _BIO_push:near	; CODE XREF: _dgst_main+F27p
		extrn _BIO_free_all:near ; CODE	XREF: _dgst_main+881p
		extrn _BIO_debug_callback:near ; DATA XREF: _dgst_main+AB2o
		extrn _BIO_printf:near	; CODE XREF: _dgst_main+F4p
					; _dgst_main+830p ...
		extrn _OBJ_nid2ln:near	; CODE XREF: _list_md_fn+15p
		extrn _OBJ_nid2sn:near	; CODE XREF: _dgst_main+FEBp
					; _list_md_fn+74p
		extrn _EVP_MD_type:near	; CODE XREF: _dgst_main+FE5p
					; _list_md_fn+Fp ...
		extrn _EVP_MD_flags:near ; CODE	XREF: _list_md_fn+51p
		extrn _EVP_MD_CTX_md:near ; CODE XREF: _dgst_main+F4Bp
		extrn _EVP_MD_CTX_set_flags:near ; CODE	XREF: _dgst_main+D2Cp
		extrn _EVP_DigestInit_ex:near ;	CODE XREF: _dgst_main+EC8p
		extrn _EVP_DigestSignInit:near ; CODE XREF: _dgst_main:loc_DD7p
		extrn _EVP_DigestSignFinal:near	; CODE XREF: _do_fp+FEp
		extrn _EVP_DigestVerifyInit:near ; CODE	XREF: _dgst_main+DD0p
		extrn _EVP_DigestVerifyFinal:near ; CODE XREF: _do_fp+8Ap
		extrn _BIO_f_md:near	; CODE XREF: _dgst_main+A83p
		extrn _EVP_md5:near	; CODE XREF: _dgst_main+EB6p
		extrn _EVP_get_digestbyname:near ; CODE	XREF: _dgst_main+16Dp
					; _dgst_main+7E3p
		extrn _EVP_MD_do_all_sorted:near ; CODE	XREF: _dgst_main+A52p
		extrn _EVP_PKEY_size:near ; CODE XREF: _dgst_main+E54p
		extrn _EVP_PKEY_free:near ; CODE XREF: _dgst_main+88Ap
		extrn _EVP_PKEY_asn1_get0_info:near ; CODE XREF: _dgst_main+FD8p
		extrn _EVP_PKEY_get0_asn1:near ; CODE XREF: _dgst_main+FC2p
		extrn _EVP_PKEY_CTX_free:near ;	CODE XREF: _dgst_main+CF5p
		extrn _EVP_PKEY_new_mac_key:near ; CODE	XREF: _dgst_main+D49p
		extrn _EVP_PKEY_keygen:near ; CODE XREF: _dgst_main+C9Ap
		extrn _ERR_print_errors:near ; CODE XREF: _dgst_main+B91p
					; _dgst_main+CBCp ...
		extrn _app_RAND_load_file:near ; CODE XREF: _dgst_main+B1Ep
		extrn _str2fmt:near	; CODE XREF: _dgst_main+4A9p
		extrn _program_name:near ; CODE	XREF: _dgst_main+160p
		extrn _app_passwd:near	; CODE XREF: _dgst_main+AE5p
		extrn _load_key:near	; CODE XREF: _dgst_main+C07p
		extrn _load_pubkey:near	; CODE XREF: _dgst_main+BEFp
		extrn _setup_engine:near ; CODE	XREF: _dgst_main+500p
		extrn _load_config:near	; CODE XREF: _dgst_main+144p
		extrn _pkey_ctrl_string:near ; CODE XREF: _dgst_main+C73p
					; _dgst_main+E0Ep
		extrn _init_gen_str:near ; CODE	XREF: _dgst_main+C3Ep
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _dgst_main+8E1p
		extrn __chkstk:near	; CODE XREF: _dgst_main+5p _do_fp+5p
		extrn _bio_err:near	; DATA XREF: _dgst_main+EEr
					; _dgst_main:loc_101r ...
		extrn ___security_cookie:near ;	DATA XREF: _dgst_main+Ar


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	6C180909CE47DF7B4E0BA103B4144F37
; Input	CRC32 :	8316E935

; File Name   :	C:\compspace\Diff\openssl\obj\dsaparam.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _printf+19p
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_scanf_options
___local_stdio_scanf_options proc near	; CODE XREF: __vsscanf_l+12p
					; _sscanf+11p
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
		retn
___local_stdio_scanf_options endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 34h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public __vsscanf_l
__vsscanf_l	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	0FFFFFFFFh
		push	[esp+10h+arg_0]
		call	___local_stdio_scanf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vsscanf
		add	esp, 1Ch
		retn
__vsscanf_l	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_dsa_cb		proc near		; DATA XREF: _dsaparam_main+604o

arg_0		= dword	ptr  4
arg_8		= dword	ptr  0Ch

		mov	ecx, [esp+arg_0]
		mov	al, 2Ah	; '*'
		test	ecx, ecx
		jnz	short loc_6D
		mov	byte ptr [esp+arg_0], 2Eh ; '.'
		jmp	short loc_97
; ---------------------------------------------------------------------------

loc_6D:					; CODE XREF: _dsa_cb+8j
		cmp	ecx, 1
		jnz	short loc_79
		mov	byte ptr [esp+arg_0], 2Bh ; '+'
		jmp	short loc_97
; ---------------------------------------------------------------------------

loc_79:					; CODE XREF: _dsa_cb+14j
		cmp	ecx, 2
		jnz	short loc_85
		mov	byte ptr [esp+arg_0], 2Ah ; '*'
		jmp	short loc_97
; ---------------------------------------------------------------------------

loc_85:					; CODE XREF: _dsa_cb+20j
		cmp	ecx, 3
		movzx	eax, al
		mov	edx, 0Ah
		cmovz	eax, edx
		mov	byte ptr [esp+arg_0], al

loc_97:					; CODE XREF: _dsa_cb+Fj _dsa_cb+1Bj ...
		push	esi
		mov	esi, [esp+4+arg_8]
		lea	eax, [esp+4+arg_0]
		push	1
		push	eax
		push	dword ptr [esi+4]
		call	_BIO_write
		push	0
		push	0
		push	0Bh
		push	dword ptr [esi+4]
		call	_BIO_ctrl
		add	esp, 1Ch
		mov	eax, 1
		pop	esi
		retn
_dsa_cb		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _dsaparam_main
_dsaparam_main	proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
ErrMsg		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 4Ch ; 'L'
		call	__chkstk
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+4Ch+var_4C], 0
		mov	[esp+4Ch+var_24], 0
		mov	[esp+4Ch+var_1C], 0
		mov	[esp+4Ch+var_20], 0
		mov	[esp+4Ch+var_30], 0
		mov	[esp+4Ch+var_2C], 0FFFFFFFFh
		mov	[esp+4Ch+var_18], 0
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_34], 0
		test	eax, eax
		jnz	short loc_155
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_155
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_155:				; CODE XREF: _dsaparam_main+58j
					; _dsaparam_main+6Fj
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_B95
		push	ebx
		push	ebp
		push	esi
		mov	esi, [esp+58h+arg_0]
		push	edi
		mov	edi, [esp+5Ch+arg_4]
		dec	esi
		mov	[esp+5Ch+ErrMsg], 0
		mov	[esp+5Ch+var_38], 0
		mov	[esp+5Ch+var_28], 3
		mov	ebp, [edi]
		add	edi, 4
		mov	[esp+5Ch+var_40], 3
		mov	[esp+5Ch+var_14], ebp
		cmp	esi, 1
		jl	loc_4B2

loc_1A7:				; CODE XREF: _dsaparam_main+3E8j
		mov	ebx, [edi]
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, ebx
		nop	dword ptr [eax+00h]

loc_1B4:				; CODE XREF: _dsaparam_main+10Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1D4
		test	dl, dl
		jz	short loc_1D0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1D4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1B4

loc_1D0:				; CODE XREF: _dsaparam_main+F8j
		xor	eax, eax
		jmp	short loc_1D9
; ---------------------------------------------------------------------------

loc_1D4:				; CODE XREF: _dsaparam_main+F4j
					; _dsaparam_main+100j
		sbb	eax, eax
		or	eax, 1

loc_1D9:				; CODE XREF: _dsaparam_main+10Ej
		test	eax, eax
		jnz	short loc_1FE
		dec	esi
		cmp	esi, 1
		jl	$bad$166
		push	dword ptr [edi+4]
		add	edi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+5Ch+var_28], eax
		jmp	loc_4A5
; ---------------------------------------------------------------------------

loc_1FE:				; CODE XREF: _dsaparam_main+117j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, ebx

loc_205:				; CODE XREF: _dsaparam_main+15Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_225
		test	dl, dl
		jz	short loc_221
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_225
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_205

loc_221:				; CODE XREF: _dsaparam_main+149j
		xor	eax, eax
		jmp	short loc_22A
; ---------------------------------------------------------------------------

loc_225:				; CODE XREF: _dsaparam_main+145j
					; _dsaparam_main+151j
		sbb	eax, eax
		or	eax, 1

loc_22A:				; CODE XREF: _dsaparam_main+15Fj
		test	eax, eax
		jnz	short loc_24F
		dec	esi
		cmp	esi, 1
		jl	$bad$166
		push	dword ptr [edi+4]
		add	edi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+5Ch+var_40], eax
		jmp	loc_4A5
; ---------------------------------------------------------------------------

loc_24F:				; CODE XREF: _dsaparam_main+168j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, ebx

loc_256:				; CODE XREF: _dsaparam_main+1ACj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_276
		test	dl, dl
		jz	short loc_272
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_276
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_256

loc_272:				; CODE XREF: _dsaparam_main+19Aj
		xor	eax, eax
		jmp	short loc_27B
; ---------------------------------------------------------------------------

loc_276:				; CODE XREF: _dsaparam_main+196j
					; _dsaparam_main+1A2j
		sbb	eax, eax
		or	eax, 1

loc_27B:				; CODE XREF: _dsaparam_main+1B0j
		test	eax, eax
		jnz	short loc_298
		dec	esi
		cmp	esi, 1
		jl	$bad$166
		mov	edx, [edi+4]
		add	edi, 4
		mov	[esp+5Ch+ErrMsg], edx
		jmp	loc_4A5
; ---------------------------------------------------------------------------

loc_298:				; CODE XREF: _dsaparam_main+1B9j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, ebx
		nop	dword ptr [eax+eax+00h]

loc_2A4:				; CODE XREF: _dsaparam_main+1FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2C4
		test	dl, dl
		jz	short loc_2C0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2C4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2A4

loc_2C0:				; CODE XREF: _dsaparam_main+1E8j
		xor	eax, eax
		jmp	short loc_2C9
; ---------------------------------------------------------------------------

loc_2C4:				; CODE XREF: _dsaparam_main+1E4j
					; _dsaparam_main+1F0j
		sbb	eax, eax
		or	eax, 1

loc_2C9:				; CODE XREF: _dsaparam_main+1FEj
		test	eax, eax
		jnz	short loc_2E6
		dec	esi
		cmp	esi, 1
		jl	$bad$166
		mov	edx, [edi+4]
		add	edi, 4
		mov	[esp+5Ch+var_38], edx
		jmp	loc_4A5
; ---------------------------------------------------------------------------

loc_2E6:				; CODE XREF: _dsaparam_main+207j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, ebx
		nop	dword ptr [eax+00000000h]

loc_2F4:				; CODE XREF: _dsaparam_main+24Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_314
		test	dl, dl
		jz	short loc_310
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_314
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2F4

loc_310:				; CODE XREF: _dsaparam_main+238j
		xor	eax, eax
		jmp	short loc_319
; ---------------------------------------------------------------------------

loc_314:				; CODE XREF: _dsaparam_main+234j
					; _dsaparam_main+240j
		sbb	eax, eax
		or	eax, 1

loc_319:				; CODE XREF: _dsaparam_main+24Ej
		test	eax, eax
		jnz	short loc_336
		dec	esi
		cmp	esi, 1
		jl	$bad$166
		mov	ebp, [edi+4]
		add	edi, 4
		mov	[esp+5Ch+var_34], ebp
		jmp	loc_4A5
; ---------------------------------------------------------------------------

loc_336:				; CODE XREF: _dsaparam_main+257j
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, ebx
		nop	dword ptr [eax+00000000h]

loc_344:				; CODE XREF: _dsaparam_main+29Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_364
		test	dl, dl
		jz	short loc_360
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_364
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_344

loc_360:				; CODE XREF: _dsaparam_main+288j
		xor	eax, eax
		jmp	short loc_369
; ---------------------------------------------------------------------------

loc_364:				; CODE XREF: _dsaparam_main+284j
					; _dsaparam_main+290j
		sbb	eax, eax
		or	eax, 1

loc_369:				; CODE XREF: _dsaparam_main+29Ej
		test	eax, eax
		jnz	short loc_37A
		mov	[esp+5Ch+var_24], 1
		jmp	loc_4A5
; ---------------------------------------------------------------------------

loc_37A:				; CODE XREF: _dsaparam_main+2A7j
		mov	ecx, offset ??_C@_02OLHPOPJI@?9C?$AA@ ;	`string'
		mov	eax, ebx
		nop	dword ptr [eax]

loc_384:				; CODE XREF: _dsaparam_main+2DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3A4
		test	dl, dl
		jz	short loc_3A0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3A4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_384

loc_3A0:				; CODE XREF: _dsaparam_main+2C8j
		xor	eax, eax
		jmp	short loc_3A9
; ---------------------------------------------------------------------------

loc_3A4:				; CODE XREF: _dsaparam_main+2C4j
					; _dsaparam_main+2D0j
		sbb	eax, eax
		or	eax, 1

loc_3A9:				; CODE XREF: _dsaparam_main+2DEj
		test	eax, eax
		jnz	short loc_3BA
		mov	[esp+5Ch+var_20], 1
		jmp	loc_4A5
; ---------------------------------------------------------------------------

loc_3BA:				; CODE XREF: _dsaparam_main+2E7j
		mov	ecx, offset ??_C@_07JEECMJMJ@?9genkey?$AA@ ; "-genkey"
		mov	eax, ebx
		nop	dword ptr [eax]

loc_3C4:				; CODE XREF: _dsaparam_main+31Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3E4
		test	dl, dl
		jz	short loc_3E0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3E4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3C4

loc_3E0:				; CODE XREF: _dsaparam_main+308j
		xor	eax, eax
		jmp	short loc_3E9
; ---------------------------------------------------------------------------

loc_3E4:				; CODE XREF: _dsaparam_main+304j
					; _dsaparam_main+310j
		sbb	eax, eax
		or	eax, 1

loc_3E9:				; CODE XREF: _dsaparam_main+31Ej
		test	eax, eax
		jnz	short loc_3FA
		mov	[esp+5Ch+var_18], 1
		jmp	loc_49D
; ---------------------------------------------------------------------------

loc_3FA:				; CODE XREF: _dsaparam_main+327j
		mov	ecx, offset ??_C@_05LGFPCDPE@?9rand?$AA@ ; "-rand"
		mov	eax, ebx
		nop	dword ptr [eax]

loc_404:				; CODE XREF: _dsaparam_main+35Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_424
		test	dl, dl
		jz	short loc_420
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_424
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_404

loc_420:				; CODE XREF: _dsaparam_main+348j
		xor	eax, eax
		jmp	short loc_429
; ---------------------------------------------------------------------------

loc_424:				; CODE XREF: _dsaparam_main+344j
					; _dsaparam_main+350j
		sbb	eax, eax
		or	eax, 1

loc_429:				; CODE XREF: _dsaparam_main+35Ej
		test	eax, eax
		jnz	short loc_443
		dec	esi
		cmp	esi, 1
		jl	$bad$166
		mov	ebp, [edi+4]
		add	edi, 4
		mov	[esp+5Ch+var_30], ebp
		jmp	short loc_49D
; ---------------------------------------------------------------------------

loc_443:				; CODE XREF: _dsaparam_main+367j
		mov	ecx, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"
		mov	eax, ebx

loc_44A:				; CODE XREF: _dsaparam_main+3A0j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_46A
		test	dl, dl
		jz	short loc_466
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_46A
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_44A

loc_466:				; CODE XREF: _dsaparam_main+38Ej
		xor	eax, eax
		jmp	short loc_46F
; ---------------------------------------------------------------------------

loc_46A:				; CODE XREF: _dsaparam_main+38Aj
					; _dsaparam_main+396j
		sbb	eax, eax
		or	eax, 1

loc_46F:				; CODE XREF: _dsaparam_main+3A4j
		test	eax, eax
		jnz	short loc_47D
		mov	[esp+5Ch+var_1C], 1
		jmp	short loc_4A5
; ---------------------------------------------------------------------------

loc_47D:				; CODE XREF: _dsaparam_main+3ADj
		lea	eax, [esp+5Ch+var_44]
		push	eax
		push	offset ??_C@_02DPKJAMEF@?$CFd?$AA@ ; "%d"
		push	ebx		; Src
		call	_sscanf
		add	esp, 0Ch
		cmp	eax, 1
		jnz	short loc_513
		mov	ebp, [esp+5Ch+var_44]
		mov	[esp+5Ch+var_2C], ebp

loc_49D:				; CODE XREF: _dsaparam_main+331j
					; _dsaparam_main+37Dj
		mov	[esp+5Ch+var_48], 1

loc_4A5:				; CODE XREF: _dsaparam_main+135j
					; _dsaparam_main+186j ...
		dec	esi
		add	edi, 4
		cmp	esi, 1
		jge	loc_1A7

loc_4B2:				; CODE XREF: _dsaparam_main+DDj
		call	_ERR_load_crypto_strings
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	ebx, eax
		mov	[esp+60h+var_10], ebx
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 8
		mov	ebp, eax
		mov	[esp+5Ch+var_14], ebp
		test	ebx, ebx
		jz	loc_B49
		test	ebp, ebp
		jz	loc_B49
		mov	esi, [esp+5Ch+ErrMsg]
		test	esi, esi
		jnz	loc_60F
		mov	edi, dword ptr ds:__imp____acrt_iob_func
		push	esi
		call	edi ; __imp____acrt_iob_func
		push	eax
		push	esi
		push	6Ah ; 'j'
		push	ebx
		call	_BIO_ctrl
		add	esp, 14h
		jmp	loc_633
; ---------------------------------------------------------------------------

loc_513:				; CODE XREF: _dsaparam_main+3CFj
		push	dword ptr [edi]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$bad$166:				; CODE XREF: _dsaparam_main+11Dj
					; _dsaparam_main+16Ej ...
		push	[esp+5Ch+var_14]
		push	offset ??_C@_0CG@GBHMBJED@?$CFs?5?$FLoptions?$FN?5?$FLbits?$FN?5?$DMinfile?5?$DOout@ ; "%s [options] [bits] <infile >outfile\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@BAAODCLL@?5?9inform?5arg?5?5?5input?5format?5?9?5DE@ ;	" -inform arg	input format - DER or PE"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CL@ODKCHCIH@?5?9outform?5arg?5?5output?5format?5?9?5D@ ; " -outform arg  output format - DER or P"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@ ; " -in arg       input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@JAFLIPIN@?5?9out?5arg?5?5?5?5?5?5output?5file?6?$AA@ ;	" -out arg	output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BO@IGNLNBMI@?5?9text?5?5?5?5?5?5?5?5?5print?5as?5text?6?$AA@ ; " -text	     print as text\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BO@KEIHOKJC@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5Output?5C?5code?6?$AA@ ;	" -C		Output C code\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0BK@ELEJBNIF@?5?9noout?5?5?5?5?5?5?5?5no?5output?6?$AA@ ; " -noout	       no output\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CD@GAOJDLEA@?5?9genkey?5?5?5?5?5?5?5generate?5a?5DSA?5ke@	; " -genkey	  generate a DSA key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DF@PLPKKFNH@?5?9rand?5?5?5?5?5?5?5?5?5files?5to?5use?5for?5@ ; " -rand	     files to use for random "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@OCLGLONK@?5?9engine?5e?5?5?5?5?5use?5engine?5e?0?5pos@	; " -engine e	  use engine e,	possibly a"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EB@JJOILNDM@?5number?5?5?5?5?5?5?5?5number?5of?5bits?5to@	; " number	  number of bits to use	fo"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 28h
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_60F:				; CODE XREF: _dsaparam_main+42Ej
		push	esi
		push	3
		push	6Ch ; 'l'
		push	ebx
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_62D
		push	esi		; ErrMsg
		call	dword ptr ds:__imp__perror
		jmp	loc_B54
; ---------------------------------------------------------------------------

loc_62D:				; CODE XREF: _dsaparam_main+55Bj
		mov	edi, dword ptr ds:__imp____acrt_iob_func

loc_633:				; CODE XREF: _dsaparam_main+44Aj
		mov	esi, [esp+5Ch+var_38]
		test	esi, esi
		jnz	loc_70F
		push	1
		call	edi ; __imp____acrt_iob_func
		push	eax
		push	esi
		push	6Ah ; 'j'
		push	ebp
		call	_BIO_ctrl
		add	esp, 14h

loc_650:				; CODE XREF: _dsaparam_main+65Bj
		push	0
		push	[esp+60h+var_34]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		mov	edi, [esp+68h+var_48]
		add	esp, 0Ch
		test	edi, edi
		jz	short loc_6A6
		mov	esi, [esp+5Ch+var_30]
		xor	eax, eax
		test	esi, esi
		setnz	al
		push	eax
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		add	esp, 0Ch
		test	esi, esi
		jz	short loc_6A6
		push	esi
		call	_app_RAND_load_files
		push	eax
		push	offset ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; "%ld semi-random	bytes loaded\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h

loc_6A6:				; CODE XREF: _dsaparam_main+5A6j
					; _dsaparam_main+5C6j
		cmp	[esp+5Ch+var_2C], 0
		mov	esi, dword ptr ds:__imp___wassert
		jle	loc_796
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+5Ch+var_C], 2
		mov	[esp+5Ch+var_8], eax
		mov	[esp+5Ch+var_4], offset	_dsa_cb
		test	edi, edi
		jnz	short loc_6E8
		push	118h		; Line
		push	offset ??_C@_1CE@HMLGLBDK@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAd?$AAs?$AAa?$AAp?$AAa?$AAr?$AAa?$AAm?$AA?4?$AAc?$AA?$AA@ ; ".\\apps\\dsaparam.c"
		push	offset ??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@ ; "need_rand"
		call	esi ; __imp___wassert
		add	esp, 0Ch

loc_6E8:				; CODE XREF: _dsaparam_main+60Ej
		call	_DSA_new
		mov	ebx, eax
		mov	[esp+5Ch+var_4C], ebx
		test	ebx, ebx
		jnz	short loc_731
		push	offset ??_C@_0BN@CFLLAMLA@Error?5allocating?5DSA?5object?6?$AA@	; "Error allocating DSA	object\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_B57
; ---------------------------------------------------------------------------

loc_70F:				; CODE XREF: _dsaparam_main+575j
		push	esi
		push	5
		push	6Ch ; 'l'
		push	ebp
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	loc_650
		push	esi		; ErrMsg
		call	dword ptr ds:__imp__perror
		jmp	loc_B54
; ---------------------------------------------------------------------------

loc_731:				; CODE XREF: _dsaparam_main+631j
		push	[esp+5Ch+var_44]
		push	offset ??_C@_0CO@MBCDDJGG@Generating?5DSA?5parameters?0?5?$CFd?5bi@ ; "Generating DSA parameters, %d bit long "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@BMHGIKAF@This?5could?5take?5some?5time?6?$AA@ ; "This could take some time\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		lea	eax, [esp+70h+var_C]
		push	eax
		push	0
		push	0
		push	0
		push	0
		push	[esp+84h+var_44]
		push	ebx
		call	_DSA_generate_parameters_ex
		add	esp, 30h
		test	eax, eax
		jnz	short loc_7D7
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		push	offset ??_C@_0CC@FFIJENLI@Error?0?5DSA?5key?5generation?5failed@ ; "Error, DSA key generation failed\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	loc_B57
; ---------------------------------------------------------------------------

loc_796:				; CODE XREF: _dsaparam_main+5EDj
		mov	eax, [esp+5Ch+var_28]
		cmp	eax, 1
		jnz	short loc_7B9
		push	0
		push	ebx
		push	offset _d2i_DSAparams
		push	offset _DSA_new
		call	_ASN1_d2i_bio
		mov	ebx, eax
		mov	[esp+6Ch+var_4C], ebx
		jmp	short loc_7D4
; ---------------------------------------------------------------------------

loc_7B9:				; CODE XREF: _dsaparam_main+6D9j
		cmp	eax, 3
		jnz	loc_B34
		push	0
		push	0
		push	0
		push	ebx
		call	_PEM_read_bio_DSAparams
		mov	ebx, eax
		mov	[esp+6Ch+var_4C], eax

loc_7D4:				; CODE XREF: _dsaparam_main+6F3j
		add	esp, 10h

loc_7D7:				; CODE XREF: _dsaparam_main+6ADj
		test	ebx, ebx
		jnz	short loc_7FE
		push	offset ??_C@_0BP@GLONFKAC@unable?5to?5load?5DSA?5parameters?6?$AA@ ; "unable to	load DSA parameters\n"

loc_7E0:				; CODE XREF: _dsaparam_main+98Dj
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_B57
; ---------------------------------------------------------------------------

loc_7FE:				; CODE XREF: _dsaparam_main+715j
		cmp	[esp+5Ch+var_24], 0
		jz	short loc_80F
		push	ebx
		push	ebp
		call	_DSAparams_print
		add	esp, 8

loc_80F:				; CODE XREF: _dsaparam_main+73Fj
		cmp	[esp+5Ch+var_20], 0
		jz	loc_A18
		push	dword ptr [ebx+0Ch]
		call	_BN_num_bits
		push	dword ptr [ebx+0Ch]
		add	eax, 7
		cdq
		and	edx, 7
		lea	esi, [edx+eax]
		sar	esi, 3
		call	_BN_num_bits
		push	155h
		lea	ecx, [esi+14h]
		mov	ebx, eax
		push	offset ??_C@_0BC@CGNIGKIL@?4?2apps?2dsaparam?4c?$AA@ ; ".\\apps\\dsaparam.c"
		push	ecx
		call	_CRYPTO_malloc
		mov	edi, eax
		add	esp, 14h
		test	edi, edi
		jnz	short loc_865
		push	offset ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@ ; "OPENSSL_malloc"
		call	dword ptr ds:__imp__perror
		jmp	loc_B54
; ---------------------------------------------------------------------------

loc_865:				; CODE XREF: _dsaparam_main+78Fj
		mov	eax, [esp+5Ch+var_4C]
		push	edi
		push	dword ptr [eax+0Ch]
		call	_BN_bn2bin
		push	ebx
		push	offset ??_C@_0CB@KLNHLBLF@static?5unsigned?5char?5dsa?$CFd_p?$FL?$FN?$DN?$HL@ ;	"static	unsigned char dsa%d_p[]={"
		mov	ebp, eax
		call	_printf
		add	esp, 10h
		xor	esi, esi
		test	ebp, ebp
		jle	short loc_8C2

loc_888:				; CODE XREF: _dsaparam_main+7FCj
		mov	eax, 0AAAAAAABh
		mul	esi
		mov	eax, esi
		shr	edx, 3
		lea	ecx, [edx+edx*2]
		shl	ecx, 2
		sub	eax, ecx
		jnz	short loc_8AB
		push	offset ??_C@_02NMOLBIHC@?6?7?$AA@ ; "\n\t"
		call	_printf
		add	esp, 4

loc_8AB:				; CODE XREF: _dsaparam_main+7D8j
		movzx	eax, byte ptr [esi+edi]
		push	eax
		push	offset ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ ; "0x%02X,"
		call	_printf
		inc	esi
		add	esp, 8
		cmp	esi, ebp
		jl	short loc_888

loc_8C2:				; CODE XREF: _dsaparam_main+7C2j
		push	offset ??_C@_05KJDCIFPB@?6?7?$HN?$DL?6?$AA@ ; "\n\t};\n"
		call	_printf
		mov	eax, [esp+60h+var_4C]
		push	edi
		push	dword ptr [eax+10h]
		call	_BN_bn2bin
		push	ebx
		push	offset ??_C@_0CB@GAILGCBA@static?5unsigned?5char?5dsa?$CFd_q?$FL?$FN?$DN?$HL@ ;	"static	unsigned char dsa%d_q[]={"
		mov	ebp, eax
		call	_printf
		add	esp, 14h
		xor	esi, esi
		test	ebp, ebp
		jle	short loc_92E
		nop	dword ptr [eax+eax+00h]

loc_8F4:				; CODE XREF: _dsaparam_main+868j
		mov	eax, 0AAAAAAABh
		mul	esi
		mov	eax, esi
		shr	edx, 3
		lea	ecx, [edx+edx*2]
		shl	ecx, 2
		sub	eax, ecx
		jnz	short loc_917
		push	offset ??_C@_02NMOLBIHC@?6?7?$AA@ ; "\n\t"
		call	_printf
		add	esp, 4

loc_917:				; CODE XREF: _dsaparam_main+844j
		movzx	eax, byte ptr [esi+edi]
		push	eax
		push	offset ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ ; "0x%02X,"
		call	_printf
		inc	esi
		add	esp, 8
		cmp	esi, ebp
		jl	short loc_8F4

loc_92E:				; CODE XREF: _dsaparam_main+829j
		push	offset ??_C@_05KJDCIFPB@?6?7?$HN?$DL?6?$AA@ ; "\n\t};\n"
		call	_printf
		mov	eax, [esp+60h+var_4C]
		push	edi
		push	dword ptr [eax+14h]
		call	_BN_bn2bin
		push	ebx
		push	offset ??_C@_0CB@LFAEIDJG@static?5unsigned?5char?5dsa?$CFd_g?$FL?$FN?$DN?$HL@ ;	"static	unsigned char dsa%d_g[]={"
		mov	ebp, eax
		call	_printf
		add	esp, 14h
		xor	esi, esi
		test	ebp, ebp
		jle	short loc_995

loc_95B:				; CODE XREF: _dsaparam_main+8CFj
		mov	eax, 0AAAAAAABh
		mul	esi
		mov	eax, esi
		shr	edx, 3
		lea	ecx, [edx+edx*2]
		shl	ecx, 2
		sub	eax, ecx
		jnz	short loc_97E
		push	offset ??_C@_02NMOLBIHC@?6?7?$AA@ ; "\n\t"
		call	_printf
		add	esp, 4

loc_97E:				; CODE XREF: _dsaparam_main+8ABj
		movzx	eax, byte ptr [esi+edi]
		push	eax
		push	offset ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ ; "0x%02X,"
		call	_printf
		inc	esi
		add	esp, 8
		cmp	esi, ebp
		jl	short loc_95B

loc_995:				; CODE XREF: _dsaparam_main+895j
		push	offset ??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@ ;	"\n\t};\n\n"
		call	_printf
		push	ebx
		push	offset ??_C@_0BF@DGBLCCNH@DSA?5?$CKget_dsa?$CFd?$CI?$CJ?6?7?$HL?6?$AA@ ; "DSA *get_dsa%d()\n\t{\n"
		call	_printf
		push	offset ??_C@_0N@LIFHEPAE@?7DSA?5?$CKdsa?$DL?6?6?$AA@ ; "\tDSA *dsa;\n\n"
		call	_printf
		push	offset ??_C@_0CN@FKNLFKHI@?7if?5?$CI?$CIdsa?$DNDSA_new?$CI?$CJ?$CJ?5?$DN?$DN?5NULL?$CJ?5re@ ; "\tif ((dsa=DSA_new()) ==	NULL) return(N"...
		call	_printf
		push	ebx
		push	ebx
		push	offset ??_C@_0DC@NBCAOFFJ@?7dsa?9?$DOp?$DNBN_bin2bn?$CIdsa?$CFd_p?0sizeof@ ; "\tdsa->p=BN_bin2bn(dsa%d_p,sizeof(dsa%d"...
		call	_printf
		push	ebx
		push	ebx
		push	offset ??_C@_0DC@NNJLKEGM@?7dsa?9?$DOq?$DNBN_bin2bn?$CIdsa?$CFd_q?0sizeof@ ; "\tdsa->q=BN_bin2bn(dsa%d_q,sizeof(dsa%d"...
		call	_printf
		push	ebx
		push	ebx
		push	offset ??_C@_0DC@DNLEDBIC@?7dsa?9?$DOg?$DNBN_bin2bn?$CIdsa?$CFd_g?0sizeof@ ; "\tdsa->g=BN_bin2bn(dsa%d_g,sizeof(dsa%d"...
		call	_printf
		push	offset ??_C@_0EA@PJHPDPP@?7if?5?$CI?$CIdsa?9?$DOp?5?$DN?$DN?5NULL?$CJ?5?$HM?$HM?5?$CIdsa?9?$DOq@ ; "\tif ((dsa->p == NULL) || (dsa->q == NU"...
		call	_printf
		push	offset ??_C@_0CE@LPDLHMLH@?7?7?$HL?5DSA_free?$CIdsa?$CJ?$DL?5return?$CINULL?$CJ?$DL@ ; "\t\t{ DSA_free(dsa); return(NULL); }\n"
		call	_printf
		add	esp, 40h
		push	offset ??_C@_0BC@POIKGIGK@?7return?$CIdsa?$CJ?$DL?6?7?$HN?6?$AA@ ; "\treturn(dsa);\n\t}\n"
		call	_printf
		mov	ebp, [esp+60h+var_14]
		add	esp, 4
		mov	esi, dword ptr ds:__imp___wassert
		mov	ebx, [esp+5Ch+var_4C]
		mov	edi, [esp+5Ch+var_48]

loc_A18:				; CODE XREF: _dsaparam_main+750j
		cmp	[esp+5Ch+var_1C], 0
		jnz	short loc_A6E
		mov	eax, [esp+5Ch+var_40]
		cmp	eax, 1
		jnz	short loc_A39
		push	ebx
		push	ebp
		push	offset _i2d_DSAparams
		call	_ASN1_i2d_bio
		add	esp, 0Ch
		jmp	short loc_A48
; ---------------------------------------------------------------------------

loc_A39:				; CODE XREF: _dsaparam_main+962j
		cmp	eax, 3
		jnz	short loc_A56
		push	ebx
		push	ebp
		call	_PEM_write_bio_DSAparams
		add	esp, 8

loc_A48:				; CODE XREF: _dsaparam_main+973j
		test	eax, eax
		jnz	short loc_A6E
		push	offset ??_C@_0CA@IAIMOMNI@unable?5to?5write?5DSA?5parameters?6?$AA@ ; "unable to write DSA parameters\n"
		jmp	loc_7E0
; ---------------------------------------------------------------------------

loc_A56:				; CODE XREF: _dsaparam_main+978j
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_B57
; ---------------------------------------------------------------------------

loc_A6E:				; CODE XREF: _dsaparam_main+959j
					; _dsaparam_main+986j
		cmp	[esp+5Ch+var_18], 0
		jz	loc_B01
		test	edi, edi
		jnz	short loc_A91
		push	196h		; Line
		push	offset ??_C@_1CE@HMLGLBDK@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAd?$AAs?$AAa?$AAp?$AAa?$AAr?$AAa?$AAm?$AA?4?$AAc?$AA?$AA@ ; ".\\apps\\dsaparam.c"
		push	offset ??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@ ; "need_rand"
		call	esi ; __imp___wassert
		add	esp, 0Ch

loc_A91:				; CODE XREF: _dsaparam_main+9B7j
		push	ebx
		call	_DSAparams_dup
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	loc_B57
		push	esi
		call	_DSA_generate_key
		add	esp, 4
		test	eax, eax
		jnz	short loc_ACA
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		push	esi
		call	_DSA_free
		add	esp, 8
		jmp	loc_B57
; ---------------------------------------------------------------------------

loc_ACA:				; CODE XREF: _dsaparam_main+9EBj
		mov	eax, [esp+5Ch+var_40]
		cmp	eax, 1
		jnz	short loc_ADF
		push	esi
		push	ebp
		call	_i2d_DSAPrivateKey_bio
		add	esp, 8
		jmp	short loc_AF8
; ---------------------------------------------------------------------------

loc_ADF:				; CODE XREF: _dsaparam_main+A0Dj
		cmp	eax, 3
		jnz	short loc_B19
		push	0
		push	0
		push	0
		push	0
		push	0
		push	esi
		push	ebp
		call	_PEM_write_bio_DSAPrivateKey
		add	esp, 1Ch

loc_AF8:				; CODE XREF: _dsaparam_main+A19j
		push	esi
		call	_DSA_free
		add	esp, 4

loc_B01:				; CODE XREF: _dsaparam_main+9AFj
		test	edi, edi
		jz	short loc_B15
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_write_file
		add	esp, 8

loc_B15:				; CODE XREF: _dsaparam_main+A3Fj
		xor	ebx, ebx
		jmp	short $end$167
; ---------------------------------------------------------------------------

loc_B19:				; CODE XREF: _dsaparam_main+A1Ej
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	esi
		call	_DSA_free
		add	esp, 0Ch
		jmp	short loc_B57
; ---------------------------------------------------------------------------

loc_B34:				; CODE XREF: _dsaparam_main+6F8j
		push	offset ??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@ ; "bad input format specified\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short loc_B57
; ---------------------------------------------------------------------------

loc_B49:				; CODE XREF: _dsaparam_main+41Aj
					; _dsaparam_main+422j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors

loc_B54:				; CODE XREF: _dsaparam_main+564j
					; _dsaparam_main+668j ...
		add	esp, 4

loc_B57:				; CODE XREF: _dsaparam_main+646j
					; _dsaparam_main+6CDj ...
		mov	ebx, 1

$end$167:				; CODE XREF: _dsaparam_main+A53j
		mov	eax, [esp+5Ch+var_10]
		test	eax, eax
		jz	short loc_B6D
		push	eax
		call	_BIO_free
		add	esp, 4

loc_B6D:				; CODE XREF: _dsaparam_main+A9Ej
		test	ebp, ebp
		jz	short loc_B7A
		push	ebp
		call	_BIO_free_all
		add	esp, 4

loc_B7A:				; CODE XREF: _dsaparam_main+AABj
		mov	eax, [esp+5Ch+var_4C]
		test	eax, eax
		jz	short loc_B8B
		push	eax
		call	_DSA_free
		add	esp, 4

loc_B8B:				; CODE XREF: _dsaparam_main+ABCj
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, ebx
		pop	ebx
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_B95:				; CODE XREF: _dsaparam_main+9Ej
		mov	eax, 1
		add	esp, 4Ch
		retn
_dsaparam_main	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BA0h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int printf(const char	*Format, ...)
		public _printf
_printf		proc near		; CODE XREF: _dsaparam_main+7B6p
					; _dsaparam_main+7DFp ...

Format		= dword	ptr  4
arg_4		= byte ptr  8

		push	esi
		mov	esi, [esp+4+Format]
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		lea	ecx, [esp+4+arg_4]
		push	ecx
		push	0
		push	esi
		push	eax
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		pop	esi
		retn
_printf		endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BD0h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int sscanf(const char	*Src, const char *Format, ...)
		public _sscanf
_sscanf		proc near		; CODE XREF: _dsaparam_main+3C4p

Src		= dword	ptr  4
Format		= dword	ptr  8
arg_8		= byte ptr  0Ch

		lea	eax, [esp+arg_8]
		push	eax
		push	0
		push	[esp+8+Format]
		push	0FFFFFFFFh
		push	[esp+10h+Src]
		call	___local_stdio_scanf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vsscanf
		add	esp, 1Ch
		retn
_sscanf		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BF8h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _dsaparam_main+E5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C00h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _dsaparam_main:loc_1FEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0Ch
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _dsaparam_main:loc_24Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C10h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _dsaparam_main:loc_298o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C18h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _dsaparam_main:loc_2E6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C20h
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _dsaparam_main:loc_336o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C28h
; COMDAT (pick any)
		public ??_C@_02OLHPOPJI@?9C?$AA@
; `string'
??_C@_02OLHPOPJI@?9C?$AA@ db 2Dh, 43h, 0 ; DATA	XREF: _dsaparam_main:loc_37Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C2Ch
; COMDAT (pick any)
		public ??_C@_07JEECMJMJ@?9genkey?$AA@
; `string'
??_C@_07JEECMJMJ@?9genkey?$AA@ db '-genkey',0 ; DATA XREF: _dsaparam_main:loc_3BAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C34h
; COMDAT (pick any)
		public ??_C@_05LGFPCDPE@?9rand?$AA@
; `string'
??_C@_05LGFPCDPE@?9rand?$AA@ db	'-rand',0 ; DATA XREF: _dsaparam_main:loc_3FAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C3Ch
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _dsaparam_main:loc_443o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C44h
; COMDAT (pick any)
		public ??_C@_02DPKJAMEF@?$CFd?$AA@
; char `string'[3]
??_C@_02DPKJAMEF@?$CFd?$AA@ db '%d',0   ; DATA XREF: _dsaparam_main+3BEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C48h
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _dsaparam_main+451o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C5Ch
; COMDAT (pick any)
		public ??_C@_0CG@GBHMBJED@?$CFs?5?$FLoptions?$FN?5?$FLbits?$FN?5?$DMinfile?5?$DOout@
; `string'
??_C@_0CG@GBHMBJED@?$CFs?5?$FLoptions?$FN?5?$FLbits?$FN?5?$DMinfile?5?$DOout@ db '%s [options] [bits] <infile >outfile',0Ah,0
					; DATA XREF: _dsaparam_main+468o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C84h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _dsaparam_main+478o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C98h
; COMDAT (pick any)
		public ??_C@_0CK@BAAODCLL@?5?9inform?5arg?5?5?5input?5format?5?9?5DE@
; `string'
??_C@_0CK@BAAODCLL@?5?9inform?5arg?5?5?5input?5format?5?9?5DE@ db ' -inform arg   input format - DER or PEM',0Ah,0
					; DATA XREF: _dsaparam_main+488o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CC4h
; COMDAT (pick any)
		public ??_C@_0CL@ODKCHCIH@?5?9outform?5arg?5?5output?5format?5?9?5D@
; `string'
??_C@_0CL@ODKCHCIH@?5?9outform?5arg?5?5output?5format?5?9?5D@ db ' -outform arg  output format - DER or PEM',0Ah,0
					; DATA XREF: _dsaparam_main+498o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CF0h
; COMDAT (pick any)
		public ??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@ db ' -in arg       input file',0Ah,0
					; DATA XREF: _dsaparam_main+4A8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0Ch
; COMDAT (pick any)
		public ??_C@_0BM@JAFLIPIN@?5?9out?5arg?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BM@JAFLIPIN@?5?9out?5arg?5?5?5?5?5?5output?5file?6?$AA@ db ' -out arg      output file',0Ah,0
					; DATA XREF: _dsaparam_main+4B8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D28h
; COMDAT (pick any)
		public ??_C@_0BO@IGNLNBMI@?5?9text?5?5?5?5?5?5?5?5?5print?5as?5text?6?$AA@
; `string'
??_C@_0BO@IGNLNBMI@?5?9text?5?5?5?5?5?5?5?5?5print?5as?5text?6?$AA@ db ' -text         print as text',0Ah,0
					; DATA XREF: _dsaparam_main+4C8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D48h
; COMDAT (pick any)
		public ??_C@_0BO@KEIHOKJC@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5Output?5C?5code?6?$AA@
; `string'
??_C@_0BO@KEIHOKJC@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5Output?5C?5code?6?$AA@ db ' -C            Output C code',0Ah,0
					; DATA XREF: _dsaparam_main+4D8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D68h
; COMDAT (pick any)
		public ??_C@_0BK@ELEJBNIF@?5?9noout?5?5?5?5?5?5?5?5no?5output?6?$AA@
; `string'
??_C@_0BK@ELEJBNIF@?5?9noout?5?5?5?5?5?5?5?5no?5output?6?$AA@ db ' -noout        no output',0Ah,0
					; DATA XREF: _dsaparam_main+4EBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D84h
; COMDAT (pick any)
		public ??_C@_0CD@GAOJDLEA@?5?9genkey?5?5?5?5?5?5?5generate?5a?5DSA?5ke@
; `string'
??_C@_0CD@GAOJDLEA@?5?9genkey?5?5?5?5?5?5?5generate?5a?5DSA?5ke@ db ' -genkey       generate a DSA key',0Ah,0
					; DATA XREF: _dsaparam_main+4FBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DA8h
; COMDAT (pick any)
		public ??_C@_0DF@PLPKKFNH@?5?9rand?5?5?5?5?5?5?5?5?5files?5to?5use?5for?5@
; `string'
??_C@_0DF@PLPKKFNH@?5?9rand?5?5?5?5?5?5?5?5?5files?5to?5use?5for?5@ db ' -rand         files to use for random number input',0Ah,0
					; DATA XREF: _dsaparam_main+50Bo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DE0h
; COMDAT (pick any)
		public ??_C@_0DK@OCLGLONK@?5?9engine?5e?5?5?5?5?5use?5engine?5e?0?5pos@
; `string'
??_C@_0DK@OCLGLONK@?5?9engine?5e?5?5?5?5?5use?5engine?5e?0?5pos@ db ' -engine e     use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _dsaparam_main+51Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0E1Ch
; COMDAT (pick any)
		public ??_C@_0EB@JJOILNDM@?5number?5?5?5?5?5?5?5?5number?5of?5bits?5to@
; `string'
??_C@_0EB@JJOILNDM@?5number?5?5?5?5?5?5?5?5number?5of?5bits?5to@ db ' number        number of bits to use for generating private key',0Ah
					; DATA XREF: _dsaparam_main+52Bo
		db 0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E60h
; COMDAT (pick any)
		public ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
; `string'
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ db '%ld semi-random bytes loaded',0Ah,0
					; DATA XREF: _dsaparam_main+5CFo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E80h
; COMDAT (pick any)
		public ??_C@_1CE@HMLGLBDK@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAd?$AAs?$AAa?$AAp?$AAa?$AAr?$AAa?$AAm?$AA?4?$AAc?$AA?$AA@
; wchar_t `string'
??_C@_1CE@HMLGLBDK@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAd?$AAs?$AAa?$AAp?$AAa?$AAr?$AAa?$AAm?$AA?4?$AAc?$AA?$AA@:
					; DATA XREF: _dsaparam_main+615o
					; _dsaparam_main+9BEo
		unicode	0, <.\apps\dsaparam.c>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EA4h
; COMDAT (pick any)
		public ??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@
; wchar_t `string'
??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@:
					; DATA XREF: _dsaparam_main+61Ao
					; _dsaparam_main+9C3o
		unicode	0, <need_rand>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EB8h
; COMDAT (pick any)
		public ??_C@_0BN@CFLLAMLA@Error?5allocating?5DSA?5object?6?$AA@
; `string'
??_C@_0BN@CFLLAMLA@Error?5allocating?5DSA?5object?6?$AA@ db 'Error allocating DSA object',0Ah,0
					; DATA XREF: _dsaparam_main+633o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ED8h
; COMDAT (pick any)
		public ??_C@_0CO@MBCDDJGG@Generating?5DSA?5parameters?0?5?$CFd?5bi@
; `string'
??_C@_0CO@MBCDDJGG@Generating?5DSA?5parameters?0?5?$CFd?5bi@ db	'Generating DSA parameters, %d bit long prime',0Ah,0
					; DATA XREF: _dsaparam_main+671o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F08h
; COMDAT (pick any)
		public ??_C@_0BL@BMHGIKAF@This?5could?5take?5some?5time?6?$AA@
; `string'
??_C@_0BL@BMHGIKAF@This?5could?5take?5some?5time?6?$AA@	db 'This could take some time',0Ah,0
					; DATA XREF: _dsaparam_main+681o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F24h
; COMDAT (pick any)
		public ??_C@_0CC@FFIJENLI@Error?0?5DSA?5key?5generation?5failed@
; `string'
??_C@_0CC@FFIJENLI@Error?0?5DSA?5key?5generation?5failed@ db 'Error, DSA key generation failed',0Ah,0
					; DATA XREF: _dsaparam_main+6BAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F48h
; COMDAT (pick any)
		public ??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@
; `string'
??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@	db 'bad input format specified',0Ah,0
					; DATA XREF: _dsaparam_main:loc_B34o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F64h
; COMDAT (pick any)
		public ??_C@_0BP@GLONFKAC@unable?5to?5load?5DSA?5parameters?6?$AA@
; `string'
??_C@_0BP@GLONFKAC@unable?5to?5load?5DSA?5parameters?6?$AA@ db 'unable to load DSA parameters',0Ah,0
					; DATA XREF: _dsaparam_main+717o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F84h
; COMDAT (pick any)
		public ??_C@_0BC@CGNIGKIL@?4?2apps?2dsaparam?4c?$AA@
; `string'
??_C@_0BC@CGNIGKIL@?4?2apps?2dsaparam?4c?$AA@ db '.\apps\dsaparam.c',0
					; DATA XREF: _dsaparam_main+77Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F98h
; COMDAT (pick any)
		public ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@
; char `string'[]
??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@ db 'OPENSSL_malloc',0 ; DATA XREF: _dsaparam_main+791o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FA8h
; COMDAT (pick any)
		public ??_C@_0CB@KLNHLBLF@static?5unsigned?5char?5dsa?$CFd_p?$FL?$FN?$DN?$HL@
; char `string'[]
??_C@_0CB@KLNHLBLF@static?5unsigned?5char?5dsa?$CFd_p?$FL?$FN?$DN?$HL@ db 'static unsigned char dsa%d_p[]={',0
					; DATA XREF: _dsaparam_main+7AFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FCCh
; COMDAT (pick any)
		public ??_C@_02NMOLBIHC@?6?7?$AA@
; char `string'[3]
??_C@_02NMOLBIHC@?6?7?$AA@ db 0Ah	; DATA XREF: _dsaparam_main+7DAo
					; _dsaparam_main+846o ...
		db 9,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FD0h
; COMDAT (pick any)
		public ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@
; char `string'[]
??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ db '0x%02X,',0 ; DATA XREF: _dsaparam_main+7ECo
					; _dsaparam_main+858o ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FD8h
; COMDAT (pick any)
		public ??_C@_05KJDCIFPB@?6?7?$HN?$DL?6?$AA@
; char `string'[]
??_C@_05KJDCIFPB@?6?7?$HN?$DL?6?$AA@ db	0Ah ; DATA XREF: _dsaparam_main:loc_8C2o
					; _dsaparam_main:loc_92Eo
		db 9,'};',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FE0h
; COMDAT (pick any)
		public ??_C@_0CB@GAILGCBA@static?5unsigned?5char?5dsa?$CFd_q?$FL?$FN?$DN?$HL@
; char `string'[]
??_C@_0CB@GAILGCBA@static?5unsigned?5char?5dsa?$CFd_q?$FL?$FN?$DN?$HL@ db 'static unsigned char dsa%d_q[]={',0
					; DATA XREF: _dsaparam_main+816o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1004h
; COMDAT (pick any)
		public ??_C@_0CB@LFAEIDJG@static?5unsigned?5char?5dsa?$CFd_g?$FL?$FN?$DN?$HL@
; char `string'[]
??_C@_0CB@LFAEIDJG@static?5unsigned?5char?5dsa?$CFd_g?$FL?$FN?$DN?$HL@ db 'static unsigned char dsa%d_g[]={',0
					; DATA XREF: _dsaparam_main+882o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1028h
; COMDAT (pick any)
		public ??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@
; char `string'[]
??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@ db 0Ah ;	DATA XREF: _dsaparam_main:loc_995o
		db 9,'};',0Ah
		db 0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1030h
; COMDAT (pick any)
		public ??_C@_0BF@DGBLCCNH@DSA?5?$CKget_dsa?$CFd?$CI?$CJ?6?7?$HL?6?$AA@
; char `string'[]
??_C@_0BF@DGBLCCNH@DSA?5?$CKget_dsa?$CFd?$CI?$CJ?6?7?$HL?6?$AA@	db 'DSA *get_dsa%d()',0Ah
					; DATA XREF: _dsaparam_main+8DCo
		db 9,'{',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1048h
; COMDAT (pick any)
		public ??_C@_0N@LIFHEPAE@?7DSA?5?$CKdsa?$DL?6?6?$AA@
; char `string'[]
??_C@_0N@LIFHEPAE@?7DSA?5?$CKdsa?$DL?6?6?$AA@ db 9,'DSA *dsa;',0Ah
					; DATA XREF: _dsaparam_main+8E6o
		db 0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1058h
; COMDAT (pick any)
		public ??_C@_0CN@FKNLFKHI@?7if?5?$CI?$CIdsa?$DNDSA_new?$CI?$CJ?$CJ?5?$DN?$DN?5NULL?$CJ?5re@
; char `string'[]
??_C@_0CN@FKNLFKHI@?7if?5?$CI?$CIdsa?$DNDSA_new?$CI?$CJ?$CJ?5?$DN?$DN?5NULL?$CJ?5re@ db	9,'if ((dsa=DSA_new()) == NULL) return(NULL);',0Ah,0
					; DATA XREF: _dsaparam_main+8F0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1088h
; COMDAT (pick any)
		public ??_C@_0DC@NBCAOFFJ@?7dsa?9?$DOp?$DNBN_bin2bn?$CIdsa?$CFd_p?0sizeof@
; char `string'[]
??_C@_0DC@NBCAOFFJ@?7dsa?9?$DOp?$DNBN_bin2bn?$CIdsa?$CFd_p?0sizeof@ db 9,'dsa->p=BN_bin2bn(dsa%d_p,sizeof(dsa%d_p),NULL);',0Ah,0
					; DATA XREF: _dsaparam_main+8FCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10BCh
; COMDAT (pick any)
		public ??_C@_0DC@NNJLKEGM@?7dsa?9?$DOq?$DNBN_bin2bn?$CIdsa?$CFd_q?0sizeof@
; char `string'[]
??_C@_0DC@NNJLKEGM@?7dsa?9?$DOq?$DNBN_bin2bn?$CIdsa?$CFd_q?0sizeof@ db 9,'dsa->q=BN_bin2bn(dsa%d_q,sizeof(dsa%d_q),NULL);',0Ah,0
					; DATA XREF: _dsaparam_main+908o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10F0h
; COMDAT (pick any)
		public ??_C@_0DC@DNLEDBIC@?7dsa?9?$DOg?$DNBN_bin2bn?$CIdsa?$CFd_g?0sizeof@
; char `string'[]
??_C@_0DC@DNLEDBIC@?7dsa?9?$DOg?$DNBN_bin2bn?$CIdsa?$CFd_g?0sizeof@ db 9,'dsa->g=BN_bin2bn(dsa%d_g,sizeof(dsa%d_g),NULL);',0Ah,0
					; DATA XREF: _dsaparam_main+914o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1124h
; COMDAT (pick any)
		public ??_C@_0EA@PJHPDPP@?7if?5?$CI?$CIdsa?9?$DOp?5?$DN?$DN?5NULL?$CJ?5?$HM?$HM?5?$CIdsa?9?$DOq@
; char `string'[]
??_C@_0EA@PJHPDPP@?7if?5?$CI?$CIdsa?9?$DOp?5?$DN?$DN?5NULL?$CJ?5?$HM?$HM?5?$CIdsa?9?$DOq@ db 9,'if ((dsa->p == NULL) || (dsa->q == NULL) || (dsa->g == NULL))',0Ah,0
					; DATA XREF: _dsaparam_main+91Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1164h
; COMDAT (pick any)
		public ??_C@_0CE@LPDLHMLH@?7?7?$HL?5DSA_free?$CIdsa?$CJ?$DL?5return?$CINULL?$CJ?$DL@
; char `string'[]
??_C@_0CE@LPDLHMLH@?7?7?$HL?5DSA_free?$CIdsa?$CJ?$DL?5return?$CINULL?$CJ?$DL@ db 9,9,'{ DSA_free(dsa); return(NULL); }',0Ah,0
					; DATA XREF: _dsaparam_main+928o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1188h
; COMDAT (pick any)
		public ??_C@_0BC@POIKGIGK@?7return?$CIdsa?$CJ?$DL?6?7?$HN?6?$AA@
; char `string'[]
??_C@_0BC@POIKGIGK@?7return?$CIdsa?$CJ?$DL?6?7?$HN?6?$AA@ db 9,'return(dsa);',0Ah
					; DATA XREF: _dsaparam_main+935o
		db 9,'}',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 119Ch
; COMDAT (pick any)
		public ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
; `string'
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ db 'bad output format specified for outfile',0Ah,0
					; DATA XREF: _dsaparam_main:loc_A56o
					; _dsaparam_main:loc_B19o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11C8h
; COMDAT (pick any)
		public ??_C@_0CA@IAIMOMNI@unable?5to?5write?5DSA?5parameters?6?$AA@
; `string'
??_C@_0CA@IAIMOMNI@unable?5to?5write?5DSA?5parameters?6?$AA@ db	'unable to write DSA parameters',0Ah,0
					; DATA XREF: _dsaparam_main+988o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; void __cdecl __wassert(const wchar_t *Message, const wchar_t *File, unsigned int Line)
		extrn __imp___wassert:near ; CODE XREF:	_dsaparam_main+61Fp
					; _dsaparam_main+9C8p
					; DATA XREF: ...
		extrn __imp____acrt_iob_func:near ; CODE XREF: _dsaparam_main+73p
					; _dsaparam_main+43Bp ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _dsaparam_main+55Ep
					; _dsaparam_main+662p ...
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _printf+23p
					; DATA XREF: ...
		extrn __imp____stdio_common_vsscanf:near ; CODE	XREF: __vsscanf_l+1Cp
					; _sscanf+1Bp
					; DATA XREF: ...
		extrn _CRYPTO_malloc:near ; CODE XREF: _dsaparam_main+783p
		extrn _BIO_s_file:near	; CODE XREF: _dsaparam_main+5Ap
					; _dsaparam_main+3F3p ...
		extrn _BIO_new:near	; CODE XREF: _dsaparam_main+60p
					; _dsaparam_main+3F9p ...
		extrn _BIO_free:near	; CODE XREF: _dsaparam_main+AA1p
		extrn _BIO_write:near	; CODE XREF: _dsa_cb+4Ap
		extrn _BIO_ctrl:near	; CODE XREF: _dsa_cb+58p
					; _dsaparam_main+84p ...
		extrn _BIO_free_all:near ; CODE	XREF: _dsaparam_main+AAEp
		extrn _BIO_printf:near	; CODE XREF: _dsaparam_main+45Cp
					; _dsaparam_main+473p ...
		extrn _BN_num_bits:near	; CODE XREF: _dsaparam_main+759p
					; _dsaparam_main+76Ep
		extrn _BN_bn2bin:near	; CODE XREF: _dsaparam_main+7A9p
					; _dsaparam_main+810p ...
		extrn _ASN1_d2i_bio:near ; CODE	XREF: _dsaparam_main+6E8p
		extrn _ASN1_i2d_bio:near ; CODE	XREF: _dsaparam_main+96Bp
		extrn _DSAparams_dup:near ; CODE XREF: _dsaparam_main+9CEp
		extrn _DSA_new:near	; CODE XREF: _dsaparam_main:loc_6E8p
					; DATA XREF: _dsaparam_main+6E3o
		extrn _DSA_free:near	; CODE XREF: _dsaparam_main+9F9p
					; _dsaparam_main+A35p ...
		extrn _d2i_DSAparams:near ; DATA XREF: _dsaparam_main+6DEo
		extrn _DSA_generate_parameters_ex:near ; CODE XREF: _dsaparam_main+6A3p
		extrn _DSA_generate_key:near ; CODE XREF: _dsaparam_main+9E1p
		extrn _i2d_DSAparams:near ; DATA XREF: _dsaparam_main+966o
		extrn _DSAparams_print:near ; CODE XREF: _dsaparam_main+743p
		extrn _i2d_DSAPrivateKey_bio:near ; CODE XREF: _dsaparam_main+A11p
		extrn _ERR_print_errors:near ; CODE XREF: _dsaparam_main+6B5p
					; _dsaparam_main+72Dp ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _dsaparam_main:loc_4B2p
		extrn _app_RAND_load_file:near ; CODE XREF: _dsaparam_main+5BCp
		extrn _app_RAND_write_file:near	; CODE XREF: _dsaparam_main+A49p
		extrn _app_RAND_load_files:near	; CODE XREF: _dsaparam_main+5C9p
		extrn _str2fmt:near	; CODE XREF: _dsaparam_main+129p
					; _dsaparam_main+17Ap
		extrn _setup_engine:near ; CODE	XREF: _dsaparam_main+598p
		extrn _load_config:near	; CODE XREF: _dsaparam_main+94p
		extrn _PEM_write_bio_DSAPrivateKey:near	; CODE XREF: _dsaparam_main+A2Cp
		extrn _PEM_read_bio_DSAparams:near ; CODE XREF:	_dsaparam_main+705p
		extrn _PEM_write_bio_DSAparams:near ; CODE XREF: _dsaparam_main+97Cp
		extrn __chkstk:near	; CODE XREF: _dsaparam_main+5p
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso
; `__local_stdio_scanf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:near
					; DATA XREF: ___local_stdio_scanf_optionso
		extrn _bio_err:near	; DATA XREF: _dsaparam_main+Ar
					; _dsaparam_main+68w ...


		end

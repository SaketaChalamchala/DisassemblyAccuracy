;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	1D0673638C1AD66C921C2A6B2A0215CF
; Input	CRC32 :	A9A8B19D

; File Name   :	C:\compspace\Diff\openssl\obj\ecparam.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ecparam_main
_ecparam_main	proc near

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
ErrMsg		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 6Ch ; 'l'
		call	__chkstk
		xor	eax, eax
		mov	[esp+6Ch+var_28], 0
		push	esi
		mov	[esp+70h+var_44], eax
		mov	esi, 4
		mov	[esp+70h+var_C], eax
		mov	[esp+70h+var_30], eax
		mov	[esp+70h+var_20], eax
		mov	[esp+70h+var_18], eax
		mov	[esp+70h+var_1C], eax
		mov	[esp+70h+var_60], eax
		mov	[esp+70h+var_8], eax
		mov	[esp+70h+ErrMsg], eax
		mov	[esp+70h+var_38], eax
		mov	[esp+70h+var_10], eax
		mov	[esp+70h+var_14], eax
		mov	[esp+70h+var_34], eax
		mov	[esp+70h+var_5C], eax
		mov	[esp+70h+var_58], eax
		mov	[esp+70h+var_54], eax
		mov	[esp+70h+var_50], eax
		mov	[esp+70h+var_64], eax
		mov	[esp+70h+var_4C], eax
		mov	[esp+70h+var_68], eax
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+70h+var_6C], esi
		mov	[esp+70h+var_48], 1
		mov	[esp+70h+var_24], 0
		test	eax, eax
		jnz	short loc_BE
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_BE
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_BE:					; CODE XREF: _ecparam_main+85j
					; _ecparam_main+9Cj
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_128D
		push	ebx
		push	ebp
		mov	ebp, [esp+78h+arg_4]
		push	edi
		mov	edi, [esp+7Ch+arg_0]
		dec	edi
		mov	[esp+7Ch+var_2C], 3
		mov	eax, [ebp+0]
		add	ebp, 4
		mov	[esp+7Ch+var_40], 3
		mov	[esp+7Ch+var_4], eax
		cmp	edi, 1
		jl	loc_6E3

loc_106:				; CODE XREF: _ecparam_main+6DDj
		mov	esi, [ebp+0]
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, esi

loc_110:				; CODE XREF: _ecparam_main+12Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_130
		test	dl, dl
		jz	short loc_12C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_130
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_110

loc_12C:				; CODE XREF: _ecparam_main+118j
		xor	eax, eax
		jmp	short loc_135
; ---------------------------------------------------------------------------

loc_130:				; CODE XREF: _ecparam_main+114j
					; _ecparam_main+120j
		sbb	eax, eax
		or	eax, 1

loc_135:				; CODE XREF: _ecparam_main+12Ej
		test	eax, eax
		jnz	short loc_15A
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		push	dword ptr [ebp+4]
		add	ebp, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+7Ch+var_2C], eax
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_15A:				; CODE XREF: _ecparam_main+137j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, esi

loc_161:				; CODE XREF: _ecparam_main+17Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_181
		test	dl, dl
		jz	short loc_17D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_181
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_161

loc_17D:				; CODE XREF: _ecparam_main+169j
		xor	eax, eax
		jmp	short loc_186
; ---------------------------------------------------------------------------

loc_181:				; CODE XREF: _ecparam_main+165j
					; _ecparam_main+171j
		sbb	eax, eax
		or	eax, 1

loc_186:				; CODE XREF: _ecparam_main+17Fj
		test	eax, eax
		jnz	short loc_1AB
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		push	dword ptr [ebp+4]
		add	ebp, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+7Ch+var_40], eax
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_1AB:				; CODE XREF: _ecparam_main+188j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, esi

loc_1B2:				; CODE XREF: _ecparam_main+1CCj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1D2
		test	dl, dl
		jz	short loc_1CE
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1D2
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1B2

loc_1CE:				; CODE XREF: _ecparam_main+1BAj
		xor	eax, eax
		jmp	short loc_1D7
; ---------------------------------------------------------------------------

loc_1D2:				; CODE XREF: _ecparam_main+1B6j
					; _ecparam_main+1C2j
		sbb	eax, eax
		or	eax, 1

loc_1D7:				; CODE XREF: _ecparam_main+1D0j
		test	eax, eax
		jnz	short loc_1F4
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		mov	ebx, [ebp+4]
		add	ebp, 4
		mov	[esp+7Ch+ErrMsg], ebx
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_1F4:				; CODE XREF: _ecparam_main+1D9j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_200:				; CODE XREF: _ecparam_main+21Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_220
		test	dl, dl
		jz	short loc_21C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_220
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_200

loc_21C:				; CODE XREF: _ecparam_main+208j
		xor	eax, eax
		jmp	short loc_225
; ---------------------------------------------------------------------------

loc_220:				; CODE XREF: _ecparam_main+204j
					; _ecparam_main+210j
		sbb	eax, eax
		or	eax, 1

loc_225:				; CODE XREF: _ecparam_main+21Ej
		test	eax, eax
		jnz	short loc_242
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		mov	ebx, [ebp+4]
		add	ebp, 4
		mov	[esp+7Ch+var_38], ebx
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_242:				; CODE XREF: _ecparam_main+227j
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_250:				; CODE XREF: _ecparam_main+26Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_270
		test	dl, dl
		jz	short loc_26C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_270
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_250

loc_26C:				; CODE XREF: _ecparam_main+258j
		xor	eax, eax
		jmp	short loc_275
; ---------------------------------------------------------------------------

loc_270:				; CODE XREF: _ecparam_main+254j
					; _ecparam_main+260j
		sbb	eax, eax
		or	eax, 1

loc_275:				; CODE XREF: _ecparam_main+26Ej
		test	eax, eax
		jnz	short loc_286
		mov	[esp+7Ch+var_1C], 1
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_286:				; CODE XREF: _ecparam_main+277j
		mov	ecx, offset ??_C@_02OLHPOPJI@?9C?$AA@ ;	`string'
		mov	eax, esi
		nop	dword ptr [eax]

loc_290:				; CODE XREF: _ecparam_main+2AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2B0
		test	dl, dl
		jz	short loc_2AC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2B0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_290

loc_2AC:				; CODE XREF: _ecparam_main+298j
		xor	eax, eax
		jmp	short loc_2B5
; ---------------------------------------------------------------------------

loc_2B0:				; CODE XREF: _ecparam_main+294j
					; _ecparam_main+2A0j
		sbb	eax, eax
		or	eax, 1

loc_2B5:				; CODE XREF: _ecparam_main+2AEj
		test	eax, eax
		jnz	short loc_2C6
		mov	[esp+7Ch+var_14], 1
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_2C6:				; CODE XREF: _ecparam_main+2B7j
		mov	ecx, offset ??_C@_06CLLLPJIB@?9check?$AA@ ; "-check"
		mov	eax, esi
		nop	dword ptr [eax]

loc_2D0:				; CODE XREF: _ecparam_main+2EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2F0
		test	dl, dl
		jz	short loc_2EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2D0

loc_2EC:				; CODE XREF: _ecparam_main+2D8j
		xor	eax, eax
		jmp	short loc_2F5
; ---------------------------------------------------------------------------

loc_2F0:				; CODE XREF: _ecparam_main+2D4j
					; _ecparam_main+2E0j
		sbb	eax, eax
		or	eax, 1

loc_2F5:				; CODE XREF: _ecparam_main+2EEj
		test	eax, eax
		jnz	short loc_306
		mov	[esp+7Ch+var_18], 1
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_306:				; CODE XREF: _ecparam_main+2F7j
		mov	ecx, offset ??_C@_05IBCNGGP@?9name?$AA@	; "-name"
		mov	eax, esi
		nop	dword ptr [eax]

loc_310:				; CODE XREF: _ecparam_main+32Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_330
		test	dl, dl
		jz	short loc_32C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_330
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_310

loc_32C:				; CODE XREF: _ecparam_main+318j
		xor	eax, eax
		jmp	short loc_335
; ---------------------------------------------------------------------------

loc_330:				; CODE XREF: _ecparam_main+314j
					; _ecparam_main+320j
		sbb	eax, eax
		or	eax, 1

loc_335:				; CODE XREF: _ecparam_main+32Ej
		test	eax, eax
		jnz	short loc_352
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		mov	ebx, [ebp+4]
		add	ebp, 4
		mov	[esp+7Ch+var_44], ebx
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_352:				; CODE XREF: _ecparam_main+337j
		mov	ecx, offset ??_C@_0N@FINGPDPB@?9list_curves?$AA@ ; "-list_curves"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_360:				; CODE XREF: _ecparam_main+37Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_380
		test	dl, dl
		jz	short loc_37C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_380
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_360

loc_37C:				; CODE XREF: _ecparam_main+368j
		xor	eax, eax
		jmp	short loc_385
; ---------------------------------------------------------------------------

loc_380:				; CODE XREF: _ecparam_main+364j
					; _ecparam_main+370j
		sbb	eax, eax
		or	eax, 1

loc_385:				; CODE XREF: _ecparam_main+37Ej
		test	eax, eax
		jnz	short loc_396
		mov	[esp+7Ch+var_30], 1
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_396:				; CODE XREF: _ecparam_main+387j
		mov	ecx, offset ??_C@_0L@CFGKFMBD@?9conv_form?$AA@ ; "-conv_form"
		mov	eax, esi
		nop	dword ptr [eax]

loc_3A0:				; CODE XREF: _ecparam_main+3BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3C0
		test	dl, dl
		jz	short loc_3BC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3C0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3A0

loc_3BC:				; CODE XREF: _ecparam_main+3A8j
		xor	eax, eax
		jmp	short loc_3C5
; ---------------------------------------------------------------------------

loc_3C0:				; CODE XREF: _ecparam_main+3A4j
					; _ecparam_main+3B0j
		sbb	eax, eax
		or	eax, 1

loc_3C5:				; CODE XREF: _ecparam_main+3BEj
		test	eax, eax
		jnz	loc_4AB
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		mov	edx, [ebp+4]
		add	ebp, 4
		mov	[esp+7Ch+var_28], 1
		mov	ecx, offset ??_C@_0L@NHGFHLFK@compressed?$AA@ ;	"compressed"
		mov	eax, edx
		nop	dword ptr [eax+00h]

loc_3F0:				; CODE XREF: _ecparam_main+40Aj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_410
		test	bl, bl
		jz	short loc_40C
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_410
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_3F0

loc_40C:				; CODE XREF: _ecparam_main+3F8j
		xor	eax, eax
		jmp	short loc_415
; ---------------------------------------------------------------------------

loc_410:				; CODE XREF: _ecparam_main+3F4j
					; _ecparam_main+400j
		sbb	eax, eax
		or	eax, 1

loc_415:				; CODE XREF: _ecparam_main+40Ej
		test	eax, eax
		jnz	short loc_427
		mov	esi, 2
		mov	[esp+7Ch+var_6C], esi
		jmp	loc_6D6
; ---------------------------------------------------------------------------

loc_427:				; CODE XREF: _ecparam_main+417j
		mov	ecx, offset ??_C@_0N@NFCOPMLF@uncompressed?$AA@	; "uncompressed"
		mov	eax, edx
		xchg	ax, ax

loc_430:				; CODE XREF: _ecparam_main+44Aj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_450
		test	bl, bl
		jz	short loc_44C
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_450
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_430

loc_44C:				; CODE XREF: _ecparam_main+438j
		xor	eax, eax
		jmp	short loc_455
; ---------------------------------------------------------------------------

loc_450:				; CODE XREF: _ecparam_main+434j
					; _ecparam_main+440j
		sbb	eax, eax
		or	eax, 1

loc_455:				; CODE XREF: _ecparam_main+44Ej
		test	eax, eax
		jnz	short loc_467
		mov	esi, 4
		mov	[esp+7Ch+var_6C], esi
		jmp	loc_6D6
; ---------------------------------------------------------------------------

loc_467:				; CODE XREF: _ecparam_main+457j
		mov	eax, offset ??_C@_06JCLEGMDM@hybrid?$AA@ ; "hybrid"
		nop	dword ptr [eax+00h]

loc_470:				; CODE XREF: _ecparam_main+48Aj
		mov	cl, [edx]
		cmp	cl, [eax]
		jnz	short loc_490
		test	cl, cl
		jz	short loc_48C
		mov	cl, [edx+1]
		cmp	cl, [eax+1]
		jnz	short loc_490
		add	edx, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_470

loc_48C:				; CODE XREF: _ecparam_main+478j
		xor	eax, eax
		jmp	short loc_495
; ---------------------------------------------------------------------------

loc_490:				; CODE XREF: _ecparam_main+474j
					; _ecparam_main+480j
		sbb	eax, eax
		or	eax, 1

loc_495:				; CODE XREF: _ecparam_main+48Ej
		test	eax, eax
		jnz	$bad$280
		mov	esi, 6
		mov	[esp+7Ch+var_6C], esi
		jmp	loc_6D6
; ---------------------------------------------------------------------------

loc_4AB:				; CODE XREF: _ecparam_main+3C7j
		mov	ecx, offset ??_C@_0L@KJNNNAOB@?9param_enc?$AA@ ; "-param_enc"
		mov	eax, esi

loc_4B2:				; CODE XREF: _ecparam_main+4CCj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4D2
		test	dl, dl
		jz	short loc_4CE
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4D2
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4B2

loc_4CE:				; CODE XREF: _ecparam_main+4BAj
		xor	eax, eax
		jmp	short loc_4D7
; ---------------------------------------------------------------------------

loc_4D2:				; CODE XREF: _ecparam_main+4B6j
					; _ecparam_main+4C2j
		sbb	eax, eax
		or	eax, 1

loc_4D7:				; CODE XREF: _ecparam_main+4D0j
		test	eax, eax
		jnz	loc_576
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		mov	edx, [ebp+4]
		add	ebp, 4
		mov	[esp+7Ch+var_24], 1
		mov	ecx, offset ??_C@_0M@FBFAECBG@named_curve?$AA@ ; "named_curve"
		mov	eax, edx
		xchg	ax, ax

loc_500:				; CODE XREF: _ecparam_main+51Aj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_520
		test	bl, bl
		jz	short loc_51C
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_520
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_500

loc_51C:				; CODE XREF: _ecparam_main+508j
		xor	eax, eax
		jmp	short loc_525
; ---------------------------------------------------------------------------

loc_520:				; CODE XREF: _ecparam_main+504j
					; _ecparam_main+510j
		sbb	eax, eax
		or	eax, 1

loc_525:				; CODE XREF: _ecparam_main+51Ej
		test	eax, eax
		jnz	short loc_536
		mov	[esp+7Ch+var_48], 1
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_536:				; CODE XREF: _ecparam_main+527j
		mov	eax, offset ??_C@_08FCANLLBJ@explicit?$AA@ ; "explicit"
		nop	dword ptr [eax+eax+00h]

loc_540:				; CODE XREF: _ecparam_main+55Aj
		mov	cl, [edx]
		cmp	cl, [eax]
		jnz	short loc_560
		test	cl, cl
		jz	short loc_55C
		mov	cl, [edx+1]
		cmp	cl, [eax+1]
		jnz	short loc_560
		add	edx, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_540

loc_55C:				; CODE XREF: _ecparam_main+548j
		xor	eax, eax
		jmp	short loc_565
; ---------------------------------------------------------------------------

loc_560:				; CODE XREF: _ecparam_main+544j
					; _ecparam_main+550j
		sbb	eax, eax
		or	eax, 1

loc_565:				; CODE XREF: _ecparam_main+55Ej
		test	eax, eax
		jnz	$bad$280
		mov	[esp+7Ch+var_48], eax
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_576:				; CODE XREF: _ecparam_main+4D9j
		mov	ecx, offset ??_C@_08NCAIIAEE@?9no_seed?$AA@ ; "-no_seed"
		mov	eax, esi
		nop	dword ptr [eax]

loc_580:				; CODE XREF: _ecparam_main+59Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5A0
		test	dl, dl
		jz	short loc_59C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5A0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_580

loc_59C:				; CODE XREF: _ecparam_main+588j
		xor	eax, eax
		jmp	short loc_5A5
; ---------------------------------------------------------------------------

loc_5A0:				; CODE XREF: _ecparam_main+584j
					; _ecparam_main+590j
		sbb	eax, eax
		or	eax, 1

loc_5A5:				; CODE XREF: _ecparam_main+59Ej
		test	eax, eax
		jnz	short loc_5B6
		mov	[esp+7Ch+var_20], 1
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_5B6:				; CODE XREF: _ecparam_main+5A7j
		mov	ecx, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"
		mov	eax, esi
		nop	dword ptr [eax]

loc_5C0:				; CODE XREF: _ecparam_main+5DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5E0
		test	dl, dl
		jz	short loc_5DC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5E0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5C0

loc_5DC:				; CODE XREF: _ecparam_main+5C8j
		xor	eax, eax
		jmp	short loc_5E5
; ---------------------------------------------------------------------------

loc_5E0:				; CODE XREF: _ecparam_main+5C4j
					; _ecparam_main+5D0j
		sbb	eax, eax
		or	eax, 1

loc_5E5:				; CODE XREF: _ecparam_main+5DEj
		test	eax, eax
		jnz	short loc_5F6
		mov	[esp+7Ch+var_10], 1
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_5F6:				; CODE XREF: _ecparam_main+5E7j
		mov	ecx, offset ??_C@_07JEECMJMJ@?9genkey?$AA@ ; "-genkey"
		mov	eax, esi
		nop	dword ptr [eax]

loc_600:				; CODE XREF: _ecparam_main+61Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_620
		test	dl, dl
		jz	short loc_61C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_620
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_600

loc_61C:				; CODE XREF: _ecparam_main+608j
		xor	eax, eax
		jmp	short loc_625
; ---------------------------------------------------------------------------

loc_620:				; CODE XREF: _ecparam_main+604j
					; _ecparam_main+610j
		sbb	eax, eax
		or	eax, 1

loc_625:				; CODE XREF: _ecparam_main+61Ej
		test	eax, eax
		jnz	short loc_63E
		mov	[esp+7Ch+var_8], 1
		mov	[esp+7Ch+var_60], 1
		jmp	loc_6D2
; ---------------------------------------------------------------------------

loc_63E:				; CODE XREF: _ecparam_main+627j
		mov	ecx, offset ??_C@_05LGFPCDPE@?9rand?$AA@ ; "-rand"
		mov	eax, esi

loc_645:				; CODE XREF: _ecparam_main+65Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_665
		test	dl, dl
		jz	short loc_661
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_665
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_645

loc_661:				; CODE XREF: _ecparam_main+64Dj
		xor	eax, eax
		jmp	short loc_66A
; ---------------------------------------------------------------------------

loc_665:				; CODE XREF: _ecparam_main+649j
					; _ecparam_main+655j
		sbb	eax, eax
		or	eax, 1

loc_66A:				; CODE XREF: _ecparam_main+663j
		test	eax, eax
		jnz	short loc_68C
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		mov	ebx, [ebp+4]
		add	ebp, 4
		mov	[esp+7Ch+var_C], ebx
		mov	[esp+7Ch+var_60], 1
		jmp	short loc_6D2
; ---------------------------------------------------------------------------

loc_68C:				; CODE XREF: _ecparam_main+66Cj
		mov	eax, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"

loc_691:				; CODE XREF: _ecparam_main+6ABj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_6B1
		test	cl, cl
		jz	short loc_6AD
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_6B1
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_691

loc_6AD:				; CODE XREF: _ecparam_main+699j
		xor	eax, eax
		jmp	short loc_6B6
; ---------------------------------------------------------------------------

loc_6B1:				; CODE XREF: _ecparam_main+695j
					; _ecparam_main+6A1j
		sbb	eax, eax
		or	eax, 1

loc_6B6:				; CODE XREF: _ecparam_main+6AFj
		test	eax, eax
		jnz	loc_73E
		dec	edi
		cmp	edi, 1
		jl	$bad$280
		mov	ebx, [ebp+4]
		add	ebp, 4
		mov	[esp+7Ch+var_34], ebx

loc_6D2:				; CODE XREF: _ecparam_main+155j
					; _ecparam_main+1A6j ...
		mov	esi, [esp+7Ch+var_6C]

loc_6D6:				; CODE XREF: _ecparam_main+422j
					; _ecparam_main+462j ...
		dec	edi
		add	ebp, 4
		cmp	edi, 1
		jge	loc_106

loc_6E3:				; CODE XREF: _ecparam_main+100j
		call	_ERR_load_crypto_strings
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	ebp, eax
		mov	[esp+80h+var_6C], ebp
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 8
		mov	ebx, eax
		test	ebp, ebp
		jz	loc_123E
		test	ebx, ebx
		jz	loc_123E
		mov	edi, [esp+7Ch+ErrMsg]
		test	edi, edi
		jnz	loc_8EE
		push	edi
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	edi
		push	6Ah ; 'j'
		push	ebp
		call	_BIO_ctrl
		add	esp, 14h
		jmp	loc_904
; ---------------------------------------------------------------------------

loc_73E:				; CODE XREF: _ecparam_main+6B8j
		push	dword ptr [ebp+0]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$bad$280:				; CODE XREF: _ecparam_main+13Dj
					; _ecparam_main+18Ej ...
		push	[esp+7Ch+var_4]
		push	offset ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; "%s [options] <infile >outfile\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DM@CCPGALMI@?5?9inform?5arg?5?5?5?5?5?5?5input?5format?5@	; " -inform arg	      input format - defau"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@OIJBHPKA@?5?9outform?5arg?5?5?5?5?5?5output?5format@ ;	" -outform arg	    output format - defa"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@ONPMCCDD@?5?9in?5?5arg?5?5?5?5?5?5?5?5?5?5input?5file?5?5?9@ ;	" -in  arg	    input file	- defaul"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@CGPCLCOH@?5?9out?5arg?5?5?5?5?5?5?5?5?5?5output?5file?5?9@ ; "	-out arg	  output file -	defaul"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DC@CCCHKGEK@?5?9noout?5?5?5?5?5?5?5?5?5?5?5?5do?5not?5print?5@ ; " -noout		   do not print	the ec "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DJ@NGFOOIEC@?5?9text?5?5?5?5?5?5?5?5?5?5?5?5?5print?5the?5ec?5@ ;	" -text		    print the ec paramet"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0CP@JNGOGIOO@?5?9check?5?5?5?5?5?5?5?5?5?5?5?5validate?5the?5@ ; "	-check		  validate the ec para"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EB@INMNKFED@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5print?5a?5?8C?8?5f@ ; " -C		 print a 'C' function"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EB@GMJFCFPN@?5?9name?5arg?5?5?5?5?5?5?5?5?5use?5the?5ec?5pa@ ; " -name arg	 use the ec parameter"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0FB@OJBMCMLH@?5?9list_curves?5?5?5?5?5?5prints?5a?5list@ ;	" -list_curves	    prints a list of all"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DJ@FCJBLLMI@?5?9conv_form?5arg?5?5?5?5specifies?5the@ ; "	-conv_form arg	  specifies the	point "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@GGMFKCGB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5valu@	; "		      possible values: com"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DM@IPDMNINJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; "					   unc"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CM@EPAIEMAL@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; "					   hyb"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0EE@CPPCOGJI@?5?9param_enc?5arg?5?5?5?5specifies?5the@ ; "	-param_enc arg	  specifies the	way th"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CN@MMKNBEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5d@ ; "		       in the asn1 der enco"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DL@GGJJGKNK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5valu@	; "		      possible values: nam"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@EFMAHJLF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; "					   exp"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EM@CPNGDJHP@?5?9no_seed?5?5?5?5?5?5?5?5?5?5if?5?8explicit?8@ ; " -no_seed		 if 'explicit' parame"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CE@MKIOAJFN@?5?9genkey?5?5?5?5?5?5?5?5?5?5?5generate?5ec?5k@ ; " -genkey		 generate ec key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DJ@GNHKHDLO@?5?9rand?5file?5?5?5?5?5?5?5?5files?5to?5use?5@ ; " -rand file	files to use for ran"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DN@INNGPHII@?5?9engine?5e?5?5?5?5?5?5?5?5?5use?5engine?5e?0@ ; " -engine e	 use engine e, possib"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		mov	eax, 1
		pop	edi
		pop	ebp
		pop	ebx
		pop	esi
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------

loc_8EE:				; CODE XREF: _ecparam_main+71Fj
		push	edi
		push	3
		push	6Ch ; 'l'
		push	ebp
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jle	loc_124B

loc_904:				; CODE XREF: _ecparam_main+739j
		mov	edi, [esp+7Ch+var_38]
		test	edi, edi
		jnz	short loc_923
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	edi
		push	6Ah ; 'j'
		push	ebx
		call	_BIO_ctrl
		add	esp, 14h
		jmp	short loc_939
; ---------------------------------------------------------------------------

loc_923:				; CODE XREF: _ecparam_main+90Aj
		push	edi
		push	5
		push	6Ch ; 'l'
		push	ebx
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jle	loc_124B

loc_939:				; CODE XREF: _ecparam_main+921j
		push	0
		push	[esp+80h+var_34]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		add	esp, 0Ch
		cmp	[esp+7Ch+var_30], 0
		jz	loc_A0F
		push	0
		push	0
		call	_EC_get_builtin_curves
		mov	esi, eax
		push	145h
		push	offset ??_C@_0BB@DIIELIFM@?4?2apps?2ecparam?4c?$AA@ ; ".\\apps\\ecparam.c"
		mov	[esp+8Ch+var_4], esi
		lea	eax, ds:0[esi*8]
		push	eax
		call	_CRYPTO_malloc
		mov	edi, eax
		add	esp, 14h
		mov	[esp+7Ch+var_30], edi
		test	edi, edi
		jz	loc_1255
		push	esi
		push	edi
		call	_EC_get_builtin_curves
		add	esp, 8
		test	eax, eax
		jnz	short loc_9AB
		push	edi
		call	_CRYPTO_free
		jmp	loc_1252
; ---------------------------------------------------------------------------

loc_9AB:				; CODE XREF: _ecparam_main+99Ej
		xor	ebp, ebp
		test	esi, esi
		jz	short loc_9F9

loc_9B1:				; CODE XREF: _ecparam_main+9F7j
		push	dword ptr [edi+ebp*8]
		mov	esi, [edi+ebp*8+4]
		call	_OBJ_nid2sn
		mov	ecx, eax
		test	esi, esi
		mov	edi, offset ??_C@_0CA@FLDNNAAC@CURVE?5DESCRIPTION?5NOT?5AVAILABLE?$AA@ ; "CURVE	DESCRIPTION NOT	AVAILABLE"
		mov	eax, offset ??_C@_00CNPNBAHC@?$AA@ ; `string'
		cmovnz	edi, esi
		test	ecx, ecx
		cmovnz	eax, ecx
		push	eax
		push	offset ??_C@_09GFNAAFIM@?5?5?$CF?910s?3?5?$AA@ ; "  %-10s: "
		push	ebx
		call	_BIO_printf
		push	edi
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; `string'
		push	ebx
		call	_BIO_printf
		mov	edi, [esp+98h+var_30]
		inc	ebp
		add	esp, 1Ch
		cmp	ebp, [esp+7Ch+var_4]
		jb	short loc_9B1

loc_9F9:				; CODE XREF: _ecparam_main+9AFj
		push	edi
		call	_CRYPTO_free
		mov	ebp, [esp+80h+var_6C]
		add	esp, 4
		xor	esi, esi
		xor	edi, edi
		jmp	loc_125C
; ---------------------------------------------------------------------------

loc_A0F:				; CODE XREF: _ecparam_main+952j
		mov	edi, [esp+7Ch+var_44]
		test	edi, edi
		jz	loc_B34
		mov	ecx, offset ??_C@_09NOOJPND@secp192r1?$AA@ ; "secp192r1"
		mov	eax, edi

loc_A22:				; CODE XREF: _ecparam_main+A3Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_A42
		test	dl, dl
		jz	short loc_A3E
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_A42
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_A22

loc_A3E:				; CODE XREF: _ecparam_main+A2Aj
		xor	eax, eax
		jmp	short loc_A47
; ---------------------------------------------------------------------------

loc_A42:				; CODE XREF: _ecparam_main+A26j
					; _ecparam_main+A32j
		sbb	eax, eax
		or	eax, 1

loc_A47:				; CODE XREF: _ecparam_main+A40j
		test	eax, eax
		jnz	short loc_A97
		push	offset ??_C@_0DC@OMNCPHPI@using?5curve?5name?5prime192v1?5inst@	; "using curve name prime192v1 instead of "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	eax, 199h

loc_A63:				; CODE XREF: _ecparam_main+AE1j
					; _ecparam_main+AF1j ...
		push	eax
		call	_EC_GROUP_new_by_curve_name
		mov	edi, eax
		add	esp, 4
		mov	[esp+7Ch+var_6C], edi
		test	edi, edi
		jnz	loc_B21
		mov	eax, [esp+7Ch+var_44]
		push	eax
		push	offset ??_C@_0BN@HEDMKCAD@unable?5to?5create?5curve?5?$CI?$CFs?$CJ?6?$AA@ ; "unable to create curve (%s)\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	loc_1257
; ---------------------------------------------------------------------------

loc_A97:				; CODE XREF: _ecparam_main+A49j
		mov	ecx, offset ??_C@_09MBOIJHCL@secp256r1?$AA@ ; "secp256r1"
		mov	eax, edi
		xchg	ax, ax

loc_AA0:				; CODE XREF: _ecparam_main+ABAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_AC0
		test	dl, dl
		jz	short loc_ABC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_AC0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_AA0

loc_ABC:				; CODE XREF: _ecparam_main+AA8j
		xor	eax, eax
		jmp	short loc_AC5
; ---------------------------------------------------------------------------

loc_AC0:				; CODE XREF: _ecparam_main+AA4j
					; _ecparam_main+AB0j
		sbb	eax, eax
		or	eax, 1

loc_AC5:				; CODE XREF: _ecparam_main+ABEj
		test	eax, eax
		jnz	short loc_AE6
		push	offset ??_C@_0DC@NEPBKHOI@using?5curve?5name?5prime256v1?5inst@	; "using curve name prime256v1 instead of "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	eax, 19Fh
		jmp	loc_A63
; ---------------------------------------------------------------------------

loc_AE6:				; CODE XREF: _ecparam_main+AC7j
		push	edi
		call	_OBJ_sn2nid
		add	esp, 4
		test	eax, eax
		jnz	loc_A63
		push	edi
		call	_EC_curve_nist2nid
		add	esp, 4
		test	eax, eax
		jnz	loc_A63
		push	edi
		push	offset ??_C@_0BJ@FINFOCGI@unknown?5curve?5name?5?$CI?$CFs?$CJ?6?$AA@ ; "unknown	curve name (%s)\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	loc_1255
; ---------------------------------------------------------------------------

loc_B21:				; CODE XREF: _ecparam_main+A74j
		push	[esp+7Ch+var_48]
		push	edi
		call	_EC_GROUP_set_asn1_flag
		push	esi
		push	edi
		call	_EC_GROUP_set_point_conversion_form
		jmp	short loc_B6F
; ---------------------------------------------------------------------------

loc_B34:				; CODE XREF: _ecparam_main+A15j
		mov	eax, [esp+7Ch+var_2C]
		cmp	eax, 1
		jnz	short loc_B54
		push	0
		push	ebp
		push	offset _d2i_ECPKParameters
		push	0
		call	_ASN1_d2i_bio
		mov	edi, eax
		mov	[esp+8Ch+var_6C], edi
		jmp	short loc_B6F
; ---------------------------------------------------------------------------

loc_B54:				; CODE XREF: _ecparam_main+B3Bj
		cmp	eax, 3
		jnz	loc_1229
		push	0
		push	0
		push	0
		push	ebp
		call	_PEM_read_bio_ECPKParameters
		mov	edi, eax
		mov	[esp+8Ch+var_6C], eax

loc_B6F:				; CODE XREF: _ecparam_main+B32j
					; _ecparam_main+B52j
		add	esp, 10h
		test	edi, edi
		jnz	short loc_B99
		push	offset ??_C@_0CK@HCELOCH@unable?5to?5load?5elliptic?5curve?5pa@	; "unable to load elliptic curve parameter"...

loc_B7B:				; CODE XREF: _ecparam_main+C18j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_1257
; ---------------------------------------------------------------------------

loc_B99:				; CODE XREF: _ecparam_main+B74j
		cmp	[esp+7Ch+var_28], 0
		jz	short loc_BAA
		push	esi
		push	edi
		call	_EC_GROUP_set_point_conversion_form
		add	esp, 8

loc_BAA:				; CODE XREF: _ecparam_main+B9Ej
		cmp	[esp+7Ch+var_24], 0
		jz	short loc_BBE
		push	[esp+7Ch+var_48]
		push	edi
		call	_EC_GROUP_set_asn1_flag
		add	esp, 8

loc_BBE:				; CODE XREF: _ecparam_main+BAFj
		cmp	[esp+7Ch+var_20], 0
		jz	short loc_BD2
		push	0
		push	0
		push	edi
		call	_EC_GROUP_set_seed
		add	esp, 0Ch

loc_BD2:				; CODE XREF: _ecparam_main+BC3j
		cmp	[esp+7Ch+var_1C], 0
		jz	short loc_BED
		push	0
		push	edi
		push	ebx
		call	_ECPKParameters_print
		add	esp, 0Ch
		test	eax, eax
		jz	loc_1257

loc_BED:				; CODE XREF: _ecparam_main+BD7j
		cmp	[esp+7Ch+var_18], 0
		jz	short loc_C30
		push	offset ??_C@_0CF@POLMNEF@checking?5elliptic?5curve?5paramete@ ;	"checking elliptic curve parameters: "
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	0
		push	edi
		call	_EC_GROUP_check
		add	esp, 10h
		test	eax, eax
		jnz	short loc_C1D
		push	offset ??_C@_07GLGIIGGC@failed?6?$AA@ ;	"failed\n"
		jmp	loc_B7B
; ---------------------------------------------------------------------------

loc_C1D:				; CODE XREF: _ecparam_main+C11j
		push	offset ??_C@_03DJDALPN@ok?6?$AA@ ; "ok\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_C30:				; CODE XREF: _ecparam_main+BF2j
		cmp	[esp+7Ch+var_14], 0
		jz	loc_FF4
		push	[esp+7Ch+var_6C]
		xor	edi, edi
		call	_EC_GROUP_method_of
		add	esp, 4
		mov	esi, eax
		call	_BN_new
		mov	[esp+7Ch+var_5C], eax
		test	eax, eax
		jz	loc_1020
		call	_BN_new
		mov	[esp+7Ch+var_58], eax
		test	eax, eax
		jz	loc_1020
		call	_BN_new
		mov	[esp+7Ch+var_54], eax
		test	eax, eax
		jz	loc_1020
		call	_BN_new
		mov	[esp+7Ch+var_50], eax
		test	eax, eax
		jz	loc_1020
		call	_BN_new
		mov	[esp+7Ch+var_64], eax
		test	eax, eax
		jz	loc_1020
		call	_BN_new
		mov	[esp+7Ch+var_4C], eax
		test	eax, eax
		jz	loc_1020
		push	esi
		call	_EC_METHOD_get_field_type
		xor	ecx, ecx
		add	esp, 4
		cmp	eax, 196h
		setz	cl
		test	ecx, ecx
		jz	loc_102E
		mov	esi, [esp+7Ch+var_6C]
		push	edi
		push	[esp+80h+var_54]
		push	[esp+84h+var_58]
		push	[esp+88h+var_5C]
		push	esi
		call	_EC_GROUP_get_curve_GFp
		add	esp, 14h
		test	eax, eax
		jz	loc_102E
		push	esi
		call	_EC_GROUP_get0_generator
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	loc_102E
		push	edi
		push	[esp+80h+var_50]
		push	[esp+84h+var_6C]
		call	_EC_GROUP_get_point_conversion_form
		add	esp, 4
		push	eax
		push	esi
		mov	esi, [esp+8Ch+var_6C]
		push	esi
		call	_EC_POINT_point2bn
		add	esp, 14h
		test	eax, eax
		jz	loc_102E
		push	edi
		push	[esp+80h+var_64]
		push	esi
		call	_EC_GROUP_get_order
		add	esp, 0Ch
		test	eax, eax
		jz	loc_102E
		push	edi
		push	[esp+80h+var_4C]
		push	esi
		call	_EC_GROUP_get_cofactor
		add	esp, 0Ch
		test	eax, eax
		jz	loc_102E
		push	[esp+7Ch+var_64]
		call	_BN_num_bits
		push	[esp+80h+var_5C]
		mov	esi, eax
		call	_BN_num_bits
		push	[esp+84h+var_58]
		add	eax, 7
		cdq
		and	edx, 7
		add	eax, edx
		sar	eax, 3
		test	eax, eax
		cmovnz	edi, eax
		call	_BN_num_bits
		push	[esp+88h+var_54]
		add	eax, 7
		cdq
		and	edx, 7
		add	eax, edx
		sar	eax, 3
		cmp	eax, edi
		cmova	edi, eax
		call	_BN_num_bits
		push	[esp+8Ch+var_50]
		add	eax, 7
		cdq
		and	edx, 7
		add	eax, edx
		sar	eax, 3
		cmp	eax, edi
		cmova	edi, eax
		call	_BN_num_bits
		push	[esp+90h+var_64]
		add	eax, 7
		cdq
		and	edx, 7
		add	eax, edx
		sar	eax, 3
		cmp	eax, edi
		cmova	edi, eax
		call	_BN_num_bits
		push	[esp+94h+var_4C]
		add	eax, 7
		cdq
		and	edx, 7
		add	eax, edx
		sar	eax, 3
		cmp	eax, edi
		cmova	edi, eax
		call	_BN_num_bits
		add	eax, 7
		cdq
		and	edx, 7
		add	eax, edx
		sar	eax, 3
		cmp	eax, edi
		push	1E2h
		cmova	edi, eax
		push	offset ??_C@_0BB@DIIELIFM@?4?2apps?2ecparam?4c?$AA@ ; ".\\apps\\ecparam.c"
		push	edi
		call	_CRYPTO_malloc
		mov	edi, eax
		add	esp, 28h
		mov	[esp+7Ch+var_68], edi
		test	edi, edi
		jnz	short loc_E2C
		push	offset ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@ ; "OPENSSL_malloc"
		call	dword ptr ds:__imp__perror
		add	esp, 4
		jmp	loc_1030
; ---------------------------------------------------------------------------

loc_E2C:				; CODE XREF: _ecparam_main+E17j
		push	edi
		push	esi
		push	offset ??_C@_04JEDLIEJ@ec_p?$AA@ ; "ec_p"
		push	[esp+88h+var_5C]
		push	ebx
		call	_ecparam_print_var
		push	edi
		push	esi
		push	offset ??_C@_04FKJKJLFJ@ec_a?$AA@ ; "ec_a"
		push	[esp+9Ch+var_58]
		push	ebx
		call	_ecparam_print_var
		push	edi
		push	esi
		push	offset ??_C@_04HBLHMIJK@ec_b?$AA@ ; "ec_b"
		push	[esp+0B0h+var_54]
		push	ebx
		call	_ecparam_print_var
		push	edi
		push	esi
		push	offset ??_C@_06JMKNOGHF@ec_gen?$AA@ ; "ec_gen"
		push	[esp+0C4h+var_50]
		push	ebx
		call	_ecparam_print_var
		add	esp, 50h
		push	edi
		push	esi
		push	offset ??_C@_08BJBKGNHH@ec_order?$AA@ ;	"ec_order"
		push	[esp+88h+var_64]
		push	ebx
		call	_ecparam_print_var
		push	edi
		push	esi
		push	offset ??_C@_0M@JGFEAIBN@ec_cofactor?$AA@ ; "ec_cofactor"
		push	[esp+9Ch+var_4C]
		push	ebx
		call	_ecparam_print_var
		push	offset ??_C@_02PHMGELLB@?6?6?$AA@ ; "\n\n"
		push	ebx
		call	_BIO_printf
		push	esi
		push	offset ??_C@_0CE@MKOBLEFI@EC_GROUP?5?$CKget_ec_group_?$CFd?$CIvoid?$CJ?6@ ; "EC_GROUP *get_ec_group_%d(void)\n\t{\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0M@MNILMKAI@?7int?5ok?$DN0?$DL?6?$AA@ ; "\tint ok=0;\n"
		push	ebx
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0BK@IJPCHNCA@?7EC_GROUP?5?$CKgroup?5?$DN?5NULL?$DL?6?$AA@ ; "\tEC_GROUP *group = NULL;\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0BK@PDEKEGKE@?7EC_POINT?5?$CKpoint?5?$DN?5NULL?$DL?6?$AA@ ; "\tEC_POINT *point = NULL;\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0DJ@MMCKKFJH@?7BIGNUM?5?5?5?$CKtmp_1?5?$DN?5NULL?0?5?$CKtmp_2?5@ ;	"\tBIGNUM   *tmp_1 = NULL, *tmp_2 = NULL"...
		push	ebx
		call	_BIO_printf
		push	esi
		push	esi
		push	offset ??_C@_0EP@CJLJIGIN@?7if?5?$CI?$CItmp_1?5?$DN?5BN_bin2bn?$CIec_p_?$CFd?0@	; "\tif	((tmp_1	= BN_bin2bn(ec_p_%d, sizeo"...
		push	ebx
		call	_BIO_printf
		push	esi
		push	esi
		push	offset ??_C@_0EP@LKEAJBBJ@?7if?5?$CI?$CItmp_2?5?$DN?5BN_bin2bn?$CIec_a_?$CFd?0@	; "\tif	((tmp_2	= BN_bin2bn(ec_a_%d, sizeo"...
		push	ebx
		call	_BIO_printf
		push	esi
		push	esi
		push	offset ??_C@_0EP@LBPAJCIM@?7if?5?$CI?$CItmp_3?5?$DN?5BN_bin2bn?$CIec_b_?$CFd?0@	; "\tif	((tmp_3	= BN_bin2bn(ec_b_%d, sizeo"...
		push	ebx
		call	_BIO_printf
		add	esp, 48h
		push	offset ??_C@_0FI@HBMFKBFN@?7if?5?$CI?$CIgroup?5?$DN?5EC_GROUP_new_curve@ ; "\tif ((group = EC_GROUP_new_curve_GFp(t"...
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0BI@LLIPNGID@?7?1?$CK?5build?5generator?5?$CK?1?6?$AA@ ; "\t/* build generator */\n"
		push	ebx
		call	_BIO_printf
		push	esi
		push	esi
		push	offset ??_C@_0FE@IHKOOMKL@?7if?5?$CI?$CItmp_1?5?$DN?5BN_bin2bn?$CIec_gen_?$CF@ ; "\tif ((tmp_1 = BN_bin2bn(ec_gen_%d, siz"...
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0DH@FMMLBNLE@?7point?5?$DN?5EC_POINT_bn2point?$CIgroup@ ; "\tpoint	= EC_POINT_bn2point(group, tmp_"...
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0CB@JLAPGNHG@?7if?5?$CIpoint?5?$DN?$DN?5NULL?$CJ?6?7?7goto?5err?$DL?6@ ; "\tif (point == NULL)\n\t\tgoto err;\n"
		push	ebx
		call	_BIO_printf
		push	esi
		push	esi
		push	offset ??_C@_0FI@EHPPELKO@?7if?5?$CI?$CItmp_2?5?$DN?5BN_bin2bn?$CIec_order@ ; "\tif ((tmp_2 = BN_bin2bn(ec_order_%d, s"...
		push	ebx
		call	_BIO_printf
		add	esp, 40h
		push	esi
		push	esi
		push	offset ??_C@_0FO@DHBJIDGB@?7if?5?$CI?$CItmp_3?5?$DN?5BN_bin2bn?$CIec_cofac@ ; "\tif ((tmp_3 = BN_bin2bn(ec_cofactor_%d"...
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0EH@BOBHKCEJ@?7if?5?$CI?$CBEC_GROUP_set_generator?$CIgro@ ; "\tif (!EC_GROUP_set_generator(group, po"...
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_08EPKNLIHJ@?6?7ok?$DN1?$DL?6?$AA@ ; "\n\tok=1;\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_05IHDDJDMB@err?3?6?$AA@ ; "err:\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0BP@DMHNLDOG@?7if?5?$CItmp_1?$CJ?6?7?7BN_free?$CItmp_1?$CJ?$DL?6?$AA@ ; "\tif (tmp_1)\n\t\tBN_free(tmp_1);\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0BP@ECKFGEHG@?7if?5?$CItmp_2?$CJ?6?7?7BN_free?$CItmp_2?$CJ?$DL?6?$AA@ ; "\tif (tmp_2)\n\t\tBN_free(tmp_2);\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0BP@GIONCJAG@?7if?5?$CItmp_3?$CJ?6?7?7BN_free?$CItmp_3?$CJ?$DL?6?$AA@ ; "\tif (tmp_3)\n\t\tBN_free(tmp_3);\n"
		push	ebx
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CF@HDMNIKPD@?7if?5?$CIpoint?$CJ?6?7?7EC_POINT_free?$CIpoin@ ; "\tif (point)\n\t\tEC_POINT_free(point);"...
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0L@BOFMGBEH@?7if?5?$CI?$CBok?$CJ?6?$AA@ ; "\tif (!ok)\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_04OLIOEKCC@?7?7?$HL?6?$AA@	; "\t\t{\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0BJ@CJAKAMGL@?7?7EC_GROUP_free?$CIgroup?$CJ?$DL?6?$AA@ ; "\t\tEC_GROUP_free(group);\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0BB@IMJJHDHJ@?7?7group?5?$DN?5NULL?$DL?6?$AA@ ; "\t\tgroup	= NULL;\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_04OPADDGJA@?7?7?$HN?6?$AA@	; "\t\t}\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_0BE@NMFFMAII@?7return?$CIgroup?$CJ?$DL?6?7?$HN?6?$AA@ ; "\treturn(group);\n\t}\n"
		push	ebx
		call	_BIO_printf
		mov	edi, [esp+0B4h+var_6C]
		add	esp, 38h

loc_FF4:				; CODE XREF: _ecparam_main+C35j
		cmp	[esp+7Ch+var_10], 0
		jnz	loc_1107
		mov	eax, [esp+7Ch+var_40]
		cmp	eax, 1
		jnz	loc_10B1
		push	edi
		push	ebx
		push	offset _i2d_ECPKParameters
		call	_ASN1_i2d_bio
		add	esp, 0Ch
		jmp	loc_10C0
; ---------------------------------------------------------------------------

loc_1020:				; CODE XREF: _ecparam_main+C56j
					; _ecparam_main+C67j ...
		push	offset ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@ ; "OPENSSL_malloc"
		call	dword ptr ds:__imp__perror
		add	esp, 4

loc_102E:				; CODE XREF: _ecparam_main+CC6j
					; _ecparam_main+CE8j ...
		xor	edi, edi

loc_1030:				; CODE XREF: _ecparam_main+E27j
					; _ecparam_main+10E6j ...
		mov	esi, 1

$end$281:				; CODE XREF: _ecparam_main+1202j
		mov	eax, [esp+7Ch+var_5C]
		test	eax, eax
		jz	short loc_1046
		push	eax
		call	_BN_free
		add	esp, 4

loc_1046:				; CODE XREF: _ecparam_main+103Bj
		mov	eax, [esp+7Ch+var_58]
		test	eax, eax
		jz	short loc_1057
		push	eax
		call	_BN_free
		add	esp, 4

loc_1057:				; CODE XREF: _ecparam_main+104Cj
		mov	eax, [esp+7Ch+var_54]
		test	eax, eax
		jz	short loc_1068
		push	eax
		call	_BN_free
		add	esp, 4

loc_1068:				; CODE XREF: _ecparam_main+105Dj
		mov	eax, [esp+7Ch+var_50]
		test	eax, eax
		jz	short loc_1079
		push	eax
		call	_BN_free
		add	esp, 4

loc_1079:				; CODE XREF: _ecparam_main+106Ej
		mov	eax, [esp+7Ch+var_64]
		test	eax, eax
		jz	short loc_108A
		push	eax
		call	_BN_free
		add	esp, 4

loc_108A:				; CODE XREF: _ecparam_main+107Fj
		mov	eax, [esp+7Ch+var_4C]
		test	eax, eax
		jz	short loc_109B
		push	eax
		call	_BN_free
		add	esp, 4

loc_109B:				; CODE XREF: _ecparam_main+1090j
		test	edi, edi
		jz	short loc_10A8
		push	edi
		call	_CRYPTO_free
		add	esp, 4

loc_10A8:				; CODE XREF: _ecparam_main+109Dj
		mov	edi, [esp+7Ch+var_6C]
		jmp	loc_125C
; ---------------------------------------------------------------------------

loc_10B1:				; CODE XREF: _ecparam_main+1006j
		cmp	eax, 3
		jnz	short loc_10EB
		push	edi
		push	ebx
		call	_PEM_write_bio_ECPKParameters
		add	esp, 8

loc_10C0:				; CODE XREF: _ecparam_main+101Bj
		test	eax, eax
		jnz	short loc_1107
		push	offset ??_C@_0CL@PMJOFJLG@unable?5to?5write?5elliptic?5curve?5p@ ; "unable to write elliptic curve paramete"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch

loc_10E2:				; CODE XREF: _ecparam_main+115Cj
					; _ecparam_main+1189j
		mov	edi, [esp+7Ch+var_68]
		jmp	loc_1030
; ---------------------------------------------------------------------------

loc_10EB:				; CODE XREF: _ecparam_main+10B4j
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+84h+var_68]
		add	esp, 8
		jmp	loc_1030
; ---------------------------------------------------------------------------

loc_1107:				; CODE XREF: _ecparam_main+FF9j
					; _ecparam_main+10C2j
		cmp	[esp+7Ch+var_60], 0
		jz	short loc_1148
		mov	esi, [esp+7Ch+var_C]
		xor	eax, eax
		test	esi, esi
		setnz	al
		push	eax
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		add	esp, 0Ch
		test	esi, esi
		jz	short loc_1148
		push	esi
		call	_app_RAND_load_files
		push	eax
		push	offset ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; "%ld semi-random	bytes loaded\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h

loc_1148:				; CODE XREF: _ecparam_main+110Cj
					; _ecparam_main+112Cj
		cmp	[esp+7Ch+var_8], 0
		jz	loc_11E5
		call	_EC_KEY_new
		mov	esi, eax
		test	esi, esi
		jz	short loc_10E2
		cmp	[esp+7Ch+var_60], 0
		jnz	short loc_117D
		push	245h		; Line
		push	offset ??_C@_1CC@FIEJPJLE@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAe?$AAc?$AAp?$AAa?$AAr?$AAa?$AAm?$AA?4?$AAc?$AA?$AA@	; ".\\apps\\ecparam.c"
		push	offset ??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@ ; "need_rand"
		call	dword ptr ds:__imp___wassert
		add	esp, 0Ch

loc_117D:				; CODE XREF: _ecparam_main+1163j
		push	edi
		push	esi
		call	_EC_KEY_set_group
		add	esp, 8
		test	eax, eax
		jz	loc_10E2
		push	esi
		call	_EC_KEY_generate_key
		add	esp, 4
		test	eax, eax
		jnz	short loc_11AE
		push	esi
		call	_EC_KEY_free
		mov	edi, [esp+80h+var_68]
		add	esp, 4
		jmp	loc_1030
; ---------------------------------------------------------------------------

loc_11AE:				; CODE XREF: _ecparam_main+119Aj
		mov	eax, [esp+7Ch+var_40]
		cmp	eax, 1
		jnz	short loc_11C3
		push	esi
		push	ebx
		call	_i2d_ECPrivateKey_bio
		add	esp, 8
		jmp	short loc_11DC
; ---------------------------------------------------------------------------

loc_11C3:				; CODE XREF: _ecparam_main+11B5j
		cmp	eax, 3
		jnz	short loc_1207
		push	0
		push	0
		push	0
		push	0
		push	0
		push	esi
		push	ebx
		call	_PEM_write_bio_ECPrivateKey
		add	esp, 1Ch

loc_11DC:				; CODE XREF: _ecparam_main+11C1j
		push	esi
		call	_EC_KEY_free
		add	esp, 4

loc_11E5:				; CODE XREF: _ecparam_main+114Dj
		cmp	[esp+7Ch+var_60], 0
		jz	short loc_11FC
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_write_file
		add	esp, 8

loc_11FC:				; CODE XREF: _ecparam_main+11EAj
		mov	edi, [esp+7Ch+var_68]
		xor	esi, esi
		jmp	$end$281
; ---------------------------------------------------------------------------

loc_1207:				; CODE XREF: _ecparam_main+11C6j
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	esi
		call	_EC_KEY_free
		mov	edi, [esp+88h+var_68]
		add	esp, 0Ch
		jmp	loc_1030
; ---------------------------------------------------------------------------

loc_1229:				; CODE XREF: _ecparam_main+B57j
		push	offset ??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@ ; "bad input format specified\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short loc_1255
; ---------------------------------------------------------------------------

loc_123E:				; CODE XREF: _ecparam_main+70Bj
					; _ecparam_main+713j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		jmp	short loc_1252
; ---------------------------------------------------------------------------

loc_124B:				; CODE XREF: _ecparam_main+8FEj
					; _ecparam_main+933j
		push	edi		; ErrMsg
		call	dword ptr ds:__imp__perror

loc_1252:				; CODE XREF: _ecparam_main+9A6j
					; _ecparam_main+1249j
		add	esp, 4

loc_1255:				; CODE XREF: _ecparam_main+98Cj
					; _ecparam_main+B1Cj ...
		xor	edi, edi

loc_1257:				; CODE XREF: _ecparam_main+A92j
					; _ecparam_main+B94j ...
		mov	esi, 1

loc_125C:				; CODE XREF: _ecparam_main+A0Aj
					; _ecparam_main+10ACj
		test	ebp, ebp
		jz	short loc_1269
		push	ebp
		call	_BIO_free
		add	esp, 4

loc_1269:				; CODE XREF: _ecparam_main+125Ej
		test	ebx, ebx
		jz	short loc_1276
		push	ebx
		call	_BIO_free_all
		add	esp, 4

loc_1276:				; CODE XREF: _ecparam_main+126Bj
		test	edi, edi
		jz	short loc_1283
		push	edi
		call	_EC_GROUP_free
		add	esp, 4

loc_1283:				; CODE XREF: _ecparam_main+1278j
		pop	edi
		pop	ebp
		pop	ebx
		mov	eax, esi
		pop	esi
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------

loc_128D:				; CODE XREF: _ecparam_main+CBj
		mov	eax, 1
		pop	esi
		add	esp, 6Ch
		retn
_ecparam_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1298h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ecparam_print_var proc	near		; CODE XREF: _ecparam_main+E38p
					; _ecparam_main+E49p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	edi
		push	[esp+4+arg_C]
		mov	edi, [esp+8+arg_0]
		push	[esp+8+arg_8]
		push	offset ??_C@_0CB@JIIMNMKE@static?5unsigned?5char?5?$CFs_?$CFd?$FL?$FN?5?$DN?5?$HL@ ; "static unsigned char %s_%d[] = {"
		push	edi
		call	_BIO_printf
		mov	eax, [esp+14h+arg_4]
		add	esp, 10h
		cmp	dword ptr [eax+4], 0
		jnz	short loc_12D0
		push	offset ??_C@_06BFGLMNJB@?6?70x00?$AA@ ;	"\n\t0x00"
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	loc_1366
; ---------------------------------------------------------------------------

loc_12D0:				; CODE XREF: _ecparam_print_var+23j
		push	ebx
		mov	ebx, [esp+8+arg_10]
		push	ebp
		push	esi
		push	ebx
		push	eax
		xor	esi, esi
		call	_BN_bn2bin
		add	esp, 8
		lea	ebp, [eax-1]
		test	ebp, ebp
		jle	short loc_1326

loc_12EA:				; CODE XREF: _ecparam_print_var+8Cj
		mov	eax, 0AAAAAAABh
		mul	esi
		mov	eax, esi
		shr	edx, 3
		lea	ecx, [edx+edx*2]
		shl	ecx, 2
		sub	eax, ecx
		jnz	short loc_130E
		push	offset ??_C@_02NMOLBIHC@?6?7?$AA@ ; `string'
		push	edi
		call	_BIO_printf
		add	esp, 8

loc_130E:				; CODE XREF: _ecparam_print_var+66j
		movzx	eax, byte ptr [esi+ebx]
		push	eax
		push	offset ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ ; "0x%02X,"
		push	edi
		call	_BIO_printf
		inc	esi
		add	esp, 0Ch
		cmp	esi, ebp
		jl	short loc_12EA

loc_1326:				; CODE XREF: _ecparam_print_var+50j
		mov	eax, 2AAAAAABh
		imul	esi
		sar	edx, 1
		mov	eax, edx
		shr	eax, 1Fh
		add	eax, edx
		lea	ecx, [eax+eax*2]
		mov	eax, esi
		shl	ecx, 2
		sub	eax, ecx
		jnz	short loc_1350
		push	offset ??_C@_02NMOLBIHC@?6?7?$AA@ ; `string'
		push	edi
		call	_BIO_printf
		add	esp, 8

loc_1350:				; CODE XREF: _ecparam_print_var+A8j
		movzx	eax, byte ptr [esi+ebx]
		push	eax
		push	offset ??_C@_06IBAGLEAI@0x?$CF02X?$AA@ ; "0x%02X"
		push	edi
		call	_BIO_printf
		add	esp, 0Ch
		pop	esi
		pop	ebp
		pop	ebx

loc_1366:				; CODE XREF: _ecparam_print_var+33j
		push	offset ??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@ ;	"\n\t};\n\n"
		push	edi
		call	_BIO_printf
		add	esp, 8
		mov	eax, 1
		pop	edi
		retn
_ecparam_print_var endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 137Ch
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _ecparam_main+109o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1384h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _ecparam_main:loc_15Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1390h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _ecparam_main:loc_1ABo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1394h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _ecparam_main:loc_1F4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 139Ch
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _ecparam_main:loc_242o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13A4h
; COMDAT (pick any)
		public ??_C@_02OLHPOPJI@?9C?$AA@
; `string'
??_C@_02OLHPOPJI@?9C?$AA@ db 2Dh, 43h, 0 ; DATA	XREF: _ecparam_main:loc_286o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13A8h
; COMDAT (pick any)
		public ??_C@_06CLLLPJIB@?9check?$AA@
; `string'
??_C@_06CLLLPJIB@?9check?$AA@ db '-check',0 ; DATA XREF: _ecparam_main:loc_2C6o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13B0h
; COMDAT (pick any)
		public ??_C@_05IBCNGGP@?9name?$AA@
; `string'
??_C@_05IBCNGGP@?9name?$AA@ db '-name',0 ; DATA XREF: _ecparam_main:loc_306o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13B8h
; COMDAT (pick any)
		public ??_C@_0N@FINGPDPB@?9list_curves?$AA@
; `string'
??_C@_0N@FINGPDPB@?9list_curves?$AA@ db	'-list_curves',0 ; DATA XREF: _ecparam_main:loc_352o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13C8h
; COMDAT (pick any)
		public ??_C@_0L@CFGKFMBD@?9conv_form?$AA@
; `string'
??_C@_0L@CFGKFMBD@?9conv_form?$AA@ db '-conv_form',0 ; DATA XREF: _ecparam_main:loc_396o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13D4h
; COMDAT (pick any)
		public ??_C@_0L@NHGFHLFK@compressed?$AA@
; `string'
??_C@_0L@NHGFHLFK@compressed?$AA@ db 'compressed',0 ; DATA XREF: _ecparam_main+3E5o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13E0h
; COMDAT (pick any)
		public ??_C@_0N@NFCOPMLF@uncompressed?$AA@
; `string'
??_C@_0N@NFCOPMLF@uncompressed?$AA@ db 'uncompressed',0 ; DATA XREF: _ecparam_main:loc_427o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13F0h
; COMDAT (pick any)
		public ??_C@_06JCLEGMDM@hybrid?$AA@
; `string'
??_C@_06JCLEGMDM@hybrid?$AA@ db	'hybrid',0 ; DATA XREF: _ecparam_main:loc_467o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13F8h
; COMDAT (pick any)
		public ??_C@_0L@KJNNNAOB@?9param_enc?$AA@
; `string'
??_C@_0L@KJNNNAOB@?9param_enc?$AA@ db '-param_enc',0 ; DATA XREF: _ecparam_main:loc_4ABo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1404h
; COMDAT (pick any)
		public ??_C@_0M@FBFAECBG@named_curve?$AA@
; `string'
??_C@_0M@FBFAECBG@named_curve?$AA@ db 'named_curve',0 ; DATA XREF: _ecparam_main+4F7o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1410h
; COMDAT (pick any)
		public ??_C@_08FCANLLBJ@explicit?$AA@
; `string'
??_C@_08FCANLLBJ@explicit?$AA@ db 'explicit',0 ; DATA XREF: _ecparam_main:loc_536o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 141Ch
; COMDAT (pick any)
		public ??_C@_08NCAIIAEE@?9no_seed?$AA@
; `string'
??_C@_08NCAIIAEE@?9no_seed?$AA@	db '-no_seed',0 ; DATA XREF: _ecparam_main:loc_576o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1428h
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _ecparam_main:loc_5B6o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1430h
; COMDAT (pick any)
		public ??_C@_07JEECMJMJ@?9genkey?$AA@
; `string'
??_C@_07JEECMJMJ@?9genkey?$AA@ db '-genkey',0 ; DATA XREF: _ecparam_main:loc_5F6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1438h
; COMDAT (pick any)
		public ??_C@_05LGFPCDPE@?9rand?$AA@
; `string'
??_C@_05LGFPCDPE@?9rand?$AA@ db	'-rand',0 ; DATA XREF: _ecparam_main:loc_63Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1440h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _ecparam_main:loc_68Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1448h
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _ecparam_main+741o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 145Ch
; COMDAT (pick any)
		public ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
; `string'
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ db '%s [options] <infile >outfile',0Ah,0
					; DATA XREF: _ecparam_main+758o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 147Ch
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _ecparam_main+768o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1490h
; COMDAT (pick any)
		public ??_C@_0DM@CCPGALMI@?5?9inform?5arg?5?5?5?5?5?5?5input?5format?5@
; `string'
??_C@_0DM@CCPGALMI@?5?9inform?5arg?5?5?5?5?5?5?5input?5format?5@ db ' -inform arg       input format - default PEM (DER or PEM)',0Ah,0
					; DATA XREF: _ecparam_main+778o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14CCh
; COMDAT (pick any)
		public ??_C@_0DA@OIJBHPKA@?5?9outform?5arg?5?5?5?5?5?5output?5format@
; `string'
??_C@_0DA@OIJBHPKA@?5?9outform?5arg?5?5?5?5?5?5output?5format@ db ' -outform arg      output format - default PEM',0Ah,0
					; DATA XREF: _ecparam_main+788o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14FCh
; COMDAT (pick any)
		public ??_C@_0DA@ONPMCCDD@?5?9in?5?5arg?5?5?5?5?5?5?5?5?5?5input?5file?5?5?9@
; `string'
??_C@_0DA@ONPMCCDD@?5?9in?5?5arg?5?5?5?5?5?5?5?5?5?5input?5file?5?5?9@ db ' -in  arg          input file  - default stdin',0Ah,0
					; DATA XREF: _ecparam_main+798o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 152Ch
; COMDAT (pick any)
		public ??_C@_0DB@CGPCLCOH@?5?9out?5arg?5?5?5?5?5?5?5?5?5?5output?5file?5?9@
; `string'
??_C@_0DB@CGPCLCOH@?5?9out?5arg?5?5?5?5?5?5?5?5?5?5output?5file?5?9@ db	' -out arg          output file - default stdout',0Ah,0
					; DATA XREF: _ecparam_main+7A8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1560h
; COMDAT (pick any)
		public ??_C@_0DC@CCCHKGEK@?5?9noout?5?5?5?5?5?5?5?5?5?5?5?5do?5not?5print?5@
; `string'
??_C@_0DC@CCCHKGEK@?5?9noout?5?5?5?5?5?5?5?5?5?5?5?5do?5not?5print?5@ db ' -noout            do not print the ec parameter',0Ah,0
					; DATA XREF: _ecparam_main+7B8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1594h
; COMDAT (pick any)
		public ??_C@_0DJ@NGFOOIEC@?5?9text?5?5?5?5?5?5?5?5?5?5?5?5?5print?5the?5ec?5@
; `string'
??_C@_0DJ@NGFOOIEC@?5?9text?5?5?5?5?5?5?5?5?5?5?5?5?5print?5the?5ec?5@ db ' -text             print the ec parameters in text form',0Ah,0
					; DATA XREF: _ecparam_main+7C8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 15D0h
; COMDAT (pick any)
		public ??_C@_0CP@JNGOGIOO@?5?9check?5?5?5?5?5?5?5?5?5?5?5?5validate?5the?5@
; `string'
??_C@_0CP@JNGOGIOO@?5?9check?5?5?5?5?5?5?5?5?5?5?5?5validate?5the?5@ db	' -check            validate the ec parameters',0Ah,0
					; DATA XREF: _ecparam_main+7DBo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1600h
; COMDAT (pick any)
		public ??_C@_0EB@INMNKFED@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5print?5a?5?8C?8?5f@
; `string'
??_C@_0EB@INMNKFED@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5print?5a?5?8C?8?5f@ db ' -C                print a ',27h,'C',27h,' function creating the parame'
					; DATA XREF: _ecparam_main+7EBo
		db 'ters',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1644h
; COMDAT (pick any)
		public ??_C@_0EB@GMJFCFPN@?5?9name?5arg?5?5?5?5?5?5?5?5?5use?5the?5ec?5pa@
; `string'
??_C@_0EB@GMJFCFPN@?5?9name?5arg?5?5?5?5?5?5?5?5?5use?5the?5ec?5pa@ db ' -name arg         use the ec parameters with ',27h,'short name',27h,' '
					; DATA XREF: _ecparam_main+7FBo
		db 'name',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1688h
; COMDAT (pick any)
		public ??_C@_0FB@OJBMCMLH@?5?9list_curves?5?5?5?5?5?5prints?5a?5list@
; `string'
??_C@_0FB@OJBMCMLH@?5?9list_curves?5?5?5?5?5?5prints?5a?5list@ db ' -list_curves      prints a list of all currently available curve'
					; DATA XREF: _ecparam_main+80Bo
		db ' ',27h,'short names',27h,0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16DCh
; COMDAT (pick any)
		public ??_C@_0DJ@FCJBLLMI@?5?9conv_form?5arg?5?5?5?5specifies?5the@
; `string'
??_C@_0DJ@FCJBLLMI@?5?9conv_form?5arg?5?5?5?5specifies?5the@ db	' -conv_form arg    specifies the point conversion form ',0Ah,0
					; DATA XREF: _ecparam_main+81Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1718h
; COMDAT (pick any)
		public ??_C@_0DA@GGMFKCGB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5valu@
; `string'
??_C@_0DA@GGMFKCGB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5valu@ db '                   possible values: compressed',0Ah,0
					; DATA XREF: _ecparam_main+82Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1748h
; COMDAT (pick any)
		public ??_C@_0DM@IPDMNINJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
; `string'
??_C@_0DM@IPDMNINJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ db	'                                    uncompressed (default)',0Ah,0
					; DATA XREF: _ecparam_main+83Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1784h
; COMDAT (pick any)
		public ??_C@_0CM@EPAIEMAL@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
; `string'
??_C@_0CM@EPAIEMAL@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ db	'                                    hybrid',0Ah,0
					; DATA XREF: _ecparam_main+84Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 17B0h
; COMDAT (pick any)
		public ??_C@_0EE@CPPCOGJI@?5?9param_enc?5arg?5?5?5?5specifies?5the@
; `string'
??_C@_0EE@CPPCOGJI@?5?9param_enc?5arg?5?5?5?5specifies?5the@ db	' -param_enc arg    specifies the way the ec parameters are encode'
					; DATA XREF: _ecparam_main+85Eo
		db 'd',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 17F4h
; COMDAT (pick any)
		public ??_C@_0CN@MMKNBEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5d@
; `string'
??_C@_0CN@MMKNBEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5d@ db '                   in the asn1 der encoding',0Ah,0
					; DATA XREF: _ecparam_main+86Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1824h
; COMDAT (pick any)
		public ??_C@_0DL@GGJJGKNK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5valu@
; `string'
??_C@_0DL@GGJJGKNK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5valu@ db '                   possible values: named_curve (default)',0Ah,0
					; DATA XREF: _ecparam_main+87Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1860h
; COMDAT (pick any)
		public ??_C@_0CO@EFMAHJLF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
; `string'
??_C@_0CO@EFMAHJLF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ db	'                                    explicit',0Ah,0
					; DATA XREF: _ecparam_main+88Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1890h
; COMDAT (pick any)
		public ??_C@_0EM@CPNGDJHP@?5?9no_seed?5?5?5?5?5?5?5?5?5?5if?5?8explicit?8@
; `string'
??_C@_0EM@CPNGDJHP@?5?9no_seed?5?5?5?5?5?5?5?5?5?5if?5?8explicit?8@ db ' -no_seed          if ',27h,'explicit',27h,' parameters are chosen do n'
					; DATA XREF: _ecparam_main+89Eo
		db 'ot use the seed',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18DCh
; COMDAT (pick any)
		public ??_C@_0CE@MKIOAJFN@?5?9genkey?5?5?5?5?5?5?5?5?5?5?5generate?5ec?5k@
; `string'
??_C@_0CE@MKIOAJFN@?5?9genkey?5?5?5?5?5?5?5?5?5?5?5generate?5ec?5k@ db ' -genkey           generate ec key',0Ah,0
					; DATA XREF: _ecparam_main+8AEo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1900h
; COMDAT (pick any)
		public ??_C@_0DJ@GNHKHDLO@?5?9rand?5file?5?5?5?5?5?5?5?5files?5to?5use?5@
; `string'
??_C@_0DJ@GNHKHDLO@?5?9rand?5file?5?5?5?5?5?5?5?5files?5to?5use?5@ db ' -rand file        files to use for random number input',0Ah,0
					; DATA XREF: _ecparam_main+8BEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 193Ch
; COMDAT (pick any)
		public ??_C@_0DN@INNGPHII@?5?9engine?5e?5?5?5?5?5?5?5?5?5use?5engine?5e?0@
; `string'
??_C@_0DN@INNGPHII@?5?9engine?5e?5?5?5?5?5?5?5?5?5use?5engine?5e?0@ db ' -engine e         use engine e, possibly a hardware device',0Ah,0
					; DATA XREF: _ecparam_main+8CEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 197Ch
; COMDAT (pick any)
		public ??_C@_0BB@DIIELIFM@?4?2apps?2ecparam?4c?$AA@
; `string'
??_C@_0BB@DIIELIFM@?4?2apps?2ecparam?4c?$AA@ db	'.\apps\ecparam.c',0
					; DATA XREF: _ecparam_main+968o
					; _ecparam_main+E01o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1990h
; COMDAT (pick any)
		public ??_C@_0CA@FLDNNAAC@CURVE?5DESCRIPTION?5NOT?5AVAILABLE?$AA@
; `string'
??_C@_0CA@FLDNNAAC@CURVE?5DESCRIPTION?5NOT?5AVAILABLE?$AA@ db 'CURVE DESCRIPTION NOT AVAILABLE',0
					; DATA XREF: _ecparam_main+9C1o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 19B0h
; COMDAT (pick any)
		public ??_C@_00CNPNBAHC@?$AA@
; `string'
??_C@_00CNPNBAHC@?$AA@ db 0		; DATA XREF: _ecparam_main+9C6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19B4h
; COMDAT (pick any)
		public ??_C@_09GFNAAFIM@?5?5?$CF?910s?3?5?$AA@
; `string'
??_C@_09GFNAAFIM@?5?5?$CF?910s?3?5?$AA@	db '  %-10s: ',0 ; DATA XREF: _ecparam_main+9D4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19C0h
; COMDAT (pick any)
		public ??_C@_03OFAPEBGM@?$CFs?6?$AA@
; `string'
??_C@_03OFAPEBGM@?$CFs?6?$AA@ dd 0A7325h ; DATA	XREF: _ecparam_main+9E0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19C4h
; COMDAT (pick any)
		public ??_C@_09NOOJPND@secp192r1?$AA@
; `string'
??_C@_09NOOJPND@secp192r1?$AA@ db 'secp192r1',0 ; DATA XREF: _ecparam_main+A1Bo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19D0h
; COMDAT (pick any)
		public ??_C@_0DC@OMNCPHPI@using?5curve?5name?5prime192v1?5inst@
; `string'
??_C@_0DC@OMNCPHPI@using?5curve?5name?5prime192v1?5inst@ db 'using curve name prime192v1 instead of secp192r1',0Ah,0
					; DATA XREF: _ecparam_main+A4Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A04h
; COMDAT (pick any)
		public ??_C@_09MBOIJHCL@secp256r1?$AA@
; `string'
??_C@_09MBOIJHCL@secp256r1?$AA@	db 'secp256r1',0 ; DATA XREF: _ecparam_main:loc_A97o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A10h
; COMDAT (pick any)
		public ??_C@_0DC@NEPBKHOI@using?5curve?5name?5prime256v1?5inst@
; `string'
??_C@_0DC@NEPBKHOI@using?5curve?5name?5prime256v1?5inst@ db 'using curve name prime256v1 instead of secp256r1',0Ah,0
					; DATA XREF: _ecparam_main+AC9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A44h
; COMDAT (pick any)
		public ??_C@_0BJ@FINFOCGI@unknown?5curve?5name?5?$CI?$CFs?$CJ?6?$AA@
; `string'
??_C@_0BJ@FINFOCGI@unknown?5curve?5name?5?$CI?$CFs?$CJ?6?$AA@ db 'unknown curve name (%s)',0Ah,0
					; DATA XREF: _ecparam_main+B09o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A60h
; COMDAT (pick any)
		public ??_C@_0BN@HEDMKCAD@unable?5to?5create?5curve?5?$CI?$CFs?$CJ?6?$AA@
; `string'
??_C@_0BN@HEDMKCAD@unable?5to?5create?5curve?5?$CI?$CFs?$CJ?6?$AA@ db 'unable to create curve (%s)',0Ah,0
					; DATA XREF: _ecparam_main+A7Fo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A80h
; COMDAT (pick any)
		public ??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@
; `string'
??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@	db 'bad input format specified',0Ah,0
					; DATA XREF: _ecparam_main:loc_1229o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A9Ch
; COMDAT (pick any)
		public ??_C@_0CK@HCELOCH@unable?5to?5load?5elliptic?5curve?5pa@
; `string'
??_C@_0CK@HCELOCH@unable?5to?5load?5elliptic?5curve?5pa@ db 'unable to load elliptic curve parameters',0Ah,0
					; DATA XREF: _ecparam_main+B76o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AC8h
; COMDAT (pick any)
		public ??_C@_0CF@POLMNEF@checking?5elliptic?5curve?5paramete@
; `string'
??_C@_0CF@POLMNEF@checking?5elliptic?5curve?5paramete@ db 'checking elliptic curve parameters: ',0
					; DATA XREF: _ecparam_main+BF4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AF0h
; COMDAT (pick any)
		public ??_C@_07GLGIIGGC@failed?6?$AA@
; `string'
??_C@_07GLGIIGGC@failed?6?$AA@ db 'failed',0Ah,0 ; DATA XREF: _ecparam_main+C13o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AF8h
; COMDAT (pick any)
		public ??_C@_03DJDALPN@ok?6?$AA@
; `string'
??_C@_03DJDALPN@ok?6?$AA@ db 'ok',0Ah,0 ; DATA XREF: _ecparam_main:loc_C1Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AFCh
; COMDAT (pick any)
		public ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@
; char `string'[]
??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@ db 'OPENSSL_malloc',0 ; DATA XREF: _ecparam_main+E19o
					; _ecparam_main:loc_1020o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B0Ch
; COMDAT (pick any)
		public ??_C@_04JEDLIEJ@ec_p?$AA@
; `string'
??_C@_04JEDLIEJ@ec_p?$AA@ db 'ec_p',0   ; DATA XREF: _ecparam_main+E2Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B14h
; COMDAT (pick any)
		public ??_C@_04FKJKJLFJ@ec_a?$AA@
; `string'
??_C@_04FKJKJLFJ@ec_a?$AA@ db 'ec_a',0  ; DATA XREF: _ecparam_main+E3Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B1Ch
; COMDAT (pick any)
		public ??_C@_04HBLHMIJK@ec_b?$AA@
; `string'
??_C@_04HBLHMIJK@ec_b?$AA@ db 'ec_b',0  ; DATA XREF: _ecparam_main+E50o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B24h
; COMDAT (pick any)
		public ??_C@_06JMKNOGHF@ec_gen?$AA@
; `string'
??_C@_06JMKNOGHF@ec_gen?$AA@ db	'ec_gen',0 ; DATA XREF: _ecparam_main+E61o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B2Ch
; COMDAT (pick any)
		public ??_C@_08BJBKGNHH@ec_order?$AA@
; `string'
??_C@_08BJBKGNHH@ec_order?$AA@ db 'ec_order',0 ; DATA XREF: _ecparam_main+E75o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B38h
; COMDAT (pick any)
		public ??_C@_0M@JGFEAIBN@ec_cofactor?$AA@
; `string'
??_C@_0M@JGFEAIBN@ec_cofactor?$AA@ db 'ec_cofactor',0 ; DATA XREF: _ecparam_main+E86o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B44h
; COMDAT (pick any)
		public ??_C@_02PHMGELLB@?6?6?$AA@
; `string'
??_C@_02PHMGELLB@?6?6?$AA@ db 0Ah	; DATA XREF: _ecparam_main+E95o
		db 0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B48h
; COMDAT (pick any)
		public ??_C@_0CE@MKOBLEFI@EC_GROUP?5?$CKget_ec_group_?$CFd?$CIvoid?$CJ?6@
; `string'
??_C@_0CE@MKOBLEFI@EC_GROUP?5?$CKget_ec_group_?$CFd?$CIvoid?$CJ?6@ db 'EC_GROUP *get_ec_group_%d(void)',0Ah
					; DATA XREF: _ecparam_main+EA1o
		db 9,'{',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B6Ch
; COMDAT (pick any)
		public ??_C@_0M@MNILMKAI@?7int?5ok?$DN0?$DL?6?$AA@
; `string'
??_C@_0M@MNILMKAI@?7int?5ok?$DN0?$DL?6?$AA@ db 9,'int ok=0;',0Ah,0
					; DATA XREF: _ecparam_main+EACo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B78h
; COMDAT (pick any)
		public ??_C@_0BK@IJPCHNCA@?7EC_GROUP?5?$CKgroup?5?$DN?5NULL?$DL?6?$AA@
; `string'
??_C@_0BK@IJPCHNCA@?7EC_GROUP?5?$CKgroup?5?$DN?5NULL?$DL?6?$AA@	db 9,'EC_GROUP *group = NULL;',0Ah,0
					; DATA XREF: _ecparam_main+EBAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B94h
; COMDAT (pick any)
		public ??_C@_0BK@PDEKEGKE@?7EC_POINT?5?$CKpoint?5?$DN?5NULL?$DL?6?$AA@
; `string'
??_C@_0BK@PDEKEGKE@?7EC_POINT?5?$CKpoint?5?$DN?5NULL?$DL?6?$AA@	db 9,'EC_POINT *point = NULL;',0Ah,0
					; DATA XREF: _ecparam_main+EC5o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1BB0h
; COMDAT (pick any)
		public ??_C@_0DJ@MMCKKFJH@?7BIGNUM?5?5?5?$CKtmp_1?5?$DN?5NULL?0?5?$CKtmp_2?5@
; `string'
??_C@_0DJ@MMCKKFJH@?7BIGNUM?5?5?5?$CKtmp_1?5?$DN?5NULL?0?5?$CKtmp_2?5@ db 9,'BIGNUM   *tmp_1 = NULL, *tmp_2 = NULL, *tmp_3 = NULL;',0Ah
					; DATA XREF: _ecparam_main+ED0o
		db 0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1BECh
; COMDAT (pick any)
		public ??_C@_0EP@CJLJIGIN@?7if?5?$CI?$CItmp_1?5?$DN?5BN_bin2bn?$CIec_p_?$CFd?0@
; `string'
??_C@_0EP@CJLJIGIN@?7if?5?$CI?$CItmp_1?5?$DN?5BN_bin2bn?$CIec_p_?$CFd?0@ db 9,'if ((tmp_1 = BN_bin2bn(ec_p_%d, sizeof(ec_p_%d), NULL)) == NULL)'
					; DATA XREF: _ecparam_main+EDDo
		db 0Ah
		db 9,9,'goto err;',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1C3Ch
; COMDAT (pick any)
		public ??_C@_0EP@LKEAJBBJ@?7if?5?$CI?$CItmp_2?5?$DN?5BN_bin2bn?$CIec_a_?$CFd?0@
; `string'
??_C@_0EP@LKEAJBBJ@?7if?5?$CI?$CItmp_2?5?$DN?5BN_bin2bn?$CIec_a_?$CFd?0@ db 9,'if ((tmp_2 = BN_bin2bn(ec_a_%d, sizeof(ec_a_%d), NULL)) == NULL)'
					; DATA XREF: _ecparam_main+EEAo
		db 0Ah
		db 9,9,'goto err;',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1C8Ch
; COMDAT (pick any)
		public ??_C@_0EP@LBPAJCIM@?7if?5?$CI?$CItmp_3?5?$DN?5BN_bin2bn?$CIec_b_?$CFd?0@
; `string'
??_C@_0EP@LBPAJCIM@?7if?5?$CI?$CItmp_3?5?$DN?5BN_bin2bn?$CIec_b_?$CFd?0@ db 9,'if ((tmp_3 = BN_bin2bn(ec_b_%d, sizeof(ec_b_%d), NULL)) == NULL)'
					; DATA XREF: _ecparam_main+EF7o
		db 0Ah
		db 9,9,'goto err;',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1CDCh
; COMDAT (pick any)
		public ??_C@_0FI@HBMFKBFN@?7if?5?$CI?$CIgroup?5?$DN?5EC_GROUP_new_curve@
; `string'
??_C@_0FI@HBMFKBFN@?7if?5?$CI?$CIgroup?5?$DN?5EC_GROUP_new_curve@ db 9,'if ((group = EC_GROUP_new_curve_GFp(tmp_1, tmp_2, tmp_3, NULL)) '
					; DATA XREF: _ecparam_main+F05o
		db '== NULL)',0Ah
		db 9,9,'goto err;',0Ah
		db 0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1D34h
; COMDAT (pick any)
		public ??_C@_0BI@LLIPNGID@?7?1?$CK?5build?5generator?5?$CK?1?6?$AA@
; `string'
??_C@_0BI@LLIPNGID@?7?1?$CK?5build?5generator?5?$CK?1?6?$AA@ db	9,'/* build generator */',0Ah,0
					; DATA XREF: _ecparam_main+F10o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1D4Ch
; COMDAT (pick any)
		public ??_C@_0FE@IHKOOMKL@?7if?5?$CI?$CItmp_1?5?$DN?5BN_bin2bn?$CIec_gen_?$CF@
; `string'
??_C@_0FE@IHKOOMKL@?7if?5?$CI?$CItmp_1?5?$DN?5BN_bin2bn?$CIec_gen_?$CF@	db 9,'if ((tmp_1 = BN_bin2bn(ec_gen_%d, sizeof(ec_gen_%d), tmp_1)) == '
					; DATA XREF: _ecparam_main+F1Do
		db 'NULL)',0Ah
		db 9,9,'goto err;',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1DA0h
; COMDAT (pick any)
		public ??_C@_0DH@FMMLBNLE@?7point?5?$DN?5EC_POINT_bn2point?$CIgroup@
; `string'
??_C@_0DH@FMMLBNLE@?7point?5?$DN?5EC_POINT_bn2point?$CIgroup@ db 9,'point = EC_POINT_bn2point(group, tmp_1, NULL, NULL);',0Ah,0
					; DATA XREF: _ecparam_main+F28o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1DD8h
; COMDAT (pick any)
		public ??_C@_0CB@JLAPGNHG@?7if?5?$CIpoint?5?$DN?$DN?5NULL?$CJ?6?7?7goto?5err?$DL?6@
; `string'
??_C@_0CB@JLAPGNHG@?7if?5?$CIpoint?5?$DN?$DN?5NULL?$CJ?6?7?7goto?5err?$DL?6@ db	9,'if (point == NULL)',0Ah
					; DATA XREF: _ecparam_main+F33o
		db 9,9,'goto err;',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1DFCh
; COMDAT (pick any)
		public ??_C@_0FI@EHPPELKO@?7if?5?$CI?$CItmp_2?5?$DN?5BN_bin2bn?$CIec_order@
; `string'
??_C@_0FI@EHPPELKO@?7if?5?$CI?$CItmp_2?5?$DN?5BN_bin2bn?$CIec_order@ db	9,'if ((tmp_2 = BN_bin2bn(ec_order_%d, sizeof(ec_order_%d), tmp_2))'
					; DATA XREF: _ecparam_main+F40o
		db ' == NULL)',0Ah
		db 9,9,'goto err;',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1E54h
; COMDAT (pick any)
		public ??_C@_0FO@DHBJIDGB@?7if?5?$CI?$CItmp_3?5?$DN?5BN_bin2bn?$CIec_cofac@
; `string'
??_C@_0FO@DHBJIDGB@?7if?5?$CI?$CItmp_3?5?$DN?5BN_bin2bn?$CIec_cofac@ db	9,'if ((tmp_3 = BN_bin2bn(ec_cofactor_%d, sizeof(ec_cofactor_%d), t'
					; DATA XREF: _ecparam_main+F50o
		db 'mp_3)) == NULL)',0Ah
		db 9,9,'goto err;',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1EB4h
; COMDAT (pick any)
		public ??_C@_0EH@BOBHKCEJ@?7if?5?$CI?$CBEC_GROUP_set_generator?$CIgro@
; `string'
??_C@_0EH@BOBHKCEJ@?7if?5?$CI?$CBEC_GROUP_set_generator?$CIgro@	db 9,'if (!EC_GROUP_set_generator(group, point, tmp_2, tmp_3))',0Ah
					; DATA XREF: _ecparam_main+F5Bo
		db 9,9,'goto err;',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1EFCh
; COMDAT (pick any)
		public ??_C@_08EPKNLIHJ@?6?7ok?$DN1?$DL?6?$AA@
; `string'
??_C@_08EPKNLIHJ@?6?7ok?$DN1?$DL?6?$AA@	db 0Ah ; DATA XREF: _ecparam_main+F66o
		db 9,'ok=1;',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1F08h
; COMDAT (pick any)
		public ??_C@_05IHDDJDMB@err?3?6?$AA@
; `string'
??_C@_05IHDDJDMB@err?3?6?$AA@ db 'err:',0Ah,0 ; DATA XREF: _ecparam_main+F71o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1F10h
; COMDAT (pick any)
		public ??_C@_0BP@DMHNLDOG@?7if?5?$CItmp_1?$CJ?6?7?7BN_free?$CItmp_1?$CJ?$DL?6?$AA@
; `string'
??_C@_0BP@DMHNLDOG@?7if?5?$CItmp_1?$CJ?6?7?7BN_free?$CItmp_1?$CJ?$DL?6?$AA@ db 9,'if (tmp_1)',0Ah
					; DATA XREF: _ecparam_main+F7Co
		db 9,9,'BN_free(tmp_1);',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1F30h
; COMDAT (pick any)
		public ??_C@_0BP@ECKFGEHG@?7if?5?$CItmp_2?$CJ?6?7?7BN_free?$CItmp_2?$CJ?$DL?6?$AA@
; `string'
??_C@_0BP@ECKFGEHG@?7if?5?$CItmp_2?$CJ?6?7?7BN_free?$CItmp_2?$CJ?$DL?6?$AA@ db 9,'if (tmp_2)',0Ah
					; DATA XREF: _ecparam_main+F87o
		db 9,9,'BN_free(tmp_2);',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1F50h
; COMDAT (pick any)
		public ??_C@_0BP@GIONCJAG@?7if?5?$CItmp_3?$CJ?6?7?7BN_free?$CItmp_3?$CJ?$DL?6?$AA@
; `string'
??_C@_0BP@GIONCJAG@?7if?5?$CItmp_3?$CJ?6?7?7BN_free?$CItmp_3?$CJ?$DL?6?$AA@ db 9,'if (tmp_3)',0Ah
					; DATA XREF: _ecparam_main+F92o
		db 9,9,'BN_free(tmp_3);',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1F70h
; COMDAT (pick any)
		public ??_C@_0CF@HDMNIKPD@?7if?5?$CIpoint?$CJ?6?7?7EC_POINT_free?$CIpoin@
; `string'
??_C@_0CF@HDMNIKPD@?7if?5?$CIpoint?$CJ?6?7?7EC_POINT_free?$CIpoin@ db 9,'if (point)',0Ah
					; DATA XREF: _ecparam_main+FA0o
		db 9,9,'EC_POINT_free(point);',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1F98h
; COMDAT (pick any)
		public ??_C@_0L@BOFMGBEH@?7if?5?$CI?$CBok?$CJ?6?$AA@
; `string'
??_C@_0L@BOFMGBEH@?7if?5?$CI?$CBok?$CJ?6?$AA@ db 9,'if (!ok)',0Ah,0
					; DATA XREF: _ecparam_main+FABo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1FA4h
; COMDAT (pick any)
		public ??_C@_04OLIOEKCC@?7?7?$HL?6?$AA@
; `string'
??_C@_04OLIOEKCC@?7?7?$HL?6?$AA@ db 9,9,'{',0Ah,0 ; DATA XREF: _ecparam_main+FB6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1FACh
; COMDAT (pick any)
		public ??_C@_0BJ@CJAKAMGL@?7?7EC_GROUP_free?$CIgroup?$CJ?$DL?6?$AA@
; `string'
??_C@_0BJ@CJAKAMGL@?7?7EC_GROUP_free?$CIgroup?$CJ?$DL?6?$AA@ db	9,9,'EC_GROUP_free(group);',0Ah,0
					; DATA XREF: _ecparam_main+FC1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1FC8h
; COMDAT (pick any)
		public ??_C@_0BB@IMJJHDHJ@?7?7group?5?$DN?5NULL?$DL?6?$AA@
; `string'
??_C@_0BB@IMJJHDHJ@?7?7group?5?$DN?5NULL?$DL?6?$AA@ db 9,9,'group = NULL;',0Ah,0
					; DATA XREF: _ecparam_main+FCCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1FDCh
; COMDAT (pick any)
		public ??_C@_04OPADDGJA@?7?7?$HN?6?$AA@
; `string'
??_C@_04OPADDGJA@?7?7?$HN?6?$AA@ db 9,9,'}',0Ah,0 ; DATA XREF: _ecparam_main+FD7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1FE4h
; COMDAT (pick any)
		public ??_C@_0BE@NMFFMAII@?7return?$CIgroup?$CJ?$DL?6?7?$HN?6?$AA@
; `string'
??_C@_0BE@NMFFMAII@?7return?$CIgroup?$CJ?$DL?6?7?$HN?6?$AA@ db 9,'return(group);',0Ah
					; DATA XREF: _ecparam_main+FE2o
		db 9,'}',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1FF8h
; COMDAT (pick any)
		public ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
; `string'
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ db 'bad output format specified for outfile',0Ah,0
					; DATA XREF: _ecparam_main:loc_10EBo
					; _ecparam_main:loc_1207o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2024h
; COMDAT (pick any)
		public ??_C@_0CL@PMJOFJLG@unable?5to?5write?5elliptic?5curve?5p@
; `string'
??_C@_0CL@PMJOFJLG@unable?5to?5write?5elliptic?5curve?5p@ db 'unable to write elliptic curve parameters',0Ah,0
					; DATA XREF: _ecparam_main+10C4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2050h
; COMDAT (pick any)
		public ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
; `string'
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ db '%ld semi-random bytes loaded',0Ah,0
					; DATA XREF: _ecparam_main+1135o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2070h
; COMDAT (pick any)
		public ??_C@_1CC@FIEJPJLE@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAe?$AAc?$AAp?$AAa?$AAr?$AAa?$AAm?$AA?4?$AAc?$AA?$AA@
; wchar_t `string'
??_C@_1CC@FIEJPJLE@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAe?$AAc?$AAp?$AAa?$AAr?$AAa?$AAm?$AA?4?$AAc?$AA?$AA@:
					; DATA XREF: _ecparam_main+116Ao
		unicode	0, <.\apps\ecparam.c>,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2094h
; COMDAT (pick any)
		public ??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@
; wchar_t `string'
??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@:
					; DATA XREF: _ecparam_main+116Fo
		unicode	0, <need_rand>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20A8h
; COMDAT (pick any)
		public ??_C@_0CB@JIIMNMKE@static?5unsigned?5char?5?$CFs_?$CFd?$FL?$FN?5?$DN?5?$HL@
; `string'
??_C@_0CB@JIIMNMKE@static?5unsigned?5char?5?$CFs_?$CFd?$FL?$FN?5?$DN?5?$HL@ db 'static unsigned char %s_%d[] = {',0
					; DATA XREF: _ecparam_print_var+Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20CCh
; COMDAT (pick any)
		public ??_C@_06BFGLMNJB@?6?70x00?$AA@
; `string'
??_C@_06BFGLMNJB@?6?70x00?$AA@ db 0Ah	; DATA XREF: _ecparam_print_var+25o
		db 9,'0x00',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20D4h
; COMDAT (pick any)
		public ??_C@_02NMOLBIHC@?6?7?$AA@
; `string'
??_C@_02NMOLBIHC@?6?7?$AA@ db 0Ah, 9, 0	; DATA XREF: _ecparam_print_var+68o
					; _ecparam_print_var+AAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20D8h
; COMDAT (pick any)
		public ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@
; `string'
??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ db '0x%02X,',0 ; DATA XREF: _ecparam_print_var+7Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20E0h
; COMDAT (pick any)
		public ??_C@_06IBAGLEAI@0x?$CF02X?$AA@
; `string'
??_C@_06IBAGLEAI@0x?$CF02X?$AA@	db '0x%02X',0 ; DATA XREF: _ecparam_print_var+BDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20E8h
; COMDAT (pick any)
		public ??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@
; `string'
??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@ db 0Ah ;	DATA XREF: _ecparam_print_var:loc_1366o
		db 9,'};',0Ah
		db 0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; void __cdecl __wassert(const wchar_t *Message, const wchar_t *File, unsigned int Line)
		extrn __imp___wassert:near ; CODE XREF:	_ecparam_main+1174p
					; DATA XREF: _ecparam_main+1174r
		extrn __imp____acrt_iob_func:near ; CODE XREF: _ecparam_main+A0p
					; _ecparam_main+726p ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _ecparam_main+E1Ep
					; _ecparam_main+1025p ...
		extrn _CRYPTO_malloc:near ; CODE XREF: _ecparam_main+97Cp
					; _ecparam_main+E07p
		extrn _CRYPTO_free:near	; CODE XREF: _ecparam_main+9A1p
					; _ecparam_main+9FAp ...
		extrn _BIO_s_file:near	; CODE XREF: _ecparam_main+87p
					; _ecparam_main+6E8p ...
		extrn _BIO_new:near	; CODE XREF: _ecparam_main+8Dp
					; _ecparam_main+6EEp ...
		extrn _BIO_free:near	; CODE XREF: _ecparam_main+1261p
		extrn _BIO_ctrl:near	; CODE XREF: _ecparam_main+B1p
					; _ecparam_main+731p ...
		extrn _BIO_free_all:near ; CODE	XREF: _ecparam_main+126Ep
		extrn _BIO_printf:near	; CODE XREF: _ecparam_main+74Cp
					; _ecparam_main+763p ...
		extrn _BN_num_bits:near	; CODE XREF: _ecparam_main+D59p
					; _ecparam_main+D64p ...
		extrn _BN_new:near	; CODE XREF: _ecparam_main+C4Bp
					; _ecparam_main+C5Cp ...
		extrn _BN_bn2bin:near	; CODE XREF: _ecparam_print_var+43p
		extrn _BN_free:near	; CODE XREF: _ecparam_main+103Ep
					; _ecparam_main+104Fp ...
		extrn _ASN1_d2i_bio:near ; CODE	XREF: _ecparam_main+B47p
		extrn _ASN1_i2d_bio:near ; CODE	XREF: _ecparam_main+1013p
		extrn _OBJ_nid2sn:near	; CODE XREF: _ecparam_main+9B8p
		extrn _OBJ_sn2nid:near	; CODE XREF: _ecparam_main+AE7p
		extrn _EC_GROUP_free:near ; CODE XREF: _ecparam_main+127Bp
		extrn _EC_GROUP_method_of:near ; CODE XREF: _ecparam_main+C41p
		extrn _EC_METHOD_get_field_type:near ; CODE XREF: _ecparam_main+CB2p
		extrn _EC_GROUP_get0_generator:near ; CODE XREF: _ecparam_main+CEFp
		extrn _EC_GROUP_get_order:near ; CODE XREF: _ecparam_main+D2Fp
		extrn _EC_GROUP_get_cofactor:near ; CODE XREF: _ecparam_main+D45p
		extrn _EC_GROUP_set_asn1_flag:near ; CODE XREF:	_ecparam_main+B26p
					; _ecparam_main+BB6p
		extrn _EC_GROUP_set_point_conversion_form:near
					; CODE XREF: _ecparam_main+B2Dp
					; _ecparam_main+BA2p
		extrn _EC_GROUP_get_point_conversion_form:near
					; CODE XREF: _ecparam_main+D0Ap
		extrn _EC_GROUP_set_seed:near ;	CODE XREF: _ecparam_main+BCAp
		extrn _EC_GROUP_get_curve_GFp:near ; CODE XREF:	_ecparam_main+CDEp
		extrn _EC_GROUP_check:near ; CODE XREF:	_ecparam_main+C07p
		extrn _EC_GROUP_new_by_curve_name:near ; CODE XREF: _ecparam_main+A64p
		extrn _EC_get_builtin_curves:near ; CODE XREF: _ecparam_main+95Cp
					; _ecparam_main+994p
		extrn _EC_curve_nist2nid:near ;	CODE XREF: _ecparam_main+AF8p
		extrn _EC_POINT_point2bn:near ;	CODE XREF: _ecparam_main+D19p
		extrn _d2i_ECPKParameters:near ; DATA XREF: _ecparam_main+B40o
		extrn _i2d_ECPKParameters:near ; DATA XREF: _ecparam_main+100Eo
		extrn _ECPKParameters_print:near ; CODE	XREF: _ecparam_main+BDDp
		extrn _EC_KEY_new:near	; CODE XREF: _ecparam_main+1153p
		extrn _EC_KEY_free:near	; CODE XREF: _ecparam_main+119Dp
					; _ecparam_main+11DDp ...
		extrn _EC_KEY_set_group:near ; CODE XREF: _ecparam_main+117Fp
		extrn _EC_KEY_generate_key:near	; CODE XREF: _ecparam_main+1190p
		extrn _i2d_ECPrivateKey_bio:near ; CODE	XREF: _ecparam_main+11B9p
		extrn _ERR_print_errors:near ; CODE XREF: _ecparam_main+B8Cp
					; _ecparam_main+10DAp ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _ecparam_main:loc_6E3p
		extrn _app_RAND_load_file:near ; CODE XREF: _ecparam_main+1122p
		extrn _app_RAND_write_file:near	; CODE XREF: _ecparam_main+11F4p
		extrn _app_RAND_load_files:near	; CODE XREF: _ecparam_main+112Fp
		extrn _str2fmt:near	; CODE XREF: _ecparam_main+149p
					; _ecparam_main+19Ap
		extrn _setup_engine:near ; CODE	XREF: _ecparam_main+945p
		extrn _load_config:near	; CODE XREF: _ecparam_main+C1p
		extrn _PEM_read_bio_ECPKParameters:near	; CODE XREF: _ecparam_main+B64p
		extrn _PEM_write_bio_ECPKParameters:near ; CODE	XREF: _ecparam_main+10B8p
		extrn _PEM_write_bio_ECPrivateKey:near ; CODE XREF: _ecparam_main+11D4p
		extrn __chkstk:near	; CODE XREF: _ecparam_main+5p
		extrn _bio_err:near	; DATA XREF: _ecparam_main+6Ar
					; _ecparam_main+95w ...


		end

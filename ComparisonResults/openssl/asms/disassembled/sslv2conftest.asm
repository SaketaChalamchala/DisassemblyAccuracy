;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	66957C83CD5318C64AA46D4D5634435C
; Input	CRC32 :	F757BD6B

; File Name   :	C:\compspace\Diff\openssl\obj\sslv2conftest.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _printf+19p
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_checksslv2	proc near		; CODE XREF: _main+1AEp _main+1F8p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		cmp	[esp+arg_0], 0
		push	0
		push	0
		push	20h ; ' '
		jnz	short loc_46
		push	dword ptr ds:_ctx
		call	_SSL_CTX_ctrl
		jmp	short loc_51
; ---------------------------------------------------------------------------

loc_46:					; CODE XREF: _checksslv2+Bj
		push	dword ptr ds:_ssl
		call	_SSL_ctrl

loc_51:					; CODE XREF: _checksslv2+18j
		mov	ecx, eax
		add	esp, 10h
		shr	ecx, 18h
		xor	eax, eax
		not	ecx
		and	ecx, 1
		cmp	[esp+arg_4], eax
		setz	al
		xor	eax, ecx
		retn
_checksslv2	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public _main
_main		proc near

var_4		= dword	ptr -4
argc		= dword	ptr  4
argv		= dword	ptr  8
envp		= dword	ptr  0Ch

		mov	eax, 4
		call	__chkstk
		push	ebx
		push	esi
		push	edi
		xor	ebx, ebx
		call	_SSL_library_init
		call	_SSL_load_error_strings
		push	10h
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		push	offset _CRYPTO_dbg_get_options
		push	offset _CRYPTO_dbg_set_options
		push	offset _CRYPTO_dbg_free
		push	offset _CRYPTO_dbg_realloc
		push	offset _CRYPTO_dbg_malloc
		mov	edi, eax
		call	_CRYPTO_set_mem_debug_functions
		push	3
		call	_CRYPTO_set_mem_debug_options
		push	1
		call	_CRYPTO_mem_ctrl
		call	_SSL_CONF_CTX_new
		mov	dword ptr ds:_confctx, eax
		call	_SSLv23_method
		push	eax
		call	_SSL_CTX_new
		push	eax
		mov	dword ptr ds:_ctx, eax
		call	_SSL_new
		mov	dword ptr ds:_ssl, eax
		add	esp, 2Ch
		mov	eax, dword ptr ds:_confctx
		test	eax, eax
		jz	loc_42C
		cmp	dword ptr ds:_ctx, ebx
		jz	loc_42C
		push	0Eh
		push	eax
		call	_SSL_CONF_CTX_set_flags
		add	esp, 8
		xor	esi, esi

loc_114:				; CODE XREF: _main+31Dj
		push	esi
		push	offset ??_C@_0BL@GGAEMINP@SSLv2?5CONF?5Test?5number?5?$CFd?6?$AA@ ; "SSLv2 CONF	Test number %d\n"
		push	edi
		call	_BIO_printf
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_149
		push	dword ptr ds:_ctx
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_set_ssl_ctx
		push	esi
		push	esi
		push	20h ; ' '
		push	dword ptr ds:_ctx
		call	_SSL_CTX_ctrl
		jmp	short loc_16B
; ---------------------------------------------------------------------------

loc_149:				; CODE XREF: _main+B9j
		push	dword ptr ds:_ssl
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_set_ssl
		push	0
		push	0
		push	20h ; ' '
		push	dword ptr ds:_ssl
		call	_SSL_ctrl

loc_16B:				; CODE XREF: _main+DBj
		add	esp, 18h
		test	eax, 1000000h
		jz	loc_41C
		push	offset ??_C@_03NIFPGLBG@ALL?$AA@ ; `string'
		push	offset ??_C@_08NAKOFPNG@Protocol?$AA@ ;	"Protocol"
		push	dword ptr ds:_confctx
		call	_SSL_CONF_cmd
		add	esp, 0Ch
		cmp	eax, 2
		jnz	loc_40C
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_finish
		add	esp, 4
		test	eax, eax
		jz	loc_40C
		push	0
		push	0
		push	20h ; ' '
		test	esi, esi
		jnz	short loc_1C7
		push	dword ptr ds:_ctx
		call	_SSL_CTX_ctrl
		jmp	short loc_1D2
; ---------------------------------------------------------------------------

loc_1C7:				; CODE XREF: _main+14Cj
		push	dword ptr ds:_ssl
		call	_SSL_ctrl

loc_1D2:				; CODE XREF: _main+159j
		add	esp, 10h
		test	eax, 1000000h
		jz	loc_3FC
		push	offset ??_C@_05NHFKDGAI@SSLv2?$AA@ ; "SSLv2"
		push	offset ??_C@_08NAKOFPNG@Protocol?$AA@ ;	"Protocol"
		push	dword ptr ds:_confctx
		call	_SSL_CONF_cmd
		add	esp, 0Ch
		cmp	eax, 2
		jnz	loc_40C
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_finish
		add	esp, 4
		test	eax, eax
		jz	loc_40C
		push	0
		push	esi
		call	_checksslv2
		add	esp, 8
		test	eax, eax
		jz	loc_3EC
		push	offset ??_C@_06FFJOBAIJ@?9SSLv2?$AA@ ; "-SSLv2"
		push	offset ??_C@_08NAKOFPNG@Protocol?$AA@ ;	"Protocol"
		push	dword ptr ds:_confctx
		call	_SSL_CONF_cmd
		add	esp, 0Ch
		cmp	eax, 2
		jnz	loc_40C
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_finish
		add	esp, 4
		test	eax, eax
		jz	loc_40C
		push	0
		push	esi
		call	_checksslv2
		add	esp, 8
		test	eax, eax
		jz	loc_3DC
		push	0
		push	1000000h
		push	4Dh ; 'M'
		test	esi, esi
		jnz	short loc_28E
		push	dword ptr ds:_ctx
		call	_SSL_CTX_ctrl
		jmp	short loc_299
; ---------------------------------------------------------------------------

loc_28E:				; CODE XREF: _main+213j
		push	dword ptr ds:_ssl
		call	_SSL_ctrl

loc_299:				; CODE XREF: _main+220j
		add	esp, 10h
		push	1
		push	esi
		call	_checksslv2
		add	esp, 8
		test	eax, eax
		jz	loc_3CC
		push	offset ??_C@_03NIFPGLBG@ALL?$AA@ ; `string'
		push	offset ??_C@_08NAKOFPNG@Protocol?$AA@ ;	"Protocol"
		push	dword ptr ds:_confctx
		call	_SSL_CONF_cmd
		add	esp, 0Ch
		cmp	eax, 2
		jnz	loc_40C
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_finish
		add	esp, 4
		test	eax, eax
		jz	loc_40C
		push	1
		push	esi
		call	_checksslv2
		add	esp, 8
		test	eax, eax
		jz	loc_3BC
		push	offset ??_C@_05NHFKDGAI@SSLv2?$AA@ ; "SSLv2"
		push	offset ??_C@_08NAKOFPNG@Protocol?$AA@ ;	"Protocol"
		push	dword ptr ds:_confctx
		call	_SSL_CONF_cmd
		add	esp, 0Ch
		cmp	eax, 2
		jnz	loc_40C
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_finish
		add	esp, 4
		test	eax, eax
		jz	loc_40C
		push	1
		push	esi
		call	_checksslv2
		add	esp, 8
		test	eax, eax
		jz	short loc_3AC
		push	offset ??_C@_06FFJOBAIJ@?9SSLv2?$AA@ ; "-SSLv2"
		push	offset ??_C@_08NAKOFPNG@Protocol?$AA@ ;	"Protocol"
		push	dword ptr ds:_confctx
		call	_SSL_CONF_cmd
		add	esp, 0Ch
		cmp	eax, 2
		jnz	loc_40C
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_finish
		add	esp, 4
		test	eax, eax
		jz	loc_40C
		push	0
		push	esi
		call	_checksslv2
		add	esp, 8
		test	eax, eax
		jz	short loc_399
		inc	esi
		cmp	esi, 2
		jl	loc_114
		mov	ebx, 1
		jmp	$end$69
; ---------------------------------------------------------------------------

loc_399:				; CODE XREF: _main+317j
		push	offset ??_C@_0CL@GBPAGAOF@SSLv2?5CONF?5Test?3?5Off?5after?5confi@ ; "SSLv2 CONF	Test: Off after	config #4 FA"...
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	$end$69
; ---------------------------------------------------------------------------

loc_3AC:				; CODE XREF: _main+2D1j
		push	offset ??_C@_0CK@IANPODIG@SSLv2?5CONF?5Test?3?5On?5after?5config@ ; "SSLv2 CONF	Test: On after config #2 FAI"...
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$69
; ---------------------------------------------------------------------------

loc_3BC:				; CODE XREF: _main+287j
		push	offset ??_C@_0CK@OFAOEGF@SSLv2?5CONF?5Test?3?5On?5after?5config@ ; "SSLv2 CONF Test: On	after config #1	FAI"...
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$69
; ---------------------------------------------------------------------------

loc_3CC:				; CODE XREF: _main+23Dj
		push	offset ??_C@_0CG@PFMHOLGH@SSLv2?5CONF?5Test?3?5On?5after?5clear?5@ ; "SSLv2 CONF Test: On after	clear FAIL\n"
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$69
; ---------------------------------------------------------------------------

loc_3DC:				; CODE XREF: _main+202j
		push	offset ??_C@_0CL@GLDFGJPM@SSLv2?5CONF?5Test?3?5Off?5after?5confi@ ; "SSLv2 CONF	Test: Off after	config #3 FA"...
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$69
; ---------------------------------------------------------------------------

loc_3EC:				; CODE XREF: _main+1B8j
		push	offset ??_C@_0CL@KHJPGJGC@SSLv2?5CONF?5Test?3?5Off?5after?5confi@ ; "SSLv2 CONF	Test: Off after	config #2 FA"...
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$69
; ---------------------------------------------------------------------------

loc_3FC:				; CODE XREF: _main+16Ej
		push	offset ??_C@_0CL@CJBAGOIB@SSLv2?5CONF?5Test?3?5Off?5after?5confi@ ; "SSLv2 CONF	Test: Off after	config #1 FA"...
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$69
; ---------------------------------------------------------------------------

loc_40C:				; CODE XREF: _main+128j _main+13Ej ...
		push	offset ??_C@_0CI@KOACJNEH@SSLv2?5CONF?5Test?3?5SSL_CONF?5comman@ ; "SSLv2 CONF Test: SSL_CONF command FAIL\"...
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$69
; ---------------------------------------------------------------------------

loc_41C:				; CODE XREF: _main+107j
		push	offset ??_C@_0CL@OMNMEAH@SSLv2?5CONF?5Test?3?5Off?5by?5default?5@ ; "SSLv2 CONF	Test: Off by default test FA"...
		push	edi
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$69
; ---------------------------------------------------------------------------

loc_42C:				; CODE XREF: _main+89j	_main+95j
		mov	esi, [esp+10h+var_4]

$end$69:				; CODE XREF: _main+328j _main+33Bj ...
		push	dword ptr ds:_ssl
		call	_SSL_free
		push	dword ptr ds:_ctx
		call	_SSL_CTX_free
		push	dword ptr ds:_confctx
		call	_SSL_CONF_CTX_free
		add	esp, 0Ch
		test	ebx, ebx
		jnz	short loc_46E
		push	esi
		push	offset ??_C@_0CD@BEBMICIE@SSLv2?5CONF?5test?3?5FAILED?5?$CITest?5?$CFd@	; "SSLv2 CONF test: FAILED (Test %d)\n"
		call	_printf
		push	edi
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	short loc_47B
; ---------------------------------------------------------------------------

loc_46E:				; CODE XREF: _main+3EAj
		push	offset ??_C@_0BJ@FHBDPJJJ@SSLv2?5CONF?5test?3?5PASSED?6?$AA@ ; "SSLv2 CONF test: PASSED\n"
		call	_printf
		add	esp, 4

loc_47B:				; CODE XREF: _main+400j
		call	_ERR_free_strings
		push	0
		call	_ERR_remove_thread_state
		call	_EVP_cleanup
		call	_CRYPTO_cleanup_all_ex_data
		push	edi
		call	_CRYPTO_mem_leaks
		push	edi
		call	_BIO_free
		add	esp, 0Ch
		xor	eax, eax
		test	ebx, ebx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		pop	ecx
		retn
_main		endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4ACh
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int printf(const char	*Format, ...)
		public _printf
_printf		proc near		; CODE XREF: _main+3F2p _main+407p

Format		= dword	ptr  4
arg_4		= byte ptr  8

		push	esi
		mov	esi, [esp+4+Format]
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		lea	ecx, [esp+4+arg_4]
		push	ecx
		push	0
		push	esi
		push	eax
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		pop	esi
		retn
_printf		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4DCh
; COMDAT (pick any)
		public ??_C@_0BL@GGAEMINP@SSLv2?5CONF?5Test?5number?5?$CFd?6?$AA@
; `string'
??_C@_0BL@GGAEMINP@SSLv2?5CONF?5Test?5number?5?$CFd?6?$AA@ db 'SSLv2 CONF Test number %d',0Ah,0
					; DATA XREF: _main+A9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4F8h
; COMDAT (pick any)
		public ??_C@_0CL@OMNMEAH@SSLv2?5CONF?5Test?3?5Off?5by?5default?5@
; `string'
??_C@_0CL@OMNMEAH@SSLv2?5CONF?5Test?3?5Off?5by?5default?5@ db 'SSLv2 CONF Test: Off by default test FAIL',0Ah,0
					; DATA XREF: _main:loc_41Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 524h
; COMDAT (pick any)
		public ??_C@_03NIFPGLBG@ALL?$AA@
; `string'
??_C@_03NIFPGLBG@ALL?$AA@ dd 4C4C41h	; DATA XREF: _main+10Do _main+243o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 528h
; COMDAT (pick any)
		public ??_C@_08NAKOFPNG@Protocol?$AA@
; `string'
??_C@_08NAKOFPNG@Protocol?$AA@ db 'Protocol',0 ; DATA XREF: _main+112o
					; _main+179o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 534h
; COMDAT (pick any)
		public ??_C@_0CI@KOACJNEH@SSLv2?5CONF?5Test?3?5SSL_CONF?5comman@
; `string'
??_C@_0CI@KOACJNEH@SSLv2?5CONF?5Test?3?5SSL_CONF?5comman@ db 'SSLv2 CONF Test: SSL_CONF command FAIL',0Ah,0
					; DATA XREF: _main:loc_40Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 55Ch
; COMDAT (pick any)
		public ??_C@_0CL@CJBAGOIB@SSLv2?5CONF?5Test?3?5Off?5after?5confi@
; `string'
??_C@_0CL@CJBAGOIB@SSLv2?5CONF?5Test?3?5Off?5after?5confi@ db 'SSLv2 CONF Test: Off after config #1 FAIL',0Ah,0
					; DATA XREF: _main:loc_3FCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 588h
; COMDAT (pick any)
		public ??_C@_05NHFKDGAI@SSLv2?$AA@
; `string'
??_C@_05NHFKDGAI@SSLv2?$AA@ db 'SSLv2',0 ; DATA XREF: _main+174o _main+28Do
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 590h
; COMDAT (pick any)
		public ??_C@_0CL@KHJPGJGC@SSLv2?5CONF?5Test?3?5Off?5after?5confi@
; `string'
??_C@_0CL@KHJPGJGC@SSLv2?5CONF?5Test?3?5Off?5after?5confi@ db 'SSLv2 CONF Test: Off after config #2 FAIL',0Ah,0
					; DATA XREF: _main:loc_3ECo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5BCh
; COMDAT (pick any)
		public ??_C@_06FFJOBAIJ@?9SSLv2?$AA@
; `string'
??_C@_06FFJOBAIJ@?9SSLv2?$AA@ db '-SSLv2',0 ; DATA XREF: _main+1BEo _main+2D3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5C4h
; COMDAT (pick any)
		public ??_C@_0CL@GLDFGJPM@SSLv2?5CONF?5Test?3?5Off?5after?5confi@
; `string'
??_C@_0CL@GLDFGJPM@SSLv2?5CONF?5Test?3?5Off?5after?5confi@ db 'SSLv2 CONF Test: Off after config #3 FAIL',0Ah,0
					; DATA XREF: _main:loc_3DCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5F0h
; COMDAT (pick any)
		public ??_C@_0CG@PFMHOLGH@SSLv2?5CONF?5Test?3?5On?5after?5clear?5@
; `string'
??_C@_0CG@PFMHOLGH@SSLv2?5CONF?5Test?3?5On?5after?5clear?5@ db 'SSLv2 CONF Test: On after clear FAIL',0Ah,0
					; DATA XREF: _main:loc_3CCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 618h
; COMDAT (pick any)
		public ??_C@_0CK@OFAOEGF@SSLv2?5CONF?5Test?3?5On?5after?5config@
; `string'
??_C@_0CK@OFAOEGF@SSLv2?5CONF?5Test?3?5On?5after?5config@ db 'SSLv2 CONF Test: On after config #1 FAIL',0Ah,0
					; DATA XREF: _main:loc_3BCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 644h
; COMDAT (pick any)
		public ??_C@_0CK@IANPODIG@SSLv2?5CONF?5Test?3?5On?5after?5config@
; `string'
??_C@_0CK@IANPODIG@SSLv2?5CONF?5Test?3?5On?5after?5config@ db 'SSLv2 CONF Test: On after config #2 FAIL',0Ah,0
					; DATA XREF: _main:loc_3ACo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 670h
; COMDAT (pick any)
		public ??_C@_0CL@GBPAGAOF@SSLv2?5CONF?5Test?3?5Off?5after?5confi@
; `string'
??_C@_0CL@GBPAGAOF@SSLv2?5CONF?5Test?3?5Off?5after?5confi@ db 'SSLv2 CONF Test: Off after config #4 FAIL',0Ah,0
					; DATA XREF: _main:loc_399o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 69Ch
; COMDAT (pick any)
		public ??_C@_0CD@BEBMICIE@SSLv2?5CONF?5test?3?5FAILED?5?$CITest?5?$CFd@
; char `string'[]
??_C@_0CD@BEBMICIE@SSLv2?5CONF?5test?3?5FAILED?5?$CITest?5?$CFd@ db 'SSLv2 CONF test: FAILED (Test %d)',0Ah,0
					; DATA XREF: _main+3EDo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6C0h
; COMDAT (pick any)
		public ??_C@_0BJ@FHBDPJJJ@SSLv2?5CONF?5test?3?5PASSED?6?$AA@
; char `string'[]
??_C@_0BJ@FHBDPJJJ@SSLv2?5CONF?5test?3?5PASSED?6?$AA@ db 'SSLv2 CONF test: PASSED',0Ah,0
					; DATA XREF: _main:loc_46Eo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _confctx:near	; DATA XREF: _main+5Fw	_main+82r ...
		extrn _ctx:near		; DATA XREF: _checksslv2+Dr _main+70w	...
		extrn _ssl:near		; DATA XREF: _checksslv2:loc_46r
					; _main+7Aw ...
		extrn __imp____acrt_iob_func:near ; CODE XREF: _main+1Dp
					; _printf+7p
					; DATA XREF: ...
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _printf+23p
					; DATA XREF: ...
		extrn _CRYPTO_mem_ctrl:near ; CODE XREF: _main+55p
		extrn _CRYPTO_cleanup_all_ex_data:near ; CODE XREF: _main+420p
		extrn _CRYPTO_set_mem_debug_functions:near ; CODE XREF:	_main+47p
		extrn _CRYPTO_set_mem_debug_options:near ; CODE	XREF: _main+4Ep
		extrn _CRYPTO_dbg_malloc:near ;	DATA XREF: _main+40o
		extrn _CRYPTO_dbg_realloc:near ; DATA XREF: _main+3Bo
		extrn _CRYPTO_dbg_free:near ; DATA XREF: _main+36o
		extrn _CRYPTO_dbg_set_options:near ; DATA XREF:	_main+31o
		extrn _CRYPTO_dbg_get_options:near ; DATA XREF:	_main+2Co
		extrn _CRYPTO_mem_leaks:near ; CODE XREF: _main+426p
		extrn _BIO_new_fp:near	; CODE XREF: _main+27p
		extrn _BIO_free:near	; CODE XREF: _main+42Cp
		extrn _BIO_printf:near	; CODE XREF: _main+AFp	_main+333p ...
		extrn _EVP_cleanup:near	; CODE XREF: _main+41Bp
		extrn _SSL_CTX_new:near	; CODE XREF: _main+6Ap
		extrn _SSL_CTX_free:near ; CODE	XREF: _main+3D5p
		extrn _SSL_load_error_strings:near ; CODE XREF:	_main+14p
		extrn _SSL_new:near	; CODE XREF: _main+75p
		extrn _SSL_free:near	; CODE XREF: _main+3CAp
		extrn _SSL_ctrl:near	; CODE XREF: _checksslv2+20p _main+FAp ...
		extrn _SSL_CTX_ctrl:near ; CODE	XREF: _checksslv2+13p
					; _main+D6p ...
		extrn _SSLv23_method:near ; CODE XREF: _main+64p
		extrn _SSL_library_init:near ; CODE XREF: _main+Fp
		extrn _SSL_CONF_CTX_new:near ; CODE XREF: _main+5Ap
		extrn _SSL_CONF_CTX_finish:near	; CODE XREF: _main+134p
					; _main+19Bp ...
		extrn _SSL_CONF_CTX_free:near ;	CODE XREF: _main+3E0p
		extrn _SSL_CONF_CTX_set_flags:near ; CODE XREF:	_main+9Ep
		extrn _SSL_CONF_CTX_set_ssl:near ; CODE	XREF: _main+E9p
		extrn _SSL_CONF_CTX_set_ssl_ctx:near ; CODE XREF: _main+C7p
		extrn _SSL_CONF_cmd:near ; CODE	XREF: _main+11Dp _main+184p ...
		extrn _ERR_print_errors:near ; CODE XREF: _main+3F8p
		extrn _ERR_free_strings:near ; CODE XREF: _main:loc_47Bp
		extrn _ERR_remove_thread_state:near ; CODE XREF: _main+416p
		extrn __chkstk:near	; CODE XREF: _main+5p
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso


		end

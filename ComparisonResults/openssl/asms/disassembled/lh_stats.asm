;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	586B32ABAF958EA6D95049ABDDD2F507
; Input	CRC32 :	5F087202

; File Name   :	C:\compspace\Diff\openssl\obj\lh_stats.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _lh_node_stats
_lh_node_stats	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	short $end$5_0
		push	[esp+4+arg_4]
		push	0
		push	6Ah ; 'j'
		push	esi
		call	_BIO_ctrl
		push	esi
		push	[esp+18h+arg_0]
		call	_lh_node_stats_bio
		push	esi
		call	_BIO_free
		add	esp, 1Ch

$end$5_0:				; CODE XREF: _lh_node_stats+13j
		pop	esi
		retn
_lh_node_stats	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 38h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _lh_node_stats_bio
_lh_node_stats_bio proc	near		; CODE XREF: _lh_node_stats+28p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	edi
		mov	edi, [esp+8+arg_0]
		xor	esi, esi
		cmp	[edi+0Ch], esi
		jbe	short loc_77
		push	ebx
		mov	ebx, [esp+0Ch+arg_4]

loc_4A:					; CODE XREF: _lh_node_stats_bio+3Cj
		mov	eax, [edi]
		xor	ecx, ecx
		mov	eax, [eax+esi*4]
		test	eax, eax
		jz	short loc_60
		nop	dword ptr [eax]

loc_58:					; CODE XREF: _lh_node_stats_bio+26j
		mov	eax, [eax+4]
		inc	ecx
		test	eax, eax
		jnz	short loc_58

loc_60:					; CODE XREF: _lh_node_stats_bio+1Bj
		push	ecx
		push	esi
		push	offset ??_C@_0BB@MMANDJCK@node?5?$CF6u?5?9?$DO?5?$CF3u?6?$AA@ ;	"node %6u -> %3u\n"
		push	ebx
		call	_BIO_printf
		inc	esi
		add	esp, 10h
		cmp	esi, [edi+0Ch]
		jb	short loc_4A
		pop	ebx

loc_77:					; CODE XREF: _lh_node_stats_bio+Bj
		pop	edi
		pop	esi
		retn
_lh_node_stats_bio endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 7Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _lh_node_usage_stats
_lh_node_usage_stats proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	short $end$5_1
		push	[esp+4+arg_4]
		push	0
		push	6Ah ; 'j'
		push	esi
		call	_BIO_ctrl
		push	esi
		push	[esp+18h+arg_0]
		call	_lh_node_usage_stats_bio
		push	esi
		call	_BIO_free
		add	esp, 1Ch

$end$5_1:				; CODE XREF: _lh_node_usage_stats+13j
		pop	esi
		retn
_lh_node_usage_stats endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _lh_node_usage_stats_bio
_lh_node_usage_stats_bio proc near	; CODE XREF: _lh_node_usage_stats+28p

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 4
		call	__chkstk
		mov	eax, [esp+4+arg_0]
		push	ebx
		push	ebp
		push	esi
		mov	ebp, [eax+0Ch]
		xor	ebx, ebx
		xor	esi, esi
		mov	[esp+10h+var_4], ebx
		push	edi
		test	ebp, ebp
		jz	short loc_FF
		mov	edx, [eax]
		mov	edi, ebp

loc_D9:					; CODE XREF: _lh_node_usage_stats_bio+45j
		mov	eax, [edx]
		xor	ecx, ecx
		test	eax, eax
		jz	short loc_F3
		nop	dword ptr [eax]

loc_E4:					; CODE XREF: _lh_node_usage_stats_bio+36j
		mov	eax, [eax+4]
		inc	ecx
		test	eax, eax
		jnz	short loc_E4
		test	ecx, ecx
		jz	short loc_F3
		inc	ebx
		add	esi, ecx

loc_F3:					; CODE XREF: _lh_node_usage_stats_bio+2Bj
					; _lh_node_usage_stats_bio+3Aj
		add	edx, 4
		sub	edi, 1
		jnz	short loc_D9
		mov	[esp+14h+var_4], ebx

loc_FF:					; CODE XREF: _lh_node_usage_stats_bio+1Fj
		push	ebp
		mov	ebp, [esp+18h+arg_4]
		push	ebx
		push	offset ??_C@_0BK@KKGFHGKO@?$CFlu?5nodes?5used?5out?5of?5?$CFu?6?$AA@ ; "%lu nodes used out of %u\n"
		push	ebp
		call	_BIO_printf
		push	esi
		push	offset ??_C@_0L@FBHBMCDF@?$CFlu?5items?6?$AA@ ;	"%lu items\n"
		push	ebp
		call	_BIO_printf
		add	esp, 1Ch
		test	ebx, ebx
		jz	short loc_163
		xor	edx, edx
		mov	ebp, [esp+14h+arg_0]
		mov	eax, esi
		div	ebx
		mov	ebp, [ebp+0Ch]
		mov	ecx, edx
		mov	edi, eax
		xor	edx, edx
		mov	eax, esi
		div	ebp
		mov	ebx, eax
		mov	esi, edx
		imul	eax, ecx, 64h
		xor	edx, edx
		div	[esp+14h+var_4]
		xor	edx, edx
		push	eax
		imul	eax, esi, 64h
		push	edi
		div	ebp
		push	eax
		push	ebx
		push	offset ??_C@_0CD@DPFBFHHO@load?5?$CFd?4?$CF02d?5?5actual?5load?5?$CFd?4?$CF02@ ; "load %d.%02d	actual load %d.%02d\n"
		push	[esp+28h+arg_4]
		call	_BIO_printf
		add	esp, 18h

loc_163:				; CODE XREF: _lh_node_usage_stats_bio+6Dj
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
_lh_node_usage_stats_bio endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 16Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _lh_stats
_lh_stats	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	short $end$5
		push	[esp+4+arg_4]
		push	0
		push	6Ah ; 'j'
		push	esi
		call	_BIO_ctrl
		push	esi
		push	[esp+18h+arg_0]
		call	_lh_stats_bio
		push	esi
		call	_BIO_free
		add	esp, 1Ch

$end$5:					; CODE XREF: _lh_stats+13j
		pop	esi
		retn
_lh_stats	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1A4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _lh_stats_bio
_lh_stats_bio	proc near		; CODE XREF: _lh_stats+28p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		mov	esi, [esp+4+arg_4]
		push	edi
		mov	edi, [esp+8+arg_0]
		push	dword ptr [edi+24h]
		push	offset ??_C@_0BN@DFOHPDKA@num_items?5?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_items		  = %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+0Ch]
		push	offset ??_C@_0BM@HNDCOIGG@num_nodes?5?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFu?6?$AA@	; "num_nodes		 = %u\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+10h]
		push	offset ??_C@_0BM@CLBNMNEB@num_alloc_nodes?5?5?5?5?5?5?5?$DN?5?$CFu?6?$AA@ ; "num_alloc_nodes	   = %u\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+28h]
		push	offset ??_C@_0BN@EDNJHGHN@num_expands?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_expands		= %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+2Ch]
		push	offset ??_C@_0BN@OFIOJHBI@num_expand_reallocs?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_expand_reallocs	= %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+30h]
		push	offset ??_C@_0BN@KKCCPAEH@num_contracts?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_contracts	      =	%lu\n"
		push	esi
		call	_BIO_printf
		add	esp, 48h
		push	dword ptr [edi+34h]
		push	offset ??_C@_0BN@BCBGGKIC@num_contract_reallocs?5?$DN?5?$CFlu?6?$AA@ ; "num_contract_reallocs =	%lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+38h]
		push	offset ??_C@_0BN@IPNGDFPN@num_hash_calls?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_hash_calls	     = %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+3Ch]
		push	offset ??_C@_0BN@ILFKFKG@num_comp_calls?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_comp_calls	    = %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+40h]
		push	offset ??_C@_0BN@BAEIMNOO@num_insert?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@	; "num_insert		 = %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+44h]
		push	offset ??_C@_0BN@EBNONNCE@num_replace?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_replace		= %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+48h]
		push	offset ??_C@_0BN@OMIINJFL@num_delete?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@	; "num_delete		 = %lu\n"
		push	esi
		call	_BIO_printf
		add	esp, 48h
		push	dword ptr [edi+4Ch]
		push	offset ??_C@_0BN@FAOHCEDL@num_no_delete?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_no_delete	      =	%lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+50h]
		push	offset ??_C@_0BN@GMHFHCPB@num_retrieve?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ;	"num_retrieve	       = %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+54h]
		push	offset ??_C@_0BN@LKNEOCBP@num_retrieve_miss?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_retrieve_miss	  = %lu\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+58h]
		push	offset ??_C@_0BN@HGLAGEKG@num_hash_comps?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ ; "num_hash_comps	     = %lu\n"
		push	esi
		call	_BIO_printf
		add	esp, 30h
		pop	edi
		pop	esi
		retn
_lh_stats_bio	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 29Ch
; COMDAT (pick any)
		public ??_C@_0BN@DFOHPDKA@num_items?5?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@DFOHPDKA@num_items?5?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db 'num_items             = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2BCh
; COMDAT (pick any)
		public ??_C@_0BM@HNDCOIGG@num_nodes?5?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFu?6?$AA@
; `string'
??_C@_0BM@HNDCOIGG@num_nodes?5?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFu?6?$AA@ db 'num_nodes             = %u',0Ah,0
					; DATA XREF: _lh_stats_bio+1Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D8h
; COMDAT (pick any)
		public ??_C@_0BM@CLBNMNEB@num_alloc_nodes?5?5?5?5?5?5?5?$DN?5?$CFu?6?$AA@
; `string'
??_C@_0BM@CLBNMNEB@num_alloc_nodes?5?5?5?5?5?5?5?$DN?5?$CFu?6?$AA@ db 'num_alloc_nodes       = %u',0Ah,0
					; DATA XREF: _lh_stats_bio+29o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2F4h
; COMDAT (pick any)
		public ??_C@_0BN@EDNJHGHN@num_expands?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@EDNJHGHN@num_expands?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@	db 'num_expands           = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+37o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 314h
; COMDAT (pick any)
		public ??_C@_0BN@OFIOJHBI@num_expand_reallocs?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@OFIOJHBI@num_expand_reallocs?5?5?5?$DN?5?$CFlu?6?$AA@	db 'num_expand_reallocs   = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+45o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 334h
; COMDAT (pick any)
		public ??_C@_0BN@KKCCPAEH@num_contracts?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@KKCCPAEH@num_contracts?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db 'num_contracts         = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+53o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 354h
; COMDAT (pick any)
		public ??_C@_0BN@BCBGGKIC@num_contract_reallocs?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@BCBGGKIC@num_contract_reallocs?5?$DN?5?$CFlu?6?$AA@ db 'num_contract_reallocs = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+64o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 374h
; COMDAT (pick any)
		public ??_C@_0BN@IPNGDFPN@num_hash_calls?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@IPNGDFPN@num_hash_calls?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db	'num_hash_calls        = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+72o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 394h
; COMDAT (pick any)
		public ??_C@_0BN@ILFKFKG@num_comp_calls?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@ILFKFKG@num_comp_calls?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db 'num_comp_calls        = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+80o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B4h
; COMDAT (pick any)
		public ??_C@_0BN@BAEIMNOO@num_insert?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@BAEIMNOO@num_insert?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db 'num_insert            = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+8Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3D4h
; COMDAT (pick any)
		public ??_C@_0BN@EBNONNCE@num_replace?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@EBNONNCE@num_replace?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@	db 'num_replace           = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+9Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F4h
; COMDAT (pick any)
		public ??_C@_0BN@OMIINJFL@num_delete?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@OMIINJFL@num_delete?5?5?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db 'num_delete            = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+AAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 414h
; COMDAT (pick any)
		public ??_C@_0BN@FAOHCEDL@num_no_delete?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@FAOHCEDL@num_no_delete?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db 'num_no_delete         = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+BBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 434h
; COMDAT (pick any)
		public ??_C@_0BN@GMHFHCPB@num_retrieve?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@GMHFHCPB@num_retrieve?5?5?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db 'num_retrieve          = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+C9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 454h
; COMDAT (pick any)
		public ??_C@_0BN@LKNEOCBP@num_retrieve_miss?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@LKNEOCBP@num_retrieve_miss?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db 'num_retrieve_miss     = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+D7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 474h
; COMDAT (pick any)
		public ??_C@_0BN@HGLAGEKG@num_hash_comps?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@
; `string'
??_C@_0BN@HGLAGEKG@num_hash_comps?5?5?5?5?5?5?5?5?$DN?5?$CFlu?6?$AA@ db	'num_hash_comps        = %lu',0Ah,0
					; DATA XREF: _lh_stats_bio+E5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 494h
; COMDAT (pick any)
		public ??_C@_0BB@MMANDJCK@node?5?$CF6u?5?9?$DO?5?$CF3u?6?$AA@
; `string'
??_C@_0BB@MMANDJCK@node?5?$CF6u?5?9?$DO?5?$CF3u?6?$AA@ db 'node %6u -> %3u',0Ah,0
					; DATA XREF: _lh_node_stats_bio+2Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A8h
; COMDAT (pick any)
		public ??_C@_0BK@KKGFHGKO@?$CFlu?5nodes?5used?5out?5of?5?$CFu?6?$AA@
; `string'
??_C@_0BK@KKGFHGKO@?$CFlu?5nodes?5used?5out?5of?5?$CFu?6?$AA@ db '%lu nodes used out of %u',0Ah,0
					; DATA XREF: _lh_node_usage_stats_bio+51o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4C4h
; COMDAT (pick any)
		public ??_C@_0L@FBHBMCDF@?$CFlu?5items?6?$AA@
; `string'
??_C@_0L@FBHBMCDF@?$CFlu?5items?6?$AA@ db '%lu items',0Ah,0
					; DATA XREF: _lh_node_usage_stats_bio+5Do
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4D0h
; COMDAT (pick any)
		public ??_C@_0CD@DPFBFHHO@load?5?$CFd?4?$CF02d?5?5actual?5load?5?$CFd?4?$CF02@
; `string'
??_C@_0CD@DPFBFHHO@load?5?$CFd?4?$CF02d?5?5actual?5load?5?$CFd?4?$CF02@	db 'load %d.%02d  actual load %d.%02d',0Ah,0
					; DATA XREF: _lh_node_usage_stats_bio+9Eo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _BIO_s_file:near	; CODE XREF: _lh_node_stats+1p
					; _lh_node_usage_stats+1p ...
		extrn _BIO_new:near	; CODE XREF: _lh_node_stats+7p
					; _lh_node_usage_stats+7p ...
		extrn _BIO_free:near	; CODE XREF: _lh_node_stats+2Ep
					; _lh_node_usage_stats+2Ep ...
		extrn _BIO_ctrl:near	; CODE XREF: _lh_node_stats+1Ep
					; _lh_node_usage_stats+1Ep ...
		extrn _BIO_printf:near	; CODE XREF: _lh_node_stats_bio+30p
					; _lh_node_usage_stats_bio+57p	...
		extrn __chkstk:near	; CODE XREF: _lh_node_usage_stats_bio+5p


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	DAFCF597C2CB95343B3DA9DA8B616D0F
; Input	CRC32 :	FE13DD65

; File Name   :	C:\compspace\Diff\openssl\obj\dsa.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _fprintf+Fp
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _dsa_main
_dsa_main	proc near

ErrMsg		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 40h ; '@'
		call	__chkstk
		mov	eax, dword ptr ds:_bio_err
		push	ebx
		xor	ebx, ebx
		mov	[esp+44h+var_38], 2
		mov	[esp+44h+var_8], ebx
		mov	[esp+44h+var_18], ebx
		mov	[esp+44h+var_10], ebx
		mov	[esp+44h+var_3C], ebx
		mov	[esp+44h+var_34], ebx
		mov	[esp+44h+var_20], ebx
		mov	[esp+44h+var_24], ebx
		mov	[esp+44h+var_30], ebx
		mov	[esp+44h+var_2C], ebx
		mov	[esp+44h+var_14], ebx
		push	edi
		mov	edi, 1
		test	eax, eax
		jnz	short loc_AF
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_AF
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_AF:					; CODE XREF: _dsa_main+4Aj
					; _dsa_main+61j
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_A28
		mov	edi, [esp+48h+arg_4]
		xor	eax, eax
		push	ebp
		push	esi
		mov	esi, [esp+50h+arg_0]
		xor	ebp, ebp
		mov	[esp+50h+ErrMsg], eax
		dec	esi
		mov	[esp+50h+var_1C], eax
		mov	eax, [edi]
		add	edi, 4
		mov	[esp+50h+var_28], 3
		mov	[esp+50h+var_C], 3
		mov	[esp+50h+var_4], eax
		cmp	esi, 1
		jl	loc_542
		nop

loc_FC:					; CODE XREF: _dsa_main+50Ej
		mov	ebx, [edi]
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, ebx
		nop	dword ptr [eax+00000000h]

loc_10C:				; CODE XREF: _dsa_main+FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_12C
		test	dl, dl
		jz	short loc_128
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_12C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_10C

loc_128:				; CODE XREF: _dsa_main+E8j
		xor	eax, eax
		jmp	short loc_131
; ---------------------------------------------------------------------------

loc_12C:				; CODE XREF: _dsa_main+E4j
					; _dsa_main+F0j
		sbb	eax, eax
		or	eax, 1

loc_131:				; CODE XREF: _dsa_main+FEj
		test	eax, eax
		jnz	short loc_156
		dec	esi
		cmp	esi, 1
		jl	$bad$172
		push	dword ptr [edi+4]
		add	edi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+50h+var_28], eax
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_156:				; CODE XREF: _dsa_main+107j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, ebx

loc_15D:				; CODE XREF: _dsa_main+14Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_17D
		test	dl, dl
		jz	short loc_179
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_17D
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_15D

loc_179:				; CODE XREF: _dsa_main+139j
		xor	eax, eax
		jmp	short loc_182
; ---------------------------------------------------------------------------

loc_17D:				; CODE XREF: _dsa_main+135j
					; _dsa_main+141j
		sbb	eax, eax
		or	eax, 1

loc_182:				; CODE XREF: _dsa_main+14Fj
		test	eax, eax
		jnz	short loc_1A7
		dec	esi
		cmp	esi, 1
		jl	$bad$172
		push	dword ptr [edi+4]
		add	edi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+50h+var_C], eax
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_1A7:				; CODE XREF: _dsa_main+158j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, ebx

loc_1AE:				; CODE XREF: _dsa_main+19Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1CE
		test	dl, dl
		jz	short loc_1CA
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1CE
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1AE

loc_1CA:				; CODE XREF: _dsa_main+18Aj
		xor	eax, eax
		jmp	short loc_1D3
; ---------------------------------------------------------------------------

loc_1CE:				; CODE XREF: _dsa_main+186j
					; _dsa_main+192j
		sbb	eax, eax
		or	eax, 1

loc_1D3:				; CODE XREF: _dsa_main+1A0j
		test	eax, eax
		jnz	short loc_1F0
		dec	esi
		cmp	esi, 1
		jl	$bad$172
		mov	edx, [edi+4]
		add	edi, 4
		mov	[esp+50h+ErrMsg], edx
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_1F0:				; CODE XREF: _dsa_main+1A9j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, ebx
		nop	dword ptr [eax+eax+00h]

loc_1FC:				; CODE XREF: _dsa_main+1EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_21C
		test	dl, dl
		jz	short loc_218
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_21C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1FC

loc_218:				; CODE XREF: _dsa_main+1D8j
		xor	eax, eax
		jmp	short loc_221
; ---------------------------------------------------------------------------

loc_21C:				; CODE XREF: _dsa_main+1D4j
					; _dsa_main+1E0j
		sbb	eax, eax
		or	eax, 1

loc_221:				; CODE XREF: _dsa_main+1EEj
		test	eax, eax
		jnz	short loc_23E
		dec	esi
		cmp	esi, 1
		jl	$bad$172
		mov	edx, [edi+4]
		add	edi, 4
		mov	[esp+50h+var_1C], edx
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_23E:				; CODE XREF: _dsa_main+1F7j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, ebx
		nop	dword ptr [eax+00000000h]

loc_24C:				; CODE XREF: _dsa_main+23Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_26C
		test	dl, dl
		jz	short loc_268
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_26C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_24C

loc_268:				; CODE XREF: _dsa_main+228j
		xor	eax, eax
		jmp	short loc_271
; ---------------------------------------------------------------------------

loc_26C:				; CODE XREF: _dsa_main+224j
					; _dsa_main+230j
		sbb	eax, eax
		or	eax, 1

loc_271:				; CODE XREF: _dsa_main+23Ej
		test	eax, eax
		jnz	short loc_28E
		dec	esi
		cmp	esi, 1
		jl	$bad$172
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+50h+var_20], eax
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_28E:				; CODE XREF: _dsa_main+247j
		mov	ecx, offset ??_C@_08KCDBEMAI@?9passout?$AA@ ; "-passout"
		mov	eax, ebx
		nop	dword ptr [eax+00000000h]

loc_29C:				; CODE XREF: _dsa_main+28Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2BC
		test	dl, dl
		jz	short loc_2B8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2BC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_29C

loc_2B8:				; CODE XREF: _dsa_main+278j
		xor	eax, eax
		jmp	short loc_2C1
; ---------------------------------------------------------------------------

loc_2BC:				; CODE XREF: _dsa_main+274j
					; _dsa_main+280j
		sbb	eax, eax
		or	eax, 1

loc_2C1:				; CODE XREF: _dsa_main+28Ej
		test	eax, eax
		jnz	short loc_2DE
		dec	esi
		cmp	esi, 1
		jl	$bad$172
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+50h+var_24], eax
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_2DE:				; CODE XREF: _dsa_main+297j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, ebx
		nop	dword ptr [eax+00000000h]

loc_2EC:				; CODE XREF: _dsa_main+2DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_30C
		test	dl, dl
		jz	short loc_308
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_30C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2EC

loc_308:				; CODE XREF: _dsa_main+2C8j
		xor	eax, eax
		jmp	short loc_311
; ---------------------------------------------------------------------------

loc_30C:				; CODE XREF: _dsa_main+2C4j
					; _dsa_main+2D0j
		sbb	eax, eax
		or	eax, 1

loc_311:				; CODE XREF: _dsa_main+2DEj
		test	eax, eax
		jnz	short loc_32A
		dec	esi
		cmp	esi, 1
		jl	$bad$172
		mov	ebp, [edi+4]
		add	edi, 4
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_32A:				; CODE XREF: _dsa_main+2E7j
		mov	ecx, offset ??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@ ; "-pvk-strong"
		mov	eax, ebx

loc_331:				; CODE XREF: _dsa_main+31Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_351
		test	dl, dl
		jz	short loc_34D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_351
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_331

loc_34D:				; CODE XREF: _dsa_main+30Dj
		xor	eax, eax
		jmp	short loc_356
; ---------------------------------------------------------------------------

loc_351:				; CODE XREF: _dsa_main+309j
					; _dsa_main+315j
		sbb	eax, eax
		or	eax, 1

loc_356:				; CODE XREF: _dsa_main+323j
		test	eax, eax
		jnz	short loc_367
		mov	[esp+50h+var_38], 2
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_367:				; CODE XREF: _dsa_main+32Cj
		mov	ecx, offset ??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@ ;	"-pvk-weak"
		mov	eax, ebx

loc_36E:				; CODE XREF: _dsa_main+35Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_38E
		test	dl, dl
		jz	short loc_38A
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_38E
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_36E

loc_38A:				; CODE XREF: _dsa_main+34Aj
		xor	eax, eax
		jmp	short loc_393
; ---------------------------------------------------------------------------

loc_38E:				; CODE XREF: _dsa_main+346j
					; _dsa_main+352j
		sbb	eax, eax
		or	eax, 1

loc_393:				; CODE XREF: _dsa_main+360j
		test	eax, eax
		jnz	short loc_3A4
		mov	[esp+50h+var_38], 1
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_3A4:				; CODE XREF: _dsa_main+369j
		mov	ecx, offset ??_C@_09BBENBNGN@?9pvk?9none?$AA@ ;	"-pvk-none"
		mov	eax, ebx
		nop

loc_3AC:				; CODE XREF: _dsa_main+39Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3CC
		test	dl, dl
		jz	short loc_3C8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3CC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3AC

loc_3C8:				; CODE XREF: _dsa_main+388j
		xor	eax, eax
		jmp	short loc_3D1
; ---------------------------------------------------------------------------

loc_3CC:				; CODE XREF: _dsa_main+384j
					; _dsa_main+390j
		sbb	eax, eax
		or	eax, 1

loc_3D1:				; CODE XREF: _dsa_main+39Ej
		test	eax, eax
		jnz	short loc_3DE
		mov	[esp+50h+var_38], eax
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_3DE:				; CODE XREF: _dsa_main+3A7j
		mov	ecx, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"
		mov	eax, ebx
		nop	dword ptr [eax+00000000h]

loc_3EC:				; CODE XREF: _dsa_main+3DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_40C
		test	dl, dl
		jz	short loc_408
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_40C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3EC

loc_408:				; CODE XREF: _dsa_main+3C8j
		xor	eax, eax
		jmp	short loc_411
; ---------------------------------------------------------------------------

loc_40C:				; CODE XREF: _dsa_main+3C4j
					; _dsa_main+3D0j
		sbb	eax, eax
		or	eax, 1

loc_411:				; CODE XREF: _dsa_main+3DEj
		test	eax, eax
		jnz	short loc_422
		mov	[esp+50h+var_10], 1
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_422:				; CODE XREF: _dsa_main+3E7j
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, ebx
		nop	dword ptr [eax]

loc_42C:				; CODE XREF: _dsa_main+41Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_44C
		test	dl, dl
		jz	short loc_448
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_44C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_42C

loc_448:				; CODE XREF: _dsa_main+408j
		xor	eax, eax
		jmp	short loc_451
; ---------------------------------------------------------------------------

loc_44C:				; CODE XREF: _dsa_main+404j
					; _dsa_main+410j
		sbb	eax, eax
		or	eax, 1

loc_451:				; CODE XREF: _dsa_main+41Ej
		test	eax, eax
		jnz	short loc_462
		mov	[esp+50h+var_18], 1
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_462:				; CODE XREF: _dsa_main+427j
		mov	ecx, offset ??_C@_08NJNHONAF@?9modulus?$AA@ ; "-modulus"
		mov	eax, ebx
		nop	dword ptr [eax]

loc_46C:				; CODE XREF: _dsa_main+45Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_48C
		test	dl, dl
		jz	short loc_488
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_48C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_46C

loc_488:				; CODE XREF: _dsa_main+448j
		xor	eax, eax
		jmp	short loc_491
; ---------------------------------------------------------------------------

loc_48C:				; CODE XREF: _dsa_main+444j
					; _dsa_main+450j
		sbb	eax, eax
		or	eax, 1

loc_491:				; CODE XREF: _dsa_main+45Ej
		test	eax, eax
		jnz	short loc_4A2
		mov	[esp+50h+var_14], 1
		jmp	loc_533
; ---------------------------------------------------------------------------

loc_4A2:				; CODE XREF: _dsa_main+467j
		mov	ecx, offset ??_C@_06NLLOJDKN@?9pubin?$AA@ ; "-pubin"
		mov	eax, ebx
		nop	dword ptr [eax]

loc_4AC:				; CODE XREF: _dsa_main+49Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4CC
		test	dl, dl
		jz	short loc_4C8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4CC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4AC

loc_4C8:				; CODE XREF: _dsa_main+488j
		xor	eax, eax
		jmp	short loc_4D1
; ---------------------------------------------------------------------------

loc_4CC:				; CODE XREF: _dsa_main+484j
					; _dsa_main+490j
		sbb	eax, eax
		or	eax, 1

loc_4D1:				; CODE XREF: _dsa_main+49Ej
		test	eax, eax
		jnz	short loc_4DF
		mov	[esp+50h+var_3C], 1
		jmp	short loc_533
; ---------------------------------------------------------------------------

loc_4DF:				; CODE XREF: _dsa_main+4A7j
		mov	ecx, offset ??_C@_07NGPHMOHJ@?9pubout?$AA@ ; "-pubout"
		mov	eax, ebx
		nop	word ptr [eax+eax+00h]

loc_4EC:				; CODE XREF: _dsa_main+4DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_50C
		test	dl, dl
		jz	short loc_508
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_50C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4EC

loc_508:				; CODE XREF: _dsa_main+4C8j
		xor	eax, eax
		jmp	short loc_511
; ---------------------------------------------------------------------------

loc_50C:				; CODE XREF: _dsa_main+4C4j
					; _dsa_main+4D0j
		sbb	eax, eax
		or	eax, 1

loc_511:				; CODE XREF: _dsa_main+4DEj
		test	eax, eax
		jnz	short loc_51F
		mov	[esp+50h+var_34], 1
		jmp	short loc_533
; ---------------------------------------------------------------------------

loc_51F:				; CODE XREF: _dsa_main+4E7j
		lea	eax, [ebx+1]
		push	eax
		call	_EVP_get_cipherbyname
		add	esp, 4
		mov	[esp+50h+var_8], eax
		test	eax, eax
		jz	short loc_59C

loc_533:				; CODE XREF: _dsa_main+125j
					; _dsa_main+176j ...
		dec	esi
		add	edi, 4
		cmp	esi, 1
		jge	loc_FC
		xor	ebx, ebx

loc_542:				; CODE XREF: _dsa_main+C9j
		call	_ERR_load_crypto_strings
		push	0
		push	ebp
		push	dword ptr ds:_bio_err
		call	_setup_engine
		mov	edi, eax
		lea	eax, [esp+5Ch+var_2C]
		push	eax
		lea	eax, [esp+60h+var_30]
		push	eax
		push	[esp+64h+var_24]
		push	[esp+68h+var_20]
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 20h
		test	eax, eax
		jnz	loc_708
		push	offset ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; "Error getting passwords\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	edi, 1
		jmp	loc_A26
; ---------------------------------------------------------------------------

loc_59C:				; CODE XREF: _dsa_main+505j
		push	dword ptr [edi]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$bad$172:				; CODE XREF: _dsa_main+10Dj
					; _dsa_main+15Ej ...
		push	[esp+50h+var_4]
		push	offset ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; "%s [options] <infile >outfile\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@	; " -inform arg	    input format - DER or "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@ ;	" -outform arg	  output format	- DER or"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; " -in arg	     input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ ;	" -passin arg	  input	file pass phrase"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ ; " -out arg	      output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ ; " -passout arg	 output	file pass phras"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ ; " -engine e	      use engine e, possibly"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "	-des		encrypt	PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; " -des3	       encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; " -idea	       encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; "	-aes128, -aes192, -aes256\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "		   encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ ; " -camellia128, -camellia192, -camellia2"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "		   encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; " -seed	       encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@ ; "	-text		print the key in text\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ ; " -noout	       don't print key out\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CN@JBGFOMDF@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5DSA?5p@ ; " -modulus	     print the DSA public v"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 20h
		mov	edi, 1
		jmp	loc_A26
; ---------------------------------------------------------------------------

loc_708:				; CODE XREF: _dsa_main+54Dj
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	ebp, eax
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 8
		mov	esi, eax
		test	ebp, ebp
		jz	loc_9EC
		test	esi, esi
		jz	loc_9EC
		mov	eax, [esp+50h+ErrMsg]
		test	eax, eax
		jnz	short loc_78E
		push	eax
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	0
		push	6Ah ; 'j'
		push	ebp
		call	_BIO_ctrl
		add	esp, 14h

loc_752:				; CODE XREF: _dsa_main+772j
		push	offset ??_C@_0O@NEOMHJHN@read?5DSA?5key?6?$AA@ ; "read DSA key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	eax, [esp+58h+ErrMsg]
		add	esp, 8
		cmp	[esp+50h+var_3C], 0
		jz	short loc_7B0
		push	offset ??_C@_0L@KEAMIOLD@Public?5Key?$AA@ ; "Public Key"
		push	edi
		push	[esp+58h+var_30]
		push	1
		push	[esp+60h+var_28]
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_pubkey
		jmp	short loc_7CC
; ---------------------------------------------------------------------------

loc_78E:				; CODE XREF: _dsa_main+70Fj
		push	eax
		push	3
		push	6Ch ; 'l'
		push	ebp
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_752
		mov	eax, [esp+50h+ErrMsg]
		push	eax		; ErrMsg
		call	dword ptr ds:__imp__perror
		jmp	loc_9F7
; ---------------------------------------------------------------------------

loc_7B0:				; CODE XREF: _dsa_main+742j
		push	offset ??_C@_0M@NBDOOMPD@Private?5Key?$AA@ ; "Private Key"
		push	edi
		push	[esp+58h+var_30]
		push	1
		push	[esp+60h+var_28]
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_key

loc_7CC:				; CODE XREF: _dsa_main+760j
		mov	edi, eax
		add	esp, 1Ch
		test	edi, edi
		jz	loc_9E5
		push	edi
		call	_EVP_PKEY_get1_DSA
		mov	ebx, eax
		push	edi
		mov	[esp+58h+var_20], ebx
		call	_EVP_PKEY_free
		add	esp, 8
		test	ebx, ebx
		jz	loc_9E5
		mov	edi, [esp+50h+var_1C]
		test	edi, edi
		jnz	short loc_844
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	edi
		push	6Ah ; 'j'
		push	esi
		call	_BIO_ctrl
		add	esp, 14h

loc_813:				; CODE XREF: _dsa_main+828j
		cmp	[esp+50h+var_18], 0
		jz	short loc_862
		push	0
		push	ebx
		push	esi
		call	_DSA_print
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_862
		push	edi		; ErrMsg
		call	dword ptr ds:__imp__perror
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 8
		jmp	loc_9FA
; ---------------------------------------------------------------------------

loc_844:				; CODE XREF: _dsa_main+7D0j
		push	edi
		push	5
		push	6Ch ; 'l'
		push	esi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_813
		push	edi		; ErrMsg
		call	dword ptr ds:__imp__perror
		jmp	loc_9F7
; ---------------------------------------------------------------------------

loc_862:				; CODE XREF: _dsa_main+7ECj
					; _dsa_main+7FCj
		cmp	[esp+50h+var_14], 0
		jz	short loc_8A2
		mov	edi, dword ptr ds:__imp____acrt_iob_func
		push	offset ??_C@_0M@DICEKGAG@Public?5Key?$DN?$AA@ ;	"Public	Key="
		push	1
		call	edi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	dword ptr [ebx+18h]
		push	esi
		call	_BN_print
		add	esp, 10h
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; "\n"
		push	1
		call	edi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8

loc_8A2:				; CODE XREF: _dsa_main+83Bj
		cmp	[esp+50h+var_10], 0
		jnz	loc_9FA
		push	offset ??_C@_0BB@GNBKIMPE@writing?5DSA?5key?6?$AA@ ; "writing DSA key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+58h+var_C]
		add	esp, 8
		cmp	edi, 1
		jnz	short loc_8F9
		cmp	[esp+50h+var_3C], 0
		jnz	short loc_8E8
		cmp	[esp+50h+var_34], 0
		jnz	short loc_8E8
		push	ebx
		push	esi
		call	_i2d_DSAPrivateKey_bio
		add	esp, 8
		mov	edi, eax
		jmp	loc_9BD
; ---------------------------------------------------------------------------

loc_8E8:				; CODE XREF: _dsa_main+8A2j
					; _dsa_main+8A9j
		push	ebx
		push	esi
		call	_i2d_DSA_PUBKEY_bio
		add	esp, 8
		mov	edi, eax
		jmp	loc_9BD
; ---------------------------------------------------------------------------

loc_8F9:				; CODE XREF: _dsa_main+89Bj
		cmp	edi, 3
		jnz	short loc_93C
		cmp	[esp+50h+var_3C], 0
		jnz	short loc_92B
		cmp	[esp+50h+var_34], 0
		jnz	short loc_92B
		push	[esp+50h+var_2C]
		push	0
		push	0
		push	0
		push	[esp+60h+var_8]
		push	ebx
		push	esi
		call	_PEM_write_bio_DSAPrivateKey
		add	esp, 1Ch
		mov	edi, eax
		jmp	loc_9BD
; ---------------------------------------------------------------------------

loc_92B:				; CODE XREF: _dsa_main+8D7j
					; _dsa_main+8DEj
		push	ebx
		push	esi
		call	_PEM_write_bio_DSA_PUBKEY
		add	esp, 8
		mov	edi, eax
		jmp	loc_9BD
; ---------------------------------------------------------------------------

loc_93C:				; CODE XREF: _dsa_main+8D0j
		cmp	edi, 0Bh
		jz	short loc_95E
		cmp	edi, 0Ch
		jz	short loc_95E
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_9FA
; ---------------------------------------------------------------------------

loc_95E:				; CODE XREF: _dsa_main+913j
					; _dsa_main+918j
		call	_EVP_PKEY_new
		push	[esp+50h+var_20]
		mov	ebx, eax
		push	ebx
		call	_EVP_PKEY_set1_DSA
		add	esp, 8
		cmp	edi, 0Ch
		jnz	short loc_98D
		push	[esp+50h+var_2C]
		push	0
		push	[esp+58h+var_38]
		push	ebx
		push	esi
		call	_i2b_PVK_bio
		add	esp, 14h
		jmp	short loc_9AE
; ---------------------------------------------------------------------------

loc_98D:				; CODE XREF: _dsa_main+949j
		cmp	[esp+50h+var_3C], 0
		jnz	short loc_9A4
		cmp	[esp+50h+var_34], 0
		jnz	short loc_9A4
		push	ebx
		push	esi
		call	_i2b_PrivateKey_bio
		jmp	short loc_9AB
; ---------------------------------------------------------------------------

loc_9A4:				; CODE XREF: _dsa_main+966j
					; _dsa_main+96Dj
		push	ebx
		push	esi
		call	_i2b_PublicKey_bio

loc_9AB:				; CODE XREF: _dsa_main+976j
		add	esp, 8

loc_9AE:				; CODE XREF: _dsa_main+95Fj
		push	ebx
		mov	edi, eax
		call	_EVP_PKEY_free
		mov	ebx, [esp+54h+var_20]
		add	esp, 4

loc_9BD:				; CODE XREF: _dsa_main+8B7j
					; _dsa_main+8C8j ...
		test	edi, edi
		jg	short loc_9E1
		push	offset ??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@ ; "unable to write private key\n"

loc_9C6:				; CODE XREF: _dsa_main+9BEj
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	short loc_9FA
; ---------------------------------------------------------------------------

loc_9E1:				; CODE XREF: _dsa_main+993j
		xor	edi, edi
		jmp	short $end$173
; ---------------------------------------------------------------------------

loc_9E5:				; CODE XREF: _dsa_main+7A7j
					; _dsa_main+7C4j
		push	offset ??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@ ; "unable to load Key\n"
		jmp	short loc_9C6
; ---------------------------------------------------------------------------

loc_9EC:				; CODE XREF: _dsa_main+6FBj
					; _dsa_main+703j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors

loc_9F7:				; CODE XREF: _dsa_main+77Fj
					; _dsa_main+831j
		add	esp, 4

loc_9FA:				; CODE XREF: _dsa_main+813j
					; _dsa_main+87Bj ...
		mov	edi, 1

$end$173:				; CODE XREF: _dsa_main+9B7j
		test	ebp, ebp
		jz	short loc_A0C
		push	ebp
		call	_BIO_free
		add	esp, 4

loc_A0C:				; CODE XREF: _dsa_main+9D5j
		test	esi, esi
		jz	short loc_A19
		push	esi
		call	_BIO_free_all
		add	esp, 4

loc_A19:				; CODE XREF: _dsa_main+9E2j
		test	ebx, ebx
		jz	short loc_A26
		push	ebx
		call	_DSA_free
		add	esp, 4

loc_A26:				; CODE XREF: _dsa_main+56Bj
					; _dsa_main+6D7j ...
		pop	esi
		pop	ebp

loc_A28:				; CODE XREF: _dsa_main+90j
		mov	eax, [esp+48h+var_30]
		test	eax, eax
		jz	short loc_A39
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_A39:				; CODE XREF: _dsa_main+A02j
		mov	ecx, [esp+48h+var_2C]
		test	ecx, ecx
		jz	short loc_A4A
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_A4A:				; CODE XREF: _dsa_main+A13j
		mov	eax, edi
		pop	edi
		pop	ebx
		add	esp, 40h
		retn
_dsa_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A54h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int fprintf(FILE *File, const	char *Format, ...)
		public _fprintf
_fprintf	proc near		; CODE XREF: _dsa_main+850p
					; _dsa_main+86Ep

File		= dword	ptr  4
Format		= dword	ptr  8
arg_8		= byte ptr  0Ch

		lea	eax, [esp+arg_8]
		push	eax
		push	0
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
_fprintf	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A78h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _dsa_main+D2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A80h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _dsa_main:loc_156o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8Ch
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _dsa_main:loc_1A7o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A90h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _dsa_main:loc_1F0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A98h
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _dsa_main:loc_23Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AA0h
; COMDAT (pick any)
		public ??_C@_08KCDBEMAI@?9passout?$AA@
; `string'
??_C@_08KCDBEMAI@?9passout?$AA@	db '-passout',0 ; DATA XREF: _dsa_main:loc_28Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AACh
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _dsa_main:loc_2DEo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AB4h
; COMDAT (pick any)
		public ??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@
; `string'
??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@ db	'-pvk-strong',0 ; DATA XREF: _dsa_main:loc_32Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AC0h
; COMDAT (pick any)
		public ??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@
; `string'
??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@ db '-pvk-weak',0 ; DATA XREF: _dsa_main:loc_367o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACCh
; COMDAT (pick any)
		public ??_C@_09BBENBNGN@?9pvk?9none?$AA@
; `string'
??_C@_09BBENBNGN@?9pvk?9none?$AA@ db '-pvk-none',0 ; DATA XREF: _dsa_main:loc_3A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AD8h
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _dsa_main:loc_3DEo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AE0h
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _dsa_main:loc_422o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AE8h
; COMDAT (pick any)
		public ??_C@_08NJNHONAF@?9modulus?$AA@
; `string'
??_C@_08NJNHONAF@?9modulus?$AA@	db '-modulus',0 ; DATA XREF: _dsa_main:loc_462o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AF4h
; COMDAT (pick any)
		public ??_C@_06NLLOJDKN@?9pubin?$AA@
; `string'
??_C@_06NLLOJDKN@?9pubin?$AA@ db '-pubin',0 ; DATA XREF: _dsa_main:loc_4A2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AFCh
; COMDAT (pick any)
		public ??_C@_07NGPHMOHJ@?9pubout?$AA@
; `string'
??_C@_07NGPHMOHJ@?9pubout?$AA@ db '-pubout',0 ; DATA XREF: _dsa_main:loc_4DFo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B04h
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _dsa_main+572o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B18h
; COMDAT (pick any)
		public ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
; `string'
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ db '%s [options] <infile >outfile',0Ah,0
					; DATA XREF: _dsa_main+589o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B38h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _dsa_main+599o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4Ch
; COMDAT (pick any)
		public ??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@
; `string'
??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@ db ' -inform arg     input format - DER or PEM',0Ah,0
					; DATA XREF: _dsa_main+5A9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B78h
; COMDAT (pick any)
		public ??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@
; `string'
??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@ db ' -outform arg    output format - DER or PEM',0Ah,0
					; DATA XREF: _dsa_main+5B9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA8h
; COMDAT (pick any)
		public ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ db ' -in arg         input file',0Ah,0
					; DATA XREF: _dsa_main+5C9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BC8h
; COMDAT (pick any)
		public ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
; `string'
??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ db ' -passin arg     input file pass phrase source',0Ah,0
					; DATA XREF: _dsa_main+5D9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BF8h
; COMDAT (pick any)
		public ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ db ' -out arg        output file',0Ah,0
					; DATA XREF: _dsa_main+5E9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C18h
; COMDAT (pick any)
		public ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
; `string'
??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ db ' -passout arg    output file pass phrase source',0Ah,0
					; DATA XREF: _dsa_main+5F9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4Ch
; COMDAT (pick any)
		public ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
; `string'
??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ db ' -engine e       use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _dsa_main+60Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C88h
; COMDAT (pick any)
		public ??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ db	' -des            encrypt PEM output with cbc des',0Ah,0
					; DATA XREF: _dsa_main+61Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0CBCh
; COMDAT (pick any)
		public ??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ db ' -des3           encrypt PEM output with ede cbc des using 168 bi'
					; DATA XREF: _dsa_main+62Co
		db 't key',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D04h
; COMDAT (pick any)
		public ??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ db ' -idea           encrypt PEM output with cbc idea',0Ah,0
					; DATA XREF: _dsa_main+63Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D38h
; COMDAT (pick any)
		public ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
; `string'
??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ db	' -aes128, -aes192, -aes256',0Ah,0
					; DATA XREF: _dsa_main+64Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D54h
; COMDAT (pick any)
		public ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@	db '                 encrypt PEM output with cbc aes',0Ah,0
					; DATA XREF: _dsa_main+65Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D88h
; COMDAT (pick any)
		public ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
; `string'
??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ db ' -camellia128, -camellia192, -camellia256',0Ah,0
					; DATA XREF: _dsa_main+66Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DB4h
; COMDAT (pick any)
		public ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@	db '                 encrypt PEM output with cbc camellia',0Ah,0
					; DATA XREF: _dsa_main+67Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DECh
; COMDAT (pick any)
		public ??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ db ' -seed           encrypt PEM output with cbc seed',0Ah,0
					; DATA XREF: _dsa_main+68Fo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E20h
; COMDAT (pick any)
		public ??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@
; `string'
??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@ db	' -text           print the key in text',0Ah,0
					; DATA XREF: _dsa_main+69Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E48h
; COMDAT (pick any)
		public ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@
; `string'
??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ db ' -noout          don',27h,'t print key out',0Ah,0
					; DATA XREF: _dsa_main+6AFo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E70h
; COMDAT (pick any)
		public ??_C@_0CN@JBGFOMDF@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5DSA?5p@
; `string'
??_C@_0CN@JBGFOMDF@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5DSA?5p@ db ' -modulus        print the DSA public value',0Ah,0
					; DATA XREF: _dsa_main+6BFo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EA0h
; COMDAT (pick any)
		public ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
; `string'
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ db 'Error getting passwords',0Ah,0
					; DATA XREF: _dsa_main+553o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EBCh
; COMDAT (pick any)
		public ??_C@_0O@NEOMHJHN@read?5DSA?5key?6?$AA@
; `string'
??_C@_0O@NEOMHJHN@read?5DSA?5key?6?$AA@	db 'read DSA key',0Ah,0
					; DATA XREF: _dsa_main:loc_752o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECCh
; COMDAT (pick any)
		public ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
; `string'
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ db 'Public Key',0 ; DATA XREF: _dsa_main+744o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ED8h
; COMDAT (pick any)
		public ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
; `string'
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ db 'Private Key',0 ; DATA XREF: _dsa_main:loc_7B0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EE4h
; COMDAT (pick any)
		public ??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@
; `string'
??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@	db 'unable to load Key',0Ah,0
					; DATA XREF: _dsa_main:loc_9E5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EF8h
; COMDAT (pick any)
		public ??_C@_0M@DICEKGAG@Public?5Key?$DN?$AA@
; char `string'[]
??_C@_0M@DICEKGAG@Public?5Key?$DN?$AA@ db 'Public Key=',0 ; DATA XREF: _dsa_main+843o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F04h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; char `string'[]
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah,0	; DATA XREF: _dsa_main+861o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F08h
; COMDAT (pick any)
		public ??_C@_0BB@GNBKIMPE@writing?5DSA?5key?6?$AA@
; `string'
??_C@_0BB@GNBKIMPE@writing?5DSA?5key?6?$AA@ db 'writing DSA key',0Ah,0
					; DATA XREF: _dsa_main+881o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F1Ch
; COMDAT (pick any)
		public ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
; `string'
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ db 'bad output format specified for outfile',0Ah,0
					; DATA XREF: _dsa_main+91Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F48h
; COMDAT (pick any)
		public ??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@
; `string'
??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@ db 'unable to write private key',0Ah,0
					; DATA XREF: _dsa_main+995o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _dsa_main+65p
					; _dsa_main+712p ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _dsa_main+779p
					; _dsa_main+7FFp ...
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _fprintf+19p
					; DATA XREF: ...
		extrn _CRYPTO_free:near	; CODE XREF: _dsa_main+A05p
					; _dsa_main+A16p
		extrn _BIO_s_file:near	; CODE XREF: _dsa_main+4Cp
					; _dsa_main:loc_708p ...
		extrn _BIO_new:near	; CODE XREF: _dsa_main+52p
					; _dsa_main+6E2p ...
		extrn _BIO_free:near	; CODE XREF: _dsa_main+9D8p
		extrn _BIO_ctrl:near	; CODE XREF: _dsa_main+76p
					; _dsa_main+71Ep ...
		extrn _BIO_free_all:near ; CODE	XREF: _dsa_main+9E5p
		extrn _BIO_printf:near	; CODE XREF: _dsa_main+55Ep
					; _dsa_main+57Dp ...
		extrn _BN_print:near	; CODE XREF: _dsa_main+859p
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _dsa_main+4F7p
		extrn _EVP_PKEY_set1_DSA:near ;	CODE XREF: _dsa_main+93Ep
		extrn _EVP_PKEY_get1_DSA:near ;	CODE XREF: _dsa_main+7AEp
		extrn _EVP_PKEY_new:near ; CODE	XREF: _dsa_main:loc_95Ep
		extrn _EVP_PKEY_free:near ; CODE XREF: _dsa_main+7BAp
					; _dsa_main+985p
		extrn _DSA_free:near	; CODE XREF: _dsa_main+9F2p
		extrn _DSA_print:near	; CODE XREF: _dsa_main+7F2p
		extrn _i2d_DSA_PUBKEY_bio:near ; CODE XREF: _dsa_main+8BEp
		extrn _i2d_DSAPrivateKey_bio:near ; CODE XREF: _dsa_main+8ADp
		extrn _ERR_print_errors:near ; CODE XREF: _dsa_main+80Bp
					; _dsa_main+9ABp ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _dsa_main:loc_542p
		extrn _str2fmt:near	; CODE XREF: _dsa_main+119p
					; _dsa_main+16Ap
		extrn _app_passwd:near	; CODE XREF: _dsa_main+543p
		extrn _load_key:near	; CODE XREF: _dsa_main+79Bp
		extrn _load_pubkey:near	; CODE XREF: _dsa_main+75Bp
		extrn _setup_engine:near ; CODE	XREF: _dsa_main+524p
		extrn _load_config:near	; CODE XREF: _dsa_main+86p
		extrn _PEM_write_bio_DSAPrivateKey:near	; CODE XREF: _dsa_main+8F0p
		extrn _PEM_write_bio_DSA_PUBKEY:near ; CODE XREF: _dsa_main+901p
		extrn _i2b_PrivateKey_bio:near ; CODE XREF: _dsa_main+971p
		extrn _i2b_PublicKey_bio:near ;	CODE XREF: _dsa_main+97Ap
		extrn _i2b_PVK_bio:near	; CODE XREF: _dsa_main+957p
		extrn __chkstk:near	; CODE XREF: _dsa_main+5p
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso
		extrn _bio_err:near	; DATA XREF: _dsa_main+Ar
					; _dsa_main+5Aw ...


		end

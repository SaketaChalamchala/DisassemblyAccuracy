;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	A156009802283740D61EC89A6E6364A0
; Input	CRC32 :	91EA3B4C

; File Name   :	C:\compspace\Diff\openssl\obj\e_null.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_null_init_key	proc near		; DATA XREF: .rdata:0000003Co
		mov	eax, 1
		retn
_null_init_key	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl null_cipher(int, void *Dst, void *Src, size_t Size)
_null_cipher	proc near		; DATA XREF: .rdata:00000040o

Dst		= dword	ptr  8
Src		= dword	ptr  0Ch
Size		= dword	ptr  10h

		mov	eax, [esp+Src]
		mov	ecx, [esp+Dst]
		cmp	eax, ecx
		jz	short loc_22
		push	[esp+Size]	; Size
		push	eax		; Src
		push	ecx		; Dst
		call	_memcpy
		add	esp, 0Ch

loc_22:					; CODE XREF: _null_cipher+Aj
		mov	eax, 1
		retn
_null_cipher	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
_n_cipher	dd 0			; DATA XREF: _EVP_enc_nullo
		dd 1, 3	dup(0)
		dd offset _null_init_key
		dd offset _null_cipher
		dd 6 dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _EVP_enc_null
_EVP_enc_null	proc near
		mov	eax, offset _n_cipher
		retn
_EVP_enc_null	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _null_cipher+12p


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	C5A3267D744304859EED614372389435
; Input	CRC32 :	B0A7C920

; File Name   :	C:\compspace\Diff\openssl\obj\bio_cb.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _BIO_debug_callback
_BIO_debug_callback proc near

Str		= byte ptr -104h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_C		= dword	ptr  10h
arg_14		= dword	ptr  18h

		mov	eax, 104h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+104h+var_4], eax
		push	ebx
		mov	ebx, [esp+108h+arg_4]
		lea	eax, [esp+108h+Str]
		push	ebp
		push	esi
		mov	esi, [esp+110h+arg_0]
		test	bl, 80h
		push	edi
		mov	edi, [esp+114h+arg_14]
		mov	ebp, 1
		push	esi
		push	offset ??_C@_09OMIHPJF@BIO?$FL?$CFp?$FN?3?5?$AA@ ; "BIO[%p]: "
		push	100h
		push	eax
		cmovnz	ebp, edi
		call	_BIO_snprintf
		lea	edx, [esp+124h+Str]
		mov	ecx, 100h
		add	edx, eax
		sub	ecx, eax
		lea	eax, [ebx-1]
		add	esp, 10h
		cmp	eax, 85h ; '…'  ; switch 134 cases
		ja	$LN20		; jumptable 00000076 default case
		movzx	eax, ds:$LN24[eax]
		jmp	ds:$LN29[eax*4]	; switch jump
; ---------------------------------------------------------------------------

$LN5:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		mov	eax, [esi]	; jumptable 00000076 case 0
		push	dword ptr [eax+4]
		push	offset ??_C@_0L@FIDMMDNB@Free?5?9?5?$CFs?6?$AA@	; "Free	- %s\n"
		jmp	loc_199
; ---------------------------------------------------------------------------

$LN6:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		mov	edi, [esi]	; jumptable 00000076 case 1
		test	dword ptr [edi], 100h
		jz	short loc_B9
		mov	eax, [esi+1Ch]
		push	eax
		push	dword ptr [edi+4]
		push	[esp+11Ch+arg_C]
		push	eax
		push	offset ??_C@_0BJ@BPOIEJEJ@read?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?5fd?$DN?$CFd?6?$AA@ ; "read(%d,%lu) - %s	fd=%d\n"
		push	ecx
		push	edx
		call	_BIO_snprintf
		add	esp, 1Ch
		jmp	loc_1A3
; ---------------------------------------------------------------------------

loc_B9:					; CODE XREF: _BIO_debug_callback+94j
		push	dword ptr [edi+4]
		push	[esp+118h+arg_C]
		push	dword ptr [esi+1Ch]
		push	offset ??_C@_0BD@JCPOMD@read?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?6?$AA@ ; "read(%d,%lu) - %s\n"
		push	ecx
		push	edx
		call	_BIO_snprintf
		add	esp, 18h
		jmp	loc_1A3
; ---------------------------------------------------------------------------

$LN9:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		mov	edi, [esi]	; jumptable 00000076 case 2
		test	dword ptr [edi], 100h
		jz	short loc_107
		mov	eax, [esi+1Ch]
		push	eax
		push	dword ptr [edi+4]
		push	[esp+11Ch+arg_C]
		push	eax
		push	offset ??_C@_0BK@FGCLAFBC@write?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?5fd?$DN?$CFd?6?$AA@ ; "write(%d,%lu) - %s fd=%d\n"
		push	ecx
		push	edx
		call	_BIO_snprintf
		add	esp, 1Ch
		jmp	loc_1A3
; ---------------------------------------------------------------------------

loc_107:				; CODE XREF: _BIO_debug_callback+E2j
		push	dword ptr [edi+4]
		push	[esp+118h+arg_C]
		push	dword ptr [esi+1Ch]
		push	offset ??_C@_0BE@KKKHMMOA@write?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?6?$AA@ ; "write(%d,%lu)	- %s\n"
		push	ecx
		push	edx
		call	_BIO_snprintf
		add	esp, 18h
		jmp	short loc_1A3
; ---------------------------------------------------------------------------

$LN12:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		mov	eax, [esi]	; jumptable 00000076 case 3
		push	dword ptr [eax+4]
		push	offset ??_C@_0N@PEPJBEMO@puts?$CI?$CJ?5?9?5?$CFs?6?$AA@	; "puts() - %s\n"
		jmp	short loc_199
; ---------------------------------------------------------------------------

$LN13:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		mov	eax, [esi]	; jumptable 00000076 case 4
		push	dword ptr [eax+4]
		push	[esp+118h+arg_C]
		push	offset ??_C@_0BA@KCGCOCFB@gets?$CI?$CFlu?$CJ?5?9?5?$CFs?6?$AA@ ; "gets(%lu) - %s\n"
		push	ecx
		push	edx
		call	_BIO_snprintf
		add	esp, 14h
		jmp	short loc_1A3
; ---------------------------------------------------------------------------

$LN14:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		mov	eax, [esi]	; jumptable 00000076 case 5
		push	dword ptr [eax+4]
		push	[esp+118h+arg_C]
		push	offset ??_C@_0BA@OAHPNCCI@ctrl?$CI?$CFlu?$CJ?5?9?5?$CFs?6?$AA@ ; "ctrl(%lu) - %s\n"
		push	ecx
		push	edx
		call	_BIO_snprintf
		add	esp, 14h
		jmp	short loc_1A3
; ---------------------------------------------------------------------------

$LN15:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		push	edi		; jumptable 00000076 case 129
		push	offset ??_C@_0BB@ELJOJEBI@read?5return?5?$CFld?6?$AA@ ;	"read return %ld\n"
		jmp	short loc_199
; ---------------------------------------------------------------------------

$LN16:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		push	edi		; jumptable 00000076 case 130
		push	offset ??_C@_0BC@IAOECHLO@write?5return?5?$CFld?6?$AA@ ; "write	return %ld\n"
		jmp	short loc_199
; ---------------------------------------------------------------------------

$LN17:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		push	edi		; jumptable 00000076 case 132
		push	offset ??_C@_0BB@NMPLFGIB@gets?5return?5?$CFld?6?$AA@ ;	"gets return %ld\n"
		jmp	short loc_199
; ---------------------------------------------------------------------------

$LN18:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		push	edi		; jumptable 00000076 case 131
		push	offset ??_C@_0BB@NBPINCJ@puts?5return?5?$CFld?6?$AA@ ; "puts return %ld\n"
		jmp	short loc_199
; ---------------------------------------------------------------------------

$LN19:					; CODE XREF: _BIO_debug_callback+76j
					; DATA XREF: .text$mn:$LN29o
		push	edi		; jumptable 00000076 case 133
		push	offset ??_C@_0BB@PFGAICCJ@ctrl?5return?5?$CFld?6?$AA@ ;	"ctrl return %ld\n"
		jmp	short loc_199
; ---------------------------------------------------------------------------

$LN20:					; CODE XREF: _BIO_debug_callback+69j
					; _BIO_debug_callback+76j
					; DATA XREF: ...
		push	ebx		; jumptable 00000076 default case
		push	offset ??_C@_0CC@IPLAOFGL@bio?5callback?5?9?5unknown?5type?5?$CI?$CFd?$CJ@ ; "bio callback - unknown type (%d)\n"

loc_199:				; CODE XREF: _BIO_debug_callback+87j
					; _BIO_debug_callback+12Fj ...
		push	ecx
		push	edx
		call	_BIO_snprintf
		add	esp, 10h

loc_1A3:				; CODE XREF: _BIO_debug_callback+B4j
					; _BIO_debug_callback+D5j ...
		mov	edx, [esi+8]
		test	edx, edx
		jz	short loc_1C8
		lea	ecx, [esp+114h+Str]
		lea	esi, [ecx+1]

loc_1B1:				; CODE XREF: _BIO_debug_callback+1B6j
		mov	al, [ecx]
		inc	ecx
		test	al, al
		jnz	short loc_1B1
		sub	ecx, esi
		lea	eax, [esp+114h+Str]
		push	ecx
		push	eax
		push	edx
		call	_BIO_write
		jmp	short loc_1DC
; ---------------------------------------------------------------------------

loc_1C8:				; CODE XREF: _BIO_debug_callback+1A8j
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax		; File
		lea	eax, [esp+11Ch+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__fputs

loc_1DC:				; CODE XREF: _BIO_debug_callback+1C6j
		mov	ecx, [esp+120h+var_4]
		add	esp, 0Ch
		mov	eax, ebp
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 104h
		retn
_BIO_debug_callback endp

; ---------------------------------------------------------------------------
		align 4
$LN29		dd offset $LN5,	offset $LN6, offset $LN9, offset $LN12
					; DATA XREF: _BIO_debug_callback+76r
		dd offset $LN13, offset	$LN14, offset $LN15, offset $LN16 ; jump table for switch statement
		dd offset $LN18, offset	$LN17, offset $LN19, offset $LN20
$LN24		db	0,     1,     2,     3 ; DATA XREF: _BIO_debug_callback+6Fr
		db	4,     5,   0Bh,   0Bh ; indirect table	for switch statement
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,   0Bh,   0Bh,   0Bh
		db    0Bh,     6,     7,     8
		db	9,   0Ah
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B4h
; COMDAT (pick any)
		public ??_C@_09OMIHPJF@BIO?$FL?$CFp?$FN?3?5?$AA@
; `string'
??_C@_09OMIHPJF@BIO?$FL?$CFp?$FN?3?5?$AA@ db 'BIO[%p]: ',0
					; DATA XREF: _BIO_debug_callback+3Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C0h
; COMDAT (pick any)
		public ??_C@_0L@FIDMMDNB@Free?5?9?5?$CFs?6?$AA@
; `string'
??_C@_0L@FIDMMDNB@Free?5?9?5?$CFs?6?$AA@ db 'Free - %s',0Ah,0
					; DATA XREF: _BIO_debug_callback+82o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2CCh
; COMDAT (pick any)
		public ??_C@_0BJ@BPOIEJEJ@read?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?5fd?$DN?$CFd?6?$AA@
; `string'
??_C@_0BJ@BPOIEJEJ@read?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?5fd?$DN?$CFd?6?$AA@ db 'read(%d,%lu) - %s fd=%d',0Ah,0
					; DATA XREF: _BIO_debug_callback+A5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2E8h
; COMDAT (pick any)
		public ??_C@_0BD@JCPOMD@read?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?6?$AA@
; `string'
??_C@_0BD@JCPOMD@read?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?6?$AA@ db	'read(%d,%lu) - %s',0Ah,0
					; DATA XREF: _BIO_debug_callback+C6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2FCh
; COMDAT (pick any)
		public ??_C@_0BK@FGCLAFBC@write?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?5fd?$DN?$CFd?6?$AA@
; `string'
??_C@_0BK@FGCLAFBC@write?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?5fd?$DN?$CFd?6?$AA@ db	'write(%d,%lu) - %s fd=%d',0Ah,0
					; DATA XREF: _BIO_debug_callback+F3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 318h
; COMDAT (pick any)
		public ??_C@_0BE@KKKHMMOA@write?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?6?$AA@
; `string'
??_C@_0BE@KKKHMMOA@write?$CI?$CFd?0?$CFlu?$CJ?5?9?5?$CFs?6?$AA@	db 'write(%d,%lu) - %s',0Ah,0
					; DATA XREF: _BIO_debug_callback+114o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 32Ch
; COMDAT (pick any)
		public ??_C@_0N@PEPJBEMO@puts?$CI?$CJ?5?9?5?$CFs?6?$AA@
; `string'
??_C@_0N@PEPJBEMO@puts?$CI?$CJ?5?9?5?$CFs?6?$AA@ db 'puts() - %s',0Ah,0
					; DATA XREF: _BIO_debug_callback+12Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 33Ch
; COMDAT (pick any)
		public ??_C@_0BA@KCGCOCFB@gets?$CI?$CFlu?$CJ?5?9?5?$CFs?6?$AA@
; `string'
??_C@_0BA@KCGCOCFB@gets?$CI?$CFlu?$CJ?5?9?5?$CFs?6?$AA@	db 'gets(%lu) - %s',0Ah,0
					; DATA XREF: _BIO_debug_callback+13Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34Ch
; COMDAT (pick any)
		public ??_C@_0BA@OAHPNCCI@ctrl?$CI?$CFlu?$CJ?5?9?5?$CFs?6?$AA@
; `string'
??_C@_0BA@OAHPNCCI@ctrl?$CI?$CFlu?$CJ?5?9?5?$CFs?6?$AA@	db 'ctrl(%lu) - %s',0Ah,0
					; DATA XREF: _BIO_debug_callback+15Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 35Ch
; COMDAT (pick any)
		public ??_C@_0BB@ELJOJEBI@read?5return?5?$CFld?6?$AA@
; `string'
??_C@_0BB@ELJOJEBI@read?5return?5?$CFld?6?$AA@ db 'read return %ld',0Ah,0
					; DATA XREF: _BIO_debug_callback+16Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 370h
; COMDAT (pick any)
		public ??_C@_0BC@IAOECHLO@write?5return?5?$CFld?6?$AA@
; `string'
??_C@_0BC@IAOECHLO@write?5return?5?$CFld?6?$AA@	db 'write return %ld',0Ah,0
					; DATA XREF: _BIO_debug_callback+174o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 384h
; COMDAT (pick any)
		public ??_C@_0BB@NMPLFGIB@gets?5return?5?$CFld?6?$AA@
; `string'
??_C@_0BB@NMPLFGIB@gets?5return?5?$CFld?6?$AA@ db 'gets return %ld',0Ah,0
					; DATA XREF: _BIO_debug_callback+17Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 398h
; COMDAT (pick any)
		public ??_C@_0BB@NBPINCJ@puts?5return?5?$CFld?6?$AA@
; `string'
??_C@_0BB@NBPINCJ@puts?5return?5?$CFld?6?$AA@ db 'puts return %ld',0Ah,0
					; DATA XREF: _BIO_debug_callback+184o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3ACh
; COMDAT (pick any)
		public ??_C@_0BB@PFGAICCJ@ctrl?5return?5?$CFld?6?$AA@
; `string'
??_C@_0BB@PFGAICCJ@ctrl?5return?5?$CFld?6?$AA@ db 'ctrl return %ld',0Ah,0
					; DATA XREF: _BIO_debug_callback+18Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C0h
; COMDAT (pick any)
		public ??_C@_0CC@IPLAOFGL@bio?5callback?5?9?5unknown?5type?5?$CI?$CFd?$CJ@
; `string'
??_C@_0CC@IPLAOFGL@bio?5callback?5?9?5unknown?5type?5?$CI?$CFd?$CJ@ db 'bio callback - unknown type (%d)',0Ah,0
					; DATA XREF: _BIO_debug_callback+194o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _BIO_debug_callback+1CAp
					; DATA XREF: _BIO_debug_callback+1CAr
; int __cdecl _fputs(const char	*Str, FILE *File)
		extrn __imp__fputs:near	; CODE XREF: _BIO_debug_callback+1D6p
					; DATA XREF: _BIO_debug_callback+1D6r
		extrn _BIO_write:near	; CODE XREF: _BIO_debug_callback+1C1p
		extrn _BIO_snprintf:near ; CODE	XREF: _BIO_debug_callback+4Cp
					; _BIO_debug_callback+ACp ...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _BIO_debug_callback+1EEp
		extrn __chkstk:near	; CODE XREF: _BIO_debug_callback+5p
		extrn ___security_cookie:near ;	DATA XREF: _BIO_debug_callback+Ar


		end

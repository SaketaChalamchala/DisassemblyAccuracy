;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	6D89901321DD4BD33FB27D114FA7E094
; Input	CRC32 :	3D143069

; File Name   :	C:\compspace\Diff\openssl\obj\version.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _printf+19p
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2Ch
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int printf(const char	*Format, ...)
		public _printf
_printf		proc near		; CODE XREF: _version_main+270p
					; _version_main+2AAp ...

Format		= dword	ptr  4
arg_4		= byte ptr  8

		push	esi
		mov	esi, [esp+4+Format]
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		lea	ecx, [esp+4+arg_4]
		push	ecx
		push	0
		push	esi
		push	eax
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		pop	esi
		retn
_printf		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _version_main
_version_main	proc near

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 10h
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		xor	ebx, ebx
		mov	[esp+1Ch+var_8], 0
		push	edi
		xor	esi, esi
		mov	[esp+20h+var_C], ebx
		xor	ebp, ebp
		mov	[esp+20h+var_10], esi
		xor	edi, edi
		cmp	dword ptr ds:_bio_err, ebx
		jnz	short loc_BC
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_BC
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		add	esp, 14h

loc_BC:					; CODE XREF: _version_main+2Cj
					; _version_main+43j
		mov	eax, 1
		cmp	[esp+20h+arg_0], eax
		mov	[esp+20h+var_4], eax
		cmovz	ebx, eax
		jle	loc_2AF
		db	66h, 66h
		nop	word ptr [eax+eax+00000000h]

loc_DC:					; CODE XREF: _version_main+24Dj
		mov	ecx, [esp+20h+arg_4]
		mov	esi, [ecx+eax*4]
		mov	ecx, offset ??_C@_02EJEOCNCO@?9v?$AA@ ;	`string'
		mov	eax, esi
		xchg	ax, ax

loc_EC:					; CODE XREF: _version_main+AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_10C
		test	dl, dl
		jz	short loc_108
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_10C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_EC

loc_108:				; CODE XREF: _version_main+98j
		xor	eax, eax
		jmp	short loc_111
; ---------------------------------------------------------------------------

loc_10C:				; CODE XREF: _version_main+94j
					; _version_main+A0j
		sbb	eax, eax
		or	eax, 1

loc_111:				; CODE XREF: _version_main+AEj
		test	eax, eax
		jnz	short loc_121
		mov	esi, [esp+20h+var_10]
		lea	ebx, [eax+1]
		jmp	loc_29C
; ---------------------------------------------------------------------------

loc_121:				; CODE XREF: _version_main+B7j
		mov	ecx, offset ??_C@_02GHOAPKHL@?9b?$AA@ ;	`string'
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_12C:				; CODE XREF: _version_main+EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_14C
		test	dl, dl
		jz	short loc_148
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_14C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_12C

loc_148:				; CODE XREF: _version_main+D8j
		xor	eax, eax
		jmp	short loc_151
; ---------------------------------------------------------------------------

loc_14C:				; CODE XREF: _version_main+D4j
					; _version_main+E0j
		sbb	eax, eax
		or	eax, 1

loc_151:				; CODE XREF: _version_main+EEj
		test	eax, eax
		jnz	short loc_161
		mov	esi, [esp+20h+var_10]
		lea	ebp, [eax+1]
		jmp	loc_29C
; ---------------------------------------------------------------------------

loc_161:				; CODE XREF: _version_main+F7j
		mov	ecx, offset ??_C@_02DIMDPHP@?9f?$AA@ ; `string'
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_16C:				; CODE XREF: _version_main+12Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_18C
		test	dl, dl
		jz	short loc_188
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_18C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_16C

loc_188:				; CODE XREF: _version_main+118j
		xor	eax, eax
		jmp	short loc_191
; ---------------------------------------------------------------------------

loc_18C:				; CODE XREF: _version_main+114j
					; _version_main+120j
		sbb	eax, eax
		or	eax, 1

loc_191:				; CODE XREF: _version_main+12Ej
		test	eax, eax
		jnz	short loc_1A6
		mov	esi, [esp+20h+var_10]
		mov	[esp+20h+var_8], 1
		jmp	loc_29C
; ---------------------------------------------------------------------------

loc_1A6:				; CODE XREF: _version_main+137j
		mov	ecx, offset ??_C@_02NCEOIEDG@?9o?$AA@ ;	`string'
		mov	eax, esi

loc_1AD:				; CODE XREF: _version_main+16Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1CD
		test	dl, dl
		jz	short loc_1C9
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1CD
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1AD

loc_1C9:				; CODE XREF: _version_main+159j
		xor	eax, eax
		jmp	short loc_1D2
; ---------------------------------------------------------------------------

loc_1CD:				; CODE XREF: _version_main+155j
					; _version_main+161j
		sbb	eax, eax
		or	eax, 1

loc_1D2:				; CODE XREF: _version_main+16Fj
		test	eax, eax
		jnz	short loc_1E7
		mov	esi, [esp+20h+var_10]
		mov	[esp+20h+var_C], 1
		jmp	loc_29C
; ---------------------------------------------------------------------------

loc_1E7:				; CODE XREF: _version_main+178j
		mov	ecx, offset ??_C@_02BPBEIKKI@?9p?$AA@ ;	`string'
		mov	eax, esi

loc_1EE:				; CODE XREF: _version_main+1ACj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_20E
		test	dl, dl
		jz	short loc_20A
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_20E
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1EE

loc_20A:				; CODE XREF: _version_main+19Aj
		xor	eax, eax
		jmp	short loc_213
; ---------------------------------------------------------------------------

loc_20E:				; CODE XREF: _version_main+196j
					; _version_main+1A2j
		sbb	eax, eax
		or	eax, 1

loc_213:				; CODE XREF: _version_main+1B0j
		test	eax, eax
		jnz	short loc_21C
		lea	esi, [eax+1]
		jmp	short loc_298
; ---------------------------------------------------------------------------

loc_21C:				; CODE XREF: _version_main+1B9j
		mov	ecx, offset ??_C@_02DBLKFNPN@?9d?$AA@ ;	`string'
		mov	eax, esi

loc_223:				; CODE XREF: _version_main+1E1j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_243
		test	dl, dl
		jz	short loc_23F
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_243
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_223

loc_23F:				; CODE XREF: _version_main+1CFj
		xor	eax, eax
		jmp	short loc_248
; ---------------------------------------------------------------------------

loc_243:				; CODE XREF: _version_main+1CBj
					; _version_main+1D7j
		sbb	eax, eax
		or	eax, 1

loc_248:				; CODE XREF: _version_main+1E5j
		test	eax, eax
		jnz	short loc_255
		mov	esi, [esp+20h+var_10]
		lea	edi, [eax+1]
		jmp	short loc_29C
; ---------------------------------------------------------------------------

loc_255:				; CODE XREF: _version_main+1EEj
		mov	eax, offset ??_C@_02EMMNKJLI@?9a?$AA@ ;	`string'
		xchg	ax, ax

loc_25C:				; CODE XREF: _version_main+21Aj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_27C
		test	cl, cl
		jz	short loc_278
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_27C
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_25C

loc_278:				; CODE XREF: _version_main+208j
		xor	eax, eax
		jmp	short loc_281
; ---------------------------------------------------------------------------

loc_27C:				; CODE XREF: _version_main+204j
					; _version_main+210j
		sbb	eax, eax
		or	eax, 1

loc_281:				; CODE XREF: _version_main+21Ej
		test	eax, eax
		jnz	short loc_2D6
		mov	edi, 1
		mov	esi, edi
		mov	ebx, esi
		mov	[esp+20h+var_C], esi
		mov	[esp+20h+var_8], esi
		mov	ebp, ebx

loc_298:				; CODE XREF: _version_main+1BEj
		mov	[esp+20h+var_10], esi

loc_29C:				; CODE XREF: _version_main+C0j
					; _version_main+100j ...
		mov	eax, [esp+20h+var_4]
		inc	eax
		mov	[esp+20h+var_4], eax
		cmp	eax, [esp+20h+arg_0]
		jl	loc_DC

loc_2AF:				; CODE XREF: _version_main+70j
		test	ebx, ebx
		jz	short loc_30E
		call	_SSLeay
		push	0
		cmp	eax, 1000208Fh
		jnz	short loc_2F6
		call	_SSLeay_version
		push	eax
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		call	_printf
		add	esp, 0Ch
		jmp	short loc_30E
; ---------------------------------------------------------------------------

loc_2D6:				; CODE XREF: _version_main+227j
		push	offset ??_C@_0BK@EHBJPEFH@usage?3version?5?9?$FLavbofpd?$FN?6?$AA@ ; "usage:version -[avbofpd]\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 10h
		retn
; ---------------------------------------------------------------------------

loc_2F6:				; CODE XREF: _version_main+263j
		call	_SSLeay_version
		push	eax
		push	offset ??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@ ; "OpenSSL 1.0.2h  3 May 2016"
		push	offset ??_C@_0BC@CDAAJBFG@?$CFs?5?$CILibrary?3?5?$CFs?$CJ?6?$AA@ ; "%s (Library: %s)\n"
		call	_printf
		add	esp, 10h

loc_30E:				; CODE XREF: _version_main+255j
					; _version_main+278j
		test	ebp, ebp
		jz	short loc_327
		push	3
		call	_SSLeay_version
		push	eax
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		call	_printf
		add	esp, 0Ch

loc_327:				; CODE XREF: _version_main+2B4j
		test	esi, esi
		jz	short loc_340
		push	4
		call	_SSLeay_version
		push	eax
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		call	_printf
		add	esp, 0Ch

loc_340:				; CODE XREF: _version_main+2CDj
		cmp	[esp+20h+var_C], 0
		jz	short loc_3AE
		push	offset ??_C@_0L@NLDCIC@options?3?5?5?$AA@ ; "options:  "
		call	_printf
		call	_BN_options
		push	eax
		push	offset ??_C@_03IKGEINEE@?$CFs?5?$AA@ ; "%s "
		call	_printf
		call	_RC4_options
		push	eax
		push	offset ??_C@_03IKGEINEE@?$CFs?5?$AA@ ; "%s "
		call	_printf
		call	_DES_options
		push	eax
		push	offset ??_C@_03IKGEINEE@?$CFs?5?$AA@ ; "%s "
		call	_printf
		call	_idea_options
		push	eax
		push	offset ??_C@_03IKGEINEE@?$CFs?5?$AA@ ; "%s "
		call	_printf
		call	_BF_options
		push	eax
		push	offset ??_C@_03IKGEINEE@?$CFs?5?$AA@ ; "%s "
		call	_printf
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; "\n"
		call	_printf
		add	esp, 30h

loc_3AE:				; CODE XREF: _version_main+2E9j
		cmp	[esp+20h+var_8], 0
		jz	short loc_3CA
		push	2
		call	_SSLeay_version
		push	eax
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		call	_printf
		add	esp, 0Ch

loc_3CA:				; CODE XREF: _version_main+357j
		test	edi, edi
		jz	short loc_3E3
		push	5
		call	_SSLeay_version
		push	eax
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		call	_printf
		add	esp, 0Ch

loc_3E3:				; CODE XREF: _version_main+370j
		xor	eax, eax

$end$66:
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 10h
		retn
_version_main	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F0h
; COMDAT (pick any)
		public ??_C@_02EJEOCNCO@?9v?$AA@
; `string'
??_C@_02EJEOCNCO@?9v?$AA@ db 2Dh, 76h, 0 ; DATA	XREF: _version_main+87o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F4h
; COMDAT (pick any)
		public ??_C@_02GHOAPKHL@?9b?$AA@
; `string'
??_C@_02GHOAPKHL@?9b?$AA@ db 2Dh, 62h, 0 ; DATA	XREF: _version_main:loc_121o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F8h
; COMDAT (pick any)
		public ??_C@_02DIMDPHP@?9f?$AA@
; `string'
??_C@_02DIMDPHP@?9f?$AA@ db 2Dh, 66h, 0	; DATA XREF: _version_main:loc_161o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3FCh
; COMDAT (pick any)
		public ??_C@_02NCEOIEDG@?9o?$AA@
; `string'
??_C@_02NCEOIEDG@?9o?$AA@ db 2Dh, 6Fh, 0 ; DATA	XREF: _version_main:loc_1A6o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 400h
; COMDAT (pick any)
		public ??_C@_02BPBEIKKI@?9p?$AA@
; `string'
??_C@_02BPBEIKKI@?9p?$AA@ db 2Dh, 70h, 0 ; DATA	XREF: _version_main:loc_1E7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 404h
; COMDAT (pick any)
		public ??_C@_02DBLKFNPN@?9d?$AA@
; `string'
??_C@_02DBLKFNPN@?9d?$AA@ db 2Dh, 64h, 0 ; DATA	XREF: _version_main:loc_21Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 408h
; COMDAT (pick any)
		public ??_C@_02EMMNKJLI@?9a?$AA@
; `string'
??_C@_02EMMNKJLI@?9a?$AA@ db 2Dh, 61h, 0 ; DATA	XREF: _version_main:loc_255o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40Ch
; COMDAT (pick any)
		public ??_C@_0BK@EHBJPEFH@usage?3version?5?9?$FLavbofpd?$FN?6?$AA@
; `string'
??_C@_0BK@EHBJPEFH@usage?3version?5?9?$FLavbofpd?$FN?6?$AA@ db 'usage:version -[avbofpd]',0Ah,0
					; DATA XREF: _version_main:loc_2D6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 428h
; COMDAT (pick any)
		public ??_C@_03OFAPEBGM@?$CFs?6?$AA@
; char `string'[4]
??_C@_03OFAPEBGM@?$CFs?6?$AA@ db '%s',0Ah,0 ; DATA XREF: _version_main+26Bo
					; _version_main+2BEo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 42Ch
; COMDAT (pick any)
		public ??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@
; `string'
??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@ db 'OpenSSL 1.0.2h  3 May 2016',0
					; DATA XREF: _version_main+2A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 448h
; COMDAT (pick any)
		public ??_C@_0BC@CDAAJBFG@?$CFs?5?$CILibrary?3?5?$CFs?$CJ?6?$AA@
; char `string'[]
??_C@_0BC@CDAAJBFG@?$CFs?5?$CILibrary?3?5?$CFs?$CJ?6?$AA@ db '%s (Library: %s)',0Ah,0
					; DATA XREF: _version_main+2A5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 45Ch
; COMDAT (pick any)
		public ??_C@_0L@NLDCIC@options?3?5?5?$AA@
; char `string'[]
??_C@_0L@NLDCIC@options?3?5?5?$AA@ db 'options:  ',0 ; DATA XREF: _version_main+2EBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 468h
; COMDAT (pick any)
		public ??_C@_03IKGEINEE@?$CFs?5?$AA@
; char `string'[4]
??_C@_03IKGEINEE@?$CFs?5?$AA@ db '%s ',0 ; DATA XREF: _version_main+2FBo
					; _version_main+30Bo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 46Ch
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; char `string'[2]
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah,0	; DATA XREF: _version_main+345o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _printf+7p
					; _version_main+47p
					; DATA XREF: ...
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _printf+23p
					; DATA XREF: ...
		extrn _SSLeay_version:near ; CODE XREF:	_version_main+265p
					; _version_main:loc_2F6p ...
		extrn _SSLeay:near	; CODE XREF: _version_main+257p
		extrn _BIO_s_file:near	; CODE XREF: _version_main+2Ep
		extrn _BIO_new:near	; CODE XREF: _version_main+34p
		extrn _BIO_ctrl:near	; CODE XREF: _version_main+58p
		extrn _BIO_printf:near	; CODE XREF: _version_main+285p
		extrn _BN_options:near	; CODE XREF: _version_main+2F5p
		extrn _RC4_options:near	; CODE XREF: _version_main+305p
		extrn _DES_options:near	; CODE XREF: _version_main+315p
		extrn _idea_options:near ; CODE	XREF: _version_main+325p
		extrn _BF_options:near	; CODE XREF: _version_main+335p
		extrn __chkstk:near	; CODE XREF: _version_main+5p
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso
		extrn _bio_err:near	; DATA XREF: _version_main+26r
					; _version_main+3Cw ...


		end

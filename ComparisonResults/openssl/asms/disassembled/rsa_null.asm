;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	692AA575ADA1A05E8750114029F491EF
; Input	CRC32 :	F07AD07A

; File Name   :	C:\compspace\Diff\openssl\obj\rsa_null.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_RSA_null_public_encrypt proc near	; DATA XREF: .data:0000009Co
		push	70h ; 'p'
		push	offset ??_C@_0BI@FLPAPGNP@?4?2crypto?2rsa?2rsa_null?4c?$AA@ ; ".\\crypto\\rsa\\rsa_null.c"
		push	82h ; '‚'
		push	87h ; '‡'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		retn
_RSA_null_public_encrypt endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 20h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_RSA_null_private_encrypt proc near	; DATA XREF: .data:000000A4o
		push	78h ; 'x'
		push	offset ??_C@_0BI@FLPAPGNP@?4?2crypto?2rsa?2rsa_null?4c?$AA@ ; ".\\crypto\\rsa\\rsa_null.c"
		push	82h ; '‚'
		push	85h ; '…'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		retn
_RSA_null_private_encrypt endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 40h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_RSA_null_public_decrypt proc near	; DATA XREF: .data:000000A0o
		push	87h ; '‡'
		push	offset ??_C@_0BI@FLPAPGNP@?4?2crypto?2rsa?2rsa_null?4c?$AA@ ; ".\\crypto\\rsa\\rsa_null.c"
		push	82h ; '‚'
		push	86h ; '†'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		retn
_RSA_null_public_decrypt endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 64h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_RSA_null_private_decrypt proc near	; DATA XREF: .data:000000A8o
		push	80h ; '€'
		push	offset ??_C@_0BI@FLPAPGNP@?4?2crypto?2rsa?2rsa_null?4c?$AA@ ; ".\\crypto\\rsa\\rsa_null.c"
		push	82h ; '‚'
		push	84h ; '„'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		retn
_RSA_null_private_decrypt endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 88h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_RSA_null_init	proc near		; DATA XREF: .data:000000B4o
		mov	eax, 1
		retn
_RSA_null_init	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 90h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_RSA_null_finish proc near		; DATA XREF: .data:000000B8o
		mov	eax, 1
		retn
_RSA_null_finish endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 98h
_rsa_null_meth	dd offset ??_C@_08PPGLEDAA@Null?5RSA?$AA@ ; DATA XREF: _RSA_null_methodo
					; "Null	RSA"
		dd offset _RSA_null_public_encrypt
		dd offset _RSA_null_public_decrypt
		dd offset _RSA_null_private_encrypt
		dd offset _RSA_null_private_decrypt
		dd 2 dup(0)
		dd offset _RSA_null_init
		dd offset _RSA_null_finish
		dd 5 dup(0)
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
; COMDAT (pick any)
		public ??_C@_08PPGLEDAA@Null?5RSA?$AA@
; `string'
??_C@_08PPGLEDAA@Null?5RSA?$AA@	db 'Null RSA',0 ; DATA XREF: .data:_rsa_null_metho
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0DCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _RSA_null_method
_RSA_null_method proc near
		mov	eax, offset _rsa_null_meth
		retn
_RSA_null_method endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
; COMDAT (pick any)
		public ??_C@_0BI@FLPAPGNP@?4?2crypto?2rsa?2rsa_null?4c?$AA@
; `string'
??_C@_0BI@FLPAPGNP@?4?2crypto?2rsa?2rsa_null?4c?$AA@ db	'.\crypto\rsa\rsa_null.c',0
					; DATA XREF: _RSA_null_public_encrypt+2o
					; _RSA_null_private_encrypt+2o	...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_put_error:near ; CODE XREF: _RSA_null_public_encrypt+13p
					; _RSA_null_private_encrypt+13p ...


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	3C7E45AA1C8114DD902CB274E43D7853
; Input	CRC32 :	FA3A5B8B

; File Name   :	C:\compspace\Diff\openssl\obj\md5-586.obj
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
; Segment alignment '64byte' can not be represented in assembly
_text		segment	para public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public L$_md5_block_asm_data_order_begin
L$_md5_block_asm_data_order_begin proc near

var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	edi
		mov	edi, [esp+8+arg_0]
		mov	esi, [esp+8+arg_4]
		mov	ecx, [esp+8+arg_8]
		push	ebp
		shl	ecx, 6
		push	ebx
		add	ecx, esi
		sub	ecx, 40h ; '@'
		mov	eax, [edi]
		push	ecx
		mov	ebx, [edi+4]
		mov	ecx, [edi+8]
		mov	edx, [edi+0Ch]

L$000start:				; CODE XREF: L$_md5_block_asm_data_order_begin+69Cj
		mov	edi, ecx
		mov	ebp, [esi]
		xor	edi, edx
		and	edi, ebx
		lea	eax, [eax+ebp-28955B88h]
		xor	edi, edx
		add	eax, edi
		mov	edi, ebx
		rol	eax, 7
		mov	ebp, [esi+4]
		add	eax, ebx
		xor	edi, ecx
		and	edi, eax
		lea	edx, [edx+ebp-173848AAh]
		xor	edi, ecx
		add	edx, edi
		mov	edi, eax
		rol	edx, 0Ch
		mov	ebp, [esi+8]
		add	edx, eax
		xor	edi, ebx
		and	edi, edx
		lea	ecx, [ecx+ebp+242070DBh]
		xor	edi, ebx
		add	ecx, edi
		mov	edi, edx
		rol	ecx, 11h
		mov	ebp, [esi+0Ch]
		add	ecx, edx
		xor	edi, eax
		and	edi, ecx
		lea	ebx, [ebx+ebp-3E423112h]
		xor	edi, eax
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 16h
		mov	ebp, [esi+10h]
		add	ebx, ecx
		xor	edi, edx
		and	edi, ebx
		lea	eax, [eax+ebp-0A83F051h]
		xor	edi, edx
		add	eax, edi
		mov	edi, ebx
		rol	eax, 7
		mov	ebp, [esi+14h]
		add	eax, ebx
		xor	edi, ecx
		and	edi, eax
		lea	edx, [edx+ebp+4787C62Ah]
		xor	edi, ecx
		add	edx, edi
		mov	edi, eax
		rol	edx, 0Ch
		mov	ebp, [esi+18h]
		add	edx, eax
		xor	edi, ebx
		and	edi, edx
		lea	ecx, [ecx+ebp-57CFB9EDh]
		xor	edi, ebx
		add	ecx, edi
		mov	edi, edx
		rol	ecx, 11h
		mov	ebp, [esi+1Ch]
		add	ecx, edx
		xor	edi, eax
		and	edi, ecx
		lea	ebx, [ebx+ebp-2B96AFFh]
		xor	edi, eax
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 16h
		mov	ebp, [esi+20h]
		add	ebx, ecx
		xor	edi, edx
		and	edi, ebx
		lea	eax, [eax+ebp+698098D8h]
		xor	edi, edx
		add	eax, edi
		mov	edi, ebx
		rol	eax, 7
		mov	ebp, [esi+24h]
		add	eax, ebx
		xor	edi, ecx
		and	edi, eax
		lea	edx, [edx+ebp-74BB0851h]
		xor	edi, ecx
		add	edx, edi
		mov	edi, eax
		rol	edx, 0Ch
		mov	ebp, [esi+28h]
		add	edx, eax
		xor	edi, ebx
		and	edi, edx
		lea	ecx, [ecx+ebp-0A44Fh]
		xor	edi, ebx
		add	ecx, edi
		mov	edi, edx
		rol	ecx, 11h
		mov	ebp, [esi+2Ch]
		add	ecx, edx
		xor	edi, eax
		and	edi, ecx
		lea	ebx, [ebx+ebp-76A32842h]
		xor	edi, eax
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 16h
		mov	ebp, [esi+30h]
		add	ebx, ecx
		xor	edi, edx
		and	edi, ebx
		lea	eax, [eax+ebp+6B901122h]
		xor	edi, edx
		add	eax, edi
		mov	edi, ebx
		rol	eax, 7
		mov	ebp, [esi+34h]
		add	eax, ebx
		xor	edi, ecx
		and	edi, eax
		lea	edx, [edx+ebp-2678E6Dh]
		xor	edi, ecx
		add	edx, edi
		mov	edi, eax
		rol	edx, 0Ch
		mov	ebp, [esi+38h]
		add	edx, eax
		xor	edi, ebx
		and	edi, edx
		lea	ecx, [ecx+ebp-5986BC72h]
		xor	edi, ebx
		add	ecx, edi
		mov	edi, edx
		rol	ecx, 11h
		mov	ebp, [esi+3Ch]
		add	ecx, edx
		xor	edi, eax
		and	edi, ecx
		lea	ebx, [ebx+ebp+49B40821h]
		xor	edi, eax
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 16h
		mov	ebp, [esi+4]
		add	ebx, ecx
		lea	eax, [eax+ebp-9E1DA9Eh]
		xor	edi, ebx
		and	edi, edx
		mov	ebp, [esi+18h]
		xor	edi, ecx
		add	eax, edi
		mov	edi, ebx
		rol	eax, 5
		add	eax, ebx
		lea	edx, [edx+ebp-3FBF4CC0h]
		xor	edi, eax
		and	edi, ecx
		mov	ebp, [esi+2Ch]
		xor	edi, ebx
		add	edx, edi
		mov	edi, eax
		rol	edx, 9
		add	edx, eax
		lea	ecx, [ecx+ebp+265E5A51h]
		xor	edi, edx
		and	edi, ebx
		mov	ebp, [esi]
		xor	edi, eax
		add	ecx, edi
		mov	edi, edx
		rol	ecx, 0Eh
		add	ecx, edx
		lea	ebx, [ebx+ebp-16493856h]
		xor	edi, ecx
		and	edi, eax
		mov	ebp, [esi+14h]
		xor	edi, edx
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 14h
		add	ebx, ecx
		lea	eax, [eax+ebp-29D0EFA3h]
		xor	edi, ebx
		and	edi, edx
		mov	ebp, [esi+28h]
		xor	edi, ecx
		add	eax, edi
		mov	edi, ebx
		rol	eax, 5
		add	eax, ebx
		lea	edx, [edx+ebp+2441453h]
		xor	edi, eax
		and	edi, ecx
		mov	ebp, [esi+3Ch]
		xor	edi, ebx
		add	edx, edi
		mov	edi, eax
		rol	edx, 9
		add	edx, eax
		lea	ecx, [ecx+ebp-275E197Fh]
		xor	edi, edx
		and	edi, ebx
		mov	ebp, [esi+10h]
		xor	edi, eax
		add	ecx, edi
		mov	edi, edx
		rol	ecx, 0Eh
		add	ecx, edx
		lea	ebx, [ebx+ebp-182C0438h]
		xor	edi, ecx
		and	edi, eax
		mov	ebp, [esi+24h]
		xor	edi, edx
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 14h
		add	ebx, ecx
		lea	eax, [eax+ebp+21E1CDE6h]
		xor	edi, ebx
		and	edi, edx
		mov	ebp, [esi+38h]
		xor	edi, ecx
		add	eax, edi
		mov	edi, ebx
		rol	eax, 5
		add	eax, ebx
		lea	edx, [edx+ebp-3CC8F82Ah]
		xor	edi, eax
		and	edi, ecx
		mov	ebp, [esi+0Ch]
		xor	edi, ebx
		add	edx, edi
		mov	edi, eax
		rol	edx, 9
		add	edx, eax
		lea	ecx, [ecx+ebp-0B2AF279h]
		xor	edi, edx
		and	edi, ebx
		mov	ebp, [esi+20h]
		xor	edi, eax
		add	ecx, edi
		mov	edi, edx
		rol	ecx, 0Eh
		add	ecx, edx
		lea	ebx, [ebx+ebp+455A14EDh]
		xor	edi, ecx
		and	edi, eax
		mov	ebp, [esi+34h]
		xor	edi, edx
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 14h
		add	ebx, ecx
		lea	eax, [eax+ebp-561C16FBh]
		xor	edi, ebx
		and	edi, edx
		mov	ebp, [esi+8]
		xor	edi, ecx
		add	eax, edi
		mov	edi, ebx
		rol	eax, 5
		add	eax, ebx
		lea	edx, [edx+ebp-3105C08h]
		xor	edi, eax
		and	edi, ecx
		mov	ebp, [esi+1Ch]
		xor	edi, ebx
		add	edx, edi
		mov	edi, eax
		rol	edx, 9
		add	edx, eax
		lea	ecx, [ecx+ebp+676F02D9h]
		xor	edi, edx
		and	edi, ebx
		mov	ebp, [esi+30h]
		xor	edi, eax
		add	ecx, edi
		mov	edi, edx
		rol	ecx, 0Eh
		add	ecx, edx
		lea	ebx, [ebx+ebp-72D5B376h]
		xor	edi, ecx
		and	edi, eax
		mov	ebp, [esi+14h]
		xor	edi, edx
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 14h
		add	ebx, ecx
		xor	edi, edx
		xor	edi, ebx
		lea	eax, [eax+ebp-5C6BEh]
		add	eax, edi
		rol	eax, 4
		mov	ebp, [esi+20h]
		mov	edi, ebx
		lea	edx, [edx+ebp-788E097Fh]
		add	eax, ebx
		xor	edi, ecx
		xor	edi, eax
		mov	ebp, [esi+2Ch]
		add	edx, edi
		mov	edi, eax
		rol	edx, 0Bh
		add	edx, eax
		xor	edi, ebx
		xor	edi, edx
		lea	ecx, [ecx+ebp+6D9D6122h]
		add	ecx, edi
		rol	ecx, 10h
		mov	ebp, [esi+38h]
		mov	edi, edx
		lea	ebx, [ebx+ebp-21AC7F4h]
		add	ecx, edx
		xor	edi, eax
		xor	edi, ecx
		mov	ebp, [esi+4]
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 17h
		add	ebx, ecx
		xor	edi, edx
		xor	edi, ebx
		lea	eax, [eax+ebp-5B4115BCh]
		add	eax, edi
		rol	eax, 4
		mov	ebp, [esi+10h]
		mov	edi, ebx
		lea	edx, [edx+ebp+4BDECFA9h]
		add	eax, ebx
		xor	edi, ecx
		xor	edi, eax
		mov	ebp, [esi+1Ch]
		add	edx, edi
		mov	edi, eax
		rol	edx, 0Bh
		add	edx, eax
		xor	edi, ebx
		xor	edi, edx
		lea	ecx, [ecx+ebp-944B4A0h]
		add	ecx, edi
		rol	ecx, 10h
		mov	ebp, [esi+28h]
		mov	edi, edx
		lea	ebx, [ebx+ebp-41404390h]
		add	ecx, edx
		xor	edi, eax
		xor	edi, ecx
		mov	ebp, [esi+34h]
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 17h
		add	ebx, ecx
		xor	edi, edx
		xor	edi, ebx
		lea	eax, [eax+ebp+289B7EC6h]
		add	eax, edi
		rol	eax, 4
		mov	ebp, [esi]
		mov	edi, ebx
		lea	edx, [edx+ebp-155ED806h]
		add	eax, ebx
		xor	edi, ecx
		xor	edi, eax
		mov	ebp, [esi+0Ch]
		add	edx, edi
		mov	edi, eax
		rol	edx, 0Bh
		add	edx, eax
		xor	edi, ebx
		xor	edi, edx
		lea	ecx, [ecx+ebp-2B10CF7Bh]
		add	ecx, edi
		rol	ecx, 10h
		mov	ebp, [esi+18h]
		mov	edi, edx
		lea	ebx, [ebx+ebp+4881D05h]
		add	ecx, edx
		xor	edi, eax
		xor	edi, ecx
		mov	ebp, [esi+24h]
		add	ebx, edi
		mov	edi, ecx
		rol	ebx, 17h
		add	ebx, ecx
		xor	edi, edx
		xor	edi, ebx
		lea	eax, [eax+ebp-262B2FC7h]
		add	eax, edi
		rol	eax, 4
		mov	ebp, [esi+30h]
		mov	edi, ebx
		lea	edx, [edx+ebp-1924661Bh]
		add	eax, ebx
		xor	edi, ecx
		xor	edi, eax
		mov	ebp, [esi+3Ch]
		add	edx, edi
		mov	edi, eax
		rol	edx, 0Bh
		add	edx, eax
		xor	edi, ebx
		xor	edi, edx
		lea	ecx, [ecx+ebp+1FA27CF8h]
		add	ecx, edi
		rol	ecx, 10h
		mov	ebp, [esi+8]
		mov	edi, edx
		lea	ebx, [ebx+ebp-3B53A99Bh]
		add	ecx, edx
		xor	edi, eax
		xor	edi, ecx
		mov	ebp, [esi]
		add	ebx, edi
		mov	edi, 0FFFFFFFFh
		rol	ebx, 17h
		add	ebx, ecx
		xor	edi, edx
		or	edi, ebx
		lea	eax, [eax+ebp-0BD6DDBCh]
		xor	edi, ecx
		mov	ebp, [esi+1Ch]
		add	eax, edi
		mov	edi, 0FFFFFFFFh
		rol	eax, 6
		xor	edi, ecx
		add	eax, ebx
		or	edi, eax
		lea	edx, [edx+ebp+432AFF97h]
		xor	edi, ebx
		mov	ebp, [esi+38h]
		add	edx, edi
		mov	edi, 0FFFFFFFFh
		rol	edx, 0Ah
		xor	edi, ebx
		add	edx, eax
		or	edi, edx
		lea	ecx, [ecx+ebp-546BDC59h]
		xor	edi, eax
		mov	ebp, [esi+14h]
		add	ecx, edi
		mov	edi, 0FFFFFFFFh
		rol	ecx, 0Fh
		xor	edi, eax
		add	ecx, edx
		or	edi, ecx
		lea	ebx, [ebx+ebp-36C5FC7h]
		xor	edi, edx
		mov	ebp, [esi+30h]
		add	ebx, edi
		mov	edi, 0FFFFFFFFh
		rol	ebx, 15h
		xor	edi, edx
		add	ebx, ecx
		or	edi, ebx
		lea	eax, [eax+ebp+655B59C3h]
		xor	edi, ecx
		mov	ebp, [esi+0Ch]
		add	eax, edi
		mov	edi, 0FFFFFFFFh
		rol	eax, 6
		xor	edi, ecx
		add	eax, ebx
		or	edi, eax
		lea	edx, [edx+ebp-70F3336Eh]
		xor	edi, ebx
		mov	ebp, [esi+28h]
		add	edx, edi
		mov	edi, 0FFFFFFFFh
		rol	edx, 0Ah
		xor	edi, ebx
		add	edx, eax
		or	edi, edx
		lea	ecx, [ecx+ebp-100B83h]
		xor	edi, eax
		mov	ebp, [esi+4]
		add	ecx, edi
		mov	edi, 0FFFFFFFFh
		rol	ecx, 0Fh
		xor	edi, eax
		add	ecx, edx
		or	edi, ecx
		lea	ebx, [ebx+ebp-7A7BA22Fh]
		xor	edi, edx
		mov	ebp, [esi+20h]
		add	ebx, edi
		mov	edi, 0FFFFFFFFh
		rol	ebx, 15h
		xor	edi, edx
		add	ebx, ecx
		or	edi, ebx
		lea	eax, [eax+ebp+6FA87E4Fh]
		xor	edi, ecx
		mov	ebp, [esi+3Ch]
		add	eax, edi
		mov	edi, 0FFFFFFFFh
		rol	eax, 6
		xor	edi, ecx
		add	eax, ebx
		or	edi, eax
		lea	edx, [edx+ebp-1D31920h]
		xor	edi, ebx
		mov	ebp, [esi+18h]
		add	edx, edi
		mov	edi, 0FFFFFFFFh
		rol	edx, 0Ah
		xor	edi, ebx
		add	edx, eax
		or	edi, edx
		lea	ecx, [ecx+ebp-5CFEBCECh]
		xor	edi, eax
		mov	ebp, [esi+34h]
		add	ecx, edi
		mov	edi, 0FFFFFFFFh
		rol	ecx, 0Fh
		xor	edi, eax
		add	ecx, edx
		or	edi, ecx
		lea	ebx, [ebx+ebp+4E0811A1h]
		xor	edi, edx
		mov	ebp, [esi+10h]
		add	ebx, edi
		mov	edi, 0FFFFFFFFh
		rol	ebx, 15h
		xor	edi, edx
		add	ebx, ecx
		or	edi, ebx
		lea	eax, [eax+ebp-8AC817Eh]
		xor	edi, ecx
		mov	ebp, [esi+2Ch]
		add	eax, edi
		mov	edi, 0FFFFFFFFh
		rol	eax, 6
		xor	edi, ecx
		add	eax, ebx
		or	edi, eax
		lea	edx, [edx+ebp-42C50DCBh]
		xor	edi, ebx
		mov	ebp, [esi+8]
		add	edx, edi
		mov	edi, 0FFFFFFFFh
		rol	edx, 0Ah
		xor	edi, ebx
		add	edx, eax
		or	edi, edx
		lea	ecx, [ecx+ebp+2AD7D2BBh]
		xor	edi, eax
		mov	ebp, [esi+24h]
		add	ecx, edi
		mov	edi, 0FFFFFFFFh
		rol	ecx, 0Fh
		xor	edi, eax
		add	ecx, edx
		or	edi, ecx
		lea	ebx, [ebx+ebp-14792C6Fh]
		xor	edi, edx
		mov	ebp, [esp+14h+arg_0]
		add	ebx, edi
		add	esi, 40h ; '@'
		rol	ebx, 15h
		mov	edi, [ebp+0]
		add	ebx, ecx
		add	eax, edi
		mov	edi, [ebp+4]
		add	ebx, edi
		mov	edi, [ebp+8]
		add	ecx, edi
		mov	edi, [ebp+0Ch]
		add	edx, edi
		mov	[ebp+0], eax
		mov	[ebp+4], ebx
		mov	edi, [esp+14h+var_14]
		mov	[ebp+8], ecx
		mov	[ebp+0Ch], edx
		cmp	edi, esi
		jnb	L$000start
		pop	eax
		pop	ebx
		pop	ebp
		pop	edi
		pop	esi
		retn
L$_md5_block_asm_data_order_begin endp

_text		ends


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	435243892AF6ACB05414EE2512A259AA
; Input	CRC32 :	B18452C3

; File Name   :	C:\compspace\Diff\openssl\obj\v3_lib.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
_standard_exts	dd offset _v3_nscert	; DATA XREF: _X509V3_EXT_get_nid+30o
		dd offset _v3_ns_ia5_list
		dd offset _v3_ns_ia5_list+38h
		dd offset _v3_ns_ia5_list+70h
		dd offset _v3_ns_ia5_list+0A8h
		dd offset _v3_ns_ia5_list+0E0h
		dd offset _v3_ns_ia5_list+118h
		dd offset _v3_ns_ia5_list+150h
		dd offset _v3_skey_id
		dd offset _v3_key_usage
		dd offset _v3_pkey_usage_period
		dd offset _v3_alt
		dd offset _v3_alt+38h
		dd offset _v3_bcons
		dd offset _v3_crl_num
		dd offset _v3_cpols
		dd offset _v3_akey_id
		dd offset _v3_crld
		dd offset _v3_ext_ku
		dd offset _v3_delta_crl
		dd offset _v3_crl_reason
		dd offset _v3_crl_invdate
		dd offset _v3_sxnet
		dd offset _v3_info
		dd offset _v3_ocsp_nonce
		dd offset _v3_ocsp_crlid
		dd offset _v3_ocsp_accresp
		dd offset _v3_ocsp_nocheck
		dd offset _v3_ocsp_acutoff
		dd offset _v3_ocsp_serviceloc
		dd offset _v3_sinfo
		dd offset _v3_policy_constraints
		dd offset _v3_crl_hold
		dd offset _v3_pci
		dd offset _v3_name_constraints
		dd offset _v3_policy_mappings
		dd offset _v3_inhibit_anyp
		dd offset _v3_idp
		dd offset _v3_alt+70h
		dd offset _v3_freshest_crl
		dd offset _v3_ct_scts
		dd offset _v3_ct_scts+38h
_data		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 0A8h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
_ext_list	dd ?			; DATA XREF: _X509V3_EXT_addr
					; _X509V3_EXT_add+16w ...
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_OBJ_bsearch_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset _ext_cmp_BSEARCH_CMP_FN
		push	4
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	[esp+10h+arg_0]
		call	_OBJ_bsearch_
		add	esp, 14h
		retn
_OBJ_bsearch_ext endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_EXT_add
_X509V3_EXT_add	proc near		; CODE XREF: _X509V3_EXT_add_alias+90p

arg_0		= dword	ptr  4

		mov	eax, ds:_ext_list
		test	eax, eax
		jnz	short loc_FF
		push	offset _ext_cmp
		call	_sk_new
		add	esp, 4
		mov	ds:_ext_list, eax
		test	eax, eax
		jnz	short loc_FF
		push	4Dh ; 'M'

loc_E9:					; CODE XREF: _X509V3_EXT_add+4Aj
		push	offset ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ ; ".\\crypto\\x509v3\\v3_lib.c"
		push	41h ; 'A'
		push	68h ; 'h'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_FF:					; CODE XREF: _X509V3_EXT_add+7j
					; _X509V3_EXT_add+1Dj
		push	[esp+arg_0]
		push	eax
		call	_sk_push
		add	esp, 8
		test	eax, eax
		jnz	short loc_114
		push	51h ; 'Q'
		jmp	short loc_E9
; ---------------------------------------------------------------------------

loc_114:				; CODE XREF: _X509V3_EXT_add+46j
		mov	eax, 1
		retn
_X509V3_EXT_add	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 11Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_EXT_add_alias
_X509V3_EXT_add_alias proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	[esp+4+arg_4]
		call	_X509V3_EXT_get_nid
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_14B
		push	0A2h ; '¢'
		push	offset ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ ; ".\\crypto\\x509v3\\v3_lib.c"
		push	66h ; 'f'
		push	6Ah ; 'j'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_14B:				; CODE XREF: _X509V3_EXT_add_alias+11j
		push	0A7h ; '§'
		push	offset ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ ; ".\\crypto\\x509v3\\v3_lib.c"
		push	38h ; '8'
		call	_CRYPTO_malloc
		mov	ecx, eax
		add	esp, 0Ch
		test	ecx, ecx
		jnz	short loc_181
		push	0A8h ; '¨'
		push	offset ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ ; ".\\crypto\\x509v3\\v3_lib.c"
		push	41h ; 'A'
		push	6Ah ; 'j'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_181:				; CODE XREF: _X509V3_EXT_add_alias+47j
		movups	xmm0, xmmword ptr [esi]
		mov	eax, [esp+4+arg_0]
		push	ecx
		movups	xmmword	ptr [ecx], xmm0
		movups	xmm0, xmmword ptr [esi+10h]
		movups	xmmword	ptr [ecx+10h], xmm0
		movups	xmm0, xmmword ptr [esi+20h]
		movups	xmmword	ptr [ecx+20h], xmm0
		movq	xmm0, qword ptr	[esi+30h]
		movq	qword ptr [ecx+30h], xmm0
		or	dword ptr [ecx+4], 1
		mov	[ecx], eax
		call	_X509V3_EXT_add
		add	esp, 4
		pop	esi
		retn
_X509V3_EXT_add_alias endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1B8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_EXT_add_list
_X509V3_EXT_add_list proc near

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		cmp	dword ptr [esi], 0FFFFFFFFh
		jz	short loc_1FD
		nop	word ptr [eax+eax+00h]

loc_1C8:				; CODE XREF: _X509V3_EXT_add_list+43j
		mov	eax, ds:_ext_list
		test	eax, eax
		jnz	short loc_1E7
		push	offset _ext_cmp
		call	_sk_new
		add	esp, 4
		mov	ds:_ext_list, eax
		test	eax, eax
		jz	short loc_204

loc_1E7:				; CODE XREF: _X509V3_EXT_add_list+17j
		push	esi
		push	eax
		call	_sk_push
		add	esp, 8
		test	eax, eax
		jz	short loc_208
		add	esi, 38h ; '8'
		cmp	dword ptr [esi], 0FFFFFFFFh
		jnz	short loc_1C8

loc_1FD:				; CODE XREF: _X509V3_EXT_add_list+8j
		mov	eax, 1
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_204:				; CODE XREF: _X509V3_EXT_add_list+2Dj
		push	4Dh ; 'M'
		jmp	short loc_20A
; ---------------------------------------------------------------------------

loc_208:				; CODE XREF: _X509V3_EXT_add_list+3Bj
		push	51h ; 'Q'

loc_20A:				; CODE XREF: _X509V3_EXT_add_list+4Ej
		push	offset ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ ; ".\\crypto\\x509v3\\v3_lib.c"
		push	41h ; 'A'
		push	68h ; 'h'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
_X509V3_EXT_add_list endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 224h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_EXT_cleanup
_X509V3_EXT_cleanup proc near
		push	offset _ext_list_free
		push	ds:_ext_list
		call	_sk_pop_free
		add	esp, 8
		mov	ds:_ext_list, 0
		retn
_X509V3_EXT_cleanup endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 244h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_EXT_d2i
_X509V3_EXT_d2i	proc near

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		push	dword ptr [esi]
		call	_OBJ_obj2nid
		add	esp, 4
		test	eax, eax
		jz	short loc_2A1
		push	eax
		call	_X509V3_EXT_get_nid
		add	esp, 4
		test	eax, eax
		jz	short loc_2A1
		mov	edx, [esi+8]
		mov	ecx, [edx+8]
		mov	[esp+4+arg_0], ecx
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	short loc_28E
		call	ecx
		push	eax
		mov	eax, [esi+8]
		push	dword ptr [eax]
		lea	eax, [esp+0Ch+arg_0]
		push	eax
		push	0
		call	_ASN1_item_d2i
		add	esp, 10h
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_28E:				; CODE XREF: _X509V3_EXT_d2i+2Fj
		push	dword ptr [edx]
		mov	eax, [eax+14h]
		lea	ecx, [esp+8+arg_0]
		push	ecx
		push	0
		call	eax
		add	esp, 0Ch
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_2A1:				; CODE XREF: _X509V3_EXT_d2i+11j
					; _X509V3_EXT_d2i+1Ej
		xor	eax, eax
		pop	esi
		retn
_X509V3_EXT_d2i	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2A8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_EXT_free
_X509V3_EXT_free proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	[esp+arg_0]
		call	_X509V3_EXT_get_nid
		add	esp, 4
		test	eax, eax
		jnz	short loc_2BF
		push	82h ; ''
		jmp	short loc_2F6
; ---------------------------------------------------------------------------

loc_2BF:				; CODE XREF: _X509V3_EXT_free+Ej
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	short loc_2DB
		call	ecx
		push	eax
		push	[esp+4+arg_4]
		call	_ASN1_item_free
		add	esp, 8
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------

loc_2DB:				; CODE XREF: _X509V3_EXT_free+1Cj
		mov	eax, [eax+10h]
		test	eax, eax
		jz	short loc_2F1
		push	[esp+arg_4]
		call	eax
		add	esp, 4
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------

loc_2F1:				; CODE XREF: _X509V3_EXT_free+38j
		push	8Ch ; ''

loc_2F6:				; CODE XREF: _X509V3_EXT_free+15j
		push	offset ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ ; ".\\crypto\\x509v3\\v3_lib.c"
		push	0A8h ; '¨'
		push	0A5h ; '¥'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
_X509V3_EXT_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 314h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_EXT_get
_X509V3_EXT_get	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		push	dword ptr [eax]
		call	_OBJ_obj2nid
		add	esp, 4
		test	eax, eax
		jnz	short loc_327
		retn
; ---------------------------------------------------------------------------

loc_327:				; CODE XREF: _X509V3_EXT_get+10j
		mov	[esp+arg_0], eax
		jmp	$+5
_X509V3_EXT_get	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 330h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_EXT_get_nid
_X509V3_EXT_get_nid proc near		; CODE XREF: _X509V3_EXT_add_alias+5p
					; _X509V3_EXT_d2i+14p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
arg_0		= dword	ptr  4

		mov	eax, 3Ch ; '<'
		call	__chkstk
		lea	eax, [esp+3Ch+var_38]
		mov	[esp+3Ch+var_3C], eax
		mov	eax, [esp+3Ch+arg_0]
		test	eax, eax
		jns	short loc_34F

loc_349:				; CODE XREF: _X509V3_EXT_get_nid+4Fj
					; _X509V3_EXT_get_nid+62j
		xor	eax, eax
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_34F:				; CODE XREF: _X509V3_EXT_get_nid+17j
		push	offset _ext_cmp_BSEARCH_CMP_FN
		push	4
		push	2Ah ; '*'
		mov	[esp+48h+var_38], eax
		lea	eax, [esp+48h+var_3C]
		push	offset _standard_exts
		push	eax
		call	_OBJ_bsearch_
		add	esp, 14h
		test	eax, eax
		jz	short loc_378
		mov	eax, [eax]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_378:				; CODE XREF: _X509V3_EXT_get_nid+40j
		mov	eax, ds:_ext_list
		test	eax, eax
		jz	short loc_349
		lea	ecx, [esp+3Ch+var_38]
		push	ecx
		push	eax
		call	_sk_find
		add	esp, 8
		cmp	eax, 0FFFFFFFFh
		jz	short loc_349
		push	eax
		push	ds:_ext_list
		call	_sk_value
		add	esp, 8
		add	esp, 3Ch
		retn
_X509V3_EXT_get_nid endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3A8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_add1_i2d
_X509V3_add1_i2d proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebx
		push	esi
		mov	esi, [esp+8+arg_10]
		or	ebx, 0FFFFFFFFh
		and	esi, 0Fh
		push	edi
		mov	edi, [esp+0Ch+arg_0]
		cmp	esi, 1
		jz	short loc_409
		push	ebx
		push	[esp+10h+arg_4]
		push	dword ptr [edi]
		call	_X509v3_get_ext_by_NID
		mov	ebx, eax
		add	esp, 0Ch
		test	ebx, ebx
		js	short loc_409
		cmp	esi, 4
		jnz	short loc_3DF
		pop	edi
		lea	eax, [esi-3]
		pop	esi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_3DF:				; CODE XREF: _X509V3_add1_i2d+2Ej
		test	esi, esi
		jnz	short loc_3ED
		mov	eax, 91h ; ''
		jmp	$err$20
; ---------------------------------------------------------------------------

loc_3ED:				; CODE XREF: _X509V3_add1_i2d+39j
		cmp	esi, 5
		jnz	short loc_41B
		push	ebx
		push	dword ptr [edi]
		call	_sk_delete
		add	esp, 8
		neg	eax
		sbb	eax, eax
		and	eax, 2
		pop	edi
		pop	esi
		dec	eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_409:				; CODE XREF: _X509V3_add1_i2d+14j
					; _X509V3_add1_i2d+29j
		cmp	esi, 3
		jz	loc_49E
		cmp	esi, 5
		jz	loc_49E

loc_41B:				; CODE XREF: _X509V3_add1_i2d+48j
		push	[esp+0Ch+arg_8]
		push	[esp+10h+arg_C]
		push	[esp+14h+arg_4]
		call	_X509V3_EXT_i2d
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_446
		push	151h
		push	offset ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ ; ".\\crypto\\x509v3\\v3_lib.c"
		push	90h ; ''
		jmp	short loc_4B5
; ---------------------------------------------------------------------------

loc_446:				; CODE XREF: _X509V3_add1_i2d+8Bj
		test	ebx, ebx
		js	short loc_470
		push	ebx
		push	dword ptr [edi]
		call	_sk_value
		push	eax
		call	_X509_EXTENSION_free
		push	esi
		push	ebx
		push	dword ptr [edi]
		call	_sk_set
		add	esp, 18h
		neg	eax
		sbb	eax, eax
		and	eax, 2
		pop	edi
		pop	esi
		dec	eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_470:				; CODE XREF: _X509V3_add1_i2d+A0j
		cmp	dword ptr [edi], 0
		jnz	short loc_487
		call	_sk_new_null
		mov	[edi], eax
		test	eax, eax
		jnz	short loc_487
		pop	edi
		pop	esi
		or	eax, 0FFFFFFFFh
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_487:				; CODE XREF: _X509V3_add1_i2d+CBj
					; _X509V3_add1_i2d+D6j
		push	esi
		push	dword ptr [edi]
		call	_sk_push
		add	esp, 8
		neg	eax
		sbb	eax, eax
		and	eax, 2
		pop	edi
		pop	esi
		dec	eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_49E:				; CODE XREF: _X509V3_add1_i2d+64j
					; _X509V3_add1_i2d+6Dj
		mov	eax, 66h ; 'f'

$err$20:				; CODE XREF: _X509V3_add1_i2d+40j
		test	byte ptr [esp+0Ch+arg_10], 10h
		jnz	short loc_4C4
		push	167h
		push	offset ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ ; ".\\crypto\\x509v3\\v3_lib.c"
		push	eax

loc_4B5:				; CODE XREF: _X509V3_add1_i2d+9Cj
		push	8Ch ; ''
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h

loc_4C4:				; CODE XREF: _X509V3_add1_i2d+100j
		pop	edi
		pop	esi
		xor	eax, eax
		pop	ebx
		retn
_X509V3_add1_i2d endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4CCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_add_standard_extensions
_X509V3_add_standard_extensions	proc near
		mov	eax, 1
		retn
_X509V3_add_standard_extensions	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509V3_get_d2i
_X509V3_get_d2i	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		mov	ebp, [esp+4+arg_0]
		push	edi
		xor	edi, edi
		test	ebp, ebp
		jnz	short loc_501
		mov	eax, [esp+8+arg_C]
		test	eax, eax
		jz	short loc_4EE
		mov	dword ptr [eax], 0FFFFFFFFh

loc_4EE:				; CODE XREF: _X509V3_get_d2i+12j
		mov	eax, [esp+8+arg_8]
		test	eax, eax
		jz	short loc_4FC
		mov	dword ptr [eax], 0FFFFFFFFh

loc_4FC:				; CODE XREF: _X509V3_get_d2i+20j
		pop	edi
		xor	eax, eax
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_501:				; CODE XREF: _X509V3_get_d2i+Aj
		push	ebx
		mov	ebx, [esp+0Ch+arg_C]
		push	esi
		test	ebx, ebx
		jz	short loc_517
		mov	esi, [ebx]
		mov	eax, edi
		add	esi, 1
		cmovs	esi, eax
		jmp	short loc_519
; ---------------------------------------------------------------------------

loc_517:				; CODE XREF: _X509V3_get_d2i+35j
		xor	esi, esi

loc_519:				; CODE XREF: _X509V3_get_d2i+41j
		push	ebp
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jge	loc_5F4

loc_52A:				; CODE XREF: _X509V3_get_d2i+8Aj
		push	esi
		push	ebp
		call	_sk_value
		mov	ebp, eax
		push	dword ptr [ebp+0]
		call	_OBJ_obj2nid
		add	esp, 0Ch
		cmp	eax, [esp+10h+arg_4]
		jnz	short loc_54E
		test	ebx, ebx
		jnz	short loc_57B
		test	edi, edi
		jnz	short loc_562
		mov	edi, ebp

loc_54E:				; CODE XREF: _X509V3_get_d2i+6Ej
		mov	ebp, [esp+10h+arg_0]
		inc	esi
		push	ebp
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_52A
		jmp	short loc_57F
; ---------------------------------------------------------------------------

loc_562:				; CODE XREF: _X509V3_get_d2i+76j
		mov	eax, [esp+10h+arg_8]
		test	eax, eax
		jz	loc_60C
		pop	esi
		pop	ebx
		pop	edi
		mov	dword ptr [eax], 0FFFFFFFEh
		xor	eax, eax
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_57B:				; CODE XREF: _X509V3_get_d2i+72j
		mov	[ebx], esi
		mov	edi, ebp

loc_57F:				; CODE XREF: _X509V3_get_d2i+8Cj
		test	edi, edi
		jz	short loc_5F4
		mov	esi, [esp+10h+arg_8]
		test	esi, esi
		jz	short loc_596
		push	edi
		call	_X509_EXTENSION_get_critical
		add	esp, 4
		mov	[esi], eax

loc_596:				; CODE XREF: _X509V3_get_d2i+B5j
		push	dword ptr [edi]
		call	_OBJ_obj2nid
		add	esp, 4
		test	eax, eax
		jz	short loc_60C
		push	eax
		call	_X509V3_EXT_get_nid
		add	esp, 4
		test	eax, eax
		jz	short loc_60C
		mov	edx, [edi+8]
		mov	ecx, [edx+8]
		mov	[esp+10h+arg_0], ecx
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	short loc_5DE
		call	ecx
		push	eax
		mov	eax, [edi+8]
		push	dword ptr [eax]
		lea	eax, [esp+18h+arg_0]
		push	eax
		push	0
		call	_ASN1_item_d2i
		add	esp, 10h
		pop	esi
		pop	ebx
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_5DE:				; CODE XREF: _X509V3_get_d2i+ECj
		push	dword ptr [edx]
		mov	eax, [eax+14h]
		lea	ecx, [esp+14h+arg_0]
		push	ecx
		push	0
		call	eax
		add	esp, 0Ch
		pop	esi
		pop	ebx
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_5F4:				; CODE XREF: _X509V3_get_d2i+50j
					; _X509V3_get_d2i+ADj
		test	ebx, ebx
		jz	short loc_5FE
		mov	dword ptr [ebx], 0FFFFFFFFh

loc_5FE:				; CODE XREF: _X509V3_get_d2i+122j
		mov	eax, [esp+10h+arg_8]
		test	eax, eax
		jz	short loc_60C
		mov	dword ptr [eax], 0FFFFFFFFh

loc_60C:				; CODE XREF: _X509V3_get_d2i+94j
					; _X509V3_get_d2i+CEj ...
		pop	esi
		pop	ebx
		pop	edi
		xor	eax, eax
		pop	ebp
		retn
_X509V3_get_d2i	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 614h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ext_cmp	proc near		; DATA XREF: _X509V3_EXT_add+9o
					; _X509V3_EXT_add_list+19o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+arg_4]
		mov	ecx, [eax]
		mov	eax, [edx]
		sub	eax, [ecx]
		retn
_ext_cmp	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 628h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ext_cmp_BSEARCH_CMP_FN	proc near	; DATA XREF: _OBJ_bsearch_exto
					; _X509V3_EXT_get_nid:loc_34Fo

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+arg_4]
		mov	ecx, [eax]
		mov	eax, [edx]
		sub	eax, [ecx]
		retn
_ext_cmp_BSEARCH_CMP_FN	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 63Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ext_list_free	proc near		; DATA XREF: _X509V3_EXT_cleanupo

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		test	byte ptr [eax+4], 1
		jz	short locret_64F
		mov	[esp+arg_0], eax
		jmp	_CRYPTO_free
; ---------------------------------------------------------------------------

locret_64F:				; CODE XREF: _ext_list_free+8j
		retn
_ext_list_free	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 650h
; COMDAT (pick any)
		public ??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@
; `string'
??_C@_0BJ@EPBCLIJB@?4?2crypto?2x509v3?2v3_lib?4c?$AA@ db '.\crypto\x509v3\v3_lib.c',0
					; DATA XREF: _X509V3_EXT_add:loc_E9o
					; _X509V3_EXT_add_alias+18o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _v3_bcons:near	; DATA XREF: .data:00000034o
		extrn _v3_nscert:near	; DATA XREF: .data:_standard_extso
		extrn _v3_key_usage:near ; DATA	XREF: .data:00000024o
		extrn _v3_ext_ku:near	; DATA XREF: .data:00000048o
		extrn _v3_pkey_usage_period:near ; DATA	XREF: .data:00000028o
		extrn _v3_sxnet:near	; DATA XREF: .data:00000058o
		extrn _v3_info:near	; DATA XREF: .data:0000005Co
		extrn _v3_sinfo:near	; DATA XREF: .data:00000078o
		extrn _v3_ns_ia5_list:near ; DATA XREF:	.data:00000004o
					; .data:00000008o ...
		extrn _v3_alt:near	; DATA XREF: .data:0000002Co
					; .data:00000030o ...
		extrn _v3_skey_id:near	; DATA XREF: .data:00000020o
		extrn _v3_akey_id:near	; DATA XREF: .data:00000040o
		extrn _v3_crl_num:near	; DATA XREF: .data:00000038o
		extrn _v3_crl_reason:near ; DATA XREF: .data:00000050o
		extrn _v3_crl_invdate:near ; DATA XREF:	.data:00000054o
		extrn _v3_delta_crl:near ; DATA	XREF: .data:0000004Co
		extrn _v3_cpols:near	; DATA XREF: .data:0000003Co
		extrn _v3_crld:near	; DATA XREF: .data:00000044o
		extrn _v3_freshest_crl:near ; DATA XREF: .data:0000009Co
		extrn _v3_ocsp_nonce:near ; DATA XREF: .data:00000060o
		extrn _v3_ocsp_accresp:near ; DATA XREF: .data:00000068o
		extrn _v3_ocsp_acutoff:near ; DATA XREF: .data:00000070o
		extrn _v3_ocsp_crlid:near ; DATA XREF: .data:00000064o
		extrn _v3_ocsp_nocheck:near ; DATA XREF: .data:0000006Co
		extrn _v3_ocsp_serviceloc:near ; DATA XREF: .data:00000074o
		extrn _v3_crl_hold:near	; DATA XREF: .data:00000080o
		extrn _v3_pci:near	; DATA XREF: .data:00000084o
		extrn _v3_policy_mappings:near ; DATA XREF: .data:0000008Co
		extrn _v3_policy_constraints:near ; DATA XREF: .data:0000007Co
		extrn _v3_name_constraints:near	; DATA XREF: .data:00000088o
		extrn _v3_inhibit_anyp:near ; DATA XREF: .data:00000090o
		extrn _v3_idp:near	; DATA XREF: .data:00000094o
		extrn _v3_ct_scts:near	; DATA XREF: .data:000000A0o
					; .data:000000A4o
		extrn _sk_num:near	; CODE XREF: _X509V3_get_d2i+46p
					; _X509V3_get_d2i+80p
		extrn _sk_value:near	; CODE XREF: _X509V3_EXT_get_nid+6Bp
					; _X509V3_add1_i2d+A5p	...
		extrn _sk_set:near	; CODE XREF: _X509V3_add1_i2d+B4p
		extrn _sk_new:near	; CODE XREF: _X509V3_EXT_add+Ep
					; _X509V3_EXT_add_list+1Ep
		extrn _sk_new_null:near	; CODE XREF: _X509V3_add1_i2d+CDp
		extrn _sk_pop_free:near	; CODE XREF: _X509V3_EXT_cleanup+Bp
		extrn _sk_delete:near	; CODE XREF: _X509V3_add1_i2d+4Dp
		extrn _sk_find:near	; CODE XREF: _X509V3_EXT_get_nid+57p
		extrn _sk_push:near	; CODE XREF: _X509V3_EXT_add+3Cp
					; _X509V3_EXT_add_list+31p ...
		extrn _CRYPTO_malloc:near ; CODE XREF: _X509V3_EXT_add_alias+3Bp
		extrn _CRYPTO_free:near	; CODE XREF: _ext_list_free+Ej
		extrn _ERR_put_error:near ; CODE XREF: _X509V3_EXT_add+2Cp
					; _X509V3_EXT_add_alias+23p ...
		extrn _ASN1_item_free:near ; CODE XREF:	_X509V3_EXT_free+25p
		extrn _ASN1_item_d2i:near ; CODE XREF: _X509V3_EXT_d2i+40p
					; _X509V3_get_d2i+FDp
		extrn _OBJ_obj2nid:near	; CODE XREF: _X509V3_EXT_d2i+7p
					; _X509V3_EXT_get+6p ...
		extrn _OBJ_bsearch_:near ; CODE	XREF: _OBJ_bsearch_ext+13p
					; _X509V3_EXT_get_nid+36p
		extrn _X509_EXTENSION_free:near	; CODE XREF: _X509V3_add1_i2d+ABp
		extrn _X509v3_get_ext_by_NID:near ; CODE XREF: _X509V3_add1_i2d+1Dp
		extrn _X509_EXTENSION_get_critical:near	; CODE XREF: _X509V3_get_d2i+B8p
		extrn _X509V3_EXT_i2d:near ; CODE XREF:	_X509V3_add1_i2d+7Fp
		extrn __chkstk:near	; CODE XREF: _X509V3_EXT_get_nid+5p


		end

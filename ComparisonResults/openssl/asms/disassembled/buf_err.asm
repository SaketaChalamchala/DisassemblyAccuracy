;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	9051FBC8E228BD64BD830CFEC1F46981
; Input	CRC32 :	33FD9A50

; File Name   :	C:\compspace\Diff\openssl\obj\buf_err.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
_BUF_str_functs	dd 7067000h		; DATA XREF: _ERR_load_BUF_stringsr
					; _ERR_load_BUF_strings+12o
		dd offset ??_C@_0L@HOFEILPP@BUF_memdup?$AA@ ; "BUF_memdup"
		dd 7064000h
		dd offset ??_C@_0N@KABFJIMM@BUF_MEM_grow?$AA@ ;	"BUF_MEM_grow"
		dd 7069000h
		dd offset ??_C@_0BD@IAEPNGDK@BUF_MEM_grow_clean?$AA@ ; "BUF_MEM_grow_clean"
		dd 7065000h
		dd offset ??_C@_0M@DHGBDCFJ@BUF_MEM_new?$AA@ ; "BUF_MEM_new"
		dd 7066000h
		dd offset ??_C@_0L@GDIPLNAB@BUF_strdup?$AA@ ; "BUF_strdup"
		dd 7068000h
		dd offset ??_C@_0M@PMIFCMGN@BUF_strndup?$AA@ ; "BUF_strndup"
		dd 2 dup(0)
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
; COMDAT (pick any)
		public ??_C@_0L@HOFEILPP@BUF_memdup?$AA@
; `string'
??_C@_0L@HOFEILPP@BUF_memdup?$AA@ db 'BUF_memdup',0 ; DATA XREF: .data:00000004o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
; COMDAT (pick any)
		public ??_C@_0N@KABFJIMM@BUF_MEM_grow?$AA@
; `string'
??_C@_0N@KABFJIMM@BUF_MEM_grow?$AA@ db 'BUF_MEM_grow',0 ; DATA XREF: .data:0000000Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
; COMDAT (pick any)
		public ??_C@_0BD@IAEPNGDK@BUF_MEM_grow_clean?$AA@
; `string'
??_C@_0BD@IAEPNGDK@BUF_MEM_grow_clean?$AA@ db 'BUF_MEM_grow_clean',0
					; DATA XREF: .data:00000014o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
; COMDAT (pick any)
		public ??_C@_0M@DHGBDCFJ@BUF_MEM_new?$AA@
; `string'
??_C@_0M@DHGBDCFJ@BUF_MEM_new?$AA@ db 'BUF_MEM_new',0 ; DATA XREF: .data:0000001Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
; COMDAT (pick any)
		public ??_C@_0L@GDIPLNAB@BUF_strdup?$AA@
; `string'
??_C@_0L@GDIPLNAB@BUF_strdup?$AA@ db 'BUF_strdup',0 ; DATA XREF: .data:00000024o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
; COMDAT (pick any)
		public ??_C@_0M@PMIFCMGN@BUF_strndup?$AA@
; `string'
??_C@_0M@PMIFCMGN@BUF_strndup?$AA@ db 'BUF_strndup',0 ; DATA XREF: .data:0000002Co
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 8Ch
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
_BUF_str_reasons dd 2 dup(?)		; DATA XREF: _ERR_load_BUF_strings+1Do
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 94h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ERR_load_BUF_strings
_ERR_load_BUF_strings proc near
		push	_BUF_str_functs
		call	_ERR_func_error_string
		add	esp, 4
		test	eax, eax
		jnz	short locret_C0
		push	offset _BUF_str_functs
		push	eax
		call	_ERR_load_strings
		push	offset _BUF_str_reasons
		push	0
		call	_ERR_load_strings
		add	esp, 10h

locret_C0:				; CODE XREF: _ERR_load_BUF_strings+10j
		retn
_ERR_load_BUF_strings endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_func_error_string:near ; CODE XREF: _ERR_load_BUF_strings+6p
		extrn _ERR_load_strings:near ; CODE XREF: _ERR_load_BUF_strings+18p
					; _ERR_load_BUF_strings+24p


		end

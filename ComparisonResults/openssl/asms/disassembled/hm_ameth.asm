;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	5CA300A5030EDD6599A2EE8290B4BB05
; Input	CRC32 :	2D6FCB6A

; File Name   :	C:\compspace\Diff\openssl\obj\hm_ameth.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_hmac_size	proc near		; DATA XREF: .rdata:00000124o
		mov	eax, 40h ; '@'
		retn
_hmac_size	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_hmac_key_free	proc near		; DATA XREF: .rdata:00000148o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		push	esi
		mov	esi, [eax+14h]
		test	esi, esi
		jz	short loc_2F
		mov	eax, [esi+8]
		test	eax, eax
		jz	short loc_26
		push	dword ptr [esi]
		push	eax
		call	_OPENSSL_cleanse
		add	esp, 8

loc_26:					; CODE XREF: _hmac_key_free+11j
		push	esi
		call	_ASN1_OCTET_STRING_free
		add	esp, 4

loc_2F:					; CODE XREF: _hmac_key_free+Aj
		pop	esi
		retn
_hmac_key_free	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 34h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_hmac_pkey_ctrl	proc near		; DATA XREF: .rdata:0000014Co

arg_4		= dword	ptr  8
arg_C		= dword	ptr  10h

		cmp	[esp+arg_4], 3
		jz	short loc_41
		mov	eax, 0FFFFFFFEh
		retn
; ---------------------------------------------------------------------------

loc_41:					; CODE XREF: _hmac_pkey_ctrl+5j
		mov	eax, [esp+arg_C]
		mov	dword ptr [eax], 2A0h
		mov	eax, 1
		retn
_hmac_pkey_ctrl	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 54h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_old_hmac_decode proc near		; DATA XREF: .rdata:00000150o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		call	_ASN1_OCTET_STRING_new
		mov	esi, eax
		test	esi, esi
		jz	short $err$7
		mov	ecx, [esp+4+arg_4]
		push	[esp+4+arg_8]
		push	dword ptr [ecx]
		push	esi
		call	_ASN1_OCTET_STRING_set
		add	esp, 0Ch
		test	eax, eax
		jz	short $err$7
		push	esi
		push	357h
		push	[esp+0Ch+arg_0]
		call	_EVP_PKEY_assign
		add	esp, 0Ch
		test	eax, eax
		jz	short $err$7
		mov	eax, 1
		pop	esi
		retn
; ---------------------------------------------------------------------------

$err$7:					; CODE XREF: _old_hmac_decode+Aj
					; _old_hmac_decode+21j	...
		push	esi
		call	_ASN1_OCTET_STRING_free
		add	esp, 4
		xor	eax, eax
		pop	esi
		retn
_old_hmac_decode endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_old_hmac_encode proc near		; DATA XREF: .rdata:00000154o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	esi
		push	edi
		mov	edi, [esp+8+arg_4]
		mov	esi, [eax+14h]
		test	edi, edi
		jz	short loc_EF
		cmp	dword ptr [edi], 0
		push	ebx
		jnz	short loc_D2
		push	7Fh ; ''
		push	offset ??_C@_0BJ@JJDDMDFO@?4?2crypto?2hmac?2hm_ameth?4c?$AA@ ; ".\\crypto\\hmac\\hm_ameth.c"
		push	dword ptr [esi]
		call	_CRYPTO_malloc
		add	esp, 0Ch
		mov	[edi], eax
		xor	ebx, ebx
		jmp	short loc_D7
; ---------------------------------------------------------------------------

loc_D2:					; CODE XREF: _old_hmac_encode+15j
		mov	ebx, 1

loc_D7:					; CODE XREF: _old_hmac_encode+2Cj
		push	dword ptr [esi]	; Size
		push	dword ptr [esi+8] ; Src
		push	dword ptr [edi]	; Dst
		call	_memcpy
		add	esp, 0Ch
		test	ebx, ebx
		pop	ebx
		jz	short loc_EF
		mov	ecx, [esi]
		add	[edi], ecx

loc_EF:					; CODE XREF: _old_hmac_encode+Fj
					; _old_hmac_encode+45j
		mov	eax, [esi]
		pop	edi
		pop	esi
		retn
_old_hmac_encode endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public _hmac_asn1_meth
_hmac_asn1_meth	dd 2 dup(357h),	0
		dd offset ??_C@_04JCCMGALL@HMAC?$AA@ ; "HMAC"
		dd offset ??_C@_0BE@BABEGANF@OpenSSL?5HMAC?5method?$AA@	; "OpenSSL HMAC	method"
		dd 7 dup(0)
		dd offset _hmac_size
		dd 8 dup(0)
		dd offset _hmac_key_free
		dd offset _hmac_pkey_ctrl
		dd offset _old_hmac_decode
		dd offset _old_hmac_encode
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 160h
; COMDAT (pick any)
		public ??_C@_04JCCMGALL@HMAC?$AA@
; `string'
??_C@_04JCCMGALL@HMAC?$AA@ db 'HMAC',0  ; DATA XREF: .rdata:00000100o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 168h
; COMDAT (pick any)
		public ??_C@_0BE@BABEGANF@OpenSSL?5HMAC?5method?$AA@
; `string'
??_C@_0BE@BABEGANF@OpenSSL?5HMAC?5method?$AA@ db 'OpenSSL HMAC method',0
					; DATA XREF: .rdata:00000104o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 17Ch
; COMDAT (pick any)
		public ??_C@_0BJ@JJDDMDFO@?4?2crypto?2hmac?2hm_ameth?4c?$AA@
; `string'
??_C@_0BJ@JJDDMDFO@?4?2crypto?2hmac?2hm_ameth?4c?$AA@ db '.\crypto\hmac\hm_ameth.c',0
					; DATA XREF: _old_hmac_encode+19o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _CRYPTO_malloc:near ; CODE XREF: _old_hmac_encode+20p
		extrn _OPENSSL_cleanse:near ; CODE XREF: _hmac_key_free+16p
		extrn _ASN1_OCTET_STRING_new:near ; CODE XREF: _old_hmac_decode+1p
		extrn _ASN1_OCTET_STRING_free:near ; CODE XREF:	_hmac_key_free+1Fp
					; _old_hmac_decode+41p
		extrn _ASN1_OCTET_STRING_set:near ; CODE XREF: _old_hmac_decode+17p
		extrn _EVP_PKEY_assign:near ; CODE XREF: _old_hmac_decode+2Dp
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _old_hmac_encode+3Ap


		end

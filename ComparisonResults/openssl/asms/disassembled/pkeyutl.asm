;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	DE05E6A2D2AEB8BB8E0E224C00D08A23
; Input	CRC32 :	85CA94E6

; File Name   :	C:\compspace\Diff\openssl\obj\pkeyutl.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_do_keyop	proc near		; CODE XREF: _pkeyutl_main+B50p
					; _pkeyutl_main+B98p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, [esp+arg_4]
		cmp	eax, 100h
		jg	short loc_71
		jz	short loc_54
		cmp	eax, 8
		jz	short loc_37
		cmp	eax, 20h ; ' '
		jnz	short loc_34
		push	[esp+arg_14]
		push	[esp+4+arg_10]
		push	[esp+8+arg_C]
		push	[esp+0Ch+arg_8]
		push	[esp+10h+arg_0]
		call	_EVP_PKEY_verify_recover
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_34:					; CODE XREF: _do_keyop+15j
					; _do_keyop+7Dj
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_37:					; CODE XREF: _do_keyop+10j
		push	[esp+arg_14]
		push	[esp+4+arg_10]
		push	[esp+8+arg_C]
		push	[esp+0Ch+arg_8]
		push	[esp+10h+arg_0]
		call	_EVP_PKEY_sign
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_54:					; CODE XREF: _do_keyop+Bj
		push	[esp+arg_14]
		push	[esp+4+arg_10]
		push	[esp+8+arg_C]
		push	[esp+0Ch+arg_8]
		push	[esp+10h+arg_0]
		call	_EVP_PKEY_encrypt
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_71:					; CODE XREF: _do_keyop+9j
		cmp	eax, 200h
		jz	short loc_94
		cmp	eax, 400h
		jnz	short loc_34
		push	[esp+arg_C]
		push	[esp+4+arg_8]
		push	[esp+8+arg_0]
		call	_EVP_PKEY_derive
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_94:					; CODE XREF: _do_keyop+76j
		push	[esp+arg_14]
		push	[esp+4+arg_10]
		push	[esp+8+arg_C]
		push	[esp+0Ch+arg_8]
		push	[esp+10h+arg_0]
		call	_EVP_PKEY_decrypt
		add	esp, 14h
		retn
_do_keyop	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_init_ctx	proc near		; CODE XREF: _pkeyutl_main+7FBp

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		mov	eax, 4
		call	__chkstk
		push	ebx
		mov	ebx, [esp+8+arg_C]
		push	ebp
		push	esi
		push	edi
		mov	edi, [esp+14h+arg_14]
		xor	esi, esi
		xor	ebp, ebp
		mov	[esp+14h+var_4], esi
		cmp	edi, 8
		jz	short loc_E7
		cmp	edi, 200h
		jz	short loc_E7
		cmp	edi, 400h
		jnz	short loc_104

loc_E7:					; CODE XREF: _init_ctx+21j
					; _init_ctx+29j
		cmp	ebx, 1
		jz	short loc_104
		push	offset ??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@ ; "A private key is needed for this operat"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	$end$31
; ---------------------------------------------------------------------------

loc_104:				; CODE XREF: _init_ctx+31j
					; _init_ctx+36j
		push	0
		lea	eax, [esp+18h+var_4]
		push	eax
		push	0
		push	[esp+20h+arg_10]
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 14h
		test	eax, eax
		jnz	short loc_13B
		push	offset ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; "Error getting password\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	$end$31
; ---------------------------------------------------------------------------

loc_13B:				; CODE XREF: _init_ctx+6Dj
		mov	eax, [esp+14h+arg_18]
		sub	ebx, 1
		jz	short loc_1A3
		sub	ebx, 1
		jz	short loc_184
		sub	ebx, 1
		jnz	short loc_1C7
		push	offset ??_C@_0M@KDOEPPNO@Certificate?$AA@ ; "Certificate"
		push	eax
		push	ebx
		push	[esp+20h+arg_8]
		push	[esp+24h+arg_4]
		push	dword ptr ds:_bio_err
		call	_load_cert
		mov	ebx, eax
		add	esp, 18h
		test	ebx, ebx
		jz	short loc_1C7
		push	ebx
		call	_X509_get_pubkey
		push	ebx
		mov	ebp, eax
		call	_X509_free
		add	esp, 8
		jmp	short loc_1C7
; ---------------------------------------------------------------------------

loc_184:				; CODE XREF: _init_ctx+93j
		push	offset ??_C@_0L@KEAMIOLD@Public?5Key?$AA@ ; "Public Key"
		push	eax
		push	0
		push	0
		push	[esp+24h+arg_8]
		push	[esp+28h+arg_4]
		push	dword ptr ds:_bio_err
		call	_load_pubkey
		jmp	short loc_1C2
; ---------------------------------------------------------------------------

loc_1A3:				; CODE XREF: _init_ctx+8Ej
		push	offset ??_C@_0M@NBDOOMPD@Private?5Key?$AA@ ; "Private Key"
		push	eax
		push	[esp+1Ch+var_4]
		push	0
		push	[esp+24h+arg_8]
		push	[esp+28h+arg_4]
		push	dword ptr ds:_bio_err
		call	_load_key

loc_1C2:				; CODE XREF: _init_ctx+EDj
		mov	ebp, eax
		add	esp, 1Ch

loc_1C7:				; CODE XREF: _init_ctx+98j
					; _init_ctx+BBj ...
		push	ebp
		call	_EVP_PKEY_size
		mov	ecx, [esp+18h+arg_0]
		add	esp, 4
		mov	[ecx], eax
		test	ebp, ebp
		jz	$end$31
		cmp	[esp+14h+arg_1C], esi
		mov	eax, esi
		cmovnz	eax, [esp+14h+arg_18]
		push	eax
		push	ebp
		call	_EVP_PKEY_CTX_new
		push	ebp
		mov	esi, eax
		call	_EVP_PKEY_free
		add	esp, 0Ch
		test	esi, esi
		jz	short $end$31
		cmp	edi, 100h
		jg	short loc_238
		jz	short loc_230
		cmp	edi, 8
		jz	short loc_228
		cmp	edi, 10h
		jz	short loc_220
		cmp	edi, 20h ; ' '
		jnz	short loc_25D
		push	esi
		call	_EVP_PKEY_verify_recover_init
		jmp	short loc_256
; ---------------------------------------------------------------------------

loc_220:				; CODE XREF: _init_ctx+15Dj
		push	esi
		call	_EVP_PKEY_verify_init
		jmp	short loc_256
; ---------------------------------------------------------------------------

loc_228:				; CODE XREF: _init_ctx+158j
		push	esi
		call	_EVP_PKEY_sign_init
		jmp	short loc_256
; ---------------------------------------------------------------------------

loc_230:				; CODE XREF: _init_ctx+153j
		push	esi
		call	_EVP_PKEY_encrypt_init
		jmp	short loc_256
; ---------------------------------------------------------------------------

loc_238:				; CODE XREF: _init_ctx+151j
		cmp	edi, 200h
		jz	short loc_250
		cmp	edi, 400h
		jnz	short loc_25D
		push	esi
		call	_EVP_PKEY_derive_init
		jmp	short loc_256
; ---------------------------------------------------------------------------

loc_250:				; CODE XREF: _init_ctx+18Aj
		push	esi
		call	_EVP_PKEY_decrypt_init

loc_256:				; CODE XREF: _init_ctx+16Aj
					; _init_ctx+172j ...
		add	esp, 4
		test	eax, eax
		jg	short $end$31

loc_25D:				; CODE XREF: _init_ctx+162j
					; _init_ctx+192j
		push	esi
		call	_EVP_PKEY_CTX_free
		add	esp, 4
		xor	esi, esi

$end$31:				; CODE XREF: _init_ctx+4Bj
					; _init_ctx+82j ...
		mov	eax, [esp+14h+var_4]
		test	eax, eax
		jz	short loc_279
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_279:				; CODE XREF: _init_ctx+1BAj
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
_init_ctx	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 284h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _pkeyutl_main
_pkeyutl_main	proc near

var_57		= byte ptr -57h
var_56		= byte ptr -56h
var_55		= byte ptr -55h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 58h ; 'X'
		call	__chkstk
		push	ebx
		xor	eax, eax
		mov	[esp+5Ch+var_38], 0
		push	ebp
		push	esi
		push	edi
		xor	ebx, ebx
		mov	[esp+68h+var_14], eax
		xor	edi, edi
		mov	[esp+68h+var_18], ebx
		mov	ebx, [esp+68h+arg_4]
		xor	cl, cl
		mov	[esp+68h+var_28], edi
		xor	ebp, ebp
		mov	edi, [esp+68h+arg_0]
		add	ebx, 4
		mov	[esp+68h+var_10], eax
		dec	edi
		mov	[esp+68h+var_57], cl
		mov	[esp+68h+var_55], cl
		mov	[esp+68h+var_56], cl
		xor	ecx, ecx
		mov	[esp+68h+var_44], eax
		mov	[esp+68h+var_4], eax
		mov	[esp+68h+var_30], eax
		mov	[esp+68h+var_40], eax
		mov	[esp+68h+var_34], eax
		mov	[esp+68h+var_48], eax
		mov	[esp+68h+var_50], eax
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+68h+var_54], 8
		mov	[esp+68h+var_4C], 1
		mov	[esp+68h+var_20], 3
		mov	[esp+68h+var_1C], 3
		mov	[esp+68h+var_24], ecx
		mov	[esp+68h+var_C], 0FFFFFFFFh
		mov	[esp+68h+var_2C], ecx
		mov	[esp+68h+var_8], 0FFFFFFFFh
		mov	[esp+68h+var_3C], ebp
		test	eax, eax
		jnz	short loc_349
		push	eax
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	dword ptr ds:_bio_err, eax

loc_349:				; CODE XREF: _pkeyutl_main+A9j
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_EB8
		call	_ERR_load_crypto_strings
		call	_OPENSSL_add_all_algorithms_noconf
		cmp	edi, 1
		jl	loc_EB3
		nop	dword ptr [eax+eax+00h]

loc_374:				; CODE XREF: _pkeyutl_main+7C1j
		mov	esi, [ebx]
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_384:				; CODE XREF: _pkeyutl_main+11Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3A4
		test	dl, dl
		jz	short loc_3A0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3A4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_384

loc_3A0:				; CODE XREF: _pkeyutl_main+108j
		xor	eax, eax
		jmp	short loc_3A9
; ---------------------------------------------------------------------------

loc_3A4:				; CODE XREF: _pkeyutl_main+104j
					; _pkeyutl_main+110j
		sbb	eax, eax
		or	eax, 1

loc_3A9:				; CODE XREF: _pkeyutl_main+11Ej
		test	eax, eax
		jnz	short loc_3C6
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+68h+var_14], eax
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_3C6:				; CODE XREF: _pkeyutl_main+127j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_3D4:				; CODE XREF: _pkeyutl_main+16Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3F4
		test	dl, dl
		jz	short loc_3F0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3F4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3D4

loc_3F0:				; CODE XREF: _pkeyutl_main+158j
		xor	eax, eax
		jmp	short loc_3F9
; ---------------------------------------------------------------------------

loc_3F4:				; CODE XREF: _pkeyutl_main+154j
					; _pkeyutl_main+160j
		sbb	eax, eax
		or	eax, 1

loc_3F9:				; CODE XREF: _pkeyutl_main+16Ej
		test	eax, eax
		jnz	short loc_416
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+68h+var_10], eax
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_416:				; CODE XREF: _pkeyutl_main+177j
		mov	ecx, offset ??_C@_08EKFDLJMA@?9sigfile?$AA@ ; "-sigfile"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_424:				; CODE XREF: _pkeyutl_main+1BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_444
		test	dl, dl
		jz	short loc_440
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_444
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_424

loc_440:				; CODE XREF: _pkeyutl_main+1A8j
		xor	eax, eax
		jmp	short loc_449
; ---------------------------------------------------------------------------

loc_444:				; CODE XREF: _pkeyutl_main+1A4j
					; _pkeyutl_main+1B0j
		sbb	eax, eax
		or	eax, 1

loc_449:				; CODE XREF: _pkeyutl_main+1BEj
		test	eax, eax
		jnz	short loc_466
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+68h+var_18], eax
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_466:				; CODE XREF: _pkeyutl_main+1C7j
		mov	ecx, offset ??_C@_06JJMGFEBF@?9inkey?$AA@ ; "-inkey"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_474:				; CODE XREF: _pkeyutl_main+20Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_494
		test	dl, dl
		jz	short loc_490
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_494
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_474

loc_490:				; CODE XREF: _pkeyutl_main+1F8j
		xor	eax, eax
		jmp	short loc_499
; ---------------------------------------------------------------------------

loc_494:				; CODE XREF: _pkeyutl_main+1F4j
					; _pkeyutl_main+200j
		sbb	eax, eax
		or	eax, 1

loc_499:				; CODE XREF: _pkeyutl_main+20Ej
		test	eax, eax
		jnz	short loc_4B6
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+68h+var_48], edx
		jmp	loc_A32
; ---------------------------------------------------------------------------

loc_4B6:				; CODE XREF: _pkeyutl_main+217j
		mov	ecx, offset ??_C@_08JIHLOKEH@?9peerkey?$AA@ ; "-peerkey"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_4C4:				; CODE XREF: _pkeyutl_main+25Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4E4
		test	dl, dl
		jz	short loc_4E0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4E4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4C4

loc_4E0:				; CODE XREF: _pkeyutl_main+248j
		xor	eax, eax
		jmp	short loc_4E9
; ---------------------------------------------------------------------------

loc_4E4:				; CODE XREF: _pkeyutl_main+244j
					; _pkeyutl_main+250j
		sbb	eax, eax
		or	eax, 1

loc_4E9:				; CODE XREF: _pkeyutl_main+25Ej
		test	eax, eax
		jnz	short loc_50A
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		mov	ecx, [ebx+4]
		add	ebx, 4
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_50], ecx
		jmp	loc_A36
; ---------------------------------------------------------------------------

loc_50A:				; CODE XREF: _pkeyutl_main+267j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, esi
		nop	dword ptr [eax]

loc_514:				; CODE XREF: _pkeyutl_main+2AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_534
		test	dl, dl
		jz	short loc_530
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_534
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_514

loc_530:				; CODE XREF: _pkeyutl_main+298j
		xor	eax, eax
		jmp	short loc_539
; ---------------------------------------------------------------------------

loc_534:				; CODE XREF: _pkeyutl_main+294j
					; _pkeyutl_main+2A0j
		sbb	eax, eax
		or	eax, 1

loc_539:				; CODE XREF: _pkeyutl_main+2AEj
		test	eax, eax
		jnz	short loc_556
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+68h+var_24], eax
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_556:				; CODE XREF: _pkeyutl_main+2B7j
		mov	ecx, offset ??_C@_09KDALHBAH@?9peerform?$AA@ ; "-peerform"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_564:				; CODE XREF: _pkeyutl_main+2FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_584
		test	dl, dl
		jz	short loc_580
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_584
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_564

loc_580:				; CODE XREF: _pkeyutl_main+2E8j
		xor	eax, eax
		jmp	short loc_589
; ---------------------------------------------------------------------------

loc_584:				; CODE XREF: _pkeyutl_main+2E4j
					; _pkeyutl_main+2F0j
		sbb	eax, eax
		or	eax, 1

loc_589:				; CODE XREF: _pkeyutl_main+2FEj
		test	eax, eax
		jnz	short loc_5AE
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+68h+var_1C], eax
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_5AE:				; CODE XREF: _pkeyutl_main+307j
		mov	ecx, offset ??_C@_08OAHLMBGP@?9keyform?$AA@ ; "-keyform"
		mov	eax, esi

loc_5B5:				; CODE XREF: _pkeyutl_main+34Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5D5
		test	dl, dl
		jz	short loc_5D1
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5D5
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5B5

loc_5D1:				; CODE XREF: _pkeyutl_main+339j
		xor	eax, eax
		jmp	short loc_5DA
; ---------------------------------------------------------------------------

loc_5D5:				; CODE XREF: _pkeyutl_main+335j
					; _pkeyutl_main+341j
		sbb	eax, eax
		or	eax, 1

loc_5DA:				; CODE XREF: _pkeyutl_main+34Fj
		test	eax, eax
		jnz	short loc_5FF
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+68h+var_20], eax
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_5FF:				; CODE XREF: _pkeyutl_main+358j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi

loc_606:				; CODE XREF: _pkeyutl_main+39Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_626
		test	dl, dl
		jz	short loc_622
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_626
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_606

loc_622:				; CODE XREF: _pkeyutl_main+38Aj
		xor	eax, eax
		jmp	short loc_62B
; ---------------------------------------------------------------------------

loc_626:				; CODE XREF: _pkeyutl_main+386j
					; _pkeyutl_main+392j
		sbb	eax, eax
		or	eax, 1

loc_62B:				; CODE XREF: _pkeyutl_main+3A0j
		test	eax, eax
		jnz	short loc_656
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		add	ebx, 4
		push	eax
		push	dword ptr [ebx]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		add	esp, 0Ch
		mov	[esp+68h+var_28], eax
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_656:				; CODE XREF: _pkeyutl_main+3A9j
		mov	ecx, offset ??_C@_0N@FEJBABNG@?9engine_impl?$AA@ ; "-engine_impl"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_664:				; CODE XREF: _pkeyutl_main+3FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_684
		test	dl, dl
		jz	short loc_680
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_684
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_664

loc_680:				; CODE XREF: _pkeyutl_main+3E8j
		xor	eax, eax
		jmp	short loc_689
; ---------------------------------------------------------------------------

loc_684:				; CODE XREF: _pkeyutl_main+3E4j
					; _pkeyutl_main+3F0j
		sbb	eax, eax
		or	eax, 1

loc_689:				; CODE XREF: _pkeyutl_main+3FEj
		test	eax, eax
		jnz	short loc_69A
		mov	[esp+68h+var_2C], 1
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_69A:				; CODE XREF: _pkeyutl_main+407j
		mov	ecx, offset ??_C@_06NLLOJDKN@?9pubin?$AA@ ; "-pubin"
		mov	eax, esi
		nop	dword ptr [eax]

loc_6A4:				; CODE XREF: _pkeyutl_main+43Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_6C4
		test	dl, dl
		jz	short loc_6C0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_6C4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_6A4

loc_6C0:				; CODE XREF: _pkeyutl_main+428j
		xor	eax, eax
		jmp	short loc_6C9
; ---------------------------------------------------------------------------

loc_6C4:				; CODE XREF: _pkeyutl_main+424j
					; _pkeyutl_main+430j
		sbb	eax, eax
		or	eax, 1

loc_6C9:				; CODE XREF: _pkeyutl_main+43Ej
		test	eax, eax
		jnz	short loc_6E3
		mov	ecx, [esp+68h+var_50]
		mov	eax, 2
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_4C], eax
		jmp	loc_A3A
; ---------------------------------------------------------------------------

loc_6E3:				; CODE XREF: _pkeyutl_main+447j
		mov	ecx, offset ??_C@_07MBPOKNGC@?9certin?$AA@ ; "-certin"
		mov	eax, esi

loc_6EA:				; CODE XREF: _pkeyutl_main+480j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_70A
		test	dl, dl
		jz	short loc_706
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_70A
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_6EA

loc_706:				; CODE XREF: _pkeyutl_main+46Ej
		xor	eax, eax
		jmp	short loc_70F
; ---------------------------------------------------------------------------

loc_70A:				; CODE XREF: _pkeyutl_main+46Aj
					; _pkeyutl_main+476j
		sbb	eax, eax
		or	eax, 1

loc_70F:				; CODE XREF: _pkeyutl_main+484j
		test	eax, eax
		jnz	short loc_729
		mov	ecx, [esp+68h+var_50]
		mov	eax, 3
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_4C], eax
		jmp	loc_A3A
; ---------------------------------------------------------------------------

loc_729:				; CODE XREF: _pkeyutl_main+48Dj
		mov	ecx, offset ??_C@_0L@MFHFHCDC@?9asn1parse?$AA@ ; "-asn1parse"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_734:				; CODE XREF: _pkeyutl_main+4CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_754
		test	dl, dl
		jz	short loc_750
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_754
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_734

loc_750:				; CODE XREF: _pkeyutl_main+4B8j
		xor	eax, eax
		jmp	short loc_759
; ---------------------------------------------------------------------------

loc_754:				; CODE XREF: _pkeyutl_main+4B4j
					; _pkeyutl_main+4C0j
		sbb	eax, eax
		or	eax, 1

loc_759:				; CODE XREF: _pkeyutl_main+4CEj
		test	eax, eax
		jnz	short loc_767
		mov	[esp+68h+var_56], 1
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_767:				; CODE XREF: _pkeyutl_main+4D7j
		mov	ecx, offset ??_C@_08INKHJOD@?9hexdump?$AA@ ; "-hexdump"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_774:				; CODE XREF: _pkeyutl_main+50Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_794
		test	dl, dl
		jz	short loc_790
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_794
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_774

loc_790:				; CODE XREF: _pkeyutl_main+4F8j
		xor	eax, eax
		jmp	short loc_799
; ---------------------------------------------------------------------------

loc_794:				; CODE XREF: _pkeyutl_main+4F4j
					; _pkeyutl_main+500j
		sbb	eax, eax
		or	eax, 1

loc_799:				; CODE XREF: _pkeyutl_main+50Ej
		test	eax, eax
		jnz	short loc_7A7
		mov	[esp+68h+var_55], 1
		jmp	loc_A2E
; ---------------------------------------------------------------------------

loc_7A7:				; CODE XREF: _pkeyutl_main+517j
		mov	ecx, offset ??_C@_05LLLFPBKO@?9sign?$AA@ ; "-sign"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_7B4:				; CODE XREF: _pkeyutl_main+54Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_7D4
		test	dl, dl
		jz	short loc_7D0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_7D4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_7B4

loc_7D0:				; CODE XREF: _pkeyutl_main+538j
		xor	eax, eax
		jmp	short loc_7D9
; ---------------------------------------------------------------------------

loc_7D4:				; CODE XREF: _pkeyutl_main+534j
					; _pkeyutl_main+540j
		sbb	eax, eax
		or	eax, 1

loc_7D9:				; CODE XREF: _pkeyutl_main+54Ej
		test	eax, eax
		jnz	short loc_7F7
		mov	eax, [esp+68h+var_4C]
		mov	esi, 8
		mov	ecx, [esp+68h+var_50]
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_54], esi
		jmp	loc_A3E
; ---------------------------------------------------------------------------

loc_7F7:				; CODE XREF: _pkeyutl_main+557j
		mov	ecx, offset ??_C@_07FILEFCOC@?9verify?$AA@ ; "-verify"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_804:				; CODE XREF: _pkeyutl_main+59Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_824
		test	dl, dl
		jz	short loc_820
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_824
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_804

loc_820:				; CODE XREF: _pkeyutl_main+588j
		xor	eax, eax
		jmp	short loc_829
; ---------------------------------------------------------------------------

loc_824:				; CODE XREF: _pkeyutl_main+584j
					; _pkeyutl_main+590j
		sbb	eax, eax
		or	eax, 1

loc_829:				; CODE XREF: _pkeyutl_main+59Ej
		test	eax, eax
		jnz	short loc_847
		mov	eax, [esp+68h+var_4C]
		mov	esi, 10h
		mov	ecx, [esp+68h+var_50]
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_54], esi
		jmp	loc_A3E
; ---------------------------------------------------------------------------

loc_847:				; CODE XREF: _pkeyutl_main+5A7j
		mov	ecx, offset ??_C@_0P@IBDPBCGD@?9verifyrecover?$AA@ ; "-verifyrecover"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_854:				; CODE XREF: _pkeyutl_main+5EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_874
		test	dl, dl
		jz	short loc_870
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_874
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_854

loc_870:				; CODE XREF: _pkeyutl_main+5D8j
		xor	eax, eax
		jmp	short loc_879
; ---------------------------------------------------------------------------

loc_874:				; CODE XREF: _pkeyutl_main+5D4j
					; _pkeyutl_main+5E0j
		sbb	eax, eax
		or	eax, 1

loc_879:				; CODE XREF: _pkeyutl_main+5EEj
		test	eax, eax
		jnz	short loc_897
		mov	eax, [esp+68h+var_4C]
		mov	esi, 20h ; ' '
		mov	ecx, [esp+68h+var_50]
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_54], esi
		jmp	loc_A3E
; ---------------------------------------------------------------------------

loc_897:				; CODE XREF: _pkeyutl_main+5F7j
		mov	ecx, offset ??_C@_08CNCNOCCN@?9encrypt?$AA@ ; "-encrypt"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_8A4:				; CODE XREF: _pkeyutl_main+63Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_8C4
		test	dl, dl
		jz	short loc_8C0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_8C4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_8A4

loc_8C0:				; CODE XREF: _pkeyutl_main+628j
		xor	eax, eax
		jmp	short loc_8C9
; ---------------------------------------------------------------------------

loc_8C4:				; CODE XREF: _pkeyutl_main+624j
					; _pkeyutl_main+630j
		sbb	eax, eax
		or	eax, 1

loc_8C9:				; CODE XREF: _pkeyutl_main+63Ej
		test	eax, eax
		jnz	short loc_8E7
		mov	eax, [esp+68h+var_4C]
		mov	esi, 100h
		mov	ecx, [esp+68h+var_50]
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_54], esi
		jmp	loc_A3E
; ---------------------------------------------------------------------------

loc_8E7:				; CODE XREF: _pkeyutl_main+647j
		mov	ecx, offset ??_C@_08ODIALGEJ@?9decrypt?$AA@ ; "-decrypt"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_8F4:				; CODE XREF: _pkeyutl_main+68Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_914
		test	dl, dl
		jz	short loc_910
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_914
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_8F4

loc_910:				; CODE XREF: _pkeyutl_main+678j
		xor	eax, eax
		jmp	short loc_919
; ---------------------------------------------------------------------------

loc_914:				; CODE XREF: _pkeyutl_main+674j
					; _pkeyutl_main+680j
		sbb	eax, eax
		or	eax, 1

loc_919:				; CODE XREF: _pkeyutl_main+68Ej
		test	eax, eax
		jnz	short loc_937
		mov	eax, [esp+68h+var_4C]
		mov	esi, 200h
		mov	ecx, [esp+68h+var_50]
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_54], esi
		jmp	loc_A3E
; ---------------------------------------------------------------------------

loc_937:				; CODE XREF: _pkeyutl_main+697j
		mov	ecx, offset ??_C@_07FCKECBCI@?9derive?$AA@ ; "-derive"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_944:				; CODE XREF: _pkeyutl_main+6DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_964
		test	dl, dl
		jz	short loc_960
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_964
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_944

loc_960:				; CODE XREF: _pkeyutl_main+6C8j
		xor	eax, eax
		jmp	short loc_969
; ---------------------------------------------------------------------------

loc_964:				; CODE XREF: _pkeyutl_main+6C4j
					; _pkeyutl_main+6D0j
		sbb	eax, eax
		or	eax, 1

loc_969:				; CODE XREF: _pkeyutl_main+6DEj
		test	eax, eax
		jnz	short loc_987
		mov	eax, [esp+68h+var_4C]
		mov	esi, 400h
		mov	ecx, [esp+68h+var_50]
		mov	edx, [esp+68h+var_48]
		mov	[esp+68h+var_54], esi
		jmp	loc_A3E
; ---------------------------------------------------------------------------

loc_987:				; CODE XREF: _pkeyutl_main+6E7j
		mov	ecx, offset ??_C@_04PGMDFMPL@?9rev?$AA@	; "-rev"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_994:				; CODE XREF: _pkeyutl_main+72Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_9B4
		test	dl, dl
		jz	short loc_9B0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_9B4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_994

loc_9B0:				; CODE XREF: _pkeyutl_main+718j
		xor	eax, eax
		jmp	short loc_9B9
; ---------------------------------------------------------------------------

loc_9B4:				; CODE XREF: _pkeyutl_main+714j
					; _pkeyutl_main+720j
		sbb	eax, eax
		or	eax, 1

loc_9B9:				; CODE XREF: _pkeyutl_main+72Ej
		test	eax, eax
		jnz	short loc_9C4
		mov	[esp+68h+var_57], 1
		jmp	short loc_A2E
; ---------------------------------------------------------------------------

loc_9C4:				; CODE XREF: _pkeyutl_main+737j
		mov	eax, offset ??_C@_08JPLFCIIK@?9pkeyopt?$AA@ ; "-pkeyopt"

loc_9C9:				; CODE XREF: _pkeyutl_main+75Fj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_9E9
		test	cl, cl
		jz	short loc_9E5
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_9E9
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_9C9

loc_9E5:				; CODE XREF: _pkeyutl_main+74Dj
		xor	eax, eax
		jmp	short loc_9EE
; ---------------------------------------------------------------------------

loc_9E9:				; CODE XREF: _pkeyutl_main+749j
					; _pkeyutl_main+755j
		sbb	eax, eax
		or	eax, 1

loc_9EE:				; CODE XREF: _pkeyutl_main+763j
		test	eax, eax
		jnz	loc_EB3
		dec	edi
		cmp	edi, 1
		jl	loc_EB3
		test	ebp, ebp
		jnz	short loc_A17
		call	_sk_new_null
		mov	ebp, eax
		mov	[esp+68h+var_3C], ebp
		test	ebp, ebp
		jz	loc_E9E

loc_A17:				; CODE XREF: _pkeyutl_main+77Ej
		push	dword ptr [ebx+4]
		add	ebx, 4
		push	ebp
		call	_sk_push
		add	esp, 8
		test	eax, eax
		jz	loc_E9E

loc_A2E:				; CODE XREF: _pkeyutl_main+13Dj
					; _pkeyutl_main+18Dj ...
		mov	edx, [esp+68h+var_48]

loc_A32:				; CODE XREF: _pkeyutl_main+22Dj
		mov	ecx, [esp+68h+var_50]

loc_A36:				; CODE XREF: _pkeyutl_main+281j
		mov	eax, [esp+68h+var_4C]

loc_A3A:				; CODE XREF: _pkeyutl_main+45Aj
					; _pkeyutl_main+4A0j
		mov	esi, [esp+68h+var_54]

loc_A3E:				; CODE XREF: _pkeyutl_main+56Ej
					; _pkeyutl_main+5BEj ...
		dec	edi
		add	ebx, 4
		cmp	edi, 1
		jge	loc_374
		test	edx, edx
		jz	loc_EB3
		test	ecx, ecx
		jz	short loc_A63
		cmp	esi, 400h
		jnz	loc_EB3

loc_A63:				; CODE XREF: _pkeyutl_main+7D1j
		mov	ecx, [esp+68h+var_2C]
		mov	edi, [esp+68h+var_28]
		push	ecx
		mov	ecx, [esp+6Ch+var_24]
		push	edi
		push	esi
		push	ecx
		push	eax
		mov	eax, [esp+7Ch+var_20]
		push	eax
		push	edx
		lea	eax, [esp+84h+var_C]
		push	eax
		call	_init_ctx
		mov	ebp, eax
		add	esp, 20h
		test	ebp, ebp
		jnz	short loc_AB4
		push	offset ??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@ ;	"Error initializing context\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	ebp, [esp+74h+var_3C]
		add	esp, 0Ch
		jmp	loc_EB8
; ---------------------------------------------------------------------------

loc_AB4:				; CODE XREF: _pkeyutl_main+807j
		mov	eax, [esp+68h+var_50]
		test	eax, eax
		jz	short loc_AFB
		push	edi
		push	eax
		mov	eax, [esp+70h+var_1C]
		push	eax
		push	ebp
		push	dword ptr ds:_bio_err
		call	_setup_peer
		add	esp, 14h
		test	eax, eax
		jnz	short loc_AFB
		push	offset ??_C@_0BL@HOAAAFHC@Error?5setting?5up?5peer?5key?6?$AA@ ; "Error	setting	up peer	key\n"

loc_ADB:				; CODE XREF: _pkeyutl_main+8DAj
					; _pkeyutl_main+93Dj
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		xor	esi, esi
		jmp	loc_E8A
; ---------------------------------------------------------------------------

loc_AFB:				; CODE XREF: _pkeyutl_main+836j
					; _pkeyutl_main+850j
		mov	ebx, [esp+68h+var_3C]
		test	ebx, ebx
		jz	short loc_B32
		push	ebx
		call	_sk_num
		mov	edi, eax
		add	esp, 4
		xor	esi, esi
		test	edi, edi
		jle	short loc_B2E

loc_B14:				; CODE XREF: _pkeyutl_main+8A8j
		push	esi
		push	ebx
		call	_sk_value
		push	eax
		push	ebp
		call	_pkey_ctrl_string
		add	esp, 10h
		test	eax, eax
		jle	short loc_B59
		inc	esi
		cmp	esi, edi
		jl	short loc_B14

loc_B2E:				; CODE XREF: _pkeyutl_main+88Ej
		mov	esi, [esp+68h+var_54]

loc_B32:				; CODE XREF: _pkeyutl_main+87Dj
		mov	ebx, [esp+68h+var_18]
		test	ebx, ebx
		jz	short loc_B63
		cmp	esi, 10h
		jz	short loc_B82
		push	offset ??_C@_0CJ@OJALFBNN@Signature?5file?5specified?5for?5non@	; "Signature file specified for	non verify"...
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		xor	esi, esi
		jmp	loc_E8A
; ---------------------------------------------------------------------------

loc_B59:				; CODE XREF: _pkeyutl_main+8A3j
		push	offset ??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@ ; "parameter	setting	error\n"
		jmp	loc_ADB
; ---------------------------------------------------------------------------

loc_B63:				; CODE XREF: _pkeyutl_main+8B4j
		cmp	esi, 10h
		jnz	short loc_B82
		push	offset ??_C@_0CI@PCEHBCPB@No?5signature?5file?5specified?5for?5@ ; "No signature file specified	for verify\"...
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		xor	esi, esi
		jmp	loc_E8A
; ---------------------------------------------------------------------------

loc_B82:				; CODE XREF: _pkeyutl_main+8B9j
					; _pkeyutl_main+8E2j
		push	0
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		add	esp, 0Ch
		cmp	esi, 400h
		jz	short loc_BE4
		mov	eax, [esp+68h+var_14]
		test	eax, eax
		jz	short loc_BC6
		push	offset ??_C@_02JDPG@rb?$AA@ ; "rb"
		push	eax
		call	_BIO_new_file
		mov	ecx, eax
		add	esp, 8
		mov	[esp+68h+var_38], ecx
		test	ecx, ecx
		jnz	short loc_BE4
		push	offset ??_C@_0BK@FKCLKLJA@Error?5Opening?5Input?5File?6?$AA@ ; "Error Opening Input File\n"
		jmp	loc_ADB
; ---------------------------------------------------------------------------

loc_BC6:				; CODE XREF: _pkeyutl_main+91Ej
		mov	esi, dword ptr ds:__imp____acrt_iob_func
		push	0
		push	0
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+68h+var_38], eax
		jmp	short loc_BEA
; ---------------------------------------------------------------------------

loc_BE4:				; CODE XREF: _pkeyutl_main+916j
					; _pkeyutl_main+936j
		mov	esi, dword ptr ds:__imp____acrt_iob_func

loc_BEA:				; CODE XREF: _pkeyutl_main+95Ej
		mov	eax, [esp+68h+var_10]
		test	eax, eax
		jz	short loc_C12
		push	offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		push	eax
		call	_BIO_new_file
		add	esp, 8
		mov	[esp+68h+arg_0], eax
		test	eax, eax
		jnz	short loc_C28
		push	offset ??_C@_0BM@PIIFBFAM@Error?5Creating?5Output?5File?6?$AA@ ; "Error	Creating Output	File\n"
		jmp	loc_E6D
; ---------------------------------------------------------------------------

loc_C12:				; CODE XREF: _pkeyutl_main+96Cj
		push	0
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+68h+arg_0], eax

loc_C28:				; CODE XREF: _pkeyutl_main+982j
		mov	esi, [esp+68h+var_C]
		test	ebx, ebx
		jz	short loc_C96
		push	offset ??_C@_02JDPG@rb?$AA@ ; "rb"
		push	ebx
		call	_BIO_new_file
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jnz	short loc_C5A
		push	ebx
		push	offset ??_C@_0BO@DBNEBIJA@Can?8t?5open?5signature?5file?5?$CFs?6?$AA@ ;	"Can't open signature file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		jmp	loc_E83
; ---------------------------------------------------------------------------

loc_C5A:				; CODE XREF: _pkeyutl_main+9BEj
		lea	eax, [esi+esi*4]
		add	eax, eax
		push	edi
		push	eax
		lea	eax, [esp+70h+var_30]
		push	eax
		call	_bio_to_mem
		mov	ebx, eax
		push	edi
		mov	[esp+78h+var_8], ebx
		call	_BIO_free
		add	esp, 10h
		test	ebx, ebx
		jns	short loc_C96
		push	offset ??_C@_0BO@NOBLKHIO@Error?5reading?5signature?5data?6?$AA@ ; "Error reading signature data\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_E86
; ---------------------------------------------------------------------------

loc_C96:				; CODE XREF: _pkeyutl_main+9AAj
					; _pkeyutl_main+9F8j
		mov	eax, [esp+68h+var_38]
		test	eax, eax
		jz	short loc_D0E
		push	eax
		lea	eax, [esi+esi*4]
		add	eax, eax
		push	eax
		lea	eax, [esp+70h+var_44]
		push	eax
		call	_bio_to_mem
		add	esp, 0Ch
		mov	[esp+68h+var_34], eax
		test	eax, eax
		jns	short $LN256
		push	offset ??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@ ; "Error reading input Data\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------

$LN256:					; CODE XREF: _pkeyutl_main+A34j
		mov	cl, [esp+68h+var_57]
		test	cl, cl
		jz	short loc_D10
		mov	ebx, eax
		mov	edi, 0
		shr	ebx, 1
		jz	short loc_D10
		mov	esi, eax

loc_CEA:				; CODE XREF: _pkeyutl_main+A82j
		mov	eax, [esp+68h+var_44]
		lea	esi, [esi-1]
		mov	dl, [edi+eax]
		lea	ecx, [edi+eax]
		inc	edi
		mov	al, [esi+eax]
		mov	[ecx], al
		mov	eax, [esp+68h+var_44]
		mov	[esi+eax], dl
		cmp	edi, ebx
		jb	short loc_CEA
		mov	eax, [esp+68h+var_34]
		jmp	short loc_D10
; ---------------------------------------------------------------------------

loc_D0E:				; CODE XREF: _pkeyutl_main+A18j
		xor	eax, eax

loc_D10:				; CODE XREF: _pkeyutl_main+A57j
					; _pkeyutl_main+A62j ...
		mov	esi, [esp+68h+var_54]
		push	eax
		push	[esp+6Ch+var_44]
		cmp	esi, 10h
		jnz	loc_DCB
		push	[esp+70h+var_8]
		push	[esp+74h+var_30]
		push	ebp
		call	_EVP_PKEY_verify
		mov	ecx, eax
		add	esp, 14h
		test	ecx, ecx
		jnz	short loc_D50
		mov	esi, [esp+68h+arg_0]
		push	offset ??_C@_0CA@OFLOPPEO@Signature?5Verification?5Failure?6?$AA@ ; "Signature Verification Failure\n"
		push	esi
		call	_BIO_puts
		add	esp, 8
		jmp	loc_E8A
; ---------------------------------------------------------------------------

loc_D50:				; CODE XREF: _pkeyutl_main+AB3j
		cmp	ecx, 1
		jnz	short loc_D6C
		mov	esi, [esp+68h+arg_0]
		push	offset ??_C@_0CB@PGCOBJH@Signature?5Verified?5Successfully?6@ ;	"Signature Verified Successfully\n"
		push	esi
		call	_BIO_puts
		add	esp, 8
		jmp	loc_E8A
; ---------------------------------------------------------------------------

loc_D6C:				; CODE XREF: _pkeyutl_main+ACFj
		test	ecx, ecx
		jns	loc_E86
		mov	eax, [esp+68h+var_40]

loc_D78:				; CODE XREF: _pkeyutl_main+B68j
		xor	ebx, ebx

loc_D7A:				; CODE XREF: _pkeyutl_main+BA6j
		test	ecx, ecx
		jle	loc_E68
		mov	cl, [esp+68h+var_56]
		xor	edi, edi
		mov	esi, [esp+68h+arg_0]
		test	cl, cl
		jz	loc_E2F
		push	0FFFFFFFFh
		push	1
		push	eax
		push	ebx
		push	esi
		call	_ASN1_parse_dump
		add	esp, 14h
		test	eax, eax
		jnz	$end$257
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		push	ebp
		call	_EVP_PKEY_CTX_free
		mov	ebp, [esp+6Ch+var_3C]
		add	esp, 4
		jmp	loc_EBD
; ---------------------------------------------------------------------------

loc_DCB:				; CODE XREF: _pkeyutl_main+A98j
		lea	eax, [esp+70h+var_40]
		push	eax
		push	0
		push	esi
		push	ebp
		call	_do_keyop
		mov	ecx, eax
		add	esp, 18h
		test	ecx, ecx
		jle	loc_E68
		mov	eax, [esp+68h+var_40]
		test	eax, eax
		jz	short loc_D78
		push	14Dh
		push	offset ??_C@_0BB@CPAIPCCB@?4?2apps?2pkeyutl?4c?$AA@ ; ".\\apps\\pkeyutl.c"
		push	eax
		call	_CRYPTO_malloc
		mov	ebx, eax
		add	esp, 0Ch
		mov	[esp+68h+var_4], ebx
		test	ebx, ebx
		jz	short loc_E68
		mov	eax, [esp+68h+var_34]
		push	eax
		push	[esp+6Ch+var_44]
		lea	eax, [esp+70h+var_40]
		push	eax
		push	ebx
		push	esi
		push	ebp
		call	_do_keyop
		mov	ecx, eax
		add	esp, 18h
		mov	eax, [esp+68h+var_40]
		jmp	loc_D7A
; ---------------------------------------------------------------------------

loc_E2F:				; CODE XREF: _pkeyutl_main+B0Aj
		mov	cl, [esp+68h+var_55]
		push	eax
		push	ebx
		push	esi
		test	cl, cl
		jz	short loc_E51
		call	_BIO_dump
		add	esp, 0Ch
		push	ebp
		call	_EVP_PKEY_CTX_free
		mov	ebp, [esp+6Ch+var_3C]
		add	esp, 4
		jmp	short loc_EBD
; ---------------------------------------------------------------------------

loc_E51:				; CODE XREF: _pkeyutl_main+BB4j
		call	_BIO_write
		add	esp, 0Ch
		push	ebp
		call	_EVP_PKEY_CTX_free
		mov	ebp, [esp+6Ch+var_3C]
		add	esp, 4
		jmp	short loc_EBD
; ---------------------------------------------------------------------------

loc_E68:				; CODE XREF: _pkeyutl_main+AF8j
					; _pkeyutl_main+B5Cj ...
		push	offset ??_C@_0BM@LDAIMLLF@Public?5Key?5operation?5error?6?$AA@ ; "Public Key operation error\n"

loc_E6D:				; CODE XREF: _pkeyutl_main+989j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors

loc_E83:				; CODE XREF: _pkeyutl_main+9D1j
		add	esp, 0Ch

loc_E86:				; CODE XREF: _pkeyutl_main+A0Dj
					; _pkeyutl_main+AEAj
		mov	esi, [esp+68h+arg_0]

loc_E8A:				; CODE XREF: _pkeyutl_main+872j
					; _pkeyutl_main+8D0j ...
		mov	edi, 1

$end$257:				; CODE XREF: _pkeyutl_main+B21j
		push	ebp
		call	_EVP_PKEY_CTX_free
		mov	ebp, [esp+6Ch+var_3C]
		add	esp, 4
		jmp	short loc_EBD
; ---------------------------------------------------------------------------

loc_E9E:				; CODE XREF: _pkeyutl_main+78Dj
					; _pkeyutl_main+7A4j
		push	offset ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; "out of memory\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	short loc_EB8
; ---------------------------------------------------------------------------

loc_EB3:				; CODE XREF: _pkeyutl_main+E5j
					; _pkeyutl_main+12Dj ...
		call	_usage

loc_EB8:				; CODE XREF: _pkeyutl_main+D2j
					; _pkeyutl_main+82Bj ...
		xor	esi, esi
		lea	edi, [esi+1]

loc_EBD:				; CODE XREF: _pkeyutl_main+B42j
					; _pkeyutl_main+BCBj ...
		push	[esp+68h+var_38]
		call	_BIO_free
		push	esi
		call	_BIO_free_all
		mov	eax, [esp+70h+var_44]
		add	esp, 8
		test	eax, eax
		jz	short loc_EE0
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_EE0:				; CODE XREF: _pkeyutl_main+C51j
		mov	eax, [esp+68h+var_4]
		test	eax, eax
		jz	short loc_EF1
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_EF1:				; CODE XREF: _pkeyutl_main+C62j
		mov	eax, [esp+68h+var_30]
		test	eax, eax
		jz	short loc_F02
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_F02:				; CODE XREF: _pkeyutl_main+C73j
		test	ebp, ebp
		jz	short loc_F0F
		push	ebp
		call	_sk_free
		add	esp, 4

loc_F0F:				; CODE XREF: _pkeyutl_main+C80j
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 58h
		retn
_pkeyutl_main	endp

; ---------------------------------------------------------------------------
$LN255:
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F1Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_setup_peer	proc near		; CODE XREF: _pkeyutl_main+846p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	ecx, [esp+arg_8]
		xor	eax, eax
		push	esi
		mov	esi, [esp+4+arg_C]
		cmp	ecx, 7
		push	edi
		cmovz	eax, [esp+8+arg_10]
		push	offset ??_C@_08FBPOPADM@Peer?5Key?$AA@ ; "Peer Key"
		push	eax
		push	0
		push	0
		push	ecx
		push	esi
		push	dword ptr ds:_bio_err
		call	_load_pubkey
		mov	edi, eax
		add	esp, 1Ch
		test	edi, edi
		jnz	short loc_F72
		push	esi
		push	offset ??_C@_0BL@HJBIDLJN@Error?5reading?5peer?5key?5?$CFs?6?$AA@ ; "Error reading peer	key %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	[esp+14h+arg_0]
		call	_ERR_print_errors
		add	esp, 10h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_F72:				; CODE XREF: _setup_peer+32j
		push	edi
		push	[esp+0Ch+arg_4]
		call	_EVP_PKEY_derive_set_peer
		push	edi
		mov	esi, eax
		call	_EVP_PKEY_free
		add	esp, 0Ch
		test	esi, esi
		jg	short loc_F97
		push	[esp+8+arg_0]
		call	_ERR_print_errors
		add	esp, 4

loc_F97:				; CODE XREF: _setup_peer+6Dj
		pop	edi
		mov	eax, esi
		pop	esi
		retn
_setup_peer	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F9Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_usage		proc near		; CODE XREF: _pkeyutl_main:loc_EB3p
		push	offset ??_C@_0BK@JLENEOBM@Usage?3?5pkeyutl?5?$FLoptions?$FN?6?$AA@ ; "Usage: pkeyutl [options]\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; "-in file	  input	file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ ; "-out file	  output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DG@IBCACDJH@?9sigfile?5file?5signature?5file?5?$CIve@ ; "-sigfile	file signature file (verify op"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@ ; "-inkey file     input key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@ ; "-keyform	arg    private key format - de"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CH@FAADBJPA@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5a?5publi@ ; "-pubin	     input is a	public key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DO@JAPLMBFL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@ ; "-certin	    input is a certificate "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CE@GFHHCJKD@?9pkeyopt?5X?3Y?5?5?5?5public?5key?5optio@ ; "-pkeyopt X:Y	public key options\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@ ; "-sign	     sign with private key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@	; "-verify	   verify with public key\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DP@KIFIENFO@?9verifyrecover?5?5verify?5with?5publ@ ; "-verifyrecover  verify with	public key,"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@ ; "-encrypt	  encrypt with public key"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@ ; "-decrypt	  decrypt with private ke"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CG@FCOAPHMM@?9derive?5?5?5?5?5?5?5?5?5derive?5shared?5se@	; "-derive	   derive shared secret\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@	; "-hexdump	   hex dump output\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0EK@JMGPNOKO@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5ma@ ; "-engine e	    use	engine e, maybe	a h"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EI@LEJFGIFF@?9engine_impl?5?5?5?5also?5use?5engine?5@ ; "-engine_impl    also use	engine given b"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CE@LMDNEPBO@?9passin?5arg?5?5?5?5?5pass?5phrase?5sour@ ; "-passin	arg	pass phrase source\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 18h
		retn
_usage		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10D8h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _pkeyutl_main+F2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10DCh
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _pkeyutl_main:loc_3C6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10E4h
; COMDAT (pick any)
		public ??_C@_08EKFDLJMA@?9sigfile?$AA@
; `string'
??_C@_08EKFDLJMA@?9sigfile?$AA@	db '-sigfile',0 ; DATA XREF: _pkeyutl_main:loc_416o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10F0h
; COMDAT (pick any)
		public ??_C@_06JJMGFEBF@?9inkey?$AA@
; `string'
??_C@_06JJMGFEBF@?9inkey?$AA@ db '-inkey',0 ; DATA XREF: _pkeyutl_main:loc_466o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10F8h
; COMDAT (pick any)
		public ??_C@_08JIHLOKEH@?9peerkey?$AA@
; `string'
??_C@_08JIHLOKEH@?9peerkey?$AA@	db '-peerkey',0 ; DATA XREF: _pkeyutl_main:loc_4B6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1104h
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _pkeyutl_main:loc_50Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 110Ch
; COMDAT (pick any)
		public ??_C@_09KDALHBAH@?9peerform?$AA@
; `string'
??_C@_09KDALHBAH@?9peerform?$AA@ db '-peerform',0 ; DATA XREF: _pkeyutl_main:loc_556o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1118h
; COMDAT (pick any)
		public ??_C@_08OAHLMBGP@?9keyform?$AA@
; `string'
??_C@_08OAHLMBGP@?9keyform?$AA@	db '-keyform',0 ; DATA XREF: _pkeyutl_main:loc_5AEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1124h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _pkeyutl_main:loc_5FFo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 112Ch
; COMDAT (pick any)
		public ??_C@_0N@FEJBABNG@?9engine_impl?$AA@
; `string'
??_C@_0N@FEJBABNG@?9engine_impl?$AA@ db	'-engine_impl',0 ; DATA XREF: _pkeyutl_main:loc_656o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 113Ch
; COMDAT (pick any)
		public ??_C@_06NLLOJDKN@?9pubin?$AA@
; `string'
??_C@_06NLLOJDKN@?9pubin?$AA@ db '-pubin',0 ; DATA XREF: _pkeyutl_main:loc_69Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1144h
; COMDAT (pick any)
		public ??_C@_07MBPOKNGC@?9certin?$AA@
; `string'
??_C@_07MBPOKNGC@?9certin?$AA@ db '-certin',0 ; DATA XREF: _pkeyutl_main:loc_6E3o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 114Ch
; COMDAT (pick any)
		public ??_C@_0L@MFHFHCDC@?9asn1parse?$AA@
; `string'
??_C@_0L@MFHFHCDC@?9asn1parse?$AA@ db '-asn1parse',0 ; DATA XREF: _pkeyutl_main:loc_729o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1158h
; COMDAT (pick any)
		public ??_C@_08INKHJOD@?9hexdump?$AA@
; `string'
??_C@_08INKHJOD@?9hexdump?$AA@ db '-hexdump',0 ; DATA XREF: _pkeyutl_main:loc_767o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1164h
; COMDAT (pick any)
		public ??_C@_05LLLFPBKO@?9sign?$AA@
; `string'
??_C@_05LLLFPBKO@?9sign?$AA@ db	'-sign',0 ; DATA XREF: _pkeyutl_main:loc_7A7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 116Ch
; COMDAT (pick any)
		public ??_C@_07FILEFCOC@?9verify?$AA@
; `string'
??_C@_07FILEFCOC@?9verify?$AA@ db '-verify',0 ; DATA XREF: _pkeyutl_main:loc_7F7o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1174h
; COMDAT (pick any)
		public ??_C@_0P@IBDPBCGD@?9verifyrecover?$AA@
; `string'
??_C@_0P@IBDPBCGD@?9verifyrecover?$AA@ db '-verifyrecover',0
					; DATA XREF: _pkeyutl_main:loc_847o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1184h
; COMDAT (pick any)
		public ??_C@_08CNCNOCCN@?9encrypt?$AA@
; `string'
??_C@_08CNCNOCCN@?9encrypt?$AA@	db '-encrypt',0 ; DATA XREF: _pkeyutl_main:loc_897o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1190h
; COMDAT (pick any)
		public ??_C@_08ODIALGEJ@?9decrypt?$AA@
; `string'
??_C@_08ODIALGEJ@?9decrypt?$AA@	db '-decrypt',0 ; DATA XREF: _pkeyutl_main:loc_8E7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 119Ch
; COMDAT (pick any)
		public ??_C@_07FCKECBCI@?9derive?$AA@
; `string'
??_C@_07FCKECBCI@?9derive?$AA@ db '-derive',0 ; DATA XREF: _pkeyutl_main:loc_937o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11A4h
; COMDAT (pick any)
		public ??_C@_04PGMDFMPL@?9rev?$AA@
; `string'
??_C@_04PGMDFMPL@?9rev?$AA@ db '-rev',0 ; DATA XREF: _pkeyutl_main:loc_987o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11ACh
; COMDAT (pick any)
		public ??_C@_08JPLFCIIK@?9pkeyopt?$AA@
; `string'
??_C@_08JPLFCIIK@?9pkeyopt?$AA@	db '-pkeyopt',0 ; DATA XREF: _pkeyutl_main:loc_9C4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11B8h
; COMDAT (pick any)
		public ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
; `string'
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ db 'out of memory',0Ah,0
					; DATA XREF: _pkeyutl_main:loc_E9Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11C8h
; COMDAT (pick any)
		public ??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@
; `string'
??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@ db 'Error initializing context',0Ah,0
					; DATA XREF: _pkeyutl_main+809o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11E4h
; COMDAT (pick any)
		public ??_C@_0BL@HOAAAFHC@Error?5setting?5up?5peer?5key?6?$AA@
; `string'
??_C@_0BL@HOAAAFHC@Error?5setting?5up?5peer?5key?6?$AA@	db 'Error setting up peer key',0Ah,0
					; DATA XREF: _pkeyutl_main+852o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1200h
; COMDAT (pick any)
		public ??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@
; `string'
??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@ db 'parameter setting error',0Ah,0
					; DATA XREF: _pkeyutl_main:loc_B59o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 121Ch
; COMDAT (pick any)
		public ??_C@_0CJ@OJALFBNN@Signature?5file?5specified?5for?5non@
; `string'
??_C@_0CJ@OJALFBNN@Signature?5file?5specified?5for?5non@ db 'Signature file specified for non verify',0Ah,0
					; DATA XREF: _pkeyutl_main+8BBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1248h
; COMDAT (pick any)
		public ??_C@_0CI@PCEHBCPB@No?5signature?5file?5specified?5for?5@
; `string'
??_C@_0CI@PCEHBCPB@No?5signature?5file?5specified?5for?5@ db 'No signature file specified for verify',0Ah,0
					; DATA XREF: _pkeyutl_main+8E4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1270h
; COMDAT (pick any)
		public ??_C@_02JDPG@rb?$AA@
; `string'
??_C@_02JDPG@rb?$AA@ db	'rb',0          ; DATA XREF: _pkeyutl_main+920o
					; _pkeyutl_main+9ACo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1274h
; COMDAT (pick any)
		public ??_C@_0BK@FKCLKLJA@Error?5Opening?5Input?5File?6?$AA@
; `string'
??_C@_0BK@FKCLKLJA@Error?5Opening?5Input?5File?6?$AA@ db 'Error Opening Input File',0Ah,0
					; DATA XREF: _pkeyutl_main+938o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1290h
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 77h,	62h, 0	; DATA XREF: _pkeyutl_main+96Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1294h
; COMDAT (pick any)
		public ??_C@_0BM@PIIFBFAM@Error?5Creating?5Output?5File?6?$AA@
; `string'
??_C@_0BM@PIIFBFAM@Error?5Creating?5Output?5File?6?$AA@	db 'Error Creating Output File',0Ah,0
					; DATA XREF: _pkeyutl_main+984o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12B0h
; COMDAT (pick any)
		public ??_C@_0BO@DBNEBIJA@Can?8t?5open?5signature?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BO@DBNEBIJA@Can?8t?5open?5signature?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open signature file %s',0Ah,0
					; DATA XREF: _pkeyutl_main+9C1o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12D0h
; COMDAT (pick any)
		public ??_C@_0BO@NOBLKHIO@Error?5reading?5signature?5data?6?$AA@
; `string'
??_C@_0BO@NOBLKHIO@Error?5reading?5signature?5data?6?$AA@ db 'Error reading signature data',0Ah,0
					; DATA XREF: _pkeyutl_main+9FAo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12F0h
; COMDAT (pick any)
		public ??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@
; `string'
??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@ db 'Error reading input Data',0Ah,0
					; DATA XREF: _pkeyutl_main+A36o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 130Ch
; COMDAT (pick any)
		public ??_C@_0CA@OFLOPPEO@Signature?5Verification?5Failure?6?$AA@
; `string'
??_C@_0CA@OFLOPPEO@Signature?5Verification?5Failure?6?$AA@ db 'Signature Verification Failure',0Ah,0
					; DATA XREF: _pkeyutl_main+AB9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 132Ch
; COMDAT (pick any)
		public ??_C@_0CB@PGCOBJH@Signature?5Verified?5Successfully?6@
; `string'
??_C@_0CB@PGCOBJH@Signature?5Verified?5Successfully?6@ db 'Signature Verified Successfully',0Ah,0
					; DATA XREF: _pkeyutl_main+AD5o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1350h
; COMDAT (pick any)
		public ??_C@_0BB@CPAIPCCB@?4?2apps?2pkeyutl?4c?$AA@
; `string'
??_C@_0BB@CPAIPCCB@?4?2apps?2pkeyutl?4c?$AA@ db	'.\apps\pkeyutl.c',0
					; DATA XREF: _pkeyutl_main+B6Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1364h
; COMDAT (pick any)
		public ??_C@_0BM@LDAIMLLF@Public?5Key?5operation?5error?6?$AA@
; `string'
??_C@_0BM@LDAIMLLF@Public?5Key?5operation?5error?6?$AA@	db 'Public Key operation error',0Ah,0
					; DATA XREF: _pkeyutl_main:loc_E68o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1380h
; COMDAT (pick any)
		public ??_C@_0BK@JLENEOBM@Usage?3?5pkeyutl?5?$FLoptions?$FN?6?$AA@
; `string'
??_C@_0BK@JLENEOBM@Usage?3?5pkeyutl?5?$FLoptions?$FN?6?$AA@ db 'Usage: pkeyutl [options]',0Ah,0
					; DATA XREF: _usageo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 139Ch
; COMDAT (pick any)
		public ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@	db '-in file        input file',0Ah,0
					; DATA XREF: _usage+10o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13B8h
; COMDAT (pick any)
		public ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@	db '-out file       output file',0Ah,0
					; DATA XREF: _usage+20o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13D8h
; COMDAT (pick any)
		public ??_C@_0DG@IBCACDJH@?9sigfile?5file?5signature?5file?5?$CIve@
; `string'
??_C@_0DG@IBCACDJH@?9sigfile?5file?5signature?5file?5?$CIve@ db	'-sigfile file signature file (verify operation only)',0Ah,0
					; DATA XREF: _usage+30o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1410h
; COMDAT (pick any)
		public ??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@
; `string'
??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@ db '-inkey file     input key',0Ah,0
					; DATA XREF: _usage+40o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 142Ch
; COMDAT (pick any)
		public ??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@
; `string'
??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@ db	'-keyform arg    private key format - default PEM',0Ah,0
					; DATA XREF: _usage+50o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1460h
; COMDAT (pick any)
		public ??_C@_0CH@FAADBJPA@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5a?5publi@
; `string'
??_C@_0CH@FAADBJPA@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5a?5publi@ db '-pubin          input is a public key',0Ah,0
					; DATA XREF: _usage+60o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1488h
; COMDAT (pick any)
		public ??_C@_0DO@JAPLMBFL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@
; `string'
??_C@_0DO@JAPLMBFL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@ db '-certin         input is a certificate carrying a public key',0Ah,0
					; DATA XREF: _usage+70o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14C8h
; COMDAT (pick any)
		public ??_C@_0CE@GFHHCJKD@?9pkeyopt?5X?3Y?5?5?5?5public?5key?5optio@
; `string'
??_C@_0CE@GFHHCJKD@?9pkeyopt?5X?3Y?5?5?5?5public?5key?5optio@ db '-pkeyopt X:Y    public key options',0Ah,0
					; DATA XREF: _usage+83o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14ECh
; COMDAT (pick any)
		public ??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@
; `string'
??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@ db '-sign           sign with private key',0Ah,0
					; DATA XREF: _usage+93o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1514h
; COMDAT (pick any)
		public ??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@
; `string'
??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@ db '-verify         verify with public key',0Ah,0
					; DATA XREF: _usage+A3o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 153Ch
; COMDAT (pick any)
		public ??_C@_0DP@KIFIENFO@?9verifyrecover?5?5verify?5with?5publ@
; `string'
??_C@_0DP@KIFIENFO@?9verifyrecover?5?5verify?5with?5publ@ db '-verifyrecover  verify with public key, recover original data',0Ah,0
					; DATA XREF: _usage+B3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 157Ch
; COMDAT (pick any)
		public ??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@
; `string'
??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@	db '-encrypt        encrypt with public key',0Ah,0
					; DATA XREF: _usage+C3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 15A8h
; COMDAT (pick any)
		public ??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@
; `string'
??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@	db '-decrypt        decrypt with private key',0Ah,0
					; DATA XREF: _usage+D3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 15D4h
; COMDAT (pick any)
		public ??_C@_0CG@FCOAPHMM@?9derive?5?5?5?5?5?5?5?5?5derive?5shared?5se@
; `string'
??_C@_0CG@FCOAPHMM@?9derive?5?5?5?5?5?5?5?5?5derive?5shared?5se@ db '-derive         derive shared secret',0Ah,0
					; DATA XREF: _usage+E3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 15FCh
; COMDAT (pick any)
		public ??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@
; `string'
??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@ db '-hexdump        hex dump output',0Ah,0
					; DATA XREF: _usage+F3o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1620h
; COMDAT (pick any)
		public ??_C@_0EK@JMGPNOKO@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5ma@
; `string'
??_C@_0EK@JMGPNOKO@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5ma@ db '-engine e       use engine e, maybe a hardware device, for loadin'
					; DATA XREF: _usage+106o
		db 'g keys.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 166Ch
; COMDAT (pick any)
		public ??_C@_0EI@LEJFGIFF@?9engine_impl?5?5?5?5also?5use?5engine?5@
; `string'
??_C@_0EI@LEJFGIFF@?9engine_impl?5?5?5?5also?5use?5engine?5@ db	'-engine_impl    also use engine given by -engine for crypto opera'
					; DATA XREF: _usage+116o
		db 'tions',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16B4h
; COMDAT (pick any)
		public ??_C@_0CE@LMDNEPBO@?9passin?5arg?5?5?5?5?5pass?5phrase?5sour@
; `string'
??_C@_0CE@LMDNEPBO@?9passin?5arg?5?5?5?5?5pass?5phrase?5sour@ db '-passin arg     pass phrase source',0Ah,0
					; DATA XREF: _usage+126o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16D8h
; COMDAT (pick any)
		public ??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@
; `string'
??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@ db 'A private key is needed for this operation',0Ah,0
					; DATA XREF: _init_ctx+38o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1704h
; COMDAT (pick any)
		public ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; `string'
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ db 'Error getting password',0Ah,0
					; DATA XREF: _init_ctx+6Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 171Ch
; COMDAT (pick any)
		public ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
; `string'
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ db 'Private Key',0 ; DATA XREF: _init_ctx:loc_1A3o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1728h
; COMDAT (pick any)
		public ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
; `string'
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ db 'Public Key',0 ; DATA XREF: _init_ctx:loc_184o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1734h
; COMDAT (pick any)
		public ??_C@_0M@KDOEPPNO@Certificate?$AA@
; `string'
??_C@_0M@KDOEPPNO@Certificate?$AA@ db 'Certificate',0 ; DATA XREF: _init_ctx+9Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1740h
; COMDAT (pick any)
		public ??_C@_08FBPOPADM@Peer?5Key?$AA@
; `string'
??_C@_08FBPOPADM@Peer?5Key?$AA@	db 'Peer Key',0 ; DATA XREF: _setup_peer+14o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 174Ch
; COMDAT (pick any)
		public ??_C@_0BL@HJBIDLJN@Error?5reading?5peer?5key?5?$CFs?6?$AA@
; `string'
??_C@_0BL@HJBIDLJN@Error?5reading?5peer?5key?5?$CFs?6?$AA@ db 'Error reading peer key %s',0Ah,0
					; DATA XREF: _setup_peer+35o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _pkeyutl_main+AEp
					; _pkeyutl_main+94Cp ...
; void __cdecl __noreturn _exit(int Code)
		extrn __imp__exit:near	; CODE XREF: _pkeyutl_main+A4Bp
					; DATA XREF: _pkeyutl_main+A4Br
		extrn _sk_num:near	; CODE XREF: _pkeyutl_main+880p
		extrn _sk_value:near	; CODE XREF: _pkeyutl_main+892p
		extrn _sk_new_null:near	; CODE XREF: _pkeyutl_main+780p
		extrn _sk_free:near	; CODE XREF: _pkeyutl_main+C83p
		extrn _sk_push:near	; CODE XREF: _pkeyutl_main+79Ap
		extrn _CRYPTO_malloc:near ; CODE XREF: _pkeyutl_main+B75p
		extrn _CRYPTO_free:near	; CODE XREF: _init_ctx+1BDp
					; _pkeyutl_main+C54p ...
		extrn _BIO_new_file:near ; CODE	XREF: _pkeyutl_main+926p
					; _pkeyutl_main+974p ...
		extrn _BIO_new_fp:near	; CODE XREF: _pkeyutl_main+B8p
					; _pkeyutl_main+952p ...
		extrn _BIO_free:near	; CODE XREF: _pkeyutl_main+9EEp
					; _pkeyutl_main+C3Dp
		extrn _BIO_write:near	; CODE XREF: _pkeyutl_main:loc_E51p
		extrn _BIO_puts:near	; CODE XREF: _pkeyutl_main+814p
					; _pkeyutl_main+85Dp ...
		extrn _BIO_free_all:near ; CODE	XREF: _pkeyutl_main+C43p
		extrn _BIO_dump:near	; CODE XREF: _pkeyutl_main+BB6p
		extrn _BIO_printf:near	; CODE XREF: _init_ctx+43p
					; _init_ctx+7Ap ...
		extrn _ASN1_parse_dump:near ; CODE XREF: _pkeyutl_main+B17p
		extrn _OPENSSL_add_all_algorithms_noconf:near ;	CODE XREF: _pkeyutl_main+DDp
		extrn _EVP_PKEY_size:near ; CODE XREF: _init_ctx+114p
		extrn _EVP_PKEY_free:near ; CODE XREF: _init_ctx+13Fp
					; _setup_peer+63p
		extrn _EVP_PKEY_CTX_new:near ; CODE XREF: _init_ctx+137p
		extrn _EVP_PKEY_CTX_free:near ;	CODE XREF: _init_ctx+1AAp
					; _pkeyutl_main+B36p ...
		extrn _EVP_PKEY_sign_init:near ; CODE XREF: _init_ctx+175p
		extrn _EVP_PKEY_sign:near ; CODE XREF: _do_keyop+4Bp
		extrn _EVP_PKEY_verify_init:near ; CODE	XREF: _init_ctx+16Dp
		extrn _EVP_PKEY_verify:near ; CODE XREF: _pkeyutl_main+AA7p
		extrn _EVP_PKEY_verify_recover_init:near ; CODE	XREF: _init_ctx+165p
		extrn _EVP_PKEY_verify_recover:near ; CODE XREF: _do_keyop+2Bp
		extrn _EVP_PKEY_encrypt_init:near ; CODE XREF: _init_ctx+17Dp
		extrn _EVP_PKEY_encrypt:near ; CODE XREF: _do_keyop+68p
		extrn _EVP_PKEY_decrypt_init:near ; CODE XREF: _init_ctx+19Dp
		extrn _EVP_PKEY_decrypt:near ; CODE XREF: _do_keyop+A8p
		extrn _EVP_PKEY_derive_init:near ; CODE	XREF: _init_ctx+195p
		extrn _EVP_PKEY_derive_set_peer:near ; CODE XREF: _setup_peer+5Bp
		extrn _EVP_PKEY_derive:near ; CODE XREF: _do_keyop+8Bp
		extrn _X509_free:near	; CODE XREF: _init_ctx+C6p
		extrn _X509_get_pubkey:near ; CODE XREF: _init_ctx+BEp
		extrn _ERR_print_errors:near ; CODE XREF: _pkeyutl_main+81Fp
					; _pkeyutl_main+868p ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _pkeyutl_main+D8p
		extrn _app_RAND_load_file:near ; CODE XREF: _pkeyutl_main+908p
		extrn _str2fmt:near	; CODE XREF: _pkeyutl_main+319p
					; _pkeyutl_main+36Ap
		extrn _app_passwd:near	; CODE XREF: _init_ctx+63p
		extrn _load_cert:near	; CODE XREF: _init_ctx+AFp
		extrn _load_key:near	; CODE XREF: _init_ctx+109p
		extrn _load_pubkey:near	; CODE XREF: _init_ctx+E8p
					; _setup_peer+26p
		extrn _setup_engine:near ; CODE	XREF: _pkeyutl_main+3C1p
		extrn _load_config:near	; CODE XREF: _pkeyutl_main+C8p
		extrn _bio_to_mem:near	; CODE XREF: _pkeyutl_main+9E2p
					; _pkeyutl_main+A26p
		extrn _pkey_ctrl_string:near ; CODE XREF: _pkeyutl_main+899p
		extrn __chkstk:near	; CODE XREF: _init_ctx+5p
					; _pkeyutl_main+5p
		extrn _bio_err:near	; DATA XREF: _init_ctx+3Dr
					; _init_ctx+5Dr ...


		end

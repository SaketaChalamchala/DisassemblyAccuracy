;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	A11C381BACC636B76BA87C2B28A00865
; Input	CRC32 :	7966005D

; File Name   :	C:\compspace\Diff\openssl\obj\v3_pmaps.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _POLICY_MAPPING_it
_POLICY_MAPPING_it proc	near		; DATA XREF: .rdata:000002A4o
		mov	eax, offset ?local_it@?1??POLICY_MAPPING_it@@9@9 ; `POLICY_MAPPING_it'::`2'::local_it
		retn
_POLICY_MAPPING_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _POLICY_MAPPINGS_it
_POLICY_MAPPINGS_it proc near		; DATA XREF: .rdata:00000220o
		mov	eax, offset ?local_it@?1??POLICY_MAPPINGS_it@@9@9 ; `POLICY_MAPPINGS_it'::`2'::local_it
		retn
_POLICY_MAPPINGS_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_v2i_POLICY_MAPPINGS proc near		; DATA XREF: .rdata:00000240o

var_4		= dword	ptr -4
arg_8		= dword	ptr  0Ch

		mov	eax, 4
		call	__chkstk
		push	ebx
		call	_sk_new_null
		mov	ebx, eax
		test	ebx, ebx
		jnz	short loc_43
		push	7Bh ; '{'
		push	offset ??_C@_0BL@FPBGMIJF@?4?2crypto?2x509v3?2v3_pmaps?4c?$AA@ ; ".\\crypto\\x509v3\\v3_pmaps.c"
		push	41h ; 'A'
		push	91h ; 'ë'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_43:					; CODE XREF: _v2i_POLICY_MAPPINGS+14j
		push	ebp
		mov	ebp, [esp+0Ch+arg_8]
		push	esi
		push	edi
		push	ebp
		xor	edi, edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	loc_DA
		nop	dword ptr [eax]

loc_60:					; CODE XREF: _v2i_POLICY_MAPPINGS+C8j
		push	edi
		push	ebp
		call	_sk_value
		mov	esi, eax
		add	esp, 8
		cmp	dword ptr [esi+8], 0
		jz	loc_122
		mov	eax, [esi+4]
		test	eax, eax
		jz	loc_122
		push	0
		push	eax
		call	_OBJ_txt2obj
		push	0
		push	dword ptr [esi+8]
		mov	[esp+24h+var_4], eax
		call	_OBJ_txt2obj
		add	esp, 10h
		mov	ebp, eax
		cmp	[esp+14h+var_4], 0
		jz	short loc_110
		test	ebp, ebp
		jz	short loc_110
		push	offset ?local_it@?1??POLICY_MAPPING_it@@9@9 ; `POLICY_MAPPING_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		test	eax, eax
		jz	short loc_E2
		mov	ecx, [esp+14h+var_4]
		push	eax
		push	ebx
		mov	[eax], ecx
		mov	[eax+4], ebp
		call	_sk_push
		mov	ebp, [esp+1Ch+arg_8]
		inc	edi
		push	ebp
		call	_sk_num
		add	esp, 0Ch
		cmp	edi, eax
		jl	short loc_60

loc_DA:					; CODE XREF: _v2i_POLICY_MAPPINGS+47j
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, ebx
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_E2:					; CODE XREF: _v2i_POLICY_MAPPINGS+A6j
		push	offset _POLICY_MAPPING_free
		push	ebx
		call	_sk_pop_free
		push	94h ; 'î'
		push	offset ??_C@_0BL@FPBGMIJF@?4?2crypto?2x509v3?2v3_pmaps?4c?$AA@ ; ".\\crypto\\x509v3\\v3_pmaps.c"
		push	41h ; 'A'
		push	91h ; 'ë'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 1Ch
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_110:				; CODE XREF: _v2i_POLICY_MAPPINGS+91j
					; _v2i_POLICY_MAPPINGS+95j
		push	offset _POLICY_MAPPING_free
		push	ebx
		call	_sk_pop_free
		push	8Dh ; 'ç'
		jmp	short loc_132
; ---------------------------------------------------------------------------

loc_122:				; CODE XREF: _v2i_POLICY_MAPPINGS+60j
					; _v2i_POLICY_MAPPINGS+6Bj
		push	offset _POLICY_MAPPING_free
		push	ebx
		call	_sk_pop_free
		push	84h ; 'Ñ'

loc_132:				; CODE XREF: _v2i_POLICY_MAPPINGS+110j
		push	offset ??_C@_0BL@FPBGMIJF@?4?2crypto?2x509v3?2v3_pmaps?4c?$AA@ ; ".\\crypto\\x509v3\\v3_pmaps.c"
		push	6Eh ; 'n'
		push	91h ; 'ë'
		push	22h ; '"'
		call	_ERR_put_error
		push	dword ptr [esi+8]
		push	offset ??_C@_07BDICHDDB@?0value?3?$AA@ ; ",value:"
		push	dword ptr [esi+4]
		push	offset ??_C@_06FONLLLNC@?0name?3?$AA@ ;	",name:"
		push	dword ptr [esi]
		push	offset ??_C@_08PCLJGJAL@section?3?$AA@ ; "section:"
		push	6
		call	_ERR_add_error_data
		add	esp, 38h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
_v2i_POLICY_MAPPINGS endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 170h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_i2v_POLICY_MAPPINGS proc near		; DATA XREF: .rdata:0000023Co

var_A8		= dword	ptr -0A8h
var_A4		= byte ptr -0A4h
var_54		= byte ptr -54h
var_4		= dword	ptr -4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 0A8h ; '®'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+0A8h+var_4], eax
		mov	eax, [esp+0A8h+arg_8]
		push	ebx
		mov	ebx, [esp+0ACh+arg_4]
		push	edi
		push	ebx
		mov	[esp+0B4h+var_A8], eax
		xor	edi, edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_1FC
		push	esi
		nop	dword ptr [eax+00h]

loc_1B0:				; CODE XREF: _i2v_POLICY_MAPPINGS+89j
		push	edi
		push	ebx
		call	_sk_value
		mov	esi, eax
		lea	eax, [esp+0BCh+var_54]
		push	dword ptr [esi]
		push	50h ; 'P'
		push	eax
		call	_i2t_ASN1_OBJECT
		push	dword ptr [esi+4]
		lea	eax, [esp+0CCh+var_A4]
		push	50h ; 'P'
		push	eax
		call	_i2t_ASN1_OBJECT
		lea	eax, [esp+0D4h+var_A8]
		push	eax
		lea	eax, [esp+0D8h+var_A4]
		push	eax
		lea	eax, [esp+0DCh+var_54]
		push	eax
		call	_X509V3_add_value
		push	ebx
		inc	edi
		call	_sk_num
		add	esp, 30h
		cmp	edi, eax
		jl	short loc_1B0
		pop	esi

loc_1FC:				; CODE XREF: _i2v_POLICY_MAPPINGS+39j
		mov	ecx, [esp+0B0h+var_4]
		mov	eax, [esp+0B0h+var_A8]
		pop	edi
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 0A8h
		retn
_i2v_POLICY_MAPPINGS endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 218h
		public _v3_policy_mappings
_v3_policy_mappings dd offset ??_C@_0BE@FFIKMOKF@subjectDomainPolicy?$AA@+13h ;	""
		align 10h
		dd offset _POLICY_MAPPINGS_it
		dd 6 dup(0)
		dd offset _i2v_POLICY_MAPPINGS
		dd offset _v2i_POLICY_MAPPINGS
		align 10h
_POLICY_MAPPING_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:00000280o
		dd offset ??_C@_0BD@JILOPHFL@issuerDomainPolicy?$AA@ ; "issuerDomainPolicy"
		dd offset _ASN1_OBJECT_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_0BE@FFIKMOKF@subjectDomainPolicy?$AA@ ;	"subjectDomainPolicy"
		dd offset _ASN1_OBJECT_it
; `POLICY_MAPPING_it'::`2'::local_it
?local_it@?1??POLICY_MAPPING_it@@9@9 dd	1, 10h ; DATA XREF: _POLICY_MAPPING_ito
					; _v2i_POLICY_MAPPINGS+97o ...
		dd offset _POLICY_MAPPING_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0P@NLHMKCKF@POLICY_MAPPING?$AA@	; "POLICY_MAPPING"
_POLICY_MAPPINGS_item_tt dd 4, 2 dup(0)	; DATA XREF: .rdata:000002B0o
		dd offset ??_C@_0BA@DHPBCFFC@POLICY_MAPPINGS?$AA@ ; "POLICY_MAPPINGS"
		dd offset _POLICY_MAPPING_it
; `POLICY_MAPPINGS_it'::`2'::local_it
?local_it@?1??POLICY_MAPPINGS_it@@9@9 dd 0 ; DATA XREF:	_POLICY_MAPPINGS_ito
		dd 0FFFFFFFFh
		dd offset _POLICY_MAPPINGS_item_tt
		align 10h
		dd offset ??_C@_0BA@DHPBCFFC@POLICY_MAPPINGS?$AA@ ; "POLICY_MAPPINGS"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C4h
; COMDAT (pick any)
		public ??_C@_0BD@JILOPHFL@issuerDomainPolicy?$AA@
; `string'
??_C@_0BD@JILOPHFL@issuerDomainPolicy?$AA@ db 'issuerDomainPolicy',0
					; DATA XREF: .rdata:0000025Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D8h
; COMDAT (pick any)
		public ??_C@_0BE@FFIKMOKF@subjectDomainPolicy?$AA@
; `string'
??_C@_0BE@FFIKMOKF@subjectDomainPolicy?$AA@ db 'subjectDomainPolicy',0
					; DATA XREF: .rdata:00000270o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2ECh
; COMDAT (pick any)
		public ??_C@_0P@NLHMKCKF@POLICY_MAPPING?$AA@
; `string'
??_C@_0P@NLHMKCKF@POLICY_MAPPING?$AA@ db 'POLICY_MAPPING',0 ; DATA XREF: .rdata:00000290o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2FCh
; COMDAT (pick any)
		public ??_C@_0BA@DHPBCFFC@POLICY_MAPPINGS?$AA@
; `string'
??_C@_0BA@DHPBCFFC@POLICY_MAPPINGS?$AA@	db 'POLICY_MAPPINGS',0 ; DATA XREF: .rdata:000002A0o
					; .rdata:000002C0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 30Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _POLICY_MAPPING_free
_POLICY_MAPPING_free proc near		; DATA XREF: _v2i_POLICY_MAPPINGS:loc_E2o
					; _v2i_POLICY_MAPPINGS:loc_110o ...

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??POLICY_MAPPING_it@@9@9 ; `POLICY_MAPPING_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_POLICY_MAPPING_free endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 320h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _POLICY_MAPPING_new
_POLICY_MAPPING_new proc near
		push	offset ?local_it@?1??POLICY_MAPPING_it@@9@9 ; `POLICY_MAPPING_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_POLICY_MAPPING_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 330h
; COMDAT (pick any)
		public ??_C@_0BL@FPBGMIJF@?4?2crypto?2x509v3?2v3_pmaps?4c?$AA@
; `string'
??_C@_0BL@FPBGMIJF@?4?2crypto?2x509v3?2v3_pmaps?4c?$AA@	db '.\crypto\x509v3\v3_pmaps.c',0
					; DATA XREF: _v2i_POLICY_MAPPINGS+18o
					; _v2i_POLICY_MAPPINGS+E2o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34Ch
; COMDAT (pick any)
		public ??_C@_07BDICHDDB@?0value?3?$AA@
; `string'
??_C@_07BDICHDDB@?0value?3?$AA@	db ',value:',0 ; DATA XREF: _v2i_POLICY_MAPPINGS+138o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 354h
; COMDAT (pick any)
		public ??_C@_06FONLLLNC@?0name?3?$AA@
; `string'
??_C@_06FONLLLNC@?0name?3?$AA@ db ',name:',0 ; DATA XREF: _v2i_POLICY_MAPPINGS+140o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 35Ch
; COMDAT (pick any)
		public ??_C@_08PCLJGJAL@section?3?$AA@
; `string'
??_C@_08PCLJGJAL@section?3?$AA@	db 'section:',0 ; DATA XREF: _v2i_POLICY_MAPPINGS+147o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ASN1_OBJECT_it:near ; DATA XREF:	.rdata:00000260o
					; .rdata:00000274o
		extrn _sk_num:near	; CODE XREF: _v2i_POLICY_MAPPINGS+3Dp
					; _v2i_POLICY_MAPPINGS+BEp ...
		extrn _sk_value:near	; CODE XREF: _v2i_POLICY_MAPPINGS+52p
					; _i2v_POLICY_MAPPINGS+42p
		extrn _sk_new_null:near	; CODE XREF: _v2i_POLICY_MAPPINGS+Bp
		extrn _sk_pop_free:near	; CODE XREF: _v2i_POLICY_MAPPINGS+D8p
					; _v2i_POLICY_MAPPINGS+106p ...
		extrn _sk_push:near	; CODE XREF: _v2i_POLICY_MAPPINGS+B3p
		extrn _ERR_put_error:near ; CODE XREF: _v2i_POLICY_MAPPINGS+26p
					; _v2i_POLICY_MAPPINGS+F0p ...
		extrn _ERR_add_error_data:near ; CODE XREF: _v2i_POLICY_MAPPINGS+14Ep
		extrn _i2t_ASN1_OBJECT:near ; CODE XREF: _i2v_POLICY_MAPPINGS+52p
					; _i2v_POLICY_MAPPINGS+61p
		extrn _ASN1_item_new:near ; CODE XREF: _v2i_POLICY_MAPPINGS+9Cp
					; _POLICY_MAPPING_new+5p
		extrn _ASN1_item_free:near ; CODE XREF:	_POLICY_MAPPING_free+9p
		extrn _OBJ_txt2obj:near	; CODE XREF: _v2i_POLICY_MAPPINGS+74p
					; _v2i_POLICY_MAPPINGS+82p
		extrn _X509V3_add_value:near ; CODE XREF: _i2v_POLICY_MAPPINGS+78p
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _i2v_POLICY_MAPPINGS+9Bp
		extrn __chkstk:near	; CODE XREF: _v2i_POLICY_MAPPINGS+5p
					; _i2v_POLICY_MAPPINGS+5p
		extrn ___security_cookie:near ;	DATA XREF: _i2v_POLICY_MAPPINGS+Ar


		end

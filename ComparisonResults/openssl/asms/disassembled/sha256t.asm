;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	3629B1891BA82367D32A2DC4B7A2E8FF
; Input	CRC32 :	FD7571F0

; File Name   :	C:\compspace\Diff\openssl\obj\sha256t.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		public _app_b1
_app_b1		dd 0BF1678BAh, 0EACF018Fh, 0DE404141h, 2322AE5Dh, 0A36103B0h
					; DATA XREF: _main+54o
		dd 9C7A1796h, 61FF10B4h, 0AD1500F2h
		public _app_b2
_app_b2		dd 616A8D24h, 0B83806D2h, 9326C0E5h, 39603E0Ch,	59E43CA3h
					; DATA XREF: _main+BAo
		dd 6721FF64h, 0D4EDECF6h, 0C106DB19h
		public _app_b3
_app_b3		dd 5C6EC7CDh, 92FB1499h, 0E2C7A181h, 673ED784h,	489A80F1h
					; DATA XREF: _main+169o
		dd 0E2097A4h, 0CC396D04h, 0D02C11C7h
		public _addenum_1
_addenum_1	dd 227D0923h, 22D80534h, 77A44286h, 0B355A2BDh,	0E4BCAD2Ah
					; DATA XREF: _main+1F7o
		dd 0F7B3A0BDh, 0A79D6CE3h
		public _addenum_2
_addenum_2	dd 168B3875h, 0CC762751h, 0A15DBA5Dh, 500189FDh, 5C45C6B0h
					; DATA XREF: _main+254o
		dd 198BF5B4h, 25255252h
		public _addenum_3
_addenum_3	dd 55467920h, 0D8910C98h, 0EAC1B4BBh, 4B8A6197h, 58423FF0h
					; DATA XREF: _main+2FBo
		dd 0EEB24819h, 67ADE74Eh
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B4h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _fprintf+Fp
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BCh
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0E0h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int fprintf(FILE *File, const	char *Format, ...)
		public _fprintf
_fprintf	proc near		; CODE XREF: _main+2Ap	_main+83p ...

File		= dword	ptr  4
Format		= dword	ptr  8
arg_8		= byte ptr  0Ch

		lea	eax, [esp+arg_8]
		push	eax
		push	0
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
_fprintf	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 104h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public _main
_main		proc near

var_3C		= byte ptr -3Ch
var_24		= byte ptr -24h
var_4		= dword	ptr -4
argc		= dword	ptr  4
argv		= dword	ptr  8
envp		= dword	ptr  0Ch

		mov	eax, 3Ch ; '<'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+3Ch+var_4], eax
		push	esi
		mov	esi, dword ptr ds:__imp____acrt_iob_func
		push	edi
		push	offset ??_C@_0BB@JHNNHEOO@Testing?5SHA?9256?5?$AA@ ; "Testing SHA-256 "
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8
		push	0
		call	_EVP_sha256
		push	eax
		push	0
		lea	eax, [esp+50h+var_24]
		push	eax
		push	3
		push	offset ??_C@_03FIKCJHKP@abc?$AA@ ; `string'
		call	_EVP_Digest
		add	esp, 18h
		lea	ecx, [esp+44h+var_24]
		mov	edx, offset _app_b1
		mov	edi, 1Ch
		xchg	ax, ax

loc_164:				; CODE XREF: _main+73j
		mov	eax, [ecx]
		cmp	eax, [edx]
		jnz	loc_4BE
		add	ecx, 4
		add	edx, 4
		sub	edi, 4
		jnb	short loc_164
		push	ebx
		push	offset ??_C@_01LFCBOECM@?4?$AA@	; "."
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	1
		call	esi ; __imp____acrt_iob_func
		mov	ebx, dword ptr ds:__imp__fflush
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 10h
		push	0
		call	_EVP_sha256
		push	eax
		push	0
		lea	eax, [esp+54h+var_24]
		push	eax
		push	38h ; '8'
		push	offset ??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@ ; "abcdbcdecdefdefgefghfghighijhijkijkljkl"...
		call	_EVP_Digest
		add	esp, 18h
		lea	ecx, [esp+48h+var_24]
		mov	edx, offset _app_b2
		mov	edi, 1Ch

loc_1C8:				; CODE XREF: _main+D7j
		mov	eax, [ecx]
		cmp	eax, [edx]
		jnz	loc_488
		add	ecx, 4
		add	edx, 4
		sub	edi, 4
		jnb	short loc_1C8
		push	offset ??_C@_01LFCBOECM@?4?$AA@	; "."
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		lea	eax, [esp+58h+var_3C]
		push	eax
		call	_EVP_MD_CTX_init
		add	esp, 14h
		push	0
		call	_EVP_sha256
		push	eax
		lea	eax, [esp+50h+var_3C]
		push	eax
		call	_EVP_DigestInit_ex
		add	esp, 0Ch
		mov	edi, 0F4240h
		nop	dword ptr [eax+00000000h]

loc_224:				; CODE XREF: _main+145j
		mov	eax, 0A0h ; ' '
		cmp	edi, eax
		cmovl	eax, edi
		push	eax
		lea	eax, [esp+4Ch+var_3C]
		push	offset ??_C@_0KB@KFLNPPHB@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@ ; "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"...
		push	eax
		call	_EVP_DigestUpdate
		sub	edi, 0A0h ; ' '
		add	esp, 0Ch
		test	edi, edi
		jg	short loc_224
		push	0
		lea	eax, [esp+4Ch+var_24]
		push	eax
		lea	eax, [esp+50h+var_3C]
		push	eax
		call	_EVP_DigestFinal_ex
		lea	eax, [esp+54h+var_3C]
		push	eax
		call	_EVP_MD_CTX_cleanup
		add	esp, 10h
		lea	ecx, [esp+48h+var_24]
		mov	edx, offset _app_b3
		mov	edi, 1Ch

loc_277:				; CODE XREF: _main+186j
		mov	eax, [ecx]
		cmp	eax, [edx]
		jnz	loc_477
		add	ecx, 4
		add	edx, 4
		sub	edi, 4
		jnb	short loc_277
		push	offset ??_C@_01LFCBOECM@?4?$AA@	; "."
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 10h
		push	offset ??_C@_09MCFGFJHJ@?5passed?4?6?$AA@ ; " passed.\n"
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 10h
		push	offset ??_C@_0BB@JIOJIDJ@Testing?5SHA?9224?5?$AA@ ; "Testing SHA-224 "
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8
		push	0
		call	_EVP_sha224
		push	eax
		push	0
		lea	eax, [esp+54h+var_24]
		push	eax
		push	3
		push	offset ??_C@_03FIKCJHKP@abc?$AA@ ; `string'
		call	_EVP_Digest
		add	esp, 18h
		lea	ecx, [esp+48h+var_24]
		mov	edx, offset _addenum_1
		mov	edi, 18h

loc_305:				; CODE XREF: _main+214j
		mov	eax, [ecx]
		cmp	eax, [edx]
		jnz	loc_466
		add	ecx, 4
		add	edx, 4
		sub	edi, 4
		jnb	short loc_305
		push	offset ??_C@_01LFCBOECM@?4?$AA@	; "."
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 10h
		push	0
		call	_EVP_sha224
		push	eax
		push	0
		lea	eax, [esp+54h+var_24]
		push	eax
		push	38h ; '8'
		push	offset ??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@ ; "abcdbcdecdefdefgefghfghighijhijkijkljkl"...
		call	_EVP_Digest
		add	esp, 18h
		lea	ecx, [esp+48h+var_24]
		mov	edx, offset _addenum_2
		mov	edi, 18h
		xchg	ax, ax

loc_364:				; CODE XREF: _main+273j
		mov	eax, [ecx]
		cmp	eax, [edx]
		jnz	loc_488
		add	ecx, 4
		add	edx, 4
		sub	edi, 4
		jnb	short loc_364
		push	offset ??_C@_01LFCBOECM@?4?$AA@	; "."
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		lea	eax, [esp+58h+var_3C]
		push	eax
		call	_EVP_MD_CTX_init
		add	esp, 14h
		push	0
		call	_EVP_sha224
		push	eax
		lea	eax, [esp+50h+var_3C]
		push	eax
		call	_EVP_DigestInit_ex
		add	esp, 0Ch
		mov	edi, 0F4240h

loc_3B9:				; CODE XREF: _main+2D7j
		mov	eax, 40h ; '@'
		cmp	edi, eax
		cmovl	eax, edi
		push	eax
		lea	eax, [esp+4Ch+var_3C]
		push	offset ??_C@_0EB@DGHFABGM@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@ ; "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"...
		push	eax
		call	_EVP_DigestUpdate
		sub	edi, 40h ; '@'
		add	esp, 0Ch
		test	edi, edi
		jg	short loc_3B9
		push	0
		lea	eax, [esp+4Ch+var_24]
		push	eax
		lea	eax, [esp+50h+var_3C]
		push	eax
		call	_EVP_DigestFinal_ex
		lea	eax, [esp+54h+var_3C]
		push	eax
		call	_EVP_MD_CTX_cleanup
		add	esp, 10h
		lea	ecx, [esp+48h+var_24]
		mov	edx, offset _addenum_3
		mov	edi, 18h

loc_409:				; CODE XREF: _main+314j
		mov	eax, [ecx]
		cmp	eax, [edx]
		jnz	short loc_477
		add	ecx, 4
		add	edx, 4
		sub	edi, 4
		jnb	short loc_409
		push	offset ??_C@_01LFCBOECM@?4?$AA@	; "."
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 10h
		push	offset ??_C@_09MCFGFJHJ@?5passed?4?6?$AA@ ; " passed.\n"
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 10h
		xor	eax, eax
		pop	ebx
		pop	edi
		pop	esi
		mov	ecx, [esp+3Ch+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_466:				; CODE XREF: _main+205j
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 8
		push	offset ??_C@_0BG@FPGLGKP@?6TEST?51?5of?53?5failed?4?6?$AA@ ; "\nTEST 1 of 3 failed.\n"
		jmp	short loc_497
; ---------------------------------------------------------------------------

loc_477:				; CODE XREF: _main+177j _main+309j
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 8
		push	offset ??_C@_0BG@ICFGJDMM@?6TEST?53?5of?53?5failed?4?6?$AA@ ; "\nTEST 3	of 3 failed.\n"
		jmp	short loc_497
; ---------------------------------------------------------------------------

loc_488:				; CODE XREF: _main+C8j	_main+264j
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	ebx ; __imp__fflush
		add	esp, 8
		push	offset ??_C@_0BG@CMDOACFN@?6TEST?52?5of?53?5failed?4?6?$AA@ ; "\nTEST 2	of 3 failed.\n"

loc_497:				; CODE XREF: _main+371j _main+382j
		push	2
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8
		mov	eax, 1
		pop	ebx
		pop	edi
		pop	esi
		mov	ecx, [esp+3Ch+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_4BE:				; CODE XREF: _main+64j
		push	1
		call	esi ; __imp____acrt_iob_func
		push	eax		; File
		call	dword ptr ds:__imp__fflush
		add	esp, 8
		push	offset ??_C@_0BG@FPGLGKP@?6TEST?51?5of?53?5failed?4?6?$AA@ ; "\nTEST 1 of 3 failed.\n"
		push	2
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		mov	ecx, [esp+4Ch+var_4]
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 3Ch
		retn
_main		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4F8h
; COMDAT (pick any)
		public ??_C@_0BB@JHNNHEOO@Testing?5SHA?9256?5?$AA@
; char `string'[]
??_C@_0BB@JHNNHEOO@Testing?5SHA?9256?5?$AA@ db 'Testing SHA-256 ',0 ; DATA XREF: _main+1Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50Ch
; COMDAT (pick any)
		public ??_C@_03FIKCJHKP@abc?$AA@
; `string'
??_C@_03FIKCJHKP@abc?$AA@ dd 636261h	; DATA XREF: _main+43o	_main+1E6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 510h
; COMDAT (pick any)
		public ??_C@_0BG@FPGLGKP@?6TEST?51?5of?53?5failed?4?6?$AA@
; char `string'[]
??_C@_0BG@FPGLGKP@?6TEST?51?5of?53?5failed?4?6?$AA@ db 0Ah ; DATA XREF:	_main+36Co
					; _main+3C8o
		db 'TEST 1 of 3 failed.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 528h
; COMDAT (pick any)
		public ??_C@_01LFCBOECM@?4?$AA@
; char `string'[2]
??_C@_01LFCBOECM@?4?$AA@ db '.',0       ; DATA XREF: _main+76o _main+D9o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 52Ch
; COMDAT (pick any)
		public ??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@
; `string'
??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@ db	'abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq',0
					; DATA XREF: _main+A9o	_main+243o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 568h
; COMDAT (pick any)
		public ??_C@_0BG@CMDOACFN@?6TEST?52?5of?53?5failed?4?6?$AA@
; char `string'[]
??_C@_0BG@CMDOACFN@?6TEST?52?5of?53?5failed?4?6?$AA@ db	0Ah ; DATA XREF: _main+38Eo
		db 'TEST 2 of 3 failed.',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 580h
; COMDAT (pick any)
		public ??_C@_0KB@KFLNPPHB@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@
; `string'
??_C@_0KB@KFLNPPHB@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@ db	'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
					; DATA XREF: _main+12Fo
		db 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
		db 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 624h
; COMDAT (pick any)
		public ??_C@_0BG@ICFGJDMM@?6TEST?53?5of?53?5failed?4?6?$AA@
; `string'
??_C@_0BG@ICFGJDMM@?6TEST?53?5of?53?5failed?4?6?$AA@ db	0Ah ; DATA XREF: _main+37Do
		db 'TEST 3 of 3 failed.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 63Ch
; COMDAT (pick any)
		public ??_C@_09MCFGFJHJ@?5passed?4?6?$AA@
; char `string'[]
??_C@_09MCFGFJHJ@?5passed?4?6?$AA@ db ' passed.',0Ah,0 ; DATA XREF: _main+1A4o
					; _main+332o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 648h
; COMDAT (pick any)
		public ??_C@_0BB@JIOJIDJ@Testing?5SHA?9224?5?$AA@
; char `string'[]
??_C@_0BB@JIOJIDJ@Testing?5SHA?9224?5?$AA@ db 'Testing SHA-224 ',0 ; DATA XREF: _main+1C0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 65Ch
; COMDAT (pick any)
		public ??_C@_0EB@DGHFABGM@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@
; `string'
??_C@_0EB@DGHFABGM@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@ db	'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',0
					; DATA XREF: _main+2C4o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _main+24p
					; _main+7Dp ...
; int __cdecl _fflush(FILE *File)
		extrn __imp__fflush:near ; CODE	XREF: _main+93p _main+F0p ...
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _fprintf+19p
					; DATA XREF: ...
		extrn _EVP_MD_CTX_init:near ; CODE XREF: _main+F7p _main+293p
		extrn _EVP_MD_CTX_cleanup:near ; CODE XREF: _main+15Dp
					; _main+2EFp
		extrn _EVP_DigestInit_ex:near ;	CODE XREF: _main+10Cp
					; _main+2A8p
		extrn _EVP_DigestUpdate:near ; CODE XREF: _main+135p
					; _main+2CAp
		extrn _EVP_DigestFinal_ex:near ; CODE XREF: _main+153p
					; _main+2E5p
		extrn _EVP_Digest:near	; CODE XREF: _main+48p	_main+AEp ...
		extrn _EVP_sha224:near	; CODE XREF: _main+1D7p _main+234p ...
		extrn _EVP_sha256:near	; CODE XREF: _main+34p	_main+9Ap ...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _main+359p
					; _main+3B1p ...
		extrn __chkstk:near	; CODE XREF: _main+5p
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso
		extrn ___security_cookie:near ;	DATA XREF: _main+Ar


		end

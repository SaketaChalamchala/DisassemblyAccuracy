;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	EA78F0532716DAE3EB9180A58A74809F
; Input	CRC32 :	3300A567

; File Name   :	C:\compspace\Diff\openssl\obj\ui_err.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
; COMDAT (pick any)
		public ??_C@_0BJ@HEJNMKGO@GENERAL_ALLOCATE_BOOLEAN?$AA@
; `string'
??_C@_0BJ@HEJNMKGO@GENERAL_ALLOCATE_BOOLEAN?$AA@ db 'GENERAL_ALLOCATE_BOOLEAN',0
					; DATA XREF: .data:00000134o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
; COMDAT (pick any)
		public ??_C@_0BI@GHJBOEFM@GENERAL_ALLOCATE_PROMPT?$AA@
; `string'
??_C@_0BI@GHJBOEFM@GENERAL_ALLOCATE_PROMPT?$AA@	db 'GENERAL_ALLOCATE_PROMPT',0
					; DATA XREF: .data:0000013Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
; COMDAT (pick any)
		public ??_C@_0BI@OAGFBGFA@GENERAL_ALLOCATE_STRING?$AA@
; `string'
??_C@_0BI@OAGFBGFA@GENERAL_ALLOCATE_STRING?$AA@	db 'GENERAL_ALLOCATE_STRING',0
					; DATA XREF: .data:00000144o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
; COMDAT (pick any)
		public ??_C@_07PKCPFHP@UI_ctrl?$AA@
; `string'
??_C@_07PKCPFHP@UI_ctrl?$AA@ db	'UI_ctrl',0 ; DATA XREF: .data:0000014Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
; COMDAT (pick any)
		public ??_C@_0BE@MCDDKAGP@UI_dup_error_string?$AA@
; `string'
??_C@_0BE@MCDDKAGP@UI_dup_error_string?$AA@ db 'UI_dup_error_string',0
					; DATA XREF: .data:00000154o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
; COMDAT (pick any)
		public ??_C@_0BD@BDJEJKHN@UI_dup_info_string?$AA@
; `string'
??_C@_0BD@BDJEJKHN@UI_dup_info_string?$AA@ db 'UI_dup_info_string',0
					; DATA XREF: .data:0000015Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
; COMDAT (pick any)
		public ??_C@_0BF@POGJGJNM@UI_dup_input_boolean?$AA@
; `string'
??_C@_0BF@POGJGJNM@UI_dup_input_boolean?$AA@ db	'UI_dup_input_boolean',0
					; DATA XREF: .data:00000164o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
; COMDAT (pick any)
		public ??_C@_0BE@EKGBGIID@UI_dup_input_string?$AA@
; `string'
??_C@_0BE@EKGBGIID@UI_dup_input_string?$AA@ db 'UI_dup_input_string',0
					; DATA XREF: .data:0000016Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
; COMDAT (pick any)
		public ??_C@_0BF@CLNOBEOL@UI_dup_verify_string?$AA@
; `string'
??_C@_0BF@CLNOBEOL@UI_dup_verify_string?$AA@ db	'UI_dup_verify_string',0
					; DATA XREF: .data:00000174o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
; COMDAT (pick any)
		public ??_C@_0P@LPDIOMBP@UI_get0_result?$AA@
; `string'
??_C@_0P@LPDIOMBP@UI_get0_result?$AA@ db 'UI_get0_result',0 ; DATA XREF: .data:0000017Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
; COMDAT (pick any)
		public ??_C@_0O@NGDBEIBL@UI_new_method?$AA@
; `string'
??_C@_0O@NGDBEIBL@UI_new_method?$AA@ db	'UI_new_method',0 ; DATA XREF: .data:00000184o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
; COMDAT (pick any)
		public ??_C@_0O@EDJPOOGP@UI_set_result?$AA@
; `string'
??_C@_0O@EDJPOOGP@UI_set_result?$AA@ db	'UI_set_result',0 ; DATA XREF: .data:0000018Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 0F0h
_UI_str_reasons	dd 28000068h		; DATA XREF: _ERR_load_UI_strings+1Do
		dd offset ??_C@_0CA@MODCIDDB@common?5ok?5and?5cancel?5characters?$AA@ ;	"common	ok and cancel characters"
		dd 28000066h
		dd offset ??_C@_0BA@IPAKCAFH@index?5too?5large?$AA@ ; "index too large"
		dd 28000067h
		dd offset ??_C@_0BA@CHEBNBMB@index?5too?5small?$AA@ ; "index too small"
		dd 28000069h
		dd offset ??_C@_0BB@HMMNCLKL@no?5result?5buffer?$AA@ ; "no result buffer"
		dd 28000064h
		dd offset ??_C@_0BB@HMLKGAPD@result?5too?5large?$AA@ ; "result too large"
		dd 28000065h
		dd offset ??_C@_0BB@NEPBJBGF@result?5too?5small?$AA@ ; "result too small"
		dd 2800006Ah
		dd offset ??_C@_0BI@HFFBAJKF@unknown?5control?5command?$AA@ ; "unknown control command"
		align 10h
_UI_str_functs	dd 2806C000h		; DATA XREF: _ERR_load_UI_stringsr
					; _ERR_load_UI_strings+12o
		dd offset ??_C@_0BJ@HEJNMKGO@GENERAL_ALLOCATE_BOOLEAN?$AA@ ; "GENERAL_ALLOCATE_BOOLEAN"
		dd 2806D000h
		dd offset ??_C@_0BI@GHJBOEFM@GENERAL_ALLOCATE_PROMPT?$AA@ ; "GENERAL_ALLOCATE_PROMPT"
		dd 28064000h
		dd offset ??_C@_0BI@OAGFBGFA@GENERAL_ALLOCATE_STRING?$AA@ ; "GENERAL_ALLOCATE_STRING"
		dd 2806F000h
		dd offset ??_C@_07PKCPFHP@UI_ctrl?$AA@ ; "UI_ctrl"
		dd 28065000h
		dd offset ??_C@_0BE@MCDDKAGP@UI_dup_error_string?$AA@ ;	"UI_dup_error_string"
		dd 28066000h
		dd offset ??_C@_0BD@BDJEJKHN@UI_dup_info_string?$AA@ ; "UI_dup_info_string"
		dd 2806E000h
		dd offset ??_C@_0BF@POGJGJNM@UI_dup_input_boolean?$AA@ ; "UI_dup_input_boolean"
		dd 28067000h
		dd offset ??_C@_0BE@EKGBGIID@UI_dup_input_string?$AA@ ;	"UI_dup_input_string"
		dd 2806A000h
		dd offset ??_C@_0BF@CLNOBEOL@UI_dup_verify_string?$AA@ ; "UI_dup_verify_string"
		dd 2806B000h
		dd offset ??_C@_0P@LPDIOMBP@UI_get0_result?$AA@	; "UI_get0_result"
		dd 28068000h
		dd offset ??_C@_0O@NGDBEIBL@UI_new_method?$AA@ ; "UI_new_method"
		dd 28069000h
		dd offset ??_C@_0O@EDJPOOGP@UI_set_result?$AA@ ; "UI_set_result"
		dd 2 dup(0)
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 198h
; COMDAT (pick any)
		public ??_C@_0CA@MODCIDDB@common?5ok?5and?5cancel?5characters?$AA@
; `string'
??_C@_0CA@MODCIDDB@common?5ok?5and?5cancel?5characters?$AA@ db 'common ok and cancel characters',0
					; DATA XREF: .data:000000F4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1B8h
; COMDAT (pick any)
		public ??_C@_0BA@IPAKCAFH@index?5too?5large?$AA@
; `string'
??_C@_0BA@IPAKCAFH@index?5too?5large?$AA@ db 'index too large',0
					; DATA XREF: .data:000000FCo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1C8h
; COMDAT (pick any)
		public ??_C@_0BA@CHEBNBMB@index?5too?5small?$AA@
; `string'
??_C@_0BA@CHEBNBMB@index?5too?5small?$AA@ db 'index too small',0
					; DATA XREF: .data:00000104o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1D8h
; COMDAT (pick any)
		public ??_C@_0BB@HMMNCLKL@no?5result?5buffer?$AA@
; `string'
??_C@_0BB@HMMNCLKL@no?5result?5buffer?$AA@ db 'no result buffer',0
					; DATA XREF: .data:0000010Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1ECh
; COMDAT (pick any)
		public ??_C@_0BB@HMLKGAPD@result?5too?5large?$AA@
; `string'
??_C@_0BB@HMLKGAPD@result?5too?5large?$AA@ db 'result too large',0
					; DATA XREF: .data:00000114o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 200h
; COMDAT (pick any)
		public ??_C@_0BB@NEPBJBGF@result?5too?5small?$AA@
; `string'
??_C@_0BB@NEPBJBGF@result?5too?5small?$AA@ db 'result too small',0
					; DATA XREF: .data:0000011Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 214h
; COMDAT (pick any)
		public ??_C@_0BI@HFFBAJKF@unknown?5control?5command?$AA@
; `string'
??_C@_0BI@HFFBAJKF@unknown?5control?5command?$AA@ db 'unknown control command',0
					; DATA XREF: .data:00000124o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 22Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ERR_load_UI_strings
_ERR_load_UI_strings proc near
		push	ds:_UI_str_functs
		call	_ERR_func_error_string
		add	esp, 4
		test	eax, eax
		jnz	short locret_258
		push	offset _UI_str_functs
		push	eax
		call	_ERR_load_strings
		push	offset _UI_str_reasons
		push	0
		call	_ERR_load_strings
		add	esp, 10h

locret_258:				; CODE XREF: _ERR_load_UI_strings+10j
		retn
_ERR_load_UI_strings endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_func_error_string:near ; CODE XREF: _ERR_load_UI_strings+6p
		extrn _ERR_load_strings:near ; CODE XREF: _ERR_load_UI_strings+18p
					; _ERR_load_UI_strings+24p


		end

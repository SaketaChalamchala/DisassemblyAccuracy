;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	EF090B4B8EBF347F6DCE457215455B60
; Input	CRC32 :	C5D17D73

; File Name   :	C:\compspace\Diff\openssl\obj\genrsa.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_scanf_options
___local_stdio_scanf_options proc near	; CODE XREF: __vsscanf_l+12p
					; _sscanf+11p
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
		retn
___local_stdio_scanf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public __vsscanf_l
__vsscanf_l	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	0FFFFFFFFh
		push	[esp+10h+arg_0]
		call	___local_stdio_scanf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vsscanf
		add	esp, 1Ch
		retn
__vsscanf_l	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 30h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_genrsa_cb	proc near		; DATA XREF: _genrsa_main+63o

arg_0		= dword	ptr  4
arg_8		= dword	ptr  0Ch

		mov	ecx, [esp+arg_0]
		mov	al, 2Ah	; '*'
		test	ecx, ecx
		jnz	short loc_41
		mov	byte ptr [esp+arg_0], 2Eh ; '.'
		jmp	short loc_6B
; ---------------------------------------------------------------------------

loc_41:					; CODE XREF: _genrsa_cb+8j
		cmp	ecx, 1
		jnz	short loc_4D
		mov	byte ptr [esp+arg_0], 2Bh ; '+'
		jmp	short loc_6B
; ---------------------------------------------------------------------------

loc_4D:					; CODE XREF: _genrsa_cb+14j
		cmp	ecx, 2
		jnz	short loc_59
		mov	byte ptr [esp+arg_0], 2Ah ; '*'
		jmp	short loc_6B
; ---------------------------------------------------------------------------

loc_59:					; CODE XREF: _genrsa_cb+20j
		cmp	ecx, 3
		movzx	eax, al
		mov	edx, 0Ah
		cmovz	eax, edx
		mov	byte ptr [esp+arg_0], al

loc_6B:					; CODE XREF: _genrsa_cb+Fj
					; _genrsa_cb+1Bj ...
		push	esi
		mov	esi, [esp+4+arg_8]
		lea	eax, [esp+4+arg_0]
		push	1
		push	eax
		push	dword ptr [esi+4]
		call	_BIO_write
		push	0
		push	0
		push	0Bh
		push	dword ptr [esi+4]
		call	_BIO_ctrl
		add	esp, 1Ch
		mov	eax, 1
		pop	esi
		retn
_genrsa_cb	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 98h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _genrsa_main
_genrsa_main	proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
ErrMsg		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 38h ; '8'
		call	__chkstk
		push	ebx
		push	ebp
		xor	ebp, ebp
		mov	[esp+40h+var_34], 800h
		push	esi
		push	edi
		mov	ebx, 1
		mov	[esp+48h+var_2C], 10001h
		mov	[esp+48h+ErrMsg], ebp
		xor	edi, edi
		mov	[esp+48h+var_20], ebp
		mov	[esp+48h+var_24], ebp
		mov	[esp+48h+var_1C], ebp
		mov	[esp+48h+var_30], ebp
		call	_BN_new
		xor	esi, esi
		mov	[esp+48h+var_10], eax
		mov	[esp+48h+var_28], esi
		test	eax, eax
		jz	loc_78A
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+48h+var_C], 2
		mov	[esp+48h+var_8], eax
		mov	[esp+48h+var_4], offset	_genrsa_cb
		test	eax, eax
		jnz	short loc_13E
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_13E
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_13E:				; CODE XREF: _genrsa_main+6Dj
					; _genrsa_main+84j
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	$err$161
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	edi, eax
		add	esp, 4
		mov	[esp+48h+var_38], edi
		test	edi, edi
		jnz	short loc_181
		push	offset ??_C@_0CB@ENHGOLMG@unable?5to?5create?5BIO?5for?5output?6@ ; "unable to create BIO for output\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	$err$161
; ---------------------------------------------------------------------------

loc_181:				; CODE XREF: _genrsa_main+CFj
		mov	edi, [esp+48h+arg_0]
		mov	ebx, [esp+48h+arg_4]
		dec	edi
		add	ebx, 4
		test	edi, edi
		jle	loc_5FE
		nop	dword ptr [eax]

loc_198:				; CODE XREF: _genrsa_main+560j
		mov	esi, [ebx]
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_1A8:				; CODE XREF: _genrsa_main+12Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1C8
		test	dl, dl
		jz	short loc_1C4
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1C8
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1A8

loc_1C4:				; CODE XREF: _genrsa_main+118j
		xor	eax, eax
		jmp	short loc_1CD
; ---------------------------------------------------------------------------

loc_1C8:				; CODE XREF: _genrsa_main+114j
					; _genrsa_main+120j
		sbb	eax, eax
		or	eax, 1

loc_1CD:				; CODE XREF: _genrsa_main+12Ej
		test	eax, eax
		jnz	short loc_1EA
		dec	edi
		cmp	edi, 1
		jl	$bad$162
		mov	esi, [ebx+4]
		add	ebx, 4
		mov	[esp+48h+ErrMsg], esi
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_1EA:				; CODE XREF: _genrsa_main+137j
		mov	ecx, offset ??_C@_02MEEAJGGO@?93?$AA@ ;	`string'
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_1F8:				; CODE XREF: _genrsa_main+17Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_218
		test	dl, dl
		jz	short loc_214
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_218
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1F8

loc_214:				; CODE XREF: _genrsa_main+168j
		xor	eax, eax
		jmp	short loc_21D
; ---------------------------------------------------------------------------

loc_218:				; CODE XREF: _genrsa_main+164j
					; _genrsa_main+170j
		sbb	eax, eax
		or	eax, 1

loc_21D:				; CODE XREF: _genrsa_main+17Ej
		test	eax, eax
		jnz	short loc_22E
		mov	[esp+48h+var_2C], 3
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_22E:				; CODE XREF: _genrsa_main+187j
		mov	ecx, offset ??_C@_03EDNOFFIF@?9F4?$AA@ ; `string'
		mov	eax, esi
		nop	dword ptr [eax]

loc_238:				; CODE XREF: _genrsa_main+1BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_258
		test	dl, dl
		jz	short loc_254
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_258
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_238

loc_254:				; CODE XREF: _genrsa_main+1A8j
		xor	eax, eax
		jmp	short loc_25D
; ---------------------------------------------------------------------------

loc_258:				; CODE XREF: _genrsa_main+1A4j
					; _genrsa_main+1B0j
		sbb	eax, eax
		or	eax, 1

loc_25D:				; CODE XREF: _genrsa_main+1BEj
		test	eax, eax
		jz	loc_5EA
		mov	ecx, offset ??_C@_03HLJDBDGF@?9f4?$AA@ ; `string'
		mov	eax, esi

loc_26C:				; CODE XREF: _genrsa_main+1EEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_28C
		test	dl, dl
		jz	short loc_288
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_28C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_26C

loc_288:				; CODE XREF: _genrsa_main+1DCj
		xor	eax, eax
		jmp	short loc_291
; ---------------------------------------------------------------------------

loc_28C:				; CODE XREF: _genrsa_main+1D8j
					; _genrsa_main+1E4j
		sbb	eax, eax
		or	eax, 1

loc_291:				; CODE XREF: _genrsa_main+1F2j
		test	eax, eax
		jz	loc_5EA
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi

loc_2A0:				; CODE XREF: _genrsa_main+222j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2C0
		test	dl, dl
		jz	short loc_2BC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2C0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2A0

loc_2BC:				; CODE XREF: _genrsa_main+210j
		xor	eax, eax
		jmp	short loc_2C5
; ---------------------------------------------------------------------------

loc_2C0:				; CODE XREF: _genrsa_main+20Cj
					; _genrsa_main+218j
		sbb	eax, eax
		or	eax, 1

loc_2C5:				; CODE XREF: _genrsa_main+226j
		test	eax, eax
		jnz	short loc_2E2
		dec	edi
		cmp	edi, 1
		jl	$bad$162
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+48h+var_1C], eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_2E2:				; CODE XREF: _genrsa_main+22Fj
		mov	ecx, offset ??_C@_05LGFPCDPE@?9rand?$AA@ ; "-rand"
		mov	eax, esi

loc_2E9:				; CODE XREF: _genrsa_main+26Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_309
		test	dl, dl
		jz	short loc_305
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_309
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2E9

loc_305:				; CODE XREF: _genrsa_main+259j
		xor	eax, eax
		jmp	short loc_30E
; ---------------------------------------------------------------------------

loc_309:				; CODE XREF: _genrsa_main+255j
					; _genrsa_main+261j
		sbb	eax, eax
		or	eax, 1

loc_30E:				; CODE XREF: _genrsa_main+26Fj
		test	eax, eax
		jnz	short loc_32B
		dec	edi
		cmp	edi, 1
		jl	$bad$162
		mov	esi, [ebx+4]
		add	ebx, 4
		mov	[esp+48h+var_30], esi
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_32B:				; CODE XREF: _genrsa_main+278j
		mov	ecx, offset ??_C@_04POMGKAPN@?9des?$AA@	; "-des"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_338:				; CODE XREF: _genrsa_main+2BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_358
		test	dl, dl
		jz	short loc_354
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_358
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_338

loc_354:				; CODE XREF: _genrsa_main+2A8j
		xor	eax, eax
		jmp	short loc_35D
; ---------------------------------------------------------------------------

loc_358:				; CODE XREF: _genrsa_main+2A4j
					; _genrsa_main+2B0j
		sbb	eax, eax
		or	eax, 1

loc_35D:				; CODE XREF: _genrsa_main+2BEj
		test	eax, eax
		jnz	short loc_36D
		call	_EVP_des_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_36D:				; CODE XREF: _genrsa_main+2C7j
		mov	ecx, offset ??_C@_05DHJJCNDB@?9des3?$AA@ ; "-des3"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_378:				; CODE XREF: _genrsa_main+2FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_398
		test	dl, dl
		jz	short loc_394
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_398
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_378

loc_394:				; CODE XREF: _genrsa_main+2E8j
		xor	eax, eax
		jmp	short loc_39D
; ---------------------------------------------------------------------------

loc_398:				; CODE XREF: _genrsa_main+2E4j
					; _genrsa_main+2F0j
		sbb	eax, eax
		or	eax, 1

loc_39D:				; CODE XREF: _genrsa_main+2FEj
		test	eax, eax
		jnz	short loc_3AD
		call	_EVP_des_ede3_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_3AD:				; CODE XREF: _genrsa_main+307j
		mov	ecx, offset ??_C@_05OHJDGOPB@?9idea?$AA@ ; "-idea"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_3B8:				; CODE XREF: _genrsa_main+33Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3D8
		test	dl, dl
		jz	short loc_3D4
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3D8
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3B8

loc_3D4:				; CODE XREF: _genrsa_main+328j
		xor	eax, eax
		jmp	short loc_3DD
; ---------------------------------------------------------------------------

loc_3D8:				; CODE XREF: _genrsa_main+324j
					; _genrsa_main+330j
		sbb	eax, eax
		or	eax, 1

loc_3DD:				; CODE XREF: _genrsa_main+33Ej
		test	eax, eax
		jnz	short loc_3ED
		call	_EVP_idea_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_3ED:				; CODE XREF: _genrsa_main+347j
		mov	ecx, offset ??_C@_05IAIHCPC@?9seed?$AA@	; "-seed"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_3F8:				; CODE XREF: _genrsa_main+37Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_418
		test	dl, dl
		jz	short loc_414
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_418
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3F8

loc_414:				; CODE XREF: _genrsa_main+368j
		xor	eax, eax
		jmp	short loc_41D
; ---------------------------------------------------------------------------

loc_418:				; CODE XREF: _genrsa_main+364j
					; _genrsa_main+370j
		sbb	eax, eax
		or	eax, 1

loc_41D:				; CODE XREF: _genrsa_main+37Ej
		test	eax, eax
		jnz	short loc_42D
		call	_EVP_seed_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_42D:				; CODE XREF: _genrsa_main+387j
		mov	ecx, offset ??_C@_07ELMDAGHH@?9aes128?$AA@ ; "-aes128"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_438:				; CODE XREF: _genrsa_main+3BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_458
		test	dl, dl
		jz	short loc_454
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_458
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_438

loc_454:				; CODE XREF: _genrsa_main+3A8j
		xor	eax, eax
		jmp	short loc_45D
; ---------------------------------------------------------------------------

loc_458:				; CODE XREF: _genrsa_main+3A4j
					; _genrsa_main+3B0j
		sbb	eax, eax
		or	eax, 1

loc_45D:				; CODE XREF: _genrsa_main+3BEj
		test	eax, eax
		jnz	short loc_46D
		call	_EVP_aes_128_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_46D:				; CODE XREF: _genrsa_main+3C7j
		mov	ecx, offset ??_C@_07LNHJABBM@?9aes192?$AA@ ; "-aes192"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_478:				; CODE XREF: _genrsa_main+3FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_498
		test	dl, dl
		jz	short loc_494
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_498
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_478

loc_494:				; CODE XREF: _genrsa_main+3E8j
		xor	eax, eax
		jmp	short loc_49D
; ---------------------------------------------------------------------------

loc_498:				; CODE XREF: _genrsa_main+3E4j
					; _genrsa_main+3F0j
		sbb	eax, eax
		or	eax, 1

loc_49D:				; CODE XREF: _genrsa_main+3FEj
		test	eax, eax
		jnz	short loc_4AD
		call	_EVP_aes_192_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_4AD:				; CODE XREF: _genrsa_main+407j
		mov	ecx, offset ??_C@_07MCLKJCJC@?9aes256?$AA@ ; "-aes256"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_4B8:				; CODE XREF: _genrsa_main+43Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4D8
		test	dl, dl
		jz	short loc_4D4
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4D8
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4B8

loc_4D4:				; CODE XREF: _genrsa_main+428j
		xor	eax, eax
		jmp	short loc_4DD
; ---------------------------------------------------------------------------

loc_4D8:				; CODE XREF: _genrsa_main+424j
					; _genrsa_main+430j
		sbb	eax, eax
		or	eax, 1

loc_4DD:				; CODE XREF: _genrsa_main+43Ej
		test	eax, eax
		jnz	short loc_4ED
		call	_EVP_aes_256_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_4ED:				; CODE XREF: _genrsa_main+447j
		mov	ecx, offset ??_C@_0N@MALOKPBG@?9camellia128?$AA@ ; "-camellia128"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_4F8:				; CODE XREF: _genrsa_main+47Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_518
		test	dl, dl
		jz	short loc_514
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_518
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4F8

loc_514:				; CODE XREF: _genrsa_main+468j
		xor	eax, eax
		jmp	short loc_51D
; ---------------------------------------------------------------------------

loc_518:				; CODE XREF: _genrsa_main+464j
					; _genrsa_main+470j
		sbb	eax, eax
		or	eax, 1

loc_51D:				; CODE XREF: _genrsa_main+47Ej
		test	eax, eax
		jnz	short loc_52D
		call	_EVP_camellia_128_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_52D:				; CODE XREF: _genrsa_main+487j
		mov	ecx, offset ??_C@_0N@DGAEKIHN@?9camellia192?$AA@ ; "-camellia192"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_538:				; CODE XREF: _genrsa_main+4BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_558
		test	dl, dl
		jz	short loc_554
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_558
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_538

loc_554:				; CODE XREF: _genrsa_main+4A8j
		xor	eax, eax
		jmp	short loc_55D
; ---------------------------------------------------------------------------

loc_558:				; CODE XREF: _genrsa_main+4A4j
					; _genrsa_main+4B0j
		sbb	eax, eax
		or	eax, 1

loc_55D:				; CODE XREF: _genrsa_main+4BEj
		test	eax, eax
		jnz	short loc_56D
		call	_EVP_camellia_192_cbc
		mov	ebp, eax
		jmp	loc_5F2
; ---------------------------------------------------------------------------

loc_56D:				; CODE XREF: _genrsa_main+4C7j
		mov	ecx, offset ??_C@_0N@EJMHDLPD@?9camellia256?$AA@ ; "-camellia256"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_578:				; CODE XREF: _genrsa_main+4FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_598
		test	dl, dl
		jz	short loc_594
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_598
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_578

loc_594:				; CODE XREF: _genrsa_main+4E8j
		xor	eax, eax
		jmp	short loc_59D
; ---------------------------------------------------------------------------

loc_598:				; CODE XREF: _genrsa_main+4E4j
					; _genrsa_main+4F0j
		sbb	eax, eax
		or	eax, 1

loc_59D:				; CODE XREF: _genrsa_main+4FEj
		test	eax, eax
		jnz	short loc_5AA
		call	_EVP_camellia_256_cbc
		mov	ebp, eax
		jmp	short loc_5F2
; ---------------------------------------------------------------------------

loc_5AA:				; CODE XREF: _genrsa_main+507j
		mov	eax, offset ??_C@_08KCDBEMAI@?9passout?$AA@ ; "-passout"

loc_5AF:				; CODE XREF: _genrsa_main+531j
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_5CF
		test	cl, cl
		jz	short loc_5CB
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_5CF
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_5AF

loc_5CB:				; CODE XREF: _genrsa_main+51Fj
		xor	eax, eax
		jmp	short loc_5D4
; ---------------------------------------------------------------------------

loc_5CF:				; CODE XREF: _genrsa_main+51Bj
					; _genrsa_main+527j
		sbb	eax, eax
		or	eax, 1

loc_5D4:				; CODE XREF: _genrsa_main+535j
		test	eax, eax
		jnz	short loc_5FE
		dec	edi
		cmp	edi, 1
		jl	short $bad$162
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+48h+var_20], eax
		jmp	short loc_5F2
; ---------------------------------------------------------------------------

loc_5EA:				; CODE XREF: _genrsa_main+1C7j
					; _genrsa_main+1FBj
		mov	[esp+48h+var_2C], 10001h

loc_5F2:				; CODE XREF: _genrsa_main+14Dj
					; _genrsa_main+191j ...
		dec	edi
		add	ebx, 4
		test	edi, edi
		jg	loc_198

loc_5FE:				; CODE XREF: _genrsa_main+F7j
					; _genrsa_main+53Ej
		cmp	edi, 1
		jl	loc_7B7
		lea	eax, [esp+48h+var_34]
		push	eax
		push	offset ??_C@_02DPKJAMEF@?$CFd?$AA@ ; "%d"
		push	dword ptr [ebx]	; Src
		call	_sscanf
		add	esp, 0Ch
		test	eax, eax
		jz	short $bad$162
		cmp	[esp+48h+var_34], 0
		jge	loc_7B7

$bad$162:				; CODE XREF: _genrsa_main+13Dj
					; _genrsa_main+235j ...
		push	offset ??_C@_0CA@PMIDOJOM@usage?3?5genrsa?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@	; "usage: genrsa [args]	[numbits]\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EB@BBEPLNGO@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ ; "	-des		encrypt	the generated "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0FD@KENFKNBF@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ ; " -des3	       encrypt the generated "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EC@JFDOGDEB@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ ; " -idea	       encrypt the generated "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_07KIGMBBIJ@?5?9seed?6?$AA@	; " -seed\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "		   encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; "	-aes128, -aes192, -aes256\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "		   encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ ; " -camellia128, -camellia192, -camellia2"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "		   encrypt PEM output wit"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@NEMOMECI@?5?9out?5file?5?5?5?5?5?5?5output?5the?5key?5@ ; " -out file	     output the	key to 'fil"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ ; " -passout arg	 output	file pass phras"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DD@PHOJIKJG@?5?9f4?5?5?5?5?5?5?5?5?5?5?5?5?5use?5F4?5?$CI0x10001@	; " -f4		    use	F4 (0x10001) for t"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@ECLHDDHL@?5?93?5?5?5?5?5?5?5?5?5?5?5?5?5?5use?53?5for?5the?5E@	; " -3		    use	3 for the E value\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ ; " -engine e	      use engine e, possibly"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	3Bh ; ';'
		push	3Bh ; ';'
		push	offset ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; "	-rand file%cfile%c...\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 48h
		push	offset ??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@ ; "		       load the	file (or the "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@ ; "		   the random number gene"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h

loc_757:				; CODE XREF: _genrsa_main+756j
		mov	edi, [esp+48h+var_38]

loc_75B:				; CODE XREF: _genrsa_main+7EEj
					; _genrsa_main+834j ...
		mov	ebx, 1

$err$161:				; CODE XREF: _genrsa_main+B3j
					; _genrsa_main+E4j ...
		push	[esp+48h+var_10]
		call	_BN_free
		mov	eax, [esp+4Ch+var_28]
		add	esp, 4
		test	eax, eax
		jz	short loc_77D
		push	eax
		call	_RSA_free
		add	esp, 4

loc_77D:				; CODE XREF: _genrsa_main+6DAj
		test	edi, edi
		jz	short loc_78A
		push	edi
		call	_BIO_free_all
		add	esp, 4

loc_78A:				; CODE XREF: _genrsa_main+4Cj
					; _genrsa_main+6E7j
		mov	eax, [esp+48h+var_24]
		test	eax, eax
		jz	short loc_79B
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_79B:				; CODE XREF: _genrsa_main+6F8j
		test	ebx, ebx
		jz	short loc_7AD
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

loc_7AD:				; CODE XREF: _genrsa_main+705j
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, ebx
		pop	ebx
		add	esp, 38h
		retn
; ---------------------------------------------------------------------------

loc_7B7:				; CODE XREF: _genrsa_main+569j
					; _genrsa_main+58Cj
		call	_ERR_load_crypto_strings
		lea	eax, [esp+48h+var_24]
		push	eax
		push	0
		push	[esp+50h+var_20]
		push	0
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 14h
		test	eax, eax
		jnz	short loc_7F3
		push	offset ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; "Error getting password\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_757
; ---------------------------------------------------------------------------

loc_7F3:				; CODE XREF: _genrsa_main+741j
		push	0
		push	[esp+4Ch+var_1C]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		mov	ebx, [esp+54h+ErrMsg]
		add	esp, 0Ch
		mov	esi, eax
		test	ebx, ebx
		jnz	short loc_866
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		mov	edi, [esp+4Ch+var_38]
		push	eax
		push	ebx
		push	6Ah ; 'j'
		push	edi
		call	_BIO_ctrl
		add	esp, 14h

loc_82A:				; CODE XREF: _genrsa_main+7E2j
		push	1
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		add	esp, 0Ch
		test	eax, eax
		mov	eax, [esp+48h+var_30]
		jnz	short loc_88B
		test	eax, eax
		jnz	short loc_88F
		call	_RAND_status
		test	eax, eax
		jnz	short loc_8A9
		push	offset ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ ; "warning, not much extra random data, co"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short loc_8A9
; ---------------------------------------------------------------------------

loc_866:				; CODE XREF: _genrsa_main+777j
		mov	edi, [esp+48h+var_38]
		push	ebx
		push	5
		push	6Ch ; 'l'
		push	edi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_82A
		push	ebx		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		jmp	loc_75B
; ---------------------------------------------------------------------------

loc_88B:				; CODE XREF: _genrsa_main+7AAj
		test	eax, eax
		jz	short loc_8A9

loc_88F:				; CODE XREF: _genrsa_main+7AEj
		push	eax
		call	_app_RAND_load_files
		push	eax
		push	offset ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; "%ld semi-random	bytes loaded\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h

loc_8A9:				; CODE XREF: _genrsa_main+7B7j
					; _genrsa_main+7CCj ...
		push	[esp+48h+var_34]
		push	offset ??_C@_0DB@KBGJNLO@Generating?5RSA?5private?5key?0?5?$CFd?5b@ ; "Generating RSA private key, %d bit long"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	esi
		call	_RSA_new_method
		add	esp, 10h
		mov	[esp+48h+var_28], eax
		test	eax, eax
		jz	loc_75B
		push	[esp+48h+var_2C]
		mov	esi, [esp+4Ch+var_10]
		push	esi
		call	_BN_set_word
		add	esp, 8
		test	eax, eax
		jz	loc_75B
		lea	eax, [esp+48h+var_C]
		push	eax
		push	esi
		push	[esp+50h+var_34]
		mov	esi, [esp+54h+var_28]
		push	esi
		call	_RSA_generate_key_ex
		add	esp, 10h
		test	eax, eax
		jz	loc_75B
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_write_file
		mov	eax, [esi+14h]
		add	esp, 8
		xor	edx, edx
		mov	ecx, [eax+4]
		test	ecx, ecx
		jle	short loc_932
		mov	eax, [eax]

loc_928:				; CODE XREF: _genrsa_main+898j
		mov	edx, [eax]
		lea	eax, [eax+4]
		sub	ecx, 1
		jnz	short loc_928

loc_932:				; CODE XREF: _genrsa_main+88Cj
		push	edx
		push	edx
		push	offset ??_C@_0BC@MFKIOEF@e?5is?5?$CFld?5?$CI0x?$CFlX?$CJ?6?$AA@	; "e is	%ld (0x%lX)\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	eax, [esp+58h+var_24]
		mov	[esp+58h+ErrMsg], eax
		lea	eax, [esp+58h+ErrMsg]
		push	eax
		push	offset _password_callback
		push	0
		push	0
		push	ebp
		push	esi
		push	edi
		mov	[esp+74h+var_14], ebx
		call	_PEM_write_bio_RSAPrivateKey
		xor	ecx, ecx
		add	esp, 2Ch
		test	eax, eax
		mov	ebx, 1
		cmovnz	ebx, ecx
		jmp	$err$161
_genrsa_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 97Ch
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int sscanf(const char	*Src, const char *Format, ...)
		public _sscanf
_sscanf		proc near		; CODE XREF: _genrsa_main+57Bp

Src		= dword	ptr  4
Format		= dword	ptr  8
arg_8		= byte ptr  0Ch

		lea	eax, [esp+arg_8]
		push	eax
		push	0
		push	[esp+8+Format]
		push	0FFFFFFFFh
		push	[esp+10h+Src]
		call	___local_stdio_scanf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vsscanf
		add	esp, 1Ch
		retn
_sscanf		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9A4h
; COMDAT (pick any)
		public ??_C@_0CB@ENHGOLMG@unable?5to?5create?5BIO?5for?5output?6@
; `string'
??_C@_0CB@ENHGOLMG@unable?5to?5create?5BIO?5for?5output?6@ db 'unable to create BIO for output',0Ah,0
					; DATA XREF: _genrsa_main+D1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9C8h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _genrsa_main+102o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9D0h
; COMDAT (pick any)
		public ??_C@_02MEEAJGGO@?93?$AA@
; `string'
??_C@_02MEEAJGGO@?93?$AA@ db 2Dh, 33h, 0 ; DATA	XREF: _genrsa_main:loc_1EAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9D4h
; COMDAT (pick any)
		public ??_C@_03EDNOFFIF@?9F4?$AA@
; `string'
??_C@_03EDNOFFIF@?9F4?$AA@ dd 34462Dh	; DATA XREF: _genrsa_main:loc_22Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9D8h
; COMDAT (pick any)
		public ??_C@_03HLJDBDGF@?9f4?$AA@
; `string'
??_C@_03HLJDBDGF@?9f4?$AA@ dd 34662Dh	; DATA XREF: _genrsa_main+1CDo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9DCh
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _genrsa_main+201o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9E4h
; COMDAT (pick any)
		public ??_C@_05LGFPCDPE@?9rand?$AA@
; `string'
??_C@_05LGFPCDPE@?9rand?$AA@ db	'-rand',0 ; DATA XREF: _genrsa_main:loc_2E2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9ECh
; COMDAT (pick any)
		public ??_C@_04POMGKAPN@?9des?$AA@
; `string'
??_C@_04POMGKAPN@?9des?$AA@ db '-des',0 ; DATA XREF: _genrsa_main:loc_32Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9F4h
; COMDAT (pick any)
		public ??_C@_05DHJJCNDB@?9des3?$AA@
; `string'
??_C@_05DHJJCNDB@?9des3?$AA@ db	'-des3',0 ; DATA XREF: _genrsa_main:loc_36Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9FCh
; COMDAT (pick any)
		public ??_C@_05OHJDGOPB@?9idea?$AA@
; `string'
??_C@_05OHJDGOPB@?9idea?$AA@ db	'-idea',0 ; DATA XREF: _genrsa_main:loc_3ADo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A04h
; COMDAT (pick any)
		public ??_C@_05IAIHCPC@?9seed?$AA@
; `string'
??_C@_05IAIHCPC@?9seed?$AA@ db '-seed',0 ; DATA XREF: _genrsa_main:loc_3EDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0Ch
; COMDAT (pick any)
		public ??_C@_07ELMDAGHH@?9aes128?$AA@
; `string'
??_C@_07ELMDAGHH@?9aes128?$AA@ db '-aes128',0 ; DATA XREF: _genrsa_main:loc_42Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A14h
; COMDAT (pick any)
		public ??_C@_07LNHJABBM@?9aes192?$AA@
; `string'
??_C@_07LNHJABBM@?9aes192?$AA@ db '-aes192',0 ; DATA XREF: _genrsa_main:loc_46Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A1Ch
; COMDAT (pick any)
		public ??_C@_07MCLKJCJC@?9aes256?$AA@
; `string'
??_C@_07MCLKJCJC@?9aes256?$AA@ db '-aes256',0 ; DATA XREF: _genrsa_main:loc_4ADo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A24h
; COMDAT (pick any)
		public ??_C@_0N@MALOKPBG@?9camellia128?$AA@
; `string'
??_C@_0N@MALOKPBG@?9camellia128?$AA@ db	'-camellia128',0 ; DATA XREF: _genrsa_main:loc_4EDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A34h
; COMDAT (pick any)
		public ??_C@_0N@DGAEKIHN@?9camellia192?$AA@
; `string'
??_C@_0N@DGAEKIHN@?9camellia192?$AA@ db	'-camellia192',0 ; DATA XREF: _genrsa_main:loc_52Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A44h
; COMDAT (pick any)
		public ??_C@_0N@EJMHDLPD@?9camellia256?$AA@
; `string'
??_C@_0N@EJMHDLPD@?9camellia256?$AA@ db	'-camellia256',0 ; DATA XREF: _genrsa_main:loc_56Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A54h
; COMDAT (pick any)
		public ??_C@_08KCDBEMAI@?9passout?$AA@
; `string'
??_C@_08KCDBEMAI@?9passout?$AA@	db '-passout',0 ; DATA XREF: _genrsa_main:loc_5AAo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A60h
; COMDAT (pick any)
		public ??_C@_02DPKJAMEF@?$CFd?$AA@
; char `string'[3]
??_C@_02DPKJAMEF@?$CFd?$AA@ db '%d',0   ; DATA XREF: _genrsa_main+574o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A64h
; COMDAT (pick any)
		public ??_C@_0CA@PMIDOJOM@usage?3?5genrsa?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@
; `string'
??_C@_0CA@PMIDOJOM@usage?3?5genrsa?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@ db 'usage: genrsa [args] [numbits]',0Ah,0
					; DATA XREF: _genrsa_main:$bad$162o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0A84h
; COMDAT (pick any)
		public ??_C@_0EB@BBEPLNGO@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
; `string'
??_C@_0EB@BBEPLNGO@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ db	' -des            encrypt the generated key with DES in cbc mode',0Ah
					; DATA XREF: _genrsa_main+5A2o
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0AC8h
; COMDAT (pick any)
		public ??_C@_0FD@KENFKNBF@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
; `string'
??_C@_0FD@KENFKNBF@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ db ' -des3           encrypt the generated key with DES in ede cbc mo'
					; DATA XREF: _genrsa_main+5B2o
		db 'de (168 bit key)',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0B1Ch
; COMDAT (pick any)
		public ??_C@_0EC@JFDOGDEB@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
; `string'
??_C@_0EC@JFDOGDEB@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ db ' -idea           encrypt the generated key with IDEA in cbc mode',0Ah
					; DATA XREF: _genrsa_main+5C2o
		db 0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B60h
; COMDAT (pick any)
		public ??_C@_07KIGMBBIJ@?5?9seed?6?$AA@
; `string'
??_C@_07KIGMBBIJ@?5?9seed?6?$AA@ db ' -seed',0Ah,0 ; DATA XREF: _genrsa_main+5D2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B68h
; COMDAT (pick any)
		public ??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@	db '                 encrypt PEM output with cbc seed',0Ah,0
					; DATA XREF: _genrsa_main+5E2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B9Ch
; COMDAT (pick any)
		public ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
; `string'
??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ db	' -aes128, -aes192, -aes256',0Ah,0
					; DATA XREF: _genrsa_main+5F2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BB8h
; COMDAT (pick any)
		public ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@	db '                 encrypt PEM output with cbc aes',0Ah,0
					; DATA XREF: _genrsa_main+602o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BECh
; COMDAT (pick any)
		public ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
; `string'
??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ db ' -camellia128, -camellia192, -camellia256',0Ah,0
					; DATA XREF: _genrsa_main+615o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C18h
; COMDAT (pick any)
		public ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@	db '                 encrypt PEM output with cbc camellia',0Ah,0
					; DATA XREF: _genrsa_main+625o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C50h
; COMDAT (pick any)
		public ??_C@_0CK@NEMOMECI@?5?9out?5file?5?5?5?5?5?5?5output?5the?5key?5@
; `string'
??_C@_0CK@NEMOMECI@?5?9out?5file?5?5?5?5?5?5?5output?5the?5key?5@ db ' -out file       output the key to ',27h,'file',0Ah,0
					; DATA XREF: _genrsa_main+635o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C7Ch
; COMDAT (pick any)
		public ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
; `string'
??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ db ' -passout arg    output file pass phrase source',0Ah,0
					; DATA XREF: _genrsa_main+645o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CB0h
; COMDAT (pick any)
		public ??_C@_0DD@PHOJIKJG@?5?9f4?5?5?5?5?5?5?5?5?5?5?5?5?5use?5F4?5?$CI0x10001@
; `string'
??_C@_0DD@PHOJIKJG@?5?9f4?5?5?5?5?5?5?5?5?5?5?5?5?5use?5F4?5?$CI0x10001@ db ' -f4             use F4 (0x10001) for the E value',0Ah,0
					; DATA XREF: _genrsa_main+655o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CE4h
; COMDAT (pick any)
		public ??_C@_0CI@ECLHDDHL@?5?93?5?5?5?5?5?5?5?5?5?5?5?5?5?5use?53?5for?5the?5E@
; `string'
??_C@_0CI@ECLHDDHL@?5?93?5?5?5?5?5?5?5?5?5?5?5?5?5?5use?53?5for?5the?5E@ db ' -3              use 3 for the E value',0Ah,0
					; DATA XREF: _genrsa_main+665o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0Ch
; COMDAT (pick any)
		public ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
; `string'
??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ db ' -engine e       use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _genrsa_main+675o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D48h
; COMDAT (pick any)
		public ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
; `string'
??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ db	' -rand file%cfile%c...',0Ah,0
					; DATA XREF: _genrsa_main+689o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0D60h
; COMDAT (pick any)
		public ??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@
; `string'
??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@ db '                 load the file (or the files in the directory) in'
					; DATA XREF: _genrsa_main+69Co
		db 'to',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DA8h
; COMDAT (pick any)
		public ??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@
; `string'
??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@	db '                 the random number generator',0Ah,0
					; DATA XREF: _genrsa_main+6ACo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DD8h
; COMDAT (pick any)
		public ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; `string'
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ db 'Error getting password',0Ah,0
					; DATA XREF: _genrsa_main+743o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0DF0h
; COMDAT (pick any)
		public ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
; `string'
??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ db 'warning, not much extra random data, consider using the -rand opt'
					; DATA XREF: _genrsa_main+7B9o
		db 'ion',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E38h
; COMDAT (pick any)
		public ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
; `string'
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ db '%ld semi-random bytes loaded',0Ah,0
					; DATA XREF: _genrsa_main+7FEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E58h
; COMDAT (pick any)
		public ??_C@_0DB@KBGJNLO@Generating?5RSA?5private?5key?0?5?$CFd?5b@
; `string'
??_C@_0DB@KBGJNLO@Generating?5RSA?5private?5key?0?5?$CFd?5b@ db	'Generating RSA private key, %d bit long modulus',0Ah,0
					; DATA XREF: _genrsa_main+815o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8Ch
; COMDAT (pick any)
		public ??_C@_0BC@MFKIOEF@e?5is?5?$CFld?5?$CI0x?$CFlX?$CJ?6?$AA@
; `string'
??_C@_0BC@MFKIOEF@e?5is?5?$CFld?5?$CI0x?$CFlX?$CJ?6?$AA@ db 'e is %ld (0x%lX)',0Ah,0
					; DATA XREF: _genrsa_main+89Co
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _genrsa_main+88p
					; _genrsa_main+77Bp
					; DATA XREF: ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _genrsa_main+7E5p
					; DATA XREF: _genrsa_main+7E5r
		extrn __imp____stdio_common_vsscanf:near ; CODE	XREF: __vsscanf_l+1Cp
					; _sscanf+1Bp
					; DATA XREF: ...
		extrn _CRYPTO_free:near	; CODE XREF: _genrsa_main+6FBp
		extrn _BIO_s_file:near	; CODE XREF: _genrsa_main+6Fp
					; _genrsa_main+B9p
		extrn _BIO_new:near	; CODE XREF: _genrsa_main+75p
					; _genrsa_main+BFp
		extrn _BIO_write:near	; CODE XREF: _genrsa_cb+4Ap
		extrn _BIO_ctrl:near	; CODE XREF: _genrsa_cb+58p
					; _genrsa_main+99p ...
		extrn _BIO_free_all:near ; CODE	XREF: _genrsa_main+6EAp
		extrn _BIO_printf:near	; CODE XREF: _genrsa_main+DCp
					; _genrsa_main+59Dp ...
		extrn _BN_new:near	; CODE XREF: _genrsa_main+3Bp
		extrn _BN_set_word:near	; CODE XREF: _genrsa_main+843p
		extrn _BN_free:near	; CODE XREF: _genrsa_main+6CCp
		extrn _EVP_des_cbc:near	; CODE XREF: _genrsa_main+2C9p
		extrn _EVP_des_ede3_cbc:near ; CODE XREF: _genrsa_main+309p
		extrn _EVP_idea_cbc:near ; CODE	XREF: _genrsa_main+349p
		extrn _EVP_aes_128_cbc:near ; CODE XREF: _genrsa_main+3C9p
		extrn _EVP_aes_192_cbc:near ; CODE XREF: _genrsa_main+409p
		extrn _EVP_aes_256_cbc:near ; CODE XREF: _genrsa_main+449p
		extrn _EVP_camellia_128_cbc:near ; CODE	XREF: _genrsa_main+489p
		extrn _EVP_camellia_192_cbc:near ; CODE	XREF: _genrsa_main+4C9p
		extrn _EVP_camellia_256_cbc:near ; CODE	XREF: _genrsa_main+509p
		extrn _EVP_seed_cbc:near ; CODE	XREF: _genrsa_main+389p
		extrn _RSA_new_method:near ; CODE XREF:	_genrsa_main+826p
		extrn _RSA_generate_key_ex:near	; CODE XREF: _genrsa_main+862p
		extrn _RSA_free:near	; CODE XREF: _genrsa_main+6DDp
		extrn _RAND_status:near	; CODE XREF: _genrsa_main+7B0p
		extrn _ERR_print_errors:near ; CODE XREF: _genrsa_main+70Dp
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _genrsa_main:loc_7B7p
		extrn _app_RAND_load_file:near ; CODE XREF: _genrsa_main+79Cp
		extrn _app_RAND_write_file:near	; CODE XREF: _genrsa_main+87Ap
		extrn _app_RAND_load_files:near	; CODE XREF: _genrsa_main+7F8p
		extrn _password_callback:near ;	DATA XREF: _genrsa_main+8B9o
		extrn _app_passwd:near	; CODE XREF: _genrsa_main+737p
		extrn _setup_engine:near ; CODE	XREF: _genrsa_main+767p
		extrn _load_config:near	; CODE XREF: _genrsa_main+A9p
		extrn _PEM_write_bio_RSAPrivateKey:near	; CODE XREF: _genrsa_main+8C9p
		extrn __chkstk:near	; CODE XREF: _genrsa_main+5p
; `__local_stdio_scanf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:near
					; DATA XREF: ___local_stdio_scanf_optionso
		extrn _bio_err:near	; DATA XREF: _genrsa_main+52r
					; _genrsa_main+7Dw ...


		end

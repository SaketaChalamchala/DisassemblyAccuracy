;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	11FD288C7ADDF3C09A6431F7505F9DD2
; Input	CRC32 :	FDD533AE

; File Name   :	C:\compspace\Diff\openssl\obj\pkey.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _pkey_main
_pkey_main	proc near

var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		mov	eax, 40h ; '@'
		call	__chkstk
		xor	eax, eax
		push	ebx
		push	ebp
		push	esi
		push	edi
		mov	[esp+50h+var_34], eax
		lea	esi, [eax+1]
		xor	edi, edi
		mov	[esp+50h+var_18], eax
		mov	[esp+50h+var_1C], eax
		xor	ebp, ebp
		mov	[esp+50h+var_28], eax
		xor	ebx, ebx
		mov	[esp+50h+var_4], eax
		mov	[esp+50h+var_10], eax
		mov	[esp+50h+var_40], eax
		mov	[esp+50h+var_2C], eax
		mov	[esp+50h+var_30], eax
		mov	[esp+50h+var_C], eax
		mov	[esp+50h+var_3C], eax
		mov	[esp+50h+var_24], eax
		mov	[esp+50h+var_20], eax
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+50h+var_14], edi
		test	eax, eax
		jnz	short loc_74
		push	eax
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	dword ptr ds:_bio_err, eax

loc_74:					; CODE XREF: _pkey_main+58j
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	$end$126
		mov	[esp+50h+var_38], 3
		mov	[esp+50h+var_8], 3
		call	_ERR_load_crypto_strings
		call	_OPENSSL_add_all_algorithms_noconf
		mov	esi, [esp+50h+arg_4]
		add	esi, 4
		nop	dword ptr [eax+eax+00000000h]

loc_B0:					; CODE XREF: _pkey_main+449j
		mov	edi, [esi]
		test	edi, edi
		jz	loc_451
		cmp	byte ptr [edi],	2Dh ; '-'
		jnz	loc_451
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, edi
		nop	word ptr [eax+eax+00h]

loc_D0:					; CODE XREF: _pkey_main+EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_F0
		test	dl, dl
		jz	short loc_EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_D0

loc_EC:					; CODE XREF: _pkey_main+D8j
		xor	eax, eax
		jmp	short loc_F5
; ---------------------------------------------------------------------------

loc_F0:					; CODE XREF: _pkey_main+D4j
					; _pkey_main+E0j
		sbb	eax, eax
		or	eax, 1

loc_F5:					; CODE XREF: _pkey_main+EEj
		test	eax, eax
		jnz	short loc_119
		cmp	[esi+4], ebp
		jz	loc_43F
		push	dword ptr [esi+4]
		add	esi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+50h+var_38], eax
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_119:				; CODE XREF: _pkey_main+F7j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, edi

loc_120:				; CODE XREF: _pkey_main+13Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_140
		test	dl, dl
		jz	short loc_13C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_140
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_120

loc_13C:				; CODE XREF: _pkey_main+128j
		xor	eax, eax
		jmp	short loc_145
; ---------------------------------------------------------------------------

loc_140:				; CODE XREF: _pkey_main+124j
					; _pkey_main+130j
		sbb	eax, eax
		or	eax, 1

loc_145:				; CODE XREF: _pkey_main+13Ej
		test	eax, eax
		jnz	short loc_169
		cmp	[esi+4], ebp
		jz	loc_43F
		push	dword ptr [esi+4]
		add	esi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+50h+var_8], eax
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_169:				; CODE XREF: _pkey_main+147j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, edi

loc_170:				; CODE XREF: _pkey_main+18Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_190
		test	dl, dl
		jz	short loc_18C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_190
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_170

loc_18C:				; CODE XREF: _pkey_main+178j
		xor	eax, eax
		jmp	short loc_195
; ---------------------------------------------------------------------------

loc_190:				; CODE XREF: _pkey_main+174j
					; _pkey_main+180j
		sbb	eax, eax
		or	eax, 1

loc_195:				; CODE XREF: _pkey_main+18Ej
		test	eax, eax
		jnz	short loc_1AF
		add	esi, 4
		cmp	[esi], ebp
		jz	$bad$127
		mov	eax, [esi]
		mov	[esp+50h+var_18], eax
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_1AF:				; CODE XREF: _pkey_main+197j
		mov	ecx, offset ??_C@_08KCDBEMAI@?9passout?$AA@ ; "-passout"
		mov	eax, edi

loc_1B6:				; CODE XREF: _pkey_main+1D0j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1D6
		test	dl, dl
		jz	short loc_1D2
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1D6
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1B6

loc_1D2:				; CODE XREF: _pkey_main+1BEj
		xor	eax, eax
		jmp	short loc_1DB
; ---------------------------------------------------------------------------

loc_1D6:				; CODE XREF: _pkey_main+1BAj
					; _pkey_main+1C6j
		sbb	eax, eax
		or	eax, 1

loc_1DB:				; CODE XREF: _pkey_main+1D4j
		test	eax, eax
		jnz	short loc_1F5
		add	esi, 4
		cmp	[esi], ebp
		jz	$bad$127
		mov	eax, [esi]
		mov	[esp+50h+var_1C], eax
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_1F5:				; CODE XREF: _pkey_main+1DDj
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, edi
		nop	dword ptr [eax+00h]

loc_200:				; CODE XREF: _pkey_main+21Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_220
		test	dl, dl
		jz	short loc_21C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_220
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_200

loc_21C:				; CODE XREF: _pkey_main+208j
		xor	eax, eax
		jmp	short loc_225
; ---------------------------------------------------------------------------

loc_220:				; CODE XREF: _pkey_main+204j
					; _pkey_main+210j
		sbb	eax, eax
		or	eax, 1

loc_225:				; CODE XREF: _pkey_main+21Ej
		test	eax, eax
		jnz	short loc_23F
		add	esi, 4
		cmp	[esi], ebp
		jz	$bad$127
		mov	eax, [esi]
		mov	[esp+50h+var_20], eax
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_23F:				; CODE XREF: _pkey_main+227j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; "-in"
		mov	eax, edi

loc_246:				; CODE XREF: _pkey_main+260j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_266
		test	dl, dl
		jz	short loc_262
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_266
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_246

loc_262:				; CODE XREF: _pkey_main+24Ej
		xor	eax, eax
		jmp	short loc_26B
; ---------------------------------------------------------------------------

loc_266:				; CODE XREF: _pkey_main+24Aj
					; _pkey_main+256j
		sbb	eax, eax
		or	eax, 1

loc_26B:				; CODE XREF: _pkey_main+264j
		test	eax, eax
		jnz	short loc_287
		cmp	[esi+4], ebp
		jz	loc_43F
		mov	eax, [esi+4]
		add	esi, 4
		mov	[esp+50h+var_34], eax
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_287:				; CODE XREF: _pkey_main+26Dj
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, edi
		xchg	ax, ax

loc_290:				; CODE XREF: _pkey_main+2AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2B0
		test	dl, dl
		jz	short loc_2AC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2B0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_290

loc_2AC:				; CODE XREF: _pkey_main+298j
		xor	eax, eax
		jmp	short loc_2B5
; ---------------------------------------------------------------------------

loc_2B0:				; CODE XREF: _pkey_main+294j
					; _pkey_main+2A0j
		sbb	eax, eax
		or	eax, 1

loc_2B5:				; CODE XREF: _pkey_main+2AEj
		test	eax, eax
		jnz	short loc_2D1
		cmp	[esi+4], ebp
		jz	loc_43F
		mov	eax, [esi+4]
		add	esi, 4
		mov	[esp+50h+var_14], eax
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_2D1:				; CODE XREF: _pkey_main+2B7j
		mov	ecx, offset ??_C@_06NLLOJDKN@?9pubin?$AA@ ; "-pubin"
		mov	eax, edi

loc_2D8:				; CODE XREF: _pkey_main+2F2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2F8
		test	dl, dl
		jz	short loc_2F4
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2F8
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2D8

loc_2F4:				; CODE XREF: _pkey_main+2E0j
		xor	eax, eax
		jmp	short loc_2FD
; ---------------------------------------------------------------------------

loc_2F8:				; CODE XREF: _pkey_main+2DCj
					; _pkey_main+2E8j
		sbb	eax, eax
		or	eax, 1

loc_2FD:				; CODE XREF: _pkey_main+2F6j
		test	eax, eax
		jnz	short loc_31E
		mov	[esp+50h+var_10], 1
		mov	[esp+50h+var_40], 1
		mov	[esp+50h+var_2C], 1
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_31E:				; CODE XREF: _pkey_main+2FFj
		mov	ecx, offset ??_C@_07NGPHMOHJ@?9pubout?$AA@ ; "-pubout"
		mov	eax, edi

loc_325:				; CODE XREF: _pkey_main+33Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_345
		test	dl, dl
		jz	short loc_341
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_345
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_325

loc_341:				; CODE XREF: _pkey_main+32Dj
		xor	eax, eax
		jmp	short loc_34A
; ---------------------------------------------------------------------------

loc_345:				; CODE XREF: _pkey_main+329j
					; _pkey_main+335j
		sbb	eax, eax
		or	eax, 1

loc_34A:				; CODE XREF: _pkey_main+343j
		test	eax, eax
		jnz	short loc_35B
		mov	[esp+50h+var_40], 1
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_35B:				; CODE XREF: _pkey_main+34Cj
		mov	ecx, offset ??_C@_09ICLKJGM@?9text_pub?$AA@ ; "-text_pub"
		mov	eax, edi

loc_362:				; CODE XREF: _pkey_main+37Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_382
		test	dl, dl
		jz	short loc_37E
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_382
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_362

loc_37E:				; CODE XREF: _pkey_main+36Aj
		xor	eax, eax
		jmp	short loc_387
; ---------------------------------------------------------------------------

loc_382:				; CODE XREF: _pkey_main+366j
					; _pkey_main+372j
		sbb	eax, eax
		or	eax, 1

loc_387:				; CODE XREF: _pkey_main+380j
		test	eax, eax
		jnz	short loc_3A0
		mov	[esp+50h+var_2C], 1
		mov	[esp+50h+var_30], 1
		jmp	loc_444
; ---------------------------------------------------------------------------

loc_3A0:				; CODE XREF: _pkey_main+389j
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, edi

loc_3A7:				; CODE XREF: _pkey_main+3C1j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3C7
		test	dl, dl
		jz	short loc_3C3
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3C7
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3A7

loc_3C3:				; CODE XREF: _pkey_main+3AFj
		xor	eax, eax
		jmp	short loc_3CC
; ---------------------------------------------------------------------------

loc_3C7:				; CODE XREF: _pkey_main+3ABj
					; _pkey_main+3B7j
		sbb	eax, eax
		or	eax, 1

loc_3CC:				; CODE XREF: _pkey_main+3C5j
		test	eax, eax
		jnz	short loc_3DA
		mov	[esp+50h+var_30], 1
		jmp	short loc_444
; ---------------------------------------------------------------------------

loc_3DA:				; CODE XREF: _pkey_main+3CEj
		mov	ecx, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"
		mov	eax, edi

loc_3E1:				; CODE XREF: _pkey_main+3FBj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_401
		test	dl, dl
		jz	short loc_3FD
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_401
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3E1

loc_3FD:				; CODE XREF: _pkey_main+3E9j
		xor	eax, eax
		jmp	short loc_406
; ---------------------------------------------------------------------------

loc_401:				; CODE XREF: _pkey_main+3E5j
					; _pkey_main+3F1j
		sbb	eax, eax
		or	eax, 1

loc_406:				; CODE XREF: _pkey_main+3FFj
		test	eax, eax
		jnz	short loc_414
		mov	[esp+50h+var_C], 1
		jmp	short loc_444
; ---------------------------------------------------------------------------

loc_414:				; CODE XREF: _pkey_main+408j
		lea	eax, [edi+1]
		push	eax
		call	_EVP_get_cipherbyname
		add	esp, 4
		mov	[esp+50h+var_4], eax
		test	eax, eax
		jnz	short loc_444
		mov	eax, [esi]
		inc	eax
		push	eax
		push	offset ??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@	; "Unknown cipher %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

loc_43F:				; CODE XREF: _pkey_main+FCj
					; _pkey_main+14Cj ...
		mov	ebx, 1

loc_444:				; CODE XREF: _pkey_main+114j
					; _pkey_main+164j ...
		add	esi, 4
		test	ebx, ebx
		jz	loc_B0
		jmp	short $bad$127
; ---------------------------------------------------------------------------

loc_451:				; CODE XREF: _pkey_main+B4j
					; _pkey_main+BDj
		test	ebx, ebx
		jz	loc_4FC

$bad$127:				; CODE XREF: _pkey_main+19Ej
					; _pkey_main+1E4j ...
		push	offset ??_C@_0BG@IBLBALGG@Usage?5pkey?5?$FLoptions?$FN?6?$AA@ ;	"Usage pkey [options]\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; "-in file	  input	file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@ ; "-inform X	     input format (DER or PE"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@ ;	"-passin arg	 input file pass phrase	"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@ ; "-outform X	    output format (DER or P"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ ; "-out file	  output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@ ; "-passout	arg    output file pass	phrase"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ ; "-engine e	    use	engine e, possibly "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 40h
		retn
; ---------------------------------------------------------------------------

loc_4FC:				; CODE XREF: _pkey_main+453j
		mov	eax, [esp+50h+var_20]
		push	0
		push	eax
		push	dword ptr ds:_bio_err
		call	_setup_engine
		mov	esi, eax
		lea	eax, [esp+5Ch+var_24]
		push	eax
		lea	eax, [esp+60h+var_3C]
		push	eax
		mov	eax, [esp+64h+var_1C]
		push	eax
		mov	eax, [esp+68h+var_18]
		push	eax
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 20h
		test	eax, eax
		jnz	short loc_593
		push	offset ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; "Error getting passwords\n"

loc_53B:				; CODE XREF: _pkey_main+6BFj
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_549:				; CODE XREF: _pkey_main+5C7j
					; _pkey_main+634j
		mov	esi, 1

$end$126:				; CODE XREF: _pkey_main+81j
					; _pkey_main+67Dj ...
		push	ebp
		call	_EVP_PKEY_free
		push	[esp+54h+var_28]
		call	_BIO_free_all
		push	0
		call	_BIO_free
		mov	eax, [esp+5Ch+var_3C]
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_578
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_578:				; CODE XREF: _pkey_main+56Dj
		mov	ecx, [esp+50h+var_24]
		test	ecx, ecx
		jz	short loc_589
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_589:				; CODE XREF: _pkey_main+57Ej
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 40h
		retn
; ---------------------------------------------------------------------------

loc_593:				; CODE XREF: _pkey_main+534j
		mov	edi, [esp+50h+var_14]
		test	edi, edi
		jz	short loc_5C9
		push	offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		push	edi
		call	_BIO_new_file
		mov	ebx, eax
		add	esp, 8
		mov	[esp+50h+var_28], ebx
		test	ebx, ebx
		jnz	short loc_5E5
		push	edi
		push	offset ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ ; "Can't open output file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	short loc_549
; ---------------------------------------------------------------------------

loc_5C9:				; CODE XREF: _pkey_main+599j
		push	0
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+50h+var_28], eax
		mov	ebx, eax

loc_5E5:				; CODE XREF: _pkey_main+5B1j
		mov	eax, [esp+50h+var_10]
		test	eax, eax
		mov	eax, [esp+50h+var_38]
		jz	short loc_610
		push	offset ??_C@_0L@KEAMIOLD@Public?5Key?$AA@ ; "Public Key"
		push	esi
		push	[esp+58h+var_3C]
		push	1
		push	eax
		mov	eax, [esp+64h+var_34]
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_pubkey
		jmp	short loc_62D
; ---------------------------------------------------------------------------

loc_610:				; CODE XREF: _pkey_main+5EFj
		push	offset ??_C@_03ICHNJLJF@key?$AA@ ; `string'
		push	esi
		push	[esp+58h+var_3C]
		push	1
		push	eax
		mov	eax, [esp+64h+var_34]
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_key

loc_62D:				; CODE XREF: _pkey_main+60Ej
		mov	ebp, eax
		add	esp, 1Ch
		test	ebp, ebp
		jz	loc_549
		mov	eax, [esp+50h+var_C]
		test	eax, eax
		jnz	short loc_65D
		mov	eax, [esp+50h+var_8]
		cmp	eax, 3
		jnz	short loc_69D
		mov	eax, [esp+50h+var_40]
		test	eax, eax
		jz	short loc_682
		push	ebp
		push	ebx
		call	_PEM_write_bio_PUBKEY

loc_65A:				; CODE XREF: _pkey_main+6B1j
					; _pkey_main+6B8j
		add	esp, 8

loc_65D:				; CODE XREF: _pkey_main+640j
					; _pkey_main+69Bj
		mov	eax, [esp+50h+var_30]
		test	eax, eax
		jz	short loc_6CC
		mov	eax, [esp+50h+var_2C]
		push	0
		push	0
		push	ebp
		push	ebx
		test	eax, eax
		jz	short loc_6C4
		call	_EVP_PKEY_print_public
		add	esp, 10h
		xor	esi, esi
		jmp	$end$126
; ---------------------------------------------------------------------------

loc_682:				; CODE XREF: _pkey_main+651j
		push	[esp+50h+var_24]
		mov	eax, [esp+54h+var_4]
		push	0
		push	0
		push	0
		push	eax
		push	ebp
		push	ebx
		call	_PEM_write_bio_PrivateKey
		add	esp, 1Ch
		jmp	short loc_65D
; ---------------------------------------------------------------------------

loc_69D:				; CODE XREF: _pkey_main+649j
		cmp	eax, 1
		jnz	short loc_6BA
		mov	eax, [esp+50h+var_40]
		push	ebp
		push	ebx
		test	eax, eax
		jz	short loc_6B3
		call	_i2d_PUBKEY_bio
		jmp	short loc_65A
; ---------------------------------------------------------------------------

loc_6B3:				; CODE XREF: _pkey_main+6AAj
		call	_i2d_PrivateKey_bio
		jmp	short loc_65A
; ---------------------------------------------------------------------------

loc_6BA:				; CODE XREF: _pkey_main+6A0j
		push	offset ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ ; "Bad format	specified for key\n"
		jmp	loc_53B
; ---------------------------------------------------------------------------

loc_6C4:				; CODE XREF: _pkey_main+671j
		call	_EVP_PKEY_print_private
		add	esp, 10h

loc_6CC:				; CODE XREF: _pkey_main+663j
		xor	esi, esi
		jmp	$end$126
_pkey_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6D4h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _pkey_main+C3o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6DCh
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _pkey_main:loc_119o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6E8h
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _pkey_main:loc_169o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6F0h
; COMDAT (pick any)
		public ??_C@_08KCDBEMAI@?9passout?$AA@
; `string'
??_C@_08KCDBEMAI@?9passout?$AA@	db '-passout',0 ; DATA XREF: _pkey_main:loc_1AFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6FCh
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _pkey_main:loc_1F5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 704h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ db '-in',0   ; DATA XREF: _pkey_main:loc_23Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 708h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _pkey_main:loc_287o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 710h
; COMDAT (pick any)
		public ??_C@_06NLLOJDKN@?9pubin?$AA@
; `string'
??_C@_06NLLOJDKN@?9pubin?$AA@ db '-pubin',0 ; DATA XREF: _pkey_main:loc_2D1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 718h
; COMDAT (pick any)
		public ??_C@_07NGPHMOHJ@?9pubout?$AA@
; `string'
??_C@_07NGPHMOHJ@?9pubout?$AA@ db '-pubout',0 ; DATA XREF: _pkey_main:loc_31Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 720h
; COMDAT (pick any)
		public ??_C@_09ICLKJGM@?9text_pub?$AA@
; `string'
??_C@_09ICLKJGM@?9text_pub?$AA@	db '-text_pub',0 ; DATA XREF: _pkey_main:loc_35Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 72Ch
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _pkey_main:loc_3A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 734h
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _pkey_main:loc_3DAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 73Ch
; COMDAT (pick any)
		public ??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@
; `string'
??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@ db 'Unknown cipher %s',0Ah,0
					; DATA XREF: _pkey_main+42Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 750h
; COMDAT (pick any)
		public ??_C@_0BG@IBLBALGG@Usage?5pkey?5?$FLoptions?$FN?6?$AA@
; `string'
??_C@_0BG@IBLBALGG@Usage?5pkey?5?$FLoptions?$FN?6?$AA@ db 'Usage pkey [options]',0Ah,0
					; DATA XREF: _pkey_main:$bad$127o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 768h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _pkey_main+469o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 77Ch
; COMDAT (pick any)
		public ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@	db '-in file        input file',0Ah,0
					; DATA XREF: _pkey_main+479o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 798h
; COMDAT (pick any)
		public ??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@
; `string'
??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@ db '-inform X       input format (DER or PEM)',0Ah,0
					; DATA XREF: _pkey_main+489o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7C4h
; COMDAT (pick any)
		public ??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@
; `string'
??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@ db '-passin arg     input file pass phrase source',0Ah,0
					; DATA XREF: _pkey_main+499o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7F4h
; COMDAT (pick any)
		public ??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@
; `string'
??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@ db '-outform X      output format (DER or PEM)',0Ah,0
					; DATA XREF: _pkey_main+4A9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 820h
; COMDAT (pick any)
		public ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@	db '-out file       output file',0Ah,0
					; DATA XREF: _pkey_main+4B9o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 840h
; COMDAT (pick any)
		public ??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@
; `string'
??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@ db	'-passout arg    output file pass phrase source',0Ah,0
					; DATA XREF: _pkey_main+4C9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 870h
; COMDAT (pick any)
		public ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
; `string'
??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ db '-engine e       use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _pkey_main+4DCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8ACh
; COMDAT (pick any)
		public ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
; `string'
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ db 'Error getting passwords',0Ah,0
					; DATA XREF: _pkey_main+536o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8C8h
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 77h,	62h, 0	; DATA XREF: _pkey_main+59Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8CCh
; COMDAT (pick any)
		public ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open output file %s',0Ah,0
					; DATA XREF: _pkey_main+5B4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8E8h
; COMDAT (pick any)
		public ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
; `string'
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ db 'Public Key',0 ; DATA XREF: _pkey_main+5F1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8F4h
; COMDAT (pick any)
		public ??_C@_03ICHNJLJF@key?$AA@
; `string'
??_C@_03ICHNJLJF@key?$AA@ dd 79656Bh	; DATA XREF: _pkey_main:loc_610o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8F8h
; COMDAT (pick any)
		public ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@
; `string'
??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ db 'Bad format specified for key',0Ah,0
					; DATA XREF: _pkey_main:loc_6BAo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _pkey_main+5Dp
					; _pkey_main+5CDp
					; DATA XREF: ...
		extrn _CRYPTO_free:near	; CODE XREF: _pkey_main+570p
					; _pkey_main+581p
		extrn _BIO_new_file:near ; CODE	XREF: _pkey_main+5A1p
		extrn _BIO_new_fp:near	; CODE XREF: _pkey_main+67p
					; _pkey_main+5D7p
		extrn _BIO_free:near	; CODE XREF: _pkey_main+55Fp
		extrn _BIO_free_all:near ; CODE	XREF: _pkey_main+558p
		extrn _BIO_printf:near	; CODE XREF: _pkey_main+437p
					; _pkey_main+464p ...
		extrn _OPENSSL_add_all_algorithms_noconf:near ;	CODE XREF: _pkey_main+9Cp
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _pkey_main+418p
		extrn _EVP_PKEY_free:near ; CODE XREF: _pkey_main+54Fp
		extrn _EVP_PKEY_print_public:near ; CODE XREF: _pkey_main+673p
		extrn _EVP_PKEY_print_private:near ; CODE XREF:	_pkey_main:loc_6C4p
		extrn _i2d_PrivateKey_bio:near ; CODE XREF: _pkey_main:loc_6B3p
		extrn _i2d_PUBKEY_bio:near ; CODE XREF:	_pkey_main+6ACp
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _pkey_main+97p
		extrn _str2fmt:near	; CODE XREF: _pkey_main+108p
					; _pkey_main+158p
		extrn _app_passwd:near	; CODE XREF: _pkey_main+52Ap
		extrn _load_key:near	; CODE XREF: _pkey_main+628p
		extrn _load_pubkey:near	; CODE XREF: _pkey_main+609p
		extrn _setup_engine:near ; CODE	XREF: _pkey_main+509p
		extrn _load_config:near	; CODE XREF: _pkey_main+77p
		extrn _PEM_write_bio_PrivateKey:near ; CODE XREF: _pkey_main+693p
		extrn _PEM_write_bio_PUBKEY:near ; CODE	XREF: _pkey_main+655p
		extrn __chkstk:near	; CODE XREF: _pkey_main+5p
		extrn _bio_err:near	; DATA XREF: _pkey_main+4Dr
					; _pkey_main+6Fw ...


		end

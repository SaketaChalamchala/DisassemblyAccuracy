;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	6879D7B835E493BA7AA27C0609B743A3
; Input	CRC32 :	A6C824A9

; File Name   :	C:\compspace\Diff\openssl\obj\rand_err.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
_RAND_str_functs dd 24065000h		; DATA XREF: _ERR_load_RAND_stringsr
					; _ERR_load_RAND_strings+12o
		dd offset ??_C@_0BF@CAFGGGED@RAND_get_rand_method?$AA@ ; "RAND_get_rand_method"
		dd 24066000h
		dd offset ??_C@_0P@NOHKHPEN@RAND_init_fips?$AA@	; "RAND_init_fips"
		dd 24064000h
		dd offset ??_C@_0BC@HICMDCDB@SSLEAY_RAND_BYTES?$AA@ ; "SSLEAY_RAND_BYTES"
		align 10h
_RAND_str_reasons dd 24000068h		; DATA XREF: _ERR_load_RAND_strings+1Do
		dd offset ??_C@_0BG@NPKBNJCM@dual?5ec?5drbg?5disabled?$AA@ ; "dual ec drbg disabled"
		dd 24000066h
		dd offset ??_C@_0BI@FBCLCKDG@error?5initialising?5drbg?$AA@ ; "error initialising drbg"
		dd 24000067h
		dd offset ??_C@_0BJ@EEMAPNFK@error?5instantiating?5drbg?$AA@ ; "error instantiating drbg"
		dd 24000065h
		dd offset ??_C@_0BK@DNJBBHNJ@no?5fips?5random?5method?5set?$AA@	; "no fips random method set"
		dd 24000064h
		dd offset ??_C@_0BA@PGDKLOAF@PRNG?5not?5seeded?$AA@ ; "PRNG not	seeded"
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
; COMDAT (pick any)
		public ??_C@_0BF@CAFGGGED@RAND_get_rand_method?$AA@
; `string'
??_C@_0BF@CAFGGGED@RAND_get_rand_method?$AA@ db	'RAND_get_rand_method',0
					; DATA XREF: .data:00000004o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
; COMDAT (pick any)
		public ??_C@_0P@NOHKHPEN@RAND_init_fips?$AA@
; `string'
??_C@_0P@NOHKHPEN@RAND_init_fips?$AA@ db 'RAND_init_fips',0 ; DATA XREF: .data:0000000Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
; COMDAT (pick any)
		public ??_C@_0BC@HICMDCDB@SSLEAY_RAND_BYTES?$AA@
; `string'
??_C@_0BC@HICMDCDB@SSLEAY_RAND_BYTES?$AA@ db 'SSLEAY_RAND_BYTES',0
					; DATA XREF: .data:00000014o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
; COMDAT (pick any)
		public ??_C@_0BG@NPKBNJCM@dual?5ec?5drbg?5disabled?$AA@
; `string'
??_C@_0BG@NPKBNJCM@dual?5ec?5drbg?5disabled?$AA@ db 'dual ec drbg disabled',0
					; DATA XREF: .data:00000024o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
; COMDAT (pick any)
		public ??_C@_0BI@FBCLCKDG@error?5initialising?5drbg?$AA@
; `string'
??_C@_0BI@FBCLCKDG@error?5initialising?5drbg?$AA@ db 'error initialising drbg',0
					; DATA XREF: .data:0000002Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
; COMDAT (pick any)
		public ??_C@_0BJ@EEMAPNFK@error?5instantiating?5drbg?$AA@
; `string'
??_C@_0BJ@EEMAPNFK@error?5instantiating?5drbg?$AA@ db 'error instantiating drbg',0
					; DATA XREF: .data:00000034o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
; COMDAT (pick any)
		public ??_C@_0BK@DNJBBHNJ@no?5fips?5random?5method?5set?$AA@
; `string'
??_C@_0BK@DNJBBHNJ@no?5fips?5random?5method?5set?$AA@ db 'no fips random method set',0
					; DATA XREF: .data:0000003Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
; COMDAT (pick any)
		public ??_C@_0BA@PGDKLOAF@PRNG?5not?5seeded?$AA@
; `string'
??_C@_0BA@PGDKLOAF@PRNG?5not?5seeded?$AA@ db 'PRNG not seeded',0
					; DATA XREF: .data:00000044o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 104h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ERR_load_RAND_strings
_ERR_load_RAND_strings proc near
		push	_RAND_str_functs
		call	_ERR_func_error_string
		add	esp, 4
		test	eax, eax
		jnz	short locret_130
		push	offset _RAND_str_functs
		push	eax
		call	_ERR_load_strings
		push	offset _RAND_str_reasons
		push	0
		call	_ERR_load_strings
		add	esp, 10h

locret_130:				; CODE XREF: _ERR_load_RAND_strings+10j
		retn
_ERR_load_RAND_strings endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_func_error_string:near ; CODE XREF: _ERR_load_RAND_strings+6p
		extrn _ERR_load_strings:near ; CODE XREF: _ERR_load_RAND_strings+18p
					; _ERR_load_RAND_strings+24p


		end

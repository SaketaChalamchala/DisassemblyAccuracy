;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	1D85CF1BFECDAB056FB8DBB9ECCC7104
; Input	CRC32 :	F1B9AD28

; File Name   :	C:\compspace\Diff\openssl\obj\asn1pars.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _asn1parse_main
_asn1parse_main	proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
ErrMsg		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 4Ch ; 'L'
		call	__chkstk
		xor	eax, eax
		mov	[esp+4Ch+var_38], 0
		push	ebx
		push	ebp
		push	esi
		push	edi
		mov	[esp+5Ch+var_28], eax
		xor	ecx, ecx
		mov	[esp+5Ch+var_30], eax
		xor	edi, edi
		mov	[esp+5Ch+var_10], eax
		xor	ebp, ebp
		mov	[esp+5Ch+var_14], eax
		xor	ebx, ebx
		mov	[esp+5Ch+var_34], eax
		xor	esi, esi
		mov	[esp+5Ch+ErrMsg], eax
		mov	[esp+5Ch+var_20], eax
		mov	[esp+5Ch+var_1C], eax
		mov	[esp+5Ch+var_40], eax
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+5Ch+var_C], 1
		mov	[esp+5Ch+var_3C], 0
		mov	[esp+5Ch+var_2C], 0
		mov	[esp+5Ch+var_44], ecx
		mov	[esp+5Ch+var_48], edi
		mov	[esp+5Ch+var_18], 3
		test	eax, eax
		jnz	short loc_AE
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_AE
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_AE:					; CODE XREF: _asn1parse_main+75j
					; _asn1parse_main+8Cj
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	short loc_F9
		mov	ebx, [esp+5Ch+arg_4]
		mov	esi, [esp+5Ch+arg_0]
		dec	esi
		mov	eax, [ebx]
		add	ebx, 4
		mov	[esp+5Ch+var_8], eax
		call	_sk_new_null
		mov	[esp+5Ch+var_4C], eax
		test	eax, eax
		jnz	loc_184
		push	offset ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@ ; "Memory allocation failure\n"

loc_E5:					; CODE XREF: _asn1parse_main+749j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_F3:					; CODE XREF: _asn1parse_main+620j
					; _asn1parse_main+7B3j	...
		xor	ebx, ebx

loc_F5:					; CODE XREF: _asn1parse_main+7C5j
					; _asn1parse_main+7DBj	...
		mov	esi, [esp+5Ch+var_4C]

loc_F9:					; CODE XREF: _asn1parse_main+BBj
		xor	ebp, ebp
		xor	edi, edi

$end$182:				; CODE XREF: _asn1parse_main+878j
					; _asn1parse_main+998j	...
		push	[esp+5Ch+var_30]
		call	_BIO_free
		mov	eax, [esp+60h+var_2C]
		add	esp, 4
		test	eax, eax
		jz	short loc_11A
		push	eax
		call	_BIO_free
		add	esp, 4

loc_11A:				; CODE XREF: _asn1parse_main+10Fj
		mov	eax, [esp+5Ch+var_28]
		test	eax, eax
		jz	short loc_12B
		push	eax
		call	_BIO_free_all
		add	esp, 4

loc_12B:				; CODE XREF: _asn1parse_main+120j
		test	edi, edi
		jz	short loc_138
		push	edi
		call	_BIO_free
		add	esp, 4

loc_138:				; CODE XREF: _asn1parse_main+12Dj
		mov	edi, [esp+5Ch+var_C]
		test	edi, edi
		jz	short loc_14E
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

loc_14E:				; CODE XREF: _asn1parse_main+13Ej
		test	ebx, ebx
		jz	short loc_15B
		push	ebx
		call	_BUF_MEM_free
		add	esp, 4

loc_15B:				; CODE XREF: _asn1parse_main+150j
		test	ebp, ebp
		jz	short loc_168
		push	ebp
		call	_ASN1_TYPE_free
		add	esp, 4

loc_168:				; CODE XREF: _asn1parse_main+15Dj
		test	esi, esi
		jz	short loc_175
		push	esi
		call	_sk_free
		add	esp, 4

loc_175:				; CODE XREF: _asn1parse_main+16Aj
		call	_OBJ_cleanup
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_184:				; CODE XREF: _asn1parse_main+DAj
		cmp	esi, 1
		jl	loc_593
		nop	dword ptr [eax]

loc_190:				; CODE XREF: _asn1parse_main+58Dj
		mov	edi, [ebx]
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_1A0:				; CODE XREF: _asn1parse_main+1BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1C0
		test	dl, dl
		jz	short loc_1BC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1C0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1A0

loc_1BC:				; CODE XREF: _asn1parse_main+1A8j
		xor	eax, eax
		jmp	short loc_1C5
; ---------------------------------------------------------------------------

loc_1C0:				; CODE XREF: _asn1parse_main+1A4j
					; _asn1parse_main+1B0j
		sbb	eax, eax
		or	eax, 1

loc_1C5:				; CODE XREF: _asn1parse_main+1BEj
		test	eax, eax
		jnz	short loc_1EA
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+5Ch+var_18], eax
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_1EA:				; CODE XREF: _asn1parse_main+1C7j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; "-in"
		mov	eax, edi

loc_1F1:				; CODE XREF: _asn1parse_main+20Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_211
		test	dl, dl
		jz	short loc_20D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_211
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1F1

loc_20D:				; CODE XREF: _asn1parse_main+1F9j
		xor	eax, eax
		jmp	short loc_216
; ---------------------------------------------------------------------------

loc_211:				; CODE XREF: _asn1parse_main+1F5j
					; _asn1parse_main+201j
		sbb	eax, eax
		or	eax, 1

loc_216:				; CODE XREF: _asn1parse_main+20Fj
		test	eax, eax
		jnz	short loc_233
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+5Ch+ErrMsg], eax
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_233:				; CODE XREF: _asn1parse_main+218j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, edi
		nop	word ptr [eax+eax+00h]

loc_240:				; CODE XREF: _asn1parse_main+25Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_260
		test	dl, dl
		jz	short loc_25C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_260
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_240

loc_25C:				; CODE XREF: _asn1parse_main+248j
		xor	eax, eax
		jmp	short loc_265
; ---------------------------------------------------------------------------

loc_260:				; CODE XREF: _asn1parse_main+244j
					; _asn1parse_main+250j
		sbb	eax, eax
		or	eax, 1

loc_265:				; CODE XREF: _asn1parse_main+25Ej
		test	eax, eax
		jnz	short loc_282
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+5Ch+var_20], eax
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_282:				; CODE XREF: _asn1parse_main+267j
		mov	ecx, offset ??_C@_02IEBECDLA@?9i?$AA@ ;	`string'
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_290:				; CODE XREF: _asn1parse_main+2AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2B0
		test	dl, dl
		jz	short loc_2AC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2B0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_290

loc_2AC:				; CODE XREF: _asn1parse_main+298j
		xor	eax, eax
		jmp	short loc_2B5
; ---------------------------------------------------------------------------

loc_2B0:				; CODE XREF: _asn1parse_main+294j
					; _asn1parse_main+2A0j
		sbb	eax, eax
		or	eax, 1

loc_2B5:				; CODE XREF: _asn1parse_main+2AEj
		test	eax, eax
		jnz	short loc_2C6
		mov	[esp+5Ch+var_10], 1
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_2C6:				; CODE XREF: _asn1parse_main+2B7j
		mov	ecx, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"
		mov	eax, edi
		nop	dword ptr [eax]

loc_2D0:				; CODE XREF: _asn1parse_main+2EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2F0
		test	dl, dl
		jz	short loc_2EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2D0

loc_2EC:				; CODE XREF: _asn1parse_main+2D8j
		xor	eax, eax
		jmp	short loc_2F5
; ---------------------------------------------------------------------------

loc_2F0:				; CODE XREF: _asn1parse_main+2D4j
					; _asn1parse_main+2E0j
		sbb	eax, eax
		or	eax, 1

loc_2F5:				; CODE XREF: _asn1parse_main+2EEj
		test	eax, eax
		jnz	short loc_306
		mov	[esp+5Ch+var_14], 1
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_306:				; CODE XREF: _asn1parse_main+2F7j
		mov	ecx, offset ??_C@_04CFFOFKAO@?9oid?$AA@	; "-oid"
		mov	eax, edi
		nop	dword ptr [eax]

loc_310:				; CODE XREF: _asn1parse_main+32Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_330
		test	dl, dl
		jz	short loc_32C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_330
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_310

loc_32C:				; CODE XREF: _asn1parse_main+318j
		xor	eax, eax
		jmp	short loc_335
; ---------------------------------------------------------------------------

loc_330:				; CODE XREF: _asn1parse_main+314j
					; _asn1parse_main+320j
		sbb	eax, eax
		or	eax, 1

loc_335:				; CODE XREF: _asn1parse_main+32Ej
		test	eax, eax
		jnz	short loc_352
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		mov	edi, [ebx+4]
		add	ebx, 4
		mov	[esp+5Ch+var_48], edi
		jmp	loc_586
; ---------------------------------------------------------------------------

loc_352:				; CODE XREF: _asn1parse_main+337j
		mov	ecx, offset ??_C@_07DBEKLPPM@?9offset?$AA@ ; "-offset"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_360:				; CODE XREF: _asn1parse_main+37Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_380
		test	dl, dl
		jz	short loc_37C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_380
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_360

loc_37C:				; CODE XREF: _asn1parse_main+368j
		xor	eax, eax
		jmp	short loc_385
; ---------------------------------------------------------------------------

loc_380:				; CODE XREF: _asn1parse_main+364j
					; _asn1parse_main+370j
		sbb	eax, eax
		or	eax, 1

loc_385:				; CODE XREF: _asn1parse_main+37Ej
		test	eax, eax
		jnz	short loc_3AB
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		push	dword ptr [ebx+4] ; Str
		add	ebx, 4
		call	dword ptr ds:__imp__atoi
		add	esp, 4
		mov	[esp+5Ch+var_38], eax
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_3AB:				; CODE XREF: _asn1parse_main+387j
		mov	ecx, offset ??_C@_07JCKOMINM@?9length?$AA@ ; "-length"
		mov	eax, edi

loc_3B2:				; CODE XREF: _asn1parse_main+3CCj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3D2
		test	dl, dl
		jz	short loc_3CE
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3D2
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3B2

loc_3CE:				; CODE XREF: _asn1parse_main+3BAj
		xor	eax, eax
		jmp	short loc_3D7
; ---------------------------------------------------------------------------

loc_3D2:				; CODE XREF: _asn1parse_main+3B6j
					; _asn1parse_main+3C2j
		sbb	eax, eax
		or	eax, 1

loc_3D7:				; CODE XREF: _asn1parse_main+3D0j
		test	eax, eax
		jnz	short loc_405
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		push	dword ptr [ebx+4] ; Str
		add	ebx, 4
		call	dword ptr ds:__imp__atoi
		add	esp, 4
		mov	[esp+5Ch+var_3C], eax
		test	eax, eax
		jz	$bad$183
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_405:				; CODE XREF: _asn1parse_main+3D9j
		mov	ecx, offset ??_C@_05KKGMOIBC@?9dump?$AA@ ; "-dump"
		mov	eax, edi
		nop	dword ptr [eax+00h]

loc_410:				; CODE XREF: _asn1parse_main+42Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_430
		test	dl, dl
		jz	short loc_42C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_430
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_410

loc_42C:				; CODE XREF: _asn1parse_main+418j
		xor	eax, eax
		jmp	short loc_435
; ---------------------------------------------------------------------------

loc_430:				; CODE XREF: _asn1parse_main+414j
					; _asn1parse_main+420j
		sbb	eax, eax
		or	eax, 1

loc_435:				; CODE XREF: _asn1parse_main+42Ej
		test	eax, eax
		jnz	short loc_446
		mov	[esp+5Ch+var_34], 0FFFFFFFFh
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_446:				; CODE XREF: _asn1parse_main+437j
		mov	ecx, offset ??_C@_07KJFKIGHJ@?9dlimit?$AA@ ; "-dlimit"
		mov	eax, edi
		nop	dword ptr [eax]

loc_450:				; CODE XREF: _asn1parse_main+46Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_470
		test	dl, dl
		jz	short loc_46C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_470
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_450

loc_46C:				; CODE XREF: _asn1parse_main+458j
		xor	eax, eax
		jmp	short loc_475
; ---------------------------------------------------------------------------

loc_470:				; CODE XREF: _asn1parse_main+454j
					; _asn1parse_main+460j
		sbb	eax, eax
		or	eax, 1

loc_475:				; CODE XREF: _asn1parse_main+46Ej
		test	eax, eax
		jnz	short loc_4A3
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		push	dword ptr [ebx+4] ; Str
		add	ebx, 4
		call	dword ptr ds:__imp__atoi
		add	esp, 4
		mov	[esp+5Ch+var_34], eax
		test	eax, eax
		jle	$bad$183
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_4A3:				; CODE XREF: _asn1parse_main+477j
		mov	ecx, offset ??_C@_09BMGOMMFB@?9strparse?$AA@ ; "-strparse"
		mov	eax, edi
		nop	word ptr [eax+eax+00h]

loc_4B0:				; CODE XREF: _asn1parse_main+4CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4D0
		test	dl, dl
		jz	short loc_4CC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4D0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4B0

loc_4CC:				; CODE XREF: _asn1parse_main+4B8j
		xor	eax, eax
		jmp	short loc_4D5
; ---------------------------------------------------------------------------

loc_4D0:				; CODE XREF: _asn1parse_main+4B4j
					; _asn1parse_main+4C0j
		sbb	eax, eax
		or	eax, 1

loc_4D5:				; CODE XREF: _asn1parse_main+4CEj
		test	eax, eax
		jnz	short loc_4FA
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		push	dword ptr [ebx+4]
		add	ebx, 4
		push	[esp+60h+var_4C]
		call	_sk_push
		add	esp, 8
		jmp	loc_582
; ---------------------------------------------------------------------------

loc_4FA:				; CODE XREF: _asn1parse_main+4D7j
		mov	ecx, offset ??_C@_07PPPPKGDF@?9genstr?$AA@ ; "-genstr"
		mov	eax, edi

loc_501:				; CODE XREF: _asn1parse_main+51Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_521
		test	dl, dl
		jz	short loc_51D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_521
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_501

loc_51D:				; CODE XREF: _asn1parse_main+509j
		xor	eax, eax
		jmp	short loc_526
; ---------------------------------------------------------------------------

loc_521:				; CODE XREF: _asn1parse_main+505j
					; _asn1parse_main+511j
		sbb	eax, eax
		or	eax, 1

loc_526:				; CODE XREF: _asn1parse_main+51Fj
		test	eax, eax
		jnz	short loc_540
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+5Ch+var_1C], eax
		jmp	short loc_582
; ---------------------------------------------------------------------------

loc_540:				; CODE XREF: _asn1parse_main+528j
		mov	eax, offset ??_C@_08JHCPOKKM@?9genconf?$AA@ ; "-genconf"

loc_545:				; CODE XREF: _asn1parse_main+55Fj
		mov	cl, [edi]
		cmp	cl, [eax]
		jnz	short loc_565
		test	cl, cl
		jz	short loc_561
		mov	cl, [edi+1]
		cmp	cl, [eax+1]
		jnz	short loc_565
		add	edi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_545

loc_561:				; CODE XREF: _asn1parse_main+54Dj
		xor	eax, eax
		jmp	short loc_56A
; ---------------------------------------------------------------------------

loc_565:				; CODE XREF: _asn1parse_main+549j
					; _asn1parse_main+555j
		sbb	eax, eax
		or	eax, 1

loc_56A:				; CODE XREF: _asn1parse_main+563j
		test	eax, eax
		jnz	loc_625
		dec	esi
		cmp	esi, 1
		jl	$bad$183
		mov	ebp, [ebx+4]
		add	ebx, 4

loc_582:				; CODE XREF: _asn1parse_main+1E5j
					; _asn1parse_main+22Ej	...
		mov	edi, [esp+5Ch+var_48]

loc_586:				; CODE XREF: _asn1parse_main+34Dj
		dec	esi
		add	ebx, 4
		cmp	esi, 1
		jge	loc_190

loc_593:				; CODE XREF: _asn1parse_main+187j
		call	_ERR_load_crypto_strings
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	esi, eax
		mov	[esp+60h+var_2C], esi
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 8
		mov	ebx, eax
		mov	[esp+5Ch+var_28], ebx
		test	esi, esi
		jz	loc_AB6
		test	ebx, ebx
		jz	loc_AB6
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	ebx
		call	_BIO_ctrl
		add	esp, 14h
		test	edi, edi
		jz	loc_757
		push	edi
		push	3
		push	6Ch ; 'l'
		push	esi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	loc_74E
		push	edi

loc_602:				; CODE XREF: _asn1parse_main+792j
		push	offset ??_C@_0BF@JLLBIOKH@problems?5opening?5?$CFs?6?$AA@ ; "problems opening %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 10h
		jmp	loc_F3
; ---------------------------------------------------------------------------

loc_625:				; CODE XREF: _asn1parse_main+56Cj
		push	dword ptr [ebx]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$bad$183:				; CODE XREF: _asn1parse_main+1CDj
					; _asn1parse_main+21Ej	...
		push	[esp+5Ch+var_8]
		push	offset ??_C@_0BG@LBBCACMP@?$CFs?5?$FLoptions?$FN?5?$DMinfile?6?$AA@ ; "%s [options] <infile\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@HFLABMMF@?5?9inform?5arg?5?5?5input?5format?5?9?5on@ ;	" -inform arg	input format - one of DE"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@ ; " -in arg       input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DJ@MLOHNHDK@?5?9out?5arg?5?5?5?5?5?5output?5file?5?$CIoutp@ ; " -out arg	    output file	(output	form"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CJ@IOADOFE@?5?9noout?5arg?5?5?5?5don?8t?5produce?5any@ ; " -noout	arg    don't produce any output"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CB@GGAMJLJM@?5?9offset?5arg?5?5?5offset?5into?5file?6@ ; " -offset arg   offset into file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@NKLHOAGK@?5?9length?5arg?5?5?5length?5of?5section@ ; "	-length	arg   length of	section	in fil"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0BP@EFCMLCEL@?5?9i?5?5?5?5?5?5?5?5?5?5?5?5indent?5entries?6?$AA@ ;	" -i		indent entries\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@HALDDFJB@?5?9dump?5?5?5?5?5?5?5?5?5dump?5unknown?5data@ ; " -dump	   dump	unknown	data in	hex"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EF@JGHIMIPF@?5?9dlimit?5arg?5?5?5dump?5the?5first?5ar@ ; " -dlimit arg   dump the	first arg bytes"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@LHOJCFFH@?5?9oid?5file?5?5?5?5?5file?5of?5extra?5oid@ ; " -oid	file	 file of extra oid defini"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@DICEHCDM@?5?9strparse?5offset?6?$AA@ ;	" -strparse offset\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EF@DIJAOLDJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5a?5series?5of?5these@ ;	"		a series of these can be"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CE@LJCHICFI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5ASN1?5blob?5wrappin@ ; "	       ASN1 blob wrappings\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@JNFBKEFG@?5?9genstr?5str?5?5?5string?5to?5generat@ ; "	-genstr	str   string to	generate ASN1 "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DF@CAGGOFNO@?5?9genconf?5file?5file?5to?5generate?5@ ; " -genconf	file file to generate ASN1 st"...
		jmp	loc_E5
; ---------------------------------------------------------------------------

loc_74E:				; CODE XREF: _asn1parse_main+5FBj
		push	esi
		call	_OBJ_create_objects
		add	esp, 4

loc_757:				; CODE XREF: _asn1parse_main+5E5j
		mov	ebx, [esp+5Ch+ErrMsg]
		test	ebx, ebx
		jnz	short loc_797
		push	ebx
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	ebx
		push	6Ah ; 'j'
		push	esi
		call	_BIO_ctrl
		add	esp, 14h

loc_773:				; CODE XREF: _asn1parse_main+7A7j
		mov	ebx, [esp+5Ch+var_20]
		test	ebx, ebx
		jz	short loc_7B8
		push	offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		push	ebx
		call	_BIO_new_file
		add	esp, 8
		mov	[esp+5Ch+var_30], eax
		test	eax, eax
		jnz	short loc_7B8
		push	ebx
		jmp	loc_602
; ---------------------------------------------------------------------------

loc_797:				; CODE XREF: _asn1parse_main+75Dj
		push	ebx
		push	3
		push	6Ch ; 'l'
		push	esi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_773
		push	ebx		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		jmp	loc_F3
; ---------------------------------------------------------------------------

loc_7B8:				; CODE XREF: _asn1parse_main+779j
					; _asn1parse_main+78Fj
		call	_BUF_MEM_new
		mov	ebx, eax
		mov	[esp+5Ch+var_48], ebx
		test	ebx, ebx
		jz	loc_F5
		push	1000h
		push	ebx
		call	_BUF_MEM_grow
		add	esp, 8
		test	eax, eax
		jz	loc_F5
		mov	eax, [esp+5Ch+var_1C]
		test	eax, eax
		jnz	loc_87D
		test	ebp, ebp
		jnz	loc_87D
		cmp	[esp+5Ch+var_18], 3
		jnz	short loc_828
		call	_BIO_f_base64
		push	eax
		call	_BIO_new
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jz	loc_AC9
		push	esi
		push	edi
		call	_BIO_push
		mov	[esp+64h+var_44], esi
		add	esp, 8
		mov	esi, edi
		mov	[esp+5Ch+var_2C], edi

loc_828:				; CODE XREF: _asn1parse_main+7FAj
		push	200h
		push	ebx
		xor	edi, edi
		call	_BUF_MEM_grow
		add	esp, 8
		test	eax, eax
		jz	short loc_86E
		nop	dword ptr [eax+00h]

loc_840:				; CODE XREF: _asn1parse_main+86Cj
		mov	eax, [ebx+4]
		push	200h
		add	eax, edi
		push	eax
		push	esi
		call	_BIO_read
		add	esp, 0Ch
		test	eax, eax
		jle	short loc_8A7
		add	edi, eax
		lea	eax, [edi+200h]
		push	eax
		push	ebx
		call	_BUF_MEM_grow
		add	esp, 8
		test	eax, eax
		jnz	short loc_840

loc_86E:				; CODE XREF: _asn1parse_main+83Aj
		mov	esi, [esp+5Ch+var_4C]
		xor	ebp, ebp
		mov	edi, [esp+5Ch+var_44]
		jmp	$end$182
; ---------------------------------------------------------------------------

loc_87D:				; CODE XREF: _asn1parse_main+7E7j
					; _asn1parse_main+7EFj
		push	ebx
		push	ebp
		push	eax
		push	dword ptr ds:_bio_err
		call	_do_generate
		mov	edi, eax
		add	esp, 10h
		test	edi, edi
		jns	short loc_8A7
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		jmp	loc_F5
; ---------------------------------------------------------------------------

loc_8A7:				; CODE XREF: _asn1parse_main+856j
					; _asn1parse_main+892j
		mov	esi, [esp+5Ch+var_4C]
		mov	ebp, [ebx+4]
		push	esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jz	loc_971
		push	esi
		xor	ebx, ebx
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	loc_96D

loc_8D2:				; CODE XREF: _asn1parse_main+967j
		push	ebx
		push	esi
		call	_sk_value
		push	eax		; Str
		call	dword ptr ds:__imp__atoi
		mov	ecx, eax
		add	esp, 0Ch
		test	ecx, ecx
		jnz	short loc_906
		push	ebx
		push	esi
		call	_sk_value
		push	eax
		push	offset ??_C@_0BL@PAMBLJOI@?8?$CFs?8?5is?5an?5invalid?5number?6?$AA@ ; "'%s' is an invalid number\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 14h
		jmp	short loc_95B
; ---------------------------------------------------------------------------

loc_906:				; CODE XREF: _asn1parse_main+8E7j
		mov	esi, [esp+5Ch+var_40]
		lea	eax, [ecx+ebp]
		sub	edi, ecx
		mov	[esp+5Ch+var_4], eax
		push	edi
		lea	eax, [esp+60h+var_4]
		push	eax
		push	0
		call	_d2i_ASN1_TYPE
		mov	ebp, eax
		push	esi
		mov	[esp+6Ch+var_40], ebp
		call	_ASN1_TYPE_free
		add	esp, 10h
		test	ebp, ebp
		jz	loc_9D3
		push	ebp
		call	_ASN1_TYPE_get
		add	esp, 4
		cmp	eax, 6
		jz	short loc_99D
		cmp	eax, 1
		jz	short loc_99D
		cmp	eax, 5
		jz	short loc_99D
		mov	eax, [ebp+4]
		mov	esi, [esp+5Ch+var_4C]
		mov	ebp, [eax+8]
		mov	edi, [eax]

loc_95B:				; CODE XREF: _asn1parse_main+904j
		push	esi
		inc	ebx
		call	_sk_num
		add	esp, 4
		cmp	ebx, eax
		jl	loc_8D2

loc_96D:				; CODE XREF: _asn1parse_main+8CCj
		mov	ebx, [esp+5Ch+var_48]

loc_971:				; CODE XREF: _asn1parse_main+8B9j
		mov	eax, [esp+5Ch+var_38]
		cmp	eax, edi
		jl	loc_A02
		push	offset ??_C@_0BJ@GHNAHJMH@Error?3?5offset?5too?5large?6?$AA@ ; "Error: offset too large\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebp, [esp+64h+var_40]
		add	esp, 8
		mov	edi, [esp+5Ch+var_44]
		jmp	$end$182
; ---------------------------------------------------------------------------

loc_99D:				; CODE XREF: _asn1parse_main+943j
					; _asn1parse_main+948j	...
		push	eax
		call	_ASN1_tag2str
		push	eax
		push	offset ??_C@_0BF@FGOIGBCH@Can?8t?5parse?5?$CFs?5type?6?$AA@ ; "Can't parse %s type\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	esi, [esp+70h+var_4C]
		add	esp, 14h
		mov	ebx, [esp+5Ch+var_48]
		mov	edi, [esp+5Ch+var_44]
		jmp	$end$182
; ---------------------------------------------------------------------------

loc_9D3:				; CODE XREF: _asn1parse_main+931j
		push	offset ??_C@_0BJ@MMFDFGIJ@Error?5parsing?5structure?6?$AA@ ; "Error parsing structure\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	esi, [esp+68h+var_4C]
		add	esp, 0Ch
		mov	ebx, [esp+5Ch+var_48]
		mov	edi, [esp+5Ch+var_44]
		jmp	$end$182
; ---------------------------------------------------------------------------

loc_A02:				; CODE XREF: _asn1parse_main+977j
		mov	ecx, [esp+5Ch+var_3C]
		sub	edi, eax
		test	ecx, ecx
		jz	short loc_A10
		cmp	ecx, edi
		jle	short loc_A16

loc_A10:				; CODE XREF: _asn1parse_main+A0Aj
		mov	ecx, edi
		mov	[esp+5Ch+var_3C], ecx

loc_A16:				; CODE XREF: _asn1parse_main+A0Ej
		mov	edx, [esp+5Ch+var_30]
		test	edx, edx
		jz	short loc_A62
		push	ecx
		add	eax, ebp
		push	eax
		push	edx
		call	_BIO_write
		mov	ecx, [esp+68h+var_3C]
		add	esp, 0Ch
		cmp	eax, ecx
		jz	short loc_A5E
		push	offset ??_C@_0BG@CMAEKHNL@Error?5writing?5output?6?$AA@	; "Error writing output\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	ebp, [esp+68h+var_40]
		add	esp, 0Ch
		mov	edi, [esp+5Ch+var_44]
		jmp	$end$182
; ---------------------------------------------------------------------------

loc_A5E:				; CODE XREF: _asn1parse_main+A31j
		mov	eax, [esp+5Ch+var_38]

loc_A62:				; CODE XREF: _asn1parse_main+A1Cj
		cmp	[esp+5Ch+var_14], 0
		jnz	short loc_AA1
		push	[esp+5Ch+var_34]
		add	eax, ebp
		push	[esp+60h+var_10]
		push	ecx
		push	eax
		mov	eax, [esp+6Ch+var_28]
		push	eax
		call	_ASN1_parse_dump
		add	esp, 14h
		test	eax, eax
		jnz	short loc_AA1
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	ebp, [esp+60h+var_40]
		add	esp, 4
		mov	edi, [esp+5Ch+var_44]
		jmp	$end$182
; ---------------------------------------------------------------------------

loc_AA1:				; CODE XREF: _asn1parse_main+A67j
					; _asn1parse_main+A84j
		mov	ebp, [esp+5Ch+var_40]
		mov	edi, [esp+5Ch+var_44]
		mov	[esp+5Ch+var_C], 0
		jmp	$end$182
; ---------------------------------------------------------------------------

loc_AB6:				; CODE XREF: _asn1parse_main+5BFj
					; _asn1parse_main+5C7j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		jmp	loc_F3
; ---------------------------------------------------------------------------

loc_AC9:				; CODE XREF: _asn1parse_main+80Ej
		mov	esi, [esp+5Ch+var_4C]
		xor	ebp, ebp
		jmp	$end$182
_asn1parse_main	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AD4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_do_generate	proc near		; CODE XREF: _asn1parse_main+886p

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, 4
		call	__chkstk
		push	ebx
		mov	ebx, [esp+8+arg_8]
		push	ebp
		push	esi
		push	edi
		xor	esi, esi
		xor	edi, edi
		mov	[esp+14h+var_4], esi
		test	ebx, ebx
		jz	loc_B7E
		push	edi
		call	_NCONF_new
		mov	esi, eax
		lea	eax, [esp+18h+var_4]
		push	eax
		push	ebx
		push	esi
		call	_NCONF_load
		add	esp, 10h
		test	eax, eax
		jnz	short loc_B57

$conferr$16:
		mov	eax, [esp+14h+var_4]
		push	ebx
		test	eax, eax
		jle	short loc_B2E
		push	eax
		push	offset ??_C@_0CH@KIGFJELC@Error?5on?5line?5?$CFld?5of?5config?5file@ ; "Error on line %ld of config file '%s'\n"
		push	[esp+20h+arg_0]
		call	_BIO_printf
		add	esp, 10h
		jmp	short $err$17
; ---------------------------------------------------------------------------

loc_B2E:				; CODE XREF: _do_generate+44j
		push	offset ??_C@_0CA@HAIDJJND@Error?5loading?5config?5file?5?8?$CFs?8?6?$AA@ ; "Error loading config file '%s'\n"

loc_B33:				; CODE XREF: _do_generate+A8j
		push	[esp+1Ch+arg_0]
		call	_BIO_printf
		add	esp, 0Ch

$err$17:				; CODE XREF: _do_generate+58j
					; _do_generate+D4j ...
		push	esi
		call	_NCONF_free
		push	edi
		call	_ASN1_TYPE_free
		add	esp, 8

loc_B4E:				; CODE XREF: _do_generate+C4j
		pop	edi
		pop	esi
		pop	ebp
		or	eax, 0FFFFFFFFh
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_B57:				; CODE XREF: _do_generate+3Bj
		mov	eax, [esp+14h+arg_4]
		test	eax, eax
		jnz	short loc_B82
		push	offset ??_C@_04GABBLIPF@asn1?$AA@ ; "asn1"
		push	offset ??_C@_07DLHCIBDH@default?$AA@ ; "default"
		push	esi
		call	_NCONF_get_string
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_B82
		push	ebx
		push	offset ??_C@_0BL@GBCDOIAD@Can?8t?5find?5?8asn1?8?5in?5?8?$CFs?8?6?$AA@ ; "Can't find 'asn1' in '%s'\n"
		jmp	short loc_B33
; ---------------------------------------------------------------------------

loc_B7E:				; CODE XREF: _do_generate+1Cj
		mov	eax, [esp+14h+arg_4]

loc_B82:				; CODE XREF: _do_generate+89j
					; _do_generate+A0j
		push	esi
		push	eax
		call	_ASN1_generate_nconf
		push	esi
		mov	edi, eax
		call	_NCONF_free
		add	esp, 0Ch
		xor	esi, esi
		test	edi, edi
		jz	short loc_B4E
		push	esi
		push	edi
		call	_i2d_ASN1_TYPE
		mov	ebx, eax
		add	esp, 8
		test	ebx, ebx
		jle	short $err$17
		mov	ebp, [esp+14h+arg_C]
		push	ebx
		push	ebp
		call	_BUF_MEM_grow
		add	esp, 8
		test	eax, eax
		jz	short $err$17
		mov	eax, [ebp+4]
		mov	[esp+14h+arg_8], eax
		lea	eax, [esp+14h+arg_8]
		push	eax
		push	edi
		call	_i2d_ASN1_TYPE
		push	edi
		call	_ASN1_TYPE_free
		add	esp, 0Ch
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
_do_generate	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BE0h
; COMDAT (pick any)
		public ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
; `string'
??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@ db 'Memory allocation failure',0Ah,0
					; DATA XREF: _asn1parse_main+E0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BFCh
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _asn1parse_main+192o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C04h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ db '-in',0   ; DATA XREF: _asn1parse_main:loc_1EAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C08h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _asn1parse_main:loc_233o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C10h
; COMDAT (pick any)
		public ??_C@_02IEBECDLA@?9i?$AA@
; `string'
??_C@_02IEBECDLA@?9i?$AA@ db 2Dh, 69h, 0 ; DATA	XREF: _asn1parse_main:loc_282o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C14h
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _asn1parse_main:loc_2C6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C1Ch
; COMDAT (pick any)
		public ??_C@_04CFFOFKAO@?9oid?$AA@
; `string'
??_C@_04CFFOFKAO@?9oid?$AA@ db '-oid',0 ; DATA XREF: _asn1parse_main:loc_306o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C24h
; COMDAT (pick any)
		public ??_C@_07DBEKLPPM@?9offset?$AA@
; `string'
??_C@_07DBEKLPPM@?9offset?$AA@ db '-offset',0 ; DATA XREF: _asn1parse_main:loc_352o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C2Ch
; COMDAT (pick any)
		public ??_C@_07JCKOMINM@?9length?$AA@
; `string'
??_C@_07JCKOMINM@?9length?$AA@ db '-length',0 ; DATA XREF: _asn1parse_main:loc_3ABo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C34h
; COMDAT (pick any)
		public ??_C@_05KKGMOIBC@?9dump?$AA@
; `string'
??_C@_05KKGMOIBC@?9dump?$AA@ db	'-dump',0 ; DATA XREF: _asn1parse_main:loc_405o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C3Ch
; COMDAT (pick any)
		public ??_C@_07KJFKIGHJ@?9dlimit?$AA@
; `string'
??_C@_07KJFKIGHJ@?9dlimit?$AA@ db '-dlimit',0 ; DATA XREF: _asn1parse_main:loc_446o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C44h
; COMDAT (pick any)
		public ??_C@_09BMGOMMFB@?9strparse?$AA@
; `string'
??_C@_09BMGOMMFB@?9strparse?$AA@ db '-strparse',0 ; DATA XREF: _asn1parse_main:loc_4A3o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C50h
; COMDAT (pick any)
		public ??_C@_07PPPPKGDF@?9genstr?$AA@
; `string'
??_C@_07PPPPKGDF@?9genstr?$AA@ db '-genstr',0 ; DATA XREF: _asn1parse_main:loc_4FAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C58h
; COMDAT (pick any)
		public ??_C@_08JHCPOKKM@?9genconf?$AA@
; `string'
??_C@_08JHCPOKKM@?9genconf?$AA@	db '-genconf',0 ; DATA XREF: _asn1parse_main:loc_540o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C64h
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _asn1parse_main+627o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C78h
; COMDAT (pick any)
		public ??_C@_0BG@LBBCACMP@?$CFs?5?$FLoptions?$FN?5?$DMinfile?6?$AA@
; `string'
??_C@_0BG@LBBCACMP@?$CFs?5?$FLoptions?$FN?5?$DMinfile?6?$AA@ db	'%s [options] <infile',0Ah,0
					; DATA XREF: _asn1parse_main+63Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C90h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _asn1parse_main+64Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CA4h
; COMDAT (pick any)
		public ??_C@_0CO@HFLABMMF@?5?9inform?5arg?5?5?5input?5format?5?9?5on@
; `string'
??_C@_0CO@HFLABMMF@?5?9inform?5arg?5?5?5input?5format?5?9?5on@ db ' -inform arg   input format - one of DER PEM',0Ah,0
					; DATA XREF: _asn1parse_main+65Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CD4h
; COMDAT (pick any)
		public ??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@ db ' -in arg       input file',0Ah,0
					; DATA XREF: _asn1parse_main+66Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CF0h
; COMDAT (pick any)
		public ??_C@_0DJ@MLOHNHDK@?5?9out?5arg?5?5?5?5?5?5output?5file?5?$CIoutp@
; `string'
??_C@_0DJ@MLOHNHDK@?5?9out?5arg?5?5?5?5?5?5output?5file?5?$CIoutp@ db ' -out arg      output file (output format is always DER',0Ah,0
					; DATA XREF: _asn1parse_main+67Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D2Ch
; COMDAT (pick any)
		public ??_C@_0CJ@IOADOFE@?5?9noout?5arg?5?5?5?5don?8t?5produce?5any@
; `string'
??_C@_0CJ@IOADOFE@?5?9noout?5arg?5?5?5?5don?8t?5produce?5any@ db ' -noout arg    don',27h,'t produce any output',0Ah,0
					; DATA XREF: _asn1parse_main+68Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D58h
; COMDAT (pick any)
		public ??_C@_0CB@GGAMJLJM@?5?9offset?5arg?5?5?5offset?5into?5file?6@
; `string'
??_C@_0CB@GGAMJLJM@?5?9offset?5arg?5?5?5offset?5into?5file?6@ db ' -offset arg   offset into file',0Ah,0
					; DATA XREF: _asn1parse_main+69Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D7Ch
; COMDAT (pick any)
		public ??_C@_0CK@NKLHOAGK@?5?9length?5arg?5?5?5length?5of?5section@
; `string'
??_C@_0CK@NKLHOAGK@?5?9length?5arg?5?5?5length?5of?5section@ db	' -length arg   length of section in file',0Ah,0
					; DATA XREF: _asn1parse_main+6AEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DA8h
; COMDAT (pick any)
		public ??_C@_0BP@EFCMLCEL@?5?9i?5?5?5?5?5?5?5?5?5?5?5?5indent?5entries?6?$AA@
; `string'
??_C@_0BP@EFCMLCEL@?5?9i?5?5?5?5?5?5?5?5?5?5?5?5indent?5entries?6?$AA@ db ' -i            indent entries',0Ah,0
					; DATA XREF: _asn1parse_main+6C1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DC8h
; COMDAT (pick any)
		public ??_C@_0CO@HALDDFJB@?5?9dump?5?5?5?5?5?5?5?5?5dump?5unknown?5data@
; `string'
??_C@_0CO@HALDDFJB@?5?9dump?5?5?5?5?5?5?5?5?5dump?5unknown?5data@ db ' -dump         dump unknown data in hex form',0Ah,0
					; DATA XREF: _asn1parse_main+6D1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0DF8h
; COMDAT (pick any)
		public ??_C@_0EF@JGHIMIPF@?5?9dlimit?5arg?5?5?5dump?5the?5first?5ar@
; `string'
??_C@_0EF@JGHIMIPF@?5?9dlimit?5arg?5?5?5dump?5the?5first?5ar@ db ' -dlimit arg   dump the first arg bytes of unknown data in hex fo'
					; DATA XREF: _asn1parse_main+6E1o
		db 'rm',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E40h
; COMDAT (pick any)
		public ??_C@_0CO@LHOJCFFH@?5?9oid?5file?5?5?5?5?5file?5of?5extra?5oid@
; `string'
??_C@_0CO@LHOJCFFH@?5?9oid?5file?5?5?5?5?5file?5of?5extra?5oid@	db ' -oid file     file of extra oid definitions',0Ah,0
					; DATA XREF: _asn1parse_main+6F1o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E70h
; COMDAT (pick any)
		public ??_C@_0BD@DICEHCDM@?5?9strparse?5offset?6?$AA@
; `string'
??_C@_0BD@DICEHCDM@?5?9strparse?5offset?6?$AA@ db ' -strparse offset',0Ah,0
					; DATA XREF: _asn1parse_main+701o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0E84h
; COMDAT (pick any)
		public ??_C@_0EF@DIJAOLDJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5a?5series?5of?5these@
; `string'
??_C@_0EF@DIJAOLDJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5a?5series?5of?5these@ db '               a series of these can be used to ',27h,'dig',27h,' into '
					; DATA XREF: _asn1parse_main+711o
		db 'multiple',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECCh
; COMDAT (pick any)
		public ??_C@_0CE@LJCHICFI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5ASN1?5blob?5wrappin@
; `string'
??_C@_0CE@LJCHICFI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5ASN1?5blob?5wrappin@ db '               ASN1 blob wrappings',0Ah,0
					; DATA XREF: _asn1parse_main+721o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EF0h
; COMDAT (pick any)
		public ??_C@_0DH@JNFBKEFG@?5?9genstr?5str?5?5?5string?5to?5generat@
; `string'
??_C@_0DH@JNFBKEFG@?5?9genstr?5str?5?5?5string?5to?5generat@ db	' -genstr str   string to generate ASN1 structure from',0Ah,0
					; DATA XREF: _asn1parse_main+731o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F28h
; COMDAT (pick any)
		public ??_C@_0DF@CAGGOFNO@?5?9genconf?5file?5file?5to?5generate?5@
; `string'
??_C@_0DF@CAGGOFNO@?5?9genconf?5file?5file?5to?5generate?5@ db ' -genconf file file to generate ASN1 structure from',0Ah,0
					; DATA XREF: _asn1parse_main+744o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F60h
; COMDAT (pick any)
		public ??_C@_0BF@JLLBIOKH@problems?5opening?5?$CFs?6?$AA@
; `string'
??_C@_0BF@JLLBIOKH@problems?5opening?5?$CFs?6?$AA@ db 'problems opening %s',0Ah,0
					; DATA XREF: _asn1parse_main:loc_602o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F78h
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 77h,	62h, 0	; DATA XREF: _asn1parse_main+77Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F7Ch
; COMDAT (pick any)
		public ??_C@_0BL@PAMBLJOI@?8?$CFs?8?5is?5an?5invalid?5number?6?$AA@
; `string'
??_C@_0BL@PAMBLJOI@?8?$CFs?8?5is?5an?5invalid?5number?6?$AA@ db	27h,'%s',27h,' is an invalid number',0Ah,0
					; DATA XREF: _asn1parse_main+8F1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F98h
; COMDAT (pick any)
		public ??_C@_0BJ@MMFDFGIJ@Error?5parsing?5structure?6?$AA@
; `string'
??_C@_0BJ@MMFDFGIJ@Error?5parsing?5structure?6?$AA@ db 'Error parsing structure',0Ah,0
					; DATA XREF: _asn1parse_main:loc_9D3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FB4h
; COMDAT (pick any)
		public ??_C@_0BF@FGOIGBCH@Can?8t?5parse?5?$CFs?5type?6?$AA@
; `string'
??_C@_0BF@FGOIGBCH@Can?8t?5parse?5?$CFs?5type?6?$AA@ db	'Can',27h,'t parse %s type',0Ah,0
					; DATA XREF: _asn1parse_main+9A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FCCh
; COMDAT (pick any)
		public ??_C@_0BJ@GHNAHJMH@Error?3?5offset?5too?5large?6?$AA@
; `string'
??_C@_0BJ@GHNAHJMH@Error?3?5offset?5too?5large?6?$AA@ db 'Error: offset too large',0Ah,0
					; DATA XREF: _asn1parse_main+97Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FE8h
; COMDAT (pick any)
		public ??_C@_0BG@CMAEKHNL@Error?5writing?5output?6?$AA@
; `string'
??_C@_0BG@CMAEKHNL@Error?5writing?5output?6?$AA@ db 'Error writing output',0Ah,0
					; DATA XREF: _asn1parse_main+A33o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1000h
; COMDAT (pick any)
		public ??_C@_04GABBLIPF@asn1?$AA@
; `string'
??_C@_04GABBLIPF@asn1?$AA@ db 'asn1',0  ; DATA XREF: _do_generate+8Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1008h
; COMDAT (pick any)
		public ??_C@_07DLHCIBDH@default?$AA@
; `string'
??_C@_07DLHCIBDH@default?$AA@ db 'default',0 ; DATA XREF: _do_generate+90o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1010h
; COMDAT (pick any)
		public ??_C@_0BL@GBCDOIAD@Can?8t?5find?5?8asn1?8?5in?5?8?$CFs?8?6?$AA@
; `string'
??_C@_0BL@GBCDOIAD@Can?8t?5find?5?8asn1?8?5in?5?8?$CFs?8?6?$AA@	db 'Can',27h,'t find ',27h,'asn1',27h,' in ',27h,'%s',27h,0Ah,0
					; DATA XREF: _do_generate+A3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 102Ch
; COMDAT (pick any)
		public ??_C@_0CH@KIGFJELC@Error?5on?5line?5?$CFld?5of?5config?5file@
; `string'
??_C@_0CH@KIGFJELC@Error?5on?5line?5?$CFld?5of?5config?5file@ db 'Error on line %ld of config file ',27h,'%s',27h,0Ah,0
					; DATA XREF: _do_generate+47o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1054h
; COMDAT (pick any)
		public ??_C@_0CA@HAIDJJND@Error?5loading?5config?5file?5?8?$CFs?8?6?$AA@
; `string'
??_C@_0CA@HAIDJJND@Error?5loading?5config?5file?5?8?$CFs?8?6?$AA@ db 'Error loading config file ',27h,'%s',27h,0Ah,0
					; DATA XREF: _do_generate:loc_B2Eo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _asn1parse_main+90p
					; _asn1parse_main+5CFp	...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _asn1parse_main+7AAp
					; DATA XREF: _asn1parse_main+7AAr
; int __cdecl _atoi(const char *Str)
		extrn __imp__atoi:near	; CODE XREF: _asn1parse_main+399p
					; _asn1parse_main+3EBp	...
		extrn _sk_num:near	; CODE XREF: _asn1parse_main+8AFp
					; _asn1parse_main+8C2p	...
		extrn _sk_value:near	; CODE XREF: _asn1parse_main+8D4p
					; _asn1parse_main+8EBp
		extrn _sk_new_null:near	; CODE XREF: _asn1parse_main+CFp
		extrn _sk_free:near	; CODE XREF: _asn1parse_main+16Dp
		extrn _sk_push:near	; CODE XREF: _asn1parse_main+4EDp
		extrn _BIO_s_file:near	; CODE XREF: _asn1parse_main+77p
					; _asn1parse_main+598p	...
		extrn _BIO_new_file:near ; CODE	XREF: _asn1parse_main+781p
		extrn _BIO_new:near	; CODE XREF: _asn1parse_main+7Dp
					; _asn1parse_main+59Ep	...
		extrn _BIO_free:near	; CODE XREF: _asn1parse_main+101p
					; _asn1parse_main+112p	...
		extrn _BIO_read:near	; CODE XREF: _asn1parse_main+84Cp
		extrn _BIO_write:near	; CODE XREF: _asn1parse_main+A23p
		extrn _BIO_ctrl:near	; CODE XREF: _asn1parse_main+A1p
					; _asn1parse_main+5DBp	...
		extrn _BIO_push:near	; CODE XREF: _asn1parse_main+816p
		extrn _BIO_free_all:near ; CODE	XREF: _asn1parse_main+123p
		extrn _BIO_printf:near	; CODE XREF: _asn1parse_main+EBp
					; _asn1parse_main+60Dp	...
		extrn _BUF_MEM_new:near	; CODE XREF: _asn1parse_main:loc_7B8p
		extrn _BUF_MEM_free:near ; CODE	XREF: _asn1parse_main+153p
		extrn _BUF_MEM_grow:near ; CODE	XREF: _asn1parse_main+7D1p
					; _asn1parse_main+830p	...
		extrn _ASN1_TYPE_free:near ; CODE XREF:	_asn1parse_main+160p
					; _asn1parse_main+927p	...
		extrn _d2i_ASN1_TYPE:near ; CODE XREF: _asn1parse_main+91Bp
		extrn _i2d_ASN1_TYPE:near ; CODE XREF: _do_generate+C8p
					; _do_generate+F5p
		extrn _ASN1_TYPE_get:near ; CODE XREF: _asn1parse_main+938p
		extrn _ASN1_parse_dump:near ; CODE XREF: _asn1parse_main+A7Ap
		extrn _ASN1_tag2str:near ; CODE	XREF: _asn1parse_main+99Ep
		extrn _ASN1_generate_nconf:near	; CODE XREF: _do_generate+B0p
		extrn _OBJ_cleanup:near	; CODE XREF: _asn1parse_main:loc_175p
		extrn _OBJ_create_objects:near ; CODE XREF: _asn1parse_main+74Fp
		extrn _BIO_f_base64:near ; CODE	XREF: _asn1parse_main+7FCp
		extrn _NCONF_new:near	; CODE XREF: _do_generate+23p
		extrn _NCONF_free:near	; CODE XREF: _do_generate+6Cp
					; _do_generate+B8p
		extrn _NCONF_load:near	; CODE XREF: _do_generate+31p
		extrn _NCONF_get_string:near ; CODE XREF: _do_generate+96p
		extrn _ERR_print_errors:near ; CODE XREF: _asn1parse_main+146p
					; _asn1parse_main+618p	...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _asn1parse_main:loc_593p
		extrn _str2fmt:near	; CODE XREF: _asn1parse_main+1D9p
		extrn _load_config:near	; CODE XREF: _asn1parse_main+B1p
		extrn __chkstk:near	; CODE XREF: _asn1parse_main+5p
					; _do_generate+5p
		extrn _bio_err:near	; DATA XREF: _asn1parse_main+46r
					; _asn1parse_main+85w ...


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F5E0956671B64ECE1CFED373A13CA7E0
; Input	CRC32 :	9CF316BB

; File Name   :	C:\compspace\Diff\openssl\obj\a_bool.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_ASN1_BOOLEAN
_d2i_ASN1_BOOLEAN proc near

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= byte ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 0Ch
		call	__chkstk
		push	esi
		mov	esi, [esp+10h+arg_4]
		push	[esp+10h+arg_8]
		mov	eax, [esi]
		mov	[esp+14h+arg_4], eax
		lea	eax, [esp+14h+var_4]
		push	eax
		lea	eax, [esp+18h+var_C]
		push	eax
		lea	eax, [esp+1Ch+var_8]
		push	eax
		lea	eax, [esp+20h+arg_4]
		push	eax
		call	_ASN1_get_object
		add	esp, 14h
		test	al, al
		jns	short loc_40
		mov	eax, 66h ; 'f'
		jmp	short $err$8
; ---------------------------------------------------------------------------

loc_40:					; CODE XREF: _d2i_ASN1_BOOLEAN+37j
		cmp	[esp+10h+var_C], 1
		jz	short loc_4E
		mov	eax, 75h ; 'u'
		jmp	short $err$8
; ---------------------------------------------------------------------------

loc_4E:					; CODE XREF: _d2i_ASN1_BOOLEAN+45j
		cmp	[esp+10h+var_8], 1
		jz	short loc_79
		mov	eax, 6Ah ; 'j'

$err$8:					; CODE XREF: _d2i_ASN1_BOOLEAN+3Ej
					; _d2i_ASN1_BOOLEAN+4Cj
		push	6Dh ; 'm'
		push	offset ??_C@_0BH@FEHAEHIN@?4?2crypto?2asn1?2a_bool?4c?$AA@ ; ".\\crypto\\asn1\\a_bool.c"
		push	eax
		push	8Eh ; 'Ž'
		push	0Dh
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_79:					; CODE XREF: _d2i_ASN1_BOOLEAN+53j
		mov	ecx, [esp+10h+arg_4]
		mov	edx, [esp+10h+arg_0]
		movzx	eax, byte ptr [ecx]
		inc	ecx
		test	edx, edx
		jz	short loc_8B
		mov	[edx], eax

loc_8B:					; CODE XREF: _d2i_ASN1_BOOLEAN+87j
		mov	[esi], ecx
		pop	esi
		add	esp, 0Ch
		retn
_d2i_ASN1_BOOLEAN endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 94h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_ASN1_BOOLEAN
_i2d_ASN1_BOOLEAN proc near

var_4		= dword	ptr -4
arg_0		= byte ptr  4
arg_4		= dword	ptr  8

		mov	eax, 4
		call	__chkstk
		push	esi
		push	edi
		push	1
		push	1
		push	0
		call	_ASN1_object_size
		mov	esi, [esp+18h+arg_4]
		add	esp, 0Ch
		mov	edi, eax
		test	esi, esi
		jz	short loc_E6
		mov	eax, [esi]
		push	0
		push	1
		push	1
		mov	[esp+18h+var_4], eax
		lea	eax, [esp+18h+var_4]
		push	0
		push	eax
		call	_ASN1_put_object
		mov	ecx, [esp+20h+var_4]
		add	esp, 14h
		mov	al, [esp+0Ch+arg_0]
		mov	[ecx], al
		mov	eax, [esp+0Ch+var_4]
		inc	eax
		mov	[esi], eax
		mov	eax, edi

loc_E6:					; CODE XREF: _i2d_ASN1_BOOLEAN+22j
		pop	edi
		pop	esi
		pop	ecx
		retn
_i2d_ASN1_BOOLEAN endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
; COMDAT (pick any)
		public ??_C@_0BH@FEHAEHIN@?4?2crypto?2asn1?2a_bool?4c?$AA@
; `string'
??_C@_0BH@FEHAEHIN@?4?2crypto?2asn1?2a_bool?4c?$AA@ db '.\crypto\asn1\a_bool.c',0
					; DATA XREF: _d2i_ASN1_BOOLEAN+5Co
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_put_error:near ; CODE XREF: _d2i_ASN1_BOOLEAN+69p
		extrn _ASN1_get_object:near ; CODE XREF: _d2i_ASN1_BOOLEAN+2Dp
		extrn _ASN1_put_object:near ; CODE XREF: _i2d_ASN1_BOOLEAN+37p
		extrn _ASN1_object_size:near ; CODE XREF: _i2d_ASN1_BOOLEAN+12p
		extrn __chkstk:near	; CODE XREF: _d2i_ASN1_BOOLEAN+5p
					; _i2d_ASN1_BOOLEAN+5p


		end

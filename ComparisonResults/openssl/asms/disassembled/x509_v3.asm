;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	A5BBAB077F6F85F769B52993DB31C90C
; Input	CRC32 :	8EC339F7

; File Name   :	C:\compspace\Diff\openssl\obj\x509_v3.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_EXTENSION_create_by_NID
_X509_EXTENSION_create_by_NID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	[esp+4+arg_4]
		call	_OBJ_nid2obj
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_2F
		push	0C2h ; 'Â'
		push	offset ??_C@_0BI@BCGNFOJH@?4?2crypto?2x509?2x509_v3?4c?$AA@ ; ".\\crypto\\x509\\x509_v3.c"
		push	6Dh ; 'm'
		push	6Ch ; 'l'
		push	0Bh
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_2F:					; CODE XREF: _X509_EXTENSION_create_by_NID+11j
		push	edi
		push	[esp+8+arg_C]
		push	[esp+0Ch+arg_8]
		push	esi
		push	[esp+14h+arg_0]
		call	_X509_EXTENSION_create_by_OBJ
		mov	edi, eax
		add	esp, 10h
		test	edi, edi
		jnz	short loc_54
		push	esi
		call	_ASN1_OBJECT_free
		add	esp, 4

loc_54:					; CODE XREF: _X509_EXTENSION_create_by_NID+49j
		mov	eax, edi
		pop	edi
		pop	esi
		retn
_X509_EXTENSION_create_by_NID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_EXTENSION_create_by_OBJ
_X509_EXTENSION_create_by_OBJ proc near	; CODE XREF: _X509_EXTENSION_create_by_NID+3Dp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	edi
		mov	edi, [esp+8+arg_0]
		test	edi, edi
		jz	short loc_6C
		mov	esi, [edi]
		test	esi, esi
		jnz	short loc_94

loc_6C:					; CODE XREF: _X509_EXTENSION_create_by_OBJ+8j
		call	_X509_EXTENSION_new
		mov	esi, eax
		test	esi, esi
		jnz	short loc_94
		push	0D4h ; 'Ô'
		push	offset ??_C@_0BI@BCGNFOJH@?4?2crypto?2x509?2x509_v3?4c?$AA@ ; ".\\crypto\\x509\\x509_v3.c"
		push	41h ; 'A'
		push	6Dh ; 'm'
		push	0Bh
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_94:					; CODE XREF: _X509_EXTENSION_create_by_OBJ+Ej
					; _X509_EXTENSION_create_by_OBJ+19j
		cmp	[esp+8+arg_4], 0
		jz	short $err$28
		push	dword ptr [esi]
		call	_ASN1_OBJECT_free
		push	[esp+0Ch+arg_4]
		call	_OBJ_dup
		mov	[esi], eax
		mov	ecx, 0FFh
		or	eax, 0FFFFFFFFh
		cmp	[esp+10h+arg_8], 0
		cmovnz	eax, ecx
		mov	[esi+4], eax
		mov	eax, [esp+10h+arg_C]
		push	dword ptr [eax]
		push	dword ptr [eax+8]
		push	dword ptr [esi+8]
		call	_ASN1_STRING_set
		add	esp, 14h
		test	eax, eax
		jz	short $err$28
		test	edi, edi
		jz	short loc_E3
		cmp	dword ptr [edi], 0
		jnz	short loc_E3
		mov	[edi], esi

loc_E3:					; CODE XREF: _X509_EXTENSION_create_by_OBJ+7Ej
					; _X509_EXTENSION_create_by_OBJ+83j
		pop	edi
		mov	eax, esi
		pop	esi
		retn
; ---------------------------------------------------------------------------

$err$28:				; CODE XREF: _X509_EXTENSION_create_by_OBJ+3Dj
					; _X509_EXTENSION_create_by_OBJ+7Aj
		test	edi, edi
		jz	short loc_F0
		cmp	esi, [edi]
		jz	short loc_F9

loc_F0:					; CODE XREF: _X509_EXTENSION_create_by_OBJ+8Ej
		push	esi
		call	_X509_EXTENSION_free
		add	esp, 4

loc_F9:					; CODE XREF: _X509_EXTENSION_create_by_OBJ+92j
		pop	edi
		xor	eax, eax
		pop	esi
		retn
_X509_EXTENSION_create_by_OBJ endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 100h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_EXTENSION_get_critical
_X509_EXTENSION_get_critical proc near

arg_0		= dword	ptr  4

		mov	ecx, [esp+arg_0]
		xor	eax, eax
		test	ecx, ecx
		jz	short locret_110
		cmp	[ecx+4], eax
		setnle	al

locret_110:				; CODE XREF: _X509_EXTENSION_get_critical+8j
		retn
_X509_EXTENSION_get_critical endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 114h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_EXTENSION_get_data
_X509_EXTENSION_get_data proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		test	eax, eax
		jnz	short loc_11D
		retn
; ---------------------------------------------------------------------------

loc_11D:				; CODE XREF: _X509_EXTENSION_get_data+6j
		mov	eax, [eax+8]
		retn
_X509_EXTENSION_get_data endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 124h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_EXTENSION_get_object
_X509_EXTENSION_get_object proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		test	eax, eax
		jnz	short loc_12D
		retn
; ---------------------------------------------------------------------------

loc_12D:				; CODE XREF: _X509_EXTENSION_get_object+6j
		mov	eax, [eax]
		retn
_X509_EXTENSION_get_object endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 130h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_EXTENSION_set_critical
_X509_EXTENSION_set_critical proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	ecx, [esp+arg_0]
		test	ecx, ecx
		jnz	short loc_13B
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_13B:				; CODE XREF: _X509_EXTENSION_set_critical+6j
		or	eax, 0FFFFFFFFh
		mov	edx, 0FFh
		cmp	[esp+arg_4], 0
		cmovnz	eax, edx
		mov	[ecx+4], eax
		mov	eax, 1
		retn
_X509_EXTENSION_set_critical endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 154h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_EXTENSION_set_data
_X509_EXTENSION_set_data proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	ecx, [esp+arg_0]
		test	ecx, ecx
		jnz	short loc_15F
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_15F:				; CODE XREF: _X509_EXTENSION_set_data+6j
		mov	eax, [esp+arg_4]
		push	dword ptr [eax]
		push	dword ptr [eax+8]
		push	dword ptr [ecx+8]
		call	_ASN1_STRING_set
		add	esp, 0Ch
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_X509_EXTENSION_set_data endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 17Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_EXTENSION_set_object
_X509_EXTENSION_set_object proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jz	short loc_1A8
		cmp	[esp+4+arg_4], 0
		jz	short loc_1A8
		push	dword ptr [esi]
		call	_ASN1_OBJECT_free
		push	[esp+8+arg_4]
		call	_OBJ_dup
		add	esp, 8
		mov	[esi], eax
		mov	eax, 1
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_1A8:				; CODE XREF: _X509_EXTENSION_set_object+7j
					; _X509_EXTENSION_set_object+Ej
		xor	eax, eax
		pop	esi
		retn
_X509_EXTENSION_set_object endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509v3_add_ext
_X509v3_add_ext	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		mov	ebx, [esp+4+arg_0]
		push	ebp
		push	esi
		push	edi
		xor	edi, edi
		test	ebx, ebx
		jnz	short loc_1D9
		push	98h ; ''
		push	offset ??_C@_0BI@BCGNFOJH@?4?2crypto?2x509?2x509_v3?4c?$AA@ ; ".\\crypto\\x509\\x509_v3.c"
		push	43h ; 'C'
		push	68h ; 'h'
		push	0Bh
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_1D9:				; CODE XREF: _X509v3_add_ext+Cj
		mov	esi, [ebx]
		test	esi, esi
		jnz	short loc_1EA
		call	_sk_new_null
		mov	esi, eax
		test	esi, esi
		jz	short $err$16

loc_1EA:				; CODE XREF: _X509v3_add_ext+31j
		push	esi
		call	_sk_num
		mov	ecx, [esp+14h+arg_8]
		mov	ebp, eax
		add	esp, 4
		cmp	ecx, ebp
		jg	short loc_204
		test	ecx, ecx
		cmovs	ecx, ebp
		mov	ebp, ecx

loc_204:				; CODE XREF: _X509v3_add_ext+4Fj
		push	[esp+10h+arg_4]
		call	_X509_EXTENSION_dup
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jz	short loc_24A
		push	ebp
		push	edi
		push	esi
		call	_sk_insert
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_25E

$err$16:				; CODE XREF: _X509v3_add_ext+3Cj
		push	0B0h ; '°'
		push	offset ??_C@_0BI@BCGNFOJH@?4?2crypto?2x509?2x509_v3?4c?$AA@ ; ".\\crypto\\x509\\x509_v3.c"
		push	41h ; 'A'
		push	68h ; 'h'
		push	0Bh
		call	_ERR_put_error
		add	esp, 14h

$err2$17:
		test	edi, edi
		jz	short loc_24A
		push	edi
		call	_X509_EXTENSION_free
		add	esp, 4

loc_24A:				; CODE XREF: _X509v3_add_ext+68j
					; _X509v3_add_ext+93j
		test	esi, esi
		jz	short loc_257
		push	esi
		call	_sk_free
		add	esp, 4

loc_257:				; CODE XREF: _X509v3_add_ext+A0j
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_25E:				; CODE XREF: _X509v3_add_ext+77j
		cmp	dword ptr [ebx], 0
		jnz	short loc_265
		mov	[ebx], esi

loc_265:				; CODE XREF: _X509v3_add_ext+B5j
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_X509v3_add_ext	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 26Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509v3_delete_ext
_X509v3_delete_ext proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jz	short loc_296
		push	esi
		call	_sk_num
		mov	ecx, [esp+8+arg_4]
		add	esp, 4
		cmp	eax, ecx
		jle	short loc_296
		test	ecx, ecx
		js	short loc_296
		push	ecx
		push	esi
		call	_sk_delete
		add	esp, 8
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_296:				; CODE XREF: _X509v3_delete_ext+7j
					; _X509v3_delete_ext+18j ...
		xor	eax, eax
		pop	esi
		retn
_X509v3_delete_ext endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 29Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509v3_get_ext
_X509v3_get_ext	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jz	short loc_2C6
		push	esi
		call	_sk_num
		mov	ecx, [esp+8+arg_4]
		add	esp, 4
		cmp	eax, ecx
		jle	short loc_2C6
		test	ecx, ecx
		js	short loc_2C6
		push	ecx
		push	esi
		call	_sk_value
		add	esp, 8
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_2C6:				; CODE XREF: _X509v3_get_ext+7j
					; _X509v3_get_ext+18j ...
		xor	eax, eax
		pop	esi
		retn
_X509v3_get_ext	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2CCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509v3_get_ext_by_NID
_X509v3_get_ext_by_NID proc near

arg_4		= dword	ptr  8

		push	[esp+arg_4]
		call	_OBJ_nid2obj
		add	esp, 4
		test	eax, eax
		jnz	short loc_2E2
		mov	eax, 0FFFFFFFEh
		retn
; ---------------------------------------------------------------------------

loc_2E2:				; CODE XREF: _X509v3_get_ext_by_NID+Ej
		mov	[esp+arg_4], eax
		jmp	_X509v3_get_ext_by_OBJ
_X509v3_get_ext_by_NID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2ECh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509v3_get_ext_by_OBJ
_X509v3_get_ext_by_OBJ proc near	; CODE XREF: _X509v3_get_ext_by_NID+1Aj

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		mov	edi, [esp+4+arg_0]
		test	edi, edi
		jnz	short loc_2FA
		or	eax, 0FFFFFFFFh
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_2FA:				; CODE XREF: _X509v3_get_ext_by_OBJ+7j
		push	ebx
		push	ebp
		push	esi
		mov	esi, [esp+10h+arg_8]
		mov	eax, 0
		add	esi, 1
		push	edi
		cmovs	esi, eax
		call	_sk_num
		mov	ebx, eax
		add	esp, 4
		cmp	esi, ebx
		jge	short loc_33A
		mov	ebp, [esp+10h+arg_4]

loc_31F:				; CODE XREF: _X509v3_get_ext_by_OBJ+4Cj
		push	esi
		push	edi
		call	_sk_value
		push	ebp
		push	dword ptr [eax]
		call	_OBJ_cmp
		add	esp, 10h
		test	eax, eax
		jz	short loc_342
		inc	esi
		cmp	esi, ebx
		jl	short loc_31F

loc_33A:				; CODE XREF: _X509v3_get_ext_by_OBJ+2Dj
		pop	esi
		pop	ebp
		pop	ebx
		or	eax, 0FFFFFFFFh
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_342:				; CODE XREF: _X509v3_get_ext_by_OBJ+47j
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		pop	edi
		retn
_X509v3_get_ext_by_OBJ endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 34Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509v3_get_ext_by_critical
_X509v3_get_ext_by_critical proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		mov	ebx, [esp+4+arg_0]
		test	ebx, ebx
		jnz	short loc_35A
		or	eax, 0FFFFFFFFh
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_35A:				; CODE XREF: _X509v3_get_ext_by_critical+7j
		push	ebp
		push	esi
		mov	esi, [esp+0Ch+arg_8]
		mov	eax, 0
		push	edi
		add	esi, 1
		push	ebx
		cmovs	esi, eax
		call	_sk_num
		mov	ebp, eax
		add	esp, 4
		cmp	esi, ebp
		jge	short loc_3A1
		mov	edi, [esp+10h+arg_4]

loc_37F:				; CODE XREF: _X509v3_get_ext_by_critical+53j
		push	esi
		push	ebx
		call	_sk_value
		add	esp, 8
		mov	eax, [eax+4]
		test	eax, eax
		jle	short loc_398
		test	edi, edi
		jnz	short loc_3A9
		test	eax, eax
		jg	short loc_39C

loc_398:				; CODE XREF: _X509v3_get_ext_by_critical+42j
		test	edi, edi
		jz	short loc_3A9

loc_39C:				; CODE XREF: _X509v3_get_ext_by_critical+4Aj
		inc	esi
		cmp	esi, ebp
		jl	short loc_37F

loc_3A1:				; CODE XREF: _X509v3_get_ext_by_critical+2Dj
		pop	edi
		pop	esi
		pop	ebp
		or	eax, 0FFFFFFFFh
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_3A9:				; CODE XREF: _X509v3_get_ext_by_critical+46j
					; _X509v3_get_ext_by_critical+4Ej
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_X509v3_get_ext_by_critical endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3B0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509v3_get_ext_count
_X509v3_get_ext_count proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		test	eax, eax
		jnz	short loc_3B9
		retn
; ---------------------------------------------------------------------------

loc_3B9:				; CODE XREF: _X509v3_get_ext_count+6j
		mov	[esp+arg_0], eax
		jmp	_sk_num
_X509v3_get_ext_count endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C4h
; COMDAT (pick any)
		public ??_C@_0BI@BCGNFOJH@?4?2crypto?2x509?2x509_v3?4c?$AA@
; `string'
??_C@_0BI@BCGNFOJH@?4?2crypto?2x509?2x509_v3?4c?$AA@ db	'.\crypto\x509\x509_v3.c',0
					; DATA XREF: _X509_EXTENSION_create_by_NID+18o
					; _X509_EXTENSION_create_by_OBJ+20o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_num:near	; CODE XREF: _X509v3_add_ext+3Fp
					; _X509v3_delete_ext+Ap ...
		extrn _sk_value:near	; CODE XREF: _X509v3_get_ext+20p
					; _X509v3_get_ext_by_OBJ+35p ...
		extrn _sk_new_null:near	; CODE XREF: _X509v3_add_ext+33p
		extrn _sk_free:near	; CODE XREF: _X509v3_add_ext+A3p
		extrn _sk_insert:near	; CODE XREF: _X509v3_add_ext+6Dp
		extrn _sk_delete:near	; CODE XREF: _X509v3_delete_ext+20p
		extrn _ERR_put_error:near ; CODE XREF: _X509_EXTENSION_create_by_NID+23p
					; _X509_EXTENSION_create_by_OBJ+2Bp ...
		extrn _ASN1_OBJECT_free:near ; CODE XREF: _X509_EXTENSION_create_by_NID+4Cp
					; _X509_EXTENSION_create_by_OBJ+41p ...
		extrn _ASN1_STRING_set:near ; CODE XREF: _X509_EXTENSION_create_by_OBJ+70p
					; _X509_EXTENSION_set_data+17p
		extrn _OBJ_dup:near	; CODE XREF: _X509_EXTENSION_create_by_OBJ+4Ap
					; _X509_EXTENSION_set_object+1Bp
		extrn _OBJ_nid2obj:near	; CODE XREF: _X509_EXTENSION_create_by_NID+5p
					; _X509v3_get_ext_by_NID+4p
		extrn _OBJ_cmp:near	; CODE XREF: _X509v3_get_ext_by_OBJ+3Dp
		extrn _X509_EXTENSION_dup:near ; CODE XREF: _X509v3_add_ext+5Cp
		extrn _X509_EXTENSION_new:near
					; CODE XREF: _X509_EXTENSION_create_by_OBJ:loc_6Cp
		extrn _X509_EXTENSION_free:near
					; CODE XREF: _X509_EXTENSION_create_by_OBJ+95p
					; _X509v3_add_ext+96p


		end

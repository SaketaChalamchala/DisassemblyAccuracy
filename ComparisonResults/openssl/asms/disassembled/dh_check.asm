;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	77396549E288ECD3F13FD4738C88802B
; Input	CRC32 :	BEAE3926

; File Name   :	C:\compspace\Diff\openssl\obj\dh_check.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DH_check
_DH_check	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		push	esi
		mov	esi, [esp+8+arg_4]
		mov	dword ptr [esi], 0
		call	_BN_CTX_new
		mov	ebx, eax
		test	ebx, ebx
		jz	loc_1DF
		push	ebp
		push	edi
		push	ebx
		call	_BN_CTX_start
		push	ebx
		call	_BN_CTX_get
		mov	ebp, eax
		add	esp, 8
		test	ebp, ebp
		jz	loc_1C7
		push	ebx
		call	_BN_CTX_get
		add	esp, 4
		mov	[esp+10h+arg_4], eax
		test	eax, eax
		jz	loc_1C7
		mov	edi, [esp+10h+arg_0]
		cmp	dword ptr [edi+24h], 0
		jz	loc_119
		call	_BN_value_one
		push	eax
		push	dword ptr [edi+0Ch]
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jle	short loc_AF
		push	dword ptr [edi+8]
		push	dword ptr [edi+0Ch]
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jns	short loc_AF
		push	ebx
		push	dword ptr [edi+8]
		push	dword ptr [edi+24h]
		push	dword ptr [edi+0Ch]
		push	ebp
		call	_BN_mod_exp
		add	esp, 14h
		test	eax, eax
		jz	loc_1C7
		cmp	dword ptr [ebp+4], 1
		jnz	short loc_AF
		mov	eax, [ebp+0]
		cmp	dword ptr [eax], 1
		jnz	short loc_AF
		cmp	dword ptr [ebp+0Ch], 0
		jz	short loc_B2

loc_AF:					; CODE XREF: _DH_check+6Cj
					; _DH_check+7Ej ...
		or	dword ptr [esi], 8

loc_B2:					; CODE XREF: _DH_check+ADj
		push	0
		push	ebx
		push	0
		push	dword ptr [edi+24h]
		call	_BN_is_prime_ex
		add	esp, 10h
		test	eax, eax
		jnz	short loc_C9
		or	dword ptr [esi], 10h

loc_C9:					; CODE XREF: _DH_check+C4j
		push	ebx
		push	dword ptr [edi+24h]
		push	dword ptr [edi+8]
		push	[esp+1Ch+arg_4]
		push	ebp
		call	_BN_div
		add	esp, 14h
		test	eax, eax
		jz	loc_1C7
		mov	ecx, [esp+10h+arg_4]
		cmp	dword ptr [ecx+4], 1
		jnz	short loc_FC
		mov	eax, [ecx]
		cmp	dword ptr [eax], 1
		jnz	short loc_FC
		cmp	dword ptr [ecx+0Ch], 0
		jz	short loc_FF

loc_FC:					; CODE XREF: _DH_check+EDj
					; _DH_check+F4j
		or	dword ptr [esi], 20h

loc_FF:					; CODE XREF: _DH_check+FAj
		mov	eax, [edi+28h]
		test	eax, eax
		jz	short loc_179
		push	ebp
		push	eax
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jz	short loc_179
		or	dword ptr [esi], 40h
		jmp	short loc_179
; ---------------------------------------------------------------------------

loc_119:				; CODE XREF: _DH_check+53j
		mov	ecx, [edi+0Ch]
		mov	edx, [ecx+4]
		cmp	edx, 1
		jnz	short loc_176
		mov	eax, [ecx]
		cmp	dword ptr [eax], 2
		jnz	short loc_148
		cmp	dword ptr [ecx+0Ch], 0
		jnz	short loc_148
		push	18h
		push	dword ptr [edi+8]
		call	_BN_mod_word
		add	esp, 8
		cmp	eax, 0Bh
		jz	short loc_179
		or	dword ptr [esi], 8
		jmp	short loc_179
; ---------------------------------------------------------------------------

loc_148:				; CODE XREF: _DH_check+129j
					; _DH_check+12Fj
		cmp	edx, 1
		jnz	short loc_176
		mov	eax, [ecx]
		cmp	dword ptr [eax], 5
		jnz	short loc_176
		cmp	dword ptr [ecx+0Ch], 0
		jnz	short loc_176
		push	0Ah
		push	dword ptr [edi+8]
		call	_BN_mod_word
		add	esp, 8
		cmp	eax, 3
		jz	short loc_179
		cmp	eax, 7
		jz	short loc_179
		or	dword ptr [esi], 8
		jmp	short loc_179
; ---------------------------------------------------------------------------

loc_176:				; CODE XREF: _DH_check+122j
					; _DH_check+14Bj ...
		or	dword ptr [esi], 4

loc_179:				; CODE XREF: _DH_check+104j
					; _DH_check+112j ...
		push	0
		push	ebx
		push	0
		push	dword ptr [edi+8]
		call	_BN_is_prime_ex
		add	esp, 10h
		test	eax, eax
		jnz	short loc_195
		or	dword ptr [esi], 1
		lea	esi, [eax+1]
		jmp	short $err$51
; ---------------------------------------------------------------------------

loc_195:				; CODE XREF: _DH_check+18Bj
		cmp	dword ptr [edi+24h], 0
		jnz	short loc_1C0
		push	dword ptr [edi+8]
		push	ebp
		call	_BN_rshift1
		add	esp, 8
		test	eax, eax
		jz	short loc_1C7
		push	0
		push	ebx
		push	0
		push	ebp
		call	_BN_is_prime_ex
		add	esp, 10h
		test	eax, eax
		jnz	short loc_1C0
		or	dword ptr [esi], 2

loc_1C0:				; CODE XREF: _DH_check+199j
					; _DH_check+1BBj
		mov	esi, 1
		jmp	short $err$51
; ---------------------------------------------------------------------------

loc_1C7:				; CODE XREF: _DH_check+30j
					; _DH_check+45j ...
		xor	esi, esi

$err$51:				; CODE XREF: _DH_check+193j
					; _DH_check+1C5j
		push	ebx
		call	_BN_CTX_end
		push	ebx
		call	_BN_CTX_free
		add	esp, 8
		mov	eax, esi
		pop	edi
		pop	ebp
		pop	esi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_1DF:				; CODE XREF: _DH_check+15j
		pop	esi
		xor	eax, eax
		pop	ebx
		retn
_DH_check	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DH_check_pub_key
_DH_check_pub_key proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		push	ebp
		push	edi
		mov	edi, [esp+0Ch+arg_8]
		xor	ebp, ebp
		mov	[edi], ebp
		call	_BN_CTX_new
		mov	ebx, eax
		test	ebx, ebx
		jz	loc_2C1
		push	esi
		push	ebx
		call	_BN_CTX_start
		push	ebx
		call	_BN_CTX_get
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jz	$err$19
		push	1
		push	esi
		call	_BN_set_word
		add	esp, 8
		test	eax, eax
		jz	$err$19
		push	esi
		push	[esp+14h+arg_4]
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jg	short loc_23F
		or	dword ptr [edi], 1

loc_23F:				; CODE XREF: _DH_check_pub_key+56j
		mov	eax, [esp+10h+arg_0]
		push	dword ptr [eax+8]
		push	esi
		call	_BN_copy
		add	esp, 8
		test	eax, eax
		jz	short $err$19
		push	1
		push	esi
		call	_BN_sub_word
		add	esp, 8
		test	eax, eax
		jz	short $err$19
		push	esi
		push	[esp+14h+arg_4]
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		js	short loc_276
		or	dword ptr [edi], 2

loc_276:				; CODE XREF: _DH_check_pub_key+8Dj
		mov	eax, [esp+10h+arg_0]
		mov	ecx, [eax+24h]
		test	ecx, ecx
		jz	short loc_2AC
		push	ebx
		push	dword ptr [eax+8]
		push	ecx
		push	[esp+1Ch+arg_4]
		push	esi
		call	_BN_mod_exp
		add	esp, 14h
		test	eax, eax
		jz	short $err$19
		cmp	dword ptr [esi+4], 1
		jnz	short loc_2A9
		mov	eax, [esi]
		cmp	dword ptr [eax], 1
		jnz	short loc_2A9
		cmp	[esi+0Ch], ebp
		jz	short loc_2AC

loc_2A9:				; CODE XREF: _DH_check_pub_key+B7j
					; _DH_check_pub_key+BEj
		or	dword ptr [edi], 4

loc_2AC:				; CODE XREF: _DH_check_pub_key+9Bj
					; _DH_check_pub_key+C3j
		mov	ebp, 1

$err$19:				; CODE XREF: _DH_check_pub_key+2Ej
					; _DH_check_pub_key+41j ...
		push	ebx
		call	_BN_CTX_end
		push	ebx
		call	_BN_CTX_free
		add	esp, 8
		pop	esi

loc_2C1:				; CODE XREF: _DH_check_pub_key+14j
		pop	edi
		mov	eax, ebp
		pop	ebp
		pop	ebx
		retn
_DH_check_pub_key endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _BN_value_one:near ; CODE	XREF: _DH_check+59p
		extrn _BN_CTX_new:near	; CODE XREF: _DH_check+Cp
					; _DH_check_pub_key+Bp
		extrn _BN_CTX_free:near	; CODE XREF: _DH_check+1D0p
					; _DH_check_pub_key+D4p
		extrn _BN_CTX_start:near ; CODE	XREF: _DH_check+1Ep
					; _DH_check_pub_key+1Cp
		extrn _BN_CTX_get:near	; CODE XREF: _DH_check+24p
					; _DH_check+37p ...
		extrn _BN_CTX_end:near	; CODE XREF: _DH_check+1CAp
					; _DH_check_pub_key+CEp
		extrn _BN_copy:near	; CODE XREF: _DH_check_pub_key+63p
		extrn _BN_div:near	; CODE XREF: _DH_check+D5p
		extrn _BN_mod_word:near	; CODE XREF: _DH_check+136p
					; _DH_check+15Fp
		extrn _BN_sub_word:near	; CODE XREF: _DH_check_pub_key+72p
		extrn _BN_set_word:near	; CODE XREF: _DH_check_pub_key+37p
		extrn _BN_cmp:near	; CODE XREF: _DH_check+62p
					; _DH_check+74p ...
		extrn _BN_mod_exp:near	; CODE XREF: _DH_check+8Bp
					; _DH_check_pub_key+A7p
		extrn _BN_rshift1:near	; CODE XREF: _DH_check+19Fp
		extrn _BN_is_prime_ex:near ; CODE XREF:	_DH_check+BAp
					; _DH_check+181p ...


		end

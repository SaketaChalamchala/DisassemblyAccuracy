;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	42CA8C892D89EB96E842E5C64997BC05
; Input	CRC32 :	C1856A1E

; File Name   :	C:\compspace\Diff\openssl\obj\ts_rsp_print.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
; `TS_STATUS_INFO_print_bio'::`2'::status_map
?status_map@?1??TS_STATUS_INFO_print_bio@@9@9 dd offset	??_C@_08BGDMBBOH@Granted?4?$AA@
					; DATA XREF: _TS_STATUS_INFO_print_bio+26r
					; "Granted."
		dd offset ??_C@_0BM@DCIBPAOM@Granted?5with?5modifications?4?$AA@ ; "Granted with modifications."
		dd offset ??_C@_09OFNGIMDM@Rejected?4?$AA@ ; "Rejected."
		dd offset ??_C@_08JEFNGAKP@Waiting?4?$AA@ ; "Waiting."
		dd offset ??_C@_0BE@IGLBKEMI@Revocation?5warning?4?$AA@	; "Revocation warning."
		dd offset ??_C@_08NIAFPFN@Revoked?4?$AA@ ; "Revoked."
; `TS_STATUS_INFO_print_bio'::`2'::failure_map
?failure_map@?1??TS_STATUS_INFO_print_bio@@9@9 dd 0
					; DATA XREF: _TS_STATUS_INFO_print_bio+D2o
					; _TS_STATUS_INFO_print_bio+D7r
		dd offset ??_C@_0DB@KAJJMNOO@unrecognized?5or?5unsupported?5algo@ ; "unrecognized or unsupported algorithm i"...
		dd 2
		dd offset ??_C@_0CH@IADEOGK@transaction?5not?5permitted?5or?5sup@ ; "transaction not permitted or supported"
		dd 5
		dd offset ??_C@_0CI@KNGPFMIP@the?5data?5submitted?5has?5the?5wrong@ ; "the data	submitted has the wrong	format"
		dd 0Eh
		dd offset ??_C@_0CH@PCIEAGHK@the?5TSA?8s?5time?5source?5is?5not?5ava@ ;	"the TSA's time source is not available"
		dd 0Fh
		dd offset ??_C@_0DF@BBHNLHOD@the?5requested?5TSA?5policy?5is?5not?5@ ; "the requested TSA policy is not	support"...
		dd 10h
		dd offset ??_C@_0DE@PFBDENPO@the?5requested?5extension?5is?5not?5s@ ; "the requested extension is not supporte"...
		dd 11h
		dd offset ??_C@_0FB@KHMMCKEK@the?5additional?5information?5reque@ ; "the additional information	requested co"...
		dd 19h
		dd offset ??_C@_0DE@BCMKACGJ@the?5request?5cannot?5be?5handled?5du@ ; "the request cannot be handled due to sy"...
		dd 0FFFFFFFFh, 0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
; COMDAT (pick any)
		public ??_C@_08BGDMBBOH@Granted?4?$AA@
; `string'
??_C@_08BGDMBBOH@Granted?4?$AA@	db 'Granted.',0
					; DATA XREF: .data:`TS_STATUS_INFO_print_bio'::`2'::status_mapo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
; COMDAT (pick any)
		public ??_C@_0BM@DCIBPAOM@Granted?5with?5modifications?4?$AA@
; `string'
??_C@_0BM@DCIBPAOM@Granted?5with?5modifications?4?$AA@ db 'Granted with modifications.',0
					; DATA XREF: .data:00000004o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
; COMDAT (pick any)
		public ??_C@_09OFNGIMDM@Rejected?4?$AA@
; `string'
??_C@_09OFNGIMDM@Rejected?4?$AA@ db 'Rejected.',0 ; DATA XREF: .data:00000008o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
; COMDAT (pick any)
		public ??_C@_08JEFNGAKP@Waiting?4?$AA@
; `string'
??_C@_08JEFNGAKP@Waiting?4?$AA@	db 'Waiting.',0 ; DATA XREF: .data:0000000Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
; COMDAT (pick any)
		public ??_C@_0BE@IGLBKEMI@Revocation?5warning?4?$AA@
; `string'
??_C@_0BE@IGLBKEMI@Revocation?5warning?4?$AA@ db 'Revocation warning.',0
					; DATA XREF: .data:00000010o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
; COMDAT (pick any)
		public ??_C@_08NIAFPFN@Revoked?4?$AA@
; `string'
??_C@_08NIAFPFN@Revoked?4?$AA@ db 'Revoked.',0 ; DATA XREF: .data:00000014o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
; COMDAT (pick any)
		public ??_C@_0DB@KAJJMNOO@unrecognized?5or?5unsupported?5algo@
; `string'
??_C@_0DB@KAJJMNOO@unrecognized?5or?5unsupported?5algo@	db 'unrecognized or unsupported algorithm identifier',0
					; DATA XREF: .data:0000001Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
; COMDAT (pick any)
		public ??_C@_0CH@IADEOGK@transaction?5not?5permitted?5or?5sup@
; `string'
??_C@_0CH@IADEOGK@transaction?5not?5permitted?5or?5sup@	db 'transaction not permitted or supported',0
					; DATA XREF: .data:00000024o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11Ch
; COMDAT (pick any)
		public ??_C@_0CI@KNGPFMIP@the?5data?5submitted?5has?5the?5wrong@
; `string'
??_C@_0CI@KNGPFMIP@the?5data?5submitted?5has?5the?5wrong@ db 'the data submitted has the wrong format',0
					; DATA XREF: .data:0000002Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 144h
; COMDAT (pick any)
		public ??_C@_0CH@PCIEAGHK@the?5TSA?8s?5time?5source?5is?5not?5ava@
; `string'
??_C@_0CH@PCIEAGHK@the?5TSA?8s?5time?5source?5is?5not?5ava@ db 'the TSA',27h,'s time source is not available',0
					; DATA XREF: .data:00000034o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16Ch
; COMDAT (pick any)
		public ??_C@_0DF@BBHNLHOD@the?5requested?5TSA?5policy?5is?5not?5@
; `string'
??_C@_0DF@BBHNLHOD@the?5requested?5TSA?5policy?5is?5not?5@ db 'the requested TSA policy is not supported by the TSA',0
					; DATA XREF: .data:0000003Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A4h
; COMDAT (pick any)
		public ??_C@_0DE@PFBDENPO@the?5requested?5extension?5is?5not?5s@
; `string'
??_C@_0DE@PFBDENPO@the?5requested?5extension?5is?5not?5s@ db 'the requested extension is not supported by the TSA',0
					; DATA XREF: .data:00000044o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1D8h
; COMDAT (pick any)
		public ??_C@_0FB@KHMMCKEK@the?5additional?5information?5reque@
; `string'
??_C@_0FB@KHMMCKEK@the?5additional?5information?5reque@	db 'the additional information requested could not be understood or i'
					; DATA XREF: .data:0000004Co
		db 's not available',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 22Ch
; COMDAT (pick any)
		public ??_C@_0DE@BCMKACGJ@the?5request?5cannot?5be?5handled?5du@
; `string'
??_C@_0DE@BCMKACGJ@the?5request?5cannot?5be?5handled?5du@ db 'the request cannot be handled due to system failure',0
					; DATA XREF: .data:00000054o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 260h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_TS_ACCURACY_print_bio proc near	; CODE XREF: _TS_TST_INFO_print_bio+D1p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		push	ebp
		push	esi
		mov	esi, [esp+0Ch+arg_4]
		push	edi
		push	esi
		call	_TS_ACCURACY_get_seconds
		push	esi
		mov	ebp, eax
		call	_TS_ACCURACY_get_millis
		push	esi
		mov	ebx, eax
		call	_TS_ACCURACY_get_micros
		mov	esi, [esp+1Ch+arg_0]
		add	esp, 0Ch
		mov	edi, eax
		test	ebp, ebp
		jz	short loc_294
		push	ebp
		push	esi
		call	_TS_ASN1_INTEGER_print_bio
		jmp	short loc_29F
; ---------------------------------------------------------------------------

loc_294:				; CODE XREF: _TS_ACCURACY_print_bio+29j
		push	offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		push	esi
		call	_BIO_printf

loc_29F:				; CODE XREF: _TS_ACCURACY_print_bio+32j
		add	esp, 8
		push	offset ??_C@_0L@LJOBILBD@?5seconds?0?5?$AA@ ; "	seconds, "
		push	esi
		call	_BIO_printf
		add	esp, 8
		test	ebx, ebx
		jz	short loc_2BD
		push	ebx
		push	esi
		call	_TS_ASN1_INTEGER_print_bio
		jmp	short loc_2C8
; ---------------------------------------------------------------------------

loc_2BD:				; CODE XREF: _TS_ACCURACY_print_bio+52j
		push	offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		push	esi
		call	_BIO_printf

loc_2C8:				; CODE XREF: _TS_ACCURACY_print_bio+5Bj
		add	esp, 8
		push	offset ??_C@_09ELPLCBOC@?5millis?0?5?$AA@ ; " millis, "
		push	esi
		call	_BIO_printf
		add	esp, 8
		test	edi, edi
		jz	short loc_2E6
		push	edi
		push	esi
		call	_TS_ASN1_INTEGER_print_bio
		jmp	short loc_2F1
; ---------------------------------------------------------------------------

loc_2E6:				; CODE XREF: _TS_ACCURACY_print_bio+7Bj
		push	offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		push	esi
		call	_BIO_printf

loc_2F1:				; CODE XREF: _TS_ACCURACY_print_bio+84j
		add	esp, 8
		push	offset ??_C@_07POAMPCNF@?5micros?$AA@ ;	" micros"
		push	esi
		call	_BIO_printf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_TS_ACCURACY_print_bio endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 30Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _TS_RESP_print_bio
_TS_RESP_print_bio proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		mov	esi, [esp+4+arg_0]
		push	edi
		push	offset ??_C@_0O@FIKDCGII@Status?5info?3?6?$AA@ ; "Status info:\n"
		push	esi
		call	_BIO_printf
		mov	edi, [esp+10h+arg_4]
		push	edi
		call	_TS_RESP_get_status_info
		push	eax
		push	esi
		call	_TS_STATUS_INFO_print_bio
		push	offset ??_C@_0M@KIGFLKFI@?6TST?5info?3?6?$AA@ ;	"\nTST info:\n"
		push	esi
		call	_BIO_printf
		push	edi
		call	_TS_RESP_get_tst_info
		add	esp, 20h
		test	eax, eax
		jz	short loc_35E
		push	edi
		call	_TS_RESP_get_tst_info
		push	eax
		push	esi
		call	_TS_TST_INFO_print_bio
		add	esp, 0Ch
		mov	eax, 1
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_35E:				; CODE XREF: _TS_RESP_print_bio+38j
		push	offset ??_C@_0P@LBBDFEAH@Not?5included?4?6?$AA@	; "Not included.\n"
		push	esi
		call	_BIO_printf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		retn
_TS_RESP_print_bio endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 374h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _TS_STATUS_INFO_print_bio
_TS_STATUS_INFO_print_bio proc near	; CODE XREF: _TS_RESP_print_bio+1Dp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		push	ebp
		push	esi
		mov	esi, [esp+0Ch+arg_0]
		push	edi
		push	offset ??_C@_08DDIBCFCH@Status?3?5?$AA@	; "Status: "
		push	esi
		call	_BIO_printf
		mov	ebx, [esp+18h+arg_4]
		push	dword ptr [ebx]
		call	_ASN1_INTEGER_get
		add	esp, 0Ch
		cmp	eax, 5
		ja	short loc_3B1
		push	?status_map@?1??TS_STATUS_INFO_print_bio@@9@9[eax*4] ; `TS_STATUS_INFO_print_bio'::`2'::status_map
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; `string'
		push	esi
		call	_BIO_printf
		add	esp, 0Ch
		jmp	short loc_3BF
; ---------------------------------------------------------------------------

loc_3B1:				; CODE XREF: _TS_STATUS_INFO_print_bio+24j
		push	offset ??_C@_0P@CFMPGOIN@out?5of?5bounds?6?$AA@	; "out of bounds\n"
		push	esi
		call	_BIO_printf
		add	esp, 8

loc_3BF:				; CODE XREF: _TS_STATUS_INFO_print_bio+3Bj
		push	offset ??_C@_0BF@JCEMKCCB@Status?5description?3?5?$AA@ ; "Status description: "
		push	esi
		call	_BIO_printf
		push	dword ptr [ebx+4]
		xor	edi, edi
		call	_sk_num
		add	esp, 0Ch
		test	eax, eax
		jle	short loc_421

loc_3DB:				; CODE XREF: _TS_STATUS_INFO_print_bio+A7j
		test	edi, edi
		jle	short loc_3ED
		push	offset ??_C@_01GPOEFGEJ@?7?$AA@	; `string'
		push	esi
		call	_BIO_puts
		add	esp, 8

loc_3ED:				; CODE XREF: _TS_STATUS_INFO_print_bio+69j
		push	0
		push	edi
		push	dword ptr [ebx+4]
		call	_sk_value
		add	esp, 8
		push	eax
		push	esi
		call	_ASN1_STRING_print_ex
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_puts
		push	dword ptr [ebx+4]
		inc	edi
		call	_sk_num
		add	esp, 18h
		cmp	edi, eax
		jl	short loc_3DB
		test	edi, edi
		jnz	short loc_42F

loc_421:				; CODE XREF: _TS_STATUS_INFO_print_bio+65j
		push	offset ??_C@_0N@KCECGHCP@unspecified?6?$AA@ ; "unspecified\n"
		push	esi
		call	_BIO_printf
		add	esp, 8

loc_42F:				; CODE XREF: _TS_STATUS_INFO_print_bio+ABj
		push	offset ??_C@_0P@CBFIHBO@Failure?5info?3?5?$AA@ ; "Failure info:	"
		push	esi
		call	_BIO_printf
		mov	ebp, [ebx+8]
		add	esp, 8
		test	ebp, ebp
		jz	short loc_494
		xor	ebx, ebx
		mov	edi, offset ?failure_map@?1??TS_STATUS_INFO_print_bio@@9@9 ; `TS_STATUS_INFO_print_bio'::`2'::failure_map
		cmp	?failure_map@?1??TS_STATUS_INFO_print_bio@@9@9,	ebx ; `TS_STATUS_INFO_print_bio'::`2'::failure_map
		jl	short loc_494
		nop

loc_454:				; CODE XREF: _TS_STATUS_INFO_print_bio+11Aj
		push	dword ptr [edi]
		push	ebp
		call	_ASN1_BIT_STRING_get_bit
		add	esp, 8
		test	eax, eax
		jz	short loc_488
		inc	ebx
		cmp	ebx, 1
		jle	short loc_477
		push	offset ??_C@_02KEGNLNML@?0?5?$AA@ ; ", "
		push	esi
		call	_BIO_printf
		add	esp, 8

loc_477:				; CODE XREF: _TS_STATUS_INFO_print_bio+F3j
		push	dword ptr [edi+4]
		push	offset ??_C@_02DKCKIIND@?$CFs?$AA@ ; `string'
		push	esi
		call	_BIO_printf
		add	esp, 0Ch

loc_488:				; CODE XREF: _TS_STATUS_INFO_print_bio+EDj
		add	edi, 8
		cmp	dword ptr [edi], 0
		jge	short loc_454
		test	ebx, ebx
		jnz	short loc_4A2

loc_494:				; CODE XREF: _TS_STATUS_INFO_print_bio+CEj
					; _TS_STATUS_INFO_print_bio+DDj
		push	offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		push	esi
		call	_BIO_printf
		add	esp, 8

loc_4A2:				; CODE XREF: _TS_STATUS_INFO_print_bio+11Ej
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_printf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_TS_STATUS_INFO_print_bio endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _TS_TST_INFO_print_bio
_TS_TST_INFO_print_bio proc near	; CODE XREF: _TS_RESP_print_bio+42p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		mov	edi, [esp+4+arg_4]
		test	edi, edi
		jnz	short loc_4C9
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_4C9:				; CODE XREF: _TS_TST_INFO_print_bio+7j
		push	esi
		push	edi
		call	_TS_TST_INFO_get_version
		mov	esi, [esp+0Ch+arg_0]
		push	eax
		push	offset ??_C@_0N@DGFKPCIF@Version?3?5?$CFd?6?$AA@ ; "Version: %d\n"
		push	esi
		call	_BIO_printf
		push	offset ??_C@_0N@MOFEFBHJ@Policy?5OID?3?5?$AA@ ;	"Policy	OID: "
		push	esi
		call	_BIO_printf
		push	edi
		call	_TS_TST_INFO_get_policy_id
		push	eax
		push	esi
		call	_TS_OBJ_print_bio
		push	edi
		call	_TS_TST_INFO_get_msg_imprint
		push	eax
		push	esi
		call	_TS_MSG_IMPRINT_print_bio
		push	offset ??_C@_0BA@FELPCBDK@Serial?5number?3?5?$AA@ ; "Serial number: "
		push	esi
		call	_BIO_printf
		push	edi
		call	_TS_TST_INFO_get_serial
		add	esp, 3Ch
		test	eax, eax
		jnz	short loc_52A
		push	offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		push	esi
		call	_BIO_printf
		jmp	short loc_531
; ---------------------------------------------------------------------------

loc_52A:				; CODE XREF: _TS_TST_INFO_print_bio+5Fj
		push	eax
		push	esi
		call	_TS_ASN1_INTEGER_print_bio

loc_531:				; CODE XREF: _TS_TST_INFO_print_bio+6Cj
		add	esp, 8
		push	1
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_write
		push	offset ??_C@_0N@ONIJMNJL@Time?5stamp?3?5?$AA@ ;	"Time stamp: "
		push	esi
		call	_BIO_printf
		push	edi
		call	_TS_TST_INFO_get_time
		push	eax
		push	esi
		call	_ASN1_GENERALIZEDTIME_print
		push	1
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_write
		push	offset ??_C@_0L@PELCKOEI@Accuracy?3?5?$AA@ ; "Accuracy:	"
		push	esi
		call	_BIO_printf
		push	edi
		call	_TS_TST_INFO_get_accuracy
		add	esp, 38h
		test	eax, eax
		jnz	short loc_58B
		push	offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		push	esi
		call	_BIO_printf
		jmp	short loc_592
; ---------------------------------------------------------------------------

loc_58B:				; CODE XREF: _TS_TST_INFO_print_bio+C0j
		push	eax
		push	esi
		call	_TS_ACCURACY_print_bio

loc_592:				; CODE XREF: _TS_TST_INFO_print_bio+CDj
		add	esp, 8
		push	1
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_write
		push	edi
		call	_TS_TST_INFO_get_ordering
		test	eax, eax
		mov	edx, offset ??_C@_02KAJCLHKP@no?$AA@ ; `string'
		mov	ecx, offset ??_C@_03ICICOMAL@yes?$AA@ ;	`string'
		cmovz	ecx, edx
		push	ecx
		push	offset ??_C@_0O@DPIOKJAF@Ordering?3?5?$CFs?6?$AA@ ; "Ordering: %s\n"
		push	esi
		call	_BIO_printf
		push	offset ??_C@_07IHNIOMCH@Nonce?3?5?$AA@ ; "Nonce: "
		push	esi
		call	_BIO_printf
		push	edi
		call	_TS_TST_INFO_get_nonce
		add	esp, 28h
		test	eax, eax
		jnz	short loc_5E8
		push	offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		push	esi
		call	_BIO_printf
		jmp	short loc_5EF
; ---------------------------------------------------------------------------

loc_5E8:				; CODE XREF: _TS_TST_INFO_print_bio+11Dj
		push	eax
		push	esi
		call	_TS_ASN1_INTEGER_print_bio

loc_5EF:				; CODE XREF: _TS_TST_INFO_print_bio+12Aj
		add	esp, 8
		push	1
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_write
		push	offset ??_C@_05DJEBNKBK@TSA?3?5?$AA@ ; "TSA: "
		push	esi
		call	_BIO_printf
		push	edi
		call	_TS_TST_INFO_get_tsa
		add	esp, 18h
		test	eax, eax
		jnz	short loc_627
		push	offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		push	esi
		call	_BIO_printf
		add	esp, 8
		jmp	short loc_658
; ---------------------------------------------------------------------------

loc_627:				; CODE XREF: _TS_TST_INFO_print_bio+159j
		push	ebx
		push	0
		push	eax
		push	0
		call	_i2v_GENERAL_NAME
		mov	ebx, eax
		add	esp, 0Ch
		test	ebx, ebx
		jz	short loc_649
		push	0
		push	0
		push	ebx
		push	esi
		call	_X509V3_EXT_val_prn
		add	esp, 10h

loc_649:				; CODE XREF: _TS_TST_INFO_print_bio+17Dj
		push	offset _X509V3_conf_free
		push	ebx
		call	_sk_pop_free
		add	esp, 8
		pop	ebx

loc_658:				; CODE XREF: _TS_TST_INFO_print_bio+169j
		push	1
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	esi
		call	_BIO_write
		push	edi
		call	_TS_TST_INFO_get_exts
		push	eax
		push	esi
		call	_TS_ext_print_bio
		add	esp, 18h
		mov	eax, 1
		pop	esi
		pop	edi
		retn
_TS_TST_INFO_print_bio endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 680h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_TS_status_map_print proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		mov	esi, [esp+4+arg_4]
		push	edi
		xor	edi, edi
		mov	eax, [esi]
		test	eax, eax
		js	short loc_6D7
		push	ebx
		mov	ebx, [esp+0Ch+arg_0]
		push	ebp
		mov	ebp, [esp+10h+arg_8]

loc_698:				; CODE XREF: _TS_status_map_print+53j
		push	eax
		push	ebp
		call	_ASN1_BIT_STRING_get_bit
		add	esp, 8
		test	eax, eax
		jz	short loc_6CB
		inc	edi
		cmp	edi, 1
		jle	short loc_6BA
		push	offset ??_C@_02KEGNLNML@?0?5?$AA@ ; ", "
		push	ebx
		call	_BIO_printf
		add	esp, 8

loc_6BA:				; CODE XREF: _TS_status_map_print+2Aj
		push	dword ptr [esi+4]
		push	offset ??_C@_02DKCKIIND@?$CFs?$AA@ ; `string'
		push	ebx
		call	_BIO_printf
		add	esp, 0Ch

loc_6CB:				; CODE XREF: _TS_status_map_print+24j
		mov	eax, [esi+8]
		add	esi, 8
		test	eax, eax
		jns	short loc_698
		pop	ebp
		pop	ebx

loc_6D7:				; CODE XREF: _TS_status_map_print+Cj
		mov	eax, edi
		pop	edi
		pop	esi
		retn
_TS_status_map_print endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6DCh
; COMDAT (pick any)
		public ??_C@_0O@FIKDCGII@Status?5info?3?6?$AA@
; `string'
??_C@_0O@FIKDCGII@Status?5info?3?6?$AA@	db 'Status info:',0Ah,0
					; DATA XREF: _TS_RESP_print_bio+6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6ECh
; COMDAT (pick any)
		public ??_C@_0M@KIGFLKFI@?6TST?5info?3?6?$AA@
; `string'
??_C@_0M@KIGFLKFI@?6TST?5info?3?6?$AA@ db 0Ah ;	DATA XREF: _TS_RESP_print_bio+22o
		db 'TST info:',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6F8h
; COMDAT (pick any)
		public ??_C@_0P@LBBDFEAH@Not?5included?4?6?$AA@
; `string'
??_C@_0P@LBBDFEAH@Not?5included?4?6?$AA@ db 'Not included.',0Ah,0
					; DATA XREF: _TS_RESP_print_bio:loc_35Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 708h
; COMDAT (pick any)
		public ??_C@_08DDIBCFCH@Status?3?5?$AA@
; `string'
??_C@_08DDIBCFCH@Status?3?5?$AA@ db 'Status: ',0 ; DATA XREF: _TS_STATUS_INFO_print_bio+8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 714h
; COMDAT (pick any)
		public ??_C@_03OFAPEBGM@?$CFs?6?$AA@
; `string'
??_C@_03OFAPEBGM@?$CFs?6?$AA@ dd 0A7325h ; DATA	XREF: _TS_STATUS_INFO_print_bio+2Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 718h
; COMDAT (pick any)
		public ??_C@_0P@CFMPGOIN@out?5of?5bounds?6?$AA@
; `string'
??_C@_0P@CFMPGOIN@out?5of?5bounds?6?$AA@ db 'out of bounds',0Ah,0
					; DATA XREF: _TS_STATUS_INFO_print_bio:loc_3B1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 728h
; COMDAT (pick any)
		public ??_C@_0BF@JCEMKCCB@Status?5description?3?5?$AA@
; `string'
??_C@_0BF@JCEMKCCB@Status?5description?3?5?$AA@	db 'Status description: ',0
					; DATA XREF: _TS_STATUS_INFO_print_bio:loc_3BFo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 740h
; COMDAT (pick any)
		public ??_C@_01GPOEFGEJ@?7?$AA@
; `string'
??_C@_01GPOEFGEJ@?7?$AA@ db 9, 0	; DATA XREF: _TS_STATUS_INFO_print_bio+6Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 744h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah, 0	; DATA XREF: _TS_STATUS_INFO_print_bio+8Eo
					; _TS_STATUS_INFO_print_bio:loc_4A2o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 748h
; COMDAT (pick any)
		public ??_C@_0N@KCECGHCP@unspecified?6?$AA@
; `string'
??_C@_0N@KCECGHCP@unspecified?6?$AA@ db	'unspecified',0Ah,0
					; DATA XREF: _TS_STATUS_INFO_print_bio:loc_421o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 758h
; COMDAT (pick any)
		public ??_C@_0P@CBFIHBO@Failure?5info?3?5?$AA@
; `string'
??_C@_0P@CBFIHBO@Failure?5info?3?5?$AA@	db 'Failure info: ',0
					; DATA XREF: _TS_STATUS_INFO_print_bio:loc_42Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 768h
; COMDAT (pick any)
		public ??_C@_0M@MFMDLEDN@unspecified?$AA@
; `string'
??_C@_0M@MFMDLEDN@unspecified?$AA@ db 'unspecified',0
					; DATA XREF: _TS_ACCURACY_print_bio:loc_294o
					; _TS_ACCURACY_print_bio:loc_2BDo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 774h
; COMDAT (pick any)
		public ??_C@_02KEGNLNML@?0?5?$AA@
; `string'
??_C@_02KEGNLNML@?0?5?$AA@ db ', ',0    ; DATA XREF: _TS_STATUS_INFO_print_bio+F5o
					; _TS_status_map_print+2Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 778h
; COMDAT (pick any)
		public ??_C@_02DKCKIIND@?$CFs?$AA@
; `string'
??_C@_02DKCKIIND@?$CFs?$AA@ db 25h, 73h, 0 ; DATA XREF:	_TS_STATUS_INFO_print_bio+106o
					; _TS_status_map_print+3Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 77Ch
; COMDAT (pick any)
		public ??_C@_0N@DGFKPCIF@Version?3?5?$CFd?6?$AA@
; `string'
??_C@_0N@DGFKPCIF@Version?3?5?$CFd?6?$AA@ db 'Version: %d',0Ah,0
					; DATA XREF: _TS_TST_INFO_print_bio+19o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78Ch
; COMDAT (pick any)
		public ??_C@_0N@MOFEFBHJ@Policy?5OID?3?5?$AA@
; `string'
??_C@_0N@MOFEFBHJ@Policy?5OID?3?5?$AA@ db 'Policy OID: ',0
					; DATA XREF: _TS_TST_INFO_print_bio+24o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 79Ch
; COMDAT (pick any)
		public ??_C@_0BA@FELPCBDK@Serial?5number?3?5?$AA@
; `string'
??_C@_0BA@FELPCBDK@Serial?5number?3?5?$AA@ db 'Serial number: ',0
					; DATA XREF: _TS_TST_INFO_print_bio+49o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7ACh
; COMDAT (pick any)
		public ??_C@_0N@ONIJMNJL@Time?5stamp?3?5?$AA@
; `string'
??_C@_0N@ONIJMNJL@Time?5stamp?3?5?$AA@ db 'Time stamp: ',0
					; DATA XREF: _TS_TST_INFO_print_bio+85o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7BCh
; COMDAT (pick any)
		public ??_C@_0L@PELCKOEI@Accuracy?3?5?$AA@
; `string'
??_C@_0L@PELCKOEI@Accuracy?3?5?$AA@ db 'Accuracy: ',0
					; DATA XREF: _TS_TST_INFO_print_bio+AAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7C8h
; COMDAT (pick any)
		public ??_C@_03ICICOMAL@yes?$AA@
; `string'
??_C@_03ICICOMAL@yes?$AA@ dd 736579h	; DATA XREF: _TS_TST_INFO_print_bio+F3o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7CCh
; COMDAT (pick any)
		public ??_C@_02KAJCLHKP@no?$AA@
; `string'
??_C@_02KAJCLHKP@no?$AA@ db 6Eh, 6Fh, 0	; DATA XREF: _TS_TST_INFO_print_bio+EEo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7D0h
; COMDAT (pick any)
		public ??_C@_0O@DPIOKJAF@Ordering?3?5?$CFs?6?$AA@
; `string'
??_C@_0O@DPIOKJAF@Ordering?3?5?$CFs?6?$AA@ db 'Ordering: %s',0Ah,0
					; DATA XREF: _TS_TST_INFO_print_bio+FCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7E0h
; COMDAT (pick any)
		public ??_C@_07IHNIOMCH@Nonce?3?5?$AA@
; `string'
??_C@_07IHNIOMCH@Nonce?3?5?$AA@	db 'Nonce: ',0 ; DATA XREF: _TS_TST_INFO_print_bio+107o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7E8h
; COMDAT (pick any)
		public ??_C@_05DJEBNKBK@TSA?3?5?$AA@
; `string'
??_C@_05DJEBNKBK@TSA?3?5?$AA@ db 'TSA: ',0 ; DATA XREF: _TS_TST_INFO_print_bio+143o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7F0h
; COMDAT (pick any)
		public ??_C@_0L@LJOBILBD@?5seconds?0?5?$AA@
; `string'
??_C@_0L@LJOBILBD@?5seconds?0?5?$AA@ db	' seconds, ',0
					; DATA XREF: _TS_ACCURACY_print_bio+42o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7FCh
; COMDAT (pick any)
		public ??_C@_09ELPLCBOC@?5millis?0?5?$AA@
; `string'
??_C@_09ELPLCBOC@?5millis?0?5?$AA@ db ' millis, ',0 ; DATA XREF: _TS_ACCURACY_print_bio+6Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 808h
; COMDAT (pick any)
		public ??_C@_07POAMPCNF@?5micros?$AA@
; `string'
??_C@_07POAMPCNF@?5micros?$AA@ db ' micros',0 ; DATA XREF: _TS_ACCURACY_print_bio+94o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_num:near	; CODE XREF: _TS_STATUS_INFO_print_bio+5Bp
					; _TS_STATUS_INFO_print_bio+9Dp
		extrn _sk_value:near	; CODE XREF: _TS_STATUS_INFO_print_bio+7Fp
		extrn _sk_pop_free:near	; CODE XREF: _TS_TST_INFO_print_bio+193p
		extrn _BIO_write:near	; CODE XREF: _TS_TST_INFO_print_bio+80p
					; _TS_TST_INFO_print_bio+A5p ...
		extrn _BIO_puts:near	; CODE XREF: _TS_STATUS_INFO_print_bio+71p
					; _TS_STATUS_INFO_print_bio+94p
		extrn _BIO_printf:near	; CODE XREF: _TS_ACCURACY_print_bio+3Ap
					; _TS_ACCURACY_print_bio+48p ...
		extrn _ASN1_BIT_STRING_get_bit:near
					; CODE XREF: _TS_STATUS_INFO_print_bio+E3p
					; _TS_status_map_print+1Ap
		extrn _ASN1_INTEGER_get:near ; CODE XREF: _TS_STATUS_INFO_print_bio+19p
		extrn _ASN1_GENERALIZEDTIME_print:near
					; CODE XREF: _TS_TST_INFO_print_bio+98p
		extrn _ASN1_STRING_print_ex:near ; CODE	XREF: _TS_STATUS_INFO_print_bio+89p
		extrn _i2v_GENERAL_NAME:near ; CODE XREF: _TS_TST_INFO_print_bio+171p
		extrn _X509V3_conf_free:near ; DATA XREF: _TS_TST_INFO_print_bio:loc_649o
		extrn _X509V3_EXT_val_prn:near ; CODE XREF: _TS_TST_INFO_print_bio+185p
		extrn _TS_RESP_get_status_info:near ; CODE XREF: _TS_RESP_print_bio+16p
		extrn _TS_RESP_get_tst_info:near ; CODE	XREF: _TS_RESP_print_bio+2Ep
					; _TS_RESP_print_bio+3Bp
		extrn _TS_TST_INFO_get_version:near ; CODE XREF: _TS_TST_INFO_print_bio+Fp
		extrn _TS_TST_INFO_get_policy_id:near
					; CODE XREF: _TS_TST_INFO_print_bio+30p
		extrn _TS_TST_INFO_get_msg_imprint:near
					; CODE XREF: _TS_TST_INFO_print_bio+3Dp
		extrn _TS_TST_INFO_get_serial:near ; CODE XREF:	_TS_TST_INFO_print_bio+55p
		extrn _TS_TST_INFO_get_time:near ; CODE	XREF: _TS_TST_INFO_print_bio+91p
		extrn _TS_TST_INFO_get_accuracy:near ; CODE XREF: _TS_TST_INFO_print_bio+B6p
		extrn _TS_ACCURACY_get_seconds:near ; CODE XREF: _TS_ACCURACY_print_bio+9p
		extrn _TS_ACCURACY_get_millis:near ; CODE XREF:	_TS_ACCURACY_print_bio+11p
		extrn _TS_ACCURACY_get_micros:near ; CODE XREF:	_TS_ACCURACY_print_bio+19p
		extrn _TS_TST_INFO_get_ordering:near ; CODE XREF: _TS_TST_INFO_print_bio+E7p
		extrn _TS_TST_INFO_get_nonce:near ; CODE XREF: _TS_TST_INFO_print_bio+113p
		extrn _TS_TST_INFO_get_tsa:near	; CODE XREF: _TS_TST_INFO_print_bio+14Fp
		extrn _TS_TST_INFO_get_exts:near ; CODE	XREF: _TS_TST_INFO_print_bio+1AAp
		extrn _TS_ASN1_INTEGER_print_bio:near
					; CODE XREF: _TS_ACCURACY_print_bio+2Dp
					; _TS_ACCURACY_print_bio+56p ...
		extrn _TS_OBJ_print_bio:near ; CODE XREF: _TS_TST_INFO_print_bio+37p
		extrn _TS_ext_print_bio:near ; CODE XREF: _TS_TST_INFO_print_bio+1B1p
		extrn _TS_MSG_IMPRINT_print_bio:near ; CODE XREF: _TS_TST_INFO_print_bio+44p


		end

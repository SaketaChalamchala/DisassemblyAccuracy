;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	C3ACC0B2C922FE33B20CDF6758922A72
; Input	CRC32 :	645C6B66

; File Name   :	C:\compspace\Diff\openssl\obj\rsa_depr.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _RSA_generate_key
_RSA_generate_key proc near

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, 0Ch
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		push	edi
		call	_RSA_new
		mov	ebx, eax
		call	_BN_new
		mov	edi, eax
		test	ebx, ebx
		jz	short $err$19
		test	edi, edi
		jz	short loc_A0
		mov	ebp, [esp+1Ch+arg_4]
		xor	esi, esi
		nop	word ptr [eax+eax+00h]

loc_30:					; CODE XREF: _RSA_generate_key+4Fj
		mov	eax, 1
		mov	ecx, esi
		shl	eax, cl
		test	ebp, eax
		jz	short loc_4B
		push	esi
		push	edi
		call	_BN_set_bit
		add	esp, 8
		test	eax, eax
		jz	short $err$19

loc_4B:					; CODE XREF: _RSA_generate_key+3Bj
		inc	esi
		cmp	esi, 20h ; ' '
		jl	short loc_30
		mov	eax, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_8], eax
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_4], eax
		lea	eax, [esp+1Ch+var_C]
		push	eax
		push	edi
		push	[esp+24h+arg_0]
		mov	[esp+28h+var_C], 1
		push	ebx
		call	_RSA_generate_key_ex
		add	esp, 10h
		test	eax, eax
		jz	short $err$19
		push	edi
		call	_BN_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

$err$19:				; CODE XREF: _RSA_generate_key+1Ej
					; _RSA_generate_key+49j ...
		test	edi, edi
		jz	short loc_A0
		push	edi
		call	_BN_free
		add	esp, 4

loc_A0:					; CODE XREF: _RSA_generate_key+22j
					; _RSA_generate_key+95j
		test	ebx, ebx
		jz	short loc_AD
		push	ebx
		call	_RSA_free
		add	esp, 4

loc_AD:					; CODE XREF: _RSA_generate_key+A2j
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		add	esp, 0Ch
		retn
_RSA_generate_key endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _BN_new:near	; CODE XREF: _RSA_generate_key+15p
		extrn _BN_free:near	; CODE XREF: _RSA_generate_key+81p
					; _RSA_generate_key+98p
		extrn _BN_set_bit:near	; CODE XREF: _RSA_generate_key+3Fp
		extrn _RSA_new:near	; CODE XREF: _RSA_generate_key+Ep
		extrn _RSA_generate_key_ex:near	; CODE XREF: _RSA_generate_key+74p
		extrn _RSA_free:near	; CODE XREF: _RSA_generate_key+A5p
		extrn __chkstk:near	; CODE XREF: _RSA_generate_key+5p


		end

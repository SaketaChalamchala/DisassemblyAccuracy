;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	638F23A5AF55D97118958A3B2B84EF8E
; Input	CRC32 :	3612C814

; File Name   :	C:\compspace\Diff\openssl\obj\x509_ext.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_add1_ext_i2d
_X509_CRL_add1_ext_i2d proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		add	eax, 18h
		mov	[esp+arg_0], eax
		jmp	_X509V3_add1_i2d
_X509_CRL_add1_ext_i2d endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 14h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_add_ext
_X509_CRL_add_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	[esp+arg_8]
		push	[esp+4+arg_4]
		mov	eax, [eax]
		add	eax, 18h
		push	eax
		call	_X509v3_add_ext
		add	esp, 0Ch
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_X509_CRL_add_ext endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 38h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_delete_ext
_X509_CRL_delete_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+18h]
		call	_X509v3_delete_ext
		add	esp, 8
		retn
_X509_CRL_delete_ext endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 50h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_get_ext
_X509_CRL_get_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+18h]
		call	_X509v3_get_ext
		add	esp, 8
		retn
_X509_CRL_get_ext endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 68h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_get_ext_by_NID
_X509_CRL_get_ext_by_NID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	[esp+arg_8]
		push	[esp+4+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+18h]
		call	_X509v3_get_ext_by_NID
		add	esp, 0Ch
		retn
_X509_CRL_get_ext_by_NID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 84h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_get_ext_by_OBJ
_X509_CRL_get_ext_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	[esp+arg_8]
		push	[esp+4+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+18h]
		call	_X509v3_get_ext_by_OBJ
		add	esp, 0Ch
		retn
_X509_CRL_get_ext_by_OBJ endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_get_ext_by_critical
_X509_CRL_get_ext_by_critical proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	[esp+arg_8]
		push	[esp+4+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+18h]
		call	_X509v3_get_ext_by_critical
		add	esp, 0Ch
		retn
_X509_CRL_get_ext_by_critical endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_get_ext_count
_X509_CRL_get_ext_count	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		push	dword ptr [eax+18h]
		call	_X509v3_get_ext_count
		add	esp, 4
		retn
_X509_CRL_get_ext_count	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_CRL_get_ext_d2i
_X509_CRL_get_ext_d2i proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+18h]
		call	_X509V3_get_d2i
		add	esp, 10h
		retn
_X509_CRL_get_ext_d2i endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_add1_ext_i2d
_X509_REVOKED_add1_ext_i2d proc	near

arg_0		= dword	ptr  4

		add	[esp+arg_0], 8
		jmp	_X509V3_add1_i2d
_X509_REVOKED_add1_ext_i2d endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0FCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_add_ext
_X509_REVOKED_add_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		add	eax, 8
		push	eax
		call	_X509v3_add_ext
		add	esp, 0Ch
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_X509_REVOKED_add_ext endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 11Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_delete_ext
_X509_REVOKED_delete_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		push	dword ptr [eax+8]
		call	_X509v3_delete_ext
		add	esp, 8
		retn
_X509_REVOKED_delete_ext endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 130h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_get_ext
_X509_REVOKED_get_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		push	dword ptr [eax+8]
		call	_X509v3_get_ext
		add	esp, 8
		retn
_X509_REVOKED_get_ext endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 144h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_get_ext_by_NID
_X509_REVOKED_get_ext_by_NID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		push	dword ptr [eax+8]
		call	_X509v3_get_ext_by_NID
		add	esp, 0Ch
		retn
_X509_REVOKED_get_ext_by_NID endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 15Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_get_ext_by_OBJ
_X509_REVOKED_get_ext_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		push	dword ptr [eax+8]
		call	_X509v3_get_ext_by_OBJ
		add	esp, 0Ch
		retn
_X509_REVOKED_get_ext_by_OBJ endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 174h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_get_ext_by_critical
_X509_REVOKED_get_ext_by_critical proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		push	dword ptr [eax+8]
		call	_X509v3_get_ext_by_critical
		add	esp, 0Ch
		retn
_X509_REVOKED_get_ext_by_critical endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 18Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_get_ext_count
_X509_REVOKED_get_ext_count proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		push	dword ptr [eax+8]
		call	_X509v3_get_ext_count
		add	esp, 4
		retn
_X509_REVOKED_get_ext_count endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 19Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REVOKED_get_ext_d2i
_X509_REVOKED_get_ext_d2i proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	dword ptr [eax+8]
		call	_X509V3_get_d2i
		add	esp, 10h
		retn
_X509_REVOKED_get_ext_d2i endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1B8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_add1_ext_i2d
_X509_add1_ext_i2d proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		add	eax, 24h ; '$'
		mov	[esp+arg_0], eax
		jmp	_X509V3_add1_i2d
_X509_add1_ext_i2d endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1CCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_add_ext
_X509_add_ext	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	[esp+arg_8]
		push	[esp+4+arg_4]
		mov	eax, [eax]
		add	eax, 24h ; '$'
		push	eax
		call	_X509v3_add_ext
		add	esp, 0Ch
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_X509_add_ext	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_delete_ext
_X509_delete_ext proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+24h]
		call	_X509v3_delete_ext
		add	esp, 8
		retn
_X509_delete_ext endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 208h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_get_ext
_X509_get_ext	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		push	[esp+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+24h]
		call	_X509v3_get_ext
		add	esp, 8
		retn
_X509_get_ext	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 220h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_get_ext_by_NID
_X509_get_ext_by_NID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	[esp+arg_8]
		push	[esp+4+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+24h]
		call	_X509v3_get_ext_by_NID
		add	esp, 0Ch
		retn
_X509_get_ext_by_NID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 23Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_get_ext_by_OBJ
_X509_get_ext_by_OBJ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	[esp+arg_8]
		push	[esp+4+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+24h]
		call	_X509v3_get_ext_by_OBJ
		add	esp, 0Ch
		retn
_X509_get_ext_by_OBJ endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 258h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_get_ext_by_critical
_X509_get_ext_by_critical proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	[esp+arg_8]
		push	[esp+4+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+24h]
		call	_X509v3_get_ext_by_critical
		add	esp, 0Ch
		retn
_X509_get_ext_by_critical endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 274h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_get_ext_count
_X509_get_ext_count proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		push	dword ptr [eax+24h]
		call	_X509v3_get_ext_count
		add	esp, 4
		retn
_X509_get_ext_count endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 288h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_get_ext_d2i
_X509_get_ext_d2i proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+24h]
		call	_X509V3_get_d2i
		add	esp, 10h
		retn
_X509_get_ext_d2i endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _X509v3_get_ext_count:near ; CODE	XREF: _X509_CRL_get_ext_count+9p
					; _X509_REVOKED_get_ext_count+7p ...
		extrn _X509v3_get_ext_by_NID:near ; CODE XREF: _X509_CRL_get_ext_by_NID+11p
					; _X509_REVOKED_get_ext_by_NID+Fp ...
		extrn _X509v3_get_ext_by_OBJ:near ; CODE XREF: _X509_CRL_get_ext_by_OBJ+11p
					; _X509_REVOKED_get_ext_by_OBJ+Fp ...
		extrn _X509v3_get_ext_by_critical:near
					; CODE XREF: _X509_CRL_get_ext_by_critical+11p
					; _X509_REVOKED_get_ext_by_critical+Fp	...
		extrn _X509v3_get_ext:near ; CODE XREF:	_X509_CRL_get_ext+Dp
					; _X509_REVOKED_get_ext+Bp ...
		extrn _X509v3_delete_ext:near ;	CODE XREF: _X509_CRL_delete_ext+Dp
					; _X509_REVOKED_delete_ext+Bp ...
		extrn _X509v3_add_ext:near ; CODE XREF:	_X509_CRL_add_ext+12p
					; _X509_REVOKED_add_ext+10p ...
		extrn _X509V3_get_d2i:near ; CODE XREF:	_X509_CRL_get_ext_d2i+15p
					; _X509_REVOKED_get_ext_d2i+13p ...
		extrn _X509V3_add1_i2d:near ; CODE XREF: _X509_CRL_add1_ext_i2d+Dj
					; _X509_REVOKED_add1_ext_i2d+5j ...


		end

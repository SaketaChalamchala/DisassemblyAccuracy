;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	DA631D30B8E4D1A60F218E4C67537BD8
; Input	CRC32 :	F8F2309C

; File Name   :	C:\compspace\Diff\openssl\obj\a_utf8.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _UTF8_getc
_UTF8_getc	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	edx, [esp+arg_4]
		test	edx, edx
		jg	short loc_B
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_B:					; CODE XREF: _UTF8_getc+6j
		push	ebx
		push	esi
		mov	esi, [esp+8+arg_0]
		push	edi
		mov	cl, [esi]
		test	cl, cl
		js	short loc_2D
		movzx	edx, cl
		mov	eax, 1
		mov	ecx, [esp+0Ch+arg_8]
		and	edx, 7Fh
		pop	edi
		pop	esi
		pop	ebx
		mov	[ecx], edx
		retn
; ---------------------------------------------------------------------------

loc_2D:					; CODE XREF: _UTF8_getc+16j
		mov	al, cl
		and	al, 0E0h
		cmp	al, 0C0h ; 'À'
		jnz	short loc_79
		cmp	edx, 2
		jl	loc_205
		mov	bl, [esi+1]
		mov	al, bl
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		movzx	edx, cl
		and	edx, 1Fh
		movzx	eax, bl
		shl	edx, 6
		and	eax, 3Fh
		or	edx, eax
		cmp	edx, 80h ; '€'
		jb	loc_287
		mov	ecx, [esp+0Ch+arg_8]
		mov	eax, 2
		pop	edi
		pop	esi
		pop	ebx
		mov	[ecx], edx
		retn
; ---------------------------------------------------------------------------

loc_79:					; CODE XREF: _UTF8_getc+33j
		mov	al, cl
		and	al, 0F0h
		cmp	al, 0E0h ; 'à'
		jnz	short loc_DD
		cmp	edx, 3
		jl	loc_205
		mov	al, [esi+1]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		mov	al, [esi+2]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		movzx	eax, byte ptr [esi+2]
		movzx	edx, cl
		and	eax, 3Fh
		movzx	ecx, byte ptr [esi+1]
		and	edx, 0Fh
		and	ecx, 3Fh
		shl	edx, 0Ch
		shl	ecx, 6
		or	ecx, eax
		or	edx, ecx
		cmp	edx, 800h
		jb	loc_287
		mov	ecx, [esp+0Ch+arg_8]
		mov	eax, 3
		pop	edi
		pop	esi
		pop	ebx
		mov	[ecx], edx
		retn
; ---------------------------------------------------------------------------

loc_DD:					; CODE XREF: _UTF8_getc+7Fj
		mov	al, cl
		and	al, 0F8h
		cmp	al, 0F0h ; 'ð'
		jnz	short loc_15A
		cmp	edx, 4
		jl	loc_205
		mov	al, [esi+1]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		mov	al, [esi+2]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		mov	al, [esi+3]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		movzx	eax, byte ptr [esi+1]
		movzx	edx, cl
		and	eax, 3Fh
		movzx	ecx, byte ptr [esi+2]
		and	edx, 7
		shl	eax, 0Ch
		and	ecx, 3Fh
		shl	edx, 12h
		or	edx, eax
		shl	ecx, 6
		movzx	eax, byte ptr [esi+3]
		and	eax, 3Fh
		or	ecx, eax
		or	edx, ecx
		cmp	edx, 10000h
		jb	loc_287
		mov	ecx, [esp+0Ch+arg_8]
		mov	eax, 4
		pop	edi
		pop	esi
		pop	ebx
		mov	[ecx], edx
		retn
; ---------------------------------------------------------------------------

loc_15A:				; CODE XREF: _UTF8_getc+E3j
		mov	al, cl
		and	al, 0FCh
		cmp	al, 0F8h ; 'ø'
		jnz	loc_1F4
		cmp	edx, 5
		jl	loc_205
		mov	al, [esi+1]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		mov	al, [esi+2]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		mov	al, [esi+3]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		mov	al, [esi+4]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		movzx	eax, byte ptr [esi+1]
		movzx	edx, cl
		and	eax, 3Fh
		movzx	ecx, byte ptr [esi+3]
		and	edx, 3
		shl	eax, 12h
		and	ecx, 3Fh
		shl	edx, 18h
		or	edx, eax
		shl	ecx, 6
		movzx	eax, byte ptr [esi+2]
		and	eax, 3Fh
		shl	eax, 0Ch
		or	edx, eax
		movzx	eax, byte ptr [esi+4]
		and	eax, 3Fh
		or	ecx, eax
		or	edx, ecx
		cmp	edx, 200000h
		jb	loc_287
		mov	ecx, [esp+0Ch+arg_8]
		mov	eax, 5
		pop	edi
		pop	esi
		pop	ebx
		mov	[ecx], edx
		retn
; ---------------------------------------------------------------------------

loc_1F4:				; CODE XREF: _UTF8_getc+160j
		mov	al, cl
		and	al, 0FEh
		cmp	al, 0FCh ; 'ü'
		jnz	loc_2A8
		cmp	edx, 6
		jge	short loc_20C

loc_205:				; CODE XREF: _UTF8_getc+38j
					; _UTF8_getc+84j ...
		pop	edi
		pop	esi
		or	eax, 0FFFFFFFFh
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_20C:				; CODE XREF: _UTF8_getc+203j
		mov	al, [esi+1]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	loc_29F
		mov	al, [esi+2]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	short loc_29F
		mov	al, [esi+3]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	short loc_29F
		mov	al, [esi+4]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	short loc_29F
		mov	al, [esi+5]
		and	al, 0C0h
		cmp	al, 80h	; '€'
		jnz	short loc_29F
		movzx	eax, byte ptr [esi+1]
		and	eax, 3Fh
		movzx	edx, cl
		movzx	ecx, byte ptr [esi+4]
		and	edx, 1
		shl	eax, 18h
		and	ecx, 3Fh
		shl	edx, 1Eh
		or	edx, eax
		shl	ecx, 6
		movzx	eax, byte ptr [esi+2]
		and	eax, 3Fh
		shl	eax, 12h
		or	edx, eax
		movzx	eax, byte ptr [esi+3]
		and	eax, 3Fh
		shl	eax, 0Ch
		or	edx, eax
		movzx	eax, byte ptr [esi+5]
		and	eax, 3Fh
		or	ecx, eax
		or	edx, ecx
		cmp	edx, 4000000h
		jnb	short loc_290

loc_287:				; CODE XREF: _UTF8_getc+64j
					; _UTF8_getc+C8j ...
		pop	edi
		pop	esi
		mov	eax, 0FFFFFFFCh
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_290:				; CODE XREF: _UTF8_getc+285j
		mov	ecx, [esp+0Ch+arg_8]
		mov	eax, 6
		pop	edi
		pop	esi
		pop	ebx
		mov	[ecx], edx
		retn
; ---------------------------------------------------------------------------

loc_29F:				; CODE XREF: _UTF8_getc+47j
					; _UTF8_getc+91j ...
		pop	edi
		pop	esi
		mov	eax, 0FFFFFFFDh
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_2A8:				; CODE XREF: _UTF8_getc+1FAj
		pop	edi
		pop	esi
		mov	eax, 0FFFFFFFEh
		pop	ebx
		retn
_UTF8_getc	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _UTF8_putc
_UTF8_putc	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	ecx, [esp+arg_0]
		test	ecx, ecx
		jnz	short loc_2D7
		lea	eax, [ecx+6]

loc_2BF:				; CODE XREF: _UTF8_putc+29j
		mov	edx, [esp+arg_8]
		cmp	edx, 80h ; '€'
		jnb	short loc_2E3
		test	ecx, ecx
		jz	short loc_2D1
		mov	[ecx], dl

loc_2D1:				; CODE XREF: _UTF8_putc+19j
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------

loc_2D7:				; CODE XREF: _UTF8_putc+6j
		mov	eax, [esp+arg_4]
		test	eax, eax
		jg	short loc_2BF

loc_2DF:				; CODE XREF: _UTF8_putc+3Aj
					; _UTF8_putc+65j ...
		or	eax, 0FFFFFFFFh
		retn
; ---------------------------------------------------------------------------

loc_2E3:				; CODE XREF: _UTF8_putc+15j
		cmp	edx, 800h
		jnb	short loc_30E
		cmp	eax, 2
		jl	short loc_2DF
		test	ecx, ecx
		jz	short loc_308
		mov	eax, edx
		and	dl, 3Fh
		shr	eax, 6
		and	al, 1Fh
		or	al, 0C0h
		or	dl, 80h
		mov	[ecx], al
		mov	[ecx+1], dl

loc_308:				; CODE XREF: _UTF8_putc+3Ej
		mov	eax, 2
		retn
; ---------------------------------------------------------------------------

loc_30E:				; CODE XREF: _UTF8_putc+35j
		cmp	edx, 10000h
		jnb	short loc_345
		cmp	eax, 3
		jl	short loc_2DF
		test	ecx, ecx
		jz	short loc_33F
		mov	eax, edx
		shr	eax, 0Ch
		and	al, 0Fh
		or	al, 0E0h
		mov	[ecx], al
		mov	eax, edx
		shr	eax, 6
		and	dl, 3Fh
		and	al, 3Fh
		or	al, 80h
		or	dl, 80h
		mov	[ecx+1], al
		mov	[ecx+2], dl

loc_33F:				; CODE XREF: _UTF8_putc+69j
		mov	eax, 3
		retn
; ---------------------------------------------------------------------------

loc_345:				; CODE XREF: _UTF8_putc+60j
		cmp	edx, 200000h
		jnb	short loc_388
		cmp	eax, 4
		jl	short loc_2DF
		test	ecx, ecx
		jz	short loc_382
		mov	eax, edx
		shr	eax, 12h
		and	al, 7
		or	al, 0F0h
		mov	[ecx], al
		mov	eax, edx
		shr	eax, 0Ch
		and	al, 3Fh
		or	al, 80h
		mov	[ecx+1], al
		mov	eax, edx
		shr	eax, 6
		and	dl, 3Fh
		and	al, 3Fh
		or	al, 80h
		or	dl, 80h
		mov	[ecx+2], al
		mov	[ecx+3], dl

loc_382:				; CODE XREF: _UTF8_putc+A0j
		mov	eax, 4
		retn
; ---------------------------------------------------------------------------

loc_388:				; CODE XREF: _UTF8_putc+97j
		cmp	edx, 4000000h
		jnb	short loc_3DB
		cmp	eax, 5
		jl	loc_2DF
		test	ecx, ecx
		jz	short loc_3D5
		mov	eax, edx
		shr	eax, 18h
		and	al, 3
		or	al, 0F8h
		mov	[ecx], al
		mov	eax, edx
		shr	eax, 12h
		and	al, 3Fh
		or	al, 80h
		mov	[ecx+1], al
		mov	eax, edx
		shr	eax, 0Ch
		and	al, 3Fh
		or	al, 80h
		mov	[ecx+2], al
		mov	eax, edx
		shr	eax, 6
		and	dl, 3Fh
		and	al, 3Fh
		or	al, 80h
		or	dl, 80h
		mov	[ecx+3], al
		mov	[ecx+4], dl

loc_3D5:				; CODE XREF: _UTF8_putc+E7j
		mov	eax, 5
		retn
; ---------------------------------------------------------------------------

loc_3DB:				; CODE XREF: _UTF8_putc+DAj
		cmp	eax, 6
		jl	loc_2DF
		test	ecx, ecx
		jz	short loc_42C
		mov	eax, edx
		shr	eax, 1Eh
		and	al, 1
		or	al, 0FCh
		mov	[ecx], al
		mov	eax, edx
		shr	eax, 18h
		and	al, 3Fh
		or	al, 80h
		mov	[ecx+1], al
		mov	eax, edx
		shr	eax, 12h
		and	al, 3Fh
		or	al, 80h
		mov	[ecx+2], al
		mov	eax, edx
		shr	eax, 0Ch
		and	al, 3Fh
		or	al, 80h
		mov	[ecx+3], al
		mov	eax, edx
		shr	eax, 6
		and	dl, 3Fh
		and	al, 3Fh
		or	al, 80h
		or	dl, 80h
		mov	[ecx+4], al
		mov	[ecx+5], dl

loc_42C:				; CODE XREF: _UTF8_putc+132j
		mov	eax, 6
		retn
_UTF8_putc	endp

_text$mn	ends


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	81D70D7158B6C3501F1326847B2EB99D
; Input	CRC32 :	6BF26E25

; File Name   :	C:\compspace\Diff\openssl\obj\ec.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ec_main
_ec_main	proc near

var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
ErrMsg		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 50h ; 'P'
		call	__chkstk
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+50h+var_8], 0
		mov	[esp+50h+var_14], 0
		mov	[esp+50h+var_10], 0
		mov	[esp+50h+var_4C], 0
		mov	[esp+50h+var_38], 0
		mov	[esp+50h+var_3C], 0
		mov	[esp+50h+var_28], 0
		mov	[esp+50h+var_2C], 0
		mov	[esp+50h+var_34], 0
		mov	[esp+50h+var_30], 0
		mov	[esp+50h+var_1C], 0
		mov	[esp+50h+var_18], 0
		push	ebx
		mov	ebx, 1
		mov	[esp+54h+var_44], ebx
		mov	[esp+54h+var_40], ebx
		push	ebp
		lea	ebp, [ebx+3]
		test	eax, eax
		jnz	short loc_BC
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_BC
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_BC:					; CODE XREF: _ec_main+83j _ec_main+9Aj
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_B59
		mov	ebx, [esp+58h+arg_4]
		xor	eax, eax
		push	esi
		push	edi
		mov	edi, [esp+60h+arg_0]
		xor	esi, esi
		mov	[esp+60h+var_48], eax
		dec	edi
		mov	eax, [ebx]
		add	ebx, ebp
		mov	[esp+60h+var_50], esi
		mov	[esp+60h+ErrMsg], esi
		mov	[esp+60h+var_20], 3
		mov	[esp+60h+var_C], 3
		mov	[esp+60h+var_4], eax
		cmp	edi, 1
		jl	loc_678
		nop	dword ptr [eax+eax+00h]

loc_110:				; CODE XREF: _ec_main+66Ej
		mov	esi, [ebx]
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_120:				; CODE XREF: _ec_main+13Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_140
		test	dl, dl
		jz	short loc_13C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_140
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_120

loc_13C:				; CODE XREF: _ec_main+128j
		xor	eax, eax
		jmp	short loc_145
; ---------------------------------------------------------------------------

loc_140:				; CODE XREF: _ec_main+124j
					; _ec_main+130j
		sbb	eax, eax
		or	eax, 1

loc_145:				; CODE XREF: _ec_main+13Ej
		test	eax, eax
		jnz	short loc_16A
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+60h+var_20], eax
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_16A:				; CODE XREF: _ec_main+147j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, esi

loc_171:				; CODE XREF: _ec_main+18Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_191
		test	dl, dl
		jz	short loc_18D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_191
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_171

loc_18D:				; CODE XREF: _ec_main+179j
		xor	eax, eax
		jmp	short loc_196
; ---------------------------------------------------------------------------

loc_191:				; CODE XREF: _ec_main+175j
					; _ec_main+181j
		sbb	eax, eax
		or	eax, 1

loc_196:				; CODE XREF: _ec_main+18Fj
		test	eax, eax
		jnz	short loc_1BB
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+60h+var_C], eax
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_1BB:				; CODE XREF: _ec_main+198j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, esi

loc_1C2:				; CODE XREF: _ec_main+1DCj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1E2
		test	dl, dl
		jz	short loc_1DE
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1E2
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1C2

loc_1DE:				; CODE XREF: _ec_main+1CAj
		xor	eax, eax
		jmp	short loc_1E7
; ---------------------------------------------------------------------------

loc_1E2:				; CODE XREF: _ec_main+1C6j
					; _ec_main+1D2j
		sbb	eax, eax
		or	eax, 1

loc_1E7:				; CODE XREF: _ec_main+1E0j
		test	eax, eax
		jnz	short loc_204
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+60h+ErrMsg], edx
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_204:				; CODE XREF: _ec_main+1E9j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_210:				; CODE XREF: _ec_main+22Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_230
		test	dl, dl
		jz	short loc_22C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_230
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_210

loc_22C:				; CODE XREF: _ec_main+218j
		xor	eax, eax
		jmp	short loc_235
; ---------------------------------------------------------------------------

loc_230:				; CODE XREF: _ec_main+214j
					; _ec_main+220j
		sbb	eax, eax
		or	eax, 1

loc_235:				; CODE XREF: _ec_main+22Ej
		test	eax, eax
		jnz	short loc_252
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+60h+var_48], edx
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_252:				; CODE XREF: _ec_main+237j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_260:				; CODE XREF: _ec_main+27Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_280
		test	dl, dl
		jz	short loc_27C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_280
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_260

loc_27C:				; CODE XREF: _ec_main+268j
		xor	eax, eax
		jmp	short loc_285
; ---------------------------------------------------------------------------

loc_280:				; CODE XREF: _ec_main+264j
					; _ec_main+270j
		sbb	eax, eax
		or	eax, 1

loc_285:				; CODE XREF: _ec_main+27Ej
		test	eax, eax
		jnz	short loc_2A2
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+60h+var_28], eax
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_2A2:				; CODE XREF: _ec_main+287j
		mov	ecx, offset ??_C@_08KCDBEMAI@?9passout?$AA@ ; "-passout"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_2B0:				; CODE XREF: _ec_main+2CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2D0
		test	dl, dl
		jz	short loc_2CC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2D0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2B0

loc_2CC:				; CODE XREF: _ec_main+2B8j
		xor	eax, eax
		jmp	short loc_2D5
; ---------------------------------------------------------------------------

loc_2D0:				; CODE XREF: _ec_main+2B4j
					; _ec_main+2C0j
		sbb	eax, eax
		or	eax, 1

loc_2D5:				; CODE XREF: _ec_main+2CEj
		test	eax, eax
		jnz	short loc_2F2
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+60h+var_2C], eax
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_2F2:				; CODE XREF: _ec_main+2D7j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_300:				; CODE XREF: _ec_main+31Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_320
		test	dl, dl
		jz	short loc_31C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_320
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_300

loc_31C:				; CODE XREF: _ec_main+308j
		xor	eax, eax
		jmp	short loc_325
; ---------------------------------------------------------------------------

loc_320:				; CODE XREF: _ec_main+304j
					; _ec_main+310j
		sbb	eax, eax
		or	eax, 1

loc_325:				; CODE XREF: _ec_main+31Ej
		test	eax, eax
		jnz	short loc_342
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+60h+var_50], edx
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_342:				; CODE XREF: _ec_main+327j
		mov	ecx, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_350:				; CODE XREF: _ec_main+36Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_370
		test	dl, dl
		jz	short loc_36C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_370
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_350

loc_36C:				; CODE XREF: _ec_main+358j
		xor	eax, eax
		jmp	short loc_375
; ---------------------------------------------------------------------------

loc_370:				; CODE XREF: _ec_main+354j
					; _ec_main+360j
		sbb	eax, eax
		or	eax, 1

loc_375:				; CODE XREF: _ec_main+36Ej
		test	eax, eax
		jnz	short loc_386
		mov	[esp+60h+var_10], 1
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_386:				; CODE XREF: _ec_main+377j
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, esi
		nop	dword ptr [eax]

loc_390:				; CODE XREF: _ec_main+3AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3B0
		test	dl, dl
		jz	short loc_3AC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3B0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_390

loc_3AC:				; CODE XREF: _ec_main+398j
		xor	eax, eax
		jmp	short loc_3B5
; ---------------------------------------------------------------------------

loc_3B0:				; CODE XREF: _ec_main+394j
					; _ec_main+3A0j
		sbb	eax, eax
		or	eax, 1

loc_3B5:				; CODE XREF: _ec_main+3AEj
		test	eax, eax
		jnz	short loc_3C6
		mov	[esp+60h+var_14], 1
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_3C6:				; CODE XREF: _ec_main+3B7j
		mov	ecx, offset ??_C@_0L@CFGKFMBD@?9conv_form?$AA@ ; "-conv_form"
		mov	eax, esi
		nop	dword ptr [eax]

loc_3D0:				; CODE XREF: _ec_main+3EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3F0
		test	dl, dl
		jz	short loc_3EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3D0

loc_3EC:				; CODE XREF: _ec_main+3D8j
		xor	eax, eax
		jmp	short loc_3F5
; ---------------------------------------------------------------------------

loc_3F0:				; CODE XREF: _ec_main+3D4j
					; _ec_main+3E0j
		sbb	eax, eax
		or	eax, 1

loc_3F5:				; CODE XREF: _ec_main+3EEj
		test	eax, eax
		jnz	loc_4C5
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		mov	esi, [ebx+4]
		add	ebx, 4
		mov	[esp+60h+var_1C], 1
		mov	ecx, offset ??_C@_0L@NHGFHLFK@compressed?$AA@ ;	"compressed"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_420:				; CODE XREF: _ec_main+43Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_440
		test	dl, dl
		jz	short loc_43C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_440
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_420

loc_43C:				; CODE XREF: _ec_main+428j
		xor	eax, eax
		jmp	short loc_445
; ---------------------------------------------------------------------------

loc_440:				; CODE XREF: _ec_main+424j
					; _ec_main+430j
		sbb	eax, eax
		or	eax, 1

loc_445:				; CODE XREF: _ec_main+43Ej
		test	eax, eax
		jnz	short loc_451
		lea	ebp, [eax+2]
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_451:				; CODE XREF: _ec_main+447j
		mov	ecx, offset ??_C@_0N@NFCOPMLF@uncompressed?$AA@	; "uncompressed"
		mov	eax, esi

loc_458:				; CODE XREF: _ec_main+472j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_478
		test	dl, dl
		jz	short loc_474
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_478
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_458

loc_474:				; CODE XREF: _ec_main+460j
		xor	eax, eax
		jmp	short loc_47D
; ---------------------------------------------------------------------------

loc_478:				; CODE XREF: _ec_main+45Cj
					; _ec_main+468j
		sbb	eax, eax
		or	eax, 1

loc_47D:				; CODE XREF: _ec_main+476j
		test	eax, eax
		jnz	short loc_489
		lea	ebp, [eax+4]
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_489:				; CODE XREF: _ec_main+47Fj
		mov	eax, offset ??_C@_06JCLEGMDM@hybrid?$AA@ ; "hybrid"
		xchg	ax, ax

loc_490:				; CODE XREF: _ec_main+4AAj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_4B0
		test	cl, cl
		jz	short loc_4AC
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_4B0
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_490

loc_4AC:				; CODE XREF: _ec_main+498j
		xor	eax, eax
		jmp	short loc_4B5
; ---------------------------------------------------------------------------

loc_4B0:				; CODE XREF: _ec_main+494j
					; _ec_main+4A0j
		sbb	eax, eax
		or	eax, 1

loc_4B5:				; CODE XREF: _ec_main+4AEj
		test	eax, eax
		jnz	$bad$201
		lea	ebp, [eax+6]
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_4C5:				; CODE XREF: _ec_main+3F7j
		mov	ecx, offset ??_C@_0L@KJNNNAOB@?9param_enc?$AA@ ; "-param_enc"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_4D0:				; CODE XREF: _ec_main+4EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4F0
		test	dl, dl
		jz	short loc_4EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4D0

loc_4EC:				; CODE XREF: _ec_main+4D8j
		xor	eax, eax
		jmp	short loc_4F5
; ---------------------------------------------------------------------------

loc_4F0:				; CODE XREF: _ec_main+4D4j
					; _ec_main+4E0j
		sbb	eax, eax
		or	eax, 1

loc_4F5:				; CODE XREF: _ec_main+4EEj
		test	eax, eax
		jnz	loc_596
		dec	edi
		cmp	edi, 1
		jl	$bad$201
		mov	esi, [ebx+4]
		add	ebx, 4
		mov	[esp+60h+var_18], 1
		mov	ecx, offset ??_C@_0M@FBFAECBG@named_curve?$AA@ ; "named_curve"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_520:				; CODE XREF: _ec_main+53Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_540
		test	dl, dl
		jz	short loc_53C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_540
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_520

loc_53C:				; CODE XREF: _ec_main+528j
		xor	eax, eax
		jmp	short loc_545
; ---------------------------------------------------------------------------

loc_540:				; CODE XREF: _ec_main+524j
					; _ec_main+530j
		sbb	eax, eax
		or	eax, 1

loc_545:				; CODE XREF: _ec_main+53Ej
		test	eax, eax
		jnz	short loc_556
		mov	[esp+60h+var_40], 1
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_556:				; CODE XREF: _ec_main+547j
		mov	eax, offset ??_C@_08FCANLLBJ@explicit?$AA@ ; "explicit"
		nop	dword ptr [eax+eax+00h]

loc_560:				; CODE XREF: _ec_main+57Aj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_580
		test	cl, cl
		jz	short loc_57C
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_580
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_560

loc_57C:				; CODE XREF: _ec_main+568j
		xor	eax, eax
		jmp	short loc_585
; ---------------------------------------------------------------------------

loc_580:				; CODE XREF: _ec_main+564j
					; _ec_main+570j
		sbb	eax, eax
		or	eax, 1

loc_585:				; CODE XREF: _ec_main+57Ej
		test	eax, eax
		jnz	$bad$201
		mov	[esp+60h+var_40], eax
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_596:				; CODE XREF: _ec_main+4F7j
		mov	ecx, offset ??_C@_0L@NDJAPIIC@?9param_out?$AA@ ; "-param_out"
		mov	eax, esi
		nop	dword ptr [eax]

loc_5A0:				; CODE XREF: _ec_main+5BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5C0
		test	dl, dl
		jz	short loc_5BC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5C0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5A0

loc_5BC:				; CODE XREF: _ec_main+5A8j
		xor	eax, eax
		jmp	short loc_5C5
; ---------------------------------------------------------------------------

loc_5C0:				; CODE XREF: _ec_main+5A4j
					; _ec_main+5B0j
		sbb	eax, eax
		or	eax, 1

loc_5C5:				; CODE XREF: _ec_main+5BEj
		test	eax, eax
		jnz	short loc_5D6
		mov	[esp+60h+var_3C], 1
		jmp	loc_667
; ---------------------------------------------------------------------------

loc_5D6:				; CODE XREF: _ec_main+5C7j
		mov	ecx, offset ??_C@_06NLLOJDKN@?9pubin?$AA@ ; "-pubin"
		mov	eax, esi
		nop	dword ptr [eax]

loc_5E0:				; CODE XREF: _ec_main+5FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_600
		test	dl, dl
		jz	short loc_5FC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_600
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5E0

loc_5FC:				; CODE XREF: _ec_main+5E8j
		xor	eax, eax
		jmp	short loc_605
; ---------------------------------------------------------------------------

loc_600:				; CODE XREF: _ec_main+5E4j
					; _ec_main+5F0j
		sbb	eax, eax
		or	eax, 1

loc_605:				; CODE XREF: _ec_main+5FEj
		test	eax, eax
		jnz	short loc_613
		mov	[esp+60h+var_4C], 1
		jmp	short loc_667
; ---------------------------------------------------------------------------

loc_613:				; CODE XREF: _ec_main+607j
		mov	ecx, offset ??_C@_07NGPHMOHJ@?9pubout?$AA@ ; "-pubout"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_620:				; CODE XREF: _ec_main+63Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_640
		test	dl, dl
		jz	short loc_63C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_640
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_620

loc_63C:				; CODE XREF: _ec_main+628j
		xor	eax, eax
		jmp	short loc_645
; ---------------------------------------------------------------------------

loc_640:				; CODE XREF: _ec_main+624j
					; _ec_main+630j
		sbb	eax, eax
		or	eax, 1

loc_645:				; CODE XREF: _ec_main+63Ej
		test	eax, eax
		jnz	short loc_653
		mov	[esp+60h+var_38], 1
		jmp	short loc_667
; ---------------------------------------------------------------------------

loc_653:				; CODE XREF: _ec_main+647j
		lea	eax, [esi+1]
		push	eax
		call	_EVP_get_cipherbyname
		add	esp, 4
		mov	[esp+60h+var_8], eax
		test	eax, eax
		jz	short loc_6D0

loc_667:				; CODE XREF: _ec_main+165j
					; _ec_main+1B6j ...
		dec	edi
		add	ebx, 4
		cmp	edi, 1
		jge	loc_110
		mov	esi, [esp+60h+var_50]

loc_678:				; CODE XREF: _ec_main+105j
		call	_ERR_load_crypto_strings
		push	0
		push	esi
		push	dword ptr ds:_bio_err
		call	_setup_engine
		lea	eax, [esp+6Ch+var_30]
		push	eax
		lea	eax, [esp+70h+var_34]
		push	eax
		push	[esp+74h+var_2C]
		push	[esp+78h+var_28]
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 20h
		test	eax, eax
		jnz	loc_84C
		push	offset ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; "Error getting passwords\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	ebx, 1
		jmp	loc_B57
; ---------------------------------------------------------------------------

loc_6D0:				; CODE XREF: _ec_main+665j
		push	dword ptr [ebx]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$bad$201:				; CODE XREF: _ec_main+14Dj
					; _ec_main+19Ej ...
		push	[esp+60h+var_4]
		push	offset ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; "%s [options] <infile >outfile\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@	; " -inform arg	    input format - DER or "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@ ;	" -outform arg	  output format	- DER or"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; " -in arg	     input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ ;	" -passin arg	  input	file pass phrase"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ ; " -out arg	      output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ ; " -passout arg	 output	file pass phras"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ ; " -engine e	      use engine e, possibly"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0HN@HKEGHBIH@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; "	-des		encrypt	PEM output, in"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CA@OKPIBIGP@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?6?$AA@ ; " -text	   print the key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ ; " -noout	       don't print key out\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DG@NMDIGDIM@?5?9param_out?5?5?5?5?5?5print?5the?5ellip@ ;	" -param_out	  print	the elliptic cur"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@HJOFOKLP@?5?9conv_form?5arg?5?5specifies?5the?5p@ ; " -conv_form arg  specifies the point co"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@OIAMJLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@ ; "		 possible values: compr"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@DPFNBDBB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; "					 uncom"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CL@HBPFJOKB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; "					  hybr"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EC@EIIIDNLN@?5?9param_enc?5arg?5?5specifies?5the?5w@ ; " -param_enc arg  specifies the way the "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CL@EAKLEMG@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5der@ ; "		   in the asn1 der encodi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DJ@NHMKIAKA@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@ ;	"		  possible values: named"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CM@EPMIBHPH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; "					 expli"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 28h
		mov	ebx, 1
		jmp	loc_B57
; ---------------------------------------------------------------------------

loc_84C:				; CODE XREF: _ec_main+6ADj
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	edi, eax
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 8
		mov	esi, eax
		test	edi, edi
		jz	loc_B1C
		test	esi, esi
		jz	loc_B1C
		mov	ebx, [esp+60h+ErrMsg]
		test	ebx, ebx
		jnz	short loc_8CB
		push	ebx
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	ebx
		push	6Ah ; 'j'
		push	edi
		call	_BIO_ctrl
		add	esp, 14h

loc_895:				; CODE XREF: _ec_main+8DBj
		push	offset ??_C@_0N@BJCFIJI@read?5EC?5key?6?$AA@ ; "read EC	key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	eax, [esp+68h+var_20]
		add	esp, 8
		cmp	eax, 1
		jnz	short loc_8F9
		cmp	[esp+60h+var_4C], 0
		push	0
		push	edi
		jz	short loc_8E9
		call	_d2i_EC_PUBKEY_bio
		mov	ebx, eax
		add	esp, 8
		mov	[esp+60h+var_50], ebx
		jmp	short loc_934
; ---------------------------------------------------------------------------

loc_8CB:				; CODE XREF: _ec_main+87Fj
		push	ebx
		push	3
		push	6Ch ; 'l'
		push	edi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_895
		push	ebx		; ErrMsg
		call	dword ptr ds:__imp__perror
		jmp	loc_B27
; ---------------------------------------------------------------------------

loc_8E9:				; CODE XREF: _ec_main+8B9j
		call	_d2i_ECPrivateKey_bio
		mov	ebx, eax
		add	esp, 8
		mov	[esp+60h+var_50], ebx
		jmp	short loc_934
; ---------------------------------------------------------------------------

loc_8F9:				; CODE XREF: _ec_main+8AFj
		cmp	eax, 3
		jnz	loc_B07
		cmp	[esp+60h+var_4C], 0
		jz	short loc_91D
		push	0
		push	0
		push	0
		push	edi
		call	_PEM_read_bio_EC_PUBKEY
		mov	ebx, eax
		mov	[esp+70h+var_50], ebx
		jmp	short loc_931
; ---------------------------------------------------------------------------

loc_91D:				; CODE XREF: _ec_main+907j
		push	[esp+60h+var_34]
		push	0
		push	0
		push	edi
		call	_PEM_read_bio_ECPrivateKey
		mov	ebx, eax
		mov	[esp+70h+var_50], eax

loc_931:				; CODE XREF: _ec_main+91Bj
		add	esp, 10h

loc_934:				; CODE XREF: _ec_main+8C9j
					; _ec_main+8F7j
		test	ebx, ebx
		jnz	short loc_95B
		push	offset ??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@ ; "unable to load Key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	$end$202
; ---------------------------------------------------------------------------

loc_95B:				; CODE XREF: _ec_main+936j
		mov	eax, [esp+60h+var_48]
		test	eax, eax
		jnz	short loc_99B
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	0
		push	6Ah ; 'j'
		push	esi
		call	_BIO_ctrl
		add	esp, 14h

loc_979:				; CODE XREF: _ec_main+9ABj
		push	ebx
		call	_EC_KEY_get0_group
		add	esp, 4
		mov	ebx, eax
		cmp	[esp+60h+var_1C], 0
		jz	short loc_9C0
		push	ebp
		mov	ebp, [esp+64h+var_50]
		push	ebp
		call	_EC_KEY_set_conv_form
		add	esp, 8
		jmp	short loc_9C4
; ---------------------------------------------------------------------------

loc_99B:				; CODE XREF: _ec_main+961j
		push	eax
		push	5
		push	6Ch ; 'l'
		push	esi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_979
		mov	eax, [esp+60h+var_48]
		push	eax		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		jmp	$end$202
; ---------------------------------------------------------------------------

loc_9C0:				; CODE XREF: _ec_main+989j
		mov	ebp, [esp+60h+var_50]

loc_9C4:				; CODE XREF: _ec_main+999j
		cmp	[esp+60h+var_18], 0
		jz	short loc_9D8
		push	[esp+60h+var_40]
		push	ebp
		call	_EC_KEY_set_asn1_flag
		add	esp, 8

loc_9D8:				; CODE XREF: _ec_main+9C9j
		cmp	[esp+60h+var_14], 0
		jz	short loc_A11
		push	0
		push	ebp
		push	esi
		call	_EC_KEY_print
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_A11
		mov	eax, [esp+60h+var_48]
		push	eax		; ErrMsg
		call	dword ptr ds:__imp__perror
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	ebx, [esp+68h+var_50]
		add	esp, 8
		jmp	$end$202
; ---------------------------------------------------------------------------

loc_A11:				; CODE XREF: _ec_main+9DDj
					; _ec_main+9EDj
		cmp	[esp+60h+var_10], 0
		jz	short loc_A27

loc_A18:				; CODE XREF: _ec_main+AC4j
		mov	ebx, [esp+60h+var_50]
		xor	eax, eax
		mov	[esp+60h+var_44], eax
		jmp	$end$202
; ---------------------------------------------------------------------------

loc_A27:				; CODE XREF: _ec_main+A16j
		push	offset ??_C@_0BA@JBLDNIOO@writing?5EC?5key?6?$AA@ ; "writing EC	key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	eax, [esp+68h+var_C]
		add	esp, 8
		cmp	eax, 1
		jnz	short loc_A7B
		cmp	[esp+60h+var_3C], 0
		jz	short loc_A5B
		push	ebx
		push	esi
		push	offset _i2d_ECPKParameters
		call	_ASN1_i2d_bio
		add	esp, 0Ch
		jmp	short loc_AC2
; ---------------------------------------------------------------------------

loc_A5B:				; CODE XREF: _ec_main+A48j
		cmp	[esp+60h+var_4C], 0
		jnz	short loc_A72
		cmp	[esp+60h+var_38], 0
		jnz	short loc_A72
		push	ebp
		push	esi
		call	_i2d_ECPrivateKey_bio
		jmp	short loc_ABF
; ---------------------------------------------------------------------------

loc_A72:				; CODE XREF: _ec_main+A60j
					; _ec_main+A67j
		push	ebp
		push	esi
		call	_i2d_EC_PUBKEY_bio
		jmp	short loc_ABF
; ---------------------------------------------------------------------------

loc_A7B:				; CODE XREF: _ec_main+A41j
		cmp	eax, 3
		jnz	short loc_AEE
		cmp	[esp+60h+var_3C], 0
		jz	short loc_A90
		push	ebx
		push	esi
		call	_PEM_write_bio_ECPKParameters
		jmp	short loc_ABF
; ---------------------------------------------------------------------------

loc_A90:				; CODE XREF: _ec_main+A85j
		cmp	[esp+60h+var_4C], 0
		jnz	short loc_AB8
		cmp	[esp+60h+var_38], 0
		jnz	short loc_AB8
		push	[esp+60h+var_30]
		push	0
		push	0
		push	0
		push	[esp+70h+var_8]
		push	ebp
		push	esi
		call	_PEM_write_bio_ECPrivateKey
		add	esp, 1Ch
		jmp	short loc_AC2
; ---------------------------------------------------------------------------

loc_AB8:				; CODE XREF: _ec_main+A95j
					; _ec_main+A9Cj
		push	ebp
		push	esi
		call	_PEM_write_bio_EC_PUBKEY

loc_ABF:				; CODE XREF: _ec_main+A70j
					; _ec_main+A79j ...
		add	esp, 8

loc_AC2:				; CODE XREF: _ec_main+A59j
					; _ec_main+AB6j
		test	eax, eax
		jnz	loc_A18
		push	offset ??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@ ; "unable to write private key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	ebx, [esp+6Ch+var_50]
		add	esp, 0Ch
		jmp	short $end$202
; ---------------------------------------------------------------------------

loc_AEE:				; CODE XREF: _ec_main+A7Ej
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebx, [esp+68h+var_50]
		add	esp, 8
		jmp	short $end$202
; ---------------------------------------------------------------------------

loc_B07:				; CODE XREF: _ec_main+8FCj
		push	offset ??_C@_0CE@PIOCFEJI@bad?5input?5format?5specified?5for?5k@ ; "bad	input format specified for key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short loc_B2A
; ---------------------------------------------------------------------------

loc_B1C:				; CODE XREF: _ec_main+86Bj
					; _ec_main+873j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors

loc_B27:				; CODE XREF: _ec_main+8E4j
		add	esp, 4

loc_B2A:				; CODE XREF: _ec_main+B1Aj
		xor	ebx, ebx

$end$202:				; CODE XREF: _ec_main+956j
					; _ec_main+9BBj ...
		test	edi, edi
		jz	short loc_B39
		push	edi
		call	_BIO_free
		add	esp, 4

loc_B39:				; CODE XREF: _ec_main+B2Ej
		test	esi, esi
		jz	short loc_B46
		push	esi
		call	_BIO_free_all
		add	esp, 4

loc_B46:				; CODE XREF: _ec_main+B3Bj
		test	ebx, ebx
		jz	short loc_B53
		push	ebx
		call	_EC_KEY_free
		add	esp, 4

loc_B53:				; CODE XREF: _ec_main+B48j
		mov	ebx, [esp+60h+var_44]

loc_B57:				; CODE XREF: _ec_main+6CBj
					; _ec_main+847j
		pop	edi
		pop	esi

loc_B59:				; CODE XREF: _ec_main+C9j
		mov	eax, [esp+58h+var_34]
		test	eax, eax
		jz	short loc_B6A
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_B6A:				; CODE XREF: _ec_main+B5Fj
		mov	ecx, [esp+58h+var_30]
		test	ecx, ecx
		jz	short loc_B7B
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_B7B:				; CODE XREF: _ec_main+B70j
		pop	ebp
		mov	eax, ebx
		pop	ebx
		add	esp, 50h
		retn
_ec_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B84h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _ec_main+112o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8Ch
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _ec_main:loc_16Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B98h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _ec_main:loc_1BBo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B9Ch
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _ec_main:loc_204o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA4h
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _ec_main:loc_252o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BACh
; COMDAT (pick any)
		public ??_C@_08KCDBEMAI@?9passout?$AA@
; `string'
??_C@_08KCDBEMAI@?9passout?$AA@	db '-passout',0 ; DATA XREF: _ec_main:loc_2A2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BB8h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _ec_main:loc_2F2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BC0h
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _ec_main:loc_342o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BC8h
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _ec_main:loc_386o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BD0h
; COMDAT (pick any)
		public ??_C@_0L@CFGKFMBD@?9conv_form?$AA@
; `string'
??_C@_0L@CFGKFMBD@?9conv_form?$AA@ db '-conv_form',0 ; DATA XREF: _ec_main:loc_3C6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BDCh
; COMDAT (pick any)
		public ??_C@_0L@NHGFHLFK@compressed?$AA@
; `string'
??_C@_0L@NHGFHLFK@compressed?$AA@ db 'compressed',0 ; DATA XREF: _ec_main+415o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BE8h
; COMDAT (pick any)
		public ??_C@_0N@NFCOPMLF@uncompressed?$AA@
; `string'
??_C@_0N@NFCOPMLF@uncompressed?$AA@ db 'uncompressed',0 ; DATA XREF: _ec_main:loc_451o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BF8h
; COMDAT (pick any)
		public ??_C@_06JCLEGMDM@hybrid?$AA@
; `string'
??_C@_06JCLEGMDM@hybrid?$AA@ db	'hybrid',0 ; DATA XREF: _ec_main:loc_489o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C00h
; COMDAT (pick any)
		public ??_C@_0L@KJNNNAOB@?9param_enc?$AA@
; `string'
??_C@_0L@KJNNNAOB@?9param_enc?$AA@ db '-param_enc',0 ; DATA XREF: _ec_main:loc_4C5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0Ch
; COMDAT (pick any)
		public ??_C@_0M@FBFAECBG@named_curve?$AA@
; `string'
??_C@_0M@FBFAECBG@named_curve?$AA@ db 'named_curve',0 ; DATA XREF: _ec_main+515o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C18h
; COMDAT (pick any)
		public ??_C@_08FCANLLBJ@explicit?$AA@
; `string'
??_C@_08FCANLLBJ@explicit?$AA@ db 'explicit',0 ; DATA XREF: _ec_main:loc_556o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C24h
; COMDAT (pick any)
		public ??_C@_0L@NDJAPIIC@?9param_out?$AA@
; `string'
??_C@_0L@NDJAPIIC@?9param_out?$AA@ db '-param_out',0 ; DATA XREF: _ec_main:loc_596o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C30h
; COMDAT (pick any)
		public ??_C@_06NLLOJDKN@?9pubin?$AA@
; `string'
??_C@_06NLLOJDKN@?9pubin?$AA@ db '-pubin',0 ; DATA XREF: _ec_main:loc_5D6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C38h
; COMDAT (pick any)
		public ??_C@_07NGPHMOHJ@?9pubout?$AA@
; `string'
??_C@_07NGPHMOHJ@?9pubout?$AA@ db '-pubout',0 ; DATA XREF: _ec_main:loc_613o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C40h
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _ec_main+6D2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C54h
; COMDAT (pick any)
		public ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
; `string'
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ db '%s [options] <infile >outfile',0Ah,0
					; DATA XREF: _ec_main+6E9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C74h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _ec_main+6F9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C88h
; COMDAT (pick any)
		public ??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@
; `string'
??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@ db ' -inform arg     input format - DER or PEM',0Ah,0
					; DATA XREF: _ec_main+709o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CB4h
; COMDAT (pick any)
		public ??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@
; `string'
??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@ db ' -outform arg    output format - DER or PEM',0Ah,0
					; DATA XREF: _ec_main+719o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CE4h
; COMDAT (pick any)
		public ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ db ' -in arg         input file',0Ah,0
					; DATA XREF: _ec_main+729o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D04h
; COMDAT (pick any)
		public ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
; `string'
??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ db ' -passin arg     input file pass phrase source',0Ah,0
					; DATA XREF: _ec_main+739o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D34h
; COMDAT (pick any)
		public ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ db ' -out arg        output file',0Ah,0
					; DATA XREF: _ec_main+749o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D54h
; COMDAT (pick any)
		public ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
; `string'
??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ db ' -passout arg    output file pass phrase source',0Ah,0
					; DATA XREF: _ec_main+759o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D88h
; COMDAT (pick any)
		public ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
; `string'
??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ db ' -engine e       use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _ec_main+76Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0DC4h
; COMDAT (pick any)
		public ??_C@_0HN@HKEGHBIH@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
; `string'
??_C@_0HN@HKEGHBIH@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ db	' -des            encrypt PEM output, instead of ',27h,'des',27h,' every'
					; DATA XREF: _ec_main+77Co
		db ' other ',0Ah
		db '                 cipher supported by OpenSSL can be used',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E44h
; COMDAT (pick any)
		public ??_C@_0CA@OKPIBIGP@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?6?$AA@
; `string'
??_C@_0CA@OKPIBIGP@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?6?$AA@	db ' -text           print the key',0Ah,0
					; DATA XREF: _ec_main+78Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E64h
; COMDAT (pick any)
		public ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@
; `string'
??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ db ' -noout          don',27h,'t print key out',0Ah,0
					; DATA XREF: _ec_main+79Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8Ch
; COMDAT (pick any)
		public ??_C@_0DG@NMDIGDIM@?5?9param_out?5?5?5?5?5?5print?5the?5ellip@
; `string'
??_C@_0DG@NMDIGDIM@?5?9param_out?5?5?5?5?5?5print?5the?5ellip@ db ' -param_out      print the elliptic curve parameters',0Ah,0
					; DATA XREF: _ec_main+7ACo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EC4h
; COMDAT (pick any)
		public ??_C@_0DH@HJOFOKLP@?5?9conv_form?5arg?5?5specifies?5the?5p@
; `string'
??_C@_0DH@HJOFOKLP@?5?9conv_form?5arg?5?5specifies?5the?5p@ db ' -conv_form arg  specifies the point conversion form ',0Ah,0
					; DATA XREF: _ec_main+7BCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EFCh
; COMDAT (pick any)
		public ??_C@_0CO@OIAMJLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@
; `string'
??_C@_0CO@OIAMJLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@ db '                 possible values: compressed',0Ah,0
					; DATA XREF: _ec_main+7CCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F2Ch
; COMDAT (pick any)
		public ??_C@_0DK@DPFNBDBB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
; `string'
??_C@_0DK@DPFNBDBB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ db	'                                  uncompressed (default)',0Ah,0
					; DATA XREF: _ec_main+7DCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F68h
; COMDAT (pick any)
		public ??_C@_0CL@HBPFJOKB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
; `string'
??_C@_0CL@HBPFJOKB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ db	'                                   hybrid',0Ah,0
					; DATA XREF: _ec_main+7EFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0F94h
; COMDAT (pick any)
		public ??_C@_0EC@EIIIDNLN@?5?9param_enc?5arg?5?5specifies?5the?5w@
; `string'
??_C@_0EC@EIIIDNLN@?5?9param_enc?5arg?5?5specifies?5the?5w@ db ' -param_enc arg  specifies the way the ec parameters are encoded',0Ah
					; DATA XREF: _ec_main+7FFo
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FD8h
; COMDAT (pick any)
		public ??_C@_0CL@EAKLEMG@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5der@
; `string'
??_C@_0CL@EAKLEMG@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5der@	db '                 in the asn1 der encoding',0Ah,0
					; DATA XREF: _ec_main+80Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1004h
; COMDAT (pick any)
		public ??_C@_0DJ@NHMKIAKA@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@
; `string'
??_C@_0DJ@NHMKIAKA@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@ db '                 possible values: named_curve (default)',0Ah,0
					; DATA XREF: _ec_main+81Fo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1040h
; COMDAT (pick any)
		public ??_C@_0CM@EPMIBHPH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
; `string'
??_C@_0CM@EPMIBHPH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ db	'                                  explicit',0Ah,0
					; DATA XREF: _ec_main+82Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 106Ch
; COMDAT (pick any)
		public ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
; `string'
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ db 'Error getting passwords',0Ah,0
					; DATA XREF: _ec_main+6B3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1088h
; COMDAT (pick any)
		public ??_C@_0N@BJCFIJI@read?5EC?5key?6?$AA@
; `string'
??_C@_0N@BJCFIJI@read?5EC?5key?6?$AA@ db 'read EC key',0Ah,0 ; DATA XREF: _ec_main:loc_895o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1098h
; COMDAT (pick any)
		public ??_C@_0CE@PIOCFEJI@bad?5input?5format?5specified?5for?5k@
; `string'
??_C@_0CE@PIOCFEJI@bad?5input?5format?5specified?5for?5k@ db 'bad input format specified for key',0Ah,0
					; DATA XREF: _ec_main:loc_B07o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10BCh
; COMDAT (pick any)
		public ??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@
; `string'
??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@	db 'unable to load Key',0Ah,0
					; DATA XREF: _ec_main+938o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10D0h
; COMDAT (pick any)
		public ??_C@_0BA@JBLDNIOO@writing?5EC?5key?6?$AA@
; `string'
??_C@_0BA@JBLDNIOO@writing?5EC?5key?6?$AA@ db 'writing EC key',0Ah,0
					; DATA XREF: _ec_main:loc_A27o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10E0h
; COMDAT (pick any)
		public ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
; `string'
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ db 'bad output format specified for outfile',0Ah,0
					; DATA XREF: _ec_main:loc_AEEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 110Ch
; COMDAT (pick any)
		public ??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@
; `string'
??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@ db 'unable to write private key',0Ah,0
					; DATA XREF: _ec_main+ACAo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _ec_main+9Ep
					; _ec_main+882p ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _ec_main+8DEp
					; _ec_main+9B2p ...
		extrn _CRYPTO_free:near	; CODE XREF: _ec_main+B62p
					; _ec_main+B73p
		extrn _BIO_s_file:near	; CODE XREF: _ec_main+85p
					; _ec_main:loc_84Cp ...
		extrn _BIO_new:near	; CODE XREF: _ec_main+8Bp
					; _ec_main+852p ...
		extrn _BIO_free:near	; CODE XREF: _ec_main+B31p
		extrn _BIO_ctrl:near	; CODE XREF: _ec_main+AFp
					; _ec_main+88Dp ...
		extrn _BIO_free_all:near ; CODE	XREF: _ec_main+B3Ep
		extrn _BIO_printf:near	; CODE XREF: _ec_main+6BEp
					; _ec_main+6DDp ...
		extrn _ASN1_i2d_bio:near ; CODE	XREF: _ec_main+A51p
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _ec_main+657p
		extrn _i2d_ECPKParameters:near ; DATA XREF: _ec_main+A4Co
		extrn _EC_KEY_free:near	; CODE XREF: _ec_main+B4Bp
		extrn _EC_KEY_get0_group:near ;	CODE XREF: _ec_main+97Ap
		extrn _EC_KEY_set_conv_form:near ; CODE	XREF: _ec_main+991p
		extrn _EC_KEY_set_asn1_flag:near ; CODE	XREF: _ec_main+9D0p
		extrn _EC_KEY_print:near ; CODE	XREF: _ec_main+9E3p
		extrn _d2i_EC_PUBKEY_bio:near ;	CODE XREF: _ec_main+8BBp
		extrn _i2d_EC_PUBKEY_bio:near ;	CODE XREF: _ec_main+A74p
		extrn _d2i_ECPrivateKey_bio:near ; CODE	XREF: _ec_main:loc_8E9p
		extrn _i2d_ECPrivateKey_bio:near ; CODE	XREF: _ec_main+A6Bp
		extrn _ERR_print_errors:near ; CODE XREF: _ec_main+94Ep
					; _ec_main+A00p ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _ec_main:loc_678p
		extrn _str2fmt:near	; CODE XREF: _ec_main+159p
					; _ec_main+1AAp
		extrn _app_passwd:near	; CODE XREF: _ec_main+6A3p
		extrn _setup_engine:near ; CODE	XREF: _ec_main+686p
		extrn _load_config:near	; CODE XREF: _ec_main+BFp
		extrn _PEM_write_bio_ECPKParameters:near ; CODE	XREF: _ec_main+A89p
		extrn _PEM_read_bio_ECPrivateKey:near ;	CODE XREF: _ec_main+926p
		extrn _PEM_write_bio_ECPrivateKey:near ; CODE XREF: _ec_main+AAEp
		extrn _PEM_read_bio_EC_PUBKEY:near ; CODE XREF:	_ec_main+910p
		extrn _PEM_write_bio_EC_PUBKEY:near ; CODE XREF: _ec_main+ABAp
		extrn __chkstk:near	; CODE XREF: _ec_main+5p
		extrn _bio_err:near	; DATA XREF: _ec_main+Ar _ec_main+93w	...


		end

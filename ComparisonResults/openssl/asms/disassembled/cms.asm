;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	DA9647EF69F28D3FA83AC96964DAFE7F
; Input	CRC32 :	00F2EEFD

; File Name   :	C:\compspace\Diff\openssl\obj\cms.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
		public _verify_err
_verify_err	dd ?			; DATA XREF: _cms_cb+11w
					; _cms_main+3210r
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_cms_cb		proc near		; DATA XREF: _cms_main+2A28o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	[esp+4+arg_4]
		call	_X509_STORE_CTX_get_error
		mov	esi, [esp+8+arg_0]
		add	esp, 4
		mov	ds:_verify_err,	eax
		cmp	eax, 2Bh ; '+'
		jz	short loc_28
		test	eax, eax
		jnz	short loc_36
		cmp	esi, 2
		jnz	short loc_36

loc_28:					; CODE XREF: _cms_cb+19j
		push	[esp+4+arg_4]
		push	0
		call	_policies_print
		add	esp, 8

loc_36:					; CODE XREF: _cms_cb+1Dj _cms_cb+22j
		mov	eax, esi
		pop	esi
		retn
_cms_cb		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _cms_main
_cms_main	proc near

var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		mov	eax, 108h
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		push	edi
		xor	eax, eax
		mov	[esp+118h+var_7C], offset ??_C@_01KDCPPGHE@r?$AA@ ; `string'
		mov	[esp+118h+var_78], eax
		mov	ebx, 40h ; '@'
		mov	[esp+118h+var_30], eax
		mov	[esp+118h+var_70], eax
		mov	[esp+118h+var_E0], eax
		mov	[esp+118h+var_98], eax
		mov	[esp+118h+var_D8], eax
		mov	[esp+118h+var_D4], eax
		mov	[esp+118h+var_34], eax
		mov	[esp+118h+var_94], eax
		mov	[esp+118h+var_90], eax
		mov	[esp+118h+var_E8], eax
		mov	[esp+118h+var_B0], eax
		mov	[esp+118h+var_EC], eax
		mov	[esp+118h+var_9C], eax
		mov	[esp+118h+var_84], eax
		mov	[esp+118h+var_A0], eax
		mov	[esp+118h+var_44], eax
		mov	[esp+118h+var_BC], eax
		mov	[esp+118h+var_DC], eax
		mov	[esp+118h+var_104], eax
		mov	[esp+118h+var_E4], eax
		mov	[esp+118h+var_D0], eax
		mov	[esp+118h+var_C], eax
		mov	[esp+118h+var_CC], eax
		mov	[esp+118h+var_58], eax
		mov	[esp+118h+var_1C], eax
		mov	[esp+118h+var_20], eax
		mov	[esp+118h+var_24], eax
		mov	[esp+118h+var_C4], eax
		mov	[esp+118h+var_C0], eax
		mov	[esp+118h+var_48], eax
		mov	[esp+118h+var_18], eax
		mov	[esp+118h+var_14], eax
		mov	[esp+118h+var_10], eax
		mov	[esp+118h+var_28], eax
		mov	[esp+118h+var_2C], eax
		mov	[esp+118h+var_3C], eax
		mov	[esp+118h+var_80], eax
		mov	[esp+118h+var_38], eax
		mov	[esp+118h+var_C8], eax
		mov	[esp+118h+var_60], eax
		mov	[esp+118h+var_40], eax
		mov	[esp+118h+var_F0], eax
		mov	[esp+118h+var_B4], eax
		mov	[esp+118h+var_AC], eax
		mov	[esp+118h+var_50], eax
		mov	[esp+118h+var_A8], eax
		mov	[esp+118h+var_5C], eax
		mov	[esp+118h+var_A4], eax
		mov	[esp+118h+var_FC], eax
		mov	[esp+118h+var_4C], eax
		mov	[esp+118h+var_54], eax
		mov	eax, [esp+118h+arg_4]
		add	eax, 4
		mov	[esp+118h+var_68], offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		xor	edi, edi
		mov	[esp+118h+var_108], eax
		mov	eax, dword ptr ds:_bio_err
		xor	esi, esi
		xor	ebp, ebp
		mov	[esp+118h+var_F4], edi
		mov	[esp+118h+var_100], esi
		mov	[esp+118h+var_B8], ebp
		mov	[esp+118h+var_F8], ebx
		mov	[esp+118h+var_8C], 0FFFFFFFFh
		mov	[esp+118h+var_74], 6
		mov	[esp+118h+var_88], 6
		mov	[esp+118h+var_6C], 6
		mov	[esp+118h+var_64], 3
		test	eax, eax
		jnz	short loc_229
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_229
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_229:				; CODE XREF: _cms_main+1B4j
					; _cms_main+1CBj
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_228C
		mov	ebp, [esp+118h+var_108]
		cmp	[esp+118h+var_CC], esi
		jnz	loc_1D7D
		xchg	ax, ax

loc_24C:				; CODE XREF: _cms_main+1C5Aj
		mov	esi, [ebp+0]
		test	esi, esi
		jz	loc_1C9C
		cmp	byte ptr [esi],	2Dh ; '-'
		jnz	loc_1C9C
		mov	ecx, offset ??_C@_08CNCNOCCN@?9encrypt?$AA@ ; "-encrypt"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_26C:				; CODE XREF: _cms_main+24Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_28C
		test	dl, dl
		jz	short loc_288
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_28C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_26C

loc_288:				; CODE XREF: _cms_main+238j
		xor	eax, eax
		jmp	short loc_291
; ---------------------------------------------------------------------------

loc_28C:				; CODE XREF: _cms_main+234j
					; _cms_main+240j
		sbb	eax, eax
		or	eax, 1

loc_291:				; CODE XREF: _cms_main+24Ej
		test	eax, eax
		jnz	short loc_2A5
		mov	[esp+118h+var_F4], 11h
		lea	edi, [eax+11h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_2A5:				; CODE XREF: _cms_main+257j
		mov	ecx, offset ??_C@_08ODIALGEJ@?9decrypt?$AA@ ; "-decrypt"
		mov	eax, esi

loc_2AC:				; CODE XREF: _cms_main+28Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2CC
		test	dl, dl
		jz	short loc_2C8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2CC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2AC

loc_2C8:				; CODE XREF: _cms_main+278j
		xor	eax, eax
		jmp	short loc_2D1
; ---------------------------------------------------------------------------

loc_2CC:				; CODE XREF: _cms_main+274j
					; _cms_main+280j
		sbb	eax, eax
		or	eax, 1

loc_2D1:				; CODE XREF: _cms_main+28Ej
		test	eax, eax
		jnz	short loc_2E5
		mov	[esp+118h+var_F4], 22h ; '"'
		lea	edi, [eax+22h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_2E5:				; CODE XREF: _cms_main+297j
		mov	ecx, offset ??_C@_05LLLFPBKO@?9sign?$AA@ ; "-sign"
		mov	eax, esi

loc_2EC:				; CODE XREF: _cms_main+2CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_30C
		test	dl, dl
		jz	short loc_308
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_30C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2EC

loc_308:				; CODE XREF: _cms_main+2B8j
		xor	eax, eax
		jmp	short loc_311
; ---------------------------------------------------------------------------

loc_30C:				; CODE XREF: _cms_main+2B4j
					; _cms_main+2C0j
		sbb	eax, eax
		or	eax, 1

loc_311:				; CODE XREF: _cms_main+2CEj
		test	eax, eax
		jnz	short loc_325
		mov	[esp+118h+var_F4], 53h ; 'S'
		lea	edi, [eax+53h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_325:				; CODE XREF: _cms_main+2D7j
		mov	ecx, offset ??_C@_0O@EMPAONPK@?9sign_receipt?$AA@ ; "-sign_receipt"
		mov	eax, esi

loc_32C:				; CODE XREF: _cms_main+30Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_34C
		test	dl, dl
		jz	short loc_348
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_34C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_32C

loc_348:				; CODE XREF: _cms_main+2F8j
		xor	eax, eax
		jmp	short loc_351
; ---------------------------------------------------------------------------

loc_34C:				; CODE XREF: _cms_main+2F4j
					; _cms_main+300j
		sbb	eax, eax
		or	eax, 1

loc_351:				; CODE XREF: _cms_main+30Ej
		test	eax, eax
		jnz	short loc_365
		mov	[esp+118h+var_F4], 3Fh ; '?'
		lea	edi, [eax+3Fh]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_365:				; CODE XREF: _cms_main+317j
		mov	ecx, offset ??_C@_07JFNKLBOA@?9resign?$AA@ ; "-resign"
		mov	eax, esi

loc_36C:				; CODE XREF: _cms_main+34Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_38C
		test	dl, dl
		jz	short loc_388
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_38C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_36C

loc_388:				; CODE XREF: _cms_main+338j
		xor	eax, eax
		jmp	short loc_391
; ---------------------------------------------------------------------------

loc_38C:				; CODE XREF: _cms_main+334j
					; _cms_main+340j
		sbb	eax, eax
		or	eax, 1

loc_391:				; CODE XREF: _cms_main+34Ej
		test	eax, eax
		jnz	short loc_3A5
		mov	[esp+118h+var_F4], 76h ; 'v'
		lea	edi, [eax+76h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_3A5:				; CODE XREF: _cms_main+357j
		mov	ecx, offset ??_C@_07FILEFCOC@?9verify?$AA@ ; "-verify"
		mov	eax, esi

loc_3AC:				; CODE XREF: _cms_main+38Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3CC
		test	dl, dl
		jz	short loc_3C8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3CC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3AC

loc_3C8:				; CODE XREF: _cms_main+378j
		xor	eax, eax
		jmp	short loc_3D1
; ---------------------------------------------------------------------------

loc_3CC:				; CODE XREF: _cms_main+374j
					; _cms_main+380j
		sbb	eax, eax
		or	eax, 1

loc_3D1:				; CODE XREF: _cms_main+38Ej
		test	eax, eax
		jnz	short loc_3E5
		mov	[esp+118h+var_F4], 24h ; '$'
		lea	edi, [eax+24h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_3E5:				; CODE XREF: _cms_main+397j
		mov	ecx, offset ??_C@_0BA@BMKHCNOC@?9verify_retcode?$AA@ ; "-verify_retcode"
		mov	eax, esi

loc_3EC:				; CODE XREF: _cms_main+3CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_40C
		test	dl, dl
		jz	short loc_408
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_40C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3EC

loc_408:				; CODE XREF: _cms_main+3B8j
		xor	eax, eax
		jmp	short loc_411
; ---------------------------------------------------------------------------

loc_40C:				; CODE XREF: _cms_main+3B4j
					; _cms_main+3C0j
		sbb	eax, eax
		or	eax, 1

loc_411:				; CODE XREF: _cms_main+3CEj
		test	eax, eax
		jnz	short loc_425
		mov	[esp+118h+var_20], 1
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_425:				; CODE XREF: _cms_main+3D7j
		mov	ecx, offset ??_C@_0BA@OAKJJNAB@?9verify_receipt?$AA@ ; "-verify_receipt"
		mov	eax, esi

loc_42C:				; CODE XREF: _cms_main+40Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_44C
		test	dl, dl
		jz	short loc_448
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_44C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_42C

loc_448:				; CODE XREF: _cms_main+3F8j
		xor	eax, eax
		jmp	short loc_451
; ---------------------------------------------------------------------------

loc_44C:				; CODE XREF: _cms_main+3F4j
					; _cms_main+400j
		sbb	eax, eax
		or	eax, 1

loc_451:				; CODE XREF: _cms_main+40Ej
		test	eax, eax
		jnz	short loc_480
		add	ebp, 4
		mov	[esp+118h+var_F4], 30h ; '0'
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	edi, [esp+118h+var_F4]
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_70], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_480:				; CODE XREF: _cms_main+417j
		mov	ecx, offset ??_C@_07DCMEHGOO@?9cmsout?$AA@ ; "-cmsout"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_48C:				; CODE XREF: _cms_main+46Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4AC
		test	dl, dl
		jz	short loc_4A8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4AC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_48C

loc_4A8:				; CODE XREF: _cms_main+458j
		xor	eax, eax
		jmp	short loc_4B1
; ---------------------------------------------------------------------------

loc_4AC:				; CODE XREF: _cms_main+454j
					; _cms_main+460j
		sbb	eax, eax
		or	eax, 1

loc_4B1:				; CODE XREF: _cms_main+46Ej
		test	eax, eax
		jnz	short loc_4C5
		mov	[esp+118h+var_F4], 35h ; '5'
		lea	edi, [eax+35h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_4C5:				; CODE XREF: _cms_main+477j
		mov	ecx, offset ??_C@_09KAPIOOKF@?9data_out?$AA@ ; "-data_out"
		mov	eax, esi

loc_4CC:				; CODE XREF: _cms_main+4AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4EC
		test	dl, dl
		jz	short loc_4E8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4EC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4CC

loc_4E8:				; CODE XREF: _cms_main+498j
		xor	eax, eax
		jmp	short loc_4F1
; ---------------------------------------------------------------------------

loc_4EC:				; CODE XREF: _cms_main+494j
					; _cms_main+4A0j
		sbb	eax, eax
		or	eax, 1

loc_4F1:				; CODE XREF: _cms_main+4AEj
		test	eax, eax
		jnz	short loc_505
		mov	[esp+118h+var_F4], 27h ; '''
		lea	edi, [eax+27h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_505:				; CODE XREF: _cms_main+4B7j
		mov	ecx, offset ??_C@_0N@ODOFBAJB@?9data_create?$AA@ ; "-data_create"
		mov	eax, esi

loc_50C:				; CODE XREF: _cms_main+4EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_52C
		test	dl, dl
		jz	short loc_528
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_52C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_50C

loc_528:				; CODE XREF: _cms_main+4D8j
		xor	eax, eax
		jmp	short loc_531
; ---------------------------------------------------------------------------

loc_52C:				; CODE XREF: _cms_main+4D4j
					; _cms_main+4E0j
		sbb	eax, eax
		or	eax, 1

loc_531:				; CODE XREF: _cms_main+4EEj
		test	eax, eax
		jnz	short loc_545
		mov	[esp+118h+var_F4], 18h
		lea	edi, [eax+18h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_545:				; CODE XREF: _cms_main+4F7j
		mov	ecx, offset ??_C@_0P@KBJEJHCI@?9digest_verify?$AA@ ; "-digest_verify"
		mov	eax, esi

loc_54C:				; CODE XREF: _cms_main+52Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_56C
		test	dl, dl
		jz	short loc_568
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_56C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_54C

loc_568:				; CODE XREF: _cms_main+518j
		xor	eax, eax
		jmp	short loc_571
; ---------------------------------------------------------------------------

loc_56C:				; CODE XREF: _cms_main+514j
					; _cms_main+520j
		sbb	eax, eax
		or	eax, 1

loc_571:				; CODE XREF: _cms_main+52Ej
		test	eax, eax
		jnz	short loc_585
		mov	[esp+118h+var_F4], 29h ; ')'
		lea	edi, [eax+29h]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_585:				; CODE XREF: _cms_main+537j
		mov	ecx, offset ??_C@_0P@GEAAFPFM@?9digest_create?$AA@ ; "-digest_create"
		mov	eax, esi

loc_58C:				; CODE XREF: _cms_main+56Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5AC
		test	dl, dl
		jz	short loc_5A8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5AC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_58C

loc_5A8:				; CODE XREF: _cms_main+558j
		xor	eax, eax
		jmp	short loc_5B1
; ---------------------------------------------------------------------------

loc_5AC:				; CODE XREF: _cms_main+554j
					; _cms_main+560j
		sbb	eax, eax
		or	eax, 1

loc_5B1:				; CODE XREF: _cms_main+56Ej
		test	eax, eax
		jnz	short loc_5C5
		mov	[esp+118h+var_F4], 1Ah
		lea	edi, [eax+1Ah]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_5C5:				; CODE XREF: _cms_main+577j
		mov	ecx, offset ??_C@_09PGPPHINJ@?9compress?$AA@ ; "-compress"
		mov	eax, esi

loc_5CC:				; CODE XREF: _cms_main+5AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5EC
		test	dl, dl
		jz	short loc_5E8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5EC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5CC

loc_5E8:				; CODE XREF: _cms_main+598j
		xor	eax, eax
		jmp	short loc_5F1
; ---------------------------------------------------------------------------

loc_5EC:				; CODE XREF: _cms_main+594j
					; _cms_main+5A0j
		sbb	eax, eax
		or	eax, 1

loc_5F1:				; CODE XREF: _cms_main+5AEj
		test	eax, eax
		jnz	short loc_605
		mov	[esp+118h+var_F4], 1Ch
		lea	edi, [eax+1Ch]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_605:				; CODE XREF: _cms_main+5B7j
		mov	ecx, offset ??_C@_0M@BCMGEOME@?9uncompress?$AA@	; "-uncompress"
		mov	eax, esi

loc_60C:				; CODE XREF: _cms_main+5EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_62C
		test	dl, dl
		jz	short loc_628
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_62C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_60C

loc_628:				; CODE XREF: _cms_main+5D8j
		xor	eax, eax
		jmp	short loc_631
; ---------------------------------------------------------------------------

loc_62C:				; CODE XREF: _cms_main+5D4j
					; _cms_main+5E0j
		sbb	eax, eax
		or	eax, 1

loc_631:				; CODE XREF: _cms_main+5EEj
		test	eax, eax
		jnz	short loc_645
		mov	[esp+118h+var_F4], 2Bh ; '+'
		lea	edi, [eax+2Bh]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_645:				; CODE XREF: _cms_main+5F7j
		mov	ecx, offset ??_C@_0BH@IJKEBAPA@?9EncryptedData_decrypt?$AA@ ; "-EncryptedData_decrypt"
		mov	eax, esi

loc_64C:				; CODE XREF: _cms_main+62Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_66C
		test	dl, dl
		jz	short loc_668
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_66C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_64C

loc_668:				; CODE XREF: _cms_main+618j
		xor	eax, eax
		jmp	short loc_671
; ---------------------------------------------------------------------------

loc_66C:				; CODE XREF: _cms_main+614j
					; _cms_main+620j
		sbb	eax, eax
		or	eax, 1

loc_671:				; CODE XREF: _cms_main+62Ej
		test	eax, eax
		jnz	short loc_685
		mov	[esp+118h+var_F4], 2Dh ; '-'
		lea	edi, [eax+2Dh]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_685:				; CODE XREF: _cms_main+637j
		mov	ecx, offset ??_C@_0BH@EHAJEEJE@?9EncryptedData_encrypt?$AA@ ; "-EncryptedData_encrypt"
		mov	eax, esi

loc_68C:				; CODE XREF: _cms_main+66Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_6AC
		test	dl, dl
		jz	short loc_6A8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_6AC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_68C

loc_6A8:				; CODE XREF: _cms_main+658j
		xor	eax, eax
		jmp	short loc_6B1
; ---------------------------------------------------------------------------

loc_6AC:				; CODE XREF: _cms_main+654j
					; _cms_main+660j
		sbb	eax, eax
		or	eax, 1

loc_6B1:				; CODE XREF: _cms_main+66Ej
		test	eax, eax
		jnz	short loc_6C5
		mov	[esp+118h+var_F4], 1Eh
		lea	edi, [eax+1Eh]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_6C5:				; CODE XREF: _cms_main+677j
		mov	ecx, offset ??_C@_05DHJJCNDB@?9des3?$AA@ ; "-des3"
		mov	eax, esi

loc_6CC:				; CODE XREF: _cms_main+6AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_6EC
		test	dl, dl
		jz	short loc_6E8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_6EC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_6CC

loc_6E8:				; CODE XREF: _cms_main+698j
		xor	eax, eax
		jmp	short loc_6F1
; ---------------------------------------------------------------------------

loc_6EC:				; CODE XREF: _cms_main+694j
					; _cms_main+6A0j
		sbb	eax, eax
		or	eax, 1

loc_6F1:				; CODE XREF: _cms_main+6AEj
		test	eax, eax
		jnz	short loc_707
		call	_EVP_des_ede3_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_707:				; CODE XREF: _cms_main+6B7j
		mov	ecx, offset ??_C@_04POMGKAPN@?9des?$AA@	; "-des"
		mov	eax, esi

loc_70E:				; CODE XREF: _cms_main+6ECj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_72E
		test	dl, dl
		jz	short loc_72A
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_72E
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_70E

loc_72A:				; CODE XREF: _cms_main+6DAj
		xor	eax, eax
		jmp	short loc_733
; ---------------------------------------------------------------------------

loc_72E:				; CODE XREF: _cms_main+6D6j
					; _cms_main+6E2j
		sbb	eax, eax
		or	eax, 1

loc_733:				; CODE XREF: _cms_main+6F0j
		test	eax, eax
		jnz	short loc_749
		call	_EVP_des_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_749:				; CODE XREF: _cms_main+6F9j
		mov	ecx, offset ??_C@_0L@PLAAFPFP@?9des3?9wrap?$AA@	; "-des3-wrap"
		mov	eax, esi

loc_750:				; CODE XREF: _cms_main+72Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_770
		test	dl, dl
		jz	short loc_76C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_770
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_750

loc_76C:				; CODE XREF: _cms_main+71Cj
		xor	eax, eax
		jmp	short loc_775
; ---------------------------------------------------------------------------

loc_770:				; CODE XREF: _cms_main+718j
					; _cms_main+724j
		sbb	eax, eax
		or	eax, 1

loc_775:				; CODE XREF: _cms_main+732j
		test	eax, eax
		jnz	short loc_78B
		call	_EVP_des_ede3_wrap
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_B0], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_78B:				; CODE XREF: _cms_main+73Bj
		mov	ecx, offset ??_C@_05IAIHCPC@?9seed?$AA@	; "-seed"
		mov	eax, esi

loc_792:				; CODE XREF: _cms_main+770j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_7B2
		test	dl, dl
		jz	short loc_7AE
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_7B2
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_792

loc_7AE:				; CODE XREF: _cms_main+75Ej
		xor	eax, eax
		jmp	short loc_7B7
; ---------------------------------------------------------------------------

loc_7B2:				; CODE XREF: _cms_main+75Aj
					; _cms_main+766j
		sbb	eax, eax
		or	eax, 1

loc_7B7:				; CODE XREF: _cms_main+774j
		test	eax, eax
		jnz	short loc_7CD
		call	_EVP_seed_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_7CD:				; CODE XREF: _cms_main+77Dj
		mov	ecx, offset ??_C@_07HIKEAMFN@?9rc2?940?$AA@ ; "-rc2-40"
		mov	eax, esi

loc_7D4:				; CODE XREF: _cms_main+7B2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_7F4
		test	dl, dl
		jz	short loc_7F0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_7F4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_7D4

loc_7F0:				; CODE XREF: _cms_main+7A0j
		xor	eax, eax
		jmp	short loc_7F9
; ---------------------------------------------------------------------------

loc_7F4:				; CODE XREF: _cms_main+79Cj
					; _cms_main+7A8j
		sbb	eax, eax
		or	eax, 1

loc_7F9:				; CODE XREF: _cms_main+7B6j
		test	eax, eax
		jnz	short loc_80F
		call	_EVP_rc2_40_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_80F:				; CODE XREF: _cms_main+7BFj
		mov	ecx, offset ??_C@_08DGGHBBOC@?9rc2?9128?$AA@ ; "-rc2-128"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_81C:				; CODE XREF: _cms_main+7FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_83C
		test	dl, dl
		jz	short loc_838
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_83C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_81C

loc_838:				; CODE XREF: _cms_main+7E8j
		xor	eax, eax
		jmp	short loc_841
; ---------------------------------------------------------------------------

loc_83C:				; CODE XREF: _cms_main+7E4j
					; _cms_main+7F0j
		sbb	eax, eax
		or	eax, 1

loc_841:				; CODE XREF: _cms_main+7FEj
		test	eax, eax
		jnz	short loc_857
		call	_EVP_rc2_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_857:				; CODE XREF: _cms_main+807j
		mov	ecx, offset ??_C@_07BPEMBNDH@?9rc2?964?$AA@ ; "-rc2-64"
		mov	eax, esi

loc_85E:				; CODE XREF: _cms_main+83Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_87E
		test	dl, dl
		jz	short loc_87A
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_87E
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_85E

loc_87A:				; CODE XREF: _cms_main+82Aj
		xor	eax, eax
		jmp	short loc_883
; ---------------------------------------------------------------------------

loc_87E:				; CODE XREF: _cms_main+826j
					; _cms_main+832j
		sbb	eax, eax
		or	eax, 1

loc_883:				; CODE XREF: _cms_main+840j
		test	eax, eax
		jnz	short loc_899
		call	_EVP_rc2_64_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_899:				; CODE XREF: _cms_main+849j
		mov	ecx, offset ??_C@_07ELMDAGHH@?9aes128?$AA@ ; "-aes128"
		mov	eax, esi

loc_8A0:				; CODE XREF: _cms_main+87Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_8C0
		test	dl, dl
		jz	short loc_8BC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_8C0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_8A0

loc_8BC:				; CODE XREF: _cms_main+86Cj
		xor	eax, eax
		jmp	short loc_8C5
; ---------------------------------------------------------------------------

loc_8C0:				; CODE XREF: _cms_main+868j
					; _cms_main+874j
		sbb	eax, eax
		or	eax, 1

loc_8C5:				; CODE XREF: _cms_main+882j
		test	eax, eax
		jnz	short loc_8DB
		call	_EVP_aes_128_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_8DB:				; CODE XREF: _cms_main+88Bj
		mov	ecx, offset ??_C@_07LNHJABBM@?9aes192?$AA@ ; "-aes192"
		mov	eax, esi

loc_8E2:				; CODE XREF: _cms_main+8C0j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_902
		test	dl, dl
		jz	short loc_8FE
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_902
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_8E2

loc_8FE:				; CODE XREF: _cms_main+8AEj
		xor	eax, eax
		jmp	short loc_907
; ---------------------------------------------------------------------------

loc_902:				; CODE XREF: _cms_main+8AAj
					; _cms_main+8B6j
		sbb	eax, eax
		or	eax, 1

loc_907:				; CODE XREF: _cms_main+8C4j
		test	eax, eax
		jnz	short loc_91D
		call	_EVP_aes_192_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_91D:				; CODE XREF: _cms_main+8CDj
		mov	ecx, offset ??_C@_07MCLKJCJC@?9aes256?$AA@ ; "-aes256"
		mov	eax, esi

loc_924:				; CODE XREF: _cms_main+902j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_944
		test	dl, dl
		jz	short loc_940
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_944
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_924

loc_940:				; CODE XREF: _cms_main+8F0j
		xor	eax, eax
		jmp	short loc_949
; ---------------------------------------------------------------------------

loc_944:				; CODE XREF: _cms_main+8ECj
					; _cms_main+8F8j
		sbb	eax, eax
		or	eax, 1

loc_949:				; CODE XREF: _cms_main+906j
		test	eax, eax
		jnz	short loc_95F
		call	_EVP_aes_256_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_95F:				; CODE XREF: _cms_main+90Fj
		mov	ecx, offset ??_C@_0N@LJCBEHBF@?9aes128?9wrap?$AA@ ; "-aes128-wrap"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_96C:				; CODE XREF: _cms_main+94Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_98C
		test	dl, dl
		jz	short loc_988
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_98C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_96C

loc_988:				; CODE XREF: _cms_main+938j
		xor	eax, eax
		jmp	short loc_991
; ---------------------------------------------------------------------------

loc_98C:				; CODE XREF: _cms_main+934j
					; _cms_main+940j
		sbb	eax, eax
		or	eax, 1

loc_991:				; CODE XREF: _cms_main+94Ej
		test	eax, eax
		jnz	short loc_9A7
		call	_EVP_aes_128_wrap
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_B0], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_9A7:				; CODE XREF: _cms_main+957j
		mov	ecx, offset ??_C@_0N@EADLAEAN@?9aes192?9wrap?$AA@ ; "-aes192-wrap"
		mov	eax, esi

loc_9AE:				; CODE XREF: _cms_main+98Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_9CE
		test	dl, dl
		jz	short loc_9CA
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_9CE
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_9AE

loc_9CA:				; CODE XREF: _cms_main+97Aj
		xor	eax, eax
		jmp	short loc_9D3
; ---------------------------------------------------------------------------

loc_9CE:				; CODE XREF: _cms_main+976j
					; _cms_main+982j
		sbb	eax, eax
		or	eax, 1

loc_9D3:				; CODE XREF: _cms_main+990j
		test	eax, eax
		jnz	short loc_9E9
		call	_EVP_aes_192_wrap
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_B0], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_9E9:				; CODE XREF: _cms_main+999j
		mov	ecx, offset ??_C@_0N@NKFGAJJE@?9aes256?9wrap?$AA@ ; "-aes256-wrap"
		mov	eax, esi

loc_9F0:				; CODE XREF: _cms_main+9CEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_A10
		test	dl, dl
		jz	short loc_A0C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_A10
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_9F0

loc_A0C:				; CODE XREF: _cms_main+9BCj
		xor	eax, eax
		jmp	short loc_A15
; ---------------------------------------------------------------------------

loc_A10:				; CODE XREF: _cms_main+9B8j
					; _cms_main+9C4j
		sbb	eax, eax
		or	eax, 1

loc_A15:				; CODE XREF: _cms_main+9D2j
		test	eax, eax
		jnz	short loc_A2B
		call	_EVP_aes_256_wrap
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_B0], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_A2B:				; CODE XREF: _cms_main+9DBj
		mov	ecx, offset ??_C@_0N@MALOKPBG@?9camellia128?$AA@ ; "-camellia128"
		mov	eax, esi

loc_A32:				; CODE XREF: _cms_main+A10j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_A52
		test	dl, dl
		jz	short loc_A4E
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_A52
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_A32

loc_A4E:				; CODE XREF: _cms_main+9FEj
		xor	eax, eax
		jmp	short loc_A57
; ---------------------------------------------------------------------------

loc_A52:				; CODE XREF: _cms_main+9FAj
					; _cms_main+A06j
		sbb	eax, eax
		or	eax, 1

loc_A57:				; CODE XREF: _cms_main+A14j
		test	eax, eax
		jnz	short loc_A6D
		call	_EVP_camellia_128_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_A6D:				; CODE XREF: _cms_main+A1Dj
		mov	ecx, offset ??_C@_0N@DGAEKIHN@?9camellia192?$AA@ ; "-camellia192"
		mov	eax, esi

loc_A74:				; CODE XREF: _cms_main+A52j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_A94
		test	dl, dl
		jz	short loc_A90
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_A94
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_A74

loc_A90:				; CODE XREF: _cms_main+A40j
		xor	eax, eax
		jmp	short loc_A99
; ---------------------------------------------------------------------------

loc_A94:				; CODE XREF: _cms_main+A3Cj
					; _cms_main+A48j
		sbb	eax, eax
		or	eax, 1

loc_A99:				; CODE XREF: _cms_main+A56j
		test	eax, eax
		jnz	short loc_AAF
		call	_EVP_camellia_192_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_AAF:				; CODE XREF: _cms_main+A5Fj
		mov	ecx, offset ??_C@_0N@EJMHDLPD@?9camellia256?$AA@ ; "-camellia256"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_ABC:				; CODE XREF: _cms_main+A9Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_ADC
		test	dl, dl
		jz	short loc_AD8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_ADC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_ABC

loc_AD8:				; CODE XREF: _cms_main+A88j
		xor	eax, eax
		jmp	short loc_AE1
; ---------------------------------------------------------------------------

loc_ADC:				; CODE XREF: _cms_main+A84j
					; _cms_main+A90j
		sbb	eax, eax
		or	eax, 1

loc_AE1:				; CODE XREF: _cms_main+A9Ej
		test	eax, eax
		jnz	short loc_AF7
		call	_EVP_camellia_256_cbc
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_E8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_AF7:				; CODE XREF: _cms_main+AA7j
		mov	ecx, offset ??_C@_0P@IGEOHMJB@?9debug_decrypt?$AA@ ; "-debug_decrypt"
		mov	eax, esi

loc_AFE:				; CODE XREF: _cms_main+ADCj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_B1E
		test	dl, dl
		jz	short loc_B1A
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_B1E
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_AFE

loc_B1A:				; CODE XREF: _cms_main+ACAj
		xor	eax, eax
		jmp	short loc_B23
; ---------------------------------------------------------------------------

loc_B1E:				; CODE XREF: _cms_main+AC6j
					; _cms_main+AD2j
		sbb	eax, eax
		or	eax, 1

loc_B23:				; CODE XREF: _cms_main+AE0j
		test	eax, eax
		jnz	short loc_B32
		or	ebx, 20000h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_B32:				; CODE XREF: _cms_main+AE9j
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, esi
		nop	dword ptr [eax]

loc_B3C:				; CODE XREF: _cms_main+B1Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_B5C
		test	dl, dl
		jz	short loc_B58
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_B5C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_B3C

loc_B58:				; CODE XREF: _cms_main+B08j
		xor	eax, eax
		jmp	short loc_B61
; ---------------------------------------------------------------------------

loc_B5C:				; CODE XREF: _cms_main+B04j
					; _cms_main+B10j
		sbb	eax, eax
		or	eax, 1

loc_B61:				; CODE XREF: _cms_main+B1Ej
		test	eax, eax
		jnz	short loc_B6D
		or	ebx, 1
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_B6D:				; CODE XREF: _cms_main+B27j
		mov	ecx, offset ??_C@_09LLMNCLPN@?9nointern?$AA@ ; "-nointern"
		mov	eax, esi

loc_B74:				; CODE XREF: _cms_main+B52j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_B94
		test	dl, dl
		jz	short loc_B90
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_B94
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_B74

loc_B90:				; CODE XREF: _cms_main+B40j
		xor	eax, eax
		jmp	short loc_B99
; ---------------------------------------------------------------------------

loc_B94:				; CODE XREF: _cms_main+B3Cj
					; _cms_main+B48j
		sbb	eax, eax
		or	eax, 1

loc_B99:				; CODE XREF: _cms_main+B56j
		test	eax, eax
		jnz	short loc_BA5
		or	ebx, 10h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_BA5:				; CODE XREF: _cms_main+B5Fj
		mov	ecx, offset ??_C@_09JLKGPCDL@?9noverify?$AA@ ; "-noverify"
		mov	eax, esi

loc_BAC:				; CODE XREF: _cms_main+B8Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_BCC
		test	dl, dl
		jz	short loc_BC8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_BCC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_BAC

loc_BC8:				; CODE XREF: _cms_main+B78j
		xor	eax, eax
		jmp	short loc_BD1
; ---------------------------------------------------------------------------

loc_BCC:				; CODE XREF: _cms_main+B74j
					; _cms_main+B80j
		sbb	eax, eax
		or	eax, 1

loc_BD1:				; CODE XREF: _cms_main+B8Ej
		test	eax, eax
		jz	loc_1C83
		mov	ecx, offset ??_C@_0BH@MMNEOADL@?9no_signer_cert_verify?$AA@ ; "-no_signer_cert_verify"
		mov	eax, esi

loc_BE0:				; CODE XREF: _cms_main+BBEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_C00
		test	dl, dl
		jz	short loc_BFC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_C00
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_BE0

loc_BFC:				; CODE XREF: _cms_main+BACj
		xor	eax, eax
		jmp	short loc_C05
; ---------------------------------------------------------------------------

loc_C00:				; CODE XREF: _cms_main+BA8j
					; _cms_main+BB4j
		sbb	eax, eax
		or	eax, 1

loc_C05:				; CODE XREF: _cms_main+BC2j
		test	eax, eax
		jz	loc_1C83
		mov	ecx, offset ??_C@_08JLLJAHEH@?9nocerts?$AA@ ; "-nocerts"
		mov	eax, esi

loc_C14:				; CODE XREF: _cms_main+BF2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_C34
		test	dl, dl
		jz	short loc_C30
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_C34
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_C14

loc_C30:				; CODE XREF: _cms_main+BE0j
		xor	eax, eax
		jmp	short loc_C39
; ---------------------------------------------------------------------------

loc_C34:				; CODE XREF: _cms_main+BDCj
					; _cms_main+BE8j
		sbb	eax, eax
		or	eax, 1

loc_C39:				; CODE XREF: _cms_main+BF6j
		test	eax, eax
		jnz	short loc_C45
		or	ebx, 2
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_C45:				; CODE XREF: _cms_main+BFFj
		mov	ecx, offset ??_C@_07NEHLGPOI@?9noattr?$AA@ ; "-noattr"
		mov	eax, esi

loc_C4C:				; CODE XREF: _cms_main+C2Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_C6C
		test	dl, dl
		jz	short loc_C68
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_C6C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_C4C

loc_C68:				; CODE XREF: _cms_main+C18j
		xor	eax, eax
		jmp	short loc_C71
; ---------------------------------------------------------------------------

loc_C6C:				; CODE XREF: _cms_main+C14j
					; _cms_main+C20j
		sbb	eax, eax
		or	eax, 1

loc_C71:				; CODE XREF: _cms_main+C2Ej
		test	eax, eax
		jnz	short loc_C80
		or	ebx, 100h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_C80:				; CODE XREF: _cms_main+C37j
		mov	ecx, offset ??_C@_09HEABEDGI@?9nodetach?$AA@ ; "-nodetach"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_C8C:				; CODE XREF: _cms_main+C6Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_CAC
		test	dl, dl
		jz	short loc_CA8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_CAC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_C8C

loc_CA8:				; CODE XREF: _cms_main+C58j
		xor	eax, eax
		jmp	short loc_CB1
; ---------------------------------------------------------------------------

loc_CAC:				; CODE XREF: _cms_main+C54j
					; _cms_main+C60j
		sbb	eax, eax
		or	eax, 1

loc_CB1:				; CODE XREF: _cms_main+C6Ej
		test	eax, eax
		jnz	short loc_CBD
		and	ebx, 0FFFFFFBFh
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_CBD:				; CODE XREF: _cms_main+C77j
		mov	ecx, offset ??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@	; "-nosmimecap"
		mov	eax, esi

loc_CC4:				; CODE XREF: _cms_main+CA2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_CE4
		test	dl, dl
		jz	short loc_CE0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_CE4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_CC4

loc_CE0:				; CODE XREF: _cms_main+C90j
		xor	eax, eax
		jmp	short loc_CE9
; ---------------------------------------------------------------------------

loc_CE4:				; CODE XREF: _cms_main+C8Cj
					; _cms_main+C98j
		sbb	eax, eax
		or	eax, 1

loc_CE9:				; CODE XREF: _cms_main+CA6j
		test	eax, eax
		jnz	short loc_CF8
		or	ebx, 200h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_CF8:				; CODE XREF: _cms_main+CAFj
		mov	ecx, offset ??_C@_07MHGMHDIE@?9binary?$AA@ ; "-binary"
		mov	eax, esi

loc_CFF:				; CODE XREF: _cms_main+CDDj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_D1F
		test	dl, dl
		jz	short loc_D1B
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_D1F
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_CFF

loc_D1B:				; CODE XREF: _cms_main+CCBj
		xor	eax, eax
		jmp	short loc_D24
; ---------------------------------------------------------------------------

loc_D1F:				; CODE XREF: _cms_main+CC7j
					; _cms_main+CD3j
		sbb	eax, eax
		or	eax, 1

loc_D24:				; CODE XREF: _cms_main+CE1j
		test	eax, eax
		jnz	short loc_D33
		or	ebx, 80h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_D33:				; CODE XREF: _cms_main+CEAj
		mov	ecx, offset ??_C@_06KPLIMOGD@?9keyid?$AA@ ; "-keyid"
		mov	eax, esi
		xchg	ax, ax

loc_D3C:				; CODE XREF: _cms_main+D1Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_D5C
		test	dl, dl
		jz	short loc_D58
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_D5C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_D3C

loc_D58:				; CODE XREF: _cms_main+D08j
		xor	eax, eax
		jmp	short loc_D61
; ---------------------------------------------------------------------------

loc_D5C:				; CODE XREF: _cms_main+D04j
					; _cms_main+D10j
		sbb	eax, eax
		or	eax, 1

loc_D61:				; CODE XREF: _cms_main+D1Ej
		test	eax, eax
		jnz	short loc_D70
		or	ebx, 10000h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_D70:				; CODE XREF: _cms_main+D27j
		mov	ecx, offset ??_C@_07GLFDAICA@?9nosigs?$AA@ ; "-nosigs"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_D7C:				; CODE XREF: _cms_main+D5Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_D9C
		test	dl, dl
		jz	short loc_D98
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_D9C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_D7C

loc_D98:				; CODE XREF: _cms_main+D48j
		xor	eax, eax
		jmp	short loc_DA1
; ---------------------------------------------------------------------------

loc_D9C:				; CODE XREF: _cms_main+D44j
					; _cms_main+D50j
		sbb	eax, eax
		or	eax, 1

loc_DA1:				; CODE XREF: _cms_main+D5Ej
		test	eax, eax
		jnz	short loc_DAD
		or	ebx, 0Ch
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_DAD:				; CODE XREF: _cms_main+D67j
		mov	ecx, offset ??_C@_0BD@MMHMBDO@?9no_content_verify?$AA@ ; "-no_content_verify"
		mov	eax, esi

loc_DB4:				; CODE XREF: _cms_main+D92j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_DD4
		test	dl, dl
		jz	short loc_DD0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_DD4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_DB4

loc_DD0:				; CODE XREF: _cms_main+D80j
		xor	eax, eax
		jmp	short loc_DD9
; ---------------------------------------------------------------------------

loc_DD4:				; CODE XREF: _cms_main+D7Cj
					; _cms_main+D88j
		sbb	eax, eax
		or	eax, 1

loc_DD9:				; CODE XREF: _cms_main+D96j
		test	eax, eax
		jnz	short loc_DE5
		or	ebx, 4
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_DE5:				; CODE XREF: _cms_main+D9Fj
		mov	ecx, offset ??_C@_0BA@KGCICCLN@?9no_attr_verify?$AA@ ; "-no_attr_verify"
		mov	eax, esi

loc_DEC:				; CODE XREF: _cms_main+DCAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_E0C
		test	dl, dl
		jz	short loc_E08
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_E0C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_DEC

loc_E08:				; CODE XREF: _cms_main+DB8j
		xor	eax, eax
		jmp	short loc_E11
; ---------------------------------------------------------------------------

loc_E0C:				; CODE XREF: _cms_main+DB4j
					; _cms_main+DC0j
		sbb	eax, eax
		or	eax, 1

loc_E11:				; CODE XREF: _cms_main+DCEj
		test	eax, eax
		jnz	short loc_E1D
		or	ebx, 8
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_E1D:				; CODE XREF: _cms_main+DD7j
		mov	ecx, offset ??_C@_07KDDBNCBD@?9stream?$AA@ ; "-stream"
		mov	eax, esi

loc_E24:				; CODE XREF: _cms_main+E02j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_E44
		test	dl, dl
		jz	short loc_E40
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_E44
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_E24

loc_E40:				; CODE XREF: _cms_main+DF0j
		xor	eax, eax
		jmp	short loc_E49
; ---------------------------------------------------------------------------

loc_E44:				; CODE XREF: _cms_main+DECj
					; _cms_main+DF8j
		sbb	eax, eax
		or	eax, 1

loc_E49:				; CODE XREF: _cms_main+E06j
		test	eax, eax
		jnz	short loc_E58
		or	ebx, 1000h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_E58:				; CODE XREF: _cms_main+E0Fj
		mov	ecx, offset ??_C@_06MPPEKNN@?9indef?$AA@ ; "-indef"
		mov	eax, esi

loc_E5F:				; CODE XREF: _cms_main+E3Dj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_E7F
		test	dl, dl
		jz	short loc_E7B
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_E7F
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_E5F

loc_E7B:				; CODE XREF: _cms_main+E2Bj
		xor	eax, eax
		jmp	short loc_E84
; ---------------------------------------------------------------------------

loc_E7F:				; CODE XREF: _cms_main+E27j
					; _cms_main+E33j
		sbb	eax, eax
		or	eax, 1

loc_E84:				; CODE XREF: _cms_main+E41j
		test	eax, eax
		jnz	short loc_E93
		or	ebx, 1000h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_E93:				; CODE XREF: _cms_main+E4Aj
		mov	ecx, offset ??_C@_08BCNBDCCA@?9noindef?$AA@ ; "-noindef"
		mov	eax, esi
		xchg	ax, ax

loc_E9C:				; CODE XREF: _cms_main+E7Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_EBC
		test	dl, dl
		jz	short loc_EB8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_EBC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_E9C

loc_EB8:				; CODE XREF: _cms_main+E68j
		xor	eax, eax
		jmp	short loc_EC1
; ---------------------------------------------------------------------------

loc_EBC:				; CODE XREF: _cms_main+E64j
					; _cms_main+E70j
		sbb	eax, eax
		or	eax, 1

loc_EC1:				; CODE XREF: _cms_main+E7Ej
		test	eax, eax
		jnz	short loc_ED0
		and	ebx, 0FFFFEFFFh
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_ED0:				; CODE XREF: _cms_main+E87j
		mov	ecx, offset ??_C@_0L@DMDFODFL@?9nooldmime?$AA@ ; "-nooldmime"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_EDC:				; CODE XREF: _cms_main+EBAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_EFC
		test	dl, dl
		jz	short loc_EF8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_EFC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_EDC

loc_EF8:				; CODE XREF: _cms_main+EA8j
		xor	eax, eax
		jmp	short loc_F01
; ---------------------------------------------------------------------------

loc_EFC:				; CODE XREF: _cms_main+EA4j
					; _cms_main+EB0j
		sbb	eax, eax
		or	eax, 1

loc_F01:				; CODE XREF: _cms_main+EBEj
		test	eax, eax
		jnz	short loc_F10
		or	ebx, 400h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_F10:				; CODE XREF: _cms_main+EC7j
		mov	ecx, offset ??_C@_08KAKEAKLE@?9crlfeol?$AA@ ; "-crlfeol"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_F1C:				; CODE XREF: _cms_main+EFAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_F3C
		test	dl, dl
		jz	short loc_F38
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_F3C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_F1C

loc_F38:				; CODE XREF: _cms_main+EE8j
		xor	eax, eax
		jmp	short loc_F41
; ---------------------------------------------------------------------------

loc_F3C:				; CODE XREF: _cms_main+EE4j
					; _cms_main+EF0j
		sbb	eax, eax
		or	eax, 1

loc_F41:				; CODE XREF: _cms_main+EFEj
		test	eax, eax
		jnz	short loc_F50
		or	ebx, 800h
		jmp	loc_1C86
; ---------------------------------------------------------------------------

loc_F50:				; CODE XREF: _cms_main+F07j
		mov	ecx, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_F5C:				; CODE XREF: _cms_main+F3Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_F7C
		test	dl, dl
		jz	short loc_F78
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_F7C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_F5C

loc_F78:				; CODE XREF: _cms_main+F28j
		xor	eax, eax
		jmp	short loc_F81
; ---------------------------------------------------------------------------

loc_F7C:				; CODE XREF: _cms_main+F24j
					; _cms_main+F30j
		sbb	eax, eax
		or	eax, 1

loc_F81:				; CODE XREF: _cms_main+F3Ej
		test	eax, eax
		jnz	short loc_F95
		mov	[esp+118h+var_58], 1
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_F95:				; CODE XREF: _cms_main+F47j
		mov	ecx, offset ??_C@_0BH@KMOFCJIF@?9receipt_request_print?$AA@ ; "-receipt_request_print"
		mov	eax, esi

loc_F9C:				; CODE XREF: _cms_main+F7Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_FBC
		test	dl, dl
		jz	short loc_FB8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_FBC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_F9C

loc_FB8:				; CODE XREF: _cms_main+F68j
		xor	eax, eax
		jmp	short loc_FC1
; ---------------------------------------------------------------------------

loc_FBC:				; CODE XREF: _cms_main+F64j
					; _cms_main+F70j
		sbb	eax, eax
		or	eax, 1

loc_FC1:				; CODE XREF: _cms_main+F7Ej
		test	eax, eax
		jnz	short loc_FD5
		mov	[esp+118h+var_24], 1
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_FD5:				; CODE XREF: _cms_main+F87j
		mov	ecx, offset ??_C@_0BF@EKJIDKJC@?9receipt_request_all?$AA@ ; "-receipt_request_all"
		mov	eax, esi

loc_FDC:				; CODE XREF: _cms_main+FBAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_FFC
		test	dl, dl
		jz	short loc_FF8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_FFC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_FDC

loc_FF8:				; CODE XREF: _cms_main+FA8j
		xor	eax, eax
		jmp	short loc_1001
; ---------------------------------------------------------------------------

loc_FFC:				; CODE XREF: _cms_main+FA4j
					; _cms_main+FB0j
		sbb	eax, eax
		or	eax, 1

loc_1001:				; CODE XREF: _cms_main+FBEj
		test	eax, eax
		jnz	short loc_1011
		mov	[esp+118h+var_8C], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1011:				; CODE XREF: _cms_main+FC7j
		mov	ecx, offset ??_C@_0BH@PNLMIOCN@?9receipt_request_first?$AA@ ; "-receipt_request_first"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_101C:				; CODE XREF: _cms_main+FFAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_103C
		test	dl, dl
		jz	short loc_1038
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_103C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_101C

loc_1038:				; CODE XREF: _cms_main+FE8j
		xor	eax, eax
		jmp	short loc_1041
; ---------------------------------------------------------------------------

loc_103C:				; CODE XREF: _cms_main+FE4j
					; _cms_main+FF0j
		sbb	eax, eax
		or	eax, 1

loc_1041:				; CODE XREF: _cms_main+FFEj
		test	eax, eax
		jnz	short loc_1055
		mov	[esp+118h+var_8C], 1
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1055:				; CODE XREF: _cms_main+1007j
		mov	ecx, offset ??_C@_0BG@MOLIDNFN@?9receipt_request_from?$AA@ ; "-receipt_request_from"
		mov	eax, esi

loc_105C:				; CODE XREF: _cms_main+103Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_107C
		test	dl, dl
		jz	short loc_1078
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_107C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_105C

loc_1078:				; CODE XREF: _cms_main+1028j
		xor	eax, eax
		jmp	short loc_1081
; ---------------------------------------------------------------------------

loc_107C:				; CODE XREF: _cms_main+1024j
					; _cms_main+1030j
		sbb	eax, eax
		or	eax, 1

loc_1081:				; CODE XREF: _cms_main+103Ej
		test	eax, eax
		jnz	short loc_10C1
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		cmp	[esp+118h+var_C0], 0
		mov	[esp+118h+var_108], eax
		jnz	short loc_10AA
		call	_sk_new_null
		mov	[esp+118h+var_C0], eax
		mov	eax, [esp+118h+var_108]

loc_10AA:				; CODE XREF: _cms_main+105Fj
		push	dword ptr [eax]
		push	[esp+11Ch+var_C0]
		call	_sk_push
		mov	ebp, [esp+120h+var_108]
		add	esp, 8
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_10C1:				; CODE XREF: _cms_main+1047j
		mov	ecx, offset ??_C@_0BE@DCFLMMEP@?9receipt_request_to?$AA@ ; "-receipt_request_to"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_10CC:				; CODE XREF: _cms_main+10AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_10EC
		test	dl, dl
		jz	short loc_10E8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_10EC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_10CC

loc_10E8:				; CODE XREF: _cms_main+1098j
		xor	eax, eax
		jmp	short loc_10F1
; ---------------------------------------------------------------------------

loc_10EC:				; CODE XREF: _cms_main+1094j
					; _cms_main+10A0j
		sbb	eax, eax
		or	eax, 1

loc_10F1:				; CODE XREF: _cms_main+10AEj
		test	eax, eax
		jnz	short loc_1131
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		cmp	[esp+118h+var_C4], 0
		mov	[esp+118h+var_108], eax
		jnz	short loc_111A
		call	_sk_new_null
		mov	[esp+118h+var_C4], eax
		mov	eax, [esp+118h+var_108]

loc_111A:				; CODE XREF: _cms_main+10CFj
		push	dword ptr [eax]
		push	[esp+11Ch+var_C4]
		call	_sk_push
		mov	ebp, [esp+120h+var_108]
		add	esp, 8
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1131:				; CODE XREF: _cms_main+10B7j
		mov	ecx, offset ??_C@_06LPNCEOC@?9print?$AA@ ; "-print"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_113C:				; CODE XREF: _cms_main+111Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_115C
		test	dl, dl
		jz	short loc_1158
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_115C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_113C

loc_1158:				; CODE XREF: _cms_main+1108j
		xor	eax, eax
		jmp	short loc_1161
; ---------------------------------------------------------------------------

loc_115C:				; CODE XREF: _cms_main+1104j
					; _cms_main+1110j
		sbb	eax, eax
		or	eax, 1

loc_1161:				; CODE XREF: _cms_main+111Ej
		test	eax, eax
		jnz	short loc_1180
		mov	[esp+118h+var_58], 1
		mov	[esp+118h+var_1C], 1
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1180:				; CODE XREF: _cms_main+1127j
		mov	ecx, offset ??_C@_0L@PPMEHDHJ@?9secretkey?$AA@ ; "-secretkey"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_118C:				; CODE XREF: _cms_main+116Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_11AC
		test	dl, dl
		jz	short loc_11A8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_11AC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_118C

loc_11A8:				; CODE XREF: _cms_main+1158j
		xor	eax, eax
		jmp	short loc_11B1
; ---------------------------------------------------------------------------

loc_11AC:				; CODE XREF: _cms_main+1154j
					; _cms_main+1160j
		sbb	eax, eax
		or	eax, 1

loc_11B1:				; CODE XREF: _cms_main+116Ej
		test	eax, eax
		jnz	short loc_11F8
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		lea	ecx, [esp+118h+var_8]
		mov	[esp+118h+var_108], eax
		push	ecx
		push	dword ptr [eax]
		call	_string_to_hex
		add	esp, 8
		mov	[esp+118h+var_F0], eax
		test	eax, eax
		jz	loc_1CD5
		mov	eax, [esp+118h+var_8]
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_A8], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_11F8:				; CODE XREF: _cms_main+1177j
		mov	ecx, offset ??_C@_0N@HBGGEDPB@?9secretkeyid?$AA@ ; "-secretkeyid"
		mov	eax, esi

loc_11FF:				; CODE XREF: _cms_main+11DDj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_121F
		test	dl, dl
		jz	short loc_121B
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_121F
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_11FF

loc_121B:				; CODE XREF: _cms_main+11CBj
		xor	eax, eax
		jmp	short loc_1224
; ---------------------------------------------------------------------------

loc_121F:				; CODE XREF: _cms_main+11C7j
					; _cms_main+11D3j
		sbb	eax, eax
		or	eax, 1

loc_1224:				; CODE XREF: _cms_main+11E1j
		test	eax, eax
		jnz	short loc_126E
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		lea	ecx, [esp+118h+var_4]
		mov	[esp+118h+var_108], eax
		push	ecx
		push	dword ptr [eax]
		call	_string_to_hex
		add	esp, 8
		mov	[esp+118h+var_B4], eax
		test	eax, eax
		jz	loc_1CF3
		mov	eax, [esp+118h+var_4]
		mov	ebp, [esp+118h+var_108]
		mov	[esp+118h+var_5C], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_126E:				; CODE XREF: _cms_main+11EAj
		mov	ecx, offset ??_C@_0P@BIHPAMDO@?9pwri_password?$AA@ ; "-pwri_password"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_127C:				; CODE XREF: _cms_main+125Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_129C
		test	dl, dl
		jz	short loc_1298
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_129C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_127C

loc_1298:				; CODE XREF: _cms_main+1248j
		xor	eax, eax
		jmp	short loc_12A1
; ---------------------------------------------------------------------------

loc_129C:				; CODE XREF: _cms_main+1244j
					; _cms_main+1250j
		sbb	eax, eax
		or	eax, 1

loc_12A1:				; CODE XREF: _cms_main+125Ej
		test	eax, eax
		jnz	short loc_12C1
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_AC], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_12C1:				; CODE XREF: _cms_main+1267j
		mov	ecx, offset ??_C@_0P@CABCOKCI@?9econtent_type?$AA@ ; "-econtent_type"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_12CC:				; CODE XREF: _cms_main+12AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_12EC
		test	dl, dl
		jz	short loc_12E8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_12EC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_12CC

loc_12E8:				; CODE XREF: _cms_main+1298j
		xor	eax, eax
		jmp	short loc_12F1
; ---------------------------------------------------------------------------

loc_12EC:				; CODE XREF: _cms_main+1294j
					; _cms_main+12A0j
		sbb	eax, eax
		or	eax, 1

loc_12F1:				; CODE XREF: _cms_main+12AEj
		test	eax, eax
		jnz	short loc_132A
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		mov	[esp+118h+var_108], eax
		push	0
		push	dword ptr [eax]
		call	_OBJ_txt2obj
		add	esp, 8
		mov	[esp+118h+var_4C], eax
		test	eax, eax
		jz	loc_1D11
		mov	ebp, [esp+118h+var_108]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_132A:				; CODE XREF: _cms_main+12B7j
		mov	ecx, offset ??_C@_05LGFPCDPE@?9rand?$AA@ ; "-rand"
		mov	eax, esi

loc_1331:				; CODE XREF: _cms_main+130Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1351
		test	dl, dl
		jz	short loc_134D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1351
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1331

loc_134D:				; CODE XREF: _cms_main+12FDj
		xor	eax, eax
		jmp	short loc_1356
; ---------------------------------------------------------------------------

loc_1351:				; CODE XREF: _cms_main+12F9j
					; _cms_main+1305j
		sbb	eax, eax
		or	eax, 1

loc_1356:				; CODE XREF: _cms_main+1313j
		test	eax, eax
		jnz	short loc_1381
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_38], eax
		mov	[esp+118h+var_C8], 1
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1381:				; CODE XREF: _cms_main+131Cj
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_138C:				; CODE XREF: _cms_main+136Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_13AC
		test	dl, dl
		jz	short loc_13A8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_13AC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_138C

loc_13A8:				; CODE XREF: _cms_main+1358j
		xor	eax, eax
		jmp	short loc_13B1
; ---------------------------------------------------------------------------

loc_13AC:				; CODE XREF: _cms_main+1354j
					; _cms_main+1360j
		sbb	eax, eax
		or	eax, 1

loc_13B1:				; CODE XREF: _cms_main+136Ej
		test	eax, eax
		jnz	short loc_13D4
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_40], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_13D4:				; CODE XREF: _cms_main+1377j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, esi
		nop

loc_13DC:				; CODE XREF: _cms_main+13BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_13FC
		test	dl, dl
		jz	short loc_13F8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_13FC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_13DC

loc_13F8:				; CODE XREF: _cms_main+13A8j
		xor	eax, eax
		jmp	short loc_1401
; ---------------------------------------------------------------------------

loc_13FC:				; CODE XREF: _cms_main+13A4j
					; _cms_main+13B0j
		sbb	eax, eax
		or	eax, 1

loc_1401:				; CODE XREF: _cms_main+13BEj
		test	eax, eax
		jnz	short loc_1424
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_3C], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1424:				; CODE XREF: _cms_main+13C7j
		mov	ecx, offset ??_C@_03DNHOOAOE@?9to?$AA@ ; "-to"
		mov	eax, esi
		nop

loc_142C:				; CODE XREF: _cms_main+140Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_144C
		test	dl, dl
		jz	short loc_1448
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_144C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_142C

loc_1448:				; CODE XREF: _cms_main+13F8j
		xor	eax, eax
		jmp	short loc_1451
; ---------------------------------------------------------------------------

loc_144C:				; CODE XREF: _cms_main+13F4j
					; _cms_main+1400j
		sbb	eax, eax
		or	eax, 1

loc_1451:				; CODE XREF: _cms_main+140Ej
		test	eax, eax
		jnz	short loc_1474
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_18], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1474:				; CODE XREF: _cms_main+1417j
		mov	ecx, offset ??_C@_05LBJDDLLJ@?9from?$AA@ ; "-from"
		mov	eax, esi
		nop

loc_147C:				; CODE XREF: _cms_main+145Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_149C
		test	dl, dl
		jz	short loc_1498
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_149C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_147C

loc_1498:				; CODE XREF: _cms_main+1448j
		xor	eax, eax
		jmp	short loc_14A1
; ---------------------------------------------------------------------------

loc_149C:				; CODE XREF: _cms_main+1444j
					; _cms_main+1450j
		sbb	eax, eax
		or	eax, 1

loc_14A1:				; CODE XREF: _cms_main+145Ej
		test	eax, eax
		jnz	short loc_14C4
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_14], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_14C4:				; CODE XREF: _cms_main+1467j
		mov	ecx, offset ??_C@_08GNEDOIFN@?9subject?$AA@ ; "-subject"
		mov	eax, esi
		nop

loc_14CC:				; CODE XREF: _cms_main+14AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_14EC
		test	dl, dl
		jz	short loc_14E8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_14EC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_14CC

loc_14E8:				; CODE XREF: _cms_main+1498j
		xor	eax, eax
		jmp	short loc_14F1
; ---------------------------------------------------------------------------

loc_14EC:				; CODE XREF: _cms_main+1494j
					; _cms_main+14A0j
		sbb	eax, eax
		or	eax, 1

loc_14F1:				; CODE XREF: _cms_main+14AEj
		test	eax, eax
		jnz	short loc_1514
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_10], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1514:				; CODE XREF: _cms_main+14B7j
		mov	ecx, offset ??_C@_07KJCLPKOH@?9signer?$AA@ ; "-signer"
		mov	eax, esi
		nop

loc_151C:				; CODE XREF: _cms_main+14FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_153C
		test	dl, dl
		jz	short loc_1538
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_153C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_151C

loc_1538:				; CODE XREF: _cms_main+14E8j
		xor	eax, eax
		jmp	short loc_1541
; ---------------------------------------------------------------------------

loc_153C:				; CODE XREF: _cms_main+14E4j
					; _cms_main+14F0j
		sbb	eax, eax
		or	eax, 1

loc_1541:				; CODE XREF: _cms_main+14FEj
		test	eax, eax
		jnz	short loc_15B4
		cmp	[ebp+4], eax
		jz	$argerr$943
		mov	esi, [esp+118h+var_E0]
		test	esi, esi
		jz	short loc_15A1
		mov	eax, [esp+118h+var_D8]
		test	eax, eax
		jnz	short loc_1567
		call	_sk_new_null
		mov	[esp+118h+var_D8], eax

loc_1567:				; CODE XREF: _cms_main+1520j
		push	esi
		push	eax
		call	_sk_push
		mov	ebp, [esp+120h+var_100]
		add	esp, 8
		mov	eax, [esp+118h+var_D4]
		test	ebp, ebp
		cmovz	ebp, esi
		test	eax, eax
		jnz	short loc_158B
		call	_sk_new_null
		mov	[esp+118h+var_D4], eax

loc_158B:				; CODE XREF: _cms_main+1544j
		push	ebp
		push	eax
		call	_sk_push
		mov	ebp, [esp+120h+var_108]
		add	esp, 8
		mov	[esp+118h+var_100], 0

loc_15A1:				; CODE XREF: _cms_main+1518j
		add	ebp, 4
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_E0], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_15B4:				; CODE XREF: _cms_main+1507j
		mov	ecx, offset ??_C@_06JKGLPNJO@?9recip?$AA@ ; "-recip"
		mov	eax, esi
		nop

loc_15BC:				; CODE XREF: _cms_main+159Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_15DC
		test	dl, dl
		jz	short loc_15D8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_15DC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_15BC

loc_15D8:				; CODE XREF: _cms_main+1588j
		xor	eax, eax
		jmp	short loc_15E1
; ---------------------------------------------------------------------------

loc_15DC:				; CODE XREF: _cms_main+1584j
					; _cms_main+1590j
		sbb	eax, eax
		or	eax, 1

loc_15E1:				; CODE XREF: _cms_main+159Ej
		test	eax, eax
		jnz	loc_166E
		cmp	[ebp+4], eax
		jz	$argerr$943
		cmp	edi, 11h
		jnz	short loc_1658
		mov	esi, [esp+118h+var_DC]
		test	esi, esi
		jnz	short loc_160E
		call	_sk_new_null
		mov	ebp, [esp+118h+var_108]
		mov	esi, eax
		mov	[esp+118h+var_DC], esi

loc_160E:				; CODE XREF: _cms_main+15C1j
		push	offset ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ ; "recipient certificate file"
		push	0
		add	ebp, 4
		push	0
		push	3
		mov	[esp+128h+var_108], ebp
		push	dword ptr [ebp+0]
		push	dword ptr ds:_bio_err
		call	_load_cert
		add	esp, 18h
		mov	[esp+118h+var_A0], eax
		test	eax, eax
		jz	loc_228A
		push	eax
		push	esi
		call	_sk_push
		mov	ebp, [esp+120h+var_108]
		add	esp, 8
		mov	[esp+118h+var_A0], 0
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1658:				; CODE XREF: _cms_main+15B9j
		add	ebp, 4
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_98], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_166E:				; CODE XREF: _cms_main+15A7j
		mov	ecx, offset ??_C@_09HECJOJIB@?9certsout?$AA@ ; "-certsout"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_167C:				; CODE XREF: _cms_main+165Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_169C
		test	dl, dl
		jz	short loc_1698
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_169C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_167C

loc_1698:				; CODE XREF: _cms_main+1648j
		xor	eax, eax
		jmp	short loc_16A1
; ---------------------------------------------------------------------------

loc_169C:				; CODE XREF: _cms_main+1644j
					; _cms_main+1650j
		sbb	eax, eax
		or	eax, 1

loc_16A1:				; CODE XREF: _cms_main+165Ej
		test	eax, eax
		jnz	short loc_16C4
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_90], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_16C4:				; CODE XREF: _cms_main+1667j
		mov	ecx, offset ??_C@_03MNHNKBNA@?9md?$AA@ ; `string'
		mov	eax, esi
		nop

loc_16CC:				; CODE XREF: _cms_main+16AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_16EC
		test	dl, dl
		jz	short loc_16E8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_16EC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_16CC

loc_16E8:				; CODE XREF: _cms_main+1698j
		xor	eax, eax
		jmp	short loc_16F1
; ---------------------------------------------------------------------------

loc_16EC:				; CODE XREF: _cms_main+1694j
					; _cms_main+16A0j
		sbb	eax, eax
		or	eax, 1

loc_16F1:				; CODE XREF: _cms_main+16AEj
		test	eax, eax
		jnz	short loc_1728
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		mov	[esp+118h+var_108], eax
		push	dword ptr [eax]
		call	_EVP_get_digestbyname
		add	esp, 4
		mov	[esp+118h+var_60], eax
		test	eax, eax
		jz	loc_1D2F
		mov	ebp, [esp+118h+var_108]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1728:				; CODE XREF: _cms_main+16B7j
		mov	ecx, offset ??_C@_06JJMGFEBF@?9inkey?$AA@ ; "-inkey"
		mov	eax, esi

loc_172F:				; CODE XREF: _cms_main+170Dj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_174F
		test	dl, dl
		jz	short loc_174B
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_174F
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_172F

loc_174B:				; CODE XREF: _cms_main+16FBj
		xor	eax, eax
		jmp	short loc_1754
; ---------------------------------------------------------------------------

loc_174F:				; CODE XREF: _cms_main+16F7j
					; _cms_main+1703j
		sbb	eax, eax
		or	eax, 1

loc_1754:				; CODE XREF: _cms_main+1711j
		test	eax, eax
		jnz	short loc_17CA
		cmp	[ebp+4], eax
		jz	$argerr$943
		mov	esi, [esp+118h+var_100]
		test	esi, esi
		jz	short loc_17B7
		mov	ebp, [esp+118h+var_E0]
		test	ebp, ebp
		jz	loc_1DF8
		mov	eax, [esp+118h+var_D8]
		test	eax, eax
		jnz	short loc_1786
		call	_sk_new_null
		mov	[esp+118h+var_D8], eax

loc_1786:				; CODE XREF: _cms_main+173Fj
		push	ebp
		push	eax
		call	_sk_push
		mov	eax, [esp+120h+var_D4]
		add	esp, 8
		mov	[esp+118h+var_E0], 0
		test	eax, eax
		jnz	short loc_17A9
		call	_sk_new_null
		mov	[esp+118h+var_D4], eax

loc_17A9:				; CODE XREF: _cms_main+1762j
		push	esi
		push	eax
		call	_sk_push
		mov	ebp, [esp+120h+var_108]
		add	esp, 8

loc_17B7:				; CODE XREF: _cms_main+172Bj
		add	ebp, 4
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_100], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_17CA:				; CODE XREF: _cms_main+171Aj
		mov	ecx, offset ??_C@_08OAHLMBGP@?9keyform?$AA@ ; "-keyform"
		mov	eax, esi

loc_17D1:				; CODE XREF: _cms_main+17AFj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_17F1
		test	dl, dl
		jz	short loc_17ED
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_17F1
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_17D1

loc_17ED:				; CODE XREF: _cms_main+179Dj
		xor	eax, eax
		jmp	short loc_17F6
; ---------------------------------------------------------------------------

loc_17F1:				; CODE XREF: _cms_main+1799j
					; _cms_main+17A5j
		sbb	eax, eax
		or	eax, 1

loc_17F6:				; CODE XREF: _cms_main+17B3j
		test	eax, eax
		jnz	short loc_1825
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		mov	[esp+118h+var_108], eax
		push	dword ptr [eax]
		call	_str2fmt
		mov	ebp, [esp+11Ch+var_108]
		add	esp, 4
		mov	[esp+118h+var_64], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1825:				; CODE XREF: _cms_main+17BCj
		mov	ecx, offset ??_C@_07KBADGAKO@?9keyopt?$AA@ ; "-keyopt"
		mov	eax, esi

loc_182C:				; CODE XREF: _cms_main+180Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_184C
		test	dl, dl
		jz	short loc_1848
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_184C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_182C

loc_1848:				; CODE XREF: _cms_main+17F8j
		xor	eax, eax
		jmp	short loc_1851
; ---------------------------------------------------------------------------

loc_184C:				; CODE XREF: _cms_main+17F4j
					; _cms_main+1800j
		sbb	eax, eax
		or	eax, 1

loc_1851:				; CODE XREF: _cms_main+180Ej
		test	eax, eax
		jnz	loc_1930
		or	edi, 0FFFFFFFFh
		cmp	[ebp+4], eax
		jz	$argerr$943
		cmp	[esp+118h+var_F4], 11h
		jnz	short loc_1886
		mov	eax, [esp+118h+var_DC]
		test	eax, eax
		jz	loc_1D65
		push	eax
		call	_sk_num
		add	esp, 4
		lea	edi, [eax-1]
		jmp	short loc_18A9
; ---------------------------------------------------------------------------

loc_1886:				; CODE XREF: _cms_main+182Ej
		cmp	[esp+118h+var_100], 0
		jnz	short loc_1894
		cmp	[esp+118h+var_E0], 0
		jz	short loc_1896

loc_1894:				; CODE XREF: _cms_main+184Fj
		xor	edi, edi

loc_1896:				; CODE XREF: _cms_main+1856j
		mov	eax, [esp+118h+var_D4]
		test	eax, eax
		jz	short loc_18AD
		push	eax
		call	_sk_num
		add	esp, 4
		add	edi, eax

loc_18A9:				; CODE XREF: _cms_main+1848j
		mov	ebp, [esp+118h+var_108]

loc_18AD:				; CODE XREF: _cms_main+1860j
		test	edi, edi
		js	loc_1D65
		mov	eax, [esp+118h+var_FC]
		test	eax, eax
		jz	short loc_18C1
		cmp	[eax], edi
		jz	short loc_190E

loc_18C1:				; CODE XREF: _cms_main+187Fj
		push	1D1h
		push	offset ??_C@_0N@DLDDGBEE@?4?2apps?2cms?4c?$AA@ ; ".\\apps\\cms.c"
		push	0Ch
		call	_CRYPTO_malloc
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jz	loc_1D4D
		mov	[esi], edi
		call	_sk_new_null
		cmp	[esp+118h+var_A4], 0
		mov	[esi+4], eax
		mov	dword ptr [esi+8], 0
		jnz	short loc_18FD
		mov	[esp+118h+var_A4], esi
		jmp	short loc_1904
; ---------------------------------------------------------------------------

loc_18FD:				; CODE XREF: _cms_main+18B9j
		mov	eax, [esp+118h+var_FC]
		mov	[eax+8], esi

loc_1904:				; CODE XREF: _cms_main+18BFj
		mov	ebp, [esp+118h+var_108]
		mov	eax, esi
		mov	[esp+118h+var_FC], eax

loc_190E:				; CODE XREF: _cms_main+1883j
		add	ebp, 4
		mov	[esp+118h+var_108], ebp
		push	dword ptr [ebp+0]
		push	dword ptr [eax+4]
		call	_sk_push
		mov	ebp, [esp+120h+var_108]
		add	esp, 8
		mov	edi, [esp+118h+var_F4]
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1930:				; CODE XREF: _cms_main+1817j
		mov	ecx, offset ??_C@_08FMMBMNIL@?9rctform?$AA@ ; "-rctform"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_193C:				; CODE XREF: _cms_main+191Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_195C
		test	dl, dl
		jz	short loc_1958
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_195C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_193C

loc_1958:				; CODE XREF: _cms_main+1908j
		xor	eax, eax
		jmp	short loc_1961
; ---------------------------------------------------------------------------

loc_195C:				; CODE XREF: _cms_main+1904j
					; _cms_main+1910j
		sbb	eax, eax
		or	eax, 1

loc_1961:				; CODE XREF: _cms_main+191Ej
		test	eax, eax
		jnz	short loc_1990
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		mov	[esp+118h+var_108], eax
		push	dword ptr [eax]
		call	_str2fmt
		mov	ebp, [esp+11Ch+var_108]
		add	esp, 4
		mov	[esp+118h+var_6C], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1990:				; CODE XREF: _cms_main+1927j
		mov	ecx, offset ??_C@_09LJGMBFEA@?9certfile?$AA@ ; "-certfile"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_199C:				; CODE XREF: _cms_main+197Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_19BC
		test	dl, dl
		jz	short loc_19B8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_19BC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_199C

loc_19B8:				; CODE XREF: _cms_main+1968j
		xor	eax, eax
		jmp	short loc_19C1
; ---------------------------------------------------------------------------

loc_19BC:				; CODE XREF: _cms_main+1964j
					; _cms_main+1970j
		sbb	eax, eax
		or	eax, 1

loc_19C1:				; CODE XREF: _cms_main+197Ej
		test	eax, eax
		jnz	short loc_19E4
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_34], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_19E4:				; CODE XREF: _cms_main+1987j
		mov	ecx, offset ??_C@_07EAFCHGPO@?9CAfile?$AA@ ; "-CAfile"
		mov	eax, esi
		nop

loc_19EC:				; CODE XREF: _cms_main+19CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1A0C
		test	dl, dl
		jz	short loc_1A08
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1A0C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_19EC

loc_1A08:				; CODE XREF: _cms_main+19B8j
		xor	eax, eax
		jmp	short loc_1A11
; ---------------------------------------------------------------------------

loc_1A0C:				; CODE XREF: _cms_main+19B4j
					; _cms_main+19C0j
		sbb	eax, eax
		or	eax, 1

loc_1A11:				; CODE XREF: _cms_main+19CEj
		test	eax, eax
		jnz	short loc_1A34
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_28], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1A34:				; CODE XREF: _cms_main+19D7j
		mov	ecx, offset ??_C@_07MNNNLALG@?9CApath?$AA@ ; "-CApath"
		mov	eax, esi
		nop

loc_1A3C:				; CODE XREF: _cms_main+1A1Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1A5C
		test	dl, dl
		jz	short loc_1A58
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1A5C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1A3C

loc_1A58:				; CODE XREF: _cms_main+1A08j
		xor	eax, eax
		jmp	short loc_1A61
; ---------------------------------------------------------------------------

loc_1A5C:				; CODE XREF: _cms_main+1A04j
					; _cms_main+1A10j
		sbb	eax, eax
		or	eax, 1

loc_1A61:				; CODE XREF: _cms_main+1A1Ej
		test	eax, eax
		jnz	short loc_1A84
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_2C], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1A84:				; CODE XREF: _cms_main+1A27j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; "-in"
		mov	eax, esi
		nop

loc_1A8C:				; CODE XREF: _cms_main+1A6Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1AAC
		test	dl, dl
		jz	short loc_1AA8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1AAC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1A8C

loc_1AA8:				; CODE XREF: _cms_main+1A58j
		xor	eax, eax
		jmp	short loc_1AB1
; ---------------------------------------------------------------------------

loc_1AAC:				; CODE XREF: _cms_main+1A54j
					; _cms_main+1A60j
		sbb	eax, eax
		or	eax, 1

loc_1AB1:				; CODE XREF: _cms_main+1A6Ej
		test	eax, eax
		jnz	short loc_1AD4
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_78], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1AD4:				; CODE XREF: _cms_main+1A77j
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, esi
		nop

loc_1ADC:				; CODE XREF: _cms_main+1ABAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1AFC
		test	dl, dl
		jz	short loc_1AF8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1AFC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1ADC

loc_1AF8:				; CODE XREF: _cms_main+1AA8j
		xor	eax, eax
		jmp	short loc_1B01
; ---------------------------------------------------------------------------

loc_1AFC:				; CODE XREF: _cms_main+1AA4j
					; _cms_main+1AB0j
		sbb	eax, eax
		or	eax, 1

loc_1B01:				; CODE XREF: _cms_main+1ABEj
		test	eax, eax
		jnz	short loc_1B30
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		mov	[esp+118h+var_108], eax
		push	dword ptr [eax]
		call	_str2fmt
		mov	ebp, [esp+11Ch+var_108]
		add	esp, 4
		mov	[esp+118h+var_74], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1B30:				; CODE XREF: _cms_main+1AC7j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_1B3C:				; CODE XREF: _cms_main+1B1Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1B5C
		test	dl, dl
		jz	short loc_1B58
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1B5C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1B3C

loc_1B58:				; CODE XREF: _cms_main+1B08j
		xor	eax, eax
		jmp	short loc_1B61
; ---------------------------------------------------------------------------

loc_1B5C:				; CODE XREF: _cms_main+1B04j
					; _cms_main+1B10j
		sbb	eax, eax
		or	eax, 1

loc_1B61:				; CODE XREF: _cms_main+1B1Ej
		test	eax, eax
		jnz	short loc_1B90
		cmp	dword ptr [ebp+4], 0
		lea	eax, [ebp+4]
		jz	$argerr$943
		mov	[esp+118h+var_108], eax
		push	dword ptr [eax]
		call	_str2fmt
		mov	ebp, [esp+11Ch+var_108]
		add	esp, 4
		mov	[esp+118h+var_88], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1B90:				; CODE XREF: _cms_main+1B27j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_1B9C:				; CODE XREF: _cms_main+1B7Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1BBC
		test	dl, dl
		jz	short loc_1BB8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1BBC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1B9C

loc_1BB8:				; CODE XREF: _cms_main+1B68j
		xor	eax, eax
		jmp	short loc_1BC1
; ---------------------------------------------------------------------------

loc_1BBC:				; CODE XREF: _cms_main+1B64j
					; _cms_main+1B70j
		sbb	eax, eax
		or	eax, 1

loc_1BC1:				; CODE XREF: _cms_main+1B7Ej
		test	eax, eax
		jnz	short loc_1BE4
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_30], eax
		jmp	loc_1C8A
; ---------------------------------------------------------------------------

loc_1BE4:				; CODE XREF: _cms_main+1B87j
		mov	eax, offset ??_C@_08HCJMGADN@?9content?$AA@ ; "-content"
		nop	dword ptr [eax]

loc_1BEC:				; CODE XREF: _cms_main+1BCAj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_1C0C
		test	cl, cl
		jz	short loc_1C08
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_1C0C
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_1BEC

loc_1C08:				; CODE XREF: _cms_main+1BB8j
		xor	eax, eax
		jmp	short loc_1C11
; ---------------------------------------------------------------------------

loc_1C0C:				; CODE XREF: _cms_main+1BB4j
					; _cms_main+1BC0j
		sbb	eax, eax
		or	eax, 1

loc_1C11:				; CODE XREF: _cms_main+1BCEj
		test	eax, eax
		jnz	short loc_1C31
		add	ebp, 4
		cmp	[ebp+0], eax
		jz	$argerr$943
		mov	[esp+118h+var_108], ebp
		mov	eax, [ebp+0]
		mov	[esp+118h+var_94], eax
		jmp	short loc_1C8A
; ---------------------------------------------------------------------------

loc_1C31:				; CODE XREF: _cms_main+1BD7j
		lea	eax, [esp+118h+var_54]
		push	eax
		push	dword ptr ds:_bio_err
		lea	eax, [esp+120h+var_CC]
		push	eax
		lea	eax, [esp+124h+var_108]
		push	0
		push	eax
		call	_args_verify
		add	esp, 14h
		test	eax, eax
		jnz	short loc_1C7D
		mov	eax, [esp+118h+var_108]
		mov	eax, [eax]
		inc	eax
		push	eax
		call	_EVP_get_cipherbyname
		mov	ebp, [esp+11Ch+var_108]
		add	esp, 4
		mov	[esp+118h+var_E8], eax
		test	eax, eax
		jnz	short loc_1C8A
		mov	[esp+118h+var_CC], 1
		jmp	short loc_1C8A
; ---------------------------------------------------------------------------

loc_1C7D:				; CODE XREF: _cms_main+1C19j
		mov	ebp, [esp+118h+var_108]
		jmp	short loc_1C91
; ---------------------------------------------------------------------------

loc_1C83:				; CODE XREF: _cms_main+B97j
					; _cms_main+BCBj
		or	ebx, 20h

loc_1C86:				; CODE XREF: _cms_main+AF1j
					; _cms_main+B2Cj ...
		mov	[esp+118h+var_F8], ebx

loc_1C8A:				; CODE XREF: _cms_main+264j
					; _cms_main+2A4j ...
		add	ebp, 4
		mov	[esp+118h+var_108], ebp

loc_1C91:				; CODE XREF: _cms_main+1C45j
		cmp	[esp+118h+var_CC], 0
		jz	loc_24C

loc_1C9C:				; CODE XREF: _cms_main+215j
					; _cms_main+21Ej
		cmp	[esp+118h+var_8C], 0FFFFFFFFh
		jnz	short loc_1CB1
		cmp	[esp+118h+var_C0], 0
		jz	loc_1D81

loc_1CB1:				; CODE XREF: _cms_main+1C68j
		mov	ecx, [esp+118h+var_C4]
		test	ecx, ecx
		jnz	loc_1D85
		push	offset ??_C@_0BP@IDBOPNLA@No?5Signed?5Receipts?5Recipients?6?$AA@ ; "No	Signed Receipts	Recipients\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1CD5:				; CODE XREF: _cms_main+11A2j
		mov	eax, [esp+118h+var_108]
		push	dword ptr [eax]
		push	offset ??_C@_0BA@FAKPIIIA@Invalid?5key?5?$CFs?6?$AA@ ; "Invalid	key %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1CF3:				; CODE XREF: _cms_main+1215j
		mov	eax, [esp+118h+var_108]
		push	dword ptr [eax]
		push	offset ??_C@_0P@ICPOFKNH@Invalid?5id?5?$CFs?6?$AA@ ; "Invalid id %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1D11:				; CODE XREF: _cms_main+12DFj
		mov	eax, [esp+118h+var_108]
		push	dword ptr [eax]
		push	offset ??_C@_0BA@JNGKKDLH@Invalid?5OID?5?$CFs?6?$AA@ ; "Invalid	OID %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1D2F:				; CODE XREF: _cms_main+16DDj
		mov	eax, [esp+118h+var_108]
		push	dword ptr [eax]
		push	offset ??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@	; "Unknown digest %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1D4D:				; CODE XREF: _cms_main+189Dj
		push	offset ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; "Out of memory\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1D65:				; CODE XREF: _cms_main+1836j
					; _cms_main+1873j
		push	offset ??_C@_0BC@BMIJEMOD@No?5key?5specified?6?$AA@ ; "No key specified\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1D7D:				; CODE XREF: _cms_main+208j
		xor	ecx, ecx
		jmp	short loc_1D89
; ---------------------------------------------------------------------------

loc_1D81:				; CODE XREF: _cms_main+1C6Fj
		mov	ecx, [esp+118h+var_C4]

loc_1D85:				; CODE XREF: _cms_main+1C7Bj
		mov	esi, [esp+118h+var_100]

loc_1D89:				; CODE XREF: _cms_main+1D43j
		mov	eax, [esp+118h+var_F4]
		mov	ebx, eax
		and	ebx, 40h
		jnz	short loc_1DB6
		test	ecx, ecx
		jnz	short loc_1D9E
		cmp	[esp+118h+var_C0], ecx
		jz	short loc_1DB6

loc_1D9E:				; CODE XREF: _cms_main+1D5Aj
		push	offset ??_C@_0CJ@KCIOHNGD@Signed?5receipts?5only?5allowed?5wit@	; "Signed receipts only	allowed	with -sign"...
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1DB6:				; CODE XREF: _cms_main+1D56j
					; _cms_main+1D60j
		test	ebx, ebx
		jnz	short loc_1DE0
		cmp	[esp+118h+var_D4], ebx
		jnz	short loc_1DC8
		mov	edi, [esp+118h+var_D8]
		test	edi, edi
		jz	short loc_1DE4

loc_1DC8:				; CODE XREF: _cms_main+1D82j
		push	offset ??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@ ; "Multiple signers or	keys not allowed\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1DE0:				; CODE XREF: _cms_main+1D7Cj
		mov	edi, [esp+118h+var_D8]

loc_1DE4:				; CODE XREF: _cms_main+1D8Aj
		test	ebx, ebx
		jz	loc_1E8A
		mov	ebp, [esp+118h+var_E0]
		test	esi, esi
		jz	short loc_1E10
		test	ebp, ebp
		jnz	short loc_1E14

loc_1DF8:				; CODE XREF: _cms_main+1733j
		push	offset ??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@ ; "Illegal -inkey without -signer\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	$argerr$943
; ---------------------------------------------------------------------------

loc_1E10:				; CODE XREF: _cms_main+1DB6j
		test	ebp, ebp
		jz	short loc_1E4D

loc_1E14:				; CODE XREF: _cms_main+1DBAj
		test	edi, edi
		jnz	short loc_1E23
		call	_sk_new_null
		mov	edi, eax
		mov	[esp+118h+var_D8], edi

loc_1E23:				; CODE XREF: _cms_main+1DDAj
		push	ebp
		push	edi
		call	_sk_push
		mov	eax, [esp+120h+var_D4]
		add	esp, 8
		test	eax, eax
		jnz	short loc_1E3E
		call	_sk_new_null
		mov	[esp+118h+var_D4], eax

loc_1E3E:				; CODE XREF: _cms_main+1DF7j
		test	esi, esi
		cmovz	esi, ebp
		push	esi
		push	eax
		call	_sk_push
		add	esp, 8

loc_1E4D:				; CODE XREF: _cms_main+1DD6j
		test	edi, edi
		jnz	short loc_1E6C
		push	offset ??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@	; "No signer certificate specified\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	[esp+118h+var_CC], 1

loc_1E6C:				; CODE XREF: _cms_main+1E13j
		mov	esi, 1
		mov	[esp+118h+var_E0], 0
		mov	[esp+118h+var_100], 0
		mov	[esp+118h+var_C8], esi
		jmp	loc_1F26
; ---------------------------------------------------------------------------

loc_1E8A:				; CODE XREF: _cms_main+1DAAj
		cmp	eax, 22h ; '"'
		jnz	short loc_1ECE
		cmp	[esp+118h+var_98], 0
		jnz	loc_1F22
		test	esi, esi
		jnz	loc_1F22
		cmp	[esp+118h+var_F0], esi
		jnz	short loc_1F22
		cmp	[esp+118h+var_AC], esi
		jnz	short loc_1F22
		push	offset ??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@ ; "No recipient certificate or	key specifi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	[esp+118h+var_CC], 1
		jmp	short $argerr$943
; ---------------------------------------------------------------------------

loc_1ECE:				; CODE XREF: _cms_main+1E51j
		cmp	eax, 11h
		jnz	short loc_1F14
		cmp	dword ptr [ebp+0], 0
		jnz	short loc_1F09
		cmp	[esp+118h+var_F0], 0
		jnz	short loc_1F09
		cmp	[esp+118h+var_AC], 0
		jnz	short loc_1F09
		cmp	[esp+118h+var_DC], 0
		jnz	short loc_1F09
		push	offset ??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@ ; "No recipient(s) certificate(s) specifie"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	[esp+118h+var_CC], 1

loc_1F09:				; CODE XREF: _cms_main+1E9Bj
					; _cms_main+1EA2j ...
		mov	esi, 1
		mov	[esp+118h+var_C8], esi
		jmp	short loc_1F26
; ---------------------------------------------------------------------------

loc_1F14:				; CODE XREF: _cms_main+1E95j
		test	eax, eax
		jnz	short loc_1F22
		mov	[esp+118h+var_CC], 1
		jmp	short $argerr$943
; ---------------------------------------------------------------------------

loc_1F22:				; CODE XREF: _cms_main+1E5Bj
					; _cms_main+1E63j ...
		mov	esi, [esp+118h+var_C8]

loc_1F26:				; CODE XREF: _cms_main+1E49j
					; _cms_main+1ED6j
		cmp	[esp+118h+var_CC], 0
		jz	loc_243C

$argerr$943:				; CODE XREF: _cms_main+427j
					; _cms_main+1050j ...
		push	offset ??_C@_0CC@JOICAPMG@Usage?5cms?5?$FLoptions?$FN?5cert?4pem?5?4?4?4@ ; "Usage cms [options] cert.pem ...\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@ ; "-encrypt	   encrypt message\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@ ; "-decrypt       decrypt encrypted messag"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@ ; "-sign	   sign	message\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@ ; "-verify	 verify	signed message\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CF@IGGOHCKF@?9cmsout?5?5?5?5?5?5?5?5output?5CMS?5struct@ ; "-cmsout	 output	CMS structure\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@ ; "-des3	   encrypt with	triple DES\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@ ; "-des	     encrypt with DES\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@ ; "-seed	   encrypt with	SEED\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ ; "-rc2-40	   encrypt with	RC2-40 (def"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ ; "-rc2-64	   encrypt with	RC2-64\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@	; "-rc2-128	  encrypt with RC2-128\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; "-aes128, -aes192, -aes256\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ ; "	       encrypt PEM output with "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@ ; "-camellia128, -camellia192, -camellia25"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ ; "	       encrypt PEM output with "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@ ;	"-nointern	don't search certificate"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@	; "-nosigs	  don't verify message sig"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@ ; "-noverify      don't verify signers cer"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@ ; "-nocerts	 don't include signers ce"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@ ; "-nodetach      use opaque signing\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@	; "-noattr	  don't include any signed"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@	; "-binary	  don't translate message "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@	; "-certfile file other	certificates file\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@GGEHAABP@?9certsout?5file?5certificate?5outpu@	; "-certsout file certificate output file\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@ ; "-signer file   signer certificate file\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@ ; "-recip  file   recipient certificate fi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CL@IOHIFDOI@?9keyid?5?5?5?5?5?5?5?5?5use?5subject?5key?5i@ ; "-keyid	   use subject key identifi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@ ; "-in file       input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@ ; "-inform arg    input format SMIME (defa"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@ ; "-inkey file    input private key	(if no"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@ ; "-keyform arg   input private key format"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@CCJDMIIG@?9keyopt?5nm?3v?5?5?5set?5public?5key?5pa@ ; "-keyopt	nm:v   set public key parameter"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@ ; "-out file      output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@ ; "-outform arg   output format SMIME (def"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@ ; "-content file  supply or override conte"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@ ; "-to addr	      to address\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@ ; "-from	ad	 from address\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@ ; "-subject s	 subject\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@ ; "-text	   include or delete text M"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@ ; "-CApath dir    trusted certificates dir"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@ ; "-CAfile file   trusted certificates fil"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@ ; "-no_alt_chains only	ever use the first "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@ ; "-crl_check     check revocation status "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@	; "-crl_check_all check	revocation status "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@	; "-engine e	  use engine e,	possibly a"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@ ; "-passin	arg    input file pass phrase s"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	3Bh ; ';'
		push	3Bh ; ';'
		push	offset ??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; "-rand file%cfile%c...\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@ ; "		   load	the file (or the fi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@ ; "	       the random number genera"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@ ; "cert.pem       recipient certificate(s)"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 28h

loc_228A:				; CODE XREF: _cms_main+15FBj
					; _cms_main+244Ej
		xor	ebp, ebp

loc_228C:				; CODE XREF: _cms_main+1FAj
		mov	edi, 1

loc_2291:				; CODE XREF: _cms_main+2555j
		xor	ebx, ebx

loc_2293:				; CODE XREF: _cms_main+260Bj
					; _cms_main+271Fj ...
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

loc_22A1:				; CODE XREF: _cms_main+3081j
					; _cms_main+30ACj ...
		cmp	[esp+118h+var_C8], 0
		jz	short loc_22B8
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_write_file
		add	esp, 8

loc_22B8:				; CODE XREF: _cms_main+226Aj
		push	offset _X509_free
		push	[esp+11Ch+var_DC]
		call	_sk_pop_free
		push	offset _X509_free
		push	ebx
		call	_sk_pop_free
		mov	eax, [esp+128h+var_54]
		add	esp, 10h
		test	eax, eax
		jz	short loc_22E8
		push	eax
		call	_X509_VERIFY_PARAM_free
		add	esp, 4

loc_22E8:				; CODE XREF: _cms_main+22A1j
		mov	eax, [esp+118h+var_D8]
		test	eax, eax
		jz	short loc_22F9
		push	eax
		call	_sk_free
		add	esp, 4

loc_22F9:				; CODE XREF: _cms_main+22B2j
		mov	eax, [esp+118h+var_D4]
		test	eax, eax
		jz	short loc_230A
		push	eax
		call	_sk_free
		add	esp, 4

loc_230A:				; CODE XREF: _cms_main+22C3j
		mov	eax, [esp+118h+var_F0]
		test	eax, eax
		jz	short loc_231B
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_231B:				; CODE XREF: _cms_main+22D4j
		mov	eax, [esp+118h+var_B4]
		test	eax, eax
		jz	short loc_232C
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_232C:				; CODE XREF: _cms_main+22E5j
		mov	eax, [esp+118h+var_50]
		test	eax, eax
		jz	short loc_2340
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_2340:				; CODE XREF: _cms_main+22F9j
		mov	eax, [esp+118h+var_4C]
		test	eax, eax
		jz	short loc_2354
		push	eax
		call	_ASN1_OBJECT_free
		add	esp, 4

loc_2354:				; CODE XREF: _cms_main+230Dj
		mov	eax, [esp+118h+var_48]
		test	eax, eax
		jz	short loc_2368
		push	eax
		call	_CMS_ReceiptRequest_free
		add	esp, 4

loc_2368:				; CODE XREF: _cms_main+2321j
		mov	eax, [esp+118h+var_C4]
		test	eax, eax
		jz	short loc_2379
		push	eax
		call	_sk_free
		add	esp, 4

loc_2379:				; CODE XREF: _cms_main+2332j
		mov	eax, [esp+118h+var_C0]
		test	eax, eax
		jz	short loc_238A
		push	eax
		call	_sk_free
		add	esp, 4

loc_238A:				; CODE XREF: _cms_main+2343j
		mov	ebx, [esp+118h+var_A4]
		test	ebx, ebx
		jz	short loc_23AC

loc_2392:				; CODE XREF: _cms_main+236Ej
		push	dword ptr [ebx+4]
		call	_sk_free
		mov	esi, [ebx+8]
		push	ebx
		call	_CRYPTO_free
		add	esp, 8
		mov	ebx, esi
		test	esi, esi
		jnz	short loc_2392

loc_23AC:				; CODE XREF: _cms_main+2354j
		push	[esp+118h+var_84]
		call	_X509_STORE_free
		push	[esp+11Ch+var_A0]
		call	_X509_free
		push	[esp+120h+var_44]
		call	_X509_free
		push	[esp+124h+var_BC]
		call	_X509_free
		push	[esp+128h+var_B8]
		call	_EVP_PKEY_free
		push	[esp+12Ch+var_EC]
		call	_CMS_ContentInfo_free
		push	[esp+130h+var_9C]
		call	_CMS_ContentInfo_free
		push	[esp+134h+var_C]
		call	_BIO_free
		push	[esp+138h+var_E4]
		call	_BIO_free
		push	[esp+13Ch+var_D0]
		call	_BIO_free
		push	ebp
		call	_BIO_free_all
		mov	ecx, [esp+144h+var_80]
		add	esp, 2Ch
		test	ecx, ecx
		jz	short loc_242F
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_242F:				; CODE XREF: _cms_main+23E8j
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 108h
		retn
; ---------------------------------------------------------------------------

loc_243C:				; CODE XREF: _cms_main+1EEFj
		push	0
		push	[esp+11Ch+var_40]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		push	0
		mov	ebp, eax
		lea	eax, [esp+128h+var_80]
		push	eax
		push	0
		push	[esp+130h+var_3C]
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 20h
		test	eax, eax
		jnz	short loc_248F
		push	offset ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; "Error getting password\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_228A
; ---------------------------------------------------------------------------

loc_248F:				; CODE XREF: _cms_main+2439j
		test	esi, esi
		jz	short loc_24D0
		mov	esi, [esp+118h+var_38]
		xor	eax, eax
		test	esi, esi
		setnz	al
		push	eax
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		add	esp, 0Ch
		test	esi, esi
		jz	short loc_24D0
		push	esi
		call	_app_RAND_load_files
		push	eax
		push	offset ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; "%ld semi-random	bytes loaded\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h

loc_24D0:				; CODE XREF: _cms_main+2455j
					; _cms_main+2478j
		mov	ecx, [esp+118h+var_F8]
		mov	[esp+118h+var_FC], 2
		test	ebx, ebx
		jnz	short loc_24E7
		and	ecx, 0FFFFFFBFh
		mov	[esp+118h+var_F8], ecx

loc_24E7:				; CODE XREF: _cms_main+24A2j
		mov	edx, [esp+118h+var_F4]
		test	dl, 10h
		jz	short loc_2507
		cmp	[esp+118h+var_88], 1
		jnz	short loc_251E
		mov	[esp+118h+var_68], offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		jmp	short loc_251E
; ---------------------------------------------------------------------------

loc_2507:				; CODE XREF: _cms_main+24B2j
		test	cl, 80h
		mov	eax, offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		mov	esi, offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		cmovz	eax, esi
		mov	[esp+118h+var_68], eax

loc_251E:				; CODE XREF: _cms_main+24BCj
					; _cms_main+24C9j
		mov	esi, edx
		mov	edi, offset ??_C@_02JDPG@rb?$AA@ ; `string'
		and	esi, 20h
		jz	short loc_253D
		cmp	[esp+118h+var_74], 1
		jnz	short loc_2551
		mov	[esp+118h+var_7C], edi
		jmp	short loc_2551
; ---------------------------------------------------------------------------

loc_253D:				; CODE XREF: _cms_main+24ECj
		test	cl, 80h
		mov	eax, edi
		mov	ecx, offset ??_C@_01KDCPPGHE@r?$AA@ ; `string'
		cmovz	eax, ecx
		mov	[esp+118h+var_7C], eax

loc_2551:				; CODE XREF: _cms_main+24F6j
					; _cms_main+24FFj
		cmp	edx, 11h
		jnz	loc_2603
		cmp	[esp+118h+var_E8], 0
		jnz	short loc_256A
		call	_EVP_des_ede3_cbc
		mov	[esp+118h+var_E8], eax

loc_256A:				; CODE XREF: _cms_main+2523j
		cmp	[esp+118h+var_F0], 0
		jz	short loc_2596
		cmp	[esp+118h+var_B4], 0
		jnz	short loc_2596
		push	offset ??_C@_0BC@OLCHLHPB@No?5secret?5key?5id?6?$AA@ ; "No secret key id\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_258B:				; CODE XREF: _cms_main+25A0j
		mov	edi, [esp+118h+var_FC]
		xor	ebp, ebp
		jmp	loc_2291
; ---------------------------------------------------------------------------

loc_2596:				; CODE XREF: _cms_main+2533j
					; _cms_main+253Aj
		mov	eax, [esp+118h+var_108]
		cmp	dword ptr [eax], 0
		jz	short loc_2603
		cmp	[esp+118h+var_DC], 0
		jnz	short loc_25B3
		call	_sk_new_null
		mov	[esp+118h+var_DC], eax
		mov	eax, [esp+118h+var_108]

loc_25B3:				; CODE XREF: _cms_main+2568j
		cmp	dword ptr [eax], 0
		jz	short loc_2603
		nop	dword ptr [eax+00h]

loc_25BC:				; CODE XREF: _cms_main+25C5j
		push	offset ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ ; "recipient certificate file"
		push	ebp
		push	0
		push	3
		push	dword ptr [eax]
		push	dword ptr ds:_bio_err
		call	_load_cert
		add	esp, 18h
		mov	[esp+118h+var_A0], eax
		test	eax, eax
		jz	short loc_258B
		push	eax
		push	[esp+11Ch+var_DC]
		call	_sk_push
		mov	eax, [esp+120h+var_108]
		add	esp, 8
		add	eax, 4
		mov	[esp+118h+var_A0], 0
		mov	[esp+118h+var_108], eax
		cmp	dword ptr [eax], 0
		jnz	short loc_25BC

loc_2603:				; CODE XREF: _cms_main+2518j
					; _cms_main+2561j ...
		mov	eax, [esp+118h+var_34]
		test	eax, eax
		jz	short loc_264C
		push	offset ??_C@_0BB@ODBFPAJB@certificate?5file?$AA@ ; "certificate	file"
		push	ebp
		push	0
		push	3
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_certs
		add	esp, 18h
		mov	[esp+118h+var_104], eax
		test	eax, eax
		jnz	short loc_264C

loc_262F:				; CODE XREF: _cms_main+2646j
					; _cms_main+2684j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

loc_263D:				; CODE XREF: _cms_main+26CEj
		mov	edi, [esp+118h+var_FC]
		xor	ebp, ebp
		mov	ebx, [esp+118h+var_104]
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_264C:				; CODE XREF: _cms_main+25D0j
					; _cms_main+25F1j
		mov	ecx, [esp+118h+var_98]
		mov	eax, [esp+118h+var_F4]
		test	ecx, ecx
		jz	short loc_2697
		cmp	eax, 22h ; '"'
		jnz	short loc_2697
		push	offset ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ ; "recipient certificate file"
		push	ebp
		push	0
		push	3
		push	ecx
		push	dword ptr ds:_bio_err
		call	_load_cert
		add	esp, 18h
		mov	[esp+118h+var_44], eax
		test	eax, eax
		jz	short loc_262F
		mov	ecx, [esp+118h+var_98]

loc_268B:				; CODE XREF: _cms_main+268Cj
		mov	eax, [esp+118h+var_100]
		test	eax, eax
		jnz	short loc_26DF
		mov	eax, ecx
		jmp	short loc_26DB
; ---------------------------------------------------------------------------

loc_2697:				; CODE XREF: _cms_main+261Dj
					; _cms_main+2622j
		cmp	eax, 3Fh ; '?'
		jnz	short loc_26C5
		push	offset ??_C@_0CA@IABCEFLO@receipt?5signer?5certificate?5file?$AA@ ; "receipt signer certificate	file"
		push	ebp
		push	0
		push	3
		push	[esp+128h+var_E0]
		push	dword ptr ds:_bio_err
		call	_load_cert
		add	esp, 18h
		mov	[esp+118h+var_BC], eax
		test	eax, eax
		jnz	short loc_26CF
		jmp	loc_262F
; ---------------------------------------------------------------------------

loc_26C5:				; CODE XREF: _cms_main+265Ej
		cmp	eax, 22h ; '"'
		jz	short loc_268B
		cmp	eax, 53h ; 'S'
		jnz	short loc_2710

loc_26CF:				; CODE XREF: _cms_main+2682j
		mov	eax, [esp+118h+var_100]
		test	eax, eax
		jnz	short loc_26DF
		mov	eax, [esp+118h+var_E0]

loc_26DB:				; CODE XREF: _cms_main+2659j
		test	eax, eax
		jz	short loc_2710

loc_26DF:				; CODE XREF: _cms_main+2655j
					; _cms_main+2699j
		push	offset ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@ ; "signing key file"
		push	ebp
		push	[esp+120h+var_80]
		push	0
		push	[esp+128h+var_64]
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_key
		add	esp, 1Ch
		mov	[esp+118h+var_B8], eax
		test	eax, eax
		jz	loc_263D

loc_2710:				; CODE XREF: _cms_main+2691j
					; _cms_main+26A1j
		mov	eax, [esp+118h+var_78]
		test	eax, eax
		jz	short loc_2760
		mov	ecx, [esp+118h+var_7C]
		push	ecx
		push	eax
		call	_BIO_new_file
		mov	ecx, eax
		add	esp, 8
		mov	[esp+118h+var_E4], ecx
		test	ecx, ecx
		jnz	short loc_277C
		mov	eax, [esp+118h+var_78]
		push	eax
		push	offset ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ ; "Can't open input file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+124h+var_FC]
		add	esp, 0Ch
		mov	ebx, [esp+118h+var_104]
		xor	ebp, ebp
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_2760:				; CODE XREF: _cms_main+26DDj
		push	0
		push	0
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+118h+var_E4], eax
		mov	ecx, eax

loc_277C:				; CODE XREF: _cms_main+26F8j
		test	esi, esi
		jz	loc_28E1
		mov	eax, [esp+118h+var_74]
		cmp	eax, 6
		jnz	short loc_27A3
		lea	eax, [esp+118h+var_D0]
		push	eax
		push	ecx
		call	_SMIME_read_CMS
		mov	esi, eax
		mov	[esp+120h+var_EC], esi
		jmp	short loc_27D6
; ---------------------------------------------------------------------------

loc_27A3:				; CODE XREF: _cms_main+2752j
		cmp	eax, 3
		jnz	short loc_27BF
		push	0
		push	0
		push	0
		push	ecx
		call	_PEM_read_bio_CMS
		mov	esi, eax
		add	esp, 10h
		mov	[esp+118h+var_EC], esi
		jmp	short loc_27D9
; ---------------------------------------------------------------------------

loc_27BF:				; CODE XREF: _cms_main+276Aj
		cmp	eax, 1
		jnz	loc_28BF
		push	0
		push	ecx
		call	_d2i_CMS_bio
		mov	esi, eax
		mov	[esp+120h+var_EC], eax

loc_27D6:				; CODE XREF: _cms_main+2765j
		add	esp, 8

loc_27D9:				; CODE XREF: _cms_main+2781j
		test	esi, esi
		jnz	short loc_27FF
		push	offset ??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@ ; "Error reading S/MIME message\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+120h+var_FC]
		add	esp, 8
		mov	ebx, [esp+118h+var_104]
		xor	ebp, ebp
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_27FF:				; CODE XREF: _cms_main+279Fj
		cmp	[esp+118h+var_94], 0
		jz	short loc_2857
		push	[esp+118h+var_D0]
		call	_BIO_free
		push	offset ??_C@_02JDPG@rb?$AA@ ; `string'
		push	[esp+120h+var_94]
		call	_BIO_new_file
		add	esp, 0Ch
		mov	[esp+118h+var_D0], eax
		test	eax, eax
		jnz	short loc_2857
		push	[esp+118h+var_94]
		push	offset ??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@ ; "Can't read content file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+124h+var_FC]
		add	esp, 0Ch
		mov	ebx, [esp+118h+var_104]
		xor	ebp, ebp
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_2857:				; CODE XREF: _cms_main+27CBj
					; _cms_main+27F0j
		cmp	[esp+118h+var_90], 0
		jz	loc_28E3
		push	esi
		call	_CMS_get1_certs
		mov	esi, eax
		push	esi
		push	[esp+120h+var_90]
		call	_save_certs
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_28AB
		push	[esp+118h+var_90]
		push	offset ??_C@_0BL@HKKLEOHM@Error?5writing?5certs?5to?5?$CFs?6?$AA@ ; "Error writing certs to %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebx, [esp+124h+var_104]
		add	esp, 0Ch
		mov	edi, 5
		xor	ebp, ebp
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_28AB:				; CODE XREF: _cms_main+2843j
		push	offset _X509_free
		push	esi
		call	_sk_pop_free
		mov	esi, [esp+120h+var_EC]
		add	esp, 8
		jmp	short loc_28E3
; ---------------------------------------------------------------------------

loc_28BF:				; CODE XREF: _cms_main+2786j
		push	offset ??_C@_0BP@PKFBHPHI@Bad?5input?5format?5for?5CMS?5file?6?$AA@ ; "Bad input format	for CMS	file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+120h+var_FC]
		add	esp, 8
		mov	ebx, [esp+118h+var_104]
		xor	ebp, ebp
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_28E1:				; CODE XREF: _cms_main+2742j
		xor	esi, esi

loc_28E3:				; CODE XREF: _cms_main+2823j
					; _cms_main+2881j
		mov	eax, [esp+118h+var_70]
		test	eax, eax
		jz	loc_29CB
		cmp	[esp+118h+var_6C], 1
		mov	ecx, offset ??_C@_01KDCPPGHE@r?$AA@ ; `string'
		cmovnz	edi, ecx
		push	edi
		push	eax
		call	_BIO_new_file
		mov	ecx, eax
		add	esp, 8
		mov	[esp+118h+var_C], ecx
		test	ecx, ecx
		jnz	short loc_2943
		mov	eax, [esp+118h+var_70]
		push	eax
		push	offset ??_C@_0BM@OJPDJDBN@Can?8t?5open?5receipt?5file?5?$CFs?6?$AA@ ; "Can't open receipt file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+124h+var_FC]
		add	esp, 0Ch
		mov	ebx, [esp+118h+var_104]
		xor	ebp, ebp
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_2943:				; CODE XREF: _cms_main+28DBj
		mov	eax, [esp+118h+var_6C]
		cmp	eax, 6
		jnz	short loc_2959
		push	0
		push	ecx
		call	_SMIME_read_CMS
		jmp	short loc_297C
; ---------------------------------------------------------------------------

loc_2959:				; CODE XREF: _cms_main+2911j
		cmp	eax, 3
		jnz	short loc_296F
		push	0
		push	0
		push	0
		push	ecx
		call	_PEM_read_bio_CMS
		add	esp, 10h
		jmp	short loc_297F
; ---------------------------------------------------------------------------

loc_296F:				; CODE XREF: _cms_main+2920j
		cmp	eax, 1
		jnz	short loc_29A9
		push	0
		push	ecx
		call	_d2i_CMS_bio

loc_297C:				; CODE XREF: _cms_main+291Bj
		add	esp, 8

loc_297F:				; CODE XREF: _cms_main+2931j
		mov	[esp+118h+var_9C], eax
		test	eax, eax
		jnz	short loc_29CB
		push	offset ??_C@_0BH@JMCDABG@Error?5reading?5receipt?6?$AA@	; "Error reading receipt\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+120h+var_FC]
		add	esp, 8
		mov	ebx, [esp+118h+var_104]
		xor	ebp, ebp
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_29A9:				; CODE XREF: _cms_main+2936j
		push	offset ??_C@_0BO@FKJGLJL@Bad?5input?5format?5for?5receipt?6?$AA@ ; "Bad	input format for receipt\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+120h+var_FC]
		add	esp, 8
		mov	ebx, [esp+118h+var_104]
		xor	ebp, ebp
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_29CB:				; CODE XREF: _cms_main+28B0j
					; _cms_main+2949j
		mov	edi, [esp+118h+var_30]
		test	edi, edi
		jz	short loc_2A13
		push	[esp+118h+var_68]
		push	edi
		call	_BIO_new_file
		add	esp, 8
		mov	[esp+118h+var_100], eax
		test	eax, eax
		jnz	short loc_2A2D
		push	edi
		push	offset ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ ; "Can't open output file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

loc_2A02:				; CODE XREF: _cms_main+2A26j
					; _cms_main+2B66j ...
		mov	ebp, [esp+118h+var_100]
		mov	edi, [esp+118h+var_FC]
		mov	ebx, [esp+118h+var_104]
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_2A13:				; CODE XREF: _cms_main+2998j
		push	0
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+118h+var_100], eax

loc_2A2D:				; CODE XREF: _cms_main+29B0j
		mov	eax, [esp+118h+var_F4]
		cmp	eax, 24h ; '$'
		jz	short loc_2A3B
		cmp	eax, 30h ; '0'
		jnz	short loc_2A8B

loc_2A3B:				; CODE XREF: _cms_main+29F8j
		push	[esp+118h+var_2C]
		push	[esp+11Ch+var_28]
		push	dword ptr ds:_bio_err
		call	_setup_verify
		mov	edi, eax
		add	esp, 0Ch
		mov	[esp+118h+var_84], edi
		test	edi, edi
		jz	short loc_2A02
		push	offset _cms_cb
		push	edi
		call	_X509_STORE_set_verify_cb
		mov	eax, [esp+120h+var_54]
		add	esp, 8
		test	eax, eax
		jz	short loc_2A87
		push	eax
		push	edi
		call	_X509_STORE_set1_param
		add	esp, 8

loc_2A87:				; CODE XREF: _cms_main+2A3Fj
		mov	eax, [esp+118h+var_F4]

loc_2A8B:				; CODE XREF: _cms_main+29FDj
		mov	edi, 3
		mov	[esp+118h+var_FC], edi
		cmp	eax, 18h
		jnz	short loc_2ABA
		mov	ebx, [esp+118h+var_F8]
		mov	ebp, [esp+118h+var_E4]
		push	ebx
		push	ebp
		call	_CMS_data_create
		mov	esi, eax
		add	esp, 8
		mov	[esp+118h+var_EC], esi

loc_2AB1:				; CODE XREF: _cms_main+2C66j
		mov	eax, [esp+118h+var_F4]
		jmp	loc_2D55
; ---------------------------------------------------------------------------

loc_2ABA:				; CODE XREF: _cms_main+2A5Bj
		cmp	eax, 1Ah
		jnz	short loc_2AE7
		mov	ebx, [esp+118h+var_F8]
		mov	ebp, [esp+118h+var_E4]
		push	ebx
		push	[esp+11Ch+var_60]
		push	ebp
		call	_CMS_digest_create
		mov	esi, eax
		add	esp, 0Ch
		mov	eax, [esp+118h+var_F4]
		mov	[esp+118h+var_EC], esi
		jmp	loc_2D55
; ---------------------------------------------------------------------------

loc_2AE7:				; CODE XREF: _cms_main+2A81j
		cmp	eax, 1Ch
		jnz	short loc_2B0F
		mov	ebx, [esp+118h+var_F8]
		mov	ebp, [esp+118h+var_E4]
		push	ebx
		push	0FFFFFFFFh
		push	ebp
		call	_CMS_compress
		mov	esi, eax
		add	esp, 0Ch
		mov	eax, [esp+118h+var_F4]
		mov	[esp+118h+var_EC], esi
		jmp	loc_2D55
; ---------------------------------------------------------------------------

loc_2B0F:				; CODE XREF: _cms_main+2AAEj
		cmp	eax, 11h
		jnz	loc_2CC6
		mov	ebx, [esp+118h+var_F8]
		mov	ebp, [esp+118h+var_E4]
		or	ebx, 4000h
		push	ebx
		push	[esp+11Ch+var_E8]
		mov	[esp+120h+var_F8], ebx
		push	ebp
		push	0
		call	_CMS_encrypt
		mov	esi, eax
		add	esp, 10h
		mov	[esp+118h+var_EC], esi
		test	esi, esi
		jz	loc_2E23
		push	[esp+118h+var_DC]
		xor	edi, edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	loc_2C13
		mov	ebp, esi

loc_2B60:				; CODE XREF: _cms_main+2BC9j
		push	edi
		push	[esp+11Ch+var_DC]
		call	_sk_value
		mov	ecx, [esp+120h+var_A4]
		add	esp, 8
		mov	esi, ecx
		test	ecx, ecx
		jz	short loc_2B93
		nop	dword ptr [eax+eax+00h]

loc_2B7C:				; CODE XREF: _cms_main+2B49j
		cmp	[esi], edi
		jz	short loc_2B89
		mov	esi, [esi+8]
		test	esi, esi
		jnz	short loc_2B7C
		jmp	short loc_2B93
; ---------------------------------------------------------------------------

loc_2B89:				; CODE XREF: _cms_main+2B42j
		mov	ebx, [esp+118h+var_F8]
		or	ebx, 40000h

loc_2B93:				; CODE XREF: _cms_main+2B39j
					; _cms_main+2B4Bj
		push	ebx
		push	eax
		push	ebp
		call	_CMS_add1_recipient_cert
		mov	ebx, eax
		add	esp, 0Ch
		test	ebx, ebx
		jz	loc_2A02
		test	esi, esi
		jz	short loc_2BC6
		push	ebx
		call	_CMS_RecipientInfo_get0_pkey_ctx
		push	dword ptr [esi+4]
		push	eax
		call	_cms_set_pkey_param
		add	esp, 0Ch
		test	eax, eax
		jz	loc_2A02

loc_2BC6:				; CODE XREF: _cms_main+2B6Ej
		push	ebx
		call	_CMS_RecipientInfo_type
		add	esp, 4
		cmp	eax, 1
		jnz	short loc_2BF2
		mov	esi, [esp+118h+var_B0]
		test	esi, esi
		jz	short loc_2BF2
		push	ebx
		call	_CMS_RecipientInfo_kari_get0_ctx
		push	0
		push	0
		push	0
		push	esi
		push	eax
		call	_EVP_EncryptInit_ex
		add	esp, 18h

loc_2BF2:				; CODE XREF: _cms_main+2B96j
					; _cms_main+2B9Ej
		push	[esp+118h+var_DC]
		inc	edi
		call	_sk_num
		mov	ebx, [esp+11Ch+var_F8]
		add	esp, 4
		cmp	edi, eax
		jl	loc_2B60
		mov	esi, [esp+118h+var_EC]
		mov	ebp, [esp+118h+var_E4]

loc_2C13:				; CODE XREF: _cms_main+2B1Cj
		mov	eax, [esp+118h+var_F0]
		test	eax, eax
		jz	short loc_2C57
		push	0
		push	0
		push	0
		push	[esp+124h+var_5C]
		push	[esp+128h+var_B4]
		push	[esp+12Ch+var_A8]
		push	eax
		push	0
		push	esi
		call	_CMS_add0_recipient_key
		add	esp, 24h
		test	eax, eax
		jz	loc_2A02
		mov	[esp+118h+var_F0], 0
		mov	[esp+118h+var_B4], 0

loc_2C57:				; CODE XREF: _cms_main+2BDDj
		mov	eax, [esp+118h+var_AC]
		test	eax, eax
		jz	short loc_2C9C
		push	eax
		call	_BUF_strdup
		add	esp, 4
		mov	[esp+118h+var_50], eax
		test	eax, eax
		jz	loc_2A02
		push	0
		push	0FFFFFFFFh
		push	eax
		push	0
		push	0
		push	0FFFFFFFFh
		push	esi
		call	_CMS_add0_recipient_password
		add	esp, 1Ch
		test	eax, eax
		jz	loc_2A02
		xor	eax, eax
		mov	[esp+118h+var_50], eax

loc_2C9C:				; CODE XREF: _cms_main+2C21j
		test	ebx, 1000h
		jnz	loc_2AB1

loc_2CA8:				; CODE XREF: _cms_main+2F68j
		push	ebx
		push	0
		push	ebp
		push	esi
		call	_CMS_final
		add	esp, 10h
		test	eax, eax
		jz	loc_2A02
		mov	eax, [esp+118h+var_F4]
		jmp	loc_2D55
; ---------------------------------------------------------------------------

loc_2CC6:				; CODE XREF: _cms_main+2AD6j
		cmp	eax, 1Eh
		jnz	short loc_2CF6
		mov	ebx, [esp+118h+var_F8]
		mov	edi, [esp+118h+var_F0]
		mov	ebp, [esp+118h+var_E4]
		push	ebx
		push	[esp+11Ch+var_A8]
		push	edi
		push	[esp+124h+var_E8]
		push	ebp
		call	_CMS_EncryptedData_encrypt
		mov	esi, eax
		add	esp, 14h
		mov	eax, [esp+118h+var_F4]
		mov	[esp+118h+var_EC], esi
		jmp	short loc_2D59
; ---------------------------------------------------------------------------

loc_2CF6:				; CODE XREF: _cms_main+2C8Dj
		cmp	eax, 3Fh ; '?'
		jnz	loc_2D85
		push	esi
		call	_CMS_get0_SignerInfos
		add	esp, 4
		test	eax, eax
		jz	loc_2E23
		push	0
		push	eax
		call	_sk_value
		mov	ebx, [esp+120h+var_F8]
		push	ebx
		push	[esp+124h+var_104]
		push	[esp+128h+var_B8]
		push	[esp+12Ch+var_BC]
		push	eax
		call	_CMS_sign_receipt
		mov	esi, eax
		add	esp, 1Ch
		test	esi, esi
		jz	loc_2E23
		mov	ebp, [esp+118h+var_EC]
		push	ebp
		call	_CMS_ContentInfo_free
		mov	eax, [esp+11Ch+var_F4]
		add	esp, 4
		mov	[esp+118h+var_EC], esi

loc_2D51:				; CODE XREF: _cms_main+2D4Fj
					; _cms_main+2F52j ...
		mov	ebp, [esp+118h+var_E4]

loc_2D55:				; CODE XREF: _cms_main+2A79j
					; _cms_main+2AA6j ...
		mov	edi, [esp+118h+var_F0]

loc_2D59:				; CODE XREF: _cms_main+2CB8j
		test	esi, esi
		jnz	loc_2FA9
		push	offset ??_C@_0BO@JOIMJPPK@Error?5creating?5CMS?5structure?6?$AA@ ; "Error creating CMS structure\n"

loc_2D66:				; CODE XREF: _cms_main+3381j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebp, [esp+120h+var_100]
		add	esp, 8
		mov	edi, [esp+118h+var_FC]
		mov	ebx, [esp+118h+var_104]
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_2D85:				; CODE XREF: _cms_main+2CBDj
		test	ebx, ebx
		mov	ebx, [esp+118h+var_F8]
		jz	short loc_2D51
		cmp	eax, 53h ; 'S'
		jnz	loc_2E30
		test	bl, 40h
		jz	short loc_2DAB
		cmp	[esp+118h+var_88], 6
		jnz	short loc_2DAB
		or	ebx, 1000h

loc_2DAB:				; CODE XREF: _cms_main+2D5Dj
					; _cms_main+2D67j
		or	ebx, 4000h
		push	ebx
		push	[esp+11Ch+var_E4]
		mov	[esp+120h+var_F8], ebx
		push	[esp+120h+var_104]
		push	0
		push	0
		call	_CMS_sign
		mov	esi, eax
		add	esp, 14h
		mov	[esp+118h+var_EC], esi
		test	esi, esi
		jz	short loc_2E23
		mov	eax, [esp+118h+var_4C]
		test	eax, eax
		jz	short loc_2DE9
		push	eax
		push	esi
		call	_CMS_set1_eContentType
		add	esp, 8

loc_2DE9:				; CODE XREF: _cms_main+2DA1j
		mov	eax, [esp+118h+var_C4]
		test	eax, eax
		jz	short loc_2E3A
		push	[esp+118h+var_C0]
		push	[esp+11Ch+var_8C]
		push	eax
		call	_make_receipt_request
		add	esp, 0Ch
		mov	[esp+118h+var_48], eax
		test	eax, eax
		jnz	short loc_2E3A
		push	offset ??_C@_0CH@DLNBHHKH@Signed?5Receipt?5Request?5Creation?5@	; "Signed Receipt Request Creation Error\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8

loc_2E23:				; CODE XREF: _cms_main+2B06j
					; _cms_main+2CCEj ...
		mov	ebp, [esp+118h+var_100]
		mov	ebx, [esp+118h+var_104]
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_2E30:				; CODE XREF: _cms_main+2D54j
		or	ebx, 8000h
		mov	[esp+118h+var_F8], ebx

loc_2E3A:				; CODE XREF: _cms_main+2DB3j
					; _cms_main+2DD2j
		push	[esp+118h+var_D8]
		xor	edi, edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	loc_2F83

loc_2E50:				; CODE XREF: _cms_main+2F3Dj
		push	edi
		push	[esp+11Ch+var_D8]
		call	_sk_value
		push	edi
		push	[esp+124h+var_D4]
		mov	[esp+128h+var_E0], eax
		call	_sk_value
		push	offset ??_C@_0BD@FNCKELBI@signer?5certificate?$AA@ ; "signer certificate"
		push	ebp
		push	0
		push	3
		push	[esp+138h+var_E0]
		mov	esi, eax
		push	dword ptr ds:_bio_err
		call	_load_cert
		add	esp, 28h
		mov	[esp+118h+var_BC], eax
		test	eax, eax
		jz	loc_2A02
		push	offset ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@ ; "signing key file"
		push	ebp
		push	[esp+120h+var_80]
		push	0
		push	[esp+128h+var_64]
		push	esi
		push	dword ptr ds:_bio_err
		call	_load_key
		mov	edx, eax
		add	esp, 1Ch
		mov	[esp+118h+var_B8], edx
		test	edx, edx
		jz	loc_2A02
		mov	eax, [esp+118h+var_A4]
		mov	esi, eax
		test	eax, eax
		jz	short loc_2EE6

loc_2ECF:				; CODE XREF: _cms_main+2E9Cj
		cmp	[esi], edi
		jz	short loc_2EDC
		mov	esi, [esi+8]
		test	esi, esi
		jnz	short loc_2ECF
		jmp	short loc_2EE6
; ---------------------------------------------------------------------------

loc_2EDC:				; CODE XREF: _cms_main+2E95j
		mov	ebx, [esp+118h+var_F8]
		or	ebx, 40000h

loc_2EE6:				; CODE XREF: _cms_main+2E91j
					; _cms_main+2E9Ej
		push	ebx
		push	[esp+11Ch+var_60]
		push	edx
		push	[esp+124h+var_BC]
		push	[esp+128h+var_EC]
		call	_CMS_add1_signer
		mov	ebx, eax
		add	esp, 14h
		test	ebx, ebx
		jz	loc_2A02
		test	esi, esi
		jz	short loc_2F27
		push	ebx
		call	_CMS_SignerInfo_get0_pkey_ctx
		push	dword ptr [esi+4]
		push	eax
		call	_cms_set_pkey_param
		add	esp, 0Ch
		test	eax, eax
		jz	loc_2A02

loc_2F27:				; CODE XREF: _cms_main+2ECFj
		mov	eax, [esp+118h+var_48]
		test	eax, eax
		jz	short loc_2F44
		push	eax
		push	ebx
		call	_CMS_add1_ReceiptRequest
		add	esp, 8
		test	eax, eax
		jz	loc_2A02

loc_2F44:				; CODE XREF: _cms_main+2EF4j
		push	[esp+118h+var_BC]
		call	_X509_free
		push	[esp+11Ch+var_B8]
		mov	[esp+120h+var_BC], 0
		call	_EVP_PKEY_free
		push	[esp+120h+var_D8]
		mov	[esp+124h+var_B8], 0
		inc	edi
		call	_sk_num
		mov	ebx, [esp+124h+var_F8]
		add	esp, 0Ch
		cmp	edi, eax
		jl	loc_2E50
		mov	esi, [esp+118h+var_EC]

loc_2F83:				; CODE XREF: _cms_main+2E0Ej
		mov	eax, [esp+118h+var_F4]
		mov	ebx, [esp+118h+var_F8]
		cmp	eax, 53h ; 'S'
		jnz	loc_2D51
		test	ebx, 1000h
		jnz	loc_2D51
		mov	ebp, [esp+118h+var_E4]
		jmp	loc_2CA8
; ---------------------------------------------------------------------------

loc_2FA9:				; CODE XREF: _cms_main+2D1Fj
		mov	[esp+118h+var_FC], 4
		cmp	eax, 22h ; '"'
		jnz	loc_309B
		test	ebx, 20000h
		jz	short loc_2FD4
		push	ebx
		push	0
		push	0
		push	0
		push	0
		push	esi
		call	_CMS_decrypt
		add	esp, 18h

loc_2FD4:				; CODE XREF: _cms_main+2F84j
		test	edi, edi
		jz	short loc_3019
		push	[esp+118h+var_5C]
		push	[esp+11Ch+var_B4]
		push	[esp+120h+var_A8]
		push	edi
		push	esi
		call	_CMS_decrypt_set1_key
		add	esp, 14h
		test	eax, eax
		jnz	short loc_3019
		push	offset ??_C@_0CH@ELBFIHKK@Error?5decrypting?5CMS?5using?5secre@	; "Error decrypting CMS	using secret key\n"

loc_2FFA:				; CODE XREF: _cms_main+2FFFj
					; _cms_main+301Ej
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		mov	ebp, [esp+120h+var_100]
		add	esp, 8
		mov	edi, [esp+118h+var_FC]
		mov	ebx, [esp+118h+var_104]
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_3019:				; CODE XREF: _cms_main+2F9Aj
					; _cms_main+2FB7j
		mov	ebp, [esp+118h+var_B8]
		test	ebp, ebp
		jz	short loc_303D
		push	[esp+118h+var_44]
		push	ebp
		push	esi
		call	_CMS_decrypt_set1_pkey
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_303D
		push	offset ??_C@_0CI@DPKBFGIK@Error?5decrypting?5CMS?5using?5priva@	; "Error decrypting CMS	using private key\"...
		jmp	short loc_2FFA
; ---------------------------------------------------------------------------

loc_303D:				; CODE XREF: _cms_main+2FE3j
					; _cms_main+2FF8j
		mov	eax, [esp+118h+var_AC]
		test	eax, eax
		jz	short loc_305C
		push	0FFFFFFFFh
		push	eax
		push	esi
		call	_CMS_decrypt_set1_password
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_305C
		push	offset ??_C@_0CF@MGDLJCKG@Error?5decrypting?5CMS?5using?5passw@	; "Error decrypting CMS	using password\n"
		jmp	short loc_2FFA
; ---------------------------------------------------------------------------

loc_305C:				; CODE XREF: _cms_main+3007j
					; _cms_main+3017j
		mov	ebp, [esp+118h+var_100]
		push	ebx
		push	ebp
		push	[esp+120h+var_D0]
		push	0
		push	0
		push	esi
		call	_CMS_decrypt
		add	esp, 18h
		test	eax, eax
		jnz	loc_311C
		push	offset ??_C@_0CA@OLLBKEFE@Error?5decrypting?5CMS?5structure?6?$AA@ ; "Error decrypting CMS structure\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+120h+var_FC]
		add	esp, 8
		mov	ebx, [esp+118h+var_104]
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_309B:				; CODE XREF: _cms_main+2F78j
		cmp	eax, 27h ; '''
		jnz	short loc_30C2
		mov	ebp, [esp+118h+var_100]
		push	ebx
		push	ebp
		push	esi
		call	_CMS_data
		mov	ebx, [esp+124h+var_104]
		add	esp, 0Ch
		test	eax, eax
		jz	loc_32BB
		xor	edi, edi
		jmp	loc_22A1
; ---------------------------------------------------------------------------

loc_30C2:				; CODE XREF: _cms_main+3062j
		cmp	eax, 2Bh ; '+'
		jnz	short loc_30ED
		mov	ebp, [esp+118h+var_100]
		push	ebx
		push	ebp
		push	[esp+120h+var_D0]
		push	esi
		call	_CMS_uncompress
		mov	ebx, [esp+128h+var_104]
		add	esp, 10h
		test	eax, eax
		jz	loc_32BB
		xor	edi, edi
		jmp	loc_22A1
; ---------------------------------------------------------------------------

loc_30ED:				; CODE XREF: _cms_main+3089j
		cmp	eax, 29h ; ')'
		jnz	short loc_3147
		mov	ebp, [esp+118h+var_100]
		push	ebx
		push	ebp
		push	[esp+120h+var_D0]
		push	esi
		call	_CMS_digest_verify
		add	esp, 10h
		test	eax, eax
		jle	short loc_3127
		push	offset ??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@ ; "Verification successful\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_311C:				; CODE XREF: _cms_main+3039j
					; _cms_main+31D3j ...
		mov	ebx, [esp+118h+var_104]
		xor	edi, edi
		jmp	loc_22A1
; ---------------------------------------------------------------------------

loc_3127:				; CODE XREF: _cms_main+30CBj
		push	offset ??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@ ; "Verification failure\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+120h+var_FC]
		add	esp, 8
		mov	ebx, [esp+118h+var_104]
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_3147:				; CODE XREF: _cms_main+30B4j
		cmp	eax, 2Dh ; '-'
		jnz	short loc_3177
		mov	ebp, [esp+118h+var_100]
		push	ebx
		push	ebp
		push	[esp+120h+var_D0]
		push	[esp+124h+var_A8]
		push	edi
		push	esi
		call	_CMS_EncryptedData_decrypt
		mov	ebx, [esp+130h+var_104]
		add	esp, 18h
		test	eax, eax
		jz	loc_32BB
		xor	edi, edi
		jmp	loc_22A1
; ---------------------------------------------------------------------------

loc_3177:				; CODE XREF: _cms_main+310Ej
		cmp	eax, 24h ; '$'
		jnz	loc_3260
		mov	ebp, [esp+118h+var_100]
		push	ebx
		mov	ebx, [esp+11Ch+var_104]
		push	ebp
		push	[esp+120h+var_D0]
		push	[esp+124h+var_84]
		push	ebx
		push	esi
		call	_CMS_verify
		add	esp, 18h
		test	eax, eax
		jle	loc_322F
		push	offset ??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@ ; "Verification successful\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebx, [esp+120h+var_E0]
		add	esp, 8
		test	ebx, ebx
		jz	short loc_3207
		push	esi
		call	_CMS_get0_signers
		mov	esi, eax
		push	esi
		push	ebx
		call	_save_certs
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_31FA
		push	ebx
		push	offset ??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@ ; "Error writing signers to %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebx, [esp+124h+var_104]
		add	esp, 0Ch
		mov	edi, 5
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_31FA:				; CODE XREF: _cms_main+319Aj
		push	esi
		call	_sk_free
		mov	esi, [esp+11Ch+var_EC]
		add	esp, 4

loc_3207:				; CODE XREF: _cms_main+3184j
		cmp	[esp+118h+var_24], 0
		jz	loc_311C
		push	esi
		push	dword ptr ds:_bio_err
		call	_receipt_request_print
		mov	ebx, [esp+120h+var_104]
		add	esp, 8
		xor	edi, edi
		jmp	loc_22A1
; ---------------------------------------------------------------------------

loc_322F:				; CODE XREF: _cms_main+3165j
		push	offset ??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@ ; "Verification failure\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		cmp	[esp+118h+var_20], 0
		jz	short loc_32BB
		mov	edi, ds:_verify_err

$end$944:
		add	edi, 20h ; ' '
		jz	loc_22A1
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_3260:				; CODE XREF: _cms_main+313Ej
		cmp	eax, 30h ; '0'
		jnz	short loc_32C4
		push	ebx
		push	[esp+11Ch+var_84]
		mov	ebx, [esp+120h+var_104]
		push	ebx
		push	esi
		push	[esp+128h+var_9C]
		call	_CMS_verify_receipt
		add	esp, 14h
		test	eax, eax
		jle	short loc_32A4
		push	offset ??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@ ; "Verification successful\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebp, [esp+120h+var_100]
		add	esp, 8
		xor	edi, edi
		jmp	loc_22A1
; ---------------------------------------------------------------------------

loc_32A4:				; CODE XREF: _cms_main+3248j
		push	offset ??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@ ; "Verification failure\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ebp, [esp+120h+var_100]
		add	esp, 8

loc_32BB:				; CODE XREF: _cms_main+3079j
					; _cms_main+30A4j ...
		mov	edi, [esp+118h+var_FC]
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_32C4:				; CODE XREF: _cms_main+3227j
		cmp	[esp+118h+var_58], 0
		jz	short loc_32F9
		cmp	[esp+118h+var_1C], 0
		mov	ebp, [esp+118h+var_100]
		jz	loc_311C
		push	0
		push	0
		push	esi
		push	ebp
		call	_CMS_ContentInfo_print_ctx
		mov	ebx, [esp+128h+var_104]
		add	esp, 10h
		xor	edi, edi
		jmp	loc_22A1
; ---------------------------------------------------------------------------

loc_32F9:				; CODE XREF: _cms_main+3290j
		mov	eax, [esp+118h+var_88]
		cmp	eax, 6
		jnz	short loc_3379
		mov	eax, [esp+118h+var_18]
		mov	ebp, [esp+118h+var_100]
		test	eax, eax
		jz	short loc_3323
		push	eax
		push	offset ??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@ ; "To: %s\n"
		push	ebp
		call	_BIO_printf
		add	esp, 0Ch

loc_3323:				; CODE XREF: _cms_main+32D6j
		mov	eax, [esp+118h+var_14]
		test	eax, eax
		jz	short loc_333D
		push	eax
		push	offset ??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@ ; "From: %s\n"
		push	ebp
		call	_BIO_printf
		add	esp, 0Ch

loc_333D:				; CODE XREF: _cms_main+32F0j
		mov	eax, [esp+118h+var_10]
		test	eax, eax
		jz	short loc_3357
		push	eax
		push	offset ??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@ ; "Subject: %s\n"
		push	ebp
		call	_BIO_printf
		add	esp, 0Ch

loc_3357:				; CODE XREF: _cms_main+330Aj
		cmp	[esp+118h+var_F4], 76h ; 'v'
		push	ebx
		jnz	short loc_336C
		push	[esp+11Ch+var_D0]
		push	esi
		push	ebp
		call	_SMIME_write_CMS
		jmp	short loc_339F
; ---------------------------------------------------------------------------

loc_336C:				; CODE XREF: _cms_main+3321j
		push	[esp+11Ch+var_E4]
		push	esi
		push	ebp
		call	_SMIME_write_CMS
		jmp	short loc_339F
; ---------------------------------------------------------------------------

loc_3379:				; CODE XREF: _cms_main+32C7j
		cmp	eax, 3
		jnz	short loc_338D
		push	ebx
		push	ebp
		mov	ebp, [esp+120h+var_100]
		push	esi
		push	ebp
		call	_PEM_write_bio_CMS_stream
		jmp	short loc_339F
; ---------------------------------------------------------------------------

loc_338D:				; CODE XREF: _cms_main+3340j
		cmp	eax, 1
		jnz	short loc_33B8
		push	ebx
		push	ebp
		mov	ebp, [esp+120h+var_100]
		push	esi
		push	ebp
		call	_i2d_CMS_bio_stream

loc_339F:				; CODE XREF: _cms_main+332Ej
					; _cms_main+333Bj ...
		add	esp, 10h
		test	eax, eax
		jg	loc_311C
		mov	ebx, [esp+118h+var_104]
		mov	edi, 6
		jmp	loc_2293
; ---------------------------------------------------------------------------

loc_33B8:				; CODE XREF: _cms_main+3354j
		push	offset ??_C@_0CA@EMDFFBCC@Bad?5output?5format?5for?5CMS?5file?6?$AA@ ; "Bad output format for CMS file\n"
		jmp	loc_2D66
_cms_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 33C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_cms_set_pkey_param proc near		; CODE XREF: _cms_main+2B7Ap
					; _cms_main+2EDBp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		mov	edi, [esp+4+arg_4]
		push	edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jg	short loc_33DD
		mov	eax, 1
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_33DD:				; CODE XREF: _cms_set_pkey_param+10j
		push	ebx
		push	ebp
		push	esi
		push	edi
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_3419
		mov	ebp, [esp+10h+arg_0]
		nop

loc_33F4:				; CODE XREF: _cms_set_pkey_param+53j
		push	esi
		push	edi
		call	_sk_value
		mov	ebx, eax
		push	ebx
		push	ebp
		call	_pkey_ctrl_string
		add	esp, 10h
		test	eax, eax
		jle	short loc_3423
		push	edi
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_33F4

loc_3419:				; CODE XREF: _cms_set_pkey_param+29j
		pop	esi
		pop	ebp
		pop	ebx
		mov	eax, 1
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_3423:				; CODE XREF: _cms_set_pkey_param+45j
		push	ebx
		push	offset ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@ ; "parameter error \"%s\"\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 10h
		xor	eax, eax
		pop	esi
		pop	ebp
		pop	ebx
		pop	edi
		retn
_cms_set_pkey_param endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 344Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_gnames_stack_print proc near		; CODE XREF: _receipt_request_print+105p
					; _receipt_request_print+15Bp

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 4
		call	__chkstk
		push	ebp
		push	esi
		mov	esi, [esp+0Ch+arg_4]
		xor	ebp, ebp
		push	esi
		mov	[esp+10h+var_4], ebp
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_34E4
		push	ebx
		mov	ebx, [esp+10h+arg_0]
		push	edi
		nop	dword ptr [eax+00000000h]

loc_347C:				; CODE XREF: _gnames_stack_print+94j
		push	ebp
		push	esi
		call	_sk_value
		mov	ebp, eax
		xor	esi, esi
		push	ebp
		call	_sk_num
		add	esp, 0Ch
		test	eax, eax
		jle	short loc_34C8

loc_3494:				; CODE XREF: _gnames_stack_print+7Aj
		push	esi
		push	ebp
		call	_sk_value
		push	offset ??_C@_04PFOHOKJK@?5?5?5?5?$AA@ ;	"    "
		push	ebx
		mov	edi, eax
		call	_BIO_puts
		push	edi
		push	ebx
		call	_GENERAL_NAME_print
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; `string'
		push	ebx
		call	_BIO_puts
		push	ebp
		inc	esi
		call	_sk_num
		add	esp, 24h
		cmp	esi, eax
		jl	short loc_3494

loc_34C8:				; CODE XREF: _gnames_stack_print+46j
		mov	ebp, [esp+14h+var_4]
		mov	esi, [esp+14h+arg_4]
		inc	ebp
		push	esi
		mov	[esp+18h+var_4], ebp
		call	_sk_num
		add	esp, 4
		cmp	ebp, eax
		jl	short loc_347C
		pop	edi
		pop	ebx

loc_34E4:				; CODE XREF: _gnames_stack_print+21j
		pop	esi
		pop	ebp
		pop	ecx
		retn
_gnames_stack_print endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 34E8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_make_names_stack proc near		; CODE XREF: _make_receipt_request+5p
					; _make_receipt_request+1Cp

var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 4
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		push	edi
		xor	esi, esi
		call	_sk_new_null
		mov	[esp+14h+var_4], eax
		test	eax, eax
		jz	loc_35AD
		mov	ebp, [esp+14h+arg_0]
		xor	ebx, ebx
		push	ebp
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_3578

loc_351C:				; CODE XREF: _make_names_stack+8Ej
		push	ebx
		push	ebp
		call	_sk_value
		push	0
		push	eax
		push	1
		push	0
		push	0
		push	0
		call	_a2i_GENERAL_NAME
		mov	edi, eax
		add	esp, 20h
		test	edi, edi
		jz	short $err$23
		call	_GENERAL_NAMES_new
		mov	esi, eax
		test	esi, esi
		jz	short $err$23
		push	edi
		push	esi
		call	_sk_push
		add	esp, 8
		test	eax, eax
		jz	short $err$23
		push	esi
		push	[esp+18h+var_4]
		xor	edi, edi
		call	_sk_push
		add	esp, 8
		test	eax, eax
		jz	short $err$23
		push	ebp
		xor	esi, esi
		inc	ebx
		call	_sk_num
		add	esp, 4
		cmp	ebx, eax
		jl	short loc_351C

loc_3578:				; CODE XREF: _make_names_stack+32j
		mov	eax, [esp+14h+var_4]
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

$err$23:				; CODE XREF: _make_names_stack+52j
					; _make_names_stack+5Dj ...
		push	offset _GENERAL_NAMES_free
		push	[esp+18h+var_4]
		call	_sk_pop_free
		add	esp, 8
		test	esi, esi
		jz	short loc_35A0
		push	esi
		call	_GENERAL_NAMES_free
		add	esp, 4

loc_35A0:				; CODE XREF: _make_names_stack+ADj
		test	edi, edi
		jz	short loc_35AD
		push	edi
		call	_GENERAL_NAME_free
		add	esp, 4

loc_35AD:				; CODE XREF: _make_names_stack+1Bj
					; _make_names_stack+BAj
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		pop	ecx
		retn
_make_names_stack endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 35B8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_make_receipt_request proc near		; CODE XREF: _cms_main+2DC1p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	[esp+4+arg_0]
		call	_make_names_stack
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	short $err$8
		mov	ecx, [esp+4+arg_8]
		test	ecx, ecx
		jz	short loc_35E4
		push	ecx
		call	_make_names_stack
		add	esp, 4
		test	eax, eax
		jnz	short loc_35E6

$err$8:					; CODE XREF: _make_receipt_request+11j
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_35E4:				; CODE XREF: _make_receipt_request+19j
		xor	eax, eax

loc_35E6:				; CODE XREF: _make_receipt_request+26j
		push	esi
		push	eax
		push	[esp+0Ch+arg_4]
		push	0FFFFFFFFh
		push	0
		call	_CMS_ReceiptRequest_create0
		add	esp, 14h
		pop	esi
		retn
_make_receipt_request endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 35FCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_receipt_request_print proc near	; CODE XREF: _cms_main+31E0p

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 14h
		call	__chkstk
		push	ebx
		push	ebp
		push	[esp+1Ch+arg_4]
		call	_CMS_get0_SignerInfos
		mov	ebp, eax
		xor	ebx, ebx
		push	ebp
		call	_sk_num
		add	esp, 8
		test	eax, eax
		jle	loc_3783
		push	esi
		mov	esi, [esp+20h+arg_0]
		push	edi

loc_362C:				; CODE XREF: _receipt_request_print+17Fj
		push	ebx
		push	ebp
		call	_sk_value
		lea	ecx, [esp+2Ch+var_C]
		push	ecx
		push	eax
		call	_CMS_get1_ReceiptRequest
		inc	ebx
		mov	edi, eax
		push	ebx
		push	offset ??_C@_0M@MJOKHOOJ@Signer?5?$CFd?3?6?$AA@	; "Signer %d:\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 1Ch
		test	edi, edi
		jnz	short loc_3671
		push	offset ??_C@_0BG@GPEAHINO@?5?5No?5Receipt?5Request?6?$AA@ ; "  No Receipt Request\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	loc_375F
; ---------------------------------------------------------------------------

loc_3671:				; CODE XREF: _receipt_request_print+5Bj
		jns	short loc_3696
		push	offset ??_C@_0BP@IENJKCMB@?5?5Receipt?5Request?5Parse?5Error?6?$AA@ ; "	 Receipt Request Parse Error\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_375F
; ---------------------------------------------------------------------------

loc_3696:				; CODE XREF: _receipt_request_print:loc_3671j
		lea	eax, [esp+24h+var_4]
		push	eax
		lea	eax, [esp+28h+var_10]
		push	eax
		lea	eax, [esp+2Ch+var_8]
		push	eax
		lea	eax, [esp+30h+var_14]
		push	eax
		push	[esp+34h+var_C]
		call	_CMS_ReceiptRequest_get0_values
		push	offset ??_C@_0BG@MNKLBEL@?5?5Signed?5Content?5ID?3?6?$AA@ ; "  Signed Content ID:\n"
		push	esi
		call	_BIO_puts
		push	[esp+40h+var_14]
		call	_ASN1_STRING_length
		push	[esp+44h+var_14]
		mov	edi, eax
		call	_ASN1_STRING_data
		push	4
		push	edi
		push	eax
		push	esi
		call	_BIO_dump_indent
		push	offset ??_C@_0BA@INHCPDDK@?5?5Receipts?5From?$AA@ ; "  Receipts	From"
		push	esi
		call	_BIO_puts
		add	esp, 3Ch
		cmp	[esp+24h+var_10], 0
		jz	short loc_370B
		push	offset ??_C@_07EGMHCGEH@?5List?3?6?$AA@	; " List:\n"
		push	esi
		call	_BIO_puts
		push	[esp+2Ch+var_10]
		push	esi
		call	_gnames_stack_print
		add	esp, 10h
		jmp	short loc_3747
; ---------------------------------------------------------------------------

loc_370B:				; CODE XREF: _receipt_request_print+F3j
		mov	eax, [esp+24h+var_8]
		cmp	eax, 1
		jnz	short loc_3724
		push	offset ??_C@_0O@GOHGOJFE@?3?5First?5Tier?6?$AA@	; ": First Tier\n"
		push	esi
		call	_BIO_puts
		add	esp, 8
		jmp	short loc_3747
; ---------------------------------------------------------------------------

loc_3724:				; CODE XREF: _receipt_request_print+116j
		test	eax, eax
		jnz	short loc_3738
		push	offset ??_C@_06MGGNDMCH@?3?5All?6?$AA@ ; ": All\n"
		push	esi
		call	_BIO_puts
		add	esp, 8
		jmp	short loc_3747
; ---------------------------------------------------------------------------

loc_3738:				; CODE XREF: _receipt_request_print+12Aj
		push	eax
		push	offset ??_C@_0P@IJCNGMMK@?5Unknown?5?$CI?$CFd?$CJ?6?$AA@ ; " Unknown (%d)\n"
		push	esi
		call	_BIO_printf
		add	esp, 0Ch

loc_3747:				; CODE XREF: _receipt_request_print+10Dj
					; _receipt_request_print+126j ...
		push	offset ??_C@_0BA@HFOKKJKB@?5?5Receipts?5To?3?6?$AA@ ; "	 Receipts To:\n"
		push	esi
		call	_BIO_puts
		push	[esp+2Ch+var_4]
		push	esi
		call	_gnames_stack_print
		add	esp, 10h

loc_375F:				; CODE XREF: _receipt_request_print+70j
					; _receipt_request_print+95j
		mov	eax, [esp+24h+var_C]
		test	eax, eax
		jz	short loc_3770
		push	eax
		call	_CMS_ReceiptRequest_free
		add	esp, 4

loc_3770:				; CODE XREF: _receipt_request_print+169j
		push	ebp
		call	_sk_num
		add	esp, 4
		cmp	ebx, eax
		jl	loc_362C
		pop	edi
		pop	esi

loc_3783:				; CODE XREF: _receipt_request_print+24j
		pop	ebp
		pop	ebx
		add	esp, 14h
		retn
_receipt_request_print endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 378Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_save_certs	proc near		; CODE XREF: _cms_main+2839p
					; _cms_main+3190p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		test	eax, eax
		jnz	short loc_379A
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------

loc_379A:				; CODE XREF: _save_certs+6j
		push	ebx
		push	offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		push	eax
		call	_BIO_new_file
		mov	ebx, eax
		add	esp, 8
		test	ebx, ebx
		jnz	short loc_37B1
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_37B1:				; CODE XREF: _save_certs+21j
		push	esi
		push	edi
		mov	edi, [esp+0Ch+arg_4]
		xor	esi, esi
		push	edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_37E8
		nop	word ptr [eax+eax+00h]

loc_37CC:				; CODE XREF: _save_certs+5Aj
		push	esi
		push	edi
		call	_sk_value
		push	eax
		push	ebx
		call	_PEM_write_bio_X509
		push	edi
		inc	esi
		call	_sk_num
		add	esp, 14h
		cmp	esi, eax
		jl	short loc_37CC

loc_37E8:				; CODE XREF: _save_certs+38j
		push	ebx
		call	_BIO_free
		add	esp, 4
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebx
		retn
_save_certs	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 37FCh
; COMDAT (pick any)
		public ??_C@_01KDCPPGHE@r?$AA@
; `string'
??_C@_01KDCPPGHE@r?$AA@	db 72h,	0	; DATA XREF: _cms_main+10o
					; _cms_main+2506o ...
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3800h
; COMDAT (pick any)
		public ??_C@_01NOFIACDB@w?$AA@
; `string'
??_C@_01NOFIACDB@w?$AA@	db 77h,	0	; DATA XREF: _cms_main+151o
					; _cms_main+24D3o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3804h
; COMDAT (pick any)
		public ??_C@_08CNCNOCCN@?9encrypt?$AA@
; `string'
??_C@_08CNCNOCCN@?9encrypt?$AA@	db '-encrypt',0 ; DATA XREF: _cms_main+224o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3810h
; COMDAT (pick any)
		public ??_C@_08ODIALGEJ@?9decrypt?$AA@
; `string'
??_C@_08ODIALGEJ@?9decrypt?$AA@	db '-decrypt',0 ; DATA XREF: _cms_main:loc_2A5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 381Ch
; COMDAT (pick any)
		public ??_C@_05LLLFPBKO@?9sign?$AA@
; `string'
??_C@_05LLLFPBKO@?9sign?$AA@ db	'-sign',0 ; DATA XREF: _cms_main:loc_2E5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3824h
; COMDAT (pick any)
		public ??_C@_0O@EMPAONPK@?9sign_receipt?$AA@
; `string'
??_C@_0O@EMPAONPK@?9sign_receipt?$AA@ db '-sign_receipt',0 ; DATA XREF: _cms_main:loc_325o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3834h
; COMDAT (pick any)
		public ??_C@_07JFNKLBOA@?9resign?$AA@
; `string'
??_C@_07JFNKLBOA@?9resign?$AA@ db '-resign',0 ; DATA XREF: _cms_main:loc_365o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 383Ch
; COMDAT (pick any)
		public ??_C@_07FILEFCOC@?9verify?$AA@
; `string'
??_C@_07FILEFCOC@?9verify?$AA@ db '-verify',0 ; DATA XREF: _cms_main:loc_3A5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3844h
; COMDAT (pick any)
		public ??_C@_0BA@BMKHCNOC@?9verify_retcode?$AA@
; `string'
??_C@_0BA@BMKHCNOC@?9verify_retcode?$AA@ db '-verify_retcode',0
					; DATA XREF: _cms_main:loc_3E5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3854h
; COMDAT (pick any)
		public ??_C@_0BA@OAKJJNAB@?9verify_receipt?$AA@
; `string'
??_C@_0BA@OAKJJNAB@?9verify_receipt?$AA@ db '-verify_receipt',0
					; DATA XREF: _cms_main:loc_425o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3864h
; COMDAT (pick any)
		public ??_C@_07DCMEHGOO@?9cmsout?$AA@
; `string'
??_C@_07DCMEHGOO@?9cmsout?$AA@ db '-cmsout',0 ; DATA XREF: _cms_main:loc_480o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 386Ch
; COMDAT (pick any)
		public ??_C@_09KAPIOOKF@?9data_out?$AA@
; `string'
??_C@_09KAPIOOKF@?9data_out?$AA@ db '-data_out',0 ; DATA XREF: _cms_main:loc_4C5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3878h
; COMDAT (pick any)
		public ??_C@_0N@ODOFBAJB@?9data_create?$AA@
; `string'
??_C@_0N@ODOFBAJB@?9data_create?$AA@ db	'-data_create',0 ; DATA XREF: _cms_main:loc_505o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3888h
; COMDAT (pick any)
		public ??_C@_0P@KBJEJHCI@?9digest_verify?$AA@
; `string'
??_C@_0P@KBJEJHCI@?9digest_verify?$AA@ db '-digest_verify',0 ; DATA XREF: _cms_main:loc_545o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3898h
; COMDAT (pick any)
		public ??_C@_0P@GEAAFPFM@?9digest_create?$AA@
; `string'
??_C@_0P@GEAAFPFM@?9digest_create?$AA@ db '-digest_create',0 ; DATA XREF: _cms_main:loc_585o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38A8h
; COMDAT (pick any)
		public ??_C@_09PGPPHINJ@?9compress?$AA@
; `string'
??_C@_09PGPPHINJ@?9compress?$AA@ db '-compress',0 ; DATA XREF: _cms_main:loc_5C5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38B4h
; COMDAT (pick any)
		public ??_C@_0M@BCMGEOME@?9uncompress?$AA@
; `string'
??_C@_0M@BCMGEOME@?9uncompress?$AA@ db '-uncompress',0 ; DATA XREF: _cms_main:loc_605o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38C0h
; COMDAT (pick any)
		public ??_C@_0BH@IJKEBAPA@?9EncryptedData_decrypt?$AA@
; `string'
??_C@_0BH@IJKEBAPA@?9EncryptedData_decrypt?$AA@	db '-EncryptedData_decrypt',0
					; DATA XREF: _cms_main:loc_645o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38D8h
; COMDAT (pick any)
		public ??_C@_0BH@EHAJEEJE@?9EncryptedData_encrypt?$AA@
; `string'
??_C@_0BH@EHAJEEJE@?9EncryptedData_encrypt?$AA@	db '-EncryptedData_encrypt',0
					; DATA XREF: _cms_main:loc_685o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38F0h
; COMDAT (pick any)
		public ??_C@_05DHJJCNDB@?9des3?$AA@
; `string'
??_C@_05DHJJCNDB@?9des3?$AA@ db	'-des3',0 ; DATA XREF: _cms_main:loc_6C5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38F8h
; COMDAT (pick any)
		public ??_C@_04POMGKAPN@?9des?$AA@
; `string'
??_C@_04POMGKAPN@?9des?$AA@ db '-des',0 ; DATA XREF: _cms_main:loc_707o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3900h
; COMDAT (pick any)
		public ??_C@_0L@PLAAFPFP@?9des3?9wrap?$AA@
; `string'
??_C@_0L@PLAAFPFP@?9des3?9wrap?$AA@ db '-des3-wrap',0 ; DATA XREF: _cms_main:loc_749o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 390Ch
; COMDAT (pick any)
		public ??_C@_05IAIHCPC@?9seed?$AA@
; `string'
??_C@_05IAIHCPC@?9seed?$AA@ db '-seed',0 ; DATA XREF: _cms_main:loc_78Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3914h
; COMDAT (pick any)
		public ??_C@_07HIKEAMFN@?9rc2?940?$AA@
; `string'
??_C@_07HIKEAMFN@?9rc2?940?$AA@	db '-rc2-40',0 ; DATA XREF: _cms_main:loc_7CDo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 391Ch
; COMDAT (pick any)
		public ??_C@_08DGGHBBOC@?9rc2?9128?$AA@
; `string'
??_C@_08DGGHBBOC@?9rc2?9128?$AA@ db '-rc2-128',0 ; DATA XREF: _cms_main:loc_80Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3928h
; COMDAT (pick any)
		public ??_C@_07BPEMBNDH@?9rc2?964?$AA@
; `string'
??_C@_07BPEMBNDH@?9rc2?964?$AA@	db '-rc2-64',0 ; DATA XREF: _cms_main:loc_857o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3930h
; COMDAT (pick any)
		public ??_C@_07ELMDAGHH@?9aes128?$AA@
; `string'
??_C@_07ELMDAGHH@?9aes128?$AA@ db '-aes128',0 ; DATA XREF: _cms_main:loc_899o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3938h
; COMDAT (pick any)
		public ??_C@_07LNHJABBM@?9aes192?$AA@
; `string'
??_C@_07LNHJABBM@?9aes192?$AA@ db '-aes192',0 ; DATA XREF: _cms_main:loc_8DBo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3940h
; COMDAT (pick any)
		public ??_C@_07MCLKJCJC@?9aes256?$AA@
; `string'
??_C@_07MCLKJCJC@?9aes256?$AA@ db '-aes256',0 ; DATA XREF: _cms_main:loc_91Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3948h
; COMDAT (pick any)
		public ??_C@_0N@LJCBEHBF@?9aes128?9wrap?$AA@
; `string'
??_C@_0N@LJCBEHBF@?9aes128?9wrap?$AA@ db '-aes128-wrap',0 ; DATA XREF: _cms_main:loc_95Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3958h
; COMDAT (pick any)
		public ??_C@_0N@EADLAEAN@?9aes192?9wrap?$AA@
; `string'
??_C@_0N@EADLAEAN@?9aes192?9wrap?$AA@ db '-aes192-wrap',0 ; DATA XREF: _cms_main:loc_9A7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3968h
; COMDAT (pick any)
		public ??_C@_0N@NKFGAJJE@?9aes256?9wrap?$AA@
; `string'
??_C@_0N@NKFGAJJE@?9aes256?9wrap?$AA@ db '-aes256-wrap',0 ; DATA XREF: _cms_main:loc_9E9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3978h
; COMDAT (pick any)
		public ??_C@_0N@MALOKPBG@?9camellia128?$AA@
; `string'
??_C@_0N@MALOKPBG@?9camellia128?$AA@ db	'-camellia128',0 ; DATA XREF: _cms_main:loc_A2Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3988h
; COMDAT (pick any)
		public ??_C@_0N@DGAEKIHN@?9camellia192?$AA@
; `string'
??_C@_0N@DGAEKIHN@?9camellia192?$AA@ db	'-camellia192',0 ; DATA XREF: _cms_main:loc_A6Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3998h
; COMDAT (pick any)
		public ??_C@_0N@EJMHDLPD@?9camellia256?$AA@
; `string'
??_C@_0N@EJMHDLPD@?9camellia256?$AA@ db	'-camellia256',0 ; DATA XREF: _cms_main:loc_AAFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39A8h
; COMDAT (pick any)
		public ??_C@_0P@IGEOHMJB@?9debug_decrypt?$AA@
; `string'
??_C@_0P@IGEOHMJB@?9debug_decrypt?$AA@ db '-debug_decrypt',0 ; DATA XREF: _cms_main:loc_AF7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39B8h
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _cms_main:loc_B32o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39C0h
; COMDAT (pick any)
		public ??_C@_09LLMNCLPN@?9nointern?$AA@
; `string'
??_C@_09LLMNCLPN@?9nointern?$AA@ db '-nointern',0 ; DATA XREF: _cms_main:loc_B6Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39CCh
; COMDAT (pick any)
		public ??_C@_09JLKGPCDL@?9noverify?$AA@
; `string'
??_C@_09JLKGPCDL@?9noverify?$AA@ db '-noverify',0 ; DATA XREF: _cms_main:loc_BA5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39D8h
; COMDAT (pick any)
		public ??_C@_0BH@MMNEOADL@?9no_signer_cert_verify?$AA@
; `string'
??_C@_0BH@MMNEOADL@?9no_signer_cert_verify?$AA@	db '-no_signer_cert_verify',0
					; DATA XREF: _cms_main+B9Do
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39F0h
; COMDAT (pick any)
		public ??_C@_08JLLJAHEH@?9nocerts?$AA@
; `string'
??_C@_08JLLJAHEH@?9nocerts?$AA@	db '-nocerts',0 ; DATA XREF: _cms_main+BD1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39FCh
; COMDAT (pick any)
		public ??_C@_07NEHLGPOI@?9noattr?$AA@
; `string'
??_C@_07NEHLGPOI@?9noattr?$AA@ db '-noattr',0 ; DATA XREF: _cms_main:loc_C45o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A04h
; COMDAT (pick any)
		public ??_C@_09HEABEDGI@?9nodetach?$AA@
; `string'
??_C@_09HEABEDGI@?9nodetach?$AA@ db '-nodetach',0 ; DATA XREF: _cms_main:loc_C80o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A10h
; COMDAT (pick any)
		public ??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@
; `string'
??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@ db '-nosmimecap',0 ; DATA XREF: _cms_main:loc_CBDo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A1Ch
; COMDAT (pick any)
		public ??_C@_07MHGMHDIE@?9binary?$AA@
; `string'
??_C@_07MHGMHDIE@?9binary?$AA@ db '-binary',0 ; DATA XREF: _cms_main:loc_CF8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A24h
; COMDAT (pick any)
		public ??_C@_06KPLIMOGD@?9keyid?$AA@
; `string'
??_C@_06KPLIMOGD@?9keyid?$AA@ db '-keyid',0 ; DATA XREF: _cms_main:loc_D33o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A2Ch
; COMDAT (pick any)
		public ??_C@_07GLFDAICA@?9nosigs?$AA@
; `string'
??_C@_07GLFDAICA@?9nosigs?$AA@ db '-nosigs',0 ; DATA XREF: _cms_main:loc_D70o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A34h
; COMDAT (pick any)
		public ??_C@_0BD@MMHMBDO@?9no_content_verify?$AA@
; `string'
??_C@_0BD@MMHMBDO@?9no_content_verify?$AA@ db '-no_content_verify',0
					; DATA XREF: _cms_main:loc_DADo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A48h
; COMDAT (pick any)
		public ??_C@_0BA@KGCICCLN@?9no_attr_verify?$AA@
; `string'
??_C@_0BA@KGCICCLN@?9no_attr_verify?$AA@ db '-no_attr_verify',0
					; DATA XREF: _cms_main:loc_DE5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A58h
; COMDAT (pick any)
		public ??_C@_07KDDBNCBD@?9stream?$AA@
; `string'
??_C@_07KDDBNCBD@?9stream?$AA@ db '-stream',0 ; DATA XREF: _cms_main:loc_E1Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A60h
; COMDAT (pick any)
		public ??_C@_06MPPEKNN@?9indef?$AA@
; `string'
??_C@_06MPPEKNN@?9indef?$AA@ db	'-indef',0 ; DATA XREF: _cms_main:loc_E58o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A68h
; COMDAT (pick any)
		public ??_C@_08BCNBDCCA@?9noindef?$AA@
; `string'
??_C@_08BCNBDCCA@?9noindef?$AA@	db '-noindef',0 ; DATA XREF: _cms_main:loc_E93o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A74h
; COMDAT (pick any)
		public ??_C@_0L@DMDFODFL@?9nooldmime?$AA@
; `string'
??_C@_0L@DMDFODFL@?9nooldmime?$AA@ db '-nooldmime',0 ; DATA XREF: _cms_main:loc_ED0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A80h
; COMDAT (pick any)
		public ??_C@_08KAKEAKLE@?9crlfeol?$AA@
; `string'
??_C@_08KAKEAKLE@?9crlfeol?$AA@	db '-crlfeol',0 ; DATA XREF: _cms_main:loc_F10o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A8Ch
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _cms_main:loc_F50o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A94h
; COMDAT (pick any)
		public ??_C@_0BH@KMOFCJIF@?9receipt_request_print?$AA@
; `string'
??_C@_0BH@KMOFCJIF@?9receipt_request_print?$AA@	db '-receipt_request_print',0
					; DATA XREF: _cms_main:loc_F95o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3AACh
; COMDAT (pick any)
		public ??_C@_0BF@EKJIDKJC@?9receipt_request_all?$AA@
; `string'
??_C@_0BF@EKJIDKJC@?9receipt_request_all?$AA@ db '-receipt_request_all',0
					; DATA XREF: _cms_main:loc_FD5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3AC4h
; COMDAT (pick any)
		public ??_C@_0BH@PNLMIOCN@?9receipt_request_first?$AA@
; `string'
??_C@_0BH@PNLMIOCN@?9receipt_request_first?$AA@	db '-receipt_request_first',0
					; DATA XREF: _cms_main:loc_1011o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3ADCh
; COMDAT (pick any)
		public ??_C@_0BG@MOLIDNFN@?9receipt_request_from?$AA@
; `string'
??_C@_0BG@MOLIDNFN@?9receipt_request_from?$AA@ db '-receipt_request_from',0
					; DATA XREF: _cms_main:loc_1055o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3AF4h
; COMDAT (pick any)
		public ??_C@_0BE@DCFLMMEP@?9receipt_request_to?$AA@
; `string'
??_C@_0BE@DCFLMMEP@?9receipt_request_to?$AA@ db	'-receipt_request_to',0
					; DATA XREF: _cms_main:loc_10C1o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B08h
; COMDAT (pick any)
		public ??_C@_06LPNCEOC@?9print?$AA@
; `string'
??_C@_06LPNCEOC@?9print?$AA@ db	'-print',0 ; DATA XREF: _cms_main:loc_1131o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B10h
; COMDAT (pick any)
		public ??_C@_0L@PPMEHDHJ@?9secretkey?$AA@
; `string'
??_C@_0L@PPMEHDHJ@?9secretkey?$AA@ db '-secretkey',0 ; DATA XREF: _cms_main:loc_1180o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B1Ch
; COMDAT (pick any)
		public ??_C@_0BA@FAKPIIIA@Invalid?5key?5?$CFs?6?$AA@
; `string'
??_C@_0BA@FAKPIIIA@Invalid?5key?5?$CFs?6?$AA@ db 'Invalid key %s',0Ah,0
					; DATA XREF: _cms_main+1C9Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B2Ch
; COMDAT (pick any)
		public ??_C@_0N@HBGGEDPB@?9secretkeyid?$AA@
; `string'
??_C@_0N@HBGGEDPB@?9secretkeyid?$AA@ db	'-secretkeyid',0 ; DATA XREF: _cms_main:loc_11F8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B3Ch
; COMDAT (pick any)
		public ??_C@_0P@ICPOFKNH@Invalid?5id?5?$CFs?6?$AA@
; `string'
??_C@_0P@ICPOFKNH@Invalid?5id?5?$CFs?6?$AA@ db 'Invalid id %s',0Ah,0
					; DATA XREF: _cms_main+1CBDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B4Ch
; COMDAT (pick any)
		public ??_C@_0P@BIHPAMDO@?9pwri_password?$AA@
; `string'
??_C@_0P@BIHPAMDO@?9pwri_password?$AA@ db '-pwri_password',0
					; DATA XREF: _cms_main:loc_126Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B5Ch
; COMDAT (pick any)
		public ??_C@_0P@CABCOKCI@?9econtent_type?$AA@
; `string'
??_C@_0P@CABCOKCI@?9econtent_type?$AA@ db '-econtent_type',0
					; DATA XREF: _cms_main:loc_12C1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B6Ch
; COMDAT (pick any)
		public ??_C@_0BA@JNGKKDLH@Invalid?5OID?5?$CFs?6?$AA@
; `string'
??_C@_0BA@JNGKKDLH@Invalid?5OID?5?$CFs?6?$AA@ db 'Invalid OID %s',0Ah,0
					; DATA XREF: _cms_main+1CDBo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B7Ch
; COMDAT (pick any)
		public ??_C@_05LGFPCDPE@?9rand?$AA@
; `string'
??_C@_05LGFPCDPE@?9rand?$AA@ db	'-rand',0 ; DATA XREF: _cms_main:loc_132Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B84h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _cms_main:loc_1381o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B8Ch
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _cms_main:loc_13D4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B94h
; COMDAT (pick any)
		public ??_C@_03DNHOOAOE@?9to?$AA@
; `string'
??_C@_03DNHOOAOE@?9to?$AA@ db '-to',0   ; DATA XREF: _cms_main:loc_1424o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B98h
; COMDAT (pick any)
		public ??_C@_05LBJDDLLJ@?9from?$AA@
; `string'
??_C@_05LBJDDLLJ@?9from?$AA@ db	'-from',0 ; DATA XREF: _cms_main:loc_1474o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BA0h
; COMDAT (pick any)
		public ??_C@_08GNEDOIFN@?9subject?$AA@
; `string'
??_C@_08GNEDOIFN@?9subject?$AA@	db '-subject',0 ; DATA XREF: _cms_main:loc_14C4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BACh
; COMDAT (pick any)
		public ??_C@_07KJCLPKOH@?9signer?$AA@
; `string'
??_C@_07KJCLPKOH@?9signer?$AA@ db '-signer',0 ; DATA XREF: _cms_main:loc_1514o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BB4h
; COMDAT (pick any)
		public ??_C@_06JKGLPNJO@?9recip?$AA@
; `string'
??_C@_06JKGLPNJO@?9recip?$AA@ db '-recip',0 ; DATA XREF: _cms_main:loc_15B4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BBCh
; COMDAT (pick any)
		public ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@
; `string'
??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ db	'recipient certificate file',0
					; DATA XREF: _cms_main:loc_160Eo
					; _cms_main:loc_25BCo ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BD8h
; COMDAT (pick any)
		public ??_C@_09HECJOJIB@?9certsout?$AA@
; `string'
??_C@_09HECJOJIB@?9certsout?$AA@ db '-certsout',0 ; DATA XREF: _cms_main:loc_166Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BE4h
; COMDAT (pick any)
		public ??_C@_03MNHNKBNA@?9md?$AA@
; `string'
??_C@_03MNHNKBNA@?9md?$AA@ dd 646D2Dh	; DATA XREF: _cms_main:loc_16C4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BE8h
; COMDAT (pick any)
		public ??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@
; `string'
??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@ db 'Unknown digest %s',0Ah,0
					; DATA XREF: _cms_main+1CF9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BFCh
; COMDAT (pick any)
		public ??_C@_06JJMGFEBF@?9inkey?$AA@
; `string'
??_C@_06JJMGFEBF@?9inkey?$AA@ db '-inkey',0 ; DATA XREF: _cms_main:loc_1728o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C04h
; COMDAT (pick any)
		public ??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@
; `string'
??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@ db	'Illegal -inkey without -signer',0Ah,0
					; DATA XREF: _cms_main:loc_1DF8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C24h
; COMDAT (pick any)
		public ??_C@_08OAHLMBGP@?9keyform?$AA@
; `string'
??_C@_08OAHLMBGP@?9keyform?$AA@	db '-keyform',0 ; DATA XREF: _cms_main:loc_17CAo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C30h
; COMDAT (pick any)
		public ??_C@_07KBADGAKO@?9keyopt?$AA@
; `string'
??_C@_07KBADGAKO@?9keyopt?$AA@ db '-keyopt',0 ; DATA XREF: _cms_main:loc_1825o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C38h
; COMDAT (pick any)
		public ??_C@_0BC@BMIJEMOD@No?5key?5specified?6?$AA@
; `string'
??_C@_0BC@BMIJEMOD@No?5key?5specified?6?$AA@ db	'No key specified',0Ah,0
					; DATA XREF: _cms_main:loc_1D65o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C4Ch
; COMDAT (pick any)
		public ??_C@_0N@DLDDGBEE@?4?2apps?2cms?4c?$AA@
; `string'
??_C@_0N@DLDDGBEE@?4?2apps?2cms?4c?$AA@	db '.\apps\cms.c',0 ; DATA XREF: _cms_main+188Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C5Ch
; COMDAT (pick any)
		public ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
; `string'
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ db 'Out of memory',0Ah,0
					; DATA XREF: _cms_main:loc_1D4Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C6Ch
; COMDAT (pick any)
		public ??_C@_08FMMBMNIL@?9rctform?$AA@
; `string'
??_C@_08FMMBMNIL@?9rctform?$AA@	db '-rctform',0 ; DATA XREF: _cms_main:loc_1930o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C78h
; COMDAT (pick any)
		public ??_C@_09LJGMBFEA@?9certfile?$AA@
; `string'
??_C@_09LJGMBFEA@?9certfile?$AA@ db '-certfile',0 ; DATA XREF: _cms_main:loc_1990o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C84h
; COMDAT (pick any)
		public ??_C@_07EAFCHGPO@?9CAfile?$AA@
; `string'
??_C@_07EAFCHGPO@?9CAfile?$AA@ db '-CAfile',0 ; DATA XREF: _cms_main:loc_19E4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C8Ch
; COMDAT (pick any)
		public ??_C@_07MNNNLALG@?9CApath?$AA@
; `string'
??_C@_07MNNNLALG@?9CApath?$AA@ db '-CApath',0 ; DATA XREF: _cms_main:loc_1A34o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C94h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ db '-in',0   ; DATA XREF: _cms_main:loc_1A84o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C98h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _cms_main:loc_1AD4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3CA0h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _cms_main:loc_1B30o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3CACh
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _cms_main:loc_1B90o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3CB4h
; COMDAT (pick any)
		public ??_C@_08HCJMGADN@?9content?$AA@
; `string'
??_C@_08HCJMGADN@?9content?$AA@	db '-content',0 ; DATA XREF: _cms_main:loc_1BE4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3CC0h
; COMDAT (pick any)
		public ??_C@_0BP@IDBOPNLA@No?5Signed?5Receipts?5Recipients?6?$AA@
; `string'
??_C@_0BP@IDBOPNLA@No?5Signed?5Receipts?5Recipients?6?$AA@ db 'No Signed Receipts Recipients',0Ah,0
					; DATA XREF: _cms_main+1C81o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3CE0h
; COMDAT (pick any)
		public ??_C@_0CJ@KCIOHNGD@Signed?5receipts?5only?5allowed?5wit@
; `string'
??_C@_0CJ@KCIOHNGD@Signed?5receipts?5only?5allowed?5wit@ db 'Signed receipts only allowed with -sign',0Ah,0
					; DATA XREF: _cms_main:loc_1D9Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3D0Ch
; COMDAT (pick any)
		public ??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@
; `string'
??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@ db 'Multiple signers or keys not allowed',0Ah,0
					; DATA XREF: _cms_main:loc_1DC8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3D34h
; COMDAT (pick any)
		public ??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@
; `string'
??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@ db 'No signer certificate specified',0Ah,0
					; DATA XREF: _cms_main+1E15o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3D58h
; COMDAT (pick any)
		public ??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@
; `string'
??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@ db 'No recipient certificate or key specified',0Ah,0
					; DATA XREF: _cms_main+1E75o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3D84h
; COMDAT (pick any)
		public ??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@
; `string'
??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@ db 'No recipient(s) certificate(s) specified',0Ah,0
					; DATA XREF: _cms_main+1EB2o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3DB0h
; COMDAT (pick any)
		public ??_C@_0CC@JOICAPMG@Usage?5cms?5?$FLoptions?$FN?5cert?4pem?5?4?4?4@
; `string'
??_C@_0CC@JOICAPMG@Usage?5cms?5?$FLoptions?$FN?5cert?4pem?5?4?4?4@ db 'Usage cms [options] cert.pem ...',0Ah,0
					; DATA XREF: _cms_main:$argerr$943o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3DD4h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _cms_main+1F05o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3DE8h
; COMDAT (pick any)
		public ??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@
; `string'
??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@ db '-encrypt       encrypt message',0Ah,0
					; DATA XREF: _cms_main+1F15o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3E08h
; COMDAT (pick any)
		public ??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@
; `string'
??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@ db '-decrypt       decrypt encrypted message',0Ah,0
					; DATA XREF: _cms_main+1F25o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3E34h
; COMDAT (pick any)
		public ??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@
; `string'
??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@ db '-sign          sign message',0Ah,0
					; DATA XREF: _cms_main+1F35o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3E54h
; COMDAT (pick any)
		public ??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@
; `string'
??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@	db '-verify        verify signed message',0Ah,0
					; DATA XREF: _cms_main+1F45o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3E7Ch
; COMDAT (pick any)
		public ??_C@_0CF@IGGOHCKF@?9cmsout?5?5?5?5?5?5?5?5output?5CMS?5struct@
; `string'
??_C@_0CF@IGGOHCKF@?9cmsout?5?5?5?5?5?5?5?5output?5CMS?5struct@	db '-cmsout        output CMS structure',0Ah,0
					; DATA XREF: _cms_main+1F55o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3EA4h
; COMDAT (pick any)
		public ??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@
; `string'
??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@ db '-des3          encrypt with triple DES',0Ah,0
					; DATA XREF: _cms_main+1F65o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3ECCh
; COMDAT (pick any)
		public ??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@
; `string'
??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@ db '-des           encrypt with DES',0Ah,0
					; DATA XREF: _cms_main+1F78o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3EF0h
; COMDAT (pick any)
		public ??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@
; `string'
??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@ db '-seed          encrypt with SEED',0Ah,0
					; DATA XREF: _cms_main+1F88o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F14h
; COMDAT (pick any)
		public ??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
; `string'
??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ db '-rc2-40        encrypt with RC2-40 (default)',0Ah,0
					; DATA XREF: _cms_main+1F98o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F44h
; COMDAT (pick any)
		public ??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
; `string'
??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ db '-rc2-64        encrypt with RC2-64',0Ah,0
					; DATA XREF: _cms_main+1FA8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F68h
; COMDAT (pick any)
		public ??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
; `string'
??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ db '-rc2-128       encrypt with RC2-128',0Ah,0
					; DATA XREF: _cms_main+1FB8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F90h
; COMDAT (pick any)
		public ??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
; `string'
??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ db '-aes128, -aes192, -aes256',0Ah,0
					; DATA XREF: _cms_main+1FC8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3FACh
; COMDAT (pick any)
		public ??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@
; `string'
??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ db '               encrypt PEM output with cbc aes',0Ah,0
					; DATA XREF: _cms_main+1FD8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3FDCh
; COMDAT (pick any)
		public ??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@
; `string'
??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@ db '-camellia128, -camellia192, -camellia256',0Ah,0
					; DATA XREF: _cms_main+1FE8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4008h
; COMDAT (pick any)
		public ??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@
; `string'
??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ db '               encrypt PEM output with cbc camellia',0Ah,0
					; DATA XREF: _cms_main+1FFBo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 4040h
; COMDAT (pick any)
		public ??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@
; `string'
??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@ db '-nointern      don',27h,'t search certificates in message for signer'
					; DATA XREF: _cms_main+200Bo
		db 0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4080h
; COMDAT (pick any)
		public ??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@
; `string'
??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@ db '-nosigs        don',27h,'t verify message signature',0Ah,0
					; DATA XREF: _cms_main+201Bo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40B0h
; COMDAT (pick any)
		public ??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@
; `string'
??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@ db '-noverify      don',27h,'t verify signers certificate',0Ah,0
					; DATA XREF: _cms_main+202Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40E4h
; COMDAT (pick any)
		public ??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@
; `string'
??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@	db '-nocerts       don',27h,'t include signers certificate when signing',0Ah
					; DATA XREF: _cms_main+203Bo
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4124h
; COMDAT (pick any)
		public ??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@
; `string'
??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@ db '-nodetach      use opaque signing',0Ah,0
					; DATA XREF: _cms_main+204Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4148h
; COMDAT (pick any)
		public ??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@
; `string'
??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@ db '-noattr        don',27h,'t include any signed attributes',0Ah,0
					; DATA XREF: _cms_main+205Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 417Ch
; COMDAT (pick any)
		public ??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@
; `string'
??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@ db '-binary        don',27h,'t translate message to text',0Ah,0
					; DATA XREF: _cms_main+206Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 41ACh
; COMDAT (pick any)
		public ??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@
; `string'
??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@ db '-certfile file other certificates file',0Ah,0
					; DATA XREF: _cms_main+207Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 41D4h
; COMDAT (pick any)
		public ??_C@_0CI@GGEHAABP@?9certsout?5file?5certificate?5outpu@
; `string'
??_C@_0CI@GGEHAABP@?9certsout?5file?5certificate?5outpu@ db '-certsout file certificate output file',0Ah,0
					; DATA XREF: _cms_main+208Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 41FCh
; COMDAT (pick any)
		public ??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@
; `string'
??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@ db '-signer file   signer certificate file',0Ah,0
					; DATA XREF: _cms_main+209Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4224h
; COMDAT (pick any)
		public ??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@
; `string'
??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@ db '-recip  file   recipient certificate file for decryption',0Ah,0
					; DATA XREF: _cms_main+20AEo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4260h
; COMDAT (pick any)
		public ??_C@_0CL@IOHIFDOI@?9keyid?5?5?5?5?5?5?5?5?5use?5subject?5key?5i@
; `string'
??_C@_0CL@IOHIFDOI@?9keyid?5?5?5?5?5?5?5?5?5use?5subject?5key?5i@ db '-keyid         use subject key identifier',0Ah,0
					; DATA XREF: _cms_main+20BEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 428Ch
; COMDAT (pick any)
		public ??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@ db '-in file       input file',0Ah,0
					; DATA XREF: _cms_main+20CEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 42A8h
; COMDAT (pick any)
		public ??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@
; `string'
??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@ db	'-inform arg    input format SMIME (default), PEM or DER',0Ah,0
					; DATA XREF: _cms_main+20DEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 42E4h
; COMDAT (pick any)
		public ??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@
; `string'
??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@ db	'-inkey file    input private key (if not signer or recipient)',0Ah,0
					; DATA XREF: _cms_main+20EEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4324h
; COMDAT (pick any)
		public ??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@
; `string'
??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@ db '-keyform arg   input private key format (PEM or ENGINE)',0Ah,0
					; DATA XREF: _cms_main+2101o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4360h
; COMDAT (pick any)
		public ??_C@_0CK@CCJDMIIG@?9keyopt?5nm?3v?5?5?5set?5public?5key?5pa@
; `string'
??_C@_0CK@CCJDMIIG@?9keyopt?5nm?3v?5?5?5set?5public?5key?5pa@ db '-keyopt nm:v   set public key parameters',0Ah,0
					; DATA XREF: _cms_main+2111o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 438Ch
; COMDAT (pick any)
		public ??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@ db '-out file      output file',0Ah,0
					; DATA XREF: _cms_main+2121o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 43A8h
; COMDAT (pick any)
		public ??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@
; `string'
??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@ db '-outform arg   output format SMIME (default), PEM or DER',0Ah,0
					; DATA XREF: _cms_main+2131o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 43E4h
; COMDAT (pick any)
		public ??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@
; `string'
??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@ db '-content file  supply or override content for detached signature',0Ah
					; DATA XREF: _cms_main+2141o
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4428h
; COMDAT (pick any)
		public ??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@
; `string'
??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@ db	'-to addr       to address',0Ah,0
					; DATA XREF: _cms_main+2151o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4444h
; COMDAT (pick any)
		public ??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@
; `string'
??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@	db '-from ad       from address',0Ah,0
					; DATA XREF: _cms_main+2161o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4464h
; COMDAT (pick any)
		public ??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@
; `string'
??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@	db '-subject s     subject',0Ah,0
					; DATA XREF: _cms_main+2171o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 447Ch
; COMDAT (pick any)
		public ??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@
; `string'
??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@ db '-text          include or delete text MIME headers',0Ah,0
					; DATA XREF: _cms_main+2184o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44B0h
; COMDAT (pick any)
		public ??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@
; `string'
??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@ db '-CApath dir    trusted certificates directory',0Ah,0
					; DATA XREF: _cms_main+2194o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44E0h
; COMDAT (pick any)
		public ??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@
; `string'
??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@ db '-CAfile file   trusted certificates file',0Ah,0
					; DATA XREF: _cms_main+21A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 450Ch
; COMDAT (pick any)
		public ??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@
; `string'
??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@ db '-no_alt_chains only ever use the first certificate chain found',0Ah,0
					; DATA XREF: _cms_main+21B4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 454Ch
; COMDAT (pick any)
		public ??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@
; `string'
??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@ db '-crl_check     check revocation status of signer',27h,'s certificate'
					; DATA XREF: _cms_main+21C4o
		db ' using CRLs',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 4598h
; COMDAT (pick any)
		public ??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@
; `string'
??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@ db '-crl_check_all check revocation status of signer',27h,'s certificate'
					; DATA XREF: _cms_main+21D4o
		db ' chain using CRLs',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 45ECh
; COMDAT (pick any)
		public ??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@
; `string'
??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@ db '-engine e      use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _cms_main+21E4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4628h
; COMDAT (pick any)
		public ??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@
; `string'
??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@ db '-passin arg    input file pass phrase source',0Ah,0
					; DATA XREF: _cms_main+21F4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4658h
; COMDAT (pick any)
		public ??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
; `string'
??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ db '-rand file%cfile%c...',0Ah,0
					; DATA XREF: _cms_main+220Bo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 4670h
; COMDAT (pick any)
		public ??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@
; `string'
??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@ db '               load the file (or the files in the directory) into'
					; DATA XREF: _cms_main+221Bo
		db 0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 46B4h
; COMDAT (pick any)
		public ??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@
; `string'
??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@ db '               the random number generator',0Ah,0
					; DATA XREF: _cms_main+222Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 46E0h
; COMDAT (pick any)
		public ??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@
; `string'
??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@ db 'cert.pem       recipient certificate(s) for encryption',0Ah,0
					; DATA XREF: _cms_main+223Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4718h
; COMDAT (pick any)
		public ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; `string'
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ db 'Error getting password',0Ah,0
					; DATA XREF: _cms_main+243Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4730h
; COMDAT (pick any)
		public ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
; `string'
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ db '%ld semi-random bytes loaded',0Ah,0
					; DATA XREF: _cms_main+2481o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4750h
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 77h,	62h, 0	; DATA XREF: _cms_main+24BEo
					; _cms_main+24CEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4754h
; COMDAT (pick any)
		public ??_C@_02JDPG@rb?$AA@
; `string'
??_C@_02JDPG@rb?$AA@ db	72h, 62h, 0	; DATA XREF: _cms_main+24E4o
					; _cms_main+27D6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4758h
; COMDAT (pick any)
		public ??_C@_0BC@OLCHLHPB@No?5secret?5key?5id?6?$AA@
; `string'
??_C@_0BC@OLCHLHPB@No?5secret?5key?5id?6?$AA@ db 'No secret key id',0Ah,0
					; DATA XREF: _cms_main+253Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 476Ch
; COMDAT (pick any)
		public ??_C@_0BB@ODBFPAJB@certificate?5file?$AA@
; `string'
??_C@_0BB@ODBFPAJB@certificate?5file?$AA@ db 'certificate file',0
					; DATA XREF: _cms_main+25D2o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4780h
; COMDAT (pick any)
		public ??_C@_0CA@IABCEFLO@receipt?5signer?5certificate?5file?$AA@
; `string'
??_C@_0CA@IABCEFLO@receipt?5signer?5certificate?5file?$AA@ db 'receipt signer certificate file',0
					; DATA XREF: _cms_main+2660o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 47A0h
; COMDAT (pick any)
		public ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@
; `string'
??_C@_0BB@DELANBNN@signing?5key?5file?$AA@ db 'signing key file',0
					; DATA XREF: _cms_main:loc_26DFo
					; _cms_main+2E56o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 47B4h
; COMDAT (pick any)
		public ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open input file %s',0Ah,0
					; DATA XREF: _cms_main+2702o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 47D0h
; COMDAT (pick any)
		public ??_C@_0BP@PKFBHPHI@Bad?5input?5format?5for?5CMS?5file?6?$AA@
; `string'
??_C@_0BP@PKFBHPHI@Bad?5input?5format?5for?5CMS?5file?6?$AA@ db	'Bad input format for CMS file',0Ah,0
					; DATA XREF: _cms_main:loc_28BFo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 47F0h
; COMDAT (pick any)
		public ??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@
; `string'
??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@ db 'Error reading S/MIME message',0Ah,0
					; DATA XREF: _cms_main+27A1o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4810h
; COMDAT (pick any)
		public ??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@ db	'Can',27h,'t read content file %s',0Ah,0
					; DATA XREF: _cms_main+27F9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 482Ch
; COMDAT (pick any)
		public ??_C@_0BL@HKKLEOHM@Error?5writing?5certs?5to?5?$CFs?6?$AA@
; `string'
??_C@_0BL@HKKLEOHM@Error?5writing?5certs?5to?5?$CFs?6?$AA@ db 'Error writing certs to %s',0Ah,0
					; DATA XREF: _cms_main+284Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4848h
; COMDAT (pick any)
		public ??_C@_0BM@OJPDJDBN@Can?8t?5open?5receipt?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BM@OJPDJDBN@Can?8t?5open?5receipt?5file?5?$CFs?6?$AA@ db	'Can',27h,'t open receipt file %s',0Ah,0
					; DATA XREF: _cms_main+28E5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4864h
; COMDAT (pick any)
		public ??_C@_0BO@FKJGLJL@Bad?5input?5format?5for?5receipt?6?$AA@
; `string'
??_C@_0BO@FKJGLJL@Bad?5input?5format?5for?5receipt?6?$AA@ db 'Bad input format for receipt',0Ah,0
					; DATA XREF: _cms_main:loc_29A9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4884h
; COMDAT (pick any)
		public ??_C@_0BH@JMCDABG@Error?5reading?5receipt?6?$AA@
; `string'
??_C@_0BH@JMCDABG@Error?5reading?5receipt?6?$AA@ db 'Error reading receipt',0Ah,0
					; DATA XREF: _cms_main+294Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 489Ch
; COMDAT (pick any)
		public ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open output file %s',0Ah,0
					; DATA XREF: _cms_main+29B3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48B8h
; COMDAT (pick any)
		public ??_C@_0CH@DLNBHHKH@Signed?5Receipt?5Request?5Creation?5@
; `string'
??_C@_0CH@DLNBHHKH@Signed?5Receipt?5Request?5Creation?5@ db 'Signed Receipt Request Creation Error',0Ah,0
					; DATA XREF: _cms_main+2DD4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48E0h
; COMDAT (pick any)
		public ??_C@_0BD@FNCKELBI@signer?5certificate?$AA@
; `string'
??_C@_0BD@FNCKELBI@signer?5certificate?$AA@ db 'signer certificate',0
					; DATA XREF: _cms_main+2E2Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48F4h
; COMDAT (pick any)
		public ??_C@_0BO@JOIMJPPK@Error?5creating?5CMS?5structure?6?$AA@
; `string'
??_C@_0BO@JOIMJPPK@Error?5creating?5CMS?5structure?6?$AA@ db 'Error creating CMS structure',0Ah,0
					; DATA XREF: _cms_main+2D25o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4914h
; COMDAT (pick any)
		public ??_C@_0CH@ELBFIHKK@Error?5decrypting?5CMS?5using?5secre@
; `string'
??_C@_0CH@ELBFIHKK@Error?5decrypting?5CMS?5using?5secre@ db 'Error decrypting CMS using secret key',0Ah,0
					; DATA XREF: _cms_main+2FB9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 493Ch
; COMDAT (pick any)
		public ??_C@_0CI@DPKBFGIK@Error?5decrypting?5CMS?5using?5priva@
; `string'
??_C@_0CI@DPKBFGIK@Error?5decrypting?5CMS?5using?5priva@ db 'Error decrypting CMS using private key',0Ah,0
					; DATA XREF: _cms_main+2FFAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4964h
; COMDAT (pick any)
		public ??_C@_0CF@MGDLJCKG@Error?5decrypting?5CMS?5using?5passw@
; `string'
??_C@_0CF@MGDLJCKG@Error?5decrypting?5CMS?5using?5passw@ db 'Error decrypting CMS using password',0Ah,0
					; DATA XREF: _cms_main+3019o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 498Ch
; COMDAT (pick any)
		public ??_C@_0CA@OLLBKEFE@Error?5decrypting?5CMS?5structure?6?$AA@
; `string'
??_C@_0CA@OLLBKEFE@Error?5decrypting?5CMS?5structure?6?$AA@ db 'Error decrypting CMS structure',0Ah,0
					; DATA XREF: _cms_main+303Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 49ACh
; COMDAT (pick any)
		public ??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@
; `string'
??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@ db 'Verification successful',0Ah,0
					; DATA XREF: _cms_main+30CDo
					; _cms_main+316Bo ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 49C8h
; COMDAT (pick any)
		public ??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@
; `string'
??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@	db 'Verification failure',0Ah,0
					; DATA XREF: _cms_main:loc_3127o
					; _cms_main:loc_322Fo ...
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 49E0h
; COMDAT (pick any)
		public ??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@
; `string'
??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@ db 'Error writing signers to %s',0Ah,0
					; DATA XREF: _cms_main+319Do
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A00h
; COMDAT (pick any)
		public ??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@
; `string'
??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@ db 'To: %s',0Ah,0 ; DATA XREF: _cms_main+32D9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A08h
; COMDAT (pick any)
		public ??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@
; `string'
??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@ db 'From: %s',0Ah,0 ; DATA XREF: _cms_main+32F3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A14h
; COMDAT (pick any)
		public ??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@
; `string'
??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@ db 'Subject: %s',0Ah,0
					; DATA XREF: _cms_main+330Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A24h
; COMDAT (pick any)
		public ??_C@_0CA@EMDFFBCC@Bad?5output?5format?5for?5CMS?5file?6?$AA@
; `string'
??_C@_0CA@EMDFFBCC@Bad?5output?5format?5for?5CMS?5file?6?$AA@ db 'Bad output format for CMS file',0Ah,0
					; DATA XREF: _cms_main:loc_33B8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A44h
; COMDAT (pick any)
		public ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
; `string'
??_C@_04PFOHOKJK@?5?5?5?5?$AA@ db '    ',0 ; DATA XREF: _gnames_stack_print+4Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A4Ch
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah, 0	; DATA XREF: _gnames_stack_print+63o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A50h
; COMDAT (pick any)
		public ??_C@_0M@MJOKHOOJ@Signer?5?$CFd?3?6?$AA@
; `string'
??_C@_0M@MJOKHOOJ@Signer?5?$CFd?3?6?$AA@ db 'Signer %d:',0Ah,0
					; DATA XREF: _receipt_request_print+46o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A5Ch
; COMDAT (pick any)
		public ??_C@_0BG@GPEAHINO@?5?5No?5Receipt?5Request?6?$AA@
; `string'
??_C@_0BG@GPEAHINO@?5?5No?5Receipt?5Request?6?$AA@ db '  No Receipt Request',0Ah,0
					; DATA XREF: _receipt_request_print+5Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A74h
; COMDAT (pick any)
		public ??_C@_0BP@IENJKCMB@?5?5Receipt?5Request?5Parse?5Error?6?$AA@
; `string'
??_C@_0BP@IENJKCMB@?5?5Receipt?5Request?5Parse?5Error?6?$AA@ db	'  Receipt Request Parse Error',0Ah,0
					; DATA XREF: _receipt_request_print+77o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A94h
; COMDAT (pick any)
		public ??_C@_0BG@MNKLBEL@?5?5Signed?5Content?5ID?3?6?$AA@
; `string'
??_C@_0BG@MNKLBEL@?5?5Signed?5Content?5ID?3?6?$AA@ db '  Signed Content ID:',0Ah,0
					; DATA XREF: _receipt_request_print+B7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4AACh
; COMDAT (pick any)
		public ??_C@_0BA@INHCPDDK@?5?5Receipts?5From?$AA@
; `string'
??_C@_0BA@INHCPDDK@?5?5Receipts?5From?$AA@ db '  Receipts From',0
					; DATA XREF: _receipt_request_print+E0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4ABCh
; COMDAT (pick any)
		public ??_C@_07EGMHCGEH@?5List?3?6?$AA@
; `string'
??_C@_07EGMHCGEH@?5List?3?6?$AA@ db ' List:',0Ah,0 ; DATA XREF: _receipt_request_print+F5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4AC4h
; COMDAT (pick any)
		public ??_C@_0O@GOHGOJFE@?3?5First?5Tier?6?$AA@
; `string'
??_C@_0O@GOHGOJFE@?3?5First?5Tier?6?$AA@ db ': First Tier',0Ah,0
					; DATA XREF: _receipt_request_print+118o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4AD4h
; COMDAT (pick any)
		public ??_C@_06MGGNDMCH@?3?5All?6?$AA@
; `string'
??_C@_06MGGNDMCH@?3?5All?6?$AA@	db ': All',0Ah,0 ; DATA XREF: _receipt_request_print+12Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4ADCh
; COMDAT (pick any)
		public ??_C@_0P@IJCNGMMK@?5Unknown?5?$CI?$CFd?$CJ?6?$AA@
; `string'
??_C@_0P@IJCNGMMK@?5Unknown?5?$CI?$CFd?$CJ?6?$AA@ db ' Unknown (%d)',0Ah,0
					; DATA XREF: _receipt_request_print+13Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4AECh
; COMDAT (pick any)
		public ??_C@_0BA@HFOKKJKB@?5?5Receipts?5To?3?6?$AA@
; `string'
??_C@_0BA@HFOKKJKB@?5?5Receipts?5To?3?6?$AA@ db	'  Receipts To:',0Ah,0
					; DATA XREF: _receipt_request_print:loc_3747o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4AFCh
; COMDAT (pick any)
		public ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@
; `string'
??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@ db 'parameter error "%s"',0Ah,0
					; DATA XREF: _cms_set_pkey_param+60o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _cms_main+1CFp
					; _cms_main+2728p ...
		extrn _sk_num:near	; CODE XREF: _cms_main+183Dp
					; _cms_main+1863p ...
		extrn _sk_value:near	; CODE XREF: _cms_main+2B29p
					; _cms_main+2CD7p ...
		extrn _sk_new_null:near	; CODE XREF: _cms_main+1061p
					; _cms_main+10D1p ...
		extrn _sk_free:near	; CODE XREF: _cms_main+22B5p
					; _cms_main+22C6p ...
		extrn _sk_pop_free:near	; CODE XREF: _cms_main+2285p
					; _cms_main+2290p ...
		extrn _sk_push:near	; CODE XREF: _cms_main+1074p
					; _cms_main+10E4p ...
		extrn _CRYPTO_malloc:near ; CODE XREF: _cms_main+1891p
		extrn _CRYPTO_free:near	; CODE XREF: _cms_main+22D7p
					; _cms_main+22E8p ...
		extrn _BIO_s_file:near	; CODE XREF: _cms_main+1B6p
		extrn _BIO_new_file:near ; CODE	XREF: _cms_main+26E8p
					; _cms_main+27E2p ...
		extrn _BIO_new_fp:near	; CODE XREF: _cms_main+2732p
					; _cms_main+29E5p
		extrn _BIO_new:near	; CODE XREF: _cms_main+1BCp
		extrn _BIO_free:near	; CODE XREF: _cms_main+23BFp
					; _cms_main+23C8p ...
		extrn _BIO_puts:near	; CODE XREF: _cms_main+1C8Cp
					; _cms_main+1D6Dp ...
		extrn _BIO_ctrl:near	; CODE XREF: _cms_main+1E0p
		extrn _BIO_free_all:near ; CODE	XREF: _cms_main+23D7p
		extrn _BIO_dump_indent:near ; CODE XREF: _receipt_request_print+DBp
		extrn _BIO_printf:near	; CODE XREF: _cms_main+1CAAp
					; _cms_main+1CC8p ...
		extrn _BUF_strdup:near	; CODE XREF: _cms_main+2C24p
		extrn _ASN1_OBJECT_free:near ; CODE XREF: _cms_main+2310p
		extrn _ASN1_STRING_length:near ; CODE XREF: _receipt_request_print+C6p
		extrn _ASN1_STRING_data:near ; CODE XREF: _receipt_request_print+D1p
		extrn _OBJ_txt2obj:near	; CODE XREF: _cms_main+12CEp
		extrn _EVP_EncryptInit_ex:near ; CODE XREF: _cms_main+2BAEp
		extrn _EVP_des_cbc:near	; CODE XREF: _cms_main+6FBp
		extrn _EVP_des_ede3_cbc:near ; CODE XREF: _cms_main+6B9p
					; _cms_main+2525p
		extrn _EVP_des_ede3_wrap:near ;	CODE XREF: _cms_main+73Dp
		extrn _EVP_rc2_cbc:near	; CODE XREF: _cms_main+809p
		extrn _EVP_rc2_40_cbc:near ; CODE XREF:	_cms_main+7C1p
		extrn _EVP_rc2_64_cbc:near ; CODE XREF:	_cms_main+84Bp
		extrn _EVP_aes_128_cbc:near ; CODE XREF: _cms_main+88Dp
		extrn _EVP_aes_128_wrap:near ; CODE XREF: _cms_main+959p
		extrn _EVP_aes_192_cbc:near ; CODE XREF: _cms_main+8CFp
		extrn _EVP_aes_192_wrap:near ; CODE XREF: _cms_main+99Bp
		extrn _EVP_aes_256_cbc:near ; CODE XREF: _cms_main+911p
		extrn _EVP_aes_256_wrap:near ; CODE XREF: _cms_main+9DDp
		extrn _EVP_camellia_128_cbc:near ; CODE	XREF: _cms_main+A1Fp
		extrn _EVP_camellia_192_cbc:near ; CODE	XREF: _cms_main+A61p
		extrn _EVP_camellia_256_cbc:near ; CODE	XREF: _cms_main+AA9p
		extrn _EVP_seed_cbc:near ; CODE	XREF: _cms_main+77Fp
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _cms_main+1C23p
		extrn _EVP_get_digestbyname:near ; CODE	XREF: _cms_main+16CCp
		extrn _EVP_PKEY_free:near ; CODE XREF: _cms_main+239Ep
					; _cms_main+2F1Dp
		extrn _X509_STORE_free:near ; CODE XREF: _cms_main+2377p
		extrn _X509_STORE_set1_param:near ; CODE XREF: _cms_main+2A43p
		extrn _X509_STORE_set_verify_cb:near ; CODE XREF: _cms_main+2A2Ep
		extrn _X509_STORE_CTX_get_error:near ; CODE XREF: _cms_cb+5p
		extrn _X509_VERIFY_PARAM_free:near ; CODE XREF:	_cms_main+22A4p
		extrn _X509_free:near	; CODE XREF: _cms_main+2380p
					; _cms_main+238Cp ...
		extrn _ERR_print_errors:near ; CODE XREF: _cms_main+225Dp
					; _cms_main+25F9p ...
		extrn _GENERAL_NAME_free:near ;	CODE XREF: _make_names_stack+BDp
		extrn _GENERAL_NAME_print:near ; CODE XREF: _gnames_stack_print+5Ep
		extrn _GENERAL_NAMES_new:near ;	CODE XREF: _make_names_stack+54p
		extrn _GENERAL_NAMES_free:near ; CODE XREF: _make_names_stack+B0p
					; DATA XREF: _make_names_stack:$err$23o
		extrn _a2i_GENERAL_NAME:near ; CODE XREF: _make_names_stack+46p
		extrn _string_to_hex:near ; CODE XREF: _cms_main+1194p
					; _cms_main+1207p
		extrn _app_RAND_load_file:near ; CODE XREF: _cms_main+246Ep
		extrn _app_RAND_write_file:near	; CODE XREF: _cms_main+2274p
		extrn _app_RAND_load_files:near	; CODE XREF: _cms_main+247Bp
		extrn _str2fmt:near	; CODE XREF: _cms_main+17D1p
					; _cms_main+193Cp ...
		extrn _app_passwd:near	; CODE XREF: _cms_main+242Fp
		extrn _load_cert:near	; CODE XREF: _cms_main+15EDp
					; _cms_main+2592p ...
		extrn _load_key:near	; CODE XREF: _cms_main+26C0p
					; _cms_main+2E73p
		extrn _load_certs:near	; CODE XREF: _cms_main+25E3p
		extrn _setup_verify:near ; CODE	XREF: _cms_main+2A13p
		extrn _setup_engine:near ; CODE	XREF: _cms_main+240Fp
		extrn _load_config:near	; CODE XREF: _cms_main+1F0p
		extrn _args_verify:near	; CODE XREF: _cms_main+1C0Fp
		extrn _policies_print:near ; CODE XREF:	_cms_cb+2Ap
		extrn _pkey_ctrl_string:near ; CODE XREF: _cms_set_pkey_param+3Bp
		extrn _PEM_write_bio_X509:near ; CODE XREF: _save_certs+49p
		extrn _CMS_ContentInfo_free:near ; CODE	XREF: _cms_main+23A7p
					; _cms_main+23B3p ...
		extrn _CMS_ReceiptRequest_free:near ; CODE XREF: _cms_main+2324p
					; _receipt_request_print+16Cp
		extrn _CMS_ContentInfo_print_ctx:near ;	CODE XREF: _cms_main+32AAp
		extrn _PEM_read_bio_CMS:near ; CODE XREF: _cms_main+2773p
					; _cms_main+2929p
		extrn _d2i_CMS_bio:near	; CODE XREF: _cms_main+278Fp
					; _cms_main+293Bp
		extrn _i2d_CMS_bio_stream:near ; CODE XREF: _cms_main+335Ep
		extrn _PEM_write_bio_CMS_stream:near ; CODE XREF: _cms_main+334Ap
		extrn _SMIME_read_CMS:near ; CODE XREF:	_cms_main+275Ap
					; _cms_main+2916p
		extrn _SMIME_write_CMS:near ; CODE XREF: _cms_main+3329p
					; _cms_main+3336p
		extrn _CMS_final:near	; CODE XREF: _cms_main+2C71p
		extrn _CMS_sign:near	; CODE XREF: _cms_main+2D86p
		extrn _CMS_sign_receipt:near ; CODE XREF: _cms_main+2CEEp
		extrn _CMS_data:near	; CODE XREF: _cms_main+306Bp
		extrn _CMS_data_create:near ; CODE XREF: _cms_main+2A67p
		extrn _CMS_digest_verify:near ;	CODE XREF: _cms_main+30C1p
		extrn _CMS_digest_create:near ;	CODE XREF: _cms_main+2A94p
		extrn _CMS_EncryptedData_decrypt:near ;	CODE XREF: _cms_main+3120p
		extrn _CMS_EncryptedData_encrypt:near ;	CODE XREF: _cms_main+2CA6p
		extrn _CMS_verify:near	; CODE XREF: _cms_main+315Bp
		extrn _CMS_verify_receipt:near ; CODE XREF: _cms_main+323Ep
		extrn _CMS_get0_signers:near ; CODE XREF: _cms_main+3187p
		extrn _CMS_encrypt:near	; CODE XREF: _cms_main+2AF6p
		extrn _CMS_decrypt:near	; CODE XREF: _cms_main+2F90p
					; _cms_main+302Fp
		extrn _CMS_decrypt_set1_pkey:near ; CODE XREF: _cms_main+2FEEp
		extrn _CMS_decrypt_set1_key:near ; CODE	XREF: _cms_main+2FADp
		extrn _CMS_decrypt_set1_password:near ;	CODE XREF: _cms_main+300Dp
		extrn _CMS_RecipientInfo_type:near ; CODE XREF:	_cms_main+2B8Bp
		extrn _CMS_RecipientInfo_get0_pkey_ctx:near ; CODE XREF: _cms_main+2B71p
		extrn _CMS_add1_recipient_cert:near ; CODE XREF: _cms_main+2B5Ap
		extrn _CMS_add0_recipient_key:near ; CODE XREF:	_cms_main+2BFBp
		extrn _CMS_add0_recipient_password:near	; CODE XREF: _cms_main+2C47p
		extrn _CMS_uncompress:near ; CODE XREF:	_cms_main+3096p
		extrn _CMS_compress:near ; CODE	XREF: _cms_main+2ABCp
		extrn _CMS_set1_eContentType:near ; CODE XREF: _cms_main+2DA5p
		extrn _CMS_get1_certs:near ; CODE XREF:	_cms_main+282Ap
		extrn _CMS_add1_signer:near ; CODE XREF: _cms_main+2EBBp
		extrn _CMS_SignerInfo_get0_pkey_ctx:near ; CODE	XREF: _cms_main+2ED2p
		extrn _CMS_get0_SignerInfos:near ; CODE	XREF: _cms_main+2CC4p
					; _receipt_request_print+10p
		extrn _CMS_get1_ReceiptRequest:near ; CODE XREF: _receipt_request_print+3Dp
		extrn _CMS_ReceiptRequest_create0:near
					; CODE XREF: _make_receipt_request+38p
		extrn _CMS_add1_ReceiptRequest:near ; CODE XREF: _cms_main+2EF8p
		extrn _CMS_ReceiptRequest_get0_values:near
					; CODE XREF: _receipt_request_print+B2p
		extrn _CMS_RecipientInfo_kari_get0_ctx:near ; CODE XREF: _cms_main+2BA1p
		extrn __chkstk:near	; CODE XREF: _cms_main+5p
					; _gnames_stack_print+5p ...
		extrn _bio_err:near	; DATA XREF: _cms_main+162r
					; _cms_main+1C4w ...


		end

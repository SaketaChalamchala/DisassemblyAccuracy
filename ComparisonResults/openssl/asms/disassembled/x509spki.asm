;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	ACC8F8688DACBE7B28F08C0651E11C0C
; Input	CRC32 :	BBA148C2

; File Name   :	C:\compspace\Diff\openssl\obj\x509spki.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _NETSCAPE_SPKI_b64_decode
_NETSCAPE_SPKI_b64_decode proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		mov	esi, [esp+4+arg_4]
		push	edi
		test	esi, esi
		jg	short loc_1A
		mov	esi, [esp+8+arg_0]
		lea	ecx, [esi+1]

loc_11:					; CODE XREF: _NETSCAPE_SPKI_b64_decode+16j
		mov	al, [esi]
		inc	esi
		test	al, al
		jnz	short loc_11
		sub	esi, ecx

loc_1A:					; CODE XREF: _NETSCAPE_SPKI_b64_decode+8j
		push	58h ; 'X'
		lea	eax, [esi+1]
		push	offset ??_C@_0BJ@IIAPBJDF@?4?2crypto?2x509?2x509spki?4c?$AA@ ; ".\\crypto\\x509\\x509spki.c"
		push	eax
		call	_CRYPTO_malloc
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jnz	short loc_50
		push	59h ; 'Y'
		push	offset ??_C@_0BJ@IIAPBJDF@?4?2crypto?2x509?2x509spki?4c?$AA@ ; ".\\crypto\\x509\\x509spki.c"
		push	41h ; 'A'
		push	81h ; 'Å'
		push	0Bh
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_50:					; CODE XREF: _NETSCAPE_SPKI_b64_decode+31j
		push	esi
		push	[esp+0Ch+arg_0]
		push	edi
		call	_EVP_DecodeBlock
		add	esp, 0Ch
		test	eax, eax
		jns	short loc_85
		push	5Eh ; '^'
		push	offset ??_C@_0BJ@IIAPBJDF@?4?2crypto?2x509?2x509spki?4c?$AA@ ; ".\\crypto\\x509\\x509spki.c"
		push	76h ; 'v'
		push	81h ; 'Å'
		push	0Bh
		call	_ERR_put_error
		push	edi
		call	_CRYPTO_free
		add	esp, 18h
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_85:					; CODE XREF: _NETSCAPE_SPKI_b64_decode+60j
		push	eax
		lea	eax, [esp+0Ch+arg_4]
		mov	[esp+0Ch+arg_4], edi
		push	eax
		push	0
		call	_d2i_NETSCAPE_SPKI
		push	edi
		mov	esi, eax
		call	_CRYPTO_free
		add	esp, 10h
		mov	eax, esi
		pop	edi
		pop	esi
		retn
_NETSCAPE_SPKI_b64_decode endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _NETSCAPE_SPKI_b64_encode
_NETSCAPE_SPKI_b64_encode proc near

var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 4
		call	__chkstk
		push	ebx
		push	esi
		push	edi
		push	0
		push	[esp+14h+arg_0]
		call	_i2d_NETSCAPE_SPKI
		push	70h ; 'p'
		mov	ebx, eax
		push	offset ??_C@_0BJ@IIAPBJDF@?4?2crypto?2x509?2x509spki?4c?$AA@ ; ".\\crypto\\x509\\x509spki.c"
		push	ebx
		call	_CRYPTO_malloc
		push	71h ; 'q'
		lea	ecx, [ebx+ebx]
		mov	esi, eax
		push	offset ??_C@_0BJ@IIAPBJDF@?4?2crypto?2x509?2x509spki?4c?$AA@ ; ".\\crypto\\x509\\x509spki.c"
		push	ecx
		call	_CRYPTO_malloc
		add	esp, 20h
		mov	edi, eax
		test	esi, esi
		jz	short loc_118
		test	edi, edi
		jz	short loc_118
		lea	eax, [esp+10h+var_4]
		mov	[esp+10h+var_4], esi
		push	eax
		push	[esp+14h+arg_0]
		call	_i2d_NETSCAPE_SPKI
		push	ebx
		push	esi
		push	edi
		call	_EVP_EncodeBlock
		push	esi
		call	_CRYPTO_free
		add	esp, 18h
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_118:				; CODE XREF: _NETSCAPE_SPKI_b64_encode+40j
					; _NETSCAPE_SPKI_b64_encode+44j
		push	73h ; 's'
		push	offset ??_C@_0BJ@IIAPBJDF@?4?2crypto?2x509?2x509spki?4c?$AA@ ; ".\\crypto\\x509\\x509spki.c"
		push	41h ; 'A'
		push	82h ; 'Ç'
		push	0Bh
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		pop	ecx
		retn
_NETSCAPE_SPKI_b64_encode endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 138h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _NETSCAPE_SPKI_get_pubkey
_NETSCAPE_SPKI_get_pubkey proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		test	eax, eax
		jz	short loc_151
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_151
		push	dword ptr [eax]
		call	_X509_PUBKEY_get
		add	esp, 4
		retn
; ---------------------------------------------------------------------------

loc_151:				; CODE XREF: _NETSCAPE_SPKI_get_pubkey+6j
					; _NETSCAPE_SPKI_get_pubkey+Cj
		xor	eax, eax
		retn
_NETSCAPE_SPKI_get_pubkey endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 154h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _NETSCAPE_SPKI_set_pubkey
_NETSCAPE_SPKI_set_pubkey proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		test	eax, eax
		jz	short loc_16B
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_16B
		mov	[esp+arg_0], eax
		jmp	_X509_PUBKEY_set
; ---------------------------------------------------------------------------

loc_16B:				; CODE XREF: _NETSCAPE_SPKI_set_pubkey+6j
					; _NETSCAPE_SPKI_set_pubkey+Cj
		xor	eax, eax
		retn
_NETSCAPE_SPKI_set_pubkey endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 170h
; COMDAT (pick any)
		public ??_C@_0BJ@IIAPBJDF@?4?2crypto?2x509?2x509spki?4c?$AA@
; `string'
??_C@_0BJ@IIAPBJDF@?4?2crypto?2x509?2x509spki?4c?$AA@ db '.\crypto\x509\x509spki.c',0
					; DATA XREF: _NETSCAPE_SPKI_b64_decode+1Fo
					; _NETSCAPE_SPKI_b64_decode+35o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _CRYPTO_malloc:near ; CODE XREF: _NETSCAPE_SPKI_b64_decode+25p
					; _NETSCAPE_SPKI_b64_encode+22p ...
		extrn _CRYPTO_free:near	; CODE XREF: _NETSCAPE_SPKI_b64_decode+78p
					; _NETSCAPE_SPKI_b64_decode+99p ...
		extrn _ERR_put_error:near ; CODE XREF: _NETSCAPE_SPKI_b64_decode+43p
					; _NETSCAPE_SPKI_b64_decode+72p ...
		extrn _EVP_EncodeBlock:near ; CODE XREF: _NETSCAPE_SPKI_b64_encode+5Bp
		extrn _EVP_DecodeBlock:near ; CODE XREF: _NETSCAPE_SPKI_b64_decode+56p
		extrn _X509_PUBKEY_set:near ; CODE XREF: _NETSCAPE_SPKI_set_pubkey+12j
		extrn _X509_PUBKEY_get:near ; CODE XREF: _NETSCAPE_SPKI_get_pubkey+10p
		extrn _d2i_NETSCAPE_SPKI:near ;	CODE XREF: _NETSCAPE_SPKI_b64_decode+91p
		extrn _i2d_NETSCAPE_SPKI:near ;	CODE XREF: _NETSCAPE_SPKI_b64_encode+13p
					; _NETSCAPE_SPKI_b64_encode+53p
		extrn __chkstk:near	; CODE XREF: _NETSCAPE_SPKI_b64_encode+5p


		end

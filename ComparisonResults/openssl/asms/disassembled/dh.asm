;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	539C31F1A327A18574BB701F0A9B7142
; Input	CRC32 :	921B7BC4

; File Name   :	C:\compspace\Diff\openssl\obj\dh.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _printf+19p
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _dh_main
_dh_main	proc near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
ErrMsg		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 2Ch ; ','
		call	__chkstk
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_18], 0
		mov	[esp+2Ch+var_14], 0
		mov	[esp+2Ch+var_C], 0
		mov	[esp+2Ch+var_10], 0
		test	eax, eax
		jnz	short loc_9E
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_9E
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_9E:					; CODE XREF: _dh_main+39j _dh_main+50j
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_894
		push	ebx
		mov	ebx, [esp+30h+arg_4]
		push	ebp
		push	esi
		push	edi
		mov	edi, [esp+3Ch+arg_0]
		xor	esi, esi
		mov	eax, [ebx]
		dec	edi
		xor	ebp, ebp
		mov	[esp+3Ch+var_28], esi
		add	ebx, 4
		mov	[esp+3Ch+ErrMsg], esi
		mov	[esp+3Ch+var_1C], 3
		mov	[esp+3Ch+var_8], 3
		mov	[esp+3Ch+var_4], eax
		cmp	edi, 1
		jl	loc_37A

loc_EC:					; CODE XREF: _dh_main+348j
		mov	esi, [ebx]
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_FC:					; CODE XREF: _dh_main+EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_11C
		test	dl, dl
		jz	short loc_118
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_11C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_FC

loc_118:				; CODE XREF: _dh_main+D8j
		xor	eax, eax
		jmp	short loc_121
; ---------------------------------------------------------------------------

loc_11C:				; CODE XREF: _dh_main+D4j _dh_main+E0j
		sbb	eax, eax
		or	eax, 1

loc_121:				; CODE XREF: _dh_main+EEj
		test	eax, eax
		jnz	short loc_146
		dec	edi
		cmp	edi, 1
		jl	$bad$139
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+3Ch+var_1C], eax
		jmp	loc_369
; ---------------------------------------------------------------------------

loc_146:				; CODE XREF: _dh_main+F7j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, esi

loc_14D:				; CODE XREF: _dh_main+13Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_16D
		test	dl, dl
		jz	short loc_169
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_16D
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_14D

loc_169:				; CODE XREF: _dh_main+129j
		xor	eax, eax
		jmp	short loc_172
; ---------------------------------------------------------------------------

loc_16D:				; CODE XREF: _dh_main+125j
					; _dh_main+131j
		sbb	eax, eax
		or	eax, 1

loc_172:				; CODE XREF: _dh_main+13Fj
		test	eax, eax
		jnz	short loc_197
		dec	edi
		cmp	edi, 1
		jl	$bad$139
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+3Ch+var_8], eax
		jmp	loc_369
; ---------------------------------------------------------------------------

loc_197:				; CODE XREF: _dh_main+148j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, esi

loc_19E:				; CODE XREF: _dh_main+18Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1BE
		test	dl, dl
		jz	short loc_1BA
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1BE
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_19E

loc_1BA:				; CODE XREF: _dh_main+17Aj
		xor	eax, eax
		jmp	short loc_1C3
; ---------------------------------------------------------------------------

loc_1BE:				; CODE XREF: _dh_main+176j
					; _dh_main+182j
		sbb	eax, eax
		or	eax, 1

loc_1C3:				; CODE XREF: _dh_main+190j
		test	eax, eax
		jnz	short loc_1E0
		dec	edi
		cmp	edi, 1
		jl	$bad$139
		mov	esi, [ebx+4]
		add	ebx, 4
		mov	[esp+3Ch+var_28], esi
		jmp	loc_36D
; ---------------------------------------------------------------------------

loc_1E0:				; CODE XREF: _dh_main+199j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_1EC:				; CODE XREF: _dh_main+1DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_20C
		test	dl, dl
		jz	short loc_208
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_20C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1EC

loc_208:				; CODE XREF: _dh_main+1C8j
		xor	eax, eax
		jmp	short loc_211
; ---------------------------------------------------------------------------

loc_20C:				; CODE XREF: _dh_main+1C4j
					; _dh_main+1D0j
		sbb	eax, eax
		or	eax, 1

loc_211:				; CODE XREF: _dh_main+1DEj
		test	eax, eax
		jnz	short loc_22E
		dec	edi
		cmp	edi, 1
		jl	$bad$139
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+3Ch+ErrMsg], edx
		jmp	loc_369
; ---------------------------------------------------------------------------

loc_22E:				; CODE XREF: _dh_main+1E7j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_23C:				; CODE XREF: _dh_main+22Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_25C
		test	dl, dl
		jz	short loc_258
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_25C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_23C

loc_258:				; CODE XREF: _dh_main+218j
		xor	eax, eax
		jmp	short loc_261
; ---------------------------------------------------------------------------

loc_25C:				; CODE XREF: _dh_main+214j
					; _dh_main+220j
		sbb	eax, eax
		or	eax, 1

loc_261:				; CODE XREF: _dh_main+22Ej
		test	eax, eax
		jnz	short loc_27A
		dec	edi
		cmp	edi, 1
		jl	$bad$139
		mov	ebp, [ebx+4]
		add	ebx, 4
		jmp	loc_369
; ---------------------------------------------------------------------------

loc_27A:				; CODE XREF: _dh_main+237j
		mov	ecx, offset ??_C@_06CLLLPJIB@?9check?$AA@ ; "-check"
		mov	eax, esi

loc_281:				; CODE XREF: _dh_main+26Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2A1
		test	dl, dl
		jz	short loc_29D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2A1
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_281

loc_29D:				; CODE XREF: _dh_main+25Dj
		xor	eax, eax
		jmp	short loc_2A6
; ---------------------------------------------------------------------------

loc_2A1:				; CODE XREF: _dh_main+259j
					; _dh_main+265j
		sbb	eax, eax
		or	eax, 1

loc_2A6:				; CODE XREF: _dh_main+273j
		test	eax, eax
		jnz	short loc_2B7
		mov	[esp+3Ch+var_14], 1
		jmp	loc_369
; ---------------------------------------------------------------------------

loc_2B7:				; CODE XREF: _dh_main+27Cj
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, esi

loc_2BE:				; CODE XREF: _dh_main+2ACj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2DE
		test	dl, dl
		jz	short loc_2DA
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2DE
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2BE

loc_2DA:				; CODE XREF: _dh_main+29Aj
		xor	eax, eax
		jmp	short loc_2E3
; ---------------------------------------------------------------------------

loc_2DE:				; CODE XREF: _dh_main+296j
					; _dh_main+2A2j
		sbb	eax, eax
		or	eax, 1

loc_2E3:				; CODE XREF: _dh_main+2B0j
		test	eax, eax
		jnz	short loc_2F4
		mov	[esp+3Ch+var_18], 1
		jmp	loc_369
; ---------------------------------------------------------------------------

loc_2F4:				; CODE XREF: _dh_main+2B9j
		mov	ecx, offset ??_C@_02OLHPOPJI@?9C?$AA@ ;	`string'
		mov	eax, esi
		nop

loc_2FC:				; CODE XREF: _dh_main+2EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_31C
		test	dl, dl
		jz	short loc_318
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_31C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2FC

loc_318:				; CODE XREF: _dh_main+2D8j
		xor	eax, eax
		jmp	short loc_321
; ---------------------------------------------------------------------------

loc_31C:				; CODE XREF: _dh_main+2D4j
					; _dh_main+2E0j
		sbb	eax, eax
		or	eax, 1

loc_321:				; CODE XREF: _dh_main+2EEj
		test	eax, eax
		jnz	short loc_32F
		mov	[esp+3Ch+var_10], 1
		jmp	short loc_369
; ---------------------------------------------------------------------------

loc_32F:				; CODE XREF: _dh_main+2F7j
		mov	eax, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"

loc_334:				; CODE XREF: _dh_main+322j
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_354
		test	cl, cl
		jz	short loc_350
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_354
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_334

loc_350:				; CODE XREF: _dh_main+310j
		xor	eax, eax
		jmp	short loc_359
; ---------------------------------------------------------------------------

loc_354:				; CODE XREF: _dh_main+30Cj
					; _dh_main+318j
		sbb	eax, eax
		or	eax, 1

loc_359:				; CODE XREF: _dh_main+326j
		test	eax, eax
		jnz	loc_3E5
		mov	[esp+3Ch+var_C], 1

loc_369:				; CODE XREF: _dh_main+115j
					; _dh_main+166j ...
		mov	esi, [esp+3Ch+var_28]

loc_36D:				; CODE XREF: _dh_main+1AFj
		dec	edi
		add	ebx, 4
		cmp	edi, 1
		jge	loc_EC

loc_37A:				; CODE XREF: _dh_main+BAj
		call	_ERR_load_crypto_strings
		push	0
		push	ebp
		push	dword ptr ds:_bio_err
		call	_setup_engine
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	ebx, eax
		mov	[esp+4Ch+var_28], ebx
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 14h
		mov	ebp, eax
		mov	[esp+3Ch+var_4], ebp
		test	ebx, ebx
		jz	loc_848
		test	ebp, ebp
		jz	loc_848
		test	esi, esi
		jnz	loc_4C1
		mov	edi, dword ptr ds:__imp____acrt_iob_func
		push	esi
		call	edi ; __imp____acrt_iob_func
		push	eax
		push	esi
		push	6Ah ; 'j'
		push	ebx
		call	_BIO_ctrl
		add	esp, 14h
		jmp	loc_4E5
; ---------------------------------------------------------------------------

loc_3E5:				; CODE XREF: _dh_main+32Fj
		push	dword ptr [ebx]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$bad$139:				; CODE XREF: _dh_main+FDj
					; _dh_main+14Ej ...
		push	[esp+3Ch+var_4]
		push	offset ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; "%s [options] <infile >outfile\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@HFLABMMF@?5?9inform?5arg?5?5?5input?5format?5?9?5on@ ;	" -inform arg	input format - one of DE"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CP@JJNBIGFP@?5?9outform?5arg?5?5output?5format?5?9?5o@ ; " -outform arg  output format - one of D"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@ ; " -in arg       input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@JAFLIPIN@?5?9out?5arg?5?5?5?5?5?5output?5file?6?$AA@ ;	" -out arg	output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@BBHHCPJC@?5?9check?5?5?5?5?5?5?5?5check?5the?5DH?5para@ ; " -check	   check the DH	parameters\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@EGLMLFJL@?5?9text?5?5?5?5?5?5?5?5?5print?5a?5text?5form@ ; " -text	    print a text form of the"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0BO@KEIHOKJC@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5Output?5C?5code?6?$AA@ ;	" -C		Output C code\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BK@ELEJBNIF@?5?9noout?5?5?5?5?5?5?5?5no?5output?6?$AA@ ; " -noout	       no output\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@OCLGLONK@?5?9engine?5e?5?5?5?5?5use?5engine?5e?0?5pos@	; " -engine e	  use engine e,	possibly a"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 18h
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_4C1:				; CODE XREF: _dh_main+398j
		push	esi
		push	3
		push	6Ch ; 'l'
		push	ebx
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_4DF
		push	esi		; ErrMsg
		call	dword ptr ds:__imp__perror
		jmp	loc_853
; ---------------------------------------------------------------------------

loc_4DF:				; CODE XREF: _dh_main+4A5j
		mov	edi, dword ptr ds:__imp____acrt_iob_func

loc_4E5:				; CODE XREF: _dh_main+3B4j
		mov	esi, [esp+3Ch+ErrMsg]
		test	esi, esi
		jnz	short loc_521
		push	1
		call	edi ; __imp____acrt_iob_func
		push	eax
		push	esi
		push	6Ah ; 'j'
		push	ebp
		call	_BIO_ctrl
		add	esp, 14h

loc_4FE:				; CODE XREF: _dh_main+505j
		mov	eax, [esp+3Ch+var_1C]
		cmp	eax, 1
		jnz	short loc_53F
		push	0
		push	ebx
		push	offset _d2i_DHparams
		push	offset _DH_new
		call	_ASN1_d2i_bio
		mov	ebx, eax
		mov	[esp+4Ch+var_24], ebx
		jmp	short loc_55A
; ---------------------------------------------------------------------------

loc_521:				; CODE XREF: _dh_main+4BFj
		push	esi
		push	5
		push	6Ch ; 'l'
		push	ebp
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_4FE
		push	esi		; ErrMsg
		call	dword ptr ds:__imp__perror
		jmp	loc_853
; ---------------------------------------------------------------------------

loc_53F:				; CODE XREF: _dh_main+4D9j
		cmp	eax, 3
		jnz	loc_833
		push	0
		push	0
		push	0
		push	ebx
		call	_PEM_read_bio_DHparams
		mov	ebx, eax
		mov	[esp+4Ch+var_24], eax

loc_55A:				; CODE XREF: _dh_main+4F3j
		add	esp, 10h
		test	ebx, ebx
		jnz	short loc_584
		push	offset ??_C@_0BO@FFFNONMG@unable?5to?5load?5DH?5parameters?6?$AA@ ; "unable to load DH parameters\n"

loc_566:				; CODE XREF: _dh_main+7E9j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_856
; ---------------------------------------------------------------------------

loc_584:				; CODE XREF: _dh_main+533j
		cmp	[esp+3Ch+var_18], 0
		jz	short loc_595
		push	ebx
		push	ebp
		call	_DHparams_print
		add	esp, 8

loc_595:				; CODE XREF: _dh_main+55Dj
		cmp	[esp+3Ch+var_14], 0
		jz	loc_61F
		lea	eax, [esp+3Ch+var_2C]
		push	eax
		push	ebx
		call	_DH_check
		add	esp, 8
		test	eax, eax
		jz	loc_848
		mov	eax, [esp+3Ch+var_2C]
		test	al, 1
		jz	short loc_5CF
		push	offset ??_C@_0BG@HEKOLPHE@p?5value?5is?5not?5prime?6?$AA@ ; "p value is	not prime\n"
		call	_printf
		mov	eax, [esp+40h+var_2C]
		add	esp, 4

loc_5CF:				; CODE XREF: _dh_main+590j
		test	al, 2
		jz	short loc_5E4
		push	offset ??_C@_0BN@HECLLLLM@p?5value?5is?5not?5a?5safe?5prime?6?$AA@ ; "p	value is not a safe prime\n"
		call	_printf
		mov	eax, [esp+40h+var_2C]
		add	esp, 4

loc_5E4:				; CODE XREF: _dh_main+5A5j
		test	al, 4
		jz	short loc_5F9
		push	offset ??_C@_0CF@HHDJLALM@unable?5to?5check?5the?5generator?5va@ ; "unable to check the	generator value\n"
		call	_printf
		mov	eax, [esp+40h+var_2C]
		add	esp, 4

loc_5F9:				; CODE XREF: _dh_main+5BAj
		test	al, 8
		jz	short loc_60E
		push	offset ??_C@_0CA@MNMNOHDI@the?5g?5value?5is?5not?5a?5generator?6?$AA@ ;	"the g value is	not a generator\n"
		call	_printf
		mov	eax, [esp+40h+var_2C]
		add	esp, 4

loc_60E:				; CODE XREF: _dh_main+5CFj
		test	eax, eax
		jnz	short loc_61F
		push	offset ??_C@_0CA@HEFPAMBO@DH?5parameters?5appear?5to?5be?5ok?4?6?$AA@ ;	"DH parameters appear to be ok.\n"
		call	_printf
		add	esp, 4

loc_61F:				; CODE XREF: _dh_main+56Ej
					; _dh_main+5E4j
		cmp	[esp+3Ch+var_10], 0
		jz	loc_7D8
		push	dword ptr [ebx+8]
		call	_BN_num_bits
		push	dword ptr [ebx+8]
		add	eax, 7
		cdq
		and	edx, 7
		lea	esi, [edx+eax]
		sar	esi, 3
		call	_BN_num_bits
		push	10Dh
		push	offset ??_C@_0M@CNLHBMEL@?4?2apps?2dh?4c?$AA@ ;	".\\apps\\dh.c"
		push	esi
		mov	ebx, eax
		call	_CRYPTO_malloc
		mov	edi, eax
		add	esp, 14h
		test	edi, edi
		jnz	short loc_672
		push	offset ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@ ; "OPENSSL_malloc"
		call	dword ptr ds:__imp__perror
		jmp	loc_853
; ---------------------------------------------------------------------------

loc_672:				; CODE XREF: _dh_main+634j
		mov	eax, [esp+3Ch+var_24]
		push	edi
		push	dword ptr [eax+8]
		call	_BN_bn2bin
		push	ebx
		push	offset ??_C@_0CA@FJEMIKNN@static?5unsigned?5char?5dh?$CFd_p?$FL?$FN?$DN?$HL?$AA@ ; "static unsigned char dh%d_p[]={"
		mov	ebp, eax
		call	_printf
		xor	esi, esi
		add	esp, 10h
		mov	[esp+3Ch+var_2C], esi
		test	ebp, ebp
		jle	short loc_6E8
		nop	dword ptr [eax]

loc_69C:				; CODE XREF: _dh_main+6BAj
		mov	eax, 2AAAAAABh
		imul	esi
		sar	edx, 1
		mov	eax, edx
		shr	eax, 1Fh
		add	eax, edx
		lea	ecx, [eax+eax*2]
		mov	eax, esi
		shl	ecx, 2
		sub	eax, ecx
		jnz	short loc_6C9
		push	offset ??_C@_02NMOLBIHC@?6?7?$AA@ ; "\n\t"
		call	_printf
		mov	esi, [esp+40h+var_2C]
		add	esp, 4

loc_6C9:				; CODE XREF: _dh_main+68Aj
		movzx	eax, byte ptr [edi+esi]
		push	eax
		push	offset ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ ; "0x%02X,"
		call	_printf
		mov	esi, [esp+44h+var_2C]
		add	esp, 8
		inc	esi
		mov	[esp+3Ch+var_2C], esi
		cmp	esi, ebp
		jl	short loc_69C

loc_6E8:				; CODE XREF: _dh_main+66Bj
		push	offset ??_C@_05KJDCIFPB@?6?7?$HN?$DL?6?$AA@ ; "\n\t};\n"
		call	_printf
		mov	eax, [esp+40h+var_24]
		push	edi
		push	dword ptr [eax+0Ch]
		call	_BN_bn2bin
		push	ebx
		push	offset ??_C@_0CA@EHJPLIPO@static?5unsigned?5char?5dh?$CFd_g?$FL?$FN?$DN?$HL?$AA@ ; "static unsigned char dh%d_g[]={"
		mov	ebp, eax
		call	_printf
		xor	esi, esi
		add	esp, 14h
		mov	[esp+3Ch+var_2C], esi
		test	ebp, ebp
		jle	short loc_768
		nop	dword ptr [eax]

loc_71C:				; CODE XREF: _dh_main+73Aj
		mov	eax, 2AAAAAABh
		imul	esi
		sar	edx, 1
		mov	eax, edx
		shr	eax, 1Fh
		add	eax, edx
		lea	ecx, [eax+eax*2]
		mov	eax, esi
		shl	ecx, 2
		sub	eax, ecx
		jnz	short loc_749
		push	offset ??_C@_02NMOLBIHC@?6?7?$AA@ ; "\n\t"
		call	_printf
		mov	esi, [esp+40h+var_2C]
		add	esp, 4

loc_749:				; CODE XREF: _dh_main+70Aj
		movzx	eax, byte ptr [edi+esi]
		push	eax
		push	offset ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ ; "0x%02X,"
		call	_printf
		mov	esi, [esp+44h+var_2C]
		add	esp, 8
		inc	esi
		mov	[esp+3Ch+var_2C], esi
		cmp	esi, ebp
		jl	short loc_71C

loc_768:				; CODE XREF: _dh_main+6EBj
		push	offset ??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@ ;	"\n\t};\n\n"
		call	_printf
		push	ebx
		push	offset ??_C@_0BD@PDHPFBMJ@DH?5?$CKget_dh?$CFd?$CI?$CJ?6?7?$HL?6?$AA@ ; "DH *get_dh%d()\n\t{\n"
		call	_printf
		push	offset ??_C@_0L@GFOABBOL@?7DH?5?$CKdh?$DL?6?6?$AA@ ; "\tDH *dh;\n\n"
		call	_printf
		push	offset ??_C@_0CL@FJKPNLKA@?7if?5?$CI?$CIdh?$DNDH_new?$CI?$CJ?$CJ?5?$DN?$DN?5NULL?$CJ?5retu@ ; "\tif ((dh=DH_new()) == NULL) return(NUL"...
		call	_printf
		push	ebx
		push	ebx
		push	offset ??_C@_0CP@FNEBIMJB@?7dh?9?$DOp?$DNBN_bin2bn?$CIdh?$CFd_p?0sizeof?$CId@ ;	"\tdh->p=BN_bin2bn(dh%d_p,sizeof(dh%d_p)"...
		call	_printf
		push	ebx
		push	ebx
		push	offset ??_C@_0CP@IOLDHNHJ@?7dh?9?$DOg?$DNBN_bin2bn?$CIdh?$CFd_g?0sizeof?$CId@ ;	"\tdh->g=BN_bin2bn(dh%d_g,sizeof(dh%d_g)"...
		call	_printf
		push	offset ??_C@_0CK@IPHOBDHF@?7if?5?$CI?$CIdh?9?$DOp?5?$DN?$DN?5NULL?$CJ?5?$HM?$HM?5?$CIdh?9?$DOg?5?$DN@ ;	"\tif ((dh->p == NULL) || (dh->g == NULL"...
		call	_printf
		push	offset ??_C@_0BB@BNBMHKFL@?7?7return?$CINULL?$CJ?$DL?6?$AA@ ; "\t\treturn(NULL);\n"
		call	_printf
		push	offset ??_C@_0BB@BLPPFBBA@?7return?$CIdh?$CJ?$DL?6?7?$HN?6?$AA@	; "\treturn(dh);\n\t}\n"
		call	_printf
		push	edi
		call	_CRYPTO_free
		mov	ebp, [esp+78h+var_4]
		add	esp, 3Ch
		mov	ebx, [esp+3Ch+var_24]

loc_7D8:				; CODE XREF: _dh_main+5F8j
		cmp	[esp+3Ch+var_C], 0
		jnz	short loc_82F
		mov	eax, [esp+3Ch+var_8]
		cmp	eax, 1
		jnz	short loc_7F9
		push	ebx
		push	ebp
		push	offset _i2d_DHparams
		call	_ASN1_i2d_bio
		add	esp, 0Ch
		jmp	short loc_808
; ---------------------------------------------------------------------------

loc_7F9:				; CODE XREF: _dh_main+7BAj
		cmp	eax, 3
		jnz	short loc_81A
		push	ebx
		push	ebp
		call	_PEM_write_bio_DHparams
		add	esp, 8

loc_808:				; CODE XREF: _dh_main+7CBj
		mov	[esp+3Ch+var_2C], eax
		test	eax, eax
		jnz	short loc_82F
		push	offset ??_C@_0BP@DKNNAIAD@unable?5to?5write?5DH?5parameters?6?$AA@ ; "unable to	write DH parameters\n"
		jmp	loc_566
; ---------------------------------------------------------------------------

loc_81A:				; CODE XREF: _dh_main+7D0j
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short loc_856
; ---------------------------------------------------------------------------

loc_82F:				; CODE XREF: _dh_main+7B1j
					; _dh_main+7E2j
		xor	ebx, ebx
		jmp	short $end$140
; ---------------------------------------------------------------------------

loc_833:				; CODE XREF: _dh_main+516j
		push	offset ??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@ ; "bad input format specified\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short loc_856
; ---------------------------------------------------------------------------

loc_848:				; CODE XREF: _dh_main+388j
					; _dh_main+390j ...
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors

loc_853:				; CODE XREF: _dh_main+4AEj
					; _dh_main+50Ej ...
		add	esp, 4

loc_856:				; CODE XREF: _dh_main+553j
					; _dh_main+801j ...
		mov	ebx, 1

$end$140:				; CODE XREF: _dh_main+805j
		mov	eax, [esp+3Ch+var_28]
		test	eax, eax
		jz	short loc_86C
		push	eax
		call	_BIO_free
		add	esp, 4

loc_86C:				; CODE XREF: _dh_main+835j
		test	ebp, ebp
		jz	short loc_879
		push	ebp
		call	_BIO_free_all
		add	esp, 4

loc_879:				; CODE XREF: _dh_main+842j
		mov	eax, [esp+3Ch+var_24]
		test	eax, eax
		jz	short loc_88A
		push	eax
		call	_DH_free
		add	esp, 4

loc_88A:				; CODE XREF: _dh_main+853j
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, ebx
		pop	ebx
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_894:				; CODE XREF: _dh_main+7Fj
		mov	eax, 1
		add	esp, 2Ch
		retn
_dh_main	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8A0h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int printf(const char	*Format, ...)
		public _printf
_printf		proc near		; CODE XREF: _dh_main+597p
					; _dh_main+5ACp ...

Format		= dword	ptr  4
arg_4		= byte ptr  8

		push	esi
		mov	esi, [esp+4+Format]
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		lea	ecx, [esp+4+arg_4]
		push	ecx
		push	0
		push	esi
		push	eax
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		pop	esi
		retn
_printf		endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8D0h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _dh_main+C2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8D8h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _dh_main:loc_146o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8E4h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _dh_main:loc_197o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8E8h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _dh_main:loc_1E0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8F0h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _dh_main:loc_22Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8F8h
; COMDAT (pick any)
		public ??_C@_06CLLLPJIB@?9check?$AA@
; `string'
??_C@_06CLLLPJIB@?9check?$AA@ db '-check',0 ; DATA XREF: _dh_main:loc_27Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 900h
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _dh_main:loc_2B7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 908h
; COMDAT (pick any)
		public ??_C@_02OLHPOPJI@?9C?$AA@
; `string'
??_C@_02OLHPOPJI@?9C?$AA@ db 2Dh, 43h, 0 ; DATA	XREF: _dh_main:loc_2F4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90Ch
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _dh_main:loc_32Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 914h
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _dh_main+3BBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 928h
; COMDAT (pick any)
		public ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
; `string'
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ db '%s [options] <infile >outfile',0Ah,0
					; DATA XREF: _dh_main+3D2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 948h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _dh_main+3E2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 95Ch
; COMDAT (pick any)
		public ??_C@_0CO@HFLABMMF@?5?9inform?5arg?5?5?5input?5format?5?9?5on@
; `string'
??_C@_0CO@HFLABMMF@?5?9inform?5arg?5?5?5input?5format?5?9?5on@ db ' -inform arg   input format - one of DER PEM',0Ah,0
					; DATA XREF: _dh_main+3F2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98Ch
; COMDAT (pick any)
		public ??_C@_0CP@JJNBIGFP@?5?9outform?5arg?5?5output?5format?5?9?5o@
; `string'
??_C@_0CP@JJNBIGFP@?5?9outform?5arg?5?5output?5format?5?9?5o@ db ' -outform arg  output format - one of DER PEM',0Ah,0
					; DATA XREF: _dh_main+402o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9BCh
; COMDAT (pick any)
		public ??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BL@EHLIKLH@?5?9in?5arg?5?5?5?5?5?5?5input?5file?6?$AA@ db ' -in arg       input file',0Ah,0
					; DATA XREF: _dh_main+412o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9D8h
; COMDAT (pick any)
		public ??_C@_0BM@JAFLIPIN@?5?9out?5arg?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BM@JAFLIPIN@?5?9out?5arg?5?5?5?5?5?5output?5file?6?$AA@ db ' -out arg      output file',0Ah,0
					; DATA XREF: _dh_main+422o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9F4h
; COMDAT (pick any)
		public ??_C@_0CI@BBHHCPJC@?5?9check?5?5?5?5?5?5?5?5check?5the?5DH?5para@
; `string'
??_C@_0CI@BBHHCPJC@?5?9check?5?5?5?5?5?5?5?5check?5the?5DH?5para@ db ' -check        check the DH parameters',0Ah,0
					; DATA XREF: _dh_main+432o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A1Ch
; COMDAT (pick any)
		public ??_C@_0DH@EGLMLFJL@?5?9text?5?5?5?5?5?5?5?5?5print?5a?5text?5form@
; `string'
??_C@_0DH@EGLMLFJL@?5?9text?5?5?5?5?5?5?5?5?5print?5a?5text?5form@ db ' -text         print a text form of the DH parameters',0Ah,0
					; DATA XREF: _dh_main+442o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A54h
; COMDAT (pick any)
		public ??_C@_0BO@KEIHOKJC@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5Output?5C?5code?6?$AA@
; `string'
??_C@_0BO@KEIHOKJC@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5Output?5C?5code?6?$AA@ db ' -C            Output C code',0Ah,0
					; DATA XREF: _dh_main+455o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A74h
; COMDAT (pick any)
		public ??_C@_0BK@ELEJBNIF@?5?9noout?5?5?5?5?5?5?5?5no?5output?6?$AA@
; `string'
??_C@_0BK@ELEJBNIF@?5?9noout?5?5?5?5?5?5?5?5no?5output?6?$AA@ db ' -noout        no output',0Ah,0
					; DATA XREF: _dh_main+465o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A90h
; COMDAT (pick any)
		public ??_C@_0DK@OCLGLONK@?5?9engine?5e?5?5?5?5?5use?5engine?5e?0?5pos@
; `string'
??_C@_0DK@OCLGLONK@?5?9engine?5e?5?5?5?5?5use?5engine?5e?0?5pos@ db ' -engine e     use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _dh_main+475o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACCh
; COMDAT (pick any)
		public ??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@
; `string'
??_C@_0BM@PDLDHKCN@bad?5input?5format?5specified?6?$AA@	db 'bad input format specified',0Ah,0
					; DATA XREF: _dh_main:loc_833o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AE8h
; COMDAT (pick any)
		public ??_C@_0BO@FFFNONMG@unable?5to?5load?5DH?5parameters?6?$AA@
; `string'
??_C@_0BO@FFFNONMG@unable?5to?5load?5DH?5parameters?6?$AA@ db 'unable to load DH parameters',0Ah,0
					; DATA XREF: _dh_main+535o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B08h
; COMDAT (pick any)
		public ??_C@_0BG@HEKOLPHE@p?5value?5is?5not?5prime?6?$AA@
; char `string'[]
??_C@_0BG@HEKOLPHE@p?5value?5is?5not?5prime?6?$AA@ db 'p value is not prime',0Ah,0
					; DATA XREF: _dh_main+592o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B20h
; COMDAT (pick any)
		public ??_C@_0BN@HECLLLLM@p?5value?5is?5not?5a?5safe?5prime?6?$AA@
; char `string'[]
??_C@_0BN@HECLLLLM@p?5value?5is?5not?5a?5safe?5prime?6?$AA@ db 'p value is not a safe prime',0Ah,0
					; DATA XREF: _dh_main+5A7o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B40h
; COMDAT (pick any)
		public ??_C@_0CF@HHDJLALM@unable?5to?5check?5the?5generator?5va@
; char `string'[]
??_C@_0CF@HHDJLALM@unable?5to?5check?5the?5generator?5va@ db 'unable to check the generator value',0Ah,0
					; DATA XREF: _dh_main+5BCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B68h
; COMDAT (pick any)
		public ??_C@_0CA@MNMNOHDI@the?5g?5value?5is?5not?5a?5generator?6?$AA@
; char `string'[]
??_C@_0CA@MNMNOHDI@the?5g?5value?5is?5not?5a?5generator?6?$AA@ db 'the g value is not a generator',0Ah,0
					; DATA XREF: _dh_main+5D1o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B88h
; COMDAT (pick any)
		public ??_C@_0CA@HEFPAMBO@DH?5parameters?5appear?5to?5be?5ok?4?6?$AA@
; char `string'[]
??_C@_0CA@HEFPAMBO@DH?5parameters?5appear?5to?5be?5ok?4?6?$AA@ db 'DH parameters appear to be ok.',0Ah,0
					; DATA XREF: _dh_main+5E6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA8h
; COMDAT (pick any)
		public ??_C@_0M@CNLHBMEL@?4?2apps?2dh?4c?$AA@
; `string'
??_C@_0M@CNLHBMEL@?4?2apps?2dh?4c?$AA@ db '.\apps\dh.c',0 ; DATA XREF: _dh_main+620o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BB4h
; COMDAT (pick any)
		public ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@
; char `string'[]
??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@ db 'OPENSSL_malloc',0 ; DATA XREF: _dh_main+636o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BC4h
; COMDAT (pick any)
		public ??_C@_0CA@FJEMIKNN@static?5unsigned?5char?5dh?$CFd_p?$FL?$FN?$DN?$HL?$AA@
; char `string'[]
??_C@_0CA@FJEMIKNN@static?5unsigned?5char?5dh?$CFd_p?$FL?$FN?$DN?$HL?$AA@ db 'static unsigned char dh%d_p[]={',0
					; DATA XREF: _dh_main+654o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BE4h
; COMDAT (pick any)
		public ??_C@_02NMOLBIHC@?6?7?$AA@
; char `string'[]
??_C@_02NMOLBIHC@?6?7?$AA@ db 0Ah	; DATA XREF: _dh_main+68Co
					; _dh_main+70Co
		db 9,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BE8h
; COMDAT (pick any)
		public ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@
; char `string'[]
??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ db '0x%02X,',0 ; DATA XREF: _dh_main+6A2o
					; _dh_main+722o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BF0h
; COMDAT (pick any)
		public ??_C@_05KJDCIFPB@?6?7?$HN?$DL?6?$AA@
; char `string'[]
??_C@_05KJDCIFPB@?6?7?$HN?$DL?6?$AA@ db	0Ah ; DATA XREF: _dh_main:loc_6E8o
		db 9,'};',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BF8h
; COMDAT (pick any)
		public ??_C@_0CA@EHJPLIPO@static?5unsigned?5char?5dh?$CFd_g?$FL?$FN?$DN?$HL?$AA@
; char `string'[]
??_C@_0CA@EHJPLIPO@static?5unsigned?5char?5dh?$CFd_g?$FL?$FN?$DN?$HL?$AA@ db 'static unsigned char dh%d_g[]={',0
					; DATA XREF: _dh_main+6D4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C18h
; COMDAT (pick any)
		public ??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@
; char `string'[]
??_C@_06DAPMBIIF@?6?7?$HN?$DL?6?6?$AA@ db 0Ah ;	DATA XREF: _dh_main:loc_768o
		db 9,'};',0Ah
		db 0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C20h
; COMDAT (pick any)
		public ??_C@_0BD@PDHPFBMJ@DH?5?$CKget_dh?$CFd?$CI?$CJ?6?7?$HL?6?$AA@
; char `string'[]
??_C@_0BD@PDHPFBMJ@DH?5?$CKget_dh?$CFd?$CI?$CJ?6?7?$HL?6?$AA@ db 'DH *get_dh%d()',0Ah
					; DATA XREF: _dh_main+747o
		db 9,'{',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C34h
; COMDAT (pick any)
		public ??_C@_0L@GFOABBOL@?7DH?5?$CKdh?$DL?6?6?$AA@
; char `string'[]
??_C@_0L@GFOABBOL@?7DH?5?$CKdh?$DL?6?6?$AA@ db 9,'DH *dh;',0Ah ; DATA XREF: _dh_main+751o
		db 0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C40h
; COMDAT (pick any)
		public ??_C@_0CL@FJKPNLKA@?7if?5?$CI?$CIdh?$DNDH_new?$CI?$CJ?$CJ?5?$DN?$DN?5NULL?$CJ?5retu@
; char `string'[]
??_C@_0CL@FJKPNLKA@?7if?5?$CI?$CIdh?$DNDH_new?$CI?$CJ?$CJ?5?$DN?$DN?5NULL?$CJ?5retu@ db	9,'if ((dh=DH_new()) == NULL) return(NULL);',0Ah,0
					; DATA XREF: _dh_main+75Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C6Ch
; COMDAT (pick any)
		public ??_C@_0CP@FNEBIMJB@?7dh?9?$DOp?$DNBN_bin2bn?$CIdh?$CFd_p?0sizeof?$CId@
; char `string'[]
??_C@_0CP@FNEBIMJB@?7dh?9?$DOp?$DNBN_bin2bn?$CIdh?$CFd_p?0sizeof?$CId@ db 9,'dh->p=BN_bin2bn(dh%d_p,sizeof(dh%d_p),NULL);',0Ah,0
					; DATA XREF: _dh_main+767o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C9Ch
; COMDAT (pick any)
		public ??_C@_0CP@IOLDHNHJ@?7dh?9?$DOg?$DNBN_bin2bn?$CIdh?$CFd_g?0sizeof?$CId@
; char `string'[]
??_C@_0CP@IOLDHNHJ@?7dh?9?$DOg?$DNBN_bin2bn?$CIdh?$CFd_g?0sizeof?$CId@ db 9,'dh->g=BN_bin2bn(dh%d_g,sizeof(dh%d_g),NULL);',0Ah,0
					; DATA XREF: _dh_main+773o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCCh
; COMDAT (pick any)
		public ??_C@_0CK@IPHOBDHF@?7if?5?$CI?$CIdh?9?$DOp?5?$DN?$DN?5NULL?$CJ?5?$HM?$HM?5?$CIdh?9?$DOg?5?$DN@
; char `string'[]
??_C@_0CK@IPHOBDHF@?7if?5?$CI?$CIdh?9?$DOp?5?$DN?$DN?5NULL?$CJ?5?$HM?$HM?5?$CIdh?9?$DOg?5?$DN@ db 9,'if ((dh->p == NULL) || (dh->g == NULL))',0Ah,0
					; DATA XREF: _dh_main+77Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CF8h
; COMDAT (pick any)
		public ??_C@_0BB@BNBMHKFL@?7?7return?$CINULL?$CJ?$DL?6?$AA@
; char `string'[]
??_C@_0BB@BNBMHKFL@?7?7return?$CINULL?$CJ?$DL?6?$AA@ db	9,9,'return(NULL);',0Ah,0
					; DATA XREF: _dh_main+787o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0Ch
; COMDAT (pick any)
		public ??_C@_0BB@BLPPFBBA@?7return?$CIdh?$CJ?$DL?6?7?$HN?6?$AA@
; char `string'[]
??_C@_0BB@BLPPFBBA@?7return?$CIdh?$CJ?$DL?6?7?$HN?6?$AA@ db 9,'return(dh);',0Ah
					; DATA XREF: _dh_main+791o
		db 9,'}',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D20h
; COMDAT (pick any)
		public ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
; `string'
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ db 'bad output format specified for outfile',0Ah,0
					; DATA XREF: _dh_main:loc_81Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4Ch
; COMDAT (pick any)
		public ??_C@_0BP@DKNNAIAD@unable?5to?5write?5DH?5parameters?6?$AA@
; `string'
??_C@_0BP@DKNNAIAD@unable?5to?5write?5DH?5parameters?6?$AA@ db 'unable to write DH parameters',0Ah,0
					; DATA XREF: _dh_main+7E4o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _dh_main+54p
					; _dh_main+3A5p ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _dh_main+4A8p
					; _dh_main+508p ...
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _printf+23p
					; DATA XREF: ...
		extrn _CRYPTO_malloc:near ; CODE XREF: _dh_main+628p
		extrn _CRYPTO_free:near	; CODE XREF: _dh_main+79Cp
		extrn _BIO_s_file:near	; CODE XREF: _dh_main+3Bp
					; _dh_main+361p ...
		extrn _BIO_new:near	; CODE XREF: _dh_main+41p
					; _dh_main+367p ...
		extrn _BIO_free:near	; CODE XREF: _dh_main+838p
		extrn _BIO_ctrl:near	; CODE XREF: _dh_main+65p
					; _dh_main+3ACp ...
		extrn _BIO_free_all:near ; CODE	XREF: _dh_main+845p
		extrn _BIO_printf:near	; CODE XREF: _dh_main+3C6p
					; _dh_main+3DDp ...
		extrn _BN_num_bits:near	; CODE XREF: _dh_main+601p
					; _dh_main+616p
		extrn _BN_bn2bin:near	; CODE XREF: _dh_main+64Ep
					; _dh_main+6CEp
		extrn _ASN1_d2i_bio:near ; CODE	XREF: _dh_main+4E8p
		extrn _ASN1_i2d_bio:near ; CODE	XREF: _dh_main+7C3p
		extrn _DH_new:near	; DATA XREF: _dh_main+4E3o
		extrn _DH_free:near	; CODE XREF: _dh_main+856p
		extrn _DH_check:near	; CODE XREF: _dh_main+57Ap
		extrn _d2i_DHparams:near ; DATA	XREF: _dh_main+4DEo
		extrn _i2d_DHparams:near ; DATA	XREF: _dh_main+7BEo
		extrn _DHparams_print:near ; CODE XREF:	_dh_main+561p
		extrn _ERR_print_errors:near ; CODE XREF: _dh_main+54Bp
					; _dh_main+822p
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _dh_main:loc_37Ap
		extrn _str2fmt:near	; CODE XREF: _dh_main+109p
					; _dh_main+15Ap
		extrn _setup_engine:near ; CODE	XREF: _dh_main+35Cp
		extrn _load_config:near	; CODE XREF: _dh_main+75p
		extrn _PEM_read_bio_DHparams:near ; CODE XREF: _dh_main+523p
		extrn _PEM_write_bio_DHparams:near ; CODE XREF:	_dh_main+7D4p
		extrn __chkstk:near	; CODE XREF: _dh_main+5p
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso
		extrn _bio_err:near	; DATA XREF: _dh_main+Ar _dh_main+49w	...


		end

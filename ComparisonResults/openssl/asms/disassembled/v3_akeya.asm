;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	C7F7F1F205FFF54E7781AE6174F16483
; Input	CRC32 :	FA18FDA5

; File Name   :	C:\compspace\Diff\openssl\obj\v3_akeya.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
_AUTHORITY_KEYID_seq_tt	dd offset loc_89 ; DATA	XREF: .rdata:00000044o
		dd 2 dup(0)
		dd offset ??_C@_05CNHMOIOC@keyid?$AA@ ;	"keyid"
		dd offset _ASN1_OCTET_STRING_it
		dd offset loc_89+4
		dd 1, 4
		dd offset ??_C@_06EAINIONG@issuer?$AA@ ; "issuer"
		dd offset _GENERAL_NAME_it
		dd offset loc_89
		dd 2, 8
		dd offset ??_C@_06KCELPKEE@serial?$AA@ ; "serial"
		dd offset _ASN1_INTEGER_it
; `AUTHORITY_KEYID_it'::`2'::local_it
?local_it@?1??AUTHORITY_KEYID_it@@9@9 dd 1, 10h	; DATA XREF: _AUTHORITY_KEYID_freeo
					; _AUTHORITY_KEYID_ito	...
		dd offset _AUTHORITY_KEYID_seq_tt
		dd 3, 0
		dd 0Ch
		dd offset ??_C@_0BA@OPHCNPAP@AUTHORITY_KEYID?$AA@ ; "AUTHORITY_KEYID"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
; COMDAT (pick any)
		public ??_C@_05CNHMOIOC@keyid?$AA@
; `string'
??_C@_05CNHMOIOC@keyid?$AA@ db 'keyid',0 ; DATA XREF: .rdata:0000000Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
; COMDAT (pick any)
		public ??_C@_06EAINIONG@issuer?$AA@
; `string'
??_C@_06EAINIONG@issuer?$AA@ db	'issuer',0 ; DATA XREF: .rdata:00000020o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
; COMDAT (pick any)
		public ??_C@_06KCELPKEE@serial?$AA@
; `string'
??_C@_06KCELPKEE@serial?$AA@ db	'serial',0 ; DATA XREF: .rdata:00000034o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
; COMDAT (pick any)
		public ??_C@_0BA@OPHCNPAP@AUTHORITY_KEYID?$AA@
; `string'
??_C@_0BA@OPHCNPAP@AUTHORITY_KEYID?$AA@	db 'AUTHORITY_KEYID',0 ; DATA XREF: .rdata:00000054o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 80h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _AUTHORITY_KEYID_free
_AUTHORITY_KEYID_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??AUTHORITY_KEYID_it@@9@9 ; `AUTHORITY_KEYID_it'::`2'::local_it
		push	[esp+4+arg_0]

loc_89:					; DATA XREF: .rdata:_AUTHORITY_KEYID_seq_tto
					; .rdata:00000028o ...
		call	_ASN1_item_free
		add	esp, 8
		retn
_AUTHORITY_KEYID_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 94h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _AUTHORITY_KEYID_it
_AUTHORITY_KEYID_it proc near
		mov	eax, offset ?local_it@?1??AUTHORITY_KEYID_it@@9@9 ; `AUTHORITY_KEYID_it'::`2'::local_it
		retn
_AUTHORITY_KEYID_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _AUTHORITY_KEYID_new
_AUTHORITY_KEYID_new proc near
		push	offset ?local_it@?1??AUTHORITY_KEYID_it@@9@9 ; `AUTHORITY_KEYID_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_AUTHORITY_KEYID_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_AUTHORITY_KEYID
_d2i_AUTHORITY_KEYID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??AUTHORITY_KEYID_it@@9@9 ; `AUTHORITY_KEYID_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_AUTHORITY_KEYID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_AUTHORITY_KEYID
_i2d_AUTHORITY_KEYID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??AUTHORITY_KEYID_it@@9@9 ; `AUTHORITY_KEYID_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_AUTHORITY_KEYID endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _GENERAL_NAME_it:near ; DATA XREF: .rdata:00000024o
		extrn _ASN1_INTEGER_it:near ; DATA XREF: .rdata:00000038o
		extrn _ASN1_OCTET_STRING_it:near ; DATA	XREF: .rdata:00000010o
		extrn _ASN1_item_new:near ; CODE XREF: _AUTHORITY_KEYID_new+5p
		extrn _ASN1_item_free:near ; CODE XREF:	_AUTHORITY_KEYID_free:loc_89p
		extrn _ASN1_item_d2i:near ; CODE XREF: _d2i_AUTHORITY_KEYID+11p
		extrn _ASN1_item_i2d:near ; CODE XREF: _i2d_AUTHORITY_KEYID+Dp


		end

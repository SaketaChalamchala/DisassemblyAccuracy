;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	2AEE3A715F4965DC6DEE835B9A1BAEDB
; Input	CRC32 :	564227DF

; File Name   :	C:\compspace\Diff\openssl\obj\cms_ess.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_ReceiptRequest_create0
_CMS_ReceiptRequest_create0 proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	esi
		call	_CMS_ReceiptRequest_it
		push	eax
		call	_ASN1_item_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	$merr$16
		mov	eax, [esp+4+arg_0]
		test	eax, eax
		jz	short loc_32
		push	[esp+4+arg_4]
		push	eax
		push	dword ptr [esi]
		call	_ASN1_STRING_set0
		add	esp, 0Ch
		jmp	short loc_57
; ---------------------------------------------------------------------------

loc_32:					; CODE XREF: _CMS_ReceiptRequest_create0+1Fj
		push	20h ; ' '
		push	0
		push	dword ptr [esi]
		call	_ASN1_STRING_set
		add	esp, 0Ch
		test	eax, eax
		jz	short $merr$16
		mov	eax, [esi]
		push	20h ; ' '
		push	dword ptr [eax+8]
		call	_RAND_pseudo_bytes
		add	esp, 8
		test	eax, eax
		jle	short $err$17

loc_57:					; CODE XREF: _CMS_ReceiptRequest_create0+30j
		push	offset _GENERAL_NAMES_free
		push	dword ptr [esi+8]
		call	_sk_pop_free
		mov	eax, [esp+0Ch+arg_10]
		add	esp, 8
		mov	ecx, [esp+4+arg_C]
		mov	[esi+8], eax
		mov	eax, [esi+4]
		test	ecx, ecx
		jz	short loc_89
		mov	dword ptr [eax], 1
		mov	eax, [esi+4]
		mov	[eax+4], ecx
		mov	eax, esi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_89:					; CODE XREF: _CMS_ReceiptRequest_create0+77j
		mov	dword ptr [eax], 0
		mov	ecx, [esi+4]
		mov	eax, [esp+4+arg_8]
		mov	[ecx+4], eax
		mov	eax, esi
		pop	esi
		retn
; ---------------------------------------------------------------------------

$merr$16:				; CODE XREF: _CMS_ReceiptRequest_create0+13j
					; _CMS_ReceiptRequest_create0+42j
		push	81h ; 'Å'
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	41h ; 'A'
		push	9Fh ; 'ü'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h

$err$17:				; CODE XREF: _CMS_ReceiptRequest_create0+55j
		test	esi, esi
		jz	short loc_CB
		call	_CMS_ReceiptRequest_it
		push	eax
		push	esi
		call	_ASN1_item_free
		add	esp, 8

loc_CB:					; CODE XREF: _CMS_ReceiptRequest_create0+BAj
		xor	eax, eax
		pop	esi
		retn
_CMS_ReceiptRequest_create0 endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_ReceiptRequest_free
_CMS_ReceiptRequest_free proc near

arg_0		= dword	ptr  4

		call	_CMS_ReceiptRequest_it
		push	eax
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_CMS_ReceiptRequest_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_ReceiptRequest_get0_values
_CMS_ReceiptRequest_get0_values	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	edx, [esp+arg_4]
		mov	ecx, [esp+arg_0]
		test	edx, edx
		jz	short loc_F4
		mov	eax, [ecx]
		mov	[edx], eax

loc_F4:					; CODE XREF: _CMS_ReceiptRequest_get0_values+Aj
		mov	eax, [ecx+4]
		cmp	dword ptr [eax], 0
		jnz	short loc_119
		mov	edx, [esp+arg_8]
		test	edx, edx
		jz	short loc_109
		mov	eax, [eax+4]
		mov	[edx], eax

loc_109:				; CODE XREF: _CMS_ReceiptRequest_get0_values+1Ej
		mov	eax, [esp+arg_C]
		test	eax, eax
		jz	short loc_137
		mov	dword ptr [eax], 0
		jmp	short loc_137
; ---------------------------------------------------------------------------

loc_119:				; CODE XREF: _CMS_ReceiptRequest_get0_values+16j
		mov	eax, [esp+arg_8]
		test	eax, eax
		jz	short loc_127
		mov	dword ptr [eax], 0FFFFFFFFh

loc_127:				; CODE XREF: _CMS_ReceiptRequest_get0_values+3Bj
		mov	edx, [esp+arg_C]
		test	edx, edx
		jz	short loc_137
		mov	eax, [ecx+4]
		mov	eax, [eax+4]
		mov	[edx], eax

loc_137:				; CODE XREF: _CMS_ReceiptRequest_get0_values+2Bj
					; _CMS_ReceiptRequest_get0_values+33j ...
		mov	edx, [esp+arg_10]
		test	edx, edx
		jz	short locret_144
		mov	eax, [ecx+8]
		mov	[edx], eax

locret_144:				; CODE XREF: _CMS_ReceiptRequest_get0_values+59j
		retn
_CMS_ReceiptRequest_get0_values	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 148h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_ReceiptRequest_new
_CMS_ReceiptRequest_new	proc near
		call	_CMS_ReceiptRequest_it
		push	eax
		call	_ASN1_item_new
		add	esp, 4
		retn
_CMS_ReceiptRequest_new	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 158h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_add1_ReceiptRequest
_CMS_add1_ReceiptRequest proc near

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 4
		call	__chkstk
		push	esi
		mov	[esp+8+var_4], 0
		xor	esi, esi
		call	_CMS_ReceiptRequest_it
		push	eax
		lea	eax, [esp+0Ch+var_4]
		push	eax
		push	[esp+10h+arg_4]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		test	eax, eax
		js	short loc_1AB
		push	eax
		push	[esp+0Ch+var_4]
		push	10h
		push	0D4h ; '‘'
		push	[esp+18h+arg_0]
		call	_CMS_signed_add1_attr_by_NID
		add	esp, 14h
		test	eax, eax
		jz	short loc_1AB
		mov	esi, 1
		jmp	short loc_1C6
; ---------------------------------------------------------------------------

loc_1AB:				; CODE XREF: _CMS_add1_ReceiptRequest+2Ej
					; _CMS_add1_ReceiptRequest+4Aj
		push	9Ch ; 'ú'
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	41h ; 'A'
		push	9Eh ; 'û'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h

loc_1C6:				; CODE XREF: _CMS_add1_ReceiptRequest+51j
		mov	ecx, [esp+8+var_4]
		test	ecx, ecx
		jz	short loc_1D7
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_1D7:				; CODE XREF: _CMS_add1_ReceiptRequest+74j
		mov	eax, esi
		pop	esi
		pop	ecx
		retn
_CMS_add1_ReceiptRequest endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1DCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _CMS_get1_ReceiptRequest
_CMS_get1_ReceiptRequest proc near	; CODE XREF: _cms_Receipt_verify+2F6p
					; _cms_encode_Receipt+21p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		mov	esi, [esp+4+arg_4]
		push	edi
		test	esi, esi
		jz	short loc_1EC
		mov	dword ptr [esi], 0

loc_1EC:				; CODE XREF: _CMS_get1_ReceiptRequest+8j
		push	10h
		push	0FFFFFFFDh
		push	0D4h ; '‘'
		call	_OBJ_nid2obj
		add	esp, 4
		push	eax
		push	[esp+14h+arg_0]
		call	_CMS_signed_get0_data_by_OBJ
		mov	edi, eax
		add	esp, 10h
		test	edi, edi
		jnz	short loc_213
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_213:				; CODE XREF: _CMS_get1_ReceiptRequest+32j
		call	_CMS_ReceiptRequest_it
		push	eax
		push	edi
		call	_ASN1_item_unpack
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jnz	short loc_22E
		pop	edi
		or	eax, 0FFFFFFFFh
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_22E:				; CODE XREF: _CMS_get1_ReceiptRequest+4Aj
		test	esi, esi
		jz	short loc_23C
		mov	[esi], edi
		mov	eax, 1
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_23C:				; CODE XREF: _CMS_get1_ReceiptRequest+54j
		call	_CMS_ReceiptRequest_it
		push	eax
		push	edi
		call	_ASN1_item_free
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		retn
_CMS_get1_ReceiptRequest endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 254h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _cms_Receipt_verify
_cms_Receipt_verify proc near

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= byte ptr -44h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 54h ; 'T'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+54h+var_4], eax
		mov	eax, [esp+54h+arg_4]
		push	ebx
		push	ebp
		push	esi
		mov	esi, [esp+60h+arg_0]
		xor	ebx, ebx
		push	edi
		push	eax
		mov	[esp+68h+var_50], ebx
		xor	ebp, ebp
		call	_CMS_get0_SignerInfos
		push	esi
		mov	edi, eax
		call	_CMS_get0_SignerInfos
		add	esp, 8
		mov	[esp+64h+var_4C], eax
		test	edi, edi
		jz	loc_605
		test	eax, eax
		jz	loc_605
		push	eax
		call	_sk_num
		add	esp, 4
		cmp	eax, 1
		jz	short loc_2C4
		push	0F2h ; 'Ú'
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A4h ; '§'
		jmp	loc_5F6
; ---------------------------------------------------------------------------

loc_2C4:				; CODE XREF: _cms_Receipt_verify+5Aj
		push	esi
		call	_CMS_get0_eContentType
		push	eax
		call	_OBJ_obj2nid
		add	esp, 8
		cmp	eax, 0CCh ; 'Ã'
		jz	short loc_2EE
		push	0F8h ; '¯'
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A5h ; '•'
		jmp	loc_5F6
; ---------------------------------------------------------------------------

loc_2EE:				; CODE XREF: _cms_Receipt_verify+84j
		push	esi
		call	_CMS_get0_content
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	loc_5EA
		cmp	[esi], ebx
		jz	loc_5EA
		call	_CMS_Receipt_it
		push	eax
		push	dword ptr [esi]
		call	_ASN1_item_unpack
		add	esp, 8
		mov	[esp+64h+var_54], eax
		test	eax, eax
		jnz	short loc_335
		push	106h
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A9h ; '©'
		jmp	loc_5F6
; ---------------------------------------------------------------------------

loc_335:				; CODE XREF: _cms_Receipt_verify+CBj
		push	edi
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_373
		mov	ebx, [esp+64h+var_54]

loc_348:				; CODE XREF: _cms_Receipt_verify+11Bj
		push	esi
		push	edi
		call	_sk_value
		push	dword ptr [ebx+0Ch]
		mov	ebp, eax
		push	dword ptr [ebp+14h]
		call	_ASN1_STRING_cmp
		add	esp, 10h
		test	eax, eax
		jz	short loc_371
		push	edi
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_348

loc_371:				; CODE XREF: _cms_Receipt_verify+10Dj
		xor	ebx, ebx

loc_373:				; CODE XREF: _cms_Receipt_verify+EEj
		push	edi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jnz	short loc_3A3
		push	113h
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A6h ; '¶'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_5C3
; ---------------------------------------------------------------------------

loc_3A3:				; CODE XREF: _cms_Receipt_verify+12Aj
		push	0
		push	[esp+68h+var_4C]
		call	_sk_value
		add	esp, 8
		mov	esi, eax
		push	4
		push	0FFFFFFFDh
		push	0D8h ; 'ÿ'
		call	_OBJ_nid2obj
		add	esp, 4
		push	eax
		push	esi
		call	_CMS_signed_get0_data_by_OBJ
		mov	esi, eax
		add	esp, 10h
		test	esi, esi
		jnz	short loc_3F7
		push	121h
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A7h ; 'ß'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_5C3
; ---------------------------------------------------------------------------

loc_3F7:				; CODE XREF: _cms_Receipt_verify+17Ej
		lea	eax, [esp+64h+var_48]
		push	eax
		lea	eax, [esp+68h+var_44]
		push	eax
		push	ebp
		call	_cms_msgSigDigest
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_431
		push	126h
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0ACh ; '¨'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_5C3
; ---------------------------------------------------------------------------

loc_431:				; CODE XREF: _cms_Receipt_verify+1B8j
		mov	ecx, [esp+64h+var_48]
		cmp	ecx, [esi]
		jz	short loc_45C
		push	12Bh
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A3h ; '£'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_5C3
; ---------------------------------------------------------------------------

loc_45C:				; CODE XREF: _cms_Receipt_verify+1E3j
		mov	esi, [esi+8]
		lea	edx, [esp+64h+var_44]
		sub	ecx, 4
		jb	short loc_479

loc_468:				; CODE XREF: _cms_Receipt_verify+223j
		mov	eax, [edx]
		cmp	eax, [esi]
		jnz	short loc_47E
		add	edx, 4
		add	esi, 4
		sub	ecx, 4
		jnb	short loc_468

loc_479:				; CODE XREF: _cms_Receipt_verify+212j
		cmp	ecx, 0FFFFFFFCh
		jz	short loc_4CE

loc_47E:				; CODE XREF: _cms_Receipt_verify+218j
		mov	al, [edx]
		cmp	al, [esi]
		jnz	short loc_4AB
		cmp	ecx, 0FFFFFFFDh
		jz	short loc_4CE
		mov	al, [edx+1]
		cmp	al, [esi+1]
		jnz	short loc_4AB
		cmp	ecx, 0FFFFFFFEh
		jz	short loc_4CE
		mov	al, [edx+2]
		cmp	al, [esi+2]
		jnz	short loc_4AB
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_4CE
		mov	al, [edx+3]
		cmp	al, [esi+3]
		jz	short loc_4CE

loc_4AB:				; CODE XREF: _cms_Receipt_verify+22Ej
					; _cms_Receipt_verify+23Bj ...
		push	131h
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A2h ; '¢'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_5C3
; ---------------------------------------------------------------------------

loc_4CE:				; CODE XREF: _cms_Receipt_verify+228j
					; _cms_Receipt_verify+233j ...
		push	6
		push	0FFFFFFFDh
		push	32h ; '2'
		call	_OBJ_nid2obj
		add	esp, 4
		push	eax
		push	ebp
		call	_CMS_signed_get0_data_by_OBJ
		add	esp, 10h
		test	eax, eax
		jnz	short loc_50D
		push	13Bh
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0ADh ; '≠'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_5C3
; ---------------------------------------------------------------------------

loc_50D:				; CODE XREF: _cms_Receipt_verify+294j
		mov	edi, [esp+64h+var_54]
		push	dword ptr [edi+4]
		push	eax
		call	_OBJ_cmp
		add	esp, 8
		test	eax, eax
		jz	short loc_544
		push	142h
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0ABh ; '´'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_5C3
; ---------------------------------------------------------------------------

loc_544:				; CODE XREF: _cms_Receipt_verify+2CBj
		lea	eax, [esp+64h+var_50]
		push	eax
		push	ebp
		call	_CMS_get1_ReceiptRequest
		mov	esi, [esp+6Ch+var_50]
		add	esp, 8
		test	eax, eax
		jg	short loc_57A
		push	149h
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A8h ; '®'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	short $err$42
; ---------------------------------------------------------------------------

loc_57A:				; CODE XREF: _cms_Receipt_verify+304j
		push	dword ptr [edi+8]
		push	dword ptr [esi]
		call	_ASN1_STRING_cmp
		add	esp, 8
		test	eax, eax
		jz	short loc_5AB
		push	14Fh
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0AAh ; '™'
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	short $err$42
; ---------------------------------------------------------------------------

loc_5AB:				; CODE XREF: _cms_Receipt_verify+335j
		mov	ebx, 1

$err$42:				; CODE XREF: _cms_Receipt_verify+324j
					; _cms_Receipt_verify+355j
		test	esi, esi
		jz	short loc_5C3
		call	_CMS_ReceiptRequest_it
		push	eax
		push	esi
		call	_ASN1_item_free
		add	esp, 8

loc_5C3:				; CODE XREF: _cms_Receipt_verify+14Aj
					; _cms_Receipt_verify+19Ej ...
		call	_CMS_Receipt_it
		push	eax
		push	[esp+68h+var_54]
		call	_ASN1_item_free
		add	esp, 8
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+54h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 54h
		retn
; ---------------------------------------------------------------------------

loc_5EA:				; CODE XREF: _cms_Receipt_verify+A7j
					; _cms_Receipt_verify+AFj
		push	0FFh
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	7Fh ; ''

loc_5F6:				; CODE XREF: _cms_Receipt_verify+6Bj
					; _cms_Receipt_verify+95j ...
		push	0A0h ; '†'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h

loc_605:				; CODE XREF: _cms_Receipt_verify+40j
					; _cms_Receipt_verify+48j
		mov	ecx, [esp+64h+var_4]
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 54h
		retn
_cms_Receipt_verify endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 61Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _cms_encode_Receipt
_cms_encode_Receipt proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 14h
		call	__chkstk
		push	ebx
		mov	ebx, [esp+18h+arg_0]
		lea	eax, [esp+18h+var_14]
		push	esi
		push	edi
		push	eax
		push	ebx
		mov	[esp+28h+var_14], 0
		xor	edi, edi
		call	_CMS_get1_ReceiptRequest
		mov	esi, [esp+28h+var_14]
		add	esp, 8
		test	eax, eax
		jg	short loc_66D
		push	170h
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0A8h ; '®'
		push	0A1h ; '°'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	short $err$10
; ---------------------------------------------------------------------------

loc_66D:				; CODE XREF: _cms_encode_Receipt+2Fj
		push	6
		push	0FFFFFFFDh
		push	32h ; '2'
		call	_OBJ_nid2obj
		add	esp, 4
		push	eax
		push	ebx
		call	_CMS_signed_get0_data_by_OBJ
		add	esp, 10h
		test	eax, eax
		jnz	short loc_6A9
		push	17Ah
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0ADh ; '≠'
		push	0A1h ; '°'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	short $err$10
; ---------------------------------------------------------------------------

loc_6A9:				; CODE XREF: _cms_encode_Receipt+6Bj
		mov	[esp+20h+var_C], eax
		mov	[esp+20h+var_10], 1
		mov	eax, [esi]
		mov	[esp+20h+var_8], eax
		mov	eax, [ebx+14h]
		push	0
		mov	[esp+24h+var_4], eax
		call	_CMS_Receipt_it
		push	eax
		lea	eax, [esp+28h+var_10]
		push	eax
		call	_ASN1_item_pack
		add	esp, 0Ch
		mov	edi, eax

$err$10:				; CODE XREF: _cms_encode_Receipt+4Fj
					; _cms_encode_Receipt+8Bj
		test	esi, esi
		jz	short loc_6EC
		call	_CMS_ReceiptRequest_it
		push	eax
		push	esi
		call	_ASN1_item_free
		add	esp, 8

loc_6EC:				; CODE XREF: _cms_encode_Receipt+BFj
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 14h
		retn
_cms_encode_Receipt endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6F8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_cms_msgSigDigest proc near		; CODE XREF: _cms_Receipt_verify+1AEp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		mov	esi, [esp+4+arg_0]
		mov	eax, [esi+8]
		push	dword ptr [eax]
		call	_OBJ_obj2nid
		push	eax
		call	_OBJ_nid2sn
		push	eax
		call	_EVP_get_digestbyname
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_71C
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_71C:				; CODE XREF: _cms_msgSigDigest+20j
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	dword ptr [esi+0Ch]
		push	eax
		call	_CMS_Attributes_Verify_it
		push	eax
		call	_ASN1_item_digest
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		pop	esi
		retn
_cms_msgSigDigest endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 740h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _cms_msgSigDigest_add1
_cms_msgSigDigest_add1 proc near

var_48		= dword	ptr -48h
var_44		= byte ptr -44h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 48h ; 'H'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+48h+var_4], eax
		push	esi
		mov	esi, [esp+4Ch+arg_4]
		push	edi
		mov	edi, [esp+50h+arg_0]
		mov	eax, [esi+8]
		push	dword ptr [eax]
		call	_OBJ_obj2nid
		push	eax
		call	_OBJ_nid2sn
		push	eax
		call	_EVP_get_digestbyname
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_7DD
		lea	ecx, [esp+50h+var_48]
		push	ecx
		lea	ecx, [esp+54h+var_44]
		push	ecx
		push	dword ptr [esi+0Ch]
		push	eax
		call	_CMS_Attributes_Verify_it
		push	eax
		call	_ASN1_item_digest
		add	esp, 14h
		test	eax, eax
		jz	short loc_7DD
		push	[esp+50h+var_48]
		lea	eax, [esp+54h+var_44]
		push	eax
		push	4
		push	0D8h ; 'ÿ'
		push	edi
		call	_CMS_signed_add1_attr_by_NID
		add	esp, 14h
		test	eax, eax
		jnz	short loc_7C7
		push	0D7h ; '◊'
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	41h ; 'A'
		jmp	short loc_7EC
; ---------------------------------------------------------------------------

loc_7C7:				; CODE XREF: _cms_msgSigDigest_add1+77j
		pop	edi
		mov	eax, 1
		pop	esi
		mov	ecx, [esp+48h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 48h
		retn
; ---------------------------------------------------------------------------

loc_7DD:				; CODE XREF: _cms_msgSigDigest_add1+3Aj
					; _cms_msgSigDigest_add1+5Aj
		push	0D2h ; '“'
		push	offset ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ ; ".\\crypto\\cms\\cms_ess.c"
		push	0ACh ; '¨'

loc_7EC:				; CODE XREF: _cms_msgSigDigest_add1+85j
		push	0A2h ; '¢'
		push	2Eh ; '.'
		call	_ERR_put_error
		mov	ecx, [esp+64h+var_4]
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 48h
		retn
_cms_msgSigDigest_add1 endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 810h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_CMS_ReceiptRequest
_d2i_CMS_ReceiptRequest	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		call	_CMS_ReceiptRequest_it
		push	eax
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_CMS_ReceiptRequest	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 82Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_CMS_ReceiptRequest
_i2d_CMS_ReceiptRequest	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		call	_CMS_ReceiptRequest_it
		push	eax
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_CMS_ReceiptRequest	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 844h
; COMDAT (pick any)
		public ??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@
; `string'
??_C@_0BH@OGFIJJGB@?4?2crypto?2cms?2cms_ess?4c?$AA@ db '.\crypto\cms\cms_ess.c',0
					; DATA XREF: _CMS_ReceiptRequest_create0+A2o
					; _CMS_add1_ReceiptRequest+58o	...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_num:near	; CODE XREF: _cms_Receipt_verify+4Fp
					; _cms_Receipt_verify+E4p ...
		extrn _sk_value:near	; CODE XREF: _cms_Receipt_verify+F6p
					; _cms_Receipt_verify+155p
		extrn _sk_pop_free:near	; CODE XREF: _CMS_ReceiptRequest_create0+5Fp
		extrn _CRYPTO_free:near	; CODE XREF: _CMS_add1_ReceiptRequest+77p
		extrn _ERR_put_error:near ; CODE XREF: _CMS_ReceiptRequest_create0+B0p
					; _CMS_add1_ReceiptRequest+66p	...
		extrn _ASN1_STRING_cmp:near ; CODE XREF: _cms_Receipt_verify+103p
					; _cms_Receipt_verify+32Bp
		extrn _ASN1_STRING_set:near ; CODE XREF: _CMS_ReceiptRequest_create0+38p
		extrn _ASN1_STRING_set0:near ; CODE XREF: _CMS_ReceiptRequest_create0+28p
		extrn _ASN1_item_unpack:near ; CODE XREF: _CMS_get1_ReceiptRequest+3Ep
					; _cms_Receipt_verify+BDp
		extrn _ASN1_item_pack:near ; CODE XREF:	_cms_encode_Receipt+B3p
		extrn _ASN1_item_new:near ; CODE XREF: _CMS_ReceiptRequest_create0+7p
					; _CMS_ReceiptRequest_new+6p
		extrn _ASN1_item_free:near ; CODE XREF:	_CMS_ReceiptRequest_create0+C3p
					; _CMS_ReceiptRequest_free+Ap ...
		extrn _ASN1_item_d2i:near ; CODE XREF: _d2i_CMS_ReceiptRequest+12p
		extrn _ASN1_item_i2d:near ; CODE XREF: _CMS_add1_ReceiptRequest+24p
					; _i2d_CMS_ReceiptRequest+Ep
		extrn _OBJ_nid2obj:near	; CODE XREF: _CMS_get1_ReceiptRequest+19p
					; _cms_Receipt_verify+168p ...
		extrn _OBJ_nid2sn:near	; CODE XREF: _cms_msgSigDigest+10p
					; _cms_msgSigDigest_add1+2Ap
		extrn _OBJ_obj2nid:near	; CODE XREF: _cms_Receipt_verify+77p
					; _cms_msgSigDigest+Ap	...
		extrn _OBJ_cmp:near	; CODE XREF: _cms_Receipt_verify+2C1p
		extrn _EVP_get_digestbyname:near ; CODE	XREF: _cms_msgSigDigest+16p
					; _cms_msgSigDigest_add1+30p
		extrn _ASN1_item_digest:near ; CODE XREF: _cms_msgSigDigest+36p
					; _cms_msgSigDigest_add1+50p
		extrn _RAND_pseudo_bytes:near ;	CODE XREF: _CMS_ReceiptRequest_create0+4Bp
		extrn _GENERAL_NAMES_free:near
					; DATA XREF: _CMS_ReceiptRequest_create0:loc_57o
		extrn _CMS_ReceiptRequest_it:near
					; CODE XREF: _CMS_ReceiptRequest_create0+1p
					; _CMS_ReceiptRequest_create0+BCp ...
		extrn _CMS_get0_content:near ; CODE XREF: _cms_Receipt_verify+9Bp
		extrn _CMS_get0_eContentType:near ; CODE XREF: _cms_Receipt_verify+71p
		extrn _CMS_get0_SignerInfos:near ; CODE	XREF: _cms_Receipt_verify+2Ap
					; _cms_Receipt_verify+32p
		extrn _CMS_signed_add1_attr_by_NID:near
					; CODE XREF: _CMS_add1_ReceiptRequest+40p
					; _cms_msgSigDigest_add1+6Dp
		extrn _CMS_signed_get0_data_by_OBJ:near
					; CODE XREF: _CMS_get1_ReceiptRequest+26p
					; _cms_Receipt_verify+172p ...
		extrn _CMS_Attributes_Verify_it:near ; CODE XREF: _cms_msgSigDigest+30p
					; _cms_msgSigDigest_add1+4Ap
		extrn _CMS_Receipt_it:near ; CODE XREF:	_cms_Receipt_verify+B5p
					; _cms_Receipt_verify:loc_5C3p	...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _cms_Receipt_verify+38Dp
					; _cms_Receipt_verify+3BDp ...
		extrn __chkstk:near	; CODE XREF: _CMS_add1_ReceiptRequest+5p
					; _cms_Receipt_verify+5p ...
		extrn ___security_cookie:near ;	DATA XREF: _cms_Receipt_verify+Ar
					; _cms_msgSigDigest_add1+Ar


		end

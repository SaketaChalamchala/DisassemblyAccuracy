;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	9AEA4C024F978C733329D784442F352B
; Input	CRC32 :	A1747967

; File Name   :	C:\compspace\Diff\openssl\obj\ecs_ossl.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ecdsa_do_sign	proc near		; DATA XREF: .data:00000A78o

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	eax, 14h
		call	__chkstk
		push	ebx
		push	ebp
		mov	ebp, [esp+1Ch+arg_10]
		push	esi
		push	edi
		push	ebp
		mov	[esp+28h+var_C], 0
		xor	esi, esi
		mov	[esp+28h+var_14], 0
		mov	[esp+28h+var_10], 0
		call	_ecdsa_check
		push	ebp
		mov	edi, eax
		call	_EC_KEY_get0_group
		mov	ebx, eax
		push	ebp
		mov	[esp+30h+var_8], ebx
		call	_EC_KEY_get0_private_key
		add	esp, 0Ch
		mov	[esp+24h+var_4], eax
		test	ebx, ebx
		jz	loc_2E8
		test	eax, eax
		jz	loc_2E8
		test	edi, edi
		jz	loc_2E8
		call	_ECDSA_SIG_new
		mov	edi, eax
		test	edi, edi
		jnz	short loc_81
		push	103h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	41h ; 'A'
		jmp	loc_2F4
; ---------------------------------------------------------------------------

loc_81:					; CODE XREF: _ecdsa_do_sign+6Ej
		mov	ebp, [edi+4]
		call	_BN_CTX_new
		mov	ebx, eax
		test	ebx, ebx
		jz	loc_26E
		call	_BN_new
		mov	esi, eax
		test	esi, esi
		jz	loc_26E
		call	_BN_new
		mov	[esp+24h+var_10], eax
		test	eax, eax
		jz	loc_26E
		call	_BN_new
		mov	[esp+24h+var_14], eax
		test	eax, eax
		jz	loc_26E
		push	ebx
		push	esi
		push	[esp+2Ch+var_8]
		call	_EC_GROUP_get_order
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_E7
		push	10Fh
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		jmp	loc_27A
; ---------------------------------------------------------------------------

loc_E7:					; CODE XREF: _ecdsa_do_sign+D4j
		push	esi
		call	_BN_num_bits
		mov	ecx, [esp+28h+arg_4]
		add	esp, 4
		shl	ecx, 3
		mov	[esp+24h+var_8], eax
		cmp	ecx, eax
		jle	short loc_111
		add	eax, 7
		cdq
		and	edx, 7
		add	eax, edx
		sar	eax, 3
		mov	[esp+24h+arg_4], eax
		jmp	short loc_115
; ---------------------------------------------------------------------------

loc_111:				; CODE XREF: _ecdsa_do_sign+FDj
		mov	eax, [esp+24h+arg_4]

loc_115:				; CODE XREF: _ecdsa_do_sign+10Fj
		push	[esp+24h+var_14]
		push	eax
		push	[esp+2Ch+arg_0]
		call	_BN_bin2bn
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_13B
		push	119h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	loc_27A
; ---------------------------------------------------------------------------

loc_13B:				; CODE XREF: _ecdsa_do_sign+128j
		mov	ecx, [esp+24h+arg_4]
		lea	eax, ds:0[ecx*8]
		mov	ecx, [esp+24h+var_8]
		cmp	eax, ecx
		jle	short loc_17C
		and	ecx, 7
		mov	eax, 8
		sub	eax, ecx
		push	eax
		mov	eax, [esp+28h+var_14]
		push	eax
		push	eax
		call	_BN_rshift
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_17C
		push	11Eh
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	loc_27A
; ---------------------------------------------------------------------------

loc_17C:				; CODE XREF: _ecdsa_do_sign+14Cj
					; _ecdsa_do_sign+169j
		mov	eax, [esp+24h+arg_C]
		mov	ecx, [esp+24h+arg_8]

loc_184:				; CODE XREF: _ecdsa_do_sign+222j
		test	ecx, ecx
		jz	short loc_1A9
		test	eax, eax
		jz	short loc_1A9
		push	eax
		push	dword ptr [edi]
		mov	[esp+2Ch+var_8], ecx
		call	_BN_copy
		add	esp, 8
		test	eax, eax
		jnz	short loc_1CC
		push	12Bh
		jmp	loc_273
; ---------------------------------------------------------------------------

loc_1A9:				; CODE XREF: _ecdsa_do_sign+186j
					; _ecdsa_do_sign+18Aj ...
		push	edi
		lea	eax, [esp+28h+var_C]
		push	eax
		push	ebx
		push	[esp+30h+arg_10]
		call	_ECDSA_sign_setup
		add	esp, 10h
		test	eax, eax
		jz	loc_260
		mov	eax, [esp+24h+var_C]
		mov	[esp+24h+var_8], eax

loc_1CC:				; CODE XREF: _ecdsa_do_sign+19Dj
		push	ebx
		push	esi
		push	dword ptr [edi]
		push	[esp+30h+var_4]
		push	[esp+34h+var_10]
		call	_BN_mod_mul
		add	esp, 14h
		test	eax, eax
		jz	short loc_252
		push	esi
		push	[esp+28h+var_14]
		push	[esp+2Ch+var_10]
		push	ebp
		call	_BN_mod_add_quick
		add	esp, 10h
		test	eax, eax
		jz	short loc_244
		push	ebx
		push	esi
		push	[esp+2Ch+var_8]
		push	ebp
		push	ebp
		call	_BN_mod_mul
		add	esp, 14h
		test	eax, eax
		jz	short loc_236
		cmp	dword ptr [ebp+4], 0
		jnz	short loc_291
		mov	ecx, [esp+24h+arg_8]
		mov	eax, [esp+24h+arg_C]
		test	ecx, ecx
		jz	short loc_1A9
		test	eax, eax
		jz	loc_184
		push	143h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	6Ah ; 'j'
		jmp	short loc_27A
; ---------------------------------------------------------------------------

loc_236:				; CODE XREF: _ecdsa_do_sign+20Cj
		push	139h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	short loc_27A
; ---------------------------------------------------------------------------

loc_244:				; CODE XREF: _ecdsa_do_sign+1F8j
		push	135h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	short loc_27A
; ---------------------------------------------------------------------------

loc_252:				; CODE XREF: _ecdsa_do_sign+1E2j
		push	131h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	short loc_27A
; ---------------------------------------------------------------------------

loc_260:				; CODE XREF: _ecdsa_do_sign+1BEj
		push	124h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	2Ah ; '*'
		jmp	short loc_27A
; ---------------------------------------------------------------------------

loc_26E:				; CODE XREF: _ecdsa_do_sign+8Dj
					; _ecdsa_do_sign+9Cj ...
		push	10Ah

loc_273:				; CODE XREF: _ecdsa_do_sign+1A4j
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	41h ; 'A'

loc_27A:				; CODE XREF: _ecdsa_do_sign+E2j
					; _ecdsa_do_sign+136j ...
		push	65h ; 'e'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		push	edi
		call	_ECDSA_SIG_free
		add	esp, 4
		xor	edi, edi

loc_291:				; CODE XREF: _ecdsa_do_sign+212j
		test	ebx, ebx
		jz	short loc_29E
		push	ebx
		call	_BN_CTX_free
		add	esp, 4

loc_29E:				; CODE XREF: _ecdsa_do_sign+293j
		mov	eax, [esp+24h+var_14]
		test	eax, eax
		jz	short loc_2AF
		push	eax
		call	_BN_clear_free
		add	esp, 4

loc_2AF:				; CODE XREF: _ecdsa_do_sign+2A4j
		mov	eax, [esp+24h+var_10]
		test	eax, eax
		jz	short loc_2C0
		push	eax
		call	_BN_clear_free
		add	esp, 4

loc_2C0:				; CODE XREF: _ecdsa_do_sign+2B5j
		test	esi, esi
		jz	short loc_2CD
		push	esi
		call	_BN_free
		add	esp, 4

loc_2CD:				; CODE XREF: _ecdsa_do_sign+2C2j
		mov	eax, [esp+24h+var_C]
		test	eax, eax
		jz	short loc_2DE
		push	eax
		call	_BN_clear_free
		add	esp, 4

loc_2DE:				; CODE XREF: _ecdsa_do_sign+2D3j
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_2E8:				; CODE XREF: _ecdsa_do_sign+4Fj
					; _ecdsa_do_sign+57j ...
		push	0FDh ; 'ý'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	43h ; 'C'

loc_2F4:				; CODE XREF: _ecdsa_do_sign+7Cj
		push	65h ; 'e'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 14h
		retn
_ecdsa_do_sign	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 30Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ecdsa_sign_setup proc near		; DATA XREF: .data:00000A7Co

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, 0Ch
		call	__chkstk
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_8], 0
		push	esi
		test	eax, eax
		jz	loc_698
		push	eax
		call	_EC_KEY_get0_group
		mov	esi, eax
		add	esp, 4
		mov	[esp+10h+var_4], esi
		test	esi, esi
		jz	loc_698
		mov	eax, [esp+10h+arg_4]
		push	ebp
		test	eax, eax
		jnz	short loc_373
		call	_BN_CTX_new
		mov	ebp, eax
		test	ebp, ebp
		jnz	short loc_375
		push	6Ah ; 'j'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	41h ; 'A'
		push	67h ; 'g'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebp
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_373:				; CODE XREF: _ecdsa_sign_setup+3Dj
		mov	ebp, eax

loc_375:				; CODE XREF: _ecdsa_sign_setup+48j
		push	ebx
		push	edi
		call	_BN_new
		mov	edi, eax
		call	_BN_new
		mov	[esp+1Ch+var_C], eax
		call	_BN_new
		mov	ebx, eax
		call	_BN_new
		mov	[esp+1Ch+arg_0], eax
		test	edi, edi
		jz	loc_61A
		mov	ecx, [esp+1Ch+var_C]
		test	ecx, ecx
		jz	loc_61A
		test	ebx, ebx
		jz	loc_61A
		test	eax, eax
		jz	loc_61A
		push	esi
		call	_EC_POINT_new
		add	esp, 4
		mov	[esp+1Ch+var_8], eax
		test	eax, eax
		jnz	short loc_3DA
		push	79h ; 'y'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		jmp	loc_623
; ---------------------------------------------------------------------------

loc_3DA:				; CODE XREF: _ecdsa_sign_setup+BEj
		push	ebp
		push	ebx
		push	esi
		call	_EC_GROUP_get_order
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_3FC
		push	7Dh ; '}'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		jmp	loc_623
; ---------------------------------------------------------------------------
		db 0Fh,	1Fh, 44h, 2 dup(0)
; ---------------------------------------------------------------------------

loc_3FC:				; CODE XREF: _ecdsa_sign_setup+DBj
					; _ecdsa_sign_setup+106j ...
		push	ebx
		push	edi
		call	_BN_rand_range
		add	esp, 8
		test	eax, eax
		jz	loc_60C
		cmp	dword ptr [edi+4], 0
		jz	short loc_3FC
		push	ebx
		push	edi
		push	edi
		call	_BN_add
		add	esp, 0Ch
		test	eax, eax
		jz	loc_62F
		push	ebx
		call	_BN_num_bits
		push	edi
		mov	esi, eax
		call	_BN_num_bits
		add	esp, 8
		cmp	eax, esi
		jg	short loc_44F
		push	ebx
		push	edi
		push	edi
		call	_BN_add
		add	esp, 0Ch
		test	eax, eax
		jz	loc_62F

loc_44F:				; CODE XREF: _ecdsa_sign_setup+12Ej
		mov	esi, [esp+1Ch+var_4]
		push	ebp
		push	0
		push	0
		push	edi
		push	[esp+2Ch+var_8]
		push	esi
		call	_EC_POINT_mul
		add	esp, 18h
		test	eax, eax
		jz	loc_5FE
		push	esi
		call	_EC_GROUP_method_of
		push	eax
		call	_EC_METHOD_get_field_type
		add	esp, 8
		push	ebp
		push	0
		push	[esp+24h+arg_0]
		push	[esp+28h+var_8]
		push	esi
		cmp	eax, 196h
		jnz	short loc_4AD
		call	_EC_POINT_get_affine_coordinates_GFp
		add	esp, 14h
		test	eax, eax
		jnz	short loc_4BD
		push	9Fh ; ''
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		jmp	loc_623
; ---------------------------------------------------------------------------

loc_4AD:				; CODE XREF: _ecdsa_sign_setup+182j
		call	_EC_POINT_get_affine_coordinates_GF2m
		add	esp, 14h
		test	eax, eax
		jz	loc_5F0

loc_4BD:				; CODE XREF: _ecdsa_sign_setup+18Ej
		push	ebp
		push	ebx
		push	[esp+24h+arg_0]
		push	[esp+28h+var_C]
		call	_BN_nnmod
		add	esp, 10h
		test	eax, eax
		jz	loc_5E2
		mov	eax, [esp+1Ch+var_C]
		cmp	dword ptr [eax+4], 0
		jz	loc_3FC
		push	esi
		call	_EC_GROUP_get_mont_data
		add	esp, 4
		test	eax, eax
		jz	loc_580
		push	2
		push	[esp+20h+arg_0]
		call	_BN_set_word
		add	esp, 8
		test	eax, eax
		jnz	short loc_519
		push	0BCh ; '¼'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	loc_623
; ---------------------------------------------------------------------------

loc_519:				; CODE XREF: _ecdsa_sign_setup+1FAj
		mov	eax, [esp+1Ch+arg_0]
		push	ebp
		push	ebx
		push	eax
		push	ebx
		push	eax
		call	_BN_mod_sub
		add	esp, 14h
		test	eax, eax
		jnz	short loc_53F
		push	0C0h ; 'À'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	loc_623
; ---------------------------------------------------------------------------

loc_53F:				; CODE XREF: _ecdsa_sign_setup+220j
		mov	eax, [esp+1Ch+arg_0]
		push	esi
		or	dword ptr [eax+10h], 4
		call	_EC_GROUP_get_mont_data
		mov	esi, [esp+20h+arg_0]
		push	eax
		push	ebp
		push	ebx
		push	esi
		push	edi
		push	edi
		call	_BN_mod_exp_mont_consttime
		add	esp, 1Ch
		test	eax, eax
		jnz	short loc_5A5
		push	0C6h ; 'Æ'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		push	67h ; 'g'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_633
; ---------------------------------------------------------------------------

loc_580:				; CODE XREF: _ecdsa_sign_setup+1E4j
		push	ebp
		push	ebx
		push	edi
		push	edi
		call	_BN_mod_inverse
		add	esp, 10h
		test	eax, eax
		jnz	short loc_5A1
		push	0CBh ; 'Ë'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	loc_623
; ---------------------------------------------------------------------------

loc_5A1:				; CODE XREF: _ecdsa_sign_setup+282j
		mov	esi, [esp+1Ch+arg_0]

loc_5A5:				; CODE XREF: _ecdsa_sign_setup+255j
		mov	eax, [esp+1Ch+arg_C]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_5B8
		push	eax
		call	_BN_clear_free
		add	esp, 4

loc_5B8:				; CODE XREF: _ecdsa_sign_setup+2A1j
		mov	eax, [esp+1Ch+arg_8]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_5CB
		push	eax
		call	_BN_clear_free
		add	esp, 4

loc_5CB:				; CODE XREF: _ecdsa_sign_setup+2B4j
		mov	eax, [esp+1Ch+arg_C]
		mov	ecx, [esp+1Ch+var_C]
		mov	[eax], ecx
		mov	eax, [esp+1Ch+arg_8]
		mov	[eax], edi
		mov	edi, 1
		jmp	short loc_653
; ---------------------------------------------------------------------------

loc_5E2:				; CODE XREF: _ecdsa_sign_setup+1C5j
		push	0AFh ; '¯'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		jmp	short loc_623
; ---------------------------------------------------------------------------

loc_5F0:				; CODE XREF: _ecdsa_sign_setup+1ABj
		push	0A9h ; '©'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		jmp	short loc_623
; ---------------------------------------------------------------------------

loc_5FE:				; CODE XREF: _ecdsa_sign_setup+15Cj
		push	98h ; ''
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		jmp	short loc_623
; ---------------------------------------------------------------------------

loc_60C:				; CODE XREF: _ecdsa_sign_setup+FCj
		push	86h ; ''
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	68h ; 'h'
		jmp	short loc_623
; ---------------------------------------------------------------------------

loc_61A:				; CODE XREF: _ecdsa_sign_setup+8Dj
					; _ecdsa_sign_setup+99j ...
		push	75h ; 'u'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	41h ; 'A'

loc_623:				; CODE XREF: _ecdsa_sign_setup+C9j
					; _ecdsa_sign_setup+E6j ...
		push	67h ; 'g'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h

loc_62F:				; CODE XREF: _ecdsa_sign_setup+115j
					; _ecdsa_sign_setup+13Dj
		mov	esi, [esp+1Ch+arg_0]

loc_633:				; CODE XREF: _ecdsa_sign_setup+26Fj
		test	edi, edi
		jz	short loc_640
		push	edi
		call	_BN_clear_free
		add	esp, 4

loc_640:				; CODE XREF: _ecdsa_sign_setup+329j
		mov	eax, [esp+1Ch+var_C]
		test	eax, eax
		jz	short loc_651
		push	eax
		call	_BN_clear_free
		add	esp, 4

loc_651:				; CODE XREF: _ecdsa_sign_setup+33Aj
		xor	edi, edi

loc_653:				; CODE XREF: _ecdsa_sign_setup+2D4j
		cmp	[esp+1Ch+arg_4], 0
		jnz	short loc_663
		push	ebp
		call	_BN_CTX_free
		add	esp, 4

loc_663:				; CODE XREF: _ecdsa_sign_setup+34Cj
		test	ebx, ebx
		jz	short loc_670
		push	ebx
		call	_BN_free
		add	esp, 4

loc_670:				; CODE XREF: _ecdsa_sign_setup+359j
		mov	eax, [esp+1Ch+var_8]
		test	eax, eax
		jz	short loc_681
		push	eax
		call	_EC_POINT_free
		add	esp, 4

loc_681:				; CODE XREF: _ecdsa_sign_setup+36Aj
		test	esi, esi
		jz	short loc_68E
		push	esi
		call	_BN_clear_free
		add	esp, 4

loc_68E:				; CODE XREF: _ecdsa_sign_setup+377j
		mov	eax, edi
		pop	edi
		pop	ebx
		pop	ebp
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_698:				; CODE XREF: _ecdsa_sign_setup+19j
					; _ecdsa_sign_setup+30j
		push	64h ; 'd'
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	43h ; 'C'
		push	67h ; 'g'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		add	esp, 0Ch
		retn
_ecdsa_sign_setup endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ecdsa_do_verify proc near		; DATA XREF: .data:00000A80o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, 18h
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		mov	esi, [esp+24h+arg_C]
		xor	ebx, ebx
		push	edi
		or	edi, 0FFFFFFFFh
		test	esi, esi
		jz	loc_A4E
		push	esi
		call	_EC_KEY_get0_group
		mov	ebp, eax
		add	esp, 4
		test	ebp, ebp
		jz	loc_A4E
		push	esi
		call	_EC_KEY_get0_public_key
		add	esp, 4
		mov	[esp+28h+var_4], eax
		test	eax, eax
		jz	loc_A4E
		cmp	[esp+28h+arg_8], ebx
		jz	loc_A4E
		call	_BN_CTX_new
		mov	esi, eax
		test	esi, esi
		jnz	short loc_721
		push	172h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	41h ; 'A'
		jmp	loc_A5A
; ---------------------------------------------------------------------------

loc_721:				; CODE XREF: _ecdsa_do_verify+5Aj
		push	esi
		call	_BN_CTX_start
		push	esi
		call	_BN_CTX_get
		push	esi
		mov	[esp+34h+arg_C], eax
		call	_BN_CTX_get
		push	esi
		mov	[esp+38h+var_C], eax
		call	_BN_CTX_get
		push	esi
		mov	[esp+3Ch+var_18], eax
		call	_BN_CTX_get
		push	esi
		mov	[esp+40h+var_14], eax
		call	_BN_CTX_get
		add	esp, 18h
		mov	[esp+28h+var_10], eax
		test	eax, eax
		jnz	short loc_77D
		push	17Ch

loc_765:				; CODE XREF: _ecdsa_do_verify+174j
					; _ecdsa_do_verify+1C6j ...
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	3
		push	66h ; 'f'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		jmp	$err$29
; ---------------------------------------------------------------------------

loc_77D:				; CODE XREF: _ecdsa_do_verify+AAj
		push	esi
		push	[esp+2Ch+arg_C]
		push	ebp
		call	_EC_GROUP_get_order
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_7AC
		push	181h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		push	66h ; 'f'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		jmp	$err$29
; ---------------------------------------------------------------------------

loc_7AC:				; CODE XREF: _ecdsa_do_verify+D9j
		mov	eax, [esp+28h+arg_8]
		mov	eax, [eax]
		cmp	[eax+4], ebx
		jz	loc_A0E
		cmp	[eax+0Ch], ebx
		jnz	loc_A0E
		push	[esp+28h+arg_C]
		push	eax
		call	_BN_ucmp
		add	esp, 8
		test	eax, eax
		jns	loc_A0E
		mov	eax, [esp+28h+arg_8]
		mov	eax, [eax+4]
		cmp	[eax+4], ebx
		jz	loc_A0E
		cmp	[eax+0Ch], ebx
		jnz	loc_A0E
		push	[esp+28h+arg_C]
		push	eax
		call	_BN_ucmp
		add	esp, 8
		test	eax, eax
		jns	loc_A0E
		mov	eax, [esp+28h+arg_8]
		push	esi
		push	[esp+2Ch+arg_C]
		push	dword ptr [eax+4]
		push	[esp+34h+var_18]
		call	_BN_mod_inverse
		add	esp, 10h
		test	eax, eax
		jnz	short loc_82D
		push	18Eh
		jmp	loc_765
; ---------------------------------------------------------------------------

loc_82D:				; CODE XREF: _ecdsa_do_verify+16Dj
		push	[esp+28h+arg_C]
		call	_BN_num_bits
		mov	ecx, eax
		add	esp, 4
		mov	eax, [esp+28h+arg_4]
		shl	eax, 3
		mov	[esp+28h+var_8], ecx
		cmp	eax, ecx
		jle	short loc_85C
		lea	eax, [ecx+7]
		cdq
		and	edx, 7
		add	eax, edx
		sar	eax, 3
		mov	[esp+28h+arg_4], eax
		jmp	short loc_860
; ---------------------------------------------------------------------------

loc_85C:				; CODE XREF: _ecdsa_do_verify+194j
		mov	eax, [esp+28h+arg_4]

loc_860:				; CODE XREF: _ecdsa_do_verify+1A6j
		push	[esp+28h+var_14]
		push	eax
		push	[esp+30h+arg_0]
		call	_BN_bin2bn
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_87F
		push	199h
		jmp	loc_765
; ---------------------------------------------------------------------------

loc_87F:				; CODE XREF: _ecdsa_do_verify+1BFj
		mov	eax, [esp+28h+arg_4]
		mov	ecx, [esp+28h+var_8]
		shl	eax, 3
		cmp	eax, ecx
		jle	short loc_8B5
		and	ecx, 7
		mov	eax, 8
		sub	eax, ecx
		push	eax
		mov	eax, [esp+2Ch+var_14]
		push	eax
		push	eax
		call	_BN_rshift
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_8B5
		push	19Eh
		jmp	loc_765
; ---------------------------------------------------------------------------

loc_8B5:				; CODE XREF: _ecdsa_do_verify+1D8j
					; _ecdsa_do_verify+1F5j
		push	esi
		push	[esp+2Ch+arg_C]
		push	[esp+30h+var_18]
		push	[esp+34h+var_14]
		push	[esp+38h+var_C]
		call	_BN_mod_mul
		add	esp, 14h
		test	eax, eax
		jnz	short loc_8DC
		push	1A3h
		jmp	loc_765
; ---------------------------------------------------------------------------

loc_8DC:				; CODE XREF: _ecdsa_do_verify+21Cj
		mov	eax, [esp+28h+arg_8]
		mov	ecx, [esp+28h+var_18]
		push	esi
		push	[esp+2Ch+arg_C]
		push	ecx
		push	dword ptr [eax]
		push	ecx
		call	_BN_mod_mul
		add	esp, 14h
		test	eax, eax
		jnz	short loc_903
		push	1A8h
		jmp	loc_765
; ---------------------------------------------------------------------------

loc_903:				; CODE XREF: _ecdsa_do_verify+243j
		push	ebp
		call	_EC_POINT_new
		mov	ebx, eax
		add	esp, 4
		test	ebx, ebx
		jnz	short loc_92F
		push	1ADh
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	41h ; 'A'
		push	66h ; 'f'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		jmp	$err$29
; ---------------------------------------------------------------------------

loc_92F:				; CODE XREF: _ecdsa_do_verify+25Cj
		push	esi
		push	[esp+2Ch+var_18]
		push	[esp+30h+var_4]
		push	[esp+34h+var_C]
		push	ebx
		push	ebp
		call	_EC_POINT_mul
		add	esp, 18h
		test	eax, eax
		jnz	short loc_967
		push	1B1h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		push	66h ; 'f'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		jmp	$err$29
; ---------------------------------------------------------------------------

loc_967:				; CODE XREF: _ecdsa_do_verify+294j
		push	ebp
		call	_EC_GROUP_method_of
		push	eax
		call	_EC_METHOD_get_field_type
		add	esp, 8
		push	esi
		push	0
		push	[esp+30h+var_10]
		push	ebx
		push	ebp
		cmp	eax, 196h
		jnz	short loc_9AC
		call	_EC_POINT_get_affine_coordinates_GFp
		add	esp, 14h
		test	eax, eax
		jnz	short loc_9D2
		push	1B7h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		push	66h ; 'f'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		jmp	short $err$29
; ---------------------------------------------------------------------------

loc_9AC:				; CODE XREF: _ecdsa_do_verify+2D0j
		call	_EC_POINT_get_affine_coordinates_GF2m
		add	esp, 14h
		test	eax, eax
		jnz	short loc_9D2
		push	1BFh
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	10h
		push	66h ; 'f'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		jmp	short $err$29
; ---------------------------------------------------------------------------

loc_9D2:				; CODE XREF: _ecdsa_do_verify+2DCj
					; _ecdsa_do_verify+302j
		mov	ebp, [esp+28h+var_C]
		push	esi
		push	[esp+2Ch+arg_C]
		push	[esp+30h+var_10]
		push	ebp
		call	_BN_nnmod
		add	esp, 10h
		test	eax, eax
		jnz	short loc_9F6
		push	1C5h
		jmp	loc_765
; ---------------------------------------------------------------------------

loc_9F6:				; CODE XREF: _ecdsa_do_verify+336j
		mov	eax, [esp+28h+arg_8]
		push	dword ptr [eax]
		push	ebp
		call	_BN_ucmp
		add	esp, 8
		mov	edi, eax
		neg	edi
		sbb	edi, edi
		inc	edi
		jmp	short $err$29
; ---------------------------------------------------------------------------

loc_A0E:				; CODE XREF: _ecdsa_do_verify+101j
					; _ecdsa_do_verify+10Aj ...
		push	188h
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	64h ; 'd'
		push	66h ; 'f'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		xor	edi, edi

$err$29:				; CODE XREF: _ecdsa_do_verify+C4j
					; _ecdsa_do_verify+F3j	...
		push	esi
		call	_BN_CTX_end
		push	esi
		call	_BN_CTX_free
		add	esp, 8
		test	ebx, ebx
		jz	short loc_A44
		push	ebx
		call	_EC_POINT_free
		add	esp, 4

loc_A44:				; CODE XREF: _ecdsa_do_verify+385j
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 18h
		retn
; ---------------------------------------------------------------------------

loc_A4E:				; CODE XREF: _ecdsa_do_verify+19j
					; _ecdsa_do_verify+2Cj	...
		push	16Ch
		push	offset ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ ;	".\\crypto\\ecdsa\\ecs_ossl.c"
		push	67h ; 'g'

loc_A5A:				; CODE XREF: _ecdsa_do_verify+68j
		push	66h ; 'f'
		push	2Ah ; '*'
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 18h
		retn
_ecdsa_do_verify endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0A74h
_openssl_ecdsa_meth dd offset ??_C@_0BF@DJKLHCAL@OpenSSL?5ECDSA?5method?$AA@
					; DATA XREF: _ECDSA_OpenSSLo
					; "OpenSSL ECDSA method"
		dd offset _ecdsa_do_sign
		dd offset _ecdsa_sign_setup
		dd offset _ecdsa_do_verify
		dd 2 dup(0)
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8Ch
; COMDAT (pick any)
		public ??_C@_0BF@DJKLHCAL@OpenSSL?5ECDSA?5method?$AA@
; `string'
??_C@_0BF@DJKLHCAL@OpenSSL?5ECDSA?5method?$AA@ db 'OpenSSL ECDSA method',0
					; DATA XREF: .data:_openssl_ecdsa_metho
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AA4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ECDSA_OpenSSL
_ECDSA_OpenSSL	proc near
		mov	eax, offset _openssl_ecdsa_meth
		retn
_ECDSA_OpenSSL	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AACh
; COMDAT (pick any)
		public ??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@
; `string'
??_C@_0BK@JICBNKGE@?4?2crypto?2ecdsa?2ecs_ossl?4c?$AA@ db '.\crypto\ecdsa\ecs_ossl.c',0
					; DATA XREF: _ecdsa_do_sign+75o
					; _ecdsa_do_sign+DBo ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _BN_CTX_new:near	; CODE XREF: _ecdsa_do_sign+84p
					; _ecdsa_sign_setup+3Fp ...
		extrn _BN_CTX_free:near	; CODE XREF: _ecdsa_do_sign+296p
					; _ecdsa_sign_setup+34Fp ...
		extrn _BN_CTX_start:near ; CODE	XREF: _ecdsa_do_verify+6Ep
		extrn _BN_CTX_get:near	; CODE XREF: _ecdsa_do_verify+74p
					; _ecdsa_do_verify+7Ep	...
		extrn _BN_CTX_end:near	; CODE XREF: _ecdsa_do_verify+375p
		extrn _BN_rand_range:near ; CODE XREF: _ecdsa_sign_setup+F2p
		extrn _BN_num_bits:near	; CODE XREF: _ecdsa_do_sign+E8p
					; _ecdsa_sign_setup+11Cp ...
		extrn _BN_new:near	; CODE XREF: _ecdsa_do_sign+93p
					; _ecdsa_do_sign+A2p ...
		extrn _BN_clear_free:near ; CODE XREF: _ecdsa_do_sign+2A7p
					; _ecdsa_do_sign+2B8p ...
		extrn _BN_copy:near	; CODE XREF: _ecdsa_do_sign+193p
		extrn _BN_bin2bn:near	; CODE XREF: _ecdsa_do_sign+11Ep
					; _ecdsa_do_verify+1B5p
		extrn _BN_add:near	; CODE XREF: _ecdsa_sign_setup+10Bp
					; _ecdsa_sign_setup+133p
		extrn _BN_nnmod:near	; CODE XREF: _ecdsa_sign_setup+1BBp
					; _ecdsa_do_verify+32Cp
		extrn _BN_mod_add_quick:near ; CODE XREF: _ecdsa_do_sign+1EEp
		extrn _BN_mod_sub:near	; CODE XREF: _ecdsa_sign_setup+216p
		extrn _BN_mod_mul:near	; CODE XREF: _ecdsa_do_sign+1D8p
					; _ecdsa_do_sign+202p ...
		extrn _BN_set_word:near	; CODE XREF: _ecdsa_sign_setup+1F0p
		extrn _BN_free:near	; CODE XREF: _ecdsa_do_sign+2C5p
					; _ecdsa_sign_setup+35Cp
		extrn _BN_mod_exp_mont_consttime:near ;	CODE XREF: _ecdsa_sign_setup+24Bp
		extrn _BN_rshift:near	; CODE XREF: _ecdsa_do_sign+15Fp
					; _ecdsa_do_verify+1EBp
		extrn _BN_ucmp:near	; CODE XREF: _ecdsa_do_verify+115p
					; _ecdsa_do_verify+143p ...
		extrn _BN_mod_inverse:near ; CODE XREF:	_ecdsa_sign_setup+278p
					; _ecdsa_do_verify+163p
		extrn _EC_GROUP_method_of:near ; CODE XREF: _ecdsa_sign_setup+163p
					; _ecdsa_do_verify+2B4p
		extrn _EC_METHOD_get_field_type:near ; CODE XREF: _ecdsa_sign_setup+169p
					; _ecdsa_do_verify+2BAp
		extrn _EC_GROUP_get_mont_data:near ; CODE XREF:	_ecdsa_sign_setup+1DAp
					; _ecdsa_sign_setup+23Cp
		extrn _EC_GROUP_get_order:near ; CODE XREF: _ecdsa_do_sign+CAp
					; _ecdsa_sign_setup+D1p ...
		extrn _EC_POINT_new:near ; CODE	XREF: _ecdsa_sign_setup+B0p
					; _ecdsa_do_verify+250p
		extrn _EC_POINT_free:near ; CODE XREF: _ecdsa_sign_setup+36Dp
					; _ecdsa_do_verify+388p
		extrn _EC_POINT_get_affine_coordinates_GFp:near
					; CODE XREF: _ecdsa_sign_setup+184p
					; _ecdsa_do_verify+2D2p
		extrn _EC_POINT_get_affine_coordinates_GF2m:near
					; CODE XREF: _ecdsa_sign_setup:loc_4ADp
					; _ecdsa_do_verify:loc_9ACp
		extrn _EC_POINT_mul:near ; CODE	XREF: _ecdsa_sign_setup+152p
					; _ecdsa_do_verify+28Ap
		extrn _EC_KEY_get0_group:near ;	CODE XREF: _ecdsa_do_sign+35p
					; _ecdsa_sign_setup+20p ...
		extrn _EC_KEY_get0_private_key:near ; CODE XREF: _ecdsa_do_sign+41p
		extrn _EC_KEY_get0_public_key:near ; CODE XREF:	_ecdsa_do_verify+33p
		extrn _ECDSA_SIG_new:near ; CODE XREF: _ecdsa_do_sign+65p
		extrn _ECDSA_SIG_free:near ; CODE XREF:	_ecdsa_do_sign+287p
		extrn _ECDSA_sign_setup:near ; CODE XREF: _ecdsa_do_sign+1B4p
		extrn _ecdsa_check:near	; CODE XREF: _ecdsa_do_sign+2Dp
		extrn _ERR_put_error:near ; CODE XREF: _ecdsa_do_sign+27Ep
					; _ecdsa_do_sign+2F8p ...
		extrn __chkstk:near	; CODE XREF: _ecdsa_do_sign+5p
					; _ecdsa_sign_setup+5p	...


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	89D8AFC438507849434981934D9886D6
; Input	CRC32 :	C3FB44F4

; File Name   :	C:\compspace\Diff\openssl\obj\e_capi.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_rsa_sign(int, int, int, BYTE	*pbSignature, int, int)
_capi_rsa_sign	proc near		; DATA XREF: .data:00000DF8o

pdwSigLen	= dword	ptr -20h
phHash		= dword	ptr -1Ch
pbData		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
pbSignature	= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, 20h ; ' '
		call	__chkstk	; DATA XREF: _capi_open_store+47o
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+20h+var_4], eax
		mov	eax, [esp+20h+arg_4]
		push	ebx
		mov	ebx, [esp+24h+pbSignature]
		push	ebp
		push	esi
		push	edi
		mov	edi, [esp+30h+arg_14]
		or	ebp, 0FFFFFFFFh
		push	ds:_capi_idx
		mov	[esp+34h+pbData], eax
		mov	eax, [esp+34h+arg_10]
		push	dword ptr [edi+0Ch]
		mov	[esp+38h+var_14], eax

loc_3D:					; DATA XREF: .data:00000DF0o
		call	_ENGINE_get_ex_data
		push	offset ??_C@_0BI@MMFDBBCB@Called?5CAPI_rsa_sign?$CI?$CJ?6?$AA@ ; "Called CAPI_rsa_sign()\n"
		push	eax
		call	_CAPI_trace
		push	ds:_rsa_capi_idx
		push	edi
		call	_RSA_get_ex_data
		mov	esi, eax
		add	esp, 18h
		test	esi, esi
		jnz	short loc_A2

loc_62:					; DATA XREF: .data:_CAPI_str_reasonso
					; .data:00000EDCo ...
		mov	eax, ds:_CAPI_lib_error_code

loc_67:					; DATA XREF: .data:00000EF4o
					; .data:00000EFCo
		test	eax, eax

loc_69:					; DATA XREF: .data:00000F04o
					; .data:00000F0Co
		jnz	short loc_75

loc_6B:					; DATA XREF: .data:00000F14o
					; .data:00000F2Co ...
		call	_ERR_get_next_error_library

loc_70:					; DATA XREF: .data:00000F4Co
					; .data:00000F54o ...
		mov	ds:_CAPI_lib_error_code, eax

loc_75:					; CODE XREF: _capi_rsa_sign:loc_69j
					; DATA XREF: .data:00000F8Co ...
		push	332h

loc_7A:					; DATA XREF: .data:00000F64o
					; .data:00000F7Co ...
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"

loc_7F:					; DATA XREF: .data:00000FB4o
		push	65h ; 'e'
		push	70h ; 'p'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_A2:					; CODE XREF: _capi_rsa_sign+60j
		mov	eax, [esp+30h+arg_0]
		cmp	eax, 2A0h
		jg	short loc_E6
		jz	short loc_DC
		cmp	eax, 4
		jz	short loc_D2
		cmp	eax, 40h ; '@'
		jz	short loc_C8
		cmp	eax, 72h ; 'r'
		jnz	short loc_F5
		mov	eax, 8008h
		jmp	loc_167
; ---------------------------------------------------------------------------

loc_C8:					; CODE XREF: _capi_rsa_sign+B7j
					; DATA XREF: .rdata:_capi_cmd_defnso
		mov	eax, 8004h
		jmp	loc_167
; ---------------------------------------------------------------------------

loc_D2:					; CODE XREF: _capi_rsa_sign+B2j
		mov	eax, 8003h
		jmp	loc_167
; ---------------------------------------------------------------------------

loc_DC:					; CODE XREF: _capi_rsa_sign+ADj
		mov	eax, 800Ch
		jmp	loc_167
; ---------------------------------------------------------------------------

loc_E6:					; CODE XREF: _capi_rsa_sign+ABj
		mov	ecx, eax
		sub	ecx, 2A1h
		jz	short loc_162
		sub	ecx, 1
		jz	short loc_15B

loc_F5:					; CODE XREF: _capi_rsa_sign+BCj
		push	eax
		push	offset ??_C@_03OPHMLOFF@?$CFlx?$AA@ ; "%lx"
		lea	eax, [esp+38h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		mov	eax, ds:_CAPI_lib_error_code
		add	esp, 10h
		test	eax, eax
		jnz	short loc_11D
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_11D:				; CODE XREF: _capi_rsa_sign+111j
		push	352h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	77h ; 'w'
		push	70h ; 'p'
		push	eax
		call	_ERR_put_error
		lea	eax, [esp+44h+var_10]
		push	eax
		push	offset ??_C@_06DCEPLNJK@NID?$DN0x?$AA@ ; "NID=0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 20h
		or	eax, 0FFFFFFFFh
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_15B:				; CODE XREF: _capi_rsa_sign+F3j
		mov	eax, 800Eh
		jmp	short loc_167
; ---------------------------------------------------------------------------

loc_162:				; CODE XREF: _capi_rsa_sign+EEj
		mov	eax, 800Dh

loc_167:				; CODE XREF: _capi_rsa_sign+C3j
					; _capi_rsa_sign+CDj ...
		lea	ecx, [esp+30h+phHash]
		push	ecx		; phHash
		push	0		; dwFlags
		push	0		; hKey
		push	eax		; Algid
		push	dword ptr [esi+4] ; hProv
		call	dword ptr ds:__imp__CryptCreateHash@20 ; CryptCreateHash(x,x,x,x,x)
		test	eax, eax
		jnz	short loc_1EA
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_191
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_191:				; CODE XREF: _capi_rsa_sign+185j
		push	35Ah
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	63h ; 'c'
		push	70h ; 'p'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+38h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+40h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch
		or	eax, 0FFFFFFFFh
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_1EA:				; CODE XREF: _capi_rsa_sign+17Cj
		push	0		; dwFlags
		push	[esp+34h+pbData] ; pbData
		push	2		; dwParam
		push	[esp+3Ch+phHash] ; hHash
		call	dword ptr ds:__imp__CryptSetHashParam@16 ; CryptSetHashParam(x,x,x,x)
		test	eax, eax
		jnz	short loc_234
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_213
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_213:				; CODE XREF: _capi_rsa_sign+207j
		push	361h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	66h ; 'f'
		push	70h ; 'p'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	_capi_addlasterror
		jmp	$err$42
; ---------------------------------------------------------------------------

loc_234:				; CODE XREF: _capi_rsa_sign+1FEj
		push	edi
		call	_RSA_size
		add	esp, 4
		mov	[esp+30h+pdwSigLen], eax
		lea	eax, [esp+30h+pdwSigLen]
		push	eax		; pdwSigLen
		push	ebx		; pbSignature
		push	0		; dwFlags
		push	0		; szDescription
		push	dword ptr [esi+0Ch] ; dwKeySpec
		push	[esp+44h+phHash] ; hHash
		call	dword ptr ds:__imp__CryptSignHashA@24 ;	CryptSignHashA(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_279
		push	369h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Fh ; 'o'
		push	70h ; 'p'
		call	_ERR_CAPI_error
		add	esp, 10h
		call	_capi_addlasterror
		jmp	short $err$42
; ---------------------------------------------------------------------------

loc_279:				; CODE XREF: _capi_rsa_sign+25Aj
		mov	edx, [esp+30h+pdwSigLen]
		xor	esi, esi
		mov	ebp, 1
		test	edx, 0FFFFFFFEh
		jbe	short loc_2AD
		mov	edi, ebx
		xchg	ax, ax

loc_290:				; CODE XREF: _capi_rsa_sign+2ABj
		mov	al, [edi+edx-1]
		lea	edi, [edi-1]
		mov	cl, [ebx+esi]
		mov	[ebx+esi], al
		inc	esi
		mov	[edi+edx], cl
		mov	edx, [esp+30h+pdwSigLen]
		mov	eax, edx
		shr	eax, 1
		cmp	esi, eax
		jb	short loc_290

loc_2AD:				; CODE XREF: _capi_rsa_sign+28Aj
		mov	eax, [esp+30h+var_14]
		mov	[eax], edx

$err$42:				; CODE XREF: _capi_rsa_sign+22Fj
					; _capi_rsa_sign+277j
		push	[esp+30h+phHash] ; hHash
		call	dword ptr ds:__imp__CryptDestroyHash@4 ; CryptDestroyHash(x)
		mov	ecx, [esp+30h+var_4]
		mov	eax, ebp
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
_capi_rsa_sign	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_rsa_priv_enc proc	near		; DATA XREF: .data:00000DD8o
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2E7
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2E7:				; CODE XREF: _capi_rsa_priv_enc+7j
		push	31Dh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	70h ; 'p'
		push	6Fh ; 'o'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		retn
_capi_rsa_priv_enc endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 304h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_rsa_priv_dec(int, int, void *Dst, int, int)
_capi_rsa_priv_dec proc	near		; DATA XREF: .data:00000DDCo

pdwDataLen	= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
Dst		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	eax, 14h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+14h+var_4], eax
		mov	eax, [esp+14h+arg_0]
		push	ebx
		push	ebp
		mov	ebp, [esp+1Ch+Dst]
		push	esi
		mov	esi, [esp+20h+arg_C]
		push	ds:_capi_idx
		mov	[esp+24h+pdwDataLen], eax
		push	dword ptr [esi+0Ch]
		call	_ENGINE_get_ex_data
		push	offset ??_C@_0BM@PMMFFFE@Called?5capi_rsa_priv_dec?$CI?$CJ?6?$AA@ ; "Called capi_rsa_priv_dec()\n"
		push	eax
		call	_CAPI_trace
		push	ds:_rsa_capi_idx
		push	esi
		call	_RSA_get_ex_data
		mov	ebx, eax
		add	esp, 18h
		test	ebx, ebx
		jnz	short loc_399
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_36D
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_36D:				; CODE XREF: _capi_rsa_priv_dec+5Dj
		push	38Dh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	65h ; 'e'
		push	6Eh ; 'n'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_399:				; CODE XREF: _capi_rsa_priv_dec+54j
		mov	eax, [esp+20h+arg_10]
		cmp	eax, 1
		jz	short loc_407
		push	eax
		push	offset ??_C@_02DPKJAMEF@?$CFd?$AA@ ; "%d"
		lea	eax, [esp+28h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		mov	eax, ds:_CAPI_lib_error_code
		add	esp, 10h
		test	eax, eax
		jnz	short loc_3CA
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_3CA:				; CODE XREF: _capi_rsa_priv_dec+BAj
		push	394h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	78h ; 'x'
		push	6Eh ; 'n'
		push	eax
		call	_ERR_put_error
		lea	eax, [esp+34h+var_10]
		push	eax
		push	offset ??_C@_08HBCDKNAM@padding?$DN?$AA@ ; "padding="
		push	2
		call	_ERR_add_error_data
		add	esp, 20h
		or	eax, 0FFFFFFFFh
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_407:				; CODE XREF: _capi_rsa_priv_dec+9Cj
		push	39Ah
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	[esp+28h+pdwDataLen]
		call	_CRYPTO_malloc
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_462
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_436
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_436:				; CODE XREF: _capi_rsa_priv_dec+126j
		push	39Bh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	41h ; 'A'
		push	6Eh ; 'n'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_462:				; CODE XREF: _capi_rsa_priv_dec+11Dj
		mov	ecx, [esp+20h+pdwDataLen]
		xor	edx, edx
		test	ecx, ecx
		jle	short loc_487
		push	edi
		mov	edi, [esp+24h+arg_4]
		nop	dword ptr [eax]

loc_474:				; CODE XREF: _capi_rsa_priv_dec+180j
		mov	al, [edx+edi]
		sub	ecx, edx
		inc	edx
		mov	[ecx+esi-1], al
		mov	ecx, [esp+24h+pdwDataLen]
		cmp	edx, ecx
		jl	short loc_474
		pop	edi

loc_487:				; CODE XREF: _capi_rsa_priv_dec+166j
		lea	eax, [esp+20h+pdwDataLen]
		push	eax		; pdwDataLen
		push	esi		; pbData
		push	0		; dwFlags
		push	1		; Final
		push	0		; hHash
		push	dword ptr [ebx+8] ; hKey
		call	dword ptr ds:__imp__CryptDecrypt@24 ; CryptDecrypt(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_511
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_4B3
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_4B3:				; CODE XREF: _capi_rsa_priv_dec+1A3j
		push	3A3h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	69h ; 'i'
		push	6Eh ; 'n'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+28h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+30h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		push	esi
		call	_CRYPTO_free
		add	esp, 20h
		or	eax, 0FFFFFFFFh
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_511:				; CODE XREF: _capi_rsa_priv_dec+19Aj
		push	[esp+20h+pdwDataLen] ; Size
		push	esi		; Src
		push	ebp		; Dst
		call	_memcpy
		push	esi
		call	_CRYPTO_free
		mov	ecx, [esp+30h+var_4]
		add	esp, 10h
		mov	eax, [esp+20h+pdwDataLen]
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
_capi_rsa_priv_dec endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 53Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_rsa_free	proc near		; DATA XREF: .data:00000DECo

arg_0		= dword	ptr  4

		push	esi
		push	ds:_rsa_capi_idx
		push	[esp+8+arg_0]
		call	_RSA_get_ex_data
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jz	short loc_57F
		push	dword ptr [esi+8] ; hKey
		call	dword ptr ds:__imp__CryptDestroyKey@4 ;	CryptDestroyKey(x)
		push	0		; dwFlags
		push	dword ptr [esi+4] ; hProv
		call	dword ptr ds:__imp__CryptReleaseContext@8 ; CryptReleaseContext(x,x)
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_576
		push	eax		; pCertContext
		call	dword ptr ds:__imp__CertFreeCertificateContext@4 ; CertFreeCertificateContext(x)

loc_576:				; CODE XREF: _capi_rsa_free+31j
		push	esi
		call	_CRYPTO_free
		add	esp, 4

loc_57F:				; CODE XREF: _capi_rsa_free+17j
		push	0
		push	ds:_rsa_capi_idx
		push	[esp+0Ch+arg_0]
		call	_RSA_set_ex_data
		add	esp, 0Ch
		mov	eax, 1
		pop	esi
		retn
_capi_rsa_free	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 59Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_dsa_do_sign(BYTE *pbData, int, int)
_capi_dsa_do_sign proc near		; DATA XREF: .data:00000E08o

phHash		= dword	ptr -40h
pdwSigLen	= dword	ptr -3Ch
pbSignature	= byte ptr -38h
var_37		= byte ptr -37h
var_36		= byte ptr -36h
var_35		= byte ptr -35h
var_34		= byte ptr -34h
var_33		= byte ptr -33h
var_32		= byte ptr -32h
var_31		= byte ptr -31h
var_30		= byte ptr -30h
var_2F		= byte ptr -2Fh
var_2E		= byte ptr -2Eh
var_2D		= byte ptr -2Dh
var_2C		= byte ptr -2Ch
var_2B		= byte ptr -2Bh
var_2A		= byte ptr -2Ah
var_29		= byte ptr -29h
var_28		= byte ptr -28h
var_27		= byte ptr -27h
var_26		= byte ptr -26h
var_25		= byte ptr -25h
var_24		= byte ptr -24h
var_23		= byte ptr -23h
var_22		= byte ptr -22h
var_21		= byte ptr -21h
var_20		= byte ptr -20h
var_1F		= byte ptr -1Fh
var_1E		= byte ptr -1Eh
var_1D		= byte ptr -1Dh
var_1C		= byte ptr -1Ch
var_1B		= byte ptr -1Bh
var_1A		= byte ptr -1Ah
var_19		= byte ptr -19h
var_18		= byte ptr -18h
var_17		= byte ptr -17h
var_16		= byte ptr -16h
var_15		= byte ptr -15h
var_14		= byte ptr -14h
var_13		= byte ptr -13h
var_12		= byte ptr -12h
var_11		= byte ptr -11h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
pbData		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 40h ; '@'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+40h+var_4], eax
		push	ebx
		mov	ebx, [esp+44h+pbData]
		push	esi
		mov	esi, [esp+48h+arg_8]
		push	edi
		push	ds:_capi_idx
		xor	edi, edi
		push	dword ptr [esi+40h]
		call	_ENGINE_get_ex_data
		push	offset ??_C@_0BL@BFEBHFKP@Called?5CAPI_dsa_do_sign?$CI?$CJ?6?$AA@ ; "Called CAPI_dsa_do_sign()\n"
		push	eax
		call	_CAPI_trace
		push	ds:_dsa_capi_idx
		push	esi
		call	_DSA_get_ex_data
		mov	esi, eax
		add	esp, 18h
		test	esi, esi
		jnz	short loc_62A
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_5FF
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_5FF:				; CODE XREF: _capi_dsa_do_sign+57j
		push	3CBh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	65h ; 'e'
		push	72h ; 'r'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [esp+40h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 40h
		retn
; ---------------------------------------------------------------------------

loc_62A:				; CODE XREF: _capi_dsa_do_sign+4Ej
		cmp	[esp+4Ch+arg_4], 14h
		jz	short loc_66F
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_644
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_644:				; CODE XREF: _capi_dsa_do_sign+9Cj
		push	3D0h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	7Ch ; '|'
		push	72h ; 'r'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [esp+40h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 40h
		retn
; ---------------------------------------------------------------------------

loc_66F:				; CODE XREF: _capi_dsa_do_sign+93j
		lea	eax, [esp+4Ch+phHash]
		push	eax		; phHash
		push	0		; dwFlags
		push	0		; hKey
		push	8004h		; Algid
		push	dword ptr [esi+4] ; hProv
		call	dword ptr ds:__imp__CryptCreateHash@20 ; CryptCreateHash(x,x,x,x,x)
		test	eax, eax
		jnz	short loc_6F4
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_69D
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_69D:				; CODE XREF: _capi_dsa_do_sign+F5j
		push	3D6h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	63h ; 'c'
		push	72h ; 'r'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+54h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+5Ch+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [esp+40h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 40h
		retn
; ---------------------------------------------------------------------------

loc_6F4:				; CODE XREF: _capi_dsa_do_sign+ECj
		push	0		; dwFlags
		push	ebx		; pbData
		push	2		; dwParam
		push	[esp+58h+phHash] ; hHash
		call	dword ptr ds:__imp__CryptSetHashParam@16 ; CryptSetHashParam(x,x,x,x)
		test	eax, eax
		jnz	short loc_73B
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_71A
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_71A:				; CODE XREF: _capi_dsa_do_sign+172j
		push	3DDh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	66h ; 'f'
		push	72h ; 'r'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	_capi_addlasterror
		jmp	$err$72
; ---------------------------------------------------------------------------

loc_73B:				; CODE XREF: _capi_dsa_do_sign+169j
		lea	eax, [esp+4Ch+pdwSigLen]
		mov	[esp+4Ch+pdwSigLen], 28h ; '('
		push	eax		; pdwSigLen
		lea	eax, [esp+50h+pbSignature]
		push	eax		; pbSignature
		push	0		; dwFlags
		push	0		; szDescription
		push	dword ptr [esi+0Ch] ; dwKeySpec
		push	[esp+60h+phHash] ; hHash
		call	dword ptr ds:__imp__CryptSignHashA@24 ;	CryptSignHashA(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_782
		push	3E5h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Fh ; 'o'
		push	72h ; 'r'
		call	_ERR_CAPI_error
		add	esp, 10h
		call	_capi_addlasterror
		jmp	$err$72
; ---------------------------------------------------------------------------

loc_782:				; CODE XREF: _capi_dsa_do_sign+1C4j
		call	_DSA_SIG_new
		mov	edi, eax
		test	edi, edi
		jz	$err$72
		call	_BN_new
		mov	[edi], eax
		call	_BN_new
		mov	edx, [edi]
		mov	[edi+4], eax
		test	edx, edx
		jz	$err$72
		test	eax, eax
		jz	$err$72
		movzx	eax, [esp+4Ch+var_25]
		mov	cl, [esp+4Ch+pbSignature]
		mov	[esp+4Ch+pbSignature], al
		movzx	eax, [esp+4Ch+var_26]
		mov	[esp+4Ch+var_25], cl
		mov	cl, [esp+4Ch+var_37]
		mov	[esp+4Ch+var_37], al
		movzx	eax, [esp+4Ch+var_27]
		mov	[esp+4Ch+var_26], cl
		mov	cl, [esp+4Ch+var_36]
		mov	[esp+4Ch+var_36], al
		movzx	eax, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_27], cl
		mov	cl, [esp+4Ch+var_35]
		mov	[esp+4Ch+var_35], al
		movzx	eax, [esp+4Ch+var_29]
		mov	[esp+4Ch+var_28], cl
		mov	cl, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_34], al
		movzx	eax, [esp+4Ch+var_2A]
		mov	[esp+4Ch+var_29], cl
		mov	cl, [esp+4Ch+var_33]
		mov	[esp+4Ch+var_33], al
		movzx	eax, [esp+4Ch+var_2B]
		mov	[esp+4Ch+var_2A], cl
		mov	cl, [esp+4Ch+var_32]
		mov	[esp+4Ch+var_32], al
		movzx	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_2B], cl
		mov	cl, [esp+4Ch+var_31]
		mov	[esp+4Ch+var_31], al
		movzx	eax, [esp+4Ch+var_2D]
		mov	[esp+4Ch+var_2C], cl
		mov	cl, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_30], al
		movzx	eax, [esp+4Ch+var_2E]
		mov	[esp+4Ch+var_2D], cl
		mov	cl, [esp+4Ch+var_2F]
		push	edx
		mov	[esp+50h+var_2F], al
		lea	eax, [esp+50h+pbSignature]
		push	14h
		push	eax
		mov	[esp+58h+var_2E], cl
		call	_BN_bin2bn
		add	esp, 0Ch
		test	eax, eax
		jz	loc_935
		mov	edx, [edi+4]
		movzx	eax, [esp+4Ch+var_11]
		mov	cl, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_24], al
		movzx	eax, [esp+4Ch+var_12]
		mov	[esp+4Ch+var_11], cl
		mov	cl, [esp+4Ch+var_23]
		mov	[esp+4Ch+var_23], al
		movzx	eax, [esp+4Ch+var_13]
		mov	[esp+4Ch+var_12], cl
		mov	cl, [esp+4Ch+var_22]
		mov	[esp+4Ch+var_22], al
		movzx	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_13], cl
		mov	cl, [esp+4Ch+var_21]
		mov	[esp+4Ch+var_21], al
		movzx	eax, [esp+4Ch+var_15]
		mov	[esp+4Ch+var_14], cl
		mov	cl, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_20], al
		movzx	eax, [esp+4Ch+var_16]
		mov	[esp+4Ch+var_15], cl
		mov	cl, [esp+4Ch+var_1F]
		mov	[esp+4Ch+var_1F], al
		movzx	eax, [esp+4Ch+var_17]
		mov	[esp+4Ch+var_16], cl
		mov	cl, [esp+4Ch+var_1E]
		mov	[esp+4Ch+var_1E], al
		movzx	eax, [esp+4Ch+var_18]
		mov	[esp+4Ch+var_17], cl
		mov	cl, [esp+4Ch+var_1D]
		mov	[esp+4Ch+var_1D], al
		movzx	eax, [esp+4Ch+var_19]
		mov	[esp+4Ch+var_18], cl
		mov	cl, [esp+4Ch+var_1C]
		mov	[esp+4Ch+var_1C], al
		movzx	eax, [esp+4Ch+var_1A]
		mov	[esp+4Ch+var_19], cl
		mov	cl, [esp+4Ch+var_1B]
		push	edx
		mov	[esp+50h+var_1B], al
		lea	eax, [esp+50h+var_24]
		push	14h
		push	eax
		mov	[esp+58h+var_1A], cl
		call	_BN_bin2bn
		add	esp, 0Ch
		test	eax, eax
		jnz	short $err$72

loc_935:				; CODE XREF: _capi_dsa_do_sign+2D2j
		push	edi
		call	_DSA_SIG_free
		add	esp, 4
		xor	edi, edi

$err$72:				; CODE XREF: _capi_dsa_do_sign+19Aj
					; _capi_dsa_do_sign+1E1j ...
		lea	eax, [esp+4Ch+pbSignature]
		push	28h ; '('
		push	eax
		call	_OPENSSL_cleanse
		add	esp, 8
		push	[esp+4Ch+phHash] ; hHash
		call	dword ptr ds:__imp__CryptDestroyHash@4 ; CryptDestroyHash(x)
		mov	ecx, [esp+4Ch+var_4]
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 40h
		retn
_capi_dsa_do_sign endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 970h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_dsa_free	proc near		; DATA XREF: .data:00000E20o

arg_0		= dword	ptr  4

		push	esi
		push	ds:_dsa_capi_idx
		push	[esp+8+arg_0]
		call	_DSA_get_ex_data
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jz	short loc_9B3
		push	dword ptr [esi+8] ; hKey
		call	dword ptr ds:__imp__CryptDestroyKey@4 ;	CryptDestroyKey(x)
		push	0		; dwFlags
		push	dword ptr [esi+4] ; hProv
		call	dword ptr ds:__imp__CryptReleaseContext@8 ; CryptReleaseContext(x,x)
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_9AA
		push	eax		; pCertContext
		call	dword ptr ds:__imp__CertFreeCertificateContext@4 ; CertFreeCertificateContext(x)

loc_9AA:				; CODE XREF: _capi_dsa_free+31j
		push	esi
		call	_CRYPTO_free
		add	esp, 4

loc_9B3:				; CODE XREF: _capi_dsa_free+17j
		push	0
		push	ds:_dsa_capi_idx
		push	[esp+0Ch+arg_0]
		call	_DSA_set_ex_data
		add	esp, 0Ch
		mov	eax, 1
		pop	esi
		retn
_capi_dsa_free	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 9D0h
_capi_cmd_defns	dd offset loc_C8	; DATA XREF: _bind_capi+CCo
		dd offset ??_C@_0L@JOIDJLBF@list_certs?$AA@ ; "list_certs"
		dd offset ??_C@_0BP@JJOKICOA@List?5all?5certificates?5in?5store?$AA@ ; "List all certificates in store"
		dd 4, 0C9h
		dd offset ??_C@_0M@KPMIMFPO@lookup_cert?$AA@ ; "lookup_cert"
		dd offset ??_C@_0BP@FMONLPIF@Lookup?5and?5output?5certificates?$AA@ ; "Lookup and output certificates"
		dd 2, 0CAh
		dd offset ??_C@_0M@JIMNDIK@debug_level?$AA@ ; "debug_level"
		dd offset ??_C@_0CA@IMMBGOLG@debug?5level?5?$CI1?$DNerrors?0?52?$DNtrace?$CJ?$AA@ ; "debug level (1=errors, 2=trace)"
		dd 1, 0CBh
		dd offset ??_C@_0L@GPEMANMA@debug_file?$AA@ ; "debug_file"
		dd offset ??_C@_0BE@IAMGGGBH@debugging?5filename?$CJ?$AA@ ; "debugging filename)"
		dd 2, 0CCh
		dd offset ??_C@_08INPNCLIG@key_type?$AA@ ; "key_type"
		dd offset ??_C@_0DF@BEKHNIPC@Key?5type?3?51?$DNAT_KEYEXCHANGE?5?$CIdefa@ ; "Key	type: 1=AT_KEYEXCHANGE (default), 2"...
		dd 1, 0CDh
		dd offset ??_C@_09BHLFNMGL@list_csps?$AA@ ; "list_csps"
		dd offset ??_C@_0O@LHLPMEBD@List?5all?5CSPs?$AA@ ; "List all CSPs"
		dd 4, 0CEh
		dd offset ??_C@_07EGEODACI@csp_idx?$AA@	; "csp_idx"
		dd offset ??_C@_0BB@ELPAICHO@Set?5CSP?5by?5index?$AA@ ;	"Set CSP by index"
		dd 1, 0CFh
		dd offset ??_C@_08LCGKDEJB@csp_name?$AA@ ; "csp_name"
		dd offset ??_C@_0DC@BHKJMNNP@Set?5CSP?5name?0?5?$CIdefault?5CSP?5used?5@ ; "Set	CSP name, (default CSP used if not "...
		dd 2, 0D0h
		dd offset ??_C@_08BJGJPEOB@csp_type?$AA@ ; "csp_type"
		dd offset ??_C@_0CG@CAJNJLFN@Set?5CSP?5type?0?5?$CIdefault?5RSA_PROV_@ ; "Set CSP type,	(default RSA_PROV_FULL)"
		dd 1, 0D1h
		dd offset ??_C@_0BA@DFABNGNF@list_containers?$AA@ ; "list_containers"
		dd offset ??_C@_0BF@EEDMIMJG@list?5container?5names?$AA@ ; "list container names"
		dd 4, 0D2h
		dd offset ??_C@_0N@CAJMAAGL@list_options?$AA@ ;	"list_options"
		dd offset ??_C@_0GJ@EMOMDOAL@Set?5list?5options?5?$CI1?$DNsummary?02?$DNfr@ ; "Set list	options	(1=summary,2=friendly "...
		dd 1, 0D3h
		dd offset ??_C@_0O@OGJLBBKA@lookup_method?$AA@ ; "lookup_method"
		dd offset ??_C@_0EG@OFKBMBBJ@Set?5key?5lookup?5method?5?$CI1?$DNsubstri@ ; "Set	key lookup method (1=substring,	2=f"...
		dd 1, 0D4h
		dd offset ??_C@_0L@LIPOMACA@store_name?$AA@ ; "store_name"
		dd offset ??_C@_0CF@EIKHKIMF@certificate?5store?5name?0?5default?5@ ; "certificate store name, default \"MY\""
		dd 2, 0D5h
		dd offset ??_C@_0M@GCFFNJDH@store_flags?$AA@ ; "store_flags"
		dd offset ??_C@_0CK@CDGKHEHE@Certificate?5store?5flags?3?51?5?$DN?5sys@	; "Certificate store flags: 1 =	system sto"...
		dd 1, 4	dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AC0h
; COMDAT (pick any)
		public ??_C@_0L@JOIDJLBF@list_certs?$AA@
; `string'
??_C@_0L@JOIDJLBF@list_certs?$AA@ db 'list_certs',0 ; DATA XREF: .rdata:000009D4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACCh
; COMDAT (pick any)
		public ??_C@_0BP@JJOKICOA@List?5all?5certificates?5in?5store?$AA@
; `string'
??_C@_0BP@JJOKICOA@List?5all?5certificates?5in?5store?$AA@ db 'List all certificates in store',0
					; DATA XREF: .rdata:000009D8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AECh
; COMDAT (pick any)
		public ??_C@_0M@KPMIMFPO@lookup_cert?$AA@
; `string'
??_C@_0M@KPMIMFPO@lookup_cert?$AA@ db 'lookup_cert',0 ; DATA XREF: .rdata:000009E4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AF8h
; COMDAT (pick any)
		public ??_C@_0BP@FMONLPIF@Lookup?5and?5output?5certificates?$AA@
; `string'
??_C@_0BP@FMONLPIF@Lookup?5and?5output?5certificates?$AA@ db 'Lookup and output certificates',0
					; DATA XREF: .rdata:000009E8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B18h
; COMDAT (pick any)
		public ??_C@_0M@JIMNDIK@debug_level?$AA@
; `string'
??_C@_0M@JIMNDIK@debug_level?$AA@ db 'debug_level',0 ; DATA XREF: .rdata:000009F4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B24h
; COMDAT (pick any)
		public ??_C@_0CA@IMMBGOLG@debug?5level?5?$CI1?$DNerrors?0?52?$DNtrace?$CJ?$AA@
; `string'
??_C@_0CA@IMMBGOLG@debug?5level?5?$CI1?$DNerrors?0?52?$DNtrace?$CJ?$AA@	db 'debug level (1=errors, 2=trace)',0
					; DATA XREF: .rdata:000009F8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B44h
; COMDAT (pick any)
		public ??_C@_0L@GPEMANMA@debug_file?$AA@
; `string'
??_C@_0L@GPEMANMA@debug_file?$AA@ db 'debug_file',0 ; DATA XREF: .rdata:00000A04o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B50h
; COMDAT (pick any)
		public ??_C@_0BE@IAMGGGBH@debugging?5filename?$CJ?$AA@
; `string'
??_C@_0BE@IAMGGGBH@debugging?5filename?$CJ?$AA@	db 'debugging filename)',0
					; DATA XREF: .rdata:00000A08o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B64h
; COMDAT (pick any)
		public ??_C@_08INPNCLIG@key_type?$AA@
; `string'
??_C@_08INPNCLIG@key_type?$AA@ db 'key_type',0 ; DATA XREF: .rdata:00000A14o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B70h
; COMDAT (pick any)
		public ??_C@_0DF@BEKHNIPC@Key?5type?3?51?$DNAT_KEYEXCHANGE?5?$CIdefa@
; `string'
??_C@_0DF@BEKHNIPC@Key?5type?3?51?$DNAT_KEYEXCHANGE?5?$CIdefa@ db 'Key type: 1=AT_KEYEXCHANGE (default), 2=AT_SIGNATURE',0
					; DATA XREF: .rdata:00000A18o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA8h
; COMDAT (pick any)
		public ??_C@_09BHLFNMGL@list_csps?$AA@
; `string'
??_C@_09BHLFNMGL@list_csps?$AA@	db 'list_csps',0 ; DATA XREF: .rdata:00000A24o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BB4h
; COMDAT (pick any)
		public ??_C@_0O@LHLPMEBD@List?5all?5CSPs?$AA@
; `string'
??_C@_0O@LHLPMEBD@List?5all?5CSPs?$AA@ db 'List all CSPs',0 ; DATA XREF: .rdata:00000A28o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BC4h
; COMDAT (pick any)
		public ??_C@_07EGEODACI@csp_idx?$AA@
; `string'
??_C@_07EGEODACI@csp_idx?$AA@ db 'csp_idx',0 ; DATA XREF: .rdata:00000A34o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCCh
; COMDAT (pick any)
		public ??_C@_0BB@ELPAICHO@Set?5CSP?5by?5index?$AA@
; `string'
??_C@_0BB@ELPAICHO@Set?5CSP?5by?5index?$AA@ db 'Set CSP by index',0
					; DATA XREF: .rdata:00000A38o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BE0h
; COMDAT (pick any)
		public ??_C@_08LCGKDEJB@csp_name?$AA@
; `string'
??_C@_08LCGKDEJB@csp_name?$AA@ db 'csp_name',0 ; DATA XREF: .rdata:00000A44o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BECh
; COMDAT (pick any)
		public ??_C@_0DC@BHKJMNNP@Set?5CSP?5name?0?5?$CIdefault?5CSP?5used?5@
; `string'
??_C@_0DC@BHKJMNNP@Set?5CSP?5name?0?5?$CIdefault?5CSP?5used?5@ db 'Set CSP name, (default CSP used if not specified)',0
					; DATA XREF: .rdata:00000A48o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C20h
; COMDAT (pick any)
		public ??_C@_08BJGJPEOB@csp_type?$AA@
; `string'
??_C@_08BJGJPEOB@csp_type?$AA@ db 'csp_type',0 ; DATA XREF: .rdata:00000A54o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C2Ch
; COMDAT (pick any)
		public ??_C@_0CG@CAJNJLFN@Set?5CSP?5type?0?5?$CIdefault?5RSA_PROV_@
; `string'
??_C@_0CG@CAJNJLFN@Set?5CSP?5type?0?5?$CIdefault?5RSA_PROV_@ db	'Set CSP type, (default RSA_PROV_FULL)',0
					; DATA XREF: .rdata:00000A58o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C54h
; COMDAT (pick any)
		public ??_C@_0BA@DFABNGNF@list_containers?$AA@
; `string'
??_C@_0BA@DFABNGNF@list_containers?$AA@	db 'list_containers',0 ; DATA XREF: .rdata:00000A64o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C64h
; COMDAT (pick any)
		public ??_C@_0BF@EEDMIMJG@list?5container?5names?$AA@
; `string'
??_C@_0BF@EEDMIMJG@list?5container?5names?$AA@ db 'list container names',0
					; DATA XREF: .rdata:00000A68o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C7Ch
; COMDAT (pick any)
		public ??_C@_0N@CAJMAAGL@list_options?$AA@
; `string'
??_C@_0N@CAJMAAGL@list_options?$AA@ db 'list_options',0 ; DATA XREF: .rdata:00000A74o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0C8Ch
; COMDAT (pick any)
		public ??_C@_0GJ@EMOMDOAL@Set?5list?5options?5?$CI1?$DNsummary?02?$DNfr@
; `string'
??_C@_0GJ@EMOMDOAL@Set?5list?5options?5?$CI1?$DNsummary?02?$DNfr@ db 'Set list options (1=summary,2=friendly name, 4=full printout, 8=P'
					; DATA XREF: .rdata:00000A78o
		db 'EM output, 16=XXX, 32=private key info)',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CF8h
; COMDAT (pick any)
		public ??_C@_0O@OGJLBBKA@lookup_method?$AA@
; `string'
??_C@_0O@OGJLBBKA@lookup_method?$AA@ db	'lookup_method',0 ; DATA XREF: .rdata:00000A84o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0D08h
; COMDAT (pick any)
		public ??_C@_0EG@OFKBMBBJ@Set?5key?5lookup?5method?5?$CI1?$DNsubstri@
; `string'
??_C@_0EG@OFKBMBBJ@Set?5key?5lookup?5method?5?$CI1?$DNsubstri@ db 'Set key lookup method (1=substring, 2=friendlyname, 3=container n'
					; DATA XREF: .rdata:00000A88o
		db 'ame)',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D50h
; COMDAT (pick any)
		public ??_C@_0L@LIPOMACA@store_name?$AA@
; `string'
??_C@_0L@LIPOMACA@store_name?$AA@ db 'store_name',0 ; DATA XREF: .rdata:00000A94o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D5Ch
; COMDAT (pick any)
		public ??_C@_0CF@EIKHKIMF@certificate?5store?5name?0?5default?5@
; `string'
??_C@_0CF@EIKHKIMF@certificate?5store?5name?0?5default?5@ db 'certificate store name, default "MY"',0
					; DATA XREF: .rdata:00000A98o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D84h
; COMDAT (pick any)
		public ??_C@_0M@GCFFNJDH@store_flags?$AA@
; `string'
??_C@_0M@GCFFNJDH@store_flags?$AA@ db 'store_flags',0 ; DATA XREF: .rdata:00000AA4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D90h
; COMDAT (pick any)
		public ??_C@_0CK@CDGKHEHE@Certificate?5store?5flags?3?51?5?$DN?5sys@
; `string'
??_C@_0CK@CDGKHEHE@Certificate?5store?5flags?3?51?5?$DN?5sys@ db 'Certificate store flags: 1 = system store',0
					; DATA XREF: .rdata:00000AA8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 0DBCh
_capi_idx	dd 0FFFFFFFFh		; DATA XREF: _capi_rsa_sign+28r
					; _capi_rsa_priv_dec+24r ...
_rsa_capi_idx	dd 0FFFFFFFFh		; DATA XREF: _capi_rsa_sign+4Dr
					; _capi_rsa_priv_dec+41r ...
_dsa_capi_idx	dd 0FFFFFFFFh		; DATA XREF: _capi_dsa_do_sign+3Br
					; _capi_dsa_free+1r ...
_cert_capi_idx	dd 0FFFFFFFFh		; DATA XREF: _capi_init+45w
					; _capi_load_ssl_client_cert+F0r ...
_capi_rsa_method dd offset ??_C@_0BF@MNDEHMOO@CryptoAPI?5RSA?5method?$AA@
					; DATA XREF: _bind_capi+84o
					; "CryptoAPI RSA method"
dword_DD0	dd 0			; DATA XREF: _capi_init+62w
dword_DD4	dd 0			; DATA XREF: _capi_init+6Bw
		dd offset _capi_rsa_priv_enc
		dd offset _capi_rsa_priv_dec
dword_DE0	dd 0			; DATA XREF: _capi_init+74w
dword_DE4	dd 0			; DATA XREF: _capi_init+81w
		dd 0
		dd offset _capi_rsa_free
		dd offset loc_3D+3
		dd 0
		dd offset _capi_rsa_sign
		dd 2 dup(0)
_capi_dsa_method dd offset ??_C@_0BF@ILHHHCGG@CryptoAPI?5DSA?5method?$AA@
					; DATA XREF: _bind_capi+96o
					; "CryptoAPI DSA method"
		dd offset _capi_dsa_do_sign
		align 10h
dword_E10	dd 0			; DATA XREF: _capi_init+9Bw
dword_E14	dd 0			; DATA XREF: _capi_init+A4w
dword_E18	dd 0			; DATA XREF: _capi_init+ADw
		align 10h
		dd offset _capi_dsa_free
		dd 4 dup(0)
_CAPI_str_functs dd 63000h		; DATA XREF: _ERR_load_CAPI_strings+1Co
					; _ERR_unload_CAPI_strings+9o ...
		dd offset ??_C@_0BE@LJDJGOMD@CAPI_CERT_GET_FNAME?$AA@ ;	"CAPI_CERT_GET_FNAME"
		dd 64000h
		dd offset ??_C@_09LBLEAFJL@CAPI_CTRL?$AA@ ; "CAPI_CTRL"
		dd 65000h
		dd offset ??_C@_0N@DOIGLBPC@CAPI_CTX_NEW?$AA@ ;	"CAPI_CTX_NEW"
		dd 66000h
		dd offset ??_C@_0BG@GJNONOEE@CAPI_CTX_SET_PROVNAME?$AA@	; "CAPI_CTX_SET_PROVNAME"
		dd 72000h
		dd offset ??_C@_0BB@JJDAKEMK@CAPI_DSA_DO_SIGN?$AA@ ; "CAPI_DSA_DO_SIGN"
		dd 67000h
		dd offset ??_C@_0N@KFPKDFLF@CAPI_GET_KEY?$AA@ ;	"CAPI_GET_KEY"
		dd 73000h
		dd offset ??_C@_0O@DCAENAJP@CAPI_GET_PKEY?$AA@ ; "CAPI_GET_PKEY"
		dd 68000h
		dd offset ??_C@_0BC@MDOEOLHO@CAPI_GET_PROVNAME?$AA@ ; "CAPI_GET_PROVNAME"
		dd 69000h
		dd offset ??_C@_0BD@CIJGGAFC@CAPI_GET_PROV_INFO?$AA@ ; "CAPI_GET_PROV_INFO"
		dd 6A000h
		dd offset ??_C@_09FGMIHOAJ@CAPI_INIT?$AA@ ; "CAPI_INIT"
		dd 6B000h
		dd offset ??_C@_0BF@IAACLIFE@CAPI_LIST_CONTAINERS?$AA@ ; "CAPI_LIST_CONTAINERS"
		dd 6C000h
		dd offset ??_C@_0BC@HAKJBLAE@CAPI_LOAD_PRIVKEY?$AA@ ; "CAPI_LOAD_PRIVKEY"
		dd 6D000h
		dd offset ??_C@_0BA@NDONLNJL@CAPI_OPEN_STORE?$AA@ ; "CAPI_OPEN_STORE"
		dd 6E000h
		dd offset ??_C@_0BC@HIPFDCG@CAPI_RSA_PRIV_DEC?$AA@ ; "CAPI_RSA_PRIV_DEC"
		dd 6F000h
		dd offset ??_C@_0BC@LDGGNLKC@CAPI_RSA_PRIV_ENC?$AA@ ; "CAPI_RSA_PRIV_ENC"
		dd 70000h
		dd offset ??_C@_0O@LAMPLOMH@CAPI_RSA_SIGN?$AA@ ; "CAPI_RSA_SIGN"
		dd 75000h
		dd offset ??_C@_0BD@JKLLMDII@CERT_SELECT_DIALOG?$AA@ ; "CERT_SELECT_DIALOG"
		dd 74000h
		dd offset ??_C@_0BD@BMAOPDMH@CLIENT_CERT_SELECT?$AA@ ; "CLIENT_CERT_SELECT"
		dd 71000h
		dd offset ??_C@_0M@OLEPDDPB@WIDE_TO_ASC?$AA@ ; "WIDE_TO_ASC"
		dd 2 dup(0)
_CAPI_str_reasons dd offset loc_62+1	; DATA XREF: _ERR_load_CAPI_strings+31o
					; _ERR_unload_CAPI_strings+19o	...
		dd offset ??_C@_0BI@JADEMKHF@cant?5create?5hash?5object?$AA@ ; "cant create hash object"
		dd offset loc_62+2
		dd offset ??_C@_0BH@ILAFMDD@cant?5find?5capi?5context?$AA@ ; "cant find	capi context"
		dd offset loc_62+3
		dd offset ??_C@_0N@IBKACELA@cant?5get?5key?$AA@	; "cant	get key"
		dd offset loc_62+4
		dd offset ??_C@_0BE@NMGJLPNA@cant?5set?5hash?5value?$AA@ ; "cant set hash value"
		dd offset loc_67
		dd offset ??_C@_0BK@CDEMKLNC@cryptacquirecontext?5error?$AA@ ; "cryptacquirecontext error"
		dd offset loc_67+1
		dd offset ??_C@_0BJ@JMDJNPM@cryptenumproviders?5error?$AA@ ; "cryptenumproviders error"
		dd offset loc_69
		dd offset ??_C@_0O@IKMKDME@decrypt?5error?$AA@ ; "decrypt error"
		dd offset loc_69+1
		dd offset ??_C@_0BH@KNHLLBNO@engine?5not?5initialized?$AA@ ; "engine not initialized"
		dd offset loc_6B
		dd offset ??_C@_0BF@NLCJHDAG@enumcontainers?5error?$AA@	; "enumcontainers error"
		dd offset loc_7A+3
		dd offset ??_C@_0BC@OEPEHCDE@error?5adding?5cert?$AA@ ;	"error adding cert"
		dd offset loc_7A+4
		dd offset ??_C@_0BF@FIIIDOII@error?5creating?5store?$AA@ ; "error creating store"
		dd offset loc_6B+1
		dd offset ??_C@_0BM@JHGPLFKA@error?5getting?5friendly?5name?$AA@ ; "error getting friendly name"
		dd offset loc_6B+2
		dd offset ??_C@_0CA@NIECDJBJ@error?5getting?5key?5provider?5info?$AA@ ;	"error getting key provider info"
		dd offset loc_6B+3
		dd offset ??_C@_0BE@ICHGCJGF@error?5opening?5store?$AA@	; "error opening store"
		dd offset loc_6B+4
		dd offset ??_C@_0BD@HBIDOBPN@error?5signing?5hash?$AA@ ; "error	signing	hash"
		dd offset loc_70
		dd offset ??_C@_0BH@KEFGLDAF@function?5not?5supported?$AA@ ; "function not supported"
		dd offset loc_70+1
		dd offset ??_C@_0BB@NCNMKNGC@getuserkey?5error?$AA@ ; "getuserkey error"
		dd offset loc_7A+2
		dd offset ??_C@_0BG@DCMIKGHM@invalid?5digest?5length?$AA@ ; "invalid digest length"
		dd offset loc_7A
		dd offset ??_C@_0CJ@CLKDMANL@invalid?5dsa?5public?5key?5blob?5magi@ ; "invalid dsa public key blob magic numbe"...
		dd offset loc_70+2
		dd offset ??_C@_0BG@MNHOIMHI@invalid?5lookup?5method?$AA@ ; "invalid lookup method"
		dd offset loc_70+3
		dd offset ??_C@_0BI@ENKNHDBN@invalid?5public?5key?5blob?$AA@ ; "invalid	public key blob"
		dd offset loc_7A+1
		dd offset ??_C@_0CJ@EEEHKBED@invalid?5rsa?5public?5key?5blob?5magi@ ; "invalid rsa public key blob magic numbe"...
		dd offset loc_70+4
		dd offset ??_C@_0BE@DBLHBKFP@pubkey?5export?5error?$AA@	; "pubkey export error"
		dd offset loc_75
		dd offset ??_C@_0BL@COLIMCCA@pubkey?5export?5length?5error?$AA@	; "pubkey export length	error"
		dd offset loc_75+1
		dd offset ??_C@_0BA@NINGALLD@unknown?5command?$AA@ ; "unknown command"
		dd offset loc_75+2
		dd offset ??_C@_0BK@IOKKIEIH@unsupported?5algorithm?5nid?$AA@ ;	"unsupported algorithm nid"
		dd offset loc_75+3
		dd offset ??_C@_0BE@INBDNMBE@unsupported?5padding?$AA@ ; "unsupported padding"
		dd offset loc_75+4
		dd offset ??_C@_0CB@BJBHCHCD@unsupported?5public?5key?5algorithm@ ; "unsupported public	key algorithm"
		dd offset loc_7F
		dd offset ??_C@_0M@GLDJIOCG@win32?5error?$AA@ ;	"win32 error"
		dd 2 dup(0)
_CAPI_error_init dd 1			; DATA XREF: _ERR_load_CAPI_strings:loc_14C3r
					; _ERR_load_CAPI_strings+22w ...
_engine_capi_id	dd offset ??_C@_04IEBLCNKH@capi?$AA@ ; DATA XREF: _bind_capi+1r
					; _bind_engine+75r ...
					; "capi"
_engine_capi_name dd offset ??_C@_0BB@CHPBBDGO@CryptoAPI?5ENGINE?$AA@
					; DATA XREF: _bind_capi+1Cr
_data		ends			; "CryptoAPI ENGINE"

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FD0h
; COMDAT (pick any)
		public ??_C@_0BF@MNDEHMOO@CryptoAPI?5RSA?5method?$AA@
; `string'
??_C@_0BF@MNDEHMOO@CryptoAPI?5RSA?5method?$AA@ db 'CryptoAPI RSA method',0
					; DATA XREF: .data:_capi_rsa_methodo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FE8h
; COMDAT (pick any)
		public ??_C@_0BF@ILHHHCGG@CryptoAPI?5DSA?5method?$AA@
; `string'
??_C@_0BF@ILHHHCGG@CryptoAPI?5DSA?5method?$AA@ db 'CryptoAPI DSA method',0
					; DATA XREF: .data:_capi_dsa_methodo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1000h
; COMDAT (pick any)
		public ??_C@_0BE@LJDJGOMD@CAPI_CERT_GET_FNAME?$AA@
; `string'
??_C@_0BE@LJDJGOMD@CAPI_CERT_GET_FNAME?$AA@ db 'CAPI_CERT_GET_FNAME',0
					; DATA XREF: .data:00000E38o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1014h
; COMDAT (pick any)
		public ??_C@_09LBLEAFJL@CAPI_CTRL?$AA@
; `string'
??_C@_09LBLEAFJL@CAPI_CTRL?$AA@	db 'CAPI_CTRL',0 ; DATA XREF: .data:00000E40o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1020h
; COMDAT (pick any)
		public ??_C@_0N@DOIGLBPC@CAPI_CTX_NEW?$AA@
; `string'
??_C@_0N@DOIGLBPC@CAPI_CTX_NEW?$AA@ db 'CAPI_CTX_NEW',0 ; DATA XREF: .data:00000E48o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1030h
; COMDAT (pick any)
		public ??_C@_0BG@GJNONOEE@CAPI_CTX_SET_PROVNAME?$AA@
; `string'
??_C@_0BG@GJNONOEE@CAPI_CTX_SET_PROVNAME?$AA@ db 'CAPI_CTX_SET_PROVNAME',0
					; DATA XREF: .data:00000E50o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1048h
; COMDAT (pick any)
		public ??_C@_0BB@JJDAKEMK@CAPI_DSA_DO_SIGN?$AA@
; `string'
??_C@_0BB@JJDAKEMK@CAPI_DSA_DO_SIGN?$AA@ db 'CAPI_DSA_DO_SIGN',0
					; DATA XREF: .data:00000E58o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 105Ch
; COMDAT (pick any)
		public ??_C@_0N@KFPKDFLF@CAPI_GET_KEY?$AA@
; `string'
??_C@_0N@KFPKDFLF@CAPI_GET_KEY?$AA@ db 'CAPI_GET_KEY',0 ; DATA XREF: .data:00000E60o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 106Ch
; COMDAT (pick any)
		public ??_C@_0O@DCAENAJP@CAPI_GET_PKEY?$AA@
; `string'
??_C@_0O@DCAENAJP@CAPI_GET_PKEY?$AA@ db	'CAPI_GET_PKEY',0 ; DATA XREF: .data:00000E68o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 107Ch
; COMDAT (pick any)
		public ??_C@_0BC@MDOEOLHO@CAPI_GET_PROVNAME?$AA@
; `string'
??_C@_0BC@MDOEOLHO@CAPI_GET_PROVNAME?$AA@ db 'CAPI_GET_PROVNAME',0
					; DATA XREF: .data:00000E70o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1090h
; COMDAT (pick any)
		public ??_C@_0BD@CIJGGAFC@CAPI_GET_PROV_INFO?$AA@
; `string'
??_C@_0BD@CIJGGAFC@CAPI_GET_PROV_INFO?$AA@ db 'CAPI_GET_PROV_INFO',0
					; DATA XREF: .data:00000E78o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10A4h
; COMDAT (pick any)
		public ??_C@_09FGMIHOAJ@CAPI_INIT?$AA@
; `string'
??_C@_09FGMIHOAJ@CAPI_INIT?$AA@	db 'CAPI_INIT',0 ; DATA XREF: .data:00000E80o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10B0h
; COMDAT (pick any)
		public ??_C@_0BF@IAACLIFE@CAPI_LIST_CONTAINERS?$AA@
; `string'
??_C@_0BF@IAACLIFE@CAPI_LIST_CONTAINERS?$AA@ db	'CAPI_LIST_CONTAINERS',0
					; DATA XREF: .data:00000E88o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10C8h
; COMDAT (pick any)
		public ??_C@_0BC@HAKJBLAE@CAPI_LOAD_PRIVKEY?$AA@
; `string'
??_C@_0BC@HAKJBLAE@CAPI_LOAD_PRIVKEY?$AA@ db 'CAPI_LOAD_PRIVKEY',0
					; DATA XREF: .data:00000E90o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10DCh
; COMDAT (pick any)
		public ??_C@_0BA@NDONLNJL@CAPI_OPEN_STORE?$AA@
; `string'
??_C@_0BA@NDONLNJL@CAPI_OPEN_STORE?$AA@	db 'CAPI_OPEN_STORE',0 ; DATA XREF: .data:00000E98o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10ECh
; COMDAT (pick any)
		public ??_C@_0BC@HIPFDCG@CAPI_RSA_PRIV_DEC?$AA@
; `string'
??_C@_0BC@HIPFDCG@CAPI_RSA_PRIV_DEC?$AA@ db 'CAPI_RSA_PRIV_DEC',0
					; DATA XREF: .data:00000EA0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1100h
; COMDAT (pick any)
		public ??_C@_0BC@LDGGNLKC@CAPI_RSA_PRIV_ENC?$AA@
; `string'
??_C@_0BC@LDGGNLKC@CAPI_RSA_PRIV_ENC?$AA@ db 'CAPI_RSA_PRIV_ENC',0
					; DATA XREF: .data:00000EA8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1114h
; COMDAT (pick any)
		public ??_C@_0O@LAMPLOMH@CAPI_RSA_SIGN?$AA@
; `string'
??_C@_0O@LAMPLOMH@CAPI_RSA_SIGN?$AA@ db	'CAPI_RSA_SIGN',0 ; DATA XREF: .data:00000EB0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1124h
; COMDAT (pick any)
		public ??_C@_0BD@JKLLMDII@CERT_SELECT_DIALOG?$AA@
; `string'
??_C@_0BD@JKLLMDII@CERT_SELECT_DIALOG?$AA@ db 'CERT_SELECT_DIALOG',0
					; DATA XREF: .data:00000EB8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1138h
; COMDAT (pick any)
		public ??_C@_0BD@BMAOPDMH@CLIENT_CERT_SELECT?$AA@
; `string'
??_C@_0BD@BMAOPDMH@CLIENT_CERT_SELECT?$AA@ db 'CLIENT_CERT_SELECT',0
					; DATA XREF: .data:00000EC0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 114Ch
; COMDAT (pick any)
		public ??_C@_0M@OLEPDDPB@WIDE_TO_ASC?$AA@
; `string'
??_C@_0M@OLEPDDPB@WIDE_TO_ASC?$AA@ db 'WIDE_TO_ASC',0 ; DATA XREF: .data:00000EC8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1158h
; COMDAT (pick any)
		public ??_C@_0BI@JADEMKHF@cant?5create?5hash?5object?$AA@
; `string'
??_C@_0BI@JADEMKHF@cant?5create?5hash?5object?$AA@ db 'cant create hash object',0
					; DATA XREF: .data:00000ED8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1170h
; COMDAT (pick any)
		public ??_C@_0BH@ILAFMDD@cant?5find?5capi?5context?$AA@
; `string'
??_C@_0BH@ILAFMDD@cant?5find?5capi?5context?$AA@ db 'cant find capi context',0
					; DATA XREF: .data:00000EE0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1188h
; COMDAT (pick any)
		public ??_C@_0N@IBKACELA@cant?5get?5key?$AA@
; `string'
??_C@_0N@IBKACELA@cant?5get?5key?$AA@ db 'cant get key',0 ; DATA XREF: .data:00000EE8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1198h
; COMDAT (pick any)
		public ??_C@_0BE@NMGJLPNA@cant?5set?5hash?5value?$AA@
; `string'
??_C@_0BE@NMGJLPNA@cant?5set?5hash?5value?$AA@ db 'cant set hash value',0
					; DATA XREF: .data:00000EF0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11ACh
; COMDAT (pick any)
		public ??_C@_0BK@CDEMKLNC@cryptacquirecontext?5error?$AA@
; `string'
??_C@_0BK@CDEMKLNC@cryptacquirecontext?5error?$AA@ db 'cryptacquirecontext error',0
					; DATA XREF: .data:00000EF8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11C8h
; COMDAT (pick any)
		public ??_C@_0BJ@JMDJNPM@cryptenumproviders?5error?$AA@
; `string'
??_C@_0BJ@JMDJNPM@cryptenumproviders?5error?$AA@ db 'cryptenumproviders error',0
					; DATA XREF: .data:00000F00o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11E4h
; COMDAT (pick any)
		public ??_C@_0O@IKMKDME@decrypt?5error?$AA@
; `string'
??_C@_0O@IKMKDME@decrypt?5error?$AA@ db	'decrypt error',0 ; DATA XREF: .data:00000F08o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11F4h
; COMDAT (pick any)
		public ??_C@_0BH@KNHLLBNO@engine?5not?5initialized?$AA@
; `string'
??_C@_0BH@KNHLLBNO@engine?5not?5initialized?$AA@ db 'engine not initialized',0
					; DATA XREF: .data:00000F10o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 120Ch
; COMDAT (pick any)
		public ??_C@_0BF@NLCJHDAG@enumcontainers?5error?$AA@
; `string'
??_C@_0BF@NLCJHDAG@enumcontainers?5error?$AA@ db 'enumcontainers error',0
					; DATA XREF: .data:00000F18o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1224h
; COMDAT (pick any)
		public ??_C@_0BC@OEPEHCDE@error?5adding?5cert?$AA@
; `string'
??_C@_0BC@OEPEHCDE@error?5adding?5cert?$AA@ db 'error adding cert',0
					; DATA XREF: .data:00000F20o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1238h
; COMDAT (pick any)
		public ??_C@_0BF@FIIIDOII@error?5creating?5store?$AA@
; `string'
??_C@_0BF@FIIIDOII@error?5creating?5store?$AA@ db 'error creating store',0
					; DATA XREF: .data:00000F28o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1250h
; COMDAT (pick any)
		public ??_C@_0BM@JHGPLFKA@error?5getting?5friendly?5name?$AA@
; `string'
??_C@_0BM@JHGPLFKA@error?5getting?5friendly?5name?$AA@ db 'error getting friendly name',0
					; DATA XREF: .data:00000F30o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 126Ch
; COMDAT (pick any)
		public ??_C@_0CA@NIECDJBJ@error?5getting?5key?5provider?5info?$AA@
; `string'
??_C@_0CA@NIECDJBJ@error?5getting?5key?5provider?5info?$AA@ db 'error getting key provider info',0
					; DATA XREF: .data:00000F38o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 128Ch
; COMDAT (pick any)
		public ??_C@_0BE@ICHGCJGF@error?5opening?5store?$AA@
; `string'
??_C@_0BE@ICHGCJGF@error?5opening?5store?$AA@ db 'error opening store',0
					; DATA XREF: .data:00000F40o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12A0h
; COMDAT (pick any)
		public ??_C@_0BD@HBIDOBPN@error?5signing?5hash?$AA@
; `string'
??_C@_0BD@HBIDOBPN@error?5signing?5hash?$AA@ db	'error signing hash',0
					; DATA XREF: .data:00000F48o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12B4h
; COMDAT (pick any)
		public ??_C@_0BH@KEFGLDAF@function?5not?5supported?$AA@
; `string'
??_C@_0BH@KEFGLDAF@function?5not?5supported?$AA@ db 'function not supported',0
					; DATA XREF: .data:00000F50o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12CCh
; COMDAT (pick any)
		public ??_C@_0BB@NCNMKNGC@getuserkey?5error?$AA@
; `string'
??_C@_0BB@NCNMKNGC@getuserkey?5error?$AA@ db 'getuserkey error',0
					; DATA XREF: .data:00000F58o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12E0h
; COMDAT (pick any)
		public ??_C@_0BG@DCMIKGHM@invalid?5digest?5length?$AA@
; `string'
??_C@_0BG@DCMIKGHM@invalid?5digest?5length?$AA@	db 'invalid digest length',0
					; DATA XREF: .data:00000F60o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12F8h
; COMDAT (pick any)
		public ??_C@_0CJ@CLKDMANL@invalid?5dsa?5public?5key?5blob?5magi@
; `string'
??_C@_0CJ@CLKDMANL@invalid?5dsa?5public?5key?5blob?5magi@ db 'invalid dsa public key blob magic number',0
					; DATA XREF: .data:00000F68o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1324h
; COMDAT (pick any)
		public ??_C@_0BG@MNHOIMHI@invalid?5lookup?5method?$AA@
; `string'
??_C@_0BG@MNHOIMHI@invalid?5lookup?5method?$AA@	db 'invalid lookup method',0
					; DATA XREF: .data:00000F70o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 133Ch
; COMDAT (pick any)
		public ??_C@_0BI@ENKNHDBN@invalid?5public?5key?5blob?$AA@
; `string'
??_C@_0BI@ENKNHDBN@invalid?5public?5key?5blob?$AA@ db 'invalid public key blob',0
					; DATA XREF: .data:00000F78o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1354h
; COMDAT (pick any)
		public ??_C@_0CJ@EEEHKBED@invalid?5rsa?5public?5key?5blob?5magi@
; `string'
??_C@_0CJ@EEEHKBED@invalid?5rsa?5public?5key?5blob?5magi@ db 'invalid rsa public key blob magic number',0
					; DATA XREF: .data:00000F80o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1380h
; COMDAT (pick any)
		public ??_C@_0BE@DBLHBKFP@pubkey?5export?5error?$AA@
; `string'
??_C@_0BE@DBLHBKFP@pubkey?5export?5error?$AA@ db 'pubkey export error',0
					; DATA XREF: .data:00000F88o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1394h
; COMDAT (pick any)
		public ??_C@_0BL@COLIMCCA@pubkey?5export?5length?5error?$AA@
; `string'
??_C@_0BL@COLIMCCA@pubkey?5export?5length?5error?$AA@ db 'pubkey export length error',0
					; DATA XREF: .data:00000F90o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13B0h
; COMDAT (pick any)
		public ??_C@_0BA@NINGALLD@unknown?5command?$AA@
; `string'
??_C@_0BA@NINGALLD@unknown?5command?$AA@ db 'unknown command',0 ; DATA XREF: .data:00000F98o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13C0h
; COMDAT (pick any)
		public ??_C@_0BK@IOKKIEIH@unsupported?5algorithm?5nid?$AA@
; `string'
??_C@_0BK@IOKKIEIH@unsupported?5algorithm?5nid?$AA@ db 'unsupported algorithm nid',0
					; DATA XREF: .data:00000FA0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13DCh
; COMDAT (pick any)
		public ??_C@_0BE@INBDNMBE@unsupported?5padding?$AA@
; `string'
??_C@_0BE@INBDNMBE@unsupported?5padding?$AA@ db	'unsupported padding',0
					; DATA XREF: .data:00000FA8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13F0h
; COMDAT (pick any)
		public ??_C@_0CB@BJBHCHCD@unsupported?5public?5key?5algorithm@
; `string'
??_C@_0CB@BJBHCHCD@unsupported?5public?5key?5algorithm@	db 'unsupported public key algorithm',0
					; DATA XREF: .data:00000FB0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1414h
; COMDAT (pick any)
		public ??_C@_0M@GLDJIOCG@win32?5error?$AA@
; `string'
??_C@_0M@GLDJIOCG@win32?5error?$AA@ db 'win32 error',0 ; DATA XREF: .data:00000FB8o
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 1420h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
_CAPI_lib_error_code dd	?		; DATA XREF: _capi_rsa_sign:loc_62r
					; _capi_rsa_sign:loc_70w ...
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1424h
; COMDAT (pick any)
		public ??_C@_04IEBLCNKH@capi?$AA@
; `string'
??_C@_04IEBLCNKH@capi?$AA@ db 'capi',0  ; DATA XREF: .data:_engine_capi_ido
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 142Ch
; COMDAT (pick any)
		public ??_C@_0BB@CHPBBDGO@CryptoAPI?5ENGINE?$AA@
; `string'
??_C@_0BB@CHPBBDGO@CryptoAPI?5ENGINE?$AA@ db 'CryptoAPI ENGINE',0
					; DATA XREF: .data:_engine_capi_nameo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1440h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_CAPI_trace	proc near		; CODE XREF: _capi_rsa_sign+48p
					; _capi_rsa_priv_dec+3Cp ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		mov	eax, [esp+arg_0]
		push	edi
		mov	edi, [esp+4+arg_4]
		test	eax, eax
		jz	short loc_147D
		cmp	dword ptr [eax], 2
		jl	short loc_147D
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_147D
		push	esi
		push	offset ??_C@_02DPNLHKJD@a?$CL?$AA@ ; `string'
		push	eax
		call	_BIO_new_file
		mov	esi, eax
		lea	eax, [esp+10h+arg_8]
		push	eax
		push	edi
		push	esi
		call	_BIO_vprintf
		push	esi
		call	_BIO_free
		add	esp, 18h
		pop	esi

loc_147D:				; CODE XREF: _CAPI_trace+Bj
					; _CAPI_trace+10j ...
		pop	edi
		retn
_CAPI_trace	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1480h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ERR_CAPI_error	proc near		; CODE XREF: _capi_rsa_sign+26Ap
					; _capi_dsa_do_sign+1D4p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_1493
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_1493:				; CODE XREF: _ERR_CAPI_error+7j
		push	[esp+arg_C]
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		retn
_ERR_CAPI_error	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 14B0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ERR_load_CAPI_strings proc near	; CODE XREF: _bind_capi+F0p
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_14C3
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_14C3:				; CODE XREF: _ERR_load_CAPI_strings+7j
		cmp	ds:_CAPI_error_init, 0
		jz	short locret_14F4
		push	offset _CAPI_str_functs
		push	eax
		mov	ds:_CAPI_error_init, 0
		call	_ERR_load_strings
		push	offset _CAPI_str_reasons
		push	ds:_CAPI_lib_error_code
		call	_ERR_load_strings
		add	esp, 10h

locret_14F4:				; CODE XREF: _ERR_load_CAPI_strings+1Aj
		retn
_ERR_load_CAPI_strings endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 14F8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ERR_unload_CAPI_strings proc near
		cmp	ds:_CAPI_error_init, 0
		jnz	short locret_152E
		push	offset _CAPI_str_functs
		push	ds:_CAPI_lib_error_code
		call	_ERR_unload_strings
		push	offset _CAPI_str_reasons
		push	ds:_CAPI_lib_error_code
		call	_ERR_unload_strings
		add	esp, 10h
		mov	ds:_CAPI_error_init, 1

locret_152E:				; CODE XREF: _ERR_unload_CAPI_strings+7j
		retn
_ERR_unload_CAPI_strings endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1530h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_bind_capi	proc near		; CODE XREF: _bind_engine+B1p
					; _bind_helper+40p

arg_0		= dword	ptr  4

		push	esi
		push	ds:_engine_capi_id
		mov	esi, [esp+8+arg_0]
		push	esi
		call	_ENGINE_set_id
		add	esp, 8
		test	eax, eax
		jz	loc_162C
		push	ds:_engine_capi_name
		push	esi
		call	_ENGINE_set_name
		add	esp, 8
		test	eax, eax
		jz	loc_162C
		push	8
		push	esi
		call	_ENGINE_set_flags
		add	esp, 8
		test	eax, eax
		jz	loc_162C
		push	offset _capi_init
		push	esi
		call	_ENGINE_set_init_function
		add	esp, 8
		test	eax, eax
		jz	loc_162C
		push	offset _capi_finish
		push	esi
		call	_ENGINE_set_finish_function
		add	esp, 8
		test	eax, eax
		jz	loc_162C
		push	offset _capi_destroy
		push	esi
		call	_ENGINE_set_destroy_function
		add	esp, 8
		test	eax, eax
		jz	short loc_162C
		push	offset _capi_rsa_method
		push	esi
		call	_ENGINE_set_RSA
		add	esp, 8
		test	eax, eax
		jz	short loc_162C
		push	offset _capi_dsa_method
		push	esi
		call	_ENGINE_set_DSA
		add	esp, 8
		test	eax, eax
		jz	short loc_162C
		push	offset _capi_load_privkey
		push	esi
		call	_ENGINE_set_load_privkey_function
		add	esp, 8
		test	eax, eax
		jz	short loc_162C
		push	offset _capi_load_ssl_client_cert
		push	esi
		call	_ENGINE_set_load_ssl_client_cert_function
		add	esp, 8
		test	eax, eax
		jz	short loc_162C
		push	offset _capi_cmd_defns
		push	esi
		call	_ENGINE_set_cmd_defns
		add	esp, 8
		test	eax, eax
		jz	short loc_162C
		push	offset _capi_ctrl
		push	esi
		call	_ENGINE_set_ctrl_function
		add	esp, 8
		test	eax, eax
		jz	short loc_162C
		call	_ERR_load_CAPI_strings
		mov	eax, 1
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_162C:				; CODE XREF: _bind_capi+16j
					; _bind_capi+2Dj ...
		xor	eax, eax
		pop	esi
		retn
_bind_capi	endp

_text$mn	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1630h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _bind_engine
_bind_engine	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		call	_ENGINE_get_static_state
		mov	esi, [esp+4+arg_8]
		cmp	eax, [esi]
		jz	short $skip_cbs$19
		push	dword ptr [esi+14h]
		push	dword ptr [esi+10h]
		push	dword ptr [esi+0Ch]
		call	_CRYPTO_set_mem_functions
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_1657

loc_1653:				; CODE XREF: _bind_engine+5Cj
					; _bind_engine+6Bj ...
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_1657:				; CODE XREF: _bind_engine+21j
		push	dword ptr [esi+18h]
		call	_CRYPTO_set_locking_callback
		push	dword ptr [esi+1Ch]
		call	_CRYPTO_set_add_lock_callback
		push	dword ptr [esi+20h]
		call	_CRYPTO_set_dynlock_create_callback
		push	dword ptr [esi+24h]
		call	_CRYPTO_set_dynlock_lock_callback
		push	dword ptr [esi+28h]
		call	_CRYPTO_set_dynlock_destroy_callback
		push	dword ptr [esi+8]
		call	_CRYPTO_set_ex_data_implementation
		add	esp, 18h
		test	eax, eax
		jz	short loc_1653
		push	dword ptr [esi+4]
		call	_ERR_set_implementation
		add	esp, 4
		test	eax, eax
		jz	short loc_1653

$skip_cbs$19:				; CODE XREF: _bind_engine+Cj
		mov	eax, [esp+4+arg_4]
		test	eax, eax
		jz	short loc_16DD
		mov	ecx, ds:_engine_capi_id
		nop	dword ptr [eax+eax+00h]

loc_16B0:				; CODE XREF: _bind_engine+9Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_16D0
		test	dl, dl
		jz	short loc_16CC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_16D0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_16B0

loc_16CC:				; CODE XREF: _bind_engine+88j
		xor	eax, eax
		jmp	short loc_16D5
; ---------------------------------------------------------------------------

loc_16D0:				; CODE XREF: _bind_engine+84j
					; _bind_engine+90j
		sbb	eax, eax
		or	eax, 1

loc_16D5:				; CODE XREF: _bind_engine+9Ej
		test	eax, eax
		jnz	loc_1653

loc_16DD:				; CODE XREF: _bind_engine+73j
		push	[esp+4+arg_0]
		call	_bind_capi
		add	esp, 4
		test	eax, eax
		jz	loc_1653
		mov	eax, 1
		pop	esi
		retn
_bind_engine	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 16F8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_bind_helper	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		test	eax, eax
		jz	short loc_1734
		mov	ecx, ds:_engine_capi_id
		xchg	ax, ax

loc_1708:				; CODE XREF: _bind_helper+2Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1728
		test	dl, dl
		jz	short loc_1724
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1728
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1708

loc_1724:				; CODE XREF: _bind_helper+18j
		xor	eax, eax
		jmp	short loc_172D
; ---------------------------------------------------------------------------

loc_1728:				; CODE XREF: _bind_helper+14j
					; _bind_helper+20j
		sbb	eax, eax
		or	eax, 1

loc_172D:				; CODE XREF: _bind_helper+2Ej
		test	eax, eax
		jz	short loc_1734
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_1734:				; CODE XREF: _bind_helper+6j
					; _bind_helper+37j
		push	[esp+arg_0]
		call	_bind_capi
		add	esp, 4
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_bind_helper	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1748h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_adderror	proc near

var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 10h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+10h+var_4], eax
		push	[esp+10h+arg_0]
		lea	eax, [esp+14h+var_10]
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+20h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		mov	ecx, [esp+2Ch+var_4]
		add	esp, 1Ch
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 10h
		retn
_capi_adderror	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1798h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_addlasterror proc	near		; CODE XREF: _capi_rsa_sign+22Ap
					; _capi_rsa_sign+272p ...

var_10		= byte ptr -10h
var_4		= dword	ptr -4

		mov	eax, 10h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+10h+var_4], eax
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+18h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+20h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		mov	ecx, [esp+2Ch+var_4]
		add	esp, 1Ch
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 10h
		retn
_capi_addlasterror endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 17E8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_cert_get_fname(int, PCCERT_CONTEXT pCertContext)
		public _capi_cert_get_fname
_capi_cert_get_fname proc near		; CODE XREF: _capi_dump_cert+19p

pcbData		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
pCertContext	= dword	ptr  8

		mov	eax, 14h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+14h+var_4], eax
		mov	eax, [esp+14h+arg_0]
		push	esi
		mov	esi, [esp+18h+pCertContext]
		push	offset ??_C@_0BF@DFLCHLAD@capi_cert_get_fname?6?$AA@ ; "capi_cert_get_fname\n"
		push	eax
		call	_CAPI_trace
		add	esp, 8
		lea	eax, [esp+18h+pcbData]
		push	eax		; pcbData
		push	0		; pvData
		push	0Bh		; dwPropId
		push	esi		; pCertContext
		call	dword ptr ds:__imp__CertGetCertificateContextProperty@16 ; CertGetCertificateContextProperty(x,x,x,x)
		test	eax, eax
		jnz	short loc_1838
		pop	esi
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_1838:				; CODE XREF: _capi_cert_get_fname+3Ej
		push	edi
		push	508h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	[esp+24h+pcbData]
		call	_CRYPTO_malloc
		add	esp, 0Ch
		mov	edi, eax
		lea	eax, [esp+1Ch+pcbData]
		push	eax		; pcbData
		push	edi		; pvData
		push	0Bh		; dwPropId
		push	esi		; pCertContext
		call	dword ptr ds:__imp__CertGetCertificateContextProperty@16 ; CertGetCertificateContextProperty(x,x,x,x)
		test	eax, eax
		jz	short loc_1888
		push	edi		; lpWideCharStr
		call	_wide_to_asc
		push	edi
		mov	esi, eax
		call	_CRYPTO_free
		add	esp, 8
		mov	eax, esi
		pop	edi
		pop	esi
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_1888:				; CODE XREF: _capi_cert_get_fname+7Aj
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_189B
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_189B:				; CODE XREF: _capi_cert_get_fname+A7j
		push	50Fh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Ch ; 'l'
		push	63h ; 'c'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+24h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+2Ch+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		push	edi
		call	_CRYPTO_free
		mov	ecx, [esp+3Ch+var_4]
		add	esp, 20h
		xor	eax, eax
		pop	edi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
_capi_cert_get_fname endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 18F8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_ctrl(int, int, DWORD	dwIndex, LPCSTR	szProvider)
_capi_ctrl	proc near		; DATA XREF: _bind_capi+DEo

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
dwIndex		= dword	ptr  0Ch
szProvider	= dword	ptr  10h

		mov	eax, ds:_capi_idx
		push	ebx
		mov	ebx, 1
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_1936
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_191B
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_191B:				; CODE XREF: _capi_ctrl+17j
		push	150h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Ah ; 'j'
		push	64h ; 'd'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_1936:				; CODE XREF: _capi_ctrl+Ej
		push	ebp
		push	edi
		push	eax
		push	[esp+10h+arg_0]
		call	_ENGINE_get_ex_data
		add	esp, 8
		mov	edi, eax
		push	0
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		mov	ebp, eax
		add	esp, 8
		mov	eax, [esp+0Ch+arg_4]
		add	eax, 0FFFFFF38h	; switch 14 cases
		cmp	eax, 0Dh
		ja	loc_1B83	; jumptable 00001971 default case
		jmp	ds:$LN36[eax*4]	; switch jump
; ---------------------------------------------------------------------------

$LN5:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		push	ebp		; jumptable 00001971 case 205
		push	edi
		call	_capi_list_providers
		add	esp, 8
		mov	ebx, eax
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN6:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		push	0		; jumptable 00001971 case 200
		push	ebp		; int
		push	edi		; int
		call	_capi_list_certs
		add	esp, 0Ch
		mov	ebx, eax
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN7:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		push	[esp+0Ch+szProvider] ; jumptable 00001971 case 201
		push	ebp		; int
		push	edi		; int
		call	_capi_list_certs
		add	esp, 0Ch
		mov	ebx, eax
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN8:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		push	ebp		; jumptable 00001971 case 209
		push	edi
		call	_capi_list_containers
		add	esp, 8
		mov	ebx, eax
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN9:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		mov	eax, [edi+14h]	; jumptable 00001971 case 212
		test	eax, eax
		jz	short loc_19FA
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_19FA:				; CODE XREF: _capi_ctrl+F7j
		push	[esp+0Ch+szProvider]
		call	_BUF_strdup
		push	[esp+10h+szProvider]
		mov	[edi+14h], eax
		push	offset ??_C@_0BK@PDHGKMKL@Setting?5store?5name?5to?5?$CFs?6?$AA@ ; "Setting store name to %s\n"
		push	edi
		call	_CAPI_trace
		add	esp, 10h
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN11:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		mov	ecx, [esp+0Ch+dwIndex] ; jumptable 00001971 case 213
		mov	eax, [edi+1Ch]
		test	bl, cl
		jz	short loc_1A3E
		and	eax, 0FFFEFFFFh
		or	eax, 20000h
		jmp	short loc_1A48
; ---------------------------------------------------------------------------

loc_1A3E:				; CODE XREF: _capi_ctrl+138j
		and	eax, 0FFFDFFFFh
		or	eax, 10000h

loc_1A48:				; CODE XREF: _capi_ctrl+144j
		push	ecx
		push	offset ??_C@_0BF@CBCNOPLI@Setting?5flags?5to?5?$CFd?6?$AA@ ; "Setting flags to %d\n"
		push	edi
		mov	[edi+1Ch], eax
		call	_CAPI_trace
		add	esp, 0Ch
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN14:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		mov	eax, [esp+0Ch+dwIndex] ; jumptable 00001971 case 202
		push	eax
		push	offset ??_C@_0BL@JMALNNDF@Setting?5debug?5level?5to?5?$CFd?6?$AA@ ; "Setting debug level to %d\n"
		push	edi
		mov	[edi], eax
		call	_CAPI_trace
		add	esp, 0Ch
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN15:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		push	[esp+0Ch+szProvider] ; jumptable 00001971 case 203
		call	_BUF_strdup
		push	eax
		push	offset ??_C@_0BK@IMCENNIC@Setting?5debug?5file?5to?5?$CFs?6?$AA@ ; "Setting debug file to %s\n"
		push	edi
		mov	[edi+4], eax
		call	_CAPI_trace
		add	esp, 10h
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN16:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		mov	eax, [esp+0Ch+dwIndex] ; jumptable 00001971 case 204
		push	eax
		push	offset ??_C@_0BI@BADOCNJF@Setting?5key?5type?5to?5?$CFd?6?$AA@ ; "Setting key type to %d\n"
		push	edi
		mov	[edi+8], eax
		call	_CAPI_trace
		add	esp, 0Ch
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN17:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		push	[esp+0Ch+dwIndex] ; jumptable 00001971 case 206
		push	edi		; int
		call	_capi_ctx_set_provname_idx
		add	esp, 8
		mov	ebx, eax
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN18:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		mov	eax, [esp+0Ch+dwIndex] ; jumptable 00001971 case 210
		push	ebp
		mov	[edi+24h], eax
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN19:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		mov	ecx, [esp+0Ch+dwIndex] ; jumptable 00001971 case 211
		lea	eax, [ecx-1]
		cmp	eax, 2
		ja	short loc_1B2E
		push	ebp
		mov	[edi+20h], ecx
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_1B2E:				; CODE XREF: _capi_ctrl+222j
		push	191h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	72h ; 'r'
		push	64h ; 'd'
		call	_ERR_CAPI_error
		add	esp, 10h
		xor	eax, eax
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN22:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		push	1		; jumptable 00001971 case 207
		push	dword ptr [edi+10h] ; dwProvType
		push	[esp+14h+szProvider] ; szProvider
		push	edi		; int
		call	_capi_ctx_set_provname
		add	esp, 10h
		mov	ebx, eax
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$LN23:					; CODE XREF: _capi_ctrl+79j
					; DATA XREF: .text$mn:$LN36o
		mov	eax, [esp+0Ch+dwIndex] ; jumptable 00001971 case 208
		push	ebp
		mov	[edi+10h], eax
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_1B83:				; CODE XREF: _capi_ctrl+73j
		mov	eax, ds:_CAPI_lib_error_code ; jumptable 00001971 default case
		test	eax, eax
		jnz	short loc_1B96
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_1B96:				; CODE XREF: _capi_ctrl+292j
		push	1A0h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	76h ; 'v'
		push	64h ; 'd'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	ebx, ebx
		push	ebp
		call	_BIO_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebp
		pop	ebx
		retn
_capi_ctrl	endp

; ---------------------------------------------------------------------------
		align 10h
$LN36		dd offset $LN6		; DATA XREF: _capi_ctrl+79r
		dd offset $LN7		; jump table for switch	statement
		dd offset $LN14
		dd offset $LN15
		dd offset $LN16
		dd offset $LN5
		dd offset $LN17
		dd offset $LN22
		dd offset $LN23
		dd offset $LN8
		dd offset $LN18
		dd offset $LN19
		dd offset $LN9
		dd offset $LN11
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1BF8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_ctx_free	proc near		; CODE XREF: _capi_finish+10p

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		push	esi
		push	offset ??_C@_0CA@INILHLEE@Calling?5capi_ctx_free?5with?5?$CFlx?6?$AA@ ;	"Calling capi_ctx_free with %lx\n"
		push	esi
		call	_CAPI_trace
		add	esp, 0Ch
		test	esi, esi
		jz	short loc_1C59
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_1C20
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_1C20:				; CODE XREF: _capi_ctx_free+1Dj
		mov	eax, [esi+4]
		test	eax, eax
		jz	short loc_1C30
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_1C30:				; CODE XREF: _capi_ctx_free+2Dj
		mov	eax, [esi+14h]
		test	eax, eax
		jz	short loc_1C40
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_1C40:				; CODE XREF: _capi_ctx_free+3Dj
		mov	eax, [esi+18h]
		test	eax, eax
		jz	short loc_1C50
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_1C50:				; CODE XREF: _capi_ctx_free+4Dj
		push	esi
		call	_CRYPTO_free
		add	esp, 4

loc_1C59:				; CODE XREF: _capi_ctx_free+16j
		pop	esi
		retn
_capi_ctx_free	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1C5Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_ctx_new	proc near		; CODE XREF: _capi_init:loc_2DB2p
		push	624h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	34h ; '4'
		call	_CRYPTO_malloc
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_1CA1
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_1C87
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_1C87:				; CODE XREF: _capi_ctx_new+1Fj
		push	626h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	41h ; 'A'
		push	65h ; 'e'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_1CA1:				; CODE XREF: _capi_ctx_new+16j
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+10h], 1
		mov	dword ptr [eax+24h], 3
		mov	dword ptr [eax+8], 1
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+18h], 0
		mov	dword ptr [eax+1Ch], 1C000h
		mov	dword ptr [eax+20h], 1
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+28h], offset _cert_select_simple
		retn
_capi_ctx_new	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1CF0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_ctx_set_provname(int, LPCSTR	szProvider, DWORD dwProvType, int)
_capi_ctx_set_provname proc near	; CODE XREF: _capi_ctrl+25Cp
					; _capi_ctx_set_provname_idx+3Dp

phProv		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
szProvider	= dword	ptr  8
dwProvType	= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, 14h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+14h+var_4], eax
		push	ebx
		mov	ebx, [esp+18h+dwProvType]
		push	esi
		mov	esi, [esp+1Ch+szProvider]
		push	edi
		mov	edi, [esp+20h+arg_0]
		push	ebx
		push	esi
		push	offset ??_C@_0CJ@JCKLCCNI@capi_ctx_set_provname?0?5name?$DN?$CFs?0?5@ ;	"capi_ctx_set_provname,	name=%s, type=%d"...
		push	edi
		call	_CAPI_trace
		add	esp, 10h
		cmp	[esp+20h+arg_C], 0
		jz	short loc_1D53
		test	esi, esi
		jz	short loc_1D89
		push	0F0000000h	; dwFlags
		push	ebx		; dwProvType
		push	esi		; szProvider
		push	0		; szContainer
		lea	eax, [esp+30h+phProv]
		push	eax		; phProv
		call	dword ptr ds:__imp__CryptAcquireContextA@20 ; CryptAcquireContextA(x,x,x,x,x)
		test	eax, eax
		jz	short loc_1D89
		push	0		; dwFlags
		push	[esp+24h+phProv] ; hProv
		call	dword ptr ds:__imp__CryptReleaseContext@8 ; CryptReleaseContext(x,x)

loc_1D53:				; CODE XREF: _capi_ctx_set_provname+39j
		mov	eax, [edi+0Ch]
		test	eax, eax
		jz	short loc_1D63
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_1D63:				; CODE XREF: _capi_ctx_set_provname+68j
		push	esi
		call	_BUF_strdup
		add	esp, 4
		mov	[edi+0Ch], eax
		mov	[edi+10h], ebx
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_1D89:				; CODE XREF: _capi_ctx_set_provname+3Dj
					; _capi_ctx_set_provname+55j
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_1D9C
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_1D9C:				; CODE XREF: _capi_ctx_set_provname+A0j
		push	65Ch
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	67h ; 'g'
		push	66h ; 'f'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+28h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+30h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		mov	ecx, [esp+3Ch+var_4]
		add	esp, 1Ch
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
_capi_ctx_set_provname endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1DF4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_ctx_set_provname_idx(int, DWORD dwIndex)
_capi_ctx_set_provname_idx proc	near	; CODE XREF: _capi_ctrl+1E9p

szProvider	= dword	ptr -8
dwProvType	= dword	ptr -4
arg_0		= dword	ptr  4
dwIndex		= dword	ptr  8

		mov	eax, 8
		call	__chkstk
		push	esi
		push	[esp+0Ch+dwIndex] ; dwIndex
		mov	esi, [esp+10h+arg_0]
		lea	eax, [esp+10h+dwProvType]
		push	eax		; pdwProvType
		lea	eax, [esp+14h+szProvider]
		push	eax		; int
		push	esi		; int
		call	_capi_get_provname
		add	esp, 10h
		cmp	eax, 1
		jz	short loc_1E26
		xor	eax, eax
		pop	esi
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_1E26:				; CODE XREF: _capi_ctx_set_provname_idx+29j
		push	0		; int
		push	[esp+10h+dwProvType] ; dwProvType
		push	[esp+14h+szProvider] ; szProvider
		push	esi		; int
		call	_capi_ctx_set_provname
		push	[esp+1Ch+szProvider]
		mov	esi, eax
		call	_CRYPTO_free
		add	esp, 14h
		mov	eax, esi
		pop	esi
		add	esp, 8
		retn
_capi_ctx_set_provname_idx endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1E4Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_destroy	proc near		; DATA XREF: _bind_capi+72o
		cmp	ds:_CAPI_error_init, 0
		jnz	short loc_1E82
		push	offset _CAPI_str_functs
		push	ds:_CAPI_lib_error_code
		call	_ERR_unload_strings
		push	offset _CAPI_str_reasons
		push	ds:_CAPI_lib_error_code
		call	_ERR_unload_strings
		add	esp, 10h
		mov	ds:_CAPI_error_init, 1

loc_1E82:				; CODE XREF: _capi_destroy+7j
		mov	eax, 1
		retn
_capi_destroy	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1E88h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_dump_cert(int, int, PCCERT_CONTEXT pCertContext)
		public _capi_dump_cert
_capi_dump_cert	proc near		; CODE XREF: _capi_list_certs+79p
					; _capi_list_certs+C5p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
pCertContext	= dword	ptr  0Ch

		push	ebx
		push	ebp
		mov	ebp, [esp+8+arg_0]
		push	esi
		mov	esi, [esp+0Ch+arg_4]
		push	edi
		mov	ebx, [ebp+24h]
		test	bl, 2
		jz	short loc_1ED4
		push	[esp+10h+pCertContext] ; pCertContext
		push	ebp		; int
		call	_capi_cert_get_fname
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jz	short loc_1EC6
		push	edi
		push	offset ??_C@_0BG@IEDCDNCL@?5?5Friendly?5Name?5?$CC?$CFs?$CC?6?$AA@ ; "	Friendly Name \"%s\"\n"
		push	esi
		call	_BIO_printf
		push	edi
		call	_CRYPTO_free
		add	esp, 10h
		jmp	short loc_1ED4
; ---------------------------------------------------------------------------

loc_1EC6:				; CODE XREF: _capi_dump_cert+25j
		push	offset ??_C@_0BG@EEJCJJDG@?5?5?$DMNo?5Friendly?5Name?$DO?6?$AA@	; "  <No Friendly Name>\n"
		push	esi
		call	_BIO_printf
		add	esp, 8

loc_1ED4:				; CODE XREF: _capi_dump_cert+12j
					; _capi_dump_cert+3Cj
		mov	ecx, [esp+10h+pCertContext]
		mov	eax, [ecx+4]
		push	dword ptr [ecx+8]
		mov	[esp+14h+arg_0], eax
		lea	eax, [esp+14h+arg_0]
		push	eax
		push	0
		call	_d2i_X509
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jnz	short loc_1F05
		push	offset ??_C@_0BN@GFOGIGBP@?5?5?$DMCan?8t?5parse?5certificate?$DO?6?$AA@	; "  <Can't parse certificate>\n"
		push	esi
		call	_BIO_printf
		add	esp, 8

loc_1F05:				; CODE XREF: _capi_dump_cert+6Dj
		test	bl, 1
		jz	short loc_1F62
		push	offset ??_C@_0M@JBBGICFI@?5?5Subject?3?5?$AA@ ;	"  Subject: "
		push	esi
		call	_BIO_printf
		add	esp, 8
		push	82031Fh
		push	0
		push	edi
		call	_X509_get_subject_name
		add	esp, 4
		push	eax
		push	esi
		call	_X509_NAME_print_ex
		push	offset ??_C@_0M@FNMBPMND@?6?5?5Issuer?3?5?$AA@ ; "\n  Issuer: "
		push	esi
		call	_BIO_printf
		add	esp, 18h
		push	82031Fh
		push	0
		push	edi
		call	_X509_get_issuer_name
		add	esp, 4
		push	eax
		push	esi
		call	_X509_NAME_print_ex
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; "\n"
		push	esi
		call	_BIO_printf
		add	esp, 18h

loc_1F62:				; CODE XREF: _capi_dump_cert+80j
		test	bl, 4
		jz	short loc_1F78
		push	0
		push	82031Fh
		push	edi
		push	esi
		call	_X509_print_ex
		add	esp, 10h

loc_1F78:				; CODE XREF: _capi_dump_cert+DDj
		test	bl, 20h
		jz	short loc_1FA7
		push	[esp+10h+pCertContext] ; pCertContext
		push	ebp		; int
		call	_capi_get_prov_info
		push	eax
		push	esi
		push	ebp
		mov	[esp+24h+pCertContext],	eax
		call	_capi_dump_prov_info
		mov	eax, [esp+24h+pCertContext]
		add	esp, 14h
		test	eax, eax
		jz	short loc_1FA7
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_1FA7:				; CODE XREF: _capi_dump_cert+F3j
					; _capi_dump_cert+114j
		test	bl, 8
		jz	short loc_1FB6
		push	edi
		push	esi
		call	_PEM_write_bio_X509
		add	esp, 8

loc_1FB6:				; CODE XREF: _capi_dump_cert+122j
		push	edi
		call	_X509_free
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_capi_dump_cert	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1FC4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_dump_prov_info proc near		; CODE XREF: _capi_dump_cert+106p

arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		mov	edi, [esp+4+arg_8]
		test	edi, edi
		jnz	short loc_1FE0
		push	offset ??_C@_0BC@BACOIIDC@?5?5No?5Private?5Key?6?$AA@ ;	"  No Private Key\n"
		push	[esp+8+arg_4]
		call	_BIO_printf
		add	esp, 8
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_1FE0:				; CODE XREF: _capi_dump_prov_info+7j
		push	ebx
		push	ebp
		push	dword ptr [edi+4] ; lpWideCharStr
		call	_wide_to_asc
		push	dword ptr [edi]	; lpWideCharStr
		mov	ebp, eax
		call	_wide_to_asc
		add	esp, 8
		mov	ebx, eax
		test	ebp, ebp
		jz	short loc_203B
		test	ebx, ebx
		jz	short $err$10
		push	esi
		mov	esi, [esp+10h+arg_4]
		push	offset ??_C@_0BF@BOOOILDD@?5?5Private?5Key?5Info?3?6?$AA@ ; "  Private Key Info:\n"
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+8]
		push	ebp
		push	offset ??_C@_0CK@OLIIMNDF@?5?5?5?5Provider?5Name?3?5?5?$CFs?0?5Provider@ ; "	Provider Name:	%s, Provider Type %"...
		push	esi
		call	_BIO_printf
		push	dword ptr [edi+18h]
		push	ebx
		push	offset ??_C@_0CF@ICDPLKBE@?5?5?5?5Container?5Name?3?5?$CFs?0?5Key?5Type@ ; "	Container Name:	%s, Key	Type %d\n"
		push	esi
		call	_BIO_printf
		add	esp, 28h
		pop	esi

$err$10:				; CODE XREF: _capi_dump_prov_info+3Aj
		push	ebp
		call	_CRYPTO_free
		add	esp, 4

loc_203B:				; CODE XREF: _capi_dump_prov_info+36j
		test	ebx, ebx
		jz	short loc_2048
		push	ebx
		call	_CRYPTO_free
		add	esp, 4

loc_2048:				; CODE XREF: _capi_dump_prov_info+79j
		pop	ebp
		pop	ebx
		pop	edi
		retn
_capi_dump_prov_info endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 204Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_find_cert(int, void *pvFindPara, HCERTSTORE hCertStore)
_capi_find_cert	proc near		; CODE XREF: _capi_find_key+52p
					; _capi_list_certs+52p

pcbData		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
pvFindPara	= dword	ptr  8
hCertStore	= dword	ptr  0Ch

		mov	eax, 20h ; ' '
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+20h+var_4], eax
		mov	edx, [esp+20h+pvFindPara]
		mov	ecx, [esp+20h+hCertStore]
		push	ebp
		mov	ebp, [esp+24h+arg_0]
		mov	[esp+24h+var_1C], ebp
		mov	[esp+24h+var_18], edx
		mov	[esp+24h+var_14], ecx
		mov	eax, [ebp+20h]
		sub	eax, 1
		jz	loc_220B
		sub	eax, 1
		jz	short loc_209D
		xor	eax, eax
		pop	ebp
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_209D:				; CODE XREF: _capi_find_cert+3Dj
		push	ebx
		push	esi
		push	edi
		push	0		; pPrevCertContext
		push	ecx		; hCertStore
		call	dword ptr ds:__imp__CertEnumCertificatesInStore@8 ; CertEnumCertificatesInStore(x,x)
		mov	edi, eax
		test	edi, edi
		jz	loc_2180
		mov	ebx, dword ptr ds:__imp__CertGetCertificateContextProperty@16 ;	CertGetCertificateContextProperty(x,x,x,x)
		nop	dword ptr [eax]

loc_20BC:				; CODE XREF: _capi_find_cert+12Ej
		push	offset ??_C@_0BF@DFLCHLAD@capi_cert_get_fname?6?$AA@ ; "capi_cert_get_fname\n"
		push	ebp
		call	_CAPI_trace
		add	esp, 8
		lea	eax, [esp+30h+pcbData]
		push	eax		; pcbData
		push	0		; pvData
		push	0Bh		; dwPropId
		push	edi		; pCertContext
		call	ebx ; CertGetCertificateContextProperty(x,x,x,x) ; CertGetCertificateContextProperty(x,x,x,x)
		test	eax, eax
		jz	loc_216B
		push	508h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	[esp+38h+pcbData]
		call	_CRYPTO_malloc
		add	esp, 0Ch
		mov	esi, eax
		lea	eax, [esp+30h+pcbData]
		push	eax		; pcbData
		push	esi		; pvData
		push	0Bh		; dwPropId
		push	edi		; pCertContext
		call	ebx ; CertGetCertificateContextProperty(x,x,x,x) ; CertGetCertificateContextProperty(x,x,x,x)
		test	eax, eax
		jz	loc_2195
		push	esi		; lpWideCharStr
		call	_wide_to_asc
		push	esi
		mov	ebp, eax
		call	_CRYPTO_free
		add	esp, 8
		test	ebp, ebp
		jz	short loc_2167
		mov	edx, [esp+30h+var_18]
		mov	ecx, ebp

loc_2124:				; CODE XREF: _capi_find_cert+F2j
		mov	al, [ecx]
		cmp	al, [edx]
		jnz	short loc_2144
		test	al, al
		jz	short loc_2140
		mov	al, [ecx+1]
		cmp	al, [edx+1]
		jnz	short loc_2144
		add	ecx, 2
		add	edx, 2
		test	al, al
		jnz	short loc_2124

loc_2140:				; CODE XREF: _capi_find_cert+E0j
		xor	eax, eax
		jmp	short loc_2149
; ---------------------------------------------------------------------------

loc_2144:				; CODE XREF: _capi_find_cert+DCj
					; _capi_find_cert+E8j
		sbb	eax, eax
		or	eax, 1

loc_2149:				; CODE XREF: _capi_find_cert+F6j
		xor	ebx, ebx
		test	eax, eax
		push	ebp
		setz	bl
		call	_CRYPTO_free
		add	esp, 4
		test	ebx, ebx
		jnz	loc_21F6
		mov	ebx, dword ptr ds:__imp__CertGetCertificateContextProperty@16 ;	CertGetCertificateContextProperty(x,x,x,x)

loc_2167:				; CODE XREF: _capi_find_cert+D0j
		mov	ebp, [esp+30h+var_1C]

loc_216B:				; CODE XREF: _capi_find_cert+8Cj
					; _capi_find_cert+1A5j
		push	edi		; pPrevCertContext
		push	[esp+34h+var_14] ; hCertStore
		call	dword ptr ds:__imp__CertEnumCertificatesInStore@8 ; CertEnumCertificatesInStore(x,x)
		mov	edi, eax
		test	edi, edi
		jnz	loc_20BC

loc_2180:				; CODE XREF: _capi_find_cert+61j
		pop	edi
		pop	esi
		pop	ebx
		xor	eax, eax
		pop	ebp
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_2195:				; CODE XREF: _capi_find_cert+B7j
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_21A8
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_21A8:				; CODE XREF: _capi_find_cert+150j
		push	50Fh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Ch ; 'l'
		push	63h ; 'c'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+38h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+40h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		push	esi
		call	_CRYPTO_free
		add	esp, 20h
		jmp	loc_216B
; ---------------------------------------------------------------------------

loc_21F6:				; CODE XREF: _capi_find_cert+10Fj
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebx
		pop	ebp
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_220B:				; CODE XREF: _capi_find_cert+34j
		push	0		; pPrevCertContext
		push	edx		; pvFindPara
		push	70007h		; dwFindType
		push	0		; dwFindFlags
		push	1		; dwCertEncodingType
		push	ecx		; hCertStore
		call	dword ptr ds:__imp__CertFindCertificateInStore@24 ; CertFindCertificateInStore(x,x,x,x,x,x)
		mov	ecx, [esp+24h+var_4]
		pop	ebp
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
_capi_find_cert	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2230h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_find_key(int, void *pvFindPara)
		public _capi_find_key
_capi_find_key	proc near		; CODE XREF: _capi_load_privkey+4Cp

arg_0		= dword	ptr  4
pvFindPara	= dword	ptr  8

		push	ebx
		push	esi
		mov	esi, [esp+8+arg_0]
		xor	ebx, ebx
		push	edi
		mov	eax, [esi+20h]
		test	eax, eax
		jle	short loc_22AD
		cmp	eax, 2
		jle	short loc_2266
		cmp	eax, 3
		jnz	short loc_22AD
		push	dword ptr [esi+8] ; dwKeySpec
		push	dword ptr [esi+10h] ; dwProvType
		push	dword ptr [esi+0Ch] ; szProvider
		push	[esp+18h+pvFindPara] ; int
		push	esi		; int
		call	_capi_get_key
		add	esp, 14h
		mov	ebx, eax
		pop	edi
		pop	esi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_2266:				; CODE XREF: _capi_find_key+13j
		push	0		; pvPara
		push	esi		; int
		call	_capi_open_store
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jnz	short loc_227B
		pop	edi
		pop	esi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_227B:				; CODE XREF: _capi_find_key+45j
		push	ebp
		push	edi		; hCertStore
		push	[esp+14h+pvFindPara] ; pvFindPara
		push	esi		; int
		call	_capi_find_cert
		mov	ebp, eax
		add	esp, 0Ch
		test	ebp, ebp
		jz	short loc_22A3
		push	ebp		; pCertContext
		push	esi		; int
		call	_capi_get_cert_key
		add	esp, 8
		mov	ebx, eax
		push	ebp		; pCertContext
		call	dword ptr ds:__imp__CertFreeCertificateContext@4 ; CertFreeCertificateContext(x)

loc_22A3:				; CODE XREF: _capi_find_key+5Ej
		push	0		; dwFlags
		push	edi		; hCertStore
		call	dword ptr ds:__imp__CertCloseStore@8 ; CertCloseStore(x,x)
		pop	ebp

loc_22AD:				; CODE XREF: _capi_find_key+Ej
					; _capi_find_key+18j
		pop	edi
		pop	esi
		mov	eax, ebx
		pop	ebx
		retn
_capi_find_key	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 22B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_finish	proc near		; DATA XREF: _bind_capi+5Co

arg_0		= dword	ptr  4

		push	ds:_capi_idx
		push	[esp+4+arg_0]
		call	_ENGINE_get_ex_data
		push	eax
		call	_capi_ctx_free
		push	0
		push	ds:_capi_idx
		push	[esp+14h+arg_0]
		call	_ENGINE_set_ex_data
		add	esp, 18h
		mov	eax, 1
		retn
_capi_finish	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 22E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _capi_free_key
_capi_free_key	proc near		; CODE XREF: _capi_load_privkey+6Ep

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jz	short loc_2317
		push	dword ptr [esi+8] ; hKey
		call	dword ptr ds:__imp__CryptDestroyKey@4 ;	CryptDestroyKey(x)
		push	0		; dwFlags
		push	dword ptr [esi+4] ; hProv
		call	dword ptr ds:__imp__CryptReleaseContext@8 ; CryptReleaseContext(x,x)
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_230E
		push	eax		; pCertContext
		call	dword ptr ds:__imp__CertFreeCertificateContext@4 ; CertFreeCertificateContext(x)

loc_230E:				; CODE XREF: _capi_free_key+21j
		push	esi
		call	_CRYPTO_free
		add	esp, 4

loc_2317:				; CODE XREF: _capi_free_key+7j
		pop	esi
		retn
_capi_free_key	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 231Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_get_cert_key(int, PCCERT_CONTEXT pCertContext)
_capi_get_cert_key proc	near		; CODE XREF: _capi_find_key+62p
					; _capi_load_ssl_client_cert+CEp

arg_0		= dword	ptr  4
pCertContext	= dword	ptr  8

		push	esi
		push	edi
		push	[esp+8+pCertContext] ; pCertContext
		xor	edi, edi
		push	[esp+0Ch+arg_0]	; int
		call	_capi_get_prov_info
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jz	short loc_2396
		push	ebx
		push	ebp
		push	dword ptr [esi+4] ; lpWideCharStr
		call	_wide_to_asc
		push	dword ptr [esi]	; lpWideCharStr
		mov	ebp, eax
		call	_wide_to_asc
		add	esp, 8
		mov	ebx, eax
		test	ebp, ebp
		jz	short $err$15
		test	ebx, ebx
		jz	short $err$15
		push	dword ptr [esi+18h] ; dwKeySpec
		push	dword ptr [esi+8] ; dwProvType
		push	ebp		; szProvider
		push	ebx		; int
		push	[esp+20h+arg_0]	; int
		call	_capi_get_key
		add	esp, 14h
		mov	edi, eax

$err$15:				; CODE XREF: _capi_get_cert_key+34j
					; _capi_get_cert_key+38j
		push	esi
		call	_CRYPTO_free
		add	esp, 4
		test	ebp, ebp
		jz	short loc_2382
		push	ebp
		call	_CRYPTO_free
		add	esp, 4

loc_2382:				; CODE XREF: _capi_get_cert_key+5Bj
		test	ebx, ebx
		jz	short loc_238F
		push	ebx
		call	_CRYPTO_free
		add	esp, 4

loc_238F:				; CODE XREF: _capi_get_cert_key+68j
		pop	ebp
		pop	ebx
		mov	eax, edi
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_2396:				; CODE XREF: _capi_get_cert_key+18j
		mov	eax, edi
		pop	edi
		pop	esi
		retn
_capi_get_cert_key endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 239Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_get_key(int,	int, LPCSTR szProvider,	DWORD dwProvType, DWORD	dwKeySpec)
_capi_get_key	proc near		; CODE XREF: _capi_find_key+28p
					; _capi_get_cert_key+46p

szContainer	= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
szProvider	= dword	ptr  0Ch
dwProvType	= dword	ptr  10h
dwKeySpec	= dword	ptr  14h

		mov	eax, 18h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+18h+var_4], eax
		mov	eax, [esp+18h+arg_4]
		push	ebx
		push	ebp
		mov	ebp, [esp+20h+szProvider]
		xor	ebx, ebx
		push	esi
		push	edi
		mov	edi, [esp+28h+arg_0]
		push	59Eh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	10h
		mov	[esp+34h+szContainer], eax
		call	_CRYPTO_malloc
		mov	esi, [esp+34h+dwProvType]
		push	esi
		push	ebp
		push	[esp+3Ch+szContainer]
		mov	[esp+40h+var_14], eax
		push	offset ??_C@_0DB@POFFGHFI@capi_get_key?0?5contname?$DN?$CFs?0?5provn@ ;	"capi_get_key, contname=%s, provname=%s,"...
		push	edi
		call	_CAPI_trace
		add	esp, 20h
		mov	eax, 20h ; ' '
		test	dword ptr [edi+1Ch], 20000h
		mov	edi, [esp+28h+var_14]
		cmovnz	ebx, eax
		push	ebx		; dwFlags
		push	esi		; dwProvType
		push	ebp		; szProvider
		push	[esp+34h+szContainer] ;	szContainer
		lea	eax, [edi+4]
		push	eax		; phProv
		call	dword ptr ds:__imp__CryptAcquireContextA@20 ; CryptAcquireContextA(x,x,x,x,x)
		test	eax, eax
		jnz	short loc_2490
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_242F
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_242F:				; CODE XREF: _capi_get_key+87j
		push	5B1h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	67h ; 'g'
		push	67h ; 'g'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+30h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+38h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch
		push	edi
		call	_CRYPTO_free
		add	esp, 4
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+18h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18h
		retn
; ---------------------------------------------------------------------------

loc_2490:				; CODE XREF: _capi_get_key+7Ej
		mov	esi, [esp+28h+dwKeySpec]
		lea	eax, [edi+8]
		push	eax		; phUserKey
		push	esi		; dwKeySpec
		push	dword ptr [edi+4] ; hProv
		call	dword ptr ds:__imp__CryptGetUserKey@12 ; CryptGetUserKey(x,x,x)
		test	eax, eax
		jnz	short loc_2525
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_24B9
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_24B9:				; CODE XREF: _capi_get_key+111j
		push	5B6h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	71h ; 'q'
		push	67h ; 'g'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+30h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+38h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch
		push	0		; dwFlags
		push	dword ptr [edi+4] ; hProv
		call	dword ptr ds:__imp__CryptReleaseContext@8 ; CryptReleaseContext(x,x)

$err$26:
		push	edi
		call	_CRYPTO_free
		add	esp, 4
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+18h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18h
		retn
; ---------------------------------------------------------------------------

loc_2525:				; CODE XREF: _capi_get_key+108j
		mov	ecx, [esp+28h+var_4]
		mov	eax, edi
		mov	[edi+0Ch], esi
		mov	dword ptr [edi], 0
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18h
		retn
_capi_get_key	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2544h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_get_pkey	proc near		; CODE XREF: _capi_load_privkey+5Fp
					; _capi_load_ssl_client_cert+220p

var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
pdwDataLen	= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 20h ; ' '
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+20h+var_4], eax
		mov	eax, [esp+20h+arg_0]
		lea	ecx, [esp+20h+pdwDataLen]
		push	ebx
		push	ebp
		push	esi
		push	ecx		; pdwDataLen
		xor	ebp, ebp
		mov	[esp+30h+var_14], eax
		mov	eax, [esp+30h+arg_4]
		xor	ebx, ebx
		push	ebp		; pbData
		push	ebp		; dwFlags
		push	6		; dwBlobType
		push	ebp		; hExpKey
		push	dword ptr [eax+8] ; hKey
		mov	[esp+44h+var_1C], eax
		xor	esi, esi
		call	dword ptr ds:__imp__CryptExportKey@24 ;	CryptExportKey(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_25F3
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_259C
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_259C:				; CODE XREF: _capi_get_pkey+4Cj
		push	27Bh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	75h ; 'u'
		push	73h ; 's'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+34h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+3Ch+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch
		xor	eax, eax
		pop	esi
		pop	ebp
		pop	ebx
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_25F3:				; CODE XREF: _capi_get_pkey+43j
		push	edi
		push	280h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	[esp+38h+pdwDataLen]
		call	_CRYPTO_malloc
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jz	$memerr$86
		lea	eax, [esp+30h+pdwDataLen]
		push	eax		; pdwDataLen
		mov	eax, [esp+34h+var_1C]
		push	edi		; pbData
		push	0		; dwFlags
		push	6		; dwBlobType
		push	0		; hExpKey
		push	dword ptr [eax+8] ; hKey
		call	dword ptr ds:__imp__CryptExportKey@24 ;	CryptExportKey(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_268C
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2644
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2644:				; CODE XREF: _capi_get_pkey+F4j
		push	286h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	74h ; 't'
		push	73h ; 's'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+38h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+40h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch
		jmp	$err$87
; ---------------------------------------------------------------------------

loc_268C:				; CODE XREF: _capi_get_pkey+EBj
		cmp	byte ptr [edi],	6
		jz	short loc_26B5
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_26A4
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_26A4:				; CODE XREF: _capi_get_pkey+154j
		push	28Dh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	73h ; 's'
		jmp	loc_29B8
; ---------------------------------------------------------------------------

loc_26B5:				; CODE XREF: _capi_get_pkey+14Bj
		mov	eax, [edi+4]
		cmp	eax, 2400h
		jz	loc_28CA
		cmp	eax, 0A400h
		jz	loc_28CA
		cmp	eax, 2200h
		jnz	loc_288C
		mov	eax, [edi+8]
		cmp	eax, 31535344h
		jz	short loc_2706
		push	eax
		push	offset ??_C@_03OPHMLOFF@?$CFlx?$AA@ ; "%lx"
		lea	eax, [esp+38h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		push	2C0h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	7Ah ; 'z'
		jmp	loc_28F2
; ---------------------------------------------------------------------------

loc_2706:				; CODE XREF: _capi_get_pkey+19Dj
		mov	eax, [edi+0Ch]
		lea	ebp, [edi+10h]
		push	[esp+30h+var_14]
		shr	eax, 3
		mov	[esp+34h+var_20], eax
		call	_DSA_new_method
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jz	loc_2997
		call	_BN_new
		mov	[esi+0Ch], eax
		call	_BN_new
		mov	[esi+10h], eax
		call	_BN_new
		mov	[esi+14h], eax
		call	_BN_new
		mov	ecx, [esi+0Ch]
		mov	[esi+18h], eax
		test	ecx, ecx
		jz	loc_2997
		cmp	[esi+10h], ebx
		jz	loc_2997
		cmp	[esi+14h], ebx
		jz	loc_2997
		test	eax, eax
		jz	loc_2997
		push	[esp+30h+var_20]
		push	ebp
		push	ecx
		call	_lend_tobn
		add	esp, 0Ch
		test	eax, eax
		jz	loc_2997
		add	ebp, [esp+30h+var_20]
		mov	edx, [esi+10h]
		push	edx
		push	14h
		movzx	eax, byte ptr [ebp+13h]
		mov	cl, [ebp+0]
		mov	[ebp+0], al
		movzx	eax, byte ptr [ebp+12h]
		mov	[ebp+13h], cl
		mov	cl, [ebp+1]
		mov	[ebp+1], al
		movzx	eax, byte ptr [ebp+11h]
		mov	[ebp+12h], cl
		mov	cl, [ebp+2]
		mov	[ebp+2], al
		movzx	eax, byte ptr [ebp+10h]
		mov	[ebp+11h], cl
		mov	cl, [ebp+3]
		mov	[ebp+3], al
		movzx	eax, byte ptr [ebp+0Fh]
		mov	[ebp+10h], cl
		mov	cl, [ebp+4]
		mov	[ebp+4], al
		movzx	eax, byte ptr [ebp+0Eh]
		mov	[ebp+0Fh], cl
		mov	cl, [ebp+5]
		mov	[ebp+5], al
		movzx	eax, byte ptr [ebp+0Dh]
		mov	[ebp+0Eh], cl
		mov	cl, [ebp+6]
		mov	[ebp+6], al
		movzx	eax, byte ptr [ebp+0Ch]
		mov	[ebp+0Dh], cl
		mov	cl, [ebp+7]
		mov	[ebp+7], al
		movzx	eax, byte ptr [ebp+0Bh]
		mov	[ebp+0Ch], cl
		mov	cl, [ebp+8]
		mov	[ebp+8], al
		movzx	eax, byte ptr [ebp+0Ah]
		mov	[ebp+0Bh], cl
		mov	cl, [ebp+9]
		mov	[ebp+9], al
		push	ebp
		mov	[ebp+0Ah], cl
		call	_BN_bin2bn
		add	esp, 0Ch
		test	eax, eax
		jz	loc_2997
		push	[esp+30h+var_20]
		add	ebp, 14h
		push	ebp
		push	dword ptr [esi+14h]
		call	_lend_tobn
		add	esp, 0Ch
		test	eax, eax
		jz	loc_2997
		mov	eax, [esp+30h+var_20]
		push	eax
		add	eax, ebp
		push	eax
		push	dword ptr [esi+18h]
		call	_lend_tobn
		add	esp, 0Ch
		test	eax, eax
		jz	loc_2997
		push	[esp+30h+var_1C]
		push	ds:_dsa_capi_idx
		push	esi
		call	_DSA_set_ex_data
		add	esp, 0Ch
		call	_EVP_PKEY_new
		mov	ebp, eax
		test	ebp, ebp
		jz	$memerr$86
		push	esi
		push	74h ; 't'
		push	ebp
		call	_EVP_PKEY_assign
		add	esp, 0Ch
		xor	esi, esi
		jmp	$err$87
; ---------------------------------------------------------------------------

loc_288C:				; CODE XREF: _capi_get_pkey+18Fj
		push	eax
		push	offset ??_C@_03OPHMLOFF@?$CFlx?$AA@ ; "%lx"
		lea	eax, [esp+38h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		push	2E7h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	79h ; 'y'
		push	73h ; 's'
		call	_ERR_CAPI_error
		lea	eax, [esp+50h+var_10]
		push	eax
		push	offset ??_C@_0M@KIGBCPOO@aiKeyAlg?$DN0x?$AA@ ; "aiKeyAlg=0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 2Ch
		jmp	$err$87
; ---------------------------------------------------------------------------

loc_28CA:				; CODE XREF: _capi_get_pkey+179j
					; _capi_get_pkey+184j
		mov	eax, [edi+8]
		cmp	eax, 31415352h
		jz	short loc_2912
		push	eax
		push	offset ??_C@_03OPHMLOFF@?$CFlx?$AA@ ; "%lx"
		lea	eax, [esp+38h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		push	299h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	7Bh ; '{'

loc_28F2:				; CODE XREF: _capi_get_pkey+1BDj
		push	73h ; 's'
		call	_ERR_CAPI_error
		lea	eax, [esp+50h+var_10]
		push	eax
		push	offset ??_C@_08NGCPDKPB@magic?$DN0x?$AA@ ; "magic=0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 2Ch
		jmp	$err$87
; ---------------------------------------------------------------------------

loc_2912:				; CODE XREF: _capi_get_pkey+38Ej
		push	[esp+30h+var_14]
		call	_RSA_new_method
		mov	ebx, eax
		add	esp, 4
		test	ebx, ebx
		jz	short $memerr$86
		call	_BN_new
		mov	[ebx+14h], eax
		call	_BN_new
		mov	ecx, [ebx+14h]
		mov	[ebx+10h], eax
		test	ecx, ecx
		jz	short $memerr$86
		test	eax, eax
		jz	short $memerr$86
		push	dword ptr [edi+10h]
		push	ecx
		call	_BN_set_word
		add	esp, 8
		test	eax, eax
		jz	short $memerr$86
		mov	eax, [edi+0Ch]
		shr	eax, 3
		push	eax
		lea	eax, [edi+14h]
		push	eax
		push	dword ptr [ebx+10h]
		call	_lend_tobn
		add	esp, 0Ch
		test	eax, eax
		jz	short $memerr$86
		push	[esp+30h+var_1C]
		push	ds:_rsa_capi_idx
		push	ebx
		call	_RSA_set_ex_data
		add	esp, 0Ch
		call	_EVP_PKEY_new
		mov	ebp, eax
		test	ebp, ebp
		jz	short $memerr$86
		push	ebx
		push	6
		push	ebp
		call	_EVP_PKEY_assign
		add	esp, 0Ch
		xor	ebx, ebx
		jmp	short $err$87
; ---------------------------------------------------------------------------

loc_2997:				; CODE XREF: _capi_get_pkey+1DFj
					; _capi_get_pkey+20Aj ...
		xor	ebp, ebp

$memerr$86:				; CODE XREF: _capi_get_pkey+CAj
					; _capi_get_pkey+32Fj ...
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_29AC
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_29AC:				; CODE XREF: _capi_get_pkey+45Cj
		push	2F9h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	41h ; 'A'

loc_29B8:				; CODE XREF: _capi_get_pkey+16Cj
		push	73h ; 's'
		push	eax
		call	_ERR_put_error
		add	esp, 14h

$err$87:				; CODE XREF: _capi_get_pkey+143j
					; _capi_get_pkey+343j ...
		test	edi, edi
		jz	short loc_29D0
		push	edi
		call	_CRYPTO_free
		add	esp, 4

loc_29D0:				; CODE XREF: _capi_get_pkey+481j
		pop	edi
		test	ebp, ebp
		jnz	short loc_29EF
		test	ebx, ebx
		jz	short loc_29E2
		push	ebx
		call	_RSA_free
		add	esp, 4

loc_29E2:				; CODE XREF: _capi_get_pkey+493j
		test	esi, esi
		jz	short loc_29EF
		push	esi
		call	_DSA_free
		add	esp, 4

loc_29EF:				; CODE XREF: _capi_get_pkey+48Fj
					; _capi_get_pkey+4A0j
		mov	ecx, [esp+2Ch+var_4]
		mov	eax, ebp
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
_capi_get_pkey	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2A04h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_get_prov_info(int, PCCERT_CONTEXT pCertContext)
		public _capi_get_prov_info
_capi_get_prov_info proc near		; CODE XREF: _capi_dump_cert+FAp
					; _capi_get_cert_key+Cp

pcbData		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
pCertContext	= dword	ptr  8

		mov	eax, 14h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+14h+var_4], eax
		push	edi
		mov	edi, [esp+18h+pCertContext]
		lea	eax, [esp+18h+pcbData]
		push	eax		; pcbData
		push	0		; pvData
		push	2		; dwPropId
		push	edi		; pCertContext
		call	dword ptr ds:__imp__CertGetCertificateContextProperty@16 ; CertGetCertificateContextProperty(x,x,x,x)
		test	eax, eax
		jnz	short loc_2A42
		pop	edi
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_2A42:				; CODE XREF: _capi_get_prov_info+2Cj
		push	esi
		push	4D6h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	[esp+24h+pcbData]
		call	_CRYPTO_malloc
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_2A9C
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2A72
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2A72:				; CODE XREF: _capi_get_prov_info+62j
		push	4D8h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	41h ; 'A'
		push	69h ; 'i'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		pop	edi
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_2A9C:				; CODE XREF: _capi_get_prov_info+59j
		lea	eax, [esp+1Ch+pcbData]
		push	eax		; pcbData
		push	esi		; pvData
		push	2		; dwPropId
		push	edi		; pCertContext
		call	dword ptr ds:__imp__CertGetCertificateContextProperty@16 ; CertGetCertificateContextProperty(x,x,x,x)
		test	eax, eax
		jnz	short loc_2B1E
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2AC2
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2AC2:				; CODE XREF: _capi_get_prov_info+B2j
		push	4DEh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Dh ; 'm'
		push	69h ; 'i'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+24h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+2Ch+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		push	esi
		call	_CRYPTO_free
		add	esp, 20h
		xor	eax, eax
		pop	esi
		pop	edi
		mov	ecx, [esp+14h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_2B1E:				; CODE XREF: _capi_get_prov_info+A9j
		mov	ecx, [esp+1Ch+var_4]
		mov	eax, esi
		pop	esi
		pop	edi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 14h
		retn
_capi_get_prov_info endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2B34h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_get_provname(int, int, DWORD	*pdwProvType, DWORD dwIndex)
_capi_get_provname proc	near		; CODE XREF: _capi_ctx_set_provname_idx+1Ep
					; _capi_list_providers+41p ...

pcbProvName	= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
pdwProvType	= dword	ptr  0Ch
dwIndex		= dword	ptr  10h

		mov	eax, 18h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+18h+var_4], eax
		mov	eax, [esp+18h+arg_4]
		push	ebp
		mov	ebp, [esp+1Ch+arg_0]
		push	esi
		mov	esi, [esp+20h+pdwProvType]
		push	edi
		mov	edi, [esp+24h+dwIndex]
		push	edi
		push	offset ??_C@_0BN@MKNBHKEK@capi_get_provname?0?5index?$DN?$CFd?6?$AA@ ; "capi_get_provname, index=%d\n"
		push	ebp
		mov	[esp+30h+var_14], eax
		call	_CAPI_trace
		add	esp, 0Ch
		lea	eax, [esp+24h+pcbProvName]
		push	eax		; pcbProvName
		push	0		; szProvName
		push	esi		; pdwProvType
		push	0		; dwFlags
		push	0		; pdwReserved
		push	edi		; dwIndex
		call	dword ptr ds:__imp__CryptEnumProvidersA@24 ; CryptEnumProvidersA(x,x,x,x,x,x)
		test	eax, eax
		jnz	loc_2C12
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		mov	esi, eax
		cmp	esi, 103h
		jnz	short loc_2BB1
		pop	edi
		pop	esi
		mov	eax, 2
		pop	ebp
		mov	ecx, [esp+18h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18h
		retn
; ---------------------------------------------------------------------------

loc_2BB1:				; CODE XREF: _capi_get_provname+64j
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2BC4
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2BC4:				; CODE XREF: _capi_get_provname+84j
		push	44Dh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	68h ; 'h'
		push	68h ; 'h'
		push	eax
		call	_ERR_put_error
		push	esi
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+40h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+48h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 30h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		mov	ecx, [esp+18h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18h
		retn
; ---------------------------------------------------------------------------

loc_2C12:				; CODE XREF: _capi_get_provname+50j
		push	ebx
		push	454h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	[esp+30h+pcbProvName]
		call	_CRYPTO_malloc
		add	esp, 0Ch
		mov	ebx, eax
		lea	eax, [esp+28h+pcbProvName]
		push	eax		; pcbProvName
		push	ebx		; szProvName
		push	esi		; pdwProvType
		push	0		; dwFlags
		push	0		; pdwReserved
		push	edi		; dwIndex
		call	dword ptr ds:__imp__CryptEnumProvidersA@24 ; CryptEnumProvidersA(x,x,x,x,x,x)
		test	eax, eax
		jnz	loc_2CCF
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		mov	esi, eax
		cmp	esi, 103h
		jnz	short loc_2C6D
		pop	ebx
		pop	edi
		pop	esi
		mov	eax, 2
		pop	ebp
		mov	ecx, [esp+18h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18h
		retn
; ---------------------------------------------------------------------------

loc_2C6D:				; CODE XREF: _capi_get_provname+11Fj
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2C80
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2C80:				; CODE XREF: _capi_get_provname+140j
		push	459h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	68h ; 'h'
		push	68h ; 'h'
		push	eax
		call	_ERR_put_error
		push	esi
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+44h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+4Ch+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 30h
		xor	eax, eax
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
		mov	ecx, [esp+18h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18h
		retn
; ---------------------------------------------------------------------------

loc_2CCF:				; CODE XREF: _capi_get_provname+10Bj
		mov	eax, [esp+28h+var_14]
		mov	[eax], ebx
		push	dword ptr [esi]
		push	ebx
		push	offset ??_C@_0CO@CCFBAPOA@capi_get_provname?0?5returned?5name@ ; "capi_get_provname, returned name=%s, ty"...
		push	ebp
		call	_CAPI_trace
		mov	ecx, [esp+38h+var_4]
		add	esp, 10h
		mov	eax, 1
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18h
		retn
_capi_get_provname endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2D00h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_init	proc near		; DATA XREF: _bind_capi+46o

arg_0		= dword	ptr  4

		cmp	ds:_capi_idx, 0
		jge	loc_2DB2
		push	0
		push	0
		push	0
		push	0
		push	0
		call	_ENGINE_get_ex_new_index
		add	esp, 14h
		mov	ds:_capi_idx, eax
		test	eax, eax
		js	$memerr$10
		push	0
		push	0
		push	0
		push	0
		push	0
		call	_X509_get_ex_new_index
		push	0
		push	0
		push	0
		push	0
		push	0
		mov	ds:_cert_capi_idx, eax
		call	_RSA_get_ex_new_index
		mov	ds:_rsa_capi_idx, eax
		call	_RSA_PKCS1_SSLeay
		push	0
		push	0
		push	0
		mov	ecx, [eax+4]
		mov	ds:dword_DD0, ecx
		mov	ecx, [eax+8]
		mov	ds:dword_DD4, ecx
		mov	ecx, [eax+14h]
		mov	ds:dword_DE0, ecx
		mov	eax, [eax+18h]
		push	0
		push	0
		mov	ds:dword_DE4, eax
		call	_DSA_get_ex_new_index
		add	esp, 3Ch
		mov	ds:_dsa_capi_idx, eax
		call	_DSA_OpenSSL
		mov	ecx, [eax+0Ch]
		mov	ds:dword_E10, ecx
		mov	ecx, [eax+10h]
		mov	ds:dword_E14, ecx
		mov	eax, [eax+14h]
		mov	ds:dword_E18, eax

loc_2DB2:				; CODE XREF: _capi_init+7j
		call	_capi_ctx_new
		test	eax, eax
		jnz	short loc_2DE8

$memerr$10:				; CODE XREF: _capi_init+26j
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2DCE
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2DCE:				; CODE XREF: _capi_init+C2j
		push	1FEh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	41h ; 'A'
		push	6Ah ; 'j'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_2DE8:				; CODE XREF: _capi_init+B9j
		push	eax
		push	ds:_capi_idx
		push	[esp+8+arg_0]
		call	_ENGINE_set_ex_data
		add	esp, 0Ch
		mov	eax, 1
		retn
_capi_init	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2E04h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_list_certs(int, int,	void *pvFindPara)
		public _capi_list_certs
_capi_list_certs proc near		; CODE XREF: _capi_ctrl+9Fp
					; _capi_ctrl+BEp

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
pvFindPara	= dword	ptr  0Ch

		mov	eax, 4
		call	__chkstk
		push	ebx
		mov	ebx, [esp+8+arg_0]
		push	ebp
		push	esi
		mov	esi, offset ??_C@_02BDIFNOGD@MY?$AA@ ; `string'
		mov	[esp+10h+var_4], 1
		mov	eax, [ebx+14h]
		test	eax, eax
		cmovnz	esi, eax
		push	esi
		push	offset ??_C@_0BM@MCCBDIAM@Listing?5certs?5for?5store?5?$CFs?6?$AA@ ; "Listing certs for	store %s\n"
		push	ebx
		call	_CAPI_trace
		push	esi		; pvPara
		push	ebx		; int
		call	_capi_open_store
		mov	ebp, eax
		add	esp, 14h
		test	ebp, ebp
		jnz	short loc_2E4B
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_2E4B:				; CODE XREF: _capi_list_certs+40j
		mov	eax, [esp+10h+pvFindPara]
		test	eax, eax
		jz	short loc_2E9E
		push	ebp		; hCertStore
		push	eax		; pvFindPara
		push	ebx		; int
		call	_capi_find_cert
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_2E77
		push	eax		; dwFlags
		push	ebp		; hCertStore
		mov	[esp+18h+var_4], eax
		call	dword ptr ds:__imp__CertCloseStore@8 ; CertCloseStore(x,x)
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_2E77:				; CODE XREF: _capi_list_certs+5Ej
		push	esi		; pCertContext
		push	[esp+14h+arg_4]	; int
		push	ebx		; int
		call	_capi_dump_cert
		add	esp, 0Ch
		push	esi		; pCertContext
		call	dword ptr ds:__imp__CertFreeCertificateContext@4 ; CertFreeCertificateContext(x)
		push	0		; dwFlags
		push	ebp		; hCertStore
		call	dword ptr ds:__imp__CertCloseStore@8 ; CertCloseStore(x,x)
		mov	eax, [esp+10h+var_4]
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_2E9E:				; CODE XREF: _capi_list_certs+4Dj
		push	edi
		xor	edi, edi
		push	edi		; pPrevCertContext
		push	ebp		; hCertStore
		call	dword ptr ds:__imp__CertEnumCertificatesInStore@8 ; CertEnumCertificatesInStore(x,x)
		mov	esi, eax
		test	esi, esi
		jz	short loc_2EE0
		nop	dword ptr [eax+eax+00h]

loc_2EB4:				; CODE XREF: _capi_list_certs+DAj
		push	edi
		push	offset ??_C@_0BA@OOMCMFID@Certificate?5?$CFd?6?$AA@ ; "Certificate %d\n"
		push	[esp+1Ch+arg_4]
		call	_BIO_printf
		push	esi		; pCertContext
		push	[esp+24h+arg_4]	; int
		push	ebx		; int
		call	_capi_dump_cert
		add	esp, 18h
		inc	edi
		push	esi		; pPrevCertContext
		push	ebp		; hCertStore
		call	dword ptr ds:__imp__CertEnumCertificatesInStore@8 ; CertEnumCertificatesInStore(x,x)
		mov	esi, eax
		test	esi, esi
		jnz	short loc_2EB4

loc_2EE0:				; CODE XREF: _capi_list_certs+A9j
		pop	edi

$err$20:				; dwFlags
		push	0
		push	ebp		; hCertStore
		call	dword ptr ds:__imp__CertCloseStore@8 ; CertCloseStore(x,x)
		mov	eax, [esp+10h+var_4]
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
_capi_list_certs endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2EF4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_list_containers proc near		; CODE XREF: _capi_ctrl+D9p

pdwDataLen	= dword	ptr -20h
phProv		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 20h ; ' '
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+20h+var_4], eax
		mov	eax, [esp+20h+arg_4]
		push	ebp
		mov	ebp, [esp+24h+arg_0]
		mov	[esp+24h+var_14], eax
		mov	[esp+24h+pdwDataLen], 0
		push	dword ptr [ebp+10h]
		push	dword ptr [ebp+0Ch]
		push	offset ??_C@_0CG@EMKNBOAN@Listing?5containers?5CSP?$DN?$CFs?0?5type?5@ ; "Listing containers CSP=%s, type = %d\n"
		push	ebp
		call	_CAPI_trace
		add	esp, 10h
		lea	eax, [esp+24h+phProv]
		push	0F0000000h	; dwFlags
		push	dword ptr [ebp+10h] ; dwProvType
		push	dword ptr [ebp+0Ch] ; szProvider
		push	0		; szContainer
		push	eax		; phProv
		call	dword ptr ds:__imp__CryptAcquireContextA@20 ; CryptAcquireContextA(x,x,x,x,x)
		test	eax, eax
		jnz	short loc_2FB6
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2F61
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2F61:				; CODE XREF: _capi_list_containers+61j
		push	495h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	67h ; 'g'
		push	6Bh ; 'k'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+2Ch+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+34h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch
		xor	eax, eax
		pop	ebp
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_2FB6:				; CODE XREF: _capi_list_containers+58j
		push	1		; dwFlags
		lea	eax, [esp+28h+pdwDataLen]
		push	eax		; pdwDataLen
		push	0		; pbData
		push	2		; dwParam
		push	[esp+34h+phProv] ; hProv
		call	dword ptr ds:__imp__CryptGetProvParam@20 ; CryptGetProvParam(x,x,x,x,x)
		test	eax, eax
		jnz	short loc_3043
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_2FE2
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_2FE2:				; CODE XREF: _capi_list_containers+E2j
		push	49Bh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Bh ; 'k'
		push	6Bh ; 'k'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+2Ch+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+34h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch
		push	0		; dwFlags
		push	[esp+28h+phProv] ; hProv
		call	dword ptr ds:__imp__CryptReleaseContext@8 ; CryptReleaseContext(x,x)
		xor	eax, eax
		pop	ebp
		mov	ecx, [esp+20h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_3043:				; CODE XREF: _capi_list_containers+D9j
		push	ebx
		push	esi
		push	edi
		push	[esp+30h+pdwDataLen]
		push	offset ??_C@_0BK@PLFNGEEB@Got?5max?5container?5len?5?$CFd?6?$AA@ ; "Got	max container len %d\n"
		push	ebp
		call	_CAPI_trace
		mov	eax, [esp+3Ch+pdwDataLen]
		mov	ecx, 400h
		test	eax, eax
		push	4A3h
		cmovz	eax, ecx
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	eax
		mov	[esp+48h+pdwDataLen], eax
		call	_CRYPTO_malloc
		mov	edi, eax
		add	esp, 18h
		test	edi, edi
		jnz	short loc_30AE
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_3093
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_3093:				; CODE XREF: _capi_list_containers+193j
		push	4A5h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	41h ; 'A'
		push	6Bh ; 'k'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	ebx, ebx
		jmp	short $done$57
; ---------------------------------------------------------------------------

loc_30AE:				; CODE XREF: _capi_list_containers+18Aj
		xor	esi, esi
		nop	dword ptr [eax+00h]

loc_30B4:				; CODE XREF: _capi_list_containers+221j
		mov	eax, [esp+30h+pdwDataLen]
		xor	ebx, ebx
		test	esi, esi
		mov	[esp+30h+var_18], eax
		lea	eax, [esp+30h+var_18]
		mov	byte ptr [edi],	0
		setz	bl
		push	ebx		; dwFlags
		push	eax		; pdwDataLen
		push	edi		; pbData
		push	2		; dwParam
		push	[esp+40h+phProv] ; hProv
		call	dword ptr ds:__imp__CryptGetProvParam@20 ; CryptGetProvParam(x,x,x,x,x)
		test	eax, eax
		jz	short loc_3158
		push	ebx
		push	esi
		push	[esp+38h+var_18]
		push	edi
		push	offset ??_C@_0CP@DGPAJBBG@Container?5name?5?$CFs?0?5len?$DN?$CFd?0?5index@ ; "Container	name %s, len=%d, index=%d, fl"...
		push	ebp
		call	_CAPI_trace
		add	esp, 18h
		cmp	byte ptr [edi],	0
		jnz	short loc_3101
		mov	eax, [esp+30h+var_18]
		cmp	eax, [esp+30h+pdwDataLen]
		jz	short loc_3117

loc_3101:				; CODE XREF: _capi_list_containers+201j
		push	edi
		push	esi
		push	offset ??_C@_07JDGBAOJP@?$CFd?4?5?$CFs?6?$AA@ ;	"%d. %s\n"
		push	[esp+3Ch+var_14]
		call	_BIO_printf
		add	esp, 10h
		inc	esi
		jmp	short loc_30B4
; ---------------------------------------------------------------------------

loc_3117:				; CODE XREF: _capi_list_containers+20Bj
		push	offset ??_C@_0CB@PKILDGGJ@Enumerate?5bug?3?5using?5workaround?6@ ; "Enumerate bug: using workaround\n"
		push	ebp
		call	_CAPI_trace
		add	esp, 8

loc_3125:				; CODE XREF: _capi_list_containers+272j
		mov	ebx, 1

$done$57:				; CODE XREF: _capi_list_containers+1B8j
					; _capi_list_containers+2C3j
		test	edi, edi
		jz	short loc_3137
		push	edi
		call	_CRYPTO_free
		add	esp, 4

loc_3137:				; CODE XREF: _capi_list_containers+238j
		push	0		; dwFlags
		push	[esp+34h+phProv] ; hProv
		call	dword ptr ds:__imp__CryptReleaseContext@8 ; CryptReleaseContext(x,x)
		mov	ecx, [esp+30h+var_4]
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebx
		pop	ebp
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 20h
		retn
; ---------------------------------------------------------------------------

loc_3158:				; CODE XREF: _capi_list_containers+1E7j
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		mov	esi, eax
		cmp	esi, 103h
		jz	short loc_3125
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_317B
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_317B:				; CODE XREF: _capi_list_containers+27Bj
		push	4B6h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Bh ; 'k'
		push	6Bh ; 'k'
		push	eax
		call	_ERR_put_error
		push	esi
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+4Ch+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+54h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 30h

$err$58:
		xor	ebx, ebx
		jmp	$done$57
_capi_list_containers endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 31BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_list_providers proc near		; CODE XREF: _capi_ctrl+82p

var_8		= dword	ptr -8
pdwProvType	= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 8
		call	__chkstk
		push	ebx
		mov	ebx, [esp+0Ch+arg_0]
		push	ebp
		push	edi
		push	offset ??_C@_0BF@FLDDNHOH@capi_list_providers?6?$AA@ ; "capi_list_providers\n"
		push	ebx
		mov	[esp+1Ch+var_8], 0
		call	_CAPI_trace
		mov	ebp, [esp+1Ch+arg_4]
		push	offset ??_C@_0BB@NPGFOHNK@Available?5CSPs?3?6?$AA@ ; "Available	CSPs:\n"
		push	ebp
		call	_BIO_printf
		xor	edi, edi
		lea	eax, [esp+24h+pdwProvType]
		push	edi		; dwIndex
		push	eax		; pdwProvType
		lea	eax, [esp+2Ch+var_8]
		push	eax		; int
		push	ebx		; int
		call	_capi_get_provname
		add	esp, 20h
		cmp	eax, 2
		jz	short loc_3252
		push	esi
		nop

loc_320C:				; CODE XREF: _capi_list_providers+87j
		test	eax, eax
		jz	short loc_3245
		push	[esp+18h+pdwProvType]
		mov	esi, [esp+1Ch+var_8]
		push	esi
		push	edi
		push	offset ??_C@_0BB@NOPMFHPL@?$CFd?4?5?$CFs?0?5type?5?$CFd?6?$AA@ ; "%d. %s, type %d\n"
		push	ebp
		call	_BIO_printf
		push	esi
		call	_CRYPTO_free
		inc	edi
		lea	eax, [esp+30h+pdwProvType]
		push	edi		; dwIndex
		push	eax		; pdwProvType
		lea	eax, [esp+38h+var_8]
		push	eax		; int
		push	ebx		; int
		call	_capi_get_provname
		add	esp, 28h
		cmp	eax, 2
		jnz	short loc_320C

loc_3245:				; CODE XREF: _capi_list_providers+52j
		pop	esi
		pop	edi
		pop	ebp
		mov	eax, 1
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_3252:				; CODE XREF: _capi_list_providers+4Cj
		pop	edi
		pop	ebp
		mov	eax, 1
		pop	ebx
		add	esp, 8
		retn
_capi_list_providers endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3260h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_load_privkey(int, void *pvFindPara)
_capi_load_privkey proc	near		; DATA XREF: _bind_capi+A8o

arg_0		= dword	ptr  4
pvFindPara	= dword	ptr  8

		push	edi
		push	ds:_capi_idx
		mov	edi, [esp+8+arg_0]
		push	edi
		call	_ENGINE_get_ex_data
		add	esp, 8
		test	eax, eax
		jnz	short loc_32A6
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_328B
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_328B:				; CODE XREF: _capi_load_privkey+1Fj
		push	307h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	64h ; 'd'
		push	6Ch ; 'l'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_32A6:				; CODE XREF: _capi_load_privkey+16j
		push	esi
		push	[esp+8+pvFindPara] ; pvFindPara
		push	eax		; int
		call	_capi_find_key
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jnz	short loc_32BD
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_32BD:				; CODE XREF: _capi_load_privkey+58j
		push	esi
		push	edi
		call	_capi_get_pkey
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jnz	short loc_32D6
		push	esi
		call	_capi_free_key
		add	esp, 4

loc_32D6:				; CODE XREF: _capi_load_privkey+6Bj
		pop	esi
		mov	eax, edi
		pop	edi
		retn
_capi_load_privkey endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 32DCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_load_ssl_client_cert proc	near	; DATA XREF: _bind_capi+BAo

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
hCertStore	= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	eax, 10h
		call	__chkstk
		push	ebp
		push	esi
		push	ds:_capi_idx
		xor	ebp, ebp
		push	[esp+1Ch+arg_0]
		call	_ENGINE_get_ex_data
		mov	esi, eax
		mov	ecx, offset ??_C@_02BDIFNOGD@MY?$AA@ ; `string'
		mov	eax, [esp+20h+arg_C]
		mov	[esp+20h+var_10], esi
		mov	[eax], ebp
		mov	eax, [esp+20h+arg_10]
		mov	[eax], ebp
		mov	eax, [esi+18h]
		test	eax, eax
		cmovnz	ecx, eax
		push	ecx		; pvPara
		push	esi		; int
		call	_capi_open_store
		add	esp, 10h
		mov	[esp+18h+hCertStore], eax
		test	eax, eax
		jnz	short loc_3330
		pop	esi
		pop	ebp
		add	esp, 10h
		retn
; ---------------------------------------------------------------------------

loc_3330:				; CODE XREF: _capi_load_ssl_client_cert+4Cj
		push	ebx
		push	edi
		xor	ebx, ebx
		push	ebx		; pPrevCertContext
		push	eax		; hCertStore
		mov	[esp+28h+var_C], ebx
		call	dword ptr ds:__imp__CertEnumCertificatesInStore@8 ; CertEnumCertificatesInStore(x,x)
		mov	edi, eax
		test	edi, edi
		jz	loc_341F
		xchg	ax, ax

loc_334C:				; CODE XREF: _capi_load_ssl_client_cert+13Dj
		mov	eax, [edi+4]
		mov	[esp+20h+var_4], eax
		lea	eax, [esp+20h+var_4]
		push	dword ptr [edi+8]
		push	eax
		push	0
		call	_d2i_X509
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_3383
		mov	esi, [esp+20h+var_10]
		push	ebx
		push	offset ??_C@_0BM@GCCGDACP@Can?8t?5Parse?5Certificate?5?$CFd?6?$AA@ ; "Can't Parse Certificate %d\n"
		push	esi
		call	_CAPI_trace
		add	esp, 0Ch
		jmp	loc_3405
; ---------------------------------------------------------------------------

loc_3383:				; CODE XREF: _capi_load_ssl_client_cert+8Dj
		push	esi
		push	[esp+24h+arg_8]
		call	_cert_issuer_match
		add	esp, 8
		test	eax, eax
		jz	short loc_33F8
		push	0
		push	1
		push	esi
		call	_X509_check_purpose
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_33F8
		push	edi		; pCertContext
		push	[esp+24h+var_10] ; int
		call	_capi_get_cert_key
		mov	ebx, eax
		add	esp, 8
		test	ebx, ebx
		jnz	short loc_33C4
		push	esi
		call	_X509_free
		mov	ebx, [esp+24h+var_C]
		jmp	short loc_33FE
; ---------------------------------------------------------------------------

loc_33C4:				; CODE XREF: _capi_load_ssl_client_cert+DAj
		push	edi		; pCertContext
		call	dword ptr ds:__imp__CertDuplicateCertificateContext@4 ;	CertDuplicateCertificateContext(x)
		push	ebx
		push	ds:_cert_capi_idx
		mov	[ebx], eax
		push	esi
		call	_X509_set_ex_data
		add	esp, 0Ch
		test	ebp, ebp
		jnz	short loc_33E8
		call	_sk_new_null
		mov	ebp, eax

loc_33E8:				; CODE XREF: _capi_load_ssl_client_cert+103j
		push	esi
		push	ebp
		call	_sk_push
		mov	ebx, [esp+28h+var_C]
		add	esp, 8
		jmp	short loc_3401
; ---------------------------------------------------------------------------

loc_33F8:				; CODE XREF: _capi_load_ssl_client_cert+B6j
					; _capi_load_ssl_client_cert+C7j
		push	esi
		call	_X509_free

loc_33FE:				; CODE XREF: _capi_load_ssl_client_cert+E6j
		add	esp, 4

loc_3401:				; CODE XREF: _capi_load_ssl_client_cert+11Aj
		mov	esi, [esp+20h+var_10]

loc_3405:				; CODE XREF: _capi_load_ssl_client_cert+A2j
		push	edi		; pPrevCertContext
		push	[esp+24h+hCertStore] ; hCertStore
		inc	ebx
		mov	[esp+28h+var_C], ebx
		call	dword ptr ds:__imp__CertEnumCertificatesInStore@8 ; CertEnumCertificatesInStore(x,x)
		mov	edi, eax
		test	edi, edi
		jnz	loc_334C

loc_341F:				; CODE XREF: _capi_load_ssl_client_cert+68j
		push	0		; dwFlags
		push	[esp+24h+hCertStore] ; hCertStore
		call	dword ptr ds:__imp__CertCloseStore@8 ; CertCloseStore(x,x)
		test	ebp, ebp
		jz	loc_34E1
		mov	eax, [esi+28h]
		push	ebp
		push	[esp+24h+arg_4]
		push	[esp+28h+arg_0]
		call	eax
		mov	edi, eax
		xor	esi, esi
		push	ebp
		mov	[esp+30h+hCertStore], edi
		call	_sk_num
		add	esp, 10h
		test	eax, eax
		jle	short loc_34CE
		nop	word ptr [eax+eax+00h]

loc_345C:				; CODE XREF: _capi_load_ssl_client_cert+1F0j
		push	esi
		push	ebp
		call	_sk_value
		add	esp, 8
		mov	ebx, eax
		cmp	esi, edi
		jnz	short loc_3474
		mov	eax, [esp+20h+arg_C]
		mov	[eax], ebx
		jmp	short loc_34C0
; ---------------------------------------------------------------------------

loc_3474:				; CODE XREF: _capi_load_ssl_client_cert+18Ej
		push	ds:_cert_capi_idx
		push	ebx
		call	_X509_get_ex_data
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jz	short loc_34B3
		push	dword ptr [edi+8] ; hKey
		call	dword ptr ds:__imp__CryptDestroyKey@4 ;	CryptDestroyKey(x)
		push	0		; dwFlags
		push	dword ptr [edi+4] ; hProv
		call	dword ptr ds:__imp__CryptReleaseContext@8 ; CryptReleaseContext(x,x)
		mov	eax, [edi]
		test	eax, eax
		jz	short loc_34AA
		push	eax		; pCertContext
		call	dword ptr ds:__imp__CertFreeCertificateContext@4 ; CertFreeCertificateContext(x)

loc_34AA:				; CODE XREF: _capi_load_ssl_client_cert+1C5j
		push	edi
		call	_CRYPTO_free
		add	esp, 4

loc_34B3:				; CODE XREF: _capi_load_ssl_client_cert+1ABj
		push	ebx
		call	_X509_free
		mov	edi, [esp+24h+hCertStore]
		add	esp, 4

loc_34C0:				; CODE XREF: _capi_load_ssl_client_cert+196j
		push	ebp
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_345C

loc_34CE:				; CODE XREF: _capi_load_ssl_client_cert+178j
		push	ebp
		call	_sk_free
		mov	ebx, [esp+24h+arg_C]
		add	esp, 4
		mov	eax, [ebx]
		test	eax, eax
		jnz	short loc_34EB

loc_34E1:				; CODE XREF: _capi_load_ssl_client_cert+151j
		pop	edi
		pop	ebx
		pop	esi
		xor	eax, eax
		pop	ebp
		add	esp, 10h
		retn
; ---------------------------------------------------------------------------

loc_34EB:				; CODE XREF: _capi_load_ssl_client_cert+203j
		push	ds:_cert_capi_idx
		push	eax
		call	_X509_get_ex_data
		push	eax
		push	[esp+2Ch+arg_0]
		call	_capi_get_pkey
		mov	ecx, [esp+30h+arg_10]
		push	0
		push	ds:_cert_capi_idx
		mov	[ecx], eax
		push	dword ptr [ebx]
		call	_X509_set_ex_data
		add	esp, 1Ch
		mov	eax, 1
		pop	edi
		pop	ebx
		pop	esi
		pop	ebp
		add	esp, 10h
		retn
_capi_load_ssl_client_cert endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3528h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl capi_open_store(int, void	*pvPara)
		public _capi_open_store
_capi_open_store proc near		; CODE XREF: _capi_find_key+39p
					; _capi_list_certs+34p	...

var_10		= byte ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
pvPara		= dword	ptr  8

		mov	eax, 10h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+10h+var_4], eax
		push	esi
		mov	esi, [esp+14h+pvPara]
		push	edi
		mov	edi, [esp+18h+arg_0]
		test	esi, esi
		jnz	short loc_3558
		mov	eax, [edi+14h]
		mov	esi, offset ??_C@_02BDIFNOGD@MY?$AA@ ; `string'
		test	eax, eax
		cmovnz	esi, eax

loc_3558:				; CODE XREF: _capi_open_store+21j
		push	esi
		push	offset ??_C@_0BO@GOABPAJC@Opening?5certificate?5store?5?$CFs?6?$AA@ ; "Opening certificate store %s\n"
		push	edi
		call	_CAPI_trace
		add	esp, 0Ch
		push	esi		; pvPara
		push	dword ptr [edi+1Ch] ; dwFlags
		push	0		; hCryptProv
		push	0		; dwEncodingType
		push	(offset	loc_5+4) ; lpszStoreProvider
		call	dword ptr ds:__imp__CertOpenStore@20 ; CertOpenStore(x,x,x,x,x)
		mov	esi, eax
		test	esi, esi
		jnz	short loc_35D3
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_3590
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_3590:				; CODE XREF: _capi_open_store+5Cj
		push	54Dh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	6Eh ; 'n'
		push	6Dh ; 'm'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		call	dword ptr ds:__imp__GetLastError@0 ; GetLastError()
		push	eax
		push	offset ??_C@_03HKPIJKPH@?$CFlX?$AA@ ; `string'
		lea	eax, [esp+20h+var_10]
		push	0Ah
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+28h+var_10]
		push	eax
		push	offset ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ ; "Error code= 0x"
		push	2
		call	_ERR_add_error_data
		add	esp, 1Ch

loc_35D3:				; CODE XREF: _capi_open_store+53j
		mov	ecx, [esp+18h+var_4]
		mov	eax, esi
		pop	edi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 10h
		retn
_capi_open_store endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 35E8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_capi_vtrace	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	ecx, [esp+arg_0]
		test	ecx, ecx
		jz	short locret_3625
		mov	eax, [ecx]
		cmp	eax, [esp+arg_4]
		jl	short locret_3625
		mov	eax, [ecx+4]
		test	eax, eax
		jz	short locret_3625
		push	esi
		push	offset ??_C@_02DPNLHKJD@a?$CL?$AA@ ; `string'
		push	eax
		call	_BIO_new_file
		push	[esp+0Ch+arg_C]
		mov	esi, eax
		push	[esp+10h+arg_8]
		push	esi
		call	_BIO_vprintf
		push	esi
		call	_BIO_free
		add	esp, 18h
		pop	esi

locret_3625:				; CODE XREF: _capi_vtrace+6j
					; _capi_vtrace+Ej ...
		retn
_capi_vtrace	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3628h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_cert_issuer_match proc	near		; CODE XREF: _capi_load_ssl_client_cert+ACp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	ebx, [esp+4+arg_0]
		push	ebx
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jg	short loc_3641
		mov	eax, 1
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_3641:				; CODE XREF: _cert_issuer_match+10j
		push	ebp
		push	esi
		push	edi
		push	ebx
		xor	edi, edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_3683
		mov	ebp, [esp+10h+arg_4]
		nop

loc_3658:				; CODE XREF: _cert_issuer_match+59j
		push	edi
		push	ebx
		call	_sk_value
		push	ebp
		mov	esi, eax
		call	_X509_get_issuer_name
		push	eax
		push	esi
		call	_X509_NAME_cmp
		add	esp, 14h
		test	eax, eax
		jz	short loc_368A
		push	ebx
		inc	edi
		call	_sk_num
		add	esp, 4
		cmp	edi, eax
		jl	short loc_3658

loc_3683:				; CODE XREF: _cert_issuer_match+29j
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_368A:				; CODE XREF: _cert_issuer_match+4Bj
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, 1
		pop	ebx
		retn
_cert_issuer_match endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3694h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_cert_select_simple proc near		; DATA XREF: _capi_ctx_new+8Ao
		xor	eax, eax
		retn
_cert_select_simple endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3698h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_lend_tobn	proc near		; CODE XREF: _capi_get_pkey+230p
					; _capi_get_pkey+2E8p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		push	ebp
		mov	ebp, [esp+8+arg_8]
		mov	eax, ebp
		cdq
		sub	eax, edx
		mov	ebx, eax
		push	esi
		sar	ebx, 1
		xor	esi, esi
		push	edi
		mov	edi, [esp+10h+arg_4]
		test	ebx, ebx
		jle	short loc_36CB
		lea	edx, [ebp-1]
		add	edx, edi

loc_36B8:				; CODE XREF: _lend_tobn+31j
		mov	al, [edx]
		lea	edx, [edx-1]
		mov	cl, [esi+edi]
		mov	[esi+edi], al
		inc	esi
		mov	[edx+1], cl
		cmp	esi, ebx
		jl	short loc_36B8

loc_36CB:				; CODE XREF: _lend_tobn+19j
		push	[esp+10h+arg_0]
		push	ebp
		push	edi
		call	_BN_bin2bn
		add	esp, 0Ch
		neg	eax
		sbb	eax, eax
		neg	eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_lend_tobn	endp

_text$mn	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 36E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _v_check
_v_check	proc near

arg_0		= dword	ptr  4

		cmp	[esp+arg_0], 20000h
		sbb	eax, eax
		and	eax, 0FFFE0000h
		add	eax, 20000h
		retn
_v_check	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 36FCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl wide_to_asc(LPCWSTR lpWideCharStr)
_wide_to_asc	proc near		; CODE XREF: _capi_cert_get_fname+7Dp
					; _capi_dump_prov_info+21p ...

lpWideCharStr	= dword	ptr  4

		push	edi
		mov	edi, [esp+4+lpWideCharStr]
		test	edi, edi
		jnz	short loc_3709
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_3709:				; CODE XREF: _wide_to_asc+7j
		mov	ecx, edi
		lea	edx, [ecx+2]

loc_370E:				; CODE XREF: _wide_to_asc+1Bj
		mov	ax, [ecx]
		add	ecx, 2
		test	ax, ax
		jnz	short loc_370E
		push	ebx
		push	ebp
		push	0		; lpUsedDefaultChar
		push	0		; lpDefaultChar
		sub	ecx, edx
		push	0		; cbMultiByte
		sar	ecx, 1
		push	0		; lpMultiByteStr
		lea	ebp, [ecx+1]
		push	ebp		; cchWideChar
		push	edi		; lpWideCharStr
		push	0		; dwFlags
		push	0		; CodePage
		call	dword ptr ds:__imp__WideCharToMultiByte@32 ; WideCharToMultiByte(x,x,x,x,x,x,x,x)
		mov	ebx, eax
		test	ebx, ebx
		jnz	short loc_376C
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_374F
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_374F:				; CODE XREF: _wide_to_asc+47j
		push	433h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	7Fh ; ''
		push	71h ; 'q'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebp
		pop	ebx
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_376C:				; CODE XREF: _wide_to_asc+3Ej
		push	esi
		push	436h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	ebx
		call	_CRYPTO_malloc
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_37B7
		mov	eax, ds:_CAPI_lib_error_code
		test	eax, eax
		jnz	short loc_3799
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_3799:				; CODE XREF: _wide_to_asc+91j
		push	438h
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	41h ; 'A'
		push	71h ; 'q'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		pop	ebp
		pop	ebx
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_37B7:				; CODE XREF: _wide_to_asc+88j
		push	0		; lpUsedDefaultChar
		push	0		; lpDefaultChar
		push	ebx		; cbMultiByte
		push	esi		; lpMultiByteStr
		push	ebp		; cchWideChar
		push	edi		; lpWideCharStr
		push	0		; dwFlags
		push	0		; CodePage
		call	dword ptr ds:__imp__WideCharToMultiByte@32 ; WideCharToMultiByte(x,x,x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_3807
		push	esi
		call	_CRYPTO_free
		mov	eax, ds:_CAPI_lib_error_code
		add	esp, 4
		test	eax, eax
		jnz	short loc_37E9
		call	_ERR_get_next_error_library
		mov	ds:_CAPI_lib_error_code, eax

loc_37E9:				; CODE XREF: _wide_to_asc+E1j
		push	43Dh
		push	offset ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ ;	".\\engines\\e_capi.c"
		push	7Fh ; ''
		push	71h ; 'q'
		push	eax
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		pop	ebp
		pop	ebx
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_3807:				; CODE XREF: _wide_to_asc+CFj
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		pop	edi
		retn
_wide_to_asc	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3810h
; COMDAT (pick any)
		public ??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@
; `string'
??_C@_0BD@NKBCMCFC@?4?2engines?2e_capi?4c?$AA@ db '.\engines\e_capi.c',0
					; DATA XREF: _capi_rsa_sign:loc_7Ao
					; _capi_rsa_sign+122o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3824h
; COMDAT (pick any)
		public ??_C@_0BK@PDHGKMKL@Setting?5store?5name?5to?5?$CFs?6?$AA@
; `string'
??_C@_0BK@PDHGKMKL@Setting?5store?5name?5to?5?$CFs?6?$AA@ db 'Setting store name to %s',0Ah,0
					; DATA XREF: _capi_ctrl+112o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3840h
; COMDAT (pick any)
		public ??_C@_0BF@CBCNOPLI@Setting?5flags?5to?5?$CFd?6?$AA@
; `string'
??_C@_0BF@CBCNOPLI@Setting?5flags?5to?5?$CFd?6?$AA@ db 'Setting flags to %d',0Ah,0
					; DATA XREF: _capi_ctrl+151o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3858h
; COMDAT (pick any)
		public ??_C@_0BL@JMALNNDF@Setting?5debug?5level?5to?5?$CFd?6?$AA@
; `string'
??_C@_0BL@JMALNNDF@Setting?5debug?5level?5to?5?$CFd?6?$AA@ db 'Setting debug level to %d',0Ah,0
					; DATA XREF: _capi_ctrl+176o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3874h
; COMDAT (pick any)
		public ??_C@_0BK@IMCENNIC@Setting?5debug?5file?5to?5?$CFs?6?$AA@
; `string'
??_C@_0BK@IMCENNIC@Setting?5debug?5file?5to?5?$CFs?6?$AA@ db 'Setting debug file to %s',0Ah,0
					; DATA XREF: _capi_ctrl+19Fo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3890h
; COMDAT (pick any)
		public ??_C@_0BI@BADOCNJF@Setting?5key?5type?5to?5?$CFd?6?$AA@
; `string'
??_C@_0BI@BADOCNJF@Setting?5key?5type?5to?5?$CFd?6?$AA@	db 'Setting key type to %d',0Ah,0
					; DATA XREF: _capi_ctrl+1C4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38A8h
; COMDAT (pick any)
		public ??_C@_03OPHMLOFF@?$CFlx?$AA@
; `string'
??_C@_03OPHMLOFF@?$CFlx?$AA@ db	'%lx',0 ; DATA XREF: _capi_rsa_sign+F6o
					; _capi_get_pkey+1A0o ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38ACh
; COMDAT (pick any)
		public ??_C@_08NGCPDKPB@magic?$DN0x?$AA@
; `string'
??_C@_08NGCPDKPB@magic?$DN0x?$AA@ db 'magic=0x',0 ; DATA XREF: _capi_get_pkey+3BAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38B8h
; COMDAT (pick any)
		public ??_C@_0M@KIGBCPOO@aiKeyAlg?$DN0x?$AA@
; `string'
??_C@_0M@KIGBCPOO@aiKeyAlg?$DN0x?$AA@ db 'aiKeyAlg=0x',0 ; DATA XREF: _capi_get_pkey+372o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38C4h
; COMDAT (pick any)
		public ??_C@_0BI@MMFDBBCB@Called?5CAPI_rsa_sign?$CI?$CJ?6?$AA@
; `string'
??_C@_0BI@MMFDBBCB@Called?5CAPI_rsa_sign?$CI?$CJ?6?$AA@	db 'Called CAPI_rsa_sign()',0Ah,0
					; DATA XREF: _capi_rsa_sign+42o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38DCh
; COMDAT (pick any)
		public ??_C@_06DCEPLNJK@NID?$DN0x?$AA@
; `string'
??_C@_06DCEPLNJK@NID?$DN0x?$AA@	db 'NID=0x',0 ; DATA XREF: _capi_rsa_sign+136o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38E4h
; COMDAT (pick any)
		public ??_C@_0BM@PMMFFFE@Called?5capi_rsa_priv_dec?$CI?$CJ?6?$AA@
; `string'
??_C@_0BM@PMMFFFE@Called?5capi_rsa_priv_dec?$CI?$CJ?6?$AA@ db 'Called capi_rsa_priv_dec()',0Ah,0
					; DATA XREF: _capi_rsa_priv_dec+36o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3900h
; COMDAT (pick any)
		public ??_C@_02DPKJAMEF@?$CFd?$AA@
; `string'
??_C@_02DPKJAMEF@?$CFd?$AA@ db '%d',0   ; DATA XREF: _capi_rsa_priv_dec+9Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3904h
; COMDAT (pick any)
		public ??_C@_08HBCDKNAM@padding?$DN?$AA@
; `string'
??_C@_08HBCDKNAM@padding?$DN?$AA@ db 'padding=',0 ; DATA XREF: _capi_rsa_priv_dec+DFo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3910h
; COMDAT (pick any)
		public ??_C@_0BL@BFEBHFKP@Called?5CAPI_dsa_do_sign?$CI?$CJ?6?$AA@
; `string'
??_C@_0BL@BFEBHFKP@Called?5CAPI_dsa_do_sign?$CI?$CJ?6?$AA@ db 'Called CAPI_dsa_do_sign()',0Ah,0
					; DATA XREF: _capi_dsa_do_sign+30o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 392Ch
; COMDAT (pick any)
		public ??_C@_02DPNLHKJD@a?$CL?$AA@
; `string'
??_C@_02DPNLHKJD@a?$CL?$AA@ db 61h, 2Bh, 0 ; DATA XREF:	_CAPI_trace+1Ao
					; _capi_vtrace+18o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3930h
; COMDAT (pick any)
		public ??_C@_03HKPIJKPH@?$CFlX?$AA@
; `string'
??_C@_03HKPIJKPH@?$CFlX?$AA@ dd	586C25h	; DATA XREF: _capi_rsa_sign+1AFo
					; _capi_rsa_priv_dec+1CDo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3934h
; COMDAT (pick any)
		public ??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@
; `string'
??_C@_0P@MCMHKAFM@Error?5code?$DN?50x?$AA@ db 'Error code= 0x',0
					; DATA XREF: _capi_rsa_sign+1C5o
					; _capi_rsa_priv_dec+1E3o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3944h
; COMDAT (pick any)
		public ??_C@_0BN@MKNBHKEK@capi_get_provname?0?5index?$DN?$CFd?6?$AA@
; `string'
??_C@_0BN@MKNBHKEK@capi_get_provname?0?5index?$DN?$CFd?6?$AA@ db 'capi_get_provname, index=%d',0Ah,0
					; DATA XREF: _capi_get_provname+29o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3964h
; COMDAT (pick any)
		public ??_C@_0CO@CCFBAPOA@capi_get_provname?0?5returned?5name@
; `string'
??_C@_0CO@CCFBAPOA@capi_get_provname?0?5returned?5name@	db 'capi_get_provname, returned name=%s, type=%d',0Ah,0
					; DATA XREF: _capi_get_provname+1A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3994h
; COMDAT (pick any)
		public ??_C@_0BF@FLDDNHOH@capi_list_providers?6?$AA@
; `string'
??_C@_0BF@FLDDNHOH@capi_list_providers?6?$AA@ db 'capi_list_providers',0Ah,0
					; DATA XREF: _capi_list_providers+11o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39ACh
; COMDAT (pick any)
		public ??_C@_0BB@NPGFOHNK@Available?5CSPs?3?6?$AA@
; `string'
??_C@_0BB@NPGFOHNK@Available?5CSPs?3?6?$AA@ db 'Available CSPs:',0Ah,0
					; DATA XREF: _capi_list_providers+28o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39C0h
; COMDAT (pick any)
		public ??_C@_0BB@NOPMFHPL@?$CFd?4?5?$CFs?0?5type?5?$CFd?6?$AA@
; `string'
??_C@_0BB@NOPMFHPL@?$CFd?4?5?$CFs?0?5type?5?$CFd?6?$AA@	db '%d. %s, type %d',0Ah,0
					; DATA XREF: _capi_list_providers+5Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39D4h
; COMDAT (pick any)
		public ??_C@_0CG@EMKNBOAN@Listing?5containers?5CSP?$DN?$CFs?0?5type?5@
; `string'
??_C@_0CG@EMKNBOAN@Listing?5containers?5CSP?$DN?$CFs?0?5type?5@	db 'Listing containers CSP=%s, type = %d',0Ah,0
					; DATA XREF: _capi_list_containers+30o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39FCh
; COMDAT (pick any)
		public ??_C@_0BK@PLFNGEEB@Got?5max?5container?5len?5?$CFd?6?$AA@
; `string'
??_C@_0BK@PLFNGEEB@Got?5max?5container?5len?5?$CFd?6?$AA@ db 'Got max container len %d',0Ah,0
					; DATA XREF: _capi_list_containers+156o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A18h
; COMDAT (pick any)
		public ??_C@_0CP@DGPAJBBG@Container?5name?5?$CFs?0?5len?$DN?$CFd?0?5index@
; `string'
??_C@_0CP@DGPAJBBG@Container?5name?5?$CFs?0?5len?$DN?$CFd?0?5index@ db 'Container name %s, len=%d, index=%d, flags=%d',0Ah,0
					; DATA XREF: _capi_list_containers+1F0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A48h
; COMDAT (pick any)
		public ??_C@_0CB@PKILDGGJ@Enumerate?5bug?3?5using?5workaround?6@
; `string'
??_C@_0CB@PKILDGGJ@Enumerate?5bug?3?5using?5workaround?6@ db 'Enumerate bug: using workaround',0Ah,0
					; DATA XREF: _capi_list_containers:loc_3117o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A6Ch
; COMDAT (pick any)
		public ??_C@_07JDGBAOJP@?$CFd?4?5?$CFs?6?$AA@
; `string'
??_C@_07JDGBAOJP@?$CFd?4?5?$CFs?6?$AA@ db '%d. %s',0Ah,0
					; DATA XREF: _capi_list_containers+20Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A74h
; COMDAT (pick any)
		public ??_C@_0BC@BACOIIDC@?5?5No?5Private?5Key?6?$AA@
; `string'
??_C@_0BC@BACOIIDC@?5?5No?5Private?5Key?6?$AA@ db '  No Private Key',0Ah,0
					; DATA XREF: _capi_dump_prov_info+9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A88h
; COMDAT (pick any)
		public ??_C@_0BF@BOOOILDD@?5?5Private?5Key?5Info?3?6?$AA@
; `string'
??_C@_0BF@BOOOILDD@?5?5Private?5Key?5Info?3?6?$AA@ db '  Private Key Info:',0Ah,0
					; DATA XREF: _capi_dump_prov_info+41o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3AA0h
; COMDAT (pick any)
		public ??_C@_0CK@OLIIMNDF@?5?5?5?5Provider?5Name?3?5?5?$CFs?0?5Provider@
; `string'
??_C@_0CK@OLIIMNDF@?5?5?5?5Provider?5Name?3?5?5?$CFs?0?5Provider@ db '    Provider Name:  %s, Provider Type %d',0Ah,0
					; DATA XREF: _capi_dump_prov_info+50o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3ACCh
; COMDAT (pick any)
		public ??_C@_0CF@ICDPLKBE@?5?5?5?5Container?5Name?3?5?$CFs?0?5Key?5Type@
; `string'
??_C@_0CF@ICDPLKBE@?5?5?5?5Container?5Name?3?5?$CFs?0?5Key?5Type@ db '    Container Name: %s, Key Type %d',0Ah,0
					; DATA XREF: _capi_dump_prov_info+5Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3AF4h
; COMDAT (pick any)
		public ??_C@_0BF@DFLCHLAD@capi_cert_get_fname?6?$AA@
; `string'
??_C@_0BF@DFLCHLAD@capi_cert_get_fname?6?$AA@ db 'capi_cert_get_fname',0Ah,0
					; DATA XREF: _capi_cert_get_fname+1Eo
					; _capi_find_cert:loc_20BCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B0Ch
; COMDAT (pick any)
		public ??_C@_0BG@IEDCDNCL@?5?5Friendly?5Name?5?$CC?$CFs?$CC?6?$AA@
; `string'
??_C@_0BG@IEDCDNCL@?5?5Friendly?5Name?5?$CC?$CFs?$CC?6?$AA@ db '  Friendly Name "%s"',0Ah,0
					; DATA XREF: _capi_dump_cert+28o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B24h
; COMDAT (pick any)
		public ??_C@_0BG@EEJCJJDG@?5?5?$DMNo?5Friendly?5Name?$DO?6?$AA@
; `string'
??_C@_0BG@EEJCJJDG@?5?5?$DMNo?5Friendly?5Name?$DO?6?$AA@ db '  <No Friendly Name>',0Ah,0
					; DATA XREF: _capi_dump_cert:loc_1EC6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B3Ch
; COMDAT (pick any)
		public ??_C@_0BN@GFOGIGBP@?5?5?$DMCan?8t?5parse?5certificate?$DO?6?$AA@
; `string'
??_C@_0BN@GFOGIGBP@?5?5?$DMCan?8t?5parse?5certificate?$DO?6?$AA@ db '  <Can',27h,'t parse certificate>',0Ah,0
					; DATA XREF: _capi_dump_cert+6Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B5Ch
; COMDAT (pick any)
		public ??_C@_0M@JBBGICFI@?5?5Subject?3?5?$AA@
; `string'
??_C@_0M@JBBGICFI@?5?5Subject?3?5?$AA@ db '  Subject: ',0 ; DATA XREF: _capi_dump_cert+82o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B68h
; COMDAT (pick any)
		public ??_C@_0M@FNMBPMND@?6?5?5Issuer?3?5?$AA@
; `string'
??_C@_0M@FNMBPMND@?6?5?5Issuer?3?5?$AA@	db 0Ah ; DATA XREF: _capi_dump_cert+A7o
		db '  Issuer: ',0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B74h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah,0	; DATA XREF: _capi_dump_cert+CCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B78h
; COMDAT (pick any)
		public ??_C@_02BDIFNOGD@MY?$AA@
; `string'
??_C@_02BDIFNOGD@MY?$AA@ db 4Dh, 59h, 0	; DATA XREF: _capi_list_certs+11o
					; _capi_load_ssl_client_cert+1Fo ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B7Ch
; COMDAT (pick any)
		public ??_C@_0BO@GOABPAJC@Opening?5certificate?5store?5?$CFs?6?$AA@
; `string'
??_C@_0BO@GOABPAJC@Opening?5certificate?5store?5?$CFs?6?$AA@ db	'Opening certificate store %s',0Ah,0
					; DATA XREF: _capi_open_store+31o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B9Ch
; COMDAT (pick any)
		public ??_C@_0BM@MCCBDIAM@Listing?5certs?5for?5store?5?$CFs?6?$AA@
; `string'
??_C@_0BM@MCCBDIAM@Listing?5certs?5for?5store?5?$CFs?6?$AA@ db 'Listing certs for store %s',0Ah,0
					; DATA XREF: _capi_list_certs+27o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BB8h
; COMDAT (pick any)
		public ??_C@_0BA@OOMCMFID@Certificate?5?$CFd?6?$AA@
; `string'
??_C@_0BA@OOMCMFID@Certificate?5?$CFd?6?$AA@ db	'Certificate %d',0Ah,0
					; DATA XREF: _capi_list_certs+B1o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BC8h
; COMDAT (pick any)
		public ??_C@_0DB@POFFGHFI@capi_get_key?0?5contname?$DN?$CFs?0?5provn@
; `string'
??_C@_0DB@POFFGHFI@capi_get_key?0?5contname?$DN?$CFs?0?5provn@ db 'capi_get_key, contname=%s, provname=%s, type=%d',0Ah,0
					; DATA XREF: _capi_get_key+4Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3BFCh
; COMDAT (pick any)
		public ??_C@_0CA@INILHLEE@Calling?5capi_ctx_free?5with?5?$CFlx?6?$AA@
; `string'
??_C@_0CA@INILHLEE@Calling?5capi_ctx_free?5with?5?$CFlx?6?$AA@ db 'Calling capi_ctx_free with %lx',0Ah,0
					; DATA XREF: _capi_ctx_free+6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C1Ch
; COMDAT (pick any)
		public ??_C@_0CJ@JCKLCCNI@capi_ctx_set_provname?0?5name?$DN?$CFs?0?5@
; `string'
??_C@_0CJ@JCKLCCNI@capi_ctx_set_provname?0?5name?$DN?$CFs?0?5@ db 'capi_ctx_set_provname, name=%s, type=%d',0Ah,0
					; DATA XREF: _capi_ctx_set_provname+26o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C48h
; COMDAT (pick any)
		public ??_C@_0BM@GCCGDACP@Can?8t?5Parse?5Certificate?5?$CFd?6?$AA@
; `string'
??_C@_0BM@GCCGDACP@Can?8t?5Parse?5Certificate?5?$CFd?6?$AA@ db 'Can',27h,'t Parse Certificate %d',0Ah,0
					; DATA XREF: _capi_load_ssl_client_cert+94o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _capi_ctrl+53p
					; DATA XREF: _capi_ctrl+53r
		extrn _sk_num:near	; CODE XREF: _capi_load_ssl_client_cert+16Ep
					; _capi_load_ssl_client_cert+1E6p ...
		extrn _sk_value:near	; CODE XREF: _capi_load_ssl_client_cert+182p
					; _cert_issuer_match+32p
		extrn _sk_new_null:near	; CODE XREF: _capi_load_ssl_client_cert+105p
		extrn _sk_free:near	; CODE XREF: _capi_load_ssl_client_cert+1F3p
		extrn _sk_push:near	; CODE XREF: _capi_load_ssl_client_cert+10Ep
		extrn _CRYPTO_set_ex_data_implementation:near ;	CODE XREF: _bind_engine+52p
		extrn _CRYPTO_set_locking_callback:near	; CODE XREF: _bind_engine+2Ap
		extrn _CRYPTO_set_add_lock_callback:near ; CODE	XREF: _bind_engine+32p
		extrn _CRYPTO_set_dynlock_create_callback:near ; CODE XREF: _bind_engine+3Ap
		extrn _CRYPTO_set_dynlock_lock_callback:near ; CODE XREF: _bind_engine+42p
		extrn _CRYPTO_set_dynlock_destroy_callback:near
					; CODE XREF: _bind_engine+4Ap
		extrn _CRYPTO_set_mem_functions:near ; CODE XREF: _bind_engine+17p
		extrn _CRYPTO_malloc:near ; CODE XREF: _capi_rsa_priv_dec+111p
					; _capi_cert_get_fname+5Fp ...
		extrn _CRYPTO_free:near	; CODE XREF: _capi_rsa_priv_dec+1F0p
					; _capi_rsa_priv_dec+219p ...
		extrn _OPENSSL_cleanse:near ; CODE XREF: _capi_dsa_do_sign+3ABp
		extrn _BUF_strdup:near	; CODE XREF: _capi_ctrl+106p
					; _capi_ctrl+199p ...
		extrn _BN_new:near	; CODE XREF: _capi_dsa_do_sign+1F5p
					; _capi_dsa_do_sign+1FCp ...
		extrn _BN_bin2bn:near	; CODE XREF: _capi_dsa_do_sign+2C8p
					; _capi_dsa_do_sign+38Dp ...
		extrn _BN_set_word:near	; CODE XREF: _capi_get_pkey+3FFp
		extrn _BIO_new_file:near ; CODE	XREF: _CAPI_trace+20p
					; _capi_vtrace+1Ep
		extrn _BIO_new_fp:near	; CODE XREF: _capi_ctrl+5Dp
		extrn _BIO_free:near	; CODE XREF: _CAPI_trace+34p
					; _capi_ctrl+8Dp ...
		extrn _BIO_printf:near	; CODE XREF: _capi_dump_cert+2Ep
					; _capi_dump_cert+44p ...
		extrn _BIO_vprintf:near	; CODE XREF: _CAPI_trace+2Ep
					; _capi_vtrace+2Ep
		extrn _BIO_snprintf:near ; CODE	XREF: _capi_rsa_sign+102p
					; _capi_rsa_sign+1BBp ...
		extrn _RSA_new_method:near ; CODE XREF:	_capi_get_pkey+3D2p
		extrn _RSA_size:near	; CODE XREF: _capi_rsa_sign+235p
		extrn _RSA_free:near	; CODE XREF: _capi_get_pkey+496p
		extrn _RSA_PKCS1_SSLeay:near ; CODE XREF: _capi_init+54p
		extrn _RSA_get_ex_new_index:near ; CODE	XREF: _capi_init+4Ap
		extrn _RSA_set_ex_data:near ; CODE XREF: _capi_rsa_free+4Fp
					; _capi_get_pkey+430p
		extrn _RSA_get_ex_data:near ; CODE XREF: _capi_rsa_sign+54p
					; _capi_rsa_priv_dec+48p ...
; DWORD	__stdcall GetLastError()
		extrn __imp__GetLastError@0:near ; CODE	XREF: _capi_rsa_sign+1A8p
					; _capi_rsa_priv_dec+1C6p ...
; int __stdcall	WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar, LPSTR	lpMultiByteStr,	int cbMultiByte, LPCSTR	lpDefaultChar, LPBOOL lpUsedDefaultChar)
		extrn __imp__WideCharToMultiByte@32:near ; CODE	XREF: _wide_to_asc+34p
					; _wide_to_asc+C7p
					; DATA XREF: ...
; BOOL __stdcall CryptAcquireContextA(HCRYPTPROV *phProv, LPCSTR szContainer, LPCSTR szProvider, DWORD dwProvType, DWORD dwFlags)
		extrn __imp__CryptAcquireContextA@20:near
					; CODE XREF: _capi_ctx_set_provname+4Dp
					; _capi_get_key+76p ...
; BOOL __stdcall CryptReleaseContext(HCRYPTPROV	hProv, DWORD dwFlags)
		extrn __imp__CryptReleaseContext@8:near	; CODE XREF: _capi_rsa_free+27p
					; _capi_dsa_free+27p ...
; BOOL __stdcall CryptDestroyKey(HCRYPTKEY hKey)
		extrn __imp__CryptDestroyKey@4:near ; CODE XREF: _capi_rsa_free+1Cp
					; _capi_dsa_free+1Cp ...
; BOOL __stdcall CryptSetHashParam(HCRYPTHASH hHash, DWORD dwParam, const BYTE *pbData,	DWORD dwFlags)
		extrn __imp__CryptSetHashParam@16:near ; CODE XREF: _capi_rsa_sign+1F6p
					; _capi_dsa_do_sign+161p
					; DATA XREF: ...
; BOOL __stdcall CryptGetProvParam(HCRYPTPROV hProv, DWORD dwParam, BYTE *pbData, DWORD	*pdwDataLen, DWORD dwFlags)
		extrn __imp__CryptGetProvParam@20:near
					; CODE XREF: _capi_list_containers+D1p
					; _capi_list_containers+1DFp
					; DATA XREF: ...
; BOOL __stdcall CryptGetUserKey(HCRYPTPROV hProv, DWORD dwKeySpec, HCRYPTKEY *phUserKey)
		extrn __imp__CryptGetUserKey@12:near ; CODE XREF: _capi_get_key+100p
					; DATA XREF: _capi_get_key+100r
; BOOL __stdcall CryptExportKey(HCRYPTKEY hKey,	HCRYPTKEY hExpKey, DWORD dwBlobType, DWORD dwFlags, BYTE *pbData, DWORD	*pdwDataLen)
		extrn __imp__CryptExportKey@24:near ; CODE XREF: _capi_get_pkey+3Bp
					; _capi_get_pkey+E3p
					; DATA XREF: ...
; BOOL __stdcall CryptDecrypt(HCRYPTKEY	hKey, HCRYPTHASH hHash,	BOOL Final, DWORD dwFlags, BYTE	*pbData, DWORD *pdwDataLen)
		extrn __imp__CryptDecrypt@24:near ; CODE XREF: _capi_rsa_priv_dec+192p
					; DATA XREF: _capi_rsa_priv_dec+192r
; BOOL __stdcall CryptCreateHash(HCRYPTPROV hProv, ALG_ID Algid, HCRYPTKEY hKey, DWORD dwFlags,	HCRYPTHASH *phHash)
		extrn __imp__CryptCreateHash@20:near ; CODE XREF: _capi_rsa_sign+174p
					; _capi_dsa_do_sign+E4p
					; DATA XREF: ...
; BOOL __stdcall CryptDestroyHash(HCRYPTHASH hHash)
		extrn __imp__CryptDestroyHash@4:near ; CODE XREF: _capi_rsa_sign+2B7p
					; _capi_dsa_do_sign+3B7p
					; DATA XREF: ...
; BOOL __stdcall CryptSignHashA(HCRYPTHASH hHash, DWORD	dwKeySpec, LPCSTR szDescription, DWORD dwFlags,	BYTE *pbSignature, DWORD *pdwSigLen)
		extrn __imp__CryptSignHashA@24:near ; CODE XREF: _capi_rsa_sign+252p
					; _capi_dsa_do_sign+1BCp
					; DATA XREF: ...
; BOOL __stdcall CryptEnumProvidersA(DWORD dwIndex, DWORD *pdwReserved,	DWORD dwFlags, DWORD *pdwProvType, LPSTR szProvName, DWORD *pcbProvName)
		extrn __imp__CryptEnumProvidersA@24:near ; CODE	XREF: _capi_get_provname+48p
					; _capi_get_provname+103p
					; DATA XREF: ...
; HCERTSTORE __stdcall CertOpenStore(LPCSTR lpszStoreProvider, DWORD dwEncodingType, HCRYPTPROV_LEGACY hCryptProv, DWORD dwFlags, const	void *pvPara)
		extrn __imp__CertOpenStore@20:near ; CODE XREF:	_capi_open_store+49p
					; DATA XREF: _capi_open_store+49r
; BOOL __stdcall CertCloseStore(HCERTSTORE hCertStore, DWORD dwFlags)
		extrn __imp__CertCloseStore@8:near ; CODE XREF:	_capi_find_key+76p
					; _capi_list_certs+66p	...
; PCCERT_CONTEXT __stdcall CertEnumCertificatesInStore(HCERTSTORE hCertStore, PCCERT_CONTEXT pPrevCertContext)
		extrn __imp__CertEnumCertificatesInStore@8:near
					; CODE XREF: _capi_find_cert+57p
					; _capi_find_cert+124p	...
; PCCERT_CONTEXT __stdcall CertFindCertificateInStore(HCERTSTORE hCertStore, DWORD dwCertEncodingType, DWORD dwFindFlags, DWORD	dwFindType, const void *pvFindPara, PCCERT_CONTEXT pPrevCertContext)
		extrn __imp__CertFindCertificateInStore@24:near
					; CODE XREF: _capi_find_cert+1CCp
					; DATA XREF: _capi_find_cert+1CCr
; PCCERT_CONTEXT __stdcall CertDuplicateCertificateContext(PCCERT_CONTEXT pCertContext)
		extrn __imp__CertDuplicateCertificateContext@4:near
					; CODE XREF: _capi_load_ssl_client_cert+E9p
					; DATA XREF: _capi_load_ssl_client_cert+E9r
; BOOL __stdcall CertFreeCertificateContext(PCCERT_CONTEXT pCertContext)
		extrn __imp__CertFreeCertificateContext@4:near
					; CODE XREF: _capi_rsa_free+34p
					; _capi_dsa_free+34p ...
; BOOL __stdcall CertGetCertificateContextProperty(PCCERT_CONTEXT pCertContext,	DWORD dwPropId,	void *pvData, DWORD *pcbData)
		extrn __imp__CertGetCertificateContextProperty@16:near
					; CODE XREF: _capi_cert_get_fname+36p
					; _capi_cert_get_fname+72p ...
		extrn _DSA_SIG_new:near	; CODE XREF: _capi_dsa_do_sign:loc_782p
		extrn _DSA_SIG_free:near ; CODE	XREF: _capi_dsa_do_sign+39Ap
		extrn _DSA_OpenSSL:near	; CODE XREF: _capi_init+93p
		extrn _DSA_new_method:near ; CODE XREF:	_capi_get_pkey+1D3p
		extrn _DSA_free:near	; CODE XREF: _capi_get_pkey+4A3p
		extrn _DSA_get_ex_new_index:near ; CODE	XREF: _capi_init+86p
		extrn _DSA_set_ex_data:near ; CODE XREF: _capi_dsa_free+4Fp
					; _capi_get_pkey+31Ep
		extrn _DSA_get_ex_data:near ; CODE XREF: _capi_dsa_do_sign+42p
					; _capi_dsa_free+Bp
		extrn _ERR_put_error:near ; CODE XREF: _capi_rsa_sign+84p
					; _capi_rsa_sign+12Cp ...
		extrn _ERR_add_error_data:near ; CODE XREF: _capi_rsa_sign+13Dp
					; _capi_rsa_sign+1CCp ...
		extrn _ERR_load_strings:near ; CODE XREF: _ERR_load_CAPI_strings+2Cp
					; _ERR_load_CAPI_strings+3Cp
		extrn _ERR_unload_strings:near ; CODE XREF: _ERR_unload_CAPI_strings+14p
					; _ERR_unload_CAPI_strings+24p	...
		extrn _ERR_get_next_error_library:near ; CODE XREF: _capi_rsa_sign:loc_6Bp
					; _capi_rsa_sign+113p ...
		extrn _ERR_set_implementation:near ; CODE XREF:	_bind_engine+61p
		extrn _EVP_PKEY_assign:near ; CODE XREF: _capi_get_pkey+339p
					; _capi_get_pkey+447p
		extrn _EVP_PKEY_new:near ; CODE	XREF: _capi_get_pkey+326p
					; _capi_get_pkey+438p
		extrn _X509_free:near	; CODE XREF: _capi_dump_cert+12Fp
					; _capi_load_ssl_client_cert+DDp ...
		extrn _d2i_X509:near	; CODE XREF: _capi_dump_cert+61p
					; _capi_load_ssl_client_cert+81p
		extrn _X509_get_ex_new_index:near ; CODE XREF: _capi_init+36p
		extrn _X509_set_ex_data:near ; CODE XREF: _capi_load_ssl_client_cert+F9p
					; _capi_load_ssl_client_cert+235p
		extrn _X509_get_ex_data:near ; CODE XREF: _capi_load_ssl_client_cert+19Fp
					; _capi_load_ssl_client_cert+216p
		extrn _X509_get_issuer_name:near ; CODE	XREF: _capi_dump_cert+BDp
					; _cert_issuer_match+3Ap
		extrn _X509_get_subject_name:near ; CODE XREF: _capi_dump_cert+98p
		extrn _X509_NAME_cmp:near ; CODE XREF: _cert_issuer_match+41p
		extrn _X509_NAME_print_ex:near ; CODE XREF: _capi_dump_cert+A2p
					; _capi_dump_cert+C7p
		extrn _X509_print_ex:near ; CODE XREF: _capi_dump_cert+E8p
		extrn _ENGINE_set_id:near ; CODE XREF: _bind_capi+Cp
		extrn _ENGINE_set_name:near ; CODE XREF: _bind_capi+23p
		extrn _ENGINE_set_RSA:near ; CODE XREF:	_bind_capi+8Ap
		extrn _ENGINE_set_DSA:near ; CODE XREF:	_bind_capi+9Cp
		extrn _ENGINE_set_destroy_function:near	; CODE XREF: _bind_capi+78p
		extrn _ENGINE_set_init_function:near ; CODE XREF: _bind_capi+4Cp
		extrn _ENGINE_set_finish_function:near ; CODE XREF: _bind_capi+62p
		extrn _ENGINE_set_ctrl_function:near ; CODE XREF: _bind_capi+E4p
		extrn _ENGINE_set_load_privkey_function:near ; CODE XREF: _bind_capi+AEp
		extrn _ENGINE_set_load_ssl_client_cert_function:near
					; CODE XREF: _bind_capi+C0p
		extrn _ENGINE_set_flags:near ; CODE XREF: _bind_capi+36p
		extrn _ENGINE_set_cmd_defns:near ; CODE	XREF: _bind_capi+D2p
		extrn _ENGINE_get_ex_new_index:near ; CODE XREF: _capi_init+17p
		extrn _ENGINE_set_ex_data:near ; CODE XREF: _capi_finish+21p
					; _capi_init+F3p
		extrn _ENGINE_get_ex_data:near ; CODE XREF: _capi_rsa_sign:loc_3Dp
					; _capi_rsa_priv_dec+31p ...
		extrn _ENGINE_get_static_state:near ; CODE XREF: _bind_engine+1p
		extrn _PEM_write_bio_X509:near ; CODE XREF: _capi_dump_cert+126p
		extrn _X509_check_purpose:near ; CODE XREF: _capi_load_ssl_client_cert+BDp
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _capi_rsa_sign+99p
					; _capi_rsa_sign+152p ...
		extrn __chkstk:near	; CODE XREF: _capi_rsa_sign:loc_5p
					; _capi_rsa_priv_dec+5p ...
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _capi_rsa_priv_dec+213p
		extrn ___security_cookie:near ;	DATA XREF: _capi_rsa_sign+Ar
					; _capi_rsa_priv_dec+Ar ...


		end

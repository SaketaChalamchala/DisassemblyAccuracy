;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	C95EDEA436A8773F910FF7B0740DF48C
; Input	CRC32 :	653FABCB

; File Name   :	C:\compspace\Diff\openssl\obj\v3_extku.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _EXTENDED_KEY_USAGE_it
_EXTENDED_KEY_USAGE_it proc near	; DATA XREF: .rdata:00000158o
					; .rdata:00000190o
		mov	eax, offset ?local_it@?1??EXTENDED_KEY_USAGE_it@@9@9 ; `EXTENDED_KEY_USAGE_it'::`2'::local_it
		retn
_EXTENDED_KEY_USAGE_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_v2i_EXTENDED_KEY_USAGE	proc near	; DATA XREF: .rdata:00000178o
					; .rdata:000001B0o

arg_8		= dword	ptr  0Ch

		push	ebp
		call	_sk_new_null
		mov	ebp, eax
		test	ebp, ebp
		jnz	short loc_30
		push	81h ; 'Å'
		push	offset ??_C@_0BL@DPOLCONE@?4?2crypto?2x509v3?2v3_extku?4c?$AA@ ; ".\\crypto\\x509v3\\v3_extku.c"
		push	41h ; 'A'
		push	67h ; 'g'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_30:					; CODE XREF: _v2i_EXTENDED_KEY_USAGE+Aj
		push	ebx
		mov	ebx, [esp+8+arg_8]
		push	esi
		push	edi
		push	ebx
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_82
		xchg	ax, ax

loc_48:					; CODE XREF: _v2i_EXTENDED_KEY_USAGE+78j
		push	esi
		push	ebx
		call	_sk_value
		mov	edi, eax
		add	esp, 8
		mov	ecx, [edi+8]
		test	ecx, ecx
		jnz	short loc_5E
		mov	ecx, [edi+4]

loc_5E:					; CODE XREF: _v2i_EXTENDED_KEY_USAGE+51j
		push	0
		push	ecx
		call	_OBJ_txt2obj
		add	esp, 8
		test	eax, eax
		jz	short loc_89
		push	eax
		push	ebp
		call	_sk_push
		push	ebx
		inc	esi
		call	_sk_num
		add	esp, 0Ch

loc_7E:					; DATA XREF: .rdata:_v3_ext_kuo
		cmp	esi, eax
		jl	short loc_48

loc_82:					; CODE XREF: _v2i_EXTENDED_KEY_USAGE+3Cj
		pop	edi
		pop	esi
		pop	ebx
		mov	eax, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_89:					; CODE XREF: _v2i_EXTENDED_KEY_USAGE+63j
		push	offset _ASN1_OBJECT_free
		push	ebp
		call	_sk_pop_free
		push	8Eh ; 'é'
		push	offset ??_C@_0BL@DPOLCONE@?4?2crypto?2x509v3?2v3_extku?4c?$AA@ ; ".\\crypto\\x509v3\\v3_extku.c"
		push	6Eh ; 'n'
		push	67h ; 'g'
		push	22h ; '"'
		call	_ERR_put_error
		push	dword ptr [edi+8]
		push	offset ??_C@_07BDICHDDB@?0value?3?$AA@ ; ",value:"
		push	dword ptr [edi+4]
		push	offset ??_C@_06FONLLLNC@?0name?3?$AA@ ;	",name:"
		push	dword ptr [edi]
		push	offset ??_C@_08PCLJGJAL@section?3?$AA@ ; "section:"
		push	6
		call	_ERR_add_error_data
		add	esp, 38h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		pop	ebp
		retn
_v2i_EXTENDED_KEY_USAGE	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_i2v_EXTENDED_KEY_USAGE	proc near	; DATA XREF: .rdata:00000174o
					; .rdata:000001ACo

var_58		= dword	ptr -58h
var_54		= byte ptr -54h
var_4		= dword	ptr -4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 58h ; 'X'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+58h+var_4], eax
		mov	eax, [esp+58h+arg_8]
		push	esi
		push	edi
		mov	edi, [esp+60h+arg_4]
		xor	esi, esi
		push	edi
		mov	[esp+64h+var_58], eax
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_139

loc_106:				; CODE XREF: _i2v_EXTENDED_KEY_USAGE+63j
		push	esi
		push	edi
		call	_sk_value
		push	eax
		lea	eax, [esp+6Ch+var_54]
		push	50h ; 'P'
		push	eax
		call	_i2t_ASN1_OBJECT
		lea	eax, [esp+74h+var_58]
		push	eax
		lea	eax, [esp+78h+var_54]
		push	eax
		push	0
		call	_X509V3_add_value
		push	edi
		inc	esi
		call	_sk_num
		add	esp, 24h
		cmp	esi, eax
		jl	short loc_106

loc_139:				; CODE XREF: _i2v_EXTENDED_KEY_USAGE+30j
		mov	ecx, [esp+60h+var_4]
		mov	eax, [esp+60h+var_58]
		pop	edi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 58h
		retn
_i2v_EXTENDED_KEY_USAGE	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 150h
		public _v3_ext_ku
_v3_ext_ku	dd offset loc_7E
		dd 0
		dd offset _EXTENDED_KEY_USAGE_it
dword_15C	dd 6 dup(0)
		dd offset _i2v_EXTENDED_KEY_USAGE
		dd offset _v2i_EXTENDED_KEY_USAGE
		dd 3 dup(0)
		public _v3_ocsp_accresp
_v3_ocsp_accresp dd offset dword_15C+14h
		dd 0
		dd offset _EXTENDED_KEY_USAGE_it
		dd 6 dup(0)
		dd offset _i2v_EXTENDED_KEY_USAGE
		dd offset _v2i_EXTENDED_KEY_USAGE
		align 10h
_EXTENDED_KEY_USAGE_item_tt dd 4, 2 dup(0) ; DATA XREF:	.rdata:000001DCo
		dd offset ??_C@_0BD@CKAGEBEF@EXTENDED_KEY_USAGE?$AA@ ; "EXTENDED_KEY_USAGE"
		dd offset _ASN1_OBJECT_it
; `EXTENDED_KEY_USAGE_it'::`2'::local_it
?local_it@?1??EXTENDED_KEY_USAGE_it@@9@9 dd 0 ;	DATA XREF: _EXTENDED_KEY_USAGE_ito
					; _EXTENDED_KEY_USAGE_freeo ...
		dd 0FFFFFFFFh
		dd offset _EXTENDED_KEY_USAGE_item_tt
		dd 3 dup(0)
		dd offset ??_C@_0BD@CKAGEBEF@EXTENDED_KEY_USAGE?$AA@ ; "EXTENDED_KEY_USAGE"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1F0h
; COMDAT (pick any)
		public ??_C@_0BD@CKAGEBEF@EXTENDED_KEY_USAGE?$AA@
; `string'
??_C@_0BD@CKAGEBEF@EXTENDED_KEY_USAGE?$AA@ db 'EXTENDED_KEY_USAGE',0
					; DATA XREF: .rdata:000001CCo
					; .rdata:000001ECo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 204h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _EXTENDED_KEY_USAGE_free
_EXTENDED_KEY_USAGE_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??EXTENDED_KEY_USAGE_it@@9@9	; `EXTENDED_KEY_USAGE_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_EXTENDED_KEY_USAGE_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 218h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _EXTENDED_KEY_USAGE_new
_EXTENDED_KEY_USAGE_new	proc near
		push	offset ?local_it@?1??EXTENDED_KEY_USAGE_it@@9@9	; `EXTENDED_KEY_USAGE_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_EXTENDED_KEY_USAGE_new	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 228h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_EXTENDED_KEY_USAGE
_d2i_EXTENDED_KEY_USAGE	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??EXTENDED_KEY_USAGE_it@@9@9	; `EXTENDED_KEY_USAGE_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_EXTENDED_KEY_USAGE	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 244h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_EXTENDED_KEY_USAGE
_i2d_EXTENDED_KEY_USAGE	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??EXTENDED_KEY_USAGE_it@@9@9	; `EXTENDED_KEY_USAGE_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_EXTENDED_KEY_USAGE	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25Ch
; COMDAT (pick any)
		public ??_C@_0BL@DPOLCONE@?4?2crypto?2x509v3?2v3_extku?4c?$AA@
; `string'
??_C@_0BL@DPOLCONE@?4?2crypto?2x509v3?2v3_extku?4c?$AA@	db '.\crypto\x509v3\v3_extku.c',0
					; DATA XREF: _v2i_EXTENDED_KEY_USAGE+11o
					; _v2i_EXTENDED_KEY_USAGE+91o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 278h
; COMDAT (pick any)
		public ??_C@_07BDICHDDB@?0value?3?$AA@
; `string'
??_C@_07BDICHDDB@?0value?3?$AA@	db ',value:',0 ; DATA XREF: _v2i_EXTENDED_KEY_USAGE+A4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 280h
; COMDAT (pick any)
		public ??_C@_06FONLLLNC@?0name?3?$AA@
; `string'
??_C@_06FONLLLNC@?0name?3?$AA@ db ',name:',0 ; DATA XREF: _v2i_EXTENDED_KEY_USAGE+ACo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 288h
; COMDAT (pick any)
		public ??_C@_08PCLJGJAL@section?3?$AA@
; `string'
??_C@_08PCLJGJAL@section?3?$AA@	db 'section:',0 ; DATA XREF: _v2i_EXTENDED_KEY_USAGE+B3o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ASN1_OBJECT_it:near ; DATA XREF:	.rdata:000001D0o
		extrn _sk_num:near	; CODE XREF: _v2i_EXTENDED_KEY_USAGE+32p
					; _v2i_EXTENDED_KEY_USAGE+6Ep ...
		extrn _sk_value:near	; CODE XREF: _v2i_EXTENDED_KEY_USAGE+42p
					; _i2v_EXTENDED_KEY_USAGE+34p
		extrn _sk_new_null:near	; CODE XREF: _v2i_EXTENDED_KEY_USAGE+1p
		extrn _sk_pop_free:near	; CODE XREF: _v2i_EXTENDED_KEY_USAGE+87p
		extrn _sk_push:near	; CODE XREF: _v2i_EXTENDED_KEY_USAGE+67p
		extrn _ERR_put_error:near ; CODE XREF: _v2i_EXTENDED_KEY_USAGE+1Cp
					; _v2i_EXTENDED_KEY_USAGE+9Cp
		extrn _ERR_add_error_data:near ; CODE XREF: _v2i_EXTENDED_KEY_USAGE+BAp
		extrn _ASN1_OBJECT_free:near ; DATA XREF: _v2i_EXTENDED_KEY_USAGE:loc_89o
		extrn _i2t_ASN1_OBJECT:near ; CODE XREF: _i2v_EXTENDED_KEY_USAGE+41p
		extrn _ASN1_item_new:near ; CODE XREF: _EXTENDED_KEY_USAGE_new+5p
		extrn _ASN1_item_free:near ; CODE XREF:	_EXTENDED_KEY_USAGE_free+9p
		extrn _ASN1_item_d2i:near ; CODE XREF: _d2i_EXTENDED_KEY_USAGE+11p
		extrn _ASN1_item_i2d:near ; CODE XREF: _i2d_EXTENDED_KEY_USAGE+Dp
		extrn _OBJ_txt2obj:near	; CODE XREF: _v2i_EXTENDED_KEY_USAGE+59p
		extrn _X509V3_add_value:near ; CODE XREF: _i2v_EXTENDED_KEY_USAGE+52p
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: _i2v_EXTENDED_KEY_USAGE+71p
		extrn __chkstk:near	; CODE XREF: _i2v_EXTENDED_KEY_USAGE+5p
		extrn ___security_cookie:near ;	DATA XREF: _i2v_EXTENDED_KEY_USAGE+Ar


		end

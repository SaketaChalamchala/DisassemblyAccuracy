;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	7D342FC88CEC7A1A1967DFA1E69F9EEC
; Input	CRC32 :	FB408E7F

; File Name   :	C:\compspace\Diff\openssl\obj\p12_attr.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_add_CSPName_asc
_PKCS12_add_CSPName_asc	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		add	eax, 8
		push	1001h
		push	1A1h
		push	eax
		call	_X509at_add1_attr_by_NID
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_PKCS12_add_CSPName_asc	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_add_friendlyname_asc
_PKCS12_add_friendlyname_asc proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		add	eax, 8
		push	1001h
		push	9Ch ; 'ú'
		push	eax
		call	_X509at_add1_attr_by_NID
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_PKCS12_add_friendlyname_asc endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 58h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_add_friendlyname_uni
_PKCS12_add_friendlyname_uni proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		add	eax, 8
		push	1002h
		push	9Ch ; 'ú'
		push	eax
		call	_X509at_add1_attr_by_NID
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_PKCS12_add_friendlyname_uni endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 84h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_add_localkeyid
_PKCS12_add_localkeyid proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	[esp+arg_8]
		mov	eax, [esp+4+arg_0]
		push	[esp+4+arg_4]
		add	eax, 8
		push	4
		push	9Dh ; 'ù'
		push	eax
		call	_X509at_add1_attr_by_NID
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_PKCS12_add_localkeyid endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_get_attr_gen
_PKCS12_get_attr_gen proc near		; CODE XREF: _PKCS12_get_friendlyname+Cp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		mov	edi, [esp+4+arg_0]
		test	edi, edi
		jnz	short loc_B9
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_B9:					; CODE XREF: _PKCS12_get_attr_gen+7j
		push	ebx
		push	ebp
		push	esi
		push	edi
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_F4
		mov	ebp, [esp+10h+arg_4]

loc_CF:					; CODE XREF: _PKCS12_get_attr_gen+46j
		push	esi
		push	edi
		call	_sk_value
		mov	ebx, eax
		push	dword ptr [ebx]
		call	_OBJ_obj2nid
		add	esp, 0Ch
		cmp	eax, ebp
		jz	short loc_FB
		push	edi
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_CF

loc_F4:					; CODE XREF: _PKCS12_get_attr_gen+1Dj
					; _PKCS12_get_attr_gen+5Cj
		pop	esi
		pop	ebp
		pop	ebx
		xor	eax, eax
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_FB:					; CODE XREF: _PKCS12_get_attr_gen+38j
		push	dword ptr [ebx+8]
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jz	short loc_F4
		push	0
		push	dword ptr [ebx+8]
		call	_sk_value
		add	esp, 8
		pop	esi
		pop	ebp
		pop	ebx
		pop	edi
		retn
_PKCS12_get_attr_gen endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 11Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS12_get_friendlyname
_PKCS12_get_friendlyname proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		push	9Ch ; 'ú'
		push	dword ptr [eax+8]
		call	_PKCS12_get_attr_gen
		add	esp, 8
		test	eax, eax
		jnz	short loc_137

loc_134:				; CODE XREF: _PKCS12_get_friendlyname+1Ej
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_137:				; CODE XREF: _PKCS12_get_friendlyname+16j
		cmp	dword ptr [eax], 1Eh
		jnz	short loc_134
		mov	eax, [eax+4]
		push	dword ptr [eax]
		push	dword ptr [eax+8]
		call	_OPENSSL_uni2asc
		add	esp, 8
		retn
_PKCS12_get_friendlyname endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 150h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS8_add_keyusage
_PKCS8_add_keyusage proc near

arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		mov	al, [esp+arg_4]
		mov	[esp+arg_4], al
		lea	eax, [esp+arg_4]
		push	1
		push	eax
		mov	eax, [esp+8+arg_0]
		push	3
		add	eax, 10h
		push	53h ; 'S'
		push	eax
		call	_X509at_add1_attr_by_NID
		add	esp, 14h
		neg	eax
		sbb	eax, eax
		neg	eax
		retn
_PKCS8_add_keyusage endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_num:near	; CODE XREF: _PKCS12_get_attr_gen+13p
					; _PKCS12_get_attr_gen+3Cp ...
		extrn _sk_value:near	; CODE XREF: _PKCS12_get_attr_gen+25p
					; _PKCS12_get_attr_gen+63p
		extrn _OBJ_obj2nid:near	; CODE XREF: _PKCS12_get_attr_gen+2Ep
		extrn _X509at_add1_attr_by_NID:near ; CODE XREF: _PKCS12_add_CSPName_asc+1Ap
					; _PKCS12_add_friendlyname_asc+1Ap ...
		extrn _OPENSSL_uni2asc:near ; CODE XREF: _PKCS12_get_friendlyname+28p


		end

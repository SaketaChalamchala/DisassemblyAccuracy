;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	8C98CF199059839E2F6FAA70342EDD44
; Input	CRC32 :	049982BE

; File Name   :	C:\compspace\Diff\openssl\obj\smime.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_save_certs	proc near		; CODE XREF: _smime_main+1D86p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		test	eax, eax
		jnz	short loc_E
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------

loc_E:					; CODE XREF: _save_certs+6j
		push	ebx
		push	offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		push	eax
		call	_BIO_new_file
		mov	ebx, eax
		add	esp, 8
		test	ebx, ebx
		jnz	short loc_25
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_25:					; CODE XREF: _save_certs+21j
		push	esi
		push	edi
		mov	edi, [esp+0Ch+arg_4]
		xor	esi, esi
		push	edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_5C
		nop	word ptr [eax+eax+00h]

loc_40:					; CODE XREF: _save_certs+5Aj
		push	esi
		push	edi
		call	_sk_value
		push	eax
		push	ebx
		call	_PEM_write_bio_X509
		push	edi
		inc	esi
		call	_sk_num
		add	esp, 14h
		cmp	esi, eax
		jl	short loc_40

loc_5C:					; CODE XREF: _save_certs+38j
		push	ebx
		call	_BIO_free
		add	esp, 4
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebx
		retn
_save_certs	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 70h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_smime_cb	proc near		; DATA XREF: _smime_main+1ACAo

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	[esp+4+arg_4]
		call	_X509_STORE_CTX_get_error
		mov	esi, [esp+8+arg_0]
		add	esp, 4
		cmp	eax, 2Bh ; '+'
		jz	short loc_8F
		test	eax, eax
		jnz	short loc_9D
		cmp	esi, 2
		jnz	short loc_9D

loc_8F:					; CODE XREF: _smime_cb+14j
		push	[esp+4+arg_4]
		push	0
		call	_policies_print
		add	esp, 8

loc_9D:					; CODE XREF: _smime_cb+18j
					; _smime_cb+1Dj
		mov	eax, esi
		pop	esi
		retn
_smime_cb	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _smime_main
_smime_main	proc near

var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		mov	eax, 0A0h ; ' '
		call	__chkstk
		push	ebx
		push	ebp
		push	edi
		xor	eax, eax
		mov	[esp+0ACh+var_4C], offset ??_C@_01KDCPPGHE@r?$AA@ ; `string'
		mov	[esp+0ACh+var_8C], eax
		mov	[esp+0ACh+var_48], eax
		mov	[esp+0ACh+var_1C], eax
		mov	[esp+0ACh+var_7C], eax
		mov	[esp+0ACh+var_60], eax
		mov	[esp+0ACh+var_84], eax
		mov	[esp+0ACh+var_78], eax
		mov	[esp+0ACh+var_24], eax
		mov	[esp+0ACh+var_9C], eax
		mov	[esp+0ACh+var_20], eax
		mov	[esp+0ACh+var_34], eax
		mov	[esp+0ACh+var_30], eax
		mov	[esp+0ACh+var_64], eax
		mov	[esp+0ACh+var_94], eax
		mov	[esp+0ACh+var_58], eax
		mov	[esp+0ACh+var_54], eax
		mov	[esp+0ACh+var_74], eax
		mov	[esp+0ACh+var_6C], eax
		mov	[esp+0ACh+var_80], eax
		mov	[esp+0ACh+var_C], eax
		mov	[esp+0ACh+var_8], eax
		mov	[esp+0ACh+var_4], eax
		mov	[esp+0ACh+var_14], eax
		mov	[esp+0ACh+var_18], eax
		mov	[esp+0ACh+var_2C], eax
		mov	[esp+0ACh+var_50], eax
		mov	[esp+0ACh+var_28], eax
		mov	[esp+0ACh+var_70], eax
		mov	[esp+0ACh+var_68], eax
		mov	[esp+0ACh+var_10], eax
		mov	[esp+0ACh+var_90], eax
		mov	[esp+0ACh+var_38], eax
		mov	eax, [esp+0ACh+arg_4]
		add	eax, 4
		mov	[esp+0ACh+var_40], offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		xor	edi, edi
		mov	[esp+0ACh+var_A0], eax
		mov	eax, dword ptr ds:_bio_err
		xor	ebp, ebp
		mov	[esp+0ACh+var_88], edi
		mov	ebx, 40h ; '@'
		mov	[esp+0ACh+var_98], ebx
		mov	[esp+0ACh+var_44], 6
		mov	[esp+0ACh+var_5C], 6
		mov	[esp+0ACh+var_3C], 3
		test	eax, eax
		jnz	short loc_1DB
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_1DB
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		mov	eax, dword ptr ds:_bio_err
		add	esp, 14h

loc_1DB:				; CODE XREF: _smime_main+FEj
					; _smime_main+115j
		push	esi
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_1FA4
		mov	esi, [esp+0B0h+var_A0]
		cmp	[esp+0B0h+var_80], edi
		jnz	loc_12D3
		nop	dword ptr [eax+00000000h]

loc_204:				; CODE XREF: _smime_main+1229j
		mov	edi, [esi]
		test	edi, edi
		jz	loc_12D3
		cmp	byte ptr [edi],	2Dh ; '-'
		jnz	loc_12D3
		mov	ecx, offset ??_C@_08CNCNOCCN@?9encrypt?$AA@ ; "-encrypt"
		mov	eax, edi
		nop	word ptr [eax+eax+00h]

loc_224:				; CODE XREF: _smime_main+19Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_244
		test	dl, dl
		jz	short loc_240
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_244
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_224

loc_240:				; CODE XREF: _smime_main+188j
		xor	eax, eax
		jmp	short loc_249
; ---------------------------------------------------------------------------

loc_244:				; CODE XREF: _smime_main+184j
					; _smime_main+190j
		sbb	eax, eax
		or	eax, 1

loc_249:				; CODE XREF: _smime_main+19Ej
		test	eax, eax
		jnz	short loc_261
		add	esi, 4
		mov	[esp+0B0h+var_8C], 11h
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_261:				; CODE XREF: _smime_main+1A7j
		mov	ecx, offset ??_C@_08ODIALGEJ@?9decrypt?$AA@ ; "-decrypt"
		mov	eax, edi

loc_268:				; CODE XREF: _smime_main+1DEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_288
		test	dl, dl
		jz	short loc_284
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_288
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_268

loc_284:				; CODE XREF: _smime_main+1CCj
		xor	eax, eax
		jmp	short loc_28D
; ---------------------------------------------------------------------------

loc_288:				; CODE XREF: _smime_main+1C8j
					; _smime_main+1D4j
		sbb	eax, eax
		or	eax, 1

loc_28D:				; CODE XREF: _smime_main+1E2j
		test	eax, eax
		jnz	short loc_2A5
		add	esi, 4
		mov	[esp+0B0h+var_8C], 22h ; '"'
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_2A5:				; CODE XREF: _smime_main+1EBj
		mov	ecx, offset ??_C@_05LLLFPBKO@?9sign?$AA@ ; "-sign"
		mov	eax, edi

loc_2AC:				; CODE XREF: _smime_main+222j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2CC
		test	dl, dl
		jz	short loc_2C8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2CC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2AC

loc_2C8:				; CODE XREF: _smime_main+210j
		xor	eax, eax
		jmp	short loc_2D1
; ---------------------------------------------------------------------------

loc_2CC:				; CODE XREF: _smime_main+20Cj
					; _smime_main+218j
		sbb	eax, eax
		or	eax, 1

loc_2D1:				; CODE XREF: _smime_main+226j
		test	eax, eax
		jnz	short loc_2E9
		add	esi, 4
		mov	[esp+0B0h+var_8C], 53h ; 'S'
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_2E9:				; CODE XREF: _smime_main+22Fj
		mov	ecx, offset ??_C@_07JFNKLBOA@?9resign?$AA@ ; "-resign"
		mov	eax, edi
		nop	dword ptr [eax+00h]

loc_2F4:				; CODE XREF: _smime_main+26Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_314
		test	dl, dl
		jz	short loc_310
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_314
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2F4

loc_310:				; CODE XREF: _smime_main+258j
		xor	eax, eax
		jmp	short loc_319
; ---------------------------------------------------------------------------

loc_314:				; CODE XREF: _smime_main+254j
					; _smime_main+260j
		sbb	eax, eax
		or	eax, 1

loc_319:				; CODE XREF: _smime_main+26Ej
		test	eax, eax
		jnz	short loc_331
		add	esi, 4
		mov	[esp+0B0h+var_8C], 76h ; 'v'
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_331:				; CODE XREF: _smime_main+277j
		mov	ecx, offset ??_C@_07FILEFCOC@?9verify?$AA@ ; "-verify"
		mov	eax, edi

loc_338:				; CODE XREF: _smime_main+2AEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_358
		test	dl, dl
		jz	short loc_354
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_358
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_338

loc_354:				; CODE XREF: _smime_main+29Cj
		xor	eax, eax
		jmp	short loc_35D
; ---------------------------------------------------------------------------

loc_358:				; CODE XREF: _smime_main+298j
					; _smime_main+2A4j
		sbb	eax, eax
		or	eax, 1

loc_35D:				; CODE XREF: _smime_main+2B2j
		test	eax, eax
		jnz	short loc_375
		add	esi, 4
		mov	[esp+0B0h+var_8C], 24h ; '$'
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_375:				; CODE XREF: _smime_main+2BBj
		mov	ecx, offset ??_C@_07BPNIONCJ@?9pk7out?$AA@ ; "-pk7out"
		mov	eax, edi

loc_37C:				; CODE XREF: _smime_main+2F2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_39C
		test	dl, dl
		jz	short loc_398
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_39C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_37C

loc_398:				; CODE XREF: _smime_main+2E0j
		xor	eax, eax
		jmp	short loc_3A1
; ---------------------------------------------------------------------------

loc_39C:				; CODE XREF: _smime_main+2DCj
					; _smime_main+2E8j
		sbb	eax, eax
		or	eax, 1

loc_3A1:				; CODE XREF: _smime_main+2F6j
		test	eax, eax
		jnz	short loc_3B9
		add	esi, 4
		mov	[esp+0B0h+var_8C], 35h ; '5'
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_3B9:				; CODE XREF: _smime_main+2FFj
		mov	ecx, offset ??_C@_05DHJJCNDB@?9des3?$AA@ ; "-des3"
		mov	eax, edi
		nop	dword ptr [eax+00h]

loc_3C4:				; CODE XREF: _smime_main+33Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3E4
		test	dl, dl
		jz	short loc_3E0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3E4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3C4

loc_3E0:				; CODE XREF: _smime_main+328j
		xor	eax, eax
		jmp	short loc_3E9
; ---------------------------------------------------------------------------

loc_3E4:				; CODE XREF: _smime_main+324j
					; _smime_main+330j
		sbb	eax, eax
		or	eax, 1

loc_3E9:				; CODE XREF: _smime_main+33Ej
		test	eax, eax
		jnz	short loc_404
		call	_EVP_des_ede3_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_404:				; CODE XREF: _smime_main+347j
		mov	ecx, offset ??_C@_04POMGKAPN@?9des?$AA@	; "-des"
		mov	eax, edi

loc_40B:				; CODE XREF: _smime_main+381j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_42B
		test	dl, dl
		jz	short loc_427
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_42B
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_40B

loc_427:				; CODE XREF: _smime_main+36Fj
		xor	eax, eax
		jmp	short loc_430
; ---------------------------------------------------------------------------

loc_42B:				; CODE XREF: _smime_main+36Bj
					; _smime_main+377j
		sbb	eax, eax
		or	eax, 1

loc_430:				; CODE XREF: _smime_main+385j
		test	eax, eax
		jnz	short loc_44B
		call	_EVP_des_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_44B:				; CODE XREF: _smime_main+38Ej
		mov	ecx, offset ??_C@_05IAIHCPC@?9seed?$AA@	; "-seed"
		mov	eax, edi
		xchg	ax, ax

loc_454:				; CODE XREF: _smime_main+3CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_474
		test	dl, dl
		jz	short loc_470
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_474
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_454

loc_470:				; CODE XREF: _smime_main+3B8j
		xor	eax, eax
		jmp	short loc_479
; ---------------------------------------------------------------------------

loc_474:				; CODE XREF: _smime_main+3B4j
					; _smime_main+3C0j
		sbb	eax, eax
		or	eax, 1

loc_479:				; CODE XREF: _smime_main+3CEj
		test	eax, eax
		jnz	short loc_494
		call	_EVP_seed_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_494:				; CODE XREF: _smime_main+3D7j
		mov	ecx, offset ??_C@_07HIKEAMFN@?9rc2?940?$AA@ ; "-rc2-40"
		mov	eax, edi

loc_49B:				; CODE XREF: _smime_main+411j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4BB
		test	dl, dl
		jz	short loc_4B7
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4BB
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_49B

loc_4B7:				; CODE XREF: _smime_main+3FFj
		xor	eax, eax
		jmp	short loc_4C0
; ---------------------------------------------------------------------------

loc_4BB:				; CODE XREF: _smime_main+3FBj
					; _smime_main+407j
		sbb	eax, eax
		or	eax, 1

loc_4C0:				; CODE XREF: _smime_main+415j
		test	eax, eax
		jnz	short loc_4DB
		call	_EVP_rc2_40_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_4DB:				; CODE XREF: _smime_main+41Ej
		mov	ecx, offset ??_C@_08DGGHBBOC@?9rc2?9128?$AA@ ; "-rc2-128"
		mov	eax, edi
		xchg	ax, ax

loc_4E4:				; CODE XREF: _smime_main+45Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_504
		test	dl, dl
		jz	short loc_500
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_504
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4E4

loc_500:				; CODE XREF: _smime_main+448j
		xor	eax, eax
		jmp	short loc_509
; ---------------------------------------------------------------------------

loc_504:				; CODE XREF: _smime_main+444j
					; _smime_main+450j
		sbb	eax, eax
		or	eax, 1

loc_509:				; CODE XREF: _smime_main+45Ej
		test	eax, eax
		jnz	short loc_524
		call	_EVP_rc2_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_524:				; CODE XREF: _smime_main+467j
		mov	ecx, offset ??_C@_07BPEMBNDH@?9rc2?964?$AA@ ; "-rc2-64"
		mov	eax, edi

loc_52B:				; CODE XREF: _smime_main+4A1j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_54B
		test	dl, dl
		jz	short loc_547
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_54B
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_52B

loc_547:				; CODE XREF: _smime_main+48Fj
		xor	eax, eax
		jmp	short loc_550
; ---------------------------------------------------------------------------

loc_54B:				; CODE XREF: _smime_main+48Bj
					; _smime_main+497j
		sbb	eax, eax
		or	eax, 1

loc_550:				; CODE XREF: _smime_main+4A5j
		test	eax, eax
		jnz	short loc_56B
		call	_EVP_rc2_64_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_56B:				; CODE XREF: _smime_main+4AEj
		mov	ecx, offset ??_C@_07ELMDAGHH@?9aes128?$AA@ ; "-aes128"
		mov	eax, edi
		xchg	ax, ax

loc_574:				; CODE XREF: _smime_main+4EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_594
		test	dl, dl
		jz	short loc_590
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_594
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_574

loc_590:				; CODE XREF: _smime_main+4D8j
		xor	eax, eax
		jmp	short loc_599
; ---------------------------------------------------------------------------

loc_594:				; CODE XREF: _smime_main+4D4j
					; _smime_main+4E0j
		sbb	eax, eax
		or	eax, 1

loc_599:				; CODE XREF: _smime_main+4EEj
		test	eax, eax
		jnz	short loc_5B4
		call	_EVP_aes_128_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_5B4:				; CODE XREF: _smime_main+4F7j
		mov	ecx, offset ??_C@_07LNHJABBM@?9aes192?$AA@ ; "-aes192"
		mov	eax, edi

loc_5BB:				; CODE XREF: _smime_main+531j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5DB
		test	dl, dl
		jz	short loc_5D7
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5DB
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5BB

loc_5D7:				; CODE XREF: _smime_main+51Fj
		xor	eax, eax
		jmp	short loc_5E0
; ---------------------------------------------------------------------------

loc_5DB:				; CODE XREF: _smime_main+51Bj
					; _smime_main+527j
		sbb	eax, eax
		or	eax, 1

loc_5E0:				; CODE XREF: _smime_main+535j
		test	eax, eax
		jnz	short loc_5FB
		call	_EVP_aes_192_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_5FB:				; CODE XREF: _smime_main+53Ej
		mov	ecx, offset ??_C@_07MCLKJCJC@?9aes256?$AA@ ; "-aes256"
		mov	eax, edi
		xchg	ax, ax

loc_604:				; CODE XREF: _smime_main+57Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_624
		test	dl, dl
		jz	short loc_620
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_624
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_604

loc_620:				; CODE XREF: _smime_main+568j
		xor	eax, eax
		jmp	short loc_629
; ---------------------------------------------------------------------------

loc_624:				; CODE XREF: _smime_main+564j
					; _smime_main+570j
		sbb	eax, eax
		or	eax, 1

loc_629:				; CODE XREF: _smime_main+57Ej
		test	eax, eax
		jnz	short loc_644
		call	_EVP_aes_256_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_644:				; CODE XREF: _smime_main+587j
		mov	ecx, offset ??_C@_0N@MALOKPBG@?9camellia128?$AA@ ; "-camellia128"
		mov	eax, edi

loc_64B:				; CODE XREF: _smime_main+5C1j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_66B
		test	dl, dl
		jz	short loc_667
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_66B
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_64B

loc_667:				; CODE XREF: _smime_main+5AFj
		xor	eax, eax
		jmp	short loc_670
; ---------------------------------------------------------------------------

loc_66B:				; CODE XREF: _smime_main+5ABj
					; _smime_main+5B7j
		sbb	eax, eax
		or	eax, 1

loc_670:				; CODE XREF: _smime_main+5C5j
		test	eax, eax
		jnz	short loc_68B
		call	_EVP_camellia_128_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_68B:				; CODE XREF: _smime_main+5CEj
		mov	ecx, offset ??_C@_0N@DGAEKIHN@?9camellia192?$AA@ ; "-camellia192"
		mov	eax, edi
		xchg	ax, ax

loc_694:				; CODE XREF: _smime_main+60Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_6B4
		test	dl, dl
		jz	short loc_6B0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_6B4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_694

loc_6B0:				; CODE XREF: _smime_main+5F8j
		xor	eax, eax
		jmp	short loc_6B9
; ---------------------------------------------------------------------------

loc_6B4:				; CODE XREF: _smime_main+5F4j
					; _smime_main+600j
		sbb	eax, eax
		or	eax, 1

loc_6B9:				; CODE XREF: _smime_main+60Ej
		test	eax, eax
		jnz	short loc_6D4
		call	_EVP_camellia_192_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_6D4:				; CODE XREF: _smime_main+617j
		mov	ecx, offset ??_C@_0N@EJMHDLPD@?9camellia256?$AA@ ; "-camellia256"
		mov	eax, edi

loc_6DB:				; CODE XREF: _smime_main+651j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_6FB
		test	dl, dl
		jz	short loc_6F7
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_6FB
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_6DB

loc_6F7:				; CODE XREF: _smime_main+63Fj
		xor	eax, eax
		jmp	short loc_700
; ---------------------------------------------------------------------------

loc_6FB:				; CODE XREF: _smime_main+63Bj
					; _smime_main+647j
		sbb	eax, eax
		or	eax, 1

loc_700:				; CODE XREF: _smime_main+655j
		test	eax, eax
		jnz	short loc_71B
		call	_EVP_camellia_256_cbc
		mov	esi, [esp+0B0h+var_A0]
		mov	ebp, eax
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_71B:				; CODE XREF: _smime_main+65Ej
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, edi
		xchg	ax, ax

loc_724:				; CODE XREF: _smime_main+69Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_744
		test	dl, dl
		jz	short loc_740
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_744
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_724

loc_740:				; CODE XREF: _smime_main+688j
		xor	eax, eax
		jmp	short loc_749
; ---------------------------------------------------------------------------

loc_744:				; CODE XREF: _smime_main+684j
					; _smime_main+690j
		sbb	eax, eax
		or	eax, 1

loc_749:				; CODE XREF: _smime_main+69Ej
		test	eax, eax
		jnz	short loc_760
		or	ebx, 1
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_760:				; CODE XREF: _smime_main+6A7j
		mov	ecx, offset ??_C@_09LLMNCLPN@?9nointern?$AA@ ; "-nointern"
		mov	eax, edi

loc_767:				; CODE XREF: _smime_main+6DDj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_787
		test	dl, dl
		jz	short loc_783
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_787
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_767

loc_783:				; CODE XREF: _smime_main+6CBj
		xor	eax, eax
		jmp	short loc_78C
; ---------------------------------------------------------------------------

loc_787:				; CODE XREF: _smime_main+6C7j
					; _smime_main+6D3j
		sbb	eax, eax
		or	eax, 1

loc_78C:				; CODE XREF: _smime_main+6E1j
		test	eax, eax
		jnz	short loc_7A3
		or	ebx, 10h
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_7A3:				; CODE XREF: _smime_main+6EAj
		mov	ecx, offset ??_C@_09JLKGPCDL@?9noverify?$AA@ ; "-noverify"
		mov	eax, edi

loc_7AA:				; CODE XREF: _smime_main+720j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_7CA
		test	dl, dl
		jz	short loc_7C6
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_7CA
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_7AA

loc_7C6:				; CODE XREF: _smime_main+70Ej
		xor	eax, eax
		jmp	short loc_7CF
; ---------------------------------------------------------------------------

loc_7CA:				; CODE XREF: _smime_main+70Aj
					; _smime_main+716j
		sbb	eax, eax
		or	eax, 1

loc_7CF:				; CODE XREF: _smime_main+724j
		test	eax, eax
		jnz	short loc_7E6
		or	ebx, 20h
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_7E6:				; CODE XREF: _smime_main+72Dj
		mov	ecx, offset ??_C@_08MKBHGHLI@?9nochain?$AA@ ; "-nochain"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_7F4:				; CODE XREF: _smime_main+76Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_814
		test	dl, dl
		jz	short loc_810
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_814
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_7F4

loc_810:				; CODE XREF: _smime_main+758j
		xor	eax, eax
		jmp	short loc_819
; ---------------------------------------------------------------------------

loc_814:				; CODE XREF: _smime_main+754j
					; _smime_main+760j
		sbb	eax, eax
		or	eax, 1

loc_819:				; CODE XREF: _smime_main+76Ej
		test	eax, eax
		jnz	short loc_830
		or	ebx, 8
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_830:				; CODE XREF: _smime_main+777j
		mov	ecx, offset ??_C@_08JLLJAHEH@?9nocerts?$AA@ ; "-nocerts"
		mov	eax, edi

loc_837:				; CODE XREF: _smime_main+7ADj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_857
		test	dl, dl
		jz	short loc_853
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_857
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_837

loc_853:				; CODE XREF: _smime_main+79Bj
		xor	eax, eax
		jmp	short loc_85C
; ---------------------------------------------------------------------------

loc_857:				; CODE XREF: _smime_main+797j
					; _smime_main+7A3j
		sbb	eax, eax
		or	eax, 1

loc_85C:				; CODE XREF: _smime_main+7B1j
		test	eax, eax
		jnz	short loc_873
		or	ebx, 2
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_873:				; CODE XREF: _smime_main+7BAj
		mov	ecx, offset ??_C@_07NEHLGPOI@?9noattr?$AA@ ; "-noattr"
		mov	eax, edi

loc_87A:				; CODE XREF: _smime_main+7F0j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_89A
		test	dl, dl
		jz	short loc_896
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_89A
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_87A

loc_896:				; CODE XREF: _smime_main+7DEj
		xor	eax, eax
		jmp	short loc_89F
; ---------------------------------------------------------------------------

loc_89A:				; CODE XREF: _smime_main+7DAj
					; _smime_main+7E6j
		sbb	eax, eax
		or	eax, 1

loc_89F:				; CODE XREF: _smime_main+7F4j
		test	eax, eax
		jnz	short loc_8B9
		or	ebx, 100h
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_8B9:				; CODE XREF: _smime_main+7FDj
		mov	ecx, offset ??_C@_09HEABEDGI@?9nodetach?$AA@ ; "-nodetach"
		mov	eax, edi
		nop	dword ptr [eax+00h]

loc_8C4:				; CODE XREF: _smime_main+83Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_8E4
		test	dl, dl
		jz	short loc_8E0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_8E4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_8C4

loc_8E0:				; CODE XREF: _smime_main+828j
		xor	eax, eax
		jmp	short loc_8E9
; ---------------------------------------------------------------------------

loc_8E4:				; CODE XREF: _smime_main+824j
					; _smime_main+830j
		sbb	eax, eax
		or	eax, 1

loc_8E9:				; CODE XREF: _smime_main+83Ej
		test	eax, eax
		jnz	short loc_900
		and	ebx, 0FFFFFFBFh
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_900:				; CODE XREF: _smime_main+847j
		mov	ecx, offset ??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@	; "-nosmimecap"
		mov	eax, edi

loc_907:				; CODE XREF: _smime_main+87Dj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_927
		test	dl, dl
		jz	short loc_923
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_927
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_907

loc_923:				; CODE XREF: _smime_main+86Bj
		xor	eax, eax
		jmp	short loc_92C
; ---------------------------------------------------------------------------

loc_927:				; CODE XREF: _smime_main+867j
					; _smime_main+873j
		sbb	eax, eax
		or	eax, 1

loc_92C:				; CODE XREF: _smime_main+881j
		test	eax, eax
		jnz	short loc_946
		or	ebx, 200h
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_946:				; CODE XREF: _smime_main+88Aj
		mov	ecx, offset ??_C@_07MHGMHDIE@?9binary?$AA@ ; "-binary"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_954:				; CODE XREF: _smime_main+8CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_974
		test	dl, dl
		jz	short loc_970
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_974
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_954

loc_970:				; CODE XREF: _smime_main+8B8j
		xor	eax, eax
		jmp	short loc_979
; ---------------------------------------------------------------------------

loc_974:				; CODE XREF: _smime_main+8B4j
					; _smime_main+8C0j
		sbb	eax, eax
		or	eax, 1

loc_979:				; CODE XREF: _smime_main+8CEj
		test	eax, eax
		jnz	short loc_993
		or	ebx, 80h
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_993:				; CODE XREF: _smime_main+8D7j
		mov	ecx, offset ??_C@_07GLFDAICA@?9nosigs?$AA@ ; "-nosigs"
		mov	eax, edi

loc_99A:				; CODE XREF: _smime_main+910j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_9BA
		test	dl, dl
		jz	short loc_9B6
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_9BA
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_99A

loc_9B6:				; CODE XREF: _smime_main+8FEj
		xor	eax, eax
		jmp	short loc_9BF
; ---------------------------------------------------------------------------

loc_9BA:				; CODE XREF: _smime_main+8FAj
					; _smime_main+906j
		sbb	eax, eax
		or	eax, 1

loc_9BF:				; CODE XREF: _smime_main+914j
		test	eax, eax
		jnz	short loc_9D6
		or	ebx, 4
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_9D6:				; CODE XREF: _smime_main+91Dj
		mov	ecx, offset ??_C@_07KDDBNCBD@?9stream?$AA@ ; "-stream"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_9E4:				; CODE XREF: _smime_main+95Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_A04
		test	dl, dl
		jz	short loc_A00
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_A04
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_9E4

loc_A00:				; CODE XREF: _smime_main+948j
		xor	eax, eax
		jmp	short loc_A09
; ---------------------------------------------------------------------------

loc_A04:				; CODE XREF: _smime_main+944j
					; _smime_main+950j
		sbb	eax, eax
		or	eax, 1

loc_A09:				; CODE XREF: _smime_main+95Ej
		test	eax, eax
		jnz	short loc_A21
		add	esi, 4
		mov	[esp+0B0h+var_68], 1
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_A21:				; CODE XREF: _smime_main+967j
		mov	ecx, offset ??_C@_06MPPEKNN@?9indef?$AA@ ; "-indef"
		mov	eax, edi

loc_A28:				; CODE XREF: _smime_main+99Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_A48
		test	dl, dl
		jz	short loc_A44
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_A48
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_A28

loc_A44:				; CODE XREF: _smime_main+98Cj
		xor	eax, eax
		jmp	short loc_A4D
; ---------------------------------------------------------------------------

loc_A48:				; CODE XREF: _smime_main+988j
					; _smime_main+994j
		sbb	eax, eax
		or	eax, 1

loc_A4D:				; CODE XREF: _smime_main+9A2j
		test	eax, eax
		jnz	short loc_A65
		add	esi, 4
		mov	[esp+0B0h+var_68], 1
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_A65:				; CODE XREF: _smime_main+9ABj
		mov	ecx, offset ??_C@_08BCNBDCCA@?9noindef?$AA@ ; "-noindef"
		mov	eax, edi

loc_A6C:				; CODE XREF: _smime_main+9E2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_A8C
		test	dl, dl
		jz	short loc_A88
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_A8C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_A6C

loc_A88:				; CODE XREF: _smime_main+9D0j
		xor	eax, eax
		jmp	short loc_A91
; ---------------------------------------------------------------------------

loc_A8C:				; CODE XREF: _smime_main+9CCj
					; _smime_main+9D8j
		sbb	eax, eax
		or	eax, 1

loc_A91:				; CODE XREF: _smime_main+9E6j
		test	eax, eax
		jnz	short loc_AA5
		add	esi, 4
		mov	[esp+0B0h+var_68], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_AA5:				; CODE XREF: _smime_main+9EFj
		mov	ecx, offset ??_C@_0L@DMDFODFL@?9nooldmime?$AA@ ; "-nooldmime"
		mov	eax, edi

loc_AAC:				; CODE XREF: _smime_main+A22j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_ACC
		test	dl, dl
		jz	short loc_AC8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_ACC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_AAC

loc_AC8:				; CODE XREF: _smime_main+A10j
		xor	eax, eax
		jmp	short loc_AD1
; ---------------------------------------------------------------------------

loc_ACC:				; CODE XREF: _smime_main+A0Cj
					; _smime_main+A18j
		sbb	eax, eax
		or	eax, 1

loc_AD1:				; CODE XREF: _smime_main+A26j
		test	eax, eax
		jnz	short loc_AEB
		or	ebx, 400h
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_AEB:				; CODE XREF: _smime_main+A2Fj
		mov	ecx, offset ??_C@_08KAKEAKLE@?9crlfeol?$AA@ ; "-crlfeol"
		mov	eax, edi
		xchg	ax, ax

loc_AF4:				; CODE XREF: _smime_main+A6Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_B14
		test	dl, dl
		jz	short loc_B10
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_B14
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_AF4

loc_B10:				; CODE XREF: _smime_main+A58j
		xor	eax, eax
		jmp	short loc_B19
; ---------------------------------------------------------------------------

loc_B14:				; CODE XREF: _smime_main+A54j
					; _smime_main+A60j
		sbb	eax, eax
		or	eax, 1

loc_B19:				; CODE XREF: _smime_main+A6Ej
		test	eax, eax
		jnz	short loc_B33
		or	ebx, 800h
		add	esi, 4
		mov	[esp+0B0h+var_98], ebx
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_B33:				; CODE XREF: _smime_main+A77j
		mov	ecx, offset ??_C@_05LGFPCDPE@?9rand?$AA@ ; "-rand"
		mov	eax, edi

loc_B3A:				; CODE XREF: _smime_main+AB0j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_B5A
		test	dl, dl
		jz	short loc_B56
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_B5A
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_B3A

loc_B56:				; CODE XREF: _smime_main+A9Ej
		xor	eax, eax
		jmp	short loc_B5F
; ---------------------------------------------------------------------------

loc_B5A:				; CODE XREF: _smime_main+A9Aj
					; _smime_main+AA6j
		sbb	eax, eax
		or	eax, 1

loc_B5F:				; CODE XREF: _smime_main+AB4j
		test	eax, eax
		jnz	short loc_B8F
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_28], eax
		mov	[esp+0B0h+var_70], 1
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_B8F:				; CODE XREF: _smime_main+ABDj
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, edi

loc_B96:				; CODE XREF: _smime_main+B0Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_BB6
		test	dl, dl
		jz	short loc_BB2
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_BB6
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_B96

loc_BB2:				; CODE XREF: _smime_main+AFAj
		xor	eax, eax
		jmp	short loc_BBB
; ---------------------------------------------------------------------------

loc_BB6:				; CODE XREF: _smime_main+AF6j
					; _smime_main+B02j
		sbb	eax, eax
		or	eax, 1

loc_BBB:				; CODE XREF: _smime_main+B10j
		test	eax, eax
		jnz	short loc_BE0
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_90], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_BE0:				; CODE XREF: _smime_main+B19j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, edi

loc_BE7:				; CODE XREF: _smime_main+B5Dj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_C07
		test	dl, dl
		jz	short loc_C03
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_C07
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_BE7

loc_C03:				; CODE XREF: _smime_main+B4Bj
		xor	eax, eax
		jmp	short loc_C0C
; ---------------------------------------------------------------------------

loc_C07:				; CODE XREF: _smime_main+B47j
					; _smime_main+B53j
		sbb	eax, eax
		or	eax, 1

loc_C0C:				; CODE XREF: _smime_main+B61j
		test	eax, eax
		jnz	short loc_C34
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_2C], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_C34:				; CODE XREF: _smime_main+B6Aj
		mov	ecx, offset ??_C@_03DNHOOAOE@?9to?$AA@ ; "-to"
		mov	eax, edi

loc_C3B:				; CODE XREF: _smime_main+BB1j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_C5B
		test	dl, dl
		jz	short loc_C57
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_C5B
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_C3B

loc_C57:				; CODE XREF: _smime_main+B9Fj
		xor	eax, eax
		jmp	short loc_C60
; ---------------------------------------------------------------------------

loc_C5B:				; CODE XREF: _smime_main+B9Bj
					; _smime_main+BA7j
		sbb	eax, eax
		or	eax, 1

loc_C60:				; CODE XREF: _smime_main+BB5j
		test	eax, eax
		jnz	short loc_C88
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_C], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_C88:				; CODE XREF: _smime_main+BBEj
		mov	ecx, offset ??_C@_05LBJDDLLJ@?9from?$AA@ ; "-from"
		mov	eax, edi
		nop	dword ptr [eax+eax+00h]

loc_C94:				; CODE XREF: _smime_main+C0Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_CB4
		test	dl, dl
		jz	short loc_CB0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_CB4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_C94

loc_CB0:				; CODE XREF: _smime_main+BF8j
		xor	eax, eax
		jmp	short loc_CB9
; ---------------------------------------------------------------------------

loc_CB4:				; CODE XREF: _smime_main+BF4j
					; _smime_main+C00j
		sbb	eax, eax
		or	eax, 1

loc_CB9:				; CODE XREF: _smime_main+C0Ej
		test	eax, eax
		jnz	short loc_CE1
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_8], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_CE1:				; CODE XREF: _smime_main+C17j
		mov	ecx, offset ??_C@_08GNEDOIFN@?9subject?$AA@ ; "-subject"
		mov	eax, edi

loc_CE8:				; CODE XREF: _smime_main+C5Ej
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_D08
		test	dl, dl
		jz	short loc_D04
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_D08
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_CE8

loc_D04:				; CODE XREF: _smime_main+C4Cj
		xor	eax, eax
		jmp	short loc_D0D
; ---------------------------------------------------------------------------

loc_D08:				; CODE XREF: _smime_main+C48j
					; _smime_main+C54j
		sbb	eax, eax
		or	eax, 1

loc_D0D:				; CODE XREF: _smime_main+C62j
		test	eax, eax
		jnz	short loc_D35
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_4], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_D35:				; CODE XREF: _smime_main+C6Bj
		mov	ecx, offset ??_C@_07KJCLPKOH@?9signer?$AA@ ; "-signer"
		mov	eax, edi

loc_D3C:				; CODE XREF: _smime_main+CB2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_D5C
		test	dl, dl
		jz	short loc_D58
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_D5C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_D3C

loc_D58:				; CODE XREF: _smime_main+CA0j
		xor	eax, eax
		jmp	short loc_D61
; ---------------------------------------------------------------------------

loc_D5C:				; CODE XREF: _smime_main+C9Cj
					; _smime_main+CA8j
		sbb	eax, eax
		or	eax, 1

loc_D61:				; CODE XREF: _smime_main+CB6j
		test	eax, eax
		jnz	short loc_DDA
		cmp	[esi+4], eax
		jz	$argerr$550
		mov	edi, [esp+0B0h+var_7C]
		test	edi, edi
		jz	short loc_DC1
		mov	eax, [esp+0B0h+var_84]
		test	eax, eax
		jnz	short loc_D87
		call	_sk_new_null
		mov	[esp+0B0h+var_84], eax

loc_D87:				; CODE XREF: _smime_main+CD8j
		push	edi
		push	eax
		call	_sk_push
		mov	esi, [esp+0B8h+var_9C]
		add	esp, 8
		mov	eax, [esp+0B0h+var_78]
		test	esi, esi
		cmovz	esi, edi
		test	eax, eax
		jnz	short loc_DAB
		call	_sk_new_null
		mov	[esp+0B0h+var_78], eax

loc_DAB:				; CODE XREF: _smime_main+CFCj
		push	esi
		push	eax
		call	_sk_push
		mov	esi, [esp+0B8h+var_A0]
		add	esp, 8
		mov	[esp+0B0h+var_9C], 0

loc_DC1:				; CODE XREF: _smime_main+CD0j
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_7C], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_DDA:				; CODE XREF: _smime_main+CBFj
		mov	ecx, offset ??_C@_06JKGLPNJO@?9recip?$AA@ ; "-recip"
		mov	eax, edi
		nop	dword ptr [eax]

loc_DE4:				; CODE XREF: _smime_main+D5Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_E04
		test	dl, dl
		jz	short loc_E00
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_E04
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_DE4

loc_E00:				; CODE XREF: _smime_main+D48j
		xor	eax, eax
		jmp	short loc_E09
; ---------------------------------------------------------------------------

loc_E04:				; CODE XREF: _smime_main+D44j
					; _smime_main+D50j
		sbb	eax, eax
		or	eax, 1

loc_E09:				; CODE XREF: _smime_main+D5Ej
		test	eax, eax
		jnz	short loc_E2E
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_60], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_E2E:				; CODE XREF: _smime_main+D67j
		mov	ecx, offset ??_C@_03MNHNKBNA@?9md?$AA@ ; `string'
		mov	eax, edi

loc_E35:				; CODE XREF: _smime_main+DABj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_E55
		test	dl, dl
		jz	short loc_E51
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_E55
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_E35

loc_E51:				; CODE XREF: _smime_main+D99j
		xor	eax, eax
		jmp	short loc_E5A
; ---------------------------------------------------------------------------

loc_E55:				; CODE XREF: _smime_main+D95j
					; _smime_main+DA1j
		sbb	eax, eax
		or	eax, 1

loc_E5A:				; CODE XREF: _smime_main+DAFj
		test	eax, eax
		jnz	short loc_EA6
		cmp	dword ptr [esi+4], 0
		lea	eax, [esi+4]
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], eax
		push	dword ptr [eax]
		call	_EVP_get_digestbyname
		add	esp, 4
		mov	[esp+0B0h+var_10], eax
		test	eax, eax
		jnz	loc_12B7
		mov	eax, [esp+0B0h+var_A0]
		push	dword ptr [eax]
		push	offset ??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@	; "Unknown digest %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	$argerr$550
; ---------------------------------------------------------------------------

loc_EA6:				; CODE XREF: _smime_main+DB8j
		mov	ecx, offset ??_C@_06JJMGFEBF@?9inkey?$AA@ ; "-inkey"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_EB4:				; CODE XREF: _smime_main+E2Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_ED4
		test	dl, dl
		jz	short loc_ED0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_ED4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_EB4

loc_ED0:				; CODE XREF: _smime_main+E18j
		xor	eax, eax
		jmp	short loc_ED9
; ---------------------------------------------------------------------------

loc_ED4:				; CODE XREF: _smime_main+E14j
					; _smime_main+E20j
		sbb	eax, eax
		or	eax, 1

loc_ED9:				; CODE XREF: _smime_main+E2Ej
		test	eax, eax
		jnz	short loc_F55
		cmp	[esi+4], eax
		jz	$argerr$550
		mov	edi, [esp+0B0h+var_9C]
		test	edi, edi
		jz	short loc_F3C
		mov	esi, [esp+0B0h+var_7C]
		test	esi, esi
		jz	loc_1320
		mov	eax, [esp+0B0h+var_84]
		test	eax, eax
		jnz	short loc_F0B
		call	_sk_new_null
		mov	[esp+0B0h+var_84], eax

loc_F0B:				; CODE XREF: _smime_main+E5Cj
		push	esi
		push	eax
		call	_sk_push
		mov	eax, [esp+0B8h+var_78]
		add	esp, 8
		mov	[esp+0B0h+var_7C], 0
		test	eax, eax
		jnz	short loc_F2E
		call	_sk_new_null
		mov	[esp+0B0h+var_78], eax

loc_F2E:				; CODE XREF: _smime_main+E7Fj
		push	edi
		push	eax
		call	_sk_push
		mov	esi, [esp+0B8h+var_A0]
		add	esp, 8

loc_F3C:				; CODE XREF: _smime_main+E48j
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_9C], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_F55:				; CODE XREF: _smime_main+E37j
		mov	ecx, offset ??_C@_08OAHLMBGP@?9keyform?$AA@ ; "-keyform"
		mov	eax, edi

loc_F5C:				; CODE XREF: _smime_main+ED2j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_F7C
		test	dl, dl
		jz	short loc_F78
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_F7C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_F5C

loc_F78:				; CODE XREF: _smime_main+EC0j
		xor	eax, eax
		jmp	short loc_F81
; ---------------------------------------------------------------------------

loc_F7C:				; CODE XREF: _smime_main+EBCj
					; _smime_main+EC8j
		sbb	eax, eax
		or	eax, 1

loc_F81:				; CODE XREF: _smime_main+ED6j
		test	eax, eax
		jnz	short loc_FB4
		cmp	dword ptr [esi+4], 0
		lea	eax, [esi+4]
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], eax
		push	dword ptr [eax]
		call	_str2fmt
		mov	esi, [esp+0B4h+var_A0]
		add	esp, 4
		add	esi, 4
		mov	[esp+0B0h+var_3C], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_FB4:				; CODE XREF: _smime_main+EDFj
		mov	ecx, offset ??_C@_09LJGMBFEA@?9certfile?$AA@ ; "-certfile"
		mov	eax, edi

loc_FBB:				; CODE XREF: _smime_main+F31j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_FDB
		test	dl, dl
		jz	short loc_FD7
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_FDB
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_FBB

loc_FD7:				; CODE XREF: _smime_main+F1Fj
		xor	eax, eax
		jmp	short loc_FE0
; ---------------------------------------------------------------------------

loc_FDB:				; CODE XREF: _smime_main+F1Bj
					; _smime_main+F27j
		sbb	eax, eax
		or	eax, 1

loc_FE0:				; CODE XREF: _smime_main+F35j
		test	eax, eax
		jnz	short loc_1008
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_24], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_1008:				; CODE XREF: _smime_main+F3Ej
		mov	ecx, offset ??_C@_07EAFCHGPO@?9CAfile?$AA@ ; "-CAfile"
		mov	eax, edi
		nop	dword ptr [eax+eax+00h]

loc_1014:				; CODE XREF: _smime_main+F8Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1034
		test	dl, dl
		jz	short loc_1030
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1034
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1014

loc_1030:				; CODE XREF: _smime_main+F78j
		xor	eax, eax
		jmp	short loc_1039
; ---------------------------------------------------------------------------

loc_1034:				; CODE XREF: _smime_main+F74j
					; _smime_main+F80j
		sbb	eax, eax
		or	eax, 1

loc_1039:				; CODE XREF: _smime_main+F8Ej
		test	eax, eax
		jnz	short loc_1061
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_14], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_1061:				; CODE XREF: _smime_main+F97j
		mov	ecx, offset ??_C@_07MNNNLALG@?9CApath?$AA@ ; "-CApath"
		mov	eax, edi

loc_1068:				; CODE XREF: _smime_main+FDEj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1088
		test	dl, dl
		jz	short loc_1084
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1088
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1068

loc_1084:				; CODE XREF: _smime_main+FCCj
		xor	eax, eax
		jmp	short loc_108D
; ---------------------------------------------------------------------------

loc_1088:				; CODE XREF: _smime_main+FC8j
					; _smime_main+FD4j
		sbb	eax, eax
		or	eax, 1

loc_108D:				; CODE XREF: _smime_main+FE2j
		test	eax, eax
		jnz	short loc_10B5
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_18], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_10B5:				; CODE XREF: _smime_main+FEBj
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; "-in"
		mov	eax, edi

loc_10BC:				; CODE XREF: _smime_main+1032j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_10DC
		test	dl, dl
		jz	short loc_10D8
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_10DC
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_10BC

loc_10D8:				; CODE XREF: _smime_main+1020j
		xor	eax, eax
		jmp	short loc_10E1
; ---------------------------------------------------------------------------

loc_10DC:				; CODE XREF: _smime_main+101Cj
					; _smime_main+1028j
		sbb	eax, eax
		or	eax, 1

loc_10E1:				; CODE XREF: _smime_main+1036j
		test	eax, eax
		jnz	short loc_1106
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_48], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_1106:				; CODE XREF: _smime_main+103Fj
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_1114:				; CODE XREF: _smime_main+108Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1134
		test	dl, dl
		jz	short loc_1130
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1134
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1114

loc_1130:				; CODE XREF: _smime_main+1078j
		xor	eax, eax
		jmp	short loc_1139
; ---------------------------------------------------------------------------

loc_1134:				; CODE XREF: _smime_main+1074j
					; _smime_main+1080j
		sbb	eax, eax
		or	eax, 1

loc_1139:				; CODE XREF: _smime_main+108Ej
		test	eax, eax
		jnz	short loc_116C
		cmp	dword ptr [esi+4], 0
		lea	eax, [esi+4]
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], eax
		push	dword ptr [eax]
		call	_str2fmt
		mov	esi, [esp+0B4h+var_A0]
		add	esp, 4
		add	esi, 4
		mov	[esp+0B0h+var_44], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_116C:				; CODE XREF: _smime_main+1097j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, edi
		nop

loc_1174:				; CODE XREF: _smime_main+10EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1194
		test	dl, dl
		jz	short loc_1190
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1194
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1174

loc_1190:				; CODE XREF: _smime_main+10D8j
		xor	eax, eax
		jmp	short loc_1199
; ---------------------------------------------------------------------------

loc_1194:				; CODE XREF: _smime_main+10D4j
					; _smime_main+10E0j
		sbb	eax, eax
		or	eax, 1

loc_1199:				; CODE XREF: _smime_main+10EEj
		test	eax, eax
		jnz	short loc_11CC
		cmp	dword ptr [esi+4], 0
		lea	eax, [esi+4]
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], eax
		push	dword ptr [eax]
		call	_str2fmt
		mov	esi, [esp+0B4h+var_A0]
		add	esp, 4
		add	esi, 4
		mov	[esp+0B0h+var_5C], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_11CC:				; CODE XREF: _smime_main+10F7j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, edi
		nop

loc_11D4:				; CODE XREF: _smime_main+114Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_11F4
		test	dl, dl
		jz	short loc_11F0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_11F4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_11D4

loc_11F0:				; CODE XREF: _smime_main+1138j
		xor	eax, eax
		jmp	short loc_11F9
; ---------------------------------------------------------------------------

loc_11F4:				; CODE XREF: _smime_main+1134j
					; _smime_main+1140j
		sbb	eax, eax
		or	eax, 1

loc_11F9:				; CODE XREF: _smime_main+114Ej
		test	eax, eax
		jnz	short loc_1221
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_1C], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	loc_12C8
; ---------------------------------------------------------------------------

loc_1221:				; CODE XREF: _smime_main+1157j
		mov	eax, offset ??_C@_08HCJMGADN@?9content?$AA@ ; "-content"

loc_1226:				; CODE XREF: _smime_main+119Cj
		mov	cl, [edi]
		cmp	cl, [eax]
		jnz	short loc_1246
		test	cl, cl
		jz	short loc_1242
		mov	cl, [edi+1]
		cmp	cl, [eax+1]
		jnz	short loc_1246
		add	edi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_1226

loc_1242:				; CODE XREF: _smime_main+118Aj
		xor	eax, eax
		jmp	short loc_124B
; ---------------------------------------------------------------------------

loc_1246:				; CODE XREF: _smime_main+1186j
					; _smime_main+1192j
		sbb	eax, eax
		or	eax, 1

loc_124B:				; CODE XREF: _smime_main+11A0j
		test	eax, eax
		jnz	short loc_1270
		add	esi, 4
		cmp	[esi], eax
		jz	$argerr$550
		mov	[esp+0B0h+var_A0], esi
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+0B0h+var_20], eax
		mov	[esp+0B0h+var_A0], esi
		jmp	short loc_12C8
; ---------------------------------------------------------------------------

loc_1270:				; CODE XREF: _smime_main+11A9j
		lea	eax, [esp+0B0h+var_38]
		push	eax
		push	dword ptr ds:_bio_err
		lea	eax, [esp+0B8h+var_80]
		push	eax
		lea	eax, [esp+0BCh+var_A0]
		push	0
		push	eax
		call	_args_verify
		add	esp, 14h
		test	eax, eax
		jnz	short loc_12C4
		mov	eax, [esp+0B0h+var_A0]
		mov	eax, [eax]
		inc	eax
		push	eax
		call	_EVP_get_cipherbyname
		mov	ebp, eax
		add	esp, 4
		mov	eax, [esp+0B0h+var_80]
		test	ebp, ebp
		mov	ecx, 1
		cmovz	eax, ecx
		mov	[esp+0B0h+var_80], eax

loc_12B7:				; CODE XREF: _smime_main+DDEj
		mov	esi, [esp+0B0h+var_A0]
		add	esi, 4
		mov	[esp+0B0h+var_A0], esi
		jmp	short loc_12C8
; ---------------------------------------------------------------------------

loc_12C4:				; CODE XREF: _smime_main+11EDj
		mov	esi, [esp+0B0h+var_A0]

loc_12C8:				; CODE XREF: _smime_main+1B8j
					; _smime_main+1FCj ...
		cmp	[esp+0B0h+var_80], 0
		jz	loc_204

loc_12D3:				; CODE XREF: _smime_main+153j
					; _smime_main+164j ...
		mov	eax, [esp+0B0h+var_8C]
		mov	edi, eax
		and	edi, 40h
		jnz	short loc_1304
		cmp	[esp+0B0h+var_78], edi
		jnz	short loc_12EC
		mov	ecx, [esp+0B0h+var_84]
		test	ecx, ecx
		jz	short loc_1308

loc_12EC:				; CODE XREF: _smime_main+123Ej
		push	offset ??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@ ; "Multiple signers or	keys not allowed\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	$argerr$550
; ---------------------------------------------------------------------------

loc_1304:				; CODE XREF: _smime_main+1238j
		mov	ecx, [esp+0B0h+var_84]

loc_1308:				; CODE XREF: _smime_main+1246j
		test	edi, edi
		jz	loc_13B3
		mov	ebx, [esp+0B0h+var_9C]
		mov	esi, [esp+0B0h+var_7C]
		test	ebx, ebx
		jz	short loc_1338
		test	esi, esi
		jnz	short loc_133C

loc_1320:				; CODE XREF: _smime_main+E50j
		push	offset ??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@ ; "Illegal -inkey without -signer\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	$argerr$550
; ---------------------------------------------------------------------------

loc_1338:				; CODE XREF: _smime_main+1276j
		test	esi, esi
		jz	short loc_1375

loc_133C:				; CODE XREF: _smime_main+127Aj
		test	ecx, ecx
		jnz	short loc_134B
		call	_sk_new_null
		mov	ecx, eax
		mov	[esp+0B0h+var_84], ecx

loc_134B:				; CODE XREF: _smime_main+129Aj
		push	esi
		push	ecx
		call	_sk_push
		mov	eax, [esp+0B8h+var_78]
		add	esp, 8
		test	eax, eax
		jnz	short loc_1366
		call	_sk_new_null
		mov	[esp+0B0h+var_78], eax

loc_1366:				; CODE XREF: _smime_main+12B7j
		test	ebx, ebx
		cmovz	ebx, esi
		push	ebx
		push	eax
		call	_sk_push
		add	esp, 8

loc_1375:				; CODE XREF: _smime_main+1296j
		mov	eax, [esp+0B0h+var_84]
		test	eax, eax
		jnz	short loc_1398
		push	offset ??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@	; "No signer certificate specified\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	[esp+0B0h+var_80], 1

loc_1398:				; CODE XREF: _smime_main+12D7j
		mov	esi, 1
		mov	[esp+0B0h+var_7C], 0
		mov	[esp+0B0h+var_9C], 0
		mov	[esp+0B0h+var_70], esi
		jmp	short loc_1425
; ---------------------------------------------------------------------------

loc_13B3:				; CODE XREF: _smime_main+1266j
		cmp	eax, 22h ; '"'
		jnz	short loc_13E3
		cmp	[esp+0B0h+var_60], 0
		jnz	short loc_1421
		cmp	[esp+0B0h+var_9C], 0
		jnz	short loc_1421
		push	offset ??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@ ; "No recipient certificate or	key specifi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	[esp+0B0h+var_80], 1
		jmp	short $argerr$550
; ---------------------------------------------------------------------------

loc_13E3:				; CODE XREF: _smime_main+1312j
		cmp	eax, 11h
		jnz	short loc_1413
		cmp	dword ptr [esi], 0
		jnz	short loc_1408
		push	offset ??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@ ; "No recipient(s) certificate(s) specifie"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	[esp+0B0h+var_80], 1

loc_1408:				; CODE XREF: _smime_main+1347j
		mov	esi, 1
		mov	[esp+0B0h+var_70], esi
		jmp	short loc_1425
; ---------------------------------------------------------------------------

loc_1413:				; CODE XREF: _smime_main+1342j
		test	eax, eax
		jnz	short loc_1421
		mov	[esp+0B0h+var_80], 1
		jmp	short $argerr$550
; ---------------------------------------------------------------------------

loc_1421:				; CODE XREF: _smime_main+1319j
					; _smime_main+1320j ...
		mov	esi, [esp+0B0h+var_70]

loc_1425:				; CODE XREF: _smime_main+130Dj
					; _smime_main+136Dj
		cmp	[esp+0B0h+var_80], 0
		jz	loc_1767

$argerr$550:				; CODE XREF: _smime_main+AC4j
					; _smime_main+B20j ...
		push	offset ??_C@_0CE@FDJDGLAJ@Usage?5smime?5?$FLoptions?$FN?5cert?4pem?5?4@	; "Usage smime [options] cert.pem ...\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@ ; "-encrypt	   encrypt message\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@ ; "-decrypt       decrypt encrypted messag"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@ ; "-sign	   sign	message\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@ ; "-verify	 verify	signed message\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@BCDMICAJ@?9pk7out?5?5?5?5?5?5?5?5output?5PKCS?$CD7?5str@ ; "-pk7out	    output PKCS#7 structure\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@ ; "-des3	   encrypt with	triple DES\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@ ; "-des	     encrypt with DES\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@ ; "-seed	   encrypt with	SEED\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ ; "-rc2-40	   encrypt with	RC2-40 (def"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ ; "-rc2-64	   encrypt with	RC2-64\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@	; "-rc2-128	  encrypt with RC2-128\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; "-aes128, -aes192, -aes256\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ ; "	       encrypt PEM output with "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@ ; "-camellia128, -camellia192, -camellia25"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ ; "	       encrypt PEM output with "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@ ;	"-nointern	don't search certificate"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@	; "-nosigs	  don't verify message sig"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@ ; "-noverify      don't verify signers cer"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@ ; "-nocerts	 don't include signers ce"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@ ; "-nodetach      use opaque signing\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@	; "-noattr	  don't include any signed"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@	; "-binary	  don't translate message "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@	; "-certfile file other	certificates file\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@ ; "-signer file   signer certificate file\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@ ; "-recip  file   recipient certificate fi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@ ; "-in file       input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@ ; "-inform arg    input format SMIME (defa"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@ ; "-inkey file    input private key	(if no"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@ ; "-keyform arg   input private key format"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@ ; "-out file      output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@ ; "-outform arg   output format SMIME (def"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@ ; "-content file  supply or override conte"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@ ; "-to addr	      to address\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@ ; "-from	ad	 from address\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@ ; "-subject s	 subject\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@ ; "-text	   include or delete text M"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@ ; "-CApath dir    trusted certificates dir"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@ ; "-CAfile file   trusted certificates fil"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@ ; "-no_alt_chains only	ever use the first "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@ ; "-crl_check     check revocation status "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@	; "-crl_check_all check	revocation status "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@	; "-engine e	  use engine e,	possibly a"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@ ; "-passin	arg    input file pass phrase s"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	3Bh ; ';'
		push	3Bh ; ';'
		push	offset ??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; "-rand file%cfile%c...\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@ ; "		   load	the file (or the fi"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@ ; "	       the random number genera"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@ ; "cert.pem       recipient certificate(s)"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		xor	edi, edi
		add	esp, 10h
		xor	esi, esi
		xor	ebp, ebp
		lea	ebx, [edi+1]
		jmp	$end$551
; ---------------------------------------------------------------------------

loc_1767:				; CODE XREF: _smime_main+1386j
		push	0
		push	[esp+0B4h+var_90]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		push	0
		mov	ebx, eax
		lea	eax, [esp+0C0h+var_50]
		push	eax
		push	0
		push	[esp+0C8h+var_2C]
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 20h
		test	eax, eax
		jnz	short loc_17BD
		push	offset ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; "Error getting password\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		xor	edi, edi
		add	esp, 8
		xor	esi, esi
		xor	ebp, ebp
		lea	ebx, [edi+1]
		jmp	$end$551
; ---------------------------------------------------------------------------

loc_17BD:				; CODE XREF: _smime_main+16F6j
		test	esi, esi
		jz	short loc_17FE
		mov	esi, [esp+0B0h+var_28]
		xor	eax, eax
		test	esi, esi
		setnz	al
		push	eax
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		add	esp, 0Ch
		test	esi, esi
		jz	short loc_17FE
		push	esi
		call	_app_RAND_load_files
		push	eax
		push	offset ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; "%ld semi-random	bytes loaded\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h

loc_17FE:				; CODE XREF: _smime_main+171Bj
					; _smime_main+173Ej
		mov	ecx, [esp+0B0h+var_98]
		mov	[esp+0B0h+var_90], 2
		test	edi, edi
		jnz	short loc_1815
		and	ecx, 0FFFFFFBFh
		mov	[esp+0B0h+var_98], ecx

loc_1815:				; CODE XREF: _smime_main+1768j
		mov	edx, [esp+0B0h+var_8C]
		test	dl, 10h
		jz	short loc_182F
		cmp	[esp+0B0h+var_5C], 1
		jnz	short loc_1843
		mov	[esp+0B0h+var_40], offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		jmp	short loc_1843
; ---------------------------------------------------------------------------

loc_182F:				; CODE XREF: _smime_main+1778j
		test	cl, 80h
		mov	eax, offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		mov	esi, offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		cmovz	eax, esi
		mov	[esp+0B0h+var_40], eax

loc_1843:				; CODE XREF: _smime_main+177Fj
					; _smime_main+1789j
		mov	esi, edx
		and	esi, 20h
		jz	short loc_185B
		cmp	[esp+0B0h+var_44], 1
		jnz	short loc_186F
		mov	[esp+0B0h+var_4C], offset ??_C@_02JDPG@rb?$AA@ ; `string'
		jmp	short loc_186F
; ---------------------------------------------------------------------------

loc_185B:				; CODE XREF: _smime_main+17A4j
		test	cl, 80h
		mov	eax, offset ??_C@_02JDPG@rb?$AA@ ; `string'
		mov	ecx, offset ??_C@_01KDCPPGHE@r?$AA@ ; `string'
		cmovz	eax, ecx
		mov	[esp+0B0h+var_4C], eax

loc_186F:				; CODE XREF: _smime_main+17ABj
					; _smime_main+17B5j
		cmp	edx, 11h
		jnz	short loc_18CF
		test	ebp, ebp
		jnz	short loc_187F
		call	_EVP_des_ede3_cbc
		mov	ebp, eax

loc_187F:				; CODE XREF: _smime_main+17D2j
		call	_sk_new_null
		mov	[esp+0B0h+var_58], eax
		mov	eax, [esp+0B0h+var_A0]
		cmp	dword ptr [eax], 0
		jz	short loc_18CF
		nop	dword ptr [eax]

loc_1894:				; CODE XREF: _smime_main+1829j
		push	offset ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ ; "recipient certificate file"
		push	ebx
		push	0
		push	3
		push	dword ptr [eax]
		push	dword ptr ds:_bio_err
		call	_load_cert
		add	esp, 18h
		test	eax, eax
		jz	short loc_1909
		push	eax
		push	[esp+0B4h+var_58]
		call	_sk_push
		mov	eax, [esp+0B8h+var_A0]
		add	esp, 8
		add	eax, 4
		mov	[esp+0B0h+var_A0], eax
		cmp	dword ptr [eax], 0
		jnz	short loc_1894

loc_18CF:				; CODE XREF: _smime_main+17CEj
					; _smime_main+17EBj
		mov	eax, [esp+0B0h+var_24]
		test	eax, eax
		jz	short loc_1914
		push	offset ??_C@_0BB@ODBFPAJB@certificate?5file?$AA@ ; "certificate	file"
		push	ebx
		push	0
		push	3
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_certs
		add	esp, 18h
		mov	[esp+0B0h+var_54], eax
		test	eax, eax
		jnz	short loc_1914
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

loc_1909:				; CODE XREF: _smime_main+180Cj
		xor	edi, edi
		xor	esi, esi
		xor	ebp, ebp
		jmp	loc_1F83
; ---------------------------------------------------------------------------

loc_1914:				; CODE XREF: _smime_main+1834j
					; _smime_main+1855j
		mov	ecx, [esp+0B0h+var_60]
		mov	eax, [esp+0B0h+var_8C]
		test	ecx, ecx
		jz	short loc_1966
		cmp	eax, 22h ; '"'
		jnz	short loc_196F
		push	offset ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ ; "recipient certificate file"
		push	ebx
		push	0
		push	3
		push	ecx
		push	dword ptr ds:_bio_err
		call	_load_cert
		add	esp, 18h
		mov	[esp+0B0h+var_30], eax
		test	eax, eax
		jnz	loc_19ED
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		xor	edi, edi
		xor	esi, esi
		xor	ebp, ebp
		jmp	loc_1F83
; ---------------------------------------------------------------------------

loc_1966:				; CODE XREF: _smime_main+187Aj
		cmp	eax, 22h ; '"'
		jz	loc_19F1

loc_196F:				; CODE XREF: _smime_main+187Fj
		cmp	eax, 53h ; 'S'
		jnz	short loc_19AE
		mov	eax, [esp+0B0h+var_9C]
		test	eax, eax
		jnz	short loc_1984
		mov	eax, [esp+0B0h+var_7C]

loc_1980:				; CODE XREF: _smime_main+1957j
		test	eax, eax
		jz	short loc_19AE

loc_1984:				; CODE XREF: _smime_main+18D6j
					; _smime_main+1953j
		push	offset ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@ ; "signing key file"
		push	ebx
		push	[esp+0B8h+var_50]
		push	0
		push	[esp+0C0h+var_3C]
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_key
		add	esp, 1Ch
		mov	[esp+0B0h+var_94], eax
		test	eax, eax
		jz	short loc_19E4

loc_19AE:				; CODE XREF: _smime_main+18CEj
					; _smime_main+18DEj
		mov	eax, [esp+0B0h+var_48]
		test	eax, eax
		jz	short loc_19FD
		mov	ecx, [esp+0B0h+var_4C]
		push	ecx
		push	eax
		call	_BIO_new_file
		add	esp, 8
		mov	[esp+0B0h+var_74], eax
		test	eax, eax
		jnz	short loc_1A17
		mov	eax, [esp+0B0h+var_48]
		push	eax
		push	offset ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ ; "Can't open input file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

loc_19E4:				; CODE XREF: _smime_main+1908j
		xor	edi, edi
		xor	ebp, ebp
		jmp	loc_1F7F
; ---------------------------------------------------------------------------

loc_19ED:				; CODE XREF: _smime_main+18A3j
		mov	ecx, [esp+0B0h+var_60]

loc_19F1:				; CODE XREF: _smime_main+18C5j
		mov	eax, [esp+0B0h+var_9C]
		test	eax, eax
		jnz	short loc_1984
		mov	eax, ecx
		jmp	short loc_1980
; ---------------------------------------------------------------------------

loc_19FD:				; CODE XREF: _smime_main+1910j
		push	0
		push	0
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+0B0h+var_74], eax

loc_1A17:				; CODE XREF: _smime_main+1926j
		test	esi, esi
		jz	loc_1AE6
		mov	ecx, [esp+0B0h+var_44]
		cmp	ecx, 6
		jnz	short loc_1A35
		lea	ecx, [esp+0B0h+var_6C]
		push	ecx
		push	eax
		call	_SMIME_read_PKCS7
		jmp	short loc_1A58
; ---------------------------------------------------------------------------

loc_1A35:				; CODE XREF: _smime_main+1982j
		cmp	ecx, 3
		jnz	short loc_1A4B
		push	0
		push	0
		push	0
		push	eax
		call	_PEM_read_bio_PKCS7
		add	esp, 10h
		jmp	short loc_1A5B
; ---------------------------------------------------------------------------

loc_1A4B:				; CODE XREF: _smime_main+1994j
		cmp	ecx, 1
		jnz	short loc_1ACA
		push	0
		push	eax
		call	_d2i_PKCS7_bio

loc_1A58:				; CODE XREF: _smime_main+198Fj
		add	esp, 8

loc_1A5B:				; CODE XREF: _smime_main+19A5j
		mov	[esp+0B0h+var_88], eax
		test	eax, eax
		jnz	short loc_1A81
		push	offset ??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@ ; "Error reading S/MIME message\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+0B8h+var_88]
		add	esp, 8
		xor	ebp, ebp
		jmp	loc_1F7F
; ---------------------------------------------------------------------------

loc_1A81:				; CODE XREF: _smime_main+19BDj
		mov	esi, [esp+0B0h+var_20]
		test	esi, esi
		jz	short loc_1AE6
		push	[esp+0B0h+var_6C]
		call	_BIO_free
		push	offset ??_C@_02JDPG@rb?$AA@ ; `string'
		push	esi
		call	_BIO_new_file
		add	esp, 0Ch
		mov	[esp+0B0h+var_6C], eax
		test	eax, eax
		jnz	short loc_1AE6
		push	esi
		push	offset ??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@ ; "Can't read content file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+0BCh+var_88]
		add	esp, 0Ch
		xor	ebp, ebp
		jmp	loc_1F7F
; ---------------------------------------------------------------------------

loc_1ACA:				; CODE XREF: _smime_main+19AAj
		push	offset ??_C@_0CC@HBFGMGJF@Bad?5input?5format?5for?5PKCS?$CD7?5file@ ; "Bad input format	for PKCS#7 file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		xor	edi, edi
		xor	ebp, ebp
		jmp	loc_1F7F
; ---------------------------------------------------------------------------

loc_1AE6:				; CODE XREF: _smime_main+1975j
					; _smime_main+19E6j ...
		mov	esi, [esp+0B0h+var_1C]
		test	esi, esi
		jz	short loc_1B25
		push	[esp+0B0h+var_40]
		push	esi
		call	_BIO_new_file
		mov	ecx, eax
		add	esp, 8
		mov	[esp+0B0h+var_9C], ecx
		test	ecx, ecx
		jnz	short loc_1B3F
		push	esi
		push	offset ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ ; "Can't open output file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

loc_1B1C:				; CODE XREF: _smime_main+1AC8j
					; _smime_main+1C20j
		mov	edi, [esp+0B0h+var_88]
		jmp	loc_1F7B
; ---------------------------------------------------------------------------

loc_1B25:				; CODE XREF: _smime_main+1A4Bj
		push	0
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+0B0h+var_9C], eax

loc_1B3F:				; CODE XREF: _smime_main+1A62j
		mov	eax, [esp+0B0h+var_8C]
		cmp	eax, 24h ; '$'
		jnz	short loc_1B95
		push	[esp+0B0h+var_18]
		push	[esp+0B4h+var_14]
		push	dword ptr ds:_bio_err
		call	_setup_verify
		mov	esi, eax
		add	esp, 0Ch
		mov	[esp+0B0h+var_34], esi
		test	esi, esi
		jz	short loc_1B1C
		push	offset _smime_cb
		push	esi
		call	_X509_STORE_set_verify_cb
		mov	eax, [esp+0B8h+var_38]
		add	esp, 8
		test	eax, eax
		jz	short loc_1B91
		push	eax
		push	esi
		call	_X509_STORE_set1_param
		add	esp, 8

loc_1B91:				; CODE XREF: _smime_main+1AE1j
		mov	eax, [esp+0B0h+var_8C]

loc_1B95:				; CODE XREF: _smime_main+1AA2j
		mov	[esp+0B0h+var_90], 3
		cmp	eax, 11h
		jnz	short loc_1BDE
		cmp	[esp+0B0h+var_68], 0
		mov	ebx, [esp+0B0h+var_98]
		jz	short loc_1BB3
		or	ebx, 1000h

loc_1BB3:				; CODE XREF: _smime_main+1B07j
		mov	esi, [esp+0B0h+var_74]
		push	ebx
		push	ebp
		push	esi
		push	[esp+0BCh+var_58]
		call	_PKCS7_encrypt
		add	esp, 10h
		mov	edi, eax

loc_1BC8:				; CODE XREF: _smime_main+1CE0j
		mov	eax, [esp+0B0h+var_8C]

loc_1BCC:				; CODE XREF: _smime_main+1CC7j
					; _smime_main+1CF1j
		test	edi, edi
		jnz	loc_1D9A
		push	offset ??_C@_0CB@JGCGHEEA@Error?5creating?5PKCS?$CD7?5structure?6@ ; "Error creating PKCS#7 structure\n"
		jmp	loc_1F6D
; ---------------------------------------------------------------------------

loc_1BDE:				; CODE XREF: _smime_main+1AFCj
		test	edi, edi
		jz	loc_1D89
		cmp	eax, 53h ; 'S'
		jnz	short loc_1C69
		mov	eax, [esp+0B0h+var_98]
		test	al, 40h
		jz	short loc_1BFC
		cmp	[esp+0B0h+var_5C], 6
		jnz	short loc_1C08
		jmp	short loc_1C03
; ---------------------------------------------------------------------------

loc_1BFC:				; CODE XREF: _smime_main+1B4Dj
		cmp	[esp+0B0h+var_68], 0
		jz	short loc_1C08

loc_1C03:				; CODE XREF: _smime_main+1B56j
		or	eax, 1000h

loc_1C08:				; CODE XREF: _smime_main+1B54j
					; _smime_main+1B5Dj
		mov	ebp, [esp+0B0h+var_54]
		or	eax, 4000h
		push	eax
		push	[esp+0B4h+var_74]
		mov	[esp+0B8h+var_98], eax
		push	ebp
		push	0
		push	0
		call	_PKCS7_sign
		mov	edi, eax
		add	esp, 14h
		mov	[esp+0B0h+var_88], edi
		test	edi, edi
		jz	loc_1F7B
		test	byte ptr [esp+0B0h+var_98], 2
		jz	short loc_1C75
		push	ebp
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_1C75

loc_1C4B:				; CODE XREF: _smime_main+1BC1j
		push	esi
		push	ebp
		call	_sk_value
		push	eax
		push	edi
		call	_PKCS7_add_certificate
		push	ebp
		inc	esi
		call	_sk_num
		add	esp, 14h
		cmp	esi, eax
		jl	short loc_1C4B
		jmp	short loc_1C75
; ---------------------------------------------------------------------------

loc_1C69:				; CODE XREF: _smime_main+1B45j
		or	[esp+0B0h+var_98], 8000h
		mov	edi, [esp+0B0h+var_88]

loc_1C75:				; CODE XREF: _smime_main+1B96j
					; _smime_main+1BA5j ...
		mov	ebp, [esp+0B0h+var_84]
		xor	esi, esi
		push	ebp
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	loc_1D54

loc_1C8C:				; CODE XREF: _smime_main+1CAAj
		push	esi
		push	ebp
		call	_sk_value
		push	esi
		push	[esp+0BCh+var_78]
		mov	ebp, eax
		mov	[esp+0C0h+var_7C], ebp
		call	_sk_value
		push	offset ??_C@_0BD@FNCKELBI@signer?5certificate?$AA@ ; "signer certificate"
		push	ebx
		push	0
		push	3
		push	ebp
		push	dword ptr ds:_bio_err
		mov	edi, eax
		call	_load_cert
		add	esp, 28h
		mov	[esp+0B0h+var_64], eax
		test	eax, eax
		jz	loc_1B1C
		push	offset ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@ ; "signing key file"
		push	ebx
		push	[esp+0B8h+var_50]
		push	0
		push	[esp+0C0h+var_3C]
		push	edi
		push	dword ptr ds:_bio_err
		call	_load_key
		mov	edi, [esp+0CCh+var_88]
		mov	ebp, eax
		add	esp, 1Ch
		mov	[esp+0B0h+var_94], ebp
		test	ebp, ebp
		jz	loc_1F7B
		push	[esp+0B0h+var_98]
		push	[esp+0B4h+var_10]
		push	ebp
		push	[esp+0BCh+var_64]
		push	edi
		call	_PKCS7_sign_add_signer
		add	esp, 14h
		test	eax, eax
		jz	loc_1F7B
		push	[esp+0B0h+var_64]
		call	_X509_free
		push	ebp
		mov	[esp+0B8h+var_64], 0
		call	_EVP_PKEY_free
		mov	ebp, [esp+0B8h+var_84]
		inc	esi
		push	ebp
		mov	[esp+0BCh+var_94], 0
		call	_sk_num
		add	esp, 0Ch
		cmp	esi, eax
		jl	loc_1C8C

loc_1D54:				; CODE XREF: _smime_main+1BE2j
		mov	eax, [esp+0B0h+var_8C]
		mov	ebx, [esp+0B0h+var_98]
		cmp	eax, 53h ; 'S'
		jnz	short loc_1D91
		mov	esi, [esp+0B0h+var_74]
		test	ebx, 1000h
		jnz	loc_1BCC
		push	ebx
		push	esi
		push	edi
		call	_PKCS7_final
		add	esp, 0Ch
		test	eax, eax
		jz	loc_1F7B
		jmp	loc_1BC8
; ---------------------------------------------------------------------------

loc_1D89:				; CODE XREF: _smime_main+1B3Cj
		mov	ebx, [esp+0B0h+var_98]
		mov	edi, [esp+0B0h+var_88]

loc_1D91:				; CODE XREF: _smime_main+1CBBj
		mov	esi, [esp+0B0h+var_74]
		jmp	loc_1BCC
; ---------------------------------------------------------------------------

loc_1D9A:				; CODE XREF: _smime_main+1B2Aj
		mov	ebp, [esp+0B0h+var_9C]
		mov	[esp+0B0h+var_90], 4
		cmp	eax, 22h ; '"'
		jnz	short loc_1DE2
		mov	esi, [esp+0B0h+var_94]
		push	ebx
		push	ebp
		push	[esp+0B8h+var_30]
		push	esi
		push	edi
		call	_PKCS7_decrypt
		add	esp, 14h
		test	eax, eax
		jnz	loc_1F60
		push	offset ??_C@_0CD@CBBKKHHG@Error?5decrypting?5PKCS?$CD7?5structur@ ; "Error decrypting PKCS#7 structure\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_1F83
; ---------------------------------------------------------------------------

loc_1DE2:				; CODE XREF: _smime_main+1D05j
		cmp	eax, 24h ; '$'
		jnz	loc_1E84
		mov	esi, [esp+0B0h+var_54]
		push	ebx
		push	ebp
		push	[esp+0B8h+var_6C]
		push	[esp+0BCh+var_34]
		push	esi
		push	edi
		call	_PKCS7_verify
		add	esp, 18h
		test	eax, eax
		jz	short loc_1E6C
		push	offset ??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@ ; "Verification successful\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	ebx
		push	esi
		push	edi
		call	_PKCS7_get0_signers
		mov	ebx, [esp+0C4h+var_7C]
		mov	esi, eax
		push	esi
		push	ebx
		call	_save_certs
		add	esp, 1Ch
		test	eax, eax
		jnz	short loc_1E58
		push	ebx
		push	offset ??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@ ; "Error writing signers to %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	esi, [esp+0BCh+var_94]
		add	esp, 0Ch
		mov	ebx, 5
		jmp	$end$551
; ---------------------------------------------------------------------------

loc_1E58:				; CODE XREF: _smime_main+1D90j
		push	esi
		call	_sk_free
		mov	esi, [esp+0B4h+var_94]
		add	esp, 4
		xor	ebx, ebx
		jmp	$end$551
; ---------------------------------------------------------------------------

loc_1E6C:				; CODE XREF: _smime_main+1D64j
		push	offset ??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@ ; "Verification failure\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_1F7F
; ---------------------------------------------------------------------------

loc_1E84:				; CODE XREF: _smime_main+1D41j
		cmp	eax, 35h ; '5'
		jnz	short loc_1E9E
		push	edi
		push	ebp
		call	_PEM_write_bio_PKCS7
		mov	esi, [esp+0B8h+var_94]
		add	esp, 8
		xor	ebx, ebx
		jmp	$end$551
; ---------------------------------------------------------------------------

loc_1E9E:				; CODE XREF: _smime_main+1DE3j
		mov	eax, [esp+0B0h+var_C]
		test	eax, eax
		jz	short loc_1EB8
		push	eax
		push	offset ??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@ ; "To: %s\n"
		push	ebp
		call	_BIO_printf
		add	esp, 0Ch

loc_1EB8:				; CODE XREF: _smime_main+1E03j
		mov	eax, [esp+0B0h+var_8]
		test	eax, eax
		jz	short loc_1ED2
		push	eax
		push	offset ??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@ ; "From: %s\n"
		push	ebp
		call	_BIO_printf
		add	esp, 0Ch

loc_1ED2:				; CODE XREF: _smime_main+1E1Dj
		mov	eax, [esp+0B0h+var_4]
		test	eax, eax
		jz	short loc_1EEC
		push	eax
		push	offset ??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@ ; "Subject: %s\n"
		push	ebp
		call	_BIO_printf
		add	esp, 0Ch

loc_1EEC:				; CODE XREF: _smime_main+1E37j
		mov	eax, [esp+0B0h+var_5C]
		cmp	eax, 6
		jnz	short loc_1F2E
		cmp	[esp+0B0h+var_8C], 76h ; 'v'
		push	ebx
		jnz	short loc_1F17
		push	[esp+0B4h+var_6C]
		push	edi
		push	ebp
		call	_SMIME_write_PKCS7
		mov	esi, [esp+0C0h+var_94]
		add	esp, 10h
		mov	ebp, [esp+0B0h+var_9C]
		xor	ebx, ebx
		jmp	short $end$551
; ---------------------------------------------------------------------------

loc_1F17:				; CODE XREF: _smime_main+1E57j
		push	esi
		push	edi
		push	ebp
		call	_SMIME_write_PKCS7
		mov	esi, [esp+0C0h+var_94]
		add	esp, 10h
		mov	ebp, [esp+0B0h+var_9C]
		xor	ebx, ebx
		jmp	short $end$551
; ---------------------------------------------------------------------------

loc_1F2E:				; CODE XREF: _smime_main+1E4Fj
		cmp	eax, 3
		jnz	short loc_1F4B
		push	ebx
		push	esi
		push	edi
		push	ebp
		call	_PEM_write_bio_PKCS7_stream
		mov	esi, [esp+0C0h+var_94]
		add	esp, 10h
		mov	ebp, [esp+0B0h+var_9C]
		xor	ebx, ebx
		jmp	short $end$551
; ---------------------------------------------------------------------------

loc_1F4B:				; CODE XREF: _smime_main+1E8Dj
		cmp	eax, 1
		jnz	short loc_1F68
		push	ebx
		push	esi
		push	edi
		push	ebp
		call	_i2d_PKCS7_bio_stream
		mov	esi, [esp+0C0h+var_94]
		add	esp, 10h

loc_1F60:				; CODE XREF: _smime_main+1D20j
		mov	ebp, [esp+0B0h+var_9C]
		xor	ebx, ebx
		jmp	short $end$551
; ---------------------------------------------------------------------------

loc_1F68:				; CODE XREF: _smime_main+1EAAj
		push	offset ??_C@_0CD@FBKFMBCI@Bad?5output?5format?5for?5PKCS?$CD7?5fil@ ; "Bad output format for PKCS#7 file\n"

loc_1F6D:				; CODE XREF: _smime_main+1B35j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_1F7B:				; CODE XREF: _smime_main+1A7Cj
					; _smime_main+1B8Bj ...
		mov	ebp, [esp+0B0h+var_9C]

loc_1F7F:				; CODE XREF: _smime_main+1944j
					; _smime_main+19D8j ...
		mov	esi, [esp+0B0h+var_94]

loc_1F83:				; CODE XREF: _smime_main+186Bj
					; _smime_main+18BDj ...
		mov	ebx, [esp+0B0h+var_90]

$end$551:				; CODE XREF: _smime_main+16BEj
					; _smime_main+1714j ...
		cmp	[esp+0B0h+var_70], 0
		jz	short loc_1F9E
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_write_file
		add	esp, 8

loc_1F9E:				; CODE XREF: _smime_main+1EE8j
		test	ebx, ebx
		jz	short loc_1FB9
		jmp	short loc_1FAB
; ---------------------------------------------------------------------------

loc_1FA4:				; CODE XREF: _smime_main+145j
		xor	esi, esi
		xor	ebp, ebp
		lea	ebx, [esi+1]

loc_1FAB:				; CODE XREF: _smime_main+1EFEj
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4

loc_1FB9:				; CODE XREF: _smime_main+1EFCj
		push	offset _X509_free
		push	[esp+0B4h+var_58]
		call	_sk_pop_free
		push	offset _X509_free
		push	[esp+0BCh+var_54]
		call	_sk_pop_free
		mov	eax, [esp+0C0h+var_38]
		add	esp, 10h
		test	eax, eax
		jz	short loc_1FEC
		push	eax
		call	_X509_VERIFY_PARAM_free
		add	esp, 4

loc_1FEC:				; CODE XREF: _smime_main+1F3Dj
		mov	eax, [esp+0B0h+var_84]
		test	eax, eax
		jz	short loc_1FFD
		push	eax
		call	_sk_free
		add	esp, 4

loc_1FFD:				; CODE XREF: _smime_main+1F4Ej
		mov	eax, [esp+0B0h+var_78]
		test	eax, eax
		jz	short loc_200E
		push	eax
		call	_sk_free
		add	esp, 4

loc_200E:				; CODE XREF: _smime_main+1F5Fj
		push	[esp+0B0h+var_34]
		call	_X509_STORE_free
		push	0
		call	_X509_free
		push	[esp+0B8h+var_30]
		call	_X509_free
		push	[esp+0BCh+var_64]
		call	_X509_free
		push	esi
		call	_EVP_PKEY_free
		push	edi
		call	_PKCS7_free
		push	[esp+0C8h+var_74]
		call	_BIO_free
		push	[esp+0CCh+var_6C]
		call	_BIO_free
		push	ebp
		call	_BIO_free_all
		mov	ecx, [esp+0D4h+var_50]
		add	esp, 24h
		pop	esi
		test	ecx, ecx
		jz	short loc_206F
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_206F:				; CODE XREF: _smime_main+1FC0j
		pop	edi
		pop	ebp
		mov	eax, ebx
		pop	ebx
		add	esp, 0A0h
		retn
_smime_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 207Ch
; COMDAT (pick any)
		public ??_C@_01KDCPPGHE@r?$AA@
; `string'
??_C@_01KDCPPGHE@r?$AA@	db 72h,	0	; DATA XREF: _smime_main+Fo
					; _smime_main+17BFo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2080h
; COMDAT (pick any)
		public ??_C@_01NOFIACDB@w?$AA@
; `string'
??_C@_01NOFIACDB@w?$AA@	db 77h,	0	; DATA XREF: _save_certs+Fo
					; _smime_main+C2o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2084h
; COMDAT (pick any)
		public ??_C@_08CNCNOCCN@?9encrypt?$AA@
; `string'
??_C@_08CNCNOCCN@?9encrypt?$AA@	db '-encrypt',0 ; DATA XREF: _smime_main+173o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2090h
; COMDAT (pick any)
		public ??_C@_08ODIALGEJ@?9decrypt?$AA@
; `string'
??_C@_08ODIALGEJ@?9decrypt?$AA@	db '-decrypt',0 ; DATA XREF: _smime_main:loc_261o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 209Ch
; COMDAT (pick any)
		public ??_C@_05LLLFPBKO@?9sign?$AA@
; `string'
??_C@_05LLLFPBKO@?9sign?$AA@ db	'-sign',0 ; DATA XREF: _smime_main:loc_2A5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20A4h
; COMDAT (pick any)
		public ??_C@_07JFNKLBOA@?9resign?$AA@
; `string'
??_C@_07JFNKLBOA@?9resign?$AA@ db '-resign',0 ; DATA XREF: _smime_main:loc_2E9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20ACh
; COMDAT (pick any)
		public ??_C@_07FILEFCOC@?9verify?$AA@
; `string'
??_C@_07FILEFCOC@?9verify?$AA@ db '-verify',0 ; DATA XREF: _smime_main:loc_331o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20B4h
; COMDAT (pick any)
		public ??_C@_07BPNIONCJ@?9pk7out?$AA@
; `string'
??_C@_07BPNIONCJ@?9pk7out?$AA@ db '-pk7out',0 ; DATA XREF: _smime_main:loc_375o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20BCh
; COMDAT (pick any)
		public ??_C@_05DHJJCNDB@?9des3?$AA@
; `string'
??_C@_05DHJJCNDB@?9des3?$AA@ db	'-des3',0 ; DATA XREF: _smime_main:loc_3B9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20C4h
; COMDAT (pick any)
		public ??_C@_04POMGKAPN@?9des?$AA@
; `string'
??_C@_04POMGKAPN@?9des?$AA@ db '-des',0 ; DATA XREF: _smime_main:loc_404o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20CCh
; COMDAT (pick any)
		public ??_C@_05IAIHCPC@?9seed?$AA@
; `string'
??_C@_05IAIHCPC@?9seed?$AA@ db '-seed',0 ; DATA XREF: _smime_main:loc_44Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20D4h
; COMDAT (pick any)
		public ??_C@_07HIKEAMFN@?9rc2?940?$AA@
; `string'
??_C@_07HIKEAMFN@?9rc2?940?$AA@	db '-rc2-40',0 ; DATA XREF: _smime_main:loc_494o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20DCh
; COMDAT (pick any)
		public ??_C@_08DGGHBBOC@?9rc2?9128?$AA@
; `string'
??_C@_08DGGHBBOC@?9rc2?9128?$AA@ db '-rc2-128',0 ; DATA XREF: _smime_main:loc_4DBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20E8h
; COMDAT (pick any)
		public ??_C@_07BPEMBNDH@?9rc2?964?$AA@
; `string'
??_C@_07BPEMBNDH@?9rc2?964?$AA@	db '-rc2-64',0 ; DATA XREF: _smime_main:loc_524o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20F0h
; COMDAT (pick any)
		public ??_C@_07ELMDAGHH@?9aes128?$AA@
; `string'
??_C@_07ELMDAGHH@?9aes128?$AA@ db '-aes128',0 ; DATA XREF: _smime_main:loc_56Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20F8h
; COMDAT (pick any)
		public ??_C@_07LNHJABBM@?9aes192?$AA@
; `string'
??_C@_07LNHJABBM@?9aes192?$AA@ db '-aes192',0 ; DATA XREF: _smime_main:loc_5B4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2100h
; COMDAT (pick any)
		public ??_C@_07MCLKJCJC@?9aes256?$AA@
; `string'
??_C@_07MCLKJCJC@?9aes256?$AA@ db '-aes256',0 ; DATA XREF: _smime_main:loc_5FBo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2108h
; COMDAT (pick any)
		public ??_C@_0N@MALOKPBG@?9camellia128?$AA@
; `string'
??_C@_0N@MALOKPBG@?9camellia128?$AA@ db	'-camellia128',0 ; DATA XREF: _smime_main:loc_644o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2118h
; COMDAT (pick any)
		public ??_C@_0N@DGAEKIHN@?9camellia192?$AA@
; `string'
??_C@_0N@DGAEKIHN@?9camellia192?$AA@ db	'-camellia192',0 ; DATA XREF: _smime_main:loc_68Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2128h
; COMDAT (pick any)
		public ??_C@_0N@EJMHDLPD@?9camellia256?$AA@
; `string'
??_C@_0N@EJMHDLPD@?9camellia256?$AA@ db	'-camellia256',0 ; DATA XREF: _smime_main:loc_6D4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2138h
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _smime_main:loc_71Bo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2140h
; COMDAT (pick any)
		public ??_C@_09LLMNCLPN@?9nointern?$AA@
; `string'
??_C@_09LLMNCLPN@?9nointern?$AA@ db '-nointern',0 ; DATA XREF: _smime_main:loc_760o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 214Ch
; COMDAT (pick any)
		public ??_C@_09JLKGPCDL@?9noverify?$AA@
; `string'
??_C@_09JLKGPCDL@?9noverify?$AA@ db '-noverify',0 ; DATA XREF: _smime_main:loc_7A3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2158h
; COMDAT (pick any)
		public ??_C@_08MKBHGHLI@?9nochain?$AA@
; `string'
??_C@_08MKBHGHLI@?9nochain?$AA@	db '-nochain',0 ; DATA XREF: _smime_main:loc_7E6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2164h
; COMDAT (pick any)
		public ??_C@_08JLLJAHEH@?9nocerts?$AA@
; `string'
??_C@_08JLLJAHEH@?9nocerts?$AA@	db '-nocerts',0 ; DATA XREF: _smime_main:loc_830o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2170h
; COMDAT (pick any)
		public ??_C@_07NEHLGPOI@?9noattr?$AA@
; `string'
??_C@_07NEHLGPOI@?9noattr?$AA@ db '-noattr',0 ; DATA XREF: _smime_main:loc_873o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2178h
; COMDAT (pick any)
		public ??_C@_09HEABEDGI@?9nodetach?$AA@
; `string'
??_C@_09HEABEDGI@?9nodetach?$AA@ db '-nodetach',0 ; DATA XREF: _smime_main:loc_8B9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2184h
; COMDAT (pick any)
		public ??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@
; `string'
??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@ db '-nosmimecap',0 ; DATA XREF: _smime_main:loc_900o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2190h
; COMDAT (pick any)
		public ??_C@_07MHGMHDIE@?9binary?$AA@
; `string'
??_C@_07MHGMHDIE@?9binary?$AA@ db '-binary',0 ; DATA XREF: _smime_main:loc_946o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2198h
; COMDAT (pick any)
		public ??_C@_07GLFDAICA@?9nosigs?$AA@
; `string'
??_C@_07GLFDAICA@?9nosigs?$AA@ db '-nosigs',0 ; DATA XREF: _smime_main:loc_993o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21A0h
; COMDAT (pick any)
		public ??_C@_07KDDBNCBD@?9stream?$AA@
; `string'
??_C@_07KDDBNCBD@?9stream?$AA@ db '-stream',0 ; DATA XREF: _smime_main:loc_9D6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21A8h
; COMDAT (pick any)
		public ??_C@_06MPPEKNN@?9indef?$AA@
; `string'
??_C@_06MPPEKNN@?9indef?$AA@ db	'-indef',0 ; DATA XREF: _smime_main:loc_A21o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21B0h
; COMDAT (pick any)
		public ??_C@_08BCNBDCCA@?9noindef?$AA@
; `string'
??_C@_08BCNBDCCA@?9noindef?$AA@	db '-noindef',0 ; DATA XREF: _smime_main:loc_A65o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21BCh
; COMDAT (pick any)
		public ??_C@_0L@DMDFODFL@?9nooldmime?$AA@
; `string'
??_C@_0L@DMDFODFL@?9nooldmime?$AA@ db '-nooldmime',0 ; DATA XREF: _smime_main:loc_AA5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21C8h
; COMDAT (pick any)
		public ??_C@_08KAKEAKLE@?9crlfeol?$AA@
; `string'
??_C@_08KAKEAKLE@?9crlfeol?$AA@	db '-crlfeol',0 ; DATA XREF: _smime_main:loc_AEBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21D4h
; COMDAT (pick any)
		public ??_C@_05LGFPCDPE@?9rand?$AA@
; `string'
??_C@_05LGFPCDPE@?9rand?$AA@ db	'-rand',0 ; DATA XREF: _smime_main:loc_B33o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21DCh
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _smime_main:loc_B8Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21E4h
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _smime_main:loc_BE0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21ECh
; COMDAT (pick any)
		public ??_C@_03DNHOOAOE@?9to?$AA@
; `string'
??_C@_03DNHOOAOE@?9to?$AA@ db '-to',0   ; DATA XREF: _smime_main:loc_C34o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21F0h
; COMDAT (pick any)
		public ??_C@_05LBJDDLLJ@?9from?$AA@
; `string'
??_C@_05LBJDDLLJ@?9from?$AA@ db	'-from',0 ; DATA XREF: _smime_main:loc_C88o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21F8h
; COMDAT (pick any)
		public ??_C@_08GNEDOIFN@?9subject?$AA@
; `string'
??_C@_08GNEDOIFN@?9subject?$AA@	db '-subject',0 ; DATA XREF: _smime_main:loc_CE1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2204h
; COMDAT (pick any)
		public ??_C@_07KJCLPKOH@?9signer?$AA@
; `string'
??_C@_07KJCLPKOH@?9signer?$AA@ db '-signer',0 ; DATA XREF: _smime_main:loc_D35o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 220Ch
; COMDAT (pick any)
		public ??_C@_06JKGLPNJO@?9recip?$AA@
; `string'
??_C@_06JKGLPNJO@?9recip?$AA@ db '-recip',0 ; DATA XREF: _smime_main:loc_DDAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2214h
; COMDAT (pick any)
		public ??_C@_03MNHNKBNA@?9md?$AA@
; `string'
??_C@_03MNHNKBNA@?9md?$AA@ dd 646D2Dh	; DATA XREF: _smime_main:loc_E2Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2218h
; COMDAT (pick any)
		public ??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@
; `string'
??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@ db 'Unknown digest %s',0Ah,0
					; DATA XREF: _smime_main+DEAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 222Ch
; COMDAT (pick any)
		public ??_C@_06JJMGFEBF@?9inkey?$AA@
; `string'
??_C@_06JJMGFEBF@?9inkey?$AA@ db '-inkey',0 ; DATA XREF: _smime_main:loc_EA6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2234h
; COMDAT (pick any)
		public ??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@
; `string'
??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@ db	'Illegal -inkey without -signer',0Ah,0
					; DATA XREF: _smime_main:loc_1320o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2254h
; COMDAT (pick any)
		public ??_C@_08OAHLMBGP@?9keyform?$AA@
; `string'
??_C@_08OAHLMBGP@?9keyform?$AA@	db '-keyform',0 ; DATA XREF: _smime_main:loc_F55o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2260h
; COMDAT (pick any)
		public ??_C@_09LJGMBFEA@?9certfile?$AA@
; `string'
??_C@_09LJGMBFEA@?9certfile?$AA@ db '-certfile',0 ; DATA XREF: _smime_main:loc_FB4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 226Ch
; COMDAT (pick any)
		public ??_C@_07EAFCHGPO@?9CAfile?$AA@
; `string'
??_C@_07EAFCHGPO@?9CAfile?$AA@ db '-CAfile',0 ; DATA XREF: _smime_main:loc_1008o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2274h
; COMDAT (pick any)
		public ??_C@_07MNNNLALG@?9CApath?$AA@
; `string'
??_C@_07MNNNLALG@?9CApath?$AA@ db '-CApath',0 ; DATA XREF: _smime_main:loc_1061o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 227Ch
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ db '-in',0   ; DATA XREF: _smime_main:loc_10B5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2280h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _smime_main:loc_1106o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2288h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _smime_main:loc_116Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2294h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _smime_main:loc_11CCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 229Ch
; COMDAT (pick any)
		public ??_C@_08HCJMGADN@?9content?$AA@
; `string'
??_C@_08HCJMGADN@?9content?$AA@	db '-content',0 ; DATA XREF: _smime_main:loc_1221o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 22A8h
; COMDAT (pick any)
		public ??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@
; `string'
??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@ db 'Multiple signers or keys not allowed',0Ah,0
					; DATA XREF: _smime_main:loc_12ECo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 22D0h
; COMDAT (pick any)
		public ??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@
; `string'
??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@ db 'No signer certificate specified',0Ah,0
					; DATA XREF: _smime_main+12D9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 22F4h
; COMDAT (pick any)
		public ??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@
; `string'
??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@ db 'No recipient certificate or key specified',0Ah,0
					; DATA XREF: _smime_main+1322o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2320h
; COMDAT (pick any)
		public ??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@
; `string'
??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@ db 'No recipient(s) certificate(s) specified',0Ah,0
					; DATA XREF: _smime_main+1349o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 234Ch
; COMDAT (pick any)
		public ??_C@_0CE@FDJDGLAJ@Usage?5smime?5?$FLoptions?$FN?5cert?4pem?5?4@
; `string'
??_C@_0CE@FDJDGLAJ@Usage?5smime?5?$FLoptions?$FN?5cert?4pem?5?4@ db 'Usage smime [options] cert.pem ...',0Ah,0
					; DATA XREF: _smime_main:$argerr$550o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2370h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _smime_main+139Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2384h
; COMDAT (pick any)
		public ??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@
; `string'
??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@ db '-encrypt       encrypt message',0Ah,0
					; DATA XREF: _smime_main+13ACo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 23A4h
; COMDAT (pick any)
		public ??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@
; `string'
??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@ db '-decrypt       decrypt encrypted message',0Ah,0
					; DATA XREF: _smime_main+13BCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 23D0h
; COMDAT (pick any)
		public ??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@
; `string'
??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@ db '-sign          sign message',0Ah,0
					; DATA XREF: _smime_main+13CCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 23F0h
; COMDAT (pick any)
		public ??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@
; `string'
??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@	db '-verify        verify signed message',0Ah,0
					; DATA XREF: _smime_main+13DCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2418h
; COMDAT (pick any)
		public ??_C@_0CI@BCDMICAJ@?9pk7out?5?5?5?5?5?5?5?5output?5PKCS?$CD7?5str@
; `string'
??_C@_0CI@BCDMICAJ@?9pk7out?5?5?5?5?5?5?5?5output?5PKCS?$CD7?5str@ db '-pk7out        output PKCS#7 structure',0Ah,0
					; DATA XREF: _smime_main+13ECo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2440h
; COMDAT (pick any)
		public ??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@
; `string'
??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@ db '-des3          encrypt with triple DES',0Ah,0
					; DATA XREF: _smime_main+13FCo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2468h
; COMDAT (pick any)
		public ??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@
; `string'
??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@ db '-des           encrypt with DES',0Ah,0
					; DATA XREF: _smime_main+140Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 248Ch
; COMDAT (pick any)
		public ??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@
; `string'
??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@ db '-seed          encrypt with SEED',0Ah,0
					; DATA XREF: _smime_main+141Fo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24B0h
; COMDAT (pick any)
		public ??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
; `string'
??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ db '-rc2-40        encrypt with RC2-40 (default)',0Ah,0
					; DATA XREF: _smime_main+142Fo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24E0h
; COMDAT (pick any)
		public ??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
; `string'
??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ db '-rc2-64        encrypt with RC2-64',0Ah,0
					; DATA XREF: _smime_main+143Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2504h
; COMDAT (pick any)
		public ??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
; `string'
??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ db '-rc2-128       encrypt with RC2-128',0Ah,0
					; DATA XREF: _smime_main+144Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 252Ch
; COMDAT (pick any)
		public ??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
; `string'
??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ db '-aes128, -aes192, -aes256',0Ah,0
					; DATA XREF: _smime_main+145Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2548h
; COMDAT (pick any)
		public ??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@
; `string'
??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ db '               encrypt PEM output with cbc aes',0Ah,0
					; DATA XREF: _smime_main+146Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2578h
; COMDAT (pick any)
		public ??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@
; `string'
??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@ db '-camellia128, -camellia192, -camellia256',0Ah,0
					; DATA XREF: _smime_main+147Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25A4h
; COMDAT (pick any)
		public ??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@
; `string'
??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ db '               encrypt PEM output with cbc camellia',0Ah,0
					; DATA XREF: _smime_main+1492o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25DCh
; COMDAT (pick any)
		public ??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@
; `string'
??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@ db '-nointern      don',27h,'t search certificates in message for signer'
					; DATA XREF: _smime_main+14A2o
		db 0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 261Ch
; COMDAT (pick any)
		public ??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@
; `string'
??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@ db '-nosigs        don',27h,'t verify message signature',0Ah,0
					; DATA XREF: _smime_main+14B2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 264Ch
; COMDAT (pick any)
		public ??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@
; `string'
??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@ db '-noverify      don',27h,'t verify signers certificate',0Ah,0
					; DATA XREF: _smime_main+14C2o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2680h
; COMDAT (pick any)
		public ??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@
; `string'
??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@	db '-nocerts       don',27h,'t include signers certificate when signing',0Ah
					; DATA XREF: _smime_main+14D2o
		db 0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 26C0h
; COMDAT (pick any)
		public ??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@
; `string'
??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@ db '-nodetach      use opaque signing',0Ah,0
					; DATA XREF: _smime_main+14E2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 26E4h
; COMDAT (pick any)
		public ??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@
; `string'
??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@ db '-noattr        don',27h,'t include any signed attributes',0Ah,0
					; DATA XREF: _smime_main+14F2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2718h
; COMDAT (pick any)
		public ??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@
; `string'
??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@ db '-binary        don',27h,'t translate message to text',0Ah,0
					; DATA XREF: _smime_main+1502o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2748h
; COMDAT (pick any)
		public ??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@
; `string'
??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@ db '-certfile file other certificates file',0Ah,0
					; DATA XREF: _smime_main+1515o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2770h
; COMDAT (pick any)
		public ??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@
; `string'
??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@ db '-signer file   signer certificate file',0Ah,0
					; DATA XREF: _smime_main+1525o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2798h
; COMDAT (pick any)
		public ??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@
; `string'
??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@ db '-recip  file   recipient certificate file for decryption',0Ah,0
					; DATA XREF: _smime_main+1535o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 27D4h
; COMDAT (pick any)
		public ??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@ db '-in file       input file',0Ah,0
					; DATA XREF: _smime_main+1545o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 27F0h
; COMDAT (pick any)
		public ??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@
; `string'
??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@ db	'-inform arg    input format SMIME (default), PEM or DER',0Ah,0
					; DATA XREF: _smime_main+1555o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 282Ch
; COMDAT (pick any)
		public ??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@
; `string'
??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@ db	'-inkey file    input private key (if not signer or recipient)',0Ah,0
					; DATA XREF: _smime_main+1565o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 286Ch
; COMDAT (pick any)
		public ??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@
; `string'
??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@ db '-keyform arg   input private key format (PEM or ENGINE)',0Ah,0
					; DATA XREF: _smime_main+1575o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28A8h
; COMDAT (pick any)
		public ??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@ db '-out file      output file',0Ah,0
					; DATA XREF: _smime_main+1585o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28C4h
; COMDAT (pick any)
		public ??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@
; `string'
??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@ db '-outform arg   output format SMIME (default), PEM or DER',0Ah,0
					; DATA XREF: _smime_main+1598o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2900h
; COMDAT (pick any)
		public ??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@
; `string'
??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@ db '-content file  supply or override content for detached signature',0Ah
					; DATA XREF: _smime_main+15A8o
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2944h
; COMDAT (pick any)
		public ??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@
; `string'
??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@ db	'-to addr       to address',0Ah,0
					; DATA XREF: _smime_main+15B8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2960h
; COMDAT (pick any)
		public ??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@
; `string'
??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@	db '-from ad       from address',0Ah,0
					; DATA XREF: _smime_main+15C8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2980h
; COMDAT (pick any)
		public ??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@
; `string'
??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@	db '-subject s     subject',0Ah,0
					; DATA XREF: _smime_main+15D8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2998h
; COMDAT (pick any)
		public ??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@
; `string'
??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@ db '-text          include or delete text MIME headers',0Ah,0
					; DATA XREF: _smime_main+15E8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 29CCh
; COMDAT (pick any)
		public ??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@
; `string'
??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@ db '-CApath dir    trusted certificates directory',0Ah,0
					; DATA XREF: _smime_main+15F8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 29FCh
; COMDAT (pick any)
		public ??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@
; `string'
??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@ db '-CAfile file   trusted certificates file',0Ah,0
					; DATA XREF: _smime_main+1608o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2A28h
; COMDAT (pick any)
		public ??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@
; `string'
??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@ db '-no_alt_chains only ever use the first certificate chain found',0Ah,0
					; DATA XREF: _smime_main+161Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2A68h
; COMDAT (pick any)
		public ??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@
; `string'
??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@ db '-crl_check     check revocation status of signer',27h,'s certificate'
					; DATA XREF: _smime_main+162Bo
		db ' using CRLs',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2AB4h
; COMDAT (pick any)
		public ??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@
; `string'
??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@ db '-crl_check_all check revocation status of signer',27h,'s certificate'
					; DATA XREF: _smime_main+163Bo
		db ' chain using CRLs',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B08h
; COMDAT (pick any)
		public ??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@
; `string'
??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@ db '-engine e      use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _smime_main+164Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B44h
; COMDAT (pick any)
		public ??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@
; `string'
??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@ db '-passin arg    input file pass phrase source',0Ah,0
					; DATA XREF: _smime_main+165Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B74h
; COMDAT (pick any)
		public ??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
; `string'
??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ db '-rand file%cfile%c...',0Ah,0
					; DATA XREF: _smime_main+166Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2B8Ch
; COMDAT (pick any)
		public ??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@
; `string'
??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@ db '               load the file (or the files in the directory) into'
					; DATA XREF: _smime_main+167Fo
		db 0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2BD0h
; COMDAT (pick any)
		public ??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@
; `string'
??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@ db '               the random number generator',0Ah,0
					; DATA XREF: _smime_main+1692o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2BFCh
; COMDAT (pick any)
		public ??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@
; `string'
??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@ db 'cert.pem       recipient certificate(s) for encryption',0Ah,0
					; DATA XREF: _smime_main+16A2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C34h
; COMDAT (pick any)
		public ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; `string'
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ db 'Error getting password',0Ah,0
					; DATA XREF: _smime_main+16F8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C4Ch
; COMDAT (pick any)
		public ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
; `string'
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ db '%ld semi-random bytes loaded',0Ah,0
					; DATA XREF: _smime_main+1747o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C6Ch
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 77h,	62h, 0	; DATA XREF: _smime_main+1781o
					; _smime_main+178Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C70h
; COMDAT (pick any)
		public ??_C@_02JDPG@rb?$AA@
; `string'
??_C@_02JDPG@rb?$AA@ db	72h, 62h, 0	; DATA XREF: _smime_main+17ADo
					; _smime_main+17BAo ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C74h
; COMDAT (pick any)
		public ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@
; `string'
??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ db	'recipient certificate file',0
					; DATA XREF: _smime_main:loc_1894o
					; _smime_main+1881o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C90h
; COMDAT (pick any)
		public ??_C@_0BB@ODBFPAJB@certificate?5file?$AA@
; `string'
??_C@_0BB@ODBFPAJB@certificate?5file?$AA@ db 'certificate file',0
					; DATA XREF: _smime_main+1836o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2CA4h
; COMDAT (pick any)
		public ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@
; `string'
??_C@_0BB@DELANBNN@signing?5key?5file?$AA@ db 'signing key file',0
					; DATA XREF: _smime_main:loc_1984o
					; _smime_main+1C26o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2CB8h
; COMDAT (pick any)
		public ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open input file %s',0Ah,0
					; DATA XREF: _smime_main+192Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2CD4h
; COMDAT (pick any)
		public ??_C@_0CC@HBFGMGJF@Bad?5input?5format?5for?5PKCS?$CD7?5file@
; `string'
??_C@_0CC@HBFGMGJF@Bad?5input?5format?5for?5PKCS?$CD7?5file@ db	'Bad input format for PKCS#7 file',0Ah,0
					; DATA XREF: _smime_main:loc_1ACAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2CF8h
; COMDAT (pick any)
		public ??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@
; `string'
??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@ db 'Error reading S/MIME message',0Ah,0
					; DATA XREF: _smime_main+19BFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D18h
; COMDAT (pick any)
		public ??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@ db	'Can',27h,'t read content file %s',0Ah,0
					; DATA XREF: _smime_main+1A08o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D34h
; COMDAT (pick any)
		public ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open output file %s',0Ah,0
					; DATA XREF: _smime_main+1A65o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D50h
; COMDAT (pick any)
		public ??_C@_0BD@FNCKELBI@signer?5certificate?$AA@
; `string'
??_C@_0BD@FNCKELBI@signer?5certificate?$AA@ db 'signer certificate',0
					; DATA XREF: _smime_main+1BFFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D64h
; COMDAT (pick any)
		public ??_C@_0CB@JGCGHEEA@Error?5creating?5PKCS?$CD7?5structure?6@
; `string'
??_C@_0CB@JGCGHEEA@Error?5creating?5PKCS?$CD7?5structure?6@ db 'Error creating PKCS#7 structure',0Ah,0
					; DATA XREF: _smime_main+1B30o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D88h
; COMDAT (pick any)
		public ??_C@_0CD@CBBKKHHG@Error?5decrypting?5PKCS?$CD7?5structur@
; `string'
??_C@_0CD@CBBKKHHG@Error?5decrypting?5PKCS?$CD7?5structur@ db 'Error decrypting PKCS#7 structure',0Ah,0
					; DATA XREF: _smime_main+1D26o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2DACh
; COMDAT (pick any)
		public ??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@
; `string'
??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@ db 'Verification successful',0Ah,0
					; DATA XREF: _smime_main+1D66o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2DC8h
; COMDAT (pick any)
		public ??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@
; `string'
??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@	db 'Verification failure',0Ah,0
					; DATA XREF: _smime_main:loc_1E6Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2DE0h
; COMDAT (pick any)
		public ??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@
; `string'
??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@ db 'Error writing signers to %s',0Ah,0
					; DATA XREF: _smime_main+1D93o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2E00h
; COMDAT (pick any)
		public ??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@
; `string'
??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@ db 'To: %s',0Ah,0 ; DATA XREF: _smime_main+1E06o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2E08h
; COMDAT (pick any)
		public ??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@
; `string'
??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@ db 'From: %s',0Ah,0 ; DATA XREF: _smime_main+1E20o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2E14h
; COMDAT (pick any)
		public ??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@
; `string'
??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@ db 'Subject: %s',0Ah,0
					; DATA XREF: _smime_main+1E3Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2E24h
; COMDAT (pick any)
		public ??_C@_0CD@FBKFMBCI@Bad?5output?5format?5for?5PKCS?$CD7?5fil@
; `string'
??_C@_0CD@FBKFMBCI@Bad?5output?5format?5for?5PKCS?$CD7?5fil@ db	'Bad output format for PKCS#7 file',0Ah,0
					; DATA XREF: _smime_main:loc_1F68o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _smime_main+119p
					; _smime_main+195Dp ...
		extrn _sk_num:near	; CODE XREF: _save_certs+2Ep
					; _save_certs+50p ...
		extrn _sk_value:near	; CODE XREF: _save_certs+42p
					; _smime_main+1BA9p ...
		extrn _sk_new_null:near	; CODE XREF: _smime_main+CDAp
					; _smime_main+CFEp ...
		extrn _sk_free:near	; CODE XREF: _smime_main+1DB5p
					; _smime_main+1F51p ...
		extrn _sk_pop_free:near	; CODE XREF: _smime_main+1F1Ep
					; _smime_main+1F2Cp
		extrn _sk_push:near	; CODE XREF: _smime_main+CE5p
					; _smime_main+D09p ...
		extrn _CRYPTO_free:near	; CODE XREF: _smime_main+1FC3p
		extrn _BIO_s_file:near	; CODE XREF: _smime_main+100p
		extrn _BIO_new_file:near ; CODE	XREF: _save_certs+15p
					; _smime_main+1918p ...
		extrn _BIO_new_fp:near	; CODE XREF: _smime_main+1967p
					; _smime_main+1A8Fp
		extrn _BIO_new:near	; CODE XREF: _smime_main+106p
		extrn _BIO_free:near	; CODE XREF: _save_certs+5Dp
					; _smime_main+19ECp ...
		extrn _BIO_puts:near	; CODE XREF: _smime_main+1253p
					; _smime_main+1287p
		extrn _BIO_ctrl:near	; CODE XREF: _smime_main+12Ap
		extrn _BIO_free_all:near ; CODE	XREF: _smime_main+1FAEp
		extrn _BIO_printf:near	; CODE XREF: _smime_main+DF5p
					; _smime_main+12E4p ...
		extrn _EVP_des_cbc:near	; CODE XREF: _smime_main+390p
		extrn _EVP_des_ede3_cbc:near ; CODE XREF: _smime_main+349p
					; _smime_main+17D4p
		extrn _EVP_rc2_cbc:near	; CODE XREF: _smime_main+469p
		extrn _EVP_rc2_40_cbc:near ; CODE XREF:	_smime_main+420p
		extrn _EVP_rc2_64_cbc:near ; CODE XREF:	_smime_main+4B0p
		extrn _EVP_aes_128_cbc:near ; CODE XREF: _smime_main+4F9p
		extrn _EVP_aes_192_cbc:near ; CODE XREF: _smime_main+540p
		extrn _EVP_aes_256_cbc:near ; CODE XREF: _smime_main+589p
		extrn _EVP_camellia_128_cbc:near ; CODE	XREF: _smime_main+5D0p
		extrn _EVP_camellia_192_cbc:near ; CODE	XREF: _smime_main+619p
		extrn _EVP_camellia_256_cbc:near ; CODE	XREF: _smime_main+660p
		extrn _EVP_seed_cbc:near ; CODE	XREF: _smime_main+3D9p
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _smime_main+11F7p
		extrn _EVP_get_digestbyname:near ; CODE	XREF: _smime_main+DCDp
		extrn _EVP_PKEY_free:near ; CODE XREF: _smime_main+1C8Dp
					; _smime_main+1F90p
		extrn _X509_STORE_free:near ; CODE XREF: _smime_main+1F6Ep
		extrn _X509_STORE_set1_param:near ; CODE XREF: _smime_main+1AE5p
		extrn _X509_STORE_set_verify_cb:near ; CODE XREF: _smime_main+1AD0p
		extrn _X509_STORE_CTX_get_error:near ; CODE XREF: _smime_cb+5p
		extrn _X509_VERIFY_PARAM_free:near ; CODE XREF:	_smime_main+1F40p
		extrn _d2i_PKCS7_bio:near ; CODE XREF: _smime_main+19AFp
		extrn _i2d_PKCS7_bio_stream:near ; CODE	XREF: _smime_main+1EB0p
		extrn _PEM_write_bio_PKCS7_stream:near ; CODE XREF: _smime_main+1E93p
		extrn _PKCS7_free:near	; CODE XREF: _smime_main+1F96p
		extrn _PKCS7_add_certificate:near ; CODE XREF: _smime_main+1BB0p
		extrn _PKCS7_sign:near	; CODE XREF: _smime_main+1B7Bp
		extrn _PKCS7_sign_add_signer:near ; CODE XREF: _smime_main+1C6Bp
		extrn _PKCS7_final:near	; CODE XREF: _smime_main+1CD0p
		extrn _PKCS7_verify:near ; CODE	XREF: _smime_main+1D5Ap
		extrn _PKCS7_get0_signers:near ; CODE XREF: _smime_main+1D79p
		extrn _PKCS7_encrypt:near ; CODE XREF: _smime_main+1B1Ap
		extrn _PKCS7_decrypt:near ; CODE XREF: _smime_main+1D16p
		extrn _SMIME_write_PKCS7:near ;	CODE XREF: _smime_main+1E5Fp
					; _smime_main+1E76p
		extrn _SMIME_read_PKCS7:near ; CODE XREF: _smime_main+198Ap
		extrn _X509_free:near	; CODE XREF: _smime_main+1C7Fp
					; _smime_main+1F75p ...
		extrn _ERR_print_errors:near ; CODE XREF: _smime_main+185Dp
					; _smime_main+18AFp ...
		extrn _app_RAND_load_file:near ; CODE XREF: _smime_main+1734p
		extrn _app_RAND_write_file:near	; CODE XREF: _smime_main+1EF2p
		extrn _app_RAND_load_files:near	; CODE XREF: _smime_main+1741p
		extrn _str2fmt:near	; CODE XREF: _smime_main+EF4p
					; _smime_main+10ACp ...
		extrn _app_passwd:near	; CODE XREF: _smime_main+16ECp
		extrn _load_cert:near	; CODE XREF: _smime_main+1802p
					; _smime_main+1892p ...
		extrn _load_key:near	; CODE XREF: _smime_main+18FAp
					; _smime_main+1C40p
		extrn _load_certs:near	; CODE XREF: _smime_main+1847p
		extrn _setup_verify:near ; CODE	XREF: _smime_main+1AB8p
		extrn _setup_engine:near ; CODE	XREF: _smime_main+16CFp
		extrn _load_config:near	; CODE XREF: _smime_main+13Bp
		extrn _args_verify:near	; CODE XREF: _smime_main+11E3p
		extrn _policies_print:near ; CODE XREF:	_smime_cb+25p
		extrn _PEM_write_bio_X509:near ; CODE XREF: _save_certs+49p
		extrn _PEM_read_bio_PKCS7:near ; CODE XREF: _smime_main+199Dp
		extrn _PEM_write_bio_PKCS7:near	; CODE XREF: _smime_main+1DE7p
		extrn __chkstk:near	; CODE XREF: _smime_main+5p
		extrn _bio_err:near	; DATA XREF: _smime_main+D0r
					; _smime_main+10Ew ...


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	41FA72A3C62C181E992BEE8D12E1C94C
; Input	CRC32 :	F6C5020E

; File Name   :	C:\compspace\Diff\openssl\obj\v3_skey.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_s2i_skey_id	proc near		; DATA XREF: .rdata:00000190o

var_48		= dword	ptr -48h
var_44		= byte ptr -44h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 48h ; 'H'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+48h+var_4], eax
		push	esi
		mov	esi, [esp+4Ch+arg_8]
		mov	ecx, offset ??_C@_04OIJGJDKO@hash?$AA@ ; "hash"
		push	edi
		mov	edi, [esp+50h+arg_4]
		mov	eax, esi

loc_26:					; CODE XREF: _s2i_skey_id+40j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_46
		test	dl, dl
		jz	short loc_42
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_46
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_26

loc_42:					; CODE XREF: _s2i_skey_id+2Ej
		xor	eax, eax
		jmp	short loc_4B
; ---------------------------------------------------------------------------

loc_46:					; CODE XREF: _s2i_skey_id+2Aj
					; _s2i_skey_id+36j
		sbb	eax, eax
		or	eax, 1

loc_4B:					; CODE XREF: _s2i_skey_id+44j
		test	eax, eax
		jz	short loc_6E
		push	esi
		push	edi

loc_51:					; DATA XREF: .rdata:_v3_skey_ido
		push	[esp+58h+arg_0]
		call	_s2i_ASN1_OCTET_STRING
		add	esp, 0Ch
		pop	edi
		pop	esi
		mov	ecx, [esp+48h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 48h
		retn
; ---------------------------------------------------------------------------

loc_6E:					; CODE XREF: _s2i_skey_id+4Dj
		push	4
		call	_ASN1_STRING_type_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_A6
		push	72h ; 'r'
		push	offset ??_C@_0BK@IJHBDBLK@?4?2crypto?2x509v3?2v3_skey?4c?$AA@ ;	".\\crypto\\x509v3\\v3_skey.c"
		push	41h ; 'A'
		push	73h ; 's'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		mov	ecx, [esp+48h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 48h
		retn
; ---------------------------------------------------------------------------

loc_A6:					; CODE XREF: _s2i_skey_id+7Cj
		test	edi, edi
		jz	loc_13E
		cmp	dword ptr [edi], 1
		jz	loc_15E
		mov	eax, [edi+0Ch]
		test	eax, eax
		jnz	short loc_C7
		cmp	[edi+8], eax
		jz	short loc_13E
		test	eax, eax
		jz	short loc_CE

loc_C7:					; CODE XREF: _s2i_skey_id+BCj
		mov	eax, [eax]
		mov	eax, [eax+14h]
		jmp	short loc_D6
; ---------------------------------------------------------------------------

loc_CE:					; CODE XREF: _s2i_skey_id+C5j
		mov	eax, [edi+8]
		mov	eax, [eax]
		mov	eax, [eax+18h]

loc_D6:					; CODE XREF: _s2i_skey_id+CCj
		mov	edi, [eax+4]
		test	edi, edi
		jnz	short loc_E4
		push	84h ; 'Ñ'
		jmp	short loc_140
; ---------------------------------------------------------------------------

loc_E4:					; CODE XREF: _s2i_skey_id+DBj
		push	0
		call	_EVP_sha1
		push	eax
		lea	eax, [esp+58h+var_48]
		push	eax
		lea	eax, [esp+5Ch+var_44]
		push	eax
		push	dword ptr [edi]
		push	dword ptr [edi+8]
		call	_EVP_Digest
		add	esp, 18h
		test	eax, eax
		jz	short $err$24
		push	[esp+50h+var_48]
		lea	eax, [esp+54h+var_44]
		push	eax
		push	esi
		call	_ASN1_STRING_set
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_12B
		push	8Dh ; 'ç'
		push	offset ??_C@_0BK@IJHBDBLK@?4?2crypto?2x509v3?2v3_skey?4c?$AA@ ;	".\\crypto\\x509v3\\v3_skey.c"
		push	41h ; 'A'
		jmp	short loc_147
; ---------------------------------------------------------------------------

loc_12B:				; CODE XREF: _s2i_skey_id+11Bj
		pop	edi
		mov	eax, esi
		pop	esi
		mov	ecx, [esp+48h+var_4]
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 48h
		retn
; ---------------------------------------------------------------------------

loc_13E:				; CODE XREF: _s2i_skey_id+A8j
					; _s2i_skey_id+C1j
		push	7Ah ; 'z'

loc_140:				; CODE XREF: _s2i_skey_id+E2j
		push	offset ??_C@_0BK@IJHBDBLK@?4?2crypto?2x509v3?2v3_skey?4c?$AA@ ;	".\\crypto\\x509v3\\v3_skey.c"
		push	72h ; 'r'

loc_147:				; CODE XREF: _s2i_skey_id+129j
		push	73h ; 's'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h

$err$24:				; CODE XREF: _s2i_skey_id+105j
		push	esi
		call	_ASN1_STRING_free
		add	esp, 4
		xor	eax, eax

loc_15E:				; CODE XREF: _s2i_skey_id+B1j
		mov	ecx, [esp+50h+var_4]
		pop	edi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 48h
		retn
_s2i_skey_id	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 170h
		public _v3_skey_id
_v3_skey_id	dd offset loc_51+1
		align 8
		dd offset _ASN1_OCTET_STRING_it
		dd 4 dup(0)
		dd offset _i2s_ASN1_OCTET_STRING
		dd offset _s2i_skey_id
		dd 5 dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1A8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2s_ASN1_OCTET_STRING
_i2s_ASN1_OCTET_STRING proc near	; DATA XREF: .rdata:0000018Co

arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		push	dword ptr [eax]
		push	dword ptr [eax+8]
		call	_hex_to_string
		add	esp, 8
		retn
_i2s_ASN1_OCTET_STRING endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _s2i_ASN1_OCTET_STRING
_s2i_ASN1_OCTET_STRING proc near	; CODE XREF: _s2i_skey_id+55p

var_4		= dword	ptr -4
arg_8		= dword	ptr  0Ch

		mov	eax, 4
		call	__chkstk
		push	esi
		push	4
		call	_ASN1_STRING_type_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_1F1
		push	57h ; 'W'
		push	offset ??_C@_0BK@IJHBDBLK@?4?2crypto?2x509v3?2v3_skey?4c?$AA@ ;	".\\crypto\\x509v3\\v3_skey.c"
		push	41h ; 'A'
		push	70h ; 'p'
		push	22h ; '"'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_1F1:				; CODE XREF: _s2i_ASN1_OCTET_STRING+19j
		lea	eax, [esp+8+var_4]
		push	eax
		push	[esp+0Ch+arg_8]
		call	_string_to_hex
		add	esp, 8
		mov	[esi+8], eax
		test	eax, eax
		jnz	short loc_217
		push	esi
		call	_ASN1_STRING_free
		add	esp, 4
		xor	eax, eax
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_217:				; CODE XREF: _s2i_ASN1_OCTET_STRING+4Bj
		mov	eax, [esp+8+var_4]
		mov	[esi], eax
		mov	eax, esi
		pop	esi
		pop	ecx
		retn
_s2i_ASN1_OCTET_STRING endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 224h
; COMDAT (pick any)
		public ??_C@_0BK@IJHBDBLK@?4?2crypto?2x509v3?2v3_skey?4c?$AA@
; `string'
??_C@_0BK@IJHBDBLK@?4?2crypto?2x509v3?2v3_skey?4c?$AA@ db '.\crypto\x509v3\v3_skey.c',0
					; DATA XREF: _s2i_skey_id+80o
					; _s2i_skey_id+122o ...
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 240h
; COMDAT (pick any)
		public ??_C@_04OIJGJDKO@hash?$AA@
; `string'
??_C@_04OIJGJDKO@hash?$AA@ db 'hash',0  ; DATA XREF: _s2i_skey_id+1Ao
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ASN1_OCTET_STRING_it:near ; DATA	XREF: .rdata:00000178o
		extrn _ERR_put_error:near ; CODE XREF: _s2i_skey_id+8Bp
					; _s2i_skey_id+14Bp ...
		extrn _ASN1_STRING_free:near ; CODE XREF: _s2i_skey_id+154p
					; _s2i_ASN1_OCTET_STRING+4Ep
		extrn _ASN1_STRING_type_new:near ; CODE	XREF: _s2i_skey_id+70p
					; _s2i_ASN1_OCTET_STRING+Dp
		extrn _ASN1_STRING_set:near ; CODE XREF: _s2i_skey_id+111p
		extrn _EVP_Digest:near	; CODE XREF: _s2i_skey_id+FBp
		extrn _EVP_sha1:near	; CODE XREF: _s2i_skey_id+E6p
		extrn _hex_to_string:near ; CODE XREF: _i2s_ASN1_OCTET_STRING+9p
		extrn _string_to_hex:near ; CODE XREF: _s2i_ASN1_OCTET_STRING+3Ep
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _s2i_skey_id+65p
					; _s2i_skey_id+9Dp ...
		extrn __chkstk:near	; CODE XREF: _s2i_skey_id+5p
					; _s2i_ASN1_OCTET_STRING+5p
		extrn ___security_cookie:near ;	DATA XREF: _s2i_skey_id+Ar


		end

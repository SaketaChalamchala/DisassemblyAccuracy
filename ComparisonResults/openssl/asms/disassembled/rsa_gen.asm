;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	9AC918CE8733E71ACED88D524D048436
; Input	CRC32 :	175A53E2

; File Name   :	C:\compspace\Diff\openssl\obj\rsa_gen.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _RSA_generate_key_ex
_RSA_generate_key_ex proc near

arg_0		= dword	ptr  4

		mov	ecx, [esp+arg_0]
		mov	eax, [ecx+8]
		mov	eax, [eax+34h]
		test	eax, eax
		jz	short loc_14
		mov	[esp+arg_0], ecx
		jmp	eax
; ---------------------------------------------------------------------------

loc_14:					; CODE XREF: _RSA_generate_key_ex+Cj
		mov	[esp+arg_0], ecx
		jmp	_rsa_builtin_keygen
_RSA_generate_key_ex endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 20h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_rsa_builtin_keygen proc near		; CODE XREF: _RSA_generate_key_ex+18j

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, 48h ; 'H'
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		push	edi
		mov	[esp+58h+var_48], 0
		call	_BN_CTX_new
		mov	ebp, eax
		test	ebp, ebp
		jz	loc_1DB
		push	ebp
		call	_BN_CTX_start
		push	ebp
		call	_BN_CTX_get
		push	ebp
		mov	[esp+64h+var_40], eax
		call	_BN_CTX_get
		push	ebp
		mov	ebx, eax
		call	_BN_CTX_get
		push	ebp
		mov	[esp+6Ch+var_44], eax
		call	_BN_CTX_get
		add	esp, 14h
		test	eax, eax
		jz	loc_1DB
		mov	ecx, [esp+58h+arg_4]
		mov	esi, [esp+58h+arg_0]
		lea	eax, [ecx+1]
		cdq
		sub	eax, edx
		mov	edi, eax
		sar	edi, 1
		sub	ecx, edi
		cmp	dword ptr [esi+10h], 0
		mov	[esp+58h+arg_4], ecx
		jnz	short loc_A6
		call	_BN_new
		mov	[esi+10h], eax
		test	eax, eax
		jz	loc_1DB

loc_A6:					; CODE XREF: _rsa_builtin_keygen+74j
		cmp	dword ptr [esi+18h], 0
		jnz	short loc_BC
		call	_BN_new
		mov	[esi+18h], eax
		test	eax, eax
		jz	loc_1DB

loc_BC:					; CODE XREF: _rsa_builtin_keygen+8Aj
		cmp	dword ptr [esi+14h], 0
		jnz	short loc_D2
		call	_BN_new
		mov	[esi+14h], eax
		test	eax, eax
		jz	loc_1DB

loc_D2:					; CODE XREF: _rsa_builtin_keygen+A0j
		cmp	dword ptr [esi+1Ch], 0
		jnz	short loc_E8
		call	_BN_new
		mov	[esi+1Ch], eax
		test	eax, eax
		jz	loc_1DB

loc_E8:					; CODE XREF: _rsa_builtin_keygen+B6j
		cmp	dword ptr [esi+20h], 0
		jnz	short loc_FE
		call	_BN_new
		mov	[esi+20h], eax
		test	eax, eax
		jz	loc_1DB

loc_FE:					; CODE XREF: _rsa_builtin_keygen+CCj
		cmp	dword ptr [esi+24h], 0
		jnz	short loc_114
		call	_BN_new
		mov	[esi+24h], eax
		test	eax, eax
		jz	loc_1DB

loc_114:				; CODE XREF: _rsa_builtin_keygen+E2j
		cmp	dword ptr [esi+28h], 0
		jnz	short loc_12A
		call	_BN_new
		mov	[esi+28h], eax
		test	eax, eax
		jz	loc_1DB

loc_12A:				; CODE XREF: _rsa_builtin_keygen+F8j
		cmp	dword ptr [esi+2Ch], 0
		jnz	short loc_140
		call	_BN_new
		mov	[esi+2Ch], eax
		test	eax, eax
		jz	loc_1DB

loc_140:				; CODE XREF: _rsa_builtin_keygen+10Ej
		push	[esp+58h+arg_8]
		push	dword ptr [esi+14h]
		call	_BN_copy
		push	[esp+60h+arg_C]
		push	0
		push	0
		push	0
		push	edi
		push	dword ptr [esi+1Ch]
		call	_BN_generate_prime_ex
		add	esp, 20h
		test	eax, eax
		jz	short loc_1DB

loc_166:				; CODE XREF: _rsa_builtin_keygen+1B9j
		call	_BN_value_one
		push	eax
		push	dword ptr [esi+1Ch]
		push	[esp+60h+var_44]
		call	_BN_sub
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_1DB
		push	ebp
		push	dword ptr [esi+14h]
		push	[esp+60h+var_44]
		push	ebx
		call	_BN_gcd
		add	esp, 10h
		test	eax, eax
		jz	short loc_1DB
		cmp	dword ptr [ebx+4], 1
		jnz	short loc_1A7
		mov	eax, [ebx]
		cmp	dword ptr [eax], 1
		jnz	short loc_1A7
		cmp	dword ptr [ebx+0Ch], 0
		jz	short loc_215

loc_1A7:				; CODE XREF: _rsa_builtin_keygen+178j
					; _rsa_builtin_keygen+17Fj
		push	[esp+58h+var_48]
		push	2
		push	[esp+60h+arg_C]
		call	_BN_GENCB_call
		inc	[esp+64h+var_48]
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_1DB
		push	[esp+58h+arg_C]
		push	0
		push	0
		push	0
		push	edi
		push	dword ptr [esi+1Ch]
		call	_BN_generate_prime_ex
		add	esp, 18h
		test	eax, eax
		jnz	short loc_166

loc_1DB:				; CODE XREF: _rsa_builtin_keygen+1Fj
					; _rsa_builtin_keygen+52j ...
		push	0F1h ; 'Ò'
		push	offset ??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@ ; ".\\crypto\\rsa\\rsa_gen.c"
		push	3
		push	81h ; 'Å'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		xor	esi, esi

loc_1F8:				; CODE XREF: _rsa_builtin_keygen+48Ej
					; _rsa_builtin_keygen+4B0j
		test	ebp, ebp
		jz	short loc_20B
		push	ebp
		call	_BN_CTX_end
		push	ebp
		call	_BN_CTX_free
		add	esp, 8

loc_20B:				; CODE XREF: _rsa_builtin_keygen+1DAj
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 48h
		retn
; ---------------------------------------------------------------------------

loc_215:				; CODE XREF: _rsa_builtin_keygen+185j
		push	0
		push	3
		push	[esp+60h+arg_C]
		call	_BN_GENCB_call
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_1DB
		nop	dword ptr [eax+00000000h]

loc_230:				; CODE XREF: _rsa_builtin_keygen+2B1j
		xor	edi, edi

loc_232:				; CODE XREF: _rsa_builtin_keygen+245j
		push	[esp+58h+arg_C]
		push	0
		push	0
		push	0
		push	[esp+68h+arg_4]
		push	dword ptr [esi+20h]
		call	_BN_generate_prime_ex
		add	esp, 18h
		test	eax, eax
		jz	short loc_1DB
		push	dword ptr [esi+20h]
		push	dword ptr [esi+1Ch]
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jnz	short loc_267
		inc	edi
		cmp	edi, 3
		jb	short loc_232

loc_267:				; CODE XREF: _rsa_builtin_keygen+23Fj
		cmp	edi, 3
		jz	loc_4B3
		call	_BN_value_one
		mov	edi, [esp+58h+var_44]
		push	eax
		push	dword ptr [esi+20h]
		push	edi
		call	_BN_sub
		add	esp, 0Ch
		test	eax, eax
		jz	loc_1DB
		push	ebp
		push	dword ptr [esi+14h]
		push	edi
		push	ebx
		call	_BN_gcd
		add	esp, 10h
		test	eax, eax
		jz	loc_1DB
		cmp	dword ptr [ebx+4], 1
		jnz	short loc_2B7
		mov	eax, [ebx]
		cmp	dword ptr [eax], 1
		jnz	short loc_2B7
		cmp	dword ptr [ebx+0Ch], 0
		jz	short loc_2DC

loc_2B7:				; CODE XREF: _rsa_builtin_keygen+288j
					; _rsa_builtin_keygen+28Fj
		mov	edi, [esp+58h+var_48]
		push	edi
		push	2
		push	[esp+60h+arg_C]
		call	_BN_GENCB_call
		inc	edi
		add	esp, 0Ch
		mov	[esp+58h+var_48], edi
		test	eax, eax
		jnz	loc_230
		jmp	loc_1DB
; ---------------------------------------------------------------------------

loc_2DC:				; CODE XREF: _rsa_builtin_keygen+295j
		push	1
		push	3
		push	[esp+60h+arg_C]
		call	_BN_GENCB_call
		add	esp, 0Ch
		test	eax, eax
		jz	loc_1DB
		push	dword ptr [esi+20h]
		push	dword ptr [esi+1Ch]
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jns	short loc_312
		mov	ecx, [esi+1Ch]
		mov	eax, [esi+20h]
		mov	[esi+1Ch], eax
		mov	[esi+20h], ecx

loc_312:				; CODE XREF: _rsa_builtin_keygen+2E4j
		push	ebp
		push	dword ptr [esi+20h]
		push	dword ptr [esi+1Ch]
		push	dword ptr [esi+10h]
		call	_BN_mul
		add	esp, 10h
		test	eax, eax
		jz	loc_1DB
		call	_BN_value_one
		push	eax
		push	dword ptr [esi+1Ch]
		push	ebx
		call	_BN_sub
		add	esp, 0Ch
		test	eax, eax
		jz	loc_1DB
		call	_BN_value_one
		push	eax
		push	dword ptr [esi+20h]
		push	edi
		call	_BN_sub
		add	esp, 0Ch
		test	eax, eax
		jz	loc_1DB
		push	ebp
		push	edi
		mov	edi, [esp+60h+var_40]
		push	ebx
		push	edi
		call	_BN_mul
		add	esp, 10h
		test	eax, eax
		jz	loc_1DB
		test	dword ptr [esi+3Ch], 100h
		jnz	short loc_3B8
		mov	eax, [edi]
		lea	edx, [esp+58h+var_3C]
		mov	[esp+58h+var_3C], eax
		mov	eax, [edi+4]
		mov	[esp+58h+var_38], eax
		mov	eax, [edi+8]
		mov	[esp+58h+var_34], eax
		mov	eax, [edi+0Ch]
		mov	[esp+58h+var_30], eax
		mov	ecx, [edi+10h]
		mov	eax, [esp+58h+var_2C]
		and	ecx, 0FFFFFFFEh
		and	eax, 1
		or	ecx, eax
		or	ecx, 6
		mov	[esp+58h+var_2C], ecx
		jmp	short loc_3BA
; ---------------------------------------------------------------------------

loc_3B8:				; CODE XREF: _rsa_builtin_keygen+35Fj
		mov	edx, edi

loc_3BA:				; CODE XREF: _rsa_builtin_keygen+396j
		push	ebp
		push	edx
		push	dword ptr [esi+14h]
		push	dword ptr [esi+18h]
		call	_BN_mod_inverse
		add	esp, 10h
		test	eax, eax
		jz	loc_1DB
		test	dword ptr [esi+3Ch], 100h
		jnz	short loc_415
		mov	ecx, [esi+18h]
		lea	edi, [esp+58h+var_28]
		mov	eax, [ecx]
		mov	[esp+58h+var_28], eax
		mov	eax, [ecx+4]
		mov	[esp+58h+var_24], eax
		mov	eax, [ecx+8]
		mov	[esp+58h+var_20], eax
		mov	eax, [ecx+0Ch]
		mov	[esp+58h+var_1C], eax
		mov	ecx, [ecx+10h]
		mov	eax, [esp+58h+var_18]
		and	ecx, 0FFFFFFFEh
		and	eax, 1
		or	ecx, eax
		or	ecx, 6
		mov	[esp+58h+var_18], ecx
		jmp	short loc_418
; ---------------------------------------------------------------------------

loc_415:				; CODE XREF: _rsa_builtin_keygen+3B9j
		mov	edi, [esi+18h]

loc_418:				; CODE XREF: _rsa_builtin_keygen+3F3j
		push	ebp
		push	ebx
		push	edi
		push	dword ptr [esi+24h]
		push	0
		call	_BN_div
		add	esp, 14h
		test	eax, eax
		jz	loc_1DB
		push	ebp
		push	[esp+5Ch+var_44]
		push	edi
		push	dword ptr [esi+28h]
		push	0
		call	_BN_div
		add	esp, 14h
		test	eax, eax
		jz	loc_1DB
		test	dword ptr [esi+3Ch], 100h
		jnz	short loc_48E
		mov	ecx, [esi+1Ch]
		lea	edx, [esp+58h+var_14]
		mov	eax, [ecx]
		mov	[esp+58h+var_14], eax
		mov	eax, [ecx+4]
		mov	[esp+58h+var_10], eax
		mov	eax, [ecx+8]
		mov	[esp+58h+var_C], eax
		mov	eax, [ecx+0Ch]
		mov	[esp+58h+var_8], eax
		mov	ecx, [ecx+10h]
		mov	eax, [esp+58h+var_4]
		and	ecx, 0FFFFFFFEh
		and	eax, 1
		or	ecx, eax
		or	ecx, 6
		mov	[esp+58h+var_4], ecx
		jmp	short loc_491
; ---------------------------------------------------------------------------

loc_48E:				; CODE XREF: _rsa_builtin_keygen+432j
		mov	edx, [esi+1Ch]

loc_491:				; CODE XREF: _rsa_builtin_keygen+46Cj
		push	ebp
		push	edx
		push	dword ptr [esi+20h]
		push	dword ptr [esi+2Ch]
		call	_BN_mod_inverse
		add	esp, 10h
		test	eax, eax
		jz	loc_1DB
		mov	esi, 1
		jmp	loc_1F8
; ---------------------------------------------------------------------------

loc_4B3:				; CODE XREF: _rsa_builtin_keygen+24Aj
		push	0AFh ; 'Ø'
		push	offset ??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@ ; ".\\crypto\\rsa\\rsa_gen.c"
		push	78h ; 'x'
		push	81h ; 'Å'
		push	4
		xor	esi, esi
		call	_ERR_put_error
		add	esp, 14h
		jmp	loc_1F8
_rsa_builtin_keygen endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4D8h
; COMDAT (pick any)
		public ??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@
; `string'
??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@ db '.\crypto\rsa\rsa_gen.c',0
					; DATA XREF: _rsa_builtin_keygen+1C0o
					; _rsa_builtin_keygen+498o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_put_error:near ; CODE XREF: _rsa_builtin_keygen+1CEp
					; _rsa_builtin_keygen+4A8p
		extrn _BN_GENCB_call:near ; CODE XREF: _rsa_builtin_keygen+191p
					; _rsa_builtin_keygen+1FDp ...
		extrn _BN_value_one:near ; CODE	XREF: _rsa_builtin_keygen:loc_166p
					; _rsa_builtin_keygen+250p ...
		extrn _BN_CTX_new:near	; CODE XREF: _rsa_builtin_keygen+16p
		extrn _BN_CTX_free:near	; CODE XREF: _rsa_builtin_keygen+1E3p
		extrn _BN_CTX_start:near ; CODE	XREF: _rsa_builtin_keygen+26p
		extrn _BN_CTX_get:near	; CODE XREF: _rsa_builtin_keygen+2Cp
					; _rsa_builtin_keygen+36p ...
		extrn _BN_CTX_end:near	; CODE XREF: _rsa_builtin_keygen+1DDp
		extrn _BN_new:near	; CODE XREF: _rsa_builtin_keygen+76p
					; _rsa_builtin_keygen+8Cp ...
		extrn _BN_copy:near	; CODE XREF: _rsa_builtin_keygen+127p
		extrn _BN_sub:near	; CODE XREF: _rsa_builtin_keygen+153p
					; _rsa_builtin_keygen+25Ep ...
		extrn _BN_mul:near	; CODE XREF: _rsa_builtin_keygen+2FCp
					; _rsa_builtin_keygen+348p
		extrn _BN_div:near	; CODE XREF: _rsa_builtin_keygen+400p
					; _rsa_builtin_keygen+41Bp
		extrn _BN_cmp:near	; CODE XREF: _rsa_builtin_keygen+235p
					; _rsa_builtin_keygen+2DAp
		extrn _BN_gcd:near	; CODE XREF: _rsa_builtin_keygen+168p
					; _rsa_builtin_keygen+274p
		extrn _BN_mod_inverse:near ; CODE XREF:	_rsa_builtin_keygen+3A2p
					; _rsa_builtin_keygen+479p
		extrn _BN_generate_prime_ex:near ; CODE	XREF: _rsa_builtin_keygen+13Ap
					; _rsa_builtin_keygen+1AFp ...
		extrn __chkstk:near	; CODE XREF: _rsa_builtin_keygen+5p


		end

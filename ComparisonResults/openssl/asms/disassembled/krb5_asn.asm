;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	C01C1652EB067F86C69BBC308F445C71
; Input	CRC32 :	2318EB4F

; File Name   :	C:\compspace\Diff\openssl\obj\krb5_asn.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
_KRB5_PRINCNAME_seq_tt dd offset dword_90 ; DATA XREF: .rdata:00000030o
		dd 2 dup(0)
		dd offset ??_C@_08HFFAPMCF@nametype?$AA@ ; "nametype"
		dd offset _ASN1_INTEGER_it
		dd offset off_94
		dd 1, 4
		dd offset ??_C@_0L@HNCCMBEC@namestring?$AA@ ; "namestring"
off_24		dd offset _ASN1_GENERALSTRING_it ; DATA	XREF: .rdata:00000270o
; `KRB5_PRINCNAME_it'::`2'::local_it
?local_it@?1??KRB5_PRINCNAME_it@@9@9 dd	1, 10h ; DATA XREF: _KRB5_PRINCNAME_ito
					; _KRB5_PRINCNAME_freeo ...
		dd offset _KRB5_PRINCNAME_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0P@DPOGFOIG@KRB5_PRINCNAME?$AA@	; "KRB5_PRINCNAME"
; `KRB5_TKTBODY_it'::`2'::local_it
?local_it@?1??KRB5_TKTBODY_it@@9@9 dd 1, 10h ; DATA XREF: _KRB5_TKTBODY_ito
					; _KRB5_TKTBODY_freeo ...
		dd offset _KRB5_TKTBODY_seq_tt
dword_50	dd 4, 0			; DATA XREF: .rdata:_KRB5_TICKET_item_tto
					; .rdata:_KRB5_APREQ_item_tto ...
		dd 10h
		dd offset ??_C@_0N@CKELCCAO@KRB5_TKTBODY?$AA@ ;	"KRB5_TKTBODY"
_KRB5_TKTBODY_seq_tt dd	offset dword_90	; DATA XREF: .rdata:0000004Co
		dd 2 dup(0)
		dd offset ??_C@_06PKKNADCN@tktvno?$AA@ ; "tktvno"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 1, 4
		dd offset ??_C@_05ELABLNGD@realm?$AA@ ;	"realm"
		dd offset _ASN1_GENERALSTRING_it
		dd offset dword_90
		dd 2
dword_90	dd 8			; DATA XREF: .rdata:_KRB5_PRINCNAME_seq_tto
					; .rdata:_KRB5_TKTBODY_seq_tto	...
off_94		dd offset ??_C@_05DOJGLPOI@sname?$AA@ ;	DATA XREF: .rdata:00000014o
					; .rdata:00000318o
					; "sname"
		dd offset _KRB5_PRINCNAME_it
		dd offset dword_90
		dd 3, 0Ch
		dd offset ??_C@_07JHAJBPIE@encdata?$AA@	; "encdata"
		dd offset _KRB5_ENCDATA_it
_KRB5_TICKET_item_tt dd	offset dword_50	; DATA XREF: .rdata:000000CCo
		dd 1, 0
		dd offset ??_C@_0M@JDOLEBDP@KRB5_TICKET?$AA@ ; "KRB5_TICKET"
		dd offset _KRB5_TKTBODY_it
; `KRB5_TICKET_it'::`2'::local_it
?local_it@?1??KRB5_TICKET_it@@9@9 dd 0	; DATA XREF: _KRB5_TICKET_ito
					; _KRB5_TICKET_freeo ...
		dd 0FFFFFFFFh
		dd offset _KRB5_TICKET_item_tt
		dd 3 dup(0)
		dd offset ??_C@_0M@JDOLEBDP@KRB5_TICKET?$AA@ ; "KRB5_TICKET"
_KRB5_APREQBODY_seq_tt dd offset dword_90 ; DATA XREF: .rdata:0000014Co
		dd 2 dup(0)
		dd offset ??_C@_04COHHIGCP@pvno?$AA@ ; "pvno"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 1, 4
		dd offset ??_C@_07EPFMDOAD@msgtype?$AA@	; "msgtype"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 2, 8
		dd offset ??_C@_09BGNPCIIP@apoptions?$AA@ ; "apoptions"
		dd offset _ASN1_BIT_STRING_it
		dd offset dword_90
		dd 3, 0Ch
		dd offset ??_C@_06GCLFECIN@ticket?$AA@ ; "ticket"
		dd offset _KRB5_TICKET_it
		dd offset dword_90
		dd 4, 10h
		dd offset ??_C@_0O@FAKAGKPD@authenticator?$AA@ ; "authenticator"
		dd offset _KRB5_ENCDATA_it
; `KRB5_APREQBODY_it'::`2'::local_it
?local_it@?1??KRB5_APREQBODY_it@@9@9 dd	1, 10h ; DATA XREF: _KRB5_APREQBODY_ito
					; _KRB5_APREQBODY_freeo ...
		dd offset _KRB5_APREQBODY_seq_tt
		dd 5, 0
		dd 14h
		dd offset ??_C@_0P@HIDNLKCB@KRB5_APREQBODY?$AA@	; "KRB5_APREQBODY"
_KRB5_APREQ_item_tt dd offset dword_50	; DATA XREF: .rdata:0000017Co
		dd 0Eh,	0
		dd offset ??_C@_0L@HMMGJLBO@KRB5_APREQ?$AA@ ; "KRB5_APREQ"
		dd offset _KRB5_APREQBODY_it
; `KRB5_APREQ_it'::`2'::local_it
?local_it@?1??KRB5_APREQ_it@@9@9 dd 0	; DATA XREF: _KRB5_APREQ_freeo
					; _KRB5_APREQ_ito ...
		dd 0FFFFFFFFh
		dd offset _KRB5_APREQ_item_tt
		dd 3 dup(0)
		dd offset ??_C@_0L@HMMGJLBO@KRB5_APREQ?$AA@ ; "KRB5_APREQ"
_KRB5_CHECKSUM_seq_tt dd offset	dword_90 ; DATA	XREF: .rdata:000001C0o
		dd 2 dup(0)
		dd offset ??_C@_05JGEDHNAD@ctype?$AA@ ;	"ctype"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 1, 4
		dd offset ??_C@_08DNPJAFPH@checksum?$AA@ ; "checksum"
		dd offset _ASN1_OCTET_STRING_it
; `KRB5_CHECKSUM_it'::`2'::local_it
?local_it@?1??KRB5_CHECKSUM_it@@9@9 dd 1, 10h ;	DATA XREF: _KRB5_CHECKSUM_ito
					; _KRB5_CHECKSUM_freeo	...
		dd offset _KRB5_CHECKSUM_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0O@NPMKALGL@KRB5_CHECKSUM?$AA@ ; "KRB5_CHECKSUM"
_KRB5_ENCKEY_seq_tt dd offset dword_90	; DATA XREF: .rdata:00000204o
		align 10h
		dd offset ??_C@_05HKBAPPGO@ktype?$AA@ ;	"ktype"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 1, 4
		dd offset ??_C@_08GEFCACMM@keyvalue?$AA@ ; "keyvalue"
		dd offset _ASN1_OCTET_STRING_it
; `KRB5_ENCKEY_it'::`2'::local_it
?local_it@?1??KRB5_ENCKEY_it@@9@9 dd 1,	10h ; DATA XREF: _KRB5_ENCKEY_ito
					; _KRB5_ENCKEY_freeo ...
		dd offset _KRB5_ENCKEY_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0M@PKOJJILA@KRB5_ENCKEY?$AA@ ; "KRB5_ENCKEY"
_KRB5_AUTHDATA_seq_tt dd offset	dword_90 ; DATA	XREF: .rdata:00000248o
		dd 2 dup(0)
		dd offset ??_C@_06IKCJHEDH@adtype?$AA@ ; "adtype"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 1, 4
		dd offset ??_C@_06BMABPBBN@addata?$AA@ ; "addata"
		dd offset _ASN1_OCTET_STRING_it
; `KRB5_AUTHDATA_it'::`2'::local_it
?local_it@?1??KRB5_AUTHDATA_it@@9@9 dd 1, 10h ;	DATA XREF: _KRB5_AUTHDATA_ito
					; _KRB5_AUTHDATA_freeo	...
		dd offset _KRB5_AUTHDATA_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0O@GINLENFA@KRB5_AUTHDATA?$AA@ ; "KRB5_AUTHDATA"
; `KRB5_AUTHENTBODY_it'::`2'::local_it
?local_it@?1??KRB5_AUTHENTBODY_it@@9@9 dd 1, 10h ; DATA	XREF: _KRB5_AUTHENTBODY_ito
					; _KRB5_AUTHENTBODY_freeo ...
		dd offset _KRB5_AUTHENTBODY_seq_tt
		dd 9, 0
		dd offset off_24
		dd offset ??_C@_0BB@JKLFJFAB@KRB5_AUTHENTBODY?$AA@ ; "KRB5_AUTHENTBODY"
_KRB5_AUTHENTBODY_seq_tt dd offset dword_90 ; DATA XREF: .rdata:00000264o
		dd 2 dup(0)
		dd offset ??_C@_04HDPHDIBN@avno?$AA@ ; "avno"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 1, 4
		dd offset ??_C@_06NNPBJFMG@crealm?$AA@ ; "crealm"
		dd offset _ASN1_GENERALSTRING_it
		dd offset dword_90
		dd 2, 8
		dd offset ??_C@_05DNEALNHD@cname?$AA@ ;	"cname"
		dd offset _KRB5_PRINCNAME_it
		dd offset dword_90+1
		dd 3, 0Ch
		dd offset ??_C@_05NFFMNFNH@cksum?$AA@ ;	"cksum"
		dd offset _KRB5_CHECKSUM_it
		dd offset dword_90
		dd 4, 10h
		dd offset ??_C@_05IICJHCMK@cusec?$AA@ ;	"cusec"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 5, 14h
		dd offset ??_C@_05NCKEBKLP@ctime?$AA@ ;	"ctime"
		dd offset _ASN1_GENERALIZEDTIME_it
		dd offset dword_90+1
		dd 6, 18h
		dd offset ??_C@_06FLMIOJBO@subkey?$AA@ ; "subkey"
		dd offset _KRB5_ENCKEY_it
		dd offset dword_90+1
		dd 7, 1Ch
		dd offset ??_C@_06HKAIICMA@seqnum?$AA@ ; "seqnum"
		dd offset _ASN1_INTEGER_it
		dd offset off_94+1
		dd 8, 20h
		dd offset ??_C@_0O@BNDCICBA@authorization?$AA@ ; "authorization"
		dd offset _KRB5_AUTHDATA_it
_KRB5_AUTHENT_item_tt dd offset	dword_50 ; DATA	XREF: .rdata:00000348o
		dd 2, 0
		dd offset ??_C@_0N@LEMFPJIM@KRB5_AUTHENT?$AA@ ;	"KRB5_AUTHENT"
		dd offset _KRB5_AUTHENTBODY_it
; `KRB5_AUTHENT_it'::`2'::local_it
?local_it@?1??KRB5_AUTHENT_it@@9@9 dd 0	; DATA XREF: _KRB5_AUTHENT_freeo
					; _KRB5_AUTHENT_ito ...
		dd 0FFFFFFFFh
		dd offset _KRB5_AUTHENT_item_tt
		dd 3 dup(0)
		dd offset ??_C@_0N@LEMFPJIM@KRB5_AUTHENT?$AA@ ;	"KRB5_AUTHENT"
_KRB5_ENCDATA_seq_tt dd	offset dword_90	; DATA XREF: .rdata:000003A0o
		dd 2 dup(0)
		dd offset ??_C@_05EABKJOBO@etype?$AA@ ;	"etype"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90+1
		dd 1, 4
		dd offset ??_C@_04DJEHCALM@kvno?$AA@ ; "kvno"
		dd offset _ASN1_INTEGER_it
		dd offset dword_90
		dd 2, 8
		dd offset ??_C@_06KDGDAFPH@cipher?$AA@ ; "cipher"
		dd offset _ASN1_OCTET_STRING_it
; `KRB5_ENCDATA_it'::`2'::local_it
?local_it@?1??KRB5_ENCDATA_it@@9@9 dd 1, 10h ; DATA XREF: _KRB5_ENCDATA_ito
					; _KRB5_ENCDATA_freeo ...
		dd offset _KRB5_ENCDATA_seq_tt
		dd 3, 0
		dd 0Ch
		dd offset ??_C@_0N@CHBDLHIF@KRB5_ENCDATA?$AA@ ;	"KRB5_ENCDATA"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B4h
; COMDAT (pick any)
		public ??_C@_08HFFAPMCF@nametype?$AA@
; `string'
??_C@_08HFFAPMCF@nametype?$AA@ db 'nametype',0 ; DATA XREF: .rdata:0000000Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C0h
; COMDAT (pick any)
		public ??_C@_0L@HNCCMBEC@namestring?$AA@
; `string'
??_C@_0L@HNCCMBEC@namestring?$AA@ db 'namestring',0 ; DATA XREF: .rdata:00000020o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3CCh
; COMDAT (pick any)
		public ??_C@_0P@DPOGFOIG@KRB5_PRINCNAME?$AA@
; `string'
??_C@_0P@DPOGFOIG@KRB5_PRINCNAME?$AA@ db 'KRB5_PRINCNAME',0 ; DATA XREF: .rdata:00000040o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3DCh
; COMDAT (pick any)
		public ??_C@_06PKKNADCN@tktvno?$AA@
; `string'
??_C@_06PKKNADCN@tktvno?$AA@ db	'tktvno',0 ; DATA XREF: .rdata:0000006Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3E4h
; COMDAT (pick any)
		public ??_C@_05ELABLNGD@realm?$AA@
; `string'
??_C@_05ELABLNGD@realm?$AA@ db 'realm',0 ; DATA XREF: .rdata:00000080o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3ECh
; COMDAT (pick any)
		public ??_C@_05DOJGLPOI@sname?$AA@
; `string'
??_C@_05DOJGLPOI@sname?$AA@ db 'sname',0 ; DATA XREF: .rdata:off_94o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F4h
; COMDAT (pick any)
		public ??_C@_07JHAJBPIE@encdata?$AA@
; `string'
??_C@_07JHAJBPIE@encdata?$AA@ db 'encdata',0 ; DATA XREF: .rdata:000000A8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3FCh
; COMDAT (pick any)
		public ??_C@_0N@CKELCCAO@KRB5_TKTBODY?$AA@
; `string'
??_C@_0N@CKELCCAO@KRB5_TKTBODY?$AA@ db 'KRB5_TKTBODY',0 ; DATA XREF: .rdata:0000005Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40Ch
; COMDAT (pick any)
		public ??_C@_0M@JDOLEBDP@KRB5_TICKET?$AA@
; `string'
??_C@_0M@JDOLEBDP@KRB5_TICKET?$AA@ db 'KRB5_TICKET',0 ; DATA XREF: .rdata:000000BCo
					; .rdata:000000DCo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 418h
; COMDAT (pick any)
		public ??_C@_04COHHIGCP@pvno?$AA@
; `string'
??_C@_04COHHIGCP@pvno?$AA@ db 'pvno',0  ; DATA XREF: .rdata:000000ECo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 420h
; COMDAT (pick any)
		public ??_C@_07EPFMDOAD@msgtype?$AA@
; `string'
??_C@_07EPFMDOAD@msgtype?$AA@ db 'msgtype',0 ; DATA XREF: .rdata:00000100o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 428h
; COMDAT (pick any)
		public ??_C@_09BGNPCIIP@apoptions?$AA@
; `string'
??_C@_09BGNPCIIP@apoptions?$AA@	db 'apoptions',0 ; DATA XREF: .rdata:00000114o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 434h
; COMDAT (pick any)
		public ??_C@_06GCLFECIN@ticket?$AA@
; `string'
??_C@_06GCLFECIN@ticket?$AA@ db	'ticket',0 ; DATA XREF: .rdata:00000128o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 43Ch
; COMDAT (pick any)
		public ??_C@_0O@FAKAGKPD@authenticator?$AA@
; `string'
??_C@_0O@FAKAGKPD@authenticator?$AA@ db	'authenticator',0 ; DATA XREF: .rdata:0000013Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44Ch
; COMDAT (pick any)
		public ??_C@_0P@HIDNLKCB@KRB5_APREQBODY?$AA@
; `string'
??_C@_0P@HIDNLKCB@KRB5_APREQBODY?$AA@ db 'KRB5_APREQBODY',0 ; DATA XREF: .rdata:0000015Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 45Ch
; COMDAT (pick any)
		public ??_C@_0L@HMMGJLBO@KRB5_APREQ?$AA@
; `string'
??_C@_0L@HMMGJLBO@KRB5_APREQ?$AA@ db 'KRB5_APREQ',0 ; DATA XREF: .rdata:0000016Co
					; .rdata:0000018Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 468h
; COMDAT (pick any)
		public ??_C@_05JGEDHNAD@ctype?$AA@
; `string'
??_C@_05JGEDHNAD@ctype?$AA@ db 'ctype',0 ; DATA XREF: .rdata:0000019Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 470h
; COMDAT (pick any)
		public ??_C@_08DNPJAFPH@checksum?$AA@
; `string'
??_C@_08DNPJAFPH@checksum?$AA@ db 'checksum',0 ; DATA XREF: .rdata:000001B0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 47Ch
; COMDAT (pick any)
		public ??_C@_0O@NPMKALGL@KRB5_CHECKSUM?$AA@
; `string'
??_C@_0O@NPMKALGL@KRB5_CHECKSUM?$AA@ db	'KRB5_CHECKSUM',0 ; DATA XREF: .rdata:000001D0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48Ch
; COMDAT (pick any)
		public ??_C@_05HKBAPPGO@ktype?$AA@
; `string'
??_C@_05HKBAPPGO@ktype?$AA@ db 'ktype',0 ; DATA XREF: .rdata:000001E0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 494h
; COMDAT (pick any)
		public ??_C@_08GEFCACMM@keyvalue?$AA@
; `string'
??_C@_08GEFCACMM@keyvalue?$AA@ db 'keyvalue',0 ; DATA XREF: .rdata:000001F4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4A0h
; COMDAT (pick any)
		public ??_C@_0M@PKOJJILA@KRB5_ENCKEY?$AA@
; `string'
??_C@_0M@PKOJJILA@KRB5_ENCKEY?$AA@ db 'KRB5_ENCKEY',0 ; DATA XREF: .rdata:00000214o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4ACh
; COMDAT (pick any)
		public ??_C@_06IKCJHEDH@adtype?$AA@
; `string'
??_C@_06IKCJHEDH@adtype?$AA@ db	'adtype',0 ; DATA XREF: .rdata:00000224o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4B4h
; COMDAT (pick any)
		public ??_C@_06BMABPBBN@addata?$AA@
; `string'
??_C@_06BMABPBBN@addata?$AA@ db	'addata',0 ; DATA XREF: .rdata:00000238o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4BCh
; COMDAT (pick any)
		public ??_C@_0O@GINLENFA@KRB5_AUTHDATA?$AA@
; `string'
??_C@_0O@GINLENFA@KRB5_AUTHDATA?$AA@ db	'KRB5_AUTHDATA',0 ; DATA XREF: .rdata:00000258o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4CCh
; COMDAT (pick any)
		public ??_C@_04HDPHDIBN@avno?$AA@
; `string'
??_C@_04HDPHDIBN@avno?$AA@ db 'avno',0  ; DATA XREF: .rdata:00000284o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4D4h
; COMDAT (pick any)
		public ??_C@_06NNPBJFMG@crealm?$AA@
; `string'
??_C@_06NNPBJFMG@crealm?$AA@ db	'crealm',0 ; DATA XREF: .rdata:00000298o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4DCh
; COMDAT (pick any)
		public ??_C@_05DNEALNHD@cname?$AA@
; `string'
??_C@_05DNEALNHD@cname?$AA@ db 'cname',0 ; DATA XREF: .rdata:000002ACo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4E4h
; COMDAT (pick any)
		public ??_C@_05NFFMNFNH@cksum?$AA@
; `string'
??_C@_05NFFMNFNH@cksum?$AA@ db 'cksum',0 ; DATA XREF: .rdata:000002C0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4ECh
; COMDAT (pick any)
		public ??_C@_05IICJHCMK@cusec?$AA@
; `string'
??_C@_05IICJHCMK@cusec?$AA@ db 'cusec',0 ; DATA XREF: .rdata:000002D4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4F4h
; COMDAT (pick any)
		public ??_C@_05NCKEBKLP@ctime?$AA@
; `string'
??_C@_05NCKEBKLP@ctime?$AA@ db 'ctime',0 ; DATA XREF: .rdata:000002E8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4FCh
; COMDAT (pick any)
		public ??_C@_06FLMIOJBO@subkey?$AA@
; `string'
??_C@_06FLMIOJBO@subkey?$AA@ db	'subkey',0 ; DATA XREF: .rdata:000002FCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 504h
; COMDAT (pick any)
		public ??_C@_06HKAIICMA@seqnum?$AA@
; `string'
??_C@_06HKAIICMA@seqnum?$AA@ db	'seqnum',0 ; DATA XREF: .rdata:00000310o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50Ch
; COMDAT (pick any)
		public ??_C@_0O@BNDCICBA@authorization?$AA@
; `string'
??_C@_0O@BNDCICBA@authorization?$AA@ db	'authorization',0 ; DATA XREF: .rdata:00000324o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 51Ch
; COMDAT (pick any)
		public ??_C@_0BB@JKLFJFAB@KRB5_AUTHENTBODY?$AA@
; `string'
??_C@_0BB@JKLFJFAB@KRB5_AUTHENTBODY?$AA@ db 'KRB5_AUTHENTBODY',0
					; DATA XREF: .rdata:00000274o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 530h
; COMDAT (pick any)
		public ??_C@_0N@LEMFPJIM@KRB5_AUTHENT?$AA@
; `string'
??_C@_0N@LEMFPJIM@KRB5_AUTHENT?$AA@ db 'KRB5_AUTHENT',0 ; DATA XREF: .rdata:00000338o
					; .rdata:00000358o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 540h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_ENCDATA_it
_KRB5_ENCDATA_it proc near		; DATA XREF: .rdata:000000ACo
					; .rdata:00000140o
		mov	eax, offset ?local_it@?1??KRB5_ENCDATA_it@@9@9 ; `KRB5_ENCDATA_it'::`2'::local_it
		retn
_KRB5_ENCDATA_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 548h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_PRINCNAME_it
_KRB5_PRINCNAME_it proc	near		; DATA XREF: .rdata:00000098o
					; .rdata:000002B0o
		mov	eax, offset ?local_it@?1??KRB5_PRINCNAME_it@@9@9 ; `KRB5_PRINCNAME_it'::`2'::local_it
		retn
_KRB5_PRINCNAME_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 550h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_TKTBODY_it
_KRB5_TKTBODY_it proc near		; DATA XREF: .rdata:000000C0o
		mov	eax, offset ?local_it@?1??KRB5_TKTBODY_it@@9@9 ; `KRB5_TKTBODY_it'::`2'::local_it
		retn
_KRB5_TKTBODY_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 558h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_APREQBODY_it
_KRB5_APREQBODY_it proc	near		; DATA XREF: .rdata:00000170o
		mov	eax, offset ?local_it@?1??KRB5_APREQBODY_it@@9@9 ; `KRB5_APREQBODY_it'::`2'::local_it
		retn
_KRB5_APREQBODY_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 560h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_TICKET_it
_KRB5_TICKET_it	proc near		; DATA XREF: .rdata:0000012Co
		mov	eax, offset ?local_it@?1??KRB5_TICKET_it@@9@9 ;	`KRB5_TICKET_it'::`2'::local_it
		retn
_KRB5_TICKET_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 568h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_CHECKSUM_it
_KRB5_CHECKSUM_it proc near		; DATA XREF: .rdata:000002C4o
		mov	eax, offset ?local_it@?1??KRB5_CHECKSUM_it@@9@9	; `KRB5_CHECKSUM_it'::`2'::local_it
		retn
_KRB5_CHECKSUM_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 570h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_ENCKEY_it
_KRB5_ENCKEY_it	proc near		; DATA XREF: .rdata:00000300o
		mov	eax, offset ?local_it@?1??KRB5_ENCKEY_it@@9@9 ;	`KRB5_ENCKEY_it'::`2'::local_it
		retn
_KRB5_ENCKEY_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 578h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHDATA_it
_KRB5_AUTHDATA_it proc near		; DATA XREF: .rdata:00000328o
		mov	eax, offset ?local_it@?1??KRB5_AUTHDATA_it@@9@9	; `KRB5_AUTHDATA_it'::`2'::local_it
		retn
_KRB5_AUTHDATA_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 580h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHENTBODY_it
_KRB5_AUTHENTBODY_it proc near		; DATA XREF: .rdata:0000033Co
		mov	eax, offset ?local_it@?1??KRB5_AUTHENTBODY_it@@9@9 ; `KRB5_AUTHENTBODY_it'::`2'::local_it
		retn
_KRB5_AUTHENTBODY_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 588h
; COMDAT (pick any)
		public ??_C@_05EABKJOBO@etype?$AA@
; `string'
??_C@_05EABKJOBO@etype?$AA@ db 'etype',0 ; DATA XREF: .rdata:00000368o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 590h
; COMDAT (pick any)
		public ??_C@_04DJEHCALM@kvno?$AA@
; `string'
??_C@_04DJEHCALM@kvno?$AA@ db 'kvno',0  ; DATA XREF: .rdata:0000037Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 598h
; COMDAT (pick any)
		public ??_C@_06KDGDAFPH@cipher?$AA@
; `string'
??_C@_06KDGDAFPH@cipher?$AA@ db	'cipher',0 ; DATA XREF: .rdata:00000390o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5A0h
; COMDAT (pick any)
		public ??_C@_0N@CHBDLHIF@KRB5_ENCDATA?$AA@
; `string'
??_C@_0N@CHBDLHIF@KRB5_ENCDATA?$AA@ db 'KRB5_ENCDATA',0 ; DATA XREF: .rdata:000003B0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5B0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_APREQBODY_free
_KRB5_APREQBODY_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_APREQBODY_it@@9@9 ; `KRB5_APREQBODY_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_APREQBODY_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_APREQBODY_new
_KRB5_APREQBODY_new proc near
		push	offset ?local_it@?1??KRB5_APREQBODY_it@@9@9 ; `KRB5_APREQBODY_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_APREQBODY_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_APREQ_free
_KRB5_APREQ_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_APREQ_it@@9@9	; `KRB5_APREQ_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_APREQ_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5E8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_APREQ_it
_KRB5_APREQ_it	proc near
		mov	eax, offset ?local_it@?1??KRB5_APREQ_it@@9@9 ; `KRB5_APREQ_it'::`2'::local_it
		retn
_KRB5_APREQ_it	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_APREQ_new
_KRB5_APREQ_new	proc near
		push	offset ?local_it@?1??KRB5_APREQ_it@@9@9	; `KRB5_APREQ_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_APREQ_new	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 600h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHDATA_free
_KRB5_AUTHDATA_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_AUTHDATA_it@@9@9 ; `KRB5_AUTHDATA_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_AUTHDATA_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 614h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHDATA_new
_KRB5_AUTHDATA_new proc	near
		push	offset ?local_it@?1??KRB5_AUTHDATA_it@@9@9 ; `KRB5_AUTHDATA_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_AUTHDATA_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 624h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHENTBODY_free
_KRB5_AUTHENTBODY_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_AUTHENTBODY_it@@9@9 ;	`KRB5_AUTHENTBODY_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_AUTHENTBODY_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 638h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHENTBODY_new
_KRB5_AUTHENTBODY_new proc near
		push	offset ?local_it@?1??KRB5_AUTHENTBODY_it@@9@9 ;	`KRB5_AUTHENTBODY_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_AUTHENTBODY_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 648h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHENT_free
_KRB5_AUTHENT_free proc	near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_AUTHENT_it@@9@9 ; `KRB5_AUTHENT_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_AUTHENT_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 65Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHENT_it
_KRB5_AUTHENT_it proc near
		mov	eax, offset ?local_it@?1??KRB5_AUTHENT_it@@9@9 ; `KRB5_AUTHENT_it'::`2'::local_it
		retn
_KRB5_AUTHENT_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 664h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_AUTHENT_new
_KRB5_AUTHENT_new proc near
		push	offset ?local_it@?1??KRB5_AUTHENT_it@@9@9 ; `KRB5_AUTHENT_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_AUTHENT_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 674h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_CHECKSUM_free
_KRB5_CHECKSUM_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_CHECKSUM_it@@9@9 ; `KRB5_CHECKSUM_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_CHECKSUM_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 688h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_CHECKSUM_new
_KRB5_CHECKSUM_new proc	near
		push	offset ?local_it@?1??KRB5_CHECKSUM_it@@9@9 ; `KRB5_CHECKSUM_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_CHECKSUM_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 698h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_ENCDATA_free
_KRB5_ENCDATA_free proc	near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_ENCDATA_it@@9@9 ; `KRB5_ENCDATA_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_ENCDATA_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_ENCDATA_new
_KRB5_ENCDATA_new proc near
		push	offset ?local_it@?1??KRB5_ENCDATA_it@@9@9 ; `KRB5_ENCDATA_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_ENCDATA_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_ENCKEY_free
_KRB5_ENCKEY_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_ENCKEY_it@@9@9 ; `KRB5_ENCKEY_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_ENCKEY_free endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6D0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_ENCKEY_new
_KRB5_ENCKEY_new proc near
		push	offset ?local_it@?1??KRB5_ENCKEY_it@@9@9 ; `KRB5_ENCKEY_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_ENCKEY_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6E0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_PRINCNAME_free
_KRB5_PRINCNAME_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_PRINCNAME_it@@9@9 ; `KRB5_PRINCNAME_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_PRINCNAME_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6F4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_PRINCNAME_new
_KRB5_PRINCNAME_new proc near
		push	offset ?local_it@?1??KRB5_PRINCNAME_it@@9@9 ; `KRB5_PRINCNAME_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_PRINCNAME_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 704h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_TICKET_free
_KRB5_TICKET_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_TICKET_it@@9@9 ; `KRB5_TICKET_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_TICKET_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 718h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_TICKET_new
_KRB5_TICKET_new proc near
		push	offset ?local_it@?1??KRB5_TICKET_it@@9@9 ; `KRB5_TICKET_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_TICKET_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 728h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_TKTBODY_free
_KRB5_TKTBODY_free proc	near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??KRB5_TKTBODY_it@@9@9 ; `KRB5_TKTBODY_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_KRB5_TKTBODY_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 73Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _KRB5_TKTBODY_new
_KRB5_TKTBODY_new proc near
		push	offset ?local_it@?1??KRB5_TKTBODY_it@@9@9 ; `KRB5_TKTBODY_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_KRB5_TKTBODY_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 74Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_APREQ
_d2i_KRB5_APREQ	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_APREQ_it@@9@9	; `KRB5_APREQ_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_APREQ	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 768h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_APREQBODY
_d2i_KRB5_APREQBODY proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_APREQBODY_it@@9@9 ; `KRB5_APREQBODY_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_APREQBODY endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 784h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_AUTHDATA
_d2i_KRB5_AUTHDATA proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_AUTHDATA_it@@9@9 ; `KRB5_AUTHDATA_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_AUTHDATA endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 7A0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_AUTHENT
_d2i_KRB5_AUTHENT proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_AUTHENT_it@@9@9 ; `KRB5_AUTHENT_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_AUTHENT endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 7BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_AUTHENTBODY
_d2i_KRB5_AUTHENTBODY proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_AUTHENTBODY_it@@9@9 ;	`KRB5_AUTHENTBODY_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_AUTHENTBODY endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 7D8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_CHECKSUM
_d2i_KRB5_CHECKSUM proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_CHECKSUM_it@@9@9 ; `KRB5_CHECKSUM_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_CHECKSUM endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 7F4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_ENCDATA
_d2i_KRB5_ENCDATA proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_ENCDATA_it@@9@9 ; `KRB5_ENCDATA_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_ENCDATA endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 810h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_ENCKEY
_d2i_KRB5_ENCKEY proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_ENCKEY_it@@9@9 ; `KRB5_ENCKEY_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_ENCKEY endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 82Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_PRINCNAME
_d2i_KRB5_PRINCNAME proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_PRINCNAME_it@@9@9 ; `KRB5_PRINCNAME_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_PRINCNAME endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 848h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_TICKET
_d2i_KRB5_TICKET proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_TICKET_it@@9@9 ; `KRB5_TICKET_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_TICKET endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 864h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_KRB5_TKTBODY
_d2i_KRB5_TKTBODY proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??KRB5_TKTBODY_it@@9@9 ; `KRB5_TKTBODY_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_KRB5_TKTBODY endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 880h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_APREQ
_i2d_KRB5_APREQ	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_APREQ_it@@9@9	; `KRB5_APREQ_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_APREQ	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 898h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_APREQBODY
_i2d_KRB5_APREQBODY proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_APREQBODY_it@@9@9 ; `KRB5_APREQBODY_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_APREQBODY endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8B0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_AUTHDATA
_i2d_KRB5_AUTHDATA proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_AUTHDATA_it@@9@9 ; `KRB5_AUTHDATA_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_AUTHDATA endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8C8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_AUTHENT
_i2d_KRB5_AUTHENT proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_AUTHENT_it@@9@9 ; `KRB5_AUTHENT_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_AUTHENT endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8E0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_AUTHENTBODY
_i2d_KRB5_AUTHENTBODY proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_AUTHENTBODY_it@@9@9 ;	`KRB5_AUTHENTBODY_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_AUTHENTBODY endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8F8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_CHECKSUM
_i2d_KRB5_CHECKSUM proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_CHECKSUM_it@@9@9 ; `KRB5_CHECKSUM_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_CHECKSUM endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 910h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_ENCDATA
_i2d_KRB5_ENCDATA proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_ENCDATA_it@@9@9 ; `KRB5_ENCDATA_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_ENCDATA endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 928h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_ENCKEY
_i2d_KRB5_ENCKEY proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_ENCKEY_it@@9@9 ; `KRB5_ENCKEY_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_ENCKEY endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 940h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_PRINCNAME
_i2d_KRB5_PRINCNAME proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_PRINCNAME_it@@9@9 ; `KRB5_PRINCNAME_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_PRINCNAME endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 958h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_TICKET
_i2d_KRB5_TICKET proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_TICKET_it@@9@9 ; `KRB5_TICKET_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_TICKET endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 970h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_KRB5_TKTBODY
_i2d_KRB5_TKTBODY proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??KRB5_TKTBODY_it@@9@9 ; `KRB5_TKTBODY_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_KRB5_TKTBODY endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ASN1_BIT_STRING_it:near ; DATA XREF: .rdata:00000118o
		extrn _ASN1_INTEGER_it:near ; DATA XREF: .rdata:00000010o
					; .rdata:00000070o ...
		extrn _ASN1_OCTET_STRING_it:near ; DATA	XREF: .rdata:000001B4o
					; .rdata:000001F8o ...
		extrn _ASN1_GENERALSTRING_it:near ; DATA XREF: .rdata:off_24o
					; .rdata:00000084o ...
		extrn _ASN1_GENERALIZEDTIME_it:near ; DATA XREF: .rdata:000002ECo
		extrn _ASN1_item_new:near ; CODE XREF: _KRB5_APREQBODY_new+5p
					; _KRB5_APREQ_new+5p ...
		extrn _ASN1_item_free:near ; CODE XREF:	_KRB5_APREQBODY_free+9p
					; _KRB5_APREQ_free+9p ...
		extrn _ASN1_item_d2i:near ; CODE XREF: _d2i_KRB5_APREQ+11p
					; _d2i_KRB5_APREQBODY+11p ...
		extrn _ASN1_item_i2d:near ; CODE XREF: _i2d_KRB5_APREQ+Dp
					; _i2d_KRB5_APREQBODY+Dp ...


		end

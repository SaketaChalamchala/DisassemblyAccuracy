;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	C64DECDB08E378FD7871B7FB8E43D09F
; Input	CRC32 :	5980B6C2

; File Name   :	C:\compspace\Diff\openssl\obj\crl2p7.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_add_certs_from_file proc near		; CODE XREF: _crl2pkcs7_main+50Cp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		push	ebp
		push	esi
		push	edi
		xor	ebx, ebx
		or	esi, 0FFFFFFFFh
		xor	edi, edi
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	ebp, eax
		add	esp, 4
		mov	eax, [esp+10h+arg_4]
		test	ebp, ebp
		jz	short loc_A0
		push	eax
		push	3
		push	6Ch ; 'l'
		push	ebp
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jle	short loc_9C
		push	edi
		push	edi
		push	edi
		push	ebp
		call	_PEM_X509_INFO_read_bio
		mov	edi, eax
		add	esp, 10h
		test	edi, edi
		jnz	short loc_52
		push	[esp+10h+arg_4]
		push	offset ??_C@_0BM@DEMCMJDC@error?5reading?5the?5file?0?5?$CFs?6?$AA@ ; "error reading the file, %s\n"
		jmp	short loc_A6
; ---------------------------------------------------------------------------

loc_52:					; CODE XREF: _add_certs_from_file+45j
		push	edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jz	short loc_98
		nop

loc_60:					; CODE XREF: _add_certs_from_file+96j
		push	edi
		call	_sk_shift
		mov	esi, eax
		add	esp, 4
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_85
		push	eax
		push	[esp+14h+arg_0]
		call	_sk_push
		add	esp, 8
		mov	dword ptr [esi], 0
		inc	ebx

loc_85:					; CODE XREF: _add_certs_from_file+6Fj
		push	esi
		call	_X509_INFO_free
		push	edi
		call	_sk_num
		add	esp, 8
		test	eax, eax
		jnz	short loc_60

loc_98:					; CODE XREF: _add_certs_from_file+5Dj
		mov	esi, ebx
		jmp	short $end$19
; ---------------------------------------------------------------------------

loc_9C:					; CODE XREF: _add_certs_from_file+33j
		mov	eax, [esp+10h+arg_4]

loc_A0:					; CODE XREF: _add_certs_from_file+21j
		push	eax
		push	offset ??_C@_0BM@JKMADHFH@error?5opening?5the?5file?0?5?$CFs?6?$AA@ ; "error opening the file, %s\n"

loc_A6:					; CODE XREF: _add_certs_from_file+50j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$end$19:				; CODE XREF: _add_certs_from_file+9Aj
		test	ebp, ebp
		jz	short loc_C1
		push	ebp
		call	_BIO_free
		add	esp, 4

loc_C1:					; CODE XREF: _add_certs_from_file+B6j
		test	edi, edi
		jz	short loc_CE
		push	edi
		call	_sk_free
		add	esp, 4

loc_CE:					; CODE XREF: _add_certs_from_file+C3j
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_add_certs_from_file endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _crl2pkcs7_main
_crl2pkcs7_main	proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
ErrMsg		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 1Ch
		call	__chkstk
		push	ebx
		push	ebp
		xor	eax, eax
		xor	ebp, ebp
		push	esi
		push	edi
		mov	[esp+2Ch+var_18], eax
		mov	[esp+2Ch+var_1C], ebp
		mov	[esp+2Ch+var_14], eax
		cmp	dword ptr ds:_bio_err, eax
		jnz	short loc_130
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_130
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		add	esp, 14h

loc_130:				; CODE XREF: _crl2pkcs7_main+24j
					; _crl2pkcs7_main+3Bj
		mov	ebx, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_0]
		dec	esi
		mov	[esp+2Ch+ErrMsg], ebp
		mov	[esp+2Ch+var_8], ebp
		mov	eax, [ebx]
		add	ebx, 4
		mov	[esp+2Ch+var_C], 3
		mov	[esp+2Ch+var_4], 3
		mov	[esp+2Ch+arg_4], eax
		cmp	esi, 1
		jl	loc_35E
		nop	dword ptr [eax+eax+00h]

loc_168:				; CODE XREF: _crl2pkcs7_main+280j
		mov	edi, [ebx]
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_178:				; CODE XREF: _crl2pkcs7_main+BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_198
		test	dl, dl
		jz	short loc_194
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_198
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_178

loc_194:				; CODE XREF: _crl2pkcs7_main+A8j
		xor	eax, eax
		jmp	short loc_19D
; ---------------------------------------------------------------------------

loc_198:				; CODE XREF: _crl2pkcs7_main+A4j
					; _crl2pkcs7_main+B0j
		sbb	eax, eax
		or	eax, 1

loc_19D:				; CODE XREF: _crl2pkcs7_main+BEj
		test	eax, eax
		jnz	short loc_1C2
		dec	esi
		cmp	esi, 1
		jl	$bad$115
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+2Ch+var_C], eax
		jmp	loc_351
; ---------------------------------------------------------------------------

loc_1C2:				; CODE XREF: _crl2pkcs7_main+C7j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, edi

loc_1C9:				; CODE XREF: _crl2pkcs7_main+10Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1E9
		test	dl, dl
		jz	short loc_1E5
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1E9
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1C9

loc_1E5:				; CODE XREF: _crl2pkcs7_main+F9j
		xor	eax, eax
		jmp	short loc_1EE
; ---------------------------------------------------------------------------

loc_1E9:				; CODE XREF: _crl2pkcs7_main+F5j
					; _crl2pkcs7_main+101j
		sbb	eax, eax
		or	eax, 1

loc_1EE:				; CODE XREF: _crl2pkcs7_main+10Fj
		test	eax, eax
		jnz	short loc_213
		dec	esi
		cmp	esi, 1
		jl	$bad$115
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+2Ch+var_4], eax
		jmp	loc_351
; ---------------------------------------------------------------------------

loc_213:				; CODE XREF: _crl2pkcs7_main+118j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, edi

loc_21A:				; CODE XREF: _crl2pkcs7_main+15Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_23A
		test	dl, dl
		jz	short loc_236
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_23A
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_21A

loc_236:				; CODE XREF: _crl2pkcs7_main+14Aj
		xor	eax, eax
		jmp	short loc_23F
; ---------------------------------------------------------------------------

loc_23A:				; CODE XREF: _crl2pkcs7_main+146j
					; _crl2pkcs7_main+152j
		sbb	eax, eax
		or	eax, 1

loc_23F:				; CODE XREF: _crl2pkcs7_main+160j
		test	eax, eax
		jnz	short loc_25C
		dec	esi
		cmp	esi, 1
		jl	$bad$115
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+2Ch+ErrMsg], edx
		jmp	loc_351
; ---------------------------------------------------------------------------

loc_25C:				; CODE XREF: _crl2pkcs7_main+169j
		mov	ecx, offset ??_C@_06FCMLDGBD@?9nocrl?$AA@ ; "-nocrl"
		mov	eax, edi
		nop	dword ptr [eax+eax+00h]

loc_268:				; CODE XREF: _crl2pkcs7_main+1AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_288
		test	dl, dl
		jz	short loc_284
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_288
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_268

loc_284:				; CODE XREF: _crl2pkcs7_main+198j
		xor	eax, eax
		jmp	short loc_28D
; ---------------------------------------------------------------------------

loc_288:				; CODE XREF: _crl2pkcs7_main+194j
					; _crl2pkcs7_main+1A0j
		sbb	eax, eax
		or	eax, 1

loc_28D:				; CODE XREF: _crl2pkcs7_main+1AEj
		test	eax, eax
		jnz	short loc_29E
		mov	[esp+2Ch+var_14], 1
		jmp	loc_351
; ---------------------------------------------------------------------------

loc_29E:				; CODE XREF: _crl2pkcs7_main+1B7j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, edi
		nop	dword ptr [eax]

loc_2A8:				; CODE XREF: _crl2pkcs7_main+1EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2C8
		test	dl, dl
		jz	short loc_2C4
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2C8
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2A8

loc_2C4:				; CODE XREF: _crl2pkcs7_main+1D8j
		xor	eax, eax
		jmp	short loc_2CD
; ---------------------------------------------------------------------------

loc_2C8:				; CODE XREF: _crl2pkcs7_main+1D4j
					; _crl2pkcs7_main+1E0j
		sbb	eax, eax
		or	eax, 1

loc_2CD:				; CODE XREF: _crl2pkcs7_main+1EEj
		test	eax, eax
		jnz	short loc_2E7
		dec	esi
		cmp	esi, 1
		jl	$bad$115
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+2Ch+var_8], edx
		jmp	short loc_351
; ---------------------------------------------------------------------------

loc_2E7:				; CODE XREF: _crl2pkcs7_main+1F7j
		mov	eax, offset ??_C@_09LJGMBFEA@?9certfile?$AA@ ; "-certfile"

loc_2EC:				; CODE XREF: _crl2pkcs7_main+22Ej
		mov	cl, [edi]
		cmp	cl, [eax]
		jnz	short loc_30C
		test	cl, cl
		jz	short loc_308
		mov	cl, [edi+1]
		cmp	cl, [eax+1]
		jnz	short loc_30C
		add	edi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_2EC

loc_308:				; CODE XREF: _crl2pkcs7_main+21Cj
		xor	eax, eax
		jmp	short loc_311
; ---------------------------------------------------------------------------

loc_30C:				; CODE XREF: _crl2pkcs7_main+218j
					; _crl2pkcs7_main+224j
		sbb	eax, eax
		or	eax, 1

loc_311:				; CODE XREF: _crl2pkcs7_main+232j
		test	eax, eax
		jnz	loc_3F4
		dec	esi
		cmp	esi, 1
		jl	$bad$115
		test	ebp, ebp
		jnz	short loc_33A
		call	_sk_new_null
		mov	ebp, eax
		mov	[esp+2Ch+var_1C], ebp
		test	ebp, ebp
		jz	loc_3E7

loc_33A:				; CODE XREF: _crl2pkcs7_main+24Dj
		push	dword ptr [ebx+4]
		add	ebx, 4
		push	ebp
		call	_sk_push
		add	esp, 8
		test	eax, eax
		jz	loc_3DE

loc_351:				; CODE XREF: _crl2pkcs7_main+E5j
					; _crl2pkcs7_main+136j	...
		dec	esi
		add	ebx, 4
		cmp	esi, 1
		jge	loc_168

loc_35E:				; CODE XREF: _crl2pkcs7_main+85j
		call	_ERR_load_crypto_strings
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	ebp, eax
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 8
		mov	edi, eax
		test	ebp, ebp
		jz	loc_730
		test	edi, edi
		jz	loc_730
		cmp	[esp+2Ch+var_14], 0
		jnz	loc_534
		mov	ebx, [esp+2Ch+ErrMsg]
		test	ebx, ebx
		jnz	loc_4B0
		push	ebx
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	ebx
		push	6Ah ; 'j'
		push	ebp
		call	_BIO_ctrl
		add	esp, 14h

loc_3BB:				; CODE XREF: _crl2pkcs7_main+3E8j
		mov	eax, [esp+2Ch+var_C]
		cmp	eax, 1
		jnz	loc_4D7
		push	0
		push	ebp
		call	_d2i_X509_CRL_bio
		mov	ebx, eax
		add	esp, 8
		mov	[esp+2Ch+var_18], ebx
		jmp	loc_4F1
; ---------------------------------------------------------------------------

loc_3DE:				; CODE XREF: _crl2pkcs7_main+273j
		push	ebp
		call	_sk_free
		add	esp, 4

loc_3E7:				; CODE XREF: _crl2pkcs7_main+25Cj
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, 1
		pop	ebx
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_3F4:				; CODE XREF: _crl2pkcs7_main+23Bj
		push	dword ptr [ebx]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$bad$115:				; CODE XREF: _crl2pkcs7_main+CDj
					; _crl2pkcs7_main+11Ej	...
		push	[esp+2Ch+arg_4]
		push	offset ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; "%s [options] <infile >outfile\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CL@MDOLAFAK@?5?9inform?5arg?5?5?5?5input?5format?5?9?5D@ ; " -inform arg	  input	format - DER or	P"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CM@OEOKNGNO@?5?9outform?5arg?5?5?5output?5format?5?9?5@ ;	" -outform arg	 output	format - DER or	"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@BNDOLEGE@?5?9in?5arg?5?5?5?5?5?5?5?5input?5file?6?$AA@	; " -in	arg	   input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@NLKPGMME@?5?9out?5arg?5?5?5?5?5?5?5output?5file?6?$AA@	; " -out arg	   output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DM@FKKBPEBO@?5?9certfile?5arg?5?5certificates?5fil@ ; " -certfile	arg  certificates file of ch"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CO@HDOHIEOB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CIcan?5be?5used?5mor@ ; "		     (can be used more than "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 44h
		push	offset ??_C@_0DN@OMNJHAB@?5?9nocrl?5?5?5?5?5?5?5?5?5no?5crl?5to?5load?0?5@ ; " -nocrl	      no crl to	load, just ce"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_4B0:				; CODE XREF: _crl2pkcs7_main+2C9j
		push	ebx
		push	3
		push	6Ch ; 'l'
		push	ebp
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	loc_3BB
		push	ebx		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		xor	esi, esi
		jmp	loc_66E
; ---------------------------------------------------------------------------

loc_4D7:				; CODE XREF: _crl2pkcs7_main+2EAj
		cmp	eax, 3
		jnz	short loc_51A
		push	0
		push	0
		push	0
		push	ebp
		call	_PEM_read_bio_X509_CRL
		add	esp, 10h
		mov	[esp+2Ch+var_18], eax
		mov	ebx, eax

loc_4F1:				; CODE XREF: _crl2pkcs7_main+301j
		test	ebx, ebx
		jnz	short loc_536
		push	offset ??_C@_0BE@BBFHHDDE@unable?5to?5load?5CRL?6?$AA@ ; "unable to load CRL\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		xor	esi, esi
		jmp	loc_66E
; ---------------------------------------------------------------------------

loc_51A:				; CODE XREF: _crl2pkcs7_main+402j
		push	offset ??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@ ; "bad	input format specified for input cr"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		xor	esi, esi
		jmp	loc_66E
; ---------------------------------------------------------------------------

loc_534:				; CODE XREF: _crl2pkcs7_main+2BDj
		xor	ebx, ebx

loc_536:				; CODE XREF: _crl2pkcs7_main+41Bj
		call	_PKCS7_new
		mov	esi, eax
		mov	[esp+2Ch+arg_4], esi
		test	esi, esi
		jz	loc_66E
		call	_PKCS7_SIGNED_new
		mov	esi, eax
		test	esi, esi
		jz	loc_66A
		push	16h
		call	_OBJ_nid2obj
		mov	ecx, [esp+30h+arg_4]
		push	15h
		mov	[ecx+10h], eax
		mov	[ecx+14h], esi
		call	_OBJ_nid2obj
		mov	ecx, [esi+14h]
		push	1
		mov	[ecx+10h], eax
		push	dword ptr [esi]
		call	_ASN1_INTEGER_set
		add	esp, 10h
		test	eax, eax
		jz	loc_66A
		call	_sk_new_null
		test	eax, eax
		jz	loc_66A
		mov	[esi+0Ch], eax
		test	ebx, ebx
		jz	short loc_5AE
		push	ebx
		push	eax
		call	_sk_push
		add	esp, 8
		xor	eax, eax
		mov	[esp+2Ch+var_18], eax

loc_5AE:				; CODE XREF: _crl2pkcs7_main+4C4j
		call	_sk_new_null
		mov	ebx, eax
		test	ebx, ebx
		jz	loc_66A
		mov	eax, [esp+2Ch+var_1C]
		mov	[esi+8], ebx
		test	eax, eax
		jz	short loc_605
		push	eax
		xor	esi, esi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_601
		nop

loc_5D8:				; CODE XREF: _crl2pkcs7_main+527j
		push	esi
		push	[esp+30h+var_1C]
		call	_sk_value
		push	eax
		push	ebx
		call	_add_certs_from_file
		add	esp, 10h
		test	eax, eax
		js	short loc_64C
		push	[esp+2Ch+var_1C]
		inc	esi
		call	_sk_num
		add	esp, 4
		cmp	esi, eax
		jl	short loc_5D8

loc_601:				; CODE XREF: _crl2pkcs7_main+4FDj
		mov	eax, [esp+2Ch+var_1C]

loc_605:				; CODE XREF: _crl2pkcs7_main+4EEj
		push	eax
		call	_sk_free
		mov	ebx, [esp+30h+var_8]
		add	esp, 4
		test	ebx, ebx
		jnz	loc_6B5
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	ebx
		push	6Ah ; 'j'
		push	edi
		call	_BIO_ctrl
		add	esp, 14h

loc_62F:				; CODE XREF: _crl2pkcs7_main+5EDj
		mov	eax, [esp+2Ch+var_4]
		cmp	eax, 1
		jnz	loc_6D7
		mov	esi, [esp+2Ch+arg_4]
		push	esi
		push	edi
		call	_i2d_PKCS7_bio
		jmp	loc_6E7
; ---------------------------------------------------------------------------

loc_64C:				; CODE XREF: _crl2pkcs7_main+516j
		push	offset ??_C@_0BM@IDMGCMHJ@error?5loading?5certificates?6?$AA@ ;	"error loading certificates\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch

loc_66A:				; CODE XREF: _crl2pkcs7_main+47Aj
					; _crl2pkcs7_main+4ACj	...
		mov	esi, [esp+2Ch+arg_4]

loc_66E:				; CODE XREF: _crl2pkcs7_main+3FAj
					; _crl2pkcs7_main+43Dj	...
		mov	ebx, 1

$end$116:				; CODE XREF: _crl2pkcs7_main+63Bj
		test	ebp, ebp
		jz	short loc_680
		push	ebp
		call	_BIO_free
		add	esp, 4

loc_680:				; CODE XREF: _crl2pkcs7_main+59Dj
		test	edi, edi
		jz	short loc_68D
		push	edi
		call	_BIO_free_all
		add	esp, 4

loc_68D:				; CODE XREF: _crl2pkcs7_main+5AAj
		test	esi, esi
		jz	short loc_69A
		push	esi
		call	_PKCS7_free
		add	esp, 4

loc_69A:				; CODE XREF: _crl2pkcs7_main+5B7j
		mov	eax, [esp+2Ch+var_18]
		test	eax, eax
		jz	short loc_6AB
		push	eax
		call	_X509_CRL_free
		add	esp, 4

loc_6AB:				; CODE XREF: _crl2pkcs7_main+5C8j
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, ebx
		pop	ebx
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6B5:				; CODE XREF: _crl2pkcs7_main+53Cj
		push	ebx
		push	5
		push	6Ch ; 'l'
		push	edi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	loc_62F
		push	ebx		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		jmp	short loc_66A
; ---------------------------------------------------------------------------

loc_6D7:				; CODE XREF: _crl2pkcs7_main+55Ej
		cmp	eax, 3
		jnz	short loc_718
		mov	esi, [esp+2Ch+arg_4]
		push	esi
		push	edi
		call	_PEM_write_bio_PKCS7

loc_6E7:				; CODE XREF: _crl2pkcs7_main+56Fj
		add	esp, 8
		test	eax, eax
		jnz	short loc_711
		push	offset ??_C@_0BO@JCPMNLPI@unable?5to?5write?5pkcs7?5object?6?$AA@ ; "unable to write pkcs7 object\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_66E
; ---------------------------------------------------------------------------

loc_711:				; CODE XREF: _crl2pkcs7_main+614j
		xor	ebx, ebx
		jmp	$end$116
; ---------------------------------------------------------------------------

loc_718:				; CODE XREF: _crl2pkcs7_main+602j
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_66A
; ---------------------------------------------------------------------------

loc_730:				; CODE XREF: _crl2pkcs7_main+2AAj
					; _crl2pkcs7_main+2B2j
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		xor	esi, esi
		jmp	loc_66E
_crl2pkcs7_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 748h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _crl2pkcs7_main+92o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 750h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _crl2pkcs7_main:loc_1C2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 75Ch
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _crl2pkcs7_main:loc_213o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 760h
; COMDAT (pick any)
		public ??_C@_06FCMLDGBD@?9nocrl?$AA@
; `string'
??_C@_06FCMLDGBD@?9nocrl?$AA@ db '-nocrl',0 ; DATA XREF: _crl2pkcs7_main:loc_25Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 768h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _crl2pkcs7_main:loc_29Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 770h
; COMDAT (pick any)
		public ??_C@_09LJGMBFEA@?9certfile?$AA@
; `string'
??_C@_09LJGMBFEA@?9certfile?$AA@ db '-certfile',0 ; DATA XREF: _crl2pkcs7_main:loc_2E7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 77Ch
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _crl2pkcs7_main+31Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 790h
; COMDAT (pick any)
		public ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
; `string'
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ db '%s [options] <infile >outfile',0Ah,0
					; DATA XREF: _crl2pkcs7_main+335o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7B0h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _crl2pkcs7_main+345o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7C4h
; COMDAT (pick any)
		public ??_C@_0CL@MDOLAFAK@?5?9inform?5arg?5?5?5?5input?5format?5?9?5D@
; `string'
??_C@_0CL@MDOLAFAK@?5?9inform?5arg?5?5?5?5input?5format?5?9?5D@	db ' -inform arg    input format - DER or PEM',0Ah,0
					; DATA XREF: _crl2pkcs7_main+355o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7F0h
; COMDAT (pick any)
		public ??_C@_0CM@OEOKNGNO@?5?9outform?5arg?5?5?5output?5format?5?9?5@
; `string'
??_C@_0CM@OEOKNGNO@?5?9outform?5arg?5?5?5output?5format?5?9?5@ db ' -outform arg   output format - DER or PEM',0Ah,0
					; DATA XREF: _crl2pkcs7_main+365o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 81Ch
; COMDAT (pick any)
		public ??_C@_0BM@BNDOLEGE@?5?9in?5arg?5?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BM@BNDOLEGE@?5?9in?5arg?5?5?5?5?5?5?5?5input?5file?6?$AA@ db ' -in arg        input file',0Ah,0
					; DATA XREF: _crl2pkcs7_main+375o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 838h
; COMDAT (pick any)
		public ??_C@_0BN@NLKPGMME@?5?9out?5arg?5?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BN@NLKPGMME@?5?9out?5arg?5?5?5?5?5?5?5output?5file?6?$AA@ db ' -out arg       output file',0Ah,0
					; DATA XREF: _crl2pkcs7_main+385o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 858h
; COMDAT (pick any)
		public ??_C@_0DM@FKKBPEBO@?5?9certfile?5arg?5?5certificates?5fil@
; `string'
??_C@_0DM@FKKBPEBO@?5?9certfile?5arg?5?5certificates?5fil@ db ' -certfile arg  certificates file of chain to a trusted CA',0Ah,0
					; DATA XREF: _crl2pkcs7_main+395o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 894h
; COMDAT (pick any)
		public ??_C@_0CO@HDOHIEOB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CIcan?5be?5used?5mor@
; `string'
??_C@_0CO@HDOHIEOB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CIcan?5be?5used?5mor@ db '                (can be used more than once)',0Ah,0
					; DATA XREF: _crl2pkcs7_main+3A5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8C4h
; COMDAT (pick any)
		public ??_C@_0DN@OMNJHAB@?5?9nocrl?5?5?5?5?5?5?5?5?5no?5crl?5to?5load?0?5@
; `string'
??_C@_0DN@OMNJHAB@?5?9nocrl?5?5?5?5?5?5?5?5?5no?5crl?5to?5load?0?5@ db ' -nocrl         no crl to load, just certs from ',27h,'-certfile',27h,0Ah,0
					; DATA XREF: _crl2pkcs7_main+3B8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 904h
; COMDAT (pick any)
		public ??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@
; `string'
??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@ db 'bad input format specified for input crl',0Ah,0
					; DATA XREF: _crl2pkcs7_main:loc_51Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 930h
; COMDAT (pick any)
		public ??_C@_0BE@BBFHHDDE@unable?5to?5load?5CRL?6?$AA@
; `string'
??_C@_0BE@BBFHHDDE@unable?5to?5load?5CRL?6?$AA@	db 'unable to load CRL',0Ah,0
					; DATA XREF: _crl2pkcs7_main+41Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 944h
; COMDAT (pick any)
		public ??_C@_0BM@IDMGCMHJ@error?5loading?5certificates?6?$AA@
; `string'
??_C@_0BM@IDMGCMHJ@error?5loading?5certificates?6?$AA@ db 'error loading certificates',0Ah,0
					; DATA XREF: _crl2pkcs7_main:loc_64Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 960h
; COMDAT (pick any)
		public ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
; `string'
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ db 'bad output format specified for outfile',0Ah,0
					; DATA XREF: _crl2pkcs7_main:loc_718o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98Ch
; COMDAT (pick any)
		public ??_C@_0BO@JCPMNLPI@unable?5to?5write?5pkcs7?5object?6?$AA@
; `string'
??_C@_0BO@JCPMNLPI@unable?5to?5write?5pkcs7?5object?6?$AA@ db 'unable to write pkcs7 object',0Ah,0
					; DATA XREF: _crl2pkcs7_main+616o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9ACh
; COMDAT (pick any)
		public ??_C@_0BM@JKMADHFH@error?5opening?5the?5file?0?5?$CFs?6?$AA@
; `string'
??_C@_0BM@JKMADHFH@error?5opening?5the?5file?0?5?$CFs?6?$AA@ db	'error opening the file, %s',0Ah,0
					; DATA XREF: _add_certs_from_file+A1o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9C8h
; COMDAT (pick any)
		public ??_C@_0BM@DEMCMJDC@error?5reading?5the?5file?0?5?$CFs?6?$AA@
; `string'
??_C@_0BM@DEMCMJDC@error?5reading?5the?5file?0?5?$CFs?6?$AA@ db	'error reading the file, %s',0Ah,0
					; DATA XREF: _add_certs_from_file+4Bo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _crl2pkcs7_main+3Fp
					; _crl2pkcs7_main+2D0p	...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _crl2pkcs7_main+3EFp
					; _crl2pkcs7_main+5F4p
					; DATA XREF: ...
		extrn _sk_num:near	; CODE XREF: _add_certs_from_file+53p
					; _add_certs_from_file+8Cp ...
		extrn _sk_value:near	; CODE XREF: _crl2pkcs7_main+505p
		extrn _sk_new_null:near	; CODE XREF: _crl2pkcs7_main+24Fp
					; _crl2pkcs7_main+4B2p	...
		extrn _sk_free:near	; CODE XREF: _add_certs_from_file+C6p
					; _crl2pkcs7_main+307p	...
		extrn _sk_push:near	; CODE XREF: _add_certs_from_file+76p
					; _crl2pkcs7_main+269p	...
		extrn _sk_shift:near	; CODE XREF: _add_certs_from_file+61p
		extrn _BIO_s_file:near	; CODE XREF: _add_certs_from_file+Bp
					; _crl2pkcs7_main+26p ...
		extrn _BIO_new:near	; CODE XREF: _add_certs_from_file+11p
					; _crl2pkcs7_main+2Cp ...
		extrn _BIO_free:near	; CODE XREF: _add_certs_from_file+B9p
					; _crl2pkcs7_main+5A0p
		extrn _BIO_ctrl:near	; CODE XREF: _add_certs_from_file+29p
					; _crl2pkcs7_main+50p ...
		extrn _BIO_free_all:near ; CODE	XREF: _crl2pkcs7_main+5ADp
		extrn _BIO_printf:near	; CODE XREF: _add_certs_from_file+ACp
					; _crl2pkcs7_main+329p	...
		extrn _ASN1_INTEGER_set:near ; CODE XREF: _crl2pkcs7_main+4A2p
		extrn _OBJ_nid2obj:near	; CODE XREF: _crl2pkcs7_main+482p
					; _crl2pkcs7_main+493p
		extrn _i2d_PKCS7_bio:near ; CODE XREF: _crl2pkcs7_main+56Ap
		extrn _PKCS7_SIGNED_new:near ; CODE XREF: _crl2pkcs7_main+471p
		extrn _PKCS7_new:near	; CODE XREF: _crl2pkcs7_main:loc_536p
		extrn _PKCS7_free:near	; CODE XREF: _crl2pkcs7_main+5BAp
		extrn _d2i_X509_CRL_bio:near ; CODE XREF: _crl2pkcs7_main+2F3p
		extrn _X509_CRL_free:near ; CODE XREF: _crl2pkcs7_main+5CBp
		extrn _X509_INFO_free:near ; CODE XREF:	_add_certs_from_file+86p
		extrn _ERR_print_errors:near ; CODE XREF: _crl2pkcs7_main+433p
					; _crl2pkcs7_main+58Ap	...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _crl2pkcs7_main:loc_35Ep
		extrn _str2fmt:near	; CODE XREF: _crl2pkcs7_main+D9p
					; _crl2pkcs7_main+12Ap
		extrn _PEM_X509_INFO_read_bio:near ; CODE XREF:	_add_certs_from_file+39p
		extrn _PEM_read_bio_X509_CRL:near ; CODE XREF: _crl2pkcs7_main+40Bp
		extrn _PEM_write_bio_PKCS7:near	; CODE XREF: _crl2pkcs7_main+60Ap
		extrn __chkstk:near	; CODE XREF: _crl2pkcs7_main+5p
		extrn _bio_err:near	; DATA XREF: _add_certs_from_file:loc_A6r
					; _crl2pkcs7_main+1Er ...


		end

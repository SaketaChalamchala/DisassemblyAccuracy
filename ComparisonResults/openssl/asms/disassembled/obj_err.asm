;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	5A1B772FD6BA1DFA0E992F30603BF84A
; Input	CRC32 :	D1394473

; File Name   :	C:\compspace\Diff\openssl\obj\obj_err.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
_OBJ_str_functs	dd 8069000h		; DATA XREF: _ERR_load_OBJ_stringsr
					; _ERR_load_OBJ_strings+12o
		dd offset ??_C@_0P@PNBAKKGP@OBJ_add_object?$AA@	; "OBJ_add_object"
		dd 8064000h
		dd offset ??_C@_0L@OJLDNBND@OBJ_create?$AA@ ; "OBJ_create"
		dd 8065000h
		dd offset ??_C@_07GEDFFGIO@OBJ_dup?$AA@	; "OBJ_dup"
		dd 806A000h
		dd offset ??_C@_0BD@EBGMNDBO@OBJ_NAME_new_index?$AA@ ; "OBJ_NAME_new_index"
		dd 8066000h
		dd offset ??_C@_0L@PEGMOALE@OBJ_nid2ln?$AA@ ; "OBJ_nid2ln"
		dd 8067000h
		dd offset ??_C@_0M@EIEFMONC@OBJ_nid2obj?$AA@ ; "OBJ_nid2obj"
		dd 8068000h
		dd offset ??_C@_0L@ODBGAEPJ@OBJ_nid2sn?$AA@ ; "OBJ_nid2sn"
		align 10h
_OBJ_str_reasons dd 8000064h		; DATA XREF: _ERR_load_OBJ_strings+1Do
		dd offset ??_C@_0P@BOLAOBGL@malloc?5failure?$AA@ ; "malloc failure"
		dd 8000065h
		dd offset ??_C@_0M@MJJCBEFL@unknown?5nid?$AA@ ;	"unknown nid"
		dd 2 dup(0)
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
; COMDAT (pick any)
		public ??_C@_0P@PNBAKKGP@OBJ_add_object?$AA@
; `string'
??_C@_0P@PNBAKKGP@OBJ_add_object?$AA@ db 'OBJ_add_object',0 ; DATA XREF: .data:00000004o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
; COMDAT (pick any)
		public ??_C@_0L@OJLDNBND@OBJ_create?$AA@
; `string'
??_C@_0L@OJLDNBND@OBJ_create?$AA@ db 'OBJ_create',0 ; DATA XREF: .data:0000000Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
; COMDAT (pick any)
		public ??_C@_07GEDFFGIO@OBJ_dup?$AA@
; `string'
??_C@_07GEDFFGIO@OBJ_dup?$AA@ db 'OBJ_dup',0 ; DATA XREF: .data:00000014o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
; COMDAT (pick any)
		public ??_C@_0BD@EBGMNDBO@OBJ_NAME_new_index?$AA@
; `string'
??_C@_0BD@EBGMNDBO@OBJ_NAME_new_index?$AA@ db 'OBJ_NAME_new_index',0
					; DATA XREF: .data:0000001Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
; COMDAT (pick any)
		public ??_C@_0L@PEGMOALE@OBJ_nid2ln?$AA@
; `string'
??_C@_0L@PEGMOALE@OBJ_nid2ln?$AA@ db 'OBJ_nid2ln',0 ; DATA XREF: .data:00000024o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
; COMDAT (pick any)
		public ??_C@_0M@EIEFMONC@OBJ_nid2obj?$AA@
; `string'
??_C@_0M@EIEFMONC@OBJ_nid2obj?$AA@ db 'OBJ_nid2obj',0 ; DATA XREF: .data:0000002Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
; COMDAT (pick any)
		public ??_C@_0L@ODBGAEPJ@OBJ_nid2sn?$AA@
; `string'
??_C@_0L@ODBGAEPJ@OBJ_nid2sn?$AA@ db 'OBJ_nid2sn',0 ; DATA XREF: .data:00000034o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
; COMDAT (pick any)
		public ??_C@_0P@BOLAOBGL@malloc?5failure?$AA@
; `string'
??_C@_0P@BOLAOBGL@malloc?5failure?$AA@ db 'malloc failure',0 ; DATA XREF: .data:00000044o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
; COMDAT (pick any)
		public ??_C@_0M@MJJCBEFL@unknown?5nid?$AA@
; `string'
??_C@_0M@MJJCBEFL@unknown?5nid?$AA@ db 'unknown nid',0 ; DATA XREF: .data:0000004Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ERR_load_OBJ_strings
_ERR_load_OBJ_strings proc near
		push	_OBJ_str_functs
		call	_ERR_func_error_string
		add	esp, 4
		test	eax, eax
		jnz	short locret_FC
		push	offset _OBJ_str_functs
		push	eax
		call	_ERR_load_strings
		push	offset _OBJ_str_reasons
		push	0
		call	_ERR_load_strings
		add	esp, 10h

locret_FC:				; CODE XREF: _ERR_load_OBJ_strings+10j
		retn
_ERR_load_OBJ_strings endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_func_error_string:near ; CODE XREF: _ERR_load_OBJ_strings+6p
		extrn _ERR_load_strings:near ; CODE XREF: _ERR_load_OBJ_strings+18p
					; _ERR_load_OBJ_strings+24p


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	361F685BC4D25451546FE336B572265C
; Input	CRC32 :	1EBF1512

; File Name   :	C:\compspace\Diff\openssl\obj\pcy_data.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _policy_data_free
_policy_data_free proc near

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		push	dword ptr [esi+4]
		call	_ASN1_OBJECT_free
		add	esp, 4
		test	byte ptr [esi],	4
		jnz	short loc_25
		push	offset _POLICYQUALINFO_free
		push	dword ptr [esi+8]
		call	_sk_pop_free
		add	esp, 8

loc_25:					; CODE XREF: _policy_data_free+13j
		push	offset _ASN1_OBJECT_free
		push	dword ptr [esi+0Ch]
		call	_sk_pop_free
		push	esi
		call	_CRYPTO_free
		add	esp, 0Ch
		pop	esi
		retn
_policy_data_free endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 40h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _policy_data_new
_policy_data_new proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_4]
		push	ebx
		mov	ebx, [esp+4+arg_0]
		push	edi
		test	ebx, ebx
		jnz	short loc_55
		test	eax, eax
		jnz	short loc_59
		pop	edi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_55:					; CODE XREF: _policy_data_new+Cj
		test	eax, eax
		jz	short loc_6B

loc_59:					; CODE XREF: _policy_data_new+10j
		push	eax
		call	_OBJ_dup
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jnz	short loc_6D
		pop	edi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6B:					; CODE XREF: _policy_data_new+17j
		xor	edi, edi

loc_6D:					; CODE XREF: _policy_data_new+26j
		push	esi
		push	63h ; 'c'
		push	offset ??_C@_0BL@EFACHDEK@?4?2crypto?2x509v3?2pcy_data?4c?$AA@ ; ".\\crypto\\x509v3\\pcy_data.c"
		push	10h
		call	_CRYPTO_malloc
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jz	short loc_A7
		call	_sk_new_null
		mov	[esi+0Ch], eax
		test	eax, eax
		jnz	short loc_AD
		push	esi
		call	_CRYPTO_free
		add	esp, 4
		test	edi, edi
		jz	short loc_A7
		push	edi
		call	_ASN1_OBJECT_free
		add	esp, 4

loc_A7:					; CODE XREF: _policy_data_new+43j
					; _policy_data_new+5Cj
		pop	esi
		pop	edi
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_AD:					; CODE XREF: _policy_data_new+4Fj
		mov	eax, [esp+0Ch+arg_8]
		neg	eax
		sbb	eax, eax
		and	eax, 10h
		mov	[esi], eax
		test	edi, edi
		jz	short loc_C3
		mov	[esi+4], edi
		jmp	short loc_CE
; ---------------------------------------------------------------------------

loc_C3:					; CODE XREF: _policy_data_new+7Cj
		mov	eax, [ebx]
		mov	[esi+4], eax
		mov	dword ptr [ebx], 0

loc_CE:					; CODE XREF: _policy_data_new+81j
		test	ebx, ebx
		jz	short loc_E5
		mov	eax, [ebx+4]
		mov	[esi+8], eax
		mov	eax, esi
		pop	esi
		pop	edi
		mov	dword ptr [ebx+4], 0
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_E5:					; CODE XREF: _policy_data_new+90j
		mov	dword ptr [esi+8], 0
		mov	eax, esi
		pop	esi
		pop	edi
		pop	ebx
		retn
_policy_data_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
; COMDAT (pick any)
		public ??_C@_0BL@EFACHDEK@?4?2crypto?2x509v3?2pcy_data?4c?$AA@
; `string'
??_C@_0BL@EFACHDEK@?4?2crypto?2x509v3?2pcy_data?4c?$AA@	db '.\crypto\x509v3\pcy_data.c',0
					; DATA XREF: _policy_data_new+30o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_new_null:near	; CODE XREF: _policy_data_new+45p
		extrn _sk_pop_free:near	; CODE XREF: _policy_data_free+1Dp
					; _policy_data_free+2Dp
		extrn _CRYPTO_malloc:near ; CODE XREF: _policy_data_new+37p
		extrn _CRYPTO_free:near	; CODE XREF: _policy_data_free+33p
					; _policy_data_new+52p
		extrn _ASN1_OBJECT_free:near ; CODE XREF: _policy_data_free+8p
					; _policy_data_new+5Fp
					; DATA XREF: ...
		extrn _OBJ_dup:near	; CODE XREF: _policy_data_new+1Ap
		extrn _POLICYQUALINFO_free:near	; DATA XREF: _policy_data_free+15o


		end

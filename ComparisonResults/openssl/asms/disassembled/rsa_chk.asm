;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F37C07B4FB95AEA8F031562856D7B64F
; Input	CRC32 :	1077A711

; File Name   :	C:\compspace\Diff\openssl\obj\rsa_chk.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _RSA_check_key
_RSA_check_key	proc near

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 0Ch
		call	__chkstk
		push	esi
		push	edi
		mov	edi, [esp+14h+arg_0]
		mov	esi, 1
		cmp	dword ptr [edi+1Ch], 0
		jz	loc_3FC
		cmp	dword ptr [edi+20h], 0
		jz	loc_3FC
		cmp	dword ptr [edi+10h], 0
		jz	loc_3FC
		cmp	dword ptr [edi+14h], 0
		jz	loc_3FC
		cmp	dword ptr [edi+18h], 0
		jz	loc_3FC
		push	ebx
		push	ebp
		call	_BN_new
		mov	ebx, eax
		call	_BN_new
		mov	[esp+1Ch+arg_0], eax
		call	_BN_new
		mov	[esp+1Ch+var_C], eax
		call	_BN_new
		mov	[esp+1Ch+var_8], eax
		call	_BN_new
		mov	[esp+1Ch+var_4], eax
		call	_BN_CTX_new
		mov	ebp, eax
		test	ebx, ebx
		jz	loc_37C
		cmp	[esp+1Ch+arg_0], 0
		jz	loc_37C
		cmp	[esp+1Ch+var_C], 0
		jz	loc_37C
		cmp	[esp+1Ch+var_8], 0
		jz	loc_37C
		cmp	[esp+1Ch+var_4], 0
		jz	loc_37C
		test	ebp, ebp
		jz	loc_37C
		push	0
		push	0
		push	0
		push	dword ptr [edi+1Ch]
		call	_BN_is_prime_ex
		add	esp, 10h
		cmp	eax, esi
		jz	short loc_EE
		mov	esi, eax
		test	eax, eax
		jnz	$err$40
		push	56h ; 'V'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		push	80h ; 'Ä'
		push	7Bh ; '{'
		push	4
		call	_ERR_put_error
		add	esp, 14h

loc_EE:					; CODE XREF: _RSA_check_key+CAj
		push	0
		push	0
		push	0
		push	dword ptr [edi+20h]
		call	_BN_is_prime_ex
		add	esp, 10h
		cmp	eax, 1
		jz	short loc_126
		mov	esi, eax
		test	eax, eax
		jnz	$err$40
		push	5Fh ; '_'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		push	81h ; 'Å'
		push	7Bh ; '{'
		push	4
		call	_ERR_put_error
		add	esp, 14h

loc_126:				; CODE XREF: _RSA_check_key+102j
		push	ebp
		push	dword ptr [edi+20h]
		push	dword ptr [edi+1Ch]
		push	ebx
		call	_BN_mul
		add	esp, 10h
		test	eax, eax
		jnz	short loc_142
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_142:				; CODE XREF: _RSA_check_key+138j
		push	dword ptr [edi+10h]
		push	ebx
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jz	short loc_169
		push	6Bh ; 'k'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		push	7Fh ; ''
		push	7Bh ; '{'
		push	4
		xor	esi, esi
		call	_ERR_put_error
		add	esp, 14h

loc_169:				; CODE XREF: _RSA_check_key+150j
		call	_BN_value_one
		push	eax
		push	dword ptr [edi+1Ch]
		push	ebx
		call	_BN_sub
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_187
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_187:				; CODE XREF: _RSA_check_key+17Dj
		call	_BN_value_one
		push	eax
		push	dword ptr [edi+20h]
		push	[esp+24h+arg_0]
		call	_BN_sub
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_1A8
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_1A8:				; CODE XREF: _RSA_check_key+19Ej
		push	ebp
		push	[esp+20h+arg_0]
		push	ebx
		push	[esp+28h+var_8]
		call	_BN_mul
		add	esp, 10h
		test	eax, eax
		jnz	short loc_1C6
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_1C6:				; CODE XREF: _RSA_check_key+1BCj
		push	ebp
		push	[esp+20h+arg_0]
		push	ebx
		push	[esp+28h+var_4]
		call	_BN_gcd
		add	esp, 10h
		test	eax, eax
		jnz	short loc_1E4
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_1E4:				; CODE XREF: _RSA_check_key+1DAj
		push	ebp
		push	[esp+20h+var_4]
		push	[esp+24h+var_8]
		push	0
		push	[esp+2Ch+var_C]
		call	_BN_div
		add	esp, 14h
		test	eax, eax
		jnz	short loc_207
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_207:				; CODE XREF: _RSA_check_key+1FDj
		push	ebp
		push	[esp+20h+var_C]
		push	dword ptr [edi+14h]
		push	dword ptr [edi+18h]
		push	ebx
		call	_BN_mod_mul
		add	esp, 14h
		test	eax, eax
		jnz	short loc_227
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_227:				; CODE XREF: _RSA_check_key+21Dj
		cmp	dword ptr [ebx+4], 1
		jnz	short loc_23A
		mov	eax, [ebx]
		cmp	dword ptr [eax], 1
		jnz	short loc_23A
		cmp	dword ptr [ebx+0Ch], 0
		jz	short loc_254

loc_23A:				; CODE XREF: _RSA_check_key+22Bj
					; _RSA_check_key+232j
		push	94h ; 'î'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		push	7Bh ; '{'
		push	7Bh ; '{'
		push	4
		xor	esi, esi
		call	_ERR_put_error
		add	esp, 14h

loc_254:				; CODE XREF: _RSA_check_key+238j
		cmp	dword ptr [edi+24h], 0
		jz	$err$40
		cmp	dword ptr [edi+28h], 0
		jz	$err$40
		cmp	dword ptr [edi+2Ch], 0
		jz	$err$40
		call	_BN_value_one
		push	eax
		push	dword ptr [edi+1Ch]
		push	ebx
		call	_BN_sub
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_290
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_290:				; CODE XREF: _RSA_check_key+286j
		push	ebp
		push	ebx
		push	dword ptr [edi+18h]
		push	[esp+28h+arg_0]
		push	0
		call	_BN_div
		add	esp, 14h
		test	eax, eax
		jnz	short loc_2AF
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_2AF:				; CODE XREF: _RSA_check_key+2A5j
		push	dword ptr [edi+24h]
		push	[esp+20h+arg_0]
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jz	short loc_2DC
		push	0A7h ; 'ß'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		push	7Ch ; '|'
		push	7Bh ; '{'
		push	4
		xor	esi, esi
		call	_ERR_put_error
		add	esp, 14h

loc_2DC:				; CODE XREF: _RSA_check_key+2C0j
		call	_BN_value_one
		push	eax
		push	dword ptr [edi+20h]
		push	ebx
		call	_BN_sub
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_2FA
		or	esi, 0FFFFFFFFh
		jmp	$err$40
; ---------------------------------------------------------------------------

loc_2FA:				; CODE XREF: _RSA_check_key+2F0j
		push	ebp
		push	ebx
		push	dword ptr [edi+18h]
		push	[esp+28h+arg_0]
		push	0
		call	_BN_div
		add	esp, 14h
		test	eax, eax
		jnz	short loc_316
		or	esi, 0FFFFFFFFh
		jmp	short $err$40
; ---------------------------------------------------------------------------

loc_316:				; CODE XREF: _RSA_check_key+30Fj
		push	dword ptr [edi+28h]
		push	[esp+20h+arg_0]
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jz	short loc_343
		push	0B9h ; 'π'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		push	7Dh ; '}'
		push	7Bh ; '{'
		push	4
		xor	esi, esi
		call	_ERR_put_error
		add	esp, 14h

loc_343:				; CODE XREF: _RSA_check_key+327j
		push	ebp
		push	dword ptr [edi+1Ch]
		push	dword ptr [edi+20h]
		push	ebx
		call	_BN_mod_inverse
		add	esp, 10h
		test	eax, eax
		jnz	short loc_35C
		or	esi, 0FFFFFFFFh
		jmp	short $err$40
; ---------------------------------------------------------------------------

loc_35C:				; CODE XREF: _RSA_check_key+355j
		push	dword ptr [edi+2Ch]
		push	ebx
		call	_BN_cmp
		add	esp, 8
		test	eax, eax
		jz	short $err$40
		push	0C4h ; 'ƒ'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		xor	esi, esi
		push	7Eh ; '~'
		jmp	short loc_388
; ---------------------------------------------------------------------------

loc_37C:				; CODE XREF: _RSA_check_key+7Dj
					; _RSA_check_key+88j ...
		push	4Ch ; 'L'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		or	esi, 0FFFFFFFFh
		push	41h ; 'A'

loc_388:				; CODE XREF: _RSA_check_key+37Aj
		push	7Bh ; '{'
		push	4
		call	_ERR_put_error
		add	esp, 14h

$err$40:				; CODE XREF: _RSA_check_key+D0j
					; _RSA_check_key+108j ...
		test	ebx, ebx
		jz	short loc_3A1
		push	ebx
		call	_BN_free
		add	esp, 4

loc_3A1:				; CODE XREF: _RSA_check_key+396j
		mov	eax, [esp+1Ch+arg_0]
		test	eax, eax
		jz	short loc_3B2
		push	eax
		call	_BN_free
		add	esp, 4

loc_3B2:				; CODE XREF: _RSA_check_key+3A7j
		mov	eax, [esp+1Ch+var_C]
		test	eax, eax
		jz	short loc_3C3
		push	eax
		call	_BN_free
		add	esp, 4

loc_3C3:				; CODE XREF: _RSA_check_key+3B8j
		mov	eax, [esp+1Ch+var_8]
		test	eax, eax
		jz	short loc_3D4
		push	eax
		call	_BN_free
		add	esp, 4

loc_3D4:				; CODE XREF: _RSA_check_key+3C9j
		mov	eax, [esp+1Ch+var_4]
		test	eax, eax
		jz	short loc_3E5
		push	eax
		call	_BN_free
		add	esp, 4

loc_3E5:				; CODE XREF: _RSA_check_key+3DAj
		test	ebp, ebp
		jz	short loc_3F2
		push	ebp
		call	_BN_CTX_free
		add	esp, 4

loc_3F2:				; CODE XREF: _RSA_check_key+3E7j
		pop	ebp
		pop	ebx
		pop	edi
		mov	eax, esi
		pop	esi
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_3FC:				; CODE XREF: _RSA_check_key+19j
					; _RSA_check_key+23j ...
		push	3Fh ; '?'
		push	offset ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ ; ".\\crypto\\rsa\\rsa_chk.c"
		push	93h ; 'ì'
		push	7Bh ; '{'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		add	esp, 0Ch
		retn
_RSA_check_key	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 41Ch
; COMDAT (pick any)
		public ??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@
; `string'
??_C@_0BH@HFBDOCOP@?4?2crypto?2rsa?2rsa_chk?4c?$AA@ db '.\crypto\rsa\rsa_chk.c',0
					; DATA XREF: _RSA_check_key+D8o
					; _RSA_check_key+110o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _BN_value_one:near ; CODE	XREF: _RSA_check_key:loc_169p
					; _RSA_check_key:loc_187p ...
		extrn _BN_CTX_new:near	; CODE XREF: _RSA_check_key+74p
		extrn _BN_CTX_free:near	; CODE XREF: _RSA_check_key+3EAp
		extrn _BN_new:near	; CODE XREF: _RSA_check_key+49p
					; _RSA_check_key+50p ...
		extrn _BN_sub:near	; CODE XREF: _RSA_check_key+173p
					; _RSA_check_key+194p ...
		extrn _BN_mul:near	; CODE XREF: _RSA_check_key+12Ep
					; _RSA_check_key+1B2p
		extrn _BN_div:near	; CODE XREF: _RSA_check_key+1F3p
					; _RSA_check_key+29Bp ...
		extrn _BN_mod_mul:near	; CODE XREF: _RSA_check_key+213p
		extrn _BN_cmp:near	; CODE XREF: _RSA_check_key+146p
					; _RSA_check_key+2B6p ...
		extrn _BN_free:near	; CODE XREF: _RSA_check_key+399p
					; _RSA_check_key+3AAp ...
		extrn _BN_gcd:near	; CODE XREF: _RSA_check_key+1D0p
		extrn _BN_mod_inverse:near ; CODE XREF:	_RSA_check_key+34Bp
		extrn _BN_is_prime_ex:near ; CODE XREF:	_RSA_check_key+C0p
					; _RSA_check_key+F7p
		extrn _ERR_put_error:near ; CODE XREF: _RSA_check_key+E6p
					; _RSA_check_key+11Ep ...
		extrn __chkstk:near	; CODE XREF: _RSA_check_key+5p


		end

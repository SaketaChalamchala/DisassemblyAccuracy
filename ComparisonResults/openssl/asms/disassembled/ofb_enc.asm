;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	A61BBAE5B511493BB12CC026AA518AE3
; Input	CRC32 :	D9ADACA1

; File Name   :	C:\compspace\Diff\openssl\obj\ofb_enc.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DES_ofb_encrypt
_DES_ofb_encrypt proc near

var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, 34h ; '4'
		call	__chkstk
		push	ebp
		mov	ebp, [esp+38h+arg_8]
		push	edi
		lea	eax, [ebp+7]
		cdq
		and	edx, 7
		lea	edi, [edx+eax]
		sar	edi, 3
		mov	[esp+3Ch+var_2C], edi
		cmp	ebp, 40h ; '@'
		jg	loc_2C3
		cmp	ebp, 20h ; ' '
		jle	short loc_57
		mov	[esp+3Ch+var_28], 0FFFFFFFFh
		cmp	ebp, 40h ; '@'
		jl	short loc_46
		mov	[esp+3Ch+var_24], 0FFFFFFFFh
		jmp	short loc_79
; ---------------------------------------------------------------------------

loc_46:					; CODE XREF: _DES_ofb_encrypt+3Aj
		lea	ecx, [ebp-20h]
		mov	eax, 1
		shl	eax, cl
		dec	eax
		mov	[esp+3Ch+var_24], eax
		jmp	short loc_79
; ---------------------------------------------------------------------------

loc_57:					; CODE XREF: _DES_ofb_encrypt+2Dj
		jnz	short loc_63
		mov	[esp+3Ch+var_28], 0FFFFFFFFh
		jmp	short loc_71
; ---------------------------------------------------------------------------

loc_63:					; CODE XREF: _DES_ofb_encrypt:loc_57j
		mov	eax, 1
		mov	ecx, ebp
		shl	eax, cl
		dec	eax
		mov	[esp+3Ch+var_28], eax

loc_71:					; CODE XREF: _DES_ofb_encrypt+61j
		mov	[esp+3Ch+var_24], 0

loc_79:					; CODE XREF: _DES_ofb_encrypt+44j
					; _DES_ofb_encrypt+55j
		mov	eax, [esp+3Ch+arg_14]
		push	ebx
		push	esi
		movzx	ecx, byte ptr [eax]
		lea	esi, [eax+1]
		mov	edx, esi
		mov	[esp+44h+var_C], esi
		movzx	eax, byte ptr [edx]
		movzx	ebx, byte ptr [edx+3]
		shl	eax, 8
		or	ecx, eax
		movzx	eax, byte ptr [edx+1]
		shl	eax, 10h
		or	ecx, eax
		movzx	eax, byte ptr [edx+2]
		shl	eax, 18h
		or	ecx, eax
		movzx	eax, byte ptr [edx+4]
		mov	[esp+44h+var_30], ecx
		movzx	ecx, byte ptr [edx+6]
		shl	eax, 8
		or	ebx, eax
		shl	ecx, 8
		movzx	eax, byte ptr [edx+5]
		mov	edx, [esp+44h+var_30]
		or	ecx, eax
		shl	ecx, 10h
		or	ebx, ecx
		mov	[esp+44h+var_8], edx
		mov	ecx, [esp+44h+arg_C]
		mov	[esp+44h+var_4], ebx
		test	ecx, ecx
		jle	loc_28D
		mov	esi, [esp+44h+arg_0]
		mov	eax, 40h ; '@'
		sub	eax, ebp
		mov	[esp+44h+var_1C], eax
		mov	eax, 20h ; ' '
		sub	eax, ebp
		mov	[esp+44h+var_14], eax
		lea	eax, [edi-1]
		mov	edi, [esp+44h+arg_4]
		mov	[esp+44h+var_10], eax

loc_105:				; CODE XREF: _DES_ofb_encrypt+283j
		push	1
		push	[esp+48h+arg_10]
		lea	eax, [esp+4Ch+var_8]
		mov	[esp+4Ch+var_8], edx
		dec	ecx
		mov	[esp+4Ch+var_4], ebx
		push	eax
		mov	[esp+50h+arg_C], ecx
		call	_DES_encrypt1
		mov	eax, [esp+50h+var_2C]
		add	esp, 0Ch
		add	esi, eax
		xor	edx, edx
		xor	ecx, ecx
		lea	ebp, [eax-1]
		cmp	ebp, 7
		ja	short loc_18B
		lea	ebp, [eax-1]
		jmp	ds:$LN46[ebp*4]
; ---------------------------------------------------------------------------

$LN15:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; DATA XREF: .text$mn:000002E8o
		movzx	edx, byte ptr [esi-1]
		dec	esi
		shl	edx, 18h

$LN16:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; DATA XREF: .text$mn:000002E4o
		movzx	eax, byte ptr [esi-1]
		dec	esi
		shl	eax, 10h
		or	edx, eax

$LN17:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; DATA XREF: .text$mn:000002E0o
		movzx	eax, byte ptr [esi-1]
		dec	esi
		shl	eax, 8
		or	edx, eax

$LN18:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; DATA XREF: .text$mn:000002DCo
		movzx	eax, byte ptr [esi-1]
		dec	esi
		or	edx, eax

$LN19:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; DATA XREF: .text$mn:000002D8o
		movzx	ecx, byte ptr [esi-1]
		dec	esi
		shl	ecx, 18h

$LN20:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; DATA XREF: .text$mn:000002D4o
		movzx	eax, byte ptr [esi-1]
		dec	esi
		shl	eax, 10h
		or	ecx, eax

$LN21:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; DATA XREF: .text$mn:000002D0o
		movzx	eax, byte ptr [esi-1]
		dec	esi
		shl	eax, 8
		or	ecx, eax

$LN22:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; DATA XREF: .text$mn:$LN46o
		movzx	eax, byte ptr [esi-1]
		dec	esi
		or	ecx, eax
		mov	eax, [esp+44h+var_2C]

loc_18B:				; CODE XREF: _DES_ofb_encrypt+135j
		add	edi, [esp+44h+var_2C]
		add	esi, eax
		mov	eax, [esp+44h+var_8]
		mov	[esp+44h+var_34], eax
		xor	[esp+44h+var_34], ecx
		mov	ecx, [esp+44h+var_28]
		and	[esp+44h+var_34], ecx
		mov	ecx, [esp+44h+var_4]
		mov	[esp+44h+var_18], ecx
		xor	ecx, edx
		and	ecx, [esp+44h+var_24]
		cmp	[esp+44h+var_10], 7
		mov	edx, [esp+44h+var_2C]
		mov	[esp+44h+var_20], eax
		ja	short loc_210
		lea	ebp, [edx-1]
		jmp	ds:$LN47[ebp*4]
; ---------------------------------------------------------------------------

$LN23:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; _DES_ofb_encrypt+1C5j
					; DATA XREF: ...
		dec	edi
		mov	eax, ecx
		shr	eax, 18h
		mov	[edi], al

$LN24:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; _DES_ofb_encrypt+1C5j
					; DATA XREF: ...
		dec	edi
		mov	eax, ecx
		shr	eax, 10h
		mov	[edi], al

$LN25:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; _DES_ofb_encrypt+1C5j
					; DATA XREF: ...
		dec	edi
		mov	eax, ecx
		shr	eax, 8
		mov	[edi], al

$LN26:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; _DES_ofb_encrypt+1C5j
					; DATA XREF: ...
		dec	edi
		mov	[edi], cl

$LN27:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; _DES_ofb_encrypt+1C5j
					; DATA XREF: ...
		mov	eax, [esp+44h+var_34]
		dec	edi
		shr	eax, 18h
		mov	[edi], al

$LN28:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; _DES_ofb_encrypt+1C5j
					; DATA XREF: ...
		mov	eax, [esp+44h+var_34]
		dec	edi
		shr	eax, 10h
		mov	[edi], al

$LN29:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; _DES_ofb_encrypt+1C5j
					; DATA XREF: ...
		mov	eax, [esp+44h+var_34]
		dec	edi
		shr	eax, 8
		mov	[edi], al
		mov	eax, [esp+44h+var_20]

$LN30:					; CODE XREF: _DES_ofb_encrypt+13Aj
					; _DES_ofb_encrypt+1C5j
					; DATA XREF: ...
		mov	ecx, [esp+44h+var_34]
		dec	edi
		mov	[edi], cl

loc_210:				; CODE XREF: _DES_ofb_encrypt+1C0j
		mov	ebp, [esp+44h+arg_8]
		add	edi, edx
		cmp	ebp, 20h ; ' '
		jnz	short loc_221
		mov	edx, ebx
		mov	ebx, eax
		jmp	short loc_279
; ---------------------------------------------------------------------------

loc_221:				; CODE XREF: _DES_ofb_encrypt+219j
		cmp	ebp, 40h ; '@'
		jnz	short loc_22E
		mov	ebx, [esp+44h+var_18]
		mov	edx, eax
		jmp	short loc_279
; ---------------------------------------------------------------------------

loc_22E:				; CODE XREF: _DES_ofb_encrypt+224j
		cmp	ebp, 20h ; ' '
		jle	short loc_257
		mov	edx, ebx
		lea	ecx, [ebp-20h]
		mov	ebx, [esp+44h+var_20]
		shr	edx, cl
		mov	ecx, [esp+44h+var_1C]
		shl	eax, cl
		lea	ecx, [ebp-20h]
		or	edx, eax
		shr	ebx, cl
		mov	eax, [esp+44h+var_18]
		mov	ecx, [esp+44h+var_1C]
		shl	eax, cl
		jmp	short loc_277
; ---------------------------------------------------------------------------

loc_257:				; CODE XREF: _DES_ofb_encrypt+231j
		mov	ecx, [esp+44h+var_14]
		mov	eax, ebx
		mov	edx, [esp+44h+var_30]
		shl	eax, cl
		mov	ecx, ebp
		shr	edx, cl
		mov	ecx, [esp+44h+var_14]
		or	edx, eax
		mov	eax, [esp+44h+var_20]
		shl	eax, cl
		mov	ecx, ebp
		shr	ebx, cl

loc_277:				; CODE XREF: _DES_ofb_encrypt+255j
		or	ebx, eax

loc_279:				; CODE XREF: _DES_ofb_encrypt+21Fj
					; _DES_ofb_encrypt+22Cj
		mov	ecx, [esp+44h+arg_C]
		mov	[esp+44h+var_30], edx
		test	ecx, ecx
		jg	loc_105
		mov	esi, [esp+44h+var_C]

loc_28D:				; CODE XREF: _DES_ofb_encrypt+DAj
		mov	eax, [esp+44h+arg_14]
		mov	[eax], dl
		mov	eax, edx
		shr	eax, 8
		mov	[esi], al
		mov	eax, edx
		shr	eax, 10h
		mov	[esi+1], al
		mov	eax, ebx
		shr	edx, 18h
		mov	[esi+2], dl
		mov	[esi+3], bl
		shr	eax, 8
		mov	[esi+4], al
		mov	eax, ebx
		shr	eax, 10h
		shr	ebx, 18h
		mov	[esi+5], al
		mov	[esi+6], bl
		pop	esi
		pop	ebx

loc_2C3:				; CODE XREF: _DES_ofb_encrypt+24j
		pop	edi
		pop	ebp
		add	esp, 34h
		retn
_DES_ofb_encrypt endp

; ---------------------------------------------------------------------------
		align 4
$LN46		dd offset $LN22		; DATA XREF: _DES_ofb_encrypt+13Ar
		dd offset $LN21
		dd offset $LN20
		dd offset $LN19
		dd offset $LN18
		dd offset $LN17
		dd offset $LN16
		dd offset $LN15
$LN47		dd offset $LN30		; DATA XREF: _DES_ofb_encrypt+1C5r
		dd offset $LN29
		dd offset $LN28
		dd offset $LN27
		dd offset $LN26
		dd offset $LN25
		dd offset $LN24
		dd offset $LN23
_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _DES_encrypt1:near ; CODE	XREF: _DES_ofb_encrypt+11Dp
		extrn __chkstk:near	; CODE XREF: _DES_ofb_encrypt+5p


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	535DF5D1439C6EE93832896A867363CA
; Input	CRC32 :	CDFC4627

; File Name   :	C:\compspace\Diff\openssl\obj\cms_dd.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _cms_DigestedData_create
_cms_DigestedData_create proc near

arg_0		= dword	ptr  4

		push	esi
		call	_CMS_ContentInfo_new
		mov	esi, eax
		test	esi, esi
		jnz	short loc_E
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_E:					; CODE XREF: _cms_DigestedData_create+Aj
		push	edi
		call	_CMS_DigestedData_it
		push	eax
		call	_ASN1_item_new
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jnz	short loc_31

$err$8:
		push	esi
		call	_CMS_ContentInfo_free
		add	esp, 4
		xor	eax, eax
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_31:					; CODE XREF: _cms_DigestedData_create+21j
		push	19h
		call	_OBJ_nid2obj
		mov	[esi], eax
		mov	[esi+4], edi
		push	15h
		mov	dword ptr [edi], 0
		call	_OBJ_nid2obj
		mov	ecx, [edi+8]
		push	[esp+10h+arg_0]
		mov	[ecx], eax
		push	dword ptr [edi+4]
		call	_cms_DigestAlgorithm_set
		add	esp, 10h
		mov	eax, esi
		pop	edi
		pop	esi
		retn
_cms_DigestedData_create endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 64h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _cms_DigestedData_do_final
_cms_DigestedData_do_final proc	near

var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_44		= byte ptr -44h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 60h ; '`'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+60h+var_4], eax
		push	ebx
		push	esi
		mov	esi, [esp+68h+arg_0]
		lea	eax, [esp+68h+var_5C]
		push	edi
		mov	edi, [esp+6Ch+arg_4]
		xor	ebx, ebx
		push	eax
		call	_EVP_MD_CTX_init
		mov	esi, [esi+4]
		lea	eax, [esp+70h+var_5C]
		push	dword ptr [esi+4]
		push	edi
		push	eax
		call	_cms_DigestAlgorithm_find_ctx
		add	esp, 10h
		test	eax, eax
		jz	$err$17
		lea	eax, [esp+6Ch+var_60]
		push	eax
		lea	eax, [esp+70h+var_44]
		push	eax
		lea	eax, [esp+74h+var_5C]
		push	eax
		call	_EVP_DigestFinal_ex
		add	esp, 0Ch
		test	eax, eax
		jle	$err$17
		cmp	[esp+6Ch+arg_8], ebx
		jz	loc_16D
		mov	esi, [esi+0Ch]
		mov	ecx, [esp+6Ch+var_60]
		cmp	ecx, [esi]
		jz	short loc_FA
		push	7Dh ; '}'
		push	offset ??_C@_0BG@DOGDJKJA@?4?2crypto?2cms?2cms_dd?4c?$AA@ ; ".\\crypto\\cms\\cms_dd.c"
		push	79h ; 'y'
		push	75h ; 'u'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	$err$17
; ---------------------------------------------------------------------------

loc_FA:					; CODE XREF: _cms_DigestedData_do_final+7Aj
		mov	esi, [esi+8]
		lea	edx, [esp+6Ch+var_44]
		sub	ecx, 4
		jb	short loc_117

loc_106:				; CODE XREF: _cms_DigestedData_do_final+B1j
		mov	eax, [edx]
		cmp	eax, [esi]
		jnz	short loc_11C
		add	edx, 4
		add	esi, 4
		sub	ecx, 4
		jnb	short loc_106

loc_117:				; CODE XREF: _cms_DigestedData_do_final+A0j
		cmp	ecx, 0FFFFFFFCh
		jz	short loc_166

loc_11C:				; CODE XREF: _cms_DigestedData_do_final+A6j
		mov	al, [edx]
		cmp	al, [esi]
		jnz	short loc_149
		cmp	ecx, 0FFFFFFFDh
		jz	short loc_166
		mov	al, [edx+1]
		cmp	al, [esi+1]
		jnz	short loc_149
		cmp	ecx, 0FFFFFFFEh
		jz	short loc_166
		mov	al, [edx+2]
		cmp	al, [esi+2]
		jnz	short loc_149
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_166
		mov	al, [edx+3]
		cmp	al, [esi+3]
		jz	short loc_166

loc_149:				; CODE XREF: _cms_DigestedData_do_final+BCj
					; _cms_DigestedData_do_final+C9j ...
		push	83h ; 'ƒ'
		push	offset ??_C@_0BG@DOGDJKJA@?4?2crypto?2cms?2cms_dd?4c?$AA@ ; ".\\crypto\\cms\\cms_dd.c"
		push	9Eh ; 'ž'
		push	75h ; 'u'
		push	2Eh ; '.'
		call	_ERR_put_error
		add	esp, 14h
		jmp	short $err$17
; ---------------------------------------------------------------------------

loc_166:				; CODE XREF: _cms_DigestedData_do_final+B6j
					; _cms_DigestedData_do_final+C1j ...
		mov	ebx, 1
		jmp	short $err$17
; ---------------------------------------------------------------------------

loc_16D:				; CODE XREF: _cms_DigestedData_do_final+6Bj
		push	[esp+6Ch+var_60]
		lea	eax, [esp+70h+var_44]
		push	eax
		push	dword ptr [esi+0Ch]
		call	_ASN1_STRING_set
		add	esp, 0Ch
		mov	ecx, 1
		test	eax, eax
		cmovnz	ebx, ecx

$err$17:				; CODE XREF: _cms_DigestedData_do_final+42j
					; _cms_DigestedData_do_final+61j ...
		lea	eax, [esp+6Ch+var_5C]
		push	eax
		call	_EVP_MD_CTX_cleanup
		mov	ecx, [esp+70h+var_4]
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 60h
		retn
_cms_DigestedData_do_final endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _cms_DigestedData_init_bio
_cms_DigestedData_init_bio proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		push	dword ptr [eax+4]
		call	_cms_DigestAlgorithm_init_bio
		add	esp, 4
		retn
_cms_DigestedData_init_bio endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1C0h
; COMDAT (pick any)
		public ??_C@_0BG@DOGDJKJA@?4?2crypto?2cms?2cms_dd?4c?$AA@
; `string'
??_C@_0BG@DOGDJKJA@?4?2crypto?2cms?2cms_dd?4c?$AA@ db '.\crypto\cms\cms_dd.c',0
					; DATA XREF: _cms_DigestedData_do_final+7Eo
					; _cms_DigestedData_do_final+EAo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_put_error:near ; CODE XREF: _cms_DigestedData_do_final+89p
					; _cms_DigestedData_do_final+F8p
		extrn _ASN1_STRING_set:near ; CODE XREF: _cms_DigestedData_do_final+115p
		extrn _ASN1_item_new:near ; CODE XREF: _cms_DigestedData_create+15p
		extrn _OBJ_nid2obj:near	; CODE XREF: _cms_DigestedData_create+33p
					; _cms_DigestedData_create+45p
		extrn _EVP_MD_CTX_init:near ; CODE XREF: _cms_DigestedData_do_final+27p
		extrn _EVP_MD_CTX_cleanup:near ; CODE XREF: _cms_DigestedData_do_final+12Cp
		extrn _EVP_DigestFinal_ex:near ; CODE XREF: _cms_DigestedData_do_final+57p
		extrn _CMS_ContentInfo_new:near	; CODE XREF: _cms_DigestedData_create+1p
		extrn _CMS_ContentInfo_free:near ; CODE	XREF: _cms_DigestedData_create+24p
		extrn _cms_DigestAlgorithm_set:near
					; CODE XREF: _cms_DigestedData_create+56p
		extrn _cms_DigestAlgorithm_init_bio:near
					; CODE XREF: _cms_DigestedData_init_bio+Ap
		extrn _cms_DigestAlgorithm_find_ctx:near
					; CODE XREF: _cms_DigestedData_do_final+38p
		extrn _CMS_DigestedData_it:near	; CODE XREF: _cms_DigestedData_create+Fp
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: _cms_DigestedData_do_final+13Fp
		extrn __chkstk:near	; CODE XREF: _cms_DigestedData_do_final+5p
		extrn ___security_cookie:near ;	DATA XREF: _cms_DigestedData_do_final+Ar


		end

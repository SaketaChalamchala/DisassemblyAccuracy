;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	2D39572E0EF60BDDD22FCFF84D49F307
; Input	CRC32 :	D6570B73

; File Name   :	C:\compspace\Diff\openssl\obj\ocsp_prn.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
; `OCSP_response_status_str'::`2'::rstat_tbl
?rstat_tbl@?1??OCSP_response_status_str@@9@9 dd	0 ; DATA XREF: _OCSP_RESPONSE_print+43o
					; _OCSP_response_status_str+4o
		dd offset ??_C@_0L@LHCHIOPJ@successful?$AA@ ; "successful"
		dd 1
		dd offset ??_C@_0BB@CIOODDMN@malformedrequest?$AA@ ; "malformedrequest"
		dd 2
		dd offset ??_C@_0O@IMMAPLFB@internalerror?$AA@ ; "internalerror"
		dd 3
		dd offset ??_C@_08EPBAMODF@trylater?$AA@ ; "trylater"
		dd 5
		dd offset ??_C@_0M@ICGLAFAC@sigrequired?$AA@ ; "sigrequired"
		dd 6
		dd offset ??_C@_0N@FNHBIFGF@unauthorized?$AA@ ;	"unauthorized"
; `OCSP_cert_status_str'::`2'::cstat_tbl
?cstat_tbl@?1??OCSP_cert_status_str@@9@9 dd 0 ;	DATA XREF: _OCSP_RESPONSE_print+4Fo
					; _OCSP_cert_status_str+4o ...
		dd offset ??_C@_04DDJAGGFE@good?$AA@ ; "good"
		dd 1
		dd offset ??_C@_07MIJFAMBD@revoked?$AA@	; "revoked"
		dd 2
		dd offset ??_C@_07CIFAGBMG@unknown?$AA@	; "unknown"
; `OCSP_crl_reason_str'::`2'::reason_tbl
?reason_tbl@?1??OCSP_crl_reason_str@@9@9 dd 0 ;	DATA XREF: _OCSP_cert_status_str+17o
					; _OCSP_crl_reason_str+4o
		dd offset ??_C@_0M@MFMDLEDN@unspecified?$AA@ ; "unspecified"
		dd 1
		dd offset ??_C@_0O@MCEAAJLH@keyCompromise?$AA@ ; "keyCompromise"
		dd 2
		dd offset ??_C@_0N@GNKKBNBB@cACompromise?$AA@ ;	"cACompromise"
		dd 3
		dd offset ??_C@_0BD@BNOFAJLL@affiliationChanged?$AA@ ; "affiliationChanged"
		dd 4
		dd offset ??_C@_0L@NHCKNIFL@superseded?$AA@ ; "superseded"
		dd 5
		dd offset ??_C@_0BF@IGJCOPF@cessationOfOperation?$AA@ ;	"cessationOfOperation"
		dd 6
		dd offset ??_C@_0BA@FBHLCNLK@certificateHold?$AA@ ; "certificateHold"
		dd 8
		dd offset ??_C@_0O@BILLKPKO@removeFromCRL?$AA@
					; DATA XREF: _OCSP_crl_reason_str+17o
_rdata		ends			; "removeFromCRL"

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
; COMDAT (pick any)
		public ??_C@_0L@LHCHIOPJ@successful?$AA@
; `string'
??_C@_0L@LHCHIOPJ@successful?$AA@ db 'successful',0 ; DATA XREF: .rdata:00000004o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
; COMDAT (pick any)
		public ??_C@_0BB@CIOODDMN@malformedrequest?$AA@
; `string'
??_C@_0BB@CIOODDMN@malformedrequest?$AA@ db 'malformedrequest',0
					; DATA XREF: .rdata:0000000Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
; COMDAT (pick any)
		public ??_C@_0O@IMMAPLFB@internalerror?$AA@
; `string'
??_C@_0O@IMMAPLFB@internalerror?$AA@ db	'internalerror',0 ; DATA XREF: .rdata:00000014o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
; COMDAT (pick any)
		public ??_C@_08EPBAMODF@trylater?$AA@
; `string'
??_C@_08EPBAMODF@trylater?$AA@ db 'trylater',0 ; DATA XREF: .rdata:0000001Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
; COMDAT (pick any)
		public ??_C@_0M@ICGLAFAC@sigrequired?$AA@
; `string'
??_C@_0M@ICGLAFAC@sigrequired?$AA@ db 'sigrequired',0 ; DATA XREF: .rdata:00000024o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
; COMDAT (pick any)
		public ??_C@_0N@FNHBIFGF@unauthorized?$AA@
; `string'
??_C@_0N@FNHBIFGF@unauthorized?$AA@ db 'unauthorized',0 ; DATA XREF: .rdata:0000002Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
; COMDAT (pick any)
		public ??_C@_04DDJAGGFE@good?$AA@
; `string'
??_C@_04DDJAGGFE@good?$AA@ db 'good',0  ; DATA XREF: .rdata:00000034o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
; COMDAT (pick any)
		public ??_C@_07MIJFAMBD@revoked?$AA@
; `string'
??_C@_07MIJFAMBD@revoked?$AA@ db 'revoked',0 ; DATA XREF: .rdata:0000003Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
; COMDAT (pick any)
		public ??_C@_07CIFAGBMG@unknown?$AA@
; `string'
??_C@_07CIFAGBMG@unknown?$AA@ db 'unknown',0 ; DATA XREF: .rdata:00000044o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F8h
; COMDAT (pick any)
		public ??_C@_0M@MFMDLEDN@unspecified?$AA@
; `string'
??_C@_0M@MFMDLEDN@unspecified?$AA@ db 'unspecified',0 ; DATA XREF: .rdata:0000004Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 104h
; COMDAT (pick any)
		public ??_C@_0O@MCEAAJLH@keyCompromise?$AA@
; `string'
??_C@_0O@MCEAAJLH@keyCompromise?$AA@ db	'keyCompromise',0 ; DATA XREF: .rdata:00000054o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 114h
; COMDAT (pick any)
		public ??_C@_0N@GNKKBNBB@cACompromise?$AA@
; `string'
??_C@_0N@GNKKBNBB@cACompromise?$AA@ db 'cACompromise',0 ; DATA XREF: .rdata:0000005Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 124h
; COMDAT (pick any)
		public ??_C@_0BD@BNOFAJLL@affiliationChanged?$AA@
; `string'
??_C@_0BD@BNOFAJLL@affiliationChanged?$AA@ db 'affiliationChanged',0
					; DATA XREF: .rdata:00000064o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 138h
; COMDAT (pick any)
		public ??_C@_0L@NHCKNIFL@superseded?$AA@
; `string'
??_C@_0L@NHCKNIFL@superseded?$AA@ db 'superseded',0 ; DATA XREF: .rdata:0000006Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 144h
; COMDAT (pick any)
		public ??_C@_0BF@IGJCOPF@cessationOfOperation?$AA@
; `string'
??_C@_0BF@IGJCOPF@cessationOfOperation?$AA@ db 'cessationOfOperation',0
					; DATA XREF: .rdata:00000074o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 15Ch
; COMDAT (pick any)
		public ??_C@_0BA@FBHLCNLK@certificateHold?$AA@
; `string'
??_C@_0BA@FBHLCNLK@certificateHold?$AA@	db 'certificateHold',0 ; DATA XREF: .rdata:0000007Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16Ch
; COMDAT (pick any)
		public ??_C@_0O@BILLKPKO@removeFromCRL?$AA@
; `string'
??_C@_0O@BILLKPKO@removeFromCRL?$AA@ db	'removeFromCRL',0 ; DATA XREF: .rdata:00000084o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 17Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REQUEST_print
_OCSP_REQUEST_print proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_4]
		push	ebx
		push	ebp
		push	esi
		mov	esi, [eax]
		mov	ebp, [eax+4]
		push	edi
		mov	edi, [esp+10h+arg_0]
		push	13h
		push	offset ??_C@_0BE@MGIKGIHG@OCSP?5Request?5Data?3?6?$AA@ ; "OCSP Request Data:\n"
		push	edi
		mov	[esp+1Ch+arg_4], esi
		call	_BIO_write
		add	esp, 0Ch
		test	eax, eax
		jle	$err$27
		push	dword ptr [esi]
		call	_ASN1_INTEGER_get
		push	eax
		inc	eax
		push	eax
		push	offset ??_C@_0BJ@DLIDIDCC@?5?5?5?5Version?3?5?$CFlu?5?$CI0x?$CFlx?$CJ?$AA@ ; "	  Version: %lu (0x%lx)"
		push	edi
		call	_BIO_printf
		add	esp, 14h
		test	eax, eax
		jle	$err$27
		cmp	dword ptr [esi+4], 0
		jz	short loc_1F3
		push	15h
		push	offset ??_C@_0BG@DFOJBFOJ@?6?5?5?5?5Requestor?5Name?3?5?$AA@ ; "\n    Requestor	Name: "
		push	edi
		call	_BIO_write
		add	esp, 0Ch
		test	eax, eax
		jle	$err$27
		push	dword ptr [esi+4]
		push	edi
		call	_GENERAL_NAME_print
		add	esp, 8

loc_1F3:				; CODE XREF: _OCSP_REQUEST_print+51j
		push	15h
		push	offset ??_C@_0BG@BGDLFDJM@?6?5?5?5?5Requestor?5List?3?6?$AA@ ; "\n    Requestor	List:\n"
		push	edi
		call	_BIO_write
		add	esp, 0Ch
		test	eax, eax
		jle	$err$27
		push	dword ptr [esi+8]
		xor	ebx, ebx
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_264

loc_21C:				; CODE XREF: _OCSP_REQUEST_print+E6j
		push	ebx
		push	dword ptr [esi+8]
		call	_sk_value
		mov	esi, eax
		push	8
		push	dword ptr [esi]
		push	edi
		call	_ocsp_certid_print
		push	8
		push	[esp+28h+arg_8]
		push	dword ptr [esi+4]
		push	offset ??_C@_0BK@KJPGACAD@Request?5Single?5Extensions?$AA@ ; "Request Single Extensions"
		push	edi
		call	_X509V3_extensions_print
		add	esp, 28h
		test	eax, eax
		jz	$err$27
		mov	esi, [esp+10h+arg_4]
		inc	ebx
		push	dword ptr [esi+8]
		call	_sk_num
		add	esp, 4
		cmp	ebx, eax
		jl	short loc_21C

loc_264:				; CODE XREF: _OCSP_REQUEST_print+9Ej
		push	4
		push	[esp+14h+arg_8]
		push	dword ptr [esi+0Ch]
		push	offset ??_C@_0BD@FPBILPLB@Request?5Extensions?$AA@ ; "Request Extensions"
		push	edi
		call	_X509V3_extensions_print
		add	esp, 14h
		test	eax, eax
		jz	short $err$27
		test	ebp, ebp
		jz	short loc_2D0
		push	dword ptr [ebp+4]
		push	dword ptr [ebp+0]
		push	edi
		call	_X509_signature_print
		push	dword ptr [ebp+8]
		xor	esi, esi
		call	_sk_num
		add	esp, 10h
		test	eax, eax
		jle	short loc_2D0

loc_2A0:				; CODE XREF: _OCSP_REQUEST_print+152j
		push	esi
		push	dword ptr [ebp+8]
		call	_sk_value
		push	eax
		push	edi
		call	_X509_print
		push	esi
		push	dword ptr [ebp+8]
		call	_sk_value
		push	eax
		push	edi
		call	_PEM_write_bio_X509
		push	dword ptr [ebp+8]
		inc	esi
		call	_sk_num
		add	esp, 24h
		cmp	esi, eax
		jl	short loc_2A0

loc_2D0:				; CODE XREF: _OCSP_REQUEST_print+105j
					; _OCSP_REQUEST_print+122j
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, 1
		pop	ebx
		retn
; ---------------------------------------------------------------------------

$err$27:				; CODE XREF: _OCSP_REQUEST_print+27j
					; _OCSP_REQUEST_print+47j ...
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		retn
_OCSP_REQUEST_print endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPONSE_print
_OCSP_RESPONSE_print proc near

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 8
		call	__chkstk
		push	ebx
		mov	ebx, [esp+0Ch+arg_4]
		push	ebp
		push	esi
		mov	esi, [esp+14h+arg_0]
		push	edi
		mov	edi, [ebx+4]
		push	offset ??_C@_0BF@EMNKKDFK@OCSP?5Response?5Data?3?6?$AA@	; "OCSP	Response Data:\n"
		push	esi
		mov	[esp+20h+var_8], 0
		call	_BIO_puts
		add	esp, 8
		test	eax, eax
		jle	loc_6BA
		push	dword ptr [ebx]
		call	_ASN1_ENUMERATED_get
		mov	ecx, eax
		add	esp, 4
		mov	eax, offset ?rstat_tbl@?1??OCSP_response_status_str@@9@9 ; `OCSP_response_status_str'::`2'::rstat_tbl

loc_32C:				; CODE XREF: _OCSP_RESPONSE_print+54j
		cmp	[eax], ecx
		jz	short loc_341
		add	eax, 8
		cmp	eax, offset ?cstat_tbl@?1??OCSP_cert_status_str@@9@9 ; `OCSP_cert_status_str'::`2'::cstat_tbl
		jb	short loc_32C
		mov	eax, offset ??_C@_09IFEIINHG@?$CIUNKNOWN?$CJ?$AA@ ; "(UNKNOWN)"
		jmp	short loc_344
; ---------------------------------------------------------------------------

loc_341:				; CODE XREF: _OCSP_RESPONSE_print+4Aj
		mov	eax, [eax+4]

loc_344:				; CODE XREF: _OCSP_RESPONSE_print+5Bj
		push	ecx
		push	eax
		push	offset ??_C@_0CG@MCNGJLHH@?5?5?5?5OCSP?5Response?5Status?3?5?$CFs?5?$CI0x@ ; "	  OCSP Response	Status:	%s (0x%lx)\n"
		push	esi
		call	_BIO_printf
		add	esp, 10h
		test	eax, eax
		jle	loc_6BA
		test	edi, edi
		jz	short loc_3A8
		push	offset ??_C@_0BE@LFHANAAE@?5?5?5?5Response?5Type?3?5?$AA@ ; "	 Response Type:	"
		push	esi
		call	_BIO_puts
		add	esp, 8
		test	eax, eax
		jle	loc_6BA
		push	dword ptr [edi]
		push	esi
		call	_i2a_ASN1_OBJECT
		add	esp, 8
		test	eax, eax
		jle	loc_6BA
		push	dword ptr [edi]
		call	_OBJ_obj2nid
		add	esp, 4
		cmp	eax, 16Dh
		jz	short loc_3B5
		push	offset ??_C@_0BK@IGJBBPJF@?5?$CIunknown?5response?5type?$CJ?6?$AA@ ; " (unknown	response type)\n"
		push	esi
		call	_BIO_puts
		add	esp, 8

loc_3A8:				; CODE XREF: _OCSP_RESPONSE_print+7Aj
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, 1
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_3B5:				; CODE XREF: _OCSP_RESPONSE_print+B4j
		push	ebx
		call	_OCSP_response_get1_basic
		mov	ebx, eax
		add	esp, 4
		mov	[esp+18h+arg_4], ebx
		test	ebx, ebx
		jz	loc_6A1
		mov	ebx, [ebx]
		mov	[esp+18h+var_4], ebx
		push	dword ptr [ebx]
		call	_ASN1_INTEGER_get
		push	eax
		inc	eax
		push	eax
		push	offset ??_C@_0BL@IFLICGGE@?6?5?5?5?5Version?3?5?$CFlu?5?$CI0x?$CFlx?$CJ?6?$AA@ ; "\n	Version: %lu (0x%lx)\n"
		push	esi
		call	_BIO_printf
		add	esp, 14h
		test	eax, eax
		jle	loc_6A1
		push	offset ??_C@_0BD@NOLOGGJM@?5?5?5?5Responder?5Id?3?5?$AA@ ; "	Responder Id: "
		push	esi
		call	_BIO_puts
		add	esp, 8
		test	eax, eax
		jle	loc_6A1
		mov	ecx, [ebx+4]
		mov	eax, [ecx]
		sub	eax, 0
		jz	short loc_427
		sub	eax, 1
		jnz	short loc_43A
		push	4
		push	dword ptr [ecx+4]
		push	esi
		call	_i2a_ASN1_STRING
		add	esp, 0Ch
		jmp	short loc_43A
; ---------------------------------------------------------------------------

loc_427:				; CODE XREF: _OCSP_RESPONSE_print+12Cj
		push	82031Fh
		push	0
		push	dword ptr [ecx+4]
		push	esi
		call	_X509_NAME_print_ex
		add	esp, 10h

loc_43A:				; CODE XREF: _OCSP_RESPONSE_print+131j
					; _OCSP_RESPONSE_print+141j
		push	offset ??_C@_0BD@FLPDMECI@?6?5?5?5?5Produced?5At?3?5?$AA@ ; "\n	   Produced At:	"
		push	esi
		call	_BIO_printf
		add	esp, 8
		test	eax, eax
		jle	loc_6A1
		push	dword ptr [ebx+8]
		push	esi
		call	_ASN1_GENERALIZEDTIME_print
		add	esp, 8
		test	eax, eax
		jz	loc_6A1
		push	offset ??_C@_0BB@FNHNCBDB@?6?5?5?5?5Responses?3?6?$AA@ ; "\n	Responses:\n"
		push	esi
		call	_BIO_printf
		add	esp, 8
		test	eax, eax
		jle	loc_6A1
		push	dword ptr [ebx+0Ch]
		xor	ebp, ebp
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	loc_60C
		nop	dword ptr [eax+eax+00h]

loc_494:				; CODE XREF: _OCSP_RESPONSE_print+322j
		push	ebp
		push	dword ptr [ebx+0Ch]
		call	_sk_value
		add	esp, 8
		test	eax, eax
		jz	loc_5F8
		push	ebp
		push	dword ptr [ebx+0Ch]
		call	_sk_value
		mov	edi, eax
		push	4
		push	dword ptr [edi]
		push	esi
		call	_ocsp_certid_print
		add	esp, 14h
		test	eax, eax
		jle	loc_6A1
		mov	ebx, [edi+4]
		push	dword ptr [ebx]
		call	_OCSP_cert_status_str
		push	eax
		push	offset ??_C@_0BE@JPOIHOEL@?5?5?5?5Cert?5Status?3?5?$CFs?$AA@ ; "    Cert Status: %s"
		push	esi
		call	_BIO_printf
		add	esp, 10h
		test	eax, eax
		jle	loc_6A1
		cmp	dword ptr [ebx], 1
		jnz	short loc_54B
		mov	ebx, [ebx+4]
		push	offset ??_C@_0BH@IENLMFBH@?6?5?5?5?5Revocation?5Time?3?5?$AA@ ;	"\n    Revocation Time:	"
		push	esi
		call	_BIO_printf
		add	esp, 8
		test	eax, eax
		jle	loc_6A1
		push	dword ptr [ebx]
		push	esi
		call	_ASN1_GENERALIZEDTIME_print
		add	esp, 8
		test	eax, eax
		jz	loc_6A1
		mov	eax, [ebx+4]
		test	eax, eax
		jz	short loc_54B
		push	eax
		call	_ASN1_ENUMERATED_get
		add	esp, 4
		push	eax
		push	eax
		call	_OCSP_crl_reason_str
		add	esp, 4
		push	eax
		push	offset ??_C@_0CD@OMCGMGML@?6?5?5?5?5Revocation?5Reason?3?5?$CFs?5?$CI0x?$CFl@ ;	"\n    Revocation Reason: %s (0x%lx)"
		push	esi
		call	_BIO_printf
		add	esp, 10h
		test	eax, eax
		jle	loc_6A1

loc_54B:				; CODE XREF: _OCSP_RESPONSE_print+208j
					; _OCSP_RESPONSE_print+23Bj
		push	offset ??_C@_0BD@NHNKOKLJ@?6?5?5?5?5This?5Update?3?5?$AA@ ; "\n	   This	Update:	"
		push	esi
		call	_BIO_printf
		add	esp, 8
		test	eax, eax
		jle	loc_6A1
		push	dword ptr [edi+8]
		push	esi
		call	_ASN1_GENERALIZEDTIME_print
		add	esp, 8
		test	eax, eax
		jz	loc_6A1
		cmp	dword ptr [edi+0Ch], 0
		jz	short loc_5A5
		push	offset ??_C@_0BD@JKPFNICA@?6?5?5?5?5Next?5Update?3?5?$AA@ ; "\n	   Next	Update:	"
		push	esi
		call	_BIO_printf
		add	esp, 8
		test	eax, eax
		jle	loc_6A1
		push	dword ptr [edi+0Ch]
		push	esi
		call	_ASN1_GENERALIZEDTIME_print
		add	esp, 8
		test	eax, eax
		jz	loc_6A1

loc_5A5:				; CODE XREF: _OCSP_RESPONSE_print+295j
		push	1
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; "\n"
		push	esi
		call	_BIO_write
		add	esp, 0Ch
		test	eax, eax
		jle	loc_6A1
		push	8
		push	[esp+1Ch+arg_8]
		push	dword ptr [edi+10h]
		push	offset ??_C@_0BL@JLMFGLOA@Response?5Single?5Extensions?$AA@ ; "Response	Single Extensions"
		push	esi
		call	_X509V3_extensions_print
		add	esp, 14h
		test	eax, eax
		jz	loc_6A1
		push	1
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; "\n"
		push	esi
		call	_BIO_write
		add	esp, 0Ch
		test	eax, eax
		jle	loc_6A1
		mov	ebx, [esp+18h+var_4]

loc_5F8:				; CODE XREF: _OCSP_RESPONSE_print+1BEj
		push	dword ptr [ebx+0Ch]
		inc	ebp
		call	_sk_num
		add	esp, 4
		cmp	ebp, eax
		jl	loc_494

loc_60C:				; CODE XREF: _OCSP_RESPONSE_print+1A5j
		push	4
		push	[esp+1Ch+arg_8]
		push	dword ptr [ebx+10h]
		push	offset ??_C@_0BE@OIEFCAHE@Response?5Extensions?$AA@ ; "Response	Extensions"
		push	esi
		call	_X509V3_extensions_print
		add	esp, 14h
		test	eax, eax
		jz	short loc_6A1
		mov	eax, [esp+18h+arg_4]
		push	dword ptr [eax+8]
		push	dword ptr [eax+4]
		push	esi
		call	_X509_signature_print
		mov	ebx, [esp+24h+arg_4]
		add	esp, 0Ch
		test	eax, eax
		jle	short $err$103
		push	dword ptr [ebx+0Ch]
		xor	edi, edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_684
		nop

loc_654:				; CODE XREF: _OCSP_RESPONSE_print+39Ej
		push	edi
		push	dword ptr [ebx+0Ch]
		call	_sk_value
		push	eax
		push	esi
		call	_X509_print
		push	edi
		push	dword ptr [ebx+0Ch]
		call	_sk_value
		push	eax
		push	esi
		call	_PEM_write_bio_X509
		push	dword ptr [ebx+0Ch]
		inc	edi
		call	_sk_num
		add	esp, 24h
		cmp	edi, eax
		jl	short loc_654

loc_684:				; CODE XREF: _OCSP_RESPONSE_print+36Dj
		push	ebx
		mov	[esp+1Ch+var_8], 1
		call	_OCSP_BASICRESP_free
		mov	eax, [esp+1Ch+var_8]
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_6A1:				; CODE XREF: _OCSP_RESPONSE_print+E2j
					; _OCSP_RESPONSE_print+108j ...
		mov	ebx, [esp+18h+arg_4]
		push	ebx
		call	_OCSP_BASICRESP_free
		mov	eax, [esp+1Ch+var_8]
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_6BA:				; CODE XREF: _OCSP_RESPONSE_print+31j
					; _OCSP_RESPONSE_print+72j ...
		xor	ebx, ebx

$err$103:				; CODE XREF: _OCSP_RESPONSE_print+35Cj
		push	ebx
		call	_OCSP_BASICRESP_free
		mov	eax, [esp+1Ch+var_8]
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
_OCSP_RESPONSE_print endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_cert_status_str
_OCSP_cert_status_str proc near		; CODE XREF: _OCSP_RESPONSE_print+1E9p

arg_0		= dword	ptr  4

		mov	ecx, [esp+arg_0]
		mov	eax, offset ?cstat_tbl@?1??OCSP_cert_status_str@@9@9 ; `OCSP_cert_status_str'::`2'::cstat_tbl
		nop	dword ptr [eax+00000000h]

loc_6E4:				; CODE XREF: _OCSP_cert_status_str+1Cj
		cmp	[eax], ecx
		jz	short loc_6F8
		add	eax, 8
		cmp	eax, offset ?reason_tbl@?1??OCSP_crl_reason_str@@9@9 ; `OCSP_crl_reason_str'::`2'::reason_tbl
		jb	short loc_6E4
		mov	eax, offset ??_C@_09IFEIINHG@?$CIUNKNOWN?$CJ?$AA@ ; "(UNKNOWN)"
		retn
; ---------------------------------------------------------------------------

loc_6F8:				; CODE XREF: _OCSP_cert_status_str+12j
		mov	eax, [eax+4]
		retn
_OCSP_cert_status_str endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6FCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_crl_reason_str
_OCSP_crl_reason_str proc near		; CODE XREF: _OCSP_RESPONSE_print+248p

arg_0		= dword	ptr  4

		mov	ecx, [esp+arg_0]
		mov	eax, offset ?reason_tbl@?1??OCSP_crl_reason_str@@9@9 ; `OCSP_crl_reason_str'::`2'::reason_tbl
		nop	dword ptr [eax+00000000h]

loc_70C:				; CODE XREF: _OCSP_crl_reason_str+1Cj
		cmp	[eax], ecx
		jz	short loc_720
		add	eax, 8
		cmp	eax, (offset off_84+4)
		jb	short loc_70C
		mov	eax, offset ??_C@_09IFEIINHG@?$CIUNKNOWN?$CJ?$AA@ ; "(UNKNOWN)"
		retn
; ---------------------------------------------------------------------------

loc_720:				; CODE XREF: _OCSP_crl_reason_str+12j
		mov	eax, [eax+4]
		retn
_OCSP_crl_reason_str endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 724h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_response_status_str
_OCSP_response_status_str proc near

arg_0		= dword	ptr  4

		mov	ecx, [esp+arg_0]
		mov	eax, offset ?rstat_tbl@?1??OCSP_response_status_str@@9@9 ; `OCSP_response_status_str'::`2'::rstat_tbl
		nop	dword ptr [eax+00000000h]

loc_734:				; CODE XREF: _OCSP_response_status_str+1Cj
		cmp	[eax], ecx
		jz	short loc_748
		add	eax, 8
		cmp	eax, offset ?cstat_tbl@?1??OCSP_cert_status_str@@9@9 ; `OCSP_cert_status_str'::`2'::cstat_tbl
		jb	short loc_734
		mov	eax, offset ??_C@_09IFEIINHG@?$CIUNKNOWN?$CJ?$AA@ ; "(UNKNOWN)"
		retn
; ---------------------------------------------------------------------------

loc_748:				; CODE XREF: _OCSP_response_status_str+12j
		mov	eax, [eax+4]
		retn
_OCSP_response_status_str endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 74Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ocsp_certid_print proc	near		; CODE XREF: _OCSP_REQUEST_print+B0p
					; _OCSP_RESPONSE_print+1D4p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		mov	ebx, [esp+4+arg_0]
		push	esi
		push	edi
		mov	edi, [esp+0Ch+arg_8]
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		push	edi
		push	offset ??_C@_0BE@NJBIOGFJ@?$CF?$CKsCertificate?5ID?3?6?$AA@ ; "%*sCertificate ID:\n"
		push	ebx
		call	_BIO_printf
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		add	edi, 2
		push	edi
		push	offset ??_C@_0BE@HDPALFMJ@?$CF?$CKsHash?5Algorithm?3?5?$AA@ ; "%*sHash Algorithm: "
		push	ebx
		call	_BIO_printf
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, [esi]
		push	dword ptr [eax]
		push	ebx
		call	_i2a_ASN1_OBJECT
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		push	edi
		push	offset ??_C@_0BH@LFMGPDJJ@?6?$CF?$CKsIssuer?5Name?5Hash?3?5?$AA@ ; "\n%*sIssuer	Name Hash: "
		push	ebx
		call	_BIO_printf
		push	4
		push	dword ptr [esi+4]
		push	ebx
		call	_i2a_ASN1_STRING
		add	esp, 44h
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		push	edi
		push	offset ??_C@_0BG@BPGIBJLM@?6?$CF?$CKsIssuer?5Key?5Hash?3?5?$AA@	; "\n%*sIssuer Key Hash: "
		push	ebx
		call	_BIO_printf
		push	4
		push	dword ptr [esi+8]
		push	ebx
		call	_i2a_ASN1_STRING
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	`string'
		push	edi
		push	offset ??_C@_0BE@CNGMAJJ@?6?$CF?$CKsSerial?5Number?3?5?$AA@ ; "\n%*sSerial Number: "
		push	ebx
		call	_BIO_printf
		push	dword ptr [esi+0Ch]
		push	ebx
		call	_i2a_ASN1_INTEGER
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; "\n"
		push	ebx
		call	_BIO_printf
		add	esp, 3Ch
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebx
		retn
_ocsp_certid_print endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 7F8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_table2string	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_4]
		mov	ecx, [esp+arg_8]
		lea	ecx, [eax+ecx*8]
		cmp	eax, ecx
		jnb	short loc_816
		mov	edx, [esp+arg_0]

loc_80B:				; CODE XREF: _table2string+1Cj
		cmp	[eax], edx
		jz	short loc_81C
		add	eax, 8
		cmp	eax, ecx
		jb	short loc_80B

loc_816:				; CODE XREF: _table2string+Dj
		mov	eax, offset ??_C@_09IFEIINHG@?$CIUNKNOWN?$CJ?$AA@ ; "(UNKNOWN)"
		retn
; ---------------------------------------------------------------------------

loc_81C:				; CODE XREF: _table2string+15j
		mov	eax, [eax+4]
		retn
_table2string	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 820h
; COMDAT (pick any)
		public ??_C@_00CNPNBAHC@?$AA@
; `string'
??_C@_00CNPNBAHC@?$AA@ db 0		; DATA XREF: _ocsp_certid_print+Bo
					; _ocsp_certid_print+1Co ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 824h
; COMDAT (pick any)
		public ??_C@_0BE@NJBIOGFJ@?$CF?$CKsCertificate?5ID?3?6?$AA@
; `string'
??_C@_0BE@NJBIOGFJ@?$CF?$CKsCertificate?5ID?3?6?$AA@ db	'%*sCertificate ID:',0Ah,0
					; DATA XREF: _ocsp_certid_print+11o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 838h
; COMDAT (pick any)
		public ??_C@_0BE@HDPALFMJ@?$CF?$CKsHash?5Algorithm?3?5?$AA@
; `string'
??_C@_0BE@HDPALFMJ@?$CF?$CKsHash?5Algorithm?3?5?$AA@ db	'%*sHash Algorithm: ',0
					; DATA XREF: _ocsp_certid_print+25o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84Ch
; COMDAT (pick any)
		public ??_C@_0BH@LFMGPDJJ@?6?$CF?$CKsIssuer?5Name?5Hash?3?5?$AA@
; `string'
??_C@_0BH@LFMGPDJJ@?6?$CF?$CKsIssuer?5Name?5Hash?3?5?$AA@ db 0Ah
					; DATA XREF: _ocsp_certid_print+44o
		db '%*sIssuer Name Hash: ',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 864h
; COMDAT (pick any)
		public ??_C@_0BG@BPGIBJLM@?6?$CF?$CKsIssuer?5Key?5Hash?3?5?$AA@
; `string'
??_C@_0BG@BPGIBJLM@?6?$CF?$CKsIssuer?5Key?5Hash?3?5?$AA@ db 0Ah
					; DATA XREF: _ocsp_certid_print+63o
		db '%*sIssuer Key Hash: ',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 87Ch
; COMDAT (pick any)
		public ??_C@_0BE@CNGMAJJ@?6?$CF?$CKsSerial?5Number?3?5?$AA@
; `string'
??_C@_0BE@CNGMAJJ@?6?$CF?$CKsSerial?5Number?3?5?$AA@ db	0Ah
					; DATA XREF: _ocsp_certid_print+7Fo
		db '%*sSerial Number: ',0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 890h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah,0	; DATA XREF: _OCSP_RESPONSE_print+2C3o
					; _OCSP_RESPONSE_print+2FAo ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 894h
; COMDAT (pick any)
		public ??_C@_09IFEIINHG@?$CIUNKNOWN?$CJ?$AA@
; `string'
??_C@_09IFEIINHG@?$CIUNKNOWN?$CJ?$AA@ db '(UNKNOWN)',0 ; DATA XREF: _OCSP_RESPONSE_print+56o
					; _OCSP_cert_status_str+1Eo ...
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8A0h
; COMDAT (pick any)
		public ??_C@_0BE@MGIKGIHG@OCSP?5Request?5Data?3?6?$AA@
; `string'
??_C@_0BE@MGIKGIHG@OCSP?5Request?5Data?3?6?$AA@	db 'OCSP Request Data:',0Ah,0
					; DATA XREF: _OCSP_REQUEST_print+13o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8B4h
; COMDAT (pick any)
		public ??_C@_0BJ@DLIDIDCC@?5?5?5?5Version?3?5?$CFlu?5?$CI0x?$CFlx?$CJ?$AA@
; `string'
??_C@_0BJ@DLIDIDCC@?5?5?5?5Version?3?5?$CFlu?5?$CI0x?$CFlx?$CJ?$AA@ db '    Version: %lu (0x%lx)',0
					; DATA XREF: _OCSP_REQUEST_print+37o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8D0h
; COMDAT (pick any)
		public ??_C@_0BG@DFOJBFOJ@?6?5?5?5?5Requestor?5Name?3?5?$AA@
; `string'
??_C@_0BG@DFOJBFOJ@?6?5?5?5?5Requestor?5Name?3?5?$AA@ db 0Ah
					; DATA XREF: _OCSP_REQUEST_print+55o
		db '    Requestor Name: ',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8E8h
; COMDAT (pick any)
		public ??_C@_0BG@BGDLFDJM@?6?5?5?5?5Requestor?5List?3?6?$AA@
; `string'
??_C@_0BG@BGDLFDJM@?6?5?5?5?5Requestor?5List?3?6?$AA@ db 0Ah
					; DATA XREF: _OCSP_REQUEST_print+79o
		db '    Requestor List:',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 900h
; COMDAT (pick any)
		public ??_C@_0BK@KJPGACAD@Request?5Single?5Extensions?$AA@
; `string'
??_C@_0BK@KJPGACAD@Request?5Single?5Extensions?$AA@ db 'Request Single Extensions',0
					; DATA XREF: _OCSP_REQUEST_print+BEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 91Ch
; COMDAT (pick any)
		public ??_C@_0BD@FPBILPLB@Request?5Extensions?$AA@
; `string'
??_C@_0BD@FPBILPLB@Request?5Extensions?$AA@ db 'Request Extensions',0
					; DATA XREF: _OCSP_REQUEST_print+F1o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 930h
; COMDAT (pick any)
		public ??_C@_0BF@EMNKKDFK@OCSP?5Response?5Data?3?6?$AA@
; `string'
??_C@_0BF@EMNKKDFK@OCSP?5Response?5Data?3?6?$AA@ db 'OCSP Response Data:',0Ah,0
					; DATA XREF: _OCSP_RESPONSE_print+19o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 948h
; COMDAT (pick any)
		public ??_C@_0CG@MCNGJLHH@?5?5?5?5OCSP?5Response?5Status?3?5?$CFs?5?$CI0x@
; `string'
??_C@_0CG@MCNGJLHH@?5?5?5?5OCSP?5Response?5Status?3?5?$CFs?5?$CI0x@ db '    OCSP Response Status: %s (0x%lx)',0Ah,0
					; DATA XREF: _OCSP_RESPONSE_print+62o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 970h
; COMDAT (pick any)
		public ??_C@_0BE@LFHANAAE@?5?5?5?5Response?5Type?3?5?$AA@
; `string'
??_C@_0BE@LFHANAAE@?5?5?5?5Response?5Type?3?5?$AA@ db '    Response Type: ',0
					; DATA XREF: _OCSP_RESPONSE_print+7Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 984h
; COMDAT (pick any)
		public ??_C@_0BK@IGJBBPJF@?5?$CIunknown?5response?5type?$CJ?6?$AA@
; `string'
??_C@_0BK@IGJBBPJF@?5?$CIunknown?5response?5type?$CJ?6?$AA@ db ' (unknown response type)',0Ah,0
					; DATA XREF: _OCSP_RESPONSE_print+B6o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9A0h
; COMDAT (pick any)
		public ??_C@_0BL@IFLICGGE@?6?5?5?5?5Version?3?5?$CFlu?5?$CI0x?$CFlx?$CJ?6?$AA@
; `string'
??_C@_0BL@IFLICGGE@?6?5?5?5?5Version?3?5?$CFlu?5?$CI0x?$CFlx?$CJ?6?$AA@	db 0Ah
					; DATA XREF: _OCSP_RESPONSE_print+F8o
		db '    Version: %lu (0x%lx)',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9BCh
; COMDAT (pick any)
		public ??_C@_0BD@NOLOGGJM@?5?5?5?5Responder?5Id?3?5?$AA@
; `string'
??_C@_0BD@NOLOGGJM@?5?5?5?5Responder?5Id?3?5?$AA@ db '    Responder Id: ',0
					; DATA XREF: _OCSP_RESPONSE_print+10Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9D0h
; COMDAT (pick any)
		public ??_C@_0BD@FLPDMECI@?6?5?5?5?5Produced?5At?3?5?$AA@
; `string'
??_C@_0BD@FLPDMECI@?6?5?5?5?5Produced?5At?3?5?$AA@ db 0Ah
					; DATA XREF: _OCSP_RESPONSE_print:loc_43Ao
		db '    Produced At: ',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9E4h
; COMDAT (pick any)
		public ??_C@_0BB@FNHNCBDB@?6?5?5?5?5Responses?3?6?$AA@
; `string'
??_C@_0BB@FNHNCBDB@?6?5?5?5?5Responses?3?6?$AA@	db 0Ah
					; DATA XREF: _OCSP_RESPONSE_print+180o
		db '    Responses:',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9F8h
; COMDAT (pick any)
		public ??_C@_0BE@JPOIHOEL@?5?5?5?5Cert?5Status?3?5?$CFs?$AA@
; `string'
??_C@_0BE@JPOIHOEL@?5?5?5?5Cert?5Status?3?5?$CFs?$AA@ db '    Cert Status: %s',0
					; DATA XREF: _OCSP_RESPONSE_print+1EFo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0Ch
; COMDAT (pick any)
		public ??_C@_0BH@IENLMFBH@?6?5?5?5?5Revocation?5Time?3?5?$AA@
; `string'
??_C@_0BH@IENLMFBH@?6?5?5?5?5Revocation?5Time?3?5?$AA@ db 0Ah
					; DATA XREF: _OCSP_RESPONSE_print+20Do
		db '    Revocation Time: ',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A24h
; COMDAT (pick any)
		public ??_C@_0CD@OMCGMGML@?6?5?5?5?5Revocation?5Reason?3?5?$CFs?5?$CI0x?$CFl@
; `string'
??_C@_0CD@OMCGMGML@?6?5?5?5?5Revocation?5Reason?3?5?$CFs?5?$CI0x?$CFl@ db 0Ah
					; DATA XREF: _OCSP_RESPONSE_print+251o
		db '    Revocation Reason: %s (0x%lx)',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A48h
; COMDAT (pick any)
		public ??_C@_0BD@NHNKOKLJ@?6?5?5?5?5This?5Update?3?5?$AA@
; `string'
??_C@_0BD@NHNKOKLJ@?6?5?5?5?5This?5Update?3?5?$AA@ db 0Ah
					; DATA XREF: _OCSP_RESPONSE_print:loc_54Bo
		db '    This Update: ',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A5Ch
; COMDAT (pick any)
		public ??_C@_0BD@JKPFNICA@?6?5?5?5?5Next?5Update?3?5?$AA@
; `string'
??_C@_0BD@JKPFNICA@?6?5?5?5?5Next?5Update?3?5?$AA@ db 0Ah
					; DATA XREF: _OCSP_RESPONSE_print+297o
		db '    Next Update: ',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A70h
; COMDAT (pick any)
		public ??_C@_0BL@JLMFGLOA@Response?5Single?5Extensions?$AA@
; `string'
??_C@_0BL@JLMFGLOA@Response?5Single?5Extensions?$AA@ db	'Response Single Extensions',0
					; DATA XREF: _OCSP_RESPONSE_print+2E2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8Ch
; COMDAT (pick any)
		public ??_C@_0BE@OIEFCAHE@Response?5Extensions?$AA@
; `string'
??_C@_0BE@OIEFCAHE@Response?5Extensions?$AA@ db	'Response Extensions',0
					; DATA XREF: _OCSP_RESPONSE_print+331o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_num:near	; CODE XREF: _OCSP_REQUEST_print+94p
					; _OCSP_REQUEST_print+DCp ...
		extrn _sk_value:near	; CODE XREF: _OCSP_REQUEST_print+A4p
					; _OCSP_REQUEST_print+128p ...
		extrn _BIO_write:near	; CODE XREF: _OCSP_REQUEST_print+1Dp
					; _OCSP_REQUEST_print+5Bp ...
		extrn _BIO_puts:near	; CODE XREF: _OCSP_RESPONSE_print+27p
					; _OCSP_RESPONSE_print+82p ...
		extrn _BIO_printf:near	; CODE XREF: _OCSP_REQUEST_print+3Dp
					; _OCSP_RESPONSE_print+68p ...
		extrn _i2a_ASN1_INTEGER:near ; CODE XREF: _ocsp_certid_print+8Ep
		extrn _i2a_ASN1_OBJECT:near ; CODE XREF: _OCSP_RESPONSE_print+95p
					; _ocsp_certid_print+39p
		extrn _i2a_ASN1_STRING:near ; CODE XREF: _OCSP_RESPONSE_print+139p
					; _ocsp_certid_print+55p ...
		extrn _ASN1_INTEGER_get:near ; CODE XREF: _OCSP_REQUEST_print+2Fp
					; _OCSP_RESPONSE_print+F0p
		extrn _ASN1_ENUMERATED_get:near	; CODE XREF: _OCSP_RESPONSE_print+39p
					; _OCSP_RESPONSE_print+23Ep
		extrn _ASN1_GENERALIZEDTIME_print:near
					; CODE XREF: _OCSP_RESPONSE_print+170p
					; _OCSP_RESPONSE_print+226p ...
		extrn _OBJ_obj2nid:near	; CODE XREF: _OCSP_RESPONSE_print+A7p
		extrn _X509_signature_print:near ; CODE	XREF: _OCSP_REQUEST_print+10Ep
					; _OCSP_RESPONSE_print+34Ep
		extrn _X509_NAME_print_ex:near ; CODE XREF: _OCSP_RESPONSE_print+14Ep
		extrn _X509_print:near	; CODE XREF: _OCSP_REQUEST_print+12Fp
					; _OCSP_RESPONSE_print+37Bp
		extrn _GENERAL_NAME_print:near ; CODE XREF: _OCSP_REQUEST_print+6Fp
		extrn _X509V3_extensions_print:near ; CODE XREF: _OCSP_REQUEST_print+C4p
					; _OCSP_REQUEST_print+F7p ...
		extrn _OCSP_response_get1_basic:near ; CODE XREF: _OCSP_RESPONSE_print+D2p
		extrn _OCSP_BASICRESP_free:near	; CODE XREF: _OCSP_RESPONSE_print+3A9p
					; _OCSP_RESPONSE_print+3C2p ...
		extrn _PEM_write_bio_X509:near ; CODE XREF: _OCSP_REQUEST_print+13Fp
					; _OCSP_RESPONSE_print+38Bp
		extrn __chkstk:near	; CODE XREF: _OCSP_RESPONSE_print+5p


		end

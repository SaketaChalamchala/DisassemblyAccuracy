;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	7AA1E92AC4C932D9049A3E1FD1A1BF3D
; Input	CRC32 :	9FB22DD2

; File Name   :	C:\compspace\Diff\openssl\obj\ocsp_asn.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CERTID_it
_OCSP_CERTID_it	proc near		; DATA XREF: .rdata:000000ECo
					; .rdata:00000348o
		mov	eax, offset ?local_it@?1??OCSP_CERTID_it@@9@9 ;	`OCSP_CERTID_it'::`2'::local_it
		retn
_OCSP_CERTID_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SIGNATURE_it
_OCSP_SIGNATURE_it proc	near		; DATA XREF: .rdata:000001B0o
		mov	eax, offset ?local_it@?1??OCSP_SIGNATURE_it@@9@9 ; `OCSP_SIGNATURE_it'::`2'::local_it
		retn
_OCSP_SIGNATURE_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REQINFO_it
_OCSP_REQINFO_it proc near		; DATA XREF: .rdata:0000019Co
		mov	eax, offset ?local_it@?1??OCSP_REQINFO_it@@9@9 ; `OCSP_REQINFO_it'::`2'::local_it
		retn
_OCSP_REQINFO_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 18h
_OCSP_SIGNATURE_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:0000005Co
		dd offset ??_C@_0BD@CBMBFDMH@signatureAlgorithm?$AA@ ; "signatureAlgorithm"
		dd offset _X509_ALGOR_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_09CMIIOJHF@signature?$AA@ ; "signature"
		dd offset _ASN1_BIT_STRING_it
		dd offset off_94+1
		align 8
		dd 8
		dd offset ??_C@_05HFDFJDL@certs?$AA@ ; "certs"
		dd offset _X509_it
; `OCSP_SIGNATURE_it'::`2'::local_it
?local_it@?1??OCSP_SIGNATURE_it@@9@9 dd	1, 10h ; DATA XREF: _OCSP_SIGNATURE_ito
					; _OCSP_SIGNATURE_freeo ...
		dd offset _OCSP_SIGNATURE_seq_tt
		dd 3, 0
		dd 0Ch
		dd offset ??_C@_0P@OIPGPNII@OCSP_SIGNATURE?$AA@	; "OCSP_SIGNATURE"
_OCSP_CERTID_seq_tt dd 3 dup(0)		; DATA XREF: .rdata:000000C8o
		dd offset ??_C@_0O@DHJLLKEK@hashAlgorithm?$AA@ ; "hashAlgorithm"
		dd offset _X509_ALGOR_it
dword_84	dd 2 dup(0)		; DATA XREF: .rdata:_OCSP_CERTSTATUS_ch_tto
					; .rdata:000002F4o ...
		dd 4
off_90		dd offset ??_C@_0P@EKEFMOEP@issuerNameHash?$AA@
					; DATA XREF: .rdata:_OCSP_RESPID_ch_tto
					; .rdata:0000026Co ...
					; "issuerNameHash"
off_94		dd offset _ASN1_OCTET_STRING_it	; DATA XREF: .rdata:00000040o
					; .rdata:000000F0o ...
		align 10h
		dd 8
		dd offset ??_C@_0O@KPBFDKHB@issuerKeyHash?$AA@ ; "issuerKeyHash"
		dd offset _ASN1_OCTET_STRING_it
		dd 2 dup(0)
		dd 0Ch
		dd offset ??_C@_0N@OMOHFKCJ@serialNumber?$AA@ ;	"serialNumber"
		dd offset _ASN1_INTEGER_it
; `OCSP_CERTID_it'::`2'::local_it
?local_it@?1??OCSP_CERTID_it@@9@9 dd 1,	10h ; DATA XREF: _OCSP_CERTID_ito
					; _OCSP_CERTID_freeo ...
		dd offset _OCSP_CERTID_seq_tt
		dd 4, 0
		dd 10h
		dd offset ??_C@_0M@OCJEDPID@OCSP_CERTID?$AA@ ; "OCSP_CERTID"
_OCSP_ONEREQ_seq_tt dd 3 dup(0)		; DATA XREF: .rdata:0000010Co
		dd offset ??_C@_07GCNFCODJ@reqCert?$AA@	; "reqCert"
		dd offset _OCSP_CERTID_it
		dd offset off_94+1
		align 8
		dd 4
		dd offset ??_C@_0BI@PPJDGJOP@singleRequestExtensions?$AA@ ; "singleRequestExtensions"
		dd offset _X509_EXTENSION_it
; `OCSP_ONEREQ_it'::`2'::local_it
?local_it@?1??OCSP_ONEREQ_it@@9@9 dd 1,	10h ; DATA XREF: _OCSP_ONEREQ_ito
					; _OCSP_ONEREQ_freeo ...
		dd offset _OCSP_ONEREQ_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0M@IGPHKOAK@OCSP_ONEREQ?$AA@ ; "OCSP_ONEREQ"
_OCSP_REQINFO_seq_tt dd	offset off_90+1	; DATA XREF: .rdata:00000178o
		dd 2 dup(0)
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd offset off_90+1
		dd 1, 4
		dd offset ??_C@_0O@NHDBCFOA@requestorName?$AA@ ; "requestorName"
		dd offset _GENERAL_NAME_it
		dd 4, 0
		dd 8
		dd offset ??_C@_0M@NNJGDIDJ@requestList?$AA@ ; "requestList"
		dd offset _OCSP_ONEREQ_it
		dd offset off_94+1
		dd 2, 0Ch
		dd offset ??_C@_0BC@CPAMEDLH@requestExtensions?$AA@ ; "requestExtensions"
		dd offset _X509_EXTENSION_it
; `OCSP_REQINFO_it'::`2'::local_it
?local_it@?1??OCSP_REQINFO_it@@9@9 dd 1, 10h ; DATA XREF: _OCSP_REQINFO_ito
					; _OCSP_REQINFO_freeo ...
		dd offset _OCSP_REQINFO_seq_tt
		dd 4, 0
		dd 10h
		dd offset ??_C@_0N@DDBEOJJA@OCSP_REQINFO?$AA@ ;	"OCSP_REQINFO"
_OCSP_REQUEST_seq_tt dd	3 dup(0)	; DATA XREF: .rdata:000001BCo
		dd offset ??_C@_0L@OIGCAPNH@tbsRequest?$AA@ ; "tbsRequest"
		dd offset _OCSP_REQINFO_it
		dd offset off_90+1
		align 8
		dd 4
		dd offset ??_C@_0BC@GKDKILGO@optionalSignature?$AA@ ; "optionalSignature"
		dd offset _OCSP_SIGNATURE_it
; `OCSP_REQUEST_it'::`2'::local_it
?local_it@?1??OCSP_REQUEST_it@@9@9 dd 1, 10h ; DATA XREF: _OCSP_REQUEST_freeo
					; _OCSP_REQUEST_ito ...
		dd offset _OCSP_REQUEST_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0N@PCNOLOBD@OCSP_REQUEST?$AA@ ;	"OCSP_REQUEST"
_OCSP_RESPBYTES_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:00000200o
		dd offset ??_C@_0N@FPIGADMM@responseType?$AA@ ;	"responseType"
		dd offset _ASN1_OBJECT_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_08HKMEAON@response?$AA@	; "response"
		dd offset _ASN1_OCTET_STRING_it
; `OCSP_RESPBYTES_it'::`2'::local_it
?local_it@?1??OCSP_RESPBYTES_it@@9@9 dd	1, 10h ; DATA XREF: _OCSP_RESPBYTES_ito
					; _OCSP_RESPBYTES_freeo ...
		dd offset _OCSP_RESPBYTES_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0P@ONFJGMLI@OCSP_RESPBYTES?$AA@	; "OCSP_RESPBYTES"
_OCSP_RESPONSE_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:00000244o
		dd offset ??_C@_0P@GEHCLFGI@responseStatus?$AA@	; "responseStatus"
		dd offset _ASN1_ENUMERATED_it
		dd offset off_90+1
		align 10h
		dd 4
		dd offset ??_C@_0O@MMHCFEHM@responseBytes?$AA@ ; "responseBytes"
		dd offset _OCSP_RESPBYTES_it
; `OCSP_RESPONSE_it'::`2'::local_it
?local_it@?1??OCSP_RESPONSE_it@@9@9 dd 1, 10h ;	DATA XREF: _OCSP_RESPONSE_freeo
					; _OCSP_RESPONSE_ito ...
		dd offset _OCSP_RESPONSE_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0O@CDJMCFNM@OCSP_RESPONSE?$AA@ ; "OCSP_RESPONSE"
_OCSP_RESPID_ch_tt dd offset off_90	; DATA XREF: .rdata:00000288o
		dd 1, 4
		dd offset ??_C@_0N@OFBDHEPF@value?4byName?$AA@ ; "value.byName"
		dd offset _X509_NAME_it
		dd offset off_90
		dd 2, 4
		dd offset ??_C@_0M@OFGLOCKB@value?4byKey?$AA@ ;	"value.byKey"
		dd offset _ASN1_OCTET_STRING_it
; `OCSP_RESPID_it'::`2'::local_it
?local_it@?1??OCSP_RESPID_it@@9@9 dd 2,	0 ; DATA XREF: _OCSP_RESPID_ito
					; _OCSP_RESPID_freeo ...
		dd offset _OCSP_RESPID_ch_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0M@JBDPBGBO@OCSP_RESPID?$AA@ ; "OCSP_RESPID"
_OCSP_REVOKEDINFO_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:000002CCo
		dd offset ??_C@_0P@MHJPNEEK@revocationTime?$AA@	; "revocationTime"
		dd offset _ASN1_GENERALIZEDTIME_it
		dd offset off_90+1
		align 8
		dd 4
		dd offset ??_C@_0BB@JHENKMOK@revocationReason?$AA@ ; "revocationReason"
		dd offset _ASN1_ENUMERATED_it
; `OCSP_REVOKEDINFO_it'::`2'::local_it
?local_it@?1??OCSP_REVOKEDINFO_it@@9@9 dd 1, 10h ; DATA	XREF: _OCSP_REVOKEDINFO_ito
					; _OCSP_REVOKEDINFO_freeo ...
		dd offset _OCSP_REVOKEDINFO_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0BB@CFNKINIP@OCSP_REVOKEDINFO?$AA@ ; "OCSP_REVOKEDINFO"
_OCSP_CERTSTATUS_ch_tt dd offset dword_84+4 ; DATA XREF: .rdata:00000324o
		align 8
		dd 4
		dd offset ??_C@_0L@MEIDNBL@value?4good?$AA@ ; "value.good"
		dd offset _ASN1_NULL_it
		dd offset dword_84+4
		dd 1, 4
		dd offset ??_C@_0O@GCBEBIKI@value?4revoked?$AA@	; "value.revoked"
		dd offset _OCSP_REVOKEDINFO_it
		dd offset dword_84+4
		dd 2, 4
		dd offset ??_C@_0O@ICNBHFHN@value?4unknown?$AA@	; "value.unknown"
		dd offset _ASN1_NULL_it
; `OCSP_CERTSTATUS_it'::`2'::local_it
?local_it@?1??OCSP_CERTSTATUS_it@@9@9 dd 2, 0 ;	DATA XREF: _OCSP_CERTSTATUS_ito
					; _OCSP_CERTSTATUS_freeo ...
		dd offset _OCSP_CERTSTATUS_ch_tt
		dd 3, 0
		dd 8
		dd offset ??_C@_0BA@JBJHLNOJ@OCSP_CERTSTATUS?$AA@ ; "OCSP_CERTSTATUS"
_OCSP_SINGLERESP_seq_tt	dd 3 dup(0)	; DATA XREF: .rdata:000003A4o
		dd offset ??_C@_06JJGBHEJI@certId?$AA@ ; "certId"
		dd offset _OCSP_CERTID_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_0L@IGGFAGC@certStatus?$AA@ ; "certStatus"
		dd offset _OCSP_CERTSTATUS_it
		dd 2 dup(0)
		dd 8
		dd offset ??_C@_0L@BEDJFPDO@thisUpdate?$AA@ ; "thisUpdate"
		dd offset _ASN1_GENERALIZEDTIME_it
		dd offset off_90+1
		dd 0
		dd 0Ch
		dd offset ??_C@_0L@BMOABHOK@nextUpdate?$AA@ ; "nextUpdate"
		dd offset _ASN1_GENERALIZEDTIME_it
		dd offset off_94+1
		dd 1, 10h
		dd offset ??_C@_0BB@BHCHCCEI@singleExtensions?$AA@ ; "singleExtensions"
		dd offset _X509_EXTENSION_it
; `OCSP_SINGLERESP_it'::`2'::local_it
?local_it@?1??OCSP_SINGLERESP_it@@9@9 dd 1, 10h	; DATA XREF: _OCSP_SINGLERESP_ito
					; _OCSP_SINGLERESP_freeo ...
		dd offset _OCSP_SINGLERESP_seq_tt
		dd 5, 0
		dd 14h
		dd offset ??_C@_0BA@CEMENBMB@OCSP_SINGLERESP?$AA@ ; "OCSP_SINGLERESP"
_OCSP_RESPDATA_seq_tt dd offset	off_90+1 ; DATA	XREF: .rdata:00000424o
		dd 2 dup(0)
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_0M@CPBMKBOK@responderId?$AA@ ; "responderId"
		dd offset _OCSP_RESPID_it
		dd 2 dup(0)
		dd 8
		dd offset ??_C@_0L@KADAOIGF@producedAt?$AA@ ; "producedAt"
		dd offset _ASN1_GENERALIZEDTIME_it
		dd 4, 0
		dd 0Ch
		dd offset ??_C@_09NKKOBILA@responses?$AA@ ; "responses"
		dd offset _OCSP_SINGLERESP_it
		dd offset off_94+1
		dd 1, 10h
		dd offset ??_C@_0BD@LEANHDON@responseExtensions?$AA@ ; "responseExtensions"
		dd offset _X509_EXTENSION_it
; `OCSP_RESPDATA_it'::`2'::local_it
?local_it@?1??OCSP_RESPDATA_it@@9@9 dd 1, 10h ;	DATA XREF: _OCSP_RESPDATA_ito
					; _OCSP_RESPDATA_freeo	...
		dd offset _OCSP_RESPDATA_seq_tt
		dd 5, 0
		dd 14h
		dd offset ??_C@_0O@GNAMNHBK@OCSP_RESPDATA?$AA@ ; "OCSP_RESPDATA"
_OCSP_BASICRESP_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:00000490o
		dd offset ??_C@_0BA@OOPOFNLG@tbsResponseData?$AA@ ; "tbsResponseData"
		dd offset _OCSP_RESPDATA_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_0BD@CBMBFDMH@signatureAlgorithm?$AA@ ; "signatureAlgorithm"
		dd offset _X509_ALGOR_it
		dd 2 dup(0)
		dd 8
		dd offset ??_C@_09CMIIOJHF@signature?$AA@ ; "signature"
		dd offset _ASN1_BIT_STRING_it
		dd offset off_94+1
		dd 0
		dd 0Ch
		dd offset ??_C@_05HFDFJDL@certs?$AA@ ; "certs"
		dd offset _X509_it
; `OCSP_BASICRESP_it'::`2'::local_it
?local_it@?1??OCSP_BASICRESP_it@@9@9 dd	1, 10h ; DATA XREF: _OCSP_BASICRESP_freeo
					; _OCSP_BASICRESP_ito ...
		dd offset _OCSP_BASICRESP_seq_tt
		dd 4, 0
		dd 10h
		dd offset ??_C@_0P@CPCDLAO@OCSP_BASICRESP?$AA@ ; "OCSP_BASICRESP"
_OCSP_CRLID_seq_tt dd offset off_90+1	; DATA XREF: .rdata:000004E8o
		align 10h
		dd offset ??_C@_06KAALCHHK@crlUrl?$AA@ ; "crlUrl"
		dd offset _ASN1_IA5STRING_it
		dd offset off_90+1
		dd 1, 4
		dd offset ??_C@_06DLEHNACA@crlNum?$AA@ ; "crlNum"
		dd offset _ASN1_INTEGER_it
		dd offset off_90+1
		dd 2, 8
		dd offset ??_C@_07BDEAJPPO@crlTime?$AA@	; "crlTime"
		dd offset _ASN1_GENERALIZEDTIME_it
; `OCSP_CRLID_it'::`2'::local_it
?local_it@?1??OCSP_CRLID_it@@9@9 dd 1, 10h ; DATA XREF:	_OCSP_CRLID_freeo
					; _OCSP_CRLID_ito ...
		dd offset _OCSP_CRLID_seq_tt
		dd 3, 0
		dd 0Ch
		dd offset ??_C@_0L@JOKCDHBA@OCSP_CRLID?$AA@ ; "OCSP_CRLID"
_OCSP_SERVICELOC_seq_tt	dd 3 dup(0)	; DATA XREF: .rdata:0000052Co
		dd offset ??_C@_06EAINIONG@issuer?$AA@ ; "issuer"
		dd offset _X509_NAME_it
		dd 5, 0
		dd 4
		dd offset ??_C@_07PAIKCKMF@locator?$AA@	; "locator"
		dd offset _ACCESS_DESCRIPTION_it
; `OCSP_SERVICELOC_it'::`2'::local_it
?local_it@?1??OCSP_SERVICELOC_it@@9@9 dd 1, 10h	; DATA XREF: _OCSP_SERVICELOC_freeo
					; _OCSP_SERVICELOC_ito	...
		dd offset _OCSP_SERVICELOC_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0BA@JLGHGCLL@OCSP_SERVICELOC?$AA@ ; "OCSP_SERVICELOC"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 540h
; COMDAT (pick any)
		public ??_C@_0BD@CBMBFDMH@signatureAlgorithm?$AA@
; `string'
??_C@_0BD@CBMBFDMH@signatureAlgorithm?$AA@ db 'signatureAlgorithm',0
					; DATA XREF: .rdata:00000024o
					; .rdata:00000458o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 554h
; COMDAT (pick any)
		public ??_C@_09CMIIOJHF@signature?$AA@
; `string'
??_C@_09CMIIOJHF@signature?$AA@	db 'signature',0 ; DATA XREF: .rdata:00000038o
					; .rdata:0000046Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 560h
; COMDAT (pick any)
		public ??_C@_05HFDFJDL@certs?$AA@
; `string'
??_C@_05HFDFJDL@certs?$AA@ db 'certs',0 ; DATA XREF: .rdata:0000004Co
					; .rdata:00000480o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 568h
; COMDAT (pick any)
		public ??_C@_0P@OIPGPNII@OCSP_SIGNATURE?$AA@
; `string'
??_C@_0P@OIPGPNII@OCSP_SIGNATURE?$AA@ db 'OCSP_SIGNATURE',0 ; DATA XREF: .rdata:0000006Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 578h
; COMDAT (pick any)
		public ??_C@_0O@DHJLLKEK@hashAlgorithm?$AA@
; `string'
??_C@_0O@DHJLLKEK@hashAlgorithm?$AA@ db	'hashAlgorithm',0 ; DATA XREF: .rdata:0000007Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 588h
; COMDAT (pick any)
		public ??_C@_0P@EKEFMOEP@issuerNameHash?$AA@
; `string'
??_C@_0P@EKEFMOEP@issuerNameHash?$AA@ db 'issuerNameHash',0 ; DATA XREF: .rdata:off_90o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 598h
; COMDAT (pick any)
		public ??_C@_0O@KPBFDKHB@issuerKeyHash?$AA@
; `string'
??_C@_0O@KPBFDKHB@issuerKeyHash?$AA@ db	'issuerKeyHash',0 ; DATA XREF: .rdata:000000A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5A8h
; COMDAT (pick any)
		public ??_C@_0N@OMOHFKCJ@serialNumber?$AA@
; `string'
??_C@_0N@OMOHFKCJ@serialNumber?$AA@ db 'serialNumber',0 ; DATA XREF: .rdata:000000B8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5B8h
; COMDAT (pick any)
		public ??_C@_0M@OCJEDPID@OCSP_CERTID?$AA@
; `string'
??_C@_0M@OCJEDPID@OCSP_CERTID?$AA@ db 'OCSP_CERTID',0 ; DATA XREF: .rdata:000000D8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5C4h
; COMDAT (pick any)
		public ??_C@_07GCNFCODJ@reqCert?$AA@
; `string'
??_C@_07GCNFCODJ@reqCert?$AA@ db 'reqCert',0 ; DATA XREF: .rdata:000000E8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5CCh
; COMDAT (pick any)
		public ??_C@_0BI@PPJDGJOP@singleRequestExtensions?$AA@
; `string'
??_C@_0BI@PPJDGJOP@singleRequestExtensions?$AA@	db 'singleRequestExtensions',0
					; DATA XREF: .rdata:000000FCo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5E4h
; COMDAT (pick any)
		public ??_C@_0M@IGPHKOAK@OCSP_ONEREQ?$AA@
; `string'
??_C@_0M@IGPHKOAK@OCSP_ONEREQ?$AA@ db 'OCSP_ONEREQ',0 ; DATA XREF: .rdata:0000011Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPID_it
_OCSP_RESPID_it	proc near		; DATA XREF: .rdata:000003DCo
		mov	eax, offset ?local_it@?1??OCSP_RESPID_it@@9@9 ;	`OCSP_RESPID_it'::`2'::local_it
		retn
_OCSP_RESPID_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5F8h
; COMDAT (pick any)
		public ??_C@_07CPCPJPKL@version?$AA@
; `string'
??_C@_07CPCPJPKL@version?$AA@ db 'version',0 ; DATA XREF: .rdata:0000012Co
					; .rdata:000003C4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 600h
; COMDAT (pick any)
		public ??_C@_0O@NHDBCFOA@requestorName?$AA@
; `string'
??_C@_0O@NHDBCFOA@requestorName?$AA@ db	'requestorName',0 ; DATA XREF: .rdata:00000140o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 610h
; COMDAT (pick any)
		public ??_C@_0M@NNJGDIDJ@requestList?$AA@
; `string'
??_C@_0M@NNJGDIDJ@requestList?$AA@ db 'requestList',0 ; DATA XREF: .rdata:00000154o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 61Ch
; COMDAT (pick any)
		public ??_C@_0BC@CPAMEDLH@requestExtensions?$AA@
; `string'
??_C@_0BC@CPAMEDLH@requestExtensions?$AA@ db 'requestExtensions',0
					; DATA XREF: .rdata:00000168o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 630h
; COMDAT (pick any)
		public ??_C@_0N@DDBEOJJA@OCSP_REQINFO?$AA@
; `string'
??_C@_0N@DDBEOJJA@OCSP_REQINFO?$AA@ db 'OCSP_REQINFO',0 ; DATA XREF: .rdata:00000188o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 640h
; COMDAT (pick any)
		public ??_C@_0L@OIGCAPNH@tbsRequest?$AA@
; `string'
??_C@_0L@OIGCAPNH@tbsRequest?$AA@ db 'tbsRequest',0 ; DATA XREF: .rdata:00000198o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64Ch
; COMDAT (pick any)
		public ??_C@_0BC@GKDKILGO@optionalSignature?$AA@
; `string'
??_C@_0BC@GKDKILGO@optionalSignature?$AA@ db 'optionalSignature',0
					; DATA XREF: .rdata:000001ACo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 660h
; COMDAT (pick any)
		public ??_C@_0N@PCNOLOBD@OCSP_REQUEST?$AA@
; `string'
??_C@_0N@PCNOLOBD@OCSP_REQUEST?$AA@ db 'OCSP_REQUEST',0 ; DATA XREF: .rdata:000001CCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 670h
; COMDAT (pick any)
		public ??_C@_0N@FPIGADMM@responseType?$AA@
; `string'
??_C@_0N@FPIGADMM@responseType?$AA@ db 'responseType',0 ; DATA XREF: .rdata:000001DCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 680h
; COMDAT (pick any)
		public ??_C@_08HKMEAON@response?$AA@
; `string'
??_C@_08HKMEAON@response?$AA@ db 'response',0 ; DATA XREF: .rdata:000001F0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68Ch
; COMDAT (pick any)
		public ??_C@_0P@ONFJGMLI@OCSP_RESPBYTES?$AA@
; `string'
??_C@_0P@ONFJGMLI@OCSP_RESPBYTES?$AA@ db 'OCSP_RESPBYTES',0 ; DATA XREF: .rdata:00000210o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 69Ch
; COMDAT (pick any)
		public ??_C@_0P@GEHCLFGI@responseStatus?$AA@
; `string'
??_C@_0P@GEHCLFGI@responseStatus?$AA@ db 'responseStatus',0 ; DATA XREF: .rdata:00000220o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6ACh
; COMDAT (pick any)
		public ??_C@_0O@MMHCFEHM@responseBytes?$AA@
; `string'
??_C@_0O@MMHCFEHM@responseBytes?$AA@ db	'responseBytes',0 ; DATA XREF: .rdata:00000234o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6BCh
; COMDAT (pick any)
		public ??_C@_0O@CDJMCFNM@OCSP_RESPONSE?$AA@
; `string'
??_C@_0O@CDJMCFNM@OCSP_RESPONSE?$AA@ db	'OCSP_RESPONSE',0 ; DATA XREF: .rdata:00000254o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6CCh
; COMDAT (pick any)
		public ??_C@_0N@OFBDHEPF@value?4byName?$AA@
; `string'
??_C@_0N@OFBDHEPF@value?4byName?$AA@ db	'value.byName',0 ; DATA XREF: .rdata:00000264o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6DCh
; COMDAT (pick any)
		public ??_C@_0M@OFGLOCKB@value?4byKey?$AA@
; `string'
??_C@_0M@OFGLOCKB@value?4byKey?$AA@ db 'value.byKey',0 ; DATA XREF: .rdata:00000278o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6E8h
; COMDAT (pick any)
		public ??_C@_0M@JBDPBGBO@OCSP_RESPID?$AA@
; `string'
??_C@_0M@JBDPBGBO@OCSP_RESPID?$AA@ db 'OCSP_RESPID',0 ; DATA XREF: .rdata:00000298o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6F4h
; COMDAT (pick any)
		public ??_C@_0P@MHJPNEEK@revocationTime?$AA@
; `string'
??_C@_0P@MHJPNEEK@revocationTime?$AA@ db 'revocationTime',0 ; DATA XREF: .rdata:000002A8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 704h
; COMDAT (pick any)
		public ??_C@_0BB@JHENKMOK@revocationReason?$AA@
; `string'
??_C@_0BB@JHENKMOK@revocationReason?$AA@ db 'revocationReason',0
					; DATA XREF: .rdata:000002BCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 718h
; COMDAT (pick any)
		public ??_C@_0BB@CFNKINIP@OCSP_REVOKEDINFO?$AA@
; `string'
??_C@_0BB@CFNKINIP@OCSP_REVOKEDINFO?$AA@ db 'OCSP_REVOKEDINFO',0
					; DATA XREF: .rdata:000002DCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 72Ch
; COMDAT (pick any)
		public ??_C@_0L@MEIDNBL@value?4good?$AA@
; `string'
??_C@_0L@MEIDNBL@value?4good?$AA@ db 'value.good',0 ; DATA XREF: .rdata:000002ECo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 738h
; COMDAT (pick any)
		public ??_C@_0O@GCBEBIKI@value?4revoked?$AA@
; `string'
??_C@_0O@GCBEBIKI@value?4revoked?$AA@ db 'value.revoked',0 ; DATA XREF: .rdata:00000300o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 748h
; COMDAT (pick any)
		public ??_C@_0O@ICNBHFHN@value?4unknown?$AA@
; `string'
??_C@_0O@ICNBHFHN@value?4unknown?$AA@ db 'value.unknown',0 ; DATA XREF: .rdata:00000314o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 758h
; COMDAT (pick any)
		public ??_C@_0BA@JBJHLNOJ@OCSP_CERTSTATUS?$AA@
; `string'
??_C@_0BA@JBJHLNOJ@OCSP_CERTSTATUS?$AA@	db 'OCSP_CERTSTATUS',0 ; DATA XREF: .rdata:00000334o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 768h
; COMDAT (pick any)
		public ??_C@_06JJGBHEJI@certId?$AA@
; `string'
??_C@_06JJGBHEJI@certId?$AA@ db	'certId',0 ; DATA XREF: .rdata:00000344o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 770h
; COMDAT (pick any)
		public ??_C@_0L@IGGFAGC@certStatus?$AA@
; `string'
??_C@_0L@IGGFAGC@certStatus?$AA@ db 'certStatus',0 ; DATA XREF: .rdata:00000358o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 77Ch
; COMDAT (pick any)
		public ??_C@_0L@BEDJFPDO@thisUpdate?$AA@
; `string'
??_C@_0L@BEDJFPDO@thisUpdate?$AA@ db 'thisUpdate',0 ; DATA XREF: .rdata:0000036Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 788h
; COMDAT (pick any)
		public ??_C@_0L@BMOABHOK@nextUpdate?$AA@
; `string'
??_C@_0L@BMOABHOK@nextUpdate?$AA@ db 'nextUpdate',0 ; DATA XREF: .rdata:00000380o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 794h
; COMDAT (pick any)
		public ??_C@_0BB@BHCHCCEI@singleExtensions?$AA@
; `string'
??_C@_0BB@BHCHCCEI@singleExtensions?$AA@ db 'singleExtensions',0
					; DATA XREF: .rdata:00000394o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7A8h
; COMDAT (pick any)
		public ??_C@_0BA@CEMENBMB@OCSP_SINGLERESP?$AA@
; `string'
??_C@_0BA@CEMENBMB@OCSP_SINGLERESP?$AA@	db 'OCSP_SINGLERESP',0 ; DATA XREF: .rdata:000003B4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7B8h
; COMDAT (pick any)
		public ??_C@_0M@CPBMKBOK@responderId?$AA@
; `string'
??_C@_0M@CPBMKBOK@responderId?$AA@ db 'responderId',0 ; DATA XREF: .rdata:000003D8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7C4h
; COMDAT (pick any)
		public ??_C@_0L@KADAOIGF@producedAt?$AA@
; `string'
??_C@_0L@KADAOIGF@producedAt?$AA@ db 'producedAt',0 ; DATA XREF: .rdata:000003ECo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7D0h
; COMDAT (pick any)
		public ??_C@_09NKKOBILA@responses?$AA@
; `string'
??_C@_09NKKOBILA@responses?$AA@	db 'responses',0 ; DATA XREF: .rdata:00000400o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7DCh
; COMDAT (pick any)
		public ??_C@_0BD@LEANHDON@responseExtensions?$AA@
; `string'
??_C@_0BD@LEANHDON@responseExtensions?$AA@ db 'responseExtensions',0
					; DATA XREF: .rdata:00000414o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7F0h
; COMDAT (pick any)
		public ??_C@_0O@GNAMNHBK@OCSP_RESPDATA?$AA@
; `string'
??_C@_0O@GNAMNHBK@OCSP_RESPDATA?$AA@ db	'OCSP_RESPDATA',0 ; DATA XREF: .rdata:00000434o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 800h
; COMDAT (pick any)
		public ??_C@_0BA@OOPOFNLG@tbsResponseData?$AA@
; `string'
??_C@_0BA@OOPOFNLG@tbsResponseData?$AA@	db 'tbsResponseData',0 ; DATA XREF: .rdata:00000444o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 810h
; COMDAT (pick any)
		public ??_C@_0P@CPCDLAO@OCSP_BASICRESP?$AA@
; `string'
??_C@_0P@CPCDLAO@OCSP_BASICRESP?$AA@ db	'OCSP_BASICRESP',0 ; DATA XREF: .rdata:000004A0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 820h
; COMDAT (pick any)
		public ??_C@_06KAALCHHK@crlUrl?$AA@
; `string'
??_C@_06KAALCHHK@crlUrl?$AA@ db	'crlUrl',0 ; DATA XREF: .rdata:000004B0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 828h
; COMDAT (pick any)
		public ??_C@_06DLEHNACA@crlNum?$AA@
; `string'
??_C@_06DLEHNACA@crlNum?$AA@ db	'crlNum',0 ; DATA XREF: .rdata:000004C4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 830h
; COMDAT (pick any)
		public ??_C@_07BDEAJPPO@crlTime?$AA@
; `string'
??_C@_07BDEAJPPO@crlTime?$AA@ db 'crlTime',0 ; DATA XREF: .rdata:000004D8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 838h
; COMDAT (pick any)
		public ??_C@_0L@JOKCDHBA@OCSP_CRLID?$AA@
; `string'
??_C@_0L@JOKCDHBA@OCSP_CRLID?$AA@ db 'OCSP_CRLID',0 ; DATA XREF: .rdata:000004F8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 844h
; COMDAT (pick any)
		public ??_C@_06EAINIONG@issuer?$AA@
; `string'
??_C@_06EAINIONG@issuer?$AA@ db	'issuer',0 ; DATA XREF: .rdata:00000508o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84Ch
; COMDAT (pick any)
		public ??_C@_07PAIKCKMF@locator?$AA@
; `string'
??_C@_07PAIKCKMF@locator?$AA@ db 'locator',0 ; DATA XREF: .rdata:0000051Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 854h
; COMDAT (pick any)
		public ??_C@_0BA@JLGHGCLL@OCSP_SERVICELOC?$AA@
; `string'
??_C@_0BA@JLGHGCLL@OCSP_SERVICELOC?$AA@	db 'OCSP_SERVICELOC',0 ; DATA XREF: .rdata:0000053Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 864h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SINGLERESP_it
_OCSP_SINGLERESP_it proc near		; DATA XREF: .rdata:00000404o
		mov	eax, offset ?local_it@?1??OCSP_SINGLERESP_it@@9@9 ; `OCSP_SINGLERESP_it'::`2'::local_it
		retn
_OCSP_SINGLERESP_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 86Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CERTSTATUS_it
_OCSP_CERTSTATUS_it proc near		; DATA XREF: .rdata:0000035Co
		mov	eax, offset ?local_it@?1??OCSP_CERTSTATUS_it@@9@9 ; `OCSP_CERTSTATUS_it'::`2'::local_it
		retn
_OCSP_CERTSTATUS_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 874h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REVOKEDINFO_it
_OCSP_REVOKEDINFO_it proc near		; DATA XREF: .rdata:00000304o
		mov	eax, offset ?local_it@?1??OCSP_REVOKEDINFO_it@@9@9 ; `OCSP_REVOKEDINFO_it'::`2'::local_it
		retn
_OCSP_REVOKEDINFO_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 87Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPDATA_it
_OCSP_RESPDATA_it proc near		; DATA XREF: .rdata:00000448o
		mov	eax, offset ?local_it@?1??OCSP_RESPDATA_it@@9@9	; `OCSP_RESPDATA_it'::`2'::local_it
		retn
_OCSP_RESPDATA_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 884h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPBYTES_it
_OCSP_RESPBYTES_it proc	near		; DATA XREF: .rdata:00000238o
		mov	eax, offset ?local_it@?1??OCSP_RESPBYTES_it@@9@9 ; `OCSP_RESPBYTES_it'::`2'::local_it
		retn
_OCSP_RESPBYTES_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 88Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_ONEREQ_it
_OCSP_ONEREQ_it	proc near		; DATA XREF: .rdata:00000158o
		mov	eax, offset ?local_it@?1??OCSP_ONEREQ_it@@9@9 ;	`OCSP_ONEREQ_it'::`2'::local_it
		retn
_OCSP_ONEREQ_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 894h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_BASICRESP_free
_OCSP_BASICRESP_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_BASICRESP_it@@9@9 ; `OCSP_BASICRESP_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_BASICRESP_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8A8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_BASICRESP_it
_OCSP_BASICRESP_it proc	near
		mov	eax, offset ?local_it@?1??OCSP_BASICRESP_it@@9@9 ; `OCSP_BASICRESP_it'::`2'::local_it
		retn
_OCSP_BASICRESP_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8B0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_BASICRESP_new
_OCSP_BASICRESP_new proc near
		push	offset ?local_it@?1??OCSP_BASICRESP_it@@9@9 ; `OCSP_BASICRESP_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_BASICRESP_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8C0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CERTID_free
_OCSP_CERTID_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_CERTID_it@@9@9 ; `OCSP_CERTID_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_CERTID_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CERTID_new
_OCSP_CERTID_new proc near
		push	offset ?local_it@?1??OCSP_CERTID_it@@9@9 ; `OCSP_CERTID_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_CERTID_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CERTSTATUS_free
_OCSP_CERTSTATUS_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_CERTSTATUS_it@@9@9 ; `OCSP_CERTSTATUS_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_CERTSTATUS_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8F8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CERTSTATUS_new
_OCSP_CERTSTATUS_new proc near
		push	offset ?local_it@?1??OCSP_CERTSTATUS_it@@9@9 ; `OCSP_CERTSTATUS_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_CERTSTATUS_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 908h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CRLID_free
_OCSP_CRLID_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_CRLID_it@@9@9	; `OCSP_CRLID_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_CRLID_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 91Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CRLID_it
_OCSP_CRLID_it	proc near
		mov	eax, offset ?local_it@?1??OCSP_CRLID_it@@9@9 ; `OCSP_CRLID_it'::`2'::local_it
		retn
_OCSP_CRLID_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 924h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_CRLID_new
_OCSP_CRLID_new	proc near
		push	offset ?local_it@?1??OCSP_CRLID_it@@9@9	; `OCSP_CRLID_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_CRLID_new	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 934h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_ONEREQ_free
_OCSP_ONEREQ_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_ONEREQ_it@@9@9 ; `OCSP_ONEREQ_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_ONEREQ_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 948h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_ONEREQ_new
_OCSP_ONEREQ_new proc near
		push	offset ?local_it@?1??OCSP_ONEREQ_it@@9@9 ; `OCSP_ONEREQ_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_ONEREQ_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 958h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REQINFO_free
_OCSP_REQINFO_free proc	near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_REQINFO_it@@9@9 ; `OCSP_REQINFO_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_REQINFO_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 96Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REQINFO_new
_OCSP_REQINFO_new proc near
		push	offset ?local_it@?1??OCSP_REQINFO_it@@9@9 ; `OCSP_REQINFO_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_REQINFO_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 97Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REQUEST_free
_OCSP_REQUEST_free proc	near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_REQUEST_it@@9@9 ; `OCSP_REQUEST_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_REQUEST_free endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 990h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REQUEST_it
_OCSP_REQUEST_it proc near
		mov	eax, offset ?local_it@?1??OCSP_REQUEST_it@@9@9 ; `OCSP_REQUEST_it'::`2'::local_it
		retn
_OCSP_REQUEST_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 998h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REQUEST_new
_OCSP_REQUEST_new proc near
		push	offset ?local_it@?1??OCSP_REQUEST_it@@9@9 ; `OCSP_REQUEST_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_REQUEST_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9A8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPBYTES_free
_OCSP_RESPBYTES_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_RESPBYTES_it@@9@9 ; `OCSP_RESPBYTES_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_RESPBYTES_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPBYTES_new
_OCSP_RESPBYTES_new proc near
		push	offset ?local_it@?1??OCSP_RESPBYTES_it@@9@9 ; `OCSP_RESPBYTES_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_RESPBYTES_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9CCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPDATA_free
_OCSP_RESPDATA_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_RESPDATA_it@@9@9 ; `OCSP_RESPDATA_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_RESPDATA_free endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9E0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPDATA_new
_OCSP_RESPDATA_new proc	near
		push	offset ?local_it@?1??OCSP_RESPDATA_it@@9@9 ; `OCSP_RESPDATA_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_RESPDATA_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPID_free
_OCSP_RESPID_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_RESPID_it@@9@9 ; `OCSP_RESPID_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_RESPID_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A04h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPID_new
_OCSP_RESPID_new proc near
		push	offset ?local_it@?1??OCSP_RESPID_it@@9@9 ; `OCSP_RESPID_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_RESPID_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A14h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPONSE_free
_OCSP_RESPONSE_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_RESPONSE_it@@9@9 ; `OCSP_RESPONSE_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_RESPONSE_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A28h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPONSE_it
_OCSP_RESPONSE_it proc near
		mov	eax, offset ?local_it@?1??OCSP_RESPONSE_it@@9@9	; `OCSP_RESPONSE_it'::`2'::local_it
		retn
_OCSP_RESPONSE_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A30h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_RESPONSE_new
_OCSP_RESPONSE_new proc	near
		push	offset ?local_it@?1??OCSP_RESPONSE_it@@9@9 ; `OCSP_RESPONSE_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_RESPONSE_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A40h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REVOKEDINFO_free
_OCSP_REVOKEDINFO_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_REVOKEDINFO_it@@9@9 ;	`OCSP_REVOKEDINFO_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_REVOKEDINFO_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A54h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_REVOKEDINFO_new
_OCSP_REVOKEDINFO_new proc near
		push	offset ?local_it@?1??OCSP_REVOKEDINFO_it@@9@9 ;	`OCSP_REVOKEDINFO_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_REVOKEDINFO_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A64h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SERVICELOC_free
_OCSP_SERVICELOC_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_SERVICELOC_it@@9@9 ; `OCSP_SERVICELOC_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_SERVICELOC_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A78h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SERVICELOC_it
_OCSP_SERVICELOC_it proc near
		mov	eax, offset ?local_it@?1??OCSP_SERVICELOC_it@@9@9 ; `OCSP_SERVICELOC_it'::`2'::local_it
		retn
_OCSP_SERVICELOC_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A80h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SERVICELOC_new
_OCSP_SERVICELOC_new proc near
		push	offset ?local_it@?1??OCSP_SERVICELOC_it@@9@9 ; `OCSP_SERVICELOC_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_SERVICELOC_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A90h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SIGNATURE_free
_OCSP_SIGNATURE_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_SIGNATURE_it@@9@9 ; `OCSP_SIGNATURE_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_SIGNATURE_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AA4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SIGNATURE_new
_OCSP_SIGNATURE_new proc near
		push	offset ?local_it@?1??OCSP_SIGNATURE_it@@9@9 ; `OCSP_SIGNATURE_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_SIGNATURE_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AB4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SINGLERESP_free
_OCSP_SINGLERESP_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??OCSP_SINGLERESP_it@@9@9 ; `OCSP_SINGLERESP_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_OCSP_SINGLERESP_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AC8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _OCSP_SINGLERESP_new
_OCSP_SINGLERESP_new proc near
		push	offset ?local_it@?1??OCSP_SINGLERESP_it@@9@9 ; `OCSP_SINGLERESP_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_OCSP_SINGLERESP_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AD8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_BASICRESP
_d2i_OCSP_BASICRESP proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_BASICRESP_it@@9@9 ; `OCSP_BASICRESP_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_BASICRESP endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AF4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_CERTID
_d2i_OCSP_CERTID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_CERTID_it@@9@9 ; `OCSP_CERTID_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_CERTID endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B10h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_CERTSTATUS
_d2i_OCSP_CERTSTATUS proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_CERTSTATUS_it@@9@9 ; `OCSP_CERTSTATUS_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_CERTSTATUS endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B2Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_CRLID
_d2i_OCSP_CRLID	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_CRLID_it@@9@9	; `OCSP_CRLID_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_CRLID	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B48h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_ONEREQ
_d2i_OCSP_ONEREQ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_ONEREQ_it@@9@9 ; `OCSP_ONEREQ_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_ONEREQ endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B64h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_REQINFO
_d2i_OCSP_REQINFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_REQINFO_it@@9@9 ; `OCSP_REQINFO_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_REQINFO endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B80h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_REQUEST
_d2i_OCSP_REQUEST proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_REQUEST_it@@9@9 ; `OCSP_REQUEST_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_REQUEST endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B9Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_RESPBYTES
_d2i_OCSP_RESPBYTES proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_RESPBYTES_it@@9@9 ; `OCSP_RESPBYTES_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_RESPBYTES endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BB8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_RESPDATA
_d2i_OCSP_RESPDATA proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_RESPDATA_it@@9@9 ; `OCSP_RESPDATA_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_RESPDATA endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BD4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_RESPID
_d2i_OCSP_RESPID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_RESPID_it@@9@9 ; `OCSP_RESPID_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_RESPID endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BF0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_RESPONSE
_d2i_OCSP_RESPONSE proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_RESPONSE_it@@9@9 ; `OCSP_RESPONSE_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_RESPONSE endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C0Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_REVOKEDINFO
_d2i_OCSP_REVOKEDINFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_REVOKEDINFO_it@@9@9 ;	`OCSP_REVOKEDINFO_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_REVOKEDINFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C28h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_SERVICELOC
_d2i_OCSP_SERVICELOC proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_SERVICELOC_it@@9@9 ; `OCSP_SERVICELOC_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_SERVICELOC endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C44h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_SIGNATURE
_d2i_OCSP_SIGNATURE proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_SIGNATURE_it@@9@9 ; `OCSP_SIGNATURE_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_SIGNATURE endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C60h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_OCSP_SINGLERESP
_d2i_OCSP_SINGLERESP proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??OCSP_SINGLERESP_it@@9@9 ; `OCSP_SINGLERESP_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_OCSP_SINGLERESP endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C7Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_BASICRESP
_i2d_OCSP_BASICRESP proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_BASICRESP_it@@9@9 ; `OCSP_BASICRESP_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_BASICRESP endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C94h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_CERTID
_i2d_OCSP_CERTID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_CERTID_it@@9@9 ; `OCSP_CERTID_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_CERTID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0CACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_CERTSTATUS
_i2d_OCSP_CERTSTATUS proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_CERTSTATUS_it@@9@9 ; `OCSP_CERTSTATUS_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_CERTSTATUS endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0CC4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_CRLID
_i2d_OCSP_CRLID	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_CRLID_it@@9@9	; `OCSP_CRLID_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_CRLID	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0CDCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_ONEREQ
_i2d_OCSP_ONEREQ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_ONEREQ_it@@9@9 ; `OCSP_ONEREQ_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_ONEREQ endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0CF4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_REQINFO
_i2d_OCSP_REQINFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_REQINFO_it@@9@9 ; `OCSP_REQINFO_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_REQINFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D0Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_REQUEST
_i2d_OCSP_REQUEST proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_REQUEST_it@@9@9 ; `OCSP_REQUEST_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_REQUEST endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D24h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_RESPBYTES
_i2d_OCSP_RESPBYTES proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_RESPBYTES_it@@9@9 ; `OCSP_RESPBYTES_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_RESPBYTES endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D3Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_RESPDATA
_i2d_OCSP_RESPDATA proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_RESPDATA_it@@9@9 ; `OCSP_RESPDATA_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_RESPDATA endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D54h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_RESPID
_i2d_OCSP_RESPID proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_RESPID_it@@9@9 ; `OCSP_RESPID_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_RESPID endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D6Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_RESPONSE
_i2d_OCSP_RESPONSE proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_RESPONSE_it@@9@9 ; `OCSP_RESPONSE_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_RESPONSE endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D84h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_REVOKEDINFO
_i2d_OCSP_REVOKEDINFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_REVOKEDINFO_it@@9@9 ;	`OCSP_REVOKEDINFO_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_REVOKEDINFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0D9Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_SERVICELOC
_i2d_OCSP_SERVICELOC proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_SERVICELOC_it@@9@9 ; `OCSP_SERVICELOC_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_SERVICELOC endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0DB4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_SIGNATURE
_i2d_OCSP_SIGNATURE proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_SIGNATURE_it@@9@9 ; `OCSP_SIGNATURE_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_SIGNATURE endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0DCCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_OCSP_SINGLERESP
_i2d_OCSP_SINGLERESP proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??OCSP_SINGLERESP_it@@9@9 ; `OCSP_SINGLERESP_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_OCSP_SINGLERESP endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ASN1_OBJECT_it:near ; DATA XREF:	.rdata:000001E0o
		extrn _ASN1_BIT_STRING_it:near ; DATA XREF: .rdata:0000003Co
					; .rdata:00000470o
		extrn _ASN1_INTEGER_it:near ; DATA XREF: .rdata:000000BCo
					; .rdata:00000130o ...
		extrn _ASN1_ENUMERATED_it:near ; DATA XREF: .rdata:00000224o
					; .rdata:000002C0o
		extrn _GENERAL_NAME_it:near ; DATA XREF: .rdata:00000144o
		extrn _ASN1_OCTET_STRING_it:near ; DATA	XREF: .rdata:off_94o
					; .rdata:000000A8o ...
		extrn _ASN1_NULL_it:near ; DATA	XREF: .rdata:000002F0o
					; .rdata:00000318o
		extrn _ASN1_IA5STRING_it:near ;	DATA XREF: .rdata:000004B4o
		extrn _ASN1_GENERALIZEDTIME_it:near ; DATA XREF: .rdata:000002ACo
					; .rdata:00000370o ...
		extrn _ACCESS_DESCRIPTION_it:near ; DATA XREF: .rdata:00000520o
		extrn _X509_ALGOR_it:near ; DATA XREF: .rdata:00000028o
					; .rdata:00000080o ...
		extrn _X509_EXTENSION_it:near ;	DATA XREF: .rdata:00000100o
					; .rdata:0000016Co ...
		extrn _X509_NAME_it:near ; DATA	XREF: .rdata:00000268o
					; .rdata:0000050Co
		extrn _X509_it:near	; DATA XREF: .rdata:00000050o
					; .rdata:00000484o
		extrn _ASN1_item_new:near ; CODE XREF: _OCSP_BASICRESP_new+5p
					; _OCSP_CERTID_new+5p ...
		extrn _ASN1_item_free:near ; CODE XREF:	_OCSP_BASICRESP_free+9p
					; _OCSP_CERTID_free+9p	...
		extrn _ASN1_item_d2i:near ; CODE XREF: _d2i_OCSP_BASICRESP+11p
					; _d2i_OCSP_CERTID+11p	...
		extrn _ASN1_item_i2d:near ; CODE XREF: _i2d_OCSP_BASICRESP+Dp
					; _i2d_OCSP_CERTID+Dp ...


		end

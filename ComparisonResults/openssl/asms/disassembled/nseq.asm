;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	FD426559EB591DDAE45ACC7504CFFA39
; Input	CRC32 :	5E7C21F1

; File Name   :	C:\compspace\Diff\openssl\obj\nseq.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _nseq_main
_nseq_main	proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		mov	eax, 14h
		call	__chkstk
		push	ebx
		push	ebp
		xor	eax, eax
		mov	[esp+1Ch+var_C], 1
		push	esi
		push	edi
		xor	edi, edi
		mov	[esp+24h+var_14], eax
		xor	ebp, ebp
		mov	[esp+24h+var_8], edi
		mov	[esp+24h+var_10], eax
		mov	[esp+24h+var_4], eax
		cmp	dword ptr ds:_bio_err, eax
		jnz	short loc_4E
		push	ebp
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	dword ptr ds:_bio_err, eax

loc_4E:					; CODE XREF: _nseq_main+32j
		call	_ERR_load_crypto_strings
		mov	esi, [esp+24h+arg_4]
		add	esi, 4
		nop	word ptr [eax+eax+00h]

loc_60:					; CODE XREF: _nseq_main+144j
		mov	edx, [esi]
		test	edx, edx
		jz	loc_14C
		cmp	byte ptr [edx],	2Dh ; '-'
		jnz	loc_14C
		mov	ecx, offset ??_C@_06EGJKJJJI@?9toseq?$AA@ ; "-toseq"
		mov	eax, edx
		nop	word ptr [eax+eax+00h]

loc_80:					; CODE XREF: _nseq_main+9Aj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_A0
		test	bl, bl
		jz	short loc_9C
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_A0
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_80

loc_9C:					; CODE XREF: _nseq_main+88j
		xor	eax, eax
		jmp	short loc_A5
; ---------------------------------------------------------------------------

loc_A0:					; CODE XREF: _nseq_main+84j
					; _nseq_main+90j
		sbb	eax, eax
		or	eax, 1

loc_A5:					; CODE XREF: _nseq_main+9Ej
		test	eax, eax
		jnz	short loc_B6
		mov	[esp+24h+var_4], 1
		jmp	loc_13F
; ---------------------------------------------------------------------------

loc_B6:					; CODE XREF: _nseq_main+A7j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, edx
		nop	dword ptr [eax]

loc_C0:					; CODE XREF: _nseq_main+DAj
		mov	bl, [eax]
		cmp	bl, [ecx]
		jnz	short loc_E0
		test	bl, bl
		jz	short loc_DC
		mov	bl, [eax+1]
		cmp	bl, [ecx+1]
		jnz	short loc_E0
		add	eax, 2
		add	ecx, 2
		test	bl, bl
		jnz	short loc_C0

loc_DC:					; CODE XREF: _nseq_main+C8j
		xor	eax, eax
		jmp	short loc_E5
; ---------------------------------------------------------------------------

loc_E0:					; CODE XREF: _nseq_main+C4j
					; _nseq_main+D0j
		sbb	eax, eax
		or	eax, 1

loc_E5:					; CODE XREF: _nseq_main+DEj
		test	eax, eax
		jnz	short loc_FA
		cmp	[esi+4], ebp
		jz	short loc_13A
		mov	ebx, [esi+4]
		add	esi, 4
		mov	[esp+24h+var_14], ebx
		jmp	short loc_13F
; ---------------------------------------------------------------------------

loc_FA:					; CODE XREF: _nseq_main+E7j
		mov	eax, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		nop

loc_100:				; CODE XREF: _nseq_main+11Aj
		mov	cl, [edx]
		cmp	cl, [eax]
		jnz	short loc_120
		test	cl, cl
		jz	short loc_11C
		mov	cl, [edx+1]
		cmp	cl, [eax+1]
		jnz	short loc_120
		add	edx, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_100

loc_11C:				; CODE XREF: _nseq_main+108j
		xor	eax, eax
		jmp	short loc_125
; ---------------------------------------------------------------------------

loc_120:				; CODE XREF: _nseq_main+104j
					; _nseq_main+110j
		sbb	eax, eax
		or	eax, 1

loc_125:				; CODE XREF: _nseq_main+11Ej
		test	eax, eax
		jnz	short loc_13A
		cmp	[esi+4], ebp
		jz	short loc_13A
		mov	ebx, [esi+4]
		add	esi, 4
		mov	[esp+24h+var_8], ebx
		jmp	short loc_13F
; ---------------------------------------------------------------------------

loc_13A:				; CODE XREF: _nseq_main+ECj
					; _nseq_main+127j ...
		mov	edi, 1

loc_13F:				; CODE XREF: _nseq_main+B1j
					; _nseq_main+F8j ...
		add	esi, 4
		test	edi, edi
		jz	loc_60
		jmp	short loc_150
; ---------------------------------------------------------------------------

loc_14C:				; CODE XREF: _nseq_main+64j
					; _nseq_main+6Dj
		test	edi, edi
		jz	short loc_1C0

loc_150:				; CODE XREF: _nseq_main+14Aj
		push	offset ??_C@_0CH@PGDFEKLI@Netscape?5certificate?5sequence?5ut@ ; "Netscape certificate sequence	utility\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BG@JGPMEDPG@Usage?5nseq?5?$FLoptions?$FN?6?$AA@ ;	"Usage nseq [options]\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BG@BNNBANGN@?9in?5file?5?5input?5file?6?$AA@ ; "-in file	input file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BH@KOLPBKOB@?9out?5file?5output?5file?6?$AA@ ; "-out file	output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CD@OACBOEDA@?9toseq?5?5?5?5output?5NS?5Sequence?5fil@ ; "-toseq	 output	NS Sequence file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 30h
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------

loc_1C0:				; CODE XREF: _nseq_main+14Ej
		mov	ebx, [esp+24h+var_14]
		test	ebx, ebx
		jz	short loc_1FD
		push	offset ??_C@_01KDCPPGHE@r?$AA@ ; `string'
		push	ebx
		call	_BIO_new_file
		mov	ebx, eax
		add	esp, 8
		mov	[esp+24h+arg_4], ebx
		test	ebx, ebx
		jnz	short loc_21D
		mov	eax, [esp+24h+var_14]
		push	eax
		push	offset ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ ; "Can't open input file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	$end$60
; ---------------------------------------------------------------------------

loc_1FD:				; CODE XREF: _nseq_main+1C6j
		mov	esi, dword ptr ds:__imp____acrt_iob_func
		push	0
		push	0
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		mov	ebx, eax
		add	esp, 8
		mov	[esp+24h+arg_4], ebx
		jmp	short loc_223
; ---------------------------------------------------------------------------

loc_21D:				; CODE XREF: _nseq_main+1DEj
		mov	esi, dword ptr ds:__imp____acrt_iob_func

loc_223:				; CODE XREF: _nseq_main+21Bj
		mov	edi, [esp+24h+var_8]
		test	edi, edi
		jz	short loc_25C
		push	offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		push	edi
		call	_BIO_new_file
		mov	esi, eax
		add	esp, 8
		mov	[esp+24h+var_10], esi
		test	esi, esi
		jnz	short loc_274
		push	edi
		push	offset ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ ; "Can't open output file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	$end$60
; ---------------------------------------------------------------------------

loc_25C:				; CODE XREF: _nseq_main+229j
		push	0
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+24h+var_10], eax
		mov	esi, eax

loc_274:				; CODE XREF: _nseq_main+241j
		mov	eax, [esp+24h+var_4]
		test	eax, eax
		jz	loc_2FE
		call	_NETSCAPE_CERT_SEQUENCE_new
		mov	ebp, eax
		call	_sk_new_null
		push	0
		push	0
		push	0
		push	ebx
		mov	[ebp+4], eax
		call	_PEM_read_bio_X509
		add	esp, 10h
		test	eax, eax
		jz	short loc_2BE

loc_2A2:				; CODE XREF: _nseq_main+2BCj
		push	eax
		push	dword ptr [ebp+4]
		call	_sk_push
		push	0
		push	0
		push	0
		push	ebx
		call	_PEM_read_bio_X509
		add	esp, 18h
		test	eax, eax
		jnz	short loc_2A2

loc_2BE:				; CODE XREF: _nseq_main+2A0j
		push	dword ptr [ebp+4]
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jnz	short loc_2F2
		mov	eax, [esp+24h+var_14]
		push	eax
		push	offset ??_C@_0BN@GDMLPPDC@Error?5reading?5certs?5file?5?$CFs?6?$AA@ ; "Error reading certs file	%s\n"

loc_2D7:				; CODE XREF: _nseq_main+31Dj
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 10h
		jmp	short $end$60
; ---------------------------------------------------------------------------

loc_2F2:				; CODE XREF: _nseq_main+2CBj
		push	ebp
		push	esi
		call	_PEM_write_bio_NETSCAPE_CERT_SEQUENCE
		add	esp, 8
		jmp	short loc_361
; ---------------------------------------------------------------------------

loc_2FE:				; CODE XREF: _nseq_main+27Aj
		push	0
		push	0
		push	0
		push	ebx
		call	_PEM_read_bio_NETSCAPE_CERT_SEQUENCE
		mov	ebp, eax
		add	esp, 10h
		test	ebp, ebp
		jnz	short loc_31F
		mov	eax, [esp+24h+var_14]
		push	eax
		push	offset ??_C@_0CA@HCEPGOOI@Error?5reading?5sequence?5file?5?$CFs?6?$AA@ ; "Error	reading	sequence file %s\n"
		jmp	short loc_2D7
; ---------------------------------------------------------------------------

loc_31F:				; CODE XREF: _nseq_main+311j
		push	dword ptr [ebp+4]
		xor	edi, edi
		call	_sk_num
		add	esp, 4
		test	eax, eax
		jle	short loc_361
		mov	ebx, [esp+24h+var_10]

loc_334:				; CODE XREF: _nseq_main+35Bj
		push	edi
		push	dword ptr [ebp+4]
		call	_sk_value
		mov	esi, eax
		push	esi
		push	ebx
		call	_dump_cert_text
		push	esi
		push	ebx
		call	_PEM_write_bio_X509
		push	dword ptr [ebp+4]
		inc	edi
		call	_sk_num
		add	esp, 1Ch
		cmp	edi, eax
		jl	short loc_334
		mov	ebx, [esp+24h+arg_4]

loc_361:				; CODE XREF: _nseq_main+2FCj
					; _nseq_main+32Ej
		mov	[esp+24h+var_C], 0

$end$60:				; CODE XREF: _nseq_main+1F8j
					; _nseq_main+257j ...
		push	ebx
		call	_BIO_free
		push	[esp+28h+var_10]
		call	_BIO_free_all
		push	ebp
		call	_NETSCAPE_CERT_SEQUENCE_free
		mov	eax, [esp+30h+var_C]
		add	esp, 0Ch
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 14h
		retn
_nseq_main	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 390h
; COMDAT (pick any)
		public ??_C@_06EGJKJJJI@?9toseq?$AA@
; `string'
??_C@_06EGJKJJJI@?9toseq?$AA@ db '-toseq',0 ; DATA XREF: _nseq_main+73o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 398h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _nseq_main:loc_B6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 39Ch
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _nseq_main:loc_FAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A4h
; COMDAT (pick any)
		public ??_C@_0CH@PGDFEKLI@Netscape?5certificate?5sequence?5ut@
; `string'
??_C@_0CH@PGDFEKLI@Netscape?5certificate?5sequence?5ut@	db 'Netscape certificate sequence utility',0Ah,0
					; DATA XREF: _nseq_main:loc_150o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3CCh
; COMDAT (pick any)
		public ??_C@_0BG@JGPMEDPG@Usage?5nseq?5?$FLoptions?$FN?6?$AA@
; `string'
??_C@_0BG@JGPMEDPG@Usage?5nseq?5?$FLoptions?$FN?6?$AA@ db 'Usage nseq [options]',0Ah,0
					; DATA XREF: _nseq_main+160o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3E4h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _nseq_main+170o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F8h
; COMDAT (pick any)
		public ??_C@_0BG@BNNBANGN@?9in?5file?5?5input?5file?6?$AA@
; `string'
??_C@_0BG@BNNBANGN@?9in?5file?5?5input?5file?6?$AA@ db '-in file  input file',0Ah,0
					; DATA XREF: _nseq_main+180o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 410h
; COMDAT (pick any)
		public ??_C@_0BH@KOLPBKOB@?9out?5file?5output?5file?6?$AA@
; `string'
??_C@_0BH@KOLPBKOB@?9out?5file?5output?5file?6?$AA@ db '-out file output file',0Ah,0
					; DATA XREF: _nseq_main+190o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 428h
; COMDAT (pick any)
		public ??_C@_0CD@OACBOEDA@?9toseq?5?5?5?5output?5NS?5Sequence?5fil@
; `string'
??_C@_0CD@OACBOEDA@?9toseq?5?5?5?5output?5NS?5Sequence?5fil@ db	'-toseq    output NS Sequence file',0Ah,0
					; DATA XREF: _nseq_main+1A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44Ch
; COMDAT (pick any)
		public ??_C@_01KDCPPGHE@r?$AA@
; `string'
??_C@_01KDCPPGHE@r?$AA@	db 72h,	0	; DATA XREF: _nseq_main+1C8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 450h
; COMDAT (pick any)
		public ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open input file %s',0Ah,0
					; DATA XREF: _nseq_main+1E5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 46Ch
; COMDAT (pick any)
		public ??_C@_01NOFIACDB@w?$AA@
; `string'
??_C@_01NOFIACDB@w?$AA@	db 77h,	0	; DATA XREF: _nseq_main+22Bo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 470h
; COMDAT (pick any)
		public ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open output file %s',0Ah,0
					; DATA XREF: _nseq_main+244o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48Ch
; COMDAT (pick any)
		public ??_C@_0BN@GDMLPPDC@Error?5reading?5certs?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BN@GDMLPPDC@Error?5reading?5certs?5file?5?$CFs?6?$AA@ db	'Error reading certs file %s',0Ah,0
					; DATA XREF: _nseq_main+2D2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4ACh
; COMDAT (pick any)
		public ??_C@_0CA@HCEPGOOI@Error?5reading?5sequence?5file?5?$CFs?6?$AA@
; `string'
??_C@_0CA@HCEPGOOI@Error?5reading?5sequence?5file?5?$CFs?6?$AA@	db 'Error reading sequence file %s',0Ah,0
					; DATA XREF: _nseq_main+318o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _nseq_main+37p
					; _nseq_main+207p ...
		extrn _sk_num:near	; CODE XREF: _nseq_main+2C1p
					; _nseq_main+324p ...
		extrn _sk_value:near	; CODE XREF: _nseq_main+338p
		extrn _sk_new_null:near	; CODE XREF: _nseq_main+287p
		extrn _sk_push:near	; CODE XREF: _nseq_main+2A6p
		extrn _BIO_new_file:near ; CODE	XREF: _nseq_main+1CEp
					; _nseq_main+231p
		extrn _BIO_new_fp:near	; CODE XREF: _nseq_main+41p
					; _nseq_main+20Dp ...
		extrn _BIO_free:near	; CODE XREF: _nseq_main+36Ap
		extrn _BIO_free_all:near ; CODE	XREF: _nseq_main+373p
		extrn _BIO_printf:near	; CODE XREF: _nseq_main+15Bp
					; _nseq_main+16Bp ...
		extrn _NETSCAPE_CERT_SEQUENCE_new:near ; CODE XREF: _nseq_main+280p
		extrn _NETSCAPE_CERT_SEQUENCE_free:near	; CODE XREF: _nseq_main+379p
		extrn _ERR_print_errors:near ; CODE XREF: _nseq_main+2E8p
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _nseq_main:loc_4Ep
		extrn _dump_cert_text:near ; CODE XREF:	_nseq_main+341p
		extrn _PEM_read_bio_X509:near ;	CODE XREF: _nseq_main+296p
					; _nseq_main+2B2p
		extrn _PEM_write_bio_X509:near ; CODE XREF: _nseq_main+348p
		extrn _PEM_read_bio_NETSCAPE_CERT_SEQUENCE:near	; CODE XREF: _nseq_main+305p
		extrn _PEM_write_bio_NETSCAPE_CERT_SEQUENCE:near
					; CODE XREF: _nseq_main+2F4p
		extrn __chkstk:near	; CODE XREF: _nseq_main+5p
		extrn _bio_err:near	; DATA XREF: _nseq_main+2Cr
					; _nseq_main+49w ...


		end

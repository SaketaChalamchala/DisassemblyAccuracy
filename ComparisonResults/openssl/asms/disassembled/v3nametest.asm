;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	4404B294EE50F52A6816AF87F2216A83
; Input	CRC32 :	8E093178

; File Name   :	C:\compspace\Diff\openssl\obj\v3nametest.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
_names		dd offset ??_C@_01MCMALHOG@a?$AA@ ; DATA XREF: _main:loc_10FAr
					; _main+19o ...
					; `string'
		dd offset ??_C@_01OJONOECF@b?$AA@ ; `string'
		dd offset ??_C@_01LFCBOECM@?4?$AA@ ; `string'
		dd offset ??_C@_01NBENCBCI@?$CK?$AA@ ; `string'
		dd offset ??_C@_01EOFPKCAF@?$EA?$AA@ ; `string'
		dd offset ??_C@_02EOILBHOB@?4a?$AA@ ; `string'
		dd offset ??_C@_02ECKMIONG@a?4?$AA@ ; `string'
		dd offset ??_C@_02GFKGEECC@?4b?$AA@ ; `string'
		dd offset ??_C@_02EAOKDAIP@b?4?$AA@ ; `string'
		dd offset ??_C@_02FNAGIBCP@?4?$CK?$AA@ ; `string'
		dd offset ??_C@_02DOGDOMPH@?$CK?4?$AA@ ; `string'
		dd offset ??_C@_02MFBNKKNO@?$CK?$EA?$AA@ ; `string'
		dd offset ??_C@_02BPEPGHAF@?$EA?$CK?$AA@ ; `string'
		dd offset ??_C@_02LJNCMIPP@a?$EA?$AA@ ;	`string'
		dd offset ??_C@_02MMCPBML@?$EAa?$AA@ ; `string'
		dd offset ??_C@_02LLJEHGKG@b?$EA?$AA@ ;	`string'
		dd offset ??_C@_02DJGKEECL@?4?4?$AA@ ; `string'
		dd offset ??_C@_0N@BPAFEKHC@?9example?4com?$AA@	; "-example.com"
		dd offset ??_C@_0N@KFLDLCPG@example?9?4com?$AA@	; "example-.com"
		dd offset ??_C@_02IAFNOECI@?$EA?$EA?$AA@ ; `string'
		dd offset ??_C@_02FKAPCJPD@?$CK?$CK?$AA@ ; `string'
		dd offset ??_C@_05CMLACIHD@?$CK?4com?$AA@ ; "*.com"
		dd offset ??_C@_04IOHPOFN@?$CKcom?$AA@ ; "*com"
		dd offset ??_C@_07PGEGKOG@?$CK?4?$CK?4com?$AA@ ; "*.*.com"
		dd offset ??_C@_04IOHPOFN@?$CKcom?$AA@ ; "*com"
		dd offset ??_C@_04KLGOHGHB@com?$CK?$AA@	; "com*"
		dd offset ??_C@_0N@GCHGEMCK@?$CKexample?4com?$AA@ ; "*example.com"
		dd offset ??_C@_0O@JHEGGNFE@?$CK?$EAexample?4com?$AA@ ;	"*@example.com"
		dd offset ??_C@_0BD@MPFBPGF@test?$EA?$CK?4example?4com?$AA@ ; "test@*.example.com"
		dd offset ??_C@_0M@JPPGOBBE@example?4com?$AA@ ;	"example.com"
		dd offset ??_C@_0BA@HBGAKMDE@www?4example?4com?$AA@ ; "www.example.com"
		dd offset ??_C@_0BF@JELKNCCL@test?4www?4example?4com?$AA@ ; "test.www.example.com"
		dd offset ??_C@_0O@GDFDLLLK@?$CK?4example?4com?$AA@ ; "*.example.com"
		dd offset ??_C@_0BC@NKIEJPPP@?$CK?4www?4example?4com?$AA@ ; "*.www.example.com"
		dd offset ??_C@_0BD@KDLIECPD@test?4?$CK?4example?4com?$AA@ ; "test.*.example.com"
		dd offset ??_C@_09MHLIALBD@www?4?$CK?4com?$AA@ ; "www.*.com"
		dd offset ??_C@_0BB@DLLDNMLA@?4www?4example?4com?$AA@ ;	".www.example.com"
		dd offset ??_C@_0BB@EILLPLHP@?$CKwww?4example?4com?$AA@	; "*www.example.com"
		dd offset ??_C@_0M@PLALBFAH@example?4net?$AA@ ;	"example.net"
		dd offset ??_C@_0BJ@KBGHDIBO@xn?9?9rger?9koa?4example?4com?$AA@	; "xn--rger-koa.example.com"
		dd offset ??_C@_0BL@BEIDJCDM@?$CK?4xn?9?9rger?9koa?4example?4com?$AA@ ;	"*.xn--rger-koa.example.com"
		dd offset ??_C@_0BN@KEFMMDCA@www?4xn?9?9rger?9koa?4example?4com?$AA@ ; "www.xn--rger-koa.example.com"
		dd offset ??_C@_0BE@FGEBGDJL@?$CK?4good?9?9example?4com?$AA@ ; "*.good--example.com"
		dd offset ??_C@_0BG@FNAHHNPA@www?4good?9?9example?4com?$AA@ ; "www.good--example.com"
		dd offset ??_C@_0O@KMCJNILM@?$CK?4xn?9?9bar?4com?$AA@ ;	"*.xn--bar.com"
		dd offset ??_C@_0BE@PECDCGGE@xn?9?9foo?4xn?9?9bar?4com?$AA@ ; "xn--foo.xn--bar.com"
		dd offset ??_C@_0O@GNNCHHKG@a?4example?4com?$AA@ ; "a.example.com"
		dd offset ??_C@_0O@BBLDFCHN@b?4example?4com?$AA@ ; "b.example.com"
		dd offset ??_C@_0BH@HDBLHCCI@postmaster?$EAexample?4com?$AA@ ; "postmaster@example.com"
		dd offset ??_C@_0BH@HBPOHOLA@Postmaster?$EAexample?4com?$AA@ ; "Postmaster@example.com"
		dd offset ??_C@_0BH@BMIGDEPE@postmaster?$EAEXAMPLE?4COM?$AA@ ; "postmaster@EXAMPLE.COM"
		align 10h
_exceptions	dd offset ??_C@_0DG@PAJAMMIK@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@
					; DATA XREF: _is_exceptionr
					; _is_exception+7o ...
					; "set CN: host: [*.example.com] matches ["...
		dd offset ??_C@_0DG@OBONKGPD@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@	; "set CN: host: [*.example.com] matches ["...
		dd offset ??_C@_0DI@JBFPBDMD@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@	; "set CN: host: [*.example.com] matches ["...
		dd offset ??_C@_0EB@MPDEJEAC@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@	; "set CN: host: [*.example.com] matches ["...
		dd offset ??_C@_0EB@DJFMOPIP@set?5CN?3?5host?3?5?$FL?$CK?4www?4example?4com@ ; "set CN:	host: [*.www.example.com] match"...
		dd offset ??_C@_0DN@JHNDBELK@set?5CN?3?5host?3?5?$FL?$CK?4www?4example?4com@ ; "set CN:	host: [*.www.example.com] match"...
		dd offset ??_C@_0DL@CDNKGPLD@set?5CN?3?5host?3?5?$FL?$CKwww?4example?4com?$FN@ ; "set CN: host:	[*www.example.com] matche"...
		dd offset ??_C@_0EA@DFLDEFCG@set?5CN?3?5host?3?5?$FLtest?4www?4example?4@ ; "set CN: host: [test.www.example.com] ma"...
		dd offset ??_C@_0FC@FOJFJEFI@set?5CN?3?5host?3?5?$FL?$CK?4xn?9?9rger?9koa?4ex@ ; "set CN: host:	[*.xn--rger-koa.example.c"...
		dd offset ??_C@_0DM@HDPHOIAI@set?5CN?3?5host?3?5?$FL?$CK?4xn?9?9bar?4com?$FN?5ma@ ; "set CN: host: [*.xn--bar.com] matches ["...
		dd offset ??_C@_0EE@LNNCLNHC@set?5CN?3?5host?3?5?$FL?$CK?4good?9?9example?4c@ ;	"set CN: host: [*.good--example.com] mat"...
		dd offset ??_C@_0EK@OJEBHOIB@set?5CN?3?5host?9no?9wildcards?3?5?$FL?$CK?4ww@ ; "set CN:	host-no-wildcards: [*.www.examp"...
		dd offset ??_C@_0EN@JMJODOGM@set?5CN?3?5host?9no?9wildcards?3?5?$FLtest@ ; "set	CN: host-no-wildcards: [test.www.ex"...
		dd offset ??_C@_0FK@MDJOEONL@set?5emailAddress?3?5email?3?5?$FLpostma@ ; "set emailAddress: email: [postmaster@ex"...
		dd offset ??_C@_0FK@PBADGPPH@set?5emailAddress?3?5email?3?5?$FLpostma@ ; "set emailAddress: email: [postmaster@EX"...
		dd offset ??_C@_0FK@NKOGFONK@set?5emailAddress?3?5email?3?5?$FLPostma@ ; "set emailAddress: email: [Postmaster@ex"...
		dd offset ??_C@_0FK@FFOMFNGD@set?5emailAddress?3?5email?3?5?$FLPostma@ ; "set emailAddress: email: [Postmaster@ex"...
		dd offset ??_C@_0DN@OKKLGIPC@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@ ; "set dnsName: host: [*.example.com] matc"...
		dd offset ??_C@_0DL@HPFDHDKH@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@ ; "set dnsName: host: [*.example.com] matc"...
		dd offset ??_C@_0DL@GOCOBJNO@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@ ; "set dnsName: host: [*.example.com] matc"...
		dd offset ??_C@_0EG@PGJACOJN@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@ ; "set dnsName: host: [*.example.com] matc"...
		dd offset ??_C@_0EG@PIFFBA@set?5dnsName?3?5host?3?5?$FL?$CK?4www?4exampl@ ; "set dnsName: host:	[*.www.example.com] "...
		dd offset ??_C@_0EP@CLMKJIBJ@set?5dnsName?3?5host?9no?9wildcards?3?5@ ;	"set dnsName: host-no-wildcards: [*.www."...
		dd offset ??_C@_0FC@BNNANJCE@set?5dnsName?3?5host?9no?9wildcards?3?5@ ;	"set dnsName: host-no-wildcards: [test.w"...
		dd offset ??_C@_0EC@MJKKNJCA@set?5dnsName?3?5host?3?5?$FL?$CK?4www?4exampl@ ; "set dnsName: host: [*.www.example.com] "...
		dd offset ??_C@_0EA@HAGIHGFH@set?5dnsName?3?5host?3?5?$FL?$CKwww?4example@ ; "set dnsName: host: [*www.example.com] m"...
		dd offset ??_C@_0EF@JCLKBIMF@set?5dnsName?3?5host?3?5?$FLtest?4www?4exa@ ; "set	dnsName: host: [test.www.example.co"...
		dd offset ??_C@_0FH@CFCCPHJB@set?5dnsName?3?5host?3?5?$FL?$CK?4xn?9?9rger?9k@ ;	"set dnsName: host: [*.xn--rger-koa.exam"...
		dd offset ??_C@_0EB@NEMDHMHA@set?5dnsName?3?5host?3?5?$FL?$CK?4xn?9?9bar?4co@ ;	"set dnsName: host: [*.xn--bar.com] matc"...
		dd offset ??_C@_0EJ@IEAMGDEF@set?5dnsName?3?5host?3?5?$FL?$CK?4good?9?9exam@ ; "set dnsName: host: [*.good--example.com"...
		dd offset ??_C@_0FI@MAKOEEOL@set?5rfc822Name?3?5email?3?5?$FLpostmast@ ; "set rfc822Name: email: [postmaster@exam"...
		dd offset ??_C@_0FI@NJNGFEOK@set?5rfc822Name?3?5email?3?5?$FLPostmast@ ; "set rfc822Name: email: [Postmaster@exam"...
		dd offset ??_C@_0FI@FGNMFHFD@set?5rfc822Name?3?5email?3?5?$FLPostmast@ ; "set rfc822Name: email: [Postmaster@exam"...
		dd offset ??_C@_0FI@PCDDGFMH@set?5rfc822Name?3?5email?3?5?$FLpostmast@ ; "set rfc822Name: email: [postmaster@EXAM"...
		align 10h
_name_fns	dd offset _set_cn1	; DATA XREF: _main+Bo
off_164		dd offset ??_C@_06FHGMMMPN@set?5CN?$AA@	; DATA XREF: _mainr
					; "set CN"
		dd 1, 0
		dd offset _set_cn2
		dd offset ??_C@_06FHGMMMPN@set?5CN?$AA@	; "set CN"
		dd 1, 0
		dd offset _set_cn3
		dd offset ??_C@_06FHGMMMPN@set?5CN?$AA@	; "set CN"
		dd 1, 0
		dd offset _set_cn_and_email
		dd offset ??_C@_06FHGMMMPN@set?5CN?$AA@	; "set CN"
		dd 1, 0
		dd offset _set_email1
		dd offset ??_C@_0BB@HEFILDAB@set?5emailAddress?$AA@ ; "set emailAddress"
		dd 0
		dd 1
		dd offset _set_email2
		dd offset ??_C@_0BB@HEFILDAB@set?5emailAddress?$AA@ ; "set emailAddress"
		dd 0
		dd 1
		dd offset _set_email3
		dd offset ??_C@_0BB@HEFILDAB@set?5emailAddress?$AA@ ; "set emailAddress"
		dd 0
		dd 1
		dd offset _set_email_and_cn
		dd offset ??_C@_0BB@HEFILDAB@set?5emailAddress?$AA@ ; "set emailAddress"
		dd 0
		dd 1
		dd offset _set_altname_dns
		dd offset ??_C@_0M@LFGMKAOG@set?5dnsName?$AA@ ;	"set dnsName"
		dd 1, 0
		dd offset _set_altname_email
		dd offset ??_C@_0P@FGOMKJMN@set?5rfc822Name?$AA@ ; "set	rfc822Name"
		dd 0
		dd 1, 4	dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 210h
; COMDAT (pick any)
		public ??_C@_01MCMALHOG@a?$AA@
; `string'
??_C@_01MCMALHOG@a?$AA@	db 61h,	0	; DATA XREF: .rdata:_nameso
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 214h
; COMDAT (pick any)
		public ??_C@_01OJONOECF@b?$AA@
; `string'
??_C@_01OJONOECF@b?$AA@	db 62h,	0	; DATA XREF: .rdata:00000004o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 218h
; COMDAT (pick any)
		public ??_C@_01LFCBOECM@?4?$AA@
; `string'
??_C@_01LFCBOECM@?4?$AA@ db 2Eh, 0	; DATA XREF: .rdata:00000008o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21Ch
; COMDAT (pick any)
		public ??_C@_01NBENCBCI@?$CK?$AA@
; `string'
??_C@_01NBENCBCI@?$CK?$AA@ db 2Ah, 0	; DATA XREF: .rdata:0000000Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 220h
; COMDAT (pick any)
		public ??_C@_01EOFPKCAF@?$EA?$AA@
; `string'
??_C@_01EOFPKCAF@?$EA?$AA@ db 40h, 0	; DATA XREF: .rdata:00000010o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 224h
; COMDAT (pick any)
		public ??_C@_02EOILBHOB@?4a?$AA@
; `string'
??_C@_02EOILBHOB@?4a?$AA@ db 2Eh, 61h, 0 ; DATA	XREF: .rdata:00000014o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 228h
; COMDAT (pick any)
		public ??_C@_02ECKMIONG@a?4?$AA@
; `string'
??_C@_02ECKMIONG@a?4?$AA@ db 61h, 2Eh, 0 ; DATA	XREF: .rdata:00000018o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 22Ch
; COMDAT (pick any)
		public ??_C@_02GFKGEECC@?4b?$AA@
; `string'
??_C@_02GFKGEECC@?4b?$AA@ db 2Eh, 62h, 0 ; DATA	XREF: .rdata:0000001Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 230h
; COMDAT (pick any)
		public ??_C@_02EAOKDAIP@b?4?$AA@
; `string'
??_C@_02EAOKDAIP@b?4?$AA@ db 62h, 2Eh, 0 ; DATA	XREF: .rdata:00000020o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 234h
; COMDAT (pick any)
		public ??_C@_02FNAGIBCP@?4?$CK?$AA@
; `string'
??_C@_02FNAGIBCP@?4?$CK?$AA@ db	2Eh, 2Ah, 0 ; DATA XREF: .rdata:00000024o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 238h
; COMDAT (pick any)
		public ??_C@_02DOGDOMPH@?$CK?4?$AA@
; `string'
??_C@_02DOGDOMPH@?$CK?4?$AA@ db	2Ah, 2Eh, 0 ; DATA XREF: .rdata:00000028o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 23Ch
; COMDAT (pick any)
		public ??_C@_02MFBNKKNO@?$CK?$EA?$AA@
; `string'
??_C@_02MFBNKKNO@?$CK?$EA?$AA@ db 2Ah, 40h, 0 ;	DATA XREF: .rdata:0000002Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 240h
; COMDAT (pick any)
		public ??_C@_02BPEPGHAF@?$EA?$CK?$AA@
; `string'
??_C@_02BPEPGHAF@?$EA?$CK?$AA@ db 40h, 2Ah, 0 ;	DATA XREF: .rdata:00000030o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 244h
; COMDAT (pick any)
		public ??_C@_02LJNCMIPP@a?$EA?$AA@
; `string'
??_C@_02LJNCMIPP@a?$EA?$AA@ db 61h, 40h, 0 ; DATA XREF:	.rdata:00000034o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 248h
; COMDAT (pick any)
		public ??_C@_02MMCPBML@?$EAa?$AA@
; `string'
??_C@_02MMCPBML@?$EAa?$AA@ db 40h, 61h,	0 ; DATA XREF: .rdata:00000038o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24Ch
; COMDAT (pick any)
		public ??_C@_02LLJEHGKG@b?$EA?$AA@
; `string'
??_C@_02LLJEHGKG@b?$EA?$AA@ db 62h, 40h, 0 ; DATA XREF:	.rdata:0000003Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 250h
; COMDAT (pick any)
		public ??_C@_02DJGKEECL@?4?4?$AA@
; `string'
??_C@_02DJGKEECL@?4?4?$AA@ db 2	dup(2Eh), 0 ; DATA XREF: .rdata:00000040o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 254h
; COMDAT (pick any)
		public ??_C@_0N@BPAFEKHC@?9example?4com?$AA@
; `string'
??_C@_0N@BPAFEKHC@?9example?4com?$AA@ db '-example.com',0 ; DATA XREF: .rdata:00000044o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 264h
; COMDAT (pick any)
		public ??_C@_0N@KFLDLCPG@example?9?4com?$AA@
; `string'
??_C@_0N@KFLDLCPG@example?9?4com?$AA@ db 'example-.com',0 ; DATA XREF: .rdata:00000048o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 274h
; COMDAT (pick any)
		public ??_C@_02IAFNOECI@?$EA?$EA?$AA@
; `string'
??_C@_02IAFNOECI@?$EA?$EA?$AA@ db 2 dup(40h), 0	; DATA XREF: .rdata:0000004Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 278h
; COMDAT (pick any)
		public ??_C@_02FKAPCJPD@?$CK?$CK?$AA@
; `string'
??_C@_02FKAPCJPD@?$CK?$CK?$AA@ db 2 dup(2Ah), 0	; DATA XREF: .rdata:00000050o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 27Ch
; COMDAT (pick any)
		public ??_C@_05CMLACIHD@?$CK?4com?$AA@
; `string'
??_C@_05CMLACIHD@?$CK?4com?$AA@	db '*.com',0 ; DATA XREF: .rdata:00000054o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 284h
; COMDAT (pick any)
		public ??_C@_04IOHPOFN@?$CKcom?$AA@
; `string'
??_C@_04IOHPOFN@?$CKcom?$AA@ db	'*com',0 ; DATA XREF: .rdata:00000058o
					; .rdata:00000060o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28Ch
; COMDAT (pick any)
		public ??_C@_07PGEGKOG@?$CK?4?$CK?4com?$AA@
; `string'
??_C@_07PGEGKOG@?$CK?4?$CK?4com?$AA@ db	'*.*.com',0 ; DATA XREF: .rdata:0000005Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 294h
; COMDAT (pick any)
		public ??_C@_04KLGOHGHB@com?$CK?$AA@
; `string'
??_C@_04KLGOHGHB@com?$CK?$AA@ db 'com*',0 ; DATA XREF: .rdata:00000064o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 29Ch
; COMDAT (pick any)
		public ??_C@_0N@GCHGEMCK@?$CKexample?4com?$AA@
; `string'
??_C@_0N@GCHGEMCK@?$CKexample?4com?$AA@	db '*example.com',0 ; DATA XREF: .rdata:00000068o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2ACh
; COMDAT (pick any)
		public ??_C@_0O@JHEGGNFE@?$CK?$EAexample?4com?$AA@
; `string'
??_C@_0O@JHEGGNFE@?$CK?$EAexample?4com?$AA@ db '*@example.com',0
					; DATA XREF: .rdata:0000006Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2BCh
; COMDAT (pick any)
		public ??_C@_0BD@MPFBPGF@test?$EA?$CK?4example?4com?$AA@
; `string'
??_C@_0BD@MPFBPGF@test?$EA?$CK?4example?4com?$AA@ db 'test@*.example.com',0
					; DATA XREF: .rdata:00000070o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D0h
; COMDAT (pick any)
		public ??_C@_0M@JPPGOBBE@example?4com?$AA@
; `string'
??_C@_0M@JPPGOBBE@example?4com?$AA@ db 'example.com',0 ; DATA XREF: .rdata:00000074o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2DCh
; COMDAT (pick any)
		public ??_C@_0BA@HBGAKMDE@www?4example?4com?$AA@
; `string'
??_C@_0BA@HBGAKMDE@www?4example?4com?$AA@ db 'www.example.com',0
					; DATA XREF: .rdata:00000078o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2ECh
; COMDAT (pick any)
		public ??_C@_0BF@JELKNCCL@test?4www?4example?4com?$AA@
; `string'
??_C@_0BF@JELKNCCL@test?4www?4example?4com?$AA@	db 'test.www.example.com',0
					; DATA XREF: .rdata:0000007Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 304h
; COMDAT (pick any)
		public ??_C@_0O@GDFDLLLK@?$CK?4example?4com?$AA@
; `string'
??_C@_0O@GDFDLLLK@?$CK?4example?4com?$AA@ db '*.example.com',0 ; DATA XREF: .rdata:00000080o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 314h
; COMDAT (pick any)
		public ??_C@_0BC@NKIEJPPP@?$CK?4www?4example?4com?$AA@
; `string'
??_C@_0BC@NKIEJPPP@?$CK?4www?4example?4com?$AA@	db '*.www.example.com',0
					; DATA XREF: .rdata:00000084o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 328h
; COMDAT (pick any)
		public ??_C@_0BD@KDLIECPD@test?4?$CK?4example?4com?$AA@
; `string'
??_C@_0BD@KDLIECPD@test?4?$CK?4example?4com?$AA@ db 'test.*.example.com',0
					; DATA XREF: .rdata:00000088o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 33Ch
; COMDAT (pick any)
		public ??_C@_09MHLIALBD@www?4?$CK?4com?$AA@
; `string'
??_C@_09MHLIALBD@www?4?$CK?4com?$AA@ db	'www.*.com',0 ; DATA XREF: .rdata:0000008Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 348h
; COMDAT (pick any)
		public ??_C@_0BB@DLLDNMLA@?4www?4example?4com?$AA@
; `string'
??_C@_0BB@DLLDNMLA@?4www?4example?4com?$AA@ db '.www.example.com',0
					; DATA XREF: .rdata:00000090o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 35Ch
; COMDAT (pick any)
		public ??_C@_0BB@EILLPLHP@?$CKwww?4example?4com?$AA@
; `string'
??_C@_0BB@EILLPLHP@?$CKwww?4example?4com?$AA@ db '*www.example.com',0
					; DATA XREF: .rdata:00000094o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 370h
; COMDAT (pick any)
		public ??_C@_0M@PLALBFAH@example?4net?$AA@
; `string'
??_C@_0M@PLALBFAH@example?4net?$AA@ db 'example.net',0 ; DATA XREF: .rdata:00000098o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 37Ch
; COMDAT (pick any)
		public ??_C@_0BJ@KBGHDIBO@xn?9?9rger?9koa?4example?4com?$AA@
; `string'
??_C@_0BJ@KBGHDIBO@xn?9?9rger?9koa?4example?4com?$AA@ db 'xn--rger-koa.example.com',0
					; DATA XREF: .rdata:0000009Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 398h
; COMDAT (pick any)
		public ??_C@_0BL@BEIDJCDM@?$CK?4xn?9?9rger?9koa?4example?4com?$AA@
; `string'
??_C@_0BL@BEIDJCDM@?$CK?4xn?9?9rger?9koa?4example?4com?$AA@ db '*.xn--rger-koa.example.com',0
					; DATA XREF: .rdata:000000A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3B4h
; COMDAT (pick any)
		public ??_C@_0BN@KEFMMDCA@www?4xn?9?9rger?9koa?4example?4com?$AA@
; `string'
??_C@_0BN@KEFMMDCA@www?4xn?9?9rger?9koa?4example?4com?$AA@ db 'www.xn--rger-koa.example.com',0
					; DATA XREF: .rdata:000000A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3D4h
; COMDAT (pick any)
		public ??_C@_0BE@FGEBGDJL@?$CK?4good?9?9example?4com?$AA@
; `string'
??_C@_0BE@FGEBGDJL@?$CK?4good?9?9example?4com?$AA@ db '*.good--example.com',0
					; DATA XREF: .rdata:000000A8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3E8h
; COMDAT (pick any)
		public ??_C@_0BG@FNAHHNPA@www?4good?9?9example?4com?$AA@
; `string'
??_C@_0BG@FNAHHNPA@www?4good?9?9example?4com?$AA@ db 'www.good--example.com',0
					; DATA XREF: .rdata:000000ACo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 400h
; COMDAT (pick any)
		public ??_C@_0O@KMCJNILM@?$CK?4xn?9?9bar?4com?$AA@
; `string'
??_C@_0O@KMCJNILM@?$CK?4xn?9?9bar?4com?$AA@ db '*.xn--bar.com',0
					; DATA XREF: .rdata:000000B0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 410h
; COMDAT (pick any)
		public ??_C@_0BE@PECDCGGE@xn?9?9foo?4xn?9?9bar?4com?$AA@
; `string'
??_C@_0BE@PECDCGGE@xn?9?9foo?4xn?9?9bar?4com?$AA@ db 'xn--foo.xn--bar.com',0
					; DATA XREF: .rdata:000000B4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 424h
; COMDAT (pick any)
		public ??_C@_0O@GNNCHHKG@a?4example?4com?$AA@
; `string'
??_C@_0O@GNNCHHKG@a?4example?4com?$AA@ db 'a.example.com',0 ; DATA XREF: .rdata:000000B8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 434h
; COMDAT (pick any)
		public ??_C@_0O@BBLDFCHN@b?4example?4com?$AA@
; `string'
??_C@_0O@BBLDFCHN@b?4example?4com?$AA@ db 'b.example.com',0 ; DATA XREF: .rdata:000000BCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 444h
; COMDAT (pick any)
		public ??_C@_0BH@HDBLHCCI@postmaster?$EAexample?4com?$AA@
; `string'
??_C@_0BH@HDBLHCCI@postmaster?$EAexample?4com?$AA@ db 'postmaster@example.com',0
					; DATA XREF: .rdata:000000C0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 45Ch
; COMDAT (pick any)
		public ??_C@_0BH@HBPOHOLA@Postmaster?$EAexample?4com?$AA@
; `string'
??_C@_0BH@HBPOHOLA@Postmaster?$EAexample?4com?$AA@ db 'Postmaster@example.com',0
					; DATA XREF: .rdata:000000C4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 474h
; COMDAT (pick any)
		public ??_C@_0BH@BMIGDEPE@postmaster?$EAEXAMPLE?4COM?$AA@
; `string'
??_C@_0BH@BMIGDEPE@postmaster?$EAEXAMPLE?4COM?$AA@ db 'postmaster@EXAMPLE.COM',0
					; DATA XREF: .rdata:000000C8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48Ch
; COMDAT (pick any)
		public ??_C@_0DG@PAJAMMIK@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@
; `string'
??_C@_0DG@PAJAMMIK@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@ db 'set CN: host: [*.example.com] matches [a.example.com]',0
					; DATA XREF: .rdata:_exceptionso
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4C4h
; COMDAT (pick any)
		public ??_C@_0DG@OBONKGPD@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@
; `string'
??_C@_0DG@OBONKGPD@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@ db 'set CN: host: [*.example.com] matches [b.example.com]',0
					; DATA XREF: .rdata:000000D4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4FCh
; COMDAT (pick any)
		public ??_C@_0DI@JBFPBDMD@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@
; `string'
??_C@_0DI@JBFPBDMD@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@ db 'set CN: host: [*.example.com] matches [www.example.com]',0
					; DATA XREF: .rdata:000000D8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 534h
; COMDAT (pick any)
		public ??_C@_0EB@MPDEJEAC@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@
; `string'
??_C@_0EB@MPDEJEAC@set?5CN?3?5host?3?5?$FL?$CK?4example?4com?$FN?5ma@ db 'set CN: host: [*.example.com] matches [xn--rger-koa.example.com]',0
					; DATA XREF: .rdata:000000DCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 578h
; COMDAT (pick any)
		public ??_C@_0EB@DJFMOPIP@set?5CN?3?5host?3?5?$FL?$CK?4www?4example?4com@
; `string'
??_C@_0EB@DJFMOPIP@set?5CN?3?5host?3?5?$FL?$CK?4www?4example?4com@ db 'set CN: host: [*.www.example.com] matches [test.www.example.com]',0
					; DATA XREF: .rdata:000000E0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5BCh
; COMDAT (pick any)
		public ??_C@_0DN@JHNDBELK@set?5CN?3?5host?3?5?$FL?$CK?4www?4example?4com@
; `string'
??_C@_0DN@JHNDBELK@set?5CN?3?5host?3?5?$FL?$CK?4www?4example?4com@ db 'set CN: host: [*.www.example.com] matches [.www.example.com]',0
					; DATA XREF: .rdata:000000E4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5FCh
; COMDAT (pick any)
		public ??_C@_0DL@CDNKGPLD@set?5CN?3?5host?3?5?$FL?$CKwww?4example?4com?$FN@
; `string'
??_C@_0DL@CDNKGPLD@set?5CN?3?5host?3?5?$FL?$CKwww?4example?4com?$FN@ db	'set CN: host: [*www.example.com] matches [www.example.com]',0
					; DATA XREF: .rdata:000000E8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 638h
; COMDAT (pick any)
		public ??_C@_0EA@DFLDEFCG@set?5CN?3?5host?3?5?$FLtest?4www?4example?4@
; `string'
??_C@_0EA@DFLDEFCG@set?5CN?3?5host?3?5?$FLtest?4www?4example?4@	db 'set CN: host: [test.www.example.com] matches [.www.example.com]',0
					; DATA XREF: .rdata:000000ECo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 678h
; COMDAT (pick any)
		public ??_C@_0FC@FOJFJEFI@set?5CN?3?5host?3?5?$FL?$CK?4xn?9?9rger?9koa?4ex@
; `string'
??_C@_0FC@FOJFJEFI@set?5CN?3?5host?3?5?$FL?$CK?4xn?9?9rger?9koa?4ex@ db	'set CN: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-'
					; DATA XREF: .rdata:000000F0o
		db 'koa.example.com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6CCh
; COMDAT (pick any)
		public ??_C@_0DM@HDPHOIAI@set?5CN?3?5host?3?5?$FL?$CK?4xn?9?9bar?4com?$FN?5ma@
; `string'
??_C@_0DM@HDPHOIAI@set?5CN?3?5host?3?5?$FL?$CK?4xn?9?9bar?4com?$FN?5ma@	db 'set CN: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]',0
					; DATA XREF: .rdata:000000F4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 708h
; COMDAT (pick any)
		public ??_C@_0EE@LNNCLNHC@set?5CN?3?5host?3?5?$FL?$CK?4good?9?9example?4c@
; `string'
??_C@_0EE@LNNCLNHC@set?5CN?3?5host?3?5?$FL?$CK?4good?9?9example?4c@ db 'set CN: host: [*.good--example.com] matches [www.good--example.co'
					; DATA XREF: .rdata:000000F8o
		db 'm]',0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 74Ch
; COMDAT (pick any)
		public ??_C@_0EK@OJEBHOIB@set?5CN?3?5host?9no?9wildcards?3?5?$FL?$CK?4ww@
; `string'
??_C@_0EK@OJEBHOIB@set?5CN?3?5host?9no?9wildcards?3?5?$FL?$CK?4ww@ db 'set CN: host-no-wildcards: [*.www.example.com] matches [.www.exam'
					; DATA XREF: .rdata:000000FCo
		db 'ple.com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 798h
; COMDAT (pick any)
		public ??_C@_0EN@JMJODOGM@set?5CN?3?5host?9no?9wildcards?3?5?$FLtest@
; `string'
??_C@_0EN@JMJODOGM@set?5CN?3?5host?9no?9wildcards?3?5?$FLtest@ db 'set CN: host-no-wildcards: [test.www.example.com] matches [.www.e'
					; DATA XREF: .rdata:00000100o
		db 'xample.com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 7E8h
; COMDAT (pick any)
		public ??_C@_0FK@MDJOEONL@set?5emailAddress?3?5email?3?5?$FLpostma@
; `string'
??_C@_0FK@MDJOEONL@set?5emailAddress?3?5email?3?5?$FLpostma@ db	'set emailAddress: email: [postmaster@example.com] does not match '
					; DATA XREF: .rdata:00000104o
		db '[Postmaster@example.com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 844h
; COMDAT (pick any)
		public ??_C@_0FK@PBADGPPH@set?5emailAddress?3?5email?3?5?$FLpostma@
; `string'
??_C@_0FK@PBADGPPH@set?5emailAddress?3?5email?3?5?$FLpostma@ db	'set emailAddress: email: [postmaster@EXAMPLE.COM] does not match '
					; DATA XREF: .rdata:00000108o
		db '[Postmaster@example.com]',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 8A0h
; COMDAT (pick any)
		public ??_C@_0FK@NKOGFONK@set?5emailAddress?3?5email?3?5?$FLPostma@
; `string'
??_C@_0FK@NKOGFONK@set?5emailAddress?3?5email?3?5?$FLPostma@ db	'set emailAddress: email: [Postmaster@example.com] does not match '
					; DATA XREF: .rdata:0000010Co
		db '[postmaster@example.com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 8FCh
; COMDAT (pick any)
		public ??_C@_0FK@FFOMFNGD@set?5emailAddress?3?5email?3?5?$FLPostma@
; `string'
??_C@_0FK@FFOMFNGD@set?5emailAddress?3?5email?3?5?$FLPostma@ db	'set emailAddress: email: [Postmaster@example.com] does not match '
					; DATA XREF: .rdata:00000110o
		db '[postmaster@EXAMPLE.COM]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 958h
; COMDAT (pick any)
		public ??_C@_0DN@OKKLGIPC@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@
; `string'
??_C@_0DN@OKKLGIPC@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@ db 'set dnsName: host: [*.example.com] matches [www.example.com]',0
					; DATA XREF: .rdata:00000114o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 998h
; COMDAT (pick any)
		public ??_C@_0DL@HPFDHDKH@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@
; `string'
??_C@_0DL@HPFDHDKH@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@ db 'set dnsName: host: [*.example.com] matches [a.example.com]',0
					; DATA XREF: .rdata:00000118o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9D4h
; COMDAT (pick any)
		public ??_C@_0DL@GOCOBJNO@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@
; `string'
??_C@_0DL@GOCOBJNO@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@ db 'set dnsName: host: [*.example.com] matches [b.example.com]',0
					; DATA XREF: .rdata:0000011Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0A10h
; COMDAT (pick any)
		public ??_C@_0EG@PGJACOJN@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@
; `string'
??_C@_0EG@PGJACOJN@set?5dnsName?3?5host?3?5?$FL?$CK?4example?4co@ db 'set dnsName: host: [*.example.com] matches [xn--rger-koa.example.'
					; DATA XREF: .rdata:00000120o
		db 'com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0A58h
; COMDAT (pick any)
		public ??_C@_0EG@PIFFBA@set?5dnsName?3?5host?3?5?$FL?$CK?4www?4exampl@
; `string'
??_C@_0EG@PIFFBA@set?5dnsName?3?5host?3?5?$FL?$CK?4www?4exampl@	db 'set dnsName: host: [*.www.example.com] matches [test.www.example.'
					; DATA XREF: .rdata:00000124o
		db 'com]',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0AA0h
; COMDAT (pick any)
		public ??_C@_0EP@CLMKJIBJ@set?5dnsName?3?5host?9no?9wildcards?3?5@
; `string'
??_C@_0EP@CLMKJIBJ@set?5dnsName?3?5host?9no?9wildcards?3?5@ db 'set dnsName: host-no-wildcards: [*.www.example.com] matches [.www'
					; DATA XREF: .rdata:00000128o
		db '.example.com]',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0AF0h
; COMDAT (pick any)
		public ??_C@_0FC@BNNANJCE@set?5dnsName?3?5host?9no?9wildcards?3?5@
; `string'
??_C@_0FC@BNNANJCE@set?5dnsName?3?5host?9no?9wildcards?3?5@ db 'set dnsName: host-no-wildcards: [test.www.example.com] matches [.'
					; DATA XREF: .rdata:0000012Co
		db 'www.example.com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0B44h
; COMDAT (pick any)
		public ??_C@_0EC@MJKKNJCA@set?5dnsName?3?5host?3?5?$FL?$CK?4www?4exampl@
; `string'
??_C@_0EC@MJKKNJCA@set?5dnsName?3?5host?3?5?$FL?$CK?4www?4exampl@ db 'set dnsName: host: [*.www.example.com] matches [.www.example.com]'
					; DATA XREF: .rdata:00000130o
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0B88h
; COMDAT (pick any)
		public ??_C@_0EA@HAGIHGFH@set?5dnsName?3?5host?3?5?$FL?$CKwww?4example@
; `string'
??_C@_0EA@HAGIHGFH@set?5dnsName?3?5host?3?5?$FL?$CKwww?4example@ db 'set dnsName: host: [*www.example.com] matches [www.example.com]',0
					; DATA XREF: .rdata:00000134o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0BC8h
; COMDAT (pick any)
		public ??_C@_0EF@JCLKBIMF@set?5dnsName?3?5host?3?5?$FLtest?4www?4exa@
; `string'
??_C@_0EF@JCLKBIMF@set?5dnsName?3?5host?3?5?$FLtest?4www?4exa@ db 'set dnsName: host: [test.www.example.com] matches [.www.example.c'
					; DATA XREF: .rdata:00000138o
		db 'om]',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0C10h
; COMDAT (pick any)
		public ??_C@_0FH@CFCCPHJB@set?5dnsName?3?5host?3?5?$FL?$CK?4xn?9?9rger?9k@
; `string'
??_C@_0FH@CFCCPHJB@set?5dnsName?3?5host?3?5?$FL?$CK?4xn?9?9rger?9k@ db 'set dnsName: host: [*.xn--rger-koa.example.com] matches [www.xn--'
					; DATA XREF: .rdata:0000013Co
		db 'rger-koa.example.com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0C68h
; COMDAT (pick any)
		public ??_C@_0EB@NEMDHMHA@set?5dnsName?3?5host?3?5?$FL?$CK?4xn?9?9bar?4co@
; `string'
??_C@_0EB@NEMDHMHA@set?5dnsName?3?5host?3?5?$FL?$CK?4xn?9?9bar?4co@ db 'set dnsName: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]',0
					; DATA XREF: .rdata:00000140o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0CACh
; COMDAT (pick any)
		public ??_C@_0EJ@IEAMGDEF@set?5dnsName?3?5host?3?5?$FL?$CK?4good?9?9exam@
; `string'
??_C@_0EJ@IEAMGDEF@set?5dnsName?3?5host?3?5?$FL?$CK?4good?9?9exam@ db 'set dnsName: host: [*.good--example.com] matches [www.good--examp'
					; DATA XREF: .rdata:00000144o
		db 'le.com]',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0CF8h
; COMDAT (pick any)
		public ??_C@_0FI@MAKOEEOL@set?5rfc822Name?3?5email?3?5?$FLpostmast@
; `string'
??_C@_0FI@MAKOEEOL@set?5rfc822Name?3?5email?3?5?$FLpostmast@ db	'set rfc822Name: email: [postmaster@example.com] does not match [P'
					; DATA XREF: .rdata:00000148o
		db 'ostmaster@example.com]',0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0D50h
; COMDAT (pick any)
		public ??_C@_0FI@NJNGFEOK@set?5rfc822Name?3?5email?3?5?$FLPostmast@
; `string'
??_C@_0FI@NJNGFEOK@set?5rfc822Name?3?5email?3?5?$FLPostmast@ db	'set rfc822Name: email: [Postmaster@example.com] does not match [p'
					; DATA XREF: .rdata:0000014Co
		db 'ostmaster@example.com]',0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0DA8h
; COMDAT (pick any)
		public ??_C@_0FI@FGNMFHFD@set?5rfc822Name?3?5email?3?5?$FLPostmast@
; `string'
??_C@_0FI@FGNMFHFD@set?5rfc822Name?3?5email?3?5?$FLPostmast@ db	'set rfc822Name: email: [Postmaster@example.com] does not match [p'
					; DATA XREF: .rdata:00000150o
		db 'ostmaster@EXAMPLE.COM]',0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0E00h
; COMDAT (pick any)
		public ??_C@_0FI@PCDDGFMH@set?5rfc822Name?3?5email?3?5?$FLpostmast@
; `string'
??_C@_0FI@PCDDGFMH@set?5rfc822Name?3?5email?3?5?$FLpostmast@ db	'set rfc822Name: email: [postmaster@EXAMPLE.COM] does not match [P'
					; DATA XREF: .rdata:00000154o
		db 'ostmaster@example.com]',0
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0E58h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_cn1	proc near		; DATA XREF: .rdata:_name_fnso

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	[esp+4+arg_4]
		push	0Dh
		push	[esp+0Ch+arg_0]
		call	_set_cn
		add	esp, 10h
		retn
_set_cn1	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0E70h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_cn_and_email proc near		; DATA XREF: .rdata:00000190o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	offset ??_C@_0BC@IIMOPAAA@dummy?$EAexample?4com?$AA@ ; "dummy@example.com"
		push	30h ; '0'
		push	[esp+0Ch+arg_4]
		push	0Dh
		push	[esp+14h+arg_0]
		call	_set_cn
		add	esp, 18h
		retn
_set_cn_and_email endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0E8Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_cn2	proc near		; DATA XREF: .rdata:00000170o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	[esp+4+arg_4]
		push	0Dh
		push	offset ??_C@_0M@JHPFAHIB@dummy?5value?$AA@ ; "dummy value"
		push	0Dh
		push	[esp+14h+arg_0]
		call	_set_cn
		add	esp, 18h
		retn
_set_cn2	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0EA8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_cn3	proc near		; DATA XREF: .rdata:00000180o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	offset ??_C@_0M@JHPFAHIB@dummy?5value?$AA@ ; "dummy value"
		push	0Dh
		push	[esp+0Ch+arg_4]
		push	0Dh
		push	[esp+14h+arg_0]
		call	_set_cn
		add	esp, 18h
		retn
_set_cn3	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0EC4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_email1	proc near		; DATA XREF: .rdata:000001A0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	[esp+4+arg_4]
		push	30h ; '0'
		push	[esp+0Ch+arg_0]
		call	_set_cn
		add	esp, 10h
		retn
_set_email1	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0EDCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_email2	proc near		; DATA XREF: .rdata:000001B0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	[esp+4+arg_4]
		push	30h ; '0'
		push	offset ??_C@_0BC@IIMOPAAA@dummy?$EAexample?4com?$AA@ ; "dummy@example.com"
		push	30h ; '0'
		push	[esp+14h+arg_0]
		call	_set_cn
		add	esp, 18h
		retn
_set_email2	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0EF8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_email3	proc near		; DATA XREF: .rdata:000001C0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	offset ??_C@_0BC@IIMOPAAA@dummy?$EAexample?4com?$AA@ ; "dummy@example.com"
		push	30h ; '0'
		push	[esp+0Ch+arg_4]
		push	30h ; '0'
		push	[esp+14h+arg_0]
		call	_set_cn
		add	esp, 18h
		retn
_set_email3	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F14h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_email_and_cn proc near		; DATA XREF: .rdata:000001D0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	offset ??_C@_0BA@NFKHMLCF@www?4example?4org?$AA@ ; "www.example.org"
		push	0Dh
		push	[esp+0Ch+arg_4]
		push	30h ; '0'
		push	[esp+14h+arg_0]
		call	_set_cn
		add	esp, 18h
		retn
_set_email_and_cn endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F30h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_altname_dns proc near		; DATA XREF: .rdata:000001E0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	[esp+4+arg_4]
		push	2
		push	[esp+0Ch+arg_0]
		call	_set_altname
		add	esp, 10h
		retn
_set_altname_dns endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F48h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_altname_email proc	near		; DATA XREF: .rdata:000001F0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	0
		push	[esp+4+arg_4]
		push	1
		push	[esp+0Ch+arg_0]
		call	_set_altname
		add	esp, 10h
		retn
_set_altname_email endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F60h
; COMDAT (pick any)
		public ??_C@_06FHGMMMPN@set?5CN?$AA@
; `string'
??_C@_06FHGMMMPN@set?5CN?$AA@ db 'set CN',0 ; DATA XREF: .rdata:off_164o
					; .rdata:00000174o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F68h
; COMDAT (pick any)
		public ??_C@_0BB@HEFILDAB@set?5emailAddress?$AA@
; `string'
??_C@_0BB@HEFILDAB@set?5emailAddress?$AA@ db 'set emailAddress',0
					; DATA XREF: .rdata:000001A4o
					; .rdata:000001B4o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F7Ch
; COMDAT (pick any)
		public ??_C@_0M@LFGMKAOG@set?5dnsName?$AA@
; `string'
??_C@_0M@LFGMKAOG@set?5dnsName?$AA@ db 'set dnsName',0 ; DATA XREF: .rdata:000001E4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F88h
; COMDAT (pick any)
		public ??_C@_0P@FGOMKJMN@set?5rfc822Name?$AA@
; `string'
??_C@_0P@FGOMKJMN@set?5rfc822Name?$AA@ db 'set rfc822Name',0 ; DATA XREF: .rdata:000001F4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F98h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public ___local_stdio_printf_options
___local_stdio_printf_options proc near	; CODE XREF: __vfprintf_l+10p
					; _fprintf+Fp
		mov	eax, offset ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
		retn
___local_stdio_printf_options endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0FA0h
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl _vfprintf_l(FILE *File, const char *Format, _locale_t Locale, va_list ArgList)
		public __vfprintf_l
__vfprintf_l	proc near

File		= dword	ptr  4
Format		= dword	ptr  8
Locale		= dword	ptr  0Ch
ArgList		= dword	ptr  10h

		push	[esp+ArgList]
		push	[esp+4+Locale]
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
__vfprintf_l	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0FC4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_check_message	proc near

Str		= byte ptr -404h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	eax, 404h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+404h+var_4], eax
		mov	ecx, [esp+404h+arg_C]
		mov	edx, [esp+404h+arg_0]
		mov	eax, [esp+404h+arg_10]
		push	esi
		mov	esi, [esp+408h+arg_4]
		push	edi
		mov	edi, [esp+40Ch+arg_8]
		test	ecx, ecx
		js	short loc_1054
		push	ebx
		push	eax
		mov	eax, offset ??_C@_07GEPGMPF@matches?$AA@ ; "matches"
		mov	ebx, offset ??_C@_0P@EEDAGPPN@does?5not?5match?$AA@ ; "does not	match"
		cmovz	eax, ebx
		push	eax
		push	edi
		push	esi
		push	dword ptr [edx+4]
		lea	eax, [esp+424h+Str]
		push	offset ??_C@_0BF@LGLMHFEE@?$CFs?3?5?$CFs?3?5?$FL?$CFs?$FN?5?$CFs?5?$FL?$CFs?$FN?$AA@ ; "%s: %s:	[%s] %s	[%s]"
		push	400h
		push	eax
		call	_BIO_snprintf
		lea	eax, [esp+430h+Str]
		push	eax
		call	_is_exception
		add	esp, 24h
		pop	ebx
		test	eax, eax
		jnz	short loc_1054
		lea	eax, [esp+40Ch+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__puts
		add	esp, 4
		inc	ds:_errors

loc_1054:				; CODE XREF: _check_message+3Fj
					; _check_message+7Aj
		mov	ecx, [esp+40Ch+var_4]
		pop	edi
		pop	esi
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 404h
		retn
_check_message	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 106Ch
; COMDAT (pick any)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int fprintf(FILE *File, const	char *Format, ...)
		public _fprintf
_fprintf	proc near		; CODE XREF: _main+9Ep	_main+C1p ...

File		= dword	ptr  4
Format		= dword	ptr  8
arg_8		= byte ptr  0Ch

		lea	eax, [esp+arg_8]
		push	eax
		push	0
		push	[esp+8+Format]
		push	[esp+0Ch+File]
		call	___local_stdio_printf_options
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	dword ptr ds:__imp____stdio_common_vfprintf
		add	esp, 18h
		retn
_fprintf	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1090h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_is_exception	proc near		; CODE XREF: _check_message+6Fp

arg_0		= dword	ptr  4

		mov	ecx, _exceptions
		push	esi
		mov	esi, offset _exceptions
		push	edi
		test	ecx, ecx
		jz	short loc_10DA
		mov	edi, [esp+8+arg_0]

loc_10A5:				; CODE XREF: _is_exception+48j
		mov	eax, edi

loc_10A7:				; CODE XREF: _is_exception+31j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_10C7
		test	dl, dl
		jz	short loc_10C3
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_10C7
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_10A7

loc_10C3:				; CODE XREF: _is_exception+1Fj
		xor	eax, eax
		jmp	short loc_10CC
; ---------------------------------------------------------------------------

loc_10C7:				; CODE XREF: _is_exception+1Bj
					; _is_exception+27j
		sbb	eax, eax
		or	eax, 1

loc_10CC:				; CODE XREF: _is_exception+35j
		test	eax, eax
		jz	short loc_10DF
		mov	ecx, [esi+4]
		add	esi, 4
		test	ecx, ecx
		jnz	short loc_10A5

loc_10DA:				; CODE XREF: _is_exception+Fj
		pop	edi
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_10DF:				; CODE XREF: _is_exception+3Ej
		pop	edi
		mov	eax, 1
		pop	esi
		retn
_is_exception	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10E8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public _main
_main		proc near

argc		= dword	ptr  4
argv		= dword	ptr  8
envp		= dword	ptr  0Ch

		cmp	off_164, 0
		push	ebx
		push	ebp
		push	esi
		push	edi
		mov	ebp, offset _name_fns
		jz	short loc_1165

loc_10FA:				; CODE XREF: _main+7Bj
		cmp	_names,	0
		mov	edi, offset _names
		jz	short loc_115C

loc_1108:				; CODE XREF: _main+72j
		xor	esi, esi
		call	_X509_new
		mov	ebx, eax
		test	ebx, ebx
		jz	short $out$25
		push	3
		push	ebx
		call	_X509_set_version
		add	esp, 8
		test	eax, eax
		cmovnz	esi, ebx

$out$25:				; CODE XREF: _main+2Bj
		push	0
		call	_X509_NAME_free
		add	esp, 4
		test	esi, esi
		jz	short loc_1198
		push	dword ptr [edi]
		mov	eax, [ebp+0]
		push	esi
		call	eax
		add	esp, 8
		test	eax, eax
		jz	short loc_1175
		push	ebp		; int
		push	dword ptr [edi]	; Str1
		push	esi		; int
		call	_run_cert
		push	esi
		call	_X509_free
		add	edi, 4
		add	esp, 10h
		cmp	dword ptr [edi], 0
		jnz	short loc_1108

loc_115C:				; CODE XREF: _main+1Ej
		add	ebp, 10h
		cmp	dword ptr [ebp+4], 0
		jnz	short loc_10FA

loc_1165:				; CODE XREF: _main+10j
		pop	edi
		xor	eax, eax
		cmp	ds:_errors, eax
		pop	esi
		pop	ebp
		setnle	al
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_1175:				; CODE XREF: _main+58j
		push	offset ??_C@_0BK@DOMNOLHF@X509?5name?5setting?5failed?6?$AA@ ; "X509 name setting failed\n"
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_1198:				; CODE XREF: _main+49j
		push	offset ??_C@_0BC@DCBLMOHC@make_cert?5failed?6?$AA@ ; "make_cert	failed\n"
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		add	esp, 8
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_main		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 11BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_make_cert	proc near
		push	esi
		push	edi
		xor	esi, esi
		call	_X509_new
		mov	edi, eax
		test	edi, edi
		jz	short $out$6
		push	3
		push	edi
		call	_X509_set_version
		add	esp, 8
		test	eax, eax
		cmovnz	esi, edi

$out$6:					; CODE XREF: _make_cert+Dj
		push	0
		call	_X509_NAME_free
		add	esp, 4
		mov	eax, esi
		pop	edi
		pop	esi
		retn
_make_cert	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 11ECh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl run_cert(int, char *Str1,	int)
_run_cert	proc near		; CODE XREF: _main+5Ep

var_414		= dword	ptr -414h
var_410		= dword	ptr -410h
var_40C		= dword	ptr -40Ch
Memory		= dword	ptr -408h
Str		= byte ptr -404h
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
Str1		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, 414h
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+414h+var_4], eax
		cmp	_names,	0
		mov	eax, [esp+414h+arg_0]
		push	ebx
		mov	ebx, [esp+418h+Str1]
		mov	[esp+418h+var_40C], eax
		mov	eax, [esp+418h+arg_8]
		push	ebp
		mov	[esp+41Ch+var_410], ebx
		mov	ebp, offset _names
		mov	[esp+41Ch+var_414], eax
		jz	loc_159C
		push	esi
		push	edi
		nop

loc_123C:				; CODE XREF: _run_cert+3A8j
		push	dword ptr [ebp+0] ; Str2
		push	ebx		; Str1
		call	dword ptr ds:__imp___stricmp
		mov	edi, [ebp+0]
		add	esp, 8
		mov	ebx, eax
		neg	ebx
		sbb	ebx, ebx
		lea	ecx, [edi+1]
		inc	ebx
		nop	word ptr [eax+eax+00h]

loc_125C:				; CODE XREF: _run_cert+75j
		mov	al, [edi]
		inc	edi
		test	al, al
		jnz	short loc_125C
		sub	edi, ecx
		push	edi		; Size
		call	dword ptr ds:__imp__malloc
		push	edi		; Size
		push	dword ptr [ebp+0] ; Src
		mov	esi, eax
		push	esi		; Dst
		mov	[esp+434h+Memory], esi
		call	_memcpy
		push	0
		push	0
		push	edi
		push	esi
		push	[esp+444h+var_40C]
		call	_X509_check_host
		add	esp, 24h
		or	esi, 0FFFFFFFFh
		test	eax, eax
		jns	short loc_12BA
		push	offset ??_C@_0CC@OPBCFAHI@internal?5error?5in?5X509_check_hos@ ; "internal error in X509_check_host"
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		mov	ecx, [esp+42Ch+var_414]
		add	esp, 8
		inc	ds:_errors
		jmp	short loc_12E8
; ---------------------------------------------------------------------------

loc_12BA:				; CODE XREF: _run_cert+A7j
		mov	ecx, [esp+424h+var_414]
		cmp	dword ptr [ecx+8], 0
		jz	short loc_12DD
		cmp	eax, 1
		jnz	short loc_12D1
		test	ebx, ebx
		jnz	short loc_12E8
		mov	esi, eax
		jmp	short loc_12E8
; ---------------------------------------------------------------------------

loc_12D1:				; CODE XREF: _run_cert+DBj
		test	eax, eax
		jnz	short loc_12E8
		test	ebx, ebx
		jz	short loc_12E8
		xor	esi, esi
		jmp	short loc_12E8
; ---------------------------------------------------------------------------

loc_12DD:				; CODE XREF: _run_cert+D6j
		cmp	eax, 1
		mov	eax, 1
		cmovz	esi, eax

loc_12E8:				; CODE XREF: _run_cert+CCj
					; _run_cert+DFj ...
		test	esi, esi
		js	loc_1383
		push	dword ptr [ebp+0]
		mov	edx, offset ??_C@_0P@EEDAGPPN@does?5not?5match?$AA@ ; "does not	match"
		mov	eax, offset ??_C@_07GEPGMPF@matches?$AA@ ; "matches"
		cmovz	eax, edx
		push	eax
		push	[esp+42Ch+var_410]
		lea	eax, [esp+430h+Str]
		push	offset ??_C@_04OODOLJMA@host?$AA@ ; "host"
		push	dword ptr [ecx+4]
		push	offset ??_C@_0BF@LGLMHFEE@?$CFs?3?5?$CFs?3?5?$FL?$CFs?$FN?5?$CFs?5?$FL?$CFs?$FN?$AA@ ; "%s: %s:	[%s] %s	[%s]"
		push	400h
		push	eax
		call	_BIO_snprintf
		mov	eax, _exceptions
		add	esp, 20h
		mov	esi, offset _exceptions
		test	eax, eax
		jz	short loc_136F

loc_1332:				; CODE XREF: _run_cert+181j
		lea	ecx, [esp+424h+Str]
		nop	word ptr [eax+eax+00h]

loc_133C:				; CODE XREF: _run_cert+16Aj
		mov	dl, [ecx]
		cmp	dl, [eax]
		jnz	short loc_135C
		test	dl, dl
		jz	short loc_1358
		mov	dl, [ecx+1]
		cmp	dl, [eax+1]
		jnz	short loc_135C
		add	ecx, 2
		add	eax, 2
		test	dl, dl
		jnz	short loc_133C

loc_1358:				; CODE XREF: _run_cert+158j
		xor	eax, eax
		jmp	short loc_1361
; ---------------------------------------------------------------------------

loc_135C:				; CODE XREF: _run_cert+154j
					; _run_cert+160j
		sbb	eax, eax
		or	eax, 1

loc_1361:				; CODE XREF: _run_cert+16Ej
		test	eax, eax
		jz	short loc_1383
		mov	eax, [esi+4]
		add	esi, 4
		test	eax, eax
		jnz	short loc_1332

loc_136F:				; CODE XREF: _run_cert+144j
		lea	eax, [esp+424h+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__puts
		add	esp, 4
		inc	ds:_errors

loc_1383:				; CODE XREF: _run_cert+FEj
					; _run_cert+177j
		push	0
		push	2
		push	edi
		push	[esp+430h+Memory]
		push	[esp+434h+var_40C]
		call	_X509_check_host
		add	esp, 14h
		or	esi, 0FFFFFFFFh
		test	eax, eax
		jns	short loc_13C4
		push	offset ??_C@_0CC@OPBCFAHI@internal?5error?5in?5X509_check_hos@ ; "internal error in X509_check_host"
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax		; File
		call	_fprintf
		mov	ecx, [esp+42Ch+var_414]
		add	esp, 8
		inc	ds:_errors
		jmp	short loc_13F2
; ---------------------------------------------------------------------------

loc_13C4:				; CODE XREF: _run_cert+1B1j
		mov	ecx, [esp+424h+var_414]
		cmp	dword ptr [ecx+8], 0
		jz	short loc_13E7
		cmp	eax, 1
		jnz	short loc_13DB
		test	ebx, ebx
		jnz	short loc_13F2
		mov	esi, eax
		jmp	short loc_13F2
; ---------------------------------------------------------------------------

loc_13DB:				; CODE XREF: _run_cert+1E5j
		test	eax, eax
		jnz	short loc_13F2
		test	ebx, ebx
		jz	short loc_13F2
		xor	esi, esi
		jmp	short loc_13F2
; ---------------------------------------------------------------------------

loc_13E7:				; CODE XREF: _run_cert+1E0j
		cmp	eax, 1
		mov	eax, 1
		cmovz	esi, eax

loc_13F2:				; CODE XREF: _run_cert+1D6j
					; _run_cert+1E9j ...
		test	esi, esi
		js	loc_1487
		push	dword ptr [ebp+0]
		mov	edx, offset ??_C@_0P@EEDAGPPN@does?5not?5match?$AA@ ; "does not	match"
		mov	eax, offset ??_C@_07GEPGMPF@matches?$AA@ ; "matches"
		cmovz	eax, edx
		push	eax
		push	[esp+42Ch+var_410]
		lea	eax, [esp+430h+Str]
		push	offset ??_C@_0BC@ICPCBDBO@host?9no?9wildcards?$AA@ ; "host-no-wildcards"
		push	dword ptr [ecx+4]
		push	offset ??_C@_0BF@LGLMHFEE@?$CFs?3?5?$CFs?3?5?$FL?$CFs?$FN?5?$CFs?5?$FL?$CFs?$FN?$AA@ ; "%s: %s:	[%s] %s	[%s]"
		push	400h
		push	eax
		call	_BIO_snprintf
		mov	eax, _exceptions
		add	esp, 20h
		mov	esi, offset _exceptions
		test	eax, eax
		jz	short loc_1473

loc_143C:				; CODE XREF: _run_cert+285j
		lea	ecx, [esp+424h+Str]

loc_1440:				; CODE XREF: _run_cert+26Ej
		mov	dl, [ecx]
		cmp	dl, [eax]
		jnz	short loc_1460
		test	dl, dl
		jz	short loc_145C
		mov	dl, [ecx+1]
		cmp	dl, [eax+1]
		jnz	short loc_1460
		add	ecx, 2
		add	eax, 2
		test	dl, dl
		jnz	short loc_1440

loc_145C:				; CODE XREF: _run_cert+25Cj
		xor	eax, eax
		jmp	short loc_1465
; ---------------------------------------------------------------------------

loc_1460:				; CODE XREF: _run_cert+258j
					; _run_cert+264j
		sbb	eax, eax
		or	eax, 1

loc_1465:				; CODE XREF: _run_cert+272j
		test	eax, eax
		jz	short loc_1487
		mov	eax, [esi+4]
		add	esi, 4
		test	eax, eax
		jnz	short loc_143C

loc_1473:				; CODE XREF: _run_cert+24Ej
		lea	eax, [esp+424h+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__puts
		add	esp, 4
		inc	ds:_errors

loc_1487:				; CODE XREF: _run_cert+208j
					; _run_cert+27Bj
		push	0
		push	edi
		mov	edi, [esp+42Ch+Memory]
		push	edi
		push	[esp+430h+var_40C]
		call	_X509_check_email
		mov	ecx, [esp+434h+var_414]
		add	esp, 10h
		or	esi, 0FFFFFFFFh
		cmp	dword ptr [ecx+0Ch], 0
		jz	short loc_14DB
		test	eax, eax
		jz	short loc_14BB
		test	ebx, ebx
		mov	ebx, [esp+424h+var_410]
		jnz	short loc_14E9
		mov	esi, 1
		jmp	short loc_14E9
; ---------------------------------------------------------------------------

loc_14BB:				; CODE XREF: _run_cert+2BEj
		test	ebx, ebx
		mov	ebx, [esp+424h+var_410]
		jz	short loc_14E9
		push	40h ; '@'       ; Val
		push	ebx		; Str
		call	dword ptr ds:__imp__strchr
		mov	ecx, [esp+42Ch+var_414]
		add	esp, 8
		test	eax, eax
		jz	short loc_14E9
		xor	esi, esi
		jmp	short loc_14E9
; ---------------------------------------------------------------------------

loc_14DB:				; CODE XREF: _run_cert+2BAj
		mov	ebx, [esp+424h+var_410]
		test	eax, eax
		mov	eax, 1
		cmovnz	esi, eax

loc_14E9:				; CODE XREF: _run_cert+2C6j
					; _run_cert+2CDj ...
		test	esi, esi
		js	loc_1583
		push	dword ptr [ebp+0]
		mov	edx, offset ??_C@_0P@EEDAGPPN@does?5not?5match?$AA@ ; "does not	match"
		mov	eax, offset ??_C@_07GEPGMPF@matches?$AA@ ; "matches"
		cmovz	eax, edx
		push	eax
		push	ebx
		push	offset ??_C@_05HKHCDHCL@email?$AA@ ; "email"
		push	dword ptr [ecx+4]
		lea	eax, [esp+438h+Str]
		push	offset ??_C@_0BF@LGLMHFEE@?$CFs?3?5?$CFs?3?5?$FL?$CFs?$FN?5?$CFs?5?$FL?$CFs?$FN?$AA@ ; "%s: %s:	[%s] %s	[%s]"
		push	400h
		push	eax
		call	_BIO_snprintf
		mov	ecx, _exceptions
		add	esp, 20h
		mov	esi, offset _exceptions
		test	ecx, ecx
		jz	short loc_156F

loc_1531:				; CODE XREF: _run_cert+381j
		lea	eax, [esp+424h+Str]
		nop	dword ptr [eax+00000000h]

loc_153C:				; CODE XREF: _run_cert+36Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_155C
		test	dl, dl
		jz	short loc_1558
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_155C
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_153C

loc_1558:				; CODE XREF: _run_cert+358j
		xor	eax, eax
		jmp	short loc_1561
; ---------------------------------------------------------------------------

loc_155C:				; CODE XREF: _run_cert+354j
					; _run_cert+360j
		sbb	eax, eax
		or	eax, 1

loc_1561:				; CODE XREF: _run_cert+36Ej
		test	eax, eax
		jz	short loc_1583
		mov	ecx, [esi+4]
		add	esi, 4
		test	ecx, ecx
		jnz	short loc_1531

loc_156F:				; CODE XREF: _run_cert+343j
		lea	eax, [esp+424h+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__puts
		add	esp, 4
		inc	ds:_errors

loc_1583:				; CODE XREF: _run_cert+2FFj
					; _run_cert+377j
		push	edi		; Memory
		add	ebp, 4
		call	dword ptr ds:__imp__free
		add	esp, 4
		cmp	dword ptr [ebp+0], 0
		jnz	loc_123C
		pop	edi
		pop	esi

loc_159C:				; CODE XREF: _run_cert+47j
		mov	ecx, [esp+41Ch+var_4]
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 414h
		retn
_run_cert	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 15B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_altname	proc near		; CODE XREF: _set_altname_dns+Cp
					; _set_altname_email+Cp

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 8
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		push	edi
		mov	[esp+18h+var_4], 0
		xor	ebx, ebx
		xor	edi, edi
		call	_sk_new_null
		mov	[esp+18h+var_8], eax
		test	eax, eax
		jz	$out$27
		mov	ebp, [esp+18h+arg_4]
		test	ebp, ebp
		jz	short loc_1642
		lea	esi, [esp+18h+arg_4]

loc_15EB:				; CODE XREF: _set_altname+88j
		call	_GENERAL_NAME_new
		mov	ebx, eax
		test	ebx, ebx
		jz	short $out$27
		call	_ASN1_IA5STRING_new
		mov	edi, eax
		test	edi, edi
		jz	short $out$27
		push	0FFFFFFFFh
		push	dword ptr [esi+4]
		push	edi
		call	_ASN1_STRING_set
		add	esp, 0Ch
		test	eax, eax
		jz	short $out$27
		lea	eax, [ebp-1]
		cmp	eax, 1
		ja	short loc_1689
		push	edi
		push	ebp
		push	ebx
		call	_GENERAL_NAME_set0_value
		push	ebx
		push	[esp+28h+var_8]
		xor	edi, edi
		call	_sk_push
		mov	ebp, [esi+8]
		add	esi, 8
		add	esp, 14h
		xor	ebx, ebx
		test	ebp, ebp
		jnz	short loc_15EB
		mov	eax, [esp+18h+var_8]

loc_1642:				; CODE XREF: _set_altname+31j
		push	0
		push	0
		push	eax
		push	55h ; 'U'
		push	[esp+28h+arg_0]
		call	_X509_add1_ext_i2d
		xor	ecx, ecx
		add	esp, 14h
		test	eax, eax
		mov	edx, 1
		cmovnz	ecx, edx
		mov	[esp+18h+var_4], ecx

$out$27:				; CODE XREF: _set_altname+25j
					; _set_altname+40j ...
		push	edi
		call	_ASN1_IA5STRING_free
		push	ebx
		call	_GENERAL_NAME_free
		push	[esp+20h+var_8]
		call	_GENERAL_NAMES_free
		mov	eax, [esp+24h+var_4]
		add	esp, 0Ch
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_1689:				; CODE XREF: _set_altname+65j
		call	dword ptr ds:__imp__abort

$LN26:					; $LN25
		int	3
_set_altname	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1690h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_set_cn		proc near		; CODE XREF: _set_cn1+Cp
					; _set_cn_and_email+13p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		push	edi
		xor	ebx, ebx
		call	_X509_NAME_new
		mov	edi, eax
		test	edi, edi
		jz	short $out$17
		mov	eax, [esp+8+arg_4]
		push	esi
		test	eax, eax
		jz	short loc_16D6
		lea	esi, [esp+0Ch+arg_4]
		nop	dword ptr [eax+00h]

loc_16B0:				; CODE XREF: _set_cn+44j
		push	1
		push	0FFFFFFFFh
		push	0FFFFFFFFh
		push	dword ptr [esi+4]
		push	1001h
		push	eax
		push	edi
		call	_X509_NAME_add_entry_by_NID
		add	esp, 1Ch
		test	eax, eax
		jz	short loc_16ED
		mov	eax, [esi+8]
		add	esi, 8
		test	eax, eax
		jnz	short loc_16B0

loc_16D6:				; CODE XREF: _set_cn+16j
		push	edi
		push	[esp+10h+arg_0]
		call	_X509_set_subject_name
		add	esp, 8
		mov	ecx, 1
		test	eax, eax
		cmovnz	ebx, ecx

loc_16ED:				; CODE XREF: _set_cn+3Aj
		pop	esi

$out$17:				; CODE XREF: _set_cn+Dj
		push	edi
		call	_X509_NAME_free
		add	esp, 4
		mov	eax, ebx
		pop	edi
		pop	ebx
		retn
_set_cn		endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16FCh
; COMDAT (pick any)
		public ??_C@_0BC@IIMOPAAA@dummy?$EAexample?4com?$AA@
; `string'
??_C@_0BC@IIMOPAAA@dummy?$EAexample?4com?$AA@ db 'dummy@example.com',0
					; DATA XREF: _set_cn_and_email+2o
					; _set_email2+8o ...
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1710h
; COMDAT (pick any)
		public ??_C@_0M@JHPFAHIB@dummy?5value?$AA@
; `string'
??_C@_0M@JHPFAHIB@dummy?5value?$AA@ db 'dummy value',0 ; DATA XREF: _set_cn2+8o
					; _set_cn3+2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 171Ch
; COMDAT (pick any)
		public ??_C@_0BA@NFKHMLCF@www?4example?4org?$AA@
; `string'
??_C@_0BA@NFKHMLCF@www?4example?4org?$AA@ db 'www.example.org',0
					; DATA XREF: _set_email_and_cn+2o
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 172Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
_errors		dd ?			; DATA XREF: _check_message+8Aw
					; _main+80r ...
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1730h
; COMDAT (pick any)
		public ??_C@_07GEPGMPF@matches?$AA@
; `string'
??_C@_07GEPGMPF@matches?$AA@ db	'matches',0 ; DATA XREF: _check_message+43o
					; _run_cert+10Co ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1738h
; COMDAT (pick any)
		public ??_C@_0P@EEDAGPPN@does?5not?5match?$AA@
; `string'
??_C@_0P@EEDAGPPN@does?5not?5match?$AA@	db 'does not match',0
					; DATA XREF: _check_message+48o
					; _run_cert+107o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1748h
; COMDAT (pick any)
		public ??_C@_0BF@LGLMHFEE@?$CFs?3?5?$CFs?3?5?$FL?$CFs?$FN?5?$CFs?5?$FL?$CFs?$FN?$AA@
; `string'
??_C@_0BF@LGLMHFEE@?$CFs?3?5?$CFs?3?5?$FL?$CFs?$FN?5?$CFs?5?$FL?$CFs?$FN?$AA@ db '%s: %s: [%s] %s [%s]',0
					; DATA XREF: _check_message+5Ao
					; _run_cert+125o ...
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1760h
; COMDAT (pick any)
		public ??_C@_0CC@OPBCFAHI@internal?5error?5in?5X509_check_hos@
; char `string'[]
??_C@_0CC@OPBCFAHI@internal?5error?5in?5X509_check_hos@	db 'internal error in X509_check_host',0
					; DATA XREF: _run_cert+A9o
					; _run_cert+1B3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1784h
; COMDAT (pick any)
		public ??_C@_04OODOLJMA@host?$AA@
; `string'
??_C@_04OODOLJMA@host?$AA@ db 'host',0  ; DATA XREF: _run_cert+11Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 178Ch
; COMDAT (pick any)
		public ??_C@_0BC@ICPCBDBO@host?9no?9wildcards?$AA@
; `string'
??_C@_0BC@ICPCBDBO@host?9no?9wildcards?$AA@ db 'host-no-wildcards',0
					; DATA XREF: _run_cert+227o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 17A0h
; COMDAT (pick any)
		public ??_C@_05HKHCDHCL@email?$AA@
; `string'
??_C@_05HKHCDHCL@email?$AA@ db 'email',0 ; DATA XREF: _run_cert+317o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 17A8h
; COMDAT (pick any)
		public ??_C@_0BC@DCBLMOHC@make_cert?5failed?6?$AA@
; char `string'[]
??_C@_0BC@DCBLMOHC@make_cert?5failed?6?$AA@ db 'make_cert failed',0Ah,0
					; DATA XREF: _main:loc_1198o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 17BCh
; COMDAT (pick any)
		public ??_C@_0BK@DOMNOLHF@X509?5name?5setting?5failed?6?$AA@
; char `string'[]
??_C@_0BK@DOMNOLHF@X509?5name?5setting?5failed?6?$AA@ db 'X509 name setting failed',0Ah,0
					; DATA XREF: _main:loc_1175o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _main+94p
					; _main+B7p ...
; int __cdecl _puts(const char *Str)
		extrn __imp__puts:near	; CODE XREF: _check_message+81p
					; _run_cert+188p ...
		extrn __imp____stdio_common_vfprintf:near ; CODE XREF: __vfprintf_l+1Ap
					; _fprintf+19p
					; DATA XREF: ...
; void __cdecl _free(void *Memory)
		extrn __imp__free:near	; CODE XREF: _run_cert+39Bp
					; DATA XREF: _run_cert+39Br
; void *__cdecl	_malloc(size_t Size)
		extrn __imp__malloc:near ; CODE	XREF: _run_cert+7Ap
					; DATA XREF: _run_cert+7Ar
; void __cdecl _abort()
		extrn __imp__abort:near	; CODE XREF: _set_altname:loc_1689p
					; DATA XREF: _set_altname:loc_1689r
		extrn _sk_new_null:near	; CODE XREF: _set_altname+1Ap
		extrn _sk_push:near	; CODE XREF: _set_altname+76p
		extrn _BIO_snprintf:near ; CODE	XREF: _check_message+65p
					; _run_cert+130p ...
		extrn _ASN1_STRING_set:near ; CODE XREF: _set_altname+53p
		extrn _ASN1_IA5STRING_new:near ; CODE XREF: _set_altname+42p
		extrn _ASN1_IA5STRING_free:near	; CODE XREF: _set_altname+B2p
		extrn _X509_NAME_new:near ; CODE XREF: _set_cn+4p
		extrn _X509_NAME_free:near ; CODE XREF:	_main+3Fp
					; _make_cert+21p ...
		extrn _X509_new:near	; CODE XREF: _main+22p	_make_cert+4p
		extrn _X509_free:near	; CODE XREF: _main+64p
		extrn _X509_set_version:near ; CODE XREF: _main+30p
					; _make_cert+12p
		extrn _X509_set_subject_name:near ; CODE XREF: _set_cn+4Bp
		extrn _X509_NAME_add_entry_by_NID:near ; CODE XREF: _set_cn+30p
		extrn _X509_add1_ext_i2d:near ;	CODE XREF: _set_altname+99p
		extrn _GENERAL_NAME_new:near ; CODE XREF: _set_altname:loc_15EBp
		extrn _GENERAL_NAME_free:near ;	CODE XREF: _set_altname+B8p
		extrn _GENERAL_NAMES_free:near ; CODE XREF: _set_altname+C1p
		extrn _GENERAL_NAME_set0_value:near ; CODE XREF: _set_altname+6Ap
		extrn _X509_check_host:near ; CODE XREF: _run_cert+9Ap
					; _run_cert+1A4p
		extrn _X509_check_email:near ; CODE XREF: _run_cert+2A7p
; char *__cdecl	_strchr(const char *Str, int Val)
		extrn __imp__strchr:near ; CODE	XREF: _run_cert+2DAp
					; DATA XREF: _run_cert+2DAr
; int __cdecl __stricmp(const char *Str1, const	char *Str2)
		extrn __imp___stricmp:near ; CODE XREF:	_run_cert+54p
					; DATA XREF: _run_cert+54r
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _check_message+9Bp
					; _run_cert+3BBp
		extrn __chkstk:near	; CODE XREF: _check_message+5p
					; _run_cert+5p	...
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _run_cert+8Bp
; `__local_stdio_printf_options'::`2'::_OptionsStorage
		extrn ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:near
					; DATA XREF: ___local_stdio_printf_optionso
		extrn ___security_cookie:near ;	DATA XREF: _check_message+Ar
					; _run_cert+Ar


		end

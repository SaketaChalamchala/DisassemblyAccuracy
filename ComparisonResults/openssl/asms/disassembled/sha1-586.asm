;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	88525CE4B6CA1A9E9C3F5CF2366CCFB4
; Input	CRC32 :	44E47AE9

; ---------------------------------------------------------------------------
; File Name   :	C:\compspace\Diff\openssl\obj\sha1-586.obj
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
; Segment alignment '64byte' can not be represented in assembly
_text		segment	para public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

		public L$_sha1_block_data_order_begin
L$_sha1_block_data_order_begin:
		push	ebp
		push	ebx
		push	esi
		push	edi
		call	$+5

L$000pic_point:
		pop	ebp
		lea	esi, _OPENSSL_ia32cap_P
		lea	ebp, [ebp+2F77h]
		mov	eax, [esi]
		mov	edx, [esi+4]
		test	edx, 200h
		jz	L$001x86
		mov	ecx, [esi+8]
		test	eax, 1000000h
		jz	L$001x86
		test	ecx, 20000000h
		jnz	L$shaext_shortcut
		and	edx, 10000000h
		and	eax, 40000000h
		or	eax, edx
		cmp	eax, 50000000h
		jz	L$avx_shortcut
		jmp	L$ssse3_shortcut
; ---------------------------------------------------------------------------
		align 10h

L$001x86:				; CODE XREF: .text:00000021j
					; .text:0000002Fj
		mov	ebp, [esp+14h]
		mov	esi, [esp+18h]
		mov	eax, [esp+1Ch]
		sub	esp, 4Ch
		shl	eax, 6
		add	eax, esi
		mov	[esp+68h], eax
		mov	edi, [ebp+10h]
		jmp	$+5
; ---------------------------------------------------------------------------

L$002loop:				; CODE XREF: .text:0000007Bj
					; .text:00000F5Ej
		mov	eax, [esi]
		mov	ebx, [esi+4]
		mov	ecx, [esi+8]
		mov	edx, [esi+0Ch]
		bswap	eax
		bswap	ebx
		bswap	ecx
		bswap	edx
		mov	[esp], eax
		mov	[esp+4], ebx
		mov	[esp+8], ecx
		mov	[esp+0Ch], edx
		mov	eax, [esi+10h]
		mov	ebx, [esi+14h]
		mov	ecx, [esi+18h]
		mov	edx, [esi+1Ch]
		bswap	eax
		bswap	ebx
		bswap	ecx
		bswap	edx
		mov	[esp+10h], eax
		mov	[esp+14h], ebx
		mov	[esp+18h], ecx
		mov	[esp+1Ch], edx
		mov	eax, [esi+20h]
		mov	ebx, [esi+24h]
		mov	ecx, [esi+28h]
		mov	edx, [esi+2Ch]
		bswap	eax
		bswap	ebx
		bswap	ecx
		bswap	edx
		mov	[esp+20h], eax
		mov	[esp+24h], ebx
		mov	[esp+28h], ecx
		mov	[esp+2Ch], edx
		mov	eax, [esi+30h]
		mov	ebx, [esi+34h]
		mov	ecx, [esi+38h]
		mov	edx, [esi+3Ch]
		bswap	eax
		bswap	ebx
		bswap	ecx
		bswap	edx
		mov	[esp+30h], eax
		mov	[esp+34h], ebx
		mov	[esp+38h], ecx
		mov	[esp+3Ch], edx
		mov	[esp+64h], esi
		mov	eax, [ebp+0]
		mov	ebx, [ebp+4]
		mov	ecx, [ebp+8]
		mov	edx, [ebp+0Ch]
		mov	esi, ecx
		mov	ebp, eax
		rol	ebp, 5
		xor	esi, edx
		add	ebp, edi
		mov	edi, [esp]
		and	esi, ebx
		ror	ebx, 2
		xor	esi, edx
		lea	ebp, [ebp+edi+5A827999h]
		add	ebp, esi
		mov	edi, ebx
		mov	esi, ebp
		rol	ebp, 5
		xor	edi, ecx
		add	ebp, edx
		mov	edx, [esp+4]
		and	edi, eax
		ror	eax, 2
		xor	edi, ecx
		lea	ebp, [ebp+edx+5A827999h]
		add	ebp, edi
		mov	edx, eax
		mov	edi, ebp
		rol	ebp, 5
		xor	edx, ebx
		add	ebp, ecx
		mov	ecx, [esp+8]
		and	edx, esi
		ror	esi, 2
		xor	edx, ebx
		lea	ebp, [ebp+ecx+5A827999h]
		add	ebp, edx
		mov	ecx, esi
		mov	edx, ebp
		rol	ebp, 5
		xor	ecx, eax
		add	ebp, ebx
		mov	ebx, [esp+0Ch]
		and	ecx, edi
		ror	edi, 2
		xor	ecx, eax
		lea	ebp, [ebp+ebx+5A827999h]
		add	ebp, ecx
		mov	ebx, edi
		mov	ecx, ebp
		rol	ebp, 5
		xor	ebx, esi
		add	ebp, eax
		mov	eax, [esp+10h]
		and	ebx, edx
		ror	edx, 2
		xor	ebx, esi
		lea	ebp, [ebp+eax+5A827999h]
		add	ebp, ebx
		mov	eax, edx
		mov	ebx, ebp
		rol	ebp, 5
		xor	eax, edi
		add	ebp, esi
		mov	esi, [esp+14h]
		and	eax, ecx
		ror	ecx, 2
		xor	eax, edi
		lea	ebp, [ebp+esi+5A827999h]
		add	ebp, eax
		mov	esi, ecx
		mov	eax, ebp
		rol	ebp, 5
		xor	esi, edx
		add	ebp, edi
		mov	edi, [esp+18h]
		and	esi, ebx
		ror	ebx, 2
		xor	esi, edx
		lea	ebp, [ebp+edi+5A827999h]
		add	ebp, esi
		mov	edi, ebx
		mov	esi, ebp
		rol	ebp, 5
		xor	edi, ecx
		add	ebp, edx
		mov	edx, [esp+1Ch]
		and	edi, eax
		ror	eax, 2
		xor	edi, ecx
		lea	ebp, [ebp+edx+5A827999h]
		add	ebp, edi
		mov	edx, eax
		mov	edi, ebp
		rol	ebp, 5
		xor	edx, ebx
		add	ebp, ecx
		mov	ecx, [esp+20h]
		and	edx, esi
		ror	esi, 2
		xor	edx, ebx
		lea	ebp, [ebp+ecx+5A827999h]
		add	ebp, edx
		mov	ecx, esi
		mov	edx, ebp
		rol	ebp, 5
		xor	ecx, eax
		add	ebp, ebx
		mov	ebx, [esp+24h]
		and	ecx, edi
		ror	edi, 2
		xor	ecx, eax
		lea	ebp, [ebp+ebx+5A827999h]
		add	ebp, ecx
		mov	ebx, edi
		mov	ecx, ebp
		rol	ebp, 5
		xor	ebx, esi
		add	ebp, eax
		mov	eax, [esp+28h]
		and	ebx, edx
		ror	edx, 2
		xor	ebx, esi
		lea	ebp, [ebp+eax+5A827999h]
		add	ebp, ebx
		mov	eax, edx
		mov	ebx, ebp
		rol	ebp, 5
		xor	eax, edi
		add	ebp, esi
		mov	esi, [esp+2Ch]
		and	eax, ecx
		ror	ecx, 2
		xor	eax, edi
		lea	ebp, [ebp+esi+5A827999h]
		add	ebp, eax
		mov	esi, ecx
		mov	eax, ebp
		rol	ebp, 5
		xor	esi, edx
		add	ebp, edi
		mov	edi, [esp+30h]
		and	esi, ebx
		ror	ebx, 2
		xor	esi, edx
		lea	ebp, [ebp+edi+5A827999h]
		add	ebp, esi
		mov	edi, ebx
		mov	esi, ebp
		rol	ebp, 5
		xor	edi, ecx
		add	ebp, edx
		mov	edx, [esp+34h]
		and	edi, eax
		ror	eax, 2
		xor	edi, ecx
		lea	ebp, [ebp+edx+5A827999h]
		add	ebp, edi
		mov	edx, eax
		mov	edi, ebp
		rol	ebp, 5
		xor	edx, ebx
		add	ebp, ecx
		mov	ecx, [esp+38h]
		and	edx, esi
		ror	esi, 2
		xor	edx, ebx
		lea	ebp, [ebp+ecx+5A827999h]
		add	ebp, edx
		mov	ecx, esi
		mov	edx, ebp
		rol	ebp, 5
		xor	ecx, eax
		add	ebp, ebx
		mov	ebx, [esp+3Ch]
		and	ecx, edi
		ror	edi, 2
		xor	ecx, eax
		lea	ebp, [ebp+ebx+5A827999h]
		mov	ebx, [esp]
		add	ecx, ebp
		mov	ebp, edi
		xor	ebx, [esp+8]
		xor	ebp, esi
		xor	ebx, [esp+20h]
		and	ebp, edx
		xor	ebx, [esp+34h]
		rol	ebx, 1
		xor	ebp, esi
		add	eax, ebp
		mov	ebp, ecx
		ror	edx, 2
		mov	[esp], ebx
		rol	ebp, 5
		lea	ebx, [ebx+eax+5A827999h]
		mov	eax, [esp+4]
		add	ebx, ebp
		mov	ebp, edx
		xor	eax, [esp+0Ch]
		xor	ebp, edi
		xor	eax, [esp+24h]
		and	ebp, ecx
		xor	eax, [esp+38h]
		rol	eax, 1
		xor	ebp, edi
		add	esi, ebp
		mov	ebp, ebx
		ror	ecx, 2
		mov	[esp+4], eax
		rol	ebp, 5
		lea	eax, [eax+esi+5A827999h]
		mov	esi, [esp+8]
		add	eax, ebp
		mov	ebp, ecx
		xor	esi, [esp+10h]
		xor	ebp, edx
		xor	esi, [esp+28h]
		and	ebp, ebx
		xor	esi, [esp+3Ch]
		rol	esi, 1
		xor	ebp, edx
		add	edi, ebp
		mov	ebp, eax
		ror	ebx, 2
		mov	[esp+8], esi
		rol	ebp, 5
		lea	esi, [esi+edi+5A827999h]
		mov	edi, [esp+0Ch]
		add	esi, ebp
		mov	ebp, ebx
		xor	edi, [esp+14h]
		xor	ebp, ecx
		xor	edi, [esp+2Ch]
		and	ebp, eax
		xor	edi, [esp]
		rol	edi, 1
		xor	ebp, ecx
		add	edx, ebp
		mov	ebp, esi
		ror	eax, 2
		mov	[esp+0Ch], edi
		rol	ebp, 5
		lea	edi, [edi+edx+5A827999h]
		mov	edx, [esp+10h]
		add	edi, ebp
		mov	ebp, esi
		xor	edx, [esp+18h]
		xor	ebp, eax
		xor	edx, [esp+30h]
		xor	ebp, ebx
		xor	edx, [esp+4]
		rol	edx, 1
		add	ecx, ebp
		ror	esi, 2
		mov	ebp, edi
		rol	ebp, 5
		mov	[esp+10h], edx
		lea	edx, [edx+ecx+6ED9EBA1h]
		mov	ecx, [esp+14h]
		add	edx, ebp
		mov	ebp, edi
		xor	ecx, [esp+1Ch]
		xor	ebp, esi
		xor	ecx, [esp+34h]
		xor	ebp, eax
		xor	ecx, [esp+8]
		rol	ecx, 1
		add	ebx, ebp
		ror	edi, 2
		mov	ebp, edx
		rol	ebp, 5
		mov	[esp+14h], ecx
		lea	ecx, [ecx+ebx+6ED9EBA1h]
		mov	ebx, [esp+18h]
		add	ecx, ebp
		mov	ebp, edx
		xor	ebx, [esp+20h]
		xor	ebp, edi
		xor	ebx, [esp+38h]
		xor	ebp, esi
		xor	ebx, [esp+0Ch]
		rol	ebx, 1
		add	eax, ebp
		ror	edx, 2
		mov	ebp, ecx
		rol	ebp, 5
		mov	[esp+18h], ebx
		lea	ebx, [ebx+eax+6ED9EBA1h]
		mov	eax, [esp+1Ch]
		add	ebx, ebp
		mov	ebp, ecx
		xor	eax, [esp+24h]
		xor	ebp, edx
		xor	eax, [esp+3Ch]
		xor	ebp, edi
		xor	eax, [esp+10h]
		rol	eax, 1
		add	esi, ebp
		ror	ecx, 2
		mov	ebp, ebx
		rol	ebp, 5
		mov	[esp+1Ch], eax
		lea	eax, [eax+esi+6ED9EBA1h]
		mov	esi, [esp+20h]
		add	eax, ebp
		mov	ebp, ebx
		xor	esi, [esp+28h]
		xor	ebp, ecx
		xor	esi, [esp]
		xor	ebp, edx
		xor	esi, [esp+14h]
		rol	esi, 1
		add	edi, ebp
		ror	ebx, 2
		mov	ebp, eax
		rol	ebp, 5
		mov	[esp+20h], esi
		lea	esi, [esi+edi+6ED9EBA1h]
		mov	edi, [esp+24h]
		add	esi, ebp
		mov	ebp, eax
		xor	edi, [esp+2Ch]
		xor	ebp, ebx
		xor	edi, [esp+4]
		xor	ebp, ecx
		xor	edi, [esp+18h]
		rol	edi, 1
		add	edx, ebp
		ror	eax, 2
		mov	ebp, esi
		rol	ebp, 5
		mov	[esp+24h], edi
		lea	edi, [edi+edx+6ED9EBA1h]
		mov	edx, [esp+28h]
		add	edi, ebp
		mov	ebp, esi
		xor	edx, [esp+30h]
		xor	ebp, eax
		xor	edx, [esp+8]
		xor	ebp, ebx
		xor	edx, [esp+1Ch]
		rol	edx, 1
		add	ecx, ebp
		ror	esi, 2
		mov	ebp, edi
		rol	ebp, 5
		mov	[esp+28h], edx
		lea	edx, [edx+ecx+6ED9EBA1h]
		mov	ecx, [esp+2Ch]
		add	edx, ebp
		mov	ebp, edi
		xor	ecx, [esp+34h]
		xor	ebp, esi
		xor	ecx, [esp+0Ch]
		xor	ebp, eax
		xor	ecx, [esp+20h]
		rol	ecx, 1
		add	ebx, ebp
		ror	edi, 2
		mov	ebp, edx
		rol	ebp, 5
		mov	[esp+2Ch], ecx
		lea	ecx, [ecx+ebx+6ED9EBA1h]
		mov	ebx, [esp+30h]
		add	ecx, ebp
		mov	ebp, edx
		xor	ebx, [esp+38h]
		xor	ebp, edi
		xor	ebx, [esp+10h]
		xor	ebp, esi
		xor	ebx, [esp+24h]
		rol	ebx, 1
		add	eax, ebp
		ror	edx, 2
		mov	ebp, ecx
		rol	ebp, 5
		mov	[esp+30h], ebx
		lea	ebx, [ebx+eax+6ED9EBA1h]
		mov	eax, [esp+34h]
		add	ebx, ebp
		mov	ebp, ecx
		xor	eax, [esp+3Ch]
		xor	ebp, edx
		xor	eax, [esp+14h]
		xor	ebp, edi
		xor	eax, [esp+28h]
		rol	eax, 1
		add	esi, ebp
		ror	ecx, 2
		mov	ebp, ebx
		rol	ebp, 5
		mov	[esp+34h], eax
		lea	eax, [eax+esi+6ED9EBA1h]
		mov	esi, [esp+38h]
		add	eax, ebp
		mov	ebp, ebx
		xor	esi, [esp]
		xor	ebp, ecx
		xor	esi, [esp+18h]
		xor	ebp, edx
		xor	esi, [esp+2Ch]
		rol	esi, 1
		add	edi, ebp
		ror	ebx, 2
		mov	ebp, eax
		rol	ebp, 5
		mov	[esp+38h], esi
		lea	esi, [esi+edi+6ED9EBA1h]
		mov	edi, [esp+3Ch]
		add	esi, ebp
		mov	ebp, eax
		xor	edi, [esp+4]
		xor	ebp, ebx
		xor	edi, [esp+1Ch]
		xor	ebp, ecx
		xor	edi, [esp+30h]
		rol	edi, 1
		add	edx, ebp
		ror	eax, 2
		mov	ebp, esi
		rol	ebp, 5
		mov	[esp+3Ch], edi
		lea	edi, [edi+edx+6ED9EBA1h]
		mov	edx, [esp]
		add	edi, ebp
		mov	ebp, esi
		xor	edx, [esp+8]
		xor	ebp, eax
		xor	edx, [esp+20h]
		xor	ebp, ebx
		xor	edx, [esp+34h]
		rol	edx, 1
		add	ecx, ebp
		ror	esi, 2
		mov	ebp, edi
		rol	ebp, 5
		mov	[esp], edx
		lea	edx, [edx+ecx+6ED9EBA1h]
		mov	ecx, [esp+4]
		add	edx, ebp
		mov	ebp, edi
		xor	ecx, [esp+0Ch]
		xor	ebp, esi
		xor	ecx, [esp+24h]
		xor	ebp, eax
		xor	ecx, [esp+38h]
		rol	ecx, 1
		add	ebx, ebp
		ror	edi, 2
		mov	ebp, edx
		rol	ebp, 5
		mov	[esp+4], ecx
		lea	ecx, [ecx+ebx+6ED9EBA1h]
		mov	ebx, [esp+8]
		add	ecx, ebp
		mov	ebp, edx
		xor	ebx, [esp+10h]
		xor	ebp, edi
		xor	ebx, [esp+28h]
		xor	ebp, esi
		xor	ebx, [esp+3Ch]
		rol	ebx, 1
		add	eax, ebp
		ror	edx, 2
		mov	ebp, ecx
		rol	ebp, 5
		mov	[esp+8], ebx
		lea	ebx, [ebx+eax+6ED9EBA1h]
		mov	eax, [esp+0Ch]
		add	ebx, ebp
		mov	ebp, ecx
		xor	eax, [esp+14h]
		xor	ebp, edx
		xor	eax, [esp+2Ch]
		xor	ebp, edi
		xor	eax, [esp]
		rol	eax, 1
		add	esi, ebp
		ror	ecx, 2
		mov	ebp, ebx
		rol	ebp, 5
		mov	[esp+0Ch], eax
		lea	eax, [eax+esi+6ED9EBA1h]
		mov	esi, [esp+10h]
		add	eax, ebp
		mov	ebp, ebx
		xor	esi, [esp+18h]
		xor	ebp, ecx
		xor	esi, [esp+30h]
		xor	ebp, edx
		xor	esi, [esp+4]
		rol	esi, 1
		add	edi, ebp
		ror	ebx, 2
		mov	ebp, eax
		rol	ebp, 5
		mov	[esp+10h], esi
		lea	esi, [esi+edi+6ED9EBA1h]
		mov	edi, [esp+14h]
		add	esi, ebp
		mov	ebp, eax
		xor	edi, [esp+1Ch]
		xor	ebp, ebx
		xor	edi, [esp+34h]
		xor	ebp, ecx
		xor	edi, [esp+8]
		rol	edi, 1
		add	edx, ebp
		ror	eax, 2
		mov	ebp, esi
		rol	ebp, 5
		mov	[esp+14h], edi
		lea	edi, [edi+edx+6ED9EBA1h]
		mov	edx, [esp+18h]
		add	edi, ebp
		mov	ebp, esi
		xor	edx, [esp+20h]
		xor	ebp, eax
		xor	edx, [esp+38h]
		xor	ebp, ebx
		xor	edx, [esp+0Ch]
		rol	edx, 1
		add	ecx, ebp
		ror	esi, 2
		mov	ebp, edi
		rol	ebp, 5
		mov	[esp+18h], edx
		lea	edx, [edx+ecx+6ED9EBA1h]
		mov	ecx, [esp+1Ch]
		add	edx, ebp
		mov	ebp, edi
		xor	ecx, [esp+24h]
		xor	ebp, esi
		xor	ecx, [esp+3Ch]
		xor	ebp, eax
		xor	ecx, [esp+10h]
		rol	ecx, 1
		add	ebx, ebp
		ror	edi, 2
		mov	ebp, edx
		rol	ebp, 5
		mov	[esp+1Ch], ecx
		lea	ecx, [ecx+ebx+6ED9EBA1h]
		mov	ebx, [esp+20h]
		add	ecx, ebp
		mov	ebp, edi
		xor	ebx, [esp+28h]
		xor	ebp, esi
		xor	ebx, [esp]
		and	ebp, edx
		xor	ebx, [esp+14h]
		rol	ebx, 1
		add	ebp, eax
		ror	edx, 2
		mov	eax, ecx
		rol	eax, 5
		mov	[esp+20h], ebx
		lea	ebx, [ebx+ebp-70E44324h]
		mov	ebp, edi
		add	ebx, eax
		and	ebp, esi
		mov	eax, [esp+24h]
		add	ebx, ebp
		mov	ebp, edx
		xor	eax, [esp+2Ch]
		xor	ebp, edi
		xor	eax, [esp+4]
		and	ebp, ecx
		xor	eax, [esp+18h]
		rol	eax, 1
		add	ebp, esi
		ror	ecx, 2
		mov	esi, ebx
		rol	esi, 5
		mov	[esp+24h], eax
		lea	eax, [eax+ebp-70E44324h]
		mov	ebp, edx
		add	eax, esi
		and	ebp, edi
		mov	esi, [esp+28h]
		add	eax, ebp
		mov	ebp, ecx
		xor	esi, [esp+30h]
		xor	ebp, edx
		xor	esi, [esp+8]
		and	ebp, ebx
		xor	esi, [esp+1Ch]
		rol	esi, 1
		add	ebp, edi
		ror	ebx, 2
		mov	edi, eax
		rol	edi, 5
		mov	[esp+28h], esi
		lea	esi, [esi+ebp-70E44324h]
		mov	ebp, ecx
		add	esi, edi
		and	ebp, edx
		mov	edi, [esp+2Ch]
		add	esi, ebp
		mov	ebp, ebx
		xor	edi, [esp+34h]
		xor	ebp, ecx
		xor	edi, [esp+0Ch]
		and	ebp, eax
		xor	edi, [esp+20h]
		rol	edi, 1
		add	ebp, edx
		ror	eax, 2
		mov	edx, esi
		rol	edx, 5
		mov	[esp+2Ch], edi
		lea	edi, [edi+ebp-70E44324h]
		mov	ebp, ebx
		add	edi, edx
		and	ebp, ecx
		mov	edx, [esp+30h]
		add	edi, ebp
		mov	ebp, eax
		xor	edx, [esp+38h]
		xor	ebp, ebx
		xor	edx, [esp+10h]
		and	ebp, esi
		xor	edx, [esp+24h]
		rol	edx, 1
		add	ebp, ecx
		ror	esi, 2
		mov	ecx, edi
		rol	ecx, 5
		mov	[esp+30h], edx
		lea	edx, [edx+ebp-70E44324h]
		mov	ebp, eax
		add	edx, ecx
		and	ebp, ebx
		mov	ecx, [esp+34h]
		add	edx, ebp
		mov	ebp, esi
		xor	ecx, [esp+3Ch]
		xor	ebp, eax
		xor	ecx, [esp+14h]
		and	ebp, edi
		xor	ecx, [esp+28h]
		rol	ecx, 1
		add	ebp, ebx
		ror	edi, 2
		mov	ebx, edx
		rol	ebx, 5
		mov	[esp+34h], ecx
		lea	ecx, [ecx+ebp-70E44324h]
		mov	ebp, esi
		add	ecx, ebx
		and	ebp, eax
		mov	ebx, [esp+38h]
		add	ecx, ebp
		mov	ebp, edi
		xor	ebx, [esp]
		xor	ebp, esi
		xor	ebx, [esp+18h]
		and	ebp, edx
		xor	ebx, [esp+2Ch]
		rol	ebx, 1
		add	ebp, eax
		ror	edx, 2
		mov	eax, ecx
		rol	eax, 5
		mov	[esp+38h], ebx
		lea	ebx, [ebx+ebp-70E44324h]
		mov	ebp, edi
		add	ebx, eax
		and	ebp, esi
		mov	eax, [esp+3Ch]
		add	ebx, ebp
		mov	ebp, edx
		xor	eax, [esp+4]
		xor	ebp, edi
		xor	eax, [esp+1Ch]
		and	ebp, ecx
		xor	eax, [esp+30h]
		rol	eax, 1
		add	ebp, esi
		ror	ecx, 2
		mov	esi, ebx
		rol	esi, 5
		mov	[esp+3Ch], eax
		lea	eax, [eax+ebp-70E44324h]
		mov	ebp, edx
		add	eax, esi
		and	ebp, edi
		mov	esi, [esp]
		add	eax, ebp
		mov	ebp, ecx
		xor	esi, [esp+8]
		xor	ebp, edx
		xor	esi, [esp+20h]
		and	ebp, ebx
		xor	esi, [esp+34h]
		rol	esi, 1
		add	ebp, edi
		ror	ebx, 2
		mov	edi, eax
		rol	edi, 5
		mov	[esp], esi
		lea	esi, [esi+ebp-70E44324h]
		mov	ebp, ecx
		add	esi, edi
		and	ebp, edx
		mov	edi, [esp+4]
		add	esi, ebp
		mov	ebp, ebx
		xor	edi, [esp+0Ch]
		xor	ebp, ecx
		xor	edi, [esp+24h]
		and	ebp, eax
		xor	edi, [esp+38h]
		rol	edi, 1
		add	ebp, edx
		ror	eax, 2
		mov	edx, esi
		rol	edx, 5
		mov	[esp+4], edi
		lea	edi, [edi+ebp-70E44324h]
		mov	ebp, ebx
		add	edi, edx
		and	ebp, ecx
		mov	edx, [esp+8]
		add	edi, ebp
		mov	ebp, eax
		xor	edx, [esp+10h]
		xor	ebp, ebx
		xor	edx, [esp+28h]
		and	ebp, esi
		xor	edx, [esp+3Ch]
		rol	edx, 1
		add	ebp, ecx
		ror	esi, 2
		mov	ecx, edi
		rol	ecx, 5
		mov	[esp+8], edx
		lea	edx, [edx+ebp-70E44324h]
		mov	ebp, eax
		add	edx, ecx
		and	ebp, ebx
		mov	ecx, [esp+0Ch]
		add	edx, ebp
		mov	ebp, esi
		xor	ecx, [esp+14h]
		xor	ebp, eax
		xor	ecx, [esp+2Ch]
		and	ebp, edi
		xor	ecx, [esp]
		rol	ecx, 1
		add	ebp, ebx
		ror	edi, 2
		mov	ebx, edx
		rol	ebx, 5
		mov	[esp+0Ch], ecx
		lea	ecx, [ecx+ebp-70E44324h]
		mov	ebp, esi
		add	ecx, ebx
		and	ebp, eax
		mov	ebx, [esp+10h]
		add	ecx, ebp
		mov	ebp, edi
		xor	ebx, [esp+18h]
		xor	ebp, esi
		xor	ebx, [esp+30h]
		and	ebp, edx
		xor	ebx, [esp+4]
		rol	ebx, 1
		add	ebp, eax
		ror	edx, 2
		mov	eax, ecx
		rol	eax, 5
		mov	[esp+10h], ebx
		lea	ebx, [ebx+ebp-70E44324h]
		mov	ebp, edi
		add	ebx, eax
		and	ebp, esi
		mov	eax, [esp+14h]
		add	ebx, ebp
		mov	ebp, edx
		xor	eax, [esp+1Ch]
		xor	ebp, edi
		xor	eax, [esp+34h]
		and	ebp, ecx
		xor	eax, [esp+8]
		rol	eax, 1
		add	ebp, esi
		ror	ecx, 2
		mov	esi, ebx
		rol	esi, 5
		mov	[esp+14h], eax
		lea	eax, [eax+ebp-70E44324h]
		mov	ebp, edx
		add	eax, esi
		and	ebp, edi
		mov	esi, [esp+18h]
		add	eax, ebp
		mov	ebp, ecx
		xor	esi, [esp+20h]
		xor	ebp, edx
		xor	esi, [esp+38h]
		and	ebp, ebx
		xor	esi, [esp+0Ch]
		rol	esi, 1
		add	ebp, edi
		ror	ebx, 2
		mov	edi, eax
		rol	edi, 5
		mov	[esp+18h], esi
		lea	esi, [esi+ebp-70E44324h]
		mov	ebp, ecx
		add	esi, edi
		and	ebp, edx
		mov	edi, [esp+1Ch]
		add	esi, ebp
		mov	ebp, ebx
		xor	edi, [esp+24h]
		xor	ebp, ecx
		xor	edi, [esp+3Ch]
		and	ebp, eax
		xor	edi, [esp+10h]
		rol	edi, 1
		add	ebp, edx
		ror	eax, 2
		mov	edx, esi
		rol	edx, 5
		mov	[esp+1Ch], edi
		lea	edi, [edi+ebp-70E44324h]
		mov	ebp, ebx
		add	edi, edx
		and	ebp, ecx
		mov	edx, [esp+20h]
		add	edi, ebp
		mov	ebp, eax
		xor	edx, [esp+28h]
		xor	ebp, ebx
		xor	edx, [esp]
		and	ebp, esi
		xor	edx, [esp+14h]
		rol	edx, 1
		add	ebp, ecx
		ror	esi, 2
		mov	ecx, edi
		rol	ecx, 5
		mov	[esp+20h], edx
		lea	edx, [edx+ebp-70E44324h]
		mov	ebp, eax
		add	edx, ecx
		and	ebp, ebx
		mov	ecx, [esp+24h]
		add	edx, ebp
		mov	ebp, esi
		xor	ecx, [esp+2Ch]
		xor	ebp, eax
		xor	ecx, [esp+4]
		and	ebp, edi
		xor	ecx, [esp+18h]
		rol	ecx, 1
		add	ebp, ebx
		ror	edi, 2
		mov	ebx, edx
		rol	ebx, 5
		mov	[esp+24h], ecx
		lea	ecx, [ecx+ebp-70E44324h]
		mov	ebp, esi
		add	ecx, ebx
		and	ebp, eax
		mov	ebx, [esp+28h]
		add	ecx, ebp
		mov	ebp, edi
		xor	ebx, [esp+30h]
		xor	ebp, esi
		xor	ebx, [esp+8]
		and	ebp, edx
		xor	ebx, [esp+1Ch]
		rol	ebx, 1
		add	ebp, eax
		ror	edx, 2
		mov	eax, ecx
		rol	eax, 5
		mov	[esp+28h], ebx
		lea	ebx, [ebx+ebp-70E44324h]
		mov	ebp, edi
		add	ebx, eax
		and	ebp, esi
		mov	eax, [esp+2Ch]
		add	ebx, ebp
		mov	ebp, edx
		xor	eax, [esp+34h]
		xor	ebp, edi
		xor	eax, [esp+0Ch]
		and	ebp, ecx
		xor	eax, [esp+20h]
		rol	eax, 1
		add	ebp, esi
		ror	ecx, 2
		mov	esi, ebx
		rol	esi, 5
		mov	[esp+2Ch], eax
		lea	eax, [eax+ebp-70E44324h]
		mov	ebp, edx
		add	eax, esi
		and	ebp, edi
		mov	esi, [esp+30h]
		add	eax, ebp
		mov	ebp, ebx
		xor	esi, [esp+38h]
		xor	ebp, ecx
		xor	esi, [esp+10h]
		xor	ebp, edx
		xor	esi, [esp+24h]
		rol	esi, 1
		add	edi, ebp
		ror	ebx, 2
		mov	ebp, eax
		rol	ebp, 5
		mov	[esp+30h], esi
		lea	esi, [esi+edi-359D3E2Ah]
		mov	edi, [esp+34h]
		add	esi, ebp
		mov	ebp, eax
		xor	edi, [esp+3Ch]
		xor	ebp, ebx
		xor	edi, [esp+14h]
		xor	ebp, ecx
		xor	edi, [esp+28h]
		rol	edi, 1
		add	edx, ebp
		ror	eax, 2
		mov	ebp, esi
		rol	ebp, 5
		mov	[esp+34h], edi
		lea	edi, [edi+edx-359D3E2Ah]
		mov	edx, [esp+38h]
		add	edi, ebp
		mov	ebp, esi
		xor	edx, [esp]
		xor	ebp, eax
		xor	edx, [esp+18h]
		xor	ebp, ebx
		xor	edx, [esp+2Ch]
		rol	edx, 1
		add	ecx, ebp
		ror	esi, 2
		mov	ebp, edi
		rol	ebp, 5
		mov	[esp+38h], edx
		lea	edx, [edx+ecx-359D3E2Ah]
		mov	ecx, [esp+3Ch]
		add	edx, ebp
		mov	ebp, edi
		xor	ecx, [esp+4]
		xor	ebp, esi
		xor	ecx, [esp+1Ch]
		xor	ebp, eax
		xor	ecx, [esp+30h]
		rol	ecx, 1
		add	ebx, ebp
		ror	edi, 2
		mov	ebp, edx
		rol	ebp, 5
		mov	[esp+3Ch], ecx
		lea	ecx, [ecx+ebx-359D3E2Ah]
		mov	ebx, [esp]
		add	ecx, ebp
		mov	ebp, edx
		xor	ebx, [esp+8]
		xor	ebp, edi
		xor	ebx, [esp+20h]
		xor	ebp, esi
		xor	ebx, [esp+34h]
		rol	ebx, 1
		add	eax, ebp
		ror	edx, 2
		mov	ebp, ecx
		rol	ebp, 5
		mov	[esp], ebx
		lea	ebx, [ebx+eax-359D3E2Ah]
		mov	eax, [esp+4]
		add	ebx, ebp
		mov	ebp, ecx
		xor	eax, [esp+0Ch]
		xor	ebp, edx
		xor	eax, [esp+24h]
		xor	ebp, edi
		xor	eax, [esp+38h]
		rol	eax, 1
		add	esi, ebp
		ror	ecx, 2
		mov	ebp, ebx
		rol	ebp, 5
		mov	[esp+4], eax
		lea	eax, [eax+esi-359D3E2Ah]
		mov	esi, [esp+8]
		add	eax, ebp
		mov	ebp, ebx
		xor	esi, [esp+10h]
		xor	ebp, ecx
		xor	esi, [esp+28h]
		xor	ebp, edx
		xor	esi, [esp+3Ch]
		rol	esi, 1
		add	edi, ebp
		ror	ebx, 2
		mov	ebp, eax
		rol	ebp, 5
		mov	[esp+8], esi
		lea	esi, [esi+edi-359D3E2Ah]
		mov	edi, [esp+0Ch]
		add	esi, ebp
		mov	ebp, eax
		xor	edi, [esp+14h]
		xor	ebp, ebx
		xor	edi, [esp+2Ch]
		xor	ebp, ecx
		xor	edi, [esp]
		rol	edi, 1
		add	edx, ebp
		ror	eax, 2
		mov	ebp, esi
		rol	ebp, 5
		mov	[esp+0Ch], edi
		lea	edi, [edi+edx-359D3E2Ah]
		mov	edx, [esp+10h]
		add	edi, ebp
		mov	ebp, esi
		xor	edx, [esp+18h]
		xor	ebp, eax
		xor	edx, [esp+30h]
		xor	ebp, ebx
		xor	edx, [esp+4]
		rol	edx, 1
		add	ecx, ebp
		ror	esi, 2
		mov	ebp, edi
		rol	ebp, 5
		mov	[esp+10h], edx
		lea	edx, [edx+ecx-359D3E2Ah]
		mov	ecx, [esp+14h]
		add	edx, ebp
		mov	ebp, edi
		xor	ecx, [esp+1Ch]
		xor	ebp, esi
		xor	ecx, [esp+34h]
		xor	ebp, eax
		xor	ecx, [esp+8]
		rol	ecx, 1
		add	ebx, ebp
		ror	edi, 2
		mov	ebp, edx
		rol	ebp, 5
		mov	[esp+14h], ecx
		lea	ecx, [ecx+ebx-359D3E2Ah]
		mov	ebx, [esp+18h]
		add	ecx, ebp
		mov	ebp, edx
		xor	ebx, [esp+20h]
		xor	ebp, edi
		xor	ebx, [esp+38h]
		xor	ebp, esi
		xor	ebx, [esp+0Ch]
		rol	ebx, 1
		add	eax, ebp
		ror	edx, 2
		mov	ebp, ecx
		rol	ebp, 5
		mov	[esp+18h], ebx
		lea	ebx, [ebx+eax-359D3E2Ah]
		mov	eax, [esp+1Ch]
		add	ebx, ebp
		mov	ebp, ecx
		xor	eax, [esp+24h]
		xor	ebp, edx
		xor	eax, [esp+3Ch]
		xor	ebp, edi
		xor	eax, [esp+10h]
		rol	eax, 1
		add	esi, ebp
		ror	ecx, 2
		mov	ebp, ebx
		rol	ebp, 5
		mov	[esp+1Ch], eax
		lea	eax, [eax+esi-359D3E2Ah]
		mov	esi, [esp+20h]
		add	eax, ebp
		mov	ebp, ebx
		xor	esi, [esp+28h]
		xor	ebp, ecx
		xor	esi, [esp]
		xor	ebp, edx
		xor	esi, [esp+14h]
		rol	esi, 1
		add	edi, ebp
		ror	ebx, 2
		mov	ebp, eax
		rol	ebp, 5
		mov	[esp+20h], esi
		lea	esi, [esi+edi-359D3E2Ah]
		mov	edi, [esp+24h]
		add	esi, ebp
		mov	ebp, eax
		xor	edi, [esp+2Ch]
		xor	ebp, ebx
		xor	edi, [esp+4]
		xor	ebp, ecx
		xor	edi, [esp+18h]
		rol	edi, 1
		add	edx, ebp
		ror	eax, 2
		mov	ebp, esi
		rol	ebp, 5
		mov	[esp+24h], edi
		lea	edi, [edi+edx-359D3E2Ah]
		mov	edx, [esp+28h]
		add	edi, ebp
		mov	ebp, esi
		xor	edx, [esp+30h]
		xor	ebp, eax
		xor	edx, [esp+8]
		xor	ebp, ebx
		xor	edx, [esp+1Ch]
		rol	edx, 1
		add	ecx, ebp
		ror	esi, 2
		mov	ebp, edi
		rol	ebp, 5
		mov	[esp+28h], edx
		lea	edx, [edx+ecx-359D3E2Ah]
		mov	ecx, [esp+2Ch]
		add	edx, ebp
		mov	ebp, edi
		xor	ecx, [esp+34h]
		xor	ebp, esi
		xor	ecx, [esp+0Ch]
		xor	ebp, eax
		xor	ecx, [esp+20h]
		rol	ecx, 1
		add	ebx, ebp
		ror	edi, 2
		mov	ebp, edx
		rol	ebp, 5
		mov	[esp+2Ch], ecx
		lea	ecx, [ecx+ebx-359D3E2Ah]
		mov	ebx, [esp+30h]
		add	ecx, ebp
		mov	ebp, edx
		xor	ebx, [esp+38h]
		xor	ebp, edi
		xor	ebx, [esp+10h]
		xor	ebp, esi
		xor	ebx, [esp+24h]
		rol	ebx, 1
		add	eax, ebp
		ror	edx, 2
		mov	ebp, ecx
		rol	ebp, 5
		mov	[esp+30h], ebx
		lea	ebx, [ebx+eax-359D3E2Ah]
		mov	eax, [esp+34h]
		add	ebx, ebp
		mov	ebp, ecx
		xor	eax, [esp+3Ch]
		xor	ebp, edx
		xor	eax, [esp+14h]
		xor	ebp, edi
		xor	eax, [esp+28h]
		rol	eax, 1
		add	esi, ebp
		ror	ecx, 2
		mov	ebp, ebx
		rol	ebp, 5
		lea	eax, [eax+esi-359D3E2Ah]
		mov	esi, [esp+38h]
		add	eax, ebp
		mov	ebp, ebx
		xor	esi, [esp]
		xor	ebp, ecx
		xor	esi, [esp+18h]
		xor	ebp, edx
		xor	esi, [esp+2Ch]
		rol	esi, 1
		add	edi, ebp
		ror	ebx, 2
		mov	ebp, eax
		rol	ebp, 5
		lea	esi, [esi+edi-359D3E2Ah]
		mov	edi, [esp+3Ch]
		add	esi, ebp
		mov	ebp, eax
		xor	edi, [esp+4]
		xor	ebp, ebx
		xor	edi, [esp+1Ch]
		xor	ebp, ecx
		xor	edi, [esp+30h]
		rol	edi, 1
		add	edx, ebp
		ror	eax, 2
		mov	ebp, esi
		rol	ebp, 5
		lea	edi, [edi+edx-359D3E2Ah]
		add	edi, ebp
		mov	ebp, [esp+60h]
		mov	edx, [esp+64h]
		add	edi, [ebp+0]
		add	esi, [ebp+4]
		add	eax, [ebp+8]
		add	ebx, [ebp+0Ch]
		add	ecx, [ebp+10h]
		mov	[ebp+0], edi
		add	edx, 40h ; '@'
		mov	[ebp+4], esi
		cmp	edx, [esp+68h]
		mov	[ebp+8], eax
		mov	edi, ecx
		mov	[ebp+0Ch], ebx
		mov	esi, edx
		mov	[ebp+10h], ecx
		jb	L$002loop
		add	esp, 4Ch
		pop	edi
		pop	esi
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

__sha1_block_data_order_shaext:
		push	ebp
		push	ebx
		push	esi
		push	edi
		call	$+5

L$003pic_point:
		pop	ebp
		lea	ebp, [ebp+2007h]

L$shaext_shortcut:			; CODE XREF: .text:0000003Bj
		mov	edi, [esp+14h]
		mov	ebx, esp
		mov	esi, [esp+18h]
		mov	ecx, [esp+1Ch]
		sub	esp, 20h
		movdqu	xmm0, xmmword ptr [edi]
		movd	xmm1, dword ptr	[edi+10h]
		and	esp, 0FFFFFFE0h
		movdqa	xmm3, xmmword ptr [ebp+50h]
		movdqu	xmm4, xmmword ptr [esi]
		pshufd	xmm0, xmm0, 1Bh
		movdqu	xmm5, xmmword ptr [esi+10h]
		pshufd	xmm1, xmm1, 1Bh
		movdqu	xmm6, xmmword ptr [esi+20h]
		pshufb	xmm4, xmm3
		movdqu	xmm7, xmmword ptr [esi+30h]
		pshufb	xmm5, xmm3
		pshufb	xmm6, xmm3
		pshufb	xmm7, xmm3
		jmp	L$004loop_shaext
; ---------------------------------------------------------------------------
		align 10h

L$004loop_shaext:			; CODE XREF: .text:00000FD3j
		dec	ecx
		lea	eax, [esi+40h]
		movdqa	xmmword	ptr [esp], xmm1
		paddd	xmm1, xmm4
		cmovnz	esi, eax
		movdqa	xmmword	ptr [esp+10h], xmm0
; ---------------------------------------------------------------------------
		dw 380Fh
		dd 0F66E5C9h, 3A0FD06Fh, 0F00C1CCh, 66D5C838h, 0FE6EF0Fh
		dd 0FEEC938h, 66E7CA38h, 0FC86F0Fh, 0C2CC3Ah, 0CEC8380Fh
		dd 0EFEF0F66h, 0ECCA380Fh, 0F7C9380Fh, 0D06F0F66h, 0C1CC3A0Fh
		dd 0C8380F00h, 0EF0F66D7h, 0C9380FF4h, 0CA380FFCh, 6F0F66F5h
		dd 0CC3A0FC8h, 380F00C2h, 0F66CCC8h, 380FFDEFh,	380FFECAh
		dd 0F66E5C9h, 3A0FD06Fh, 0F00C1CCh, 66D5C838h, 0FE6EF0Fh
		dd 0FEEC938h, 66E7CA38h, 0FC86F0Fh, 1C2CC3Ah, 0CEC8380Fh
		dd 0EFEF0F66h, 0ECCA380Fh, 0F7C9380Fh, 0D06F0F66h, 0C1CC3A0Fh
		dd 0C8380F01h, 0EF0F66D7h, 0C9380FF4h, 0CA380FFCh, 6F0F66F5h
		dd 0CC3A0FC8h, 380F01C2h, 0F66CCC8h, 380FFDEFh,	380FFECAh
		dd 0F66E5C9h, 3A0FD06Fh, 0F01C1CCh, 66D5C838h, 0FE6EF0Fh
		dd 0FEEC938h, 66E7CA38h, 0FC86F0Fh, 1C2CC3Ah, 0CEC8380Fh
		dd 0EFEF0F66h, 0ECCA380Fh, 0F7C9380Fh, 0D06F0F66h, 0C1CC3A0Fh
		dd 0C8380F02h, 0EF0F66D7h, 0C9380FF4h, 0CA380FFCh, 6F0F66F5h
		dd 0CC3A0FC8h, 380F02C2h, 0F66CCC8h, 380FFDEFh,	380FFECAh
		dd 0F66E5C9h, 3A0FD06Fh, 0F02C1CCh, 66D5C838h, 0FE6EF0Fh
		dd 0FEEC938h, 66E7CA38h, 0FC86F0Fh, 2C2CC3Ah, 0CEC8380Fh
		dd 0EFEF0F66h, 0ECCA380Fh, 0F7C9380Fh, 0D06F0F66h, 0C1CC3A0Fh
		dd 0C8380F02h, 0EF0F66D7h, 0C9380FF4h, 0CA380FFCh, 6F0F66F5h
		dd 0CC3A0FC8h, 380F03C2h, 0F66CCC8h, 380FFDEFh,	0FF3FECAh
		dd 0F66266Fh, 3A0FD06Fh, 0F03C1CCh, 0F3D5C838h,	106E6F0Fh
		dd 380F66h, 6F0F66E3h, 0CC3A0FC8h, 380F03C2h, 0FF3CEC8h
		dd 6620766Fh, 0EB00380Fh, 0D06F0F66h, 0C1CC3A0Fh, 0C8380F03h
		dd 6F0FF3D7h, 0F66307Eh, 66F30038h, 0FC86F0Fh, 3C2CC3Ah
		dd 146F0F66h, 380F6624h, 380FFB00h, 0F66CAC8h, 102444FEh
		dd 0FDEE850Fh, 0F66FFFFh, 661BC070h, 1BC9700Fh,	77F0FF3h
		dd 4F7E0F66h, 5FDC8910h, 0C35D5B5Eh, 90909090h
; ---------------------------------------------------------------------------

__sha1_block_data_order_ssse3:
		push	ebp
		push	ebx
		push	esi
		push	edi
		call	$+5

L$005pic_point:
		pop	ebp
		lea	ebp, [ebp+1D67h]

L$ssse3_shortcut:			; CODE XREF: .text:00000059j
		movdqa	xmm7, xmmword ptr [ebp+0]
		movdqa	xmm0, xmmword ptr [ebp+10h]
		movdqa	xmm1, xmmword ptr [ebp+20h]
		movdqa	xmm2, xmmword ptr [ebp+30h]
		movdqa	xmm6, xmmword ptr [ebp+40h]
		mov	edi, [esp+14h]
		mov	ebp, [esp+18h]
		mov	edx, [esp+1Ch]
		mov	esi, esp
		sub	esp, 0D0h
		and	esp, 0FFFFFFC0h
		movdqa	xmmword	ptr [esp+70h], xmm0
		movdqa	xmmword	ptr [esp+80h], xmm1
		movdqa	xmmword	ptr [esp+90h], xmm2
		shl	edx, 6
		movdqa	xmmword	ptr [esp+0A0h],	xmm7
		add	edx, ebp
		movdqa	xmmword	ptr [esp+0B0h],	xmm6
		add	ebp, 40h ; '@'
		mov	[esp+0C0h], edi
		mov	[esp+0C4h], ebp
		mov	[esp+0C8h], edx
		mov	[esp+0CCh], esi
		mov	eax, [edi]
		mov	ebx, [edi+4]
		mov	ecx, [edi+8]
		mov	edx, [edi+0Ch]
		mov	edi, [edi+10h]
		mov	esi, ebx
		movdqu	xmm0, xmmword ptr [ebp-40h]
		movdqu	xmm1, xmmword ptr [ebp-30h]
		movdqu	xmm2, xmmword ptr [ebp-20h]
		movdqu	xmm3, xmmword ptr [ebp-10h]
		pshufb	xmm0, xmm6
		pshufb	xmm1, xmm6
		pshufb	xmm2, xmm6
		movdqa	xmmword	ptr [esp+60h], xmm7
		pshufb	xmm3, xmm6
		paddd	xmm0, xmm7
		paddd	xmm1, xmm7
		paddd	xmm2, xmm7
		movdqa	xmmword	ptr [esp], xmm0
		psubd	xmm0, xmm7
		movdqa	xmmword	ptr [esp+10h], xmm1
		psubd	xmm1, xmm7
		movdqa	xmmword	ptr [esp+20h], xmm2
		mov	ebp, ecx
		psubd	xmm2, xmm7
		xor	ebp, edx
		pshufd	xmm4, xmm0, 0EEh
		and	esi, ebp
		jmp	L$006loop
; ---------------------------------------------------------------------------
		align 10h

L$006loop:				; CODE XREF: .text:00001310j
					; .text:00001F85j
		ror	ebx, 2
		xor	esi, edx
		mov	ebp, eax
		punpcklqdq xmm4, xmm1
		movdqa	xmm6, xmm3
		add	edi, [esp]
		xor	ebx, ecx
		paddd	xmm7, xmm3
		movdqa	xmmword	ptr [esp+40h], xmm0
		rol	eax, 5
		add	edi, esi
		psrldq	xmm6, 4
		and	ebp, ebx
		xor	ebx, ecx
		pxor	xmm4, xmm0
		add	edi, eax
		ror	eax, 7
		pxor	xmm6, xmm2
		xor	ebp, ecx
		mov	esi, edi
		add	edx, [esp+4]
		pxor	xmm4, xmm6
		xor	eax, ebx
		rol	edi, 5
		movdqa	xmmword	ptr [esp+30h], xmm7
		add	edx, ebp
		and	esi, eax
		movdqa	xmm0, xmm4
		xor	eax, ebx
		add	edx, edi
		ror	edi, 7
		movdqa	xmm6, xmm4
		xor	esi, ebx
		pslldq	xmm0, 0Ch
		paddd	xmm4, xmm4
		mov	ebp, edx
		add	ecx, [esp+8]
		psrld	xmm6, 1Fh
		xor	edi, eax
		rol	edx, 5
		movdqa	xmm7, xmm0
		add	ecx, esi
		and	ebp, edi
		xor	edi, eax
		psrld	xmm0, 1Eh
		add	ecx, edx
		ror	edx, 7
		por	xmm4, xmm6
		xor	ebp, eax
		mov	esi, ecx
		add	ebx, [esp+0Ch]
		pslld	xmm7, 2
		xor	edx, edi
		rol	ecx, 5
		pxor	xmm4, xmm0
		movdqa	xmm0, xmmword ptr [esp+60h]
		add	ebx, ebp
		and	esi, edx
		pxor	xmm4, xmm7
		pshufd	xmm5, xmm1, 0EEh
		xor	edx, edi
		add	ebx, ecx
		ror	ecx, 7
		xor	esi, edi
		mov	ebp, ebx
		punpcklqdq xmm5, xmm2
		movdqa	xmm7, xmm4
		add	eax, [esp+10h]
		xor	ecx, edx
		paddd	xmm0, xmm4
		movdqa	xmmword	ptr [esp+50h], xmm1
		rol	ebx, 5
		add	eax, esi
		psrldq	xmm7, 4
		and	ebp, ecx
		xor	ecx, edx
		pxor	xmm5, xmm1
		add	eax, ebx
		ror	ebx, 7
		pxor	xmm7, xmm3
		xor	ebp, edx
		mov	esi, eax
		add	edi, [esp+14h]
		pxor	xmm5, xmm7
		xor	ebx, ecx
		rol	eax, 5
		movdqa	xmmword	ptr [esp], xmm0
		add	edi, ebp
		and	esi, ebx
		movdqa	xmm1, xmm5
		xor	ebx, ecx
		add	edi, eax
		ror	eax, 7
		movdqa	xmm7, xmm5
		xor	esi, ecx
		pslldq	xmm1, 0Ch
		paddd	xmm5, xmm5
		mov	ebp, edi
		add	edx, [esp+18h]
		psrld	xmm7, 1Fh
		xor	eax, ebx
		rol	edi, 5
		movdqa	xmm0, xmm1
		add	edx, esi
		and	ebp, eax
		xor	eax, ebx
		psrld	xmm1, 1Eh
		add	edx, edi
		ror	edi, 7
		por	xmm5, xmm7
		xor	ebp, ebx
		mov	esi, edx
		add	ecx, [esp+1Ch]
		pslld	xmm0, 2
		xor	edi, eax
		rol	edx, 5
		pxor	xmm5, xmm1
		movdqa	xmm1, xmmword ptr [esp+70h]
		add	ecx, ebp
		and	esi, edi
		pxor	xmm5, xmm0
		pshufd	xmm6, xmm2, 0EEh
		xor	edi, eax
		add	ecx, edx
		ror	edx, 7
		xor	esi, eax
		mov	ebp, ecx
		punpcklqdq xmm6, xmm3
		movdqa	xmm0, xmm5
		add	ebx, [esp+20h]
		xor	edx, edi
		paddd	xmm1, xmm5
		movdqa	xmmword	ptr [esp+60h], xmm2
		rol	ecx, 5
		add	ebx, esi
		psrldq	xmm0, 4
		and	ebp, edx
		xor	edx, edi
		pxor	xmm6, xmm2
		add	ebx, ecx
		ror	ecx, 7
		pxor	xmm0, xmm4
		xor	ebp, edi
		mov	esi, ebx
		add	eax, [esp+24h]
		pxor	xmm6, xmm0
		xor	ecx, edx
		rol	ebx, 5
		movdqa	xmmword	ptr [esp+10h], xmm1
		add	eax, ebp
		and	esi, ecx
		movdqa	xmm2, xmm6
		xor	ecx, edx
		add	eax, ebx
		ror	ebx, 7
		movdqa	xmm0, xmm6
		xor	esi, edx
		pslldq	xmm2, 0Ch
		paddd	xmm6, xmm6
		mov	ebp, eax
		add	edi, [esp+28h]
		psrld	xmm0, 1Fh
		xor	ebx, ecx
		rol	eax, 5
		movdqa	xmm1, xmm2
		add	edi, esi
		and	ebp, ebx
		xor	ebx, ecx
		psrld	xmm2, 1Eh
		add	edi, eax
		ror	eax, 7
		por	xmm6, xmm0
		xor	ebp, ecx
		movdqa	xmm0, xmmword ptr [esp+40h]
		mov	esi, edi
		add	edx, [esp+2Ch]
		pslld	xmm1, 2
		xor	eax, ebx
		rol	edi, 5
		pxor	xmm6, xmm2
		movdqa	xmm2, xmmword ptr [esp+70h]
		add	edx, ebp
		and	esi, eax
		pxor	xmm6, xmm1
		pshufd	xmm7, xmm3, 0EEh
		xor	eax, ebx
		add	edx, edi
		ror	edi, 7
		xor	esi, ebx
		mov	ebp, edx
		punpcklqdq xmm7, xmm4
		movdqa	xmm1, xmm6
		add	ecx, [esp+30h]
		xor	edi, eax
		paddd	xmm2, xmm6
		movdqa	xmmword	ptr [esp+40h], xmm3
		rol	edx, 5
		add	ecx, esi
		psrldq	xmm1, 4
		and	ebp, edi
		xor	edi, eax
		pxor	xmm7, xmm3
		add	ecx, edx
		ror	edx, 7
		pxor	xmm1, xmm5
		xor	ebp, eax
		mov	esi, ecx
		add	ebx, [esp+34h]
		pxor	xmm7, xmm1
		xor	edx, edi
		rol	ecx, 5
		movdqa	xmmword	ptr [esp+20h], xmm2
		add	ebx, ebp
		and	esi, edx
		movdqa	xmm3, xmm7
		xor	edx, edi
		add	ebx, ecx
		ror	ecx, 7
		movdqa	xmm1, xmm7
		xor	esi, edi
		pslldq	xmm3, 0Ch
		paddd	xmm7, xmm7
		mov	ebp, ebx
		add	eax, [esp+38h]
		psrld	xmm1, 1Fh
		xor	ecx, edx
		rol	ebx, 5
		movdqa	xmm2, xmm3
		add	eax, esi
		and	ebp, ecx
		xor	ecx, edx
		psrld	xmm3, 1Eh
		add	eax, ebx
		ror	ebx, 7
		por	xmm7, xmm1
		xor	ebp, edx
		movdqa	xmm1, xmmword ptr [esp+50h]
		mov	esi, eax
		add	edi, [esp+3Ch]
		pslld	xmm2, 2
		xor	ebx, ecx
		rol	eax, 5
		pxor	xmm7, xmm3
		movdqa	xmm3, xmmword ptr [esp+70h]
		add	edi, ebp
		and	esi, ebx
		pxor	xmm7, xmm2
		pshufd	xmm2, xmm6, 0EEh
		xor	ebx, ecx
		add	edi, eax
		ror	eax, 7
		pxor	xmm0, xmm4
		punpcklqdq xmm2, xmm7
		xor	esi, ecx
		mov	ebp, edi
		add	edx, [esp]
		pxor	xmm0, xmm1
		movdqa	xmmword	ptr [esp+50h], xmm4
		xor	eax, ebx
		rol	edi, 5
		movdqa	xmm4, xmm3
		add	edx, esi
		paddd	xmm3, xmm7
		and	ebp, eax
		pxor	xmm0, xmm2
		xor	eax, ebx
		add	edx, edi
		ror	edi, 7
		xor	ebp, ebx
		movdqa	xmm2, xmm0
		movdqa	xmmword	ptr [esp+30h], xmm3
		mov	esi, edx
		add	ecx, [esp+4]
		xor	edi, eax
		rol	edx, 5
		pslld	xmm0, 2
		add	ecx, ebp
		and	esi, edi
		psrld	xmm2, 1Eh
		xor	edi, eax
		add	ecx, edx
		ror	edx, 7
		xor	esi, eax
		mov	ebp, ecx
		add	ebx, [esp+8]
		xor	edx, edi
		rol	ecx, 5
		por	xmm0, xmm2
		add	ebx, esi
		and	ebp, edx
		movdqa	xmm2, xmmword ptr [esp+60h]
		xor	edx, edi
		add	ebx, ecx
		add	eax, [esp+0Ch]
		xor	ebp, edi
		mov	esi, ebx
		pshufd	xmm3, xmm7, 0EEh
		rol	ebx, 5
		add	eax, ebp
		xor	esi, edx
		ror	ecx, 7
		add	eax, ebx
		add	edi, [esp+10h]
		pxor	xmm1, xmm5
		punpcklqdq xmm3, xmm0
		xor	esi, ecx
		mov	ebp, eax
		rol	eax, 5
		pxor	xmm1, xmm2
		movdqa	xmmword	ptr [esp+60h], xmm5
		add	edi, esi
		xor	ebp, ecx
		movdqa	xmm5, xmm4
		ror	ebx, 7
		paddd	xmm4, xmm0
		add	edi, eax
		pxor	xmm1, xmm3
		add	edx, [esp+14h]
		xor	ebp, ebx
		mov	esi, edi
		rol	edi, 5
		movdqa	xmm3, xmm1
		movdqa	xmmword	ptr [esp], xmm4
		add	edx, ebp
		xor	esi, ebx
		ror	eax, 7
		add	edx, edi
		pslld	xmm1, 2
		add	ecx, [esp+18h]
		xor	esi, eax
		psrld	xmm3, 1Eh
		mov	ebp, edx
		rol	edx, 5
		add	ecx, esi
		xor	ebp, eax
		ror	edi, 7
		add	ecx, edx
		por	xmm1, xmm3
		add	ebx, [esp+1Ch]
		xor	ebp, edi
		movdqa	xmm3, xmmword ptr [esp+40h]
		mov	esi, ecx
		rol	ecx, 5
		add	ebx, ebp
		xor	esi, edi
		ror	edx, 7
		pshufd	xmm4, xmm0, 0EEh
		add	ebx, ecx
		add	eax, [esp+20h]
		pxor	xmm2, xmm6
		punpcklqdq xmm4, xmm1
		xor	esi, edx
		mov	ebp, ebx
		rol	ebx, 5
		pxor	xmm2, xmm3
		movdqa	xmmword	ptr [esp+40h], xmm6
		add	eax, esi
		xor	ebp, edx
		movdqa	xmm6, xmmword ptr [esp+80h]
		ror	ecx, 7
		paddd	xmm5, xmm1
		add	eax, ebx
		pxor	xmm2, xmm4
		add	edi, [esp+24h]
		xor	ebp, ecx
		mov	esi, eax
		rol	eax, 5
		movdqa	xmm4, xmm2
		movdqa	xmmword	ptr [esp+10h], xmm5
		add	edi, ebp
		xor	esi, ecx
		ror	ebx, 7
		add	edi, eax
		pslld	xmm2, 2
		add	edx, [esp+28h]
		xor	esi, ebx
		psrld	xmm4, 1Eh
		mov	ebp, edi
		rol	edi, 5
		add	edx, esi
		xor	ebp, ebx
		ror	eax, 7
		add	edx, edi
		por	xmm2, xmm4
		add	ecx, [esp+2Ch]
		xor	ebp, eax
		movdqa	xmm4, xmmword ptr [esp+50h]
		mov	esi, edx
		rol	edx, 5
		add	ecx, ebp
		xor	esi, eax
		ror	edi, 7
		pshufd	xmm5, xmm1, 0EEh
		add	ecx, edx
		add	ebx, [esp+30h]
		pxor	xmm3, xmm7
		punpcklqdq xmm5, xmm2
		xor	esi, edi
		mov	ebp, ecx
		rol	ecx, 5
		pxor	xmm3, xmm4
		movdqa	xmmword	ptr [esp+50h], xmm7
		add	ebx, esi
		xor	ebp, edi
		movdqa	xmm7, xmm6
		ror	edx, 7
		paddd	xmm6, xmm2
		add	ebx, ecx
		pxor	xmm3, xmm5
		add	eax, [esp+34h]
		xor	ebp, edx
		mov	esi, ebx
		rol	ebx, 5
		movdqa	xmm5, xmm3
		movdqa	xmmword	ptr [esp+20h], xmm6
		add	eax, ebp
		xor	esi, edx
		ror	ecx, 7
		add	eax, ebx
		pslld	xmm3, 2
		add	edi, [esp+38h]
		xor	esi, ecx
		psrld	xmm5, 1Eh
		mov	ebp, eax
		rol	eax, 5
		add	edi, esi
		xor	ebp, ecx
		ror	ebx, 7
		add	edi, eax
		por	xmm3, xmm5
		add	edx, [esp+3Ch]
		xor	ebp, ebx
		movdqa	xmm5, xmmword ptr [esp+60h]
		mov	esi, edi
		rol	edi, 5
		add	edx, ebp
		xor	esi, ebx
		ror	eax, 7
		pshufd	xmm6, xmm2, 0EEh
		add	edx, edi
		add	ecx, [esp]
		pxor	xmm4, xmm0
		punpcklqdq xmm6, xmm3
		xor	esi, eax
		mov	ebp, edx
		rol	edx, 5
		pxor	xmm4, xmm5
		movdqa	xmmword	ptr [esp+60h], xmm0
		add	ecx, esi
		xor	ebp, eax
		movdqa	xmm0, xmm7
		ror	edi, 7
		paddd	xmm7, xmm3
		add	ecx, edx
		pxor	xmm4, xmm6
		add	ebx, [esp+4]
		xor	ebp, edi
		mov	esi, ecx
		rol	ecx, 5
		movdqa	xmm6, xmm4
		movdqa	xmmword	ptr [esp+30h], xmm7
		add	ebx, ebp
		xor	esi, edi
		ror	edx, 7
		add	ebx, ecx
		pslld	xmm4, 2
		add	eax, [esp+8]
		xor	esi, edx
		psrld	xmm6, 1Eh
		mov	ebp, ebx
		rol	ebx, 5
		add	eax, esi
		xor	ebp, edx
		ror	ecx, 7
		add	eax, ebx
		por	xmm4, xmm6
		add	edi, [esp+0Ch]
		xor	ebp, ecx
		movdqa	xmm6, xmmword ptr [esp+40h]
		mov	esi, eax
		rol	eax, 5
		add	edi, ebp
		xor	esi, ecx
		ror	ebx, 7
		pshufd	xmm7, xmm3, 0EEh
		add	edi, eax
		add	edx, [esp+10h]
		pxor	xmm5, xmm1
		punpcklqdq xmm7, xmm4
		xor	esi, ebx
		mov	ebp, edi
		rol	edi, 5
		pxor	xmm5, xmm6
		movdqa	xmmword	ptr [esp+40h], xmm1
		add	edx, esi
		xor	ebp, ebx
		movdqa	xmm1, xmm0
		ror	eax, 7
		paddd	xmm0, xmm4
		add	edx, edi
		pxor	xmm5, xmm7
		add	ecx, [esp+14h]
		xor	ebp, eax
		mov	esi, edx
		rol	edx, 5
		movdqa	xmm7, xmm5
		movdqa	xmmword	ptr [esp], xmm0
		add	ecx, ebp
		xor	esi, eax
		ror	edi, 7
		add	ecx, edx
		pslld	xmm5, 2
		add	ebx, [esp+18h]
		xor	esi, edi
		psrld	xmm7, 1Eh
		mov	ebp, ecx
		rol	ecx, 5
		add	ebx, esi
		xor	ebp, edi
		ror	edx, 7
		add	ebx, ecx
		por	xmm5, xmm7
		add	eax, [esp+1Ch]
		movdqa	xmm7, xmmword ptr [esp+50h]
		ror	ecx, 7
		mov	esi, ebx
		xor	ebp, edx
		rol	ebx, 5
		pshufd	xmm0, xmm4, 0EEh
		add	eax, ebp
		xor	esi, ecx
		xor	ecx, edx
		add	eax, ebx
		add	edi, [esp+20h]
		pxor	xmm6, xmm2
		punpcklqdq xmm0, xmm5
		and	esi, ecx
		xor	ecx, edx
		ror	ebx, 7
		pxor	xmm6, xmm7
		movdqa	xmmword	ptr [esp+50h], xmm2
		mov	ebp, eax
		xor	esi, ecx
		rol	eax, 5
		movdqa	xmm2, xmm1
		add	edi, esi
		paddd	xmm1, xmm5
		xor	ebp, ebx
		pxor	xmm6, xmm0
		xor	ebx, ecx
		add	edi, eax
		add	edx, [esp+24h]
		and	ebp, ebx
		movdqa	xmm0, xmm6
		movdqa	xmmword	ptr [esp+10h], xmm1
		xor	ebx, ecx
		ror	eax, 7
		mov	esi, edi
		xor	ebp, ebx
		rol	edi, 5
		pslld	xmm6, 2
		add	edx, ebp
		xor	esi, eax
		psrld	xmm0, 1Eh
		xor	eax, ebx
		add	edx, edi
		add	ecx, [esp+28h]
		and	esi, eax
		xor	eax, ebx
		ror	edi, 7
		por	xmm6, xmm0
		mov	ebp, edx
		xor	esi, eax
		movdqa	xmm0, xmmword ptr [esp+60h]
		rol	edx, 5
		add	ecx, esi
		xor	ebp, edi
		xor	edi, eax
		add	ecx, edx
		pshufd	xmm1, xmm5, 0EEh
		add	ebx, [esp+2Ch]
		and	ebp, edi
		xor	edi, eax
		ror	edx, 7
		mov	esi, ecx
		xor	ebp, edi
		rol	ecx, 5
		add	ebx, ebp
		xor	esi, edx
		xor	edx, edi
		add	ebx, ecx
		add	eax, [esp+30h]
		pxor	xmm7, xmm3
		punpcklqdq xmm1, xmm6
		and	esi, edx
		xor	edx, edi
		ror	ecx, 7
		pxor	xmm7, xmm0
		movdqa	xmmword	ptr [esp+60h], xmm3
		mov	ebp, ebx
		xor	esi, edx
		rol	ebx, 5
		movdqa	xmm3, xmmword ptr [esp+90h]
		add	eax, esi
		paddd	xmm2, xmm6
		xor	ebp, ecx
		pxor	xmm7, xmm1
		xor	ecx, edx
		add	eax, ebx
		add	edi, [esp+34h]
		and	ebp, ecx
		movdqa	xmm1, xmm7
		movdqa	xmmword	ptr [esp+20h], xmm2
		xor	ecx, edx
		ror	ebx, 7
		mov	esi, eax
		xor	ebp, ecx
		rol	eax, 5
		pslld	xmm7, 2
		add	edi, ebp
		xor	esi, ebx
		psrld	xmm1, 1Eh
		xor	ebx, ecx
		add	edi, eax
		add	edx, [esp+38h]
		and	esi, ebx
		xor	ebx, ecx
		ror	eax, 7
		por	xmm7, xmm1
		mov	ebp, edi
		xor	esi, ebx
		movdqa	xmm1, xmmword ptr [esp+40h]
		rol	edi, 5
		add	edx, esi
		xor	ebp, eax
		xor	eax, ebx
		add	edx, edi
		pshufd	xmm2, xmm6, 0EEh
		add	ecx, [esp+3Ch]
		and	ebp, eax
		xor	eax, ebx
		ror	edi, 7
		mov	esi, edx
		xor	ebp, eax
		rol	edx, 5
		add	ecx, ebp
		xor	esi, edi
		xor	edi, eax
		add	ecx, edx
		add	ebx, [esp]
		pxor	xmm0, xmm4
		punpcklqdq xmm2, xmm7
		and	esi, edi
		xor	edi, eax
		ror	edx, 7
		pxor	xmm0, xmm1
		movdqa	xmmword	ptr [esp+40h], xmm4
		mov	ebp, ecx
		xor	esi, edi
		rol	ecx, 5
		movdqa	xmm4, xmm3
		add	ebx, esi
		paddd	xmm3, xmm7
		xor	ebp, edx
		pxor	xmm0, xmm2
		xor	edx, edi
		add	ebx, ecx
		add	eax, [esp+4]
		and	ebp, edx
		movdqa	xmm2, xmm0
		movdqa	xmmword	ptr [esp+30h], xmm3
		xor	edx, edi
		ror	ecx, 7
		mov	esi, ebx
		xor	ebp, edx
		rol	ebx, 5
		pslld	xmm0, 2
		add	eax, ebp
		xor	esi, ecx
		psrld	xmm2, 1Eh
		xor	ecx, edx
		add	eax, ebx
		add	edi, [esp+8]
		and	esi, ecx
		xor	ecx, edx
		ror	ebx, 7
		por	xmm0, xmm2
		mov	ebp, eax
		xor	esi, ecx
		movdqa	xmm2, xmmword ptr [esp+50h]
		rol	eax, 5
		add	edi, esi
		xor	ebp, ebx
		xor	ebx, ecx
		add	edi, eax
		pshufd	xmm3, xmm7, 0EEh
		add	edx, [esp+0Ch]
		and	ebp, ebx
		xor	ebx, ecx
		ror	eax, 7
		mov	esi, edi
		xor	ebp, ebx
		rol	edi, 5
		add	edx, ebp
		xor	esi, eax
		xor	eax, ebx
		add	edx, edi
		add	ecx, [esp+10h]
		pxor	xmm1, xmm5
		punpcklqdq xmm3, xmm0
		and	esi, eax
		xor	eax, ebx
		ror	edi, 7
		pxor	xmm1, xmm2
		movdqa	xmmword	ptr [esp+50h], xmm5
		mov	ebp, edx
		xor	esi, eax
		rol	edx, 5
		movdqa	xmm5, xmm4
		add	ecx, esi
		paddd	xmm4, xmm0
		xor	ebp, edi
		pxor	xmm1, xmm3
		xor	edi, eax
		add	ecx, edx
		add	ebx, [esp+14h]
		and	ebp, edi
		movdqa	xmm3, xmm1
		movdqa	xmmword	ptr [esp], xmm4
		xor	edi, eax
		ror	edx, 7
		mov	esi, ecx
		xor	ebp, edi
		rol	ecx, 5
		pslld	xmm1, 2
		add	ebx, ebp
		xor	esi, edx
		psrld	xmm3, 1Eh
		xor	edx, edi
		add	ebx, ecx
		add	eax, [esp+18h]
		and	esi, edx
		xor	edx, edi
		ror	ecx, 7
		por	xmm1, xmm3
		mov	ebp, ebx
		xor	esi, edx
		movdqa	xmm3, xmmword ptr [esp+60h]
		rol	ebx, 5
		add	eax, esi
		xor	ebp, ecx
		xor	ecx, edx
		add	eax, ebx
		pshufd	xmm4, xmm0, 0EEh
		add	edi, [esp+1Ch]
		and	ebp, ecx
		xor	ecx, edx
		ror	ebx, 7
		mov	esi, eax
		xor	ebp, ecx
		rol	eax, 5
		add	edi, ebp
		xor	esi, ebx
		xor	ebx, ecx
		add	edi, eax
		add	edx, [esp+20h]
		pxor	xmm2, xmm6
		punpcklqdq xmm4, xmm1
		and	esi, ebx
		xor	ebx, ecx
		ror	eax, 7
		pxor	xmm2, xmm3
		movdqa	xmmword	ptr [esp+60h], xmm6
		mov	ebp, edi
		xor	esi, ebx
		rol	edi, 5
		movdqa	xmm6, xmm5
		add	edx, esi
		paddd	xmm5, xmm1
		xor	ebp, eax
		pxor	xmm2, xmm4
		xor	eax, ebx
		add	edx, edi
		add	ecx, [esp+24h]
		and	ebp, eax
		movdqa	xmm4, xmm2
		movdqa	xmmword	ptr [esp+10h], xmm5
		xor	eax, ebx
		ror	edi, 7
		mov	esi, edx
		xor	ebp, eax
		rol	edx, 5
		pslld	xmm2, 2
		add	ecx, ebp
		xor	esi, edi
		psrld	xmm4, 1Eh
		xor	edi, eax
		add	ecx, edx
		add	ebx, [esp+28h]
		and	esi, edi
		xor	edi, eax
		ror	edx, 7
		por	xmm2, xmm4
		mov	ebp, ecx
		xor	esi, edi
		movdqa	xmm4, xmmword ptr [esp+40h]
		rol	ecx, 5
		add	ebx, esi
		xor	ebp, edx
		xor	edx, edi
		add	ebx, ecx
		pshufd	xmm5, xmm1, 0EEh
		add	eax, [esp+2Ch]
		and	ebp, edx
		xor	edx, edi
		ror	ecx, 7
		mov	esi, ebx
		xor	ebp, edx
		rol	ebx, 5
		add	eax, ebp
		xor	esi, edx
		add	eax, ebx
		add	edi, [esp+30h]
		pxor	xmm3, xmm7
		punpcklqdq xmm5, xmm2
		xor	esi, ecx
		mov	ebp, eax
		rol	eax, 5
		pxor	xmm3, xmm4
		movdqa	xmmword	ptr [esp+40h], xmm7
		add	edi, esi
		xor	ebp, ecx
		movdqa	xmm7, xmm6
		ror	ebx, 7
		paddd	xmm6, xmm2
		add	edi, eax
		pxor	xmm3, xmm5
		add	edx, [esp+34h]
		xor	ebp, ebx
		mov	esi, edi
		rol	edi, 5
		movdqa	xmm5, xmm3
		movdqa	xmmword	ptr [esp+20h], xmm6
		add	edx, ebp
		xor	esi, ebx
		ror	eax, 7
		add	edx, edi
		pslld	xmm3, 2
		add	ecx, [esp+38h]
		xor	esi, eax
		psrld	xmm5, 1Eh
		mov	ebp, edx
		rol	edx, 5
		add	ecx, esi
		xor	ebp, eax
		ror	edi, 7
		add	ecx, edx
		por	xmm3, xmm5
		add	ebx, [esp+3Ch]
		xor	ebp, edi
		mov	esi, ecx
		rol	ecx, 5
		add	ebx, ebp
		xor	esi, edi
		ror	edx, 7
		add	ebx, ecx
		add	eax, [esp]
		xor	esi, edx
		mov	ebp, ebx
		rol	ebx, 5
		add	eax, esi
		xor	ebp, edx
		ror	ecx, 7
		paddd	xmm7, xmm3
		add	eax, ebx
		add	edi, [esp+4]
		xor	ebp, ecx
		mov	esi, eax
		movdqa	xmmword	ptr [esp+30h], xmm7
		rol	eax, 5
		add	edi, ebp
		xor	esi, ecx
		ror	ebx, 7
		add	edi, eax
		add	edx, [esp+8]
		xor	esi, ebx
		mov	ebp, edi
		rol	edi, 5
		add	edx, esi
		xor	ebp, ebx
		ror	eax, 7
		add	edx, edi
		add	ecx, [esp+0Ch]
		xor	ebp, eax
		mov	esi, edx
		rol	edx, 5
		add	ecx, ebp
		xor	esi, eax
		ror	edi, 7
		add	ecx, edx
		mov	ebp, [esp+0C4h]
		cmp	ebp, [esp+0C8h]
		jz	L$007done
		movdqa	xmm7, xmmword ptr [esp+0A0h]
		movdqa	xmm6, xmmword ptr [esp+0B0h]
		movdqu	xmm0, xmmword ptr [ebp+0]
		movdqu	xmm1, xmmword ptr [ebp+10h]
		movdqu	xmm2, xmmword ptr [ebp+20h]
		movdqu	xmm3, xmmword ptr [ebp+30h]
		add	ebp, 40h ; '@'
		pshufb	xmm0, xmm6
		mov	[esp+0C4h], ebp
		movdqa	xmmword	ptr [esp+60h], xmm7
		add	ebx, [esp+10h]
		xor	esi, edi
		mov	ebp, ecx
		rol	ecx, 5
		add	ebx, esi
		xor	ebp, edi
		ror	edx, 7
		pshufb	xmm1, xmm6
		add	ebx, ecx
		add	eax, [esp+14h]
		xor	ebp, edx
		mov	esi, ebx
		paddd	xmm0, xmm7
		rol	ebx, 5
		add	eax, ebp
		xor	esi, edx
		ror	ecx, 7
		movdqa	xmmword	ptr [esp], xmm0
		add	eax, ebx
		add	edi, [esp+18h]
		xor	esi, ecx
		mov	ebp, eax
		psubd	xmm0, xmm7
		rol	eax, 5
		add	edi, esi
		xor	ebp, ecx
		ror	ebx, 7
		add	edi, eax
		add	edx, [esp+1Ch]
		xor	ebp, ebx
		mov	esi, edi
		rol	edi, 5
		add	edx, ebp
		xor	esi, ebx
		ror	eax, 7
		add	edx, edi
		add	ecx, [esp+20h]
		xor	esi, eax
		mov	ebp, edx
		rol	edx, 5
		add	ecx, esi
		xor	ebp, eax
		ror	edi, 7
		pshufb	xmm2, xmm6
		add	ecx, edx
		add	ebx, [esp+24h]
		xor	ebp, edi
		mov	esi, ecx
		paddd	xmm1, xmm7
		rol	ecx, 5
		add	ebx, ebp
		xor	esi, edi
		ror	edx, 7
		movdqa	xmmword	ptr [esp+10h], xmm1
		add	ebx, ecx
		add	eax, [esp+28h]
		xor	esi, edx
		mov	ebp, ebx
		psubd	xmm1, xmm7
		rol	ebx, 5
		add	eax, esi
		xor	ebp, edx
		ror	ecx, 7
		add	eax, ebx
		add	edi, [esp+2Ch]
		xor	ebp, ecx
		mov	esi, eax
		rol	eax, 5
		add	edi, ebp
		xor	esi, ecx
		ror	ebx, 7
		add	edi, eax
		add	edx, [esp+30h]
		xor	esi, ebx
		mov	ebp, edi
		rol	edi, 5
		add	edx, esi
		xor	ebp, ebx
		ror	eax, 7
		pshufb	xmm3, xmm6
		add	edx, edi
		add	ecx, [esp+34h]
		xor	ebp, eax
		mov	esi, edx
		paddd	xmm2, xmm7
		rol	edx, 5
		add	ecx, ebp
		xor	esi, eax
		ror	edi, 7
		movdqa	xmmword	ptr [esp+20h], xmm2
		add	ecx, edx
		add	ebx, [esp+38h]
		xor	esi, edi
		mov	ebp, ecx
		psubd	xmm2, xmm7
		rol	ecx, 5
		add	ebx, esi
		xor	ebp, edi
		ror	edx, 7
		add	ebx, ecx
		add	eax, [esp+3Ch]
		xor	ebp, edx
		mov	esi, ebx
		rol	ebx, 5
		add	eax, ebp
		ror	ecx, 7
		add	eax, ebx
		mov	ebp, [esp+0C0h]
		add	eax, [ebp+0]
		add	esi, [ebp+4]
		add	ecx, [ebp+8]
		mov	[ebp+0], eax
		add	edx, [ebp+0Ch]
		mov	[ebp+4], esi
		add	edi, [ebp+10h]
		mov	[ebp+8], ecx
		mov	ebx, ecx
		mov	[ebp+0Ch], edx
		xor	ebx, edx
		mov	[ebp+10h], edi
		mov	ebp, esi
		pshufd	xmm4, xmm0, 0EEh
		and	esi, ebx
		mov	ebx, ebp
		jmp	L$006loop
; ---------------------------------------------------------------------------
		align 10h

L$007done:				; CODE XREF: .text:00001DEAj
		add	ebx, [esp+10h]
		xor	esi, edi
		mov	ebp, ecx
		rol	ecx, 5
		add	ebx, esi
		xor	ebp, edi
		ror	edx, 7
		add	ebx, ecx
		add	eax, [esp+14h]
		xor	ebp, edx
		mov	esi, ebx
		rol	ebx, 5
		add	eax, ebp
		xor	esi, edx
		ror	ecx, 7
		add	eax, ebx
		add	edi, [esp+18h]
		xor	esi, ecx
		mov	ebp, eax
		rol	eax, 5
		add	edi, esi
		xor	ebp, ecx
		ror	ebx, 7
		add	edi, eax
		add	edx, [esp+1Ch]
		xor	ebp, ebx
		mov	esi, edi
		rol	edi, 5
		add	edx, ebp
		xor	esi, ebx
		ror	eax, 7
		add	edx, edi
		add	ecx, [esp+20h]
		xor	esi, eax
		mov	ebp, edx
		rol	edx, 5
		add	ecx, esi
		xor	ebp, eax
		ror	edi, 7
		add	ecx, edx
		add	ebx, [esp+24h]
		xor	ebp, edi
		mov	esi, ecx
		rol	ecx, 5
		add	ebx, ebp
		xor	esi, edi
		ror	edx, 7
		add	ebx, ecx
		add	eax, [esp+28h]
		xor	esi, edx
		mov	ebp, ebx
		rol	ebx, 5
		add	eax, esi
		xor	ebp, edx
		ror	ecx, 7
		add	eax, ebx
		add	edi, [esp+2Ch]
		xor	ebp, ecx
		mov	esi, eax
		rol	eax, 5
		add	edi, ebp
		xor	esi, ecx
		ror	ebx, 7
		add	edi, eax
		add	edx, [esp+30h]
		xor	esi, ebx
		mov	ebp, edi
		rol	edi, 5
		add	edx, esi
		xor	ebp, ebx
		ror	eax, 7
		add	edx, edi
		add	ecx, [esp+34h]
		xor	ebp, eax
		mov	esi, edx
		rol	edx, 5
		add	ecx, ebp
		xor	esi, eax
		ror	edi, 7
		add	ecx, edx
		add	ebx, [esp+38h]
		xor	esi, edi
		mov	ebp, ecx
		rol	ecx, 5
		add	ebx, esi
		xor	ebp, edi
		ror	edx, 7
		add	ebx, ecx
		add	eax, [esp+3Ch]
		xor	ebp, edx
		mov	esi, ebx
		rol	ebx, 5
		add	eax, ebp
		ror	ecx, 7
		add	eax, ebx
		mov	ebp, [esp+0C0h]
		add	eax, [ebp+0]
		mov	esp, [esp+0CCh]
		add	esi, [ebp+4]
		add	ecx, [ebp+8]
		mov	[ebp+0], eax
		add	edx, [ebp+0Ch]
		mov	[ebp+4], esi
		add	edi, [ebp+10h]
		mov	[ebp+8], ecx
		mov	[ebp+0Ch], edx
		mov	[ebp+10h], edi
		pop	edi
		pop	esi
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

__sha1_block_data_order_avx:
		push	ebp
		push	ebx
		push	esi
		push	edi
		call	$+5

L$008pic_point:
		pop	ebp
		lea	ebp, [ebp+0EC7h]

L$avx_shortcut:				; CODE XREF: .text:00000053j
		vzeroall
		vmovdqa	xmm7, xmmword ptr [ebp+0]
		vmovdqa	xmm0, xmmword ptr [ebp+10h]
		vmovdqa	xmm1, xmmword ptr [ebp+20h]
		vmovdqa	xmm2, xmmword ptr [ebp+30h]
		vmovdqa	xmm6, xmmword ptr [ebp+40h]
		mov	edi, [esp+14h]
		mov	ebp, [esp+18h]
		mov	edx, [esp+1Ch]
		mov	esi, esp
		sub	esp, 0D0h
		and	esp, 0FFFFFFC0h
		vmovdqa	xmmword	ptr [esp+70h], xmm0
		vmovdqa	xmmword	ptr [esp+80h], xmm1
		vmovdqa	xmmword	ptr [esp+90h], xmm2
		shl	edx, 6
		vmovdqa	xmmword	ptr [esp+0A0h],	xmm7
		add	edx, ebp
		vmovdqa	xmmword	ptr [esp+0B0h],	xmm6
		add	ebp, 40h ; '@'
		mov	[esp+0C0h], edi
		mov	[esp+0C4h], ebp
		mov	[esp+0C8h], edx
		mov	[esp+0CCh], esi
		mov	eax, [edi]
		mov	ebx, [edi+4]
		mov	ecx, [edi+8]
		mov	edx, [edi+0Ch]
		mov	edi, [edi+10h]
		mov	esi, ebx
		vmovdqu	xmm0, xmmword ptr [ebp-40h]
		vmovdqu	xmm1, xmmword ptr [ebp-30h]
		vmovdqu	xmm2, xmmword ptr [ebp-20h]
		vmovdqu	xmm3, xmmword ptr [ebp-10h]
		vpshufb	xmm0, xmm0, xmm6
		vpshufb	xmm1, xmm1, xmm6
		vpshufb	xmm2, xmm2, xmm6
		vmovdqa	xmmword	ptr [esp+60h], xmm7
		vpshufb	xmm3, xmm3, xmm6
		vpaddd	xmm4, xmm0, xmm7
		vpaddd	xmm5, xmm1, xmm7
		vpaddd	xmm6, xmm2, xmm7
		vmovdqa	xmmword	ptr [esp], xmm4
		mov	ebp, ecx
		vmovdqa	xmmword	ptr [esp+10h], xmm5
		xor	ebp, edx
		vmovdqa	xmmword	ptr [esp+20h], xmm6
		and	esi, ebp
		jmp	L$009loop
; ---------------------------------------------------------------------------
		align 10h

L$009loop:				; CODE XREF: .text:000021A2j
					; .text:00002E09j
		shrd	ebx, ebx, 2
		xor	esi, edx
		vpalignr xmm4, xmm1, xmm0, 8
		mov	ebp, eax
		add	edi, [esp]
		vpaddd	xmm7, xmm7, xmm3
		vmovdqa	xmmword	ptr [esp+40h], xmm0
		xor	ebx, ecx
		shld	eax, eax, 5
		vpsrldq	xmm6, xmm3, 4
		add	edi, esi
		and	ebp, ebx
		vpxor	xmm4, xmm4, xmm0
		xor	ebx, ecx
		add	edi, eax
		vpxor	xmm6, xmm6, xmm2
		shrd	eax, eax, 7
		xor	ebp, ecx
		vmovdqa	xmmword	ptr [esp+30h], xmm7
		mov	esi, edi
		add	edx, [esp+4]
		vpxor	xmm4, xmm4, xmm6
		xor	eax, ebx
		shld	edi, edi, 5
		add	edx, ebp
		and	esi, eax
		vpsrld	xmm6, xmm4, 1Fh
		xor	eax, ebx
		add	edx, edi
		shrd	edi, edi, 7
		xor	esi, ebx
		vpslldq	xmm0, xmm4, 0Ch
		vpaddd	xmm4, xmm4, xmm4
		mov	ebp, edx
		add	ecx, [esp+8]
		xor	edi, eax
		shld	edx, edx, 5
		vpsrld	xmm7, xmm0, 1Eh
		vpor	xmm4, xmm4, xmm6
		add	ecx, esi
		and	ebp, edi
		xor	edi, eax
		add	ecx, edx
		vpslld	xmm0, xmm0, 2
		shrd	edx, edx, 7
		xor	ebp, eax
		vpxor	xmm4, xmm4, xmm7
		mov	esi, ecx
		add	ebx, [esp+0Ch]
		xor	edx, edi
		shld	ecx, ecx, 5
		vpxor	xmm4, xmm4, xmm0
		add	ebx, ebp
		and	esi, edx
		vmovdqa	xmm0, xmmword ptr [esp+60h]
		xor	edx, edi
		add	ebx, ecx
		shrd	ecx, ecx, 7
		xor	esi, edi
		vpalignr xmm5, xmm2, xmm1, 8
		mov	ebp, ebx
		add	eax, [esp+10h]
		vpaddd	xmm0, xmm0, xmm4
		vmovdqa	xmmword	ptr [esp+50h], xmm1
		xor	ecx, edx
		shld	ebx, ebx, 5
		vpsrldq	xmm7, xmm4, 4
		add	eax, esi
		and	ebp, ecx
		vpxor	xmm5, xmm5, xmm1
		xor	ecx, edx
		add	eax, ebx
		vpxor	xmm7, xmm7, xmm3
		shrd	ebx, ebx, 7
		xor	ebp, edx
		vmovdqa	xmmword	ptr [esp], xmm0
		mov	esi, eax
		add	edi, [esp+14h]
		vpxor	xmm5, xmm5, xmm7
		xor	ebx, ecx
		shld	eax, eax, 5
		add	edi, ebp
		and	esi, ebx
		vpsrld	xmm7, xmm5, 1Fh
		xor	ebx, ecx
		add	edi, eax
		shrd	eax, eax, 7
		xor	esi, ecx
		vpslldq	xmm1, xmm5, 0Ch
		vpaddd	xmm5, xmm5, xmm5
		mov	ebp, edi
		add	edx, [esp+18h]
		xor	eax, ebx
		shld	edi, edi, 5
		vpsrld	xmm0, xmm1, 1Eh
		vpor	xmm5, xmm5, xmm7
		add	edx, esi
		and	ebp, eax
		xor	eax, ebx
		add	edx, edi
		vpslld	xmm1, xmm1, 2
		shrd	edi, edi, 7
		xor	ebp, ebx
		vpxor	xmm5, xmm5, xmm0
		mov	esi, edx
		add	ecx, [esp+1Ch]
		xor	edi, eax
		shld	edx, edx, 5
		vpxor	xmm5, xmm5, xmm1
		add	ecx, ebp
		and	esi, edi
		vmovdqa	xmm1, xmmword ptr [esp+70h]
		xor	edi, eax
		add	ecx, edx
		shrd	edx, edx, 7
		xor	esi, eax
		vpalignr xmm6, xmm3, xmm2, 8
		mov	ebp, ecx
		add	ebx, [esp+20h]
		vpaddd	xmm1, xmm1, xmm5
		vmovdqa	xmmword	ptr [esp+60h], xmm2
		xor	edx, edi
		shld	ecx, ecx, 5
		vpsrldq	xmm0, xmm5, 4
		add	ebx, esi
		and	ebp, edx
		vpxor	xmm6, xmm6, xmm2
		xor	edx, edi
		add	ebx, ecx
		vpxor	xmm0, xmm0, xmm4
		shrd	ecx, ecx, 7
		xor	ebp, edi
		vmovdqa	xmmword	ptr [esp+10h], xmm1
		mov	esi, ebx
		add	eax, [esp+24h]
		vpxor	xmm6, xmm6, xmm0
		xor	ecx, edx
		shld	ebx, ebx, 5
		add	eax, ebp
		and	esi, ecx
		vpsrld	xmm0, xmm6, 1Fh
		xor	ecx, edx
		add	eax, ebx
		shrd	ebx, ebx, 7
		xor	esi, edx
		vpslldq	xmm2, xmm6, 0Ch
		vpaddd	xmm6, xmm6, xmm6
		mov	ebp, eax
		add	edi, [esp+28h]
		xor	ebx, ecx
		shld	eax, eax, 5
		vpsrld	xmm1, xmm2, 1Eh
		vpor	xmm6, xmm6, xmm0
		add	edi, esi
		and	ebp, ebx
		xor	ebx, ecx
		add	edi, eax
		vpslld	xmm2, xmm2, 2
		vmovdqa	xmm0, xmmword ptr [esp+40h]
		shrd	eax, eax, 7
		xor	ebp, ecx
		vpxor	xmm6, xmm6, xmm1
		mov	esi, edi
		add	edx, [esp+2Ch]
		xor	eax, ebx
		shld	edi, edi, 5
		vpxor	xmm6, xmm6, xmm2
		add	edx, ebp
		and	esi, eax
		vmovdqa	xmm2, xmmword ptr [esp+70h]
		xor	eax, ebx
		add	edx, edi
		shrd	edi, edi, 7
		xor	esi, ebx
		vpalignr xmm7, xmm4, xmm3, 8
		mov	ebp, edx
		add	ecx, [esp+30h]
		vpaddd	xmm2, xmm2, xmm6
		vmovdqa	xmmword	ptr [esp+40h], xmm3
		xor	edi, eax
		shld	edx, edx, 5
		vpsrldq	xmm1, xmm6, 4
		add	ecx, esi
		and	ebp, edi
		vpxor	xmm7, xmm7, xmm3
		xor	edi, eax
		add	ecx, edx
		vpxor	xmm1, xmm1, xmm5
		shrd	edx, edx, 7
		xor	ebp, eax
		vmovdqa	xmmword	ptr [esp+20h], xmm2
		mov	esi, ecx
		add	ebx, [esp+34h]
		vpxor	xmm7, xmm7, xmm1
		xor	edx, edi
		shld	ecx, ecx, 5
		add	ebx, ebp
		and	esi, edx
		vpsrld	xmm1, xmm7, 1Fh
		xor	edx, edi
		add	ebx, ecx
		shrd	ecx, ecx, 7
		xor	esi, edi
		vpslldq	xmm3, xmm7, 0Ch
		vpaddd	xmm7, xmm7, xmm7
		mov	ebp, ebx
		add	eax, [esp+38h]
		xor	ecx, edx
		shld	ebx, ebx, 5
		vpsrld	xmm2, xmm3, 1Eh
		vpor	xmm7, xmm7, xmm1
		add	eax, esi
		and	ebp, ecx
		xor	ecx, edx
		add	eax, ebx
		vpslld	xmm3, xmm3, 2
		vmovdqa	xmm1, xmmword ptr [esp+50h]
		shrd	ebx, ebx, 7
		xor	ebp, edx
		vpxor	xmm7, xmm7, xmm2
		mov	esi, eax
		add	edi, [esp+3Ch]
		xor	ebx, ecx
		shld	eax, eax, 5
		vpxor	xmm7, xmm7, xmm3
		add	edi, ebp
		and	esi, ebx
		vmovdqa	xmm3, xmmword ptr [esp+70h]
		xor	ebx, ecx
		add	edi, eax
		vpalignr xmm2, xmm7, xmm6, 8
		vpxor	xmm0, xmm0, xmm4
		shrd	eax, eax, 7
		xor	esi, ecx
		mov	ebp, edi
		add	edx, [esp]
		vpxor	xmm0, xmm0, xmm1
		vmovdqa	xmmword	ptr [esp+50h], xmm4
		xor	eax, ebx
		shld	edi, edi, 5
		vmovdqa	xmm4, xmm3
		vpaddd	xmm3, xmm3, xmm7
		add	edx, esi
		and	ebp, eax
		vpxor	xmm0, xmm0, xmm2
		xor	eax, ebx
		add	edx, edi
		shrd	edi, edi, 7
		xor	ebp, ebx
		vpsrld	xmm2, xmm0, 1Eh
		vmovdqa	xmmword	ptr [esp+30h], xmm3
		mov	esi, edx
		add	ecx, [esp+4]
		xor	edi, eax
		shld	edx, edx, 5
		vpslld	xmm0, xmm0, 2
		add	ecx, ebp
		and	esi, edi
		xor	edi, eax
		add	ecx, edx
		shrd	edx, edx, 7
		xor	esi, eax
		mov	ebp, ecx
		add	ebx, [esp+8]
		vpor	xmm0, xmm0, xmm2
		xor	edx, edi
		shld	ecx, ecx, 5
		vmovdqa	xmm2, xmmword ptr [esp+60h]
		add	ebx, esi
		and	ebp, edx
		xor	edx, edi
		add	ebx, ecx
		add	eax, [esp+0Ch]
		xor	ebp, edi
		mov	esi, ebx
		shld	ebx, ebx, 5
		add	eax, ebp
		xor	esi, edx
		shrd	ecx, ecx, 7
		add	eax, ebx
		vpalignr xmm3, xmm0, xmm7, 8
		vpxor	xmm1, xmm1, xmm5
		add	edi, [esp+10h]
		xor	esi, ecx
		mov	ebp, eax
		shld	eax, eax, 5
		vpxor	xmm1, xmm1, xmm2
		vmovdqa	xmmword	ptr [esp+60h], xmm5
		add	edi, esi
		xor	ebp, ecx
		vmovdqa	xmm5, xmm4
		vpaddd	xmm4, xmm4, xmm0
		shrd	ebx, ebx, 7
		add	edi, eax
		vpxor	xmm1, xmm1, xmm3
		add	edx, [esp+14h]
		xor	ebp, ebx
		mov	esi, edi
		shld	edi, edi, 5
		vpsrld	xmm3, xmm1, 1Eh
		vmovdqa	xmmword	ptr [esp], xmm4
		add	edx, ebp
		xor	esi, ebx
		shrd	eax, eax, 7
		add	edx, edi
		vpslld	xmm1, xmm1, 2
		add	ecx, [esp+18h]
		xor	esi, eax
		mov	ebp, edx
		shld	edx, edx, 5
		add	ecx, esi
		xor	ebp, eax
		shrd	edi, edi, 7
		add	ecx, edx
		vpor	xmm1, xmm1, xmm3
		add	ebx, [esp+1Ch]
		xor	ebp, edi
		vmovdqa	xmm3, xmmword ptr [esp+40h]
		mov	esi, ecx
		shld	ecx, ecx, 5
		add	ebx, ebp
		xor	esi, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		vpalignr xmm4, xmm1, xmm0, 8
		vpxor	xmm2, xmm2, xmm6
		add	eax, [esp+20h]
		xor	esi, edx
		mov	ebp, ebx
		shld	ebx, ebx, 5
		vpxor	xmm2, xmm2, xmm3
		vmovdqa	xmmword	ptr [esp+40h], xmm6
		add	eax, esi
		xor	ebp, edx
		vmovdqa	xmm6, xmmword ptr [esp+80h]
		vpaddd	xmm5, xmm5, xmm1
		shrd	ecx, ecx, 7
		add	eax, ebx
		vpxor	xmm2, xmm2, xmm4
		add	edi, [esp+24h]
		xor	ebp, ecx
		mov	esi, eax
		shld	eax, eax, 5
		vpsrld	xmm4, xmm2, 1Eh
		vmovdqa	xmmword	ptr [esp+10h], xmm5
		add	edi, ebp
		xor	esi, ecx
		shrd	ebx, ebx, 7
		add	edi, eax
		vpslld	xmm2, xmm2, 2
		add	edx, [esp+28h]
		xor	esi, ebx
		mov	ebp, edi
		shld	edi, edi, 5
		add	edx, esi
		xor	ebp, ebx
		shrd	eax, eax, 7
		add	edx, edi
		vpor	xmm2, xmm2, xmm4
		add	ecx, [esp+2Ch]
		xor	ebp, eax
		vmovdqa	xmm4, xmmword ptr [esp+50h]
		mov	esi, edx
		shld	edx, edx, 5
		add	ecx, ebp
		xor	esi, eax
		shrd	edi, edi, 7
		add	ecx, edx
		vpalignr xmm5, xmm2, xmm1, 8
		vpxor	xmm3, xmm3, xmm7
		add	ebx, [esp+30h]
		xor	esi, edi
		mov	ebp, ecx
		shld	ecx, ecx, 5
		vpxor	xmm3, xmm3, xmm4
		vmovdqa	xmmword	ptr [esp+50h], xmm7
		add	ebx, esi
		xor	ebp, edi
		vmovdqa	xmm7, xmm6
		vpaddd	xmm6, xmm6, xmm2
		shrd	edx, edx, 7
		add	ebx, ecx
		vpxor	xmm3, xmm3, xmm5
		add	eax, [esp+34h]
		xor	ebp, edx
		mov	esi, ebx
		shld	ebx, ebx, 5
		vpsrld	xmm5, xmm3, 1Eh
		vmovdqa	xmmword	ptr [esp+20h], xmm6
		add	eax, ebp
		xor	esi, edx
		shrd	ecx, ecx, 7
		add	eax, ebx
		vpslld	xmm3, xmm3, 2
		add	edi, [esp+38h]
		xor	esi, ecx
		mov	ebp, eax
		shld	eax, eax, 5
		add	edi, esi
		xor	ebp, ecx
		shrd	ebx, ebx, 7
		add	edi, eax
		vpor	xmm3, xmm3, xmm5
		add	edx, [esp+3Ch]
		xor	ebp, ebx
		vmovdqa	xmm5, xmmword ptr [esp+60h]
		mov	esi, edi
		shld	edi, edi, 5
		add	edx, ebp
		xor	esi, ebx
		shrd	eax, eax, 7
		add	edx, edi
		vpalignr xmm6, xmm3, xmm2, 8
		vpxor	xmm4, xmm4, xmm0
		add	ecx, [esp]
		xor	esi, eax
		mov	ebp, edx
		shld	edx, edx, 5
		vpxor	xmm4, xmm4, xmm5
		vmovdqa	xmmword	ptr [esp+60h], xmm0
		add	ecx, esi
		xor	ebp, eax
		vmovdqa	xmm0, xmm7
		vpaddd	xmm7, xmm7, xmm3
		shrd	edi, edi, 7
		add	ecx, edx
		vpxor	xmm4, xmm4, xmm6
		add	ebx, [esp+4]
		xor	ebp, edi
		mov	esi, ecx
		shld	ecx, ecx, 5
		vpsrld	xmm6, xmm4, 1Eh
		vmovdqa	xmmword	ptr [esp+30h], xmm7
		add	ebx, ebp
		xor	esi, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		vpslld	xmm4, xmm4, 2
		add	eax, [esp+8]
		xor	esi, edx
		mov	ebp, ebx
		shld	ebx, ebx, 5
		add	eax, esi
		xor	ebp, edx
		shrd	ecx, ecx, 7
		add	eax, ebx
		vpor	xmm4, xmm4, xmm6
		add	edi, [esp+0Ch]
		xor	ebp, ecx
		vmovdqa	xmm6, xmmword ptr [esp+40h]
		mov	esi, eax
		shld	eax, eax, 5
		add	edi, ebp
		xor	esi, ecx
		shrd	ebx, ebx, 7
		add	edi, eax
		vpalignr xmm7, xmm4, xmm3, 8
		vpxor	xmm5, xmm5, xmm1
		add	edx, [esp+10h]
		xor	esi, ebx
		mov	ebp, edi
		shld	edi, edi, 5
		vpxor	xmm5, xmm5, xmm6
		vmovdqa	xmmword	ptr [esp+40h], xmm1
		add	edx, esi
		xor	ebp, ebx
		vmovdqa	xmm1, xmm0
		vpaddd	xmm0, xmm0, xmm4
		shrd	eax, eax, 7
		add	edx, edi
		vpxor	xmm5, xmm5, xmm7
		add	ecx, [esp+14h]
		xor	ebp, eax
		mov	esi, edx
		shld	edx, edx, 5
		vpsrld	xmm7, xmm5, 1Eh
		vmovdqa	xmmword	ptr [esp], xmm0
		add	ecx, ebp
		xor	esi, eax
		shrd	edi, edi, 7
		add	ecx, edx
		vpslld	xmm5, xmm5, 2
		add	ebx, [esp+18h]
		xor	esi, edi
		mov	ebp, ecx
		shld	ecx, ecx, 5
		add	ebx, esi
		xor	ebp, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		vpor	xmm5, xmm5, xmm7
		add	eax, [esp+1Ch]
		vmovdqa	xmm7, xmmword ptr [esp+50h]
		shrd	ecx, ecx, 7
		mov	esi, ebx
		xor	ebp, edx
		shld	ebx, ebx, 5
		add	eax, ebp
		xor	esi, ecx
		xor	ecx, edx
		add	eax, ebx
		vpalignr xmm0, xmm5, xmm4, 8
		vpxor	xmm6, xmm6, xmm2
		add	edi, [esp+20h]
		and	esi, ecx
		xor	ecx, edx
		shrd	ebx, ebx, 7
		vpxor	xmm6, xmm6, xmm7
		vmovdqa	xmmword	ptr [esp+50h], xmm2
		mov	ebp, eax
		xor	esi, ecx
		vmovdqa	xmm2, xmm1
		vpaddd	xmm1, xmm1, xmm5
		shld	eax, eax, 5
		add	edi, esi
		vpxor	xmm6, xmm6, xmm0
		xor	ebp, ebx
		xor	ebx, ecx
		add	edi, eax
		add	edx, [esp+24h]
		vpsrld	xmm0, xmm6, 1Eh
		vmovdqa	xmmword	ptr [esp+10h], xmm1
		and	ebp, ebx
		xor	ebx, ecx
		shrd	eax, eax, 7
		mov	esi, edi
		vpslld	xmm6, xmm6, 2
		xor	ebp, ebx
		shld	edi, edi, 5
		add	edx, ebp
		xor	esi, eax
		xor	eax, ebx
		add	edx, edi
		add	ecx, [esp+28h]
		and	esi, eax
		vpor	xmm6, xmm6, xmm0
		xor	eax, ebx
		shrd	edi, edi, 7
		vmovdqa	xmm0, xmmword ptr [esp+60h]
		mov	ebp, edx
		xor	esi, eax
		shld	edx, edx, 5
		add	ecx, esi
		xor	ebp, edi
		xor	edi, eax
		add	ecx, edx
		add	ebx, [esp+2Ch]
		and	ebp, edi
		xor	edi, eax
		shrd	edx, edx, 7
		mov	esi, ecx
		xor	ebp, edi
		shld	ecx, ecx, 5
		add	ebx, ebp
		xor	esi, edx
		xor	edx, edi
		add	ebx, ecx
		vpalignr xmm1, xmm6, xmm5, 8
		vpxor	xmm7, xmm7, xmm3
		add	eax, [esp+30h]
		and	esi, edx
		xor	edx, edi
		shrd	ecx, ecx, 7
		vpxor	xmm7, xmm7, xmm0
		vmovdqa	xmmword	ptr [esp+60h], xmm3
		mov	ebp, ebx
		xor	esi, edx
		vmovdqa	xmm3, xmmword ptr [esp+90h]
		vpaddd	xmm2, xmm2, xmm6
		shld	ebx, ebx, 5
		add	eax, esi
		vpxor	xmm7, xmm7, xmm1
		xor	ebp, ecx
		xor	ecx, edx
		add	eax, ebx
		add	edi, [esp+34h]
		vpsrld	xmm1, xmm7, 1Eh
		vmovdqa	xmmword	ptr [esp+20h], xmm2
		and	ebp, ecx
		xor	ecx, edx
		shrd	ebx, ebx, 7
		mov	esi, eax
		vpslld	xmm7, xmm7, 2
		xor	ebp, ecx
		shld	eax, eax, 5
		add	edi, ebp
		xor	esi, ebx
		xor	ebx, ecx
		add	edi, eax
		add	edx, [esp+38h]
		and	esi, ebx
		vpor	xmm7, xmm7, xmm1
		xor	ebx, ecx
		shrd	eax, eax, 7
		vmovdqa	xmm1, xmmword ptr [esp+40h]
		mov	ebp, edi
		xor	esi, ebx
		shld	edi, edi, 5
		add	edx, esi
		xor	ebp, eax
		xor	eax, ebx
		add	edx, edi
		add	ecx, [esp+3Ch]
		and	ebp, eax
		xor	eax, ebx
		shrd	edi, edi, 7
		mov	esi, edx
		xor	ebp, eax
		shld	edx, edx, 5
		add	ecx, ebp
		xor	esi, edi
		xor	edi, eax
		add	ecx, edx
		vpalignr xmm2, xmm7, xmm6, 8
		vpxor	xmm0, xmm0, xmm4
		add	ebx, [esp]
		and	esi, edi
		xor	edi, eax
		shrd	edx, edx, 7
		vpxor	xmm0, xmm0, xmm1
		vmovdqa	xmmword	ptr [esp+40h], xmm4
		mov	ebp, ecx
		xor	esi, edi
		vmovdqa	xmm4, xmm3
		vpaddd	xmm3, xmm3, xmm7
		shld	ecx, ecx, 5
		add	ebx, esi
		vpxor	xmm0, xmm0, xmm2
		xor	ebp, edx
		xor	edx, edi
		add	ebx, ecx
		add	eax, [esp+4]
		vpsrld	xmm2, xmm0, 1Eh
		vmovdqa	xmmword	ptr [esp+30h], xmm3
		and	ebp, edx
		xor	edx, edi
		shrd	ecx, ecx, 7
		mov	esi, ebx
		vpslld	xmm0, xmm0, 2
		xor	ebp, edx
		shld	ebx, ebx, 5
		add	eax, ebp
		xor	esi, ecx
		xor	ecx, edx
		add	eax, ebx
		add	edi, [esp+8]
		and	esi, ecx
		vpor	xmm0, xmm0, xmm2
		xor	ecx, edx
		shrd	ebx, ebx, 7
		vmovdqa	xmm2, xmmword ptr [esp+50h]
		mov	ebp, eax
		xor	esi, ecx
		shld	eax, eax, 5
		add	edi, esi
		xor	ebp, ebx
		xor	ebx, ecx
		add	edi, eax
		add	edx, [esp+0Ch]
		and	ebp, ebx
		xor	ebx, ecx
		shrd	eax, eax, 7
		mov	esi, edi
		xor	ebp, ebx
		shld	edi, edi, 5
		add	edx, ebp
		xor	esi, eax
		xor	eax, ebx
		add	edx, edi
		vpalignr xmm3, xmm0, xmm7, 8
		vpxor	xmm1, xmm1, xmm5
		add	ecx, [esp+10h]
		and	esi, eax
		xor	eax, ebx
		shrd	edi, edi, 7
		vpxor	xmm1, xmm1, xmm2
		vmovdqa	xmmword	ptr [esp+50h], xmm5
		mov	ebp, edx
		xor	esi, eax
		vmovdqa	xmm5, xmm4
		vpaddd	xmm4, xmm4, xmm0
		shld	edx, edx, 5
		add	ecx, esi
		vpxor	xmm1, xmm1, xmm3
		xor	ebp, edi
		xor	edi, eax
		add	ecx, edx
		add	ebx, [esp+14h]
		vpsrld	xmm3, xmm1, 1Eh
		vmovdqa	xmmword	ptr [esp], xmm4
		and	ebp, edi
		xor	edi, eax
		shrd	edx, edx, 7
		mov	esi, ecx
		vpslld	xmm1, xmm1, 2
		xor	ebp, edi
		shld	ecx, ecx, 5
		add	ebx, ebp
		xor	esi, edx
		xor	edx, edi
		add	ebx, ecx
		add	eax, [esp+18h]
		and	esi, edx
		vpor	xmm1, xmm1, xmm3
		xor	edx, edi
		shrd	ecx, ecx, 7
		vmovdqa	xmm3, xmmword ptr [esp+60h]
		mov	ebp, ebx
		xor	esi, edx
		shld	ebx, ebx, 5
		add	eax, esi
		xor	ebp, ecx
		xor	ecx, edx
		add	eax, ebx
		add	edi, [esp+1Ch]
		and	ebp, ecx
		xor	ecx, edx
		shrd	ebx, ebx, 7
		mov	esi, eax
		xor	ebp, ecx
		shld	eax, eax, 5
		add	edi, ebp
		xor	esi, ebx
		xor	ebx, ecx
		add	edi, eax
		vpalignr xmm4, xmm1, xmm0, 8
		vpxor	xmm2, xmm2, xmm6
		add	edx, [esp+20h]
		and	esi, ebx
		xor	ebx, ecx
		shrd	eax, eax, 7
		vpxor	xmm2, xmm2, xmm3
		vmovdqa	xmmword	ptr [esp+60h], xmm6
		mov	ebp, edi
		xor	esi, ebx
		vmovdqa	xmm6, xmm5
		vpaddd	xmm5, xmm5, xmm1
		shld	edi, edi, 5
		add	edx, esi
		vpxor	xmm2, xmm2, xmm4
		xor	ebp, eax
		xor	eax, ebx
		add	edx, edi
		add	ecx, [esp+24h]
		vpsrld	xmm4, xmm2, 1Eh
		vmovdqa	xmmword	ptr [esp+10h], xmm5
		and	ebp, eax
		xor	eax, ebx
		shrd	edi, edi, 7
		mov	esi, edx
		vpslld	xmm2, xmm2, 2
		xor	ebp, eax
		shld	edx, edx, 5
		add	ecx, ebp
		xor	esi, edi
		xor	edi, eax
		add	ecx, edx
		add	ebx, [esp+28h]
		and	esi, edi
		vpor	xmm2, xmm2, xmm4
		xor	edi, eax
		shrd	edx, edx, 7
		vmovdqa	xmm4, xmmword ptr [esp+40h]
		mov	ebp, ecx
		xor	esi, edi
		shld	ecx, ecx, 5
		add	ebx, esi
		xor	ebp, edx
		xor	edx, edi
		add	ebx, ecx
		add	eax, [esp+2Ch]
		and	ebp, edx
		xor	edx, edi
		shrd	ecx, ecx, 7
		mov	esi, ebx
		xor	ebp, edx
		shld	ebx, ebx, 5
		add	eax, ebp
		xor	esi, edx
		add	eax, ebx
		vpalignr xmm5, xmm2, xmm1, 8
		vpxor	xmm3, xmm3, xmm7
		add	edi, [esp+30h]
		xor	esi, ecx
		mov	ebp, eax
		shld	eax, eax, 5
		vpxor	xmm3, xmm3, xmm4
		vmovdqa	xmmword	ptr [esp+40h], xmm7
		add	edi, esi
		xor	ebp, ecx
		vmovdqa	xmm7, xmm6
		vpaddd	xmm6, xmm6, xmm2
		shrd	ebx, ebx, 7
		add	edi, eax
		vpxor	xmm3, xmm3, xmm5
		add	edx, [esp+34h]
		xor	ebp, ebx
		mov	esi, edi
		shld	edi, edi, 5
		vpsrld	xmm5, xmm3, 1Eh
		vmovdqa	xmmword	ptr [esp+20h], xmm6
		add	edx, ebp
		xor	esi, ebx
		shrd	eax, eax, 7
		add	edx, edi
		vpslld	xmm3, xmm3, 2
		add	ecx, [esp+38h]
		xor	esi, eax
		mov	ebp, edx
		shld	edx, edx, 5
		add	ecx, esi
		xor	ebp, eax
		shrd	edi, edi, 7
		add	ecx, edx
		vpor	xmm3, xmm3, xmm5
		add	ebx, [esp+3Ch]
		xor	ebp, edi
		mov	esi, ecx
		shld	ecx, ecx, 5
		add	ebx, ebp
		xor	esi, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		add	eax, [esp]
		vpaddd	xmm7, xmm7, xmm3
		xor	esi, edx
		mov	ebp, ebx
		shld	ebx, ebx, 5
		add	eax, esi
		vmovdqa	xmmword	ptr [esp+30h], xmm7
		xor	ebp, edx
		shrd	ecx, ecx, 7
		add	eax, ebx
		add	edi, [esp+4]
		xor	ebp, ecx
		mov	esi, eax
		shld	eax, eax, 5
		add	edi, ebp
		xor	esi, ecx
		shrd	ebx, ebx, 7
		add	edi, eax
		add	edx, [esp+8]
		xor	esi, ebx
		mov	ebp, edi
		shld	edi, edi, 5
		add	edx, esi
		xor	ebp, ebx
		shrd	eax, eax, 7
		add	edx, edi
		add	ecx, [esp+0Ch]
		xor	ebp, eax
		mov	esi, edx
		shld	edx, edx, 5
		add	ecx, ebp
		xor	esi, eax
		shrd	edi, edi, 7
		add	ecx, edx
		mov	ebp, [esp+0C4h]
		cmp	ebp, [esp+0C8h]
		jz	L$010done
		vmovdqa	xmm7, xmmword ptr [esp+0A0h]
		vmovdqa	xmm6, xmmword ptr [esp+0B0h]
		vmovdqu	xmm0, xmmword ptr [ebp+0]
		vmovdqu	xmm1, xmmword ptr [ebp+10h]
		vmovdqu	xmm2, xmmword ptr [ebp+20h]
		vmovdqu	xmm3, xmmword ptr [ebp+30h]
		add	ebp, 40h ; '@'
		vpshufb	xmm0, xmm0, xmm6
		mov	[esp+0C4h], ebp
		vmovdqa	xmmword	ptr [esp+60h], xmm7
		add	ebx, [esp+10h]
		xor	esi, edi
		vpshufb	xmm1, xmm1, xmm6
		mov	ebp, ecx
		shld	ecx, ecx, 5
		vpaddd	xmm4, xmm0, xmm7
		add	ebx, esi
		xor	ebp, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		vmovdqa	xmmword	ptr [esp], xmm4
		add	eax, [esp+14h]
		xor	ebp, edx
		mov	esi, ebx
		shld	ebx, ebx, 5
		add	eax, ebp
		xor	esi, edx
		shrd	ecx, ecx, 7
		add	eax, ebx
		add	edi, [esp+18h]
		xor	esi, ecx
		mov	ebp, eax
		shld	eax, eax, 5
		add	edi, esi
		xor	ebp, ecx
		shrd	ebx, ebx, 7
		add	edi, eax
		add	edx, [esp+1Ch]
		xor	ebp, ebx
		mov	esi, edi
		shld	edi, edi, 5
		add	edx, ebp
		xor	esi, ebx
		shrd	eax, eax, 7
		add	edx, edi
		add	ecx, [esp+20h]
		xor	esi, eax
		vpshufb	xmm2, xmm2, xmm6
		mov	ebp, edx
		shld	edx, edx, 5
		vpaddd	xmm5, xmm1, xmm7
		add	ecx, esi
		xor	ebp, eax
		shrd	edi, edi, 7
		add	ecx, edx
		vmovdqa	xmmword	ptr [esp+10h], xmm5
		add	ebx, [esp+24h]
		xor	ebp, edi
		mov	esi, ecx
		shld	ecx, ecx, 5
		add	ebx, ebp
		xor	esi, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		add	eax, [esp+28h]
		xor	esi, edx
		mov	ebp, ebx
		shld	ebx, ebx, 5
		add	eax, esi
		xor	ebp, edx
		shrd	ecx, ecx, 7
		add	eax, ebx
		add	edi, [esp+2Ch]
		xor	ebp, ecx
		mov	esi, eax
		shld	eax, eax, 5
		add	edi, ebp
		xor	esi, ecx
		shrd	ebx, ebx, 7
		add	edi, eax
		add	edx, [esp+30h]
		xor	esi, ebx
		vpshufb	xmm3, xmm3, xmm6
		mov	ebp, edi
		shld	edi, edi, 5
		vpaddd	xmm6, xmm2, xmm7
		add	edx, esi
		xor	ebp, ebx
		shrd	eax, eax, 7
		add	edx, edi
		vmovdqa	xmmword	ptr [esp+20h], xmm6
		add	ecx, [esp+34h]
		xor	ebp, eax
		mov	esi, edx
		shld	edx, edx, 5
		add	ecx, ebp
		xor	esi, eax
		shrd	edi, edi, 7
		add	ecx, edx
		add	ebx, [esp+38h]
		xor	esi, edi
		mov	ebp, ecx
		shld	ecx, ecx, 5
		add	ebx, esi
		xor	ebp, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		add	eax, [esp+3Ch]
		xor	ebp, edx
		mov	esi, ebx
		shld	ebx, ebx, 5
		add	eax, ebp
		shrd	ecx, ecx, 7
		add	eax, ebx
		mov	ebp, [esp+0C0h]
		add	eax, [ebp+0]
		add	esi, [ebp+4]
		add	ecx, [ebp+8]
		mov	[ebp+0], eax
		add	edx, [ebp+0Ch]
		mov	[ebp+4], esi
		add	edi, [ebp+10h]
		mov	ebx, ecx
		mov	[ebp+8], ecx
		xor	ebx, edx
		mov	[ebp+0Ch], edx
		mov	[ebp+10h], edi
		mov	ebp, esi
		and	esi, ebx
		mov	ebx, ebp
		jmp	L$009loop
; ---------------------------------------------------------------------------
		align 10h

L$010done:				; CODE XREF: .text:00002C67j
		add	ebx, [esp+10h]
		xor	esi, edi
		mov	ebp, ecx
		shld	ecx, ecx, 5
		add	ebx, esi
		xor	ebp, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		add	eax, [esp+14h]
		xor	ebp, edx
		mov	esi, ebx
		shld	ebx, ebx, 5
		add	eax, ebp
		xor	esi, edx
		shrd	ecx, ecx, 7
		add	eax, ebx
		add	edi, [esp+18h]
		xor	esi, ecx
		mov	ebp, eax
		shld	eax, eax, 5
		add	edi, esi
		xor	ebp, ecx
		shrd	ebx, ebx, 7
		add	edi, eax
		add	edx, [esp+1Ch]
		xor	ebp, ebx
		mov	esi, edi
		shld	edi, edi, 5
		add	edx, ebp
		xor	esi, ebx
		shrd	eax, eax, 7
		add	edx, edi
		add	ecx, [esp+20h]
		xor	esi, eax
		mov	ebp, edx
		shld	edx, edx, 5
		add	ecx, esi
		xor	ebp, eax
		shrd	edi, edi, 7
		add	ecx, edx
		add	ebx, [esp+24h]
		xor	ebp, edi
		mov	esi, ecx
		shld	ecx, ecx, 5
		add	ebx, ebp
		xor	esi, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		add	eax, [esp+28h]
		xor	esi, edx
		mov	ebp, ebx
		shld	ebx, ebx, 5
		add	eax, esi
		xor	ebp, edx
		shrd	ecx, ecx, 7
		add	eax, ebx
		add	edi, [esp+2Ch]
		xor	ebp, ecx
		mov	esi, eax
		shld	eax, eax, 5
		add	edi, ebp
		xor	esi, ecx
		shrd	ebx, ebx, 7
		add	edi, eax
		add	edx, [esp+30h]
		xor	esi, ebx
		mov	ebp, edi
		shld	edi, edi, 5
		add	edx, esi
		xor	ebp, ebx
		shrd	eax, eax, 7
		add	edx, edi
		add	ecx, [esp+34h]
		xor	ebp, eax
		mov	esi, edx
		shld	edx, edx, 5
		add	ecx, ebp
		xor	esi, eax
		shrd	edi, edi, 7
		add	ecx, edx
		add	ebx, [esp+38h]
		xor	esi, edi
		mov	ebp, ecx
		shld	ecx, ecx, 5
		add	ebx, esi
		xor	ebp, edi
		shrd	edx, edx, 7
		add	ebx, ecx
		add	eax, [esp+3Ch]
		xor	ebp, edx
		mov	esi, ebx
		shld	ebx, ebx, 5
		add	eax, ebp
		shrd	ecx, ecx, 7
		add	eax, ebx
		vzeroall
		mov	ebp, [esp+0C0h]
		add	eax, [ebp+0]
		mov	esp, [esp+0CCh]
		add	esi, [ebp+4]
		add	ecx, [ebp+8]
		mov	[ebp+0], eax
		add	edx, [ebp+0Ch]
		mov	[ebp+4], esi
		add	edi, [ebp+10h]
		mov	[ebp+8], ecx
		mov	[ebp+0Ch], edx
		mov	[ebp+10h], edi
		pop	edi
		pop	esi
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 40h
L$K_XX_XX	dd 4 dup(5A827999h), 4 dup(6ED9EBA1h), 4 dup(8F1BBCDCh)
		dd 4 dup(0CA62C1D6h), 10203h, 4050607h,	8090A0Bh, 2 dup(0C0D0E0Fh)
		dd 8090A0Bh, 4050607h, 10203h
aSha1BlockTrans	db 'SHA1 block transform for x86, CRYPTOGAMS by <appro@openssl.org>',0
_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _OPENSSL_ia32cap_P:near ;	DATA XREF: .text:0000000Ao


		end

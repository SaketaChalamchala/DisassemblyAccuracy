;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	E03CAA7D8838DF6D9F2469466F50BBA5
; Input	CRC32 :	4EC58A41

; File Name   :	C:\compspace\Diff\openssl\obj\sess_id.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
_sess_id_usage	dd offset ??_C@_0BF@BDMGAIEO@usage?3?5sess_id?5args?6?$AA@
					; DATA XREF: _sess_id_main:$bad$114r
					; _sess_id_main+374o
					; "usage: sess_id args\n"
		dd offset ??_C@_01EEMJAFIK@?6?$AA@ ; `string'
		dd offset ??_C@_0DM@PHNHJNIF@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@ ; " -inform arg     - input format -	defau"...
		dd offset ??_C@_0DA@KKNGHCLN@?5?9outform?5arg?5?5?5?5?9?5output?5format@ ; " -outform arg    - output format - defa"...
		dd offset ??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@ ; " -in arg	     - input file - default"...
		dd offset ??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@ ; " -out	arg	   - output file - defaul"...
		dd offset ??_C@_0DB@BENOOIM@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5ssl?5ses@ ; " -text	   - print ssl session id"...
		dd offset ??_C@_0CI@KMODPHFL@?5?9cert?5?5?5?5?5?5?5?5?5?5?5?9?5output?5certif@ ; " -cert	   - output certificate	\"...
		dd offset ??_C@_0CC@CIPJOIHG@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5CRL?5output@ ; " -noout	   - no	CRL output\n"
		dd offset ??_C@_0CP@IBKOLAJP@?5?9context?5arg?5?5?5?5?9?5set?5the?5sessi@ ; " -context arg    -	set the	session	ID c"...
		dd 0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
; COMDAT (pick any)
		public ??_C@_0BF@BDMGAIEO@usage?3?5sess_id?5args?6?$AA@
; `string'
??_C@_0BF@BDMGAIEO@usage?3?5sess_id?5args?6?$AA@ db 'usage: sess_id args',0Ah,0
					; DATA XREF: .data:_sess_id_usageo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
; COMDAT (pick any)
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah, 0	; DATA XREF: .data:00000004o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
; COMDAT (pick any)
		public ??_C@_0DM@PHNHJNIF@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@
; `string'
??_C@_0DM@PHNHJNIF@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@ db ' -inform arg     - input format - default PEM (DER or PEM)',0Ah,0
					; DATA XREF: .data:00000008o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
; COMDAT (pick any)
		public ??_C@_0DA@KKNGHCLN@?5?9outform?5arg?5?5?5?5?9?5output?5format@
; `string'
??_C@_0DA@KKNGHCLN@?5?9outform?5arg?5?5?5?5?9?5output?5format@ db ' -outform arg    - output format - default PEM',0Ah,0
					; DATA XREF: .data:0000000Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
; COMDAT (pick any)
		public ??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@
; `string'
??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@ db ' -in arg         - input file - default stdin',0Ah,0
					; DATA XREF: .data:00000010o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
; COMDAT (pick any)
		public ??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@
; `string'
??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@ db	' -out arg        - output file - default stdout',0Ah,0
					; DATA XREF: .data:00000014o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 118h
; COMDAT (pick any)
		public ??_C@_0DB@BENOOIM@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5ssl?5ses@
; `string'
??_C@_0DB@BENOOIM@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5ssl?5ses@ db	' -text           - print ssl session id details',0Ah,0
					; DATA XREF: .data:00000018o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14Ch
; COMDAT (pick any)
		public ??_C@_0CI@KMODPHFL@?5?9cert?5?5?5?5?5?5?5?5?5?5?5?9?5output?5certif@
; `string'
??_C@_0CI@KMODPHFL@?5?9cert?5?5?5?5?5?5?5?5?5?5?5?9?5output?5certif@ db	' -cert           - output certificate ',0Ah,0
					; DATA XREF: .data:0000001Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 174h
; COMDAT (pick any)
		public ??_C@_0CC@CIPJOIHG@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5CRL?5output@
; `string'
??_C@_0CC@CIPJOIHG@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5CRL?5output@ db	' -noout          - no CRL output',0Ah,0
					; DATA XREF: .data:00000020o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 198h
; COMDAT (pick any)
		public ??_C@_0CP@IBKOLAJP@?5?9context?5arg?5?5?5?5?9?5set?5the?5sessi@
; `string'
??_C@_0CP@IBKOLAJP@?5?9context?5arg?5?5?5?5?9?5set?5the?5sessi@	db ' -context arg    - set the session ID context',0Ah,0
					; DATA XREF: .data:00000024o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1C8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl load_sess_id(char	*ErrMsg, int)
_load_sess_id	proc near		; CODE XREF: _sess_id_main+2F1p

ErrMsg		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	edi
		xor	edi, edi
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	esi, eax
		add	esp, 4
		test	esi, esi
		jnz	short loc_1F3
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		mov	eax, edi
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_1F3:				; CODE XREF: _load_sess_id+16j
		push	ebx
		mov	ebx, [esp+0Ch+ErrMsg]
		test	ebx, ebx
		jnz	short loc_22D
		push	ebx
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	ebx
		push	6Ah ; 'j'
		push	esi
		call	_BIO_ctrl
		add	esp, 14h

loc_210:				; CODE XREF: _load_sess_id+75j
		mov	eax, [esp+0Ch+arg_4]
		cmp	eax, 1
		jnz	short loc_258
		push	0
		push	esi
		push	offset _d2i_SSL_SESSION
		push	offset _SSL_SESSION_new
		call	_ASN1_d2i_bio
		jmp	short loc_269
; ---------------------------------------------------------------------------

loc_22D:				; CODE XREF: _load_sess_id+32j
		push	ebx
		push	3
		push	6Ch ; 'l'
		push	esi
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_210
		push	ebx		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		push	esi
		call	_BIO_free
		add	esp, 4
		mov	eax, edi
		pop	ebx
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_258:				; CODE XREF: _load_sess_id+4Fj
		cmp	eax, 3
		jnz	short loc_29F
		push	0
		push	0
		push	0
		push	esi
		call	_PEM_read_bio_SSL_SESSION

loc_269:				; CODE XREF: _load_sess_id+63j
		mov	edi, eax
		add	esp, 10h
		test	edi, edi
		jnz	short $end$16
		push	offset ??_C@_0BM@EEGJLEKP@unable?5to?5load?5SSL_SESSION?6?$AA@ ; "unable to load SSL_SESSION\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		push	esi
		call	_BIO_free
		add	esp, 4
		mov	eax, edi
		pop	ebx
		pop	edi
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_29F:				; CODE XREF: _load_sess_id+93j
		push	offset ??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@ ; "bad	input format specified for input cr"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

$end$16:				; CODE XREF: _load_sess_id+A8j
		push	esi
		call	_BIO_free
		add	esp, 4
		mov	eax, edi
		pop	ebx
		pop	edi
		pop	esi
		retn
_load_sess_id	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _sess_id_main
_sess_id_main	proc near

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
ErrMsg		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 24h ; '$'
		call	__chkstk
		push	ebx
		push	ebp
		push	esi
		xor	esi, esi
		mov	[esp+30h+var_4], 1
		push	edi
		mov	[esp+34h+var_14], esi
		mov	[esp+34h+ErrMsg], esi
		mov	[esp+34h+var_C], esi
		mov	[esp+34h+var_24], esi
		mov	[esp+34h+var_1C], esi
		mov	[esp+34h+var_20], esi
		cmp	dword ptr ds:_bio_err, esi
		jnz	short loc_32E
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		add	esp, 4
		mov	dword ptr ds:_bio_err, eax
		test	eax, eax
		jz	short loc_32E
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	10h
		push	6Ah ; 'j'
		push	dword ptr ds:_bio_err
		call	_BIO_ctrl
		add	esp, 14h

loc_32E:				; CODE XREF: _sess_id_main+36j
					; _sess_id_main+4Dj
		mov	edi, [esp+34h+arg_0]
		xor	ebp, ebp
		mov	ebx, [esp+34h+arg_4]
		dec	edi
		add	ebx, 4
		mov	[esp+34h+var_10], 3
		mov	[esp+34h+var_18], 3
		cmp	edi, 1
		jl	loc_5AB

loc_355:				; CODE XREF: _sess_id_main+2DDj
		mov	esi, [ebx]
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_364:				; CODE XREF: _sess_id_main+BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_384
		test	dl, dl
		jz	short loc_380
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_384
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_364

loc_380:				; CODE XREF: _sess_id_main+A8j
		xor	eax, eax
		jmp	short loc_389
; ---------------------------------------------------------------------------

loc_384:				; CODE XREF: _sess_id_main+A4j
					; _sess_id_main+B0j
		sbb	eax, eax
		or	eax, 1

loc_389:				; CODE XREF: _sess_id_main+BEj
		test	eax, eax
		jnz	short loc_3AE
		dec	edi
		cmp	edi, 1
		jl	$bad$114
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+34h+var_10], eax
		jmp	loc_59A
; ---------------------------------------------------------------------------

loc_3AE:				; CODE XREF: _sess_id_main+C7j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, esi

loc_3B5:				; CODE XREF: _sess_id_main+10Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3D5
		test	dl, dl
		jz	short loc_3D1
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3D5
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3B5

loc_3D1:				; CODE XREF: _sess_id_main+F9j
		xor	eax, eax
		jmp	short loc_3DA
; ---------------------------------------------------------------------------

loc_3D5:				; CODE XREF: _sess_id_main+F5j
					; _sess_id_main+101j
		sbb	eax, eax
		or	eax, 1

loc_3DA:				; CODE XREF: _sess_id_main+10Fj
		test	eax, eax
		jnz	short loc_3FF
		dec	edi
		cmp	edi, 1
		jl	$bad$114
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+34h+var_18], eax
		jmp	loc_59A
; ---------------------------------------------------------------------------

loc_3FF:				; CODE XREF: _sess_id_main+118j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, esi

loc_406:				; CODE XREF: _sess_id_main+15Cj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_426
		test	dl, dl
		jz	short loc_422
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_426
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_406

loc_422:				; CODE XREF: _sess_id_main+14Aj
		xor	eax, eax
		jmp	short loc_42B
; ---------------------------------------------------------------------------

loc_426:				; CODE XREF: _sess_id_main+146j
					; _sess_id_main+152j
		sbb	eax, eax
		or	eax, 1

loc_42B:				; CODE XREF: _sess_id_main+160j
		test	eax, eax
		jnz	short loc_448
		dec	edi
		cmp	edi, 1
		jl	$bad$114
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+34h+var_14], edx
		jmp	loc_59A
; ---------------------------------------------------------------------------

loc_448:				; CODE XREF: _sess_id_main+169j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_454:				; CODE XREF: _sess_id_main+1AAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_474
		test	dl, dl
		jz	short loc_470
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_474
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_454

loc_470:				; CODE XREF: _sess_id_main+198j
		xor	eax, eax
		jmp	short loc_479
; ---------------------------------------------------------------------------

loc_474:				; CODE XREF: _sess_id_main+194j
					; _sess_id_main+1A0j
		sbb	eax, eax
		or	eax, 1

loc_479:				; CODE XREF: _sess_id_main+1AEj
		test	eax, eax
		jnz	short loc_496
		dec	edi
		cmp	edi, 1
		jl	$bad$114
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+34h+ErrMsg], edx
		jmp	loc_59A
; ---------------------------------------------------------------------------

loc_496:				; CODE XREF: _sess_id_main+1B7j
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_4A4:				; CODE XREF: _sess_id_main+1FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4C4
		test	dl, dl
		jz	short loc_4C0
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4C4
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4A4

loc_4C0:				; CODE XREF: _sess_id_main+1E8j
		xor	eax, eax
		jmp	short loc_4C9
; ---------------------------------------------------------------------------

loc_4C4:				; CODE XREF: _sess_id_main+1E4j
					; _sess_id_main+1F0j
		sbb	eax, eax
		or	eax, 1

loc_4C9:				; CODE XREF: _sess_id_main+1FEj
		test	eax, eax
		jnz	short loc_4D7
		inc	ebp
		mov	[esp+34h+var_20], ebp
		jmp	loc_59A
; ---------------------------------------------------------------------------

loc_4D7:				; CODE XREF: _sess_id_main+207j
		mov	ecx, offset ??_C@_05DLEDECNE@?9cert?$AA@ ; "-cert"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_4E4:				; CODE XREF: _sess_id_main+23Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_504
		test	dl, dl
		jz	short loc_500
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_504
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4E4

loc_500:				; CODE XREF: _sess_id_main+228j
		xor	eax, eax
		jmp	short loc_509
; ---------------------------------------------------------------------------

loc_504:				; CODE XREF: _sess_id_main+224j
					; _sess_id_main+230j
		sbb	eax, eax
		or	eax, 1

loc_509:				; CODE XREF: _sess_id_main+23Ej
		test	eax, eax
		jnz	short loc_517
		inc	ebp
		mov	[esp+34h+var_24], ebp
		jmp	loc_59A
; ---------------------------------------------------------------------------

loc_517:				; CODE XREF: _sess_id_main+247j
		mov	ecx, offset ??_C@_06JPEJAHHH@?9noout?$AA@ ; "-noout"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_524:				; CODE XREF: _sess_id_main+27Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_544
		test	dl, dl
		jz	short loc_540
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_544
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_524

loc_540:				; CODE XREF: _sess_id_main+268j
		xor	eax, eax
		jmp	short loc_549
; ---------------------------------------------------------------------------

loc_544:				; CODE XREF: _sess_id_main+264j
					; _sess_id_main+270j
		sbb	eax, eax
		or	eax, 1

loc_549:				; CODE XREF: _sess_id_main+27Ej
		test	eax, eax
		jnz	short loc_554
		inc	ebp
		mov	[esp+34h+var_1C], ebp
		jmp	short loc_59A
; ---------------------------------------------------------------------------

loc_554:				; CODE XREF: _sess_id_main+287j
		mov	eax, offset ??_C@_08GKDHLPPP@?9context?$AA@ ; "-context"

loc_559:				; CODE XREF: _sess_id_main+2AFj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_579
		test	cl, cl
		jz	short loc_575
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_579
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_559

loc_575:				; CODE XREF: _sess_id_main+29Dj
		xor	eax, eax
		jmp	short loc_57E
; ---------------------------------------------------------------------------

loc_579:				; CODE XREF: _sess_id_main+299j
					; _sess_id_main+2A5j
		sbb	eax, eax
		or	eax, 1

loc_57E:				; CODE XREF: _sess_id_main+2B3j
		test	eax, eax
		jnz	loc_61E
		dec	edi
		cmp	edi, 1
		jl	$bad$114
		mov	edx, [ebx+4]
		add	ebx, 4
		mov	[esp+34h+var_C], edx

loc_59A:				; CODE XREF: _sess_id_main+E5j
					; _sess_id_main+136j ...
		dec	edi
		add	ebx, 4
		cmp	edi, 1
		jge	loc_355
		mov	esi, [esp+34h+var_14]

loc_5AB:				; CODE XREF: _sess_id_main+8Bj
		call	_ERR_load_crypto_strings
		push	[esp+34h+var_10] ; int
		push	esi		; ErrMsg
		call	_load_sess_id
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jz	loc_662
		push	esi
		call	_SSL_SESSION_get0_peer
		mov	ebx, [esp+38h+var_C]
		add	esp, 4
		mov	edi, eax
		test	ebx, ebx
		jz	loc_67A
		mov	ecx, ebx
		lea	edx, [ecx+1]
		nop

loc_5E4:				; CODE XREF: _sess_id_main+325j
		mov	al, [ecx]
		inc	ecx
		test	al, al
		jnz	short loc_5E4
		sub	ecx, edx
		cmp	ecx, 20h ; ' '
		jbe	loc_66F
		push	offset ??_C@_0BC@BDOGDMMH@Context?5too?5long?6?$AA@ ; "Context too long\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		push	esi
		call	_SSL_SESSION_free
		mov	eax, [esp+38h+var_4]
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 24h
		retn
; ---------------------------------------------------------------------------

loc_61E:				; CODE XREF: _sess_id_main+2BCj
		push	dword ptr [ebx]
		push	offset ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@	; "unknown option %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

$bad$114:				; CODE XREF: _sess_id_main+CDj
					; _sess_id_main+11Ej ...
		mov	eax, _sess_id_usage
		mov	esi, offset _sess_id_usage
		test	eax, eax
		jz	short loc_662
		nop	dword ptr [eax]

loc_644:				; CODE XREF: _sess_id_main+39Cj
		push	eax
		push	offset ??_C@_02DKCKIIND@?$CFs?$AA@ ; `string'
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	eax, [esi+4]
		lea	esi, [esi+4]
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_644

loc_662:				; CODE XREF: _sess_id_main+2FDj
					; _sess_id_main+37Bj
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, 1
		pop	ebx
		add	esp, 24h
		retn
; ---------------------------------------------------------------------------

loc_66F:				; CODE XREF: _sess_id_main+32Cj
		push	ecx
		push	ebx
		push	esi
		call	_SSL_SESSION_set1_id_context
		add	esp, 0Ch

loc_67A:				; CODE XREF: _sess_id_main+314j
		cmp	[esp+34h+var_1C], 0
		jz	short loc_68C
		cmp	[esp+34h+var_20], 0
		jz	loc_73A

loc_68C:				; CODE XREF: _sess_id_main+3BBj
		call	_BIO_s_file
		push	eax
		call	_BIO_new
		mov	ebx, eax
		add	esp, 4
		test	ebx, ebx
		jnz	short loc_6C3
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		push	esi
		call	_SSL_SESSION_free
		mov	eax, [esp+38h+var_4]
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 24h
		retn
; ---------------------------------------------------------------------------

loc_6C3:				; CODE XREF: _sess_id_main+3DAj
		mov	ebp, [esp+34h+ErrMsg]
		test	ebp, ebp
		jnz	short loc_70D
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		push	eax
		push	ebp
		push	6Ah ; 'j'
		push	ebx
		call	_BIO_ctrl
		add	esp, 14h

loc_6E0:				; CODE XREF: _sess_id_main+459j
		cmp	[esp+34h+var_20], 0
		jz	short loc_73C
		push	esi
		push	ebx
		call	_SSL_SESSION_print
		mov	eax, [esp+3Ch+var_24]
		add	esp, 8
		test	eax, eax
		jz	short loc_740
		test	edi, edi
		jnz	short loc_72E
		push	offset ??_C@_0BI@HMDHIFAM@No?5certificate?5present?6?$AA@ ; "No	certificate present\n"
		push	ebx
		call	_BIO_puts
		add	esp, 8
		jmp	short loc_73C
; ---------------------------------------------------------------------------

loc_70D:				; CODE XREF: _sess_id_main+405j
		push	ebp
		push	5
		push	6Ch ; 'l'
		push	ebx
		call	_BIO_ctrl
		add	esp, 10h
		test	eax, eax
		jg	short loc_6E0
		push	ebp		; ErrMsg
		call	dword ptr ds:__imp__perror
		add	esp, 4
		jmp	$end$115
; ---------------------------------------------------------------------------

loc_72E:				; CODE XREF: _sess_id_main+437j
		push	edi
		push	ebx
		call	_X509_print
		add	esp, 8
		jmp	short loc_73C
; ---------------------------------------------------------------------------

loc_73A:				; CODE XREF: _sess_id_main+3C2j
		xor	ebx, ebx

loc_73C:				; CODE XREF: _sess_id_main+421j
					; _sess_id_main+447j ...
		mov	eax, [esp+34h+var_24]

loc_740:				; CODE XREF: _sess_id_main+433j
		cmp	[esp+34h+var_1C], 0
		jnz	loc_7E4
		test	eax, eax
		jnz	short loc_7A6
		mov	eax, [esp+34h+var_18]
		cmp	eax, 1
		jnz	short loc_769
		push	esi
		push	ebx
		push	offset _i2d_SSL_SESSION
		call	_ASN1_i2d_bio
		add	esp, 0Ch
		jmp	short loc_778
; ---------------------------------------------------------------------------

loc_769:				; CODE XREF: _sess_id_main+492j
		cmp	eax, 3
		jnz	short loc_791
		push	esi
		push	ebx
		call	_PEM_write_bio_SSL_SESSION
		add	esp, 8

loc_778:				; CODE XREF: _sess_id_main+4A3j
		test	eax, eax
		jnz	short loc_7E4
		push	offset ??_C@_0BN@GDLCILEA@unable?5to?5write?5SSL_SESSION?6?$AA@	; "unable to write SSL_SESSION\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$115
; ---------------------------------------------------------------------------

loc_791:				; CODE XREF: _sess_id_main+4A8j
					; _sess_id_main+4FBj
		push	offset ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; "bad	output format specified	for outfile"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$115
; ---------------------------------------------------------------------------

loc_7A6:				; CODE XREF: _sess_id_main+489j
		test	edi, edi
		jz	short loc_7E4
		mov	eax, [esp+34h+var_18]
		cmp	eax, 1
		jnz	short loc_7BC
		push	edi
		push	ebx
		call	_i2d_X509_bio
		jmp	short loc_7C8
; ---------------------------------------------------------------------------

loc_7BC:				; CODE XREF: _sess_id_main+4EDj
		cmp	eax, 3
		jnz	short loc_791
		push	edi
		push	ebx
		call	_PEM_write_bio_X509

loc_7C8:				; CODE XREF: _sess_id_main+4F6j
		add	esp, 8
		test	eax, eax
		jnz	short loc_7E4
		push	offset ??_C@_0BG@BFGABFOE@unable?5to?5write?5X509?6?$AA@ ; "unable to write X509\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	short $end$115
; ---------------------------------------------------------------------------

loc_7E4:				; CODE XREF: _sess_id_main+481j
					; _sess_id_main+4B6j ...
		mov	[esp+34h+var_4], 0

$end$115:				; CODE XREF: _sess_id_main+465j
					; _sess_id_main+4CBj ...
		test	ebx, ebx
		jz	short loc_7F9
		push	ebx
		call	_BIO_free_all
		add	esp, 4

loc_7F9:				; CODE XREF: _sess_id_main+52Aj
		push	esi
		call	_SSL_SESSION_free
		mov	eax, [esp+38h+var_4]
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 24h
		retn
_sess_id_main	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 810h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _sess_id_main+93o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 818h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _sess_id_main:loc_3AEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 824h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _sess_id_main:loc_3FFo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 828h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _sess_id_main:loc_448o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 830h
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _sess_id_main:loc_496o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 838h
; COMDAT (pick any)
		public ??_C@_05DLEDECNE@?9cert?$AA@
; `string'
??_C@_05DLEDECNE@?9cert?$AA@ db	'-cert',0 ; DATA XREF: _sess_id_main:loc_4D7o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 840h
; COMDAT (pick any)
		public ??_C@_06JPEJAHHH@?9noout?$AA@
; `string'
??_C@_06JPEJAHHH@?9noout?$AA@ db '-noout',0 ; DATA XREF: _sess_id_main:loc_517o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 848h
; COMDAT (pick any)
		public ??_C@_08GKDHLPPP@?9context?$AA@
; `string'
??_C@_08GKDHLPPP@?9context?$AA@	db '-context',0 ; DATA XREF: _sess_id_main:loc_554o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 854h
; COMDAT (pick any)
		public ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
; `string'
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ db 'unknown option %s',0Ah,0
					; DATA XREF: _sess_id_main+35Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 868h
; COMDAT (pick any)
		public ??_C@_02DKCKIIND@?$CFs?$AA@
; `string'
??_C@_02DKCKIIND@?$CFs?$AA@ db 25h, 73h, 0 ; DATA XREF:	_sess_id_main+381o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 86Ch
; COMDAT (pick any)
		public ??_C@_0BC@BDOGDMMH@Context?5too?5long?6?$AA@
; `string'
??_C@_0BC@BDOGDMMH@Context?5too?5long?6?$AA@ db	'Context too long',0Ah,0
					; DATA XREF: _sess_id_main+332o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 880h
; COMDAT (pick any)
		public ??_C@_0BI@HMDHIFAM@No?5certificate?5present?6?$AA@
; `string'
??_C@_0BI@HMDHIFAM@No?5certificate?5present?6?$AA@ db 'No certificate present',0Ah,0
					; DATA XREF: _sess_id_main+439o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 898h
; COMDAT (pick any)
		public ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
; `string'
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ db 'bad output format specified for outfile',0Ah,0
					; DATA XREF: _sess_id_main:loc_791o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8C4h
; COMDAT (pick any)
		public ??_C@_0BN@GDLCILEA@unable?5to?5write?5SSL_SESSION?6?$AA@
; `string'
??_C@_0BN@GDLCILEA@unable?5to?5write?5SSL_SESSION?6?$AA@ db 'unable to write SSL_SESSION',0Ah,0
					; DATA XREF: _sess_id_main+4B8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8E4h
; COMDAT (pick any)
		public ??_C@_0BG@BFGABFOE@unable?5to?5write?5X509?6?$AA@
; `string'
??_C@_0BG@BFGABFOE@unable?5to?5write?5X509?6?$AA@ db 'unable to write X509',0Ah,0
					; DATA XREF: _sess_id_main+50Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8FCh
; COMDAT (pick any)
		public ??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@
; `string'
??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@ db 'bad input format specified for input crl',0Ah,0
					; DATA XREF: _load_sess_id:loc_29Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 928h
; COMDAT (pick any)
		public ??_C@_0BM@EEGJLEKP@unable?5to?5load?5SSL_SESSION?6?$AA@
; `string'
??_C@_0BM@EEGJLEKP@unable?5to?5load?5SSL_SESSION?6?$AA@	db 'unable to load SSL_SESSION',0Ah,0
					; DATA XREF: _load_sess_id+AAo
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _load_sess_id+35p
					; _sess_id_main+51p ...
; void __cdecl _perror(const char *ErrMsg)
		extrn __imp__perror:near ; CODE	XREF: _load_sess_id+78p
					; _sess_id_main+45Cp
					; DATA XREF: ...
		extrn _BIO_s_file:near	; CODE XREF: _load_sess_id+4p
					; _sess_id_main+38p ...
		extrn _BIO_new:near	; CODE XREF: _load_sess_id+Ap
					; _sess_id_main+3Ep ...
		extrn _BIO_free:near	; CODE XREF: _load_sess_id+82p
					; _load_sess_id+C9p ...
		extrn _BIO_puts:near	; CODE XREF: _sess_id_main+43Fp
		extrn _BIO_ctrl:near	; CODE XREF: _load_sess_id+40p
					; _load_sess_id+6Bp ...
		extrn _BIO_free_all:near ; CODE	XREF: _sess_id_main+52Dp
		extrn _BIO_printf:near	; CODE XREF: _load_sess_id+B5p
					; _load_sess_id+E2p ...
		extrn _ASN1_d2i_bio:near ; CODE	XREF: _load_sess_id+5Ep
		extrn _ASN1_i2d_bio:near ; CODE	XREF: _sess_id_main+49Bp
		extrn _i2d_X509_bio:near ; CODE	XREF: _sess_id_main+4F1p
		extrn _X509_print:near	; CODE XREF: _sess_id_main+46Cp
		extrn _ERR_print_errors:near ; CODE XREF: _load_sess_id+1Ep
					; _load_sess_id+C0p ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _sess_id_main:loc_5ABp
		extrn _str2fmt:near	; CODE XREF: _sess_id_main+D9p
					; _sess_id_main+12Ap
		extrn _PEM_write_bio_X509:near ; CODE XREF: _sess_id_main+4FFp
		extrn _PEM_read_bio_SSL_SESSION:near ; CODE XREF: _load_sess_id+9Cp
		extrn _PEM_write_bio_SSL_SESSION:near ;	CODE XREF: _sess_id_main+4ACp
		extrn _SSL_SESSION_get0_peer:near ; CODE XREF: _sess_id_main+304p
		extrn _SSL_SESSION_set1_id_context:near	; CODE XREF: _sess_id_main+3AEp
		extrn _SSL_SESSION_new:near ; DATA XREF: _load_sess_id+59o
		extrn _SSL_SESSION_print:near ;	CODE XREF: _sess_id_main+425p
		extrn _SSL_SESSION_free:near ; CODE XREF: _sess_id_main+346p
					; _sess_id_main+3EBp ...
		extrn _i2d_SSL_SESSION:near ; DATA XREF: _sess_id_main+496o
		extrn _d2i_SSL_SESSION:near ; DATA XREF: _load_sess_id+54o
		extrn __chkstk:near	; CODE XREF: _sess_id_main+5p
		extrn _bio_err:near	; DATA XREF: _load_sess_id+18r
					; _load_sess_id+AFr ...


		end

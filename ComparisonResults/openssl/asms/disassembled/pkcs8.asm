;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	436EA0A22C4D5C6D1576DE597A5740EC
; Input	CRC32 :	C55FEB14

; File Name   :	C:\compspace\Diff\openssl\obj\pkcs8.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _pkcs8_main
_pkcs8_main	proc near

var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		mov	eax, 80h ; '€'
		call	__chkstk
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, esp
		mov	[esp+80h+var_4], eax
		xor	eax, eax
		push	ebx
		mov	[esp+84h+var_5C], eax
		xor	ebx, ebx
		mov	[esp+84h+var_60], eax
		mov	[esp+84h+var_44], eax
		mov	[esp+84h+var_48], eax
		mov	[esp+84h+var_50], eax
		mov	[esp+84h+var_40], eax
		mov	[esp+84h+var_58], eax
		mov	eax, 800h
		push	ebp
		mov	[esp+88h+var_3C], eax
		xor	ebp, ebp
		xor	eax, eax
		push	esi
		mov	esi, [esp+8Ch+arg_4]
		push	edi
		or	edi, 0FFFFFFFFh
		mov	[esp+90h+var_74], eax
		mov	[esp+90h+var_54], eax
		mov	[esp+90h+var_7C], eax
		mov	[esp+90h+var_78], eax
		mov	[esp+90h+var_68], eax
		mov	[esp+90h+var_64], eax
		mov	[esp+90h+var_4C], eax
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+90h+var_80], edi
		test	eax, eax
		jnz	short loc_93
		push	eax
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	dword ptr ds:_bio_err, eax

loc_93:					; CODE XREF: _pkcs8_main+77j
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_6C6
		mov	[esp+90h+var_70], 3
		mov	[esp+90h+var_6C], 3
		call	_ERR_load_crypto_strings
		call	_OPENSSL_add_all_algorithms_noconf
		lea	edi, [esi+4]

loc_C3:					; CODE XREF: _pkcs8_main+143j
		mov	esi, [edi]
		test	esi, esi
		jz	loc_5A5
		cmp	byte ptr [esi],	2Dh ; '-'
		jnz	loc_5A5
		mov	ecx, offset ??_C@_03DBOPBHJD@?9v2?$AA@ ; `string'
		mov	eax, esi
		nop	dword ptr [eax]

loc_E0:					; CODE XREF: _pkcs8_main+FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_100
		test	dl, dl
		jz	short loc_FC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_100
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_E0

loc_FC:					; CODE XREF: _pkcs8_main+E8j
		xor	eax, eax
		jmp	short loc_105
; ---------------------------------------------------------------------------

loc_100:				; CODE XREF: _pkcs8_main+E4j
					; _pkcs8_main+F0j
		sbb	eax, eax
		or	eax, 1

loc_105:				; CODE XREF: _pkcs8_main+FEj
		test	eax, eax
		jnz	short loc_14E
		cmp	[edi+4], ebp
		jz	short loc_139
		push	dword ptr [edi+4]
		add	edi, 4
		call	_EVP_get_cipherbyname
		add	esp, 4
		mov	[esp+90h+var_58], eax
		test	eax, eax
		jnz	short loc_13E
		push	dword ptr [edi]
		push	offset ??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@	; "Unknown cipher %s\n"

loc_12B:				; CODE XREF: _pkcs8_main+1A2j
					; _pkcs8_main+211j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

loc_139:				; CODE XREF: _pkcs8_main+10Cj
					; _pkcs8_main+181j ...
		mov	ebx, 1

loc_13E:				; CODE XREF: _pkcs8_main+122j
					; _pkcs8_main+199j ...
		add	edi, 4
		test	ebx, ebx
		jz	loc_C3
		jmp	$bad$207
; ---------------------------------------------------------------------------

loc_14E:				; CODE XREF: _pkcs8_main+107j
		mov	ecx, offset ??_C@_03BKMCEEFA@?9v1?$AA@ ; `string'
		mov	eax, esi

loc_155:				; CODE XREF: _pkcs8_main+16Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_175
		test	dl, dl
		jz	short loc_171
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_175
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_155

loc_171:				; CODE XREF: _pkcs8_main+15Dj
		xor	eax, eax
		jmp	short loc_17A
; ---------------------------------------------------------------------------

loc_175:				; CODE XREF: _pkcs8_main+159j
					; _pkcs8_main+165j
		sbb	eax, eax
		or	eax, 1

loc_17A:				; CODE XREF: _pkcs8_main+173j
		test	eax, eax
		jnz	short loc_1A4
		cmp	[edi+4], ebp
		jz	short loc_139
		push	dword ptr [edi+4]
		add	edi, 4
		call	_OBJ_txt2nid
		mov	esi, eax
		add	esp, 4
		mov	[esp+90h+var_80], esi
		test	esi, esi
		jnz	short loc_13E
		push	dword ptr [edi]
		push	offset ??_C@_0BK@MPHGMBPG@Unknown?5PBE?5algorithm?5?$CFs?6?$AA@	; "Unknown PBE algorithm %s\n"
		jmp	short loc_12B
; ---------------------------------------------------------------------------

loc_1A4:				; CODE XREF: _pkcs8_main+17Cj
		mov	ecx, offset ??_C@_06MFIOKNGE@?9v2prf?$AA@ ; "-v2prf"
		mov	eax, esi
		nop	dword ptr [eax+eax+00h]

loc_1B0:				; CODE XREF: _pkcs8_main+1CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1D0
		test	dl, dl
		jz	short loc_1CC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1D0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1B0

loc_1CC:				; CODE XREF: _pkcs8_main+1B8j
		xor	eax, eax
		jmp	short loc_1D5
; ---------------------------------------------------------------------------

loc_1D0:				; CODE XREF: _pkcs8_main+1B4j
					; _pkcs8_main+1C0j
		sbb	eax, eax
		or	eax, 1

loc_1D5:				; CODE XREF: _pkcs8_main+1CEj
		test	eax, eax
		jnz	short loc_216
		cmp	[edi+4], ebp
		jz	loc_139
		push	dword ptr [edi+4]
		add	edi, 4
		call	_OBJ_txt2nid
		push	0
		push	0
		push	0
		push	eax
		push	1
		mov	[esp+0A8h+var_80], eax
		call	_EVP_PBE_find
		add	esp, 18h
		test	eax, eax
		jnz	loc_13E
		push	dword ptr [edi]
		push	offset ??_C@_0BK@PBOPOMHJ@Unknown?5PRF?5algorithm?5?$CFs?6?$AA@	; "Unknown PRF algorithm %s\n"
		jmp	loc_12B
; ---------------------------------------------------------------------------

loc_216:				; CODE XREF: _pkcs8_main+1D7j
		mov	ecx, offset ??_C@_07CGGPPMGB@?9inform?$AA@ ; "-inform"
		mov	eax, esi
		nop	dword ptr [eax]

loc_220:				; CODE XREF: _pkcs8_main+23Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_240
		test	dl, dl
		jz	short loc_23C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_240
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_220

loc_23C:				; CODE XREF: _pkcs8_main+228j
		xor	eax, eax
		jmp	short loc_245
; ---------------------------------------------------------------------------

loc_240:				; CODE XREF: _pkcs8_main+224j
					; _pkcs8_main+230j
		sbb	eax, eax
		or	eax, 1

loc_245:				; CODE XREF: _pkcs8_main+23Ej
		test	eax, eax
		jnz	short loc_269
		cmp	[edi+4], ebp
		jz	loc_139
		push	dword ptr [edi+4]
		add	edi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+90h+var_70], eax
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_269:				; CODE XREF: _pkcs8_main+247j
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, esi

loc_270:				; CODE XREF: _pkcs8_main+28Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_290
		test	dl, dl
		jz	short loc_28C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_290
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_270

loc_28C:				; CODE XREF: _pkcs8_main+278j
		xor	eax, eax
		jmp	short loc_295
; ---------------------------------------------------------------------------

loc_290:				; CODE XREF: _pkcs8_main+274j
					; _pkcs8_main+280j
		sbb	eax, eax
		or	eax, 1

loc_295:				; CODE XREF: _pkcs8_main+28Ej
		test	eax, eax
		jnz	short loc_2B9
		cmp	[edi+4], ebp
		jz	loc_139
		push	dword ptr [edi+4]
		add	edi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+90h+var_6C], eax
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_2B9:				; CODE XREF: _pkcs8_main+297j
		mov	ecx, offset ??_C@_06HPAKOPDA@?9topk8?$AA@ ; "-topk8"
		mov	eax, esi

loc_2C0:				; CODE XREF: _pkcs8_main+2DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2E0
		test	dl, dl
		jz	short loc_2DC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2E0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2C0

loc_2DC:				; CODE XREF: _pkcs8_main+2C8j
		xor	eax, eax
		jmp	short loc_2E5
; ---------------------------------------------------------------------------

loc_2E0:				; CODE XREF: _pkcs8_main+2C4j
					; _pkcs8_main+2D0j
		sbb	eax, eax
		or	eax, 1

loc_2E5:				; CODE XREF: _pkcs8_main+2DEj
		test	eax, eax
		jnz	short loc_2F6
		mov	[esp+90h+var_40], 1
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_2F6:				; CODE XREF: _pkcs8_main+2E7j
		mov	ecx, offset ??_C@_07PJOPONGO@?9noiter?$AA@ ; "-noiter"
		mov	eax, esi
		nop	dword ptr [eax]

loc_300:				; CODE XREF: _pkcs8_main+31Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_320
		test	dl, dl
		jz	short loc_31C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_320
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_300

loc_31C:				; CODE XREF: _pkcs8_main+308j
		xor	eax, eax
		jmp	short loc_325
; ---------------------------------------------------------------------------

loc_320:				; CODE XREF: _pkcs8_main+304j
					; _pkcs8_main+310j
		sbb	eax, eax
		or	eax, 1

loc_325:				; CODE XREF: _pkcs8_main+31Ej
		test	eax, eax
		jnz	short loc_336
		mov	[esp+90h+var_3C], 1
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_336:				; CODE XREF: _pkcs8_main+327j
		mov	ecx, offset ??_C@_08NGDAPFMP@?9nocrypt?$AA@ ; "-nocrypt"
		mov	eax, esi
		nop	dword ptr [eax]

loc_340:				; CODE XREF: _pkcs8_main+35Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_360
		test	dl, dl
		jz	short loc_35C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_360
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_340

loc_35C:				; CODE XREF: _pkcs8_main+348j
		xor	eax, eax
		jmp	short loc_365
; ---------------------------------------------------------------------------

loc_360:				; CODE XREF: _pkcs8_main+344j
					; _pkcs8_main+350j
		sbb	eax, eax
		or	eax, 1

loc_365:				; CODE XREF: _pkcs8_main+35Ej
		test	eax, eax
		jnz	short loc_376
		mov	[esp+90h+var_54], 1
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_376:				; CODE XREF: _pkcs8_main+367j
		mov	ecx, offset ??_C@_06IHOCNILF@?9nooct?$AA@ ; "-nooct"
		mov	eax, esi
		nop	dword ptr [eax]

loc_380:				; CODE XREF: _pkcs8_main+39Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3A0
		test	dl, dl
		jz	short loc_39C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3A0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_380

loc_39C:				; CODE XREF: _pkcs8_main+388j
		xor	eax, eax
		jmp	short loc_3A5
; ---------------------------------------------------------------------------

loc_3A0:				; CODE XREF: _pkcs8_main+384j
					; _pkcs8_main+390j
		sbb	eax, eax
		or	eax, 1

loc_3A5:				; CODE XREF: _pkcs8_main+39Ej
		test	eax, eax
		jnz	short loc_3B6
		mov	[esp+90h+var_74], 1
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_3B6:				; CODE XREF: _pkcs8_main+3A7j
		mov	ecx, offset ??_C@_05LCJCOEDD@?9nsdb?$AA@ ; "-nsdb"
		mov	eax, esi
		nop	dword ptr [eax]

loc_3C0:				; CODE XREF: _pkcs8_main+3DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3E0
		test	dl, dl
		jz	short loc_3DC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3E0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3C0

loc_3DC:				; CODE XREF: _pkcs8_main+3C8j
		xor	eax, eax
		jmp	short loc_3E5
; ---------------------------------------------------------------------------

loc_3E0:				; CODE XREF: _pkcs8_main+3C4j
					; _pkcs8_main+3D0j
		sbb	eax, eax
		or	eax, 1

loc_3E5:				; CODE XREF: _pkcs8_main+3DEj
		test	eax, eax
		jnz	short loc_3F6
		mov	[esp+90h+var_74], 3
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_3F6:				; CODE XREF: _pkcs8_main+3E7j
		mov	ecx, offset ??_C@_06CLMAMNCI@?9embed?$AA@ ; "-embed"
		mov	eax, esi
		nop	dword ptr [eax]

loc_400:				; CODE XREF: _pkcs8_main+41Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_420
		test	dl, dl
		jz	short loc_41C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_420
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_400

loc_41C:				; CODE XREF: _pkcs8_main+408j
		xor	eax, eax
		jmp	short loc_425
; ---------------------------------------------------------------------------

loc_420:				; CODE XREF: _pkcs8_main+404j
					; _pkcs8_main+410j
		sbb	eax, eax
		or	eax, 1

loc_425:				; CODE XREF: _pkcs8_main+41Ej
		test	eax, eax
		jnz	short loc_436
		mov	[esp+90h+var_74], 2
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_436:				; CODE XREF: _pkcs8_main+427j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, esi
		nop	dword ptr [eax]

loc_440:				; CODE XREF: _pkcs8_main+45Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_460
		test	dl, dl
		jz	short loc_45C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_460
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_440

loc_45C:				; CODE XREF: _pkcs8_main+448j
		xor	eax, eax
		jmp	short loc_465
; ---------------------------------------------------------------------------

loc_460:				; CODE XREF: _pkcs8_main+444j
					; _pkcs8_main+450j
		sbb	eax, eax
		or	eax, 1

loc_465:				; CODE XREF: _pkcs8_main+45Ej
		test	eax, eax
		jnz	short loc_47F
		add	edi, 4
		cmp	[edi], ebp
		jz	$bad$207
		mov	eax, [edi]
		mov	[esp+90h+var_44], eax
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_47F:				; CODE XREF: _pkcs8_main+467j
		mov	ecx, offset ??_C@_08KCDBEMAI@?9passout?$AA@ ; "-passout"
		mov	eax, esi

loc_486:				; CODE XREF: _pkcs8_main+4A0j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4A6
		test	dl, dl
		jz	short loc_4A2
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4A6
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_486

loc_4A2:				; CODE XREF: _pkcs8_main+48Ej
		xor	eax, eax
		jmp	short loc_4AB
; ---------------------------------------------------------------------------

loc_4A6:				; CODE XREF: _pkcs8_main+48Aj
					; _pkcs8_main+496j
		sbb	eax, eax
		or	eax, 1

loc_4AB:				; CODE XREF: _pkcs8_main+4A4j
		test	eax, eax
		jnz	short loc_4C5
		add	edi, 4
		cmp	[edi], ebp
		jz	$bad$207
		mov	eax, [edi]
		mov	[esp+90h+var_48], eax
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_4C5:				; CODE XREF: _pkcs8_main+4ADj
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi
		nop	dword ptr [eax+00h]

loc_4D0:				; CODE XREF: _pkcs8_main+4EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4F0
		test	dl, dl
		jz	short loc_4EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4D0

loc_4EC:				; CODE XREF: _pkcs8_main+4D8j
		xor	eax, eax
		jmp	short loc_4F5
; ---------------------------------------------------------------------------

loc_4F0:				; CODE XREF: _pkcs8_main+4D4j
					; _pkcs8_main+4E0j
		sbb	eax, eax
		or	eax, 1

loc_4F5:				; CODE XREF: _pkcs8_main+4EEj
		test	eax, eax
		jnz	short loc_50F
		add	edi, 4
		cmp	[edi], ebp
		jz	$bad$207
		mov	eax, [edi]
		mov	[esp+90h+var_4C], eax
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_50F:				; CODE XREF: _pkcs8_main+4F7j
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; "-in"
		mov	eax, esi

loc_516:				; CODE XREF: _pkcs8_main+530j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_536
		test	dl, dl
		jz	short loc_532
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_536
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_516

loc_532:				; CODE XREF: _pkcs8_main+51Ej
		xor	eax, eax
		jmp	short loc_53B
; ---------------------------------------------------------------------------

loc_536:				; CODE XREF: _pkcs8_main+51Aj
					; _pkcs8_main+526j
		sbb	eax, eax
		or	eax, 1

loc_53B:				; CODE XREF: _pkcs8_main+534j
		test	eax, eax
		jnz	short loc_557
		cmp	[edi+4], ebp
		jz	loc_139
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+90h+var_5C], eax
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_557:				; CODE XREF: _pkcs8_main+53Dj
		mov	eax, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		nop	dword ptr [eax+00h]

loc_560:				; CODE XREF: _pkcs8_main+57Aj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_580
		test	cl, cl
		jz	short loc_57C
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_580
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_560

loc_57C:				; CODE XREF: _pkcs8_main+568j
		xor	eax, eax
		jmp	short loc_585
; ---------------------------------------------------------------------------

loc_580:				; CODE XREF: _pkcs8_main+564j
					; _pkcs8_main+570j
		sbb	eax, eax
		or	eax, 1

loc_585:				; CODE XREF: _pkcs8_main+57Ej
		test	eax, eax
		jnz	loc_139
		cmp	[edi+4], ebp
		jz	loc_139
		mov	eax, [edi+4]
		add	edi, 4
		mov	[esp+90h+var_60], eax
		jmp	loc_13E
; ---------------------------------------------------------------------------

loc_5A5:				; CODE XREF: _pkcs8_main+C7j
					; _pkcs8_main+D0j
		test	ebx, ebx
		jz	loc_733

$bad$207:				; CODE XREF: _pkcs8_main+149j
					; _pkcs8_main+46Ej ...
		push	offset ??_C@_0BH@PIAIABFB@Usage?5pkcs8?5?$FLoptions?$FN?6?$AA@ ; "Usage	pkcs8 [options]\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ ; "where options are\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; "-in file	  input	file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@ ; "-inform X	     input format (DER or PE"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@ ;	"-passin arg	 input file pass phrase	"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@ ; "-outform X	    output format (DER or P"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ ; "-out file	  output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@ ; "-passout	arg    output file pass	phrase"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CD@IPFGCCOH@?9topk8?5?5?5?5?5?5?5?5?5?5output?5PKCS8?5fil@ ; "-topk8	    output PKCS8 file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DD@ILPBKGBL@?9nooct?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@ ; "-nooct	      use (nonstandard)	no oc"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0EC@CBHEENHN@?9embed?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@ ; "-embed	      use (nonstandard)	embed"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DK@KHOMOMBC@?9nsdb?5?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@ ; "-nsdb	       use (nonstandard) DSA N"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@BOLAPIHI@?9noiter?5?5?5?5?5?5?5?5?5use?51?5as?5iterati@ ; "-noiter	    use	1 as iteration coun"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DH@JGODPEOL@?9nocrypt?5?5?5?5?5?5?5?5use?5or?5expect?5un@	; "-nocrypt	   use or expect unencrypt"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DC@CGJPEEOJ@?9v2?5alg?5?5?5?5?5?5?5?5?5use?5PKCS?$CD5?5v2?40?5@ ;	"-v2 alg	 use PKCS#5 v2.0 and cip"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DC@IKBNDDNF@?9v1?5obj?5?5?5?5?5?5?5?5?5use?5PKCS?$CD5?5v1?45?5@ ;	"-v1 obj	 use PKCS#5 v1.5 and cip"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ ; " -engine e	      use engine e, possibly"...

loc_6B8:				; CODE XREF: _pkcs8_main+772j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_6C6:				; CODE XREF: _pkcs8_main+A0j
		xor	esi, esi
		xor	edi, edi

loc_6CA:				; CODE XREF: _pkcs8_main+7C6j
					; _pkcs8_main+8A9j ...
		mov	ebx, 1

$end$208:				; CODE XREF: _pkcs8_main+8D3j
					; _pkcs8_main+8F1j ...
		push	esi
		call	_X509_SIG_free
		push	ebp
		call	_PKCS8_PRIV_KEY_INFO_free
		push	[esp+98h+var_78]
		call	_EVP_PKEY_free
		push	[esp+9Ch+var_50]
		call	_BIO_free_all
		push	edi
		call	_BIO_free
		mov	eax, [esp+0A4h+var_68]
		add	esp, 14h
		test	eax, eax
		jz	short loc_707
		push	eax
		call	_CRYPTO_free
		add	esp, 4

loc_707:				; CODE XREF: _pkcs8_main+6FCj
		mov	ecx, [esp+90h+var_64]
		test	ecx, ecx
		jz	short loc_718
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_718:				; CODE XREF: _pkcs8_main+70Dj
		mov	ecx, [esp+90h+var_4]
		mov	eax, ebx
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		xor	ecx, esp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 80h
		retn
; ---------------------------------------------------------------------------

loc_733:				; CODE XREF: _pkcs8_main+5A7j
		mov	eax, [esp+90h+var_4C]
		push	0
		push	eax
		push	dword ptr ds:_bio_err
		call	_setup_engine
		mov	esi, eax
		lea	eax, [esp+9Ch+var_64]
		push	eax
		lea	eax, [esp+0A0h+var_68]
		push	eax
		mov	eax, [esp+0A4h+var_48]
		push	eax
		mov	eax, [esp+0A8h+var_44]
		push	eax
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 20h
		test	eax, eax
		jnz	short loc_777
		push	offset ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; "Error getting passwords\n"
		jmp	loc_6B8
; ---------------------------------------------------------------------------

loc_777:				; CODE XREF: _pkcs8_main+76Bj
		mov	edi, [esp+90h+var_80]
		cmp	edi, 0FFFFFFFFh
		jnz	short loc_78C
		cmp	[esp+90h+var_58], ebp
		mov	eax, 0Ah
		cmovz	edi, eax

loc_78C:				; CODE XREF: _pkcs8_main+77Ej
		mov	ebx, [esp+90h+var_5C]
		test	ebx, ebx
		jz	short loc_7CB
		push	offset ??_C@_02JDPG@rb?$AA@ ; `string'
		push	ebx
		call	_BIO_new_file
		mov	ecx, eax
		add	esp, 8
		mov	[esp+90h+var_80], ecx
		test	ecx, ecx
		jnz	short loc_7E9
		push	ebx
		push	offset ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ ; "Can't open input file %s\n"

loc_7B2:				; CODE XREF: _pkcs8_main+819j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch

loc_7C0:				; CODE XREF: _pkcs8_main+86Bj
					; _pkcs8_main+936j
		mov	edi, [esp+90h+var_80]
		xor	esi, esi
		jmp	loc_6CA
; ---------------------------------------------------------------------------

loc_7CB:				; CODE XREF: _pkcs8_main+792j
		mov	ebx, dword ptr ds:__imp____acrt_iob_func
		push	0
		push	0
		call	ebx ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+90h+var_80], eax
		jmp	short loc_7EF
; ---------------------------------------------------------------------------

loc_7E9:				; CODE XREF: _pkcs8_main+7AAj
		mov	ebx, dword ptr ds:__imp____acrt_iob_func

loc_7EF:				; CODE XREF: _pkcs8_main+7E7j
		mov	eax, [esp+90h+var_60]
		test	eax, eax
		jz	short loc_81B
		push	offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		push	eax
		call	_BIO_new_file
		mov	ebx, eax
		add	esp, 8
		mov	[esp+90h+var_50], ebx
		test	ebx, ebx
		jnz	short loc_833
		mov	eax, [esp+90h+var_60]
		push	eax
		push	offset ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ ; "Can't open output file %s\n"
		jmp	short loc_7B2
; ---------------------------------------------------------------------------

loc_81B:				; CODE XREF: _pkcs8_main+7F5j
		push	0
		push	1
		call	ebx ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+90h+var_50], eax
		mov	ebx, eax

loc_833:				; CODE XREF: _pkcs8_main+80Dj
		mov	eax, [esp+90h+var_40]
		test	eax, eax
		jz	loc_A16
		mov	eax, [esp+90h+var_70]
		push	offset ??_C@_03ICHNJLJF@key?$AA@ ; `string'
		push	esi
		push	[esp+98h+var_68]
		push	1
		push	eax
		mov	eax, [esp+0A4h+var_5C]
		push	eax
		push	dword ptr ds:_bio_err
		call	_load_key
		mov	ecx, eax
		add	esp, 1Ch
		mov	[esp+90h+var_78], ecx
		test	ecx, ecx
		jz	loc_7C0
		mov	eax, [esp+90h+var_74]
		push	eax
		push	ecx
		call	_EVP_PKEY2PKCS8_broken
		mov	ebp, eax
		add	esp, 8
		test	ebp, ebp
		jnz	short loc_8AE
		push	offset ??_C@_0BG@FIKEBGPH@Error?5converting?5key?6?$AA@	; "Error converting key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	edi, [esp+9Ch+var_80]
		add	esp, 0Ch
		xor	esi, esi
		jmp	loc_6CA
; ---------------------------------------------------------------------------

loc_8AE:				; CODE XREF: _pkcs8_main+883j
		mov	eax, [esp+90h+var_54]
		test	eax, eax
		jz	short loc_914
		mov	eax, [esp+90h+var_6C]
		cmp	eax, 3
		jnz	short loc_8D8
		push	ebp
		push	ebx
		call	_PEM_write_bio_PKCS8_PRIV_KEY_INFO
		mov	esi, [esp+98h+var_7C]
		add	esp, 8
		mov	edi, [esp+90h+var_80]
		xor	ebx, ebx
		jmp	$end$208
; ---------------------------------------------------------------------------

loc_8D8:				; CODE XREF: _pkcs8_main+8BDj
		cmp	eax, 1
		jnz	short loc_8F6
		push	ebp
		push	ebx
		call	_i2d_PKCS8_PRIV_KEY_INFO_bio
		mov	esi, [esp+98h+var_7C]
		add	esp, 8
		mov	edi, [esp+90h+var_80]
		xor	ebx, ebx
		jmp	$end$208
; ---------------------------------------------------------------------------

loc_8F6:				; CODE XREF: _pkcs8_main+8DBj
					; _pkcs8_main+A44j ...
		push	offset ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ ; "Bad format	specified for key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	edi, [esp+98h+var_80]
		add	esp, 8
		xor	esi, esi
		jmp	loc_6CA
; ---------------------------------------------------------------------------

loc_914:				; CODE XREF: _pkcs8_main+8B4j
		mov	esi, [esp+90h+var_64]
		test	esi, esi
		jnz	short loc_93C
		push	1
		push	offset ??_C@_0BL@GIHLBIFN@Enter?5Encryption?5Password?3?$AA@ ; "Enter Encryption Password:"
		lea	esi, [esp+98h+var_38]
		mov	eax, esi
		push	32h ; '2'
		push	eax
		call	_EVP_read_pw_string
		add	esp, 10h
		test	eax, eax
		jnz	loc_7C0

loc_93C:				; CODE XREF: _pkcs8_main+91Aj
		push	0
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		mov	ecx, esi
		add	esp, 0Ch
		lea	edx, [ecx+1]

loc_953:				; CODE XREF: _pkcs8_main+958j
		mov	al, [ecx]
		inc	ecx
		test	al, al
		jnz	short loc_953
		mov	eax, [esp+90h+var_3C]
		sub	ecx, edx
		push	ebp
		push	eax
		push	0
		push	0
		push	ecx
		push	esi
		push	[esp+0A8h+var_58]
		push	edi
		call	_PKCS8_encrypt
		mov	esi, eax
		add	esp, 20h
		mov	[esp+90h+var_7C], esi
		test	esi, esi
		jnz	short loc_9A6
		push	offset ??_C@_0BG@JEPDKHIK@Error?5encrypting?5key?6?$AA@	; "Error encrypting key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	edi, [esp+9Ch+var_80]
		add	esp, 0Ch
		jmp	loc_6CA
; ---------------------------------------------------------------------------

loc_9A6:				; CODE XREF: _pkcs8_main+97Dj
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_write_file
		mov	eax, [esp+98h+var_6C]
		add	esp, 8
		cmp	eax, 3
		jnz	short loc_9D8
		push	esi
		push	ebx
		call	_PEM_write_bio_PKCS8
		mov	esi, [esp+98h+var_7C]
		add	esp, 8
		mov	edi, [esp+90h+var_80]
		xor	ebx, ebx
		jmp	$end$208
; ---------------------------------------------------------------------------

loc_9D8:				; CODE XREF: _pkcs8_main+9BDj
		cmp	eax, 1
		jnz	short loc_9F6
		push	esi
		push	ebx
		call	_i2d_PKCS8_bio
		mov	esi, [esp+98h+var_7C]
		add	esp, 8
		mov	edi, [esp+90h+var_80]
		xor	ebx, ebx
		jmp	$end$208
; ---------------------------------------------------------------------------

loc_9F6:				; CODE XREF: _pkcs8_main+9DBj
		push	offset ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ ; "Bad format	specified for key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	esi, [esp+98h+var_7C]
		add	esp, 8
		mov	edi, [esp+90h+var_80]
		jmp	loc_6CA
; ---------------------------------------------------------------------------

loc_A16:				; CODE XREF: _pkcs8_main+839j
		mov	eax, [esp+90h+var_54]
		test	eax, eax
		mov	eax, [esp+90h+var_70]
		jz	short loc_A60
		cmp	eax, 3
		jnz	short loc_A41
		mov	edi, [esp+90h+var_80]
		push	0
		push	0
		push	0
		push	edi
		call	_PEM_read_bio_PKCS8_PRIV_KEY_INFO
		add	esp, 10h
		xor	esi, esi
		jmp	loc_AFE
; ---------------------------------------------------------------------------

loc_A41:				; CODE XREF: _pkcs8_main+A25j
		cmp	eax, 1
		jnz	loc_8F6
		mov	edi, [esp+90h+var_80]
		push	0
		push	edi
		call	_d2i_PKCS8_PRIV_KEY_INFO_bio
		add	esp, 8
		xor	esi, esi
		jmp	loc_AFE
; ---------------------------------------------------------------------------

loc_A60:				; CODE XREF: _pkcs8_main+A20j
		cmp	eax, 3
		jnz	short loc_A7A
		mov	edi, [esp+90h+var_80]
		push	0
		push	0
		push	0
		push	edi
		call	_PEM_read_bio_PKCS8
		add	esp, 10h
		jmp	short loc_A92
; ---------------------------------------------------------------------------

loc_A7A:				; CODE XREF: _pkcs8_main+A63j
		cmp	eax, 1
		jnz	loc_8F6
		mov	edi, [esp+90h+var_80]
		push	0
		push	edi
		call	_d2i_PKCS8_bio
		add	esp, 8

loc_A92:				; CODE XREF: _pkcs8_main+A78j
		mov	[esp+90h+var_7C], eax
		test	eax, eax
		jnz	short loc_AC1
		push	offset ??_C@_0BD@OCJCDIBD@Error?5reading?5key?6?$AA@ ; "Error reading key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	esi, [esp+9Ch+var_7C]
		add	esp, 0Ch
		jmp	loc_6CA
; ---------------------------------------------------------------------------

loc_AC1:				; CODE XREF: _pkcs8_main+A98j
		mov	esi, [esp+90h+var_68]
		test	esi, esi
		jnz	short loc_AE1
		push	0
		push	offset ??_C@_0BA@ONILEAGC@Enter?5Password?3?$AA@ ; "Enter Password:"
		lea	esi, [esp+98h+var_38]
		mov	eax, esi
		push	32h ; '2'
		push	eax
		call	_EVP_read_pw_string
		add	esp, 10h

loc_AE1:				; CODE XREF: _pkcs8_main+AC7j
		mov	ecx, esi
		lea	edx, [ecx+1]

loc_AE6:				; CODE XREF: _pkcs8_main+AEBj
		mov	al, [ecx]
		inc	ecx
		test	al, al
		jnz	short loc_AE6
		sub	ecx, edx
		push	ecx
		push	esi
		mov	esi, [esp+98h+var_7C]
		push	esi
		call	_PKCS8_decrypt
		add	esp, 0Ch

loc_AFE:				; CODE XREF: _pkcs8_main+A3Cj
					; _pkcs8_main+A5Bj
		mov	ebp, eax
		test	ebp, ebp
		jnz	short loc_B27
		push	offset ??_C@_0BG@OEGPJAOF@Error?5decrypting?5key?6?$AA@	; "Error decrypting key\n"

loc_B09:				; CODE XREF: _pkcs8_main+B3Fj
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_6CA
; ---------------------------------------------------------------------------

loc_B27:				; CODE XREF: _pkcs8_main+B02j
		push	ebp
		call	_EVP_PKCS82PKEY
		mov	ecx, eax
		add	esp, 4
		mov	[esp+90h+var_78], ecx
		test	ecx, ecx
		jnz	short loc_B41
		push	offset ??_C@_0BG@FIKEBGPH@Error?5converting?5key?6?$AA@	; "Error converting key\n"
		jmp	short loc_B09
; ---------------------------------------------------------------------------

loc_B41:				; CODE XREF: _pkcs8_main+B38j
		cmp	dword ptr [ebp+0], 0
		jz	short loc_B9D
		push	offset ??_C@_0BP@LMNIGICG@Warning?3?5broken?5key?5encoding?3?5?$AA@ ; "Warning:	broken key encoding: "
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	eax, [ebp+0]
		add	esp, 8
		dec	eax
		cmp	eax, 3		; switch 4 cases
		ja	short loc_B86	; jumptable 00000B63 default case
		jmp	ds:$LN206[eax*4] ; switch jump
; ---------------------------------------------------------------------------

$LN102:					; CODE XREF: _pkcs8_main+B63j
					; DATA XREF: .text$mn:$LN206o
		push	offset ??_C@_0BP@LBIMOIEF@No?5Octet?5String?5in?5PrivateKey?6?$AA@ ; jumptable 00000B63	case 0
		jmp	short loc_B8B
; ---------------------------------------------------------------------------

$LN103:					; CODE XREF: _pkcs8_main+B63j
					; DATA XREF: .text$mn:$LN206o
		push	offset ??_C@_0CH@NMCMHGGI@DSA?5parameters?5included?5in?5Priva@	; jumptable 00000B63 case 1
		jmp	short loc_B8B
; ---------------------------------------------------------------------------

$LN104:					; CODE XREF: _pkcs8_main+B63j
					; DATA XREF: .text$mn:$LN206o
		push	offset ??_C@_0CG@HBEOIPNL@DSA?5public?5key?5include?5in?5Privat@ ; jumptable 00000B63 case 2
		jmp	short loc_B8B
; ---------------------------------------------------------------------------

$LN105:					; CODE XREF: _pkcs8_main+B63j
					; DATA XREF: .text$mn:$LN206o
		push	offset ??_C@_0CD@NIHDCDIA@DSA?5private?5key?5value?5is?5negativ@ ; jumptable 00000B63 case 3
		jmp	short loc_B8B
; ---------------------------------------------------------------------------

loc_B86:				; CODE XREF: _pkcs8_main+B61j
		push	offset ??_C@_0BF@JLANKGEL@Unknown?5broken?5type?6?$AA@ ; jumptable 00000B63 default case

loc_B8B:				; CODE XREF: _pkcs8_main+B6Fj
					; _pkcs8_main+B76j ...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		mov	ecx, [esp+98h+var_78]
		add	esp, 8

loc_B9D:				; CODE XREF: _pkcs8_main+B45j
		mov	eax, [esp+90h+var_6C]
		cmp	eax, 3
		jnz	short loc_BC3
		push	[esp+90h+var_64]
		push	0
		push	0
		push	0
		push	0
		push	ecx
		push	ebx
		call	_PEM_write_bio_PrivateKey
		add	esp, 1Ch
		xor	ebx, ebx
		jmp	$end$208
; ---------------------------------------------------------------------------

loc_BC3:				; CODE XREF: _pkcs8_main+BA4j
		cmp	eax, 1
		jnz	short loc_BD9
		push	ecx
		push	ebx
		call	_i2d_PrivateKey_bio
		add	esp, 8
		xor	ebx, ebx
		jmp	$end$208
; ---------------------------------------------------------------------------

loc_BD9:				; CODE XREF: _pkcs8_main+BC6j
		push	offset ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ ; "Bad format	specified for key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_6CA
_pkcs8_main	endp

; ---------------------------------------------------------------------------
		align 4
$LN206		dd offset $LN102	; DATA XREF: _pkcs8_main+B63r
		dd offset $LN103	; jump table for switch	statement
		dd offset $LN104
		dd offset $LN105
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C04h
; COMDAT (pick any)
		public ??_C@_03DBOPBHJD@?9v2?$AA@
; `string'
??_C@_03DBOPBHJD@?9v2?$AA@ dd 32762Dh	; DATA XREF: _pkcs8_main+D6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C08h
; COMDAT (pick any)
		public ??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@
; `string'
??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@ db 'Unknown cipher %s',0Ah,0
					; DATA XREF: _pkcs8_main+126o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C1Ch
; COMDAT (pick any)
		public ??_C@_03BKMCEEFA@?9v1?$AA@
; `string'
??_C@_03BKMCEEFA@?9v1?$AA@ dd 31762Dh	; DATA XREF: _pkcs8_main:loc_14Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C20h
; COMDAT (pick any)
		public ??_C@_0BK@MPHGMBPG@Unknown?5PBE?5algorithm?5?$CFs?6?$AA@
; `string'
??_C@_0BK@MPHGMBPG@Unknown?5PBE?5algorithm?5?$CFs?6?$AA@ db 'Unknown PBE algorithm %s',0Ah,0
					; DATA XREF: _pkcs8_main+19Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C3Ch
; COMDAT (pick any)
		public ??_C@_06MFIOKNGE@?9v2prf?$AA@
; `string'
??_C@_06MFIOKNGE@?9v2prf?$AA@ db '-v2prf',0 ; DATA XREF: _pkcs8_main:loc_1A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C44h
; COMDAT (pick any)
		public ??_C@_0BK@PBOPOMHJ@Unknown?5PRF?5algorithm?5?$CFs?6?$AA@
; `string'
??_C@_0BK@PBOPOMHJ@Unknown?5PRF?5algorithm?5?$CFs?6?$AA@ db 'Unknown PRF algorithm %s',0Ah,0
					; DATA XREF: _pkcs8_main+20Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C60h
; COMDAT (pick any)
		public ??_C@_07CGGPPMGB@?9inform?$AA@
; `string'
??_C@_07CGGPPMGB@?9inform?$AA@ db '-inform',0 ; DATA XREF: _pkcs8_main:loc_216o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C68h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _pkcs8_main:loc_269o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C74h
; COMDAT (pick any)
		public ??_C@_06HPAKOPDA@?9topk8?$AA@
; `string'
??_C@_06HPAKOPDA@?9topk8?$AA@ db '-topk8',0 ; DATA XREF: _pkcs8_main:loc_2B9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C7Ch
; COMDAT (pick any)
		public ??_C@_07PJOPONGO@?9noiter?$AA@
; `string'
??_C@_07PJOPONGO@?9noiter?$AA@ db '-noiter',0 ; DATA XREF: _pkcs8_main:loc_2F6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C84h
; COMDAT (pick any)
		public ??_C@_08NGDAPFMP@?9nocrypt?$AA@
; `string'
??_C@_08NGDAPFMP@?9nocrypt?$AA@	db '-nocrypt',0 ; DATA XREF: _pkcs8_main:loc_336o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C90h
; COMDAT (pick any)
		public ??_C@_06IHOCNILF@?9nooct?$AA@
; `string'
??_C@_06IHOCNILF@?9nooct?$AA@ db '-nooct',0 ; DATA XREF: _pkcs8_main:loc_376o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C98h
; COMDAT (pick any)
		public ??_C@_05LCJCOEDD@?9nsdb?$AA@
; `string'
??_C@_05LCJCOEDD@?9nsdb?$AA@ db	'-nsdb',0 ; DATA XREF: _pkcs8_main:loc_3B6o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CA0h
; COMDAT (pick any)
		public ??_C@_06CLMAMNCI@?9embed?$AA@
; `string'
??_C@_06CLMAMNCI@?9embed?$AA@ db '-embed',0 ; DATA XREF: _pkcs8_main:loc_3F6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CA8h
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _pkcs8_main:loc_436o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CB0h
; COMDAT (pick any)
		public ??_C@_08KCDBEMAI@?9passout?$AA@
; `string'
??_C@_08KCDBEMAI@?9passout?$AA@	db '-passout',0 ; DATA XREF: _pkcs8_main:loc_47Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CBCh
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _pkcs8_main:loc_4C5o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CC4h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ db '-in',0   ; DATA XREF: _pkcs8_main:loc_50Fo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CC8h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _pkcs8_main:loc_557o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CD0h
; COMDAT (pick any)
		public ??_C@_0BH@PIAIABFB@Usage?5pkcs8?5?$FLoptions?$FN?6?$AA@
; `string'
??_C@_0BH@PIAIABFB@Usage?5pkcs8?5?$FLoptions?$FN?6?$AA@	db 'Usage pkcs8 [options]',0Ah,0
					; DATA XREF: _pkcs8_main:$bad$207o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CE8h
; COMDAT (pick any)
		public ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
; `string'
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ db 'where options are',0Ah,0
					; DATA XREF: _pkcs8_main+5BDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CFCh
; COMDAT (pick any)
		public ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@	db '-in file        input file',0Ah,0
					; DATA XREF: _pkcs8_main+5CDo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D18h
; COMDAT (pick any)
		public ??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@
; `string'
??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@ db '-inform X       input format (DER or PEM)',0Ah,0
					; DATA XREF: _pkcs8_main+5DDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D44h
; COMDAT (pick any)
		public ??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@
; `string'
??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@ db '-passin arg     input file pass phrase source',0Ah,0
					; DATA XREF: _pkcs8_main+5EDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D74h
; COMDAT (pick any)
		public ??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@
; `string'
??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@ db '-outform X      output format (DER or PEM)',0Ah,0
					; DATA XREF: _pkcs8_main+5FDo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DA0h
; COMDAT (pick any)
		public ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@	db '-out file       output file',0Ah,0
					; DATA XREF: _pkcs8_main+60Do
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DC0h
; COMDAT (pick any)
		public ??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@
; `string'
??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@ db	'-passout arg    output file pass phrase source',0Ah,0
					; DATA XREF: _pkcs8_main+61Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DF0h
; COMDAT (pick any)
		public ??_C@_0CD@IPFGCCOH@?9topk8?5?5?5?5?5?5?5?5?5?5output?5PKCS8?5fil@
; `string'
??_C@_0CD@IPFGCCOH@?9topk8?5?5?5?5?5?5?5?5?5?5output?5PKCS8?5fil@ db '-topk8          output PKCS8 file',0Ah,0
					; DATA XREF: _pkcs8_main+630o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E14h
; COMDAT (pick any)
		public ??_C@_0DD@ILPBKGBL@?9nooct?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@
; `string'
??_C@_0DD@ILPBKGBL@?9nooct?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@ db '-nooct          use (nonstandard) no octet format',0Ah,0
					; DATA XREF: _pkcs8_main+640o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0E48h
; COMDAT (pick any)
		public ??_C@_0EC@CBHEENHN@?9embed?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@
; `string'
??_C@_0EC@CBHEENHN@?9embed?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@ db '-embed          use (nonstandard) embedded DSA parameters format',0Ah
					; DATA XREF: _pkcs8_main+650o
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8Ch
; COMDAT (pick any)
		public ??_C@_0DK@KHOMOMBC@?9nsdb?5?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@
; `string'
??_C@_0DK@KHOMOMBC@?9nsdb?5?5?5?5?5?5?5?5?5?5?5use?5?$CInonstandard@ db	'-nsdb           use (nonstandard) DSA Netscape DB format',0Ah,0
					; DATA XREF: _pkcs8_main+660o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EC8h
; COMDAT (pick any)
		public ??_C@_0CK@BOLAPIHI@?9noiter?5?5?5?5?5?5?5?5?5use?51?5as?5iterati@
; `string'
??_C@_0CK@BOLAPIHI@?9noiter?5?5?5?5?5?5?5?5?5use?51?5as?5iterati@ db '-noiter         use 1 as iteration count',0Ah,0
					; DATA XREF: _pkcs8_main+670o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EF4h
; COMDAT (pick any)
		public ??_C@_0DH@JGODPEOL@?9nocrypt?5?5?5?5?5?5?5?5use?5or?5expect?5un@
; `string'
??_C@_0DH@JGODPEOL@?9nocrypt?5?5?5?5?5?5?5?5use?5or?5expect?5un@ db '-nocrypt        use or expect unencrypted private key',0Ah,0
					; DATA XREF: _pkcs8_main+680o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F2Ch
; COMDAT (pick any)
		public ??_C@_0DC@CGJPEEOJ@?9v2?5alg?5?5?5?5?5?5?5?5?5use?5PKCS?$CD5?5v2?40?5@
; `string'
??_C@_0DC@CGJPEEOJ@?9v2?5alg?5?5?5?5?5?5?5?5?5use?5PKCS?$CD5?5v2?40?5@ db '-v2 alg         use PKCS#5 v2.0 and cipher "alg"',0Ah,0
					; DATA XREF: _pkcs8_main+690o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F60h
; COMDAT (pick any)
		public ??_C@_0DC@IKBNDDNF@?9v1?5obj?5?5?5?5?5?5?5?5?5use?5PKCS?$CD5?5v1?45?5@
; `string'
??_C@_0DC@IKBNDDNF@?9v1?5obj?5?5?5?5?5?5?5?5?5use?5PKCS?$CD5?5v1?45?5@ db '-v1 obj         use PKCS#5 v1.5 and cipher "alg"',0Ah,0
					; DATA XREF: _pkcs8_main+6A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F94h
; COMDAT (pick any)
		public ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
; `string'
??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ db ' -engine e       use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _pkcs8_main+6B3o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FD0h
; COMDAT (pick any)
		public ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
; `string'
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ db 'Error getting passwords',0Ah,0
					; DATA XREF: _pkcs8_main+76Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FECh
; COMDAT (pick any)
		public ??_C@_02JDPG@rb?$AA@
; `string'
??_C@_02JDPG@rb?$AA@ db	72h, 62h, 0	; DATA XREF: _pkcs8_main+794o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FF0h
; COMDAT (pick any)
		public ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open input file %s',0Ah,0
					; DATA XREF: _pkcs8_main+7ADo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 100Ch
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 77h,	62h, 0	; DATA XREF: _pkcs8_main+7F7o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1010h
; COMDAT (pick any)
		public ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open output file %s',0Ah,0
					; DATA XREF: _pkcs8_main+814o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 102Ch
; COMDAT (pick any)
		public ??_C@_03ICHNJLJF@key?$AA@
; `string'
??_C@_03ICHNJLJF@key?$AA@ dd 79656Bh	; DATA XREF: _pkcs8_main+843o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1030h
; COMDAT (pick any)
		public ??_C@_0BG@FIKEBGPH@Error?5converting?5key?6?$AA@
; `string'
??_C@_0BG@FIKEBGPH@Error?5converting?5key?6?$AA@ db 'Error converting key',0Ah,0
					; DATA XREF: _pkcs8_main+885o
					; _pkcs8_main+B3Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1048h
; COMDAT (pick any)
		public ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@
; `string'
??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ db 'Bad format specified for key',0Ah,0
					; DATA XREF: _pkcs8_main:loc_8F6o
					; _pkcs8_main:loc_9F6o	...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1068h
; COMDAT (pick any)
		public ??_C@_0BL@GIHLBIFN@Enter?5Encryption?5Password?3?$AA@
; `string'
??_C@_0BL@GIHLBIFN@Enter?5Encryption?5Password?3?$AA@ db 'Enter Encryption Password:',0
					; DATA XREF: _pkcs8_main+91Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1084h
; COMDAT (pick any)
		public ??_C@_0BG@JEPDKHIK@Error?5encrypting?5key?6?$AA@
; `string'
??_C@_0BG@JEPDKHIK@Error?5encrypting?5key?6?$AA@ db 'Error encrypting key',0Ah,0
					; DATA XREF: _pkcs8_main+97Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 109Ch
; COMDAT (pick any)
		public ??_C@_0BD@OCJCDIBD@Error?5reading?5key?6?$AA@
; `string'
??_C@_0BD@OCJCDIBD@Error?5reading?5key?6?$AA@ db 'Error reading key',0Ah,0
					; DATA XREF: _pkcs8_main+A9Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10B0h
; COMDAT (pick any)
		public ??_C@_0BA@ONILEAGC@Enter?5Password?3?$AA@
; `string'
??_C@_0BA@ONILEAGC@Enter?5Password?3?$AA@ db 'Enter Password:',0
					; DATA XREF: _pkcs8_main+ACBo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10C0h
; COMDAT (pick any)
		public ??_C@_0BG@OEGPJAOF@Error?5decrypting?5key?6?$AA@
; `string'
??_C@_0BG@OEGPJAOF@Error?5decrypting?5key?6?$AA@ db 'Error decrypting key',0Ah,0
					; DATA XREF: _pkcs8_main+B04o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10D8h
; COMDAT (pick any)
		public ??_C@_0BP@LMNIGICG@Warning?3?5broken?5key?5encoding?3?5?$AA@
; `string'
??_C@_0BP@LMNIGICG@Warning?3?5broken?5key?5encoding?3?5?$AA@ db	'Warning: broken key encoding: ',0
					; DATA XREF: _pkcs8_main+B47o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10F8h
; COMDAT (pick any)
		public ??_C@_0BP@LBIMOIEF@No?5Octet?5String?5in?5PrivateKey?6?$AA@
; `string'
??_C@_0BP@LBIMOIEF@No?5Octet?5String?5in?5PrivateKey?6?$AA@ db 'No Octet String in PrivateKey',0Ah,0
					; DATA XREF: _pkcs8_main:$LN102o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1118h
; COMDAT (pick any)
		public ??_C@_0CH@NMCMHGGI@DSA?5parameters?5included?5in?5Priva@
; `string'
??_C@_0CH@NMCMHGGI@DSA?5parameters?5included?5in?5Priva@ db 'DSA parameters included in PrivateKey',0Ah,0
					; DATA XREF: _pkcs8_main:$LN103o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1140h
; COMDAT (pick any)
		public ??_C@_0CG@HBEOIPNL@DSA?5public?5key?5include?5in?5Privat@
; `string'
??_C@_0CG@HBEOIPNL@DSA?5public?5key?5include?5in?5Privat@ db 'DSA public key include in PrivateKey',0Ah,0
					; DATA XREF: _pkcs8_main:$LN104o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1168h
; COMDAT (pick any)
		public ??_C@_0CD@NIHDCDIA@DSA?5private?5key?5value?5is?5negativ@
; `string'
??_C@_0CD@NIHDCDIA@DSA?5private?5key?5value?5is?5negativ@ db 'DSA private key value is negative',0Ah,0
					; DATA XREF: _pkcs8_main:$LN105o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 118Ch
; COMDAT (pick any)
		public ??_C@_0BF@JLANKGEL@Unknown?5broken?5type?6?$AA@
; `string'
??_C@_0BF@JLANKGEL@Unknown?5broken?5type?6?$AA@	db 'Unknown broken type',0Ah,0
					; DATA XREF: _pkcs8_main:loc_B86o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _pkcs8_main+7Cp
					; _pkcs8_main+7D5p ...
		extrn _CRYPTO_free:near	; CODE XREF: _pkcs8_main+6FFp
					; _pkcs8_main+710p
		extrn _BIO_new_file:near ; CODE	XREF: _pkcs8_main+79Ap
					; _pkcs8_main+7FDp
		extrn _BIO_new_fp:near	; CODE XREF: _pkcs8_main+86p
					; _pkcs8_main+7DBp ...
		extrn _BIO_free:near	; CODE XREF: _pkcs8_main+6EEp
		extrn _BIO_free_all:near ; CODE	XREF: _pkcs8_main+6E8p
		extrn _BIO_printf:near	; CODE XREF: _pkcs8_main+131p
					; _pkcs8_main+5B8p ...
		extrn _OBJ_txt2nid:near	; CODE XREF: _pkcs8_main+189p
					; _pkcs8_main+1E8p
		extrn _EVP_read_pw_string:near ; CODE XREF: _pkcs8_main+92Cp
					; _pkcs8_main+AD9p
		extrn _OPENSSL_add_all_algorithms_noconf:near ;	CODE XREF: _pkcs8_main+BBp
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _pkcs8_main+114p
		extrn _EVP_PKEY_free:near ; CODE XREF: _pkcs8_main+6DFp
		extrn _EVP_PBE_find:near ; CODE	XREF: _pkcs8_main+1FAp
		extrn _d2i_PKCS8_bio:near ; CODE XREF: _pkcs8_main+A8Ap
		extrn _i2d_PKCS8_bio:near ; CODE XREF: _pkcs8_main+9DFp
		extrn _d2i_PKCS8_PRIV_KEY_INFO_bio:near	; CODE XREF: _pkcs8_main+A51p
		extrn _i2d_PKCS8_PRIV_KEY_INFO_bio:near	; CODE XREF: _pkcs8_main+8DFp
		extrn _i2d_PrivateKey_bio:near ; CODE XREF: _pkcs8_main+BCAp
		extrn _X509_SIG_free:near ; CODE XREF: _pkcs8_main+6D0p
		extrn _PKCS8_PRIV_KEY_INFO_free:near ; CODE XREF: _pkcs8_main+6D6p
		extrn _EVP_PKCS82PKEY:near ; CODE XREF:	_pkcs8_main+B28p
		extrn _EVP_PKEY2PKCS8_broken:near ; CODE XREF: _pkcs8_main+877p
		extrn _ERR_print_errors:near ; CODE XREF: _pkcs8_main+89Bp
					; _pkcs8_main+995p ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _pkcs8_main+B6p
		extrn _app_RAND_load_file:near ; CODE XREF: _pkcs8_main+946p
		extrn _app_RAND_write_file:near	; CODE XREF: _pkcs8_main+9AEp
		extrn _str2fmt:near	; CODE XREF: _pkcs8_main+258p
					; _pkcs8_main+2A8p
		extrn _app_passwd:near	; CODE XREF: _pkcs8_main+761p
		extrn _load_key:near	; CODE XREF: _pkcs8_main+85Bp
		extrn _setup_engine:near ; CODE	XREF: _pkcs8_main+740p
		extrn _load_config:near	; CODE XREF: _pkcs8_main+96p
		extrn _PEM_read_bio_PKCS8:near ; CODE XREF: _pkcs8_main+A70p
		extrn _PEM_write_bio_PKCS8:near	; CODE XREF: _pkcs8_main+9C1p
		extrn _PEM_read_bio_PKCS8_PRIV_KEY_INFO:near ; CODE XREF: _pkcs8_main+A32p
		extrn _PEM_write_bio_PKCS8_PRIV_KEY_INFO:near ;	CODE XREF: _pkcs8_main+8C1p
		extrn _PEM_write_bio_PrivateKey:near ; CODE XREF: _pkcs8_main+BB4p
		extrn _PKCS8_decrypt:near ; CODE XREF: _pkcs8_main+AF6p
		extrn _PKCS8_encrypt:near ; CODE XREF: _pkcs8_main+96Dp
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _pkcs8_main+727p
		extrn __chkstk:near	; CODE XREF: _pkcs8_main+5p
		extrn _bio_err:near	; DATA XREF: _pkcs8_main+6Cr
					; _pkcs8_main+8Ew ...
		extrn ___security_cookie:near ;	DATA XREF: _pkcs8_main+Ar


		end

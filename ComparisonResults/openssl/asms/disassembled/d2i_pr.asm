;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	43CE92A8FB65750B87CCEE4AE2134FF9
; Input	CRC32 :	006F6345

; File Name   :	C:\compspace\Diff\openssl\obj\d2i_pr.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_AutoPrivateKey
_d2i_AutoPrivateKey proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		mov	ebx, [esp+4+arg_4]
		push	ebp
		mov	ebp, [esp+8+arg_8]
		push	esi
		mov	eax, [ebx]
		push	edi
		mov	[esp+10h+arg_4], eax
		lea	eax, [esp+10h+arg_4]
		push	ebp
		push	eax
		push	0
		call	_d2i_ASN1_SEQUENCE_ANY
		mov	ecx, [ebx]
		mov	esi, eax
		push	esi
		mov	[esp+20h+arg_4], ecx
		call	_sk_num
		add	esp, 10h
		cmp	eax, 6
		jnz	short loc_3D
		lea	edi, [eax+6Eh]
		jmp	loc_DA
; ---------------------------------------------------------------------------

loc_3D:					; CODE XREF: _d2i_AutoPrivateKey+33j
		push	esi
		call	_sk_num
		add	esp, 4
		cmp	eax, 4
		jnz	short loc_55
		mov	edi, 198h
		jmp	loc_DA
; ---------------------------------------------------------------------------

loc_55:					; CODE XREF: _d2i_AutoPrivateKey+49j
		push	esi
		call	_sk_num
		add	esp, 4
		cmp	eax, 3
		jnz	short loc_D5
		push	ebp
		lea	eax, [esp+14h+arg_4]
		push	eax
		push	0
		call	_d2i_PKCS8_PRIV_KEY_INFO
		push	offset _ASN1_TYPE_free
		push	esi
		mov	edi, eax
		call	_sk_pop_free
		add	esp, 14h
		test	edi, edi
		jnz	short loc_A9
		push	9Fh ; 'Ÿ'
		push	offset ??_C@_0BH@BACMEAA@?4?2crypto?2asn1?2d2i_pr?4c?$AA@ ; ".\\crypto\\asn1\\d2i_pr.c"
		push	0A7h ; '§'
		push	0CFh ; 'Ï'
		push	0Dh
		call	_ERR_put_error
		add	esp, 14h

loc_A2:					; CODE XREF: _d2i_AutoPrivateKey+BCj
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_A9:					; CODE XREF: _d2i_AutoPrivateKey+82j
		push	edi
		call	_EVP_PKCS82PKEY
		push	edi
		mov	esi, eax
		call	_PKCS8_PRIV_KEY_INFO_free
		add	esp, 8
		test	esi, esi
		jz	short loc_A2
		mov	eax, [esp+10h+arg_4]
		mov	[ebx], eax
		mov	eax, [esp+10h+arg_0]
		test	eax, eax
		jz	short loc_CE
		mov	[eax], esi

loc_CE:					; CODE XREF: _d2i_AutoPrivateKey+CAj
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_D5:					; CODE XREF: _d2i_AutoPrivateKey+61j
		mov	edi, 6

loc_DA:					; CODE XREF: _d2i_AutoPrivateKey+38j
					; _d2i_AutoPrivateKey+50j
		push	offset _ASN1_TYPE_free
		push	esi
		call	_sk_pop_free
		push	ebp
		push	ebx
		push	[esp+20h+arg_0]
		push	edi
		call	_d2i_PrivateKey
		add	esp, 18h
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		retn
_d2i_AutoPrivateKey endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0FCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PrivateKey
_d2i_PrivateKey	proc near		; CODE XREF: _d2i_AutoPrivateKey+ECp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		mov	ebp, [esp+4+arg_8]
		push	esi
		push	edi
		mov	edi, [esp+0Ch+arg_4]
		mov	eax, [ebp+0]
		mov	[esp+0Ch+arg_8], eax
		test	edi, edi
		jz	short loc_152
		mov	esi, [edi]
		test	esi, esi
		jz	short loc_152
		mov	eax, [esi+10h]
		test	eax, eax
		jz	short loc_12F
		push	eax
		call	_ENGINE_finish
		add	esp, 4
		mov	dword ptr [esi+10h], 0

loc_12F:				; CODE XREF: _d2i_PrivateKey+21j
					; _d2i_PrivateKey+5Fj
		push	ebx
		push	[esp+10h+arg_0]
		push	esi
		call	_EVP_PKEY_set_type
		add	esp, 8
		test	eax, eax
		jnz	short loc_17B
		push	5Dh ; ']'
		push	offset ??_C@_0BH@BACMEAA@?4?2crypto?2asn1?2d2i_pr?4c?$AA@ ; ".\\crypto\\asn1\\d2i_pr.c"
		push	0A3h ; '£'
		jmp	loc_1F0
; ---------------------------------------------------------------------------

loc_152:				; CODE XREF: _d2i_PrivateKey+14j
					; _d2i_PrivateKey+1Aj
		call	_EVP_PKEY_new
		mov	esi, eax
		test	esi, esi
		jnz	short loc_12F
		push	4Fh ; 'O'
		push	offset ??_C@_0BH@BACMEAA@?4?2crypto?2asn1?2d2i_pr?4c?$AA@ ; ".\\crypto\\asn1\\d2i_pr.c"
		push	6
		push	9Ah ; 'š'
		push	0Dh
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_17B:				; CODE XREF: _d2i_PrivateKey+43j
		mov	eax, [esi+0Ch]
		mov	ebx, [esp+10h+arg_C]
		mov	eax, [eax+5Ch]
		test	eax, eax
		jz	short loc_199
		push	ebx
		lea	ecx, [esp+14h+arg_8]
		push	ecx
		push	esi
		call	eax
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_1D3

loc_199:				; CODE XREF: _d2i_PrivateKey+8Bj
		mov	eax, [esi+0Ch]
		cmp	dword ptr [eax+24h], 0
		jz	short loc_1E7
		push	ebx
		lea	eax, [esp+14h+arg_8]
		push	eax
		push	0
		call	_d2i_PKCS8_PRIV_KEY_INFO
		mov	ebx, eax
		add	esp, 0Ch
		test	ebx, ebx
		jz	short $err$21
		push	esi
		call	_EVP_PKEY_free
		push	ebx
		call	_EVP_PKCS82PKEY
		push	ebx
		mov	esi, eax
		call	_PKCS8_PRIV_KEY_INFO_free
		add	esp, 0Ch
		test	esi, esi
		jz	short loc_214

loc_1D3:				; CODE XREF: _d2i_PrivateKey+9Bj
		mov	eax, [esp+10h+arg_8]
		mov	[ebp+0], eax
		test	edi, edi
		jz	short loc_1E0
		mov	[edi], esi

loc_1E0:				; CODE XREF: _d2i_PrivateKey+E0j
		pop	ebx
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_1E7:				; CODE XREF: _d2i_PrivateKey+A4j
		push	6Eh ; 'n'
		push	offset ??_C@_0BH@BACMEAA@?4?2crypto?2asn1?2d2i_pr?4c?$AA@ ; ".\\crypto\\asn1\\d2i_pr.c"
		push	0Dh

loc_1F0:				; CODE XREF: _d2i_PrivateKey+51j
		push	9Ah ; 'š'
		push	0Dh
		call	_ERR_put_error
		add	esp, 14h

$err$21:				; CODE XREF: _d2i_PrivateKey+BAj
		test	esi, esi
		jz	short loc_214
		test	edi, edi
		jz	short loc_20B
		cmp	[edi], esi
		jz	short loc_214

loc_20B:				; CODE XREF: _d2i_PrivateKey+109j
		push	esi
		call	_EVP_PKEY_free
		add	esp, 4

loc_214:				; CODE XREF: _d2i_PrivateKey+D5j
					; _d2i_PrivateKey+105j	...
		pop	ebx
		pop	edi
		pop	esi
		xor	eax, eax
		pop	ebp
		retn
_d2i_PrivateKey	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21Ch
; COMDAT (pick any)
		public ??_C@_0BH@BACMEAA@?4?2crypto?2asn1?2d2i_pr?4c?$AA@
; `string'
??_C@_0BH@BACMEAA@?4?2crypto?2asn1?2d2i_pr?4c?$AA@ db '.\crypto\asn1\d2i_pr.c',0
					; DATA XREF: _d2i_AutoPrivateKey+89o
					; _d2i_PrivateKey+47o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _sk_num:near	; CODE XREF: _d2i_AutoPrivateKey+28p
					; _d2i_AutoPrivateKey+3Ep ...
		extrn _sk_pop_free:near	; CODE XREF: _d2i_AutoPrivateKey+78p
					; _d2i_AutoPrivateKey+E0p
		extrn _ERR_put_error:near ; CODE XREF: _d2i_AutoPrivateKey+9Ap
					; _d2i_PrivateKey+71p ...
		extrn _d2i_ASN1_SEQUENCE_ANY:near ; CODE XREF: _d2i_AutoPrivateKey+1Ap
		extrn _ASN1_TYPE_free:near ; DATA XREF:	_d2i_AutoPrivateKey+70o
					; _d2i_AutoPrivateKey:loc_DAo
		extrn _EVP_PKEY_set_type:near ;	CODE XREF: _d2i_PrivateKey+39p
		extrn _EVP_PKEY_new:near ; CODE	XREF: _d2i_PrivateKey:loc_152p
		extrn _EVP_PKEY_free:near ; CODE XREF: _d2i_PrivateKey+BDp
					; _d2i_PrivateKey+110p
		extrn _PKCS8_PRIV_KEY_INFO_free:near ; CODE XREF: _d2i_AutoPrivateKey+B2p
					; _d2i_PrivateKey+CBp
		extrn _d2i_PKCS8_PRIV_KEY_INFO:near ; CODE XREF: _d2i_AutoPrivateKey+6Bp
					; _d2i_PrivateKey+AEp
		extrn _EVP_PKCS82PKEY:near ; CODE XREF:	_d2i_AutoPrivateKey+AAp
					; _d2i_PrivateKey+C3p
		extrn _ENGINE_finish:near ; CODE XREF: _d2i_PrivateKey+24p


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	392F508646B5EF6C639C90C2EEBEBF7D
; Input	CRC32 :	EC76E375

; File Name   :	C:\compspace\Diff\openssl\obj\dsa_sign.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DSA_SIG_free
_DSA_SIG_free	proc near

arg_0		= dword	ptr  4

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jz	short loc_31
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_18
		push	eax
		call	_BN_free
		add	esp, 4

loc_18:					; CODE XREF: _DSA_SIG_free+Dj
		mov	eax, [esi+4]
		test	eax, eax
		jz	short loc_28
		push	eax
		call	_BN_free
		add	esp, 4

loc_28:					; CODE XREF: _DSA_SIG_free+1Dj
		push	esi
		call	_CRYPTO_free
		add	esp, 4

loc_31:					; CODE XREF: _DSA_SIG_free+7j
		pop	esi
		retn
_DSA_SIG_free	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 34h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DSA_SIG_new
_DSA_SIG_new	proc near
		push	5Dh ; ']'
		push	offset ??_C@_0BI@NEOPHFJO@?4?2crypto?2dsa?2dsa_sign?4c?$AA@ ; ".\\crypto\\dsa\\dsa_sign.c"
		push	8
		call	_CRYPTO_malloc
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_4A
		retn
; ---------------------------------------------------------------------------

loc_4A:					; CODE XREF: _DSA_SIG_new+13j
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		retn
_DSA_SIG_new	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 58h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DSA_do_sign
_DSA_do_sign	proc near

arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_8]
		mov	ecx, [eax+3Ch]
		mov	[esp+arg_8], eax
		mov	eax, [ecx+4]
		jmp	eax
_DSA_do_sign	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 68h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DSA_sign_setup
_DSA_sign_setup	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	ecx, [eax+3Ch]
		mov	[esp+arg_0], eax
		mov	eax, [ecx+8]
		jmp	eax
_DSA_sign_setup	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
; COMDAT (pick any)
		public ??_C@_0BI@NEOPHFJO@?4?2crypto?2dsa?2dsa_sign?4c?$AA@
; `string'
??_C@_0BI@NEOPHFJO@?4?2crypto?2dsa?2dsa_sign?4c?$AA@ db	'.\crypto\dsa\dsa_sign.c',0
					; DATA XREF: _DSA_SIG_new+2o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _CRYPTO_malloc:near ; CODE XREF: _DSA_SIG_new+9p
		extrn _CRYPTO_free:near	; CODE XREF: _DSA_SIG_free+29p
		extrn _BN_free:near	; CODE XREF: _DSA_SIG_free+10p
					; _DSA_SIG_free+20p


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	EF79013376A7D91CBCE86C2A9615984E
; Input	CRC32 :	E76B7FCC

; File Name   :	C:\compspace\Diff\openssl\obj\rsautl.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _rsautl_main
_rsautl_main	proc near

var_2A		= byte ptr -2Ah
var_29		= byte ptr -29h
var_28		= byte ptr -28h
var_27		= byte ptr -27h
var_26		= byte ptr -26h
var_25		= byte ptr -25h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, 2Ch ; ','
		call	__chkstk
		mov	eax, dword ptr ds:_bio_err
		push	ebx
		mov	ebx, [esp+30h+arg_4]
		push	ebp
		push	esi
		push	edi
		mov	edi, [esp+3Ch+arg_0]
		xor	esi, esi
		xor	ebp, ebp
		mov	[esp+3Ch+var_18], 0
		dec	edi
		mov	[esp+3Ch+var_8], 0
		add	ebx, 4
		mov	[esp+3Ch+var_4], 0
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_20], 0
		mov	[esp+3Ch+var_28], 2
		mov	[esp+3Ch+var_2A], 1
		mov	[esp+3Ch+var_24], 3
		mov	[esp+3Ch+var_29], 0
		mov	[esp+3Ch+var_27], 0
		mov	[esp+3Ch+var_25], 0
		mov	[esp+3Ch+var_26], 0
		mov	[esp+3Ch+var_1C], 0
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_14], esi
		test	eax, eax
		jnz	short loc_9F
		push	eax
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	dword ptr ds:_bio_err, eax

loc_9F:					; CODE XREF: _rsautl_main+83j
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	loc_667
		call	_ERR_load_crypto_strings
		call	_OPENSSL_add_all_algorithms_noconf
		mov	byte ptr [esp+3Ch+arg_0], 1
		cmp	edi, 1
		jl	loc_6C5
		nop	word ptr [eax+eax+00h]

loc_D0:					; CODE XREF: _rsautl_main+643j
		mov	esi, [ebx]
		mov	ecx, offset ??_C@_03DAJLOBIG@?9in?$AA@ ; `string'
		mov	eax, esi
		nop	dword ptr [eax+00000000h]

loc_E0:					; CODE XREF: _rsautl_main+FAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_100
		test	dl, dl
		jz	short loc_FC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_100
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_E0

loc_FC:					; CODE XREF: _rsautl_main+E8j
		xor	eax, eax
		jmp	short loc_105
; ---------------------------------------------------------------------------

loc_100:				; CODE XREF: _rsautl_main+E4j
					; _rsautl_main+F0j
		sbb	eax, eax
		or	eax, 1

loc_105:				; CODE XREF: _rsautl_main+FEj
		test	eax, eax
		jnz	short loc_126
		dec	edi
		cmp	edi, 1
		jl	loc_6BE
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+3Ch+var_8], eax
		mov	al, [esp+3Ch+var_29]
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_126:				; CODE XREF: _rsautl_main+107j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, esi
		nop	dword ptr [eax]

loc_130:				; CODE XREF: _rsautl_main+14Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_150
		test	dl, dl
		jz	short loc_14C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_150
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_130

loc_14C:				; CODE XREF: _rsautl_main+138j
		xor	eax, eax
		jmp	short loc_155
; ---------------------------------------------------------------------------

loc_150:				; CODE XREF: _rsautl_main+134j
					; _rsautl_main+140j
		sbb	eax, eax
		or	eax, 1

loc_155:				; CODE XREF: _rsautl_main+14Ej
		test	eax, eax
		jnz	short loc_176
		dec	edi
		cmp	edi, 1
		jl	loc_6BE
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+3Ch+var_4], eax
		mov	al, [esp+3Ch+var_29]
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_176:				; CODE XREF: _rsautl_main+157j
		mov	ecx, offset ??_C@_06JJMGFEBF@?9inkey?$AA@ ; "-inkey"
		mov	eax, esi
		nop	dword ptr [eax]

loc_180:				; CODE XREF: _rsautl_main+19Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1A0
		test	dl, dl
		jz	short loc_19C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1A0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_180

loc_19C:				; CODE XREF: _rsautl_main+188j
		xor	eax, eax
		jmp	short loc_1A5
; ---------------------------------------------------------------------------

loc_1A0:				; CODE XREF: _rsautl_main+184j
					; _rsautl_main+190j
		sbb	eax, eax
		or	eax, 1

loc_1A5:				; CODE XREF: _rsautl_main+19Ej
		test	eax, eax
		jnz	short loc_1C6
		dec	edi
		cmp	edi, 1
		jl	loc_6BE
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+3Ch+var_20], eax
		mov	al, [esp+3Ch+var_29]
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_1C6:				; CODE XREF: _rsautl_main+1A7j
		mov	ecx, offset ??_C@_07KMOOHICO@?9passin?$AA@ ; "-passin"
		mov	eax, esi
		nop	dword ptr [eax]

loc_1D0:				; CODE XREF: _rsautl_main+1EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1F0
		test	dl, dl
		jz	short loc_1EC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1F0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1D0

loc_1EC:				; CODE XREF: _rsautl_main+1D8j
		xor	eax, eax
		jmp	short loc_1F5
; ---------------------------------------------------------------------------

loc_1F0:				; CODE XREF: _rsautl_main+1D4j
					; _rsautl_main+1E0j
		sbb	eax, eax
		or	eax, 1

loc_1F5:				; CODE XREF: _rsautl_main+1EEj
		test	eax, eax
		jnz	short loc_216
		dec	edi
		cmp	edi, 1
		jl	loc_6BE
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+3Ch+var_C], eax
		mov	al, [esp+3Ch+var_29]
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_216:				; CODE XREF: _rsautl_main+1F7j
		mov	ecx, offset ??_C@_08OAHLMBGP@?9keyform?$AA@ ; "-keyform"
		mov	eax, esi
		nop	dword ptr [eax]

loc_220:				; CODE XREF: _rsautl_main+23Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_240
		test	dl, dl
		jz	short loc_23C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_240
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_220

loc_23C:				; CODE XREF: _rsautl_main+228j
		xor	eax, eax
		jmp	short loc_245
; ---------------------------------------------------------------------------

loc_240:				; CODE XREF: _rsautl_main+224j
					; _rsautl_main+230j
		sbb	eax, eax
		or	eax, 1

loc_245:				; CODE XREF: _rsautl_main+23Ej
		test	eax, eax
		jnz	short loc_26E
		dec	edi
		cmp	edi, 1
		jl	loc_6BE
		push	dword ptr [ebx+4]
		add	ebx, 4
		call	_str2fmt
		mov	[esp+40h+var_24], eax
		add	esp, 4
		mov	al, [esp+3Ch+var_29]
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_26E:				; CODE XREF: _rsautl_main+247j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, esi

loc_275:				; CODE XREF: _rsautl_main+28Fj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_295
		test	dl, dl
		jz	short loc_291
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_295
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_275

loc_291:				; CODE XREF: _rsautl_main+27Dj
		xor	eax, eax
		jmp	short loc_29A
; ---------------------------------------------------------------------------

loc_295:				; CODE XREF: _rsautl_main+279j
					; _rsautl_main+285j
		sbb	eax, eax
		or	eax, 1

loc_29A:				; CODE XREF: _rsautl_main+293j
		test	eax, eax
		jnz	short loc_2BB
		dec	edi
		cmp	edi, 1
		jl	loc_6BE
		mov	eax, [ebx+4]
		add	ebx, 4
		mov	[esp+3Ch+var_10], eax
		mov	al, [esp+3Ch+var_29]
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_2BB:				; CODE XREF: _rsautl_main+29Cj
		mov	ecx, offset ??_C@_06NLLOJDKN@?9pubin?$AA@ ; "-pubin"
		mov	eax, esi

loc_2C2:				; CODE XREF: _rsautl_main+2DCj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2E2
		test	dl, dl
		jz	short loc_2DE
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2E2
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2C2

loc_2DE:				; CODE XREF: _rsautl_main+2CAj
		xor	eax, eax
		jmp	short loc_2E7
; ---------------------------------------------------------------------------

loc_2E2:				; CODE XREF: _rsautl_main+2C6j
					; _rsautl_main+2D2j
		sbb	eax, eax
		or	eax, 1

loc_2E7:				; CODE XREF: _rsautl_main+2E0j
		test	eax, eax
		jnz	short loc_2FA
		mov	al, [esp+3Ch+var_29]
		mov	cl, 2
		mov	[esp+3Ch+var_2A], cl
		jmp	loc_63C
; ---------------------------------------------------------------------------

loc_2FA:				; CODE XREF: _rsautl_main+2E9j
		mov	ecx, offset ??_C@_07MBPOKNGC@?9certin?$AA@ ; "-certin"
		mov	eax, esi

loc_301:				; CODE XREF: _rsautl_main+31Bj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_321
		test	dl, dl
		jz	short loc_31D
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_321
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_301

loc_31D:				; CODE XREF: _rsautl_main+309j
		xor	eax, eax
		jmp	short loc_326
; ---------------------------------------------------------------------------

loc_321:				; CODE XREF: _rsautl_main+305j
					; _rsautl_main+311j
		sbb	eax, eax
		or	eax, 1

loc_326:				; CODE XREF: _rsautl_main+31Fj
		test	eax, eax
		jnz	short loc_339
		mov	al, [esp+3Ch+var_29]
		mov	cl, 3
		mov	[esp+3Ch+var_2A], cl
		jmp	loc_63C
; ---------------------------------------------------------------------------

loc_339:				; CODE XREF: _rsautl_main+328j
		mov	ecx, offset ??_C@_0L@MFHFHCDC@?9asn1parse?$AA@ ; "-asn1parse"
		mov	eax, esi

loc_340:				; CODE XREF: _rsautl_main+35Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_360
		test	dl, dl
		jz	short loc_35C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_360
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_340

loc_35C:				; CODE XREF: _rsautl_main+348j
		xor	eax, eax
		jmp	short loc_365
; ---------------------------------------------------------------------------

loc_360:				; CODE XREF: _rsautl_main+344j
					; _rsautl_main+350j
		sbb	eax, eax
		or	eax, 1

loc_365:				; CODE XREF: _rsautl_main+35Ej
		test	eax, eax
		jnz	short loc_377
		mov	al, [esp+3Ch+var_29]
		mov	[esp+3Ch+var_26], 1
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_377:				; CODE XREF: _rsautl_main+367j
		mov	ecx, offset ??_C@_08INKHJOD@?9hexdump?$AA@ ; "-hexdump"
		mov	eax, esi
		xchg	ax, ax

loc_380:				; CODE XREF: _rsautl_main+39Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3A0
		test	dl, dl
		jz	short loc_39C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3A0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_380

loc_39C:				; CODE XREF: _rsautl_main+388j
		xor	eax, eax
		jmp	short loc_3A5
; ---------------------------------------------------------------------------

loc_3A0:				; CODE XREF: _rsautl_main+384j
					; _rsautl_main+390j
		sbb	eax, eax
		or	eax, 1

loc_3A5:				; CODE XREF: _rsautl_main+39Ej
		test	eax, eax
		jnz	short loc_3B7
		mov	al, [esp+3Ch+var_29]
		mov	[esp+3Ch+var_25], 1
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_3B7:				; CODE XREF: _rsautl_main+3A7j
		mov	ecx, offset ??_C@_04OINBMFGG@?9raw?$AA@	; "-raw"
		mov	eax, esi
		xchg	ax, ax

loc_3C0:				; CODE XREF: _rsautl_main+3DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3E0
		test	dl, dl
		jz	short loc_3DC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3E0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3C0

loc_3DC:				; CODE XREF: _rsautl_main+3C8j
		xor	eax, eax
		jmp	short loc_3E5
; ---------------------------------------------------------------------------

loc_3E0:				; CODE XREF: _rsautl_main+3C4j
					; _rsautl_main+3D0j
		sbb	eax, eax
		or	eax, 1

loc_3E5:				; CODE XREF: _rsautl_main+3DEj
		test	eax, eax
		jnz	short loc_3F7
		mov	al, [esp+3Ch+var_29]
		mov	byte ptr [esp+3Ch+arg_0], 3
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_3F7:				; CODE XREF: _rsautl_main+3E7j
		mov	ecx, offset ??_C@_05MNEEIHD@?9oaep?$AA@	; "-oaep"
		mov	eax, esi
		xchg	ax, ax

loc_400:				; CODE XREF: _rsautl_main+41Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_420
		test	dl, dl
		jz	short loc_41C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_420
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_400

loc_41C:				; CODE XREF: _rsautl_main+408j
		xor	eax, eax
		jmp	short loc_425
; ---------------------------------------------------------------------------

loc_420:				; CODE XREF: _rsautl_main+404j
					; _rsautl_main+410j
		sbb	eax, eax
		or	eax, 1

loc_425:				; CODE XREF: _rsautl_main+41Ej
		test	eax, eax
		jnz	short loc_437
		mov	al, [esp+3Ch+var_29]
		mov	byte ptr [esp+3Ch+arg_0], 4
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_437:				; CODE XREF: _rsautl_main+427j
		mov	ecx, offset ??_C@_04OGPJBOIH@?9ssl?$AA@	; "-ssl"
		mov	eax, esi
		xchg	ax, ax

loc_440:				; CODE XREF: _rsautl_main+45Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_460
		test	dl, dl
		jz	short loc_45C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_460
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_440

loc_45C:				; CODE XREF: _rsautl_main+448j
		xor	eax, eax
		jmp	short loc_465
; ---------------------------------------------------------------------------

loc_460:				; CODE XREF: _rsautl_main+444j
					; _rsautl_main+450j
		sbb	eax, eax
		or	eax, 1

loc_465:				; CODE XREF: _rsautl_main+45Ej
		test	eax, eax
		jnz	short loc_477
		mov	al, [esp+3Ch+var_29]
		mov	byte ptr [esp+3Ch+arg_0], 2
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_477:				; CODE XREF: _rsautl_main+467j
		mov	ecx, offset ??_C@_05KOHJIHDF@?9pkcs?$AA@ ; "-pkcs"
		mov	eax, esi
		xchg	ax, ax

loc_480:				; CODE XREF: _rsautl_main+49Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4A0
		test	dl, dl
		jz	short loc_49C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4A0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_480

loc_49C:				; CODE XREF: _rsautl_main+488j
		xor	eax, eax
		jmp	short loc_4A5
; ---------------------------------------------------------------------------

loc_4A0:				; CODE XREF: _rsautl_main+484j
					; _rsautl_main+490j
		sbb	eax, eax
		or	eax, 1

loc_4A5:				; CODE XREF: _rsautl_main+49Ej
		test	eax, eax
		jnz	short loc_4B7
		mov	al, [esp+3Ch+var_29]
		mov	byte ptr [esp+3Ch+arg_0], 1
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_4B7:				; CODE XREF: _rsautl_main+4A7j
		mov	ecx, offset ??_C@_05FBPOAIOK@?9x931?$AA@ ; "-x931"
		mov	eax, esi
		xchg	ax, ax

loc_4C0:				; CODE XREF: _rsautl_main+4DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_4E0
		test	dl, dl
		jz	short loc_4DC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_4E0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_4C0

loc_4DC:				; CODE XREF: _rsautl_main+4C8j
		xor	eax, eax
		jmp	short loc_4E5
; ---------------------------------------------------------------------------

loc_4E0:				; CODE XREF: _rsautl_main+4C4j
					; _rsautl_main+4D0j
		sbb	eax, eax
		or	eax, 1

loc_4E5:				; CODE XREF: _rsautl_main+4DEj
		test	eax, eax
		jnz	short loc_4F7
		mov	al, [esp+3Ch+var_29]
		mov	byte ptr [esp+3Ch+arg_0], 5
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_4F7:				; CODE XREF: _rsautl_main+4E7j
		mov	ecx, offset ??_C@_05LLLFPBKO@?9sign?$AA@ ; "-sign"
		mov	eax, esi
		xchg	ax, ax

loc_500:				; CODE XREF: _rsautl_main+51Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_520
		test	dl, dl
		jz	short loc_51C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_520
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_500

loc_51C:				; CODE XREF: _rsautl_main+508j
		xor	eax, eax
		jmp	short loc_525
; ---------------------------------------------------------------------------

loc_520:				; CODE XREF: _rsautl_main+504j
					; _rsautl_main+510j
		sbb	eax, eax
		or	eax, 1

loc_525:				; CODE XREF: _rsautl_main+51Ej
		test	eax, eax
		jnz	short loc_533
		mov	[esp+3Ch+var_28], 1
		jmp	loc_632
; ---------------------------------------------------------------------------

loc_533:				; CODE XREF: _rsautl_main+527j
		mov	ecx, offset ??_C@_07FILEFCOC@?9verify?$AA@ ; "-verify"
		mov	eax, esi
		nop	word ptr [eax+eax+00h]

loc_540:				; CODE XREF: _rsautl_main+55Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_560
		test	dl, dl
		jz	short loc_55C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_560
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_540

loc_55C:				; CODE XREF: _rsautl_main+548j
		xor	eax, eax
		jmp	short loc_565
; ---------------------------------------------------------------------------

loc_560:				; CODE XREF: _rsautl_main+544j
					; _rsautl_main+550j
		sbb	eax, eax
		or	eax, 1

loc_565:				; CODE XREF: _rsautl_main+55Ej
		test	eax, eax
		jnz	short loc_577
		mov	al, [esp+3Ch+var_29]
		mov	[esp+3Ch+var_28], 2
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_577:				; CODE XREF: _rsautl_main+567j
		mov	ecx, offset ??_C@_04PGMDFMPL@?9rev?$AA@	; "-rev"
		mov	eax, esi
		xchg	ax, ax

loc_580:				; CODE XREF: _rsautl_main+59Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5A0
		test	dl, dl
		jz	short loc_59C
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5A0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_580

loc_59C:				; CODE XREF: _rsautl_main+588j
		xor	eax, eax
		jmp	short loc_5A5
; ---------------------------------------------------------------------------

loc_5A0:				; CODE XREF: _rsautl_main+584j
					; _rsautl_main+590j
		sbb	eax, eax
		or	eax, 1

loc_5A5:				; CODE XREF: _rsautl_main+59Ej
		test	eax, eax
		jnz	short loc_5B7
		mov	al, [esp+3Ch+var_29]
		mov	[esp+3Ch+var_27], 1
		jmp	loc_638
; ---------------------------------------------------------------------------

loc_5B7:				; CODE XREF: _rsautl_main+5A7j
		mov	ecx, offset ??_C@_08CNCNOCCN@?9encrypt?$AA@ ; "-encrypt"
		mov	eax, esi
		xchg	ax, ax

loc_5C0:				; CODE XREF: _rsautl_main+5DAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_5E0
		test	dl, dl
		jz	short loc_5DC
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_5E0
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_5C0

loc_5DC:				; CODE XREF: _rsautl_main+5C8j
		xor	eax, eax
		jmp	short loc_5E5
; ---------------------------------------------------------------------------

loc_5E0:				; CODE XREF: _rsautl_main+5C4j
					; _rsautl_main+5D0j
		sbb	eax, eax
		or	eax, 1

loc_5E5:				; CODE XREF: _rsautl_main+5DEj
		test	eax, eax
		jnz	short loc_5F4
		mov	al, [esp+3Ch+var_29]
		mov	[esp+3Ch+var_28], 3
		jmp	short loc_638
; ---------------------------------------------------------------------------

loc_5F4:				; CODE XREF: _rsautl_main+5E7j
		mov	eax, offset ??_C@_08ODIALGEJ@?9decrypt?$AA@ ; "-decrypt"
		nop	dword ptr [eax+00000000h]

loc_600:				; CODE XREF: _rsautl_main+61Aj
		mov	cl, [esi]
		cmp	cl, [eax]
		jnz	short loc_620
		test	cl, cl
		jz	short loc_61C
		mov	cl, [esi+1]
		cmp	cl, [eax+1]
		jnz	short loc_620
		add	esi, 2
		add	eax, 2
		test	cl, cl
		jnz	short loc_600

loc_61C:				; CODE XREF: _rsautl_main+608j
		xor	eax, eax
		jmp	short loc_625
; ---------------------------------------------------------------------------

loc_620:				; CODE XREF: _rsautl_main+604j
					; _rsautl_main+610j
		sbb	eax, eax
		or	eax, 1

loc_625:				; CODE XREF: _rsautl_main+61Ej
		test	eax, eax
		jnz	loc_6BE
		mov	[esp+3Ch+var_28], 4

loc_632:				; CODE XREF: _rsautl_main+52Ej
		mov	al, 1
		mov	[esp+3Ch+var_29], al

loc_638:				; CODE XREF: _rsautl_main+121j
					; _rsautl_main+171j ...
		mov	cl, [esp+3Ch+var_2A]

loc_63C:				; CODE XREF: _rsautl_main+2F5j
					; _rsautl_main+334j
		dec	edi
		add	ebx, 4
		cmp	edi, 1
		jge	loc_D0
		test	al, al
		jz	short loc_6C5
		cmp	cl, 1
		jz	short loc_6C5
		push	offset ??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@ ; "A private key is needed for this operat"...

loc_657:				; CODE XREF: _rsautl_main+6FCj
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8

loc_665:				; CODE XREF: _rsautl_main+6C3j
					; _rsautl_main+7ECj
		xor	esi, esi

loc_667:				; CODE XREF: _rsautl_main+ACj
		xor	edi, edi

loc_669:				; CODE XREF: _rsautl_main+87Ej
					; _rsautl_main+9C8j
		mov	ebx, 1

$end$214:				; CODE XREF: _rsautl_main+9ECj
					; _rsautl_main+A00j ...
		push	[esp+3Ch+var_1C]
		call	_RSA_free
		push	[esp+40h+var_18]
		call	_BIO_free
		push	edi
		call	_BIO_free_all
		add	esp, 0Ch
		test	ebp, ebp
		jz	short loc_696
		push	ebp
		call	_CRYPTO_free
		add	esp, 4

loc_696:				; CODE XREF: _rsautl_main+68Bj
		test	esi, esi
		jz	short loc_6A3
		push	esi
		call	_CRYPTO_free
		add	esp, 4

loc_6A3:				; CODE XREF: _rsautl_main+698j
		mov	ecx, [esp+3Ch+var_14]
		test	ecx, ecx
		jz	short loc_6B4
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_6B4:				; CODE XREF: _rsautl_main+6A9j
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, ebx
		pop	ebx
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6BE:				; CODE XREF: _rsautl_main+10Dj
					; _rsautl_main+15Dj ...
		call	_usage
		jmp	short loc_665
; ---------------------------------------------------------------------------

loc_6C5:				; CODE XREF: _rsautl_main+C4j
					; _rsautl_main+64Bj ...
		push	0
		push	[esp+40h+var_10]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		push	0
		mov	esi, eax
		lea	eax, [esp+4Ch+var_14]
		push	eax
		push	0
		push	[esp+54h+var_C]
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 20h
		test	eax, eax
		jnz	short loc_701
		push	offset ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; "Error getting password\n"
		jmp	loc_657
; ---------------------------------------------------------------------------

loc_701:				; CODE XREF: _rsautl_main+6F5j
		push	0
		push	dword ptr ds:_bio_err
		push	0
		call	_app_RAND_load_file
		movsx	eax, [esp+48h+var_2A]
		add	esp, 0Ch
		sub	eax, 1
		jz	short loc_780
		sub	eax, 1
		jz	short loc_761
		sub	eax, 1
		jnz	loc_7A8
		push	offset ??_C@_0M@KDOEPPNO@Certificate?$AA@ ; "Certificate"
		push	esi
		push	eax
		push	[esp+48h+var_24]
		push	[esp+4Ch+var_20]
		push	dword ptr ds:_bio_err
		call	_load_cert
		mov	edi, eax
		add	esp, 18h
		test	edi, edi
		jz	short loc_7A8
		push	edi
		call	_X509_get_pubkey
		push	edi
		mov	esi, eax
		call	_X509_free
		add	esp, 8
		jmp	short loc_7A4
; ---------------------------------------------------------------------------

loc_761:				; CODE XREF: _rsautl_main+720j
		push	offset ??_C@_0L@KEAMIOLD@Public?5Key?$AA@ ; "Public Key"
		push	esi
		push	0
		push	0
		push	[esp+4Ch+var_24]
		push	[esp+50h+var_20]
		push	dword ptr ds:_bio_err
		call	_load_pubkey
		jmp	short loc_79F
; ---------------------------------------------------------------------------

loc_780:				; CODE XREF: _rsautl_main+71Bj
		push	offset ??_C@_0M@NBDOOMPD@Private?5Key?$AA@ ; "Private Key"
		push	esi
		push	[esp+44h+var_14]
		push	0
		push	[esp+4Ch+var_24]
		push	[esp+50h+var_20]
		push	dword ptr ds:_bio_err
		call	_load_key

loc_79F:				; CODE XREF: _rsautl_main+77Ej
		mov	esi, eax
		add	esp, 1Ch

loc_7A4:				; CODE XREF: _rsautl_main+75Fj
		test	esi, esi
		jnz	short loc_7B5

loc_7A8:				; CODE XREF: _rsautl_main+725j
					; _rsautl_main+74Cj
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, 1
		pop	ebx
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_7B5:				; CODE XREF: _rsautl_main+7A6j
		push	esi
		call	_EVP_PKEY_get1_RSA
		mov	ebx, eax
		push	esi
		mov	[esp+44h+var_1C], ebx
		call	_EVP_PKEY_free
		add	esp, 8
		test	ebx, ebx
		jnz	short loc_7F1
		push	offset ??_C@_0BH@CIFBFEOC@Error?5getting?5RSA?5key?6?$AA@ ; "Error getting RSA key\n"

loc_7D3:				; CODE XREF: _rsautl_main+816j
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_665
; ---------------------------------------------------------------------------

loc_7F1:				; CODE XREF: _rsautl_main+7CCj
		mov	eax, [esp+3Ch+var_8]
		test	eax, eax
		jz	short loc_818
		push	offset ??_C@_02JDPG@rb?$AA@ ; `string'
		push	eax
		call	_BIO_new_file
		mov	ecx, eax
		add	esp, 8
		mov	[esp+3Ch+var_18], ecx
		test	ecx, ecx
		jnz	short loc_836
		push	offset ??_C@_0BK@BIPALIPH@Error?5Reading?5Input?5File?6?$AA@ ; "Error Reading Input File\n"
		jmp	short loc_7D3
; ---------------------------------------------------------------------------

loc_818:				; CODE XREF: _rsautl_main+7F7j
		mov	esi, dword ptr ds:__imp____acrt_iob_func
		push	0
		push	0
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+3Ch+var_18], eax
		jmp	short loc_83C
; ---------------------------------------------------------------------------

loc_836:				; CODE XREF: _rsautl_main+80Fj
		mov	esi, dword ptr ds:__imp____acrt_iob_func

loc_83C:				; CODE XREF: _rsautl_main+834j
		mov	eax, [esp+3Ch+var_4]
		test	eax, eax
		jz	short loc_883
		push	offset ??_C@_02GMLFBBN@wb?$AA@ ; `string'
		push	eax
		call	_BIO_new_file
		add	esp, 8
		mov	[esp+3Ch+arg_4], eax
		test	eax, eax
		jnz	short loc_899
		push	offset ??_C@_0BL@NHPKPBMO@Error?5Writing?5Output?5File?6?$AA@ ;	"Error Writing Output File\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	edi, [esp+48h+arg_4]
		add	esp, 0Ch
		xor	esi, esi
		jmp	loc_669
; ---------------------------------------------------------------------------

loc_883:				; CODE XREF: _rsautl_main+842j
		push	0
		push	1
		call	esi ; __imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	[esp+3Ch+arg_4], eax

loc_899:				; CODE XREF: _rsautl_main+858j
		push	ebx
		call	_RSA_size
		mov	esi, eax
		push	10Dh
		push	offset ??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@ ; ".\\apps\\rsautl.c"
		lea	edi, [esi+esi]
		push	edi
		call	_CRYPTO_malloc
		push	10Eh
		push	offset ??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@ ; ".\\apps\\rsautl.c"
		push	esi
		mov	ebp, eax
		call	_CRYPTO_malloc
		add	esp, 1Ch
		mov	esi, eax
		mov	[esp+3Ch+var_4], esi
		test	ebp, ebp
		jz	loc_A28
		test	esi, esi
		jz	loc_A28
		push	edi
		push	ebp
		push	[esp+44h+var_18]
		call	_BIO_read
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jns	short $LN213
		push	offset ??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@ ; "Error reading input Data\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------

$LN213:					; CODE XREF: _rsautl_main+8F1j
		cmp	[esp+3Ch+var_27], 0
		jz	short loc_94B
		mov	eax, edi
		xor	esi, esi
		cdq
		sub	eax, edx
		mov	ebx, eax
		sar	ebx, 1
		test	ebx, ebx
		jle	short loc_943
		lea	edx, [ebp-1]
		add	edx, edi
		nop	dword ptr [eax+00000000h]

loc_930:				; CODE XREF: _rsautl_main+941j
		mov	al, [edx]
		lea	edx, [edx-1]
		mov	cl, [esi+ebp]
		mov	[esi+ebp], al
		inc	esi
		mov	[edx+1], cl
		cmp	esi, ebx
		jl	short loc_930

loc_943:				; CODE XREF: _rsautl_main+922j
		mov	ebx, [esp+3Ch+var_1C]
		mov	esi, [esp+3Ch+var_4]

loc_94B:				; CODE XREF: _rsautl_main+913j
		movsx	eax, [esp+3Ch+var_28]
		dec	eax
		cmp	eax, 3		; switch 4 cases
		ja	short loc_9CD	; jumptable 00000956 default case
		jmp	ds:$LN212[eax*4] ; switch jump
; ---------------------------------------------------------------------------

$LN84:					; CODE XREF: _rsautl_main+956j
					; DATA XREF: .text$mn:$LN212o
		movzx	eax, byte ptr [esp+3Ch+arg_0] ;	jumptable 00000956 case	1
		push	eax
		push	ebx
		push	esi
		push	ebp
		push	edi
		call	_RSA_public_decrypt
		jmp	short loc_99F
; ---------------------------------------------------------------------------

$LN85:					; CODE XREF: _rsautl_main+956j
					; DATA XREF: .text$mn:$LN212o
		movzx	eax, byte ptr [esp+3Ch+arg_0] ;	jumptable 00000956 case	0
		push	eax
		push	ebx
		push	esi
		push	ebp
		push	edi
		call	_RSA_private_encrypt
		jmp	short loc_99F
; ---------------------------------------------------------------------------

$LN86:					; CODE XREF: _rsautl_main+956j
					; DATA XREF: .text$mn:$LN212o
		movzx	eax, byte ptr [esp+3Ch+arg_0] ;	jumptable 00000956 case	2
		push	eax
		push	ebx
		push	esi
		push	ebp
		push	edi
		call	_RSA_public_encrypt
		jmp	short loc_99F
; ---------------------------------------------------------------------------

$LN87:					; CODE XREF: _rsautl_main+956j
					; DATA XREF: .text$mn:$LN212o
		movzx	eax, byte ptr [esp+3Ch+arg_0] ;	jumptable 00000956 case	3
		push	eax
		push	ebx
		push	esi
		push	ebp
		push	edi
		call	_RSA_private_decrypt

loc_99F:				; CODE XREF: _rsautl_main+96Cj
					; _rsautl_main+97Dj ...
		add	esp, 14h
		test	eax, eax
		jns	short loc_9CF
		push	offset ??_C@_0BF@IJKBEFJ@RSA?5operation?5error?6?$AA@ ;	"RSA operation error\n"

loc_9AB:				; CODE XREF: _rsautl_main+A2Dj
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		mov	edi, [esp+48h+arg_4]
		add	esp, 0Ch
		jmp	loc_669
; ---------------------------------------------------------------------------

loc_9CD:				; CODE XREF: _rsautl_main+954j
		xor	eax, eax	; jumptable 00000956 default case

loc_9CF:				; CODE XREF: _rsautl_main+9A4j
		mov	edi, [esp+3Ch+arg_4]
		xor	ebx, ebx
		cmp	[esp+3Ch+var_26], bl
		jz	short loc_A05
		push	0FFFFFFFFh
		push	1
		push	eax
		push	esi
		push	edi
		call	_ASN1_parse_dump
		add	esp, 14h
		test	eax, eax
		jnz	$end$214
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 4
		jmp	$end$214
; ---------------------------------------------------------------------------

loc_A05:				; CODE XREF: _rsautl_main+9D9j
		push	eax
		push	esi
		push	edi
		cmp	[esp+48h+var_25], bl
		jz	short loc_A1B
		call	_BIO_dump
		add	esp, 0Ch
		jmp	$end$214
; ---------------------------------------------------------------------------

loc_A1B:				; CODE XREF: _rsautl_main+A0Cj
		call	_BIO_write
		add	esp, 0Ch
		jmp	$end$214
; ---------------------------------------------------------------------------

loc_A28:				; CODE XREF: _rsautl_main+8D1j
					; _rsautl_main+8D9j
		push	offset ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; "Out of memory\n"
		jmp	loc_9AB
_rsautl_main	endp

; ---------------------------------------------------------------------------
$LN211		db 66h,	90h
$LN212		dd offset $LN85		; DATA XREF: _rsautl_main+956r
		dd offset $LN84		; jump table for switch	statement
		dd offset $LN86
		dd offset $LN87
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A44h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_usage		proc near		; CODE XREF: _rsautl_main:loc_6BEp
		push	offset ??_C@_0BJ@CJCIBPFK@Usage?3?5rsautl?5?$FLoptions?$FN?6?$AA@ ; "Usage: rsautl [options]\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; "-in file	  input	file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ ; "-out file	  output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@ ; "-inkey file     input key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@ ; "-keyform	arg    private key format - de"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@DHKMHDEJ@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5an?5RSA?5@ ; "-pubin	      input is an RSA public\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0ED@HLHMIBOL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@ ; "-certin	    input is a certificate "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CE@JBMJBJAM@?9ssl?5?5?5?5?5?5?5?5?5?5?5?5use?5SSL?5v2?5paddi@ ; "-ssl	       use SSL v2 padding\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CA@PACKEBFF@?9raw?5?5?5?5?5?5?5?5?5?5?5?5use?5no?5padding?6?$AA@ ; "-raw		  use no padding\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DD@PPFPKNBP@?9pkcs?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5v1?45?5@ ; "-pkcs		  use PKCS#1 v1.5 padding"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CB@EIDBDHNL@?9oaep?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5OAEP?6@ ;	"-oaep		 use PKCS#1 OAEP\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@ ; "-sign	     sign with private key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@	; "-verify	   verify with public key\"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@ ; "-encrypt	  encrypt with public key"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@ ; "-decrypt	  decrypt with private ke"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@	; "-hexdump	   hex dump output\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ ; "-engine e	    use	engine e, possibly "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CD@GDBFCBOE@?9passin?5arg?5?5?5?5pass?5phrase?5sourc@ ; "-passin arg    pass phrase source\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 10h
		retn
_usage		endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B70h
; COMDAT (pick any)
		public ??_C@_03DAJLOBIG@?9in?$AA@
; `string'
??_C@_03DAJLOBIG@?9in?$AA@ dd 6E692Dh	; DATA XREF: _rsautl_main+D2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B74h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _rsautl_main:loc_126o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B7Ch
; COMDAT (pick any)
		public ??_C@_06JJMGFEBF@?9inkey?$AA@
; `string'
??_C@_06JJMGFEBF@?9inkey?$AA@ db '-inkey',0 ; DATA XREF: _rsautl_main:loc_176o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B84h
; COMDAT (pick any)
		public ??_C@_07KMOOHICO@?9passin?$AA@
; `string'
??_C@_07KMOOHICO@?9passin?$AA@ db '-passin',0 ; DATA XREF: _rsautl_main:loc_1C6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8Ch
; COMDAT (pick any)
		public ??_C@_08OAHLMBGP@?9keyform?$AA@
; `string'
??_C@_08OAHLMBGP@?9keyform?$AA@	db '-keyform',0 ; DATA XREF: _rsautl_main:loc_216o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B98h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _rsautl_main:loc_26Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA0h
; COMDAT (pick any)
		public ??_C@_06NLLOJDKN@?9pubin?$AA@
; `string'
??_C@_06NLLOJDKN@?9pubin?$AA@ db '-pubin',0 ; DATA XREF: _rsautl_main:loc_2BBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA8h
; COMDAT (pick any)
		public ??_C@_07MBPOKNGC@?9certin?$AA@
; `string'
??_C@_07MBPOKNGC@?9certin?$AA@ db '-certin',0 ; DATA XREF: _rsautl_main:loc_2FAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BB0h
; COMDAT (pick any)
		public ??_C@_0L@MFHFHCDC@?9asn1parse?$AA@
; `string'
??_C@_0L@MFHFHCDC@?9asn1parse?$AA@ db '-asn1parse',0 ; DATA XREF: _rsautl_main:loc_339o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BBCh
; COMDAT (pick any)
		public ??_C@_08INKHJOD@?9hexdump?$AA@
; `string'
??_C@_08INKHJOD@?9hexdump?$AA@ db '-hexdump',0 ; DATA XREF: _rsautl_main:loc_377o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BC8h
; COMDAT (pick any)
		public ??_C@_04OINBMFGG@?9raw?$AA@
; `string'
??_C@_04OINBMFGG@?9raw?$AA@ db '-raw',0 ; DATA XREF: _rsautl_main:loc_3B7o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BD0h
; COMDAT (pick any)
		public ??_C@_05MNEEIHD@?9oaep?$AA@
; `string'
??_C@_05MNEEIHD@?9oaep?$AA@ db '-oaep',0 ; DATA XREF: _rsautl_main:loc_3F7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BD8h
; COMDAT (pick any)
		public ??_C@_04OGPJBOIH@?9ssl?$AA@
; `string'
??_C@_04OGPJBOIH@?9ssl?$AA@ db '-ssl',0 ; DATA XREF: _rsautl_main:loc_437o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BE0h
; COMDAT (pick any)
		public ??_C@_05KOHJIHDF@?9pkcs?$AA@
; `string'
??_C@_05KOHJIHDF@?9pkcs?$AA@ db	'-pkcs',0 ; DATA XREF: _rsautl_main:loc_477o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BE8h
; COMDAT (pick any)
		public ??_C@_05FBPOAIOK@?9x931?$AA@
; `string'
??_C@_05FBPOAIOK@?9x931?$AA@ db	'-x931',0 ; DATA XREF: _rsautl_main:loc_4B7o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BF0h
; COMDAT (pick any)
		public ??_C@_05LLLFPBKO@?9sign?$AA@
; `string'
??_C@_05LLLFPBKO@?9sign?$AA@ db	'-sign',0 ; DATA XREF: _rsautl_main:loc_4F7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BF8h
; COMDAT (pick any)
		public ??_C@_07FILEFCOC@?9verify?$AA@
; `string'
??_C@_07FILEFCOC@?9verify?$AA@ db '-verify',0 ; DATA XREF: _rsautl_main:loc_533o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C00h
; COMDAT (pick any)
		public ??_C@_04PGMDFMPL@?9rev?$AA@
; `string'
??_C@_04PGMDFMPL@?9rev?$AA@ db '-rev',0 ; DATA XREF: _rsautl_main:loc_577o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C08h
; COMDAT (pick any)
		public ??_C@_08CNCNOCCN@?9encrypt?$AA@
; `string'
??_C@_08CNCNOCCN@?9encrypt?$AA@	db '-encrypt',0 ; DATA XREF: _rsautl_main:loc_5B7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C14h
; COMDAT (pick any)
		public ??_C@_08ODIALGEJ@?9decrypt?$AA@
; `string'
??_C@_08ODIALGEJ@?9decrypt?$AA@	db '-decrypt',0 ; DATA XREF: _rsautl_main:loc_5F4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C20h
; COMDAT (pick any)
		public ??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@
; `string'
??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@ db 'A private key is needed for this operation',0Ah,0
					; DATA XREF: _rsautl_main+652o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4Ch
; COMDAT (pick any)
		public ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; `string'
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ db 'Error getting password',0Ah,0
					; DATA XREF: _rsautl_main+6F7o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C64h
; COMDAT (pick any)
		public ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
; `string'
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ db 'Private Key',0 ; DATA XREF: _rsautl_main:loc_780o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C70h
; COMDAT (pick any)
		public ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
; `string'
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ db 'Public Key',0 ; DATA XREF: _rsautl_main:loc_761o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C7Ch
; COMDAT (pick any)
		public ??_C@_0M@KDOEPPNO@Certificate?$AA@
; `string'
??_C@_0M@KDOEPPNO@Certificate?$AA@ db 'Certificate',0 ; DATA XREF: _rsautl_main+72Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C88h
; COMDAT (pick any)
		public ??_C@_0BH@CIFBFEOC@Error?5getting?5RSA?5key?6?$AA@
; `string'
??_C@_0BH@CIFBFEOC@Error?5getting?5RSA?5key?6?$AA@ db 'Error getting RSA key',0Ah,0
					; DATA XREF: _rsautl_main+7CEo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CA0h
; COMDAT (pick any)
		public ??_C@_02JDPG@rb?$AA@
; `string'
??_C@_02JDPG@rb?$AA@ db	72h, 62h, 0	; DATA XREF: _rsautl_main+7F9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CA4h
; COMDAT (pick any)
		public ??_C@_0BK@BIPALIPH@Error?5Reading?5Input?5File?6?$AA@
; `string'
??_C@_0BK@BIPALIPH@Error?5Reading?5Input?5File?6?$AA@ db 'Error Reading Input File',0Ah,0
					; DATA XREF: _rsautl_main+811o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CC0h
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 77h,	62h, 0	; DATA XREF: _rsautl_main+844o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CC4h
; COMDAT (pick any)
		public ??_C@_0BL@NHPKPBMO@Error?5Writing?5Output?5File?6?$AA@
; `string'
??_C@_0BL@NHPKPBMO@Error?5Writing?5Output?5File?6?$AA@ db 'Error Writing Output File',0Ah,0
					; DATA XREF: _rsautl_main+85Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CE0h
; COMDAT (pick any)
		public ??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@
; `string'
??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@ db '.\apps\rsautl.c',0
					; DATA XREF: _rsautl_main+8A6o
					; _rsautl_main+8B9o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CF0h
; COMDAT (pick any)
		public ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
; `string'
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ db 'Out of memory',0Ah,0
					; DATA XREF: _rsautl_main:loc_A28o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D00h
; COMDAT (pick any)
		public ??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@
; `string'
??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@ db 'Error reading input Data',0Ah,0
					; DATA XREF: _rsautl_main+8F3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D1Ch
; COMDAT (pick any)
		public ??_C@_0BF@IJKBEFJ@RSA?5operation?5error?6?$AA@
; `string'
??_C@_0BF@IJKBEFJ@RSA?5operation?5error?6?$AA@ db 'RSA operation error',0Ah,0
					; DATA XREF: _rsautl_main+9A6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D34h
; COMDAT (pick any)
		public ??_C@_0BJ@CJCIBPFK@Usage?3?5rsautl?5?$FLoptions?$FN?6?$AA@
; `string'
??_C@_0BJ@CJCIBPFK@Usage?3?5rsautl?5?$FLoptions?$FN?6?$AA@ db 'Usage: rsautl [options]',0Ah,0
					; DATA XREF: _usageo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D50h
; COMDAT (pick any)
		public ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
; `string'
??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@	db '-in file        input file',0Ah,0
					; DATA XREF: _usage+10o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D6Ch
; COMDAT (pick any)
		public ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@	db '-out file       output file',0Ah,0
					; DATA XREF: _usage+20o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8Ch
; COMDAT (pick any)
		public ??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@
; `string'
??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@ db '-inkey file     input key',0Ah,0
					; DATA XREF: _usage+30o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DA8h
; COMDAT (pick any)
		public ??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@
; `string'
??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@ db	'-keyform arg    private key format - default PEM',0Ah,0
					; DATA XREF: _usage+40o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DDCh
; COMDAT (pick any)
		public ??_C@_0CI@DHKMHDEJ@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5an?5RSA?5@
; `string'
??_C@_0CI@DHKMHDEJ@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5an?5RSA?5@ db '-pubin          input is an RSA public',0Ah,0
					; DATA XREF: _usage+50o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0E04h
; COMDAT (pick any)
		public ??_C@_0ED@HLHMIBOL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@
; `string'
??_C@_0ED@HLHMIBOL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@ db '-certin         input is a certificate carrying an RSA public key'
					; DATA XREF: _usage+60o
		db 0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E48h
; COMDAT (pick any)
		public ??_C@_0CE@JBMJBJAM@?9ssl?5?5?5?5?5?5?5?5?5?5?5?5use?5SSL?5v2?5paddi@
; `string'
??_C@_0CE@JBMJBJAM@?9ssl?5?5?5?5?5?5?5?5?5?5?5?5use?5SSL?5v2?5paddi@ db	'-ssl            use SSL v2 padding',0Ah,0
					; DATA XREF: _usage+70o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E6Ch
; COMDAT (pick any)
		public ??_C@_0CA@PACKEBFF@?9raw?5?5?5?5?5?5?5?5?5?5?5?5use?5no?5padding?6?$AA@
; `string'
??_C@_0CA@PACKEBFF@?9raw?5?5?5?5?5?5?5?5?5?5?5?5use?5no?5padding?6?$AA@	db '-raw            use no padding',0Ah,0
					; DATA XREF: _usage+83o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8Ch
; COMDAT (pick any)
		public ??_C@_0DD@PPFPKNBP@?9pkcs?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5v1?45?5@
; `string'
??_C@_0DD@PPFPKNBP@?9pkcs?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5v1?45?5@	db '-pkcs           use PKCS#1 v1.5 padding (default)',0Ah,0
					; DATA XREF: _usage+93o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EC0h
; COMDAT (pick any)
		public ??_C@_0CB@EIDBDHNL@?9oaep?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5OAEP?6@
; `string'
??_C@_0CB@EIDBDHNL@?9oaep?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5OAEP?6@ db '-oaep           use PKCS#1 OAEP',0Ah,0
					; DATA XREF: _usage+A3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0EE4h
; COMDAT (pick any)
		public ??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@
; `string'
??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@ db '-sign           sign with private key',0Ah,0
					; DATA XREF: _usage+B3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0Ch
; COMDAT (pick any)
		public ??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@
; `string'
??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@ db '-verify         verify with public key',0Ah,0
					; DATA XREF: _usage+C3o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F34h
; COMDAT (pick any)
		public ??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@
; `string'
??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@	db '-encrypt        encrypt with public key',0Ah,0
					; DATA XREF: _usage+D3o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F60h
; COMDAT (pick any)
		public ??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@
; `string'
??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@	db '-decrypt        decrypt with private key',0Ah,0
					; DATA XREF: _usage+E3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F8Ch
; COMDAT (pick any)
		public ??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@
; `string'
??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@ db '-hexdump        hex dump output',0Ah,0
					; DATA XREF: _usage+F3o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FB0h
; COMDAT (pick any)
		public ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
; `string'
??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ db '-engine e       use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _usage+106o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0FECh
; COMDAT (pick any)
		public ??_C@_0CD@GDBFCBOE@?9passin?5arg?5?5?5?5pass?5phrase?5sourc@
; `string'
??_C@_0CD@GDBFCBOE@?9passin?5arg?5?5?5?5pass?5phrase?5sourc@ db	'-passin arg    pass phrase source',0Ah,0
					; DATA XREF: _usage+116o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _rsautl_main+88p
					; _rsautl_main+822p ...
; void __cdecl __noreturn _exit(int Code)
		extrn __imp__exit:near	; CODE XREF: _rsautl_main+908p
					; DATA XREF: _rsautl_main+908r
		extrn _CRYPTO_malloc:near ; CODE XREF: _rsautl_main+8AFp
					; _rsautl_main+8C1p
		extrn _CRYPTO_free:near	; CODE XREF: _rsautl_main+68Ep
					; _rsautl_main+69Bp ...
		extrn _BIO_new_file:near ; CODE	XREF: _rsautl_main+7FFp
					; _rsautl_main+84Ap
		extrn _BIO_new_fp:near	; CODE XREF: _rsautl_main+92p
					; _rsautl_main+828p ...
		extrn _BIO_free:near	; CODE XREF: _rsautl_main+67Bp
		extrn _BIO_read:near	; CODE XREF: _rsautl_main+8E5p
		extrn _BIO_write:near	; CODE XREF: _rsautl_main:loc_A1Bp
		extrn _BIO_free_all:near ; CODE	XREF: _rsautl_main+681p
		extrn _BIO_dump:near	; CODE XREF: _rsautl_main+A0Ep
		extrn _BIO_printf:near	; CODE XREF: _rsautl_main+65Dp
					; _rsautl_main+7D9p ...
		extrn _ASN1_parse_dump:near ; CODE XREF: _rsautl_main+9E2p
		extrn _OPENSSL_add_all_algorithms_noconf:near ;	CODE XREF: _rsautl_main+B7p
		extrn _EVP_PKEY_get1_RSA:near ;	CODE XREF: _rsautl_main+7B6p
		extrn _EVP_PKEY_free:near ; CODE XREF: _rsautl_main+7C2p
		extrn _RSA_size:near	; CODE XREF: _rsautl_main+89Ap
		extrn _RSA_public_encrypt:near ; CODE XREF: _rsautl_main+989p
		extrn _RSA_private_encrypt:near	; CODE XREF: _rsautl_main+978p
		extrn _RSA_public_decrypt:near ; CODE XREF: _rsautl_main+967p
		extrn _RSA_private_decrypt:near	; CODE XREF: _rsautl_main+99Ap
		extrn _RSA_free:near	; CODE XREF: _rsautl_main+672p
		extrn _X509_free:near	; CODE XREF: _rsautl_main+757p
		extrn _X509_get_pubkey:near ; CODE XREF: _rsautl_main+74Fp
		extrn _ERR_print_errors:near ; CODE XREF: _rsautl_main+7E4p
					; _rsautl_main+870p ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _rsautl_main+B2p
		extrn _app_RAND_load_file:near ; CODE XREF: _rsautl_main+70Bp
		extrn _str2fmt:near	; CODE XREF: _rsautl_main+259p
		extrn _app_passwd:near	; CODE XREF: _rsautl_main+6EBp
		extrn _load_cert:near	; CODE XREF: _rsautl_main+740p
		extrn _load_key:near	; CODE XREF: _rsautl_main+79Ap
		extrn _load_pubkey:near	; CODE XREF: _rsautl_main+779p
		extrn _setup_engine:near ; CODE	XREF: _rsautl_main+6D1p
		extrn _load_config:near	; CODE XREF: _rsautl_main+A2p
		extrn __chkstk:near	; CODE XREF: _rsautl_main+5p
		extrn _bio_err:near	; DATA XREF: _rsautl_main+Ar
					; _rsautl_main+9Aw ...


		end

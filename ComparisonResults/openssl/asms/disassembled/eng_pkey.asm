;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	7B7FD2BC5BA7EE932247DAADF32655C2
; Input	CRC32 :	1D23F95F

; File Name   :	C:\compspace\Diff\openssl\obj\eng_pkey.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_get_load_privkey_function
_ENGINE_get_load_privkey_function proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+44h]
		retn
_ENGINE_get_load_privkey_function endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_get_load_pubkey_function
_ENGINE_get_load_pubkey_function proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+48h]
		retn
_ENGINE_get_load_pubkey_function endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_get_ssl_client_cert_function
_ENGINE_get_ssl_client_cert_function proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4Ch]
		retn
_ENGINE_get_ssl_client_cert_function endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 18h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_load_private_key
_ENGINE_load_private_key proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jnz	short loc_3D
		push	6Ah ; 'j'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	43h ; 'C'
		push	96h ; 'ñ'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_3D:					; CODE XREF: _ENGINE_load_private_key+7j
		push	6Dh ; 'm'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		add	esp, 10h
		cmp	dword ptr [esi+5Ch], 0
		jnz	short loc_82
		push	6Fh ; 'o'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		push	70h ; 'p'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	75h ; 'u'
		push	96h ; 'ñ'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 24h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_82:					; CODE XREF: _ENGINE_load_private_key+3Cj
		push	73h ; 's'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		mov	eax, [esi+44h]
		add	esp, 10h
		test	eax, eax
		jnz	short loc_B8
		push	76h ; 'v'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	7Dh ; '}'
		push	96h ; 'ñ'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_B8:					; CODE XREF: _ENGINE_load_private_key+82j
		push	[esp+4+arg_C]
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	esi
		call	eax
		add	esp, 10h
		test	eax, eax
		jnz	short loc_EB
		push	7Ch ; '|'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	80h ; 'Ä'
		push	96h ; 'ñ'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax

loc_EB:					; CODE XREF: _ENGINE_load_private_key+B4j
		pop	esi
		retn
_ENGINE_load_private_key endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_load_public_key
_ENGINE_load_public_key	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jnz	short loc_118
		push	89h ; 'â'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	43h ; 'C'
		push	97h ; 'ó'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_118:				; CODE XREF: _ENGINE_load_public_key+7j
		push	8Ch ; 'å'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		add	esp, 10h
		cmp	dword ptr [esi+5Ch], 0
		jnz	short loc_166
		push	8Eh ; 'é'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		push	8Fh ; 'è'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	75h ; 'u'
		push	97h ; 'ó'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 24h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_166:				; CODE XREF: _ENGINE_load_public_key+42j
		push	92h ; 'í'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		mov	eax, [esi+48h]
		add	esp, 10h
		test	eax, eax
		jnz	short loc_1A2
		push	94h ; 'î'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	7Dh ; '}'
		push	97h ; 'ó'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_1A2:				; CODE XREF: _ENGINE_load_public_key+91j
		push	[esp+4+arg_C]
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	esi
		call	eax
		add	esp, 10h
		test	eax, eax
		jnz	short loc_1D8
		push	9Ah ; 'ö'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	81h ; 'Å'
		push	97h ; 'ó'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax

loc_1D8:				; CODE XREF: _ENGINE_load_public_key+C6j
		pop	esi
		retn
_ENGINE_load_public_key	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1DCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_load_ssl_client_cert
_ENGINE_load_ssl_client_cert proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		push	esi
		mov	esi, [esp+4+arg_0]
		test	esi, esi
		jnz	short loc_204
		push	0A8h ; '®'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	43h ; 'C'
		push	0C2h ; '¬'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_204:				; CODE XREF: _ENGINE_load_ssl_client_cert+7j
		push	0ABh ; '´'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	9
		call	_CRYPTO_lock
		add	esp, 10h
		cmp	dword ptr [esi+5Ch], 0
		jnz	short loc_252
		push	0ADh ; '≠'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		push	0AFh ; 'Ø'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	75h ; 'u'
		push	0C2h ; '¬'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 24h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_252:				; CODE XREF: _ENGINE_load_ssl_client_cert+42j
		push	0B2h ; '≤'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	1Eh
		push	0Ah
		call	_CRYPTO_lock
		mov	eax, [esi+4Ch]
		add	esp, 10h
		test	eax, eax
		jnz	short loc_28E
		push	0B5h ; 'µ'
		push	offset ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@ ; ".\\crypto\\engine\\eng_pkey.c"
		push	7Dh ; '}'
		push	0C2h ; '¬'
		push	26h ; '&'
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_28E:				; CODE XREF: _ENGINE_load_ssl_client_cert+91j
		push	[esp+4+arg_1C]
		push	[esp+8+arg_18]
		push	[esp+0Ch+arg_14]
		push	[esp+10h+arg_10]
		push	[esp+14h+arg_C]
		push	[esp+18h+arg_8]
		push	[esp+1Ch+arg_4]
		push	esi
		call	eax
		add	esp, 20h
		pop	esi
		retn
_ENGINE_load_ssl_client_cert endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_set_load_privkey_function
_ENGINE_set_load_privkey_function proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	ecx, [esp+arg_4]
		mov	[eax+44h], ecx
		mov	eax, 1
		retn
_ENGINE_set_load_privkey_function endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2C8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_set_load_pubkey_function
_ENGINE_set_load_pubkey_function proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	ecx, [esp+arg_4]
		mov	[eax+48h], ecx
		mov	eax, 1
		retn
_ENGINE_set_load_pubkey_function endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2DCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _ENGINE_set_load_ssl_client_cert_function
_ENGINE_set_load_ssl_client_cert_function proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	ecx, [esp+arg_4]
		mov	[eax+4Ch], ecx
		mov	eax, 1
		retn
_ENGINE_set_load_ssl_client_cert_function endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2F0h
; COMDAT (pick any)
		public ??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@
; `string'
??_C@_0BL@JEFADGNM@?4?2crypto?2engine?2eng_pkey?4c?$AA@	db '.\crypto\engine\eng_pkey.c',0
					; DATA XREF: _ENGINE_load_private_key+Bo
					; _ENGINE_load_private_key+27o	...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _CRYPTO_lock:near	; CODE XREF: _ENGINE_load_private_key+30p
					; _ENGINE_load_private_key+49p	...
		extrn _ERR_put_error:near ; CODE XREF: _ENGINE_load_private_key+19p
					; _ENGINE_load_private_key+5Ep	...


		end

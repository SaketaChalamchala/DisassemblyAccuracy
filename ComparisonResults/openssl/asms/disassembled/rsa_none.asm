;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	7619DB3AA58CAEE812E8DADF444AC0ED
; Input	CRC32 :	1AE00A2D

; File Name   :	C:\compspace\Diff\openssl\obj\rsa_none.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl RSA_padding_add_none(void	*Dst, int, void	*Src, size_t Size)
		public _RSA_padding_add_none
_RSA_padding_add_none proc near

Dst		= dword	ptr  4
arg_4		= dword	ptr  8
Src		= dword	ptr  0Ch
Size		= dword	ptr  10h

		mov	eax, [esp+Size]
		mov	ecx, [esp+arg_4]
		cmp	eax, ecx
		jle	short loc_24
		push	45h ; 'E'
		push	offset ??_C@_0BI@POHFMLMI@?4?2crypto?2rsa?2rsa_none?4c?$AA@ ; ".\\crypto\\rsa\\rsa_none.c"
		push	6Eh ; 'n'
		push	6Bh ; 'k'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_24:					; CODE XREF: _RSA_padding_add_none+Aj
		jge	short loc_3E
		push	4Ah ; 'J'
		push	offset ??_C@_0BI@POHFMLMI@?4?2crypto?2rsa?2rsa_none?4c?$AA@ ; ".\\crypto\\rsa\\rsa_none.c"
		push	7Ah ; 'z'
		push	6Bh ; 'k'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_3E:					; CODE XREF: _RSA_padding_add_none:loc_24j
		push	eax		; Size
		push	[esp+4+Src]	; Src
		push	[esp+8+Dst]	; Dst
		call	_memcpy
		add	esp, 0Ch
		mov	eax, 1
		retn
_RSA_padding_add_none endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 58h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl RSA_padding_check_none(void *Dst,	int, void *Src,	size_t Size)
		public _RSA_padding_check_none
_RSA_padding_check_none	proc near

Dst		= dword	ptr  4
arg_4		= dword	ptr  8
Src		= dword	ptr  0Ch
Size		= dword	ptr  10h

		push	ebx
		mov	ebx, [esp+4+arg_4]
		push	edi
		mov	edi, [esp+8+Size]
		cmp	edi, ebx
		jle	short loc_81
		push	57h ; 'W'
		push	offset ??_C@_0BI@POHFMLMI@?4?2crypto?2rsa?2rsa_none?4c?$AA@ ; ".\\crypto\\rsa\\rsa_none.c"
		push	6Dh ; 'm'
		push	6Fh ; 'o'
		push	4
		call	_ERR_put_error
		add	esp, 14h
		or	eax, 0FFFFFFFFh
		pop	edi
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_81:					; CODE XREF: _RSA_padding_check_none+Cj
		push	esi
		mov	esi, [esp+0Ch+Dst]
		mov	eax, ebx
		sub	eax, edi
		push	eax		; Size
		push	0		; Val
		push	esi		; Dst
		call	_memset
		push	edi		; Size
		push	[esp+1Ch+Src]	; Src
		sub	esi, edi
		add	esi, ebx
		push	esi		; Dst
		call	_memcpy
		add	esp, 18h
		mov	eax, ebx
		pop	esi
		pop	edi
		pop	ebx
		retn
_RSA_padding_check_none	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
; COMDAT (pick any)
		public ??_C@_0BI@POHFMLMI@?4?2crypto?2rsa?2rsa_none?4c?$AA@
; `string'
??_C@_0BI@POHFMLMI@?4?2crypto?2rsa?2rsa_none?4c?$AA@ db	'.\crypto\rsa\rsa_none.c',0
					; DATA XREF: _RSA_padding_add_none+Eo
					; _RSA_padding_add_none+28o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ERR_put_error:near ; CODE XREF: _RSA_padding_add_none+19p
					; _RSA_padding_add_none+33p ...
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _RSA_padding_add_none+47p
					; _RSA_padding_check_none+45p
; void *__cdecl	memset(void *Dst, int Val, size_t Size)
		extrn _memset:near	; CODE XREF: _RSA_padding_check_none+36p


		end

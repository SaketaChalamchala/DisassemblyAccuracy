;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	8B1EBC75C95D4B1CEF0CA62D7A6F8B7B
; Input	CRC32 :	49EC0227

; File Name   :	C:\compspace\Diff\openssl\obj\genpkey.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_genpkey_cb	proc near		; DATA XREF: _genpkey_main:loc_66Do

var_1		= byte ptr -1
arg_0		= dword	ptr  4

		mov	eax, 4
		call	__chkstk
		push	edi
		push	[esp+8+arg_0]
		mov	[esp+0Ch+var_1], 2Ah ; '*'
		call	_EVP_PKEY_CTX_get_app_data
		push	0
		push	[esp+10h+arg_0]
		mov	edi, eax
		call	_EVP_PKEY_CTX_get_keygen_info
		mov	ecx, eax
		add	esp, 0Ch
		test	ecx, ecx
		jnz	short loc_36
		mov	[esp+8+var_1], 2Eh ; '.'
		jmp	short loc_62
; ---------------------------------------------------------------------------

loc_36:					; CODE XREF: _genpkey_cb+2Dj
		cmp	ecx, 1
		jnz	short loc_42
		mov	[esp+8+var_1], 2Bh ; '+'
		jmp	short loc_62
; ---------------------------------------------------------------------------

loc_42:					; CODE XREF: _genpkey_cb+39j
		cmp	ecx, 2
		jnz	short loc_4E
		mov	[esp+8+var_1], 2Ah ; '*'
		jmp	short loc_62
; ---------------------------------------------------------------------------

loc_4E:					; CODE XREF: _genpkey_cb+45j
		movzx	eax, [esp+8+var_1]
		cmp	ecx, 3
		mov	edx, 0Ah
		cmovz	eax, edx
		mov	[esp+8+var_1], al

loc_62:					; CODE XREF: _genpkey_cb+34j
					; _genpkey_cb+40j ...
		push	1
		lea	eax, [esp+0Ch+var_1]
		push	eax
		push	edi
		call	_BIO_write
		push	0
		push	0
		push	0Bh
		push	edi
		call	_BIO_ctrl
		add	esp, 1Ch
		mov	eax, 1
		pop	edi
		pop	ecx
		retn
_genpkey_cb	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 88h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _genpkey_main
_genpkey_main	proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		mov	eax, 28h ; '('
		call	__chkstk
		push	ebx
		xor	eax, eax
		mov	[esp+2Ch+var_1C], 0
		push	ebp
		push	esi
		push	edi
		xor	edi, edi
		mov	[esp+38h+var_14], eax
		mov	[esp+38h+var_10], edi
		xor	ebx, ebx
		mov	[esp+38h+var_8], eax
		lea	edi, [eax+1]
		mov	[esp+38h+var_4], eax
		xor	esi, esi
		mov	[esp+38h+var_28], eax
		xor	ebp, ebp
		mov	[esp+38h+var_18], eax
		mov	[esp+38h+var_20], eax
		mov	eax, dword ptr ds:_bio_err
		mov	[esp+38h+var_24], ebx
		test	eax, eax
		jnz	short loc_EE
		push	eax
		push	2
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	dword ptr ds:_bio_err, eax

loc_EE:					; CODE XREF: _genpkey_main+4Aj
		push	0
		push	eax
		call	_load_config
		add	esp, 8
		test	eax, eax
		jz	$end$128
		mov	[esp+38h+var_C], 3
		call	_ERR_load_crypto_strings
		call	_OPENSSL_add_all_algorithms_noconf
		mov	esi, [esp+38h+arg_4]
		add	esi, 4

loc_11A:				; CODE XREF: _genpkey_main+407j
		mov	edi, [esi]
		test	edi, edi
		jz	loc_495
		cmp	byte ptr [edi],	2Dh ; '-'
		jnz	loc_495
		mov	ecx, offset ??_C@_08LPHBEAIF@?9outform?$AA@ ; "-outform"
		mov	eax, edi
		nop	dword ptr [eax+00h]

loc_138:				; CODE XREF: _genpkey_main+CAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_158
		test	dl, dl
		jz	short loc_154
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_158
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_138

loc_154:				; CODE XREF: _genpkey_main+B8j
		xor	eax, eax
		jmp	short loc_15D
; ---------------------------------------------------------------------------

loc_158:				; CODE XREF: _genpkey_main+B4j
					; _genpkey_main+C0j
		sbb	eax, eax
		or	eax, 1

loc_15D:				; CODE XREF: _genpkey_main+CEj
		test	eax, eax
		jnz	short loc_181
		cmp	[esi+4], eax
		jz	loc_2D5
		push	dword ptr [esi+4]
		add	esi, 4
		call	_str2fmt
		add	esp, 4
		mov	[esp+38h+var_C], eax
		jmp	loc_48A
; ---------------------------------------------------------------------------

loc_181:				; CODE XREF: _genpkey_main+D7j
		mov	ecx, offset ??_C@_05NNOCMECB@?9pass?$AA@ ; "-pass"
		mov	eax, edi

loc_188:				; CODE XREF: _genpkey_main+11Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1A8
		test	dl, dl
		jz	short loc_1A4
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1A8
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_188

loc_1A4:				; CODE XREF: _genpkey_main+108j
		xor	eax, eax
		jmp	short loc_1AD
; ---------------------------------------------------------------------------

loc_1A8:				; CODE XREF: _genpkey_main+104j
					; _genpkey_main+110j
		sbb	eax, eax
		or	eax, 1

loc_1AD:				; CODE XREF: _genpkey_main+11Ej
		test	eax, eax
		jnz	short loc_1C7
		add	esi, 4
		cmp	[esi], eax
		jz	$bad$129
		mov	eax, [esi]
		mov	[esp+38h+var_14], eax
		jmp	loc_48A
; ---------------------------------------------------------------------------

loc_1C7:				; CODE XREF: _genpkey_main+127j
		mov	ecx, offset ??_C@_07CECBDAGF@?9engine?$AA@ ; "-engine"
		mov	eax, edi

loc_1CE:				; CODE XREF: _genpkey_main+160j
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_1EE
		test	dl, dl
		jz	short loc_1EA
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_1EE
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_1CE

loc_1EA:				; CODE XREF: _genpkey_main+14Ej
		xor	eax, eax
		jmp	short loc_1F3
; ---------------------------------------------------------------------------

loc_1EE:				; CODE XREF: _genpkey_main+14Aj
					; _genpkey_main+156j
		sbb	eax, eax
		or	eax, 1

loc_1F3:				; CODE XREF: _genpkey_main+164j
		test	eax, eax
		jnz	short loc_21C
		add	esi, 4
		cmp	[esi], eax
		jz	$bad$129
		push	eax
		push	dword ptr [esi]
		push	dword ptr ds:_bio_err
		call	_setup_engine
		add	esp, 0Ch
		mov	[esp+38h+var_1C], eax
		jmp	loc_48A
; ---------------------------------------------------------------------------

loc_21C:				; CODE XREF: _genpkey_main+16Dj
		mov	ecx, offset ??_C@_0L@BKOEMGEG@?9paramfile?$AA@ ; "-paramfile"
		mov	eax, edi
		nop	dword ptr [eax+eax+00h]

loc_228:				; CODE XREF: _genpkey_main+1BAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_248
		test	dl, dl
		jz	short loc_244
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_248
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_228

loc_244:				; CODE XREF: _genpkey_main+1A8j
		xor	eax, eax
		jmp	short loc_24D
; ---------------------------------------------------------------------------

loc_248:				; CODE XREF: _genpkey_main+1A4j
					; _genpkey_main+1B0j
		sbb	eax, eax
		or	eax, 1

loc_24D:				; CODE XREF: _genpkey_main+1BEj
		test	eax, eax
		jnz	short loc_291
		add	esi, 4
		cmp	[esi], eax
		jz	$bad$129
		cmp	[esp+38h+var_20], 1
		jz	$bad$129
		push	[esp+38h+var_1C]
		lea	eax, [esp+3Ch+var_24]
		push	dword ptr [esi]
		push	eax
		push	dword ptr ds:_bio_err
		call	_init_keygen_file
		add	esp, 10h
		test	eax, eax
		jz	loc_4D7
		mov	ebx, [esp+38h+var_24]
		jmp	loc_48A
; ---------------------------------------------------------------------------

loc_291:				; CODE XREF: _genpkey_main+1C7j
		mov	ecx, offset ??_C@_04HKKABCEL@?9out?$AA@	; "-out"
		mov	eax, edi

loc_298:				; CODE XREF: _genpkey_main+22Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_2B8
		test	dl, dl
		jz	short loc_2B4
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_2B8
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_298

loc_2B4:				; CODE XREF: _genpkey_main+218j
		xor	eax, eax
		jmp	short loc_2BD
; ---------------------------------------------------------------------------

loc_2B8:				; CODE XREF: _genpkey_main+214j
					; _genpkey_main+220j
		sbb	eax, eax
		or	eax, 1

loc_2BD:				; CODE XREF: _genpkey_main+22Ej
		test	eax, eax
		jnz	short loc_2DF
		cmp	[esi+4], eax
		jz	short loc_2D5
		mov	eax, [esi+4]
		add	esi, 4
		mov	[esp+38h+var_10], eax
		jmp	loc_48A
; ---------------------------------------------------------------------------

loc_2D5:				; CODE XREF: _genpkey_main+DCj
					; _genpkey_main+23Cj
		mov	ebp, 1
		jmp	loc_48A
; ---------------------------------------------------------------------------

loc_2DF:				; CODE XREF: _genpkey_main+237j
		mov	ecx, offset ??_C@_0L@FKNAAFNM@?9algorithm?$AA@ ; "-algorithm"
		mov	eax, edi
		xchg	ax, ax

loc_2E8:				; CODE XREF: _genpkey_main+27Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_308
		test	dl, dl
		jz	short loc_304
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_308
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_2E8

loc_304:				; CODE XREF: _genpkey_main+268j
		xor	eax, eax
		jmp	short loc_30D
; ---------------------------------------------------------------------------

loc_308:				; CODE XREF: _genpkey_main+264j
					; _genpkey_main+270j
		sbb	eax, eax
		or	eax, 1

loc_30D:				; CODE XREF: _genpkey_main+27Ej
		test	eax, eax
		jnz	short loc_34A
		add	esi, 4
		cmp	[esi], eax
		jz	$bad$129
		push	[esp+38h+var_20]
		lea	eax, [esp+3Ch+var_24]
		push	[esp+3Ch+var_1C]
		push	dword ptr [esi]
		push	eax
		push	dword ptr ds:_bio_err
		call	_init_gen_str
		add	esp, 14h
		test	eax, eax
		jz	loc_4D7
		mov	ebx, [esp+38h+var_24]
		jmp	loc_48A
; ---------------------------------------------------------------------------

loc_34A:				; CODE XREF: _genpkey_main+287j
		mov	ecx, offset ??_C@_08JPLFCIIK@?9pkeyopt?$AA@ ; "-pkeyopt"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_358:				; CODE XREF: _genpkey_main+2EAj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_378
		test	dl, dl
		jz	short loc_374
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_378
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_358

loc_374:				; CODE XREF: _genpkey_main+2D8j
		xor	eax, eax
		jmp	short loc_37D
; ---------------------------------------------------------------------------

loc_378:				; CODE XREF: _genpkey_main+2D4j
					; _genpkey_main+2E0j
		sbb	eax, eax
		or	eax, 1

loc_37D:				; CODE XREF: _genpkey_main+2EEj
		test	eax, eax
		jnz	short loc_3CA
		add	esi, 4
		cmp	[esi], eax
		jz	$bad$129
		test	ebx, ebx
		jz	loc_4E0
		push	dword ptr [esi]
		push	ebx
		call	_pkey_ctrl_string
		add	esp, 8
		test	eax, eax
		jg	loc_48A
		push	offset ??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@ ; "parameter	setting	error\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_5C9
; ---------------------------------------------------------------------------

loc_3CA:				; CODE XREF: _genpkey_main+2F7j
		mov	ecx, offset ??_C@_09CKFGOFDF@?9genparam?$AA@ ; "-genparam"
		mov	eax, edi
		nop	dword ptr [eax+00000000h]

loc_3D8:				; CODE XREF: _genpkey_main+36Aj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_3F8
		test	dl, dl
		jz	short loc_3F4
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_3F8
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_3D8

loc_3F4:				; CODE XREF: _genpkey_main+358j
		xor	eax, eax
		jmp	short loc_3FD
; ---------------------------------------------------------------------------

loc_3F8:				; CODE XREF: _genpkey_main+354j
					; _genpkey_main+360j
		sbb	eax, eax
		or	eax, 1

loc_3FD:				; CODE XREF: _genpkey_main+36Ej
		test	eax, eax
		jnz	short loc_413
		test	ebx, ebx
		jnz	$bad$129
		mov	[esp+38h+var_20], 1
		jmp	short loc_48A
; ---------------------------------------------------------------------------

loc_413:				; CODE XREF: _genpkey_main+377j
		mov	ecx, offset ??_C@_05OEBEIMJA@?9text?$AA@ ; "-text"
		mov	eax, edi

loc_41A:				; CODE XREF: _genpkey_main+3ACj
		mov	dl, [eax]
		cmp	dl, [ecx]
		jnz	short loc_43A
		test	dl, dl
		jz	short loc_436
		mov	dl, [eax+1]
		cmp	dl, [ecx+1]
		jnz	short loc_43A
		add	eax, 2
		add	ecx, 2
		test	dl, dl
		jnz	short loc_41A

loc_436:				; CODE XREF: _genpkey_main+39Aj
		xor	eax, eax
		jmp	short loc_43F
; ---------------------------------------------------------------------------

loc_43A:				; CODE XREF: _genpkey_main+396j
					; _genpkey_main+3A2j
		sbb	eax, eax
		or	eax, 1

loc_43F:				; CODE XREF: _genpkey_main+3B0j
		test	eax, eax
		jnz	short loc_44D
		mov	[esp+38h+var_4], 1
		jmp	short loc_48A
; ---------------------------------------------------------------------------

loc_44D:				; CODE XREF: _genpkey_main+3B9j
		lea	eax, [edi+1]
		push	eax
		call	_EVP_get_cipherbyname
		add	esp, 4
		mov	[esp+38h+var_8], eax
		test	eax, eax
		jnz	short loc_47D
		mov	ecx, [esi]
		inc	ecx
		push	ecx
		push	offset ??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@	; "Unknown cipher %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		mov	ebp, 1

loc_47D:				; CODE XREF: _genpkey_main+3D7j
		cmp	[esp+38h+var_20], 1
		mov	eax, 1
		cmovz	ebp, eax

loc_48A:				; CODE XREF: _genpkey_main+F4j
					; _genpkey_main+13Aj ...
		add	esi, 4
		test	ebp, ebp
		jz	loc_11A

loc_495:				; CODE XREF: _genpkey_main+96j
					; _genpkey_main+9Fj
		test	ebx, ebx
		jz	short $bad$129
		test	ebp, ebp
		jnz	short $bad$129
		push	ebp
		lea	eax, [esp+3Ch+var_18]
		push	eax
		mov	eax, [esp+40h+var_14]
		push	ebp
		push	eax
		push	dword ptr ds:_bio_err
		call	_app_passwd
		add	esp, 14h
		test	eax, eax
		jnz	loc_620
		push	offset ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; "Error getting password\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8
		jmp	loc_5C9
; ---------------------------------------------------------------------------

loc_4D7:				; CODE XREF: _genpkey_main+1FAj
					; _genpkey_main+2B3j
		mov	ebx, [esp+38h+var_24]
		jmp	loc_5C9
; ---------------------------------------------------------------------------

loc_4E0:				; CODE XREF: _genpkey_main+306j
		push	offset ??_C@_0BG@KCINJCD@No?5keytype?5specified?6?$AA@ ; "No keytype specified\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		add	esp, 8

$bad$129:				; CODE XREF: _genpkey_main+12Ej
					; _genpkey_main+174j ...
		push	offset ??_C@_0BK@EIGJLJPJ@Usage?3?5genpkey?5?$FLoptions?$FN?6?$AA@ ; "Usage: genpkey [options]\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0BG@BIDCIHLE@where?5options?5may?5be?6?$AA@ ; "where options may be\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CA@KDIDBPDO@?9out?5file?5?5?5?5?5?5?5?5?5?5output?5file?6?$AA@ ; "-out file	   output file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CP@PLBOMBHM@?9outform?5X?5?5?5?5?5?5?5?5?5output?5format@	; "-outform X	      output format (DER o"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DD@IMLEFJCJ@?9pass?5arg?5?5?5?5?5?5?5?5?5?5output?5file?5p@ ; "-pass arg		output file pass phr"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DL@CCHICOEE@?9?$DMcipher?$DO?5?5?5?5?5?5?5?5?5?5use?5cipher?5?$DMc@ ; "-<cipher>		use cipher <cipher> "...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DO@FBHKAFPB@?9engine?5e?5?5?5?5?5?5?5?5?5?5use?5engine?5e?0@ ; "-engine e		 use engine e, possib"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CE@NFNDFLEH@?9paramfile?5file?5?5?5?5parameters?5fi@ ; "-paramfile file	 parameters file\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 40h
		push	offset ??_C@_0CN@PJLKHANN@?9algorithm?5alg?5?5?5?5?5the?5public?5ke@ ; "-algorithm alg	   the public key algor"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0GC@KPBKKGNL@?9pkeyopt?5opt?3value?5set?5the?5publi@ ; "-pkeyopt opt:value	set the	public key a"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DB@HOPBCHBL@?9genparam?5?5?5?5?5?5?5?5?5?5generate?5para@	; "-genparam	      generate parameters,"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0CG@OIGOBFEK@?9text?5?5?5?5?5?5?5?5?5?5?5?5?5?5print?5the?5in?5@ ;	"-text		    print the in text\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		push	offset ??_C@_0DL@EFMPFEJO@NB?3?5options?5order?5may?5be?5importa@ ; "NB: options order may be important!  Se"...
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 28h

loc_5C9:				; CODE XREF: _genpkey_main+33Dj
					; _genpkey_main+44Aj ...
		xor	esi, esi

loc_5CB:				; CODE XREF: _genpkey_main+5C8j
					; _genpkey_main+637j ...
		mov	edi, 1

$end$128:				; CODE XREF: _genpkey_main+73j
					; _genpkey_main+6FEj
		mov	eax, [esp+38h+var_28]
		test	eax, eax
		jz	short loc_5E1
		push	eax
		call	_EVP_PKEY_free
		add	esp, 4

loc_5E1:				; CODE XREF: _genpkey_main+54Ej
		test	ebx, ebx
		jz	short loc_5EE
		push	ebx
		call	_EVP_PKEY_CTX_free
		add	esp, 4

loc_5EE:				; CODE XREF: _genpkey_main+55Bj
		test	esi, esi
		jz	short loc_5FB
		push	esi
		call	_BIO_free_all
		add	esp, 4

loc_5FB:				; CODE XREF: _genpkey_main+568j
		push	0
		call	_BIO_free
		mov	ecx, [esp+3Ch+var_18]
		add	esp, 4
		test	ecx, ecx
		jz	short loc_616
		push	ecx
		call	_CRYPTO_free
		add	esp, 4

loc_616:				; CODE XREF: _genpkey_main+583j
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		add	esp, 28h
		retn
; ---------------------------------------------------------------------------

loc_620:				; CODE XREF: _genpkey_main+431j
		mov	edi, [esp+38h+var_10]
		test	edi, edi
		jz	short loc_655
		push	offset ??_C@_02GMLFBBN@wb?$AA@ ; "wb"
		push	edi
		call	_BIO_new_file
		mov	esi, eax
		add	esp, 8
		test	esi, esi
		jnz	short loc_66D
		push	edi
		push	offset ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ ; "Can't open output file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		jmp	loc_5CB
; ---------------------------------------------------------------------------

loc_655:				; CODE XREF: _genpkey_main+59Ej
		push	0
		push	1
		call	dword ptr ds:__imp____acrt_iob_func
		add	esp, 4
		push	eax
		call	_BIO_new_fp
		add	esp, 8
		mov	esi, eax

loc_66D:				; CODE XREF: _genpkey_main+5B2j
		push	offset _genpkey_cb
		push	ebx
		call	_EVP_PKEY_CTX_set_cb
		push	dword ptr ds:_bio_err
		push	ebx
		call	_EVP_PKEY_CTX_set_app_data
		mov	ebp, [esp+48h+var_20]
		lea	eax, [esp+48h+var_28]
		add	esp, 10h
		push	eax
		push	ebx
		test	ebp, ebp
		jz	short loc_6D0
		call	_EVP_PKEY_paramgen
		add	esp, 8
		test	eax, eax
		jg	short loc_6C4
		push	offset ??_C@_0BN@GPNLILKF@Error?5generating?5parameters?6?$AA@ ; "Error	generating parameters\n"

loc_6A6:				; CODE XREF: _genpkey_main+659j
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch
		jmp	loc_5CB
; ---------------------------------------------------------------------------

loc_6C4:				; CODE XREF: _genpkey_main+617j
		push	[esp+38h+var_28]
		push	esi
		call	_PEM_write_bio_Parameters
		jmp	short loc_719
; ---------------------------------------------------------------------------

loc_6D0:				; CODE XREF: _genpkey_main+60Bj
		call	_EVP_PKEY_keygen
		add	esp, 8
		test	eax, eax
		jg	short loc_6E3
		push	offset ??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@	; "Error generating key\n"
		jmp	short loc_6A6
; ---------------------------------------------------------------------------

loc_6E3:				; CODE XREF: _genpkey_main+652j
		mov	eax, [esp+38h+var_C]
		cmp	eax, 3
		jnz	short loc_70A
		push	[esp+38h+var_18]
		mov	eax, [esp+3Ch+var_8]
		push	0
		push	0
		push	0
		push	eax
		push	[esp+4Ch+var_28]
		push	esi
		call	_PEM_write_bio_PrivateKey
		add	esp, 1Ch
		jmp	short loc_71C
; ---------------------------------------------------------------------------

loc_70A:				; CODE XREF: _genpkey_main+662j
		cmp	eax, 1
		jnz	short loc_78B
		push	[esp+38h+var_28]
		push	esi
		call	_i2d_PrivateKey_bio

loc_719:				; CODE XREF: _genpkey_main+646j
		add	esp, 8

loc_71C:				; CODE XREF: _genpkey_main+680j
		test	eax, eax
		jg	short loc_73E
		push	offset ??_C@_0BD@BKFAOPNO@Error?5writing?5key?6?$AA@ ; "Error writing key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch

loc_73E:				; CODE XREF: _genpkey_main+696j
		mov	eax, [esp+38h+var_4]
		test	eax, eax
		jz	short loc_784
		push	0
		push	0
		push	[esp+40h+var_28]
		push	esi
		test	ebp, ebp
		jz	short loc_75A
		call	_EVP_PKEY_print_params
		jmp	short loc_75F
; ---------------------------------------------------------------------------

loc_75A:				; CODE XREF: _genpkey_main+6C9j
		call	_EVP_PKEY_print_private

loc_75F:				; CODE XREF: _genpkey_main+6D0j
		add	esp, 10h
		test	eax, eax
		jg	short loc_784
		push	offset ??_C@_0BE@MAPDMJE@Error?5printing?5key?6?$AA@ ; "Error printing key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_puts
		push	dword ptr ds:_bio_err
		call	_ERR_print_errors
		add	esp, 0Ch

loc_784:				; CODE XREF: _genpkey_main+6BCj
					; _genpkey_main+6DCj
		xor	edi, edi
		jmp	$end$128
; ---------------------------------------------------------------------------

loc_78B:				; CODE XREF: _genpkey_main+685j
		push	offset ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ ; "Bad format	specified for key\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 8
		jmp	loc_5CB
_genpkey_main	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 7A4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _init_gen_str
_init_gen_str	proc near		; CODE XREF: _genpkey_main+2A9p

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	eax, 4
		call	__chkstk
		push	ebx
		mov	ebx, [esp+8+arg_4]
		mov	[esp+8+var_4], 0
		cmp	dword ptr [ebx], 0
		jz	short loc_7D6
		push	offset ??_C@_0BI@HPDJOFDG@Algorithm?5already?5set?$CB?6?$AA@ ; "Algorithm already set!\n"
		push	[esp+0Ch+arg_0]
		call	_BIO_puts
		add	esp, 8
		xor	eax, eax
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_7D6:				; CODE XREF: _init_gen_str+1Aj
		push	ebp
		push	esi
		mov	esi, [esp+10h+arg_8]
		lea	eax, [esp+10h+var_4]
		push	edi
		push	0FFFFFFFFh
		push	esi
		push	eax
		call	_EVP_PKEY_asn1_find_str
		mov	ebp, [esp+20h+arg_C]
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jnz	short loc_829
		test	ebp, ebp
		jz	short loc_80D
		push	0FFFFFFFFh
		push	esi
		push	ebp
		call	_ENGINE_get_pkey_asn1_meth_str
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jnz	short loc_829

loc_80D:				; CODE XREF: _init_gen_str+55j
		push	esi
		push	offset ??_C@_0BI@MFIANKDK@Algorithm?5?$CFs?5not?5found?6?$AA@ ;	"Algorithm %s not found\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_829:				; CODE XREF: _init_gen_str+51j
					; _init_gen_str+67j
		call	_ERR_clear_error
		push	edi
		push	0
		push	0
		push	0
		lea	eax, [esp+24h+arg_4]
		push	0
		push	eax
		call	_EVP_PKEY_asn1_get0_info
		mov	eax, [esp+2Ch+var_4]
		add	esp, 18h
		test	eax, eax
		jz	short loc_855
		push	eax
		call	_ENGINE_finish
		add	esp, 4

loc_855:				; CODE XREF: _init_gen_str+A6j
		push	ebp
		push	[esp+18h+arg_4]
		call	_EVP_PKEY_CTX_new_id
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jz	short $err$20
		cmp	[esp+14h+arg_10], 0
		push	edi
		jz	short loc_877
		call	_EVP_PKEY_paramgen_init
		jmp	short loc_87C
; ---------------------------------------------------------------------------

loc_877:				; CODE XREF: _init_gen_str+CAj
		call	_EVP_PKEY_keygen_init

loc_87C:				; CODE XREF: _init_gen_str+D1j
		add	esp, 4
		test	eax, eax
		jle	short $err$20
		mov	[ebx], edi
		mov	eax, 1
		pop	edi
		pop	esi
		pop	ebp
		pop	ebx
		pop	ecx
		retn
; ---------------------------------------------------------------------------

$err$20:				; CODE XREF: _init_gen_str+C2j
					; _init_gen_str+DDj
		push	esi
		mov	esi, [esp+18h+arg_0]
		push	offset ??_C@_0BP@HHEKGIKI@Error?5initializing?5?$CFs?5context?6?$AA@ ; "Error initializing %s context\n"
		push	esi
		call	_BIO_printf
		push	esi
		call	_ERR_print_errors
		add	esp, 10h
		test	edi, edi
		jz	short loc_8B6
		push	edi
		call	_EVP_PKEY_CTX_free
		add	esp, 4

loc_8B6:				; CODE XREF: _init_gen_str+107j
		pop	edi
		pop	esi
		pop	ebp
		xor	eax, eax
		pop	ebx
		pop	ecx
		retn
_init_gen_str	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8C0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_init_keygen_file proc near		; CODE XREF: _genpkey_main+1F0p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		mov	ebp, [esp+4+arg_4]
		cmp	dword ptr [ebp+0], 0
		jz	short loc_8E0
		push	offset ??_C@_0BJ@FFCNENPC@Parameters?5already?5set?$CB?6?$AA@ ;	"Parameters already set!\n"
		push	[esp+8+arg_0]
		call	_BIO_puts
		add	esp, 8
		xor	eax, eax
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_8E0:				; CODE XREF: _init_keygen_file+9j
		push	esi
		mov	esi, [esp+8+arg_8]
		push	edi
		push	offset ??_C@_01KDCPPGHE@r?$AA@ ; `string'
		push	esi
		call	_BIO_new_file
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jnz	short loc_912
		push	esi
		push	offset ??_C@_0BO@HEFFFKLO@Can?8t?5open?5parameter?5file?5?$CFs?6?$AA@ ;	"Can't open parameter file %s\n"
		push	[esp+14h+arg_0]
		call	_BIO_printf
		add	esp, 0Ch
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_912:				; CODE XREF: _init_keygen_file+38j
		push	ebx
		push	0
		push	edi
		call	_PEM_read_bio_Parameters
		push	edi
		mov	ebx, eax
		call	_BIO_free
		add	esp, 0Ch
		test	ebx, ebx
		jnz	short loc_945
		push	esi
		push	offset ??_C@_0CB@EHHPGCBO@Error?5reading?5parameter?5file?5?$CFs?6@ ; "Error reading parameter file %s\n"
		push	dword ptr ds:_bio_err
		call	_BIO_printf
		add	esp, 0Ch
		xor	eax, eax
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_945:				; CODE XREF: _init_keygen_file+68j
		push	[esp+10h+arg_C]
		push	ebx
		call	_EVP_PKEY_CTX_new
		mov	edi, eax
		add	esp, 8
		test	edi, edi
		jz	short $err$15
		push	edi
		call	_EVP_PKEY_keygen_init
		add	esp, 4
		test	eax, eax
		jle	short $err$15
		push	ebx
		call	_EVP_PKEY_free
		add	esp, 4
		mov	[ebp+0], edi
		mov	eax, 1
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

$err$15:				; CODE XREF: _init_keygen_file+96j
					; _init_keygen_file+A3j
		mov	esi, [esp+10h+arg_0]
		push	offset ??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@ ;	"Error initializing context\n"
		push	esi
		call	_BIO_puts
		push	esi
		call	_ERR_print_errors
		add	esp, 0Ch
		test	edi, edi
		jz	short loc_9A0
		push	edi
		call	_EVP_PKEY_CTX_free
		add	esp, 4

loc_9A0:				; CODE XREF: _init_keygen_file+D5j
		push	ebx
		call	_EVP_PKEY_free
		add	esp, 4
		xor	eax, eax
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
		retn
_init_keygen_file endp

_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9B0h
; COMDAT (pick any)
		public ??_C@_08LPHBEAIF@?9outform?$AA@
; `string'
??_C@_08LPHBEAIF@?9outform?$AA@	db '-outform',0 ; DATA XREF: _genpkey_main+A5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9BCh
; COMDAT (pick any)
		public ??_C@_05NNOCMECB@?9pass?$AA@
; `string'
??_C@_05NNOCMECB@?9pass?$AA@ db	'-pass',0 ; DATA XREF: _genpkey_main:loc_181o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9C4h
; COMDAT (pick any)
		public ??_C@_07CECBDAGF@?9engine?$AA@
; `string'
??_C@_07CECBDAGF@?9engine?$AA@ db '-engine',0 ; DATA XREF: _genpkey_main:loc_1C7o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9CCh
; COMDAT (pick any)
		public ??_C@_0L@BKOEMGEG@?9paramfile?$AA@
; `string'
??_C@_0L@BKOEMGEG@?9paramfile?$AA@ db '-paramfile',0 ; DATA XREF: _genpkey_main:loc_21Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9D8h
; COMDAT (pick any)
		public ??_C@_04HKKABCEL@?9out?$AA@
; `string'
??_C@_04HKKABCEL@?9out?$AA@ db '-out',0 ; DATA XREF: _genpkey_main:loc_291o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9E0h
; COMDAT (pick any)
		public ??_C@_0L@FKNAAFNM@?9algorithm?$AA@
; `string'
??_C@_0L@FKNAAFNM@?9algorithm?$AA@ db '-algorithm',0 ; DATA XREF: _genpkey_main:loc_2DFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9ECh
; COMDAT (pick any)
		public ??_C@_08JPLFCIIK@?9pkeyopt?$AA@
; `string'
??_C@_08JPLFCIIK@?9pkeyopt?$AA@	db '-pkeyopt',0 ; DATA XREF: _genpkey_main:loc_34Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9F8h
; COMDAT (pick any)
		public ??_C@_0BG@KCINJCD@No?5keytype?5specified?6?$AA@
; `string'
??_C@_0BG@KCINJCD@No?5keytype?5specified?6?$AA@	db 'No keytype specified',0Ah,0
					; DATA XREF: _genpkey_main:loc_4E0o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A10h
; COMDAT (pick any)
		public ??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@
; `string'
??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@ db 'parameter setting error',0Ah,0
					; DATA XREF: _genpkey_main+31Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A2Ch
; COMDAT (pick any)
		public ??_C@_09CKFGOFDF@?9genparam?$AA@
; `string'
??_C@_09CKFGOFDF@?9genparam?$AA@ db '-genparam',0 ; DATA XREF: _genpkey_main:loc_3CAo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A38h
; COMDAT (pick any)
		public ??_C@_05OEBEIMJA@?9text?$AA@
; `string'
??_C@_05OEBEIMJA@?9text?$AA@ db	'-text',0 ; DATA XREF: _genpkey_main:loc_413o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A40h
; COMDAT (pick any)
		public ??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@
; `string'
??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@ db 'Unknown cipher %s',0Ah,0
					; DATA XREF: _genpkey_main+3DDo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A54h
; COMDAT (pick any)
		public ??_C@_0BK@EIGJLJPJ@Usage?3?5genpkey?5?$FLoptions?$FN?6?$AA@
; `string'
??_C@_0BK@EIGJLJPJ@Usage?3?5genpkey?5?$FLoptions?$FN?6?$AA@ db 'Usage: genpkey [options]',0Ah,0
					; DATA XREF: _genpkey_main:$bad$129o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A70h
; COMDAT (pick any)
		public ??_C@_0BG@BIDCIHLE@where?5options?5may?5be?6?$AA@
; `string'
??_C@_0BG@BIDCIHLE@where?5options?5may?5be?6?$AA@ db 'where options may be',0Ah,0
					; DATA XREF: _genpkey_main+47Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A88h
; COMDAT (pick any)
		public ??_C@_0CA@KDIDBPDO@?9out?5file?5?5?5?5?5?5?5?5?5?5output?5file?6?$AA@
; `string'
??_C@_0CA@KDIDBPDO@?9out?5file?5?5?5?5?5?5?5?5?5?5output?5file?6?$AA@ db '-out file          output file',0Ah,0
					; DATA XREF: _genpkey_main+48Bo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AA8h
; COMDAT (pick any)
		public ??_C@_0CP@PLBOMBHM@?9outform?5X?5?5?5?5?5?5?5?5?5output?5format@
; `string'
??_C@_0CP@PLBOMBHM@?9outform?5X?5?5?5?5?5?5?5?5?5output?5format@ db '-outform X         output format (DER or PEM)',0Ah,0
					; DATA XREF: _genpkey_main+49Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AD8h
; COMDAT (pick any)
		public ??_C@_0DD@IMLEFJCJ@?9pass?5arg?5?5?5?5?5?5?5?5?5?5output?5file?5p@
; `string'
??_C@_0DD@IMLEFJCJ@?9pass?5arg?5?5?5?5?5?5?5?5?5?5output?5file?5p@ db '-pass arg          output file pass phrase source',0Ah,0
					; DATA XREF: _genpkey_main+4ABo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0Ch
; COMDAT (pick any)
		public ??_C@_0DL@CCHICOEE@?9?$DMcipher?$DO?5?5?5?5?5?5?5?5?5?5use?5cipher?5?$DMc@
; `string'
??_C@_0DL@CCHICOEE@?9?$DMcipher?$DO?5?5?5?5?5?5?5?5?5?5use?5cipher?5?$DMc@ db '-<cipher>          use cipher <cipher> to encrypt the key',0Ah,0
					; DATA XREF: _genpkey_main+4BBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B48h
; COMDAT (pick any)
		public ??_C@_0DO@FBHKAFPB@?9engine?5e?5?5?5?5?5?5?5?5?5?5use?5engine?5e?0@
; `string'
??_C@_0DO@FBHKAFPB@?9engine?5e?5?5?5?5?5?5?5?5?5?5use?5engine?5e?0@ db '-engine e          use engine e, possibly a hardware device.',0Ah,0
					; DATA XREF: _genpkey_main+4CBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B88h
; COMDAT (pick any)
		public ??_C@_0CE@NFNDFLEH@?9paramfile?5file?5?5?5?5parameters?5fi@
; `string'
??_C@_0CE@NFNDFLEH@?9paramfile?5file?5?5?5?5parameters?5fi@ db '-paramfile file    parameters file',0Ah,0
					; DATA XREF: _genpkey_main+4DBo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BACh
; COMDAT (pick any)
		public ??_C@_0CN@PJLKHANN@?9algorithm?5alg?5?5?5?5?5the?5public?5ke@
; `string'
??_C@_0CN@PJLKHANN@?9algorithm?5alg?5?5?5?5?5the?5public?5ke@ db '-algorithm alg     the public key algorithm',0Ah,0
					; DATA XREF: _genpkey_main+4EEo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0BDCh
; COMDAT (pick any)
		public ??_C@_0GC@KPBKKGNL@?9pkeyopt?5opt?3value?5set?5the?5publi@
; `string'
??_C@_0GC@KPBKKGNL@?9pkeyopt?5opt?3value?5set?5the?5publi@ db '-pkeyopt opt:value set the public key algorithm option <opt>',0Ah
					; DATA XREF: _genpkey_main+4FEo
		db '                   to value <value>',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C40h
; COMDAT (pick any)
		public ??_C@_0DB@HOPBCHBL@?9genparam?5?5?5?5?5?5?5?5?5?5generate?5para@
; `string'
??_C@_0DB@HOPBCHBL@?9genparam?5?5?5?5?5?5?5?5?5?5generate?5para@ db '-genparam          generate parameters, not key',0Ah,0
					; DATA XREF: _genpkey_main+50Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C74h
; COMDAT (pick any)
		public ??_C@_0CG@OIGOBFEK@?9text?5?5?5?5?5?5?5?5?5?5?5?5?5?5print?5the?5in?5@
; `string'
??_C@_0CG@OIGOBFEK@?9text?5?5?5?5?5?5?5?5?5?5?5?5?5?5print?5the?5in?5@ db '-text              print the in text',0Ah,0
					; DATA XREF: _genpkey_main+51Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C9Ch
; COMDAT (pick any)
		public ??_C@_0DL@EFMPFEJO@NB?3?5options?5order?5may?5be?5importa@
; `string'
??_C@_0DL@EFMPFEJO@NB?3?5options?5order?5may?5be?5importa@ db 'NB: options order may be important!  See the manual page.',0Ah,0
					; DATA XREF: _genpkey_main+52Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CD8h
; COMDAT (pick any)
		public ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; `string'
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ db 'Error getting password',0Ah,0
					; DATA XREF: _genpkey_main+437o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CF0h
; COMDAT (pick any)
		public ??_C@_02GMLFBBN@wb?$AA@
; `string'
??_C@_02GMLFBBN@wb?$AA@	db 'wb',0       ; DATA XREF: _genpkey_main+5A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CF4h
; COMDAT (pick any)
		public ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open output file %s',0Ah,0
					; DATA XREF: _genpkey_main+5B5o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D10h
; COMDAT (pick any)
		public ??_C@_0BN@GPNLILKF@Error?5generating?5parameters?6?$AA@
; `string'
??_C@_0BN@GPNLILKF@Error?5generating?5parameters?6?$AA@	db 'Error generating parameters',0Ah,0
					; DATA XREF: _genpkey_main+619o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D30h
; COMDAT (pick any)
		public ??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@
; `string'
??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@ db 'Error generating key',0Ah,0
					; DATA XREF: _genpkey_main+654o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D48h
; COMDAT (pick any)
		public ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@
; `string'
??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ db 'Bad format specified for key',0Ah,0
					; DATA XREF: _genpkey_main:loc_78Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D68h
; COMDAT (pick any)
		public ??_C@_0BD@BKFAOPNO@Error?5writing?5key?6?$AA@
; `string'
??_C@_0BD@BKFAOPNO@Error?5writing?5key?6?$AA@ db 'Error writing key',0Ah,0
					; DATA XREF: _genpkey_main+698o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D7Ch
; COMDAT (pick any)
		public ??_C@_0BE@MAPDMJE@Error?5printing?5key?6?$AA@
; `string'
??_C@_0BE@MAPDMJE@Error?5printing?5key?6?$AA@ db 'Error printing key',0Ah,0
					; DATA XREF: _genpkey_main+6DEo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D90h
; COMDAT (pick any)
		public ??_C@_0BJ@FFCNENPC@Parameters?5already?5set?$CB?6?$AA@
; `string'
??_C@_0BJ@FFCNENPC@Parameters?5already?5set?$CB?6?$AA@ db 'Parameters already set!',0Ah,0
					; DATA XREF: _init_keygen_file+Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DACh
; COMDAT (pick any)
		public ??_C@_01KDCPPGHE@r?$AA@
; `string'
??_C@_01KDCPPGHE@r?$AA@	db 72h,	0	; DATA XREF: _init_keygen_file+26o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DB0h
; COMDAT (pick any)
		public ??_C@_0BO@HEFFFKLO@Can?8t?5open?5parameter?5file?5?$CFs?6?$AA@
; `string'
??_C@_0BO@HEFFFKLO@Can?8t?5open?5parameter?5file?5?$CFs?6?$AA@ db 'Can',27h,'t open parameter file %s',0Ah,0
					; DATA XREF: _init_keygen_file+3Bo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DD0h
; COMDAT (pick any)
		public ??_C@_0CB@EHHPGCBO@Error?5reading?5parameter?5file?5?$CFs?6@
; `string'
??_C@_0CB@EHHPGCBO@Error?5reading?5parameter?5file?5?$CFs?6@ db	'Error reading parameter file %s',0Ah,0
					; DATA XREF: _init_keygen_file+6Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DF4h
; COMDAT (pick any)
		public ??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@
; `string'
??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@ db 'Error initializing context',0Ah,0
					; DATA XREF: _init_keygen_file+BFo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E10h
; COMDAT (pick any)
		public ??_C@_0BI@HPDJOFDG@Algorithm?5already?5set?$CB?6?$AA@
; `string'
??_C@_0BI@HPDJOFDG@Algorithm?5already?5set?$CB?6?$AA@ db 'Algorithm already set!',0Ah,0
					; DATA XREF: _init_gen_str+1Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E28h
; COMDAT (pick any)
		public ??_C@_0BI@MFIANKDK@Algorithm?5?$CFs?5not?5found?6?$AA@
; `string'
??_C@_0BI@MFIANKDK@Algorithm?5?$CFs?5not?5found?6?$AA@ db 'Algorithm %s not found',0Ah,0
					; DATA XREF: _init_gen_str+6Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E40h
; COMDAT (pick any)
		public ??_C@_0BP@HHEKGIKI@Error?5initializing?5?$CFs?5context?6?$AA@
; `string'
??_C@_0BP@HHEKGIKI@Error?5initializing?5?$CFs?5context?6?$AA@ db 'Error initializing %s context',0Ah,0
					; DATA XREF: _init_gen_str+F1o
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __imp____acrt_iob_func:near ; CODE XREF: _genpkey_main+4Fp
					; _genpkey_main+5D1p
					; DATA XREF: ...
		extrn _CRYPTO_free:near	; CODE XREF: _genpkey_main+586p
		extrn _BIO_new_file:near ; CODE	XREF: _genpkey_main+5A6p
					; _init_keygen_file+2Cp
		extrn _BIO_new_fp:near	; CODE XREF: _genpkey_main+59p
					; _genpkey_main+5DBp
		extrn _BIO_free:near	; CODE XREF: _genpkey_main+575p
					; _init_keygen_file+5Ep
		extrn _BIO_write:near	; CODE XREF: _genpkey_cb+6Ap
		extrn _BIO_puts:near	; CODE XREF: _genpkey_main+32Ap
					; _genpkey_main+442p ...
		extrn _BIO_ctrl:near	; CODE XREF: _genpkey_cb+76p
		extrn _BIO_free_all:near ; CODE	XREF: _genpkey_main+56Bp
		extrn _BIO_printf:near	; CODE XREF: _genpkey_main+3E8p
					; _genpkey_main+476p ...
		extrn _OPENSSL_add_all_algorithms_noconf:near ;	CODE XREF: _genpkey_main+86p
		extrn _EVP_get_cipherbyname:near ; CODE	XREF: _genpkey_main+3C9p
		extrn _EVP_PKEY_free:near ; CODE XREF: _genpkey_main+551p
					; _init_keygen_file+A6p ...
		extrn _EVP_PKEY_print_private:near ; CODE XREF:	_genpkey_main:loc_75Ap
		extrn _EVP_PKEY_print_params:near ; CODE XREF: _genpkey_main+6CBp
		extrn _EVP_PKEY_asn1_find_str:near ; CODE XREF:	_init_gen_str+41p
		extrn _EVP_PKEY_asn1_get0_info:near ; CODE XREF: _init_gen_str+98p
		extrn _EVP_PKEY_CTX_new:near ; CODE XREF: _init_keygen_file+8Ap
		extrn _EVP_PKEY_CTX_new_id:near	; CODE XREF: _init_gen_str+B6p
		extrn _EVP_PKEY_CTX_free:near ;	CODE XREF: _genpkey_main+55Ep
					; _init_gen_str+10Ap ...
		extrn _EVP_PKEY_CTX_set_app_data:near ;	CODE XREF: _genpkey_main+5F7p
		extrn _EVP_PKEY_CTX_get_app_data:near ;	CODE XREF: _genpkey_cb+14p
		extrn _EVP_PKEY_paramgen_init:near ; CODE XREF:	_init_gen_str+CCp
		extrn _EVP_PKEY_paramgen:near ;	CODE XREF: _genpkey_main+60Dp
		extrn _EVP_PKEY_keygen_init:near ; CODE	XREF: _init_gen_str:loc_877p
					; _init_keygen_file+99p
		extrn _EVP_PKEY_keygen:near ; CODE XREF: _genpkey_main:loc_6D0p
		extrn _EVP_PKEY_CTX_set_cb:near	; CODE XREF: _genpkey_main+5EBp
		extrn _EVP_PKEY_CTX_get_keygen_info:near ; CODE	XREF: _genpkey_cb+21p
		extrn _i2d_PrivateKey_bio:near ; CODE XREF: _genpkey_main+68Cp
		extrn _ERR_clear_error:near ; CODE XREF: _init_gen_str:loc_829p
		extrn _ERR_print_errors:near ; CODE XREF: _genpkey_main+335p
					; _genpkey_main+62Fp ...
		extrn _ERR_load_crypto_strings:near ; CODE XREF: _genpkey_main+81p
		extrn _ENGINE_get_pkey_asn1_meth_str:near ; CODE XREF: _init_gen_str+5Bp
		extrn _ENGINE_finish:near ; CODE XREF: _init_gen_str+A9p
		extrn _str2fmt:near	; CODE XREF: _genpkey_main+E8p
		extrn _app_passwd:near	; CODE XREF: _genpkey_main+427p
		extrn _setup_engine:near ; CODE	XREF: _genpkey_main+183p
		extrn _load_config:near	; CODE XREF: _genpkey_main+69p
		extrn _pkey_ctrl_string:near ; CODE XREF: _genpkey_main+30Fp
		extrn _PEM_write_bio_PrivateKey:near ; CODE XREF: _genpkey_main+678p
		extrn _PEM_read_bio_Parameters:near ; CODE XREF: _init_keygen_file+56p
		extrn _PEM_write_bio_Parameters:near ; CODE XREF: _genpkey_main+641p
		extrn __chkstk:near	; CODE XREF: _genpkey_cb+5p
					; _genpkey_main+5p ...
		extrn _bio_err:near	; DATA XREF: _genpkey_main+3Fr
					; _genpkey_main+61w ...


		end

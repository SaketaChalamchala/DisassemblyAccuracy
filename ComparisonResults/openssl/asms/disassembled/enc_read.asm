;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	40AFBFA558E89F66A711DAEE1E235368
; Input	CRC32 :	F58C1915

; File Name   :	C:\compspace\Diff\openssl\obj\enc_read.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
; `_shadow_DES_rw_mode'::`2'::_hide_DES_rw_mode
?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9	db 1 ; DATA XREF: _DES_enc_read+1F4r
					; _DES_enc_read+242r ...
		align 4
_data		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 4
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
; `DES_enc_read'::`2'::net
?net@?1??DES_enc_read@@9@9 dd ?		; DATA XREF: _DES_enc_read:loc_50r
					; _DES_enc_read+58w ...
; void *`DES_enc_read'::`2'::unnet
?unnet@?1??DES_enc_read@@9@9 dd	?	; DATA XREF: _DES_enc_read:loc_7Ar
					; _DES_enc_read+82w ...
; `DES_enc_read'::`2'::unnet_start
?unnet_start@?1??DES_enc_read@@9@9 dd ?	; DATA XREF: _DES_enc_read+A6r
					; _DES_enc_read+C3w ...
; size_t `DES_enc_read'::`2'::unnet_left
?unnet_left@?1??DES_enc_read@@9@9 dd ?	; DATA XREF: _DES_enc_read+94r
					; _DES_enc_read+BBw ...
; void *`DES_enc_read'::`2'::tmpbuf
?tmpbuf@?1??DES_enc_read@@9@9 dd ?	; DATA XREF: _DES_enc_read+Dr
					; _DES_enc_read+29w ...
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 18h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl DES_enc_read(int,	void *Dst, size_t Size,	int, int)
		public _DES_enc_read
_DES_enc_read	proc near

var_4		= dword	ptr -4
arg_0		= dword	ptr  4
Dst		= dword	ptr  8
Size		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	eax, 4
		call	__chkstk
		push	esi
		xor	esi, esi
		cmp	ds:?tmpbuf@?1??DES_enc_read@@9@9, esi ;	`DES_enc_read'::`2'::tmpbuf
		jnz	short loc_50
		push	6Ch ; 'l'
		push	offset ??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@ ; ".\\crypto\\des\\enc_read.c"
		push	4004h
		call	_CRYPTO_malloc
		add	esp, 0Ch
		mov	ds:?tmpbuf@?1??DES_enc_read@@9@9, eax ;	`DES_enc_read'::`2'::tmpbuf
		test	eax, eax
		jnz	short loc_50

loc_4A:					; CODE XREF: _DES_enc_read+60j
					; _DES_enc_read+8Aj
		or	eax, 0FFFFFFFFh
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_50:					; CODE XREF: _DES_enc_read+13j
					; _DES_enc_read+30j
		mov	ecx, ds:?net@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::net
		test	ecx, ecx
		jnz	short loc_7A
		push	71h ; 'q'
		push	offset ??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@ ; ".\\crypto\\des\\enc_read.c"
		push	4004h
		call	_CRYPTO_malloc
		mov	ecx, eax
		add	esp, 0Ch
		mov	ds:?net@?1??DES_enc_read@@9@9, ecx ; `DES_enc_read'::`2'::net
		test	ecx, ecx
		jz	short loc_4A

loc_7A:					; CODE XREF: _DES_enc_read+40j
		mov	edx, ds:?unnet@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::unnet
		test	edx, edx
		jnz	short loc_AA
		push	76h ; 'v'
		push	offset ??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@ ; ".\\crypto\\des\\enc_read.c"
		push	4004h
		call	_CRYPTO_malloc
		mov	edx, eax
		add	esp, 0Ch
		mov	ds:?unnet@?1??DES_enc_read@@9@9, edx ; `DES_enc_read'::`2'::unnet
		test	edx, edx
		jz	short loc_4A
		mov	ecx, ds:?net@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::net

loc_AA:					; CODE XREF: _DES_enc_read+6Aj
		push	ebx
		push	edi
		mov	edi, ds:?unnet_left@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::unnet_left
		test	edi, edi
		jz	short loc_116
		mov	ebx, [esp+10h+Size]
		cmp	edi, ebx
		jge	short loc_E6
		mov	eax, ds:?unnet_start@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::unnet_start
		push	edi		; Size
		add	eax, edx
		push	eax		; Src
		push	[esp+18h+Dst]	; Dst
		call	_memcpy
		add	esp, 0Ch
		mov	ds:?unnet_left@?1??DES_enc_read@@9@9, esi ; `DES_enc_read'::`2'::unnet_left
		mov	eax, edi
		mov	ds:?unnet_start@?1??DES_enc_read@@9@9, esi ; `DES_enc_read'::`2'::unnet_start
		pop	edi
		pop	ebx
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_E6:					; CODE XREF: _DES_enc_read+A4j
		mov	esi, ds:?unnet_start@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::unnet_start
		push	ebx		; Size
		lea	eax, [esi+edx]
		push	eax		; Src
		push	[esp+18h+Dst]	; Dst
		call	_memcpy
		add	esp, 0Ch
		add	esi, ebx
		sub	edi, ebx
		mov	ds:?unnet_start@?1??DES_enc_read@@9@9, esi ; `DES_enc_read'::`2'::unnet_start
		mov	ds:?unnet_left@?1??DES_enc_read@@9@9, edi ; `DES_enc_read'::`2'::unnet_left
		mov	edi, ebx
		mov	eax, edi
		pop	edi
		pop	ebx
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_116:				; CODE XREF: _DES_enc_read+9Cj
		mov	eax, [esp+10h+Size]
		mov	edx, 4000h
		mov	ebx, dword ptr ds:__imp___errno
		cmp	eax, edx
		cmovg	eax, edx
		mov	[esp+10h+var_4], eax

loc_12E:				; CODE XREF: _DES_enc_read+153j
		mov	eax, 4
		sub	eax, esi
		push	eax
		lea	eax, [ecx+esi]
		push	eax
		push	[esp+18h+arg_0]
		call	dword ptr ds:__imp___read
		add	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_15A
		call	ebx ; __imp___errno
		cmp	dword ptr [eax], 4
		jz	short loc_160

loc_153:				; CODE XREF: _DES_enc_read+144j
		pop	edi
		pop	ebx
		xor	eax, eax
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_15A:				; CODE XREF: _DES_enc_read+132j
		test	eax, eax
		jle	short loc_153
		add	esi, eax

loc_160:				; CODE XREF: _DES_enc_read+139j
		cmp	esi, 4
		jge	short loc_16D
		mov	ecx, ds:?net@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::net
		jmp	short loc_12E
; ---------------------------------------------------------------------------

loc_16D:				; CODE XREF: _DES_enc_read+14Bj
		mov	ebx, ds:?net@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::net
		movzx	esi, byte ptr [ebx]
		movzx	eax, byte ptr [ebx+1]
		movzx	ecx, byte ptr [ebx+2]
		shl	esi, 18h
		shl	eax, 10h
		or	esi, eax
		shl	ecx, 8
		movzx	eax, byte ptr [ebx+3]
		or	ecx, eax
		or	esi, ecx
		cmp	esi, 4000h
		ja	loc_2C2
		xor	edi, edi
		push	ebp
		cmp	esi, 8
		jge	short loc_1AA
		lea	ebp, [edi+8]
		jmp	short loc_1BB
; ---------------------------------------------------------------------------

loc_1AA:				; CODE XREF: _DES_enc_read+18Bj
		lea	eax, [esi+7]
		cdq
		and	edx, 7
		lea	ebp, [edx+eax]
		and	ebp, 0FFFFFFF8h
		test	ebp, ebp
		jle	short loc_1F9

loc_1BB:				; CODE XREF: _DES_enc_read+190j
					; _DES_enc_read+1DFj
		mov	eax, ebp
		sub	eax, edi
		push	eax
		lea	eax, [ebx+edi]
		push	eax
		push	[esp+1Ch+arg_0]
		call	dword ptr ds:__imp___read
		add	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_1E9
		call	dword ptr ds:__imp___errno
		cmp	dword ptr [eax], 4
		jz	short loc_1EF

loc_1E1:				; CODE XREF: _DES_enc_read+1D3j
		pop	ebp
		pop	edi
		pop	ebx
		xor	eax, eax
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_1E9:				; CODE XREF: _DES_enc_read+1BCj
		test	eax, eax
		jle	short loc_1E1
		add	edi, eax

loc_1EF:				; CODE XREF: _DES_enc_read+1C7j
		mov	ebx, ds:?net@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::net
		cmp	edi, ebp
		jl	short loc_1BB

loc_1F9:				; CODE XREF: _DES_enc_read+1A1j
		mov	edi, [esp+14h+var_4]
		push	0
		push	[esp+18h+arg_10]
		push	[esp+1Ch+arg_C]
		push	esi
		cmp	edi, esi
		jge	short loc_256
		test	?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9, 1 ; `_shadow_DES_rw_mode'::`2'::_hide_DES_rw_mode
		push	ds:?unnet@?1??DES_enc_read@@9@9	; `DES_enc_read'::`2'::unnet
		push	ebx
		jz	short loc_223
		call	_DES_pcbc_encrypt
		jmp	short loc_228
; ---------------------------------------------------------------------------

loc_223:				; CODE XREF: _DES_enc_read+202j
		call	_DES_cbc_encrypt

loc_228:				; CODE XREF: _DES_enc_read+209j
		add	esp, 18h
		push	edi		; Size
		push	ds:?unnet@?1??DES_enc_read@@9@9	; Src
		push	[esp+1Ch+Dst]	; Dst
		call	_memcpy
		add	esp, 0Ch
		mov	ds:?unnet_start@?1??DES_enc_read@@9@9, edi ; `DES_enc_read'::`2'::unnet_start
		sub	esi, edi
		mov	ds:?unnet_left@?1??DES_enc_read@@9@9, esi ; `DES_enc_read'::`2'::unnet_left
		mov	esi, edi
		mov	eax, esi
		pop	ebp
		pop	edi
		pop	ebx
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_256:				; CODE XREF: _DES_enc_read+1F2j
		cmp	edi, ebp
		jge	short loc_294
		test	?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9, 1 ; `_shadow_DES_rw_mode'::`2'::_hide_DES_rw_mode
		push	ds:?tmpbuf@?1??DES_enc_read@@9@9 ; `DES_enc_read'::`2'::tmpbuf
		push	ebx
		jz	short loc_271
		call	_DES_pcbc_encrypt
		jmp	short loc_276
; ---------------------------------------------------------------------------

loc_271:				; CODE XREF: _DES_enc_read+250j
		call	_DES_cbc_encrypt

loc_276:				; CODE XREF: _DES_enc_read+257j
		add	esp, 18h
		push	esi		; Size
		push	ds:?tmpbuf@?1??DES_enc_read@@9@9 ; Src
		push	[esp+1Ch+Dst]	; Dst
		call	_memcpy
		add	esp, 0Ch
		mov	eax, esi
		pop	ebp
		pop	edi
		pop	ebx
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_294:				; CODE XREF: _DES_enc_read+240j
		test	?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9, 1 ; `_shadow_DES_rw_mode'::`2'::_hide_DES_rw_mode
		push	[esp+24h+Dst]
		push	ebx
		jz	short loc_2B2
		call	_DES_pcbc_encrypt
		add	esp, 18h
		mov	eax, esi
		pop	ebp
		pop	edi
		pop	ebx
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_2B2:				; CODE XREF: _DES_enc_read+288j
		call	_DES_cbc_encrypt
		add	esp, 18h
		mov	eax, esi
		pop	ebp
		pop	edi
		pop	ebx
		pop	esi
		pop	ecx
		retn
; ---------------------------------------------------------------------------

loc_2C2:				; CODE XREF: _DES_enc_read+17Fj
		pop	edi
		pop	ebx
		or	eax, 0FFFFFFFFh
		pop	esi
		pop	ecx
		retn
_DES_enc_read	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2CCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public __shadow_DES_rw_mode
__shadow_DES_rw_mode proc near
		mov	eax, offset ?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9 ; `_shadow_DES_rw_mode'::`2'::_hide_DES_rw_mode
		retn
__shadow_DES_rw_mode endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D4h
; COMDAT (pick any)
		public ??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@
; `string'
??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@ db	'.\crypto\des\enc_read.c',0
					; DATA XREF: _DES_enc_read+17o
					; _DES_enc_read+44o ...
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; int *__cdecl __errno()
		extrn __imp___errno:near ; CODE	XREF: _DES_enc_read+134p
					; _DES_enc_read+1BEp
					; DATA XREF: ...
		extrn __imp___read:near	; CODE XREF: _DES_enc_read+126p
					; _DES_enc_read+1B0p
					; DATA XREF: ...
		extrn _CRYPTO_malloc:near ; CODE XREF: _DES_enc_read+21p
					; _DES_enc_read+4Ep ...
		extrn _DES_cbc_encrypt:near ; CODE XREF: _DES_enc_read:loc_223p
					; _DES_enc_read:loc_271p ...
		extrn _DES_pcbc_encrypt:near ; CODE XREF: _DES_enc_read+204p
					; _DES_enc_read+252p ...
		extrn __chkstk:near	; CODE XREF: _DES_enc_read+5p
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _DES_enc_read+B3p
					; _DES_enc_read+DDp ...


		end

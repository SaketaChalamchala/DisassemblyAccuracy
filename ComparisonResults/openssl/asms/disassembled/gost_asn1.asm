;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	174C502B79ECC17F7238FF7D1CBA2684
; Input	CRC32 :	8D0C2DF3

; File Name   :	C:\compspace\Diff\openssl\obj\gost_asn1.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_INFO_it
_GOST_KEY_INFO_it proc near		; DATA XREF: .rdata:00000028o
		mov	eax, offset ?local_it@?1??GOST_KEY_INFO_it@@9@9	; `GOST_KEY_INFO_it'::`2'::local_it
		retn
_GOST_KEY_INFO_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_AGREEMENT_INFO_it
_GOST_KEY_AGREEMENT_INFO_it proc near	; DATA XREF: .rdata:0000003Co
		mov	eax, offset ?local_it@?1??GOST_KEY_AGREEMENT_INFO_it@@9@9 ; `GOST_KEY_AGREEMENT_INFO_it'::`2'::local_it
		retn
_GOST_KEY_AGREEMENT_INFO_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 10h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_TRANSPORT_it
_GOST_KEY_TRANSPORT_it proc near	; DATA XREF: .rdata:000001A4o
		mov	eax, offset ?local_it@?1??GOST_KEY_TRANSPORT_it@@9@9 ; `GOST_KEY_TRANSPORT_it'::`2'::local_it
		retn
_GOST_KEY_TRANSPORT_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
_GOST_KEY_TRANSPORT_seq_tt dd 3	dup(0)	; DATA XREF: .rdata:00000048o
		dd offset ??_C@_08DKAHCANL@key_info?$AA@ ; "key_info"
		dd offset _GOST_KEY_INFO_it
		dd offset dword_88
		dd 0
		dd 4
		dd offset ??_C@_0BD@OJEMKMG@key_agreement_info?$AA@ ; "key_agreement_info"
		dd offset _GOST_KEY_AGREEMENT_INFO_it
; `GOST_KEY_TRANSPORT_it'::`2'::local_it
?local_it@?1??GOST_KEY_TRANSPORT_it@@9@9 dd 6, 10h ; DATA XREF:	_GOST_KEY_TRANSPORT_ito
					; _GOST_KEY_TRANSPORT_freeo ...
		dd offset _GOST_KEY_TRANSPORT_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0BD@IILJDKID@GOST_KEY_TRANSPORT?$AA@ ; "GOST_KEY_TRANSPORT"
_GOST_KEY_INFO_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:0000008Co
		dd offset ??_C@_0O@FFCGNLNH@encrypted_key?$AA@ ; "encrypted_key"
		dd offset _ASN1_OCTET_STRING_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_04GIOGHOFN@imit?$AA@ ; "imit"
		dd offset _ASN1_OCTET_STRING_it
; `GOST_KEY_INFO_it'::`2'::local_it
?local_it@?1??GOST_KEY_INFO_it@@9@9 dd 6 ; DATA	XREF: _GOST_KEY_INFO_ito
					; _GOST_KEY_INFO_freeo	...
dword_88	dd 10h			; DATA XREF: .rdata:0000002Co
					; .rdata:000000B4o
		dd offset _GOST_KEY_INFO_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0O@KBJEJD@GOST_KEY_INFO?$AA@ ; "GOST_KEY_INFO"
_GOST_KEY_AGREEMENT_INFO_seq_tt	dd 3 dup(0) ; DATA XREF: .rdata:000000E4o
		dd offset ??_C@_06KDGDAFPH@cipher?$AA@ ; "cipher"
		dd offset _ASN1_OBJECT_it
		dd offset dword_88+1
		dd 0
		dd 4
		dd offset ??_C@_09FDHHLMMM@ephem_key?$AA@ ; "ephem_key"
		dd offset _X509_PUBKEY_it
		align 10h
		dd 8
		dd offset ??_C@_06LEHAEDKF@eph_iv?$AA@ ; "eph_iv"
		dd offset _ASN1_OCTET_STRING_it
; `GOST_KEY_AGREEMENT_INFO_it'::`2'::local_it
?local_it@?1??GOST_KEY_AGREEMENT_INFO_it@@9@9 dd 6, 10h
					; DATA XREF: _GOST_KEY_AGREEMENT_INFO_ito
					; _GOST_KEY_AGREEMENT_INFO_freeo ...
		dd offset _GOST_KEY_AGREEMENT_INFO_seq_tt
		dd 3, 0
		dd 0Ch
		dd offset ??_C@_0BI@EHIBLPAC@GOST_KEY_AGREEMENT_INFO?$AA@ ; "GOST_KEY_AGREEMENT_INFO"
_GOST_KEY_PARAMS_seq_tt	dd 3 dup(0)	; DATA XREF: .rdata:0000013Co
		dd offset ??_C@_0L@GLBAFJOE@key_params?$AA@ ; "key_params"
		dd offset _ASN1_OBJECT_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_0M@CGLIMLII@hash_params?$AA@ ; "hash_params"
		dd offset _ASN1_OBJECT_it
		dd 1, 0
		dd 8
		dd offset ??_C@_0O@JHALJCKD@cipher_params?$AA@ ; "cipher_params"
		dd offset _ASN1_OBJECT_it
; `GOST_KEY_PARAMS_it'::`2'::local_it
?local_it@?1??GOST_KEY_PARAMS_it@@9@9 dd 6, 10h	; DATA XREF: _GOST_KEY_PARAMS_freeo
					; _GOST_KEY_PARAMS_ito	...
		dd offset _GOST_KEY_PARAMS_seq_tt
		dd 3, 0
		dd 0Ch
		dd offset ??_C@_0BA@DCHFLDJI@GOST_KEY_PARAMS?$AA@ ; "GOST_KEY_PARAMS"
_GOST_CIPHER_PARAMS_seq_tt dd 3	dup(0)	; DATA XREF: .rdata:00000180o
		dd offset ??_C@_02DONNAIDC@iv?$AA@ ; "iv"
		dd offset _ASN1_OCTET_STRING_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_0O@GKKMBJJO@enc_param_set?$AA@ ; "enc_param_set"
		dd offset _ASN1_OBJECT_it
; `GOST_CIPHER_PARAMS_it'::`2'::local_it
?local_it@?1??GOST_CIPHER_PARAMS_it@@9@9 dd 6, 10h ; DATA XREF:	_GOST_CIPHER_PARAMS_freeo
					; _GOST_CIPHER_PARAMS_ito ...
		dd offset _GOST_CIPHER_PARAMS_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0BD@CBLIKNIC@GOST_CIPHER_PARAMS?$AA@ ; "GOST_CIPHER_PARAMS"
_GOST_CLIENT_KEY_EXCHANGE_PARAMS_seq_tt	dd 3 dup(0) ; DATA XREF: .rdata:000001B0o
		dd offset ??_C@_03HHJLHHGK@gkt?$AA@ ; `string'
		dd offset _GOST_KEY_TRANSPORT_it
; `GOST_CLIENT_KEY_EXCHANGE_PARAMS_it'::`2'::local_it
?local_it@?1??GOST_CLIENT_KEY_EXCHANGE_PARAMS_it@@9@9 dd 6, 10h
					; DATA XREF: _GOST_CLIENT_KEY_EXCHANGE_PARAMS_freeo
					; _GOST_CLIENT_KEY_EXCHANGE_PARAMS_ito	...
		dd offset _GOST_CLIENT_KEY_EXCHANGE_PARAMS_seq_tt
		dd 1, 0
		dd 4
		dd offset ??_C@_0CA@ICAJFGCC@GOST_CLIENT_KEY_EXCHANGE_PARAMS?$AA@ ; "GOST_CLIENT_KEY_EXCHANGE_PARAMS"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1C4h
; COMDAT (pick any)
		public ??_C@_08DKAHCANL@key_info?$AA@
; `string'
??_C@_08DKAHCANL@key_info?$AA@ db 'key_info',0 ; DATA XREF: .rdata:00000024o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1D0h
; COMDAT (pick any)
		public ??_C@_0BD@OJEMKMG@key_agreement_info?$AA@
; `string'
??_C@_0BD@OJEMKMG@key_agreement_info?$AA@ db 'key_agreement_info',0
					; DATA XREF: .rdata:00000038o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1E4h
; COMDAT (pick any)
		public ??_C@_0BD@IILJDKID@GOST_KEY_TRANSPORT?$AA@
; `string'
??_C@_0BD@IILJDKID@GOST_KEY_TRANSPORT?$AA@ db 'GOST_KEY_TRANSPORT',0
					; DATA XREF: .rdata:00000058o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1F8h
; COMDAT (pick any)
		public ??_C@_0O@FFCGNLNH@encrypted_key?$AA@
; `string'
??_C@_0O@FFCGNLNH@encrypted_key?$AA@ db	'encrypted_key',0 ; DATA XREF: .rdata:00000068o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 208h
; COMDAT (pick any)
		public ??_C@_04GIOGHOFN@imit?$AA@
; `string'
??_C@_04GIOGHOFN@imit?$AA@ db 'imit',0  ; DATA XREF: .rdata:0000007Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 210h
; COMDAT (pick any)
		public ??_C@_0O@KBJEJD@GOST_KEY_INFO?$AA@
; `string'
??_C@_0O@KBJEJD@GOST_KEY_INFO?$AA@ db 'GOST_KEY_INFO',0 ; DATA XREF: .rdata:0000009Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 220h
; COMDAT (pick any)
		public ??_C@_06KDGDAFPH@cipher?$AA@
; `string'
??_C@_06KDGDAFPH@cipher?$AA@ db	'cipher',0 ; DATA XREF: .rdata:000000ACo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 228h
; COMDAT (pick any)
		public ??_C@_09FDHHLMMM@ephem_key?$AA@
; `string'
??_C@_09FDHHLMMM@ephem_key?$AA@	db 'ephem_key',0 ; DATA XREF: .rdata:000000C0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 234h
; COMDAT (pick any)
		public ??_C@_06LEHAEDKF@eph_iv?$AA@
; `string'
??_C@_06LEHAEDKF@eph_iv?$AA@ db	'eph_iv',0 ; DATA XREF: .rdata:000000D4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 23Ch
; COMDAT (pick any)
		public ??_C@_0BI@EHIBLPAC@GOST_KEY_AGREEMENT_INFO?$AA@
; `string'
??_C@_0BI@EHIBLPAC@GOST_KEY_AGREEMENT_INFO?$AA@	db 'GOST_KEY_AGREEMENT_INFO',0
					; DATA XREF: .rdata:000000F4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 254h
; COMDAT (pick any)
		public ??_C@_0L@GLBAFJOE@key_params?$AA@
; `string'
??_C@_0L@GLBAFJOE@key_params?$AA@ db 'key_params',0 ; DATA XREF: .rdata:00000104o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 260h
; COMDAT (pick any)
		public ??_C@_0M@CGLIMLII@hash_params?$AA@
; `string'
??_C@_0M@CGLIMLII@hash_params?$AA@ db 'hash_params',0 ; DATA XREF: .rdata:00000118o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 26Ch
; COMDAT (pick any)
		public ??_C@_0O@JHALJCKD@cipher_params?$AA@
; `string'
??_C@_0O@JHALJCKD@cipher_params?$AA@ db	'cipher_params',0 ; DATA XREF: .rdata:0000012Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 27Ch
; COMDAT (pick any)
		public ??_C@_0BA@DCHFLDJI@GOST_KEY_PARAMS?$AA@
; `string'
??_C@_0BA@DCHFLDJI@GOST_KEY_PARAMS?$AA@	db 'GOST_KEY_PARAMS',0 ; DATA XREF: .rdata:0000014Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28Ch
; COMDAT (pick any)
		public ??_C@_02DONNAIDC@iv?$AA@
; `string'
??_C@_02DONNAIDC@iv?$AA@ db 'iv',0      ; DATA XREF: .rdata:0000015Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 290h
; COMDAT (pick any)
		public ??_C@_0O@GKKMBJJO@enc_param_set?$AA@
; `string'
??_C@_0O@GKKMBJJO@enc_param_set?$AA@ db	'enc_param_set',0 ; DATA XREF: .rdata:00000170o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2A0h
; COMDAT (pick any)
		public ??_C@_0BD@CBLIKNIC@GOST_CIPHER_PARAMS?$AA@
; `string'
??_C@_0BD@CBLIKNIC@GOST_CIPHER_PARAMS?$AA@ db 'GOST_CIPHER_PARAMS',0
					; DATA XREF: .rdata:00000190o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B4h
; COMDAT (pick any)
		public ??_C@_03HHJLHHGK@gkt?$AA@
; `string'
??_C@_03HHJLHHGK@gkt?$AA@ dd 746B67h	; DATA XREF: .rdata:000001A0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B8h
; COMDAT (pick any)
		public ??_C@_0CA@ICAJFGCC@GOST_CLIENT_KEY_EXCHANGE_PARAMS?$AA@
; `string'
??_C@_0CA@ICAJFGCC@GOST_CLIENT_KEY_EXCHANGE_PARAMS?$AA@	db 'GOST_CLIENT_KEY_EXCHANGE_PARAMS',0
					; DATA XREF: .rdata:000001C0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2D8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_CIPHER_PARAMS_free
_GOST_CIPHER_PARAMS_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??GOST_CIPHER_PARAMS_it@@9@9	; `GOST_CIPHER_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_GOST_CIPHER_PARAMS_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2ECh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_CIPHER_PARAMS_it
_GOST_CIPHER_PARAMS_it proc near
		mov	eax, offset ?local_it@?1??GOST_CIPHER_PARAMS_it@@9@9 ; `GOST_CIPHER_PARAMS_it'::`2'::local_it
		retn
_GOST_CIPHER_PARAMS_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 2F4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_CIPHER_PARAMS_new
_GOST_CIPHER_PARAMS_new	proc near
		push	offset ?local_it@?1??GOST_CIPHER_PARAMS_it@@9@9	; `GOST_CIPHER_PARAMS_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_GOST_CIPHER_PARAMS_new	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 304h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_CLIENT_KEY_EXCHANGE_PARAMS_free
_GOST_CLIENT_KEY_EXCHANGE_PARAMS_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??GOST_CLIENT_KEY_EXCHANGE_PARAMS_it@@9@9 ; `GOST_CLIENT_KEY_EXCHANGE_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_GOST_CLIENT_KEY_EXCHANGE_PARAMS_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 318h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_CLIENT_KEY_EXCHANGE_PARAMS_it
_GOST_CLIENT_KEY_EXCHANGE_PARAMS_it proc near
		mov	eax, offset ?local_it@?1??GOST_CLIENT_KEY_EXCHANGE_PARAMS_it@@9@9 ; `GOST_CLIENT_KEY_EXCHANGE_PARAMS_it'::`2'::local_it
		retn
_GOST_CLIENT_KEY_EXCHANGE_PARAMS_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 320h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_CLIENT_KEY_EXCHANGE_PARAMS_new
_GOST_CLIENT_KEY_EXCHANGE_PARAMS_new proc near
		push	offset ?local_it@?1??GOST_CLIENT_KEY_EXCHANGE_PARAMS_it@@9@9 ; `GOST_CLIENT_KEY_EXCHANGE_PARAMS_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_GOST_CLIENT_KEY_EXCHANGE_PARAMS_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 330h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_AGREEMENT_INFO_free
_GOST_KEY_AGREEMENT_INFO_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??GOST_KEY_AGREEMENT_INFO_it@@9@9 ; `GOST_KEY_AGREEMENT_INFO_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_GOST_KEY_AGREEMENT_INFO_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 344h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_AGREEMENT_INFO_new
_GOST_KEY_AGREEMENT_INFO_new proc near
		push	offset ?local_it@?1??GOST_KEY_AGREEMENT_INFO_it@@9@9 ; `GOST_KEY_AGREEMENT_INFO_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_GOST_KEY_AGREEMENT_INFO_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 354h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_INFO_free
_GOST_KEY_INFO_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??GOST_KEY_INFO_it@@9@9 ; `GOST_KEY_INFO_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_GOST_KEY_INFO_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 368h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_INFO_new
_GOST_KEY_INFO_new proc	near
		push	offset ?local_it@?1??GOST_KEY_INFO_it@@9@9 ; `GOST_KEY_INFO_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_GOST_KEY_INFO_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 378h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_PARAMS_free
_GOST_KEY_PARAMS_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??GOST_KEY_PARAMS_it@@9@9 ; `GOST_KEY_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_GOST_KEY_PARAMS_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 38Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_PARAMS_it
_GOST_KEY_PARAMS_it proc near
		mov	eax, offset ?local_it@?1??GOST_KEY_PARAMS_it@@9@9 ; `GOST_KEY_PARAMS_it'::`2'::local_it
		retn
_GOST_KEY_PARAMS_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 394h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_PARAMS_new
_GOST_KEY_PARAMS_new proc near
		push	offset ?local_it@?1??GOST_KEY_PARAMS_it@@9@9 ; `GOST_KEY_PARAMS_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_GOST_KEY_PARAMS_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3A4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_TRANSPORT_free
_GOST_KEY_TRANSPORT_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??GOST_KEY_TRANSPORT_it@@9@9	; `GOST_KEY_TRANSPORT_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_GOST_KEY_TRANSPORT_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3B8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _GOST_KEY_TRANSPORT_new
_GOST_KEY_TRANSPORT_new	proc near
		push	offset ?local_it@?1??GOST_KEY_TRANSPORT_it@@9@9	; `GOST_KEY_TRANSPORT_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_GOST_KEY_TRANSPORT_new	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3C8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_GOST_CIPHER_PARAMS
_d2i_GOST_CIPHER_PARAMS	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??GOST_CIPHER_PARAMS_it@@9@9	; `GOST_CIPHER_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_GOST_CIPHER_PARAMS	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 3E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_GOST_CLIENT_KEY_EXCHANGE_PARAMS
_d2i_GOST_CLIENT_KEY_EXCHANGE_PARAMS proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??GOST_CLIENT_KEY_EXCHANGE_PARAMS_it@@9@9 ; `GOST_CLIENT_KEY_EXCHANGE_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_GOST_CLIENT_KEY_EXCHANGE_PARAMS endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 400h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_GOST_KEY_AGREEMENT_INFO
_d2i_GOST_KEY_AGREEMENT_INFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??GOST_KEY_AGREEMENT_INFO_it@@9@9 ; `GOST_KEY_AGREEMENT_INFO_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_GOST_KEY_AGREEMENT_INFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 41Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_GOST_KEY_INFO
_d2i_GOST_KEY_INFO proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??GOST_KEY_INFO_it@@9@9 ; `GOST_KEY_INFO_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_GOST_KEY_INFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 438h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_GOST_KEY_PARAMS
_d2i_GOST_KEY_PARAMS proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??GOST_KEY_PARAMS_it@@9@9 ; `GOST_KEY_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_GOST_KEY_PARAMS endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 454h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_GOST_KEY_TRANSPORT
_d2i_GOST_KEY_TRANSPORT	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??GOST_KEY_TRANSPORT_it@@9@9	; `GOST_KEY_TRANSPORT_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_GOST_KEY_TRANSPORT	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 470h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_GOST_CIPHER_PARAMS
_i2d_GOST_CIPHER_PARAMS	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??GOST_CIPHER_PARAMS_it@@9@9	; `GOST_CIPHER_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_GOST_CIPHER_PARAMS	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 488h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_GOST_CLIENT_KEY_EXCHANGE_PARAMS
_i2d_GOST_CLIENT_KEY_EXCHANGE_PARAMS proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??GOST_CLIENT_KEY_EXCHANGE_PARAMS_it@@9@9 ; `GOST_CLIENT_KEY_EXCHANGE_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_GOST_CLIENT_KEY_EXCHANGE_PARAMS endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4A0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_GOST_KEY_AGREEMENT_INFO
_i2d_GOST_KEY_AGREEMENT_INFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??GOST_KEY_AGREEMENT_INFO_it@@9@9 ; `GOST_KEY_AGREEMENT_INFO_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_GOST_KEY_AGREEMENT_INFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4B8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_GOST_KEY_INFO
_i2d_GOST_KEY_INFO proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??GOST_KEY_INFO_it@@9@9 ; `GOST_KEY_INFO_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_GOST_KEY_INFO endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4D0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_GOST_KEY_PARAMS
_i2d_GOST_KEY_PARAMS proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??GOST_KEY_PARAMS_it@@9@9 ; `GOST_KEY_PARAMS_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_GOST_KEY_PARAMS endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 4E8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_GOST_KEY_TRANSPORT
_i2d_GOST_KEY_TRANSPORT	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??GOST_KEY_TRANSPORT_it@@9@9	; `GOST_KEY_TRANSPORT_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_GOST_KEY_TRANSPORT	endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ASN1_OBJECT_it:near ; DATA XREF:	.rdata:000000B0o
					; .rdata:00000108o ...
		extrn _ASN1_OCTET_STRING_it:near ; DATA	XREF: .rdata:0000006Co
					; .rdata:00000080o ...
		extrn _X509_PUBKEY_it:near ; DATA XREF:	.rdata:000000C4o
		extrn _ASN1_item_new:near ; CODE XREF: _GOST_CIPHER_PARAMS_new+5p
					; _GOST_CLIENT_KEY_EXCHANGE_PARAMS_new+5p ...
		extrn _ASN1_item_free:near ; CODE XREF:	_GOST_CIPHER_PARAMS_free+9p
					; _GOST_CLIENT_KEY_EXCHANGE_PARAMS_free+9p ...
		extrn _ASN1_item_d2i:near ; CODE XREF: _d2i_GOST_CIPHER_PARAMS+11p
					; _d2i_GOST_CLIENT_KEY_EXCHANGE_PARAMS+11p ...
		extrn _ASN1_item_i2d:near ; CODE XREF: _i2d_GOST_CIPHER_PARAMS+Dp
					; _i2d_GOST_CLIENT_KEY_EXCHANGE_PARAMS+Dp ...


		end

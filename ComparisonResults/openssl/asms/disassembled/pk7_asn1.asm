;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	872833790B8801768B6D47DA4C8C002A
; Input	CRC32 :	63CC4D39

; File Name   :	C:\compspace\Diff\openssl\obj\pk7_asn1.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
_p7default_tt	dd offset byte_91	; DATA XREF: .rdata:00000028o
		align 8
		dd 14h
		dd offset ??_C@_07JIJPKMF@d?4other?$AA@	; "d.other"
		dd offset _ASN1_ANY_it
; `PKCS7_adb'::`2'::internal_adb
?internal_adb@?1??PKCS7_adb@@9@9 dd 0	; DATA XREF: _PKCS7_adbo
		dd 10h,	0
off_20		dd offset _PKCS7_adbtbl	; DATA XREF: .rdata:00000268o
		dd 6
		dd offset _p7default_tt
		align 10h
_PKCS7_adbtbl	dd 15h,	891h, 0		; DATA XREF: .rdata:off_20o
		dd 14h
		dd offset ??_C@_06OAPKPHLA@d?4data?$AA@	; "d.data"
		dd offset _ASN1_OCTET_STRING_NDEF_it
		dd 16h,	891h, 0
		dd 14h
		dd offset ??_C@_06GOHGJFCL@d?4sign?$AA@	; "d.sign"
		dd offset _PKCS7_SIGNED_it
		dd 17h,	891h, 0
		dd 14h
		dd offset ??_C@_0M@CLKMIMCI@d?4enveloped?$AA@ ;	"d.enveloped"
		dd offset _PKCS7_ENVELOPE_it
		dd 18h,	891h, 0
		dd 14h
off_88		dd offset ??_C@_0BH@FHPJHCLF@d?4signed_and_enveloped?$AA@
					; DATA XREF: .rdata:000003B8o
					; .rdata:00000188o ...
					; "d.signed_and_enveloped"
off_8C		dd offset _PKCS7_SIGN_ENVELOPE_it ; DATA XREF: .rdata:00000174o
					; .rdata:00000204o
		db 19h
byte_91		db 3 dup(0)		; DATA XREF: .rdata:_p7default_tto
		dd offset _PKCS7_RECIP_INFO_it+1
		dd 0
		dd 14h
		dd offset ??_C@_08JOIJLLGO@d?4digest?$AA@ ; "d.digest"
		dd offset _PKCS7_DIGEST_it
		dd 1Ah,	891h, 0
		dd 14h
		dd offset ??_C@_0M@IDEHBFAL@d?4encrypted?$AA@ ;	"d.encrypted"
		dd offset _PKCS7_ENCRYPT_it
_PKCS7_aux	dd 4 dup(0)		; DATA XREF: .rdata:00000110o
		dd offset _pk7_cb
		align 8
_PKCS7_seq_tt	dd 2 dup(0)		; DATA XREF: .rdata:00000108o
		dd 10h
		dd offset ??_C@_04GPMDFGEJ@type?$AA@ ; "type"
		dd offset _ASN1_OBJECT_it
		dd offset ?local_it@?1??PKCS7_it@@9@9 ;	`PKCS7_it'::`2'::local_it
		dd 0FFFFFFFFh, 0
		dd offset ??_C@_05BKMMPIPN@PKCS7?$AA@ ;	"PKCS7"
		dd offset _PKCS7_adb
; `PKCS7_it'::`2'::local_it
?local_it@?1??PKCS7_it@@9@9 dd 6, 10h	; DATA XREF: .rdata:000000ECo
					; _PKCS7_ito ...
		dd offset _PKCS7_seq_tt
		dd 2
		dd offset _PKCS7_aux
		dd 18h
		dd offset ??_C@_05BKMMPIPN@PKCS7?$AA@ ;	"PKCS7"
; `PKCS7_SIGNED_it'::`2'::local_it
?local_it@?1??PKCS7_SIGNED_it@@9@9 dd 6, 10h ; DATA XREF: _PKCS7_SIGNED_ito
					; _PKCS7_SIGNED_freeo ...
		dd offset _PKCS7_SIGNED_seq_tt
		dd 6, 0
		dd 18h
		dd offset ??_C@_0N@CKBJFFNF@PKCS7_SIGNED?$AA@ ;	"PKCS7_SIGNED"
_PKCS7_SIGNED_seq_tt dd	3 dup(0)	; DATA XREF: .rdata:00000124o
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2, 0
		dd 4
		dd offset ??_C@_07MPDKKGPO@md_algs?$AA@	; "md_algs"
		dd offset _X509_ALGOR_it
		dd 2 dup(0)
		dd 14h
		dd offset ??_C@_08ODCIAOPM@contents?$AA@ ; "contents"
		dd offset _PKCS7_it
		dd offset off_8C+1
		dd 0
		dd 8
		dd offset ??_C@_04PHJBACIC@cert?$AA@ ; "cert"
		dd offset _X509_it
		dd offset off_88+3
		dd 1, 0Ch
		dd offset ??_C@_03GJBFOAJL@crl?$AA@ ; `string'
		dd offset _X509_CRL_it
		dd 2, 0
		dd 10h
		dd offset ??_C@_0M@KEDNAHBP@signer_info?$AA@ ; "signer_info"
		dd offset _PKCS7_SIGNER_INFO_it
_PKCS7_SIGNER_INFO_aux dd 4 dup(0)	; DATA XREF: .rdata:00000264o
		dd offset _si_cb
		align 8
_PKCS7_SIGNER_INFO_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:0000025Co
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_0BC@PMGLGNPO@issuer_and_serial?$AA@ ; "issuer_and_serial"
		dd offset _PKCS7_ISSUER_AND_SERIAL_it
		dd 2 dup(0)
		dd 8
		dd offset ??_C@_0L@OGBFEEJI@digest_alg?$AA@ ; "digest_alg"
		dd offset _X509_ALGOR_it
		dd offset off_8C+1
		dd 0
		dd 0Ch
		dd offset ??_C@_09PLABOLFJ@auth_attr?$AA@ ; "auth_attr"
		dd offset _X509_ATTRIBUTE_it
		align 10h
		dd 10h
		dd offset ??_C@_0P@KLFHBHJD@digest_enc_alg?$AA@	; "digest_enc_alg"
		dd offset _X509_ALGOR_it
		dd 2 dup(0)
		dd 14h
		dd offset ??_C@_0L@PJDBOMFC@enc_digest?$AA@ ; "enc_digest"
		dd offset _ASN1_OCTET_STRING_it
		dd offset off_88+3
		dd 1, 18h
		dd offset ??_C@_0M@NNBFAOJK@unauth_attr?$AA@ ; "unauth_attr"
		dd offset _X509_ATTRIBUTE_it
; `PKCS7_SIGNER_INFO_it'::`2'::local_it
?local_it@?1??PKCS7_SIGNER_INFO_it@@9@9	dd 1, 10h ; DATA XREF: _PKCS7_SIGNER_INFO_ito
					; _PKCS7_SIGNER_INFO_freeo ...
		dd offset _PKCS7_SIGNER_INFO_seq_tt
		dd 7
		dd offset _PKCS7_SIGNER_INFO_aux
		dd offset off_20
		dd offset ??_C@_0BC@BFFCPPDG@PKCS7_SIGNER_INFO?$AA@ ; "PKCS7_SIGNER_INFO"
_PKCS7_ISSUER_AND_SERIAL_seq_tt	dd 3 dup(0) ; DATA XREF: .rdata:000002A0o
		dd offset ??_C@_06EAINIONG@issuer?$AA@ ; "issuer"
		dd offset _X509_NAME_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_06KCELPKEE@serial?$AA@ ; "serial"
		dd offset _ASN1_INTEGER_it
; `PKCS7_ISSUER_AND_SERIAL_it'::`2'::local_it
?local_it@?1??PKCS7_ISSUER_AND_SERIAL_it@@9@9 dd 1, 10h
					; DATA XREF: _PKCS7_ISSUER_AND_SERIAL_ito
					; _PKCS7_ISSUER_AND_SERIAL_freeo ...
		dd offset _PKCS7_ISSUER_AND_SERIAL_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0BI@POAIONGK@PKCS7_ISSUER_AND_SERIAL?$AA@ ; "PKCS7_ISSUER_AND_SERIAL"
_PKCS7_ENVELOPE_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:000002F8o
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2, 0
		dd 4
		dd offset ??_C@_0O@HGJALPPJ@recipientinfo?$AA@ ; "recipientinfo"
		dd offset _PKCS7_RECIP_INFO_it
		dd 2 dup(0)
		dd 8
		dd offset ??_C@_08ENNDKKOI@enc_data?$AA@ ; "enc_data"
		dd offset _PKCS7_ENC_CONTENT_it
; `PKCS7_ENVELOPE_it'::`2'::local_it
?local_it@?1??PKCS7_ENVELOPE_it@@9@9 dd	6, 10h ; DATA XREF: _PKCS7_ENVELOPE_ito
					; _PKCS7_ENVELOPE_freeo ...
		dd offset _PKCS7_ENVELOPE_seq_tt
		dd 3, 0
		dd 0Ch
		dd offset ??_C@_0P@KCJMJLOD@PKCS7_ENVELOPE?$AA@	; "PKCS7_ENVELOPE"
_PKCS7_RECIP_INFO_aux dd 4 dup(0)	; DATA XREF: .rdata:00000334o
		dd offset _ri_cb
		dd 0
; `PKCS7_RECIP_INFO_it'::`2'::local_it
?local_it@?1??PKCS7_RECIP_INFO_it@@9@9 dd 1, 10h ; DATA	XREF: _PKCS7_RECIP_INFO_ito
					; _PKCS7_RECIP_INFO_freeo ...
		dd offset _PKCS7_RECIP_INFO_seq_tt
		dd 4
		dd offset _PKCS7_RECIP_INFO_aux
		dd 14h
		dd offset ??_C@_0BB@MGPEFENK@PKCS7_RECIP_INFO?$AA@ ; "PKCS7_RECIP_INFO"
_PKCS7_RECIP_INFO_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:0000032Co
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_0BC@PMGLGNPO@issuer_and_serial?$AA@ ; "issuer_and_serial"
		dd offset _PKCS7_ISSUER_AND_SERIAL_it
		align 10h
		dd 8
		dd offset ??_C@_0O@ODFHHMFC@key_enc_algor?$AA@ ; "key_enc_algor"
		dd offset _X509_ALGOR_it
		dd 2 dup(0)
		dd 0Ch
		dd offset ??_C@_07LBLKCHGJ@enc_key?$AA@	; "enc_key"
		dd offset _ASN1_OCTET_STRING_it
_PKCS7_ENC_CONTENT_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:000003D4o
		dd offset ??_C@_0N@IEAAACJL@content_type?$AA@ ;	"content_type"
		dd offset _ASN1_OBJECT_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_09JPNFBOJG@algorithm?$AA@ ; "algorithm"
		dd offset _X509_ALGOR_it
		dd offset off_88+1
		align 10h
		dd 8
		dd offset ??_C@_08ENNDKKOI@enc_data?$AA@ ; "enc_data"
		dd offset _ASN1_OCTET_STRING_NDEF_it
; `PKCS7_ENC_CONTENT_it'::`2'::local_it
?local_it@?1??PKCS7_ENC_CONTENT_it@@9@9	dd 6, 10h ; DATA XREF: _PKCS7_ENC_CONTENT_ito
					; _PKCS7_ENC_CONTENT_freeo ...
		dd offset _PKCS7_ENC_CONTENT_seq_tt
		dd 3, 0
		dd 10h
		dd offset ??_C@_0BC@INKEDPEG@PKCS7_ENC_CONTENT?$AA@ ; "PKCS7_ENC_CONTENT"
_PKCS7_SIGN_ENVELOPE_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:0000047Co
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2, 0
		dd 18h
		dd offset ??_C@_0O@HGJALPPJ@recipientinfo?$AA@ ; "recipientinfo"
		dd offset _PKCS7_RECIP_INFO_it
		dd 2, 0
		dd 4
		dd offset ??_C@_07MPDKKGPO@md_algs?$AA@	; "md_algs"
		dd offset _X509_ALGOR_it
		dd 2 dup(0)
		dd 14h
		dd offset ??_C@_08ENNDKKOI@enc_data?$AA@ ; "enc_data"
		dd offset _PKCS7_ENC_CONTENT_it
		dd offset off_88+3
		align 10h
		dd 8
		dd offset ??_C@_04PHJBACIC@cert?$AA@ ; "cert"
		dd offset _X509_it
		dd offset off_88+3
		dd 1, 0Ch
		dd offset ??_C@_03GJBFOAJL@crl?$AA@ ; `string'
		dd offset _X509_CRL_it
		dd 2, 0
		dd 10h
		dd offset ??_C@_0M@KEDNAHBP@signer_info?$AA@ ; "signer_info"
		dd offset _PKCS7_SIGNER_INFO_it
; `PKCS7_SIGN_ENVELOPE_it'::`2'::local_it
?local_it@?1??PKCS7_SIGN_ENVELOPE_it@@9@9 dd 6,	10h ; DATA XREF: _PKCS7_SIGN_ENVELOPE_ito
					; _PKCS7_SIGN_ENVELOPE_freeo ...
		dd offset _PKCS7_SIGN_ENVELOPE_seq_tt
		dd 7, 0
		dd 1Ch
		dd offset ??_C@_0BE@LMHBPFDD@PKCS7_SIGN_ENVELOPE?$AA@ ;	"PKCS7_SIGN_ENVELOPE"
_PKCS7_ENCRYPT_seq_tt dd 3 dup(0)	; DATA XREF: .rdata:000004C0o
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_08ENNDKKOI@enc_data?$AA@ ; "enc_data"
		dd offset _PKCS7_ENC_CONTENT_it
; `PKCS7_ENCRYPT_it'::`2'::local_it
?local_it@?1??PKCS7_ENCRYPT_it@@9@9 dd 6, 10h ;	DATA XREF: _PKCS7_ENCRYPT_ito
					; _PKCS7_ENCRYPT_freeo	...
		dd offset _PKCS7_ENCRYPT_seq_tt
		dd 2, 0
		dd 8
		dd offset ??_C@_0O@GIFGHKGC@PKCS7_ENCRYPT?$AA@ ; "PKCS7_ENCRYPT"
; `PKCS7_DIGEST_it'::`2'::local_it
?local_it@?1??PKCS7_DIGEST_it@@9@9 dd 6, 10h ; DATA XREF: _PKCS7_DIGEST_ito
					; _PKCS7_DIGEST_freeo ...
		dd offset _PKCS7_DIGEST_seq_tt
		dd 4, 0
		dd 10h
		dd offset ??_C@_0N@NAILNAH@PKCS7_DIGEST?$AA@ ; "PKCS7_DIGEST"
_PKCS7_DIGEST_seq_tt dd	3 dup(0)	; DATA XREF: .rdata:000004DCo
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_02EBCANADN@md?$AA@ ; `string'
		dd offset _X509_ALGOR_it
		align 10h
		dd 8
		dd offset ??_C@_08ODCIAOPM@contents?$AA@ ; "contents"
		dd offset _PKCS7_it
		dd 2 dup(0)
		dd 0Ch
		dd offset ??_C@_06IJPNAHC@digest?$AA@ ;	"digest"
		dd offset _ASN1_OCTET_STRING_it
_PKCS7_ATTR_SIGN_item_tt dd 6, 2 dup(0)	; DATA XREF: .rdata:0000055Co
		dd offset ??_C@_0BB@ODHHPICH@PKCS7_ATTRIBUTES?$AA@ ; "PKCS7_ATTRIBUTES"
		dd offset _X509_ATTRIBUTE_it
; `PKCS7_ATTR_SIGN_it'::`2'::local_it
?local_it@?1??PKCS7_ATTR_SIGN_it@@9@9 dd 0 ; DATA XREF:	_PKCS7_ATTR_SIGN_ito
		dd 0FFFFFFFFh
		dd offset _PKCS7_ATTR_SIGN_item_tt
		dd 3 dup(0)
		dd offset ??_C@_0BA@IJMFEGLH@PKCS7_ATTR_SIGN?$AA@ ; "PKCS7_ATTR_SIGN"
_PKCS7_ATTR_VERIFY_item_tt dd 0Ch, 11h,	0 ; DATA XREF: .rdata:0000058Co
		dd offset ??_C@_0BB@ODHHPICH@PKCS7_ATTRIBUTES?$AA@ ; "PKCS7_ATTRIBUTES"
		dd offset _X509_ATTRIBUTE_it
; `PKCS7_ATTR_VERIFY_it'::`2'::local_it
?local_it@?1??PKCS7_ATTR_VERIFY_it@@9@9	dd 0 ; DATA XREF: _PKCS7_ATTR_VERIFY_ito
		dd 0FFFFFFFFh
		dd offset _PKCS7_ATTR_VERIFY_item_tt
		dd 3 dup(0)
		dd offset ??_C@_0BC@DLHIINOH@PKCS7_ATTR_VERIFY?$AA@ ; "PKCS7_ATTR_VERIFY"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5A0h
; COMDAT (pick any)
		public ??_C@_07JIJPKMF@d?4other?$AA@
; `string'
??_C@_07JIJPKMF@d?4other?$AA@ db 'd.other',0 ; DATA XREF: .rdata:0000000Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5A8h
; COMDAT (pick any)
		public ??_C@_06OAPKPHLA@d?4data?$AA@
; `string'
??_C@_06OAPKPHLA@d?4data?$AA@ db 'd.data',0 ; DATA XREF: .rdata:00000040o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5B0h
; COMDAT (pick any)
		public ??_C@_06GOHGJFCL@d?4sign?$AA@
; `string'
??_C@_06GOHGJFCL@d?4sign?$AA@ db 'd.sign',0 ; DATA XREF: .rdata:00000058o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5B8h
; COMDAT (pick any)
		public ??_C@_0M@CLKMIMCI@d?4enveloped?$AA@
; `string'
??_C@_0M@CLKMIMCI@d?4enveloped?$AA@ db 'd.enveloped',0 ; DATA XREF: .rdata:00000070o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5C4h
; COMDAT (pick any)
		public ??_C@_0BH@FHPJHCLF@d?4signed_and_enveloped?$AA@
; `string'
??_C@_0BH@FHPJHCLF@d?4signed_and_enveloped?$AA@	db 'd.signed_and_enveloped',0
					; DATA XREF: .rdata:off_88o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5DCh
; COMDAT (pick any)
		public ??_C@_08JOIJLLGO@d?4digest?$AA@
; `string'
??_C@_08JOIJLLGO@d?4digest?$AA@	db 'd.digest',0 ; DATA XREF: .rdata:000000A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5E8h
; COMDAT (pick any)
		public ??_C@_0M@IDEHBFAL@d?4encrypted?$AA@
; `string'
??_C@_0M@IDEHBFAL@d?4encrypted?$AA@ db 'd.encrypted',0 ; DATA XREF: .rdata:000000B8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5F4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_PKCS7_adb	proc near		; DATA XREF: .rdata:000000FCo
		mov	eax, offset ?internal_adb@?1??PKCS7_adb@@9@9 ; `PKCS7_adb'::`2'::internal_adb
		retn
_PKCS7_adb	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 5FCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_pk7_cb		proc near		; DATA XREF: .rdata:000000D0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_C		= dword	ptr  10h

		mov	eax, [esp+arg_0]
		add	eax, 0FFFFFFF6h
		push	esi
		push	edi
		cmp	eax, 3		; switch 4 cases
		ja	short loc_658	; jumptable 00000612 default case
		mov	esi, [esp+8+arg_C]
		mov	edi, [esp+8+arg_4]
		jmp	ds:$LN13[eax*4]	; switch jump
; ---------------------------------------------------------------------------

$LN4:					; CODE XREF: _pk7_cb+16j
					; DATA XREF: .text$mn:$LN13o
		push	dword ptr [edi]	; jumptable 00000612 case 0
		lea	eax, [esi+8]
		push	eax
		call	_PKCS7_stream
		add	esp, 8
		test	eax, eax
		jle	short loc_63E

$LN5:					; CODE XREF: _pk7_cb+16j
					; DATA XREF: .text$mn:$LN13o
		push	dword ptr [esi]	; jumptable 00000612 case 2
		push	dword ptr [edi]
		call	_PKCS7_dataInit
		add	esp, 8
		mov	[esi+4], eax
		test	eax, eax
		jnz	short loc_658	; jumptable 00000612 default case

loc_63E:				; CODE XREF: _pk7_cb+2Dj _pk7_cb+5Aj
		pop	edi
		xor	eax, eax
		pop	esi
		retn
; ---------------------------------------------------------------------------

$LN8:					; CODE XREF: _pk7_cb+16j
					; DATA XREF: .text$mn:$LN13o
		mov	eax, esi	; jumptable 00000612 cases 1,3
		push	dword ptr [eax+4]
		mov	eax, edi
		push	dword ptr [eax]
		call	_PKCS7_dataFinal
		add	esp, 8
		test	eax, eax
		jle	short loc_63E

loc_658:				; CODE XREF: _pk7_cb+Cj _pk7_cb+40j
		pop	edi		; jumptable 00000612 default case
		mov	eax, 1
		pop	esi
		retn
_pk7_cb		endp

; ---------------------------------------------------------------------------
$LN13		dd offset $LN4		; DATA XREF: _pk7_cb+16r
		dd offset $LN8		; jump table for switch	statement
		dd offset $LN5
		dd offset $LN8
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 670h
; COMDAT (pick any)
		public ??_C@_04GPMDFGEJ@type?$AA@
; `string'
??_C@_04GPMDFGEJ@type?$AA@ db 'type',0  ; DATA XREF: .rdata:000000E4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 678h
; COMDAT (pick any)
		public ??_C@_05BKMMPIPN@PKCS7?$AA@
; `string'
??_C@_05BKMMPIPN@PKCS7?$AA@ db 'PKCS7',0 ; DATA XREF: .rdata:000000F8o
					; .rdata:00000118o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 680h
; COMDAT (pick any)
		public ??_C@_07CPCPJPKL@version?$AA@
; `string'
??_C@_07CPCPJPKL@version?$AA@ db 'version',0 ; DATA XREF: .rdata:00000144o
					; .rdata:000001D4o ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 688h
; COMDAT (pick any)
		public ??_C@_07MPDKKGPO@md_algs?$AA@
; `string'
??_C@_07MPDKKGPO@md_algs?$AA@ db 'md_algs',0 ; DATA XREF: .rdata:00000158o
					; .rdata:0000041Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 690h
; COMDAT (pick any)
		public ??_C@_08ODCIAOPM@contents?$AA@
; `string'
??_C@_08ODCIAOPM@contents?$AA@ db 'contents',0 ; DATA XREF: .rdata:0000016Co
					; .rdata:00000524o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 69Ch
; COMDAT (pick any)
		public ??_C@_04PHJBACIC@cert?$AA@
; `string'
??_C@_04PHJBACIC@cert?$AA@ db 'cert',0  ; DATA XREF: .rdata:00000180o
					; .rdata:00000444o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6A4h
; COMDAT (pick any)
		public ??_C@_03GJBFOAJL@crl?$AA@
; `string'
??_C@_03GJBFOAJL@crl?$AA@ dd 6C7263h	; DATA XREF: .rdata:00000194o
					; .rdata:00000458o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6A8h
; COMDAT (pick any)
		public ??_C@_0M@KEDNAHBP@signer_info?$AA@
; `string'
??_C@_0M@KEDNAHBP@signer_info?$AA@ db 'signer_info',0 ; DATA XREF: .rdata:000001A8o
					; .rdata:0000046Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6B4h
; COMDAT (pick any)
		public ??_C@_0N@CKBJFFNF@PKCS7_SIGNED?$AA@
; `string'
??_C@_0N@CKBJFFNF@PKCS7_SIGNED?$AA@ db 'PKCS7_SIGNED',0 ; DATA XREF: .rdata:00000134o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 6C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_si_cb		proc near		; DATA XREF: .rdata:000001C0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		cmp	[esp+arg_0], 3
		jnz	short loc_6DC
		mov	eax, [esp+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+1Ch]
		call	_EVP_PKEY_free
		add	esp, 4

loc_6DC:				; CODE XREF: _si_cb+5j
		mov	eax, 1
		retn
_si_cb		endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6E4h
; COMDAT (pick any)
		public ??_C@_0BC@PMGLGNPO@issuer_and_serial?$AA@
; `string'
??_C@_0BC@PMGLGNPO@issuer_and_serial?$AA@ db 'issuer_and_serial',0
					; DATA XREF: .rdata:000001E8o
					; .rdata:00000360o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6F8h
; COMDAT (pick any)
		public ??_C@_0L@OGBFEEJI@digest_alg?$AA@
; `string'
??_C@_0L@OGBFEEJI@digest_alg?$AA@ db 'digest_alg',0 ; DATA XREF: .rdata:000001FCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 704h
; COMDAT (pick any)
		public ??_C@_09PLABOLFJ@auth_attr?$AA@
; `string'
??_C@_09PLABOLFJ@auth_attr?$AA@	db 'auth_attr',0 ; DATA XREF: .rdata:00000210o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 710h
; COMDAT (pick any)
		public ??_C@_0P@KLFHBHJD@digest_enc_alg?$AA@
; `string'
??_C@_0P@KLFHBHJD@digest_enc_alg?$AA@ db 'digest_enc_alg',0 ; DATA XREF: .rdata:00000224o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 720h
; COMDAT (pick any)
		public ??_C@_0L@PJDBOMFC@enc_digest?$AA@
; `string'
??_C@_0L@PJDBOMFC@enc_digest?$AA@ db 'enc_digest',0 ; DATA XREF: .rdata:00000238o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 72Ch
; COMDAT (pick any)
		public ??_C@_0M@NNBFAOJK@unauth_attr?$AA@
; `string'
??_C@_0M@NNBFAOJK@unauth_attr?$AA@ db 'unauth_attr',0 ; DATA XREF: .rdata:0000024Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 738h
; COMDAT (pick any)
		public ??_C@_0BC@BFFCPPDG@PKCS7_SIGNER_INFO?$AA@
; `string'
??_C@_0BC@BFFCPPDG@PKCS7_SIGNER_INFO?$AA@ db 'PKCS7_SIGNER_INFO',0
					; DATA XREF: .rdata:0000026Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74Ch
; COMDAT (pick any)
		public ??_C@_06EAINIONG@issuer?$AA@
; `string'
??_C@_06EAINIONG@issuer?$AA@ db	'issuer',0 ; DATA XREF: .rdata:0000027Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 754h
; COMDAT (pick any)
		public ??_C@_06KCELPKEE@serial?$AA@
; `string'
??_C@_06KCELPKEE@serial?$AA@ db	'serial',0 ; DATA XREF: .rdata:00000290o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 75Ch
; COMDAT (pick any)
		public ??_C@_0BI@POAIONGK@PKCS7_ISSUER_AND_SERIAL?$AA@
; `string'
??_C@_0BI@POAIONGK@PKCS7_ISSUER_AND_SERIAL?$AA@	db 'PKCS7_ISSUER_AND_SERIAL',0
					; DATA XREF: .rdata:000002B0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 774h
; COMDAT (pick any)
		public ??_C@_0O@HGJALPPJ@recipientinfo?$AA@
; `string'
??_C@_0O@HGJALPPJ@recipientinfo?$AA@ db	'recipientinfo',0 ; DATA XREF: .rdata:000002D4o
					; .rdata:00000408o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 784h
; COMDAT (pick any)
		public ??_C@_08ENNDKKOI@enc_data?$AA@
; `string'
??_C@_08ENNDKKOI@enc_data?$AA@ db 'enc_data',0 ; DATA XREF: .rdata:000002E8o
					; .rdata:000003C4o ...
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 790h
; COMDAT (pick any)
		public ??_C@_0P@KCJMJLOD@PKCS7_ENVELOPE?$AA@
; `string'
??_C@_0P@KCJMJLOD@PKCS7_ENVELOPE?$AA@ db 'PKCS7_ENVELOPE',0 ; DATA XREF: .rdata:00000308o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 7A0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_ri_cb		proc near		; DATA XREF: .rdata:0000031Co

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		cmp	[esp+arg_0], 3
		jnz	short loc_7B8
		mov	eax, [esp+arg_4]
		mov	eax, [eax]
		push	dword ptr [eax+10h]
		call	_X509_free
		add	esp, 4

loc_7B8:				; CODE XREF: _ri_cb+5j
		mov	eax, 1
		retn
_ri_cb		endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7C0h
; COMDAT (pick any)
		public ??_C@_0O@ODFHHMFC@key_enc_algor?$AA@
; `string'
??_C@_0O@ODFHHMFC@key_enc_algor?$AA@ db	'key_enc_algor',0 ; DATA XREF: .rdata:00000374o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7D0h
; COMDAT (pick any)
		public ??_C@_07LBLKCHGJ@enc_key?$AA@
; `string'
??_C@_07LBLKCHGJ@enc_key?$AA@ db 'enc_key',0 ; DATA XREF: .rdata:00000388o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7D8h
; COMDAT (pick any)
		public ??_C@_0BB@MGPEFENK@PKCS7_RECIP_INFO?$AA@
; `string'
??_C@_0BB@MGPEFENK@PKCS7_RECIP_INFO?$AA@ db 'PKCS7_RECIP_INFO',0
					; DATA XREF: .rdata:0000033Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7ECh
; COMDAT (pick any)
		public ??_C@_0N@IEAAACJL@content_type?$AA@
; `string'
??_C@_0N@IEAAACJL@content_type?$AA@ db 'content_type',0 ; DATA XREF: .rdata:0000039Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7FCh
; COMDAT (pick any)
		public ??_C@_09JPNFBOJG@algorithm?$AA@
; `string'
??_C@_09JPNFBOJG@algorithm?$AA@	db 'algorithm',0 ; DATA XREF: .rdata:000003B0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 808h
; COMDAT (pick any)
		public ??_C@_0BC@INKEDPEG@PKCS7_ENC_CONTENT?$AA@
; `string'
??_C@_0BC@INKEDPEG@PKCS7_ENC_CONTENT?$AA@ db 'PKCS7_ENC_CONTENT',0
					; DATA XREF: .rdata:000003E4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 81Ch
; COMDAT (pick any)
		public ??_C@_0BE@LMHBPFDD@PKCS7_SIGN_ENVELOPE?$AA@
; `string'
??_C@_0BE@LMHBPFDD@PKCS7_SIGN_ENVELOPE?$AA@ db 'PKCS7_SIGN_ENVELOPE',0
					; DATA XREF: .rdata:0000048Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 830h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ISSUER_AND_SERIAL_it
_PKCS7_ISSUER_AND_SERIAL_it proc near	; DATA XREF: .rdata:000001ECo
					; .rdata:00000364o
		mov	eax, offset ?local_it@?1??PKCS7_ISSUER_AND_SERIAL_it@@9@9 ; `PKCS7_ISSUER_AND_SERIAL_it'::`2'::local_it
		retn
_PKCS7_ISSUER_AND_SERIAL_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 838h
; COMDAT (pick any)
		public ??_C@_0O@GIFGHKGC@PKCS7_ENCRYPT?$AA@
; `string'
??_C@_0O@GIFGHKGC@PKCS7_ENCRYPT?$AA@ db	'PKCS7_ENCRYPT',0 ; DATA XREF: .rdata:000004D0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 848h
; COMDAT (pick any)
		public ??_C@_02EBCANADN@md?$AA@
; `string'
??_C@_02EBCANADN@md?$AA@ db 6Dh, 64h, 0	; DATA XREF: .rdata:00000510o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84Ch
; COMDAT (pick any)
		public ??_C@_06IJPNAHC@digest?$AA@
; `string'
??_C@_06IJPNAHC@digest?$AA@ db 'digest',0 ; DATA XREF: .rdata:00000538o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 854h
; COMDAT (pick any)
		public ??_C@_0N@NAILNAH@PKCS7_DIGEST?$AA@
; `string'
??_C@_0N@NAILNAH@PKCS7_DIGEST?$AA@ db 'PKCS7_DIGEST',0 ; DATA XREF: .rdata:000004ECo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 864h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGNER_INFO_it
_PKCS7_SIGNER_INFO_it proc near		; DATA XREF: .rdata:000001ACo
					; .rdata:00000470o
		mov	eax, offset ?local_it@?1??PKCS7_SIGNER_INFO_it@@9@9 ; `PKCS7_SIGNER_INFO_it'::`2'::local_it
		retn
_PKCS7_SIGNER_INFO_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 86Ch
; COMDAT (pick any)
		public ??_C@_0BB@ODHHPICH@PKCS7_ATTRIBUTES?$AA@
; `string'
??_C@_0BB@ODHHPICH@PKCS7_ATTRIBUTES?$AA@ db 'PKCS7_ATTRIBUTES',0
					; DATA XREF: .rdata:0000054Co
					; .rdata:0000057Co
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 880h
; COMDAT (pick any)
		public ??_C@_0BA@IJMFEGLH@PKCS7_ATTR_SIGN?$AA@
; `string'
??_C@_0BA@IJMFEGLH@PKCS7_ATTR_SIGN?$AA@	db 'PKCS7_ATTR_SIGN',0 ; DATA XREF: .rdata:0000056Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 890h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_RECIP_INFO_it
_PKCS7_RECIP_INFO_it proc near		; DATA XREF: .rdata:000002D8o
					; .rdata:0000040Co ...
		mov	eax, offset ?local_it@?1??PKCS7_RECIP_INFO_it@@9@9 ; `PKCS7_RECIP_INFO_it'::`2'::local_it
		retn
_PKCS7_RECIP_INFO_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 898h
; COMDAT (pick any)
		public ??_C@_0BC@DLHIINOH@PKCS7_ATTR_VERIFY?$AA@
; `string'
??_C@_0BC@DLHIINOH@PKCS7_ATTR_VERIFY?$AA@ db 'PKCS7_ATTR_VERIFY',0
					; DATA XREF: .rdata:0000059Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8ACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGNED_it
_PKCS7_SIGNED_it proc near		; DATA XREF: .rdata:0000005Co
		mov	eax, offset ?local_it@?1??PKCS7_SIGNED_it@@9@9 ; `PKCS7_SIGNED_it'::`2'::local_it
		retn
_PKCS7_SIGNED_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8B4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENC_CONTENT_it
_PKCS7_ENC_CONTENT_it proc near		; DATA XREF: .rdata:000002ECo
					; .rdata:00000434o ...
		mov	eax, offset ?local_it@?1??PKCS7_ENC_CONTENT_it@@9@9 ; `PKCS7_ENC_CONTENT_it'::`2'::local_it
		retn
_PKCS7_ENC_CONTENT_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENVELOPE_it
_PKCS7_ENVELOPE_it proc	near		; DATA XREF: .rdata:00000074o
		mov	eax, offset ?local_it@?1??PKCS7_ENVELOPE_it@@9@9 ; `PKCS7_ENVELOPE_it'::`2'::local_it
		retn
_PKCS7_ENVELOPE_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8C4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGN_ENVELOPE_it
_PKCS7_SIGN_ENVELOPE_it	proc near	; DATA XREF: .rdata:off_8Co
		mov	eax, offset ?local_it@?1??PKCS7_SIGN_ENVELOPE_it@@9@9 ;	`PKCS7_SIGN_ENVELOPE_it'::`2'::local_it
		retn
_PKCS7_SIGN_ENVELOPE_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8CCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_DIGEST_it
_PKCS7_DIGEST_it proc near		; DATA XREF: .rdata:000000A4o
		mov	eax, offset ?local_it@?1??PKCS7_DIGEST_it@@9@9 ; `PKCS7_DIGEST_it'::`2'::local_it
		retn
_PKCS7_DIGEST_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENCRYPT_it
_PKCS7_ENCRYPT_it proc near		; DATA XREF: .rdata:000000BCo
		mov	eax, offset ?local_it@?1??PKCS7_ENCRYPT_it@@9@9	; `PKCS7_ENCRYPT_it'::`2'::local_it
		retn
_PKCS7_ENCRYPT_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8DCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_it
_PKCS7_it	proc near		; DATA XREF: .rdata:00000170o
					; .rdata:00000528o
		mov	eax, offset ?local_it@?1??PKCS7_it@@9@9	; `PKCS7_it'::`2'::local_it
		retn
_PKCS7_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ATTR_SIGN_it
_PKCS7_ATTR_SIGN_it proc near
		mov	eax, offset ?local_it@?1??PKCS7_ATTR_SIGN_it@@9@9 ; `PKCS7_ATTR_SIGN_it'::`2'::local_it
		retn
_PKCS7_ATTR_SIGN_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8ECh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ATTR_VERIFY_it
_PKCS7_ATTR_VERIFY_it proc near
		mov	eax, offset ?local_it@?1??PKCS7_ATTR_VERIFY_it@@9@9 ; `PKCS7_ATTR_VERIFY_it'::`2'::local_it
		retn
_PKCS7_ATTR_VERIFY_it endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 8F4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_DIGEST_free
_PKCS7_DIGEST_free proc	near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_DIGEST_it@@9@9 ; `PKCS7_DIGEST_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_DIGEST_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 908h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_DIGEST_new
_PKCS7_DIGEST_new proc near
		push	offset ?local_it@?1??PKCS7_DIGEST_it@@9@9 ; `PKCS7_DIGEST_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_DIGEST_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 918h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENCRYPT_free
_PKCS7_ENCRYPT_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_ENCRYPT_it@@9@9 ; `PKCS7_ENCRYPT_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_ENCRYPT_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 92Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENCRYPT_new
_PKCS7_ENCRYPT_new proc	near
		push	offset ?local_it@?1??PKCS7_ENCRYPT_it@@9@9 ; `PKCS7_ENCRYPT_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_ENCRYPT_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 93Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENC_CONTENT_free
_PKCS7_ENC_CONTENT_free	proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_ENC_CONTENT_it@@9@9 ; `PKCS7_ENC_CONTENT_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_ENC_CONTENT_free	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 950h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENC_CONTENT_new
_PKCS7_ENC_CONTENT_new proc near
		push	offset ?local_it@?1??PKCS7_ENC_CONTENT_it@@9@9 ; `PKCS7_ENC_CONTENT_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_ENC_CONTENT_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 960h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENVELOPE_free
_PKCS7_ENVELOPE_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_ENVELOPE_it@@9@9 ; `PKCS7_ENVELOPE_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_ENVELOPE_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 974h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ENVELOPE_new
_PKCS7_ENVELOPE_new proc near
		push	offset ?local_it@?1??PKCS7_ENVELOPE_it@@9@9 ; `PKCS7_ENVELOPE_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_ENVELOPE_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 984h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ISSUER_AND_SERIAL_free
_PKCS7_ISSUER_AND_SERIAL_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_ISSUER_AND_SERIAL_it@@9@9 ; `PKCS7_ISSUER_AND_SERIAL_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_ISSUER_AND_SERIAL_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 998h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_ISSUER_AND_SERIAL_new
_PKCS7_ISSUER_AND_SERIAL_new proc near
		push	offset ?local_it@?1??PKCS7_ISSUER_AND_SERIAL_it@@9@9 ; `PKCS7_ISSUER_AND_SERIAL_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_ISSUER_AND_SERIAL_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9A8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_RECIP_INFO_free
_PKCS7_RECIP_INFO_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_RECIP_INFO_it@@9@9 ;	`PKCS7_RECIP_INFO_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_RECIP_INFO_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9BCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_RECIP_INFO_new
_PKCS7_RECIP_INFO_new proc near
		push	offset ?local_it@?1??PKCS7_RECIP_INFO_it@@9@9 ;	`PKCS7_RECIP_INFO_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_RECIP_INFO_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9CCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGNED_free
_PKCS7_SIGNED_free proc	near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_SIGNED_it@@9@9 ; `PKCS7_SIGNED_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_SIGNED_free endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9E0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGNED_new
_PKCS7_SIGNED_new proc near
		push	offset ?local_it@?1??PKCS7_SIGNED_it@@9@9 ; `PKCS7_SIGNED_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_SIGNED_new endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 9F0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGNER_INFO_free
_PKCS7_SIGNER_INFO_free	proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_SIGNER_INFO_it@@9@9 ; `PKCS7_SIGNER_INFO_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_SIGNER_INFO_free	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A04h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGNER_INFO_new
_PKCS7_SIGNER_INFO_new proc near
		push	offset ?local_it@?1??PKCS7_SIGNER_INFO_it@@9@9 ; `PKCS7_SIGNER_INFO_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_SIGNER_INFO_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A14h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGN_ENVELOPE_free
_PKCS7_SIGN_ENVELOPE_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_SIGN_ENVELOPE_it@@9@9 ; `PKCS7_SIGN_ENVELOPE_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_SIGN_ENVELOPE_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A28h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_SIGN_ENVELOPE_new
_PKCS7_SIGN_ENVELOPE_new proc near
		push	offset ?local_it@?1??PKCS7_SIGN_ENVELOPE_it@@9@9 ; `PKCS7_SIGN_ENVELOPE_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_SIGN_ENVELOPE_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A38h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_dup
_PKCS7_dup	proc near

arg_0		= dword	ptr  4

		push	[esp+arg_0]
		push	offset ?local_it@?1??PKCS7_it@@9@9 ; `PKCS7_it'::`2'::local_it
		call	_ASN1_item_dup
		add	esp, 8
		retn
_PKCS7_dup	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A4Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_free
_PKCS7_free	proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??PKCS7_it@@9@9 ; `PKCS7_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_PKCS7_free	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A60h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_new
_PKCS7_new	proc near
		push	offset ?local_it@?1??PKCS7_it@@9@9 ; `PKCS7_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_PKCS7_new	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A70h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _PKCS7_print_ctx
_PKCS7_print_ctx proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	[esp+arg_C]
		push	offset ?local_it@?1??PKCS7_it@@9@9 ; `PKCS7_it'::`2'::local_it
		push	[esp+8+arg_8]
		push	[esp+0Ch+arg_4]
		push	[esp+10h+arg_0]
		call	_ASN1_item_print
		add	esp, 14h
		retn
_PKCS7_print_ctx endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0A90h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7
_d2i_PKCS7	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_it@@9@9 ; `PKCS7_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AACh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_DIGEST
_d2i_PKCS7_DIGEST proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_DIGEST_it@@9@9 ; `PKCS7_DIGEST_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_DIGEST endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AC8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_ENCRYPT
_d2i_PKCS7_ENCRYPT proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_ENCRYPT_it@@9@9 ; `PKCS7_ENCRYPT_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_ENCRYPT endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0AE4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_ENC_CONTENT
_d2i_PKCS7_ENC_CONTENT proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_ENC_CONTENT_it@@9@9 ; `PKCS7_ENC_CONTENT_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_ENC_CONTENT endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B00h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_ENVELOPE
_d2i_PKCS7_ENVELOPE proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_ENVELOPE_it@@9@9 ; `PKCS7_ENVELOPE_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_ENVELOPE endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B1Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_ISSUER_AND_SERIAL
_d2i_PKCS7_ISSUER_AND_SERIAL proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_ISSUER_AND_SERIAL_it@@9@9 ; `PKCS7_ISSUER_AND_SERIAL_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_ISSUER_AND_SERIAL endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B38h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_RECIP_INFO
_d2i_PKCS7_RECIP_INFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_RECIP_INFO_it@@9@9 ;	`PKCS7_RECIP_INFO_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_RECIP_INFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B54h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_SIGNED
_d2i_PKCS7_SIGNED proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_SIGNED_it@@9@9 ; `PKCS7_SIGNED_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_SIGNED endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B70h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_SIGNER_INFO
_d2i_PKCS7_SIGNER_INFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_SIGNER_INFO_it@@9@9 ; `PKCS7_SIGNER_INFO_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_SIGNER_INFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0B8Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_PKCS7_SIGN_ENVELOPE
_d2i_PKCS7_SIGN_ENVELOPE proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??PKCS7_SIGN_ENVELOPE_it@@9@9 ; `PKCS7_SIGN_ENVELOPE_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_PKCS7_SIGN_ENVELOPE endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BA8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7
_i2d_PKCS7	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_it@@9@9 ; `PKCS7_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BC0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_DIGEST
_i2d_PKCS7_DIGEST proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_DIGEST_it@@9@9 ; `PKCS7_DIGEST_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_DIGEST endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BD8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_ENCRYPT
_i2d_PKCS7_ENCRYPT proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_ENCRYPT_it@@9@9 ; `PKCS7_ENCRYPT_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_ENCRYPT endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0BF0h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_ENC_CONTENT
_i2d_PKCS7_ENC_CONTENT proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_ENC_CONTENT_it@@9@9 ; `PKCS7_ENC_CONTENT_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_ENC_CONTENT endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C08h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_ENVELOPE
_i2d_PKCS7_ENVELOPE proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_ENVELOPE_it@@9@9 ; `PKCS7_ENVELOPE_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_ENVELOPE endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C20h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_ISSUER_AND_SERIAL
_i2d_PKCS7_ISSUER_AND_SERIAL proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_ISSUER_AND_SERIAL_it@@9@9 ; `PKCS7_ISSUER_AND_SERIAL_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_ISSUER_AND_SERIAL endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C38h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_NDEF
_i2d_PKCS7_NDEF	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_it@@9@9 ; `PKCS7_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_ndef_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_NDEF	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C50h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_RECIP_INFO
_i2d_PKCS7_RECIP_INFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_RECIP_INFO_it@@9@9 ;	`PKCS7_RECIP_INFO_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_RECIP_INFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C68h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_SIGNED
_i2d_PKCS7_SIGNED proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_SIGNED_it@@9@9 ; `PKCS7_SIGNED_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_SIGNED endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C80h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_SIGNER_INFO
_i2d_PKCS7_SIGNER_INFO proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_SIGNER_INFO_it@@9@9 ; `PKCS7_SIGNER_INFO_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_SIGNER_INFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0C98h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_PKCS7_SIGN_ENVELOPE
_i2d_PKCS7_SIGN_ENVELOPE proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??PKCS7_SIGN_ENVELOPE_it@@9@9 ; `PKCS7_SIGN_ENVELOPE_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_PKCS7_SIGN_ENVELOPE endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ASN1_INTEGER_it:near ; DATA XREF: .rdata:00000148o
					; .rdata:000001D8o ...
		extrn _ASN1_OCTET_STRING_it:near ; DATA	XREF: .rdata:0000023Co
					; .rdata:0000038Co ...
		extrn _X509_ALGOR_it:near ; DATA XREF: .rdata:0000015Co
					; .rdata:00000200o ...
		extrn _ASN1_OCTET_STRING_NDEF_it:near ;	DATA XREF: .rdata:00000044o
					; .rdata:000003C8o
		extrn _X509_ATTRIBUTE_it:near ;	DATA XREF: .rdata:00000214o
					; .rdata:00000250o ...
		extrn _X509_NAME_it:near ; DATA	XREF: .rdata:00000280o
		extrn _X509_it:near	; DATA XREF: .rdata:00000184o
					; .rdata:00000448o
		extrn _X509_CRL_it:near	; DATA XREF: .rdata:00000198o
					; .rdata:0000045Co
		extrn _ASN1_ANY_it:near	; DATA XREF: .rdata:00000010o
		extrn _ASN1_OBJECT_it:near ; DATA XREF:	.rdata:000000E8o
					; .rdata:000003A0o
		extrn _ASN1_item_dup:near ; CODE XREF: _PKCS7_dup+9p
		extrn _ASN1_item_new:near ; CODE XREF: _PKCS7_DIGEST_new+5p
					; _PKCS7_ENCRYPT_new+5p ...
		extrn _ASN1_item_free:near ; CODE XREF:	_PKCS7_DIGEST_free+9p
					; _PKCS7_ENCRYPT_free+9p ...
		extrn _ASN1_item_d2i:near ; CODE XREF: _d2i_PKCS7+11p
					; _d2i_PKCS7_DIGEST+11p ...
		extrn _ASN1_item_i2d:near ; CODE XREF: _i2d_PKCS7+Dp
					; _i2d_PKCS7_DIGEST+Dp	...
		extrn _ASN1_item_ndef_i2d:near ; CODE XREF: _i2d_PKCS7_NDEF+Dp
		extrn _ASN1_item_print:near ; CODE XREF: _PKCS7_print_ctx+15p
		extrn _PKCS7_dataInit:near ; CODE XREF:	_pk7_cb+33p
		extrn _PKCS7_dataFinal:near ; CODE XREF: _pk7_cb+50p
		extrn _PKCS7_stream:near ; CODE	XREF: _pk7_cb+23p
		extrn _EVP_PKEY_free:near ; CODE XREF: _si_cb+10p
		extrn _X509_free:near	; CODE XREF: _ri_cb+10p


		end

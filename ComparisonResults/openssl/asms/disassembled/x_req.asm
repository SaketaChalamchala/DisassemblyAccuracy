;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	CAD1AA88FF1DF7828E37635247661314
; Input	CRC32 :	5476E316

; File Name   :	C:\compspace\Diff\openssl\obj\x_req.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_rinf_cb	proc near		; DATA XREF: .rdata:00000034o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		cmp	[esp+arg_0], 1
		mov	eax, [esp+arg_4]
		push	esi
		mov	esi, [eax]
		jnz	short loc_1C
		call	_sk_new_null
		mov	[esi+18h], eax
		test	eax, eax
		jnz	short loc_1C
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_1C:					; CODE XREF: _rinf_cb+Cj _rinf_cb+18j
		mov	eax, 1
		pop	esi
		retn
_rinf_cb	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 24h
_X509_REQ_INFO_aux dd 0			; DATA XREF: .rdata:0000009Co
		dd 2, 2	dup(0)
		dd offset _rinf_cb
		dd 0
_X509_REQ_INFO_seq_tt dd 2 dup(0)	; DATA XREF: .rdata:00000094o
		dd 0Ch
		dd offset ??_C@_07CPCPJPKL@version?$AA@	; "version"
		dd offset _ASN1_INTEGER_it
		dd 2 dup(0)
		dd 10h
		dd offset ??_C@_07JNNGEGGO@subject?$AA@	; "subject"
		dd offset _X509_NAME_it
		dd 2 dup(0)
		dd 14h
		dd offset ??_C@_06GKCAPDID@pubkey?$AA@ ; "pubkey"
		dd offset _X509_PUBKEY_it
		dd offset off_88+3
		align 10h
		dd 18h
		dd offset ??_C@_0L@HNMJPKNA@attributes?$AA@ ; "attributes"
off_88		dd offset _X509_ATTRIBUTE_it ; DATA XREF: .rdata:00000078o
; `X509_REQ_INFO_it'::`2'::local_it
?local_it@?1??X509_REQ_INFO_it@@9@9 dd 1, 10h ;	DATA XREF: _X509_REQ_INFO_ito
					; _X509_REQ_INFO_freeo	...
		dd offset _X509_REQ_INFO_seq_tt
		dd 4
		dd offset _X509_REQ_INFO_aux
		dd 1Ch
		dd offset ??_C@_0O@EHCMNJCB@X509_REQ_INFO?$AA@ ; "X509_REQ_INFO"
_X509_REQ_aux	dd 0			; DATA XREF: .rdata:0000010Co
		dd 1, 0Ch, 7, 2	dup(0)
_X509_REQ_seq_tt dd 3 dup(0)		; DATA XREF: .rdata:00000104o
		dd offset ??_C@_08JILJKJG@req_info?$AA@	; "req_info"
		dd offset _X509_REQ_INFO_it
		dd 2 dup(0)
		dd 4
		dd offset ??_C@_07OBHFIHGJ@sig_alg?$AA@	; "sig_alg"
		dd offset _X509_ALGOR_it
		align 10h
		dd 8
		dd offset ??_C@_09CMIIOJHF@signature?$AA@ ; "signature"
		dd offset _ASN1_BIT_STRING_it
; `X509_REQ_it'::`2'::local_it
?local_it@?1??X509_REQ_it@@9@9 dd 1, 10h ; DATA	XREF: _X509_REQ_dup+4o
					; _X509_REQ_freeo ...
		dd offset _X509_REQ_seq_tt
		dd 3
		dd offset _X509_REQ_aux
		dd 10h
		dd offset ??_C@_08JIPBBKBM@X509_REQ?$AA@ ; "X509_REQ"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 118h
; COMDAT (pick any)
		public ??_C@_07CPCPJPKL@version?$AA@
; `string'
??_C@_07CPCPJPKL@version?$AA@ db 'version',0 ; DATA XREF: .rdata:00000048o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 120h
; COMDAT (pick any)
		public ??_C@_07JNNGEGGO@subject?$AA@
; `string'
??_C@_07JNNGEGGO@subject?$AA@ db 'subject',0 ; DATA XREF: .rdata:0000005Co
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 128h
; COMDAT (pick any)
		public ??_C@_06GKCAPDID@pubkey?$AA@
; `string'
??_C@_06GKCAPDID@pubkey?$AA@ db	'pubkey',0 ; DATA XREF: .rdata:00000070o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 130h
; COMDAT (pick any)
		public ??_C@_0L@HNMJPKNA@attributes?$AA@
; `string'
??_C@_0L@HNMJPKNA@attributes?$AA@ db 'attributes',0 ; DATA XREF: .rdata:00000084o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13Ch
; COMDAT (pick any)
		public ??_C@_0O@EHCMNJCB@X509_REQ_INFO?$AA@
; `string'
??_C@_0O@EHCMNJCB@X509_REQ_INFO?$AA@ db	'X509_REQ_INFO',0 ; DATA XREF: .rdata:000000A4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14Ch
; COMDAT (pick any)
		public ??_C@_08JILJKJG@req_info?$AA@
; `string'
??_C@_08JILJKJG@req_info?$AA@ db 'req_info',0 ; DATA XREF: .rdata:000000CCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 158h
; COMDAT (pick any)
		public ??_C@_07OBHFIHGJ@sig_alg?$AA@
; `string'
??_C@_07OBHFIHGJ@sig_alg?$AA@ db 'sig_alg',0 ; DATA XREF: .rdata:000000E0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 160h
; COMDAT (pick any)
		public ??_C@_09CMIIOJHF@signature?$AA@
; `string'
??_C@_09CMIIOJHF@signature?$AA@	db 'signature',0 ; DATA XREF: .rdata:000000F4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16Ch
; COMDAT (pick any)
		public ??_C@_08JIPBBKBM@X509_REQ?$AA@
; `string'
??_C@_08JIPBBKBM@X509_REQ?$AA@ db 'X509_REQ',0 ; DATA XREF: .rdata:00000114o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 178h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REQ_INFO_it
_X509_REQ_INFO_it proc near		; DATA XREF: .rdata:000000D0o
		mov	eax, offset ?local_it@?1??X509_REQ_INFO_it@@9@9	; `X509_REQ_INFO_it'::`2'::local_it
		retn
_X509_REQ_INFO_it endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 180h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REQ_INFO_free
_X509_REQ_INFO_free proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??X509_REQ_INFO_it@@9@9 ; `X509_REQ_INFO_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_X509_REQ_INFO_free endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 194h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REQ_INFO_new
_X509_REQ_INFO_new proc	near
		push	offset ?local_it@?1??X509_REQ_INFO_it@@9@9 ; `X509_REQ_INFO_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_X509_REQ_INFO_new endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1A4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REQ_dup
_X509_REQ_dup	proc near

arg_0		= dword	ptr  4

		push	[esp+arg_0]
		push	offset ?local_it@?1??X509_REQ_it@@9@9 ;	`X509_REQ_it'::`2'::local_it
		call	_ASN1_item_dup
		add	esp, 8
		retn
_X509_REQ_dup	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1B8h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REQ_free
_X509_REQ_free	proc near

arg_0		= dword	ptr  4

		push	offset ?local_it@?1??X509_REQ_it@@9@9 ;	`X509_REQ_it'::`2'::local_it
		push	[esp+4+arg_0]
		call	_ASN1_item_free
		add	esp, 8
		retn
_X509_REQ_free	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1CCh
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REQ_it
_X509_REQ_it	proc near
		mov	eax, offset ?local_it@?1??X509_REQ_it@@9@9 ; `X509_REQ_it'::`2'::local_it
		retn
_X509_REQ_it	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1D4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _X509_REQ_new
_X509_REQ_new	proc near
		push	offset ?local_it@?1??X509_REQ_it@@9@9 ;	`X509_REQ_it'::`2'::local_it
		call	_ASN1_item_new
		add	esp, 4
		retn
_X509_REQ_new	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 1E4h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_X509_REQ
_d2i_X509_REQ	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??X509_REQ_it@@9@9 ;	`X509_REQ_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_X509_REQ	endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 200h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _d2i_X509_REQ_INFO
_d2i_X509_REQ_INFO proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	offset ?local_it@?1??X509_REQ_INFO_it@@9@9 ; `X509_REQ_INFO_it'::`2'::local_it
		push	[esp+4+arg_8]
		push	[esp+8+arg_4]
		push	[esp+0Ch+arg_0]
		call	_ASN1_item_d2i
		add	esp, 10h
		retn
_d2i_X509_REQ_INFO endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 21Ch
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_X509_REQ
_i2d_X509_REQ	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??X509_REQ_it@@9@9 ;	`X509_REQ_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_X509_REQ	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 234h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _i2d_X509_REQ_INFO
_i2d_X509_REQ_INFO proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	offset ?local_it@?1??X509_REQ_INFO_it@@9@9 ; `X509_REQ_INFO_it'::`2'::local_it
		push	[esp+4+arg_4]
		push	[esp+8+arg_0]
		call	_ASN1_item_i2d
		add	esp, 0Ch
		retn
_i2d_X509_REQ_INFO endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ASN1_BIT_STRING_it:near ; DATA XREF: .rdata:000000F8o
		extrn _ASN1_INTEGER_it:near ; DATA XREF: .rdata:0000004Co
		extrn _X509_ALGOR_it:near ; DATA XREF: .rdata:000000E4o
		extrn _X509_PUBKEY_it:near ; DATA XREF:	.rdata:00000074o
		extrn _X509_ATTRIBUTE_it:near ;	DATA XREF: .rdata:off_88o
		extrn _X509_NAME_it:near ; DATA	XREF: .rdata:00000060o
		extrn _sk_new_null:near	; CODE XREF: _rinf_cb+Ep
		extrn _ASN1_item_dup:near ; CODE XREF: _X509_REQ_dup+9p
		extrn _ASN1_item_new:near ; CODE XREF: _X509_REQ_INFO_new+5p
					; _X509_REQ_new+5p
		extrn _ASN1_item_free:near ; CODE XREF:	_X509_REQ_INFO_free+9p
					; _X509_REQ_free+9p
		extrn _ASN1_item_d2i:near ; CODE XREF: _d2i_X509_REQ+11p
					; _d2i_X509_REQ_INFO+11p
		extrn _ASN1_item_i2d:near ; CODE XREF: _i2d_X509_REQ+Dp
					; _i2d_X509_REQ_INFO+Dp


		end

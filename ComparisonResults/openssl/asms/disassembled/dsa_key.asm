;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	24E73417F4A2192071409A28EE42D4EC
; Input	CRC32 :	5551D0EA

; File Name   :	C:\compspace\Diff\openssl\obj\dsa_key.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRT"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _DSA_generate_key
_DSA_generate_key proc near

arg_0		= dword	ptr  4

		mov	ecx, [esp+arg_0]
		mov	eax, [ecx+3Ch]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_14
		mov	[esp+arg_0], ecx
		jmp	eax
; ---------------------------------------------------------------------------

loc_14:					; CODE XREF: _DSA_generate_key+Cj
		mov	[esp+arg_0], ecx
		jmp	_dsa_builtin_keygen
_DSA_generate_key endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 20h
; COMDAT (pick no duplicate)
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_dsa_builtin_keygen proc near		; CODE XREF: _DSA_generate_key+18j

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		mov	eax, 18h
		call	__chkstk
		push	ebx
		push	ebp
		xor	ebp, ebp
		call	_BN_CTX_new
		mov	ebx, eax
		mov	[esp+20h+var_18], ebx
		test	ebx, ebx
		jz	loc_133
		push	esi
		push	edi
		mov	edi, [esp+28h+arg_0]
		mov	esi, [edi+1Ch]
		test	esi, esi
		jnz	short loc_60
		call	_BN_new
		mov	esi, eax
		test	esi, esi
		jz	loc_128
		nop	dword ptr [eax]

loc_60:					; CODE XREF: _dsa_builtin_keygen+2Cj
					; _dsa_builtin_keygen+57j
		push	dword ptr [edi+10h]
		push	esi
		call	_BN_rand_range
		add	esp, 8
		test	eax, eax
		jz	loc_115
		cmp	[esi+4], ebp
		jz	short loc_60
		mov	ebx, [edi+18h]
		test	ebx, ebx
		jnz	short loc_8F
		call	_BN_new
		mov	ebx, eax
		test	ebx, ebx
		jz	loc_111

loc_8F:					; CODE XREF: _dsa_builtin_keygen+5Ej
		test	byte ptr [edi+28h], 2
		jnz	short loc_D9
		lea	eax, [esp+28h+var_14]
		push	eax
		call	_BN_init
		mov	eax, [esi]
		lea	edx, [esp+2Ch+var_14]
		mov	ecx, [esi+10h]
		add	esp, 4
		mov	[esp+28h+var_14], eax
		and	ecx, 0FFFFFFFEh
		mov	eax, [esi+4]
		mov	[esp+28h+var_10], eax
		mov	eax, [esi+8]
		mov	[esp+28h+var_C], eax
		mov	eax, [esi+0Ch]
		mov	[esp+28h+var_8], eax
		mov	eax, [esp+28h+var_4]
		and	eax, 1
		or	ecx, eax
		or	ecx, 6
		mov	[esp+28h+var_4], ecx
		jmp	short loc_DB
; ---------------------------------------------------------------------------

loc_D9:					; CODE XREF: _dsa_builtin_keygen+73j
		mov	edx, esi

loc_DB:					; CODE XREF: _dsa_builtin_keygen+B7j
		push	[esp+28h+var_18]
		push	dword ptr [edi+0Ch]
		push	edx
		push	dword ptr [edi+14h]
		push	ebx
		call	_BN_mod_exp
		add	esp, 14h
		test	eax, eax
		jz	short $err$35
		mov	[edi+1Ch], esi
		mov	ebp, 1
		mov	[edi+18h], ebx

$err$35:				; CODE XREF: _dsa_builtin_keygen+D1j
		test	ebx, ebx
		jz	short loc_111
		cmp	dword ptr [edi+18h], 0
		jnz	short loc_111
		push	ebx
		call	_BN_free
		add	esp, 4

loc_111:				; CODE XREF: _dsa_builtin_keygen+69j
					; _dsa_builtin_keygen+E0j ...
		mov	ebx, [esp+28h+var_18]

loc_115:				; CODE XREF: _dsa_builtin_keygen+4Ej
		test	esi, esi
		jz	short loc_128
		cmp	dword ptr [edi+1Ch], 0
		jnz	short loc_128
		push	esi
		call	_BN_free
		add	esp, 4

loc_128:				; CODE XREF: _dsa_builtin_keygen+37j
					; _dsa_builtin_keygen+F7j ...
		push	ebx
		call	_BN_CTX_free
		add	esp, 4
		pop	edi
		pop	esi

loc_133:				; CODE XREF: _dsa_builtin_keygen+1Bj
		mov	eax, ebp
		pop	ebp
		pop	ebx
		add	esp, 18h
		retn
_dsa_builtin_keygen endp

_text$mn	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _BN_CTX_new:near	; CODE XREF: _dsa_builtin_keygen+Ep
		extrn _BN_CTX_free:near	; CODE XREF: _dsa_builtin_keygen+109p
		extrn _BN_rand_range:near ; CODE XREF: _dsa_builtin_keygen+44p
		extrn _BN_new:near	; CODE XREF: _dsa_builtin_keygen+2Ep
					; _dsa_builtin_keygen+60p
		extrn _BN_init:near	; CODE XREF: _dsa_builtin_keygen+7Ap
		extrn _BN_free:near	; CODE XREF: _dsa_builtin_keygen+E9p
					; _dsa_builtin_keygen+100p
		extrn _BN_mod_exp:near	; CODE XREF: _dsa_builtin_keygen+C7p
		extrn __chkstk:near	; CODE XREF: _dsa_builtin_keygen+5p


		end

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\test\igetest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_ige_test_vectors DB 00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+32
	DB	01aH
	DB	085H
	DB	019H
	DB	0a6H
	DB	055H
	DB	07bH
	DB	0e6H
	DB	052H
	DB	0e9H
	DB	0daH
	DB	08eH
	DB	043H
	DB	0daH
	DB	04eH
	DB	0f4H
	DB	045H
	DB	03cH
	DB	0f4H
	DB	056H
	DB	0b4H
	DB	0caH
	DB	048H
	DB	08aH
	DB	0a3H
	DB	083H
	DB	0c7H
	DB	09cH
	DB	098H
	DB	0b3H
	DB	047H
	DB	097H
	DB	0cbH
	ORG $+32
	DD	020H
	DD	01H
	DB	054H
	DB	068H
	DB	069H
	DB	073H
	DB	020H
	DB	069H
	DB	073H
	DB	020H
	DB	061H
	DB	06eH
	DB	020H
	DB	069H
	DB	06dH
	DB	070H
	DB	06cH
	DB	065H
	DB	06dH
	DB	065H
	DB	06eH
	DB	074H
	DB	061H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	020H
	DB	06fH
	DB	066H
	DB	020H
	DB	049H
	DB	047H
	DB	045H
	DB	020H
	DB	06dH
	DB	06fH
	DB	064H
	DB	065H
	DB	020H
	DB	066H
	DB	06fH
	DB	072H
	DB	020H
	DB	04fH
	DB	070H
	DB	065H
	DB	06eH
	DB	053H
	DB	053H
	DB	04cH
	DB	02eH
	DB	020H
	DB	04cH
	DB	065H
	DB	074H
	DB	027H
	DB	073H
	DB	020H
	DB	068H
	DB	06fH
	DB	070H
	DB	065H
	DB	020H
	DB	042H
	DB	065H
	DB	06eH
	DB	020H
	DB	067H
	DB	06fH
	DB	074H
	DB	020H
	DB	069H
	DB	074H
	DB	020H
	DB	072H
	DB	069H
	DB	067H
	DB	068H
	DB	074H
	DB	021H
	DB	0aH
	ORG $+32
	DB	099H
	DB	070H
	DB	064H
	DB	087H
	DB	0a1H
	DB	0cdH
	DB	0e6H
	DB	013H
	DB	0bcH
	DB	06dH
	DB	0e0H
	DB	0b6H
	DB	0f2H
	DB	04bH
	DB	01cH
	DB	07aH
	DB	0a4H
	DB	048H
	DB	0c8H
	DB	0b9H
	DB	0c3H
	DB	040H
	DB	03eH
	DB	034H
	DB	067H
	DB	0a8H
	DB	0caH
	DB	0d8H
	DB	093H
	DB	040H
	DB	0f5H
	DB	03bH
	ORG $+32
	DD	020H
	DD	00H
_bi_ige_test_vectors DB 00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	ORG $+16
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	ORG $+16
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	02aH
	DB	02bH
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	03aH
	DB	03bH
	DB	03cH
	DB	03dH
	DB	03eH
	DB	03fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+32
	DB	014H
	DB	040H
	DB	06fH
	DB	0aeH
	DB	0a2H
	DB	079H
	DB	0f2H
	DB	056H
	DB	01fH
	DB	086H
	DB	0ebH
	DB	03bH
	DB	07dH
	DB	0ffH
	DB	053H
	DB	0dcH
	DB	04eH
	DB	027H
	DB	0cH
	DB	03H
	DB	0deH
	DB	07cH
	DB	0e5H
	DB	016H
	DB	06aH
	DB	09cH
	DB	020H
	DB	033H
	DB	09dH
	DB	033H
	DB	0feH
	DB	012H
	ORG $+32
	DD	010H
	DD	020H
	DD	01H
	DB	058H
	DB	0aH
	DB	06H
	DB	0e9H
	DB	097H
	DB	07H
	DB	059H
	DB	05cH
	DB	09eH
	DB	019H
	DB	0d2H
	DB	0a7H
	DB	0bbH
	DB	040H
	DB	02bH
	DB	07aH
	DB	0c7H
	DB	0d8H
	DB	011H
	DB	09eH
	DB	04cH
	DB	051H
	DB	035H
	DB	075H
	DB	064H
	DB	028H
	DB	0fH
	DB	023H
	DB	0adH
	DB	074H
	DB	0acH
	DB	037H
	DB	0d1H
	DB	080H
	DB	0a0H
	DB	031H
	DB	047H
	DB	0a3H
	DB	011H
	DB	013H
	DB	086H
	DB	026H
	DB	09eH
	DB	06dH
	DB	0ffH
	DB	0afH
	DB	072H
	DB	074H
	DB	05bH
	DB	0a2H
	DB	035H
	DB	081H
	DB	0d2H
	DB	0a6H
	DB	03dH
	DB	021H
	DB	067H
	DB	07bH
	DB	058H
	DB	0a8H
	DB	018H
	DB	0f9H
	DB	072H
	DB	0e4H
	DB	080H
	DB	03dH
	DB	0bdH
	DB	04cH
	DB	0e6H
	DB	07bH
	DB	06H
	DB	0a9H
	DB	053H
	DB	035H
	DB	0d5H
	DB	07eH
	DB	071H
	DB	0c1H
	DB	070H
	DB	070H
	DB	074H
	DB	09aH
	DB	00H
	DB	028H
	DB	0cH
	DB	0bfH
	DB	06cH
	DB	042H
	DB	09bH
	DB	0a4H
	DB	0ddH
	DB	065H
	DB	011H
	DB	077H
	DB	07cH
	DB	067H
	DB	0feH
	DB	076H
	DB	0aH
	DB	0f0H
	DB	0d5H
	DB	0c6H
	DB	06eH
	DB	06aH
	DB	0e7H
	DB	05eH
	DB	04cH
	DB	0f2H
	DB	07eH
	DB	09eH
	DB	0f9H
	DB	020H
	DB	0eH
	DB	054H
	DB	06fH
	DB	02dH
	DB	08aH
	DB	08dH
	DB	07eH
	DB	0bdH
	DB	048H
	DB	079H
	DB	037H
	DB	099H
	DB	0ffH
	DB	027H
	DB	093H
	DB	0a3H
	DB	0f1H
	DB	054H
	DB	03dH
	DB	0caH
	DB	0feH
	DB	0b5H
	DB	0efH
	DB	01cH
	DB	04fH
	DB	0a6H
	DB	043H
	DB	0f6H
	DB	0e6H
	DB	048H
	DB	057H
	DB	0f0H
	DB	0eeH
	DB	015H
	DB	07fH
	DB	0e3H
	DB	0e7H
	DB	02fH
	DB	0d0H
	DB	02fH
	DB	011H
	DB	095H
	DB	07aH
	DB	017H
	DB	00H
	DB	0abH
	DB	0a7H
	DB	0bH
	DB	0beH
	DB	044H
	DB	09H
	DB	09cH
	DB	0cdH
	DB	0acH
	DB	0a8H
	DB	052H
	DB	0a1H
	DB	08eH
	DB	07bH
	DB	075H
	DB	0bcH
	DB	0a4H
	DB	092H
	DB	05aH
	DB	0abH
	DB	046H
	DB	0d3H
	DB	03aH
	DB	0a0H
	DB	0d5H
	DB	035H
	DB	01cH
	DB	055H
	DB	0a4H
	DB	0b3H
	DB	0a8H
	DB	040H
	DB	081H
	DB	0a5H
	DB	0bH
	DB	042H
	DB	0e5H
	DB	028H
	DB	030H
	DB	031H
	DB	0c2H
	DB	0a0H
	DB	023H
	DB	068H
	DB	049H
	DB	04eH
	DB	0b3H
	DB	024H
	DB	059H
	DB	092H
	DB	079H
	DB	0c1H
	DB	0a5H
	DB	0ccH
	DB	0e6H
	DB	076H
	DB	053H
	DB	0b1H
	DB	0cfH
	DB	020H
	DB	086H
	DB	023H
	DB	0e8H
	DB	072H
	DB	055H
	DB	099H
	DB	092H
	DB	0dH
	DB	016H
	DB	01cH
	DB	05aH
	DB	02fH
	DB	0ceH
	DB	0cbH
	DB	051H
	DB	0e2H
	DB	067H
	DB	0faH
	DB	010H
	DB	0ecH
	DB	0cdH
	DB	03dH
	DB	067H
	DB	0a5H
	DB	0e6H
	DB	0f7H
	DB	031H
	DB	026H
	DB	0b0H
	DB	0dH
	DB	076H
	DB	05eH
	DB	028H
	DB	0dcH
	DB	07fH
	DB	01H
	DB	0c5H
	DB	0a5H
	DB	04cH
	DD	020H
	DD	040H
	DD	01H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_printf
PUBLIC	_main
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_05NCCIJLFN@?6?$CF04x?$AA@			; `string'
PUBLIC	??_C@_05HAJCMBLP@?5?$CF02x?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_1CC@KEOKIMGK@?$AA?4?$AA?2?$AAt?$AAe?$AAs?$AAt?$AA?2?$AAi?$AAg?$AAe?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DK@IPENBGIC@?$AAv?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAV?$AAE?$AAC?$AAT?$AAO?$AAR?$AA_?$AAS?$AAI?$AAZ?$AAE?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BL@IPHILNNE@IGE?5test?5vector?5?$CFd?5failed?6?$AA@ ; `string'
PUBLIC	??_C@_03ICHNJLJF@key?$AA@			; `string'
PUBLIC	??_C@_02DONNAIDC@iv?$AA@			; `string'
PUBLIC	??_C@_02LMMGJAGL@in?$AA@			; `string'
PUBLIC	??_C@_08LBKEHGGD@expected?$AA@			; `string'
PUBLIC	??_C@_03HAJCNPLG@got?$AA@			; `string'
PUBLIC	??_C@_0CM@BNPPFIBL@IGE?5test?5vector?5?$CFd?5failed?5?$CIwith?5@ ; `string'
PUBLIC	??_C@_0CJ@INLGIHPL@Bidirectional?5IGE?5test?5vector?5?$CFd@ ; `string'
PUBLIC	??_C@_05JFPLPHLM@key?51?$AA@			; `string'
PUBLIC	??_C@_05LONGKEHP@key?52?$AA@			; `string'
PUBLIC	??_C@_0BP@BGFLFOMO@Encrypt?$CLdecrypt?5doesn?8t?5match?6?$AA@ ; `string'
PUBLIC	??_C@_09DOLMGAGM@Plaintext?$AA@			; `string'
PUBLIC	??_C@_09NPDOMLIM@Checktext?$AA@			; `string'
PUBLIC	??_C@_0CH@MPBMAGFO@Chained?5encrypt?$CLdecrypt?5doesn?8t?5@ ; `string'
PUBLIC	??_C@_0CP@MGBKBHHG@Chained?5encrypt?$CLchained?5decrypt?5@ ; `string'
PUBLIC	??_C@_0CH@EFDNEHKM@More?5than?551?$CF?$CF?5matches?5after?5gar@ ; `string'
PUBLIC	??_C@_0BL@MFACJGC@Garble?5extends?5backwards?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0DE@FIANGABF@More?5than?51?$CF?$CF?5matches?5after?5bidi@ ; `string'
PUBLIC	??_C@_0DI@DPNJCMFM@More?5than?51?$CF?$CF?5matches?5after?5bidi@ ; `string'
PUBLIC	??_C@_0DI@IHGFELDJ@More?5than?51?$CF?$CF?5matches?5after?5bidi@ ; `string'
EXTRN	_AES_set_encrypt_key:PROC
EXTRN	_AES_set_decrypt_key:PROC
EXTRN	_AES_ige_encrypt:PROC
EXTRN	_AES_bi_ige_encrypt:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp___wassert:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0DI@IHGFELDJ@More?5than?51?$CF?$CF?5matches?5after?5bidi@
CONST	SEGMENT
??_C@_0DI@IHGFELDJ@More?5than?51?$CF?$CF?5matches?5after?5bidi@ DB 'More '
	DB	'than 1%% matches after bidirectional garbling (3)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@DPNJCMFM@More?5than?51?$CF?$CF?5matches?5after?5bidi@
CONST	SEGMENT
??_C@_0DI@DPNJCMFM@More?5than?51?$CF?$CF?5matches?5after?5bidi@ DB 'More '
	DB	'than 1%% matches after bidirectional garbling (2)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@FIANGABF@More?5than?51?$CF?$CF?5matches?5after?5bidi@
CONST	SEGMENT
??_C@_0DE@FIANGABF@More?5than?51?$CF?$CF?5matches?5after?5bidi@ DB 'More '
	DB	'than 1%% matches after bidirectional garbling', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MFACJGC@Garble?5extends?5backwards?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BL@MFACJGC@Garble?5extends?5backwards?$CB?6?$AA@ DB 'Garble extend'
	DB	's backwards!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EFDNEHKM@More?5than?551?$CF?$CF?5matches?5after?5gar@
CONST	SEGMENT
??_C@_0CH@EFDNEHKM@More?5than?551?$CF?$CF?5matches?5after?5gar@ DB 'More '
	DB	'than 51%% matches after garbling', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MGBKBHHG@Chained?5encrypt?$CLchained?5decrypt?5@
CONST	SEGMENT
??_C@_0CP@MGBKBHHG@Chained?5encrypt?$CLchained?5decrypt?5@ DB 'Chained en'
	DB	'crypt+chained decrypt doesn''t match', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MPBMAGFO@Chained?5encrypt?$CLdecrypt?5doesn?8t?5@
CONST	SEGMENT
??_C@_0CH@MPBMAGFO@Chained?5encrypt?$CLdecrypt?5doesn?8t?5@ DB 'Chained e'
	DB	'ncrypt+decrypt doesn''t match', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NPDOMLIM@Checktext?$AA@
CONST	SEGMENT
??_C@_09NPDOMLIM@Checktext?$AA@ DB 'Checktext', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DOLMGAGM@Plaintext?$AA@
CONST	SEGMENT
??_C@_09DOLMGAGM@Plaintext?$AA@ DB 'Plaintext', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BGFLFOMO@Encrypt?$CLdecrypt?5doesn?8t?5match?6?$AA@
CONST	SEGMENT
??_C@_0BP@BGFLFOMO@Encrypt?$CLdecrypt?5doesn?8t?5match?6?$AA@ DB 'Encrypt'
	DB	'+decrypt doesn''t match', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LONGKEHP@key?52?$AA@
CONST	SEGMENT
??_C@_05LONGKEHP@key?52?$AA@ DB 'key 2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JFPLPHLM@key?51?$AA@
CONST	SEGMENT
??_C@_05JFPLPHLM@key?51?$AA@ DB 'key 1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@INLGIHPL@Bidirectional?5IGE?5test?5vector?5?$CFd@
CONST	SEGMENT
??_C@_0CJ@INLGIHPL@Bidirectional?5IGE?5test?5vector?5?$CFd@ DB 'Bidirecti'
	DB	'onal IGE test vector %d failed', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BNPPFIBL@IGE?5test?5vector?5?$CFd?5failed?5?$CIwith?5@
CONST	SEGMENT
??_C@_0CM@BNPPFIBL@IGE?5test?5vector?5?$CFd?5failed?5?$CIwith?5@ DB 'IGE '
	DB	'test vector %d failed (with in == out)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03HAJCNPLG@got?$AA@
CONST	SEGMENT
??_C@_03HAJCNPLG@got?$AA@ DB 'got', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LBKEHGGD@expected?$AA@
CONST	SEGMENT
??_C@_08LBKEHGGD@expected?$AA@ DB 'expected', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGJAGL@in?$AA@
CONST	SEGMENT
??_C@_02LMMGJAGL@in?$AA@ DB 'in', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DONNAIDC@iv?$AA@
CONST	SEGMENT
??_C@_02DONNAIDC@iv?$AA@ DB 'iv', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICHNJLJF@key?$AA@
CONST	SEGMENT
??_C@_03ICHNJLJF@key?$AA@ DB 'key', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IPHILNNE@IGE?5test?5vector?5?$CFd?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BL@IPHILNNE@IGE?5test?5vector?5?$CFd?5failed?6?$AA@ DB 'IGE test v'
	DB	'ector %d failed', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@IPENBGIC@?$AAv?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAV?$AAE?$AAC?$AAT?$AAO?$AAR?$AA_?$AAS?$AAI?$AAZ?$AAE?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@IPENBGIC@?$AAv?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAV?$AAE?$AAC?$AAT?$AAO?$AAR?$AA_?$AAS?$AAI?$AAZ?$AAE?$AA?$AA@ DB 'v'
	DB	00H, '-', 00H, '>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	't', 00H, 'h', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'M'
	DB	00H, 'A', 00H, 'X', 00H, '_', 00H, 'V', 00H, 'E', 00H, 'C', 00H
	DB	'T', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z'
	DB	00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@KEOKIMGK@?$AA?4?$AA?2?$AAt?$AAe?$AAs?$AAt?$AA?2?$AAi?$AAg?$AAe?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@KEOKIMGK@?$AA?4?$AA?2?$AAt?$AAe?$AAs?$AAt?$AA?2?$AAi?$AAg?$AAe?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '\', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, '\', 00H
	DB	'i', 00H, 'g', 00H, 'e', 00H, 't', 00H, 'e', 00H, 's', 00H, 't'
	DB	00H, '.', 00H, 'c', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
CONST	SEGMENT
??_C@_05HAJCMBLP@?5?$CF02x?$AA@ DB ' %02x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
CONST	SEGMENT
??_C@_05NCCIJLFN@?6?$CF04x?$AA@ DB 0aH, '%04x', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_saved_iv$1$ = -31372					; size = 16
_saved_iv$2$ = -31356					; size = 16
_saved_iv$3$ = -31340					; size = 16
_saved_iv$4$ = -31324					; size = 16
_key$ = -31308						; size = 244
_key2$ = -31064						; size = 244
_rkey$ = -30820						; size = 16
_iv$ = -30804						; size = 64
_rkey2$ = -30740					; size = 16
_plaintext$ = -30724					; size = 10240
_checktext$ = -20484					; size = 10240
_ciphertext$ = -10244					; size = 10240
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\test\igetest.c
; Line 275
	mov	eax, 31372				; 00007a8cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+31372], eax
	push	ebp
	push	esi
	push	edi
; Line 291
	lea	eax, DWORD PTR _rkey$[esp+31384]
	xor	edi, edi
	push	16					; 00000010H
	push	eax
	call	_RAND_pseudo_bytes
; Line 292
	lea	eax, DWORD PTR _plaintext$[esp+31392]
	push	10240					; 00002800H
	push	eax
	call	_RAND_pseudo_bytes
; Line 293
	lea	eax, DWORD PTR _iv$[esp+31400]
	push	64					; 00000040H
	push	eax
	call	_RAND_pseudo_bytes
; Line 294
	movups	xmm0, XMMWORD PTR _iv$[esp+31408]
; Line 299
	lea	eax, DWORD PTR _key$[esp+31408]
	push	eax
	movups	XMMWORD PTR _saved_iv$1$[esp+31412], xmm0
	lea	eax, DWORD PTR _rkey$[esp+31412]
	movups	xmm0, XMMWORD PTR _iv$[esp+31428]
	push	128					; 00000080H
	push	eax
	movups	XMMWORD PTR _saved_iv$2$[esp+31420], xmm0
	movups	xmm0, XMMWORD PTR _iv$[esp+31452]
	movups	XMMWORD PTR _saved_iv$3$[esp+31420], xmm0
	movups	xmm0, XMMWORD PTR _iv$[esp+31468]
	movups	XMMWORD PTR _saved_iv$4$[esp+31420], xmm0
	call	_AES_set_encrypt_key
; Line 300
	push	1
	lea	eax, DWORD PTR _iv$[esp+31424]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31428]
	push	eax
	push	128					; 00000080H
	lea	eax, DWORD PTR _ciphertext$[esp+31436]
	push	eax
	lea	eax, DWORD PTR _plaintext$[esp+31440]
	push	eax
	call	_AES_ige_encrypt
; Line 302
	lea	eax, DWORD PTR _key$[esp+31444]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31448]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
; Line 303
	movups	xmm0, XMMWORD PTR _saved_iv$1$[esp+31456]
	add	esp, 72					; 00000048H
; Line 304
	lea	eax, DWORD PTR _iv$[esp+31384]
	movups	XMMWORD PTR _iv$[esp+31384], xmm0
	movups	xmm0, XMMWORD PTR _saved_iv$2$[esp+31384]
	push	edi
	push	eax
	movups	XMMWORD PTR _iv$[esp+31408], xmm0
	lea	eax, DWORD PTR _key$[esp+31392]
	movups	xmm0, XMMWORD PTR _saved_iv$3$[esp+31392]
	push	eax
	push	128					; 00000080H
	lea	eax, DWORD PTR _checktext$[esp+31400]
	movups	XMMWORD PTR _iv$[esp+31432], xmm0
	push	eax
	movups	xmm0, XMMWORD PTR _saved_iv$4$[esp+31404]
	lea	eax, DWORD PTR _ciphertext$[esp+31404]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31456], xmm0
	call	_AES_ige_encrypt
	add	esp, 24					; 00000018H
; Line 306
	lea	ecx, DWORD PTR _checktext$[esp+31384]
	lea	edx, DWORD PTR _plaintext$[esp+31384]
	lea	esi, DWORD PTR [edi+124]
	npad	2
$LL98@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN97@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL98@main
	xor	eax, eax
	jmp	SHORT $LN100@main
$LN97@main:
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN99@main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN99@main
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN99@main
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	jne	SHORT $LN99@main
	xor	eax, eax
	jmp	SHORT $LN100@main
$LN99@main:
	sbb	eax, eax
	or	eax, 1
$LN100@main:
	mov	ebp, DWORD PTR __imp____acrt_iob_func
	test	eax, eax
	je	SHORT $LN14@main
; Line 307
	push	OFFSET ??_C@_0BP@BGFLFOMO@Encrypt?$CLdecrypt?5doesn?8t?5match?6?$AA@
	call	_printf
	add	esp, 4
; Line 308
	lea	eax, DWORD PTR _plaintext$[esp+31384]
	push	128					; 00000080H
	push	eax
	push	OFFSET ??_C@_09DOLMGAGM@Plaintext?$AA@
	push	1
	call	ebp
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 309
	lea	eax, DWORD PTR _checktext$[esp+31384]
	push	128					; 00000080H
	push	eax
	push	OFFSET ??_C@_09NPDOMLIM@Checktext?$AA@
	push	1
	call	ebp
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 310
	mov	edi, 1
$LN14@main:
; Line 314
	lea	eax, DWORD PTR _key$[esp+31384]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31388]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 315
	movups	xmm0, XMMWORD PTR _saved_iv$1$[esp+31396]
; Line 316
	push	1
	lea	eax, DWORD PTR _iv$[esp+31400]
	movups	XMMWORD PTR _iv$[esp+31400], xmm0
	push	eax
	movups	xmm0, XMMWORD PTR _saved_iv$2$[esp+31404]
	lea	eax, DWORD PTR _key$[esp+31404]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31424], xmm0
	push	64					; 00000040H
	movups	xmm0, XMMWORD PTR _saved_iv$3$[esp+31412]
	lea	eax, DWORD PTR _ciphertext$[esp+31412]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31448], xmm0
	lea	eax, DWORD PTR _plaintext$[esp+31416]
	movups	xmm0, XMMWORD PTR _saved_iv$4$[esp+31416]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31468], xmm0
	call	_AES_ige_encrypt
; Line 318
	push	1
	lea	eax, DWORD PTR _iv$[esp+31424]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31428]
	push	eax
	push	64					; 00000040H
	lea	eax, DWORD PTR _ciphertext$[esp+31500]
	push	eax
	lea	eax, DWORD PTR _plaintext$[esp+31504]
	push	eax
	call	_AES_ige_encrypt
; Line 322
	lea	eax, DWORD PTR _key$[esp+31444]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31448]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
; Line 323
	movups	xmm0, XMMWORD PTR _saved_iv$1$[esp+31456]
	add	esp, 72					; 00000048H
; Line 324
	lea	eax, DWORD PTR _iv$[esp+31384]
	movups	XMMWORD PTR _iv$[esp+31384], xmm0
	movups	xmm0, XMMWORD PTR _saved_iv$2$[esp+31384]
	push	0
	push	eax
	movups	XMMWORD PTR _iv$[esp+31408], xmm0
	lea	eax, DWORD PTR _key$[esp+31392]
	movups	xmm0, XMMWORD PTR _saved_iv$3$[esp+31392]
	push	eax
	push	128					; 00000080H
	lea	eax, DWORD PTR _checktext$[esp+31400]
	movups	XMMWORD PTR _iv$[esp+31432], xmm0
	push	eax
	movups	xmm0, XMMWORD PTR _saved_iv$4$[esp+31404]
	lea	eax, DWORD PTR _ciphertext$[esp+31404]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31456], xmm0
	call	_AES_ige_encrypt
	add	esp, 24					; 00000018H
; Line 326
	lea	ecx, DWORD PTR _checktext$[esp+31384]
	lea	edx, DWORD PTR _plaintext$[esp+31384]
	mov	esi, 124				; 0000007cH
$LL103@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN102@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL103@main
	xor	eax, eax
	jmp	SHORT $LN105@main
$LN102@main:
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN104@main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN104@main
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN104@main
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	jne	SHORT $LN104@main
	xor	eax, eax
	jmp	SHORT $LN105@main
$LN104@main:
	sbb	eax, eax
	or	eax, 1
$LN105@main:
	test	eax, eax
	je	SHORT $LN15@main
; Line 327
	push	OFFSET ??_C@_0CH@MPBMAGFO@Chained?5encrypt?$CLdecrypt?5doesn?8t?5@
	call	_printf
	add	esp, 4
; Line 328
	lea	eax, DWORD PTR _plaintext$[esp+31384]
	push	128					; 00000080H
	push	eax
	push	OFFSET ??_C@_09DOLMGAGM@Plaintext?$AA@
	push	1
	call	ebp
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 329
	lea	eax, DWORD PTR _checktext$[esp+31384]
	push	128					; 00000080H
	push	eax
	push	OFFSET ??_C@_09NPDOMLIM@Checktext?$AA@
	push	1
	call	ebp
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 330
	inc	edi
$LN15@main:
; Line 334
	lea	eax, DWORD PTR _key$[esp+31384]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31388]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 335
	movups	xmm0, XMMWORD PTR _saved_iv$1$[esp+31396]
; Line 336
	push	1
	lea	eax, DWORD PTR _iv$[esp+31400]
	movups	XMMWORD PTR _iv$[esp+31400], xmm0
	push	eax
	movups	xmm0, XMMWORD PTR _saved_iv$2$[esp+31404]
	lea	eax, DWORD PTR _key$[esp+31404]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31424], xmm0
	push	64					; 00000040H
	movups	xmm0, XMMWORD PTR _saved_iv$3$[esp+31412]
	lea	eax, DWORD PTR _ciphertext$[esp+31412]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31448], xmm0
	lea	eax, DWORD PTR _plaintext$[esp+31416]
	movups	xmm0, XMMWORD PTR _saved_iv$4$[esp+31416]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31468], xmm0
	call	_AES_ige_encrypt
; Line 338
	push	1
	lea	eax, DWORD PTR _iv$[esp+31424]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31428]
	push	eax
	push	64					; 00000040H
	lea	eax, DWORD PTR _ciphertext$[esp+31500]
	push	eax
	lea	eax, DWORD PTR _plaintext$[esp+31504]
	push	eax
	call	_AES_ige_encrypt
; Line 342
	lea	eax, DWORD PTR _key$[esp+31444]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31448]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
; Line 343
	movups	xmm0, XMMWORD PTR _saved_iv$1$[esp+31456]
	add	esp, 72					; 00000048H
; Line 344
	lea	eax, DWORD PTR _iv$[esp+31384]
	movups	XMMWORD PTR _iv$[esp+31384], xmm0
	movups	xmm0, XMMWORD PTR _saved_iv$2$[esp+31384]
	push	0
	push	eax
	movups	XMMWORD PTR _iv$[esp+31408], xmm0
	lea	eax, DWORD PTR _key$[esp+31392]
	movups	xmm0, XMMWORD PTR _saved_iv$3$[esp+31392]
	push	eax
	push	64					; 00000040H
	lea	eax, DWORD PTR _checktext$[esp+31400]
	movups	XMMWORD PTR _iv$[esp+31432], xmm0
	push	eax
	movups	xmm0, XMMWORD PTR _saved_iv$4$[esp+31404]
	lea	eax, DWORD PTR _ciphertext$[esp+31404]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31456], xmm0
	call	_AES_ige_encrypt
; Line 346
	push	0
	lea	eax, DWORD PTR _iv$[esp+31412]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31416]
	push	eax
	push	64					; 00000040H
	lea	eax, DWORD PTR _checktext$[esp+31488]
	push	eax
	lea	eax, DWORD PTR _ciphertext$[esp+31492]
	push	eax
	call	_AES_ige_encrypt
	add	esp, 48					; 00000030H
; Line 350
	lea	ecx, DWORD PTR _checktext$[esp+31384]
	lea	edx, DWORD PTR _plaintext$[esp+31384]
	mov	esi, 124				; 0000007cH
	npad	5
$LL108@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN107@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL108@main
	xor	eax, eax
	jmp	SHORT $LN110@main
$LN107@main:
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN109@main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN109@main
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN109@main
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	jne	SHORT $LN109@main
	xor	eax, eax
	jmp	SHORT $LN110@main
$LN109@main:
	sbb	eax, eax
	or	eax, 1
$LN110@main:
	test	eax, eax
	je	SHORT $LN16@main
; Line 351
	push	OFFSET ??_C@_0CP@MGBKBHHG@Chained?5encrypt?$CLchained?5decrypt?5@
	call	_printf
	add	esp, 4
; Line 352
	lea	eax, DWORD PTR _plaintext$[esp+31384]
	push	128					; 00000080H
	push	eax
	push	OFFSET ??_C@_09DOLMGAGM@Plaintext?$AA@
	push	1
	call	ebp
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 353
	lea	eax, DWORD PTR _checktext$[esp+31384]
	push	128					; 00000080H
	push	eax
	push	OFFSET ??_C@_09NPDOMLIM@Checktext?$AA@
	push	1
	call	ebp
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 354
	inc	edi
$LN16@main:
; Line 358
	lea	eax, DWORD PTR _key$[esp+31384]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31388]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 359
	movups	xmm0, XMMWORD PTR _saved_iv$1$[esp+31396]
; Line 360
	push	1
	lea	eax, DWORD PTR _iv$[esp+31400]
	movups	XMMWORD PTR _iv$[esp+31400], xmm0
	push	eax
	movups	xmm0, XMMWORD PTR _saved_iv$2$[esp+31404]
	lea	eax, DWORD PTR _key$[esp+31404]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31424], xmm0
	push	10240					; 00002800H
	movups	xmm0, XMMWORD PTR _saved_iv$3$[esp+31412]
	lea	eax, DWORD PTR _ciphertext$[esp+31412]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31448], xmm0
	lea	eax, DWORD PTR _plaintext$[esp+31416]
	movups	xmm0, XMMWORD PTR _saved_iv$4$[esp+31416]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31468], xmm0
	call	_AES_ige_encrypt
; Line 364
	inc	BYTE PTR _ciphertext$[esp+36540]
; Line 365
	lea	eax, DWORD PTR _key$[esp+31420]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31424]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
; Line 366
	movups	xmm0, XMMWORD PTR _saved_iv$1$[esp+31432]
; Line 367
	push	0
	lea	eax, DWORD PTR _iv$[esp+31436]
	movups	XMMWORD PTR _iv$[esp+31436], xmm0
	push	eax
	movups	xmm0, XMMWORD PTR _saved_iv$2$[esp+31440]
	lea	eax, DWORD PTR _key$[esp+31440]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31460], xmm0
	push	10240					; 00002800H
	movups	xmm0, XMMWORD PTR _saved_iv$3$[esp+31448]
	lea	eax, DWORD PTR _checktext$[esp+31448]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31484], xmm0
	lea	eax, DWORD PTR _ciphertext$[esp+31452]
	movups	xmm0, XMMWORD PTR _saved_iv$4$[esp+31452]
	push	eax
	movups	XMMWORD PTR _iv$[esp+31504], xmm0
	call	_AES_ige_encrypt
	add	esp, 72					; 00000048H
; Line 370
	xor	esi, esi
; Line 371
	xor	ecx, ecx
	npad	4
$LL52@main:
; Line 372
	mov	al, BYTE PTR _checktext$[esp+ecx+31384]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31384]
	jne	SHORT $LN53@main
; Line 373
	inc	esi
$LN53@main:
; Line 372
	mov	al, BYTE PTR _checktext$[esp+ecx+31385]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31385]
	jne	SHORT $LN71@main
; Line 373
	inc	esi
$LN71@main:
; Line 372
	mov	al, BYTE PTR _checktext$[esp+ecx+31386]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31386]
	jne	SHORT $LN72@main
; Line 373
	inc	esi
$LN72@main:
; Line 372
	mov	al, BYTE PTR _checktext$[esp+ecx+31387]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31387]
	jne	SHORT $LN73@main
; Line 373
	inc	esi
$LN73@main:
; Line 372
	mov	al, BYTE PTR _checktext$[esp+ecx+31388]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31388]
	jne	SHORT $LN74@main
; Line 373
	inc	esi
$LN74@main:
	add	ecx, 5
; Line 371
	cmp	ecx, 10240				; 00002800H
	jb	SHORT $LL52@main
; Line 375
	cmp	esi, 5222				; 00001466H
	jbe	SHORT $LN18@main
; Line 376
	push	OFFSET ??_C@_0CH@EFDNEHKM@More?5than?551?$CF?$CF?5matches?5after?5gar@
	call	_printf
	add	esp, 4
; Line 377
	inc	edi
$LN18@main:
; Line 380
	cmp	esi, 5120				; 00001400H
	jae	SHORT $LN19@main
; Line 381
	push	OFFSET ??_C@_0BL@MFACJGC@Garble?5extends?5backwards?$CB?6?$AA@
	call	_printf
	add	esp, 4
; Line 382
	inc	edi
$LN19@main:
; Line 392
	lea	eax, DWORD PTR _rkey2$[esp+31384]
	push	16					; 00000010H
	push	eax
	call	_RAND_pseudo_bytes
; Line 395
	lea	eax, DWORD PTR _key$[esp+31392]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31396]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 396
	lea	eax, DWORD PTR _key2$[esp+31404]
	push	eax
	lea	eax, DWORD PTR _rkey2$[esp+31408]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 397
	push	1
	lea	eax, DWORD PTR _iv$[esp+31420]
	push	eax
	lea	eax, DWORD PTR _key2$[esp+31424]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31428]
	push	eax
	push	128					; 00000080H
	lea	eax, DWORD PTR _ciphertext$[esp+31436]
	push	eax
	lea	eax, DWORD PTR _plaintext$[esp+31440]
	push	eax
	call	_AES_bi_ige_encrypt
; Line 400
	lea	eax, DWORD PTR _key$[esp+31444]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31448]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
	add	esp, 72					; 00000048H
; Line 401
	lea	eax, DWORD PTR _key2$[esp+31384]
	push	eax
	lea	eax, DWORD PTR _rkey2$[esp+31388]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
; Line 402
	push	0
	lea	eax, DWORD PTR _iv$[esp+31400]
	push	eax
	lea	eax, DWORD PTR _key2$[esp+31404]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31408]
	push	eax
	push	128					; 00000080H
	lea	eax, DWORD PTR _checktext$[esp+31416]
	push	eax
	lea	eax, DWORD PTR _ciphertext$[esp+31420]
	push	eax
	call	_AES_bi_ige_encrypt
	add	esp, 40					; 00000028H
; Line 405
	lea	ecx, DWORD PTR _checktext$[esp+31384]
	lea	edx, DWORD PTR _plaintext$[esp+31384]
	mov	esi, 124				; 0000007cH
	npad	5
$LL113@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN112@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL113@main
	jmp	$LN20@main
$LN112@main:
	push	ebx
; Line 406
	push	OFFSET ??_C@_0BP@BGFLFOMO@Encrypt?$CLdecrypt?5doesn?8t?5match?6?$AA@
	call	_printf
; Line 407
	push	1
	call	ebp
; Line 65
	push	OFFSET ??_C@_09DOLMGAGM@Plaintext?$AA@
; Line 407
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
	add	esp, 20					; 00000014H
; Line 66
	xor	ebx, ebx
	npad	4
$LL31@main:
; Line 67
	test	bl, 15					; 0000000fH
	jne	SHORT $LN32@main
; Line 68
	push	ebx
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN32@main:
; Line 69
	movzx	eax, BYTE PTR _plaintext$[esp+ebx+31388]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	inc	ebx
	add	esp, 12					; 0000000cH
	cmp	ebx, 128				; 00000080H
	jl	SHORT $LL31@main
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
; Line 408
	push	1
	call	ebp
; Line 65
	push	OFFSET ??_C@_09NPDOMLIM@Checktext?$AA@
; Line 408
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 66
	xor	ebx, ebx
	npad	6
$LL37@main:
; Line 67
	test	bl, 15					; 0000000fH
	jne	SHORT $LN38@main
; Line 68
	push	ebx
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN38@main:
; Line 69
	movzx	eax, BYTE PTR _checktext$[esp+ebx+31388]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	inc	ebx
	add	esp, 12					; 0000000cH
	cmp	ebx, 128				; 00000080H
	jl	SHORT $LL37@main
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
	add	esp, 8
; Line 409
	inc	edi
	pop	ebx
$LN20@main:
; Line 413
	lea	eax, DWORD PTR _key$[esp+31384]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31388]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 414
	lea	eax, DWORD PTR _key2$[esp+31396]
	push	eax
	lea	eax, DWORD PTR _rkey2$[esp+31400]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 415
	push	1
	lea	eax, DWORD PTR _iv$[esp+31412]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31416]
	push	eax
	push	10240					; 00002800H
	lea	eax, DWORD PTR _ciphertext$[esp+31424]
	push	eax
	lea	eax, DWORD PTR _plaintext$[esp+31428]
	push	eax
	call	_AES_ige_encrypt
; Line 419
	inc	BYTE PTR _ciphertext$[esp+36552]
; Line 420
	lea	eax, DWORD PTR _key$[esp+31432]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31436]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
; Line 421
	lea	eax, DWORD PTR _key2$[esp+31444]
	push	eax
	lea	eax, DWORD PTR _rkey2$[esp+31448]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
	add	esp, 72					; 00000048H
; Line 422
	lea	eax, DWORD PTR _iv$[esp+31384]
	push	0
	push	eax
	lea	eax, DWORD PTR _key$[esp+31392]
	push	eax
	push	10240					; 00002800H
	lea	eax, DWORD PTR _checktext$[esp+31400]
	push	eax
	lea	eax, DWORD PTR _ciphertext$[esp+31404]
	push	eax
	call	_AES_ige_encrypt
	add	esp, 24					; 00000018H
; Line 425
	xor	edx, edx
; Line 426
	xor	ecx, ecx
	npad	7
$LL55@main:
; Line 427
	mov	al, BYTE PTR _checktext$[esp+ecx+31384]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31384]
	jne	SHORT $LN56@main
; Line 428
	inc	edx
$LN56@main:
; Line 427
	mov	al, BYTE PTR _checktext$[esp+ecx+31385]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31385]
	jne	SHORT $LN76@main
; Line 428
	inc	edx
$LN76@main:
; Line 427
	mov	al, BYTE PTR _checktext$[esp+ecx+31386]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31386]
	jne	SHORT $LN77@main
; Line 428
	inc	edx
$LN77@main:
; Line 427
	mov	al, BYTE PTR _checktext$[esp+ecx+31387]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31387]
	jne	SHORT $LN78@main
; Line 428
	inc	edx
$LN78@main:
; Line 427
	mov	al, BYTE PTR _checktext$[esp+ecx+31388]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31388]
	jne	SHORT $LN79@main
; Line 428
	inc	edx
$LN79@main:
	add	ecx, 5
; Line 426
	cmp	ecx, 10240				; 00002800H
	jb	SHORT $LL55@main
; Line 430
	cmp	edx, 102				; 00000066H
	jbe	SHORT $LN22@main
; Line 431
	push	OFFSET ??_C@_0DE@FIANGABF@More?5than?51?$CF?$CF?5matches?5after?5bidi@
	call	_printf
	add	esp, 4
; Line 432
	inc	edi
$LN22@main:
; Line 436
	lea	eax, DWORD PTR _key$[esp+31384]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31388]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 437
	lea	eax, DWORD PTR _key2$[esp+31396]
	push	eax
	lea	eax, DWORD PTR _rkey2$[esp+31400]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 438
	push	1
	lea	eax, DWORD PTR _iv$[esp+31412]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31416]
	push	eax
	push	10240					; 00002800H
	lea	eax, DWORD PTR _ciphertext$[esp+31424]
	push	eax
	lea	eax, DWORD PTR _plaintext$[esp+31428]
	push	eax
	call	_AES_ige_encrypt
; Line 442
	inc	BYTE PTR _ciphertext$[esp+41671]
; Line 443
	lea	eax, DWORD PTR _key$[esp+31432]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31436]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
; Line 444
	lea	eax, DWORD PTR _key2$[esp+31444]
	push	eax
	lea	eax, DWORD PTR _rkey2$[esp+31448]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
	add	esp, 72					; 00000048H
; Line 445
	lea	eax, DWORD PTR _iv$[esp+31384]
	push	0
	push	eax
	lea	eax, DWORD PTR _key$[esp+31392]
	push	eax
	push	10240					; 00002800H
	lea	eax, DWORD PTR _checktext$[esp+31400]
	push	eax
	lea	eax, DWORD PTR _ciphertext$[esp+31404]
	push	eax
	call	_AES_ige_encrypt
	add	esp, 24					; 00000018H
; Line 448
	xor	edx, edx
; Line 449
	xor	ecx, ecx
	npad	8
$LL58@main:
; Line 450
	mov	al, BYTE PTR _checktext$[esp+ecx+31384]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31384]
	jne	SHORT $LN59@main
; Line 451
	inc	edx
$LN59@main:
; Line 450
	mov	al, BYTE PTR _checktext$[esp+ecx+31385]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31385]
	jne	SHORT $LN81@main
; Line 451
	inc	edx
$LN81@main:
; Line 450
	mov	al, BYTE PTR _checktext$[esp+ecx+31386]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31386]
	jne	SHORT $LN82@main
; Line 451
	inc	edx
$LN82@main:
; Line 450
	mov	al, BYTE PTR _checktext$[esp+ecx+31387]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31387]
	jne	SHORT $LN83@main
; Line 451
	inc	edx
$LN83@main:
; Line 450
	mov	al, BYTE PTR _checktext$[esp+ecx+31388]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31388]
	jne	SHORT $LN84@main
; Line 451
	inc	edx
$LN84@main:
	add	ecx, 5
; Line 449
	cmp	ecx, 10240				; 00002800H
	jb	SHORT $LL58@main
; Line 453
	cmp	edx, 102				; 00000066H
	jbe	SHORT $LN24@main
; Line 454
	push	OFFSET ??_C@_0DI@DPNJCMFM@More?5than?51?$CF?$CF?5matches?5after?5bidi@
	call	_printf
	add	esp, 4
; Line 455
	inc	edi
$LN24@main:
; Line 459
	lea	eax, DWORD PTR _key$[esp+31384]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31388]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 460
	lea	eax, DWORD PTR _key2$[esp+31396]
	push	eax
	lea	eax, DWORD PTR _rkey2$[esp+31400]
	push	128					; 00000080H
	push	eax
	call	_AES_set_encrypt_key
; Line 461
	push	1
	lea	eax, DWORD PTR _iv$[esp+31412]
	push	eax
	lea	eax, DWORD PTR _key$[esp+31416]
	push	eax
	push	10240					; 00002800H
	lea	eax, DWORD PTR _ciphertext$[esp+31424]
	push	eax
	lea	eax, DWORD PTR _plaintext$[esp+31428]
	push	eax
	call	_AES_ige_encrypt
; Line 465
	inc	BYTE PTR _ciphertext$[esp+31432]
; Line 466
	lea	eax, DWORD PTR _key$[esp+31432]
	push	eax
	lea	eax, DWORD PTR _rkey$[esp+31436]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
; Line 467
	lea	eax, DWORD PTR _key2$[esp+31444]
	push	eax
	lea	eax, DWORD PTR _rkey2$[esp+31448]
	push	128					; 00000080H
	push	eax
	call	_AES_set_decrypt_key
	add	esp, 72					; 00000048H
; Line 468
	lea	eax, DWORD PTR _iv$[esp+31384]
	push	0
	push	eax
	lea	eax, DWORD PTR _key$[esp+31392]
	push	eax
	push	10240					; 00002800H
	lea	eax, DWORD PTR _checktext$[esp+31400]
	push	eax
	lea	eax, DWORD PTR _ciphertext$[esp+31404]
	push	eax
	call	_AES_ige_encrypt
	add	esp, 24					; 00000018H
; Line 471
	xor	edx, edx
; Line 472
	xor	ecx, ecx
	npad	8
$LL61@main:
; Line 473
	mov	al, BYTE PTR _checktext$[esp+ecx+31384]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31384]
	jne	SHORT $LN62@main
; Line 474
	inc	edx
$LN62@main:
; Line 473
	mov	al, BYTE PTR _checktext$[esp+ecx+31385]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31385]
	jne	SHORT $LN86@main
; Line 474
	inc	edx
$LN86@main:
; Line 473
	mov	al, BYTE PTR _checktext$[esp+ecx+31386]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31386]
	jne	SHORT $LN87@main
; Line 474
	inc	edx
$LN87@main:
; Line 473
	mov	al, BYTE PTR _checktext$[esp+ecx+31387]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31387]
	jne	SHORT $LN88@main
; Line 474
	inc	edx
$LN88@main:
; Line 473
	mov	al, BYTE PTR _checktext$[esp+ecx+31388]
	cmp	al, BYTE PTR _plaintext$[esp+ecx+31388]
	jne	SHORT $LN89@main
; Line 474
	inc	edx
$LN89@main:
	add	ecx, 5
; Line 472
	cmp	ecx, 10240				; 00002800H
	jb	SHORT $LL61@main
; Line 476
	cmp	edx, 102				; 00000066H
	jbe	SHORT $LN26@main
; Line 477
	push	OFFSET ??_C@_0DI@IHGFELDJ@More?5than?51?$CF?$CF?5matches?5after?5bidi@
	call	_printf
	add	esp, 4
; Line 478
	inc	edi
$LN26@main:
; Line 481
	call	_run_test_vectors
; Line 484
	mov	ecx, DWORD PTR __$ArrayPad$[esp+31384]
	add	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 31372				; 00007a8cH
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _run_test_vectors
_TEXT	SEGMENT
_n$1$ = -632						; size = 4
_n$1$ = -632						; size = 4
_n$1$ = -632						; size = 4
_n$1$ = -632						; size = 4
_n$1$ = -632						; size = 4
_n$1$ = -632						; size = 4
_n$1$ = -632						; size = 4
_errs$1$ = -628						; size = 4
_n$1$ = -624						; size = 4
tv995 = -624						; size = 4
tv989 = -624						; size = 4
_n$2$ = -620						; size = 4
tv1006 = -620						; size = 4
tv1001 = -616						; size = 4
tv987 = -612						; size = 4
_key2$1 = -608						; size = 244
_key$2 = -608						; size = 244
_key1$3 = -360						; size = 244
_iv$4 = -112						; size = 32
_buf$5 = -72						; size = 64
_buf$6 = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_run_test_vectors PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\test\igetest.c
; Line 189
	push	ebp
	mov	ebp, esp
	and	esp, -16				; fffffff0H
	mov	eax, 632				; 00000278H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+632], eax
	push	esi
	push	edi
; Line 191
	mov	DWORD PTR _errs$1$[esp+640], 0
	mov	edi, OFFSET _ige_test_vectors
; Line 193
	mov	DWORD PTR _n$1$[esp+640], 0
	mov	DWORD PTR tv1006[esp+640], 2
	npad	3
$LL4@run_test_v:
; Line 200
	cmp	DWORD PTR [edi+176], 64			; 00000040H
	jbe	SHORT $LN16@run_test_v
	push	200					; 000000c8H
	push	OFFSET ??_C@_1CC@KEOKIMGK@?$AA?4?$AA?2?$AAt?$AAe?$AAs?$AAt?$AA?2?$AAi?$AAg?$AAe?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1DK@IPENBGIC@?$AAv?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAV?$AAE?$AAC?$AAT?$AAO?$AAR?$AA_?$AAS?$AAI?$AAZ?$AAE?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN16@run_test_v:
; Line 202
	cmp	DWORD PTR [edi+180], 1
; Line 203
	lea	eax, DWORD PTR _key$2[esp+640]
	push	eax
	push	128					; 00000080H
	push	edi
	jne	SHORT $LN8@run_test_v
	call	_AES_set_encrypt_key
	jmp	SHORT $LN116@run_test_v
$LN8@run_test_v:
; Line 205
	call	_AES_set_decrypt_key
$LN116@run_test_v:
; Line 206
	movups	xmm0, XMMWORD PTR [edi+16]
	add	esp, 12					; 0000000cH
; Line 207
	lea	eax, DWORD PTR _iv$4[esp+640]
	movups	XMMWORD PTR _iv$4[esp+640], xmm0
	push	DWORD PTR [edi+180]
	movups	xmm0, XMMWORD PTR [edi+32]
	push	eax
	lea	eax, DWORD PTR _key$2[esp+648]
	push	eax
	push	DWORD PTR [edi+176]
	lea	eax, DWORD PTR _buf$6[esp+656]
	push	eax
	lea	eax, DWORD PTR [edi+48]
	push	eax
	movups	XMMWORD PTR _iv$4[esp+680], xmm0
	call	_AES_ige_encrypt
; Line 209
	mov	esi, DWORD PTR [edi+176]
	lea	ecx, DWORD PTR [edi+112]
	add	esp, 24					; 00000018H
	lea	edx, DWORD PTR _buf$6[esp+640]
	sub	esi, 4
	jb	SHORT $LN98@run_test_v
	npad	2
$LL99@run_test_v:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN97@run_test_v
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL99@run_test_v
$LN98@run_test_v:
	cmp	esi, -4					; fffffffcH
	je	$LN96@run_test_v
$LN97@run_test_v:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN100@run_test_v
	cmp	esi, -3					; fffffffdH
	je	$LN96@run_test_v
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN100@run_test_v
	cmp	esi, -2					; fffffffeH
	je	$LN96@run_test_v
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN100@run_test_v
	cmp	esi, -1
	je	$LN96@run_test_v
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	$LN96@run_test_v
$LN100@run_test_v:
; Line 210
	push	DWORD PTR _n$1$[esp+640]
	push	OFFSET ??_C@_0BL@IPHILNNE@IGE?5test?5vector?5?$CFd?5failed?6?$AA@
	call	_printf
; Line 211
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 65
	push	OFFSET ??_C@_03ICHNJLJF@key?$AA@
; Line 211
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 66
	xor	eax, eax
	mov	DWORD PTR _n$1$[esp+640], eax
$LL21@run_test_v:
; Line 67
	test	al, 15					; 0000000fH
	jne	SHORT $LN22@run_test_v
; Line 68
	push	eax
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
$LN22@run_test_v:
; Line 69
	movzx	eax, BYTE PTR [edi+eax]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
	inc	eax
	mov	DWORD PTR _n$1$[esp+640], eax
	cmp	eax, 16					; 00000010H
	jl	SHORT $LL21@run_test_v
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
; Line 212
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 65
	push	OFFSET ??_C@_02DONNAIDC@iv?$AA@
; Line 212
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 66
	xor	eax, eax
	mov	DWORD PTR _n$1$[esp+640], eax
	npad	2
$LL27@run_test_v:
; Line 67
	test	al, 15					; 0000000fH
	jne	SHORT $LN28@run_test_v
; Line 68
	push	eax
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
$LN28@run_test_v:
; Line 69
	movzx	eax, BYTE PTR [edi+eax+16]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
	inc	eax
	mov	DWORD PTR _n$1$[esp+640], eax
	cmp	eax, 32					; 00000020H
	jl	SHORT $LL27@run_test_v
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
; Line 213
	mov	esi, DWORD PTR __imp____acrt_iob_func
	lea	eax, DWORD PTR [edi+48]
; Line 71
	add	esp, 8
; Line 213
	push	DWORD PTR [edi+176]
	push	eax
	push	OFFSET ??_C@_02LMMGJAGL@in?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR [edi+112]
; Line 214
	push	DWORD PTR [edi+176]
	push	eax
	push	OFFSET ??_C@_08LBKEHGGD@expected?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 215
	lea	eax, DWORD PTR _buf$6[esp+640]
	push	DWORD PTR [edi+176]
	push	eax
	push	OFFSET ??_C@_03HAJCNPLG@got?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 217
	inc	DWORD PTR _errs$1$[esp+640]
$LN96@run_test_v:
; Line 221
	movups	xmm0, XMMWORD PTR [edi+16]
; Line 222
	mov	esi, DWORD PTR [edi+176]
	lea	eax, DWORD PTR [edi+48]
	push	esi
	movups	XMMWORD PTR _iv$4[esp+644], xmm0
	push	eax
	movups	xmm0, XMMWORD PTR [edi+32]
	lea	eax, DWORD PTR _buf$6[esp+648]
	push	eax
	movups	XMMWORD PTR _iv$4[esp+668], xmm0
	call	_memcpy
; Line 223
	push	DWORD PTR [edi+180]
	lea	eax, DWORD PTR _iv$4[esp+656]
	push	eax
	lea	eax, DWORD PTR _key$2[esp+660]
	push	eax
	lea	eax, DWORD PTR _buf$6[esp+664]
	push	esi
	push	eax
	push	eax
	call	_AES_ige_encrypt
; Line 225
	mov	esi, DWORD PTR [edi+176]
	lea	ecx, DWORD PTR [edi+112]
	add	esp, 36					; 00000024H
	lea	edx, DWORD PTR _buf$6[esp+640]
	sub	esi, 4
	jb	SHORT $LN103@run_test_v
	npad	4
$LL104@run_test_v:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN102@run_test_v
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL104@run_test_v
$LN103@run_test_v:
	cmp	esi, -4					; fffffffcH
	je	$LN2@run_test_v
$LN102@run_test_v:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN105@run_test_v
	cmp	esi, -3					; fffffffdH
	je	$LN2@run_test_v
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN105@run_test_v
	cmp	esi, -2					; fffffffeH
	je	$LN2@run_test_v
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN105@run_test_v
	cmp	esi, -1
	je	$LN2@run_test_v
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	$LN2@run_test_v
$LN105@run_test_v:
; Line 226
	push	DWORD PTR _n$1$[esp+640]
	push	OFFSET ??_C@_0CM@BNPPFIBL@IGE?5test?5vector?5?$CFd?5failed?5?$CIwith?5@
	call	_printf
; Line 227
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 65
	push	OFFSET ??_C@_03ICHNJLJF@key?$AA@
; Line 227
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 66
	xor	eax, eax
	mov	DWORD PTR _n$1$[esp+640], eax
$LL33@run_test_v:
; Line 67
	test	al, 15					; 0000000fH
	jne	SHORT $LN34@run_test_v
; Line 68
	push	eax
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
$LN34@run_test_v:
; Line 69
	movzx	eax, BYTE PTR [edi+eax]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
	inc	eax
	mov	DWORD PTR _n$1$[esp+640], eax
	cmp	eax, 16					; 00000010H
	jl	SHORT $LL33@run_test_v
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
; Line 228
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 65
	push	OFFSET ??_C@_02DONNAIDC@iv?$AA@
; Line 228
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 66
	xor	eax, eax
	mov	DWORD PTR _n$1$[esp+640], eax
	npad	2
$LL39@run_test_v:
; Line 67
	test	al, 15					; 0000000fH
	jne	SHORT $LN40@run_test_v
; Line 68
	push	eax
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
$LN40@run_test_v:
; Line 69
	movzx	eax, BYTE PTR [edi+eax+16]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
	inc	eax
	mov	DWORD PTR _n$1$[esp+640], eax
	cmp	eax, 32					; 00000020H
	jl	SHORT $LL39@run_test_v
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
; Line 229
	mov	esi, DWORD PTR __imp____acrt_iob_func
	lea	eax, DWORD PTR [edi+48]
; Line 71
	add	esp, 8
; Line 229
	push	DWORD PTR [edi+176]
	push	eax
	push	OFFSET ??_C@_02LMMGJAGL@in?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 230
	lea	eax, DWORD PTR [edi+112]
	push	DWORD PTR [edi+176]
	push	eax
	push	OFFSET ??_C@_08LBKEHGGD@expected?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 231
	lea	eax, DWORD PTR _buf$6[esp+640]
	push	DWORD PTR [edi+176]
	push	eax
	push	OFFSET ??_C@_03HAJCNPLG@got?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 233
	inc	DWORD PTR _errs$1$[esp+640]
$LN2@run_test_v:
; Line 194
	inc	DWORD PTR _n$1$[esp+640]
	add	edi, 184				; 000000b8H
	sub	DWORD PTR tv1006[esp+640], 1
	jne	$LL4@run_test_v
; Line 238
	mov	edi, OFFSET _bi_ige_test_vectors+256
	mov	DWORD PTR _n$2$[esp+640], 0
	mov	DWORD PTR tv1001[esp+640], edi
	mov	DWORD PTR tv987[esp+640], 2
$LL7@run_test_v:
; Line 245
	cmp	DWORD PTR [edi+4], 64			; 00000040H
	jbe	SHORT $LN17@run_test_v
	push	245					; 000000f5H
	push	OFFSET ??_C@_1CC@KEOKIMGK@?$AA?4?$AA?2?$AAt?$AAe?$AAs?$AAt?$AA?2?$AAi?$AAg?$AAe?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1DK@IPENBGIC@?$AAv?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAV?$AAE?$AAC?$AAT?$AAO?$AAR?$AA_?$AAS?$AAI?$AAZ?$AAE?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN17@run_test_v:
; Line 248
	lea	eax, DWORD PTR _key1$3[esp+640]
	push	eax
	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR [edi-256]
	shl	eax, 3
	cmp	DWORD PTR [edi+8], 1
	push	eax
	mov	DWORD PTR tv995[esp+648], ecx
	push	ecx
	jne	SHORT $LN12@run_test_v
	call	_AES_set_encrypt_key
; Line 249
	lea	eax, DWORD PTR _key2$1[esp+652]
	push	eax
	mov	eax, DWORD PTR [edi]
	shl	eax, 3
	push	eax
	lea	eax, DWORD PTR [edi-224]
	push	eax
	call	_AES_set_encrypt_key
; Line 250
	jmp	SHORT $LN117@run_test_v
$LN12@run_test_v:
; Line 251
	call	_AES_set_decrypt_key
; Line 252
	lea	eax, DWORD PTR _key2$1[esp+652]
	push	eax
	mov	eax, DWORD PTR [edi]
	shl	eax, 3
	push	eax
	lea	eax, DWORD PTR [edi-224]
	push	eax
	call	_AES_set_decrypt_key
$LN117@run_test_v:
	add	esp, 24					; 00000018H
; Line 255
	lea	eax, DWORD PTR [edi-192]
	push	DWORD PTR [edi+8]
	push	eax
	lea	eax, DWORD PTR _key2$1[esp+648]
	push	eax
	lea	eax, DWORD PTR _key1$3[esp+652]
	push	eax
	push	DWORD PTR [edi+4]
	lea	eax, DWORD PTR _buf$5[esp+660]
	push	eax
	lea	eax, DWORD PTR [edi-128]
	push	eax
	call	_AES_bi_ige_encrypt
; Line 258
	mov	esi, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [edi-64]
	add	esp, 28					; 0000001cH
	lea	edx, DWORD PTR _buf$5[esp+640]
	sub	esi, 4
	jb	SHORT $LN108@run_test_v
	npad	6
$LL109@run_test_v:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN107@run_test_v
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL109@run_test_v
$LN108@run_test_v:
	cmp	esi, -4					; fffffffcH
	je	$LN115@run_test_v
$LN107@run_test_v:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN110@run_test_v
	cmp	esi, -3					; fffffffdH
	je	$LN115@run_test_v
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN110@run_test_v
	cmp	esi, -2					; fffffffeH
	je	$LN115@run_test_v
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN110@run_test_v
	cmp	esi, -1
	je	$LN115@run_test_v
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	$LN115@run_test_v
$LN110@run_test_v:
; Line 259
	push	DWORD PTR _n$2$[esp+640]
	push	OFFSET ??_C@_0CJ@INLGIHPL@Bidirectional?5IGE?5test?5vector?5?$CFd@
	call	_printf
; Line 260
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 65
	push	OFFSET ??_C@_05JFPLPHLM@key?51?$AA@
; Line 260
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
	mov	edi, DWORD PTR tv995[esp+664]
	add	esp, 24					; 00000018H
; Line 66
	xor	eax, eax
	mov	DWORD PTR _n$1$[esp+640], eax
	npad	4
$LL45@run_test_v:
; Line 67
	test	al, 15					; 0000000fH
	jne	SHORT $LN46@run_test_v
; Line 68
	push	eax
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
$LN46@run_test_v:
; Line 69
	movzx	eax, BYTE PTR [edi+eax]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
	inc	eax
	mov	DWORD PTR _n$1$[esp+640], eax
	cmp	eax, 32					; 00000020H
	jl	SHORT $LL45@run_test_v
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
; Line 261
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 65
	push	OFFSET ??_C@_05LONGKEHP@key?52?$AA@
; Line 261
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
; Line 66
	mov	ecx, DWORD PTR tv995[esp+664]
	xor	eax, eax
	mov	edi, DWORD PTR tv1001[esp+664]
; Line 65
	add	esp, 24					; 00000018H
; Line 66
	add	ecx, 32					; 00000020H
	mov	DWORD PTR _n$1$[esp+640], eax
	mov	DWORD PTR tv989[esp+640], ecx
$LL51@run_test_v:
; Line 67
	test	al, 15					; 0000000fH
	jne	SHORT $LN52@run_test_v
; Line 68
	push	eax
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR tv989[esp+640]
$LN52@run_test_v:
; Line 69
	movzx	eax, BYTE PTR [ecx+eax]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR tv989[esp+640]
	inc	eax
	mov	DWORD PTR _n$1$[esp+640], eax
	cmp	eax, 32					; 00000020H
	jl	SHORT $LL51@run_test_v
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
; Line 262
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 65
	push	OFFSET ??_C@_02DONNAIDC@iv?$AA@
; Line 262
	mov	esi, eax
; Line 65
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 66
	xor	eax, eax
	mov	DWORD PTR _n$1$[esp+640], eax
$LL57@run_test_v:
; Line 67
	test	al, 15					; 0000000fH
	jne	SHORT $LN58@run_test_v
; Line 68
	push	eax
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
$LN58@run_test_v:
; Line 69
	movzx	eax, BYTE PTR [edi+eax-192]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	mov	eax, DWORD PTR _n$1$[esp+652]
	add	esp, 12					; 0000000cH
	inc	eax
	mov	DWORD PTR _n$1$[esp+640], eax
	cmp	eax, 64					; 00000040H
	jl	SHORT $LL57@run_test_v
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
	add	esp, 8
; Line 263
	lea	eax, DWORD PTR [edi-128]
	push	DWORD PTR [edi+4]
	push	eax
	push	OFFSET ??_C@_02LMMGJAGL@in?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 264
	lea	eax, DWORD PTR [edi-64]
	push	DWORD PTR [edi+4]
	push	eax
	push	OFFSET ??_C@_08LBKEHGGD@expected?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 265
	lea	eax, DWORD PTR _buf$5[esp+640]
	push	DWORD PTR [edi+4]
	push	eax
	push	OFFSET ??_C@_03HAJCNPLG@got?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_hexdump
; Line 267
	mov	ecx, DWORD PTR _errs$1$[esp+656]
	add	esp, 16					; 00000010H
	inc	ecx
	mov	DWORD PTR _errs$1$[esp+640], ecx
	jmp	SHORT $LN5@run_test_v
$LN115@run_test_v:
	mov	ecx, DWORD PTR _errs$1$[esp+640]
$LN5@run_test_v:
; Line 239
	inc	DWORD PTR _n$2$[esp+640]
	add	edi, 268				; 0000010cH
	sub	DWORD PTR tv987[esp+640], 1
	mov	DWORD PTR tv1001[esp+640], edi
	jne	$LL7@run_test_v
; Line 271
	mov	eax, ecx
; Line 272
	mov	ecx, DWORD PTR __$ArrayPad$[esp+640]
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_run_test_vectors ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _hexdump
_TEXT	SEGMENT
_f$ = 8							; size = 4
_title$ = 12						; size = 4
_s$ = 16						; size = 4
_l$ = 20						; size = 4
_hexdump PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\test\igetest.c
; Line 62
	push	ebx
	push	esi
; Line 65
	mov	esi, DWORD PTR _f$[esp+4]
	push	edi
	push	DWORD PTR _title$[esp+8]
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
; Line 66
	mov	edi, DWORD PTR _l$[esp+20]
	add	esp, 12					; 0000000cH
	xor	ebx, ebx
	test	edi, edi
	jle	SHORT $LN3@hexdump
	push	ebp
	mov	ebp, DWORD PTR _s$[esp+12]
$LL4@hexdump:
; Line 67
	test	bl, 15					; 0000000fH
	jne	SHORT $LN5@hexdump
; Line 68
	push	ebx
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN5@hexdump:
; Line 69
	movzx	eax, BYTE PTR [ebx+ebp]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	inc	ebx
	add	esp, 12					; 0000000cH
	cmp	ebx, edi
	jl	SHORT $LL4@hexdump
	pop	ebp
$LN3@hexdump:
; Line 71
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
; Line 72
	ret	0
_hexdump ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_verify.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_verify
PUBLIC	_ASN1_item_verify
PUBLIC	??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_find_sigid_algs:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_VerifyFinal:PROC
EXTRN	_EVP_DigestVerifyInit:PROC
EXTRN	_EVP_DigestVerifyFinal:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_type:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'_verify.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_verify
_TEXT	SEGMENT
_buf_in$ = -32						; size = 4
_pknid$ = -28						; size = 4
_ctx$ = -24						; size = 24
_it$ = 8						; size = 4
_a$ = 12						; size = 4
_signature$ = 16					; size = 4
_asn$ = 20						; size = 4
_mdnid$ = 24						; size = 4
_pkey$ = 24						; size = 4
_ASN1_item_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_verify.c
; Line 138
	mov	eax, 32					; 00000020H
	call	__chkstk
	push	esi
	push	edi
; Line 145
	mov	edi, DWORD PTR _pkey$[esp+36]
	or	esi, -1
	mov	DWORD PTR _buf_in$[esp+40], 0
	test	edi, edi
	jne	SHORT $LN2@ASN1_item_
; Line 146
	push	146					; 00000092H
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	67					; 00000043H
	push	197					; 000000c5H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 147
	or	eax, esi
	pop	edi
	pop	esi
; Line 231
	add	esp, 32					; 00000020H
	ret	0
$LN2@ASN1_item_:
	push	ebx
; Line 150
	mov	ebx, DWORD PTR _signature$[esp+40]
	cmp	DWORD PTR [ebx+4], 3
	jne	SHORT $LN3@ASN1_item_
	test	BYTE PTR [ebx+12], 7
	je	SHORT $LN3@ASN1_item_
; Line 151
	push	151					; 00000097H
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	220					; 000000dcH
	push	197					; 000000c5H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 152
	or	eax, -1
	pop	ebx
	pop	edi
	pop	esi
; Line 231
	add	esp, 32					; 00000020H
	ret	0
$LN3@ASN1_item_:
; Line 155
	lea	eax, DWORD PTR _ctx$[esp+44]
	push	ebp
	push	eax
	call	_EVP_MD_CTX_init
; Line 158
	mov	ebp, DWORD PTR _a$[esp+48]
	lea	eax, DWORD PTR _pknid$[esp+52]
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _mdnid$[esp+48]
	push	eax
	push	DWORD PTR [ebp]
	call	_OBJ_obj2nid
	add	esp, 4
	push	eax
	call	_OBJ_find_sigid_algs
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@ASN1_item_
; Line 159
	push	159					; 0000009fH
$LN18@ASN1_item_:
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	199					; 000000c7H
	push	197					; 000000c5H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 160
	jmp	$err$22
$LN4@ASN1_item_:
; Line 162
	mov	eax, DWORD PTR _mdnid$[esp+44]
	test	eax, eax
	jne	SHORT $LN5@ASN1_item_
; Line 163
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN8@ASN1_item_
	mov	eax, DWORD PTR [eax+100]
	test	eax, eax
	je	SHORT $LN8@ASN1_item_
; Line 168
	push	edi
	push	ebx
	push	ebp
	push	DWORD PTR _asn$[esp+56]
	lea	ecx, DWORD PTR _ctx$[esp+64]
	push	DWORD PTR _it$[esp+60]
	push	ecx
	call	eax
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 174
	cmp	esi, 2
	jne	$err$22
; Line 176
	or	esi, -1
$LN12@ASN1_item_:
; Line 200
	push	DWORD PTR _it$[esp+44]
	lea	eax, DWORD PTR _buf_in$[esp+52]
	push	eax
	push	DWORD PTR _asn$[esp+52]
	call	_ASN1_item_i2d
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 202
	mov	eax, DWORD PTR _buf_in$[esp+48]
	test	eax, eax
	jne	$LN13@ASN1_item_
; Line 203
	push	203					; 000000cbH
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	65					; 00000041H
	push	197					; 000000c5H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	$err$22
$LN8@ASN1_item_:
; Line 164
	push	165					; 000000a5H
; Line 166
	jmp	$LN18@ASN1_item_
$LN5@ASN1_item_:
; Line 179
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	mov	ebp, eax
	add	esp, 8
; Line 180
	test	ebp, ebp
	jne	SHORT $LN10@ASN1_item_
; Line 181
	push	182					; 000000b6H
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	161					; 000000a1H
	push	197					; 000000c5H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	$err$22
$LN10@ASN1_item_:
; Line 187
	push	DWORD PTR _pknid$[esp+48]
	call	_EVP_PKEY_type
	mov	ecx, DWORD PTR [edi+12]
	add	esp, 4
	cmp	eax, DWORD PTR [ecx]
	je	SHORT $LN11@ASN1_item_
; Line 188
	push	188					; 000000bcH
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	200					; 000000c8H
	push	197					; 000000c5H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	$err$22
$LN11@ASN1_item_:
; Line 192
	push	edi
	push	0
	push	ebp
	lea	eax, DWORD PTR _ctx$[esp+60]
	push	0
	push	eax
	call	_EVP_DigestVerifyInit
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN12@ASN1_item_
; Line 193
	push	193					; 000000c1H
$LN20@ASN1_item_:
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	6
	push	197					; 000000c5H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 194
	xor	esi, esi
; Line 195
	jmp	SHORT $err$22
$LN13@ASN1_item_:
; Line 207
	push	edi
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+56]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN14@ASN1_item_
; Line 208
	push	208					; 000000d0H
; Line 210
	jmp	SHORT $LN20@ASN1_item_
$LN14@ASN1_item_:
; Line 213
	push	edi
	push	DWORD PTR _buf_in$[esp+52]
	call	_OPENSSL_cleanse
; Line 214
	push	DWORD PTR _buf_in$[esp+56]
	call	_CRYPTO_free
; Line 217
	push	DWORD PTR [ebx]
	lea	eax, DWORD PTR _ctx$[esp+64]
	push	DWORD PTR [ebx+8]
	push	eax
	call	_EVP_DigestVerifyFinal
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN15@ASN1_item_
; Line 218
	push	218					; 000000daH
; Line 220
	jmp	SHORT $LN20@ASN1_item_
$LN15@ASN1_item_:
; Line 227
	mov	esi, 1
$err$22:
; Line 229
	lea	eax, DWORD PTR _ctx$[esp+48]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 230
	mov	eax, esi
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 231
	add	esp, 32					; 00000020H
	ret	0
_ASN1_item_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_verify
_TEXT	SEGMENT
_p$ = -28						; size = 4
_ctx$ = -24						; size = 24
_i2d$ = 8						; size = 4
_type$1$ = 12						; size = 4
_a$ = 12						; size = 4
_signature$ = 16					; size = 4
_data$ = 20						; size = 4
_pkey$ = 24						; size = 4
_ASN1_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_verify.c
; Line 79
	mov	eax, 28					; 0000001cH
	call	__chkstk
	push	esi
; Line 85
	lea	eax, DWORD PTR _ctx$[esp+32]
	or	esi, -1
	push	eax
	call	_EVP_MD_CTX_init
; Line 86
	mov	eax, DWORD PTR _a$[esp+32]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
; Line 87
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 16					; 00000010H
	mov	DWORD PTR _type$1$[esp+28], eax
; Line 88
	test	eax, eax
	jne	SHORT $LN2@ASN1_verif
; Line 89
	push	89					; 00000059H
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	161					; 000000a1H
	push	137					; 00000089H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 130
	lea	eax, DWORD PTR _ctx$[esp+32]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 131
	mov	eax, esi
	pop	esi
; Line 132
	add	esp, 28					; 0000001cH
	ret	0
$LN2@ASN1_verif:
	push	edi
; Line 93
	mov	edi, DWORD PTR _signature$[esp+32]
	cmp	DWORD PTR [edi+4], 3
	jne	SHORT $LN3@ASN1_verif
	test	BYTE PTR [edi+12], 7
	je	SHORT $LN3@ASN1_verif
; Line 94
	push	94					; 0000005eH
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	220					; 000000dcH
	push	137					; 00000089H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 130
	lea	eax, DWORD PTR _ctx$[esp+36]
	pop	edi
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 131
	mov	eax, esi
	pop	esi
; Line 132
	add	esp, 28					; 0000001cH
	ret	0
$LN3@ASN1_verif:
	push	ebx
	push	ebp
; Line 98
	push	0
	push	DWORD PTR _data$[esp+44]
	call	DWORD PTR _i2d$[esp+48]
; Line 99
	push	99					; 00000063H
	mov	ebp, eax
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	ebp
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 20					; 00000014H
; Line 100
	test	ebx, ebx
	jne	SHORT $LN4@ASN1_verif
; Line 101
	push	101					; 00000065H
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	65					; 00000041H
	push	137					; 00000089H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 102
	jmp	$LN10@ASN1_verif
$LN4@ASN1_verif:
; Line 106
	lea	eax, DWORD PTR _p$[esp+44]
	mov	DWORD PTR _p$[esp+44], ebx
	push	eax
	push	DWORD PTR _data$[esp+44]
	call	DWORD PTR _i2d$[esp+48]
; Line 108
	push	0
	push	DWORD PTR _type$1$[esp+52]
	lea	eax, DWORD PTR _ctx$[esp+60]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN6@ASN1_verif
	push	ebp
	lea	eax, DWORD PTR _ctx$[esp+48]
	push	ebx
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN6@ASN1_verif
; Line 114
	push	ebp
	push	ebx
	call	_OPENSSL_cleanse
; Line 115
	push	ebx
	call	_CRYPTO_free
; Line 118
	push	DWORD PTR _pkey$[esp+52]
	lea	eax, DWORD PTR _ctx$[esp+60]
	push	DWORD PTR [edi]
	push	DWORD PTR [edi+8]
	push	eax
	call	_EVP_VerifyFinal
	add	esp, 28					; 0000001cH
	test	eax, eax
	jg	SHORT $LN7@ASN1_verif
; Line 119
	push	119					; 00000077H
; Line 121
	jmp	SHORT $LN12@ASN1_verif
$LN7@ASN1_verif:
; Line 128
	mov	esi, 1
	jmp	SHORT $LN10@ASN1_verif
$LN6@ASN1_verif:
; Line 109
	push	109					; 0000006dH
$LN12@ASN1_verif:
	push	OFFSET ??_C@_0BJ@HLJJPCLA@?4?2crypto?2asn1?2a_verify?4c?$AA@
	push	6
	push	137					; 00000089H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 110
	xor	esi, esi
$LN10@ASN1_verif:
	pop	ebp
	pop	ebx
	pop	edi
$err$14:
; Line 130
	lea	eax, DWORD PTR _ctx$[esp+32]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 131
	mov	eax, esi
	pop	esi
; Line 132
	add	esp, 28					; 0000001cH
	ret	0
_ASN1_verify ENDP
_TEXT	ENDS
END

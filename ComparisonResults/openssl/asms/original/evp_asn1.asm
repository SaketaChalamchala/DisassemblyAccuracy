; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\evp_asn1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_TYPE_set_octetstring
PUBLIC	_ASN1_TYPE_get_octetstring
PUBLIC	_ASN1_TYPE_set_int_octetstring
PUBLIC	_ASN1_TYPE_get_int_octetstring
PUBLIC	??_C@_0BJ@IFLEADKK@?4?2crypto?2asn1?2evp_asn1?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_TYPE_set:PROC
EXTRN	_ASN1_STRING_new:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	_d2i_ASN1_INTEGER:PROC
EXTRN	_i2d_ASN1_INTEGER:PROC
EXTRN	_d2i_ASN1_OCTET_STRING:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_ASN1_INTEGER_get:PROC
EXTRN	_i2d_ASN1_bytes:PROC
EXTRN	_ASN1_const_check_infinite_end:PROC
EXTRN	_ASN1_put_object:PROC
EXTRN	_ASN1_object_size:PROC
EXTRN	_asn1_GetSequence:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BJ@IFLEADKK@?4?2crypto?2asn1?2evp_asn1?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@IFLEADKK@?4?2crypto?2asn1?2evp_asn1?4c?$AA@ DB '.\crypto\asn1\e'
	DB	'vp_asn1.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_TYPE_get_int_octetstring
_TEXT	SEGMENT
_length$ = -48						; size = 4
_c$ = -44						; size = 44
_p$ = 8							; size = 4
_a$ = 8							; size = 4
_num$ = 12						; size = 4
_data$ = 16						; size = 4
_max_len$ = 20						; size = 4
_ASN1_TYPE_get_int_octetstring PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\evp_asn1.c
; Line 144
	mov	eax, 48					; 00000030H
	call	__chkstk
; Line 152
	mov	eax, DWORD PTR _a$[esp+44]
	push	ebx
	push	esi
	push	edi
	or	ebx, -1
	xor	edi, edi
	xor	esi, esi
	cmp	DWORD PTR [eax], 16			; 00000010H
	jne	SHORT $err$20
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $err$20
; Line 155
	mov	ecx, DWORD PTR [eax+8]
; Line 158
	lea	edx, DWORD PTR _p$[esp+56]
	mov	DWORD PTR _p$[esp+56], ecx
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _length$[esp+60], eax
; Line 160
	add	eax, ecx
	mov	DWORD PTR _c$[esp+88], eax
; Line 163
	lea	eax, DWORD PTR _length$[esp+60]
	push	eax
	lea	eax, DWORD PTR _c$[esp+64]
	mov	DWORD PTR _c$[esp+100], edx
	push	eax
	mov	DWORD PTR _c$[esp+68], ecx
	mov	DWORD PTR _c$[esp+76], 109		; 0000006dH
	call	_asn1_GetSequence
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@ASN1_TYPE_
	mov	DWORD PTR _c$[esp+100], 163		; 000000a3H
$err$20:
; Line 188
	push	188					; 000000bcH
	push	OFFSET ??_C@_0BJ@IFLEADKK@?4?2crypto?2asn1?2evp_asn1?4c?$AA@
	push	109					; 0000006dH
	push	134					; 00000086H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN12@ASN1_TYPE_:
; Line 190
	test	esi, esi
	je	SHORT $LN13@ASN1_TYPE_
; Line 191
	push	esi
	call	_ASN1_STRING_free
	add	esp, 4
$LN13@ASN1_TYPE_:
; Line 192
	test	edi, edi
	je	SHORT $LN18@ASN1_TYPE_
; Line 193
	push	edi
	call	_ASN1_STRING_free
	add	esp, 4
$LN18@ASN1_TYPE_:
; Line 194
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 195
	add	esp, 48					; 00000030H
	ret	0
$LN4@ASN1_TYPE_:
; Line 164
	mov	eax, DWORD PTR _c$[esp+60]
; Line 165
	push	DWORD PTR _c$[esp+84]
	mov	DWORD PTR _c$[esp+96], eax
	lea	eax, DWORD PTR _c$[esp+64]
	push	eax
	push	0
	call	_d2i_ASN1_INTEGER
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	je	SHORT $err$20
; Line 167
	mov	eax, DWORD PTR _c$[esp+92]
	mov	edx, DWORD PTR _c$[esp+60]
	sub	eax, edx
	mov	ecx, DWORD PTR _c$[esp+84]
	add	ecx, eax
; Line 168
	mov	DWORD PTR _c$[esp+92], edx
; Line 169
	push	ecx
	lea	eax, DWORD PTR _c$[esp+64]
	mov	DWORD PTR _c$[esp+88], ecx
	push	eax
	push	0
	call	_d2i_ASN1_OCTET_STRING
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	$err$20
; Line 171
	mov	eax, DWORD PTR _c$[esp+92]
	sub	eax, DWORD PTR _c$[esp+60]
	mov	ecx, DWORD PTR _c$[esp+84]
	add	ecx, eax
; Line 172
	test	BYTE PTR _c$[esp+72], 1
	mov	DWORD PTR _c$[esp+84], ecx
	jne	SHORT $LN16@ASN1_TYPE_
	xor	eax, eax
	test	ecx, ecx
	setle	al
	jmp	SHORT $LN17@ASN1_TYPE_
$LN16@ASN1_TYPE_:
	push	ecx
	lea	eax, DWORD PTR _c$[esp+64]
	push	eax
	call	_ASN1_const_check_infinite_end
	add	esp, 8
	mov	DWORD PTR _c$[esp+64], eax
$LN17@ASN1_TYPE_:
	test	eax, eax
	je	$err$20
; Line 175
	mov	ebx, DWORD PTR _num$[esp+56]
	test	ebx, ebx
	je	SHORT $LN8@ASN1_TYPE_
; Line 176
	push	edi
	call	_ASN1_INTEGER_get
	add	esp, 4
	mov	DWORD PTR [ebx], eax
$LN8@ASN1_TYPE_:
; Line 178
	mov	ebx, DWORD PTR [esi]
; Line 179
	mov	eax, DWORD PTR _max_len$[esp+56]
	cmp	eax, ebx
; Line 184
	mov	ecx, DWORD PTR _data$[esp+56]
	cmovg	eax, ebx
	test	ecx, ecx
	je	$LN12@ASN1_TYPE_
; Line 185
	push	eax
	push	DWORD PTR [esi+8]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 186
	jmp	$LN12@ASN1_TYPE_
_ASN1_TYPE_get_int_octetstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_TYPE_set_int_octetstring
_TEXT	SEGMENT
_p$ = -72						; size = 4
_in$ = -68						; size = 16
_os$ = -52						; size = 16
_buf$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_a$ = 8							; size = 4
_num$ = 12						; size = 4
_data$ = 16						; size = 4
_len$ = 20						; size = 4
_ASN1_TYPE_set_int_octetstring PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\evp_asn1.c
; Line 100
	mov	eax, 72					; 00000048H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
	mov	eax, DWORD PTR _data$[esp+68]
; Line 107
	lea	ecx, DWORD PTR _buf$[esp+72]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _a$[esp+76]
	push	esi
; Line 109
	mov	DWORD PTR _os$[esp+92], eax
; Line 111
	mov	eax, DWORD PTR _len$[esp+80]
	push	edi
; Line 112
	push	DWORD PTR _num$[esp+84]
	mov	DWORD PTR _os$[esp+92], eax
	lea	eax, DWORD PTR _in$[esp+92]
	push	eax
	mov	DWORD PTR _in$[esp+104], ecx
	mov	DWORD PTR _in$[esp+96], 32		; 00000020H
	mov	DWORD PTR _os$[esp+100], 4
	call	_ASN1_INTEGER_set
; Line 113
	lea	eax, DWORD PTR _in$[esp+96]
	push	0
	push	eax
	call	_i2d_ASN1_INTEGER
; Line 114
	push	0
	push	4
	mov	ebx, eax
	lea	eax, DWORD PTR _os$[esp+112]
	push	0
	push	eax
	call	_i2d_ASN1_bytes
	add	ebx, eax
; Line 116
	push	16					; 00000010H
	push	ebx
	push	1
	call	_ASN1_object_size
	add	esp, 44					; 0000002cH
	mov	edi, eax
; Line 118
	call	_ASN1_STRING_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN5@ASN1_TYPE_
; Line 121
	push	edi
	push	0
	push	esi
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@ASN1_TYPE_
; Line 122
	push	esi
	call	_ASN1_STRING_free
	add	esp, 4
$LN5@ASN1_TYPE_:
; Line 123
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 135
	mov	ecx, DWORD PTR __$ArrayPad$[esp+72]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
$LN3@ASN1_TYPE_:
; Line 127
	mov	eax, DWORD PTR [esi+8]
; Line 129
	push	0
	push	16					; 00000010H
	mov	DWORD PTR [esi], edi
	push	ebx
	mov	DWORD PTR _p$[esp+100], eax
	lea	eax, DWORD PTR _p$[esp+100]
	push	1
	push	eax
	call	_ASN1_put_object
; Line 130
	lea	eax, DWORD PTR _p$[esp+108]
	push	eax
	lea	eax, DWORD PTR _in$[esp+112]
	push	eax
	call	_i2d_ASN1_INTEGER
; Line 131
	push	0
	push	4
	lea	eax, DWORD PTR _p$[esp+124]
	push	eax
	lea	eax, DWORD PTR _os$[esp+128]
	push	eax
	call	_i2d_ASN1_bytes
; Line 133
	push	esi
	push	16					; 00000010H
	push	ebp
	call	_ASN1_TYPE_set
; Line 135
	mov	ecx, DWORD PTR __$ArrayPad$[esp+144]
	add	esp, 56					; 00000038H
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
_ASN1_TYPE_set_int_octetstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_TYPE_get_octetstring
_TEXT	SEGMENT
_a$ = 8							; size = 4
_data$ = 12						; size = 4
_max_len$ = 16						; size = 4
_ASN1_TYPE_get_octetstring PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\evp_asn1.c
; Line 84
	mov	eax, DWORD PTR _a$[esp-4]
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN3@ASN1_TYPE_
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN3@ASN1_TYPE_
; Line 90
	mov	ecx, DWORD PTR _max_len$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
	cmp	esi, ecx
	cmovl	ecx, esi
; Line 94
	push	ecx
	push	DWORD PTR [eax+8]
	push	DWORD PTR _data$[esp+8]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 95
	mov	eax, esi
	pop	esi
; Line 96
	ret	0
$LN3@ASN1_TYPE_:
; Line 85
	push	85					; 00000055H
	push	OFFSET ??_C@_0BJ@IFLEADKK@?4?2crypto?2asn1?2evp_asn1?4c?$AA@
	push	109					; 0000006dH
	push	135					; 00000087H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 86
	or	eax, -1
; Line 96
	ret	0
_ASN1_TYPE_get_octetstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_TYPE_set_octetstring
_TEXT	SEGMENT
_a$ = 8							; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_ASN1_TYPE_set_octetstring PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\evp_asn1.c
; Line 65
	push	esi
; Line 68
	push	4
	call	_ASN1_STRING_type_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN5@ASN1_TYPE_
; Line 70
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _data$[esp+4]
	push	esi
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
; Line 71
	push	esi
	test	eax, eax
	jne	SHORT $LN3@ASN1_TYPE_
	call	_ASN1_STRING_free
	add	esp, 4
$LN5@ASN1_TYPE_:
; Line 72
	xor	eax, eax
	pop	esi
; Line 76
	ret	0
$LN3@ASN1_TYPE_:
; Line 74
	push	4
	push	DWORD PTR _a$[esp+8]
	call	_ASN1_TYPE_set
	add	esp, 12					; 0000000cH
; Line 75
	mov	eax, 1
	pop	esi
; Line 76
	ret	0
_ASN1_TYPE_set_octetstring ENDP
_TEXT	ENDS
END

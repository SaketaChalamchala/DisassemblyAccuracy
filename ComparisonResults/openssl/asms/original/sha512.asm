; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_SHA512_version
CONST	SEGMENT
_SHA512_version DB 'SHA-512 part of OpenSSL 1.0.2h  3 May 2016', 00H
CONST	ENDS
PUBLIC	_SHA384_Init
PUBLIC	_SHA384_Update
PUBLIC	_SHA384_Final
PUBLIC	_SHA384
PUBLIC	_SHA512_Init
PUBLIC	_SHA512_Update
PUBLIC	_SHA512_Final
PUBLIC	_SHA512
PUBLIC	_SHA512_Transform
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_sha512_block_data_order:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__aullshr:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?m@?1??SHA384@@9@9 DB 030H DUP (?)			; `SHA384'::`2'::m
?m@?1??SHA512@@9@9 DB 040H DUP (?)			; `SHA512'::`2'::m
_BSS	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA512_Transform
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data$ = 12						; size = 4
_SHA512_Transform PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 245
	push	1
	push	DWORD PTR _data$[esp]
	push	DWORD PTR _c$[esp+4]
	call	_sha512_block_data_order
	add	esp, 12					; 0000000cH
; Line 246
	ret	0
_SHA512_Transform ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA512
_TEXT	SEGMENT
_c$ = -220						; size = 216
__$ArrayPad$ = -4					; size = 4
_d$ = 8							; size = 4
_n$ = 12						; size = 4
_md$ = 16						; size = 4
_SHA512	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 263
	mov	eax, 220				; 000000dcH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+220], eax
	mov	eax, DWORD PTR _md$[esp+216]
; Line 267
	test	eax, eax
	push	esi
	mov	esi, DWORD PTR _d$[esp+220]
	push	edi
	mov	edi, OFFSET ?m@?1??SHA512@@9@9
	cmovne	edi, eax
; Line 269
	lea	eax, DWORD PTR _c$[esp+228]
	push	eax
	call	_SHA512_Init
; Line 270
	push	DWORD PTR _n$[esp+228]
	lea	eax, DWORD PTR _c$[esp+236]
	push	esi
	push	eax
	call	_SHA512_Update
; Line 271
	lea	eax, DWORD PTR _c$[esp+244]
	push	eax
	push	edi
	call	_SHA512_Final
; Line 272
	lea	eax, DWORD PTR _c$[esp+252]
	push	216					; 000000d8H
	push	eax
	call	_OPENSSL_cleanse
; Line 274
	mov	ecx, DWORD PTR __$ArrayPad$[esp+260]
	add	esp, 32					; 00000020H
	mov	eax, edi
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	ret	0
_SHA512	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA512_Final
_TEXT	SEGMENT
_md$ = 8						; size = 4
_c$ = 12						; size = 4
_SHA512_Final PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 105
	push	ebx
	push	esi
	push	edi
; Line 106
	mov	edi, DWORD PTR _c$[esp+8]
	lea	esi, DWORD PTR [edi+80]
; Line 107
	mov	ebx, DWORD PTR [edi+208]
; Line 109
	mov	BYTE PTR [ebx+esi], 128			; 00000080H
; Line 110
	inc	ebx
; Line 111
	cmp	ebx, 112				; 00000070H
	jbe	SHORT $LN10@SHA512_Fin
; Line 112
	mov	eax, 128				; 00000080H
	sub	eax, ebx
	push	eax
	lea	eax, DWORD PTR [ebx+esi]
	push	0
	push	eax
	call	_memset
	push	1
	push	esi
	push	edi
	xor	ebx, ebx
	call	_sha512_block_data_order
	add	esp, 24					; 00000018H
$LN10@SHA512_Fin:
; Line 115
	mov	eax, 112				; 00000070H
	sub	eax, ebx
	push	eax
	lea	eax, DWORD PTR [ebx+esi]
	push	0
	push	eax
	call	_memset
; Line 120
	movzx	eax, BYTE PTR [edi+64]
	add	esp, 12					; 0000000cH
	mov	BYTE PTR [esi+127], al
; Line 121
	mov	ecx, DWORD PTR [edi+64]
	mov	eax, DWORD PTR [edi+68]
	shrd	ecx, eax, 8
	mov	BYTE PTR [esi+126], cl
; Line 122
	mov	ecx, DWORD PTR [edi+64]
	shr	eax, 8
	mov	eax, DWORD PTR [edi+68]
	shrd	ecx, eax, 16
	mov	BYTE PTR [esi+125], cl
; Line 123
	mov	ecx, DWORD PTR [edi+64]
	shr	eax, 16					; 00000010H
	mov	eax, DWORD PTR [edi+68]
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+124], cl
; Line 124
	mov	cl, 32					; 00000020H
	mov	edx, DWORD PTR [edi+68]
	shr	eax, 24					; 00000018H
	mov	eax, DWORD PTR [edi+64]
	call	__aullshr
	mov	BYTE PTR [esi+123], al
; Line 125
	mov	cl, 40					; 00000028H
	mov	eax, DWORD PTR [edi+64]
	mov	edx, DWORD PTR [edi+68]
	call	__aullshr
	mov	BYTE PTR [esi+122], al
; Line 126
	movzx	eax, BYTE PTR [edi+70]
	mov	BYTE PTR [esi+121], al
; Line 127
	movzx	eax, BYTE PTR [edi+71]
	mov	BYTE PTR [esi+120], al
; Line 128
	movzx	eax, BYTE PTR [edi+72]
	mov	BYTE PTR [esi+119], al
; Line 129
	mov	ecx, DWORD PTR [edi+72]
	mov	eax, DWORD PTR [edi+76]
	shrd	ecx, eax, 8
	mov	BYTE PTR [esi+118], cl
; Line 130
	mov	ecx, DWORD PTR [edi+72]
	shr	eax, 8
	mov	eax, DWORD PTR [edi+76]
	shrd	ecx, eax, 16
	mov	BYTE PTR [esi+117], cl
; Line 131
	mov	ecx, DWORD PTR [edi+72]
	shr	eax, 16					; 00000010H
	mov	eax, DWORD PTR [edi+76]
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+116], cl
; Line 132
	mov	cl, 32					; 00000020H
	mov	edx, DWORD PTR [edi+76]
	shr	eax, 24					; 00000018H
	mov	eax, DWORD PTR [edi+72]
	call	__aullshr
	mov	BYTE PTR [esi+115], al
; Line 133
	mov	cl, 40					; 00000028H
	mov	eax, DWORD PTR [edi+72]
	mov	edx, DWORD PTR [edi+76]
	call	__aullshr
	mov	BYTE PTR [esi+114], al
; Line 134
	movzx	eax, BYTE PTR [edi+78]
; Line 138
	push	1
	mov	BYTE PTR [esi+113], al
	movzx	eax, BYTE PTR [edi+79]
	push	esi
	push	edi
	mov	BYTE PTR [esi+112], al
	call	_sha512_block_data_order
; Line 140
	mov	esi, DWORD PTR _md$[esp+20]
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN11@SHA512_Fin
$LN39@SHA512_Fin:
	pop	edi
	pop	esi
; Line 141
	xor	eax, eax
	pop	ebx
; Line 179
	ret	0
$LN11@SHA512_Fin:
; Line 143
	mov	eax, DWORD PTR [edi+212]
	cmp	eax, 48					; 00000030H
	je	$LN12@SHA512_Fin
	cmp	eax, 64					; 00000040H
	jne	SHORT $LN39@SHA512_Fin
; Line 161
	mov	edx, DWORD PTR [edi+4]
; Line 163
	mov	eax, edx
	mov	ebx, DWORD PTR [edi]
; Line 167
	mov	ecx, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+1], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+2], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+3], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+4], cl
; Line 168
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+5], cl
; Line 169
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+6], al
; Line 170
	mov	BYTE PTR [esi+7], bl
	mov	ebx, DWORD PTR [edi+8]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+12]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+8], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+9], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+10], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+11], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+12], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+13], cl
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+14], al
	mov	BYTE PTR [esi+15], bl
	mov	ebx, DWORD PTR [edi+16]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+20]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+16], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+17], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+18], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+19], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+20], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	eax, ebx
	mov	BYTE PTR [esi+21], cl
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+22], al
	shr	edx, 8
	mov	BYTE PTR [esi+23], bl
; Line 163
	mov	edx, DWORD PTR [edi+28]
	mov	eax, edx
	mov	ebx, DWORD PTR [edi+24]
; Line 167
	mov	ecx, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+24], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+25], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+26], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+27], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+28], cl
; Line 168
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+29], cl
; Line 169
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+30], al
; Line 170
	mov	BYTE PTR [esi+31], bl
	mov	ebx, DWORD PTR [edi+32]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+36]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+32], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+33], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+34], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+35], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+36], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+37], cl
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+38], al
	mov	BYTE PTR [esi+39], bl
	mov	ebx, DWORD PTR [edi+40]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+44]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+40], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+41], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+42], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+43], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+44], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	eax, ebx
	mov	BYTE PTR [esi+45], cl
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+46], al
	shr	edx, 8
	mov	BYTE PTR [esi+47], bl
; Line 163
	mov	edx, DWORD PTR [edi+52]
	mov	eax, edx
	mov	ebx, DWORD PTR [edi+48]
; Line 167
	mov	ecx, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+48], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+49], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+50], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+51], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+52], cl
; Line 168
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+53], cl
; Line 169
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+54], al
; Line 170
	mov	BYTE PTR [esi+55], bl
	mov	ebx, DWORD PTR [edi+56]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+60]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+56], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+57], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+58], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+59], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+60], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	pop	edi
	shr	eax, 16					; 00000010H
	mov	eax, ebx
	mov	BYTE PTR [esi+61], cl
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+62], al
; Line 178
	mov	eax, 1
	mov	BYTE PTR [esi+63], bl
	pop	esi
	shr	edx, 8
	pop	ebx
; Line 179
	ret	0
$LN12@SHA512_Fin:
; Line 147
	mov	edx, DWORD PTR [edi+4]
; Line 149
	mov	eax, edx
	mov	ebx, DWORD PTR [edi]
; Line 153
	mov	ecx, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+1], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+2], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+3], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+4], cl
; Line 154
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+5], cl
; Line 155
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+6], al
; Line 156
	mov	BYTE PTR [esi+7], bl
	mov	ebx, DWORD PTR [edi+8]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+12]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+8], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+9], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+10], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+11], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+12], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+13], cl
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+14], al
	mov	BYTE PTR [esi+15], bl
	mov	ebx, DWORD PTR [edi+16]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+20]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+16], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+17], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+18], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+19], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+20], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	eax, ebx
	mov	BYTE PTR [esi+21], cl
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+22], al
	shr	edx, 8
	mov	BYTE PTR [esi+23], bl
; Line 149
	mov	edx, DWORD PTR [edi+28]
	mov	eax, edx
	mov	ebx, DWORD PTR [edi+24]
; Line 153
	mov	ecx, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+24], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+25], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+26], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+27], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+28], cl
; Line 154
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+29], cl
; Line 155
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+30], al
; Line 156
	mov	BYTE PTR [esi+31], bl
	mov	ebx, DWORD PTR [edi+32]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+36]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+32], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+33], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+34], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+35], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+36], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+37], cl
	mov	eax, ebx
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+38], al
	mov	BYTE PTR [esi+39], bl
	mov	ebx, DWORD PTR [edi+40]
	mov	ecx, ebx
	shr	edx, 8
	mov	edx, DWORD PTR [edi+44]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+40], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+41], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+42], al
	mov	eax, edx
	shrd	ecx, eax, 24
	mov	BYTE PTR [esi+43], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+44], cl
	mov	eax, edx
	mov	ecx, ebx
	shrd	ecx, eax, 16
	shr	eax, 16					; 00000010H
	mov	eax, ebx
	mov	BYTE PTR [esi+45], cl
	shrd	eax, edx, 8
	mov	BYTE PTR [esi+46], al
	mov	BYTE PTR [esi+47], bl
	shr	edx, 8
; Line 178
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 179
	ret	0
_SHA512_Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA512_Update
_TEXT	SEGMENT
_c$ = 8							; size = 4
__data$ = 12						; size = 4
_len$ = 16						; size = 4
_SHA512_Update PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 187
	push	ebx
; Line 190
	mov	ebx, DWORD PTR __data$[esp]
	push	ebp
	push	esi
; Line 192
	mov	esi, DWORD PTR _len$[esp+8]
	push	edi
	mov	edi, DWORD PTR _c$[esp+12]
	lea	ebp, DWORD PTR [edi+80]
	test	esi, esi
	je	$LN9@SHA512_Upd
; Line 195
	mov	eax, esi
	mov	edx, 8
	mul	edx
	add	eax, DWORD PTR [edi+64]
	adc	edx, DWORD PTR [edi+68]
; Line 196
	cmp	edx, DWORD PTR [edi+68]
	ja	SHORT $LN3@SHA512_Upd
	jb	SHORT $LN11@SHA512_Upd
	cmp	eax, DWORD PTR [edi+64]
	jae	SHORT $LN3@SHA512_Upd
$LN11@SHA512_Upd:
; Line 197
	add	DWORD PTR [edi+72], 1
	adc	DWORD PTR [edi+76], 0
$LN3@SHA512_Upd:
; Line 200
	mov	DWORD PTR [edi+64], eax
; Line 202
	mov	eax, DWORD PTR [edi+208]
	mov	DWORD PTR [edi+68], edx
	test	eax, eax
	je	SHORT $LN7@SHA512_Upd
; Line 203
	mov	ebp, 128				; 00000080H
	sub	ebp, eax
; Line 206
	add	eax, 80					; 00000050H
	add	eax, edi
	cmp	esi, ebp
	jae	SHORT $LN6@SHA512_Upd
	push	esi
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 231
	mov	eax, 1
	add	DWORD PTR [edi+208], esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 232
	ret	0
$LN6@SHA512_Upd:
; Line 209
	push	ebp
	push	ebx
	push	eax
	call	_memcpy
; Line 210
	sub	esi, ebp
	mov	DWORD PTR [edi+208], 0
	add	ebx, ebp
; Line 211
	lea	ebp, DWORD PTR [edi+80]
	push	1
	push	ebp
	push	edi
	call	_sha512_block_data_order
	add	esp, 24					; 00000018H
$LN7@SHA512_Upd:
; Line 215
	cmp	esi, 128				; 00000080H
	jb	SHORT $LN8@SHA512_Upd
; Line 225
	mov	eax, esi
	shr	eax, 7
	push	eax
	push	ebx
	push	edi
	call	_sha512_block_data_order
	add	ebx, esi
	add	esp, 12					; 0000000cH
	and	esi, 127				; 0000007fH
	sub	ebx, esi
$LN8@SHA512_Upd:
; Line 228
	test	esi, esi
	je	SHORT $LN9@SHA512_Upd
; Line 229
	push	esi
	push	ebx
	push	ebp
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+208], esi
$LN9@SHA512_Upd:
; Line 231
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 232
	ret	0
_SHA512_Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA512_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SHA512_Init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 83
	mov	eax, DWORD PTR _c$[esp-4]
	mov	DWORD PTR [eax], -205731576		; f3bcc908H
	mov	DWORD PTR [eax+4], 1779033703		; 6a09e667H
; Line 84
	mov	DWORD PTR [eax+8], -2067093701		; 84caa73bH
	mov	DWORD PTR [eax+12], -1150833019		; bb67ae85H
; Line 85
	mov	DWORD PTR [eax+16], -23791573		; fe94f82bH
	mov	DWORD PTR [eax+20], 1013904242		; 3c6ef372H
; Line 86
	mov	DWORD PTR [eax+24], 1595750129		; 5f1d36f1H
	mov	DWORD PTR [eax+28], -1521486534		; a54ff53aH
; Line 87
	mov	DWORD PTR [eax+32], -1377402159		; ade682d1H
	mov	DWORD PTR [eax+36], 1359893119		; 510e527fH
; Line 88
	mov	DWORD PTR [eax+40], 725511199		; 2b3e6c1fH
	mov	DWORD PTR [eax+44], -1694144372		; 9b05688cH
; Line 89
	mov	DWORD PTR [eax+48], -79577749		; fb41bd6bH
	mov	DWORD PTR [eax+52], 528734635		; 1f83d9abH
; Line 90
	mov	DWORD PTR [eax+56], 327033209		; 137e2179H
	mov	DWORD PTR [eax+60], 1541459225		; 5be0cd19H
; Line 92
	mov	DWORD PTR [eax+64], 0
	mov	DWORD PTR [eax+68], 0
; Line 93
	mov	DWORD PTR [eax+72], 0
	mov	DWORD PTR [eax+76], 0
; Line 94
	mov	DWORD PTR [eax+208], 0
; Line 95
	mov	DWORD PTR [eax+212], 64			; 00000040H
; Line 96
	mov	eax, 1
; Line 97
	ret	0
_SHA512_Init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA384
_TEXT	SEGMENT
_c$ = -220						; size = 216
__$ArrayPad$ = -4					; size = 4
_d$ = 8							; size = 4
_n$ = 12						; size = 4
_md$ = 16						; size = 4
_SHA384	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 249
	mov	eax, 220				; 000000dcH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+220], eax
	mov	eax, DWORD PTR _md$[esp+216]
; Line 253
	test	eax, eax
	push	esi
	mov	esi, DWORD PTR _d$[esp+220]
	push	edi
	mov	edi, OFFSET ?m@?1??SHA384@@9@9
	cmovne	edi, eax
; Line 255
	lea	eax, DWORD PTR _c$[esp+228]
	push	eax
	call	_SHA384_Init
; Line 256
	push	DWORD PTR _n$[esp+228]
	lea	eax, DWORD PTR _c$[esp+236]
	push	esi
	push	eax
	call	_SHA512_Update
; Line 257
	lea	eax, DWORD PTR _c$[esp+244]
	push	eax
	push	edi
	call	_SHA512_Final
; Line 258
	lea	eax, DWORD PTR _c$[esp+252]
	push	216					; 000000d8H
	push	eax
	call	_OPENSSL_cleanse
; Line 260
	mov	ecx, DWORD PTR __$ArrayPad$[esp+260]
	add	esp, 32					; 00000020H
	mov	eax, edi
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	ret	0
_SHA384	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA384_Final
_TEXT	SEGMENT
_md$ = 8						; size = 4
_c$ = 12						; size = 4
_SHA384_Final PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 183
	jmp	_SHA512_Final
_SHA384_Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA384_Update
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_SHA384_Update PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 236
	jmp	_SHA512_Update
_SHA384_Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA384_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SHA384_Init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha512.c
; Line 65
	mov	eax, DWORD PTR _c$[esp-4]
	mov	DWORD PTR [eax], -1056596264		; c1059ed8H
	mov	DWORD PTR [eax+4], -876896931		; cbbb9d5dH
; Line 66
	mov	DWORD PTR [eax+8], 914150663		; 367cd507H
	mov	DWORD PTR [eax+12], 1654270250		; 629a292aH
; Line 67
	mov	DWORD PTR [eax+16], 812702999		; 3070dd17H
	mov	DWORD PTR [eax+20], -1856437926		; 9159015aH
; Line 68
	mov	DWORD PTR [eax+24], -150054599		; f70e5939H
	mov	DWORD PTR [eax+28], 355462360		; 152fecd8H
; Line 69
	mov	DWORD PTR [eax+32], -4191439		; ffc00b31H
	mov	DWORD PTR [eax+36], 1731405415		; 67332667H
; Line 70
	mov	DWORD PTR [eax+40], 1750603025		; 68581511H
	mov	DWORD PTR [eax+44], -1900787065		; 8eb44a87H
; Line 71
	mov	DWORD PTR [eax+48], 1694076839		; 64f98fa7H
	mov	DWORD PTR [eax+52], -619958771		; db0c2e0dH
; Line 72
	mov	DWORD PTR [eax+56], -1090891868		; befa4fa4H
	mov	DWORD PTR [eax+60], 1203062813		; 47b5481dH
; Line 74
	mov	DWORD PTR [eax+64], 0
	mov	DWORD PTR [eax+68], 0
; Line 75
	mov	DWORD PTR [eax+72], 0
	mov	DWORD PTR [eax+76], 0
; Line 76
	mov	DWORD PTR [eax+208], 0
; Line 77
	mov	DWORD PTR [eax+212], 48			; 00000030H
; Line 78
	mov	eax, 1
; Line 79
	ret	0
_SHA384_Init ENDP
_TEXT	ENDS
END

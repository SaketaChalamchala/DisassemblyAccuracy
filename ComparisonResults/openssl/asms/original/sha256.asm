; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha256.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_SHA256_version
CONST	SEGMENT
_SHA256_version DB 'SHA-256 part of OpenSSL 1.0.2h  3 May 2016', 00H
CONST	ENDS
PUBLIC	_SHA224_Init
PUBLIC	_SHA224_Update
PUBLIC	_SHA224_Final
PUBLIC	_SHA224
PUBLIC	_SHA256_Init
PUBLIC	_SHA256_Update
PUBLIC	_SHA256_Final
PUBLIC	_SHA256
PUBLIC	_SHA256_Transform
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_sha256_block_data_order:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?m@?1??SHA224@@9@9 DB 01cH DUP (?)			; `SHA224'::`2'::m
?m@?1??SHA256@@9@9 DB 020H DUP (?)			; `SHA256'::`2'::m
_BSS	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA256_Transform
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data$ = 12						; size = 4
_SHA256_Transform PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 358
	push	1
	push	DWORD PTR _data$[esp]
	push	DWORD PTR _c$[esp+4]
	call	_sha256_block_data_order
	add	esp, 12					; 0000000cH
; Line 359
	ret	0
_SHA256_Transform ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA256
_TEXT	SEGMENT
_c$ = -116						; size = 112
__$ArrayPad$ = -4					; size = 4
_d$ = 8							; size = 4
_n$ = 12						; size = 4
_md$ = 16						; size = 4
_SHA256	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha256.c
; Line 64
	mov	eax, 116				; 00000074H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+116], eax
	mov	eax, DWORD PTR _md$[esp+112]
; Line 68
	test	eax, eax
	push	esi
	mov	esi, DWORD PTR _d$[esp+116]
	push	edi
	mov	edi, OFFSET ?m@?1??SHA256@@9@9
; Line 36
	push	112					; 00000070H
; Line 68
	cmovne	edi, eax
; Line 36
	lea	eax, DWORD PTR _c$[esp+128]
	push	0
	push	eax
	call	_memset
; Line 71
	push	DWORD PTR _n$[esp+132]
	lea	eax, DWORD PTR _c$[esp+140]
; Line 37
	mov	DWORD PTR _c$[esp+140], 1779033703	; 6a09e667H
; Line 71
	push	esi
	push	eax
; Line 38
	mov	DWORD PTR _c$[esp+152], -1150833019	; bb67ae85H
; Line 39
	mov	DWORD PTR _c$[esp+156], 1013904242	; 3c6ef372H
; Line 40
	mov	DWORD PTR _c$[esp+160], -1521486534	; a54ff53aH
; Line 41
	mov	DWORD PTR _c$[esp+164], 1359893119	; 510e527fH
; Line 42
	mov	DWORD PTR _c$[esp+168], -1694144372	; 9b05688cH
; Line 43
	mov	DWORD PTR _c$[esp+172], 528734635	; 1f83d9abH
; Line 44
	mov	DWORD PTR _c$[esp+176], 1541459225	; 5be0cd19H
; Line 45
	mov	DWORD PTR _c$[esp+256], 32		; 00000020H
; Line 71
	call	_SHA256_Update
; Line 72
	lea	eax, DWORD PTR _c$[esp+148]
	push	eax
	push	edi
	call	_SHA256_Final
; Line 73
	lea	eax, DWORD PTR _c$[esp+156]
	push	112					; 00000070H
	push	eax
	call	_OPENSSL_cleanse
; Line 75
	mov	ecx, DWORD PTR __$ArrayPad$[esp+164]
	add	esp, 40					; 00000028H
	mov	eax, edi
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
_SHA256	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA256_Final
_TEXT	SEGMENT
_md$ = 8						; size = 4
_c$ = 12						; size = 4
_SHA256_Final PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 362
	push	ebx
	push	esi
	push	edi
; Line 363
	mov	edi, DWORD PTR _c$[esp+8]
	lea	esi, DWORD PTR [edi+40]
; Line 364
	mov	ebx, DWORD PTR [edi+104]
; Line 366
	mov	BYTE PTR [ebx+esi], 128			; 00000080H
; Line 367
	inc	ebx
; Line 369
	cmp	ebx, 56					; 00000038H
	jbe	SHORT $LN16@SHA256_Fin
; Line 370
	mov	eax, 64					; 00000040H
	sub	eax, ebx
	push	eax
	lea	eax, DWORD PTR [ebx+esi]
	push	0
	push	eax
	call	_memset
; Line 372
	push	1
	push	esi
	push	edi
	xor	ebx, ebx
	call	_sha256_block_data_order
	add	esp, 24					; 00000018H
$LN16@SHA256_Fin:
; Line 374
	mov	eax, 56					; 00000038H
	sub	eax, ebx
	push	eax
	lea	eax, DWORD PTR [ebx+esi]
	push	0
	push	eax
	call	_memset
; Line 378
	movzx	eax, BYTE PTR [edi+39]
	mov	BYTE PTR [esi+56], al
	movzx	eax, BYTE PTR [edi+38]
	mov	BYTE PTR [esi+57], al
	movzx	eax, BYTE PTR [edi+37]
	mov	BYTE PTR [esi+58], al
	movzx	eax, BYTE PTR [edi+36]
	mov	BYTE PTR [esi+59], al
; Line 379
	movzx	eax, BYTE PTR [edi+35]
	mov	BYTE PTR [esi+60], al
	movzx	eax, BYTE PTR [edi+34]
	mov	BYTE PTR [esi+61], al
	movzx	eax, BYTE PTR [edi+33]
; Line 385
	push	1
	mov	BYTE PTR [esi+62], al
	movzx	eax, BYTE PTR [edi+32]
	push	esi
	push	edi
	mov	BYTE PTR [esi+63], al
	call	_sha256_block_data_order
; Line 387
	push	64					; 00000040H
	push	0
	push	esi
	mov	DWORD PTR [edi+104], 0
	call	_memset
; Line 392
	mov	eax, DWORD PTR [edi+108]
	add	esp, 36					; 00000024H
	cmp	eax, 28					; 0000001cH
	je	$LN17@SHA256_Fin
	cmp	eax, 32					; 00000020H
	je	SHORT $LN18@SHA256_Fin
	jbe	SHORT $LN20@SHA256_Fin
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 396
	ret	0
$LN20@SHA256_Fin:
; Line 392
	xor	esi, esi
	test	eax, -4					; fffffffcH
	jbe	$LN2@SHA256_Fin
	mov	eax, DWORD PTR _md$[esp+8]
	npad	6
$LL15@SHA256_Fin:
	mov	edx, DWORD PTR [edi+esi*4]
	lea	eax, DWORD PTR [eax+4]
	mov	ecx, edx
	inc	esi
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [eax-4], cl
	mov	ecx, edx
	shr	ecx, 16					; 00000010H
	mov	BYTE PTR [eax-3], cl
	mov	ecx, edx
	shr	ecx, 8
	mov	BYTE PTR [eax-2], cl
	mov	BYTE PTR [eax-1], dl
	mov	ecx, DWORD PTR [edi+108]
	shr	ecx, 2
	cmp	esi, ecx
	jb	SHORT $LL15@SHA256_Fin
; Line 395
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 396
	ret	0
$LN18@SHA256_Fin:
; Line 392
	mov	ecx, DWORD PTR [edi]
	mov	eax, ecx
	mov	edx, DWORD PTR _md$[esp+8]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+1], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+2], al
	mov	BYTE PTR [edx+3], cl
	mov	ecx, DWORD PTR [edi+4]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+4], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+5], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+6], al
	mov	BYTE PTR [edx+7], cl
	mov	ecx, DWORD PTR [edi+8]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+8], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+9], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+10], al
	mov	BYTE PTR [edx+11], cl
	mov	ecx, DWORD PTR [edi+12]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+12], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+13], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+14], al
	mov	BYTE PTR [edx+15], cl
	mov	ecx, DWORD PTR [edi+16]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+16], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+17], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+18], al
	mov	BYTE PTR [edx+19], cl
	mov	ecx, DWORD PTR [edi+20]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+20], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+21], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+22], al
	mov	BYTE PTR [edx+23], cl
	mov	ecx, DWORD PTR [edi+24]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+24], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+25], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+26], al
	mov	BYTE PTR [edx+27], cl
	mov	ecx, DWORD PTR [edi+28]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+28], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+29], al
	mov	eax, ecx
	pop	edi
	shr	eax, 8
	mov	BYTE PTR [edx+30], al
; Line 395
	mov	eax, 1
	pop	esi
	mov	BYTE PTR [edx+31], cl
	pop	ebx
; Line 396
	ret	0
$LN17@SHA256_Fin:
; Line 392
	mov	ecx, DWORD PTR [edi]
	mov	eax, ecx
	mov	edx, DWORD PTR _md$[esp+8]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+1], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+2], al
	mov	BYTE PTR [edx+3], cl
	mov	ecx, DWORD PTR [edi+4]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+4], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+5], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+6], al
	mov	BYTE PTR [edx+7], cl
	mov	ecx, DWORD PTR [edi+8]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+8], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+9], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+10], al
	mov	BYTE PTR [edx+11], cl
	mov	ecx, DWORD PTR [edi+12]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+12], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+13], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+14], al
	mov	BYTE PTR [edx+15], cl
	mov	ecx, DWORD PTR [edi+16]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+16], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+17], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+18], al
	mov	BYTE PTR [edx+19], cl
	mov	ecx, DWORD PTR [edi+20]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+20], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+21], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+22], al
	mov	BYTE PTR [edx+23], cl
	mov	ecx, DWORD PTR [edi+24]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+24], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+25], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+26], al
	mov	BYTE PTR [edx+27], cl
$LN2@SHA256_Fin:
; Line 395
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 396
	ret	0
_SHA256_Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA256_Update
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data_$ = 12						; size = 4
_len$ = 16						; size = 4
_SHA256_Update PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 301
	push	ebp
; Line 302
	mov	ebp, DWORD PTR _data_$[esp]
	push	edi
; Line 307
	mov	edi, DWORD PTR _len$[esp+4]
	test	edi, edi
	je	$LN13@SHA256_Upd
; Line 310
	push	ebx
	mov	ebx, DWORD PTR _c$[esp+8]
	mov	eax, DWORD PTR [ebx+32]
	lea	ecx, DWORD PTR [eax+edi*8]
; Line 315
	cmp	ecx, eax
	jae	SHORT $LN3@SHA256_Upd
; Line 316
	inc	DWORD PTR [ebx+36]
$LN3@SHA256_Upd:
; Line 317
	mov	eax, edi
; Line 319
	mov	DWORD PTR [ebx+32], ecx
; Line 321
	mov	ecx, DWORD PTR [ebx+104]
	shr	eax, 29					; 0000001dH
	add	DWORD PTR [ebx+36], eax
	push	esi
; Line 322
	test	ecx, ecx
	je	SHORT $LN6@SHA256_Upd
; Line 323
	lea	edx, DWORD PTR [ebx+40]
; Line 325
	cmp	edi, 64					; 00000040H
	jae	SHORT $LN7@SHA256_Upd
	lea	eax, DWORD PTR [ecx+edi]
	cmp	eax, 64					; 00000040H
	jae	SHORT $LN7@SHA256_Upd
; Line 334
	push	edi
	lea	eax, DWORD PTR [edx+ecx]
	push	ebp
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 353
	mov	eax, 1
	add	DWORD PTR [ebx+104], edi
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 354
	ret	0
$LN7@SHA256_Upd:
; Line 326
	mov	esi, 64					; 00000040H
	lea	eax, DWORD PTR [edx+ecx]
	sub	esi, ecx
	push	esi
	push	ebp
	push	eax
	call	_memcpy
; Line 327
	push	1
	lea	eax, DWORD PTR [ebx+40]
	push	eax
	push	ebx
	call	_sha256_block_data_order
; Line 332
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+40]
	mov	DWORD PTR [ebx+104], 0
	push	0
	push	eax
	add	ebp, esi
	sub	edi, esi
	call	_memset
	add	esp, 36					; 00000024H
$LN6@SHA256_Upd:
; Line 340
	mov	esi, edi
	shr	esi, 6
; Line 341
	test	esi, esi
	je	SHORT $LN8@SHA256_Upd
; Line 342
	push	esi
	push	ebp
	push	ebx
	call	_sha256_block_data_order
; Line 343
	shl	esi, 6
	add	esp, 12					; 0000000cH
; Line 344
	add	ebp, esi
; Line 345
	sub	edi, esi
$LN8@SHA256_Upd:
; Line 348
	test	edi, edi
	je	SHORT $LN9@SHA256_Upd
; Line 351
	push	edi
	lea	eax, DWORD PTR [ebx+40]
	mov	DWORD PTR [ebx+104], edi
	push	ebp
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN9@SHA256_Upd:
	pop	esi
	pop	ebx
$LN13@SHA256_Upd:
	pop	edi
; Line 353
	mov	eax, 1
	pop	ebp
; Line 354
	ret	0
_SHA256_Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA256_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SHA256_Init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha256.c
; Line 35
	push	esi
; Line 36
	mov	esi, DWORD PTR _c$[esp]
	push	112					; 00000070H
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 37
	mov	DWORD PTR [esi], 1779033703		; 6a09e667H
; Line 38
	mov	DWORD PTR [esi+4], -1150833019		; bb67ae85H
; Line 46
	mov	eax, 1
	mov	DWORD PTR [esi+8], 1013904242		; 3c6ef372H
	mov	DWORD PTR [esi+12], -1521486534		; a54ff53aH
	mov	DWORD PTR [esi+16], 1359893119		; 510e527fH
	mov	DWORD PTR [esi+20], -1694144372		; 9b05688cH
	mov	DWORD PTR [esi+24], 528734635		; 1f83d9abH
	mov	DWORD PTR [esi+28], 1541459225		; 5be0cd19H
	mov	DWORD PTR [esi+108], 32			; 00000020H
	pop	esi
; Line 47
	ret	0
_SHA256_Init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA224
_TEXT	SEGMENT
_c$ = -116						; size = 112
__$ArrayPad$ = -4					; size = 4
_d$ = 8							; size = 4
_n$ = 12						; size = 4
_md$ = 16						; size = 4
_SHA224	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha256.c
; Line 50
	mov	eax, 116				; 00000074H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+116], eax
	mov	eax, DWORD PTR _md$[esp+112]
; Line 54
	test	eax, eax
	push	esi
	mov	esi, DWORD PTR _d$[esp+116]
	push	edi
	mov	edi, OFFSET ?m@?1??SHA224@@9@9
; Line 21
	push	112					; 00000070H
; Line 54
	cmovne	edi, eax
; Line 21
	lea	eax, DWORD PTR _c$[esp+128]
	push	0
	push	eax
	call	_memset
; Line 57
	push	DWORD PTR _n$[esp+132]
	lea	eax, DWORD PTR _c$[esp+140]
; Line 22
	mov	DWORD PTR _c$[esp+140], -1056596264	; c1059ed8H
; Line 57
	push	esi
	push	eax
; Line 23
	mov	DWORD PTR _c$[esp+152], 914150663	; 367cd507H
; Line 24
	mov	DWORD PTR _c$[esp+156], 812702999	; 3070dd17H
; Line 25
	mov	DWORD PTR _c$[esp+160], -150054599	; f70e5939H
; Line 26
	mov	DWORD PTR _c$[esp+164], -4191439	; ffc00b31H
; Line 27
	mov	DWORD PTR _c$[esp+168], 1750603025	; 68581511H
; Line 28
	mov	DWORD PTR _c$[esp+172], 1694076839	; 64f98fa7H
; Line 29
	mov	DWORD PTR _c$[esp+176], -1090891868	; befa4fa4H
; Line 30
	mov	DWORD PTR _c$[esp+256], 28		; 0000001cH
; Line 57
	call	_SHA256_Update
; Line 58
	lea	eax, DWORD PTR _c$[esp+148]
	push	eax
	push	edi
	call	_SHA256_Final
; Line 59
	lea	eax, DWORD PTR _c$[esp+156]
	push	112					; 00000070H
	push	eax
	call	_OPENSSL_cleanse
; Line 61
	mov	ecx, DWORD PTR __$ArrayPad$[esp+164]
	add	esp, 40					; 00000028H
	mov	eax, edi
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
_SHA224	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA224_Final
_TEXT	SEGMENT
_md$ = 8						; size = 4
_c$ = 12						; size = 4
_SHA224_Final PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha256.c
; Line 84
	jmp	_SHA256_Final
_SHA224_Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA224_Update
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_SHA224_Update PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha256.c
; Line 79
	jmp	_SHA256_Update
_SHA224_Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA224_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SHA224_Init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha256.c
; Line 20
	push	esi
; Line 21
	mov	esi, DWORD PTR _c$[esp]
	push	112					; 00000070H
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 22
	mov	DWORD PTR [esi], -1056596264		; c1059ed8H
; Line 23
	mov	DWORD PTR [esi+4], 914150663		; 367cd507H
; Line 31
	mov	eax, 1
	mov	DWORD PTR [esi+8], 812702999		; 3070dd17H
	mov	DWORD PTR [esi+12], -150054599		; f70e5939H
	mov	DWORD PTR [esi+16], -4191439		; ffc00b31H
	mov	DWORD PTR [esi+20], 1750603025		; 68581511H
	mov	DWORD PTR [esi+24], 1694076839		; 64f98fa7H
	mov	DWORD PTR [esi+28], -1090891868		; befa4fa4H
	mov	DWORD PTR [esi+108], 28			; 0000001cH
	pop	esi
; Line 32
	ret	0
_SHA224_Init ENDP
_TEXT	ENDS
END

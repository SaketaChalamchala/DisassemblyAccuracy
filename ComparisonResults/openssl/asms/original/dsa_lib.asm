; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DSA_version
_BSS	SEGMENT
_default_DSA_method DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_DSA_version DB	'DSA part of OpenSSL 1.0.2h  3 May 2016', 00H
CONST	ENDS
PUBLIC	_DSA_set_default_method
PUBLIC	_DSA_get_default_method
PUBLIC	_DSA_set_method
PUBLIC	_DSA_new
PUBLIC	_DSA_new_method
PUBLIC	_DSA_free
PUBLIC	_DSA_up_ref
PUBLIC	_DSA_size
PUBLIC	_DSA_get_ex_new_index
PUBLIC	_DSA_set_ex_data
PUBLIC	_DSA_get_ex_data
PUBLIC	_DSA_dup_DH
PUBLIC	??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@ ; `string'
EXTRN	_CRYPTO_get_ex_new_index:PROC
EXTRN	_CRYPTO_new_ex_data:PROC
EXTRN	_CRYPTO_free_ex_data:PROC
EXTRN	_CRYPTO_set_ex_data:PROC
EXTRN	_CRYPTO_get_ex_data:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_dup:PROC
EXTRN	_DH_new:PROC
EXTRN	_DH_free:PROC
EXTRN	_DSA_OpenSSL:PROC
EXTRN	_i2d_ASN1_INTEGER:PROC
EXTRN	_ASN1_object_size:PROC
EXTRN	_ENGINE_get_DSA:PROC
EXTRN	_ENGINE_init:PROC
EXTRN	_ENGINE_finish:PROC
EXTRN	_ENGINE_get_default_DSA:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@ DB '.\crypto\dsa\dsa_'
	DB	'lib.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_dup_DH
_TEXT	SEGMENT
_r$ = 8							; size = 4
_DSA_dup_DH PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 291
	push	esi
	push	edi
; Line 299
	mov	edi, DWORD PTR _r$[esp+4]
	test	edi, edi
	je	$LN14@DSA_dup_DH
; Line 301
	call	_DH_new
	mov	esi, eax
; Line 302
	test	esi, esi
	je	$LN14@DSA_dup_DH
; Line 304
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN5@DSA_dup_DH
; Line 305
	push	eax
	call	_BN_dup
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	je	SHORT $err$17
$LN5@DSA_dup_DH:
; Line 307
	mov	eax, DWORD PTR [edi+16]
	test	eax, eax
	je	SHORT $LN7@DSA_dup_DH
; Line 308
	push	eax
	call	_BN_num_bits
	mov	DWORD PTR [esi+16], eax
; Line 309
	push	DWORD PTR [edi+16]
	call	_BN_dup
	add	esp, 8
	mov	DWORD PTR [esi+36], eax
	test	eax, eax
	je	SHORT $err$17
$LN7@DSA_dup_DH:
; Line 312
	mov	eax, DWORD PTR [edi+20]
	test	eax, eax
	je	SHORT $LN9@DSA_dup_DH
; Line 313
	push	eax
	call	_BN_dup
	add	esp, 4
	mov	DWORD PTR [esi+12], eax
	test	eax, eax
	je	SHORT $err$17
$LN9@DSA_dup_DH:
; Line 315
	mov	eax, DWORD PTR [edi+24]
	test	eax, eax
	je	SHORT $LN11@DSA_dup_DH
; Line 316
	push	eax
	call	_BN_dup
	add	esp, 4
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	je	SHORT $err$17
$LN11@DSA_dup_DH:
; Line 318
	mov	eax, DWORD PTR [edi+28]
	test	eax, eax
	je	SHORT $LN13@DSA_dup_DH
; Line 319
	push	eax
	call	_BN_dup
	add	esp, 4
	mov	DWORD PTR [esi+24], eax
	test	eax, eax
	jne	SHORT $LN13@DSA_dup_DH
$err$17:
; Line 326
	push	esi
	call	_DH_free
	add	esp, 4
$LN14@DSA_dup_DH:
; Line 327
	pop	edi
	xor	eax, eax
	pop	esi
; Line 328
	ret	0
$LN13@DSA_dup_DH:
	pop	edi
; Line 322
	mov	eax, esi
	pop	esi
; Line 328
	ret	0
_DSA_dup_DH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_get_ex_data
_TEXT	SEGMENT
_d$ = 8							; size = 4
_idx$ = 12						; size = 4
_DSA_get_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 286
	add	DWORD PTR _d$[esp-4], 52		; 00000034H
	jmp	_CRYPTO_get_ex_data
_DSA_get_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_set_ex_data
_TEXT	SEGMENT
_d$ = 8							; size = 4
_idx$ = 12						; size = 4
_arg$ = 16						; size = 4
_DSA_set_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 281
	add	DWORD PTR _d$[esp-4], 52		; 00000034H
	jmp	_CRYPTO_set_ex_data
_DSA_set_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_get_ex_new_index
_TEXT	SEGMENT
_argl$ = 8						; size = 4
_argp$ = 12						; size = 4
_new_func$ = 16						; size = 4
_dup_func$ = 20						; size = 4
_free_func$ = 24					; size = 4
_DSA_get_ex_new_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 275
	push	DWORD PTR _free_func$[esp-4]
	push	DWORD PTR _dup_func$[esp]
	push	DWORD PTR _new_func$[esp+4]
	push	DWORD PTR _argp$[esp+8]
	push	DWORD PTR _argl$[esp+12]
	push	7
	call	_CRYPTO_get_ex_new_index
	add	esp, 24					; 00000018H
; Line 277
	ret	0
_DSA_get_ex_new_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_size
_TEXT	SEGMENT
_bs$ = -16						; size = 16
_buf$ = 8						; size = 4
_r$ = 8							; size = 4
_DSA_size PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 251
	mov	eax, 16					; 00000010H
	call	__chkstk
; Line 259
	mov	eax, DWORD PTR _r$[esp+12]
	push	DWORD PTR [eax+16]
	call	_BN_num_bits
; Line 260
	add	eax, 7
; Line 262
	mov	DWORD PTR _bs$[esp+24], 2
	cdq
	and	edx, 7
; Line 264
	mov	BYTE PTR _buf$[esp+16], 255		; 000000ffH
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _bs$[esp+20], eax
	lea	eax, DWORD PTR _buf$[esp+16]
	mov	DWORD PTR _bs$[esp+28], eax
; Line 266
	lea	eax, DWORD PTR _bs$[esp+20]
	push	0
	push	eax
	call	_i2d_ASN1_INTEGER
; Line 267
	add	eax, eax
; Line 268
	push	16					; 00000010H
	push	eax
	push	1
	call	_ASN1_object_size
; Line 270
	add	esp, 40					; 00000028H
	ret	0
_DSA_size ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_up_ref
_TEXT	SEGMENT
_r$ = 8							; size = 4
_DSA_up_ref PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 237
	mov	eax, DWORD PTR _r$[esp-4]
	push	237					; 000000edH
	push	OFFSET ??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@
	push	8
	add	eax, 48					; 00000030H
	push	1
	push	eax
	call	_CRYPTO_add_lock
; Line 247
	xor	ecx, ecx
	add	esp, 20					; 00000014H
	cmp	eax, 1
	setg	cl
	mov	eax, ecx
; Line 248
	ret	0
_DSA_up_ref ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_free
_TEXT	SEGMENT
_r$ = 8							; size = 4
_DSA_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 190
	push	esi
; Line 193
	mov	esi, DWORD PTR _r$[esp]
	test	esi, esi
	je	$LN1@DSA_free
; Line 196
	push	196					; 000000c4H
	push	OFFSET ??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@
	push	8
	lea	eax, DWORD PTR [esi+48]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 200
	test	eax, eax
	jg	$LN1@DSA_free
; Line 209
	mov	eax, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	je	SHORT $LN4@DSA_free
; Line 210
	push	esi
	call	eax
	add	esp, 4
$LN4@DSA_free:
; Line 212
	mov	eax, DWORD PTR [esi+64]
	test	eax, eax
	je	SHORT $LN5@DSA_free
; Line 213
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN5@DSA_free:
; Line 216
	lea	eax, DWORD PTR [esi+52]
	push	eax
	push	esi
	push	7
	call	_CRYPTO_free_ex_data
; Line 218
	mov	eax, DWORD PTR [esi+12]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN6@DSA_free
; Line 219
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN6@DSA_free:
; Line 220
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN7@DSA_free
; Line 221
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN7@DSA_free:
; Line 222
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN8@DSA_free
; Line 223
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN8@DSA_free:
; Line 224
	mov	eax, DWORD PTR [esi+24]
	test	eax, eax
	je	SHORT $LN9@DSA_free
; Line 225
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN9@DSA_free:
; Line 226
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	SHORT $LN10@DSA_free
; Line 227
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN10@DSA_free:
; Line 228
	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN11@DSA_free
; Line 229
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN11@DSA_free:
; Line 230
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN12@DSA_free
; Line 231
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN12@DSA_free:
; Line 232
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@DSA_free:
	pop	esi
; Line 233
	ret	0
_DSA_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_new_method
_TEXT	SEGMENT
_engine$ = 8						; size = 4
_DSA_new_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 129
	push	esi
; Line 132
	push	132					; 00000084H
	push	OFFSET ??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@
	push	68					; 00000044H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 133
	test	esi, esi
	jne	SHORT $LN2@DSA_new_me
; Line 134
	push	134					; 00000086H
	push	OFFSET ??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@
	push	65					; 00000041H
	push	103					; 00000067H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 135
	xor	eax, eax
	pop	esi
; Line 187
	ret	0
$LN2@DSA_new_me:
; Line 88
	mov	eax, DWORD PTR _default_DSA_method
	test	eax, eax
	jne	SHORT $LN12@DSA_new_me
; Line 95
	call	_DSA_OpenSSL
	mov	DWORD PTR _default_DSA_method, eax
$LN12@DSA_new_me:
	push	edi
; Line 139
	mov	edi, DWORD PTR _engine$[esp+4]
	mov	DWORD PTR [esi+60], eax
	test	edi, edi
	je	SHORT $LN3@DSA_new_me
; Line 140
	push	edi
	call	_ENGINE_init
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@DSA_new_me
; Line 141
	push	141					; 0000008dH
	push	OFFSET ??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@
	push	38					; 00000026H
	push	103					; 00000067H
	push	10					; 0000000aH
	call	_ERR_put_error
; Line 142
	push	esi
	call	_CRYPTO_free
	add	esp, 24					; 00000018H
; Line 143
	xor	eax, eax
	pop	edi
	pop	esi
; Line 187
	ret	0
$LN5@DSA_new_me:
; Line 145
	mov	DWORD PTR [esi+64], edi
; Line 146
	jmp	SHORT $LN4@DSA_new_me
$LN3@DSA_new_me:
; Line 147
	call	_ENGINE_get_default_DSA
	mov	DWORD PTR [esi+64], eax
$LN4@DSA_new_me:
; Line 148
	mov	eax, DWORD PTR [esi+64]
	test	eax, eax
	je	SHORT $LN7@DSA_new_me
; Line 149
	push	eax
	call	_ENGINE_get_DSA
	add	esp, 4
	mov	DWORD PTR [esi+60], eax
; Line 150
	test	eax, eax
	jne	SHORT $LN7@DSA_new_me
; Line 151
	push	151					; 00000097H
	push	OFFSET ??_C@_0BH@HAONLAHF@?4?2crypto?2dsa?2dsa_lib?4c?$AA@
	push	38					; 00000026H
	push	103					; 00000067H
	push	10					; 0000000aH
	call	_ERR_put_error
; Line 152
	push	DWORD PTR [esi+64]
	call	_ENGINE_finish
; Line 153
	push	esi
	call	_CRYPTO_free
	add	esp, 28					; 0000001cH
; Line 154
	xor	eax, eax
	pop	edi
	pop	esi
; Line 187
	ret	0
$LN7@DSA_new_me:
; Line 174
	mov	eax, DWORD PTR [esi+60]
; Line 175
	lea	edi, DWORD PTR [esi+52]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 1
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi+24], 0
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [esi+32], 0
	mov	DWORD PTR [esi+36], 0
	mov	DWORD PTR [esi+44], 0
	mov	DWORD PTR [esi+48], 1
	mov	eax, DWORD PTR [eax+32]
	push	edi
	and	eax, -1025				; fffffbffH
	push	esi
	push	7
	mov	DWORD PTR [esi+40], eax
	call	_CRYPTO_new_ex_data
; Line 176
	mov	eax, DWORD PTR [esi+60]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	je	SHORT $LN8@DSA_new_me
	push	esi
	call	eax
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN8@DSA_new_me
; Line 178
	mov	eax, DWORD PTR [esi+64]
	test	eax, eax
	je	SHORT $LN9@DSA_new_me
; Line 179
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN9@DSA_new_me:
; Line 181
	push	edi
	push	esi
	push	7
	call	_CRYPTO_free_ex_data
; Line 182
	push	esi
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 183
	xor	esi, esi
$LN8@DSA_new_me:
; Line 186
	pop	edi
	mov	eax, esi
	pop	esi
; Line 187
	ret	0
_DSA_new_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_new
_TEXT	SEGMENT
_DSA_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 103
	push	0
	call	_DSA_new_method
	add	esp, 4
; Line 104
	ret	0
_DSA_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_set_method
_TEXT	SEGMENT
_dsa$ = 8						; size = 4
_meth$ = 12						; size = 4
_DSA_set_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 107
	push	esi
; Line 113
	mov	esi, DWORD PTR _dsa$[esp]
	mov	eax, DWORD PTR [esi+60]
; Line 114
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	je	SHORT $LN2@DSA_set_me
; Line 115
	push	esi
	call	eax
	add	esp, 4
$LN2@DSA_set_me:
; Line 117
	mov	eax, DWORD PTR [esi+64]
	test	eax, eax
	je	SHORT $LN3@DSA_set_me
; Line 118
	push	eax
	call	_ENGINE_finish
	add	esp, 4
; Line 119
	mov	DWORD PTR [esi+64], 0
$LN3@DSA_set_me:
; Line 122
	mov	eax, DWORD PTR _meth$[esp]
	mov	DWORD PTR [esi+60], eax
; Line 123
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	je	SHORT $LN6@DSA_set_me
; Line 124
	push	esi
	call	eax
	add	esp, 4
$LN6@DSA_set_me:
; Line 125
	mov	eax, 1
	pop	esi
; Line 126
	ret	0
_DSA_set_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_get_default_method
_TEXT	SEGMENT
_DSA_get_default_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 88
	mov	eax, DWORD PTR _default_DSA_method
	test	eax, eax
	jne	SHORT $LN2@DSA_get_de
; Line 95
	call	_DSA_OpenSSL
	mov	DWORD PTR _default_DSA_method, eax
$LN2@DSA_get_de:
; Line 99
	ret	0
_DSA_get_default_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_set_default_method
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_DSA_set_default_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_lib.c
; Line 83
	mov	eax, DWORD PTR _meth$[esp-4]
	mov	DWORD PTR _default_DSA_method, eax
; Line 84
	ret	0
_DSA_set_default_method ENDP
_TEXT	ENDS
END

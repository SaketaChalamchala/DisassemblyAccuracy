; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EC_KEY_new
PUBLIC	_EC_KEY_get_flags
PUBLIC	_EC_KEY_set_flags
PUBLIC	_EC_KEY_clear_flags
PUBLIC	_EC_KEY_new_by_curve_name
PUBLIC	_EC_KEY_free
PUBLIC	_EC_KEY_copy
PUBLIC	_EC_KEY_dup
PUBLIC	_EC_KEY_up_ref
PUBLIC	_EC_KEY_get0_group
PUBLIC	_EC_KEY_set_group
PUBLIC	_EC_KEY_get0_private_key
PUBLIC	_EC_KEY_set_private_key
PUBLIC	_EC_KEY_get0_public_key
PUBLIC	_EC_KEY_set_public_key
PUBLIC	_EC_KEY_get_enc_flags
PUBLIC	_EC_KEY_set_enc_flags
PUBLIC	_EC_KEY_get_conv_form
PUBLIC	_EC_KEY_set_conv_form
PUBLIC	_EC_KEY_get_key_method_data
PUBLIC	_EC_KEY_insert_key_method_data
PUBLIC	_EC_KEY_set_asn1_flag
PUBLIC	_EC_KEY_precompute_mult
PUBLIC	_EC_KEY_generate_key
PUBLIC	_EC_KEY_check_key
PUBLIC	_EC_KEY_set_public_key_affine_coordinates
PUBLIC	??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@ ; `string'
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_rand_range:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_copy:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_dup:PROC
EXTRN	_EC_GROUP_new:PROC
EXTRN	_EC_GROUP_free:PROC
EXTRN	_EC_GROUP_copy:PROC
EXTRN	_EC_GROUP_dup:PROC
EXTRN	_EC_GROUP_method_of:PROC
EXTRN	_EC_METHOD_get_field_type:PROC
EXTRN	_EC_GROUP_get_order:PROC
EXTRN	_EC_GROUP_set_asn1_flag:PROC
EXTRN	_EC_GROUP_set_point_conversion_form:PROC
EXTRN	_EC_GROUP_new_by_curve_name:PROC
EXTRN	_EC_POINT_new:PROC
EXTRN	_EC_POINT_free:PROC
EXTRN	_EC_POINT_copy:PROC
EXTRN	_EC_POINT_dup:PROC
EXTRN	_EC_POINT_set_affine_coordinates_GFp:PROC
EXTRN	_EC_POINT_get_affine_coordinates_GFp:PROC
EXTRN	_EC_POINT_set_affine_coordinates_GF2m:PROC
EXTRN	_EC_POINT_get_affine_coordinates_GF2m:PROC
EXTRN	_EC_POINT_is_at_infinity:PROC
EXTRN	_EC_POINT_is_on_curve:PROC
EXTRN	_EC_POINT_cmp:PROC
EXTRN	_EC_POINT_mul:PROC
EXTRN	_EC_GROUP_precompute_mult:PROC
EXTRN	_EC_EX_DATA_set_data:PROC
EXTRN	_EC_EX_DATA_get_data:PROC
EXTRN	_EC_EX_DATA_free_all_data:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
CONST	SEGMENT
??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@ DB '.\crypto\ec\ec_key.'
	DB	'c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_set_public_key_affine_coordinates
_TEXT	SEGMENT
_ty$1$ = -8						; size = 4
_ok$1$ = -4						; size = 4
_tx$1$ = 8						; size = 4
_key$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_EC_KEY_set_public_key_affine_coordinates PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 365
	mov	eax, 8
	call	__chkstk
	push	ebp
	push	esi
; Line 374
	mov	esi, DWORD PTR _key$[esp+12]
	mov	DWORD PTR _ok$1$[esp+16], 0
	test	esi, esi
	je	$LN3@EC_KEY_set
	cmp	DWORD PTR [esi+4], 0
	je	$LN3@EC_KEY_set
	mov	ebp, DWORD PTR _x$[esp+12]
	test	ebp, ebp
	je	$LN3@EC_KEY_set
	cmp	DWORD PTR _y$[esp+12], 0
	je	$LN3@EC_KEY_set
; Line 379
	push	ebx
	call	_BN_CTX_new
	mov	ebx, eax
; Line 380
	test	ebx, ebx
	je	$LN19@EC_KEY_set
; Line 383
	push	edi
	push	DWORD PTR [esi+4]
	call	_EC_POINT_new
	mov	edi, eax
	add	esp, 4
; Line 385
	test	edi, edi
	je	$err$26
; Line 388
	push	ebx
	call	_BN_CTX_get
; Line 389
	push	ebx
	mov	DWORD PTR _tx$1$[esp+28], eax
	call	_BN_CTX_get
	add	esp, 8
	mov	DWORD PTR _ty$1$[esp+24], eax
; Line 390
	test	eax, eax
	je	$err$26
; Line 394
	push	DWORD PTR [esi+4]
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	add	esp, 8
; Line 396
	cmp	eax, 407				; 00000197H
; Line 400
	mov	eax, DWORD PTR _y$[esp+20]
	push	ebx
	push	eax
	push	ebp
	push	edi
	push	DWORD PTR [esi+4]
	jne	SHORT $LN8@EC_KEY_set
	call	_EC_POINT_set_affine_coordinates_GF2m
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$26
; Line 403
	push	ebx
	push	DWORD PTR _ty$1$[esp+28]
	push	DWORD PTR _tx$1$[esp+28]
	push	edi
	push	DWORD PTR [esi+4]
	call	_EC_POINT_get_affine_coordinates_GF2m
; Line 406
	jmp	SHORT $LN24@EC_KEY_set
$LN8@EC_KEY_set:
; Line 409
	call	_EC_POINT_set_affine_coordinates_GFp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$26
; Line 412
	push	ebx
	push	DWORD PTR _ty$1$[esp+28]
	push	DWORD PTR _tx$1$[esp+28]
	push	edi
	push	DWORD PTR [esi+4]
	call	_EC_POINT_get_affine_coordinates_GFp
$LN24@EC_KEY_set:
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$26
; Line 420
	push	DWORD PTR _tx$1$[esp+20]
	push	ebp
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@EC_KEY_set
	push	DWORD PTR _ty$1$[esp+24]
	push	DWORD PTR _y$[esp+24]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@EC_KEY_set
; Line 426
	push	edi
	push	esi
	call	_EC_KEY_set_public_key
	add	esp, 8
	test	eax, eax
	je	SHORT $err$26
; Line 429
	push	esi
	call	_EC_KEY_check_key
	add	esp, 4
	test	eax, eax
	je	SHORT $err$26
; Line 432
	mov	DWORD PTR _ok$1$[esp+24], 1
	jmp	SHORT $err$26
$LN15@EC_KEY_set:
; Line 421
	push	422					; 000001a6H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	146					; 00000092H
	push	229					; 000000e5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$26:
; Line 436
	push	ebx
	call	_BN_CTX_free
	add	esp, 4
; Line 437
	test	edi, edi
	je	SHORT $LN22@EC_KEY_set
; Line 438
	push	edi
	call	_EC_POINT_free
	add	esp, 4
$LN22@EC_KEY_set:
	pop	edi
$LN19@EC_KEY_set:
; Line 439
	mov	eax, DWORD PTR _ok$1$[esp+20]
	pop	ebx
	pop	esi
	pop	ebp
; Line 441
	add	esp, 8
	ret	0
$LN3@EC_KEY_set:
; Line 375
	push	376					; 00000178H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	67					; 00000043H
	push	229					; 000000e5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 377
	xor	eax, eax
	pop	esi
	pop	ebp
; Line 441
	add	esp, 8
	ret	0
_EC_KEY_set_public_key_affine_coordinates ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_check_key
_TEXT	SEGMENT
tv274 = 8						; size = 4
_eckey$ = 8						; size = 4
_EC_KEY_check_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 295
	push	ebp
	push	esi
; Line 301
	mov	esi, DWORD PTR _eckey$[esp+4]
	xor	ebp, ebp
	test	esi, esi
	je	$LN3@EC_KEY_che
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	$LN3@EC_KEY_che
	mov	ecx, DWORD PTR [esi+8]
	test	ecx, ecx
	je	$LN3@EC_KEY_che
; Line 306
	push	ecx
	push	eax
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@EC_KEY_che
; Line 307
	push	307					; 00000133H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	106					; 0000006aH
	push	177					; 000000b1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 360
	mov	eax, ebp
	pop	esi
	pop	ebp
; Line 361
	ret	0
$LN4@EC_KEY_che:
	push	ebx
; Line 311
	call	_BN_CTX_new
	mov	ebx, eax
	test	ebx, ebx
	je	$LN18@EC_KEY_che
; Line 313
	push	edi
	push	DWORD PTR [esi+4]
	call	_EC_POINT_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	$err$24
; Line 317
	push	ebx
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+4]
	call	_EC_POINT_is_on_curve
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LN7@EC_KEY_che
; Line 318
	push	318					; 0000013eH
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	107					; 0000006bH
	push	177					; 000000b1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 319
	jmp	$err$24
$LN7@EC_KEY_che:
; Line 322
	mov	ecx, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR tv274[esp+12], ecx
; Line 323
	cmp	DWORD PTR [eax+4], ebp
	jne	SHORT $LN8@EC_KEY_che
; Line 324
	push	324					; 00000144H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	122					; 0000007aH
	push	177					; 000000b1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 325
	jmp	$err$24
$LN8@EC_KEY_che:
; Line 327
	push	ebx
	push	eax
	push	DWORD PTR [esi+8]
	push	0
	push	edi
	push	ecx
	call	_EC_POINT_mul
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN9@EC_KEY_che
; Line 328
	push	328					; 00000148H
$LN20@EC_KEY_che:
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	16					; 00000010H
	push	177					; 000000b1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 329
	jmp	$err$24
$LN9@EC_KEY_che:
; Line 331
	push	edi
	push	DWORD PTR [esi+4]
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@EC_KEY_che
; Line 332
	push	332					; 0000014cH
$LN22@EC_KEY_che:
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	130					; 00000082H
	push	177					; 000000b1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 333
	jmp	SHORT $err$24
$LN10@EC_KEY_che:
; Line 339
	mov	ecx, DWORD PTR [esi+12]
	test	ecx, ecx
	je	SHORT $LN14@EC_KEY_che
; Line 340
	mov	eax, DWORD PTR tv274[esp+12]
	add	eax, 8
	push	eax
	push	ecx
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN12@EC_KEY_che
; Line 341
	push	341					; 00000155H
; Line 342
	jmp	SHORT $LN22@EC_KEY_che
$LN12@EC_KEY_che:
; Line 344
	push	ebx
	push	0
	push	0
	push	DWORD PTR [esi+12]
	push	edi
	push	DWORD PTR [esi+4]
	call	_EC_POINT_mul
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN13@EC_KEY_che
; Line 346
	push	346					; 0000015aH
; Line 347
	jmp	$LN20@EC_KEY_che
$LN13@EC_KEY_che:
; Line 349
	push	ebx
	push	DWORD PTR [esi+8]
	push	edi
	push	DWORD PTR [esi+4]
	call	_EC_POINT_cmp
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN14@EC_KEY_che
; Line 350
	push	350					; 0000015eH
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	123					; 0000007bH
	push	177					; 000000b1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	SHORT $err$24
$LN14@EC_KEY_che:
; Line 354
	mov	ebp, 1
$err$24:
; Line 357
	push	ebx
	call	_BN_CTX_free
	add	esp, 4
; Line 358
	test	edi, edi
	je	SHORT $LN19@EC_KEY_che
; Line 359
	push	edi
	call	_EC_POINT_free
	add	esp, 4
$LN19@EC_KEY_che:
	pop	edi
$LN18@EC_KEY_che:
	pop	ebx
	pop	esi
; Line 360
	mov	eax, ebp
	pop	ebp
; Line 361
	ret	0
$LN3@EC_KEY_che:
; Line 302
	push	302					; 0000012eH
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	67					; 00000043H
	push	177					; 000000b1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 303
	xor	eax, eax
	pop	esi
	pop	ebp
; Line 361
	ret	0
_EC_KEY_check_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_generate_key
_TEXT	SEGMENT
_ok$1$ = -4						; size = 4
_ctx$1$ = 8						; size = 4
_eckey$ = 8						; size = 4
_EC_KEY_generate_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 231
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 242
	mov	edi, DWORD PTR _eckey$[esp+12]
	xor	esi, esi
	xor	ebx, ebx
	mov	DWORD PTR _ok$1$[esp+16], 0
	test	edi, edi
	je	$LN6@EC_KEY_gen
	cmp	DWORD PTR [edi+4], ebx
	je	$LN6@EC_KEY_gen
; Line 247
	push	ebp
	call	_BN_new
	mov	ebp, eax
	test	ebp, ebp
	je	$LN21@EC_KEY_gen
; Line 249
	call	_BN_CTX_new
	mov	DWORD PTR _ctx$1$[esp+16], eax
	test	eax, eax
	je	SHORT $err$29
; Line 252
	mov	esi, DWORD PTR [edi+12]
	test	esi, esi
	jne	SHORT $LN9@EC_KEY_gen
; Line 253
	call	_BN_new
	mov	esi, eax
; Line 254
	test	esi, esi
	je	SHORT $err$29
; Line 256
	mov	eax, DWORD PTR _ctx$1$[esp+16]
$LN9@EC_KEY_gen:
; Line 259
	push	eax
	push	ebp
	push	DWORD PTR [edi+4]
	call	_EC_GROUP_get_order
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$29
$LL4@EC_KEY_gen:
; Line 263
	push	ebp
	push	esi
	call	_BN_rand_range
	add	esp, 8
	test	eax, eax
	je	SHORT $err$29
; Line 265
	cmp	DWORD PTR [esi+4], ebx
	je	SHORT $LL4@EC_KEY_gen
; Line 267
	mov	ebx, DWORD PTR [edi+8]
	test	ebx, ebx
	jne	SHORT $LN14@EC_KEY_gen
; Line 268
	push	DWORD PTR [edi+4]
	call	_EC_POINT_new
	mov	ebx, eax
	add	esp, 4
; Line 269
	test	ebx, ebx
	je	SHORT $err$29
$LN14@EC_KEY_gen:
; Line 274
	push	DWORD PTR _ctx$1$[esp+16]
	push	0
	push	0
	push	esi
	push	ebx
	push	DWORD PTR [edi+4]
	call	_EC_POINT_mul
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $err$29
; Line 277
	mov	DWORD PTR [edi+12], esi
; Line 278
	mov	DWORD PTR [edi+8], ebx
; Line 280
	mov	DWORD PTR _ok$1$[esp+20], 1
$err$29:
; Line 284
	push	ebp
	call	_BN_free
	add	esp, 4
; Line 285
	test	ebx, ebx
	je	SHORT $LN19@EC_KEY_gen
	cmp	DWORD PTR [edi+8], 0
	jne	SHORT $LN19@EC_KEY_gen
; Line 286
	push	ebx
	call	_EC_POINT_free
	add	esp, 4
$LN19@EC_KEY_gen:
; Line 287
	test	esi, esi
	je	SHORT $LN20@EC_KEY_gen
	cmp	DWORD PTR [edi+12], 0
	jne	SHORT $LN20@EC_KEY_gen
; Line 288
	push	esi
	call	_BN_free
	add	esp, 4
$LN20@EC_KEY_gen:
; Line 289
	mov	eax, DWORD PTR _ctx$1$[esp+16]
	test	eax, eax
	je	SHORT $LN21@EC_KEY_gen
; Line 290
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN21@EC_KEY_gen:
; Line 291
	mov	eax, DWORD PTR _ok$1$[esp+20]
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 292
	pop	ecx
	ret	0
$LN6@EC_KEY_gen:
; Line 243
	push	243					; 000000f3H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	67					; 00000043H
	push	179					; 000000b3H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 244
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 292
	pop	ecx
	ret	0
_EC_KEY_generate_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_precompute_mult
_TEXT	SEGMENT
_key$ = 8						; size = 4
_ctx$ = 12						; size = 4
_EC_KEY_precompute_mult PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 547
	mov	eax, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	jne	SHORT $LN2@EC_KEY_pre
; Line 550
	ret	0
$LN2@EC_KEY_pre:
; Line 549
	mov	DWORD PTR _key$[esp-4], eax
	jmp	_EC_GROUP_precompute_mult
_EC_KEY_precompute_mult ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_set_asn1_flag
_TEXT	SEGMENT
_key$ = 8						; size = 4
_flag$ = 12						; size = 4
_EC_KEY_set_asn1_flag PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 541
	mov	eax, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN2@EC_KEY_set
; Line 542
	mov	DWORD PTR _key$[esp-4], eax
	jmp	_EC_GROUP_set_asn1_flag
$LN2@EC_KEY_set:
; Line 543
	ret	0
_EC_KEY_set_asn1_flag ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_insert_key_method_data
_TEXT	SEGMENT
_key$ = 8						; size = 4
_data$ = 12						; size = 4
_dup_func$ = 16						; size = 4
_free_func$ = 20					; size = 4
_clear_free_func$ = 24					; size = 4
_EC_KEY_insert_key_method_data PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 524
	push	esi
	push	edi
; Line 527
	push	527					; 0000020fH
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	33					; 00000021H
	push	9
	call	_CRYPTO_lock
; Line 528
	push	DWORD PTR _clear_free_func$[esp+20]
	mov	edi, DWORD PTR _key$[esp+24]
	push	DWORD PTR _free_func$[esp+24]
	add	edi, 32					; 00000020H
	push	DWORD PTR _dup_func$[esp+28]
	push	DWORD PTR [edi]
	call	_EC_EX_DATA_get_data
	mov	esi, eax
	add	esp, 32					; 00000020H
; Line 531
	test	esi, esi
	jne	SHORT $LN2@EC_KEY_ins
; Line 532
	push	DWORD PTR _clear_free_func$[esp+4]
	push	DWORD PTR _free_func$[esp+8]
	push	DWORD PTR _dup_func$[esp+12]
	push	DWORD PTR _data$[esp+16]
	push	edi
	call	_EC_EX_DATA_set_data
	add	esp, 20					; 00000014H
$LN2@EC_KEY_ins:
; Line 534
	push	534					; 00000216H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	33					; 00000021H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 536
	mov	eax, esi
	pop	edi
	pop	esi
; Line 537
	ret	0
_EC_KEY_insert_key_method_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_get_key_method_data
_TEXT	SEGMENT
_key$ = 8						; size = 4
_dup_func$ = 12						; size = 4
_free_func$ = 16					; size = 4
_clear_free_func$ = 20					; size = 4
_EC_KEY_get_key_method_data PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 508
	push	esi
; Line 511
	push	511					; 000001ffH
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	33					; 00000021H
	push	5
	call	_CRYPTO_lock
; Line 512
	push	DWORD PTR _clear_free_func$[esp+16]
	mov	eax, DWORD PTR _key$[esp+20]
	push	DWORD PTR _free_func$[esp+20]
	push	DWORD PTR _dup_func$[esp+24]
	push	DWORD PTR [eax+32]
	call	_EC_EX_DATA_get_data
; Line 515
	push	515					; 00000203H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	33					; 00000021H
	push	6
	mov	esi, eax
	call	_CRYPTO_lock
	add	esp, 48					; 00000030H
; Line 517
	mov	eax, esi
	pop	esi
; Line 518
	ret	0
_EC_KEY_get_key_method_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_set_conv_form
_TEXT	SEGMENT
_key$ = 8						; size = 4
_cform$ = 12						; size = 4
_EC_KEY_set_conv_form PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 499
	mov	eax, DWORD PTR _key$[esp-4]
	mov	ecx, DWORD PTR _cform$[esp-4]
	mov	DWORD PTR [eax+20], ecx
; Line 500
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN2@EC_KEY_set
; Line 501
	mov	DWORD PTR _cform$[esp-4], ecx
	mov	DWORD PTR _key$[esp-4], eax
	jmp	_EC_GROUP_set_point_conversion_form
$LN2@EC_KEY_set:
; Line 502
	ret	0
_EC_KEY_set_conv_form ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_get_conv_form
_TEXT	SEGMENT
_key$ = 8						; size = 4
_EC_KEY_get_conv_form PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 494
	mov	eax, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR [eax+20]
; Line 495
	ret	0
_EC_KEY_get_conv_form ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_set_enc_flags
_TEXT	SEGMENT
_key$ = 8						; size = 4
_flags$ = 12						; size = 4
_EC_KEY_set_enc_flags PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 489
	mov	eax, DWORD PTR _key$[esp-4]
	mov	ecx, DWORD PTR _flags$[esp-4]
	mov	DWORD PTR [eax+16], ecx
; Line 490
	ret	0
_EC_KEY_set_enc_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_get_enc_flags
_TEXT	SEGMENT
_key$ = 8						; size = 4
_EC_KEY_get_enc_flags PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 484
	mov	eax, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR [eax+16]
; Line 485
	ret	0
_EC_KEY_get_enc_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_set_public_key
_TEXT	SEGMENT
_key$ = 8						; size = 4
_pub_key$ = 12						; size = 4
_EC_KEY_set_public_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 475
	push	esi
; Line 476
	mov	esi, DWORD PTR _key$[esp]
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN2@EC_KEY_set
; Line 477
	push	eax
	call	_EC_POINT_free
	add	esp, 4
$LN2@EC_KEY_set:
; Line 478
	push	DWORD PTR [esi+4]
	push	DWORD PTR _pub_key$[esp+4]
	call	_EC_POINT_dup
; Line 479
	xor	ecx, ecx
	mov	DWORD PTR [esi+8], eax
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	eax, ecx
	pop	esi
; Line 480
	ret	0
_EC_KEY_set_public_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_get0_public_key
_TEXT	SEGMENT
_key$ = 8						; size = 4
_EC_KEY_get0_public_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 471
	mov	eax, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR [eax+8]
; Line 472
	ret	0
_EC_KEY_get0_public_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_set_private_key
_TEXT	SEGMENT
_key$ = 8						; size = 4
_priv_key$ = 12						; size = 4
_EC_KEY_set_private_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 462
	push	esi
; Line 463
	mov	esi, DWORD PTR _key$[esp]
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN2@EC_KEY_set
; Line 464
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN2@EC_KEY_set:
; Line 465
	push	DWORD PTR _priv_key$[esp]
	call	_BN_dup
; Line 466
	xor	ecx, ecx
	mov	DWORD PTR [esi+12], eax
	add	esp, 4
	test	eax, eax
	setne	cl
	mov	eax, ecx
	pop	esi
; Line 467
	ret	0
_EC_KEY_set_private_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_get0_private_key
_TEXT	SEGMENT
_key$ = 8						; size = 4
_EC_KEY_get0_private_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 458
	mov	eax, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR [eax+12]
; Line 459
	ret	0
_EC_KEY_get0_private_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_set_group
_TEXT	SEGMENT
_key$ = 8						; size = 4
_group$ = 12						; size = 4
_EC_KEY_set_group PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 449
	push	esi
; Line 450
	mov	esi, DWORD PTR _key$[esp]
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN2@EC_KEY_set
; Line 451
	push	eax
	call	_EC_GROUP_free
	add	esp, 4
$LN2@EC_KEY_set:
; Line 452
	push	DWORD PTR _group$[esp]
	call	_EC_GROUP_dup
; Line 453
	xor	ecx, ecx
	mov	DWORD PTR [esi+4], eax
	add	esp, 4
	test	eax, eax
	setne	cl
	mov	eax, ecx
	pop	esi
; Line 454
	ret	0
_EC_KEY_set_group ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_get0_group
_TEXT	SEGMENT
_key$ = 8						; size = 4
_EC_KEY_get0_group PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 445
	mov	eax, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR [eax+4]
; Line 446
	ret	0
_EC_KEY_get0_group ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_up_ref
_TEXT	SEGMENT
_r$ = 8							; size = 4
_EC_KEY_up_ref PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 217
	mov	eax, DWORD PTR _r$[esp-4]
	push	217					; 000000d9H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	33					; 00000021H
	add	eax, 24					; 00000018H
	push	1
	push	eax
	call	_CRYPTO_add_lock
; Line 227
	xor	ecx, ecx
	add	esp, 20					; 00000014H
	cmp	eax, 1
	setg	cl
	mov	eax, ecx
; Line 228
	ret	0
_EC_KEY_up_ref ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_dup
_TEXT	SEGMENT
_ec_key$ = 8						; size = 4
_EC_KEY_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 204
	push	esi
; Line 205
	call	_EC_KEY_new
	mov	esi, eax
; Line 206
	test	esi, esi
	je	SHORT $LN5@EC_KEY_dup
; Line 208
	push	DWORD PTR _ec_key$[esp]
	push	esi
	call	_EC_KEY_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@EC_KEY_dup
; Line 209
	push	esi
	call	_EC_KEY_free
	add	esp, 4
$LN5@EC_KEY_dup:
; Line 210
	xor	eax, eax
	pop	esi
; Line 213
	ret	0
$LN3@EC_KEY_dup:
; Line 212
	mov	eax, esi
	pop	esi
; Line 213
	ret	0
_EC_KEY_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_copy
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_EC_KEY_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 141
	push	ebx
; Line 144
	mov	ebx, DWORD PTR _dest$[esp]
	push	edi
	test	ebx, ebx
	je	$LN6@EC_KEY_cop
	mov	edi, DWORD PTR _src$[esp+4]
	test	edi, edi
	je	$LN6@EC_KEY_cop
; Line 149
	mov	eax, DWORD PTR [edi+4]
	push	esi
	test	eax, eax
	je	SHORT $LN10@EC_KEY_cop
; Line 150
	push	eax
	call	_EC_GROUP_method_of
	mov	esi, eax
	add	esp, 4
; Line 152
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN8@EC_KEY_cop
; Line 153
	push	eax
	call	_EC_GROUP_free
	add	esp, 4
$LN8@EC_KEY_cop:
; Line 154
	push	esi
	call	_EC_GROUP_new
	add	esp, 4
	mov	DWORD PTR [ebx+4], eax
; Line 155
	test	eax, eax
	je	SHORT $LN30@EC_KEY_cop
; Line 157
	push	DWORD PTR [edi+4]
	push	eax
	call	_EC_GROUP_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN30@EC_KEY_cop
$LN10@EC_KEY_cop:
; Line 161
	cmp	DWORD PTR [edi+8], 0
	je	SHORT $LN14@EC_KEY_cop
	cmp	DWORD PTR [edi+4], 0
	je	SHORT $LN14@EC_KEY_cop
; Line 162
	mov	eax, DWORD PTR [ebx+8]
	test	eax, eax
	je	SHORT $LN12@EC_KEY_cop
; Line 163
	push	eax
	call	_EC_POINT_free
	add	esp, 4
$LN12@EC_KEY_cop:
; Line 164
	push	DWORD PTR [edi+4]
	call	_EC_POINT_new
	add	esp, 4
	mov	DWORD PTR [ebx+8], eax
; Line 165
	test	eax, eax
	je	SHORT $LN30@EC_KEY_cop
; Line 167
	push	DWORD PTR [edi+8]
	push	eax
	call	_EC_POINT_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN30@EC_KEY_cop
$LN14@EC_KEY_cop:
; Line 171
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN18@EC_KEY_cop
; Line 172
	cmp	DWORD PTR [ebx+12], 0
	jne	SHORT $LN17@EC_KEY_cop
; Line 173
	call	_BN_new
	mov	DWORD PTR [ebx+12], eax
; Line 174
	test	eax, eax
	je	SHORT $LN30@EC_KEY_cop
$LN17@EC_KEY_cop:
; Line 177
	push	DWORD PTR [edi+12]
	push	DWORD PTR [ebx+12]
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@EC_KEY_cop
$LN30@EC_KEY_cop:
	pop	esi
	pop	edi
; Line 178
	xor	eax, eax
	pop	ebx
; Line 201
	ret	0
$LN18@EC_KEY_cop:
	push	ebp
; Line 181
	lea	ebp, DWORD PTR [ebx+32]
	push	ebp
	call	_EC_EX_DATA_free_all_data
; Line 183
	mov	esi, DWORD PTR [edi+32]
	add	esp, 4
	test	esi, esi
	je	SHORT $LN3@EC_KEY_cop
	npad	1
$LL4@EC_KEY_cop:
; Line 184
	push	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+8]
	call	eax
	add	esp, 4
; Line 186
	test	eax, eax
	je	SHORT $LN23@EC_KEY_cop
; Line 188
	push	DWORD PTR [esi+16]
	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+8]
	push	eax
	push	ebp
	call	_EC_EX_DATA_set_data
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN23@EC_KEY_cop
; Line 183
	mov	esi, DWORD PTR [esi]
	test	esi, esi
	jne	SHORT $LL4@EC_KEY_cop
$LN3@EC_KEY_cop:
; Line 195
	mov	ecx, DWORD PTR [edi+16]
; Line 200
	mov	eax, ebx
	mov	DWORD PTR [ebx+16], ecx
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [ebx+20], ecx
	mov	ecx, DWORD PTR [edi]
	pop	ebp
	mov	DWORD PTR [ebx], ecx
	mov	ecx, DWORD PTR [edi+28]
	pop	esi
	pop	edi
	mov	DWORD PTR [ebx+28], ecx
	pop	ebx
; Line 201
	ret	0
$LN23@EC_KEY_cop:
	pop	ebp
	pop	esi
	pop	edi
; Line 187
	xor	eax, eax
	pop	ebx
; Line 201
	ret	0
$LN6@EC_KEY_cop:
; Line 145
	push	145					; 00000091H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	67					; 00000043H
	push	178					; 000000b2H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 146
	xor	eax, eax
	pop	edi
	pop	ebx
; Line 201
	ret	0
_EC_KEY_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_free
_TEXT	SEGMENT
_r$ = 8							; size = 4
_EC_KEY_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 107
	push	esi
; Line 110
	mov	esi, DWORD PTR _r$[esp]
	test	esi, esi
	je	SHORT $LN1@EC_KEY_fre
; Line 113
	push	113					; 00000071H
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	33					; 00000021H
	lea	eax, DWORD PTR [esi+24]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 117
	test	eax, eax
	jg	SHORT $LN1@EC_KEY_fre
; Line 126
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@EC_KEY_fre
; Line 127
	push	eax
	call	_EC_GROUP_free
	add	esp, 4
$LN4@EC_KEY_fre:
; Line 128
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN5@EC_KEY_fre
; Line 129
	push	eax
	call	_EC_POINT_free
	add	esp, 4
$LN5@EC_KEY_fre:
; Line 130
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN6@EC_KEY_fre
; Line 131
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN6@EC_KEY_fre:
; Line 133
	lea	eax, DWORD PTR [esi+32]
	push	eax
	call	_EC_EX_DATA_free_all_data
; Line 135
	push	36					; 00000024H
	push	esi
	call	_OPENSSL_cleanse
; Line 137
	push	esi
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
$LN1@EC_KEY_fre:
	pop	esi
; Line 138
	ret	0
_EC_KEY_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_new_by_curve_name
_TEXT	SEGMENT
_nid$ = 8						; size = 4
_EC_KEY_new_by_curve_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 94
	push	esi
; Line 95
	call	_EC_KEY_new
	mov	esi, eax
; Line 96
	test	esi, esi
	je	SHORT $LN5@EC_KEY_new
; Line 98
	push	DWORD PTR _nid$[esp]
	call	_EC_GROUP_new_by_curve_name
	add	esp, 4
	mov	DWORD PTR [esi+4], eax
; Line 99
	test	eax, eax
	jne	SHORT $LN3@EC_KEY_new
; Line 100
	push	esi
	call	_EC_KEY_free
	add	esp, 4
$LN5@EC_KEY_new:
; Line 101
	xor	eax, eax
	pop	esi
; Line 104
	ret	0
$LN3@EC_KEY_new:
; Line 103
	mov	eax, esi
	pop	esi
; Line 104
	ret	0
_EC_KEY_new_by_curve_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_clear_flags
_TEXT	SEGMENT
_key$ = 8						; size = 4
_flags$ = 12						; size = 4
_EC_KEY_clear_flags PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 564
	mov	ecx, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR _flags$[esp-4]
	not	eax
	and	DWORD PTR [ecx+28], eax
; Line 565
	ret	0
_EC_KEY_clear_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_set_flags
_TEXT	SEGMENT
_key$ = 8						; size = 4
_flags$ = 12						; size = 4
_EC_KEY_set_flags PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 559
	mov	ecx, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR _flags$[esp-4]
	or	DWORD PTR [ecx+28], eax
; Line 560
	ret	0
_EC_KEY_set_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_get_flags
_TEXT	SEGMENT
_key$ = 8						; size = 4
_EC_KEY_get_flags PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 554
	mov	eax, DWORD PTR _key$[esp-4]
	mov	eax, DWORD PTR [eax+28]
; Line 555
	ret	0
_EC_KEY_get_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_new
_TEXT	SEGMENT
_EC_KEY_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_key.c
; Line 75
	push	75					; 0000004bH
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	36					; 00000024H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 76
	test	eax, eax
	jne	SHORT $LN2@EC_KEY_new
; Line 77
	push	77					; 0000004dH
	push	OFFSET ??_C@_0BF@PJJIPJIB@?4?2crypto?2ec?2ec_key?4c?$AA@
	push	65					; 00000041H
	push	182					; 000000b6H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 78
	xor	eax, eax
; Line 91
	ret	0
$LN2@EC_KEY_new:
; Line 81
	mov	DWORD PTR [eax], 1
; Line 82
	mov	DWORD PTR [eax+28], 0
; Line 83
	mov	DWORD PTR [eax+4], 0
; Line 84
	mov	DWORD PTR [eax+8], 0
; Line 85
	mov	DWORD PTR [eax+12], 0
; Line 86
	mov	DWORD PTR [eax+16], 0
; Line 87
	mov	DWORD PTR [eax+20], 4
; Line 88
	mov	DWORD PTR [eax+24], 1
; Line 89
	mov	DWORD PTR [eax+32], 0
; Line 91
	ret	0
_EC_KEY_new ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rc4\rc4test.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_keys	DB	08H
	DB	01H
	DB	023H
	DB	045H
	DB	067H
	DB	089H
	DB	0abH
	DB	0cdH
	DB	0efH
	ORG $+21
	DB	08H
	DB	01H
	DB	023H
	DB	045H
	DB	067H
	DB	089H
	DB	0abH
	DB	0cdH
	DB	0efH
	ORG $+21
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+21
	DB	04H
	DB	0efH
	DB	01H
	DB	023H
	DB	045H
	ORG $+25
	DB	08H
	DB	01H
	DB	023H
	DB	045H
	DB	067H
	DB	089H
	DB	0abH
	DB	0cdH
	DB	0efH
	ORG $+21
	DB	04H
	DB	0efH
	DB	01H
	DB	023H
	DB	045H
	ORG $+25
	ORG $+30
	ORG $+2
_data_len DB	08H
	DB	08H
	DB	08H
	DB	014H
	DB	01cH
	DB	0aH
	ORG $+1
	ORG $+5
_data	DB	01H
	DB	023H
	DB	045H
	DB	067H
	DB	089H
	DB	0abH
	DB	0cdH
	DB	0efH
	DB	0ffH
	ORG $+21
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	ORG $+21
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	ORG $+21
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	ORG $+9
	DB	012H
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
	DB	056H
	DB	078H
	DB	0ffH
	ORG $+1
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	ORG $+19
	DB	00H
	ORG $+29
	ORG $+6
_output	DB	075H
	DB	0b7H
	DB	087H
	DB	080H
	DB	099H
	DB	0e0H
	DB	0c5H
	DB	096H
	DB	00H
	ORG $+21
	DB	074H
	DB	094H
	DB	0c2H
	DB	0e7H
	DB	010H
	DB	04bH
	DB	08H
	DB	079H
	DB	00H
	ORG $+21
	DB	0deH
	DB	018H
	DB	089H
	DB	041H
	DB	0a3H
	DB	037H
	DB	05dH
	DB	03aH
	DB	00H
	ORG $+21
	DB	0d6H
	DB	0a1H
	DB	041H
	DB	0a7H
	DB	0ecH
	DB	03cH
	DB	038H
	DB	0dfH
	DB	0bdH
	DB	061H
	DB	05aH
	DB	011H
	DB	062H
	DB	0e1H
	DB	0c7H
	DB	0baH
	DB	036H
	DB	0b6H
	DB	078H
	DB	058H
	DB	00H
	ORG $+9
	DB	066H
	DB	0a0H
	DB	094H
	DB	09fH
	DB	08aH
	DB	0f7H
	DB	0d6H
	DB	089H
	DB	01fH
	DB	07fH
	DB	083H
	DB	02bH
	DB	0a8H
	DB	033H
	DB	0c0H
	DB	0cH
	DB	089H
	DB	02eH
	DB	0beH
	DB	030H
	DB	014H
	DB	03cH
	DB	0e2H
	DB	087H
	DB	040H
	DB	01H
	DB	01eH
	DB	0cfH
	DB	00H
	ORG $+1
	DB	0d6H
	DB	0a1H
	DB	041H
	DB	0a7H
	DB	0ecH
	DB	03cH
	DB	038H
	DB	0dfH
	DB	0bdH
	DB	061H
	DB	00H
	ORG $+19
	DB	00H
	ORG $+29
	ORG $+2
?expected@?BE@??main@@9@9 DB 0a4H			; `main'::`20'::expected
	DB	07bH
	DB	0ccH
	DB	00H
	DB	03dH
	DB	0d0H
	DB	0bdH
	DB	0e1H
	DB	0acH
	DB	05fH
	DB	012H
	DB	01eH
	DB	045H
	DB	0bcH
	DB	0fbH
	DB	01aH
	DB	0a1H
	DB	0f2H
	DB	07fH
	DB	0c5H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	??_C@_0BH@NADOLLBK@error?5calculating?5RC4?6?$AA@ ; `string'
PUBLIC	??_C@_07GOJHIMEO@output?3?$AA@			; `string'
PUBLIC	??_C@_05HAJCMBLP@?5?$CF02x?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_07NIGDKDOB@expect?3?$AA@			; `string'
PUBLIC	??_C@_0M@NJKLCIBI@test?5?$CFd?5ok?6?$AA@	; `string'
PUBLIC	??_C@_0BF@OFBMILLE@test?5end?5processing?5?$AA@	; `string'
PUBLIC	??_C@_0CA@KMNKCOHE@error?5in?5RC4?5length?5processing?6?$AA@ ; `string'
PUBLIC	??_C@_04NGLDNCFN@?500?6?$AA@			; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_05KJDAJCPN@done?6?$AA@			; `string'
PUBLIC	??_C@_0BB@IEHBALPJ@test?5multi?9call?5?$AA@	; `string'
PUBLIC	??_C@_0CE@OFFPFLEM@error?5in?5RC4?5multi?9call?5processi@ ; `string'
PUBLIC	??_C@_0L@KFMIEEB@bulk?5test?5?$AA@		; `string'
PUBLIC	??_C@_0BI@EBFBNNON@error?5in?5RC4?5bulk?5test?6?$AA@ ; `string'
PUBLIC	??_C@_03DJDALPN@ok?6?$AA@			; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__exit:PROC
EXTRN	_RC4_set_key:PROC
EXTRN	_RC4:PROC
EXTRN	_SHA1_Init:PROC
EXTRN	_SHA1_Update:PROC
EXTRN	_SHA1_Final:PROC
EXTRN	_OPENSSL_cpuid_setup:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_03DJDALPN@ok?6?$AA@
CONST	SEGMENT
??_C@_03DJDALPN@ok?6?$AA@ DB 'ok', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EBFBNNON@error?5in?5RC4?5bulk?5test?6?$AA@
CONST	SEGMENT
??_C@_0BI@EBFBNNON@error?5in?5RC4?5bulk?5test?6?$AA@ DB 'error in RC4 bul'
	DB	'k test', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KFMIEEB@bulk?5test?5?$AA@
CONST	SEGMENT
??_C@_0L@KFMIEEB@bulk?5test?5?$AA@ DB 'bulk test ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFFPFLEM@error?5in?5RC4?5multi?9call?5processi@
CONST	SEGMENT
??_C@_0CE@OFFPFLEM@error?5in?5RC4?5multi?9call?5processi@ DB 'error in RC'
	DB	'4 multi-call processing', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IEHBALPJ@test?5multi?9call?5?$AA@
CONST	SEGMENT
??_C@_0BB@IEHBALPJ@test?5multi?9call?5?$AA@ DB 'test multi-call ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KJDAJCPN@done?6?$AA@
CONST	SEGMENT
??_C@_05KJDAJCPN@done?6?$AA@ DB 'done', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NGLDNCFN@?500?6?$AA@
CONST	SEGMENT
??_C@_04NGLDNCFN@?500?6?$AA@ DB ' 00', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KMNKCOHE@error?5in?5RC4?5length?5processing?6?$AA@
CONST	SEGMENT
??_C@_0CA@KMNKCOHE@error?5in?5RC4?5length?5processing?6?$AA@ DB 'error in'
	DB	' RC4 length processing', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OFBMILLE@test?5end?5processing?5?$AA@
CONST	SEGMENT
??_C@_0BF@OFBMILLE@test?5end?5processing?5?$AA@ DB 'test end processing ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJKLCIBI@test?5?$CFd?5ok?6?$AA@
CONST	SEGMENT
??_C@_0M@NJKLCIBI@test?5?$CFd?5ok?6?$AA@ DB 'test %d ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NIGDKDOB@expect?3?$AA@
CONST	SEGMENT
??_C@_07NIGDKDOB@expect?3?$AA@ DB 'expect:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
CONST	SEGMENT
??_C@_05HAJCMBLP@?5?$CF02x?$AA@ DB ' %02x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GOJHIMEO@output?3?$AA@
CONST	SEGMENT
??_C@_07GOJHIMEO@output?3?$AA@ DB 'output:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NADOLLBK@error?5calculating?5RC4?6?$AA@
CONST	SEGMENT
??_C@_0BH@NADOLLBK@error?5calculating?5RC4?6?$AA@ DB 'error calculating R'
	DB	'C4', 0aH, 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
tv710 = -2184						; size = 4
_err$1$ = -2184						; size = 4
_c$1 = -2180						; size = 96
_key$ = -2084						; size = 1032
_md$2 = -1052						; size = 20
_obuf$ = -1032						; size = 512
_buf$3 = -520						; size = 513
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rc4\rc4test.c
; Line 117
	mov	eax, 2184				; 00000888H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+2184], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 118
	mov	DWORD PTR _err$1$[esp+2200], 0
; Line 127
	call	_OPENSSL_cpuid_setup
; Line 130
	xor	edi, edi
	xor	ebx, ebx
	npad	3
$LL4@main:
; Line 131
	lea	eax, DWORD PTR _keys[ebx+1]
	push	eax
	movzx	eax, BYTE PTR _keys[ebx]
	push	eax
	lea	eax, DWORD PTR _key$[esp+2208]
	push	eax
	call	_RC4_set_key
; Line 132
	push	512					; 00000200H
	lea	eax, DWORD PTR _obuf$[esp+2216]
	push	0
	push	eax
	call	_memset
; Line 133
	lea	eax, DWORD PTR _obuf$[esp+2224]
	push	eax
	lea	eax, DWORD PTR _data[ebx]
	push	eax
	movzx	eax, BYTE PTR _data_len[edi]
	push	eax
	lea	eax, DWORD PTR _key$[esp+2236]
	push	eax
	call	_RC4
; Line 134
	movzx	esi, BYTE PTR _data_len[edi]
	lea	ecx, DWORD PTR _obuf$[esp+2240]
	inc	esi
	lea	edx, DWORD PTR _output[ebx]
	add	esp, 40					; 00000028H
	sub	esi, 4
	jb	SHORT $LN98@main
	npad	2
$LL99@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN97@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL99@main
$LN98@main:
	cmp	esi, -4					; fffffffcH
	je	$LN96@main
$LN97@main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN100@main
	cmp	esi, -3					; fffffffdH
	je	$LN96@main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN100@main
	cmp	esi, -2					; fffffffeH
	je	$LN96@main
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN100@main
	cmp	esi, -1
	je	$LN96@main
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	$LN96@main
$LN100@main:
; Line 135
	push	OFFSET ??_C@_0BH@NADOLLBK@error?5calculating?5RC4?6?$AA@
	call	_printf
; Line 136
	push	OFFSET ??_C@_07GOJHIMEO@output?3?$AA@
	call	_printf
; Line 137
	movzx	eax, BYTE PTR _data_len[edi]
	add	esp, 8
	inc	eax
	xor	esi, esi
	test	eax, eax
	jle	SHORT $LN6@main
	npad	4
$LL7@main:
; Line 138
	movzx	eax, BYTE PTR _obuf$[esp+esi+2200]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	call	_printf
	movzx	eax, BYTE PTR _data_len[edi]
	inc	esi
	inc	eax
	add	esp, 8
	cmp	esi, eax
	jl	SHORT $LL7@main
$LN6@main:
; Line 139
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 140
	push	OFFSET ??_C@_07NIGDKDOB@expect?3?$AA@
	call	_printf
; Line 142
	movzx	eax, BYTE PTR _data_len[edi]
	add	esp, 8
	inc	eax
	xor	esi, esi
	test	eax, eax
	jle	SHORT $LN9@main
	npad	8
$LL10@main:
; Line 143
	movzx	eax, BYTE PTR _output[esi+ebx]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	call	_printf
	movzx	eax, BYTE PTR _data_len[edi]
	inc	esi
	inc	eax
	add	esp, 8
	cmp	esi, eax
	jl	SHORT $LL10@main
$LN9@main:
; Line 144
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 145
	mov	ebp, DWORD PTR _err$1$[esp+2204]
	add	esp, 4
	inc	ebp
	mov	DWORD PTR _err$1$[esp+2200], ebp
; Line 146
	jmp	SHORT $LN2@main
$LN96@main:
; Line 147
	push	edi
	push	OFFSET ??_C@_0M@NJKLCIBI@test?5?$CFd?5ok?6?$AA@
	call	_printf
	mov	ebp, DWORD PTR _err$1$[esp+2208]
	add	esp, 8
$LN2@main:
; Line 130
	add	ebx, 30					; 0000001eH
	inc	edi
	cmp	ebx, 180				; 000000b4H
	jl	$LL4@main
; Line 149
	push	OFFSET ??_C@_0BF@OFBMILLE@test?5end?5processing?5?$AA@
	call	_printf
; Line 150
	mov	ebx, DWORD PTR __imp__fflush
	add	esp, 4
	xor	edi, edi
	cmp	BYTE PTR _data_len+3, 0
	jbe	$LN12@main
	lea	eax, DWORD PTR _obuf$[esp+2200]
	dec	eax
	mov	DWORD PTR tv710[esp+2200], eax
	npad	5
$LL13@main:
; Line 151
	movzx	eax, BYTE PTR _keys+90
	push	OFFSET _keys+91
	push	eax
	lea	eax, DWORD PTR _key$[esp+2208]
	push	eax
	call	_RC4_set_key
; Line 152
	push	512					; 00000200H
	lea	eax, DWORD PTR _obuf$[esp+2216]
	push	0
	push	eax
	call	_memset
; Line 153
	lea	eax, DWORD PTR _obuf$[esp+2224]
	push	eax
	push	OFFSET _data+90
	lea	eax, DWORD PTR _key$[esp+2232]
	push	edi
	push	eax
	call	_RC4
; Line 154
	mov	esi, edi
	lea	ecx, DWORD PTR _obuf$[esp+2240]
	add	esp, 40					; 00000028H
	mov	edx, OFFSET _output+90
	sub	esi, 4
	jb	SHORT $LN103@main
	npad	4
$LL104@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN102@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL104@main
$LN103@main:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN101@main
$LN102@main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN42@main
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN101@main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN42@main
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN101@main
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN42@main
	cmp	esi, -1
	je	SHORT $LN101@main
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	jne	SHORT $LN42@main
$LN101@main:
	mov	eax, DWORD PTR tv710[esp+2200]
	lea	ebx, DWORD PTR [edi+1]
	cmp	BYTE PTR [eax+ebx], 0
	jne	SHORT $LN42@main
; Line 167
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	call	_printf
; Line 168
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 12					; 0000000cH
	jmp	$LN11@main
$LN42@main:
; Line 155
	push	OFFSET ??_C@_0CA@KMNKCOHE@error?5in?5RC4?5length?5processing?6?$AA@
	call	_printf
; Line 156
	push	OFFSET ??_C@_07GOJHIMEO@output?3?$AA@
	call	_printf
; Line 157
	lea	ebx, DWORD PTR [edi+1]
	add	esp, 8
	xor	esi, esi
	test	ebx, ebx
	jle	SHORT $LN15@main
$LL16@main:
; Line 158
	movzx	eax, BYTE PTR _obuf$[esp+esi+2200]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jl	SHORT $LL16@main
$LN15@main:
; Line 159
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 160
	push	OFFSET ??_C@_07NIGDKDOB@expect?3?$AA@
	call	_printf
	add	esp, 8
; Line 162
	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN18@main
	npad	7
$LL19@main:
; Line 163
	movzx	eax, BYTE PTR _output[esi+90]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, edi
	jl	SHORT $LL19@main
$LN18@main:
; Line 164
	push	OFFSET ??_C@_04NGLDNCFN@?500?6?$AA@
	call	_printf
	add	esp, 4
; Line 165
	inc	ebp
$LN11@main:
; Line 150
	movzx	eax, BYTE PTR _data_len+3
	mov	edi, ebx
	cmp	edi, eax
	jl	$LL13@main
	mov	ebx, DWORD PTR __imp__fflush
$LN12@main:
; Line 171
	push	OFFSET ??_C@_05KJDAJCPN@done?6?$AA@
	call	_printf
; Line 172
	push	OFFSET ??_C@_0BB@IEHBALPJ@test?5multi?9call?5?$AA@
	call	_printf
	add	esp, 8
; Line 173
	xor	edi, edi
	cmp	BYTE PTR _data_len+3, 0
	jbe	$LN21@main
	npad	11
$LL22@main:
; Line 174
	movzx	eax, BYTE PTR _keys+90
	push	OFFSET _keys+91
	push	eax
	lea	eax, DWORD PTR _key$[esp+2208]
	push	eax
	call	_RC4_set_key
; Line 175
	push	512					; 00000200H
	lea	eax, DWORD PTR _obuf$[esp+2216]
	push	0
	push	eax
	call	_memset
; Line 176
	lea	eax, DWORD PTR _obuf$[esp+2224]
	push	eax
	push	OFFSET _data+90
	lea	eax, DWORD PTR _key$[esp+2232]
	push	edi
	push	eax
	call	_RC4
; Line 177
	lea	eax, DWORD PTR _obuf$[esp+2240]
	add	eax, edi
	push	eax
	lea	eax, DWORD PTR _data[edi+90]
	push	eax
	movzx	eax, BYTE PTR _data_len+3
	sub	eax, edi
	push	eax
	lea	eax, DWORD PTR _key$[esp+2252]
	push	eax
	call	_RC4
; Line 178
	movzx	esi, BYTE PTR _data_len+3
	lea	ecx, DWORD PTR _obuf$[esp+2256]
	inc	esi
	add	esp, 56					; 00000038H
	mov	edx, OFFSET _output+90
	sub	esi, 4
	jb	SHORT $LN107@main
	npad	6
$LL108@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN106@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL108@main
$LN107@main:
	cmp	esi, -4					; fffffffcH
	je	$LN105@main
$LN106@main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN109@main
	cmp	esi, -3					; fffffffdH
	je	$LN105@main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN109@main
	cmp	esi, -2					; fffffffeH
	je	$LN105@main
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN109@main
	cmp	esi, -1
	je	$LN105@main
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	$LN105@main
$LN109@main:
; Line 179
	push	OFFSET ??_C@_0CE@OFFPFLEM@error?5in?5RC4?5multi?9call?5processi@
	call	_printf
; Line 180
	push	OFFSET ??_C@_07GOJHIMEO@output?3?$AA@
	call	_printf
; Line 181
	movzx	eax, BYTE PTR _data_len+3
	add	esp, 8
	inc	eax
	xor	esi, esi
	test	eax, eax
	jle	SHORT $LN24@main
	npad	4
$LL25@main:
; Line 182
	movzx	eax, BYTE PTR _obuf$[esp+esi+2200]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	call	_printf
	movzx	eax, BYTE PTR _data_len+3
	inc	esi
	inc	eax
	add	esp, 8
	cmp	esi, eax
	jl	SHORT $LL25@main
$LN24@main:
; Line 183
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 184
	push	OFFSET ??_C@_07NIGDKDOB@expect?3?$AA@
	call	_printf
; Line 186
	mov	cl, BYTE PTR _data_len+3
	add	esp, 8
	movzx	eax, cl
	xor	esi, esi
	inc	eax
	test	eax, eax
	jle	SHORT $LN27@main
	npad	6
$LL28@main:
; Line 187
	movzx	eax, BYTE PTR _output[esi+90]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	call	_printf
	mov	cl, BYTE PTR _data_len+3
	inc	esi
	movzx	eax, cl
	add	esp, 8
	inc	eax
	cmp	esi, eax
	jl	SHORT $LL28@main
$LN27@main:
; Line 188
	inc	ebp
; Line 189
	jmp	SHORT $LN20@main
$LN105@main:
; Line 190
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	call	_printf
; Line 191
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	call	ebx
	mov	cl, BYTE PTR _data_len+3
	add	esp, 12					; 0000000cH
$LN20@main:
; Line 173
	inc	edi
	movzx	eax, cl
	cmp	edi, eax
	jl	$LL22@main
$LN21@main:
; Line 194
	push	OFFSET ??_C@_05KJDAJCPN@done?6?$AA@
	call	_printf
; Line 195
	push	OFFSET ??_C@_0L@KFMIEEB@bulk?5test?5?$AA@
	call	_printf
; Line 205
	movzx	eax, BYTE PTR _keys
	push	OFFSET _keys+91
	push	eax
	lea	eax, DWORD PTR _key$[esp+2216]
	push	eax
	call	_RC4_set_key
; Line 206
	push	513					; 00000201H
	lea	eax, DWORD PTR _buf$3[esp+2224]
	push	0
	push	eax
	call	_memset
; Line 207
	lea	eax, DWORD PTR _c$1[esp+2232]
	push	eax
	call	_SHA1_Init
	add	esp, 36					; 00000024H
	mov	esi, 2571				; 00000a0bH
$LL31@main:
; Line 209
	lea	eax, DWORD PTR _buf$3[esp+2200]
	push	eax
	push	eax
	lea	eax, DWORD PTR _key$[esp+2208]
	push	513					; 00000201H
	push	eax
	call	_RC4
; Line 210
	push	513					; 00000201H
	lea	eax, DWORD PTR _buf$3[esp+2220]
	push	eax
	lea	eax, DWORD PTR _c$1[esp+2224]
	push	eax
	call	_SHA1_Update
	add	esp, 28					; 0000001cH
	sub	esi, 1
	jne	SHORT $LL31@main
; Line 212
	lea	eax, DWORD PTR _c$1[esp+2200]
	push	eax
	lea	eax, DWORD PTR _md$2[esp+2204]
	push	eax
	call	_SHA1_Final
	add	esp, 8
; Line 214
	lea	ecx, DWORD PTR _md$2[esp+2200]
	mov	edx, OFFSET ?expected@?BE@??main@@9@9
	mov	esi, 16					; 00000010H
$LL112@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN111@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL112@main
; Line 226
	push	OFFSET ??_C@_03DJDALPN@ok?6?$AA@
	call	_printf
	add	esp, 4
	jmp	$LN46@main
$LN111@main:
; Line 215
	push	OFFSET ??_C@_0BI@EBFBNNON@error?5in?5RC4?5bulk?5test?6?$AA@
	call	_printf
; Line 216
	push	OFFSET ??_C@_07GOJHIMEO@output?3?$AA@
	call	_printf
	add	esp, 8
; Line 217
	xor	esi, esi
	npad	2
$LL34@main:
; Line 218
	movzx	eax, BYTE PTR _md$2[esp+esi+2200]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 20					; 00000014H
	jl	SHORT $LL34@main
; Line 219
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 220
	push	OFFSET ??_C@_07NIGDKDOB@expect?3?$AA@
	call	_printf
	add	esp, 8
; Line 221
	xor	esi, esi
	npad	11
$LL37@main:
; Line 222
	movzx	eax, BYTE PTR ?expected@?BE@??main@@9@9[esi]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 20					; 00000014H
	jl	SHORT $LL37@main
; Line 223
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
	add	esp, 4
; Line 224
	inc	ebp
$LN46@main:
; Line 232
	push	ebp
	call	DWORD PTR __imp__exit
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
$LN114@main:
$LN113@main:
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\des\qud_cksm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DES_quad_cksum
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _DES_quad_cksum
_TEXT	SEGMENT
_i$1$ = -4						; size = 4
_input$ = 8						; size = 4
_output$ = 12						; size = 4
_length$ = 16						; size = 4
_out_count$ = 20					; size = 4
_z0$1$ = 24						; size = 4
_seed$ = 24						; size = 4
_DES_quad_cksum PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\qud_cksm.c
; Line 79
	mov	eax, 4
	call	__chkstk
; Line 101
	mov	ecx, DWORD PTR _seed$[esp]
	mov	eax, 1
	push	ebx
	push	ebp
	push	esi
	movzx	edx, BYTE PTR [ecx+3]
; Line 103
	movzx	ebp, BYTE PTR [ecx+7]
	mov	ebx, DWORD PTR _output$[esp+12]
; Line 106
	mov	esi, DWORD PTR _length$[esp+12]
	push	edi
	mov	edi, DWORD PTR _out_count$[esp+16]
	cmp	edi, eax
	cmovl	edi, eax
	movzx	eax, BYTE PTR [ecx+2]
	shl	edx, 8
	or	edx, eax
	shl	ebp, 8
	movzx	eax, BYTE PTR [ecx+1]
	shl	edx, 8
	or	edx, eax
	mov	DWORD PTR _out_count$[esp+16], edi
	movzx	eax, BYTE PTR [ecx]
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR [ecx+6]
	or	ebp, eax
	mov	DWORD PTR _z0$1$[esp+16], edx
	movzx	eax, BYTE PTR [ecx+5]
	shl	ebp, 8
	or	ebp, eax
	movzx	eax, BYTE PTR [ecx+4]
	shl	ebp, 8
	or	ebp, eax
	xor	eax, eax
	mov	DWORD PTR _i$1$[esp+20], eax
$LL4@DES_quad_c:
	cmp	eax, edi
	jge	$LN20@DES_quad_c
; Line 107
	mov	ecx, DWORD PTR _input$[esp+16]
; Line 108
	mov	edi, esi
; Line 109
	test	esi, esi
	jle	SHORT $LN6@DES_quad_c
	mov	ebx, DWORD PTR _z0$1$[esp+16]
	npad	7
$LL5@DES_quad_c:
; Line 111
	movzx	esi, BYTE PTR [ecx]
	cmp	edi, 1
	jle	SHORT $LN8@DES_quad_c
; Line 112
	movzx	eax, BYTE PTR [ecx+1]
	add	ecx, 2
	shl	eax, 8
	or	esi, eax
; Line 113
	dec	edi
; Line 114
	jmp	SHORT $LN9@DES_quad_c
$LN8@DES_quad_c:
; Line 115
	inc	ecx
$LN9@DES_quad_c:
; Line 118
	add	esi, ebx
; Line 122
	mov	edx, ebp
	imul	edx, ebp
	mov	eax, esi
	imul	eax, esi
	mov	ebx, 2147483647				; 7fffffffH
	dec	edi
	add	eax, edx
	xor	edx, edx
	div	ebx
; Line 124
	lea	eax, DWORD PTR [ebp+83653421]
	imul	eax, esi
	mov	ebx, edx
	xor	edx, edx
	mov	esi, 2147483647				; 7fffffffH
	div	esi
	mov	ebp, edx
	test	edi, edi
	jg	SHORT $LL5@DES_quad_c
	mov	eax, DWORD PTR _i$1$[esp+20]
	mov	esi, DWORD PTR _length$[esp+16]
	mov	DWORD PTR _z0$1$[esp+16], ebx
	mov	ebx, DWORD PTR _output$[esp+16]
	mov	edx, DWORD PTR _z0$1$[esp+16]
$LN6@DES_quad_c:
; Line 127
	test	ebx, ebx
	je	SHORT $LN2@DES_quad_c
; Line 137
	mov	DWORD PTR [ebx], edx
; Line 138
	mov	DWORD PTR [ebx+4], ebp
	add	ebx, 8
	mov	DWORD PTR _output$[esp+16], ebx
$LN2@DES_quad_c:
; Line 106
	mov	edi, DWORD PTR _out_count$[esp+16]
	inc	eax
	mov	DWORD PTR _i$1$[esp+20], eax
	cmp	eax, 4
	jl	$LL4@DES_quad_c
$LN20@DES_quad_c:
	pop	edi
	pop	esi
	pop	ebp
; Line 142
	mov	eax, edx
	pop	ebx
; Line 143
	pop	ecx
	ret	0
_DES_quad_cksum ENDP
_TEXT	ENDS
END

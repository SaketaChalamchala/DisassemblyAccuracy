; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_X509_policy_check
PUBLIC	_X509_policy_tree_free
PUBLIC	??_C@_0BL@HFHMLGNE@?4?2crypto?2x509v3?2pcy_tree?4c?$AA@ ; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_delete:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_X509_policy_tree_get0_user_policies:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_check_purpose:PROC
EXTRN	_policy_data_new:PROC
EXTRN	_policy_data_free:PROC
EXTRN	_policy_node_cmp_new:PROC
EXTRN	_level_find_node:PROC
EXTRN	_tree_find_sk:PROC
EXTRN	_level_add_node:PROC
EXTRN	_policy_node_free:PROC
EXTRN	_policy_node_match:PROC
EXTRN	_policy_cache_set:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BL@HFHMLGNE@?4?2crypto?2x509v3?2pcy_tree?4c?$AA@
CONST	SEGMENT
??_C@_0BL@HFHMLGNE@?4?2crypto?2x509v3?2pcy_tree?4c?$AA@ DB '.\crypto\x509'
	DB	'v3\pcy_tree.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _exnode_free
_TEXT	SEGMENT
_node$ = 8						; size = 4
_exnode_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 689
	mov	eax, DWORD PTR _node$[esp-4]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@exnode_fre
	test	BYTE PTR [ecx], 8
	je	SHORT $LN2@exnode_fre
; Line 690
	mov	DWORD PTR _node$[esp-4], eax
	jmp	_CRYPTO_free
$LN2@exnode_fre:
; Line 691
	ret	0
_exnode_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_evaluate
_TEXT	SEGMENT
_tree$ = 8						; size = 4
_tree_evaluate PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 664
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 666
	mov	edi, DWORD PTR _tree$[esp+12]
; Line 669
	mov	ebx, 1
	mov	esi, DWORD PTR [edi]
	add	esi, 16					; 00000010H
	cmp	DWORD PTR [edi+4], ebx
	jle	SHORT $LN3@tree_evalu
$LL4@tree_evalu:
; Line 670
	push	DWORD PTR [esi]
	call	_policy_cache_set
	mov	ebp, eax
; Line 671
	push	ebp
	push	esi
	call	_tree_link_nodes
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN10@tree_evalu
; Line 675
	test	DWORD PTR [esi+12], 512			; 00000200H
	jne	SHORT $LN6@tree_evalu
	push	edi
	push	ebp
	push	esi
	call	_tree_link_any
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN10@tree_evalu
$LN6@tree_evalu:
; Line 678
	push	esi
	push	edi
	call	_tree_prune
	add	esp, 8
; Line 679
	cmp	eax, 1
	jne	SHORT $LN1@tree_evalu
; Line 669
	inc	ebx
	add	esi, 16					; 00000010H
	cmp	ebx, DWORD PTR [edi+4]
	jl	SHORT $LL4@tree_evalu
$LN3@tree_evalu:
; Line 683
	mov	eax, 1
$LN1@tree_evalu:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 685
	ret	0
$LN10@tree_evalu:
	pop	edi
	pop	esi
	pop	ebp
; Line 672
	xor	eax, eax
	pop	ebx
; Line 685
	ret	0
_tree_evaluate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_calculate_user_set
_TEXT	SEGMENT
_anyPolicy$1$ = -8					; size = 4
_oid$2$ = -4						; size = 4
_tree$ = 8						; size = 4
_policy_oids$ = 12					; size = 4
_auth_nodes$ = 16					; size = 4
_tree_calculate_user_set PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 607
	mov	eax, 8
	call	__chkstk
	push	edi
; Line 620
	mov	edi, DWORD PTR _policy_oids$[esp+8]
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jg	SHORT $LN8@tree_calcu
; Line 621
	mov	eax, 1
	pop	edi
; Line 661
	add	esp, 8
	ret	0
$LN8@tree_calcu:
	push	ebx
; Line 623
	mov	ebx, DWORD PTR _tree$[esp+12]
	push	esi
; Line 625
	push	edi
	xor	esi, esi
	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ebx]
	add	ecx, ecx
	mov	eax, DWORD PTR [eax+ecx*8-8]
	mov	DWORD PTR _anyPolicy$1$[esp+24], eax
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@tree_calcu
	npad	6
$LL4@tree_calcu:
; Line 626
	push	esi
	push	edi
	call	_sk_value
; Line 627
	push	eax
	call	_OBJ_obj2nid
	add	esp, 12					; 0000000cH
	cmp	eax, 746				; 000002eaH
	je	$LN19@tree_calcu
; Line 625
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@tree_calcu
$LN3@tree_calcu:
	push	ebp
; Line 633
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN6@tree_calcu
	npad	3
$LL7@tree_calcu:
; Line 634
	push	esi
	push	edi
	call	_sk_value
; Line 635
	push	eax
	push	DWORD PTR _auth_nodes$[esp+32]
	mov	DWORD PTR _oid$2$[esp+40], eax
	call	_tree_find_sk
	mov	ebp, eax
	add	esp, 16					; 00000010H
; Line 636
	test	ebp, ebp
	jne	SHORT $LN10@tree_calcu
; Line 637
	mov	ebp, DWORD PTR _anyPolicy$1$[esp+24]
	test	ebp, ebp
	je	SHORT $LN5@tree_calcu
; Line 643
	mov	eax, DWORD PTR [ebp]
	mov	eax, DWORD PTR [eax]
	and	eax, 16					; 00000010H
	push	eax
	push	DWORD PTR _oid$2$[esp+28]
	push	0
	call	_policy_data_new
	add	esp, 12					; 0000000cH
; Line 644
	test	eax, eax
	je	SHORT $LN22@tree_calcu
; Line 646
	mov	ecx, DWORD PTR [ebp]
; Line 649
	push	ebx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax], 12			; 0000000cH
	push	DWORD PTR [ebp+4]
	push	eax
	push	0
	call	_level_add_node
	add	esp, 16					; 00000010H
	mov	ebp, eax
$LN10@tree_calcu:
; Line 651
	cmp	DWORD PTR [ebx+16], 0
	jne	SHORT $LN14@tree_calcu
; Line 652
	call	_sk_new_null
	mov	DWORD PTR [ebx+16], eax
; Line 653
	test	eax, eax
	je	SHORT $LN6@tree_calcu
$LN14@tree_calcu:
; Line 656
	push	ebp
	push	DWORD PTR [ebx+16]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN22@tree_calcu
$LN5@tree_calcu:
; Line 633
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	$LL7@tree_calcu
$LN6@tree_calcu:
	pop	ebp
	pop	esi
	pop	ebx
; Line 659
	mov	eax, 1
	pop	edi
; Line 661
	add	esp, 8
	ret	0
$LN19@tree_calcu:
; Line 628
	or	DWORD PTR [ebx+20], 2
; Line 629
	mov	eax, 1
	pop	esi
	pop	ebx
	pop	edi
; Line 661
	add	esp, 8
	ret	0
$LN22@tree_calcu:
	pop	ebp
	pop	esi
	pop	ebx
; Line 657
	xor	eax, eax
	pop	edi
; Line 661
	add	esp, 8
	ret	0
_tree_calculate_user_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_calculate_authority_set
_TEXT	SEGMENT
_i$1$ = -12						; size = 4
_pnodes$1$ = -8						; size = 4
_anyptr$1$ = -4						; size = 4
_tree$ = 8						; size = 4
_pnodes$ = 12						; size = 4
_tree_calculate_authority_set PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 563
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 568
	mov	edi, DWORD PTR _tree$[esp+20]
	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	add	ecx, ecx
; Line 571
	mov	esi, DWORD PTR [eax+ecx*8-8]
	test	esi, esi
	je	SHORT $LN8@tree_calcu
; Line 538
	mov	eax, DWORD PTR [edi+12]
; Line 572
	lea	ebx, DWORD PTR [edi+12]
	mov	DWORD PTR _pnodes$1$[esp+24], ebx
; Line 538
	test	eax, eax
	jne	SHORT $LN16@tree_calcu
; Line 539
	call	_policy_node_cmp_new
	mov	DWORD PTR [ebx], eax
; Line 540
	test	eax, eax
	je	SHORT $LN39@tree_calcu
; Line 542
	jmp	SHORT $LN19@tree_calcu
$LN16@tree_calcu:
	push	esi
	push	eax
	call	_sk_find
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN10@tree_calcu
$LN19@tree_calcu:
; Line 545
	push	esi
	push	DWORD PTR [ebx]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@tree_calcu
$LN39@tree_calcu:
	pop	edi
	pop	esi
; Line 573
	xor	eax, eax
	pop	ebx
; Line 602
	add	esp, 12					; 0000000cH
	ret	0
$LN10@tree_calcu:
; Line 574
	mov	ebx, DWORD PTR _pnodes$[esp+20]
; Line 575
	jmp	SHORT $LN9@tree_calcu
$LN8@tree_calcu:
; Line 577
	lea	eax, DWORD PTR [edi+12]
	mov	DWORD PTR _pnodes$1$[esp+24], eax
	mov	ebx, eax
$LN9@tree_calcu:
; Line 580
	cmp	DWORD PTR [edi+4], 1
	push	ebp
	mov	ebp, DWORD PTR [edi]
	mov	DWORD PTR _i$1$[esp+28], 1
	jle	$LN3@tree_calcu
; Line 579
	add	ebp, 4
	npad	7
$LL4@tree_calcu:
; Line 585
	mov	eax, DWORD PTR [ebp+4]
	mov	DWORD PTR _anyptr$1$[esp+28], eax
	test	eax, eax
	je	$LN3@tree_calcu
; Line 588
	push	DWORD PTR [ebp+16]
	add	ebp, 16					; 00000010H
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN2@tree_calcu
$LL7@tree_calcu:
; Line 589
	push	esi
	push	DWORD PTR [ebp]
	call	_sk_value
	mov	edi, eax
	add	esp, 8
; Line 591
	mov	eax, DWORD PTR _anyptr$1$[esp+28]
	cmp	DWORD PTR [edi+4], eax
	jne	SHORT $LN5@tree_calcu
; Line 538
	mov	ecx, DWORD PTR [ebx]
	test	ecx, ecx
	jne	SHORT $LN23@tree_calcu
; Line 539
	call	_policy_node_cmp_new
	mov	DWORD PTR [ebx], eax
; Line 540
	test	eax, eax
	jne	SHORT $LN26@tree_calcu
$LN31@tree_calcu:
	pop	ebp
	pop	edi
	pop	esi
; Line 592
	xor	eax, eax
	pop	ebx
; Line 602
	add	esp, 12					; 0000000cH
	ret	0
$LN23@tree_calcu:
; Line 542
	push	edi
	push	ecx
	call	_sk_find
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN5@tree_calcu
$LN26@tree_calcu:
; Line 545
	push	edi
	push	DWORD PTR [ebx]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN31@tree_calcu
$LN5@tree_calcu:
; Line 588
	push	DWORD PTR [ebp]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL7@tree_calcu
	mov	edi, DWORD PTR _tree$[esp+24]
$LN2@tree_calcu:
; Line 580
	mov	ecx, DWORD PTR _i$1$[esp+28]
	inc	ecx
	mov	DWORD PTR _i$1$[esp+28], ecx
	cmp	ecx, DWORD PTR [edi+4]
	jl	$LL4@tree_calcu
$LN3@tree_calcu:
; Line 596
	mov	ecx, DWORD PTR _pnodes$[esp+24]
	cmp	ebx, ecx
	jne	SHORT $LN13@tree_calcu
; Line 597
	pop	ebp
	pop	edi
	pop	esi
	mov	eax, 2
	pop	ebx
; Line 602
	add	esp, 12					; 0000000cH
	ret	0
$LN13@tree_calcu:
; Line 599
	mov	eax, DWORD PTR _pnodes$1$[esp+28]
	pop	ebp
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
; Line 601
	mov	eax, 1
	pop	ebx
; Line 602
	add	esp, 12					; 0000000cH
	ret	0
_tree_calculate_authority_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_add_auth_node
_TEXT	SEGMENT
_pnodes$ = 8						; size = 4
_pcy$ = 12						; size = 4
_tree_add_auth_node PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 537
	push	esi
; Line 538
	mov	esi, DWORD PTR _pnodes$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN2@tree_add_a
; Line 539
	call	_policy_node_cmp_new
	mov	DWORD PTR [esi], eax
; Line 540
	test	eax, eax
	jne	SHORT $LN5@tree_add_a
	pop	esi
; Line 550
	ret	0
$LN2@tree_add_a:
; Line 542
	push	DWORD PTR _pcy$[esp]
	push	eax
	call	_sk_find
	add	esp, 8
	cmp	eax, -1
	je	SHORT $LN5@tree_add_a
; Line 543
	mov	eax, 1
	pop	esi
; Line 550
	ret	0
$LN5@tree_add_a:
; Line 545
	push	DWORD PTR _pcy$[esp]
	push	DWORD PTR [esi]
	call	_sk_push
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	esi
; Line 550
	ret	0
_tree_add_auth_node ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_prune
_TEXT	SEGMENT
_tree$ = 8						; size = 4
_curr$ = 12						; size = 4
_tree_prune PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 489
	push	ebx
; Line 493
	mov	ebx, DWORD PTR _curr$[esp]
	push	ebp
	push	esi
	push	edi
; Line 494
	test	DWORD PTR [ebx+12], 1024		; 00000400H
	mov	edi, DWORD PTR [ebx+4]
	je	SHORT $LN40@tree_prune
; Line 495
	push	edi
	call	_sk_num
	mov	esi, eax
	add	esp, 4
	sub	esi, 1
	js	SHORT $LN40@tree_prune
$LL4@tree_prune:
; Line 496
	push	esi
	push	edi
	call	_sk_value
	add	esp, 8
; Line 498
	mov	ecx, DWORD PTR [eax]
	test	BYTE PTR [ecx], 3
	je	SHORT $LN2@tree_prune
; Line 499
	mov	ecx, DWORD PTR [eax+4]
; Line 500
	push	eax
	dec	DWORD PTR [ecx+8]
	call	_CRYPTO_free
; Line 501
	push	esi
	push	edi
	call	_sk_delete
	add	esp, 12					; 0000000cH
$LN2@tree_prune:
; Line 495
	sub	esi, 1
	jns	SHORT $LL4@tree_prune
$LN40@tree_prune:
	mov	ebp, DWORD PTR _tree$[esp+12]
$LL5@tree_prune:
; Line 508
	mov	edi, DWORD PTR [ebx-12]
	sub	ebx, 16					; 00000010H
; Line 509
	push	edi
	call	_sk_num
	mov	esi, eax
	add	esp, 4
	sub	esi, 1
	js	SHORT $LN9@tree_prune
	npad	6
$LL10@tree_prune:
; Line 510
	push	esi
	push	edi
	call	_sk_value
	add	esp, 8
; Line 511
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@tree_prune
; Line 512
	mov	ecx, DWORD PTR [eax+4]
; Line 513
	push	eax
	dec	DWORD PTR [ecx+8]
	call	_CRYPTO_free
; Line 514
	push	esi
	push	edi
	call	_sk_delete
	add	esp, 12					; 0000000cH
$LN8@tree_prune:
; Line 509
	sub	esi, 1
	jns	SHORT $LL10@tree_prune
$LN9@tree_prune:
; Line 517
	mov	eax, DWORD PTR [ebx+8]
	test	eax, eax
	je	SHORT $LN14@tree_prune
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN14@tree_prune
; Line 518
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN15@tree_prune
; Line 519
	dec	DWORD PTR [eax+8]
$LN15@tree_prune:
; Line 520
	push	DWORD PTR [ebx+8]
	call	_CRYPTO_free
	add	esp, 4
; Line 521
	mov	DWORD PTR [ebx+8], 0
$LN14@tree_prune:
; Line 523
	cmp	ebx, DWORD PTR [ebp]
	jne	SHORT $LL5@tree_prune
; Line 525
	mov	eax, DWORD PTR [ebx+8]
	pop	edi
	neg	eax
	pop	esi
	sbb	eax, eax
	pop	ebp
	add	eax, 2
	pop	ebx
; Line 533
	ret	0
_tree_prune ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_link_any
_TEXT	SEGMENT
_expset$1$ = -4						; size = 4
_i$1$ = 8						; size = 4
_curr$ = 8						; size = 4
_cache$ = 12						; size = 4
_tree$ = 16						; size = 4
_tree_link_any PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 431
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
; Line 437
	mov	ebp, DWORD PTR _curr$[esp+8]
	push	esi
	push	edi
; Line 439
	xor	esi, esi
	push	DWORD PTR [ebp-12]
	mov	DWORD PTR _i$1$[esp+20], esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN3@tree_link_
	npad	5
$LL4@tree_link_:
; Line 440
	push	esi
	push	DWORD PTR [ebp-12]
	call	_sk_value
	add	esp, 8
	mov	esi, eax
; Line 401
	test	DWORD PTR [ebp-4], 1024			; 00000400H
	jne	$LN15@tree_link_
	mov	edi, DWORD PTR [esi]
	test	BYTE PTR [edi], 1
	je	$LN15@tree_link_
; Line 410
	mov	edi, DWORD PTR [edi+12]
; Line 411
	push	edi
	mov	DWORD PTR _expset$1$[esp+24], edi
	call	_sk_num
	add	esp, 4
	cmp	DWORD PTR [esi+8], eax
	je	$LN17@tree_link_
; Line 414
	push	edi
	xor	ebx, ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN17@tree_link_
$LL12@tree_link_:
; Line 415
	push	ebx
	push	edi
	call	_sk_value
	mov	edi, eax
; Line 416
	push	edi
	push	esi
	push	ebp
	call	_level_find_node
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN10@tree_link_
; Line 372
	test	edi, edi
	jne	SHORT $LN28@tree_link_
; Line 373
	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR [eax+4]
$LN28@tree_link_:
; Line 378
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax]
	and	eax, 16					; 00000010H
	push	eax
	push	edi
	push	0
	call	_policy_data_new
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 380
	test	edi, edi
	je	$LN35@tree_link_
; Line 383
	mov	eax, DWORD PTR _cache$[esp+16]
; Line 385
	push	DWORD PTR _tree$[esp+16]
	push	esi
	mov	ecx, DWORD PTR [eax]
	push	edi
	push	ebp
	mov	ecx, DWORD PTR [ecx+8]
	or	DWORD PTR [edi], 4
	mov	DWORD PTR [edi+8], ecx
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN49@tree_link_
$LN10@tree_link_:
; Line 414
	mov	edi, DWORD PTR _expset$1$[esp+20]
	inc	ebx
	push	edi
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	SHORT $LL12@tree_link_
; Line 442
	jmp	SHORT $LN17@tree_link_
$LN15@tree_link_:
; Line 403
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN17@tree_link_
; Line 373
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
; Line 378
	mov	eax, DWORD PTR [eax]
	and	eax, 16					; 00000010H
	push	eax
	push	ecx
	push	0
	call	_policy_data_new
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 380
	test	edi, edi
	je	SHORT $LN35@tree_link_
; Line 383
	mov	eax, DWORD PTR _cache$[esp+16]
; Line 385
	push	DWORD PTR _tree$[esp+16]
	push	esi
	mov	ecx, DWORD PTR [eax]
	push	edi
	push	ebp
	mov	ecx, DWORD PTR [ecx+8]
	or	DWORD PTR [edi], 4
	mov	DWORD PTR [edi+8], ecx
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN49@tree_link_
$LN17@tree_link_:
; Line 439
	mov	esi, DWORD PTR _i$1$[esp+16]
	push	DWORD PTR [ebp-12]
	inc	esi
	mov	DWORD PTR _i$1$[esp+20], esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	$LL4@tree_link_
$LN3@tree_link_:
; Line 475
	mov	eax, DWORD PTR [ebp-8]
	test	eax, eax
	je	SHORT $LN7@tree_link_
; Line 476
	push	0
	push	eax
	mov	eax, DWORD PTR _cache$[esp+24]
	push	DWORD PTR [eax]
	push	ebp
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN35@tree_link_
$LN7@tree_link_:
	pop	edi
	pop	esi
	pop	ebp
; Line 479
	mov	eax, 1
	pop	ebx
; Line 480
	pop	ecx
	ret	0
$LN49@tree_link_:
; Line 386
	push	edi
	call	_policy_data_free
	add	esp, 4
$LN35@tree_link_:
	pop	edi
	pop	esi
	pop	ebp
; Line 443
	xor	eax, eax
	pop	ebx
; Line 480
	pop	ecx
	ret	0
_tree_link_any ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_link_unmatched
_TEXT	SEGMENT
_oid$1$ = 8						; size = 4
_curr$ = 8						; size = 4
_cache$ = 12						; size = 4
_node$ = 16						; size = 4
_tree$ = 20						; size = 4
_tree_link_unmatched PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 396
	push	ebx
	push	ebp
; Line 401
	mov	ebp, DWORD PTR _curr$[esp+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _node$[esp+12]
	test	DWORD PTR [ebp-4], 1024			; 00000400H
	jne	SHORT $LN7@tree_link_
	mov	ebx, DWORD PTR [edi]
	test	BYTE PTR [ebx], 1
	je	SHORT $LN7@tree_link_
; Line 410
	mov	ebx, DWORD PTR [ebx+12]
; Line 411
	push	ebx
	call	_sk_num
	add	esp, 4
	cmp	DWORD PTR [edi+8], eax
	je	SHORT $LN26@tree_link_
; Line 414
	push	ebx
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN26@tree_link_
	npad	4
$LL4@tree_link_:
; Line 415
	push	esi
	push	ebx
	call	_sk_value
; Line 416
	push	eax
	push	edi
	push	ebp
	mov	DWORD PTR _oid$1$[esp+32], eax
	call	_level_find_node
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN2@tree_link_
; Line 418
	push	DWORD PTR _tree$[esp+12]
	push	edi
	push	DWORD PTR _oid$1$[esp+20]
	push	DWORD PTR _cache$[esp+24]
	push	ebp
	call	_tree_add_unmatched
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN24@tree_link_
$LN2@tree_link_:
; Line 414
	push	ebx
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@tree_link_
; Line 404
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 426
	ret	0
$LN7@tree_link_:
; Line 403
	cmp	DWORD PTR [edi+8], 0
	je	SHORT $LN8@tree_link_
$LN26@tree_link_:
	pop	edi
	pop	esi
	pop	ebp
; Line 404
	mov	eax, 1
	pop	ebx
; Line 426
	ret	0
$LN8@tree_link_:
; Line 373
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
; Line 378
	mov	eax, DWORD PTR [eax]
	and	eax, 16					; 00000010H
	push	eax
	push	ecx
	push	0
	call	_policy_data_new
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 380
	test	esi, esi
	je	SHORT $LN24@tree_link_
; Line 383
	mov	ecx, DWORD PTR _cache$[esp+12]
; Line 385
	push	DWORD PTR _tree$[esp+12]
	push	edi
	mov	ecx, DWORD PTR [ecx]
	push	esi
	push	ebp
	mov	ecx, DWORD PTR [ecx+8]
	or	DWORD PTR [esi], 4
	mov	DWORD PTR [esi+8], ecx
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN26@tree_link_
; Line 386
	push	esi
	call	_policy_data_free
	add	esp, 4
$LN24@tree_link_:
	pop	edi
	pop	esi
	pop	ebp
; Line 406
	xor	eax, eax
	pop	ebx
; Line 426
	ret	0
_tree_link_unmatched ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_add_unmatched
_TEXT	SEGMENT
_curr$ = 8						; size = 4
_cache$ = 12						; size = 4
_id$ = 16						; size = 4
_node$ = 20						; size = 4
_tree$ = 24						; size = 4
_tree_add_unmatched PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 372
	mov	ecx, DWORD PTR _id$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _node$[esp+4]
	test	ecx, ecx
	jne	SHORT $LN2@tree_add_u
; Line 373
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
$LN2@tree_add_u:
; Line 378
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax]
	and	eax, 16					; 00000010H
	push	eax
	push	ecx
	push	0
	call	_policy_data_new
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 380
	test	esi, esi
	je	SHORT $LN6@tree_add_u
; Line 383
	mov	eax, DWORD PTR _cache$[esp+4]
; Line 385
	push	DWORD PTR _tree$[esp+4]
	push	edi
	mov	eax, DWORD PTR [eax]
	push	esi
	push	DWORD PTR _curr$[esp+16]
	mov	eax, DWORD PTR [eax+8]
	or	DWORD PTR [esi], 4
	mov	DWORD PTR [esi+8], eax
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN4@tree_add_u
; Line 386
	push	esi
	call	_policy_data_free
	add	esp, 4
$LN6@tree_add_u:
; Line 387
	pop	edi
	xor	eax, eax
	pop	esi
; Line 391
	ret	0
$LN4@tree_add_u:
	pop	edi
; Line 390
	mov	eax, 1
	pop	esi
; Line 391
	ret	0
_tree_add_unmatched ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_link_nodes
_TEXT	SEGMENT
_matched$1$ = -8					; size = 4
_i$1$ = -4						; size = 4
_curr$ = 8						; size = 4
_cache$ = 12						; size = 4
_tree_link_nodes PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 335
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 339
	mov	esi, DWORD PTR _cache$[esp+16]
	xor	ebp, ebp
	push	edi
	mov	DWORD PTR _i$1$[esp+24], ebp
	push	DWORD PTR [esi+4]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN3@tree_link_
	mov	ebx, DWORD PTR _curr$[esp+20]
	lea	edi, DWORD PTR [ebx-16]
$LL4@tree_link_:
; Line 340
	push	ebp
	push	DWORD PTR [esi+4]
	call	_sk_value
; Line 313
	push	DWORD PTR [edi+4]
; Line 340
	mov	ebp, eax
; Line 311
	mov	DWORD PTR _matched$1$[esp+36], 0
; Line 313
	xor	esi, esi
	call	_sk_num
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN26@tree_link_
$LL10@tree_link_:
; Line 314
	push	esi
	push	DWORD PTR [edi+4]
	call	_sk_value
; Line 315
	push	DWORD PTR [ebp+4]
	mov	ebx, eax
	push	ebx
	push	edi
	call	_policy_node_match
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN30@tree_link_
; Line 316
	push	0
	push	ebx
	push	ebp
	push	DWORD PTR _curr$[esp+32]
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN19@tree_link_
; Line 318
	mov	ebx, 1
	mov	DWORD PTR _matched$1$[esp+24], ebx
	jmp	SHORT $LN8@tree_link_
$LN30@tree_link_:
	mov	ebx, DWORD PTR _matched$1$[esp+24]
$LN8@tree_link_:
; Line 313
	push	DWORD PTR [edi+4]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL10@tree_link_
; Line 321
	test	ebx, ebx
	jne	SHORT $LN14@tree_link_
	mov	ebx, DWORD PTR _curr$[esp+20]
$LN26@tree_link_:
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN14@tree_link_
; Line 322
	push	0
	push	eax
	push	ebp
	push	ebx
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN19@tree_link_
$LN14@tree_link_:
; Line 339
	mov	esi, DWORD PTR _cache$[esp+20]
	mov	ebp, DWORD PTR _i$1$[esp+24]
	inc	ebp
	mov	DWORD PTR _i$1$[esp+24], ebp
	push	DWORD PTR [esi+4]
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jge	SHORT $LN3@tree_link_
	mov	ebx, DWORD PTR _curr$[esp+20]
	jmp	$LL4@tree_link_
$LN19@tree_link_:
	pop	edi
	pop	esi
	pop	ebp
; Line 356
	xor	eax, eax
	pop	ebx
; Line 359
	add	esp, 8
	ret	0
$LN3@tree_link_:
	pop	edi
	pop	esi
	pop	ebp
; Line 358
	mov	eax, 1
	pop	ebx
; Line 359
	add	esp, 8
	ret	0
_tree_link_nodes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_link_matching_nodes
_TEXT	SEGMENT
_matched$1$ = -4					; size = 4
_curr$ = 8						; size = 4
_data$ = 12						; size = 4
_tree_link_matching_nodes PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 308
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 309
	mov	ebx, DWORD PTR _curr$[esp+4]
	push	ebp
	push	esi
	push	edi
; Line 313
	push	DWORD PTR [ebx-12]
	lea	edi, DWORD PTR [ebx-16]
	mov	DWORD PTR _matched$1$[esp+24], 0
	xor	esi, esi
	call	_sk_num
	mov	ebp, DWORD PTR _data$[esp+20]
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN15@tree_link_
$LL4@tree_link_:
; Line 314
	push	esi
	push	DWORD PTR [edi+4]
	call	_sk_value
; Line 315
	push	DWORD PTR [ebp+4]
	mov	ebx, eax
	push	ebx
	push	edi
	call	_policy_node_match
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN17@tree_link_
; Line 316
	push	0
	push	ebx
	push	ebp
	push	DWORD PTR _curr$[esp+28]
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN11@tree_link_
; Line 318
	mov	ebx, 1
	mov	DWORD PTR _matched$1$[esp+20], ebx
	jmp	SHORT $LN2@tree_link_
$LN17@tree_link_:
	mov	ebx, DWORD PTR _matched$1$[esp+20]
$LN2@tree_link_:
; Line 313
	push	DWORD PTR [edi+4]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@tree_link_
; Line 321
	test	ebx, ebx
	jne	SHORT $LN8@tree_link_
	mov	ebx, DWORD PTR _curr$[esp+16]
$LN15@tree_link_:
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN8@tree_link_
; Line 322
	push	0
	push	eax
	push	ebp
	push	ebx
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN11@tree_link_
$LN8@tree_link_:
	pop	edi
	pop	esi
	pop	ebp
; Line 325
	mov	eax, 1
	pop	ebx
; Line 326
	pop	ecx
	ret	0
$LN11@tree_link_:
	pop	edi
	pop	esi
	pop	ebp
; Line 317
	xor	eax, eax
	pop	ebx
; Line 326
	pop	ecx
	ret	0
_tree_link_matching_nodes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_init
_TEXT	SEGMENT
_explicit_policy$1$ = -20				; size = 4
_cache$2$ = -16						; size = 4
_i$1$ = -16						; size = 4
_n$1$ = -12						; size = 4
_any_skip$1$ = -8					; size = 4
_tree$1$ = -4						; size = 4
_ptree$ = 8						; size = 4
_certs$ = 12						; size = 4
_i$2$ = 16						; size = 4
_flags$ = 16						; size = 4
_tree_init PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 146
	mov	eax, 20					; 00000014H
	call	__chkstk
; Line 157
	mov	eax, DWORD PTR _ptree$[esp+16]
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 158
	push	DWORD PTR _certs$[esp+32]
	mov	esi, 1
	mov	DWORD PTR [eax], 0
	call	_sk_num
; Line 165
	mov	ecx, DWORD PTR _flags$[esp+36]
	add	esp, 4
	mov	edi, eax
	mov	DWORD PTR _n$1$[esp+36], edi
	test	ecx, 256				; 00000100H
	je	SHORT $LN8@tree_init
; Line 166
	xor	ebp, ebp
	jmp	SHORT $LN53@tree_init
$LN8@tree_init:
; Line 168
	lea	ebp, DWORD PTR [edi+1]
$LN53@tree_init:
	mov	DWORD PTR _explicit_policy$1$[esp+36], ebp
; Line 170
	test	ecx, 512				; 00000200H
	je	SHORT $LN10@tree_init
; Line 171
	xor	eax, eax
	jmp	SHORT $LN54@tree_init
$LN10@tree_init:
; Line 173
	lea	eax, DWORD PTR [edi+1]
$LN54@tree_init:
	mov	DWORD PTR _any_skip$1$[esp+36], eax
; Line 175
	test	ecx, 1024				; 00000400H
	je	SHORT $LN12@tree_init
; Line 176
	xor	ebx, ebx
	jmp	SHORT $LN13@tree_init
$LN12@tree_init:
; Line 178
	lea	ebx, DWORD PTR [edi+1]
$LN13@tree_init:
; Line 181
	cmp	edi, 1
	jne	SHORT $LN14@tree_init
$LN23@tree_init:
	pop	edi
; Line 182
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 304
	add	esp, 20					; 00000014H
	ret	0
$LN14@tree_init:
; Line 188
	lea	ecx, DWORD PTR [edi-2]
	mov	eax, ecx
	mov	DWORD PTR _i$2$[esp+32], ecx
	mov	DWORD PTR _i$1$[esp+36], eax
	test	eax, eax
	js	$LN22@tree_init
	npad	4
$LL4@tree_init:
; Line 189
	push	eax
	push	DWORD PTR _certs$[esp+36]
	call	_sk_value
; Line 190
	push	-1
	mov	edi, eax
	push	-1
	push	edi
	call	_X509_check_purpose
; Line 191
	push	edi
	call	_policy_cache_set
	mov	ecx, eax
	add	esp, 24					; 00000018H
; Line 193
	test	ecx, ecx
	je	$LN44@tree_init
; Line 198
	mov	eax, DWORD PTR [edi+40]
	test	eax, 2048				; 00000800H
	je	SHORT $LN16@tree_init
; Line 199
	or	esi, -1
	jmp	SHORT $LN18@tree_init
$LN16@tree_init:
; Line 204
	cmp	esi, 1
	jne	SHORT $LN18@tree_init
	cmp	DWORD PTR [ecx+4], 0
	mov	edx, 2
	cmove	esi, edx
$LN18@tree_init:
; Line 206
	test	ebp, ebp
	jle	SHORT $LN2@tree_init
; Line 207
	test	al, 32					; 00000020H
	jne	SHORT $LN20@tree_init
; Line 208
	dec	ebp
	mov	DWORD PTR _explicit_policy$1$[esp+36], ebp
$LN20@tree_init:
; Line 210
	mov	eax, DWORD PTR [ecx+12]
	cmp	eax, -1
	je	SHORT $LN2@tree_init
	cmp	eax, ebp
	cmovl	ebp, eax
	mov	DWORD PTR _explicit_policy$1$[esp+36], ebp
$LN2@tree_init:
; Line 188
	mov	eax, DWORD PTR _i$1$[esp+36]
	sub	eax, 1
	mov	DWORD PTR _i$1$[esp+36], eax
	jns	SHORT $LL4@tree_init
; Line 215
	cmp	esi, 1
	je	SHORT $LN52@tree_init
; Line 216
	cmp	esi, 2
	jne	$LN23@tree_init
	test	ebp, ebp
	jne	$LN23@tree_init
; Line 217
	pop	edi
	lea	eax, DWORD PTR [esi+4]
	pop	esi
	pop	ebp
	pop	ebx
; Line 304
	add	esp, 20					; 00000014H
	ret	0
$LN52@tree_init:
	mov	edi, DWORD PTR _n$1$[esp+36]
$LN22@tree_init:
; Line 223
	push	223					; 000000dfH
	push	OFFSET ??_C@_0BL@HFHMLGNE@?4?2crypto?2x509v3?2pcy_tree?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _tree$1$[esp+36], esi
; Line 225
	test	esi, esi
	je	$LN44@tree_init
; Line 229
	push	229					; 000000e5H
	shl	edi, 4
	push	OFFSET ??_C@_0BL@HFHMLGNE@?4?2crypto?2x509v3?2pcy_tree?4c?$AA@
	push	edi
	mov	DWORD PTR [esi+20], 0
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
; Line 230
	mov	DWORD PTR [esi+4], 0
; Line 231
	mov	DWORD PTR [esi+8], 0
; Line 232
	mov	DWORD PTR [esi+12], 0
; Line 233
	mov	DWORD PTR [esi+16], 0
; Line 235
	test	eax, eax
	jne	SHORT $LN25@tree_init
; Line 236
	push	esi
	call	_CRYPTO_free
; Line 300
	add	esp, 4
; Line 302
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 304
	add	esp, 20					; 00000014H
	ret	0
$LN25@tree_init:
; Line 240
	push	edi
	push	0
	push	eax
	call	_memset
; Line 242
	mov	eax, DWORD PTR _n$1$[esp+48]
	add	esp, 12					; 0000000cH
; Line 244
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], eax
; Line 248
	push	0
	push	746					; 000002eaH
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	0
	call	_policy_data_new
	add	esp, 12					; 0000000cH
; Line 250
	test	eax, eax
	je	$bad_tree$57
	push	esi
	push	0
	push	eax
	push	edi
	call	_level_add_node
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$bad_tree$57
; Line 253
	mov	eax, DWORD PTR _i$2$[esp+32]
	test	eax, eax
	js	$LN6@tree_init
	mov	ebp, DWORD PTR _any_skip$1$[esp+36]
	lea	esi, DWORD PTR [edi+12]
	npad	4
$LL7@tree_init:
; Line 255
	push	eax
	push	DWORD PTR _certs$[esp+36]
	lea	esi, DWORD PTR [esi+16]
	call	_sk_value
	mov	edi, eax
; Line 256
	push	edi
	call	_policy_cache_set
; Line 257
	push	257					; 00000101H
	push	OFFSET ??_C@_0BL@HFHMLGNE@?4?2crypto?2x509v3?2pcy_tree?4c?$AA@
	push	3
	lea	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR _cache$2$[esp+60], eax
	push	1
	push	ecx
	call	_CRYPTO_add_lock
; Line 260
	mov	eax, DWORD PTR _cache$2$[esp+68]
	add	esp, 32					; 00000020H
	mov	DWORD PTR [esi-12], edi
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN28@tree_init
; Line 261
	or	DWORD PTR [esi], 512			; 00000200H
$LN28@tree_init:
; Line 264
	test	ebp, ebp
	jne	SHORT $LN29@tree_init
; Line 269
	test	BYTE PTR [edi+40], 32			; 00000020H
	je	SHORT $LN32@tree_init
	mov	ecx, DWORD PTR _i$2$[esp+32]
	test	ecx, ecx
	jne	SHORT $LN34@tree_init
$LN32@tree_init:
; Line 270
	or	DWORD PTR [esi], 512			; 00000200H
; Line 271
	jmp	SHORT $LN34@tree_init
$LN29@tree_init:
; Line 272
	test	BYTE PTR [edi+40], 32			; 00000020H
	jne	SHORT $LN33@tree_init
; Line 273
	dec	ebp
$LN33@tree_init:
; Line 275
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	js	SHORT $LN51@tree_init
	cmp	eax, ebp
	cmovl	ebp, eax
$LN51@tree_init:
	mov	eax, DWORD PTR _cache$2$[esp+36]
$LN34@tree_init:
; Line 279
	test	ebx, ebx
	jne	SHORT $LN35@tree_init
; Line 280
	or	DWORD PTR [esi], 1024			; 00000400H
	jmp	SHORT $LN5@tree_init
$LN35@tree_init:
; Line 282
	test	BYTE PTR [edi+40], 32			; 00000020H
	jne	SHORT $LN37@tree_init
; Line 283
	dec	ebx
$LN37@tree_init:
; Line 285
	mov	eax, DWORD PTR [eax+16]
	test	eax, eax
	js	SHORT $LN5@tree_init
	cmp	eax, ebx
	cmovl	ebx, eax
$LN5@tree_init:
; Line 253
	mov	eax, DWORD PTR _i$2$[esp+32]
	sub	eax, 1
	mov	DWORD PTR _i$2$[esp+32], eax
	jns	$LL7@tree_init
	mov	ebp, DWORD PTR _explicit_policy$1$[esp+36]
	mov	esi, DWORD PTR _tree$1$[esp+36]
$LN6@tree_init:
; Line 291
	mov	eax, DWORD PTR _ptree$[esp+32]
	pop	edi
	mov	DWORD PTR [eax], esi
; Line 293
	xor	eax, eax
	test	ebp, ebp
	pop	esi
	sete	al
	pop	ebp
	pop	ebx
	lea	eax, DWORD PTR [eax*4+1]
; Line 304
	add	esp, 20					; 00000014H
	ret	0
$bad_tree$57:
; Line 300
	push	esi
	call	_X509_policy_tree_free
	add	esp, 4
$LN44@tree_init:
; Line 302
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 304
	add	esp, 20					; 00000014H
	ret	0
_tree_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_policy_tree_free
_TEXT	SEGMENT
_tree$ = 8						; size = 4
_X509_policy_tree_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 694
	push	edi
; Line 698
	mov	edi, DWORD PTR _tree$[esp]
	test	edi, edi
	je	$LN1@X509_polic
; Line 701
	push	ebx
	push	esi
	push	DWORD PTR [edi+12]
	call	_sk_free
; Line 702
	push	OFFSET _exnode_free
	push	DWORD PTR [edi+16]
	call	_sk_pop_free
; Line 704
	mov	esi, DWORD PTR [edi]
	xor	ebx, ebx
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR [edi+4], ebx
	jle	SHORT $LN3@X509_polic
$LL4@X509_polic:
; Line 705
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@X509_polic
; Line 706
	push	eax
	call	_X509_free
	add	esp, 4
$LN6@X509_polic:
; Line 707
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN7@X509_polic
; Line 708
	push	OFFSET _policy_node_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN7@X509_polic:
; Line 709
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN2@X509_polic
; Line 710
	push	eax
	call	_policy_node_free
	add	esp, 4
$LN2@X509_polic:
; Line 704
	inc	ebx
	add	esi, 16					; 00000010H
	cmp	ebx, DWORD PTR [edi+4]
	jl	SHORT $LL4@X509_polic
$LN3@X509_polic:
; Line 713
	mov	eax, DWORD PTR [edi+8]
	pop	esi
	pop	ebx
	test	eax, eax
	je	SHORT $LN9@X509_polic
; Line 714
	push	OFFSET _policy_data_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN9@X509_polic:
; Line 716
	push	DWORD PTR [edi]
	call	_CRYPTO_free
; Line 717
	push	edi
	call	_CRYPTO_free
	add	esp, 8
$LN1@X509_polic:
	pop	edi
; Line 719
	ret	0
_X509_policy_tree_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_policy_check
_TEXT	SEGMENT
_tree$ = -8						; size = 4
_auth_nodes$ = -4					; size = 4
_ptree$ = 8						; size = 4
_pexplicit_policy$ = 12					; size = 4
_certs$ = 16						; size = 4
_policy_oids$ = 20					; size = 4
_flags$ = 24						; size = 4
_X509_policy_check PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_tree.c
; Line 733
	mov	eax, 8
	call	__chkstk
; Line 737
	mov	eax, DWORD PTR _ptree$[esp+4]
	push	ebx
	push	esi
	push	edi
; Line 740
	push	DWORD PTR _flags$[esp+16]
	mov	edi, DWORD PTR _pexplicit_policy$[esp+20]
	push	DWORD PTR _certs$[esp+20]
	mov	DWORD PTR [eax], 0
	lea	eax, DWORD PTR _tree$[esp+28]
	push	eax
	mov	DWORD PTR _tree$[esp+32], 0
	mov	DWORD PTR _auth_nodes$[esp+32], 0
	mov	DWORD PTR [edi], 0
	call	_tree_init
; Line 742
	inc	eax
	add	esp, 12					; 0000000cH
	cmp	eax, 7
	ja	SHORT $LN10@X509_polic
	jmp	DWORD PTR $LN25@X509_polic[eax*4]
$LN4@X509_polic:
	pop	edi
	pop	esi
; Line 746
	mov	eax, 1
	pop	ebx
; Line 831
	add	esp, 8
	ret	0
$LN5@X509_polic:
	pop	edi
	pop	esi
; Line 750
	or	eax, -1
	pop	ebx
; Line 831
	add	esp, 8
	ret	0
$LN7@X509_polic:
; Line 759
	mov	DWORD PTR [edi], 1
; Line 760
	mov	eax, -2					; fffffffeH
	pop	edi
	pop	esi
	pop	ebx
; Line 831
	add	esp, 8
	ret	0
$LN8@X509_polic:
; Line 764
	mov	DWORD PTR [edi], 1
$LN10@X509_polic:
; Line 783
	mov	esi, DWORD PTR _tree$[esp+20]
	test	esi, esi
	je	$error$26
$LN23@X509_polic:
; Line 785
	push	esi
	call	_tree_evaluate
	add	esp, 4
; Line 789
	test	eax, eax
	jle	$error$26
; Line 793
	cmp	eax, 2
	jne	SHORT $LN15@X509_polic
; Line 794
	push	esi
	call	_X509_policy_tree_free
	add	esp, 4
; Line 795
	mov	eax, 1
	cmp	DWORD PTR [edi], 0
	mov	ecx, -2					; fffffffeH
	cmovne	eax, ecx
	pop	edi
	pop	esi
	pop	ebx
; Line 831
	add	esp, 8
	ret	0
$LN9@X509_polic:
; Line 770
	mov	esi, DWORD PTR _tree$[esp+20]
	test	esi, esi
	jne	SHORT $LN23@X509_polic
; Line 779
	pop	edi
	lea	eax, DWORD PTR [esi+1]
	pop	esi
	pop	ebx
; Line 831
	add	esp, 8
	ret	0
$LN15@X509_polic:
; Line 803
	lea	eax, DWORD PTR _auth_nodes$[esp+20]
	push	eax
	push	esi
	call	_tree_calculate_authority_set
	mov	ebx, eax
	add	esp, 8
; Line 805
	test	ebx, ebx
	je	SHORT $error$26
; Line 808
	push	DWORD PTR _auth_nodes$[esp+20]
	push	DWORD PTR _policy_oids$[esp+20]
	push	esi
	call	_tree_calculate_user_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $error$26
; Line 811
	cmp	ebx, 2
	jne	SHORT $LN18@X509_polic
; Line 812
	push	DWORD PTR _auth_nodes$[esp+20]
	call	_sk_free
	add	esp, 4
$LN18@X509_polic:
; Line 814
	test	esi, esi
	je	SHORT $LN19@X509_polic
; Line 815
	mov	eax, DWORD PTR _ptree$[esp+16]
	mov	DWORD PTR [eax], esi
$LN19@X509_polic:
; Line 817
	cmp	DWORD PTR [edi], 0
	je	$LN4@X509_polic
; Line 818
	push	esi
	call	_X509_policy_tree_get0_user_policies
; Line 819
	push	eax
	call	_sk_num
	add	esp, 8
	test	eax, eax
	jg	$LN4@X509_polic
; Line 820
	pop	edi
	pop	esi
	mov	eax, -2					; fffffffeH
	pop	ebx
; Line 831
	add	esp, 8
	ret	0
$error$26:
; Line 827
	push	esi
	call	_X509_policy_tree_free
	add	esp, 4
$LN6@X509_polic:
; Line 829
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 831
	add	esp, 8
	ret	0
	npad	1
$LN25@X509_polic:
	DD	$LN5@X509_polic
	DD	$LN6@X509_polic
	DD	$LN9@X509_polic
	DD	$LN4@X509_polic
	DD	$LN10@X509_polic
	DD	$LN10@X509_polic
	DD	$LN8@X509_polic
	DD	$LN7@X509_polic
_X509_policy_check ENDP
_TEXT	ENDS
END

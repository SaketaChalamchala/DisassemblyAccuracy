; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_map.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_policy_cache_set_mapping
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_POLICY_MAPPING_free:PROC
EXTRN	_policy_data_new:PROC
EXTRN	_policy_data_free:PROC
EXTRN	_policy_cache_find_data:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _policy_cache_set_mapping
_TEXT	SEGMENT
_ret$1$ = -4						; size = 4
_x$ = 8							; size = 4
_maps$ = 12						; size = 4
_policy_cache_set_mapping PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_map.c
; Line 72
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
; Line 75
	mov	ebp, DWORD PTR _x$[esp+8]
	push	esi
; Line 78
	mov	esi, DWORD PTR _maps$[esp+12]
	push	edi
	mov	ebp, DWORD PTR [ebp+64]
	push	esi
	mov	DWORD PTR _ret$1$[esp+24], 0
	call	_sk_num
	add	esp, 4
	test	eax, eax
	je	$LN7@policy_cac
; Line 82
	push	esi
	xor	ebx, ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN3@policy_cac
$LL4@policy_cac:
; Line 83
	push	ebx
	push	esi
	call	_sk_value
	mov	edi, eax
; Line 86
	push	DWORD PTR [edi+4]
	call	_OBJ_obj2nid
	add	esp, 12					; 0000000cH
	cmp	eax, 746				; 000002eaH
	je	$LN7@policy_cac
	push	DWORD PTR [edi]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 746				; 000002eaH
	je	$LN7@policy_cac
; Line 92
	push	DWORD PTR [edi]
	push	ebp
	call	_policy_cache_find_data
	mov	esi, eax
	add	esp, 8
; Line 94
	test	esi, esi
	jne	SHORT $LN9@policy_cac
	mov	eax, DWORD PTR [ebp]
	test	eax, eax
	je	SHORT $LN2@policy_cac
; Line 99
	mov	eax, DWORD PTR [eax]
	and	eax, 16					; 00000010H
	push	eax
	push	DWORD PTR [edi]
	push	esi
	call	_policy_data_new
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 102
	test	esi, esi
	je	SHORT $LN14@policy_cac
; Line 104
	mov	eax, DWORD PTR [ebp]
; Line 110
	push	esi
	mov	eax, DWORD PTR [eax+8]
	or	DWORD PTR [esi], 6
	mov	DWORD PTR [esi+8], eax
	push	DWORD PTR [ebp+4]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@policy_cac
; Line 111
	push	esi
	call	_policy_data_free
	add	esp, 4
; Line 112
	jmp	SHORT $LN14@policy_cac
$LN9@policy_cac:
; Line 115
	or	DWORD PTR [esi], 1
$LN10@policy_cac:
; Line 116
	push	DWORD PTR [edi+4]
	push	DWORD PTR [esi+12]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN14@policy_cac
; Line 119
	mov	DWORD PTR [edi+4], 0
$LN2@policy_cac:
; Line 82
	mov	esi, DWORD PTR _maps$[esp+16]
	inc	ebx
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL4@policy_cac
$LN3@policy_cac:
; Line 123
	mov	DWORD PTR _ret$1$[esp+20], 1
$LN14@policy_cac:
; Line 127
	push	OFFSET _POLICY_MAPPING_free
	push	DWORD PTR _maps$[esp+20]
	call	_sk_pop_free
; Line 128
	mov	eax, DWORD PTR _ret$1$[esp+28]
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 130
	pop	ecx
	ret	0
$LN7@policy_cac:
; Line 126
	mov	eax, DWORD PTR _x$[esp+16]
	mov	DWORD PTR _ret$1$[esp+20], -1
	or	DWORD PTR [eax+40], 2048		; 00000800H
	jmp	SHORT $LN14@policy_cac
_policy_cache_set_mapping ENDP
_TEXT	ENDS
END

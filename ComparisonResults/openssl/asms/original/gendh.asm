; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\gendh.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_scanf_options
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_gendh_main
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_02NNFLKHCP@?92?$AA@			; `string'
PUBLIC	??_C@_02JCBKDBOI@?95?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_0BP@KICIFPBK@usage?3?5gendh?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@HHJHEFFN@?5?9out?5file?5?9?5output?5the?5key?5to?5?8@ ; `string'
PUBLIC	??_C@_0CL@DIPAAPBJ@?5?92?5?5?5?5?5?5?5?5?9?5use?52?5as?5the?5genera@ ; `string'
PUBLIC	??_C@_0CL@BFMGINJL@?5?95?5?5?5?5?5?5?5?5?9?5use?55?5as?5the?5genera@ ; `string'
PUBLIC	??_C@_0DI@IGMMGMDL@?5?9engine?5e?5?9?5use?5engine?5e?0?5possi@ ; `string'
PUBLIC	??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0EB@KLOHJNHD@?5?5?5?5?5?5?5?5?5?5?5?9?5load?5the?5file?5?$CIor?5t@ ; `string'
PUBLIC	??_C@_0CK@NBGNPKEI@?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number?5g@ ; `string'
PUBLIC	??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ ; `string'
PUBLIC	??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; `string'
PUBLIC	??_C@_0EA@BEOHJPIA@Generating?5DH?5parameters?0?5?$CFd?5bit@ ; `string'
PUBLIC	??_C@_0CD@OEGFFOKJ@This?5is?5going?5to?5take?5a?5long?5tim@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_DH_new:PROC
EXTRN	_DH_free:PROC
EXTRN	_DH_generate_parameters_ex:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_app_RAND_load_files:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_PEM_write_bio_DHparams:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0CD@OEGFFOKJ@This?5is?5going?5to?5take?5a?5long?5tim@
CONST	SEGMENT
??_C@_0CD@OEGFFOKJ@This?5is?5going?5to?5take?5a?5long?5tim@ DB 'This is g'
	DB	'oing to take a long time', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@BEOHJPIA@Generating?5DH?5parameters?0?5?$CFd?5bit@
CONST	SEGMENT
??_C@_0EA@BEOHJPIA@Generating?5DH?5parameters?0?5?$CFd?5bit@ DB 'Generati'
	DB	'ng DH parameters, %d bit long safe prime, generator %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
CONST	SEGMENT
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ DB '%ld sem'
	DB	'i-random bytes loaded', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
CONST	SEGMENT
??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ DB 'warning, n'
	DB	'ot much extra random data, consider using the -rand option', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@NBGNPKEI@?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number?5g@
CONST	SEGMENT
??_C@_0CK@NBGNPKEI@?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number?5g@ DB ' '
	DB	'            the random number generator', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@KLOHJNHD@?5?5?5?5?5?5?5?5?5?5?5?9?5load?5the?5file?5?$CIor?5t@
CONST	SEGMENT
??_C@_0EB@KLOHJNHD@?5?5?5?5?5?5?5?5?5?5?5?9?5load?5the?5file?5?$CIor?5t@ DB ' '
	DB	'          - load the file (or the files in the directory) int'
	DB	'o', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ DB ' -rand f'
	DB	'ile%cfile%c...', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@IGMMGMDL@?5?9engine?5e?5?9?5use?5engine?5e?0?5possi@
CONST	SEGMENT
??_C@_0DI@IGMMGMDL@?5?9engine?5e?5?9?5use?5engine?5e?0?5possi@ DB ' -engi'
	DB	'ne e - use engine e, possibly a hardware device.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@BFMGINJL@?5?95?5?5?5?5?5?5?5?5?9?5use?55?5as?5the?5genera@
CONST	SEGMENT
??_C@_0CL@BFMGINJL@?5?95?5?5?5?5?5?5?5?5?9?5use?55?5as?5the?5genera@ DB ' '
	DB	'-5        - use 5 as the generator value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DIPAAPBJ@?5?92?5?5?5?5?5?5?5?5?9?5use?52?5as?5the?5genera@
CONST	SEGMENT
??_C@_0CL@DIPAAPBJ@?5?92?5?5?5?5?5?5?5?5?9?5use?52?5as?5the?5genera@ DB ' '
	DB	'-2        - use 2 as the generator value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HHJHEFFN@?5?9out?5file?5?9?5output?5the?5key?5to?5?8@
CONST	SEGMENT
??_C@_0CG@HHJHEFFN@?5?9out?5file?5?9?5output?5the?5key?5to?5?8@ DB ' -out'
	DB	' file - output the key to ''file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KICIFPBK@usage?3?5gendh?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@
CONST	SEGMENT
??_C@_0BP@KICIFPBK@usage?3?5gendh?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@ DB 'u'
	DB	'sage: gendh [args] [numbits]', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JCBKDBOI@?95?$AA@
CONST	SEGMENT
??_C@_02JCBKDBOI@?95?$AA@ DB '-5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NNFLKHCP@?92?$AA@
CONST	SEGMENT
??_C@_02NNFLKHCP@?92?$AA@ DB '-2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gendh_main
_TEXT	SEGMENT
_inrand$1$ = -28					; size = 4
_num$ = -24						; size = 4
_engine$1$ = -20					; size = 4
_outfile$1$ = -16					; size = 4
_cb$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_gendh_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\gendh.c
; Line 92
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 106
	mov	eax, DWORD PTR _bio_err
	push	ebx
	xor	ebx, ebx
	mov	DWORD PTR _num$[esp+32], 2048		; 00000800H
	push	ebp
	push	esi
	push	edi
	xor	esi, esi
	mov	DWORD PTR _outfile$1$[esp+44], ebx
	lea	ebp, DWORD PTR [ebx+2]
	mov	DWORD PTR _inrand$1$[esp+44], esi
	xor	edi, edi
	mov	DWORD PTR _engine$1$[esp+44], ebx
	mov	DWORD PTR _cb$[esp+44], ebp
	mov	DWORD PTR _cb$[esp+48], eax
	mov	DWORD PTR _cb$[esp+52], OFFSET _dh_cb
; Line 107
	test	eax, eax
	jne	SHORT $LN6@gendh_main
; Line 108
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN6@gendh_main
; Line 109
	push	ebp
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN6@gendh_main:
; Line 111
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN46@gendh_main
; Line 115
	mov	edi, DWORD PTR _argc$[esp+40]
	mov	ebx, DWORD PTR _argv$[esp+40]
	dec	edi
	add	ebx, 4
; Line 117
	test	edi, edi
	jle	$LN19@gendh_main
$LL2@gendh_main:
; Line 119
	mov	esi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, esi
	npad	6
$LL47@gendh_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN48@gendh_main
	test	dl, dl
	je	SHORT $LN49@gendh_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN48@gendh_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL47@gendh_main
$LN49@gendh_main:
	xor	eax, eax
	jmp	SHORT $LN50@gendh_main
$LN48@gendh_main:
	sbb	eax, eax
	or	eax, 1
$LN50@gendh_main:
	test	eax, eax
	jne	SHORT $LN9@gendh_main
; Line 120
	dec	edi
	cmp	edi, 1
	jl	$bad$72
; Line 122
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	esi, DWORD PTR _inrand$1$[esp+44]
	mov	DWORD PTR _outfile$1$[esp+44], eax
	jmp	$LN20@gendh_main
$LN9@gendh_main:
; Line 123
	mov	ecx, OFFSET ??_C@_02NNFLKHCP@?92?$AA@
	mov	eax, esi
	npad	3
$LL51@gendh_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN52@gendh_main
	test	dl, dl
	je	SHORT $LN53@gendh_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN52@gendh_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL51@gendh_main
$LN53@gendh_main:
	xor	eax, eax
	jmp	SHORT $LN54@gendh_main
$LN52@gendh_main:
	sbb	eax, eax
	or	eax, 1
$LN54@gendh_main:
	test	eax, eax
	jne	SHORT $LN12@gendh_main
; Line 124
	mov	esi, DWORD PTR _inrand$1$[esp+44]
	lea	ebp, DWORD PTR [eax+2]
	jmp	$LN20@gendh_main
$LN12@gendh_main:
; Line 127
	mov	ecx, OFFSET ??_C@_02JCBKDBOI@?95?$AA@
	mov	eax, esi
	npad	4
$LL55@gendh_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN56@gendh_main
	test	dl, dl
	je	SHORT $LN57@gendh_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN56@gendh_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL55@gendh_main
$LN57@gendh_main:
	xor	eax, eax
	jmp	SHORT $LN58@gendh_main
$LN56@gendh_main:
	sbb	eax, eax
	or	eax, 1
$LN58@gendh_main:
	test	eax, eax
	jne	SHORT $LN14@gendh_main
; Line 128
	mov	esi, DWORD PTR _inrand$1$[esp+44]
	lea	ebp, DWORD PTR [eax+5]
	jmp	$LN20@gendh_main
$LN14@gendh_main:
; Line 130
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
	npad	4
$LL59@gendh_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN60@gendh_main
	test	dl, dl
	je	SHORT $LN61@gendh_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN60@gendh_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL59@gendh_main
$LN61@gendh_main:
	xor	eax, eax
	jmp	SHORT $LN62@gendh_main
$LN60@gendh_main:
	sbb	eax, eax
	or	eax, 1
$LN62@gendh_main:
	test	eax, eax
	jne	SHORT $LN16@gendh_main
; Line 131
	dec	edi
	cmp	edi, 1
	jl	$bad$72
; Line 133
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
; Line 134
	mov	esi, DWORD PTR _inrand$1$[esp+44]
	mov	DWORD PTR _engine$1$[esp+44], eax
	jmp	SHORT $LN20@gendh_main
$LN16@gendh_main:
; Line 136
	mov	eax, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
$LL63@gendh_main:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN64@gendh_main
	test	cl, cl
	je	SHORT $LN65@gendh_main
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN64@gendh_main
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL63@gendh_main
$LN65@gendh_main:
	xor	eax, eax
	jmp	SHORT $LN66@gendh_main
$LN64@gendh_main:
	sbb	eax, eax
	or	eax, 1
$LN66@gendh_main:
	test	eax, eax
	jne	SHORT $LN68@gendh_main
; Line 137
	dec	edi
	cmp	edi, 1
	jl	SHORT $bad$72
; Line 139
	mov	esi, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _inrand$1$[esp+44], esi
$LN20@gendh_main:
; Line 143
	dec	edi
	add	ebx, 4
	test	edi, edi
	jg	$LL2@gendh_main
; Line 117
	jmp	SHORT $LN19@gendh_main
$LN68@gendh_main:
	mov	esi, DWORD PTR _inrand$1$[esp+44]
$LN19@gendh_main:
; Line 145
	cmp	edi, 1
	jl	$LN22@gendh_main
	lea	eax, DWORD PTR _num$[esp+44]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	DWORD PTR [ebx]
	call	_sscanf
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $bad$72
	cmp	DWORD PTR _num$[esp+44], 0
	jge	$LN22@gendh_main
$bad$72:
; Line 147
	push	OFFSET ??_C@_0BP@KICIFPBK@usage?3?5gendh?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 148
	push	OFFSET ??_C@_0CG@HHJHEFFN@?5?9out?5file?5?9?5output?5the?5key?5to?5?8@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 149
	push	OFFSET ??_C@_0CL@DIPAAPBJ@?5?92?5?5?5?5?5?5?5?5?9?5use?52?5as?5the?5genera@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 153
	push	OFFSET ??_C@_0CL@BFMGINJL@?5?95?5?5?5?5?5?5?5?5?9?5use?55?5as?5the?5genera@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 155
	push	OFFSET ??_C@_0DI@IGMMGMDL@?5?9engine?5e?5?9?5use?5engine?5e?0?5possi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 158
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 160
	push	OFFSET ??_C@_0EB@KLOHJNHD@?5?5?5?5?5?5?5?5?5?5?5?9?5load?5the?5file?5?$CIor?5t@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 162
	push	OFFSET ??_C@_0CK@NBGNPKEI@?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number?5g@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 163
	xor	edi, edi
	jmp	SHORT $LN69@gendh_main
$LN22@gendh_main:
; Line 166
	push	0
	push	DWORD PTR _engine$1$[esp+48]
	push	DWORD PTR _bio_err
	call	_setup_engine
; Line 169
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 170
	test	edi, edi
	jne	SHORT $LN24@gendh_main
; Line 171
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
$LN70@gendh_main:
; Line 185
	add	esp, 4
$LN69@gendh_main:
; Line 172
	xor	ebx, ebx
$LN46@gendh_main:
; Line 214
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
	mov	ebp, 1
$LN33@gendh_main:
; Line 215
	test	edi, edi
	je	SHORT $LN34@gendh_main
; Line 216
	push	edi
	call	_BIO_free_all
	add	esp, 4
$LN34@gendh_main:
; Line 217
	test	ebx, ebx
	je	SHORT $LN67@gendh_main
; Line 218
	push	ebx
	call	_DH_free
	add	esp, 4
$LN67@gendh_main:
; Line 220
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 221
	add	esp, 28					; 0000001cH
	ret	0
$LN24@gendh_main:
; Line 175
	mov	ebx, DWORD PTR _outfile$1$[esp+44]
	test	ebx, ebx
	jne	SHORT $LN25@gendh_main
; Line 176
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	edi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN27@gendh_main:
; Line 190
	push	1
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN28@gendh_main
	test	esi, esi
	jne	SHORT $LN45@gendh_main
; Line 191
	push	OFFSET ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 194
	jmp	SHORT $LN29@gendh_main
$LN25@gendh_main:
; Line 184
	push	ebx
	push	5
	push	108					; 0000006cH
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN27@gendh_main
; Line 185
	push	ebx
	call	DWORD PTR __imp__perror
; Line 186
	jmp	$LN70@gendh_main
$LN28@gendh_main:
; Line 194
	test	esi, esi
	je	SHORT $LN29@gendh_main
$LN45@gendh_main:
; Line 195
	push	esi
	call	_app_RAND_load_files
	push	eax
	push	OFFSET ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN29@gendh_main:
; Line 198
	push	ebp
	push	DWORD PTR _num$[esp+48]
	push	OFFSET ??_C@_0EA@BEOHJPIA@Generating?5DH?5parameters?0?5?$CFd?5bit@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 201
	push	OFFSET ??_C@_0CD@OEGFFOKJ@This?5is?5going?5to?5take?5a?5long?5tim@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 204
	call	_DH_new
	mov	ebx, eax
	test	ebx, ebx
	je	$LN46@gendh_main
	lea	eax, DWORD PTR _cb$[esp+44]
	push	eax
	push	ebp
	push	DWORD PTR _num$[esp+52]
	push	ebx
	call	_DH_generate_parameters_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN46@gendh_main
; Line 207
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_write_file
; Line 209
	push	ebx
	push	edi
	call	_PEM_write_bio_DHparams
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN46@gendh_main
; Line 211
	xor	ebp, ebp
; Line 213
	jmp	$LN33@gendh_main
_gendh_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dh_cb
_TEXT	SEGMENT
_c$ = 8							; size = 1
_p$ = 8							; size = 4
_n$ = 12						; size = 4
_cb$ = 16						; size = 4
_dh_cb	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\gendh.c
; Line 227
	mov	ecx, DWORD PTR _p$[esp-4]
	mov	al, 42					; 0000002aH
	test	ecx, ecx
	jne	SHORT $LN2@dh_cb
; Line 228
	mov	BYTE PTR _c$[esp-4], 46			; 0000002eH
; Line 229
	jmp	SHORT $LN5@dh_cb
$LN2@dh_cb:
	cmp	ecx, 1
	jne	SHORT $LN3@dh_cb
; Line 230
	mov	BYTE PTR _c$[esp-4], 43			; 0000002bH
; Line 231
	jmp	SHORT $LN5@dh_cb
$LN3@dh_cb:
	cmp	ecx, 2
	jne	SHORT $LN4@dh_cb
; Line 232
	mov	BYTE PTR _c$[esp-4], 42			; 0000002aH
; Line 233
	jmp	SHORT $LN5@dh_cb
$LN4@dh_cb:
	cmp	ecx, 3
	movzx	eax, al
	mov	edx, 10					; 0000000aH
	cmove	eax, edx
	mov	BYTE PTR _c$[esp-4], al
$LN5@dh_cb:
; Line 235
	push	esi
	mov	esi, DWORD PTR _cb$[esp]
	lea	eax, DWORD PTR _c$[esp]
	push	1
	push	eax
	push	DWORD PTR [esi+4]
	call	_BIO_write
; Line 236
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR [esi+4]
	call	_BIO_ctrl
	add	esp, 28					; 0000001cH
; Line 240
	mov	eax, 1
	pop	esi
; Line 241
	ret	0
_dh_cb	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2268
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2170
	ret	0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 91
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 92
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
END

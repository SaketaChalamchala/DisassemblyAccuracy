; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\pkcs12\p12_p8e.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_PKCS8_encrypt
PUBLIC	??_C@_0BK@DMNJHBA@?4?2crypto?2pkcs12?2p12_p8e?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_EVP_PBE_find:PROC
EXTRN	_X509_ALGOR_free:PROC
EXTRN	_X509_SIG_new:PROC
EXTRN	_X509_SIG_free:PROC
EXTRN	_PKCS5_pbe_set:PROC
EXTRN	_PKCS5_pbe2_set:PROC
EXTRN	_PKCS5_pbe2_set_iv:PROC
EXTRN	_PKCS8_PRIV_KEY_INFO_it:PROC
EXTRN	_PKCS12_item_i2d_encrypt:PROC
;	COMDAT ??_C@_0BK@DMNJHBA@?4?2crypto?2pkcs12?2p12_p8e?4c?$AA@
CONST	SEGMENT
??_C@_0BK@DMNJHBA@?4?2crypto?2pkcs12?2p12_p8e?4c?$AA@ DB '.\crypto\pkcs12'
	DB	'\p12_p8e.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS8_encrypt
_TEXT	SEGMENT
_pbe_nid$ = 8						; size = 4
_cipher$ = 12						; size = 4
_pass$ = 16						; size = 4
_passlen$ = 20						; size = 4
_salt$ = 24						; size = 4
_saltlen$ = 28						; size = 4
_iter$ = 32						; size = 4
_p8inf$ = 36						; size = 4
_PKCS8_encrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs12\p12_p8e.c
; Line 68
	push	esi
	push	edi
; Line 72
	call	_X509_SIG_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN2@PKCS8_encr
; Line 73
	push	73					; 00000049H
	push	OFFSET ??_C@_0BK@DMNJHBA@?4?2crypto?2pkcs12?2p12_p8e?4c?$AA@
	push	65					; 00000041H
; Line 74
	jmp	$LN10@PKCS8_encr
$LN2@PKCS8_encr:
; Line 77
	mov	edi, DWORD PTR _pbe_nid$[esp+4]
	cmp	edi, -1
	jne	SHORT $LN3@PKCS8_encr
; Line 78
	push	DWORD PTR _saltlen$[esp+4]
	push	DWORD PTR _salt$[esp+8]
	push	DWORD PTR _iter$[esp+12]
	push	DWORD PTR _cipher$[esp+16]
	call	_PKCS5_pbe2_set
	jmp	SHORT $LN11@PKCS8_encr
$LN3@PKCS8_encr:
; Line 79
	push	0
	push	0
	push	0
	push	edi
	push	1
	call	_EVP_PBE_find
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN5@PKCS8_encr
; Line 80
	push	edi
	push	0
	push	DWORD PTR _saltlen$[esp+12]
	push	DWORD PTR _salt$[esp+16]
	push	DWORD PTR _iter$[esp+20]
	push	DWORD PTR _cipher$[esp+24]
	call	_PKCS5_pbe2_set_iv
	add	esp, 24					; 00000018H
	jmp	SHORT $LN12@PKCS8_encr
$LN5@PKCS8_encr:
; Line 82
	call	_ERR_clear_error
; Line 83
	push	DWORD PTR _saltlen$[esp+4]
	push	DWORD PTR _salt$[esp+8]
	push	DWORD PTR _iter$[esp+12]
	push	edi
	call	_PKCS5_pbe_set
$LN11@PKCS8_encr:
	add	esp, 16					; 00000010H
$LN12@PKCS8_encr:
	mov	edi, eax
; Line 85
	test	edi, edi
	jne	SHORT $LN7@PKCS8_encr
; Line 86
	push	86					; 00000056H
	push	OFFSET ??_C@_0BK@DMNJHBA@?4?2crypto?2pkcs12?2p12_p8e?4c?$AA@
	push	13					; 0000000dH
; Line 87
	jmp	SHORT $LN10@PKCS8_encr
$LN7@PKCS8_encr:
; Line 89
	push	DWORD PTR [esi]
	call	_X509_ALGOR_free
; Line 91
	push	DWORD PTR [esi+4]
	mov	DWORD PTR [esi], edi
	call	_ASN1_STRING_free
	add	esp, 8
; Line 92
	push	1
	push	DWORD PTR _p8inf$[esp+8]
	push	DWORD PTR _passlen$[esp+12]
	push	DWORD PTR _pass$[esp+16]
	call	_PKCS8_PRIV_KEY_INFO_it
	push	eax
	push	edi
	call	_PKCS12_item_i2d_encrypt
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+4], eax
; Line 95
	test	eax, eax
	jne	SHORT $LN8@PKCS8_encr
; Line 96
	push	96					; 00000060H
	push	OFFSET ??_C@_0BK@DMNJHBA@?4?2crypto?2pkcs12?2p12_p8e?4c?$AA@
	push	103					; 00000067H
$LN10@PKCS8_encr:
	push	125					; 0000007dH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$14:
; Line 103
	push	esi
	call	_X509_SIG_free
	add	esp, 4
; Line 104
	xor	eax, eax
	pop	edi
	pop	esi
; Line 105
	ret	0
$LN8@PKCS8_encr:
	pop	edi
; Line 100
	mov	eax, esi
	pop	esi
; Line 105
	ret	0
_PKCS8_encrypt ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\m_sigver.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EVP_DigestSignInit
PUBLIC	_EVP_DigestSignFinal
PUBLIC	_EVP_DigestVerifyInit
PUBLIC	_EVP_DigestVerifyFinal
PUBLIC	??_C@_0BI@GOIAOBEG@?4?2crypto?2evp?2m_sigver?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_MD_CTX_copy_ex:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_get_default_digest_nid:PROC
EXTRN	_EVP_PKEY_CTX_new:PROC
EXTRN	_EVP_PKEY_CTX_dup:PROC
EXTRN	_EVP_PKEY_CTX_free:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_EVP_PKEY_sign_init:PROC
EXTRN	_EVP_PKEY_sign:PROC
EXTRN	_EVP_PKEY_verify_init:PROC
EXTRN	_EVP_PKEY_verify:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BI@GOIAOBEG@?4?2crypto?2evp?2m_sigver?4c?$AA@
CONST	SEGMENT
??_C@_0BI@GOIAOBEG@?4?2crypto?2evp?2m_sigver?4c?$AA@ DB '.\crypto\evp\m_s'
	DB	'igver.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_sigver_init
_TEXT	SEGMENT
_def_nid$1 = 8						; size = 4
_ctx$ = 8						; size = 4
_pctx$ = 12						; size = 4
_type$ = 16						; size = 4
_e$ = 20						; size = 4
_pkey$ = 24						; size = 4
_ver$ = 28						; size = 4
_do_sigver_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\m_sigver.c
; Line 70
	push	esi
; Line 71
	mov	esi, DWORD PTR _ctx$[esp]
	cmp	DWORD PTR [esi+16], 0
	jne	SHORT $LN2@do_sigver_
; Line 72
	push	DWORD PTR _e$[esp]
	push	DWORD PTR _pkey$[esp+4]
	call	_EVP_PKEY_CTX_new
	add	esp, 8
	mov	DWORD PTR [esi+16], eax
$LN2@do_sigver_:
; Line 73
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	jne	SHORT $LN3@do_sigver_
	pop	esi
; Line 114
	ret	0
$LN3@do_sigver_:
; Line 76
	mov	eax, DWORD PTR [eax]
	push	edi
; Line 78
	mov	edi, DWORD PTR _type$[esp+4]
	test	BYTE PTR [eax+4], 4
	jne	SHORT $LN7@do_sigver_
	test	edi, edi
	jne	SHORT $LN7@do_sigver_
; Line 80
	lea	eax, DWORD PTR _def_nid$1[esp+4]
	push	eax
	push	DWORD PTR _pkey$[esp+8]
	call	_EVP_PKEY_get_default_digest_nid
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN23@do_sigver_
; Line 81
	push	DWORD PTR _def_nid$1[esp+4]
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	mov	edi, eax
	add	esp, 8
; Line 84
	test	edi, edi
	jne	SHORT $LN7@do_sigver_
$LN23@do_sigver_:
; Line 85
	push	85					; 00000055H
	push	OFFSET ??_C@_0BI@GOIAOBEG@?4?2crypto?2evp?2m_sigver?4c?$AA@
	push	158					; 0000009eH
	push	161					; 000000a1H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 86
	xor	eax, eax
	pop	edi
	pop	esi
; Line 114
	ret	0
$LN7@do_sigver_:
; Line 90
	cmp	DWORD PTR _ver$[esp+4], 0
; Line 91
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [ecx]
	je	SHORT $LN8@do_sigver_
	mov	eax, DWORD PTR [eax+68]
	test	eax, eax
	je	SHORT $LN10@do_sigver_
; Line 92
	push	esi
	push	ecx
	call	eax
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN26@do_sigver_
; Line 94
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+16], 128			; 00000080H
	jmp	SHORT $LN17@do_sigver_
$LN10@do_sigver_:
; Line 95
	push	ecx
	call	_EVP_PKEY_verify_init
	add	esp, 4
	test	eax, eax
	jg	SHORT $LN17@do_sigver_
$LN26@do_sigver_:
	pop	edi
; Line 96
	xor	eax, eax
	pop	esi
; Line 114
	ret	0
$LN8@do_sigver_:
; Line 98
	mov	eax, DWORD PTR [eax+60]
	test	eax, eax
	je	SHORT $LN14@do_sigver_
; Line 99
	push	esi
	push	ecx
	call	eax
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN26@do_sigver_
; Line 101
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+16], 64			; 00000040H
	jmp	SHORT $LN17@do_sigver_
$LN14@do_sigver_:
; Line 102
	push	ecx
	call	_EVP_PKEY_sign_init
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN26@do_sigver_
$LN17@do_sigver_:
; Line 105
	push	edi
	push	0
	push	1
	push	248					; 000000f8H
	push	-1
	push	DWORD PTR [esi+16]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN26@do_sigver_
; Line 107
	mov	ecx, DWORD PTR _pctx$[esp+4]
	test	ecx, ecx
	je	SHORT $LN19@do_sigver_
; Line 108
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], eax
$LN19@do_sigver_:
; Line 109
	mov	eax, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [eax]
	test	BYTE PTR [eax+4], 4
	je	SHORT $LN20@do_sigver_
; Line 110
	pop	edi
	mov	eax, 1
	pop	esi
; Line 114
	ret	0
$LN20@do_sigver_:
; Line 111
	push	DWORD PTR _e$[esp+4]
	push	edi
	push	esi
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
; Line 114
	ret	0
_do_sigver_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestVerifyFinal
_TEXT	SEGMENT
_mdlen$ = -100						; size = 4
_sig$GSCopy$1$ = -96					; size = 4
_tmp_ctx$ = -92						; size = 24
_md$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_sig$ = 12						; size = 4
_siglen$ = 16						; size = 4
_EVP_DigestVerifyFinal PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\m_sigver.c
; Line 180
	mov	eax, 100				; 00000064H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+100], eax
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+104]
; Line 187
	xor	ebx, ebx
	push	esi
	mov	esi, DWORD PTR _sig$[esp+108]
	mov	DWORD PTR _sig$GSCopy$1$[esp+112], esi
	mov	eax, DWORD PTR [ebp+16]
	mov	eax, DWORD PTR [eax]
	cmp	DWORD PTR [eax+72], ebx
; Line 191
	lea	eax, DWORD PTR _tmp_ctx$[esp+112]
	push	eax
	setne	bl
	call	_EVP_MD_CTX_init
; Line 192
	lea	eax, DWORD PTR _tmp_ctx$[esp+116]
	push	ebp
	push	eax
	call	_EVP_MD_CTX_copy_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@EVP_Digest
; Line 193
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 203
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN4@EVP_Digest:
; Line 194
	test	ebx, ebx
	je	SHORT $LN5@EVP_Digest
; Line 195
	mov	eax, DWORD PTR _tmp_ctx$[esp+128]
	lea	edx, DWORD PTR _tmp_ctx$[esp+112]
	push	edx
	push	DWORD PTR _siglen$[esp+112]
	mov	ecx, DWORD PTR [eax]
	push	esi
	push	eax
	mov	eax, DWORD PTR [ecx+72]
	call	eax
	add	esp, 16					; 00000010H
; Line 197
	jmp	SHORT $LN10@EVP_Digest
$LN5@EVP_Digest:
; Line 198
	lea	eax, DWORD PTR _mdlen$[esp+112]
	push	eax
	lea	eax, DWORD PTR _md$[esp+116]
	push	eax
	lea	eax, DWORD PTR _tmp_ctx$[esp+120]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
$LN10@EVP_Digest:
	mov	esi, eax
; Line 199
	lea	eax, DWORD PTR _tmp_ctx$[esp+112]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 200
	test	ebx, ebx
	jne	SHORT $LN8@EVP_Digest
	test	esi, esi
	je	SHORT $LN8@EVP_Digest
; Line 202
	push	DWORD PTR _mdlen$[esp+112]
	lea	eax, DWORD PTR _md$[esp+116]
	push	eax
	push	DWORD PTR _siglen$[esp+116]
	push	DWORD PTR _sig$GSCopy$1$[esp+124]
	push	DWORD PTR [ebp+16]
	call	_EVP_PKEY_verify
	add	esp, 20					; 00000014H
	pop	esi
	pop	ebp
	pop	ebx
; Line 203
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN8@EVP_Digest:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+112]
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
_EVP_DigestVerifyFinal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestVerifyInit
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pctx$ = 12						; size = 4
_type$ = 16						; size = 4
_e$ = 20						; size = 4
_pkey$ = 24						; size = 4
_EVP_DigestVerifyInit PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\m_sigver.c
; Line 125
	push	1
	push	DWORD PTR _pkey$[esp]
	push	DWORD PTR _e$[esp+4]
	push	DWORD PTR _type$[esp+8]
	push	DWORD PTR _pctx$[esp+12]
	push	DWORD PTR _ctx$[esp+16]
	call	_do_sigver_init
	add	esp, 24					; 00000018H
; Line 126
	ret	0
_EVP_DigestVerifyInit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestSignFinal
_TEXT	SEGMENT
_sctx$1$ = -100						; size = 4
_r$2$ = -100						; size = 4
_mdlen$1 = -96						; size = 4
_tmp_ctx$2 = -92					; size = 24
_md$3 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_sigret$ = 12						; size = 4
_siglen$ = 16						; size = 4
_EVP_DigestSignFinal PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\m_sigver.c
; Line 130
	mov	eax, 100				; 00000064H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+100], eax
	push	ebx
	mov	ebx, DWORD PTR _siglen$[esp+100]
	push	ebp
	mov	ebp, DWORD PTR _sigret$[esp+104]
	push	esi
	mov	esi, DWORD PTR _ctx$[esp+108]
	push	edi
; Line 132
	mov	edi, DWORD PTR [esi+16]
; Line 133
	mov	eax, DWORD PTR [edi]
	test	BYTE PTR [eax+4], 4
	je	SHORT $LN2@EVP_Digest
; Line 135
	test	ebp, ebp
	jne	SHORT $LN3@EVP_Digest
; Line 136
	mov	eax, DWORD PTR [eax+64]
	push	esi
	push	ebx
	push	ebp
	push	edi
	call	eax
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 176
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN3@EVP_Digest:
; Line 137
	push	edi
	call	_EVP_PKEY_CTX_dup
	mov	edi, eax
	add	esp, 4
; Line 138
	test	edi, edi
	je	$LN19@EVP_Digest
; Line 140
	mov	eax, DWORD PTR [edi]
	push	esi
	push	ebx
	push	ebp
	mov	eax, DWORD PTR [eax+64]
	push	edi
	call	eax
; Line 141
	push	edi
	mov	esi, eax
	call	_EVP_PKEY_CTX_free
	add	esp, 20					; 00000014H
; Line 142
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 176
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN2@EVP_Digest:
; Line 144
	mov	ecx, DWORD PTR [eax+64]
	xor	eax, eax
	test	ecx, ecx
	setne	al
	mov	DWORD PTR _sctx$1$[esp+116], eax
; Line 148
	test	ebp, ebp
	je	$LN7@EVP_Digest
; Line 152
	lea	eax, DWORD PTR _tmp_ctx$2[esp+116]
	push	eax
	call	_EVP_MD_CTX_init
; Line 153
	lea	eax, DWORD PTR _tmp_ctx$2[esp+120]
	push	esi
	push	eax
	call	_EVP_MD_CTX_copy_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN19@EVP_Digest
; Line 155
	mov	edi, DWORD PTR _sctx$1$[esp+116]
	test	edi, edi
	je	SHORT $LN10@EVP_Digest
; Line 156
	mov	eax, DWORD PTR _tmp_ctx$2[esp+132]
	lea	edx, DWORD PTR _tmp_ctx$2[esp+116]
	push	edx
	push	ebx
	push	ebp
	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [ecx+64]
	call	eax
	add	esp, 16					; 00000010H
	jmp	SHORT $LN22@EVP_Digest
$LN10@EVP_Digest:
; Line 159
	lea	eax, DWORD PTR _mdlen$1[esp+116]
	push	eax
	lea	eax, DWORD PTR _md$3[esp+120]
	push	eax
	lea	eax, DWORD PTR _tmp_ctx$2[esp+124]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
$LN22@EVP_Digest:
	mov	DWORD PTR _r$2$[esp+116], eax
; Line 160
	lea	eax, DWORD PTR _tmp_ctx$2[esp+116]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 161
	mov	eax, DWORD PTR _r$2$[esp+120]
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN1@EVP_Digest
	test	eax, eax
	je	SHORT $LN1@EVP_Digest
; Line 163
	push	DWORD PTR _mdlen$1[esp+116]
	lea	eax, DWORD PTR _md$3[esp+120]
	push	eax
	push	ebx
	push	ebp
	push	DWORD PTR [esi+16]
	call	_EVP_PKEY_sign
	add	esp, 20					; 00000014H
$LN23@EVP_Digest:
; Line 167
	test	eax, eax
	jg	SHORT $LN18@EVP_Digest
$LN19@EVP_Digest:
; Line 172
	xor	eax, eax
$LN1@EVP_Digest:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 176
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN7@EVP_Digest:
; Line 166
	test	eax, eax
	je	SHORT $LN15@EVP_Digest
; Line 167
	push	esi
	push	ebx
	push	0
	push	edi
	call	ecx
	add	esp, 16					; 00000010H
; Line 168
	jmp	SHORT $LN23@EVP_Digest
$LN15@EVP_Digest:
; Line 170
	push	DWORD PTR [esi]
	call	_EVP_MD_size
	add	esp, 4
; Line 171
	test	eax, eax
	js	SHORT $LN19@EVP_Digest
	push	eax
	push	0
	push	ebx
	push	0
	push	edi
	call	_EVP_PKEY_sign
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN19@EVP_Digest
$LN18@EVP_Digest:
; Line 176
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
_EVP_DigestSignFinal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestSignInit
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pctx$ = 12						; size = 4
_type$ = 16						; size = 4
_e$ = 20						; size = 4
_pkey$ = 24						; size = 4
_EVP_DigestSignInit PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\m_sigver.c
; Line 119
	push	0
	push	DWORD PTR _pkey$[esp]
	push	DWORD PTR _e$[esp+4]
	push	DWORD PTR _type$[esp+8]
	push	DWORD PTR _pctx$[esp+12]
	push	DWORD PTR _ctx$[esp+16]
	call	_do_sigver_init
	add	esp, 24					; 00000018H
; Line 120
	ret	0
_EVP_DigestSignInit ENDP
_TEXT	ENDS
END

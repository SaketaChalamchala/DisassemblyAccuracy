; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_version
CONST	SEGMENT
_ASN1_version DB 'ASN.1 part of OpenSSL 1.0.2h  3 May 2016', 00H
CONST	ENDS
PUBLIC	_ASN1_STRING_new
PUBLIC	_ASN1_STRING_free
PUBLIC	_ASN1_STRING_clear_free
PUBLIC	_ASN1_STRING_copy
PUBLIC	_ASN1_STRING_dup
PUBLIC	_ASN1_STRING_type_new
PUBLIC	_ASN1_STRING_cmp
PUBLIC	_ASN1_STRING_set
PUBLIC	_ASN1_STRING_set0
PUBLIC	_ASN1_STRING_length
PUBLIC	_ASN1_STRING_length_set
PUBLIC	_ASN1_STRING_type
PUBLIC	_ASN1_STRING_data
PUBLIC	_asn1_Finish
PUBLIC	_asn1_const_Finish
PUBLIC	_ASN1_get_object
PUBLIC	_ASN1_check_infinite_end
PUBLIC	_ASN1_const_check_infinite_end
PUBLIC	_ASN1_put_object
PUBLIC	_ASN1_put_eoc
PUBLIC	_ASN1_object_size
PUBLIC	_asn1_GetSequence
PUBLIC	_asn1_add_error
PUBLIC	??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@ ; `string'
PUBLIC	??_C@_03FKNCMABI@?$CFlu?$AA@			; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_08CPJNFLGB@?5offset?$DN?$AA@		; `string'
PUBLIC	??_C@_08CLFLHNDD@address?$DN?$AA@		; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_realloc:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_08CLFLHNDD@address?$DN?$AA@
CONST	SEGMENT
??_C@_08CLFLHNDD@address?$DN?$AA@ DB 'address=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CPJNFLGB@?5offset?$DN?$AA@
CONST	SEGMENT
??_C@_08CPJNFLGB@?5offset?$DN?$AA@ DB ' offset=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FKNCMABI@?$CFlu?$AA@
CONST	SEGMENT
??_C@_03FKNCMABI@?$CFlu?$AA@ DB '%lu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'sn1_lib.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __asn1_Finish
_TEXT	SEGMENT
_c$ = 8							; size = 4
__asn1_Finish PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 283
	mov	ecx, DWORD PTR _c$[esp-4]
	cmp	DWORD PTR [ecx+12], 33			; 00000021H
	jne	SHORT $LN3@asn1_Finis
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN3@asn1_Finis
; Line 284
	mov	eax, DWORD PTR [ecx+24]
; Line 75
	test	eax, eax
	jle	SHORT $LN3@asn1_Finis
; Line 77
	cmp	eax, 2
	jl	SHORT $LN13@asn1_Finis
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LN13@asn1_Finis
	cmp	BYTE PTR [eax+1], 0
	jne	SHORT $LN13@asn1_Finis
; Line 78
	add	eax, 2
	mov	DWORD PTR [ecx], eax
$LN3@asn1_Finis:
; Line 289
	mov	eax, DWORD PTR [ecx+24]
	test	eax, eax
	je	SHORT $LN16@asn1_Finis
	test	BYTE PTR [ecx+12], 1
	je	SHORT $LN5@asn1_Finis
	test	eax, eax
$LN16@asn1_Finis:
	jns	SHORT $LN4@asn1_Finis
	test	BYTE PTR [ecx+12], 1
	je	SHORT $LN4@asn1_Finis
$LN5@asn1_Finis:
; Line 290
	mov	DWORD PTR [ecx+8], 62			; 0000003eH
; Line 291
	xor	eax, eax
; Line 294
	ret	0
$LN13@asn1_Finis:
; Line 285
	mov	DWORD PTR [ecx+8], 63			; 0000003fH
; Line 286
	xor	eax, eax
; Line 294
	ret	0
$LN4@asn1_Finis:
; Line 293
	mov	eax, 1
; Line 294
	ret	0
__asn1_Finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __asn1_check_infinite_end
_TEXT	SEGMENT
_p$ = 8							; size = 4
_len$ = 12						; size = 4
__asn1_check_infinite_end PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 75
	mov	eax, DWORD PTR _len$[esp-4]
	test	eax, eax
	jle	SHORT $LN6@asn1_check
; Line 77
	cmp	eax, 2
	jl	SHORT $LN4@asn1_check
	mov	ecx, DWORD PTR _p$[esp-4]
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LN4@asn1_check
	cmp	BYTE PTR [eax+1], 0
	jne	SHORT $LN4@asn1_check
; Line 78
	add	eax, 2
	mov	DWORD PTR [ecx], eax
$LN6@asn1_check:
; Line 79
	mov	eax, 1
; Line 82
	ret	0
$LN4@asn1_check:
; Line 81
	xor	eax, eax
; Line 82
	ret	0
__asn1_check_infinite_end ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_put_length
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_length$ = 12						; size = 4
_asn1_put_length PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 240
	mov	edx, DWORD PTR _length$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _pp$[esp+4]
	mov	esi, DWORD PTR [edi]
	cmp	edx, 127				; 0000007fH
	jg	SHORT $LN7@asn1_put_l
; Line 241
	mov	BYTE PTR [esi], dl
	inc	esi
; Line 254
	mov	DWORD PTR [edi], esi
	pop	edi
	pop	esi
; Line 255
	ret	0
$LN7@asn1_put_l:
; Line 244
	xor	eax, eax
	mov	ecx, edx
	test	edx, edx
	jle	SHORT $LN3@asn1_put_l
$LL4@asn1_put_l:
; Line 245
	sar	ecx, 8
	inc	eax
	test	ecx, ecx
	jg	SHORT $LL4@asn1_put_l
$LN3@asn1_put_l:
; Line 246
	mov	cl, al
	or	cl, 128					; 00000080H
	mov	BYTE PTR [esi], cl
	inc	esi
; Line 247
	mov	ecx, eax
; Line 248
	test	eax, eax
	jle	SHORT $LN13@asn1_put_l
$LL5@asn1_put_l:
	dec	eax
; Line 249
	mov	BYTE PTR [eax+esi], dl
; Line 250
	sar	edx, 8
	test	eax, eax
	jg	SHORT $LL5@asn1_put_l
$LN13@asn1_put_l:
; Line 252
	add	esi, ecx
; Line 254
	mov	DWORD PTR [edi], esi
	pop	edi
	pop	esi
; Line 255
	ret	0
_asn1_put_length ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_get_length
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_inf$ = 12						; size = 4
_rl$ = 16						; size = 4
_max$ = 20						; size = 4
_asn1_get_length PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 163
	push	ebx
; Line 164
	mov	ebx, DWORD PTR _pp$[esp]
; Line 165
	xor	eax, eax
	push	edi
; Line 168
	mov	edi, DWORD PTR _max$[esp+4]
	mov	edx, DWORD PTR [ebx]
	cmp	edi, 1
	jge	SHORT $LN4@asn1_get_l
	pop	edi
	pop	ebx
; Line 192
	ret	0
$LN4@asn1_get_l:
; Line 170
	cmp	BYTE PTR [edx], 128			; 00000080H
	push	esi
	jne	SHORT $LN5@asn1_get_l
; Line 171
	mov	eax, DWORD PTR _inf$[esp+8]
	mov	DWORD PTR [eax], 1
; Line 172
	xor	eax, eax
; Line 173
	inc	edx
$LN11@asn1_get_l:
; Line 190
	mov	ecx, DWORD PTR _rl$[esp+8]
	pop	esi
	mov	DWORD PTR [ebx], edx
	pop	edi
	mov	DWORD PTR [ecx], eax
; Line 191
	mov	eax, 1
	pop	ebx
; Line 192
	ret	0
$LN5@asn1_get_l:
; Line 175
	mov	ecx, DWORD PTR _inf$[esp+8]
	mov	DWORD PTR [ecx], eax
; Line 176
	mov	cl, BYTE PTR [edx]
; Line 177
	inc	edx
	movzx	esi, cl
	and	esi, 127				; 0000007fH
	and	cl, 128					; 00000080H
	je	SHORT $LN7@asn1_get_l
; Line 178
	cmp	esi, 4
	ja	SHORT $LN10@asn1_get_l
	lea	ecx, DWORD PTR [edi-1]
	cmp	ecx, esi
	jl	SHORT $LN10@asn1_get_l
; Line 180
	test	esi, esi
	je	SHORT $LN11@asn1_get_l
	npad	2
$LL2@asn1_get_l:
; Line 182
	movzx	ecx, BYTE PTR [edx]
	inc	edx
	shl	eax, 8
	or	eax, ecx
	sub	esi, 1
	jne	SHORT $LL2@asn1_get_l
; Line 184
	jmp	SHORT $LN8@asn1_get_l
$LN7@asn1_get_l:
; Line 185
	mov	eax, esi
$LN8@asn1_get_l:
; Line 187
	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN11@asn1_get_l
$LN10@asn1_get_l:
	pop	esi
	pop	edi
; Line 188
	xor	eax, eax
	pop	ebx
; Line 192
	ret	0
_asn1_get_length ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_add_error
_TEXT	SEGMENT
_buf2$ = -36						; size = 13
_buf1$ = -20						; size = 13
__$ArrayPad$ = -4					; size = 4
_address$ = 8						; size = 4
_offset$ = 12						; size = 4
_asn1_add_error PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 452
	mov	eax, 36					; 00000024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+36], eax
	mov	eax, DWORD PTR _address$[esp+32]
; Line 455
	push	eax
	push	OFFSET ??_C@_03FKNCMABI@?$CFlu?$AA@
	lea	eax, DWORD PTR _buf1$[esp+44]
	push	13					; 0000000dH
	push	eax
	call	_BIO_snprintf
; Line 456
	push	DWORD PTR _offset$[esp+48]
	lea	eax, DWORD PTR _buf2$[esp+56]
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	13					; 0000000dH
	push	eax
	call	_BIO_snprintf
; Line 457
	lea	eax, DWORD PTR _buf2$[esp+68]
	push	eax
	push	OFFSET ??_C@_08CPJNFLGB@?5offset?$DN?$AA@
	lea	eax, DWORD PTR _buf1$[esp+76]
	push	eax
	push	OFFSET ??_C@_08CLFLHNDD@address?$DN?$AA@
	push	4
	call	_ERR_add_error_data
; Line 458
	mov	ecx, DWORD PTR __$ArrayPad$[esp+88]
	add	esp, 52					; 00000034H
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
_asn1_add_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_GetSequence
_TEXT	SEGMENT
_c$ = 8							; size = 4
_length$ = 12						; size = 4
_asn1_GetSequence PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 307
	push	ebx
	push	ebp
	push	esi
; Line 310
	mov	esi, DWORD PTR _c$[esp+8]
	push	edi
; Line 311
	mov	edi, DWORD PTR _length$[esp+12]
	mov	ebx, DWORD PTR [esi]
	lea	eax, DWORD PTR [esi+20]
	lea	ebp, DWORD PTR [esi+16]
	push	DWORD PTR [edi]
	lea	ecx, DWORD PTR [esi+24]
	push	eax
	push	ebp
	push	ecx
	push	esi
	call	_ASN1_get_object
	add	esp, 20					; 00000014H
	mov	DWORD PTR [esi+12], eax
; Line 313
	test	al, al
	jns	SHORT $LN2@asn1_GetSe
; Line 314
	pop	edi
	mov	DWORD PTR [esi+8], 60			; 0000003cH
; Line 315
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 330
	ret	0
$LN2@asn1_GetSe:
; Line 317
	cmp	DWORD PTR [ebp], 16			; 00000010H
	je	SHORT $LN3@asn1_GetSe
; Line 318
	pop	edi
	mov	DWORD PTR [esi+8], 61			; 0000003dH
; Line 319
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 330
	ret	0
$LN3@asn1_GetSe:
; Line 321
	sub	ebx, DWORD PTR [esi]
	add	DWORD PTR [edi], ebx
; Line 322
	cmp	DWORD PTR [esi+28], 0
	mov	ecx, DWORD PTR [edi]
	je	SHORT $LN4@asn1_GetSe
	test	ecx, ecx
	jns	SHORT $LN4@asn1_GetSe
; Line 323
	pop	edi
	mov	DWORD PTR [esi+8], 62			; 0000003eH
; Line 324
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 330
	ret	0
$LN4@asn1_GetSe:
; Line 326
	cmp	DWORD PTR [esi+12], 33			; 00000021H
	jne	SHORT $LN5@asn1_GetSe
; Line 327
	mov	eax, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [esi]
	add	eax, ecx
	mov	DWORD PTR [esi+24], eax
$LN5@asn1_GetSe:
; Line 328
	pop	edi
	mov	DWORD PTR [esi+4], 0
; Line 329
	mov	eax, 1
	pop	esi
	pop	ebp
	pop	ebx
; Line 330
	ret	0
_asn1_GetSequence ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_object_size
_TEXT	SEGMENT
_constructed$ = 8					; size = 4
_length$ = 12						; size = 4
_tag$ = 16						; size = 4
_ASN1_object_size PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 262
	mov	ecx, DWORD PTR _length$[esp-4]
; Line 263
	mov	edx, DWORD PTR _tag$[esp-4]
	lea	eax, DWORD PTR [ecx+1]
	cmp	edx, 31					; 0000001fH
	jl	SHORT $LN3@ASN1_objec
$LL2@ASN1_objec:
; Line 265
	sar	edx, 7
; Line 266
	inc	eax
	test	edx, edx
	jg	SHORT $LL2@ASN1_objec
$LN3@ASN1_objec:
; Line 269
	cmp	DWORD PTR _constructed$[esp-4], 2
	jne	SHORT $LN7@ASN1_objec
; Line 270
	add	eax, 3
; Line 279
	ret	0
$LN7@ASN1_objec:
; Line 271
	inc	eax
; Line 272
	cmp	ecx, 127				; 0000007fH
	jle	SHORT $LN1@ASN1_objec
	npad	7
$LL4@ASN1_objec:
; Line 274
	sar	ecx, 8
; Line 275
	inc	eax
	test	ecx, ecx
	jg	SHORT $LL4@ASN1_objec
$LN1@ASN1_objec:
; Line 279
	ret	0
_ASN1_object_size ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_put_eoc
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_ASN1_put_eoc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 229
	mov	ecx, DWORD PTR _pp$[esp-4]
	mov	eax, DWORD PTR [ecx]
; Line 230
	mov	WORD PTR [eax], 0
; Line 231
	add	eax, 2
; Line 232
	mov	DWORD PTR [ecx], eax
; Line 233
	mov	eax, 2
; Line 234
	ret	0
_ASN1_put_eoc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_put_object
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_constructed$ = 12					; size = 4
_length$ = 16						; size = 4
_tag$ = 20						; size = 4
_xclass$ = 24						; size = 4
_ASN1_put_object PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 204
	mov	eax, DWORD PTR _xclass$[esp-4]
; Line 205
	mov	ecx, DWORD PTR _tag$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR _pp$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _constructed$[esp+8]
	mov	edx, edi
	mov	esi, DWORD PTR [ebx]
	neg	edx
	sbb	edx, edx
	and	eax, 192				; 000000c0H
	and	edx, 32					; 00000020H
	or	edx, eax
	cmp	ecx, 31					; 0000001fH
	jge	SHORT $LN7@ASN1_put_o
; Line 206
	and	cl, 31					; 0000001fH
	or	cl, dl
	mov	BYTE PTR [esi], cl
	inc	esi
	jmp	SHORT $LN8@ASN1_put_o
$LN7@ASN1_put_o:
; Line 208
	or	dl, 31					; 0000001fH
; Line 209
	xor	eax, eax
	mov	BYTE PTR [esi], dl
	inc	esi
	mov	edx, ecx
	test	ecx, ecx
	jle	SHORT $LN3@ASN1_put_o
$LL4@ASN1_put_o:
; Line 210
	sar	edx, 7
	inc	eax
	test	edx, edx
	jg	SHORT $LL4@ASN1_put_o
$LN3@ASN1_put_o:
	push	ebp
; Line 211
	mov	ebp, eax
; Line 212
	test	eax, eax
	jle	SHORT $LN27@ASN1_put_o
	lea	edi, DWORD PTR [eax-1]
$LL5@ASN1_put_o:
	dec	eax
; Line 213
	mov	dl, cl
	and	dl, 127					; 0000007fH
	mov	BYTE PTR [eax+esi], dl
; Line 214
	cmp	eax, edi
	je	SHORT $LN9@ASN1_put_o
; Line 215
	or	dl, 128					; 00000080H
	mov	BYTE PTR [eax+esi], dl
$LN9@ASN1_put_o:
; Line 216
	sar	ecx, 7
	test	eax, eax
	jg	SHORT $LL5@ASN1_put_o
	mov	edi, DWORD PTR _constructed$[esp+12]
$LN27@ASN1_put_o:
; Line 218
	add	esi, ebp
	pop	ebp
$LN8@ASN1_put_o:
; Line 220
	cmp	edi, 2
	jne	SHORT $LN10@ASN1_put_o
; Line 221
	mov	BYTE PTR [esi], 128			; 00000080H
	inc	esi
	pop	edi
; Line 224
	mov	DWORD PTR [ebx], esi
	pop	esi
	pop	ebx
; Line 225
	ret	0
$LN10@ASN1_put_o:
; Line 223
	mov	edx, DWORD PTR _length$[esp+8]
; Line 240
	cmp	edx, 127				; 0000007fH
	jg	SHORT $LN19@ASN1_put_o
; Line 241
	mov	BYTE PTR [esi], dl
	inc	esi
	pop	edi
; Line 224
	mov	DWORD PTR [ebx], esi
	pop	esi
	pop	ebx
; Line 225
	ret	0
$LN19@ASN1_put_o:
; Line 244
	xor	ecx, ecx
	mov	eax, edx
	test	edx, edx
	jle	SHORT $LN15@ASN1_put_o
	npad	2
$LL16@ASN1_put_o:
; Line 245
	sar	eax, 8
	inc	ecx
	test	eax, eax
	jg	SHORT $LL16@ASN1_put_o
$LN15@ASN1_put_o:
; Line 246
	mov	al, cl
	or	al, 128					; 00000080H
	mov	BYTE PTR [esi], al
	inc	esi
; Line 247
	mov	eax, ecx
; Line 248
	test	ecx, ecx
	jle	SHORT $LN30@ASN1_put_o
$LL17@ASN1_put_o:
	dec	ecx
; Line 249
	mov	BYTE PTR [ecx+esi], dl
; Line 250
	sar	edx, 8
	test	ecx, ecx
	jg	SHORT $LL17@ASN1_put_o
$LN30@ASN1_put_o:
; Line 252
	add	esi, eax
	pop	edi
; Line 224
	mov	DWORD PTR [ebx], esi
	pop	esi
	pop	ebx
; Line 225
	ret	0
_ASN1_put_object ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_const_check_infinite_end
_TEXT	SEGMENT
_p$ = 8							; size = 4
_len$ = 12						; size = 4
_ASN1_const_check_infinite_end PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 75
	mov	eax, DWORD PTR _len$[esp-4]
	test	eax, eax
	jle	SHORT $LN8@ASN1_const
; Line 77
	cmp	eax, 2
	jl	SHORT $LN6@ASN1_const
	mov	ecx, DWORD PTR _p$[esp-4]
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LN6@ASN1_const
	cmp	BYTE PTR [eax+1], 0
	jne	SHORT $LN6@ASN1_const
; Line 78
	add	eax, 2
	mov	DWORD PTR [ecx], eax
$LN8@ASN1_const:
; Line 91
	mov	eax, 1
; Line 92
	ret	0
$LN6@ASN1_const:
; Line 91
	xor	eax, eax
; Line 92
	ret	0
_ASN1_const_check_infinite_end ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_check_infinite_end
_TEXT	SEGMENT
_p$ = 8							; size = 4
_len$ = 12						; size = 4
_ASN1_check_infinite_end PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 75
	mov	eax, DWORD PTR _len$[esp-4]
	test	eax, eax
	jle	SHORT $LN8@ASN1_check
; Line 77
	cmp	eax, 2
	jl	SHORT $LN6@ASN1_check
	mov	ecx, DWORD PTR _p$[esp-4]
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LN6@ASN1_check
	cmp	BYTE PTR [eax+1], 0
	jne	SHORT $LN6@ASN1_check
; Line 78
	add	eax, 2
	mov	DWORD PTR [ecx], eax
$LN8@ASN1_check:
; Line 86
	mov	eax, 1
; Line 87
	ret	0
$LN6@ASN1_check:
; Line 86
	xor	eax, eax
; Line 87
	ret	0
_ASN1_check_infinite_end ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_get_object
_TEXT	SEGMENT
_xclass$1$ = -4						; size = 4
_inf$ = -4						; size = 4
_pp$ = 8						; size = 4
_plength$ = 12						; size = 4
_ptag$ = 16						; size = 4
_pclass$ = 20						; size = 4
_p$ = 24						; size = 4
_omax$ = 24						; size = 4
_ASN1_get_object PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 96
	mov	eax, 4
	call	__chkstk
; Line 99
	mov	ecx, DWORD PTR _pp$[esp]
	push	ebx
	push	ebp
; Line 103
	mov	ebp, DWORD PTR _omax$[esp+8]
	mov	ecx, DWORD PTR [ecx]
	push	esi
	push	edi
	test	ebp, ebp
	je	$err$24
; Line 105
	movzx	edi, BYTE PTR [ecx]
; Line 110
	lea	esi, DWORD PTR [ebp-1]
	mov	ebx, edi
	mov	eax, edi
	and	eax, 192				; 000000c0H
	and	edi, 31					; 0000001fH
	and	ebx, 32					; 00000020H
	mov	DWORD PTR _xclass$1$[esp+20], eax
	inc	ecx
	cmp	edi, 31					; 0000001fH
	jne	SHORT $LN5@ASN1_get_o
	test	esi, esi
	je	$err$24
; Line 113
	mov	al, BYTE PTR [ecx]
	xor	edx, edx
	test	al, al
	jns	SHORT $LN3@ASN1_get_o
	npad	1
$LL2@ASN1_get_o:
; Line 115
	movzx	eax, al
	inc	ecx
	and	eax, 127				; 0000007fH
	shl	edx, 7
	or	edx, eax
; Line 116
	sub	esi, 1
	je	$err$24
; Line 118
	cmp	edx, 16777215				; 00ffffffH
	jg	$err$24
; Line 113
	mov	al, BYTE PTR [ecx]
	test	al, al
	js	SHORT $LL2@ASN1_get_o
$LN3@ASN1_get_o:
; Line 122
	movzx	edi, BYTE PTR [ecx]
	inc	ecx
	and	edi, 127				; 0000007fH
	shl	edx, 7
	or	edi, edx
; Line 124
	sub	esi, 1
; Line 126
	jmp	SHORT $LN22@ASN1_get_o
$LN5@ASN1_get_o:
; Line 129
	test	esi, esi
$LN22@ASN1_get_o:
; Line 128
	mov	DWORD PTR _p$[esp+16], ecx
; Line 129
	je	SHORT $err$24
; Line 132
	mov	eax, DWORD PTR _ptag$[esp+16]
; Line 133
	mov	ecx, DWORD PTR _xclass$1$[esp+20]
; Line 134
	push	esi
	push	DWORD PTR _plength$[esp+20]
	mov	DWORD PTR [eax], edi
	mov	eax, DWORD PTR _pclass$[esp+24]
	mov	DWORD PTR [eax], ecx
	lea	eax, DWORD PTR _inf$[esp+28]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	eax
	call	_asn1_get_length
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$24
; Line 137
	mov	esi, DWORD PTR _inf$[esp+20]
	test	esi, esi
	je	SHORT $LN13@ASN1_get_o
	test	bl, 32					; 00000020H
	je	SHORT $err$24
$LN13@ASN1_get_o:
; Line 146
	mov	eax, DWORD PTR _pp$[esp+16]
	mov	edi, DWORD PTR _p$[esp+16]
	mov	ecx, DWORD PTR _plength$[esp+16]
	mov	eax, DWORD PTR [eax]
	sub	eax, edi
	add	eax, ebp
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN14@ASN1_get_o
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	155					; 0000009bH
	push	114					; 00000072H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 152
	or	ebx, 128				; 00000080H
$LN14@ASN1_get_o:
; Line 154
	mov	eax, DWORD PTR _pp$[esp+16]
; Line 155
	or	esi, ebx
	mov	DWORD PTR [eax], edi
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 159
	pop	ecx
	ret	0
$err$24:
; Line 157
	push	157					; 0000009dH
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	123					; 0000007bH
	push	114					; 00000072H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 158
	mov	eax, 128				; 00000080H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 159
	pop	ecx
	ret	0
_ASN1_get_object ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_const_Finish
_TEXT	SEGMENT
_c$ = 8							; size = 4
_asn1_const_Finish PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 303
	jmp	__asn1_Finish
_asn1_const_Finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_Finish
_TEXT	SEGMENT
_c$ = 8							; size = 4
_asn1_Finish PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 298
	jmp	__asn1_Finish
_asn1_Finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_data
_TEXT	SEGMENT
_x$ = 8							; size = 4
_ASN1_STRING_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 478
	mov	eax, DWORD PTR _x$[esp-4]
	mov	eax, DWORD PTR [eax+8]
; Line 479
	ret	0
_ASN1_STRING_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_type
_TEXT	SEGMENT
_x$ = 8							; size = 4
_ASN1_STRING_type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 473
	mov	eax, DWORD PTR _x$[esp-4]
	mov	eax, DWORD PTR [eax+4]
; Line 474
	ret	0
_ASN1_STRING_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_length_set
_TEXT	SEGMENT
_x$ = 8							; size = 4
_len$ = 12						; size = 4
_ASN1_STRING_length_set PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 467
	mov	eax, DWORD PTR _x$[esp-4]
	mov	ecx, DWORD PTR _len$[esp-4]
	mov	DWORD PTR [eax], ecx
; Line 469
	ret	0
_ASN1_STRING_length_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_length
_TEXT	SEGMENT
_x$ = 8							; size = 4
_ASN1_STRING_length PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 462
	mov	eax, DWORD PTR _x$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 463
	ret	0
_ASN1_STRING_length ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_set0
_TEXT	SEGMENT
_str$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_ASN1_STRING_set0 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 392
	push	esi
; Line 393
	mov	esi, DWORD PTR _str$[esp]
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN4@ASN1_STRIN
; Line 394
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@ASN1_STRIN:
; Line 395
	mov	eax, DWORD PTR _data$[esp]
	mov	DWORD PTR [esi+8], eax
; Line 396
	mov	eax, DWORD PTR _len$[esp]
	mov	DWORD PTR [esi], eax
	pop	esi
; Line 397
	ret	0
_ASN1_STRING_set0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_set
_TEXT	SEGMENT
_str$ = 8						; size = 4
__data$ = 12						; size = 4
_len$ = 16						; size = 4
_ASN1_STRING_set PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 359
	push	ebx
; Line 363
	mov	ebx, DWORD PTR __data$[esp]
	push	esi
	mov	esi, DWORD PTR _len$[esp+4]
	test	esi, esi
	jns	SHORT $LN4@ASN1_STRIN
; Line 364
	test	ebx, ebx
	jne	SHORT $LN3@ASN1_STRIN
; Line 365
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 389
	ret	0
$LN3@ASN1_STRIN:
; Line 367
	mov	esi, ebx
	lea	ecx, DWORD PTR [esi+1]
	npad	4
$LL12@ASN1_STRIN:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL12@ASN1_STRIN
	sub	esi, ecx
$LN4@ASN1_STRIN:
	push	ebp
	push	edi
; Line 369
	mov	edi, DWORD PTR _str$[esp+12]
	cmp	DWORD PTR [edi], esi
	jl	SHORT $LN6@ASN1_STRIN
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	jne	SHORT $LN9@ASN1_STRIN
$LN6@ASN1_STRIN:
; Line 370
	mov	ebp, DWORD PTR [edi+8]
; Line 372
	lea	eax, DWORD PTR [esi+1]
	test	ebp, ebp
	jne	SHORT $LN7@ASN1_STRIN
	push	372					; 00000174H
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN15@ASN1_STRIN
$LN7@ASN1_STRIN:
; Line 374
	push	374					; 00000176H
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	eax
	push	ebp
	call	_CRYPTO_realloc
	add	esp, 16					; 00000010H
$LN15@ASN1_STRIN:
	mov	DWORD PTR [edi+8], eax
; Line 376
	test	eax, eax
	jne	SHORT $LN9@ASN1_STRIN
; Line 377
	push	377					; 00000179H
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	65					; 00000041H
	push	186					; 000000baH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 378
	mov	DWORD PTR [edi+8], ebp
; Line 379
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	esi
	pop	ebx
; Line 389
	ret	0
$LN9@ASN1_STRIN:
; Line 382
	mov	DWORD PTR [edi], esi
; Line 383
	test	ebx, ebx
	je	SHORT $LN10@ASN1_STRIN
; Line 384
	push	esi
	push	ebx
	push	eax
	call	_memcpy
; Line 386
	mov	eax, DWORD PTR [edi+8]
	add	esp, 12					; 0000000cH
	mov	BYTE PTR [esi+eax], 0
$LN10@ASN1_STRIN:
; Line 388
	pop	edi
	pop	ebp
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 389
	ret	0
_ASN1_STRING_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_ASN1_STRING_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 437
	push	ebx
; Line 440
	mov	ebx, DWORD PTR _b$[esp]
	push	edi
	mov	edi, DWORD PTR _a$[esp+4]
	mov	ecx, DWORD PTR [edi]
	mov	eax, ecx
	sub	eax, DWORD PTR [ebx]
; Line 441
	jne	SHORT $LN3@ASN1_STRIN
; Line 442
	mov	edx, DWORD PTR [edi+8]
	push	esi
	mov	esi, DWORD PTR [ebx+8]
	sub	ecx, 4
	jb	SHORT $LN9@ASN1_STRIN
	npad	2
$LL10@ASN1_STRIN:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN8@ASN1_STRIN
	add	edx, 4
	add	esi, 4
	sub	ecx, 4
	jae	SHORT $LL10@ASN1_STRIN
$LN9@ASN1_STRIN:
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN7@ASN1_STRIN
$LN8@ASN1_STRIN:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [esi]
	jne	SHORT $LN11@ASN1_STRIN
	cmp	ecx, -3					; fffffffdH
	je	SHORT $LN7@ASN1_STRIN
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [esi+1]
	jne	SHORT $LN11@ASN1_STRIN
	cmp	ecx, -2					; fffffffeH
	je	SHORT $LN7@ASN1_STRIN
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [esi+2]
	jne	SHORT $LN11@ASN1_STRIN
	cmp	ecx, -1
	je	SHORT $LN7@ASN1_STRIN
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [esi+3]
	je	SHORT $LN7@ASN1_STRIN
$LN11@ASN1_STRIN:
	sbb	eax, eax
	or	eax, 1
	jmp	SHORT $LN12@ASN1_STRIN
$LN7@ASN1_STRIN:
	xor	eax, eax
$LN12@ASN1_STRIN:
	pop	esi
; Line 443
	test	eax, eax
	jne	SHORT $LN3@ASN1_STRIN
; Line 444
	mov	eax, DWORD PTR [edi+4]
	sub	eax, DWORD PTR [ebx+4]
$LN3@ASN1_STRIN:
; Line 449
	pop	edi
	pop	ebx
	ret	0
_ASN1_STRING_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_type_new
_TEXT	SEGMENT
_type$ = 8						; size = 4
_ASN1_STRING_type_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 408
	push	408					; 00000198H
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	16					; 00000010H
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 409
	test	ecx, ecx
	jne	SHORT $LN2@ASN1_STRIN
; Line 410
	push	410					; 0000019aH
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	65					; 00000041H
	push	130					; 00000082H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 411
	xor	eax, eax
; Line 418
	ret	0
$LN2@ASN1_STRIN:
; Line 414
	mov	eax, DWORD PTR _type$[esp-4]
	mov	DWORD PTR [ecx+4], eax
; Line 417
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
; Line 418
	ret	0
_ASN1_STRING_type_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_dup
_TEXT	SEGMENT
_str$ = 8						; size = 4
_ASN1_STRING_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 344
	push	edi
; Line 346
	mov	edi, DWORD PTR _str$[esp]
	test	edi, edi
	jne	SHORT $LN2@ASN1_STRIN
; Line 347
	xor	eax, eax
	pop	edi
; Line 356
	ret	0
$LN2@ASN1_STRIN:
	push	esi
; Line 348
	call	_ASN1_STRING_new
	mov	esi, eax
; Line 349
	test	esi, esi
	je	SHORT $LN16@ASN1_STRIN
; Line 336
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], eax
; Line 337
	push	DWORD PTR [edi]
	push	DWORD PTR [edi+8]
	push	esi
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN14@ASN1_STRIN
; Line 339
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
; Line 355
	mov	eax, esi
	pop	esi
	pop	edi
; Line 356
	ret	0
$LN14@ASN1_STRIN:
; Line 424
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN12@ASN1_STRIN
	test	BYTE PTR [esi+12], 16			; 00000010H
	jne	SHORT $LN12@ASN1_STRIN
; Line 425
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN12@ASN1_STRIN:
; Line 426
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN16@ASN1_STRIN:
	pop	esi
; Line 353
	xor	eax, eax
	pop	edi
; Line 356
	ret	0
_ASN1_STRING_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_copy
_TEXT	SEGMENT
_dst$ = 8						; size = 4
_str$ = 12						; size = 4
_ASN1_STRING_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 333
	push	esi
; Line 334
	mov	esi, DWORD PTR _str$[esp]
	test	esi, esi
	jne	SHORT $LN2@ASN1_STRIN
; Line 335
	xor	eax, eax
	pop	esi
; Line 341
	ret	0
$LN2@ASN1_STRIN:
; Line 336
	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR _dst$[esp+4]
	mov	DWORD PTR [edi+4], eax
; Line 337
	push	DWORD PTR [esi]
	push	DWORD PTR [esi+8]
	push	edi
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@ASN1_STRIN
	pop	edi
	pop	esi
; Line 341
	ret	0
$LN3@ASN1_STRIN:
; Line 339
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [edi+12], eax
; Line 340
	mov	eax, 1
	pop	edi
	pop	esi
; Line 341
	ret	0
_ASN1_STRING_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_clear_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_ASN1_STRING_clear_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 430
	push	esi
; Line 431
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	SHORT $LN4@ASN1_STRIN
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN2@ASN1_STRIN
	test	BYTE PTR [esi+12], 16			; 00000010H
	jne	SHORT $LN2@ASN1_STRIN
; Line 432
	push	DWORD PTR [esi]
	push	eax
	call	_OPENSSL_cleanse
	add	esp, 8
$LN2@ASN1_STRIN:
; Line 424
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN6@ASN1_STRIN
	test	BYTE PTR [esi+12], 16			; 00000010H
	jne	SHORT $LN6@ASN1_STRIN
; Line 425
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN6@ASN1_STRIN:
; Line 426
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN4@ASN1_STRIN:
	pop	esi
; Line 434
	ret	0
_ASN1_STRING_clear_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_ASN1_STRING_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 421
	push	esi
; Line 422
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	SHORT $LN1@ASN1_STRIN
; Line 424
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN3@ASN1_STRIN
	test	BYTE PTR [esi+12], 16			; 00000010H
	jne	SHORT $LN3@ASN1_STRIN
; Line 425
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@ASN1_STRIN:
; Line 426
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@ASN1_STRIN:
	pop	esi
; Line 427
	ret	0
_ASN1_STRING_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_STRING_new
_TEXT	SEGMENT
_ASN1_STRING_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_lib.c
; Line 408
	push	408					; 00000198H
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	16					; 00000010H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 409
	test	eax, eax
	jne	SHORT $LN4@ASN1_STRIN
; Line 410
	push	410					; 0000019aH
	push	OFFSET ??_C@_0BJ@BDGDICBL@?4?2crypto?2asn1?2asn1_lib?4c?$AA@
	push	65					; 00000041H
	push	130					; 00000082H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 401
	xor	eax, eax
; Line 402
	ret	0
$LN4@ASN1_STRIN:
; Line 413
	mov	DWORD PTR [eax], 0
; Line 414
	mov	DWORD PTR [eax+4], 4
; Line 415
	mov	DWORD PTR [eax+8], 0
; Line 416
	mov	DWORD PTR [eax+12], 0
; Line 402
	ret	0
_ASN1_STRING_new ENDP
_TEXT	ENDS
END

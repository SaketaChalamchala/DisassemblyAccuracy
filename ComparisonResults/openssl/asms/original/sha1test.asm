; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha1test.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03FIKCJHKP@abc?$AA@			; `string'
PUBLIC	??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@ ; `string'
PUBLIC	??_C@_0CJ@PMFGNMLE@a9993e364706816aba3e25717850c26c@ ; `string'
PUBLIC	??_C@_0CJ@OPFHKAHO@84983e441c3bd26ebaae4aa1f95129e5@ ; `string'
PUBLIC	??_C@_0CJ@CHKPCANO@34aa973cd4c4daa4f61eeb2bdbad2731@ ; `string'
;	COMDAT ??_C@_0CJ@CHKPCANO@34aa973cd4c4daa4f61eeb2bdbad2731@
CONST	SEGMENT
??_C@_0CJ@CHKPCANO@34aa973cd4c4daa4f61eeb2bdbad2731@ DB '34aa973cd4c4daa4'
	DB	'f61eeb2bdbad27316534016f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OPFHKAHO@84983e441c3bd26ebaae4aa1f95129e5@
CONST	SEGMENT
??_C@_0CJ@OPFHKAHO@84983e441c3bd26ebaae4aa1f95129e5@ DB '84983e441c3bd26e'
	DB	'baae4aa1f95129e5e54670f1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PMFGNMLE@a9993e364706816aba3e25717850c26c@
CONST	SEGMENT
??_C@_0CJ@PMFGNMLE@a9993e364706816aba3e25717850c26c@ DB 'a9993e364706816a'
	DB	'ba3e25717850c26c9cd0d89d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@
CONST	SEGMENT
??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@ DB 'abcdbcdecdefdefg'
	DB	'efghfghighijhijkijkljklmklmnlmnomnopnopq', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FIKCJHKP@abc?$AA@
CONST	SEGMENT
??_C@_03FIKCJHKP@abc?$AA@ DB 'abc', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_test	DD	FLAT:??_C@_03FIKCJHKP@abc?$AA@
	DD	FLAT:??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@
	DD	00H
_ret	DD	FLAT:??_C@_0CJ@PMFGNMLE@a9993e364706816aba3e25717850c26c@
	DD	FLAT:??_C@_0CJ@OPFHKAHO@84983e441c3bd26ebaae4aa1f95129e5@
_bigret	DD	FLAT:??_C@_0CJ@CHKPCANO@34aa973cd4c4daa4f61eeb2bdbad2731@
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_main
PUBLIC	??_C@_0CA@POMAEAIA@error?5calculating?5SHA1?5on?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@IMOFIMJK@got?5?$CFs?5instead?5of?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0M@NJKLCIBI@test?5?$CFd?5ok?6?$AA@	; `string'
PUBLIC	??_C@_0CG@ELDIBPCE@error?5calculating?5SHA1?5on?5?8a?8?5?$CK?5@ ; `string'
PUBLIC	??_C@_0L@FNMDIIKJ@test?53?5ok?6?$AA@		; `string'
PUBLIC	??_C@_04NOJCDH@?$CF02x?$AA@			; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp__exit:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_Digest:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
?buf@?1??main@@9@9 DB 03e8H DUP (?)			; `main'::`2'::buf
?buf@?1??pt@@9@9 DB 050H DUP (?)			; `pt'::`2'::buf
_BSS	ENDS
;	COMDAT ??_C@_04NOJCDH@?$CF02x?$AA@
CONST	SEGMENT
??_C@_04NOJCDH@?$CF02x?$AA@ DB '%02x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FNMDIIKJ@test?53?5ok?6?$AA@
CONST	SEGMENT
??_C@_0L@FNMDIIKJ@test?53?5ok?6?$AA@ DB 'test 3 ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ELDIBPCE@error?5calculating?5SHA1?5on?5?8a?8?5?$CK?5@
CONST	SEGMENT
??_C@_0CG@ELDIBPCE@error?5calculating?5SHA1?5on?5?8a?8?5?$CK?5@ DB 'error'
	DB	' calculating SHA1 on ''a'' * 1000', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJKLCIBI@test?5?$CFd?5ok?6?$AA@
CONST	SEGMENT
??_C@_0M@NJKLCIBI@test?5?$CFd?5ok?6?$AA@ DB 'test %d ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IMOFIMJK@got?5?$CFs?5instead?5of?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@IMOFIMJK@got?5?$CFs?5instead?5of?5?$CFs?6?$AA@ DB 'got %s inste'
	DB	'ad of %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@POMAEAIA@error?5calculating?5SHA1?5on?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0CA@POMAEAIA@error?5calculating?5SHA1?5on?5?8?$CFs?8?6?$AA@ DB 'err'
	DB	'or calculating SHA1 on ''%s''', 0aH, 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_err$1$ = -52						; size = 4
_c$ = -48						; size = 24
_md$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha1test.c
; Line 107
	mov	eax, 52					; 00000034H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+52], eax
	push	ebx
	push	ebp
	push	esi
; Line 120
	lea	eax, DWORD PTR _c$[esp+64]
	xor	ebx, ebx
	push	edi
	push	eax
	mov	DWORD PTR _err$1$[esp+72], ebx
	call	_EVP_MD_CTX_init
	add	esp, 4
; Line 123
	lea	ebp, DWORD PTR [ebx+1]
; Line 124
	cmp	DWORD PTR _test, ebx
	je	$LN3@main
	npad	5
$LL2@main:
; Line 125
	mov	esi, DWORD PTR _test[ebx]
	lea	ecx, DWORD PTR [esi+1]
	npad	7
$LL38@main:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL38@main
	push	0
	sub	esi, ecx
	call	_EVP_sha1
	push	eax
	push	0
	lea	eax, DWORD PTR _md$[esp+80]
	push	eax
	push	esi
	push	DWORD PTR _test[ebx]
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	mov	esi, OFFSET ?buf@?1??pt@@9@9
; Line 170
	xor	edi, edi
	npad	2
$LL15@main:
; Line 171
	movzx	eax, BYTE PTR _md$[esp+edi+68]
	push	eax
	push	OFFSET ??_C@_04NOJCDH@?$CF02x?$AA@
	push	esi
	call	_sprintf
	add	esi, 2
	lea	edi, DWORD PTR [edi+1]
	add	esp, 12					; 0000000cH
	cmp	esi, OFFSET ?buf@?1??pt@@9@9+40
	jl	SHORT $LL15@main
; Line 127
	mov	ecx, DWORD PTR _ret[ebx]
	mov	eax, OFFSET ?buf@?1??pt@@9@9
	npad	3
$LL39@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN40@main
	test	dl, dl
	je	SHORT $LN41@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN40@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL39@main
$LN41@main:
	xor	eax, eax
	jmp	SHORT $LN42@main
$LN40@main:
	sbb	eax, eax
	or	eax, 1
$LN42@main:
	test	eax, eax
	je	SHORT $LN7@main
; Line 128
	push	DWORD PTR _test[ebx]
	push	OFFSET ??_C@_0CA@POMAEAIA@error?5calculating?5SHA1?5on?5?8?$CFs?8?6?$AA@
	call	_printf
; Line 129
	push	DWORD PTR _ret[ebx]
	push	OFFSET ?buf@?1??pt@@9@9
	push	OFFSET ??_C@_0BG@IMOFIMJK@got?5?$CFs?5instead?5of?5?$CFs?6?$AA@
	call	_printf
	add	esp, 20					; 00000014H
; Line 130
	inc	DWORD PTR _err$1$[esp+68]
; Line 131
	jmp	SHORT $LN8@main
$LN7@main:
; Line 132
	push	ebp
	push	OFFSET ??_C@_0M@NJKLCIBI@test?5?$CFd?5ok?6?$AA@
	call	_printf
	add	esp, 8
$LN8@main:
; Line 133
	add	ebx, 4
	inc	ebp
	cmp	DWORD PTR _test[ebx], 0
	jne	$LL2@main
	mov	ebx, DWORD PTR _err$1$[esp+68]
$LN3@main:
; Line 138
	push	1000					; 000003e8H
	push	97					; 00000061H
	push	OFFSET ?buf@?1??main@@9@9
	call	_memset
	add	esp, 12					; 0000000cH
; Line 142
	push	0
	call	_EVP_sha1
	push	eax
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	mov	esi, 1000				; 000003e8H
	npad	8
$LL6@main:
; Line 144
	push	1000					; 000003e8H
	lea	eax, DWORD PTR _c$[esp+72]
	push	OFFSET ?buf@?1??main@@9@9
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	sub	esi, 1
	jne	SHORT $LL6@main
; Line 145
	push	esi
	lea	eax, DWORD PTR _md$[esp+72]
	push	eax
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	mov	esi, OFFSET ?buf@?1??pt@@9@9
; Line 170
	xor	edi, edi
	npad	10
$LL20@main:
; Line 171
	movzx	eax, BYTE PTR _md$[esp+edi+68]
	push	eax
	push	OFFSET ??_C@_04NOJCDH@?$CF02x?$AA@
	push	esi
	call	_sprintf
	add	esi, 2
	lea	edi, DWORD PTR [edi+1]
	add	esp, 12					; 0000000cH
	cmp	esi, OFFSET ?buf@?1??pt@@9@9+40
	jl	SHORT $LL20@main
; Line 149
	mov	esi, DWORD PTR _bigret
	mov	eax, OFFSET ?buf@?1??pt@@9@9
	mov	ecx, esi
	npad	1
$LL43@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN44@main
	test	dl, dl
	je	SHORT $LN45@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN44@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL43@main
$LN45@main:
	xor	eax, eax
	jmp	SHORT $LN46@main
$LN44@main:
	sbb	eax, eax
	or	eax, 1
$LN46@main:
	test	eax, eax
	je	SHORT $LN9@main
; Line 150
	push	OFFSET ??_C@_0CG@ELDIBPCE@error?5calculating?5SHA1?5on?5?8a?8?5?$CK?5@
	call	_printf
; Line 151
	push	esi
	push	OFFSET ?buf@?1??pt@@9@9
	push	OFFSET ??_C@_0BG@IMOFIMJK@got?5?$CFs?5instead?5of?5?$CFs?6?$AA@
	call	_printf
	add	esp, 16					; 00000010H
; Line 152
	inc	ebx
; Line 153
	jmp	SHORT $LN10@main
$LN9@main:
; Line 154
	push	OFFSET ??_C@_0L@FNMDIIKJ@test?53?5ok?6?$AA@
	call	_printf
	add	esp, 4
$LN10@main:
; Line 160
	lea	eax, DWORD PTR _c$[esp+68]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 161
	push	ebx
	call	DWORD PTR __imp__exit
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
$LN48@main:
$LN47@main:
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pt
_TEXT	SEGMENT
_md$ = 8						; size = 4
_pt	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha1test.c
; Line 166
	push	ebx
; Line 170
	mov	ebx, DWORD PTR _md$[esp]
	push	esi
	push	edi
	xor	edi, edi
	mov	esi, OFFSET ?buf@?1??pt@@9@9
	npad	2
$LL4@pt:
; Line 171
	movzx	eax, BYTE PTR [edi+ebx]
	push	eax
	push	OFFSET ??_C@_04NOJCDH@?$CF02x?$AA@
	push	esi
	call	_sprintf
	add	esi, 2
	lea	edi, DWORD PTR [edi+1]
	add	esp, 12					; 0000000cH
	cmp	esi, OFFSET ?buf@?1??pt@@9@9+40
	jl	SHORT $LL4@pt
; Line 172
	pop	edi
	pop	esi
	mov	eax, OFFSET ?buf@?1??pt@@9@9
	pop	ebx
; Line 173
	ret	0
_pt	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1788
	ret	0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1460
	ret	0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1391
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

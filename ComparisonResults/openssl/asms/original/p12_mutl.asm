; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\pkcs12\p12_mutl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_PKCS12_gen_mac
PUBLIC	_PKCS12_verify_mac
PUBLIC	_PKCS12_set_mac
PUBLIC	_PKCS12_setup_mac
PUBLIC	??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_memcmp:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_ASN1_INTEGER_get:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_HMAC_CTX_init:PROC
EXTRN	_HMAC_CTX_cleanup:PROC
EXTRN	_HMAC_Init_ex:PROC
EXTRN	_HMAC_Update:PROC
EXTRN	_HMAC_Final:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_PKCS12_key_gen_asc:PROC
EXTRN	_PKCS12_MAC_DATA_new:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
CONST	SEGMENT
??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@ DB '.\crypto\pkcs'
	DB	'12\p12_mutl.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS12_setup_mac
_TEXT	SEGMENT
_p12$ = 8						; size = 4
_iter$ = 12						; size = 4
_salt$ = 16						; size = 4
_saltlen$ = 20						; size = 4
_md_type$ = 24						; size = 4
_PKCS12_setup_mac PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs12\p12_mutl.c
; Line 161
	push	esi
; Line 162
	call	_PKCS12_MAC_DATA_new
	mov	esi, DWORD PTR _p12$[esp]
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	jne	SHORT $LN2@PKCS12_set
	pop	esi
; Line 194
	ret	0
$LN2@PKCS12_set:
	push	edi
; Line 164
	mov	edi, DWORD PTR _iter$[esp+4]
	cmp	edi, 1
	jle	SHORT $LN5@PKCS12_set
; Line 165
	push	2
	call	_ASN1_STRING_type_new
	mov	ecx, DWORD PTR [esi+4]
	add	esp, 4
	mov	DWORD PTR [ecx+8], eax
	test	eax, eax
	jne	SHORT $LN4@PKCS12_set
; Line 166
	push	166					; 000000a6H
; Line 167
	jmp	$LN14@PKCS12_set
$LN4@PKCS12_set:
; Line 169
	mov	eax, DWORD PTR [esi+4]
	push	edi
	push	DWORD PTR [eax+8]
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@PKCS12_set
; Line 170
	push	170					; 000000aaH
; Line 171
	jmp	$LN14@PKCS12_set
$LN5@PKCS12_set:
; Line 174
	mov	edi, DWORD PTR _saltlen$[esp+4]
	mov	eax, 8
	test	edi, edi
; Line 176
	push	176					; 000000b0H
	cmove	edi, eax
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	mov	ecx, DWORD PTR [esi+4]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx+8], eax
	test	eax, eax
	jne	SHORT $LN7@PKCS12_set
; Line 177
	push	177					; 000000b1H
; Line 178
	jmp	SHORT $LN14@PKCS12_set
$LN7@PKCS12_set:
; Line 180
	mov	eax, DWORD PTR [esi+4]
; Line 182
	push	edi
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], edi
	mov	eax, DWORD PTR _salt$[esp+8]
	test	eax, eax
	jne	SHORT $LN8@PKCS12_set
	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax+8]
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN9@PKCS12_set
; Line 183
	pop	edi
	xor	eax, eax
	pop	esi
; Line 194
	ret	0
$LN8@PKCS12_set:
; Line 185
	push	eax
	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax+8]
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN9@PKCS12_set:
; Line 186
	push	DWORD PTR _md_type$[esp+4]
	call	_EVP_MD_type
	push	eax
	call	_OBJ_nid2obj
	mov	ecx, DWORD PTR [esi+4]
	add	esp, 8
	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], eax
; Line 187
	call	_ASN1_TYPE_new
	mov	ecx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+4], eax
	test	eax, eax
	jne	SHORT $LN11@PKCS12_set
; Line 188
	push	188					; 000000bcH
$LN14@PKCS12_set:
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	65					; 00000041H
	push	122					; 0000007aH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 189
	xor	eax, eax
	pop	edi
	pop	esi
; Line 194
	ret	0
$LN11@PKCS12_set:
; Line 191
	mov	eax, DWORD PTR [esi+4]
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], 5
; Line 193
	mov	eax, 1
; Line 194
	ret	0
_PKCS12_setup_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS12_set_mac
_TEXT	SEGMENT
_maclen$ = -72						; size = 4
_mac$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_p12$ = 8						; size = 4
_pass$ = 12						; size = 4
_passlen$ = 16						; size = 4
_salt$ = 20						; size = 4
_saltlen$ = 24						; size = 4
_iter$ = 28						; size = 4
_md_type$ = 32						; size = 4
_PKCS12_set_mac PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs12\p12_mutl.c
; Line 137
	mov	eax, 72					; 00000048H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
	mov	eax, DWORD PTR _md_type$[esp+68]
	push	ebx
	mov	ebx, DWORD PTR _salt$[esp+72]
	push	esi
	mov	esi, DWORD PTR _p12$[esp+76]
	push	edi
	mov	edi, DWORD PTR _pass$[esp+80]
; Line 141
	test	eax, eax
	jne	SHORT $LN2@PKCS12_set
; Line 142
	call	_EVP_sha1
$LN2@PKCS12_set:
; Line 143
	push	eax
	push	DWORD PTR _saltlen$[esp+84]
	push	ebx
	push	DWORD PTR _iter$[esp+92]
	push	esi
	call	_PKCS12_setup_mac
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN3@PKCS12_set
; Line 144
	push	144					; 00000090H
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	110					; 0000006eH
	push	123					; 0000007bH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 145
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 156
	mov	ecx, DWORD PTR __$ArrayPad$[esp+72]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
$LN3@PKCS12_set:
; Line 147
	lea	eax, DWORD PTR _maclen$[esp+84]
	push	eax
	lea	eax, DWORD PTR _mac$[esp+88]
	push	eax
	push	DWORD PTR _passlen$[esp+88]
	push	edi
	push	esi
	call	_PKCS12_gen_mac
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN4@PKCS12_set
; Line 148
	push	148					; 00000094H
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	109					; 0000006dH
	push	123					; 0000007bH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 149
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 156
	mov	ecx, DWORD PTR __$ArrayPad$[esp+72]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
$LN4@PKCS12_set:
; Line 151
	push	DWORD PTR _maclen$[esp+84]
	lea	eax, DWORD PTR _mac$[esp+88]
	push	eax
	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@PKCS12_set
; Line 152
	push	152					; 00000098H
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	111					; 0000006fH
	push	123					; 0000007bH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 153
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 156
	mov	ecx, DWORD PTR __$ArrayPad$[esp+72]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
$LN5@PKCS12_set:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
_PKCS12_set_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS12_verify_mac
_TEXT	SEGMENT
_maclen$ = -72						; size = 4
_mac$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_p12$ = 8						; size = 4
_pass$ = 12						; size = 4
_passlen$ = 16						; size = 4
_PKCS12_verify_mac PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs12\p12_mutl.c
; Line 115
	mov	eax, 72					; 00000048H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
	mov	eax, DWORD PTR _pass$[esp+68]
	push	esi
	mov	esi, DWORD PTR _p12$[esp+72]
; Line 118
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN2@PKCS12_ver
; Line 119
	push	119					; 00000077H
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	108					; 0000006cH
$LN7@PKCS12_ver:
; Line 123
	push	126					; 0000007eH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN5@PKCS12_ver:
; Line 128
	xor	eax, eax
	pop	esi
; Line 130
	mov	ecx, DWORD PTR __$ArrayPad$[esp+72]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
$LN2@PKCS12_ver:
; Line 122
	lea	ecx, DWORD PTR _maclen$[esp+76]
	push	ecx
	lea	ecx, DWORD PTR _mac$[esp+80]
	push	ecx
	push	DWORD PTR _passlen$[esp+80]
	push	eax
	push	esi
	call	_PKCS12_gen_mac
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN3@PKCS12_ver
; Line 123
	push	123					; 0000007bH
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	109					; 0000006dH
; Line 124
	jmp	SHORT $LN7@PKCS12_ver
$LN3@PKCS12_ver:
; Line 127
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR _maclen$[esp+76]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@PKCS12_ver
	push	ecx
	push	DWORD PTR [eax+8]
	lea	eax, DWORD PTR _mac$[esp+84]
	push	eax
	call	_CRYPTO_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@PKCS12_ver
; Line 130
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	mov	eax, 1
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
_PKCS12_verify_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS12_gen_mac
_TEXT	SEGMENT
_saltlen$1$ = -296					; size = 4
_salt$1$ = -292						; size = 4
_pass$GSCopy$1$ = -288					; size = 4
_maclen$GSCopy$1$ = -284				; size = 4
_mac$GSCopy$1$ = -280					; size = 4
_hmac$ = -276						; size = 208
_key$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_p12$ = 8						; size = 4
_pass$ = 12						; size = 4
_passlen$ = 16						; size = 4
_mac$ = 20						; size = 4
_maclen$ = 24						; size = 4
_PKCS12_gen_mac PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs12\p12_mutl.c
; Line 71
	mov	eax, 296				; 00000128H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+296], eax
	mov	eax, DWORD PTR _pass$[esp+292]
	mov	DWORD PTR _pass$GSCopy$1$[esp+296], eax
	mov	eax, DWORD PTR _mac$[esp+292]
	push	esi
	mov	esi, DWORD PTR _p12$[esp+296]
	mov	DWORD PTR _mac$GSCopy$1$[esp+300], eax
	mov	eax, DWORD PTR _maclen$[esp+296]
	mov	DWORD PTR _maclen$GSCopy$1$[esp+300], eax
; Line 78
	mov	eax, DWORD PTR [esi+8]
	push	DWORD PTR [eax+16]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 21					; 00000015H
	je	SHORT $LN2@PKCS12_gen
; Line 79
	push	79					; 0000004fH
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	121					; 00000079H
	push	107					; 0000006bH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 80
	xor	eax, eax
	pop	esi
; Line 111
	mov	ecx, DWORD PTR __$ArrayPad$[esp+296]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	ret	0
$LN2@PKCS12_gen:
; Line 83
	mov	ecx, DWORD PTR [esi+4]
	push	ebp
	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax+8]
; Line 84
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _saltlen$1$[esp+304], eax
; Line 85
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _salt$1$[esp+304], edx
	test	eax, eax
	jne	SHORT $LN3@PKCS12_gen
; Line 86
	lea	ebp, DWORD PTR [eax+1]
	jmp	SHORT $LN4@PKCS12_gen
$LN3@PKCS12_gen:
; Line 88
	push	eax
	call	_ASN1_INTEGER_get
	add	esp, 4
	mov	ebp, eax
$LN4@PKCS12_gen:
; Line 89
	mov	ecx, DWORD PTR [esi+4]
	push	ebx
	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx]
	push	DWORD PTR [ecx]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	SHORT $LN5@PKCS12_gen
; Line 90
	push	90					; 0000005aH
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	118					; 00000076H
	push	107					; 0000006bH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 91
	xor	eax, eax
	pop	ebx
	pop	ebp
	pop	esi
; Line 111
	mov	ecx, DWORD PTR __$ArrayPad$[esp+296]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	ret	0
$LN5@PKCS12_gen:
	push	edi
; Line 93
	push	ebx
	call	_EVP_MD_size
	mov	edi, eax
	add	esp, 4
; Line 94
	test	edi, edi
	js	$LN14@PKCS12_gen
; Line 96
	push	ebx
	lea	eax, DWORD PTR _key$[esp+316]
	push	eax
	push	edi
	push	ebp
	push	3
	push	DWORD PTR _saltlen$1$[esp+332]
	push	DWORD PTR _salt$1$[esp+336]
	push	DWORD PTR _passlen$[esp+336]
	push	DWORD PTR _pass$GSCopy$1$[esp+344]
	call	_PKCS12_key_gen_asc
	add	esp, 36					; 00000024H
	test	eax, eax
	jne	SHORT $LN7@PKCS12_gen
; Line 98
	push	98					; 00000062H
	push	OFFSET ??_C@_0BL@PCHEDBDM@?4?2crypto?2pkcs12?2p12_mutl?4c?$AA@
	push	107					; 0000006bH
	push	107					; 0000006bH
	push	35					; 00000023H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 99
	jmp	SHORT $LN14@PKCS12_gen
$LN7@PKCS12_gen:
; Line 101
	lea	eax, DWORD PTR _hmac$[esp+312]
	push	eax
	call	_HMAC_CTX_init
; Line 105
	push	0
	push	ebx
	push	edi
	lea	eax, DWORD PTR _key$[esp+328]
	push	eax
	lea	eax, DWORD PTR _hmac$[esp+332]
	push	eax
	call	_HMAC_Init_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN9@PKCS12_gen
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax+20]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	lea	eax, DWORD PTR _hmac$[esp+320]
	push	eax
	call	_HMAC_Update
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN9@PKCS12_gen
	push	DWORD PTR _maclen$GSCopy$1$[esp+312]
	lea	eax, DWORD PTR _hmac$[esp+316]
	push	DWORD PTR _mac$GSCopy$1$[esp+316]
	push	eax
	call	_HMAC_Final
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN9@PKCS12_gen
; Line 109
	lea	eax, DWORD PTR _hmac$[esp+312]
	push	eax
	call	_HMAC_CTX_cleanup
	add	esp, 4
; Line 110
	mov	eax, 1
	jmp	SHORT $LN13@PKCS12_gen
$LN9@PKCS12_gen:
; Line 106
	lea	eax, DWORD PTR _hmac$[esp+312]
	push	eax
	call	_HMAC_CTX_cleanup
	add	esp, 4
$LN14@PKCS12_gen:
; Line 107
	xor	eax, eax
$LN13@PKCS12_gen:
; Line 111
	mov	ecx, DWORD PTR __$ArrayPad$[esp+312]
	pop	edi
	pop	ebx
	pop	ebp
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	ret	0
_PKCS12_gen_mac ENDP
_TEXT	ENDS
END

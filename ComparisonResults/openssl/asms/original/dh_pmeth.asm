; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_dh_pkey_meth
PUBLIC	_dhx_pkey_meth
CONST	SEGMENT
_dh_pkey_meth DD 01cH
	DD	00H
	DD	FLAT:_pkey_dh_init
	DD	FLAT:_pkey_dh_copy
	DD	FLAT:_pkey_dh_cleanup
	DD	00H
	DD	FLAT:_pkey_dh_paramgen
	DD	00H
	DD	FLAT:_pkey_dh_keygen
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_pkey_dh_derive
	DD	FLAT:_pkey_dh_ctrl
	DD	FLAT:_pkey_dh_ctrl_str
	ORG $+4
_dhx_pkey_meth DD 0398H
	DD	00H
	DD	FLAT:_pkey_dh_init
	DD	FLAT:_pkey_dh_copy
	DD	FLAT:_pkey_dh_cleanup
	DD	00H
	DD	FLAT:_pkey_dh_paramgen
	DD	00H
	DD	FLAT:_pkey_dh_keygen
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_pkey_dh_derive
	DD	FLAT:_pkey_dh_ctrl
	DD	FLAT:_pkey_dh_ctrl_str
CONST	ENDS
PUBLIC	??_C@_0BH@BKNKMCNH@?4?2crypto?2dh?2dh_pmeth?4c?$AA@ ; `string'
PUBLIC	??_C@_0BG@LEMCDPBI@dh_paramgen_prime_len?$AA@	; `string'
PUBLIC	??_C@_0L@CMAICHCO@dh_rfc5114?$AA@		; `string'
PUBLIC	??_C@_0BG@POLEFOHA@dh_paramgen_generator?$AA@	; `string'
PUBLIC	??_C@_0BJ@HCAFJLBI@dh_paramgen_subprime_len?$AA@ ; `string'
PUBLIC	??_C@_0BB@DCMALDKK@dh_paramgen_type?$AA@	; `string'
EXTRN	__imp__atoi:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BUF_memdup:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_OBJ_dup:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_sha256:PROC
EXTRN	_EVP_PKEY_assign:PROC
EXTRN	_EVP_PKEY_copy_parameters:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_DH_new:PROC
EXTRN	_DH_free:PROC
EXTRN	_DH_size:PROC
EXTRN	_DH_generate_parameters_ex:PROC
EXTRN	_DH_generate_key:PROC
EXTRN	_DH_compute_key:PROC
EXTRN	_DH_compute_key_padded:PROC
EXTRN	_DH_get_1024_160:PROC
EXTRN	_DH_get_2048_224:PROC
EXTRN	_DH_get_2048_256:PROC
EXTRN	_DH_KDF_X9_42:PROC
EXTRN	_DSA_new:PROC
EXTRN	_DSA_free:PROC
EXTRN	_DSA_dup_DH:PROC
EXTRN	_evp_pkey_set_cb_translate:PROC
EXTRN	_dsa_builtin_paramgen:PROC
EXTRN	_dsa_builtin_paramgen2:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BB@DCMALDKK@dh_paramgen_type?$AA@
CONST	SEGMENT
??_C@_0BB@DCMALDKK@dh_paramgen_type?$AA@ DB 'dh_paramgen_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HCAFJLBI@dh_paramgen_subprime_len?$AA@
CONST	SEGMENT
??_C@_0BJ@HCAFJLBI@dh_paramgen_subprime_len?$AA@ DB 'dh_paramgen_subprime'
	DB	'_len', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@POLEFOHA@dh_paramgen_generator?$AA@
CONST	SEGMENT
??_C@_0BG@POLEFOHA@dh_paramgen_generator?$AA@ DB 'dh_paramgen_generator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CMAICHCO@dh_rfc5114?$AA@
CONST	SEGMENT
??_C@_0L@CMAICHCO@dh_rfc5114?$AA@ DB 'dh_rfc5114', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LEMCDPBI@dh_paramgen_prime_len?$AA@
CONST	SEGMENT
??_C@_0BG@LEMCDPBI@dh_paramgen_prime_len?$AA@ DB 'dh_paramgen_prime_len', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BKNKMCNH@?4?2crypto?2dh?2dh_pmeth?4c?$AA@
CONST	SEGMENT
??_C@_0BH@BKNKMCNH@?4?2crypto?2dh?2dh_pmeth?4c?$AA@ DB '.\crypto\dh\dh_pm'
	DB	'eth.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dh_derive
_TEXT	SEGMENT
_ret$2$ = -8						; size = 4
_dhpub$1$ = -4						; size = 4
_Zlen$1$ = 8						; size = 4
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_keylen$ = 16						; size = 4
_pkey_dh_derive PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 430
	mov	eax, 8
	call	__chkstk
; Line 433
	mov	eax, DWORD PTR _ctx$[esp+4]
	push	ebx
	push	esi
; Line 435
	mov	ebx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [eax+20]
	test	ebx, ebx
	je	$LN3@pkey_dh_de
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	$LN3@pkey_dh_de
; Line 440
	mov	eax, DWORD PTR [eax+20]
	mov	ebx, DWORD PTR [ebx+20]
	mov	ecx, DWORD PTR [eax+20]
; Line 441
	mov	al, BYTE PTR [esi+32]
	mov	DWORD PTR _dhpub$1$[esp+16], ecx
	cmp	al, 1
	jne	SHORT $LN4@pkey_dh_de
; Line 442
	mov	eax, DWORD PTR _key$[esp+12]
; Line 443
	push	ebx
	test	eax, eax
	jne	SHORT $LN6@pkey_dh_de
	call	_DH_size
	mov	ecx, DWORD PTR _keylen$[esp+16]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
$LN8@pkey_dh_de:
; Line 444
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 483
	add	esp, 8
	ret	0
$LN6@pkey_dh_de:
; Line 446
	push	ecx
	push	eax
	call	_DH_compute_key
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 447
	test	ecx, ecx
	js	SHORT $LN1@pkey_dh_de
$LN20@pkey_dh_de:
; Line 449
	mov	eax, DWORD PTR _keylen$[esp+12]
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx
; Line 450
	mov	eax, 1
; Line 483
	add	esp, 8
	ret	0
$LN4@pkey_dh_de:
; Line 451
	cmp	al, 2
	jne	SHORT $LN8@pkey_dh_de
; Line 454
	mov	ecx, DWORD PTR [esi+52]
	test	ecx, ecx
	je	$LN10@pkey_dh_de
	cmp	DWORD PTR [esi+36], 0
	je	$LN10@pkey_dh_de
; Line 456
	cmp	DWORD PTR _key$[esp+12], 0
	je	SHORT $LN20@pkey_dh_de
; Line 460
	push	ebp
	mov	ebp, DWORD PTR _keylen$[esp+16]
	cmp	DWORD PTR [ebp], ecx
	je	SHORT $LN12@pkey_dh_de
; Line 461
	xor	eax, eax
	pop	ebp
$LN1@pkey_dh_de:
	pop	esi
	pop	ebx
; Line 483
	add	esp, 8
	ret	0
$LN12@pkey_dh_de:
	push	edi
; Line 463
	push	ebx
	mov	DWORD PTR _ret$2$[esp+28], 0
	call	_DH_size
; Line 464
	push	464					; 000001d0H
	push	OFFSET ??_C@_0BH@BKNKMCNH@?4?2crypto?2dh?2dh_pmeth?4c?$AA@
	push	eax
	mov	DWORD PTR _Zlen$1$[esp+36], eax
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 465
	test	edi, edi
	je	SHORT $LN16@pkey_dh_de
; Line 468
	push	ebx
	push	DWORD PTR _dhpub$1$[esp+28]
	push	edi
	call	_DH_compute_key_padded
; Line 470
	mov	ebx, DWORD PTR _Zlen$1$[esp+32]
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $err$22
	push	DWORD PTR [esi+40]
	push	DWORD PTR [esi+48]
	push	DWORD PTR [esi+44]
	push	DWORD PTR [esi+36]
	push	ebx
	push	edi
	push	DWORD PTR [ebp]
	push	DWORD PTR _key$[esp+48]
	call	_DH_KDF_X9_42
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $err$22
; Line 473
	mov	eax, DWORD PTR [esi+52]
	mov	DWORD PTR [ebp], eax
; Line 474
	mov	DWORD PTR _ret$2$[esp+24], 1
$err$22:
; Line 477
	push	ebx
	push	edi
	call	_OPENSSL_cleanse
; Line 478
	push	edi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN16@pkey_dh_de:
; Line 480
	mov	eax, DWORD PTR _ret$2$[esp+24]
	pop	edi
	pop	ebp
	pop	esi
	pop	ebx
; Line 483
	add	esp, 8
	ret	0
$LN3@pkey_dh_de:
; Line 436
	push	436					; 000001b4H
	push	OFFSET ??_C@_0BH@BKNKMCNH@?4?2crypto?2dh?2dh_pmeth?4c?$AA@
	push	108					; 0000006cH
	push	112					; 00000070H
	push	5
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN10@pkey_dh_de:
; Line 437
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 483
	add	esp, 8
	ret	0
_pkey_dh_derive ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dh_keygen
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey$ = 12						; size = 4
_pkey_dh_keygen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 412
	push	esi
; Line 414
	mov	esi, DWORD PTR _ctx$[esp]
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN2@pkey_dh_ke
; Line 415
	push	415					; 0000019fH
	push	OFFSET ??_C@_0BH@BKNKMCNH@?4?2crypto?2dh?2dh_pmeth?4c?$AA@
	push	107					; 0000006bH
	push	113					; 00000071H
	push	5
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN7@pkey_dh_ke:
; Line 416
	xor	eax, eax
	pop	esi
; Line 426
	ret	0
$LN2@pkey_dh_ke:
; Line 418
	call	_DH_new
; Line 419
	test	eax, eax
	je	SHORT $LN7@pkey_dh_ke
; Line 421
	push	edi
	mov	edi, DWORD PTR _pkey$[esp+4]
	push	eax
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR [eax]
	push	edi
	call	_EVP_PKEY_assign
; Line 423
	push	DWORD PTR [esi+8]
	push	edi
	call	_EVP_PKEY_copy_parameters
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN4@pkey_dh_ke
	pop	edi
	pop	esi
; Line 426
	ret	0
$LN4@pkey_dh_ke:
; Line 425
	push	DWORD PTR [edi+20]
	call	_DH_generate_key
	add	esp, 4
	pop	edi
	pop	esi
; Line 426
	ret	0
_pkey_dh_keygen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dh_paramgen
_TEXT	SEGMENT
_cb$ = -12						; size = 12
_ctx$ = 8						; size = 4
_pkey$ = 12						; size = 4
_pkey_dh_paramgen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 353
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 355
	mov	ecx, DWORD PTR _ctx$[esp+8]
	push	esi
	mov	esi, DWORD PTR [ecx+20]
; Line 358
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN4@pkey_dh_pa
; Line 359
	sub	eax, 1
	je	SHORT $LN5@pkey_dh_pa
	sub	eax, 1
	je	SHORT $LN6@pkey_dh_pa
	sub	eax, 1
	je	SHORT $LN7@pkey_dh_pa
; Line 373
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 409
	add	esp, 12					; 0000000cH
	ret	0
$LN7@pkey_dh_pa:
; Line 369
	call	_DH_get_2048_256
; Line 370
	jmp	SHORT $LN2@pkey_dh_pa
$LN6@pkey_dh_pa:
; Line 365
	call	_DH_get_2048_224
; Line 366
	jmp	SHORT $LN2@pkey_dh_pa
$LN5@pkey_dh_pa:
; Line 361
	call	_DH_get_1024_160
$LN2@pkey_dh_pa:
; Line 375
	push	eax
	push	920					; 00000398H
	push	DWORD PTR _pkey$[esp+20]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 376
	mov	eax, 1
	pop	esi
; Line 409
	add	esp, 12					; 0000000cH
	ret	0
$LN4@pkey_dh_pa:
; Line 379
	cmp	DWORD PTR [ecx+28], 0
	push	ebx
	je	SHORT $LN9@pkey_dh_pa
; Line 380
	lea	ebx, DWORD PTR _cb$[esp+20]
; Line 381
	push	ecx
	mov	eax, ebx
	push	eax
	call	_evp_pkey_set_cb_translate
	add	esp, 8
; Line 382
	jmp	SHORT $LN10@pkey_dh_pa
$LN9@pkey_dh_pa:
; Line 383
	xor	ebx, ebx
$LN10@pkey_dh_pa:
; Line 385
	cmp	DWORD PTR [esi+8], 0
	push	edi
	je	SHORT $LN11@pkey_dh_pa
; Line 387
	push	ebx
	push	esi
	call	_dsa_dh_generate
	mov	esi, eax
	add	esp, 8
; Line 388
	test	esi, esi
	je	SHORT $LN20@pkey_dh_pa
; Line 390
	push	esi
	call	_DSA_dup_DH
; Line 391
	push	esi
	mov	edi, eax
	call	_DSA_free
	add	esp, 8
; Line 392
	test	edi, edi
	je	SHORT $LN20@pkey_dh_pa
; Line 394
	push	edi
	push	920					; 00000398H
	push	DWORD PTR _pkey$[esp+28]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 395
	mov	eax, 1
	pop	edi
	pop	ebx
	pop	esi
; Line 409
	add	esp, 12					; 0000000cH
	ret	0
$LN11@pkey_dh_pa:
; Line 398
	call	_DH_new
	mov	edi, eax
; Line 399
	test	edi, edi
	jne	SHORT $LN14@pkey_dh_pa
$LN20@pkey_dh_pa:
	pop	edi
	pop	ebx
; Line 400
	xor	eax, eax
	pop	esi
; Line 409
	add	esp, 12					; 0000000cH
	ret	0
$LN14@pkey_dh_pa:
; Line 401
	push	ebx
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	push	edi
	call	_DH_generate_parameters_ex
	add	esp, 16					; 00000010H
	mov	esi, eax
; Line 405
	push	edi
	test	esi, esi
	je	SHORT $LN15@pkey_dh_pa
	push	28					; 0000001cH
	push	DWORD PTR _pkey$[esp+28]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 408
	mov	eax, esi
	pop	edi
	pop	ebx
	pop	esi
; Line 409
	add	esp, 12					; 0000000cH
	ret	0
$LN15@pkey_dh_pa:
; Line 407
	call	_DH_free
	add	esp, 4
; Line 408
	mov	eax, esi
	pop	edi
	pop	ebx
	pop	esi
; Line 409
	add	esp, 12					; 0000000cH
	ret	0
_pkey_dh_paramgen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_dh_generate
_TEXT	SEGMENT
_prime_len$1$ = 8					; size = 4
_dctx$ = 8						; size = 4
_pcb$ = 12						; size = 4
_dsa_dh_generate PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 314
	push	ebx
	push	ebp
	push	edi
; Line 317
	mov	edi, DWORD PTR _dctx$[esp+8]
; Line 320
	cmp	DWORD PTR [edi+8], 2
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR [edi+12]
	mov	ebp, DWORD PTR [edi+16]
	mov	DWORD PTR _prime_len$1$[esp+8], eax
	jle	SHORT $LN2@dsa_dh_gen
; Line 321
	pop	edi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 348
	ret	0
$LN2@dsa_dh_gen:
	push	esi
; Line 322
	call	_DSA_new
	mov	esi, eax
; Line 323
	test	esi, esi
	je	$LN18@dsa_dh_gen
; Line 326
	mov	eax, DWORD PTR _prime_len$1$[esp+12]
	cmp	ebx, -1
	jne	SHORT $LN5@dsa_dh_gen
	cmp	eax, 2048				; 00000800H
	mov	ebx, 160				; 000000a0H
	mov	ecx, 256				; 00000100H
	cmovge	ebx, ecx
$LN5@dsa_dh_gen:
; Line 331
	test	ebp, ebp
	jne	SHORT $LN9@dsa_dh_gen
; Line 332
	cmp	eax, 2048				; 00000800H
	jl	SHORT $LN8@dsa_dh_gen
; Line 333
	call	_EVP_sha256
	jmp	SHORT $LN19@dsa_dh_gen
$LN8@dsa_dh_gen:
; Line 335
	call	_EVP_sha1
$LN19@dsa_dh_gen:
	mov	ebp, eax
$LN9@dsa_dh_gen:
; Line 337
	mov	eax, DWORD PTR [edi+8]
	cmp	eax, 1
	jne	SHORT $LN10@dsa_dh_gen
; Line 338
	push	DWORD PTR _pcb$[esp+12]
	mov	eax, DWORD PTR _prime_len$1$[esp+16]
	push	0
	push	0
	push	0
	push	0
	push	0
	push	ebp
	push	ebx
	push	eax
	push	esi
	call	_dsa_builtin_paramgen
	add	esp, 40					; 00000028H
	jmp	SHORT $LN12@dsa_dh_gen
$LN10@dsa_dh_gen:
; Line 340
	cmp	eax, 2
	jne	SHORT $LN15@dsa_dh_gen
; Line 341
	push	DWORD PTR _pcb$[esp+12]
	mov	eax, DWORD PTR _prime_len$1$[esp+16]
	push	0
	push	0
	push	0
	push	-1
	push	0
	push	0
	push	ebp
	push	ebx
	push	eax
	push	esi
	call	_dsa_builtin_paramgen2
	add	esp, 44					; 0000002cH
$LN12@dsa_dh_gen:
; Line 343
	test	eax, eax
	jle	SHORT $LN15@dsa_dh_gen
; Line 347
	mov	eax, esi
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 348
	ret	0
$LN15@dsa_dh_gen:
; Line 344
	push	esi
	call	_DSA_free
	add	esp, 4
$LN18@dsa_dh_gen:
; Line 345
	pop	esi
	pop	edi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 348
	ret	0
_dsa_dh_generate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dh_ctrl_str
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_value$ = 16						; size = 4
_pkey_dh_ctrl_str PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 266
	mov	edx, DWORD PTR _type$[esp-4]
	mov	ecx, OFFSET ??_C@_0BG@LEMCDPBI@dh_paramgen_prime_len?$AA@
	mov	eax, edx
	push	ebx
	npad	4
$LL10@pkey_dh_ct:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [ecx]
	jne	SHORT $LN11@pkey_dh_ct
	test	bl, bl
	je	SHORT $LN12@pkey_dh_ct
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [ecx+1]
	jne	SHORT $LN11@pkey_dh_ct
	add	eax, 2
	add	ecx, 2
	test	bl, bl
	jne	SHORT $LL10@pkey_dh_ct
$LN12@pkey_dh_ct:
	xor	eax, eax
	jmp	SHORT $LN13@pkey_dh_ct
$LN11@pkey_dh_ct:
	sbb	eax, eax
	or	eax, 1
$LN13@pkey_dh_ct:
	test	eax, eax
	jne	SHORT $LN2@pkey_dh_ct
; Line 268
	push	DWORD PTR _value$[esp]
	call	DWORD PTR __imp__atoi
; Line 269
	push	0
	push	eax
	push	4097					; 00001001H
	push	2
	push	28					; 0000001cH
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	pop	ebx
; Line 296
	ret	0
$LN2@pkey_dh_ct:
; Line 271
	mov	ecx, OFFSET ??_C@_0L@CMAICHCO@dh_rfc5114?$AA@
	mov	eax, edx
$LL14@pkey_dh_ct:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [ecx]
	jne	SHORT $LN15@pkey_dh_ct
	test	bl, bl
	je	SHORT $LN16@pkey_dh_ct
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [ecx+1]
	jne	SHORT $LN15@pkey_dh_ct
	add	eax, 2
	add	ecx, 2
	test	bl, bl
	jne	SHORT $LL14@pkey_dh_ct
$LN16@pkey_dh_ct:
	xor	eax, eax
	jmp	SHORT $LN17@pkey_dh_ct
$LN15@pkey_dh_ct:
	sbb	eax, eax
	or	eax, 1
$LN17@pkey_dh_ct:
	test	eax, eax
	jne	SHORT $LN3@pkey_dh_ct
; Line 272
	mov	eax, DWORD PTR _ctx$[esp]
	push	esi
; Line 274
	push	DWORD PTR _value$[esp+4]
	mov	esi, DWORD PTR [eax+20]
	call	DWORD PTR __imp__atoi
	add	esp, 4
; Line 275
	cmp	eax, 3
	ja	SHORT $LN5@pkey_dh_ct
; Line 277
	mov	DWORD PTR [esi+20], eax
; Line 278
	mov	eax, 1
	pop	esi
	pop	ebx
; Line 296
	ret	0
$LN5@pkey_dh_ct:
	pop	esi
; Line 276
	mov	eax, -2					; fffffffeH
	pop	ebx
; Line 296
	ret	0
$LN3@pkey_dh_ct:
; Line 280
	mov	ecx, OFFSET ??_C@_0BG@POLEFOHA@dh_paramgen_generator?$AA@
	mov	eax, edx
$LL18@pkey_dh_ct:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [ecx]
	jne	SHORT $LN19@pkey_dh_ct
	test	bl, bl
	je	SHORT $LN20@pkey_dh_ct
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [ecx+1]
	jne	SHORT $LN19@pkey_dh_ct
	add	eax, 2
	add	ecx, 2
	test	bl, bl
	jne	SHORT $LL18@pkey_dh_ct
$LN20@pkey_dh_ct:
	xor	eax, eax
	jmp	SHORT $LN21@pkey_dh_ct
$LN19@pkey_dh_ct:
	sbb	eax, eax
	or	eax, 1
$LN21@pkey_dh_ct:
	test	eax, eax
	jne	SHORT $LN6@pkey_dh_ct
; Line 282
	push	DWORD PTR _value$[esp]
	call	DWORD PTR __imp__atoi
; Line 283
	push	0
	push	eax
	push	4098					; 00001002H
	push	2
	push	28					; 0000001cH
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	pop	ebx
; Line 296
	ret	0
$LN6@pkey_dh_ct:
; Line 285
	mov	ecx, OFFSET ??_C@_0BJ@HCAFJLBI@dh_paramgen_subprime_len?$AA@
	mov	eax, edx
$LL22@pkey_dh_ct:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [ecx]
	jne	SHORT $LN23@pkey_dh_ct
	test	bl, bl
	je	SHORT $LN24@pkey_dh_ct
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [ecx+1]
	jne	SHORT $LN23@pkey_dh_ct
	add	eax, 2
	add	ecx, 2
	test	bl, bl
	jne	SHORT $LL22@pkey_dh_ct
$LN24@pkey_dh_ct:
	xor	eax, eax
	jmp	SHORT $LN25@pkey_dh_ct
$LN23@pkey_dh_ct:
	sbb	eax, eax
	or	eax, 1
$LN25@pkey_dh_ct:
	test	eax, eax
	jne	SHORT $LN7@pkey_dh_ct
; Line 287
	push	DWORD PTR _value$[esp]
	call	DWORD PTR __imp__atoi
; Line 288
	push	0
	push	eax
	push	4100					; 00001004H
	push	2
	push	28					; 0000001cH
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	pop	ebx
; Line 296
	ret	0
$LN7@pkey_dh_ct:
; Line 290
	mov	eax, OFFSET ??_C@_0BB@DCMALDKK@dh_paramgen_type?$AA@
$LL26@pkey_dh_ct:
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN27@pkey_dh_ct
	test	cl, cl
	je	SHORT $LN28@pkey_dh_ct
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN27@pkey_dh_ct
	add	edx, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL26@pkey_dh_ct
$LN28@pkey_dh_ct:
	xor	eax, eax
	jmp	SHORT $LN29@pkey_dh_ct
$LN27@pkey_dh_ct:
	sbb	eax, eax
	or	eax, 1
$LN29@pkey_dh_ct:
	test	eax, eax
	jne	SHORT $LN8@pkey_dh_ct
; Line 292
	push	DWORD PTR _value$[esp]
	call	DWORD PTR __imp__atoi
; Line 293
	push	0
	push	eax
	push	4101					; 00001005H
	push	2
	push	28					; 0000001cH
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	pop	ebx
; Line 296
	ret	0
$LN8@pkey_dh_ct:
; Line 295
	mov	eax, -2					; fffffffeH
	pop	ebx
; Line 296
	ret	0
_pkey_dh_ctrl_str ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dh_ctrl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
_pkey_dh_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 166
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+20]
; Line 167
	mov	eax, DWORD PTR _type$[esp]
	cmp	eax, 4097				; 00001001H
	jg	SHORT $LN35@pkey_dh_ct
	je	SHORT $LN4@pkey_dh_ct
	sub	eax, 2
	jne	$LN33@pkey_dh_ct
; Line 205
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN4@pkey_dh_ct:
; Line 169
	mov	eax, DWORD PTR _p1$[esp]
	cmp	eax, 256				; 00000100H
	jl	$LN33@pkey_dh_ct
; Line 171
	mov	DWORD PTR [esi], eax
; Line 172
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN35@pkey_dh_ct:
; Line 167
	add	eax, -4098				; ffffeffeH
	cmp	eax, 12					; 0000000cH
	ja	$LN33@pkey_dh_ct
	jmp	DWORD PTR $LN38@pkey_dh_ct[eax*4]
$LN6@pkey_dh_ct:
; Line 175
	cmp	DWORD PTR [esi+8], 0
	je	$LN33@pkey_dh_ct
; Line 177
	mov	eax, DWORD PTR _p1$[esp]
	mov	DWORD PTR [esi+12], eax
; Line 178
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN8@pkey_dh_ct:
; Line 181
	cmp	DWORD PTR [esi+8], 0
	jne	$LN33@pkey_dh_ct
; Line 183
	mov	eax, DWORD PTR _p1$[esp]
	mov	DWORD PTR [esi+4], eax
; Line 184
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN10@pkey_dh_ct:
; Line 191
	mov	eax, DWORD PTR _p1$[esp]
	cmp	eax, 2
	ja	$LN33@pkey_dh_ct
; Line 194
	mov	DWORD PTR [esi+8], eax
; Line 255
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN13@pkey_dh_ct:
; Line 198
	mov	ecx, DWORD PTR _p1$[esp]
	lea	eax, DWORD PTR [ecx-1]
	cmp	eax, 2
	ja	$LN33@pkey_dh_ct
; Line 200
	mov	DWORD PTR [esi+20], ecx
; Line 255
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN17@pkey_dh_ct:
; Line 208
	mov	eax, DWORD PTR _p1$[esp]
	cmp	eax, -2					; fffffffeH
	jne	SHORT $LN18@pkey_dh_ct
; Line 209
	movsx	eax, BYTE PTR [esi+32]
	pop	esi
; Line 261
	ret	0
$LN18@pkey_dh_ct:
; Line 210
	cmp	eax, 1
	je	SHORT $LN19@pkey_dh_ct
	cmp	eax, 2
	jne	$LN33@pkey_dh_ct
$LN19@pkey_dh_ct:
; Line 212
	mov	BYTE PTR [esi+32], al
; Line 213
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN20@pkey_dh_ct:
; Line 216
	mov	eax, DWORD PTR _p2$[esp]
	mov	DWORD PTR [esi+40], eax
; Line 217
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN21@pkey_dh_ct:
; Line 220
	mov	eax, DWORD PTR _p2$[esp]
	mov	ecx, DWORD PTR [esi+40]
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 221
	mov	eax, 1
; Line 261
	ret	0
$LN22@pkey_dh_ct:
; Line 224
	mov	eax, DWORD PTR _p1$[esp]
	test	eax, eax
	jle	$LN33@pkey_dh_ct
; Line 226
	mov	DWORD PTR [esi+52], eax
; Line 227
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN24@pkey_dh_ct:
; Line 230
	mov	eax, DWORD PTR _p2$[esp]
	mov	ecx, DWORD PTR [esi+52]
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 231
	mov	eax, 1
; Line 261
	ret	0
$LN25@pkey_dh_ct:
; Line 234
	mov	eax, DWORD PTR [esi+44]
	test	eax, eax
	je	SHORT $LN26@pkey_dh_ct
; Line 235
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN26@pkey_dh_ct:
; Line 236
	mov	eax, DWORD PTR _p2$[esp]
; Line 237
	xor	ecx, ecx
	test	eax, eax
	mov	DWORD PTR [esi+44], eax
; Line 241
	mov	eax, 1
	cmovne	ecx, DWORD PTR _p1$[esp]
	mov	DWORD PTR [esi+48], ecx
	pop	esi
; Line 261
	ret	0
$LN29@pkey_dh_ct:
; Line 244
	mov	ecx, DWORD PTR _p2$[esp]
	mov	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [ecx], edx
; Line 245
	mov	eax, DWORD PTR [esi+48]
	pop	esi
; Line 261
	ret	0
$LN30@pkey_dh_ct:
; Line 248
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN31@pkey_dh_ct
; Line 249
	push	eax
	call	_ASN1_OBJECT_free
	add	esp, 4
$LN31@pkey_dh_ct:
; Line 250
	mov	eax, DWORD PTR _p2$[esp]
	mov	DWORD PTR [esi+36], eax
; Line 251
	mov	eax, 1
	pop	esi
; Line 261
	ret	0
$LN32@pkey_dh_ct:
; Line 254
	mov	eax, DWORD PTR _p2$[esp]
	mov	ecx, DWORD PTR [esi+36]
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 255
	mov	eax, 1
; Line 261
	ret	0
$LN33@pkey_dh_ct:
; Line 258
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 261
	ret	0
	npad	1
$LN38@pkey_dh_ct:
	DD	$LN8@pkey_dh_ct
	DD	$LN13@pkey_dh_ct
	DD	$LN6@pkey_dh_ct
	DD	$LN10@pkey_dh_ct
	DD	$LN17@pkey_dh_ct
	DD	$LN20@pkey_dh_ct
	DD	$LN21@pkey_dh_ct
	DD	$LN22@pkey_dh_ct
	DD	$LN24@pkey_dh_ct
	DD	$LN25@pkey_dh_ct
	DD	$LN29@pkey_dh_ct
	DD	$LN30@pkey_dh_ct
	DD	$LN32@pkey_dh_ct
_pkey_dh_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dh_cleanup
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey_dh_cleanup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 154
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+20]
; Line 155
	test	esi, esi
	je	SHORT $LN2@pkey_dh_cl
; Line 156
	mov	eax, DWORD PTR [esi+44]
	test	eax, eax
	je	SHORT $LN3@pkey_dh_cl
; Line 157
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@pkey_dh_cl:
; Line 158
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN4@pkey_dh_cl
; Line 159
	push	eax
	call	_ASN1_OBJECT_free
	add	esp, 4
$LN4@pkey_dh_cl:
; Line 160
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN2@pkey_dh_cl:
	pop	esi
; Line 162
	ret	0
_pkey_dh_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dh_copy
_TEXT	SEGMENT
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_pkey_dh_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 126
	push	esi
; Line 128
	mov	esi, DWORD PTR _dst$[esp]
	push	esi
	call	_pkey_dh_init
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@pkey_dh_co
	pop	esi
; Line 150
	ret	0
$LN2@pkey_dh_co:
; Line 130
	mov	eax, DWORD PTR _src$[esp]
; Line 131
	mov	esi, DWORD PTR [esi+20]
	push	edi
	mov	edi, DWORD PTR [eax+20]
; Line 132
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
; Line 133
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
; Line 134
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], eax
; Line 135
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax
; Line 136
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
; Line 137
	mov	eax, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], eax
; Line 139
	mov	al, BYTE PTR [edi+32]
	mov	BYTE PTR [esi+32], al
; Line 140
	push	DWORD PTR [edi+36]
	call	_OBJ_dup
	add	esp, 4
	mov	DWORD PTR [esi+36], eax
; Line 141
	test	eax, eax
	jne	SHORT $LN3@pkey_dh_co
	pop	edi
	pop	esi
; Line 150
	ret	0
$LN3@pkey_dh_co:
; Line 144
	cmp	DWORD PTR [esi+44], 0
	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [esi+40], eax
	je	SHORT $LN4@pkey_dh_co
; Line 145
	push	DWORD PTR [edi+48]
	push	DWORD PTR [edi+44]
	call	_BUF_memdup
	mov	DWORD PTR [esi+44], eax
	add	esp, 8
; Line 146
	mov	eax, DWORD PTR [edi+48]
	mov	DWORD PTR [esi+48], eax
$LN4@pkey_dh_co:
; Line 148
	mov	eax, DWORD PTR [edi+52]
	mov	DWORD PTR [esi+52], eax
; Line 149
	mov	eax, 1
	pop	edi
	pop	esi
; Line 150
	ret	0
_pkey_dh_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dh_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey_dh_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_pmeth.c
; Line 101
	push	101					; 00000065H
	push	OFFSET ??_C@_0BH@BKNKMCNH@?4?2crypto?2dh?2dh_pmeth?4c?$AA@
	push	56					; 00000038H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 102
	test	eax, eax
	jne	SHORT $LN2@pkey_dh_in
; Line 123
	ret	0
$LN2@pkey_dh_in:
; Line 118
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	DWORD PTR [eax], 1024			; 00000400H
	mov	DWORD PTR [eax+12], -1
	mov	DWORD PTR [eax+4], 2
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+16], 0
	mov	DWORD PTR [eax+20], 0
	mov	BYTE PTR [eax+32], 1
	mov	DWORD PTR [eax+36], 0
	mov	DWORD PTR [eax+40], 0
	mov	DWORD PTR [eax+44], 0
	mov	DWORD PTR [eax+48], 0
	mov	DWORD PTR [eax+52], 0
	mov	DWORD PTR [ecx+20], eax
; Line 119
	add	eax, 24					; 00000018H
	mov	DWORD PTR [ecx+32], eax
; Line 122
	mov	eax, 1
	mov	DWORD PTR [ecx+36], 2
; Line 123
	ret	0
_pkey_dh_init ENDP
_TEXT	ENDS
END

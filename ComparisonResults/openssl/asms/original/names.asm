; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EVP_add_cipher
PUBLIC	_EVP_add_digest
PUBLIC	_EVP_get_cipherbyname
PUBLIC	_EVP_get_digestbyname
PUBLIC	_EVP_cleanup
PUBLIC	_EVP_CIPHER_do_all
PUBLIC	_EVP_CIPHER_do_all_sorted
PUBLIC	_EVP_MD_do_all
PUBLIC	_EVP_MD_do_all_sorted
EXTRN	_OPENSSL_init:PROC
EXTRN	_OBJ_NAME_get:PROC
EXTRN	_OBJ_NAME_add:PROC
EXTRN	_OBJ_NAME_cleanup:PROC
EXTRN	_OBJ_NAME_do_all:PROC
EXTRN	_OBJ_NAME_do_all_sorted:PROC
EXTRN	_OBJ_nid2ln:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_cleanup:PROC
EXTRN	_OBJ_sigid_free:PROC
EXTRN	_check_defer:PROC
EXTRN	_EVP_PBE_cleanup:PROC
EXTRN	__chkstk:PROC
EXTRN	_obj_cleanup_defer:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _do_all_md_fn
_TEXT	SEGMENT
_nm$ = 8						; size = 4
_arg$ = 12						; size = 4
_do_all_md_fn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 192
	mov	eax, DWORD PTR _arg$[esp-4]
	mov	ecx, DWORD PTR _nm$[esp-4]
	push	DWORD PTR [eax]
	cmp	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR [eax+4]
	je	SHORT $LN2@do_all_md_
	push	DWORD PTR [ecx+12]
	push	DWORD PTR [ecx+8]
	push	0
; Line 194
	call	eax
	add	esp, 16					; 00000010H
; Line 195
	ret	0
$LN2@do_all_md_:
; Line 194
	push	0
	push	DWORD PTR [ecx+8]
	push	DWORD PTR [ecx+12]
	call	eax
	add	esp, 16					; 00000010H
; Line 195
	ret	0
_do_all_md_fn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_all_cipher_fn
_TEXT	SEGMENT
_nm$ = 8						; size = 4
_arg$ = 12						; size = 4
_do_all_cipher_fn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 157
	mov	eax, DWORD PTR _arg$[esp-4]
	mov	ecx, DWORD PTR _nm$[esp-4]
	push	DWORD PTR [eax]
	cmp	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR [eax+4]
	je	SHORT $LN2@do_all_cip
	push	DWORD PTR [ecx+12]
	push	DWORD PTR [ecx+8]
	push	0
; Line 159
	call	eax
	add	esp, 16					; 00000010H
; Line 160
	ret	0
$LN2@do_all_cip:
; Line 159
	push	0
	push	DWORD PTR [ecx+8]
	push	DWORD PTR [ecx+12]
	call	eax
	add	esp, 16					; 00000010H
; Line 160
	ret	0
_do_all_cipher_fn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_MD_do_all_sorted
_TEXT	SEGMENT
_dc$ = -8						; size = 8
_fn$ = 8						; size = 4
_arg$ = 12						; size = 4
_EVP_MD_do_all_sorted PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 210
	mov	eax, 8
	call	__chkstk
; Line 212
	mov	eax, DWORD PTR _fn$[esp+4]
	mov	DWORD PTR _dc$[esp+12], eax
; Line 213
	mov	eax, DWORD PTR _arg$[esp+4]
	mov	DWORD PTR _dc$[esp+8], eax
; Line 214
	lea	eax, DWORD PTR _dc$[esp+8]
	push	eax
	push	OFFSET _do_all_md_fn
	push	1
	call	_OBJ_NAME_do_all_sorted
; Line 215
	add	esp, 20					; 00000014H
	ret	0
_EVP_MD_do_all_sorted ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_MD_do_all
_TEXT	SEGMENT
_dc$ = -8						; size = 8
_fn$ = 8						; size = 4
_arg$ = 12						; size = 4
_EVP_MD_do_all PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 200
	mov	eax, 8
	call	__chkstk
; Line 202
	mov	eax, DWORD PTR _fn$[esp+4]
	mov	DWORD PTR _dc$[esp+12], eax
; Line 203
	mov	eax, DWORD PTR _arg$[esp+4]
	mov	DWORD PTR _dc$[esp+8], eax
; Line 204
	lea	eax, DWORD PTR _dc$[esp+8]
	push	eax
	push	OFFSET _do_all_md_fn
	push	1
	call	_OBJ_NAME_do_all
; Line 205
	add	esp, 20					; 00000014H
	ret	0
_EVP_MD_do_all ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_CIPHER_do_all_sorted
_TEXT	SEGMENT
_dc$ = -8						; size = 8
_fn$ = 8						; size = 4
_arg$ = 12						; size = 4
_EVP_CIPHER_do_all_sorted PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 175
	mov	eax, 8
	call	__chkstk
; Line 177
	mov	eax, DWORD PTR _fn$[esp+4]
	mov	DWORD PTR _dc$[esp+12], eax
; Line 178
	mov	eax, DWORD PTR _arg$[esp+4]
	mov	DWORD PTR _dc$[esp+8], eax
; Line 179
	lea	eax, DWORD PTR _dc$[esp+8]
	push	eax
	push	OFFSET _do_all_cipher_fn
	push	2
	call	_OBJ_NAME_do_all_sorted
; Line 180
	add	esp, 20					; 00000014H
	ret	0
_EVP_CIPHER_do_all_sorted ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_CIPHER_do_all
_TEXT	SEGMENT
_dc$ = -8						; size = 8
_fn$ = 8						; size = 4
_arg$ = 12						; size = 4
_EVP_CIPHER_do_all PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 165
	mov	eax, 8
	call	__chkstk
; Line 167
	mov	eax, DWORD PTR _fn$[esp+4]
	mov	DWORD PTR _dc$[esp+12], eax
; Line 168
	mov	eax, DWORD PTR _arg$[esp+4]
	mov	DWORD PTR _dc$[esp+8], eax
; Line 169
	lea	eax, DWORD PTR _dc$[esp+8]
	push	eax
	push	OFFSET _do_all_cipher_fn
	push	2
	call	_OBJ_NAME_do_all
; Line 170
	add	esp, 20					; 00000014H
	ret	0
_EVP_CIPHER_do_all ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_cleanup
_TEXT	SEGMENT
_EVP_cleanup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 130
	push	2
	call	_OBJ_NAME_cleanup
; Line 131
	push	1
	call	_OBJ_NAME_cleanup
; Line 137
	push	-1
	call	_OBJ_NAME_cleanup
	add	esp, 12					; 0000000cH
; Line 139
	call	_EVP_PBE_cleanup
; Line 140
	cmp	DWORD PTR _obj_cleanup_defer, 2
	jne	SHORT $LN2@EVP_cleanu
; Line 141
	mov	DWORD PTR _obj_cleanup_defer, 0
; Line 142
	call	_OBJ_cleanup
$LN2@EVP_cleanu:
; Line 144
	jmp	_OBJ_sigid_free
_EVP_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_get_digestbyname
_TEXT	SEGMENT
_name$ = 8						; size = 4
_EVP_get_digestbyname PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 124
	push	1
	push	DWORD PTR _name$[esp]
	call	_OBJ_NAME_get
	add	esp, 8
; Line 126
	ret	0
_EVP_get_digestbyname ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_get_cipherbyname
_TEXT	SEGMENT
_name$ = 8						; size = 4
_EVP_get_cipherbyname PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 116
	push	2
	push	DWORD PTR _name$[esp]
	call	_OBJ_NAME_get
	add	esp, 8
; Line 118
	ret	0
_EVP_get_cipherbyname ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_add_digest
_TEXT	SEGMENT
_md$ = 8						; size = 4
_EVP_add_digest PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 85
	push	esi
	push	edi
; Line 88
	call	_OPENSSL_init
; Line 90
	mov	esi, DWORD PTR _md$[esp+4]
	push	DWORD PTR [esi]
	call	_OBJ_nid2sn
; Line 91
	push	esi
	mov	edi, eax
	push	1
	push	edi
	call	_OBJ_NAME_add
	add	esp, 16					; 00000010H
; Line 92
	test	eax, eax
	jne	SHORT $LN2@EVP_add_di
$LN7@EVP_add_di:
	pop	edi
; Line 93
	xor	eax, eax
	pop	esi
; Line 110
	ret	0
$LN2@EVP_add_di:
; Line 94
	push	DWORD PTR [esi]
	call	_check_defer
	add	esp, 4
; Line 95
	push	esi
	push	1
	push	DWORD PTR [esi]
	call	_OBJ_nid2ln
	add	esp, 4
	push	eax
	call	_OBJ_NAME_add
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 97
	test	ecx, ecx
	je	SHORT $LN7@EVP_add_di
; Line 100
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@EVP_add_di
	cmp	DWORD PTR [esi], eax
	je	SHORT $LN4@EVP_add_di
; Line 101
	push	edi
	push	32769					; 00008001H
	push	eax
	call	_OBJ_nid2sn
	add	esp, 4
	push	eax
	call	_OBJ_NAME_add
	add	esp, 12					; 0000000cH
; Line 103
	test	eax, eax
	je	SHORT $LN7@EVP_add_di
; Line 105
	push	DWORD PTR [esi+4]
	call	_check_defer
	add	esp, 4
; Line 106
	push	edi
	push	32769					; 00008001H
	push	DWORD PTR [esi+4]
	call	_OBJ_nid2ln
	add	esp, 4
	push	eax
	call	_OBJ_NAME_add
	add	esp, 12					; 0000000cH
	mov	ecx, eax
$LN4@EVP_add_di:
; Line 109
	pop	edi
	mov	eax, ecx
	pop	esi
; Line 110
	ret	0
_EVP_add_digest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_add_cipher
_TEXT	SEGMENT
_c$ = 8							; size = 4
_EVP_add_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\names.c
; Line 66
	push	esi
; Line 69
	mov	esi, DWORD PTR _c$[esp]
	test	esi, esi
	jne	SHORT $LN2@EVP_add_ci
$LN5@EVP_add_ci:
; Line 70
	xor	eax, eax
	pop	esi
; Line 82
	ret	0
$LN2@EVP_add_ci:
; Line 72
	call	_OPENSSL_init
; Line 74
	push	esi
	push	2
	push	DWORD PTR [esi]
	call	_OBJ_nid2sn
	add	esp, 4
	push	eax
	call	_OBJ_NAME_add
	add	esp, 12					; 0000000cH
; Line 76
	test	eax, eax
	je	SHORT $LN5@EVP_add_ci
; Line 78
	push	DWORD PTR [esi]
	call	_check_defer
	add	esp, 4
; Line 79
	push	esi
	push	2
	push	DWORD PTR [esi]
	call	_OBJ_nid2ln
	add	esp, 4
	push	eax
	call	_OBJ_NAME_add
	add	esp, 12					; 0000000cH
	pop	esi
; Line 82
	ret	0
_EVP_add_cipher ENDP
_TEXT	ENDS
END

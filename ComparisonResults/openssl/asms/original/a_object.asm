; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_OBJECT_new
PUBLIC	_ASN1_OBJECT_free
PUBLIC	_i2d_ASN1_OBJECT
PUBLIC	_c2i_ASN1_OBJECT
PUBLIC	_d2i_ASN1_OBJECT
PUBLIC	_i2a_ASN1_OBJECT
PUBLIC	_i2t_ASN1_OBJECT
PUBLIC	_a2d_ASN1_OBJECT
PUBLIC	_ASN1_OBJECT_create
PUBLIC	??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@ ; `string'
PUBLIC	??_C@_04HIBGFPH@NULL?$AA@			; `string'
PUBLIC	??_C@_09OJNEAJGG@?$DMINVALID?$DO?$AA@		; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_div_word:PROC
EXTRN	_BN_mul_word:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_free:PROC
EXTRN	_ASN1_get_object:PROC
EXTRN	_ASN1_put_object:PROC
EXTRN	_ASN1_object_size:PROC
EXTRN	_OBJ_dup:PROC
EXTRN	_OBJ_obj2txt:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_09OJNEAJGG@?$DMINVALID?$DO?$AA@
CONST	SEGMENT
??_C@_09OJNEAJGG@?$DMINVALID?$DO?$AA@ DB '<INVALID>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIBGFPH@NULL?$AA@
CONST	SEGMENT
??_C@_04HIBGFPH@NULL?$AA@ DB 'NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'_object.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_OBJECT_create
_TEXT	SEGMENT
_o$ = -24						; size = 24
_nid$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sn$ = 20						; size = 4
_ln$ = 24						; size = 4
_ASN1_OBJECT_create PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 387
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 390
	mov	eax, DWORD PTR _sn$[esp+20]
	mov	DWORD PTR _o$[esp+24], eax
; Line 391
	mov	eax, DWORD PTR _ln$[esp+20]
	mov	DWORD PTR _o$[esp+28], eax
; Line 392
	mov	eax, DWORD PTR _data$[esp+20]
	mov	DWORD PTR _o$[esp+40], eax
; Line 393
	mov	eax, DWORD PTR _nid$[esp+20]
	mov	DWORD PTR _o$[esp+32], eax
; Line 394
	mov	eax, DWORD PTR _len$[esp+20]
	mov	DWORD PTR _o$[esp+36], eax
; Line 397
	lea	eax, DWORD PTR _o$[esp+24]
	push	eax
	mov	DWORD PTR _o$[esp+48], 13		; 0000000dH
	call	_OBJ_dup
; Line 398
	add	esp, 28					; 0000001cH
	ret	0
_ASN1_OBJECT_create ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _a2d_ASN1_OBJECT
_TEXT	SEGMENT
_tmp$1$ = -60						; size = 4
_len$1$ = -56						; size = 4
_use_bn$1$ = -52					; size = 4
_p$1$ = -48						; size = 4
_tmpsize$1$ = -44					; size = 4
_c$2$ = -40						; size = 4
_first$1$ = -36						; size = 4
_out$GSCopy$1$ = -32					; size = 4
_ftmp$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_olen$ = 12						; size = 4
_buf$ = 16						; size = 4
_num$ = 20						; size = 4
_a2d_ASN1_OBJECT PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 89
	mov	eax, 60					; 0000003cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+60], eax
	mov	eax, DWORD PTR _out$[esp+56]
; Line 90
	xor	ecx, ecx
	mov	edx, DWORD PTR _buf$[esp+56]
	push	esi
; Line 97
	mov	esi, DWORD PTR _num$[esp+60]
	push	edi
	mov	DWORD PTR _out$GSCopy$1$[esp+68], eax
	xor	edi, edi
	mov	DWORD PTR _len$1$[esp+68], ecx
	lea	eax, DWORD PTR _ftmp$[esp+68]
	mov	DWORD PTR _tmp$1$[esp+68], eax
	mov	DWORD PTR _tmpsize$1$[esp+68], 24	; 00000018H
	test	esi, esi
	jne	SHORT $LN15@a2d_ASN1_O
; Line 98
	pop	edi
	xor	eax, eax
	pop	esi
; Line 211
	mov	ecx, DWORD PTR __$ArrayPad$[esp+60]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	ret	0
$LN15@a2d_ASN1_O:
	push	ebx
; Line 99
	cmp	esi, -1
	jne	SHORT $LN17@a2d_ASN1_O
; Line 100
	mov	esi, edx
	lea	ebx, DWORD PTR [esi+1]
$LL98@a2d_ASN1_O:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL98@a2d_ASN1_O
	sub	esi, ebx
$LN17@a2d_ASN1_O:
; Line 103
	movsx	eax, BYTE PTR [edx]
; Line 104
	dec	esi
; Line 105
	add	eax, -48				; ffffffd0H
	mov	DWORD PTR _first$1$[esp+72], eax
	push	ebp
	cmp	eax, 2
	ja	$LN18@a2d_ASN1_O
; Line 112
	test	esi, esi
	jg	SHORT $LN20@a2d_ASN1_O
; Line 113
	push	113					; 00000071H
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	138					; 0000008aH
; Line 114
	jmp	$LN117@a2d_ASN1_O
$LN20@a2d_ASN1_O:
; Line 116
	movsx	ebp, BYTE PTR [edx+1]
; Line 117
	dec	esi
	add	edx, 2
	mov	DWORD PTR _c$2$[esp+76], ebp
	mov	DWORD PTR _p$1$[esp+76], edx
	mov	DWORD PTR _num$[esp+72], esi
; Line 119
	test	esi, esi
	jle	$LN51@a2d_ASN1_O
$LL2@a2d_ASN1_O:
; Line 121
	cmp	ebp, 46					; 0000002eH
	je	SHORT $LN22@a2d_ASN1_O
	cmp	ebp, 32					; 00000020H
	jne	$LN67@a2d_ASN1_O
$LN22@a2d_ASN1_O:
; Line 126
	xor	eax, eax
	xor	ebx, ebx
	mov	DWORD PTR _use_bn$1$[esp+76], eax
; Line 128
	test	esi, esi
	jle	$LN61@a2d_ASN1_O
	npad	2
$LL5@a2d_ASN1_O:
; Line 131
	movsx	ebp, BYTE PTR [edx]
	dec	esi
	inc	edx
	mov	DWORD PTR _num$[esp+72], esi
	mov	DWORD PTR _c$2$[esp+76], ebp
	mov	DWORD PTR _p$1$[esp+76], edx
; Line 132
	cmp	ebp, 32					; 00000020H
	je	$LN108@a2d_ASN1_O
	cmp	ebp, 46					; 0000002eH
	je	$LN108@a2d_ASN1_O
; Line 134
	cmp	ebp, 48					; 00000030H
	jl	$LN27@a2d_ASN1_O
	cmp	ebp, 57					; 00000039H
	jg	$LN27@a2d_ASN1_O
; Line 138
	test	eax, eax
	jne	SHORT $LN90@a2d_ASN1_O
	cmp	ebx, 429496721				; 19999991H
	jb	$LN32@a2d_ASN1_O
; Line 139
	mov	DWORD PTR _use_bn$1$[esp+76], 1
; Line 140
	test	edi, edi
	jne	SHORT $LN89@a2d_ASN1_O
; Line 141
	call	_BN_new
	mov	edi, eax
; Line 142
	test	edi, edi
	je	$LN113@a2d_ASN1_O
$LN89@a2d_ASN1_O:
	push	ebx
	push	edi
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$LN113@a2d_ASN1_O
$LN90@a2d_ASN1_O:
; Line 147
	push	10					; 0000000aH
	push	edi
	call	_BN_mul_word
	add	esp, 8
	test	eax, eax
	je	$LN113@a2d_ASN1_O
	lea	eax, DWORD PTR [ebp-48]
	push	eax
	push	edi
	call	_BN_add_word
	add	esp, 8
	test	eax, eax
	je	$LN113@a2d_ASN1_O
	mov	edx, DWORD PTR _p$1$[esp+76]
$LN33@a2d_ASN1_O:
; Line 128
	mov	eax, DWORD PTR _use_bn$1$[esp+76]
	test	esi, esi
	jg	$LL5@a2d_ASN1_O
$LN108@a2d_ASN1_O:
	mov	ecx, DWORD PTR _len$1$[esp+76]
$LN61@a2d_ASN1_O:
; Line 152
	test	ecx, ecx
	jne	SHORT $LN39@a2d_ASN1_O
; Line 153
	mov	ecx, DWORD PTR _first$1$[esp+76]
	cmp	ecx, 2
	jge	SHORT $LN37@a2d_ASN1_O
	cmp	ebx, 40					; 00000028H
	jae	$LN68@a2d_ASN1_O
$LN37@a2d_ASN1_O:
; Line 158
	test	eax, eax
; Line 159
	lea	eax, DWORD PTR [ecx+ecx*4]
	je	SHORT $LN38@a2d_ASN1_O
	shl	eax, 3
	push	eax
	push	edi
	call	_BN_add_word
	add	esp, 8
	test	eax, eax
	je	$LN113@a2d_ASN1_O
; Line 161
	jmp	SHORT $LN39@a2d_ASN1_O
$LN32@a2d_ASN1_O:
; Line 150
	lea	eax, DWORD PTR [ebx+ebx*4]
	lea	ebx, DWORD PTR [eax*2-48]
	add	ebx, ebp
	jmp	SHORT $LN33@a2d_ASN1_O
$LN38@a2d_ASN1_O:
; Line 162
	lea	ebx, DWORD PTR [ebx+eax*8]
$LN39@a2d_ASN1_O:
; Line 165
	mov	eax, DWORD PTR _use_bn$1$[esp+76]
	xor	esi, esi
	test	eax, eax
	je	$LN103@a2d_ASN1_O
; Line 167
	push	edi
	call	_BN_num_bits
	add	esp, 4
; Line 168
	lea	ecx, DWORD PTR [eax+6]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 2
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
; Line 169
	cmp	ebx, DWORD PTR _tmpsize$1$[esp+76]
	jle	SHORT $LN57@a2d_ASN1_O
; Line 170
	mov	eax, DWORD PTR _tmp$1$[esp+76]
	lea	ecx, DWORD PTR _ftmp$[esp+76]
	cmp	eax, ecx
	je	SHORT $LN44@a2d_ASN1_O
; Line 171
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN44@a2d_ASN1_O:
; Line 173
	push	173					; 000000adH
	lea	eax, DWORD PTR [ebx+32]
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	eax
	mov	DWORD PTR _tmpsize$1$[esp+88], eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _tmp$1$[esp+76], eax
; Line 174
	test	eax, eax
	je	$err$121
$LN57@a2d_ASN1_O:
; Line 177
	test	ebx, ebx
	je	SHORT $LN114@a2d_ASN1_O
	mov	ebp, DWORD PTR _tmp$1$[esp+76]
	npad	7
$LL8@a2d_ASN1_O:
; Line 178
	push	128					; 00000080H
	push	edi
	call	_BN_div_word
	mov	BYTE PTR [esi+ebp], al
	add	esp, 8
	inc	esi
	sub	ebx, 1
	jne	SHORT $LL8@a2d_ASN1_O
	mov	ebp, DWORD PTR _c$2$[esp+76]
$LN114@a2d_ASN1_O:
	mov	edx, DWORD PTR _tmp$1$[esp+76]
$LN65@a2d_ASN1_O:
; Line 189
	mov	ebx, DWORD PTR _out$GSCopy$1$[esp+76]
; Line 190
	mov	ecx, DWORD PTR _len$1$[esp+76]
	test	ebx, ebx
	je	SHORT $LN47@a2d_ASN1_O
	lea	eax, DWORD PTR [esi+ecx]
	cmp	eax, DWORD PTR _olen$[esp+72]
	jg	$LN71@a2d_ASN1_O
; Line 194
	dec	esi
	test	esi, esi
	jle	SHORT $LN14@a2d_ASN1_O
	npad	3
$LL13@a2d_ASN1_O:
; Line 195
	mov	al, BYTE PTR [esi+edx]
	dec	esi
	or	al, 128					; 00000080H
	mov	BYTE PTR [ebx+ecx], al
	inc	ecx
	test	esi, esi
	jg	SHORT $LL13@a2d_ASN1_O
$LN14@a2d_ASN1_O:
; Line 196
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ebx+ecx], al
	inc	ecx
; Line 197
	jmp	SHORT $LN118@a2d_ASN1_O
$LN103@a2d_ASN1_O:
	mov	edx, DWORD PTR _tmp$1$[esp+76]
	npad	6
$LL10@a2d_ASN1_O:
; Line 182
	mov	al, bl
; Line 183
	shr	ebx, 7
	and	al, 127					; 0000007fH
	mov	BYTE PTR [esi+edx], al
	inc	esi
; Line 184
	test	ebx, ebx
	jne	SHORT $LL10@a2d_ASN1_O
	jmp	SHORT $LN65@a2d_ASN1_O
$LN47@a2d_ASN1_O:
; Line 198
	add	ecx, esi
$LN118@a2d_ASN1_O:
; Line 119
	mov	esi, DWORD PTR _num$[esp+72]
; Line 198
	mov	DWORD PTR _len$1$[esp+76], ecx
	test	esi, esi
	jle	$LN97@a2d_ASN1_O
; Line 119
	mov	edx, DWORD PTR _p$1$[esp+76]
	jmp	$LL2@a2d_ASN1_O
$LN67@a2d_ASN1_O:
; Line 122
	push	122					; 0000007aH
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	131					; 00000083H
; Line 123
	jmp	SHORT $LN119@a2d_ASN1_O
$LN27@a2d_ASN1_O:
; Line 135
	push	135					; 00000087H
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	130					; 00000082H
; Line 136
	jmp	SHORT $LN119@a2d_ASN1_O
$LN68@a2d_ASN1_O:
; Line 154
	push	155					; 0000009bH
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	147					; 00000093H
; Line 156
	jmp	SHORT $LN119@a2d_ASN1_O
$LN71@a2d_ASN1_O:
; Line 191
	push	191					; 000000bfH
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	107					; 0000006bH
$LN119@a2d_ASN1_O:
	push	100					; 00000064H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN113@a2d_ASN1_O:
	mov	eax, DWORD PTR _tmp$1$[esp+76]
$err$121:
; Line 206
	lea	ecx, DWORD PTR _ftmp$[esp+76]
	cmp	eax, ecx
	je	SHORT $LN52@a2d_ASN1_O
; Line 207
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN52@a2d_ASN1_O:
; Line 208
	test	edi, edi
	je	SHORT $LN53@a2d_ASN1_O
; Line 209
	push	edi
	call	_BN_free
	add	esp, 4
; Line 210
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 211
	mov	ecx, DWORD PTR __$ArrayPad$[esp+60]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	ret	0
$LN97@a2d_ASN1_O:
; Line 200
	lea	eax, DWORD PTR _ftmp$[esp+76]
	cmp	edx, eax
	je	SHORT $LN50@a2d_ASN1_O
; Line 201
	push	edx
	call	_CRYPTO_free
	add	esp, 4
$LN50@a2d_ASN1_O:
; Line 202
	test	edi, edi
	je	SHORT $LN105@a2d_ASN1_O
; Line 203
	push	edi
	call	_BN_free
	add	esp, 4
$LN105@a2d_ASN1_O:
	mov	ecx, DWORD PTR _len$1$[esp+76]
$LN51@a2d_ASN1_O:
	pop	ebp
	pop	ebx
	pop	edi
; Line 204
	mov	eax, ecx
	pop	esi
; Line 211
	mov	ecx, DWORD PTR __$ArrayPad$[esp+60]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	ret	0
$LN18@a2d_ASN1_O:
; Line 108
	push	108					; 0000006cH
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	122					; 0000007aH
$LN117@a2d_ASN1_O:
	push	100					; 00000064H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN53@a2d_ASN1_O:
; Line 211
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	ret	0
_a2d_ASN1_OBJECT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2t_ASN1_OBJECT
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_buf_len$ = 12						; size = 4
_a$ = 16						; size = 4
_i2t_ASN1_OBJECT PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 215
	push	0
	push	DWORD PTR _a$[esp]
	push	DWORD PTR _buf_len$[esp+4]
	push	DWORD PTR _buf$[esp+8]
	call	_OBJ_obj2txt
	add	esp, 16					; 00000010H
; Line 216
	ret	0
_i2t_ASN1_OBJECT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2a_ASN1_OBJECT
_TEXT	SEGMENT
_buf$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_a$ = 12						; size = 4
_i2a_ASN1_OBJECT PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 219
	mov	eax, 84					; 00000054H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
	push	ebx
	mov	ebx, DWORD PTR _a$[esp+84]
	push	ebp
	mov	ebp, DWORD PTR _bp$[esp+88]
	push	esi
; Line 220
	lea	esi, DWORD PTR _buf$[esp+96]
; Line 223
	test	ebx, ebx
	je	$LN3@i2a_ASN1_O
	cmp	DWORD PTR [ebx+16], 0
	je	$LN3@i2a_ASN1_O
	push	edi
; Line 215
	push	0
	push	ebx
	mov	eax, esi
	push	80					; 00000050H
	push	eax
	call	_OBJ_obj2txt
; Line 225
	mov	edi, eax
; Line 215
	add	esp, 16					; 00000010H
; Line 226
	cmp	edi, 79					; 0000004fH
	jle	SHORT $LN4@i2a_ASN1_O
; Line 227
	push	227					; 000000e3H
	lea	eax, DWORD PTR [edi+1]
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 228
	test	esi, esi
	jne	SHORT $LN5@i2a_ASN1_O
; Line 229
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 238
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
$LN5@i2a_ASN1_O:
; Line 215
	push	0
	push	ebx
	lea	eax, DWORD PTR [edi+1]
	push	eax
	push	esi
	call	_OBJ_obj2txt
	add	esp, 16					; 00000010H
$LN4@i2a_ASN1_O:
; Line 232
	test	edi, edi
	jg	SHORT $LN6@i2a_ASN1_O
; Line 233
	push	9
	push	OFFSET ??_C@_09OJNEAJGG@?$DMINVALID?$DO?$AA@
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 238
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
$LN6@i2a_ASN1_O:
; Line 234
	push	edi
	push	esi
	push	ebp
	call	_BIO_write
; Line 235
	lea	eax, DWORD PTR _buf$[esp+112]
	add	esp, 12					; 0000000cH
	cmp	esi, eax
	je	SHORT $LN7@i2a_ASN1_O
; Line 236
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN7@i2a_ASN1_O:
; Line 237
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 238
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
$LN3@i2a_ASN1_O:
; Line 224
	push	4
	push	OFFSET ??_C@_04HIBGFPH@NULL?$AA@
	push	ebp
	call	_BIO_write
; Line 238
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	add	esp, 12					; 0000000cH
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
_i2a_ASN1_OBJECT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_ASN1_OBJECT
_TEXT	SEGMENT
_tag$ = -12						; size = 4
_len$ = -8						; size = 4
_xclass$ = -4						; size = 4
_a$ = 8							; size = 4
_p$ = 12						; size = 4
_pp$ = 12						; size = 4
_length$ = 16						; size = 4
_d2i_ASN1_OBJECT PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 242
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	esi
; Line 248
	mov	esi, DWORD PTR _pp$[esp+12]
; Line 249
	push	DWORD PTR _length$[esp+12]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _p$[esp+16], eax
	lea	eax, DWORD PTR _xclass$[esp+20]
	push	eax
	lea	eax, DWORD PTR _tag$[esp+24]
	push	eax
	lea	eax, DWORD PTR _len$[esp+28]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	eax
	call	_ASN1_get_object
	add	esp, 20					; 00000014H
; Line 250
	test	al, al
	jns	SHORT $LN2@d2i_ASN1_O
; Line 251
	mov	eax, 102				; 00000066H
; Line 252
	jmp	SHORT $err$7
$LN2@d2i_ASN1_O:
; Line 255
	cmp	DWORD PTR _tag$[esp+16], 6
	je	SHORT $LN3@d2i_ASN1_O
; Line 256
	mov	eax, 116				; 00000074H
$err$7:
; Line 264
	push	264					; 00000108H
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	eax
	push	147					; 00000093H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 265
	xor	eax, eax
	pop	esi
; Line 266
	add	esp, 12					; 0000000cH
	ret	0
$LN3@d2i_ASN1_O:
; Line 259
	push	DWORD PTR _len$[esp+16]
	lea	eax, DWORD PTR _p$[esp+16]
	push	eax
	push	DWORD PTR _a$[esp+20]
	call	_c2i_ASN1_OBJECT
	add	esp, 12					; 0000000cH
; Line 260
	test	eax, eax
	je	SHORT $LN1@d2i_ASN1_O
; Line 261
	mov	ecx, DWORD PTR _p$[esp+12]
	mov	DWORD PTR [esi], ecx
$LN1@d2i_ASN1_O:
	pop	esi
; Line 266
	add	esp, 12					; 0000000cH
	ret	0
_d2i_ASN1_OBJECT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _c2i_ASN1_OBJECT
_TEXT	SEGMENT
_a$ = 8							; size = 4
_pp$ = 12						; size = 4
_p$2$ = 16						; size = 4
_len$ = 16						; size = 4
_c2i_ASN1_OBJECT PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 270
	push	ebp
	push	edi
; Line 281
	mov	edi, DWORD PTR _len$[esp+4]
	lea	eax, DWORD PTR [edi-1]
	cmp	eax, 2147483646				; 7ffffffeH
	ja	$LN6@c2i_ASN1_O
	mov	ebp, DWORD PTR _pp$[esp+4]
	test	ebp, ebp
	je	$LN6@c2i_ASN1_O
	mov	edx, DWORD PTR [ebp]
	test	edx, edx
	je	$LN6@c2i_ASN1_O
	test	BYTE PTR [edx+edi-1], 128		; 00000080H
	jne	$LN6@c2i_ASN1_O
; Line 288
	xor	eax, eax
	test	edi, edi
	jle	SHORT $LN25@c2i_ASN1_O
	lea	ecx, DWORD PTR [edx-1]
	npad	1
$LL4@c2i_ASN1_O:
; Line 289
	cmp	BYTE PTR [edx+eax], 128			; 00000080H
	jne	SHORT $LN2@c2i_ASN1_O
	test	eax, eax
	je	$LN8@c2i_ASN1_O
	test	BYTE PTR [ecx], 128			; 00000080H
	je	$LN8@c2i_ASN1_O
$LN2@c2i_ASN1_O:
; Line 288
	inc	eax
	inc	ecx
	cmp	eax, edi
	jl	SHORT $LL4@c2i_ASN1_O
$LN25@c2i_ASN1_O:
	push	ebx
; Line 299
	mov	ebx, DWORD PTR _a$[esp+8]
	push	esi
	test	ebx, ebx
	je	SHORT $LN11@c2i_ASN1_O
	mov	esi, DWORD PTR [ebx]
	test	esi, esi
	je	SHORT $LN11@c2i_ASN1_O
	test	BYTE PTR [esi+20], 1
	jne	SHORT $LN12@c2i_ASN1_O
$LN11@c2i_ASN1_O:
; Line 301
	call	_ASN1_OBJECT_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN18@c2i_ASN1_O
$LN12@c2i_ASN1_O:
; Line 306
	mov	eax, DWORD PTR [ebp]
; Line 308
	mov	ebp, DWORD PTR [esi+16]
	mov	DWORD PTR _p$2$[esp+12], eax
; Line 309
	mov	DWORD PTR [esi+16], 0
; Line 311
	test	ebp, ebp
	je	SHORT $LN14@c2i_ASN1_O
	cmp	DWORD PTR [esi+12], edi
	jge	$LN13@c2i_ASN1_O
$LN14@c2i_ASN1_O:
; Line 312
	mov	DWORD PTR [esi+12], 0
; Line 313
	test	ebp, ebp
	je	SHORT $LN15@c2i_ASN1_O
; Line 314
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN15@c2i_ASN1_O:
; Line 315
	push	315					; 0000013bH
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 316
	test	ebp, ebp
	jne	SHORT $LN16@c2i_ASN1_O
$err$30:
; Line 336
	push	336					; 00000150H
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	65					; 00000041H
	push	196					; 000000c4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 337
	test	ebx, ebx
	je	SHORT $LN19@c2i_ASN1_O
	cmp	DWORD PTR [ebx], esi
	je	SHORT $LN18@c2i_ASN1_O
$LN19@c2i_ASN1_O:
; Line 338
	push	esi
	call	_ASN1_OBJECT_free
	add	esp, 4
$LN18@c2i_ASN1_O:
; Line 339
	pop	esi
	pop	ebx
	pop	edi
	xor	eax, eax
	pop	ebp
; Line 340
	ret	0
$LN8@c2i_ASN1_O:
; Line 290
	push	290					; 00000122H
$LN28@c2i_ASN1_O:
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	216					; 000000d8H
	push	196					; 000000c4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 291
	xor	eax, eax
	pop	edi
	pop	ebp
; Line 340
	ret	0
$LN16@c2i_ASN1_O:
; Line 320
	or	DWORD PTR [esi+20], 8
	mov	eax, DWORD PTR _p$2$[esp+12]
$LN13@c2i_ASN1_O:
; Line 322
	push	edi
	push	eax
	push	ebp
	call	_memcpy
; Line 329
	mov	eax, DWORD PTR _p$2$[esp+24]
	add	esp, 12					; 0000000cH
	add	eax, edi
	mov	DWORD PTR [esi+16], ebp
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
; Line 331
	test	ebx, ebx
	je	SHORT $LN17@c2i_ASN1_O
; Line 332
	mov	DWORD PTR [ebx], esi
$LN17@c2i_ASN1_O:
; Line 333
	mov	ecx, DWORD PTR _pp$[esp+12]
	mov	DWORD PTR [ecx], eax
; Line 334
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 340
	ret	0
$LN6@c2i_ASN1_O:
; Line 283
	push	283					; 0000011bH
	jmp	SHORT $LN28@c2i_ASN1_O
_c2i_ASN1_OBJECT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_ASN1_OBJECT
_TEXT	SEGMENT
_p$ = 8							; size = 4
_a$ = 8							; size = 4
_pp$ = 12						; size = 4
_i2d_ASN1_OBJECT PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 68
	push	esi
; Line 72
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	SHORT $LN3@i2d_ASN1_O
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN3@i2d_ASN1_O
; Line 75
	push	ebx
	push	edi
	push	6
	push	DWORD PTR [esi+12]
	push	0
	call	_ASN1_object_size
; Line 76
	mov	ebx, DWORD PTR _pp$[esp+20]
	add	esp, 12					; 0000000cH
	mov	edi, eax
	test	ebx, ebx
	je	SHORT $LN6@i2d_ASN1_O
; Line 79
	mov	eax, DWORD PTR [ebx]
; Line 80
	push	0
	push	6
	push	DWORD PTR [esi+12]
	mov	DWORD PTR _p$[esp+20], eax
	lea	eax, DWORD PTR _p$[esp+20]
	push	0
	push	eax
	call	_ASN1_put_object
; Line 81
	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+16]
	push	DWORD PTR _p$[esp+36]
	call	_memcpy
; Line 82
	mov	eax, DWORD PTR [esi+12]
	add	esp, 32					; 00000020H
	add	eax, DWORD PTR _p$[esp+8]
; Line 84
	mov	DWORD PTR [ebx], eax
; Line 85
	mov	eax, edi
$LN6@i2d_ASN1_O:
	pop	edi
	pop	ebx
	pop	esi
; Line 86
	ret	0
$LN3@i2d_ASN1_O:
; Line 73
	xor	eax, eax
	pop	esi
; Line 86
	ret	0
_i2d_ASN1_OBJECT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_OBJECT_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_ASN1_OBJECT_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 361
	push	esi
; Line 362
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	SHORT $LN8@ASN1_OBJEC
; Line 364
	test	BYTE PTR [esi+20], 4
	je	SHORT $LN3@ASN1_OBJEC
; Line 368
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@ASN1_OBJEC
; Line 369
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@ASN1_OBJEC:
; Line 370
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN5@ASN1_OBJEC
; Line 371
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN5@ASN1_OBJEC:
; Line 373
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], 0
$LN3@ASN1_OBJEC:
; Line 375
	test	BYTE PTR [esi+20], 8
	je	SHORT $LN6@ASN1_OBJEC
; Line 376
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN7@ASN1_OBJEC
; Line 377
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN7@ASN1_OBJEC:
; Line 378
	mov	DWORD PTR [esi+16], 0
; Line 379
	mov	DWORD PTR [esi+12], 0
$LN6@ASN1_OBJEC:
; Line 381
	test	BYTE PTR [esi+20], 1
	je	SHORT $LN8@ASN1_OBJEC
; Line 382
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN8@ASN1_OBJEC:
	pop	esi
; Line 383
	ret	0
_ASN1_OBJECT_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_OBJECT_new
_TEXT	SEGMENT
_ASN1_OBJECT_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_object.c
; Line 346
	push	346					; 0000015aH
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 347
	test	eax, eax
	jne	SHORT $LN2@ASN1_OBJEC
; Line 348
	push	348					; 0000015cH
	push	OFFSET ??_C@_0BJ@GIEGEKPM@?4?2crypto?2asn1?2a_object?4c?$AA@
	push	65					; 00000041H
	push	123					; 0000007bH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 349
	xor	eax, eax
; Line 358
	ret	0
$LN2@ASN1_OBJEC:
; Line 351
	mov	DWORD PTR [eax+12], 0
; Line 352
	mov	DWORD PTR [eax+16], 0
; Line 353
	mov	DWORD PTR [eax+8], 0
; Line 354
	mov	DWORD PTR [eax], 0
; Line 355
	mov	DWORD PTR [eax+4], 0
; Line 356
	mov	DWORD PTR [eax+20], 1
; Line 358
	ret	0
_ASN1_OBJECT_new ENDP
_TEXT	ENDS
END

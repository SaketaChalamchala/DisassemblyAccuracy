; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\req.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_req_conf DD	01H DUP (?)
_batch	DD	01H DUP (?)
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_do_X509_sign
PUBLIC	_do_X509_REQ_sign
PUBLIC	_do_X509_CRL_sign
PUBLIC	_req_main
PUBLIC	??_C@_07CGGPPMGB@?9inform?$AA@			; `string'
PUBLIC	??_C@_08LPHBEAIF@?9outform?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0P@LPDEEGMB@?9keygen_engine?$AA@		; `string'
PUBLIC	??_C@_0BN@CPKKLFKB@Can?8t?5find?5keygen?5engine?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_04FMEKFICB@?9key?$AA@			; `string'
PUBLIC	??_C@_07PABNIEBD@?9pubkey?$AA@			; `string'
PUBLIC	??_C@_04PFBHIFJN@?9new?$AA@			; `string'
PUBLIC	??_C@_07OOKHNANK@?9config?$AA@			; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_07KHMIKCEF@?9keyout?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_08KCDBEMAI@?9passout?$AA@			; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_07GMCKHJOJ@?9newkey?$AA@			; `string'
PUBLIC	??_C@_08JPLFCIIK@?9pkeyopt?$AA@			; `string'
PUBLIC	??_C@_07FNCAFLJP@?9sigopt?$AA@			; `string'
PUBLIC	??_C@_06COHPCLGM@?9batch?$AA@			; `string'
PUBLIC	??_C@_07JMKJGFPL@?9newhdr?$AA@			; `string'
PUBLIC	??_C@_08NJNHONAF@?9modulus?$AA@			; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_06BLCPLFMB@?9nodes?$AA@			; `string'
PUBLIC	??_C@_06JPEJAHHH@?9noout?$AA@			; `string'
PUBLIC	??_C@_08FBJJFDKJ@?9verbose?$AA@			; `string'
PUBLIC	??_C@_05HLKFBLKJ@?9utf8?$AA@			; `string'
PUBLIC	??_C@_08BLLHKMDD@?9nameopt?$AA@			; `string'
PUBLIC	??_C@_07GDDFPCHC@?9reqopt?$AA@			; `string'
PUBLIC	??_C@_08GNEDOIFN@?9subject?$AA@			; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_05NBLHIDAD@?9x509?$AA@			; `string'
PUBLIC	??_C@_0N@GCBKILCE@?9asn1?9kludge?$AA@		; `string'
PUBLIC	??_C@_0BA@OKKENJJO@?9no?9asn1?9kludge?$AA@	; `string'
PUBLIC	??_C@_05MDNNBOGG@?9subj?$AA@			; `string'
PUBLIC	??_C@_0BA@NIPEAEAE@?9multivalue?9rdn?$AA@	; `string'
PUBLIC	??_C@_05EFBFHALF@?9days?$AA@			; `string'
PUBLIC	??_C@_0M@LDCLLBDG@?9set_serial?$AA@		; `string'
PUBLIC	??_C@_0M@BEOOFGDH@?9extensions?$AA@		; `string'
PUBLIC	??_C@_08DFHODPJJ@?9reqexts?$AA@			; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@CHJJKKLI@where?5options?5?5are?6?$AA@	; `string'
PUBLIC	??_C@_0CL@MDOLAFAK@?5?9inform?5arg?5?5?5?5input?5format?5?9?5D@ ; `string'
PUBLIC	??_C@_0CM@OEOKNGNO@?5?9outform?5arg?5?5?5output?5format?5?9?5@ ; `string'
PUBLIC	??_C@_0BM@BNDOLEGE@?5?9in?5arg?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@NLKPGMME@?5?9out?5arg?5?5?5?5?5?5?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@OIEFBBAO@?5?9text?5?5?5?5?5?5?5?5?5?5text?5form?5of?5req@ ; `string'
PUBLIC	??_C@_0CD@KGCNKBCD@?5?9pubkey?5?5?5?5?5?5?5?5output?5public?5ke@ ; `string'
PUBLIC	??_C@_0CD@JIDAIBMD@?5?9noout?5?5?5?5?5?5?5?5?5do?5not?5output?5RE@ ; `string'
PUBLIC	??_C@_0CJ@ICFAPLND@?5?9verify?5?5?5?5?5?5?5?5verify?5signature@ ; `string'
PUBLIC	??_C@_0BN@LLCCILG@?5?9modulus?5?5?5?5?5?5?5RSA?5modulus?6?$AA@ ; `string'
PUBLIC	??_C@_0CO@NLDNMACB@?5?9nodes?5?5?5?5?5?5?5?5?5don?8t?5encrypt?5th@ ; `string'
PUBLIC	??_C@_0DK@BPMBDPII@?5?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5po@ ; `string'
PUBLIC	??_C@_0CO@MFDIAJIM@?5?9subject?5?5?5?5?5?5?5output?5the?5reque@ ; `string'
PUBLIC	??_C@_0CN@MLPHKBCF@?5?9passin?5?5?5?5?5?5?5?5private?5key?5pass@ ; `string'
PUBLIC	??_C@_0DH@PKGEJNOC@?5?9key?5file?5?5?5?5?5?5use?5the?5private?5@ ; `string'
PUBLIC	??_C@_0CB@LMHDCKJL@?5?9keyform?5arg?5?5?5key?5file?5format?6@ ; `string'
PUBLIC	??_C@_0CJ@EOJCAFHI@?5?9keyout?5arg?5?5?5?5file?5to?5send?5the@ ; `string'
PUBLIC	??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0EE@JPAFCFML@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIo@ ; `string'
PUBLIC	??_C@_0CN@EKAIOOCB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numbe@ ; `string'
PUBLIC	??_C@_0DM@GHAGNPLI@?5?9newkey?5rsa?3bits?5generate?5a?5new@ ; `string'
PUBLIC	??_C@_0EO@CNJNIGKO@?5?9newkey?5dsa?3file?5generate?5a?5new@ ; `string'
PUBLIC	??_C@_0EM@PADDHLNP@?5?9newkey?5ec?3file?5generate?5a?5new?5@ ; `string'
PUBLIC	??_C@_0EB@IEFBPBDC@?5?9?$FLdigest?$FN?5?5?5?5?5?5Digest?5to?5sign?5w@ ; `string'
PUBLIC	??_C@_0CI@DIABMJEF@?5?9config?5file?5?5?5request?5template@ ; `string'
PUBLIC	??_C@_0CP@HCNCEBKD@?5?9subj?5arg?5?5?5?5?5?5set?5or?5modify?5re@ ; `string'
PUBLIC	??_C@_0DG@CNHPGMNH@?5?9multivalue?9rdn?5enable?5support?5@ ; `string'
PUBLIC	??_C@_0BO@NIINFKKJ@?5?9new?5?5?5?5?5?5?5?5?5?5?5new?5request?4?6?$AA@ ; `string'
PUBLIC	??_C@_0DP@HGDJHLP@?5?9batch?5?5?5?5?5?5?5?5?5do?5not?5ask?5anyth@ ; `string'
PUBLIC	??_C@_0EB@BKMGOBMN@?5?9x509?5?5?5?5?5?5?5?5?5?5output?5a?5x509?5st@ ; `string'
PUBLIC	??_C@_0EP@BJOKFCBC@?5?9days?5?5?5?5?5?5?5?5?5?5number?5of?5days?5a@ ; `string'
PUBLIC	??_C@_0EM@IDBMALNJ@?5?9set_serial?5?5?5?5serial?5number?5to@ ; `string'
PUBLIC	??_C@_0DC@EIIKHMHB@?5?9newhdr?5?5?5?5?5?5?5?5output?5?$CCNEW?$CC?5in?5@ ; `string'
PUBLIC	??_C@_0EO@KKMFBONC@?5?9asn1?9kludge?5?5?5Output?5the?5?8requ@ ; `string'
PUBLIC	??_C@_0DB@FMNPFGKD@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5have?5been?5report@ ; `string'
PUBLIC	??_C@_0FH@DLNHGECL@?5?9extensions?5?4?4?5specify?5certific@ ; `string'
PUBLIC	??_C@_0FD@PNHFCKKJ@?5?9reqexts?5?4?4?5?5?5?5specify?5request?5@ ; `string'
PUBLIC	??_C@_0DL@KMNLMCKB@?5?9utf8?5?5?5?5?5?5?5?5?5?5input?5characters@ ; `string'
PUBLIC	??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@ ; `string'
PUBLIC	??_C@_0DB@DHIJEKH@?5?9reqopt?5arg?5?5?5?5?9?5various?5reques@ ; `string'
PUBLIC	??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@BNDHOAPM@error?5on?5line?5?$CFld?5of?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CE@EDEOOKJA@Unable?5to?5load?5config?5info?5from?5@ ; `string'
PUBLIC	??_C@_08NOLCFLKC@oid_file?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0L@GPEHKDBA@default_md?$AA@		; `string'
PUBLIC	??_C@_03GHLFAJII@req?$AA@			; `string'
PUBLIC	??_C@_0BA@DDJOFEBJ@x509_extensions?$AA@		; `string'
PUBLIC	??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@ ; `string'
PUBLIC	??_C@_0P@JJFIBNNH@input_password?$AA@		; `string'
PUBLIC	??_C@_0BA@KAIJGPIE@output_password?$AA@		; `string'
PUBLIC	??_C@_0M@NPFHBEIA@string_mask?$AA@		; `string'
PUBLIC	??_C@_0CH@PNKCABBA@Invalid?5global?5string?5mask?5setti@ ; `string'
PUBLIC	??_C@_04LHHHFLPP@utf8?$AA@			; `string'
PUBLIC	??_C@_03ICICOMAL@yes?$AA@			; `string'
PUBLIC	??_C@_0P@LBFPKDKM@req_extensions?$AA@		; `string'
PUBLIC	??_C@_0CM@FAJMBBDK@Error?5Loading?5request?5extension?5@ ; `string'
PUBLIC	??_C@_0M@NBDOOMPD@Private?5Key?$AA@		; `string'
PUBLIC	??_C@_08OFLJHDDG@RANDFILE?$AA@			; `string'
PUBLIC	??_C@_0N@CCMNCKPB@default_bits?$AA@		; `string'
PUBLIC	??_C@_0CC@ELOKEOPP@private?5key?5length?5is?5too?5short?0@ ; `string'
PUBLIC	??_C@_0CK@DBFJKCLJ@it?5needs?5to?5be?5at?5least?5?$CFd?5bits?0@ ; `string'
PUBLIC	??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@BBJFODEP@Generating?5a?5?$CFld?5bit?5?$CFs?5private?5@ ; `string'
PUBLIC	??_C@_0BG@HLDNBPLC@Error?5Generating?5Key?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@ONKAAELM@default_keyfile?$AA@		; `string'
PUBLIC	??_C@_0CD@MNJCLBII@writing?5new?5private?5key?5to?5stdou@ ; `string'
PUBLIC	??_C@_0CB@LGKDEPPP@writing?5new?5private?5key?5to?5?8?$CFs?8?6@ ; `string'
PUBLIC	??_C@_0BA@NGFFPLIL@encrypt_rsa_key?$AA@		; `string'
PUBLIC	??_C@_0M@PLLNDNLN@encrypt_key?$AA@		; `string'
PUBLIC	??_C@_02KAJCLHKP@no?$AA@			; `string'
PUBLIC	??_C@_06NGLIMPFK@?9?9?9?9?9?6?$AA@		; `string'
PUBLIC	??_C@_0CN@JGBMBJMK@bad?5input?5format?5specified?5for?5X@ ; `string'
PUBLIC	??_C@_0BN@CMIEOFLN@unable?5to?5load?5X509?5request?6?$AA@ ; `string'
PUBLIC	??_C@_0CD@LIJJNJII@you?5need?5to?5specify?5a?5private?5ke@ ; `string'
PUBLIC	??_C@_0CF@JJEMGJAP@problems?5making?5Certificate?5Requ@ ; `string'
PUBLIC	??_C@_0CE@GJDHAICG@Cannot?5modifiy?5certificate?5subje@ ; `string'
PUBLIC	??_C@_0BN@CAIPGNIG@Modifying?5Request?8s?5Subject?6?$AA@ ; `string'
PUBLIC	??_C@_0N@ICIJEIAD@old?5subject?$DN?$AA@		; `string'
PUBLIC	??_C@_0BO@BCHAKGEI@ERROR?3?5cannot?5modify?5subject?6?$AA@ ; `string'
PUBLIC	??_C@_0N@PFKCAJNN@new?5subject?$DN?$AA@		; `string'
PUBLIC	??_C@_0BA@HHOHOMNK@verify?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0L@OEANIBEG@verify?5OK?6?$AA@		; `string'
PUBLIC	??_C@_0BK@GNCDDMAG@Error?5getting?5public?5key?6?$AA@ ; `string'
PUBLIC	??_C@_08MAHPNCKH@subject?$DN?$AA@		; `string'
PUBLIC	??_C@_0BF@HHKPFLJJ@Modulus?$DNunavailable?6?$AA@ ; `string'
PUBLIC	??_C@_08CHIKBNMH@Modulus?$DN?$AA@		; `string'
PUBLIC	??_C@_0BF@JNOIECJP@Wrong?5Algorithm?5type?$AA@	; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; `string'
PUBLIC	??_C@_0BO@BMBGMBGL@unable?5to?5write?5X509?5request?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@GEADPADN@unable?5to?5write?5X509?5certificate@ ; `string'
PUBLIC	??_C@_06FJNEHIA@prompt?$AA@			; `string'
PUBLIC	??_C@_0BD@OKKOOBH@distinguished_name?$AA@	; `string'
PUBLIC	??_C@_0BP@NEGAOIHA@unable?5to?5find?5?8?$CFs?8?5in?5config?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@NEMCEOPF@unable?5to?5get?5?8?$CFs?8?5section?6?$AA@ ; `string'
PUBLIC	??_C@_0L@HNMJPKNA@attributes?$AA@		; `string'
PUBLIC	??_C@_0EK@HLOABFDI@You?5are?5about?5to?5be?5asked?5to?5ent@ ; `string'
PUBLIC	??_C@_0CA@NLCOFKOK@into?5your?5certificate?5request?4?6?$AA@ ; `string'
PUBLIC	??_C@_0EN@MLJBJLJF@What?5you?5are?5about?5to?5enter?5is?5w@ ; `string'
PUBLIC	??_C@_0DL@EDIBKDAI@There?5are?5quite?5a?5few?5fields?5but@ ; `string'
PUBLIC	??_C@_0DA@HANEDLAF@For?5some?5fields?5there?5will?5be?5a?5@ ; `string'
PUBLIC	??_C@_0DB@OHAINGEA@If?5you?5enter?5?8?4?8?0?5the?5field?5will@ ; `string'
PUBLIC	??_C@_04PGKKMJKA@_min?$AA@			; `string'
PUBLIC	??_C@_04OECBCNMP@_max?$AA@			; `string'
PUBLIC	??_C@_08BFLCMEFH@_default?$AA@			; `string'
PUBLIC	??_C@_06PFGHHEBM@_value?$AA@			; `string'
PUBLIC	??_C@_0L@HCIJHMBL@?$CFs_default?$AA@		; `string'
PUBLIC	??_C@_0BE@OBIMKCEG@Name?5?8?$CFs?8?5too?5long?6?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_08GELLOOFD@?$CFs_value?$AA@		; `string'
PUBLIC	??_C@_06LNNHIIJH@?$CFs_min?$AA@			; `string'
PUBLIC	??_C@_06KPFMGMPI@?$CFs_max?$AA@			; `string'
PUBLIC	??_C@_0CM@HMOKPNGJ@error?0?5no?5objects?5specified?5in?5c@ ; `string'
PUBLIC	??_C@_0DA@LBPPIBMC@?6Please?5enter?5the?5following?5?8ext@ ; `string'
PUBLIC	??_C@_0CK@LOFFOKNE@to?5be?5sent?5with?5your?5certificate@ ; `string'
PUBLIC	??_C@_0CB@BHIPIDOI@No?5template?0?5please?5set?5one?5up?4?6@ ; `string'
PUBLIC	??_C@_08GLNNLHPK@?$CFs?5?$FL?$CFs?$FN?3?$AA@	; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_0BB@ECEPLLPI@weird?5input?5?3?9?$CI?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@FKDLMMKK@Error?5adding?5attribute?6?$AA@ ; `string'
PUBLIC	??_C@_0DM@OAAMIENP@string?5is?5too?5short?0?5it?5needs?5to@ ; `string'
PUBLIC	??_C@_0DN@BNGDLEBM@string?5is?5too?5long?0?5it?5needs?5to?5@ ; `string'
PUBLIC	??_C@_06CIHNIJJG@param?3?$AA@			; `string'
PUBLIC	??_C@_0BI@KBEAOALA@Unknown?5algorithm?5?$CF?4?$CKs?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@HEFFFKLO@Can?8t?5open?5parameter?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@EHHPGCBO@Error?5reading?5parameter?5file?5?$CFs?6@ ; `string'
PUBLIC	??_C@_0CE@PONHIOIP@Key?5Type?5does?5not?5match?5paramete@ ; `string'
PUBLIC	??_C@_0CK@PFJPPKAI@Internal?5error?3?5can?8t?5find?5key?5a@ ; `string'
PUBLIC	??_C@_0CB@JOGMMGKM@Error?5allocating?5keygen?5context?6@ ; `string'
PUBLIC	??_C@_0CD@NAAIIFFH@Error?5initializing?5keygen?5contex@ ; `string'
PUBLIC	??_C@_0BL@NALFDFOL@Error?5setting?5RSA?5keysize?6?$AA@ ; `string'
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__atol:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	_BN_print:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_ASN1_STRING_set_default_mask_asc:PROC
EXTRN	_OBJ_txt2nid:PROC
EXTRN	_OBJ_cleanup:PROC
EXTRN	_OBJ_create_objects:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestSignInit:PROC
EXTRN	_EVP_des_ede3_cbc:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_id:PROC
EXTRN	_EVP_PKEY_base_id:PROC
EXTRN	_EVP_PKEY_bits:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_asn1_find:PROC
EXTRN	_EVP_PKEY_asn1_find_str:PROC
EXTRN	_EVP_PKEY_asn1_get0_info:PROC
EXTRN	_EVP_PKEY_CTX_new:PROC
EXTRN	_EVP_PKEY_CTX_new_id:PROC
EXTRN	_EVP_PKEY_CTX_free:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_EVP_PKEY_CTX_set_app_data:PROC
EXTRN	_EVP_PKEY_CTX_get_app_data:PROC
EXTRN	_EVP_PKEY_keygen_init:PROC
EXTRN	_EVP_PKEY_keygen:PROC
EXTRN	_EVP_PKEY_CTX_set_cb:PROC
EXTRN	_EVP_PKEY_CTX_get_keygen_info:PROC
EXTRN	_X509_REQ_verify:PROC
EXTRN	_X509_sign_ctx:PROC
EXTRN	_X509_REQ_sign_ctx:PROC
EXTRN	_X509_CRL_sign_ctx:PROC
EXTRN	_i2d_X509_bio:PROC
EXTRN	_d2i_X509_REQ_bio:PROC
EXTRN	_i2d_X509_REQ_bio:PROC
EXTRN	_X509_time_adj_ex:PROC
EXTRN	_X509_gmtime_adj:PROC
EXTRN	_X509_REQ_new:PROC
EXTRN	_X509_REQ_free:PROC
EXTRN	_X509_NAME_free:PROC
EXTRN	_X509_new:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_set_version:PROC
EXTRN	_X509_set_serialNumber:PROC
EXTRN	_X509_get_serialNumber:PROC
EXTRN	_X509_set_issuer_name:PROC
EXTRN	_X509_set_subject_name:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_set_pubkey:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_X509_REQ_set_version:PROC
EXTRN	_X509_REQ_set_subject_name:PROC
EXTRN	_X509_REQ_set_pubkey:PROC
EXTRN	_X509_REQ_get_pubkey:PROC
EXTRN	_X509_REQ_add1_attr_by_NID:PROC
EXTRN	_X509_REQ_add1_attr_by_txt:PROC
EXTRN	_X509_print_ex:PROC
EXTRN	_X509_REQ_print_ex:PROC
EXTRN	_X509_NAME_entry_count:PROC
EXTRN	_X509_NAME_add_entry_by_NID:PROC
EXTRN	_X509_NAME_add_entry_by_txt:PROC
EXTRN	_NCONF_new:PROC
EXTRN	_NCONF_free:PROC
EXTRN	_NCONF_load:PROC
EXTRN	_NCONF_get_section:PROC
EXTRN	_NCONF_get_string:PROC
EXTRN	_NCONF_get_number_e:PROC
EXTRN	_ERR_peek_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_ENGINE_by_id:PROC
EXTRN	_ENGINE_free:PROC
EXTRN	_ENGINE_finish:PROC
EXTRN	_X509V3_EXT_add_nconf:PROC
EXTRN	_X509V3_EXT_REQ_add_nconf:PROC
EXTRN	_X509V3_set_nconf:PROC
EXTRN	_X509V3_set_ctx:PROC
EXTRN	_s2i_ASN1_INTEGER:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_app_RAND_load_files:PROC
EXTRN	_str2fmt:PROC
EXTRN	_print_name:PROC
EXTRN	_set_cert_ex:PROC
EXTRN	_set_name_ex:PROC
EXTRN	_app_passwd:PROC
EXTRN	_add_oid_section:PROC
EXTRN	_load_key:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_rand_serial:PROC
EXTRN	_parse_name:PROC
EXTRN	_pkey_ctrl_string:PROC
EXTRN	_PEM_read_bio_X509:PROC
EXTRN	_PEM_write_bio_X509:PROC
EXTRN	_PEM_read_bio_X509_REQ:PROC
EXTRN	_PEM_write_bio_X509_REQ:PROC
EXTRN	_PEM_write_bio_X509_REQ_NEW:PROC
EXTRN	_PEM_write_bio_PrivateKey:PROC
EXTRN	_PEM_write_bio_PUBKEY:PROC
EXTRN	_PEM_read_bio_Parameters:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_config:DWORD
EXTRN	_default_config_file:DWORD
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
?buf@?1??add_attribute_object@@9@9 DB 0400H DUP (?)	; `add_attribute_object'::`2'::buf
_BSS	ENDS
;	COMDAT ??_C@_0BL@NALFDFOL@Error?5setting?5RSA?5keysize?6?$AA@
CONST	SEGMENT
??_C@_0BL@NALFDFOL@Error?5setting?5RSA?5keysize?6?$AA@ DB 'Error setting '
	DB	'RSA keysize', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NAAIIFFH@Error?5initializing?5keygen?5contex@
CONST	SEGMENT
??_C@_0CD@NAAIIFFH@Error?5initializing?5keygen?5contex@ DB 'Error initial'
	DB	'izing keygen context', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JOGMMGKM@Error?5allocating?5keygen?5context?6@
CONST	SEGMENT
??_C@_0CB@JOGMMGKM@Error?5allocating?5keygen?5context?6@ DB 'Error alloca'
	DB	'ting keygen context', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PFJPPKAI@Internal?5error?3?5can?8t?5find?5key?5a@
CONST	SEGMENT
??_C@_0CK@PFJPPKAI@Internal?5error?3?5can?8t?5find?5key?5a@ DB 'Internal '
	DB	'error: can''t find key algorithm', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PONHIOIP@Key?5Type?5does?5not?5match?5paramete@
CONST	SEGMENT
??_C@_0CE@PONHIOIP@Key?5Type?5does?5not?5match?5paramete@ DB 'Key Type do'
	DB	'es not match parameters', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EHHPGCBO@Error?5reading?5parameter?5file?5?$CFs?6@
CONST	SEGMENT
??_C@_0CB@EHHPGCBO@Error?5reading?5parameter?5file?5?$CFs?6@ DB 'Error re'
	DB	'ading parameter file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HEFFFKLO@Can?8t?5open?5parameter?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BO@HEFFFKLO@Can?8t?5open?5parameter?5file?5?$CFs?6?$AA@ DB 'Can''t'
	DB	' open parameter file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KBEAOALA@Unknown?5algorithm?5?$CF?4?$CKs?6?$AA@
CONST	SEGMENT
??_C@_0BI@KBEAOALA@Unknown?5algorithm?5?$CF?4?$CKs?6?$AA@ DB 'Unknown alg'
	DB	'orithm %.*s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06CIHNIJJG@param?3?$AA@
CONST	SEGMENT
??_C@_06CIHNIJJG@param?3?$AA@ DB 'param:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@BNGDLEBM@string?5is?5too?5long?0?5it?5needs?5to?5@
CONST	SEGMENT
??_C@_0DN@BNGDLEBM@string?5is?5too?5long?0?5it?5needs?5to?5@ DB 'string i'
	DB	's too long, it needs to be less than  %d bytes long', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@OAAMIENP@string?5is?5too?5short?0?5it?5needs?5to@
CONST	SEGMENT
??_C@_0DM@OAAMIENP@string?5is?5too?5short?0?5it?5needs?5to@ DB 'string is'
	DB	' too short, it needs to be at least %d bytes long', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FKDLMMKK@Error?5adding?5attribute?6?$AA@
CONST	SEGMENT
??_C@_0BI@FKDLMMKK@Error?5adding?5attribute?6?$AA@ DB 'Error adding attri'
	DB	'bute', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ECEPLLPI@weird?5input?5?3?9?$CI?6?$AA@
CONST	SEGMENT
??_C@_0BB@ECEPLLPI@weird?5input?5?3?9?$CI?6?$AA@ DB 'weird input :-(', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GLNNLHPK@?$CFs?5?$FL?$CFs?$FN?3?$AA@
CONST	SEGMENT
??_C@_08GLNNLHPK@?$CFs?5?$FL?$CFs?$FN?3?$AA@ DB '%s [%s]:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BHIPIDOI@No?5template?0?5please?5set?5one?5up?4?6@
CONST	SEGMENT
??_C@_0CB@BHIPIDOI@No?5template?0?5please?5set?5one?5up?4?6@ DB 'No templ'
	DB	'ate, please set one up.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@LOFFOKNE@to?5be?5sent?5with?5your?5certificate@
CONST	SEGMENT
??_C@_0CK@LOFFOKNE@to?5be?5sent?5with?5your?5certificate@ DB 'to be sent '
	DB	'with your certificate request', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@LBPPIBMC@?6Please?5enter?5the?5following?5?8ext@
CONST	SEGMENT
??_C@_0DA@LBPPIBMC@?6Please?5enter?5the?5following?5?8ext@ DB 0aH, 'Pleas'
	DB	'e enter the following ''extra'' attributes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HMOKPNGJ@error?0?5no?5objects?5specified?5in?5c@
CONST	SEGMENT
??_C@_0CM@HMOKPNGJ@error?0?5no?5objects?5specified?5in?5c@ DB 'error, no '
	DB	'objects specified in config file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06KPFMGMPI@?$CFs_max?$AA@
CONST	SEGMENT
??_C@_06KPFMGMPI@?$CFs_max?$AA@ DB '%s_max', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNNHIIJH@?$CFs_min?$AA@
CONST	SEGMENT
??_C@_06LNNHIIJH@?$CFs_min?$AA@ DB '%s_min', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GELLOOFD@?$CFs_value?$AA@
CONST	SEGMENT
??_C@_08GELLOOFD@?$CFs_value?$AA@ DB '%s_value', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OBIMKCEG@Name?5?8?$CFs?8?5too?5long?6?$AA@
CONST	SEGMENT
??_C@_0BE@OBIMKCEG@Name?5?8?$CFs?8?5too?5long?6?$AA@ DB 'Name ''%s'' too '
	DB	'long', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HCIJHMBL@?$CFs_default?$AA@
CONST	SEGMENT
??_C@_0L@HCIJHMBL@?$CFs_default?$AA@ DB '%s_default', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06PFGHHEBM@_value?$AA@
CONST	SEGMENT
??_C@_06PFGHHEBM@_value?$AA@ DB '_value', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BFLCMEFH@_default?$AA@
CONST	SEGMENT
??_C@_08BFLCMEFH@_default?$AA@ DB '_default', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04OECBCNMP@_max?$AA@
CONST	SEGMENT
??_C@_04OECBCNMP@_max?$AA@ DB '_max', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PGKKMJKA@_min?$AA@
CONST	SEGMENT
??_C@_04PGKKMJKA@_min?$AA@ DB '_min', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@OHAINGEA@If?5you?5enter?5?8?4?8?0?5the?5field?5will@
CONST	SEGMENT
??_C@_0DB@OHAINGEA@If?5you?5enter?5?8?4?8?0?5the?5field?5will@ DB 'If you'
	DB	' enter ''.'', the field will be left blank.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@HANEDLAF@For?5some?5fields?5there?5will?5be?5a?5@
CONST	SEGMENT
??_C@_0DA@HANEDLAF@For?5some?5fields?5there?5will?5be?5a?5@ DB 'For some '
	DB	'fields there will be a default value,', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@EDIBKDAI@There?5are?5quite?5a?5few?5fields?5but@
CONST	SEGMENT
??_C@_0DL@EDIBKDAI@There?5are?5quite?5a?5few?5fields?5but@ DB 'There are '
	DB	'quite a few fields but you can leave some blank', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@MLJBJLJF@What?5you?5are?5about?5to?5enter?5is?5w@
CONST	SEGMENT
??_C@_0EN@MLJBJLJF@What?5you?5are?5about?5to?5enter?5is?5w@ DB 'What you '
	DB	'are about to enter is what is called a Distinguished Name or '
	DB	'a DN.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NLCOFKOK@into?5your?5certificate?5request?4?6?$AA@
CONST	SEGMENT
??_C@_0CA@NLCOFKOK@into?5your?5certificate?5request?4?6?$AA@ DB 'into you'
	DB	'r certificate request.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@HLOABFDI@You?5are?5about?5to?5be?5asked?5to?5ent@
CONST	SEGMENT
??_C@_0EK@HLOABFDI@You?5are?5about?5to?5be?5asked?5to?5ent@ DB 'You are a'
	DB	'bout to be asked to enter information that will be incorporat'
	DB	'ed', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HNMJPKNA@attributes?$AA@
CONST	SEGMENT
??_C@_0L@HNMJPKNA@attributes?$AA@ DB 'attributes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NEMCEOPF@unable?5to?5get?5?8?$CFs?8?5section?6?$AA@
CONST	SEGMENT
??_C@_0BM@NEMCEOPF@unable?5to?5get?5?8?$CFs?8?5section?6?$AA@ DB 'unable '
	DB	'to get ''%s'' section', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NEGAOIHA@unable?5to?5find?5?8?$CFs?8?5in?5config?6?$AA@
CONST	SEGMENT
??_C@_0BP@NEGAOIHA@unable?5to?5find?5?8?$CFs?8?5in?5config?6?$AA@ DB 'una'
	DB	'ble to find ''%s'' in config', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OKKOOBH@distinguished_name?$AA@
CONST	SEGMENT
??_C@_0BD@OKKOOBH@distinguished_name?$AA@ DB 'distinguished_name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FJNEHIA@prompt?$AA@
CONST	SEGMENT
??_C@_06FJNEHIA@prompt?$AA@ DB 'prompt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GEADPADN@unable?5to?5write?5X509?5certificate@
CONST	SEGMENT
??_C@_0CC@GEADPADN@unable?5to?5write?5X509?5certificate@ DB 'unable to wr'
	DB	'ite X509 certificate', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BMBGMBGL@unable?5to?5write?5X509?5request?6?$AA@
CONST	SEGMENT
??_C@_0BO@BMBGMBGL@unable?5to?5write?5X509?5request?6?$AA@ DB 'unable to '
	DB	'write X509 request', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
CONST	SEGMENT
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ DB 'bad output '
	DB	'format specified for outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JNOIECJP@Wrong?5Algorithm?5type?$AA@
CONST	SEGMENT
??_C@_0BF@JNOIECJP@Wrong?5Algorithm?5type?$AA@ DB 'Wrong Algorithm type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CHIKBNMH@Modulus?$DN?$AA@
CONST	SEGMENT
??_C@_08CHIKBNMH@Modulus?$DN?$AA@ DB 'Modulus=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HHKPFLJJ@Modulus?$DNunavailable?6?$AA@
CONST	SEGMENT
??_C@_0BF@HHKPFLJJ@Modulus?$DNunavailable?6?$AA@ DB 'Modulus=unavailable', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08MAHPNCKH@subject?$DN?$AA@
CONST	SEGMENT
??_C@_08MAHPNCKH@subject?$DN?$AA@ DB 'subject=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GNCDDMAG@Error?5getting?5public?5key?6?$AA@
CONST	SEGMENT
??_C@_0BK@GNCDDMAG@Error?5getting?5public?5key?6?$AA@ DB 'Error getting p'
	DB	'ublic key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OEANIBEG@verify?5OK?6?$AA@
CONST	SEGMENT
??_C@_0L@OEANIBEG@verify?5OK?6?$AA@ DB 'verify OK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HHOHOMNK@verify?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BA@HHOHOMNK@verify?5failure?6?$AA@ DB 'verify failure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFKCAJNN@new?5subject?$DN?$AA@
CONST	SEGMENT
??_C@_0N@PFKCAJNN@new?5subject?$DN?$AA@ DB 'new subject=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BCHAKGEI@ERROR?3?5cannot?5modify?5subject?6?$AA@
CONST	SEGMENT
??_C@_0BO@BCHAKGEI@ERROR?3?5cannot?5modify?5subject?6?$AA@ DB 'ERROR: can'
	DB	'not modify subject', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ICIJEIAD@old?5subject?$DN?$AA@
CONST	SEGMENT
??_C@_0N@ICIJEIAD@old?5subject?$DN?$AA@ DB 'old subject=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CAIPGNIG@Modifying?5Request?8s?5Subject?6?$AA@
CONST	SEGMENT
??_C@_0BN@CAIPGNIG@Modifying?5Request?8s?5Subject?6?$AA@ DB 'Modifying Re'
	DB	'quest''s Subject', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GJDHAICG@Cannot?5modifiy?5certificate?5subje@
CONST	SEGMENT
??_C@_0CE@GJDHAICG@Cannot?5modifiy?5certificate?5subje@ DB 'Cannot modifi'
	DB	'y certificate subject', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JJEMGJAP@problems?5making?5Certificate?5Requ@
CONST	SEGMENT
??_C@_0CF@JJEMGJAP@problems?5making?5Certificate?5Requ@ DB 'problems maki'
	DB	'ng Certificate Request', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LIJJNJII@you?5need?5to?5specify?5a?5private?5ke@
CONST	SEGMENT
??_C@_0CD@LIJJNJII@you?5need?5to?5specify?5a?5private?5ke@ DB 'you need t'
	DB	'o specify a private key', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CMIEOFLN@unable?5to?5load?5X509?5request?6?$AA@
CONST	SEGMENT
??_C@_0BN@CMIEOFLN@unable?5to?5load?5X509?5request?6?$AA@ DB 'unable to l'
	DB	'oad X509 request', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JGBMBJMK@bad?5input?5format?5specified?5for?5X@
CONST	SEGMENT
??_C@_0CN@JGBMBJMK@bad?5input?5format?5specified?5for?5X@ DB 'bad input f'
	DB	'ormat specified for X509 request', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NGLIMPFK@?9?9?9?9?9?6?$AA@
CONST	SEGMENT
??_C@_06NGLIMPFK@?9?9?9?9?9?6?$AA@ DB '-----', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02KAJCLHKP@no?$AA@
CONST	SEGMENT
??_C@_02KAJCLHKP@no?$AA@ DB 'no', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PLLNDNLN@encrypt_key?$AA@
CONST	SEGMENT
??_C@_0M@PLLNDNLN@encrypt_key?$AA@ DB 'encrypt_key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NGFFPLIL@encrypt_rsa_key?$AA@
CONST	SEGMENT
??_C@_0BA@NGFFPLIL@encrypt_rsa_key?$AA@ DB 'encrypt_rsa_key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LGKDEPPP@writing?5new?5private?5key?5to?5?8?$CFs?8?6@
CONST	SEGMENT
??_C@_0CB@LGKDEPPP@writing?5new?5private?5key?5to?5?8?$CFs?8?6@ DB 'writi'
	DB	'ng new private key to ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MNJCLBII@writing?5new?5private?5key?5to?5stdou@
CONST	SEGMENT
??_C@_0CD@MNJCLBII@writing?5new?5private?5key?5to?5stdou@ DB 'writing new'
	DB	' private key to stdout', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ONKAAELM@default_keyfile?$AA@
CONST	SEGMENT
??_C@_0BA@ONKAAELM@default_keyfile?$AA@ DB 'default_keyfile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HLDNBPLC@Error?5Generating?5Key?6?$AA@
CONST	SEGMENT
??_C@_0BG@HLDNBPLC@Error?5Generating?5Key?6?$AA@ DB 'Error Generating Key'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BBJFODEP@Generating?5a?5?$CFld?5bit?5?$CFs?5private?5@
CONST	SEGMENT
??_C@_0CF@BBJFODEP@Generating?5a?5?$CFld?5bit?5?$CFs?5private?5@ DB 'Gene'
	DB	'rating a %ld bit %s private key', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@ DB 'parameter e'
	DB	'rror "%s"', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@DBFJKCLJ@it?5needs?5to?5be?5at?5least?5?$CFd?5bits?0@
CONST	SEGMENT
??_C@_0CK@DBFJKCLJ@it?5needs?5to?5be?5at?5least?5?$CFd?5bits?0@ DB 'it ne'
	DB	'eds to be at least %d bits, not %ld', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@ELOKEOPP@private?5key?5length?5is?5too?5short?0@
CONST	SEGMENT
??_C@_0CC@ELOKEOPP@private?5key?5length?5is?5too?5short?0@ DB 'private ke'
	DB	'y length is too short,', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCMNCKPB@default_bits?$AA@
CONST	SEGMENT
??_C@_0N@CCMNCKPB@default_bits?$AA@ DB 'default_bits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OFLJHDDG@RANDFILE?$AA@
CONST	SEGMENT
??_C@_08OFLJHDDG@RANDFILE?$AA@ DB 'RANDFILE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
CONST	SEGMENT
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ DB 'Private Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FAJMBBDK@Error?5Loading?5request?5extension?5@
CONST	SEGMENT
??_C@_0CM@FAJMBBDK@Error?5Loading?5request?5extension?5@ DB 'Error Loadin'
	DB	'g request extension section %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LBFPKDKM@req_extensions?$AA@
CONST	SEGMENT
??_C@_0P@LBFPKDKM@req_extensions?$AA@ DB 'req_extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICICOMAL@yes?$AA@
CONST	SEGMENT
??_C@_03ICICOMAL@yes?$AA@ DB 'yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LHHHFLPP@utf8?$AA@
CONST	SEGMENT
??_C@_04LHHHFLPP@utf8?$AA@ DB 'utf8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PNKCABBA@Invalid?5global?5string?5mask?5setti@
CONST	SEGMENT
??_C@_0CH@PNKCABBA@Invalid?5global?5string?5mask?5setti@ DB 'Invalid glob'
	DB	'al string mask setting %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NPFHBEIA@string_mask?$AA@
CONST	SEGMENT
??_C@_0M@NPFHBEIA@string_mask?$AA@ DB 'string_mask', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KAIJGPIE@output_password?$AA@
CONST	SEGMENT
??_C@_0BA@KAIJGPIE@output_password?$AA@ DB 'output_password', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JJFIBNNH@input_password?$AA@
CONST	SEGMENT
??_C@_0P@JJFIBNNH@input_password?$AA@ DB 'input_password', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@
CONST	SEGMENT
??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@ DB 'Error Loadin'
	DB	'g extension section %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DDJOFEBJ@x509_extensions?$AA@
CONST	SEGMENT
??_C@_0BA@DDJOFEBJ@x509_extensions?$AA@ DB 'x509_extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GHLFAJII@req?$AA@
CONST	SEGMENT
??_C@_03GHLFAJII@req?$AA@ DB 'req', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GPEHKDBA@default_md?$AA@
CONST	SEGMENT
??_C@_0L@GPEHKDBA@default_md?$AA@ DB 'default_md', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NOLCFLKC@oid_file?$AA@
CONST	SEGMENT
??_C@_08NOLCFLKC@oid_file?$AA@ DB 'oid_file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EDEOOKJA@Unable?5to?5load?5config?5info?5from?5@
CONST	SEGMENT
??_C@_0CE@EDEOOKJA@Unable?5to?5load?5config?5info?5from?5@ DB 'Unable to '
	DB	'load config info from %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BNDHOAPM@error?5on?5line?5?$CFld?5of?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BJ@BNDHOAPM@error?5on?5line?5?$CFld?5of?5?$CFs?6?$AA@ DB 'error on'
	DB	' line %ld of %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@ DB 'Using con'
	DB	'figuration from %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ DB 'Error getting pas'
	DB	'swords', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DHIJEKH@?5?9reqopt?5arg?5?5?5?5?9?5various?5reques@
CONST	SEGMENT
??_C@_0DB@DHIJEKH@?5?9reqopt?5arg?5?5?5?5?9?5various?5reques@ DB ' -reqop'
	DB	't arg    - various request text options', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@
CONST	SEGMENT
??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@ DB ' -name'
	DB	'opt arg    - various certificate name options', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@KMNLMCKB@?5?9utf8?5?5?5?5?5?5?5?5?5?5input?5characters@
CONST	SEGMENT
??_C@_0DL@KMNLMCKB@?5?9utf8?5?5?5?5?5?5?5?5?5?5input?5characters@ DB ' -u'
	DB	'tf8          input characters are UTF8 (default ASCII)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@PNHFCKKJ@?5?9reqexts?5?4?4?5?5?5?5specify?5request?5@
CONST	SEGMENT
??_C@_0FD@PNHFCKKJ@?5?9reqexts?5?4?4?5?5?5?5specify?5request?5@ DB ' -req'
	DB	'exts ..    specify request extension section (override value '
	DB	'in config file)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@DLNHGECL@?5?9extensions?5?4?4?5specify?5certific@
CONST	SEGMENT
??_C@_0FH@DLNHGECL@?5?9extensions?5?4?4?5specify?5certific@ DB ' -extensi'
	DB	'ons .. specify certificate extension section (override value '
	DB	'in config file)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@FMNPFGKD@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5have?5been?5report@
CONST	SEGMENT
??_C@_0DB@FMNPFGKD@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5have?5been?5report@ DB ' '
	DB	'               have been reported as requiring', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@KKMFBONC@?5?9asn1?9kludge?5?5?5Output?5the?5?8requ@
CONST	SEGMENT
??_C@_0EO@KKMFBONC@?5?9asn1?9kludge?5?5?5Output?5the?5?8requ@ DB ' -asn1-'
	DB	'kludge   Output the ''request'' in a format that is wrong but'
	DB	' some CA''s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EIIKHMHB@?5?9newhdr?5?5?5?5?5?5?5?5output?5?$CCNEW?$CC?5in?5@
CONST	SEGMENT
??_C@_0DC@EIIKHMHB@?5?9newhdr?5?5?5?5?5?5?5?5output?5?$CCNEW?$CC?5in?5@ DB ' '
	DB	'-newhdr        output "NEW" in the header lines', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@IDBMALNJ@?5?9set_serial?5?5?5?5serial?5number?5to@
CONST	SEGMENT
??_C@_0EM@IDBMALNJ@?5?9set_serial?5?5?5?5serial?5number?5to@ DB ' -set_se'
	DB	'rial    serial number to use for a certificate generated by -'
	DB	'x509.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@BJOKFCBC@?5?9days?5?5?5?5?5?5?5?5?5?5number?5of?5days?5a@
CONST	SEGMENT
??_C@_0EP@BJOKFCBC@?5?9days?5?5?5?5?5?5?5?5?5?5number?5of?5days?5a@ DB ' '
	DB	'-days          number of days a certificate generated by -x50'
	DB	'9 is valid for.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@BKMGOBMN@?5?9x509?5?5?5?5?5?5?5?5?5?5output?5a?5x509?5st@
CONST	SEGMENT
??_C@_0EB@BKMGOBMN@?5?9x509?5?5?5?5?5?5?5?5?5?5output?5a?5x509?5st@ DB ' '
	DB	'-x509          output a x509 structure instead of a cert. req'
	DB	'.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@HGDJHLP@?5?9batch?5?5?5?5?5?5?5?5?5do?5not?5ask?5anyth@
CONST	SEGMENT
??_C@_0DP@HGDJHLP@?5?9batch?5?5?5?5?5?5?5?5?5do?5not?5ask?5anyth@ DB ' -b'
	DB	'atch         do not ask anything during request generation', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NIINFKKJ@?5?9new?5?5?5?5?5?5?5?5?5?5?5new?5request?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@NIINFKKJ@?5?9new?5?5?5?5?5?5?5?5?5?5?5new?5request?4?6?$AA@ DB ' '
	DB	'-new           new request.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CNHPGMNH@?5?9multivalue?9rdn?5enable?5support?5@
CONST	SEGMENT
??_C@_0DG@CNHPGMNH@?5?9multivalue?9rdn?5enable?5support?5@ DB ' -multival'
	DB	'ue-rdn enable support for multivalued RDNs', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HCNCEBKD@?5?9subj?5arg?5?5?5?5?5?5set?5or?5modify?5re@
CONST	SEGMENT
??_C@_0CP@HCNCEBKD@?5?9subj?5arg?5?5?5?5?5?5set?5or?5modify?5re@ DB ' -su'
	DB	'bj arg      set or modify request subject', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@DIABMJEF@?5?9config?5file?5?5?5request?5template@
CONST	SEGMENT
??_C@_0CI@DIABMJEF@?5?9config?5file?5?5?5request?5template@ DB ' -config '
	DB	'file   request template file.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@IEFBPBDC@?5?9?$FLdigest?$FN?5?5?5?5?5?5Digest?5to?5sign?5w@
CONST	SEGMENT
??_C@_0EB@IEFBPBDC@?5?9?$FLdigest?$FN?5?5?5?5?5?5Digest?5to?5sign?5w@ DB ' '
	DB	'-[digest]      Digest to sign with (md5, sha1, md2, mdc2, md4'
	DB	')', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@PADDHLNP@?5?9newkey?5ec?3file?5generate?5a?5new?5@
CONST	SEGMENT
??_C@_0EM@PADDHLNP@?5?9newkey?5ec?3file?5generate?5a?5new?5@ DB ' -newkey'
	DB	' ec:file generate a new EC key, parameters taken from CA in '''
	DB	'file''', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@CNJNIGKO@?5?9newkey?5dsa?3file?5generate?5a?5new@
CONST	SEGMENT
??_C@_0EO@CNJNIGKO@?5?9newkey?5dsa?3file?5generate?5a?5new@ DB ' -newkey '
	DB	'dsa:file generate a new DSA key, parameters taken from CA in '
	DB	'''file''', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@GHAGNPLI@?5?9newkey?5rsa?3bits?5generate?5a?5new@
CONST	SEGMENT
??_C@_0DM@GHAGNPLI@?5?9newkey?5rsa?3bits?5generate?5a?5new@ DB ' -newkey '
	DB	'rsa:bits generate a new RSA key of ''bits'' in size', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@EKAIOOCB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numbe@
CONST	SEGMENT
??_C@_0CN@EKAIOOCB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numbe@ DB ' '
	DB	'               the random number generator', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@JPAFCFML@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIo@
CONST	SEGMENT
??_C@_0EE@JPAFCFML@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIo@ DB ' '
	DB	'               load the file (or the files in the directory) '
	DB	'into', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ DB ' -rand f'
	DB	'ile%cfile%c...', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EOJCAFHI@?5?9keyout?5arg?5?5?5?5file?5to?5send?5the@
CONST	SEGMENT
??_C@_0CJ@EOJCAFHI@?5?9keyout?5arg?5?5?5?5file?5to?5send?5the@ DB ' -keyo'
	DB	'ut arg    file to send the key to', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LMHDCKJL@?5?9keyform?5arg?5?5?5key?5file?5format?6@
CONST	SEGMENT
??_C@_0CB@LMHDCKJL@?5?9keyform?5arg?5?5?5key?5file?5format?6@ DB ' -keyfo'
	DB	'rm arg   key file format', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@PKGEJNOC@?5?9key?5file?5?5?5?5?5?5use?5the?5private?5@
CONST	SEGMENT
??_C@_0DH@PKGEJNOC@?5?9key?5file?5?5?5?5?5?5use?5the?5private?5@ DB ' -ke'
	DB	'y file      use the private key contained in file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@MLPHKBCF@?5?9passin?5?5?5?5?5?5?5?5private?5key?5pass@
CONST	SEGMENT
??_C@_0CN@MLPHKBCF@?5?9passin?5?5?5?5?5?5?5?5private?5key?5pass@ DB ' -pa'
	DB	'ssin        private key password source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MFDIAJIM@?5?9subject?5?5?5?5?5?5?5output?5the?5reque@
CONST	SEGMENT
??_C@_0CO@MFDIAJIM@?5?9subject?5?5?5?5?5?5?5output?5the?5reque@ DB ' -sub'
	DB	'ject       output the request''s subject', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BPMBDPII@?5?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5po@
CONST	SEGMENT
??_C@_0DK@BPMBDPII@?5?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5po@ DB ' -e'
	DB	'ngine e      use engine e, possibly a hardware device', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@NLDNMACB@?5?9nodes?5?5?5?5?5?5?5?5?5don?8t?5encrypt?5th@
CONST	SEGMENT
??_C@_0CO@NLDNMACB@?5?9nodes?5?5?5?5?5?5?5?5?5don?8t?5encrypt?5th@ DB ' -'
	DB	'nodes         don''t encrypt the output key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LLCCILG@?5?9modulus?5?5?5?5?5?5?5RSA?5modulus?6?$AA@
CONST	SEGMENT
??_C@_0BN@LLCCILG@?5?9modulus?5?5?5?5?5?5?5RSA?5modulus?6?$AA@ DB ' -modu'
	DB	'lus       RSA modulus', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@ICFAPLND@?5?9verify?5?5?5?5?5?5?5?5verify?5signature@
CONST	SEGMENT
??_C@_0CJ@ICFAPLND@?5?9verify?5?5?5?5?5?5?5?5verify?5signature@ DB ' -ver'
	DB	'ify        verify signature on REQ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JIDAIBMD@?5?9noout?5?5?5?5?5?5?5?5?5do?5not?5output?5RE@
CONST	SEGMENT
??_C@_0CD@JIDAIBMD@?5?9noout?5?5?5?5?5?5?5?5?5do?5not?5output?5RE@ DB ' -'
	DB	'noout         do not output REQ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KGCNKBCD@?5?9pubkey?5?5?5?5?5?5?5?5output?5public?5ke@
CONST	SEGMENT
??_C@_0CD@KGCNKBCD@?5?9pubkey?5?5?5?5?5?5?5?5output?5public?5ke@ DB ' -pu'
	DB	'bkey        output public key', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OIEFBBAO@?5?9text?5?5?5?5?5?5?5?5?5?5text?5form?5of?5req@
CONST	SEGMENT
??_C@_0CG@OIEFBBAO@?5?9text?5?5?5?5?5?5?5?5?5?5text?5form?5of?5req@ DB ' '
	DB	'-text          text form of request', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NLKPGMME@?5?9out?5arg?5?5?5?5?5?5?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BN@NLKPGMME@?5?9out?5arg?5?5?5?5?5?5?5output?5file?6?$AA@ DB ' -ou'
	DB	't arg       output file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BNDOLEGE@?5?9in?5arg?5?5?5?5?5?5?5?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BM@BNDOLEGE@?5?9in?5arg?5?5?5?5?5?5?5?5input?5file?6?$AA@ DB ' -in'
	DB	' arg        input file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@OEOKNGNO@?5?9outform?5arg?5?5?5output?5format?5?9?5@
CONST	SEGMENT
??_C@_0CM@OEOKNGNO@?5?9outform?5arg?5?5?5output?5format?5?9?5@ DB ' -outf'
	DB	'orm arg   output format - DER or PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@MDOLAFAK@?5?9inform?5arg?5?5?5?5input?5format?5?9?5D@
CONST	SEGMENT
??_C@_0CL@MDOLAFAK@?5?9inform?5arg?5?5?5?5input?5format?5?9?5D@ DB ' -inf'
	DB	'orm arg    input format - DER or PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CHJJKKLI@where?5options?5?5are?6?$AA@
CONST	SEGMENT
??_C@_0BE@CHJJKKLI@where?5options?5?5are?6?$AA@ DB 'where options  are', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
CONST	SEGMENT
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ DB '%'
	DB	's [options] <infile >outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08DFHODPJJ@?9reqexts?$AA@
CONST	SEGMENT
??_C@_08DFHODPJJ@?9reqexts?$AA@ DB '-reqexts', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BEOOFGDH@?9extensions?$AA@
CONST	SEGMENT
??_C@_0M@BEOOFGDH@?9extensions?$AA@ DB '-extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LDCLLBDG@?9set_serial?$AA@
CONST	SEGMENT
??_C@_0M@LDCLLBDG@?9set_serial?$AA@ DB '-set_serial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EFBFHALF@?9days?$AA@
CONST	SEGMENT
??_C@_05EFBFHALF@?9days?$AA@ DB '-days', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NIPEAEAE@?9multivalue?9rdn?$AA@
CONST	SEGMENT
??_C@_0BA@NIPEAEAE@?9multivalue?9rdn?$AA@ DB '-multivalue-rdn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MDNNBOGG@?9subj?$AA@
CONST	SEGMENT
??_C@_05MDNNBOGG@?9subj?$AA@ DB '-subj', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OKKENJJO@?9no?9asn1?9kludge?$AA@
CONST	SEGMENT
??_C@_0BA@OKKENJJO@?9no?9asn1?9kludge?$AA@ DB '-no-asn1-kludge', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GCBKILCE@?9asn1?9kludge?$AA@
CONST	SEGMENT
??_C@_0N@GCBKILCE@?9asn1?9kludge?$AA@ DB '-asn1-kludge', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NBLHIDAD@?9x509?$AA@
CONST	SEGMENT
??_C@_05NBLHIDAD@?9x509?$AA@ DB '-x509', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GNEDOIFN@?9subject?$AA@
CONST	SEGMENT
??_C@_08GNEDOIFN@?9subject?$AA@ DB '-subject', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GDDFPCHC@?9reqopt?$AA@
CONST	SEGMENT
??_C@_07GDDFPCHC@?9reqopt?$AA@ DB '-reqopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BLLHKMDD@?9nameopt?$AA@
CONST	SEGMENT
??_C@_08BLLHKMDD@?9nameopt?$AA@ DB '-nameopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HLKFBLKJ@?9utf8?$AA@
CONST	SEGMENT
??_C@_05HLKFBLKJ@?9utf8?$AA@ DB '-utf8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBJJFDKJ@?9verbose?$AA@
CONST	SEGMENT
??_C@_08FBJJFDKJ@?9verbose?$AA@ DB '-verbose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JPEJAHHH@?9noout?$AA@
CONST	SEGMENT
??_C@_06JPEJAHHH@?9noout?$AA@ DB '-noout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BLCPLFMB@?9nodes?$AA@
CONST	SEGMENT
??_C@_06BLCPLFMB@?9nodes?$AA@ DB '-nodes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJNHONAF@?9modulus?$AA@
CONST	SEGMENT
??_C@_08NJNHONAF@?9modulus?$AA@ DB '-modulus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JMKJGFPL@?9newhdr?$AA@
CONST	SEGMENT
??_C@_07JMKJGFPL@?9newhdr?$AA@ DB '-newhdr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06COHPCLGM@?9batch?$AA@
CONST	SEGMENT
??_C@_06COHPCLGM@?9batch?$AA@ DB '-batch', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FNCAFLJP@?9sigopt?$AA@
CONST	SEGMENT
??_C@_07FNCAFLJP@?9sigopt?$AA@ DB '-sigopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JPLFCIIK@?9pkeyopt?$AA@
CONST	SEGMENT
??_C@_08JPLFCIIK@?9pkeyopt?$AA@ DB '-pkeyopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GMCKHJOJ@?9newkey?$AA@
CONST	SEGMENT
??_C@_07GMCKHJOJ@?9newkey?$AA@ DB '-newkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KCDBEMAI@?9passout?$AA@
CONST	SEGMENT
??_C@_08KCDBEMAI@?9passout?$AA@ DB '-passout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KHMIKCEF@?9keyout?$AA@
CONST	SEGMENT
??_C@_07KHMIKCEF@?9keyout?$AA@ DB '-keyout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OOKHNANK@?9config?$AA@
CONST	SEGMENT
??_C@_07OOKHNANK@?9config?$AA@ DB '-config', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFBHIFJN@?9new?$AA@
CONST	SEGMENT
??_C@_04PFBHIFJN@?9new?$AA@ DB '-new', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PABNIEBD@?9pubkey?$AA@
CONST	SEGMENT
??_C@_07PABNIEBD@?9pubkey?$AA@ DB '-pubkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FMEKFICB@?9key?$AA@
CONST	SEGMENT
??_C@_04FMEKFICB@?9key?$AA@ DB '-key', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CPKKLFKB@Can?8t?5find?5keygen?5engine?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@CPKKLFKB@Can?8t?5find?5keygen?5engine?5?$CFs?6?$AA@ DB 'Can''t '
	DB	'find keygen engine %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LPDEEGMB@?9keygen_engine?$AA@
CONST	SEGMENT
??_C@_0P@LPDEEGMB@?9keygen_engine?$AA@ DB '-keygen_engine', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPHBEAIF@?9outform?$AA@
CONST	SEGMENT
??_C@_08LPHBEAIF@?9outform?$AA@ DB '-outform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGGPPMGB@?9inform?$AA@
CONST	SEGMENT
??_C@_07CGGPPMGB@?9inform?$AA@ DB '-inform', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_sign_init
_TEXT	SEGMENT
_pkctx$ = -4						; size = 4
_err$ = 8						; size = 4
_ctx$ = 12						; size = 4
_pkey$ = 16						; size = 4
_md$ = 20						; size = 4
_sigopts$ = 24						; size = 4
_do_sign_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1678
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 1681
	mov	esi, DWORD PTR _ctx$[esp+4]
	push	esi
	mov	DWORD PTR _pkctx$[esp+12], 0
	call	_EVP_MD_CTX_init
; Line 1682
	push	DWORD PTR _pkey$[esp+8]
	lea	eax, DWORD PTR _pkctx$[esp+16]
	push	0
	push	DWORD PTR _md$[esp+16]
	push	eax
	push	esi
	call	_EVP_DigestSignInit
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN5@do_sign_in
	pop	esi
; Line 1693
	pop	ecx
	ret	0
$LN5@do_sign_in:
	push	ebx
	push	edi
; Line 1684
	mov	edi, DWORD PTR _sigopts$[esp+12]
	xor	esi, esi
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@do_sign_in
$LL4@do_sign_in:
; Line 1685
	push	esi
	push	edi
	call	_sk_value
	mov	ebx, eax
; Line 1686
	push	ebx
	push	DWORD PTR _pkctx$[esp+28]
	call	_pkey_ctrl_string
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN9@do_sign_in
; Line 1684
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@do_sign_in
$LN3@do_sign_in:
	pop	edi
	pop	ebx
; Line 1692
	mov	eax, 1
	pop	esi
; Line 1693
	pop	ecx
	ret	0
$LN9@do_sign_in:
; Line 1687
	push	ebx
	push	OFFSET ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _err$[esp+20]
	call	_BIO_printf
; Line 1688
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 1689
	xor	eax, eax
	pop	edi
	pop	ebx
	pop	esi
; Line 1693
	pop	ecx
	ret	0
_do_sign_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _req_main
_TEXT	SEGMENT
_newreq$1$ = -312					; size = 4
_x509ss$1$ = -308					; size = 4
_pkey$ = -304						; size = 4
_newkey$ = -300						; size = 4
_x509$1$ = -296						; size = 4
_nmflag$ = -292						; size = 4
_genctx$1$ = -288					; size = 4
_pubkey$1$ = -284					; size = 4
_passout$ = -280					; size = 4
_extensions$1$ = -276					; size = 4
_digest$1$ = -272					; size = 4
_chtype$1$ = -268					; size = 4
_verbose$1$ = -264					; size = 4
_pkeyopts$1$ = -260					; size = 4
_sigopts$1$ = -256					; size = 4
_passin$ = -252						; size = 4
_kludge$1$ = -248					; size = 4
_req_exts$1$ = -244					; size = 4
_subj$1$ = -240						; size = 4
_keyout$1$ = -236					; size = 4
_req$1$ = -232						; size = 4
_gen_eng$1$ = -228					; size = 4
_keyalgstr$ = -224					; size = 4
_prog$1$ = -220						; size = 4
_errline$1 = -220					; size = 4
_days$1$ = -216						; size = 4
_multirdn$1$ = -212					; size = 4
_text$1$ = -208						; size = 4
_reqflag$ = -204					; size = 4
_subject$1$ = -200					; size = 4
_modulus$1$ = -196					; size = 4
_noout$1$ = -192					; size = 4
_outformat$1$ = -188					; size = 4
_in$1$ = -184						; size = 4
_serial$1$ = -180					; size = 4
_passargin$1$ = -176					; size = 4
_passargout$1$ = -172					; size = 4
_pkey_type$ = -168					; size = 4
_md_alg$1$ = -164					; size = 4
_engine$1$ = -160					; size = 4
_keyfile$1$ = -156					; size = 4
_keyform$1$ = -152					; size = 4
_inrand$1$ = -148					; size = 4
_keyalg$1$ = -144					; size = 4
_cipher$2$ = -140					; size = 4
_nodes$1$ = -136					; size = 4
_infile$1$ = -132					; size = 4
_informat$1$ = -128					; size = 4
_verify$1$ = -124					; size = 4
_outfile$1$ = -120					; size = 4
_newhdr$1$ = -116					; size = 4
_ctx$2 = -112						; size = 28
_ctx$3 = -84						; size = 28
_ext_ctx$4 = -56					; size = 28
_ext_ctx$5 = -28					; size = 28
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_req_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 163
	mov	eax, 312				; 00000138H
	call	__chkstk
; Line 185
	xor	eax, eax
	mov	DWORD PTR _gen_eng$1$[esp+312], 0
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR _extensions$1$[esp+324], eax
	push	edi
; Line 188
	mov	DWORD PTR _serial$1$[esp+328], eax
	xor	edi, edi
; Line 189
	mov	DWORD PTR _modulus$1$[esp+328], eax
	xor	ebp, ebp
; Line 190
	mov	DWORD PTR _inrand$1$[esp+328], eax
; Line 191
	mov	DWORD PTR _passargin$1$[esp+328], eax
	mov	DWORD PTR _passargout$1$[esp+328], eax
; Line 192
	mov	DWORD PTR _passin$[esp+328], eax
	mov	DWORD PTR _passout$[esp+328], eax
; Line 194
	mov	DWORD PTR _subj$1$[esp+328], eax
; Line 195
	mov	DWORD PTR _multirdn$1$[esp+328], eax
; Line 196
	mov	DWORD PTR _md_alg$1$[esp+328], eax
	mov	DWORD PTR _digest$1$[esp+328], eax
; Line 197
	mov	eax, 4097				; 00001001H
	mov	DWORD PTR _nmflag$[esp+328], 0
	mov	DWORD PTR _reqflag$[esp+328], 0
	mov	DWORD PTR _x509$1$[esp+328], 0
	mov	DWORD PTR _days$1$[esp+328], 30		; 0000001eH
	mov	DWORD PTR _x509ss$1$[esp+328], 0
	mov	DWORD PTR _req$1$[esp+328], 0
	mov	DWORD PTR _genctx$1$[esp+328], 0
	mov	DWORD PTR _keyalg$1$[esp+328], 0
	mov	DWORD PTR _keyalgstr$[esp+328], 0
	mov	DWORD PTR _pkeyopts$1$[esp+328], 0
	mov	DWORD PTR _sigopts$1$[esp+328], 0
	mov	DWORD PTR _pkey$[esp+328], 0
	mov	DWORD PTR _newreq$1$[esp+328], esi
	mov	DWORD PTR _verbose$1$[esp+328], esi
	mov	DWORD PTR _pkey_type$[esp+328], -1
	mov	DWORD PTR _newkey$[esp+328], -1
	mov	DWORD PTR _in$1$[esp+328], esi
	mov	DWORD PTR _verify$1$[esp+328], esi
	mov	DWORD PTR _noout$1$[esp+328], esi
	mov	DWORD PTR _text$1$[esp+328], esi
	mov	DWORD PTR _keyform$1$[esp+328], 3
	mov	DWORD PTR _nodes$1$[esp+328], esi
	mov	DWORD PTR _kludge$1$[esp+328], esi
	mov	DWORD PTR _newhdr$1$[esp+328], esi
	mov	DWORD PTR _subject$1$[esp+328], esi
	mov	DWORD PTR _pubkey$1$[esp+328], esi
	mov	DWORD PTR _keyfile$1$[esp+328], esi
	mov	DWORD PTR _keyout$1$[esp+328], esi
	mov	DWORD PTR _engine$1$[esp+328], esi
	mov	DWORD PTR _req_exts$1$[esp+328], edi
	mov	DWORD PTR _chtype$1$[esp+328], eax
; Line 203
	mov	DWORD PTR _req_conf, esi
; Line 205
	call	_EVP_des_ede3_cbc
	mov	DWORD PTR _cipher$2$[esp+328], eax
; Line 209
	cmp	DWORD PTR _bio_err, esi
	jne	SHORT $LN8@req_main
; Line 210
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN8@req_main
; Line 211
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN8@req_main:
; Line 218
	mov	ebx, DWORD PTR _argv$[esp+324]
; Line 219
	mov	edi, DWORD PTR _argc$[esp+324]
	dec	edi
	mov	DWORD PTR _infile$1$[esp+328], esi
	mov	DWORD PTR _outfile$1$[esp+328], esi
	mov	eax, DWORD PTR [ebx]
; Line 220
	add	ebx, 4
	mov	DWORD PTR _informat$1$[esp+328], 3
	mov	DWORD PTR _outformat$1$[esp+328], 3
	mov	DWORD PTR _prog$1$[esp+328], eax
; Line 221
	cmp	edi, 1
	jl	$LN123@req_main
	npad	1
$LL2@req_main:
; Line 222
	mov	esi, DWORD PTR [ebx]
	mov	edx, OFFSET ??_C@_07CGGPPMGB@?9inform?$AA@
	mov	ecx, esi
	npad	7
$LL341@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN342@req_main
	test	al, al
	je	SHORT $LN343@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN342@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL341@req_main
$LN343@req_main:
	xor	eax, eax
	jmp	SHORT $LN344@req_main
$LN342@req_main:
	sbb	eax, eax
	or	eax, 1
$LN344@req_main:
	test	eax, eax
	jne	SHORT $LN9@req_main
; Line 223
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 225
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _informat$1$[esp+328], eax
	jmp	$LN513@req_main
$LN9@req_main:
; Line 226
	mov	edx, OFFSET ??_C@_08LPHBEAIF@?9outform?$AA@
	mov	ecx, esi
$LL345@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN346@req_main
	test	al, al
	je	SHORT $LN347@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN346@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL345@req_main
$LN347@req_main:
	xor	eax, eax
	jmp	SHORT $LN348@req_main
$LN346@req_main:
	sbb	eax, eax
	or	eax, 1
$LN348@req_main:
	test	eax, eax
	jne	SHORT $LN12@req_main
; Line 227
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 229
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _outformat$1$[esp+328], eax
; Line 230
	jmp	$LN513@req_main
$LN12@req_main:
; Line 232
	mov	edx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	ecx, esi
$LL349@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN350@req_main
	test	al, al
	je	SHORT $LN351@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN350@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL349@req_main
$LN351@req_main:
	xor	eax, eax
	jmp	SHORT $LN352@req_main
$LN350@req_main:
	sbb	eax, eax
	or	eax, 1
$LN352@req_main:
	test	eax, eax
	jne	SHORT $LN15@req_main
; Line 233
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 235
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _engine$1$[esp+328], eax
	jmp	$LN513@req_main
$LN15@req_main:
; Line 236
	mov	edx, OFFSET ??_C@_0P@LPDEEGMB@?9keygen_engine?$AA@
	mov	ecx, esi
$LL353@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN354@req_main
	test	al, al
	je	SHORT $LN355@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN354@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL353@req_main
$LN355@req_main:
	xor	eax, eax
	jmp	SHORT $LN356@req_main
$LN354@req_main:
	sbb	eax, eax
	or	eax, 1
$LN356@req_main:
	test	eax, eax
	jne	$LN18@req_main
; Line 237
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 239
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_ENGINE_by_id
	add	esp, 4
	mov	DWORD PTR _gen_eng$1$[esp+328], eax
; Line 240
	test	eax, eax
	jne	$LN513@req_main
; Line 241
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BN@CPKKLFKB@Can?8t?5find?5keygen?5engine?5?$CFs?6?$AA@
$LN553@req_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN514@req_main:
; Line 448
	xor	ebp, ebp
$LN533@req_main:
	xor	edi, edi
$LN334@req_main:
; Line 1020
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	ebx, DWORD PTR _req$1$[esp+332]
	add	esp, 4
	mov	esi, 1
$LN273@req_main:
; Line 1022
	mov	eax, DWORD PTR _req_conf
	test	eax, eax
	je	SHORT $LN274@req_main
	cmp	eax, DWORD PTR _config
	je	SHORT $LN274@req_main
; Line 1023
	push	eax
	call	_NCONF_free
	add	esp, 4
$LN274@req_main:
; Line 1024
	push	DWORD PTR _in$1$[esp+328]
	call	_BIO_free
; Line 1025
	push	ebp
	call	_BIO_free_all
; Line 1026
	push	DWORD PTR _pkey$[esp+336]
	call	_EVP_PKEY_free
; Line 1027
	mov	eax, DWORD PTR _genctx$1$[esp+340]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN275@req_main
; Line 1028
	push	eax
	call	_EVP_PKEY_CTX_free
	add	esp, 4
$LN275@req_main:
; Line 1029
	mov	eax, DWORD PTR _pkeyopts$1$[esp+328]
	test	eax, eax
	je	SHORT $LN276@req_main
; Line 1030
	push	eax
	call	_sk_free
	add	esp, 4
$LN276@req_main:
; Line 1031
	mov	eax, DWORD PTR _sigopts$1$[esp+328]
	test	eax, eax
	je	SHORT $LN277@req_main
; Line 1032
	push	eax
	call	_sk_free
	add	esp, 4
$LN277@req_main:
; Line 1034
	mov	eax, DWORD PTR _gen_eng$1$[esp+328]
	test	eax, eax
	je	SHORT $LN278@req_main
; Line 1035
	push	eax
	call	_ENGINE_free
	add	esp, 4
$LN278@req_main:
; Line 1037
	mov	eax, DWORD PTR _keyalgstr$[esp+328]
	test	eax, eax
	je	SHORT $LN279@req_main
; Line 1038
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN279@req_main:
; Line 1039
	push	ebx
	call	_X509_REQ_free
; Line 1040
	push	edi
	call	_X509_free
; Line 1041
	push	DWORD PTR _serial$1$[esp+336]
	call	_ASN1_INTEGER_free
	add	esp, 12					; 0000000cH
; Line 1042
	cmp	DWORD PTR _passargin$1$[esp+328], 0
	je	SHORT $LN280@req_main
	mov	eax, DWORD PTR _passin$[esp+328]
	test	eax, eax
	je	SHORT $LN280@req_main
; Line 1043
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN280@req_main:
; Line 1044
	cmp	DWORD PTR _passargout$1$[esp+328], 0
	je	SHORT $LN281@req_main
	mov	ecx, DWORD PTR _passout$[esp+328]
	test	ecx, ecx
	je	SHORT $LN281@req_main
; Line 1045
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN281@req_main:
; Line 1046
	call	_OBJ_cleanup
	pop	edi
; Line 1048
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1049
	add	esp, 312				; 00000138H
	ret	0
$LN18@req_main:
; Line 246
	mov	edx, OFFSET ??_C@_04FMEKFICB@?9key?$AA@
	mov	ecx, esi
	npad	4
$LL357@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN358@req_main
	test	al, al
	je	SHORT $LN359@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN358@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL357@req_main
$LN359@req_main:
	xor	eax, eax
	jmp	SHORT $LN360@req_main
$LN358@req_main:
	sbb	eax, eax
	or	eax, 1
$LN360@req_main:
	test	eax, eax
	jne	SHORT $LN22@req_main
; Line 247
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 249
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _keyfile$1$[esp+328], eax
	jmp	$LN513@req_main
$LN22@req_main:
; Line 250
	mov	edx, OFFSET ??_C@_07PABNIEBD@?9pubkey?$AA@
	mov	ecx, esi
	npad	4
$LL361@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN362@req_main
	test	al, al
	je	SHORT $LN363@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN362@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL361@req_main
$LN363@req_main:
	xor	eax, eax
	jmp	SHORT $LN364@req_main
$LN362@req_main:
	sbb	eax, eax
	or	eax, 1
$LN364@req_main:
	test	eax, eax
	jne	SHORT $LN25@req_main
; Line 251
	mov	DWORD PTR _pubkey$1$[esp+328], 1
	jmp	$LN513@req_main
$LN25@req_main:
; Line 252
	mov	edx, OFFSET ??_C@_04PFBHIFJN@?9new?$AA@
	mov	ecx, esi
	npad	3
$LL365@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN366@req_main
	test	al, al
	je	SHORT $LN367@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN366@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL365@req_main
$LN367@req_main:
	xor	eax, eax
	jmp	SHORT $LN368@req_main
$LN366@req_main:
	sbb	eax, eax
	or	eax, 1
$LN368@req_main:
	test	eax, eax
	jne	SHORT $LN27@req_main
; Line 253
	mov	esi, 1
	mov	DWORD PTR _newreq$1$[esp+328], esi
	jmp	$LN122@req_main
$LN27@req_main:
; Line 254
	mov	edx, OFFSET ??_C@_07OOKHNANK@?9config?$AA@
	mov	ecx, esi
	npad	2
$LL369@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN370@req_main
	test	al, al
	je	SHORT $LN371@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN370@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL369@req_main
$LN371@req_main:
	xor	eax, eax
	jmp	SHORT $LN372@req_main
$LN370@req_main:
	sbb	eax, eax
	or	eax, 1
$LN372@req_main:
	test	eax, eax
	jne	SHORT $LN29@req_main
; Line 255
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 257
	mov	ebp, DWORD PTR [ebx+4]
	add	ebx, 4
	jmp	$LN513@req_main
$LN29@req_main:
; Line 258
	mov	edx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	ecx, esi
$LL373@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN374@req_main
	test	al, al
	je	SHORT $LN375@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN374@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL373@req_main
$LN375@req_main:
	xor	eax, eax
	jmp	SHORT $LN376@req_main
$LN374@req_main:
	sbb	eax, eax
	or	eax, 1
$LN376@req_main:
	test	eax, eax
	jne	SHORT $LN32@req_main
; Line 259
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 261
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _keyform$1$[esp+328], eax
	jmp	$LN513@req_main
$LN32@req_main:
; Line 262
	mov	edx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	ecx, esi
	npad	7
$LL377@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN378@req_main
	test	al, al
	je	SHORT $LN379@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN378@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL377@req_main
$LN379@req_main:
	xor	eax, eax
	jmp	SHORT $LN380@req_main
$LN378@req_main:
	sbb	eax, eax
	or	eax, 1
$LN380@req_main:
	test	eax, eax
	jne	SHORT $LN35@req_main
; Line 263
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 265
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _infile$1$[esp+328], eax
	jmp	$LN513@req_main
$LN35@req_main:
; Line 266
	mov	edx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	ecx, esi
	npad	4
$LL381@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN382@req_main
	test	al, al
	je	SHORT $LN383@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN382@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL381@req_main
$LN383@req_main:
	xor	eax, eax
	jmp	SHORT $LN384@req_main
$LN382@req_main:
	sbb	eax, eax
	or	eax, 1
$LN384@req_main:
	test	eax, eax
	jne	SHORT $LN38@req_main
; Line 267
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 269
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+328], eax
	jmp	$LN513@req_main
$LN38@req_main:
; Line 270
	mov	edx, OFFSET ??_C@_07KHMIKCEF@?9keyout?$AA@
	mov	ecx, esi
	npad	4
$LL385@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN386@req_main
	test	al, al
	je	SHORT $LN387@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN386@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL385@req_main
$LN387@req_main:
	xor	eax, eax
	jmp	SHORT $LN388@req_main
$LN386@req_main:
	sbb	eax, eax
	or	eax, 1
$LN388@req_main:
	test	eax, eax
	jne	SHORT $LN41@req_main
; Line 271
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 273
	mov	esi, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _keyout$1$[esp+328], esi
	jmp	$LN513@req_main
$LN41@req_main:
; Line 274
	mov	edx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	ecx, esi
	npad	7
$LL389@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN390@req_main
	test	al, al
	je	SHORT $LN391@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN390@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL389@req_main
$LN391@req_main:
	xor	eax, eax
	jmp	SHORT $LN392@req_main
$LN390@req_main:
	sbb	eax, eax
	or	eax, 1
$LN392@req_main:
	test	eax, eax
	jne	SHORT $LN44@req_main
; Line 275
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 277
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargin$1$[esp+328], eax
	jmp	$LN513@req_main
$LN44@req_main:
; Line 278
	mov	edx, OFFSET ??_C@_08KCDBEMAI@?9passout?$AA@
	mov	ecx, esi
	npad	4
$LL393@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN394@req_main
	test	al, al
	je	SHORT $LN395@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN394@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL393@req_main
$LN395@req_main:
	xor	eax, eax
	jmp	SHORT $LN396@req_main
$LN394@req_main:
	sbb	eax, eax
	or	eax, 1
$LN396@req_main:
	test	eax, eax
	jne	SHORT $LN47@req_main
; Line 279
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 281
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargout$1$[esp+328], eax
	jmp	$LN513@req_main
$LN47@req_main:
; Line 282
	mov	edx, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
	mov	ecx, esi
	npad	4
$LL397@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN398@req_main
	test	al, al
	je	SHORT $LN399@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN398@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL397@req_main
$LN399@req_main:
	xor	eax, eax
	jmp	SHORT $LN400@req_main
$LN398@req_main:
	sbb	eax, eax
	or	eax, 1
$LN400@req_main:
	test	eax, eax
	jne	SHORT $LN50@req_main
; Line 283
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 285
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _inrand$1$[esp+328], eax
	jmp	$LN513@req_main
$LN50@req_main:
; Line 286
	mov	edx, OFFSET ??_C@_07GMCKHJOJ@?9newkey?$AA@
	mov	ecx, esi
	npad	4
$LL401@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN402@req_main
	test	al, al
	je	SHORT $LN403@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN402@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL401@req_main
$LN403@req_main:
	xor	eax, eax
	jmp	SHORT $LN404@req_main
$LN402@req_main:
	sbb	eax, eax
	or	eax, 1
$LN404@req_main:
	test	eax, eax
	jne	SHORT $LN53@req_main
; Line 287
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 289
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
; Line 290
	mov	esi, 1
	mov	DWORD PTR _keyalg$1$[esp+328], eax
	mov	DWORD PTR _newreq$1$[esp+328], esi
	jmp	$LN122@req_main
$LN53@req_main:
; Line 291
	mov	edx, OFFSET ??_C@_08JPLFCIIK@?9pkeyopt?$AA@
	mov	ecx, esi
$LL405@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN406@req_main
	test	al, al
	je	SHORT $LN407@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN406@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL405@req_main
$LN407@req_main:
	xor	eax, eax
	jmp	SHORT $LN408@req_main
$LN406@req_main:
	sbb	eax, eax
	or	eax, 1
$LN408@req_main:
	test	eax, eax
	jne	SHORT $LN56@req_main
; Line 292
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 294
	mov	eax, DWORD PTR _pkeyopts$1$[esp+328]
	test	eax, eax
	jne	SHORT $LN333@req_main
; Line 295
	call	_sk_new_null
	mov	DWORD PTR _pkeyopts$1$[esp+328], eax
$LN543@req_main:
; Line 296
	test	eax, eax
	je	$bad$561
$LN333@req_main:
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	push	eax
	call	_sk_push
$LN544@req_main:
	add	esp, 8
	test	eax, eax
	je	$bad$561
; Line 298
	jmp	$LN513@req_main
$LN56@req_main:
	mov	edx, OFFSET ??_C@_07FNCAFLJP@?9sigopt?$AA@
	mov	ecx, esi
$LL409@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN410@req_main
	test	al, al
	je	SHORT $LN411@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN410@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL409@req_main
$LN411@req_main:
	xor	eax, eax
	jmp	SHORT $LN412@req_main
$LN410@req_main:
	sbb	eax, eax
	or	eax, 1
$LN412@req_main:
	test	eax, eax
	jne	SHORT $LN62@req_main
; Line 299
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 301
	mov	eax, DWORD PTR _sigopts$1$[esp+328]
	test	eax, eax
	jne	SHORT $LN333@req_main
; Line 302
	call	_sk_new_null
	mov	DWORD PTR _sigopts$1$[esp+328], eax
; Line 305
	jmp	SHORT $LN543@req_main
$LN62@req_main:
	mov	edx, OFFSET ??_C@_06COHPCLGM@?9batch?$AA@
	mov	ecx, esi
$LL413@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN414@req_main
	test	al, al
	je	SHORT $LN415@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN414@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL413@req_main
$LN415@req_main:
	xor	eax, eax
	jmp	SHORT $LN416@req_main
$LN414@req_main:
	sbb	eax, eax
	or	eax, 1
$LN416@req_main:
	test	eax, eax
	jne	SHORT $LN68@req_main
; Line 306
	mov	DWORD PTR _batch, 1
	jmp	$LN513@req_main
$LN68@req_main:
; Line 307
	mov	edx, OFFSET ??_C@_07JMKJGFPL@?9newhdr?$AA@
	mov	ecx, esi
$LL417@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN418@req_main
	test	al, al
	je	SHORT $LN419@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN418@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL417@req_main
$LN419@req_main:
	xor	eax, eax
	jmp	SHORT $LN420@req_main
$LN418@req_main:
	sbb	eax, eax
	or	eax, 1
$LN420@req_main:
	test	eax, eax
	jne	SHORT $LN70@req_main
; Line 308
	mov	DWORD PTR _newhdr$1$[esp+328], 1
	jmp	$LN513@req_main
$LN70@req_main:
; Line 309
	mov	edx, OFFSET ??_C@_08NJNHONAF@?9modulus?$AA@
	mov	ecx, esi
$LL421@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN422@req_main
	test	al, al
	je	SHORT $LN423@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN422@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL421@req_main
$LN423@req_main:
	xor	eax, eax
	jmp	SHORT $LN424@req_main
$LN422@req_main:
	sbb	eax, eax
	or	eax, 1
$LN424@req_main:
	test	eax, eax
	jne	SHORT $LN72@req_main
; Line 310
	mov	DWORD PTR _modulus$1$[esp+328], 1
	jmp	$LN513@req_main
$LN72@req_main:
; Line 311
	mov	edx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	ecx, esi
$LL425@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN426@req_main
	test	al, al
	je	SHORT $LN427@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN426@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL425@req_main
$LN427@req_main:
	xor	eax, eax
	jmp	SHORT $LN428@req_main
$LN426@req_main:
	sbb	eax, eax
	or	eax, 1
$LN428@req_main:
	test	eax, eax
	jne	SHORT $LN74@req_main
; Line 312
	mov	DWORD PTR _verify$1$[esp+328], 1
	jmp	$LN513@req_main
$LN74@req_main:
; Line 313
	mov	edx, OFFSET ??_C@_06BLCPLFMB@?9nodes?$AA@
	mov	ecx, esi
$LL429@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN430@req_main
	test	al, al
	je	SHORT $LN431@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN430@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL429@req_main
$LN431@req_main:
	xor	eax, eax
	jmp	SHORT $LN432@req_main
$LN430@req_main:
	sbb	eax, eax
	or	eax, 1
$LN432@req_main:
	test	eax, eax
	jne	SHORT $LN76@req_main
; Line 314
	mov	DWORD PTR _nodes$1$[esp+328], 1
	jmp	$LN513@req_main
$LN76@req_main:
; Line 315
	mov	edx, OFFSET ??_C@_06JPEJAHHH@?9noout?$AA@
	mov	ecx, esi
$LL433@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN434@req_main
	test	al, al
	je	SHORT $LN435@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN434@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL433@req_main
$LN435@req_main:
	xor	eax, eax
	jmp	SHORT $LN436@req_main
$LN434@req_main:
	sbb	eax, eax
	or	eax, 1
$LN436@req_main:
	test	eax, eax
	jne	SHORT $LN78@req_main
; Line 316
	mov	DWORD PTR _noout$1$[esp+328], 1
	jmp	$LN513@req_main
$LN78@req_main:
; Line 317
	mov	edx, OFFSET ??_C@_08FBJJFDKJ@?9verbose?$AA@
	mov	ecx, esi
$LL437@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN438@req_main
	test	al, al
	je	SHORT $LN439@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN438@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL437@req_main
$LN439@req_main:
	xor	eax, eax
	jmp	SHORT $LN440@req_main
$LN438@req_main:
	sbb	eax, eax
	or	eax, 1
$LN440@req_main:
	test	eax, eax
	jne	SHORT $LN80@req_main
; Line 318
	mov	DWORD PTR _verbose$1$[esp+328], 1
	jmp	$LN513@req_main
$LN80@req_main:
; Line 319
	mov	edx, OFFSET ??_C@_05HLKFBLKJ@?9utf8?$AA@
	mov	ecx, esi
	npad	3
$LL441@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN442@req_main
	test	al, al
	je	SHORT $LN443@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN442@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL441@req_main
$LN443@req_main:
	xor	eax, eax
	jmp	SHORT $LN444@req_main
$LN442@req_main:
	sbb	eax, eax
	or	eax, 1
$LN444@req_main:
	test	eax, eax
	jne	SHORT $LN82@req_main
; Line 320
	mov	eax, 4096				; 00001000H
	mov	DWORD PTR _chtype$1$[esp+328], eax
	jmp	$LN513@req_main
$LN82@req_main:
; Line 321
	mov	edx, OFFSET ??_C@_08BLLHKMDD@?9nameopt?$AA@
	mov	ecx, esi
	npad	2
$LL445@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN446@req_main
	test	al, al
	je	SHORT $LN447@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN446@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL445@req_main
$LN447@req_main:
	xor	eax, eax
	jmp	SHORT $LN448@req_main
$LN446@req_main:
	sbb	eax, eax
	or	eax, 1
$LN448@req_main:
	test	eax, eax
	jne	SHORT $LN84@req_main
; Line 322
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 324
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	lea	eax, DWORD PTR _nmflag$[esp+332]
	push	eax
	call	_set_name_ex
; Line 326
	jmp	$LN544@req_main
$LN84@req_main:
	mov	edx, OFFSET ??_C@_07GDDFPCHC@?9reqopt?$AA@
	mov	ecx, esi
	npad	1
$LL449@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN450@req_main
	test	al, al
	je	SHORT $LN451@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN450@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL449@req_main
$LN451@req_main:
	xor	eax, eax
	jmp	SHORT $LN452@req_main
$LN450@req_main:
	sbb	eax, eax
	or	eax, 1
$LN452@req_main:
	test	eax, eax
	jne	SHORT $LN88@req_main
; Line 327
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 329
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	lea	eax, DWORD PTR _reqflag$[esp+332]
	push	eax
	call	_set_cert_ex
; Line 331
	jmp	$LN544@req_main
$LN88@req_main:
	mov	edx, OFFSET ??_C@_08GNEDOIFN@?9subject?$AA@
	mov	ecx, esi
$LL453@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN454@req_main
	test	al, al
	je	SHORT $LN455@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN454@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL453@req_main
$LN455@req_main:
	xor	eax, eax
	jmp	SHORT $LN456@req_main
$LN454@req_main:
	sbb	eax, eax
	or	eax, 1
$LN456@req_main:
	test	eax, eax
	jne	SHORT $LN92@req_main
; Line 332
	mov	DWORD PTR _subject$1$[esp+328], 1
	jmp	$LN513@req_main
$LN92@req_main:
; Line 333
	mov	edx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	ecx, esi
$LL457@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN458@req_main
	test	al, al
	je	SHORT $LN459@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN458@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL457@req_main
$LN459@req_main:
	xor	eax, eax
	jmp	SHORT $LN460@req_main
$LN458@req_main:
	sbb	eax, eax
	or	eax, 1
$LN460@req_main:
	test	eax, eax
	jne	SHORT $LN94@req_main
; Line 334
	mov	DWORD PTR _text$1$[esp+328], 1
	jmp	$LN513@req_main
$LN94@req_main:
; Line 335
	mov	edx, OFFSET ??_C@_05NBLHIDAD@?9x509?$AA@
	mov	ecx, esi
	npad	1
$LL461@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN462@req_main
	test	al, al
	je	SHORT $LN463@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN462@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL461@req_main
$LN463@req_main:
	xor	eax, eax
	jmp	SHORT $LN464@req_main
$LN462@req_main:
	sbb	eax, eax
	or	eax, 1
$LN464@req_main:
	test	eax, eax
	jne	SHORT $LN96@req_main
; Line 336
	mov	DWORD PTR _x509$1$[esp+328], 1
	jmp	$LN513@req_main
$LN96@req_main:
; Line 337
	mov	edx, OFFSET ??_C@_0N@GCBKILCE@?9asn1?9kludge?$AA@
	mov	ecx, esi
	npad	3
$LL465@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN466@req_main
	test	al, al
	je	SHORT $LN467@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN466@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL465@req_main
$LN467@req_main:
	xor	eax, eax
	jmp	SHORT $LN468@req_main
$LN466@req_main:
	sbb	eax, eax
	or	eax, 1
$LN468@req_main:
	test	eax, eax
	jne	SHORT $LN98@req_main
; Line 338
	mov	DWORD PTR _kludge$1$[esp+328], 1
	jmp	$LN513@req_main
$LN98@req_main:
; Line 339
	mov	edx, OFFSET ??_C@_0BA@OKKENJJO@?9no?9asn1?9kludge?$AA@
	mov	ecx, esi
	npad	3
$LL469@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN470@req_main
	test	al, al
	je	SHORT $LN471@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN470@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL469@req_main
$LN471@req_main:
	xor	eax, eax
	jmp	SHORT $LN472@req_main
$LN470@req_main:
	sbb	eax, eax
	or	eax, 1
$LN472@req_main:
	test	eax, eax
	jne	SHORT $LN100@req_main
; Line 340
	mov	DWORD PTR _kludge$1$[esp+328], eax
	jmp	$LN513@req_main
$LN100@req_main:
; Line 341
	mov	edx, OFFSET ??_C@_05MDNNBOGG@?9subj?$AA@
	mov	ecx, esi
	npad	7
$LL473@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN474@req_main
	test	al, al
	je	SHORT $LN475@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN474@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL473@req_main
$LN475@req_main:
	xor	eax, eax
	jmp	SHORT $LN476@req_main
$LN474@req_main:
	sbb	eax, eax
	or	eax, 1
$LN476@req_main:
	test	eax, eax
	jne	SHORT $LN102@req_main
; Line 342
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 344
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _subj$1$[esp+328], eax
	jmp	$LN513@req_main
$LN102@req_main:
; Line 345
	mov	edx, OFFSET ??_C@_0BA@NIPEAEAE@?9multivalue?9rdn?$AA@
	mov	ecx, esi
	npad	7
$LL477@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN478@req_main
	test	al, al
	je	SHORT $LN479@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN478@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL477@req_main
$LN479@req_main:
	xor	eax, eax
	jmp	SHORT $LN480@req_main
$LN478@req_main:
	sbb	eax, eax
	or	eax, 1
$LN480@req_main:
	test	eax, eax
	jne	SHORT $LN105@req_main
; Line 346
	mov	DWORD PTR _multirdn$1$[esp+328], 1
	jmp	$LN513@req_main
$LN105@req_main:
; Line 347
	mov	edx, OFFSET ??_C@_05EFBFHALF@?9days?$AA@
	mov	ecx, esi
	npad	3
$LL481@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN482@req_main
	test	al, al
	je	SHORT $LN483@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN482@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL481@req_main
$LN483@req_main:
	xor	eax, eax
	jmp	SHORT $LN484@req_main
$LN482@req_main:
	sbb	eax, eax
	or	eax, 1
$LN484@req_main:
	test	eax, eax
	jne	SHORT $LN107@req_main
; Line 348
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 350
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	DWORD PTR __imp__atoi
	add	esp, 4
	mov	DWORD PTR _days$1$[esp+328], eax
; Line 351
	test	eax, eax
	jne	$LN513@req_main
; Line 352
	mov	DWORD PTR _days$1$[esp+328], 30		; 0000001eH
; Line 353
	jmp	$LN513@req_main
$LN107@req_main:
	mov	edx, OFFSET ??_C@_0M@LDCLLBDG@?9set_serial?$AA@
	mov	ecx, esi
$LL485@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN486@req_main
	test	al, al
	je	SHORT $LN487@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN486@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL485@req_main
$LN487@req_main:
	xor	eax, eax
	jmp	SHORT $LN488@req_main
$LN486@req_main:
	sbb	eax, eax
	or	eax, 1
$LN488@req_main:
	test	eax, eax
	jne	SHORT $LN111@req_main
; Line 354
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 356
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	push	eax
	call	_s2i_ASN1_INTEGER
	mov	DWORD PTR _serial$1$[esp+336], eax
; Line 359
	jmp	$LN544@req_main
$LN111@req_main:
	mov	edx, OFFSET ??_C@_0M@BEOOFGDH@?9extensions?$AA@
	mov	ecx, esi
$LL489@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN490@req_main
	test	al, al
	je	SHORT $LN491@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN490@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL489@req_main
$LN491@req_main:
	xor	eax, eax
	jmp	SHORT $LN492@req_main
$LN490@req_main:
	sbb	eax, eax
	or	eax, 1
$LN492@req_main:
	test	eax, eax
	jne	SHORT $LN115@req_main
; Line 360
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 362
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _extensions$1$[esp+328], eax
	jmp	SHORT $LN513@req_main
$LN115@req_main:
; Line 363
	mov	edx, OFFSET ??_C@_08DFHODPJJ@?9reqexts?$AA@
	mov	ecx, esi
	npad	6
$LL493@req_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN494@req_main
	test	al, al
	je	SHORT $LN495@req_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN494@req_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL493@req_main
$LN495@req_main:
	xor	eax, eax
	jmp	SHORT $LN496@req_main
$LN494@req_main:
	sbb	eax, eax
	or	eax, 1
$LN496@req_main:
	test	eax, eax
	jne	SHORT $LN118@req_main
; Line 364
	dec	edi
	cmp	edi, 1
	jl	$bad$561
; Line 366
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _req_exts$1$[esp+328], eax
	jmp	SHORT $LN513@req_main
$LN118@req_main:
; Line 367
	lea	eax, DWORD PTR [esi+1]
	push	eax
	call	_EVP_get_digestbyname
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _md_alg$1$[esp+328], esi
	test	esi, esi
	je	SHORT $LN121@req_main
; Line 369
	mov	DWORD PTR _digest$1$[esp+328], esi
$LN513@req_main:
	mov	esi, DWORD PTR _newreq$1$[esp+328]
$LN122@req_main:
; Line 375
	dec	edi
; Line 376
	add	ebx, 4
	cmp	edi, 1
	jge	$LL2@req_main
$LN123@req_main:
; Line 451
	call	_ERR_load_crypto_strings
; Line 452
	lea	eax, DWORD PTR _passout$[esp+328]
	push	eax
	lea	eax, DWORD PTR _passin$[esp+332]
	push	eax
	push	DWORD PTR _passargout$1$[esp+336]
	push	DWORD PTR _passargin$1$[esp+340]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN124@req_main
; Line 453
	push	OFFSET ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 454
	jmp	$LN514@req_main
$LN121@req_main:
; Line 371
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$bad$561:
; Line 381
	push	DWORD PTR _prog$1$[esp+328]
	push	OFFSET ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 382
	push	OFFSET ??_C@_0BE@CHJJKKLI@where?5options?5?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 383
	push	OFFSET ??_C@_0CL@MDOLAFAK@?5?9inform?5arg?5?5?5?5input?5format?5?9?5D@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 384
	push	OFFSET ??_C@_0CM@OEOKNGNO@?5?9outform?5arg?5?5?5output?5format?5?9?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 385
	push	OFFSET ??_C@_0BM@BNDOLEGE@?5?9in?5arg?5?5?5?5?5?5?5?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 386
	push	OFFSET ??_C@_0BN@NLKPGMME@?5?9out?5arg?5?5?5?5?5?5?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 387
	push	OFFSET ??_C@_0CG@OIEFBBAO@?5?9text?5?5?5?5?5?5?5?5?5?5text?5form?5of?5req@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 388
	push	OFFSET ??_C@_0CD@KGCNKBCD@?5?9pubkey?5?5?5?5?5?5?5?5output?5public?5ke@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 389
	push	OFFSET ??_C@_0CD@JIDAIBMD@?5?9noout?5?5?5?5?5?5?5?5?5do?5not?5output?5RE@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 390
	push	OFFSET ??_C@_0CJ@ICFAPLND@?5?9verify?5?5?5?5?5?5?5?5verify?5signature@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 391
	push	OFFSET ??_C@_0BN@LLCCILG@?5?9modulus?5?5?5?5?5?5?5RSA?5modulus?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 392
	push	OFFSET ??_C@_0CO@NLDNMACB@?5?9nodes?5?5?5?5?5?5?5?5?5don?8t?5encrypt?5th@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 394
	push	OFFSET ??_C@_0DK@BPMBDPII@?5?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5po@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 397
	push	OFFSET ??_C@_0CO@MFDIAJIM@?5?9subject?5?5?5?5?5?5?5output?5the?5reque@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 398
	push	OFFSET ??_C@_0CN@MLPHKBCF@?5?9passin?5?5?5?5?5?5?5?5private?5key?5pass@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 399
	push	OFFSET ??_C@_0DH@PKGEJNOC@?5?9key?5file?5?5?5?5?5?5use?5the?5private?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 401
	push	OFFSET ??_C@_0CB@LMHDCKJL@?5?9keyform?5arg?5?5?5key?5file?5format?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 402
	push	OFFSET ??_C@_0CJ@EOJCAFHI@?5?9keyout?5arg?5?5?5?5file?5to?5send?5the@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 403
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 405
	push	OFFSET ??_C@_0EE@JPAFCFML@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIo@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 407
	push	OFFSET ??_C@_0CN@EKAIOOCB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numbe@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 408
	push	OFFSET ??_C@_0DM@GHAGNPLI@?5?9newkey?5rsa?3bits?5generate?5a?5new@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 410
	push	OFFSET ??_C@_0EO@CNJNIGKO@?5?9newkey?5dsa?3file?5generate?5a?5new@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 413
	push	OFFSET ??_C@_0EM@PADDHLNP@?5?9newkey?5ec?3file?5generate?5a?5new?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 416
	push	OFFSET ??_C@_0EB@IEFBPBDC@?5?9?$FLdigest?$FN?5?5?5?5?5?5Digest?5to?5sign?5w@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 418
	push	OFFSET ??_C@_0CI@DIABMJEF@?5?9config?5file?5?5?5request?5template@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 419
	push	OFFSET ??_C@_0CP@HCNCEBKD@?5?9subj?5arg?5?5?5?5?5?5set?5or?5modify?5re@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 421
	push	OFFSET ??_C@_0DG@CNHPGMNH@?5?9multivalue?9rdn?5enable?5support?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 423
	push	OFFSET ??_C@_0BO@NIINFKKJ@?5?9new?5?5?5?5?5?5?5?5?5?5?5new?5request?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 424
	push	OFFSET ??_C@_0DP@HGDJHLP@?5?9batch?5?5?5?5?5?5?5?5?5do?5not?5ask?5anyth@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 426
	push	OFFSET ??_C@_0EB@BKMGOBMN@?5?9x509?5?5?5?5?5?5?5?5?5?5output?5a?5x509?5st@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 428
	push	OFFSET ??_C@_0EP@BJOKFCBC@?5?9days?5?5?5?5?5?5?5?5?5?5number?5of?5days?5a@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 430
	push	OFFSET ??_C@_0EM@IDBMALNJ@?5?9set_serial?5?5?5?5serial?5number?5to@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 432
	push	OFFSET ??_C@_0DC@EIIKHMHB@?5?9newhdr?5?5?5?5?5?5?5?5output?5?$CCNEW?$CC?5in?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 434
	push	OFFSET ??_C@_0EO@KKMFBONC@?5?9asn1?9kludge?5?5?5Output?5the?5?8requ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 436
	push	OFFSET ??_C@_0DB@FMNPFGKD@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5have?5been?5report@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 438
	push	OFFSET ??_C@_0FH@DLNHGECL@?5?9extensions?5?4?4?5specify?5certific@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 440
	push	OFFSET ??_C@_0FD@PNHFCKKJ@?5?9reqexts?5?4?4?5?5?5?5specify?5request?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 442
	push	OFFSET ??_C@_0DL@KMNLMCKB@?5?9utf8?5?5?5?5?5?5?5?5?5?5input?5characters@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 444
	push	OFFSET ??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 446
	push	OFFSET ??_C@_0DB@DHIJEKH@?5?9reqopt?5arg?5?5?5?5?9?5various?5reques@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 448
	jmp	$LN514@req_main
$LN124@req_main:
; Line 469
	test	ebp, ebp
	je	SHORT $LN125@req_main
; Line 472
	cmp	DWORD PTR _verbose$1$[esp+328], 0
	mov	DWORD PTR _errline$1[esp+328], -1
	je	SHORT $LN127@req_main
; Line 473
	push	ebp
	push	OFFSET ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN127@req_main:
; Line 474
	push	0
	call	_NCONF_new
; Line 475
	lea	ecx, DWORD PTR _errline$1[esp+332]
	mov	DWORD PTR _req_conf, eax
	push	ecx
	push	ebp
	push	eax
	call	_NCONF_load
	add	esp, 16					; 00000010H
; Line 476
	test	eax, eax
	jne	SHORT $LN132@req_main
; Line 477
	push	ebp
	push	DWORD PTR _errline$1[esp+332]
	push	OFFSET ??_C@_0BJ@BNDHOAPM@error?5on?5line?5?$CFld?5of?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
	jmp	$LN514@req_main
$LN125@req_main:
; Line 482
	mov	eax, DWORD PTR _config
	mov	DWORD PTR _req_conf, eax
; Line 484
	test	eax, eax
	jne	SHORT $LN129@req_main
; Line 485
	push	DWORD PTR _default_config_file
	push	OFFSET ??_C@_0CE@EDEOOKJA@Unable?5to?5load?5config?5info?5from?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 487
	test	esi, esi
	jne	$LN514@req_main
; Line 489
	jmp	SHORT $LN132@req_main
$LN129@req_main:
	cmp	DWORD PTR _verbose$1$[esp+328], 0
	je	SHORT $LN132@req_main
; Line 490
	push	DWORD PTR _default_config_file
	push	OFFSET ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN132@req_main:
; Line 494
	mov	eax, DWORD PTR _req_conf
	test	eax, eax
	je	SHORT $LN510@req_main
; Line 495
	push	eax
	push	DWORD PTR _bio_err
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN514@req_main
; Line 497
	push	OFFSET ??_C@_08NOLCFLKC@oid_file?$AA@
	push	0
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 498
	test	eax, eax
	jne	SHORT $LN331@req_main
; Line 499
	call	_ERR_clear_error
; Line 500
	jmp	SHORT $LN510@req_main
$LN331@req_main:
; Line 503
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	eax
	call	_BIO_new_file
	mov	esi, eax
	add	esp, 8
; Line 504
	test	esi, esi
	je	SHORT $LN510@req_main
; Line 510
	push	esi
	call	_OBJ_create_objects
; Line 511
	push	esi
	call	_BIO_free
	add	esp, 8
$LN510@req_main:
; Line 515
	push	DWORD PTR _req_conf
	push	DWORD PTR _bio_err
	call	_add_oid_section
	add	esp, 8
	test	eax, eax
	je	$LN514@req_main
; Line 518
	cmp	DWORD PTR _md_alg$1$[esp+328], 0
	jne	SHORT $LN143@req_main
; Line 519
	push	OFFSET ??_C@_0L@GPEHKDBA@default_md?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 520
	test	eax, eax
	jne	SHORT $LN330@req_main
; Line 521
	call	_ERR_clear_error
; Line 522
	jmp	SHORT $LN143@req_main
$LN330@req_main:
; Line 523
	push	eax
	call	_EVP_get_digestbyname
	mov	ecx, DWORD PTR _digest$1$[esp+332]
	add	esp, 4
	test	eax, eax
	cmovne	ecx, eax
	mov	DWORD PTR _digest$1$[esp+328], ecx
$LN143@req_main:
; Line 528
	mov	ebx, DWORD PTR _extensions$1$[esp+328]
	test	ebx, ebx
	jne	$LN329@req_main
; Line 529
	push	OFFSET ??_C@_0BA@DDJOFEBJ@x509_extensions?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _extensions$1$[esp+328], ebx
; Line 530
	test	ebx, ebx
	jne	$LN329@req_main
; Line 531
	call	_ERR_clear_error
$LN147@req_main:
; Line 545
	cmp	DWORD PTR _passin$[esp+328], 0
	jne	SHORT $LN149@req_main
; Line 546
	push	OFFSET ??_C@_0P@JJFIBNNH@input_password?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _passin$[esp+328], eax
; Line 547
	test	eax, eax
	jne	SHORT $LN149@req_main
; Line 548
	call	_ERR_clear_error
$LN149@req_main:
; Line 551
	cmp	DWORD PTR _passout$[esp+328], 0
	jne	SHORT $LN151@req_main
; Line 552
	push	OFFSET ??_C@_0BA@KAIJGPIE@output_password?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _passout$[esp+328], eax
; Line 553
	test	eax, eax
	jne	SHORT $LN151@req_main
; Line 554
	call	_ERR_clear_error
$LN151@req_main:
; Line 557
	push	OFFSET ??_C@_0M@NPFHBEIA@string_mask?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 558
	test	esi, esi
	jne	$LN328@req_main
; Line 559
	call	_ERR_clear_error
$LN153@req_main:
; Line 566
	mov	edi, DWORD PTR _chtype$1$[esp+328]
	cmp	edi, 4096				; 00001000H
	je	$LN157@req_main
; Line 567
	push	OFFSET ??_C@_04LHHHFLPP@utf8?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 568
	test	eax, eax
	jne	SHORT $LN155@req_main
; Line 569
	call	_ERR_clear_error
	jmp	$LN157@req_main
$LN329@req_main:
; Line 536
	push	1
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$2[esp+344]
	push	0
	push	eax
	call	_X509V3_set_ctx
; Line 537
	push	DWORD PTR _req_conf
	lea	eax, DWORD PTR _ctx$2[esp+356]
	push	eax
	call	_X509V3_set_nconf
; Line 538
	push	0
	push	ebx
	lea	eax, DWORD PTR _ctx$2[esp+368]
	push	eax
	push	DWORD PTR _req_conf
	call	_X509V3_EXT_add_nconf
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	$LN147@req_main
; Line 539
	push	ebx
	push	OFFSET ??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@
; Line 541
	jmp	$LN553@req_main
$LN328@req_main:
; Line 561
	push	esi
	call	_ASN1_STRING_set_default_mask_asc
	add	esp, 4
	test	eax, eax
	jne	$LN153@req_main
; Line 562
	push	esi
	push	OFFSET ??_C@_0CH@PNKCABBA@Invalid?5global?5string?5mask?5setti@
; Line 563
	jmp	$LN553@req_main
$LN155@req_main:
; Line 570
	mov	ecx, OFFSET ??_C@_03ICICOMAL@yes?$AA@
$LL497@req_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN498@req_main
	test	dl, dl
	je	SHORT $LN499@req_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN498@req_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL497@req_main
$LN499@req_main:
	xor	eax, eax
	jmp	SHORT $LN500@req_main
$LN498@req_main:
	sbb	eax, eax
	or	eax, 1
$LN500@req_main:
	test	eax, eax
	mov	ecx, 4096				; 00001000H
	cmove	edi, ecx
	mov	DWORD PTR _chtype$1$[esp+328], edi
$LN157@req_main:
; Line 574
	mov	ebx, DWORD PTR _req_exts$1$[esp+328]
	test	ebx, ebx
	jne	$LN327@req_main
; Line 575
	push	OFFSET ??_C@_0P@LBFPKDKM@req_extensions?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _req_exts$1$[esp+328], ebx
; Line 576
	test	ebx, ebx
	jne	$LN327@req_main
; Line 577
	call	_ERR_clear_error
$LN161@req_main:
; Line 592
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	mov	DWORD PTR _in$1$[esp+332], esi
; Line 593
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 8
	mov	ebp, eax
; Line 594
	test	esi, esi
	je	$LN533@req_main
	test	ebp, ebp
	je	$LN533@req_main
; Line 598
	push	0
	push	DWORD PTR _engine$1$[esp+332]
	push	DWORD PTR _bio_err
	call	_setup_engine
; Line 601
	mov	ecx, DWORD PTR _keyfile$1$[esp+340]
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	je	SHORT $LN166@req_main
; Line 602
	push	OFFSET ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
	push	eax
	push	DWORD PTR _passin$[esp+336]
	push	0
	push	DWORD PTR _keyform$1$[esp+344]
	push	ecx
	push	DWORD PTR _bio_err
	call	_load_key
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _pkey$[esp+328], eax
; Line 604
	test	eax, eax
	je	$LN533@req_main
; Line 610
	push	OFFSET ??_C@_08OFLJHDDG@RANDFILE?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 611
	test	esi, esi
	jne	SHORT $LN167@req_main
; Line 612
	call	_ERR_clear_error
$LN167@req_main:
; Line 613
	push	0
	push	DWORD PTR _bio_err
	push	esi
	call	_app_RAND_load_file
	mov	esi, DWORD PTR _in$1$[esp+340]
	add	esp, 12					; 0000000cH
$LN166@req_main:
; Line 617
	cmp	DWORD PTR _newreq$1$[esp+328], 0
	je	$LN326@req_main
	cmp	DWORD PTR _pkey$[esp+328], 0
	jne	$LN338@req_main
; Line 618
	push	OFFSET ??_C@_08OFLJHDDG@RANDFILE?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 619
	test	ebx, ebx
	jne	SHORT $LN169@req_main
; Line 620
	call	_ERR_clear_error
$LN169@req_main:
; Line 621
	push	0
	push	DWORD PTR _bio_err
	push	ebx
	call	_app_RAND_load_file
; Line 622
	mov	eax, DWORD PTR _inrand$1$[esp+340]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN170@req_main
; Line 623
	push	eax
	call	_app_RAND_load_files
	add	esp, 4
$LN170@req_main:
; Line 625
	lea	eax, DWORD PTR _newkey$[esp+328]
	push	eax
	push	OFFSET ??_C@_0N@CCMNCKPB@default_bits?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_number_e
	mov	ecx, DWORD PTR _newkey$[esp+344]
	add	esp, 16					; 00000010H
; Line 630
	mov	edi, DWORD PTR _gen_eng$1$[esp+328]
	test	eax, eax
	mov	eax, DWORD PTR _keyalg$1$[esp+328]
	mov	edx, 2048				; 00000800H
	cmove	ecx, edx
	mov	DWORD PTR _newkey$[esp+328], ecx
	test	eax, eax
	je	$LN538@req_main
	push	edi
	lea	ecx, DWORD PTR _keyalgstr$[esp+332]
	push	ecx
	lea	ecx, DWORD PTR _newkey$[esp+336]
	push	ecx
	lea	ecx, DWORD PTR _pkey_type$[esp+340]
	push	ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_set_keygen_ctx
	mov	esi, eax
	add	esp, 24					; 00000018H
	mov	DWORD PTR _genctx$1$[esp+328], esi
; Line 632
	test	esi, esi
	je	$LN533@req_main
	jmp	SHORT $LN173@req_main
$LN327@req_main:
; Line 582
	push	1
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$3[esp+344]
	push	0
	push	eax
	call	_X509V3_set_ctx
; Line 583
	push	DWORD PTR _req_conf
	lea	eax, DWORD PTR _ctx$3[esp+356]
	push	eax
	call	_X509V3_set_nconf
; Line 584
	push	0
	push	ebx
	lea	eax, DWORD PTR _ctx$3[esp+368]
	push	eax
	push	DWORD PTR _req_conf
	call	_X509V3_EXT_add_nconf
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	$LN161@req_main
; Line 585
	push	ebx
	push	OFFSET ??_C@_0CM@FAJMBBDK@Error?5Loading?5request?5extension?5@
; Line 588
	jmp	$LN553@req_main
$LN538@req_main:
	xor	esi, esi
$LN173@req_main:
; Line 637
	cmp	DWORD PTR _newkey$[esp+328], 512	; 00000200H
	jge	SHORT $LN174@req_main
	mov	eax, DWORD PTR _pkey_type$[esp+328]
	cmp	eax, 6
	je	SHORT $LN175@req_main
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN174@req_main
$LN175@req_main:
; Line 638
	push	OFFSET ??_C@_0CC@ELOKEOPP@private?5key?5length?5is?5too?5short?0@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 639
	push	DWORD PTR _newkey$[esp+336]
	push	512					; 00000200H
	push	OFFSET ??_C@_0CK@DBFJKCLJ@it?5needs?5to?5be?5at?5least?5?$CFd?5bits?0@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 641
	jmp	$LN533@req_main
$LN174@req_main:
; Line 644
	test	esi, esi
	jne	SHORT $LN177@req_main
; Line 645
	push	edi
	lea	eax, DWORD PTR _keyalgstr$[esp+332]
	push	eax
	lea	eax, DWORD PTR _newkey$[esp+336]
	push	eax
	lea	eax, DWORD PTR _pkey_type$[esp+340]
	push	eax
	push	esi
	push	DWORD PTR _bio_err
	call	_set_keygen_ctx
	mov	esi, eax
	add	esp, 24					; 00000018H
	mov	DWORD PTR _genctx$1$[esp+328], esi
; Line 647
	test	esi, esi
	je	$LN533@req_main
$LN177@req_main:
; Line 651
	mov	edi, DWORD PTR _pkeyopts$1$[esp+328]
	test	edi, edi
	je	SHORT $LN511@req_main
; Line 653
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN537@req_main
	npad	1
$LL6@req_main:
; Line 654
	push	esi
	push	edi
	call	_sk_value
	mov	edi, eax
; Line 655
	push	edi
	push	DWORD PTR _genctx$1$[esp+340]
	call	_pkey_ctrl_string
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN315@req_main
; Line 653
	mov	edi, DWORD PTR _pkeyopts$1$[esp+328]
	inc	esi
	push	edi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL6@req_main
$LN537@req_main:
	mov	esi, DWORD PTR _genctx$1$[esp+328]
$LN511@req_main:
; Line 663
	push	DWORD PTR _keyalgstr$[esp+328]
	push	DWORD PTR _newkey$[esp+332]
	push	OFFSET ??_C@_0CF@BBJFODEP@Generating?5a?5?$CFld?5bit?5?$CFs?5private?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 666
	push	OFFSET _genpkey_cb
	push	esi
	call	_EVP_PKEY_CTX_set_cb
; Line 667
	push	DWORD PTR _bio_err
	push	esi
	call	_EVP_PKEY_CTX_set_app_data
; Line 669
	lea	eax, DWORD PTR _pkey$[esp+360]
	push	eax
	push	esi
	call	_EVP_PKEY_keygen
	add	esp, 40					; 00000028H
	test	eax, eax
	jg	SHORT $LN180@req_main
; Line 670
	push	OFFSET ??_C@_0BG@HLDNBPLC@Error?5Generating?5Key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
; Line 671
	jmp	$LN533@req_main
$LN315@req_main:
; Line 656
	push	edi
	push	OFFSET ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 657
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 658
	jmp	$LN533@req_main
$LN180@req_main:
; Line 674
	push	esi
	call	_EVP_PKEY_CTX_free
; Line 677
	push	DWORD PTR _bio_err
	mov	DWORD PTR _genctx$1$[esp+336], 0
	push	ebx
	call	_app_RAND_write_file
; Line 679
	mov	ebx, DWORD PTR _keyout$1$[esp+340]
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	$LN183@req_main
; Line 680
	push	OFFSET ??_C@_0BA@ONKAAELM@default_keyfile?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _keyout$1$[esp+328], ebx
; Line 681
	test	ebx, ebx
	jne	$LN183@req_main
; Line 682
	call	_ERR_clear_error
; Line 686
	push	OFFSET ??_C@_0CD@MNJCLBII@writing?5new?5private?5key?5to?5stdou@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 687
	mov	eax, DWORD PTR __imp____acrt_iob_func
	push	1
	call	eax
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	ebp
	call	_BIO_ctrl
	add	esp, 28					; 0000001cH
$LN185@req_main:
; Line 702
	push	OFFSET ??_C@_0BA@NGFFPLIL@encrypt_rsa_key?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 703
	test	eax, eax
	jne	SHORT $LN325@req_main
; Line 704
	call	_ERR_clear_error
; Line 705
	push	OFFSET ??_C@_0M@PLLNDNLN@encrypt_key?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 706
	test	eax, eax
	jne	SHORT $LN325@req_main
; Line 707
	call	_ERR_clear_error
; Line 709
	mov	ebx, DWORD PTR _cipher$2$[esp+328]
	jmp	SHORT $LN188@req_main
$LN183@req_main:
; Line 695
	push	ebx
	push	OFFSET ??_C@_0CB@LGKDEPPP@writing?5new?5private?5key?5to?5?8?$CFs?8?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 696
	push	ebx
	push	5
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 28					; 0000001cH
	test	eax, eax
	jg	SHORT $LN185@req_main
; Line 697
	push	ebx
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 698
	jmp	$LN533@req_main
$LN325@req_main:
; Line 709
	mov	ecx, OFFSET ??_C@_02KAJCLHKP@no?$AA@
	npad	7
$LL501@req_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN502@req_main
	test	dl, dl
	je	SHORT $LN503@req_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN502@req_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL501@req_main
$LN503@req_main:
	xor	eax, eax
	jmp	SHORT $LN504@req_main
$LN502@req_main:
	sbb	eax, eax
	or	eax, 1
$LN504@req_main:
	mov	ebx, DWORD PTR _cipher$2$[esp+328]
	xor	ecx, ecx
	test	eax, eax
	cmove	ebx, ecx
$LN188@req_main:
; Line 716
	push	DWORD PTR _passout$[esp+328]
	xor	eax, eax
	cmp	DWORD PTR _nodes$1$[esp+332], eax
	cmovne	ebx, eax
	xor	esi, esi
	push	esi
	push	esi
	push	esi
	push	ebx
	push	DWORD PTR _pkey$[esp+348]
	push	ebp
	call	_PEM_write_bio_PrivateKey
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN190@req_main
	npad	6
$loop$562:
; Line 719
	call	_ERR_peek_error
	and	eax, 4095				; 00000fffH
	cmp	eax, 109				; 0000006dH
	jne	$LN533@req_main
	cmp	esi, 3
	jge	$LN533@req_main
; Line 720
	call	_ERR_clear_error
	push	DWORD PTR _passout$[esp+328]
; Line 721
	inc	esi
	push	0
	push	0
	push	0
	push	ebx
	push	DWORD PTR _pkey$[esp+348]
	push	ebp
	call	_PEM_write_bio_PrivateKey
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $loop$562
$LN190@req_main:
; Line 726
	push	OFFSET ??_C@_06NGLIMPFK@?9?9?9?9?9?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 729
	mov	edi, DWORD PTR _x509$1$[esp+336]
	add	esp, 8
	xor	ebx, ebx
	jmp	$LN202@req_main
$LN326@req_main:
; Line 735
	mov	ebx, DWORD PTR _infile$1$[esp+328]
	mov	DWORD PTR _kludge$1$[esp+328], -1
	test	ebx, ebx
	jne	SHORT $LN193@req_main
; Line 736
	mov	eax, DWORD PTR __imp____acrt_iob_func
	push	ebx
	call	eax
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN195@req_main:
; Line 744
	mov	eax, DWORD PTR _informat$1$[esp+328]
	cmp	eax, 1
	jne	SHORT $LN196@req_main
; Line 745
	push	0
	push	esi
	call	_d2i_X509_REQ_bio
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _req$1$[esp+328], ebx
	jmp	SHORT $LN199@req_main
$LN193@req_main:
; Line 738
	push	ebx
	push	3
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN195@req_main
; Line 739
	push	ebx
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 740
	jmp	$LN533@req_main
$LN196@req_main:
; Line 746
	cmp	eax, 3
	jne	$LN198@req_main
; Line 747
	push	0
	push	0
	push	0
	push	esi
	call	_PEM_read_bio_X509_REQ
	add	esp, 16					; 00000010H
	mov	DWORD PTR _req$1$[esp+328], eax
	mov	ebx, eax
$LN199@req_main:
; Line 753
	test	ebx, ebx
	jne	SHORT $LN339@req_main
; Line 754
	push	OFFSET ??_C@_0BN@CMIEOFLN@unable?5to?5load?5X509?5request?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 755
	jmp	$LN533@req_main
$LN339@req_main:
; Line 759
	mov	edi, DWORD PTR _x509$1$[esp+328]
	test	edi, edi
	je	$LN225@req_main
$LN202@req_main:
; Line 760
	cmp	DWORD PTR _pkey$[esp+328], 0
	jne	SHORT $LN203@req_main
; Line 761
	push	OFFSET ??_C@_0CD@LIJJNJII@you?5need?5to?5specify?5a?5private?5ke@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 762
	jmp	$LN533@req_main
$LN203@req_main:
; Line 765
	test	ebx, ebx
	jne	$LN207@req_main
	mov	edi, DWORD PTR _chtype$1$[esp+328]
$LN338@req_main:
; Line 766
	call	_X509_REQ_new
	mov	ebx, eax
	mov	DWORD PTR _req$1$[esp+328], ebx
; Line 767
	test	ebx, ebx
	je	$LN533@req_main
; Line 771
	mov	esi, DWORD PTR _subj$1$[esp+328]
	xor	eax, eax
	push	edi
	mov	edi, DWORD PTR _x509$1$[esp+332]
	test	edi, edi
	sete	al
	push	eax
	push	DWORD PTR _multirdn$1$[esp+336]
	push	esi
	push	DWORD PTR _pkey$[esp+344]
	push	ebx
	call	_make_REQ
	add	esp, 24					; 00000018H
; Line 772
	mov	DWORD PTR _subj$1$[esp+328], 0
; Line 774
	cmp	DWORD PTR _kludge$1$[esp+328], 0
	mov	esi, eax
	jle	SHORT $LN206@req_main
	mov	ecx, DWORD PTR [ebx]
	push	DWORD PTR [ecx+24]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN206@req_main
; Line 775
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+24]
	call	_sk_free
; Line 776
	mov	eax, DWORD PTR [ebx]
	add	esp, 4
	mov	DWORD PTR [eax+24], 0
$LN206@req_main:
; Line 778
	test	esi, esi
	jne	SHORT $LN207@req_main
; Line 779
	push	OFFSET ??_C@_0CF@JJEMGJAP@problems?5making?5Certificate?5Requ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 780
	jmp	$LN533@req_main
$LN207@req_main:
; Line 783
	test	edi, edi
	je	$LN208@req_main
; Line 786
	call	_X509_new
	mov	esi, eax
	mov	DWORD PTR _x509ss$1$[esp+328], esi
	test	esi, esi
	je	$LN517@req_main
; Line 790
	mov	eax, DWORD PTR _extensions$1$[esp+328]
	test	eax, eax
	je	SHORT $LN211@req_main
	push	2
	push	esi
	call	_X509_set_version
	add	esp, 8
	test	eax, eax
	je	$LN517@req_main
$LN211@req_main:
; Line 792
	mov	eax, DWORD PTR _serial$1$[esp+328]
	test	eax, eax
	je	SHORT $LN212@req_main
; Line 793
	push	eax
	push	esi
	call	_X509_set_serialNumber
	add	esp, 8
; Line 795
	jmp	SHORT $LN559@req_main
$LN212@req_main:
; Line 796
	push	esi
	call	_X509_get_serialNumber
	push	eax
	push	0
	call	_rand_serial
	add	esp, 12					; 0000000cH
$LN559@req_main:
	test	eax, eax
	je	$LN517@req_main
; Line 800
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+16]
	push	esi
	call	_X509_set_issuer_name
	add	esp, 8
	test	eax, eax
	je	$LN517@req_main
; Line 802
	mov	eax, DWORD PTR [esi]
	push	0
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax]
	call	_X509_gmtime_adj
	add	esp, 8
	test	eax, eax
	je	$LN517@req_main
; Line 804
	mov	eax, DWORD PTR [esi]
	push	0
	push	0
	push	DWORD PTR _days$1$[esp+336]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_X509_time_adj_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN517@req_main
; Line 806
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+16]
	push	esi
	call	_X509_set_subject_name
	add	esp, 8
	test	eax, eax
	je	$LN517@req_main
; Line 809
	push	ebx
	call	_X509_REQ_get_pubkey
; Line 810
	mov	edi, DWORD PTR _x509ss$1$[esp+332]
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	$LN334@req_main
	push	esi
	push	edi
	call	_X509_set_pubkey
	add	esp, 8
	test	eax, eax
	je	$LN334@req_main
; Line 812
	push	esi
	call	_EVP_PKEY_free
; Line 816
	push	0
	push	0
	push	0
	mov	esi, edi
	lea	eax, DWORD PTR _ext_ctx$4[esp+344]
	push	esi
	push	esi
	push	eax
	call	_X509V3_set_ctx
; Line 817
	push	DWORD PTR _req_conf
	lea	eax, DWORD PTR _ext_ctx$4[esp+360]
	push	eax
	call	_X509V3_set_nconf
; Line 820
	mov	edi, DWORD PTR _extensions$1$[esp+364]
	add	esp, 36					; 00000024H
	test	edi, edi
	je	SHORT $LN222@req_main
	push	esi
	push	edi
	lea	eax, DWORD PTR _ext_ctx$4[esp+336]
	push	eax
	push	DWORD PTR _req_conf
	call	_X509V3_EXT_add_nconf
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN222@req_main
; Line 823
	push	edi
	push	OFFSET ??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN517@req_main:
; Line 825
	mov	edi, DWORD PTR _x509ss$1$[esp+328]
	jmp	$LN334@req_main
$LN222@req_main:
; Line 828
	push	DWORD PTR _sigopts$1$[esp+328]
	push	DWORD PTR _digest$1$[esp+332]
	push	DWORD PTR _pkey$[esp+336]
	push	esi
	push	DWORD PTR _bio_err
	call	_do_X509_sign
	add	esp, 20					; 00000014H
; Line 829
	test	eax, eax
	jne	$LN536@req_main
; Line 830
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 831
	mov	edi, DWORD PTR _x509ss$1$[esp+332]
	add	esp, 4
	jmp	$LN334@req_main
$LN208@req_main:
; Line 838
	push	0
	push	0
	push	ebx
	push	0
	lea	eax, DWORD PTR _ext_ctx$5[esp+344]
	push	0
	push	eax
	call	_X509V3_set_ctx
; Line 839
	push	DWORD PTR _req_conf
	lea	eax, DWORD PTR _ext_ctx$5[esp+356]
	push	eax
	call	_X509V3_set_nconf
; Line 842
	mov	edi, DWORD PTR _req_exts$1$[esp+360]
	add	esp, 32					; 00000020H
	test	edi, edi
	je	SHORT $LN224@req_main
	push	ebx
	push	edi
	lea	eax, DWORD PTR _ext_ctx$5[esp+336]
	push	eax
	push	DWORD PTR _req_conf
	call	_X509V3_EXT_REQ_add_nconf
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN224@req_main
; Line 845
	push	edi
	push	OFFSET ??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 847
	jmp	$LN533@req_main
$LN224@req_main:
; Line 849
	push	DWORD PTR _sigopts$1$[esp+328]
	push	DWORD PTR _digest$1$[esp+332]
	push	DWORD PTR _pkey$[esp+336]
	push	ebx
	push	DWORD PTR _bio_err
	call	_do_X509_REQ_sign
	add	esp, 20					; 00000014H
; Line 850
	test	eax, eax
	jne	SHORT $LN536@req_main
; Line 851
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 852
	jmp	$LN533@req_main
$LN536@req_main:
	mov	edi, DWORD PTR _x509$1$[esp+328]
$LN225@req_main:
; Line 857
	mov	esi, DWORD PTR _subj$1$[esp+328]
	test	esi, esi
	je	$LN230@req_main
	test	edi, edi
	je	SHORT $LN226@req_main
; Line 858
	push	OFFSET ??_C@_0CE@GJDHAICG@Cannot?5modifiy?5certificate?5subje@
$LN555@req_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 859
	mov	edi, DWORD PTR _x509ss$1$[esp+336]
	add	esp, 8
	jmp	$LN334@req_main
$LN226@req_main:
; Line 863
	cmp	DWORD PTR _verbose$1$[esp+328], 0
	je	SHORT $LN228@req_main
; Line 864
	push	OFFSET ??_C@_0BN@CAIPGNIG@Modifying?5Request?8s?5Subject?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 865
	push	DWORD PTR _nmflag$[esp+336]
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+16]
	push	OFFSET ??_C@_0N@ICIJEIAD@old?5subject?$DN?$AA@
	push	DWORD PTR _bio_err
	call	_print_name
	add	esp, 24					; 00000018H
$LN228@req_main:
; Line 869
	push	DWORD PTR _multirdn$1$[esp+328]
	mov	eax, DWORD PTR _chtype$1$[esp+332]
	push	eax
	push	esi
	push	ebx
	call	_build_subject
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN229@req_main
; Line 870
	push	OFFSET ??_C@_0BO@BCHAKGEI@ERROR?3?5cannot?5modify?5subject?6?$AA@
; Line 872
	jmp	SHORT $LN555@req_main
$LN229@req_main:
; Line 877
	cmp	DWORD PTR _verbose$1$[esp+328], 0
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [eax+8], 1
	je	SHORT $LN230@req_main
; Line 878
	push	DWORD PTR _nmflag$[esp+328]
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+16]
	push	OFFSET ??_C@_0N@PFKCAJNN@new?5subject?$DN?$AA@
	push	DWORD PTR _bio_err
	call	_print_name
	add	esp, 16					; 00000010H
$LN230@req_main:
; Line 883
	cmp	DWORD PTR _verify$1$[esp+328], 0
	je	$LN238@req_main
	test	edi, edi
	jne	$LN238@req_main
; Line 886
	mov	eax, DWORD PTR _pkey$[esp+328]
	xor	esi, esi
	test	eax, eax
	jne	SHORT $LN233@req_main
; Line 887
	push	ebx
	call	_X509_REQ_get_pubkey
	add	esp, 4
	mov	DWORD PTR _pkey$[esp+328], eax
; Line 888
	lea	esi, DWORD PTR [edi+1]
; Line 889
	test	eax, eax
	je	$LN517@req_main
$LN233@req_main:
; Line 893
	push	eax
	push	ebx
	call	_X509_REQ_verify
	add	esp, 8
	mov	edi, eax
; Line 894
	test	esi, esi
	je	SHORT $LN234@req_main
; Line 895
	push	DWORD PTR _pkey$[esp+328]
	call	_EVP_PKEY_free
	add	esp, 4
; Line 896
	mov	DWORD PTR _pkey$[esp+328], 0
$LN234@req_main:
; Line 899
	test	edi, edi
	js	$LN517@req_main
; Line 901
	jne	SHORT $LN237@req_main
; Line 902
	push	OFFSET ??_C@_0BA@HHOHOMNK@verify?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 903
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 904
	jmp	SHORT $LN238@req_main
$LN237@req_main:
; Line 905
	push	OFFSET ??_C@_0L@OEANIBEG@verify?5OK?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN238@req_main:
; Line 908
	cmp	DWORD PTR _noout$1$[esp+328], 0
	mov	edi, DWORD PTR _pubkey$1$[esp+328]
	je	SHORT $LN239@req_main
	cmp	DWORD PTR _text$1$[esp+328], 0
	jne	SHORT $LN239@req_main
	cmp	DWORD PTR _modulus$1$[esp+328], 0
	jne	SHORT $LN239@req_main
	cmp	DWORD PTR _subject$1$[esp+328], 0
	jne	SHORT $LN239@req_main
	test	edi, edi
	jne	SHORT $LN239@req_main
$LN272@req_main:
; Line 910
	mov	edi, DWORD PTR _x509ss$1$[esp+328]
	xor	esi, esi
	jmp	$LN273@req_main
$LN239@req_main:
; Line 913
	mov	esi, DWORD PTR _outfile$1$[esp+328]
	test	esi, esi
	jne	SHORT $LN240@req_main
; Line 914
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	esi
	push	106					; 0000006aH
	push	ebp
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN244@req_main:
; Line 932
	test	edi, edi
	je	$LN245@req_main
; Line 934
	push	ebx
	call	_X509_REQ_get_pubkey
	mov	esi, eax
	add	esp, 4
; Line 935
	test	esi, esi
	jne	$LN246@req_main
; Line 936
	push	OFFSET ??_C@_0BK@GNCDDMAG@Error?5getting?5public?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 937
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	edi, DWORD PTR _x509ss$1$[esp+340]
	add	esp, 12					; 0000000cH
	jmp	$LN334@req_main
$LN240@req_main:
; Line 922
	mov	edx, DWORD PTR _keyout$1$[esp+328]
	test	edx, edx
	je	SHORT $LN242@req_main
	mov	eax, esi
$LL505@req_main:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN506@req_main
	test	cl, cl
	je	SHORT $LN507@req_main
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN506@req_main
	add	eax, 2
	add	edx, 2
	test	cl, cl
	jne	SHORT $LL505@req_main
$LN507@req_main:
	xor	eax, eax
	jmp	SHORT $LN508@req_main
$LN506@req_main:
	sbb	eax, eax
	or	eax, 1
$LN508@req_main:
	test	eax, eax
	jne	SHORT $LN242@req_main
; Line 923
	push	esi
	push	9
	jmp	SHORT $LN546@req_main
$LN242@req_main:
; Line 925
	push	esi
	push	5
$LN546@req_main:
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 926
	test	eax, eax
	jne	$LN244@req_main
; Line 927
	push	esi
	call	DWORD PTR __imp__perror
	mov	edi, DWORD PTR _x509ss$1$[esp+332]
	add	esp, 4
	jmp	$LN334@req_main
$LN246@req_main:
; Line 940
	push	esi
	push	ebp
	call	_PEM_write_bio_PUBKEY
; Line 941
	push	esi
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
$LN245@req_main:
; Line 944
	cmp	DWORD PTR _text$1$[esp+328], 0
; Line 945
	mov	edi, DWORD PTR _x509$1$[esp+328]
	je	SHORT $LN534@req_main
; Line 946
	push	DWORD PTR _reqflag$[esp+328]
	push	DWORD PTR _nmflag$[esp+332]
	test	edi, edi
	je	SHORT $LN248@req_main
	mov	esi, DWORD PTR _x509ss$1$[esp+336]
	push	esi
	push	ebp
	call	_X509_print_ex
	add	esp, 16					; 00000010H
	jmp	SHORT $LN249@req_main
$LN248@req_main:
; Line 948
	push	ebx
	push	ebp
	call	_X509_REQ_print_ex
	add	esp, 16					; 00000010H
$LN534@req_main:
	mov	esi, DWORD PTR _x509ss$1$[esp+328]
$LN249@req_main:
; Line 951
	cmp	DWORD PTR _subject$1$[esp+328], 0
	je	SHORT $LN252@req_main
; Line 953
	push	DWORD PTR _nmflag$[esp+328]
	test	edi, edi
	je	SHORT $LN251@req_main
	push	esi
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	jmp	SHORT $LN547@req_main
$LN251@req_main:
; Line 956
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+16]
$LN547@req_main:
	push	OFFSET ??_C@_08MAHPNCKH@subject?$DN?$AA@
	push	ebp
	call	_print_name
	add	esp, 16					; 00000010H
$LN252@req_main:
; Line 960
	cmp	DWORD PTR _modulus$1$[esp+328], 0
	je	$LN253@req_main
; Line 963
	test	edi, edi
	je	SHORT $LN254@req_main
; Line 964
	push	esi
	call	_X509_get_pubkey
	jmp	SHORT $LN548@req_main
$LN254@req_main:
; Line 966
	push	ebx
	call	_X509_REQ_get_pubkey
$LN548@req_main:
	mov	esi, eax
	add	esp, 4
; Line 967
	test	esi, esi
	jne	SHORT $LN256@req_main
; Line 968
	push	OFFSET ??_C@_0BF@HHKPFLJJ@Modulus?$DNunavailable?6?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	mov	edi, DWORD PTR _x509ss$1$[esp+336]
	add	esp, 8
	jmp	$LN334@req_main
$LN256@req_main:
; Line 971
	push	OFFSET ??_C@_08CHIKBNMH@Modulus?$DN?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 973
	push	esi
	call	_EVP_PKEY_base_id
	add	esp, 12					; 0000000cH
	cmp	eax, 6
	jne	SHORT $LN257@req_main
; Line 974
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+16]
	push	ebp
	call	_BN_print
	jmp	SHORT $LN549@req_main
$LN257@req_main:
; Line 977
	push	OFFSET ??_C@_0BF@JNOIECJP@Wrong?5Algorithm?5type?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
$LN549@req_main:
	add	esp, 8
; Line 978
	push	esi
	call	_EVP_PKEY_free
	add	esp, 4
; Line 979
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN253@req_main:
; Line 982
	cmp	DWORD PTR _noout$1$[esp+328], 0
	jne	$LN272@req_main
	test	edi, edi
	jne	SHORT $LN337@req_main
; Line 983
	mov	eax, DWORD PTR _outformat$1$[esp+328]
	cmp	eax, 1
	jne	SHORT $LN260@req_main
; Line 984
	push	ebx
	push	ebp
	call	_i2d_X509_REQ_bio
	jmp	SHORT $LN550@req_main
$LN260@req_main:
; Line 985
	cmp	eax, 3
	jne	SHORT $LN262@req_main
; Line 986
	cmp	DWORD PTR _newhdr$1$[esp+328], 0
; Line 987
	push	ebx
	push	ebp
	je	SHORT $LN264@req_main
	call	_PEM_write_bio_X509_REQ_NEW
	jmp	SHORT $LN550@req_main
$LN264@req_main:
; Line 989
	call	_PEM_write_bio_X509_REQ
$LN550@req_main:
	add	esp, 8
; Line 994
	test	eax, eax
	jne	$LN272@req_main
; Line 995
	push	OFFSET ??_C@_0BO@BMBGMBGL@unable?5to?5write?5X509?5request?6?$AA@
; Line 996
	jmp	$LN555@req_main
$LN262@req_main:
; Line 991
	push	OFFSET ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
; Line 992
	jmp	$LN555@req_main
$LN337@req_main:
; Line 999
	mov	esi, DWORD PTR _x509ss$1$[esp+328]
	test	esi, esi
	je	$LN272@req_main
; Line 1000
	mov	eax, DWORD PTR _outformat$1$[esp+328]
	cmp	eax, 1
	jne	SHORT $LN268@req_main
; Line 1001
	push	esi
	push	ebp
	call	_i2d_X509_bio
	jmp	SHORT $LN551@req_main
$LN268@req_main:
; Line 1002
	cmp	eax, 3
	jne	SHORT $LN262@req_main
; Line 1003
	push	esi
	push	ebp
	call	_PEM_write_bio_X509
$LN551@req_main:
	add	esp, 8
; Line 1008
	test	eax, eax
	jne	$LN272@req_main
; Line 1009
	push	OFFSET ??_C@_0CC@GEADPADN@unable?5to?5write?5X509?5certificate@
; Line 1010
	jmp	$LN555@req_main
$LN198@req_main:
; Line 749
	push	OFFSET ??_C@_0CN@JGBMBJMK@bad?5input?5format?5specified?5for?5X@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$LN533@req_main
_req_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_keygen_ctx
_TEXT	SEGMENT
_tmpeng$1 = -4						; size = 4
_tmpeng$2 = -4						; size = 4
_err$ = 8						; size = 4
_x$1$ = 12						; size = 4
_p$1$ = 12						; size = 4
_anam$3 = 12						; size = 4
_gstr$ = 12						; size = 4
_pkey_type$ = 16					; size = 4
_pkeylen$ = 20						; size = 4
_palgnam$ = 24						; size = 4
_keygen_engine$ = 28					; size = 4
_set_keygen_ctx PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1519
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 1526
	mov	ebx, DWORD PTR _gstr$[esp+4]
	push	ebp
	push	esi
	xor	ebp, ebp
	push	edi
	test	ebx, ebx
	jne	SHORT $LN2@set_keygen
; Line 1527
	mov	edi, DWORD PTR _pkey_type$[esp+16]
	mov	DWORD PTR [edi], 6
$LN14@set_keygen:
; Line 1528
	mov	eax, DWORD PTR _pkeylen$[esp+16]
	mov	esi, DWORD PTR [eax]
	jmp	$LN24@set_keygen
$LN2@set_keygen:
; Line 1529
	mov	al, BYTE PTR [ebx]
	cmp	al, 48					; 00000030H
	jl	SHORT $LN4@set_keygen
	cmp	al, 57					; 00000039H
	jg	SHORT $LN4@set_keygen
; Line 1530
	mov	edi, DWORD PTR _pkey_type$[esp+16]
; Line 1531
	push	ebx
	mov	DWORD PTR [edi], 6
$LN39@set_keygen:
	call	DWORD PTR __imp__atol
	mov	esi, eax
	add	esp, 4
; Line 1532
	mov	eax, DWORD PTR _pkeylen$[esp+16]
	mov	DWORD PTR [eax], esi
	jmp	$LN24@set_keygen
$LN4@set_keygen:
; Line 1533
	push	6
	push	OFFSET ??_C@_06CIHNIJJG@param?3?$AA@
	push	ebx
	call	DWORD PTR __imp__strncmp
	mov	edi, DWORD PTR _pkey_type$[esp+28]
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@set_keygen
; Line 1534
	add	ebx, 6
	jmp	$LN16@set_keygen
$LN6@set_keygen:
; Line 1536
	push	58					; 0000003aH
	push	ebx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	mov	DWORD PTR _p$1$[esp+16], eax
; Line 1541
	test	eax, eax
	je	SHORT $LN8@set_keygen
; Line 1542
	mov	esi, eax
	sub	esi, ebx
	jmp	SHORT $LN9@set_keygen
$LN8@set_keygen:
; Line 1544
	mov	esi, ebx
	lea	ecx, DWORD PTR [esi+1]
$LL35@set_keygen:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL35@set_keygen
	sub	esi, ecx
$LN9@set_keygen:
; Line 1550
	push	esi
	lea	eax, DWORD PTR _tmpeng$2[esp+24]
	push	ebx
	push	eax
	call	_EVP_PKEY_asn1_find_str
	add	esp, 12					; 0000000cH
; Line 1552
	test	eax, eax
	jne	SHORT $LN10@set_keygen
; Line 1553
	push	ebx
	push	esi
	push	OFFSET ??_C@_0BI@KBEAOALA@Unknown?5algorithm?5?$CF?4?$CKs?6?$AA@
	push	DWORD PTR _err$[esp+28]
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 1554
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
$LN10@set_keygen:
; Line 1557
	push	eax
	push	0
	push	0
	push	0
	push	edi
	push	0
	call	_EVP_PKEY_asn1_get0_info
; Line 1559
	mov	eax, DWORD PTR _tmpeng$2[esp+44]
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN11@set_keygen
; Line 1560
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN11@set_keygen:
; Line 1562
	cmp	DWORD PTR [edi], 6
; Line 1563
	mov	ebx, DWORD PTR _p$1$[esp+16]
	jne	SHORT $LN12@set_keygen
	test	ebx, ebx
	je	$LN14@set_keygen
; Line 1564
	lea	eax, DWORD PTR [ebx+1]
	push	eax
; Line 1566
	jmp	$LN39@set_keygen
$LN12@set_keygen:
; Line 1568
	test	ebx, ebx
	je	$LN38@set_keygen
; Line 1569
	inc	ebx
$LN16@set_keygen:
; Line 1572
	test	ebx, ebx
	je	$LN38@set_keygen
; Line 1573
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	ebx
	call	_BIO_new_file
	mov	esi, eax
	add	esp, 8
; Line 1574
	test	esi, esi
	jne	SHORT $LN18@set_keygen
; Line 1575
	push	ebx
	push	OFFSET ??_C@_0BO@HEFFFKLO@Can?8t?5open?5parameter?5file?5?$CFs?6?$AA@
	push	DWORD PTR _err$[esp+24]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1576
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
$LN18@set_keygen:
; Line 1578
	push	0
	push	esi
	call	_PEM_read_bio_Parameters
	mov	ebp, eax
	add	esp, 8
; Line 1580
	test	ebp, ebp
	jne	SHORT $LN20@set_keygen
; Line 1582
	push	eax
	push	eax
	push	1
	push	esi
	call	_BIO_ctrl
; Line 1583
	push	ebp
	push	ebp
	push	ebp
	push	esi
	call	_PEM_read_bio_X509
	add	esp, 32					; 00000020H
	mov	DWORD PTR _x$1$[esp+16], eax
; Line 1584
	test	eax, eax
	je	SHORT $LN20@set_keygen
; Line 1585
	push	eax
	call	_X509_get_pubkey
; Line 1586
	push	DWORD PTR _x$1$[esp+20]
	mov	ebp, eax
	call	_X509_free
	add	esp, 8
$LN20@set_keygen:
; Line 1590
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 1592
	test	ebp, ebp
	jne	SHORT $LN21@set_keygen
; Line 1593
	push	ebx
	push	OFFSET ??_C@_0CB@EHHPGCBO@Error?5reading?5parameter?5file?5?$CFs?6@
	push	DWORD PTR _err$[esp+24]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1594
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
$LN21@set_keygen:
; Line 1596
	cmp	DWORD PTR [edi], -1
; Line 1597
	push	ebp
	jne	SHORT $LN22@set_keygen
	call	_EVP_PKEY_id
	add	esp, 4
	mov	DWORD PTR [edi], eax
$LN38@set_keygen:
	or	esi, -1
$LN24@set_keygen:
; Line 1605
	mov	ebx, DWORD PTR _palgnam$[esp+16]
	test	ebx, ebx
	je	$LN27@set_keygen
; Line 1609
	push	DWORD PTR [edi]
	lea	eax, DWORD PTR _tmpeng$1[esp+24]
	push	eax
	call	_EVP_PKEY_asn1_find
	add	esp, 8
; Line 1610
	test	eax, eax
	jne	SHORT $LN26@set_keygen
; Line 1611
	push	OFFSET ??_C@_0CK@PFJPPKAI@Internal?5error?3?5can?8t?5find?5key?5a@
	push	DWORD PTR _err$[esp+20]
	call	_BIO_puts
	add	esp, 8
; Line 1612
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
$LN22@set_keygen:
; Line 1598
	call	_EVP_PKEY_base_id
	add	esp, 4
	cmp	DWORD PTR [edi], eax
	je	SHORT $LN38@set_keygen
; Line 1599
	push	OFFSET ??_C@_0CE@PONHIOIP@Key?5Type?5does?5not?5match?5paramete@
	push	DWORD PTR _err$[esp+20]
	call	_BIO_printf
; Line 1600
	push	ebp
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
; Line 1601
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
$LN26@set_keygen:
; Line 1614
	push	eax
	lea	eax, DWORD PTR _anam$3[esp+20]
	push	eax
	push	0
	push	0
	push	0
	push	0
	call	_EVP_PKEY_asn1_get0_info
; Line 1615
	push	DWORD PTR _anam$3[esp+40]
	call	_BUF_strdup
	mov	DWORD PTR [ebx], eax
	add	esp, 28					; 0000001cH
; Line 1617
	mov	eax, DWORD PTR _tmpeng$1[esp+20]
	test	eax, eax
	je	SHORT $LN27@set_keygen
; Line 1618
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN27@set_keygen:
; Line 1623
	push	DWORD PTR _keygen_engine$[esp+16]
	test	ebp, ebp
	je	SHORT $LN28@set_keygen
	push	ebp
	call	_EVP_PKEY_CTX_new
; Line 1624
	push	ebp
	mov	ebx, eax
	call	_EVP_PKEY_bits
	mov	ecx, DWORD PTR _pkeylen$[esp+28]
; Line 1625
	push	ebp
	mov	DWORD PTR [ecx], eax
	call	_EVP_PKEY_free
	add	esp, 16					; 00000010H
; Line 1626
	jmp	SHORT $LN29@set_keygen
$LN28@set_keygen:
; Line 1627
	push	DWORD PTR [edi]
	call	_EVP_PKEY_CTX_new_id
	add	esp, 8
	mov	ebx, eax
$LN29@set_keygen:
; Line 1629
	test	ebx, ebx
	jne	SHORT $LN30@set_keygen
; Line 1630
	mov	esi, DWORD PTR _err$[esp+16]
	push	OFFSET ??_C@_0CB@JOGMMGKM@Error?5allocating?5keygen?5context?6@
	push	esi
	call	_BIO_puts
; Line 1631
	push	esi
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 1632
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
$LN30@set_keygen:
; Line 1635
	push	ebx
	call	_EVP_PKEY_keygen_init
	add	esp, 4
	test	eax, eax
	jg	SHORT $LN31@set_keygen
; Line 1636
	mov	esi, DWORD PTR _err$[esp+16]
	push	OFFSET ??_C@_0CD@NAAIIFFH@Error?5initializing?5keygen?5contex@
	push	esi
	call	_BIO_puts
; Line 1637
	push	esi
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 1638
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
$LN31@set_keygen:
; Line 1641
	cmp	DWORD PTR [edi], 6
	jne	SHORT $LN33@set_keygen
	cmp	esi, -1
	je	SHORT $LN33@set_keygen
; Line 1642
	push	0
	push	esi
	push	4099					; 00001003H
	push	4
	push	6
	push	ebx
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN33@set_keygen
; Line 1643
	mov	esi, DWORD PTR _err$[esp+16]
	push	OFFSET ??_C@_0BL@NALFDFOL@Error?5setting?5RSA?5keysize?6?$AA@
	push	esi
	call	_BIO_puts
; Line 1644
	push	esi
	call	_ERR_print_errors
; Line 1645
	push	ebx
	call	_EVP_PKEY_CTX_free
	add	esp, 16					; 00000010H
; Line 1646
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
$LN33@set_keygen:
	pop	edi
	pop	esi
	pop	ebp
; Line 1651
	mov	eax, ebx
	pop	ebx
; Line 1652
	pop	ecx
	ret	0
_set_keygen_ctx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _check_end
_TEXT	SEGMENT
_str$ = 8						; size = 4
_end$ = 12						; size = 4
_check_end PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1508
	mov	edx, DWORD PTR _end$[esp-4]
	push	esi
	mov	esi, edx
	lea	ecx, DWORD PTR [esi+1]
	npad	6
$LL4@check_end:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL4@check_end
; Line 1509
	mov	eax, DWORD PTR _str$[esp]
	sub	esi, ecx
	push	ebx
	lea	ebx, DWORD PTR [eax+1]
$LL5@check_end:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL5@check_end
	sub	eax, ebx
	pop	ebx
; Line 1510
	cmp	esi, eax
	jle	SHORT $LN2@check_end
; Line 1511
	mov	eax, 1
	pop	esi
; Line 1514
	ret	0
$LN2@check_end:
; Line 1513
	sub	eax, esi
	add	eax, DWORD PTR _str$[esp]
	npad	4
$LL6@check_end:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN7@check_end
	test	cl, cl
	je	SHORT $LN8@check_end
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN7@check_end
	add	eax, 2
	add	edx, 2
	test	cl, cl
	jne	SHORT $LL6@check_end
$LN8@check_end:
	xor	eax, eax
	pop	esi
; Line 1514
	ret	0
$LN7@check_end:
; Line 1513
	sbb	eax, eax
	or	eax, 1
	pop	esi
; Line 1514
	ret	0
_check_end ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _req_check_len
_TEXT	SEGMENT
_len$ = 8						; size = 4
_n_min$ = 12						; size = 4
_n_max$ = 16						; size = 4
_req_check_len PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1488
	mov	eax, DWORD PTR _n_min$[esp-4]
	mov	ecx, DWORD PTR _len$[esp-4]
	test	eax, eax
	jle	SHORT $LN2@req_check_
	cmp	ecx, eax
	jge	SHORT $LN2@req_check_
; Line 1489
	push	eax
	push	OFFSET ??_C@_0DM@OAAMIENP@string?5is?5too?5short?0?5it?5needs?5to@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1492
	xor	eax, eax
; Line 1501
	ret	0
$LN2@req_check_:
; Line 1494
	mov	eax, DWORD PTR _n_max$[esp-4]
	test	eax, eax
	js	SHORT $LN3@req_check_
	cmp	ecx, eax
	jle	SHORT $LN3@req_check_
; Line 1495
	push	eax
	push	OFFSET ??_C@_0DN@BNGDLEBM@string?5is?5too?5long?0?5it?5needs?5to?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	xor	eax, eax
; Line 1501
	ret	0
$LN3@req_check_:
; Line 1500
	mov	eax, 1
; Line 1501
	ret	0
_req_check_len ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _genpkey_cb
_TEXT	SEGMENT
_c$ = -1						; size = 1
_ctx$ = 8						; size = 4
_genpkey_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1655
	mov	eax, 4
	call	__chkstk
	push	edi
; Line 1657
	push	DWORD PTR _ctx$[esp+4]
	mov	BYTE PTR _c$[esp+12], 42		; 0000002aH
	call	_EVP_PKEY_CTX_get_app_data
; Line 1659
	push	0
	push	DWORD PTR _ctx$[esp+12]
	mov	edi, eax
	call	_EVP_PKEY_CTX_get_keygen_info
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 1660
	test	ecx, ecx
	jne	SHORT $LN2@genpkey_cb
; Line 1661
	mov	BYTE PTR _c$[esp+8], 46			; 0000002eH
; Line 1662
	jmp	SHORT $LN5@genpkey_cb
$LN2@genpkey_cb:
	cmp	ecx, 1
	jne	SHORT $LN3@genpkey_cb
; Line 1663
	mov	BYTE PTR _c$[esp+8], 43			; 0000002bH
; Line 1664
	jmp	SHORT $LN5@genpkey_cb
$LN3@genpkey_cb:
	cmp	ecx, 2
	jne	SHORT $LN4@genpkey_cb
; Line 1665
	mov	BYTE PTR _c$[esp+8], 42			; 0000002aH
; Line 1666
	jmp	SHORT $LN5@genpkey_cb
$LN4@genpkey_cb:
	movzx	eax, BYTE PTR _c$[esp+8]
	cmp	ecx, 3
	mov	edx, 10					; 0000000aH
	cmove	eax, edx
	mov	BYTE PTR _c$[esp+8], al
$LN5@genpkey_cb:
; Line 1668
	push	1
	lea	eax, DWORD PTR _c$[esp+12]
	push	eax
	push	edi
	call	_BIO_write
; Line 1669
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
	add	esp, 28					; 0000001cH
; Line 1673
	mov	eax, 1
	pop	edi
; Line 1674
	pop	ecx
	ret	0
_genpkey_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _add_DN_object
_TEXT	SEGMENT
_text$GSCopy$1$ = -1036					; size = 4
_n$GSCopy$1$ = -1032					; size = 4
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_n$ = 8							; size = 4
_text$ = 12						; size = 4
_def$ = 16						; size = 4
_value$ = 20						; size = 4
_nid$ = 24						; size = 4
_n_min$ = 28						; size = 4
_n_max$ = 32						; size = 4
_chtype$ = 36						; size = 4
_mval$ = 40						; size = 4
_add_DN_object PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1368
	mov	eax, 1036				; 0000040cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1036], eax
	mov	eax, DWORD PTR _n$[esp+1032]
	mov	ecx, DWORD PTR _text$[esp+1032]
	push	ebx
; Line 1369
	mov	ebx, DWORD PTR _n_max$[esp+1036]
	push	ebp
	mov	ebp, DWORD PTR _n_min$[esp+1040]
	push	esi
	mov	esi, DWORD PTR _def$[esp+1044]
	push	edi
	mov	edi, DWORD PTR _value$[esp+1048]
	mov	DWORD PTR _n$GSCopy$1$[esp+1052], eax
	mov	eax, DWORD PTR _batch
	mov	DWORD PTR _text$GSCopy$1$[esp+1052], ecx
$start$48:
; Line 1372
	test	eax, eax
	jne	SHORT $LN2@add_DN_obj
; Line 1373
	push	esi
	push	ecx
	push	OFFSET ??_C@_08GLNNLHPK@?$CFs?5?$FL?$CFs?$FN?3?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN2@add_DN_obj:
; Line 1374
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 1375
	test	edi, edi
	je	SHORT $LN3@add_DN_obj
; Line 1376
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buf$[esp+1056]
	push	edi
	push	eax
	call	_BUF_strlcpy
; Line 1377
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buf$[esp+1068]
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	eax
	call	_BUF_strlcat
; Line 1378
	push	edi
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 36					; 00000024H
; Line 1379
	jmp	SHORT $LN6@add_DN_obj
$LN3@add_DN_obj:
; Line 1381
	cmp	DWORD PTR _batch, 0
	mov	BYTE PTR _buf$[esp+1052], 0
	jne	SHORT $LN5@add_DN_obj
; Line 1382
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1060]
	push	1024					; 00000400H
	push	eax
	call	DWORD PTR __imp__fgets
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN32@add_DN_obj
$LN6@add_DN_obj:
; Line 1390
	mov	al, BYTE PTR _buf$[esp+1052]
	test	al, al
	je	$LN32@add_DN_obj
; Line 1392
	cmp	al, 10					; 0000000aH
	je	SHORT $LN41@add_DN_obj
; Line 1397
	cmp	al, 46					; 0000002eH
	jne	SHORT $LN14@add_DN_obj
	cmp	BYTE PTR _buf$[esp+1053], 10		; 0000000aH
	jne	SHORT $LN14@add_DN_obj
$LN34@add_DN_obj:
; Line 1394
	mov	eax, 1
$LN1@add_DN_obj:
; Line 1421
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1052]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1036				; 0000040cH
	ret	0
$LN5@add_DN_obj:
; Line 1385
	mov	WORD PTR _buf$[esp+1052], 10		; 0000000aH
$LN41@add_DN_obj:
; Line 1393
	test	esi, esi
	je	SHORT $LN34@add_DN_obj
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN34@add_DN_obj
; Line 1395
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buf$[esp+1056]
	push	esi
	push	eax
	call	_BUF_strlcpy
; Line 1396
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buf$[esp+1068]
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	eax
	call	_BUF_strlcat
	add	esp, 24					; 00000018H
$LN14@add_DN_obj:
; Line 1400
	lea	ecx, DWORD PTR _buf$[esp+1052]
	lea	edx, DWORD PTR [ecx+1]
$LL43@add_DN_obj:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL43@add_DN_obj
	sub	ecx, edx
; Line 1401
	cmp	BYTE PTR _buf$[esp+ecx+1051], 10	; 0000000aH
	jne	$LN36@add_DN_obj
; Line 1405
	dec	ecx
	cmp	ecx, 1024				; 00000400H
	jae	$LN46@add_DN_obj
	mov	BYTE PTR _buf$[esp+ecx+1052], al
; Line 1488
	test	ebp, ebp
	jle	SHORT $LN28@add_DN_obj
	cmp	ecx, ebp
	jge	SHORT $LN28@add_DN_obj
; Line 1489
	push	ebp
	push	OFFSET ??_C@_0DM@OAAMIENP@string?5is?5too?5short?0?5it?5needs?5to@
; Line 1492
	jmp	SHORT $LN45@add_DN_obj
$LN28@add_DN_obj:
; Line 1494
	test	ebx, ebx
	js	SHORT $LN16@add_DN_obj
	cmp	ecx, ebx
	jle	SHORT $LN16@add_DN_obj
; Line 1495
	push	ebx
	push	OFFSET ??_C@_0DN@BNGDLEBM@string?5is?5too?5long?0?5it?5needs?5to?5@
$LN45@add_DN_obj:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1410
	mov	eax, DWORD PTR _batch
; Line 1495
	add	esp, 12					; 0000000cH
; Line 1410
	test	eax, eax
	jne	SHORT $LN32@add_DN_obj
	test	edi, edi
	jne	SHORT $LN32@add_DN_obj
; Line 1412
	mov	ecx, DWORD PTR _text$GSCopy$1$[esp+1052]
	jmp	$start$48
$LN16@add_DN_obj:
; Line 1415
	push	DWORD PTR _mval$[esp+1048]
	lea	eax, DWORD PTR _buf$[esp+1056]
	push	-1
	push	-1
	push	eax
	push	DWORD PTR _chtype$[esp+1064]
	push	DWORD PTR _nid$[esp+1068]
	push	DWORD PTR _n$GSCopy$1$[esp+1076]
	call	_X509_NAME_add_entry_by_NID
	add	esp, 28					; 0000001cH
	mov	ecx, 1
	test	eax, eax
	mov	eax, 0
$err$49:
	cmovne	eax, ecx
; Line 1420
	jmp	$LN1@add_DN_obj
$LN36@add_DN_obj:
; Line 1402
	push	OFFSET ??_C@_0BB@ECEPLLPI@weird?5input?5?3?9?$CI?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN32@add_DN_obj:
; Line 1403
	xor	eax, eax
	jmp	$LN1@add_DN_obj
$LN46@add_DN_obj:
; Line 1405
	call	___report_rangecheckfailure
$LN47@add_DN_obj:
$LN44@add_DN_obj:
	int	3
_add_DN_object ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _add_attribute_object
_TEXT	SEGMENT
_req$ = 8						; size = 4
_text$ = 12						; size = 4
_def$ = 16						; size = 4
_value$ = 20						; size = 4
_nid$ = 24						; size = 4
_n_min$ = 28						; size = 4
_n_max$ = 32						; size = 4
_chtype$ = 36						; size = 4
_add_attribute_object PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1426
	mov	eax, DWORD PTR _batch
	push	ebx
	mov	ebx, DWORD PTR _n_max$[esp]
	push	ebp
	mov	ebp, DWORD PTR _n_min$[esp+4]
	push	esi
	mov	esi, DWORD PTR _def$[esp+8]
	push	edi
	mov	edi, DWORD PTR _value$[esp+12]
	npad	7
$start$49:
; Line 1431
	test	eax, eax
	jne	SHORT $LN2@add_attrib
; Line 1432
	push	esi
	push	DWORD PTR _text$[esp+16]
	push	OFFSET ??_C@_08GLNNLHPK@?$CFs?5?$FL?$CFs?$FN?3?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN2@add_attrib:
; Line 1433
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 1434
	test	edi, edi
	je	SHORT $LN3@add_attrib
; Line 1435
	push	1024					; 00000400H
	push	edi
	push	OFFSET ?buf@?1??add_attribute_object@@9@9
	call	_BUF_strlcpy
; Line 1436
	push	1024					; 00000400H
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	OFFSET ?buf@?1??add_attribute_object@@9@9
	call	_BUF_strlcat
; Line 1437
	push	edi
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 36					; 00000024H
; Line 1438
	jmp	SHORT $LN6@add_attrib
$LN3@add_attrib:
; Line 1440
	cmp	DWORD PTR _batch, 0
	mov	BYTE PTR ?buf@?1??add_attribute_object@@9@9, 0
	jne	SHORT $LN5@add_attrib
; Line 1441
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	1024					; 00000400H
	push	OFFSET ?buf@?1??add_attribute_object@@9@9
	call	DWORD PTR __imp__fgets
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN46@add_attrib
$LN6@add_attrib:
; Line 1449
	mov	al, BYTE PTR ?buf@?1??add_attribute_object@@9@9
	test	al, al
	je	$LN46@add_attrib
; Line 1451
	cmp	al, 10					; 0000000aH
	je	SHORT $LN41@add_attrib
; Line 1456
	cmp	al, 46					; 0000002eH
	jne	SHORT $LN14@add_attrib
	cmp	BYTE PTR ?buf@?1??add_attribute_object@@9@9+1, 10 ; 0000000aH
	jne	SHORT $LN14@add_attrib
$LN34@add_attrib:
	pop	edi
	pop	esi
	pop	ebp
; Line 1453
	mov	eax, 1
	pop	ebx
; Line 1484
	ret	0
$LN5@add_attrib:
; Line 1444
	mov	WORD PTR ?buf@?1??add_attribute_object@@9@9, 10 ; 0000000aH
$LN41@add_attrib:
; Line 1452
	test	esi, esi
	je	SHORT $LN34@add_attrib
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN34@add_attrib
; Line 1454
	push	1024					; 00000400H
	push	esi
	push	OFFSET ?buf@?1??add_attribute_object@@9@9
	call	_BUF_strlcpy
; Line 1455
	push	1024					; 00000400H
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	OFFSET ?buf@?1??add_attribute_object@@9@9
	call	_BUF_strlcat
	add	esp, 24					; 00000018H
$LN14@add_attrib:
; Line 1459
	mov	ecx, OFFSET ?buf@?1??add_attribute_object@@9@9
	lea	edx, DWORD PTR [ecx+1]
	npad	5
$LL43@add_attrib:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL43@add_attrib
	sub	ecx, edx
; Line 1460
	cmp	BYTE PTR ?buf@?1??add_attribute_object@@9@9[ecx-1], 10 ; 0000000aH
	jne	$LN36@add_attrib
; Line 1464
	dec	ecx
	cmp	ecx, 1024				; 00000400H
	jae	$LN47@add_attrib
	mov	BYTE PTR ?buf@?1??add_attribute_object@@9@9[ecx], al
; Line 1488
	test	ebp, ebp
	jle	SHORT $LN28@add_attrib
	cmp	ecx, ebp
	jge	SHORT $LN28@add_attrib
; Line 1489
	push	ebp
	push	OFFSET ??_C@_0DM@OAAMIENP@string?5is?5too?5short?0?5it?5needs?5to@
; Line 1492
	jmp	SHORT $LN45@add_attrib
$LN28@add_attrib:
; Line 1494
	test	ebx, ebx
	js	SHORT $LN16@add_attrib
	cmp	ecx, ebx
	jle	SHORT $LN16@add_attrib
; Line 1495
	push	ebx
	push	OFFSET ??_C@_0DN@BNGDLEBM@string?5is?5too?5long?0?5it?5needs?5to?5@
$LN45@add_attrib:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1469
	mov	eax, DWORD PTR _batch
; Line 1495
	add	esp, 12					; 0000000cH
; Line 1469
	test	eax, eax
	jne	SHORT $LN46@add_attrib
	test	edi, edi
	je	$start$49
$err$50:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1484
	ret	0
$LN16@add_attrib:
; Line 1474
	push	-1
	push	OFFSET ?buf@?1??add_attribute_object@@9@9
	push	DWORD PTR _chtype$[esp+20]
	push	DWORD PTR _nid$[esp+24]
	push	DWORD PTR _req$[esp+28]
	call	_X509_REQ_add1_attr_by_NID
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN34@add_attrib
; Line 1476
	push	OFFSET ??_C@_0BI@FKDLMMKK@Error?5adding?5attribute?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1477
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
$err_1$51:
; Line 1462
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1484
	ret	0
$LN36@add_attrib:
; Line 1461
	push	OFFSET ??_C@_0BB@ECEPLLPI@weird?5input?5?3?9?$CI?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN46@add_attrib:
$err_2$52:
	pop	edi
	pop	esi
	pop	ebp
; Line 1462
	xor	eax, eax
	pop	ebx
; Line 1484
	ret	0
$LN47@add_attrib:
; Line 1464
	call	___report_rangecheckfailure
$LN48@add_attrib:
$LN44@add_attrib:
	int	3
_add_attribute_object ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _auto_info
_TEXT	SEGMENT
_subj$1$ = -4						; size = 4
_req$ = 8						; size = 4
_dn_sk$ = 12						; size = 4
_attr_sk$ = 16						; size = 4
_attribs$ = 20						; size = 4
_chtype$ = 24						; size = 4
_auto_info PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1304
	mov	eax, 4
	call	__chkstk
; Line 1311
	mov	eax, DWORD PTR _req$[esp]
	push	ebx
; Line 1313
	mov	ebx, DWORD PTR _dn_sk$[esp+4]
	push	ebp
	mov	eax, DWORD PTR [eax]
	push	esi
	push	edi
	push	ebx
	mov	eax, DWORD PTR [eax+16]
	xor	edi, edi
	mov	DWORD PTR _subj$1$[esp+24], eax
	call	_sk_num
	mov	ebp, DWORD PTR _chtype$[esp+20]
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@auto_info
$LL4@auto_info:
; Line 1315
	push	edi
	push	ebx
	call	_sk_value
	mov	ebp, eax
	add	esp, 8
; Line 1317
	mov	esi, DWORD PTR [ebp+4]
; Line 1321
	mov	edx, esi
	mov	cl, BYTE PTR [edx]
	test	cl, cl
	je	SHORT $LN13@auto_info
	npad	7
$LL7@auto_info:
; Line 1323
	cmp	cl, 58					; 0000003aH
	je	SHORT $LN24@auto_info
	cmp	cl, 44					; 0000002cH
	je	SHORT $LN24@auto_info
	cmp	cl, 46					; 0000002eH
	je	SHORT $LN24@auto_info
; Line 1321
	mov	cl, BYTE PTR [edx+1]
	inc	edx
	test	cl, cl
	jne	SHORT $LL7@auto_info
; Line 1357
	jmp	SHORT $LN13@auto_info
$LN24@auto_info:
; Line 1328
	inc	edx
; Line 1329
	cmp	BYTE PTR [edx], 0
	cmovne	esi, edx
$LN13@auto_info:
; Line 1334
	xor	eax, eax
	cmp	BYTE PTR [edx], 43			; 0000002bH
	setne	al
	dec	eax
; Line 1343
	push	eax
	push	-1
	push	-1
	push	DWORD PTR [ebp+8]
	mov	ebp, DWORD PTR _chtype$[esp+32]
	push	ebp
	push	esi
	push	DWORD PTR _subj$1$[esp+44]
	call	_X509_NAME_add_entry_by_txt
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $LN25@auto_info
; Line 1313
	push	ebx
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL4@auto_info
$LN3@auto_info:
; Line 1350
	push	DWORD PTR _subj$1$[esp+20]
	call	_X509_NAME_entry_count
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN17@auto_info
; Line 1351
	push	OFFSET ??_C@_0CM@HMOKPNGJ@error?0?5no?5objects?5specified?5in?5c@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN25@auto_info:
; Line 1352
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1363
	pop	ecx
	ret	0
$LN17@auto_info:
; Line 1354
	cmp	DWORD PTR _attribs$[esp+16], 0
	je	SHORT $LN9@auto_info
; Line 1355
	mov	edi, DWORD PTR _attr_sk$[esp+16]
	xor	esi, esi
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN9@auto_info
	npad	6
$LL10@auto_info:
; Line 1356
	push	esi
	push	edi
	call	_sk_value
; Line 1357
	push	-1
	push	DWORD PTR [eax+8]
	push	ebp
	push	DWORD PTR [eax+4]
	push	DWORD PTR _req$[esp+40]
	call	_X509_REQ_add1_attr_by_txt
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $LN25@auto_info
; Line 1355
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL10@auto_info
$LN9@auto_info:
	pop	edi
	pop	esi
	pop	ebp
; Line 1362
	mov	eax, 1
	pop	ebx
; Line 1363
	pop	ecx
	ret	0
_auto_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _prompt_info
_TEXT	SEGMENT
_n_max$ = -144						; size = 4
_n_min$ = -140						; size = 4
_dn_sect$GSCopy$1$ = -136				; size = 4
_dn_sk$GSCopy$1$ = -132					; size = 4
_v$2$ = -132						; size = 4
_nid$2$ = -128						; size = 4
_subj$1$ = -128						; size = 4
_v$1$ = -124						; size = 4
_attr_sect$GSCopy$1$ = -120				; size = 4
_i$1$ = -116						; size = 4
_attr_sk$GSCopy$1$ = -112				; size = 4
_req$GSCopy$1$ = -108					; size = 4
_buf$ = -104						; size = 100
__$ArrayPad$ = -4					; size = 4
_req$ = 8						; size = 4
_dn_sk$ = 12						; size = 4
_dn_sect$ = 16						; size = 4
_attr_sk$ = 20						; size = 4
_attr_sect$ = 24					; size = 4
_attribs$ = 28						; size = 4
_chtype$ = 32						; size = 4
_prompt_info PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1137
	mov	eax, 144				; 00000090H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+144], eax
; Line 1149
	cmp	DWORD PTR _batch, 0
	mov	eax, DWORD PTR _dn_sect$[esp+140]
	mov	ecx, DWORD PTR _req$[esp+140]
	mov	DWORD PTR _dn_sect$GSCopy$1$[esp+144], eax
	mov	eax, DWORD PTR _attr_sk$[esp+140]
	mov	DWORD PTR _attr_sk$GSCopy$1$[esp+144], eax
	mov	eax, DWORD PTR _attr_sect$[esp+140]
	mov	DWORD PTR _attr_sect$GSCopy$1$[esp+144], eax
	mov	eax, DWORD PTR [ecx]
	push	ebp
	mov	ebp, DWORD PTR _dn_sk$[esp+144]
	mov	DWORD PTR _req$GSCopy$1$[esp+148], ecx
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR _dn_sk$GSCopy$1$[esp+148], ebp
	mov	DWORD PTR _subj$1$[esp+148], eax
	jne	SHORT $LN11@prompt_inf
; Line 1150
	push	OFFSET ??_C@_0EK@HLOABFDI@You?5are?5about?5to?5be?5asked?5to?5ent@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1152
	push	OFFSET ??_C@_0CA@NLCOFKOK@into?5your?5certificate?5request?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1153
	push	OFFSET ??_C@_0EN@MLJBJLJF@What?5you?5are?5about?5to?5enter?5is?5w@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1155
	push	OFFSET ??_C@_0DL@EDIBKDAI@There?5are?5quite?5a?5few?5fields?5but@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1157
	push	OFFSET ??_C@_0DA@HANEDLAF@For?5some?5fields?5there?5will?5be?5a?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1159
	push	OFFSET ??_C@_0DB@OHAINGEA@If?5you?5enter?5?8?4?8?0?5the?5field?5will@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1161
	push	OFFSET ??_C@_06NGLIMPFK@?9?9?9?9?9?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 56					; 00000038H
$LN11@prompt_inf:
; Line 1164
	push	ebp
	call	_sk_num
	add	esp, 4
	test	eax, eax
	je	$LN12@prompt_inf
; Line 1165
	push	ebx
	push	esi
	or	ebx, -1
	push	edi
	npad	4
$start$114:
; Line 1167
	inc	ebx
; Line 1168
	push	ebp
	mov	DWORD PTR _i$1$[esp+164], ebx
	call	_sk_num
	add	esp, 4
	cmp	eax, ebx
	jle	$LN62@prompt_inf
; Line 1171
	push	ebx
	push	ebp
	call	_sk_value
	mov	edi, eax
	add	esp, 8
	mov	DWORD PTR _v$1$[esp+160], edi
; Line 1173
	mov	esi, DWORD PTR [edi+4]
; Line 1509
	mov	edx, esi
	lea	ecx, DWORD PTR [edx+1]
	npad	2
$LL87@prompt_inf:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL87@prompt_inf
	sub	edx, ecx
; Line 1510
	cmp	edx, 4
	jl	SHORT $LN81@prompt_inf
; Line 1513
	lea	eax, DWORD PTR [esi-4]
	mov	ecx, OFFSET ??_C@_04PGKKMJKA@_min?$AA@
	add	eax, edx
$LL88@prompt_inf:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN89@prompt_inf
	test	dl, dl
	je	SHORT $LN90@prompt_inf
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN89@prompt_inf
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL88@prompt_inf
$LN90@prompt_inf:
	xor	eax, eax
	jmp	SHORT $LN91@prompt_inf
$LN89@prompt_inf:
	sbb	eax, eax
	or	eax, 1
$LN91@prompt_inf:
; Line 1175
	test	eax, eax
	je	SHORT $start$114
$LN81@prompt_inf:
; Line 1509
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL92@prompt_inf:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL92@prompt_inf
	sub	ecx, edx
; Line 1510
	cmp	ecx, 4
	jl	SHORT $LN82@prompt_inf
; Line 1513
	lea	eax, DWORD PTR [esi-4]
	mov	edx, OFFSET ??_C@_04OECBCNMP@_max?$AA@
	add	eax, ecx
	npad	2
$LL93@prompt_inf:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN94@prompt_inf
	test	cl, cl
	je	SHORT $LN95@prompt_inf
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN94@prompt_inf
	add	eax, 2
	add	edx, 2
	test	cl, cl
	jne	SHORT $LL93@prompt_inf
$LN95@prompt_inf:
	xor	eax, eax
	jmp	SHORT $LN96@prompt_inf
$LN94@prompt_inf:
	sbb	eax, eax
	or	eax, 1
$LN96@prompt_inf:
; Line 1175
	test	eax, eax
	je	$start$114
$LN82@prompt_inf:
; Line 1509
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL97@prompt_inf:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL97@prompt_inf
	sub	ecx, edx
; Line 1510
	cmp	ecx, 8
	jl	SHORT $LN83@prompt_inf
; Line 1513
	lea	eax, DWORD PTR [esi-8]
	mov	edx, OFFSET ??_C@_08BFLCMEFH@_default?$AA@
	add	eax, ecx
	npad	6
$LL98@prompt_inf:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN99@prompt_inf
	test	cl, cl
	je	SHORT $LN100@prompt_inf
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN99@prompt_inf
	add	eax, 2
	add	edx, 2
	test	cl, cl
	jne	SHORT $LL98@prompt_inf
$LN100@prompt_inf:
	xor	eax, eax
	jmp	SHORT $LN101@prompt_inf
$LN99@prompt_inf:
	sbb	eax, eax
	or	eax, 1
$LN101@prompt_inf:
; Line 1175
	test	eax, eax
	je	$start$114
$LN83@prompt_inf:
; Line 1509
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL102@prompt_inf:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL102@prompt_inf
	sub	ecx, edx
; Line 1510
	cmp	ecx, 6
	jl	SHORT $LN84@prompt_inf
; Line 1513
	lea	eax, DWORD PTR [esi-6]
	mov	edx, OFFSET ??_C@_06PFGHHEBM@_value?$AA@
	add	eax, ecx
	npad	6
$LL103@prompt_inf:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN104@prompt_inf
	test	cl, cl
	je	SHORT $LN105@prompt_inf
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN104@prompt_inf
	add	eax, 2
	add	edx, 2
	test	cl, cl
	jne	SHORT $LL103@prompt_inf
$LN105@prompt_inf:
	xor	eax, eax
	jmp	SHORT $LN106@prompt_inf
$LN104@prompt_inf:
	sbb	eax, eax
	or	eax, 1
$LN106@prompt_inf:
; Line 1175
	test	eax, eax
	je	$start$114
$LN84@prompt_inf:
; Line 1181
	mov	ecx, esi
	mov	al, BYTE PTR [ecx]
	test	al, al
	je	SHORT $LN19@prompt_inf
$LL7@prompt_inf:
; Line 1182
	cmp	al, 58					; 0000003aH
	je	SHORT $LN61@prompt_inf
	cmp	al, 44					; 0000002cH
	je	SHORT $LN61@prompt_inf
	cmp	al, 46					; 0000002eH
	je	SHORT $LN61@prompt_inf
; Line 1181
	mov	al, BYTE PTR [ecx+1]
	inc	ecx
	test	al, al
	jne	SHORT $LL7@prompt_inf
; Line 1286
	jmp	SHORT $LN19@prompt_inf
$LN61@prompt_inf:
; Line 1183
	inc	ecx
; Line 1184
	cmp	BYTE PTR [ecx], 0
	cmovne	esi, ecx
$LN19@prompt_inf:
; Line 1188
	cmp	BYTE PTR [esi], 43			; 0000002bH
	jne	SHORT $LN20@prompt_inf
; Line 1189
	or	ebx, -1
; Line 1190
	inc	esi
; Line 1191
	jmp	SHORT $LN21@prompt_inf
$LN20@prompt_inf:
; Line 1192
	xor	ebx, ebx
$LN21@prompt_inf:
; Line 1194
	push	esi
	call	_OBJ_txt2nid
	mov	ebp, eax
	add	esp, 4
	test	ebp, ebp
	je	$LN85@prompt_inf
; Line 1197
	push	DWORD PTR [edi+4]
	lea	eax, DWORD PTR _buf$[esp+164]
	push	OFFSET ??_C@_0L@HCIJHMBL@?$CFs_default?$AA@
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
	add	esp, 16					; 00000010H
	cmp	eax, 100				; 00000064H
	jge	$LN64@prompt_inf
; Line 1202
	lea	eax, DWORD PTR _buf$[esp+160]
	push	eax
	push	DWORD PTR _dn_sect$GSCopy$1$[esp+164]
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN24@prompt_inf
; Line 1203
	call	_ERR_clear_error
; Line 1204
	mov	esi, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN24@prompt_inf:
; Line 1207
	push	DWORD PTR [edi+4]
	lea	eax, DWORD PTR _buf$[esp+164]
	push	OFFSET ??_C@_08GELLOOFD@?$CFs_value?$AA@
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
; Line 1208
	lea	eax, DWORD PTR _buf$[esp+176]
	push	eax
	push	DWORD PTR _dn_sect$GSCopy$1$[esp+180]
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	edi, eax
	add	esp, 28					; 0000001cH
	test	edi, edi
	jne	SHORT $LN25@prompt_inf
; Line 1209
	call	_ERR_clear_error
$LN25@prompt_inf:
; Line 1213
	mov	eax, DWORD PTR _v$1$[esp+160]
	push	DWORD PTR [eax+4]
	lea	eax, DWORD PTR _buf$[esp+164]
	push	OFFSET ??_C@_06LNNHIIJH@?$CFs_min?$AA@
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
; Line 1214
	lea	eax, DWORD PTR _n_min$[esp+176]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+180]
	push	eax
	push	DWORD PTR _dn_sect$GSCopy$1$[esp+184]
	push	DWORD PTR _req_conf
	call	_NCONF_get_number_e
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN26@prompt_inf
; Line 1215
	call	_ERR_clear_error
; Line 1216
	mov	DWORD PTR _n_min$[esp+160], -1
$LN26@prompt_inf:
; Line 1219
	mov	eax, DWORD PTR _v$1$[esp+160]
	push	DWORD PTR [eax+4]
	lea	eax, DWORD PTR _buf$[esp+164]
	push	OFFSET ??_C@_06KPFMGMPI@?$CFs_max?$AA@
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
; Line 1220
	lea	eax, DWORD PTR _n_max$[esp+176]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+180]
	push	eax
	push	DWORD PTR _dn_sect$GSCopy$1$[esp+184]
	push	DWORD PTR _req_conf
	call	_NCONF_get_number_e
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN107@prompt_inf
; Line 1221
	call	_ERR_clear_error
; Line 1222
	or	eax, -1
	mov	DWORD PTR _n_max$[esp+160], eax
	jmp	SHORT $LN27@prompt_inf
$LN107@prompt_inf:
	mov	eax, DWORD PTR _n_max$[esp+160]
$LN27@prompt_inf:
; Line 1225
	push	ebx
	push	DWORD PTR _chtype$[esp+160]
	push	eax
	push	DWORD PTR _n_min$[esp+172]
	mov	eax, DWORD PTR _v$1$[esp+176]
	push	ebp
	push	edi
	push	esi
	push	DWORD PTR [eax+8]
	push	DWORD PTR _subj$1$[esp+192]
	call	_add_DN_object
	add	esp, 36					; 00000024H
	test	eax, eax
	je	SHORT $LN69@prompt_inf
$LN85@prompt_inf:
; Line 1228
	mov	ebx, DWORD PTR _i$1$[esp+160]
	mov	ebp, DWORD PTR _dn_sk$GSCopy$1$[esp+160]
	jmp	$start$114
$LN64@prompt_inf:
; Line 1198
	push	DWORD PTR [edi+4]
; Line 1199
	jmp	$LN112@prompt_inf
$LN62@prompt_inf:
; Line 1229
	mov	eax, DWORD PTR _subj$1$[esp+160]
	push	eax
	call	_X509_NAME_entry_count
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN29@prompt_inf
; Line 1230
	push	OFFSET ??_C@_0CM@HMOKPNGJ@error?0?5no?5objects?5specified?5in?5c@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN69@prompt_inf:
; Line 1232
	xor	eax, eax
$LN110@prompt_inf:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
; Line 1299
	mov	ecx, DWORD PTR __$ArrayPad$[esp+144]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 144				; 00000090H
	ret	0
$LN29@prompt_inf:
; Line 1235
	cmp	DWORD PTR _attribs$[esp+156], 0
	je	$LN33@prompt_inf
; Line 1237
	mov	ebp, DWORD PTR _attr_sk$GSCopy$1$[esp+160]
	test	ebp, ebp
	je	SHORT $LN31@prompt_inf
	push	ebp
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN31@prompt_inf
	cmp	DWORD PTR _batch, 0
	jne	SHORT $LN31@prompt_inf
; Line 1238
	push	OFFSET ??_C@_0DA@LBPPIBMC@?6Please?5enter?5the?5following?5?8ext@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1240
	push	OFFSET ??_C@_0CK@LOFFOKNE@to?5be?5sent?5with?5your?5certificate@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN31@prompt_inf:
; Line 1244
	or	edi, -1
	npad	5
$start2$115:
; Line 1246
	inc	edi
; Line 1247
	test	ebp, ebp
	je	$LN33@prompt_inf
	push	ebp
	call	_sk_num
	add	esp, 4
	cmp	eax, edi
	jle	$LN33@prompt_inf
; Line 1250
	push	edi
	push	ebp
	call	_sk_value
	mov	ebx, eax
	mov	DWORD PTR _v$2$[esp+168], ebx
; Line 1251
	mov	esi, DWORD PTR [ebx+4]
; Line 1252
	push	esi
	call	_OBJ_txt2nid
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _nid$2$[esp+160], eax
	test	eax, eax
	je	SHORT $start2$115
; Line 1256
	push	esi
	push	OFFSET ??_C@_0L@HCIJHMBL@?$CFs_default?$AA@
	lea	eax, DWORD PTR _buf$[esp+168]
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
	add	esp, 16					; 00000010H
	cmp	eax, 100				; 00000064H
	jge	$LN68@prompt_inf
; Line 1262
	mov	ebp, DWORD PTR _attr_sect$GSCopy$1$[esp+160]
	lea	eax, DWORD PTR _buf$[esp+160]
	push	eax
	push	ebp
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	SHORT $LN36@prompt_inf
; Line 1263
	call	_ERR_clear_error
; Line 1264
	mov	ebx, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN36@prompt_inf:
; Line 1267
	push	esi
	push	OFFSET ??_C@_08GELLOOFD@?$CFs_value?$AA@
	lea	eax, DWORD PTR _buf$[esp+168]
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
; Line 1269
	lea	eax, DWORD PTR _buf$[esp+176]
	push	eax
	push	ebp
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	ebp, eax
	add	esp, 28					; 0000001cH
	test	ebp, ebp
	jne	SHORT $LN37@prompt_inf
; Line 1270
	call	_ERR_clear_error
$LN37@prompt_inf:
; Line 1274
	push	esi
	push	OFFSET ??_C@_06LNNHIIJH@?$CFs_min?$AA@
	lea	eax, DWORD PTR _buf$[esp+168]
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
; Line 1275
	lea	eax, DWORD PTR _n_min$[esp+176]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+180]
	push	eax
	push	DWORD PTR _attr_sect$GSCopy$1$[esp+184]
	push	DWORD PTR _req_conf
	call	_NCONF_get_number_e
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN38@prompt_inf
; Line 1276
	call	_ERR_clear_error
; Line 1277
	mov	DWORD PTR _n_min$[esp+160], -1
$LN38@prompt_inf:
; Line 1280
	push	esi
	push	OFFSET ??_C@_06KPFMGMPI@?$CFs_max?$AA@
	lea	eax, DWORD PTR _buf$[esp+168]
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
; Line 1281
	lea	eax, DWORD PTR _n_max$[esp+176]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+180]
	push	eax
	push	DWORD PTR _attr_sect$GSCopy$1$[esp+184]
	push	DWORD PTR _req_conf
	call	_NCONF_get_number_e
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN108@prompt_inf
; Line 1282
	call	_ERR_clear_error
; Line 1283
	or	eax, -1
	mov	DWORD PTR _n_max$[esp+160], eax
	jmp	SHORT $LN39@prompt_inf
$LN108@prompt_inf:
	mov	eax, DWORD PTR _n_max$[esp+160]
$LN39@prompt_inf:
; Line 1286
	push	DWORD PTR _chtype$[esp+156]
	push	eax
	push	DWORD PTR _n_min$[esp+168]
	mov	eax, DWORD PTR _v$2$[esp+172]
	push	DWORD PTR _nid$2$[esp+172]
	push	ebp
	push	ebx
	push	DWORD PTR [eax+8]
	push	DWORD PTR _req$GSCopy$1$[esp+188]
	call	_add_attribute_object
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$LN69@prompt_inf
; Line 1290
	mov	ebp, DWORD PTR _attr_sk$GSCopy$1$[esp+160]
	jmp	$start2$115
$LN68@prompt_inf:
; Line 1257
	push	DWORD PTR [ebx+4]
$LN112@prompt_inf:
	push	OFFSET ??_C@_0BE@OBIMKCEG@Name?5?8?$CFs?8?5too?5long?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1258
	jmp	$LN69@prompt_inf
$LN33@prompt_inf:
; Line 1297
	mov	eax, 1
	jmp	$LN110@prompt_inf
$LN12@prompt_inf:
; Line 1293
	push	OFFSET ??_C@_0CB@BHIPIDOI@No?5template?0?5please?5set?5one?5up?4?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1299
	mov	ecx, DWORD PTR __$ArrayPad$[esp+156]
	add	esp, 8
	xor	eax, eax
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 144				; 00000090H
	ret	0
_prompt_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _build_subject
_TEXT	SEGMENT
_req$ = 8						; size = 4
_subject$ = 12						; size = 4
_chtype$ = 16						; size = 4
_multirdn$ = 20						; size = 4
_build_subject PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1119
	push	esi
; Line 1122
	push	DWORD PTR _multirdn$[esp]
	push	DWORD PTR _chtype$[esp+4]
	push	DWORD PTR _subject$[esp+8]
	call	_parse_name
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN5@build_subj
; Line 1125
	push	esi
	push	DWORD PTR _req$[esp+4]
	call	_X509_REQ_set_subject_name
	add	esp, 8
; Line 1126
	push	esi
	test	eax, eax
	jne	SHORT $LN3@build_subj
	call	_X509_NAME_free
	add	esp, 4
$LN5@build_subj:
; Line 1127
	xor	eax, eax
	pop	esi
; Line 1131
	ret	0
$LN3@build_subj:
; Line 1129
	call	_X509_NAME_free
	add	esp, 4
; Line 1130
	mov	eax, 1
	pop	esi
; Line 1131
	ret	0
_build_subject ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _make_REQ
_TEXT	SEGMENT
_attr_sk$1$ = -12					; size = 4
tv267 = -8						; size = 4
_dn_sk$1$ = -4						; size = 4
_req$ = 8						; size = 4
_pkey$ = 12						; size = 4
_subj$ = 16						; size = 4
_multirdn$ = 20						; size = 4
_attribs$ = 24						; size = 4
_chtype$ = 28						; size = 4
_make_REQ PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1053
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1059
	push	OFFSET ??_C@_06FJNEHIA@prompt?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	xor	bl, bl
	xor	esi, esi
	mov	DWORD PTR tv267[esp+40], ebx
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 1060
	lea	ebp, DWORD PTR [esi+1]
	test	eax, eax
	jne	SHORT $LN17@make_REQ
; Line 1061
	call	_ERR_clear_error
; Line 1062
	jmp	SHORT $LN3@make_REQ
$LN17@make_REQ:
	mov	ecx, OFFSET ??_C@_02KAJCLHKP@no?$AA@
$LL18@make_REQ:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN19@make_REQ
	test	dl, dl
	je	SHORT $LN20@make_REQ
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN19@make_REQ
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL18@make_REQ
$LN20@make_REQ:
	xor	eax, eax
	jmp	SHORT $LN21@make_REQ
$LN19@make_REQ:
	sbb	eax, eax
	or	eax, 1
$LN21@make_REQ:
	test	eax, eax
	movzx	ebx, bl
	cmove	ebx, ebp
	mov	DWORD PTR tv267[esp+28], ebx
$LN3@make_REQ:
; Line 1065
	push	OFFSET ??_C@_0BD@OKKOOBH@distinguished_name?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 1066
	test	edi, edi
	jne	SHORT $LN4@make_REQ
; Line 1067
	push	OFFSET ??_C@_0BD@OKKOOBH@distinguished_name?$AA@
	push	OFFSET ??_C@_0BP@NEGAOIHA@unable?5to?5find?5?8?$CFs?8?5in?5config?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1110
	mov	eax, esi
$err$26:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1111
	add	esp, 12					; 0000000cH
	ret	0
$LN4@make_REQ:
; Line 1071
	push	edi
	push	DWORD PTR _req_conf
	call	_NCONF_get_section
	add	esp, 8
	mov	DWORD PTR _dn_sk$1$[esp+28], eax
; Line 1072
	test	eax, eax
	jne	SHORT $LN5@make_REQ
; Line 1073
	push	edi
$LN24@make_REQ:
	push	OFFSET ??_C@_0BM@NEMCEOPF@unable?5to?5get?5?8?$CFs?8?5section?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1110
	mov	eax, esi
$err_1$27:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1111
	add	esp, 12					; 0000000cH
	ret	0
$LN5@make_REQ:
; Line 1077
	push	OFFSET ??_C@_0L@HNMJPKNA@attributes?$AA@
	push	OFFSET ??_C@_03GHLFAJII@req?$AA@
	push	DWORD PTR _req_conf
	call	_NCONF_get_string
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 1078
	test	ebp, ebp
	jne	SHORT $LN6@make_REQ
; Line 1079
	call	_ERR_clear_error
; Line 1080
	mov	DWORD PTR _attr_sk$1$[esp+28], esi
$LN8@make_REQ:
; Line 1090
	mov	ebx, DWORD PTR _req$[esp+24]
	push	0
	push	ebx
	call	_X509_REQ_set_version
	add	esp, 8
	test	eax, eax
	je	$LN22@make_REQ
; Line 1093
	cmp	BYTE PTR tv267[esp+28], 0
	je	SHORT $LN10@make_REQ
; Line 1094
	push	DWORD PTR _chtype$[esp+24]
	push	DWORD PTR _attribs$[esp+28]
	push	DWORD PTR _attr_sk$1$[esp+36]
	push	DWORD PTR _dn_sk$1$[esp+40]
	push	ebx
	call	_auto_info
	add	esp, 20					; 00000014H
	jmp	SHORT $LN13@make_REQ
$LN6@make_REQ:
; Line 1082
	push	ebp
	push	DWORD PTR _req_conf
	call	_NCONF_get_section
	add	esp, 8
	mov	DWORD PTR _attr_sk$1$[esp+28], eax
; Line 1083
	test	eax, eax
	jne	SHORT $LN8@make_REQ
; Line 1084
	push	ebp
; Line 1085
	jmp	$LN24@make_REQ
$LN10@make_REQ:
; Line 1096
	mov	eax, DWORD PTR _subj$[esp+24]
	test	eax, eax
	je	SHORT $LN12@make_REQ
; Line 1097
	push	DWORD PTR _multirdn$[esp+24]
	push	DWORD PTR _chtype$[esp+28]
	push	eax
	push	ebx
	call	_build_subject
	add	esp, 16					; 00000010H
	jmp	SHORT $LN13@make_REQ
$LN12@make_REQ:
; Line 1099
	push	DWORD PTR _chtype$[esp+24]
	push	DWORD PTR _attribs$[esp+28]
	push	ebp
	push	DWORD PTR _attr_sk$1$[esp+40]
	push	edi
	push	DWORD PTR _dn_sk$1$[esp+48]
	push	ebx
	call	_prompt_info
	add	esp, 28					; 0000001cH
$LN13@make_REQ:
; Line 1102
	test	eax, eax
	je	SHORT $LN22@make_REQ
; Line 1105
	push	DWORD PTR _pkey$[esp+24]
	push	ebx
	call	_X509_REQ_set_pubkey
	add	esp, 8
	test	eax, eax
	mov	eax, 1
	cmovne	esi, eax
$LN22@make_REQ:
; Line 1110
	mov	eax, esi
$err_2$28:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1111
	add	esp, 12					; 0000000cH
	ret	0
_make_REQ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_X509_CRL_sign
_TEXT	SEGMENT
_mctx$ = -24						; size = 24
_err$ = 8						; size = 4
_x$ = 12						; size = 4
_pkey$ = 16						; size = 4
_md$ = 20						; size = 4
_sigopts$ = 24						; size = 4
_do_X509_CRL_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1723
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 1726
	lea	eax, DWORD PTR _mctx$[esp+24]
	push	esi
	push	eax
	call	_EVP_MD_CTX_init
; Line 1727
	push	DWORD PTR _sigopts$[esp+28]
	lea	eax, DWORD PTR _mctx$[esp+36]
	push	DWORD PTR _md$[esp+32]
	push	DWORD PTR _pkey$[esp+36]
	push	eax
	push	DWORD PTR _err$[esp+44]
	call	_do_sign_init
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 1728
	test	esi, esi
	jle	SHORT $LN2@do_X509_CR
; Line 1729
	lea	eax, DWORD PTR _mctx$[esp+28]
	push	eax
	push	DWORD PTR _x$[esp+28]
	call	_X509_CRL_sign_ctx
	add	esp, 8
	mov	esi, eax
$LN2@do_X509_CR:
; Line 1730
	lea	eax, DWORD PTR _mctx$[esp+28]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 1731
	xor	eax, eax
	test	esi, esi
	setg	al
	pop	esi
; Line 1732
	add	esp, 24					; 00000018H
	ret	0
_do_X509_CRL_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_X509_REQ_sign
_TEXT	SEGMENT
_mctx$ = -24						; size = 24
_err$ = 8						; size = 4
_x$ = 12						; size = 4
_pkey$ = 16						; size = 4
_md$ = 20						; size = 4
_sigopts$ = 24						; size = 4
_do_X509_REQ_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1710
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 1713
	lea	eax, DWORD PTR _mctx$[esp+24]
	push	esi
	push	eax
	call	_EVP_MD_CTX_init
; Line 1714
	push	DWORD PTR _sigopts$[esp+28]
	lea	eax, DWORD PTR _mctx$[esp+36]
	push	DWORD PTR _md$[esp+32]
	push	DWORD PTR _pkey$[esp+36]
	push	eax
	push	DWORD PTR _err$[esp+44]
	call	_do_sign_init
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 1715
	test	esi, esi
	jle	SHORT $LN2@do_X509_RE
; Line 1716
	lea	eax, DWORD PTR _mctx$[esp+28]
	push	eax
	push	DWORD PTR _x$[esp+28]
	call	_X509_REQ_sign_ctx
	add	esp, 8
	mov	esi, eax
$LN2@do_X509_RE:
; Line 1717
	lea	eax, DWORD PTR _mctx$[esp+28]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 1718
	xor	eax, eax
	test	esi, esi
	setg	al
	pop	esi
; Line 1719
	add	esp, 24					; 00000018H
	ret	0
_do_X509_REQ_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_X509_sign
_TEXT	SEGMENT
_mctx$ = -24						; size = 24
_err$ = 8						; size = 4
_x$ = 12						; size = 4
_pkey$ = 16						; size = 4
_md$ = 20						; size = 4
_sigopts$ = 24						; size = 4
_do_X509_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\req.c
; Line 1697
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 1700
	lea	eax, DWORD PTR _mctx$[esp+24]
	push	esi
	push	eax
	call	_EVP_MD_CTX_init
; Line 1701
	push	DWORD PTR _sigopts$[esp+28]
	lea	eax, DWORD PTR _mctx$[esp+36]
	push	DWORD PTR _md$[esp+32]
	push	DWORD PTR _pkey$[esp+36]
	push	eax
	push	DWORD PTR _err$[esp+44]
	call	_do_sign_init
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 1702
	test	esi, esi
	jle	SHORT $LN2@do_X509_si
; Line 1703
	lea	eax, DWORD PTR _mctx$[esp+28]
	push	eax
	push	DWORD PTR _x$[esp+28]
	call	_X509_sign_ctx
	add	esp, 8
	mov	esi, eax
$LN2@do_X509_si:
; Line 1704
	lea	eax, DWORD PTR _mctx$[esp+28]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 1705
	xor	eax, eax
	test	esi, esi
	setg	al
	pop	esi
; Line 1706
	add	esp, 24					; 00000018H
	ret	0
_do_X509_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

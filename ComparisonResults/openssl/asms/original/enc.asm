; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\enc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?magic@?1??enc_main@@9@9 DB 'Salted__', 00H		; `enc_main'::`2'::magic
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_set_hex
PUBLIC	_enc_main
PUBLIC	??_C@_06NOFJDKIJ@?9?$CF?925s?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_06JEFEFGEJ@base64?$AA@			; `string'
PUBLIC	??_C@_03NONKPJJM@enc?$AA@			; `string'
PUBLIC	??_C@_0BJ@HCMGINMJ@?$CFs?5is?5an?5unknown?5cipher?6?$AA@ ; `string'
PUBLIC	??_C@_02CIKBGMLM@?9e?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_05NNOCMECB@?9pass?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_02DBLKFNPN@?9d?$AA@			; `string'
PUBLIC	??_C@_02BPBEIKKI@?9p?$AA@			; `string'
PUBLIC	??_C@_02EJEOCNCO@?9v?$AA@			; `string'
PUBLIC	??_C@_06MGNOFJED@?9nopad?$AA@			; `string'
PUBLIC	??_C@_05MCHJMMHL@?9salt?$AA@			; `string'
PUBLIC	??_C@_07ONPDFJOJ@?9nosalt?$AA@			; `string'
PUBLIC	??_C@_06OHOHKFPP@?9debug?$AA@			; `string'
PUBLIC	??_C@_02IKJAKOAK@?9P?$AA@			; `string'
PUBLIC	??_C@_02NJEJINBK@?9A?$AA@			; `string'
PUBLIC	??_C@_02EMMNKJLI@?9a?$AA@			; `string'
PUBLIC	??_C@_07OGJCBNJ@?9base64?$AA@			; `string'
PUBLIC	??_C@_08CBMLGKFK@?9bufsize?$AA@			; `string'
PUBLIC	??_C@_02LGCCEBDC@?9k?$AA@			; `string'
PUBLIC	??_C@_06KHNBBAIG@?9kfile?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0BO@DDOLNDDD@unable?5to?5read?5key?5from?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@LPMLMKBM@zero?5length?5password?6?$AA@ ; `string'
PUBLIC	??_C@_02CDKGGFJA@?9K?$AA@			; `string'
PUBLIC	??_C@_02KBLNPNMJ@?9S?$AA@			; `string'
PUBLIC	??_C@_03LCIAHJNP@?9iv?$AA@			; `string'
PUBLIC	??_C@_03MNHNKBNA@?9md?$AA@			; `string'
PUBLIC	??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@	; `string'
PUBLIC	??_C@_05OKILBPAF@?9none?$AA@			; `string'
PUBLIC	??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_0N@NDELNNPO@options?5are?6?$AA@		; `string'
PUBLIC	??_C@_0L@MCDAPHEJ@?9in?5?$DMfile?$DO?$AA@	; `string'
PUBLIC	??_C@_0BC@LCJBKLPE@?$CF?914s?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0M@NOKEFDHL@?9out?5?$DMfile?$DO?$AA@	; `string'
PUBLIC	??_C@_0BD@CNOLDGMD@?$CF?914s?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0M@PMHOLJCA@?9pass?5?$DMarg?$DO?$AA@	; `string'
PUBLIC	??_C@_0BK@POAOHLNN@?$CF?914s?5pass?5phrase?5source?6?$AA@ ; `string'
PUBLIC	??_C@_0P@BFGGPMIJ@?$CF?914s?5encrypt?6?$AA@	; `string'
PUBLIC	??_C@_0P@FPHHPEJM@?$CF?914s?5decrypt?6?$AA@	; `string'
PUBLIC	??_C@_0L@COKJKPLA@?9a?1?9base64?$AA@		; `string'
PUBLIC	??_C@_0DK@LPPOLBLG@?$CF?914s?5base64?5encode?1decode?0?5depe@ ; `string'
PUBLIC	??_C@_0CH@CGJBDIAG@?$CF?914s?5passphrase?5is?5the?5next?5arg@ ; `string'
PUBLIC	??_C@_0DJ@DFLMLDAL@?$CF?914s?5passphrase?5is?5the?5first?5li@ ; `string'
PUBLIC	??_C@_0DK@DILGBNBM@?$CF?914s?5the?5next?5argument?5is?5the?5m@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0DK@BHJOLGDM@?$CF?914s?5?5?5from?5a?5passphrase?4?5?5One?5@ ; `string'
PUBLIC	??_C@_0CI@BOHLJIBO@?$CF?914s?5salt?5in?5hex?5is?5the?5next?5ar@ ; `string'
PUBLIC	??_C@_06IGMMGDJL@?9K?1?9iv?$AA@			; `string'
PUBLIC	??_C@_0CK@DOLNPBBA@?$CF?914s?5key?1iv?5in?5hex?5is?5the?5next?5@ ; `string'
PUBLIC	??_C@_05LCFKBLFL@?9?$FLpP?$FN?$AA@		; `string'
PUBLIC	??_C@_0CK@JJEIICIG@?$CF?914s?5print?5the?5iv?1key?5?$CIthen?5exi@ ; `string'
PUBLIC	??_C@_0N@PNCHCKKB@?9bufsize?5?$DMn?$DO?$AA@	; `string'
PUBLIC	??_C@_0BD@PKCLAKIF@?$CF?914s?5buffer?5size?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@EJNGOCOA@?$CF?914s?5disable?5standard?5block?5pad@ ; `string'
PUBLIC	??_C@_09BOJEFCGN@?9engine?5e?$AA@		; `string'
PUBLIC	??_C@_0DB@HCMDFGCL@?$CF?914s?5use?5engine?5e?0?5possibly?5a?5h@ ; `string'
PUBLIC	??_C@_0O@OGIPHMMM@Cipher?5Types?6?$AA@		; `string'
PUBLIC	??_C@_0CP@COKHMDNP@AEAD?5ciphers?5not?5supported?5by?5th@ ; `string'
PUBLIC	??_C@_0DK@FGOBOAAH@Ciphers?5in?5XTS?5mode?5are?5not?5supp@ ; `string'
PUBLIC	??_C@_0CK@PCPNIALC@?$CFs?5is?5an?5unsupported?5message?5dig@ ; `string'
PUBLIC	??_C@_0BO@HPNFKOKN@invalid?5?8bufsize?8?5specified?4?6?$AA@ ; `string'
PUBLIC	??_C@_0M@HOAILMMA@bufsize?$DN?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0N@PKNDKPBG@?4?2apps?2enc?4c?$AA@		; `string'
PUBLIC	??_C@_0BM@BGDPIIAJ@OPENSSL_malloc?5failure?5?$CFld?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0L@HBBFMHKN@encryption?$AA@		; `string'
PUBLIC	??_C@_0L@EIHLODJK@decryption?$AA@		; `string'
PUBLIC	??_C@_0BG@PAGOAIAK@enter?5?$CFs?5?$CFs?5password?3?$AA@ ; `string'
PUBLIC	??_C@_0BD@PFMPADAJ@bad?5password?5read?6?$AA@	; `string'
PUBLIC	??_C@_0BI@CHFGPCFC@invalid?5hex?5salt?5value?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@EIAJMMHP@error?5writing?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@JCEEIGID@error?5reading?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@EBPGDKNI@bad?5magic?5number?6?$AA@	; `string'
PUBLIC	??_C@_0CE@KHDBNACI@warning?3?5iv?5not?5use?5by?5this?5ciph@ ; `string'
PUBLIC	??_C@_0BG@NHKOPNKN@invalid?5hex?5iv?5value?6?$AA@ ; `string'
PUBLIC	??_C@_0O@IPGGFIND@iv?5undefined?6?$AA@		; `string'
PUBLIC	??_C@_0BH@OLJHIIIL@invalid?5hex?5key?5value?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@IAIFPEPB@Error?5setting?5cipher?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_05CPDJLPEH@salt?$DN?$AA@			; `string'
PUBLIC	??_C@_04JFFKLGJF@?$CF02X?$AA@			; `string'
PUBLIC	??_C@_04OKAPFCOO@key?$DN?$AA@			; `string'
PUBLIC	??_C@_04LBAOOMMA@iv?5?$DN?$AA@			; `string'
PUBLIC	??_C@_0N@NBFJJOIE@bad?5decrypt?6?$AA@		; `string'
PUBLIC	??_C@_0BE@PJJCHJPP@bytes?5read?5?5?5?3?$CF8ld?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@EFCLFIA@bytes?5written?3?$CF8ld?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@MDNEACDE@hex?5string?5is?5too?5long?6?$AA@ ; `string'
PUBLIC	??_C@_0P@NEFOCAMN@non?9hex?5digit?6?$AA@	; `string'
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__setvbuf:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__islower:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_set_callback:PROC
EXTRN	_BIO_set_callback_arg:PROC
EXTRN	_BIO_number_read:PROC
EXTRN	_BIO_number_written:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_debug_callback:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_OBJ_NAME_do_all_sorted:PROC
EXTRN	_OBJ_nid2ln:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_EVP_CIPHER_nid:PROC
EXTRN	_EVP_CIPHER_key_length:PROC
EXTRN	_EVP_CIPHER_iv_length:PROC
EXTRN	_EVP_CIPHER_flags:PROC
EXTRN	_EVP_read_pw_string:PROC
EXTRN	_EVP_BytesToKey:PROC
EXTRN	_EVP_CIPHER_CTX_set_flags:PROC
EXTRN	_EVP_CipherInit_ex:PROC
EXTRN	_EVP_CIPHER_CTX_set_padding:PROC
EXTRN	_BIO_f_base64:PROC
EXTRN	_BIO_f_cipher:PROC
EXTRN	_EVP_md5:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_program_name:PROC
EXTRN	_app_passwd:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
?n@?1??show_ciphers@@9@9 DD 01H DUP (?)			; `show_ciphers'::`2'::n
?buf@?L@??enc_main@@9@9 DB 080H DUP (?)			; `enc_main'::`11'::buf
_BSS	ENDS
;	COMDAT ??_C@_0P@NEFOCAMN@non?9hex?5digit?6?$AA@
CONST	SEGMENT
??_C@_0P@NEFOCAMN@non?9hex?5digit?6?$AA@ DB 'non-hex digit', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MDNEACDE@hex?5string?5is?5too?5long?6?$AA@
CONST	SEGMENT
??_C@_0BI@MDNEACDE@hex?5string?5is?5too?5long?6?$AA@ DB 'hex string is to'
	DB	'o long', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EFCLFIA@bytes?5written?3?$CF8ld?6?$AA@
CONST	SEGMENT
??_C@_0BE@EFCLFIA@bytes?5written?3?$CF8ld?6?$AA@ DB 'bytes written:%8ld', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PJJCHJPP@bytes?5read?5?5?5?3?$CF8ld?6?$AA@
CONST	SEGMENT
??_C@_0BE@PJJCHJPP@bytes?5read?5?5?5?3?$CF8ld?6?$AA@ DB 'bytes read   :%8'
	DB	'ld', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBFJJOIE@bad?5decrypt?6?$AA@
CONST	SEGMENT
??_C@_0N@NBFJJOIE@bad?5decrypt?6?$AA@ DB 'bad decrypt', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LBAOOMMA@iv?5?$DN?$AA@
CONST	SEGMENT
??_C@_04LBAOOMMA@iv?5?$DN?$AA@ DB 'iv =', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKAPFCOO@key?$DN?$AA@
CONST	SEGMENT
??_C@_04OKAPFCOO@key?$DN?$AA@ DB 'key=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFFKLGJF@?$CF02X?$AA@
CONST	SEGMENT
??_C@_04JFFKLGJF@?$CF02X?$AA@ DB '%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CPDJLPEH@salt?$DN?$AA@
CONST	SEGMENT
??_C@_05CPDJLPEH@salt?$DN?$AA@ DB 'salt=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IAIFPEPB@Error?5setting?5cipher?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BJ@IAIFPEPB@Error?5setting?5cipher?5?$CFs?6?$AA@ DB 'Error setting'
	DB	' cipher %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OLJHIIIL@invalid?5hex?5key?5value?6?$AA@
CONST	SEGMENT
??_C@_0BH@OLJHIIIL@invalid?5hex?5key?5value?6?$AA@ DB 'invalid hex key va'
	DB	'lue', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IPGGFIND@iv?5undefined?6?$AA@
CONST	SEGMENT
??_C@_0O@IPGGFIND@iv?5undefined?6?$AA@ DB 'iv undefined', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NHKOPNKN@invalid?5hex?5iv?5value?6?$AA@
CONST	SEGMENT
??_C@_0BG@NHKOPNKN@invalid?5hex?5iv?5value?6?$AA@ DB 'invalid hex iv valu'
	DB	'e', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KHDBNACI@warning?3?5iv?5not?5use?5by?5this?5ciph@
CONST	SEGMENT
??_C@_0CE@KHDBNACI@warning?3?5iv?5not?5use?5by?5this?5ciph@ DB 'warning: '
	DB	'iv not use by this cipher', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EBPGDKNI@bad?5magic?5number?6?$AA@
CONST	SEGMENT
??_C@_0BC@EBPGDKNI@bad?5magic?5number?6?$AA@ DB 'bad magic number', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JCEEIGID@error?5reading?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BK@JCEEIGID@error?5reading?5input?5file?6?$AA@ DB 'error reading i'
	DB	'nput file', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EIAJMMHP@error?5writing?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BL@EIAJMMHP@error?5writing?5output?5file?6?$AA@ DB 'error writing '
	DB	'output file', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CHFGPCFC@invalid?5hex?5salt?5value?6?$AA@
CONST	SEGMENT
??_C@_0BI@CHFGPCFC@invalid?5hex?5salt?5value?6?$AA@ DB 'invalid hex salt '
	DB	'value', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PFMPADAJ@bad?5password?5read?6?$AA@
CONST	SEGMENT
??_C@_0BD@PFMPADAJ@bad?5password?5read?6?$AA@ DB 'bad password read', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PAGOAIAK@enter?5?$CFs?5?$CFs?5password?3?$AA@
CONST	SEGMENT
??_C@_0BG@PAGOAIAK@enter?5?$CFs?5?$CFs?5password?3?$AA@ DB 'enter %s %s p'
	DB	'assword:', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EIHLODJK@decryption?$AA@
CONST	SEGMENT
??_C@_0L@EIHLODJK@decryption?$AA@ DB 'decryption', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HBBFMHKN@encryption?$AA@
CONST	SEGMENT
??_C@_0L@HBBFMHKN@encryption?$AA@ DB 'encryption', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BGDPIIAJ@OPENSSL_malloc?5failure?5?$CFld?6?$AA@
CONST	SEGMENT
??_C@_0BM@BGDPIIAJ@OPENSSL_malloc?5failure?5?$CFld?6?$AA@ DB 'OPENSSL_mal'
	DB	'loc failure %ld', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PKNDKPBG@?4?2apps?2enc?4c?$AA@
CONST	SEGMENT
??_C@_0N@PKNDKPBG@?4?2apps?2enc?4c?$AA@ DB '.\apps\enc.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HOAILMMA@bufsize?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0M@HOAILMMA@bufsize?$DN?$CFd?6?$AA@ DB 'bufsize=%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HPNFKOKN@invalid?5?8bufsize?8?5specified?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@HPNFKOKN@invalid?5?8bufsize?8?5specified?4?6?$AA@ DB 'invalid '''
	DB	'bufsize'' specified.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PCPNIALC@?$CFs?5is?5an?5unsupported?5message?5dig@
CONST	SEGMENT
??_C@_0CK@PCPNIALC@?$CFs?5is?5an?5unsupported?5message?5dig@ DB '%s is an'
	DB	' unsupported message digest type', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@FGOBOAAH@Ciphers?5in?5XTS?5mode?5are?5not?5supp@
CONST	SEGMENT
??_C@_0DK@FGOBOAAH@Ciphers?5in?5XTS?5mode?5are?5not?5supp@ DB 'Ciphers in'
	DB	' XTS mode are not supported by the enc utility', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@COKHMDNP@AEAD?5ciphers?5not?5supported?5by?5th@
CONST	SEGMENT
??_C@_0CP@COKHMDNP@AEAD?5ciphers?5not?5supported?5by?5th@ DB 'AEAD cipher'
	DB	's not supported by the enc utility', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OGIPHMMM@Cipher?5Types?6?$AA@
CONST	SEGMENT
??_C@_0O@OGIPHMMM@Cipher?5Types?6?$AA@ DB 'Cipher Types', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@HCMDFGCL@?$CF?914s?5use?5engine?5e?0?5possibly?5a?5h@
CONST	SEGMENT
??_C@_0DB@HCMDFGCL@?$CF?914s?5use?5engine?5e?0?5possibly?5a?5h@ DB '%-14s'
	DB	' use engine e, possibly a hardware device.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BOJEFCGN@?9engine?5e?$AA@
CONST	SEGMENT
??_C@_09BOJEFCGN@?9engine?5e?$AA@ DB '-engine e', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EJNGOCOA@?$CF?914s?5disable?5standard?5block?5pad@
CONST	SEGMENT
??_C@_0CG@EJNGOCOA@?$CF?914s?5disable?5standard?5block?5pad@ DB '%-14s di'
	DB	'sable standard block padding', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PKCLAKIF@?$CF?914s?5buffer?5size?6?$AA@
CONST	SEGMENT
??_C@_0BD@PKCLAKIF@?$CF?914s?5buffer?5size?6?$AA@ DB '%-14s buffer size', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PNCHCKKB@?9bufsize?5?$DMn?$DO?$AA@
CONST	SEGMENT
??_C@_0N@PNCHCKKB@?9bufsize?5?$DMn?$DO?$AA@ DB '-bufsize <n>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JJEIICIG@?$CF?914s?5print?5the?5iv?1key?5?$CIthen?5exi@
CONST	SEGMENT
??_C@_0CK@JJEIICIG@?$CF?914s?5print?5the?5iv?1key?5?$CIthen?5exi@ DB '%-1'
	DB	'4s print the iv/key (then exit if -P)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05LCFKBLFL@?9?$FLpP?$FN?$AA@
CONST	SEGMENT
??_C@_05LCFKBLFL@?9?$FLpP?$FN?$AA@ DB '-[pP]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@DOLNPBBA@?$CF?914s?5key?1iv?5in?5hex?5is?5the?5next?5@
CONST	SEGMENT
??_C@_0CK@DOLNPBBA@?$CF?914s?5key?1iv?5in?5hex?5is?5the?5next?5@ DB '%-14'
	DB	's key/iv in hex is the next argument', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IGMMGDJL@?9K?1?9iv?$AA@
CONST	SEGMENT
??_C@_06IGMMGDJL@?9K?1?9iv?$AA@ DB '-K/-iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BOHLJIBO@?$CF?914s?5salt?5in?5hex?5is?5the?5next?5ar@
CONST	SEGMENT
??_C@_0CI@BOHLJIBO@?$CF?914s?5salt?5in?5hex?5is?5the?5next?5ar@ DB '%-14s'
	DB	' salt in hex is the next argument', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BHJOLGDM@?$CF?914s?5?5?5from?5a?5passphrase?4?5?5One?5@
CONST	SEGMENT
??_C@_0DK@BHJOLGDM@?$CF?914s?5?5?5from?5a?5passphrase?4?5?5One?5@ DB '%-1'
	DB	'4s   from a passphrase.  One of md2, md5, sha or sha1', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@DILGBNBM@?$CF?914s?5the?5next?5argument?5is?5the?5m@
CONST	SEGMENT
??_C@_0DK@DILGBNBM@?$CF?914s?5the?5next?5argument?5is?5the?5m@ DB '%-14s '
	DB	'the next argument is the md to use to create a key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@DFLMLDAL@?$CF?914s?5passphrase?5is?5the?5first?5li@
CONST	SEGMENT
??_C@_0DJ@DFLMLDAL@?$CF?914s?5passphrase?5is?5the?5first?5li@ DB '%-14s p'
	DB	'assphrase is the first line of the file argument', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CGJBDIAG@?$CF?914s?5passphrase?5is?5the?5next?5arg@
CONST	SEGMENT
??_C@_0CH@CGJBDIAG@?$CF?914s?5passphrase?5is?5the?5next?5arg@ DB '%-14s p'
	DB	'assphrase is the next argument', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@LPPOLBLG@?$CF?914s?5base64?5encode?1decode?0?5depe@
CONST	SEGMENT
??_C@_0DK@LPPOLBLG@?$CF?914s?5base64?5encode?1decode?0?5depe@ DB '%-14s b'
	DB	'ase64 encode/decode, depending on encryption flag', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COKJKPLA@?9a?1?9base64?$AA@
CONST	SEGMENT
??_C@_0L@COKJKPLA@?9a?1?9base64?$AA@ DB '-a/-base64', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FPHHPEJM@?$CF?914s?5decrypt?6?$AA@
CONST	SEGMENT
??_C@_0P@FPHHPEJM@?$CF?914s?5decrypt?6?$AA@ DB '%-14s decrypt', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BFGGPMIJ@?$CF?914s?5encrypt?6?$AA@
CONST	SEGMENT
??_C@_0P@BFGGPMIJ@?$CF?914s?5encrypt?6?$AA@ DB '%-14s encrypt', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@POAOHLNN@?$CF?914s?5pass?5phrase?5source?6?$AA@
CONST	SEGMENT
??_C@_0BK@POAOHLNN@?$CF?914s?5pass?5phrase?5source?6?$AA@ DB '%-14s pass '
	DB	'phrase source', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PMHOLJCA@?9pass?5?$DMarg?$DO?$AA@
CONST	SEGMENT
??_C@_0M@PMHOLJCA@?9pass?5?$DMarg?$DO?$AA@ DB '-pass <arg>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CNOLDGMD@?$CF?914s?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BD@CNOLDGMD@?$CF?914s?5output?5file?6?$AA@ DB '%-14s output file', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NOKEFDHL@?9out?5?$DMfile?$DO?$AA@
CONST	SEGMENT
??_C@_0M@NOKEFDHL@?9out?5?$DMfile?$DO?$AA@ DB '-out <file>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LCJBKLPE@?$CF?914s?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BC@LCJBKLPE@?$CF?914s?5input?5file?6?$AA@ DB '%-14s input file', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MCDAPHEJ@?9in?5?$DMfile?$DO?$AA@
CONST	SEGMENT
??_C@_0L@MCDAPHEJ@?9in?5?$DMfile?$DO?$AA@ DB '-in <file>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NDELNNPO@options?5are?6?$AA@
CONST	SEGMENT
??_C@_0N@NDELNNPO@options?5are?6?$AA@ DB 'options are', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@ DB 'unknown option '''
	DB	'%s''', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05OKILBPAF@?9none?$AA@
CONST	SEGMENT
??_C@_05OKILBPAF@?9none?$AA@ DB '-none', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@
CONST	SEGMENT
??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@ DB '-non-fips-allow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MNHNKBNA@?9md?$AA@
CONST	SEGMENT
??_C@_03MNHNKBNA@?9md?$AA@ DB '-md', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCIAHJNP@?9iv?$AA@
CONST	SEGMENT
??_C@_03LCIAHJNP@?9iv?$AA@ DB '-iv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KBLNPNMJ@?9S?$AA@
CONST	SEGMENT
??_C@_02KBLNPNMJ@?9S?$AA@ DB '-S', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CDKGGFJA@?9K?$AA@
CONST	SEGMENT
??_C@_02CDKGGFJA@?9K?$AA@ DB '-K', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LPMLMKBM@zero?5length?5password?6?$AA@
CONST	SEGMENT
??_C@_0BG@LPMLMKBM@zero?5length?5password?6?$AA@ DB 'zero length password'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DDOLNDDD@unable?5to?5read?5key?5from?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BO@DDOLNDDD@unable?5to?5read?5key?5from?5?8?$CFs?8?6?$AA@ DB 'unab'
	DB	'le to read key from ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06KHNBBAIG@?9kfile?$AA@
CONST	SEGMENT
??_C@_06KHNBBAIG@?9kfile?$AA@ DB '-kfile', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02LGCCEBDC@?9k?$AA@
CONST	SEGMENT
??_C@_02LGCCEBDC@?9k?$AA@ DB '-k', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08CBMLGKFK@?9bufsize?$AA@
CONST	SEGMENT
??_C@_08CBMLGKFK@?9bufsize?$AA@ DB '-bufsize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OGJCBNJ@?9base64?$AA@
CONST	SEGMENT
??_C@_07OGJCBNJ@?9base64?$AA@ DB '-base64', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02EMMNKJLI@?9a?$AA@
CONST	SEGMENT
??_C@_02EMMNKJLI@?9a?$AA@ DB '-a', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NJEJINBK@?9A?$AA@
CONST	SEGMENT
??_C@_02NJEJINBK@?9A?$AA@ DB '-A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IKJAKOAK@?9P?$AA@
CONST	SEGMENT
??_C@_02IKJAKOAK@?9P?$AA@ DB '-P', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06OHOHKFPP@?9debug?$AA@
CONST	SEGMENT
??_C@_06OHOHKFPP@?9debug?$AA@ DB '-debug', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07ONPDFJOJ@?9nosalt?$AA@
CONST	SEGMENT
??_C@_07ONPDFJOJ@?9nosalt?$AA@ DB '-nosalt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MCHJMMHL@?9salt?$AA@
CONST	SEGMENT
??_C@_05MCHJMMHL@?9salt?$AA@ DB '-salt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MGNOFJED@?9nopad?$AA@
CONST	SEGMENT
??_C@_06MGNOFJED@?9nopad?$AA@ DB '-nopad', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02EJEOCNCO@?9v?$AA@
CONST	SEGMENT
??_C@_02EJEOCNCO@?9v?$AA@ DB '-v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BPBEIKKI@?9p?$AA@
CONST	SEGMENT
??_C@_02BPBEIKKI@?9p?$AA@ DB '-p', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DBLKFNPN@?9d?$AA@
CONST	SEGMENT
??_C@_02DBLKFNPN@?9d?$AA@ DB '-d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NNOCMECB@?9pass?$AA@
CONST	SEGMENT
??_C@_05NNOCMECB@?9pass?$AA@ DB '-pass', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CIKBGMLM@?9e?$AA@
CONST	SEGMENT
??_C@_02CIKBGMLM@?9e?$AA@ DB '-e', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HCMGINMJ@?$CFs?5is?5an?5unknown?5cipher?6?$AA@
CONST	SEGMENT
??_C@_0BJ@HCMGINMJ@?$CFs?5is?5an?5unknown?5cipher?6?$AA@ DB '%s is an unk'
	DB	'nown cipher', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NONKPJJM@enc?$AA@
CONST	SEGMENT
??_C@_03NONKPJJM@enc?$AA@ DB 'enc', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JEFEFGEJ@base64?$AA@
CONST	SEGMENT
??_C@_06JEFEFGEJ@base64?$AA@ DB 'base64', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06NOFJDKIJ@?9?$CF?925s?$AA@
CONST	SEGMENT
??_C@_06NOFJDKIJ@?9?$CF?925s?$AA@ DB '-%-25s', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _enc_main
_TEXT	SEGMENT
_bufsize$1$ = -448					; size = 4
_md$1$ = -444						; size = 4
_buff$1$ = -444						; size = 4
_out$1$ = -440						; size = 4
_engine$1$ = -436					; size = 4
_in$1$ = -436						; size = 4
_enc$1$ = -432						; size = 4
_cipher$1$ = -428					; size = 4
_strbuf$1$ = -424					; size = 4
_str$1$ = -420						; size = 4
_b64$1$ = -416						; size = 4
_ctx$ = -412						; size = 4
_printkey$1$ = -408					; size = 4
_bsize$1$ = -404					; size = 4
_base64$2$ = -400					; size = 4
_debug$1$ = -396					; size = 4
_nosalt$1$ = -392					; size = 4
_benc$1$ = -388						; size = 4
_hiv$1$ = -384						; size = 4
_hkey$1$ = -380						; size = 4
_verbose$1$ = -376					; size = 4
_pass$ = -372						; size = 4
_inf$1$ = -368						; size = 4
_passarg$1$ = -364					; size = 4
_outf$1$ = -360						; size = 4
_olb64$1$ = -356					; size = 4
_hsalt$1$ = -352					; size = 4
_non_fips_allow$1$ = -348				; size = 4
_nopad$1$ = -344					; size = 4
_salt$ = -340						; size = 8
_mbuf$ = -332						; size = 8
_iv$ = -324						; size = 16
_pname$ = -308						; size = 40
_key$ = -268						; size = 64
_buf$1 = -204						; size = 200
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_enc_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\enc.c
; Line 103
	mov	eax, 448				; 000001c0H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+448], eax
; Line 113
	xor	eax, eax
	mov	DWORD PTR _strbuf$1$[esp+448], 0
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _argv$[esp+452]
; Line 116
	xor	ebx, ebx
	push	esi
	xor	esi, esi
	mov	DWORD PTR _str$1$[esp+460], eax
	push	edi
	mov	DWORD PTR _passarg$1$[esp+464], eax
	xor	edi, edi
	mov	DWORD PTR _pass$[esp+464], eax
	mov	DWORD PTR _hkey$1$[esp+464], eax
	mov	DWORD PTR _hiv$1$[esp+464], eax
	mov	DWORD PTR _hsalt$1$[esp+464], eax
	mov	DWORD PTR _md$1$[esp+464], eax
	mov	DWORD PTR _printkey$1$[esp+464], eax
; Line 121
	mov	DWORD PTR _debug$1$[esp+464], eax
	mov	DWORD PTR _olb64$1$[esp+464], eax
	mov	DWORD PTR _nosalt$1$[esp+464], eax
; Line 123
	mov	DWORD PTR _ctx$[esp+464], eax
; Line 124
	mov	DWORD PTR _inf$1$[esp+464], eax
	mov	DWORD PTR _outf$1$[esp+464], eax
; Line 125
	mov	DWORD PTR _b64$1$[esp+464], eax
	mov	DWORD PTR _benc$1$[esp+464], eax
; Line 130
	mov	DWORD PTR _engine$1$[esp+464], eax
; Line 133
	mov	DWORD PTR _non_fips_allow$1$[esp+464], eax
; Line 137
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _bufsize$1$[esp+464], esi
	mov	DWORD PTR _bsize$1$[esp+464], 8192	; 00002000H
	mov	DWORD PTR _verbose$1$[esp+464], esi
	mov	DWORD PTR _nopad$1$[esp+464], esi
	mov	DWORD PTR _enc$1$[esp+464], 1
	test	eax, eax
	jne	SHORT $LN23@enc_main
; Line 138
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN23@enc_main
; Line 139
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN23@enc_main:
; Line 141
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN354@enc_main
; Line 145
	push	40					; 00000028H
	lea	eax, DWORD PTR _pname$[esp+468]
	push	eax
	push	DWORD PTR [ebp]
	call	_program_name
	add	esp, 12					; 0000000cH
; Line 146
	lea	eax, DWORD PTR _pname$[esp+464]
	mov	ecx, OFFSET ??_C@_06JEFEFGEJ@base64?$AA@
	npad	5
$LL236@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN237@enc_main
	test	dl, dl
	je	SHORT $LN238@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN237@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL236@enc_main
$LN238@enc_main:
	xor	eax, eax
	jmp	SHORT $LN239@enc_main
$LN237@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN239@enc_main:
	test	eax, eax
	mov	ecx, 1
; Line 153
	lea	eax, DWORD PTR _pname$[esp+464]
	cmove	ebx, ecx
	push	eax
	mov	DWORD PTR _base64$2$[esp+468], ebx
	call	_EVP_get_cipherbyname
	add	esp, 4
	mov	edi, eax
	mov	DWORD PTR _cipher$1$[esp+464], edi
; Line 158
	test	ebx, ebx
	jne	SHORT $LN26@enc_main
	test	edi, edi
	jne	SHORT $LN26@enc_main
	mov	ecx, OFFSET ??_C@_03NONKPJJM@enc?$AA@
	lea	eax, DWORD PTR _pname$[esp+464]
	npad	3
$LL240@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN241@enc_main
	test	dl, dl
	je	SHORT $LN242@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN241@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL240@enc_main
$LN242@enc_main:
	xor	eax, eax
	jmp	SHORT $LN243@enc_main
$LN241@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN243@enc_main:
	test	eax, eax
	je	SHORT $LN26@enc_main
; Line 161
	lea	eax, DWORD PTR _pname$[esp+464]
	push	eax
	push	OFFSET ??_C@_0BJ@HCMGINMJ@?$CFs?5is?5an?5unknown?5cipher?6?$AA@
; Line 162
	jmp	$LN356@enc_main
$LN26@enc_main:
; Line 165
	mov	ebx, DWORD PTR _argc$[esp+460]
; Line 166
	add	ebp, 4
	dec	ebx
; Line 167
	cmp	ebx, 1
	jl	$LN3@enc_main
	npad	1
$LL2@enc_main:
; Line 168
	mov	esi, DWORD PTR [ebp]
	mov	ecx, OFFSET ??_C@_02CIKBGMLM@?9e?$AA@
	mov	eax, esi
	npad	6
$LL244@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN245@enc_main
	test	dl, dl
	je	SHORT $LN246@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN245@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL244@enc_main
$LN246@enc_main:
	xor	eax, eax
	jmp	SHORT $LN247@enc_main
$LN245@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN247@enc_main:
	test	eax, eax
	jne	SHORT $LN27@enc_main
; Line 169
	mov	DWORD PTR _enc$1$[esp+464], 1
	jmp	$LN357@enc_main
$LN27@enc_main:
; Line 170
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, esi
	npad	3
$LL248@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN249@enc_main
	test	dl, dl
	je	SHORT $LN250@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN249@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL248@enc_main
$LN250@enc_main:
	xor	eax, eax
	jmp	SHORT $LN251@enc_main
$LN249@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN251@enc_main:
	test	eax, eax
	jne	SHORT $LN29@enc_main
; Line 171
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 173
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _inf$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN29@enc_main:
; Line 174
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, esi
	npad	7
$LL252@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN253@enc_main
	test	dl, dl
	je	SHORT $LN254@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN253@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL252@enc_main
$LN254@enc_main:
	xor	eax, eax
	jmp	SHORT $LN255@enc_main
$LN253@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN255@enc_main:
	test	eax, eax
	jne	SHORT $LN32@enc_main
; Line 175
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 177
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _outf$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN32@enc_main:
; Line 178
	mov	ecx, OFFSET ??_C@_05NNOCMECB@?9pass?$AA@
	mov	eax, esi
	npad	7
$LL256@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN257@enc_main
	test	dl, dl
	je	SHORT $LN258@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN257@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL256@enc_main
$LN258@enc_main:
	xor	eax, eax
	jmp	SHORT $LN259@enc_main
$LN257@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN259@enc_main:
	test	eax, eax
	jne	SHORT $LN35@enc_main
; Line 179
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 181
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _passarg$1$[esp+464], eax
; Line 182
	jmp	$LN357@enc_main
$LN35@enc_main:
; Line 184
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
	npad	7
$LL260@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN261@enc_main
	test	dl, dl
	je	SHORT $LN262@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN261@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL260@enc_main
$LN262@enc_main:
	xor	eax, eax
	jmp	SHORT $LN263@enc_main
$LN261@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN263@enc_main:
	test	eax, eax
	jne	SHORT $LN38@enc_main
; Line 185
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 187
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _engine$1$[esp+464], eax
; Line 188
	jmp	$LN357@enc_main
$LN38@enc_main:
; Line 190
	mov	ecx, OFFSET ??_C@_02DBLKFNPN@?9d?$AA@
	mov	eax, esi
	npad	7
$LL264@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN265@enc_main
	test	dl, dl
	je	SHORT $LN266@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN265@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL264@enc_main
$LN266@enc_main:
	xor	eax, eax
	jmp	SHORT $LN267@enc_main
$LN265@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN267@enc_main:
	test	eax, eax
	jne	SHORT $LN41@enc_main
; Line 191
	mov	DWORD PTR _enc$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN41@enc_main:
; Line 192
	mov	ecx, OFFSET ??_C@_02BPBEIKKI@?9p?$AA@
	mov	eax, esi
	npad	7
$LL268@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN269@enc_main
	test	dl, dl
	je	SHORT $LN270@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN269@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL268@enc_main
$LN270@enc_main:
	xor	eax, eax
	jmp	SHORT $LN271@enc_main
$LN269@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN271@enc_main:
	test	eax, eax
	jne	SHORT $LN43@enc_main
; Line 193
	mov	DWORD PTR _printkey$1$[esp+464], 1
	jmp	$LN357@enc_main
$LN43@enc_main:
; Line 194
	mov	ecx, OFFSET ??_C@_02EJEOCNCO@?9v?$AA@
	mov	eax, esi
	npad	3
$LL272@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN273@enc_main
	test	dl, dl
	je	SHORT $LN274@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN273@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL272@enc_main
$LN274@enc_main:
	xor	eax, eax
	jmp	SHORT $LN275@enc_main
$LN273@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN275@enc_main:
	test	eax, eax
	jne	SHORT $LN45@enc_main
; Line 195
	mov	DWORD PTR _verbose$1$[esp+464], 1
	jmp	$LN357@enc_main
$LN45@enc_main:
; Line 196
	mov	ecx, OFFSET ??_C@_06MGNOFJED@?9nopad?$AA@
	mov	eax, esi
	npad	3
$LL276@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN277@enc_main
	test	dl, dl
	je	SHORT $LN278@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN277@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL276@enc_main
$LN278@enc_main:
	xor	eax, eax
	jmp	SHORT $LN279@enc_main
$LN277@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN279@enc_main:
	test	eax, eax
	jne	SHORT $LN47@enc_main
; Line 197
	mov	DWORD PTR _nopad$1$[esp+464], 1
	jmp	$LN357@enc_main
$LN47@enc_main:
; Line 198
	mov	ecx, OFFSET ??_C@_05MCHJMMHL@?9salt?$AA@
	mov	eax, esi
	npad	3
$LL280@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN281@enc_main
	test	dl, dl
	je	SHORT $LN282@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN281@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL280@enc_main
$LN282@enc_main:
	xor	eax, eax
	jmp	SHORT $LN283@enc_main
$LN281@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN283@enc_main:
	test	eax, eax
	jne	SHORT $LN49@enc_main
; Line 199
	mov	DWORD PTR _nosalt$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN49@enc_main:
; Line 200
	mov	ecx, OFFSET ??_C@_07ONPDFJOJ@?9nosalt?$AA@
	mov	eax, esi
	npad	7
$LL284@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN285@enc_main
	test	dl, dl
	je	SHORT $LN286@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN285@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL284@enc_main
$LN286@enc_main:
	xor	eax, eax
	jmp	SHORT $LN287@enc_main
$LN285@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN287@enc_main:
	test	eax, eax
	jne	SHORT $LN51@enc_main
; Line 201
	mov	DWORD PTR _nosalt$1$[esp+464], 1
	jmp	$LN357@enc_main
$LN51@enc_main:
; Line 202
	mov	ecx, OFFSET ??_C@_06OHOHKFPP@?9debug?$AA@
	mov	eax, esi
	npad	3
$LL288@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN289@enc_main
	test	dl, dl
	je	SHORT $LN290@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN289@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL288@enc_main
$LN290@enc_main:
	xor	eax, eax
	jmp	SHORT $LN291@enc_main
$LN289@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN291@enc_main:
	test	eax, eax
	jne	SHORT $LN53@enc_main
; Line 203
	mov	DWORD PTR _debug$1$[esp+464], 1
	jmp	$LN357@enc_main
$LN53@enc_main:
; Line 204
	mov	ecx, OFFSET ??_C@_02IKJAKOAK@?9P?$AA@
	mov	eax, esi
	npad	3
$LL292@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN293@enc_main
	test	dl, dl
	je	SHORT $LN294@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN293@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL292@enc_main
$LN294@enc_main:
	xor	eax, eax
	jmp	SHORT $LN295@enc_main
$LN293@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN295@enc_main:
	test	eax, eax
	jne	SHORT $LN55@enc_main
; Line 205
	mov	DWORD PTR _printkey$1$[esp+464], 2
	jmp	$LN357@enc_main
$LN55@enc_main:
; Line 206
	mov	ecx, OFFSET ??_C@_02NJEJINBK@?9A?$AA@
	mov	eax, esi
	npad	3
$LL296@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN297@enc_main
	test	dl, dl
	je	SHORT $LN298@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN297@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL296@enc_main
$LN298@enc_main:
	xor	eax, eax
	jmp	SHORT $LN299@enc_main
$LN297@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN299@enc_main:
	test	eax, eax
	jne	SHORT $LN57@enc_main
; Line 207
	mov	DWORD PTR _olb64$1$[esp+464], 1
	jmp	$LN357@enc_main
$LN57@enc_main:
; Line 208
	mov	ecx, OFFSET ??_C@_02EMMNKJLI@?9a?$AA@
	mov	eax, esi
	npad	3
$LL300@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN301@enc_main
	test	dl, dl
	je	SHORT $LN302@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN301@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL300@enc_main
$LN302@enc_main:
	xor	eax, eax
	jmp	SHORT $LN303@enc_main
$LN301@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN303@enc_main:
	test	eax, eax
	jne	SHORT $LN59@enc_main
; Line 209
	mov	DWORD PTR _base64$2$[esp+464], 1
	jmp	$LN357@enc_main
$LN59@enc_main:
; Line 210
	mov	ecx, OFFSET ??_C@_07OGJCBNJ@?9base64?$AA@
	mov	eax, esi
	npad	3
$LL304@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN305@enc_main
	test	dl, dl
	je	SHORT $LN306@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN305@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL304@enc_main
$LN306@enc_main:
	xor	eax, eax
	jmp	SHORT $LN307@enc_main
$LN305@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN307@enc_main:
	test	eax, eax
	jne	SHORT $LN61@enc_main
; Line 211
	mov	DWORD PTR _base64$2$[esp+464], 1
	jmp	$LN357@enc_main
$LN61@enc_main:
; Line 216
	mov	ecx, OFFSET ??_C@_08CBMLGKFK@?9bufsize?$AA@
	mov	eax, esi
	npad	3
$LL308@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN309@enc_main
	test	dl, dl
	je	SHORT $LN310@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN309@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL308@enc_main
$LN310@enc_main:
	xor	eax, eax
	jmp	SHORT $LN311@enc_main
$LN309@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN311@enc_main:
	test	eax, eax
	jne	SHORT $LN63@enc_main
; Line 217
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 219
	mov	esi, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _bufsize$1$[esp+464], esi
	jmp	$LN96@enc_main
$LN63@enc_main:
; Line 220
	mov	ecx, OFFSET ??_C@_02LGCCEBDC@?9k?$AA@
	mov	eax, esi
	npad	7
$LL312@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN313@enc_main
	test	dl, dl
	je	SHORT $LN314@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN313@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL312@enc_main
$LN314@enc_main:
	xor	eax, eax
	jmp	SHORT $LN315@enc_main
$LN313@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN315@enc_main:
	test	eax, eax
	jne	SHORT $LN66@enc_main
; Line 221
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 223
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _str$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN66@enc_main:
; Line 224
	mov	ecx, OFFSET ??_C@_06KHNBBAIG@?9kfile?$AA@
	mov	eax, esi
	npad	7
$LL316@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN317@enc_main
	test	dl, dl
	je	SHORT $LN318@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN317@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL316@enc_main
$LN318@enc_main:
	xor	eax, eax
	jmp	SHORT $LN319@enc_main
$LN317@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN319@enc_main:
	test	eax, eax
	jne	$LN69@enc_main
; Line 229
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 231
	mov	edi, DWORD PTR [ebp+4]
	add	ebp, 4
; Line 232
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	edi
	call	DWORD PTR __imp__fopen
	mov	esi, eax
	add	esp, 8
; Line 233
	test	esi, esi
	je	$LN202@enc_main
; Line 238
	push	esi
	push	128					; 00000080H
	push	OFFSET ?buf@?L@??enc_main@@9@9
	mov	BYTE PTR ?buf@?L@??enc_main@@9@9, 0
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN202@enc_main
; Line 242
	push	esi
	call	DWORD PTR __imp__fclose
; Line 243
	mov	ecx, OFFSET ?buf@?L@??enc_main@@9@9
	add	esp, 4
	lea	edx, DWORD PTR [ecx+1]
	npad	5
$LL320@enc_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL320@enc_main
	sub	ecx, edx
; Line 244
	test	ecx, ecx
	jle	SHORT $LN76@enc_main
	mov	eax, OFFSET ?buf@?L@??enc_main@@9@9
	dec	eax
	mov	dl, BYTE PTR [eax+ecx]
	cmp	dl, 10					; 0000000aH
	je	SHORT $LN75@enc_main
	cmp	dl, 13					; 0000000dH
	jne	SHORT $LN74@enc_main
$LN75@enc_main:
; Line 245
	dec	ecx
	cmp	ecx, 128				; 00000080H
	jae	$LN365@enc_main
	mov	BYTE PTR ?buf@?L@??enc_main@@9@9[ecx], 0
$LN74@enc_main:
; Line 246
	test	ecx, ecx
	jle	SHORT $LN76@enc_main
	mov	al, BYTE PTR [eax+ecx]
	cmp	al, 10					; 0000000aH
	je	SHORT $LN77@enc_main
	cmp	al, 13					; 0000000dH
	jne	SHORT $LN76@enc_main
$LN77@enc_main:
; Line 247
	dec	ecx
	cmp	ecx, 128				; 00000080H
	jae	$LN365@enc_main
	mov	BYTE PTR ?buf@?L@??enc_main@@9@9[ecx], 0
$LN76@enc_main:
; Line 248
	cmp	ecx, 1
	jl	$LN203@enc_main
; Line 252
	mov	edi, DWORD PTR _cipher$1$[esp+464]
	mov	eax, OFFSET ?buf@?L@??enc_main@@9@9
	mov	DWORD PTR _str$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN69@enc_main:
; Line 253
	mov	ecx, OFFSET ??_C@_02CDKGGFJA@?9K?$AA@
	mov	eax, esi
	npad	7
$LL321@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN322@enc_main
	test	dl, dl
	je	SHORT $LN323@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN322@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL321@enc_main
$LN323@enc_main:
	xor	eax, eax
	jmp	SHORT $LN324@enc_main
$LN322@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN324@enc_main:
	test	eax, eax
	jne	SHORT $LN79@enc_main
; Line 254
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 256
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _hkey$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN79@enc_main:
; Line 257
	mov	ecx, OFFSET ??_C@_02KBLNPNMJ@?9S?$AA@
	mov	eax, esi
	npad	7
$LL325@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN326@enc_main
	test	dl, dl
	je	SHORT $LN327@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN326@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL325@enc_main
$LN327@enc_main:
	xor	eax, eax
	jmp	SHORT $LN328@enc_main
$LN326@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN328@enc_main:
	test	eax, eax
	jne	SHORT $LN82@enc_main
; Line 258
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 260
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _hsalt$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN82@enc_main:
; Line 261
	mov	ecx, OFFSET ??_C@_03LCIAHJNP@?9iv?$AA@
	mov	eax, esi
	npad	7
$LL329@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN330@enc_main
	test	dl, dl
	je	SHORT $LN331@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN330@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL329@enc_main
$LN331@enc_main:
	xor	eax, eax
	jmp	SHORT $LN332@enc_main
$LN330@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN332@enc_main:
	test	eax, eax
	jne	SHORT $LN85@enc_main
; Line 262
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 264
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _hiv$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN85@enc_main:
; Line 265
	mov	ecx, OFFSET ??_C@_03MNHNKBNA@?9md?$AA@
	mov	eax, esi
	npad	7
$LL333@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN334@enc_main
	test	dl, dl
	je	SHORT $LN335@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN334@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL333@enc_main
$LN335@enc_main:
	xor	eax, eax
	jmp	SHORT $LN336@enc_main
$LN334@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN336@enc_main:
	test	eax, eax
	jne	SHORT $LN88@enc_main
; Line 266
	dec	ebx
	cmp	ebx, 1
	jl	$bad$367
; Line 268
	mov	eax, DWORD PTR [ebp+4]
	add	ebp, 4
	mov	DWORD PTR _md$1$[esp+464], eax
	jmp	$LN357@enc_main
$LN88@enc_main:
; Line 269
	mov	ecx, OFFSET ??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@
	mov	eax, esi
	npad	7
$LL337@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN338@enc_main
	test	dl, dl
	je	SHORT $LN339@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN338@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL337@enc_main
$LN339@enc_main:
	xor	eax, eax
	jmp	SHORT $LN340@enc_main
$LN338@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN340@enc_main:
	test	eax, eax
	jne	SHORT $LN91@enc_main
; Line 270
	mov	DWORD PTR _non_fips_allow$1$[esp+464], 1
	jmp	SHORT $LN357@enc_main
$LN91@enc_main:
; Line 271
	cmp	BYTE PTR [esi], 45			; 0000002dH
	jne	SHORT $LN93@enc_main
	lea	eax, DWORD PTR [esi+1]
	push	eax
	call	_EVP_get_cipherbyname
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR _cipher$1$[esp+464], edi
	test	edi, edi
	jne	SHORT $LN357@enc_main
$LN93@enc_main:
; Line 274
	mov	eax, DWORD PTR [ebp]
	mov	ecx, OFFSET ??_C@_05OKILBPAF@?9none?$AA@
$LL341@enc_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN342@enc_main
	test	dl, dl
	je	SHORT $LN343@enc_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN342@enc_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL341@enc_main
$LN343@enc_main:
	xor	eax, eax
	jmp	SHORT $LN344@enc_main
$LN342@enc_main:
	sbb	eax, eax
	or	eax, 1
$LN344@enc_main:
	test	eax, eax
	jne	$LN95@enc_main
; Line 275
	xor	edi, edi
	mov	DWORD PTR _cipher$1$[esp+464], edi
$LN357@enc_main:
	mov	esi, DWORD PTR _bufsize$1$[esp+464]
$LN96@enc_main:
; Line 321
	dec	ebx
; Line 322
	add	ebp, 4
	cmp	ebx, 1
	jge	$LL2@enc_main
$LN3@enc_main:
; Line 326
	push	0
	push	DWORD PTR _engine$1$[esp+468]
	push	DWORD PTR _bio_err
	call	_setup_engine
	add	esp, 12					; 0000000cH
; Line 329
	test	edi, edi
	je	$LN98@enc_main
	push	edi
	call	_EVP_CIPHER_flags
	add	esp, 4
	test	eax, 2097152				; 00200000H
	je	$LN97@enc_main
; Line 330
	push	OFFSET ??_C@_0CP@COKHMDNP@AEAD?5ciphers?5not?5supported?5by?5th@
$LN361@enc_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN362@enc_main:
; Line 332
	xor	edi, edi
$LN354@enc_main:
	xor	ebx, ebx
	xor	esi, esi
$LN358@enc_main:
	mov	ebp, 1
$end$368:
; Line 660
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 661
	mov	eax, DWORD PTR _strbuf$1$[esp+468]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN173@enc_main
; Line 662
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN173@enc_main:
; Line 663
	test	edi, edi
	je	SHORT $LN174@enc_main
; Line 664
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN174@enc_main:
; Line 665
	test	esi, esi
	je	SHORT $LN175@enc_main
; Line 666
	push	esi
	call	_BIO_free
	add	esp, 4
$LN175@enc_main:
; Line 667
	test	ebx, ebx
	je	SHORT $LN176@enc_main
; Line 668
	push	ebx
	call	_BIO_free_all
	add	esp, 4
$LN176@enc_main:
; Line 669
	mov	eax, DWORD PTR _benc$1$[esp+464]
	test	eax, eax
	je	SHORT $LN177@enc_main
; Line 670
	push	eax
	call	_BIO_free
	add	esp, 4
$LN177@enc_main:
; Line 671
	mov	eax, DWORD PTR _b64$1$[esp+464]
	test	eax, eax
	je	SHORT $LN178@enc_main
; Line 672
	push	eax
	call	_BIO_free
	add	esp, 4
$LN178@enc_main:
; Line 677
	mov	ecx, DWORD PTR _pass$[esp+464]
	test	ecx, ecx
	je	SHORT $LN179@enc_main
; Line 678
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN179@enc_main:
; Line 681
	mov	ecx, DWORD PTR __$ArrayPad$[esp+464]
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	ret	0
$LN203@enc_main:
; Line 249
	push	OFFSET ??_C@_0BG@LPMLMKBM@zero?5length?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 250
	jmp	SHORT $bad$367
$LN202@enc_main:
; Line 239
	push	edi
	push	OFFSET ??_C@_0BO@DDOLNDDD@unable?5to?5read?5key?5from?5?8?$CFs?8?6?$AA@
; Line 240
	jmp	SHORT $LN356@enc_main
$LN95@enc_main:
; Line 277
	push	DWORD PTR [ebp]
	push	OFFSET ??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@
$LN356@enc_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$bad$367:
; Line 279
	push	OFFSET ??_C@_0N@NDELNNPO@options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 280
	push	OFFSET ??_C@_0L@MCDAPHEJ@?9in?5?$DMfile?$DO?$AA@
	push	OFFSET ??_C@_0BC@LCJBKLPE@?$CF?914s?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 281
	push	OFFSET ??_C@_0M@NOKEFDHL@?9out?5?$DMfile?$DO?$AA@
	push	OFFSET ??_C@_0BD@CNOLDGMD@?$CF?914s?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 282
	push	OFFSET ??_C@_0M@PMHOLJCA@?9pass?5?$DMarg?$DO?$AA@
	push	OFFSET ??_C@_0BK@POAOHLNN@?$CF?914s?5pass?5phrase?5source?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 283
	push	OFFSET ??_C@_02CIKBGMLM@?9e?$AA@
	push	OFFSET ??_C@_0P@BFGGPMIJ@?$CF?914s?5encrypt?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 284
	push	OFFSET ??_C@_02DBLKFNPN@?9d?$AA@
	push	OFFSET ??_C@_0P@FPHHPEJM@?$CF?914s?5decrypt?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 285
	push	OFFSET ??_C@_0L@COKJKPLA@?9a?1?9base64?$AA@
	push	OFFSET ??_C@_0DK@LPPOLBLG@?$CF?914s?5base64?5encode?1decode?0?5depe@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 288
	push	OFFSET ??_C@_02LGCCEBDC@?9k?$AA@
	push	OFFSET ??_C@_0CH@CGJBDIAG@?$CF?914s?5passphrase?5is?5the?5next?5arg@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 290
	push	OFFSET ??_C@_06KHNBBAIG@?9kfile?$AA@
	push	OFFSET ??_C@_0DJ@DFLMLDAL@?$CF?914s?5passphrase?5is?5the?5first?5li@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 293
	push	OFFSET ??_C@_03MNHNKBNA@?9md?$AA@
	push	OFFSET ??_C@_0DK@DILGBNBM@?$CF?914s?5the?5next?5argument?5is?5the?5m@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 296
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0DK@BHJOLGDM@?$CF?914s?5?5?5from?5a?5passphrase?4?5?5One?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 299
	push	OFFSET ??_C@_02KBLNPNMJ@?9S?$AA@
	push	OFFSET ??_C@_0CI@BOHLJIBO@?$CF?914s?5salt?5in?5hex?5is?5the?5next?5ar@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 72					; 00000048H
; Line 301
	push	OFFSET ??_C@_06IGMMGDJL@?9K?1?9iv?$AA@
	push	OFFSET ??_C@_0CK@DOLNPBBA@?$CF?914s?5key?1iv?5in?5hex?5is?5the?5next?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 303
	push	OFFSET ??_C@_05LCFKBLFL@?9?$FLpP?$FN?$AA@
	push	OFFSET ??_C@_0CK@JJEIICIG@?$CF?914s?5print?5the?5iv?1key?5?$CIthen?5exi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 305
	push	OFFSET ??_C@_0N@PNCHCKKB@?9bufsize?5?$DMn?$DO?$AA@
	push	OFFSET ??_C@_0BD@PKCLAKIF@?$CF?914s?5buffer?5size?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 306
	push	OFFSET ??_C@_06MGNOFJED@?9nopad?$AA@
	push	OFFSET ??_C@_0CG@EJNGOCOA@?$CF?914s?5disable?5standard?5block?5pad@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 309
	push	OFFSET ??_C@_09BOJEFCGN@?9engine?5e?$AA@
	push	OFFSET ??_C@_0DB@HCMDFGCL@?$CF?914s?5use?5engine?5e?0?5possibly?5a?5h@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 314
	push	OFFSET ??_C@_0O@OGIPHMMM@Cipher?5Types?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 315
	push	DWORD PTR _bio_err
	push	OFFSET _show_ciphers
	push	2
	call	_OBJ_NAME_do_all_sorted
; Line 317
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 319
	jmp	$LN362@enc_main
$LN97@enc_main:
; Line 335
	push	edi
	call	_EVP_CIPHER_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	cmp	eax, 65537				; 00010001H
	jne	SHORT $LN98@enc_main
; Line 336
	push	OFFSET ??_C@_0DK@FGOBOAAH@Ciphers?5in?5XTS?5mode?5are?5not?5supp@
; Line 338
	jmp	$LN361@enc_main
$LN98@enc_main:
; Line 341
	mov	ebx, DWORD PTR _md$1$[esp+464]
	test	ebx, ebx
	je	SHORT $LN233@enc_main
	push	ebx
	call	_EVP_get_digestbyname
	mov	ebp, eax
	add	esp, 4
	test	ebp, ebp
	jne	SHORT $LN100@enc_main
; Line 342
	push	ebx
	push	OFFSET ??_C@_0CK@PCPNIALC@?$CFs?5is?5an?5unsupported?5message?5dig@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 343
	jmp	$LN362@enc_main
$LN233@enc_main:
; Line 347
	call	_EVP_md5
	mov	ebp, eax
$LN100@enc_main:
; Line 350
	test	esi, esi
	je	$LN349@enc_main
; Line 353
	mov	al, BYTE PTR [esi]
	xor	ebx, ebx
	mov	DWORD PTR _bsize$1$[esp+464], ebx
	test	al, al
	je	SHORT $LN105@enc_main
	npad	4
$LL6@enc_main:
; Line 354
	movzx	ecx, al
; Line 355
	lea	eax, DWORD PTR [ecx-48]
	cmp	eax, 9
	ja	SHORT $LN102@enc_main
; Line 356
	lea	eax, DWORD PTR [ebx+ebx*4]
	lea	ebx, DWORD PTR [eax-24]
	lea	ebx, DWORD PTR [ecx+ebx*2]
	mov	DWORD PTR _bsize$1$[esp+464], ebx
	jmp	SHORT $LN4@enc_main
$LN102@enc_main:
; Line 357
	cmp	ecx, 107				; 0000006bH
	je	SHORT $LN208@enc_main
$LN4@enc_main:
; Line 353
	mov	al, BYTE PTR [esi+1]
	inc	esi
	mov	DWORD PTR _bufsize$1$[esp+464], esi
	test	al, al
	jne	SHORT $LL6@enc_main
$LN105@enc_main:
; Line 369
	cmp	DWORD PTR _base64$2$[esp+464], 0
	je	SHORT $LN106@enc_main
	mov	eax, 80					; 00000050H
	cmp	ebx, eax
	cmovb	ebx, eax
	mov	DWORD PTR _bsize$1$[esp+464], ebx
$LN106@enc_main:
; Line 373
	cmp	DWORD PTR _verbose$1$[esp+464], 0
	je	SHORT $LN107@enc_main
; Line 374
	push	ebx
	push	OFFSET ??_C@_0M@HOAILMMA@bufsize?$DN?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN107@enc_main
$LN208@enc_main:
; Line 359
	inc	esi
	shl	ebx, 10					; 0000000aH
	mov	DWORD PTR _bsize$1$[esp+464], ebx
	mov	DWORD PTR _bufsize$1$[esp+464], esi
; Line 363
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN105@enc_main
; Line 364
	push	OFFSET ??_C@_0BO@HPNFKOKN@invalid?5?8bufsize?8?5specified?4?6?$AA@
; Line 365
	jmp	$LN361@enc_main
$LN349@enc_main:
	mov	ebx, 8192				; 00002000H
$LN107@enc_main:
; Line 377
	push	377					; 00000179H
	push	OFFSET ??_C@_0N@PKNDKPBG@?4?2apps?2enc?4c?$AA@
	push	512					; 00000200H
	call	_CRYPTO_malloc
	mov	DWORD PTR _strbuf$1$[esp+476], eax
; Line 378
	lea	ecx, DWORD PTR [ebx+2]
	mov	eax, 1431655766				; 55555556H
	imul	ecx
	mov	eax, 715827883				; 2aaaaaabH
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	imul	ebx
	push	378					; 0000017aH
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	OFFSET ??_C@_0N@PKNDKPBG@?4?2apps?2enc?4c?$AA@
	lea	eax, DWORD PTR [eax+ecx*2]
	lea	esi, DWORD PTR [eax*2+82]
	push	esi
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 24					; 00000018H
	mov	DWORD PTR _buff$1$[esp+464], edi
; Line 379
	test	edi, edi
	je	$LN109@enc_main
	cmp	DWORD PTR _strbuf$1$[esp+464], 0
	je	$LN109@enc_main
; Line 385
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	mov	DWORD PTR _in$1$[esp+468], esi
; Line 386
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 8
	mov	ebx, eax
	mov	DWORD PTR _out$1$[esp+464], ebx
; Line 387
	test	esi, esi
	je	$LN111@enc_main
	test	ebx, ebx
	je	$LN111@enc_main
; Line 391
	cmp	DWORD PTR _debug$1$[esp+464], 0
	je	SHORT $LN112@enc_main
; Line 392
	push	OFFSET _BIO_debug_callback
	push	esi
	call	_BIO_set_callback
; Line 393
	push	OFFSET _BIO_debug_callback
	push	ebx
	call	_BIO_set_callback
; Line 394
	push	DWORD PTR _bio_err
	push	esi
	call	_BIO_set_callback_arg
; Line 395
	push	DWORD PTR _bio_err
	push	ebx
	call	_BIO_set_callback_arg
	add	esp, 32					; 00000020H
$LN112@enc_main:
; Line 398
	mov	ebx, DWORD PTR _inf$1$[esp+464]
	mov	edi, DWORD PTR __imp__setvbuf
	test	ebx, ebx
	jne	$LN113@enc_main
; Line 400
	cmp	DWORD PTR _bufsize$1$[esp+464], 0
	je	SHORT $LN115@enc_main
; Line 401
	push	0
	push	4
	push	0
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	edi
	add	esp, 16					; 00000010H
$LN115@enc_main:
; Line 403
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN116@enc_main:
; Line 411
	mov	esi, DWORD PTR _str$1$[esp+464]
	test	esi, esi
	jne	$LN8@enc_main
	mov	eax, DWORD PTR _passarg$1$[esp+464]
	test	eax, eax
	je	SHORT $LN234@enc_main
; Line 412
	push	esi
	lea	ecx, DWORD PTR _pass$[esp+468]
	push	ecx
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN118@enc_main
; Line 413
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN350@enc_main:
; Line 414
	mov	edi, DWORD PTR _buff$1$[esp+464]
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN113@enc_main:
; Line 405
	push	ebx
	push	3
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN116@enc_main
; Line 406
	push	ebx
	call	DWORD PTR __imp__perror
; Line 407
	mov	edi, DWORD PTR _buff$1$[esp+468]
	add	esp, 4
	mov	ebx, DWORD PTR _out$1$[esp+464]
	jmp	$LN358@enc_main
$LN118@enc_main:
; Line 416
	mov	esi, DWORD PTR _pass$[esp+464]
	mov	DWORD PTR _str$1$[esp+464], esi
; Line 419
	test	esi, esi
	jne	$LN8@enc_main
$LN234@enc_main:
	mov	ebx, DWORD PTR _cipher$1$[esp+464]
	test	ebx, ebx
	je	$LN8@enc_main
	cmp	DWORD PTR _hkey$1$[esp+464], 0
	jne	$LN8@enc_main
; Line 423
	cmp	DWORD PTR _enc$1$[esp+464], 0
	mov	eax, OFFSET ??_C@_0L@EIHLODJK@decryption?$AA@
	mov	esi, OFFSET ??_C@_0L@HBBFMHKN@encryption?$AA@
	cmove	esi, eax
	push	esi
	push	ebx
	call	_EVP_CIPHER_nid
	push	eax
	call	_OBJ_nid2ln
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BG@PAGOAIAK@enter?5?$CFs?5?$CFs?5password?3?$AA@
	lea	eax, DWORD PTR _buf$1[esp+476]
	push	200					; 000000c8H
	push	eax
	call	_BIO_snprintf
; Line 427
	push	DWORD PTR _enc$1$[esp+484]
	mov	eax, DWORD PTR _strbuf$1$[esp+488]
	lea	ecx, DWORD PTR _buf$1[esp+488]
	push	ecx
	push	512					; 00000200H
	push	eax
	mov	BYTE PTR [eax], 0
	call	_EVP_read_pw_string
	add	esp, 36					; 00000024H
; Line 428
	test	eax, eax
	je	SHORT $LN209@enc_main
$LN359@enc_main:
; Line 436
	js	SHORT $LN210@enc_main
; Line 423
	push	esi
	push	ebx
	call	_EVP_CIPHER_nid
	push	eax
	call	_OBJ_nid2ln
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BG@PAGOAIAK@enter?5?$CFs?5?$CFs?5password?3?$AA@
	lea	eax, DWORD PTR _buf$1[esp+476]
	push	200					; 000000c8H
	push	eax
	call	_BIO_snprintf
; Line 427
	push	DWORD PTR _enc$1$[esp+484]
	mov	eax, DWORD PTR _strbuf$1$[esp+488]
	lea	ecx, DWORD PTR _buf$1[esp+488]
	push	ecx
	push	512					; 00000200H
	push	eax
	mov	BYTE PTR [eax], 0
	call	_EVP_read_pw_string
	add	esp, 36					; 00000024H
; Line 428
	test	eax, eax
	jne	SHORT $LN359@enc_main
$LN209@enc_main:
; Line 429
	mov	eax, DWORD PTR _strbuf$1$[esp+464]
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LN121@enc_main
; Line 431
	mov	edi, DWORD PTR _buff$1$[esp+464]
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN210@enc_main:
; Line 437
	push	OFFSET ??_C@_0BD@PFMPADAJ@bad?5password?5read?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 438
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN121@enc_main:
; Line 433
	mov	esi, eax
	mov	DWORD PTR _str$1$[esp+464], esi
$LN8@enc_main:
; Line 443
	mov	ebx, DWORD PTR _outf$1$[esp+464]
	test	ebx, ebx
	jne	$LN123@enc_main
; Line 444
	mov	ebx, DWORD PTR __imp____acrt_iob_func
	push	1
	call	ebx
	push	eax
	push	0
	push	106					; 0000006aH
	push	DWORD PTR _out$1$[esp+480]
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
; Line 446
	cmp	DWORD PTR _bufsize$1$[esp+464], 0
	je	SHORT $LN126@enc_main
; Line 447
	push	0
	push	4
	push	0
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	edi
	add	esp, 16					; 00000010H
$LN126@enc_main:
; Line 477
	cmp	DWORD PTR _base64$2$[esp+464], 0
	mov	ebx, DWORD PTR _in$1$[esp+464]
	mov	edi, DWORD PTR _out$1$[esp+464]
	je	$LN132@enc_main
; Line 478
	call	_BIO_f_base64
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _b64$1$[esp+464], eax
	test	eax, eax
	je	$LN350@enc_main
; Line 480
	cmp	DWORD PTR _debug$1$[esp+464], 0
	je	SHORT $LN129@enc_main
; Line 481
	push	OFFSET _BIO_debug_callback
	push	eax
	call	_BIO_set_callback
; Line 482
	push	DWORD PTR _bio_err
	mov	eax, DWORD PTR _b64$1$[esp+476]
	push	eax
	call	_BIO_set_callback_arg
	mov	eax, DWORD PTR _b64$1$[esp+480]
	add	esp, 16					; 00000010H
$LN129@enc_main:
; Line 484
	cmp	DWORD PTR _olb64$1$[esp+464], 0
	je	SHORT $LN130@enc_main
; Line 485
	push	256					; 00000100H
	push	eax
	call	_BIO_set_flags
	add	esp, 8
$LN130@enc_main:
; Line 486
	cmp	DWORD PTR _enc$1$[esp+464], 0
; Line 487
	mov	eax, DWORD PTR _b64$1$[esp+464]
	je	SHORT $LN131@enc_main
	push	DWORD PTR _out$1$[esp+464]
	push	eax
	call	_BIO_push
	mov	edi, eax
	jmp	SHORT $LN360@enc_main
$LN123@enc_main:
; Line 456
	push	ebx
	push	5
	push	108					; 0000006cH
	push	DWORD PTR _out$1$[esp+476]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	$LN126@enc_main
; Line 457
	push	ebx
	call	DWORD PTR __imp__perror
; Line 458
	mov	edi, DWORD PTR _buff$1$[esp+468]
	add	esp, 4
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN131@enc_main:
; Line 489
	push	DWORD PTR _in$1$[esp+464]
	push	eax
	call	_BIO_push
	mov	ebx, eax
$LN360@enc_main:
	add	esp, 8
$LN132@enc_main:
; Line 492
	cmp	DWORD PTR _cipher$1$[esp+464], 0
	je	$LN168@enc_main
; Line 497
	test	esi, esi
	je	$LN348@enc_main
; Line 503
	cmp	DWORD PTR _nosalt$1$[esp+464], 0
	je	SHORT $LN135@enc_main
; Line 504
	xor	edx, edx
	jmp	$LN136@enc_main
$LN135@enc_main:
; Line 506
	cmp	DWORD PTR _enc$1$[esp+464], 0
; Line 508
	push	8
	je	$LN137@enc_main
; Line 507
	mov	eax, DWORD PTR _hsalt$1$[esp+468]
	test	eax, eax
	je	SHORT $LN139@enc_main
; Line 508
	lea	ecx, DWORD PTR _salt$[esp+468]
	push	ecx
	push	eax
	call	_set_hex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN142@enc_main
; Line 509
	push	OFFSET ??_C@_0BI@CHFGPCFC@invalid?5hex?5salt?5value?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 510
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN139@enc_main:
; Line 512
	lea	eax, DWORD PTR _salt$[esp+468]
	push	eax
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	js	$LN350@enc_main
$LN142@enc_main:
; Line 518
	cmp	DWORD PTR _printkey$1$[esp+464], 2
	je	$LN148@enc_main
	push	8
	push	OFFSET ?magic@?1??enc_main@@9@9
	push	edi
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 8
	jne	SHORT $LN144@enc_main
	push	eax
	lea	eax, DWORD PTR _salt$[esp+468]
	push	eax
	push	edi
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 8
	je	SHORT $LN148@enc_main
$LN144@enc_main:
; Line 523
	push	OFFSET ??_C@_0BL@EIAJMMHP@error?5writing?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 524
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN137@enc_main:
; Line 527
	lea	eax, DWORD PTR _mbuf$[esp+468]
	push	eax
	push	ebx
	call	_BIO_read
	add	esp, 12					; 0000000cH
	cmp	eax, 8
	jne	$LN147@enc_main
	push	eax
	lea	eax, DWORD PTR _salt$[esp+468]
	push	eax
	push	ebx
	call	_BIO_read
	add	esp, 12					; 0000000cH
	cmp	eax, 8
	jne	$LN147@enc_main
; Line 532
	lea	ecx, DWORD PTR _mbuf$[esp+464]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR ?magic@?1??enc_main@@9@9
	jne	SHORT $LN345@enc_main
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR ?magic@?1??enc_main@@9@9+4
	jne	SHORT $LN345@enc_main
$LN148@enc_main:
; Line 537
	lea	edx, DWORD PTR _salt$[esp+464]
$LN136@enc_main:
; Line 540
	mov	ecx, esi
	lea	esi, DWORD PTR [ecx+1]
$LL346@enc_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL346@enc_main
	lea	eax, DWORD PTR _iv$[esp+464]
	sub	ecx, esi
	mov	esi, DWORD PTR _str$1$[esp+464]
	push	eax
	lea	eax, DWORD PTR _key$[esp+468]
	push	eax
	push	1
	push	ecx
	push	esi
	push	edx
	push	ebp
	mov	ebp, DWORD PTR _cipher$1$[esp+492]
	push	ebp
	call	_EVP_BytesToKey
	add	esp, 32					; 00000020H
; Line 546
	cmp	esi, DWORD PTR _strbuf$1$[esp+464]
	jne	SHORT $LN149@enc_main
; Line 547
	push	512					; 00000200H
	push	esi
	call	_OPENSSL_cleanse
	add	esp, 8
	jmp	SHORT $LN150@enc_main
$LN149@enc_main:
; Line 549
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL347@enc_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL347@enc_main
	sub	ecx, edx
	push	ecx
	push	esi
	call	_OPENSSL_cleanse
	add	esp, 8
	jmp	SHORT $LN150@enc_main
$LN345@enc_main:
; Line 533
	push	OFFSET ??_C@_0BC@EBPGDKNI@bad?5magic?5number?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 534
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN147@enc_main:
; Line 530
	push	OFFSET ??_C@_0BK@JCEEIGID@error?5reading?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 531
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN348@enc_main:
	mov	ebp, DWORD PTR _cipher$1$[esp+464]
$LN150@enc_main:
; Line 551
	cmp	DWORD PTR _hiv$1$[esp+464], 0
	je	$LN232@enc_main
; Line 552
	push	ebp
	call	_EVP_CIPHER_iv_length
	add	esp, 4
; Line 553
	test	eax, eax
	jne	SHORT $LN152@enc_main
; Line 554
	push	OFFSET ??_C@_0CE@KHDBNACI@warning?3?5iv?5not?5use?5by?5this?5ciph@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN155@enc_main:
; Line 570
	mov	esi, DWORD PTR _hkey$1$[esp+464]
	test	esi, esi
	je	$LN156@enc_main
	push	ebp
	call	_EVP_CIPHER_key_length
	push	eax
	lea	eax, DWORD PTR _key$[esp+472]
	push	eax
	push	esi
	call	_set_hex
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN156@enc_main
; Line 571
	push	OFFSET ??_C@_0BH@OLJHIIIL@invalid?5hex?5key?5value?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 572
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN152@enc_main:
; Line 555
	push	16					; 00000010H
	lea	eax, DWORD PTR _iv$[esp+468]
	push	eax
	push	DWORD PTR _hiv$1$[esp+472]
	call	_set_hex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN155@enc_main
; Line 556
	push	OFFSET ??_C@_0BG@NHKOPNKN@invalid?5hex?5iv?5value?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 557
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN232@enc_main:
; Line 561
	test	esi, esi
	jne	$LN155@enc_main
	push	ebp
	call	_EVP_CIPHER_iv_length
	add	esp, 4
	test	eax, eax
	je	$LN155@enc_main
; Line 567
	push	OFFSET ??_C@_0O@IPGGFIND@iv?5undefined?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 568
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN156@enc_main:
; Line 575
	call	_BIO_f_cipher
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _benc$1$[esp+464], eax
	test	eax, eax
	je	$LN350@enc_main
; Line 583
	lea	ecx, DWORD PTR _ctx$[esp+464]
	push	ecx
	push	0
	push	129					; 00000081H
	push	eax
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 585
	cmp	DWORD PTR _non_fips_allow$1$[esp+464], 0
	je	SHORT $LN158@enc_main
; Line 586
	push	32768					; 00008000H
	push	DWORD PTR _ctx$[esp+468]
	call	_EVP_CIPHER_CTX_set_flags
	add	esp, 8
$LN158@enc_main:
; Line 588
	mov	esi, DWORD PTR _enc$1$[esp+464]
	push	esi
	push	0
	push	0
	push	0
	push	ebp
	push	DWORD PTR _ctx$[esp+484]
	call	_EVP_CipherInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN159@enc_main
$LN363@enc_main:
; Line 589
	push	ebp
	call	_EVP_CIPHER_nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	push	OFFSET ??_C@_0BJ@IAIFPEPB@Error?5setting?5cipher?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 591
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 592
	mov	edi, DWORD PTR _buff$1$[esp+488]
	add	esp, 24					; 00000018H
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN159@enc_main:
; Line 595
	cmp	DWORD PTR _nopad$1$[esp+464], 0
	je	SHORT $LN160@enc_main
; Line 596
	push	0
	push	DWORD PTR _ctx$[esp+468]
	call	_EVP_CIPHER_CTX_set_padding
	add	esp, 8
$LN160@enc_main:
; Line 598
	push	esi
	lea	eax, DWORD PTR _iv$[esp+468]
	push	eax
	lea	eax, DWORD PTR _key$[esp+472]
	push	eax
	push	0
	push	0
	push	DWORD PTR _ctx$[esp+484]
	call	_EVP_CipherInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN363@enc_main
; Line 605
	cmp	DWORD PTR _debug$1$[esp+464], 0
	je	SHORT $LN162@enc_main
; Line 606
	mov	esi, DWORD PTR _benc$1$[esp+464]
	push	OFFSET _BIO_debug_callback
	push	esi
	call	_BIO_set_callback
; Line 607
	push	DWORD PTR _bio_err
	push	esi
	call	_BIO_set_callback_arg
	add	esp, 16					; 00000010H
$LN162@enc_main:
; Line 610
	cmp	DWORD PTR _printkey$1$[esp+464], 0
	je	$LN167@enc_main
; Line 611
	cmp	DWORD PTR _nosalt$1$[esp+464], 0
	jne	SHORT $LN164@enc_main
; Line 612
	push	OFFSET ??_C@_05CPDJLPEH@salt?$DN?$AA@
	call	_printf
	add	esp, 4
; Line 613
	xor	esi, esi
	npad	7
$LL12@enc_main:
; Line 614
	movzx	eax, BYTE PTR _salt$[esp+esi+464]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 8
	jl	SHORT $LL12@enc_main
; Line 615
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
	add	esp, 4
$LN164@enc_main:
; Line 617
	cmp	DWORD PTR [ebp+8], 0
	jle	SHORT $LN165@enc_main
; Line 618
	push	OFFSET ??_C@_04OKAPFCOO@key?$DN?$AA@
	call	_printf
; Line 619
	xor	esi, esi
	add	esp, 4
	cmp	DWORD PTR [ebp+8], esi
	jle	SHORT $LN14@enc_main
$LL15@enc_main:
; Line 620
	movzx	eax, BYTE PTR _key$[esp+esi+464]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, DWORD PTR [ebp+8]
	jl	SHORT $LL15@enc_main
$LN14@enc_main:
; Line 621
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
	add	esp, 4
$LN165@enc_main:
; Line 623
	cmp	DWORD PTR [ebp+12], 0
	jle	SHORT $LN166@enc_main
; Line 624
	push	OFFSET ??_C@_04LBAOOMMA@iv?5?$DN?$AA@
	call	_printf
; Line 625
	xor	esi, esi
	add	esp, 4
	cmp	DWORD PTR [ebp+12], esi
	jle	SHORT $LN17@enc_main
	npad	13
$LL18@enc_main:
; Line 626
	movzx	eax, BYTE PTR _iv$[esp+esi+464]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, DWORD PTR [ebp+12]
	jl	SHORT $LL18@enc_main
$LN17@enc_main:
; Line 627
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
	add	esp, 4
$LN166@enc_main:
; Line 629
	cmp	DWORD PTR _printkey$1$[esp+464], 2
	jne	SHORT $LN167@enc_main
; Line 631
	mov	edi, DWORD PTR _buff$1$[esp+464]
	xor	ebp, ebp
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$end$368
$LN167@enc_main:
; Line 638
	push	edi
	push	DWORD PTR _benc$1$[esp+468]
	call	_BIO_push
	add	esp, 8
	mov	edi, eax
$LN168@enc_main:
; Line 641
	mov	ebp, DWORD PTR _bsize$1$[esp+464]
	push	ebp
	push	DWORD PTR _buff$1$[esp+468]
	push	ebx
	call	_BIO_read
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 642
	test	esi, esi
	jle	SHORT $LN211@enc_main
	npad	6
$LL19@enc_main:
; Line 644
	push	esi
	push	DWORD PTR _buff$1$[esp+468]
	push	edi
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, esi
	jne	$LN144@enc_main
; Line 641
	push	ebp
	push	DWORD PTR _buff$1$[esp+468]
	push	ebx
	call	_BIO_read
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 642
	test	esi, esi
	jg	SHORT $LL19@enc_main
$LN211@enc_main:
; Line 649
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN171@enc_main
; Line 650
	push	OFFSET ??_C@_0N@NBFJJOIE@bad?5decrypt?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	edi, DWORD PTR _buff$1$[esp+472]
	add	esp, 8
	mov	ebx, DWORD PTR _out$1$[esp+464]
	mov	esi, DWORD PTR _in$1$[esp+464]
	jmp	$LN358@enc_main
$LN171@enc_main:
; Line 656
	mov	esi, DWORD PTR _in$1$[esp+464]
	xor	ebp, ebp
	cmp	DWORD PTR _verbose$1$[esp+464], ebp
	je	SHORT $LN353@enc_main
	push	esi
	call	_BIO_number_read
	push	eax
	push	OFFSET ??_C@_0BE@PJJCHJPP@bytes?5read?5?5?5?3?$CF8ld?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 657
	mov	ebx, DWORD PTR _out$1$[esp+480]
	push	ebx
	call	_BIO_number_written
	push	eax
	push	OFFSET ??_C@_0BE@EFCLFIA@bytes?5written?3?$CF8ld?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	edi, DWORD PTR _buff$1$[esp+496]
	add	esp, 32					; 00000020H
	jmp	$end$368
$LN111@enc_main:
; Line 388
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 389
	jmp	$LN358@enc_main
$LN109@enc_main:
; Line 380
	push	esi
	push	OFFSET ??_C@_0BM@BGDPIIAJ@OPENSSL_malloc?5failure?5?$CFld?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$LN354@enc_main
$LN353@enc_main:
	mov	edi, DWORD PTR _buff$1$[esp+464]
	mov	ebx, DWORD PTR _out$1$[esp+464]
	jmp	$end$368
$LN365@enc_main:
; Line 247
	call	___report_rangecheckfailure
$LN366@enc_main:
$LN355@enc_main:
	int	3
_enc_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _show_ciphers
_TEXT	SEGMENT
_name$ = 8						; size = 4
_bio_$ = 12						; size = 4
_show_ciphers PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\enc.c
; Line 85
	push	esi
; Line 89
	mov	esi, DWORD PTR _name$[esp]
	mov	eax, DWORD PTR [esi+8]
	movzx	eax, BYTE PTR [eax]
	push	eax
	call	DWORD PTR __imp__islower
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@show_ciphe
; Line 92
	push	DWORD PTR [esi+8]
	mov	esi, DWORD PTR _bio_$[esp+4]
	push	OFFSET ??_C@_06NOFJDKIJ@?9?$CF?925s?$AA@
	push	esi
	call	_BIO_printf
; Line 93
	mov	eax, DWORD PTR ?n@?1??show_ciphers@@9@9
	add	esp, 12					; 0000000cH
	inc	eax
	mov	DWORD PTR ?n@?1??show_ciphers@@9@9, eax
	cmp	eax, 3
	jne	SHORT $LN3@show_ciphe
; Line 94
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_printf
; Line 97
	add	esp, 8
	mov	DWORD PTR ?n@?1??show_ciphers@@9@9, 0
	pop	esi
; Line 98
	ret	0
$LN3@show_ciphe:
; Line 97
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
$LN4@show_ciphe:
	pop	esi
; Line 98
	ret	0
_show_ciphers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_hex
_TEXT	SEGMENT
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_size$ = 16						; size = 4
_set_hex PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\enc.c
; Line 684
	push	esi
	push	edi
; Line 688
	mov	edi, DWORD PTR _in$[esp+4]
	mov	esi, edi
	lea	ecx, DWORD PTR [esi+1]
	npad	5
$LL21@set_hex:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL21@set_hex
	sub	esi, ecx
; Line 689
	mov	ecx, DWORD PTR _size$[esp+4]
	lea	eax, DWORD PTR [ecx+ecx]
	cmp	esi, eax
	jle	SHORT $LN5@set_hex
; Line 690
	push	OFFSET ??_C@_0BI@MDNEACDE@hex?5string?5is?5too?5long?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 691
	xor	eax, eax
	pop	edi
	pop	esi
; Line 715
	ret	0
$LN5@set_hex:
	push	ebx
; Line 693
	mov	ebx, DWORD PTR _out$[esp+8]
	push	ecx
	push	0
	push	ebx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 694
	xor	edx, edx
	test	esi, esi
	jle	SHORT $LN3@set_hex
$LL4@set_hex:
; Line 695
	mov	al, BYTE PTR [edi]
; Line 696
	lea	edi, DWORD PTR [edi+1]
	mov	BYTE PTR [edi-1], 0
; Line 697
	test	al, al
	je	SHORT $LN3@set_hex
; Line 699
	lea	ecx, DWORD PTR [eax-48]
	cmp	cl, 9
	ja	SHORT $LN7@set_hex
; Line 700
	mov	al, cl
	jmp	SHORT $LN12@set_hex
$LN7@set_hex:
; Line 701
	lea	ecx, DWORD PTR [eax-65]
	cmp	cl, 5
	ja	SHORT $LN9@set_hex
; Line 702
	add	al, 201					; 000000c9H
	jmp	SHORT $LN12@set_hex
$LN9@set_hex:
; Line 703
	lea	ecx, DWORD PTR [eax-97]
	cmp	cl, 5
	ja	SHORT $LN11@set_hex
; Line 704
	add	al, 169					; 000000a9H
$LN12@set_hex:
; Line 709
	test	dl, 1
	je	SHORT $LN13@set_hex
; Line 710
	mov	ecx, edx
	test	ecx, ecx
	jns	SHORT $LN24@set_hex
	add	ecx, 1
$LN24@set_hex:
	sar	ecx, 1
	or	BYTE PTR [ecx+ebx], al
	jmp	SHORT $LN2@set_hex
$LN13@set_hex:
; Line 712
	shl	al, 4
	mov	ecx, edx
	test	ecx, ecx
	jns	SHORT $LN25@set_hex
	add	ecx, 1
$LN25@set_hex:
	sar	ecx, 1
	mov	BYTE PTR [ecx+ebx], al
$LN2@set_hex:
; Line 694
	inc	edx
	cmp	edx, esi
	jl	SHORT $LL4@set_hex
$LN3@set_hex:
	pop	ebx
	pop	edi
; Line 714
	mov	eax, 1
	pop	esi
; Line 715
	ret	0
$LN11@set_hex:
; Line 706
	push	OFFSET ??_C@_0P@NEFOCAMN@non?9hex?5digit?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 707
	xor	eax, eax
	pop	ebx
	pop	edi
	pop	esi
; Line 715
	ret	0
_set_hex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

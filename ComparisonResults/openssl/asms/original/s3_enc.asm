; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_01FHEEJDEE@A?$AA@				; `string'
PUBLIC	??_C@_02LBOPFCME@BB?$AA@			; `string'
PUBLIC	??_C@_03POJCPIGP@CCC?$AA@			; `string'
;	COMDAT ??_C@_03POJCPIGP@CCC?$AA@
CONST	SEGMENT
??_C@_03POJCPIGP@CCC?$AA@ DB 'CCC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LBOPFCME@BB?$AA@
CONST	SEGMENT
??_C@_02LBOPFCME@BB?$AA@ DB 'BB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FHEEJDEE@A?$AA@
CONST	SEGMENT
??_C@_01FHEEJDEE@A?$AA@ DB 'A', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_ssl3_pad_1 DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
	DB	036H
_ssl3_pad_2 DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
	DB	05cH
?salt@?1??ssl3_generate_master_secret@@9@9 DD FLAT:??_C@_01FHEEJDEE@A?$AA@ ; `ssl3_generate_master_secret'::`2'::salt
	DD	FLAT:??_C@_02LBOPFCME@BB?$AA@
	DD	FLAT:??_C@_03POJCPIGP@CCC?$AA@
_DATA	ENDS
PUBLIC	_ssl3_init_finished_mac
PUBLIC	_ssl3_setup_key_block
PUBLIC	_ssl3_change_cipher_state
PUBLIC	_ssl3_cleanup_key_block
PUBLIC	_ssl3_generate_master_secret
PUBLIC	_ssl3_final_finish_mac
PUBLIC	_ssl3_cert_verify_mac
PUBLIC	_ssl3_finish_mac
PUBLIC	_ssl3_enc
PUBLIC	_n_ssl3_mac
PUBLIC	_ssl3_free_digest_list
PUBLIC	_ssl3_digest_cached_records
PUBLIC	_ssl3_record_sequence_update
PUBLIC	_ssl3_alert_code
PUBLIC	??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@	; `string'
PUBLIC	??_C@_01GOHFPIOK@m?$AA@				; `string'
EXTRN	__imp__memmove:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_OpenSSLDie:PROC
EXTRN	_COMP_CTX_new:PROC
EXTRN	_COMP_CTX_free:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_s_mem:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_MD_CTX_md:PROC
EXTRN	_EVP_CIPHER_block_size:PROC
EXTRN	_EVP_CIPHER_key_length:PROC
EXTRN	_EVP_CIPHER_iv_length:PROC
EXTRN	_EVP_CIPHER_CTX_cipher:PROC
EXTRN	_EVP_CIPHER_CTX_flags:PROC
EXTRN	_EVP_Cipher:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_MD_CTX_create:PROC
EXTRN	_EVP_MD_CTX_destroy:PROC
EXTRN	_EVP_MD_CTX_copy_ex:PROC
EXTRN	_EVP_MD_CTX_set_flags:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_CipherInit_ex:PROC
EXTRN	_EVP_CIPHER_CTX_init:PROC
EXTRN	_EVP_CIPHER_CTX_cleanup:PROC
EXTRN	_EVP_md5:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_ssl_cipher_get_evp:PROC
EXTRN	_ssl_get_handshake_digest:PROC
EXTRN	_ssl_replace_hash:PROC
EXTRN	_ssl_get_algorithm2:PROC
EXTRN	_ssl3_cbc_remove_padding:PROC
EXTRN	_ssl3_cbc_record_digest_supported:PROC
EXTRN	_ssl3_cbc_digest_record:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_01GOHFPIOK@m?$AA@
CONST	SEGMENT
??_C@_01GOHFPIOK@m?$AA@ DB 'm', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
CONST	SEGMENT
??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@ DB '.\ssl\s3_enc.c', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_generate_key_block
_TEXT	SEGMENT
_c$1$ = -101						; size = 1
_s$GSCopy$1$ = -100					; size = 4
_i$1$ = -96						; size = 4
tv231 = -92						; size = 4
_m5$ = -88						; size = 24
_s1$ = -64						; size = 24
_smd$ = -40						; size = 20
_buf$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_km$ = 12						; size = 4
_num$ = 16						; size = 4
_ssl3_generate_key_block PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 164
	mov	eax, 104				; 00000068H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+104], eax
	mov	eax, DWORD PTR _s$[esp+100]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _km$[esp+108]
	push	esi
	mov	DWORD PTR _s$GSCopy$1$[esp+116], eax
; Line 174
	xor	esi, esi
; Line 175
	lea	eax, DWORD PTR _m5$[esp+116]
	mov	BYTE PTR _c$1$[esp+116], 65		; 00000041H
	push	edi
	push	eax
	call	_EVP_MD_CTX_init
; Line 176
	lea	eax, DWORD PTR _m5$[esp+124]
	push	8
	push	eax
	call	_EVP_MD_CTX_set_flags
; Line 177
	lea	eax, DWORD PTR _s1$[esp+132]
	push	eax
	call	_EVP_MD_CTX_init
; Line 178
	mov	edi, DWORD PTR _num$[esp+132]
	xor	ebx, ebx
	add	esp, 16					; 00000010H
	mov	DWORD PTR _i$1$[esp+120], ebx
	test	edi, edi
	jle	$LN3@ssl3_gener
	mov	eax, 16					; 00000010H
	sub	eax, ebp
	mov	DWORD PTR tv231[esp+120], eax
	npad	1
$LL4@ssl3_gener:
; Line 179
	inc	esi
; Line 180
	cmp	esi, 16					; 00000010H
	ja	$LN14@ssl3_gener
; Line 186
	test	esi, esi
	je	SHORT $LN6@ssl3_gener
; Line 187
	movzx	eax, BYTE PTR _c$1$[esp+120]
	lea	edi, DWORD PTR _buf$[esp+120]
	imul	eax, 16843009				; 01010101H
	mov	ecx, esi
	mov	ebx, ecx
	shr	ecx, 2
	rep stosd
	mov	ecx, ebx
	mov	ebx, DWORD PTR _i$1$[esp+120]
	and	ecx, 3
	rep stosb
	mov	edi, DWORD PTR _num$[esp+116]
$LN6@ssl3_gener:
; Line 188
	inc	BYTE PTR _c$1$[esp+120]
; Line 189
	push	0
	call	_EVP_sha1
	push	eax
	lea	eax, DWORD PTR _s1$[esp+128]
	push	eax
	call	_EVP_DigestInit_ex
; Line 190
	push	esi
	lea	eax, DWORD PTR _buf$[esp+136]
	push	eax
	lea	eax, DWORD PTR _s1$[esp+140]
	push	eax
	call	_EVP_DigestUpdate
; Line 191
	mov	eax, DWORD PTR _s$GSCopy$1$[esp+144]
	mov	eax, DWORD PTR [eax+192]
	push	DWORD PTR [eax+16]
	add	eax, 20					; 00000014H
	push	eax
	lea	eax, DWORD PTR _s1$[esp+152]
	push	eax
	call	_EVP_DigestUpdate
; Line 193
	mov	eax, DWORD PTR _s$GSCopy$1$[esp+156]
	push	32					; 00000020H
	mov	eax, DWORD PTR [eax+88]
	add	eax, 160				; 000000a0H
	push	eax
	lea	eax, DWORD PTR _s1$[esp+164]
	push	eax
	call	_EVP_DigestUpdate
; Line 194
	mov	eax, DWORD PTR _s$GSCopy$1$[esp+168]
	push	32					; 00000020H
	mov	eax, DWORD PTR [eax+88]
	add	eax, 192				; 000000c0H
	push	eax
	lea	eax, DWORD PTR _s1$[esp+176]
	push	eax
	call	_EVP_DigestUpdate
; Line 195
	push	0
	lea	eax, DWORD PTR _smd$[esp+184]
	push	eax
	lea	eax, DWORD PTR _s1$[esp+188]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 72					; 00000048H
; Line 197
	push	0
	call	_EVP_md5
	push	eax
	lea	eax, DWORD PTR _m5$[esp+128]
	push	eax
	call	_EVP_DigestInit_ex
; Line 198
	mov	eax, DWORD PTR _s$GSCopy$1$[esp+132]
	mov	eax, DWORD PTR [eax+192]
	push	DWORD PTR [eax+16]
	add	eax, 20					; 00000014H
	push	eax
	lea	eax, DWORD PTR _m5$[esp+140]
	push	eax
	call	_EVP_DigestUpdate
; Line 200
	push	20					; 00000014H
	lea	eax, DWORD PTR _smd$[esp+148]
	push	eax
	lea	eax, DWORD PTR _m5$[esp+152]
	push	eax
	call	_EVP_DigestUpdate
; Line 201
	mov	eax, DWORD PTR tv231[esp+156]
	add	esp, 36					; 00000024H
	add	eax, ebp
; Line 202
	push	0
	cmp	eax, edi
	jle	SHORT $LN9@ssl3_gener
	lea	eax, DWORD PTR _smd$[esp+124]
	push	eax
	lea	eax, DWORD PTR _m5$[esp+128]
	push	eax
	call	_EVP_DigestFinal_ex
; Line 203
	mov	eax, edi
	sub	eax, ebx
	push	eax
	lea	eax, DWORD PTR _smd$[esp+136]
	push	eax
	push	ebp
	call	_memcpy
	add	esp, 24					; 00000018H
; Line 204
	jmp	SHORT $LN10@ssl3_gener
$LN9@ssl3_gener:
; Line 205
	lea	eax, DWORD PTR _m5$[esp+124]
	push	ebp
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
$LN10@ssl3_gener:
; Line 207
	add	ebx, 16					; 00000010H
	add	ebp, 16					; 00000010H
	mov	DWORD PTR _i$1$[esp+120], ebx
	cmp	ebx, edi
	jl	$LL4@ssl3_gener
$LN3@ssl3_gener:
; Line 209
	lea	eax, DWORD PTR _smd$[esp+120]
	push	20					; 00000014H
	push	eax
	call	_OPENSSL_cleanse
; Line 210
	lea	eax, DWORD PTR _m5$[esp+128]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 211
	lea	eax, DWORD PTR _s1$[esp+132]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 16					; 00000010H
; Line 212
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 213
	mov	ecx, DWORD PTR __$ArrayPad$[esp+104]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	ret	0
$LN14@ssl3_gener:
; Line 182
	push	182					; 000000b6H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	68					; 00000044H
	push	238					; 000000eeH
	push	20					; 00000014H
	call	_ERR_put_error
; Line 213
	mov	ecx, DWORD PTR __$ArrayPad$[esp+140]
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	ret	0
_ssl3_generate_key_block ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_handshake_mac
_TEXT	SEGMENT
_i$ = -100						; size = 4
_ret$ = -96						; size = 4
_ctx$ = -92						; size = 24
_md_buf$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_md_nid$ = 12						; size = 4
_sender$ = 16						; size = 4
_len$ = 20						; size = 4
_p$ = 24						; size = 4
_ssl3_handshake_mac PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 667
	mov	eax, 100				; 00000064H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+100], eax
	push	ebx
	mov	ebx, DWORD PTR _sender$[esp+100]
	push	ebp
	mov	ebp, DWORD PTR _p$[esp+104]
	push	esi
	mov	esi, DWORD PTR _s$[esp+108]
; Line 674
	mov	eax, DWORD PTR [esi+88]
	cmp	DWORD PTR [eax+376], 0
	je	SHORT $LN6@ssl3_hands
; Line 675
	push	esi
	call	_ssl3_digest_cached_records
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN6@ssl3_hands
	pop	esi
	pop	ebp
	pop	ebx
; Line 719
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN6@ssl3_hands:
; Line 681
	xor	ecx, ecx
	push	edi
	mov	edi, DWORD PTR _md_nid$[esp+112]
	mov	DWORD PTR _i$[esp+116], ecx
	npad	3
$LL4@ssl3_hands:
; Line 683
	mov	eax, DWORD PTR [esi+88]
	mov	eax, DWORD PTR [eax+380]
	mov	eax, DWORD PTR [eax+ecx*4]
	test	eax, eax
	je	SHORT $LN2@ssl3_hands
	push	eax
	call	_EVP_MD_CTX_md
	push	eax
	call	_EVP_MD_type
	add	esp, 8
	cmp	eax, edi
	je	SHORT $LN15@ssl3_hands
	mov	ecx, DWORD PTR _i$[esp+116]
$LN2@ssl3_hands:
; Line 681
	inc	ecx
	mov	DWORD PTR _i$[esp+116], ecx
	cmp	ecx, 6
	jb	SHORT $LL4@ssl3_hands
$LN20@ssl3_hands:
; Line 689
	push	689					; 000002b1H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	324					; 00000144H
	push	285					; 0000011dH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN22@ssl3_hands:
; Line 690
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 719
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN15@ssl3_hands:
; Line 684
	mov	eax, DWORD PTR [esi+88]
	mov	ecx, DWORD PTR [eax+380]
	mov	eax, DWORD PTR _i$[esp+116]
	mov	edi, DWORD PTR [ecx+eax*4]
; Line 688
	test	edi, edi
	je	SHORT $LN20@ssl3_hands
; Line 692
	lea	eax, DWORD PTR _ctx$[esp+116]
	push	eax
	call	_EVP_MD_CTX_init
; Line 693
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	8
	push	eax
	call	_EVP_MD_CTX_set_flags
; Line 694
	lea	eax, DWORD PTR _ctx$[esp+128]
	push	edi
	push	eax
	call	_EVP_MD_CTX_copy_ex
; Line 695
	lea	eax, DWORD PTR _ctx$[esp+136]
	push	eax
	call	_EVP_MD_CTX_md
	push	eax
	call	_EVP_MD_size
	mov	ecx, eax
	add	esp, 28					; 0000001cH
; Line 696
	test	ecx, ecx
	js	SHORT $LN22@ssl3_hands
; Line 699
	mov	eax, 48					; 00000030H
	cdq
	idiv	ecx
	mov	edi, eax
	imul	edi, ecx
; Line 711
	test	ebx, ebx
	je	SHORT $LN12@ssl3_hands
	push	DWORD PTR _len$[esp+112]
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	ebx
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN11@ssl3_hands
$LN12@ssl3_hands:
	mov	eax, DWORD PTR [esi+192]
	push	DWORD PTR [eax+16]
	add	eax, 20					; 00000014H
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN11@ssl3_hands
	push	edi
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	OFFSET _ssl3_pad_1
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN11@ssl3_hands
	lea	eax, DWORD PTR _i$[esp+116]
	push	eax
	lea	eax, DWORD PTR _md_buf$[esp+120]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN11@ssl3_hands
	lea	eax, DWORD PTR _ctx$[esp+116]
	push	0
	push	eax
	call	_EVP_MD_CTX_md
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN11@ssl3_hands
	mov	eax, DWORD PTR [esi+192]
	push	DWORD PTR [eax+16]
	add	eax, 20					; 00000014H
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN11@ssl3_hands
	push	edi
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	OFFSET _ssl3_pad_2
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN11@ssl3_hands
	push	DWORD PTR _i$[esp+116]
	lea	eax, DWORD PTR _md_buf$[esp+120]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN11@ssl3_hands
	lea	eax, DWORD PTR _ret$[esp+116]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	ebp
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LN10@ssl3_hands
$LN11@ssl3_hands:
; Line 712
	push	712					; 000002c8H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	68					; 00000044H
	push	285					; 0000011dH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 713
	mov	DWORD PTR _ret$[esp+116], 0
$LN10@ssl3_hands:
; Line 716
	lea	eax, DWORD PTR _ctx$[esp+116]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 719
	mov	ecx, DWORD PTR __$ArrayPad$[esp+120]
	add	esp, 4
	mov	eax, DWORD PTR _ret$[esp+116]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
_ssl3_handshake_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_alert_code
_TEXT	SEGMENT
_code$ = 8						; size = 4
_ssl3_alert_code PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 904
	mov	eax, DWORD PTR _code$[esp-4]
	cmp	eax, 115				; 00000073H
	ja	SHORT $LN35@ssl3_alert
	movzx	eax, BYTE PTR $LN37@ssl3_alert[eax]
	jmp	DWORD PTR $LN40@ssl3_alert[eax*4]
$LN4@ssl3_alert:
; Line 906
	xor	eax, eax
; Line 970
	ret	0
$LN5@ssl3_alert:
; Line 908
	mov	eax, 10					; 0000000aH
; Line 970
	ret	0
$LN6@ssl3_alert:
; Line 910
	mov	eax, 20					; 00000014H
; Line 970
	ret	0
$LN9@ssl3_alert:
; Line 916
	mov	eax, 30					; 0000001eH
; Line 970
	ret	0
$LN10@ssl3_alert:
; Line 918
	mov	eax, 40					; 00000028H
; Line 970
	ret	0
$LN11@ssl3_alert:
; Line 920
	mov	eax, 41					; 00000029H
; Line 970
	ret	0
$LN12@ssl3_alert:
; Line 922
	mov	eax, 42					; 0000002aH
; Line 970
	ret	0
$LN13@ssl3_alert:
; Line 924
	mov	eax, 43					; 0000002bH
; Line 970
	ret	0
$LN14@ssl3_alert:
; Line 926
	mov	eax, 44					; 0000002cH
; Line 970
	ret	0
$LN15@ssl3_alert:
; Line 928
	mov	eax, 45					; 0000002dH
; Line 970
	ret	0
$LN16@ssl3_alert:
; Line 930
	mov	eax, 46					; 0000002eH
; Line 970
	ret	0
$LN17@ssl3_alert:
; Line 932
	mov	eax, 47					; 0000002fH
; Line 970
	ret	0
$LN33@ssl3_alert:
; Line 964
	mov	eax, 115				; 00000073H
; Line 970
	ret	0
$LN34@ssl3_alert:
; Line 966
	mov	eax, 86					; 00000056H
; Line 970
	ret	0
$LN35@ssl3_alert:
; Line 968
	or	eax, -1
; Line 970
	ret	0
$LN40@ssl3_alert:
	DD	$LN4@ssl3_alert
	DD	$LN5@ssl3_alert
	DD	$LN6@ssl3_alert
	DD	$LN9@ssl3_alert
	DD	$LN10@ssl3_alert
	DD	$LN11@ssl3_alert
	DD	$LN12@ssl3_alert
	DD	$LN13@ssl3_alert
	DD	$LN14@ssl3_alert
	DD	$LN15@ssl3_alert
	DD	$LN16@ssl3_alert
	DD	$LN17@ssl3_alert
	DD	$LN34@ssl3_alert
	DD	$LN35@ssl3_alert
	DD	$LN33@ssl3_alert
	DD	$LN35@ssl3_alert
$LN37@ssl3_alert:
	DB	0
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	1
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	2
	DB	2
	DB	2
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	3
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	6
	DB	4
	DB	4
	DB	4
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	4
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	4
	DB	4
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	4
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	12					; 0000000cH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	4
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	13					; 0000000dH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	14					; 0000000eH
_ssl3_alert_code ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_record_sequence_update
_TEXT	SEGMENT
_seq$ = 8						; size = 4
_ssl3_record_sequence_update PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 829
	mov	ecx, DWORD PTR _seq$[esp-4]
	mov	eax, 7
	npad	7
$LL4@ssl3_recor:
; Line 830
	add	BYTE PTR [eax+ecx], 1
; Line 831
	jne	SHORT $LN8@ssl3_recor
; Line 829
	sub	eax, 1
	jns	SHORT $LL4@ssl3_recor
$LN8@ssl3_recor:
; Line 834
	ret	0
_ssl3_record_sequence_update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_digest_cached_records
_TEXT	SEGMENT
_mask$ = -8						; size = 4
_hdata$ = -4						; size = 4
_md$ = 8						; size = 4
_s$ = 8							; size = 4
_ssl3_digest_cached_records PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 599
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	edi
; Line 607
	mov	edi, DWORD PTR _s$[esp+12]
	push	edi
	call	_ssl3_free_digest_list
; Line 608
	push	609					; 00000261H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	mov	ecx, DWORD PTR [edi+88]
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+380], eax
; Line 610
	mov	eax, DWORD PTR [edi+88]
	mov	eax, DWORD PTR [eax+380]
	movups	XMMWORD PTR [eax], xmm0
	movq	QWORD PTR [eax+16], xmm0
; Line 611
	lea	eax, DWORD PTR _hdata$[esp+32]
	push	eax
	mov	eax, DWORD PTR [edi+88]
	push	0
	push	3
	push	DWORD PTR [eax+376]
	call	_BIO_ctrl
	mov	ebx, eax
	add	esp, 32					; 00000020H
; Line 612
	test	ebx, ebx
	jg	SHORT $LN5@ssl3_diges
; Line 613
	push	613					; 00000265H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	332					; 0000014cH
	push	293					; 00000125H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 614
	xor	eax, eax
	pop	edi
	pop	ebx
; Line 640
	add	esp, 8
	ret	0
$LN5@ssl3_diges:
	push	esi
; Line 618
	lea	eax, DWORD PTR _md$[esp+16]
	xor	esi, esi
	push	eax
	lea	eax, DWORD PTR _mask$[esp+24]
	push	eax
	push	esi
	call	_ssl_get_handshake_digest
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN3@ssl3_diges
$LL4@ssl3_diges:
; Line 619
	push	edi
	call	_ssl_get_algorithm2
	add	esp, 4
	test	DWORD PTR _mask$[esp+20], eax
	je	SHORT $LN6@ssl3_diges
	cmp	DWORD PTR _md$[esp+16], 0
	je	SHORT $LN6@ssl3_diges
; Line 620
	call	_EVP_MD_CTX_create
	mov	ecx, DWORD PTR [edi+88]
; Line 627
	push	0
	mov	ecx, DWORD PTR [ecx+380]
	mov	DWORD PTR [ecx+esi*4], eax
	mov	eax, DWORD PTR [edi+88]
	push	DWORD PTR _md$[esp+20]
	mov	eax, DWORD PTR [eax+380]
	push	DWORD PTR [eax+esi*4]
	call	_EVP_DigestInit_ex
; Line 628
	mov	eax, DWORD PTR [edi+88]
	push	ebx
	push	DWORD PTR _hdata$[esp+36]
	mov	eax, DWORD PTR [eax+380]
	push	DWORD PTR [eax+esi*4]
	call	_EVP_DigestUpdate
	add	esp, 24					; 00000018H
; Line 629
	jmp	SHORT $LN2@ssl3_diges
$LN6@ssl3_diges:
; Line 630
	mov	eax, DWORD PTR [edi+88]
	mov	eax, DWORD PTR [eax+380]
	mov	DWORD PTR [eax+esi*4], 0
$LN2@ssl3_diges:
; Line 618
	lea	eax, DWORD PTR _md$[esp+16]
	inc	esi
	push	eax
	lea	eax, DWORD PTR _mask$[esp+24]
	push	eax
	push	esi
	call	_ssl_get_handshake_digest
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LL4@ssl3_diges
$LN3@ssl3_diges:
; Line 633
	mov	eax, DWORD PTR [edi+88]
	pop	esi
	test	BYTE PTR [eax], 32			; 00000020H
	jne	SHORT $LN8@ssl3_diges
; Line 635
	push	DWORD PTR [eax+376]
	call	_BIO_free
; Line 636
	mov	eax, DWORD PTR [edi+88]
	add	esp, 4
	mov	DWORD PTR [eax+376], 0
$LN8@ssl3_diges:
; Line 639
	pop	edi
	mov	eax, 1
	pop	ebx
; Line 640
	add	esp, 8
	ret	0
_ssl3_digest_cached_records ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_free_digest_list
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_free_digest_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 572
	push	edi
; Line 574
	mov	edi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [edi+88]
	cmp	DWORD PTR [eax+380], 0
	je	SHORT $LN1@ssl3_free_
; Line 576
	push	esi
	xor	esi, esi
$LL4@ssl3_free_:
; Line 577
	mov	eax, DWORD PTR [edi+88]
	mov	eax, DWORD PTR [eax+380]
	mov	eax, DWORD PTR [esi+eax]
	test	eax, eax
	je	SHORT $LN2@ssl3_free_
; Line 578
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN2@ssl3_free_:
; Line 576
	add	esi, 4
	cmp	esi, 24					; 00000018H
	jl	SHORT $LL4@ssl3_free_
; Line 580
	mov	eax, DWORD PTR [edi+88]
	push	DWORD PTR [eax+380]
	call	_CRYPTO_free
; Line 581
	mov	eax, DWORD PTR [edi+88]
	add	esp, 4
	mov	DWORD PTR [eax+380], 0
	pop	esi
$LN1@ssl3_free_:
	pop	edi
; Line 582
	ret	0
_ssl3_free_digest_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _n_ssl3_mac
_TEXT	SEGMENT
_rec_char$ = -125					; size = 1
_md_size$ = -124					; size = 4
_mac_sec$1$ = -120					; size = 4
_orig_len$1$ = -116					; size = 4
_t$1$ = -116						; size = 4
_md_size_u$1 = -116					; size = 4
_npad$1$ = -112						; size = 4
_seq$1$ = -108						; size = 4
_md_ctx$ = -104						; size = 24
_header$2 = -80						; size = 75
__$ArrayPad$ = -4					; size = 4
_ssl$ = 8						; size = 4
_md$ = 12						; size = 4
_send$ = 16						; size = 4
_n_ssl3_mac PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 722
	mov	eax, 128				; 00000080H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+128], eax
; Line 732
	cmp	DWORD PTR _send$[esp+124], 0
	push	ebx
	mov	ebx, DWORD PTR _md$[esp+128]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _ssl$[esp+136]
	push	edi
; Line 733
	mov	eax, DWORD PTR [esi+88]
	je	SHORT $LN2@n_ssl3_mac
; Line 736
	mov	ebp, DWORD PTR [esi+144]
	lea	edi, DWORD PTR [eax+304]
	lea	ecx, DWORD PTR [eax+96]
	add	eax, 84					; 00000054H
; Line 737
	jmp	SHORT $LN12@n_ssl3_mac
$LN2@n_ssl3_mac:
; Line 741
	mov	ebp, DWORD PTR [esi+132]
	lea	edi, DWORD PTR [eax+268]
	lea	ecx, DWORD PTR [eax+20]
	add	eax, 8
$LN12@n_ssl3_mac:
; Line 744
	push	ebp
	mov	DWORD PTR _seq$1$[esp+148], eax
	mov	DWORD PTR _mac_sec$1$[esp+148], ecx
	call	_EVP_MD_CTX_md
	push	eax
	call	_EVP_MD_size
	mov	ecx, eax
	add	esp, 8
	mov	DWORD PTR _t$1$[esp+144], ecx
; Line 745
	test	ecx, ecx
	js	$LN13@n_ssl3_mac
; Line 748
	xor	edx, edx
	mov	DWORD PTR _md_size$[esp+144], ecx
	mov	eax, 48					; 00000030H
	div	ecx
	imul	eax, ecx
; Line 753
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR _npad$1$[esp+144], eax
	mov	eax, ecx
	shr	eax, 8
	add	eax, DWORD PTR _t$1$[esp+144]
	add	eax, DWORD PTR [edi+4]
; Line 757
	cmp	DWORD PTR _send$[esp+140], 0
	mov	DWORD PTR _orig_len$1$[esp+144], eax
	movzx	eax, cl
	mov	DWORD PTR [edi], eax
	jne	$LN5@n_ssl3_mac
	push	DWORD PTR [esi+128]
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	cmp	eax, 2
	jne	$LN5@n_ssl3_mac
	push	ebp
	call	_ssl3_cbc_record_digest_supported
	add	esp, 4
	test	al, al
	je	$LN5@n_ssl3_mac
; Line 775
	mov	esi, DWORD PTR _md_size$[esp+144]
	lea	eax, DWORD PTR _header$2[esp+144]
	push	esi
	push	DWORD PTR _mac_sec$1$[esp+148]
	push	eax
	call	_memcpy
; Line 777
	push	DWORD PTR _npad$1$[esp+156]
	lea	eax, DWORD PTR _header$2[esp+160]
	add	eax, esi
	push	OFFSET _ssl3_pad_1
	push	eax
	call	_memcpy
; Line 779
	mov	ecx, DWORD PTR _seq$1$[esp+168]
	mov	edx, DWORD PTR _npad$1$[esp+168]
	add	edx, esi
; Line 790
	push	1
	mov	eax, DWORD PTR [ecx]
	push	esi
	push	DWORD PTR _mac_sec$1$[esp+176]
	mov	DWORD PTR _header$2[esp+edx+180], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edi+4]
	push	DWORD PTR _orig_len$1$[esp+180]
	mov	DWORD PTR _header$2[esp+edx+188], eax
	mov	al, BYTE PTR [edi]
	mov	BYTE PTR _header$2[esp+edx+192], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR _header$2[esp+edx+193], al
	mov	al, cl
	mov	BYTE PTR _header$2[esp+edx+194], al
	lea	eax, DWORD PTR [ecx+esi]
	push	eax
	push	DWORD PTR [edi+16]
	lea	eax, DWORD PTR _header$2[esp+192]
	push	eax
	lea	eax, DWORD PTR _md_size$[esp+196]
	push	eax
	push	ebx
	push	ebp
	call	_ssl3_cbc_digest_record
	add	esp, 64					; 00000040H
	test	eax, eax
	jle	$LN13@n_ssl3_mac
; Line 821
	mov	esi, DWORD PTR _seq$1$[esp+144]
	push	esi
	call	_ssl3_record_sequence_update
; Line 822
	mov	eax, DWORD PTR _md_size$[esp+148]
	add	esp, 4
	jmp	$LN1@n_ssl3_mac
$LN5@n_ssl3_mac:
; Line 795
	lea	eax, DWORD PTR _md_ctx$[esp+144]
	push	eax
	call	_EVP_MD_CTX_init
; Line 797
	mov	al, BYTE PTR [edi]
	mov	BYTE PTR _rec_char$[esp+148], al
; Line 799
	mov	al, BYTE PTR [edi+5]
	mov	BYTE PTR [ebx], al
	mov	al, BYTE PTR [edi+4]
	mov	BYTE PTR [ebx+1], al
; Line 812
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	ebp
	push	eax
	call	_EVP_MD_CTX_copy_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	push	DWORD PTR _md_size$[esp+144]
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	DWORD PTR _mac_sec$1$[esp+148]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	push	DWORD PTR _npad$1$[esp+144]
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	OFFSET _ssl3_pad_1
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	mov	esi, DWORD PTR _seq$1$[esp+144]
	lea	eax, DWORD PTR _md_ctx$[esp+144]
	push	8
	push	esi
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	push	1
	lea	eax, DWORD PTR _rec_char$[esp+148]
	push	eax
	lea	eax, DWORD PTR _md_ctx$[esp+152]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	push	2
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	ebx
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	push	DWORD PTR [edi+4]
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	DWORD PTR [edi+16]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	push	0
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	ebx
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	lea	eax, DWORD PTR _md_ctx$[esp+144]
	push	ebp
	push	eax
	call	_EVP_MD_CTX_copy_ex
	add	esp, 8
	test	eax, eax
	jle	$LN9@n_ssl3_mac
	push	DWORD PTR _md_size$[esp+144]
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	DWORD PTR _mac_sec$1$[esp+148]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN9@n_ssl3_mac
	push	DWORD PTR _npad$1$[esp+144]
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	OFFSET _ssl3_pad_2
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN9@n_ssl3_mac
	push	DWORD PTR _md_size$[esp+144]
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	ebx
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN9@n_ssl3_mac
	lea	eax, DWORD PTR _md_size_u$1[esp+144]
	push	eax
	lea	eax, DWORD PTR _md_ctx$[esp+148]
	push	ebx
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN9@n_ssl3_mac
; Line 816
	mov	eax, DWORD PTR _md_size_u$1[esp+144]
	mov	DWORD PTR _md_size$[esp+144], eax
; Line 818
	lea	eax, DWORD PTR _md_ctx$[esp+144]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 821
	push	esi
	call	_ssl3_record_sequence_update
; Line 822
	mov	eax, DWORD PTR _md_size$[esp+148]
	add	esp, 4
	jmp	SHORT $LN1@n_ssl3_mac
$LN9@n_ssl3_mac:
; Line 813
	lea	eax, DWORD PTR _md_ctx$[esp+144]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
$LN13@n_ssl3_mac:
; Line 814
	or	eax, -1
$LN1@n_ssl3_mac:
; Line 823
	mov	ecx, DWORD PTR __$ArrayPad$[esp+144]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	ret	0
_n_ssl3_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_enc
_TEXT	SEGMENT
_bs$1$ = -4						; size = 4
_l$1$ = 8						; size = 4
_s$ = 8							; size = 4
_send$ = 12						; size = 4
_ssl3_enc PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 498
	mov	eax, 4
	call	__chkstk
; Line 505
	cmp	DWORD PTR _send$[esp], 0
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 506
	mov	edi, DWORD PTR _s$[esp+16]
; Line 507
	mov	esi, DWORD PTR [edi+88]
	je	SHORT $LN2@ssl3_enc
	mov	ebp, DWORD PTR [edi+140]
	add	esi, 304				; 00000130H
; Line 512
	jmp	SHORT $LN25@ssl3_enc
$LN2@ssl3_enc:
; Line 513
	mov	ebp, DWORD PTR [edi+128]
; Line 514
	add	esi, 268				; 0000010cH
$LN25@ssl3_enc:
; Line 515
	test	ebp, ebp
	jne	SHORT $LN6@ssl3_enc
; Line 516
	xor	eax, eax
	jmp	SHORT $LN7@ssl3_enc
$LN6@ssl3_enc:
; Line 518
	push	ebp
	call	_EVP_CIPHER_CTX_cipher
	add	esp, 4
$LN7@ssl3_enc:
; Line 521
	cmp	DWORD PTR [edi+192], 0
	je	$LN10@ssl3_enc
	test	ebp, ebp
	je	$LN10@ssl3_enc
	test	eax, eax
	je	$LN10@ssl3_enc
; Line 525
	mov	eax, DWORD PTR [esi+4]
; Line 526
	push	DWORD PTR [ebp]
	mov	DWORD PTR _l$1$[esp+20], eax
	call	_EVP_CIPHER_block_size
; Line 531
	mov	ecx, DWORD PTR _l$1$[esp+20]
	mov	ebx, eax
	add	esp, 4
	mov	DWORD PTR _bs$1$[esp+20], ebx
	cmp	ebx, 1
	je	SHORT $LN11@ssl3_enc
; Line 530
	cmp	DWORD PTR _send$[esp+16], 0
	je	SHORT $LN19@ssl3_enc
; Line 531
	mov	eax, ecx
	cdq
	idiv	ebx
; Line 539
	mov	eax, DWORD PTR [esi+16]
	add	eax, DWORD PTR [esi+4]
	sub	ebx, edx
	push	ebx
	add	ecx, ebx
	push	0
	push	eax
	mov	DWORD PTR _l$1$[esp+28], ecx
	call	_memset
; Line 540
	add	DWORD PTR [esi+4], ebx
	add	esp, 12					; 0000000cH
; Line 541
	mov	eax, DWORD PTR [esi+16]
	dec	bl
	mov	ecx, DWORD PTR _l$1$[esp+16]
	mov	BYTE PTR [eax+ecx-1], bl
	mov	ebx, DWORD PTR _bs$1$[esp+20]
$LN11@ssl3_enc:
; Line 544
	cmp	DWORD PTR _send$[esp+16], 0
	jne	SHORT $LN13@ssl3_enc
$LN19@ssl3_enc:
; Line 545
	test	ecx, ecx
	je	SHORT $LN14@ssl3_enc
	xor	edx, edx
	mov	eax, ecx
	div	ebx
	test	edx, edx
	je	SHORT $LN13@ssl3_enc
$LN14@ssl3_enc:
	pop	edi
	pop	esi
	pop	ebp
; Line 546
	xor	eax, eax
	pop	ebx
; Line 559
	pop	ecx
	ret	0
$LN13@ssl3_enc:
; Line 550
	push	ecx
	push	DWORD PTR [esi+16]
	push	DWORD PTR [esi+12]
	push	ebp
	call	_EVP_Cipher
	add	esp, 16					; 00000010H
	cmp	eax, 1
	jge	SHORT $LN15@ssl3_enc
; Line 551
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 559
	pop	ecx
	ret	0
$LN15@ssl3_enc:
; Line 553
	push	DWORD PTR [edi+132]
	call	_EVP_MD_CTX_md
	add	esp, 4
	test	eax, eax
	je	SHORT $LN22@ssl3_enc
; Line 554
	push	DWORD PTR [edi+132]
	call	_EVP_MD_CTX_md
	push	eax
	call	_EVP_MD_size
	add	esp, 8
	jmp	SHORT $LN16@ssl3_enc
$LN22@ssl3_enc:
	xor	eax, eax
$LN16@ssl3_enc:
; Line 555
	cmp	ebx, 1
	je	SHORT $LN17@ssl3_enc
	cmp	DWORD PTR _send$[esp+16], 0
	jne	SHORT $LN17@ssl3_enc
; Line 556
	push	eax
	push	ebx
	push	esi
	push	edi
	call	_ssl3_cbc_remove_padding
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 559
	pop	ecx
	ret	0
$LN10@ssl3_enc:
; Line 522
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi+16]
	push	DWORD PTR [esi+12]
	call	DWORD PTR __imp__memmove
; Line 523
	mov	eax, DWORD PTR [esi+12]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+16], eax
$LN17@ssl3_enc:
; Line 558
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 559
	pop	ecx
	ret	0
_ssl3_enc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_finish_mac
_TEXT	SEGMENT
_s$ = 8							; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_ssl3_finish_mac PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 585
	push	ebp
; Line 587
	mov	ebp, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [ebp+88]
	mov	ecx, DWORD PTR [eax+376]
	test	ecx, ecx
	je	SHORT $LN5@ssl3_finis
	test	BYTE PTR [eax], 32			; 00000020H
	jne	SHORT $LN5@ssl3_finis
	pop	ebp
; Line 588
	mov	DWORD PTR _s$[esp-4], ecx
	jmp	_BIO_write
$LN5@ssl3_finis:
	push	ebx
; Line 591
	mov	ebx, DWORD PTR _buf$[esp+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _len$[esp+12]
	xor	esi, esi
	npad	2
$LL4@ssl3_finis:
; Line 592
	mov	eax, DWORD PTR [ebp+88]
	mov	eax, DWORD PTR [eax+380]
	mov	eax, DWORD PTR [esi+eax]
	test	eax, eax
	je	SHORT $LN2@ssl3_finis
; Line 593
	push	edi
	push	ebx
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
$LN2@ssl3_finis:
; Line 591
	add	esi, 4
	cmp	esi, 24					; 00000018H
	jl	SHORT $LL4@ssl3_finis
; Line 596
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	0
_ssl3_finish_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_cert_verify_mac
_TEXT	SEGMENT
_s$ = 8							; size = 4
_md_nid$ = 12						; size = 4
_p$ = 16						; size = 4
_ssl3_cert_verify_mac PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 644
	push	DWORD PTR _p$[esp-4]
	push	0
	push	0
	push	DWORD PTR _md_nid$[esp+8]
	push	DWORD PTR _s$[esp+12]
	call	_ssl3_handshake_mac
	add	esp, 20					; 00000014H
; Line 645
	ret	0
_ssl3_cert_verify_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_final_finish_mac
_TEXT	SEGMENT
_s$ = 8							; size = 4
_sender$ = 12						; size = 4
_len$ = 16						; size = 4
_p$ = 20						; size = 4
_ssl3_final_finish_mac PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 649
	push	esi
	push	edi
; Line 651
	mov	edi, DWORD PTR _p$[esp+4]
	push	edi
	push	DWORD PTR _len$[esp+8]
	push	DWORD PTR _sender$[esp+12]
	push	4
	push	DWORD PTR _s$[esp+20]
	call	_ssl3_handshake_mac
	mov	esi, eax
	add	esp, 20					; 00000014H
; Line 652
	test	esi, esi
	jne	SHORT $LN2@ssl3_final
$LN5@ssl3_final:
	pop	edi
; Line 653
	xor	eax, eax
	pop	esi
; Line 663
	ret	0
$LN2@ssl3_final:
; Line 655
	lea	eax, DWORD PTR [esi+edi]
; Line 657
	push	eax
	push	DWORD PTR _len$[esp+8]
	push	DWORD PTR _sender$[esp+12]
	push	64					; 00000040H
	push	DWORD PTR _s$[esp+20]
	call	_ssl3_handshake_mac
	add	esp, 20					; 00000014H
; Line 658
	test	eax, eax
	je	SHORT $LN5@ssl3_final
; Line 661
	pop	edi
	add	eax, esi
	pop	esi
; Line 663
	ret	0
_ssl3_final_finish_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_generate_master_secret
_TEXT	SEGMENT
_n$ = -104						; size = 4
_p$GSCopy$1$ = -100					; size = 4
tv204 = -96						; size = 4
_ctx$ = -92						; size = 24
_buf$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_out$ = 12						; size = 4
_p$ = 16						; size = 4
_len$ = 20						; size = 4
_ssl3_generate_master_secret PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 838
	mov	eax, 104				; 00000068H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+104], eax
	mov	eax, DWORD PTR _p$[esp+100]
	push	ebx
	mov	ebx, DWORD PTR _out$[esp+104]
	push	ebp
	push	esi
	mov	DWORD PTR _p$GSCopy$1$[esp+116], eax
; Line 852
	xor	ebp, ebp
	push	edi
	mov	edi, DWORD PTR _s$[esp+116]
; Line 858
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	eax
	call	_EVP_MD_CTX_init
	add	esp, 4
	mov	esi, OFFSET ?salt@?1??ssl3_generate_master_secret@@9@9
	npad	3
$LL4@ssl3_gener:
; Line 873
	mov	eax, DWORD PTR [edi+228]
	push	0
	push	DWORD PTR [eax+144]
	lea	eax, DWORD PTR _ctx$[esp+128]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@ssl3_gener
	mov	edx, DWORD PTR [esi]
	mov	ecx, edx
	lea	eax, DWORD PTR [ecx+1]
	mov	DWORD PTR tv204[esp+120], eax
	npad	2
$LL13@ssl3_gener:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL13@ssl3_gener
	sub	ecx, DWORD PTR tv204[esp+120]
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	ecx
	push	edx
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@ssl3_gener
	push	DWORD PTR _len$[esp+116]
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	DWORD PTR _p$GSCopy$1$[esp+124]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@ssl3_gener
	mov	eax, DWORD PTR [edi+88]
	add	eax, 192				; 000000c0H
	push	32					; 00000020H
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+128]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@ssl3_gener
	mov	eax, DWORD PTR [edi+88]
	add	eax, 160				; 000000a0H
	push	32					; 00000020H
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+128]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@ssl3_gener
	lea	eax, DWORD PTR _n$[esp+120]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+124]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+128]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN9@ssl3_gener
	mov	eax, DWORD PTR [edi+228]
	push	0
	push	DWORD PTR [eax+140]
	lea	eax, DWORD PTR _ctx$[esp+128]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN9@ssl3_gener
	push	DWORD PTR _len$[esp+116]
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	DWORD PTR _p$GSCopy$1$[esp+124]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN9@ssl3_gener
	push	DWORD PTR _n$[esp+120]
	lea	eax, DWORD PTR _buf$[esp+124]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+128]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN9@ssl3_gener
	lea	eax, DWORD PTR _n$[esp+120]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	ebx
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN9@ssl3_gener
; Line 878
	add	ebx, DWORD PTR _n$[esp+120]
	add	esi, 4
; Line 879
	add	ebp, DWORD PTR _n$[esp+120]
	cmp	esi, OFFSET ?salt@?1??ssl3_generate_master_secret@@9@9+12
	jl	$LL4@ssl3_gener
; Line 873
	jmp	SHORT $LN3@ssl3_gener
$LN9@ssl3_gener:
; Line 874
	push	874					; 0000036aH
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	68					; 00000044H
	push	388					; 00000184H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 875
	xor	ebp, ebp
$LN3@ssl3_gener:
; Line 881
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 898
	lea	eax, DWORD PTR _buf$[esp+124]
	push	64					; 00000040H
	push	eax
	call	_OPENSSL_cleanse
; Line 900
	mov	ecx, DWORD PTR __$ArrayPad$[esp+132]
	add	esp, 12					; 0000000cH
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	ret	0
_ssl3_generate_master_secret ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_cleanup_key_block
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_cleanup_key_block PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 478
	push	esi
; Line 479
	mov	esi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [esi+88]
	mov	ecx, DWORD PTR [eax+888]
	test	ecx, ecx
	je	SHORT $LN4@ssl3_clean
; Line 480
	push	DWORD PTR [eax+884]
	push	ecx
	call	_OPENSSL_cleanse
; Line 481
	mov	eax, DWORD PTR [esi+88]
	push	DWORD PTR [eax+888]
	call	_CRYPTO_free
; Line 482
	mov	eax, DWORD PTR [esi+88]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [eax+888], 0
; Line 484
	mov	eax, DWORD PTR [esi+88]
$LN4@ssl3_clean:
	mov	DWORD PTR [eax+884], 0
	pop	esi
; Line 485
	ret	0
_ssl3_cleanup_key_block ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_change_cipher_state
_TEXT	SEGMENT
_iv$1$ = -144						; size = 4
_p$1$ = -144						; size = 4
_key$1$ = -140						; size = 4
_reuse_dd$1$ = -140					; size = 4
_c$1$ = -136						; size = 4
_dd$1$ = -132						; size = 4
_ms$1$ = -128						; size = 4
_is_exp$1$ = -124					; size = 4
_er1$1$ = -120						; size = 4
_er2$1$ = -116						; size = 4
_k$1$ = -112						; size = 4
_md$ = -108						; size = 24
_exp_iv$ = -84						; size = 16
_exp_key$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_which$ = 12						; size = 4
_ssl3_change_cipher_state PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 216
	mov	eax, 144				; 00000090H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+144], eax
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR _s$[esp+152]
	push	edi
; Line 229
	mov	DWORD PTR _reuse_dd$1$[esp+160], 0
; Line 231
	mov	ecx, DWORD PTR [esi+88]
	mov	eax, DWORD PTR [ecx+836]
; Line 233
	mov	ebp, DWORD PTR [ecx+896]
	mov	eax, DWORD PTR [eax+32]
	and	eax, 2
	mov	DWORD PTR _is_exp$1$[esp+160], eax
	mov	eax, DWORD PTR [ecx+892]
	mov	DWORD PTR _c$1$[esp+160], eax
; Line 235
	test	ebp, ebp
	jne	SHORT $LN34@ssl3_chang
	push	OFFSET ??_C@_01GOHFPIOK@m?$AA@
	push	235					; 000000ebH
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN34@ssl3_chang:
; Line 237
	mov	eax, DWORD PTR [esi+88]
	mov	edi, DWORD PTR [eax+908]
	test	edi, edi
	je	SHORT $LN3@ssl3_chang
$LN2@ssl3_chang:
; Line 240
	mov	edi, DWORD PTR [edi+8]
$LN3@ssl3_chang:
; Line 243
	test	BYTE PTR _which$[esp+156], 1
	je	$LN4@ssl3_chang
; Line 244
	cmp	DWORD PTR [esi+128], 0
	je	SHORT $LN6@ssl3_chang
; Line 245
	mov	DWORD PTR _reuse_dd$1$[esp+160], 1
	jmp	SHORT $LN9@ssl3_chang
$LN6@ssl3_chang:
; Line 247
	push	247					; 000000f7H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	140					; 0000008cH
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+128], eax
	test	eax, eax
	je	$err$48
; Line 253
	push	eax
	call	_EVP_CIPHER_CTX_init
	add	esp, 4
$LN9@ssl3_chang:
; Line 254
	mov	eax, DWORD PTR [esi+128]
	mov	DWORD PTR _dd$1$[esp+160], eax
; Line 256
	lea	eax, DWORD PTR [esi+132]
	push	ebp
	push	eax
	call	_ssl_replace_hash
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ssl3_chang
; Line 257
	push	257					; 00000101H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	68					; 00000044H
; Line 258
	jmp	SHORT $LN45@ssl3_chang
$LN10@ssl3_chang:
; Line 262
	mov	eax, DWORD PTR [esi+136]
	test	eax, eax
	je	SHORT $LN11@ssl3_chang
; Line 263
	push	eax
	call	_COMP_CTX_free
	add	esp, 4
; Line 264
	mov	DWORD PTR [esi+136], 0
$LN11@ssl3_chang:
; Line 266
	test	edi, edi
	je	$LN15@ssl3_chang
; Line 267
	push	edi
	call	_COMP_CTX_new
	add	esp, 4
	mov	DWORD PTR [esi+136], eax
; Line 268
	test	eax, eax
	jne	SHORT $LN13@ssl3_chang
; Line 269
	push	270					; 0000010eH
$LN46@ssl3_chang:
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	142					; 0000008eH
$LN45@ssl3_chang:
	push	129					; 00000081H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err2$49:
; Line 407
	xor	eax, eax
$LN1@ssl3_chang:
; Line 408
	mov	ecx, DWORD PTR __$ArrayPad$[esp+160]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 144				; 00000090H
	ret	0
$LN13@ssl3_chang:
; Line 273
	mov	eax, DWORD PTR [esi+88]
	cmp	DWORD PTR [eax+288], 0
	jne	SHORT $LN14@ssl3_chang
; Line 274
	push	275					; 00000113H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	16384					; 00004000H
	call	_CRYPTO_malloc
	mov	ecx, DWORD PTR [esi+88]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ecx+288], eax
$LN14@ssl3_chang:
; Line 276
	mov	eax, DWORD PTR [esi+88]
	cmp	DWORD PTR [eax+288], 0
	je	SHORT $err$48
$LN15@ssl3_chang:
; Line 280
	mov	eax, DWORD PTR [esi+88]
	xorps	xmm0, xmm0
	movq	QWORD PTR [eax+8], xmm0
; Line 281
	mov	ebx, DWORD PTR [esi+88]
	add	ebx, 20					; 00000014H
; Line 282
	jmp	$LN5@ssl3_chang
$LN4@ssl3_chang:
; Line 283
	cmp	DWORD PTR [esi+140], 0
	je	SHORT $LN16@ssl3_chang
; Line 284
	mov	DWORD PTR _reuse_dd$1$[esp+160], 1
	jmp	SHORT $LN19@ssl3_chang
$LN16@ssl3_chang:
; Line 286
	push	286					; 0000011eH
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	140					; 0000008cH
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+140], eax
	test	eax, eax
	jne	SHORT $LN18@ssl3_chang
$err$48:
; Line 405
	push	405					; 00000195H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	65					; 00000041H
	jmp	$LN45@ssl3_chang
$LN18@ssl3_chang:
; Line 292
	push	eax
	call	_EVP_CIPHER_CTX_init
	add	esp, 4
$LN19@ssl3_chang:
; Line 293
	mov	eax, DWORD PTR [esi+140]
	mov	DWORD PTR _dd$1$[esp+160], eax
; Line 294
	lea	eax, DWORD PTR [esi+144]
	push	ebp
	push	eax
	call	_ssl_replace_hash
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN20@ssl3_chang
; Line 295
	push	295					; 00000127H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	68					; 00000044H
	jmp	$LN45@ssl3_chang
$LN20@ssl3_chang:
; Line 300
	mov	eax, DWORD PTR [esi+148]
	test	eax, eax
	je	SHORT $LN21@ssl3_chang
; Line 301
	push	eax
	call	_COMP_CTX_free
	add	esp, 4
; Line 302
	mov	DWORD PTR [esi+148], 0
$LN21@ssl3_chang:
; Line 304
	test	edi, edi
	je	SHORT $LN23@ssl3_chang
; Line 305
	push	edi
	call	_COMP_CTX_new
	add	esp, 4
	mov	DWORD PTR [esi+148], eax
; Line 306
	test	eax, eax
	jne	SHORT $LN23@ssl3_chang
; Line 307
	push	308					; 00000134H
; Line 309
	jmp	$LN46@ssl3_chang
$LN23@ssl3_chang:
; Line 313
	mov	eax, DWORD PTR [esi+88]
	xorps	xmm0, xmm0
	movq	QWORD PTR [eax+84], xmm0
; Line 314
	mov	ebx, DWORD PTR [esi+88]
	add	ebx, 96					; 00000060H
$LN5@ssl3_chang:
; Line 317
	cmp	DWORD PTR _reuse_dd$1$[esp+160], 0
	je	SHORT $LN24@ssl3_chang
; Line 318
	push	DWORD PTR _dd$1$[esp+160]
	call	_EVP_CIPHER_CTX_cleanup
	add	esp, 4
$LN24@ssl3_chang:
; Line 320
	mov	eax, DWORD PTR [esi+88]
; Line 321
	push	ebp
	mov	eax, DWORD PTR [eax+888]
	mov	DWORD PTR _p$1$[esp+164], eax
	call	_EVP_MD_size
	mov	ebp, eax
	add	esp, 4
; Line 322
	test	ebp, ebp
	js	$err2$49
; Line 324
	push	DWORD PTR _c$1$[esp+160]
	call	_EVP_CIPHER_key_length
	add	esp, 4
	mov	edi, eax
; Line 325
	cmp	DWORD PTR _is_exp$1$[esp+160], 0
	je	SHORT $LN41@ssl3_chang
	mov	ecx, DWORD PTR [esi+88]
	mov	edx, DWORD PTR [ecx+836]
	mov	ecx, DWORD PTR [edx+32]
	and	ecx, 8
	je	SHORT $LN35@ssl3_chang
	mov	eax, 5
	jmp	SHORT $LN36@ssl3_chang
$LN35@ssl3_chang:
	mov	eax, DWORD PTR [edx+20]
	dec	eax
	neg	eax
	sbb	eax, eax
	add	eax, 8
$LN36@ssl3_chang:
	cmp	edi, eax
	jl	SHORT $LN41@ssl3_chang
	test	ecx, ecx
	je	SHORT $LN37@ssl3_chang
	mov	edi, 5
	jmp	SHORT $LN41@ssl3_chang
$LN37@ssl3_chang:
	mov	edi, DWORD PTR [edx+20]
	dec	edi
	neg	edi
	sbb	edi, edi
	add	edi, 8
$LN41@ssl3_chang:
; Line 328
	push	DWORD PTR _c$1$[esp+160]
	call	_EVP_CIPHER_iv_length
	mov	edx, eax
	add	esp, 4
; Line 329
	mov	eax, DWORD PTR _which$[esp+156]
	mov	DWORD PTR _k$1$[esp+160], edx
	cmp	eax, 18					; 00000012H
	je	SHORT $LN28@ssl3_chang
	cmp	eax, 33					; 00000021H
	je	SHORT $LN28@ssl3_chang
; Line 341
	mov	eax, DWORD PTR _p$1$[esp+160]
	lea	ecx, DWORD PTR [eax+ebp]
	mov	DWORD PTR _ms$1$[esp+160], ecx
; Line 342
	lea	ecx, DWORD PTR [edi+ebp*2]
; Line 343
	lea	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _key$1$[esp+160], edx
; Line 344
	mov	edx, DWORD PTR _k$1$[esp+160]
	lea	eax, DWORD PTR [edx+edi]
	add	ecx, eax
; Line 347
	mov	eax, DWORD PTR [esi+88]
	add	DWORD PTR _p$1$[esp+160], ecx
	add	ecx, edx
	lea	edx, DWORD PTR [eax+160]
	mov	DWORD PTR _er1$1$[esp+160], edx
; Line 348
	lea	edx, DWORD PTR [eax+192]
	jmp	SHORT $LN43@ssl3_chang
$LN28@ssl3_chang:
; Line 331
	mov	ecx, DWORD PTR _p$1$[esp+160]
; Line 332
	lea	eax, DWORD PTR [ebp*2]
	mov	DWORD PTR _ms$1$[esp+160], ecx
; Line 333
	add	ecx, eax
; Line 334
	lea	eax, DWORD PTR [eax+edi*2]
	mov	DWORD PTR _key$1$[esp+160], ecx
; Line 335
	add	DWORD PTR _p$1$[esp+160], eax
; Line 336
	lea	ecx, DWORD PTR [eax+edx*2]
; Line 337
	mov	eax, DWORD PTR [esi+88]
	lea	edx, DWORD PTR [eax+192]
	mov	DWORD PTR _er1$1$[esp+160], edx
; Line 338
	lea	edx, DWORD PTR [eax+160]
$LN43@ssl3_chang:
	mov	DWORD PTR _er2$1$[esp+160], edx
; Line 351
	cmp	ecx, DWORD PTR [eax+884]
	jle	SHORT $LN29@ssl3_chang
; Line 352
	push	352					; 00000160H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	68					; 00000044H
	jmp	$LN45@ssl3_chang
$LN29@ssl3_chang:
; Line 356
	lea	eax, DWORD PTR _md$[esp+160]
	push	eax
	call	_EVP_MD_CTX_init
; Line 357
	push	ebp
	push	DWORD PTR _ms$1$[esp+168]
	push	ebx
	call	_memcpy
	add	esp, 16					; 00000010H
; Line 358
	cmp	DWORD PTR _is_exp$1$[esp+160], 0
	je	$LN31@ssl3_chang
; Line 363
	push	0
	call	_EVP_md5
	push	eax
	lea	eax, DWORD PTR _md$[esp+168]
	push	eax
	call	_EVP_DigestInit_ex
; Line 364
	push	edi
	push	DWORD PTR _key$1$[esp+176]
	lea	eax, DWORD PTR _md$[esp+180]
	push	eax
	call	_EVP_DigestUpdate
; Line 365
	mov	edi, DWORD PTR _er1$1$[esp+184]
	lea	eax, DWORD PTR _md$[esp+184]
	push	32					; 00000020H
	push	edi
	push	eax
	call	_EVP_DigestUpdate
; Line 366
	mov	ebx, DWORD PTR _er2$1$[esp+196]
	lea	eax, DWORD PTR _md$[esp+196]
	push	32					; 00000020H
	push	ebx
	push	eax
	call	_EVP_DigestUpdate
; Line 367
	push	0
	lea	eax, DWORD PTR _exp_key$[esp+212]
	push	eax
	lea	eax, DWORD PTR _md$[esp+216]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 60					; 0000003cH
; Line 368
	lea	eax, DWORD PTR _exp_key$[esp+160]
; Line 370
	cmp	DWORD PTR _k$1$[esp+160], 0
	mov	DWORD PTR _key$1$[esp+160], eax
	jle	SHORT $LN31@ssl3_chang
; Line 371
	push	0
	call	_EVP_md5
	push	eax
	lea	eax, DWORD PTR _md$[esp+168]
	push	eax
	call	_EVP_DigestInit_ex
; Line 372
	push	32					; 00000020H
	lea	eax, DWORD PTR _md$[esp+176]
	push	edi
	push	eax
	call	_EVP_DigestUpdate
; Line 373
	push	32					; 00000020H
	lea	eax, DWORD PTR _md$[esp+188]
	push	ebx
	push	eax
	call	_EVP_DigestUpdate
; Line 374
	push	0
	lea	eax, DWORD PTR _exp_iv$[esp+200]
	push	eax
	lea	eax, DWORD PTR _md$[esp+204]
	push	eax
	call	_EVP_DigestFinal_ex
; Line 375
	lea	eax, DWORD PTR _exp_iv$[esp+208]
	add	esp, 48					; 00000030H
	mov	DWORD PTR _iv$1$[esp+160], eax
$LN31@ssl3_chang:
; Line 379
	mov	eax, DWORD PTR [esi+192]
	mov	DWORD PTR [eax+4], 0
; Line 381
	mov	eax, DWORD PTR _which$[esp+156]
	and	eax, 2
	push	eax
	push	DWORD PTR _iv$1$[esp+164]
	push	DWORD PTR _key$1$[esp+168]
	push	0
	push	DWORD PTR _c$1$[esp+176]
	push	DWORD PTR _dd$1$[esp+180]
	call	_EVP_CipherInit_ex
; Line 400
	lea	eax, DWORD PTR _exp_key$[esp+184]
	push	64					; 00000040H
	push	eax
	call	_OPENSSL_cleanse
; Line 401
	lea	eax, DWORD PTR _exp_iv$[esp+192]
	push	16					; 00000010H
	push	eax
	call	_OPENSSL_cleanse
; Line 402
	lea	eax, DWORD PTR _md$[esp+200]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 44					; 0000002cH
; Line 403
	mov	eax, 1
	jmp	$LN1@ssl3_chang
_ssl3_change_cipher_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_setup_key_block
_TEXT	SEGMENT
_hash$ = -8						; size = 4
_comp$ = -4						; size = 4
_c$ = 8							; size = 4
_s$ = 8							; size = 4
_ssl3_setup_key_block PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 411
	mov	eax, 8
	call	__chkstk
	push	edi
; Line 419
	mov	edi, DWORD PTR _s$[esp+8]
	mov	eax, DWORD PTR [edi+88]
	cmp	DWORD PTR [eax+884], 0
	je	SHORT $LN2@ssl3_setup
; Line 420
	mov	eax, 1
	pop	edi
; Line 475
	add	esp, 8
	ret	0
$LN2@ssl3_setup:
; Line 422
	lea	eax, DWORD PTR _comp$[esp+12]
	push	eax
	push	0
	push	0
	lea	eax, DWORD PTR _hash$[esp+24]
	push	eax
	lea	eax, DWORD PTR _c$[esp+24]
	push	eax
	push	DWORD PTR [edi+192]
	call	_ssl_cipher_get_evp
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN3@ssl3_setup
; Line 423
	push	423					; 000001a7H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	138					; 0000008aH
	push	157					; 0000009dH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 424
	xor	eax, eax
	pop	edi
; Line 475
	add	esp, 8
	ret	0
$LN3@ssl3_setup:
; Line 427
	mov	ecx, DWORD PTR [edi+88]
	mov	eax, DWORD PTR _c$[esp+8]
	push	ebp
	mov	DWORD PTR [ecx+892], eax
; Line 428
	mov	ecx, DWORD PTR [edi+88]
	mov	eax, DWORD PTR _hash$[esp+16]
	mov	DWORD PTR [ecx+896], eax
; Line 432
	mov	ecx, DWORD PTR [edi+88]
	mov	eax, DWORD PTR _comp$[esp+16]
	mov	DWORD PTR [ecx+908], eax
; Line 435
	push	DWORD PTR _hash$[esp+16]
	call	_EVP_MD_size
	mov	ebp, eax
	add	esp, 4
; Line 436
	test	ebp, ebp
	jns	SHORT $LN4@ssl3_setup
; Line 437
	pop	ebp
	xor	eax, eax
	pop	edi
; Line 475
	add	esp, 8
	ret	0
$LN4@ssl3_setup:
	push	ebx
	push	esi
; Line 439
	push	DWORD PTR _c$[esp+20]
	call	_EVP_CIPHER_iv_length
	push	DWORD PTR _c$[esp+24]
; Line 440
	lea	ebx, DWORD PTR [eax+ebp]
	call	_EVP_CIPHER_key_length
; Line 442
	push	edi
	lea	ebx, DWORD PTR [ebx+eax]
	add	ebx, ebx
	call	_ssl3_cleanup_key_block
; Line 444
	push	444					; 000001bcH
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	ebx
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 24					; 00000018H
	test	ecx, ecx
	jne	SHORT $LN5@ssl3_setup
$err$14:
; Line 473
	push	473					; 000001d9H
	push	OFFSET ??_C@_0P@NBDCMPEC@?4?2ssl?2s3_enc?4c?$AA@
	push	65					; 00000041H
	push	157					; 0000009dH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 474
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	ebp
	pop	edi
; Line 475
	add	esp, 8
	ret	0
$LN5@ssl3_setup:
; Line 447
	mov	eax, DWORD PTR [edi+88]
; Line 450
	push	ebx
	push	ecx
	push	edi
	mov	DWORD PTR [eax+884], ebx
	mov	eax, DWORD PTR [edi+88]
	mov	DWORD PTR [eax+888], ecx
	call	_ssl3_generate_key_block
	add	esp, 12					; 0000000cH
	mov	edx, eax
; Line 452
	test	DWORD PTR [edi+256], 2048		; 00000800H
	jne	SHORT $LN9@ssl3_setup
; Line 457
	mov	ecx, DWORD PTR [edi+88]
	mov	DWORD PTR [ecx+224], 1
; Line 459
	mov	ecx, DWORD PTR [edi+192]
	mov	ecx, DWORD PTR [ecx+180]
	test	ecx, ecx
	je	SHORT $LN9@ssl3_setup
; Line 460
	cmp	DWORD PTR [ecx+20], 32			; 00000020H
	jne	SHORT $LN8@ssl3_setup
; Line 461
	mov	eax, DWORD PTR [edi+88]
	mov	DWORD PTR [eax+224], 0
$LN8@ssl3_setup:
; Line 464
	mov	eax, DWORD PTR [edi+192]
	mov	eax, DWORD PTR [eax+180]
	cmp	DWORD PTR [eax+20], 4
	jne	SHORT $LN9@ssl3_setup
; Line 465
	mov	eax, DWORD PTR [edi+88]
	mov	DWORD PTR [eax+224], 0
$LN9@ssl3_setup:
; Line 470
	pop	esi
	pop	ebx
	pop	ebp
	mov	eax, edx
	pop	edi
; Line 475
	add	esp, 8
	ret	0
_ssl3_setup_key_block ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_init_finished_mac
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_init_finished_mac PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_enc.c
; Line 562
	push	esi
; Line 563
	mov	esi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [esi+88]
	mov	eax, DWORD PTR [eax+376]
	test	eax, eax
	je	SHORT $LN2@ssl3_init_
; Line 564
	push	eax
	call	_BIO_free
	add	esp, 4
$LN2@ssl3_init_:
; Line 565
	mov	eax, DWORD PTR [esi+88]
	cmp	DWORD PTR [eax+380], 0
	je	SHORT $LN3@ssl3_init_
; Line 566
	push	esi
	call	_ssl3_free_digest_list
	add	esp, 4
$LN3@ssl3_init_:
; Line 567
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
	mov	ecx, DWORD PTR [esi+88]
; Line 568
	push	0
	push	1
	push	9
	mov	DWORD PTR [ecx+376], eax
	mov	eax, DWORD PTR [esi+88]
	push	DWORD PTR [eax+376]
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
	pop	esi
; Line 569
	ret	0
_ssl3_init_finished_mac ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
_int_no_description DD FLAT:??_C@_00CNPNBAHC@?$AA@
_DATA	ENDS
PUBLIC	_ENGINE_ctrl
PUBLIC	_ENGINE_cmd_is_executable
PUBLIC	_ENGINE_ctrl_cmd
PUBLIC	_ENGINE_ctrl_cmd_string
PUBLIC	??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
EXTRN	__imp__strtol:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_clear_error:PROC
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
CONST	SEGMENT
??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@ DB '.\crypto\engi'
	DB	'ne\eng_ctrl.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_ctrl_helper
_TEXT	SEGMENT
_e$ = 8							; size = 4
_cmd$ = 12						; size = 4
_i$ = 16						; size = 4
_p$ = 20						; size = 4
_f$ = 24						; size = 4
_int_ctrl_helper PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
; Line 109
	push	esi
; Line 113
	mov	esi, DWORD PTR _cmd$[esp]
	cmp	esi, 11					; 0000000bH
	jne	SHORT $LN4@int_ctrl_h
; Line 114
	mov	eax, DWORD PTR _e$[esp]
	mov	eax, DWORD PTR [eax+80]
	test	eax, eax
	je	SHORT $LN6@int_ctrl_h
; Line 72
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@int_ctrl_h
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN6@int_ctrl_h
; Line 116
	mov	eax, DWORD PTR [eax]
	pop	esi
; Line 177
	ret	0
$LN6@int_ctrl_h:
; Line 115
	xor	eax, eax
	pop	esi
; Line 177
	ret	0
$LN4@int_ctrl_h:
	push	ebp
; Line 120
	mov	ebp, DWORD PTR _p$[esp+4]
	cmp	esi, 13					; 0000000dH
	je	SHORT $LN8@int_ctrl_h
	cmp	esi, 15					; 0000000fH
	je	SHORT $LN8@int_ctrl_h
	cmp	esi, 17					; 00000011H
	jne	SHORT $LN9@int_ctrl_h
$LN8@int_ctrl_h:
; Line 122
	test	ebp, ebp
	jne	SHORT $LN9@int_ctrl_h
; Line 123
	push	123					; 0000007bH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	67					; 00000043H
; Line 124
	jmp	SHORT $LN55@int_ctrl_h
$LN9@int_ctrl_h:
; Line 130
	mov	eax, DWORD PTR _e$[esp+4]
	cmp	esi, 13					; 0000000dH
	jne	SHORT $LN10@int_ctrl_h
	mov	esi, DWORD PTR [eax+80]
	test	esi, esi
	je	SHORT $LN12@int_ctrl_h
	push	ebp
	push	esi
	call	_int_ctrl_cmd_by_name
	add	esp, 8
	test	eax, eax
	js	SHORT $LN12@int_ctrl_h
; Line 134
	add	eax, eax
	pop	ebp
	mov	eax, DWORD PTR [esi+eax*8]
	pop	esi
; Line 177
	ret	0
$LN12@int_ctrl_h:
; Line 131
	push	131					; 00000083H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	137					; 00000089H
$LN55@int_ctrl_h:
	push	172					; 000000acH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 132
	or	eax, -1
	pop	ebp
	pop	esi
; Line 177
	ret	0
$LN10@int_ctrl_h:
	push	edi
; Line 140
	mov	edi, DWORD PTR [eax+80]
	test	edi, edi
	je	$LN14@int_ctrl_h
	push	ebx
; Line 92
	mov	ebx, DWORD PTR _i$[esp+12]
; Line 140
	mov	ecx, edi
; Line 92
	xor	eax, eax
	npad	6
$LL31@int_ctrl_h:
; Line 72
	mov	edx, DWORD PTR [ecx]
	test	edx, edx
	je	SHORT $LN37@int_ctrl_h
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN37@int_ctrl_h
; Line 97
	cmp	edx, ebx
	jae	SHORT $LN52@int_ctrl_h
; Line 98
	inc	eax
; Line 99
	add	ecx, 16					; 00000010H
; Line 100
	jmp	SHORT $LL31@int_ctrl_h
$LN37@int_ctrl_h:
; Line 101
	cmp	edx, ebx
$LN52@int_ctrl_h:
	pop	ebx
	jne	$LN14@int_ctrl_h
; Line 140
	test	eax, eax
	js	$LN14@int_ctrl_h
; Line 147
	add	esi, -12				; fffffff4H
	cmp	esi, 6
	ja	$LN2@int_ctrl_h
	jmp	DWORD PTR $LN57@int_ctrl_h[esi*4]
$LN15@int_ctrl_h:
; Line 149
	lea	ecx, DWORD PTR [eax+1]
; Line 150
	shl	ecx, 4
	add	ecx, edi
	push	ecx
	call	_int_ctrl_cmd_is_null
	add	esp, 4
	test	eax, eax
	je	SHORT $LN16@int_ctrl_h
; Line 152
	pop	edi
	pop	ebp
	xor	eax, eax
	pop	esi
; Line 177
	ret	0
$LN16@int_ctrl_h:
; Line 154
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	ebp
	pop	esi
; Line 177
	ret	0
$LN17@int_ctrl_h:
; Line 156
	add	eax, eax
	mov	eax, DWORD PTR [edi+eax*8+4]
	lea	edx, DWORD PTR [eax+1]
$LL44@int_ctrl_h:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL44@int_ctrl_h
	pop	edi
	pop	ebp
	sub	eax, edx
	pop	esi
; Line 177
	ret	0
$LN19@int_ctrl_h:
; Line 158
	add	eax, eax
	mov	edx, DWORD PTR [edi+eax*8+4]
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+1]
	npad	4
$LL45@int_ctrl_h:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL45@int_ctrl_h
	jmp	SHORT $LN54@int_ctrl_h
$LN20@int_ctrl_h:
; Line 161
	add	eax, eax
	mov	eax, DWORD PTR [edi+eax*8+8]
	test	eax, eax
	je	SHORT $LN21@int_ctrl_h
; Line 162
	lea	edx, DWORD PTR [eax+1]
$LL46@int_ctrl_h:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL46@int_ctrl_h
	pop	edi
	pop	ebp
	sub	eax, edx
	pop	esi
; Line 177
	ret	0
$LN21@int_ctrl_h:
; Line 163
	mov	eax, DWORD PTR _int_no_description
	lea	edx, DWORD PTR [eax+1]
	npad	5
$LL47@int_ctrl_h:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL47@int_ctrl_h
	pop	edi
	pop	ebp
	sub	eax, edx
	pop	esi
; Line 177
	ret	0
$LN22@int_ctrl_h:
; Line 165
	add	eax, eax
	mov	edx, DWORD PTR [edi+eax*8+8]
	test	edx, edx
	je	SHORT $LN23@int_ctrl_h
; Line 166
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+1]
	npad	4
$LL48@int_ctrl_h:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL48@int_ctrl_h
	jmp	SHORT $LN54@int_ctrl_h
$LN23@int_ctrl_h:
; Line 169
	mov	edx, DWORD PTR _int_no_description
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+1]
$LL49@int_ctrl_h:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL49@int_ctrl_h
$LN54@int_ctrl_h:
	sub	ecx, esi
	push	edx
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	push	ebp
	call	_BIO_snprintf
	add	esp, 16					; 00000010H
	pop	edi
	pop	ebp
	pop	esi
; Line 177
	ret	0
$LN24@int_ctrl_h:
; Line 172
	add	eax, eax
	mov	eax, DWORD PTR [edi+eax*8+12]
	pop	edi
	pop	ebp
	pop	esi
; Line 177
	ret	0
$LN2@int_ctrl_h:
; Line 175
	push	175					; 000000afH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	110					; 0000006eH
; Line 176
	jmp	SHORT $LN53@int_ctrl_h
$LN14@int_ctrl_h:
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	138					; 0000008aH
$LN53@int_ctrl_h:
	push	172					; 000000acH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 144
	or	eax, -1
	pop	edi
	pop	ebp
	pop	esi
; Line 177
	ret	0
	npad	3
$LN57@int_ctrl_h:
	DD	$LN15@int_ctrl_h
	DD	$LN2@int_ctrl_h
	DD	$LN17@int_ctrl_h
	DD	$LN19@int_ctrl_h
	DD	$LN20@int_ctrl_h
	DD	$LN22@int_ctrl_h
	DD	$LN24@int_ctrl_h
_int_ctrl_helper ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_ctrl_cmd_by_num
_TEXT	SEGMENT
_defn$ = 8						; size = 4
_num$ = 12						; size = 4
_int_ctrl_cmd_by_num PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
; Line 92
	mov	eax, DWORD PTR _defn$[esp-4]
	xor	edx, edx
	push	esi
	mov	esi, DWORD PTR _num$[esp]
	npad	5
$LL2@int_ctrl_c:
; Line 72
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN8@int_ctrl_c
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN8@int_ctrl_c
; Line 97
	cmp	ecx, esi
	jae	SHORT $LN8@int_ctrl_c
; Line 98
	inc	edx
; Line 99
	add	eax, 16					; 00000010H
; Line 100
	jmp	SHORT $LL2@int_ctrl_c
$LN8@int_ctrl_c:
; Line 101
	or	ecx, -1
	cmp	DWORD PTR [eax], esi
	pop	esi
	cmove	ecx, edx
	mov	eax, ecx
; Line 105
	ret	0
_int_ctrl_cmd_by_num ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_ctrl_cmd_by_name
_TEXT	SEGMENT
_defn$ = 8						; size = 4
_s$ = 12						; size = 4
_int_ctrl_cmd_by_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
; Line 78
	push	ebx
; Line 79
	mov	ebx, DWORD PTR _s$[esp]
	push	esi
	mov	esi, DWORD PTR _defn$[esp+4]
	push	edi
	xor	edi, edi
	npad	3
$LL2@int_ctrl_c:
; Line 72
	cmp	DWORD PTR [esi], 0
	je	SHORT $LN12@int_ctrl_c
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN8@int_ctrl_c
; Line 80
	mov	ecx, ebx
	npad	2
$LL19@int_ctrl_c:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN20@int_ctrl_c
	test	dl, dl
	je	SHORT $LN21@int_ctrl_c
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN20@int_ctrl_c
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL19@int_ctrl_c
$LN21@int_ctrl_c:
	xor	eax, eax
	jmp	SHORT $LN22@int_ctrl_c
$LN20@int_ctrl_c:
	sbb	eax, eax
	or	eax, 1
$LN22@int_ctrl_c:
	test	eax, eax
	je	SHORT $LN8@int_ctrl_c
; Line 81
	inc	edi
; Line 82
	add	esi, 16					; 00000010H
; Line 83
	jmp	SHORT $LL2@int_ctrl_c
$LN8@int_ctrl_c:
; Line 72
	cmp	DWORD PTR [esi], 0
	je	SHORT $LN12@int_ctrl_c
	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN12@int_ctrl_c
; Line 87
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 88
	ret	0
$LN12@int_ctrl_c:
	pop	edi
	pop	esi
; Line 86
	or	eax, -1
	pop	ebx
; Line 88
	ret	0
_int_ctrl_cmd_by_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_ctrl_cmd_is_null
_TEXT	SEGMENT
_defn$ = 8						; size = 4
_int_ctrl_cmd_is_null PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
; Line 72
	mov	eax, DWORD PTR _defn$[esp-4]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@int_ctrl_c
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@int_ctrl_c
; Line 74
	xor	eax, eax
; Line 75
	ret	0
$LN3@int_ctrl_c:
; Line 73
	mov	eax, 1
; Line 75
	ret	0
_int_ctrl_cmd_is_null ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ENGINE_ctrl_cmd_string
_TEXT	SEGMENT
_ptr$ = 8						; size = 4
_e$ = 8							; size = 4
_cmd_name$ = 12						; size = 4
_arg$ = 16						; size = 4
_cmd_optional$ = 20					; size = 4
_ENGINE_ctrl_cmd_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
; Line 286
	push	esi
; Line 290
	mov	esi, DWORD PTR _e$[esp]
	test	esi, esi
	je	$LN3@ENGINE_ctr
	mov	eax, DWORD PTR _cmd_name$[esp]
	test	eax, eax
	je	$LN3@ENGINE_ctr
; Line 295
	cmp	DWORD PTR [esi+64], 0
	push	edi
	je	$LN5@ENGINE_ctr
	push	0
	push	eax
	push	0
	push	13					; 0000000dH
	push	esi
	call	_ENGINE_ctrl
	mov	edi, eax
	add	esp, 20					; 00000014H
	test	edi, edi
	jle	$LN5@ENGINE_ctr
; Line 314
	push	edi
	push	esi
	call	_ENGINE_cmd_is_executable
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@ENGINE_ctr
; Line 315
	push	316					; 0000013cH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	134					; 00000086H
; Line 317
	jmp	$LN24@ENGINE_ctr
$LN7@ENGINE_ctr:
; Line 320
	push	0
	push	0
	push	edi
	push	18					; 00000012H
	push	esi
	call	_ENGINE_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jns	SHORT $LN8@ENGINE_ctr
; Line 325
	push	326					; 00000146H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	110					; 0000006eH
; Line 327
	jmp	$LN24@ENGINE_ctr
$LN8@ENGINE_ctr:
; Line 332
	test	al, 4
	je	SHORT $LN9@ENGINE_ctr
; Line 333
	cmp	DWORD PTR _arg$[esp+4], 0
	je	SHORT $LN10@ENGINE_ctr
; Line 334
	push	335					; 0000014fH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	136					; 00000088H
; Line 336
	jmp	$LN24@ENGINE_ctr
$LN10@ENGINE_ctr:
; Line 344
	push	0
	push	0
	push	0
	push	edi
	push	esi
	call	_ENGINE_ctrl
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	test	eax, eax
	setg	cl
	pop	edi
	mov	eax, ecx
	pop	esi
; Line 385
	ret	0
$LN9@ENGINE_ctr:
	push	ebx
; Line 349
	mov	ebx, DWORD PTR _arg$[esp+8]
	test	ebx, ebx
	jne	SHORT $LN12@ENGINE_ctr
; Line 350
	push	351					; 0000015fH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	135					; 00000087H
; Line 352
	jmp	SHORT $LN22@ENGINE_ctr
$LN12@ENGINE_ctr:
; Line 355
	test	al, 2
	je	SHORT $LN13@ENGINE_ctr
; Line 357
	push	0
	push	ebx
	push	0
; Line 359
	jmp	SHORT $LN23@ENGINE_ctr
$LN13@ENGINE_ctr:
; Line 367
	test	al, 1
	jne	SHORT $LN15@ENGINE_ctr
; Line 368
	push	369					; 00000171H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	110					; 0000006eH
; Line 370
	jmp	SHORT $LN22@ENGINE_ctr
$LN15@ENGINE_ctr:
; Line 372
	push	10					; 0000000aH
	lea	eax, DWORD PTR _ptr$[esp+12]
	push	eax
	push	ebx
	call	DWORD PTR __imp__strtol
; Line 373
	mov	ecx, DWORD PTR _ptr$[esp+20]
	add	esp, 12					; 0000000cH
	cmp	ebx, ecx
	je	SHORT $LN17@ENGINE_ctr
	cmp	BYTE PTR [ecx], 0
	jne	SHORT $LN17@ENGINE_ctr
; Line 382
	push	0
	push	0
	push	eax
$LN23@ENGINE_ctr:
	push	edi
	push	esi
	call	_ENGINE_ctrl
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	test	eax, eax
	setg	cl
	pop	ebx
	pop	edi
	mov	eax, ecx
	pop	esi
; Line 385
	ret	0
$LN17@ENGINE_ctr:
; Line 374
	push	375					; 00000177H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	133					; 00000085H
$LN22@ENGINE_ctr:
	push	171					; 000000abH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 376
	xor	eax, eax
	pop	ebx
	pop	edi
	pop	esi
; Line 385
	ret	0
$LN5@ENGINE_ctr:
; Line 307
	cmp	DWORD PTR _cmd_optional$[esp+4], 0
	je	SHORT $LN6@ENGINE_ctr
; Line 308
	call	_ERR_clear_error
	pop	edi
; Line 309
	mov	eax, 1
	pop	esi
; Line 385
	ret	0
$LN6@ENGINE_ctr:
; Line 311
	push	311					; 00000137H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	137					; 00000089H
$LN24@ENGINE_ctr:
	push	171					; 000000abH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 312
	xor	eax, eax
	pop	edi
	pop	esi
; Line 385
	ret	0
$LN3@ENGINE_ctr:
; Line 291
	push	292					; 00000124H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	67					; 00000043H
	push	171					; 000000abH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 293
	xor	eax, eax
	pop	esi
; Line 385
	ret	0
_ENGINE_ctrl_cmd_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ENGINE_ctrl_cmd
_TEXT	SEGMENT
_e$ = 8							; size = 4
_cmd_name$ = 12						; size = 4
_i$ = 16						; size = 4
_p$ = 20						; size = 4
_f$ = 24						; size = 4
_cmd_optional$ = 28					; size = 4
_ENGINE_ctrl_cmd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
; Line 249
	push	esi
; Line 252
	mov	esi, DWORD PTR _e$[esp]
	test	esi, esi
	je	SHORT $LN3@ENGINE_ctr
	mov	eax, DWORD PTR _cmd_name$[esp]
	test	eax, eax
	je	SHORT $LN3@ENGINE_ctr
; Line 256
	cmp	DWORD PTR [esi+64], 0
	je	SHORT $LN5@ENGINE_ctr
	push	0
	push	eax
	push	0
	push	13					; 0000000dH
	push	esi
	call	_ENGINE_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN5@ENGINE_ctr
; Line 279
	push	DWORD PTR _f$[esp]
	push	DWORD PTR _p$[esp+4]
	push	DWORD PTR _i$[esp+8]
	push	eax
	push	esi
	call	_ENGINE_ctrl
	xor	ecx, ecx
	add	esp, 20					; 00000014H
	test	eax, eax
	setg	cl
	mov	eax, ecx
	pop	esi
; Line 282
	ret	0
$LN5@ENGINE_ctr:
; Line 268
	cmp	DWORD PTR _cmd_optional$[esp], 0
	je	SHORT $LN6@ENGINE_ctr
; Line 269
	call	_ERR_clear_error
; Line 270
	mov	eax, 1
	pop	esi
; Line 282
	ret	0
$LN6@ENGINE_ctr:
; Line 272
	push	272					; 00000110H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	137					; 00000089H
	push	178					; 000000b2H
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	esi
; Line 282
	ret	0
$LN3@ENGINE_ctr:
; Line 253
	push	253					; 000000fdH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	67					; 00000043H
	push	178					; 000000b2H
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 254
	xor	eax, eax
	pop	esi
; Line 282
	ret	0
_ENGINE_ctrl_cmd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ENGINE_cmd_is_executable
_TEXT	SEGMENT
_e$ = 8							; size = 4
_cmd$ = 12						; size = 4
_ENGINE_cmd_is_executable PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
; Line 235
	push	0
	push	0
	push	DWORD PTR _cmd$[esp+4]
	push	18					; 00000012H
	push	DWORD PTR _e$[esp+12]
	call	_ENGINE_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jns	SHORT $LN2@ENGINE_cmd
; Line 236
	push	237					; 000000edH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	138					; 0000008aH
	push	170					; 000000aaH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 238
	xor	eax, eax
; Line 245
	ret	0
$LN2@ENGINE_cmd:
	test	al, 7
; Line 241
	mov	eax, 0
	setne	al
; Line 245
	ret	0
_ENGINE_cmd_is_executable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ENGINE_ctrl
_TEXT	SEGMENT
_e$ = 8							; size = 4
_cmd$ = 12						; size = 4
_i$ = 16						; size = 4
_p$ = 20						; size = 4
_f$ = 24						; size = 4
_ENGINE_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\engine\eng_ctrl.c
; Line 180
	push	esi
; Line 182
	mov	esi, DWORD PTR _e$[esp]
	test	esi, esi
	jne	SHORT $LN4@ENGINE_ctr
; Line 183
	push	183					; 000000b7H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	67					; 00000043H
	push	142					; 0000008eH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 184
	xor	eax, eax
	pop	esi
; Line 229
	ret	0
$LN4@ENGINE_ctr:
	push	ebx
	push	edi
; Line 186
	push	186					; 000000baH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	30					; 0000001eH
	push	9
	call	_CRYPTO_lock
; Line 188
	push	188					; 000000bcH
	xor	ebx, ebx
	cmp	DWORD PTR [esi+88], ebx
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	30					; 0000001eH
	push	10					; 0000000aH
	setg	bl
	call	_CRYPTO_lock
; Line 189
	mov	edi, DWORD PTR [esi+64]
	xor	ecx, ecx
	add	esp, 32					; 00000020H
	test	edi, edi
	setne	cl
; Line 190
	test	ebx, ebx
	jne	SHORT $LN5@ENGINE_ctr
; Line 191
	push	191					; 000000bfH
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	130					; 00000082H
; Line 192
	jmp	SHORT $LN15@ENGINE_ctr
$LN5@ENGINE_ctr:
; Line 198
	mov	edx, DWORD PTR _cmd$[esp+8]
	cmp	edx, 10					; 0000000aH
	je	$LN6@ENGINE_ctr
	lea	eax, DWORD PTR [edx-11]
	cmp	eax, 7
	ja	SHORT $LN9@ENGINE_ctr
; Line 209
	test	ecx, ecx
	je	SHORT $LN13@ENGINE_ctr
	test	BYTE PTR [esi+84], 2
	jne	SHORT $LN11@ENGINE_ctr
; Line 210
	push	DWORD PTR _f$[esp+8]
	push	DWORD PTR _p$[esp+12]
	push	DWORD PTR _i$[esp+16]
	push	edx
	push	esi
	call	_int_ctrl_helper
	add	esp, 20					; 00000014H
	pop	edi
	pop	ebx
	pop	esi
; Line 229
	ret	0
$LN13@ENGINE_ctr:
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	120					; 00000078H
	push	142					; 0000008eH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 218
	or	eax, -1
	pop	edi
	pop	ebx
	pop	esi
; Line 229
	ret	0
$LN9@ENGINE_ctr:
; Line 224
	test	ecx, ecx
	jne	SHORT $LN11@ENGINE_ctr
; Line 225
	push	225					; 000000e1H
	push	OFFSET ??_C@_0BL@IFOBOMPO@?4?2crypto?2engine?2eng_ctrl?4c?$AA@
	push	120					; 00000078H
$LN15@ENGINE_ctr:
	push	142					; 0000008eH
	push	38					; 00000026H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 226
	xor	eax, eax
	pop	edi
	pop	ebx
	pop	esi
; Line 229
	ret	0
$LN11@ENGINE_ctr:
; Line 228
	push	DWORD PTR _f$[esp+8]
	push	DWORD PTR _p$[esp+12]
	push	DWORD PTR _i$[esp+16]
	push	edx
	push	esi
	call	edi
	add	esp, 20					; 00000014H
	pop	edi
	pop	ebx
	pop	esi
; Line 229
	ret	0
$LN6@ENGINE_ctr:
	pop	edi
	pop	ebx
; Line 200
	mov	eax, ecx
	pop	esi
; Line 229
	ret	0
_ENGINE_ctrl ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\dsa.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_dsa_main
PUBLIC	??_C@_07CGGPPMGB@?9inform?$AA@			; `string'
PUBLIC	??_C@_08LPHBEAIF@?9outform?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_08KCDBEMAI@?9passout?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@		; `string'
PUBLIC	??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@		; `string'
PUBLIC	??_C@_09BBENBNGN@?9pvk?9none?$AA@		; `string'
PUBLIC	??_C@_06JPEJAHHH@?9noout?$AA@			; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_08NJNHONAF@?9modulus?$AA@			; `string'
PUBLIC	??_C@_06NLLOJDKN@?9pubin?$AA@			; `string'
PUBLIC	??_C@_07NGPHMOHJ@?9pubout?$AA@			; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@	; `string'
PUBLIC	??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@ ; `string'
PUBLIC	??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@ ; `string'
PUBLIC	??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ ; `string'
PUBLIC	??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ ; `string'
PUBLIC	??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ ; `string'
PUBLIC	??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; `string'
PUBLIC	??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ ; `string'
PUBLIC	??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@ ; `string'
PUBLIC	??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ ; `string'
PUBLIC	??_C@_0CN@JBGFOMDF@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5DSA?5p@ ; `string'
PUBLIC	??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; `string'
PUBLIC	??_C@_0O@NEOMHJHN@read?5DSA?5key?6?$AA@		; `string'
PUBLIC	??_C@_0L@KEAMIOLD@Public?5Key?$AA@		; `string'
PUBLIC	??_C@_0M@NBDOOMPD@Private?5Key?$AA@		; `string'
PUBLIC	??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@	; `string'
PUBLIC	??_C@_0M@DICEKGAG@Public?5Key?$DN?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BB@GNBKIMPE@writing?5DSA?5key?6?$AA@	; `string'
PUBLIC	??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; `string'
PUBLIC	??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_print:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_PKEY_set1_DSA:PROC
EXTRN	_EVP_PKEY_get1_DSA:PROC
EXTRN	_EVP_PKEY_new:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_DSA_free:PROC
EXTRN	_DSA_print:PROC
EXTRN	_i2d_DSA_PUBKEY_bio:PROC
EXTRN	_i2d_DSAPrivateKey_bio:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_key:PROC
EXTRN	_load_pubkey:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_PEM_write_bio_DSAPrivateKey:PROC
EXTRN	_PEM_write_bio_DSA_PUBKEY:PROC
EXTRN	_i2b_PrivateKey_bio:PROC
EXTRN	_i2b_PublicKey_bio:PROC
EXTRN	_i2b_PVK_bio:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@
CONST	SEGMENT
??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@ DB 'unable to w'
	DB	'rite private key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
CONST	SEGMENT
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ DB 'bad output '
	DB	'format specified for outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GNBKIMPE@writing?5DSA?5key?6?$AA@
CONST	SEGMENT
??_C@_0BB@GNBKIMPE@writing?5DSA?5key?6?$AA@ DB 'writing DSA key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DICEKGAG@Public?5Key?$DN?$AA@
CONST	SEGMENT
??_C@_0M@DICEKGAG@Public?5Key?$DN?$AA@ DB 'Public Key=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@
CONST	SEGMENT
??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@ DB 'unable to load Key', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
CONST	SEGMENT
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ DB 'Private Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
CONST	SEGMENT
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ DB 'Public Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NEOMHJHN@read?5DSA?5key?6?$AA@
CONST	SEGMENT
??_C@_0O@NEOMHJHN@read?5DSA?5key?6?$AA@ DB 'read DSA key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ DB 'Error getting pas'
	DB	'swords', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JBGFOMDF@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5DSA?5p@
CONST	SEGMENT
??_C@_0CN@JBGFOMDF@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5DSA?5p@ DB ' -m'
	DB	'odulus        print the DSA public value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@
CONST	SEGMENT
??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ DB ' '
	DB	'-noout          don''t print key out', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@
CONST	SEGMENT
??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@ DB ' '
	DB	'-text           print the key in text', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-seed           encrypt PEM output with cbc seed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'                encrypt PEM output with cbc camellia', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
CONST	SEGMENT
??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ DB ' -camellia'
	DB	'128, -camellia192, -camellia256', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'                encrypt PEM output with cbc aes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
CONST	SEGMENT
??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ DB ' -aes128'
	DB	', -aes192, -aes256', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-idea           encrypt PEM output with cbc idea', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-des3           encrypt PEM output with ede cbc des using 168'
	DB	' bit key', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-des            encrypt PEM output with cbc des', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
CONST	SEGMENT
??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ DB ' -'
	DB	'engine e       use engine e, possibly a hardware device.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
CONST	SEGMENT
??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ DB ' -passo'
	DB	'ut arg    output file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ DB ' -'
	DB	'out arg        output file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
CONST	SEGMENT
??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ DB ' -pass'
	DB	'in arg     input file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ DB ' -i'
	DB	'n arg         input file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@
CONST	SEGMENT
??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@ DB ' -outf'
	DB	'orm arg    output format - DER or PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@
CONST	SEGMENT
??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@ DB ' -in'
	DB	'form arg     input format - DER or PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
CONST	SEGMENT
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ DB 'where options are', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
CONST	SEGMENT
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ DB '%'
	DB	's [options] <infile >outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGPHMOHJ@?9pubout?$AA@
CONST	SEGMENT
??_C@_07NGPHMOHJ@?9pubout?$AA@ DB '-pubout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLLOJDKN@?9pubin?$AA@
CONST	SEGMENT
??_C@_06NLLOJDKN@?9pubin?$AA@ DB '-pubin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJNHONAF@?9modulus?$AA@
CONST	SEGMENT
??_C@_08NJNHONAF@?9modulus?$AA@ DB '-modulus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JPEJAHHH@?9noout?$AA@
CONST	SEGMENT
??_C@_06JPEJAHHH@?9noout?$AA@ DB '-noout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BBENBNGN@?9pvk?9none?$AA@
CONST	SEGMENT
??_C@_09BBENBNGN@?9pvk?9none?$AA@ DB '-pvk-none', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@
CONST	SEGMENT
??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@ DB '-pvk-weak', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@
CONST	SEGMENT
??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@ DB '-pvk-strong', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KCDBEMAI@?9passout?$AA@
CONST	SEGMENT
??_C@_08KCDBEMAI@?9passout?$AA@ DB '-passout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPHBEAIF@?9outform?$AA@
CONST	SEGMENT
??_C@_08LPHBEAIF@?9outform?$AA@ DB '-outform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGGPPMGB@?9inform?$AA@
CONST	SEGMENT
??_C@_07CGGPPMGB@?9inform?$AA@ DB '-inform', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_main
_TEXT	SEGMENT
_infile$1$ = -64					; size = 4
_pubin$1$ = -60						; size = 4
_pvk_encr$1$ = -56					; size = 4
_pubout$1$ = -52					; size = 4
_passin$ = -48						; size = 4
_passout$ = -44						; size = 4
_informat$1$ = -40					; size = 4
_passargout$1$ = -36					; size = 4
_passargin$1$ = -32					; size = 4
_dsa$1$ = -32						; size = 4
_outfile$1$ = -28					; size = 4
_text$1$ = -24						; size = 4
_modulus$1$ = -20					; size = 4
_noout$1$ = -16						; size = 4
_outformat$1$ = -12					; size = 4
_enc$1$ = -8						; size = 4
_prog$1$ = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_dsa_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\dsa.c
; Line 99
	mov	eax, 64					; 00000040H
	call	__chkstk
; Line 120
	mov	eax, DWORD PTR _bio_err
	push	ebx
	xor	ebx, ebx
	mov	DWORD PTR _pvk_encr$1$[esp+68], 2
	mov	DWORD PTR _enc$1$[esp+68], ebx
	mov	DWORD PTR _text$1$[esp+68], ebx
	mov	DWORD PTR _noout$1$[esp+68], ebx
	mov	DWORD PTR _pubin$1$[esp+68], ebx
	mov	DWORD PTR _pubout$1$[esp+68], ebx
	mov	DWORD PTR _passargin$1$[esp+68], ebx
	mov	DWORD PTR _passargout$1$[esp+68], ebx
	mov	DWORD PTR _passin$[esp+68], ebx
	mov	DWORD PTR _passout$[esp+68], ebx
	mov	DWORD PTR _modulus$1$[esp+68], ebx
	push	edi
	mov	edi, 1
	test	eax, eax
	jne	SHORT $LN5@dsa_main
; Line 121
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN5@dsa_main
; Line 122
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN5@dsa_main:
; Line 124
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN85@dsa_main
; Line 135
	mov	edi, DWORD PTR _argv$[esp+68]
	xor	eax, eax
	push	ebp
	push	esi
; Line 136
	mov	esi, DWORD PTR _argc$[esp+76]
	xor	ebp, ebp
	mov	DWORD PTR _infile$1$[esp+80], eax
	dec	esi
	mov	DWORD PTR _outfile$1$[esp+80], eax
	mov	eax, DWORD PTR [edi]
; Line 137
	add	edi, 4
	mov	DWORD PTR _informat$1$[esp+80], 3
	mov	DWORD PTR _outformat$1$[esp+80], 3
	mov	DWORD PTR _prog$1$[esp+80], eax
; Line 138
	cmp	esi, 1
	jl	$LN45@dsa_main
	npad	1
$LL2@dsa_main:
; Line 139
	mov	ebx, DWORD PTR [edi]
	mov	ecx, OFFSET ??_C@_07CGGPPMGB@?9inform?$AA@
	mov	eax, ebx
	npad	7
$LL102@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN103@dsa_main
	test	dl, dl
	je	SHORT $LN104@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN103@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL102@dsa_main
$LN104@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN105@dsa_main
$LN103@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN105@dsa_main:
	test	eax, eax
	jne	SHORT $LN7@dsa_main
; Line 140
	dec	esi
	cmp	esi, 1
	jl	$bad$172
; Line 142
	push	DWORD PTR [edi+4]
	add	edi, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _informat$1$[esp+80], eax
	jmp	$LN44@dsa_main
$LN7@dsa_main:
; Line 143
	mov	ecx, OFFSET ??_C@_08LPHBEAIF@?9outform?$AA@
	mov	eax, ebx
$LL106@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN107@dsa_main
	test	dl, dl
	je	SHORT $LN108@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN107@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL106@dsa_main
$LN108@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN109@dsa_main
$LN107@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN109@dsa_main:
	test	eax, eax
	jne	SHORT $LN10@dsa_main
; Line 144
	dec	esi
	cmp	esi, 1
	jl	$bad$172
; Line 146
	push	DWORD PTR [edi+4]
	add	edi, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _outformat$1$[esp+80], eax
	jmp	$LN44@dsa_main
$LN10@dsa_main:
; Line 147
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, ebx
$LL110@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN111@dsa_main
	test	dl, dl
	je	SHORT $LN112@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN111@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL110@dsa_main
$LN112@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN113@dsa_main
$LN111@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN113@dsa_main:
	test	eax, eax
	jne	SHORT $LN13@dsa_main
; Line 148
	dec	esi
	cmp	esi, 1
	jl	$bad$172
; Line 150
	mov	edx, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _infile$1$[esp+80], edx
	jmp	$LN44@dsa_main
$LN13@dsa_main:
; Line 151
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, ebx
	npad	5
$LL114@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN115@dsa_main
	test	dl, dl
	je	SHORT $LN116@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN115@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL114@dsa_main
$LN116@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN117@dsa_main
$LN115@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN117@dsa_main:
	test	eax, eax
	jne	SHORT $LN16@dsa_main
; Line 152
	dec	esi
	cmp	esi, 1
	jl	$bad$172
; Line 154
	mov	edx, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _outfile$1$[esp+80], edx
	jmp	$LN44@dsa_main
$LN16@dsa_main:
; Line 155
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, ebx
	npad	7
$LL118@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN119@dsa_main
	test	dl, dl
	je	SHORT $LN120@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN119@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL118@dsa_main
$LN120@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN121@dsa_main
$LN119@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN121@dsa_main:
	test	eax, eax
	jne	SHORT $LN19@dsa_main
; Line 156
	dec	esi
	cmp	esi, 1
	jl	$bad$172
; Line 158
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _passargin$1$[esp+80], eax
	jmp	$LN44@dsa_main
$LN19@dsa_main:
; Line 159
	mov	ecx, OFFSET ??_C@_08KCDBEMAI@?9passout?$AA@
	mov	eax, ebx
	npad	7
$LL122@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN123@dsa_main
	test	dl, dl
	je	SHORT $LN124@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN123@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL122@dsa_main
$LN124@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN125@dsa_main
$LN123@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN125@dsa_main:
	test	eax, eax
	jne	SHORT $LN22@dsa_main
; Line 160
	dec	esi
	cmp	esi, 1
	jl	$bad$172
; Line 162
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _passargout$1$[esp+80], eax
; Line 163
	jmp	$LN44@dsa_main
$LN22@dsa_main:
; Line 165
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, ebx
	npad	7
$LL126@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN127@dsa_main
	test	dl, dl
	je	SHORT $LN128@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN127@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL126@dsa_main
$LN128@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN129@dsa_main
$LN127@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN129@dsa_main:
	test	eax, eax
	jne	SHORT $LN25@dsa_main
; Line 166
	dec	esi
	cmp	esi, 1
	jl	$bad$172
; Line 168
	mov	ebp, DWORD PTR [edi+4]
	add	edi, 4
; Line 169
	jmp	$LN44@dsa_main
$LN25@dsa_main:
; Line 171
	mov	ecx, OFFSET ??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@
	mov	eax, ebx
$LL130@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN131@dsa_main
	test	dl, dl
	je	SHORT $LN132@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN131@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL130@dsa_main
$LN132@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN133@dsa_main
$LN131@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN133@dsa_main:
	test	eax, eax
	jne	SHORT $LN28@dsa_main
; Line 172
	mov	DWORD PTR _pvk_encr$1$[esp+80], 2
	jmp	$LN44@dsa_main
$LN28@dsa_main:
; Line 173
	mov	ecx, OFFSET ??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@
	mov	eax, ebx
$LL134@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN135@dsa_main
	test	dl, dl
	je	SHORT $LN136@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN135@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL134@dsa_main
$LN136@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN137@dsa_main
$LN135@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN137@dsa_main:
	test	eax, eax
	jne	SHORT $LN30@dsa_main
; Line 174
	mov	DWORD PTR _pvk_encr$1$[esp+80], 1
	jmp	$LN44@dsa_main
$LN30@dsa_main:
; Line 175
	mov	ecx, OFFSET ??_C@_09BBENBNGN@?9pvk?9none?$AA@
	mov	eax, ebx
	npad	1
$LL138@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN139@dsa_main
	test	dl, dl
	je	SHORT $LN140@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN139@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL138@dsa_main
$LN140@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN141@dsa_main
$LN139@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN141@dsa_main:
	test	eax, eax
	jne	SHORT $LN32@dsa_main
; Line 176
	mov	DWORD PTR _pvk_encr$1$[esp+80], eax
	jmp	$LN44@dsa_main
$LN32@dsa_main:
; Line 177
	mov	ecx, OFFSET ??_C@_06JPEJAHHH@?9noout?$AA@
	mov	eax, ebx
	npad	7
$LL142@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN143@dsa_main
	test	dl, dl
	je	SHORT $LN144@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN143@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL142@dsa_main
$LN144@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN145@dsa_main
$LN143@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN145@dsa_main:
	test	eax, eax
	jne	SHORT $LN34@dsa_main
; Line 178
	mov	DWORD PTR _noout$1$[esp+80], 1
	jmp	$LN44@dsa_main
$LN34@dsa_main:
; Line 179
	mov	ecx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	eax, ebx
	npad	3
$LL146@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN147@dsa_main
	test	dl, dl
	je	SHORT $LN148@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN147@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL146@dsa_main
$LN148@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN149@dsa_main
$LN147@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN149@dsa_main:
	test	eax, eax
	jne	SHORT $LN36@dsa_main
; Line 180
	mov	DWORD PTR _text$1$[esp+80], 1
	jmp	$LN44@dsa_main
$LN36@dsa_main:
; Line 181
	mov	ecx, OFFSET ??_C@_08NJNHONAF@?9modulus?$AA@
	mov	eax, ebx
	npad	3
$LL150@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN151@dsa_main
	test	dl, dl
	je	SHORT $LN152@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN151@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL150@dsa_main
$LN152@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN153@dsa_main
$LN151@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN153@dsa_main:
	test	eax, eax
	jne	SHORT $LN38@dsa_main
; Line 182
	mov	DWORD PTR _modulus$1$[esp+80], 1
	jmp	$LN44@dsa_main
$LN38@dsa_main:
; Line 183
	mov	ecx, OFFSET ??_C@_06NLLOJDKN@?9pubin?$AA@
	mov	eax, ebx
	npad	3
$LL154@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN155@dsa_main
	test	dl, dl
	je	SHORT $LN156@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN155@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL154@dsa_main
$LN156@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN157@dsa_main
$LN155@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN157@dsa_main:
	test	eax, eax
	jne	SHORT $LN40@dsa_main
; Line 184
	mov	DWORD PTR _pubin$1$[esp+80], 1
	jmp	SHORT $LN44@dsa_main
$LN40@dsa_main:
; Line 185
	mov	ecx, OFFSET ??_C@_07NGPHMOHJ@?9pubout?$AA@
	mov	eax, ebx
	npad	6
$LL158@dsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN159@dsa_main
	test	dl, dl
	je	SHORT $LN160@dsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN159@dsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL158@dsa_main
$LN160@dsa_main:
	xor	eax, eax
	jmp	SHORT $LN161@dsa_main
$LN159@dsa_main:
	sbb	eax, eax
	or	eax, 1
$LN161@dsa_main:
	test	eax, eax
	jne	SHORT $LN42@dsa_main
; Line 186
	mov	DWORD PTR _pubout$1$[esp+80], 1
	jmp	SHORT $LN44@dsa_main
$LN42@dsa_main:
; Line 187
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	call	_EVP_get_cipherbyname
	add	esp, 4
	mov	DWORD PTR _enc$1$[esp+80], eax
	test	eax, eax
	je	SHORT $LN97@dsa_main
$LN44@dsa_main:
; Line 192
	dec	esi
; Line 193
	add	edi, 4
	cmp	esi, 1
	jge	$LL2@dsa_main
; Line 187
	xor	ebx, ebx
$LN45@dsa_main:
; Line 240
	call	_ERR_load_crypto_strings
; Line 243
	push	0
	push	ebp
	push	DWORD PTR _bio_err
	call	_setup_engine
	mov	edi, eax
; Line 246
	lea	eax, DWORD PTR _passout$[esp+92]
	push	eax
	lea	eax, DWORD PTR _passin$[esp+96]
	push	eax
	push	DWORD PTR _passargout$1$[esp+100]
	push	DWORD PTR _passargin$1$[esp+104]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	$LN46@dsa_main
; Line 247
	push	OFFSET ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 248
	mov	edi, 1
	jmp	$LN164@dsa_main
$LN97@dsa_main:
; Line 188
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$bad$172:
; Line 198
	push	DWORD PTR _prog$1$[esp+80]
	push	OFFSET ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 199
	push	OFFSET ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 200
	push	OFFSET ??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 201
	push	OFFSET ??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 202
	push	OFFSET ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 203
	push	OFFSET ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 205
	push	OFFSET ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 206
	push	OFFSET ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 209
	push	OFFSET ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 212
	push	OFFSET ??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 214
	push	OFFSET ??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 217
	push	OFFSET ??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 221
	push	OFFSET ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 222
	push	OFFSET ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 226
	push	OFFSET ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 227
	push	OFFSET ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 231
	push	OFFSET ??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 234
	push	OFFSET ??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 235
	push	OFFSET ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 236
	push	OFFSET ??_C@_0CN@JBGFOMDF@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5DSA?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 32					; 00000020H
; Line 237
	mov	edi, 1
	jmp	$LN164@dsa_main
$LN46@dsa_main:
; Line 251
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebp, eax
; Line 252
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 8
	mov	esi, eax
; Line 253
	test	ebp, ebp
	je	$LN48@dsa_main
	test	esi, esi
	je	$LN48@dsa_main
; Line 258
	mov	eax, DWORD PTR _infile$1$[esp+80]
	test	eax, eax
	jne	SHORT $LN49@dsa_main
; Line 259
	push	eax
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	0
	push	106					; 0000006aH
	push	ebp
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN51@dsa_main:
; Line 267
	push	OFFSET ??_C@_0O@NEOMHJHN@read?5DSA?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 273
	mov	eax, DWORD PTR _infile$1$[esp+88]
	add	esp, 8
	cmp	DWORD PTR _pubin$1$[esp+80], 0
	je	SHORT $LN52@dsa_main
	push	OFFSET ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
	push	edi
	push	DWORD PTR _passin$[esp+88]
	push	1
	push	DWORD PTR _informat$1$[esp+96]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_pubkey
	jmp	SHORT $LN166@dsa_main
$LN49@dsa_main:
; Line 261
	push	eax
	push	3
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN51@dsa_main
; Line 262
	mov	eax, DWORD PTR _infile$1$[esp+80]
	push	eax
	call	DWORD PTR __imp__perror
; Line 263
	jmp	$LN170@dsa_main
$LN52@dsa_main:
; Line 276
	push	OFFSET ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
	push	edi
	push	DWORD PTR _passin$[esp+88]
	push	1
	push	DWORD PTR _informat$1$[esp+96]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_key
$LN166@dsa_main:
	mov	edi, eax
	add	esp, 28					; 0000001cH
; Line 279
	test	edi, edi
	je	$LN101@dsa_main
; Line 280
	push	edi
	call	_EVP_PKEY_get1_DSA
	mov	ebx, eax
; Line 281
	push	edi
	mov	DWORD PTR _dsa$1$[esp+88], ebx
	call	_EVP_PKEY_free
	add	esp, 8
; Line 284
	test	ebx, ebx
	je	$LN101@dsa_main
; Line 290
	mov	edi, DWORD PTR _outfile$1$[esp+80]
	test	edi, edi
	jne	SHORT $LN56@dsa_main
; Line 291
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	edi
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN58@dsa_main:
; Line 305
	cmp	DWORD PTR _text$1$[esp+80], 0
	je	SHORT $LN60@dsa_main
; Line 306
	push	0
	push	ebx
	push	esi
	call	_DSA_print
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN60@dsa_main
; Line 307
	push	edi
	call	DWORD PTR __imp__perror
; Line 308
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 8
; Line 309
	jmp	$LN163@dsa_main
$LN56@dsa_main:
; Line 299
	push	edi
	push	5
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN58@dsa_main
; Line 300
	push	edi
	call	DWORD PTR __imp__perror
; Line 301
	jmp	$LN170@dsa_main
$LN60@dsa_main:
; Line 312
	cmp	DWORD PTR _modulus$1$[esp+80], 0
	je	SHORT $LN61@dsa_main
; Line 313
	mov	edi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0M@DICEKGAG@Public?5Key?$DN?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 314
	push	DWORD PTR [ebx+24]
	push	esi
	call	_BN_print
	add	esp, 16					; 00000010H
; Line 315
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN61@dsa_main:
; Line 318
	cmp	DWORD PTR _noout$1$[esp+80], 0
	jne	$LN163@dsa_main
; Line 320
	push	OFFSET ??_C@_0BB@GNBKIMPE@writing?5DSA?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 321
	mov	edi, DWORD PTR _outformat$1$[esp+88]
	add	esp, 8
	cmp	edi, 1
	jne	SHORT $LN63@dsa_main
; Line 322
	cmp	DWORD PTR _pubin$1$[esp+80], 0
	jne	SHORT $LN67@dsa_main
	cmp	DWORD PTR _pubout$1$[esp+80], 0
	jne	SHORT $LN67@dsa_main
; Line 325
	push	ebx
	push	esi
	call	_i2d_DSAPrivateKey_bio
	add	esp, 8
	mov	edi, eax
	jmp	$LN74@dsa_main
$LN67@dsa_main:
; Line 323
	push	ebx
	push	esi
	call	_i2d_DSA_PUBKEY_bio
	add	esp, 8
	mov	edi, eax
; Line 326
	jmp	$LN74@dsa_main
$LN63@dsa_main:
	cmp	edi, 3
	jne	SHORT $LN68@dsa_main
; Line 327
	cmp	DWORD PTR _pubin$1$[esp+80], 0
	jne	SHORT $LN72@dsa_main
	cmp	DWORD PTR _pubout$1$[esp+80], 0
	jne	SHORT $LN72@dsa_main
; Line 330
	push	DWORD PTR _passout$[esp+80]
	push	0
	push	0
	push	0
	push	DWORD PTR _enc$1$[esp+96]
	push	ebx
	push	esi
	call	_PEM_write_bio_DSAPrivateKey
	add	esp, 28					; 0000001cH
	mov	edi, eax
	jmp	$LN74@dsa_main
$LN72@dsa_main:
; Line 328
	push	ebx
	push	esi
	call	_PEM_write_bio_DSA_PUBKEY
	add	esp, 8
	mov	edi, eax
; Line 333
	jmp	$LN74@dsa_main
$LN68@dsa_main:
	cmp	edi, 11					; 0000000bH
	je	SHORT $LN75@dsa_main
	cmp	edi, 12					; 0000000cH
	je	SHORT $LN75@dsa_main
; Line 346
	push	OFFSET ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 347
	jmp	$LN163@dsa_main
$LN75@dsa_main:
; Line 335
	call	_EVP_PKEY_new
; Line 336
	push	DWORD PTR _dsa$1$[esp+80]
	mov	ebx, eax
	push	ebx
	call	_EVP_PKEY_set1_DSA
	add	esp, 8
; Line 337
	cmp	edi, 12					; 0000000cH
	jne	SHORT $LN76@dsa_main
; Line 338
	push	DWORD PTR _passout$[esp+80]
	push	0
	push	DWORD PTR _pvk_encr$1$[esp+88]
	push	ebx
	push	esi
	call	_i2b_PVK_bio
	add	esp, 20					; 00000014H
	jmp	SHORT $LN167@dsa_main
$LN76@dsa_main:
; Line 339
	cmp	DWORD PTR _pubin$1$[esp+80], 0
	jne	SHORT $LN80@dsa_main
	cmp	DWORD PTR _pubout$1$[esp+80], 0
	jne	SHORT $LN80@dsa_main
; Line 342
	push	ebx
	push	esi
	call	_i2b_PrivateKey_bio
	jmp	SHORT $LN168@dsa_main
$LN80@dsa_main:
; Line 340
	push	ebx
	push	esi
	call	_i2b_PublicKey_bio
$LN168@dsa_main:
	add	esp, 8
$LN167@dsa_main:
; Line 343
	push	ebx
	mov	edi, eax
	call	_EVP_PKEY_free
	mov	ebx, DWORD PTR _dsa$1$[esp+84]
	add	esp, 4
$LN74@dsa_main:
; Line 349
	test	edi, edi
	jg	SHORT $LN81@dsa_main
; Line 350
	push	OFFSET ??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@
$LN169@dsa_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 351
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 352
	jmp	SHORT $LN163@dsa_main
$LN81@dsa_main:
; Line 353
	xor	edi, edi
	jmp	SHORT $end$173
$LN101@dsa_main:
; Line 285
	push	OFFSET ??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@
; Line 287
	jmp	SHORT $LN169@dsa_main
$LN48@dsa_main:
; Line 254
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
$LN170@dsa_main:
	add	esp, 4
$LN163@dsa_main:
	mov	edi, 1
$end$173:
; Line 355
	test	ebp, ebp
	je	SHORT $LN83@dsa_main
; Line 356
	push	ebp
	call	_BIO_free
	add	esp, 4
$LN83@dsa_main:
; Line 357
	test	esi, esi
	je	SHORT $LN84@dsa_main
; Line 358
	push	esi
	call	_BIO_free_all
	add	esp, 4
$LN84@dsa_main:
; Line 359
	test	ebx, ebx
	je	SHORT $LN164@dsa_main
; Line 360
	push	ebx
	call	_DSA_free
	add	esp, 4
$LN164@dsa_main:
	pop	esi
	pop	ebp
$LN85@dsa_main:
; Line 361
	mov	eax, DWORD PTR _passin$[esp+72]
	test	eax, eax
	je	SHORT $LN86@dsa_main
; Line 362
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN86@dsa_main:
; Line 363
	mov	ecx, DWORD PTR _passout$[esp+72]
	test	ecx, ecx
	je	SHORT $LN162@dsa_main
; Line 364
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN162@dsa_main:
; Line 366
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 367
	add	esp, 64					; 00000040H
	ret	0
_dsa_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9 DD 0ffffffffH ; `SSL_get_ex_data_X509_STORE_CTX_idx'::`2'::ssl_x509_store_ctx_idx
_DATA	ENDS
PUBLIC	_SSL_load_client_CA_file
PUBLIC	_SSL_add_file_cert_subjects_to_stack
PUBLIC	_SSL_add_dir_cert_subjects_to_stack
PUBLIC	_SSL_set_client_CA_list
PUBLIC	_SSL_CTX_set_client_CA_list
PUBLIC	_SSL_get_client_CA_list
PUBLIC	_SSL_CTX_get_client_CA_list
PUBLIC	_SSL_add_client_CA
PUBLIC	_SSL_CTX_add_client_CA
PUBLIC	_SSL_dup_CA_list
PUBLIC	_SSL_get_ex_data_X509_STORE_CTX_idx
PUBLIC	_ssl_cert_new
PUBLIC	_ssl_cert_dup
PUBLIC	_ssl_cert_set_default_md
PUBLIC	_ssl_cert_inst
PUBLIC	_ssl_cert_clear_certs
PUBLIC	_ssl_cert_free
PUBLIC	_ssl_sess_cert_new
PUBLIC	_ssl_sess_cert_free
PUBLIC	_ssl_set_peer_cert_type
PUBLIC	_ssl_cert_set0_chain
PUBLIC	_ssl_cert_set1_chain
PUBLIC	_ssl_cert_add0_chain_cert
PUBLIC	_ssl_cert_add1_chain_cert
PUBLIC	_ssl_cert_select_current
PUBLIC	_ssl_cert_set_current
PUBLIC	_ssl_cert_set_cert_cb
PUBLIC	_ssl_verify_cert_chain
PUBLIC	_ssl_add_cert_chain
PUBLIC	_ssl_build_cert_chain
PUBLIC	_ssl_cert_set_cert_store
PUBLIC	??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@	; `string'
PUBLIC	??_C@_0BI@GCIOAHAF@SSL?5for?5verify?5callback?$AA@ ; `string'
PUBLIC	??_C@_0L@IMDPAGCM@ssl_client?$AA@		; `string'
PUBLIC	??_C@_0L@MDHNNNKP@ssl_server?$AA@		; `string'
PUBLIC	??_C@_05GFOLEBJA@?$CFs?1?$CFs?$AA@		; `string'
PUBLIC	??_C@_02HJPKOJGD@?8?$CJ?$AA@			; `string'
PUBLIC	??_C@_0BJ@LMCDNAEM@OPENSSL_DIR_read?$CI?$CGctx?0?5?8?$AA@ ; `string'
PUBLIC	??_C@_0O@HFNJECFC@Verify?5error?3?$AA@		; `string'
EXTRN	__imp___errno:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_OPENSSL_DIR_read:PROC
EXTRN	_OPENSSL_DIR_end:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_sk_shift:PROC
EXTRN	_sk_pop:PROC
EXTRN	_sk_set_cmp_func:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_BN_dup:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_BUF_MEM_grow_clean:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_EC_KEY_dup:PROC
EXTRN	_RSA_free:PROC
EXTRN	_RSA_up_ref:PROC
EXTRN	_DHparams_dup:PROC
EXTRN	_DH_free:PROC
EXTRN	_X509_STORE_new:PROC
EXTRN	_X509_STORE_free:PROC
EXTRN	_X509_STORE_CTX_init:PROC
EXTRN	_X509_STORE_CTX_cleanup:PROC
EXTRN	_X509_STORE_add_cert:PROC
EXTRN	_X509_STORE_CTX_get_ex_new_index:PROC
EXTRN	_X509_STORE_CTX_set_ex_data:PROC
EXTRN	_X509_STORE_CTX_get_error:PROC
EXTRN	_X509_STORE_CTX_get1_chain:PROC
EXTRN	_X509_STORE_CTX_set_flags:PROC
EXTRN	_X509_STORE_CTX_set_verify_cb:PROC
EXTRN	_X509_STORE_CTX_get0_param:PROC
EXTRN	_X509_STORE_CTX_set_default:PROC
EXTRN	_X509_VERIFY_PARAM_set1:PROC
EXTRN	_X509_verify_cert_error_string:PROC
EXTRN	_X509_NAME_dup:PROC
EXTRN	_X509_NAME_free:PROC
EXTRN	_X509_free:PROC
EXTRN	_i2d_X509:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_chain_up_ref:PROC
EXTRN	_X509_cmp:PROC
EXTRN	_X509_NAME_cmp:PROC
EXTRN	_X509_verify_cert:PROC
EXTRN	_PEM_read_bio_X509:PROC
EXTRN	_X509_check_purpose:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_peek_last_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_custom_exts_copy:PROC
EXTRN	_custom_exts_free:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0O@HFNJECFC@Verify?5error?3?$AA@
CONST	SEGMENT
??_C@_0O@HFNJECFC@Verify?5error?3?$AA@ DB 'Verify error:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LMCDNAEM@OPENSSL_DIR_read?$CI?$CGctx?0?5?8?$AA@
CONST	SEGMENT
??_C@_0BJ@LMCDNAEM@OPENSSL_DIR_read?$CI?$CGctx?0?5?8?$AA@ DB 'OPENSSL_DIR'
	DB	'_read(&ctx, ''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HJPKOJGD@?8?$CJ?$AA@
CONST	SEGMENT
??_C@_02HJPKOJGD@?8?$CJ?$AA@ DB ''')', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GFOLEBJA@?$CFs?1?$CFs?$AA@
CONST	SEGMENT
??_C@_05GFOLEBJA@?$CFs?1?$CFs?$AA@ DB '%s/%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MDHNNNKP@ssl_server?$AA@
CONST	SEGMENT
??_C@_0L@MDHNNNKP@ssl_server?$AA@ DB 'ssl_server', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IMDPAGCM@ssl_client?$AA@
CONST	SEGMENT
??_C@_0L@IMDPAGCM@ssl_client?$AA@ DB 'ssl_client', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GCIOAHAF@SSL?5for?5verify?5callback?$AA@
CONST	SEGMENT
??_C@_0BI@GCIOAHAF@SSL?5for?5verify?5callback?$AA@ DB 'SSL for verify cal'
	DB	'lback', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
CONST	SEGMENT
??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@ DB '.\ssl\ssl_cert.c', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_add_cert_to_buf
_TEXT	SEGMENT
_p$ = -4						; size = 4
_buf$ = 8						; size = 4
_l$ = 12						; size = 4
_x$ = 16						; size = 4
_ssl_add_cert_to_buf PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 1057
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 1061
	push	0
	push	DWORD PTR _x$[esp+16]
	call	_i2d_X509
	mov	ebx, eax
	add	esp, 8
; Line 1062
	test	ebx, ebx
	js	SHORT $LN3@ssl_add_ce
	mov	esi, DWORD PTR _l$[esp+12]
	mov	ebp, DWORD PTR _buf$[esp+12]
	mov	ecx, DWORD PTR [esi]
	add	ecx, 3
	add	ecx, ebx
	push	ecx
	push	ebp
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@ssl_add_ce
; Line 1066
	mov	ecx, DWORD PTR [ebp+4]
; Line 1067
	mov	eax, ebx
	add	ecx, DWORD PTR [esi]
	mov	DWORD PTR _p$[esp+16], ecx
	sar	eax, 16					; 00000010H
	mov	BYTE PTR [ecx], al
	mov	ecx, ebx
	mov	eax, DWORD PTR _p$[esp+16]
	sar	ecx, 8
	mov	BYTE PTR [eax+1], cl
	mov	eax, DWORD PTR _p$[esp+16]
	mov	BYTE PTR [eax+2], bl
; Line 1068
	lea	eax, DWORD PTR _p$[esp+16]
	add	DWORD PTR _p$[esp+16], 3
	push	eax
	push	DWORD PTR _x$[esp+16]
	call	_i2d_X509
	add	esp, 8
; Line 1069
	test	eax, eax
	jns	SHORT $LN4@ssl_add_ce
; Line 1071
	push	1071					; 0000042fH
; Line 1072
	jmp	SHORT $LN6@ssl_add_ce
$LN4@ssl_add_ce:
; Line 1074
	add	eax, 3
	add	DWORD PTR [esi], eax
; Line 1076
	mov	eax, 1
	pop	esi
	pop	ebp
	pop	ebx
; Line 1077
	pop	ecx
	ret	0
$LN3@ssl_add_ce:
; Line 1063
	push	1063					; 00000427H
$LN6@ssl_add_ce:
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	7
	push	319					; 0000013fH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1064
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 1077
	pop	ecx
	ret	0
_ssl_add_cert_to_buf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _xname_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_xname_cmp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 862
	mov	eax, DWORD PTR _b$[esp-4]
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR _a$[esp]
	push	DWORD PTR [eax]
	call	_X509_NAME_cmp
	add	esp, 8
; Line 863
	ret	0
_xname_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _add_client_CA
_TEXT	SEGMENT
_sk$ = 8						; size = 4
_x$ = 12						; size = 4
_add_client_CA PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 832
	push	edi
; Line 835
	mov	edi, DWORD PTR _x$[esp]
	test	edi, edi
	jne	SHORT $LN2@add_client
; Line 836
	xor	eax, eax
	pop	edi
; Line 848
	ret	0
$LN2@add_client:
	push	esi
; Line 837
	mov	esi, DWORD PTR _sk$[esp+4]
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN3@add_client
	call	_sk_new_null
	mov	DWORD PTR [esi], eax
	test	eax, eax
	je	SHORT $LN8@add_client
$LN3@add_client:
; Line 840
	push	edi
	call	_X509_get_subject_name
	push	eax
	call	_X509_NAME_dup
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN8@add_client
; Line 843
	push	edi
	push	DWORD PTR [esi]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@add_client
; Line 844
	push	edi
	call	_X509_NAME_free
	add	esp, 4
$LN8@add_client:
; Line 845
	pop	esi
	xor	eax, eax
	pop	edi
; Line 848
	ret	0
$LN5@add_client:
	pop	esi
; Line 847
	mov	eax, 1
	pop	edi
; Line 848
	ret	0
_add_client_CA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_client_CA_list
_TEXT	SEGMENT
_ca_list$ = 8						; size = 4
_name_list$ = 12					; size = 4
_set_client_CA_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 777
	push	esi
; Line 778
	mov	esi, DWORD PTR _ca_list$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@set_client
; Line 779
	push	OFFSET _X509_NAME_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN4@set_client:
; Line 781
	mov	eax, DWORD PTR _name_list$[esp]
	mov	DWORD PTR [esi], eax
	pop	esi
; Line 782
	ret	0
_set_client_CA_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_set_cert_store
_TEXT	SEGMENT
_c$ = 8							; size = 4
_store$ = 12						; size = 4
_chain$ = 16						; size = 4
_ref$ = 20						; size = 4
_ssl_cert_set_cert_store PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 1254
	cmp	DWORD PTR _chain$[esp-4], 0
	push	esi
; Line 1255
	mov	esi, DWORD PTR _c$[esp]
	je	SHORT $LN2@ssl_cert_s
	add	esi, 332				; 0000014cH
	jmp	SHORT $LN3@ssl_cert_s
$LN2@ssl_cert_s:
; Line 1257
	add	esi, 336				; 00000150H
$LN3@ssl_cert_s:
; Line 1258
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@ssl_cert_s
; Line 1259
	push	eax
	call	_X509_STORE_free
	add	esp, 4
$LN4@ssl_cert_s:
; Line 1261
	cmp	DWORD PTR _ref$[esp], 0
	mov	eax, DWORD PTR _store$[esp]
	mov	DWORD PTR [esi], eax
	pop	esi
	je	SHORT $LN7@ssl_cert_s
	test	eax, eax
	je	SHORT $LN7@ssl_cert_s
; Line 1262
	push	1262					; 000004eeH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	11					; 0000000bH
	add	eax, 68					; 00000044H
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
$LN7@ssl_cert_s:
; Line 1263
	mov	eax, 1
; Line 1264
	ret	0
_ssl_cert_set_cert_store ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_build_cert_chain
_TEXT	SEGMENT
_rv$1$ = -140						; size = 4
_xs_ctx$ = -136						; size = 136
_c$ = 8							; size = 4
_chain_store$ = 12					; size = 4
_flags$ = 16						; size = 4
_ssl_build_cert_chain PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 1154
	mov	eax, 140				; 0000008cH
	call	__chkstk
; Line 1162
	mov	ecx, DWORD PTR _flags$[esp+136]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR _c$[esp+148]
	xor	ebp, ebp
	push	edi
	mov	DWORD PTR _rv$1$[esp+156], ebp
	mov	edi, DWORD PTR [esi]
	cmp	DWORD PTR [edi], ebp
	jne	SHORT $LN5@ssl_build_
; Line 1163
	push	1163					; 0000048bH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	179					; 000000b3H
	push	332					; 0000014cH
	push	20					; 00000014H
	call	_ERR_put_error
; Line 1164
	mov	ebx, DWORD PTR _chain_store$[esp+172]
	add	esp, 20					; 00000014H
	jmp	$err$40
$LN5@ssl_build_:
; Line 1167
	test	cl, 4
	je	$LN6@ssl_build_
; Line 1168
	call	_X509_STORE_new
	mov	ebx, eax
; Line 1169
	test	ebx, ebx
	je	$err$40
; Line 1171
	push	DWORD PTR [edi+12]
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@ssl_build_
	npad	5
$LL4@ssl_build_:
; Line 1172
	push	esi
	push	DWORD PTR [edi+12]
	call	_sk_value
; Line 1173
	push	eax
	push	ebx
	call	_X509_STORE_add_cert
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN2@ssl_build_
; Line 1174
	call	_ERR_peek_last_error
	mov	ecx, eax
; Line 1175
	and	eax, -16777216				; ff000000H
	cmp	eax, 184549376				; 0b000000H
	jne	$err$40
	and	ecx, 4095				; 00000fffH
	cmp	ecx, 101				; 00000065H
	jne	$err$40
; Line 1179
	call	_ERR_clear_error
$LN2@ssl_build_:
; Line 1171
	push	DWORD PTR [edi+12]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@ssl_build_
$LN3@ssl_build_:
; Line 1183
	push	DWORD PTR [edi]
	push	ebx
	call	_X509_STORE_add_cert
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN37@ssl_build_
; Line 1184
	call	_ERR_peek_last_error
	mov	ecx, eax
; Line 1185
	and	eax, -16777216				; ff000000H
	cmp	eax, 184549376				; 0b000000H
	jne	$err$40
	and	ecx, 4095				; 00000fffH
	cmp	ecx, 101				; 00000065H
	jne	$err$40
; Line 1188
	call	_ERR_clear_error
$LN37@ssl_build_:
	mov	esi, DWORD PTR _c$[esp+152]
$LN38@ssl_build_:
	xor	eax, eax
$LN16@ssl_build_:
; Line 1198
	push	eax
	push	DWORD PTR [edi]
	lea	eax, DWORD PTR _xs_ctx$[esp+164]
	push	ebx
	push	eax
	call	_X509_STORE_CTX_init
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN17@ssl_build_
; Line 1199
	push	1199					; 000004afH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	11					; 0000000bH
	push	332					; 0000014cH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1200
	jmp	$err$40
$LN6@ssl_build_:
; Line 1191
	mov	eax, DWORD PTR [esi+332]
	test	eax, eax
	mov	ebx, DWORD PTR _chain_store$[esp+152]
	cmovne	ebx, eax
; Line 1194
	test	cl, 1
	je	SHORT $LN38@ssl_build_
; Line 1195
	mov	eax, DWORD PTR [edi+12]
	jmp	SHORT $LN16@ssl_build_
$LN17@ssl_build_:
; Line 1203
	mov	eax, DWORD PTR [esi+56]
	and	eax, 196608				; 00030000H
	push	eax
	lea	eax, DWORD PTR _xs_ctx$[esp+160]
	push	eax
	call	_X509_STORE_CTX_set_flags
; Line 1206
	lea	eax, DWORD PTR _xs_ctx$[esp+164]
	push	eax
	call	_X509_verify_cert
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1207
	test	esi, esi
	jg	SHORT $LN35@ssl_build_
	mov	eax, DWORD PTR _flags$[esp+152]
	test	al, 8
	je	SHORT $LN34@ssl_build_
; Line 1208
	test	al, 16					; 00000010H
	je	SHORT $LN19@ssl_build_
; Line 1209
	call	_ERR_clear_error
$LN19@ssl_build_:
; Line 1210
	mov	esi, 1
; Line 1211
	mov	DWORD PTR _rv$1$[esp+156], 2
$LN35@ssl_build_:
; Line 1214
	lea	eax, DWORD PTR _xs_ctx$[esp+156]
	push	eax
	call	_X509_STORE_CTX_get1_chain
	add	esp, 4
	mov	ebp, eax
; Line 1215
	test	esi, esi
	jg	SHORT $LN21@ssl_build_
	mov	ebp, DWORD PTR _rv$1$[esp+156]
$LN34@ssl_build_:
; Line 1216
	push	1216					; 000004c0H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	134					; 00000086H
	push	332					; 0000014cH
	push	20					; 00000014H
	call	_ERR_put_error
; Line 1217
	lea	eax, DWORD PTR _xs_ctx$[esp+176]
	push	eax
	call	_X509_STORE_CTX_get_error
; Line 1218
	push	eax
	call	_X509_verify_cert_error_string
	push	eax
	push	OFFSET ??_C@_0O@HFNJECFC@Verify?5error?3?$AA@
	push	2
	call	_ERR_add_error_data
; Line 1221
	lea	eax, DWORD PTR _xs_ctx$[esp+196]
	push	eax
	call	_X509_STORE_CTX_cleanup
	add	esp, 44					; 0000002cH
; Line 1222
	jmp	$err$40
$LN21@ssl_build_:
; Line 1224
	lea	eax, DWORD PTR _xs_ctx$[esp+156]
	push	eax
	call	_X509_STORE_CTX_cleanup
; Line 1225
	mov	eax, DWORD PTR [edi+12]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN22@ssl_build_
; Line 1226
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN22@ssl_build_:
; Line 1228
	push	ebp
	call	_sk_shift
; Line 1229
	push	eax
	call	_X509_free
	add	esp, 8
; Line 1230
	test	BYTE PTR _flags$[esp+152], 2
	je	SHORT $LN25@ssl_build_
; Line 1231
	push	ebp
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN25@ssl_build_
; Line 1233
	push	ebp
	call	_sk_num
	dec	eax
	push	eax
	push	ebp
	call	_sk_value
; Line 1234
	push	0
	mov	esi, eax
	push	-1
	push	esi
	call	_X509_check_purpose
	add	esp, 24					; 00000018H
; Line 1235
	test	DWORD PTR [esi+40], 8192		; 00002000H
	je	SHORT $LN25@ssl_build_
; Line 1236
	push	ebp
	call	_sk_pop
; Line 1237
	push	eax
	call	_X509_free
	add	esp, 8
$LN25@ssl_build_:
; Line 1241
	mov	DWORD PTR [edi+12], ebp
; Line 1242
	mov	eax, 1
	mov	ebp, DWORD PTR _rv$1$[esp+156]
	test	ebp, ebp
	cmove	ebp, eax
$err$40:
; Line 1245
	test	BYTE PTR _flags$[esp+152], 4
	je	SHORT $LN36@ssl_build_
; Line 1246
	push	ebx
	call	_X509_STORE_free
	add	esp, 4
$LN36@ssl_build_:
; Line 1248
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 1249
	add	esp, 140				; 0000008cH
	ret	0
_ssl_build_cert_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_add_cert_chain
_TEXT	SEGMENT
_no_chain$1$ = -144					; size = 4
_chain_store$1$ = -140					; size = 4
_xs_ctx$1 = -136					; size = 136
_s$ = 8							; size = 4
_cpk$ = 12						; size = 4
_l$ = 16						; size = 4
_ssl_add_cert_chain PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 1081
	mov	eax, 144				; 00000090H
	call	__chkstk
; Line 1082
	mov	ecx, DWORD PTR _s$[esp+140]
	push	ebp
	push	esi
	push	edi
; Line 1090
	mov	edi, DWORD PTR _cpk$[esp+152]
	mov	ebp, DWORD PTR [ecx+60]
	test	edi, edi
	je	SHORT $LN8@ssl_add_ce
; Line 1091
	mov	esi, DWORD PTR [edi]
	jmp	SHORT $LN9@ssl_add_ce
$LN8@ssl_add_ce:
; Line 1093
	xor	esi, esi
$LN9@ssl_add_ce:
; Line 1095
	mov	eax, DWORD PTR [ecx+152]
	mov	eax, DWORD PTR [eax+332]
	mov	DWORD PTR _chain_store$1$[esp+156], eax
	test	eax, eax
	jne	SHORT $LN11@ssl_add_ce
; Line 1098
	mov	eax, DWORD PTR [ecx+228]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _chain_store$1$[esp+156], eax
$LN11@ssl_add_ce:
; Line 1103
	test	edi, edi
	je	SHORT $LN12@ssl_add_ce
	mov	edi, DWORD PTR [edi+12]
	test	edi, edi
	jne	SHORT $LN13@ssl_add_ce
$LN12@ssl_add_ce:
; Line 1106
	mov	eax, DWORD PTR [ecx+228]
	mov	edi, DWORD PTR [eax+148]
$LN13@ssl_add_ce:
; Line 1108
	test	BYTE PTR [ecx+260], 8
	jne	SHORT $LN16@ssl_add_ce
; Line 1111
	mov	DWORD PTR _no_chain$1$[esp+156], 0
	test	edi, edi
	je	SHORT $LN15@ssl_add_ce
$LN16@ssl_add_ce:
; Line 1109
	mov	DWORD PTR _no_chain$1$[esp+156], 1
$LN15@ssl_add_ce:
; Line 1114
	push	10					; 0000000aH
	push	ebp
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@ssl_add_ce
; Line 1115
	push	1115					; 0000045bH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	7
	push	318					; 0000013eH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1116
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
; Line 1150
	add	esp, 144				; 00000090H
	ret	0
$LN17@ssl_add_ce:
	push	ebx
; Line 1118
	mov	ebx, DWORD PTR _l$[esp+156]
	test	esi, esi
	je	$LN20@ssl_add_ce
; Line 1119
	cmp	DWORD PTR _no_chain$1$[esp+160], 0
	je	SHORT $LN19@ssl_add_ce
; Line 1120
	push	esi
	push	ebx
	push	ebp
	call	_ssl_add_cert_to_buf
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN20@ssl_add_ce
	pop	ebx
	pop	edi
	pop	esi
	pop	ebp
; Line 1150
	add	esp, 144				; 00000090H
	ret	0
$LN19@ssl_add_ce:
; Line 1125
	push	0
	push	esi
	push	DWORD PTR _chain_store$1$[esp+168]
	lea	eax, DWORD PTR _xs_ctx$1[esp+172]
	push	eax
	call	_X509_STORE_CTX_init
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN22@ssl_add_ce
; Line 1126
	push	1126					; 00000466H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	11					; 0000000bH
	push	318					; 0000013eH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1127
	xor	eax, eax
	pop	ebx
	pop	edi
	pop	esi
	pop	ebp
; Line 1150
	add	esp, 144				; 00000090H
	ret	0
$LN22@ssl_add_ce:
; Line 1129
	lea	eax, DWORD PTR _xs_ctx$1[esp+160]
	push	eax
	call	_X509_verify_cert
; Line 1131
	call	_ERR_clear_error
; Line 1132
	push	DWORD PTR _xs_ctx$1[esp+248]
	xor	esi, esi
	call	_sk_num
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN3@ssl_add_ce
	npad	7
$LL4@ssl_add_ce:
; Line 1133
	push	esi
	push	DWORD PTR _xs_ctx$1[esp+248]
	call	_sk_value
; Line 1135
	push	eax
	push	ebx
	push	ebp
	call	_ssl_add_cert_to_buf
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN28@ssl_add_ce
; Line 1132
	push	DWORD PTR _xs_ctx$1[esp+244]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@ssl_add_ce
$LN3@ssl_add_ce:
; Line 1140
	lea	eax, DWORD PTR _xs_ctx$1[esp+160]
	push	eax
	call	_X509_STORE_CTX_cleanup
	add	esp, 4
$LN20@ssl_add_ce:
; Line 1143
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN6@ssl_add_ce
$LL7@ssl_add_ce:
; Line 1144
	push	esi
	push	edi
	call	_sk_value
; Line 1145
	push	eax
	push	ebx
	push	ebp
	call	_ssl_add_cert_to_buf
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN29@ssl_add_ce
; Line 1143
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL7@ssl_add_ce
$LN6@ssl_add_ce:
	pop	ebx
	pop	edi
	pop	esi
; Line 1149
	mov	eax, 1
	pop	ebp
; Line 1150
	add	esp, 144				; 00000090H
	ret	0
$LN28@ssl_add_ce:
; Line 1136
	lea	eax, DWORD PTR _xs_ctx$1[esp+160]
	push	eax
	call	_X509_STORE_CTX_cleanup
	add	esp, 4
$LN29@ssl_add_ce:
; Line 1137
	pop	ebx
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebp
; Line 1150
	add	esp, 144				; 00000090H
	ret	0
_ssl_add_cert_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_verify_cert_chain
_TEXT	SEGMENT
_ctx$ = -136						; size = 136
_s$ = 8							; size = 4
_sk$ = 12						; size = 4
_ssl_verify_cert_chain PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 711
	mov	eax, 136				; 00000088H
	call	__chkstk
	push	ebx
	push	esi
; Line 717
	mov	esi, DWORD PTR _s$[esp+140]
	push	edi
	mov	eax, DWORD PTR [esi+152]
	mov	ebx, DWORD PTR [eax+336]
	test	ebx, ebx
	jne	SHORT $LN3@ssl_verify
; Line 720
	mov	eax, DWORD PTR [esi+228]
	mov	ebx, DWORD PTR [eax+12]
$LN3@ssl_verify:
; Line 722
	mov	edi, DWORD PTR _sk$[esp+144]
	test	edi, edi
	je	SHORT $LN5@ssl_verify
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@ssl_verify
; Line 725
	push	0
	push	edi
	call	_sk_value
; Line 726
	push	edi
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+164]
	push	ebx
	push	eax
	call	_X509_STORE_CTX_init
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN6@ssl_verify
; Line 727
	push	727					; 000002d7H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	11					; 0000000bH
	push	207					; 000000cfH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN5@ssl_verify:
; Line 723
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 773
	add	esp, 136				; 00000088H
	ret	0
$LN6@ssl_verify:
; Line 731
	mov	eax, DWORD PTR [esi+152]
	mov	eax, DWORD PTR [eax+56]
	and	eax, 196608				; 00030000H
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+152]
	push	eax
	call	_X509_STORE_CTX_set_flags
	add	esp, 8
; Line 736
	push	esi
	call	_SSL_get_ex_data_X509_STORE_CTX_idx
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+156]
	push	eax
	call	_X509_STORE_CTX_set_ex_data
; Line 744
	cmp	DWORD PTR [esi+36], 0
	mov	ecx, OFFSET ??_C@_0L@MDHNNNKP@ssl_server?$AA@
	mov	eax, OFFSET ??_C@_0L@IMDPAGCM@ssl_client?$AA@
	cmove	eax, ecx
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+164]
	push	eax
	call	_X509_STORE_CTX_set_default
	add	esp, 20					; 00000014H
; Line 748
	lea	eax, DWORD PTR _ctx$[esp+148]
	push	DWORD PTR [esi+112]
	push	eax
	call	_X509_STORE_CTX_get0_param
	add	esp, 4
	push	eax
	call	_X509_VERIFY_PARAM_set1
; Line 750
	mov	eax, DWORD PTR [esi+204]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@ssl_verify
; Line 751
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+152]
	push	eax
	call	_X509_STORE_CTX_set_verify_cb
	add	esp, 8
$LN7@ssl_verify:
; Line 753
	mov	eax, DWORD PTR [esi+228]
	mov	ecx, DWORD PTR [eax+100]
	test	ecx, ecx
	je	SHORT $LN8@ssl_verify
; Line 755
	push	DWORD PTR [eax+104]
	lea	eax, DWORD PTR _ctx$[esp+152]
	push	eax
	call	ecx
	add	esp, 8
	jmp	SHORT $LN11@ssl_verify
$LN8@ssl_verify:
; Line 761
	lea	eax, DWORD PTR _ctx$[esp+148]
	push	eax
	call	_X509_verify_cert
	add	esp, 4
$LN11@ssl_verify:
	mov	edi, eax
; Line 769
	mov	eax, DWORD PTR _ctx$[esp+248]
	mov	DWORD PTR [esi+236], eax
; Line 770
	lea	eax, DWORD PTR _ctx$[esp+148]
	push	eax
	call	_X509_STORE_CTX_cleanup
	add	esp, 4
; Line 772
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 773
	add	esp, 136				; 00000088H
	ret	0
_ssl_verify_cert_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_set_cert_cb
_TEXT	SEGMENT
_c$ = 8							; size = 4
_cb$ = 12						; size = 4
_arg$ = 16						; size = 4
_ssl_cert_set_cert_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 632
	mov	ecx, DWORD PTR _c$[esp-4]
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+324], eax
; Line 633
	mov	eax, DWORD PTR _arg$[esp-4]
	mov	DWORD PTR [ecx+328], eax
; Line 634
	ret	0
_ssl_cert_set_cert_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_set_current
_TEXT	SEGMENT
_c$ = 8							; size = 4
_op$ = 12						; size = 4
_ssl_cert_set_current PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 608
	push	esi
; Line 610
	mov	esi, DWORD PTR _c$[esp]
	test	esi, esi
	je	SHORT $LN8@ssl_cert_s
; Line 612
	mov	eax, DWORD PTR _op$[esp]
	cmp	eax, 1
	jne	SHORT $LN6@ssl_cert_s
; Line 613
	xor	edx, edx
	jmp	SHORT $LN20@ssl_cert_s
$LN6@ssl_cert_s:
; Line 614
	cmp	eax, 2
	jne	SHORT $LN8@ssl_cert_s
; Line 615
	mov	ecx, DWORD PTR [esi]
	mov	eax, -1840700269			; 92492493H
	sub	ecx, esi
	sub	ecx, 60					; 0000003cH
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	inc	edx
	shr	eax, 31					; 0000001fH
	add	edx, eax
; Line 616
	cmp	edx, 8
	jge	SHORT $LN8@ssl_cert_s
$LN20@ssl_cert_s:
; Line 620
	lea	eax, DWORD PTR [edx*8]
	mov	ecx, edx
	sub	eax, edx
	add	eax, 15					; 0000000fH
	lea	eax, DWORD PTR [esi+eax*4]
	npad	4
$LL4@ssl_cert_s:
; Line 622
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@ssl_cert_s
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN14@ssl_cert_s
$LN2@ssl_cert_s:
; Line 620
	inc	ecx
	add	eax, 28					; 0000001cH
	cmp	ecx, 8
	jl	SHORT $LL4@ssl_cert_s
$LN8@ssl_cert_s:
; Line 619
	xor	eax, eax
	pop	esi
; Line 628
	ret	0
$LN14@ssl_cert_s:
; Line 623
	mov	DWORD PTR [esi], eax
; Line 624
	mov	eax, 1
	pop	esi
; Line 628
	ret	0
_ssl_cert_set_current ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_select_current
_TEXT	SEGMENT
_c$ = 8							; size = 4
_x$ = 12						; size = 4
_ssl_cert_select_current PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 585
	push	ebx
; Line 587
	mov	ebx, DWORD PTR _x$[esp]
	test	ebx, ebx
	jne	SHORT $LN8@ssl_cert_s
; Line 588
	xor	eax, eax
	pop	ebx
; Line 605
	ret	0
$LN8@ssl_cert_s:
	push	ebp
; Line 589
	mov	ebp, DWORD PTR _c$[esp+4]
	xor	ecx, ecx
	push	esi
	lea	esi, DWORD PTR [ebp+60]
	mov	eax, esi
	npad	6
$LL4@ssl_cert_s:
; Line 591
	cmp	DWORD PTR [eax], ebx
	jne	SHORT $LN2@ssl_cert_s
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN14@ssl_cert_s
$LN2@ssl_cert_s:
; Line 589
	inc	ecx
	add	eax, 28					; 0000001cH
	cmp	ecx, 8
	jl	SHORT $LL4@ssl_cert_s
; Line 597
	push	edi
	xor	edi, edi
$LL7@ssl_cert_s:
; Line 599
	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN5@ssl_cert_s
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN5@ssl_cert_s
	push	ebx
	push	eax
	call	_X509_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@ssl_cert_s
$LN5@ssl_cert_s:
; Line 597
	inc	edi
	add	esi, 28					; 0000001cH
	cmp	edi, 8
	jl	SHORT $LL7@ssl_cert_s
; Line 604
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 605
	ret	0
$LN14@ssl_cert_s:
	pop	esi
; Line 592
	mov	DWORD PTR [ebp], eax
; Line 593
	mov	eax, 1
	pop	ebp
	pop	ebx
; Line 605
	ret	0
$LN15@ssl_cert_s:
	pop	edi
; Line 600
	mov	DWORD PTR [ebp], esi
; Line 601
	mov	eax, 1
	pop	esi
	pop	ebp
	pop	ebx
; Line 605
	ret	0
_ssl_cert_select_current ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_add1_chain_cert
_TEXT	SEGMENT
_c$ = 8							; size = 4
_x$ = 12						; size = 4
_ssl_cert_add1_chain_cert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 566
	mov	eax, DWORD PTR _c$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 567
	test	esi, esi
	je	SHORT $LN8@ssl_cert_a
; Line 569
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN6@ssl_cert_a
; Line 570
	call	_sk_new_null
	mov	DWORD PTR [esi+12], eax
$LN6@ssl_cert_a:
; Line 571
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN8@ssl_cert_a
	mov	esi, DWORD PTR _x$[esp]
	push	esi
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@ssl_cert_a
; Line 580
	push	580					; 00000244H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	3
	lea	eax, DWORD PTR [esi+16]
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 581
	mov	eax, 1
	pop	esi
; Line 582
	ret	0
$LN8@ssl_cert_a:
; Line 579
	xor	eax, eax
	pop	esi
; Line 582
	ret	0
_ssl_cert_add1_chain_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_add0_chain_cert
_TEXT	SEGMENT
_c$ = 8							; size = 4
_x$ = 12						; size = 4
_ssl_cert_add0_chain_cert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 566
	mov	eax, DWORD PTR _c$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 567
	test	esi, esi
	je	SHORT $LN5@ssl_cert_a
; Line 569
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN3@ssl_cert_a
; Line 570
	call	_sk_new_null
	mov	DWORD PTR [esi+12], eax
$LN3@ssl_cert_a:
; Line 571
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN5@ssl_cert_a
	push	DWORD PTR _x$[esp]
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ssl_cert_a
; Line 573
	mov	eax, 1
	pop	esi
; Line 574
	ret	0
$LN5@ssl_cert_a:
; Line 572
	xor	eax, eax
	pop	esi
; Line 574
	ret	0
_ssl_cert_add0_chain_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_set1_chain
_TEXT	SEGMENT
_c$ = 8							; size = 4
_chain$ = 12						; size = 4
_ssl_cert_set1_chain PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 552
	mov	eax, DWORD PTR _chain$[esp-4]
	push	esi
	test	eax, eax
	jne	SHORT $LN2@ssl_cert_s
; Line 540
	mov	eax, DWORD PTR _c$[esp]
	mov	esi, DWORD PTR [eax]
; Line 541
	test	esi, esi
	je	SHORT $LN16@ssl_cert_s
; Line 543
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN8@ssl_cert_s
; Line 544
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN8@ssl_cert_s:
; Line 545
	mov	DWORD PTR [esi+12], 0
; Line 546
	mov	eax, 1
	pop	esi
; Line 562
	ret	0
$LN2@ssl_cert_s:
; Line 554
	push	eax
	call	_X509_chain_up_ref
	mov	esi, eax
	add	esp, 4
; Line 555
	test	esi, esi
	jne	SHORT $LN3@ssl_cert_s
$LN16@ssl_cert_s:
; Line 556
	xor	eax, eax
	pop	esi
; Line 562
	ret	0
$LN3@ssl_cert_s:
; Line 540
	mov	eax, DWORD PTR _c$[esp]
	push	edi
	mov	edi, DWORD PTR [eax]
; Line 541
	test	edi, edi
	je	SHORT $LN14@ssl_cert_s
; Line 543
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN12@ssl_cert_s
; Line 544
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN12@ssl_cert_s:
; Line 545
	mov	DWORD PTR [edi+12], esi
; Line 561
	mov	eax, 1
	pop	edi
	pop	esi
; Line 562
	ret	0
$LN14@ssl_cert_s:
; Line 558
	push	OFFSET _X509_free
	push	esi
	call	_sk_pop_free
	add	esp, 8
; Line 559
	xor	eax, eax
	pop	edi
	pop	esi
; Line 562
	ret	0
_ssl_cert_set1_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_set0_chain
_TEXT	SEGMENT
_c$ = 8							; size = 4
_chain$ = 12						; size = 4
_ssl_cert_set0_chain PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 540
	mov	eax, DWORD PTR _c$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 541
	test	esi, esi
	jne	SHORT $LN2@ssl_cert_s
; Line 542
	xor	eax, eax
	pop	esi
; Line 547
	ret	0
$LN2@ssl_cert_s:
; Line 543
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN3@ssl_cert_s
; Line 544
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN3@ssl_cert_s:
; Line 545
	mov	eax, DWORD PTR _chain$[esp]
	mov	DWORD PTR [esi+12], eax
; Line 546
	mov	eax, 1
	pop	esi
; Line 547
	ret	0
_ssl_cert_set0_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_set_peer_cert_type
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_type$ = 12						; size = 4
_ssl_set_peer_cert_type PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 706
	mov	eax, DWORD PTR _sc$[esp-4]
	mov	ecx, DWORD PTR _type$[esp-4]
	mov	DWORD PTR [eax+4], ecx
; Line 707
	mov	eax, 1
; Line 708
	ret	0
_ssl_set_peer_cert_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_sess_cert_free
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_ssl_sess_cert_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 654
	push	edi
; Line 657
	mov	edi, DWORD PTR _sc$[esp]
	test	edi, edi
	je	$LN1@ssl_sess_c
; Line 660
	push	660					; 00000294H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	15					; 0000000fH
	lea	eax, DWORD PTR [edi+248]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 664
	test	eax, eax
	jg	SHORT $LN1@ssl_sess_c
; Line 674
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN7@ssl_sess_c
; Line 675
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN7@ssl_sess_c:
; Line 676
	push	ebx
	push	esi
	lea	esi, DWORD PTR [edi+12]
	mov	ebx, 8
	npad	4
$LL4@ssl_sess_c:
; Line 677
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@ssl_sess_c
; Line 678
	push	eax
	call	_X509_free
	add	esp, 4
$LN2@ssl_sess_c:
; Line 676
	add	esi, 28					; 0000001cH
	sub	ebx, 1
	jne	SHORT $LL4@ssl_sess_c
; Line 689
	mov	eax, DWORD PTR [edi+236]
	pop	esi
	pop	ebx
	test	eax, eax
	je	SHORT $LN9@ssl_sess_c
; Line 690
	push	eax
	call	_RSA_free
	add	esp, 4
$LN9@ssl_sess_c:
; Line 693
	mov	eax, DWORD PTR [edi+240]
	test	eax, eax
	je	SHORT $LN10@ssl_sess_c
; Line 694
	push	eax
	call	_DH_free
	add	esp, 4
$LN10@ssl_sess_c:
; Line 697
	mov	eax, DWORD PTR [edi+244]
	test	eax, eax
	je	SHORT $LN11@ssl_sess_c
; Line 698
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN11@ssl_sess_c:
; Line 701
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN1@ssl_sess_c:
	pop	edi
; Line 702
	ret	0
_ssl_sess_cert_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_sess_cert_new
_TEXT	SEGMENT
_ssl_sess_cert_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 637
	push	esi
; Line 640
	push	640					; 00000280H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	252					; 000000fcH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 641
	test	esi, esi
	jne	SHORT $LN2@ssl_sess_c
; Line 642
	push	642					; 00000282H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	65					; 00000041H
	push	225					; 000000e1H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 643
	xor	eax, eax
	pop	esi
; Line 651
	ret	0
$LN2@ssl_sess_c:
; Line 646
	push	252					; 000000fcH
	push	0
	push	esi
	call	_memset
; Line 647
	lea	eax, DWORD PTR [esi+12]
; Line 648
	mov	DWORD PTR [esi+248], 1
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+8], eax
; Line 650
	mov	eax, esi
	pop	esi
; Line 651
	ret	0
_ssl_sess_cert_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_free
_TEXT	SEGMENT
_c$ = 8							; size = 4
_ssl_cert_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 455
	push	esi
; Line 458
	mov	esi, DWORD PTR _c$[esp]
	test	esi, esi
	je	$LN1@ssl_cert_f
; Line 461
	push	461					; 000001cdH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	13					; 0000000dH
	lea	eax, DWORD PTR [esi+364]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 465
	test	eax, eax
	jg	$LN1@ssl_cert_f
; Line 475
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	SHORT $LN4@ssl_cert_f
; Line 476
	push	eax
	call	_RSA_free
	add	esp, 4
$LN4@ssl_cert_f:
; Line 479
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN5@ssl_cert_f
; Line 480
	push	eax
	call	_DH_free
	add	esp, 4
$LN5@ssl_cert_f:
; Line 483
	mov	eax, DWORD PTR [esi+44]
	test	eax, eax
	je	SHORT $LN6@ssl_cert_f
; Line 484
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN6@ssl_cert_f:
; Line 487
	push	esi
	call	_ssl_cert_clear_certs
; Line 488
	mov	eax, DWORD PTR [esi+292]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@ssl_cert_f
; Line 489
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN7@ssl_cert_f:
; Line 490
	mov	eax, DWORD PTR [esi+300]
	test	eax, eax
	je	SHORT $LN8@ssl_cert_f
; Line 491
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN8@ssl_cert_f:
; Line 492
	mov	eax, DWORD PTR [esi+308]
	test	eax, eax
	je	SHORT $LN9@ssl_cert_f
; Line 493
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN9@ssl_cert_f:
; Line 494
	mov	eax, DWORD PTR [esi+316]
	test	eax, eax
	je	SHORT $LN10@ssl_cert_f
; Line 495
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN10@ssl_cert_f:
; Line 496
	mov	eax, DWORD PTR [esi+284]
	test	eax, eax
	je	SHORT $LN11@ssl_cert_f
; Line 497
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN11@ssl_cert_f:
; Line 498
	mov	eax, DWORD PTR [esi+336]
	test	eax, eax
	je	SHORT $LN12@ssl_cert_f
; Line 499
	push	eax
	call	_X509_STORE_free
	add	esp, 4
$LN12@ssl_cert_f:
; Line 500
	mov	eax, DWORD PTR [esi+332]
	test	eax, eax
	je	SHORT $LN13@ssl_cert_f
; Line 501
	push	eax
	call	_X509_STORE_free
	add	esp, 4
$LN13@ssl_cert_f:
; Line 502
	mov	eax, DWORD PTR [esi+340]
	test	eax, eax
	je	SHORT $LN14@ssl_cert_f
; Line 503
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN14@ssl_cert_f:
; Line 505
	lea	eax, DWORD PTR [esi+348]
	push	eax
	call	_custom_exts_free
; Line 506
	lea	eax, DWORD PTR [esi+356]
	push	eax
	call	_custom_exts_free
; Line 507
	mov	eax, DWORD PTR [esi+368]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@ssl_cert_f
; Line 508
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN15@ssl_cert_f:
; Line 510
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@ssl_cert_f:
	pop	esi
; Line 511
	ret	0
_ssl_cert_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_clear_certs
_TEXT	SEGMENT
_c$ = 8							; size = 4
_ssl_cert_clear_certs PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 424
	push	esi
; Line 426
	mov	esi, DWORD PTR _c$[esp]
	test	esi, esi
	je	SHORT $LN3@ssl_cert_c
; Line 428
	push	edi
	add	esi, 72					; 00000048H
	mov	edi, 8
$LL4@ssl_cert_c:
; Line 430
	mov	eax, DWORD PTR [esi-12]
	test	eax, eax
	je	SHORT $LN6@ssl_cert_c
; Line 431
	push	eax
	call	_X509_free
	add	esp, 4
; Line 432
	mov	DWORD PTR [esi-12], 0
$LN6@ssl_cert_c:
; Line 434
	mov	eax, DWORD PTR [esi-8]
	test	eax, eax
	je	SHORT $LN7@ssl_cert_c
; Line 435
	push	eax
	call	_EVP_PKEY_free
	add	esp, 4
; Line 436
	mov	DWORD PTR [esi-8], 0
$LN7@ssl_cert_c:
; Line 438
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN8@ssl_cert_c
; Line 439
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
; Line 440
	mov	DWORD PTR [esi], 0
$LN8@ssl_cert_c:
; Line 443
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN9@ssl_cert_c
; Line 444
	push	eax
	call	_CRYPTO_free
	add	esp, 4
; Line 445
	mov	DWORD PTR [esi+4], 0
; Line 446
	mov	DWORD PTR [esi+8], 0
$LN9@ssl_cert_c:
; Line 450
	and	DWORD PTR [esi+12], 256			; 00000100H
	add	esi, 28					; 0000001cH
	sub	edi, 1
	jne	SHORT $LL4@ssl_cert_c
	pop	edi
$LN3@ssl_cert_c:
	pop	esi
; Line 452
	ret	0
_ssl_cert_clear_certs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_inst
_TEXT	SEGMENT
_o$ = 8							; size = 4
_ssl_cert_inst PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 514
	push	esi
; Line 525
	mov	esi, DWORD PTR _o$[esp]
	test	esi, esi
	jne	SHORT $LN2@ssl_cert_i
; Line 526
	push	526					; 0000020eH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	67					; 00000043H
	push	222					; 000000deH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 527
	xor	eax, eax
	pop	esi
; Line 536
	ret	0
$LN2@ssl_cert_i:
; Line 529
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN4@ssl_cert_i
; Line 530
	call	_ssl_cert_new
	mov	DWORD PTR [esi], eax
	test	eax, eax
	jne	SHORT $LN4@ssl_cert_i
; Line 531
	push	531					; 00000213H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	65					; 00000041H
	push	222					; 000000deH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	esi
; Line 536
	ret	0
$LN4@ssl_cert_i:
; Line 535
	mov	eax, 1
	pop	esi
; Line 536
	ret	0
_ssl_cert_inst ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_set_default_md
_TEXT	SEGMENT
_cert$ = 8						; size = 4
_ssl_cert_set_default_md PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 186
	push	esi
; Line 189
	call	_EVP_sha1
	mov	esi, DWORD PTR _cert$[esp]
	mov	DWORD PTR [esi+124], eax
; Line 192
	call	_EVP_sha1
	mov	DWORD PTR [esi+96], eax
; Line 193
	call	_EVP_sha1
	mov	DWORD PTR [esi+68], eax
; Line 196
	call	_EVP_sha1
	mov	DWORD PTR [esi+208], eax
	pop	esi
; Line 198
	ret	0
_ssl_cert_set_default_md ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_dup
_TEXT	SEGMENT
_i$1$ = -8						; size = 4
tv1011 = -4						; size = 4
_cert$ = 8						; size = 4
_ssl_cert_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 218
	mov	eax, 8
	call	__chkstk
	push	esi
; Line 222
	push	222					; 000000deH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	380					; 0000017cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 223
	test	esi, esi
	jne	SHORT $LN5@ssl_cert_d
; Line 224
	push	224					; 000000e0H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	65					; 00000041H
	push	221					; 000000ddH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 225
	xor	eax, eax
	pop	esi
; Line 419
	add	esp, 8
	ret	0
$LN5@ssl_cert_d:
	push	ebx
; Line 228
	push	380					; 0000017cH
	push	0
	push	esi
	call	_memset
; Line 231
	mov	ebx, DWORD PTR _cert$[esp+24]
	mov	eax, -1840700269			; 92492493H
	mov	DWORD PTR [esi+364], 1
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [ebx]
	sub	ecx, ebx
	sub	ecx, 60					; 0000003cH
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	lea	eax, DWORD PTR [ecx*8]
	sub	eax, ecx
	add	eax, 15					; 0000000fH
	lea	eax, DWORD PTR [esi+eax*4]
	mov	DWORD PTR [esi], eax
; Line 237
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [esi+4], eax
; Line 238
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR [esi+8], eax
; Line 239
	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [esi+12], eax
; Line 240
	mov	eax, DWORD PTR [ebx+16]
	mov	DWORD PTR [esi+16], eax
; Line 241
	mov	eax, DWORD PTR [ebx+20]
	mov	DWORD PTR [esi+20], eax
; Line 244
	mov	eax, DWORD PTR [ebx+28]
	test	eax, eax
	je	SHORT $LN6@ssl_cert_d
; Line 245
	push	eax
	call	_RSA_up_ref
; Line 246
	mov	eax, DWORD PTR [ebx+28]
	add	esp, 4
	mov	DWORD PTR [esi+28], eax
$LN6@ssl_cert_d:
; Line 248
	mov	eax, DWORD PTR [ebx+32]
	mov	DWORD PTR [esi+32], eax
; Line 252
	mov	eax, DWORD PTR [ebx+36]
	push	ebp
	push	edi
	test	eax, eax
	je	$LN11@ssl_cert_d
; Line 253
	push	eax
	call	_DHparams_dup
	add	esp, 4
	mov	DWORD PTR [esi+36], eax
; Line 254
	test	eax, eax
	jne	SHORT $LN8@ssl_cert_d
; Line 255
	push	255					; 000000ffH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	5
$LN51@ssl_cert_d:
; Line 261
	push	221					; 000000ddH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$53:
; Line 399
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	SHORT $LN33@ssl_cert_d
; Line 400
	push	eax
	call	_RSA_free
	add	esp, 4
$LN33@ssl_cert_d:
; Line 403
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN34@ssl_cert_d
; Line 404
	push	eax
	call	_DH_free
	add	esp, 4
$LN34@ssl_cert_d:
; Line 407
	mov	eax, DWORD PTR [esi+44]
	test	eax, eax
	je	SHORT $LN35@ssl_cert_d
; Line 408
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN35@ssl_cert_d:
; Line 412
	lea	eax, DWORD PTR [esi+348]
	push	eax
	call	_custom_exts_free
; Line 413
	lea	eax, DWORD PTR [esi+356]
	push	eax
	call	_custom_exts_free
; Line 416
	push	esi
	call	_ssl_cert_clear_certs
	add	esp, 12					; 0000000cH
; Line 418
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 419
	add	esp, 8
	ret	0
$LN8@ssl_cert_d:
; Line 258
	mov	eax, DWORD PTR [ebx+36]
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	je	SHORT $LN9@ssl_cert_d
; Line 259
	push	eax
	call	_BN_dup
	mov	ecx, eax
	add	esp, 4
; Line 260
	test	ecx, ecx
	jne	SHORT $LN10@ssl_cert_d
; Line 261
	push	261					; 00000105H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	3
; Line 262
	jmp	$LN51@ssl_cert_d
$LN10@ssl_cert_d:
; Line 264
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax+24], ecx
$LN9@ssl_cert_d:
; Line 266
	mov	eax, DWORD PTR [ebx+36]
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	SHORT $LN11@ssl_cert_d
; Line 267
	push	eax
	call	_BN_dup
	mov	ecx, eax
	add	esp, 4
; Line 268
	test	ecx, ecx
	jne	SHORT $LN12@ssl_cert_d
; Line 269
	push	269					; 0000010dH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	3
	jmp	$LN51@ssl_cert_d
$LN12@ssl_cert_d:
; Line 272
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax+20], ecx
$LN11@ssl_cert_d:
; Line 275
	mov	eax, DWORD PTR [ebx+40]
	mov	DWORD PTR [esi+40], eax
; Line 279
	mov	eax, DWORD PTR [ebx+44]
	test	eax, eax
	je	SHORT $LN14@ssl_cert_d
; Line 280
	push	eax
	call	_EC_KEY_dup
	add	esp, 4
	mov	DWORD PTR [esi+44], eax
; Line 281
	test	eax, eax
	jne	SHORT $LN14@ssl_cert_d
; Line 282
	push	282					; 0000011aH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	16					; 00000010H
; Line 283
	jmp	$LN51@ssl_cert_d
$LN14@ssl_cert_d:
; Line 286
	mov	eax, DWORD PTR [ebx+48]
	lea	ebp, DWORD PTR [esi+84]
; Line 290
	mov	ecx, esi
	mov	DWORD PTR [esi+48], eax
	mov	eax, DWORD PTR [ebx+52]
	lea	edi, DWORD PTR [ebx+64]
	sub	ecx, ebx
	mov	DWORD PTR [esi+52], eax
	mov	DWORD PTR _i$1$[esp+24], 0
	mov	DWORD PTR tv1011[esp+24], ecx
$LL4@ssl_cert_d:
; Line 293
	mov	eax, DWORD PTR [edi-4]
	test	eax, eax
	je	SHORT $LN15@ssl_cert_d
; Line 295
	push	295					; 00000127H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	3
	mov	DWORD PTR [ebp-24], eax
	add	eax, 16					; 00000010H
	push	1
	push	eax
	call	_CRYPTO_add_lock
	mov	ecx, DWORD PTR tv1011[esp+44]
	add	esp, 20					; 00000014H
$LN15@ssl_cert_d:
; Line 298
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN16@ssl_cert_d
; Line 300
	push	300					; 0000012cH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	mov	DWORD PTR [ecx+edi], eax
	mov	eax, DWORD PTR [edi]
	push	10					; 0000000aH
	add	eax, 8
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
$LN16@ssl_cert_d:
; Line 303
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN18@ssl_cert_d
; Line 304
	push	eax
	call	_X509_chain_up_ref
	add	esp, 4
	mov	DWORD PTR [ebp-12], eax
; Line 305
	test	eax, eax
	je	SHORT $LN40@ssl_cert_d
$LN18@ssl_cert_d:
; Line 310
	mov	DWORD PTR [ebp], 0
; Line 312
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN2@ssl_cert_d
; Line 314
	push	315					; 0000013bH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	DWORD PTR [edi+16]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-8], eax
; Line 316
	test	eax, eax
	je	SHORT $LN41@ssl_cert_d
; Line 320
	mov	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR [ebp-4], ecx
; Line 322
	push	DWORD PTR [edi+16]
	push	DWORD PTR [edi+12]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@ssl_cert_d:
; Line 290
	mov	ecx, DWORD PTR _i$1$[esp+24]
	add	ebp, 28					; 0000001cH
	inc	ecx
	add	edi, 28					; 0000001cH
	mov	DWORD PTR _i$1$[esp+24], ecx
	cmp	ecx, 8
	jge	SHORT $LN45@ssl_cert_d
	mov	ecx, DWORD PTR tv1011[esp+24]
	jmp	$LL4@ssl_cert_d
$LN40@ssl_cert_d:
; Line 306
	push	306					; 00000132H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	65					; 00000041H
; Line 307
	jmp	$LN51@ssl_cert_d
$LN41@ssl_cert_d:
; Line 317
	push	317					; 0000013dH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	65					; 00000041H
	push	221					; 000000ddH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 418
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 419
	add	esp, 8
	ret	0
$LN45@ssl_cert_d:
; Line 189
	call	_EVP_sha1
	mov	DWORD PTR [esi+124], eax
; Line 192
	call	_EVP_sha1
	mov	DWORD PTR [esi+96], eax
; Line 193
	call	_EVP_sha1
	mov	DWORD PTR [esi+68], eax
; Line 196
	call	_EVP_sha1
	mov	DWORD PTR [esi+208], eax
; Line 335
	mov	DWORD PTR [esi+292], 0
; Line 336
	mov	DWORD PTR [esi+296], 0
; Line 339
	cmp	DWORD PTR [ebx+300], 0
	je	SHORT $LN21@ssl_cert_d
; Line 340
	push	340					; 00000154H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	DWORD PTR [ebx+304]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+300], eax
; Line 341
	test	eax, eax
	je	$err$53
; Line 343
	push	DWORD PTR [ebx+304]
	push	DWORD PTR [ebx+300]
	push	eax
	call	_memcpy
; Line 344
	mov	eax, DWORD PTR [ebx+304]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+304], eax
; Line 345
	jmp	SHORT $LN22@ssl_cert_d
$LN21@ssl_cert_d:
; Line 346
	mov	DWORD PTR [esi+300], 0
$LN22@ssl_cert_d:
; Line 348
	cmp	DWORD PTR [ebx+308], 0
	je	SHORT $LN24@ssl_cert_d
; Line 349
	push	349					; 0000015dH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	DWORD PTR [ebx+312]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+308], eax
; Line 350
	test	eax, eax
	je	$err$53
; Line 352
	push	DWORD PTR [ebx+312]
	push	DWORD PTR [ebx+308]
	push	eax
	call	_memcpy
; Line 354
	mov	eax, DWORD PTR [ebx+312]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+312], eax
; Line 355
	jmp	SHORT $LN25@ssl_cert_d
$LN24@ssl_cert_d:
; Line 356
	mov	DWORD PTR [esi+308], 0
$LN25@ssl_cert_d:
; Line 358
	mov	DWORD PTR [esi+316], 0
; Line 360
	cmp	DWORD PTR [ebx+284], 0
	je	SHORT $LN27@ssl_cert_d
; Line 361
	push	361					; 00000169H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	DWORD PTR [ebx+288]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+284], eax
; Line 362
	test	eax, eax
	je	$err$53
; Line 364
	push	DWORD PTR [ebx+288]
	push	DWORD PTR [ebx+284]
	push	eax
	call	_memcpy
; Line 365
	mov	eax, DWORD PTR [ebx+288]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+288], eax
$LN27@ssl_cert_d:
; Line 368
	mov	eax, DWORD PTR [ebx+56]
	mov	DWORD PTR [esi+56], eax
; Line 370
	mov	eax, DWORD PTR [ebx+324]
	mov	DWORD PTR [esi+324], eax
; Line 371
	mov	eax, DWORD PTR [ebx+328]
	mov	DWORD PTR [esi+328], eax
; Line 373
	mov	eax, DWORD PTR [ebx+336]
	test	eax, eax
	je	SHORT $LN29@ssl_cert_d
; Line 374
	push	375					; 00000177H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	11					; 0000000bH
	add	eax, 68					; 00000044H
	push	1
	push	eax
	call	_CRYPTO_add_lock
; Line 376
	mov	eax, DWORD PTR [ebx+336]
	add	esp, 20					; 00000014H
	mov	DWORD PTR [esi+336], eax
$LN29@ssl_cert_d:
; Line 379
	mov	eax, DWORD PTR [ebx+332]
	test	eax, eax
	je	SHORT $LN30@ssl_cert_d
; Line 380
	push	380					; 0000017cH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	11					; 0000000bH
	add	eax, 68					; 00000044H
	push	1
	push	eax
	call	_CRYPTO_add_lock
; Line 381
	mov	eax, DWORD PTR [ebx+332]
	add	esp, 20					; 00000014H
	mov	DWORD PTR [esi+332], eax
$LN30@ssl_cert_d:
; Line 387
	lea	eax, DWORD PTR [ebx+348]
	mov	DWORD PTR [esi+340], 0
	push	eax
	lea	eax, DWORD PTR [esi+348]
	push	eax
	call	_custom_exts_copy
	add	esp, 8
	test	eax, eax
	je	$err$53
; Line 389
	lea	eax, DWORD PTR [ebx+356]
	push	eax
	lea	eax, DWORD PTR [esi+356]
	push	eax
	call	_custom_exts_copy
	add	esp, 8
	test	eax, eax
	je	$err$53
; Line 393
	pop	edi
	pop	ebp
	pop	ebx
	mov	eax, esi
	pop	esi
; Line 419
	add	esp, 8
	ret	0
_ssl_cert_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_new
_TEXT	SEGMENT
_ssl_cert_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 201
	push	esi
; Line 204
	push	204					; 000000ccH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	380					; 0000017cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 205
	test	esi, esi
	jne	SHORT $LN2@ssl_cert_n
; Line 206
	push	206					; 000000ceH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	65					; 00000041H
	push	162					; 000000a2H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 207
	xor	eax, eax
	pop	esi
; Line 215
	ret	0
$LN2@ssl_cert_n:
; Line 209
	push	380					; 0000017cH
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 212
	mov	DWORD PTR [esi+364], 1
	lea	eax, DWORD PTR [esi+60]
	mov	DWORD PTR [esi], eax
; Line 189
	call	_EVP_sha1
	mov	DWORD PTR [esi+124], eax
; Line 192
	call	_EVP_sha1
	mov	DWORD PTR [esi+96], eax
; Line 193
	call	_EVP_sha1
	mov	DWORD PTR [esi+68], eax
; Line 196
	call	_EVP_sha1
	mov	DWORD PTR [esi+208], eax
; Line 214
	mov	eax, esi
	pop	esi
; Line 215
	ret	0
_ssl_cert_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_ex_data_X509_STORE_CTX_idx
_TEXT	SEGMENT
_SSL_get_ex_data_X509_STORE_CTX_idx PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 144
	mov	eax, OFFSET ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9
	test	al, 3
	jne	SHORT $LN2@SSL_get_ex
; Line 147
	push	esi
	mov	esi, DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9
	test	esi, esi
	jns	SHORT $LN4@SSL_get_ex
; Line 148
	push	148					; 00000094H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	12					; 0000000cH
	push	9
	call	_CRYPTO_lock
; Line 149
	mov	esi, DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9
	add	esp, 16					; 00000010H
	test	esi, esi
	jns	SHORT $LN5@SSL_get_ex
; Line 150
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BI@GCIOAHAF@SSL?5for?5verify?5callback?$AA@
	push	0
	call	_X509_STORE_CTX_get_ex_new_index
	mov	DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9, eax
	add	esp, 20					; 00000014H
	mov	esi, DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9
$LN5@SSL_get_ex:
; Line 155
	push	155					; 0000009bH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	12					; 0000000cH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN4@SSL_get_ex:
; Line 158
	mov	eax, esi
	pop	esi
; Line 183
	ret	0
$LN2@SSL_get_ex:
; Line 161
	push	161					; 000000a1H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	12					; 0000000cH
	push	5
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 163
	cmp	DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9, 0
	jge	SHORT $LN8@SSL_get_ex
; Line 164
	push	164					; 000000a4H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	12					; 0000000cH
	push	6
	call	_CRYPTO_lock
; Line 165
	push	165					; 000000a5H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	12					; 0000000cH
	push	9
	call	_CRYPTO_lock
	add	esp, 32					; 00000020H
; Line 168
	cmp	DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9, 0
	jge	SHORT $LN11@SSL_get_ex
; Line 169
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BI@GCIOAHAF@SSL?5for?5verify?5callback?$AA@
	push	0
	call	_X509_STORE_CTX_get_ex_new_index
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9, eax
$LN11@SSL_get_ex:
; Line 177
	push	177					; 000000b1H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	12					; 0000000cH
	push	10					; 0000000aH
; Line 179
	call	_CRYPTO_lock
; Line 181
	mov	eax, DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9
	add	esp, 16					; 00000010H
; Line 183
	ret	0
$LN8@SSL_get_ex:
; Line 179
	push	179					; 000000b3H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	12					; 0000000cH
	push	6
	call	_CRYPTO_lock
; Line 181
	mov	eax, DWORD PTR ?ssl_x509_store_ctx_idx@?1??SSL_get_ex_data_X509_STORE_CTX_idx@@9@9
	add	esp, 16					; 00000010H
; Line 183
	ret	0
_SSL_get_ex_data_X509_STORE_CTX_idx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_dup_CA_list
_TEXT	SEGMENT
_sk$ = 8						; size = 4
_SSL_dup_CA_list PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 785
	push	ebx
	push	esi
	push	edi
; Line 790
	call	_sk_new_null
; Line 791
	mov	edi, DWORD PTR _sk$[esp+8]
	mov	ebx, eax
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@SSL_dup_CA
	npad	3
$LL4@SSL_dup_CA:
; Line 792
	push	esi
	push	edi
	call	_sk_value
	push	eax
	call	_X509_NAME_dup
	add	esp, 12					; 0000000cH
; Line 793
	test	eax, eax
	je	SHORT $LN9@SSL_dup_CA
	push	eax
	push	ebx
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@SSL_dup_CA
; Line 791
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@SSL_dup_CA
$LN3@SSL_dup_CA:
	pop	edi
	pop	esi
; Line 798
	mov	eax, ebx
	pop	ebx
; Line 799
	ret	0
$LN9@SSL_dup_CA:
; Line 794
	push	OFFSET _X509_NAME_free
	push	ebx
	call	_sk_pop_free
	add	esp, 8
; Line 795
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 799
	ret	0
_SSL_dup_CA_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_add_client_CA
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_x$ = 12						; size = 4
_SSL_CTX_add_client_CA PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 857
	add	DWORD PTR _ctx$[esp-4], 160		; 000000a0H
	jmp	_add_client_CA
_SSL_CTX_add_client_CA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_add_client_CA
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_x$ = 12						; size = 4
_SSL_add_client_CA PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 852
	add	DWORD PTR _ssl$[esp-4], 248		; 000000f8H
	jmp	_add_client_CA
_SSL_add_client_CA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_client_CA_list
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get_client_CA_list PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 813
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+160]
; Line 814
	ret	0
_SSL_CTX_get_client_CA_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_client_CA_list
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_client_CA_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 818
	mov	ecx, DWORD PTR _s$[esp-4]
	cmp	DWORD PTR [ecx+4], 4096			; 00001000H
	jne	SHORT $LN2@SSL_get_cl
; Line 819
	mov	eax, DWORD PTR [ecx]
	and	eax, -256				; ffffff00H
	cmp	eax, 768				; 00000300H
	jne	SHORT $LN4@SSL_get_cl
	mov	eax, DWORD PTR [ecx+88]
	test	eax, eax
	je	SHORT $LN4@SSL_get_cl
; Line 820
	mov	eax, DWORD PTR [eax+876]
; Line 829
	ret	0
$LN4@SSL_get_cl:
; Line 822
	xor	eax, eax
; Line 829
	ret	0
$LN2@SSL_get_cl:
; Line 824
	mov	eax, DWORD PTR [ecx+248]
	test	eax, eax
	jne	SHORT $LN7@SSL_get_cl
; Line 827
	mov	eax, DWORD PTR [ecx+228]
	mov	eax, DWORD PTR [eax+160]
$LN7@SSL_get_cl:
; Line 829
	ret	0
_SSL_get_client_CA_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_client_CA_list
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name_list$ = 12					; size = 4
_SSL_CTX_set_client_CA_list PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 807
	push	esi
; Line 808
	mov	esi, DWORD PTR _ctx$[esp]
; Line 778
	mov	eax, DWORD PTR [esi+160]
	test	eax, eax
	je	SHORT $LN6@SSL_CTX_se
; Line 779
	push	OFFSET _X509_NAME_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN6@SSL_CTX_se:
; Line 781
	mov	eax, DWORD PTR _name_list$[esp]
	mov	DWORD PTR [esi+160], eax
	pop	esi
; Line 809
	ret	0
_SSL_CTX_set_client_CA_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_client_CA_list
_TEXT	SEGMENT
_s$ = 8							; size = 4
_name_list$ = 12					; size = 4
_SSL_set_client_CA_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 802
	push	esi
; Line 803
	mov	esi, DWORD PTR _s$[esp]
; Line 778
	mov	eax, DWORD PTR [esi+248]
	test	eax, eax
	je	SHORT $LN6@SSL_set_cl
; Line 779
	push	OFFSET _X509_NAME_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN6@SSL_set_cl:
; Line 781
	mov	eax, DWORD PTR _name_list$[esp]
	mov	DWORD PTR [esi+248], eax
	pop	esi
; Line 804
	ret	0
_SSL_set_client_CA_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_add_dir_cert_subjects_to_stack
_TEXT	SEGMENT
_d$ = -1032						; size = 4
_buf$1 = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_stack$ = 8						; size = 4
_dir$ = 12						; size = 4
_SSL_add_dir_cert_subjects_to_stack PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 1009
	mov	eax, 1032				; 00000408H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1032], eax
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _stack$[esp+1036]
	push	esi
	push	edi
	mov	edi, DWORD PTR _dir$[esp+1044]
; Line 1014
	push	1014					; 000003f6H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	24					; 00000018H
	push	9
	mov	DWORD PTR _d$[esp+1064], 0
	call	_CRYPTO_lock
; Line 1018
	lea	eax, DWORD PTR _d$[esp+1064]
	push	edi
	push	eax
	call	_OPENSSL_DIR_read
	mov	esi, eax
	add	esp, 24					; 00000018H
	test	esi, esi
	je	$LN3@SSL_add_di
	npad	3
$LL2@SSL_add_di:
; Line 1022
	mov	eax, edi
	lea	edx, DWORD PTR [eax+1]
$LL17@SSL_add_di:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL17@SSL_add_di
	sub	eax, edx
	mov	edx, esi
	lea	ebx, DWORD PTR [edx+1]
$LL18@SSL_add_di:
	mov	cl, BYTE PTR [edx]
	inc	edx
	test	cl, cl
	jne	SHORT $LL18@SSL_add_di
	sub	edx, ebx
	add	eax, 2
	add	eax, edx
	cmp	eax, 1024				; 00000400H
	ja	$LN12@SSL_add_di
; Line 1030
	push	esi
	push	edi
	push	OFFSET ??_C@_05GFOLEBJA@?$CFs?1?$CFs?$AA@
	lea	eax, DWORD PTR _buf$1[esp+1060]
	push	1024					; 00000400H
	push	eax
	call	_BIO_snprintf
	add	esp, 20					; 00000014H
; Line 1032
	test	eax, eax
	jle	$LN21@SSL_add_di
	cmp	eax, 1024				; 00000400H
	jge	$LN21@SSL_add_di
; Line 1034
	lea	eax, DWORD PTR _buf$1[esp+1048]
	push	eax
	push	ebp
	call	_SSL_add_file_cert_subjects_to_stack
	add	esp, 8
	test	eax, eax
	je	SHORT $LN21@SSL_add_di
; Line 1018
	lea	eax, DWORD PTR _d$[esp+1048]
	push	edi
	push	eax
	call	_OPENSSL_DIR_read
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	jne	SHORT $LL2@SSL_add_di
$LN3@SSL_add_di:
; Line 1038
	call	DWORD PTR __imp___errno
	cmp	DWORD PTR [eax], 0
	je	$LN8@SSL_add_di
; Line 1039
	push	1039					; 0000040fH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	10					; 0000000aH
	push	2
	call	_ERR_put_error
; Line 1040
	push	OFFSET ??_C@_02HJPKOJGD@?8?$CJ?$AA@
	push	edi
	push	OFFSET ??_C@_0BJ@LMCDNAEM@OPENSSL_DIR_read?$CI?$CGctx?0?5?8?$AA@
	push	3
	call	_ERR_add_error_data
; Line 1041
	push	1041					; 00000411H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	2
	push	215					; 000000d7H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 56					; 00000038H
$LN21@SSL_add_di:
	xor	ebx, ebx
$err$24:
; Line 1048
	cmp	DWORD PTR _d$[esp+1048], 0
	je	SHORT $LN9@SSL_add_di
; Line 1049
	lea	eax, DWORD PTR _d$[esp+1048]
	push	eax
	call	_OPENSSL_DIR_end
	add	esp, 4
$LN9@SSL_add_di:
; Line 1050
	push	1050					; 0000041aH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	24					; 00000018H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 1052
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1064]
	add	esp, 16					; 00000010H
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1032				; 00000408H
	ret	0
$LN12@SSL_add_di:
; Line 1023
	push	1024					; 00000400H
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	270					; 0000010eH
	push	215					; 000000d7H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1025
	jmp	SHORT $LN21@SSL_add_di
$LN8@SSL_add_di:
; Line 1045
	mov	ebx, 1
	jmp	SHORT $err$24
_SSL_add_dir_cert_subjects_to_stack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_add_file_cert_subjects_to_stack
_TEXT	SEGMENT
_x$ = -8						; size = 4
_oldcmp$1$ = -4						; size = 4
_stack$ = 8						; size = 4
_file$ = 12						; size = 4
_SSL_add_file_cert_subjects_to_stack PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 946
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 953
	mov	edi, DWORD PTR _stack$[esp+20]
	mov	ebp, 1
	push	OFFSET _xname_cmp
	push	edi
	mov	DWORD PTR _x$[esp+32], 0
	call	_sk_set_cmp_func
	mov	esi, eax
	mov	DWORD PTR _oldcmp$1$[esp+32], esi
; Line 955
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 957
	test	ebx, ebx
	jne	SHORT $LN5@SSL_add_fi
; Line 958
	push	959					; 000003bfH
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	65					; 00000041H
	push	216					; 000000d8H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 960
	jmp	$err$26
$LN5@SSL_add_fi:
; Line 963
	push	DWORD PTR _file$[esp+20]
	push	3
	push	108					; 0000006cH
	push	ebx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$26
; Line 967
	push	0
	push	0
	lea	eax, DWORD PTR _x$[esp+32]
	push	eax
	push	ebx
	call	_PEM_read_bio_X509
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN18@SSL_add_fi
$LL2@SSL_add_fi:
; Line 969
	push	DWORD PTR _x$[esp+24]
	call	_X509_get_subject_name
	add	esp, 4
	test	eax, eax
	je	SHORT $LN24@SSL_add_fi
; Line 971
	push	eax
	call	_X509_NAME_dup
	mov	esi, eax
	add	esp, 4
; Line 972
	test	esi, esi
	je	SHORT $LN24@SSL_add_fi
; Line 974
	push	esi
	push	edi
	call	_sk_find
	add	esp, 8
; Line 975
	push	esi
	test	eax, eax
	js	SHORT $LN10@SSL_add_fi
	call	_X509_NAME_free
	add	esp, 4
	jmp	SHORT $LN11@SSL_add_fi
$LN10@SSL_add_fi:
; Line 977
	push	edi
	call	_sk_push
	add	esp, 8
$LN11@SSL_add_fi:
; Line 967
	push	0
	push	0
	lea	eax, DWORD PTR _x$[esp+32]
	push	eax
	push	ebx
	call	_PEM_read_bio_X509
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LL2@SSL_add_fi
	mov	esi, DWORD PTR _oldcmp$1$[esp+24]
$LN18@SSL_add_fi:
; Line 980
	call	_ERR_clear_error
; Line 982
	jmp	SHORT $LN12@SSL_add_fi
$LN24@SSL_add_fi:
	mov	esi, DWORD PTR _oldcmp$1$[esp+24]
$err$26:
; Line 984
	xor	ebp, ebp
$LN12@SSL_add_fi:
; Line 986
	test	ebx, ebx
	je	SHORT $LN13@SSL_add_fi
; Line 987
	push	ebx
	call	_BIO_free
	add	esp, 4
$LN13@SSL_add_fi:
; Line 988
	mov	ecx, DWORD PTR _x$[esp+24]
	test	ecx, ecx
	je	SHORT $LN14@SSL_add_fi
; Line 989
	push	ecx
	call	_X509_free
	add	esp, 4
$LN14@SSL_add_fi:
; Line 991
	push	esi
	push	edi
	call	_sk_set_cmp_func
	add	esp, 8
; Line 993
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 994
	add	esp, 8
	ret	0
_SSL_add_file_cert_subjects_to_stack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_load_client_CA_file
_TEXT	SEGMENT
_x$ = -4						; size = 4
_file$ = 8						; size = 4
_SSL_load_client_CA_file PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_cert.c
; Line 875
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 881
	push	OFFSET _xname_cmp
	mov	DWORD PTR _x$[esp+24], 0
	xor	esi, esi
	call	_sk_new
	mov	ebx, eax
; Line 883
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 8
	mov	ebp, eax
; Line 885
	test	ebx, ebx
	je	$LN6@SSL_load_c
	test	ebp, ebp
	je	$LN6@SSL_load_c
; Line 890
	push	DWORD PTR _file$[esp+16]
	push	3
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN16@SSL_load_c
; Line 894
	push	esi
	push	esi
	lea	eax, DWORD PTR _x$[esp+28]
	push	eax
	push	ebp
	call	_PEM_read_bio_X509
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN15@SSL_load_c
$LL2@SSL_load_c:
; Line 896
	test	esi, esi
	jne	SHORT $LN10@SSL_load_c
; Line 897
	call	_sk_new_null
	mov	esi, eax
; Line 898
	test	esi, esi
	je	SHORT $LN24@SSL_load_c
$LN10@SSL_load_c:
; Line 903
	push	DWORD PTR _x$[esp+20]
	call	_X509_get_subject_name
	add	esp, 4
	test	eax, eax
	je	SHORT $err$33
; Line 906
	push	eax
	call	_X509_NAME_dup
	mov	edi, eax
	add	esp, 4
; Line 907
	test	edi, edi
	je	SHORT $err$33
; Line 909
	push	edi
	push	ebx
	call	_sk_find
	add	esp, 8
; Line 910
	push	edi
	test	eax, eax
	js	SHORT $LN13@SSL_load_c
	call	_X509_NAME_free
	add	esp, 4
	jmp	SHORT $LN14@SSL_load_c
$LN13@SSL_load_c:
; Line 912
	push	ebx
	call	_sk_push
; Line 913
	push	edi
	push	esi
	call	_sk_push
	add	esp, 16					; 00000010H
$LN14@SSL_load_c:
; Line 894
	push	0
	push	0
	lea	eax, DWORD PTR _x$[esp+28]
	push	eax
	push	ebp
	call	_PEM_read_bio_X509
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LL2@SSL_load_c
	jmp	SHORT $LN15@SSL_load_c
$LN24@SSL_load_c:
; Line 899
	push	899					; 00000383H
; Line 900
	jmp	SHORT $LN31@SSL_load_c
$err$33:
; Line 919
	test	esi, esi
	je	SHORT $LN16@SSL_load_c
; Line 920
	push	OFFSET _X509_NAME_free
	push	esi
	call	_sk_pop_free
	add	esp, 8
	jmp	SHORT $LN16@SSL_load_c
$LN6@SSL_load_c:
; Line 886
	push	886					; 00000376H
$LN31@SSL_load_c:
	push	OFFSET ??_C@_0BB@KPDPALCJ@?4?2ssl?2ssl_cert?4c?$AA@
	push	65					; 00000041H
	push	185					; 000000b9H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN16@SSL_load_c:
; Line 921
	xor	esi, esi
$LN15@SSL_load_c:
; Line 923
	test	ebx, ebx
	je	SHORT $LN17@SSL_load_c
; Line 924
	push	ebx
	call	_sk_free
	add	esp, 4
$LN17@SSL_load_c:
; Line 925
	test	ebp, ebp
	je	SHORT $LN18@SSL_load_c
; Line 926
	push	ebp
	call	_BIO_free
	add	esp, 4
$LN18@SSL_load_c:
; Line 927
	mov	eax, DWORD PTR _x$[esp+20]
	test	eax, eax
	je	SHORT $LN19@SSL_load_c
; Line 928
	push	eax
	call	_X509_free
	add	esp, 4
$LN19@SSL_load_c:
; Line 929
	test	esi, esi
	je	SHORT $LN30@SSL_load_c
; Line 930
	call	_ERR_clear_error
$LN30@SSL_load_c:
	pop	edi
; Line 931
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 932
	pop	ecx
	ret	0
_SSL_load_client_CA_file ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_ghbn_hits DD	01H DUP (?)
_ghbn_miss DD	01H DUP (?)
_wsa_init_done DD 01H DUP (?)
_BSS	ENDS
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_do_server
PUBLIC	_init_client
PUBLIC	_extract_port
PUBLIC	_extract_host_port
PUBLIC	??_C@_0CI@CMJAJOMD@unable?5to?5start?5WINSOCK?0?5error?5c@ ; `string'
PUBLIC	??_C@_06HBELJPBO@socket?$AA@			; `string'
PUBLIC	??_C@_09MGFHKHCL@keepalive?$AA@			; `string'
PUBLIC	??_C@_07KAIBNCHO@connect?$AA@			; `string'
PUBLIC	??_C@_0BB@ENCFPFEO@accept?5error?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BD@IODBLNBJ@bad?5gethostbyaddr?6?$AA@	; `string'
PUBLIC	??_C@_0BC@LIAOONEC@?4?2apps?2s_socket?4c?$AA@	; `string'
PUBLIC	??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@		; `string'
PUBLIC	??_C@_0BH@PFCDHECA@gethostbyname?5failure?6?$AA@ ; `string'
PUBLIC	??_C@_0CD@LJHAJJJN@gethostbyname?5addr?5is?5not?5AF_INE@ ; `string'
PUBLIC	??_C@_0BB@PAFGOIEM@no?5port?5defined?6?$AA@	; `string'
PUBLIC	??_C@_0M@CDHNGIPM@?$CFu?4?$CFu?4?$CFu?4?$CFu?$AA@ ; `string'
PUBLIC	??_C@_0BE@FPJHGDHG@invalid?5IP?5address?6?$AA@	; `string'
PUBLIC	??_C@_03FPEIBLKH@tcp?$AA@			; `string'
PUBLIC	??_C@_0BO@LLFMNAII@getservbyname?5failure?5for?5?$CFs?6?$AA@ ; `string'
EXTRN	__imp__perror:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	__imp__signal:PROC
EXTRN	__imp__accept@12:PROC
EXTRN	__imp__bind@12:PROC
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__connect@12:PROC
EXTRN	__imp__htonl@4:PROC
EXTRN	__imp__htons@4:PROC
EXTRN	__imp__listen@8:PROC
EXTRN	__imp__ntohs@4:PROC
EXTRN	__imp__setsockopt@20:PROC
EXTRN	__imp__shutdown@8:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__gethostbyaddr@12:PROC
EXTRN	__imp__gethostbyname@4:PROC
EXTRN	__imp__getservbyname@8:PROC
EXTRN	__imp__WSAStartup@8:PROC
EXTRN	__imp__WSACleanup@0:PROC
EXTRN	__imp__WSAGetLastError@0:PROC
EXTRN	__imp__WSACancelBlockingCall@0:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_wsa_state DB	0190H DUP (?)
?from@?1??do_accept@@9@9 DB 010H DUP (?)		; `do_accept'::`2'::from
_ghbn_cache DB	0250H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BO@LLFMNAII@getservbyname?5failure?5for?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BO@LLFMNAII@getservbyname?5failure?5for?5?$CFs?6?$AA@ DB 'getservb'
	DB	'yname failure for %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FPEIBLKH@tcp?$AA@
CONST	SEGMENT
??_C@_03FPEIBLKH@tcp?$AA@ DB 'tcp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FPJHGDHG@invalid?5IP?5address?6?$AA@
CONST	SEGMENT
??_C@_0BE@FPJHGDHG@invalid?5IP?5address?6?$AA@ DB 'invalid IP address', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CDHNGIPM@?$CFu?4?$CFu?4?$CFu?4?$CFu?$AA@
CONST	SEGMENT
??_C@_0M@CDHNGIPM@?$CFu?4?$CFu?4?$CFu?4?$CFu?$AA@ DB '%u.%u.%u.%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PAFGOIEM@no?5port?5defined?6?$AA@
CONST	SEGMENT
??_C@_0BB@PAFGOIEM@no?5port?5defined?6?$AA@ DB 'no port defined', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LJHAJJJN@gethostbyname?5addr?5is?5not?5AF_INE@
CONST	SEGMENT
??_C@_0CD@LJHAJJJN@gethostbyname?5addr?5is?5not?5AF_INE@ DB 'gethostbynam'
	DB	'e addr is not AF_INET', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PFCDHECA@gethostbyname?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BH@PFCDHECA@gethostbyname?5failure?6?$AA@ DB 'gethostbyname failur'
	DB	'e', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@
CONST	SEGMENT
??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@ DB 'OPENSSL_malloc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LIAOONEC@?4?2apps?2s_socket?4c?$AA@
CONST	SEGMENT
??_C@_0BC@LIAOONEC@?4?2apps?2s_socket?4c?$AA@ DB '.\apps\s_socket.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IODBLNBJ@bad?5gethostbyaddr?6?$AA@
CONST	SEGMENT
??_C@_0BD@IODBLNBJ@bad?5gethostbyaddr?6?$AA@ DB 'bad gethostbyaddr', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ENCFPFEO@accept?5error?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BB@ENCFPFEO@accept?5error?5?$CFd?6?$AA@ DB 'accept error %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KAIBNCHO@connect?$AA@
CONST	SEGMENT
??_C@_07KAIBNCHO@connect?$AA@ DB 'connect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MGFHKHCL@keepalive?$AA@
CONST	SEGMENT
??_C@_09MGFHKHCL@keepalive?$AA@ DB 'keepalive', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HBELJPBO@socket?$AA@
CONST	SEGMENT
??_C@_06HBELJPBO@socket?$AA@ DB 'socket', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CMJAJOMD@unable?5to?5start?5WINSOCK?0?5error?5c@
CONST	SEGMENT
??_C@_0CI@CMJAJOMD@unable?5to?5start?5WINSOCK?0?5error?5c@ DB 'unable to '
	DB	'start WINSOCK, error code=%d', 0aH, 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _host_ip
_TEXT	SEGMENT
_in$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_str$ = 8						; size = 4
_ip$ = 12						; size = 4
_host_ip PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 506
	mov	eax, 20					; 00000014H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+20], eax
	push	esi
	mov	esi, DWORD PTR _ip$[esp+20]
; Line 510
	lea	eax, DWORD PTR _in$[esp+36]
	push	edi
	mov	edi, DWORD PTR _str$[esp+24]
	push	eax
	lea	eax, DWORD PTR _in$[esp+40]
	push	eax
	lea	eax, DWORD PTR _in$[esp+40]
	push	eax
	lea	eax, DWORD PTR _in$[esp+40]
	push	eax
	push	OFFSET ??_C@_0M@CDHNGIPM@?$CFu?4?$CFu?4?$CFu?4?$CFu?$AA@
	push	edi
	call	_sscanf
	add	esp, 24					; 00000018H
	cmp	eax, 4
	jne	SHORT $LN5@host_ip
; Line 512
	xor	eax, eax
	npad	8
$LL4@host_ip:
; Line 513
	cmp	DWORD PTR _in$[esp+eax*4+28], 255	; 000000ffH
	ja	SHORT $LN13@host_ip
; Line 512
	inc	eax
	cmp	eax, 4
	jl	SHORT $LL4@host_ip
; Line 517
	movzx	eax, BYTE PTR _in$[esp+28]
	mov	BYTE PTR [esi], al
; Line 518
	movzx	eax, BYTE PTR _in$[esp+32]
	mov	BYTE PTR [esi+1], al
; Line 519
	movzx	eax, BYTE PTR _in$[esp+36]
	mov	BYTE PTR [esi+2], al
; Line 520
	movzx	eax, BYTE PTR _in$[esp+40]
; Line 521
	jmp	SHORT $LN27@host_ip
$LN13@host_ip:
; Line 514
	push	OFFSET ??_C@_0BE@FPJHGDHG@invalid?5IP?5address?6?$AA@
; Line 515
	jmp	SHORT $LN28@host_ip
$LN5@host_ip:
; Line 524
	call	_ssl_sock_init
	test	eax, eax
	je	SHORT $LN29@host_ip
; Line 527
	push	edi
	call	_GetHostByName
	mov	ecx, eax
	add	esp, 4
; Line 528
	test	ecx, ecx
	jne	SHORT $LN9@host_ip
; Line 529
	push	OFFSET ??_C@_0BH@PFCDHECA@gethostbyname?5failure?6?$AA@
; Line 544
	jmp	SHORT $LN28@host_ip
$LN9@host_ip:
; Line 533
	cmp	WORD PTR [ecx+8], 2
	je	SHORT $LN10@host_ip
; Line 534
	push	OFFSET ??_C@_0CD@LJHAJJJN@gethostbyname?5addr?5is?5not?5AF_INE@
$LN28@host_ip:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$err$31:
$LN29@host_ip:
	pop	edi
; Line 535
	xor	eax, eax
	pop	esi
; Line 545
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN10@host_ip:
; Line 537
	mov	eax, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	mov	BYTE PTR [esi], al
	mov	eax, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax+1]
	mov	BYTE PTR [esi+1], al
	mov	eax, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax+2]
	mov	BYTE PTR [esi+2], al
	mov	eax, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax+3]
$LN27@host_ip:
; Line 545
	mov	ecx, DWORD PTR __$ArrayPad$[esp+28]
	mov	BYTE PTR [esi+3], al
	mov	eax, 1
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
_host_ip ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_accept
_TEXT	SEGMENT
_len$ = -4						; size = 4
_acc_sock$ = 8						; size = 4
_sock$ = 12						; size = 4
_host$ = 16						; size = 4
_do_accept PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 390
	mov	eax, 4
	call	__chkstk
; Line 397
	call	_ssl_sock_init
	test	eax, eax
	jne	SHORT $LN2@do_accept
; Line 478
	pop	ecx
	ret	0
$LN2@do_accept:
	push	esi
; Line 412
	lea	eax, DWORD PTR _len$[esp+8]
	mov	DWORD PTR _len$[esp+8], 16		; 00000010H
	push	eax
	push	OFFSET ?from@?1??do_accept@@9@9
	push	DWORD PTR _acc_sock$[esp+12]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR ?from@?1??do_accept@@9@9, xmm0
	call	DWORD PTR __imp__accept@12
	mov	esi, eax
; Line 413
	cmp	esi, -1
	jne	SHORT $LN3@do_accept
; Line 416
	call	DWORD PTR __imp__WSAGetLastError@0
; Line 417
	push	eax
	push	OFFSET ??_C@_0BB@ENCFPFEO@accept?5error?5?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 428
	xor	eax, eax
	pop	esi
; Line 478
	pop	ecx
	ret	0
$LN3@do_accept:
	push	ebx
	push	edi
; Line 441
	mov	edi, DWORD PTR _host$[esp+12]
	test	edi, edi
	je	SHORT $end$19
; Line 445
	push	2
	push	4
	push	OFFSET ?from@?1??do_accept@@9@9+4
	call	DWORD PTR __imp__gethostbyaddr@12
	mov	ebx, eax
; Line 451
	test	ebx, ebx
	jne	SHORT $LN5@do_accept
; Line 452
	push	OFFSET ??_C@_0BD@IODBLNBJ@bad?5gethostbyaddr?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 453
	mov	DWORD PTR [edi], ebx
$end$19:
; Line 476
	mov	eax, DWORD PTR _sock$[esp+12]
	pop	edi
	pop	ebx
	mov	DWORD PTR [eax], esi
; Line 477
	mov	eax, 1
	pop	esi
; Line 478
	pop	ecx
	ret	0
$LN5@do_accept:
; Line 456
	mov	ecx, DWORD PTR [ebx]
	lea	edx, DWORD PTR [ecx+1]
	npad	5
$LL11@do_accept:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL11@do_accept
	sub	ecx, edx
	push	456					; 000001c8H
	push	OFFSET ??_C@_0BC@LIAOONEC@?4?2apps?2s_socket?4c?$AA@
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi], edx
	test	edx, edx
	jne	SHORT $LN7@do_accept
; Line 457
	push	OFFSET ??_C@_0P@OGNLMJHA@OPENSSL_malloc?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 471
	push	esi
	call	DWORD PTR __imp__closesocket@4
	pop	edi
	pop	ebx
; Line 472
	xor	eax, eax
	pop	esi
; Line 478
	pop	ecx
	ret	0
$LN7@do_accept:
; Line 461
	mov	ebx, DWORD PTR [ebx]
	mov	ecx, ebx
	push	ebp
	lea	ebp, DWORD PTR [ecx+1]
	npad	5
$LL12@do_accept:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL12@do_accept
	sub	ecx, ebp
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	push	ebx
	push	edx
	call	_BUF_strlcpy
; Line 463
	push	DWORD PTR [edi]
	call	_GetHostByName
	add	esp, 16					; 00000010H
	pop	ebp
; Line 464
	test	eax, eax
	jne	SHORT $LN8@do_accept
; Line 465
	push	OFFSET ??_C@_0BH@PFCDHECA@gethostbyname?5failure?6?$AA@
; Line 467
	jmp	SHORT $LN16@do_accept
$LN8@do_accept:
; Line 469
	cmp	WORD PTR [eax+8], 2
	je	$end$19
; Line 470
	push	OFFSET ??_C@_0CD@LJHAJJJN@gethostbyname?5addr?5is?5not?5AF_INE@
$LN16@do_accept:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 471
	push	esi
	call	DWORD PTR __imp__closesocket@4
	pop	edi
	pop	ebx
; Line 472
	xor	eax, eax
	pop	esi
; Line 478
	pop	ecx
	ret	0
_do_accept ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _init_server_long
_TEXT	SEGMENT
_j$1 = -24						; size = 4
_server$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_sock$ = 8						; size = 4
_port$ = 12						; size = 4
_ip$ = 16						; size = 4
_type$ = 20						; size = 4
_init_server_long PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 332
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _sock$[esp+28]
; Line 333
	xor	ebx, ebx
	push	esi
	mov	esi, DWORD PTR _ip$[esp+32]
; Line 337
	call	_ssl_sock_init
	test	eax, eax
	jne	SHORT $LN2@init_serve
	pop	esi
	pop	ebp
	pop	ebx
; Line 382
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN2@init_serve:
; Line 342
	push	DWORD PTR _port$[esp+32]
	xorps	xmm0, xmm0
	mov	eax, 2
	movups	XMMWORD PTR _server$[esp+40], xmm0
	mov	WORD PTR _server$[esp+40], ax
	call	DWORD PTR __imp__htons@4
	mov	WORD PTR _server$[esp+38], ax
; Line 343
	test	esi, esi
	jne	SHORT $LN3@init_serve
; Line 344
	mov	DWORD PTR _server$[esp+40], ebx
	jmp	SHORT $LN4@init_serve
$LN3@init_serve:
; Line 348
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _server$[esp+40], eax
$LN4@init_serve:
; Line 353
	cmp	DWORD PTR _type$[esp+32], 1
	jne	SHORT $LN5@init_serve
; Line 354
	push	6
	push	1
	jmp	SHORT $LN13@init_serve
$LN5@init_serve:
; Line 356
	push	17					; 00000011H
	push	2
$LN13@init_serve:
	push	2
	call	DWORD PTR __imp__socket@12
	mov	esi, eax
; Line 358
	cmp	esi, -1
	je	SHORT $LN12@init_serve
; Line 363
	push	4
	lea	eax, DWORD PTR _j$1[esp+40]
	mov	DWORD PTR _j$1[esp+40], 1
	push	eax
	push	4
	push	65535					; 0000ffffH
	push	esi
	call	DWORD PTR __imp__setsockopt@20
; Line 366
	push	16					; 00000010H
	lea	eax, DWORD PTR _server$[esp+40]
	push	eax
	push	esi
	call	DWORD PTR __imp__bind@12
	cmp	eax, -1
	je	SHORT $LN12@init_serve
; Line 373
	cmp	DWORD PTR _type$[esp+32], 1
	jne	SHORT $LN9@init_serve
	push	128					; 00000080H
	push	esi
	call	DWORD PTR __imp__listen@8
	cmp	eax, -1
	je	SHORT $LN12@init_serve
$LN9@init_serve:
; Line 375
	mov	DWORD PTR [ebp], esi
; Line 376
	mov	ebx, 1
	pop	esi
	pop	ebp
; Line 381
	mov	eax, ebx
	pop	ebx
; Line 382
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN12@init_serve:
; Line 378
	cmp	esi, -1
	je	SHORT $LN10@init_serve
; Line 379
	push	0
	push	esi
	call	DWORD PTR __imp__shutdown@8
	push	esi
	call	DWORD PTR __imp__closesocket@4
$LN10@init_serve:
; Line 382
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	mov	eax, ebx
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_init_server_long ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _init_server
_TEXT	SEGMENT
_sock$ = 8						; size = 4
_port$ = 12						; size = 4
_type$ = 16						; size = 4
_init_server PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 386
	push	DWORD PTR _type$[esp-4]
	push	0
	push	DWORD PTR _port$[esp+4]
	push	DWORD PTR _sock$[esp+8]
	call	_init_server_long
	add	esp, 16					; 00000010H
; Line 387
	ret	0
_init_server ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _init_client_ip
_TEXT	SEGMENT
_i$ = -24						; size = 4
_them$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_sock$ = 8						; size = 4
_ip$ = 12						; size = 4
_port$ = 16						; size = 4
_type$ = 20						; size = 4
_init_client_ip PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 245
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
	push	esi
	mov	esi, DWORD PTR _ip$[esp+24]
	push	edi
	mov	edi, DWORD PTR _sock$[esp+28]
; Line 250
	call	_ssl_sock_init
	test	eax, eax
	je	SHORT $LN11@init_clien
; Line 255
	push	DWORD PTR _port$[esp+28]
	xorps	xmm0, xmm0
	mov	eax, 2
	movups	XMMWORD PTR _them$[esp+36], xmm0
	mov	WORD PTR _them$[esp+36], ax
	call	DWORD PTR __imp__htons@4
; Line 256
	movzx	ecx, BYTE PTR [esi]
	shl	ecx, 8
	mov	WORD PTR _them$[esp+34], ax
	movzx	eax, BYTE PTR [esi+1]
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+2]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+3]
	shl	ecx, 8
	or	ecx, eax
; Line 260
	push	ecx
	call	DWORD PTR __imp__htonl@4
; Line 262
	cmp	DWORD PTR _type$[esp+28], 1
	mov	DWORD PTR _them$[esp+36], eax
	jne	SHORT $LN3@init_clien
; Line 263
	push	6
	push	1
	jmp	SHORT $LN10@init_clien
$LN3@init_clien:
; Line 265
	push	17					; 00000011H
	push	2
$LN10@init_clien:
	push	2
	call	DWORD PTR __imp__socket@12
	mov	esi, eax
; Line 267
	cmp	esi, -1
	jne	SHORT $LN5@init_clien
; Line 268
	push	OFFSET ??_C@_06HBELJPBO@socket?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 4
$LN11@init_clien:
; Line 269
	pop	edi
	xor	eax, eax
	pop	esi
; Line 290
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN5@init_clien:
; Line 272
	cmp	DWORD PTR _type$[esp+28], 1
	jne	SHORT $LN7@init_clien
; Line 274
	push	4
	lea	eax, DWORD PTR _i$[esp+36]
	mov	DWORD PTR _i$[esp+36], 0
	push	eax
	push	8
	push	65535					; 0000ffffH
	push	esi
	call	DWORD PTR __imp__setsockopt@20
	mov	DWORD PTR _i$[esp+32], eax
; Line 275
	test	eax, eax
	jns	SHORT $LN7@init_clien
; Line 276
	push	esi
	call	DWORD PTR __imp__closesocket@4
; Line 277
	push	OFFSET ??_C@_09MGFHKHCL@keepalive?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 278
	xor	eax, eax
	pop	edi
	pop	esi
; Line 290
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN7@init_clien:
; Line 283
	push	16					; 00000010H
	lea	eax, DWORD PTR _them$[esp+36]
	push	eax
	push	esi
	call	DWORD PTR __imp__connect@12
	cmp	eax, -1
	jne	SHORT $LN8@init_clien
; Line 284
	push	esi
	call	DWORD PTR __imp__closesocket@4
; Line 285
	push	OFFSET ??_C@_07KAIBNCHO@connect?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 286
	xor	eax, eax
	pop	edi
	pop	esi
; Line 290
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN8@init_clien:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+32]
	mov	eax, 1
	mov	DWORD PTR [edi], esi
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_init_client_ip ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_sock_init
_TEXT	SEGMENT
_ssl_sock_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 188
	cmp	DWORD PTR _wsa_init_done, 0
	jne	SHORT $LN3@ssl_sock_i
; Line 192
	push	OFFSET _ssl_sock_cleanup
	push	2
	call	DWORD PTR __imp__signal
; Line 195
	push	400					; 00000190H
	push	0
	push	OFFSET _wsa_state
	mov	DWORD PTR _wsa_init_done, 1
	call	_memset
	add	esp, 20					; 00000014H
; Line 196
	push	OFFSET _wsa_state
	push	257					; 00000101H
	call	DWORD PTR __imp__WSAStartup@8
	test	eax, eax
	je	SHORT $LN3@ssl_sock_i
; Line 197
	call	DWORD PTR __imp__WSAGetLastError@0
; Line 198
	push	eax
	push	OFFSET ??_C@_0CI@CMJAJOMD@unable?5to?5start?5WINSOCK?0?5error?5c@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 200
	xor	eax, eax
; Line 232
	ret	0
$LN3@ssl_sock_i:
; Line 231
	mov	eax, 1
; Line 232
	ret	0
_ssl_sock_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_sock_cleanup
_TEXT	SEGMENT
_ssl_sock_cleanup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 162
	cmp	DWORD PTR _wsa_init_done, 0
	je	SHORT $LN2@ssl_sock_c
; Line 163
	mov	DWORD PTR _wsa_init_done, 0
; Line 165
	call	DWORD PTR __imp__WSACancelBlockingCall@0
; Line 167
	jmp	DWORD PTR __imp__WSACleanup@0
$LN2@ssl_sock_c:
; Line 169
	ret	0
_ssl_sock_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _GetHostByName
_TEXT	SEGMENT
_lowi$1$ = -4						; size = 4
_name$ = 8						; size = 4
_GetHostByName PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 577
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 579
	mov	esi, DWORD PTR _name$[esp+12]
	xor	eax, eax
	push	edi
; Line 580
	or	ebp, -1
	mov	DWORD PTR _lowi$1$[esp+20], eax
; Line 582
	xor	ebx, ebx
	mov	edi, OFFSET _ghbn_cache+144
$LL4@GetHostByN:
; Line 583
	mov	eax, DWORD PTR [edi]
	cmp	ebp, eax
	jbe	SHORT $LN5@GetHostByN
; Line 584
	mov	ebp, eax
; Line 585
	mov	DWORD PTR _lowi$1$[esp+20], ebx
$LN5@GetHostByN:
; Line 587
	test	eax, eax
	je	SHORT $LN2@GetHostByN
; Line 588
	push	128					; 00000080H
	lea	eax, DWORD PTR [edi-144]
	push	eax
	push	esi
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN16@GetHostByN
$LN2@GetHostByN:
; Line 582
	add	edi, 148				; 00000094H
	inc	ebx
	cmp	edi, OFFSET _ghbn_cache+736
	jl	SHORT $LL4@GetHostByN
$LN16@GetHostByN:
; Line 592
	cmp	ebx, 4
	jne	SHORT $LN8@GetHostByN
; Line 593
	inc	DWORD PTR _ghbn_miss
; Line 594
	push	esi
	call	DWORD PTR __imp__gethostbyname@4
	mov	edx, eax
; Line 595
	test	edx, edx
	jne	SHORT $LN10@GetHostByN
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 611
	pop	ecx
	ret	0
$LN10@GetHostByN:
; Line 598
	mov	ecx, esi
	lea	edi, DWORD PTR [ecx+1]
	npad	2
$LL22@GetHostByN:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL22@GetHostByN
	sub	ecx, edi
	cmp	ecx, 128				; 00000080H
	jae	SHORT $LN11@GetHostByN
; Line 599
	imul	edi, DWORD PTR _lowi$1$[esp+20], 148
	lea	ecx, DWORD PTR _ghbn_cache[edi]
	sub	ecx, esi
$LL13@GetHostByN:
	mov	al, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [ecx+esi-1], al
	test	al, al
	jne	SHORT $LL13@GetHostByN
; Line 600
	movups	xmm0, XMMWORD PTR [edx]
; Line 602
	mov	eax, DWORD PTR _ghbn_hits
	add	eax, DWORD PTR _ghbn_miss
	movups	XMMWORD PTR _ghbn_cache[edi+128], xmm0
	mov	DWORD PTR _ghbn_cache[edi+144], eax
$LN11@GetHostByN:
; Line 604
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, edx
	pop	ebx
; Line 611
	pop	ecx
	ret	0
$LN8@GetHostByN:
; Line 606
	mov	edx, DWORD PTR _ghbn_hits
; Line 608
	mov	eax, DWORD PTR _ghbn_miss
	inc	edx
	imul	ecx, ebx, 148
	add	eax, edx
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR _ghbn_hits, edx
	pop	ebx
	mov	DWORD PTR _ghbn_cache[ecx+144], eax
	lea	eax, DWORD PTR _ghbn_cache[ecx+128]
; Line 611
	pop	ecx
	ret	0
_GetHostByName ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _extract_host_port
_TEXT	SEGMENT
_str$ = 8						; size = 4
_host_ptr$ = 12						; size = 4
_ip$ = 16						; size = 4
_port_ptr$ = 20						; size = 4
_extract_host_port PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 482
	push	esi
	push	edi
; Line 486
	mov	edi, DWORD PTR _str$[esp+4]
	push	58					; 0000003aH
	push	edi
	call	DWORD PTR __imp__strchr
	mov	esi, eax
	add	esp, 8
; Line 487
	test	esi, esi
	jne	SHORT $LN2@extract_ho
; Line 488
	push	OFFSET ??_C@_0BB@PAFGOIEM@no?5port?5defined?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$err$8:
; Line 489
	pop	edi
	xor	eax, eax
	pop	esi
; Line 503
	ret	0
$LN2@extract_ho:
; Line 493
	mov	eax, DWORD PTR _ip$[esp+4]
	mov	BYTE PTR [esi], 0
	inc	esi
	test	eax, eax
	je	SHORT $LN3@extract_ho
	push	eax
	push	edi
	call	_host_ip
	add	esp, 8
	test	eax, eax
	je	SHORT $err$8
$LN3@extract_ho:
; Line 495
	mov	eax, DWORD PTR _host_ptr$[esp+4]
	test	eax, eax
	je	SHORT $LN4@extract_ho
; Line 496
	mov	DWORD PTR [eax], edi
$LN4@extract_ho:
; Line 498
	push	DWORD PTR _port_ptr$[esp+4]
	push	esi
	call	_extract_port
	add	esp, 8
	test	eax, eax
	je	SHORT $err$8
; Line 500
	pop	edi
	mov	eax, 1
	pop	esi
; Line 503
	ret	0
_extract_host_port ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _extract_port
_TEXT	SEGMENT
_str$ = 8						; size = 4
_port_ptr$ = 12						; size = 4
_extract_port PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 548
	push	esi
; Line 552
	mov	esi, DWORD PTR _str$[esp]
	push	esi
	call	DWORD PTR __imp__atoi
	add	esp, 4
; Line 553
	test	eax, eax
	jne	SHORT $LN6@extract_po
; Line 556
	push	OFFSET ??_C@_03FPEIBLKH@tcp?$AA@
	push	esi
	call	DWORD PTR __imp__getservbyname@8
; Line 557
	test	eax, eax
	jne	SHORT $LN4@extract_po
; Line 558
	push	esi
	push	OFFSET ??_C@_0BO@LLFMNAII@getservbyname?5failure?5for?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 559
	xor	eax, eax
	pop	esi
; Line 564
	ret	0
$LN4@extract_po:
; Line 561
	movzx	eax, WORD PTR [eax+8]
	push	eax
	call	DWORD PTR __imp__ntohs@4
$LN6@extract_po:
	mov	ecx, DWORD PTR _port_ptr$[esp]
	pop	esi
	mov	WORD PTR [ecx], ax
; Line 563
	mov	eax, 1
; Line 564
	ret	0
_extract_port ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _init_client
_TEXT	SEGMENT
_ip$ = -4						; size = 4
_sock$ = 8						; size = 4
_host$ = 12						; size = 4
_port$ = 16						; size = 4
_type$ = 20						; size = 4
_init_client PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 235
	mov	eax, 4
	call	__chkstk
; Line 239
	lea	eax, DWORD PTR _ip$[esp+4]
	mov	DWORD PTR _ip$[esp+4], 0
	push	eax
	push	DWORD PTR _host$[esp+4]
	call	_host_ip
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@init_clien
; Line 242
	pop	ecx
	ret	0
$LN2@init_clien:
; Line 241
	push	DWORD PTR _type$[esp]
	lea	eax, DWORD PTR _ip$[esp+8]
	push	DWORD PTR _port$[esp+4]
	push	eax
	push	DWORD PTR _sock$[esp+12]
	call	_init_client_ip
	add	esp, 16					; 00000010H
; Line 242
	pop	ecx
	ret	0
_init_client ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_server
_TEXT	SEGMENT
_sock$ = -12						; size = 4
_accept_socket$ = -12					; size = 4
_name$ = -8						; size = 4
_i$1$ = -4						; size = 4
_port$ = 8						; size = 4
_type$ = 12						; size = 4
_ret$ = 16						; size = 4
_cb$ = 20						; size = 4
_context$ = 24						; size = 4
_naccept$ = 28						; size = 4
_do_server PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_socket.c
; Line 296
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebp
	push	esi
; Line 386
	mov	esi, DWORD PTR _type$[esp+16]
	lea	eax, DWORD PTR _accept_socket$[esp+20]
; Line 298
	xor	ebp, ebp
; Line 386
	push	esi
	push	ebp
	push	DWORD PTR _port$[esp+24]
; Line 298
	mov	DWORD PTR _name$[esp+32], ebp
; Line 386
	push	eax
; Line 299
	mov	DWORD PTR _accept_socket$[esp+36], ebp
; Line 386
	call	_init_server_long
	add	esp, 16					; 00000010H
; Line 302
	test	eax, eax
	jne	SHORT $LN5@do_server
	pop	esi
	pop	ebp
; Line 329
	add	esp, 12					; 0000000cH
	ret	0
$LN5@do_server:
; Line 305
	mov	eax, DWORD PTR _ret$[esp+16]
	push	edi
	mov	edi, DWORD PTR _accept_socket$[esp+24]
	test	eax, eax
	je	SHORT $LN27@do_server
; Line 306
	mov	DWORD PTR [eax], edi
$LN27@do_server:
	push	ebx
	mov	ebx, DWORD PTR _naccept$[esp+24]
	npad	5
$LL2@do_server:
; Line 310
	cmp	esi, 1
	jne	SHORT $LN7@do_server
; Line 311
	lea	eax, DWORD PTR _name$[esp+28]
	push	eax
	lea	eax, DWORD PTR _sock$[esp+32]
	push	eax
	push	edi
	call	_do_accept
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN19@do_server
; Line 315
	mov	ebp, DWORD PTR _name$[esp+28]
	mov	esi, DWORD PTR _sock$[esp+28]
	jmp	SHORT $LN8@do_server
$LN7@do_server:
; Line 316
	mov	esi, edi
	mov	DWORD PTR _sock$[esp+28], esi
$LN8@do_server:
; Line 317
	push	DWORD PTR _context$[esp+24]
	push	DWORD PTR _type$[esp+28]
	push	esi
	push	ebp
	call	DWORD PTR _cb$[esp+40]
	add	esp, 16					; 00000010H
	mov	DWORD PTR _i$1$[esp+28], eax
; Line 318
	test	ebp, ebp
	je	SHORT $LN10@do_server
; Line 319
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN10@do_server:
; Line 320
	cmp	DWORD PTR _type$[esp+24], 1
	jne	SHORT $LN11@do_server
; Line 321
	push	2
	push	esi
	call	DWORD PTR __imp__shutdown@8
	push	esi
	call	DWORD PTR __imp__closesocket@4
$LN11@do_server:
; Line 322
	cmp	ebx, -1
	je	SHORT $LN12@do_server
; Line 323
	dec	ebx
$LN12@do_server:
; Line 324
	mov	esi, DWORD PTR _i$1$[esp+28]
	test	esi, esi
	js	SHORT $LN20@do_server
	test	ebx, ebx
	je	SHORT $LN20@do_server
; Line 328
	mov	esi, DWORD PTR _type$[esp+24]
	jmp	SHORT $LL2@do_server
$LN19@do_server:
; Line 312
	push	0
	push	edi
	call	DWORD PTR __imp__shutdown@8
	push	edi
	call	DWORD PTR __imp__closesocket@4
	pop	ebx
	pop	edi
	pop	esi
; Line 313
	xor	eax, eax
	pop	ebp
; Line 329
	add	esp, 12					; 0000000cH
	ret	0
$LN20@do_server:
; Line 325
	push	2
	push	edi
	call	DWORD PTR __imp__shutdown@8
	push	edi
	call	DWORD PTR __imp__closesocket@4
	pop	ebx
	pop	edi
; Line 326
	mov	eax, esi
	pop	esi
	pop	ebp
; Line 329
	add	esp, 12					; 0000000cH
	ret	0
_do_server ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2268
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2170
	ret	0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 91
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 92
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
END

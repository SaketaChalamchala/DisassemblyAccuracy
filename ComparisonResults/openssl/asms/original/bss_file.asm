; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0N@JAGKAFD@FILE?5pointer?$AA@		; `string'
;	COMDAT ??_C@_0N@JAGKAFD@FILE?5pointer?$AA@
CONST	SEGMENT
??_C@_0N@JAGKAFD@FILE?5pointer?$AA@ DB 'FILE pointer', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_methods_filep DD 0402H
	DD	FLAT:??_C@_0N@JAGKAFD@FILE?5pointer?$AA@
	DD	FLAT:_file_write
	DD	FLAT:_file_read
	DD	FLAT:_file_puts
	DD	FLAT:_file_gets
	DD	FLAT:_file_ctrl
	DD	FLAT:_file_new
	DD	FLAT:_file_free
	DD	00H
_DATA	ENDS
PUBLIC	_BIO_s_file
PUBLIC	_BIO_new_file
PUBLIC	_BIO_new_fp
PUBLIC	??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@ ; `string'
PUBLIC	??_C@_02HJPKOJGD@?8?$CJ?$AA@			; `string'
PUBLIC	??_C@_03IMMLKIF@?8?0?8?$AA@			; `string'
PUBLIC	??_C@_07JMDFGFFH@fopen?$CI?8?$AA@		; `string'
PUBLIC	??_C@_02DPNLHKJD@a?$CL?$AA@			; `string'
PUBLIC	??_C@_01MCMALHOG@a?$AA@				; `string'
PUBLIC	??_C@_02CBLLGHLK@r?$CL?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_01OJONOECF@b?$AA@				; `string'
PUBLIC	??_C@_01PFHFFBPC@t?$AA@				; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp___wfopen:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__feof:PROC
EXTRN	__imp__ferror:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp___fileno:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fseek:PROC
EXTRN	__imp__ftell:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp___setmode:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_clear_flags:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__alloca_probe_16:PROC
EXTRN	__chkstk:PROC
EXTRN	_OPENSSL_UplinkTable:BYTE
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_01PFHFFBPC@t?$AA@
CONST	SEGMENT
??_C@_01PFHFFBPC@t?$AA@ DB 't', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OJONOECF@b?$AA@
CONST	SEGMENT
??_C@_01OJONOECF@b?$AA@ DB 'b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CBLLGHLK@r?$CL?$AA@
CONST	SEGMENT
??_C@_02CBLLGHLK@r?$CL?$AA@ DB 'r+', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01MCMALHOG@a?$AA@
CONST	SEGMENT
??_C@_01MCMALHOG@a?$AA@ DB 'a', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPNLHKJD@a?$CL?$AA@
CONST	SEGMENT
??_C@_02DPNLHKJD@a?$CL?$AA@ DB 'a+', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JMDFGFFH@fopen?$CI?8?$AA@
CONST	SEGMENT
??_C@_07JMDFGFFH@fopen?$CI?8?$AA@ DB 'fopen(''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IMMLKIF@?8?0?8?$AA@
CONST	SEGMENT
??_C@_03IMMLKIF@?8?0?8?$AA@ DB ''',''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HJPKOJGD@?8?$CJ?$AA@
CONST	SEGMENT
??_C@_02HJPKOJGD@?8?$CJ?$AA@ DB ''')', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
CONST	SEGMENT
??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@ DB '.\crypto\bio\bss'
	DB	'_file.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _file_fopen
_TEXT	SEGMENT
_wfilename$1$ = -36					; size = 4
_flags$1$ = -32						; size = 4
_len_0$1$ = -28						; size = 4
_mode$GSCopy$1$ = -24					; size = 4
_wmode$1 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
_mode$ = 12						; size = 4
_file_fopen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 119
	push	ebp
	mov	ebp, esp
	mov	eax, 36					; 00000024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	mov	ebx, DWORD PTR _mode$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _filename$[ebp]
; Line 123
	mov	ecx, edi
	mov	DWORD PTR _mode$GSCopy$1$[ebp], ebx
	lea	edx, DWORD PTR [ecx+1]
$LL9@file_fopen:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL9@file_fopen
; Line 139
	push	0
	sub	ecx, edx
	mov	DWORD PTR _flags$1$[ebp], 8
	push	0
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	push	edi
	push	8
	push	65001					; 0000fde9H
	mov	DWORD PTR _len_0$1$[ebp], eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	mov	esi, eax
	test	esi, esi
	jg	SHORT $LN4@file_fopen
	mov	ebx, DWORD PTR __imp__GetLastError@0
	call	ebx
	cmp	eax, 1004				; 000003ecH
	jne	SHORT $LN2@file_fopen
	push	0
	push	0
	push	DWORD PTR _len_0$1$[ebp]
	mov	DWORD PTR _flags$1$[ebp], 0
	push	edi
	push	0
	push	65001					; 0000fde9H
	call	DWORD PTR __imp__MultiByteToWideChar@24
	mov	esi, eax
	test	esi, esi
	jg	SHORT $LN16@file_fopen
$LN2@file_fopen:
; Line 160
	call	ebx
	cmp	eax, 1113				; 00000459H
	jne	$LN11@file_fopen
$LN6@file_fopen:
; Line 161
	push	DWORD PTR _mode$GSCopy$1$[ebp]
	push	edi
	call	DWORD PTR __imp__fopen
	add	esp, 8
; Line 167
	lea	esp, DWORD PTR [ebp-48]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@file_fopen:
	mov	ebx, DWORD PTR _mode$GSCopy$1$[ebp]
$LN4@file_fopen:
; Line 145
	lea	eax, DWORD PTR [esi+esi]
	call	__alloca_probe_16
	mov	eax, esp
; Line 151
	push	esi
	mov	esi, DWORD PTR __imp__MultiByteToWideChar@24
	push	eax
	push	DWORD PTR _len_0$1$[ebp]
	mov	DWORD PTR _wfilename$1$[ebp], eax
	push	edi
	push	DWORD PTR _flags$1$[ebp]
	push	65001					; 0000fde9H
	call	esi
	test	eax, eax
	je	SHORT $LN11@file_fopen
	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+1]
$LL10@file_fopen:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL10@file_fopen
	push	8
	sub	ecx, edx
	lea	eax, DWORD PTR _wmode$1[ebp]
	push	eax
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	push	ebx
	push	0
	push	65001					; 0000fde9H
	call	esi
	test	eax, eax
	je	SHORT $LN11@file_fopen
	lea	eax, DWORD PTR _wmode$1[ebp]
	push	eax
	push	DWORD PTR _wfilename$1$[ebp]
	call	DWORD PTR __imp___wfopen
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	jne	SHORT $LN13@file_fopen
	mov	ebx, DWORD PTR __imp___errno
	call	ebx
	cmp	DWORD PTR [eax], 2
	je	$LN6@file_fopen
	call	ebx
	cmp	DWORD PTR [eax], 9
	je	$LN6@file_fopen
$LN13@file_fopen:
; Line 166
	mov	eax, esi
; Line 167
	lea	esp, DWORD PTR [ebp-48]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@file_fopen:
; Line 166
	xor	eax, eax
; Line 167
	lea	esp, DWORD PTR [ebp-48]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_file_fopen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _file_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_file_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 222
	push	esi
; Line 223
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	jne	SHORT $LN2@file_free
; Line 224
	xor	eax, eax
	pop	esi
; Line 237
	ret	0
$LN2@file_free:
; Line 225
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN3@file_free
; Line 226
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN4@file_free
	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN4@file_free
; Line 227
	test	DWORD PTR [esi+20], 32768		; 00008000H
; Line 228
	push	eax
	je	SHORT $LN5@file_free
	call	DWORD PTR _OPENSSL_UplinkTable+40
	jmp	SHORT $LN8@file_free
$LN5@file_free:
; Line 230
	call	DWORD PTR __imp__fclose
$LN8@file_free:
	add	esp, 4
; Line 231
	mov	DWORD PTR [esi+32], 0
; Line 232
	mov	DWORD PTR [esi+20], 32768		; 00008000H
$LN4@file_free:
; Line 234
	mov	DWORD PTR [esi+12], 0
$LN3@file_free:
; Line 236
	mov	eax, 1
	pop	esi
; Line 237
	ret	0
_file_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _file_new
_TEXT	SEGMENT
_bi$ = 8						; size = 4
_file_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 214
	mov	eax, DWORD PTR _bi$[esp-4]
	mov	DWORD PTR [eax+12], 0
; Line 215
	mov	DWORD PTR [eax+28], 0
; Line 216
	mov	DWORD PTR [eax+32], 0
; Line 217
	mov	DWORD PTR [eax+20], 32768		; 00008000H
; Line 218
	mov	eax, 1
; Line 219
	ret	0
_file_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _file_ctrl
_TEXT	SEGMENT
_p$ = 8							; size = 4
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_num$ = 16						; size = 4
_ptr$ = 20						; size = 4
_file_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 287
	mov	eax, DWORD PTR _cmd$[esp-4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _b$[esp+4]
	dec	eax
	mov	ebx, 1
	push	edi
	mov	ecx, DWORD PTR [esi+32]
	cmp	eax, 132				; 00000084H
	ja	$LN41@file_ctrl
	movzx	eax, BYTE PTR $LN43@file_ctrl[eax]
	jmp	DWORD PTR $LN50@file_ctrl[eax*4]
$LN4@file_ctrl:
; Line 290
	test	DWORD PTR [esi+20], 32768		; 00008000H
; Line 291
	push	0
	push	DWORD PTR _num$[esp+12]
	push	ecx
	je	SHORT $LN5@file_ctrl
	call	DWORD PTR _OPENSSL_UplinkTable+48
	add	esp, 12					; 0000000cH
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN5@file_ctrl:
; Line 293
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN7@file_ctrl:
; Line 296
	test	DWORD PTR [esi+20], 32768		; 00008000H
; Line 297
	push	ecx
	je	SHORT $LN8@file_ctrl
	call	DWORD PTR _OPENSSL_UplinkTable+36
	add	esp, 4
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN8@file_ctrl:
; Line 299
	call	DWORD PTR __imp__feof
	add	esp, 4
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN10@file_ctrl:
; Line 303
	test	DWORD PTR [esi+20], 32768		; 00008000H
; Line 304
	push	ecx
	je	SHORT $LN11@file_ctrl
	call	DWORD PTR _OPENSSL_UplinkTable+52
	add	esp, 4
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN11@file_ctrl:
; Line 306
	call	DWORD PTR __imp__ftell
	add	esp, 4
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN13@file_ctrl:
; Line 309
	push	esi
	call	_file_free
; Line 310
	mov	eax, DWORD PTR _num$[esp+12]
; Line 311
	mov	edi, DWORD PTR _ptr$[esp+12]
	and	eax, 1
; Line 319
	push	0
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+12], ebx
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 8
	cmp	edi, eax
	jb	SHORT $LN14@file_ctrl
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	add	eax, 12					; 0000000cH
	add	esp, 4
	cmp	edi, eax
	jae	SHORT $LN14@file_ctrl
; Line 321
	push	32768					; 00008000H
	push	esi
	call	_BIO_clear_flags
	add	esp, 8
$LN14@file_ctrl:
; Line 325
	test	DWORD PTR [esi+20], 32768		; 00008000H
	je	SHORT $LN15@file_ctrl
; Line 326
	mov	eax, DWORD PTR _num$[esp+8]
	and	al, 16					; 00000010H
	neg	al
	sbb	al, al
	and	al, 18					; 00000012H
	add	al, 98					; 00000062H
	movzx	eax, al
	push	eax
	push	DWORD PTR [esi+32]
	call	DWORD PTR _OPENSSL_UplinkTable+32
	add	esp, 8
; Line 440
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN15@file_ctrl:
; Line 331
	push	edi
	call	DWORD PTR __imp___fileno
	add	esp, 4
; Line 332
	test	BYTE PTR _num$[esp+8], 16		; 00000010H
	je	SHORT $LN17@file_ctrl
; Line 333
	push	16384					; 00004000H
	push	eax
	call	DWORD PTR __imp___setmode
	add	esp, 8
; Line 440
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN17@file_ctrl:
; Line 335
	push	32768					; 00008000H
	push	eax
	call	DWORD PTR __imp___setmode
	add	esp, 8
; Line 440
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN19@file_ctrl:
; Line 366
	push	esi
	call	_file_free
; Line 367
	mov	ecx, DWORD PTR _num$[esp+12]
	add	esp, 4
	mov	eax, ecx
	and	eax, 1
	mov	DWORD PTR [esi+16], eax
; Line 368
	test	cl, 8
	je	SHORT $LN20@file_ctrl
; Line 370
	lea	eax, DWORD PTR _p$[esp+8]
	push	4
	test	cl, 2
	je	SHORT $LN22@file_ctrl
	push	OFFSET ??_C@_02DPNLHKJD@a?$CL?$AA@
	jmp	SHORT $LN46@file_ctrl
$LN22@file_ctrl:
; Line 372
	push	OFFSET ??_C@_01MCMALHOG@a?$AA@
; Line 373
	jmp	SHORT $LN46@file_ctrl
$LN20@file_ctrl:
	mov	eax, ecx
	and	eax, 6
	cmp	al, 6
	jne	SHORT $LN24@file_ctrl
; Line 374
	push	4
	push	OFFSET ??_C@_02CBLLGHLK@r?$CL?$AA@
	jmp	SHORT $LN47@file_ctrl
$LN24@file_ctrl:
; Line 375
	test	cl, 4
	je	SHORT $LN26@file_ctrl
; Line 376
	push	4
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	jmp	SHORT $LN47@file_ctrl
$LN26@file_ctrl:
; Line 377
	test	cl, 2
	je	$LN28@file_ctrl
; Line 378
	push	4
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
$LN47@file_ctrl:
	lea	eax, DWORD PTR _p$[esp+16]
$LN46@file_ctrl:
	push	eax
	call	_BUF_strlcpy
; Line 386
	lea	edi, DWORD PTR _p$[esp+20]
	add	esp, 12					; 0000000cH
	dec	edi
	test	BYTE PTR _num$[esp+8], 16		; 00000010H
	jne	SHORT $LL45@file_ctrl
$LL44@file_ctrl:
	mov	al, BYTE PTR [edi+1]
	lea	edi, DWORD PTR [edi+1]
	test	al, al
	jne	SHORT $LL44@file_ctrl
	mov	ax, WORD PTR ??_C@_01OJONOECF@b?$AA@
	jmp	SHORT $LN48@file_ctrl
	npad	6
$LL45@file_ctrl:
; Line 388
	mov	al, BYTE PTR [edi+1]
	lea	edi, DWORD PTR [edi+1]
	test	al, al
	jne	SHORT $LL45@file_ctrl
	mov	ax, WORD PTR ??_C@_01PFHFFBPC@t?$AA@
$LN48@file_ctrl:
	mov	WORD PTR [edi], ax
; Line 396
	lea	eax, DWORD PTR _p$[esp+8]
	mov	edi, DWORD PTR _ptr$[esp+8]
	push	eax
	push	edi
	call	_file_fopen
	add	esp, 8
; Line 397
	test	eax, eax
	jne	SHORT $LN32@file_ctrl
; Line 398
	push	398					; 0000018eH
	push	OFFSET ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	1
	push	2
	call	_ERR_put_error
; Line 399
	push	OFFSET ??_C@_02HJPKOJGD@?8?$CJ?$AA@
	lea	eax, DWORD PTR _p$[esp+32]
	push	eax
	push	OFFSET ??_C@_03IMMLKIF@?8?0?8?$AA@
	push	edi
	push	OFFSET ??_C@_07JMDFGFFH@fopen?$CI?8?$AA@
	push	5
	call	_ERR_add_error_data
; Line 400
	push	400					; 00000190H
	push	OFFSET ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
	push	2
	push	116					; 00000074H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 64					; 00000040H
$LN41@file_ctrl:
; Line 437
	xor	ebx, ebx
$LN2@file_ctrl:
	pop	edi
	pop	esi
; Line 440
	mov	eax, ebx
	pop	ebx
; Line 441
	ret	0
$LN32@file_ctrl:
; Line 406
	push	32768					; 00008000H
	push	esi
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+12], ebx
	call	_BIO_clear_flags
	add	esp, 8
; Line 440
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN28@file_ctrl:
; Line 380
	push	380					; 0000017cH
	push	OFFSET ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
	push	101					; 00000065H
	push	116					; 00000074H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 437
	xor	ebx, ebx
; Line 440
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN33@file_ctrl:
; Line 411
	mov	eax, DWORD PTR _ptr$[esp+8]
	test	eax, eax
	je	SHORT $LN2@file_ctrl
; Line 413
	pop	edi
	mov	DWORD PTR [eax], ecx
; Line 440
	mov	eax, ebx
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN35@file_ctrl:
; Line 417
	mov	ebx, DWORD PTR [esi+16]
; Line 440
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN36@file_ctrl:
; Line 420
	mov	eax, DWORD PTR _num$[esp+8]
	pop	edi
	mov	DWORD PTR [esi+16], eax
; Line 440
	mov	eax, ebx
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN37@file_ctrl:
; Line 423
	test	DWORD PTR [esi+20], 32768		; 00008000H
; Line 424
	push	ecx
	je	SHORT $LN38@file_ctrl
	call	DWORD PTR _OPENSSL_UplinkTable+56
	add	esp, 4
; Line 440
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
$LN38@file_ctrl:
; Line 426
	call	DWORD PTR __imp__fflush
	add	esp, 4
; Line 440
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 441
	ret	0
	npad	1
$LN50@file_ctrl:
	DD	$LN4@file_ctrl
	DD	$LN7@file_ctrl
	DD	$LN10@file_ctrl
	DD	$LN35@file_ctrl
	DD	$LN36@file_ctrl
	DD	$LN37@file_ctrl
	DD	$LN2@file_ctrl
	DD	$LN13@file_ctrl
	DD	$LN33@file_ctrl
	DD	$LN19@file_ctrl
	DD	$LN41@file_ctrl
$LN43@file_ctrl:
	DB	0
	DB	1
	DB	2
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	3
	DB	4
	DB	10					; 0000000aH
	DB	5
	DB	6
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	7
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	0
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	2
_file_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _file_gets
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_buf$ = 12						; size = 4
_size$ = 16						; size = 4
_file_gets PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 448
	mov	ecx, DWORD PTR _bp$[esp-4]
	push	esi
	mov	esi, DWORD PTR _buf$[esp]
	mov	BYTE PTR [esi], 0
	test	DWORD PTR [ecx+20], 32768		; 00008000H
; Line 449
	push	DWORD PTR [ecx+32]
	push	DWORD PTR _size$[esp+4]
	push	esi
	je	SHORT $LN2@file_gets
	call	DWORD PTR _OPENSSL_UplinkTable+20
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@file_gets
$LN11@file_gets:
; Line 458
	xor	eax, eax
$err$13:
	pop	esi
; Line 459
	ret	0
$LN2@file_gets:
; Line 452
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN11@file_gets
$LN5@file_gets:
; Line 455
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN11@file_gets
; Line 456
	lea	eax, DWORD PTR [esi+1]
$LL8@file_gets:
	mov	cl, BYTE PTR [esi]
	inc	esi
	test	cl, cl
	jne	SHORT $LL8@file_gets
	sub	esi, eax
; Line 458
	mov	eax, esi
	pop	esi
; Line 459
	ret	0
_file_gets ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _file_puts
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_str$ = 12						; size = 4
_file_puts PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 465
	mov	ecx, DWORD PTR _str$[esp-4]
	push	esi
	mov	esi, ecx
	lea	edx, DWORD PTR [esi+1]
	npad	6
$LL9@file_puts:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL9@file_puts
; Line 263
	mov	eax, DWORD PTR _bp$[esp]
; Line 465
	sub	esi, edx
; Line 263
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN10@file_puts
	test	ecx, ecx
	je	SHORT $LN10@file_puts
; Line 264
	test	DWORD PTR [eax+20], 32768		; 00008000H
; Line 265
	push	DWORD PTR [eax+32]
	push	1
	push	esi
	push	ecx
	je	SHORT $LN5@file_puts
	call	DWORD PTR _OPENSSL_UplinkTable+28
; Line 267
	add	esp, 16					; 00000010H
; Line 268
	test	eax, eax
	cmovne	eax, esi
	pop	esi
; Line 468
	ret	0
$LN5@file_puts:
; Line 267
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
; Line 268
	test	eax, eax
	cmovne	eax, esi
	pop	esi
; Line 468
	ret	0
$LN10@file_puts:
; Line 467
	xor	eax, eax
	pop	esi
; Line 468
	ret	0
_file_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _file_read
_TEXT	SEGMENT
_b$ = 8							; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_file_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 240
	push	esi
; Line 243
	mov	esi, DWORD PTR _b$[esp]
	cmp	DWORD PTR [esi+12], 0
	je	$LN11@file_read
	mov	eax, DWORD PTR _out$[esp]
	test	eax, eax
	je	$LN11@file_read
; Line 244
	test	DWORD PTR [esi+20], 32768		; 00008000H
	push	edi
; Line 245
	push	DWORD PTR [esi+32]
	push	DWORD PTR _outl$[esp+8]
	push	1
	push	eax
	je	SHORT $LN3@file_read
	call	DWORD PTR _OPENSSL_UplinkTable+24
	jmp	SHORT $LN13@file_read
$LN3@file_read:
; Line 247
	call	DWORD PTR __imp__fread
$LN13@file_read:
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 249
	test	edi, edi
	jne	SHORT $LN7@file_read
	test	DWORD PTR [esi+20], 32768		; 00008000H
	je	SHORT $LN7@file_read
	push	DWORD PTR [esi+32]
	call	DWORD PTR _OPENSSL_UplinkTable+60
	jmp	SHORT $LN14@file_read
$LN7@file_read:
	push	DWORD PTR [esi+32]
	call	DWORD PTR __imp__ferror
$LN14@file_read:
	add	esp, 4
	test	eax, eax
	je	SHORT $LN9@file_read
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	11					; 0000000bH
	push	2
	call	_ERR_put_error
; Line 252
	push	252					; 000000fcH
	push	OFFSET ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
	push	2
	push	130					; 00000082H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 40					; 00000028H
; Line 256
	or	eax, -1
	pop	edi
	pop	esi
; Line 257
	ret	0
$LN9@file_read:
; Line 256
	mov	eax, edi
	pop	edi
	pop	esi
; Line 257
	ret	0
$LN11@file_read:
; Line 256
	xor	eax, eax
	pop	esi
; Line 257
	ret	0
_file_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _file_write
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_file_write PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 263
	mov	eax, DWORD PTR _b$[esp-4]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN7@file_write
	mov	ecx, DWORD PTR _in$[esp-4]
	test	ecx, ecx
	je	SHORT $LN7@file_write
; Line 264
	test	DWORD PTR [eax+20], 32768		; 00008000H
	push	esi
; Line 265
	push	DWORD PTR [eax+32]
	mov	esi, DWORD PTR _inl$[esp+4]
	push	1
	push	esi
	push	ecx
	je	SHORT $LN3@file_write
	call	DWORD PTR _OPENSSL_UplinkTable+28
; Line 267
	add	esp, 16					; 00000010H
; Line 268
	test	eax, eax
	cmovne	eax, esi
	pop	esi
; Line 278
	ret	0
$LN3@file_write:
; Line 267
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
; Line 268
	test	eax, eax
	cmovne	eax, esi
	pop	esi
; Line 278
	ret	0
$LN7@file_write:
; Line 277
	xor	eax, eax
; Line 278
	ret	0
_file_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_fp
_TEXT	SEGMENT
_stream$ = 8						; size = 4
_close_flag$ = 12					; size = 4
_BIO_new_fp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 195
	push	esi
; Line 198
	push	OFFSET _methods_filep
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN2@BIO_new_fp
	pop	esi
; Line 205
	ret	0
$LN2@BIO_new_fp:
; Line 201
	push	32768					; 00008000H
	push	esi
	call	_BIO_set_flags
; Line 203
	push	DWORD PTR _stream$[esp+8]
	push	DWORD PTR _close_flag$[esp+12]
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 24					; 00000018H
; Line 204
	mov	eax, esi
	pop	esi
; Line 205
	ret	0
_BIO_new_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_file
_TEXT	SEGMENT
_filename$ = 8						; size = 4
_mode$ = 12						; size = 4
_BIO_new_file PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 170
	push	esi
; Line 172
	mov	esi, DWORD PTR _mode$[esp]
	push	edi
	push	esi
	push	DWORD PTR _filename$[esp+8]
	call	_file_fopen
	mov	edi, eax
	add	esp, 8
; Line 174
	test	edi, edi
	jne	$LN2@BIO_new_fi
; Line 175
	push	175					; 000000afH
	push	OFFSET ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	1
	push	2
	call	_ERR_put_error
; Line 176
	push	OFFSET ??_C@_02HJPKOJGD@?8?$CJ?$AA@
	push	esi
	push	OFFSET ??_C@_03IMMLKIF@?8?0?8?$AA@
	push	DWORD PTR _filename$[esp+36]
	push	OFFSET ??_C@_07JMDFGFFH@fopen?$CI?8?$AA@
	push	5
	call	_ERR_add_error_data
	add	esp, 44					; 0000002cH
; Line 177
	call	DWORD PTR __imp___errno
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN3@BIO_new_fi
; Line 178
	push	178					; 000000b2H
	push	OFFSET ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
	push	128					; 00000080H
; Line 180
	push	109					; 0000006dH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 181
	xor	eax, eax
	pop	edi
	pop	esi
; Line 192
	ret	0
$LN3@BIO_new_fi:
; Line 180
	push	180					; 000000b4H
	push	OFFSET ??_C@_0BI@EHMCOOOG@?4?2crypto?2bio?2bss_file?4c?$AA@
	push	2
	push	109					; 0000006dH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 181
	xor	eax, eax
	pop	edi
	pop	esi
; Line 192
	ret	0
$LN2@BIO_new_fi:
; Line 183
	push	OFFSET _methods_filep
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN5@BIO_new_fi
; Line 184
	push	edi
	call	DWORD PTR __imp__fclose
	add	esp, 4
; Line 185
	xor	eax, eax
	pop	edi
	pop	esi
; Line 192
	ret	0
$LN5@BIO_new_fi:
; Line 188
	push	32768					; 00008000H
	push	esi
	call	_BIO_clear_flags
; Line 190
	push	edi
	push	1
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 24					; 00000018H
; Line 191
	mov	eax, esi
	pop	edi
	pop	esi
; Line 192
	ret	0
_BIO_new_file ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_s_file
_TEXT	SEGMENT
_BIO_s_file PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_file.c
; Line 209
	mov	eax, OFFSET _methods_filep
; Line 210
	ret	0
_BIO_s_file ENDP
_TEXT	ENDS
END

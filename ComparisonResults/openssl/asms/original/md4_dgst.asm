; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\md4\md4_dgst.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_MD4_version
CONST	SEGMENT
_MD4_version DB	'MD4 part of OpenSSL 1.0.2h  3 May 2016', 00H
CONST	ENDS
PUBLIC	_MD4_Init
PUBLIC	_MD4_Update
PUBLIC	_MD4_Final
PUBLIC	_MD4_Transform
PUBLIC	_md4_block_data_order
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtpy
;	COMDAT _md4_block_data_order
_TEXT	SEGMENT
_XX8$1$ = -84						; size = 4
_XX4$1$ = -80						; size = 4
_XX12$1$ = -76						; size = 4
_XX10$1$ = -72						; size = 4
_XX6$1$ = -68						; size = 4
_XX14$1$ = -64						; size = 4
_XX9$1$ = -60						; size = 4
_XX5$1$ = -56						; size = 4
_XX13$1$ = -52						; size = 4
_XX11$1$ = -48						; size = 4
_D$13$ = -48						; size = 4
_XX7$1$ = -44						; size = 4
_C$13$ = -44						; size = 4
_D$4$ = -40						; size = 4
_C$7$ = -40						; size = 4
_A$6$ = -40						; size = 4
_A$3$ = -40						; size = 4
_XX0$1$ = -36						; size = 4
_XX2$1$ = -32						; size = 4
_XX1$1$ = -28						; size = 4
_XX3$1$ = -24						; size = 4
_A$13$ = -24						; size = 4
tv1283 = -20						; size = 4
tv1284 = -16						; size = 4
tv1285 = -12						; size = 4
_B$7$ = -8						; size = 4
_B$5$ = -8						; size = 4
_B$4$ = -8						; size = 4
_A$7$ = -8						; size = 4
_D$11$ = -4						; size = 4
_A$8$ = -4						; size = 4
_c$ = 8							; size = 4
_l$16$ = 12						; size = 4
_D$3$ = 12						; size = 4
_B$13$ = 12						; size = 4
_data_$ = 12						; size = 4
_num$ = 16						; size = 4
_md4_block_data_order PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\md4\md4_dgst.c
; Line 90
	mov	eax, 84					; 00000054H
	call	__chkstk
; Line 103
	mov	ecx, DWORD PTR _c$[esp+80]
	mov	eax, DWORD PTR _data_$[esp+80]
	push	esi
	push	edi
	mov	edx, DWORD PTR [ecx]
; Line 104
	mov	edi, DWORD PTR [ecx+4]
; Line 105
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR _A$13$[esp+92], edx
; Line 106
	mov	edx, DWORD PTR [ecx+12]
; Line 108
	mov	ecx, DWORD PTR _num$[esp+88]
	mov	DWORD PTR _B$13$[esp+88], edi
	mov	DWORD PTR _C$13$[esp+92], esi
	mov	DWORD PTR _D$13$[esp+92], edx
	test	ecx, ecx
	je	$LN7@md4_block_
	push	ebx
	mov	DWORD PTR tv1283[esp+96], edi
	mov	DWORD PTR tv1284[esp+96], esi
	mov	DWORD PTR tv1285[esp+96], edx
	push	ebp
	npad	7
$LL2@md4_block_:
	dec	ecx
; Line 109
	movzx	ebx, BYTE PTR [eax]
	mov	DWORD PTR _num$[esp+96], ecx
; Line 114
	xor	edx, esi
	movzx	ecx, BYTE PTR [eax+1]
	and	edx, edi
	shl	ecx, 8
; Line 117
	xor	esi, edi
	or	ebx, ecx
	movzx	ebp, BYTE PTR [eax+4]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
	xor	edx, DWORD PTR _D$13$[esp+100]
	movzx	ecx, BYTE PTR [eax+3]
	shl	ecx, 24					; 00000018H
	or	ebx, ecx
	movzx	ecx, BYTE PTR [eax+5]
	shl	ecx, 8
	add	edx, ebx
	or	ebp, ecx
	add	edx, DWORD PTR _A$13$[esp+100]
	movzx	ecx, BYTE PTR [eax+6]
	shl	ecx, 16					; 00000010H
	or	ebp, ecx
	mov	DWORD PTR _XX0$1$[esp+100], ebx
	movzx	ecx, BYTE PTR [eax+7]
	movzx	ebx, BYTE PTR [eax+8]
	shl	ecx, 24					; 00000018H
	or	ebp, ecx
	rol	edx, 3
	movzx	ecx, BYTE PTR [eax+9]
	and	esi, edx
	xor	esi, DWORD PTR _C$13$[esp+100]
; Line 120
	xor	edi, edx
	shl	ecx, 8
	add	esi, ebp
	or	ebx, ecx
	add	esi, DWORD PTR _D$13$[esp+100]
	movzx	ecx, BYTE PTR [eax+10]
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
	mov	DWORD PTR _XX1$1$[esp+100], ebp
	movzx	ecx, BYTE PTR [eax+11]
	movzx	ebp, BYTE PTR [eax+12]
	shl	ecx, 24					; 00000018H
	or	ebx, ecx
	rol	esi, 7
	movzx	ecx, BYTE PTR [eax+13]
	and	edi, esi
	xor	edi, DWORD PTR _B$13$[esp+96]
	shl	ecx, 8
	add	edi, ebx
	or	ebp, ecx
	add	edi, DWORD PTR _C$13$[esp+100]
	movzx	ecx, BYTE PTR [eax+14]
	shl	ecx, 16					; 00000010H
	or	ebp, ecx
	mov	DWORD PTR _XX2$1$[esp+100], ebx
	movzx	ecx, BYTE PTR [eax+15]
; Line 121
	movzx	ebx, BYTE PTR [eax+16]
	shl	ecx, 24					; 00000018H
	or	ebp, ecx
	rol	edi, 11					; 0000000bH
	movzx	ecx, BYTE PTR [eax+17]
	shl	ecx, 8
	or	ebx, ecx
	mov	DWORD PTR _XX3$1$[esp+100], ebp
	movzx	ecx, BYTE PTR [eax+18]
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
	movzx	ecx, BYTE PTR [eax+19]
	shl	ecx, 24					; 00000018H
	or	ebx, ecx
	mov	DWORD PTR _XX4$1$[esp+100], ebx
; Line 123
	mov	ebx, esi
	xor	ebx, edx
	and	ebx, edi
	xor	ebx, edx
	add	ebx, ebp
	add	ebx, DWORD PTR _B$13$[esp+96]
; Line 124
	movzx	ecx, BYTE PTR [eax+21]
	movzx	ebp, BYTE PTR [eax+20]
	shl	ecx, 8
	or	ebp, ecx
	rol	ebx, 19					; 00000013H
	movzx	ecx, BYTE PTR [eax+22]
	shl	ecx, 16					; 00000010H
	or	ebp, ecx
	movzx	ecx, BYTE PTR [eax+23]
	shl	ecx, 24					; 00000018H
	or	ebp, ecx
; Line 127
	movzx	ecx, BYTE PTR [eax+25]
	shl	ecx, 8
	mov	DWORD PTR _XX5$1$[esp+100], ebp
	mov	ebp, esi
	xor	ebp, edi
	and	ebp, ebx
	xor	ebp, esi
	add	ebp, DWORD PTR _XX4$1$[esp+100]
	add	ebp, edx
	movzx	edx, BYTE PTR [eax+24]
	or	edx, ecx
	rol	ebp, 3
	movzx	ecx, BYTE PTR [eax+26]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	movzx	ecx, BYTE PTR [eax+27]
	shl	ecx, 24					; 00000018H
	or	edx, ecx
; Line 130
	movzx	ecx, BYTE PTR [eax+29]
	mov	DWORD PTR _XX6$1$[esp+100], edx
	mov	edx, edi
	xor	edx, ebx
	shl	ecx, 8
	and	edx, ebp
	xor	edx, edi
	add	edx, DWORD PTR _XX5$1$[esp+100]
	add	edx, esi
	movzx	esi, BYTE PTR [eax+28]
	or	esi, ecx
	rol	edx, 7
	movzx	ecx, BYTE PTR [eax+30]
	shl	ecx, 16					; 00000010H
	or	esi, ecx
	movzx	ecx, BYTE PTR [eax+31]
	shl	ecx, 24					; 00000018H
	or	esi, ecx
; Line 133
	movzx	ecx, BYTE PTR [eax+33]
	mov	DWORD PTR _XX7$1$[esp+100], esi
	mov	esi, ebx
	xor	esi, ebp
	shl	ecx, 8
	and	esi, edx
	xor	esi, ebx
	add	esi, DWORD PTR _XX6$1$[esp+100]
	add	esi, edi
	movzx	edi, BYTE PTR [eax+32]
	or	edi, ecx
	rol	esi, 11					; 0000000bH
	movzx	ecx, BYTE PTR [eax+34]
	shl	ecx, 16					; 00000010H
	or	edi, ecx
	movzx	ecx, BYTE PTR [eax+35]
	shl	ecx, 24					; 00000018H
	or	edi, ecx
; Line 136
	movzx	ecx, BYTE PTR [eax+37]
	mov	DWORD PTR _XX8$1$[esp+100], edi
	mov	edi, edx
	xor	edi, ebp
	shl	ecx, 8
	and	edi, esi
	xor	edi, ebp
	add	edi, DWORD PTR _XX7$1$[esp+100]
	add	edi, ebx
	movzx	ebx, BYTE PTR [eax+36]
	or	ebx, ecx
	rol	edi, 19					; 00000013H
	movzx	ecx, BYTE PTR [eax+38]
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
	movzx	ecx, BYTE PTR [eax+39]
	shl	ecx, 24					; 00000018H
	or	ebx, ecx
; Line 139
	movzx	ecx, BYTE PTR [eax+41]
	shl	ecx, 8
	mov	DWORD PTR _XX9$1$[esp+100], ebx
	mov	ebx, edx
	xor	ebx, esi
	and	ebx, edi
	xor	ebx, edx
	add	ebx, DWORD PTR _XX8$1$[esp+100]
	add	ebx, ebp
	movzx	ebp, BYTE PTR [eax+40]
	or	ebp, ecx
	rol	ebx, 3
	movzx	ecx, BYTE PTR [eax+42]
	shl	ecx, 16					; 00000010H
	or	ebp, ecx
	mov	DWORD PTR _A$3$[esp+100], ebx
	movzx	ecx, BYTE PTR [eax+43]
	shl	ecx, 24					; 00000018H
	or	ebp, ecx
; Line 141
	mov	ecx, esi
	xor	ecx, edi
	mov	DWORD PTR _XX10$1$[esp+100], ebp
	and	ecx, ebx
; Line 144
	mov	ebp, DWORD PTR _A$3$[esp+100]
	xor	ecx, esi
	mov	ebx, edi
	add	ecx, DWORD PTR _XX9$1$[esp+100]
	xor	ebx, ebp
	add	ecx, edx
	movzx	edx, BYTE PTR [eax+44]
	rol	ecx, 7
	mov	DWORD PTR _D$3$[esp+96], ecx
	movzx	ecx, BYTE PTR [eax+45]
	shl	ecx, 8
	or	edx, ecx
	and	ebx, DWORD PTR _D$3$[esp+96]
	movzx	ecx, BYTE PTR [eax+46]
	xor	ebx, edi
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	add	ebx, DWORD PTR _XX10$1$[esp+100]
	movzx	ecx, BYTE PTR [eax+47]
	add	ebx, esi
; Line 147
	mov	esi, DWORD PTR _D$3$[esp+96]
	shl	ecx, 24					; 00000018H
	or	edx, ecx
	rol	ebx, 11					; 0000000bH
	movzx	ecx, BYTE PTR [eax+49]
	mov	DWORD PTR _XX11$1$[esp+100], edx
	movzx	edx, BYTE PTR [eax+48]
	shl	ecx, 8
	or	edx, ecx
	movzx	ecx, BYTE PTR [eax+50]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	movzx	ecx, BYTE PTR [eax+51]
	shl	ecx, 24					; 00000018H
	or	edx, ecx
; Line 148
	movzx	ecx, BYTE PTR [eax+53]
	mov	DWORD PTR _XX12$1$[esp+100], edx
	mov	edx, esi
	xor	edx, ebp
	shl	ecx, 8
	and	edx, ebx
	xor	edx, ebp
	add	edx, DWORD PTR _XX11$1$[esp+100]
	add	edx, edi
	movzx	edi, BYTE PTR [eax+52]
	or	edi, ecx
	rol	edx, 19					; 00000013H
	movzx	ecx, BYTE PTR [eax+54]
	shl	ecx, 16					; 00000010H
	or	edi, ecx
	movzx	ecx, BYTE PTR [eax+55]
	shl	ecx, 24					; 00000018H
	or	edi, ecx
	mov	DWORD PTR _XX13$1$[esp+100], edi
; Line 150
	mov	edi, esi
	xor	edi, ebx
; Line 151
	movzx	ecx, BYTE PTR [eax+57]
; Line 154
	lea	eax, DWORD PTR [eax+64]
	and	edi, edx
	shl	ecx, 8
	xor	edi, esi
	mov	esi, ebx
	add	edi, DWORD PTR _XX12$1$[esp+100]
	xor	esi, edx
	add	edi, ebp
	movzx	ebp, BYTE PTR [eax-8]
	or	ebp, ecx
	rol	edi, 3
	movzx	ecx, BYTE PTR [eax-6]
	and	esi, edi
	shl	ecx, 16					; 00000010H
	xor	esi, ebx
	or	ebp, ecx
	add	esi, DWORD PTR _XX13$1$[esp+100]
	movzx	ecx, BYTE PTR [eax-5]
	add	esi, DWORD PTR _D$3$[esp+96]
	shl	ecx, 24					; 00000018H
	or	ebp, ecx
	rol	esi, 7
	movzx	ecx, BYTE PTR [eax-3]
	mov	DWORD PTR _XX14$1$[esp+100], ebp
	movzx	ebp, BYTE PTR [eax-4]
	shl	ecx, 8
	or	ebp, ecx
	mov	DWORD PTR _D$4$[esp+100], esi
	movzx	ecx, BYTE PTR [eax-2]
	shl	ecx, 16					; 00000010H
	or	ebp, ecx
	movzx	ecx, BYTE PTR [eax-1]
	shl	ecx, 24					; 00000018H
	or	ebp, ecx
	mov	DWORD PTR _l$16$[esp+96], ebp
; Line 156
	mov	ebp, edx
	xor	ebp, edi
	and	ebp, esi
	xor	ebp, edx
	add	ebp, DWORD PTR _XX14$1$[esp+100]
	add	ebp, ebx
; Line 157
	mov	ebx, esi
	xor	ebx, edi
	rol	ebp, 11					; 0000000bH
	and	ebx, ebp
; Line 159
	mov	ecx, ebp
	xor	ebx, edi
	add	ebx, DWORD PTR _l$16$[esp+96]
	add	ebx, edx
	mov	edx, ebp
	rol	ebx, 19					; 00000013H
	or	edx, ebx
	mov	DWORD PTR _B$4$[esp+100], ebx
	and	edx, esi
	and	ecx, ebx
	or	edx, ecx
; Line 160
	mov	esi, ebx
	add	edx, 1518500249				; 5a827999H
	add	edx, DWORD PTR _XX0$1$[esp+100]
	add	edi, edx
	mov	edx, ebx
	mov	ebx, DWORD PTR _D$4$[esp+100]
	rol	edi, 3
	add	ebx, 1518500249				; 5a827999H
	or	esi, edi
	and	edx, edi
	mov	ecx, esi
	and	ecx, ebp
	or	ecx, edx
	add	ecx, DWORD PTR _XX4$1$[esp+100]
	add	ebx, ecx
	rol	ebx, 5
; Line 161
	and	esi, ebx
	or	esi, edx
	add	esi, 1518500249				; 5a827999H
	add	esi, DWORD PTR _XX8$1$[esp+100]
	add	ebp, esi
	rol	ebp, 9
; Line 162
	mov	edx, ebp
	or	edx, edi
	mov	esi, DWORD PTR _B$4$[esp+100]
	and	edx, ebx
	add	esi, 1518500249				; 5a827999H
	mov	ecx, ebp
	and	ecx, edi
	or	edx, ecx
; Line 163
	mov	ecx, ebp
	add	edx, DWORD PTR _XX12$1$[esp+100]
	add	esi, edx
	mov	edx, ebp
	rol	esi, 13					; 0000000dH
	and	ecx, esi
	mov	DWORD PTR _B$5$[esp+100], esi
	or	edx, esi
	and	edx, ebx
	or	edx, ecx
	lea	ecx, DWORD PTR [edi+1518500249]
	add	edx, DWORD PTR _XX1$1$[esp+100]
	add	ecx, edx
; Line 164
	mov	edi, DWORD PTR _B$5$[esp+100]
	rol	ecx, 3
	mov	edx, edi
	and	edx, ecx
	mov	DWORD PTR _A$6$[esp+100], ecx
	or	esi, ecx
; Line 166
	add	edi, 1518500249				; 5a827999H
	mov	ecx, esi
	and	ecx, ebp
	or	ecx, edx
	add	ecx, 1518500249				; 5a827999H
	add	ecx, DWORD PTR _XX5$1$[esp+100]
	add	ebx, ecx
	rol	ebx, 5
	and	esi, ebx
	or	esi, edx
	add	esi, 1518500249				; 5a827999H
	add	esi, DWORD PTR _XX9$1$[esp+100]
	add	ebp, esi
	mov	esi, DWORD PTR _A$6$[esp+100]
	rol	ebp, 9
	mov	edx, ebp
	mov	ecx, ebp
	or	edx, esi
	and	ecx, esi
	and	edx, ebx
	or	edx, ecx
; Line 167
	mov	ecx, ebp
	add	edx, DWORD PTR _XX13$1$[esp+100]
	add	edi, edx
	mov	edx, ebp
	rol	edi, 13					; 0000000dH
	and	ecx, edi
	or	edx, edi
	and	edx, ebx
	or	edx, ecx
	lea	ecx, DWORD PTR [esi+1518500249]
	add	edx, DWORD PTR _XX2$1$[esp+100]
; Line 168
	mov	esi, edi
	add	ecx, edx
	mov	edx, edi
	rol	ecx, 3
	or	esi, ecx
	mov	DWORD PTR _A$7$[esp+100], ecx
	and	edx, ecx
	mov	ecx, esi
	and	ecx, ebp
	or	ecx, edx
	add	ecx, 1518500249				; 5a827999H
	add	ecx, DWORD PTR _XX6$1$[esp+100]
	add	ebx, ecx
	rol	ebx, 5
; Line 169
	and	esi, ebx
	or	esi, edx
	add	esi, 1518500249				; 5a827999H
	add	esi, DWORD PTR _XX10$1$[esp+100]
	add	ebp, esi
; Line 170
	mov	esi, DWORD PTR _A$7$[esp+100]
	rol	ebp, 9
	mov	edx, ebp
	mov	DWORD PTR _C$7$[esp+100], ebp
	or	edx, esi
	and	edx, ebx
	mov	ecx, ebp
	and	ecx, esi
	or	edx, ecx
; Line 171
	mov	ecx, ebp
	add	edx, 1518500249				; 5a827999H
	add	edx, DWORD PTR _XX14$1$[esp+100]
	add	edi, edx
	mov	edx, ebp
	rol	edi, 13					; 0000000dH
	lea	ebp, DWORD PTR [esi+1518500249]
	and	ecx, edi
	mov	DWORD PTR _B$7$[esp+100], edi
	or	edx, edi
; Line 172
	mov	esi, edi
	and	edx, ebx
	or	edx, ecx
	add	edx, DWORD PTR _XX3$1$[esp+100]
	add	ebp, edx
	mov	edx, edi
	rol	ebp, 3
	lea	edi, DWORD PTR [ebx+1518500249]
; Line 173
	mov	ebx, DWORD PTR _C$7$[esp+100]
	or	esi, ebp
	and	edx, ebp
	mov	DWORD PTR _A$8$[esp+100], ebp
	mov	ecx, esi
	add	ebx, 1518500249				; 5a827999H
	and	ecx, DWORD PTR _C$7$[esp+100]
	or	ecx, edx
	add	ecx, DWORD PTR _XX7$1$[esp+100]
	add	edi, ecx
	rol	edi, 5
	and	esi, edi
	or	esi, edx
	add	esi, DWORD PTR _XX11$1$[esp+100]
	add	ebx, esi
; Line 176
	mov	esi, DWORD PTR _A$8$[esp+100]
	rol	ebx, 9
	add	esi, 1859775393				; 6ed9eba1H
	mov	edx, ebx
	mov	ecx, ebx
	and	ecx, ebp
	or	edx, ebp
	mov	ebp, DWORD PTR _B$7$[esp+100]
	and	edx, edi
	or	edx, ecx
	add	ebp, 1518500249				; 5a827999H
	add	edx, DWORD PTR _l$16$[esp+96]
	mov	ecx, edi
	xor	ecx, ebx
	add	ebp, edx
	rol	ebp, 13					; 0000000dH
	xor	ecx, ebp
	add	ecx, DWORD PTR _XX0$1$[esp+100]
	add	esi, ecx
; Line 177
	mov	ecx, ebx
	xor	ecx, ebp
	rol	esi, 3
	xor	ecx, esi
	add	ecx, 1859775393				; 6ed9eba1H
	add	ecx, DWORD PTR _XX8$1$[esp+100]
	add	edi, ecx
	rol	edi, 9
; Line 178
	mov	ecx, edi
; Line 179
	mov	edx, edi
	xor	ecx, ebp
	xor	ecx, esi
	add	ecx, 1859775393				; 6ed9eba1H
	add	ecx, DWORD PTR _XX4$1$[esp+100]
	add	ebx, ecx
	rol	ebx, 11					; 0000000bH
	xor	edx, ebx
	mov	ecx, edx
	xor	ecx, esi
	add	ecx, 1859775393				; 6ed9eba1H
	add	ecx, DWORD PTR _XX12$1$[esp+100]
	add	ebp, ecx
	rol	ebp, 15					; 0000000fH
; Line 180
	xor	edx, ebp
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, DWORD PTR _XX2$1$[esp+100]
; Line 181
	mov	ecx, ebx
	xor	ecx, ebp
	add	esi, edx
	rol	esi, 3
	xor	ecx, esi
	add	ecx, 1859775393				; 6ed9eba1H
	add	ecx, DWORD PTR _XX10$1$[esp+100]
	add	edi, ecx
	rol	edi, 9
; Line 182
	mov	ecx, edi
; Line 183
	mov	edx, edi
	xor	ecx, ebp
	xor	ecx, esi
	add	ecx, 1859775393				; 6ed9eba1H
	add	ecx, DWORD PTR _XX6$1$[esp+100]
	add	ebx, ecx
	rol	ebx, 11					; 0000000bH
	xor	edx, ebx
	mov	ecx, edx
	xor	ecx, esi
	add	ecx, 1859775393				; 6ed9eba1H
	add	ecx, DWORD PTR _XX14$1$[esp+100]
	add	ebp, ecx
; Line 185
	mov	ecx, ebx
	rol	ebp, 15					; 0000000fH
	xor	ecx, ebp
	xor	edx, ebp
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, DWORD PTR _XX1$1$[esp+100]
	add	esi, edx
	lea	edx, DWORD PTR [edi+1859775393]
	rol	esi, 3
; Line 187
	lea	edi, DWORD PTR [ebp+1859775393]
	xor	ecx, esi
	add	ecx, DWORD PTR _XX9$1$[esp+100]
	add	edx, ecx
	rol	edx, 9
	mov	ecx, edx
	mov	DWORD PTR _D$11$[esp+100], edx
	xor	ecx, ebp
; Line 189
	mov	ebp, DWORD PTR _D$11$[esp+100]
	xor	ecx, esi
	add	ebp, 1859775393				; 6ed9eba1H
	add	ecx, 1859775393				; 6ed9eba1H
	add	ecx, DWORD PTR _XX5$1$[esp+100]
	add	ebx, ecx
	rol	ebx, 11					; 0000000bH
	xor	edx, ebx
	mov	ecx, edx
	xor	ecx, esi
	add	ecx, DWORD PTR _XX13$1$[esp+100]
	add	edi, ecx
	mov	ecx, ebx
	rol	edi, 15					; 0000000fH
	xor	edx, edi
	xor	ecx, edi
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, DWORD PTR _XX3$1$[esp+100]
	add	esi, edx
; Line 190
	lea	edx, DWORD PTR [ebx+1859775393]
; Line 193
	mov	ebx, DWORD PTR _c$[esp+96]
	rol	esi, 3
	xor	ecx, esi
	add	ecx, DWORD PTR _XX11$1$[esp+100]
	add	ebp, ecx
	rol	ebp, 9
	mov	ecx, ebp
	xor	ecx, edi
	add	edi, 1859775393				; 6ed9eba1H
	xor	ecx, esi
	add	ecx, DWORD PTR _XX7$1$[esp+100]
	add	edx, ecx
	mov	ecx, ebp
	rol	edx, 11					; 0000000bH
	xor	ecx, edx
	xor	ecx, esi
	add	ecx, DWORD PTR _l$16$[esp+96]
	add	ecx, edi
	rol	ecx, 15					; 0000000fH
	add	DWORD PTR [ebx], esi
	mov	esi, DWORD PTR [ebx]
	mov	DWORD PTR _A$13$[esp+100], esi
; Line 194
	mov	esi, DWORD PTR tv1283[esp+100]
	add	esi, ecx
; Line 195
	mov	ecx, DWORD PTR tv1284[esp+100]
	add	ecx, edx
	mov	DWORD PTR tv1283[esp+100], esi
	mov	DWORD PTR tv1284[esp+100], ecx
	mov	edi, esi
	mov	DWORD PTR _C$13$[esp+100], ecx
	mov	DWORD PTR [ebx+8], ecx
	mov	DWORD PTR _B$13$[esp+96], esi
	mov	DWORD PTR [ebx+4], esi
	mov	esi, ecx
; Line 196
	mov	ecx, DWORD PTR tv1285[esp+100]
	add	ecx, ebp
	mov	DWORD PTR tv1285[esp+100], ecx
	mov	edx, ecx
	mov	DWORD PTR _D$13$[esp+100], ecx
	mov	DWORD PTR [ebx+12], ecx
	mov	ecx, DWORD PTR _num$[esp+96]
	test	ecx, ecx
	jne	$LL2@md4_block_
	pop	ebp
	pop	ebx
$LN7@md4_block_:
	pop	edi
	pop	esi
; Line 198
	add	esp, 84					; 00000054H
	ret	0
_md4_block_data_order ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _MD4_Transform
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data$ = 12						; size = 4
_MD4_Transform PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 358
	push	1
	push	DWORD PTR _data$[esp]
	push	DWORD PTR _c$[esp+4]
	call	_md4_block_data_order
	add	esp, 12					; 0000000cH
; Line 359
	ret	0
_MD4_Transform ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _MD4_Final
_TEXT	SEGMENT
_md$ = 8						; size = 4
_c$ = 12						; size = 4
_MD4_Final PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 362
	push	ebx
; Line 363
	mov	ebx, DWORD PTR _c$[esp]
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebx+24]
; Line 364
	mov	esi, DWORD PTR [ebx+88]
; Line 366
	mov	BYTE PTR [esi+edi], 128			; 00000080H
; Line 367
	inc	esi
; Line 369
	cmp	esi, 56					; 00000038H
	jbe	SHORT $LN5@MD4_Final
; Line 370
	mov	eax, 64					; 00000040H
	sub	eax, esi
	push	eax
	lea	eax, DWORD PTR [esi+edi]
	push	0
	push	eax
	call	_memset
; Line 372
	push	1
	push	edi
	push	ebx
	xor	esi, esi
	call	_md4_block_data_order
	add	esp, 24					; 00000018H
$LN5@MD4_Final:
; Line 374
	mov	eax, 56					; 00000038H
	sub	eax, esi
	push	eax
	lea	eax, DWORD PTR [esi+edi]
	push	0
	push	eax
	call	_memset
; Line 381
	movzx	eax, BYTE PTR [ebx+16]
	mov	BYTE PTR [edi+56], al
	movzx	eax, BYTE PTR [ebx+17]
	mov	BYTE PTR [edi+57], al
	movzx	eax, BYTE PTR [ebx+18]
	mov	BYTE PTR [edi+58], al
	movzx	eax, BYTE PTR [ebx+19]
	mov	BYTE PTR [edi+59], al
; Line 382
	movzx	eax, BYTE PTR [ebx+20]
	mov	BYTE PTR [edi+60], al
	movzx	eax, BYTE PTR [ebx+21]
	mov	BYTE PTR [edi+61], al
	movzx	eax, BYTE PTR [ebx+22]
; Line 385
	push	1
	mov	BYTE PTR [edi+62], al
	movzx	eax, BYTE PTR [ebx+23]
	push	edi
	push	ebx
	mov	BYTE PTR [edi+63], al
	call	_md4_block_data_order
; Line 387
	push	64					; 00000040H
	push	0
	push	edi
	mov	DWORD PTR [ebx+88], 0
	call	_memset
; Line 392
	mov	ecx, DWORD PTR [ebx]
	add	esp, 36					; 00000024H
	mov	edx, DWORD PTR _md$[esp+8]
	mov	eax, ecx
	shr	eax, 8
	pop	edi
	mov	BYTE PTR [edx], cl
	mov	BYTE PTR [edx+1], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+2], al
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [edx+3], cl
	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, ecx
	mov	BYTE PTR [edx+4], cl
	shr	eax, 8
	mov	BYTE PTR [edx+5], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+6], al
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [edx+7], cl
	mov	ecx, DWORD PTR [ebx+8]
	mov	eax, ecx
	mov	BYTE PTR [edx+8], cl
	shr	eax, 8
	mov	BYTE PTR [edx+9], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+10], al
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [edx+11], cl
	mov	ecx, DWORD PTR [ebx+12]
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+12], cl
	mov	BYTE PTR [edx+13], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+14], al
; Line 395
	mov	eax, 1
	shr	ecx, 24					; 00000018H
	pop	esi
	mov	BYTE PTR [edx+15], cl
	pop	ebx
; Line 396
	ret	0
_MD4_Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _MD4_Update
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data_$ = 12						; size = 4
_len$ = 16						; size = 4
_MD4_Update PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 301
	push	ebp
; Line 302
	mov	ebp, DWORD PTR _data_$[esp]
	push	edi
; Line 307
	mov	edi, DWORD PTR _len$[esp+4]
	test	edi, edi
	je	$LN13@MD4_Update
; Line 310
	push	ebx
	mov	ebx, DWORD PTR _c$[esp+8]
	mov	eax, DWORD PTR [ebx+16]
	lea	ecx, DWORD PTR [eax+edi*8]
; Line 315
	cmp	ecx, eax
	jae	SHORT $LN3@MD4_Update
; Line 316
	inc	DWORD PTR [ebx+20]
$LN3@MD4_Update:
; Line 317
	mov	eax, edi
; Line 319
	mov	DWORD PTR [ebx+16], ecx
; Line 321
	mov	ecx, DWORD PTR [ebx+88]
	shr	eax, 29					; 0000001dH
	add	DWORD PTR [ebx+20], eax
	push	esi
; Line 322
	test	ecx, ecx
	je	SHORT $LN6@MD4_Update
; Line 323
	lea	edx, DWORD PTR [ebx+24]
; Line 325
	cmp	edi, 64					; 00000040H
	jae	SHORT $LN7@MD4_Update
	lea	eax, DWORD PTR [ecx+edi]
	cmp	eax, 64					; 00000040H
	jae	SHORT $LN7@MD4_Update
; Line 334
	push	edi
	lea	eax, DWORD PTR [edx+ecx]
	push	ebp
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 353
	mov	eax, 1
	add	DWORD PTR [ebx+88], edi
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 354
	ret	0
$LN7@MD4_Update:
; Line 326
	mov	esi, 64					; 00000040H
	lea	eax, DWORD PTR [edx+ecx]
	sub	esi, ecx
	push	esi
	push	ebp
	push	eax
	call	_memcpy
; Line 327
	push	1
	lea	eax, DWORD PTR [ebx+24]
	push	eax
	push	ebx
	call	_md4_block_data_order
; Line 332
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+24]
	mov	DWORD PTR [ebx+88], 0
	push	0
	push	eax
	add	ebp, esi
	sub	edi, esi
	call	_memset
	add	esp, 36					; 00000024H
$LN6@MD4_Update:
; Line 340
	mov	esi, edi
	shr	esi, 6
; Line 341
	test	esi, esi
	je	SHORT $LN8@MD4_Update
; Line 342
	push	esi
	push	ebp
	push	ebx
	call	_md4_block_data_order
; Line 343
	shl	esi, 6
	add	esp, 12					; 0000000cH
; Line 344
	add	ebp, esi
; Line 345
	sub	edi, esi
$LN8@MD4_Update:
; Line 348
	test	edi, edi
	je	SHORT $LN9@MD4_Update
; Line 351
	push	edi
	lea	eax, DWORD PTR [ebx+24]
	mov	DWORD PTR [ebx+88], edi
	push	ebp
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN9@MD4_Update:
	pop	esi
	pop	ebx
$LN13@MD4_Update:
	pop	edi
; Line 353
	mov	eax, 1
	pop	ebp
; Line 354
	ret	0
_MD4_Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _MD4_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_MD4_Init PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\md4\md4_dgst.c
; Line 76
	push	esi
; Line 77
	mov	esi, DWORD PTR _c$[esp]
	push	92					; 0000005cH
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 78
	mov	DWORD PTR [esi], 1732584193		; 67452301H
; Line 79
	mov	DWORD PTR [esi+4], -271733879		; efcdab89H
; Line 82
	mov	eax, 1
	mov	DWORD PTR [esi+8], -1732584194		; 98badcfeH
	mov	DWORD PTR [esi+12], 271733878		; 10325476H
	pop	esi
; Line 83
	ret	0
_MD4_Init ENDP
_TEXT	ENDS
END

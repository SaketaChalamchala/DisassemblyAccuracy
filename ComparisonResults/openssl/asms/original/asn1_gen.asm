; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_04OOMJJNCF@UTF8?$AA@			; `string'
PUBLIC	??_C@_04PPJDIBFE@BOOL?$AA@			; `string'
PUBLIC	??_C@_07JDEDMABE@BOOLEAN?$AA@			; `string'
PUBLIC	??_C@_04HIBGFPH@NULL?$AA@			; `string'
PUBLIC	??_C@_03JMHEAPMO@INT?$AA@			; `string'
PUBLIC	??_C@_07EHCIHKNF@INTEGER?$AA@			; `string'
PUBLIC	??_C@_04PNKFCNMG@ENUM?$AA@			; `string'
PUBLIC	??_C@_0L@KNIEMAKM@ENUMERATED?$AA@		; `string'
PUBLIC	??_C@_03PGJCFEMG@OID?$AA@			; `string'
PUBLIC	??_C@_06IAMCMNFI@OBJECT?$AA@			; `string'
PUBLIC	??_C@_07HIOLDDN@UTCTIME?$AA@			; `string'
PUBLIC	??_C@_03JCIJEFNJ@UTC?$AA@			; `string'
PUBLIC	??_C@_0BA@LKNBIJBB@GENERALIZEDTIME?$AA@		; `string'
PUBLIC	??_C@_07EECHABMP@GENTIME?$AA@			; `string'
PUBLIC	??_C@_03LBMHMDEB@OCT?$AA@			; `string'
PUBLIC	??_C@_0M@JIDALIGG@OCTETSTRING?$AA@		; `string'
PUBLIC	??_C@_06GOEDGPII@BITSTR?$AA@			; `string'
PUBLIC	??_C@_09MBLGEDKL@BITSTRING?$AA@			; `string'
PUBLIC	??_C@_0BA@EJHHDALK@UNIVERSALSTRING?$AA@		; `string'
PUBLIC	??_C@_04CBEPCLMK@UNIV?$AA@			; `string'
PUBLIC	??_C@_03OLMOBCBF@IA5?$AA@			; `string'
PUBLIC	??_C@_09JOMPLKGB@IA5STRING?$AA@			; `string'
PUBLIC	??_C@_0L@PJIJIHJD@UTF8String?$AA@		; `string'
PUBLIC	??_C@_03CNFPPDJC@BMP?$AA@			; `string'
PUBLIC	??_C@_09BIBABMFN@BMPSTRING?$AA@			; `string'
PUBLIC	??_C@_0O@KDAJCBO@VISIBLESTRING?$AA@		; `string'
PUBLIC	??_C@_07MCGNPFEO@VISIBLE?$AA@			; `string'
PUBLIC	??_C@_0BA@FKHILLED@PRINTABLESTRING?$AA@		; `string'
PUBLIC	??_C@_09OMDMMLJJ@PRINTABLE?$AA@			; `string'
PUBLIC	??_C@_03HMGPCGIG@T61?$AA@			; `string'
PUBLIC	??_C@_09FMBHBANP@T61STRING?$AA@			; `string'
PUBLIC	??_C@_0O@GENPGMAM@TELETEXSTRING?$AA@		; `string'
PUBLIC	??_C@_0O@OIKLOOAP@GeneralString?$AA@		; `string'
PUBLIC	??_C@_06GBOJAPHH@GENSTR?$AA@			; `string'
PUBLIC	??_C@_07DBOJJFHC@NUMERIC?$AA@			; `string'
PUBLIC	??_C@_0O@DFADMOGA@NUMERICSTRING?$AA@		; `string'
PUBLIC	??_C@_08POLPFBMC@SEQUENCE?$AA@			; `string'
PUBLIC	??_C@_03NCPCKDJB@SEQ?$AA@			; `string'
PUBLIC	??_C@_03KPIFFHNE@SET?$AA@			; `string'
PUBLIC	??_C@_03KKGFKKLA@EXP?$AA@			; `string'
PUBLIC	??_C@_08CNKBIFDO@EXPLICIT?$AA@			; `string'
PUBLIC	??_C@_03PKFOHEJD@IMP?$AA@			; `string'
PUBLIC	??_C@_08PPMOEJGF@IMPLICIT?$AA@			; `string'
PUBLIC	??_C@_07KIEILLID@OCTWRAP?$AA@			; `string'
PUBLIC	??_C@_07LAEBDLGO@SEQWRAP?$AA@			; `string'
PUBLIC	??_C@_07OAIMKKNN@SETWRAP?$AA@			; `string'
PUBLIC	??_C@_07JHDNPBBM@BITWRAP?$AA@			; `string'
PUBLIC	??_C@_04HPGCGPG@FORM?$AA@			; `string'
PUBLIC	??_C@_06DPGELLJH@FORMAT?$AA@			; `string'
;	COMDAT ??_C@_06DPGELLJH@FORMAT?$AA@
CONST	SEGMENT
??_C@_06DPGELLJH@FORMAT?$AA@ DB 'FORMAT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPGCGPG@FORM?$AA@
CONST	SEGMENT
??_C@_04HPGCGPG@FORM?$AA@ DB 'FORM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JHDNPBBM@BITWRAP?$AA@
CONST	SEGMENT
??_C@_07JHDNPBBM@BITWRAP?$AA@ DB 'BITWRAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OAIMKKNN@SETWRAP?$AA@
CONST	SEGMENT
??_C@_07OAIMKKNN@SETWRAP?$AA@ DB 'SETWRAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LAEBDLGO@SEQWRAP?$AA@
CONST	SEGMENT
??_C@_07LAEBDLGO@SEQWRAP?$AA@ DB 'SEQWRAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KIEILLID@OCTWRAP?$AA@
CONST	SEGMENT
??_C@_07KIEILLID@OCTWRAP?$AA@ DB 'OCTWRAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPMOEJGF@IMPLICIT?$AA@
CONST	SEGMENT
??_C@_08PPMOEJGF@IMPLICIT?$AA@ DB 'IMPLICIT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PKFOHEJD@IMP?$AA@
CONST	SEGMENT
??_C@_03PKFOHEJD@IMP?$AA@ DB 'IMP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08CNKBIFDO@EXPLICIT?$AA@
CONST	SEGMENT
??_C@_08CNKBIFDO@EXPLICIT?$AA@ DB 'EXPLICIT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03KKGFKKLA@EXP?$AA@
CONST	SEGMENT
??_C@_03KKGFKKLA@EXP?$AA@ DB 'EXP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KPIFFHNE@SET?$AA@
CONST	SEGMENT
??_C@_03KPIFFHNE@SET?$AA@ DB 'SET', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NCPCKDJB@SEQ?$AA@
CONST	SEGMENT
??_C@_03NCPCKDJB@SEQ?$AA@ DB 'SEQ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08POLPFBMC@SEQUENCE?$AA@
CONST	SEGMENT
??_C@_08POLPFBMC@SEQUENCE?$AA@ DB 'SEQUENCE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DFADMOGA@NUMERICSTRING?$AA@
CONST	SEGMENT
??_C@_0O@DFADMOGA@NUMERICSTRING?$AA@ DB 'NUMERICSTRING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBOJJFHC@NUMERIC?$AA@
CONST	SEGMENT
??_C@_07DBOJJFHC@NUMERIC?$AA@ DB 'NUMERIC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GBOJAPHH@GENSTR?$AA@
CONST	SEGMENT
??_C@_06GBOJAPHH@GENSTR?$AA@ DB 'GENSTR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OIKLOOAP@GeneralString?$AA@
CONST	SEGMENT
??_C@_0O@OIKLOOAP@GeneralString?$AA@ DB 'GeneralString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GENPGMAM@TELETEXSTRING?$AA@
CONST	SEGMENT
??_C@_0O@GENPGMAM@TELETEXSTRING?$AA@ DB 'TELETEXSTRING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FMBHBANP@T61STRING?$AA@
CONST	SEGMENT
??_C@_09FMBHBANP@T61STRING?$AA@ DB 'T61STRING', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03HMGPCGIG@T61?$AA@
CONST	SEGMENT
??_C@_03HMGPCGIG@T61?$AA@ DB 'T61', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09OMDMMLJJ@PRINTABLE?$AA@
CONST	SEGMENT
??_C@_09OMDMMLJJ@PRINTABLE?$AA@ DB 'PRINTABLE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FKHILLED@PRINTABLESTRING?$AA@
CONST	SEGMENT
??_C@_0BA@FKHILLED@PRINTABLESTRING?$AA@ DB 'PRINTABLESTRING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MCGNPFEO@VISIBLE?$AA@
CONST	SEGMENT
??_C@_07MCGNPFEO@VISIBLE?$AA@ DB 'VISIBLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KDAJCBO@VISIBLESTRING?$AA@
CONST	SEGMENT
??_C@_0O@KDAJCBO@VISIBLESTRING?$AA@ DB 'VISIBLESTRING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BIBABMFN@BMPSTRING?$AA@
CONST	SEGMENT
??_C@_09BIBABMFN@BMPSTRING?$AA@ DB 'BMPSTRING', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03CNFPPDJC@BMP?$AA@
CONST	SEGMENT
??_C@_03CNFPPDJC@BMP?$AA@ DB 'BMP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PJIJIHJD@UTF8String?$AA@
CONST	SEGMENT
??_C@_0L@PJIJIHJD@UTF8String?$AA@ DB 'UTF8String', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JOMPLKGB@IA5STRING?$AA@
CONST	SEGMENT
??_C@_09JOMPLKGB@IA5STRING?$AA@ DB 'IA5STRING', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OLMOBCBF@IA5?$AA@
CONST	SEGMENT
??_C@_03OLMOBCBF@IA5?$AA@ DB 'IA5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CBEPCLMK@UNIV?$AA@
CONST	SEGMENT
??_C@_04CBEPCLMK@UNIV?$AA@ DB 'UNIV', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EJHHDALK@UNIVERSALSTRING?$AA@
CONST	SEGMENT
??_C@_0BA@EJHHDALK@UNIVERSALSTRING?$AA@ DB 'UNIVERSALSTRING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MBLGEDKL@BITSTRING?$AA@
CONST	SEGMENT
??_C@_09MBLGEDKL@BITSTRING?$AA@ DB 'BITSTRING', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GOEDGPII@BITSTR?$AA@
CONST	SEGMENT
??_C@_06GOEDGPII@BITSTR?$AA@ DB 'BITSTR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JIDALIGG@OCTETSTRING?$AA@
CONST	SEGMENT
??_C@_0M@JIDALIGG@OCTETSTRING?$AA@ DB 'OCTETSTRING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LBMHMDEB@OCT?$AA@
CONST	SEGMENT
??_C@_03LBMHMDEB@OCT?$AA@ DB 'OCT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07EECHABMP@GENTIME?$AA@
CONST	SEGMENT
??_C@_07EECHABMP@GENTIME?$AA@ DB 'GENTIME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LKNBIJBB@GENERALIZEDTIME?$AA@
CONST	SEGMENT
??_C@_0BA@LKNBIJBB@GENERALIZEDTIME?$AA@ DB 'GENERALIZEDTIME', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JCIJEFNJ@UTC?$AA@
CONST	SEGMENT
??_C@_03JCIJEFNJ@UTC?$AA@ DB 'UTC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIOLDDN@UTCTIME?$AA@
CONST	SEGMENT
??_C@_07HIOLDDN@UTCTIME?$AA@ DB 'UTCTIME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IAMCMNFI@OBJECT?$AA@
CONST	SEGMENT
??_C@_06IAMCMNFI@OBJECT?$AA@ DB 'OBJECT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PGJCFEMG@OID?$AA@
CONST	SEGMENT
??_C@_03PGJCFEMG@OID?$AA@ DB 'OID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KNIEMAKM@ENUMERATED?$AA@
CONST	SEGMENT
??_C@_0L@KNIEMAKM@ENUMERATED?$AA@ DB 'ENUMERATED', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PNKFCNMG@ENUM?$AA@
CONST	SEGMENT
??_C@_04PNKFCNMG@ENUM?$AA@ DB 'ENUM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EHCIHKNF@INTEGER?$AA@
CONST	SEGMENT
??_C@_07EHCIHKNF@INTEGER?$AA@ DB 'INTEGER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JMHEAPMO@INT?$AA@
CONST	SEGMENT
??_C@_03JMHEAPMO@INT?$AA@ DB 'INT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIBGFPH@NULL?$AA@
CONST	SEGMENT
??_C@_04HIBGFPH@NULL?$AA@ DB 'NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JDEDMABE@BOOLEAN?$AA@
CONST	SEGMENT
??_C@_07JDEDMABE@BOOLEAN?$AA@ DB 'BOOLEAN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PPJDIBFE@BOOL?$AA@
CONST	SEGMENT
??_C@_04PPJDIBFE@BOOL?$AA@ DB 'BOOL', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?tnst@?1??asn1_str2tag@@9@9 DD FLAT:??_C@_04PPJDIBFE@BOOL?$AA@ ; `asn1_str2tag'::`2'::tnst
	DD	04H
	DD	01H
	DD	FLAT:??_C@_07JDEDMABE@BOOLEAN?$AA@
	DD	07H
	DD	01H
	DD	FLAT:??_C@_04HIBGFPH@NULL?$AA@
	DD	04H
	DD	05H
	DD	FLAT:??_C@_03JMHEAPMO@INT?$AA@
	DD	03H
	DD	02H
	DD	FLAT:??_C@_07EHCIHKNF@INTEGER?$AA@
	DD	07H
	DD	02H
	DD	FLAT:??_C@_04PNKFCNMG@ENUM?$AA@
	DD	04H
	DD	0aH
	DD	FLAT:??_C@_0L@KNIEMAKM@ENUMERATED?$AA@
	DD	0aH
	DD	0aH
	DD	FLAT:??_C@_03PGJCFEMG@OID?$AA@
	DD	03H
	DD	06H
	DD	FLAT:??_C@_06IAMCMNFI@OBJECT?$AA@
	DD	06H
	DD	06H
	DD	FLAT:??_C@_07HIOLDDN@UTCTIME?$AA@
	DD	07H
	DD	017H
	DD	FLAT:??_C@_03JCIJEFNJ@UTC?$AA@
	DD	03H
	DD	017H
	DD	FLAT:??_C@_0BA@LKNBIJBB@GENERALIZEDTIME?$AA@
	DD	0fH
	DD	018H
	DD	FLAT:??_C@_07EECHABMP@GENTIME?$AA@
	DD	07H
	DD	018H
	DD	FLAT:??_C@_03LBMHMDEB@OCT?$AA@
	DD	03H
	DD	04H
	DD	FLAT:??_C@_0M@JIDALIGG@OCTETSTRING?$AA@
	DD	0bH
	DD	04H
	DD	FLAT:??_C@_06GOEDGPII@BITSTR?$AA@
	DD	06H
	DD	03H
	DD	FLAT:??_C@_09MBLGEDKL@BITSTRING?$AA@
	DD	09H
	DD	03H
	DD	FLAT:??_C@_0BA@EJHHDALK@UNIVERSALSTRING?$AA@
	DD	0fH
	DD	01cH
	DD	FLAT:??_C@_04CBEPCLMK@UNIV?$AA@
	DD	04H
	DD	01cH
	DD	FLAT:??_C@_03OLMOBCBF@IA5?$AA@
	DD	03H
	DD	016H
	DD	FLAT:??_C@_09JOMPLKGB@IA5STRING?$AA@
	DD	09H
	DD	016H
	DD	FLAT:??_C@_04OOMJJNCF@UTF8?$AA@
	DD	04H
	DD	0cH
	DD	FLAT:??_C@_0L@PJIJIHJD@UTF8String?$AA@
	DD	0aH
	DD	0cH
	DD	FLAT:??_C@_03CNFPPDJC@BMP?$AA@
	DD	03H
	DD	01eH
	DD	FLAT:??_C@_09BIBABMFN@BMPSTRING?$AA@
	DD	09H
	DD	01eH
	DD	FLAT:??_C@_0O@KDAJCBO@VISIBLESTRING?$AA@
	DD	0dH
	DD	01aH
	DD	FLAT:??_C@_07MCGNPFEO@VISIBLE?$AA@
	DD	07H
	DD	01aH
	DD	FLAT:??_C@_0BA@FKHILLED@PRINTABLESTRING?$AA@
	DD	0fH
	DD	013H
	DD	FLAT:??_C@_09OMDMMLJJ@PRINTABLE?$AA@
	DD	09H
	DD	013H
	DD	FLAT:??_C@_03HMGPCGIG@T61?$AA@
	DD	03H
	DD	014H
	DD	FLAT:??_C@_09FMBHBANP@T61STRING?$AA@
	DD	09H
	DD	014H
	DD	FLAT:??_C@_0O@GENPGMAM@TELETEXSTRING?$AA@
	DD	0dH
	DD	014H
	DD	FLAT:??_C@_0O@OIKLOOAP@GeneralString?$AA@
	DD	0dH
	DD	01bH
	DD	FLAT:??_C@_06GBOJAPHH@GENSTR?$AA@
	DD	06H
	DD	01bH
	DD	FLAT:??_C@_07DBOJJFHC@NUMERIC?$AA@
	DD	07H
	DD	012H
	DD	FLAT:??_C@_0O@DFADMOGA@NUMERICSTRING?$AA@
	DD	0dH
	DD	012H
	DD	FLAT:??_C@_08POLPFBMC@SEQUENCE?$AA@
	DD	08H
	DD	010H
	DD	FLAT:??_C@_03NCPCKDJB@SEQ?$AA@
	DD	03H
	DD	010H
	DD	FLAT:??_C@_03KPIFFHNE@SET?$AA@
	DD	03H
	DD	011H
	DD	FLAT:??_C@_03KKGFKKLA@EXP?$AA@
	DD	03H
	DD	010002H
	DD	FLAT:??_C@_08CNKBIFDO@EXPLICIT?$AA@
	DD	08H
	DD	010002H
	DD	FLAT:??_C@_03PKFOHEJD@IMP?$AA@
	DD	03H
	DD	010001H
	DD	FLAT:??_C@_08PPMOEJGF@IMPLICIT?$AA@
	DD	08H
	DD	010001H
	DD	FLAT:??_C@_07KIEILLID@OCTWRAP?$AA@
	DD	07H
	DD	010005H
	DD	FLAT:??_C@_07LAEBDLGO@SEQWRAP?$AA@
	DD	07H
	DD	010006H
	DD	FLAT:??_C@_07OAIMKKNN@SETWRAP?$AA@
	DD	07H
	DD	010007H
	DD	FLAT:??_C@_07JHDNPBBM@BITWRAP?$AA@
	DD	07H
	DD	010004H
	DD	FLAT:??_C@_04HPGCGPG@FORM?$AA@
	DD	04H
	DD	010008H
	DD	FLAT:??_C@_06DPGELLJH@FORMAT?$AA@
	DD	06H
	DD	010008H
CONST	ENDS
;	COMDAT ??_C@_04OOMJJNCF@UTF8?$AA@
CONST	SEGMENT
??_C@_04OOMJJNCF@UTF8?$AA@ DB 'UTF8', 00H		; `string'
CONST	ENDS
PUBLIC	_ASN1_generate_nconf
PUBLIC	_ASN1_generate_v3
PUBLIC	??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@ ; `string'
PUBLIC	??_C@_04JBGFELJA@tag?$DN?$AA@			; `string'
PUBLIC	??_C@_05CCNLIHFO@ASCII?$AA@			; `string'
PUBLIC	??_C@_03IECIMIEG@HEX?$AA@			; `string'
PUBLIC	??_C@_07HMNLDFAL@BITLIST?$AA@			; `string'
PUBLIC	??_C@_05NALEHOPE@Char?$DN?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_07IOGEOOAA@string?$DN?$AA@		; `string'
EXTRN	__imp__strtoul:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_i2d_ASN1_SEQUENCE_ANY:PROC
EXTRN	_i2d_ASN1_SET_ANY:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_TYPE_free:PROC
EXTRN	_d2i_ASN1_TYPE:PROC
EXTRN	_i2d_ASN1_TYPE:PROC
EXTRN	_ASN1_STRING_new:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	_ASN1_BIT_STRING_set_bit:PROC
EXTRN	_ASN1_TIME_check:PROC
EXTRN	_ASN1_tag2bit:PROC
EXTRN	_ASN1_get_object:PROC
EXTRN	_ASN1_put_object:PROC
EXTRN	_ASN1_object_size:PROC
EXTRN	_ASN1_mbstring_copy:PROC
EXTRN	_OBJ_txt2obj:PROC
EXTRN	_CONF_parse_list:PROC
EXTRN	_X509V3_get_value_bool:PROC
EXTRN	_X509V3_set_nconf:PROC
EXTRN	_X509V3_get_section:PROC
EXTRN	_X509V3_section_free:PROC
EXTRN	_s2i_ASN1_INTEGER:PROC
EXTRN	_string_to_hex:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?tntmp@?1??asn1_str2tag@@9@9 DD 01H DUP (?)		; `asn1_str2tag'::`2'::tntmp
_BSS	ENDS
;	COMDAT ??_C@_07IOGEOOAA@string?$DN?$AA@
CONST	SEGMENT
??_C@_07IOGEOOAA@string?$DN?$AA@ DB 'string=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05NALEHOPE@Char?$DN?$AA@
CONST	SEGMENT
??_C@_05NALEHOPE@Char?$DN?$AA@ DB 'Char=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HMNLDFAL@BITLIST?$AA@
CONST	SEGMENT
??_C@_07HMNLDFAL@BITLIST?$AA@ DB 'BITLIST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IECIMIEG@HEX?$AA@
CONST	SEGMENT
??_C@_03IECIMIEG@HEX?$AA@ DB 'HEX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05CCNLIHFO@ASCII?$AA@
CONST	SEGMENT
??_C@_05CCNLIHFO@ASCII?$AA@ DB 'ASCII', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JBGFELJA@tag?$DN?$AA@
CONST	SEGMENT
??_C@_04JBGFELJA@tag?$DN?$AA@ DB 'tag=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'sn1_gen.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_str2tag
_TEXT	SEGMENT
_tagstr$ = 8						; size = 4
_len$ = 12						; size = 4
_asn1_str2tag PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 562
	push	ebx
; Line 625
	mov	ebx, DWORD PTR _tagstr$[esp]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _len$[esp+8]
	push	edi
	cmp	esi, -1
	jne	SHORT $LN5@asn1_str2t
; Line 626
	mov	esi, ebx
	lea	ecx, DWORD PTR [esi+1]
$LL14@asn1_str2t:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL14@asn1_str2t
	sub	esi, ecx
$LN5@asn1_str2t:
; Line 629
	mov	ebp, DWORD PTR __imp__strncmp
	mov	eax, OFFSET ?tnst@?1??asn1_str2tag@@9@9
	mov	DWORD PTR ?tntmp@?1??asn1_str2tag@@9@9, eax
	xor	edi, edi
$LL4@asn1_str2t:
; Line 630
	cmp	esi, DWORD PTR [eax+4]
	jne	SHORT $LN2@asn1_str2t
	push	esi
	push	ebx
	push	DWORD PTR [eax]
	call	ebp
	add	esp, 12					; 0000000cH
	test	eax, eax
	mov	eax, DWORD PTR ?tntmp@?1??asn1_str2tag@@9@9
	je	SHORT $LN9@asn1_str2t
$LN2@asn1_str2t:
; Line 629
	inc	edi
	add	eax, 12					; 0000000cH
	mov	DWORD PTR ?tntmp@?1??asn1_str2tag@@9@9, eax
	cmp	edi, 49					; 00000031H
	jb	SHORT $LL4@asn1_str2t
; Line 634
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 635
	ret	0
$LN9@asn1_str2t:
; Line 631
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 635
	ret	0
_asn1_str2tag ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_str2type
_TEXT	SEGMENT
_rdlen$ = -16						; size = 4
_vtmp$ = -12						; size = 12
_str$ = 8						; size = 4
_format$ = 12						; size = 4
_utype$ = 16						; size = 4
_asn1_str2type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 638
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	esi
; Line 648
	call	_ASN1_TYPE_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN4@asn1_str2t
; Line 649
	push	649					; 00000289H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	65					; 00000041H
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 650
	xor	eax, eax
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN4@asn1_str2t:
; Line 653
	mov	eax, DWORD PTR _str$[esp+16]
	test	eax, eax
	push	ebx
; Line 656
	mov	ebx, DWORD PTR _utype$[esp+20]
	push	ebp
	push	edi
	mov	edi, OFFSET ??_C@_00CNPNBAHC@?$AA@
	cmovne	edi, eax
	lea	eax, DWORD PTR [ebx-1]
	cmp	eax, 29					; 0000001dH
	ja	$LN39@asn1_str2t
	movzx	eax, BYTE PTR $LN43@asn1_str2t[eax]
	jmp	DWORD PTR $LN49@asn1_str2t[eax*4]
$LN6@asn1_str2t:
; Line 659
	test	edi, edi
	je	$LN38@asn1_str2t
	cmp	BYTE PTR [edi], 0
	je	$LN38@asn1_str2t
; Line 660
	push	660					; 00000294H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	182					; 000000b6H
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN8@asn1_str2t:
; Line 666
	cmp	DWORD PTR _format$[esp+28], 1
	je	SHORT $LN9@asn1_str2t
; Line 667
	push	667					; 0000029bH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	190					; 000000beH
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN9@asn1_str2t:
; Line 673
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR _vtmp$[esp+36], 0
	push	eax
	lea	eax, DWORD PTR _vtmp$[esp+36]
	mov	DWORD PTR _vtmp$[esp+36], 0
	push	eax
	mov	DWORD PTR _vtmp$[esp+48], edi
	call	_X509V3_get_value_bool
	add	esp, 8
	test	eax, eax
	jne	$LN38@asn1_str2t
; Line 674
	push	674					; 000002a2H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	176					; 000000b0H
; Line 675
	jmp	$LN47@asn1_str2t
$LN11@asn1_str2t:
; Line 681
	cmp	DWORD PTR _format$[esp+28], 1
	je	SHORT $LN12@asn1_str2t
; Line 682
	push	682					; 000002aaH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	185					; 000000b9H
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN12@asn1_str2t:
; Line 685
	push	edi
	push	0
	call	_s2i_ASN1_INTEGER
	add	esp, 8
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	jne	$LN38@asn1_str2t
; Line 686
	push	686					; 000002aeH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	180					; 000000b4H
; Line 687
	jmp	$LN47@asn1_str2t
$LN14@asn1_str2t:
; Line 692
	cmp	DWORD PTR _format$[esp+28], 1
	je	SHORT $LN15@asn1_str2t
; Line 693
	push	693					; 000002b5H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	191					; 000000bfH
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN15@asn1_str2t:
; Line 696
	push	0
	push	edi
	call	_OBJ_txt2obj
	add	esp, 8
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	jne	$LN38@asn1_str2t
; Line 697
	push	697					; 000002b9H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	183					; 000000b7H
; Line 698
	jmp	$LN47@asn1_str2t
$LN17@asn1_str2t:
; Line 704
	cmp	DWORD PTR _format$[esp+28], 1
	je	SHORT $LN18@asn1_str2t
; Line 705
	push	705					; 000002c1H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	193					; 000000c1H
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN18@asn1_str2t:
; Line 708
	call	_ASN1_STRING_new
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	jne	SHORT $LN19@asn1_str2t
; Line 709
	push	709					; 000002c5H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	65					; 00000041H
; Line 710
	jmp	$LN47@asn1_str2t
$LN19@asn1_str2t:
; Line 712
	push	-1
	push	edi
	push	eax
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN20@asn1_str2t
; Line 713
	push	713					; 000002c9H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	65					; 00000041H
; Line 714
	jmp	$LN47@asn1_str2t
$LN20@asn1_str2t:
; Line 716
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ebx
; Line 717
	push	DWORD PTR [esi+4]
	call	_ASN1_TIME_check
	add	esp, 4
	test	eax, eax
	jne	$LN38@asn1_str2t
; Line 718
	push	718					; 000002ceH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	184					; 000000b8H
; Line 719
	jmp	$LN47@asn1_str2t
$LN22@asn1_str2t:
; Line 734
	mov	eax, DWORD PTR _format$[esp+28]
	cmp	eax, 1
	jne	SHORT $LN23@asn1_str2t
; Line 735
	mov	ebp, 4097				; 00001001H
	jmp	SHORT $LN26@asn1_str2t
$LN23@asn1_str2t:
; Line 736
	cmp	eax, 2
	jne	SHORT $LN25@asn1_str2t
; Line 737
	mov	ebp, 4096				; 00001000H
$LN26@asn1_str2t:
; Line 744
	push	ebx
	call	_ASN1_tag2bit
	push	eax
	push	ebp
	push	-1
	lea	eax, DWORD PTR [esi+4]
	push	edi
	push	eax
	call	_ASN1_mbstring_copy
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	$LN38@asn1_str2t
; Line 745
	push	745					; 000002e9H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	65					; 00000041H
; Line 746
	jmp	$LN47@asn1_str2t
$LN25@asn1_str2t:
; Line 739
	push	739					; 000002e3H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	177					; 000000b1H
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN28@asn1_str2t:
; Line 755
	call	_ASN1_STRING_new
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	jne	SHORT $LN29@asn1_str2t
; Line 756
	push	756					; 000002f4H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	65					; 00000041H
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN29@asn1_str2t:
; Line 760
	mov	ecx, DWORD PTR _format$[esp+28]
	cmp	ecx, 3
	jne	SHORT $LN30@asn1_str2t
; Line 762
	lea	eax, DWORD PTR _rdlen$[esp+32]
	push	eax
	push	edi
	call	_string_to_hex
	mov	ecx, eax
	add	esp, 8
	test	ecx, ecx
	jne	SHORT $LN32@asn1_str2t
; Line 763
	push	763					; 000002fbH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	178					; 000000b2H
; Line 764
	jmp	$LN47@asn1_str2t
$LN32@asn1_str2t:
; Line 767
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], ecx
; Line 768
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR _rdlen$[esp+32]
	mov	DWORD PTR [ecx], eax
; Line 769
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ebx
	jmp	SHORT $LN36@asn1_str2t
$LN30@asn1_str2t:
; Line 771
	cmp	ecx, 1
	jne	SHORT $LN33@asn1_str2t
; Line 772
	push	-1
	push	edi
	push	eax
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
$LN36@asn1_str2t:
; Line 787
	cmp	ebx, 3
	jne	SHORT $LN38@asn1_str2t
; Line 789
	mov	eax, DWORD PTR [esi+4]
	and	DWORD PTR [eax+12], -16			; fffffff0H
; Line 790
	mov	eax, DWORD PTR [esi+4]
	or	DWORD PTR [eax+12], 8
$LN38@asn1_str2t:
; Line 801
	pop	edi
	pop	ebp
	mov	DWORD PTR [esi], ebx
; Line 802
	mov	eax, esi
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN33@asn1_str2t:
; Line 774
	cmp	ecx, 4
	jne	SHORT $LN35@asn1_str2t
	cmp	ebx, 3
	jne	SHORT $LN35@asn1_str2t
; Line 775
	push	eax
	push	OFFSET _bitstr_cb
	push	1
	push	44					; 0000002cH
	push	edi
	call	_CONF_parse_list
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN38@asn1_str2t
; Line 777
	push	777					; 00000309H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	188					; 000000bcH
; Line 778
	jmp	SHORT $LN47@asn1_str2t
$LN35@asn1_str2t:
; Line 783
	push	783					; 0000030fH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	175					; 000000afH
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
$LN39@asn1_str2t:
; Line 796
	push	796					; 0000031cH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	196					; 000000c4H
$LN47@asn1_str2t:
	push	179					; 000000b3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$bad_str$50:
; Line 805
	push	edi
	push	OFFSET ??_C@_07IOGEOOAA@string?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 12					; 0000000cH
$bad_form$51:
; Line 808
	push	esi
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 809
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 811
	add	esp, 16					; 00000010H
	ret	0
	npad	2
$LN49@asn1_str2t:
	DD	$LN8@asn1_str2t
	DD	$LN11@asn1_str2t
	DD	$LN28@asn1_str2t
	DD	$LN6@asn1_str2t
	DD	$LN14@asn1_str2t
	DD	$LN22@asn1_str2t
	DD	$LN17@asn1_str2t
	DD	$LN39@asn1_str2t
$LN43@asn1_str2t:
	DB	0
	DB	1
	DB	2
	DB	2
	DB	3
	DB	4
	DB	7
	DB	7
	DB	7
	DB	1
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	5
	DB	5
	DB	7
	DB	5
	DB	6
	DB	6
	DB	7
	DB	5
	DB	5
	DB	5
	DB	7
	DB	5
_asn1_str2type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_multi
_TEXT	SEGMENT
_der$ = -8						; size = 4
tv334 = -4						; size = 4
_derlen$1$ = -4						; size = 4
_utype$ = 8						; size = 4
_section$ = 12						; size = 4
_cnf$ = 16						; size = 4
_depth$ = 20						; size = 4
_perr$ = 24						; size = 4
_asn1_multi PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 460
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 463
	xor	edi, edi
	xor	ebp, ebp
; Line 464
	mov	DWORD PTR _der$[esp+24], edi
; Line 467
	call	_sk_new_null
	mov	ebx, eax
; Line 468
	mov	eax, DWORD PTR _cnf$[esp+20]
	test	ebx, ebx
	je	$bad$57
; Line 470
	mov	ecx, DWORD PTR _section$[esp+20]
	test	ecx, ecx
	je	SHORT $LN3@asn1_multi
; Line 471
	test	eax, eax
	je	$bad$57
; Line 473
	push	ecx
	push	eax
	call	_X509V3_get_section
	mov	edi, eax
	add	esp, 8
; Line 474
	test	edi, edi
	je	$bad$57
; Line 476
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@asn1_multi
	mov	eax, DWORD PTR _depth$[esp+20]
	inc	eax
	mov	DWORD PTR tv334[esp+24], eax
$LL4@asn1_multi:
; Line 477
	push	DWORD PTR _perr$[esp+20]
	push	eax
	push	DWORD PTR _cnf$[esp+28]
	push	esi
	push	edi
	call	_sk_value
	add	esp, 8
	mov	eax, DWORD PTR [eax+8]
	push	eax
	call	_generate_v3
	add	esp, 16					; 00000010H
; Line 480
	test	eax, eax
	je	$bad$57
; Line 482
	push	eax
	push	ebx
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $bad$57
; Line 476
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	mov	eax, DWORD PTR tv334[esp+24]
	jl	SHORT $LL4@asn1_multi
$LN3@asn1_multi:
; Line 491
	mov	esi, DWORD PTR _utype$[esp+20]
; Line 492
	lea	eax, DWORD PTR _der$[esp+24]
	push	eax
	push	ebx
	cmp	esi, 17					; 00000011H
	jne	SHORT $LN11@asn1_multi
	call	_i2d_ASN1_SET_ANY
	jmp	SHORT $LN55@asn1_multi
$LN11@asn1_multi:
; Line 494
	call	_i2d_ASN1_SEQUENCE_ANY
$LN55@asn1_multi:
	add	esp, 8
	mov	DWORD PTR _derlen$1$[esp+24], eax
; Line 496
	test	eax, eax
	js	SHORT $bad$57
; Line 499
	call	_ASN1_TYPE_new
	mov	ebp, eax
	test	ebp, ebp
	je	SHORT $bad$57
; Line 502
	push	esi
	call	_ASN1_STRING_type_new
	add	esp, 4
	mov	DWORD PTR [ebp+4], eax
	test	eax, eax
	je	SHORT $bad$57
; Line 505
	mov	DWORD PTR [ebp], esi
; Line 507
	mov	ecx, DWORD PTR _der$[esp+24]
	mov	DWORD PTR [eax+8], ecx
; Line 508
	mov	eax, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR _derlen$1$[esp+24]
	mov	DWORD PTR [eax], ecx
; Line 510
	mov	DWORD PTR _der$[esp+24], 0
; Line 514
	jmp	SHORT $LN16@asn1_multi
$bad$57:
	mov	eax, DWORD PTR _der$[esp+24]
	test	eax, eax
	je	SHORT $LN16@asn1_multi
; Line 515
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN16@asn1_multi:
; Line 517
	test	ebx, ebx
	je	SHORT $LN17@asn1_multi
; Line 518
	push	OFFSET _ASN1_TYPE_free
	push	ebx
	call	_sk_pop_free
	add	esp, 8
$LN17@asn1_multi:
; Line 519
	test	edi, edi
	je	SHORT $LN54@asn1_multi
; Line 520
	push	edi
	push	DWORD PTR _cnf$[esp+24]
	call	_X509V3_section_free
	add	esp, 8
$LN54@asn1_multi:
; Line 522
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 523
	add	esp, 8
	ret	0
_asn1_multi ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _parse_tagging
_TEXT	SEGMENT
_eptr$ = -4						; size = 4
_erch$ = 8						; size = 2
_vstart$ = 8						; size = 4
_vlen$ = 12						; size = 4
_ptag$ = 16						; size = 4
_pclass$ = 20						; size = 4
_parse_tagging PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 401
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 405
	mov	esi, DWORD PTR _vstart$[esp+4]
	test	esi, esi
	jne	SHORT $LN4@parse_tagg
; Line 406
	xor	eax, eax
	pop	esi
; Line 454
	pop	ecx
	ret	0
$LN4@parse_tagg:
	push	ebx
	push	edi
; Line 407
	push	10					; 0000000aH
	lea	eax, DWORD PTR _eptr$[esp+20]
	push	eax
	push	esi
	call	DWORD PTR __imp__strtoul
; Line 409
	mov	edx, DWORD PTR _eptr$[esp+28]
	add	esp, 12					; 0000000cH
	mov	edi, DWORD PTR _vlen$[esp+12]
	mov	ebx, eax
	test	edx, edx
	je	SHORT $LN5@parse_tagg
	cmp	BYTE PTR [edx], 0
	je	SHORT $LN5@parse_tagg
	lea	ecx, DWORD PTR [esi+edi]
	cmp	edx, ecx
	ja	$LN22@parse_tagg
$LN5@parse_tagg:
; Line 411
	test	ebx, ebx
	jns	SHORT $LN6@parse_tagg
; Line 412
	push	412					; 0000019cH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	187					; 000000bbH
	push	182					; 000000b6H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 413
	xor	eax, eax
	pop	edi
	pop	ebx
	pop	esi
; Line 454
	pop	ecx
	ret	0
$LN6@parse_tagg:
; Line 415
	mov	eax, DWORD PTR _ptag$[esp+12]
	mov	DWORD PTR [eax], ebx
; Line 417
	test	edx, edx
	je	$LN9@parse_tagg
; Line 418
	sub	esi, edx
	add	edi, esi
; Line 421
	je	$LN9@parse_tagg
; Line 422
	mov	cl, BYTE PTR [edx]
	movsx	eax, cl
	add	eax, -65				; ffffffbfH
	cmp	eax, 20					; 00000014H
	ja	SHORT $LN15@parse_tagg
	movzx	eax, BYTE PTR $LN19@parse_tagg[eax]
	jmp	DWORD PTR $LN24@parse_tagg[eax*4]
$LN11@parse_tagg:
; Line 425
	mov	eax, DWORD PTR _pclass$[esp+12]
	pop	edi
	pop	ebx
	pop	esi
	mov	DWORD PTR [eax], 0
; Line 452
	mov	eax, 1
; Line 454
	pop	ecx
	ret	0
$LN12@parse_tagg:
; Line 429
	mov	eax, DWORD PTR _pclass$[esp+12]
	pop	edi
	pop	ebx
	pop	esi
	mov	DWORD PTR [eax], 64			; 00000040H
; Line 452
	mov	eax, 1
; Line 454
	pop	ecx
	ret	0
$LN13@parse_tagg:
; Line 433
	mov	eax, DWORD PTR _pclass$[esp+12]
	pop	edi
	pop	ebx
	pop	esi
	mov	DWORD PTR [eax], 192			; 000000c0H
; Line 452
	mov	eax, 1
; Line 454
	pop	ecx
	ret	0
$LN15@parse_tagg:
; Line 443
	push	443					; 000001bbH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	186					; 000000baH
	push	182					; 000000b6H
	push	13					; 0000000dH
	mov	BYTE PTR _erch$[esp+32], cl
	mov	BYTE PTR _erch$[esp+33], 0
	call	_ERR_put_error
; Line 444
	lea	eax, DWORD PTR _erch$[esp+32]
	push	eax
	push	OFFSET ??_C@_05NALEHOPE@Char?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 32					; 00000020H
$LN22@parse_tagg:
; Line 445
	pop	edi
	pop	ebx
	xor	eax, eax
	pop	esi
; Line 454
	pop	ecx
	ret	0
$LN9@parse_tagg:
; Line 450
	mov	eax, DWORD PTR _pclass$[esp+12]
	pop	edi
	pop	ebx
	pop	esi
	mov	DWORD PTR [eax], 128			; 00000080H
; Line 452
	mov	eax, 1
; Line 454
	pop	ecx
	ret	0
$LN24@parse_tagg:
	DD	$LN12@parse_tagg
	DD	$LN9@parse_tagg
	DD	$LN13@parse_tagg
	DD	$LN11@parse_tagg
	DD	$LN15@parse_tagg
$LN19@parse_tagg:
	DB	0
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
_parse_tagging ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _append_exp
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_exp_tag$ = 12						; size = 4
_exp_class$ = 16					; size = 4
_exp_constructed$ = 20					; size = 4
_exp_pad$ = 24						; size = 4
_imp_ok$ = 28						; size = 4
_append_exp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 530
	mov	ecx, DWORD PTR _arg$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx]
	cmp	esi, -1
	je	SHORT $LN2@append_exp
	cmp	DWORD PTR _imp_ok$[esp], 0
	jne	SHORT $LN2@append_exp
; Line 531
	push	531					; 00000213H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	179					; 000000b3H
	push	176					; 000000b0H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 532
	xor	eax, eax
	pop	esi
; Line 559
	ret	0
$LN2@append_exp:
	push	edi
; Line 535
	mov	edi, DWORD PTR [ecx+420]
	cmp	edi, 20					; 00000014H
	jne	SHORT $LN3@append_exp
; Line 536
	push	536					; 00000218H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	174					; 000000aeH
	push	176					; 000000b0H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 537
	xor	eax, eax
	pop	edi
	pop	esi
; Line 559
	ret	0
$LN3@append_exp:
; Line 540
	lea	eax, DWORD PTR [edi+1]
	lea	eax, DWORD PTR [eax+eax*4]
	lea	edx, DWORD PTR [ecx+eax*4]
	lea	eax, DWORD PTR [edi+1]
	mov	DWORD PTR [ecx+420], eax
; Line 546
	cmp	esi, -1
	je	SHORT $LN4@append_exp
; Line 547
	mov	DWORD PTR [edx], esi
; Line 548
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
; Line 555
	mov	eax, DWORD PTR _exp_constructed$[esp+4]
	mov	DWORD PTR [ecx], -1
	mov	DWORD PTR [ecx+4], -1
	mov	DWORD PTR [edx+8], eax
; Line 556
	mov	eax, DWORD PTR _exp_pad$[esp+4]
	pop	edi
	mov	DWORD PTR [edx+12], eax
; Line 558
	mov	eax, 1
	pop	esi
; Line 559
	ret	0
$LN4@append_exp:
; Line 552
	mov	eax, DWORD PTR _exp_tag$[esp+4]
	mov	DWORD PTR [edx], eax
; Line 553
	mov	eax, DWORD PTR _exp_class$[esp+4]
	mov	DWORD PTR [edx+4], eax
; Line 555
	mov	eax, DWORD PTR _exp_constructed$[esp+4]
	mov	DWORD PTR [edx+8], eax
; Line 556
	mov	eax, DWORD PTR _exp_pad$[esp+4]
	pop	edi
	mov	DWORD PTR [edx+12], eax
; Line 558
	mov	eax, 1
	pop	esi
; Line 559
	ret	0
_append_exp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_cb
_TEXT	SEGMENT
_tmp_tag$ = -4						; size = 4
_tmp_class$ = 8						; size = 4
_elem$ = 8						; size = 4
_len$ = 12						; size = 4
_bitstr$ = 16						; size = 4
_asn1_cb PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 293
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 302
	mov	ebx, DWORD PTR _elem$[esp+4]
	push	ebp
	push	esi
	xor	ebp, ebp
	xor	esi, esi
	test	ebx, ebx
	jne	SHORT $LN7@asn1_cb
; Line 303
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 398
	pop	ecx
	ret	0
$LN7@asn1_cb:
	push	edi
; Line 305
	mov	edi, DWORD PTR _len$[esp+16]
	xor	ecx, ecx
	mov	eax, ebx
	test	edi, edi
	jle	SHORT $LN3@asn1_cb
	npad	2
$LL4@asn1_cb:
; Line 307
	cmp	BYTE PTR [eax], 58			; 0000003aH
	je	SHORT $LN38@asn1_cb
; Line 305
	inc	ecx
	inc	eax
	cmp	ecx, edi
	jl	SHORT $LL4@asn1_cb
; Line 307
	jmp	SHORT $LN3@asn1_cb
$LN38@asn1_cb:
; Line 308
	lea	esi, DWORD PTR [eax+1]
; Line 309
	mov	ebp, ebx
	sub	ebp, esi
	add	ebp, edi
; Line 310
	mov	edi, eax
	sub	edi, ebx
$LN3@asn1_cb:
; Line 315
	push	edi
	push	ebx
	call	_asn1_str2tag
	mov	ecx, eax
	add	esp, 8
; Line 317
	cmp	ecx, -1
	jne	SHORT $LN9@asn1_cb
; Line 318
	push	318					; 0000013eH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	194					; 000000c2H
	push	177					; 000000b1H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 319
	push	ebx
	push	OFFSET ??_C@_04JBGFELJA@tag?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 32					; 00000020H
; Line 390
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 398
	pop	ecx
	ret	0
$LN9@asn1_cb:
; Line 324
	test	ecx, 65536				; 00010000H
	jne	SHORT $LN10@asn1_cb
; Line 325
	mov	eax, DWORD PTR _bitstr$[esp+16]
	mov	DWORD PTR [eax+8], ecx
; Line 326
	mov	DWORD PTR [eax+16], esi
; Line 328
	test	esi, esi
	jne	SHORT $LN11@asn1_cb
	cmp	BYTE PTR [ebx+edi], 0
	je	SHORT $LN11@asn1_cb
; Line 329
	push	329					; 00000149H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	189					; 000000bdH
; Line 330
	jmp	$LN43@asn1_cb
$LN11@asn1_cb:
	pop	edi
	pop	esi
	pop	ebp
; Line 332
	xor	eax, eax
	pop	ebx
; Line 398
	pop	ecx
	ret	0
$LN10@asn1_cb:
; Line 335
	add	ecx, -65537				; fffeffffH
	cmp	ecx, 7
	ja	$LN35@asn1_cb
	jmp	DWORD PTR $LN48@asn1_cb[ecx*4]
$LN12@asn1_cb:
; Line 339
	mov	ecx, DWORD PTR _bitstr$[esp+16]
	cmp	DWORD PTR [ecx], -1
	je	SHORT $LN13@asn1_cb
; Line 340
	push	340					; 00000154H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	181					; 000000b5H
; Line 341
	jmp	$LN43@asn1_cb
$LN13@asn1_cb:
; Line 343
	lea	eax, DWORD PTR [ecx+4]
	push	eax
	push	ecx
	push	ebp
	push	esi
	call	_parse_tagging
	add	esp, 16					; 00000010H
; Line 344
	jmp	SHORT $LN46@asn1_cb
$LN15@asn1_cb:
; Line 349
	lea	eax, DWORD PTR _tmp_class$[esp+16]
	push	eax
	lea	eax, DWORD PTR _tmp_tag$[esp+24]
	push	eax
	push	ebp
	push	esi
	call	_parse_tagging
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN44@asn1_cb
; Line 351
	push	0
	push	0
	push	1
	push	DWORD PTR _tmp_class$[esp+28]
	push	DWORD PTR _tmp_tag$[esp+36]
; Line 352
	jmp	SHORT $LN45@asn1_cb
$LN18@asn1_cb:
; Line 356
	push	1
	push	0
	push	1
	push	0
	push	16					; 00000010H
; Line 357
	jmp	SHORT $LN45@asn1_cb
$LN20@asn1_cb:
; Line 361
	push	1
	push	0
	push	1
	push	0
	push	17					; 00000011H
; Line 362
	jmp	SHORT $LN45@asn1_cb
$LN22@asn1_cb:
; Line 366
	push	1
	push	1
	push	0
	push	0
	push	3
; Line 367
	jmp	SHORT $LN45@asn1_cb
$LN24@asn1_cb:
; Line 371
	push	1
	push	0
	push	0
	push	0
	push	4
$LN45@asn1_cb:
	push	DWORD PTR _bitstr$[esp+36]
	call	_append_exp
	add	esp, 24					; 00000018H
$LN46@asn1_cb:
	test	eax, eax
	je	$LN44@asn1_cb
$LN35@asn1_cb:
	pop	edi
	pop	esi
	pop	ebp
; Line 396
	mov	eax, 1
	pop	ebx
; Line 398
	pop	ecx
	ret	0
$LN26@asn1_cb:
; Line 376
	test	esi, esi
	jne	SHORT $LN27@asn1_cb
; Line 377
	push	377					; 00000179H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	160					; 000000a0H
; Line 378
	jmp	$LN43@asn1_cb
$LN27@asn1_cb:
; Line 380
	mov	edi, DWORD PTR __imp__strncmp
	push	5
	push	OFFSET ??_C@_05CCNLIHFO@ASCII?$AA@
	push	esi
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN28@asn1_cb
; Line 381
	mov	eax, DWORD PTR _bitstr$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+12], 1
; Line 396
	mov	eax, 1
	pop	ebx
; Line 398
	pop	ecx
	ret	0
$LN28@asn1_cb:
; Line 382
	push	4
	push	OFFSET ??_C@_04OOMJJNCF@UTF8?$AA@
	push	esi
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN30@asn1_cb
; Line 383
	mov	eax, DWORD PTR _bitstr$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+12], 2
; Line 396
	mov	eax, 1
	pop	ebx
; Line 398
	pop	ecx
	ret	0
$LN30@asn1_cb:
; Line 384
	push	3
	push	OFFSET ??_C@_03IECIMIEG@HEX?$AA@
	push	esi
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN32@asn1_cb
; Line 385
	mov	eax, DWORD PTR _bitstr$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+12], 3
; Line 396
	mov	eax, 1
	pop	ebx
; Line 398
	pop	ecx
	ret	0
$LN32@asn1_cb:
; Line 386
	push	7
	push	OFFSET ??_C@_07HMNLDFAL@BITLIST?$AA@
	push	esi
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN34@asn1_cb
; Line 387
	mov	eax, DWORD PTR _bitstr$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+12], 4
; Line 396
	mov	eax, 1
	pop	ebx
; Line 398
	pop	ecx
	ret	0
$LN34@asn1_cb:
; Line 389
	push	389					; 00000185H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	195					; 000000c3H
$LN43@asn1_cb:
	push	177					; 000000b1H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN44@asn1_cb:
; Line 390
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 398
	pop	ecx
	ret	0
	npad	3
$LN48@asn1_cb:
	DD	$LN12@asn1_cb
	DD	$LN15@asn1_cb
	DD	$LN35@asn1_cb
	DD	$LN22@asn1_cb
	DD	$LN24@asn1_cb
	DD	$LN18@asn1_cb
	DD	$LN20@asn1_cb
	DD	$LN26@asn1_cb
_asn1_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bitstr_cb
_TEXT	SEGMENT
_eptr$ = 8						; size = 4
_elem$ = 8						; size = 4
_len$ = 12						; size = 4
_bitstr$ = 16						; size = 4
_bitstr_cb PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 814
	push	esi
; Line 817
	mov	esi, DWORD PTR _elem$[esp]
	test	esi, esi
	je	SHORT $LN7@bitstr_cb
; Line 819
	push	10					; 0000000aH
	lea	eax, DWORD PTR _eptr$[esp+4]
	push	eax
	push	esi
	call	DWORD PTR __imp__strtoul
; Line 820
	mov	edx, DWORD PTR _eptr$[esp+12]
	add	esp, 12					; 0000000cH
	test	edx, edx
	je	SHORT $LN3@bitstr_cb
	cmp	BYTE PTR [edx], 0
	je	SHORT $LN3@bitstr_cb
	mov	ecx, DWORD PTR _len$[esp]
	add	ecx, esi
	cmp	edx, ecx
	jne	SHORT $LN7@bitstr_cb
$LN3@bitstr_cb:
; Line 822
	test	eax, eax
	jns	SHORT $LN4@bitstr_cb
; Line 823
	push	823					; 00000337H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	187					; 000000bbH
	push	180					; 000000b4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN7@bitstr_cb:
; Line 824
	xor	eax, eax
	pop	esi
; Line 831
	ret	0
$LN4@bitstr_cb:
; Line 826
	push	1
	push	eax
	push	DWORD PTR _bitstr$[esp+8]
	call	_ASN1_BIT_STRING_set_bit
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@bitstr_cb
; Line 827
	push	827					; 0000033bH
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	65					; 00000041H
	push	180					; 000000b4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	esi
; Line 831
	ret	0
$LN5@bitstr_cb:
; Line 830
	mov	eax, 1
	pop	esi
; Line 831
	ret	0
_bitstr_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _generate_v3
_TEXT	SEGMENT
_p$ = -464						; size = 4
_orig_der$ = -460					; size = 4
_hdr_len$ = -456					; size = 4
_cpy_start$ = -452					; size = 4
_hdr_constructed$1$ = -448				; size = 4
_new_der$1$ = -448					; size = 4
_cpy_len$1$ = -444					; size = 4
_cp$ = -440						; size = 4
_hdr_class$ = -436					; size = 4
_hdr_tag$ = -432					; size = 4
_asn1_tags$ = -428					; size = 424
__$ArrayPad$ = -4					; size = 4
_str$ = 8						; size = 4
_cnf$ = 12						; size = 4
_depth$ = 16						; size = 4
_perr$ = 20						; size = 4
_generate_v3 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 150
	mov	eax, 464				; 000001d0H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+464], eax
	mov	eax, DWORD PTR _str$[esp+460]
; Line 170
	lea	ecx, DWORD PTR _asn1_tags$[esp+464]
	push	ebx
	mov	ebx, DWORD PTR _depth$[esp+464]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _perr$[esp+472]
	xor	ebp, ebp
	push	edi
	mov	edi, DWORD PTR _cnf$[esp+476]
	push	ecx
	push	OFFSET _asn1_cb
	push	1
	push	44					; 0000002cH
	push	eax
	mov	DWORD PTR _orig_der$[esp+500], 0
	mov	DWORD PTR _asn1_tags$[esp+500], -1
	mov	DWORD PTR _asn1_tags$[esp+504], -1
	mov	DWORD PTR _asn1_tags$[esp+512], 1
	mov	DWORD PTR _asn1_tags$[esp+920], ebp
	call	_CONF_parse_list
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN8@generate_v
; Line 171
	mov	DWORD PTR [esi], 194			; 000000c2H
$LN41@generate_v:
; Line 172
	xor	eax, eax
	jmp	$LN1@generate_v
$LN8@generate_v:
; Line 176
	mov	eax, DWORD PTR _asn1_tags$[esp+488]
	cmp	eax, 16					; 00000010H
	je	SHORT $LN11@generate_v
	cmp	eax, 17					; 00000011H
	je	SHORT $LN11@generate_v
; Line 187
	push	eax
	push	DWORD PTR _asn1_tags$[esp+496]
	push	DWORD PTR _asn1_tags$[esp+504]
	call	_asn1_str2type
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN40@generate_v
$LN11@generate_v:
; Line 177
	test	edi, edi
	jne	SHORT $LN12@generate_v
; Line 178
	mov	DWORD PTR [esi], 192			; 000000c0H
; Line 179
	xor	eax, eax
	jmp	$LN1@generate_v
$LN12@generate_v:
; Line 181
	cmp	ebx, 50					; 00000032H
	jl	SHORT $LN13@generate_v
; Line 182
	mov	DWORD PTR [esi], 181			; 000000b5H
; Line 183
	xor	eax, eax
	jmp	$LN1@generate_v
$LN13@generate_v:
; Line 185
	push	esi
	push	ebx
	push	edi
	push	DWORD PTR _asn1_tags$[esp+508]
	push	eax
	call	_asn1_multi
	add	esp, 20					; 00000014H
$LN40@generate_v:
	mov	esi, eax
; Line 189
	test	esi, esi
	je	SHORT $LN41@generate_v
; Line 193
	cmp	DWORD PTR _asn1_tags$[esp+480], -1
	jne	SHORT $LN15@generate_v
	cmp	DWORD PTR _asn1_tags$[esp+900], ebp
	jne	SHORT $LN15@generate_v
; Line 194
	jmp	$LN1@generate_v
$LN15@generate_v:
; Line 197
	lea	eax, DWORD PTR _orig_der$[esp+480]
	push	eax
	push	esi
	call	_i2d_ASN1_TYPE
	mov	edi, eax
; Line 198
	push	esi
	mov	DWORD PTR _cpy_len$1$[esp+492], edi
	call	_ASN1_TYPE_free
; Line 201
	mov	eax, DWORD PTR _orig_der$[esp+492]
	add	esp, 12					; 0000000cH
; Line 204
	cmp	DWORD PTR _asn1_tags$[esp+480], -1
	mov	DWORD PTR _cpy_start$[esp+480], eax
	je	SHORT $LN16@generate_v
; Line 207
	push	edi
	lea	eax, DWORD PTR _hdr_class$[esp+484]
	push	eax
	lea	eax, DWORD PTR _hdr_tag$[esp+488]
	push	eax
	lea	eax, DWORD PTR _hdr_len$[esp+492]
	push	eax
	lea	eax, DWORD PTR _cpy_start$[esp+496]
	push	eax
	call	_ASN1_get_object
	mov	ebx, eax
	add	esp, 20					; 00000014H
; Line 209
	test	bl, bl
	js	$LN38@generate_v
; Line 212
	mov	eax, DWORD PTR _orig_der$[esp+480]
	sub	eax, DWORD PTR _cpy_start$[esp+480]
	add	edi, eax
	mov	DWORD PTR _cpy_len$1$[esp+480], edi
; Line 217
	test	bl, 1
	je	SHORT $LN19@generate_v
; Line 220
	xor	eax, eax
	mov	ebp, 2
	mov	DWORD PTR _hdr_len$[esp+480], eax
; Line 221
	jmp	SHORT $LN20@generate_v
$LN19@generate_v:
; Line 223
	mov	eax, DWORD PTR _hdr_len$[esp+480]
	and	ebx, 32					; 00000020H
	mov	DWORD PTR _hdr_constructed$1$[esp+480], ebx
	mov	ebp, ebx
$LN20@generate_v:
; Line 228
	push	DWORD PTR _asn1_tags$[esp+480]
	push	eax
	push	0
	call	_ASN1_object_size
	add	esp, 12					; 0000000cH
	mov	edi, eax
$LN16@generate_v:
; Line 234
	mov	ecx, DWORD PTR _asn1_tags$[esp+900]
	lea	esi, DWORD PTR _asn1_tags$[esp+480]
	xor	ebx, ebx
	lea	eax, DWORD PTR [ecx+ecx*4]
	lea	esi, DWORD PTR [esi+eax*4]
; Line 235
	test	ecx, ecx
	jle	SHORT $LN3@generate_v
	npad	3
$LL4@generate_v:
; Line 240
	push	DWORD PTR [esi]
	add	edi, DWORD PTR [esi+12]
	push	edi
	push	0
	mov	DWORD PTR [esi+16], edi
	call	_ASN1_object_size
	inc	ebx
	lea	esi, DWORD PTR [esi-20]
	add	esp, 12					; 0000000cH
	mov	edi, eax
	cmp	ebx, DWORD PTR _asn1_tags$[esp+900]
	jl	SHORT $LL4@generate_v
$LN3@generate_v:
; Line 245
	push	245					; 000000f5H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 255
	xor	ebx, ebx
	mov	DWORD PTR _new_der$1$[esp+480], esi
	test	esi, esi
	je	$err$43
	mov	DWORD PTR _p$[esp+480], esi
	cmp	DWORD PTR _asn1_tags$[esp+900], ebx
	jle	SHORT $LN6@generate_v
; Line 251
	lea	esi, DWORD PTR _asn1_tags$[esp+516]
$LL7@generate_v:
; Line 257
	push	DWORD PTR [esi-12]
	lea	eax, DWORD PTR _p$[esp+484]
	push	DWORD PTR [esi-16]
	push	DWORD PTR [esi]
	push	DWORD PTR [esi-8]
	push	eax
	call	_ASN1_put_object
	add	esp, 20					; 00000014H
; Line 259
	cmp	DWORD PTR [esi-4], 0
	je	SHORT $LN5@generate_v
; Line 260
	mov	eax, DWORD PTR _p$[esp+480]
	mov	BYTE PTR [eax], 0
	inc	DWORD PTR _p$[esp+480]
$LN5@generate_v:
; Line 256
	inc	ebx
	add	esi, 20					; 00000014H
	cmp	ebx, DWORD PTR _asn1_tags$[esp+900]
	jl	SHORT $LL7@generate_v
	mov	esi, DWORD PTR _new_der$1$[esp+480]
$LN6@generate_v:
; Line 265
	mov	eax, DWORD PTR _asn1_tags$[esp+480]
	cmp	eax, -1
	je	SHORT $LN23@generate_v
; Line 267
	mov	ecx, DWORD PTR _asn1_tags$[esp+484]
	test	ecx, ecx
	jne	SHORT $LN24@generate_v
	cmp	eax, 16					; 00000010H
	je	SHORT $LN25@generate_v
	cmp	eax, 17					; 00000011H
	jne	SHORT $LN24@generate_v
$LN25@generate_v:
; Line 269
	mov	ebp, 32					; 00000020H
$LN24@generate_v:
; Line 270
	push	ecx
	push	eax
	push	DWORD PTR _hdr_len$[esp+488]
	lea	eax, DWORD PTR _p$[esp+492]
	push	ebp
	push	eax
	call	_ASN1_put_object
	add	esp, 20					; 00000014H
$LN23@generate_v:
; Line 275
	push	DWORD PTR _cpy_len$1$[esp+480]
	push	DWORD PTR _cpy_start$[esp+484]
	push	DWORD PTR _p$[esp+488]
	call	_memcpy
; Line 280
	push	edi
	lea	eax, DWORD PTR _cp$[esp+496]
	mov	DWORD PTR _cp$[esp+496], esi
	push	eax
	push	0
	call	_d2i_ASN1_TYPE
	add	esp, 24					; 00000018H
	mov	ebx, eax
	jmp	SHORT $err$43
$LN38@generate_v:
	xor	esi, esi
	xor	ebx, ebx
$err$43:
; Line 283
	mov	ecx, DWORD PTR _orig_der$[esp+480]
	test	ecx, ecx
	je	SHORT $LN26@generate_v
; Line 284
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN26@generate_v:
; Line 285
	test	esi, esi
	je	SHORT $LN27@generate_v
; Line 286
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN27@generate_v:
; Line 288
	mov	eax, ebx
$LN1@generate_v:
; Line 290
	mov	ecx, DWORD PTR __$ArrayPad$[esp+480]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 464				; 000001d0H
	ret	0
_generate_v3 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_generate_v3
_TEXT	SEGMENT
_err$ = -4						; size = 4
_str$ = 8						; size = 4
_cnf$ = 12						; size = 4
_ASN1_generate_v3 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 140
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 142
	lea	eax, DWORD PTR _err$[esp+8]
	mov	DWORD PTR _err$[esp+8], 0
	push	eax
	push	0
	push	DWORD PTR _cnf$[esp+12]
	push	DWORD PTR _str$[esp+16]
	call	_generate_v3
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 143
	mov	eax, DWORD PTR _err$[esp+8]
	test	eax, eax
	je	SHORT $LN4@ASN1_gener
; Line 144
	push	144					; 00000090H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	eax
	push	178					; 000000b2H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN4@ASN1_gener:
; Line 145
	mov	eax, esi
	pop	esi
; Line 146
	pop	ecx
	ret	0
_ASN1_generate_v3 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_generate_nconf
_TEXT	SEGMENT
_cnf$ = -28						; size = 28
_str$ = 8						; size = 4
_err$1 = 12						; size = 4
_err$2 = 12						; size = 4
_nconf$ = 12						; size = 4
_ASN1_generate_nconf PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn1_gen.c
; Line 129
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 132
	mov	eax, DWORD PTR _nconf$[esp+24]
	push	esi
	test	eax, eax
	jne	SHORT $LN2@ASN1_gener
; Line 141
	mov	DWORD PTR _err$2[esp+28], eax
; Line 142
	lea	eax, DWORD PTR _err$2[esp+28]
	push	eax
	push	0
	push	0
	push	DWORD PTR _str$[esp+40]
	call	_generate_v3
	add	esp, 16					; 00000010H
; Line 133
	jmp	SHORT $LN12@ASN1_gener
$LN2@ASN1_gener:
; Line 135
	push	eax
	lea	eax, DWORD PTR _cnf$[esp+36]
	push	eax
	call	_X509V3_set_nconf
; Line 142
	lea	eax, DWORD PTR _err$1[esp+36]
	mov	DWORD PTR _err$1[esp+36], 0
	push	eax
	push	0
	lea	eax, DWORD PTR _cnf$[esp+48]
	push	eax
	push	DWORD PTR _str$[esp+48]
	call	_generate_v3
	add	esp, 24					; 00000018H
$LN12@ASN1_gener:
; Line 143
	mov	ecx, DWORD PTR _err$1[esp+28]
	mov	esi, eax
	test	ecx, ecx
	je	SHORT $LN8@ASN1_gener
; Line 144
	push	144					; 00000090H
	push	OFFSET ??_C@_0BJ@PGICCAGB@?4?2crypto?2asn1?2asn1_gen?4c?$AA@
	push	ecx
	push	178					; 000000b2H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN8@ASN1_gener:
; Line 136
	mov	eax, esi
	pop	esi
; Line 137
	add	esp, 28					; 0000001cH
	ret	0
_ASN1_generate_nconf ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_key.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DSA_generate_key
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_rand_range:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_init:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_mod_exp:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _dsa_builtin_keygen
_TEXT	SEGMENT
_ctx$1$ = -24						; size = 4
_local_prk$1 = -20					; size = 20
_dsa$ = 8						; size = 4
_dsa_builtin_keygen PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_key.c
; Line 92
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	ebx
	push	ebp
; Line 93
	xor	ebp, ebp
; Line 97
	call	_BN_CTX_new
	mov	ebx, eax
	mov	DWORD PTR _ctx$1$[esp+32], ebx
	test	ebx, ebx
	je	$LN29@dsa_builti
; Line 100
	push	esi
	push	edi
	mov	edi, DWORD PTR _dsa$[esp+36]
	mov	esi, DWORD PTR [edi+28]
	test	esi, esi
	jne	SHORT $LL4@dsa_builti
; Line 101
	call	_BN_new
	mov	esi, eax
	test	esi, esi
	je	$LN17@dsa_builti
	npad	3
$LL4@dsa_builti:
; Line 107
	push	DWORD PTR [edi+16]
	push	esi
	call	_BN_rand_range
	add	esp, 8
	test	eax, eax
	je	$LN16@dsa_builti
; Line 109
	cmp	DWORD PTR [esi+4], ebp
	je	SHORT $LL4@dsa_builti
; Line 111
	mov	ebx, DWORD PTR [edi+24]
	test	ebx, ebx
	jne	SHORT $LN10@dsa_builti
; Line 112
	call	_BN_new
	mov	ebx, eax
	test	ebx, ebx
	je	$LN32@dsa_builti
$LN10@dsa_builti:
; Line 121
	test	BYTE PTR [edi+40], 2
	jne	SHORT $LN13@dsa_builti
; Line 122
	lea	eax, DWORD PTR _local_prk$1[esp+40]
	push	eax
	call	_BN_init
; Line 124
	mov	eax, DWORD PTR [esi]
	lea	edx, DWORD PTR _local_prk$1[esp+44]
	mov	ecx, DWORD PTR [esi+16]
	add	esp, 4
	mov	DWORD PTR _local_prk$1[esp+40], eax
	and	ecx, -2					; fffffffeH
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR _local_prk$1[esp+44], eax
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _local_prk$1[esp+48], eax
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR _local_prk$1[esp+52], eax
	mov	eax, DWORD PTR _local_prk$1[esp+56]
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_prk$1[esp+56], ecx
; Line 125
	jmp	SHORT $LN14@dsa_builti
$LN13@dsa_builti:
; Line 126
	mov	edx, esi
$LN14@dsa_builti:
; Line 128
	push	DWORD PTR _ctx$1$[esp+40]
	push	DWORD PTR [edi+12]
	push	edx
	push	DWORD PTR [edi+20]
	push	ebx
	call	_BN_mod_exp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$35
; Line 132
	mov	DWORD PTR [edi+28], esi
; Line 134
	mov	ebp, 1
	mov	DWORD PTR [edi+24], ebx
$err$35:
; Line 137
	test	ebx, ebx
	je	SHORT $LN32@dsa_builti
	cmp	DWORD PTR [edi+24], 0
	jne	SHORT $LN32@dsa_builti
; Line 138
	push	ebx
	call	_BN_free
	add	esp, 4
$LN32@dsa_builti:
	mov	ebx, DWORD PTR _ctx$1$[esp+40]
$LN16@dsa_builti:
; Line 139
	test	esi, esi
	je	SHORT $LN17@dsa_builti
	cmp	DWORD PTR [edi+28], 0
	jne	SHORT $LN17@dsa_builti
; Line 140
	push	esi
	call	_BN_free
	add	esp, 4
$LN17@dsa_builti:
; Line 142
	push	ebx
	call	_BN_CTX_free
	add	esp, 4
	pop	edi
	pop	esi
$LN29@dsa_builti:
; Line 143
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 144
	add	esp, 24					; 00000018H
	ret	0
_dsa_builtin_keygen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_generate_key
_TEXT	SEGMENT
_dsa$ = 8						; size = 4
_DSA_generate_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_key.c
; Line 82
	mov	ecx, DWORD PTR _dsa$[esp-4]
	mov	eax, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR [eax+44]
	test	eax, eax
	je	SHORT $LN2@DSA_genera
; Line 83
	mov	DWORD PTR _dsa$[esp-4], ecx
	jmp	eax
$LN2@DSA_genera:
; Line 88
	mov	DWORD PTR _dsa$[esp-4], ecx
	jmp	_dsa_builtin_keygen
_DSA_generate_key ENDP
_TEXT	ENDS
END

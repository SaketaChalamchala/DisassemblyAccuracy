; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec2_oct.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ec_GF2m_simple_set_compressed_coordinates
PUBLIC	_ec_GF2m_simple_point2oct
PUBLIC	_ec_GF2m_simple_oct2point
PUBLIC	??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_peek_last_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_ucmp:PROC
EXTRN	_BN_GF2m_add:PROC
EXTRN	_BN_GF2m_mod_arr:PROC
EXTRN	_BN_GF2m_mod_sqrt_arr:PROC
EXTRN	_BN_GF2m_mod_solve_quad_arr:PROC
EXTRN	_EC_GROUP_get_degree:PROC
EXTRN	_EC_POINT_set_to_infinity:PROC
EXTRN	_EC_POINT_set_affine_coordinates_GF2m:PROC
EXTRN	_EC_POINT_get_affine_coordinates_GF2m:PROC
EXTRN	_EC_POINT_set_compressed_coordinates_GF2m:PROC
EXTRN	_EC_POINT_is_at_infinity:PROC
EXTRN	_EC_POINT_is_on_curve:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
CONST	SEGMENT
??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@ DB '.\crypto\ec\ec2_oc'
	DB	't.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GF2m_simple_oct2point
_TEXT	SEGMENT
_y$1$ = -16						; size = 4
_field_len$1$ = -12					; size = 4
_y_bit$1$ = -8						; size = 4
_yxi$1$ = -4						; size = 4
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_buf$ = 16						; size = 4
_x$1$ = 20						; size = 4
_len$ = 20						; size = 4
_ctx$ = 24						; size = 4
_ec_GF2m_simple_oct2point PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec2_oct.c
; Line 300
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	edi
; Line 308
	mov	edi, DWORD PTR _len$[esp+20]
	xor	ebx, ebx
	test	edi, edi
	jne	SHORT $LN2@ec_GF2m_si
; Line 309
	push	309					; 00000135H
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	100					; 00000064H
	push	160					; 000000a0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 310
	xor	eax, eax
	pop	edi
	pop	ebx
; Line 402
	add	esp, 16					; 00000010H
	ret	0
$LN2@ec_GF2m_si:
; Line 312
	mov	ecx, DWORD PTR _buf$[esp+20]
	push	esi
	movzx	esi, BYTE PTR [ecx]
; Line 313
	mov	eax, esi
	and	eax, 1
	mov	DWORD PTR _y_bit$1$[esp+28], eax
; Line 314
	and	esi, -2					; fffffffeH
; Line 317
	je	SHORT $LN5@ec_GF2m_si
	cmp	esi, 2
	je	SHORT $LN3@ec_GF2m_si
	cmp	esi, 4
	je	SHORT $LN5@ec_GF2m_si
	cmp	esi, 6
	je	SHORT $LN3@ec_GF2m_si
; Line 318
	push	318					; 0000013eH
; Line 319
	jmp	SHORT $LN42@ec_GF2m_si
$LN3@ec_GF2m_si:
; Line 321
	cmp	esi, 4
	jne	SHORT $LN4@ec_GF2m_si
$LN5@ec_GF2m_si:
	test	eax, eax
	je	SHORT $LN4@ec_GF2m_si
; Line 322
	push	322					; 00000142H
; Line 323
	jmp	SHORT $LN42@ec_GF2m_si
$LN4@ec_GF2m_si:
; Line 326
	test	esi, esi
	jne	SHORT $LN6@ec_GF2m_si
; Line 327
	cmp	edi, 1
	je	SHORT $LN7@ec_GF2m_si
; Line 328
	push	328					; 00000148H
$LN42@ec_GF2m_si:
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	102					; 00000066H
	push	160					; 000000a0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 329
	xor	eax, eax
	pop	esi
	pop	edi
	pop	ebx
; Line 402
	add	esp, 16					; 00000010H
	ret	0
$LN7@ec_GF2m_si:
; Line 332
	push	DWORD PTR _point$[esp+24]
	push	DWORD PTR _group$[esp+28]
	call	_EC_POINT_set_to_infinity
	add	esp, 8
	pop	esi
	pop	edi
	pop	ebx
; Line 402
	add	esp, 16					; 00000010H
	ret	0
$LN6@ec_GF2m_si:
	push	ebp
; Line 335
	mov	ebp, DWORD PTR _group$[esp+28]
	push	ebp
	call	_EC_GROUP_get_degree
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _field_len$1$[esp+32], eax
; Line 336
	cmp	esi, 2
	jne	SHORT $LN26@ec_GF2m_si
	inc	eax
	jmp	SHORT $LN27@ec_GF2m_si
$LN26@ec_GF2m_si:
	lea	eax, DWORD PTR [eax*2+1]
$LN27@ec_GF2m_si:
; Line 340
	cmp	edi, eax
	je	SHORT $LN8@ec_GF2m_si
; Line 341
	push	341					; 00000155H
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	102					; 00000066H
	push	160					; 000000a0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN41@ec_GF2m_si:
; Line 342
	pop	ebp
	pop	esi
	pop	edi
	xor	eax, eax
	pop	ebx
; Line 402
	add	esp, 16					; 00000010H
	ret	0
$LN8@ec_GF2m_si:
; Line 345
	mov	edi, DWORD PTR _ctx$[esp+28]
	test	edi, edi
	jne	SHORT $LN10@ec_GF2m_si
; Line 346
	call	_BN_CTX_new
	mov	ebx, eax
	mov	edi, ebx
; Line 347
	test	ebx, ebx
	je	SHORT $LN41@ec_GF2m_si
$LN10@ec_GF2m_si:
; Line 351
	push	edi
	call	_BN_CTX_start
; Line 352
	push	edi
	call	_BN_CTX_get
; Line 353
	push	edi
	mov	DWORD PTR _x$1$[esp+40], eax
	call	_BN_CTX_get
; Line 354
	push	edi
	mov	DWORD PTR _y$1$[esp+48], eax
	call	_BN_CTX_get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _yxi$1$[esp+32], eax
; Line 355
	test	eax, eax
	je	SHORT $LN35@ec_GF2m_si
; Line 358
	push	DWORD PTR _x$1$[esp+28]
	mov	ecx, DWORD PTR _buf$[esp+32]
	push	DWORD PTR _field_len$1$[esp+36]
	inc	ecx
	push	ecx
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN35@ec_GF2m_si
; Line 360
	lea	eax, DWORD PTR [ebp+72]
	push	eax
	push	DWORD PTR _x$1$[esp+32]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN13@ec_GF2m_si
; Line 361
	push	361					; 00000169H
$LN39@ec_GF2m_si:
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	102					; 00000066H
$LN40@ec_GF2m_si:
	push	160					; 000000a0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN35@ec_GF2m_si:
	xor	ebp, ebp
$err$46:
; Line 398
	push	edi
	call	_BN_CTX_end
	add	esp, 4
; Line 399
	test	ebx, ebx
	je	SHORT $LN24@ec_GF2m_si
; Line 400
	push	ebx
	call	_BN_CTX_free
	add	esp, 4
$LN24@ec_GF2m_si:
; Line 401
	mov	eax, ebp
	pop	ebp
	pop	esi
	pop	edi
	pop	ebx
; Line 402
	add	esp, 16					; 00000010H
	ret	0
$LN13@ec_GF2m_si:
; Line 365
	cmp	esi, 2
	jne	SHORT $LN14@ec_GF2m_si
; Line 366
	mov	esi, DWORD PTR _point$[esp+28]
	push	edi
	push	DWORD PTR _y_bit$1$[esp+36]
	push	DWORD PTR _x$1$[esp+36]
	push	esi
	push	ebp
	call	_EC_POINT_set_compressed_coordinates_GF2m
; Line 369
	jmp	$LN44@ec_GF2m_si
$LN14@ec_GF2m_si:
; Line 370
	push	DWORD PTR _y$1$[esp+32]
	mov	ecx, DWORD PTR _buf$[esp+32]
	mov	eax, DWORD PTR _field_len$1$[esp+36]
	inc	ecx
	push	eax
	add	eax, ecx
	push	eax
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN35@ec_GF2m_si
; Line 372
	lea	eax, DWORD PTR [ebp+72]
	push	eax
	push	DWORD PTR _y$1$[esp+36]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN18@ec_GF2m_si
; Line 373
	push	373					; 00000175H
; Line 374
	jmp	$LN39@ec_GF2m_si
$LN18@ec_GF2m_si:
; Line 376
	cmp	esi, 6
	jne	SHORT $LN21@ec_GF2m_si
; Line 377
	mov	eax, DWORD PTR [ebp]
	mov	esi, DWORD PTR _yxi$1$[esp+32]
	push	edi
	push	DWORD PTR _x$1$[esp+32]
	mov	eax, DWORD PTR [eax+140]
	push	DWORD PTR _y$1$[esp+40]
	push	esi
	push	ebp
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN35@ec_GF2m_si
; Line 379
	cmp	DWORD PTR [esi+4], 0
	jle	SHORT $LN28@ec_GF2m_si
	mov	eax, DWORD PTR [esi]
	test	BYTE PTR [eax], 1
	je	SHORT $LN28@ec_GF2m_si
	mov	eax, 1
	jmp	SHORT $LN29@ec_GF2m_si
$LN28@ec_GF2m_si:
	xor	eax, eax
$LN29@ec_GF2m_si:
	cmp	DWORD PTR _y_bit$1$[esp+32], eax
	je	SHORT $LN21@ec_GF2m_si
; Line 380
	push	380					; 0000017cH
; Line 381
	jmp	$LN39@ec_GF2m_si
$LN21@ec_GF2m_si:
; Line 385
	mov	esi, DWORD PTR _point$[esp+28]
	push	edi
	push	DWORD PTR _y$1$[esp+36]
	push	DWORD PTR _x$1$[esp+36]
	push	esi
	push	ebp
	call	_EC_POINT_set_affine_coordinates_GF2m
$LN44@ec_GF2m_si:
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN35@ec_GF2m_si
; Line 390
	push	edi
	push	esi
	push	ebp
	call	_EC_POINT_is_on_curve
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LN23@ec_GF2m_si
; Line 391
	push	391					; 00000187H
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	107					; 0000006bH
; Line 392
	jmp	$LN40@ec_GF2m_si
$LN23@ec_GF2m_si:
; Line 395
	mov	ebp, 1
	jmp	$err$46
_ec_GF2m_simple_oct2point ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GF2m_simple_point2oct
_TEXT	SEGMENT
_y$1$ = -20						; size = 4
_field_len$1$ = -16					; size = 4
_new_ctx$1$ = -12					; size = 4
_ret$1$ = -8						; size = 4
_skip$1$ = -4						; size = 4
_yxi$1$ = -4						; size = 4
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$1$ = 16						; size = 4
_form$ = 16						; size = 4
_buf$ = 20						; size = 4
_len$ = 24						; size = 4
_ctx$ = 28						; size = 4
_ec_GF2m_simple_point2oct PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec2_oct.c
; Line 176
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
; Line 185
	mov	ebx, DWORD PTR _form$[esp+20]
	mov	DWORD PTR _new_ctx$1$[esp+24], 0
	push	ebp
	push	esi
	push	edi
	cmp	ebx, 2
	je	SHORT $LN6@ec_GF2m_si
	cmp	ebx, 4
	je	SHORT $LN6@ec_GF2m_si
	cmp	ebx, 6
	je	SHORT $LN6@ec_GF2m_si
; Line 186
	push	186					; 000000baH
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	104					; 00000068H
	push	161					; 000000a1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 290
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 291
	add	esp, 20					; 00000014H
	ret	0
$LN6@ec_GF2m_si:
; Line 190
	push	DWORD PTR _point$[esp+32]
	mov	esi, DWORD PTR _group$[esp+36]
	push	esi
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@ec_GF2m_si
; Line 192
	mov	eax, DWORD PTR _buf$[esp+32]
	test	eax, eax
	je	SHORT $LN8@ec_GF2m_si
; Line 193
	cmp	DWORD PTR _len$[esp+32], 1
	jae	SHORT $LN9@ec_GF2m_si
; Line 194
	push	194					; 000000c2H
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	100					; 00000064H
	push	161					; 000000a1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN49@ec_GF2m_si:
; Line 195
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 291
	add	esp, 20					; 00000014H
	ret	0
$LN9@ec_GF2m_si:
; Line 197
	mov	BYTE PTR [eax], 0
$LN8@ec_GF2m_si:
	pop	edi
	pop	esi
	pop	ebp
; Line 199
	mov	eax, 1
	pop	ebx
; Line 291
	add	esp, 20					; 00000014H
	ret	0
$LN7@ec_GF2m_si:
; Line 203
	push	esi
	call	_EC_GROUP_get_degree
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _field_len$1$[esp+36], eax
; Line 204
	cmp	ebx, 2
	jne	SHORT $LN30@ec_GF2m_si
	inc	eax
	jmp	SHORT $LN47@ec_GF2m_si
$LN30@ec_GF2m_si:
	lea	eax, DWORD PTR [eax*2+1]
$LN47@ec_GF2m_si:
; Line 209
	mov	edi, DWORD PTR _buf$[esp+32]
	mov	DWORD PTR _ret$1$[esp+36], eax
	test	edi, edi
	je	$LN43@ec_GF2m_si
; Line 210
	cmp	DWORD PTR _len$[esp+32], eax
	jae	SHORT $LN11@ec_GF2m_si
; Line 211
	push	211					; 000000d3H
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	100					; 00000064H
	push	161					; 000000a1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 290
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 291
	add	esp, 20					; 00000014H
	ret	0
$LN11@ec_GF2m_si:
; Line 215
	mov	ebp, DWORD PTR _ctx$[esp+32]
	test	ebp, ebp
	jne	SHORT $LN13@ec_GF2m_si
; Line 216
	call	_BN_CTX_new
	mov	esi, eax
	mov	DWORD PTR _new_ctx$1$[esp+36], esi
	mov	ebp, esi
; Line 217
	test	esi, esi
	je	$LN49@ec_GF2m_si
	mov	esi, DWORD PTR _group$[esp+32]
$LN13@ec_GF2m_si:
; Line 221
	push	ebp
	call	_BN_CTX_start
; Line 223
	push	ebp
	call	_BN_CTX_get
; Line 224
	push	ebp
	mov	DWORD PTR _x$1$[esp+44], eax
	call	_BN_CTX_get
; Line 225
	push	ebp
	mov	DWORD PTR _y$1$[esp+52], eax
	call	_BN_CTX_get
	add	esp, 16					; 00000010H
	mov	DWORD PTR _yxi$1$[esp+36], eax
; Line 226
	test	eax, eax
	je	$LN40@ec_GF2m_si
; Line 229
	push	ebp
	push	DWORD PTR _y$1$[esp+40]
	push	DWORD PTR _x$1$[esp+40]
	push	DWORD PTR _point$[esp+44]
	push	esi
	call	_EC_POINT_get_affine_coordinates_GF2m
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN40@ec_GF2m_si
; Line 233
	mov	ecx, DWORD PTR _x$1$[esp+32]
	mov	BYTE PTR [edi], bl
	cmp	ebx, 4
	je	SHORT $LN18@ec_GF2m_si
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN18@ec_GF2m_si
; Line 234
	mov	eax, DWORD PTR [esi]
	push	ebp
	push	ecx
	push	DWORD PTR _y$1$[esp+44]
	mov	eax, DWORD PTR [eax+140]
	push	DWORD PTR _yxi$1$[esp+48]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN40@ec_GF2m_si
; Line 236
	mov	eax, DWORD PTR _yxi$1$[esp+36]
	mov	ecx, DWORD PTR _x$1$[esp+32]
	cmp	DWORD PTR [eax+4], 0
	jle	SHORT $LN18@ec_GF2m_si
	mov	eax, DWORD PTR [eax]
	test	BYTE PTR [eax], 1
	je	SHORT $LN18@ec_GF2m_si
; Line 237
	inc	BYTE PTR [edi]
$LN18@ec_GF2m_si:
; Line 242
	push	ecx
	mov	esi, 1
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	mov	edx, DWORD PTR _field_len$1$[esp+36]
	sar	eax, 3
	sub	edx, eax
	mov	DWORD PTR _skip$1$[esp+36], edx
; Line 243
	cmp	edx, DWORD PTR _field_len$1$[esp+36]
	jbe	SHORT $LN32@ec_GF2m_si
; Line 244
	push	244					; 000000f4H
$LN48@ec_GF2m_si:
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	68					; 00000044H
	push	161					; 000000a1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN40@ec_GF2m_si:
; Line 287
	push	ebp
	call	_BN_CTX_end
; Line 288
	mov	eax, DWORD PTR _new_ctx$1$[esp+40]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN28@ec_GF2m_si
; Line 289
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN28@ec_GF2m_si:
; Line 290
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 291
	add	esp, 20					; 00000014H
	ret	0
$LN32@ec_GF2m_si:
; Line 247
	test	edx, edx
	je	SHORT $LN2@ec_GF2m_si
	mov	esi, DWORD PTR _skip$1$[esp+36]
	inc	edi
	mov	ecx, edx
	xor	eax, eax
	shr	ecx, 2
	rep stosd
	mov	ecx, edx
	and	ecx, 3
	inc	esi
	rep stosb
	mov	edi, DWORD PTR _buf$[esp+32]
$LN2@ec_GF2m_si:
; Line 251
	lea	eax, DWORD PTR [esi+edi]
	push	eax
	push	DWORD PTR _x$1$[esp+36]
	call	_BN_bn2bin
; Line 252
	add	esi, eax
	add	esp, 8
; Line 253
	mov	eax, DWORD PTR _field_len$1$[esp+36]
	inc	eax
	cmp	esi, eax
	je	SHORT $LN20@ec_GF2m_si
; Line 254
	push	254					; 000000feH
; Line 255
	jmp	SHORT $LN48@ec_GF2m_si
$LN20@ec_GF2m_si:
; Line 259
	cmp	ebx, 4
	je	SHORT $LN22@ec_GF2m_si
	cmp	ebx, 6
	jne	SHORT $LN21@ec_GF2m_si
$LN22@ec_GF2m_si:
; Line 260
	push	DWORD PTR _y$1$[esp+36]
	call	_BN_num_bits
	mov	ebx, DWORD PTR _field_len$1$[esp+40]
	add	eax, 7
	cdq
	add	esp, 4
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	sub	ebx, eax
; Line 261
	cmp	ebx, DWORD PTR _field_len$1$[esp+36]
	jbe	SHORT $LN33@ec_GF2m_si
; Line 262
	push	262					; 00000106H
; Line 263
	jmp	$LN48@ec_GF2m_si
$LN33@ec_GF2m_si:
; Line 265
	test	ebx, ebx
	je	SHORT $LN4@ec_GF2m_si
	mov	ecx, ebx
	add	edi, esi
	mov	edx, ecx
	xor	eax, eax
	shr	ecx, 2
	rep stosd
	mov	ecx, edx
	and	ecx, 3
	add	esi, ebx
	rep stosb
	mov	edi, DWORD PTR _buf$[esp+32]
$LN4@ec_GF2m_si:
; Line 269
	lea	eax, DWORD PTR [esi+edi]
	push	eax
	push	DWORD PTR _y$1$[esp+40]
	call	_BN_bn2bin
	add	esp, 8
; Line 270
	add	esi, eax
$LN21@ec_GF2m_si:
; Line 273
	mov	edi, DWORD PTR _ret$1$[esp+36]
	cmp	esi, edi
	je	SHORT $LN41@ec_GF2m_si
; Line 274
	push	274					; 00000112H
	jmp	$LN48@ec_GF2m_si
$LN41@ec_GF2m_si:
; Line 280
	push	ebp
	call	_BN_CTX_end
; Line 281
	mov	eax, DWORD PTR _new_ctx$1$[esp+40]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN26@ec_GF2m_si
; Line 282
	push	eax
	call	_BN_CTX_free
	add	esp, 4
; Line 283
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 291
	add	esp, 20					; 00000014H
	ret	0
$LN43@ec_GF2m_si:
	mov	edi, DWORD PTR _ret$1$[esp+36]
$LN26@ec_GF2m_si:
; Line 283
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 291
	add	esp, 20					; 00000014H
	ret	0
_ec_GF2m_simple_point2oct ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GF2m_simple_set_compressed_coordinates
_TEXT	SEGMENT
_y$1$ = -12						; size = 4
_z0$1$ = -8						; size = 4
_z$1$ = -8						; size = 4
_y_bit$1$ = -4						; size = 4
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x_$ = 16						; size = 4
_y_bit$ = 20						; size = 4
_x$1$ = 24						; size = 4
_ctx$ = 24						; size = 4
_ec_GF2m_simple_set_compressed_coordinates PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec2_oct.c
; Line 96
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 97
	xor	edi, edi
; Line 99
	xor	ebx, ebx
; Line 102
	call	_ERR_clear_error
; Line 104
	mov	esi, DWORD PTR _ctx$[esp+20]
	test	esi, esi
	jne	SHORT $LN3@ec_GF2m_si
; Line 105
	call	_BN_CTX_new
	mov	edi, eax
	mov	esi, edi
; Line 106
	test	edi, edi
	jne	SHORT $LN3@ec_GF2m_si
	pop	edi
	pop	esi
	pop	ebx
; Line 166
	add	esp, 12					; 0000000cH
	ret	0
$LN3@ec_GF2m_si:
; Line 110
	xor	eax, eax
	cmp	DWORD PTR _y_bit$[esp+20], eax
	push	ebp
	setne	al
; Line 112
	push	esi
	mov	DWORD PTR _y_bit$1$[esp+32], eax
	call	_BN_CTX_start
; Line 113
	push	esi
	call	_BN_CTX_get
; Line 114
	push	esi
	mov	ebp, eax
	call	_BN_CTX_get
; Line 115
	push	esi
	mov	DWORD PTR _x$1$[esp+40], eax
	call	_BN_CTX_get
; Line 116
	push	esi
	mov	DWORD PTR _y$1$[esp+48], eax
	call	_BN_CTX_get
	add	esp, 20					; 00000014H
	mov	DWORD PTR _z$1$[esp+28], eax
; Line 117
	test	eax, eax
	je	$err$35
; Line 120
	mov	ebx, DWORD PTR _group$[esp+24]
	lea	eax, DWORD PTR [ebx+92]
	push	eax
	push	DWORD PTR _x_$[esp+28]
	push	DWORD PTR _x$1$[esp+32]
	call	_BN_GF2m_mod_arr
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN31@ec_GF2m_si
; Line 122
	mov	ecx, DWORD PTR _x$1$[esp+24]
; Line 123
	push	esi
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN6@ec_GF2m_si
	lea	eax, DWORD PTR [ebx+92]
	push	eax
	lea	eax, DWORD PTR [ebx+136]
	push	eax
	push	DWORD PTR _y$1$[esp+40]
	call	_BN_GF2m_mod_sqrt_arr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN31@ec_GF2m_si
; Line 125
	mov	ebp, DWORD PTR _x$1$[esp+24]
	jmp	$LN18@ec_GF2m_si
$LN6@ec_GF2m_si:
; Line 126
	mov	eax, DWORD PTR [ebx]
	push	ecx
	push	ebp
	push	ebx
	mov	eax, DWORD PTR [eax+136]
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN31@ec_GF2m_si
; Line 128
	mov	ecx, DWORD PTR [ebx]
	lea	eax, DWORD PTR [ebx+136]
	push	esi
	push	ebp
	push	eax
	mov	eax, DWORD PTR [ecx+140]
	push	ebp
	push	ebx
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN31@ec_GF2m_si
; Line 130
	push	ebp
	lea	eax, DWORD PTR [ebx+116]
	push	eax
	push	ebp
	call	_BN_GF2m_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN31@ec_GF2m_si
; Line 132
	push	ebp
	push	DWORD PTR _x$1$[esp+28]
	push	ebp
	call	_BN_GF2m_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN31@ec_GF2m_si
; Line 134
	push	esi
	lea	eax, DWORD PTR [ebx+92]
	push	eax
	push	ebp
	mov	ebp, DWORD PTR _z$1$[esp+40]
	push	ebp
	call	_BN_GF2m_mod_solve_quad_arr
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN13@ec_GF2m_si
; Line 135
	call	_ERR_peek_last_error
; Line 138
	mov	ecx, eax
	and	ecx, -16777216				; ff000000H
	cmp	ecx, 50331648				; 03000000H
	jne	SHORT $LN14@ec_GF2m_si
	and	eax, 4095				; 00000fffH
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN14@ec_GF2m_si
; Line 139
	call	_ERR_clear_error
; Line 140
	push	141					; 0000008dH
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	110					; 0000006eH
$LN33@ec_GF2m_si:
; Line 143
	push	164					; 000000a4H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN31@ec_GF2m_si:
	xor	ebx, ebx
$err$35:
; Line 162
	push	esi
	call	_BN_CTX_end
	add	esp, 4
	pop	ebp
; Line 163
	test	edi, edi
	je	SHORT $LN20@ec_GF2m_si
; Line 164
	push	edi
	call	_BN_CTX_free
	add	esp, 4
$LN20@ec_GF2m_si:
; Line 165
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 166
	add	esp, 12					; 0000000cH
	ret	0
$LN14@ec_GF2m_si:
; Line 143
	push	144					; 00000090H
	push	OFFSET ??_C@_0BG@JEGNHKBA@?4?2crypto?2ec?2ec2_oct?4c?$AA@
	push	3
; Line 145
	jmp	SHORT $LN33@ec_GF2m_si
$LN13@ec_GF2m_si:
; Line 147
	cmp	DWORD PTR [ebp+4], 0
	jle	SHORT $LN22@ec_GF2m_si
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _z0$1$[esp+28], 1
	test	BYTE PTR [eax], 1
	jne	SHORT $LN23@ec_GF2m_si
$LN22@ec_GF2m_si:
	mov	DWORD PTR _z0$1$[esp+28], 0
$LN23@ec_GF2m_si:
; Line 148
	mov	eax, DWORD PTR [ebx]
	push	esi
	push	ebp
	mov	ebp, DWORD PTR _x$1$[esp+32]
	mov	eax, DWORD PTR [eax+132]
	push	ebp
	push	DWORD PTR _y$1$[esp+40]
	push	ebx
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN31@ec_GF2m_si
; Line 150
	mov	eax, DWORD PTR _y_bit$1$[esp+28]
	cmp	DWORD PTR _z0$1$[esp+28], eax
	je	SHORT $LN18@ec_GF2m_si
; Line 151
	mov	eax, DWORD PTR _y$1$[esp+28]
	push	ebp
	push	eax
	push	eax
	call	_BN_GF2m_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN31@ec_GF2m_si
$LN18@ec_GF2m_si:
; Line 156
	push	esi
	push	DWORD PTR _y$1$[esp+32]
	push	ebp
	push	DWORD PTR _point$[esp+36]
	push	ebx
	call	_EC_POINT_set_affine_coordinates_GF2m
	xor	ebx, ebx
	add	esp, 20					; 00000014H
	test	eax, eax
	mov	ecx, 1
	cmovne	ebx, ecx
	jmp	$err$35
_ec_GF2m_simple_set_compressed_coordinates ENDP
_TEXT	ENDS
END

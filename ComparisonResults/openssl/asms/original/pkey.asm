; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\pkey.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_pkey_main
PUBLIC	??_C@_07CGGPPMGB@?9inform?$AA@			; `string'
PUBLIC	??_C@_08LPHBEAIF@?9outform?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_08KCDBEMAI@?9passout?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_06NLLOJDKN@?9pubin?$AA@			; `string'
PUBLIC	??_C@_07NGPHMOHJ@?9pubout?$AA@			; `string'
PUBLIC	??_C@_09ICLKJGM@?9text_pub?$AA@			; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_06JPEJAHHH@?9noout?$AA@			; `string'
PUBLIC	??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@IBLBALGG@Usage?5pkey?5?$FLoptions?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@	; `string'
PUBLIC	??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@ ; `string'
PUBLIC	??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@ ; `string'
PUBLIC	??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@ ; `string'
PUBLIC	??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@ ; `string'
PUBLIC	??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ ; `string'
PUBLIC	??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0L@KEAMIOLD@Public?5Key?$AA@		; `string'
PUBLIC	??_C@_03ICHNJLJF@key?$AA@			; `string'
PUBLIC	??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_OPENSSL_add_all_algorithms_noconf:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_print_public:PROC
EXTRN	_EVP_PKEY_print_private:PROC
EXTRN	_i2d_PrivateKey_bio:PROC
EXTRN	_i2d_PUBKEY_bio:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_key:PROC
EXTRN	_load_pubkey:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_PEM_write_bio_PrivateKey:PROC
EXTRN	_PEM_write_bio_PUBKEY:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
;	COMDAT ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@
CONST	SEGMENT
??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@ DB 'Bad format'
	DB	' specified for key', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICHNJLJF@key?$AA@
CONST	SEGMENT
??_C@_03ICHNJLJF@key?$AA@ DB 'key', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
CONST	SEGMENT
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ DB 'Public Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ DB 'Can''t op'
	DB	'en output file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ DB 'Error getting pas'
	DB	'swords', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
CONST	SEGMENT
??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ DB '-en'
	DB	'gine e       use engine e, possibly a hardware device.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@
CONST	SEGMENT
??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@ DB '-passout'
	DB	' arg    output file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ DB '-out '
	DB	'file       output file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@
CONST	SEGMENT
??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@ DB '-ou'
	DB	'tform X      output format (DER or PEM)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@
CONST	SEGMENT
??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@ DB '-passi'
	DB	'n arg     input file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@
CONST	SEGMENT
??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@ DB '-i'
	DB	'nform X       input format (DER or PEM)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ DB '-in f'
	DB	'ile        input file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
CONST	SEGMENT
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ DB 'where options are', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IBLBALGG@Usage?5pkey?5?$FLoptions?$FN?6?$AA@
CONST	SEGMENT
??_C@_0BG@IBLBALGG@Usage?5pkey?5?$FLoptions?$FN?6?$AA@ DB 'Usage pkey [op'
	DB	'tions]', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@ DB 'Unknown cipher %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06JPEJAHHH@?9noout?$AA@
CONST	SEGMENT
??_C@_06JPEJAHHH@?9noout?$AA@ DB '-noout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09ICLKJGM@?9text_pub?$AA@
CONST	SEGMENT
??_C@_09ICLKJGM@?9text_pub?$AA@ DB '-text_pub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGPHMOHJ@?9pubout?$AA@
CONST	SEGMENT
??_C@_07NGPHMOHJ@?9pubout?$AA@ DB '-pubout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLLOJDKN@?9pubin?$AA@
CONST	SEGMENT
??_C@_06NLLOJDKN@?9pubin?$AA@ DB '-pubin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KCDBEMAI@?9passout?$AA@
CONST	SEGMENT
??_C@_08KCDBEMAI@?9passout?$AA@ DB '-passout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPHBEAIF@?9outform?$AA@
CONST	SEGMENT
??_C@_08LPHBEAIF@?9outform?$AA@ DB '-outform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGGPPMGB@?9inform?$AA@
CONST	SEGMENT
??_C@_07CGGPPMGB@?9inform?$AA@ DB '-inform', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_main
_TEXT	SEGMENT
_pubout$1$ = -64					; size = 4
_passin$ = -60						; size = 4
_informat$1$ = -56					; size = 4
_infile$1$ = -52					; size = 4
_text$1$ = -48						; size = 4
_pubtext$1$ = -44					; size = 4
_out$1$ = -40						; size = 4
_passout$ = -36						; size = 4
_engine$1$ = -32					; size = 4
_passargout$1$ = -28					; size = 4
_passargin$1$ = -24					; size = 4
_outfile$1$ = -20					; size = 4
_pubin$1$ = -16						; size = 4
_noout$1$ = -12						; size = 4
_outformat$1$ = -8					; size = 4
_cipher$1$ = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_pkey_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\pkey.c
; Line 71
	mov	eax, 64					; 00000040H
	call	__chkstk
; Line 73
	xor	eax, eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	DWORD PTR _infile$1$[esp+80], eax
; Line 85
	lea	esi, DWORD PTR [eax+1]
	xor	edi, edi
	mov	DWORD PTR _passargin$1$[esp+80], eax
	mov	DWORD PTR _passargout$1$[esp+80], eax
	xor	ebp, ebp
	mov	DWORD PTR _out$1$[esp+80], eax
	xor	ebx, ebx
	mov	DWORD PTR _cipher$1$[esp+80], eax
	mov	DWORD PTR _pubin$1$[esp+80], eax
	mov	DWORD PTR _pubout$1$[esp+80], eax
	mov	DWORD PTR _pubtext$1$[esp+80], eax
	mov	DWORD PTR _text$1$[esp+80], eax
	mov	DWORD PTR _noout$1$[esp+80], eax
	mov	DWORD PTR _passin$[esp+80], eax
	mov	DWORD PTR _passout$[esp+80], eax
	mov	DWORD PTR _engine$1$[esp+80], eax
; Line 87
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _outfile$1$[esp+80], edi
	test	eax, eax
	jne	SHORT $LN4@pkey_main
; Line 88
	push	eax
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _bio_err, eax
$LN4@pkey_main:
; Line 90
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$end$126
; Line 93
	mov	DWORD PTR _informat$1$[esp+80], 3
; Line 94
	mov	DWORD PTR _outformat$1$[esp+80], 3
; Line 96
	call	_ERR_load_crypto_strings
; Line 97
	call	_OPENSSL_add_all_algorithms_noconf
; Line 98
	mov	esi, DWORD PTR _argv$[esp+76]
	add	esi, 4
	npad	8
$LL2@pkey_main:
; Line 99
	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	$LN3@pkey_main
	cmp	BYTE PTR [edi], 45			; 0000002dH
	jne	$LN3@pkey_main
; Line 100
	mov	ecx, OFFSET ??_C@_07CGGPPMGB@?9inform?$AA@
	mov	eax, edi
	npad	6
$LL72@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN73@pkey_main
	test	dl, dl
	je	SHORT $LN74@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN73@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL72@pkey_main
$LN74@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN75@pkey_main
$LN73@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN75@pkey_main:
	test	eax, eax
	jne	SHORT $LN6@pkey_main
; Line 101
	cmp	DWORD PTR [esi+4], ebp
	je	$LN8@pkey_main
; Line 103
	push	DWORD PTR [esi+4]
	add	esi, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _informat$1$[esp+80], eax
; Line 104
	jmp	$LN41@pkey_main
$LN6@pkey_main:
; Line 106
	mov	ecx, OFFSET ??_C@_08LPHBEAIF@?9outform?$AA@
	mov	eax, edi
$LL76@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN77@pkey_main
	test	dl, dl
	je	SHORT $LN78@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN77@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL76@pkey_main
$LN78@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN79@pkey_main
$LN77@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN79@pkey_main:
	test	eax, eax
	jne	SHORT $LN10@pkey_main
; Line 107
	cmp	DWORD PTR [esi+4], ebp
	je	$LN8@pkey_main
; Line 109
	push	DWORD PTR [esi+4]
	add	esi, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _outformat$1$[esp+80], eax
; Line 110
	jmp	$LN41@pkey_main
$LN10@pkey_main:
; Line 112
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, edi
$LL80@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN81@pkey_main
	test	dl, dl
	je	SHORT $LN82@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN81@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL80@pkey_main
$LN82@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN83@pkey_main
$LN81@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN83@pkey_main:
	test	eax, eax
	jne	SHORT $LN14@pkey_main
; Line 113
	add	esi, 4
	cmp	DWORD PTR [esi], ebp
	je	$bad$127
; Line 115
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _passargin$1$[esp+80], eax
	jmp	$LN41@pkey_main
$LN14@pkey_main:
; Line 116
	mov	ecx, OFFSET ??_C@_08KCDBEMAI@?9passout?$AA@
	mov	eax, edi
$LL84@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN85@pkey_main
	test	dl, dl
	je	SHORT $LN86@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN85@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL84@pkey_main
$LN86@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN87@pkey_main
$LN85@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN87@pkey_main:
	test	eax, eax
	jne	SHORT $LN17@pkey_main
; Line 117
	add	esi, 4
	cmp	DWORD PTR [esi], ebp
	je	$bad$127
; Line 119
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _passargout$1$[esp+80], eax
; Line 120
	jmp	$LN41@pkey_main
$LN17@pkey_main:
; Line 122
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, edi
	npad	4
$LL88@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN89@pkey_main
	test	dl, dl
	je	SHORT $LN90@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN89@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL88@pkey_main
$LN90@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN91@pkey_main
$LN89@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN91@pkey_main:
	test	eax, eax
	jne	SHORT $LN20@pkey_main
; Line 123
	add	esi, 4
	cmp	DWORD PTR [esi], ebp
	je	$bad$127
; Line 125
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _engine$1$[esp+80], eax
; Line 126
	jmp	$LN41@pkey_main
$LN20@pkey_main:
; Line 128
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, edi
$LL92@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN93@pkey_main
	test	dl, dl
	je	SHORT $LN94@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN93@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL92@pkey_main
$LN94@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN95@pkey_main
$LN93@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN95@pkey_main:
	test	eax, eax
	jne	SHORT $LN23@pkey_main
; Line 129
	cmp	DWORD PTR [esi+4], ebp
	je	$LN8@pkey_main
; Line 131
	mov	eax, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _infile$1$[esp+80], eax
; Line 132
	jmp	$LN41@pkey_main
$LN23@pkey_main:
; Line 134
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, edi
	npad	2
$LL96@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN97@pkey_main
	test	dl, dl
	je	SHORT $LN98@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN97@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL96@pkey_main
$LN98@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN99@pkey_main
$LN97@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN99@pkey_main:
	test	eax, eax
	jne	SHORT $LN27@pkey_main
; Line 135
	cmp	DWORD PTR [esi+4], ebp
	je	$LN8@pkey_main
; Line 137
	mov	eax, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _outfile$1$[esp+80], eax
; Line 138
	jmp	$LN41@pkey_main
$LN27@pkey_main:
; Line 140
	mov	ecx, OFFSET ??_C@_06NLLOJDKN@?9pubin?$AA@
	mov	eax, edi
$LL100@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN101@pkey_main
	test	dl, dl
	je	SHORT $LN102@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN101@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL100@pkey_main
$LN102@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN103@pkey_main
$LN101@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN103@pkey_main:
	test	eax, eax
	jne	SHORT $LN31@pkey_main
; Line 141
	mov	DWORD PTR _pubin$1$[esp+80], 1
; Line 142
	mov	DWORD PTR _pubout$1$[esp+80], 1
; Line 143
	mov	DWORD PTR _pubtext$1$[esp+80], 1
	jmp	$LN41@pkey_main
$LN31@pkey_main:
; Line 144
	mov	ecx, OFFSET ??_C@_07NGPHMOHJ@?9pubout?$AA@
	mov	eax, edi
$LL104@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN105@pkey_main
	test	dl, dl
	je	SHORT $LN106@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN105@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL104@pkey_main
$LN106@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN107@pkey_main
$LN105@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN107@pkey_main:
	test	eax, eax
	jne	SHORT $LN33@pkey_main
; Line 145
	mov	DWORD PTR _pubout$1$[esp+80], 1
	jmp	$LN41@pkey_main
$LN33@pkey_main:
; Line 146
	mov	ecx, OFFSET ??_C@_09ICLKJGM@?9text_pub?$AA@
	mov	eax, edi
$LL108@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN109@pkey_main
	test	dl, dl
	je	SHORT $LN110@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN109@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL108@pkey_main
$LN110@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN111@pkey_main
$LN109@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN111@pkey_main:
	test	eax, eax
	jne	SHORT $LN35@pkey_main
; Line 147
	mov	DWORD PTR _pubtext$1$[esp+80], 1
; Line 148
	mov	DWORD PTR _text$1$[esp+80], 1
	jmp	$LN41@pkey_main
$LN35@pkey_main:
; Line 149
	mov	ecx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	eax, edi
$LL112@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN113@pkey_main
	test	dl, dl
	je	SHORT $LN114@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN113@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL112@pkey_main
$LN114@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN115@pkey_main
$LN113@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN115@pkey_main:
	test	eax, eax
	jne	SHORT $LN37@pkey_main
; Line 150
	mov	DWORD PTR _text$1$[esp+80], 1
	jmp	SHORT $LN41@pkey_main
$LN37@pkey_main:
; Line 151
	mov	ecx, OFFSET ??_C@_06JPEJAHHH@?9noout?$AA@
	mov	eax, edi
$LL116@pkey_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN117@pkey_main
	test	dl, dl
	je	SHORT $LN118@pkey_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN117@pkey_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL116@pkey_main
$LN118@pkey_main:
	xor	eax, eax
	jmp	SHORT $LN119@pkey_main
$LN117@pkey_main:
	sbb	eax, eax
	or	eax, 1
$LN119@pkey_main:
	test	eax, eax
	jne	SHORT $LN39@pkey_main
; Line 152
	mov	DWORD PTR _noout$1$[esp+80], 1
	jmp	SHORT $LN41@pkey_main
$LN39@pkey_main:
; Line 154
	lea	eax, DWORD PTR [edi+1]
	push	eax
	call	_EVP_get_cipherbyname
	add	esp, 4
	mov	DWORD PTR _cipher$1$[esp+80], eax
; Line 155
	test	eax, eax
	jne	SHORT $LN41@pkey_main
; Line 156
	mov	eax, DWORD PTR [esi]
	inc	eax
	push	eax
	push	OFFSET ??_C@_0BD@GDDFDKFP@Unknown?5cipher?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN8@pkey_main:
; Line 157
	mov	ebx, 1
$LN41@pkey_main:
; Line 160
	add	esi, 4
	test	ebx, ebx
	je	$LL2@pkey_main
; Line 123
	jmp	SHORT $bad$127
$LN3@pkey_main:
; Line 163
	test	ebx, ebx
	je	$LN42@pkey_main
$bad$127:
; Line 165
	push	OFFSET ??_C@_0BG@IBLBALGG@Usage?5pkey?5?$FLoptions?$FN?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 166
	push	OFFSET ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 167
	push	OFFSET ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 168
	push	OFFSET ??_C@_0CL@OAKFLOPI@?9inform?5X?5?5?5?5?5?5?5input?5format?5?$CIDE@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 169
	push	OFFSET ??_C@_0CP@BOENDABC@?9passin?5arg?5?5?5?5?5input?5file?5pass?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 171
	push	OFFSET ??_C@_0CM@GBGBMPHL@?9outform?5X?5?5?5?5?5?5output?5format?5?$CID@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 172
	push	OFFSET ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 173
	push	OFFSET ??_C@_0DA@CAFIONIP@?9passout?5arg?5?5?5?5output?5file?5pass@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 176
	push	OFFSET ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 179
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 251
	add	esp, 64					; 00000040H
	ret	0
$LN42@pkey_main:
; Line 182
	mov	eax, DWORD PTR _engine$1$[esp+80]
	push	0
	push	eax
	push	DWORD PTR _bio_err
	call	_setup_engine
	mov	esi, eax
; Line 185
	lea	eax, DWORD PTR _passout$[esp+92]
	push	eax
	lea	eax, DWORD PTR _passin$[esp+96]
	push	eax
	mov	eax, DWORD PTR _passargout$1$[esp+100]
	push	eax
	mov	eax, DWORD PTR _passargin$1$[esp+104]
	push	eax
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN43@pkey_main
; Line 186
	push	OFFSET ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
$LN124@pkey_main:
; Line 226
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN120@pkey_main:
	mov	esi, 1
$end$126:
; Line 242
	push	ebp
	call	_EVP_PKEY_free
; Line 243
	push	DWORD PTR _out$1$[esp+84]
	call	_BIO_free_all
; Line 244
	push	0
	call	_BIO_free
; Line 245
	mov	eax, DWORD PTR _passin$[esp+92]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN62@pkey_main
; Line 246
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN62@pkey_main:
; Line 247
	mov	ecx, DWORD PTR _passout$[esp+80]
	test	ecx, ecx
	je	SHORT $LN63@pkey_main
; Line 248
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN63@pkey_main:
; Line 250
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 251
	add	esp, 64					; 00000040H
	ret	0
$LN43@pkey_main:
; Line 190
	mov	edi, DWORD PTR _outfile$1$[esp+80]
	test	edi, edi
	je	SHORT $LN44@pkey_main
; Line 191
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	edi
	call	_BIO_new_file
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+80], ebx
	test	ebx, ebx
	jne	SHORT $LN45@pkey_main
; Line 192
	push	edi
	push	OFFSET ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 193
	jmp	SHORT $LN120@pkey_main
$LN44@pkey_main:
; Line 196
	push	0
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+80], eax
	mov	ebx, eax
$LN45@pkey_main:
; Line 205
	mov	eax, DWORD PTR _pubin$1$[esp+80]
	test	eax, eax
; Line 206
	mov	eax, DWORD PTR _informat$1$[esp+80]
	je	SHORT $LN47@pkey_main
	push	OFFSET ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
	push	esi
	push	DWORD PTR _passin$[esp+88]
	push	1
	push	eax
	mov	eax, DWORD PTR _infile$1$[esp+100]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_pubkey
	jmp	SHORT $LN121@pkey_main
$LN47@pkey_main:
; Line 209
	push	OFFSET ??_C@_03ICHNJLJF@key?$AA@
	push	esi
	push	DWORD PTR _passin$[esp+88]
	push	1
	push	eax
	mov	eax, DWORD PTR _infile$1$[esp+100]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_key
$LN121@pkey_main:
	mov	ebp, eax
	add	esp, 28					; 0000001cH
; Line 210
	test	ebp, ebp
	je	$LN120@pkey_main
; Line 213
	mov	eax, DWORD PTR _noout$1$[esp+80]
	test	eax, eax
	jne	SHORT $LN56@pkey_main
; Line 214
	mov	eax, DWORD PTR _outformat$1$[esp+80]
	cmp	eax, 3
	jne	SHORT $LN51@pkey_main
; Line 215
	mov	eax, DWORD PTR _pubout$1$[esp+80]
	test	eax, eax
	je	SHORT $LN53@pkey_main
; Line 216
	push	ebp
	push	ebx
	call	_PEM_write_bio_PUBKEY
$LN122@pkey_main:
	add	esp, 8
$LN56@pkey_main:
; Line 232
	mov	eax, DWORD PTR _text$1$[esp+80]
	test	eax, eax
	je	SHORT $LN61@pkey_main
; Line 233
	mov	eax, DWORD PTR _pubtext$1$[esp+80]
; Line 234
	push	0
	push	0
	push	ebp
	push	ebx
	test	eax, eax
	je	SHORT $LN60@pkey_main
	call	_EVP_PKEY_print_public
; Line 236
	add	esp, 16					; 00000010H
; Line 239
	xor	esi, esi
	jmp	$end$126
$LN53@pkey_main:
; Line 218
	push	DWORD PTR _passout$[esp+80]
	mov	eax, DWORD PTR _cipher$1$[esp+84]
	push	0
	push	0
	push	0
	push	eax
	push	ebp
	push	ebx
	call	_PEM_write_bio_PrivateKey
	add	esp, 28					; 0000001cH
; Line 220
	jmp	SHORT $LN56@pkey_main
$LN51@pkey_main:
	cmp	eax, 1
	jne	SHORT $LN55@pkey_main
; Line 221
	mov	eax, DWORD PTR _pubout$1$[esp+80]
; Line 222
	push	ebp
	push	ebx
	test	eax, eax
	je	SHORT $LN57@pkey_main
	call	_i2d_PUBKEY_bio
	jmp	SHORT $LN122@pkey_main
$LN57@pkey_main:
; Line 224
	call	_i2d_PrivateKey_bio
; Line 225
	jmp	SHORT $LN122@pkey_main
$LN55@pkey_main:
; Line 226
	push	OFFSET ??_C@_0BO@PNJCFDML@Bad?5format?5specified?5for?5key?6?$AA@
; Line 227
	jmp	$LN124@pkey_main
$LN60@pkey_main:
; Line 236
	call	_EVP_PKEY_print_private
	add	esp, 16					; 00000010H
$LN61@pkey_main:
; Line 239
	xor	esi, esi
	jmp	$end$126
_pkey_main ENDP
_TEXT	ENDS
END

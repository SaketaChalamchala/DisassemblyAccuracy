; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\idea\ideatest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_k
PUBLIC	_in
PUBLIC	_c
PUBLIC	_text
PUBLIC	??_C@_0BO@EPEDBOED@Hello?5to?5all?5people?5out?5there?$AA@ ; `string'
PUBLIC	??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@	; `string'
_DATA	SEGMENT
COMM	_out:BYTE:050H
_DATA	ENDS
_BSS	SEGMENT
?bnum@?1??pt@@9@9 DD 01H DUP (?)			; `pt'::`2'::bnum
_BSS	ENDS
;	COMDAT ??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@
CONST	SEGMENT
??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@ DB '0123456789ABCDEF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EPEDBOED@Hello?5to?5all?5people?5out?5there?$AA@
CONST	SEGMENT
??_C@_0BO@EPEDBOED@Hello?5to?5all?5people?5out?5there?$AA@ DB 'Hello to a'
	DB	'll people out there', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_k	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
	DB	00H
	DB	04H
	DB	00H
	DB	05H
	DB	00H
	DB	06H
	DB	00H
	DB	07H
	DB	00H
	DB	08H
_in	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
_c	DB	011H
	DB	0fbH
	DB	0edH
	DB	02bH
	DB	01H
	DB	098H
	DB	06dH
	DB	0e5H
_text	DD	FLAT:??_C@_0BO@EPEDBOED@Hello?5to?5all?5people?5out?5there?$AA@
_cfb_key DB	0e1H
	DB	0f0H
	DB	0c3H
	DB	0d2H
	DB	0a5H
	DB	0b4H
	DB	087H
	DB	096H
	DB	069H
	DB	078H
	DB	04bH
	DB	05aH
	DB	02dH
	DB	03cH
	DB	0fH
	DB	01eH
?f@?1??pt@@9@9 DD FLAT:??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@ ; `pt'::`2'::f
_cfb_iv	DB	034H
	DB	012H
	DB	078H
	DB	056H
	DB	0abH
	DB	090H
	DB	0efH
	DB	0cdH
	ORG $+72
_plain	DB	04eH
	DB	06fH
	DB	077H
	DB	020H
	DB	069H
	DB	073H
	DB	020H
	DB	074H
	DB	068H
	DB	065H
	DB	020H
	DB	074H
	DB	069H
	DB	06dH
	DB	065H
	DB	020H
	DB	066H
	DB	06fH
	DB	072H
	DB	020H
	DB	061H
	DB	06cH
	DB	06cH
	DB	020H
_cfb_cipher64 DB 059H
	DB	0d8H
	DB	0e2H
	DB	065H
	DB	00H
	DB	058H
	DB	06cH
	DB	03fH
	DB	02cH
	DB	017H
	DB	025H
	DB	0d0H
	DB	01aH
	DB	038H
	DB	0b7H
	DB	02aH
	DB	039H
	DB	061H
	DB	037H
	DB	0dcH
	DB	079H
	DB	0fbH
	DB	09fH
	DB	045H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	??_C@_0BL@MJJEHPK@ecb?5idea?5error?5encrypting?6?$AA@ ; `string'
PUBLIC	??_C@_09DAIIHNJG@got?5?5?5?5?5?3?$AA@		; `string'
PUBLIC	??_C@_05BFHEBJNP@?$CF02X?5?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_09PBKDEKON@expected?3?$AA@		; `string'
PUBLIC	??_C@_0BL@LEBNIMNB@ecb?5idea?5error?5decrypting?6?$AA@ ; `string'
PUBLIC	??_C@_0N@FJNAGAPI@ecb?5idea?5ok?6?$AA@		; `string'
PUBLIC	??_C@_0O@CCEFFOGH@cbc?5idea?5bad?6?$AA@		; `string'
PUBLIC	??_C@_0N@KDBOCMIK@cbc?5idea?5ok?6?$AA@		; `string'
PUBLIC	??_C@_0M@LGKENPIG@cfb64?5idea?5?$AA@		; `string'
PUBLIC	??_C@_04OMIEDHNP@bad?6?$AA@			; `string'
PUBLIC	??_C@_03DJDALPN@ok?6?$AA@			; `string'
PUBLIC	??_C@_0CC@CICFDHE@idea_cfb64_encrypt?5encrypt?5error@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_0CA@NBPJJKEC@idea_cfb_encrypt?5decrypt?5error?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__exit:PROC
EXTRN	_idea_ecb_encrypt:PROC
EXTRN	_idea_set_encrypt_key:PROC
EXTRN	_idea_set_decrypt_key:PROC
EXTRN	_idea_cbc_encrypt:PROC
EXTRN	_idea_cfb64_encrypt:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_cfb_buf1 DB	028H DUP (?)
_cfb_buf2 DB	028H DUP (?)
_cfb_tmp DB	08H DUP (?)
?bufs@?1??pt@@9@9 DB 0c8H DUP (?)			; `pt'::`2'::bufs
_BSS	ENDS
;	COMDAT ??_C@_0CA@NBPJJKEC@idea_cfb_encrypt?5decrypt?5error?6?$AA@
CONST	SEGMENT
??_C@_0CA@NBPJJKEC@idea_cfb_encrypt?5decrypt?5error?6?$AA@ DB 'idea_cfb_e'
	DB	'ncrypt decrypt error', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CICFDHE@idea_cfb64_encrypt?5encrypt?5error@
CONST	SEGMENT
??_C@_0CC@CICFDHE@idea_cfb64_encrypt?5encrypt?5error@ DB 'idea_cfb64_encr'
	DB	'ypt encrypt error', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DJDALPN@ok?6?$AA@
CONST	SEGMENT
??_C@_03DJDALPN@ok?6?$AA@ DB 'ok', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OMIEDHNP@bad?6?$AA@
CONST	SEGMENT
??_C@_04OMIEDHNP@bad?6?$AA@ DB 'bad', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LGKENPIG@cfb64?5idea?5?$AA@
CONST	SEGMENT
??_C@_0M@LGKENPIG@cfb64?5idea?5?$AA@ DB 'cfb64 idea ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KDBOCMIK@cbc?5idea?5ok?6?$AA@
CONST	SEGMENT
??_C@_0N@KDBOCMIK@cbc?5idea?5ok?6?$AA@ DB 'cbc idea ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CCEFFOGH@cbc?5idea?5bad?6?$AA@
CONST	SEGMENT
??_C@_0O@CCEFFOGH@cbc?5idea?5bad?6?$AA@ DB 'cbc idea bad', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FJNAGAPI@ecb?5idea?5ok?6?$AA@
CONST	SEGMENT
??_C@_0N@FJNAGAPI@ecb?5idea?5ok?6?$AA@ DB 'ecb idea ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LEBNIMNB@ecb?5idea?5error?5decrypting?6?$AA@
CONST	SEGMENT
??_C@_0BL@LEBNIMNB@ecb?5idea?5error?5decrypting?6?$AA@ DB 'ecb idea error'
	DB	' decrypting', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09PBKDEKON@expected?3?$AA@
CONST	SEGMENT
??_C@_09PBKDEKON@expected?3?$AA@ DB 'expected:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BFHEBJNP@?$CF02X?5?$AA@
CONST	SEGMENT
??_C@_05BFHEBJNP@?$CF02X?5?$AA@ DB '%02X ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DAIIHNJG@got?5?5?5?5?5?3?$AA@
CONST	SEGMENT
??_C@_09DAIIHNJG@got?5?5?5?5?5?3?$AA@ DB 'got     :', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MJJEHPK@ecb?5idea?5error?5encrypting?6?$AA@
CONST	SEGMENT
??_C@_0BL@MJJEHPK@ecb?5idea?5error?5encrypting?6?$AA@ DB 'ecb idea error '
	DB	'encrypting', 0aH, 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_key$ = -444						; size = 216
_dkey$ = -228						; size = 216
_iv$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\idea\ideatest.c
; Line 113
	mov	eax, 444				; 000001bcH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+444], eax
	push	esi
	push	edi
; Line 118
	lea	eax, DWORD PTR _key$[esp+452]
	xor	edi, edi
	push	eax
	push	OFFSET _k
	call	_idea_set_encrypt_key
; Line 119
	lea	eax, DWORD PTR _key$[esp+460]
	push	eax
	push	OFFSET _out
	push	OFFSET _in
	call	_idea_ecb_encrypt
; Line 120
	mov	eax, DWORD PTR _out
	add	esp, 20					; 00000014H
	cmp	eax, DWORD PTR _c
	jne	SHORT $LN38@main
	mov	eax, DWORD PTR _out+4
	cmp	eax, DWORD PTR _c+4
	je	$LN14@main
$LN38@main:
; Line 121
	push	OFFSET ??_C@_0BL@MJJEHPK@ecb?5idea?5error?5encrypting?6?$AA@
	call	_printf
; Line 122
	push	OFFSET ??_C@_09DAIIHNJG@got?5?5?5?5?5?3?$AA@
	call	_printf
	add	esp, 8
; Line 123
	xor	esi, esi
	npad	7
$LL4@main:
; Line 124
	movzx	eax, BYTE PTR _out[esi]
	push	eax
	push	OFFSET ??_C@_05BFHEBJNP@?$CF02X?5?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 8
	jl	SHORT $LL4@main
; Line 125
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 126
	push	OFFSET ??_C@_09PBKDEKON@expected?3?$AA@
	call	_printf
	add	esp, 8
; Line 127
	xor	esi, esi
	npad	12
$LL7@main:
; Line 128
	movzx	eax, BYTE PTR _c[esi]
	push	eax
	push	OFFSET ??_C@_05BFHEBJNP@?$CF02X?5?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 8
	jl	SHORT $LL7@main
; Line 130
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	edi, 20					; 00000014H
	call	_printf
	add	esp, 4
$LN14@main:
; Line 133
	lea	eax, DWORD PTR _dkey$[esp+452]
	push	eax
	lea	eax, DWORD PTR _key$[esp+456]
	push	eax
	call	_idea_set_decrypt_key
; Line 134
	lea	eax, DWORD PTR _dkey$[esp+460]
	push	eax
	push	OFFSET _out
	push	OFFSET _c
	call	_idea_ecb_encrypt
; Line 135
	mov	eax, DWORD PTR _out
	add	esp, 20					; 00000014H
	cmp	eax, DWORD PTR _in
	jne	SHORT $LN39@main
	mov	eax, DWORD PTR _out+4
	cmp	eax, DWORD PTR _in+4
	jne	SHORT $LN39@main
; Line 148
	test	edi, edi
	jne	$LN16@main
; Line 149
	push	OFFSET ??_C@_0N@FJNAGAPI@ecb?5idea?5ok?6?$AA@
	call	_printf
	jmp	$LN49@main
$LN39@main:
; Line 136
	push	OFFSET ??_C@_0BL@LEBNIMNB@ecb?5idea?5error?5decrypting?6?$AA@
	call	_printf
; Line 137
	push	OFFSET ??_C@_09DAIIHNJG@got?5?5?5?5?5?3?$AA@
	call	_printf
	add	esp, 8
; Line 138
	xor	esi, esi
$LL10@main:
; Line 139
	movzx	eax, BYTE PTR _out[esi]
	push	eax
	push	OFFSET ??_C@_05BFHEBJNP@?$CF02X?5?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 8
	jl	SHORT $LL10@main
; Line 140
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 141
	push	OFFSET ??_C@_09PBKDEKON@expected?3?$AA@
	call	_printf
	add	esp, 8
; Line 142
	xor	esi, esi
	npad	9
$LL13@main:
; Line 143
	movzx	eax, BYTE PTR _in[esi]
	push	eax
	push	OFFSET ??_C@_05BFHEBJNP@?$CF02X?5?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 8
	jl	SHORT $LL13@main
; Line 144
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 145
	mov	edi, 3
$LN49@main:
; Line 144
	add	esp, 4
$LN16@main:
; Line 152
	mov	edx, DWORD PTR _text
	mov	ecx, edx
	mov	eax, DWORD PTR _k
	mov	DWORD PTR _iv$[esp+452], eax
	mov	eax, DWORD PTR _k+4
	mov	DWORD PTR _iv$[esp+456], eax
	lea	esi, DWORD PTR [ecx+1]
$LL40@main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL40@main
	push	1
	lea	eax, DWORD PTR _iv$[esp+456]
	sub	ecx, esi
	push	eax
	lea	eax, DWORD PTR _key$[esp+460]
	push	eax
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	push	OFFSET _out
	push	edx
	call	_idea_cbc_encrypt
; Line 154
	mov	eax, DWORD PTR _k
	mov	DWORD PTR _iv$[esp+476], eax
	mov	eax, DWORD PTR _k+4
; Line 155
	push	0
	mov	DWORD PTR _iv$[esp+484], eax
	lea	eax, DWORD PTR _iv$[esp+480]
	push	eax
	lea	eax, DWORD PTR _dkey$[esp+484]
	push	eax
	push	8
	push	OFFSET _out
	push	OFFSET _out
	call	_idea_cbc_encrypt
; Line 156
	mov	ecx, DWORD PTR _text
	add	esp, 48					; 00000030H
	lea	edx, DWORD PTR [ecx+1]
	npad	2
$LL41@main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL41@main
	push	0
	lea	eax, DWORD PTR _iv$[esp+456]
	sub	ecx, edx
	push	eax
	lea	eax, DWORD PTR _dkey$[esp+460]
	push	eax
	lea	eax, DWORD PTR [ecx-7]
	push	eax
	push	OFFSET _out+8
	push	OFFSET _out+8
	call	_idea_cbc_encrypt
; Line 158
	mov	edx, DWORD PTR _text
	add	esp, 24					; 00000018H
	mov	esi, edx
	lea	ecx, DWORD PTR [esi+1]
	npad	4
$LL42@main:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL42@main
	sub	esi, ecx
	mov	ecx, OFFSET _out
	inc	esi
	sub	esi, 4
	jb	SHORT $LN45@main
$LL46@main:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN44@main
	add	edx, 4
	add	ecx, 4
	sub	esi, 4
	jae	SHORT $LL46@main
$LN45@main:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN43@main
$LN44@main:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN47@main
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN43@main
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN47@main
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN43@main
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [ecx+2]
	jne	SHORT $LN47@main
	cmp	esi, -1
	je	SHORT $LN43@main
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [ecx+3]
	je	SHORT $LN43@main
$LN47@main:
; Line 159
	push	OFFSET ??_C@_0O@CCEFFOGH@cbc?5idea?5bad?6?$AA@
	call	_printf
; Line 160
	mov	edi, 4
; Line 161
	jmp	SHORT $LN50@main
$LN43@main:
; Line 162
	push	OFFSET ??_C@_0N@KDBOCMIK@cbc?5idea?5ok?6?$AA@
	call	_printf
$LN50@main:
	add	esp, 4
; Line 164
	push	OFFSET ??_C@_0M@LGKENPIG@cfb64?5idea?5?$AA@
	call	_printf
; Line 165
	push	OFFSET _cfb_cipher64
	call	_cfb64_test
	add	esp, 8
	test	eax, eax
	je	SHORT $LN19@main
; Line 166
	push	OFFSET ??_C@_04OMIEDHNP@bad?6?$AA@
	call	_printf
; Line 167
	mov	edi, 5
; Line 168
	jmp	SHORT $LN51@main
$LN19@main:
; Line 169
	push	OFFSET ??_C@_03DJDALPN@ok?6?$AA@
	call	_printf
$LN51@main:
	add	esp, 4
; Line 175
	push	edi
	call	DWORD PTR __imp__exit
	pop	edi
	pop	esi
$LN52@main:
$LN48@main:
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pt
_TEXT	SEGMENT
_p$ = 8							; size = 4
_pt	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\idea\ideatest.c
; Line 223
	mov	ecx, DWORD PTR ?bnum@?1??pt@@9@9
	push	esi
; Line 226
	mov	esi, DWORD PTR _p$[esp]
	push	edi
	lea	eax, DWORD PTR [ecx+ecx*4]
	inc	ecx
	lea	edi, DWORD PTR ?bufs@?1??pt@@9@9[eax*4]
	mov	eax, -1717986919			; 99999999H
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR ?f@?1??pt@@9@9
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR ?bnum@?1??pt@@9@9, eax
	movzx	eax, BYTE PTR [esi]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi], al
; Line 227
	movzx	eax, BYTE PTR [esi]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+1], al
	movzx	eax, BYTE PTR [esi+1]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+2], al
	movzx	eax, BYTE PTR [esi+1]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+3], al
	movzx	eax, BYTE PTR [esi+2]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+4], al
	movzx	eax, BYTE PTR [esi+2]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+5], al
	movzx	eax, BYTE PTR [esi+3]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+6], al
	movzx	eax, BYTE PTR [esi+3]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+7], al
	movzx	eax, BYTE PTR [esi+4]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+8], al
	movzx	eax, BYTE PTR [esi+4]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+9], al
	movzx	eax, BYTE PTR [esi+5]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+10], al
	movzx	eax, BYTE PTR [esi+5]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+11], al
	movzx	eax, BYTE PTR [esi+6]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+12], al
	movzx	eax, BYTE PTR [esi+6]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR [edi+13], al
	movzx	ecx, BYTE PTR [esi+7]
	shr	ecx, 4
	movzx	ecx, BYTE PTR [ecx+edx]
	mov	BYTE PTR [edi+14], cl
	movzx	ecx, BYTE PTR [esi+7]
	and	ecx, 15					; 0000000fH
	movzx	ecx, BYTE PTR [ecx+edx]
	mov	BYTE PTR [edi+15], cl
; Line 229
	mov	BYTE PTR [edi+16], 0
; Line 230
	mov	eax, edi
	pop	edi
	pop	esi
; Line 231
	ret	0
_pt	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cfb64_test
_TEXT	SEGMENT
_n$ = -440						; size = 4
_eks$ = -436						; size = 216
_dks$ = -220						; size = 216
__$ArrayPad$ = -4					; size = 4
_cfb_cipher$ = 8					; size = 4
_cfb64_test PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\idea\ideatest.c
; Line 180
	mov	eax, 440				; 000001b8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+440], eax
	push	ebx
	push	esi
	push	edi
; Line 184
	lea	eax, DWORD PTR _eks$[esp+452]
	xor	ebx, ebx
	push	eax
	push	OFFSET _cfb_key
	call	_idea_set_encrypt_key
; Line 185
	lea	eax, DWORD PTR _dks$[esp+460]
	push	eax
	lea	eax, DWORD PTR _eks$[esp+464]
	push	eax
	call	_idea_set_decrypt_key
; Line 186
	mov	eax, DWORD PTR _cfb_iv
	mov	DWORD PTR _cfb_tmp, eax
	mov	eax, DWORD PTR _cfb_iv+4
; Line 188
	push	1
	mov	DWORD PTR _cfb_tmp+4, eax
	lea	eax, DWORD PTR _n$[esp+472]
	push	eax
	push	OFFSET _cfb_tmp
	lea	eax, DWORD PTR _eks$[esp+480]
	mov	DWORD PTR _n$[esp+480], ebx
	push	eax
	push	12					; 0000000cH
	push	OFFSET _cfb_buf1
	push	OFFSET _plain
	call	_idea_cfb64_encrypt
; Line 190
	push	1
	lea	eax, DWORD PTR _n$[esp+500]
	push	eax
	push	OFFSET _cfb_tmp
	lea	eax, DWORD PTR _eks$[esp+508]
	push	eax
	push	12					; 0000000cH
	push	OFFSET _cfb_buf1+12
	push	OFFSET _plain+12
	call	_idea_cfb64_encrypt
; Line 193
	mov	ecx, DWORD PTR _cfb_cipher$[esp+520]
	lea	esi, DWORD PTR [ebx+20]
	add	esp, 72					; 00000048H
	mov	edx, OFFSET _cfb_buf1
	npad	4
$LL21@cfb64_test:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN20@cfb64_test
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL21@cfb64_test
	jmp	SHORT $LN3@cfb64_test
$LN20@cfb64_test:
; Line 195
	push	OFFSET ??_C@_0CC@CICFDHE@idea_cfb64_encrypt?5encrypt?5error@
	mov	ebx, 1
	call	_printf
	add	esp, 4
; Line 196
	xor	esi, esi
	npad	9
$LL4@cfb64_test:
; Line 197
	lea	eax, DWORD PTR _cfb_buf1[esi]
	push	eax
	call	_pt
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	_printf
	add	esi, 8
	add	esp, 12					; 0000000cH
	cmp	esi, 24					; 00000018H
	jl	SHORT $LL4@cfb64_test
$LN3@cfb64_test:
; Line 199
	mov	eax, DWORD PTR _cfb_iv
	mov	DWORD PTR _cfb_tmp, eax
	mov	eax, DWORD PTR _cfb_iv+4
; Line 201
	push	0
	mov	DWORD PTR _cfb_tmp+4, eax
	lea	eax, DWORD PTR _n$[esp+456]
	push	eax
	push	OFFSET _cfb_tmp
	lea	eax, DWORD PTR _eks$[esp+464]
	mov	DWORD PTR _n$[esp+464], 0
	push	eax
	push	13					; 0000000dH
	push	OFFSET _cfb_buf2
	push	OFFSET _cfb_buf1
	call	_idea_cfb64_encrypt
; Line 203
	push	0
	lea	eax, DWORD PTR _n$[esp+484]
	push	eax
	push	OFFSET _cfb_tmp
	lea	eax, DWORD PTR _eks$[esp+492]
	push	eax
	push	11					; 0000000bH
	push	OFFSET _cfb_buf2+13
	push	OFFSET _cfb_buf1+13
	call	_idea_cfb64_encrypt
	add	esp, 56					; 00000038H
; Line 206
	mov	edx, OFFSET _plain
	mov	esi, OFFSET _cfb_buf2
	mov	edi, 20					; 00000014H
$LL24@cfb64_test:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN23@cfb64_test
	add	edx, 4
	add	esi, 4
	sub	edi, 4
	jae	SHORT $LL24@cfb64_test
; Line 212
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 213
	mov	ecx, DWORD PTR __$ArrayPad$[esp+440]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	ret	0
$LN23@cfb64_test:
; Line 208
	push	OFFSET ??_C@_0CA@NBPJJKEC@idea_cfb_encrypt?5decrypt?5error?6?$AA@
	call	_printf
	add	esp, 4
; Line 209
	xor	esi, esi
	npad	2
$LL7@cfb64_test:
; Line 210
	lea	eax, DWORD PTR _cfb_buf2[esi]
	push	eax
	call	_pt
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	_printf
	add	esi, 8
	add	esp, 12					; 0000000cH
	cmp	esi, 24					; 00000018H
	jl	SHORT $LL7@cfb64_test
; Line 213
	mov	ecx, DWORD PTR __$ArrayPad$[esp+452]
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	ret	0
_cfb64_test ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

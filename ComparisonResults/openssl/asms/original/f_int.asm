; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\f_int.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@	; `string'
;	COMDAT ??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@
CONST	SEGMENT
??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@ DB '0123456789ABCDEF', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?h@?1??i2a_ASN1_INTEGER@@9@9 DD FLAT:??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@ ; `i2a_ASN1_INTEGER'::`2'::h
_DATA	ENDS
PUBLIC	_i2a_ASN1_INTEGER
PUBLIC	_a2i_ASN1_INTEGER
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	??_C@_02PLJDPFIO@00?$AA@			; `string'
PUBLIC	??_C@_02JPPHBJLD@?2?6?$AA@			; `string'
PUBLIC	??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_realloc_clean:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@
CONST	SEGMENT
??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@ DB '.\crypto\asn1\f_in'
	DB	't.c', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_02JPPHBJLD@?2?6?$AA@
CONST	SEGMENT
??_C@_02JPPHBJLD@?2?6?$AA@ DB '\', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02PLJDPFIO@00?$AA@
CONST	SEGMENT
??_C@_02PLJDPFIO@00?$AA@ DB '00', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _a2i_ASN1_INTEGER
_TEXT	SEGMENT
_s$1$ = -24						; size = 4
_again$1$ = -20						; size = 4
_first$1$ = -16						; size = 4
_slen$1$ = -12						; size = 4
_num$1$ = -8						; size = 4
tv503 = -4						; size = 4
_bp$ = 8						; size = 4
_bs$ = 12						; size = 4
_buf$ = 16						; size = 4
_size$ = 20						; size = 4
_a2i_ASN1_INTEGER PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\f_int.c
; Line 103
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	ebx
	push	ebp
; Line 112
	mov	ebp, DWORD PTR _buf$[esp+28]
	xor	eax, eax
	push	esi
	push	edi
	push	DWORD PTR _size$[esp+36]
	mov	DWORD PTR _slen$1$[esp+44], eax
	xor	edi, edi
	mov	eax, DWORD PTR _bs$[esp+40]
	xor	esi, esi
	push	ebp
	push	DWORD PTR _bp$[esp+44]
	mov	DWORD PTR _s$1$[esp+52], edi
	mov	DWORD PTR _num$1$[esp+52], esi
	mov	DWORD PTR _first$1$[esp+52], 1
	mov	DWORD PTR [eax+4], 2
	call	_BIO_gets
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 114
	cmp	ecx, 1
	jl	$err_sl$72
$LL2@a2i_ASN1_I:
; Line 117
	cmp	BYTE PTR [ecx+ebp-1], 10		; 0000000aH
	jne	SHORT $LN15@a2i_ASN1_I
; Line 118
	dec	ecx
	mov	BYTE PTR [ecx+ebp], 0
$LN15@a2i_ASN1_I:
; Line 119
	test	ecx, ecx
	je	$err_sl$72
; Line 121
	cmp	BYTE PTR [ecx+ebp-1], 13		; 0000000dH
	jne	SHORT $LN17@a2i_ASN1_I
; Line 122
	dec	ecx
	mov	BYTE PTR [ecx+ebp], 0
$LN17@a2i_ASN1_I:
; Line 123
	test	ecx, ecx
	je	$err_sl$72
; Line 125
	xor	eax, eax
	cmp	BYTE PTR [ecx+ebp-1], 92		; 0000005cH
	sete	al
; Line 127
	xor	edx, edx
	mov	DWORD PTR _again$1$[esp+40], eax
	test	ecx, ecx
	jle	SHORT $LN6@a2i_ASN1_I
	npad	1
$LL7@a2i_ASN1_I:
; Line 129
	mov	al, BYTE PTR [edx+ebp]
	cmp	al, 48					; 00000030H
	jl	SHORT $LN20@a2i_ASN1_I
	cmp	al, 57					; 00000039H
	jle	SHORT $LN5@a2i_ASN1_I
$LN20@a2i_ASN1_I:
	cmp	al, 97					; 00000061H
	jl	SHORT $LN21@a2i_ASN1_I
	cmp	al, 102					; 00000066H
	jle	SHORT $LN5@a2i_ASN1_I
$LN21@a2i_ASN1_I:
	cmp	al, 65					; 00000041H
	jl	SHORT $LN46@a2i_ASN1_I
	cmp	al, 70					; 00000046H
	jg	SHORT $LN46@a2i_ASN1_I
$LN5@a2i_ASN1_I:
; Line 127
	inc	edx
	cmp	edx, ecx
	jl	SHORT $LL7@a2i_ASN1_I
; Line 173
	jmp	SHORT $LN68@a2i_ASN1_I
$LN46@a2i_ASN1_I:
; Line 141
	mov	ecx, edx
$LN68@a2i_ASN1_I:
	mov	eax, DWORD PTR _again$1$[esp+40]
$LN6@a2i_ASN1_I:
; Line 145
	mov	BYTE PTR [ecx+ebp], 0
; Line 149
	cmp	ecx, 2
	jl	$err_sl$72
; Line 153
	cmp	DWORD PTR _first$1$[esp+40], 0
	mov	ebx, ebp
	je	SHORT $LN25@a2i_ASN1_I
; Line 154
	xor	edx, edx
; Line 155
	cmp	BYTE PTR [ebp], 48			; 00000030H
	mov	DWORD PTR _first$1$[esp+40], edx
	jne	SHORT $LN25@a2i_ASN1_I
	cmp	BYTE PTR [ebp+1], 48			; 00000030H
	jne	SHORT $LN25@a2i_ASN1_I
; Line 156
	lea	ebx, DWORD PTR [ebp+2]
; Line 157
	sub	ecx, 2
$LN25@a2i_ASN1_I:
; Line 161
	sub	ecx, eax
; Line 162
	mov	eax, ecx
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN67@a2i_ASN1_I
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN67@a2i_ASN1_I:
	jne	$LN51@a2i_ASN1_I
; Line 166
	mov	eax, ecx
; Line 167
	mov	ecx, DWORD PTR _slen$1$[esp+40]
	cdq
	sub	eax, edx
	mov	ebp, eax
	sar	ebp, 1
	lea	eax, DWORD PTR [esi+ebp]
	mov	DWORD PTR tv503[esp+40], eax
	cmp	eax, ecx
	jle	SHORT $LN66@a2i_ASN1_I
; Line 169
	lea	esi, DWORD PTR [esi+ebp*2]
	test	edi, edi
	jne	SHORT $LN28@a2i_ASN1_I
	push	170					; 000000aaH
	push	OFFSET ??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN29@a2i_ASN1_I
$LN28@a2i_ASN1_I:
; Line 172
	push	172					; 000000acH
	push	OFFSET ??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@
	push	esi
	push	ecx
	push	edi
	call	_CRYPTO_realloc_clean
	add	esp, 20					; 00000014H
$LN29@a2i_ASN1_I:
; Line 173
	test	eax, eax
	je	$LN52@a2i_ASN1_I
; Line 179
	mov	edx, eax
; Line 180
	mov	DWORD PTR _slen$1$[esp+40], esi
	mov	DWORD PTR _s$1$[esp+40], edx
	jmp	SHORT $LN27@a2i_ASN1_I
$LN66@a2i_ASN1_I:
	mov	edx, DWORD PTR _s$1$[esp+40]
$LN27@a2i_ASN1_I:
; Line 182
	xor	edi, edi
	test	ebp, ebp
	jle	SHORT $LN9@a2i_ASN1_I
$LL10@a2i_ASN1_I:
; Line 183
	xor	esi, esi
$LL13@a2i_ASN1_I:
; Line 184
	movzx	eax, BYTE PTR [ebx+esi]
; Line 185
	lea	ecx, DWORD PTR [eax-48]
	cmp	ecx, 9
	ja	SHORT $LN32@a2i_ASN1_I
; Line 186
	mov	eax, ecx
	jmp	SHORT $LN37@a2i_ASN1_I
$LN32@a2i_ASN1_I:
; Line 187
	lea	ecx, DWORD PTR [eax-97]
	cmp	ecx, 5
	ja	SHORT $LN34@a2i_ASN1_I
; Line 188
	sub	eax, 87					; 00000057H
	jmp	SHORT $LN37@a2i_ASN1_I
$LN34@a2i_ASN1_I:
; Line 189
	lea	ecx, DWORD PTR [eax-65]
	cmp	ecx, 5
	ja	$LN36@a2i_ASN1_I
; Line 190
	sub	eax, 55					; 00000037H
$LN37@a2i_ASN1_I:
; Line 196
	mov	ecx, DWORD PTR _num$1$[esp+40]
	inc	esi
	add	ecx, edi
	add	edx, ecx
	mov	cl, BYTE PTR [edx]
	shl	cl, 4
; Line 197
	or	cl, al
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _s$1$[esp+40]
	cmp	esi, 2
	jl	SHORT $LL13@a2i_ASN1_I
; Line 182
	inc	edi
	add	ebx, 2
	cmp	edi, ebp
	jl	SHORT $LL10@a2i_ASN1_I
$LN9@a2i_ASN1_I:
; Line 201
	cmp	DWORD PTR _again$1$[esp+40], 0
	mov	esi, DWORD PTR tv503[esp+40]
	mov	DWORD PTR _num$1$[esp+40], esi
	je	SHORT $LN38@a2i_ASN1_I
; Line 202
	push	DWORD PTR _size$[esp+36]
	mov	ebp, DWORD PTR _buf$[esp+40]
	push	ebp
	push	DWORD PTR _bp$[esp+44]
	call	_BIO_gets
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	cmp	ecx, 1
	jl	SHORT $err_sl$72
; Line 114
	mov	edi, DWORD PTR _s$1$[esp+40]
	jmp	$LL2@a2i_ASN1_I
$LN52@a2i_ASN1_I:
; Line 174
	push	174					; 000000aeH
	push	OFFSET ??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@
	push	65					; 00000041H
	push	102					; 00000066H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 175
	test	edi, edi
	je	SHORT $LN69@a2i_ASN1_I
; Line 176
	push	edi
	call	_CRYPTO_free
	add	esp, 4
; Line 214
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 215
	add	esp, 24					; 00000018H
	ret	0
$LN36@a2i_ASN1_I:
; Line 192
	push	193					; 000000c1H
	push	OFFSET ??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@
	push	141					; 0000008dH
; Line 194
	jmp	SHORT $LN70@a2i_ASN1_I
$LN38@a2i_ASN1_I:
; Line 206
	mov	eax, DWORD PTR _bs$[esp+36]
; Line 207
	mov	edi, DWORD PTR _s$1$[esp+40]
	mov	DWORD PTR [eax+8], edi
	pop	edi
	mov	DWORD PTR [eax], esi
; Line 214
	mov	eax, 1
	pop	esi
	pop	ebp
	pop	ebx
; Line 215
	add	esp, 24					; 00000018H
	ret	0
$LN51@a2i_ASN1_I:
; Line 163
	push	163					; 000000a3H
	push	OFFSET ??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@
	push	145					; 00000091H
; Line 164
	jmp	SHORT $LN70@a2i_ASN1_I
$err_sl$72:
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BG@JGBIPMAG@?4?2crypto?2asn1?2f_int?4c?$AA@
	push	150					; 00000096H
$LN70@a2i_ASN1_I:
	push	102					; 00000066H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN69@a2i_ASN1_I:
; Line 214
	xor	eax, eax
$err$73:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 215
	add	esp, 24					; 00000018H
	ret	0
_a2i_ASN1_INTEGER ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2a_ASN1_INTEGER
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_buf$ = 12						; size = 2
_a$ = 12						; size = 4
_i2a_ASN1_INTEGER PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\f_int.c
; Line 65
	push	ebx
; Line 70
	mov	ebx, DWORD PTR _a$[esp]
	push	edi
	xor	edi, edi
	test	ebx, ebx
	jne	SHORT $LN5@i2a_ASN1_I
; Line 71
	pop	edi
	xor	eax, eax
	pop	ebx
; Line 100
	ret	0
$LN5@i2a_ASN1_I:
; Line 73
	test	DWORD PTR [ebx+4], 256			; 00000100H
	push	ebp
	mov	ebp, DWORD PTR _bp$[esp+8]
	push	esi
	je	SHORT $LN6@i2a_ASN1_I
; Line 74
	push	1
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	$err$24
; Line 76
	mov	edi, eax
$LN6@i2a_ASN1_I:
; Line 79
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	jne	SHORT $LN8@i2a_ASN1_I
; Line 80
	push	2
	push	OFFSET ??_C@_02PLJDPFIO@00?$AA@
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 2
	jne	$err$24
; Line 82
	add	edi, eax
$LN3@i2a_ASN1_I:
	pop	esi
	pop	ebp
; Line 97
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 100
	ret	0
$LN8@i2a_ASN1_I:
; Line 84
	xor	esi, esi
	test	eax, eax
	jle	SHORT $LN3@i2a_ASN1_I
	npad	7
$LL4@i2a_ASN1_I:
; Line 85
	test	esi, esi
	je	SHORT $LN11@i2a_ASN1_I
	mov	eax, -368140053				; ea0ea0ebH
	mov	ecx, esi
	imul	esi
	add	edx, esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	imul	eax, eax, 35
	sub	ecx, eax
	jne	SHORT $LN11@i2a_ASN1_I
; Line 86
	push	2
	push	OFFSET ??_C@_02JPPHBJLD@?2?6?$AA@
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 2
	jne	SHORT $err$24
; Line 88
	add	edi, eax
$LN11@i2a_ASN1_I:
; Line 90
	mov	edx, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR ?h@?1??i2a_ASN1_INTEGER@@9@9
; Line 92
	push	2
	movzx	eax, BYTE PTR [edx+esi]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR _buf$[esp+16], al
	movzx	eax, BYTE PTR [edx+esi]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR _buf$[esp+17], al
	lea	eax, DWORD PTR _buf$[esp+16]
	push	eax
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 2
	jne	SHORT $err$24
; Line 94
	inc	esi
	add	edi, eax
	cmp	esi, DWORD PTR [ebx]
	jl	SHORT $LL4@i2a_ASN1_I
; Line 97
	pop	esi
	pop	ebp
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 100
	ret	0
$err$24:
	pop	esi
	pop	ebp
	pop	edi
; Line 99
	or	eax, -1
	pop	ebx
; Line 100
	ret	0
_i2a_ASN1_INTEGER ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\speed.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03LFFJDILA@md2?$AA@			; `string'
PUBLIC	??_C@_04ELNKPKEC@mdc2?$AA@			; `string'
PUBLIC	??_C@_03ODADJPDG@md4?$AA@			; `string'
PUBLIC	??_C@_03PKBIKOHH@md5?$AA@			; `string'
PUBLIC	??_C@_09INIJKPMA@hmac?$CImd5?$CJ?$AA@		; `string'
PUBLIC	??_C@_04PGHFOLLE@sha1?$AA@			; `string'
PUBLIC	??_C@_06HGILBMJP@rmd160?$AA@			; `string'
PUBLIC	??_C@_03OODGMOHK@rc4?$AA@			; `string'
PUBLIC	??_C@_07HHJFMCDJ@des?5cbc?$AA@			; `string'
PUBLIC	??_C@_08FLPKODE@des?5ede3?$AA@			; `string'
PUBLIC	??_C@_08EKGAJNJB@idea?5cbc?$AA@			; `string'
PUBLIC	??_C@_08OPOJMEFD@seed?5cbc?$AA@			; `string'
PUBLIC	??_C@_07GKJFBGGG@rc2?5cbc?$AA@			; `string'
PUBLIC	??_C@_0O@FONMDNJC@rc5?932?112?5cbc?$AA@		; `string'
PUBLIC	??_C@_0N@FAOOFPAC@blowfish?5cbc?$AA@		; `string'
PUBLIC	??_C@_08MALLCDLH@cast?5cbc?$AA@			; `string'
PUBLIC	??_C@_0M@LPNEKHJ@aes?9128?5cbc?$AA@		; `string'
PUBLIC	??_C@_0M@KIGBDNOF@aes?9192?5cbc?$AA@		; `string'
PUBLIC	??_C@_0M@HKNPBCGE@aes?9256?5cbc?$AA@		; `string'
PUBLIC	??_C@_0BB@JLHIBKMF@camellia?9128?5cbc?$AA@	; `string'
PUBLIC	??_C@_0BB@DIOEGNFJ@camellia?9192?5cbc?$AA@	; `string'
PUBLIC	??_C@_0BB@OKFKECNI@camellia?9256?5cbc?$AA@	; `string'
PUBLIC	??_C@_03KNAAEKMG@evp?$AA@			; `string'
PUBLIC	??_C@_06OHILPNJ@sha256?$AA@			; `string'
PUBLIC	??_C@_06PAMKOKLI@sha512?$AA@			; `string'
PUBLIC	??_C@_09DEGKDAEL@whirlpool?$AA@			; `string'
PUBLIC	??_C@_0M@DENBMPHA@aes?9128?5ige?$AA@		; `string'
PUBLIC	??_C@_0M@JHENLIOM@aes?9192?5ige?$AA@		; `string'
PUBLIC	??_C@_0M@EFPDJHGN@aes?9256?5ige?$AA@		; `string'
PUBLIC	??_C@_05IKIHPKPC@ghash?$AA@			; `string'
PUBLIC	??_C@_09CFLHMAIJ@secp160r1?$AA@			; `string'
PUBLIC	??_C@_08HIEPHKPD@nistp192?$AA@			; `string'
PUBLIC	??_C@_08DAPFJNHK@nistp224?$AA@			; `string'
PUBLIC	??_C@_08HIMOJHN@nistp256?$AA@			; `string'
PUBLIC	??_C@_08IFNOHPMJ@nistp384?$AA@			; `string'
PUBLIC	??_C@_08NAFFFBIG@nistp521?$AA@			; `string'
PUBLIC	??_C@_08HNDIKKBM@nistk163?$AA@			; `string'
PUBLIC	??_C@_08GJEGMHBJ@nistk233?$AA@			; `string'
PUBLIC	??_C@_08GFBDCIPI@nistk283?$AA@			; `string'
PUBLIC	??_C@_08LEIEMOBG@nistk409?$AA@			; `string'
PUBLIC	??_C@_08MBKODFPO@nistk571?$AA@			; `string'
PUBLIC	??_C@_08HACIMIGN@nistb163?$AA@			; `string'
PUBLIC	??_C@_08GEFGKFGI@nistb233?$AA@			; `string'
PUBLIC	??_C@_08GIADEKIJ@nistb283?$AA@			; `string'
PUBLIC	??_C@_08LJJEKMGH@nistb409?$AA@			; `string'
PUBLIC	??_C@_08MMLOFHIP@nistb571?$AA@			; `string'
_BSS	SEGMENT
_run	DD	01H DUP (?)
_mr	DD	01H DUP (?)
_rnd_fake DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_08MMLOFHIP@nistb571?$AA@
CONST	SEGMENT
??_C@_08MMLOFHIP@nistb571?$AA@ DB 'nistb571', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LJJEKMGH@nistb409?$AA@
CONST	SEGMENT
??_C@_08LJJEKMGH@nistb409?$AA@ DB 'nistb409', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GIADEKIJ@nistb283?$AA@
CONST	SEGMENT
??_C@_08GIADEKIJ@nistb283?$AA@ DB 'nistb283', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GEFGKFGI@nistb233?$AA@
CONST	SEGMENT
??_C@_08GEFGKFGI@nistb233?$AA@ DB 'nistb233', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HACIMIGN@nistb163?$AA@
CONST	SEGMENT
??_C@_08HACIMIGN@nistb163?$AA@ DB 'nistb163', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MBKODFPO@nistk571?$AA@
CONST	SEGMENT
??_C@_08MBKODFPO@nistk571?$AA@ DB 'nistk571', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LEIEMOBG@nistk409?$AA@
CONST	SEGMENT
??_C@_08LEIEMOBG@nistk409?$AA@ DB 'nistk409', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GFBDCIPI@nistk283?$AA@
CONST	SEGMENT
??_C@_08GFBDCIPI@nistk283?$AA@ DB 'nistk283', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GJEGMHBJ@nistk233?$AA@
CONST	SEGMENT
??_C@_08GJEGMHBJ@nistk233?$AA@ DB 'nistk233', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HNDIKKBM@nistk163?$AA@
CONST	SEGMENT
??_C@_08HNDIKKBM@nistk163?$AA@ DB 'nistk163', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NAFFFBIG@nistp521?$AA@
CONST	SEGMENT
??_C@_08NAFFFBIG@nistp521?$AA@ DB 'nistp521', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08IFNOHPMJ@nistp384?$AA@
CONST	SEGMENT
??_C@_08IFNOHPMJ@nistp384?$AA@ DB 'nistp384', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HIMOJHN@nistp256?$AA@
CONST	SEGMENT
??_C@_08HIMOJHN@nistp256?$AA@ DB 'nistp256', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DAPFJNHK@nistp224?$AA@
CONST	SEGMENT
??_C@_08DAPFJNHK@nistp224?$AA@ DB 'nistp224', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HIEPHKPD@nistp192?$AA@
CONST	SEGMENT
??_C@_08HIEPHKPD@nistp192?$AA@ DB 'nistp192', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CFLHMAIJ@secp160r1?$AA@
CONST	SEGMENT
??_C@_09CFLHMAIJ@secp160r1?$AA@ DB 'secp160r1', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_KDF1_SHA1_len DD 014H
?key16@?1??speed_main@@9@9 DB 012H			; `speed_main'::`2'::key16
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
?key24@?1??speed_main@@9@9 DB 012H			; `speed_main'::`2'::key24
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
?key32@?1??speed_main@@9@9 DB 012H			; `speed_main'::`2'::key32
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
	DB	056H
?ckey24@?1??speed_main@@9@9 DB 012H			; `speed_main'::`2'::ckey24
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
?ckey32@?1??speed_main@@9@9 DB 012H			; `speed_main'::`2'::ckey32
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
	DB	056H
	ORG $+4
_rnd_seed DB	'string to make the random number generator think it has '
	DB	'entropy', 00H
CONST	ENDS
;	COMDAT ??_C@_05IKIHPKPC@ghash?$AA@
CONST	SEGMENT
??_C@_05IKIHPKPC@ghash?$AA@ DB 'ghash', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EFPDJHGN@aes?9256?5ige?$AA@
CONST	SEGMENT
??_C@_0M@EFPDJHGN@aes?9256?5ige?$AA@ DB 'aes-256 ige', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JHENLIOM@aes?9192?5ige?$AA@
CONST	SEGMENT
??_C@_0M@JHENLIOM@aes?9192?5ige?$AA@ DB 'aes-192 ige', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DENBMPHA@aes?9128?5ige?$AA@
CONST	SEGMENT
??_C@_0M@DENBMPHA@aes?9128?5ige?$AA@ DB 'aes-128 ige', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DEGKDAEL@whirlpool?$AA@
CONST	SEGMENT
??_C@_09DEGKDAEL@whirlpool?$AA@ DB 'whirlpool', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PAMKOKLI@sha512?$AA@
CONST	SEGMENT
??_C@_06PAMKOKLI@sha512?$AA@ DB 'sha512', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OHILPNJ@sha256?$AA@
CONST	SEGMENT
??_C@_06OHILPNJ@sha256?$AA@ DB 'sha256', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KNAAEKMG@evp?$AA@
CONST	SEGMENT
??_C@_03KNAAEKMG@evp?$AA@ DB 'evp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OKFKECNI@camellia?9256?5cbc?$AA@
CONST	SEGMENT
??_C@_0BB@OKFKECNI@camellia?9256?5cbc?$AA@ DB 'camellia-256 cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DIOEGNFJ@camellia?9192?5cbc?$AA@
CONST	SEGMENT
??_C@_0BB@DIOEGNFJ@camellia?9192?5cbc?$AA@ DB 'camellia-192 cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JLHIBKMF@camellia?9128?5cbc?$AA@
CONST	SEGMENT
??_C@_0BB@JLHIBKMF@camellia?9128?5cbc?$AA@ DB 'camellia-128 cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HKNPBCGE@aes?9256?5cbc?$AA@
CONST	SEGMENT
??_C@_0M@HKNPBCGE@aes?9256?5cbc?$AA@ DB 'aes-256 cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KIGBDNOF@aes?9192?5cbc?$AA@
CONST	SEGMENT
??_C@_0M@KIGBDNOF@aes?9192?5cbc?$AA@ DB 'aes-192 cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LPNEKHJ@aes?9128?5cbc?$AA@
CONST	SEGMENT
??_C@_0M@LPNEKHJ@aes?9128?5cbc?$AA@ DB 'aes-128 cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MALLCDLH@cast?5cbc?$AA@
CONST	SEGMENT
??_C@_08MALLCDLH@cast?5cbc?$AA@ DB 'cast cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FAOOFPAC@blowfish?5cbc?$AA@
CONST	SEGMENT
??_C@_0N@FAOOFPAC@blowfish?5cbc?$AA@ DB 'blowfish cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FONMDNJC@rc5?932?112?5cbc?$AA@
CONST	SEGMENT
??_C@_0O@FONMDNJC@rc5?932?112?5cbc?$AA@ DB 'rc5-32/12 cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GKJFBGGG@rc2?5cbc?$AA@
CONST	SEGMENT
??_C@_07GKJFBGGG@rc2?5cbc?$AA@ DB 'rc2 cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OPOJMEFD@seed?5cbc?$AA@
CONST	SEGMENT
??_C@_08OPOJMEFD@seed?5cbc?$AA@ DB 'seed cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKGAJNJB@idea?5cbc?$AA@
CONST	SEGMENT
??_C@_08EKGAJNJB@idea?5cbc?$AA@ DB 'idea cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FLPKODE@des?5ede3?$AA@
CONST	SEGMENT
??_C@_08FLPKODE@des?5ede3?$AA@ DB 'des ede3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HHJFMCDJ@des?5cbc?$AA@
CONST	SEGMENT
??_C@_07HHJFMCDJ@des?5cbc?$AA@ DB 'des cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OODGMOHK@rc4?$AA@
CONST	SEGMENT
??_C@_03OODGMOHK@rc4?$AA@ DB 'rc4', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06HGILBMJP@rmd160?$AA@
CONST	SEGMENT
??_C@_06HGILBMJP@rmd160?$AA@ DB 'rmd160', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PGHFOLLE@sha1?$AA@
CONST	SEGMENT
??_C@_04PGHFOLLE@sha1?$AA@ DB 'sha1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09INIJKPMA@hmac?$CImd5?$CJ?$AA@
CONST	SEGMENT
??_C@_09INIJKPMA@hmac?$CImd5?$CJ?$AA@ DB 'hmac(md5)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03PKBIKOHH@md5?$AA@
CONST	SEGMENT
??_C@_03PKBIKOHH@md5?$AA@ DB 'md5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ODADJPDG@md4?$AA@
CONST	SEGMENT
??_C@_03ODADJPDG@md4?$AA@ DB 'md4', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04ELNKPKEC@mdc2?$AA@
CONST	SEGMENT
??_C@_04ELNKPKEC@mdc2?$AA@ DB 'mdc2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LFFJDILA@md2?$AA@
CONST	SEGMENT
??_C@_03LFFJDILA@md2?$AA@ DB 'md2', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_usertime DD	01H
_lengths DD	010H
	DD	040H
	DD	0100H
	DD	0400H
	DD	02000H
_names	DD	FLAT:??_C@_03LFFJDILA@md2?$AA@
	DD	FLAT:??_C@_04ELNKPKEC@mdc2?$AA@
	DD	FLAT:??_C@_03ODADJPDG@md4?$AA@
	DD	FLAT:??_C@_03PKBIKOHH@md5?$AA@
	DD	FLAT:??_C@_09INIJKPMA@hmac?$CImd5?$CJ?$AA@
	DD	FLAT:??_C@_04PGHFOLLE@sha1?$AA@
	DD	FLAT:??_C@_06HGILBMJP@rmd160?$AA@
	DD	FLAT:??_C@_03OODGMOHK@rc4?$AA@
	DD	FLAT:??_C@_07HHJFMCDJ@des?5cbc?$AA@
	DD	FLAT:??_C@_08FLPKODE@des?5ede3?$AA@
	DD	FLAT:??_C@_08EKGAJNJB@idea?5cbc?$AA@
	DD	FLAT:??_C@_08OPOJMEFD@seed?5cbc?$AA@
	DD	FLAT:??_C@_07GKJFBGGG@rc2?5cbc?$AA@
	DD	FLAT:??_C@_0O@FONMDNJC@rc5?932?112?5cbc?$AA@
	DD	FLAT:??_C@_0N@FAOOFPAC@blowfish?5cbc?$AA@
	DD	FLAT:??_C@_08MALLCDLH@cast?5cbc?$AA@
	DD	FLAT:??_C@_0M@LPNEKHJ@aes?9128?5cbc?$AA@
	DD	FLAT:??_C@_0M@KIGBDNOF@aes?9192?5cbc?$AA@
	DD	FLAT:??_C@_0M@HKNPBCGE@aes?9256?5cbc?$AA@
	DD	FLAT:??_C@_0BB@JLHIBKMF@camellia?9128?5cbc?$AA@
	DD	FLAT:??_C@_0BB@DIOEGNFJ@camellia?9192?5cbc?$AA@
	DD	FLAT:??_C@_0BB@OKFKECNI@camellia?9256?5cbc?$AA@
	DD	FLAT:??_C@_03KNAAEKMG@evp?$AA@
	DD	FLAT:??_C@_06OHILPNJ@sha256?$AA@
	DD	FLAT:??_C@_06PAMKOKLI@sha512?$AA@
	DD	FLAT:??_C@_09DEGKDAEL@whirlpool?$AA@
	DD	FLAT:??_C@_0M@DENBMPHA@aes?9128?5ige?$AA@
	DD	FLAT:??_C@_0M@JHENLIOM@aes?9192?5ige?$AA@
	DD	FLAT:??_C@_0M@EFPDJHGN@aes?9256?5ige?$AA@
	DD	FLAT:??_C@_05IKIHPKPC@ghash?$AA@
?key@?1??speed_main@@9@9 DB 012H			; `speed_main'::`2'::key
	DB	034H
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
?key2@?1??speed_main@@9@9 DB 034H			; `speed_main'::`2'::key2
	DB	056H
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
?key3@?1??speed_main@@9@9 DB 056H			; `speed_main'::`2'::key3
	DB	078H
	DB	09aH
	DB	0bcH
	DB	0deH
	DB	0f0H
	DB	012H
	DB	034H
?mblengths@?1??multiblock_speed@@9@9 DD 02000H		; `multiblock_speed'::`2'::mblengths
	DD	04000H
	DD	08000H
	DD	010000H
	DD	020000H
?rsa_bits@?1??speed_main@@9@9 DD 0200H			; `speed_main'::`2'::rsa_bits
	DD	0400H
	DD	0800H
	DD	01000H
?rsa_data@?1??speed_main@@9@9 DD FLAT:_test512		; `speed_main'::`2'::rsa_data
	DD	FLAT:_test1024
	DD	FLAT:_test2048
	DD	FLAT:_test4096
?rsa_data_length@?1??speed_main@@9@9 DD 013eH		; `speed_main'::`2'::rsa_data_length
	DD	0260H
	DD	04a7H
	DD	092dH
?dsa_bits@?1??speed_main@@9@9 DD 0200H			; `speed_main'::`2'::dsa_bits
	DD	0400H
	DD	0800H
?test_curves@?1??speed_main@@9@9 DD 02c5H		; `speed_main'::`2'::test_curves
	DD	0199H
	DD	02c9H
	DD	019fH
	DD	02cbH
	DD	02ccH
	DD	02d1H
	DD	02d6H
	DD	02d9H
	DD	02dbH
	DD	02ddH
	DD	02d3H
	DD	02d7H
	DD	02daH
	DD	02dcH
	DD	02deH
?test_curves_names@?1??speed_main@@9@9 DD FLAT:??_C@_09CFLHMAIJ@secp160r1?$AA@ ; `speed_main'::`2'::test_curves_names
	DD	FLAT:??_C@_08HIEPHKPD@nistp192?$AA@
	DD	FLAT:??_C@_08DAPFJNHK@nistp224?$AA@
	DD	FLAT:??_C@_08HIMOJHN@nistp256?$AA@
	DD	FLAT:??_C@_08IFNOHPMJ@nistp384?$AA@
	DD	FLAT:??_C@_08NAFFFBIG@nistp521?$AA@
	DD	FLAT:??_C@_08HNDIKKBM@nistk163?$AA@
	DD	FLAT:??_C@_08GJEGMHBJ@nistk233?$AA@
	DD	FLAT:??_C@_08GFBDCIPI@nistk283?$AA@
	DD	FLAT:??_C@_08LEIEMOBG@nistk409?$AA@
	DD	FLAT:??_C@_08MBKODFPO@nistk571?$AA@
	DD	FLAT:??_C@_08HACIMIGN@nistb163?$AA@
	DD	FLAT:??_C@_08GEFGKFGI@nistb233?$AA@
	DD	FLAT:??_C@_08GIADEKIJ@nistb283?$AA@
	DD	FLAT:??_C@_08LJJEKMGH@nistb409?$AA@
	DD	FLAT:??_C@_08MMLOFHIP@nistb571?$AA@
?test_curves_bits@?1??speed_main@@9@9 DD 0a0H		; `speed_main'::`2'::test_curves_bits
	DD	0c0H
	DD	0e0H
	DD	0100H
	DD	0180H
	DD	0209H
	DD	0a3H
	DD	0e9H
	DD	011bH
	DD	0199H
	DD	023bH
	DD	0a3H
	DD	0e9H
	DD	011bH
	DD	0199H
	DD	023bH
_test512 DB	030H
	DB	082H
	DB	01H
	DB	03aH
	DB	02H
	DB	01H
	DB	00H
	DB	02H
	DB	041H
	DB	00H
	DB	0d6H
	DB	033H
	DB	0b9H
	DB	0c8H
	DB	0fbH
	DB	04fH
	DB	03cH
	DB	07dH
	DB	0c0H
	DB	01H
	DB	086H
	DB	0d0H
	DB	0e7H
	DB	0a0H
	DB	055H
	DB	0f2H
	DB	095H
	DB	093H
	DB	0ccH
	DB	04fH
	DB	0b7H
	DB	05bH
	DB	067H
	DB	05bH
	DB	094H
	DB	068H
	DB	0c9H
	DB	034H
	DB	015H
	DB	0deH
	DB	0a5H
	DB	02eH
	DB	01cH
	DB	033H
	DB	0c2H
	DB	06eH
	DB	0fcH
	DB	034H
	DB	05eH
	DB	071H
	DB	013H
	DB	0b7H
	DB	0d6H
	DB	0eeH
	DB	0d8H
	DB	0a5H
	DB	065H
	DB	05H
	DB	072H
	DB	087H
	DB	0a8H
	DB	0b0H
	DB	077H
	DB	0feH
	DB	057H
	DB	0f5H
	DB	0fcH
	DB	05fH
	DB	055H
	DB	083H
	DB	087H
	DB	0ddH
	DB	057H
	DB	049H
	DB	02H
	DB	03H
	DB	01H
	DB	00H
	DB	01H
	DB	02H
	DB	041H
	DB	00H
	DB	0a7H
	DB	0f7H
	DB	091H
	DB	0c5H
	DB	0fH
	DB	084H
	DB	057H
	DB	0dcH
	DB	07H
	DB	0f7H
	DB	06aH
	DB	07fH
	DB	060H
	DB	052H
	DB	0b3H
	DB	072H
	DB	0f1H
	DB	066H
	DB	01fH
	DB	07dH
	DB	097H
	DB	03bH
	DB	09eH
	DB	0b6H
	DB	0aH
	DB	08fH
	DB	08cH
	DB	0cfH
	DB	042H
	DB	023H
	DB	00H
	DB	04H
	DB	0d4H
	DB	028H
	DB	0eH
	DB	01cH
	DB	090H
	DB	0c4H
	DB	011H
	DB	025H
	DB	025H
	DB	0a5H
	DB	093H
	DB	0a5H
	DB	02fH
	DB	070H
	DB	02H
	DB	0dfH
	DB	081H
	DB	09cH
	DB	049H
	DB	03H
	DB	0a0H
	DB	0f8H
	DB	06dH
	DB	054H
	DB	02eH
	DB	026H
	DB	0deH
	DB	0aaH
	DB	085H
	DB	059H
	DB	0a8H
	DB	031H
	DB	02H
	DB	021H
	DB	00H
	DB	0ebH
	DB	047H
	DB	0d7H
	DB	03bH
	DB	0f6H
	DB	0c3H
	DB	0ddH
	DB	05aH
	DB	046H
	DB	0c5H
	DB	0b9H
	DB	02bH
	DB	09aH
	DB	0a0H
	DB	09H
	DB	08fH
	DB	0a6H
	DB	0fbH
	DB	0f3H
	DB	078H
	DB	07aH
	DB	033H
	DB	070H
	DB	09dH
	DB	0fH
	DB	042H
	DB	06bH
	DB	013H
	DB	068H
	DB	024H
	DB	0d3H
	DB	015H
	DB	02H
	DB	021H
	DB	00H
	DB	0e9H
	DB	010H
	DB	0b0H
	DB	0b3H
	DB	0dH
	DB	0e2H
	DB	082H
	DB	068H
	DB	077H
	DB	08aH
	DB	06eH
	DB	07cH
	DB	0daH
	DB	0bcH
	DB	03eH
	DB	053H
	DB	083H
	DB	0fbH
	DB	0d6H
	DB	022H
	DB	0e7H
	DB	0b5H
	DB	0aeH
	DB	06eH
	DB	080H
	DB	0daH
	DB	00H
	DB	055H
	DB	097H
	DB	0c1H
	DB	0d0H
	DB	065H
	DB	02H
	DB	020H
	DB	04cH
	DB	0f8H
	DB	073H
	DB	0b1H
	DB	06aH
	DB	049H
	DB	029H
	DB	061H
	DB	01fH
	DB	046H
	DB	010H
	DB	0dH
	DB	0f3H
	DB	0c7H
	DB	0e7H
	DB	058H
	DB	0d7H
	DB	088H
	DB	015H
	DB	05eH
	DB	094H
	DB	09bH
	DB	0bfH
	DB	07bH
	DB	0a2H
	DB	042H
	DB	058H
	DB	045H
	DB	041H
	DB	0cH
	DB	0cbH
	DB	01H
	DB	02H
	DB	020H
	DB	012H
	DB	011H
	DB	0baH
	DB	031H
	DB	057H
	DB	09dH
	DB	03dH
	DB	011H
	DB	0eH
	DB	05bH
	DB	08cH
	DB	02fH
	DB	05fH
	DB	0e2H
	DB	02H
	DB	04fH
	DB	05H
	DB	047H
	DB	08cH
	DB	015H
	DB	08eH
	DB	0b3H
	DB	056H
	DB	03fH
	DB	0b8H
	DB	0fbH
	DB	0adH
	DB	0d4H
	DB	0f4H
	DB	0fcH
	DB	010H
	DB	0c5H
	DB	02H
	DB	020H
	DB	018H
	DB	0a1H
	DB	029H
	DB	099H
	DB	05bH
	DB	0d9H
	DB	0c8H
	DB	0d4H
	DB	0fcH
	DB	049H
	DB	07aH
	DB	02aH
	DB	021H
	DB	02cH
	DB	049H
	DB	0e4H
	DB	04fH
	DB	0ebH
	DB	0efH
	DB	051H
	DB	0f1H
	DB	0abH
	DB	06dH
	DB	0fbH
	DB	04bH
	DB	014H
	DB	0e9H
	DB	04bH
	DB	052H
	DB	0b5H
	DB	082H
	DB	02cH
	ORG $+2
_test1024 DB	030H
	DB	082H
	DB	02H
	DB	05cH
	DB	02H
	DB	01H
	DB	00H
	DB	02H
	DB	081H
	DB	081H
	DB	00H
	DB	0dcH
	DB	098H
	DB	043H
	DB	0e8H
	DB	03dH
	DB	043H
	DB	05bH
	DB	0e4H
	DB	05H
	DB	0cdH
	DB	0d0H
	DB	0a9H
	DB	03eH
	DB	0cbH
	DB	083H
	DB	075H
	DB	0f6H
	DB	0b5H
	DB	0a5H
	DB	09fH
	DB	06bH
	DB	0e9H
	DB	034H
	DB	041H
	DB	029H
	DB	018H
	DB	0faH
	DB	06aH
	DB	055H
	DB	04dH
	DB	070H
	DB	0fcH
	DB	0ecH
	DB	0aeH
	DB	087H
	DB	038H
	DB	0aH
	DB	020H
	DB	0a9H
	DB	0c0H
	DB	045H
	DB	077H
	DB	06eH
	DB	057H
	DB	060H
	DB	057H
	DB	0f4H
	DB	0edH
	DB	096H
	DB	022H
	DB	0cbH
	DB	08fH
	DB	0e1H
	DB	033H
	DB	03aH
	DB	017H
	DB	01fH
	DB	0edH
	DB	037H
	DB	0a5H
	DB	06fH
	DB	0ebH
	DB	0a6H
	DB	0bcH
	DB	012H
	DB	080H
	DB	01dH
	DB	053H
	DB	0bdH
	DB	070H
	DB	0ebH
	DB	021H
	DB	076H
	DB	03eH
	DB	0c9H
	DB	02fH
	DB	01aH
	DB	045H
	DB	024H
	DB	082H
	DB	0ffH
	DB	0cdH
	DB	059H
	DB	032H
	DB	06H
	DB	02eH
	DB	012H
	DB	03bH
	DB	023H
	DB	078H
	DB	0edH
	DB	012H
	DB	03dH
	DB	0e0H
	DB	08dH
	DB	0f9H
	DB	067H
	DB	04fH
	DB	037H
	DB	04eH
	DB	047H
	DB	02H
	DB	04cH
	DB	02dH
	DB	0c0H
	DB	04fH
	DB	01fH
	DB	0b3H
	DB	094H
	DB	0e1H
	DB	041H
	DB	02eH
	DB	02dH
	DB	090H
	DB	010H
	DB	0fcH
	DB	082H
	DB	091H
	DB	08bH
	DB	0fH
	DB	022H
	DB	0d4H
	DB	0f2H
	DB	0fcH
	DB	02cH
	DB	0abH
	DB	053H
	DB	055H
	DB	02H
	DB	03H
	DB	01H
	DB	00H
	DB	01H
	DB	02H
	DB	081H
	DB	080H
	DB	02bH
	DB	0ccH
	DB	03fH
	DB	08fH
	DB	058H
	DB	0baH
	DB	08bH
	DB	00H
	DB	016H
	DB	0f6H
	DB	0eaH
	DB	03aH
	DB	0f0H
	DB	030H
	DB	0d0H
	DB	05H
	DB	017H
	DB	0daH
	DB	0b0H
	DB	0ebH
	DB	09aH
	DB	02dH
	DB	04fH
	DB	026H
	DB	0b0H
	DB	0d6H
	DB	038H
	DB	0c1H
	DB	0ebH
	DB	0f5H
	DB	0d8H
	DB	03dH
	DB	01fH
	DB	070H
	DB	0f7H
	DB	07fH
	DB	0f4H
	DB	0e2H
	DB	0cfH
	DB	051H
	DB	051H
	DB	079H
	DB	088H
	DB	0faH
	DB	0e8H
	DB	032H
	DB	0eH
	DB	07bH
	DB	02dH
	DB	097H
	DB	0f2H
	DB	0faH
	DB	0baH
	DB	027H
	DB	0c5H
	DB	09cH
	DB	0d9H
	DB	0c5H
	DB	0ebH
	DB	08aH
	DB	079H
	DB	052H
	DB	03cH
	DB	064H
	DB	034H
	DB	07dH
	DB	0c2H
	DB	0cfH
	DB	028H
	DB	0c7H
	DB	04eH
	DB	0d5H
	DB	043H
	DB	0bH
	DB	0d1H
	DB	0a6H
	DB	0caH
	DB	06dH
	DB	03H
	DB	02dH
	DB	072H
	DB	023H
	DB	0bcH
	DB	06dH
	DB	05H
	DB	0faH
	DB	016H
	DB	09H
	DB	02fH
	DB	02eH
	DB	05cH
	DB	0b6H
	DB	0eeH
	DB	074H
	DB	0ddH
	DB	0d2H
	DB	048H
	DB	08eH
	DB	036H
	DB	0cH
	DB	06H
	DB	03dH
	DB	04dH
	DB	0e5H
	DB	010H
	DB	082H
	DB	0ebH
	DB	06aH
	DB	0f3H
	DB	04bH
	DB	09fH
	DB	0d6H
	DB	0edH
	DB	011H
	DB	0b1H
	DB	06eH
	DB	0ecH
	DB	0f4H
	DB	0feH
	DB	08eH
	DB	075H
	DB	094H
	DB	020H
	DB	02fH
	DB	0cbH
	DB	0acH
	DB	046H
	DB	0f1H
	DB	02H
	DB	041H
	DB	00H
	DB	0f9H
	DB	08cH
	DB	0a3H
	DB	085H
	DB	0b1H
	DB	0ddH
	DB	029H
	DB	0afH
	DB	065H
	DB	0c1H
	DB	033H
	DB	0f3H
	DB	095H
	DB	0c5H
	DB	052H
	DB	068H
	DB	0bH
	DB	0d4H
	DB	0f1H
	DB	0e5H
	DB	0eH
	DB	02H
	DB	09fH
	DB	04fH
	DB	0faH
	DB	077H
	DB	0dcH
	DB	046H
	DB	09eH
	DB	0c7H
	DB	0a6H
	DB	0e4H
	DB	016H
	DB	029H
	DB	0daH
	DB	0b0H
	DB	07H
	DB	0cfH
	DB	05bH
	DB	0a9H
	DB	012H
	DB	08aH
	DB	0ddH
	DB	063H
	DB	0aH
	DB	0deH
	DB	02eH
	DB	08cH
	DB	066H
	DB	08bH
	DB	08cH
	DB	0dcH
	DB	019H
	DB	0a3H
	DB	07eH
	DB	0f4H
	DB	03bH
	DB	0d0H
	DB	01aH
	DB	08cH
	DB	0a4H
	DB	0c2H
	DB	0e1H
	DB	0d3H
	DB	02H
	DB	041H
	DB	00H
	DB	0e2H
	DB	04cH
	DB	05H
	DB	0f2H
	DB	04H
	DB	086H
	DB	04eH
	DB	061H
	DB	043H
	DB	0dbH
	DB	0b0H
	DB	0b9H
	DB	096H
	DB	086H
	DB	052H
	DB	02cH
	DB	0caH
	DB	08dH
	DB	07bH
	DB	0abH
	DB	0bH
	DB	013H
	DB	0dH
	DB	07eH
	DB	038H
	DB	05bH
	DB	0e2H
	DB	02eH
	DB	07bH
	DB	0eH
	DB	0e7H
	DB	019H
	DB	099H
	DB	038H
	DB	0e7H
	DB	0f2H
	DB	021H
	DB	0bdH
	DB	085H
	DB	085H
	DB	0e3H
	DB	0fdH
	DB	028H
	DB	077H
	DB	020H
	DB	031H
	DB	071H
	DB	02cH
	DB	0d0H
	DB	0ffH
	DB	0fbH
	DB	02eH
	DB	0afH
	DB	085H
	DB	0b4H
	DB	086H
	DB	0caH
	DB	0f3H
	DB	0bbH
	DB	0caH
	DB	0aaH
	DB	0fH
	DB	095H
	DB	037H
	DB	02H
	DB	040H
	DB	0eH
	DB	041H
	DB	09aH
	DB	095H
	DB	0e8H
	DB	0b3H
	DB	059H
	DB	0ceH
	DB	04bH
	DB	061H
	DB	0deH
	DB	035H
	DB	0ecH
	DB	038H
	DB	079H
	DB	09cH
	DB	0b8H
	DB	010H
	DB	052H
	DB	041H
	DB	063H
	DB	0abH
	DB	082H
	DB	0aeH
	DB	06fH
	DB	00H
	DB	0a9H
	DB	0f4H
	DB	0deH
	DB	0ddH
	DB	049H
	DB	0bH
	DB	07eH
	DB	0b8H
	DB	0a5H
	DB	065H
	DB	0a9H
	DB	0cH
	DB	08fH
	DB	08fH
	DB	0f9H
	DB	01fH
	DB	035H
	DB	0c6H
	DB	092H
	DB	0b8H
	DB	05eH
	DB	0b0H
	DB	066H
	DB	0abH
	DB	052H
	DB	040H
	DB	0c0H
	DB	0b6H
	DB	036H
	DB	06aH
	DB	07dH
	DB	080H
	DB	046H
	DB	04H
	DB	02H
	DB	0e5H
	DB	09fH
	DB	041H
	DB	02H
	DB	041H
	DB	00H
	DB	0c0H
	DB	0adH
	DB	0ccH
	DB	04eH
	DB	021H
	DB	0eeH
	DB	01dH
	DB	024H
	DB	091H
	DB	0fbH
	DB	0a7H
	DB	080H
	DB	08dH
	DB	09aH
	DB	0b6H
	DB	0b3H
	DB	02eH
	DB	08fH
	DB	0c2H
	DB	0e1H
	DB	082H
	DB	0dfH
	DB	069H
	DB	018H
	DB	0b4H
	DB	071H
	DB	0ffH
	DB	0a6H
	DB	065H
	DB	0deH
	DB	0edH
	DB	084H
	DB	08dH
	DB	042H
	DB	0b7H
	DB	0b3H
	DB	021H
	DB	069H
	DB	056H
	DB	01cH
	DB	07H
	DB	060H
	DB	051H
	DB	029H
	DB	04H
	DB	0ffH
	DB	034H
	DB	06H
	DB	0ddH
	DB	0b9H
	DB	067H
	DB	02cH
	DB	07cH
	DB	04H
	DB	093H
	DB	0eH
	DB	046H
	DB	015H
	DB	0bbH
	DB	02aH
	DB	0b7H
	DB	01bH
	DB	0e7H
	DB	087H
	DB	02H
	DB	040H
	DB	078H
	DB	0daH
	DB	05dH
	DB	07H
	DB	051H
	DB	0cH
	DB	016H
	DB	07aH
	DB	09fH
	DB	029H
	DB	020H
	DB	084H
	DB	0dH
	DB	042H
	DB	0faH
	DB	0d7H
	DB	00H
	DB	0d8H
	DB	077H
	DB	07eH
	DB	0b0H
	DB	0b0H
	DB	06bH
	DB	0d6H
	DB	05bH
	DB	053H
	DB	0b8H
	DB	09bH
	DB	07aH
	DB	0cdH
	DB	0c7H
	DB	02bH
	DB	0b8H
	DB	06aH
	DB	063H
	DB	0a9H
	DB	0fbH
	DB	06fH
	DB	0a4H
	DB	072H
	DB	0bfH
	DB	04cH
	DB	05dH
	DB	00H
	DB	014H
	DB	0baH
	DB	0faH
	DB	059H
	DB	088H
	DB	0edH
	DB	0e4H
	DB	0e0H
	DB	08cH
	DB	0a2H
	DB	0ecH
	DB	014H
	DB	07eH
	DB	02dH
	DB	0e2H
	DB	0f0H
	DB	046H
	DB	049H
	DB	095H
	DB	045H
_test2048 DB	030H
	DB	082H
	DB	04H
	DB	0a3H
	DB	02H
	DB	01H
	DB	00H
	DB	02H
	DB	082H
	DB	01H
	DB	01H
	DB	00H
	DB	0c0H
	DB	0c0H
	DB	0ceH
	DB	03eH
	DB	03cH
	DB	053H
	DB	067H
	DB	03fH
	DB	04fH
	DB	0c5H
	DB	02fH
	DB	0a4H
	DB	0c2H
	DB	05aH
	DB	02fH
	DB	058H
	DB	0fdH
	DB	027H
	DB	052H
	DB	06aH
	DB	0e8H
	DB	0cfH
	DB	04aH
	DB	073H
	DB	047H
	DB	08dH
	DB	025H
	DB	0fH
	DB	05fH
	DB	03H
	DB	026H
	DB	078H
	DB	0efH
	DB	0f0H
	DB	022H
	DB	012H
	DB	0d3H
	DB	0deH
	DB	047H
	DB	0b2H
	DB	01cH
	DB	0bH
	DB	038H
	DB	063H
	DB	01aH
	DB	06cH
	DB	085H
	DB	07aH
	DB	080H
	DB	0c6H
	DB	08fH
	DB	0a0H
	DB	041H
	DB	0afH
	DB	062H
	DB	0c4H
	DB	067H
	DB	032H
	DB	088H
	DB	0f8H
	DB	0a6H
	DB	09cH
	DB	0f5H
	DB	023H
	DB	01dH
	DB	0e4H
	DB	0acH
	DB	03fH
	DB	029H
	DB	0f9H
	DB	0ecH
	DB	0e1H
	DB	08bH
	DB	026H
	DB	03H
	DB	02cH
	DB	0b2H
	DB	0abH
	DB	0f3H
	DB	07dH
	DB	0b5H
	DB	0caH
	DB	049H
	DB	0c0H
	DB	08fH
	DB	01cH
	DB	0dfH
	DB	033H
	DB	03aH
	DB	060H
	DB	0daH
	DB	03cH
	DB	0b0H
	DB	016H
	DB	0f8H
	DB	0a9H
	DB	012H
	DB	08fH
	DB	064H
	DB	0acH
	DB	023H
	DB	0cH
	DB	069H
	DB	064H
	DB	097H
	DB	05dH
	DB	099H
	DB	0d4H
	DB	09H
	DB	083H
	DB	09bH
	DB	061H
	DB	0d3H
	DB	0acH
	DB	0f0H
	DB	0deH
	DB	0ddH
	DB	05eH
	DB	09fH
	DB	044H
	DB	094H
	DB	0dbH
	DB	03aH
	DB	04dH
	DB	097H
	DB	0e8H
	DB	052H
	DB	029H
	DB	0f7H
	DB	0dbH
	DB	094H
	DB	07H
	DB	045H
	DB	090H
	DB	078H
	DB	01eH
	DB	031H
	DB	0bH
	DB	080H
	DB	0f7H
	DB	057H
	DB	0adH
	DB	01cH
	DB	079H
	DB	0c5H
	DB	0cbH
	DB	032H
	DB	0b0H
	DB	0ceH
	DB	0cdH
	DB	074H
	DB	0b3H
	DB	0e2H
	DB	094H
	DB	0c5H
	DB	078H
	DB	02fH
	DB	034H
	DB	01aH
	DB	045H
	DB	0f7H
	DB	08cH
	DB	052H
	DB	0a5H
	DB	0bcH
	DB	08dH
	DB	0ecH
	DB	0d1H
	DB	02fH
	DB	031H
	DB	03bH
	DB	0f0H
	DB	049H
	DB	059H
	DB	05eH
	DB	088H
	DB	09dH
	DB	015H
	DB	092H
	DB	035H
	DB	032H
	DB	0c1H
	DB	0e7H
	DB	061H
	DB	0ecH
	DB	050H
	DB	048H
	DB	07cH
	DB	0baH
	DB	05H
	DB	0f9H
	DB	0f8H
	DB	0f8H
	DB	0a7H
	DB	08cH
	DB	083H
	DB	0e8H
	DB	066H
	DB	05bH
	DB	0ebH
	DB	0feH
	DB	0d8H
	DB	04fH
	DB	0ddH
	DB	06dH
	DB	036H
	DB	0c0H
	DB	0b2H
	DB	090H
	DB	0fH
	DB	0b8H
	DB	052H
	DB	0f9H
	DB	04H
	DB	09bH
	DB	040H
	DB	02cH
	DB	027H
	DB	0d6H
	DB	036H
	DB	08eH
	DB	0c2H
	DB	01bH
	DB	044H
	DB	0f3H
	DB	092H
	DB	0d5H
	DB	015H
	DB	09eH
	DB	09aH
	DB	0bcH
	DB	0f3H
	DB	07dH
	DB	03H
	DB	0d7H
	DB	02H
	DB	014H
	DB	020H
	DB	0e9H
	DB	010H
	DB	092H
	DB	0fdH
	DB	0f9H
	DB	0fcH
	DB	08fH
	DB	0e5H
	DB	018H
	DB	0e1H
	DB	095H
	DB	0ccH
	DB	09eH
	DB	060H
	DB	0a6H
	DB	0faH
	DB	038H
	DB	04dH
	DB	02H
	DB	03H
	DB	01H
	DB	00H
	DB	01H
	DB	02H
	DB	082H
	DB	01H
	DB	00H
	DB	00H
	DB	0c3H
	DB	0c3H
	DB	0dH
	DB	0b4H
	DB	027H
	DB	090H
	DB	08dH
	DB	04bH
	DB	0bfH
	DB	0b8H
	DB	084H
	DB	0aaH
	DB	0d0H
	DB	0b8H
	DB	0c7H
	DB	05dH
	DB	099H
	DB	0beH
	DB	055H
	DB	0f6H
	DB	03eH
	DB	07cH
	DB	049H
	DB	020H
	DB	0cbH
	DB	08aH
	DB	08eH
	DB	019H
	DB	0eH
	DB	066H
	DB	024H
	DB	0acH
	DB	0afH
	DB	03H
	DB	033H
	DB	097H
	DB	0ebH
	DB	095H
	DB	0d5H
	DB	03bH
	DB	0fH
	DB	040H
	DB	056H
	DB	04H
	DB	050H
	DB	0d1H
	DB	0e6H
	DB	0beH
	DB	084H
	DB	0bH
	DB	025H
	DB	0d3H
	DB	09cH
	DB	0e2H
	DB	083H
	DB	06cH
	DB	0f5H
	DB	062H
	DB	05dH
	DB	0baH
	DB	02bH
	DB	07dH
	DB	03dH
	DB	07aH
	DB	06cH
	DB	0e1H
	DB	0d2H
	DB	0eH
	DB	054H
	DB	093H
	DB	080H
	DB	01H
	DB	091H
	DB	051H
	DB	09H
	DB	0e8H
	DB	05bH
	DB	08eH
	DB	047H
	DB	0bdH
	DB	064H
	DB	0e4H
	DB	0eH
	DB	03H
	DB	083H
	DB	055H
	DB	0cfH
	DB	05aH
	DB	037H
	DB	0f0H
	DB	025H
	DB	0b5H
	DB	07dH
	DB	021H
	DB	0d7H
	DB	069H
	DB	0dfH
	DB	06fH
	DB	0c2H
	DB	0cfH
	DB	010H
	DB	0c9H
	DB	08aH
	DB	040H
	DB	09fH
	DB	07aH
	DB	070H
	DB	0c0H
	DB	0e8H
	DB	0e8H
	DB	0c0H
	DB	0e6H
	DB	09aH
	DB	015H
	DB	0aH
	DB	08dH
	DB	04eH
	DB	046H
	DB	0cbH
	DB	07aH
	DB	0dbH
	DB	0b3H
	DB	0cbH
	DB	083H
	DB	02H
	DB	0c4H
	DB	0f0H
	DB	0abH
	DB	0ebH
	DB	02H
	DB	01H
	DB	0eH
	DB	023H
	DB	0fcH
	DB	01dH
	DB	0c4H
	DB	0bdH
	DB	0d4H
	DB	0aaH
	DB	05dH
	DB	031H
	DB	046H
	DB	099H
	DB	0ceH
	DB	09eH
	DB	0f8H
	DB	04H
	DB	075H
	DB	010H
	DB	067H
	DB	0c4H
	DB	053H
	DB	047H
	DB	044H
	DB	0faH
	DB	0c2H
	DB	025H
	DB	073H
	DB	07eH
	DB	0d0H
	DB	08eH
	DB	059H
	DB	0d1H
	DB	0b2H
	DB	05aH
	DB	0f4H
	DB	0c7H
	DB	018H
	DB	092H
	DB	02fH
	DB	039H
	DB	0abH
	DB	0cdH
	DB	0a3H
	DB	0b5H
	DB	0c2H
	DB	0b9H
	DB	0c7H
	DB	0b9H
	DB	01bH
	DB	09fH
	DB	048H
	DB	0faH
	DB	013H
	DB	0c6H
	DB	098H
	DB	04dH
	DB	0caH
	DB	084H
	DB	09cH
	DB	06H
	DB	0caH
	DB	0e7H
	DB	089H
	DB	01H
	DB	04H
	DB	0c4H
	DB	06cH
	DB	0fdH
	DB	029H
	DB	059H
	DB	035H
	DB	0e7H
	DB	0f3H
	DB	0ddH
	DB	0ceH
	DB	064H
	DB	059H
	DB	0bfH
	DB	021H
	DB	013H
	DB	0a9H
	DB	09fH
	DB	0eH
	DB	0c5H
	DB	0ffH
	DB	0bdH
	DB	033H
	DB	00H
	DB	0ecH
	DB	0acH
	DB	06bH
	DB	011H
	DB	0efH
	DB	051H
	DB	05eH
	DB	0adH
	DB	07H
	DB	015H
	DB	0deH
	DB	0b8H
	DB	05fH
	DB	0c6H
	DB	0b9H
	DB	0a3H
	DB	022H
	DB	065H
	DB	046H
	DB	083H
	DB	014H
	DB	0dfH
	DB	0d0H
	DB	0f1H
	DB	044H
	DB	08aH
	DB	0e1H
	DB	09cH
	DB	023H
	DB	033H
	DB	0b4H
	DB	097H
	DB	033H
	DB	0e6H
	DB	06bH
	DB	081H
	DB	02H
	DB	081H
	DB	081H
	DB	00H
	DB	0ecH
	DB	012H
	DB	0a7H
	DB	059H
	DB	074H
	DB	06aH
	DB	0deH
	DB	03eH
	DB	0adH
	DB	0d8H
	DB	036H
	DB	080H
	DB	050H
	DB	0a2H
	DB	0d5H
	DB	021H
	DB	081H
	DB	07H
	DB	0f1H
	DB	0d0H
	DB	091H
	DB	0f2H
	DB	06cH
	DB	012H
	DB	02fH
	DB	09dH
	DB	01aH
	DB	026H
	DB	0f8H
	DB	030H
	DB	065H
	DB	0dfH
	DB	0e8H
	DB	0c0H
	DB	09bH
	DB	06aH
	DB	030H
	DB	098H
	DB	082H
	DB	087H
	DB	0ecH
	DB	0a2H
	DB	056H
	DB	087H
	DB	062H
	DB	06fH
	DB	0e7H
	DB	09fH
	DB	0f6H
	DB	056H
	DB	0e6H
	DB	071H
	DB	08fH
	DB	049H
	DB	086H
	DB	093H
	DB	05aH
	DB	04dH
	DB	034H
	DB	058H
	DB	0feH
	DB	0d9H
	DB	04H
	DB	013H
	DB	0afH
	DB	079H
	DB	0b7H
	DB	0adH
	DB	011H
	DB	0d1H
	DB	030H
	DB	09aH
	DB	014H
	DB	06H
	DB	0a0H
	DB	0faH
	DB	0b7H
	DB	055H
	DB	0dcH
	DB	06cH
	DB	05aH
	DB	04cH
	DB	02cH
	DB	059H
	DB	056H
	DB	0f6H
	DB	0e8H
	DB	09dH
	DB	0afH
	DB	0aH
	DB	078H
	DB	099H
	DB	06H
	DB	06H
	DB	09eH
	DB	0e7H
	DB	09cH
	DB	051H
	DB	055H
	DB	043H
	DB	0fcH
	DB	03bH
	DB	06cH
	DB	0bH
	DB	0bfH
	DB	02dH
	DB	041H
	DB	0a7H
	DB	0afH
	DB	0b7H
	DB	0e0H
	DB	0e8H
	DB	028H
	DB	018H
	DB	0b4H
	DB	013H
	DB	0d1H
	DB	0e6H
	DB	097H
	DB	0d0H
	DB	09fH
	DB	06aH
	DB	080H
	DB	0caH
	DB	0ddH
	DB	01aH
	DB	07eH
	DB	015H
	DB	02H
	DB	081H
	DB	081H
	DB	00H
	DB	0d1H
	DB	06H
	DB	0cH
	DB	01fH
	DB	0e3H
	DB	0d0H
	DB	0abH
	DB	0d6H
	DB	0caH
	DB	07cH
	DB	0bcH
	DB	07dH
	DB	013H
	DB	035H
	DB	0ceH
	DB	027H
	DB	0cdH
	DB	0d8H
	DB	049H
	DB	051H
	DB	063H
	DB	064H
	DB	0fH
	DB	0caH
	DB	06H
	DB	012H
	DB	0fcH
	DB	07H
	DB	03eH
	DB	0afH
	DB	061H
	DB	06dH
	DB	0e2H
	DB	053H
	DB	039H
	DB	027H
	DB	0aeH
	DB	0c3H
	DB	011H
	DB	09eH
	DB	094H
	DB	01H
	DB	04fH
	DB	0e3H
	DB	0f3H
	DB	067H
	DB	0f9H
	DB	077H
	DB	0f9H
	DB	0e7H
	DB	095H
	DB	03aH
	DB	06fH
	DB	0e2H
	DB	020H
	DB	073H
	DB	03eH
	DB	0a4H
	DB	07aH
	DB	028H
	DB	0d4H
	DB	061H
	DB	097H
	DB	0f6H
	DB	017H
	DB	0a0H
	DB	023H
	DB	010H
	DB	02bH
	DB	0ceH
	DB	084H
	DB	057H
	DB	07eH
	DB	025H
	DB	01fH
	DB	0f4H
	DB	0a8H
	DB	054H
	DB	0d2H
	DB	065H
	DB	094H
	DB	0ccH
	DB	095H
	DB	0aH
	DB	0abH
	DB	030H
	DB	0c1H
	DB	059H
	DB	01fH
	DB	061H
	DB	08eH
	DB	0b9H
	DB	06bH
	DB	0d7H
	DB	04eH
	DB	0b9H
	DB	083H
	DB	043H
	DB	079H
	DB	085H
	DB	011H
	DB	0bcH
	DB	0fH
	DB	0aeH
	DB	025H
	DB	020H
	DB	05H
	DB	0bcH
	DB	0d2H
	DB	048H
	DB	0a1H
	DB	068H
	DB	09H
	DB	084H
	DB	0f6H
	DB	012H
	DB	09aH
	DB	066H
	DB	0b9H
	DB	02bH
	DB	0bbH
	DB	076H
	DB	03H
	DB	017H
	DB	046H
	DB	04eH
	DB	097H
	DB	059H
	DB	02H
	DB	081H
	DB	080H
	DB	09H
	DB	04cH
	DB	0faH
	DB	0d6H
	DB	0e5H
	DB	065H
	DB	048H
	DB	078H
	DB	043H
	DB	0b5H
	DB	01fH
	DB	00H
	DB	093H
	DB	02cH
	DB	0b7H
	DB	024H
	DB	0e8H
	DB	0c6H
	DB	07dH
	DB	05aH
	DB	070H
	DB	045H
	DB	092H
	DB	0c8H
	DB	06cH
	DB	0a3H
	DB	0cdH
	DB	0e1H
	DB	0f7H
	DB	029H
	DB	040H
	DB	0faH
	DB	03fH
	DB	05bH
	DB	047H
	DB	044H
	DB	039H
	DB	0c1H
	DB	0e8H
	DB	072H
	DB	09eH
	DB	07aH
	DB	0eH
	DB	0daH
	DB	0aaH
	DB	0a0H
	DB	02aH
	DB	09H
	DB	0fdH
	DB	054H
	DB	093H
	DB	023H
	DB	0aaH
	DB	037H
	DB	085H
	DB	05bH
	DB	0ccH
	DB	0d4H
	DB	0f9H
	DB	0d8H
	DB	0ffH
	DB	0c1H
	DB	061H
	DB	0dH
	DB	0bdH
	DB	07eH
	DB	018H
	DB	024H
	DB	073H
	DB	06dH
	DB	040H
	DB	072H
	DB	0f1H
	DB	093H
	DB	09H
	DB	048H
	DB	097H
	DB	06cH
	DB	084H
	DB	090H
	DB	0a8H
	DB	046H
	DB	014H
	DB	01H
	DB	039H
	DB	011H
	DB	0e5H
	DB	03cH
	DB	041H
	DB	027H
	DB	032H
	DB	075H
	DB	024H
	DB	0edH
	DB	0a1H
	DB	0d9H
	DB	012H
	DB	029H
	DB	08aH
	DB	028H
	DB	071H
	DB	089H
	DB	08dH
	DB	0caH
	DB	030H
	DB	0b0H
	DB	01H
	DB	0c4H
	DB	02fH
	DB	082H
	DB	019H
	DB	014H
	DB	04cH
	DB	070H
	DB	01cH
	DB	0b8H
	DB	023H
	DB	02eH
	DB	0e8H
	DB	090H
	DB	049H
	DB	097H
	DB	092H
	DB	097H
	DB	06bH
	DB	07aH
	DB	09dH
	DB	0b9H
	DB	02H
	DB	081H
	DB	080H
	DB	0fH
	DB	0eH
	DB	0a1H
	DB	076H
	DB	0f6H
	DB	0a1H
	DB	044H
	DB	08fH
	DB	0afH
	DB	07cH
	DB	076H
	DB	0d3H
	DB	087H
	DB	0bbH
	DB	0bbH
	DB	083H
	DB	010H
	DB	088H
	DB	01H
	DB	018H
	DB	014H
	DB	0d1H
	DB	0d3H
	DB	075H
	DB	059H
	DB	024H
	DB	0aaH
	DB	0f5H
	DB	016H
	DB	0a5H
	DB	0e9H
	DB	09dH
	DB	0d1H
	DB	0ccH
	DB	0eeH
	DB	0f4H
	DB	015H
	DB	0d9H
	DB	0c5H
	DB	07eH
	DB	027H
	DB	0e9H
	DB	044H
	DB	049H
	DB	06H
	DB	072H
	DB	0b9H
	DB	0fcH
	DB	0d3H
	DB	08aH
	DB	0c4H
	DB	02cH
	DB	036H
	DB	07dH
	DB	012H
	DB	09bH
	DB	05aH
	DB	0aaH
	DB	0dcH
	DB	085H
	DB	0eeH
	DB	06eH
	DB	0adH
	DB	054H
	DB	0b3H
	DB	0f4H
	DB	0fcH
	DB	031H
	DB	0a1H
	DB	06H
	DB	03aH
	DB	070H
	DB	057H
	DB	0cH
	DB	0f3H
	DB	095H
	DB	05bH
	DB	03eH
	DB	0e8H
	DB	0fdH
	DB	01aH
	DB	04fH
	DB	0f6H
	DB	078H
	DB	093H
	DB	046H
	DB	06aH
	DB	0d7H
	DB	031H
	DB	0b4H
	DB	084H
	DB	064H
	DB	085H
	DB	09H
	DB	038H
	DB	089H
	DB	092H
	DB	094H
	DB	01cH
	DB	0bfH
	DB	0e2H
	DB	03cH
	DB	02aH
	DB	0e0H
	DB	0ffH
	DB	099H
	DB	0a3H
	DB	0f0H
	DB	02bH
	DB	031H
	DB	0c2H
	DB	036H
	DB	0cdH
	DB	060H
	DB	0bfH
	DB	09dH
	DB	02dH
	DB	074H
	DB	032H
	DB	0e8H
	DB	09cH
	DB	093H
	DB	06eH
	DB	0bbH
	DB	091H
	DB	07bH
	DB	0fdH
	DB	0d9H
	DB	02H
	DB	081H
	DB	081H
	DB	00H
	DB	0a2H
	DB	071H
	DB	025H
	DB	038H
	DB	0ebH
	DB	02aH
	DB	0e9H
	DB	037H
	DB	0cdH
	DB	0feH
	DB	044H
	DB	0ceH
	DB	090H
	DB	03fH
	DB	052H
	DB	087H
	DB	084H
	DB	052H
	DB	01bH
	DB	0aeH
	DB	08dH
	DB	022H
	DB	094H
	DB	0ceH
	DB	038H
	DB	0e6H
	DB	04H
	DB	088H
	DB	076H
	DB	085H
	DB	09aH
	DB	0d3H
	DB	014H
	DB	09H
	DB	0e5H
	DB	069H
	DB	09aH
	DB	0ffH
	DB	058H
	DB	092H
	DB	02H
	DB	06aH
	DB	07dH
	DB	07cH
	DB	01eH
	DB	02cH
	DB	0fdH
	DB	0a8H
	DB	0caH
	DB	032H
	DB	014H
	DB	04fH
	DB	0dH
	DB	084H
	DB	0dH
	DB	037H
	DB	043H
	DB	0bfH
	DB	0e4H
	DB	05dH
	DB	012H
	DB	0c8H
	DB	024H
	DB	091H
	DB	027H
	DB	08dH
	DB	046H
	DB	0d9H
	DB	054H
	DB	053H
	DB	0e7H
	DB	062H
	DB	071H
	DB	0a8H
	DB	02bH
	DB	071H
	DB	041H
	DB	08dH
	DB	075H
	DB	0f8H
	DB	03aH
	DB	0a0H
	DB	061H
	DB	029H
	DB	046H
	DB	0a6H
	DB	0e5H
	DB	082H
	DB	0faH
	DB	03aH
	DB	0d9H
	DB	08H
	DB	0faH
	DB	0fcH
	DB	063H
	DB	0fdH
	DB	06bH
	DB	030H
	DB	0bcH
	DB	0f4H
	DB	04eH
	DB	09eH
	DB	08cH
	DB	025H
	DB	0cH
	DB	0b6H
	DB	055H
	DB	0e7H
	DB	03cH
	DB	0d4H
	DB	04eH
	DB	0bH
	DB	0fdH
	DB	08bH
	DB	0c3H
	DB	0eH
	DB	01dH
	DB	09cH
	DB	044H
	DB	057H
	DB	08fH
	DB	01fH
	DB	086H
	DB	0f7H
	DB	0d5H
	DB	01bH
	DB	0e4H
	DB	095H
	ORG $+1
_test4096 DB	030H
	DB	082H
	DB	09H
	DB	029H
	DB	02H
	DB	01H
	DB	00H
	DB	02H
	DB	082H
	DB	02H
	DB	01H
	DB	00H
	DB	0c0H
	DB	071H
	DB	0acH
	DB	01aH
	DB	013H
	DB	088H
	DB	082H
	DB	043H
	DB	03bH
	DB	051H
	DB	057H
	DB	071H
	DB	08dH
	DB	0b6H
	DB	02bH
	DB	082H
	DB	065H
	DB	021H
	DB	053H
	DB	05fH
	DB	028H
	DB	029H
	DB	04fH
	DB	08dH
	DB	07cH
	DB	08aH
	DB	0b9H
	DB	044H
	DB	0b3H
	DB	028H
	DB	041H
	DB	04fH
	DB	0d3H
	DB	0faH
	DB	06aH
	DB	0f8H
	DB	0b9H
	DB	028H
	DB	050H
	DB	039H
	DB	067H
	DB	053H
	DB	02cH
	DB	03cH
	DB	0d7H
	DB	0cbH
	DB	096H
	DB	041H
	DB	040H
	DB	032H
	DB	0bbH
	DB	0ebH
	DB	070H
	DB	0aeH
	DB	01fH
	DB	0b0H
	DB	065H
	DB	0f7H
	DB	03aH
	DB	0d9H
	DB	022H
	DB	0fdH
	DB	010H
	DB	0aeH
	DB	0bdH
	DB	02H
	DB	0e2H
	DB	0ddH
	DB	0f3H
	DB	0c2H
	DB	079H
	DB	03cH
	DB	0c6H
	DB	0fcH
	DB	075H
	DB	0bbH
	DB	0afH
	DB	04eH
	DB	03aH
	DB	036H
	DB	0c2H
	DB	04fH
	DB	0eaH
	DB	025H
	DB	0dfH
	DB	013H
	DB	016H
	DB	04bH
	DB	020H
	DB	0feH
	DB	04bH
	DB	069H
	DB	016H
	DB	0c4H
	DB	07fH
	DB	01aH
	DB	043H
	DB	0a6H
	DB	017H
	DB	01bH
	DB	0b9H
	DB	0aH
	DB	0f3H
	DB	09H
	DB	086H
	DB	028H
	DB	089H
	DB	0cfH
	DB	02cH
	DB	0d0H
	DB	0d4H
	DB	081H
	DB	0afH
	DB	0c6H
	DB	06dH
	DB	0e6H
	DB	021H
	DB	08dH
	DB	0eeH
	DB	0efH
	DB	0eaH
	DB	0dcH
	DB	0b7H
	DB	0c6H
	DB	03bH
	DB	063H
	DB	09fH
	DB	0eH
	DB	0adH
	DB	089H
	DB	078H
	DB	023H
	DB	018H
	DB	0bfH
	DB	070H
	DB	07eH
	DB	084H
	DB	0e0H
	DB	037H
	DB	0ecH
	DB	0dbH
	DB	08eH
	DB	09cH
	DB	03eH
	DB	06aH
	DB	019H
	DB	0ccH
	DB	099H
	DB	072H
	DB	0e6H
	DB	0b5H
	DB	07dH
	DB	06dH
	DB	0faH
	DB	0e5H
	DB	0d3H
	DB	0e4H
	DB	090H
	DB	0b5H
	DB	0b2H
	DB	0b2H
	DB	012H
	DB	070H
	DB	04eH
	DB	0caH
	DB	0f8H
	DB	010H
	DB	0f8H
	DB	0a3H
	DB	014H
	DB	0c2H
	DB	048H
	DB	019H
	DB	0ebH
	DB	060H
	DB	099H
	DB	0bbH
	DB	02aH
	DB	01fH
	DB	0b1H
	DB	07aH
	DB	0b1H
	DB	03dH
	DB	024H
	DB	0fbH
	DB	0a0H
	DB	029H
	DB	0daH
	DB	0bdH
	DB	01bH
	DB	0d7H
	DB	0a4H
	DB	0bfH
	DB	0efH
	DB	060H
	DB	02dH
	DB	022H
	DB	0caH
	DB	065H
	DB	098H
	DB	0f1H
	DB	0c4H
	DB	0e1H
	DB	0c9H
	DB	02H
	DB	06bH
	DB	016H
	DB	028H
	DB	02fH
	DB	0a1H
	DB	0aaH
	DB	079H
	DB	00H
	DB	0daH
	DB	0dcH
	DB	07cH
	DB	043H
	DB	0f7H
	DB	042H
	DB	03cH
	DB	0a0H
	DB	0efH
	DB	068H
	DB	0f7H
	DB	0dfH
	DB	0b9H
	DB	069H
	DB	0fbH
	DB	08eH
	DB	01H
	DB	0edH
	DB	01H
	DB	042H
	DB	0b5H
	DB	04eH
	DB	057H
	DB	0a6H
	DB	026H
	DB	0b8H
	DB	0d0H
	DB	07bH
	DB	056H
	DB	06dH
	DB	03H
	DB	0c6H
	DB	040H
	DB	08cH
	DB	08cH
	DB	02aH
	DB	055H
	DB	0d7H
	DB	09cH
	DB	035H
	DB	00H
	DB	094H
	DB	093H
	DB	0ecH
	DB	03H
	DB	0ebH
	DB	022H
	DB	0efH
	DB	077H
	DB	0bbH
	DB	079H
	DB	013H
	DB	03fH
	DB	015H
	DB	0a1H
	DB	08fH
	DB	0caH
	DB	0dfH
	DB	0fdH
	DB	0d3H
	DB	0b8H
	DB	0e1H
	DB	0d4H
	DB	0ccH
	DB	09H
	DB	03fH
	DB	03cH
	DB	02cH
	DB	0dbH
	DB	0d1H
	DB	049H
	DB	07fH
	DB	038H
	DB	07H
	DB	083H
	DB	06dH
	DB	0ebH
	DB	08H
	DB	066H
	DB	0e9H
	DB	06H
	DB	044H
	DB	012H
	DB	0acH
	DB	095H
	DB	022H
	DB	090H
	DB	023H
	DB	067H
	DB	0d4H
	DB	08H
	DB	0ccH
	DB	0f4H
	DB	0b7H
	DB	0dcH
	DB	0ccH
	DB	087H
	DB	0d4H
	DB	0acH
	DB	069H
	DB	035H
	DB	04cH
	DB	0b5H
	DB	039H
	DB	036H
	DB	0cdH
	DB	0a4H
	DB	0d2H
	DB	095H
	DB	0caH
	DB	0dH
	DB	0c5H
	DB	0daH
	DB	0c2H
	DB	0c5H
	DB	022H
	DB	032H
	DB	028H
	DB	08H
	DB	0e3H
	DB	0d2H
	DB	08bH
	DB	038H
	DB	030H
	DB	0dcH
	DB	08cH
	DB	075H
	DB	04fH
	DB	06aH
	DB	0ecH
	DB	07aH
	DB	0acH
	DB	016H
	DB	03eH
	DB	0a8H
	DB	0d4H
	DB	06aH
	DB	045H
	DB	0e1H
	DB	0a8H
	DB	04fH
	DB	02eH
	DB	080H
	DB	034H
	DB	0aaH
	DB	054H
	DB	01bH
	DB	02H
	DB	095H
	DB	07dH
	DB	08aH
	DB	06dH
	DB	0ccH
	DB	079H
	DB	0caH
	DB	0f2H
	DB	0a4H
	DB	02eH
	DB	08dH
	DB	0fbH
	DB	0feH
	DB	015H
	DB	051H
	DB	010H
	DB	0eH
	DB	04dH
	DB	088H
	DB	0b1H
	DB	0c7H
	DB	0f4H
	DB	079H
	DB	0dbH
	DB	0f0H
	DB	0b4H
	DB	056H
	DB	044H
	DB	037H
	DB	0caH
	DB	05aH
	DB	0c1H
	DB	08cH
	DB	048H
	DB	0acH
	DB	0aeH
	DB	048H
	DB	080H
	DB	083H
	DB	01H
	DB	03fH
	DB	0deH
	DB	0d9H
	DB	0d3H
	DB	02cH
	DB	051H
	DB	046H
	DB	0b1H
	DB	041H
	DB	0b6H
	DB	0c6H
	DB	091H
	DB	072H
	DB	0f9H
	DB	083H
	DB	055H
	DB	01bH
	DB	08cH
	DB	0baH
	DB	0f3H
	DB	073H
	DB	0e5H
	DB	02cH
	DB	074H
	DB	050H
	DB	03aH
	DB	0beH
	DB	0c5H
	DB	02fH
	DB	0a7H
	DB	0b2H
	DB	06dH
	DB	08cH
	DB	09eH
	DB	013H
	DB	077H
	DB	0a3H
	DB	013H
	DB	0cdH
	DB	06dH
	DB	08cH
	DB	045H
	DB	0e1H
	DB	0fcH
	DB	0bH
	DB	0b7H
	DB	069H
	DB	0e9H
	DB	027H
	DB	0bcH
	DB	065H
	DB	0c3H
	DB	0faH
	DB	09bH
	DB	0d0H
	DB	0efH
	DB	0feH
	DB	0e8H
	DB	01fH
	DB	0b3H
	DB	05eH
	DB	034H
	DB	0f4H
	DB	08cH
	DB	0eaH
	DB	0fcH
	DB	0d3H
	DB	081H
	DB	0bfH
	DB	03dH
	DB	030H
	DB	0b2H
	DB	0b4H
	DB	01H
	DB	0e8H
	DB	043H
	DB	0fH
	DB	0baH
	DB	02H
	DB	023H
	DB	042H
	DB	076H
	DB	082H
	DB	031H
	DB	073H
	DB	091H
	DB	0edH
	DB	07H
	DB	046H
	DB	061H
	DB	0dH
	DB	039H
	DB	083H
	DB	040H
	DB	0ceH
	DB	07aH
	DB	0d4H
	DB	0dbH
	DB	080H
	DB	02cH
	DB	01fH
	DB	0dH
	DB	0d1H
	DB	034H
	DB	0d4H
	DB	092H
	DB	0e3H
	DB	0d4H
	DB	0f1H
	DB	0c2H
	DB	01H
	DB	02H
	DB	03H
	DB	01H
	DB	00H
	DB	01H
	DB	02H
	DB	082H
	DB	02H
	DB	01H
	DB	00H
	DB	097H
	DB	06cH
	DB	0daH
	DB	06eH
	DB	0eaH
	DB	04fH
	DB	0cfH
	DB	0afH
	DB	0f7H
	DB	04cH
	DB	0d9H
	DB	0f1H
	DB	090H
	DB	00H
	DB	077H
	DB	0dbH
	DB	0f2H
	DB	097H
	DB	076H
	DB	072H
	DB	0b9H
	DB	0b7H
	DB	047H
	DB	0d1H
	DB	09cH
	DB	0ddH
	DB	0cbH
	DB	04aH
	DB	033H
	DB	06eH
	DB	0c9H
	DB	075H
	DB	076H
	DB	0e6H
	DB	0e4H
	DB	0a5H
	DB	031H
	DB	08cH
	DB	077H
	DB	013H
	DB	0b4H
	DB	029H
	DB	0cdH
	DB	0f5H
	DB	052H
	DB	017H
	DB	0efH
	DB	0f3H
	DB	08H
	DB	00H
	DB	0e3H
	DB	0bdH
	DB	02eH
	DB	0bcH
	DB	0d4H
	DB	052H
	DB	088H
	DB	0e9H
	DB	030H
	DB	075H
	DB	0bH
	DB	02H
	DB	0f5H
	DB	0cdH
	DB	089H
	DB	0cH
	DB	06cH
	DB	057H
	DB	019H
	DB	027H
	DB	03dH
	DB	01eH
	DB	085H
	DB	0b4H
	DB	0c1H
	DB	02fH
	DB	01dH
	DB	092H
	DB	00H
	DB	05cH
	DB	076H
	DB	029H
	DB	04bH
	DB	0a4H
	DB	0e1H
	DB	012H
	DB	0b3H
	DB	0c8H
	DB	09H
	DB	0feH
	DB	0eH
	DB	078H
	DB	072H
	DB	061H
	DB	0cbH
	DB	061H
	DB	06fH
	DB	039H
	DB	091H
	DB	095H
	DB	04eH
	DB	0d5H
	DB	03eH
	DB	0c7H
	DB	08fH
	DB	0b8H
	DB	0f6H
	DB	036H
	DB	0feH
	DB	09cH
	DB	093H
	DB	09aH
	DB	038H
	DB	025H
	DB	07aH
	DB	0f4H
	DB	04aH
	DB	012H
	DB	0d4H
	DB	0a0H
	DB	013H
	DB	0bdH
	DB	0f9H
	DB	01dH
	DB	012H
	DB	03eH
	DB	021H
	DB	039H
	DB	0fbH
	DB	072H
	DB	0e0H
	DB	05H
	DB	03dH
	DB	0c3H
	DB	0e5H
	DB	050H
	DB	0a8H
	DB	05dH
	DB	085H
	DB	0a3H
	DB	0eaH
	DB	05fH
	DB	01cH
	DB	0b2H
	DB	03fH
	DB	0eaH
	DB	06dH
	DB	03H
	DB	091H
	DB	055H
	DB	0d8H
	DB	019H
	DB	0aH
	DB	021H
	DB	012H
	DB	016H
	DB	0d9H
	DB	012H
	DB	0c4H
	DB	0e6H
	DB	07H
	DB	018H
	DB	05bH
	DB	026H
	DB	0a4H
	DB	0aeH
	DB	0edH
	DB	02bH
	DB	0b7H
	DB	0a6H
	DB	0edH
	DB	0f8H
	DB	0adH
	DB	0ecH
	DB	077H
	DB	0e6H
	DB	07fH
	DB	04fH
	DB	076H
	DB	00H
	DB	0c0H
	DB	0faH
	DB	015H
	DB	092H
	DB	0b4H
	DB	02cH
	DB	022H
	DB	0c2H
	DB	0ebH
	DB	06aH
	DB	0adH
	DB	014H
	DB	05H
	DB	0b2H
	DB	0e5H
	DB	08aH
	DB	09eH
	DB	085H
	DB	083H
	DB	0ccH
	DB	04H
	DB	0f1H
	DB	056H
	DB	078H
	DB	044H
	DB	05eH
	DB	0deH
	DB	0e0H
	DB	060H
	DB	01aH
	DB	065H
	DB	079H
	DB	031H
	DB	023H
	DB	05H
	DB	0bbH
	DB	01H
	DB	0ffH
	DB	0ddH
	DB	02eH
	DB	0b7H
	DB	0b3H
	DB	0aaH
	DB	074H
	DB	0e0H
	DB	0a5H
	DB	094H
	DB	0afH
	DB	04bH
	DB	0deH
	DB	058H
	DB	0fH
	DB	055H
	DB	0deH
	DB	033H
	DB	0f6H
	DB	0e3H
	DB	0d6H
	DB	034H
	DB	036H
	DB	057H
	DB	0d6H
	DB	079H
	DB	091H
	DB	02eH
	DB	0beH
	DB	03bH
	DB	0d9H
	DB	04eH
	DB	0b6H
	DB	09dH
	DB	021H
	DB	05cH
	DB	0d3H
	DB	048H
	DB	014H
	DB	07fH
	DB	04aH
	DB	0c4H
	DB	060H
	DB	0a9H
	DB	029H
	DB	0f8H
	DB	053H
	DB	07fH
	DB	088H
	DB	011H
	DB	02dH
	DB	0b5H
	DB	0c5H
	DB	02dH
	DB	06fH
	DB	0eeH
	DB	085H
	DB	0bH
	DB	0f7H
	DB	08dH
	DB	09aH
	DB	0beH
	DB	0b0H
	DB	042H
	DB	0f2H
	DB	02eH
	DB	071H
	DB	0afH
	DB	019H
	DB	031H
	DB	06dH
	DB	0ecH
	DB	0cdH
	DB	06fH
	DB	02bH
	DB	023H
	DB	0dfH
	DB	0b4H
	DB	040H
	DB	0afH
	DB	02cH
	DB	0aH
	DB	0c3H
	DB	01bH
	DB	07dH
	DB	07dH
	DB	03H
	DB	01dH
	DB	04bH
	DB	0f3H
	DB	0b5H
	DB	0e0H
	DB	085H
	DB	0d8H
	DB	0dfH
	DB	091H
	DB	06bH
	DB	0aH
	DB	069H
	DB	0f7H
	DB	0f2H
	DB	069H
	DB	066H
	DB	05bH
	DB	0f1H
	DB	0cfH
	DB	046H
	DB	07dH
	DB	0e9H
	DB	070H
	DB	0faH
	DB	06dH
	DB	07eH
	DB	075H
	DB	04eH
	DB	0a9H
	DB	077H
	DB	0e6H
	DB	08cH
	DB	02H
	DB	0f7H
	DB	014H
	DB	04dH
	DB	0a5H
	DB	041H
	DB	08fH
	DB	03fH
	DB	0c1H
	DB	062H
	DB	01eH
	DB	071H
	DB	05eH
	DB	038H
	DB	0b4H
	DB	0d6H
	DB	0e6H
	DB	0e1H
	DB	04bH
	DB	0c2H
	DB	02cH
	DB	030H
	DB	083H
	DB	081H
	DB	06fH
	DB	049H
	DB	02eH
	DB	096H
	DB	0e6H
	DB	0c9H
	DB	09aH
	DB	0f7H
	DB	05dH
	DB	09H
	DB	0a0H
	DB	055H
	DB	02H
	DB	0a5H
	DB	03aH
	DB	025H
	DB	023H
	DB	0d0H
	DB	092H
	DB	0c3H
	DB	0a3H
	DB	0e3H
	DB	0eH
	DB	012H
	DB	02fH
	DB	04dH
	DB	0efH
	DB	0f3H
	DB	055H
	DB	05aH
	DB	0beH
	DB	0e6H
	DB	019H
	DB	086H
	DB	031H
	DB	0abH
	DB	075H
	DB	09aH
	DB	0d3H
	DB	0f0H
	DB	02cH
	DB	0c5H
	DB	041H
	DB	092H
	DB	0d9H
	DB	01fH
	DB	05fH
	DB	011H
	DB	08cH
	DB	075H
	DB	01cH
	DB	063H
	DB	0d0H
	DB	02H
	DB	080H
	DB	02cH
	DB	068H
	DB	0cbH
	DB	093H
	DB	0fbH
	DB	051H
	DB	073H
	DB	049H
	DB	0b4H
	DB	060H
	DB	0daH
	DB	0e2H
	DB	026H
	DB	0afH
	DB	0a9H
	DB	046H
	DB	012H
	DB	0b8H
	DB	0ecH
	DB	050H
	DB	0ddH
	DB	012H
	DB	06H
	DB	05fH
	DB	0ceH
	DB	059H
	DB	0e6H
	DB	0f6H
	DB	01cH
	DB	0e0H
	DB	054H
	DB	010H
	DB	0adH
	DB	0f6H
	DB	0cdH
	DB	098H
	DB	0ccH
	DB	0fH
	DB	0fbH
	DB	0cbH
	DB	041H
	DB	014H
	DB	09dH
	DB	0edH
	DB	0e4H
	DB	0b4H
	DB	074H
	DB	05fH
	DB	09H
	DB	060H
	DB	0c7H
	DB	012H
	DB	0f6H
	DB	07bH
	DB	03cH
	DB	08fH
	DB	0a7H
	DB	020H
	DB	0bcH
	DB	0e4H
	DB	0b1H
	DB	0efH
	DB	0ebH
	DB	0a4H
	DB	093H
	DB	0c5H
	DB	06H
	DB	0caH
	DB	09aH
	DB	027H
	DB	09dH
	DB	087H
	DB	0f3H
	DB	0deH
	DB	0caH
	DB	0e5H
	DB	0e7H
	DB	0f6H
	DB	01cH
	DB	01H
	DB	065H
	DB	05bH
	DB	0fbH
	DB	019H
	DB	079H
	DB	06eH
	DB	08H
	DB	026H
	DB	0c5H
	DB	0c8H
	DB	028H
	DB	0eH
	DB	0b6H
	DB	03bH
	DB	07H
	DB	08H
	DB	0c1H
	DB	02H
	DB	082H
	DB	01H
	DB	01H
	DB	00H
	DB	0e8H
	DB	01cH
	DB	073H
	DB	0a6H
	DB	0b8H
	DB	0e0H
	DB	0eH
	DB	06dH
	DB	08dH
	DB	01bH
	DB	0b9H
	DB	053H
	DB	0edH
	DB	058H
	DB	094H
	DB	0e6H
	DB	01dH
	DB	060H
	DB	014H
	DB	05cH
	DB	076H
	DB	043H
	DB	0c4H
	DB	058H
	DB	019H
	DB	0c4H
	DB	024H
	DB	0e8H
	DB	0bcH
	DB	01bH
	DB	03bH
	DB	0bH
	DB	013H
	DB	024H
	DB	045H
	DB	054H
	DB	0eH
	DB	0ccH
	DB	037H
	DB	0f0H
	DB	0e0H
	DB	063H
	DB	07dH
	DB	0c3H
	DB	0f7H
	DB	0fbH
	DB	081H
	DB	074H
	DB	081H
	DB	0c4H
	DB	0fH
	DB	01aH
	DB	021H
	DB	048H
	DB	0afH
	DB	0ceH
	DB	0c1H
	DB	0c4H
	DB	094H
	DB	018H
	DB	06H
	DB	044H
	DB	08dH
	DB	0d3H
	DB	0d2H
	DB	022H
	DB	02dH
	DB	02dH
	DB	03eH
	DB	05aH
	DB	031H
	DB	0dcH
	DB	095H
	DB	08eH
	DB	0f4H
	DB	041H
	DB	0fcH
	DB	058H
	DB	0c9H
	DB	040H
	DB	092H
	DB	017H
	DB	05fH
	DB	0e3H
	DB	0daH
	DB	0acH
	DB	09eH
	DB	03fH
	DB	01cH
	DB	02aH
	DB	06bH
	DB	058H
	DB	05fH
	DB	048H
	DB	078H
	DB	020H
	DB	0b1H
	DB	0afH
	DB	024H
	DB	09bH
	DB	03cH
	DB	020H
	DB	08bH
	DB	093H
	DB	025H
	DB	09eH
	DB	0e6H
	DB	06bH
	DB	0bcH
	DB	013H
	DB	042H
	DB	014H
	DB	06cH
	DB	036H
	DB	031H
	DB	0ffH
	DB	07aH
	DB	0d1H
	DB	0c1H
	DB	01aH
	DB	026H
	DB	014H
	DB	07fH
	DB	0a9H
	DB	076H
	DB	0a7H
	DB	0cH
	DB	0f8H
	DB	0ccH
	DB	0edH
	DB	07H
	DB	06aH
	DB	0d2H
	DB	0dfH
	DB	062H
	DB	0eeH
	DB	0aH
	DB	07cH
	DB	084H
	DB	0cbH
	DB	049H
	DB	090H
	DB	0b2H
	DB	03H
	DB	0dH
	DB	0a2H
	DB	082H
	DB	06H
	DB	077H
	DB	0f1H
	DB	0cdH
	DB	067H
	DB	0f2H
	DB	047H
	DB	021H
	DB	02H
	DB	03fH
	DB	043H
	DB	021H
	DB	0f0H
	DB	046H
	DB	030H
	DB	062H
	DB	051H
	DB	072H
	DB	0b1H
	DB	0e7H
	DB	048H
	DB	0c6H
	DB	067H
	DB	012H
	DB	0cdH
	DB	09eH
	DB	0d6H
	DB	015H
	DB	0e5H
	DB	021H
	DB	0edH
	DB	0faH
	DB	08fH
	DB	030H
	DB	0a6H
	DB	041H
	DB	0feH
	DB	0b6H
	DB	0faH
	DB	08fH
	DB	034H
	DB	014H
	DB	019H
	DB	0e8H
	DB	011H
	DB	0f7H
	DB	0a5H
	DB	077H
	DB	03eH
	DB	0b7H
	DB	0f9H
	DB	039H
	DB	07H
	DB	08cH
	DB	067H
	DB	02aH
	DB	0abH
	DB	07bH
	DB	08H
	DB	0f8H
	DB	0b0H
	DB	06H
	DB	0a8H
	DB	0eaH
	DB	02fH
	DB	08fH
	DB	0faH
	DB	0ccH
	DB	0ccH
	DB	040H
	DB	0ceH
	DB	0f3H
	DB	070H
	DB	04fH
	DB	03fH
	DB	07fH
	DB	0e2H
	DB	0cH
	DB	0eaH
	DB	076H
	DB	04aH
	DB	035H
	DB	04eH
	DB	047H
	DB	0adH
	DB	02bH
	DB	0a7H
	DB	097H
	DB	05dH
	DB	074H
	DB	043H
	DB	097H
	DB	090H
	DB	0d2H
	DB	0fbH
	DB	0d9H
	DB	0f9H
	DB	096H
	DB	01H
	DB	033H
	DB	05H
	DB	0edH
	DB	07bH
	DB	03H
	DB	05H
	DB	0adH
	DB	0f8H
	DB	049H
	DB	03H
	DB	02H
	DB	082H
	DB	01H
	DB	01H
	DB	00H
	DB	0d4H
	DB	040H
	DB	017H
	DB	066H
	DB	010H
	DB	092H
	DB	095H
	DB	0c8H
	DB	0ecH
	DB	062H
	DB	0a9H
	DB	07aH
	DB	0cbH
	DB	093H
	DB	08eH
	DB	0e6H
	DB	053H
	DB	0d4H
	DB	080H
	DB	048H
	DB	027H
	DB	04bH
	DB	041H
	DB	0ceH
	DB	061H
	DB	0dfH
	DB	0bfH
	DB	094H
	DB	0a4H
	DB	03dH
	DB	071H
	DB	03H
	DB	0bH
	DB	0edH
	DB	025H
	DB	071H
	DB	098H
	DB	0a4H
	DB	0d6H
	DB	0d5H
	DB	04aH
	DB	057H
	DB	0f5H
	DB	06cH
	DB	01bH
	DB	0daH
	DB	021H
	DB	07dH
	DB	035H
	DB	045H
	DB	0b3H
	DB	0f3H
	DB	06aH
	DB	0d9H
	DB	0d3H
	DB	043H
	DB	0e8H
	DB	05cH
	DB	054H
	DB	01cH
	DB	083H
	DB	01bH
	DB	0b4H
	DB	05fH
	DB	0f2H
	DB	097H
	DB	024H
	DB	02eH
	DB	0dcH
	DB	040H
	DB	0deH
	DB	092H
	DB	023H
	DB	059H
	DB	08eH
	DB	0bcH
	DB	0d2H
	DB	0a1H
	DB	0f2H
	DB	0e0H
	DB	04cH
	DB	0ddH
	DB	0bH
	DB	0d1H
	DB	0e7H
	DB	0aeH
	DB	065H
	DB	0bcH
	DB	0b5H
	DB	0f5H
	DB	05bH
	DB	098H
	DB	0e9H
	DB	0d7H
	DB	0c2H
	DB	0b7H
	DB	0eH
	DB	055H
	DB	071H
	DB	0eH
	DB	03cH
	DB	0aH
	DB	024H
	DB	06bH
	DB	0a6H
	DB	0e6H
	DB	014H
	DB	061H
	DB	011H
	DB	0fdH
	DB	033H
	DB	042H
	DB	099H
	DB	02bH
	DB	084H
	DB	077H
	DB	074H
	DB	092H
	DB	091H
	DB	0f5H
	DB	079H
	DB	079H
	DB	0cfH
	DB	0adH
	DB	08eH
	DB	04H
	DB	0efH
	DB	080H
	DB	01eH
	DB	057H
	DB	0f4H
	DB	014H
	DB	0f5H
	DB	035H
	DB	09H
	DB	074H
	DB	0b2H
	DB	013H
	DB	071H
	DB	058H
	DB	06bH
	DB	0eaH
	DB	032H
	DB	05dH
	DB	0f3H
	DB	0d3H
	DB	076H
	DB	048H
	DB	039H
	DB	010H
	DB	023H
	DB	084H
	DB	09dH
	DB	0beH
	DB	092H
	DB	077H
	DB	04aH
	DB	0edH
	DB	070H
	DB	03eH
	DB	01aH
	DB	0a2H
	DB	06cH
	DB	0b3H
	DB	081H
	DB	00H
	DB	0c3H
	DB	0c9H
	DB	0e4H
	DB	052H
	DB	0c8H
	DB	024H
	DB	088H
	DB	0cH
	DB	041H
	DB	0adH
	DB	087H
	DB	05aH
	DB	0eaH
	DB	0a3H
	DB	07aH
	DB	085H
	DB	01cH
	DB	05eH
	DB	031H
	DB	07fH
	DB	0c3H
	DB	035H
	DB	0c6H
	DB	0faH
	DB	010H
	DB	0c8H
	DB	075H
	DB	010H
	DB	0c4H
	DB	096H
	DB	099H
	DB	0e7H
	DB	0feH
	DB	01H
	DB	0b4H
	DB	074H
	DB	0dbH
	DB	0b4H
	DB	011H
	DB	0c3H
	DB	0c8H
	DB	08cH
	DB	0f6H
	DB	0f7H
	DB	03bH
	DB	066H
	DB	050H
	DB	0fcH
	DB	0dbH
	DB	0ebH
	DB	0caH
	DB	047H
	DB	085H
	DB	089H
	DB	0e1H
	DB	065H
	DB	0d9H
	DB	062H
	DB	034H
	DB	03cH
	DB	070H
	DB	0d8H
	DB	02eH
	DB	0b4H
	DB	02fH
	DB	065H
	DB	03cH
	DB	04aH
	DB	0a6H
	DB	02aH
	DB	0e7H
	DB	0c7H
	DB	0d8H
	DB	041H
	DB	08fH
	DB	08aH
	DB	043H
	DB	0bfH
	DB	042H
	DB	0f2H
	DB	04dH
	DB	0bcH
	DB	0fcH
	DB	09eH
	DB	027H
	DB	095H
	DB	0fbH
	DB	075H
	DB	0ffH
	DB	0abH
	DB	02H
	DB	082H
	DB	01H
	DB	00H
	DB	041H
	DB	02fH
	DB	044H
	DB	057H
	DB	06dH
	DB	012H
	DB	017H
	DB	05bH
	DB	032H
	DB	0c6H
	DB	0b7H
	DB	06cH
	DB	057H
	DB	07aH
	DB	08aH
	DB	0eH
	DB	079H
	DB	0efH
	DB	072H
	DB	0a8H
	DB	068H
	DB	0daH
	DB	02dH
	DB	038H
	DB	0e4H
	DB	0bbH
	DB	08dH
	DB	0f6H
	DB	02H
	DB	065H
	DB	0cfH
	DB	056H
	DB	013H
	DB	0e1H
	DB	01aH
	DB	0cbH
	DB	039H
	DB	080H
	DB	0a6H
	DB	0b1H
	DB	032H
	DB	03H
	DB	01eH
	DB	0ddH
	DB	0bbH
	DB	035H
	DB	0d9H
	DB	0acH
	DB	043H
	DB	089H
	DB	031H
	DB	08H
	DB	090H
	DB	092H
	DB	05eH
	DB	035H
	DB	03dH
	DB	07bH
	DB	09cH
	DB	06fH
	DB	086H
	DB	0cbH
	DB	017H
	DB	0ddH
	DB	085H
	DB	0e4H
	DB	0edH
	DB	035H
	DB	08H
	DB	08eH
	DB	0c1H
	DB	0f4H
	DB	05H
	DB	0d8H
	DB	068H
	DB	0c6H
	DB	063H
	DB	03cH
	DB	0f7H
	DB	0ffH
	DB	0f7H
	DB	047H
	DB	033H
	DB	039H
	DB	0c5H
	DB	03eH
	DB	0b7H
	DB	0eH
	DB	058H
	DB	035H
	DB	09dH
	DB	081H
	DB	0eaH
	DB	0f8H
	DB	06aH
	DB	02cH
	DB	01cH
	DB	05aH
	DB	068H
	DB	078H
	DB	064H
	DB	011H
	DB	06bH
	DB	0c1H
	DB	03eH
	DB	04eH
	DB	07aH
	DB	0bdH
	DB	084H
	DB	0cbH
	DB	0fH
	DB	0c2H
	DB	0b6H
	DB	085H
	DB	01dH
	DB	0d3H
	DB	076H
	DB	0c5H
	DB	093H
	DB	06aH
	DB	069H
	DB	089H
	DB	056H
	DB	034H
	DB	0dcH
	DB	04aH
	DB	09bH
	DB	0bcH
	DB	0ffH
	DB	0a8H
	DB	0dH
	DB	06eH
	DB	035H
	DB	09cH
	DB	060H
	DB	0a7H
	DB	023H
	DB	030H
	DB	0c7H
	DB	06H
	DB	064H
	DB	039H
	DB	08bH
	DB	094H
	DB	089H
	DB	0eeH
	DB	0baH
	DB	07fH
	DB	060H
	DB	08dH
	DB	0faH
	DB	0b6H
	DB	097H
	DB	076H
	DB	0dcH
	DB	051H
	DB	04aH
	DB	03cH
	DB	0ebH
	DB	03aH
	DB	014H
	DB	02cH
	DB	020H
	DB	060H
	DB	069H
	DB	04aH
	DB	086H
	DB	0feH
	DB	08cH
	DB	021H
	DB	084H
	DB	049H
	DB	054H
	DB	0b3H
	DB	020H
	DB	0e1H
	DB	01H
	DB	07fH
	DB	058H
	DB	0dfH
	DB	07fH
	DB	0b5H
	DB	021H
	DB	051H
	DB	08cH
	DB	047H
	DB	09fH
	DB	091H
	DB	0ebH
	DB	097H
	DB	03eH
	DB	0f2H
	DB	054H
	DB	0cfH
	DB	016H
	DB	046H
	DB	0f9H
	DB	0d9H
	DB	0b6H
	DB	0e7H
	DB	064H
	DB	0c9H
	DB	0d0H
	DB	054H
	DB	0eaH
	DB	02fH
	DB	0a1H
	DB	0cfH
	DB	0a5H
	DB	07fH
	DB	028H
	DB	08dH
	DB	084H
	DB	0ecH
	DB	0d5H
	DB	039H
	DB	03H
	DB	076H
	DB	05bH
	DB	02dH
	DB	08eH
	DB	043H
	DB	0f2H
	DB	01H
	DB	024H
	DB	0c9H
	DB	06fH
	DB	0c0H
	DB	0f5H
	DB	069H
	DB	06fH
	DB	07dH
	DB	0b5H
	DB	085H
	DB	0d2H
	DB	05fH
	DB	07fH
	DB	078H
	DB	040H
	DB	07H
	DB	07fH
	DB	09H
	DB	015H
	DB	0b5H
	DB	01fH
	DB	028H
	DB	065H
	DB	010H
	DB	0e4H
	DB	019H
	DB	0a8H
	DB	0c6H
	DB	09eH
	DB	08dH
	DB	0dcH
	DB	0cbH
	DB	02H
	DB	082H
	DB	01H
	DB	00H
	DB	013H
	DB	01H
	DB	0eeH
	DB	056H
	DB	080H
	DB	093H
	DB	070H
	DB	00H
	DB	07fH
	DB	052H
	DB	0d2H
	DB	094H
	DB	0a1H
	DB	098H
	DB	084H
	DB	04aH
	DB	092H
	DB	025H
	DB	04cH
	DB	09bH
	DB	0a9H
	DB	091H
	DB	02eH
	DB	0c2H
	DB	079H
	DB	0b7H
	DB	05cH
	DB	0e3H
	DB	0c5H
	DB	0d5H
	DB	08eH
	DB	0c2H
	DB	054H
	DB	016H
	DB	017H
	DB	0adH
	DB	055H
	DB	09bH
	DB	025H
	DB	076H
	DB	012H
	DB	063H
	DB	050H
	DB	022H
	DB	02fH
	DB	058H
	DB	058H
	DB	079H
	DB	06bH
	DB	04H
	DB	0e3H
	DB	0f9H
	DB	09fH
	DB	08fH
	DB	04H
	DB	041H
	DB	067H
	DB	094H
	DB	0a5H
	DB	01fH
	DB	0acH
	DB	08aH
	DB	015H
	DB	09cH
	DB	026H
	DB	010H
	DB	06cH
	DB	0f8H
	DB	019H
	DB	057H
	DB	061H
	DB	0d7H
	DB	03aH
	DB	07dH
	DB	031H
	DB	0b0H
	DB	02dH
	DB	038H
	DB	0bdH
	DB	094H
	DB	062H
	DB	0adH
	DB	0c4H
	DB	0faH
	DB	036H
	DB	042H
	DB	042H
	DB	0f0H
	DB	024H
	DB	067H
	DB	065H
	DB	09dH
	DB	08bH
	DB	0bH
	DB	07cH
	DB	06fH
	DB	082H
	DB	044H
	DB	01aH
	DB	08cH
	DB	0c8H
	DB	0c9H
	DB	0abH
	DB	0bbH
	DB	04cH
	DB	045H
	DB	0fcH
	DB	07bH
	DB	038H
	DB	0eeH
	DB	030H
	DB	0e1H
	DB	0fcH
	DB	0efH
	DB	08dH
	DB	0bcH
	DB	058H
	DB	0dfH
	DB	02bH
	DB	05dH
	DB	0dH
	DB	054H
	DB	0e0H
	DB	049H
	DB	04dH
	DB	097H
	DB	099H
	DB	08fH
	DB	022H
	DB	0a8H
	DB	083H
	DB	0beH
	DB	040H
	DB	0bbH
	DB	050H
	DB	02eH
	DB	078H
	DB	028H
	DB	0fH
	DB	095H
	DB	078H
	DB	08cH
	DB	08fH
	DB	098H
	DB	024H
	DB	056H
	DB	0c2H
	DB	097H
	DB	0f3H
	DB	02cH
	DB	043H
	DB	0d2H
	DB	03H
	DB	082H
	DB	066H
	DB	081H
	DB	072H
	DB	05fH
	DB	053H
	DB	016H
	DB	0ecH
	DB	0b1H
	DB	0b1H
	DB	04H
	DB	05eH
	DB	040H
	DB	020H
	DB	048H
	DB	07bH
	DB	03fH
	DB	02H
	DB	097H
	DB	06aH
	DB	0ebH
	DB	096H
	DB	012H
	DB	021H
	DB	035H
	DB	0feH
	DB	01fH
	DB	047H
	DB	0c0H
	DB	095H
	DB	0eaH
	DB	0c5H
	DB	08aH
	DB	08H
	DB	084H
	DB	04fH
	DB	05eH
	DB	063H
	DB	094H
	DB	060H
	DB	0fH
	DB	071H
	DB	05bH
	DB	07fH
	DB	04aH
	DB	0ecH
	DB	04fH
	DB	060H
	DB	0c6H
	DB	0baH
	DB	04aH
	DB	024H
	DB	0f1H
	DB	020H
	DB	08bH
	DB	0a7H
	DB	02eH
	DB	03aH
	DB	0ceH
	DB	08dH
	DB	0e0H
	DB	027H
	DB	01dH
	DB	0b5H
	DB	08eH
	DB	0b4H
	DB	021H
	DB	0c5H
	DB	0e2H
	DB	0a6H
	DB	016H
	DB	0aH
	DB	051H
	DB	083H
	DB	055H
	DB	088H
	DB	0d1H
	DB	030H
	DB	011H
	DB	063H
	DB	0d5H
	DB	0d7H
	DB	08dH
	DB	0aeH
	DB	016H
	DB	012H
	DB	082H
	DB	0c4H
	DB	085H
	DB	00H
	DB	04eH
	DB	027H
	DB	083H
	DB	0a5H
	DB	07cH
	DB	090H
	DB	02eH
	DB	0e5H
	DB	0a2H
	DB	0a3H
	DB	0d3H
	DB	04cH
	DB	063H
	DB	02H
	DB	082H
	DB	01H
	DB	01H
	DB	00H
	DB	086H
	DB	08H
	DB	098H
	DB	098H
	DB	0a5H
	DB	00H
	DB	05H
	DB	039H
	DB	077H
	DB	0d9H
	DB	066H
	DB	0b3H
	DB	0cfH
	DB	0caH
	DB	0a0H
	DB	071H
	DB	0b3H
	DB	050H
	DB	0ceH
	DB	03dH
	DB	0b1H
	DB	093H
	DB	095H
	DB	035H
	DB	0c4H
	DB	0d4H
	DB	02eH
	DB	090H
	DB	0dfH
	DB	0fH
	DB	0fcH
	DB	060H
	DB	0c1H
	DB	094H
	DB	068H
	DB	061H
	DB	043H
	DB	0caH
	DB	09aH
	DB	023H
	DB	04aH
	DB	01eH
	DB	045H
	DB	072H
	DB	099H
	DB	0b5H
	DB	01eH
	DB	061H
	DB	08dH
	DB	077H
	DB	0fH
	DB	0a0H
	DB	0bbH
	DB	0d7H
	DB	077H
	DB	0b4H
	DB	02aH
	DB	015H
	DB	011H
	DB	088H
	DB	02dH
	DB	0b3H
	DB	056H
	DB	061H
	DB	05eH
	DB	06aH
	DB	0edH
	DB	0a4H
	DB	046H
	DB	04aH
	DB	03fH
	DB	050H
	DB	011H
	DB	0d6H
	DB	0baH
	DB	0b6H
	DB	0d7H
	DB	095H
	DB	065H
	DB	053H
	DB	0c3H
	DB	0a1H
	DB	08fH
	DB	0e0H
	DB	0a3H
	DB	0f5H
	DB	01cH
	DB	0fdH
	DB	0afH
	DB	06eH
	DB	043H
	DB	0d7H
	DB	017H
	DB	0a7H
	DB	0d3H
	DB	081H
	DB	01bH
	DB	0a4H
	DB	0dfH
	DB	0e0H
	DB	097H
	DB	08aH
	DB	046H
	DB	03H
	DB	0d3H
	DB	046H
	DB	0eH
	DB	083H
	DB	048H
	DB	04eH
	DB	0d2H
	DB	02H
	DB	0cbH
	DB	0c0H
	DB	0adH
	DB	079H
	DB	095H
	DB	08cH
	DB	096H
	DB	0baH
	DB	040H
	DB	034H
	DB	011H
	DB	071H
	DB	05eH
	DB	0e9H
	DB	011H
	DB	0f9H
	DB	0c5H
	DB	04aH
	DB	05eH
	DB	091H
	DB	09dH
	DB	0f5H
	DB	092H
	DB	04fH
	DB	0ebH
	DB	0c6H
	DB	070H
	DB	02H
	DB	02dH
	DB	03dH
	DB	04H
	DB	0aaH
	DB	0e9H
	DB	03aH
	DB	08eH
	DB	0d5H
	DB	0a8H
	DB	0adH
	DB	0f7H
	DB	0ceH
	DB	0dH
	DB	016H
	DB	0b2H
	DB	0ecH
	DB	0aH
	DB	09cH
	DB	0f5H
	DB	094H
	DB	039H
	DB	0b9H
	DB	08aH
	DB	0fcH
	DB	01eH
	DB	0f9H
	DB	0ccH
	DB	0f2H
	DB	05fH
	DB	021H
	DB	031H
	DB	074H
	DB	072H
	DB	06bH
	DB	064H
	DB	0aeH
	DB	035H
	DB	061H
	DB	08dH
	DB	0dH
	DB	0cbH
	DB	0e7H
	DB	0daH
	DB	039H
	DB	0caH
	DB	0f3H
	DB	021H
	DB	066H
	DB	0bH
	DB	095H
	DB	0d7H
	DB	0aH
	DB	07cH
	DB	0caH
	DB	0a1H
	DB	0a9H
	DB	05aH
	DB	0e8H
	DB	0acH
	DB	0e0H
	DB	071H
	DB	054H
	DB	0afH
	DB	028H
	DB	0cfH
	DB	0d5H
	DB	070H
	DB	089H
	DB	0e0H
	DB	0f3H
	DB	09eH
	DB	043H
	DB	06cH
	DB	08dH
	DB	07bH
	DB	099H
	DB	01H
	DB	068H
	DB	04dH
	DB	0a1H
	DB	045H
	DB	046H
	DB	0cH
	DB	043H
	DB	0bcH
	DB	0ccH
	DB	02cH
	DB	0ddH
	DB	0c5H
	DB	046H
	DB	0c8H
	DB	04eH
	DB	0eH
	DB	0beH
	DB	0edH
	DB	0b9H
	DB	026H
	DB	0abH
	DB	02eH
	DB	0dbH
	DB	0ebH
	DB	08fH
	DB	0ffH
	DB	0dbH
	DB	0b0H
	DB	0c6H
	DB	055H
	DB	0afH
	DB	0f8H
	DB	02aH
	DB	091H
	DB	09dH
	DB	050H
	DB	044H
	DB	021H
	DB	017H
	ORG $+3
_dsa512_priv DB	065H
	DB	0e5H
	DB	0c7H
	DB	038H
	DB	060H
	DB	024H
	DB	0b5H
	DB	089H
	DB	0d4H
	DB	09cH
	DB	0ebH
	DB	04cH
	DB	09cH
	DB	01dH
	DB	07aH
	DB	022H
	DB	0bdH
	DB	0d1H
	DB	0c2H
	DB	0d2H
	ORG $+4
_dsa512_pub DB	00H
	DB	095H
	DB	0a7H
	DB	0dH
	DB	0ecH
	DB	093H
	DB	068H
	DB	0baH
	DB	05fH
	DB	0f7H
	DB	05fH
	DB	07H
	DB	0f2H
	DB	03bH
	DB	0adH
	DB	06bH
	DB	01H
	DB	0dcH
	DB	0beH
	DB	0ecH
	DB	0deH
	DB	04H
	DB	07aH
	DB	03aH
	DB	027H
	DB	0b3H
	DB	0ecH
	DB	049H
	DB	0fdH
	DB	08H
	DB	043H
	DB	03dH
	DB	07eH
	DB	0a8H
	DB	02cH
	DB	05eH
	DB	07bH
	DB	0bbH
	DB	0fcH
	DB	0f4H
	DB	06eH
	DB	0ebH
	DB	06cH
	DB	0b0H
	DB	06eH
	DB	0f8H
	DB	02H
	DB	012H
	DB	08cH
	DB	038H
	DB	05dH
	DB	083H
	DB	056H
	DB	07dH
	DB	0eeH
	DB	053H
	DB	05H
	DB	03eH
	DB	024H
	DB	084H
	DB	0beH
	DB	0baH
	DB	0aH
	DB	06bH
	DB	0c8H
	ORG $+7
_dsa512_p DB	09dH
	DB	01bH
	DB	069H
	DB	08eH
	DB	026H
	DB	0dbH
	DB	0f2H
	DB	02bH
	DB	011H
	DB	070H
	DB	019H
	DB	086H
	DB	0f6H
	DB	019H
	DB	0c8H
	DB	0f8H
	DB	019H
	DB	0f2H
	DB	018H
	DB	053H
	DB	094H
	DB	046H
	DB	06H
	DB	0d0H
	DB	062H
	DB	050H
	DB	033H
	DB	04bH
	DB	02H
	DB	03cH
	DB	052H
	DB	030H
	DB	03H
	DB	08bH
	DB	03bH
	DB	0f9H
	DB	05fH
	DB	0d1H
	DB	024H
	DB	06H
	DB	04fH
	DB	07bH
	DB	04cH
	DB	0baH
	DB	0aaH
	DB	040H
	DB	09bH
	DB	0fdH
	DB	096H
	DB	0e4H
	DB	037H
	DB	033H
	DB	0bbH
	DB	02dH
	DB	05aH
	DB	0d7H
	DB	05aH
	DB	011H
	DB	040H
	DB	066H
	DB	0a2H
	DB	076H
	DB	07dH
	DB	031H
_dsa512_q DB	0fbH
	DB	053H
	DB	0efH
	DB	050H
	DB	0b4H
	DB	040H
	DB	092H
	DB	031H
	DB	056H
	DB	086H
	DB	053H
	DB	07aH
	DB	0e8H
	DB	08bH
	DB	022H
	DB	09aH
	DB	049H
	DB	0fbH
	DB	071H
	DB	08fH
	ORG $+4
_dsa512_g DB	083H
	DB	03eH
	DB	088H
	DB	0e5H
	DB	0c5H
	DB	089H
	DB	073H
	DB	0ceH
	DB	03bH
	DB	06cH
	DB	01H
	DB	049H
	DB	0bfH
	DB	0b3H
	DB	0c7H
	DB	09fH
	DB	0aH
	DB	0eaH
	DB	044H
	DB	091H
	DB	0e5H
	DB	030H
	DB	0aaH
	DB	0d9H
	DB	0beH
	DB	05bH
	DB	05fH
	DB	0b7H
	DB	010H
	DB	0d7H
	DB	089H
	DB	0b7H
	DB	08eH
	DB	074H
	DB	0fbH
	DB	0cfH
	DB	029H
	DB	01eH
	DB	0ebH
	DB	0a8H
	DB	02cH
	DB	054H
	DB	051H
	DB	0b8H
	DB	010H
	DB	0deH
	DB	0a0H
	DB	0ceH
	DB	02fH
	DB	0ccH
	DB	024H
	DB	06bH
	DB	090H
	DB	077H
	DB	0deH
	DB	0a2H
	DB	068H
	DB	0a6H
	DB	052H
	DB	012H
	DB	0a2H
	DB	03H
	DB	09dH
	DB	020H
_dsa1024_priv DB 07dH
	DB	021H
	DB	0daH
	DB	0bbH
	DB	062H
	DB	015H
	DB	047H
	DB	036H
	DB	07H
	DB	067H
	DB	012H
	DB	0e8H
	DB	08cH
	DB	0aaH
	DB	01cH
	DB	0cdH
	DB	038H
	DB	012H
	DB	061H
	DB	018H
	ORG $+4
_dsa1024_pub DB	03cH
	DB	04eH
	DB	09cH
	DB	02aH
	DB	07fH
	DB	016H
	DB	0c1H
	DB	025H
	DB	0ebH
	DB	0acH
	DB	078H
	DB	063H
	DB	090H
	DB	014H
	DB	08cH
	DB	08bH
	DB	0f4H
	DB	068H
	DB	043H
	DB	03cH
	DB	02dH
	DB	0eeH
	DB	065H
	DB	050H
	DB	07dH
	DB	09cH
	DB	08fH
	DB	08cH
	DB	08aH
	DB	051H
	DB	0d6H
	DB	011H
	DB	02bH
	DB	099H
	DB	0afH
	DB	01eH
	DB	090H
	DB	097H
	DB	0b5H
	DB	0d3H
	DB	0a6H
	DB	020H
	DB	025H
	DB	0d6H
	DB	0feH
	DB	043H
	DB	02H
	DB	0d5H
	DB	091H
	DB	07dH
	DB	0a7H
	DB	08cH
	DB	0dbH
	DB	0c9H
	DB	085H
	DB	0a3H
	DB	036H
	DB	048H
	DB	0f7H
	DB	068H
	DB	0aaH
	DB	060H
	DB	0b1H
	DB	0f7H
	DB	05H
	DB	068H
	DB	03aH
	DB	0a3H
	DB	03fH
	DB	0d3H
	DB	019H
	DB	082H
	DB	0d8H
	DB	082H
	DB	07aH
	DB	077H
	DB	0fbH
	DB	0efH
	DB	0f4H
	DB	015H
	DB	0aH
	DB	0ebH
	DB	06H
	DB	04H
	DB	07fH
	DB	053H
	DB	07H
	DB	0cH
	DB	0bcH
	DB	0cbH
	DB	02dH
	DB	083H
	DB	0dbH
	DB	03eH
	DB	0d1H
	DB	028H
	DB	0a5H
	DB	0a1H
	DB	031H
	DB	0e0H
	DB	067H
	DB	0faH
	DB	050H
	DB	0deH
	DB	09bH
	DB	07H
	DB	083H
	DB	07eH
	DB	02cH
	DB	0bH
	DB	0c3H
	DB	013H
	DB	050H
	DB	061H
	DB	0e5H
	DB	0adH
	DB	0bdH
	DB	036H
	DB	0b8H
	DB	097H
	DB	04eH
	DB	040H
	DB	07dH
	DB	0e8H
	DB	083H
	DB	0dH
	DB	0bcH
	DB	04bH
_dsa1024_p DB	0a7H
	DB	03fH
	DB	06eH
	DB	085H
	DB	0bfH
	DB	041H
	DB	06aH
	DB	029H
	DB	07dH
	DB	0f0H
	DB	09fH
	DB	047H
	DB	019H
	DB	030H
	DB	090H
	DB	09aH
	DB	09H
	DB	01dH
	DB	0daH
	DB	06aH
	DB	033H
	DB	01eH
	DB	0c5H
	DB	03dH
	DB	086H
	DB	096H
	DB	0b3H
	DB	015H
	DB	0e0H
	DB	053H
	DB	02eH
	DB	08fH
	DB	0e0H
	DB	059H
	DB	082H
	DB	073H
	DB	090H
	DB	03eH
	DB	075H
	DB	031H
	DB	099H
	DB	047H
	DB	07aH
	DB	052H
	DB	0fbH
	DB	085H
	DB	0e4H
	DB	0d9H
	DB	0a6H
	DB	07bH
	DB	038H
	DB	09bH
	DB	068H
	DB	08aH
	DB	084H
	DB	09bH
	DB	087H
	DB	0c6H
	DB	01eH
	DB	0b5H
	DB	07eH
	DB	086H
	DB	04bH
	DB	053H
	DB	05bH
	DB	059H
	DB	0cfH
	DB	071H
	DB	065H
	DB	019H
	DB	088H
	DB	06eH
	DB	0ceH
	DB	066H
	DB	0aeH
	DB	06bH
	DB	088H
	DB	036H
	DB	0fbH
	DB	0ecH
	DB	028H
	DB	0dcH
	DB	0c2H
	DB	0d7H
	DB	0a5H
	DB	0bbH
	DB	0e5H
	DB	02cH
	DB	039H
	DB	026H
	DB	04bH
	DB	0daH
	DB	09aH
	DB	070H
	DB	018H
	DB	095H
	DB	037H
	DB	095H
	DB	010H
	DB	056H
	DB	023H
	DB	0f6H
	DB	015H
	DB	0edH
	DB	0baH
	DB	04H
	DB	05eH
	DB	0deH
	DB	039H
	DB	04fH
	DB	0fdH
	DB	0b7H
	DB	043H
	DB	01fH
	DB	0b5H
	DB	0a4H
	DB	065H
	DB	06fH
	DB	0cdH
	DB	080H
	DB	011H
	DB	0e4H
	DB	070H
	DB	095H
	DB	05bH
	DB	050H
	DB	0cdH
	DB	049H
_dsa1024_q DB	0f7H
	DB	07H
	DB	031H
	DB	0edH
	DB	0faH
	DB	06cH
	DB	06H
	DB	03H
	DB	0d5H
	DB	085H
	DB	08aH
	DB	01cH
	DB	0acH
	DB	09cH
	DB	065H
	DB	0e7H
	DB	050H
	DB	066H
	DB	065H
	DB	06fH
	ORG $+4
_dsa1024_g DB	04dH
	DB	0dfH
	DB	04cH
	DB	03H
	DB	0a6H
	DB	091H
	DB	08aH
	DB	0f5H
	DB	019H
	DB	06fH
	DB	050H
	DB	046H
	DB	025H
	DB	099H
	DB	0e5H
	DB	068H
	DB	06fH
	DB	030H
	DB	0e3H
	DB	069H
	DB	0e1H
	DB	0e5H
	DB	0b3H
	DB	05dH
	DB	098H
	DB	0bbH
	DB	028H
	DB	086H
	DB	048H
	DB	0fcH
	DB	0deH
	DB	099H
	DB	04H
	DB	03fH
	DB	05fH
	DB	088H
	DB	0cH
	DB	09cH
	DB	073H
	DB	024H
	DB	0dH
	DB	020H
	DB	05dH
	DB	0b9H
	DB	02aH
	DB	09aH
	DB	03fH
	DB	018H
	DB	096H
	DB	027H
	DB	0e4H
	DB	062H
	DB	087H
	DB	0c1H
	DB	07bH
	DB	074H
	DB	062H
	DB	053H
	DB	0fcH
	DB	061H
	DB	027H
	DB	0a8H
	DB	07aH
	DB	091H
	DB	09H
	DB	09dH
	DB	0b6H
	DB	0f1H
	DB	04dH
	DB	09cH
	DB	054H
	DB	0fH
	DB	058H
	DB	06H
	DB	0eeH
	DB	049H
	DB	074H
	DB	07H
	DB	0ceH
	DB	055H
	DB	07eH
	DB	023H
	DB	0ceH
	DB	016H
	DB	0f6H
	DB	0caH
	DB	0dcH
	DB	05aH
	DB	061H
	DB	01H
	DB	07eH
	DB	0c9H
	DB	071H
	DB	0b5H
	DB	04dH
	DB	0f6H
	DB	0dcH
	DB	034H
	DB	029H
	DB	087H
	DB	068H
	DB	0f6H
	DB	05eH
	DB	020H
	DB	093H
	DB	0b3H
	DB	0dbH
	DB	0f5H
	DB	0e4H
	DB	09H
	DB	06cH
	DB	041H
	DB	017H
	DB	095H
	DB	092H
	DB	0ebH
	DB	01H
	DB	0b5H
	DB	073H
	DB	0a5H
	DB	06aH
	DB	07eH
	DB	0d8H
	DB	032H
	DB	0edH
	DB	0eH
	DB	02H
	DB	0b8H
_dsa2048_priv DB 032H
	DB	067H
	DB	092H
	DB	0f6H
	DB	0c4H
	DB	0e2H
	DB	0e2H
	DB	0e8H
	DB	0a0H
	DB	08bH
	DB	06bH
	DB	045H
	DB	0cH
	DB	08aH
	DB	076H
	DB	0b0H
	DB	0eeH
	DB	0cfH
	DB	091H
	DB	0a7H
	ORG $+4
_dsa2048_pub DB	017H
	DB	08fH
	DB	0a8H
	DB	011H
	DB	084H
	DB	092H
	DB	0ecH
	DB	083H
	DB	047H
	DB	0c7H
	DB	06aH
	DB	0b0H
	DB	092H
	DB	0afH
	DB	05aH
	DB	020H
	DB	037H
	DB	0a3H
	DB	064H
	DB	079H
	DB	0d2H
	DB	0d0H
	DB	03dH
	DB	0cdH
	DB	0e0H
	DB	061H
	DB	088H
	DB	088H
	DB	021H
	DB	0ccH
	DB	074H
	DB	05dH
	DB	0ceH
	DB	04cH
	DB	051H
	DB	047H
	DB	0f0H
	DB	0c5H
	DB	05cH
	DB	04cH
	DB	082H
	DB	07aH
	DB	0afH
	DB	072H
	DB	0adH
	DB	0b9H
	DB	0e0H
	DB	053H
	DB	0f2H
	DB	078H
	DB	0b7H
	DB	0f0H
	DB	0b5H
	DB	048H
	DB	07fH
	DB	08aH
	DB	03aH
	DB	018H
	DB	0d1H
	DB	09fH
	DB	08bH
	DB	07dH
	DB	0a5H
	DB	047H
	DB	0b7H
	DB	095H
	DB	0abH
	DB	098H
	DB	0f8H
	DB	07bH
	DB	074H
	DB	050H
	DB	056H
	DB	08eH
	DB	057H
	DB	0f0H
	DB	0eeH
	DB	0f5H
	DB	0b7H
	DB	0baH
	DB	0abH
	DB	085H
	DB	086H
	DB	0f9H
	DB	02bH
	DB	0efH
	DB	041H
	DB	056H
	DB	0a0H
	DB	0a4H
	DB	09fH
	DB	0b7H
	DB	038H
	DB	00H
	DB	046H
	DB	0aH
	DB	0a6H
	DB	0f1H
	DB	0fcH
	DB	01fH
	DB	0d8H
	DB	04eH
	DB	085H
	DB	044H
	DB	092H
	DB	043H
	DB	021H
	DB	05dH
	DB	06eH
	DB	0ccH
	DB	0c2H
	DB	0cbH
	DB	026H
	DB	031H
	DB	0dH
	DB	021H
	DB	0c4H
	DB	0bdH
	DB	08dH
	DB	024H
	DB	0bcH
	DB	0d9H
	DB	018H
	DB	019H
	DB	0d7H
	DB	0dcH
	DB	0f1H
	DB	0e7H
	DB	093H
	DB	050H
	DB	048H
	DB	03H
	DB	02cH
	DB	0aeH
	DB	02eH
	DB	0e7H
	DB	049H
	DB	088H
	DB	05fH
	DB	093H
	DB	057H
	DB	027H
	DB	099H
	DB	036H
	DB	0b4H
	DB	020H
	DB	0abH
	DB	0fcH
	DB	0a7H
	DB	02bH
	DB	0f2H
	DB	0d9H
	DB	098H
	DB	0d7H
	DB	0d4H
	DB	034H
	DB	09dH
	DB	096H
	DB	050H
	DB	058H
	DB	09aH
	DB	0eaH
	DB	054H
	DB	0f3H
	DB	0eeH
	DB	0f5H
	DB	063H
	DB	014H
	DB	0eeH
	DB	085H
	DB	083H
	DB	074H
	DB	076H
	DB	0e1H
	DB	052H
	DB	095H
	DB	0c3H
	DB	0f7H
	DB	0ebH
	DB	04H
	DB	04H
	DB	07bH
	DB	0a7H
	DB	028H
	DB	01bH
	DB	0ccH
	DB	0eaH
	DB	04aH
	DB	04eH
	DB	084H
	DB	0daH
	DB	0d8H
	DB	09cH
	DB	079H
	DB	0d8H
	DB	09bH
	DB	066H
	DB	089H
	DB	02fH
	DB	0cfH
	DB	0acH
	DB	0d7H
	DB	079H
	DB	0f9H
	DB	0a9H
	DB	0d8H
	DB	045H
	DB	013H
	DB	078H
	DB	0b9H
	DB	00H
	DB	014H
	DB	0c9H
	DB	07eH
	DB	022H
	DB	051H
	DB	086H
	DB	067H
	DB	0b0H
	DB	09fH
	DB	026H
	DB	011H
	DB	023H
	DB	0c8H
	DB	038H
	DB	0d7H
	DB	070H
	DB	01dH
	DB	015H
	DB	08eH
	DB	04dH
	DB	04fH
	DB	095H
	DB	097H
	DB	040H
	DB	0a1H
	DB	0c2H
	DB	07eH
	DB	01H
	DB	018H
	DB	072H
	DB	0f4H
	DB	010H
	DB	0e6H
	DB	08dH
	DB	052H
	DB	016H
	DB	07fH
	DB	0f2H
	DB	0c9H
	DB	0f8H
	DB	033H
	DB	08bH
	DB	033H
	DB	0b7H
	DB	0ceH
_dsa2048_p DB	0a0H
	DB	025H
	DB	0faH
	DB	0adH
	DB	0f4H
	DB	08eH
	DB	0b9H
	DB	0e5H
	DB	099H
	DB	0f3H
	DB	05dH
	DB	06fH
	DB	04fH
	DB	083H
	DB	034H
	DB	0e2H
	DB	07eH
	DB	0cfH
	DB	06fH
	DB	0bfH
	DB	030H
	DB	0afH
	DB	06fH
	DB	081H
	DB	0ebH
	DB	0f8H
	DB	0c4H
	DB	013H
	DB	0d9H
	DB	0a0H
	DB	05dH
	DB	08bH
	DB	05cH
	DB	08eH
	DB	0dcH
	DB	0c2H
	DB	01dH
	DB	0bH
	DB	041H
	DB	032H
	DB	0b0H
	DB	01fH
	DB	0feH
	DB	0efH
	DB	0cH
	DB	0c2H
	DB	0a2H
	DB	07eH
	DB	068H
	DB	05cH
	DB	028H
	DB	021H
	DB	0e9H
	DB	0f5H
	DB	0b1H
	DB	058H
	DB	012H
	DB	063H
	DB	04cH
	DB	019H
	DB	04eH
	DB	0ffH
	DB	02H
	DB	04bH
	DB	092H
	DB	0edH
	DB	0d2H
	DB	07H
	DB	011H
	DB	04dH
	DB	08cH
	DB	058H
	DB	016H
	DB	05cH
	DB	055H
	DB	08eH
	DB	0adH
	DB	0a3H
	DB	067H
	DB	07dH
	DB	0b9H
	DB	086H
	DB	06eH
	DB	0bH
	DB	0e6H
	DB	054H
	DB	06fH
	DB	040H
	DB	0aeH
	DB	0eH
	DB	067H
	DB	04cH
	DB	0f9H
	DB	012H
	DB	05bH
	DB	03cH
	DB	08H
	DB	07aH
	DB	0f7H
	DB	0fcH
	DB	067H
	DB	086H
	DB	069H
	DB	0e7H
	DB	0aH
	DB	094H
	DB	040H
	DB	0bfH
	DB	08bH
	DB	076H
	DB	0feH
	DB	026H
	DB	0d1H
	DB	0f2H
	DB	0a1H
	DB	01aH
	DB	084H
	DB	0a1H
	DB	043H
	DB	056H
	DB	028H
	DB	0bcH
	DB	09aH
	DB	05fH
	DB	0d7H
	DB	03bH
	DB	069H
	DB	089H
	DB	08aH
	DB	036H
	DB	02cH
	DB	051H
	DB	0dfH
	DB	012H
	DB	077H
	DB	02fH
	DB	057H
	DB	07bH
	DB	0a0H
	DB	0aaH
	DB	0ddH
	DB	07fH
	DB	0a1H
	DB	062H
	DB	03bH
	DB	040H
	DB	07bH
	DB	068H
	DB	01aH
	DB	08fH
	DB	0dH
	DB	038H
	DB	0bbH
	DB	021H
	DB	05dH
	DB	018H
	DB	0fcH
	DB	0fH
	DB	046H
	DB	0f7H
	DB	0a3H
	DB	0b0H
	DB	01dH
	DB	023H
	DB	0c3H
	DB	0d2H
	DB	0c7H
	DB	072H
	DB	051H
	DB	018H
	DB	0dfH
	DB	046H
	DB	095H
	DB	079H
	DB	0d9H
	DB	0bdH
	DB	0b5H
	DB	019H
	DB	02H
	DB	02cH
	DB	087H
	DB	0dcH
	DB	0e7H
	DB	057H
	DB	082H
	DB	07eH
	DB	0f1H
	DB	08bH
	DB	06H
	DB	03dH
	DB	00H
	DB	0a5H
	DB	07bH
	DB	06bH
	DB	026H
	DB	027H
	DB	091H
	DB	0fH
	DB	06aH
	DB	077H
	DB	0e4H
	DB	0d5H
	DB	04H
	DB	0e4H
	DB	012H
	DB	02cH
	DB	042H
	DB	0ffH
	DB	0d2H
	DB	088H
	DB	0bbH
	DB	0d3H
	DB	092H
	DB	0a0H
	DB	0f9H
	DB	0c8H
	DB	051H
	DB	064H
	DB	014H
	DB	05cH
	DB	0d8H
	DB	0f9H
	DB	06cH
	DB	047H
	DB	082H
	DB	0b4H
	DB	01cH
	DB	07fH
	DB	09H
	DB	0b8H
	DB	0f0H
	DB	025H
	DB	083H
	DB	01dH
	DB	03fH
	DB	03fH
	DB	05H
	DB	0b3H
	DB	021H
	DB	0aH
	DB	05dH
	DB	0a7H
	DB	0d8H
	DB	054H
	DB	0c3H
	DB	065H
	DB	07dH
	DB	0c3H
	DB	0b0H
	DB	01dH
	DB	0bfH
	DB	0aeH
	DB	0f8H
	DB	068H
	DB	0cfH
	DB	09bH
_dsa2048_q DB	097H
	DB	0e7H
	DB	033H
	DB	04dH
	DB	0d3H
	DB	094H
	DB	03eH
	DB	0bH
	DB	0dbH
	DB	062H
	DB	074H
	DB	0c6H
	DB	0a1H
	DB	08H
	DB	0ddH
	DB	019H
	DB	0a3H
	DB	075H
	DB	017H
	DB	01bH
	ORG $+4
_dsa2048_g DB	02cH
	DB	078H
	DB	016H
	DB	059H
	DB	034H
	DB	063H
	DB	0f4H
	DB	0f3H
	DB	092H
	DB	0fcH
	DB	0b5H
	DB	0a5H
	DB	04fH
	DB	013H
	DB	0deH
	DB	02fH
	DB	01cH
	DB	0a4H
	DB	03cH
	DB	0aeH
	DB	0adH
	DB	038H
	DB	03fH
	DB	07eH
	DB	090H
	DB	0bfH
	DB	096H
	DB	0a6H
	DB	0aeH
	DB	025H
	DB	090H
	DB	072H
	DB	0f5H
	DB	08eH
	DB	080H
	DB	0cH
	DB	039H
	DB	01cH
	DB	0d9H
	DB	0ecH
	DB	0baH
	DB	090H
	DB	05bH
	DB	03aH
	DB	0e8H
	DB	058H
	DB	06cH
	DB	09eH
	DB	030H
	DB	042H
	DB	037H
	DB	02H
	DB	031H
	DB	082H
	DB	0bcH
	DB	06aH
	DB	0dfH
	DB	06aH
	DB	09H
	DB	029H
	DB	0e3H
	DB	0c0H
	DB	046H
	DB	0d1H
	DB	0cbH
	DB	085H
	DB	0ecH
	DB	0cH
	DB	030H
	DB	05eH
	DB	0eaH
	DB	0c8H
	DB	039H
	DB	08eH
	DB	022H
	DB	09fH
	DB	022H
	DB	010H
	DB	0d2H
	DB	034H
	DB	061H
	DB	068H
	DB	037H
	DB	03dH
	DB	02eH
	DB	04aH
	DB	05bH
	DB	09aH
	DB	0f5H
	DB	0c1H
	DB	048H
	DB	0c6H
	DB	0f6H
	DB	0dcH
	DB	063H
	DB	01aH
	DB	0d3H
	DB	096H
	DB	064H
	DB	0baH
	DB	034H
	DB	0c9H
	DB	0d1H
	DB	0a0H
	DB	0d1H
	DB	0aeH
	DB	06cH
	DB	02fH
	DB	048H
	DB	017H
	DB	093H
	DB	014H
	DB	043H
	DB	0edH
	DB	0f0H
	DB	021H
	DB	030H
	DB	019H
	DB	0c3H
	DB	01bH
	DB	05fH
	DB	0deH
	DB	0a3H
	DB	0f0H
	DB	070H
	DB	078H
	DB	018H
	DB	0e1H
	DB	0a8H
	DB	0e4H
	DB	0eeH
	DB	02eH
	DB	00H
	DB	0a5H
	DB	0e4H
	DB	0b3H
	DB	017H
	DB	0c8H
	DB	0cH
	DB	07dH
	DB	06eH
	DB	042H
	DB	0dcH
	DB	0b7H
	DB	046H
	DB	00H
	DB	036H
	DB	04dH
	DB	0d4H
	DB	046H
	DB	0aaH
	DB	03dH
	DB	03cH
	DB	046H
	DB	089H
	DB	040H
	DB	0bfH
	DB	01dH
	DB	084H
	DB	077H
	DB	0aH
	DB	075H
	DB	0f3H
	DB	087H
	DB	01dH
	DB	08H
	DB	04cH
	DB	0a6H
	DB	0d1H
	DB	0a9H
	DB	01cH
	DB	01eH
	DB	012H
	DB	01eH
	DB	0e1H
	DB	0c7H
	DB	030H
	DB	028H
	DB	076H
	DB	0a5H
	DB	07fH
	DB	06cH
	DB	085H
	DB	096H
	DB	02bH
	DB	06fH
	DB	0dbH
	DB	080H
	DB	066H
	DB	026H
	DB	0aeH
	DB	0f5H
	DB	093H
	DB	0c7H
	DB	08eH
	DB	0aeH
	DB	09aH
	DB	0edH
	DB	0e4H
	DB	0caH
	DB	04H
	DB	0eaH
	DB	03bH
	DB	072H
	DB	0efH
	DB	0dcH
	DB	087H
	DB	0edH
	DB	0dH
	DB	0a5H
	DB	04cH
	DB	04aH
	DB	0ddH
	DB	071H
	DB	022H
	DB	064H
	DB	059H
	DB	069H
	DB	04eH
	DB	08eH
	DB	0bfH
	DB	043H
	DB	0dcH
	DB	0abH
	DB	08eH
	DB	066H
	DB	0bbH
	DB	01H
	DB	0b6H
	DB	0f4H
	DB	0e7H
	DB	0fdH
	DB	0d2H
	DB	0adH
	DB	09fH
	DB	036H
	DB	0c1H
	DB	0a0H
	DB	029H
	DB	099H
	DB	0d1H
	DB	096H
	DB	070H
	DB	059H
	DB	06H
	DB	078H
	DB	035H
	DB	0bdH
	DB	065H
	DB	055H
	DB	052H
	DB	09eH
	DB	0f8H
	DB	0b2H
	DB	0e5H
	DB	038H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_printf
PUBLIC	_get_dsa512
PUBLIC	_get_dsa1024
PUBLIC	_get_dsa2048
PUBLIC	_speed_main
PUBLIC	??_C@_0BM@NHJDEHNA@unable?5to?5CreateThread?5?$CI?$CFd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0P@MPGKMPDA@?4?2apps?2speed?4c?$AA@	; `string'
PUBLIC	??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_08LCCIJCMB@?9elapsed?$AA@			; `string'
PUBLIC	??_C@_04HDDHIJHC@?9evp?$AA@			; `string'
PUBLIC	??_C@_0O@GDKHNIIH@no?5EVP?5given?6?$AA@		; `string'
PUBLIC	??_C@_0CD@ELNIIMHM@?$CFs?5is?5an?5unknown?5cipher?5or?5diges@ ; `string'
PUBLIC	??_C@_08ODIALGEJ@?9decrypt?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0BB@DDANMNBA@no?5engine?5given?6?$AA@	; `string'
PUBLIC	??_C@_03NBOFBEAH@?9mr?$AA@			; `string'
PUBLIC	??_C@_03JLCHAGFG@?9mb?$AA@			; `string'
PUBLIC	??_C@_04FOBGICMD@hmac?$AA@			; `string'
PUBLIC	??_C@_03JNBDOPOP@sha?$AA@			; `string'
PUBLIC	??_C@_06ICCLKODP@ripemd?$AA@			; `string'
PUBLIC	??_C@_09EDIPKBN@ripemd160?$AA@			; `string'
PUBLIC	??_C@_07IPAFAGII@des?9cbc?$AA@			; `string'
PUBLIC	??_C@_08LJCBLNOK@des?9ede3?$AA@			; `string'
PUBLIC	??_C@_0M@PDGNIOMI@aes?9128?9cbc?$AA@		; `string'
PUBLIC	??_C@_0M@FAPBPJFE@aes?9192?9cbc?$AA@		; `string'
PUBLIC	??_C@_0M@ICEPNGNF@aes?9256?9cbc?$AA@		; `string'
PUBLIC	??_C@_0M@MMEBALMB@aes?9128?9ige?$AA@		; `string'
PUBLIC	??_C@_0M@GPNNHMFN@aes?9192?9ige?$AA@		; `string'
PUBLIC	??_C@_0M@LNGDFDNM@aes?9256?9ige?$AA@		; `string'
PUBLIC	??_C@_0BB@GDOINOHE@camellia?9128?9cbc?$AA@	; `string'
PUBLIC	??_C@_0BB@MAHEKJOI@camellia?9192?9cbc?$AA@	; `string'
PUBLIC	??_C@_0BB@BCMKIGGJ@camellia?9256?9cbc?$AA@	; `string'
PUBLIC	??_C@_07OHDAOILP@openssl?$AA@			; `string'
PUBLIC	??_C@_06DLKCLKKA@dsa512?$AA@			; `string'
PUBLIC	??_C@_07CAPLDDAA@dsa1024?$AA@			; `string'
PUBLIC	??_C@_07MPGDHKGO@dsa2048?$AA@			; `string'
PUBLIC	??_C@_06DPKMBDFE@rsa512?$AA@			; `string'
PUBLIC	??_C@_07JKCPALKM@rsa1024?$AA@			; `string'
PUBLIC	??_C@_07HFLHECMC@rsa2048?$AA@			; `string'
PUBLIC	??_C@_07GMKMAJLP@rsa4096?$AA@			; `string'
PUBLIC	??_C@_07JCAFNCNH@rc2?9cbc?$AA@			; `string'
PUBLIC	??_C@_03LIGMGJPM@rc2?$AA@			; `string'
PUBLIC	??_C@_08LCPAFJCA@idea?9cbc?$AA@			; `string'
PUBLIC	??_C@_04CLEBCOKH@idea?$AA@			; `string'
PUBLIC	??_C@_08BHHJAAOC@seed?9cbc?$AA@			; `string'
PUBLIC	??_C@_04MENKDCKE@seed?$AA@			; `string'
PUBLIC	??_C@_06LFFGAFHI@bf?9cbc?$AA@			; `string'
PUBLIC	??_C@_08CMDBPLDA@blowfish?$AA@			; `string'
PUBLIC	??_C@_02HIEKPFIC@bf?$AA@			; `string'
PUBLIC	??_C@_08DICLOHAG@cast?9cbc?$AA@			; `string'
PUBLIC	??_C@_04HJDBPPOC@cast?$AA@			; `string'
PUBLIC	??_C@_05OMEMHABN@cast5?$AA@			; `string'
PUBLIC	??_C@_03CAPBGDEJ@des?$AA@			; `string'
PUBLIC	??_C@_03BHCPJDHL@aes?$AA@			; `string'
PUBLIC	??_C@_08MENDDNGH@camellia?$AA@			; `string'
PUBLIC	??_C@_03DFNMMEBL@rsa?$AA@			; `string'
PUBLIC	??_C@_03EAKOMMFI@dsa?$AA@			; `string'
PUBLIC	??_C@_09EKDJINAO@ecdsap160?$AA@			; `string'
PUBLIC	??_C@_09HDFDKILB@ecdsap192?$AA@			; `string'
PUBLIC	??_C@_09DLOJEPDI@ecdsap224?$AA@			; `string'
PUBLIC	??_C@_09MJADLDP@ecdsap256?$AA@			; `string'
PUBLIC	??_C@_09IOMCKNIL@ecdsap384?$AA@			; `string'
PUBLIC	??_C@_09NLEJIDME@ecdsap521?$AA@			; `string'
PUBLIC	??_C@_09HGCEHIFO@ecdsak163?$AA@			; `string'
PUBLIC	??_C@_09GCFKBFFL@ecdsak233?$AA@			; `string'
PUBLIC	??_C@_09GOAPPKLK@ecdsak283?$AA@			; `string'
PUBLIC	??_C@_09LPJIBMFE@ecdsak409?$AA@			; `string'
PUBLIC	??_C@_09MKLCOHLM@ecdsak571?$AA@			; `string'
PUBLIC	??_C@_09HLDEBKCP@ecdsab163?$AA@			; `string'
PUBLIC	??_C@_09GPEKHHCK@ecdsab233?$AA@			; `string'
PUBLIC	??_C@_09GDBPJIML@ecdsab283?$AA@			; `string'
PUBLIC	??_C@_09LCIIHOCF@ecdsab409?$AA@			; `string'
PUBLIC	??_C@_09MHKCIFMN@ecdsab571?$AA@			; `string'
PUBLIC	??_C@_05FGIDCBJD@ecdsa?$AA@			; `string'
PUBLIC	??_C@_08IENNLNPJ@ecdhp160?$AA@			; `string'
PUBLIC	??_C@_08LNLHJIEG@ecdhp192?$AA@			; `string'
PUBLIC	??_C@_08PFANHPMP@ecdhp224?$AA@			; `string'
PUBLIC	??_C@_08MCHEALMI@ecdhp256?$AA@			; `string'
PUBLIC	??_C@_08EACGJNHM@ecdhp384?$AA@			; `string'
PUBLIC	??_C@_08BFKNLDDD@ecdhp521?$AA@			; `string'
PUBLIC	??_C@_08LIMAEIKJ@ecdhk163?$AA@			; `string'
PUBLIC	??_C@_08KMLOCFKM@ecdhk233?$AA@			; `string'
PUBLIC	??_C@_08KAOLMKEN@ecdhk283?$AA@			; `string'
PUBLIC	??_C@_08HBHMCMKD@ecdhk409?$AA@			; `string'
PUBLIC	??_C@_08EFGNHEL@ecdhk571?$AA@			; `string'
PUBLIC	??_C@_08LFNACKNI@ecdhb163?$AA@			; `string'
PUBLIC	??_C@_08KBKOEHNN@ecdhb233?$AA@			; `string'
PUBLIC	??_C@_08KNPLKIDM@ecdhb283?$AA@			; `string'
PUBLIC	??_C@_08HMGMEONC@ecdhb409?$AA@			; `string'
PUBLIC	??_C@_08JEGLFDK@ecdhb571?$AA@			; `string'
PUBLIC	??_C@_04KDGGCKGB@ecdh?$AA@			; `string'
PUBLIC	??_C@_0BM@MKHDIKFH@Error?3?5bad?5option?5or?5value?6?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BD@CAAKEHEN@Available?5values?3?6?$AA@	; `string'
PUBLIC	??_C@_09JDONDMIM@mdc2?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09DMEPELLE@md4?5?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09PAOFELCK@md5?5?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09BOOAKEON@hmac?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09DPHDGDCD@sha1?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09LCCAIILE@sha256?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09BJJGFCOM@sha512?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09KOFIPEDD@idea?9cbc?5?$AA@		; `string'
PUBLIC	??_C@_09NLJHNOPG@seed?9cbc?5?$AA@		; `string'
PUBLIC	??_C@_09LGNBAGH@rc2?9cbc?5?5?$AA@		; `string'
PUBLIC	??_C@_0BD@FHIKLLHL@des?9cbc?5?5des?9ede3?5?$AA@	; `string'
PUBLIC	??_C@_0CF@DCHENCLH@aes?9128?9cbc?5aes?9192?9cbc?5aes?9256?9@ ; `string'
PUBLIC	??_C@_0CF@PCPALDGP@aes?9128?9ige?5aes?9192?9ige?5aes?9256?9@ ; `string'
PUBLIC	??_C@_0DE@CCALCJIO@camellia?9128?9cbc?5camellia?9192?9cb@ ; `string'
PUBLIC	??_C@_0CE@EPJNIAGE@rsa512?5?5?5rsa1024?5?5rsa2048?5?5rsa40@ ; `string'
PUBLIC	??_C@_0BL@BAAHEKKJ@dsa512?5?5?5dsa1024?5?5dsa2048?6?$AA@ ; `string'
PUBLIC	??_C@_0DN@PIBLGGHM@ecdsap160?5ecdsap192?5ecdsap224?5ec@ ; `string'
PUBLIC	??_C@_0DD@CLPPEPFP@ecdsak163?5ecdsak233?5ecdsak283?5ec@ ; `string'
PUBLIC	??_C@_0DD@LBAILFFA@ecdsab163?5ecdsab233?5ecdsab283?5ec@ ; `string'
PUBLIC	??_C@_06JDLPKJFF@ecdsa?6?$AA@			; `string'
PUBLIC	??_C@_0DL@OKJAGPLL@ecdhp160?5?5ecdhp192?5?5ecdhp224?5ecd@ ; `string'
PUBLIC	??_C@_0DC@NJIKAMEB@ecdhk163?5?5ecdhk233?5?5ecdhk283?5?5ec@ ; `string'
PUBLIC	??_C@_0DC@EDHNPGEO@ecdhb163?5?5ecdhb233?5?5ecdhb283?5?5ec@ ; `string'
PUBLIC	??_C@_05MAPJNPGO@ecdh?6?$AA@			; `string'
PUBLIC	??_C@_09EOFEGGFL@idea?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09DLJLEMJO@seed?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09EIOEPFJP@rc2?5?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09PEHJLPMJ@des?5?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09BCFAHEIN@aes?5?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_09EGJGADGE@camellia?5?$AA@		; `string'
PUBLIC	??_C@_09DPINEDML@rsa?5?5?5?5?5?5?$AA@		; `string'
PUBLIC	??_C@_0BE@GGBOHNKG@Available?5options?3?6?$AA@	; `string'
PUBLIC	??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ ; `string'
PUBLIC	??_C@_0BM@EKPEBFCO@?9evp?5e?5?5?5?5?5?5?5?5?5?5use?5EVP?5e?4?6?$AA@ ; `string'
PUBLIC	??_C@_0ED@BFHJAELP@?9decrypt?5?5?5?5?5?5?5?5time?5decryption?5@ ; `string'
PUBLIC	??_C@_0DC@FOLBCFO@?9mr?5?5?5?5?5?5?5?5?5?5?5?5?5produce?5machine?5@ ; `string'
PUBLIC	??_C@_0ED@CCLFMKOH@You?5have?5chosen?5to?5measure?5elaps@ ; `string'
PUBLIC	??_C@_0CK@KKENKNEI@internal?5error?5loading?5RSA?5key?5n@ ; `string'
PUBLIC	??_C@_0BB@CHBKGAKC@This?5is?5a?5key?4?4?4?$AA@	; `string'
PUBLIC	??_C@_0N@OFCMGCDL@0123456789ab?$AA@		; `string'
PUBLIC	??_C@_0BP@HBLLKLBN@?$CFs?5is?5not?5multi?9block?5capable?6?$AA@ ; `string'
PUBLIC	??_C@_0CO@CGMKIBHC@RSA?5sign?5failure?4?5?5No?5RSA?5sign?5w@ ; `string'
PUBLIC	??_C@_07NMPLPEPB@private?$AA@			; `string'
PUBLIC	??_C@_0BC@MKIMAF@RSA?5sign?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0BB@KHHLPGPE@?$CLR1?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ ; `string'
PUBLIC	??_C@_0CD@KNFFODGA@?$CFld?5?$CFd?5bit?5private?5RSA?8s?5in?5?$CF?42f@ ; `string'
PUBLIC	??_C@_0DC@MNCHLEBI@RSA?5verify?5failure?4?5?5No?5RSA?5veri@ ; `string'
PUBLIC	??_C@_06EOMAMIIF@public?$AA@			; `string'
PUBLIC	??_C@_0BE@NBJOEEN@RSA?5verify?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0BB@LGAGJMIN@?$CLR2?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@CAADNGPH@?$CFld?5?$CFd?5bit?5public?5RSA?8s?5in?5?$CF?42fs@ ; `string'
PUBLIC	??_C@_0CO@KDAFFDAA@DSA?5sign?5failure?4?5?5No?5DSA?5sign?5w@ ; `string'
PUBLIC	??_C@_04HHGHLBPI@sign?$AA@			; `string'
PUBLIC	??_C@_0BC@CABFGMJI@DSA?5sign?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0BB@PPNEHGF@?$CLR3?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@PEEMGHBC@?$CFld?5?$CFd?5bit?5DSA?5signs?5in?5?$CF?42fs?6?$AA@ ; `string'
PUBLIC	??_C@_0DC@NIMDNICI@DSA?5verify?5failure?4?5?5No?5DSA?5veri@ ; `string'
PUBLIC	??_C@_06MCIJCFHC@verify?$AA@			; `string'
PUBLIC	??_C@_0BE@GJPMNCLN@DSA?5verify?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0BB@JEPMEIHP@?$CLR4?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@NGPCPFDA@?$CFld?5?$CFd?5bit?5DSA?5verify?5in?5?$CF?42fs?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@FFIAAOAC@ECDSA?5failure?4?6?$AA@	; `string'
PUBLIC	??_C@_0DC@LLLMMFAB@ECDSA?5sign?5failure?4?5?5No?5ECDSA?5si@ ; `string'
PUBLIC	??_C@_0BE@LIPHCCNA@ECDSA?5sign?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0BB@CNAHJDJH@?$CLR5?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@DNDLMOIH@?$CFld?5?$CFd?5bit?5ECDSA?5signs?5in?5?$CF?42fs?5@ ; `string'
PUBLIC	??_C@_0DG@FLGECHDK@ECDSA?5verify?5failure?4?5?5No?5ECDSA?5@ ; `string'
PUBLIC	??_C@_0BG@MADIODMF@ECDSA?5verify?5failure?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@DMHKPJOO@?$CLR6?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@NHLBCNCE@?$CFld?5?$CFd?5bit?5ECDSA?5verify?5in?5?$CF?42fs@ ; `string'
PUBLIC	??_C@_0P@CJCFIJHN@ECDH?5failure?4?6?$AA@	; `string'
PUBLIC	??_C@_0BO@FHGEFKLE@ECDH?5key?5generation?5failure?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@LDDJOMDJ@ECDH?5computations?5don?8t?5match?4?6?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0BB@IFIBCCAG@?$CLR7?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@NPGEHCMI@?$CFld?5?$CFd?9bit?5ECDH?5ops?5in?5?$CF?42fs?6?$AA@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_08LCCFPGMC@options?3?$AA@			; `string'
PUBLIC	??_C@_03IKGEINEE@?$CFs?5?$AA@			; `string'
PUBLIC	??_C@_04EINJHBMM@?6?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_02MAGEKOB@?$CLH?$AA@			; `string'
PUBLIC	??_C@_0DL@LIPMFNH@The?5?8numbers?8?5are?5in?51000s?5of?5by@ ; `string'
PUBLIC	??_C@_0N@IFGFLHOK@type?5?5?5?5?5?5?5?5?$AA@	; `string'
PUBLIC	??_C@_03HODKBCIO@?3?$CFd?$AA@			; `string'
PUBLIC	??_C@_09HLOAFNAB@?$CF7d?5bytes?$AA@		; `string'
PUBLIC	??_C@_08GEGCDFKK@?$CLF?3?$CFd?3?$CFs?$AA@	; `string'
PUBLIC	??_C@_05EKKFMPFE@?$CF?913s?$AA@			; `string'
PUBLIC	??_C@_08FCDNLJP@?5?$CF11?42fk?$AA@		; `string'
PUBLIC	??_C@_05LGFIPPDB@?3?$CF?42f?$AA@		; `string'
PUBLIC	??_C@_08BGKOENFB@?5?$CF11?42f?5?$AA@		; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_0CH@INPMAKDM@?$CF18ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@ ; `string'
PUBLIC	??_C@_0BB@JLMGHPLN@?$CLF2?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@ ; `string'
PUBLIC	??_C@_0CI@DLLFJDPI@rsa?5?$CF4u?5bits?5?$CF8?46fs?5?$CF8?46fs?5?$CF8?41f@ ; `string'
PUBLIC	??_C@_0BB@CCDNKEFF@?$CLF3?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@ ; `string'
PUBLIC	??_C@_0CI@JKCLPBBG@dsa?5?$CF4u?5bits?5?$CF8?46fs?5?$CF8?46fs?5?$CF8?41f@ ; `string'
PUBLIC	??_C@_0CH@JBDKFKMH@?$CF30ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@ ; `string'
PUBLIC	??_C@_0BB@LJDMKLEP@?$CLF4?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@ ; `string'
PUBLIC	??_C@_0CO@PGONPIAO@?$CF4u?5bit?5ecdsa?5?$CI?$CFs?$CJ?5?$CF8?44fs?5?$CF8?44fs@ ; `string'
PUBLIC	??_C@_0BC@PMAHPJDG@?$CF30sop?5?5?5?5?5?5op?1s?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@MHHAKH@?$CLF5?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@JNGHOBN@?$CF4u?5bit?5ecdh?5?$CI?$CFs?$CJ?5?$CF8?44fs?5?$CF8?41f?6?$AA@ ; `string'
PUBLIC	??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@ ; `string'
PUBLIC	??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@ ; `string'
PUBLIC	??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@ ; `string'
PUBLIC	??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0BJ@NCDMCIJA@type?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_05FNFPHGDP@?$CF?924s?$AA@			; `string'
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@40c3880000000000
PUBLIC	__xmm@00000001000000010000000100000001
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	_SSLeay_version:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_options:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_OBJ_nid2ln:PROC
EXTRN	_EVP_CIPHER_flags:PROC
EXTRN	_EVP_Cipher:PROC
EXTRN	_EVP_Digest:PROC
EXTRN	_EVP_EncryptInit_ex:PROC
EXTRN	_EVP_EncryptUpdate:PROC
EXTRN	_EVP_EncryptFinal_ex:PROC
EXTRN	_EVP_DecryptInit_ex:PROC
EXTRN	_EVP_DecryptUpdate:PROC
EXTRN	_EVP_DecryptFinal_ex:PROC
EXTRN	_EVP_CIPHER_CTX_init:PROC
EXTRN	_EVP_CIPHER_CTX_cleanup:PROC
EXTRN	_EVP_CIPHER_CTX_set_padding:PROC
EXTRN	_EVP_CIPHER_CTX_ctrl:PROC
EXTRN	_EVP_md4:PROC
EXTRN	_EVP_md5:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_mdc2:PROC
EXTRN	_EVP_ripemd160:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EC_GROUP_get_degree:PROC
EXTRN	_EC_KEY_new_by_curve_name:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_EC_KEY_get0_group:PROC
EXTRN	_EC_KEY_get0_public_key:PROC
EXTRN	_EC_KEY_precompute_mult:PROC
EXTRN	_EC_KEY_generate_key:PROC
EXTRN	_ECDSA_sign:PROC
EXTRN	_ECDSA_verify:PROC
EXTRN	_ECDH_compute_key:PROC
EXTRN	_RSA_free:PROC
EXTRN	_RSA_set_default_method:PROC
EXTRN	_RSA_PKCS1_SSLeay:PROC
EXTRN	_d2i_RSAPrivateKey:PROC
EXTRN	_RSA_sign:PROC
EXTRN	_RSA_verify:PROC
EXTRN	_DSA_new:PROC
EXTRN	_DSA_free:PROC
EXTRN	_DSA_sign:PROC
EXTRN	_DSA_verify:PROC
EXTRN	_SHA1:PROC
EXTRN	_SHA256:PROC
EXTRN	_SHA512:PROC
EXTRN	_RAND_cleanup:PROC
EXTRN	_RAND_bytes:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_RAND_seed:PROC
EXTRN	_RAND_status:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_app_tminterval:PROC
EXTRN	_DES_options:PROC
EXTRN	_DES_ncbc_encrypt:PROC
EXTRN	_DES_ede3_cbc_encrypt:PROC
EXTRN	_DES_set_key_unchecked:PROC
EXTRN	_AES_options:PROC
EXTRN	_AES_set_encrypt_key:PROC
EXTRN	_AES_encrypt:PROC
EXTRN	_AES_cbc_encrypt:PROC
EXTRN	_AES_ige_encrypt:PROC
EXTRN	_Camellia_set_key:PROC
EXTRN	_Camellia_cbc_encrypt:PROC
EXTRN	_HMAC_CTX_init:PROC
EXTRN	_HMAC_CTX_cleanup:PROC
EXTRN	_HMAC_Init_ex:PROC
EXTRN	_HMAC_Update:PROC
EXTRN	_HMAC_Final:PROC
EXTRN	_WHIRLPOOL:PROC
EXTRN	_RC4_options:PROC
EXTRN	_RC4_set_key:PROC
EXTRN	_RC4:PROC
EXTRN	_RC2_set_key:PROC
EXTRN	_RC2_cbc_encrypt:PROC
EXTRN	_idea_options:PROC
EXTRN	_idea_set_encrypt_key:PROC
EXTRN	_idea_cbc_encrypt:PROC
EXTRN	_SEED_set_key:PROC
EXTRN	_SEED_cbc_encrypt:PROC
EXTRN	_BF_set_key:PROC
EXTRN	_BF_cbc_encrypt:PROC
EXTRN	_BF_options:PROC
EXTRN	_CAST_set_key:PROC
EXTRN	_CAST_cbc_encrypt:PROC
EXTRN	_CRYPTO_gcm128_new:PROC
EXTRN	_CRYPTO_gcm128_setiv:PROC
EXTRN	_CRYPTO_gcm128_aad:PROC
EXTRN	_CRYPTO_gcm128_release:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
	ALIGN	8

_results DQ	096H DUP (?)
_rsa_results DQ	08H DUP (?)
_dsa_results DQ	06H DUP (?)
_ecdsa_results DQ 020H DUP (?)
_ecdh_results DQ 010H DUP (?)
_lapse	DD	01H DUP (?)
_schlock DD	01H DUP (?)
_BSS	ENDS
;	COMDAT __xmm@00000001000000010000000100000001
CONST	SEGMENT
__xmm@00000001000000010000000100000001 DB 01H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 01H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@40c3880000000000
CONST	SEGMENT
__real@40c3880000000000 DQ 040c3880000000000r	; 10000
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT ??_C@_05FNFPHGDP@?$CF?924s?$AA@
CONST	SEGMENT
??_C@_05FNFPHGDP@?$CF?924s?$AA@ DB '%-24s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NCDMCIJA@type?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BJ@NCDMCIJA@type?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ DB 't'
	DB	'ype                    ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ DB 'Out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
CONST	SEGMENT
??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@ DB '%d %s''s in '
	DB	'%.2fs', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
CONST	SEGMENT
??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@ DB '+R:%d:%s:%f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
CONST	SEGMENT
??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@ DB 'D'
	DB	'oing %d bit %s %s''s for %ds: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@ DB '+DTP:%d'
	DB	':%s:%s:%d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
CONST	SEGMENT
??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@ DB 'D'
	DB	'oing %s for %ds on %d size blocks: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@ DB '+DT:%s:%d:%d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JNGHOBN@?$CF4u?5bit?5ecdh?5?$CI?$CFs?$CJ?5?$CF8?44fs?5?$CF8?41f?6?$AA@
CONST	SEGMENT
??_C@_0CA@JNGHOBN@?$CF4u?5bit?5ecdh?5?$CI?$CFs?$CJ?5?$CF8?44fs?5?$CF8?41f?6?$AA@ DB '%'
	DB	'4u bit ecdh (%s) %8.4fs %8.1f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MHHAKH@?$CLF5?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@
CONST	SEGMENT
??_C@_0BB@MHHAKH@?$CLF5?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@ DB '+F5:%u:%u:'
	DB	'%f:%f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PMAHPJDG@?$CF30sop?5?5?5?5?5?5op?1s?6?$AA@
CONST	SEGMENT
??_C@_0BC@PMAHPJDG@?$CF30sop?5?5?5?5?5?5op?1s?6?$AA@ DB '%30sop      op/s'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@PGONPIAO@?$CF4u?5bit?5ecdsa?5?$CI?$CFs?$CJ?5?$CF8?44fs?5?$CF8?44fs@
CONST	SEGMENT
??_C@_0CO@PGONPIAO@?$CF4u?5bit?5ecdsa?5?$CI?$CFs?$CJ?5?$CF8?44fs?5?$CF8?44fs@ DB '%'
	DB	'4u bit ecdsa (%s) %8.4fs %8.4fs %8.1f %8.1f', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LJDMKLEP@?$CLF4?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@
CONST	SEGMENT
??_C@_0BB@LJDMKLEP@?$CLF4?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@ DB '+F4:%u:%'
	DB	'u:%f:%f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JBDKFKMH@?$CF30ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@
CONST	SEGMENT
??_C@_0CH@JBDKFKMH@?$CF30ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@ DB '%30'
	DB	'ssign    verify    sign/s verify/s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JKCLPBBG@dsa?5?$CF4u?5bits?5?$CF8?46fs?5?$CF8?46fs?5?$CF8?41f@
CONST	SEGMENT
??_C@_0CI@JKCLPBBG@dsa?5?$CF4u?5bits?5?$CF8?46fs?5?$CF8?46fs?5?$CF8?41f@ DB 'd'
	DB	'sa %4u bits %8.6fs %8.6fs %8.1f %8.1f', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CCDNKEFF@?$CLF3?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@
CONST	SEGMENT
??_C@_0BB@CCDNKEFF@?$CLF3?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@ DB '+F3:%u:%'
	DB	'u:%f:%f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@DLLFJDPI@rsa?5?$CF4u?5bits?5?$CF8?46fs?5?$CF8?46fs?5?$CF8?41f@
CONST	SEGMENT
??_C@_0CI@DLLFJDPI@rsa?5?$CF4u?5bits?5?$CF8?46fs?5?$CF8?46fs?5?$CF8?41f@ DB 'r'
	DB	'sa %4u bits %8.6fs %8.6fs %8.1f %8.1f', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JLMGHPLN@?$CLF2?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@
CONST	SEGMENT
??_C@_0BB@JLMGHPLN@?$CLF2?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@ DB '+F2:%u:%'
	DB	'u:%f:%f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@INPMAKDM@?$CF18ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@
CONST	SEGMENT
??_C@_0CH@INPMAKDM@?$CF18ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@ DB '%18'
	DB	'ssign    verify    sign/s verify/s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08BGKOENFB@?5?$CF11?42f?5?$AA@
CONST	SEGMENT
??_C@_08BGKOENFB@?5?$CF11?42f?5?$AA@ DB ' %11.2f ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFIPPDB@?3?$CF?42f?$AA@
CONST	SEGMENT
??_C@_05LGFIPPDB@?3?$CF?42f?$AA@ DB ':%.2f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCDNLJP@?5?$CF11?42fk?$AA@
CONST	SEGMENT
??_C@_08FCDNLJP@?5?$CF11?42fk?$AA@ DB ' %11.2fk', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05EKKFMPFE@?$CF?913s?$AA@
CONST	SEGMENT
??_C@_05EKKFMPFE@?$CF?913s?$AA@ DB '%-13s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GEGCDFKK@?$CLF?3?$CFd?3?$CFs?$AA@
CONST	SEGMENT
??_C@_08GEGCDFKK@?$CLF?3?$CFd?3?$CFs?$AA@ DB '+F:%d:%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HLOAFNAB@?$CF7d?5bytes?$AA@
CONST	SEGMENT
??_C@_09HLOAFNAB@?$CF7d?5bytes?$AA@ DB '%7d bytes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03HODKBCIO@?3?$CFd?$AA@
CONST	SEGMENT
??_C@_03HODKBCIO@?3?$CFd?$AA@ DB ':%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IFGFLHOK@type?5?5?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_0N@IFGFLHOK@type?5?5?5?5?5?5?5?5?$AA@ DB 'type        ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@LIPMFNH@The?5?8numbers?8?5are?5in?51000s?5of?5by@
CONST	SEGMENT
??_C@_0DL@LIPMFNH@The?5?8numbers?8?5are?5in?51000s?5of?5by@ DB 'The ''num'
	DB	'bers'' are in 1000s of bytes per second processed.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02MAGEKOB@?$CLH?$AA@
CONST	SEGMENT
??_C@_02MAGEKOB@?$CLH?$AA@ DB '+H', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EINJHBMM@?6?$CFs?6?$AA@
CONST	SEGMENT
??_C@_04EINJHBMM@?6?$CFs?6?$AA@ DB 0aH, '%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKGEINEE@?$CFs?5?$AA@
CONST	SEGMENT
??_C@_03IKGEINEE@?$CFs?5?$AA@ DB '%s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCCFPGMC@options?3?$AA@
CONST	SEGMENT
??_C@_08LCCFPGMC@options?3?$AA@ DB 'options:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NPGEHCMI@?$CFld?5?$CFd?9bit?5ECDH?5ops?5in?5?$CF?42fs?6?$AA@
CONST	SEGMENT
??_C@_0BO@NPGEHCMI@?$CFld?5?$CFd?9bit?5ECDH?5ops?5in?5?$CF?42fs?6?$AA@ DB '%'
	DB	'ld %d-bit ECDH ops in %.2fs', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IFIBCCAG@?$CLR7?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
CONST	SEGMENT
??_C@_0BB@IFIBCCAG@?$CLR7?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ DB '+R7:%ld:%d:'
	DB	'%.2f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LDDJOMDJ@ECDH?5computations?5don?8t?5match?4?6?$AA@
CONST	SEGMENT
??_C@_0CA@LDDJOMDJ@ECDH?5computations?5don?8t?5match?4?6?$AA@ DB 'ECDH co'
	DB	'mputations don''t match.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FHGEFKLE@ECDH?5key?5generation?5failure?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@FHGEFKLE@ECDH?5key?5generation?5failure?4?6?$AA@ DB 'ECDH key g'
	DB	'eneration failure.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CJCFIJHN@ECDH?5failure?4?6?$AA@
CONST	SEGMENT
??_C@_0P@CJCFIJHN@ECDH?5failure?4?6?$AA@ DB 'ECDH failure.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NHLBCNCE@?$CFld?5?$CFd?5bit?5ECDSA?5verify?5in?5?$CF?42fs@
CONST	SEGMENT
??_C@_0CC@NHLBCNCE@?$CFld?5?$CFd?5bit?5ECDSA?5verify?5in?5?$CF?42fs@ DB '%'
	DB	'ld %d bit ECDSA verify in %.2fs', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DMHKPJOO@?$CLR6?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
CONST	SEGMENT
??_C@_0BB@DMHKPJOO@?$CLR6?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ DB '+R6:%ld:%d:'
	DB	'%.2f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MADIODMF@ECDSA?5verify?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BG@MADIODMF@ECDSA?5verify?5failure?6?$AA@ DB 'ECDSA verify failure'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@FLGECHDK@ECDSA?5verify?5failure?4?5?5No?5ECDSA?5@
CONST	SEGMENT
??_C@_0DG@FLGECHDK@ECDSA?5verify?5failure?4?5?5No?5ECDSA?5@ DB 'ECDSA ver'
	DB	'ify failure.  No ECDSA verify will be done.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DNDLMOIH@?$CFld?5?$CFd?5bit?5ECDSA?5signs?5in?5?$CF?42fs?5@
CONST	SEGMENT
??_C@_0CC@DNDLMOIH@?$CFld?5?$CFd?5bit?5ECDSA?5signs?5in?5?$CF?42fs?5@ DB '%'
	DB	'ld %d bit ECDSA signs in %.2fs ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CNAHJDJH@?$CLR5?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
CONST	SEGMENT
??_C@_0BB@CNAHJDJH@?$CLR5?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ DB '+R5:%ld:%d:'
	DB	'%.2f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LIPHCCNA@ECDSA?5sign?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BE@LIPHCCNA@ECDSA?5sign?5failure?6?$AA@ DB 'ECDSA sign failure', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@LLLMMFAB@ECDSA?5sign?5failure?4?5?5No?5ECDSA?5si@
CONST	SEGMENT
??_C@_0DC@LLLMMFAB@ECDSA?5sign?5failure?4?5?5No?5ECDSA?5si@ DB 'ECDSA sig'
	DB	'n failure.  No ECDSA sign will be done.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FFIAAOAC@ECDSA?5failure?4?6?$AA@
CONST	SEGMENT
??_C@_0BA@FFIAAOAC@ECDSA?5failure?4?6?$AA@ DB 'ECDSA failure.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NGPCPFDA@?$CFld?5?$CFd?5bit?5DSA?5verify?5in?5?$CF?42fs?6?$AA@
CONST	SEGMENT
??_C@_0CA@NGPCPFDA@?$CFld?5?$CFd?5bit?5DSA?5verify?5in?5?$CF?42fs?6?$AA@ DB '%'
	DB	'ld %d bit DSA verify in %.2fs', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JEPMEIHP@?$CLR4?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
CONST	SEGMENT
??_C@_0BB@JEPMEIHP@?$CLR4?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ DB '+R4:%ld:%d:'
	DB	'%.2f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GJPMNCLN@DSA?5verify?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BE@GJPMNCLN@DSA?5verify?5failure?6?$AA@ DB 'DSA verify failure', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06MCIJCFHC@verify?$AA@
CONST	SEGMENT
??_C@_06MCIJCFHC@verify?$AA@ DB 'verify', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NIMDNICI@DSA?5verify?5failure?4?5?5No?5DSA?5veri@
CONST	SEGMENT
??_C@_0DC@NIMDNICI@DSA?5verify?5failure?4?5?5No?5DSA?5veri@ DB 'DSA verif'
	DB	'y failure.  No DSA verify will be done.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PEEMGHBC@?$CFld?5?$CFd?5bit?5DSA?5signs?5in?5?$CF?42fs?6?$AA@
CONST	SEGMENT
??_C@_0BP@PEEMGHBC@?$CFld?5?$CFd?5bit?5DSA?5signs?5in?5?$CF?42fs?6?$AA@ DB '%'
	DB	'ld %d bit DSA signs in %.2fs', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PPNEHGF@?$CLR3?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
CONST	SEGMENT
??_C@_0BB@PPNEHGF@?$CLR3?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ DB '+R3:%ld:%d:%'
	DB	'.2f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CABFGMJI@DSA?5sign?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BC@CABFGMJI@DSA?5sign?5failure?6?$AA@ DB 'DSA sign failure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HHGHLBPI@sign?$AA@
CONST	SEGMENT
??_C@_04HHGHLBPI@sign?$AA@ DB 'sign', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@KDAFFDAA@DSA?5sign?5failure?4?5?5No?5DSA?5sign?5w@
CONST	SEGMENT
??_C@_0CO@KDAFFDAA@DSA?5sign?5failure?4?5?5No?5DSA?5sign?5w@ DB 'DSA sign'
	DB	' failure.  No DSA sign will be done.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CAADNGPH@?$CFld?5?$CFd?5bit?5public?5RSA?8s?5in?5?$CF?42fs@
CONST	SEGMENT
??_C@_0CC@CAADNGPH@?$CFld?5?$CFd?5bit?5public?5RSA?8s?5in?5?$CF?42fs@ DB '%'
	DB	'ld %d bit public RSA''s in %.2fs', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LGAGJMIN@?$CLR2?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
CONST	SEGMENT
??_C@_0BB@LGAGJMIN@?$CLR2?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ DB '+R2:%ld:%d:'
	DB	'%.2f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NBJOEEN@RSA?5verify?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BE@NBJOEEN@RSA?5verify?5failure?6?$AA@ DB 'RSA verify failure', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOMAMIIF@public?$AA@
CONST	SEGMENT
??_C@_06EOMAMIIF@public?$AA@ DB 'public', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MNCHLEBI@RSA?5verify?5failure?4?5?5No?5RSA?5veri@
CONST	SEGMENT
??_C@_0DC@MNCHLEBI@RSA?5verify?5failure?4?5?5No?5RSA?5veri@ DB 'RSA verif'
	DB	'y failure.  No RSA verify will be done.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KNFFODGA@?$CFld?5?$CFd?5bit?5private?5RSA?8s?5in?5?$CF?42f@
CONST	SEGMENT
??_C@_0CD@KNFFODGA@?$CFld?5?$CFd?5bit?5private?5RSA?8s?5in?5?$CF?42f@ DB '%'
	DB	'ld %d bit private RSA''s in %.2fs', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KHHLPGPE@?$CLR1?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
CONST	SEGMENT
??_C@_0BB@KHHLPGPE@?$CLR1?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@ DB '+R1:%ld:%d:'
	DB	'%.2f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MKIMAF@RSA?5sign?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BC@MKIMAF@RSA?5sign?5failure?6?$AA@ DB 'RSA sign failure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NMPLPEPB@private?$AA@
CONST	SEGMENT
??_C@_07NMPLPEPB@private?$AA@ DB 'private', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@CGMKIBHC@RSA?5sign?5failure?4?5?5No?5RSA?5sign?5w@
CONST	SEGMENT
??_C@_0CO@CGMKIBHC@RSA?5sign?5failure?4?5?5No?5RSA?5sign?5w@ DB 'RSA sign'
	DB	' failure.  No RSA sign will be done.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HBLLKLBN@?$CFs?5is?5not?5multi?9block?5capable?6?$AA@
CONST	SEGMENT
??_C@_0BP@HBLLKLBN@?$CFs?5is?5not?5multi?9block?5capable?6?$AA@ DB '%s is'
	DB	' not multi-block capable', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OFCMGCDL@0123456789ab?$AA@
CONST	SEGMENT
??_C@_0N@OFCMGCDL@0123456789ab?$AA@ DB '0123456789ab', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CHBKGAKC@This?5is?5a?5key?4?4?4?$AA@
CONST	SEGMENT
??_C@_0BB@CHBKGAKC@This?5is?5a?5key?4?4?4?$AA@ DB 'This is a key...', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KKENKNEI@internal?5error?5loading?5RSA?5key?5n@
CONST	SEGMENT
??_C@_0CK@KKENKNEI@internal?5error?5loading?5RSA?5key?5n@ DB 'internal er'
	DB	'ror loading RSA key number %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@CCLFMKOH@You?5have?5chosen?5to?5measure?5elaps@
CONST	SEGMENT
??_C@_0ED@CCLFMKOH@You?5have?5chosen?5to?5measure?5elaps@ DB 'You have ch'
	DB	'osen to measure elapsed time instead of user CPU time.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FOLBCFO@?9mr?5?5?5?5?5?5?5?5?5?5?5?5?5produce?5machine?5@
CONST	SEGMENT
??_C@_0DC@FOLBCFO@?9mr?5?5?5?5?5?5?5?5?5?5?5?5?5produce?5machine?5@ DB '-'
	DB	'mr             produce machine readable output.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@BFHJAELP@?9decrypt?5?5?5?5?5?5?5?5time?5decryption?5@
CONST	SEGMENT
??_C@_0ED@BFHJAELP@?9decrypt?5?5?5?5?5?5?5?5time?5decryption?5@ DB '-decr'
	DB	'ypt        time decryption instead of encryption (only EVP).', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EKPEBFCO@?9evp?5e?5?5?5?5?5?5?5?5?5?5use?5EVP?5e?4?6?$AA@
CONST	SEGMENT
??_C@_0BM@EKPEBFCO@?9evp?5e?5?5?5?5?5?5?5?5?5?5use?5EVP?5e?4?6?$AA@ DB '-'
	DB	'evp e          use EVP e.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
CONST	SEGMENT
??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ DB '-en'
	DB	'gine e       use engine e, possibly a hardware device.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GGBOHNKG@Available?5options?3?6?$AA@
CONST	SEGMENT
??_C@_0BE@GGBOHNKG@Available?5options?3?6?$AA@ DB 'Available options:', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_09DPINEDML@rsa?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09DPINEDML@rsa?5?5?5?5?5?5?$AA@ DB 'rsa      ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EGJGADGE@camellia?5?$AA@
CONST	SEGMENT
??_C@_09EGJGADGE@camellia?5?$AA@ DB 'camellia ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BCFAHEIN@aes?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09BCFAHEIN@aes?5?5?5?5?5?5?$AA@ DB 'aes      ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PEHJLPMJ@des?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09PEHJLPMJ@des?5?5?5?5?5?5?$AA@ DB 'des      ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EIOEPFJP@rc2?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09EIOEPFJP@rc2?5?5?5?5?5?5?$AA@ DB 'rc2      ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DLJLEMJO@seed?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09DLJLEMJO@seed?5?5?5?5?5?$AA@ DB 'seed     ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EOFEGGFL@idea?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09EOFEGGFL@idea?5?5?5?5?5?$AA@ DB 'idea     ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MAPJNPGO@ecdh?6?$AA@
CONST	SEGMENT
??_C@_05MAPJNPGO@ecdh?6?$AA@ DB 'ecdh', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EDHNPGEO@ecdhb163?5?5ecdhb233?5?5ecdhb283?5?5ec@
CONST	SEGMENT
??_C@_0DC@EDHNPGEO@ecdhb163?5?5ecdhb233?5?5ecdhb283?5?5ec@ DB 'ecdhb163  '
	DB	'ecdhb233  ecdhb283  ecdhb409  ecdhb571', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NJIKAMEB@ecdhk163?5?5ecdhk233?5?5ecdhk283?5?5ec@
CONST	SEGMENT
??_C@_0DC@NJIKAMEB@ecdhk163?5?5ecdhk233?5?5ecdhk283?5?5ec@ DB 'ecdhk163  '
	DB	'ecdhk233  ecdhk283  ecdhk409  ecdhk571', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@OKJAGPLL@ecdhp160?5?5ecdhp192?5?5ecdhp224?5ecd@
CONST	SEGMENT
??_C@_0DL@OKJAGPLL@ecdhp160?5?5ecdhp192?5?5ecdhp224?5ecd@ DB 'ecdhp160  e'
	DB	'cdhp192  ecdhp224 ecdhp256  ecdhp384  ecdhp521', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JDLPKJFF@ecdsa?6?$AA@
CONST	SEGMENT
??_C@_06JDLPKJFF@ecdsa?6?$AA@ DB 'ecdsa', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@LBAILFFA@ecdsab163?5ecdsab233?5ecdsab283?5ec@
CONST	SEGMENT
??_C@_0DD@LBAILFFA@ecdsab163?5ecdsab233?5ecdsab283?5ec@ DB 'ecdsab163 ecd'
	DB	'sab233 ecdsab283 ecdsab409 ecdsab571', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@CLPPEPFP@ecdsak163?5ecdsak233?5ecdsak283?5ec@
CONST	SEGMENT
??_C@_0DD@CLPPEPFP@ecdsak163?5ecdsak233?5ecdsak283?5ec@ DB 'ecdsak163 ecd'
	DB	'sak233 ecdsak283 ecdsak409 ecdsak571', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@PIBLGGHM@ecdsap160?5ecdsap192?5ecdsap224?5ec@
CONST	SEGMENT
??_C@_0DN@PIBLGGHM@ecdsap160?5ecdsap192?5ecdsap224?5ec@ DB 'ecdsap160 ecd'
	DB	'sap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BAAHEKKJ@dsa512?5?5?5dsa1024?5?5dsa2048?6?$AA@
CONST	SEGMENT
??_C@_0BL@BAAHEKKJ@dsa512?5?5?5dsa1024?5?5dsa2048?6?$AA@ DB 'dsa512   dsa'
	DB	'1024  dsa2048', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EPJNIAGE@rsa512?5?5?5rsa1024?5?5rsa2048?5?5rsa40@
CONST	SEGMENT
??_C@_0CE@EPJNIAGE@rsa512?5?5?5rsa1024?5?5rsa2048?5?5rsa40@ DB 'rsa512   '
	DB	'rsa1024  rsa2048  rsa4096', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CCALCJIO@camellia?9128?9cbc?5camellia?9192?9cb@
CONST	SEGMENT
??_C@_0DE@CCALCJIO@camellia?9128?9cbc?5camellia?9192?9cb@ DB 'camellia-12'
	DB	'8-cbc camellia-192-cbc camellia-256-cbc ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PCPALDGP@aes?9128?9ige?5aes?9192?9ige?5aes?9256?9@
CONST	SEGMENT
??_C@_0CF@PCPALDGP@aes?9128?9ige?5aes?9192?9ige?5aes?9256?9@ DB 'aes-128-'
	DB	'ige aes-192-ige aes-256-ige ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DCHENCLH@aes?9128?9cbc?5aes?9192?9cbc?5aes?9256?9@
CONST	SEGMENT
??_C@_0CF@DCHENCLH@aes?9128?9cbc?5aes?9192?9cbc?5aes?9256?9@ DB 'aes-128-'
	DB	'cbc aes-192-cbc aes-256-cbc ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FHIKLLHL@des?9cbc?5?5des?9ede3?5?$AA@
CONST	SEGMENT
??_C@_0BD@FHIKLLHL@des?9cbc?5?5des?9ede3?5?$AA@ DB 'des-cbc  des-ede3 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LGNBAGH@rc2?9cbc?5?5?$AA@
CONST	SEGMENT
??_C@_09LGNBAGH@rc2?9cbc?5?5?$AA@ DB 'rc2-cbc  ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NLJHNOPG@seed?9cbc?5?$AA@
CONST	SEGMENT
??_C@_09NLJHNOPG@seed?9cbc?5?$AA@ DB 'seed-cbc ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KOFIPEDD@idea?9cbc?5?$AA@
CONST	SEGMENT
??_C@_09KOFIPEDD@idea?9cbc?5?$AA@ DB 'idea-cbc ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJJGFCOM@sha512?5?5?5?$AA@
CONST	SEGMENT
??_C@_09BJJGFCOM@sha512?5?5?5?$AA@ DB 'sha512   ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LCCAIILE@sha256?5?5?5?$AA@
CONST	SEGMENT
??_C@_09LCCAIILE@sha256?5?5?5?$AA@ DB 'sha256   ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DPHDGDCD@sha1?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09DPHDGDCD@sha1?5?5?5?5?5?$AA@ DB 'sha1     ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BOOAKEON@hmac?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09BOOAKEON@hmac?5?5?5?5?5?$AA@ DB 'hmac     ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PAOFELCK@md5?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09PAOFELCK@md5?5?5?5?5?5?5?$AA@ DB 'md5      ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DMEPELLE@md4?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09DMEPELLE@md4?5?5?5?5?5?5?$AA@ DB 'md4      ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JDONDMIM@mdc2?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_09JDONDMIM@mdc2?5?5?5?5?5?$AA@ DB 'mdc2     ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAAKEHEN@Available?5values?3?6?$AA@
CONST	SEGMENT
??_C@_0BD@CAAKEHEN@Available?5values?3?6?$AA@ DB 'Available values:', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MKHDIKFH@Error?3?5bad?5option?5or?5value?6?$AA@
CONST	SEGMENT
??_C@_0BM@MKHDIKFH@Error?3?5bad?5option?5or?5value?6?$AA@ DB 'Error: bad '
	DB	'option or value', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KDGGCKGB@ecdh?$AA@
CONST	SEGMENT
??_C@_04KDGGCKGB@ecdh?$AA@ DB 'ecdh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JEGLFDK@ecdhb571?$AA@
CONST	SEGMENT
??_C@_08JEGLFDK@ecdhb571?$AA@ DB 'ecdhb571', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HMGMEONC@ecdhb409?$AA@
CONST	SEGMENT
??_C@_08HMGMEONC@ecdhb409?$AA@ DB 'ecdhb409', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KNPLKIDM@ecdhb283?$AA@
CONST	SEGMENT
??_C@_08KNPLKIDM@ecdhb283?$AA@ DB 'ecdhb283', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KBKOEHNN@ecdhb233?$AA@
CONST	SEGMENT
??_C@_08KBKOEHNN@ecdhb233?$AA@ DB 'ecdhb233', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LFNACKNI@ecdhb163?$AA@
CONST	SEGMENT
??_C@_08LFNACKNI@ecdhb163?$AA@ DB 'ecdhb163', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EFGNHEL@ecdhk571?$AA@
CONST	SEGMENT
??_C@_08EFGNHEL@ecdhk571?$AA@ DB 'ecdhk571', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBHMCMKD@ecdhk409?$AA@
CONST	SEGMENT
??_C@_08HBHMCMKD@ecdhk409?$AA@ DB 'ecdhk409', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KAOLMKEN@ecdhk283?$AA@
CONST	SEGMENT
??_C@_08KAOLMKEN@ecdhk283?$AA@ DB 'ecdhk283', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KMLOCFKM@ecdhk233?$AA@
CONST	SEGMENT
??_C@_08KMLOCFKM@ecdhk233?$AA@ DB 'ecdhk233', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LIMAEIKJ@ecdhk163?$AA@
CONST	SEGMENT
??_C@_08LIMAEIKJ@ecdhk163?$AA@ DB 'ecdhk163', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BFKNLDDD@ecdhp521?$AA@
CONST	SEGMENT
??_C@_08BFKNLDDD@ecdhp521?$AA@ DB 'ecdhp521', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EACGJNHM@ecdhp384?$AA@
CONST	SEGMENT
??_C@_08EACGJNHM@ecdhp384?$AA@ DB 'ecdhp384', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MCHEALMI@ecdhp256?$AA@
CONST	SEGMENT
??_C@_08MCHEALMI@ecdhp256?$AA@ DB 'ecdhp256', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PFANHPMP@ecdhp224?$AA@
CONST	SEGMENT
??_C@_08PFANHPMP@ecdhp224?$AA@ DB 'ecdhp224', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LNLHJIEG@ecdhp192?$AA@
CONST	SEGMENT
??_C@_08LNLHJIEG@ecdhp192?$AA@ DB 'ecdhp192', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08IENNLNPJ@ecdhp160?$AA@
CONST	SEGMENT
??_C@_08IENNLNPJ@ecdhp160?$AA@ DB 'ecdhp160', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FGIDCBJD@ecdsa?$AA@
CONST	SEGMENT
??_C@_05FGIDCBJD@ecdsa?$AA@ DB 'ecdsa', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MHKCIFMN@ecdsab571?$AA@
CONST	SEGMENT
??_C@_09MHKCIFMN@ecdsab571?$AA@ DB 'ecdsab571', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LCIIHOCF@ecdsab409?$AA@
CONST	SEGMENT
??_C@_09LCIIHOCF@ecdsab409?$AA@ DB 'ecdsab409', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GDBPJIML@ecdsab283?$AA@
CONST	SEGMENT
??_C@_09GDBPJIML@ecdsab283?$AA@ DB 'ecdsab283', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GPEKHHCK@ecdsab233?$AA@
CONST	SEGMENT
??_C@_09GPEKHHCK@ecdsab233?$AA@ DB 'ecdsab233', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HLDEBKCP@ecdsab163?$AA@
CONST	SEGMENT
??_C@_09HLDEBKCP@ecdsab163?$AA@ DB 'ecdsab163', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MKLCOHLM@ecdsak571?$AA@
CONST	SEGMENT
??_C@_09MKLCOHLM@ecdsak571?$AA@ DB 'ecdsak571', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LPJIBMFE@ecdsak409?$AA@
CONST	SEGMENT
??_C@_09LPJIBMFE@ecdsak409?$AA@ DB 'ecdsak409', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GOAPPKLK@ecdsak283?$AA@
CONST	SEGMENT
??_C@_09GOAPPKLK@ecdsak283?$AA@ DB 'ecdsak283', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GCFKBFFL@ecdsak233?$AA@
CONST	SEGMENT
??_C@_09GCFKBFFL@ecdsak233?$AA@ DB 'ecdsak233', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HGCEHIFO@ecdsak163?$AA@
CONST	SEGMENT
??_C@_09HGCEHIFO@ecdsak163?$AA@ DB 'ecdsak163', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NLEJIDME@ecdsap521?$AA@
CONST	SEGMENT
??_C@_09NLEJIDME@ecdsap521?$AA@ DB 'ecdsap521', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IOMCKNIL@ecdsap384?$AA@
CONST	SEGMENT
??_C@_09IOMCKNIL@ecdsap384?$AA@ DB 'ecdsap384', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MJADLDP@ecdsap256?$AA@
CONST	SEGMENT
??_C@_09MJADLDP@ecdsap256?$AA@ DB 'ecdsap256', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DLOJEPDI@ecdsap224?$AA@
CONST	SEGMENT
??_C@_09DLOJEPDI@ecdsap224?$AA@ DB 'ecdsap224', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HDFDKILB@ecdsap192?$AA@
CONST	SEGMENT
??_C@_09HDFDKILB@ecdsap192?$AA@ DB 'ecdsap192', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EKDJINAO@ecdsap160?$AA@
CONST	SEGMENT
??_C@_09EKDJINAO@ecdsap160?$AA@ DB 'ecdsap160', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03EAKOMMFI@dsa?$AA@
CONST	SEGMENT
??_C@_03EAKOMMFI@dsa?$AA@ DB 'dsa', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DFNMMEBL@rsa?$AA@
CONST	SEGMENT
??_C@_03DFNMMEBL@rsa?$AA@ DB 'rsa', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MENDDNGH@camellia?$AA@
CONST	SEGMENT
??_C@_08MENDDNGH@camellia?$AA@ DB 'camellia', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03BHCPJDHL@aes?$AA@
CONST	SEGMENT
??_C@_03BHCPJDHL@aes?$AA@ DB 'aes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CAPBGDEJ@des?$AA@
CONST	SEGMENT
??_C@_03CAPBGDEJ@des?$AA@ DB 'des', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05OMEMHABN@cast5?$AA@
CONST	SEGMENT
??_C@_05OMEMHABN@cast5?$AA@ DB 'cast5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HJDBPPOC@cast?$AA@
CONST	SEGMENT
??_C@_04HJDBPPOC@cast?$AA@ DB 'cast', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DICLOHAG@cast?9cbc?$AA@
CONST	SEGMENT
??_C@_08DICLOHAG@cast?9cbc?$AA@ DB 'cast-cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIEKPFIC@bf?$AA@
CONST	SEGMENT
??_C@_02HIEKPFIC@bf?$AA@ DB 'bf', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08CMDBPLDA@blowfish?$AA@
CONST	SEGMENT
??_C@_08CMDBPLDA@blowfish?$AA@ DB 'blowfish', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LFFGAFHI@bf?9cbc?$AA@
CONST	SEGMENT
??_C@_06LFFGAFHI@bf?9cbc?$AA@ DB 'bf-cbc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MENKDCKE@seed?$AA@
CONST	SEGMENT
??_C@_04MENKDCKE@seed?$AA@ DB 'seed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BHHJAAOC@seed?9cbc?$AA@
CONST	SEGMENT
??_C@_08BHHJAAOC@seed?9cbc?$AA@ DB 'seed-cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CLEBCOKH@idea?$AA@
CONST	SEGMENT
??_C@_04CLEBCOKH@idea?$AA@ DB 'idea', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCPAFJCA@idea?9cbc?$AA@
CONST	SEGMENT
??_C@_08LCPAFJCA@idea?9cbc?$AA@ DB 'idea-cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIGMGJPM@rc2?$AA@
CONST	SEGMENT
??_C@_03LIGMGJPM@rc2?$AA@ DB 'rc2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07JCAFNCNH@rc2?9cbc?$AA@
CONST	SEGMENT
??_C@_07JCAFNCNH@rc2?9cbc?$AA@ DB 'rc2-cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GMKMAJLP@rsa4096?$AA@
CONST	SEGMENT
??_C@_07GMKMAJLP@rsa4096?$AA@ DB 'rsa4096', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HFLHECMC@rsa2048?$AA@
CONST	SEGMENT
??_C@_07HFLHECMC@rsa2048?$AA@ DB 'rsa2048', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JKCPALKM@rsa1024?$AA@
CONST	SEGMENT
??_C@_07JKCPALKM@rsa1024?$AA@ DB 'rsa1024', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DPKMBDFE@rsa512?$AA@
CONST	SEGMENT
??_C@_06DPKMBDFE@rsa512?$AA@ DB 'rsa512', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MPGDHKGO@dsa2048?$AA@
CONST	SEGMENT
??_C@_07MPGDHKGO@dsa2048?$AA@ DB 'dsa2048', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CAPLDDAA@dsa1024?$AA@
CONST	SEGMENT
??_C@_07CAPLDDAA@dsa1024?$AA@ DB 'dsa1024', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DLKCLKKA@dsa512?$AA@
CONST	SEGMENT
??_C@_06DLKCLKKA@dsa512?$AA@ DB 'dsa512', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OHDAOILP@openssl?$AA@
CONST	SEGMENT
??_C@_07OHDAOILP@openssl?$AA@ DB 'openssl', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BCMKIGGJ@camellia?9256?9cbc?$AA@
CONST	SEGMENT
??_C@_0BB@BCMKIGGJ@camellia?9256?9cbc?$AA@ DB 'camellia-256-cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MAHEKJOI@camellia?9192?9cbc?$AA@
CONST	SEGMENT
??_C@_0BB@MAHEKJOI@camellia?9192?9cbc?$AA@ DB 'camellia-192-cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GDOINOHE@camellia?9128?9cbc?$AA@
CONST	SEGMENT
??_C@_0BB@GDOINOHE@camellia?9128?9cbc?$AA@ DB 'camellia-128-cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LNGDFDNM@aes?9256?9ige?$AA@
CONST	SEGMENT
??_C@_0M@LNGDFDNM@aes?9256?9ige?$AA@ DB 'aes-256-ige', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GPNNHMFN@aes?9192?9ige?$AA@
CONST	SEGMENT
??_C@_0M@GPNNHMFN@aes?9192?9ige?$AA@ DB 'aes-192-ige', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MMEBALMB@aes?9128?9ige?$AA@
CONST	SEGMENT
??_C@_0M@MMEBALMB@aes?9128?9ige?$AA@ DB 'aes-128-ige', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ICEPNGNF@aes?9256?9cbc?$AA@
CONST	SEGMENT
??_C@_0M@ICEPNGNF@aes?9256?9cbc?$AA@ DB 'aes-256-cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FAPBPJFE@aes?9192?9cbc?$AA@
CONST	SEGMENT
??_C@_0M@FAPBPJFE@aes?9192?9cbc?$AA@ DB 'aes-192-cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PDGNIOMI@aes?9128?9cbc?$AA@
CONST	SEGMENT
??_C@_0M@PDGNIOMI@aes?9128?9cbc?$AA@ DB 'aes-128-cbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LJCBLNOK@des?9ede3?$AA@
CONST	SEGMENT
??_C@_08LJCBLNOK@des?9ede3?$AA@ DB 'des-ede3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IPAFAGII@des?9cbc?$AA@
CONST	SEGMENT
??_C@_07IPAFAGII@des?9cbc?$AA@ DB 'des-cbc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EDIPKBN@ripemd160?$AA@
CONST	SEGMENT
??_C@_09EDIPKBN@ripemd160?$AA@ DB 'ripemd160', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICCLKODP@ripemd?$AA@
CONST	SEGMENT
??_C@_06ICCLKODP@ripemd?$AA@ DB 'ripemd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JNBDOPOP@sha?$AA@
CONST	SEGMENT
??_C@_03JNBDOPOP@sha?$AA@ DB 'sha', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FOBGICMD@hmac?$AA@
CONST	SEGMENT
??_C@_04FOBGICMD@hmac?$AA@ DB 'hmac', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JLCHAGFG@?9mb?$AA@
CONST	SEGMENT
??_C@_03JLCHAGFG@?9mb?$AA@ DB '-mb', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NBOFBEAH@?9mr?$AA@
CONST	SEGMENT
??_C@_03NBOFBEAH@?9mr?$AA@ DB '-mr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DDANMNBA@no?5engine?5given?6?$AA@
CONST	SEGMENT
??_C@_0BB@DDANMNBA@no?5engine?5given?6?$AA@ DB 'no engine given', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ODIALGEJ@?9decrypt?$AA@
CONST	SEGMENT
??_C@_08ODIALGEJ@?9decrypt?$AA@ DB '-decrypt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@ELNIIMHM@?$CFs?5is?5an?5unknown?5cipher?5or?5diges@
CONST	SEGMENT
??_C@_0CD@ELNIIMHM@?$CFs?5is?5an?5unknown?5cipher?5or?5diges@ DB '%s is a'
	DB	'n unknown cipher or digest', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GDKHNIIH@no?5EVP?5given?6?$AA@
CONST	SEGMENT
??_C@_0O@GDKHNIIH@no?5EVP?5given?6?$AA@ DB 'no EVP given', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HDDHIJHC@?9evp?$AA@
CONST	SEGMENT
??_C@_04HDDHIJHC@?9evp?$AA@ DB '-evp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCCIJCMB@?9elapsed?$AA@
CONST	SEGMENT
??_C@_08LCCIJCMB@?9elapsed?$AA@ DB '-elapsed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ DB 'out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MPGKMPDA@?4?2apps?2speed?4c?$AA@
CONST	SEGMENT
??_C@_0P@MPGKMPDA@?4?2apps?2speed?4c?$AA@ DB '.\apps\speed.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NHJDEHNA@unable?5to?5CreateThread?5?$CI?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BM@NHJDEHNA@unable?5to?5CreateThread?5?$CI?$CFd?$CJ?$AA@ DB 'unabl'
	DB	'e to CreateThread (%d)', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _speed_main
_TEXT	SEGMENT
_j$1$ = -10576						; size = 4
_outl$1 = -10576					; size = 4
_argv$GSCopy$1$ = -10572				; size = 4
_outlen$1$ = -10572					; size = 4
tv6836 = -10572						; size = 4
tv6834 = -10572						; size = 4
tv6832 = -10572						; size = 4
tv6830 = -10572						; size = 4
tv6828 = -10572						; size = 4
tv6825 = -10572						; size = 4
tv6813 = -10572						; size = 4
tv6797 = -10572						; size = 4
tv6783 = -10572						; size = 4
tv6767 = -10572						; size = 4
tv6751 = -10572						; size = 4
tv6737 = -10572						; size = 4
tv6721 = -10572						; size = 4
tv6707 = -10572						; size = 4
tv6691 = -10572						; size = 4
tv6676 = -10572						; size = 4
tv6658 = -10572						; size = 4
tv6643 = -10572						; size = 4
tv6626 = -10572						; size = 4
_d$ = -10568						; size = 8
_ctx$1$ = -10560					; size = 4
tv6610 = -10560						; size = 4
tv6596 = -10560						; size = 4
tv6577 = -10560						; size = 4
tv6563 = -10560						; size = 4
tv6547 = -10560						; size = 4
tv6532 = -10560						; size = 4
tv6518 = -10560						; size = 4
tv6502 = -10560						; size = 4
_buf2$1$ = -10556					; size = 4
_kdf$1$ = -10552					; size = 4
_j$3$ = -10552						; size = 4
_j$2$ = -10552						; size = 4
_evp_md$1$ = -10552					; size = 4
tv6882 = -10552						; size = 4
_j$4$ = -10548						; size = 4
_evp_cipher$1$ = -10548					; size = 4
tv6879 = -10548						; size = 4
_d$1$ = -10544						; size = 8
_secret_size_a$1$ = -10536				; size = 4
_decrypt$1$ = -10536					; size = 4
tv6863 = -10536						; size = 4
tv6859 = -10536						; size = 4
tv6195 = -10536						; size = 4
_multiblock$1$ = -10532					; size = 4
tv6880 = -10532						; size = 4
tv6488 = -10532						; size = 4
_k$1$ = -10528						; size = 4
_pr_header$1$ = -10528					; size = 4
_rsa_num$ = -10524					; size = 4
_kk$2 = -10520						; size = 4
_ecdsasiglen$ = -10516					; size = 4
_buf$1$ = -10512					; size = 4
_p$3 = -10508						; size = 4
_ctx$4 = -10504						; size = 140
_hctx$5 = -10364					; size = 208
_sch$ = -10156						; size = 128
_aes_ks1$ = -10028					; size = 244
_sch2$ = -9784						; size = 128
_sch3$ = -9656						; size = 128
_cast_ks$ = -9528					; size = 132
_seed_ks$ = -9396					; size = 128
_aes_ks3$ = -9268					; size = 244
_aes_ks2$ = -9024					; size = 244
_idea_ks$ = -8780					; size = 216
_camellia_ks1$ = -8564					; size = 280
_camellia_ks2$ = -8284					; size = 280
_camellia_ks3$ = -8004					; size = 280
_rc2_ks$ = -7724					; size = 256
_rc4_ks$ = -7468					; size = 1032
_bf_ks$ = -6436						; size = 4168
_dsa_doit$ = -2268					; size = 12
_dsa_key$ = -2256					; size = 12
_doit$ = -2244						; size = 120
_rsa_doit$ = -2124					; size = 16
_ecdsa_doit$ = -2108					; size = 64
_ecdh_doit$ = -2044					; size = 64
_rsa_key$ = -1980					; size = 16
_ecdh_b$ = -1964					; size = 64
_ecdsa$ = -1900						; size = 64
_ecdh_a$ = -1836					; size = 64
_rsa_c$ = -1772						; size = 32
_c$ = -1740						; size = 600
_iv$ = -1140						; size = 32
_DES_iv$ = -1108					; size = 8
_hmac$ = -1100						; size = 16
_md4$ = -1084						; size = 16
_mdc2$ = -1068						; size = 16
_md5$ = -1052						; size = 16
_rmd160$ = -1036					; size = 20
_sha$ = -1016						; size = 20
_sha256$ = -996						; size = 32
_sha512$ = -964						; size = 64
_whirlpool$ = -900					; size = 64
_md$ = -836						; size = 64
_ecdsasig$ = -772					; size = 256
_secret_a$ = -516					; size = 256
_secret_b$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_speed_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 374
	mov	eax, 10576				; 00002950H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+10576], eax
	push	ebx
	mov	ebx, DWORD PTR _argv$[esp+10576]
; Line 645
	xor	eax, eax
	push	ebp
	push	esi
	push	edi
; Line 658
	push	1200					; 000004b0H
	push	eax
	xorps	xmm0, xmm0
	mov	DWORD PTR _evp_cipher$1$[esp+10600], eax
	push	OFFSET _results
	xor	ebp, ebp
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	xor	edi, edi
	mov	DWORD PTR _evp_md$1$[esp+10604], eax
	xor	esi, esi
	mov	DWORD PTR _decrypt$1$[esp+10604], eax
	mov	DWORD PTR _multiblock$1$[esp+10604], eax
	mov	DWORD PTR _usertime, -1
	call	_memset
; Line 673
	mov	eax, DWORD PTR _bio_err
	xorps	xmm0, xmm0
	add	esp, 12					; 0000000cH
	movq	QWORD PTR _dsa_key$[esp+10592], xmm0
	mov	DWORD PTR _dsa_key$[esp+10600], esi
	movups	XMMWORD PTR _ecdsa$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdsa$[esp+10608], xmm0
	movups	XMMWORD PTR _ecdsa$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdsa$[esp+10640], xmm0
	movups	XMMWORD PTR _ecdh_b$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdh_b$[esp+10608], xmm0
	movups	XMMWORD PTR _ecdh_b$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdh_b$[esp+10640], xmm0
	movups	XMMWORD PTR _ecdh_a$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdh_a$[esp+10608], xmm0
	movups	XMMWORD PTR _ecdh_a$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdh_a$[esp+10640], xmm0
	test	eax, eax
	jne	SHORT $LN311@speed_main
; Line 674
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN311@speed_main
; Line 675
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN311@speed_main:
; Line 677
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN2462@speed_main
; Line 686
	push	686					; 000002aeH
	xorps	xmm0, xmm0
	push	OFFSET ??_C@_0P@MPGKMPDA@?4?2apps?2speed?4c?$AA@
	movups	XMMWORD PTR _rsa_key$[esp+10600], xmm0
	push	8193					; 00002001H
	movups	XMMWORD PTR _rsa_key$[esp+10604], xmm0
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$1$[esp+10592], ebp
	test	ebp, ebp
	jne	SHORT $LN313@speed_main
$LN2476@speed_main:
; Line 687
	push	OFFSET ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 688
	jmp	$LN2462@speed_main
$LN313@speed_main:
; Line 690
	push	690					; 000002b2H
	push	OFFSET ??_C@_0P@MPGKMPDA@?4?2apps?2speed?4c?$AA@
	push	8193					; 00002001H
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf2$1$[esp+10592], edi
	test	edi, edi
	je	SHORT $LN2476@speed_main
; Line 695
	push	600					; 00000258H
	lea	eax, DWORD PTR _c$[esp+10596]
	push	0
	push	eax
	call	_memset
; Line 715
	mov	eax, DWORD PTR _argc$[esp+10600]
	xorps	xmm0, xmm0
	dec	eax
	movq	QWORD PTR _DES_iv$[esp+10604], xmm0
	xor	edi, edi
	movq	QWORD PTR _doit$[esp+10716], xmm0
; Line 716
	add	ebx, 4
	mov	DWORD PTR _dsa_doit$[esp+10604], esi
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dsa_doit$[esp+10596], esi
	mov	DWORD PTR _dsa_doit$[esp+10600], esi
	mov	DWORD PTR _j$1$[esp+10592], edi
	mov	DWORD PTR _argc$[esp+10588], eax
	mov	DWORD PTR _argv$GSCopy$1$[esp+10592], ebx
	movups	XMMWORD PTR _iv$[esp+10592], xmm0
	movups	XMMWORD PTR _iv$[esp+10608], xmm0
	movups	XMMWORD PTR _doit$[esp+10592], xmm0
	movups	XMMWORD PTR _doit$[esp+10608], xmm0
	movups	XMMWORD PTR _doit$[esp+10624], xmm0
	movups	XMMWORD PTR _doit$[esp+10640], xmm0
	movups	XMMWORD PTR _doit$[esp+10656], xmm0
	movups	XMMWORD PTR _doit$[esp+10672], xmm0
	movups	XMMWORD PTR _doit$[esp+10688], xmm0
	movups	XMMWORD PTR _rsa_doit$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdsa_doit$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdsa_doit$[esp+10608], xmm0
	movups	XMMWORD PTR _ecdsa_doit$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdsa_doit$[esp+10640], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10608], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10640], xmm0
; Line 717
	test	eax, eax
	je	$LN2425@speed_main
$LN2467@speed_main:
; Line 718
	jle	$LN329@speed_main
	mov	ecx, DWORD PTR [ebx]
	mov	edx, OFFSET ??_C@_08LCCIJCMB@?9elapsed?$AA@
	mov	eax, ecx
$LL2065@speed_main:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN2066@speed_main
	test	bl, bl
	je	SHORT $LN2067@speed_main
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN2066@speed_main
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL2065@speed_main
$LN2067@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2068@speed_main
$LN2066@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2068@speed_main:
	test	eax, eax
	jne	SHORT $LN315@speed_main
; Line 720
	mov	ebx, DWORD PTR _argv$GSCopy$1$[esp+10592]
	dec	edi
	mov	DWORD PTR _usertime, esi
	jmp	$LN1736@speed_main
$LN315@speed_main:
; Line 722
	mov	edx, OFFSET ??_C@_04HDDHIJHC@?9evp?$AA@
	mov	eax, ecx
$LL2069@speed_main:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN2070@speed_main
	test	bl, bl
	je	SHORT $LN2071@speed_main
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN2070@speed_main
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL2069@speed_main
$LN2071@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2072@speed_main
$LN2070@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2072@speed_main:
	test	eax, eax
	jne	SHORT $LN317@speed_main
; Line 723
	mov	eax, DWORD PTR _argc$[esp+10588]
; Line 724
	mov	ebx, DWORD PTR _argv$GSCopy$1$[esp+10592]
	dec	eax
	add	ebx, 4
	mov	DWORD PTR _argc$[esp+10588], eax
; Line 725
	test	eax, eax
	je	$LN1393@speed_main
; Line 729
	push	DWORD PTR [ebx]
	call	_EVP_get_cipherbyname
	add	esp, 4
	mov	DWORD PTR _evp_cipher$1$[esp+10592], eax
; Line 730
	test	eax, eax
	jne	SHORT $LN321@speed_main
; Line 731
	push	DWORD PTR [ebx]
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR _evp_md$1$[esp+10592], eax
; Line 733
	test	eax, eax
	je	$LN1394@speed_main
$LN321@speed_main:
; Line 738
	mov	DWORD PTR _doit$[esp+10680], 1
	jmp	$LN1736@speed_main
$LN317@speed_main:
; Line 739
	mov	edx, OFFSET ??_C@_08ODIALGEJ@?9decrypt?$AA@
	mov	eax, ecx
	npad	2
$LL2073@speed_main:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN2074@speed_main
	test	bl, bl
	je	SHORT $LN2075@speed_main
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN2074@speed_main
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL2073@speed_main
$LN2075@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2076@speed_main
$LN2074@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2076@speed_main:
	test	eax, eax
	jne	SHORT $LN322@speed_main
; Line 743
	mov	ebx, DWORD PTR _argv$GSCopy$1$[esp+10592]
	dec	edi
	mov	DWORD PTR _decrypt$1$[esp+10592], 1
	jmp	$LN1736@speed_main
$LN322@speed_main:
; Line 745
	mov	edx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, ecx
$LL2077@speed_main:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN2078@speed_main
	test	bl, bl
	je	SHORT $LN2079@speed_main
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN2078@speed_main
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL2077@speed_main
$LN2079@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2080@speed_main
$LN2078@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2080@speed_main:
	test	eax, eax
	jne	SHORT $LN324@speed_main
; Line 746
	mov	eax, DWORD PTR _argc$[esp+10588]
; Line 747
	mov	ebx, DWORD PTR _argv$GSCopy$1$[esp+10592]
	dec	eax
	add	ebx, 4
	mov	DWORD PTR _argc$[esp+10588], eax
; Line 748
	test	eax, eax
	je	$LN1395@speed_main
; Line 752
	push	0
	push	DWORD PTR [ebx]
	push	DWORD PTR _bio_err
	call	_setup_engine
	add	esp, 12					; 0000000cH
; Line 758
	dec	edi
; Line 759
	jmp	$LN1736@speed_main
$LN324@speed_main:
; Line 778
	mov	edx, OFFSET ??_C@_03NBOFBEAH@?9mr?$AA@
	mov	eax, ecx
$LL2081@speed_main:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN2082@speed_main
	test	bl, bl
	je	SHORT $LN2083@speed_main
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN2082@speed_main
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL2081@speed_main
$LN2083@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2084@speed_main
$LN2082@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2084@speed_main:
	test	eax, eax
	jne	SHORT $LN327@speed_main
; Line 780
	mov	ebx, DWORD PTR _argv$GSCopy$1$[esp+10592]
	dec	edi
	mov	DWORD PTR _mr, 1
	jmp	$LN1736@speed_main
$LN327@speed_main:
; Line 782
	mov	eax, OFFSET ??_C@_03JLCHAGFG@?9mb?$AA@
	npad	6
$LL2085@speed_main:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN2086@speed_main
	test	dl, dl
	je	SHORT $LN2087@speed_main
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN2086@speed_main
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL2085@speed_main
$LN2087@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2088@speed_main
$LN2086@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2088@speed_main:
; Line 785
	mov	ebx, DWORD PTR _argv$GSCopy$1$[esp+10592]
	test	eax, eax
	jne	SHORT $LN329@speed_main
; Line 784
	mov	DWORD PTR _multiblock$1$[esp+10592], 1
	dec	edi
; Line 785
	jmp	$LN1736@speed_main
$LN329@speed_main:
; Line 792
	mov	edi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_04ELNKPKEC@mdc2?$AA@
	mov	eax, edi
$LL2089@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2090@speed_main
	test	dl, dl
	je	SHORT $LN2091@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2090@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2089@speed_main
$LN2091@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2092@speed_main
$LN2090@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2092@speed_main:
	test	eax, eax
	jne	SHORT $LN331@speed_main
; Line 793
	mov	DWORD PTR _doit$[esp+10596], 1
	jmp	$LN2466@speed_main
$LN331@speed_main:
; Line 797
	mov	ecx, OFFSET ??_C@_03ODADJPDG@md4?$AA@
	mov	eax, edi
$LL2093@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2094@speed_main
	test	dl, dl
	je	SHORT $LN2095@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2094@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2093@speed_main
$LN2095@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2096@speed_main
$LN2094@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2096@speed_main:
	test	eax, eax
	jne	SHORT $LN333@speed_main
; Line 798
	mov	DWORD PTR _doit$[esp+10600], 1
	jmp	$LN2466@speed_main
$LN333@speed_main:
; Line 802
	mov	ecx, OFFSET ??_C@_03PKBIKOHH@md5?$AA@
	mov	eax, edi
$LL2097@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2098@speed_main
	test	dl, dl
	je	SHORT $LN2099@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2098@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2097@speed_main
$LN2099@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2100@speed_main
$LN2098@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2100@speed_main:
	test	eax, eax
	jne	SHORT $LN335@speed_main
; Line 803
	mov	DWORD PTR _doit$[esp+10604], 1
	jmp	$LN2466@speed_main
$LN335@speed_main:
; Line 807
	mov	ecx, OFFSET ??_C@_04FOBGICMD@hmac?$AA@
	mov	eax, edi
$LL2101@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2102@speed_main
	test	dl, dl
	je	SHORT $LN2103@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2102@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2101@speed_main
$LN2103@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2104@speed_main
$LN2102@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2104@speed_main:
	test	eax, eax
	jne	SHORT $LN337@speed_main
; Line 808
	mov	DWORD PTR _doit$[esp+10608], 1
	jmp	$LN2466@speed_main
$LN337@speed_main:
; Line 812
	mov	ecx, OFFSET ??_C@_04PGHFOLLE@sha1?$AA@
	mov	eax, edi
$LL2105@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2106@speed_main
	test	dl, dl
	je	SHORT $LN2107@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2106@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2105@speed_main
$LN2107@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2108@speed_main
$LN2106@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2108@speed_main:
	test	eax, eax
	jne	SHORT $LN339@speed_main
; Line 813
	mov	DWORD PTR _doit$[esp+10612], 1
	jmp	$LN2466@speed_main
$LN339@speed_main:
; Line 814
	mov	ecx, OFFSET ??_C@_03JNBDOPOP@sha?$AA@
	mov	eax, edi
$LL2109@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2110@speed_main
	test	dl, dl
	je	SHORT $LN2111@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2110@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2109@speed_main
$LN2111@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2112@speed_main
$LN2110@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2112@speed_main:
	test	eax, eax
	jne	SHORT $LN341@speed_main
; Line 815
	mov	DWORD PTR _doit$[esp+10612], 1
	mov	DWORD PTR _doit$[esp+10684], 1
	mov	DWORD PTR _doit$[esp+10688], 1
	jmp	$LN2466@speed_main
$LN341@speed_main:
; Line 818
	mov	ecx, OFFSET ??_C@_06OHILPNJ@sha256?$AA@
	mov	eax, edi
	npad	6
$LL2113@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2114@speed_main
	test	dl, dl
	je	SHORT $LN2115@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2114@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2113@speed_main
$LN2115@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2116@speed_main
$LN2114@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2116@speed_main:
	test	eax, eax
	jne	SHORT $LN343@speed_main
; Line 819
	mov	DWORD PTR _doit$[esp+10684], 1
	jmp	$LN2466@speed_main
$LN343@speed_main:
; Line 823
	mov	ecx, OFFSET ??_C@_06PAMKOKLI@sha512?$AA@
	mov	eax, edi
$LL2117@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2118@speed_main
	test	dl, dl
	je	SHORT $LN2119@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2118@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2117@speed_main
$LN2119@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2120@speed_main
$LN2118@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2120@speed_main:
	test	eax, eax
	jne	SHORT $LN345@speed_main
; Line 824
	mov	DWORD PTR _doit$[esp+10688], 1
	jmp	$LN2466@speed_main
$LN345@speed_main:
; Line 829
	mov	ecx, OFFSET ??_C@_09DEGKDAEL@whirlpool?$AA@
	mov	eax, edi
$LL2121@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2122@speed_main
	test	dl, dl
	je	SHORT $LN2123@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2122@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2121@speed_main
$LN2123@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2124@speed_main
$LN2122@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2124@speed_main:
	test	eax, eax
	jne	SHORT $LN347@speed_main
; Line 830
	mov	DWORD PTR _doit$[esp+10692], 1
	jmp	$LN2466@speed_main
$LN347@speed_main:
; Line 834
	mov	ecx, OFFSET ??_C@_06ICCLKODP@ripemd?$AA@
	mov	eax, edi
$LL2125@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2126@speed_main
	test	dl, dl
	je	SHORT $LN2127@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2126@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2125@speed_main
$LN2127@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2128@speed_main
$LN2126@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2128@speed_main:
	test	eax, eax
	jne	SHORT $LN349@speed_main
; Line 835
	mov	DWORD PTR _doit$[esp+10616], 1
	jmp	$LN2466@speed_main
$LN349@speed_main:
; Line 836
	mov	ecx, OFFSET ??_C@_06HGILBMJP@rmd160?$AA@
	mov	eax, edi
$LL2129@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2130@speed_main
	test	dl, dl
	je	SHORT $LN2131@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2130@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2129@speed_main
$LN2131@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2132@speed_main
$LN2130@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2132@speed_main:
	test	eax, eax
	jne	SHORT $LN351@speed_main
; Line 837
	mov	DWORD PTR _doit$[esp+10616], 1
	jmp	$LN2466@speed_main
$LN351@speed_main:
; Line 838
	mov	ecx, OFFSET ??_C@_09EDIPKBN@ripemd160?$AA@
	mov	eax, edi
$LL2133@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2134@speed_main
	test	dl, dl
	je	SHORT $LN2135@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2134@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2133@speed_main
$LN2135@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2136@speed_main
$LN2134@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2136@speed_main:
	test	eax, eax
	jne	SHORT $LN353@speed_main
; Line 839
	mov	DWORD PTR _doit$[esp+10616], 1
	jmp	$LN2466@speed_main
$LN353@speed_main:
; Line 843
	mov	ecx, OFFSET ??_C@_03OODGMOHK@rc4?$AA@
	mov	eax, edi
$LL2137@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2138@speed_main
	test	dl, dl
	je	SHORT $LN2139@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2138@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2137@speed_main
$LN2139@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2140@speed_main
$LN2138@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2140@speed_main:
	test	eax, eax
	jne	SHORT $LN355@speed_main
; Line 844
	mov	DWORD PTR _doit$[esp+10620], 1
	jmp	$LN2466@speed_main
$LN355@speed_main:
; Line 848
	mov	ecx, OFFSET ??_C@_07IPAFAGII@des?9cbc?$AA@
	mov	eax, edi
$LL2141@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2142@speed_main
	test	dl, dl
	je	SHORT $LN2143@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2142@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2141@speed_main
$LN2143@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2144@speed_main
$LN2142@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2144@speed_main:
	test	eax, eax
	jne	SHORT $LN357@speed_main
; Line 849
	mov	DWORD PTR _doit$[esp+10624], 1
	jmp	$LN2466@speed_main
$LN357@speed_main:
; Line 850
	mov	ecx, OFFSET ??_C@_08LJCBLNOK@des?9ede3?$AA@
	mov	eax, edi
$LL2145@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2146@speed_main
	test	dl, dl
	je	SHORT $LN2147@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2146@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2145@speed_main
$LN2147@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2148@speed_main
$LN2146@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2148@speed_main:
	test	eax, eax
	jne	SHORT $LN359@speed_main
; Line 851
	mov	DWORD PTR _doit$[esp+10628], 1
	jmp	$LN2466@speed_main
$LN359@speed_main:
; Line 855
	mov	ecx, OFFSET ??_C@_0M@PDGNIOMI@aes?9128?9cbc?$AA@
	mov	eax, edi
$LL2149@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2150@speed_main
	test	dl, dl
	je	SHORT $LN2151@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2150@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2149@speed_main
$LN2151@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2152@speed_main
$LN2150@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2152@speed_main:
	test	eax, eax
	jne	SHORT $LN361@speed_main
; Line 856
	mov	DWORD PTR _doit$[esp+10656], 1
	jmp	$LN2466@speed_main
$LN361@speed_main:
; Line 857
	mov	ecx, OFFSET ??_C@_0M@FAPBPJFE@aes?9192?9cbc?$AA@
	mov	eax, edi
$LL2153@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2154@speed_main
	test	dl, dl
	je	SHORT $LN2155@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2154@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2153@speed_main
$LN2155@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2156@speed_main
$LN2154@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2156@speed_main:
	test	eax, eax
	jne	SHORT $LN363@speed_main
; Line 858
	mov	DWORD PTR _doit$[esp+10660], 1
	jmp	$LN2466@speed_main
$LN363@speed_main:
; Line 859
	mov	ecx, OFFSET ??_C@_0M@ICEPNGNF@aes?9256?9cbc?$AA@
	mov	eax, edi
$LL2157@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2158@speed_main
	test	dl, dl
	je	SHORT $LN2159@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2158@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2157@speed_main
$LN2159@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2160@speed_main
$LN2158@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2160@speed_main:
	test	eax, eax
	jne	SHORT $LN365@speed_main
; Line 860
	mov	DWORD PTR _doit$[esp+10664], 1
	jmp	$LN2466@speed_main
$LN365@speed_main:
; Line 861
	mov	ecx, OFFSET ??_C@_0M@MMEBALMB@aes?9128?9ige?$AA@
	mov	eax, edi
$LL2161@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2162@speed_main
	test	dl, dl
	je	SHORT $LN2163@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2162@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2161@speed_main
$LN2163@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2164@speed_main
$LN2162@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2164@speed_main:
	test	eax, eax
	jne	SHORT $LN367@speed_main
; Line 862
	mov	DWORD PTR _doit$[esp+10696], 1
	jmp	$LN2466@speed_main
$LN367@speed_main:
; Line 863
	mov	ecx, OFFSET ??_C@_0M@GPNNHMFN@aes?9192?9ige?$AA@
	mov	eax, edi
$LL2165@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2166@speed_main
	test	dl, dl
	je	SHORT $LN2167@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2166@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2165@speed_main
$LN2167@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2168@speed_main
$LN2166@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2168@speed_main:
	test	eax, eax
	jne	SHORT $LN369@speed_main
; Line 864
	mov	DWORD PTR _doit$[esp+10700], 1
	jmp	$LN2466@speed_main
$LN369@speed_main:
; Line 865
	mov	ecx, OFFSET ??_C@_0M@LNGDFDNM@aes?9256?9ige?$AA@
	mov	eax, edi
$LL2169@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2170@speed_main
	test	dl, dl
	je	SHORT $LN2171@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2170@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2169@speed_main
$LN2171@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2172@speed_main
$LN2170@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2172@speed_main:
	test	eax, eax
	jne	SHORT $LN371@speed_main
; Line 866
	mov	DWORD PTR _doit$[esp+10704], 1
	jmp	$LN2466@speed_main
$LN371@speed_main:
; Line 870
	mov	ecx, OFFSET ??_C@_0BB@GDOINOHE@camellia?9128?9cbc?$AA@
	mov	eax, edi
$LL2173@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2174@speed_main
	test	dl, dl
	je	SHORT $LN2175@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2174@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2173@speed_main
$LN2175@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2176@speed_main
$LN2174@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2176@speed_main:
	test	eax, eax
	jne	SHORT $LN373@speed_main
; Line 871
	mov	DWORD PTR _doit$[esp+10668], 1
	jmp	$LN2466@speed_main
$LN373@speed_main:
; Line 872
	mov	ecx, OFFSET ??_C@_0BB@MAHEKJOI@camellia?9192?9cbc?$AA@
	mov	eax, edi
$LL2177@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2178@speed_main
	test	dl, dl
	je	SHORT $LN2179@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2178@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2177@speed_main
$LN2179@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2180@speed_main
$LN2178@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2180@speed_main:
	test	eax, eax
	jne	SHORT $LN375@speed_main
; Line 873
	mov	DWORD PTR _doit$[esp+10672], 1
	jmp	$LN2466@speed_main
$LN375@speed_main:
; Line 874
	mov	ecx, OFFSET ??_C@_0BB@BCMKIGGJ@camellia?9256?9cbc?$AA@
	mov	eax, edi
$LL2181@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2182@speed_main
	test	dl, dl
	je	SHORT $LN2183@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2182@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2181@speed_main
$LN2183@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2184@speed_main
$LN2182@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2184@speed_main:
	test	eax, eax
	jne	SHORT $LN377@speed_main
; Line 875
	mov	DWORD PTR _doit$[esp+10676], 1
	jmp	$LN2466@speed_main
$LN377@speed_main:
; Line 886
	mov	ecx, OFFSET ??_C@_07OHDAOILP@openssl?$AA@
	mov	eax, edi
$LL2185@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2186@speed_main
	test	dl, dl
	je	SHORT $LN2187@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2186@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2185@speed_main
$LN2187@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2188@speed_main
$LN2186@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2188@speed_main:
	test	eax, eax
	jne	SHORT $LN379@speed_main
; Line 887
	call	_RSA_PKCS1_SSLeay
	push	eax
	call	_RSA_set_default_method
; Line 888
	mov	edi, DWORD PTR _j$1$[esp+10596]
	add	esp, 4
	dec	edi
; Line 889
	jmp	$LN1736@speed_main
$LN379@speed_main:
; Line 892
	mov	ecx, OFFSET ??_C@_06DLKCLKKA@dsa512?$AA@
	mov	eax, edi
$LL2189@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2190@speed_main
	test	dl, dl
	je	SHORT $LN2191@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2190@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2189@speed_main
$LN2191@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2192@speed_main
$LN2190@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2192@speed_main:
	test	eax, eax
	jne	SHORT $LN381@speed_main
; Line 893
	mov	DWORD PTR _dsa_doit$[esp+10592], 2
	jmp	$LN2466@speed_main
$LN381@speed_main:
; Line 894
	mov	ecx, OFFSET ??_C@_07CAPLDDAA@dsa1024?$AA@
	mov	eax, edi
$LL2193@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2194@speed_main
	test	dl, dl
	je	SHORT $LN2195@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2194@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2193@speed_main
$LN2195@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2196@speed_main
$LN2194@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2196@speed_main:
	test	eax, eax
	jne	SHORT $LN383@speed_main
; Line 895
	mov	DWORD PTR _dsa_doit$[esp+10596], 2
	jmp	$LN2466@speed_main
$LN383@speed_main:
; Line 896
	mov	ecx, OFFSET ??_C@_07MPGDHKGO@dsa2048?$AA@
	mov	eax, edi
$LL2197@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2198@speed_main
	test	dl, dl
	je	SHORT $LN2199@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2198@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2197@speed_main
$LN2199@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2200@speed_main
$LN2198@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2200@speed_main:
	test	eax, eax
	jne	SHORT $LN385@speed_main
; Line 897
	mov	DWORD PTR _dsa_doit$[esp+10600], 2
	jmp	$LN2466@speed_main
$LN385@speed_main:
; Line 898
	mov	ecx, OFFSET ??_C@_06DPKMBDFE@rsa512?$AA@
	mov	eax, edi
$LL2201@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2202@speed_main
	test	dl, dl
	je	SHORT $LN2203@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2202@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2201@speed_main
$LN2203@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2204@speed_main
$LN2202@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2204@speed_main:
	test	eax, eax
	jne	SHORT $LN387@speed_main
; Line 899
	mov	DWORD PTR _rsa_doit$[esp+10592], 2
	jmp	$LN2466@speed_main
$LN387@speed_main:
; Line 900
	mov	ecx, OFFSET ??_C@_07JKCPALKM@rsa1024?$AA@
	mov	eax, edi
$LL2205@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2206@speed_main
	test	dl, dl
	je	SHORT $LN2207@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2206@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2205@speed_main
$LN2207@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2208@speed_main
$LN2206@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2208@speed_main:
	test	eax, eax
	jne	SHORT $LN389@speed_main
; Line 901
	mov	DWORD PTR _rsa_doit$[esp+10596], 2
	jmp	$LN2466@speed_main
$LN389@speed_main:
; Line 902
	mov	ecx, OFFSET ??_C@_07HFLHECMC@rsa2048?$AA@
	mov	eax, edi
$LL2209@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2210@speed_main
	test	dl, dl
	je	SHORT $LN2211@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2210@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2209@speed_main
$LN2211@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2212@speed_main
$LN2210@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2212@speed_main:
	test	eax, eax
	jne	SHORT $LN391@speed_main
; Line 903
	mov	DWORD PTR _rsa_doit$[esp+10600], 2
	jmp	$LN2466@speed_main
$LN391@speed_main:
; Line 904
	mov	ecx, OFFSET ??_C@_07GMKMAJLP@rsa4096?$AA@
	mov	eax, edi
$LL2213@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2214@speed_main
	test	dl, dl
	je	SHORT $LN2215@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2214@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2213@speed_main
$LN2215@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2216@speed_main
$LN2214@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2216@speed_main:
	test	eax, eax
	jne	SHORT $LN393@speed_main
; Line 905
	mov	DWORD PTR _rsa_doit$[esp+10604], 2
	jmp	$LN2466@speed_main
$LN393@speed_main:
; Line 908
	mov	ecx, OFFSET ??_C@_07JCAFNCNH@rc2?9cbc?$AA@
	mov	eax, edi
$LL2217@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2218@speed_main
	test	dl, dl
	je	SHORT $LN2219@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2218@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2217@speed_main
$LN2219@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2220@speed_main
$LN2218@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2220@speed_main:
	test	eax, eax
	jne	SHORT $LN395@speed_main
; Line 909
	mov	DWORD PTR _doit$[esp+10640], 1
	jmp	$LN2466@speed_main
$LN395@speed_main:
; Line 910
	mov	ecx, OFFSET ??_C@_03LIGMGJPM@rc2?$AA@
	mov	eax, edi
$LL2221@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2222@speed_main
	test	dl, dl
	je	SHORT $LN2223@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2222@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2221@speed_main
$LN2223@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2224@speed_main
$LN2222@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2224@speed_main:
	test	eax, eax
	jne	SHORT $LN397@speed_main
; Line 911
	mov	DWORD PTR _doit$[esp+10640], 1
	jmp	$LN2466@speed_main
$LN397@speed_main:
; Line 922
	mov	ecx, OFFSET ??_C@_08LCPAFJCA@idea?9cbc?$AA@
	mov	eax, edi
$LL2225@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2226@speed_main
	test	dl, dl
	je	SHORT $LN2227@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2226@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2225@speed_main
$LN2227@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2228@speed_main
$LN2226@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2228@speed_main:
	test	eax, eax
	jne	SHORT $LN399@speed_main
; Line 923
	mov	DWORD PTR _doit$[esp+10632], 1
	jmp	$LN2466@speed_main
$LN399@speed_main:
; Line 924
	mov	ecx, OFFSET ??_C@_04CLEBCOKH@idea?$AA@
	mov	eax, edi
$LL2229@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2230@speed_main
	test	dl, dl
	je	SHORT $LN2231@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2230@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2229@speed_main
$LN2231@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2232@speed_main
$LN2230@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2232@speed_main:
	test	eax, eax
	jne	SHORT $LN401@speed_main
; Line 925
	mov	DWORD PTR _doit$[esp+10632], 1
	jmp	$LN2466@speed_main
$LN401@speed_main:
; Line 929
	mov	ecx, OFFSET ??_C@_08BHHJAAOC@seed?9cbc?$AA@
	mov	eax, edi
$LL2233@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2234@speed_main
	test	dl, dl
	je	SHORT $LN2235@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2234@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2233@speed_main
$LN2235@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2236@speed_main
$LN2234@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2236@speed_main:
	test	eax, eax
	jne	SHORT $LN403@speed_main
; Line 930
	mov	DWORD PTR _doit$[esp+10636], 1
	jmp	$LN2466@speed_main
$LN403@speed_main:
; Line 931
	mov	ecx, OFFSET ??_C@_04MENKDCKE@seed?$AA@
	mov	eax, edi
$LL2237@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN2238@speed_main
	test	dl, dl
	je	SHORT $LN2239@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2238@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2237@speed_main
$LN2239@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2240@speed_main
$LN2238@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2240@speed_main:
	test	eax, eax
	jne	SHORT $LN405@speed_main
; Line 932
	mov	DWORD PTR _doit$[esp+10636], 1
	jmp	$LN2466@speed_main
$LN405@speed_main:
; Line 936
	mov	ecx, OFFSET ??_C@_06LFFGAFHI@bf?9cbc?$AA@
	mov	eax, edi
	npad	8
$LL2241@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2242@speed_main
	test	dl, dl
	je	SHORT $LN2243@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2242@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2241@speed_main
$LN2243@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2244@speed_main
$LN2242@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2244@speed_main:
	test	eax, eax
	jne	SHORT $LN407@speed_main
; Line 937
	mov	DWORD PTR _doit$[esp+10648], 1
	jmp	$LN2466@speed_main
$LN407@speed_main:
; Line 938
	mov	ecx, OFFSET ??_C@_08CMDBPLDA@blowfish?$AA@
	mov	eax, edi
$LL2245@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2246@speed_main
	test	dl, dl
	je	SHORT $LN2247@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2246@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2245@speed_main
$LN2247@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2248@speed_main
$LN2246@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2248@speed_main:
	test	eax, eax
	jne	SHORT $LN409@speed_main
; Line 939
	mov	DWORD PTR _doit$[esp+10648], 1
	jmp	$LN2466@speed_main
$LN409@speed_main:
; Line 940
	mov	ecx, OFFSET ??_C@_02HIEKPFIC@bf?$AA@
	mov	eax, edi
	npad	8
$LL2249@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2250@speed_main
	test	dl, dl
	je	SHORT $LN2251@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2250@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2249@speed_main
$LN2251@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2252@speed_main
$LN2250@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2252@speed_main:
	test	eax, eax
	jne	SHORT $LN411@speed_main
; Line 941
	mov	DWORD PTR _doit$[esp+10648], 1
	jmp	$LN2466@speed_main
$LN411@speed_main:
; Line 945
	mov	ecx, OFFSET ??_C@_08DICLOHAG@cast?9cbc?$AA@
	mov	eax, edi
$LL2253@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2254@speed_main
	test	dl, dl
	je	SHORT $LN2255@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2254@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2253@speed_main
$LN2255@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2256@speed_main
$LN2254@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2256@speed_main:
	test	eax, eax
	jne	SHORT $LN413@speed_main
; Line 946
	mov	DWORD PTR _doit$[esp+10652], 1
	jmp	$LN2466@speed_main
$LN413@speed_main:
; Line 947
	mov	ecx, OFFSET ??_C@_04HJDBPPOC@cast?$AA@
	mov	eax, edi
	npad	8
$LL2257@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2258@speed_main
	test	dl, dl
	je	SHORT $LN2259@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2258@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2257@speed_main
$LN2259@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2260@speed_main
$LN2258@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2260@speed_main:
	test	eax, eax
	jne	SHORT $LN415@speed_main
; Line 948
	mov	DWORD PTR _doit$[esp+10652], 1
	jmp	$LN2466@speed_main
$LN415@speed_main:
; Line 949
	mov	ecx, OFFSET ??_C@_05OMEMHABN@cast5?$AA@
	mov	eax, edi
$LL2261@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2262@speed_main
	test	dl, dl
	je	$LN2263@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2262@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2261@speed_main
$LN2263@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2264@speed_main
$LN2262@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2264@speed_main:
	test	eax, eax
	jne	SHORT $LN417@speed_main
; Line 950
	mov	DWORD PTR _doit$[esp+10652], 1
	jmp	$LN2466@speed_main
$LN417@speed_main:
; Line 954
	mov	ecx, OFFSET ??_C@_03CAPBGDEJ@des?$AA@
	mov	eax, edi
	npad	4
$LL2265@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2266@speed_main
	test	dl, dl
	je	SHORT $LN2267@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2266@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2265@speed_main
$LN2267@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2268@speed_main
$LN2266@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2268@speed_main:
	test	eax, eax
	jne	$LN419@speed_main
; Line 955
	mov	DWORD PTR _doit$[esp+10624], 1
; Line 956
	mov	DWORD PTR _doit$[esp+10628], 1
; Line 957
	jmp	$LN2466@speed_main
$LN419@speed_main:
; Line 960
	mov	ecx, OFFSET ??_C@_03BHCPJDHL@aes?$AA@
	mov	eax, edi
$LL2269@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2270@speed_main
	test	dl, dl
	je	SHORT $LN2271@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2270@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2269@speed_main
$LN2271@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2272@speed_main
$LN2270@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2272@speed_main:
	test	eax, eax
	jne	$LN421@speed_main
; Line 961
	mov	DWORD PTR _doit$[esp+10656], 1
; Line 962
	mov	DWORD PTR _doit$[esp+10660], 1
; Line 963
	mov	DWORD PTR _doit$[esp+10664], 1
	jmp	$LN2466@speed_main
$LN421@speed_main:
; Line 964
	mov	ecx, OFFSET ??_C@_05IKIHPKPC@ghash?$AA@
	mov	eax, edi
$LL2273@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2274@speed_main
	test	dl, dl
	je	$LN2275@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2274@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2273@speed_main
$LN2275@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2276@speed_main
$LN2274@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2276@speed_main:
	test	eax, eax
	jne	SHORT $LN423@speed_main
; Line 965
	mov	DWORD PTR _doit$[esp+10708], 1
; Line 966
	jmp	$LN2466@speed_main
$LN423@speed_main:
; Line 969
	mov	ecx, OFFSET ??_C@_08MENDDNGH@camellia?$AA@
	mov	eax, edi
	npad	3
$LL2277@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2278@speed_main
	test	dl, dl
	je	$LN2279@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2278@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2277@speed_main
$LN2279@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2280@speed_main
$LN2278@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2280@speed_main:
	test	eax, eax
	jne	$LN425@speed_main
; Line 970
	mov	DWORD PTR _doit$[esp+10668], 1
; Line 971
	mov	DWORD PTR _doit$[esp+10672], 1
; Line 972
	mov	DWORD PTR _doit$[esp+10676], 1
; Line 973
	jmp	$LN2466@speed_main
$LN425@speed_main:
; Line 976
	mov	ecx, OFFSET ??_C@_03DFNMMEBL@rsa?$AA@
	mov	eax, edi
$LL2281@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2282@speed_main
	test	dl, dl
	je	$LN2283@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2282@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2281@speed_main
$LN2283@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2284@speed_main
$LN2282@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2284@speed_main:
	test	eax, eax
	jne	$LN427@speed_main
; Line 977
	movaps	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR _rsa_doit$[esp+10592], xmm0
; Line 981
	jmp	$LN2466@speed_main
$LN427@speed_main:
; Line 984
	mov	ecx, OFFSET ??_C@_03EAKOMMFI@dsa?$AA@
	mov	eax, edi
	npad	6
$LL2285@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2286@speed_main
	test	dl, dl
	je	SHORT $LN2287@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2286@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2285@speed_main
$LN2287@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2288@speed_main
$LN2286@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2288@speed_main:
	test	eax, eax
	jne	$LN429@speed_main
; Line 985
	mov	DWORD PTR _dsa_doit$[esp+10592], 1
; Line 986
	mov	DWORD PTR _dsa_doit$[esp+10596], 1
; Line 987
	mov	DWORD PTR _dsa_doit$[esp+10600], 1
; Line 988
	jmp	$LN2466@speed_main
$LN429@speed_main:
; Line 991
	mov	ecx, OFFSET ??_C@_09EKDJINAO@ecdsap160?$AA@
	mov	eax, edi
	npad	2
$LL2289@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2290@speed_main
	test	dl, dl
	je	SHORT $LN2291@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2290@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2289@speed_main
$LN2291@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2292@speed_main
$LN2290@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2292@speed_main:
	test	eax, eax
	jne	SHORT $LN431@speed_main
; Line 992
	mov	DWORD PTR _ecdsa_doit$[esp+10592], 2
	jmp	$LN2466@speed_main
$LN431@speed_main:
; Line 993
	mov	ecx, OFFSET ??_C@_09HDFDKILB@ecdsap192?$AA@
	mov	eax, edi
$LL2293@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2294@speed_main
	test	dl, dl
	je	SHORT $LN2295@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2294@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2293@speed_main
$LN2295@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2296@speed_main
$LN2294@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2296@speed_main:
	test	eax, eax
	jne	SHORT $LN433@speed_main
; Line 994
	mov	DWORD PTR _ecdsa_doit$[esp+10596], 2
	jmp	$LN2466@speed_main
$LN433@speed_main:
; Line 995
	mov	ecx, OFFSET ??_C@_09DLOJEPDI@ecdsap224?$AA@
	mov	eax, edi
	npad	8
$LL2297@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2298@speed_main
	test	dl, dl
	je	SHORT $LN2299@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2298@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2297@speed_main
$LN2299@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2300@speed_main
$LN2298@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2300@speed_main:
	test	eax, eax
	jne	SHORT $LN435@speed_main
; Line 996
	mov	DWORD PTR _ecdsa_doit$[esp+10600], 2
	jmp	$LN2466@speed_main
$LN435@speed_main:
; Line 997
	mov	ecx, OFFSET ??_C@_09MJADLDP@ecdsap256?$AA@
	mov	eax, edi
$LL2301@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2302@speed_main
	test	dl, dl
	je	SHORT $LN2303@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2302@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2301@speed_main
$LN2303@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2304@speed_main
$LN2302@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2304@speed_main:
	test	eax, eax
	jne	SHORT $LN437@speed_main
; Line 998
	mov	DWORD PTR _ecdsa_doit$[esp+10604], 2
	jmp	$LN2466@speed_main
$LN437@speed_main:
; Line 999
	mov	ecx, OFFSET ??_C@_09IOMCKNIL@ecdsap384?$AA@
	mov	eax, edi
	npad	8
$LL2305@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2306@speed_main
	test	dl, dl
	je	SHORT $LN2307@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2306@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2305@speed_main
$LN2307@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2308@speed_main
$LN2306@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2308@speed_main:
	test	eax, eax
	jne	SHORT $LN439@speed_main
; Line 1000
	mov	DWORD PTR _ecdsa_doit$[esp+10608], 2
	jmp	$LN2466@speed_main
$LN439@speed_main:
; Line 1001
	mov	ecx, OFFSET ??_C@_09NLEJIDME@ecdsap521?$AA@
	mov	eax, edi
$LL2309@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2310@speed_main
	test	dl, dl
	je	$LN2311@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2310@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2309@speed_main
$LN2311@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2312@speed_main
$LN2310@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2312@speed_main:
	test	eax, eax
	jne	SHORT $LN441@speed_main
; Line 1002
	mov	DWORD PTR _ecdsa_doit$[esp+10612], 2
	jmp	$LN2466@speed_main
$LN441@speed_main:
; Line 1003
	mov	ecx, OFFSET ??_C@_09HGCEHIFO@ecdsak163?$AA@
	mov	eax, edi
	npad	4
$LL2313@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2314@speed_main
	test	dl, dl
	je	$LN2315@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN2314@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2313@speed_main
$LN2315@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2316@speed_main
$LN2314@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2316@speed_main:
	test	eax, eax
	jne	SHORT $LN443@speed_main
; Line 1004
	mov	DWORD PTR _ecdsa_doit$[esp+10616], 2
	jmp	$LN2466@speed_main
$LN443@speed_main:
; Line 1005
	mov	ecx, OFFSET ??_C@_09GCFKBFFL@ecdsak233?$AA@
	mov	eax, edi
	npad	8
$LL2317@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2318@speed_main
	test	dl, dl
	je	$LN2319@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2318@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2317@speed_main
$LN2319@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2320@speed_main
$LN2318@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2320@speed_main:
	test	eax, eax
	jne	$LN445@speed_main
; Line 1006
	mov	DWORD PTR _ecdsa_doit$[esp+10620], 2
	jmp	$LN2466@speed_main
$LN445@speed_main:
; Line 1007
	mov	ecx, OFFSET ??_C@_09GOAPPKLK@ecdsak283?$AA@
	mov	eax, edi
$LL2321@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2322@speed_main
	test	dl, dl
	je	$LN2323@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2322@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2321@speed_main
$LN2323@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2324@speed_main
$LN2322@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2324@speed_main:
	test	eax, eax
	jne	$LN447@speed_main
; Line 1008
	mov	DWORD PTR _ecdsa_doit$[esp+10624], 2
	jmp	$LN2466@speed_main
$LN447@speed_main:
; Line 1009
	mov	ecx, OFFSET ??_C@_09LPJIBMFE@ecdsak409?$AA@
	mov	eax, edi
$LL2325@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2326@speed_main
	test	dl, dl
	je	$LN2327@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2326@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2325@speed_main
$LN2327@speed_main:
	xor	eax, eax
	jmp	SHORT $LN2328@speed_main
$LN2326@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2328@speed_main:
	test	eax, eax
	jne	$LN449@speed_main
; Line 1010
	mov	DWORD PTR _ecdsa_doit$[esp+10628], 2
	jmp	$LN2466@speed_main
$LN449@speed_main:
; Line 1011
	mov	ecx, OFFSET ??_C@_09MKLCOHLM@ecdsak571?$AA@
	mov	eax, edi
$LL2329@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2330@speed_main
	test	dl, dl
	je	$LN2331@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2330@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2329@speed_main
$LN2331@speed_main:
	xor	eax, eax
	jmp	$LN2332@speed_main
$LN2330@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2332@speed_main:
	test	eax, eax
	jne	$LN451@speed_main
; Line 1012
	mov	DWORD PTR _ecdsa_doit$[esp+10632], 2
	jmp	$LN2466@speed_main
$LN451@speed_main:
; Line 1013
	mov	ecx, OFFSET ??_C@_09HLDEBKCP@ecdsab163?$AA@
	mov	eax, edi
$LL2333@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2334@speed_main
	test	dl, dl
	je	$LN2335@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2334@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2333@speed_main
$LN2335@speed_main:
	xor	eax, eax
	jmp	$LN2336@speed_main
$LN2334@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2336@speed_main:
	test	eax, eax
	jne	$LN453@speed_main
; Line 1014
	mov	DWORD PTR _ecdsa_doit$[esp+10636], 2
	jmp	$LN2466@speed_main
$LN453@speed_main:
; Line 1015
	mov	ecx, OFFSET ??_C@_09GPEKHHCK@ecdsab233?$AA@
	mov	eax, edi
$LL2337@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2338@speed_main
	test	dl, dl
	je	$LN2339@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2338@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2337@speed_main
$LN2339@speed_main:
	xor	eax, eax
	jmp	$LN2340@speed_main
$LN2338@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2340@speed_main:
	test	eax, eax
	jne	$LN455@speed_main
; Line 1016
	mov	DWORD PTR _ecdsa_doit$[esp+10640], 2
	jmp	$LN2466@speed_main
$LN455@speed_main:
; Line 1017
	mov	ecx, OFFSET ??_C@_09GDBPJIML@ecdsab283?$AA@
	mov	eax, edi
	npad	7
$LL2341@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2342@speed_main
	test	dl, dl
	je	$LN2343@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2342@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2341@speed_main
$LN2343@speed_main:
	xor	eax, eax
	jmp	$LN2344@speed_main
$LN2342@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2344@speed_main:
	test	eax, eax
	jne	$LN457@speed_main
; Line 1018
	mov	DWORD PTR _ecdsa_doit$[esp+10644], 2
	jmp	$LN2466@speed_main
$LN457@speed_main:
; Line 1019
	mov	ecx, OFFSET ??_C@_09LCIIHOCF@ecdsab409?$AA@
	mov	eax, edi
$LL2345@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2346@speed_main
	test	dl, dl
	je	$LN2347@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2346@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2345@speed_main
$LN2347@speed_main:
	xor	eax, eax
	jmp	$LN2348@speed_main
$LN2346@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2348@speed_main:
	test	eax, eax
	jne	$LN459@speed_main
; Line 1020
	mov	DWORD PTR _ecdsa_doit$[esp+10648], 2
	jmp	$LN2466@speed_main
$LN459@speed_main:
; Line 1021
	mov	ecx, OFFSET ??_C@_09MHKCIFMN@ecdsab571?$AA@
	mov	eax, edi
$LL2349@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2350@speed_main
	test	dl, dl
	je	$LN2351@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2350@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2349@speed_main
$LN2351@speed_main:
	xor	eax, eax
	jmp	$LN2352@speed_main
$LN2350@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2352@speed_main:
	test	eax, eax
	jne	$LN461@speed_main
; Line 1022
	mov	DWORD PTR _ecdsa_doit$[esp+10652], 2
	jmp	$LN2466@speed_main
$LN461@speed_main:
; Line 1023
	mov	ecx, OFFSET ??_C@_05FGIDCBJD@ecdsa?$AA@
	mov	eax, edi
	npad	7
$LL2353@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2354@speed_main
	test	dl, dl
	je	$LN2355@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2354@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2353@speed_main
$LN2355@speed_main:
	xor	eax, eax
	jmp	$LN2356@speed_main
$LN2354@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2356@speed_main:
	test	eax, eax
	jne	$LN463@speed_main
; Line 1025
	movaps	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR _ecdsa_doit$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdsa_doit$[esp+10608], xmm0
	movups	XMMWORD PTR _ecdsa_doit$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdsa_doit$[esp+10640], xmm0
; Line 1026
	jmp	$LN2466@speed_main
$LN463@speed_main:
; Line 1029
	mov	ecx, OFFSET ??_C@_08IENNLNPJ@ecdhp160?$AA@
	mov	eax, edi
	npad	1
$LL2357@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2358@speed_main
	test	dl, dl
	je	$LN2359@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2358@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2357@speed_main
$LN2359@speed_main:
	xor	eax, eax
	jmp	$LN2360@speed_main
$LN2358@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2360@speed_main:
	test	eax, eax
	jne	$LN465@speed_main
; Line 1030
	mov	DWORD PTR _ecdh_doit$[esp+10592], 2
	jmp	$LN2466@speed_main
$LN465@speed_main:
; Line 1031
	mov	ecx, OFFSET ??_C@_08LNLHJIEG@ecdhp192?$AA@
	mov	eax, edi
$LL2361@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2362@speed_main
	test	dl, dl
	je	$LN2363@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2362@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2361@speed_main
$LN2363@speed_main:
	xor	eax, eax
	jmp	$LN2364@speed_main
$LN2362@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2364@speed_main:
	test	eax, eax
	jne	$LN467@speed_main
; Line 1032
	mov	DWORD PTR _ecdh_doit$[esp+10596], 2
	jmp	$LN2466@speed_main
$LN467@speed_main:
; Line 1033
	mov	ecx, OFFSET ??_C@_08PFANHPMP@ecdhp224?$AA@
	mov	eax, edi
$LL2365@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2366@speed_main
	test	dl, dl
	je	$LN2367@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2366@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2365@speed_main
$LN2367@speed_main:
	xor	eax, eax
	jmp	$LN2368@speed_main
$LN2366@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2368@speed_main:
	test	eax, eax
	jne	$LN469@speed_main
; Line 1034
	mov	DWORD PTR _ecdh_doit$[esp+10600], 2
	jmp	$LN2466@speed_main
$LN469@speed_main:
; Line 1035
	mov	ecx, OFFSET ??_C@_08MCHEALMI@ecdhp256?$AA@
	mov	eax, edi
	npad	7
$LL2369@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2370@speed_main
	test	dl, dl
	je	$LN2371@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2370@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2369@speed_main
$LN2371@speed_main:
	xor	eax, eax
	jmp	$LN2372@speed_main
$LN2370@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2372@speed_main:
	test	eax, eax
	jne	$LN471@speed_main
; Line 1036
	mov	DWORD PTR _ecdh_doit$[esp+10604], 2
	jmp	$LN2466@speed_main
$LN471@speed_main:
; Line 1037
	mov	ecx, OFFSET ??_C@_08EACGJNHM@ecdhp384?$AA@
	mov	eax, edi
$LL2373@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2374@speed_main
	test	dl, dl
	je	$LN2375@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2374@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2373@speed_main
$LN2375@speed_main:
	xor	eax, eax
	jmp	$LN2376@speed_main
$LN2374@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2376@speed_main:
	test	eax, eax
	jne	$LN473@speed_main
; Line 1038
	mov	DWORD PTR _ecdh_doit$[esp+10608], 2
	jmp	$LN2466@speed_main
$LN473@speed_main:
; Line 1039
	mov	ecx, OFFSET ??_C@_08BFKNLDDD@ecdhp521?$AA@
	mov	eax, edi
$LL2377@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2378@speed_main
	test	dl, dl
	je	$LN2379@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2378@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2377@speed_main
$LN2379@speed_main:
	xor	eax, eax
	jmp	$LN2380@speed_main
$LN2378@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2380@speed_main:
	test	eax, eax
	jne	$LN475@speed_main
; Line 1040
	mov	DWORD PTR _ecdh_doit$[esp+10612], 2
	jmp	$LN2466@speed_main
$LN475@speed_main:
; Line 1041
	mov	ecx, OFFSET ??_C@_08LIMAEIKJ@ecdhk163?$AA@
	mov	eax, edi
	npad	7
$LL2381@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2382@speed_main
	test	dl, dl
	je	$LN2383@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2382@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2381@speed_main
$LN2383@speed_main:
	xor	eax, eax
	jmp	$LN2384@speed_main
$LN2382@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2384@speed_main:
	test	eax, eax
	jne	$LN477@speed_main
; Line 1042
	mov	DWORD PTR _ecdh_doit$[esp+10616], 2
	jmp	$LN2466@speed_main
$LN477@speed_main:
; Line 1043
	mov	ecx, OFFSET ??_C@_08KMLOCFKM@ecdhk233?$AA@
	mov	eax, edi
$LL2385@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2386@speed_main
	test	dl, dl
	je	$LN2387@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2386@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2385@speed_main
$LN2387@speed_main:
	xor	eax, eax
	jmp	$LN2388@speed_main
$LN2386@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2388@speed_main:
	test	eax, eax
	jne	$LN479@speed_main
; Line 1044
	mov	DWORD PTR _ecdh_doit$[esp+10620], 2
	jmp	$LN2466@speed_main
$LN479@speed_main:
; Line 1045
	mov	ecx, OFFSET ??_C@_08KAOLMKEN@ecdhk283?$AA@
	mov	eax, edi
$LL2389@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2390@speed_main
	test	dl, dl
	je	$LN2391@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2390@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2389@speed_main
$LN2391@speed_main:
	xor	eax, eax
	jmp	$LN2392@speed_main
$LN2390@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2392@speed_main:
	test	eax, eax
	jne	$LN481@speed_main
; Line 1046
	mov	DWORD PTR _ecdh_doit$[esp+10624], 2
	jmp	$LN2466@speed_main
$LN481@speed_main:
; Line 1047
	mov	ecx, OFFSET ??_C@_08HBHMCMKD@ecdhk409?$AA@
	mov	eax, edi
	npad	7
$LL2393@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2394@speed_main
	test	dl, dl
	je	$LN2395@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2394@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2393@speed_main
$LN2395@speed_main:
	xor	eax, eax
	jmp	$LN2396@speed_main
$LN2394@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2396@speed_main:
	test	eax, eax
	jne	$LN483@speed_main
; Line 1048
	mov	DWORD PTR _ecdh_doit$[esp+10628], 2
	jmp	$LN2466@speed_main
$LN483@speed_main:
; Line 1049
	mov	ecx, OFFSET ??_C@_08EFGNHEL@ecdhk571?$AA@
	mov	eax, edi
$LL2397@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2398@speed_main
	test	dl, dl
	je	$LN2399@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2398@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2397@speed_main
$LN2399@speed_main:
	xor	eax, eax
	jmp	$LN2400@speed_main
$LN2398@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2400@speed_main:
	test	eax, eax
	jne	$LN485@speed_main
; Line 1050
	mov	DWORD PTR _ecdh_doit$[esp+10632], 2
	jmp	$LN2466@speed_main
$LN485@speed_main:
; Line 1051
	mov	ecx, OFFSET ??_C@_08LFNACKNI@ecdhb163?$AA@
	mov	eax, edi
$LL2401@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2402@speed_main
	test	dl, dl
	je	$LN2403@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2402@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2401@speed_main
$LN2403@speed_main:
	xor	eax, eax
	jmp	$LN2404@speed_main
$LN2402@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2404@speed_main:
	test	eax, eax
	jne	$LN487@speed_main
; Line 1052
	mov	DWORD PTR _ecdh_doit$[esp+10636], 2
	jmp	$LN2466@speed_main
$LN487@speed_main:
; Line 1053
	mov	ecx, OFFSET ??_C@_08KBKOEHNN@ecdhb233?$AA@
	mov	eax, edi
	npad	7
$LL2405@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2406@speed_main
	test	dl, dl
	je	$LN2407@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2406@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2405@speed_main
$LN2407@speed_main:
	xor	eax, eax
	jmp	$LN2408@speed_main
$LN2406@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2408@speed_main:
	test	eax, eax
	jne	$LN489@speed_main
; Line 1054
	mov	DWORD PTR _ecdh_doit$[esp+10640], 2
	jmp	$LN2466@speed_main
$LN489@speed_main:
; Line 1055
	mov	ecx, OFFSET ??_C@_08KNPLKIDM@ecdhb283?$AA@
	mov	eax, edi
$LL2409@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2410@speed_main
	test	dl, dl
	je	$LN2411@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2410@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2409@speed_main
$LN2411@speed_main:
	xor	eax, eax
	jmp	$LN2412@speed_main
$LN2410@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2412@speed_main:
	test	eax, eax
	jne	$LN491@speed_main
; Line 1056
	mov	DWORD PTR _ecdh_doit$[esp+10644], 2
	jmp	$LN2466@speed_main
$LN491@speed_main:
; Line 1057
	mov	ecx, OFFSET ??_C@_08HMGMEONC@ecdhb409?$AA@
	mov	eax, edi
$LL2413@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2414@speed_main
	test	dl, dl
	je	$LN2415@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2414@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2413@speed_main
$LN2415@speed_main:
	xor	eax, eax
	jmp	$LN2416@speed_main
$LN2414@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2416@speed_main:
	test	eax, eax
	jne	$LN493@speed_main
; Line 1058
	mov	DWORD PTR _ecdh_doit$[esp+10648], 2
	jmp	$LN2466@speed_main
$LN493@speed_main:
; Line 1059
	mov	ecx, OFFSET ??_C@_08JEGLFDK@ecdhb571?$AA@
	mov	eax, edi
	npad	7
$LL2417@speed_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN2418@speed_main
	test	dl, dl
	je	$LN2419@speed_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN2418@speed_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL2417@speed_main
$LN2419@speed_main:
	xor	eax, eax
	jmp	$LN2420@speed_main
$LN2418@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2420@speed_main:
	test	eax, eax
	jne	$LN495@speed_main
; Line 1060
	mov	DWORD PTR _ecdh_doit$[esp+10652], 2
	jmp	$LN2466@speed_main
$LN495@speed_main:
; Line 1061
	mov	eax, OFFSET ??_C@_04KDGGCKGB@ecdh?$AA@
$LL2421@speed_main:
	mov	cl, BYTE PTR [edi]
	cmp	cl, BYTE PTR [eax]
	jne	$LN2422@speed_main
	test	cl, cl
	je	$LN2423@speed_main
	mov	cl, BYTE PTR [edi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	$LN2422@speed_main
	add	edi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL2421@speed_main
$LN2423@speed_main:
	xor	eax, eax
	jmp	$LN2424@speed_main
$LN2422@speed_main:
	sbb	eax, eax
	or	eax, 1
$LN2424@speed_main:
	test	eax, eax
	jne	$LN497@speed_main
; Line 1063
	movaps	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR _ecdh_doit$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10608], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10640], xmm0
$LN2466@speed_main:
	mov	edi, DWORD PTR _j$1$[esp+10592]
$LN1736@speed_main:
; Line 1224
	mov	eax, DWORD PTR _argc$[esp+10588]
; Line 1225
	add	ebx, 4
	dec	eax
	mov	DWORD PTR _argv$GSCopy$1$[esp+10592], ebx
; Line 1226
	inc	edi
	mov	DWORD PTR _argc$[esp+10588], eax
	mov	DWORD PTR _j$1$[esp+10592], edi
	test	eax, eax
	jne	$LN2467@speed_main
; Line 1234
	test	edi, edi
	jne	$LN1745@speed_main
$LN2425@speed_main:
; Line 1235
	xor	eax, eax
$LL1738@speed_main:
; Line 1236
	cmp	eax, 22					; 00000016H
	je	$LN1739@speed_main
; Line 1237
	mov	DWORD PTR _doit$[esp+eax*4+10592], 1
$LN1739@speed_main:
; Line 1235
	inc	eax
	cmp	eax, 30					; 0000001eH
	jl	SHORT $LL1738@speed_main
; Line 1242
	movaps	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR _rsa_doit$[esp+10592], xmm0
	mov	DWORD PTR _dsa_doit$[esp+10592], 1
; Line 1245
	movaps	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR _ecdsa_doit$[esp+10592], xmm0
	mov	DWORD PTR _dsa_doit$[esp+10596], 1
	movups	XMMWORD PTR _ecdsa_doit$[esp+10608], xmm0
	mov	DWORD PTR _dsa_doit$[esp+10600], 1
	movups	XMMWORD PTR _ecdsa_doit$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdsa_doit$[esp+10640], xmm0
; Line 1249
	movaps	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR _ecdh_doit$[esp+10592], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10608], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10624], xmm0
	movups	XMMWORD PTR _ecdh_doit$[esp+10640], xmm0
$LN1745@speed_main:
; Line 1252
	movaps	xmm6, XMMWORD PTR __xmm@00000001000000010000000100000001
	lea	ecx, DWORD PTR _doit$[esp+10608]
	mov	edx, 3
	xorps	xmm5, xmm5
	movaps	xmm4, xmm5
	movaps	xmm3, xmm4
	lea	eax, DWORD PTR [edx+21]
	npad	4
$LL51@speed_main:
	lea	ecx, DWORD PTR [ecx+32]
	movaps	xmm0, xmm4
	paddd	xmm0, xmm6
; Line 1253
	movups	xmm2, XMMWORD PTR [ecx-48]
	pcmpeqd	xmm2, xmm5
	movaps	xmm1, xmm2
	pand	xmm4, xmm2
	pandn	xmm1, xmm0
	movaps	xmm0, xmm3
	por	xmm4, xmm1
	paddd	xmm0, xmm6
	movups	xmm2, XMMWORD PTR [ecx-32]
	pcmpeqd	xmm2, xmm5
	movaps	xmm1, xmm2
	pand	xmm3, xmm2
	pandn	xmm1, xmm0
	por	xmm3, xmm1
	sub	edx, 1
	jne	SHORT $LL51@speed_main
	paddd	xmm3, xmm4
	movaps	xmm0, xmm3
	psrldq	xmm0, 8
	paddd	xmm3, xmm0
	movaps	xmm0, xmm3
	psrldq	xmm0, 4
	paddd	xmm3, xmm0
	movd	ecx, xmm3
	npad	12
$LL1747@speed_main:
	cmp	DWORD PTR _doit$[esp+eax*4+10592], esi
	je	$LN1748@speed_main
; Line 1254
	inc	ecx
$LN1748@speed_main:
; Line 1252
	inc	eax
	cmp	eax, 30					; 0000001eH
	jl	SHORT $LL1747@speed_main
; Line 1256
	mov	DWORD PTR _pr_header$1$[esp+10592], ecx
	cmp	DWORD PTR _usertime, esi
	jne	$LN502@speed_main
	cmp	DWORD PTR _mr, esi
	jne	$LN502@speed_main
; Line 1257
	push	OFFSET ??_C@_0ED@CCLFMKOH@You?5have?5chosen?5to?5measure?5elaps@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN502@speed_main:
; Line 1262
	xor	edi, edi
	npad	11
$LL54@speed_main:
; Line 1265
	mov	eax, DWORD PTR ?rsa_data@?1??speed_main@@9@9[edi*4]
; Line 1266
	push	DWORD PTR ?rsa_data_length@?1??speed_main@@9@9[edi*4]
	mov	DWORD PTR _p$3[esp+10596], eax
	lea	eax, DWORD PTR _p$3[esp+10596]
	push	eax
	push	0
	call	_d2i_RSAPrivateKey
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rsa_key$[esp+edi*4+10592], eax
; Line 1267
	test	eax, eax
	je	$LN1396@speed_main
; Line 1262
	inc	edi
	cmp	edi, 4
	jl	SHORT $LL54@speed_main
; Line 1286
	call	_get_dsa512
	mov	DWORD PTR _dsa_key$[esp+10592], eax
; Line 1287
	call	_get_dsa1024
	mov	DWORD PTR _dsa_key$[esp+10596], eax
; Line 1288
	call	_get_dsa2048
	mov	DWORD PTR _dsa_key$[esp+10600], eax
; Line 1292
	lea	eax, DWORD PTR _sch$[esp+10592]
	push	eax
	push	OFFSET ?key@?1??speed_main@@9@9
	call	_DES_set_key_unchecked
; Line 1293
	lea	eax, DWORD PTR _sch2$[esp+10600]
	push	eax
	push	OFFSET ?key2@?1??speed_main@@9@9
	call	_DES_set_key_unchecked
; Line 1294
	lea	eax, DWORD PTR _sch3$[esp+10608]
	push	eax
	push	OFFSET ?key3@?1??speed_main@@9@9
	call	_DES_set_key_unchecked
; Line 1297
	lea	eax, DWORD PTR _aes_ks1$[esp+10616]
	push	eax
	push	128					; 00000080H
	push	OFFSET ?key16@?1??speed_main@@9@9
	call	_AES_set_encrypt_key
; Line 1298
	lea	eax, DWORD PTR _aes_ks2$[esp+10628]
	push	eax
	push	192					; 000000c0H
	push	OFFSET ?key24@?1??speed_main@@9@9
	call	_AES_set_encrypt_key
; Line 1299
	lea	eax, DWORD PTR _aes_ks3$[esp+10640]
	push	eax
	push	256					; 00000100H
	push	OFFSET ?key32@?1??speed_main@@9@9
	call	_AES_set_encrypt_key
; Line 1302
	lea	eax, DWORD PTR _camellia_ks1$[esp+10652]
	push	eax
	push	128					; 00000080H
	push	OFFSET ?key16@?1??speed_main@@9@9
	call	_Camellia_set_key
	add	esp, 72					; 00000048H
; Line 1303
	lea	eax, DWORD PTR _camellia_ks2$[esp+10592]
	push	eax
	push	192					; 000000c0H
	push	OFFSET ?ckey24@?1??speed_main@@9@9
	call	_Camellia_set_key
; Line 1304
	lea	eax, DWORD PTR _camellia_ks3$[esp+10604]
	push	eax
	push	256					; 00000100H
	push	OFFSET ?ckey32@?1??speed_main@@9@9
	call	_Camellia_set_key
; Line 1307
	lea	eax, DWORD PTR _idea_ks$[esp+10616]
	push	eax
	push	OFFSET ?key16@?1??speed_main@@9@9
	call	_idea_set_encrypt_key
; Line 1310
	lea	eax, DWORD PTR _seed_ks$[esp+10624]
	push	eax
	push	OFFSET ?key16@?1??speed_main@@9@9
	call	_SEED_set_key
; Line 1313
	push	OFFSET ?key16@?1??speed_main@@9@9
	lea	eax, DWORD PTR _rc4_ks$[esp+10636]
	push	16					; 00000010H
	push	eax
	call	_RC4_set_key
; Line 1316
	push	128					; 00000080H
	push	OFFSET ?key16@?1??speed_main@@9@9
	lea	eax, DWORD PTR _rc2_ks$[esp+10652]
	push	16					; 00000010H
	push	eax
	call	_RC2_set_key
	add	esp, 68					; 00000044H
; Line 1322
	lea	eax, DWORD PTR _bf_ks$[esp+10592]
	push	OFFSET ?key16@?1??speed_main@@9@9
	push	16					; 00000010H
	push	eax
	call	_BF_set_key
; Line 1325
	push	OFFSET ?key16@?1??speed_main@@9@9
	lea	eax, DWORD PTR _cast_ks$[esp+10608]
	push	16					; 00000010H
	push	eax
	call	_CAST_set_key
	add	esp, 24					; 00000018H
	xorps	xmm0, xmm0
; Line 1562
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	mov	ebx, DWORD PTR __imp__Sleep@4
	movups	XMMWORD PTR _rsa_c$[esp+10592], xmm0
	movups	XMMWORD PTR _rsa_c$[esp+10608], xmm0
	cmp	DWORD PTR _doit$[esp+10596], esi
	je	$LN56@speed_main
; Line 1563
	mov	DWORD PTR tv6836[esp+10592], OFFSET _results+40
	mov	edi, OFFSET _lengths
	npad	12
$LL57@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	push	3
	push	DWORD PTR _names+4
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN627@speed_main
$LL626@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL626@speed_main
$LN627@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1566
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1566
	cmp	DWORD PTR _run, esi
	je	$LN2426@speed_main
	npad	8
$LL60@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2426@speed_main
; Line 1567
	push	0
	call	_EVP_mdc2
	push	eax
	push	0
	lea	eax, DWORD PTR _mdc2$[esp+10604]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL60@speed_main
$LN2426@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+4
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
; Line 1563
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
; Line 2577
	mov	eax, DWORD PTR tv6836[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1563
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1563
	add	eax, 8
	mov	DWORD PTR tv6836[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL57@speed_main
$LN56@speed_main:
; Line 1576
	cmp	DWORD PTR _doit$[esp+10600], 0
	je	$LN62@speed_main
; Line 1577
	mov	DWORD PTR tv6834[esp+10592], OFFSET _results+80
	mov	edi, OFFSET _lengths
	npad	12
$LL63@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	push	3
	push	DWORD PTR _names+8
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN646@speed_main
$LL645@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL645@speed_main
$LN646@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1580
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1580
	cmp	DWORD PTR _run, esi
	je	$LN2427@speed_main
	npad	8
$LL66@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2427@speed_main
; Line 1581
	push	0
	call	_EVP_md4
	push	eax
	push	0
	lea	eax, DWORD PTR _md4$[esp+10604]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL66@speed_main
$LN2427@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+8
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
; Line 1577
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
; Line 2577
	mov	eax, DWORD PTR tv6834[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1577
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1577
	add	eax, 8
	mov	DWORD PTR tv6834[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL63@speed_main
$LN62@speed_main:
; Line 1590
	cmp	DWORD PTR _doit$[esp+10604], 0
	je	$LN68@speed_main
; Line 1591
	mov	DWORD PTR tv6832[esp+10592], OFFSET _results+120
	mov	edi, OFFSET _lengths
	npad	12
$LL69@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+12
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN664@speed_main
$LL663@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL663@speed_main
$LN664@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1594
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1594
	cmp	DWORD PTR _run, esi
	je	$LN2428@speed_main
	npad	3
$LL72@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2428@speed_main
; Line 1595
	push	0
	push	OFFSET ??_C@_03PKBIKOHH@md5?$AA@
	call	_EVP_get_digestbyname
	add	esp, 4
	push	eax
	push	0
	lea	eax, DWORD PTR _md5$[esp+10604]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL72@speed_main
$LN2428@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+12
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6832[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1591
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1591
	add	eax, 8
	mov	DWORD PTR tv6832[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL69@speed_main
$LN68@speed_main:
; Line 1604
	cmp	DWORD PTR _doit$[esp+10608], 0
	je	$LN507@speed_main
; Line 1607
	lea	eax, DWORD PTR _hctx$5[esp+10592]
	push	eax
	call	_HMAC_CTX_init
	add	esp, 4
; Line 1608
	push	0
	call	_EVP_md5
	push	eax
	push	16					; 00000010H
	lea	eax, DWORD PTR _hctx$5[esp+10604]
	push	OFFSET ??_C@_0BB@CHBKGAKC@This?5is?5a?5key?4?4?4?$AA@
	push	eax
	call	_HMAC_Init_ex
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv6830[esp+10592], OFFSET _results+160
	mov	edi, OFFSET _lengths
	npad	10
$LL75@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+16
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN682@speed_main
$LL681@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL681@speed_main
$LN682@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1614
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1614
	cmp	DWORD PTR _run, esi
	je	$LN2429@speed_main
	npad	3
$LL78@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2429@speed_main
; Line 1615
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _hctx$5[esp+10604]
	push	0
	push	eax
	call	_HMAC_Init_ex
; Line 1616
	push	DWORD PTR [edi]
	lea	eax, DWORD PTR _hctx$5[esp+10616]
	push	ebp
	push	eax
	call	_HMAC_Update
; Line 1617
	push	0
	lea	eax, DWORD PTR _hmac$[esp+10628]
	push	eax
	lea	eax, DWORD PTR _hctx$5[esp+10632]
	push	eax
	call	_HMAC_Final
	add	esp, 44					; 0000002cH
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL78@speed_main
$LN2429@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+16
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6830[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1611
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1611
	add	eax, 8
	mov	DWORD PTR tv6830[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL75@speed_main
; Line 1622
	lea	eax, DWORD PTR _hctx$5[esp+10592]
	push	eax
	call	_HMAC_CTX_cleanup
	add	esp, 4
$LN507@speed_main:
; Line 1626
	cmp	DWORD PTR _doit$[esp+10612], 0
	je	$LN80@speed_main
; Line 1627
	mov	DWORD PTR tv6828[esp+10592], OFFSET _results+200
	mov	edi, OFFSET _lengths
$LL81@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+20
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN700@speed_main
$LL699@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL699@speed_main
$LN700@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1630
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1630
	cmp	DWORD PTR _run, esi
	je	$LN2430@speed_main
	npad	2
$LL84@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2430@speed_main
; Line 1631
	push	0
	call	_EVP_sha1
	push	eax
	push	0
	lea	eax, DWORD PTR _sha$[esp+10604]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL84@speed_main
$LN2430@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+20
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6828[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1627
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1627
	add	eax, 8
	mov	DWORD PTR tv6828[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL81@speed_main
$LN80@speed_main:
; Line 1638
	cmp	DWORD PTR _doit$[esp+10684], 0
	je	$LN86@speed_main
; Line 1639
	mov	DWORD PTR tv6825[esp+10592], OFFSET _results+920
	mov	edi, OFFSET _lengths
	npad	1
$LL87@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+92
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN718@speed_main
$LL717@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL717@speed_main
$LN718@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1642
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1642
	cmp	DWORD PTR _run, esi
	je	$LN2431@speed_main
	npad	3
$LL90@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2431@speed_main
; Line 1643
	lea	eax, DWORD PTR _sha256$[esp+10592]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_SHA256
	add	esp, 12					; 0000000cH
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL90@speed_main
$LN2431@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+92
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6825[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1639
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1639
	add	eax, 8
	mov	DWORD PTR tv6825[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL87@speed_main
$LN86@speed_main:
; Line 1651
	cmp	DWORD PTR _doit$[esp+10688], 0
	je	$LN92@speed_main
; Line 1652
	mov	DWORD PTR tv6813[esp+10592], OFFSET _results+960
	mov	edi, OFFSET _lengths
	npad	11
$LL93@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+96
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN736@speed_main
$LL735@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL735@speed_main
$LN736@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1655
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1655
	cmp	DWORD PTR _run, esi
	je	$LN2432@speed_main
	npad	3
$LL96@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2432@speed_main
; Line 1656
	lea	eax, DWORD PTR _sha512$[esp+10592]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_SHA512
	add	esp, 12					; 0000000cH
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL96@speed_main
$LN2432@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+96
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6813[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1652
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1652
	add	eax, 8
	mov	DWORD PTR tv6813[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL93@speed_main
$LN92@speed_main:
; Line 1665
	cmp	DWORD PTR _doit$[esp+10692], 0
	je	$LN98@speed_main
; Line 1666
	mov	DWORD PTR tv6797[esp+10592], OFFSET _results+1000
	mov	edi, OFFSET _lengths
	npad	11
$LL99@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+100
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN754@speed_main
$LL753@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL753@speed_main
$LN754@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1669
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1669
	cmp	DWORD PTR _run, esi
	je	$LN2433@speed_main
	npad	3
$LL102@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2433@speed_main
; Line 1670
	lea	eax, DWORD PTR _whirlpool$[esp+10592]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_WHIRLPOOL
	add	esp, 12					; 0000000cH
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL102@speed_main
$LN2433@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+100
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6797[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1666
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1666
	add	eax, 8
	mov	DWORD PTR tv6797[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL99@speed_main
$LN98@speed_main:
; Line 1678
	cmp	DWORD PTR _doit$[esp+10616], 0
	je	$LN104@speed_main
; Line 1679
	mov	DWORD PTR tv6783[esp+10592], OFFSET _results+240
	mov	edi, OFFSET _lengths
	npad	11
$LL105@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+24
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN772@speed_main
$LL771@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL771@speed_main
$LN772@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1682
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1682
	cmp	DWORD PTR _run, esi
	je	$LN2434@speed_main
	npad	3
$LL108@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2434@speed_main
; Line 1683
	push	0
	call	_EVP_ripemd160
	push	eax
	push	0
	lea	eax, DWORD PTR _rmd160$[esp+10604]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL108@speed_main
$LN2434@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+24
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6783[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1679
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1679
	add	eax, 8
	mov	DWORD PTR tv6783[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL105@speed_main
$LN104@speed_main:
; Line 1691
	cmp	DWORD PTR _doit$[esp+10620], 0
	je	$LN110@speed_main
; Line 1692
	mov	DWORD PTR tv6767[esp+10592], OFFSET _results+280
	mov	edi, OFFSET _lengths
	npad	1
$LL111@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+28
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN790@speed_main
$LL789@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL789@speed_main
$LN790@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1695
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1695
	cmp	DWORD PTR _run, esi
	je	$LN2435@speed_main
	npad	3
$LL114@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2435@speed_main
; Line 1696
	push	ebp
	push	ebp
	push	DWORD PTR [edi]
	lea	eax, DWORD PTR _rc4_ks$[esp+10604]
	push	eax
	call	_RC4
	add	esp, 16					; 00000010H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL114@speed_main
$LN2435@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+28
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6767[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1692
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1692
	add	eax, 8
	mov	DWORD PTR tv6767[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL111@speed_main
$LN110@speed_main:
; Line 1703
	cmp	DWORD PTR _doit$[esp+10624], 0
	je	$LN116@speed_main
; Line 1704
	mov	DWORD PTR tv6751[esp+10592], OFFSET _results+320
	mov	edi, OFFSET _lengths
	npad	10
$LL117@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+32
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN808@speed_main
$LL807@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL807@speed_main
$LN808@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1707
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1707
	cmp	DWORD PTR _run, esi
	je	$LN2436@speed_main
	npad	3
$LL120@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2436@speed_main
; Line 1708
	push	1
	lea	eax, DWORD PTR _DES_iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _sch$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_DES_ncbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL120@speed_main
$LN2436@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+32
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6751[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1704
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1704
	add	eax, 8
	mov	DWORD PTR tv6751[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL117@speed_main
$LN116@speed_main:
; Line 1715
	cmp	DWORD PTR _doit$[esp+10628], 0
	je	$LN122@speed_main
; Line 1716
	mov	DWORD PTR tv6737[esp+10592], OFFSET _results+360
	mov	edi, OFFSET _lengths
$LL123@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+36
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN826@speed_main
$LL825@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL825@speed_main
$LN826@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1719
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1719
	cmp	DWORD PTR _run, esi
	je	$LN2437@speed_main
	npad	3
$LL126@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2437@speed_main
; Line 1720
	push	1
	lea	eax, DWORD PTR _DES_iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _sch3$[esp+10600]
	push	eax
	lea	eax, DWORD PTR _sch2$[esp+10604]
	push	eax
	lea	eax, DWORD PTR _sch$[esp+10608]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_DES_ede3_cbc_encrypt
	add	esp, 32					; 00000020H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL126@speed_main
$LN2437@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+36
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6737[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1716
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1716
	add	eax, 8
	mov	DWORD PTR tv6737[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL123@speed_main
$LN122@speed_main:
; Line 1729
	cmp	DWORD PTR _doit$[esp+10656], 0
	je	$LN128@speed_main
; Line 1730
	mov	DWORD PTR tv6721[esp+10592], OFFSET _results+640
	mov	edi, OFFSET _lengths
$LL129@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+64
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN844@speed_main
$LL843@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL843@speed_main
$LN844@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1734
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1734
	cmp	DWORD PTR _run, esi
	je	$LN2438@speed_main
	npad	3
$LL132@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2438@speed_main
; Line 1735
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _aes_ks1$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_AES_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL132@speed_main
$LN2438@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+64
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6721[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1730
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1730
	add	eax, 8
	mov	DWORD PTR tv6721[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL129@speed_main
$LN128@speed_main:
; Line 1742
	cmp	DWORD PTR _doit$[esp+10660], 0
	je	$LN134@speed_main
; Line 1743
	mov	DWORD PTR tv6707[esp+10592], OFFSET _results+680
	mov	edi, OFFSET _lengths
$LL135@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+68
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN862@speed_main
$LL861@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL861@speed_main
$LN862@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1747
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1747
	cmp	DWORD PTR _run, esi
	je	$LN2439@speed_main
	npad	3
$LL138@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2439@speed_main
; Line 1748
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _aes_ks2$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_AES_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL138@speed_main
$LN2439@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+68
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6707[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1743
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1743
	add	eax, 8
	mov	DWORD PTR tv6707[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL135@speed_main
$LN134@speed_main:
; Line 1755
	cmp	DWORD PTR _doit$[esp+10664], 0
	je	$LN140@speed_main
; Line 1756
	mov	DWORD PTR tv6691[esp+10592], OFFSET _results+720
	mov	edi, OFFSET _lengths
$LL141@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+72
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN880@speed_main
$LL879@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL879@speed_main
$LN880@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1760
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1760
	cmp	DWORD PTR _run, esi
	je	$LN2440@speed_main
	npad	3
$LL144@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2440@speed_main
; Line 1761
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _aes_ks3$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_AES_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL144@speed_main
$LN2440@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+72
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6691[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1756
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1756
	add	eax, 8
	mov	DWORD PTR tv6691[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL141@speed_main
$LN140@speed_main:
; Line 1769
	cmp	DWORD PTR _doit$[esp+10696], 0
	je	$LN146@speed_main
; Line 1770
	mov	DWORD PTR tv6676[esp+10592], OFFSET _results+1040
	mov	edi, OFFSET _lengths
$LL147@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+104
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN898@speed_main
$LL897@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL897@speed_main
$LN898@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1774
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1774
	cmp	DWORD PTR _run, esi
	je	$LN149@speed_main
	mov	ebx, DWORD PTR _buf2$1$[esp+10592]
$LL150@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2441@speed_main
; Line 1775
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _aes_ks1$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebx
	push	ebp
	call	_AES_ige_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL150@speed_main
$LN2441@speed_main:
	mov	ebx, DWORD PTR __imp__Sleep@4
$LN149@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+104
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6676[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1770
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1770
	add	eax, 8
	mov	DWORD PTR tv6676[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL147@speed_main
$LN146@speed_main:
; Line 1782
	cmp	DWORD PTR _doit$[esp+10700], 0
	je	$LN152@speed_main
; Line 1783
	mov	DWORD PTR tv6658[esp+10592], OFFSET _results+1080
	mov	edi, OFFSET _lengths
	npad	9
$LL153@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+108
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN916@speed_main
$LL915@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL915@speed_main
$LN916@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1787
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1787
	cmp	DWORD PTR _run, esi
	je	$LN155@speed_main
	mov	ebx, DWORD PTR _buf2$1$[esp+10592]
$LL156@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2442@speed_main
; Line 1788
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _aes_ks2$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebx
	push	ebp
	call	_AES_ige_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL156@speed_main
$LN2442@speed_main:
	mov	ebx, DWORD PTR __imp__Sleep@4
$LN155@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+108
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6658[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1783
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1783
	add	eax, 8
	mov	DWORD PTR tv6658[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL153@speed_main
$LN152@speed_main:
; Line 1795
	cmp	DWORD PTR _doit$[esp+10704], 0
	je	$LN158@speed_main
; Line 1796
	mov	DWORD PTR tv6643[esp+10592], OFFSET _results+1120
	mov	edi, OFFSET _lengths
	npad	9
$LL159@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+112
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN934@speed_main
$LL933@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL933@speed_main
$LN934@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1800
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1800
	cmp	DWORD PTR _run, esi
	je	$LN161@speed_main
	mov	ebx, DWORD PTR _buf2$1$[esp+10592]
$LL162@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2443@speed_main
; Line 1801
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _aes_ks3$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebx
	push	ebp
	call	_AES_ige_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL162@speed_main
$LN2443@speed_main:
	mov	ebx, DWORD PTR __imp__Sleep@4
$LN161@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+112
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6643[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1796
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1796
	add	eax, 8
	mov	DWORD PTR tv6643[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL159@speed_main
$LN158@speed_main:
; Line 1808
	cmp	DWORD PTR _doit$[esp+10708], 0
	je	$LN522@speed_main
; Line 1809
	lea	eax, DWORD PTR _aes_ks1$[esp+10592]
	push	OFFSET _AES_encrypt
	push	eax
	call	_CRYPTO_gcm128_new
; Line 1811
	push	12					; 0000000cH
	push	OFFSET ??_C@_0N@OFCMGCDL@0123456789ab?$AA@
	push	eax
	mov	DWORD PTR _ctx$1$[esp+10612], eax
	call	_CRYPTO_gcm128_setiv
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv6626[esp+10592], OFFSET _results+1160
	mov	edi, OFFSET _lengths
	npad	3
$LL165@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+116
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN952@speed_main
$LL951@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL951@speed_main
$LN952@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1816
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1816
	cmp	DWORD PTR _run, esi
	je	$LN167@speed_main
	mov	ebx, DWORD PTR _ctx$1$[esp+10592]
$LL168@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2444@speed_main
; Line 1817
	push	DWORD PTR [edi]
	push	ebp
	push	ebx
	call	_CRYPTO_gcm128_aad
	add	esp, 12					; 0000000cH
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL168@speed_main
$LN2444@speed_main:
	mov	ebx, DWORD PTR __imp__Sleep@4
$LN167@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+116
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6626[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1813
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1813
	add	eax, 8
	mov	DWORD PTR tv6626[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL165@speed_main
; Line 1821
	push	DWORD PTR _ctx$1$[esp+10592]
	call	_CRYPTO_gcm128_release
	add	esp, 4
$LN522@speed_main:
; Line 1825
	cmp	DWORD PTR _doit$[esp+10668], 0
	je	$LN170@speed_main
; Line 1826
	mov	DWORD PTR tv6610[esp+10592], OFFSET _results+760
	mov	edi, OFFSET _lengths
$LL171@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+76
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN970@speed_main
$LL969@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL969@speed_main
$LN970@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1830
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1830
	cmp	DWORD PTR _run, esi
	je	$LN2445@speed_main
	npad	2
$LL174@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2445@speed_main
; Line 1831
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _camellia_ks1$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_Camellia_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL174@speed_main
$LN2445@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+76
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6610[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1826
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1826
	add	eax, 8
	mov	DWORD PTR tv6610[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL171@speed_main
$LN170@speed_main:
; Line 1838
	cmp	DWORD PTR _doit$[esp+10672], 0
	je	$LN176@speed_main
; Line 1839
	mov	DWORD PTR tv6596[esp+10592], OFFSET _results+800
	mov	edi, OFFSET _lengths
$LL177@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+80
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN988@speed_main
$LL987@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL987@speed_main
$LN988@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1843
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1843
	cmp	DWORD PTR _run, esi
	je	$LN2446@speed_main
	npad	3
$LL180@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2446@speed_main
; Line 1844
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _camellia_ks2$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_Camellia_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL180@speed_main
$LN2446@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+80
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6596[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1839
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1839
	add	eax, 8
	mov	DWORD PTR tv6596[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL177@speed_main
$LN176@speed_main:
; Line 1851
	cmp	DWORD PTR _doit$[esp+10676], 0
	je	$LN182@speed_main
; Line 1852
	mov	DWORD PTR tv6577[esp+10592], OFFSET _results+840
	mov	edi, OFFSET _lengths
$LL183@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+84
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1006@speed_main
$LL1005@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1005@speed_main
$LN1006@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1856
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1856
	cmp	DWORD PTR _run, esi
	je	$LN2447@speed_main
	npad	3
$LL186@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2447@speed_main
; Line 1857
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _camellia_ks3$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_Camellia_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL186@speed_main
$LN2447@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+84
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6577[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1852
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1852
	add	eax, 8
	mov	DWORD PTR tv6577[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL183@speed_main
$LN182@speed_main:
; Line 1866
	cmp	DWORD PTR _doit$[esp+10632], 0
	je	$LN188@speed_main
; Line 1867
	mov	DWORD PTR tv6563[esp+10592], OFFSET _results+400
	mov	edi, OFFSET _lengths
$LL189@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+40
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1024@speed_main
$LL1023@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1023@speed_main
$LN1024@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1870
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1870
	cmp	DWORD PTR _run, esi
	je	$LN2448@speed_main
	npad	3
$LL192@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2448@speed_main
; Line 1871
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _idea_ks$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_idea_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL192@speed_main
$LN2448@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+40
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6563[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1867
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1867
	add	eax, 8
	mov	DWORD PTR tv6563[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL189@speed_main
$LN188@speed_main:
; Line 1880
	cmp	DWORD PTR _doit$[esp+10636], 0
	je	$LN194@speed_main
; Line 1881
	mov	DWORD PTR tv6547[esp+10592], OFFSET _results+440
	mov	edi, OFFSET _lengths
$LL195@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+44
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1042@speed_main
$LL1041@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1041@speed_main
$LN1042@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1884
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1884
	cmp	DWORD PTR _run, esi
	je	$LN2449@speed_main
	npad	3
$LL198@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2449@speed_main
; Line 1885
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _seed_ks$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_SEED_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL198@speed_main
$LN2449@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+44
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6547[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1881
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1881
	add	eax, 8
	mov	DWORD PTR tv6547[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL195@speed_main
$LN194@speed_main:
; Line 1893
	cmp	DWORD PTR _doit$[esp+10640], 0
	je	$LN200@speed_main
; Line 1894
	mov	DWORD PTR tv6532[esp+10592], OFFSET _results+480
	mov	edi, OFFSET _lengths
$LL201@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+48
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1060@speed_main
$LL1059@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1059@speed_main
$LN1060@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1897
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1897
	cmp	DWORD PTR _run, esi
	je	$LN2450@speed_main
	npad	3
$LL204@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2450@speed_main
; Line 1898
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _rc2_ks$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_RC2_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL204@speed_main
$LN2450@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+48
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6532[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1894
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1894
	add	eax, 8
	mov	DWORD PTR tv6532[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL201@speed_main
$LN200@speed_main:
; Line 1921
	cmp	DWORD PTR _doit$[esp+10648], 0
	je	$LN206@speed_main
; Line 1922
	mov	DWORD PTR tv6518[esp+10592], OFFSET _results+560
	mov	edi, OFFSET _lengths
$LL207@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+56
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1078@speed_main
$LL1077@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1077@speed_main
$LN1078@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1925
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1925
	cmp	DWORD PTR _run, esi
	je	$LN2451@speed_main
	npad	3
$LL210@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2451@speed_main
; Line 1926
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _bf_ks$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_BF_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL210@speed_main
$LN2451@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+56
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6518[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1922
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1922
	add	eax, 8
	mov	DWORD PTR tv6518[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL207@speed_main
$LN206@speed_main:
; Line 1935
	cmp	DWORD PTR _doit$[esp+10652], 0
	je	$LN212@speed_main
; Line 1936
	mov	DWORD PTR tv6502[esp+10592], OFFSET _results+600
	mov	edi, OFFSET _lengths
$LL213@speed_main:
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _names+60
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1096@speed_main
$LL1095@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1095@speed_main
$LN1096@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 1939
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 1939
	cmp	DWORD PTR _run, esi
	je	$LN2452@speed_main
	npad	3
$LL216@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2452@speed_main
; Line 1940
	push	1
	lea	eax, DWORD PTR _iv$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _cast_ks$[esp+10600]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	push	ebp
	call	_CAST_cbc_encrypt
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL216@speed_main
$LN2452@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2574
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2574
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names+60
	cmove	eax, ecx
	movsd	QWORD PTR _d$1$[esp+10604], xmm0
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6502[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1936
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1936
	add	eax, 8
	mov	DWORD PTR tv6502[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jl	$LL213@speed_main
$LN212@speed_main:
; Line 1949
	cmp	DWORD PTR _doit$[esp+10680], 0
	je	$LN2060@speed_main
; Line 1951
	cmp	DWORD PTR _multiblock$1$[esp+10592], 0
	mov	eax, DWORD PTR _evp_cipher$1$[esp+10592]
	je	$LN532@speed_main
	test	eax, eax
	je	$LN532@speed_main
; Line 1952
	push	eax
	call	_EVP_CIPHER_flags
	add	esp, 4
	test	eax, 4194304				; 00400000H
; Line 1955
	mov	eax, DWORD PTR _evp_cipher$1$[esp+10592]
	jne	$LN533@speed_main
	push	DWORD PTR [eax]
	call	_OBJ_nid2ln
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BP@HBLLKLBN@?$CFs?5is?5not?5multi?9block?5capable?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1957
	jmp	$LN2480@speed_main
$LN1394@speed_main:
; Line 734
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0CD@ELNIIMHM@?$CFs?5is?5an?5unknown?5cipher?5or?5diges@
; Line 736
	jmp	$LN2479@speed_main
$LN1393@speed_main:
; Line 726
	push	OFFSET ??_C@_0O@GDKHNIIH@no?5EVP?5given?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 727
	jmp	$LN2478@speed_main
$LN1395@speed_main:
; Line 749
	push	OFFSET ??_C@_0BB@DDANMNBA@no?5engine?5given?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$LN2478@speed_main
$LN497@speed_main:
; Line 1067
	push	OFFSET ??_C@_0BM@MKHDIKFH@Error?3?5bad?5option?5or?5value?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1068
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1069
	push	OFFSET ??_C@_0BD@CAAKEHEN@Available?5values?3?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1074
	push	OFFSET ??_C@_09JDONDMIM@mdc2?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1077
	push	OFFSET ??_C@_09DMEPELLE@md4?5?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1080
	push	OFFSET ??_C@_09PAOFELCK@md5?5?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1082
	push	OFFSET ??_C@_09BOOAKEON@hmac?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1086
	push	OFFSET ??_C@_09DPHDGDCD@sha1?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 1089
	push	OFFSET ??_C@_09LCCAIILE@sha256?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1092
	push	OFFSET ??_C@_09BJJGFCOM@sha512?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1095
	push	OFFSET ??_C@_09DEGKDAEL@whirlpool?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1098
	push	OFFSET ??_C@_06HGILBMJP@rmd160?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1104
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1108
	push	OFFSET ??_C@_09KOFIPEDD@idea?9cbc?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1111
	push	OFFSET ??_C@_09NLJHNOPG@seed?9cbc?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1114
	push	OFFSET ??_C@_09LGNBAGH@rc2?9cbc?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 1120
	push	OFFSET ??_C@_06LFFGAFHI@bf?9cbc?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1124
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1127
	push	OFFSET ??_C@_0BD@FHIKLLHL@des?9cbc?5?5des?9ede3?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1130
	push	OFFSET ??_C@_0CF@DCHENCLH@aes?9128?9cbc?5aes?9192?9cbc?5aes?9256?9@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1131
	push	OFFSET ??_C@_0CF@PCPALDGP@aes?9128?9ige?5aes?9192?9ige?5aes?9256?9@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1134
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1135
	push	OFFSET ??_C@_0DE@CCALCJIO@camellia?9128?9cbc?5camellia?9192?9cb@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1139
	push	OFFSET ??_C@_03OODGMOHK@rc4?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 1141
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1144
	push	OFFSET ??_C@_0CE@EPJNIAGE@rsa512?5?5?5rsa1024?5?5rsa2048?5?5rsa40@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1148
	push	OFFSET ??_C@_0BL@BAAHEKKJ@dsa512?5?5?5dsa1024?5?5dsa2048?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1151
	push	OFFSET ??_C@_0DN@PIBLGGHM@ecdsap160?5ecdsap192?5ecdsap224?5ec@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1153
	push	OFFSET ??_C@_0DD@CLPPEPFP@ecdsak163?5ecdsak233?5ecdsak283?5ec@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1155
	push	OFFSET ??_C@_0DD@LBAILFFA@ecdsab163?5ecdsab233?5ecdsab283?5ec@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1157
	push	OFFSET ??_C@_06JDLPKJFF@ecdsa?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1160
	push	OFFSET ??_C@_0DL@OKJAGPLL@ecdhp160?5?5ecdhp192?5?5ecdhp224?5ecd@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 1162
	push	OFFSET ??_C@_0DC@NJIKAMEB@ecdhk163?5?5ecdhk233?5?5ecdhk283?5?5ec@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1164
	push	OFFSET ??_C@_0DC@EDHNPGEO@ecdhb163?5?5ecdhb233?5?5ecdhb283?5?5ec@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1166
	push	OFFSET ??_C@_05MAPJNPGO@ecdh?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1170
	push	OFFSET ??_C@_09EOFEGGFL@idea?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1173
	push	OFFSET ??_C@_09DLJLEMJO@seed?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1176
	push	OFFSET ??_C@_09EIOEPFJP@rc2?5?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1179
	push	OFFSET ??_C@_09PEHJLPMJ@des?5?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1182
	push	OFFSET ??_C@_09BCFAHEIN@aes?5?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 1185
	push	OFFSET ??_C@_09EGJGADGE@camellia?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1188
	push	OFFSET ??_C@_09DPINEDML@rsa?5?5?5?5?5?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1191
	push	OFFSET ??_C@_08CMDBPLDA@blowfish?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1197
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1200
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1201
	push	OFFSET ??_C@_0BE@GGBOHNKG@Available?5options?3?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1207
	push	OFFSET ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1211
	push	OFFSET ??_C@_0BM@EKPEBFCO@?9evp?5e?5?5?5?5?5?5?5?5?5?5use?5EVP?5e?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 1212
	push	OFFSET ??_C@_0ED@BFHJAELP@?9decrypt?5?5?5?5?5?5?5?5time?5decryption?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1215
	push	OFFSET ??_C@_0DC@FOLBCFO@?9mr?5?5?5?5?5?5?5?5?5?5?5?5?5produce?5machine?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 1222
	jmp	$LN2478@speed_main
$LN1397@speed_main:
; Line 333
	call	DWORD PTR __imp__GetLastError@0
	mov	esi, eax
; Line 334
	push	esi
	push	OFFSET ??_C@_0BM@NHJDEHNA@unable?5to?5CreateThread?5?$CI?$CFd?$CJ?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 335
	push	esi
	call	DWORD PTR __imp__ExitProcess@4
$LN2482@speed_main:
$LN533@speed_main:
; Line 1959
	push	eax
	call	_multiblock_speed
; Line 1961
	mov	edi, DWORD PTR _buf2$1$[esp+10596]
	add	esp, 4
	xor	ebx, ebx
	jmp	$end$2483
$LN532@speed_main:
; Line 1964
	mov	DWORD PTR tv6488[esp+10592], OFFSET _results+880
	mov	edi, OFFSET _lengths
$LL219@speed_main:
; Line 1965
	test	eax, eax
	je	$LN2458@speed_main
; Line 1969
	push	DWORD PTR [eax]
	call	_OBJ_nid2ln
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	eax
; Line 1969
	mov	DWORD PTR _names+88, eax
; Line 2536
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
; Line 1976
	lea	eax, DWORD PTR _ctx$4[esp+10632]
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 1976
	push	eax
	call	_EVP_CIPHER_CTX_init
; Line 1977
	mov	esi, DWORD PTR _decrypt$1$[esp+10636]
; Line 1978
	lea	eax, DWORD PTR _iv$[esp+10636]
	add	esp, 44					; 0000002cH
	push	eax
	mov	eax, DWORD PTR _evp_cipher$1$[esp+10596]
	push	OFFSET ?key16@?1??speed_main@@9@9
	push	0
	push	eax
	lea	eax, DWORD PTR _ctx$4[esp+10608]
	push	eax
	test	esi, esi
	je	$LN535@speed_main
	call	_EVP_DecryptInit_ex
	jmp	$LN2468@speed_main
$LN535@speed_main:
; Line 1980
	call	_EVP_EncryptInit_ex
$LN2468@speed_main:
	add	esp, 20					; 00000014H
; Line 1981
	lea	eax, DWORD PTR _ctx$4[esp+10592]
	push	0
	push	eax
	call	_EVP_CIPHER_CTX_set_padding
	add	esp, 8
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1114@speed_main
	npad	6
$LL1113@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1113@speed_main
$LN1114@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
	add	esp, 8
; Line 1985
	mov	DWORD PTR _run, 1
; Line 342
	fstp	ST(0)
; Line 1984
	test	esi, esi
	je	$LN537@speed_main
; Line 1985
	xor	esi, esi
; Line 1986
	cmp	DWORD PTR _run, esi
	je	$LN2453@speed_main
	npad	1
$LL222@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2453@speed_main
; Line 1988
	push	DWORD PTR [edi]
	lea	eax, DWORD PTR _outl$1[esp+10596]
	push	ebp
	push	eax
	lea	eax, DWORD PTR _ctx$4[esp+10604]
	push	ebp
	push	eax
	call	_EVP_DecryptUpdate
	add	esp, 20					; 00000014H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL222@speed_main
$LN2453@speed_main:
; Line 1995
	lea	eax, DWORD PTR _outl$1[esp+10592]
	push	eax
	lea	eax, DWORD PTR _ctx$4[esp+10596]
	push	ebp
	push	eax
	call	_EVP_DecryptFinal_ex
	jmp	$LN2469@speed_main
$LN537@speed_main:
; Line 1990
	xor	esi, esi
; Line 1991
	cmp	DWORD PTR _run, esi
	je	$LN2454@speed_main
	npad	1
$LL225@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2454@speed_main
; Line 1993
	push	DWORD PTR [edi]
	lea	eax, DWORD PTR _outl$1[esp+10596]
	push	ebp
	push	eax
	lea	eax, DWORD PTR _ctx$4[esp+10604]
	push	ebp
	push	eax
	call	_EVP_EncryptUpdate
	add	esp, 20					; 00000014H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL225@speed_main
$LN2454@speed_main:
; Line 1997
	lea	eax, DWORD PTR _outl$1[esp+10592]
	push	eax
	lea	eax, DWORD PTR _ctx$4[esp+10596]
	push	ebp
	push	eax
	call	_EVP_EncryptFinal_ex
$LN2469@speed_main:
	add	esp, 12					; 0000000cH
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
; Line 1999
	lea	eax, DWORD PTR _ctx$4[esp+10600]
	push	eax
; Line 342
	fstp	QWORD PTR _d$[esp+10604]
; Line 1999
	call	_EVP_CIPHER_CTX_cleanup
	movsd	xmm0, QWORD PTR _d$[esp+10604]
	add	esp, 12					; 0000000cH
	movsd	QWORD PTR _d$1$[esp+10592], xmm0
	jmp	$LN534@speed_main
$LN2458@speed_main:
	movsd	xmm0, QWORD PTR _d$1$[esp+10592]
$LN534@speed_main:
; Line 2001
	mov	eax, DWORD PTR _evp_md$1$[esp+10592]
	test	eax, eax
	je	$LN1139@speed_main
; Line 2002
	push	DWORD PTR [eax]
	call	_OBJ_nid2ln
; Line 2536
	push	DWORD PTR [edi]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	eax
; Line 2002
	mov	DWORD PTR _names+88, eax
; Line 2536
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1130@speed_main
	npad	3
$LL1129@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1129@speed_main
$LN1130@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 2006
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 2007
	cmp	DWORD PTR _run, esi
	je	$LN227@speed_main
	mov	ebx, DWORD PTR _evp_md$1$[esp+10592]
	npad	5
$LL228@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2455@speed_main
; Line 2008
	push	0
	push	ebx
	push	0
	lea	eax, DWORD PTR _md$[esp+10604]
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL228@speed_main
$LN2455@speed_main:
	mov	ebx, DWORD PTR __imp__Sleep@4
$LN227@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	fstp	QWORD PTR _d$[esp+10600]
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	add	esp, 8
	movsd	QWORD PTR _d$1$[esp+10592], xmm0
$LN1139@speed_main:
; Line 2574
	mov	eax, 8
	call	__chkstk
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	push	DWORD PTR _names+88
	cmove	eax, ecx
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm1, xmm1
	mov	eax, DWORD PTR tv6488[esp+10592]
	movd	xmm0, DWORD PTR [edi]
; Line 1964
	add	edi, 4
; Line 2577
	divsd	xmm1, QWORD PTR _d$1$[esp+10592]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
; Line 1964
	add	eax, 8
	mov	DWORD PTR tv6488[esp+10592], eax
	cmp	edi, OFFSET _lengths+20
	jge	$LN2060@speed_main
	mov	eax, DWORD PTR _evp_cipher$1$[esp+10592]
	jmp	$LL219@speed_main
$LN2060@speed_main:
; Line 2016
	push	36					; 00000024H
	push	ebp
	call	_RAND_pseudo_bytes
	add	esp, 8
; Line 2018
	mov	edi, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
	xor	esi, esi
	mov	DWORD PTR _j$2$[esp+10592], esi
	npad	12
$LL231@speed_main:
; Line 2020
	cmp	DWORD PTR _rsa_doit$[esp+esi*4+10592], 0
	je	$LN229@speed_main
; Line 2022
	mov	eax, DWORD PTR _rsa_key$[esp+esi*4+10592]
	push	eax
	mov	DWORD PTR tv6863[esp+10596], eax
	lea	eax, DWORD PTR _rsa_num$[esp+10596]
	push	eax
	push	DWORD PTR _buf2$1$[esp+10600]
	push	36					; 00000024H
	push	ebp
	push	114					; 00000072H
	call	_RSA_sign
	add	esp, 24					; 00000018H
; Line 2023
	test	eax, eax
	jne	$LN543@speed_main
; Line 2024
	push	OFFSET ??_C@_0CO@CGMKIBHC@RSA?5sign?5failure?4?5?5No?5RSA?5sign?5w@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2026
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2027
	mov	edi, 1
; Line 2028
	jmp	$LN544@speed_main
$LN543@speed_main:
; Line 2556
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
	push	10					; 0000000aH
	push	OFFSET ??_C@_03DFNMMEBL@rsa?$AA@
	push	OFFSET ??_C@_07NMPLPEPB@private?$AA@
	push	DWORD PTR ?rsa_bits@?1??speed_main@@9@9[esi*4]
	cmove	eax, edi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2559
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 313
	mov	DWORD PTR _lapse, 10000			; 00002710H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1148@speed_main
	npad	6
$LL1147@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1147@speed_main
$LN1148@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 2033
	xor	edi, edi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 2033
	cmp	DWORD PTR _run, edi
	je	$LN233@speed_main
	npad	9
$LL234@speed_main:
	cmp	edi, 2147483647				; 7fffffffH
	jge	$LN233@speed_main
; Line 2034
	push	DWORD PTR _rsa_key$[esp+esi*4+10592]
	lea	eax, DWORD PTR _rsa_num$[esp+10596]
	push	eax
	push	DWORD PTR _buf2$1$[esp+10600]
	push	36					; 00000024H
	push	ebp
	push	114					; 00000072H
	call	_RSA_sign
	add	esp, 24					; 00000018H
; Line 2036
	test	eax, eax
	je	$LN1426@speed_main
; Line 2033
	inc	edi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL234@speed_main
; Line 332
	jmp	$LN233@speed_main
$LN1426@speed_main:
; Line 2037
	push	OFFSET ??_C@_0BC@MKIMAF@RSA?5sign?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2038
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2039
	mov	edi, 1
$LN233@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2044
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2044
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0CD@KNFFODGA@?$CFld?5?$CFd?5bit?5private?5RSA?8s?5in?5?$CF?42f@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0BB@KHHLPGPE@?$CLR1?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?rsa_bits@?1??speed_main@@9@9[esi*4]
	cmove	eax, ecx
	push	edi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2048
	movsd	xmm1, QWORD PTR _d$[esp+10616]
	mov	eax, esi
	movd	xmm0, edi
	add	esp, 24					; 00000018H
	cvtdq2pd xmm0, xmm0
	shl	eax, 4
	divsd	xmm1, xmm0
	movsd	QWORD PTR _rsa_results[eax], xmm1
$LN544@speed_main:
; Line 2053
	push	DWORD PTR _rsa_key$[esp+esi*4+10592]
	push	DWORD PTR _rsa_num$[esp+10596]
	push	DWORD PTR _buf2$1$[esp+10600]
	push	36					; 00000024H
	push	ebp
	push	114					; 00000072H
	call	_RSA_verify
	add	esp, 24					; 00000018H
; Line 2054
	test	eax, eax
	jg	$LN546@speed_main
; Line 2055
	push	OFFSET ??_C@_0DC@MNCHLEBI@RSA?5verify?5failure?4?5?5No?5RSA?5veri@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2057
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2058
	mov	DWORD PTR _rsa_doit$[esp+esi*4+10592], 0
; Line 2059
	jmp	$LN547@speed_main
$LN546@speed_main:
; Line 2556
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
	push	10					; 0000000aH
	push	OFFSET ??_C@_03DFNMMEBL@rsa?$AA@
	push	OFFSET ??_C@_06EOMAMIIF@public?$AA@
	push	DWORD PTR ?rsa_bits@?1??speed_main@@9@9[esi*4]
	mov	eax, OFFSET ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2559
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 313
	mov	DWORD PTR _lapse, 10000			; 00002710H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1164@speed_main
$LL1163@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1163@speed_main
$LN1164@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 2063
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 2063
	cmp	DWORD PTR _run, esi
	je	$LN236@speed_main
	npad	2
$LL237@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN236@speed_main
; Line 2064
	push	DWORD PTR tv6863[esp+10592]
	push	DWORD PTR _rsa_num$[esp+10596]
	push	DWORD PTR _buf2$1$[esp+10600]
	push	36					; 00000024H
	push	ebp
	push	114					; 00000072H
	call	_RSA_verify
	add	esp, 24					; 00000018H
; Line 2066
	test	eax, eax
	jle	$LN1427@speed_main
; Line 2063
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL237@speed_main
; Line 332
	jmp	$LN236@speed_main
$LN1427@speed_main:
; Line 2067
	push	OFFSET ??_C@_0BE@NBJOEEN@RSA?5verify?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2068
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2069
	mov	esi, 1
$LN236@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2074
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2074
	call	__chkstk
	mov	eax, DWORD PTR _j$2$[esp+10600]
	mov	ecx, OFFSET ??_C@_0CC@CAADNGPH@?$CFld?5?$CFd?5bit?5public?5RSA?8s?5in?5?$CF?42fs@
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	cmp	DWORD PTR _mr, 0
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?rsa_bits@?1??speed_main@@9@9[eax*4]
	mov	eax, OFFSET ??_C@_0BB@LGAGJMIN@?$CLR2?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
	push	esi
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2078
	movsd	xmm1, QWORD PTR _d$[esp+10616]
	add	esp, 24					; 00000018H
	movd	xmm0, esi
	cvtdq2pd xmm0, xmm0
	mov	esi, DWORD PTR _j$2$[esp+10592]
	mov	eax, esi
	shl	eax, 4
	divsd	xmm1, xmm0
	movsd	QWORD PTR _rsa_results[eax+8], xmm1
$LN547@speed_main:
; Line 2082
	cmp	edi, 1
	jg	$LN2464@speed_main
; Line 2084
	lea	edx, DWORD PTR [esi+1]
	mov	esi, edx
	cmp	esi, 4
	jge	$LN2464@speed_main
	mov	esi, 4
; Line 2085
	lea	edi, DWORD PTR _rsa_doit$[esp+10592]
	mov	ecx, esi
	lea	edi, DWORD PTR [edi+edx*4]
	sub	ecx, edx
	xor	eax, eax
	rep stosd
$LN2464@speed_main:
	mov	edi, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
$LN229@speed_main:
; Line 2018
	inc	esi
	mov	DWORD PTR _j$2$[esp+10592], esi
	cmp	esi, 4
	jl	$LL231@speed_main
; Line 2090
	push	20					; 00000014H
	push	ebp
	call	_RAND_pseudo_bytes
	add	esp, 8
; Line 2092
	call	_RAND_status
	cmp	eax, 1
	je	$LN550@speed_main
; Line 2093
	push	64					; 00000040H
	push	OFFSET _rnd_seed
	call	_RAND_seed
	add	esp, 8
; Line 2094
	mov	DWORD PTR _rnd_fake, 1
$LN550@speed_main:
; Line 2096
	xor	esi, esi
	mov	DWORD PTR _j$3$[esp+10592], esi
	npad	13
$LL243@speed_main:
; Line 2100
	cmp	DWORD PTR _dsa_doit$[esp+esi*4+10592], 0
	je	$LN241@speed_main
; Line 2105
	mov	eax, DWORD PTR _dsa_key$[esp+esi*4+10592]
	push	eax
	mov	DWORD PTR tv6859[esp+10596], eax
	lea	eax, DWORD PTR _kk$2[esp+10596]
	push	eax
	push	DWORD PTR _buf2$1$[esp+10600]
	push	20					; 00000014H
	push	ebp
	push	116					; 00000074H
	call	_DSA_sign
	add	esp, 24					; 00000018H
; Line 2106
	test	eax, eax
	jne	$LN552@speed_main
; Line 2107
	push	OFFSET ??_C@_0CO@KDAFFDAA@DSA?5sign?5failure?4?5?5No?5DSA?5sign?5w@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2109
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2110
	mov	edi, 1
; Line 2111
	jmp	$LN553@speed_main
$LN552@speed_main:
; Line 2556
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
	push	10					; 0000000aH
	push	OFFSET ??_C@_03EAKOMMFI@dsa?$AA@
	push	OFFSET ??_C@_04HHGHLBPI@sign?$AA@
	push	DWORD PTR ?dsa_bits@?1??speed_main@@9@9[esi*4]
	cmove	eax, edi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2559
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 313
	mov	DWORD PTR _lapse, 10000			; 00002710H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1180@speed_main
	npad	6
$LL1179@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1179@speed_main
$LN1180@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 2115
	xor	edi, edi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 2115
	cmp	DWORD PTR _run, edi
	je	$LN245@speed_main
	npad	9
$LL246@speed_main:
	cmp	edi, 2147483647				; 7fffffffH
	jge	$LN245@speed_main
; Line 2116
	push	DWORD PTR _dsa_key$[esp+esi*4+10592]
	lea	eax, DWORD PTR _kk$2[esp+10596]
	push	eax
	push	DWORD PTR _buf2$1$[esp+10600]
	push	20					; 00000014H
	push	ebp
	push	116					; 00000074H
	call	_DSA_sign
	add	esp, 24					; 00000018H
; Line 2117
	test	eax, eax
	je	$LN1430@speed_main
; Line 2115
	inc	edi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL246@speed_main
; Line 332
	jmp	$LN245@speed_main
$LN1430@speed_main:
; Line 2118
	push	OFFSET ??_C@_0BC@CABFGMJI@DSA?5sign?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2119
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2120
	mov	edi, 1
$LN245@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2125
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2125
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BP@PEEMGHBC@?$CFld?5?$CFd?5bit?5DSA?5signs?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0BB@PPNEHGF@?$CLR3?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?dsa_bits@?1??speed_main@@9@9[esi*4]
	cmove	eax, ecx
	push	edi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2129
	movsd	xmm1, QWORD PTR _d$[esp+10616]
	mov	eax, esi
	movd	xmm0, edi
	add	esp, 24					; 00000018H
	cvtdq2pd xmm0, xmm0
	shl	eax, 4
	divsd	xmm1, xmm0
	movsd	QWORD PTR _dsa_results[eax], xmm1
$LN553@speed_main:
; Line 2133
	push	DWORD PTR _dsa_key$[esp+esi*4+10592]
	push	DWORD PTR _kk$2[esp+10596]
	push	DWORD PTR _buf2$1$[esp+10600]
	push	20					; 00000014H
	push	ebp
	push	116					; 00000074H
	call	_DSA_verify
	add	esp, 24					; 00000018H
; Line 2134
	test	eax, eax
	jg	$LN555@speed_main
; Line 2135
	push	OFFSET ??_C@_0DC@NIMDNICI@DSA?5verify?5failure?4?5?5No?5DSA?5veri@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2137
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2138
	mov	DWORD PTR _dsa_doit$[esp+esi*4+10592], 0
; Line 2139
	jmp	$LN556@speed_main
$LN555@speed_main:
; Line 2556
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
	push	10					; 0000000aH
	push	OFFSET ??_C@_03EAKOMMFI@dsa?$AA@
	push	OFFSET ??_C@_06MCIJCFHC@verify?$AA@
	push	DWORD PTR ?dsa_bits@?1??speed_main@@9@9[esi*4]
	mov	eax, OFFSET ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2559
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 313
	mov	DWORD PTR _lapse, 10000			; 00002710H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1196@speed_main
$LL1195@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1195@speed_main
$LN1196@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 2143
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 2143
	cmp	DWORD PTR _run, esi
	je	$LN248@speed_main
	npad	2
$LL249@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN248@speed_main
; Line 2144
	push	DWORD PTR tv6859[esp+10592]
	push	DWORD PTR _kk$2[esp+10596]
	push	DWORD PTR _buf2$1$[esp+10600]
	push	20					; 00000014H
	push	ebp
	push	116					; 00000074H
	call	_DSA_verify
	add	esp, 24					; 00000018H
; Line 2145
	test	eax, eax
	jle	$LN1431@speed_main
; Line 2143
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL249@speed_main
; Line 332
	jmp	$LN248@speed_main
$LN1431@speed_main:
; Line 2146
	push	OFFSET ??_C@_0BE@GJPMNCLN@DSA?5verify?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2147
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2148
	mov	esi, 1
$LN248@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2153
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2153
	call	__chkstk
	mov	eax, DWORD PTR _j$3$[esp+10600]
	mov	ecx, OFFSET ??_C@_0CA@NGPCPFDA@?$CFld?5?$CFd?5bit?5DSA?5verify?5in?5?$CF?42fs?6?$AA@
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	cmp	DWORD PTR _mr, 0
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?dsa_bits@?1??speed_main@@9@9[eax*4]
	mov	eax, OFFSET ??_C@_0BB@JEPMEIHP@?$CLR4?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
	push	esi
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2157
	movsd	xmm1, QWORD PTR _d$[esp+10616]
	add	esp, 24					; 00000018H
	movd	xmm0, esi
	cvtdq2pd xmm0, xmm0
	mov	esi, DWORD PTR _j$3$[esp+10592]
	mov	eax, esi
	shl	eax, 4
	divsd	xmm1, xmm0
	movsd	QWORD PTR _dsa_results[eax+8], xmm1
$LN556@speed_main:
; Line 2160
	cmp	edi, 1
	jg	$LN241@speed_main
; Line 2162
	lea	edx, DWORD PTR [esi+1]
	mov	esi, edx
	cmp	esi, 3
	jge	$LN241@speed_main
	mov	esi, 3
; Line 2163
	lea	edi, DWORD PTR _dsa_doit$[esp+10592]
	mov	ecx, esi
	lea	edi, DWORD PTR [edi+edx*4]
	sub	ecx, edx
	xor	eax, eax
	rep stosd
$LN241@speed_main:
; Line 2096
	inc	esi
	mov	DWORD PTR _j$3$[esp+10592], esi
	cmp	esi, 3
	jge	$LN2062@speed_main
	mov	edi, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
	jmp	$LL243@speed_main
$LN2062@speed_main:
; Line 2166
	cmp	DWORD PTR _rnd_fake, 0
	je	$LN559@speed_main
; Line 2167
	call	_RAND_cleanup
$LN559@speed_main:
; Line 2171
	call	_RAND_status
	cmp	eax, 1
	je	$LN560@speed_main
; Line 2172
	push	64					; 00000040H
	push	OFFSET _rnd_seed
	call	_RAND_seed
	add	esp, 8
; Line 2173
	mov	DWORD PTR _rnd_fake, 1
$LN560@speed_main:
; Line 2175
	xor	esi, esi
	mov	DWORD PTR _j$4$[esp+10592], esi
	npad	1
$LL255@speed_main:
; Line 2178
	cmp	DWORD PTR _ecdsa_doit$[esp+esi*4+10592], 0
	je	$LN253@speed_main
; Line 2180
	push	DWORD PTR ?test_curves@?1??speed_main@@9@9[esi*4]
	call	_EC_KEY_new_by_curve_name
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR tv6882[esp+10592], edi
	mov	DWORD PTR _ecdsa$[esp+esi*4+10592], edi
; Line 2181
	test	edi, edi
	jne	$LN562@speed_main
; Line 2182
	push	OFFSET ??_C@_0BA@FFIAAOAC@ECDSA?5failure?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2183
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2185
	jmp	$LN253@speed_main
$LN562@speed_main:
; Line 2187
	push	0
	push	edi
	call	_EC_KEY_precompute_mult
; Line 2190
	push	edi
	call	_EC_KEY_generate_key
; Line 2191
	push	edi
	lea	eax, DWORD PTR _ecdsasiglen$[esp+10608]
	push	eax
	lea	eax, DWORD PTR _ecdsasig$[esp+10612]
	push	eax
	push	20					; 00000014H
	push	ebp
	push	0
	call	_ECDSA_sign
	add	esp, 36					; 00000024H
; Line 2192
	test	eax, eax
	jne	$LN564@speed_main
; Line 2193
	push	OFFSET ??_C@_0DC@LLLMMFAB@ECDSA?5sign?5failure?4?5?5No?5ECDSA?5si@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2195
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2196
	mov	edi, 1
; Line 2197
	jmp	$LN565@speed_main
$LN564@speed_main:
; Line 2556
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
	push	10					; 0000000aH
	push	OFFSET ??_C@_05FGIDCBJD@ecdsa?$AA@
	push	OFFSET ??_C@_04HHGHLBPI@sign?$AA@
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[esi*4]
	mov	eax, OFFSET ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2559
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 313
	mov	DWORD PTR _lapse, 10000			; 00002710H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1212@speed_main
	npad	3
$LL1211@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1211@speed_main
$LN1212@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 2203
	xor	edi, edi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 2203
	cmp	DWORD PTR _run, edi
	je	$LN257@speed_main
	npad	9
$LL258@speed_main:
	cmp	edi, 2147483647				; 7fffffffH
	jge	$LN257@speed_main
; Line 2204
	push	DWORD PTR tv6882[esp+10592]
	lea	eax, DWORD PTR _ecdsasiglen$[esp+10596]
	push	eax
	lea	eax, DWORD PTR _ecdsasig$[esp+10600]
	push	eax
	push	20					; 00000014H
	push	ebp
	push	0
	call	_ECDSA_sign
	add	esp, 24					; 00000018H
; Line 2206
	test	eax, eax
	je	$LN1434@speed_main
; Line 2203
	inc	edi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL258@speed_main
; Line 332
	jmp	$LN257@speed_main
$LN1434@speed_main:
; Line 2207
	push	OFFSET ??_C@_0BE@LIPHCCNA@ECDSA?5sign?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2208
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2209
	mov	edi, 1
$LN257@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2215
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2215
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0CC@DNDLMOIH@?$CFld?5?$CFd?5bit?5ECDSA?5signs?5in?5?$CF?42fs?5@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0BB@CNAHJDJH@?$CLR5?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[esi*4]
	cmove	eax, ecx
	push	edi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2219
	movsd	xmm1, QWORD PTR _d$[esp+10616]
	mov	eax, esi
	movd	xmm0, edi
	add	esp, 24					; 00000018H
	cvtdq2pd xmm0, xmm0
	shl	eax, 4
	divsd	xmm1, xmm0
	movsd	QWORD PTR _ecdsa_results[eax], xmm1
$LN565@speed_main:
; Line 2224
	push	DWORD PTR tv6882[esp+10592]
	lea	eax, DWORD PTR _ecdsasig$[esp+10596]
	push	DWORD PTR _ecdsasiglen$[esp+10596]
	push	eax
	push	20					; 00000014H
	push	ebp
	push	0
	call	_ECDSA_verify
	add	esp, 24					; 00000018H
; Line 2225
	cmp	eax, 1
	je	$LN567@speed_main
; Line 2226
	push	OFFSET ??_C@_0DG@FLGECHDK@ECDSA?5verify?5failure?4?5?5No?5ECDSA?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2228
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2229
	mov	DWORD PTR _ecdsa_doit$[esp+esi*4+10592], 0
; Line 2230
	jmp	$LN568@speed_main
$LN567@speed_main:
; Line 2556
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
	push	10					; 0000000aH
	push	OFFSET ??_C@_05FGIDCBJD@ecdsa?$AA@
	push	OFFSET ??_C@_06MCIJCFHC@verify?$AA@
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[esi*4]
	mov	eax, OFFSET ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2559
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 313
	mov	DWORD PTR _lapse, 10000			; 00002710H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1228@speed_main
	npad	6
$LL1227@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1227@speed_main
$LN1228@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 2235
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 2235
	cmp	DWORD PTR _run, esi
	je	$LN260@speed_main
	npad	9
$LL261@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN260@speed_main
; Line 2236
	push	DWORD PTR tv6882[esp+10592]
	lea	eax, DWORD PTR _ecdsasig$[esp+10596]
	push	DWORD PTR _ecdsasiglen$[esp+10596]
	push	eax
	push	20					; 00000014H
	push	ebp
	push	0
	call	_ECDSA_verify
	add	esp, 24					; 00000018H
; Line 2239
	cmp	eax, 1
	jne	$LN1435@speed_main
; Line 2235
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL261@speed_main
; Line 332
	jmp	$LN260@speed_main
$LN1435@speed_main:
; Line 2240
	push	OFFSET ??_C@_0BG@MADIODMF@ECDSA?5verify?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2241
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2242
	mov	esi, 1
$LN260@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2247
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2247
	call	__chkstk
	mov	eax, DWORD PTR _j$4$[esp+10600]
	mov	ecx, OFFSET ??_C@_0CC@NHLBCNCE@?$CFld?5?$CFd?5bit?5ECDSA?5verify?5in?5?$CF?42fs@
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	cmp	DWORD PTR _mr, 0
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[eax*4]
	mov	eax, OFFSET ??_C@_0BB@DMHKPJOO@?$CLR6?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
	push	esi
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2251
	movsd	xmm1, QWORD PTR _d$[esp+10616]
	add	esp, 24					; 00000018H
	movd	xmm0, esi
	cvtdq2pd xmm0, xmm0
	mov	esi, DWORD PTR _j$4$[esp+10592]
	mov	eax, esi
	shl	eax, 4
	divsd	xmm1, xmm0
	movsd	QWORD PTR _ecdsa_results[eax+8], xmm1
$LN568@speed_main:
; Line 2254
	cmp	edi, 1
	jg	$LN253@speed_main
; Line 2256
	lea	edx, DWORD PTR [esi+1]
	mov	esi, edx
	cmp	esi, 16					; 00000010H
	jge	$LN253@speed_main
	mov	esi, 16					; 00000010H
; Line 2257
	lea	edi, DWORD PTR _ecdsa_doit$[esp+10592]
	mov	ecx, esi
	lea	edi, DWORD PTR [edi+edx*4]
	sub	ecx, edx
	xor	eax, eax
	rep stosd
$LN253@speed_main:
; Line 2175
	inc	esi
	mov	DWORD PTR _j$4$[esp+10592], esi
	cmp	esi, 16					; 00000010H
	jl	$LL255@speed_main
; Line 2261
	cmp	DWORD PTR _rnd_fake, 0
	je	$LN571@speed_main
; Line 2262
	call	_RAND_cleanup
$LN571@speed_main:
; Line 2266
	call	_RAND_status
	cmp	eax, 1
	je	$LN572@speed_main
; Line 2267
	push	64					; 00000040H
	push	OFFSET _rnd_seed
	call	_RAND_seed
	add	esp, 8
; Line 2268
	mov	DWORD PTR _rnd_fake, 1
$LN572@speed_main:
; Line 2270
	xor	edi, edi
	npad	10
$LL267@speed_main:
; Line 2271
	cmp	DWORD PTR _ecdh_doit$[esp+edi*4+10592], 0
	je	$LN265@speed_main
; Line 2273
	push	DWORD PTR ?test_curves@?1??speed_main@@9@9[edi*4]
	call	_EC_KEY_new_by_curve_name
; Line 2274
	push	DWORD PTR ?test_curves@?1??speed_main@@9@9[edi*4]
	mov	esi, eax
	mov	DWORD PTR tv6880[esp+10600], esi
	mov	DWORD PTR _ecdh_a$[esp+edi*4+10600], esi
	call	_EC_KEY_new_by_curve_name
	add	esp, 8
	mov	DWORD PTR tv6879[esp+10592], eax
	mov	DWORD PTR _ecdh_b$[esp+edi*4+10592], eax
; Line 2275
	test	esi, esi
	je	$LN576@speed_main
	test	eax, eax
	je	$LN576@speed_main
; Line 2281
	push	esi
	call	_EC_KEY_generate_key
	add	esp, 4
	test	eax, eax
	je	$LN579@speed_main
	push	DWORD PTR tv6879[esp+10592]
	call	_EC_KEY_generate_key
	add	esp, 4
	test	eax, eax
	je	$LN579@speed_main
; Line 2295
	push	esi
	call	_EC_KEY_get0_group
	push	eax
	call	_EC_GROUP_get_degree
	add	esp, 8
; Line 2297
	cmp	eax, 192				; 000000c0H
	jg	$LN580@speed_main
; Line 2298
	mov	DWORD PTR _outlen$1$[esp+10592], 20	; 00000014H
; Line 2299
	mov	eax, OFFSET _KDF1_SHA1
; Line 2300
	jmp	$LN2470@speed_main
$LN580@speed_main:
; Line 2301
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _outlen$1$[esp+10592], eax
; Line 2302
	xor	eax, eax
$LN2470@speed_main:
; Line 2304
	push	eax
	push	esi
	push	DWORD PTR tv6879[esp+10600]
	mov	DWORD PTR _kdf$1$[esp+10604], eax
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	DWORD PTR _outlen$1$[esp+10604]
	lea	eax, DWORD PTR _secret_a$[esp+10608]
	push	eax
	call	_ECDH_compute_key
	add	esp, 20					; 00000014H
	mov	DWORD PTR _secret_size_a$1$[esp+10592], eax
; Line 2308
	push	DWORD PTR _kdf$1$[esp+10592]
	push	DWORD PTR tv6879[esp+10596]
	push	esi
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	DWORD PTR _outlen$1$[esp+10604]
	lea	eax, DWORD PTR _secret_b$[esp+10608]
	push	eax
	call	_ECDH_compute_key
; Line 2312
	mov	esi, DWORD PTR _secret_size_a$1$[esp+10612]
	xor	ecx, ecx
	add	esp, 20					; 00000014H
	cmp	esi, eax
	sete	cl
; Line 2317
	xor	edx, edx
; Line 2318
	test	esi, esi
	jle	$LN2456@speed_main
	npad	6
$LL270@speed_main:
	cmp	ecx, 1
	jne	$LN2456@speed_main
; Line 2319
	mov	al, BYTE PTR _secret_a$[esp+edx+10592]
	cmp	al, BYTE PTR _secret_b$[esp+edx+10592]
	mov	DWORD PTR tv6195[esp+10592], 0
	cmovne	ecx, DWORD PTR tv6195[esp+10592]
	inc	edx
	cmp	edx, esi
	jl	SHORT $LL270@speed_main
$LN2456@speed_main:
; Line 2323
	test	ecx, ecx
	jne	$LN585@speed_main
; Line 2324
	push	OFFSET ??_C@_0CA@LDDJOMDJ@ECDH?5computations?5don?8t?5match?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2325
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
$LN585@speed_main:
; Line 2556
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
	push	10					; 0000000aH
	push	OFFSET ??_C@_04KDGGCKGB@ecdh?$AA@
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[edi*4]
	mov	eax, OFFSET ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2559
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 313
	mov	DWORD PTR _lapse, 10000			; 00002710H
; Line 330
	mov	DWORD PTR _schlock, 0
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	je	$LN1397@speed_main
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	$LN1244@speed_main
	npad	2
$LL1243@speed_main:
; Line 339
	push	0
	call	ebx
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL1243@speed_main
$LN1244@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	0
	call	_app_tminterval
; Line 2333
	xor	esi, esi
	mov	DWORD PTR _run, 1
; Line 342
	add	esp, 8
	fstp	ST(0)
; Line 2333
	cmp	DWORD PTR _run, esi
	je	$LN272@speed_main
	mov	ebx, DWORD PTR tv6880[esp+10592]
	mov	ebp, DWORD PTR tv6879[esp+10592]
	npad	1
$LL273@speed_main:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN2457@speed_main
; Line 2334
	push	DWORD PTR _kdf$1$[esp+10592]
	push	ebx
	push	ebp
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	DWORD PTR _outlen$1$[esp+10604]
	lea	eax, DWORD PTR _secret_a$[esp+10608]
	push	eax
	call	_ECDH_compute_key
	add	esp, 20					; 00000014H
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	SHORT $LL273@speed_main
$LN2457@speed_main:
	mov	ebx, DWORD PTR __imp__Sleep@4
$LN272@speed_main:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2339
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+10592]
; Line 2339
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+10600]
	mov	ecx, OFFSET ??_C@_0BO@NPGEHCMI@?$CFld?5?$CFd?9bit?5ECDH?5ops?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0BB@IFIBCCAG@?$CLR7?3?$CFld?3?$CFd?3?$CF?42f?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[edi*4]
	cmove	eax, ecx
	push	esi
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2343
	movsd	xmm1, QWORD PTR _d$[esp+10616]
	add	esp, 24					; 00000018H
	movd	xmm0, esi
	cvtdq2pd xmm0, xmm0
	divsd	xmm1, xmm0
	movsd	QWORD PTR _ecdh_results[edi*8], xmm1
; Line 2348
	cmp	esi, 1
	jg	$LN265@speed_main
	jmp	$LN2058@speed_main
$LN579@speed_main:
; Line 2283
	push	OFFSET ??_C@_0BO@FHGEFKLE@ECDH?5key?5generation?5failure?4?6?$AA@
; Line 2286
	jmp	$LN2471@speed_main
$LN576@speed_main:
; Line 2276
	push	OFFSET ??_C@_0P@CJCFIJHN@ECDH?5failure?4?6?$AA@
$LN2471@speed_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2277
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
$LN2058@speed_main:
; Line 2350
	lea	edx, DWORD PTR [edi+1]
	mov	edi, edx
	cmp	edi, 16					; 00000010H
	jge	$LN265@speed_main
; Line 2351
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR _ecdh_doit$[esp+10592]
	sub	ecx, edx
	lea	edi, DWORD PTR [edi+edx*4]
	xor	eax, eax
	rep stosd
	mov	edi, 16					; 00000010H
$LN265@speed_main:
; Line 2270
	inc	edi
	cmp	edi, 16					; 00000010H
	jl	$LL267@speed_main
; Line 2354
	cmp	DWORD PTR _rnd_fake, 0
	je	$LN587@speed_main
; Line 2355
	call	_RAND_cleanup
$LN587@speed_main:
; Line 2360
	cmp	DWORD PTR _mr, 0
	jne	$LN2461@speed_main
; Line 2361
	push	0
	call	_SSLeay_version
	mov	edi, DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2362
	push	3
	call	_SSLeay_version
	add	esp, 16					; 00000010H
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2363
	push	OFFSET ??_C@_08LCCFPGMC@options?3?$AA@
	call	_printf
; Line 2364
	call	_BN_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 2369
	call	_RC4_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 2372
	call	_DES_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 2375
	call	_AES_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 2378
	call	_idea_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 2381
	call	_BF_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
	add	esp, 64					; 00000040H
; Line 2383
	push	2
	call	_SSLeay_version
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_04EINJHBMM@?6?$CFs?6?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
	jmp	$LN588@speed_main
$LN2461@speed_main:
	mov	edi, DWORD PTR __imp____acrt_iob_func
$LN588@speed_main:
; Line 2386
	cmp	DWORD PTR _pr_header$1$[esp+10592], 0
	je	$LN589@speed_main
; Line 2387
	cmp	DWORD PTR _mr, 0
	je	$LN590@speed_main
; Line 2388
	push	OFFSET ??_C@_02MAGEKOB@?$CLH?$AA@
	jmp	$LN2472@speed_main
$LN590@speed_main:
; Line 2390
	push	OFFSET ??_C@_0DL@LIPMFNH@The?5?8numbers?8?5are?5in?51000s?5of?5by@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2392
	push	OFFSET ??_C@_0N@IFGFLHOK@type?5?5?5?5?5?5?5?5?$AA@
$LN2472@speed_main:
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2394
	mov	esi, OFFSET _lengths
	mov	ebx, OFFSET ??_C@_09HLOAFNAB@?$CF7d?5bytes?$AA@
	npad	13
$LL279@speed_main:
; Line 2395
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_03HODKBCIO@?3?$CFd?$AA@
	push	DWORD PTR [esi]
	cmove	eax, ebx
	push	eax
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esi, 4
	add	esp, 12					; 0000000cH
	cmp	esi, OFFSET _lengths+20
	jl	SHORT $LL279@speed_main
; Line 2396
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN589@speed_main:
; Line 2399
	xor	ebx, ebx
	mov	ebp, OFFSET _results
	mov	DWORD PTR _k$1$[esp+10592], ebx
	npad	3
$LL282@speed_main:
; Line 2400
	cmp	DWORD PTR _doit$[esp+ebx*4+10592], 0
	je	$LN280@speed_main
; Line 2402
	cmp	DWORD PTR _mr, 0
; Line 2403
	push	DWORD PTR _names[ebx*4]
	je	$LN593@speed_main
	push	ebx
	push	OFFSET ??_C@_08GEGCDFKK@?$CLF?3?$CFd?3?$CFs?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
	jmp	$LN594@speed_main
$LN593@speed_main:
; Line 2405
	push	OFFSET ??_C@_05EKKFMPFE@?$CF?913s?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN594@speed_main:
; Line 2406
	mov	esi, ebp
	mov	edi, 5
	mov	ebx, OFFSET ??_C@_08BGKOENFB@?5?$CF11?42f?5?$AA@
	npad	2
$LL285@speed_main:
; Line 2407
	movsd	xmm0, QWORD PTR [esi]
	comisd	xmm0, QWORD PTR __real@40c3880000000000
	mov	ecx, DWORD PTR _mr
	jbe	$LN595@speed_main
	test	ecx, ecx
	jne	$LN595@speed_main
; Line 2408
	divsd	xmm0, QWORD PTR __real@408f400000000000
	lea	eax, DWORD PTR [ecx+8]
	call	__chkstk
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08FCDNLJP@?5?$CF11?42fk?$AA@
	jmp	$LN2473@speed_main
$LN595@speed_main:
; Line 2410
	mov	eax, 8
	call	__chkstk
	test	ecx, ecx
	movsd	QWORD PTR [esp], xmm0
	mov	eax, OFFSET ??_C@_05LGFIPPDB@?3?$CF?42f?$AA@
	cmove	eax, ebx
	push	eax
$LN2473@speed_main:
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
	add	esi, 8
	sub	edi, 1
	jne	SHORT $LL285@speed_main
; Line 2412
	mov	edi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	mov	ebx, DWORD PTR _k$1$[esp+10600]
	add	esp, 8
$LN280@speed_main:
; Line 2399
	inc	ebx
	add	ebp, 40					; 00000028H
	mov	DWORD PTR _k$1$[esp+10592], ebx
	cmp	ebp, OFFSET _results+1200
	jl	$LL282@speed_main
; Line 2415
	movsd	xmm3, QWORD PTR __real@3ff0000000000000
	mov	ebx, 1
	mov	ebp, DWORD PTR _buf$1$[esp+10592]
; Line 2416
	xor	edi, edi
	mov	esi, OFFSET _rsa_results
$LL288@speed_main:
; Line 2417
	cmp	DWORD PTR _rsa_doit$[esp+edi*4+10592], 0
	je	$LN286@speed_main
; Line 2419
	test	ebx, ebx
	je	$LN598@speed_main
	cmp	DWORD PTR _mr, 0
	jne	$LN2055@speed_main
; Line 2420
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	OFFSET ??_C@_0CH@INPMAKDM@?$CF18ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@
	call	_printf
	movsd	xmm3, QWORD PTR __real@3ff0000000000000
	add	esp, 8
; Line 2421
	xor	ebx, ebx
$LN598@speed_main:
; Line 2423
	cmp	DWORD PTR _mr, 0
	je	$LN599@speed_main
$LN2055@speed_main:
; Line 2424
	mov	eax, 8
	call	__chkstk
	movsd	xmm0, QWORD PTR [esi+8]
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	call	__chkstk
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?rsa_bits@?1??speed_main@@9@9[edi*4]
	push	edi
	push	OFFSET ??_C@_0BB@JLMGHPLN@?$CLF2?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 32					; 00000020H
	jmp	$LN2474@speed_main
$LN599@speed_main:
; Line 2427
	movsd	xmm1, QWORD PTR [esi+8]
	movaps	xmm0, xmm3
	movsd	xmm2, QWORD PTR [esi]
	mov	eax, 8
	divsd	xmm0, xmm1
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	movaps	xmm0, xmm3
	divsd	xmm0, xmm2
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm1
	call	__chkstk
	movsd	QWORD PTR [esp], xmm2
	push	DWORD PTR ?rsa_bits@?1??speed_main@@9@9[edi*4]
	push	OFFSET ??_C@_0CI@DLLFJDPI@rsa?5?$CF4u?5bits?5?$CF8?46fs?5?$CF8?46fs?5?$CF8?41f@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 44					; 0000002cH
$LN2474@speed_main:
	movsd	xmm3, QWORD PTR __real@3ff0000000000000
$LN286@speed_main:
; Line 2416
	add	esi, 16					; 00000010H
	inc	edi
	cmp	esi, OFFSET _rsa_results+64
	jl	$LL288@speed_main
; Line 2433
	mov	ebx, 1
; Line 2434
	xor	edi, edi
	mov	esi, OFFSET _dsa_results
$LL291@speed_main:
; Line 2435
	cmp	DWORD PTR _dsa_doit$[esp+edi*4+10592], 0
	je	$LN289@speed_main
; Line 2437
	test	ebx, ebx
	je	$LN602@speed_main
	cmp	DWORD PTR _mr, 0
	jne	$LN2054@speed_main
; Line 2438
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	OFFSET ??_C@_0CH@INPMAKDM@?$CF18ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@
	call	_printf
	add	esp, 8
; Line 2439
	xor	ebx, ebx
$LN602@speed_main:
; Line 2441
	cmp	DWORD PTR _mr, 0
	je	$LN603@speed_main
$LN2054@speed_main:
; Line 2442
	mov	eax, 8
	call	__chkstk
	movsd	xmm0, QWORD PTR [esi+8]
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	call	__chkstk
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?dsa_bits@?1??speed_main@@9@9[edi*4]
	push	edi
	push	OFFSET ??_C@_0BB@CCDNKEFF@?$CLF3?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 32					; 00000020H
	jmp	$LN289@speed_main
$LN603@speed_main:
; Line 2445
	movsd	xmm1, QWORD PTR [esi+8]
	mov	eax, 8
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	xmm2, QWORD PTR [esi]
	divsd	xmm0, xmm1
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	divsd	xmm0, xmm2
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm1
	call	__chkstk
	movsd	QWORD PTR [esp], xmm2
	push	DWORD PTR ?dsa_bits@?1??speed_main@@9@9[edi*4]
	push	OFFSET ??_C@_0CI@JKCLPBBG@dsa?5?$CF4u?5bits?5?$CF8?46fs?5?$CF8?46fs?5?$CF8?41f@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 44					; 0000002cH
$LN289@speed_main:
; Line 2434
	add	esi, 16					; 00000010H
	inc	edi
	cmp	esi, OFFSET _dsa_results+48
	jl	$LL291@speed_main
; Line 2451
	mov	ebx, 1
; Line 2452
	xor	edi, edi
	mov	esi, OFFSET _ecdsa_results
	npad	6
$LL294@speed_main:
; Line 2453
	cmp	DWORD PTR _ecdsa_doit$[esp+edi*4+10592], 0
	je	$LN292@speed_main
; Line 2455
	test	ebx, ebx
	je	$LN606@speed_main
	cmp	DWORD PTR _mr, 0
	jne	$LN2053@speed_main
; Line 2456
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	OFFSET ??_C@_0CH@JBDKFKMH@?$CF30ssign?5?5?5?5verify?5?5?5?5sign?1s?5ver@
	call	_printf
	add	esp, 8
; Line 2457
	xor	ebx, ebx
$LN606@speed_main:
; Line 2460
	cmp	DWORD PTR _mr, 0
	je	$LN607@speed_main
$LN2053@speed_main:
; Line 2461
	mov	eax, 8
	call	__chkstk
	movsd	xmm0, QWORD PTR [esi+8]
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	call	__chkstk
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[edi*4]
	push	edi
	push	OFFSET ??_C@_0BB@LJDMKLEP@?$CLF4?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 32					; 00000020H
	jmp	$LN292@speed_main
$LN607@speed_main:
; Line 2465
	movsd	xmm1, QWORD PTR [esi+8]
	mov	eax, 8
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	xmm2, QWORD PTR [esi]
	divsd	xmm0, xmm1
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	divsd	xmm0, xmm2
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm1
	call	__chkstk
	movsd	QWORD PTR [esp], xmm2
	push	DWORD PTR ?test_curves_names@?1??speed_main@@9@9[edi*4]
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[edi*4]
	push	OFFSET ??_C@_0CO@PGONPIAO@?$CF4u?5bit?5ecdsa?5?$CI?$CFs?$CJ?5?$CF8?44fs?5?$CF8?44fs@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 48					; 00000030H
$LN292@speed_main:
; Line 2452
	add	esi, 16					; 00000010H
	inc	edi
	cmp	esi, OFFSET _ecdsa_results+256
	jl	$LL294@speed_main
; Line 2475
	mov	edi, 1
; Line 2476
	xor	esi, esi
	npad	4
$LL297@speed_main:
; Line 2477
	cmp	DWORD PTR _ecdh_doit$[esp+esi*4+10592], 0
	je	$LN295@speed_main
; Line 2479
	test	edi, edi
	je	$LN610@speed_main
	cmp	DWORD PTR _mr, 0
	jne	$LN2052@speed_main
; Line 2480
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	OFFSET ??_C@_0BC@PMAHPJDG@?$CF30sop?5?5?5?5?5?5op?1s?6?$AA@
	call	_printf
	add	esp, 8
; Line 2481
	xor	edi, edi
$LN610@speed_main:
; Line 2483
	cmp	DWORD PTR _mr, 0
	je	$LN611@speed_main
$LN2052@speed_main:
; Line 2484
	movsd	xmm1, QWORD PTR _ecdh_results[esi*8]
	mov	eax, 8
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	divsd	xmm0, xmm1
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	call	__chkstk
	movsd	QWORD PTR [esp], xmm1
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[esi*4]
	push	esi
	push	OFFSET ??_C@_0BB@MHHAKH@?$CLF5?3?$CFu?3?$CFu?3?$CFf?3?$CFf?6?$AA@
	jmp	$LN2475@speed_main
$LN611@speed_main:
; Line 2489
	movsd	xmm1, QWORD PTR _ecdh_results[esi*8]
	mov	eax, 8
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	divsd	xmm0, xmm1
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	call	__chkstk
	movsd	QWORD PTR [esp], xmm1
	push	DWORD PTR ?test_curves_names@?1??speed_main@@9@9[esi*4]
	push	DWORD PTR ?test_curves_bits@?1??speed_main@@9@9[esi*4]
	push	OFFSET ??_C@_0CA@JNGHOBN@?$CF4u?5bit?5ecdh?5?$CI?$CFs?$CJ?5?$CF8?44fs?5?$CF8?41f?6?$AA@
$LN2475@speed_main:
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 32					; 00000020H
$LN295@speed_main:
; Line 2476
	inc	esi
	cmp	esi, 16					; 00000010H
	jl	$LL297@speed_main
; Line 2496
	mov	edi, DWORD PTR _buf2$1$[esp+10592]
	xor	ebx, ebx
	jmp	$end$2483
$LN1396@speed_main:
; Line 1268
	push	edi
	push	OFFSET ??_C@_0CK@KKENKNEI@internal?5error?5loading?5RSA?5key?5n@
$LN2479@speed_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
$LN2480@speed_main:
	add	esp, 12					; 0000000cH
$LN2478@speed_main:
	mov	edi, DWORD PTR _buf2$1$[esp+10592]
$LN2462@speed_main:
	mov	ebx, 1
$end$2483:
; Line 2499
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 2500
	test	ebp, ebp
	je	$LN613@speed_main
; Line 2501
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN613@speed_main:
; Line 2502
	test	edi, edi
	je	$LN614@speed_main
; Line 2503
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN614@speed_main:
; Line 2505
	xor	esi, esi
	npad	9
$LL300@speed_main:
; Line 2506
	mov	eax, DWORD PTR _rsa_key$[esp+esi*4+10592]
	test	eax, eax
	je	$LN298@speed_main
; Line 2507
	push	eax
	call	_RSA_free
	add	esp, 4
$LN298@speed_main:
; Line 2505
	inc	esi
	cmp	esi, 4
	jl	SHORT $LL300@speed_main
; Line 2510
	xor	esi, esi
$LL303@speed_main:
; Line 2511
	mov	eax, DWORD PTR _dsa_key$[esp+esi*4+10592]
	test	eax, eax
	je	$LN301@speed_main
; Line 2512
	push	eax
	call	_DSA_free
	add	esp, 4
$LN301@speed_main:
; Line 2510
	inc	esi
	cmp	esi, 3
	jl	SHORT $LL303@speed_main
; Line 2516
	xor	esi, esi
$LL306@speed_main:
; Line 2517
	mov	eax, DWORD PTR _ecdsa$[esp+esi*4+10592]
	test	eax, eax
	je	$LN304@speed_main
; Line 2518
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN304@speed_main:
; Line 2516
	inc	esi
	cmp	esi, 16					; 00000010H
	jl	SHORT $LL306@speed_main
; Line 2521
	xor	esi, esi
$LL309@speed_main:
; Line 2522
	mov	eax, DWORD PTR _ecdh_a$[esp+esi+10592]
	test	eax, eax
	je	$LN618@speed_main
; Line 2523
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN618@speed_main:
; Line 2524
	mov	eax, DWORD PTR _ecdh_b$[esp+esi+10592]
	test	eax, eax
	je	$LN307@speed_main
; Line 2525
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN307@speed_main:
; Line 2521
	add	esi, 4
	cmp	esi, 64					; 00000040H
	jl	SHORT $LL309@speed_main
; Line 2531
	mov	ecx, DWORD PTR __$ArrayPad$[esp+10592]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 10576				; 00002950H
	ret	0
$LN2481@speed_main:
_speed_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _multiblock_speed
_TEXT	SEGMENT
_alg_name$1$ = -256					; size = 4
_inp$1$ = -252						; size = 4
tv647 = -248						; size = 4
_d$ = -248						; size = 8
tv666 = -236						; size = 4
_mb_param$1 = -232					; size = 16
_ctx$ = -216						; size = 140
_aad$2 = -68						; size = 13
_no_iv$ = -52						; size = 16
_no_key$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_evp_cipher$ = 8					; size = 4
_multiblock_speed PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 2767
	push	ebp
	mov	ebp, esp
	and	esp, -64				; ffffffc0H
	mov	eax, 308				; 00000134H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+308], eax
	push	ebx
	push	esi
	mov	esi, DWORD PTR _evp_cipher$[ebp]
	push	edi
; Line 2776
	push	2776					; 00000ad8H
	push	OFFSET ??_C@_0P@MPGKMPDA@?4?2apps?2speed?4c?$AA@
	push	DWORD PTR ?mblengths@?1??multiblock_speed@@9@9+16
	call	_CRYPTO_malloc
; Line 2777
	mov	ecx, DWORD PTR ?mblengths@?1??multiblock_speed@@9@9+16
	mov	ebx, eax
	push	2777					; 00000ad9H
	add	ecx, 1024				; 00000400H
	mov	DWORD PTR _inp$1$[esp+336], ebx
	push	OFFSET ??_C@_0P@MPGKMPDA@?4?2apps?2speed?4c?$AA@
	push	ecx
	call	_CRYPTO_malloc
	add	esp, 24					; 00000018H
	mov	edi, eax
; Line 2778
	test	ebx, ebx
	je	$LN21@multiblock
	test	edi, edi
	je	$LN21@multiblock
; Line 2784
	lea	eax, DWORD PTR _ctx$[esp+320]
	push	eax
	call	_EVP_CIPHER_CTX_init
; Line 2785
	lea	eax, DWORD PTR _no_iv$[esp+324]
	push	eax
	lea	eax, DWORD PTR _no_key$[esp+328]
	push	eax
	push	0
	lea	eax, DWORD PTR _ctx$[esp+336]
	push	esi
	push	eax
	call	_EVP_EncryptInit_ex
; Line 2786
	lea	eax, DWORD PTR _no_key$[esp+344]
	push	eax
	push	32					; 00000020H
	lea	eax, DWORD PTR _ctx$[esp+352]
	push	23					; 00000017H
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
; Line 2788
	push	DWORD PTR [esi]
	call	_OBJ_nid2ln
	mov	ebx, OFFSET ?mblengths@?1??multiblock_speed@@9@9
	mov	DWORD PTR _alg_name$1$[esp+364], eax
	add	esp, 44					; 0000002cH
	mov	DWORD PTR tv666[esp+320], OFFSET _results+880
	mov	DWORD PTR tv647[esp+320], ebx
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
$LL4@multiblock:
; Line 2536
	push	DWORD PTR [ebx]
	cmp	DWORD PTR _mr, 0
	push	3
	push	eax
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
; Line 2792
	push	0
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 2792
	call	_Time_F
; Line 2793
	xor	esi, esi
	mov	DWORD PTR _run, 1
	add	esp, 40					; 00000028H
	fstp	ST(0)
	cmp	DWORD PTR _run, esi
	je	$LN70@multiblock
$LL7@multiblock:
	cmp	esi, 2147483647				; 7fffffffH
	jge	$LN70@multiblock
; Line 2796
	mov	ebx, DWORD PTR [ebx]
; Line 2806
	lea	eax, DWORD PTR _aad$2[esp+320]
	mov	DWORD PTR _mb_param$1[esp+324], eax
	xorps	xmm0, xmm0
; Line 2810
	lea	eax, DWORD PTR _mb_param$1[esp+320]
	movq	QWORD PTR _aad$2[esp+320], xmm0
	push	eax
	push	16					; 00000010H
	lea	eax, DWORD PTR _ctx$[esp+328]
	mov	DWORD PTR _aad$2[esp+336], 131863	; 00020317H
	push	25					; 00000019H
	push	eax
	mov	BYTE PTR _aad$2[esp+348], 0
	mov	DWORD PTR _mb_param$1[esp+336], 0
	mov	DWORD PTR _mb_param$1[esp+344], ebx
	mov	DWORD PTR _mb_param$1[esp+348], 8
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
; Line 2814
	test	eax, eax
	jle	SHORT $LN22@multiblock
; Line 2816
	mov	eax, DWORD PTR _inp$1$[esp+320]
	mov	DWORD PTR _mb_param$1[esp+324], eax
; Line 2818
	lea	eax, DWORD PTR _mb_param$1[esp+320]
	push	eax
	push	16					; 00000010H
	lea	eax, DWORD PTR _ctx$[esp+328]
	mov	DWORD PTR _mb_param$1[esp+328], edi
	push	26					; 0000001aH
	push	eax
	mov	DWORD PTR _mb_param$1[esp+344], ebx
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
; Line 2821
	jmp	SHORT $LN5@multiblock
$LN22@multiblock:
; Line 2824
	push	16					; 00000010H
	push	edi
	call	_RAND_bytes
; Line 2825
	add	ebx, 16					; 00000010H
; Line 2826
	mov	eax, ebx
; Line 2827
	mov	BYTE PTR _aad$2[esp+340], bl
	shr	eax, 8
	mov	BYTE PTR _aad$2[esp+339], al
; Line 2828
	lea	eax, DWORD PTR _aad$2[esp+328]
	push	eax
	push	13					; 0000000dH
	lea	eax, DWORD PTR _ctx$[esp+336]
	push	22					; 00000016H
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
; Line 2831
	add	eax, ebx
	push	eax
	push	DWORD PTR _inp$1$[esp+348]
	lea	eax, DWORD PTR _ctx$[esp+352]
	push	edi
	push	eax
	call	_EVP_Cipher
	add	esp, 40					; 00000028H
$LN5@multiblock:
; Line 2793
	mov	ebx, DWORD PTR tv647[esp+320]
	inc	esi
	cmp	DWORD PTR _run, 0
	jne	$LL7@multiblock
$LN70@multiblock:
; Line 342
	push	DWORD PTR _usertime
	push	1
	call	_app_tminterval
	add	esp, 8
; Line 2835
	mov	eax, 8
; Line 342
	fstp	QWORD PTR _d$[esp+320]
; Line 2835
	call	__chkstk
	movsd	xmm0, QWORD PTR _d$[esp+328]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	cmp	DWORD PTR _mr, 0
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_03KNAAEKMG@evp?$AA@
	push	esi
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm1, esi
	add	esp, 24					; 00000018H
; Line 2838
	cvtdq2pd xmm1, xmm1
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	mov	eax, DWORD PTR tv666[esp+320]
	movd	xmm0, DWORD PTR [ebx]
	add	ebx, 4
	divsd	xmm1, QWORD PTR _d$[esp+320]
	mov	DWORD PTR tv647[esp+320], ebx
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR [eax], xmm1
	add	eax, 8
	mov	DWORD PTR tv666[esp+320], eax
	mov	eax, DWORD PTR _alg_name$1$[esp+320]
	cmp	ebx, OFFSET ?mblengths@?1??multiblock_speed@@9@9+20
	jl	$LL4@multiblock
; Line 2841
	cmp	DWORD PTR _mr, 0
; Line 2842
	mov	ebx, DWORD PTR __imp____acrt_iob_func
	je	$LN24@multiblock
	push	OFFSET ??_C@_02MAGEKOB@?$CLH?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
	mov	esi, OFFSET ?mblengths@?1??multiblock_speed@@9@9
$LL10@multiblock:
; Line 2844
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_03HODKBCIO@?3?$CFd?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esi, 4
	add	esp, 12					; 0000000cH
	cmp	esi, OFFSET ?mblengths@?1??multiblock_speed@@9@9+20
	jl	SHORT $LL10@multiblock
; Line 2845
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2846
	push	DWORD PTR _alg_name$1$[esp+320]
	push	22					; 00000016H
	push	OFFSET ??_C@_08GEGCDFKK@?$CLF?3?$CFd?3?$CFs?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
	mov	esi, OFFSET _results+880
	npad	6
$LL13@multiblock:
; Line 2848
	mov	eax, 8
	call	__chkstk
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05LGFIPPDB@?3?$CF?42f?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esi, 8
	add	esp, 16					; 00000010H
	cmp	esi, OFFSET _results+920
	jl	SHORT $LL13@multiblock
$LN73@multiblock:
; Line 2849
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2850
	jmp	$LN71@multiblock
$LN24@multiblock:
; Line 2851
	push	OFFSET ??_C@_0DL@LIPMFNH@The?5?8numbers?8?5are?5in?51000s?5of?5by@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2853
	push	OFFSET ??_C@_0BJ@NCDMCIJA@type?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
	mov	esi, OFFSET ?mblengths@?1??multiblock_speed@@9@9
	npad	7
$LL16@multiblock:
; Line 2855
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_09HLOAFNAB@?$CF7d?5bytes?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esi, 4
	add	esp, 12					; 0000000cH
	cmp	esi, OFFSET ?mblengths@?1??multiblock_speed@@9@9+20
	jl	SHORT $LL16@multiblock
; Line 2856
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2857
	push	DWORD PTR _alg_name$1$[esp+320]
	push	OFFSET ??_C@_05FNFPHGDP@?$CF?924s?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
	mov	esi, OFFSET _results+880
$LL19@multiblock:
; Line 2860
	movsd	xmm0, QWORD PTR [esi]
; Line 2861
	mov	eax, 8
	comisd	xmm0, QWORD PTR __real@40c3880000000000
	jbe	SHORT $LN26@multiblock
	divsd	xmm0, QWORD PTR __real@408f400000000000
	call	__chkstk
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08FCDNLJP@?5?$CF11?42fk?$AA@
	jmp	SHORT $LN72@multiblock
$LN26@multiblock:
; Line 2863
	call	__chkstk
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08BGKOENFB@?5?$CF11?42f?5?$AA@
$LN72@multiblock:
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esi, 8
	add	esp, 16					; 00000010H
	cmp	esi, OFFSET _results+920
	jl	SHORT $LL19@multiblock
; Line 2865
	jmp	$LN73@multiblock
$LN21@multiblock:
; Line 2779
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
$LN71@multiblock:
	add	esp, 8
$end$75:
; Line 2869
	mov	eax, DWORD PTR _inp$1$[esp+320]
	test	eax, eax
	je	SHORT $LN28@multiblock
; Line 2870
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN28@multiblock:
; Line 2871
	test	edi, edi
	je	SHORT $LN29@multiblock
; Line 2872
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN29@multiblock:
; Line 2873
	mov	ecx, DWORD PTR __$ArrayPad$[esp+320]
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_multiblock_speed ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _KDF1_SHA1
_TEXT	SEGMENT
_in$ = 8						; size = 4
_inlen$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_KDF1_SHA1 PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 358
	mov	eax, DWORD PTR _outlen$[esp-4]
	cmp	DWORD PTR [eax], 20			; 00000014H
	jae	SHORT $LN2@KDF1_SHA1
; Line 359
	xor	eax, eax
; Line 366
	ret	0
$LN2@KDF1_SHA1:
; Line 362
	push	DWORD PTR _out$[esp-4]
	mov	DWORD PTR [eax], 20			; 00000014H
	push	DWORD PTR _inlen$[esp]
	push	DWORD PTR _in$[esp+4]
	call	_SHA1
	add	esp, 12					; 0000000cH
; Line 366
	ret	0
_KDF1_SHA1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sleepy@4
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_sleepy@4 PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 321
	push	DWORD PTR _lapse
	mov	DWORD PTR _schlock, 1
	call	DWORD PTR __imp__Sleep@4
; Line 322
	mov	DWORD PTR _run, 0
; Line 323
	xor	eax, eax
; Line 324
	ret	4
_sleepy@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _alarm_win32
_TEXT	SEGMENT
_secs$ = 8						; size = 4
_alarm_win32 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 313
	imul	eax, DWORD PTR _secs$[esp-4], 1000
	mov	DWORD PTR _lapse, eax
; Line 314
	ret	0
_alarm_win32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_result
_TEXT	SEGMENT
_alg$ = 8						; size = 4
_run_no$ = 12						; size = 4
_count$ = 16						; size = 4
_time_used$ = 20					; size = 8
_print_result PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 2573
	push	edi
; Line 2574
	mov	eax, 8
	call	__chkstk
	mov	edi, DWORD PTR _alg$[esp+8]
	mov	ecx, OFFSET ??_C@_0BC@IJHBHNDB@?$CFd?5?$CFs?8s?5in?5?$CF?42fs?6?$AA@
	movsd	xmm0, QWORD PTR _time_used$[esp+8]
	mov	eax, OFFSET ??_C@_0N@NILEAEMO@?$CLR?3?$CFd?3?$CFs?3?$CFf?6?$AA@
	cmp	DWORD PTR _mr, 0
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _names[edi*4]
	cmove	eax, ecx
	push	DWORD PTR _count$[esp+12]
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
	movd	xmm0, DWORD PTR _count$[esp+24]
	add	esp, 24					; 00000018H
; Line 2577
	cvtdq2pd xmm0, xmm0
	mov	eax, DWORD PTR _run_no$[esp]
	movd	xmm1, DWORD PTR _lengths[eax*4]
	lea	eax, DWORD PTR [eax+edi*4]
	divsd	xmm0, QWORD PTR _time_used$[esp]
	add	eax, edi
	pop	edi
	cvtdq2pd xmm1, xmm1
	mulsd	xmm1, xmm0
	movsd	QWORD PTR _results[eax*8], xmm1
; Line 2578
	ret	0
_print_result ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_print_message
_TEXT	SEGMENT
_str$ = 8						; size = 4
_str2$ = 12						; size = 4
_num$ = 16						; size = 4
_bits$ = 20						; size = 4
_tm$ = 24						; size = 4
_pkey_print_message PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 2556
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0BP@MLJLLDHN@Doing?5?$CFd?5bit?5?$CFs?5?$CFs?8s?5for?5?$CFds?3?5?$AA@
	push	esi
	mov	esi, DWORD PTR _tm$[esp]
	mov	eax, OFFSET ??_C@_0BC@BPMDJOBI@?$CLDTP?3?$CFd?3?$CFs?3?$CFs?3?$CFd?6?$AA@
	push	esi
	push	DWORD PTR _str2$[esp+4]
	cmove	eax, ecx
	push	DWORD PTR _str$[esp+8]
	push	DWORD PTR _bits$[esp+12]
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2559
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
; Line 313
	imul	eax, esi, 1000
; Line 2559
	add	esp, 40					; 00000028H
	pop	esi
; Line 313
	mov	DWORD PTR _lapse, eax
; Line 2570
	ret	0
_pkey_print_message ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_message
_TEXT	SEGMENT
_s$ = 8							; size = 4
_num$ = 12						; size = 4
_length$ = 16						; size = 4
_print_message PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 2536
	push	DWORD PTR _length$[esp-4]
	cmp	DWORD PTR _mr, 0
	mov	ecx, OFFSET ??_C@_0CF@NBNKINPF@Doing?5?$CFs?5for?5?$CFds?5on?5?$CFd?5size?5bloc@
	push	3
	push	DWORD PTR _s$[esp+4]
	mov	eax, OFFSET ??_C@_0O@JHGPBLMA@?$CLDT?3?$CFs?3?$CFd?3?$CFd?6?$AA@
	cmove	eax, ecx
	push	eax
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2539
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
; Line 313
	mov	DWORD PTR _lapse, 3000			; 00000bb8H
; Line 2550
	ret	0
_print_message ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _Time_F
_TEXT	SEGMENT
_s$ = 8							; size = 4
_Time_F	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\speed.c
; Line 328
	cmp	DWORD PTR _s$[esp-4], 0
	push	esi
	jne	SHORT $LN3@Time_F
; Line 331
	push	0
	push	0
	push	0
	push	OFFSET _sleepy@4
	push	4096					; 00001000H
	push	0
	mov	DWORD PTR _schlock, 0
	call	DWORD PTR __imp__CreateThread@24
; Line 332
	test	eax, eax
	jne	SHORT $LN5@Time_F
; Line 333
	call	DWORD PTR __imp__GetLastError@0
	mov	esi, eax
; Line 334
	push	esi
	push	OFFSET ??_C@_0BM@NHJDEHNA@unable?5to?5CreateThread?5?$CI?$CFd?$CJ?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 335
	push	esi
	call	DWORD PTR __imp__ExitProcess@4
$LN13@Time_F:
$LN5@Time_F:
; Line 337
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 338
	cmp	DWORD PTR _schlock, 0
	jne	SHORT $LN3@Time_F
	mov	esi, DWORD PTR __imp__Sleep@4
$LL2@Time_F:
; Line 339
	push	0
	call	esi
	cmp	DWORD PTR _schlock, 0
	je	SHORT $LL2@Time_F
$LN3@Time_F:
; Line 342
	push	DWORD PTR _usertime
	push	DWORD PTR _s$[esp+4]
	call	_app_tminterval
	add	esp, 8
	pop	esi
; Line 343
	ret	0
$LN12@Time_F:
_Time_F	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_dsa2048
_TEXT	SEGMENT
_get_dsa2048 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\testdsa.h
; Line 215
	push	esi
; Line 218
	call	_DSA_new
	mov	esi, eax
	test	esi, esi
	je	$LN4@get_dsa204
; Line 220
	push	0
	push	20					; 00000014H
	push	OFFSET _dsa2048_priv
	call	_BN_bin2bn
; Line 221
	push	0
	push	256					; 00000100H
	push	OFFSET _dsa2048_pub
	mov	DWORD PTR [esi+28], eax
	call	_BN_bin2bn
; Line 222
	push	0
	push	256					; 00000100H
	push	OFFSET _dsa2048_p
	mov	DWORD PTR [esi+24], eax
	call	_BN_bin2bn
; Line 223
	push	0
	push	20					; 00000014H
	push	OFFSET _dsa2048_q
	mov	DWORD PTR [esi+12], eax
	call	_BN_bin2bn
; Line 224
	push	0
	push	256					; 00000100H
	push	OFFSET _dsa2048_g
	mov	DWORD PTR [esi+16], eax
	call	_BN_bin2bn
	add	esp, 60					; 0000003cH
	mov	DWORD PTR [esi+20], eax
; Line 226
	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN4@get_dsa204
	cmp	DWORD PTR [esi+24], 0
	je	SHORT $LN4@get_dsa204
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN4@get_dsa204
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN4@get_dsa204
	test	eax, eax
	je	SHORT $LN4@get_dsa204
; Line 228
	mov	eax, esi
	pop	esi
; Line 229
	ret	0
$LN4@get_dsa204:
; Line 227
	xor	eax, eax
	pop	esi
; Line 229
	ret	0
_get_dsa2048 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_dsa1024
_TEXT	SEGMENT
_get_dsa1024 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\testdsa.h
; Line 113
	push	esi
; Line 116
	call	_DSA_new
	mov	esi, eax
	test	esi, esi
	je	$LN4@get_dsa102
; Line 118
	push	0
	push	20					; 00000014H
	push	OFFSET _dsa1024_priv
	call	_BN_bin2bn
; Line 119
	push	0
	push	128					; 00000080H
	push	OFFSET _dsa1024_pub
	mov	DWORD PTR [esi+28], eax
	call	_BN_bin2bn
; Line 120
	push	0
	push	128					; 00000080H
	push	OFFSET _dsa1024_p
	mov	DWORD PTR [esi+24], eax
	call	_BN_bin2bn
; Line 121
	push	0
	push	20					; 00000014H
	push	OFFSET _dsa1024_q
	mov	DWORD PTR [esi+12], eax
	call	_BN_bin2bn
; Line 122
	push	0
	push	128					; 00000080H
	push	OFFSET _dsa1024_g
	mov	DWORD PTR [esi+16], eax
	call	_BN_bin2bn
	add	esp, 60					; 0000003cH
	mov	DWORD PTR [esi+20], eax
; Line 124
	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN4@get_dsa102
	cmp	DWORD PTR [esi+24], 0
	je	SHORT $LN4@get_dsa102
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN4@get_dsa102
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN4@get_dsa102
	test	eax, eax
	je	SHORT $LN4@get_dsa102
; Line 126
	mov	eax, esi
	pop	esi
; Line 127
	ret	0
$LN4@get_dsa102:
; Line 125
	xor	eax, eax
	pop	esi
; Line 127
	ret	0
_get_dsa1024 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_dsa512
_TEXT	SEGMENT
_get_dsa512 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\testdsa.h
; Line 44
	push	esi
; Line 47
	call	_DSA_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN4@get_dsa512
; Line 49
	push	0
	push	20					; 00000014H
	push	OFFSET _dsa512_priv
	call	_BN_bin2bn
; Line 50
	push	0
	push	65					; 00000041H
	push	OFFSET _dsa512_pub
	mov	DWORD PTR [esi+28], eax
	call	_BN_bin2bn
; Line 51
	push	0
	push	64					; 00000040H
	push	OFFSET _dsa512_p
	mov	DWORD PTR [esi+24], eax
	call	_BN_bin2bn
; Line 52
	push	0
	push	20					; 00000014H
	push	OFFSET _dsa512_q
	mov	DWORD PTR [esi+12], eax
	call	_BN_bin2bn
; Line 53
	push	0
	push	64					; 00000040H
	push	OFFSET _dsa512_g
	mov	DWORD PTR [esi+16], eax
	call	_BN_bin2bn
	add	esp, 60					; 0000003cH
	mov	DWORD PTR [esi+20], eax
; Line 55
	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN4@get_dsa512
	cmp	DWORD PTR [esi+24], 0
	je	SHORT $LN4@get_dsa512
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN4@get_dsa512
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN4@get_dsa512
	test	eax, eax
	je	SHORT $LN4@get_dsa512
; Line 57
	mov	eax, esi
	pop	esi
; Line 58
	ret	0
$LN4@get_dsa512:
; Line 56
	xor	eax, eax
	pop	esi
; Line 58
	ret	0
_get_dsa512 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

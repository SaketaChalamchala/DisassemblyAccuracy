; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\verify.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_v_verbose DD	01H DUP (?)
_vflags	DD	01H DUP (?)
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_printf
PUBLIC	_verify_main
PUBLIC	??_C@_07MNNNLALG@?9CApath?$AA@			; `string'
PUBLIC	??_C@_07EAFCHGPO@?9CAfile?$AA@			; `string'
PUBLIC	??_C@_0L@EABBFAIP@?9untrusted?$AA@		; `string'
PUBLIC	??_C@_08HHOIEGAD@?9trusted?$AA@			; `string'
PUBLIC	??_C@_08IJBOOOA@?9CRLfile?$AA@			; `string'
PUBLIC	??_C@_0O@FJDFGOOH@?9crl_download?$AA@		; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_05DOEHDILL@?9help?$AA@			; `string'
PUBLIC	??_C@_08FBJJFDKJ@?9verbose?$AA@			; `string'
PUBLIC	??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@LEHBNKBE@untrusted?5certificates?$AA@	; `string'
PUBLIC	??_C@_0BF@JDMECOPM@trusted?5certificates?$AA@	; `string'
PUBLIC	??_C@_0L@KINIPLHJ@other?5CRLs?$AA@		; `string'
PUBLIC	??_C@_0FH@MLFLDGNL@usage?3?5verify?5?$FL?9verbose?$FN?5?$FL?9CApat@ ; `string'
PUBLIC	??_C@_0CG@GCIDDDJA@?5?$FL?9no_alt_chains?$FN?5?$FL?9attime?5times@ ; `string'
PUBLIC	??_C@_0N@KGGMOIDH@?5?$FL?9engine?5e?$FN?$AA@	; `string'
PUBLIC	??_C@_0BC@PPMFFMNJ@?5cert1?5cert2?5?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@JFOOIHKN@recognized?5usages?3?6?$AA@	; `string'
PUBLIC	??_C@_0L@GPOJFHNG@?7?$CF?910s?7?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BB@ODBFPAJB@certificate?5file?$AA@	; `string'
PUBLIC	??_C@_05MHOFLBOO@stdin?$AA@			; `string'
PUBLIC	??_C@_04PFAOODAA@?$CFs?3?5?$AA@			; `string'
PUBLIC	??_C@_03JLOMOCCD@OK?6?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0L@FFLNPCGI@?$FLCRL?5path?$FN?$AA@	; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0CC@ELIKHEHP@?$CFserror?5?$CFd?5at?5?$CFd?5depth?5lookup?3?$CFs@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__abort:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_X509_STORE_new:PROC
EXTRN	_X509_STORE_free:PROC
EXTRN	_X509_STORE_set_flags:PROC
EXTRN	_X509_STORE_set1_param:PROC
EXTRN	_X509_STORE_set_verify_cb:PROC
EXTRN	_X509_STORE_CTX_new:PROC
EXTRN	_X509_STORE_CTX_free:PROC
EXTRN	_X509_STORE_CTX_init:PROC
EXTRN	_X509_STORE_CTX_trusted_stack:PROC
EXTRN	_X509_STORE_add_lookup:PROC
EXTRN	_X509_LOOKUP_hash_dir:PROC
EXTRN	_X509_LOOKUP_file:PROC
EXTRN	_X509_LOOKUP_ctrl:PROC
EXTRN	_X509_STORE_CTX_get_error:PROC
EXTRN	_X509_STORE_CTX_get_error_depth:PROC
EXTRN	_X509_STORE_CTX_get_current_cert:PROC
EXTRN	_X509_STORE_CTX_get0_parent_ctx:PROC
EXTRN	_X509_STORE_CTX_set0_crls:PROC
EXTRN	_X509_VERIFY_PARAM_free:PROC
EXTRN	_X509_verify_cert_error_string:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_CRL_free:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_NAME_print_ex_fp:PROC
EXTRN	_X509_verify_cert:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_X509_PURPOSE_get_count:PROC
EXTRN	_X509_PURPOSE_get0:PROC
EXTRN	_X509_PURPOSE_get0_name:PROC
EXTRN	_X509_PURPOSE_get0_sname:PROC
EXTRN	_load_cert:PROC
EXTRN	_load_certs:PROC
EXTRN	_load_crls:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_args_verify:PROC
EXTRN	_policies_print:PROC
EXTRN	_store_setup_crl_download:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0CC@ELIKHEHP@?$CFserror?5?$CFd?5at?5?$CFd?5depth?5lookup?3?$CFs@
CONST	SEGMENT
??_C@_0CC@ELIKHEHP@?$CFserror?5?$CFd?5at?5?$CFd?5depth?5lookup?3?$CFs@ DB '%'
	DB	'serror %d at %d depth lookup:%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FFLNPCGI@?$FLCRL?5path?$FN?$AA@
CONST	SEGMENT
??_C@_0L@FFLNPCGI@?$FLCRL?5path?$FN?$AA@ DB '[CRL path]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JLOMOCCD@OK?6?$AA@
CONST	SEGMENT
??_C@_03JLOMOCCD@OK?6?$AA@ DB 'OK', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFAOODAA@?$CFs?3?5?$AA@
CONST	SEGMENT
??_C@_04PFAOODAA@?$CFs?3?5?$AA@ DB '%s: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHOFLBOO@stdin?$AA@
CONST	SEGMENT
??_C@_05MHOFLBOO@stdin?$AA@ DB 'stdin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ODBFPAJB@certificate?5file?$AA@
CONST	SEGMENT
??_C@_0BB@ODBFPAJB@certificate?5file?$AA@ DB 'certificate file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GPOJFHNG@?7?$CF?910s?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0L@GPOJFHNG@?7?$CF?910s?7?$CFs?6?$AA@ DB 09H, '%-10s', 09H, '%s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JFOOIHKN@recognized?5usages?3?6?$AA@
CONST	SEGMENT
??_C@_0BE@JFOOIHKN@recognized?5usages?3?6?$AA@ DB 'recognized usages:', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PPMFFMNJ@?5cert1?5cert2?5?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BC@PPMFFMNJ@?5cert1?5cert2?5?4?4?4?6?$AA@ DB ' cert1 cert2 ...', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KGGMOIDH@?5?$FL?9engine?5e?$FN?$AA@
CONST	SEGMENT
??_C@_0N@KGGMOIDH@?5?$FL?9engine?5e?$FN?$AA@ DB ' [-engine e]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GCIDDDJA@?5?$FL?9no_alt_chains?$FN?5?$FL?9attime?5times@
CONST	SEGMENT
??_C@_0CG@GCIDDDJA@?5?$FL?9no_alt_chains?$FN?5?$FL?9attime?5times@ DB ' ['
	DB	'-no_alt_chains] [-attime timestamp]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@MLFLDGNL@usage?3?5verify?5?$FL?9verbose?$FN?5?$FL?9CApat@
CONST	SEGMENT
??_C@_0FH@MLFLDGNL@usage?3?5verify?5?$FL?9verbose?$FN?5?$FL?9CApat@ DB 'u'
	DB	'sage: verify [-verbose] [-CApath path] [-CAfile file] [-purpo'
	DB	'se purpose] [-crl_check]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KINIPLHJ@other?5CRLs?$AA@
CONST	SEGMENT
??_C@_0L@KINIPLHJ@other?5CRLs?$AA@ DB 'other CRLs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JDMECOPM@trusted?5certificates?$AA@
CONST	SEGMENT
??_C@_0BF@JDMECOPM@trusted?5certificates?$AA@ DB 'trusted certificates', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LEHBNKBE@untrusted?5certificates?$AA@
CONST	SEGMENT
??_C@_0BH@LEHBNKBE@untrusted?5certificates?$AA@ DB 'untrusted certificate'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@ DB 'Error loadi'
	DB	'ng directory %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@ DB 'Error loading f'
	DB	'ile %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBJJFDKJ@?9verbose?$AA@
CONST	SEGMENT
??_C@_08FBJJFDKJ@?9verbose?$AA@ DB '-verbose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05DOEHDILL@?9help?$AA@
CONST	SEGMENT
??_C@_05DOEHDILL@?9help?$AA@ DB '-help', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FJDFGOOH@?9crl_download?$AA@
CONST	SEGMENT
??_C@_0O@FJDFGOOH@?9crl_download?$AA@ DB '-crl_download', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IJBOOOA@?9CRLfile?$AA@
CONST	SEGMENT
??_C@_08IJBOOOA@?9CRLfile?$AA@ DB '-CRLfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HHOIEGAD@?9trusted?$AA@
CONST	SEGMENT
??_C@_08HHOIEGAD@?9trusted?$AA@ DB '-trusted', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EABBFAIP@?9untrusted?$AA@
CONST	SEGMENT
??_C@_0L@EABBFAIP@?9untrusted?$AA@ DB '-untrusted', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EAFCHGPO@?9CAfile?$AA@
CONST	SEGMENT
??_C@_07EAFCHGPO@?9CAfile?$AA@ DB '-CAfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNNNLALG@?9CApath?$AA@
CONST	SEGMENT
??_C@_07MNNNLALG@?9CApath?$AA@ DB '-CApath', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _verify_main
_TEXT	SEGMENT
_cert_ctx$1$ = -52					; size = 4
_trusted$1$ = -48					; size = 4
_untrusted$1$ = -44					; size = 4
_CAfile$1$ = -40					; size = 4
_vpm$ = -36						; size = 4
_crls$1$ = -32						; size = 4
_badarg$ = -28						; size = 4
_engine$1$ = -24					; size = 4
_CApath$1$ = -20					; size = 4
_untfile$1$ = -16					; size = 4
_trustfile$1$ = -12					; size = 4
_crlfile$1$ = -8					; size = 4
_crl_download$1$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_verify_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\verify.c
; Line 81
	mov	eax, 52					; 00000034H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 84
	xor	esi, esi
	mov	DWORD PTR _badarg$[esp+64], 0
	push	edi
	mov	ebp, 1
	mov	DWORD PTR _CApath$1$[esp+68], 0
	mov	DWORD PTR _CAfile$1$[esp+68], esi
; Line 85
	mov	DWORD PTR _untfile$1$[esp+68], esi
	mov	DWORD PTR _trustfile$1$[esp+68], esi
	mov	DWORD PTR _crlfile$1$[esp+68], esi
; Line 86
	mov	DWORD PTR _untrusted$1$[esp+68], esi
	mov	DWORD PTR _trusted$1$[esp+68], esi
; Line 87
	mov	DWORD PTR _crls$1$[esp+68], esi
; Line 90
	mov	DWORD PTR _vpm$[esp+68], esi
; Line 91
	mov	DWORD PTR _crl_download$1$[esp+68], esi
; Line 93
	mov	DWORD PTR _engine$1$[esp+68], esi
; Line 96
	call	_X509_STORE_new
	mov	ebx, eax
	mov	DWORD PTR _cert_ctx$1$[esp+68], ebx
; Line 97
	test	ebx, ebx
	je	$LN89@verify_mai
; Line 99
	push	OFFSET _cb
	push	ebx
	call	_X509_STORE_set_verify_cb
	add	esp, 8
; Line 101
	call	_ERR_load_crypto_strings
; Line 105
	mov	eax, DWORD PTR _bio_err
	test	eax, eax
	jne	SHORT $LN13@verify_mai
; Line 106
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN13@verify_mai
; Line 107
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN13@verify_mai:
; Line 109
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN89@verify_mai
; Line 112
	mov	ecx, DWORD PTR _argc$[esp+64]
; Line 113
	mov	edi, DWORD PTR _argv$[esp+64]
	dec	ecx
	add	edi, 4
	mov	DWORD PTR _argc$[esp+64], ecx
	mov	DWORD PTR _argv$[esp+64], edi
; Line 115
	cmp	ecx, 1
	jl	$LN15@verify_mai
$LL2@verify_mai:
; Line 116
	mov	esi, DWORD PTR [edi]
	mov	edx, OFFSET ??_C@_07MNNNLALG@?9CApath?$AA@
	mov	eax, esi
	npad	4
$LL90@verify_mai:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN91@verify_mai
	test	bl, bl
	je	SHORT $LN92@verify_mai
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN91@verify_mai
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL90@verify_mai
$LN92@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN93@verify_mai
$LN91@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN93@verify_mai:
	test	eax, eax
	jne	SHORT $LN17@verify_mai
; Line 117
	mov	eax, ecx
	dec	ecx
	mov	DWORD PTR _argc$[esp+64], ecx
	cmp	eax, 1
	jl	$LN134@verify_mai
; Line 119
	add	edi, 4
	mov	DWORD PTR _argv$[esp+64], edi
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _CApath$1$[esp+68], eax
	jmp	$LN45@verify_mai
$LN17@verify_mai:
; Line 120
	mov	eax, OFFSET ??_C@_07EAFCHGPO@?9CAfile?$AA@
$LL94@verify_mai:
	mov	dl, BYTE PTR [esi]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN95@verify_mai
	test	dl, dl
	je	SHORT $LN96@verify_mai
	mov	dl, BYTE PTR [esi+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN95@verify_mai
	add	esi, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL94@verify_mai
$LN96@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN97@verify_mai
$LN95@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN97@verify_mai:
	test	eax, eax
	jne	SHORT $LN20@verify_mai
; Line 121
	mov	eax, ecx
	dec	ecx
	mov	DWORD PTR _argc$[esp+64], ecx
	cmp	eax, 1
	jl	$LN134@verify_mai
; Line 123
	add	edi, 4
	mov	DWORD PTR _argv$[esp+64], edi
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _CAfile$1$[esp+68], eax
	jmp	$LN45@verify_mai
$LN20@verify_mai:
; Line 124
	lea	eax, DWORD PTR _vpm$[esp+68]
	push	eax
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _badarg$[esp+76]
	push	eax
	lea	eax, DWORD PTR _argc$[esp+76]
	push	eax
	lea	eax, DWORD PTR _argv$[esp+80]
	push	eax
	call	_args_verify
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN23@verify_mai
; Line 125
	cmp	DWORD PTR _badarg$[esp+68], 0
	jne	$LN134@verify_mai
; Line 127
	mov	edi, DWORD PTR _argv$[esp+64]
	mov	ecx, DWORD PTR _argc$[esp+64]
	jmp	$LN16@verify_mai
$LN23@verify_mai:
; Line 128
	mov	edi, DWORD PTR _argv$[esp+64]
	mov	ecx, OFFSET ??_C@_0L@EABBFAIP@?9untrusted?$AA@
	mov	esi, DWORD PTR [edi]
	mov	eax, esi
$LL98@verify_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN99@verify_mai
	test	dl, dl
	je	SHORT $LN100@verify_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN99@verify_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL98@verify_mai
$LN100@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN101@verify_mai
$LN99@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN101@verify_mai:
	test	eax, eax
	jne	SHORT $LN26@verify_mai
; Line 129
	mov	ecx, DWORD PTR _argc$[esp+64]
	mov	eax, ecx
	dec	ecx
	mov	DWORD PTR _argc$[esp+64], ecx
	cmp	eax, 1
	jl	$LN134@verify_mai
; Line 131
	add	edi, 4
	mov	DWORD PTR _argv$[esp+64], edi
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _untfile$1$[esp+68], eax
	jmp	$LN45@verify_mai
$LN26@verify_mai:
; Line 132
	mov	ecx, OFFSET ??_C@_08HHOIEGAD@?9trusted?$AA@
	mov	eax, esi
	npad	4
$LL102@verify_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN103@verify_mai
	test	dl, dl
	je	SHORT $LN104@verify_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN103@verify_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL102@verify_mai
$LN104@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN105@verify_mai
$LN103@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN105@verify_mai:
	test	eax, eax
	jne	SHORT $LN29@verify_mai
; Line 133
	mov	ecx, DWORD PTR _argc$[esp+64]
	mov	eax, ecx
	dec	ecx
	mov	DWORD PTR _argc$[esp+64], ecx
	cmp	eax, 1
	jl	$LN134@verify_mai
; Line 135
	add	edi, 4
	mov	DWORD PTR _argv$[esp+64], edi
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _trustfile$1$[esp+68], eax
	jmp	$LN45@verify_mai
$LN29@verify_mai:
; Line 136
	mov	ecx, OFFSET ??_C@_08IJBOOOA@?9CRLfile?$AA@
	mov	eax, esi
$LL106@verify_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN107@verify_mai
	test	dl, dl
	je	SHORT $LN108@verify_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN107@verify_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL106@verify_mai
$LN108@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN109@verify_mai
$LN107@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN109@verify_mai:
	test	eax, eax
	jne	SHORT $LN32@verify_mai
; Line 137
	mov	ecx, DWORD PTR _argc$[esp+64]
	mov	eax, ecx
	dec	ecx
	mov	DWORD PTR _argc$[esp+64], ecx
	cmp	eax, 1
	jl	$LN134@verify_mai
; Line 139
	add	edi, 4
	mov	DWORD PTR _argv$[esp+64], edi
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _crlfile$1$[esp+68], eax
	jmp	$LN45@verify_mai
$LN32@verify_mai:
; Line 140
	mov	ecx, OFFSET ??_C@_0O@FJDFGOOH@?9crl_download?$AA@
	mov	eax, esi
	npad	4
$LL110@verify_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN111@verify_mai
	test	dl, dl
	je	SHORT $LN112@verify_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN111@verify_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL110@verify_mai
$LN112@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN113@verify_mai
$LN111@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN113@verify_mai:
	test	eax, eax
	jne	SHORT $LN35@verify_mai
; Line 141
	mov	DWORD PTR _crl_download$1$[esp+68], ebp
	jmp	$LN140@verify_mai
$LN35@verify_mai:
; Line 143
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
	npad	7
$LL114@verify_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN115@verify_mai
	test	dl, dl
	je	SHORT $LN116@verify_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN115@verify_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL114@verify_mai
$LN116@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN117@verify_mai
$LN115@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN117@verify_mai:
	test	eax, eax
	jne	SHORT $LN37@verify_mai
; Line 144
	mov	ecx, DWORD PTR _argc$[esp+64]
	dec	ecx
	mov	DWORD PTR _argc$[esp+64], ecx
	cmp	ecx, 1
	jl	$LN134@verify_mai
; Line 146
	add	edi, 4
	mov	DWORD PTR _argv$[esp+64], edi
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _engine$1$[esp+68], eax
; Line 147
	jmp	SHORT $LN45@verify_mai
$LN37@verify_mai:
; Line 149
	mov	ecx, OFFSET ??_C@_05DOEHDILL@?9help?$AA@
	mov	eax, esi
$LL118@verify_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN119@verify_mai
	test	dl, dl
	je	SHORT $LN120@verify_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN119@verify_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL118@verify_mai
$LN120@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN121@verify_mai
$LN119@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN121@verify_mai:
	test	eax, eax
	je	$LN134@verify_mai
; Line 151
	mov	eax, OFFSET ??_C@_08FBJJFDKJ@?9verbose?$AA@
$LL122@verify_mai:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN123@verify_mai
	test	cl, cl
	je	SHORT $LN124@verify_mai
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN123@verify_mai
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL122@verify_mai
$LN124@verify_mai:
	xor	eax, eax
	jmp	SHORT $LN125@verify_mai
$LN123@verify_mai:
	sbb	eax, eax
	or	eax, 1
$LN125@verify_mai:
	test	eax, eax
	jne	SHORT $LN42@verify_mai
; Line 152
	mov	DWORD PTR _v_verbose, ebp
$LN140@verify_mai:
	mov	ecx, DWORD PTR _argc$[esp+64]
$LN45@verify_mai:
; Line 157
	dec	ecx
; Line 158
	add	edi, 4
	mov	DWORD PTR _argc$[esp+64], ecx
	mov	DWORD PTR _argv$[esp+64], edi
$LN16@verify_mai:
; Line 115
	cmp	ecx, 1
	jge	$LL2@verify_mai
; Line 149
	jmp	SHORT $LN141@verify_mai
$LN42@verify_mai:
; Line 153
	mov	eax, DWORD PTR [edi]
	cmp	BYTE PTR [eax], 45			; 0000002dH
	je	$LN134@verify_mai
$LN141@verify_mai:
	mov	esi, DWORD PTR _CAfile$1$[esp+68]
	mov	ebx, DWORD PTR _cert_ctx$1$[esp+68]
$LN15@verify_mai:
; Line 164
	push	0
	push	DWORD PTR _engine$1$[esp+72]
	push	DWORD PTR _bio_err
	call	_setup_engine
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 167
	mov	eax, DWORD PTR _vpm$[esp+68]
	test	eax, eax
	je	SHORT $LN46@verify_mai
; Line 168
	push	eax
	push	ebx
	call	_X509_STORE_set1_param
	add	esp, 8
$LN46@verify_mai:
; Line 170
	call	_X509_LOOKUP_file
	push	eax
	push	ebx
	call	_X509_STORE_add_lookup
	add	esp, 8
; Line 171
	test	eax, eax
	jne	SHORT $LN47@verify_mai
; Line 172
	call	DWORD PTR __imp__abort
$LN145@verify_mai:
$LN47@verify_mai:
; Line 174
	push	0
	test	esi, esi
	je	SHORT $LN48@verify_mai
	push	1
	push	esi
	push	1
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
; Line 175
	test	eax, eax
	jne	SHORT $LN49@verify_mai
; Line 176
	push	esi
	push	OFFSET ??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@
$LN143@verify_mai:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 177
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 178
	jmp	$LN89@verify_mai
$LN48@verify_mai:
; Line 181
	push	3
	push	0
	push	1
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
$LN49@verify_mai:
; Line 183
	call	_X509_LOOKUP_hash_dir
	push	eax
	push	ebx
	call	_X509_STORE_add_lookup
	add	esp, 8
; Line 184
	test	eax, eax
	jne	SHORT $LN51@verify_mai
; Line 185
	call	DWORD PTR __imp__abort
$LN146@verify_mai:
$LN51@verify_mai:
; Line 186
	mov	esi, DWORD PTR _CApath$1$[esp+68]
; Line 187
	push	0
	test	esi, esi
	je	SHORT $LN52@verify_mai
	push	1
	push	esi
	push	2
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
; Line 188
	test	eax, eax
	jne	SHORT $LN53@verify_mai
; Line 189
	push	esi
	push	OFFSET ??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@
; Line 191
	jmp	SHORT $LN143@verify_mai
$LN52@verify_mai:
; Line 194
	push	3
	push	0
	push	2
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
$LN53@verify_mai:
; Line 196
	call	_ERR_clear_error
; Line 198
	mov	eax, DWORD PTR _untfile$1$[esp+68]
	test	eax, eax
	je	SHORT $LN56@verify_mai
; Line 199
	push	OFFSET ??_C@_0BH@LEHBNKBE@untrusted?5certificates?$AA@
	push	edi
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_certs
	add	esp, 24					; 00000018H
	mov	DWORD PTR _untrusted$1$[esp+68], eax
; Line 201
	test	eax, eax
	je	$LN89@verify_mai
$LN56@verify_mai:
; Line 205
	mov	eax, DWORD PTR _trustfile$1$[esp+68]
	test	eax, eax
	je	SHORT $LN58@verify_mai
; Line 206
	push	OFFSET ??_C@_0BF@JDMECOPM@trusted?5certificates?$AA@
	push	edi
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_certs
	add	esp, 24					; 00000018H
	mov	DWORD PTR _trusted$1$[esp+68], eax
; Line 208
	test	eax, eax
	je	$LN89@verify_mai
$LN58@verify_mai:
; Line 212
	mov	eax, DWORD PTR _crlfile$1$[esp+68]
	test	eax, eax
	je	SHORT $LN135@verify_mai
; Line 213
	push	OFFSET ??_C@_0L@KINIPLHJ@other?5CRLs?$AA@
	push	edi
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_crls
	mov	esi, eax
	add	esp, 24					; 00000018H
	mov	DWORD PTR _crls$1$[esp+68], esi
; Line 214
	test	esi, esi
	je	$LN89@verify_mai
	jmp	SHORT $LN60@verify_mai
$LN135@verify_mai:
	xor	esi, esi
$LN60@verify_mai:
; Line 218
	xor	ebp, ebp
; Line 220
	cmp	DWORD PTR _crl_download$1$[esp+68], ebp
	je	SHORT $LN61@verify_mai
; Line 221
	push	ebx
	call	_store_setup_crl_download
	add	esp, 4
$LN61@verify_mai:
; Line 222
	mov	eax, DWORD PTR _argc$[esp+64]
	cmp	eax, 1
	jge	SHORT $LN62@verify_mai
; Line 223
	push	edi
	mov	edi, DWORD PTR _untrusted$1$[esp+72]
	push	esi
	mov	esi, DWORD PTR _trusted$1$[esp+76]
	push	esi
	push	edi
	push	0
	push	ebx
	call	_check
	add	esp, 24					; 00000018H
	cmp	eax, 1
	je	$LN9@verify_mai
; Line 224
	or	ebp, -1
; Line 225
	jmp	$LN9@verify_mai
$LN62@verify_mai:
; Line 226
	xor	esi, esi
	test	eax, eax
	jle	$LN138@verify_mai
$LL7@verify_mai:
; Line 227
	mov	eax, DWORD PTR _argv$[esp+64]
	push	edi
	push	DWORD PTR _crls$1$[esp+72]
	push	DWORD PTR _trusted$1$[esp+76]
	push	DWORD PTR _untrusted$1$[esp+80]
	push	DWORD PTR [eax+esi*4]
	push	ebx
	call	_check
	add	esp, 24					; 00000018H
	cmp	eax, 1
	mov	eax, -1
	cmovne	ebp, eax
	inc	esi
	cmp	esi, DWORD PTR _argc$[esp+64]
	jl	SHORT $LL7@verify_mai
$end$147:
; Line 232
	cmp	ebp, 1
	jne	$LN138@verify_mai
	jmp	SHORT $LN89@verify_mai
$LN134@verify_mai:
	mov	ebx, DWORD PTR _cert_ctx$1$[esp+68]
$LN89@verify_mai:
; Line 233
	push	OFFSET ??_C@_0FH@MLFLDGNL@usage?3?5verify?5?$FL?9verbose?$FN?5?$FL?9CApat@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 235
	push	OFFSET ??_C@_0CG@GCIDDDJA@?5?$FL?9no_alt_chains?$FN?5?$FL?9attime?5times@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 237
	push	OFFSET ??_C@_0N@KGGMOIDH@?5?$FL?9engine?5e?$FN?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 239
	push	OFFSET ??_C@_0BC@PPMFFMNJ@?5cert1?5cert2?5?4?4?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 241
	push	OFFSET ??_C@_0BE@JFOOIHKN@recognized?5usages?3?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 40					; 00000028H
; Line 242
	xor	edi, edi
	call	_X509_PURPOSE_get_count
	test	eax, eax
	jle	SHORT $LN138@verify_mai
$LL10@verify_mai:
; Line 244
	push	edi
	call	_X509_PURPOSE_get0
	mov	esi, eax
; Line 245
	push	esi
	call	_X509_PURPOSE_get0_name
	add	esp, 8
	push	eax
	push	esi
	call	_X509_PURPOSE_get0_sname
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0L@GPOJFHNG@?7?$CF?910s?7?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
	inc	edi
	call	_X509_PURPOSE_get_count
	cmp	edi, eax
	jl	SHORT $LL10@verify_mai
$LN138@verify_mai:
	mov	edi, DWORD PTR _untrusted$1$[esp+68]
	mov	esi, DWORD PTR _trusted$1$[esp+68]
$LN9@verify_mai:
; Line 250
	mov	eax, DWORD PTR _vpm$[esp+68]
	test	eax, eax
	je	SHORT $LN67@verify_mai
; Line 251
	push	eax
	call	_X509_VERIFY_PARAM_free
	add	esp, 4
$LN67@verify_mai:
; Line 252
	test	ebx, ebx
	je	SHORT $LN68@verify_mai
; Line 253
	push	ebx
	call	_X509_STORE_free
	add	esp, 4
$LN68@verify_mai:
; Line 254
	push	OFFSET _X509_free
	push	edi
	call	_sk_pop_free
; Line 255
	push	OFFSET _X509_free
	push	esi
	call	_sk_pop_free
; Line 256
	push	OFFSET _X509_CRL_free
	push	DWORD PTR _crls$1$[esp+88]
	call	_sk_pop_free
	add	esp, 24					; 00000018H
; Line 258
	mov	eax, 2
	test	ebp, ebp
	cmovs	ebp, eax
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 259
	add	esp, 52					; 00000034H
	ret	0
$LN144@verify_mai:
_verify_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _check
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_file$ = 12						; size = 4
_uchain$ = 16						; size = 4
_tchain$ = 20						; size = 4
_crls$ = 24						; size = 4
_e$ = 28						; size = 4
_check	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\verify.c
; Line 264
	push	ebx
	push	ebp
	push	esi
; Line 269
	mov	esi, DWORD PTR _file$[esp+8]
	xor	ebx, ebx
	push	edi
	push	OFFSET ??_C@_0BB@ODBFPAJB@certificate?5file?$AA@
	push	DWORD PTR _e$[esp+16]
	push	ebx
	push	3
	push	esi
	push	DWORD PTR _bio_err
	call	_load_cert
	mov	ebp, eax
	add	esp, 24					; 00000018H
; Line 270
	test	ebp, ebp
	je	$LN7@check
; Line 272
	test	esi, esi
	mov	eax, OFFSET ??_C@_05MHOFLBOO@stdin?$AA@
	cmovne	eax, esi
	push	eax
	push	OFFSET ??_C@_04PFAOODAA@?$CFs?3?5?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 274
	call	_X509_STORE_CTX_new
	mov	edi, eax
; Line 275
	test	edi, edi
	je	SHORT $LN12@check
; Line 279
	push	DWORD PTR _vflags
	mov	esi, DWORD PTR _ctx$[esp+16]
	push	esi
	call	_X509_STORE_set_flags
; Line 280
	push	DWORD PTR _uchain$[esp+20]
	push	ebp
	push	esi
	push	edi
	call	_X509_STORE_CTX_init
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN12@check
; Line 284
	mov	eax, DWORD PTR _tchain$[esp+12]
	test	eax, eax
	je	SHORT $LN5@check
; Line 285
	push	eax
	push	edi
	call	_X509_STORE_CTX_trusted_stack
	add	esp, 8
$LN5@check:
; Line 286
	mov	eax, DWORD PTR _crls$[esp+12]
	test	eax, eax
	je	SHORT $LN6@check
; Line 287
	push	eax
	push	edi
	call	_X509_STORE_CTX_set0_crls
	add	esp, 8
$LN6@check:
; Line 288
	push	edi
	call	_X509_verify_cert
; Line 289
	push	edi
	mov	esi, eax
	call	_X509_STORE_CTX_free
	add	esp, 8
; Line 291
	xor	ebx, ebx
$end$14:
; Line 293
	test	esi, esi
	jle	SHORT $LN7@check
; Line 294
	push	OFFSET ??_C@_03JLOMOCCD@OK?6?$AA@
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 295
	mov	ebx, 1
; Line 296
	jmp	SHORT $LN8@check
$LN12@check:
; Line 281
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN7@check:
; Line 297
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN8@check:
; Line 298
	test	ebp, ebp
	je	SHORT $LN11@check
; Line 299
	push	ebp
	call	_X509_free
	add	esp, 4
$LN11@check:
; Line 301
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 302
	ret	0
_check	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cb
_TEXT	SEGMENT
_ok$ = 8						; size = 4
_ctx$ = 12						; size = 4
_cb	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\verify.c
; Line 305
	push	ebx
	push	esi
	push	edi
; Line 306
	mov	edi, DWORD PTR _ctx$[esp+8]
	push	edi
	call	_X509_STORE_CTX_get_error
; Line 307
	push	edi
	mov	ebx, eax
	call	_X509_STORE_CTX_get_current_cert
; Line 309
	mov	esi, DWORD PTR _ok$[esp+16]
	add	esp, 8
	test	esi, esi
	jne	$LN4@cb
; Line 310
	test	eax, eax
	je	SHORT $LN5@cb
; Line 311
	push	8520479					; 0082031fH
	push	esi
	push	eax
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_X509_NAME_print_ex_fp
; Line 314
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
	add	esp, 20					; 00000014H
$LN5@cb:
; Line 316
	push	ebx
	call	_X509_verify_cert_error_string
	add	esp, 4
	push	eax
	push	edi
	call	_X509_STORE_CTX_get_error_depth
	add	esp, 4
	push	eax
	push	ebx
	push	edi
	call	_X509_STORE_CTX_get0_parent_ctx
	add	esp, 4
	mov	edx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	mov	ecx, OFFSET ??_C@_0L@FFLNPCGI@?$FLCRL?5path?$FN?$AA@
	cmove	ecx, edx
	push	ecx
	push	OFFSET ??_C@_0CC@ELIKHEHP@?$CFserror?5?$CFd?5at?5?$CFd?5depth?5lookup?3?$CFs@
	call	_printf
; Line 321
	add	ebx, -10				; fffffff6H
	add	esp, 20					; 00000014H
	cmp	ebx, 33					; 00000021H
	ja	SHORT $LN9@cb
	movzx	eax, BYTE PTR $LN11@cb[ebx]
	jmp	DWORD PTR $LN13@cb[eax*4]
$LN6@cb:
; Line 323
	push	edi
	push	0
	call	_policies_print
	add	esp, 8
$LN7@cb:
; Line 340
	mov	esi, 1
	pop	edi
; Line 351
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 352
	ret	0
$LN4@cb:
; Line 347
	test	ebx, ebx
	jne	SHORT $LN8@cb
	cmp	esi, 2
	jne	SHORT $LN8@cb
; Line 348
	push	edi
	push	ebx
	call	_policies_print
	add	esp, 8
$LN8@cb:
; Line 349
	cmp	DWORD PTR _v_verbose, 0
	jne	SHORT $LN9@cb
; Line 350
	call	_ERR_clear_error
$LN9@cb:
	pop	edi
; Line 351
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 352
	ret	0
$LN13@cb:
	DD	$LN7@cb
	DD	$LN6@cb
	DD	$LN9@cb
$LN11@cb:
	DB	0
	DB	0
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	0
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	2
	DB	2
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
_cb	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

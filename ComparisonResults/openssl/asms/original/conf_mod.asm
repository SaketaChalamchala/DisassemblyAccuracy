; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_supported_modules DD 01H DUP (?)
_initialized_modules DD 01H DUP (?)
_BSS	ENDS
PUBLIC	_CONF_modules_load
PUBLIC	_CONF_modules_load_file
PUBLIC	_CONF_modules_unload
PUBLIC	_CONF_modules_finish
PUBLIC	_CONF_modules_free
PUBLIC	_CONF_module_add
PUBLIC	_CONF_imodule_get_name
PUBLIC	_CONF_imodule_get_value
PUBLIC	_CONF_imodule_get_usr_data
PUBLIC	_CONF_imodule_set_usr_data
PUBLIC	_CONF_imodule_get_module
PUBLIC	_CONF_imodule_get_flags
PUBLIC	_CONF_imodule_set_flags
PUBLIC	_CONF_module_get_usr_data
PUBLIC	_CONF_module_set_usr_data
PUBLIC	_CONF_get1_default_config_file
PUBLIC	_CONF_parse_list
PUBLIC	??_C@_0N@IFOJAMEI@openssl_conf?$AA@		; `string'
PUBLIC	??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@ ; `string'
PUBLIC	??_C@_07FLJOICMN@module?$DN?$AA@		; `string'
PUBLIC	??_C@_04EJENMFPO@?$CF?98d?$AA@			; `string'
PUBLIC	??_C@_0L@MGIFNCO@?0?5retcode?$DN?$AA@		; `string'
PUBLIC	??_C@_08OMICEKMJ@?0?5value?$DN?$AA@		; `string'
PUBLIC	??_C@_04LNEJFJGI@path?$AA@			; `string'
PUBLIC	??_C@_0N@NMOKNALJ@OPENSSL_init?$AA@		; `string'
PUBLIC	??_C@_0P@LDFJDPGK@OPENSSL_finish?$AA@		; `string'
PUBLIC	??_C@_07JMLINIMC@?0?5path?$DN?$AA@		; `string'
PUBLIC	??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@		; `string'
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@		; `string'
EXTRN	__imp__isspace:PROC
EXTRN	__imp__getenv:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_delete:PROC
EXTRN	_sk_push:PROC
EXTRN	_sk_pop:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__strrchr:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_peek_last_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_NCONF_new:PROC
EXTRN	_NCONF_free:PROC
EXTRN	_NCONF_load:PROC
EXTRN	_NCONF_get_section:PROC
EXTRN	_NCONF_get_string:PROC
EXTRN	_DSO_free:PROC
EXTRN	_DSO_load:PROC
EXTRN	_DSO_bind_func:PROC
EXTRN	_X509_get_default_cert_area:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@
CONST	SEGMENT
??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@ DB 'openssl.cnf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
CONST	SEGMENT
??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@ DB 'OPENSSL_CONF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JMLINIMC@?0?5path?$DN?$AA@
CONST	SEGMENT
??_C@_07JMLINIMC@?0?5path?$DN?$AA@ DB ', path=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDFJDPGK@OPENSSL_finish?$AA@
CONST	SEGMENT
??_C@_0P@LDFJDPGK@OPENSSL_finish?$AA@ DB 'OPENSSL_finish', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NMOKNALJ@OPENSSL_init?$AA@
CONST	SEGMENT
??_C@_0N@NMOKNALJ@OPENSSL_init?$AA@ DB 'OPENSSL_init', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LNEJFJGI@path?$AA@
CONST	SEGMENT
??_C@_04LNEJFJGI@path?$AA@ DB 'path', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OMICEKMJ@?0?5value?$DN?$AA@
CONST	SEGMENT
??_C@_08OMICEKMJ@?0?5value?$DN?$AA@ DB ', value=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MGIFNCO@?0?5retcode?$DN?$AA@
CONST	SEGMENT
??_C@_0L@MGIFNCO@?0?5retcode?$DN?$AA@ DB ', retcode=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04EJENMFPO@?$CF?98d?$AA@
CONST	SEGMENT
??_C@_04EJENMFPO@?$CF?98d?$AA@ DB '%-8d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FLJOICMN@module?$DN?$AA@
CONST	SEGMENT
??_C@_07FLJOICMN@module?$DN?$AA@ DB 'module=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@ DB '.\crypto\conf\c'
	DB	'onf_mod.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IFOJAMEI@openssl_conf?$AA@
CONST	SEGMENT
??_C@_0N@IFOJAMEI@openssl_conf?$AA@ DB 'openssl_conf', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _module_load_dso
_TEXT	SEGMENT
_ifunc$1$ = -4						; size = 4
_cnf$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_flags$ = 20						; size = 4
_module_load_dso PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 236
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 244
	push	OFFSET ??_C@_04LNEJFJGI@path?$AA@
	push	DWORD PTR _value$[esp+20]
	xor	ebx, ebx
	push	DWORD PTR _cnf$[esp+24]
	call	_NCONF_get_string
; Line 245
	mov	ebp, DWORD PTR _name$[esp+28]
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	jne	SHORT $LN2@module_loa
; Line 246
	call	_ERR_clear_error
; Line 247
	mov	edi, ebp
$LN2@module_loa:
; Line 249
	push	0
	push	0
	push	edi
	push	0
	call	_DSO_load
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 250
	test	esi, esi
	jne	SHORT $LN3@module_loa
; Line 251
	lea	ebx, DWORD PTR [eax+110]
; Line 252
	jmp	SHORT $LN6@module_loa
$LN3@module_loa:
; Line 254
	push	OFFSET ??_C@_0N@NMOKNALJ@OPENSSL_init?$AA@
	push	esi
	call	_DSO_bind_func
	add	esp, 8
	mov	DWORD PTR _ifunc$1$[esp+20], eax
; Line 255
	test	eax, eax
	jne	SHORT $LN4@module_loa
; Line 256
	lea	ebx, DWORD PTR [eax+112]
; Line 257
	jmp	SHORT $err$9
$LN4@module_loa:
; Line 259
	push	OFFSET ??_C@_0P@LDFJDPGK@OPENSSL_finish?$AA@
	push	esi
	call	_DSO_bind_func
; Line 261
	push	eax
	push	DWORD PTR _ifunc$1$[esp+32]
	push	ebp
	push	esi
	call	_module_add
	add	esp, 24					; 00000018H
; Line 263
	test	eax, eax
	jne	SHORT $LN1@module_loa
$err$9:
; Line 270
	push	esi
	call	_DSO_free
	add	esp, 4
$LN6@module_loa:
; Line 271
	push	271					; 0000010fH
	push	OFFSET ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
	push	ebx
	push	117					; 00000075H
	push	14					; 0000000eH
	call	_ERR_put_error
; Line 272
	push	edi
	push	OFFSET ??_C@_07JMLINIMC@?0?5path?$DN?$AA@
	push	ebp
	push	OFFSET ??_C@_07FLJOICMN@module?$DN?$AA@
	push	4
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 273
	xor	eax, eax
$LN1@module_loa:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 274
	pop	ecx
	ret	0
_module_load_dso ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _module_init
_TEXT	SEGMENT
_pmod$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_cnf$ = 20						; size = 4
_module_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 334
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 340
	push	340					; 00000154H
	push	OFFSET ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
	push	20					; 00000014H
	mov	ebx, 1
	xor	ebp, ebp
	call	_CRYPTO_malloc
; Line 341
	mov	edi, DWORD PTR _pmod$[esp+24]
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $err$17
; Line 345
	push	DWORD PTR _name$[esp+12]
	mov	DWORD PTR [esi], edi
	call	_BUF_strdup
; Line 346
	push	DWORD PTR _value$[esp+16]
	mov	DWORD PTR [esi+4], eax
	call	_BUF_strdup
	add	esp, 8
	mov	DWORD PTR [esi+8], eax
; Line 347
	mov	DWORD PTR [esi+16], ebp
; Line 349
	cmp	DWORD PTR [esi+4], ebp
	je	SHORT $memerr$18
	test	eax, eax
	je	SHORT $memerr$18
; Line 353
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN6@module_ini
; Line 354
	push	DWORD PTR _cnf$[esp+12]
	push	esi
	call	eax
	mov	ebx, eax
	add	esp, 8
; Line 355
	mov	ebp, 1
; Line 357
	test	ebx, ebx
	jle	SHORT $err$17
$LN6@module_ini:
; Line 361
	mov	eax, DWORD PTR _initialized_modules
	test	eax, eax
	jne	SHORT $LN8@module_ini
; Line 362
	call	_sk_new_null
	mov	DWORD PTR _initialized_modules, eax
; Line 363
	test	eax, eax
	jne	SHORT $LN8@module_ini
; Line 364
	push	364					; 0000016cH
$LN15@module_ini:
	push	OFFSET ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
	push	65					; 00000041H
	push	115					; 00000073H
	push	14					; 0000000eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$17:
; Line 381
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $memerr$18
	test	ebp, ebp
	je	SHORT $memerr$18
; Line 382
	push	esi
	call	eax
	add	esp, 4
$memerr$18:
; Line 385
	test	esi, esi
	je	SHORT $LN11@module_ini
; Line 386
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN12@module_ini
; Line 387
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN12@module_ini:
; Line 388
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN13@module_ini
; Line 389
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN13@module_ini:
; Line 390
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN11@module_ini:
; Line 393
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 395
	ret	0
$LN8@module_ini:
; Line 369
	push	esi
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@module_ini
; Line 370
	push	370					; 00000172H
	jmp	SHORT $LN15@module_ini
$LN9@module_ini:
; Line 374
	inc	DWORD PTR [edi+16]
; Line 376
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 395
	ret	0
_module_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _module_find
_TEXT	SEGMENT
_name$ = 8						; size = 4
_module_find PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 310
	push	ebx
; Line 314
	mov	ebx, DWORD PTR _name$[esp]
	push	ebp
	push	esi
	push	edi
	push	46					; 0000002eH
	push	ebx
	call	DWORD PTR __imp__strrchr
	mov	esi, eax
	add	esp, 8
; Line 316
	test	esi, esi
	je	SHORT $LN5@module_fin
; Line 317
	sub	esi, ebx
	jmp	SHORT $LN6@module_fin
$LN5@module_fin:
; Line 319
	mov	esi, ebx
	lea	ecx, DWORD PTR [esi+1]
$LL14@module_fin:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL14@module_fin
	sub	esi, ecx
$LN6@module_fin:
; Line 321
	push	DWORD PTR _supported_modules
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@module_fin
$LL4@module_fin:
; Line 322
	push	edi
	push	DWORD PTR _supported_modules
	call	_sk_value
	mov	ebp, eax
; Line 323
	push	esi
	push	ebx
	push	DWORD PTR [ebp+4]
	call	DWORD PTR __imp__strncmp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN10@module_fin
; Line 321
	push	DWORD PTR _supported_modules
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL4@module_fin
$LN3@module_fin:
	pop	edi
	pop	esi
	pop	ebp
; Line 327
	xor	eax, eax
	pop	ebx
; Line 329
	ret	0
$LN10@module_fin:
	pop	edi
	pop	esi
; Line 324
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 329
	ret	0
_module_find ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _module_add
_TEXT	SEGMENT
_dso$ = 8						; size = 4
_name$ = 12						; size = 4
_ifunc$ = 16						; size = 4
_ffunc$ = 20						; size = 4
_module_add PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 281
	cmp	DWORD PTR _supported_modules, 0
	jne	SHORT $LN3@module_add
; Line 282
	call	_sk_new_null
	mov	DWORD PTR _supported_modules, eax
; Line 283
	test	eax, eax
	jne	SHORT $LN3@module_add
; Line 301
	ret	0
$LN3@module_add:
	push	esi
; Line 285
	push	285					; 0000011dH
	push	OFFSET ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 286
	test	esi, esi
	je	SHORT $LN8@module_add
; Line 289
	mov	eax, DWORD PTR _dso$[esp]
; Line 290
	push	DWORD PTR _name$[esp]
	mov	DWORD PTR [esi], eax
	call	_BUF_strdup
	mov	DWORD PTR [esi+4], eax
; Line 291
	mov	eax, DWORD PTR _ifunc$[esp+4]
; Line 295
	push	esi
	push	DWORD PTR _supported_modules
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR _ffunc$[esp+12]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], 0
	call	_sk_push
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@module_add
; Line 296
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN8@module_add:
; Line 297
	xor	eax, eax
	pop	esi
; Line 301
	ret	0
$LN5@module_add:
; Line 300
	mov	eax, esi
	pop	esi
; Line 301
	ret	0
_module_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _module_run
_TEXT	SEGMENT
_rcode$1 = -20						; size = 13
__$ArrayPad$ = -4					; size = 4
_cnf$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_flags$ = 20						; size = 4
_module_run PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 200
	mov	eax, 20					; 00000014H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+20], eax
	push	ebx
	mov	ebx, DWORD PTR _flags$[esp+20]
	push	ebp
	mov	ebp, DWORD PTR _value$[esp+24]
	push	esi
	mov	esi, DWORD PTR _name$[esp+28]
	push	edi
	mov	edi, DWORD PTR _cnf$[esp+32]
; Line 204
	push	esi
	call	_module_find
	add	esp, 4
; Line 207
	test	eax, eax
	jne	SHORT $LN3@module_run
	test	bl, 8
	jne	SHORT $LN8@module_run
; Line 208
	push	ebx
	push	ebp
	push	esi
	push	edi
	call	_module_load_dso
	add	esp, 16					; 00000010H
; Line 210
	test	eax, eax
	jne	SHORT $LN3@module_run
$LN8@module_run:
; Line 211
	test	bl, 4
	jne	SHORT $LN4@module_run
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
	push	113					; 00000071H
	push	118					; 00000076H
	push	14					; 0000000eH
	call	_ERR_put_error
; Line 213
	push	esi
	push	OFFSET ??_C@_07FLJOICMN@module?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 32					; 00000020H
$LN4@module_run:
; Line 215
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 231
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN3@module_run:
; Line 218
	push	edi
	push	ebp
	push	esi
	push	eax
	call	_module_init
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 220
	test	edi, edi
	jg	SHORT $LN6@module_run
; Line 221
	test	bl, 4
	jne	SHORT $LN6@module_run
; Line 223
	push	223					; 000000dfH
	push	OFFSET ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
	push	109					; 0000006dH
	push	118					; 00000076H
	push	14					; 0000000eH
	call	_ERR_put_error
; Line 224
	push	edi
	push	OFFSET ??_C@_04EJENMFPO@?$CF?98d?$AA@
	lea	eax, DWORD PTR _rcode$1[esp+64]
	push	13					; 0000000dH
	push	eax
	call	_BIO_snprintf
; Line 225
	lea	eax, DWORD PTR _rcode$1[esp+72]
	push	eax
	push	OFFSET ??_C@_0L@MGIFNCO@?0?5retcode?$DN?$AA@
	push	ebp
	push	OFFSET ??_C@_08OMICEKMJ@?0?5value?$DN?$AA@
	push	esi
	push	OFFSET ??_C@_07FLJOICMN@module?$DN?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 64					; 00000040H
$LN6@module_run:
; Line 231
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
_module_run ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _module_finish
_TEXT	SEGMENT
_imod$ = 8						; size = 4
_module_finish PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 449
	push	esi
; Line 450
	mov	esi, DWORD PTR _imod$[esp]
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	SHORT $LN2@module_fin
; Line 451
	push	esi
	call	eax
	add	esp, 4
$LN2@module_fin:
; Line 452
	mov	eax, DWORD PTR [esi]
	dec	DWORD PTR [eax+16]
; Line 453
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
; Line 454
	push	DWORD PTR [esi+8]
	call	_CRYPTO_free
; Line 455
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
	pop	esi
; Line 456
	ret	0
_module_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _module_free
_TEXT	SEGMENT
_md$ = 8						; size = 4
_module_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 426
	push	esi
; Line 427
	mov	esi, DWORD PTR _md$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@module_fre
; Line 428
	push	eax
	call	_DSO_free
	add	esp, 4
$LN2@module_fre:
; Line 429
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
; Line 430
	push	esi
	call	_CRYPTO_free
	add	esp, 8
	pop	esi
; Line 431
	ret	0
_module_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_parse_list
_TEXT	SEGMENT
_list_$ = 8						; size = 4
_sep$ = 12						; size = 4
_nospc$ = 16						; size = 4
_list_cb$ = 20						; size = 4
_arg$ = 24						; size = 4
_CONF_parse_list PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 562
	push	esi
; Line 566
	mov	esi, DWORD PTR _list_$[esp]
	test	esi, esi
	jne	SHORT $LN9@CONF_parse
; Line 567
	push	567					; 00000237H
	push	OFFSET ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
	push	115					; 00000073H
	push	119					; 00000077H
	push	14					; 0000000eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 568
	xor	eax, eax
	pop	esi
; Line 597
	ret	0
$LN9@CONF_parse:
	push	ebx
; Line 571
	mov	ebx, DWORD PTR __imp__isspace
	push	edi
	mov	edi, DWORD PTR _list_cb$[esp+8]
	push	ebp
$LL2@CONF_parse:
; Line 573
	cmp	DWORD PTR _nospc$[esp+12], 0
	je	SHORT $LN35@CONF_parse
; Line 574
	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN35@CONF_parse
	npad	1
$LL5@CONF_parse:
	movzx	eax, al
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN35@CONF_parse
	mov	al, BYTE PTR [esi+1]
; Line 575
	inc	esi
	test	al, al
	jne	SHORT $LL5@CONF_parse
$LN35@CONF_parse:
; Line 577
	push	DWORD PTR _sep$[esp+12]
	push	esi
	call	DWORD PTR __imp__strchr
	mov	ebp, eax
	add	esp, 8
; Line 578
	cmp	ebp, esi
	je	SHORT $LN13@CONF_parse
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN13@CONF_parse
; Line 581
	test	ebp, ebp
	je	SHORT $LN14@CONF_parse
; Line 582
	lea	edi, DWORD PTR [ebp-1]
	jmp	SHORT $LN15@CONF_parse
$LN14@CONF_parse:
; Line 584
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
	npad	4
$LL34@CONF_parse:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL34@CONF_parse
	sub	ecx, edx
	lea	edi, DWORD PTR [esi-1]
	add	edi, ecx
$LN15@CONF_parse:
; Line 585
	cmp	DWORD PTR _nospc$[esp+12], 0
	je	SHORT $LN8@CONF_parse
; Line 586
	movzx	eax, BYTE PTR [edi]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@CONF_parse
$LL7@CONF_parse:
	movzx	eax, BYTE PTR [edi-1]
; Line 587
	dec	edi
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL7@CONF_parse
$LN8@CONF_parse:
; Line 589
	push	DWORD PTR _arg$[esp+12]
	sub	edi, esi
	inc	edi
	push	edi
	mov	edi, DWORD PTR _list_cb$[esp+20]
	push	esi
	jmp	SHORT $LN39@CONF_parse
$LN13@CONF_parse:
; Line 579
	push	DWORD PTR _arg$[esp+12]
	push	0
	push	0
$LN39@CONF_parse:
	call	edi
	add	esp, 12					; 0000000cH
; Line 591
	test	eax, eax
	jle	SHORT $LN38@CONF_parse
; Line 593
	test	ebp, ebp
	je	SHORT $LN25@CONF_parse
; Line 595
	lea	esi, DWORD PTR [ebp+1]
; Line 596
	jmp	$LL2@CONF_parse
$LN25@CONF_parse:
; Line 594
	mov	eax, 1
$LN38@CONF_parse:
	pop	ebp
	pop	edi
	pop	ebx
	pop	esi
; Line 597
	ret	0
_CONF_parse_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_get1_default_config_file
_TEXT	SEGMENT
_CONF_get1_default_config_file PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 529
	push	OFFSET ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
	call	DWORD PTR __imp__getenv
	add	esp, 4
; Line 530
	test	eax, eax
	je	SHORT $LN2@CONF_get1_
; Line 531
	push	eax
	call	_BUF_strdup
	add	esp, 4
; Line 550
	ret	0
$LN2@CONF_get1_:
; Line 533
	call	_X509_get_default_cert_area
	lea	edx, DWORD PTR [eax+1]
$LL5@CONF_get1_:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL5@CONF_get1_
	push	esi
	push	edi
	sub	eax, edx
; Line 539
	push	539					; 0000021bH
	push	OFFSET ??_C@_0BJ@LKMHPLFL@?4?2crypto?2conf?2conf_mod?4c?$AA@
	lea	edi, DWORD PTR [eax+13]
	push	edi
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 541
	test	esi, esi
	jne	SHORT $LN3@CONF_get1_
	pop	edi
	pop	esi
; Line 550
	ret	0
$LN3@CONF_get1_:
; Line 543
	push	edi
	call	_X509_get_default_cert_area
	push	eax
	push	esi
	call	_BUF_strlcpy
; Line 545
	push	edi
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	push	esi
	call	_BUF_strlcat
; Line 547
	push	edi
	push	OFFSET ??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@
	push	esi
	call	_BUF_strlcat
	add	esp, 36					; 00000024H
; Line 549
	mov	eax, esi
	pop	edi
	pop	esi
; Line 550
	ret	0
_CONF_get1_default_config_file ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_module_set_usr_data
_TEXT	SEGMENT
_pmod$ = 8						; size = 4
_usr_data$ = 12						; size = 4
_CONF_module_set_usr_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 519
	mov	eax, DWORD PTR _pmod$[esp-4]
	mov	ecx, DWORD PTR _usr_data$[esp-4]
	mov	DWORD PTR [eax+20], ecx
; Line 520
	ret	0
_CONF_module_set_usr_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_module_get_usr_data
_TEXT	SEGMENT
_pmod$ = 8						; size = 4
_CONF_module_get_usr_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 514
	mov	eax, DWORD PTR _pmod$[esp-4]
	mov	eax, DWORD PTR [eax+20]
; Line 515
	ret	0
_CONF_module_get_usr_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_imodule_set_flags
_TEXT	SEGMENT
_md$ = 8						; size = 4
_flags$ = 12						; size = 4
_CONF_imodule_set_flags PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 509
	mov	eax, DWORD PTR _md$[esp-4]
	mov	ecx, DWORD PTR _flags$[esp-4]
	mov	DWORD PTR [eax+12], ecx
; Line 510
	ret	0
_CONF_imodule_set_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_imodule_get_flags
_TEXT	SEGMENT
_md$ = 8						; size = 4
_CONF_imodule_get_flags PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 504
	mov	eax, DWORD PTR _md$[esp-4]
	mov	eax, DWORD PTR [eax+12]
; Line 505
	ret	0
_CONF_imodule_get_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_imodule_get_module
_TEXT	SEGMENT
_md$ = 8						; size = 4
_CONF_imodule_get_module PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 499
	mov	eax, DWORD PTR _md$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 500
	ret	0
_CONF_imodule_get_module ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_imodule_set_usr_data
_TEXT	SEGMENT
_md$ = 8						; size = 4
_usr_data$ = 12						; size = 4
_CONF_imodule_set_usr_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 494
	mov	eax, DWORD PTR _md$[esp-4]
	mov	ecx, DWORD PTR _usr_data$[esp-4]
	mov	DWORD PTR [eax+16], ecx
; Line 495
	ret	0
_CONF_imodule_set_usr_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_imodule_get_usr_data
_TEXT	SEGMENT
_md$ = 8						; size = 4
_CONF_imodule_get_usr_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 489
	mov	eax, DWORD PTR _md$[esp-4]
	mov	eax, DWORD PTR [eax+16]
; Line 490
	ret	0
_CONF_imodule_get_usr_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_imodule_get_value
_TEXT	SEGMENT
_md$ = 8						; size = 4
_CONF_imodule_get_value PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 484
	mov	eax, DWORD PTR _md$[esp-4]
	mov	eax, DWORD PTR [eax+8]
; Line 485
	ret	0
_CONF_imodule_get_value ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_imodule_get_name
_TEXT	SEGMENT
_md$ = 8						; size = 4
_CONF_imodule_get_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 479
	mov	eax, DWORD PTR _md$[esp-4]
	mov	eax, DWORD PTR [eax+4]
; Line 480
	ret	0
_CONF_imodule_get_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_module_add
_TEXT	SEGMENT
_name$ = 8						; size = 4
_ifunc$ = 12						; size = 4
_ffunc$ = 16						; size = 4
_CONF_module_add PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 463
	push	DWORD PTR _ffunc$[esp-4]
	push	DWORD PTR _ifunc$[esp]
	push	DWORD PTR _name$[esp+4]
	push	0
	call	_module_add
	add	esp, 16					; 00000010H
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 467
	ret	0
_CONF_module_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_modules_free
_TEXT	SEGMENT
_CONF_modules_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 471
	call	_CONF_modules_finish
; Line 472
	push	1
	call	_CONF_modules_unload
	pop	ecx
; Line 473
	ret	0
_CONF_modules_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_modules_finish
_TEXT	SEGMENT
_CONF_modules_finish PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 438
	push	DWORD PTR _initialized_modules
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@CONF_modul
	push	esi
$LL2@CONF_modul:
; Line 439
	push	DWORD PTR _initialized_modules
	call	_sk_pop
	mov	esi, eax
	add	esp, 4
; Line 450
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	SHORT $LN6@CONF_modul
; Line 451
	push	esi
	call	eax
	add	esp, 4
$LN6@CONF_modul:
; Line 452
	mov	eax, DWORD PTR [esi]
	dec	DWORD PTR [eax+16]
; Line 453
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
; Line 454
	push	DWORD PTR [esi+8]
	call	_CRYPTO_free
; Line 455
	push	esi
	call	_CRYPTO_free
; Line 438
	push	DWORD PTR _initialized_modules
	call	_sk_num
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LL2@CONF_modul
	pop	esi
$LN3@CONF_modul:
; Line 442
	push	DWORD PTR _initialized_modules
	call	_sk_free
	add	esp, 4
; Line 443
	mov	DWORD PTR _initialized_modules, 0
; Line 444
	ret	0
_CONF_modules_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_modules_unload
_TEXT	SEGMENT
_all$ = 8						; size = 4
_CONF_modules_unload PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 404
	push	edi
; Line 407
	call	_CONF_modules_finish
; Line 409
	push	DWORD PTR _supported_modules
	call	_sk_num
	mov	edi, eax
	add	esp, 4
	sub	edi, 1
	js	SHORT $LN3@CONF_modul
	push	ebx
	mov	ebx, DWORD PTR _all$[esp+4]
	push	esi
$LL4@CONF_modul:
; Line 410
	push	edi
	push	DWORD PTR _supported_modules
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 412
	cmp	DWORD PTR [esi+16], 0
	jg	SHORT $LN6@CONF_modul
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN5@CONF_modul
$LN6@CONF_modul:
	test	ebx, ebx
	je	SHORT $LN2@CONF_modul
$LN5@CONF_modul:
; Line 415
	push	edi
	push	DWORD PTR _supported_modules
	call	_sk_delete
; Line 427
	mov	eax, DWORD PTR [esi]
; Line 415
	add	esp, 8
; Line 427
	test	eax, eax
	je	SHORT $LN10@CONF_modul
; Line 428
	push	eax
	call	_DSO_free
	add	esp, 4
$LN10@CONF_modul:
; Line 429
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
; Line 430
	push	esi
	call	_CRYPTO_free
	add	esp, 8
$LN2@CONF_modul:
; Line 409
	sub	edi, 1
	jns	SHORT $LL4@CONF_modul
	pop	esi
	pop	ebx
$LN3@CONF_modul:
; Line 418
	push	DWORD PTR _supported_modules
	call	_sk_num
	add	esp, 4
	pop	edi
	test	eax, eax
	jne	SHORT $LN7@CONF_modul
; Line 419
	push	DWORD PTR _supported_modules
	call	_sk_free
	add	esp, 4
; Line 420
	mov	DWORD PTR _supported_modules, 0
$LN7@CONF_modul:
; Line 422
	ret	0
_CONF_modules_unload ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_modules_load_file
_TEXT	SEGMENT
_filename$ = 8						; size = 4
_appname$ = 12						; size = 4
_flags$ = 16						; size = 4
_CONF_modules_load_file PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 164
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 167
	xor	ebp, ebp
	xor	esi, esi
; Line 168
	push	ebp
	call	_NCONF_new
; Line 169
	mov	ebx, DWORD PTR _filename$[esp+16]
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $err$12
; Line 172
	test	ebx, ebx
	jne	SHORT $LN3@CONF_modul
; Line 173
	call	_CONF_get1_default_config_file
	mov	esi, eax
; Line 174
	test	esi, esi
	je	SHORT $LN10@CONF_modul
; Line 176
	jmp	SHORT $LN4@CONF_modul
$LN3@CONF_modul:
; Line 177
	mov	esi, ebx
$LN4@CONF_modul:
; Line 179
	push	0
	push	esi
	push	edi
	call	_NCONF_load
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LN6@CONF_modul
; Line 180
	test	BYTE PTR _flags$[esp+12], 16		; 00000010H
	je	SHORT $err$12
	call	_ERR_peek_last_error
	and	eax, 4095				; 00000fffH
	cmp	eax, 114				; 00000072H
	jne	SHORT $err$12
; Line 182
	call	_ERR_clear_error
; Line 183
	mov	ebp, 1
; Line 185
	jmp	SHORT $err$12
$LN6@CONF_modul:
; Line 188
	push	DWORD PTR _flags$[esp+12]
	push	DWORD PTR _appname$[esp+16]
	push	edi
	call	_CONF_modules_load
	add	esp, 12					; 0000000cH
	mov	ebp, eax
$err$12:
; Line 191
	test	ebx, ebx
	jne	SHORT $LN8@CONF_modul
$LN10@CONF_modul:
; Line 192
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN8@CONF_modul:
; Line 193
	push	edi
	call	_NCONF_free
	add	esp, 4
; Line 195
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 196
	ret	0
_CONF_modules_load_file ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CONF_modules_load
_TEXT	SEGMENT
_cnf$ = 8						; size = 4
_appname$ = 12						; size = 4
_flags$ = 16						; size = 4
_CONF_modules_load PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_mod.c
; Line 124
	push	ebp
; Line 131
	mov	ebp, DWORD PTR _cnf$[esp]
	test	ebp, ebp
	jne	SHORT $LN5@CONF_modul
; Line 132
	lea	eax, DWORD PTR [ebp+1]
	pop	ebp
; Line 160
	ret	0
$LN5@CONF_modul:
; Line 134
	mov	eax, DWORD PTR _appname$[esp]
	push	ebx
	mov	ebx, DWORD PTR _flags$[esp+4]
	test	eax, eax
	je	SHORT $LN8@CONF_modul
; Line 135
	push	eax
	push	0
	push	ebp
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 137
	test	eax, eax
	jne	SHORT $LN9@CONF_modul
	test	bl, 32					; 00000020H
	je	SHORT $LN19@CONF_modul
$LN8@CONF_modul:
; Line 138
	push	OFFSET ??_C@_0N@IFOJAMEI@openssl_conf?$AA@
	push	0
	push	ebp
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 140
	test	eax, eax
	jne	SHORT $LN9@CONF_modul
$LN19@CONF_modul:
; Line 141
	call	_ERR_clear_error
	pop	ebx
; Line 142
	mov	eax, 1
	pop	ebp
; Line 160
	ret	0
$LN9@CONF_modul:
	push	edi
; Line 145
	push	eax
	push	ebp
	call	_NCONF_get_section
	mov	edi, eax
	add	esp, 8
; Line 147
	test	edi, edi
	jne	SHORT $LN10@CONF_modul
	pop	edi
	pop	ebx
	pop	ebp
; Line 160
	ret	0
$LN10@CONF_modul:
	push	esi
; Line 150
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN20@CONF_modul
$LL4@CONF_modul:
; Line 151
	push	esi
	push	edi
	call	_sk_value
; Line 152
	push	ebx
	push	DWORD PTR [eax+8]
	push	DWORD PTR [eax+4]
	push	ebp
	call	_module_run
	add	esp, 24					; 00000018H
; Line 153
	test	eax, eax
	jg	SHORT $LN2@CONF_modul
; Line 154
	test	bl, 1
	je	SHORT $LN23@CONF_modul
$LN2@CONF_modul:
; Line 150
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@CONF_modul
$LN20@CONF_modul:
; Line 158
	mov	eax, 1
$LN23@CONF_modul:
	pop	esi
	pop	edi
	pop	ebx
	pop	ebp
; Line 160
	ret	0
_CONF_modules_load ENDP
_TEXT	ENDS
END

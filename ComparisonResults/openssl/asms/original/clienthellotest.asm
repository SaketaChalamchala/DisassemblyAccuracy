; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\ssl\clienthellotest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	??_C@_0N@GCDOMLDM@Hello?5World?$CB?$AA@		; `string'
PUBLIC	??_C@_0CM@CGAIEPCB@Received?5session?5ticket?5is?5not?5a@ ; `string'
PUBLIC	??_C@_0CE@OKIADNEM@ClientHello?5test?3?5FAILED?5?$CITest?5?$CF@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_cleanup_all_ex_data:PROC
EXTRN	_CRYPTO_set_mem_debug_functions:PROC
EXTRN	_CRYPTO_set_mem_debug_options:PROC
EXTRN	_CRYPTO_dbg_malloc:PROC
EXTRN	_CRYPTO_dbg_realloc:PROC
EXTRN	_CRYPTO_dbg_free:PROC
EXTRN	_CRYPTO_dbg_set_options:PROC
EXTRN	_CRYPTO_dbg_get_options:PROC
EXTRN	_CRYPTO_mem_leaks:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_s_mem:PROC
EXTRN	_EVP_cleanup:PROC
EXTRN	_SSL_CTX_new:PROC
EXTRN	_SSL_CTX_free:PROC
EXTRN	_SSL_set_bio:PROC
EXTRN	_SSL_load_error_strings:PROC
EXTRN	_SSL_new:PROC
EXTRN	_SSL_free:PROC
EXTRN	_SSL_connect:PROC
EXTRN	_SSLv23_method:PROC
EXTRN	_TLSv1_2_method:PROC
EXTRN	_SSL_set_connect_state:PROC
EXTRN	_SSL_library_init:PROC
EXTRN	_SSL_set_session_ticket_ext:PROC
EXTRN	_ERR_free_strings:PROC
EXTRN	_ERR_remove_thread_state:PROC
EXTRN	__chkstk:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0CE@OKIADNEM@ClientHello?5test?3?5FAILED?5?$CITest?5?$CF@
CONST	SEGMENT
??_C@_0CE@OKIADNEM@ClientHello?5test?3?5FAILED?5?$CITest?5?$CF@ DB 'Clien'
	DB	'tHello test: FAILED (Test %d)', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@CGAIEPCB@Received?5session?5ticket?5is?5not?5a@
CONST	SEGMENT
??_C@_0CM@CGAIEPCB@Received?5session?5ticket?5is?5not?5a@ DB 'Received se'
	DB	'ssion ticket is not as expected', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GCDOMLDM@Hello?5World?$CB?$AA@
CONST	SEGMENT
??_C@_0N@GCDOMLDM@Hello?5World?$CB?$AA@ DB 'Hello World!', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_data$ = -24						; size = 4
_con$1$ = -20						; size = 4
_ctx$1$ = -16						; size = 4
_testresult$1$ = -12					; size = 4
_dataend$1$ = -8					; size = 4
_err$1$ = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\clienthellotest.c
; Line 89
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 103
	xor	edi, edi
; Line 105
	call	_SSL_library_init
; Line 106
	call	_SSL_load_error_strings
; Line 108
	push	16					; 00000010H
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
; Line 110
	push	OFFSET _CRYPTO_dbg_get_options
	push	OFFSET _CRYPTO_dbg_set_options
	push	OFFSET _CRYPTO_dbg_free
	push	OFFSET _CRYPTO_dbg_realloc
	push	OFFSET _CRYPTO_dbg_malloc
	mov	DWORD PTR _err$1$[esp+68], eax
	call	_CRYPTO_set_mem_debug_functions
; Line 111
	push	3
	call	_CRYPTO_set_mem_debug_options
; Line 112
	push	1
	call	_CRYPTO_mem_ctrl
	add	esp, 36					; 00000024H
$LL7@main:
; Line 119
	mov	DWORD PTR _testresult$1$[esp+40], 0
; Line 120
	test	edi, edi
	jne	SHORT $LN10@main
; Line 121
	call	_TLSv1_2_method
; Line 122
	jmp	SHORT $LN42@main
$LN10@main:
; Line 123
	call	_SSLv23_method
$LN42@main:
	push	eax
	call	_SSL_CTX_new
	add	esp, 4
	mov	DWORD PTR _ctx$1$[esp+40], eax
; Line 125
	push	eax
	call	_SSL_new
	mov	ebp, eax
	mov	DWORD PTR _con$1$[esp+44], ebp
; Line 127
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
	mov	esi, eax
; Line 128
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
	mov	ebx, eax
; Line 129
	push	ebx
	push	esi
	push	ebp
	call	_SSL_set_bio
; Line 130
	push	ebp
	call	_SSL_set_connect_state
	add	esp, 28					; 0000001cH
; Line 133
	test	edi, edi
	je	SHORT $LN13@main
	cmp	edi, 1
	jne	SHORT $LN14@main
$LN13@main:
; Line 134
	push	12					; 0000000cH
	push	OFFSET ??_C@_0N@GCDOMLDM@Hello?5World?$CB?$AA@
	push	ebp
	call	_SSL_set_session_ticket_ext
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$end$44
$LN14@main:
; Line 138
	push	ebp
	call	_SSL_connect
	add	esp, 4
	test	eax, eax
	jg	$end$44
; Line 143
	lea	eax, DWORD PTR _data$[esp+40]
	push	eax
	push	0
	push	3
	push	ebx
	call	_BIO_ctrl
; Line 144
	mov	ecx, DWORD PTR _data$[esp+56]
	add	esp, 16					; 00000010H
	lea	ebx, DWORD PTR [ecx+eax]
; Line 151
	add	ecx, 43					; 0000002bH
	mov	DWORD PTR _dataend$1$[esp+40], ebx
	mov	DWORD PTR _data$[esp+40], ecx
; Line 152
	lea	eax, DWORD PTR [ecx+1]
	cmp	eax, ebx
	ja	$end$44
; Line 156
	movzx	edx, BYTE PTR [ecx]
	inc	edx
	add	edx, ecx
	mov	DWORD PTR _data$[esp+40], edx
; Line 157
	lea	eax, DWORD PTR [edx+2]
	cmp	eax, ebx
	ja	$end$44
; Line 160
	movzx	ecx, BYTE PTR [edx]
	movzx	eax, BYTE PTR [edx+1]
	shl	ecx, 8
	or	ecx, eax
; Line 161
	add	ecx, 2
	add	ecx, edx
	mov	DWORD PTR _data$[esp+40], ecx
; Line 162
	lea	eax, DWORD PTR [ecx+1]
	cmp	eax, ebx
	ja	$end$44
; Line 166
	movzx	eax, BYTE PTR [ecx]
	inc	ecx
	add	eax, ecx
	mov	DWORD PTR _data$[esp+40], eax
; Line 167
	lea	ecx, DWORD PTR [eax+2]
	cmp	ecx, ebx
	ja	$end$44
; Line 170
	movzx	esi, BYTE PTR [eax]
	movzx	eax, BYTE PTR [eax+1]
	shl	esi, 8
	or	esi, eax
; Line 171
	mov	DWORD PTR _data$[esp+40], ecx
; Line 172
	lea	eax, DWORD PTR [esi+ecx]
	cmp	eax, ebx
	ja	$end$44
; Line 176
	cmp	esi, 4
	jbe	$end$44
	npad	5
$LL8@main:
; Line 177
	movzx	eax, BYTE PTR [ecx+1]
	movzx	ebx, BYTE PTR [ecx]
; Line 178
	add	ecx, 2
	mov	DWORD PTR _data$[esp+40], ecx
	shl	ebx, 8
	or	ebx, eax
; Line 179
	movzx	edx, BYTE PTR [ecx]
	movzx	eax, BYTE PTR [ecx+1]
; Line 180
	add	ecx, 2
	shl	edx, 8
	or	edx, eax
	mov	DWORD PTR _data$[esp+40], ecx
; Line 181
	lea	ebp, DWORD PTR [edx+ecx]
	cmp	ebp, DWORD PTR _dataend$1$[esp+40]
	ja	SHORT $LN41@main
; Line 184
	cmp	ebx, 35					; 00000023H
	jne	SHORT $LN23@main
; Line 186
	test	edi, edi
	je	SHORT $LN24@main
	cmp	edi, 1
	je	SHORT $LN24@main
$LN23@main:
; Line 198
	mov	eax, -4					; fffffffcH
; Line 199
	mov	ecx, ebp
	sub	eax, edx
	mov	DWORD PTR _data$[esp+40], ecx
	add	esi, eax
	cmp	esi, 4
	ja	SHORT $LL8@main
; Line 176
	jmp	SHORT $LN41@main
$LN24@main:
; Line 188
	cmp	edx, 12					; 0000000cH
	jne	SHORT $LN25@main
	cmp	DWORD PTR [ecx], 1819043144		; 6c6c6548H
	jne	SHORT $LN25@main
	cmp	DWORD PTR [ecx+4], 1867980911		; 6f57206fH
	jne	SHORT $LN25@main
	cmp	DWORD PTR [ecx+8], 560229490		; 21646c72H
	jne	SHORT $LN25@main
; Line 190
	mov	DWORD PTR _testresult$1$[esp+40], 1
; Line 191
	jmp	SHORT $LN41@main
$LN25@main:
; Line 192
	push	OFFSET ??_C@_0CM@CGAIEPCB@Received?5session?5ticket?5is?5not?5a@
	call	_printf
	add	esp, 4
$LN41@main:
	mov	ebp, DWORD PTR _con$1$[esp+40]
$end$44:
; Line 203
	push	ebp
	call	_SSL_free
; Line 204
	push	DWORD PTR _ctx$1$[esp+44]
	call	_SSL_CTX_free
; Line 205
	mov	esi, DWORD PTR _testresult$1$[esp+48]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN32@main
; Line 118
	inc	edi
	cmp	edi, 2
	jl	$LL7@main
; Line 205
	jmp	SHORT $LN6@main
$LN32@main:
; Line 206
	push	edi
	push	OFFSET ??_C@_0CE@OKIADNEM@ClientHello?5test?3?5FAILED?5?$CITest?5?$CF@
	call	_printf
	add	esp, 8
$LN6@main:
; Line 211
	call	_ERR_free_strings
; Line 212
	push	0
	call	_ERR_remove_thread_state
; Line 213
	call	_EVP_cleanup
; Line 214
	call	_CRYPTO_cleanup_all_ex_data
; Line 215
	mov	edi, DWORD PTR _err$1$[esp+44]
	push	edi
	call	_CRYPTO_mem_leaks
; Line 216
	push	edi
	call	_BIO_free
	add	esp, 12					; 0000000cH
; Line 218
	xor	eax, eax
	test	esi, esi
	sete	al
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 219
	add	esp, 24					; 00000018H
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

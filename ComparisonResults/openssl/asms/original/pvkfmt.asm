; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_b2i_PrivateKey
PUBLIC	_b2i_PublicKey
PUBLIC	_b2i_PrivateKey_bio
PUBLIC	_b2i_PublicKey_bio
PUBLIC	_i2b_PrivateKey_bio
PUBLIC	_i2b_PublicKey_bio
PUBLIC	_b2i_PVK_bio
PUBLIC	_i2b_PVK_bio
PUBLIC	??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@ ; `string'
PUBLIC	__xmm@ffffffffffffffffffffffffffffffff
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_write:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_mod_exp:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_EncryptInit_ex:PROC
EXTRN	_EVP_DecryptInit_ex:PROC
EXTRN	_EVP_DecryptUpdate:PROC
EXTRN	_EVP_DecryptFinal_ex:PROC
EXTRN	_EVP_CIPHER_CTX_init:PROC
EXTRN	_EVP_CIPHER_CTX_cleanup:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_rc4:PROC
EXTRN	_EVP_PKEY_set1_RSA:PROC
EXTRN	_EVP_PKEY_set1_DSA:PROC
EXTRN	_EVP_PKEY_new:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_RSA_new:PROC
EXTRN	_RSA_free:PROC
EXTRN	_DSA_new:PROC
EXTRN	_DSA_free:PROC
EXTRN	_PEM_def_callback:PROC
EXTRN	_RAND_bytes:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT __xmm@ffffffffffffffffffffffffffffffff
CONST	SEGMENT
__xmm@ffffffffffffffffffffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
CONST	SEGMENT
??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@ DB '.\crypto\pem\pvkfm'
	DB	't.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2b_PVK
_TEXT	SEGMENT
$T1 = -1204						; size = 4
_magic$2 = -1204					; size = 4
_p$ = -1204						; size = 4
_u$GSCopy$1$ = -1200					; size = 4
_enctmplen$3 = -1200					; size = 4
_salt$1$ = -1196					; size = 4
_cb$GSCopy$1$ = -1192					; size = 4
_cctx$ = -1188						; size = 140
_keybuf$4 = -1048					; size = 20
_psbuf$5 = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_pk$ = 12						; size = 4
_enclevel$ = 16						; size = 4
_cb$ = 20						; size = 4
_u$ = 24						; size = 4
_i2b_PVK PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 793
	mov	eax, 1204				; 000004b4H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1204], eax
	mov	eax, DWORD PTR _cb$[esp+1200]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _pk$[esp+1208]
	mov	DWORD PTR _cb$GSCopy$1$[esp+1212], eax
	mov	eax, DWORD PTR _u$[esp+1208]
	push	esi
	mov	DWORD PTR _u$GSCopy$1$[esp+1216], eax
; Line 794
	mov	esi, 24					; 00000018H
	push	edi
	mov	edi, DWORD PTR _out$[esp+1216]
; Line 797
	lea	eax, DWORD PTR _cctx$[esp+1220]
	push	eax
	mov	DWORD PTR _salt$1$[esp+1224], 0
	call	_EVP_CIPHER_CTX_init
; Line 798
	mov	ebx, DWORD PTR _enclevel$[esp+1220]
	add	esp, 4
	test	ebx, ebx
	mov	eax, 40					; 00000028H
	cmovne	esi, eax
; Line 464
	mov	eax, DWORD PTR [ebp]
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN24@i2b_PVK
; Line 465
	lea	eax, DWORD PTR _magic$2[esp+1220]
	push	eax
	push	0
	push	DWORD PTR [ebp+20]
	call	_check_bitlen_dsa
; Line 466
	mov	edx, 8704				; 00002200H
	jmp	SHORT $LN68@i2b_PVK
$LN24@i2b_PVK:
; Line 467
	cmp	eax, 6
	jne	$LN67@i2b_PVK
; Line 468
	lea	eax, DWORD PTR _magic$2[esp+1220]
	push	eax
	push	0
	push	DWORD PTR [ebp+20]
	call	_check_bitlen_rsa
; Line 469
	mov	edx, 41984				; 0000a400H
$LN68@i2b_PVK:
; Line 468
	add	esp, 12					; 0000000cH
; Line 472
	test	eax, eax
	je	$LN67@i2b_PVK
; Line 208
	lea	ecx, DWORD PTR [eax+7]
	shr	ecx, 3
; Line 474
	cmp	edx, 8704				; 00002200H
; Line 210
	jne	SHORT $LN40@i2b_PVK
; Line 223
	lea	eax, DWORD PTR [ecx*2+64]
	jmp	SHORT $LN69@i2b_PVK
$LN40@i2b_PVK:
; Line 209
	add	eax, 15					; 0000000fH
	shr	eax, 4
; Line 233
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [eax+ecx*2]
	add	eax, 4
$LN69@i2b_PVK:
	mov	DWORD PTR $T1[esp+1220], eax
; Line 474
	add	eax, 16					; 00000010H
; Line 801
	js	$LN67@i2b_PVK
; Line 803
	add	esi, eax
; Line 804
	test	edi, edi
	je	$LN71@i2b_PVK
; Line 806
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	jne	SHORT $LN6@i2b_PVK
; Line 809
	push	809					; 00000329H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 810
	test	eax, eax
	jne	SHORT $LN7@i2b_PVK
; Line 811
	push	811					; 0000032bH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	65					; 00000041H
	push	137					; 00000089H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 812
	jmp	$LN67@i2b_PVK
$LN7@i2b_PVK:
; Line 814
	mov	DWORD PTR [edi], eax
$LN6@i2b_PVK:
; Line 422
	mov	DWORD PTR [eax], -1330253538		; b0b5f11eH
; Line 425
	lea	edx, DWORD PTR [eax+12]
; Line 422
	mov	DWORD PTR [eax+4], 0
; Line 819
	cmp	DWORD PTR [ebp], 116			; 00000074H
	jne	SHORT $LN8@i2b_PVK
; Line 422
	mov	DWORD PTR [eax+8], 2
; Line 820
	jmp	SHORT $LN59@i2b_PVK
$LN8@i2b_PVK:
; Line 422
	mov	DWORD PTR [eax+8], 1
$LN59@i2b_PVK:
; Line 823
	xor	ecx, ecx
; Line 425
	lea	edi, DWORD PTR [edx+12]
; Line 823
	test	ebx, ebx
	setne	cl
; Line 422
	mov	BYTE PTR [edx], cl
; Line 423
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+1], al
; Line 424
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+2], al
; Line 425
	shr	ecx, 24					; 00000018H
; Line 824
	neg	ebx
; Line 425
	mov	BYTE PTR [edx+3], cl
; Line 824
	sbb	ebx, ebx
	and	ebx, 16					; 00000010H
; Line 422
	mov	BYTE PTR [edx+4], bl
; Line 423
	mov	eax, ebx
	shr	eax, 8
	mov	BYTE PTR [edx+5], al
; Line 424
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+6], al
; Line 425
	shr	ebx, 24					; 00000018H
	mov	BYTE PTR [edx+7], bl
; Line 422
	mov	ebx, DWORD PTR $T1[esp+1220]
	add	ebx, 16					; 00000010H
; Line 426
	mov	DWORD PTR _p$[esp+1220], edi
	mov	eax, ebx
	mov	BYTE PTR [edx+8], bl
	shr	eax, 8
	mov	BYTE PTR [edx+9], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+10], al
	mov	eax, ebx
	shr	eax, 24					; 00000018H
; Line 826
	cmp	DWORD PTR _enclevel$[esp+1216], 0
; Line 425
	mov	BYTE PTR [edx+11], al
; Line 826
	je	SHORT $LN10@i2b_PVK
; Line 827
	push	16					; 00000010H
	push	edi
	call	_RAND_bytes
	add	esp, 8
	test	eax, eax
	jle	SHORT $error$73
; Line 829
	mov	DWORD PTR _salt$1$[esp+1220], edi
; Line 830
	add	edi, 16					; 00000010H
	mov	DWORD PTR _p$[esp+1220], edi
$LN10@i2b_PVK:
; Line 832
	push	0
	lea	eax, DWORD PTR _p$[esp+1224]
	push	ebp
	push	eax
	call	_do_i2b
; Line 833
	mov	ebp, DWORD PTR _enclevel$[esp+1228]
	add	esp, 12					; 0000000cH
	test	ebp, ebp
	je	$LN71@i2b_PVK
; Line 840
	push	DWORD PTR _u$GSCopy$1$[esp+1220]
	mov	eax, DWORD PTR _cb$GSCopy$1$[esp+1224]
	push	1
	push	1024					; 00000400H
	test	eax, eax
	je	SHORT $LN14@i2b_PVK
	lea	ecx, DWORD PTR _psbuf$5[esp+1232]
	push	ecx
	call	eax
	jmp	SHORT $LN70@i2b_PVK
$LN14@i2b_PVK:
; Line 842
	lea	eax, DWORD PTR _psbuf$5[esp+1232]
	push	eax
	call	_PEM_def_callback
$LN70@i2b_PVK:
	add	esp, 16					; 00000010H
; Line 843
	test	eax, eax
	jg	SHORT $LN16@i2b_PVK
; Line 844
	push	844					; 0000034cH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	104					; 00000068H
	push	137					; 00000089H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$error$73:
; Line 865
	lea	eax, DWORD PTR _cctx$[esp+1220]
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
	add	esp, 4
$LN67@i2b_PVK:
; Line 802
	or	eax, -1
$LN1@i2b_PVK:
; Line 867
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1220]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1204				; 000004b4H
	ret	0
$LN16@i2b_PVK:
; Line 847
	mov	edi, DWORD PTR _salt$1$[esp+1220]
	push	eax
	lea	eax, DWORD PTR _psbuf$5[esp+1224]
	push	eax
	push	16					; 00000010H
	lea	eax, DWORD PTR _keybuf$4[esp+1232]
	push	edi
	push	eax
	call	_derive_pvk_key
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $error$73
; Line 850
	cmp	ebp, 1
	jne	SHORT $LN18@i2b_PVK
; Line 851
	xorps	xmm0, xmm0
	mov	WORD PTR _keybuf$4[esp+1233], 0
	movq	QWORD PTR _keybuf$4[esp+1225], xmm0
	mov	BYTE PTR _keybuf$4[esp+1235], 0
$LN18@i2b_PVK:
; Line 853
	push	0
	lea	eax, DWORD PTR _keybuf$4[esp+1224]
	add	edi, 24					; 00000018H
	push	eax
	push	0
	call	_EVP_rc4
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1236]
	push	eax
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$error$73
; Line 855
	lea	eax, DWORD PTR _keybuf$4[esp+1220]
	push	20					; 00000014H
	push	eax
	call	_OPENSSL_cleanse
; Line 856
	lea	eax, DWORD PTR [ebx-8]
	push	eax
	push	edi
	lea	eax, DWORD PTR _enctmplen$3[esp+1236]
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1240]
	push	edi
	push	eax
	call	_EVP_DecryptUpdate
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$error$73
; Line 858
	lea	eax, DWORD PTR _enctmplen$3[esp+1220]
	push	eax
	mov	eax, DWORD PTR _enctmplen$3[esp+1224]
	add	eax, edi
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1228]
	push	eax
	call	_EVP_DecryptFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$error$73
; Line 861
	lea	eax, DWORD PTR _cctx$[esp+1220]
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
	add	esp, 4
$LN71@i2b_PVK:
; Line 862
	mov	eax, esi
	jmp	$LN1@i2b_PVK
_i2b_PVK ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_PVK_body
_TEXT	SEGMENT
_saltlen$GSCopy$1$ = -1208				; size = 4
_cb$GSCopy$1$ = -1204					; size = 4
_enctmplen$1 = -1204					; size = 4
_u$GSCopy$1$ = -1200					; size = 4
_q$ = -1200						; size = 4
_inlen$2$ = -1196					; size = 4
_p$ = -1196						; size = 4
_keylen$GSCopy$1$ = -1192				; size = 4
_cctx$ = -1188						; size = 140
_keybuf$2 = -1048					; size = 20
_psbuf$3 = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_saltlen$ = 12						; size = 4
_keylen$ = 16						; size = 4
_cb$ = 20						; size = 4
_u$ = 24						; size = 4
_do_PVK_body PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 683
	mov	eax, 1208				; 000004b8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1208], eax
	mov	eax, DWORD PTR _in$[esp+1204]
	mov	ecx, DWORD PTR _keylen$[esp+1204]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _saltlen$[esp+1212]
; Line 684
	xor	ebx, ebx
	push	esi
; Line 685
	mov	esi, DWORD PTR [eax]
; Line 689
	lea	eax, DWORD PTR _cctx$[esp+1220]
	mov	DWORD PTR _keylen$GSCopy$1$[esp+1220], ecx
	mov	ecx, DWORD PTR _cb$[esp+1216]
	push	edi
	mov	DWORD PTR _cb$GSCopy$1$[esp+1224], ecx
	xor	edi, edi
	mov	ecx, DWORD PTR _u$[esp+1220]
	push	eax
	mov	DWORD PTR _saltlen$GSCopy$1$[esp+1228], ebp
	mov	DWORD PTR _u$GSCopy$1$[esp+1228], ecx
	mov	DWORD PTR _p$[esp+1228], esi
	call	_EVP_CIPHER_CTX_init
	add	esp, 4
; Line 690
	test	ebp, ebp
	je	$LN2@do_PVK_bod
; Line 695
	push	DWORD PTR _u$GSCopy$1$[esp+1224]
	mov	eax, DWORD PTR _cb$GSCopy$1$[esp+1228]
	push	edi
	push	1024					; 00000400H
	test	eax, eax
	je	SHORT $LN3@do_PVK_bod
	lea	ecx, DWORD PTR _psbuf$3[esp+1236]
	push	ecx
	call	eax
	jmp	SHORT $LN30@do_PVK_bod
$LN3@do_PVK_bod:
; Line 697
	lea	eax, DWORD PTR _psbuf$3[esp+1236]
	push	eax
	call	_PEM_def_callback
$LN30@do_PVK_bod:
	mov	ebp, eax
	add	esp, 16					; 00000010H
; Line 698
	test	ebp, ebp
	jg	SHORT $LN5@do_PVK_bod
; Line 699
	push	699					; 000002bbH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	104					; 00000068H
	push	135					; 00000087H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 700
	jmp	$LN29@do_PVK_bod
$LN5@do_PVK_bod:
; Line 702
	mov	eax, DWORD PTR _keylen$GSCopy$1$[esp+1224]
	push	702					; 000002beH
	add	eax, 8
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 703
	test	edi, edi
	jne	SHORT $LN6@do_PVK_bod
; Line 704
	push	704					; 000002c0H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	65					; 00000041H
	push	135					; 00000087H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 705
	jmp	$LN29@do_PVK_bod
$LN6@do_PVK_bod:
; Line 707
	push	ebp
	mov	ebp, DWORD PTR _saltlen$GSCopy$1$[esp+1228]
	lea	eax, DWORD PTR _psbuf$3[esp+1228]
	push	eax
	push	ebp
	lea	eax, DWORD PTR _keybuf$2[esp+1236]
	push	esi
	push	eax
	call	_derive_pvk_key
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$32
; Line 712
	mov	eax, DWORD PTR [esi+ebp]
	add	esi, ebp
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR [esi+4]
; Line 713
	add	esi, 8
	mov	DWORD PTR [edi+4], eax
; Line 714
	mov	eax, DWORD PTR _keylen$GSCopy$1$[esp+1224]
	cmp	eax, 8
	jae	SHORT $LN8@do_PVK_bod
; Line 715
	push	715					; 000002cbH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	125					; 0000007dH
	push	135					; 00000087H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 716
	jmp	$err$32
$LN8@do_PVK_bod:
; Line 718
	add	eax, -8					; fffffff8H
; Line 719
	lea	ebp, DWORD PTR [edi+8]
	mov	DWORD PTR _inlen$2$[esp+1224], eax
; Line 720
	lea	eax, DWORD PTR _keybuf$2[esp+1224]
	push	0
	push	eax
	push	0
	mov	DWORD PTR _q$[esp+1236], ebp
	call	_EVP_rc4
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1240]
	push	eax
	call	_EVP_DecryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN29@do_PVK_bod
; Line 722
	push	DWORD PTR _inlen$2$[esp+1224]
	lea	eax, DWORD PTR _enctmplen$1[esp+1228]
	push	esi
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1236]
	push	ebp
	push	eax
	call	_EVP_DecryptUpdate
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN29@do_PVK_bod
; Line 724
	lea	eax, DWORD PTR _enctmplen$1[esp+1224]
	push	eax
	mov	eax, DWORD PTR _enctmplen$1[esp+1228]
	add	eax, ebp
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1232]
	push	eax
	call	_EVP_DecryptFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN29@do_PVK_bod
; Line 726
	lea	eax, DWORD PTR _q$[esp+1224]
	push	eax
	call	_read_ledword
	add	esp, 4
; Line 727
	cmp	eax, 843141970				; 32415352H
	je	$LN12@do_PVK_bod
	cmp	eax, 844321604				; 32535344H
	je	$LN12@do_PVK_bod
; Line 730
	push	0
	lea	eax, DWORD PTR _keybuf$2[esp+1228]
	mov	DWORD PTR _q$[esp+1228], ebp
	push	eax
	xorps	xmm0, xmm0
	mov	WORD PTR _keybuf$2[esp+1245], bx
	push	0
	movq	QWORD PTR _keybuf$2[esp+1241], xmm0
	mov	BYTE PTR _keybuf$2[esp+1251], bl
	call	_EVP_rc4
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1240]
	push	eax
	call	_EVP_DecryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN29@do_PVK_bod
; Line 732
	lea	eax, DWORD PTR _keybuf$2[esp+1224]
	push	20					; 00000014H
	push	eax
	call	_OPENSSL_cleanse
; Line 733
	push	DWORD PTR _inlen$2$[esp+1232]
	lea	eax, DWORD PTR _enctmplen$1[esp+1236]
	push	esi
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1244]
	push	ebp
	push	eax
	call	_EVP_DecryptUpdate
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$LN29@do_PVK_bod
; Line 735
	lea	eax, DWORD PTR _enctmplen$1[esp+1224]
	push	eax
	mov	eax, DWORD PTR _enctmplen$1[esp+1228]
	add	eax, ebp
	push	eax
	lea	eax, DWORD PTR _cctx$[esp+1232]
	push	eax
	call	_EVP_DecryptFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN29@do_PVK_bod
; Line 737
	lea	eax, DWORD PTR _q$[esp+1224]
	push	eax
	call	_read_ledword
	add	esp, 4
; Line 738
	cmp	eax, 843141970				; 32415352H
	je	SHORT $LN13@do_PVK_bod
	cmp	eax, 844321604				; 32535344H
	je	SHORT $LN13@do_PVK_bod
; Line 739
	push	739					; 000002e3H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	101					; 00000065H
	push	135					; 00000087H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 740
	jmp	SHORT $LN29@do_PVK_bod
$LN12@do_PVK_bod:
; Line 743
	lea	eax, DWORD PTR _keybuf$2[esp+1224]
	push	20					; 00000014H
	push	eax
	call	_OPENSSL_cleanse
	add	esp, 8
$LN13@do_PVK_bod:
; Line 744
	mov	DWORD PTR _p$[esp+1224], edi
$LN2@do_PVK_bod:
; Line 401
	mov	eax, DWORD PTR _keylen$GSCopy$1$[esp+1224]
	push	0
	push	eax
	lea	eax, DWORD PTR _p$[esp+1232]
	push	eax
	call	_do_b2i
	add	esp, 12					; 0000000cH
; Line 747
	mov	ebx, eax
$LN29@do_PVK_bod:
	mov	ebp, DWORD PTR _saltlen$GSCopy$1$[esp+1224]
$err$32:
; Line 749
	lea	eax, DWORD PTR _cctx$[esp+1224]
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
	add	esp, 4
; Line 750
	test	edi, edi
	je	SHORT $LN22@do_PVK_bod
	test	ebp, ebp
	je	SHORT $LN22@do_PVK_bod
; Line 751
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN22@do_PVK_bod:
; Line 753
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1224]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1208				; 000004b8H
	ret	0
_do_PVK_body ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _derive_pvk_key
_TEXT	SEGMENT
_mctx$ = -24						; size = 24
_key$ = 8						; size = 4
_salt$ = 12						; size = 4
_saltlen$ = 16						; size = 4
_pass$ = 20						; size = 4
_passlen$ = 24						; size = 4
_derive_pvk_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 666
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	esi
; Line 669
	lea	eax, DWORD PTR _mctx$[esp+28]
	mov	esi, 1
	push	eax
	call	_EVP_MD_CTX_init
	add	esp, 4
; Line 673
	push	0
	call	_EVP_sha1
	push	eax
	lea	eax, DWORD PTR _mctx$[esp+36]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@derive_pvk
	push	DWORD PTR _saltlen$[esp+24]
	lea	eax, DWORD PTR _mctx$[esp+32]
	push	DWORD PTR _salt$[esp+28]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@derive_pvk
	push	DWORD PTR _passlen$[esp+24]
	lea	eax, DWORD PTR _mctx$[esp+32]
	push	DWORD PTR _pass$[esp+28]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@derive_pvk
	push	0
	push	DWORD PTR _key$[esp+28]
	lea	eax, DWORD PTR _mctx$[esp+36]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@derive_pvk
$LN3@derive_pvk:
; Line 674
	xor	esi, esi
$LN2@derive_pvk:
; Line 676
	lea	eax, DWORD PTR _mctx$[esp+28]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 677
	mov	eax, esi
	pop	esi
; Line 678
	add	esp, 24					; 00000018H
	ret	0
_derive_pvk_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_PVK_header
_TEXT	SEGMENT
_in$ = 8						; size = 4
_length$ = 12						; size = 4
_skip_magic$ = 16					; size = 4
_psaltlen$ = 20						; size = 4
_pkeylen$ = 24						; size = 4
_do_PVK_header PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 626
	cmp	DWORD PTR _skip_magic$[esp-4], 0
	push	esi
	push	edi
	mov	edi, DWORD PTR _in$[esp+4]
	mov	esi, DWORD PTR [edi]
	je	SHORT $LN2@do_PVK_hea
; Line 627
	cmp	DWORD PTR _length$[esp+4], 20		; 00000014H
	jae	SHORT $LN6@do_PVK_hea
; Line 628
	push	628					; 00000274H
$LN23@do_PVK_hea:
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	125					; 0000007dH
	push	136					; 00000088H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 629
	xor	eax, eax
	pop	edi
	pop	esi
; Line 661
	ret	0
$LN2@do_PVK_hea:
; Line 632
	cmp	DWORD PTR _length$[esp+4], 24		; 00000018H
	jae	SHORT $LN5@do_PVK_hea
; Line 633
	push	633					; 00000279H
; Line 634
	jmp	SHORT $LN23@do_PVK_hea
$LN5@do_PVK_hea:
; Line 82
	movzx	eax, BYTE PTR [esi+1]
	lea	ecx, DWORD PTR [esi+1]
	movzx	edx, BYTE PTR [esi]
; Line 84
	lea	esi, DWORD PTR [ecx+3]
	shl	eax, 8
	or	edx, eax
	movzx	eax, BYTE PTR [ecx+1]
	shl	eax, 16					; 00000010H
	or	edx, eax
	movzx	eax, BYTE PTR [ecx+2]
	shl	eax, 24					; 00000018H
	or	eax, edx
; Line 637
	cmp	eax, -1330253538			; b0b5f11eH
	je	SHORT $LN6@do_PVK_hea
; Line 638
	push	638					; 0000027eH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	116					; 00000074H
	push	136					; 00000088H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 661
	ret	0
$LN6@do_PVK_hea:
; Line 82
	movzx	eax, BYTE PTR [esi+9]
; Line 84
	lea	edx, DWORD PTR [esi+8]
; Line 81
	movzx	ecx, BYTE PTR [edx]
; Line 84
	movzx	esi, BYTE PTR [edx+3]
	shl	eax, 8
	or	ecx, eax
	shl	esi, 24					; 00000018H
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 16					; 00000010H
	or	ecx, eax
; Line 82
	movzx	eax, BYTE PTR [edx+5]
	shl	eax, 8
; Line 84
	or	esi, ecx
; Line 81
	movzx	ecx, BYTE PTR [edx+4]
; Line 82
	or	ecx, eax
; Line 83
	movzx	eax, BYTE PTR [edx+6]
	shl	eax, 16					; 00000010H
	or	ecx, eax
; Line 84
	movzx	eax, BYTE PTR [edx+7]
	shl	eax, 24					; 00000018H
	or	eax, ecx
	lea	ecx, DWORD PTR [edx+8]
	push	ebx
; Line 648
	mov	ebx, DWORD PTR _psaltlen$[esp+8]
	push	ebp
; Line 84
	lea	ebp, DWORD PTR [ecx+4]
; Line 648
	mov	DWORD PTR [ebx], eax
; Line 82
	movzx	eax, BYTE PTR [ecx+1]
	movzx	edx, BYTE PTR [ecx]
	shl	eax, 8
	or	edx, eax
; Line 83
	movzx	eax, BYTE PTR [ecx+2]
; Line 84
	movzx	ecx, BYTE PTR [ecx+3]
	shl	eax, 16					; 00000010H
	or	edx, eax
	shl	ecx, 24					; 00000018H
; Line 649
	mov	eax, DWORD PTR _pkeylen$[esp+12]
; Line 84
	or	ecx, edx
; Line 649
	mov	DWORD PTR [eax], ecx
; Line 651
	cmp	ecx, 102400				; 00019000H
	ja	SHORT $LN8@do_PVK_hea
	mov	eax, DWORD PTR [ebx]
	cmp	eax, 10240				; 00002800H
	ja	SHORT $LN8@do_PVK_hea
; Line 654
	test	esi, esi
	je	SHORT $LN9@do_PVK_hea
	test	eax, eax
	jne	SHORT $LN9@do_PVK_hea
; Line 655
	push	655					; 0000028fH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	121					; 00000079H
	push	136					; 00000088H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN8@do_PVK_hea:
; Line 652
	pop	ebp
	pop	ebx
	pop	edi
	xor	eax, eax
	pop	esi
; Line 661
	ret	0
$LN9@do_PVK_hea:
; Line 659
	mov	DWORD PTR [edi], ebp
; Line 660
	mov	eax, 1
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 661
	ret	0
_do_PVK_header ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_i2b_bio
_TEXT	SEGMENT
_tmp$ = -4						; size = 4
_out$ = 8						; size = 4
_pk$ = 12						; size = 4
_ispub$ = 16						; size = 4
_do_i2b_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 507
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 510
	push	DWORD PTR _ispub$[esp+4]
	lea	eax, DWORD PTR _tmp$[esp+12]
	mov	DWORD PTR _tmp$[esp+12], 0
	push	DWORD PTR _pk$[esp+8]
	push	eax
	call	_do_i2b
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 511
	test	ebx, ebx
	jns	SHORT $LN2@do_i2b_bio
; Line 512
	or	eax, -1
	pop	ebx
; Line 518
	pop	ecx
	ret	0
$LN2@do_i2b_bio:
	push	esi
; Line 513
	push	ebx
	push	DWORD PTR _tmp$[esp+16]
	push	DWORD PTR _out$[esp+16]
	call	_BIO_write
; Line 514
	push	DWORD PTR _tmp$[esp+24]
	mov	esi, eax
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 515
	or	eax, -1
	cmp	esi, ebx
	cmove	eax, ebx
	pop	esi
	pop	ebx
; Line 518
	pop	ecx
	ret	0
_do_i2b_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_i2b
_TEXT	SEGMENT
_magic$ = -12						; size = 4
_bitlen$1$ = -8						; size = 4
_p$ = -8						; size = 4
_noinc$1$ = -4						; size = 4
_out$ = 8						; size = 4
_keyalg$1$ = 12						; size = 4
_pk$ = 12						; size = 4
_ispub$ = 16						; size = 4
_do_i2b	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 460
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
; Line 464
	mov	ebx, DWORD PTR _pk$[esp+12]
	push	esi
	mov	DWORD PTR _magic$[esp+20], 0
	mov	DWORD PTR _noinc$1$[esp+20], 0
	mov	eax, DWORD PTR [ebx]
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN2@do_i2b
; Line 465
	mov	esi, DWORD PTR _ispub$[esp+16]
	lea	eax, DWORD PTR _magic$[esp+20]
	push	eax
	push	esi
	push	DWORD PTR [ebx+20]
	call	_check_bitlen_dsa
; Line 466
	mov	edx, 8704				; 00002200H
	jmp	SHORT $LN33@do_i2b
$LN2@do_i2b:
; Line 467
	cmp	eax, 6
	jne	SHORT $LN4@do_i2b
; Line 468
	mov	esi, DWORD PTR _ispub$[esp+16]
	lea	eax, DWORD PTR _magic$[esp+20]
	push	eax
	push	esi
	push	DWORD PTR [ebx+20]
	call	_check_bitlen_rsa
; Line 469
	mov	edx, 41984				; 0000a400H
$LN33@do_i2b:
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _keyalg$1$[esp+16], edx
	mov	DWORD PTR _bitlen$1$[esp+20], eax
; Line 472
	test	eax, eax
	jne	SHORT $LN6@do_i2b
$LN4@do_i2b:
	pop	esi
; Line 473
	or	eax, -1
	pop	ebx
; Line 504
	add	esp, 12					; 0000000cH
	ret	0
$LN6@do_i2b:
; Line 208
	lea	ecx, DWORD PTR [eax+7]
	shr	ecx, 3
	push	ebp
; Line 474
	cmp	edx, 8704				; 00002200H
; Line 210
	jne	SHORT $LN18@do_i2b
; Line 216
	test	esi, esi
	je	SHORT $LN20@do_i2b
; Line 217
	lea	ebp, DWORD PTR [ecx+22]
	lea	ebp, DWORD PTR [ecx+ebp*2]
	jmp	SHORT $LN23@do_i2b
$LN20@do_i2b:
; Line 223
	lea	ebp, DWORD PTR [ecx*2+64]
	jmp	SHORT $LN23@do_i2b
$LN18@do_i2b:
; Line 226
	test	esi, esi
	je	SHORT $LN22@do_i2b
; Line 227
	lea	ebp, DWORD PTR [ecx+4]
	jmp	SHORT $LN23@do_i2b
$LN22@do_i2b:
; Line 209
	add	eax, 15					; 0000000fH
; Line 233
	lea	ebp, DWORD PTR [ecx+2]
	shr	eax, 4
	lea	eax, DWORD PTR [eax+eax*4]
	lea	ebp, DWORD PTR [eax+ebp*2]
$LN23@do_i2b:
	push	edi
; Line 476
	mov	edi, DWORD PTR _out$[esp+24]
	add	ebp, 16					; 00000010H
	test	edi, edi
	je	$LN15@do_i2b
; Line 478
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	jne	SHORT $LN9@do_i2b
; Line 481
	push	481					; 000001e1H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	ebp
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 482
	test	eax, eax
	jne	SHORT $LN10@do_i2b
; Line 483
	pop	edi
	pop	ebp
	pop	esi
	or	eax, -1
	pop	ebx
; Line 504
	add	esp, 12					; 0000000cH
	ret	0
$LN10@do_i2b:
	mov	edx, DWORD PTR _keyalg$1$[esp+24]
; Line 484
	mov	DWORD PTR [edi], eax
; Line 485
	mov	DWORD PTR _noinc$1$[esp+28], 1
$LN9@do_i2b:
; Line 487
	test	esi, esi
	je	SHORT $LN11@do_i2b
; Line 488
	mov	BYTE PTR [eax], 6
	jmp	SHORT $LN34@do_i2b
$LN11@do_i2b:
; Line 490
	mov	BYTE PTR [eax], 7
$LN34@do_i2b:
; Line 491
	mov	WORD PTR [eax+1], 2
	inc	eax
; Line 493
	lea	ecx, DWORD PTR [eax+3]
; Line 498
	push	esi
	mov	BYTE PTR [eax+2], 0
; Line 423
	mov	eax, edx
	mov	BYTE PTR [ecx], dl
	shr	eax, 8
	mov	BYTE PTR [ecx+1], al
; Line 424
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+2], al
; Line 425
	mov	eax, edx
	shr	eax, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [ecx+3], al
; Line 422
	mov	ecx, DWORD PTR _magic$[esp+32]
; Line 423
	mov	eax, ecx
	mov	BYTE PTR [edx], cl
	shr	eax, 8
	mov	BYTE PTR [edx+1], al
; Line 424
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+2], al
; Line 425
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [edx+3], cl
	lea	ecx, DWORD PTR [edx+4]
; Line 422
	mov	edx, DWORD PTR _bitlen$1$[esp+32]
; Line 423
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [ecx], dl
	mov	BYTE PTR [ecx+1], al
; Line 424
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+2], al
; Line 425
	lea	eax, DWORD PTR [ecx+4]
	shr	edx, 24					; 00000018H
; Line 497
	cmp	DWORD PTR _keyalg$1$[esp+28], 8704	; 00002200H
; Line 425
	mov	BYTE PTR [ecx+3], dl
; Line 498
	push	DWORD PTR [ebx+20]
; Line 426
	mov	DWORD PTR _p$[esp+36], eax
; Line 498
	lea	eax, DWORD PTR _p$[esp+36]
	push	eax
	jne	SHORT $LN13@do_i2b
	call	_write_dsa
	jmp	SHORT $LN35@do_i2b
$LN13@do_i2b:
; Line 500
	call	_write_rsa
$LN35@do_i2b:
	add	esp, 12					; 0000000cH
; Line 501
	cmp	DWORD PTR _noinc$1$[esp+28], 0
	jne	SHORT $LN15@do_i2b
; Line 502
	add	DWORD PTR [edi], ebp
$LN15@do_i2b:
	pop	edi
; Line 503
	mov	eax, ebp
	pop	ebp
	pop	esi
	pop	ebx
; Line 504
	add	esp, 12					; 0000000cH
	ret	0
_do_i2b	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _write_dsa
_TEXT	SEGMENT
_out$ = 8						; size = 4
_dsa$ = 12						; size = 4
_ispub$ = 16						; size = 4
_write_dsa PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 592
	push	ebx
	push	esi
	push	edi
; Line 594
	mov	edi, DWORD PTR _dsa$[esp+8]
	push	DWORD PTR [edi+12]
	call	_BN_num_bits
; Line 595
	mov	esi, DWORD PTR _out$[esp+12]
	add	eax, 7
	cdq
	and	edx, 7
	lea	ebx, DWORD PTR [edx+eax]
	sar	ebx, 3
	push	ebx
	push	DWORD PTR [edi+12]
	push	esi
	call	_write_lebn
; Line 596
	push	20					; 00000014H
	push	DWORD PTR [edi+16]
	push	esi
	call	_write_lebn
; Line 597
	push	ebx
	push	DWORD PTR [edi+20]
	push	esi
	call	_write_lebn
	add	esp, 40					; 00000028H
; Line 598
	cmp	DWORD PTR _ispub$[esp+8], 0
	je	SHORT $LN2@write_dsa
; Line 599
	push	ebx
	push	DWORD PTR [edi+24]
	jmp	SHORT $LN5@write_dsa
$LN2@write_dsa:
; Line 601
	push	20					; 00000014H
	push	DWORD PTR [edi+28]
$LN5@write_dsa:
	push	esi
	call	_write_lebn
; Line 603
	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	movaps	xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
	movups	XMMWORD PTR [eax], xmm0
	pop	edi
	movq	QWORD PTR [eax+16], xmm0
; Line 604
	add	DWORD PTR [esi], 24			; 00000018H
	pop	esi
	pop	ebx
; Line 606
	ret	0
_write_dsa ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _write_rsa
_TEXT	SEGMENT
_hnbyte$1$ = -8						; size = 4
_nbyte$1$ = -4						; size = 4
_out$ = 8						; size = 4
_nb$1$ = 12						; size = 4
_rsa$ = 12						; size = 4
_ispub$ = 16						; size = 4
_write_rsa PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 575
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
; Line 577
	mov	ebp, DWORD PTR _rsa$[esp+12]
	push	esi
	push	edi
	push	DWORD PTR [ebp+16]
	call	_BN_num_bits
; Line 578
	push	DWORD PTR [ebp+16]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _nbyte$1$[esp+32], eax
	call	_BN_num_bits
; Line 579
	mov	ebx, DWORD PTR _out$[esp+28]
	add	eax, 15					; 0000000fH
	push	4
	push	DWORD PTR [ebp+20]
	sar	eax, 4
	push	ebx
	mov	DWORD PTR _hnbyte$1$[esp+44], eax
	call	_write_lebn
; Line 580
	mov	edi, DWORD PTR [ebp+16]
; Line 432
	mov	esi, DWORD PTR [ebx]
; Line 433
	push	edi
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
; Line 434
	push	esi
	push	edi
	mov	DWORD PTR _nb$1$[esp+52], eax
	call	_BN_bn2bin
; Line 435
	mov	eax, DWORD PTR _nb$1$[esp+52]
	add	esp, 32					; 00000020H
	lea	edi, DWORD PTR [eax-1]
; Line 437
	cdq
	sub	eax, edx
	add	edi, esi
	mov	edx, eax
	sar	edx, 1
	test	edx, edx
	jle	SHORT $LN6@write_rsa
$LL7@write_rsa:
; Line 439
	mov	al, BYTE PTR [edi]
	lea	esi, DWORD PTR [esi+1]
	mov	cl, BYTE PTR [esi-1]
; Line 440
	lea	edi, DWORD PTR [edi-1]
	mov	BYTE PTR [esi-1], al
	mov	BYTE PTR [edi+1], cl
	sub	edx, 1
	jne	SHORT $LL7@write_rsa
$LN6@write_rsa:
; Line 442
	mov	eax, DWORD PTR _nb$1$[esp+20]
	add	DWORD PTR [ebx], eax
; Line 581
	cmp	DWORD PTR _ispub$[esp+20], 0
	jne	SHORT $LN1@write_rsa
; Line 583
	mov	esi, DWORD PTR _hnbyte$1$[esp+24]
	push	esi
	push	DWORD PTR [ebp+28]
	push	ebx
	call	_write_lebn
; Line 584
	push	esi
	push	DWORD PTR [ebp+32]
	push	ebx
	call	_write_lebn
; Line 585
	push	esi
	push	DWORD PTR [ebp+36]
	push	ebx
	call	_write_lebn
; Line 586
	push	esi
	push	DWORD PTR [ebp+40]
	push	ebx
	call	_write_lebn
; Line 587
	push	esi
	push	DWORD PTR [ebp+44]
	push	ebx
	call	_write_lebn
; Line 588
	push	DWORD PTR _nbyte$1$[esp+84]
	push	DWORD PTR [ebp+24]
	push	ebx
	call	_write_lebn
	add	esp, 72					; 00000048H
$LN1@write_rsa:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 589
	add	esp, 8
	ret	0
_write_rsa ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _check_bitlen_dsa
_TEXT	SEGMENT
_dsa$ = 8						; size = 4
_ispub$ = 12						; size = 4
_pmagic$ = 16						; size = 4
_check_bitlen_dsa PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 521
	push	ebx
	push	esi
; Line 523
	mov	esi, DWORD PTR _dsa$[esp+4]
	push	DWORD PTR [esi+12]
	call	_BN_num_bits
	mov	ebx, eax
	add	esp, 4
; Line 525
	test	bl, 7
	jne	SHORT $badkey$10
	push	DWORD PTR [esi+16]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 160				; 000000a0H
	jne	SHORT $badkey$10
	push	DWORD PTR [esi+20]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, ebx
	jg	SHORT $badkey$10
; Line 527
	cmp	DWORD PTR _ispub$[esp+4], 0
	je	SHORT $LN4@check_bitl
; Line 528
	push	DWORD PTR [esi+24]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, ebx
	jg	SHORT $badkey$10
; Line 530
	mov	eax, DWORD PTR _pmagic$[esp+4]
	pop	esi
	mov	DWORD PTR [eax], 827544388		; 31535344H
; Line 537
	mov	eax, ebx
	pop	ebx
; Line 541
	ret	0
$LN4@check_bitl:
; Line 532
	push	DWORD PTR [esi+28]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 160				; 000000a0H
	jg	SHORT $badkey$10
; Line 534
	mov	eax, DWORD PTR _pmagic$[esp+4]
	pop	esi
	mov	DWORD PTR [eax], 844321604		; 32535344H
; Line 537
	mov	eax, ebx
	pop	ebx
; Line 541
	ret	0
$badkey$10:
; Line 539
	push	539					; 0000021bH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	126					; 0000007eH
	push	130					; 00000082H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 540
	xor	eax, eax
	pop	esi
	pop	ebx
; Line 541
	ret	0
_check_bitlen_dsa ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _check_bitlen_rsa
_TEXT	SEGMENT
_rsa$ = 8						; size = 4
_ispub$ = 12						; size = 4
_pmagic$ = 16						; size = 4
_check_bitlen_rsa PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 544
	push	ebx
	push	ebp
	push	esi
; Line 546
	mov	esi, DWORD PTR _rsa$[esp+8]
	push	edi
	push	DWORD PTR [esi+20]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 32					; 00000020H
	jg	$badkey$11
; Line 548
	push	DWORD PTR [esi+16]
	call	_BN_num_bits
; Line 549
	push	DWORD PTR [esi+16]
	mov	ebx, eax
	call	_BN_num_bits
; Line 550
	push	DWORD PTR [esi+16]
	add	eax, 7
	cdq
	and	edx, 7
	lea	ebp, DWORD PTR [edx+eax]
	sar	ebp, 3
	call	_BN_num_bits
	add	esp, 12					; 0000000cH
	lea	edi, DWORD PTR [eax+15]
; Line 552
	mov	eax, DWORD PTR _pmagic$[esp+12]
	sar	edi, 4
	cmp	DWORD PTR _ispub$[esp+12], 0
	je	SHORT $LN3@check_bitl
	mov	DWORD PTR [eax], 826364754		; 31415352H
$LN9@check_bitl:
	pop	edi
	pop	esi
	pop	ebp
; Line 553
	mov	eax, ebx
	pop	ebx
; Line 572
	ret	0
$LN3@check_bitl:
; Line 555
	mov	DWORD PTR [eax], 843141970		; 32415352H
; Line 559
	push	DWORD PTR [esi+24]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, ebp
	jg	$badkey$11
; Line 565
	push	DWORD PTR [esi+44]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, edi
	jg	SHORT $badkey$11
	push	DWORD PTR [esi+28]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, edi
	jg	SHORT $badkey$11
	push	DWORD PTR [esi+32]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, edi
	jg	SHORT $badkey$11
	push	DWORD PTR [esi+36]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, edi
	jg	SHORT $badkey$11
	push	DWORD PTR [esi+40]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, edi
	jle	$LN9@check_bitl
$badkey$11:
; Line 570
	push	570					; 0000023aH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	126					; 0000007eH
	push	131					; 00000083H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 571
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 572
	ret	0
_check_bitlen_rsa ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _write_lebn
_TEXT	SEGMENT
_out$ = 8						; size = 4
_bn$ = 12						; size = 4
_len$ = 16						; size = 4
_write_lebn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 430
	push	ebx
; Line 432
	mov	ebx, DWORD PTR _out$[esp]
	push	ebp
	push	esi
	push	edi
; Line 433
	mov	edi, DWORD PTR _bn$[esp+12]
	mov	esi, DWORD PTR [ebx]
	push	edi
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
; Line 434
	push	esi
	push	edi
	lea	ebp, DWORD PTR [edx+eax]
	sar	ebp, 3
	call	_BN_bn2bin
; Line 437
	mov	eax, ebp
	lea	edi, DWORD PTR [esi-1]
	cdq
	add	esp, 12					; 0000000cH
	sub	eax, edx
	add	edi, ebp
	mov	edx, eax
	sar	edx, 1
	test	edx, edx
	jle	SHORT $LN3@write_lebn
	npad	3
$LL4@write_lebn:
; Line 439
	mov	al, BYTE PTR [edi]
	lea	esi, DWORD PTR [esi+1]
	mov	cl, BYTE PTR [esi-1]
; Line 440
	lea	edi, DWORD PTR [edi-1]
	mov	BYTE PTR [esi-1], al
	mov	BYTE PTR [edi+1], cl
	sub	edx, 1
	jne	SHORT $LL4@write_lebn
$LN3@write_lebn:
; Line 442
	add	DWORD PTR [ebx], ebp
; Line 444
	mov	esi, DWORD PTR _len$[esp+12]
	test	esi, esi
	jle	SHORT $LN6@write_lebn
; Line 445
	sub	esi, ebp
; Line 446
	test	esi, esi
	jle	SHORT $LN6@write_lebn
; Line 447
	push	esi
	push	0
	push	DWORD PTR [ebx]
	call	_memset
	add	esp, 12					; 0000000cH
; Line 448
	add	DWORD PTR [ebx], esi
$LN6@write_lebn:
; Line 451
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
_write_lebn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _write_ledword
_TEXT	SEGMENT
_out$ = 8						; size = 4
_dw$ = 12						; size = 4
_write_ledword PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 422
	mov	ecx, DWORD PTR _dw$[esp-4]
; Line 423
	mov	eax, ecx
	push	esi
	mov	esi, DWORD PTR _out$[esp]
	shr	eax, 8
	mov	edx, DWORD PTR [esi]
	mov	BYTE PTR [edx], cl
	mov	BYTE PTR [edx+1], al
; Line 424
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+2], al
; Line 425
	lea	eax, DWORD PTR [edx+4]
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [edx+3], cl
; Line 426
	mov	DWORD PTR [esi], eax
	pop	esi
; Line 427
	ret	0
_write_ledword ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_b2i_bio
_TEXT	SEGMENT
_ispub$GSCopy$ = -40					; size = 4
_p$ = -36						; size = 4
_bitlen$ = -32						; size = 4
_isdss$ = -28						; size = 4
_magic$ = -24						; size = 4
_hdr_buf$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_ispub$ = 12						; size = 4
_do_b2i_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 260
	mov	eax, 40					; 00000028H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+40], eax
	mov	eax, DWORD PTR _ispub$[esp+36]
	push	ebp
	mov	ebp, DWORD PTR _in$[esp+40]
	push	edi
	mov	DWORD PTR _ispub$GSCopy$[esp+48], eax
; Line 265
	xor	edi, edi
; Line 266
	push	16					; 00000010H
	lea	eax, DWORD PTR _hdr_buf$[esp+52]
	push	eax
	push	ebp
	call	_BIO_read
	add	esp, 12					; 0000000cH
	cmp	eax, 16					; 00000010H
	je	SHORT $LN2@do_b2i_bio
; Line 267
	push	267					; 0000010bH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	123					; 0000007bH
	push	133					; 00000085H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN11@do_b2i_bio:
; Line 268
	pop	edi
	xor	eax, eax
	pop	ebp
; Line 295
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
$LN2@do_b2i_bio:
; Line 270
	lea	eax, DWORD PTR _hdr_buf$[esp+48]
	mov	DWORD PTR _p$[esp+48], eax
; Line 271
	lea	eax, DWORD PTR _ispub$GSCopy$[esp+48]
	push	eax
	lea	eax, DWORD PTR _isdss$[esp+52]
	push	eax
	lea	eax, DWORD PTR _bitlen$[esp+56]
	push	eax
	lea	eax, DWORD PTR _magic$[esp+60]
	push	eax
	lea	eax, DWORD PTR _p$[esp+64]
	push	16					; 00000010H
	push	eax
	call	_do_blob_header
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN11@do_b2i_bio
; Line 274
	push	ebx
	push	esi
	push	DWORD PTR _ispub$GSCopy$[esp+56]
	push	DWORD PTR _isdss$[esp+60]
	push	DWORD PTR _bitlen$[esp+64]
	call	_blob_length
; Line 275
	push	275					; 00000113H
	mov	esi, eax
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 24					; 00000018H
; Line 276
	test	ebx, ebx
	jne	SHORT $LN4@do_b2i_bio
; Line 277
	push	277					; 00000115H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	65					; 00000041H
	push	133					; 00000085H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 294
	mov	eax, edi
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 295
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
$LN4@do_b2i_bio:
; Line 281
	push	esi
	push	ebx
	push	ebp
	mov	DWORD PTR _p$[esp+68], ebx
	call	_BIO_read
	add	esp, 12					; 0000000cH
	cmp	eax, esi
	je	SHORT $LN5@do_b2i_bio
; Line 282
	push	282					; 0000011aH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	123					; 0000007bH
	push	133					; 00000085H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 283
	jmp	SHORT $err$13
$LN5@do_b2i_bio:
; Line 287
	mov	eax, DWORD PTR _ispub$GSCopy$[esp+56]
	push	eax
	mov	eax, DWORD PTR _bitlen$[esp+60]
	push	eax
	lea	eax, DWORD PTR _p$[esp+64]
	push	esi
	push	eax
	cmp	DWORD PTR _isdss$[esp+72], edi
	je	SHORT $LN6@do_b2i_bio
	call	_b2i_dss
	jmp	SHORT $LN10@do_b2i_bio
$LN6@do_b2i_bio:
; Line 289
	call	_b2i_rsa
$LN10@do_b2i_bio:
	mov	edi, eax
	add	esp, 16					; 00000010H
$err$13:
; Line 293
	push	ebx
	call	_CRYPTO_free
; Line 295
	mov	ecx, DWORD PTR __$ArrayPad$[esp+60]
	add	esp, 4
	mov	eax, edi
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
_do_b2i_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_b2i
_TEXT	SEGMENT
_isdss$ = -12						; size = 4
_bitlen$ = -8						; size = 4
_magic$ = -4						; size = 4
_p$ = 8							; size = 4
_in$ = 8						; size = 4
_length$ = 12						; size = 4
_ispub$ = 16						; size = 4
_do_b2i	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 240
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 241
	mov	eax, DWORD PTR _in$[esp+8]
	push	esi
; Line 244
	mov	esi, DWORD PTR _length$[esp+12]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _p$[esp+12], eax
	lea	eax, DWORD PTR _ispub$[esp+12]
	push	eax
	lea	eax, DWORD PTR _isdss$[esp+20]
	push	eax
	lea	eax, DWORD PTR _bitlen$[esp+24]
	push	eax
	lea	eax, DWORD PTR _magic$[esp+28]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	esi
	push	eax
	call	_do_blob_header
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN2@do_b2i
; Line 245
	push	245					; 000000f5H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	122					; 0000007aH
	push	132					; 00000084H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 246
	xor	eax, eax
	pop	esi
; Line 257
	add	esp, 12					; 0000000cH
	ret	0
$LN2@do_b2i:
; Line 216
	mov	edx, DWORD PTR _ispub$[esp+12]
; Line 248
	sub	esi, 16					; 00000010H
	push	edi
; Line 208
	mov	edi, DWORD PTR _bitlen$[esp+20]
	lea	ecx, DWORD PTR [edi+7]
	shr	ecx, 3
; Line 210
	cmp	DWORD PTR _isdss$[esp+20], 0
	je	SHORT $LN8@do_b2i
; Line 216
	test	edx, edx
	je	SHORT $LN10@do_b2i
; Line 217
	lea	ecx, DWORD PTR [ecx+ecx*2]
	add	ecx, 44					; 0000002cH
	jmp	SHORT $LN13@do_b2i
$LN10@do_b2i:
; Line 223
	lea	ecx, DWORD PTR [ecx*2+64]
	jmp	SHORT $LN13@do_b2i
$LN8@do_b2i:
; Line 226
	test	edx, edx
	je	SHORT $LN12@do_b2i
; Line 227
	add	ecx, 4
	jmp	SHORT $LN13@do_b2i
$LN12@do_b2i:
; Line 209
	lea	eax, DWORD PTR [edi+15]
	shr	eax, 4
; Line 233
	add	ecx, 2
	lea	eax, DWORD PTR [eax+eax*4]
	lea	ecx, DWORD PTR [eax+ecx*2]
$LN13@do_b2i:
; Line 249
	cmp	esi, ecx
	jae	SHORT $LN3@do_b2i
; Line 250
	push	250					; 000000faH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	123					; 0000007bH
	push	132					; 00000084H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 251
	xor	eax, eax
	pop	edi
	pop	esi
; Line 257
	add	esp, 12					; 0000000cH
	ret	0
$LN3@do_b2i:
; Line 253
	cmp	DWORD PTR _isdss$[esp+20], 0
; Line 254
	lea	eax, DWORD PTR _p$[esp+16]
	push	edx
	push	edi
	push	esi
	push	eax
	je	SHORT $LN4@do_b2i
	call	_b2i_dss
; Line 256
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
; Line 257
	add	esp, 12					; 0000000cH
	ret	0
$LN4@do_b2i:
; Line 256
	call	_b2i_rsa
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
; Line 257
	add	esp, 12					; 0000000cH
	ret	0
_do_b2i	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _blob_length
_TEXT	SEGMENT
_bitlen$ = 8						; size = 4
_isdss$ = 12						; size = 4
_ispub$ = 16						; size = 4
_blob_length PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 208
	mov	eax, DWORD PTR _bitlen$[esp-4]
	lea	ecx, DWORD PTR [eax+7]
	shr	ecx, 3
; Line 210
	cmp	DWORD PTR _isdss$[esp-4], 0
	je	SHORT $LN2@blob_lengt
; Line 216
	cmp	DWORD PTR _ispub$[esp-4], 0
	je	SHORT $LN4@blob_lengt
; Line 217
	lea	eax, DWORD PTR [ecx+22]
	lea	eax, DWORD PTR [ecx+eax*2]
; Line 236
	ret	0
$LN4@blob_lengt:
; Line 223
	lea	eax, DWORD PTR [ecx*2+64]
; Line 236
	ret	0
$LN2@blob_lengt:
; Line 226
	cmp	DWORD PTR _ispub$[esp-4], 0
	je	SHORT $LN6@blob_lengt
; Line 227
	lea	eax, DWORD PTR [ecx+4]
; Line 236
	ret	0
$LN6@blob_lengt:
; Line 209
	add	eax, 15					; 0000000fH
	shr	eax, 4
; Line 233
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [eax+ecx*2]
	add	eax, 4
; Line 236
	ret	0
_blob_length ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_blob_header
_TEXT	SEGMENT
_in$ = 8						; size = 4
_length$ = 12						; size = 4
_pmagic$ = 16						; size = 4
_pbitlen$ = 20						; size = 4
_pisdss$ = 24						; size = 4
_pispub$ = 28						; size = 4
_do_blob_header PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 149
	cmp	DWORD PTR _length$[esp-4], 16		; 00000010H
	push	ebx
	mov	ebx, DWORD PTR _in$[esp]
	mov	edx, DWORD PTR [ebx]
	jae	SHORT $LN4@do_blob_he
; Line 150
	xor	eax, eax
	pop	ebx
; Line 203
	ret	0
$LN4@do_blob_he:
; Line 152
	mov	al, BYTE PTR [edx]
	push	edi
	cmp	al, 6
	jne	SHORT $LN5@do_blob_he
; Line 153
	mov	edi, DWORD PTR _pispub$[esp+4]
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LN7@do_blob_he
; Line 154
	push	154					; 0000009aH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	119					; 00000077H
; Line 155
	jmp	SHORT $LN28@do_blob_he
$LN7@do_blob_he:
; Line 157
	mov	DWORD PTR [edi], 1
	jmp	SHORT $LN9@do_blob_he
$LN5@do_blob_he:
; Line 158
	cmp	al, 7
	jne	SHORT $LN8@do_blob_he
; Line 159
	mov	edi, DWORD PTR _pispub$[esp+4]
	cmp	DWORD PTR [edi], 1
	jne	SHORT $LN10@do_blob_he
; Line 160
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	120					; 00000078H
; Line 161
	jmp	SHORT $LN28@do_blob_he
$LN10@do_blob_he:
; Line 163
	mov	DWORD PTR [edi], 0
$LN9@do_blob_he:
; Line 168
	cmp	BYTE PTR [edx+1], 2
	je	SHORT $LN11@do_blob_he
; Line 169
	push	169					; 000000a9H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	117					; 00000075H
$LN28@do_blob_he:
	push	134					; 00000086H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN8@do_blob_he:
; Line 170
	pop	edi
	xor	eax, eax
	pop	ebx
; Line 203
	ret	0
$LN11@do_blob_he:
; Line 82
	movzx	eax, BYTE PTR [edx+9]
	movzx	ecx, BYTE PTR [edx+8]
	shl	eax, 8
	or	ecx, eax
; Line 83
	movzx	eax, BYTE PTR [edx+10]
	shl	eax, 16					; 00000010H
	or	ecx, eax
; Line 84
	movzx	eax, BYTE PTR [edx+11]
	shl	eax, 24					; 00000018H
	or	eax, ecx
	lea	ecx, DWORD PTR [edx+12]
	push	ebp
	push	esi
; Line 174
	mov	esi, DWORD PTR _pmagic$[esp+12]
; Line 84
	lea	ebp, DWORD PTR [ecx+4]
; Line 174
	mov	DWORD PTR [esi], eax
; Line 82
	movzx	eax, BYTE PTR [ecx+1]
	movzx	edx, BYTE PTR [ecx]
	shl	eax, 8
	or	edx, eax
; Line 83
	movzx	eax, BYTE PTR [ecx+2]
; Line 84
	movzx	ecx, BYTE PTR [ecx+3]
	shl	eax, 16					; 00000010H
	or	edx, eax
	shl	ecx, 24					; 00000018H
; Line 175
	mov	eax, DWORD PTR _pbitlen$[esp+12]
; Line 84
	or	ecx, edx
; Line 175
	mov	DWORD PTR [eax], ecx
; Line 176
	mov	ecx, DWORD PTR _pisdss$[esp+12]
	mov	DWORD PTR [ecx], 0
; Line 177
	mov	eax, DWORD PTR [esi]
	cmp	eax, 843141970				; 32415352H
	ja	SHORT $LN20@do_blob_he
	je	SHORT $LN16@do_blob_he
	cmp	eax, 826364754				; 31415352H
	je	SHORT $LN13@do_blob_he
	cmp	eax, 827544388				; 31535344H
	jne	SHORT $LN18@do_blob_he
; Line 180
	mov	DWORD PTR [ecx], 1
$LN13@do_blob_he:
; Line 182
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LN17@do_blob_he
; Line 183
	push	183					; 000000b7H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	119					; 00000077H
; Line 184
	jmp	SHORT $LN27@do_blob_he
$LN20@do_blob_he:
; Line 177
	cmp	eax, 844321604				; 32535344H
	je	SHORT $LN15@do_blob_he
$LN18@do_blob_he:
; Line 198
	push	198					; 000000c6H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	116					; 00000074H
	push	134					; 00000086H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 199
	or	eax, -1
	pop	esi
	pop	ebp
	pop	edi
	pop	ebx
; Line 203
	ret	0
$LN15@do_blob_he:
; Line 189
	mov	DWORD PTR [ecx], 1
$LN16@do_blob_he:
; Line 191
	cmp	DWORD PTR [edi], 1
	jne	SHORT $LN17@do_blob_he
; Line 192
	push	192					; 000000c0H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	120					; 00000078H
$LN27@do_blob_he:
	push	134					; 00000086H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 193
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	edi
	pop	ebx
; Line 203
	ret	0
$LN17@do_blob_he:
	pop	esi
; Line 201
	mov	DWORD PTR [ebx], ebp
; Line 202
	mov	eax, 1
	pop	ebp
	pop	edi
	pop	ebx
; Line 203
	ret	0
_do_blob_header ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _b2i_dss
_TEXT	SEGMENT
_p$ = -4						; size = 4
_in$ = 8						; size = 4
_length$ = 12						; size = 4
_bitlen$ = 16						; size = 4
_ispub$ = 20						; size = 4
_b2i_dss PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 299
	mov	eax, 4
	call	__chkstk
; Line 300
	mov	eax, DWORD PTR _in$[esp]
	push	ebx
	push	ebp
; Line 305
	mov	ebp, DWORD PTR _bitlen$[esp+8]
	mov	eax, DWORD PTR [eax]
	push	esi
	push	edi
	lea	ebp, DWORD PTR [ebp+7]
	mov	DWORD PTR _p$[esp+20], eax
	xor	edi, edi
	shr	ebp, 3
; Line 307
	call	_DSA_new
	mov	esi, eax
; Line 308
	call	_EVP_PKEY_new
	mov	ebx, eax
; Line 309
	test	esi, esi
	je	SHORT $memerr$19
	test	ebx, ebx
	je	SHORT $memerr$19
; Line 311
	lea	eax, DWORD PTR [esi+12]
	push	eax
	lea	eax, DWORD PTR _p$[esp+24]
	push	ebp
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$19
; Line 313
	lea	eax, DWORD PTR [esi+16]
	push	eax
	lea	eax, DWORD PTR _p$[esp+24]
	push	20					; 00000014H
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$19
; Line 315
	lea	eax, DWORD PTR [esi+20]
	push	eax
	lea	eax, DWORD PTR _p$[esp+24]
	push	ebp
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$19
; Line 317
	cmp	DWORD PTR _ispub$[esp+16], edi
	je	SHORT $LN7@b2i_dss
; Line 318
	lea	eax, DWORD PTR [esi+24]
	push	eax
	lea	eax, DWORD PTR _p$[esp+24]
	push	ebp
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN8@b2i_dss
$memerr$19:
; Line 341
	push	341					; 00000155H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	65					; 00000041H
	push	127					; 0000007fH
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 342
	test	esi, esi
	je	SHORT $LN14@b2i_dss
; Line 343
	push	esi
	call	_DSA_free
	add	esp, 4
$LN14@b2i_dss:
; Line 344
	test	ebx, ebx
	je	SHORT $LN15@b2i_dss
; Line 345
	push	ebx
	call	_EVP_PKEY_free
	add	esp, 4
$LN15@b2i_dss:
; Line 346
	test	edi, edi
	je	SHORT $LN16@b2i_dss
; Line 347
	push	edi
	call	_BN_CTX_free
	add	esp, 4
$LN16@b2i_dss:
; Line 348
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 349
	pop	ecx
	ret	0
$LN7@b2i_dss:
; Line 321
	lea	ebp, DWORD PTR [esi+28]
	push	ebp
	lea	eax, DWORD PTR _p$[esp+24]
	push	20					; 00000014H
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$19
; Line 324
	call	_BN_new
	mov	DWORD PTR [esi+24], eax
	test	eax, eax
	je	SHORT $memerr$19
; Line 326
	call	_BN_CTX_new
	mov	edi, eax
	test	edi, edi
	je	SHORT $memerr$19
; Line 329
	push	edi
	push	DWORD PTR [esi+12]
	push	DWORD PTR [ebp]
	push	DWORD PTR [esi+20]
	push	DWORD PTR [esi+24]
	call	_BN_mod_exp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$memerr$19
; Line 332
	push	edi
	call	_BN_CTX_free
	add	esp, 4
$LN8@b2i_dss:
; Line 335
	push	esi
	push	ebx
	call	_EVP_PKEY_set1_DSA
; Line 336
	push	esi
	call	_DSA_free
; Line 337
	mov	ecx, DWORD PTR _in$[esp+28]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _p$[esp+20]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
; Line 338
	mov	eax, ebx
	pop	ebp
	pop	ebx
; Line 349
	pop	ecx
	ret	0
_b2i_dss ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _b2i_rsa
_TEXT	SEGMENT
_p$1$ = -12						; size = 4
tv273 = -8						; size = 4
_nbyte$1$ = -4						; size = 4
_in$ = 8						; size = 4
_length$ = 12						; size = 4
_p$ = 16						; size = 4
_bitlen$ = 16						; size = 4
_ispub$ = 20						; size = 4
_b2i_rsa PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 353
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 354
	mov	eax, DWORD PTR _in$[esp+8]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 358
	mov	eax, DWORD PTR _bitlen$[esp+20]
	push	edi
	mov	DWORD PTR _p$1$[esp+28], esi
	lea	ecx, DWORD PTR [eax+7]
	shr	ecx, 3
; Line 359
	lea	ebx, DWORD PTR [eax+15]
	mov	DWORD PTR _nbyte$1$[esp+28], ecx
	shr	ebx, 4
; Line 360
	call	_RSA_new
	mov	edi, eax
; Line 361
	call	_EVP_PKEY_new
	mov	ebp, eax
; Line 362
	test	edi, edi
	je	$memerr$20
	test	ebp, ebp
	je	$memerr$20
; Line 364
	call	_BN_new
	mov	DWORD PTR tv273[esp+28], eax
	mov	DWORD PTR [edi+20], eax
; Line 365
	test	eax, eax
	je	$memerr$20
; Line 81
	mov	edx, DWORD PTR _p$1$[esp+28]
	movzx	esi, BYTE PTR [esi]
; Line 82
	movzx	ecx, BYTE PTR [edx+1]
; Line 83
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 16					; 00000010H
	shl	ecx, 8
	or	esi, ecx
	or	esi, eax
; Line 84
	movzx	eax, BYTE PTR [edx+3]
	shl	eax, 24					; 00000018H
	or	esi, eax
	lea	eax, DWORD PTR [edx+4]
; Line 367
	push	esi
	push	DWORD PTR tv273[esp+32]
; Line 85
	mov	DWORD PTR _p$[esp+32], eax
; Line 367
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$memerr$20
; Line 369
	mov	esi, DWORD PTR _nbyte$1$[esp+28]
	lea	eax, DWORD PTR [edi+16]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	esi
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$memerr$20
; Line 371
	cmp	DWORD PTR _ispub$[esp+24], 0
	jne	$LN13@b2i_rsa
; Line 372
	lea	eax, DWORD PTR [edi+28]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	ebx
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$memerr$20
; Line 374
	lea	eax, DWORD PTR [edi+32]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	ebx
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$20
; Line 376
	lea	eax, DWORD PTR [edi+36]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	ebx
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$20
; Line 378
	lea	eax, DWORD PTR [edi+40]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	ebx
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$20
; Line 380
	lea	eax, DWORD PTR [edi+44]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	ebx
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$20
; Line 382
	lea	eax, DWORD PTR [edi+24]
	push	eax
	lea	eax, DWORD PTR _p$[esp+28]
	push	esi
	push	eax
	call	_read_lebn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $memerr$20
$LN13@b2i_rsa:
; Line 386
	push	edi
	push	ebp
	call	_EVP_PKEY_set1_RSA
; Line 387
	push	edi
	call	_RSA_free
; Line 388
	mov	ecx, DWORD PTR _in$[esp+36]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _p$[esp+24]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
; Line 389
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 397
	add	esp, 12					; 0000000cH
	ret	0
$memerr$20:
; Line 391
	push	391					; 00000187H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	65					; 00000041H
	push	129					; 00000081H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 392
	test	edi, edi
	je	SHORT $LN14@b2i_rsa
; Line 393
	push	edi
	call	_RSA_free
	add	esp, 4
$LN14@b2i_rsa:
; Line 394
	test	ebp, ebp
	je	SHORT $LN15@b2i_rsa
; Line 395
	push	ebp
	call	_EVP_PKEY_free
	add	esp, 4
$LN15@b2i_rsa:
; Line 396
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 397
	add	esp, 12					; 0000000cH
	ret	0
_b2i_rsa ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _read_lebn
_TEXT	SEGMENT
_in$ = 8						; size = 4
_nbyte$ = 12						; size = 4
_r$ = 16						; size = 4
_read_lebn PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 95
	push	ebx
	push	ebp
; Line 99
	mov	ebp, DWORD PTR _in$[esp+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _nbyte$[esp+12]
; Line 100
	push	100					; 00000064H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	edi
	lea	esi, DWORD PTR [edi-1]
	add	esi, DWORD PTR [ebp]
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 101
	test	ebx, ebx
	je	SHORT $LN6@read_lebn
; Line 103
	mov	ecx, ebx
; Line 104
	test	edi, edi
	je	SHORT $LN3@read_lebn
; Line 103
	mov	edx, edi
$LL4@read_lebn:
; Line 105
	mov	al, BYTE PTR [esi]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR [ecx-1], al
	lea	esi, DWORD PTR [esi-1]
	sub	edx, 1
	jne	SHORT $LL4@read_lebn
$LN3@read_lebn:
; Line 106
	push	0
	push	edi
	push	ebx
	call	_BN_bin2bn
	mov	esi, DWORD PTR _r$[esp+24]
; Line 107
	push	ebx
	mov	DWORD PTR [esi], eax
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 108
	cmp	DWORD PTR [esi], 0
	je	SHORT $LN6@read_lebn
; Line 109
	add	DWORD PTR [ebp], edi
; Line 110
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 113
	ret	0
$LN6@read_lebn:
	pop	edi
	pop	esi
	pop	ebp
; Line 112
	xor	eax, eax
	pop	ebx
; Line 113
	ret	0
_read_lebn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _read_ledword
_TEXT	SEGMENT
_in$ = 8						; size = 4
_read_ledword PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 78
	push	esi
	push	edi
; Line 79
	mov	edi, DWORD PTR _in$[esp+4]
	mov	edx, DWORD PTR [edi]
; Line 82
	movzx	eax, BYTE PTR [edx+1]
	movzx	esi, BYTE PTR [edx]
; Line 83
	movzx	ecx, BYTE PTR [edx+2]
	shl	eax, 8
	shl	ecx, 16					; 00000010H
	or	eax, esi
	or	eax, ecx
; Line 84
	movzx	ecx, BYTE PTR [edx+3]
	shl	ecx, 24					; 00000018H
	or	eax, ecx
	lea	ecx, DWORD PTR [edx+4]
; Line 85
	mov	DWORD PTR [edi], ecx
	pop	edi
	pop	esi
; Line 87
	ret	0
_read_ledword ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2b_PVK_bio
_TEXT	SEGMENT
_tmp$ = -4						; size = 4
_out$ = 8						; size = 4
_pk$ = 12						; size = 4
_enclevel$ = 16						; size = 4
_cb$ = 20						; size = 4
_u$ = 24						; size = 4
_i2b_PVK_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 871
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 874
	push	DWORD PTR _u$[esp+4]
	lea	eax, DWORD PTR _tmp$[esp+12]
	mov	DWORD PTR _tmp$[esp+12], 0
	push	DWORD PTR _cb$[esp+8]
	push	DWORD PTR _enclevel$[esp+12]
	push	DWORD PTR _pk$[esp+16]
	push	eax
	call	_i2b_PVK
	mov	ebx, eax
	add	esp, 20					; 00000014H
; Line 875
	test	ebx, ebx
	js	SHORT $LN3@i2b_PVK_bi
; Line 877
	push	esi
	push	ebx
	push	DWORD PTR _tmp$[esp+16]
	push	DWORD PTR _out$[esp+16]
	call	_BIO_write
; Line 878
	push	DWORD PTR _tmp$[esp+24]
	mov	esi, eax
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 879
	cmp	esi, ebx
	pop	esi
	jne	SHORT $LN3@i2b_PVK_bi
; Line 880
	push	880					; 00000370H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	118					; 00000076H
	push	138					; 0000008aH
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 881
	mov	eax, ebx
	pop	ebx
; Line 884
	pop	ecx
	ret	0
$LN3@i2b_PVK_bi:
; Line 883
	or	eax, -1
	pop	ebx
; Line 884
	pop	ecx
	ret	0
_i2b_PVK_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _b2i_PVK_bio
_TEXT	SEGMENT
_p$ = -48						; size = 4
_keylen$ = -44						; size = 4
_saltlen$ = -40						; size = 4
_u$GSCopy$1$ = -36					; size = 4
_cb$GSCopy$1$ = -32					; size = 4
_pvk_hdr$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_cb$ = 12						; size = 4
_u$ = 16						; size = 4
_b2i_PVK_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 756
	mov	eax, 48					; 00000030H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+48], eax
	mov	eax, DWORD PTR _cb$[esp+44]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _in$[esp+52]
; Line 760
	xor	ebx, ebx
	mov	DWORD PTR _cb$GSCopy$1$[esp+56], eax
	mov	eax, DWORD PTR _u$[esp+52]
	mov	DWORD PTR _u$GSCopy$1$[esp+56], eax
; Line 762
	lea	eax, DWORD PTR _pvk_hdr$[esp+56]
	push	24					; 00000018H
	push	eax
	push	ebp
	call	_BIO_read
	add	esp, 12					; 0000000cH
	cmp	eax, 24					; 00000018H
	je	SHORT $LN2@b2i_PVK_bi
; Line 763
	push	763					; 000002fbH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	124					; 0000007cH
	push	128					; 00000080H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN11@b2i_PVK_bi:
; Line 764
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 789
	mov	ecx, DWORD PTR __$ArrayPad$[esp+48]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	ret	0
$LN2@b2i_PVK_bi:
; Line 766
	lea	eax, DWORD PTR _pvk_hdr$[esp+56]
	mov	DWORD PTR _p$[esp+56], eax
; Line 768
	lea	eax, DWORD PTR _keylen$[esp+56]
	push	eax
	lea	eax, DWORD PTR _saltlen$[esp+60]
	push	eax
	push	0
	lea	eax, DWORD PTR _p$[esp+68]
	push	24					; 00000018H
	push	eax
	call	_do_PVK_header
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN11@b2i_PVK_bi
; Line 770
	push	esi
	push	edi
	mov	edi, DWORD PTR _saltlen$[esp+64]
	add	edi, DWORD PTR _keylen$[esp+64]
; Line 771
	push	771					; 00000303H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 772
	test	esi, esi
	jne	SHORT $LN4@b2i_PVK_bi
; Line 773
	push	773					; 00000305H
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	65					; 00000041H
	push	128					; 00000080H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 774
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 789
	mov	ecx, DWORD PTR __$ArrayPad$[esp+48]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	ret	0
$LN4@b2i_PVK_bi:
; Line 777
	push	edi
	push	esi
	push	ebp
	mov	DWORD PTR _p$[esp+76], esi
	call	_BIO_read
	add	esp, 12					; 0000000cH
	cmp	eax, edi
	je	SHORT $LN5@b2i_PVK_bi
; Line 778
	push	778					; 0000030aH
	push	OFFSET ??_C@_0BG@FDPDCLFM@?4?2crypto?2pem?2pvkfmt?4c?$AA@
	push	124					; 0000007cH
	push	128					; 00000080H
	push	9
	call	_ERR_put_error
; Line 779
	jmp	SHORT $LN10@b2i_PVK_bi
$LN5@b2i_PVK_bi:
; Line 781
	push	DWORD PTR _u$GSCopy$1$[esp+64]
	lea	eax, DWORD PTR _p$[esp+68]
	push	DWORD PTR _cb$GSCopy$1$[esp+68]
	push	DWORD PTR _keylen$[esp+72]
	push	DWORD PTR _saltlen$[esp+76]
	push	eax
	call	_do_PVK_body
	mov	ebx, eax
$LN10@b2i_PVK_bi:
	add	esp, 20					; 00000014H
$err$13:
; Line 785
	push	edi
	push	esi
	call	_OPENSSL_cleanse
; Line 786
	push	esi
	call	_CRYPTO_free
; Line 789
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	add	esp, 12					; 0000000cH
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	ret	0
_b2i_PVK_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2b_PublicKey_bio
_TEXT	SEGMENT
_tmp$1 = -4						; size = 4
_out$ = 8						; size = 4
_pk$ = 12						; size = 4
_i2b_PublicKey_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 614
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 510
	push	1
	push	DWORD PTR _pk$[esp+8]
	lea	eax, DWORD PTR _tmp$1[esp+16]
	mov	DWORD PTR _tmp$1[esp+16], 0
	push	eax
	call	_do_i2b
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 511
	test	ebx, ebx
	jns	SHORT $LN4@i2b_Public
; Line 615
	or	eax, -1
	pop	ebx
; Line 616
	pop	ecx
	ret	0
$LN4@i2b_Public:
	push	esi
; Line 513
	push	ebx
	push	DWORD PTR _tmp$1[esp+16]
	push	DWORD PTR _out$[esp+16]
	call	_BIO_write
; Line 514
	push	DWORD PTR _tmp$1[esp+24]
	mov	esi, eax
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 515
	or	eax, -1
	cmp	esi, ebx
	cmove	eax, ebx
	pop	esi
	pop	ebx
; Line 616
	pop	ecx
	ret	0
_i2b_PublicKey_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2b_PrivateKey_bio
_TEXT	SEGMENT
_tmp$1 = -4						; size = 4
_out$ = 8						; size = 4
_pk$ = 12						; size = 4
_i2b_PrivateKey_bio PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 609
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 510
	push	0
	push	DWORD PTR _pk$[esp+8]
	lea	eax, DWORD PTR _tmp$1[esp+16]
	mov	DWORD PTR _tmp$1[esp+16], 0
	push	eax
	call	_do_i2b
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 511
	test	ebx, ebx
	jns	SHORT $LN4@i2b_Privat
; Line 610
	or	eax, -1
	pop	ebx
; Line 611
	pop	ecx
	ret	0
$LN4@i2b_Privat:
	push	esi
; Line 513
	push	ebx
	push	DWORD PTR _tmp$1[esp+16]
	push	DWORD PTR _out$[esp+16]
	call	_BIO_write
; Line 514
	push	DWORD PTR _tmp$1[esp+24]
	mov	esi, eax
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 515
	or	eax, -1
	cmp	esi, ebx
	cmove	eax, ebx
	pop	esi
	pop	ebx
; Line 611
	pop	ecx
	ret	0
_i2b_PrivateKey_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _b2i_PublicKey_bio
_TEXT	SEGMENT
_in$ = 8						; size = 4
_b2i_PublicKey_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 416
	push	1
	push	DWORD PTR _in$[esp]
	call	_do_b2i_bio
	add	esp, 8
; Line 417
	ret	0
_b2i_PublicKey_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _b2i_PrivateKey_bio
_TEXT	SEGMENT
_in$ = 8						; size = 4
_b2i_PrivateKey_bio PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 411
	push	0
	push	DWORD PTR _in$[esp]
	call	_do_b2i_bio
	add	esp, 8
; Line 412
	ret	0
_b2i_PrivateKey_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _b2i_PublicKey
_TEXT	SEGMENT
_in$ = 8						; size = 4
_length$ = 12						; size = 4
_b2i_PublicKey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 406
	push	1
	push	DWORD PTR _length$[esp]
	push	DWORD PTR _in$[esp+4]
	call	_do_b2i
	add	esp, 12					; 0000000cH
; Line 407
	ret	0
_b2i_PublicKey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _b2i_PrivateKey
_TEXT	SEGMENT
_in$ = 8						; size = 4
_length$ = 12						; size = 4
_b2i_PrivateKey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pvkfmt.c
; Line 401
	push	0
	push	DWORD PTR _length$[esp]
	push	DWORD PTR _in$[esp+4]
	call	_do_b2i
	add	esp, 12					; 0000000cH
; Line 402
	ret	0
_b2i_PrivateKey ENDP
_TEXT	ENDS
END

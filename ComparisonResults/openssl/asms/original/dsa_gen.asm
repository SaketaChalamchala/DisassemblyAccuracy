; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_gen.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?ggen@?BH@??dsa_builtin_paramgen2@@9@9 DB 067H		; `dsa_builtin_paramgen2'::`23'::ggen
	DB	067H
	DB	065H
	DB	06eH
CONST	ENDS
PUBLIC	_DSA_generate_parameters_ex
PUBLIC	_dsa_builtin_paramgen
PUBLIC	_dsa_builtin_paramgen2
PUBLIC	_dsa_paramgen_check_g
PUBLIC	??_C@_0BH@JFAMBCAP@?4?2crypto?2dsa?2dsa_gen?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_GENCB_call:PROC
EXTRN	_BN_value_one:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_copy:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_sub:PROC
EXTRN	_BN_add:PROC
EXTRN	_BN_div:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_lshift:PROC
EXTRN	_BN_lshift1:PROC
EXTRN	_BN_mod_exp_mont:PROC
EXTRN	_BN_mask_bits:PROC
EXTRN	_BN_dup:PROC
EXTRN	_BN_is_prime_fasttest_ex:PROC
EXTRN	_BN_MONT_CTX_new:PROC
EXTRN	_BN_MONT_CTX_free:PROC
EXTRN	_BN_MONT_CTX_set:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_Digest:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_sha224:PROC
EXTRN	_EVP_sha256:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BH@JFAMBCAP@?4?2crypto?2dsa?2dsa_gen?4c?$AA@
CONST	SEGMENT
??_C@_0BH@JFAMBCAP@?4?2crypto?2dsa?2dsa_gen?4c?$AA@ DB '.\crypto\dsa\dsa_'
	DB	'gen.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_paramgen_check_g
_TEXT	SEGMENT
_tmp$1$ = -4						; size = 4
_dsa$ = 8						; size = 4
_dsa_paramgen_check_g PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_gen.c
; Line 713
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 716
	xor	ebx, ebx
; Line 717
	or	esi, -1
; Line 718
	call	_BN_CTX_new
	mov	edi, eax
; Line 719
	test	edi, edi
	jne	SHORT $LN2@dsa_paramg
; Line 720
	pop	edi
	or	eax, esi
	pop	esi
	pop	ebx
; Line 747
	pop	ecx
	ret	0
$LN2@dsa_paramg:
	push	ebp
; Line 721
	push	edi
	call	_BN_CTX_start
; Line 722
	mov	ebp, DWORD PTR _dsa$[esp+20]
	call	_BN_value_one
	push	eax
	push	DWORD PTR [ebp+20]
	call	_BN_cmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN14@dsa_paramg
; Line 724
	push	DWORD PTR [ebp+12]
	push	DWORD PTR [ebp+20]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN4@dsa_paramg
$LN14@dsa_paramg:
	pop	ebp
	pop	edi
	pop	esi
; Line 725
	xor	eax, eax
	pop	ebx
; Line 747
	pop	ecx
	ret	0
$LN4@dsa_paramg:
; Line 726
	push	edi
	call	_BN_CTX_get
	add	esp, 4
	mov	DWORD PTR _tmp$1$[esp+20], eax
; Line 727
	test	eax, eax
	je	SHORT $err$16
; Line 729
	call	_BN_MONT_CTX_new
	mov	ebx, eax
	test	ebx, ebx
	je	SHORT $err$16
; Line 731
	push	edi
	push	DWORD PTR [ebp+12]
	push	ebx
	call	_BN_MONT_CTX_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$16
; Line 734
	push	ebx
	push	edi
	push	DWORD PTR [ebp+12]
	push	DWORD PTR [ebp+16]
	push	DWORD PTR [ebp+20]
	mov	ebp, DWORD PTR _tmp$1$[esp+40]
	push	ebp
	call	_BN_mod_exp_mont
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $err$16
; Line 736
	call	_BN_value_one
	push	eax
	push	ebp
	call	_BN_cmp
	add	esp, 8
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	inc	esi
$err$16:
; Line 741
	push	edi
	call	_BN_CTX_end
	add	esp, 4
; Line 742
	test	ebx, ebx
	je	SHORT $LN11@dsa_paramg
; Line 743
	push	ebx
	call	_BN_MONT_CTX_free
	add	esp, 4
$LN11@dsa_paramg:
; Line 744
	push	edi
	call	_BN_CTX_free
	add	esp, 4
; Line 745
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 747
	pop	ecx
	ret	0
_dsa_paramgen_check_g ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_builtin_paramgen2
_TEXT	SEGMENT
_ctx$1$ = -200						; size = 4
_test$1$ = -196						; size = 4
_seed_len$GSCopy$1$ = -192				; size = 4
_evpmd$GSCopy$1$ = -188					; size = 4
_p$1$ = -184						; size = 4
_cb$GSCopy$1$ = -180					; size = 4
_q$1$ = -176						; size = 4
_mdsize$1$ = -172					; size = 4
_h$1$ = -168						; size = 4
_seed_tmp$1$ = -164					; size = 4
_ok$1$ = -160						; size = 4
_seed_in$GSCopy$1$ = -156				; size = 4
_mont$1$ = -152						; size = 4
_m$1$ = -148						; size = 4
_W$1$ = -144						; size = 4
_counter$1$ = -140					; size = 4
_ret$GSCopy$1$ = -136					; size = 4
_g$1$ = -132						; size = 4
_seed_out$GSCopy$1$ = -128				; size = 4
_n$1$ = -124						; size = 4
_c$1$ = -120						; size = 4
_qsize$1$ = -116					; size = 4
tv944 = -112						; size = 4
tv946 = -108						; size = 4
_X$1$ = -104						; size = 4
_counter_ret$GSCopy$1$ = -100				; size = 4
_h_ret$GSCopy$1$ = -96					; size = 4
_mctx$ = -92						; size = 24
_md$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_ret$ = 8						; size = 4
_L$ = 12						; size = 4
_N$ = 16						; size = 4
_evpmd$ = 20						; size = 4
_seed_in$ = 24						; size = 4
_seed_len$ = 28						; size = 4
_idx$ = 32						; size = 4
_seed_out$ = 36						; size = 4
_counter_ret$ = 40					; size = 4
_h_ret$ = 44						; size = 4
_cb$ = 48						; size = 4
_dsa_builtin_paramgen2 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_gen.c
; Line 403
	mov	eax, 200				; 000000c8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+200], eax
	push	ebx
; Line 405
	push	ebp
	push	esi
; Line 426
	push	edi
	mov	eax, DWORD PTR _evpmd$[esp+212]
	mov	ecx, DWORD PTR _ret$[esp+212]
	mov	DWORD PTR _evpmd$GSCopy$1$[esp+216], eax
	mov	eax, DWORD PTR _seed_in$[esp+212]
	mov	DWORD PTR _seed_in$GSCopy$1$[esp+216], eax
	mov	eax, DWORD PTR _seed_out$[esp+212]
	mov	DWORD PTR _seed_out$GSCopy$1$[esp+216], eax
	mov	eax, DWORD PTR _counter_ret$[esp+212]
	mov	DWORD PTR _counter_ret$GSCopy$1$[esp+216], eax
	mov	eax, DWORD PTR _h_ret$[esp+212]
	mov	DWORD PTR _h_ret$GSCopy$1$[esp+216], eax
; Line 405
	xor	ebx, ebx
	mov	eax, DWORD PTR _cb$[esp+212]
	mov	ebp, DWORD PTR _seed_len$[esp+212]
	mov	DWORD PTR _cb$GSCopy$1$[esp+216], eax
; Line 411
	mov	esi, DWORD PTR _N$[esp+212]
	mov	eax, esi
	shr	eax, 3
	mov	DWORD PTR _qsize$1$[esp+216], eax
; Line 416
	mov	eax, 2
	mov	DWORD PTR _h$1$[esp+216], eax
; Line 426
	lea	eax, DWORD PTR _mctx$[esp+216]
	push	eax
	mov	DWORD PTR _ret$GSCopy$1$[esp+220], ecx
	xor	edi, edi
	mov	DWORD PTR _seed_len$GSCopy$1$[esp+220], ebp
	mov	DWORD PTR _ok$1$[esp+220], -1
	mov	DWORD PTR _seed_tmp$1$[esp+220], ebx
	mov	DWORD PTR _mont$1$[esp+220], ebx
	mov	DWORD PTR _m$1$[esp+220], ebx
	mov	DWORD PTR _ctx$1$[esp+220], ebx
	call	_EVP_MD_CTX_init
; Line 428
	mov	eax, DWORD PTR _evpmd$GSCopy$1$[esp+220]
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN24@dsa_builti
; Line 429
	cmp	esi, 160				; 000000a0H
	jne	SHORT $LN21@dsa_builti
; Line 430
	call	_EVP_sha1
	jmp	SHORT $LN176@dsa_builti
$LN21@dsa_builti:
; Line 431
	cmp	esi, 224				; 000000e0H
	jne	SHORT $LN23@dsa_builti
; Line 432
	call	_EVP_sha224
	jmp	SHORT $LN176@dsa_builti
$LN23@dsa_builti:
; Line 434
	call	_EVP_sha256
$LN176@dsa_builti:
	mov	DWORD PTR _evpmd$GSCopy$1$[esp+216], eax
$LN24@dsa_builti:
; Line 437
	push	eax
	call	_EVP_MD_size
	mov	esi, eax
	add	esp, 4
; Line 439
	mov	eax, DWORD PTR _ret$GSCopy$1$[esp+216]
	mov	DWORD PTR _mdsize$1$[esp+216], esi
	cmp	DWORD PTR [eax+12], ebx
	je	SHORT $LN26@dsa_builti
	cmp	DWORD PTR [eax+16], ebx
	je	SHORT $LN26@dsa_builti
	cmp	DWORD PTR _idx$[esp+212], ebx
	jl	SHORT $LN32@dsa_builti
$LN26@dsa_builti:
; Line 440
	test	ebp, ebp
; Line 443
	push	443					; 000001bbH
	cmove	ebp, esi
	push	OFFSET ??_C@_0BH@JFAMBCAP@?4?2crypto?2dsa?2dsa_gen?4c?$AA@
	push	ebp
	mov	DWORD PTR _seed_len$GSCopy$1$[esp+228], ebp
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 445
	mov	eax, DWORD PTR _seed_out$GSCopy$1$[esp+216]
	test	eax, eax
	jne	SHORT $LN177@dsa_builti
; Line 448
	push	448					; 000001c0H
	push	OFFSET ??_C@_0BH@JFAMBCAP@?4?2crypto?2dsa?2dsa_gen?4c?$AA@
	push	ebp
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
$LN177@dsa_builti:
	mov	DWORD PTR _seed_tmp$1$[esp+216], eax
; Line 450
	test	ebx, ebx
	je	$LN103@dsa_builti
	test	eax, eax
	je	$LN102@dsa_builti
; Line 453
	mov	eax, DWORD PTR _seed_in$GSCopy$1$[esp+216]
	test	eax, eax
	je	SHORT $LN32@dsa_builti
; Line 454
	push	ebp
	push	eax
	push	ebx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN32@dsa_builti:
; Line 458
	call	_BN_CTX_new
	mov	ebp, eax
	mov	DWORD PTR _ctx$1$[esp+216], ebp
	test	ebp, ebp
	je	$LN102@dsa_builti
; Line 461
	call	_BN_MONT_CTX_new
	mov	DWORD PTR _mont$1$[esp+216], eax
	test	eax, eax
	je	$LN102@dsa_builti
; Line 464
	push	ebp
	call	_BN_CTX_start
; Line 465
	push	ebp
	call	_BN_CTX_get
; Line 466
	push	DWORD PTR _ctx$1$[esp+224]
	mov	ebp, eax
	call	_BN_CTX_get
; Line 467
	push	DWORD PTR _ctx$1$[esp+228]
	mov	DWORD PTR _g$1$[esp+232], eax
	call	_BN_CTX_get
; Line 468
	push	DWORD PTR _ctx$1$[esp+232]
	mov	DWORD PTR _W$1$[esp+236], eax
	call	_BN_CTX_get
; Line 469
	push	DWORD PTR _ctx$1$[esp+236]
	mov	DWORD PTR _X$1$[esp+240], eax
	call	_BN_CTX_get
; Line 470
	push	DWORD PTR _ctx$1$[esp+240]
	mov	DWORD PTR _c$1$[esp+244], eax
	call	_BN_CTX_get
; Line 473
	mov	ecx, DWORD PTR _ret$GSCopy$1$[esp+244]
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _test$1$[esp+216], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _p$1$[esp+216], eax
	test	eax, eax
	je	SHORT $LN35@dsa_builti
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR _q$1$[esp+216], eax
	test	eax, eax
	je	SHORT $LN35@dsa_builti
; Line 476
	cmp	DWORD PTR _idx$[esp+212], edi
	jl	$g_only$182
; Line 477
	push	DWORD PTR _seed_len$GSCopy$1$[esp+216]
	push	ebx
	push	DWORD PTR _seed_tmp$1$[esp+224]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 478
	jmp	$g_only$182
$LN35@dsa_builti:
; Line 480
	mov	esi, DWORD PTR _ctx$1$[esp+216]
	push	esi
	call	_BN_CTX_get
; Line 481
	push	esi
	mov	DWORD PTR _p$1$[esp+224], eax
	call	_BN_CTX_get
	mov	DWORD PTR _q$1$[esp+224], eax
	add	esp, 8
; Line 484
	mov	eax, DWORD PTR _L$[esp+212]
	dec	eax
	mov	DWORD PTR tv946[esp+216], eax
	push	eax
	call	_BN_value_one
	push	eax
	push	DWORD PTR _test$1$[esp+224]
	call	_BN_lshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
	mov	esi, DWORD PTR _seed_in$GSCopy$1$[esp+216]
	npad	9
$LL2@dsa_builti:
	mov	edi, DWORD PTR _qsize$1$[esp+216]
$LL5@dsa_builti:
; Line 490
	push	DWORD PTR _m$1$[esp+216]
	push	0
	push	DWORD PTR _cb$GSCopy$1$[esp+224]
	call	_BN_GENCB_call
	inc	DWORD PTR _m$1$[esp+228]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 493
	test	esi, esi
	jne	SHORT $LN41@dsa_builti
; Line 494
	push	DWORD PTR _seed_len$GSCopy$1$[esp+216]
	push	ebx
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	js	$LN102@dsa_builti
$LN41@dsa_builti:
; Line 498
	push	0
	push	DWORD PTR _evpmd$GSCopy$1$[esp+220]
	lea	eax, DWORD PTR _md$[esp+224]
	push	0
	push	eax
	push	DWORD PTR _seed_len$GSCopy$1$[esp+232]
	push	ebx
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN102@dsa_builti
; Line 501
	mov	ecx, DWORD PTR _mdsize$1$[esp+216]
; Line 502
	lea	esi, DWORD PTR _md$[esp+216]
	cmp	ecx, edi
	jle	SHORT $LN180@dsa_builti
	mov	eax, ecx
	sub	eax, edi
	add	esi, eax
; Line 506
	cmp	ecx, edi
$LN180@dsa_builti:
	jge	SHORT $LN45@dsa_builti
; Line 507
	mov	eax, edi
	sub	eax, ecx
	push	eax
	lea	eax, DWORD PTR _md$[esp+220]
	add	eax, ecx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN45@dsa_builti:
; Line 512
	push	DWORD PTR _q$1$[esp+216]
	or	BYTE PTR [esi], 128			; 00000080H
	or	BYTE PTR [esi+edi-1], 1
	push	edi
	push	esi
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 516
	push	DWORD PTR _cb$GSCopy$1$[esp+216]
	mov	esi, DWORD PTR _seed_in$GSCopy$1$[esp+220]
	xor	eax, eax
	test	esi, esi
	setne	al
	push	eax
	push	DWORD PTR _ctx$1$[esp+224]
	push	50					; 00000032H
	push	DWORD PTR _q$1$[esp+232]
	call	_BN_is_prime_fasttest_ex
	add	esp, 20					; 00000014H
; Line 518
	test	eax, eax
	jg	SHORT $LN121@dsa_builti
; Line 520
	jne	$LN102@dsa_builti
; Line 523
	test	esi, esi
	je	$LL5@dsa_builti
; Line 525
	push	525					; 0000020dH
	push	OFFSET ??_C@_0BH@JFAMBCAP@?4?2crypto?2dsa?2dsa_gen?4c?$AA@
	push	113					; 00000071H
; Line 675
	jmp	$LN178@dsa_builti
$LN121@dsa_builti:
; Line 533
	mov	eax, DWORD PTR _seed_out$GSCopy$1$[esp+216]
	test	eax, eax
	je	SHORT $LN50@dsa_builti
; Line 534
	push	DWORD PTR _seed_len$GSCopy$1$[esp+216]
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN50@dsa_builti:
; Line 536
	mov	esi, DWORD PTR _cb$GSCopy$1$[esp+216]
	push	0
	push	2
	push	esi
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 538
	push	0
	push	3
	push	esi
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 545
	mov	ecx, DWORD PTR _mdsize$1$[esp+216]
	xor	edi, edi
	mov	eax, DWORD PTR _L$[esp+212]
	xor	edx, edx
	shl	ecx, 3
	dec	eax
	div	ecx
	mov	DWORD PTR _counter$1$[esp+216], edi
	mov	esi, eax
	mov	DWORD PTR _n$1$[esp+216], esi
$LL8@dsa_builti:
; Line 548
	test	edi, edi
	je	SHORT $LN53@dsa_builti
	push	edi
	push	0
	push	DWORD PTR _cb$GSCopy$1$[esp+224]
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
$LN53@dsa_builti:
; Line 552
	push	0
	push	DWORD PTR _W$1$[esp+220]
	call	_BN_set_word
	add	esp, 8
; Line 554
	xor	edi, edi
	test	esi, esi
	js	$LN12@dsa_builti
; Line 552
	mov	ecx, DWORD PTR _seed_len$GSCopy$1$[esp+216]
	xor	esi, esi
	lea	eax, DWORD PTR [ecx-1]
	mov	DWORD PTR tv944[esp+216], eax
$LL13@dsa_builti:
; Line 558
	test	eax, eax
	js	SHORT $LN175@dsa_builti
	npad	4
$LL16@dsa_builti:
; Line 559
	add	BYTE PTR [eax+ebx], 1
; Line 560
	jne	SHORT $LN175@dsa_builti
; Line 558
	sub	eax, 1
	jns	SHORT $LL16@dsa_builti
$LN175@dsa_builti:
; Line 564
	push	0
	push	DWORD PTR _evpmd$GSCopy$1$[esp+220]
	lea	eax, DWORD PTR _md$[esp+224]
	push	0
	push	eax
	push	ecx
	push	ebx
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN102@dsa_builti
; Line 568
	push	ebp
	push	DWORD PTR _mdsize$1$[esp+220]
	lea	eax, DWORD PTR _md$[esp+224]
	push	eax
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 570
	push	esi
	push	ebp
	push	ebp
	call	_BN_lshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 572
	mov	eax, DWORD PTR _W$1$[esp+216]
	push	ebp
	push	eax
	push	eax
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 554
	mov	ecx, DWORD PTR _mdsize$1$[esp+216]
	inc	edi
	lea	eax, DWORD PTR [ecx*8]
	mov	ecx, DWORD PTR _seed_len$GSCopy$1$[esp+216]
	add	esi, eax
	mov	eax, DWORD PTR tv944[esp+216]
	cmp	edi, DWORD PTR _n$1$[esp+216]
	jle	$LL13@dsa_builti
	mov	esi, DWORD PTR _n$1$[esp+216]
$LN12@dsa_builti:
; Line 577
	push	DWORD PTR tv946[esp+216]
	mov	edi, DWORD PTR _W$1$[esp+220]
	push	edi
	call	_BN_mask_bits
	add	esp, 8
	test	eax, eax
	je	$LN102@dsa_builti
; Line 579
	push	edi
	mov	edi, DWORD PTR _X$1$[esp+220]
	push	edi
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN102@dsa_builti
; Line 581
	push	DWORD PTR _test$1$[esp+216]
	push	edi
	push	edi
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 585
	push	DWORD PTR _q$1$[esp+216]
	push	ebp
	call	_BN_lshift1
	add	esp, 8
	test	eax, eax
	je	$LN102@dsa_builti
; Line 587
	push	DWORD PTR _ctx$1$[esp+216]
	push	ebp
	push	edi
	push	DWORD PTR _c$1$[esp+228]
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN102@dsa_builti
; Line 589
	call	_BN_value_one
	push	eax
	push	DWORD PTR _c$1$[esp+220]
	push	ebp
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 591
	push	ebp
	push	edi
	mov	edi, DWORD PTR _p$1$[esp+224]
	push	edi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN102@dsa_builti
; Line 595
	push	DWORD PTR _test$1$[esp+216]
	push	edi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN68@dsa_builti
; Line 597
	mov	edi, DWORD PTR _cb$GSCopy$1$[esp+216]
	push	edi
	push	1
	push	DWORD PTR _ctx$1$[esp+224]
	push	50					; 00000032H
	push	DWORD PTR _p$1$[esp+232]
	call	_BN_is_prime_fasttest_ex
	add	esp, 20					; 00000014H
; Line 598
	test	eax, eax
	jg	$end$183
; Line 600
	jne	SHORT $LN102@dsa_builti
$LN68@dsa_builti:
; Line 605
	mov	edi, DWORD PTR _counter$1$[esp+216]
; Line 609
	mov	eax, DWORD PTR _L$[esp+212]
	inc	edi
	shl	eax, 2
	mov	DWORD PTR _counter$1$[esp+216], edi
	cmp	edi, eax
	jl	$LL8@dsa_builti
; Line 612
	mov	esi, DWORD PTR _seed_in$GSCopy$1$[esp+216]
	test	esi, esi
	je	$LL2@dsa_builti
; Line 614
	push	614					; 00000266H
	push	OFFSET ??_C@_0BH@JFAMBCAP@?4?2crypto?2dsa?2dsa_gen?4c?$AA@
	push	112					; 00000070H
$LN178@dsa_builti:
	push	126					; 0000007eH
	push	10					; 0000000aH
	mov	DWORD PTR _ok$1$[esp+236], 0
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN102@dsa_builti:
; Line 698
	test	ebx, ebx
	je	SHORT $LN103@dsa_builti
; Line 699
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN103@dsa_builti:
; Line 700
	mov	eax, DWORD PTR _seed_tmp$1$[esp+216]
	cmp	DWORD PTR _seed_out$GSCopy$1$[esp+216], eax
	je	SHORT $LN104@dsa_builti
; Line 701
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN104@dsa_builti:
; Line 702
	mov	ebx, DWORD PTR _ctx$1$[esp+216]
	test	ebx, ebx
	je	SHORT $LN105@dsa_builti
; Line 703
	push	ebx
	call	_BN_CTX_end
; Line 704
	push	ebx
	call	_BN_CTX_free
	add	esp, 8
$LN105@dsa_builti:
; Line 706
	mov	eax, DWORD PTR _mont$1$[esp+216]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	test	eax, eax
	je	SHORT $LN106@dsa_builti
; Line 707
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
$LN106@dsa_builti:
; Line 708
	lea	eax, DWORD PTR _mctx$[esp+200]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 710
	mov	ecx, DWORD PTR __$ArrayPad$[esp+204]
	add	esp, 4
	mov	eax, DWORD PTR _ok$1$[esp+200]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 200				; 000000c8H
	ret	0
$end$183:
; Line 619
	push	1
	push	2
	push	edi
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
	mov	edi, DWORD PTR _counter$1$[esp+216]
	mov	esi, DWORD PTR _mdsize$1$[esp+216]
$g_only$182:
; Line 626
	call	_BN_value_one
	push	eax
	push	DWORD PTR _p$1$[esp+220]
	push	DWORD PTR _test$1$[esp+224]
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 628
	push	DWORD PTR _ctx$1$[esp+216]
	push	DWORD PTR _q$1$[esp+220]
	push	DWORD PTR _test$1$[esp+224]
	push	0
	push	ebp
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN102@dsa_builti
; Line 631
	cmp	DWORD PTR _idx$[esp+212], 0
	jge	SHORT $LN74@dsa_builti
; Line 632
	push	2
	push	DWORD PTR _test$1$[esp+220]
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$LN102@dsa_builti
; Line 634
	jmp	SHORT $LN75@dsa_builti
$LN74@dsa_builti:
; Line 635
	mov	eax, 1
	mov	DWORD PTR _h$1$[esp+216], eax
$LN75@dsa_builti:
; Line 636
	push	DWORD PTR _ctx$1$[esp+216]
	push	DWORD PTR _p$1$[esp+220]
	push	DWORD PTR _mont$1$[esp+224]
	call	_BN_MONT_CTX_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
	mov	eax, DWORD PTR _idx$[esp+212]
	mov	ecx, DWORD PTR _h$1$[esp+216]
$LL17@dsa_builti:
; Line 641
	test	eax, eax
	js	$LN84@dsa_builti
; Line 642
	mov	BYTE PTR _md$[esp+216], al
; Line 643
	mov	eax, ecx
	shr	eax, 8
; Line 645
	push	0
	push	DWORD PTR _evpmd$GSCopy$1$[esp+220]
	mov	BYTE PTR _md$[esp+225], al
	lea	eax, DWORD PTR _mctx$[esp+224]
	push	eax
	mov	BYTE PTR _md$[esp+230], cl
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 647
	push	DWORD PTR _seed_len$GSCopy$1$[esp+216]
	lea	eax, DWORD PTR _mctx$[esp+220]
	push	DWORD PTR _seed_tmp$1$[esp+220]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 649
	push	4
	lea	eax, DWORD PTR _mctx$[esp+220]
	push	OFFSET ?ggen@?BH@??dsa_builtin_paramgen2@@9@9
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 651
	push	3
	lea	eax, DWORD PTR _md$[esp+220]
	push	eax
	lea	eax, DWORD PTR _mctx$[esp+224]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 653
	push	0
	lea	eax, DWORD PTR _md$[esp+220]
	push	eax
	lea	eax, DWORD PTR _mctx$[esp+224]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 655
	push	DWORD PTR _test$1$[esp+216]
	lea	eax, DWORD PTR _md$[esp+220]
	push	esi
	push	eax
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
$LN84@dsa_builti:
; Line 659
	push	DWORD PTR _mont$1$[esp+216]
	push	DWORD PTR _ctx$1$[esp+220]
	push	DWORD PTR _p$1$[esp+224]
	push	ebp
	push	DWORD PTR _test$1$[esp+232]
	push	DWORD PTR _g$1$[esp+236]
	call	_BN_mod_exp_mont
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN102@dsa_builti
; Line 661
	mov	ecx, DWORD PTR _g$1$[esp+216]
	cmp	DWORD PTR [ecx+4], 1
	jne	SHORT $LN150@dsa_builti
	mov	eax, DWORD PTR [ecx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN150@dsa_builti
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN150@dsa_builti
; Line 663
	mov	eax, DWORD PTR _idx$[esp+212]
	test	eax, eax
	jns	SHORT $LN90@dsa_builti
	call	_BN_value_one
	push	eax
	mov	eax, DWORD PTR _test$1$[esp+220]
	push	eax
	push	eax
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
	mov	eax, DWORD PTR _idx$[esp+212]
$LN90@dsa_builti:
; Line 665
	mov	ecx, DWORD PTR _h$1$[esp+216]
	inc	ecx
	mov	DWORD PTR _h$1$[esp+216], ecx
; Line 666
	test	eax, eax
	js	SHORT $LN84@dsa_builti
	cmp	ecx, 65535				; 0000ffffH
	jbe	$LL17@dsa_builti
; Line 668
	jmp	$LN102@dsa_builti
$LN150@dsa_builti:
; Line 670
	push	1
	push	3
	push	DWORD PTR _cb$GSCopy$1$[esp+224]
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN102@dsa_builti
; Line 673
	mov	DWORD PTR _ok$1$[esp+216], 1
	npad	3
$err$184:
; Line 676
	mov	esi, DWORD PTR _ret$GSCopy$1$[esp+216]
	mov	ebp, DWORD PTR _p$1$[esp+216]
	mov	eax, DWORD PTR [esi+12]
	cmp	ebp, eax
	je	SHORT $LN94@dsa_builti
; Line 677
	test	eax, eax
	je	SHORT $LN95@dsa_builti
; Line 678
	push	eax
	call	_BN_free
	add	esp, 4
$LN95@dsa_builti:
; Line 679
	push	ebp
	call	_BN_dup
	add	esp, 4
	mov	DWORD PTR [esi+12], eax
$LN94@dsa_builti:
; Line 681
	mov	eax, DWORD PTR [esi+16]
	mov	ebp, DWORD PTR _q$1$[esp+216]
	cmp	ebp, eax
	je	SHORT $LN96@dsa_builti
; Line 682
	test	eax, eax
	je	SHORT $LN97@dsa_builti
; Line 683
	push	eax
	call	_BN_free
	add	esp, 4
$LN97@dsa_builti:
; Line 684
	push	ebp
	call	_BN_dup
	add	esp, 4
	mov	DWORD PTR [esi+16], eax
$LN96@dsa_builti:
; Line 686
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN98@dsa_builti
; Line 687
	push	eax
	call	_BN_free
	add	esp, 4
$LN98@dsa_builti:
; Line 688
	push	DWORD PTR _g$1$[esp+216]
	call	_BN_dup
	add	esp, 4
	mov	DWORD PTR [esi+20], eax
; Line 689
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN100@dsa_builti
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN100@dsa_builti
	test	eax, eax
	je	SHORT $LN100@dsa_builti
; Line 693
	mov	eax, DWORD PTR _counter_ret$GSCopy$1$[esp+216]
	test	eax, eax
	je	SHORT $LN101@dsa_builti
; Line 694
	mov	DWORD PTR [eax], edi
$LN101@dsa_builti:
; Line 695
	mov	ecx, DWORD PTR _h_ret$GSCopy$1$[esp+216]
	test	ecx, ecx
	je	$LN102@dsa_builti
; Line 696
	mov	eax, DWORD PTR _h$1$[esp+216]
	mov	DWORD PTR [ecx], eax
	jmp	$LN102@dsa_builti
$LN100@dsa_builti:
; Line 690
	mov	DWORD PTR _ok$1$[esp+216], -1
; Line 666
	jmp	$LN102@dsa_builti
_dsa_builtin_paramgen2 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_builtin_paramgen
_TEXT	SEGMENT
_ctx$1$ = -216						; size = 4
_test$1$ = -212						; size = 4
_p$1$ = -208						; size = 4
_cb$GSCopy$1$ = -204					; size = 4
_q$1$ = -200						; size = 4
_g$1$ = -196						; size = 4
_mont$1$ = -192						; size = 4
_m$1$ = -188						; size = 4
_seed_in$GSCopy$1$ = -184				; size = 4
_bits$3$ = -180						; size = 4
_W$1$ = -176						; size = 4
_evpmd$GSCopy$1$ = -172					; size = 4
_counter$1$ = -168					; size = 4
_h$1$ = -164						; size = 4
_ok$1$ = -160						; size = 4
_c$1$ = -156						; size = 4
_X$1$ = -152						; size = 4
_ret$GSCopy$1$ = -148					; size = 4
_counter_ret$GSCopy$1$ = -144				; size = 4
_h_ret$GSCopy$1$ = -140					; size = 4
_seed_out$GSCopy$1$ = -136				; size = 4
_md$ = -132						; size = 32
_buf$ = -100						; size = 32
_seed$ = -68						; size = 32
_buf2$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_ret$ = 8						; size = 4
_bits$ = 12						; size = 4
_qbits$ = 16						; size = 4
_evpmd$ = 20						; size = 4
_seed_in$ = 24						; size = 4
_seed_len$ = 28						; size = 4
_seed_out$ = 32						; size = 4
_counter_ret$ = 36					; size = 4
_h_ret$ = 40						; size = 4
_cb$ = 44						; size = 4
_dsa_builtin_paramgen PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_gen.c
; Line 130
	mov	eax, 216				; 000000d8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+216], eax
	mov	eax, DWORD PTR _ret$[esp+212]
	mov	edx, DWORD PTR _seed_in$[esp+212]
	push	ebp
	mov	ebp, DWORD PTR _evpmd$[esp+216]
	push	esi
; Line 138
	mov	esi, DWORD PTR _qbits$[esp+220]
	mov	DWORD PTR _ret$GSCopy$1$[esp+224], eax
	mov	eax, DWORD PTR _seed_out$[esp+220]
	mov	DWORD PTR _seed_out$GSCopy$1$[esp+224], eax
	mov	eax, DWORD PTR _counter_ret$[esp+220]
	shr	esi, 3
	mov	DWORD PTR _counter_ret$GSCopy$1$[esp+224], eax
	mov	eax, DWORD PTR _h_ret$[esp+220]
	mov	DWORD PTR _evpmd$GSCopy$1$[esp+224], ebp
	mov	DWORD PTR _seed_in$GSCopy$1$[esp+224], edx
	mov	DWORD PTR _h_ret$GSCopy$1$[esp+224], eax
	mov	DWORD PTR _ok$1$[esp+224], 0
	mov	DWORD PTR _m$1$[esp+224], 0
; Line 142
	mov	DWORD PTR _h$1$[esp+224], 2
	push	edi
	mov	edi, DWORD PTR _cb$[esp+224]
	mov	DWORD PTR _cb$GSCopy$1$[esp+228], edi
; Line 144
	cmp	esi, 20					; 00000014H
	je	SHORT $LN26@dsa_builti
	cmp	esi, 28					; 0000001cH
	je	SHORT $LN26@dsa_builti
	cmp	esi, 32					; 00000020H
	je	SHORT $LN26@dsa_builti
; Line 147
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebp
; Line 380
	mov	ecx, DWORD PTR __$ArrayPad$[esp+216]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 216				; 000000d8H
	ret	0
$LN26@dsa_builti:
; Line 149
	test	ebp, ebp
	jne	SHORT $LN27@dsa_builti
; Line 151
	call	_EVP_sha1
	mov	edx, DWORD PTR _seed_in$GSCopy$1$[esp+228]
	mov	ebp, eax
	mov	DWORD PTR _evpmd$GSCopy$1$[esp+228], eax
$LN27@dsa_builti:
; Line 153
	mov	ecx, DWORD PTR _bits$[esp+224]
	mov	eax, 512				; 00000200H
	cmp	ecx, eax
	cmovb	ecx, eax
; Line 156
	lea	eax, DWORD PTR [ecx+63]
	and	eax, -64				; ffffffc0H
	mov	DWORD PTR _bits$3$[esp+228], eax
; Line 162
	mov	eax, DWORD PTR _seed_len$[esp+224]
	test	eax, eax
	je	SHORT $LN29@dsa_builti
	xor	ecx, ecx
	cmp	eax, esi
	cmovb	edx, ecx
	mov	DWORD PTR _seed_in$GSCopy$1$[esp+228], edx
$LN29@dsa_builti:
; Line 164
	cmp	eax, esi
	cmova	eax, esi
	mov	DWORD PTR _seed_len$[esp+224], eax
; Line 168
	test	edx, edx
	je	SHORT $LN31@dsa_builti
; Line 169
	push	eax
	push	edx
	lea	eax, DWORD PTR _seed$[esp+236]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN31@dsa_builti:
; Line 171
	call	_BN_MONT_CTX_new
	mov	DWORD PTR _mont$1$[esp+228], eax
	test	eax, eax
	je	$LN87@dsa_builti
; Line 174
	push	ebx
	call	_BN_CTX_new
	mov	ebx, eax
	mov	DWORD PTR _ctx$1$[esp+232], ebx
	test	ebx, ebx
	je	$LN86@dsa_builti
; Line 177
	push	ebx
	call	_BN_CTX_start
; Line 179
	push	ebx
	call	_BN_CTX_get
; Line 180
	push	DWORD PTR _ctx$1$[esp+240]
	mov	ebx, eax
	call	_BN_CTX_get
; Line 181
	push	DWORD PTR _ctx$1$[esp+244]
	mov	DWORD PTR _g$1$[esp+248], eax
	call	_BN_CTX_get
; Line 182
	push	DWORD PTR _ctx$1$[esp+248]
	mov	DWORD PTR _W$1$[esp+252], eax
	call	_BN_CTX_get
; Line 183
	push	DWORD PTR _ctx$1$[esp+252]
	mov	DWORD PTR _q$1$[esp+256], eax
	call	_BN_CTX_get
; Line 184
	push	DWORD PTR _ctx$1$[esp+256]
	mov	DWORD PTR _X$1$[esp+260], eax
	call	_BN_CTX_get
; Line 185
	push	DWORD PTR _ctx$1$[esp+260]
	mov	DWORD PTR _c$1$[esp+264], eax
	call	_BN_CTX_get
; Line 186
	push	DWORD PTR _ctx$1$[esp+264]
	mov	DWORD PTR _p$1$[esp+268], eax
	call	_BN_CTX_get
	mov	DWORD PTR _test$1$[esp+268], eax
	add	esp, 36					; 00000024H
; Line 188
	mov	eax, DWORD PTR _bits$3$[esp+232]
	dec	eax
	push	eax
	call	_BN_value_one
	push	eax
	push	DWORD PTR _test$1$[esp+240]
	call	_BN_lshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
	npad	6
$LL5@dsa_builti:
; Line 196
	push	DWORD PTR _m$1$[esp+232]
	push	0
	push	edi
	call	_BN_GENCB_call
	inc	DWORD PTR _m$1$[esp+244]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 199
	cmp	DWORD PTR _seed_len$[esp+228], 0
	je	SHORT $LN38@dsa_builti
	cmp	DWORD PTR _seed_in$GSCopy$1$[esp+232], 0
	je	SHORT $LN38@dsa_builti
; Line 204
	xor	edi, edi
; Line 205
	mov	DWORD PTR _seed_len$[esp+228], edi
	jmp	SHORT $LN37@dsa_builti
$LN38@dsa_builti:
; Line 200
	lea	eax, DWORD PTR _seed$[esp+232]
	push	esi
	push	eax
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	js	$LN85@dsa_builti
; Line 202
	mov	edi, 1
$LN37@dsa_builti:
; Line 208
	push	esi
	lea	eax, DWORD PTR _seed$[esp+236]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+240]
	push	eax
	call	_memcpy
; Line 209
	push	esi
	lea	eax, DWORD PTR _seed$[esp+248]
	push	eax
	lea	eax, DWORD PTR _buf2$[esp+252]
	push	eax
	call	_memcpy
; Line 211
	lea	eax, DWORD PTR [esi-1]
	add	esp, 24					; 00000018H
	test	eax, eax
	js	SHORT $LN164@dsa_builti
	npad	5
$LL10@dsa_builti:
; Line 212
	add	BYTE PTR _buf$[esp+eax+232], 1
; Line 213
	jne	SHORT $LN164@dsa_builti
; Line 211
	sub	eax, 1
	jns	SHORT $LL10@dsa_builti
$LN164@dsa_builti:
; Line 218
	push	0
	push	ebp
	push	0
	lea	eax, DWORD PTR _md$[esp+244]
	push	eax
	lea	eax, DWORD PTR _seed$[esp+248]
	push	esi
	push	eax
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN85@dsa_builti
; Line 220
	push	0
	push	ebp
	push	0
	lea	eax, DWORD PTR _buf2$[esp+244]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+248]
	push	esi
	push	eax
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN85@dsa_builti
; Line 222
	xor	ecx, ecx
	test	esi, esi
	jle	SHORT $LN12@dsa_builti
	cmp	esi, 32					; 00000020H
	jb	SHORT $LN138@dsa_builti
	mov	eax, esi
	and	eax, -2147483617			; 8000001fH
	jns	SHORT $LN166@dsa_builti
	dec	eax
	or	eax, -32				; ffffffe0H
	inc	eax
$LN166@dsa_builti:
	mov	edx, esi
	sub	edx, eax
	npad	11
$LL13@dsa_builti:
; Line 223
	movups	xmm0, XMMWORD PTR _md$[esp+ecx+232]
	movups	xmm1, XMMWORD PTR _buf2$[esp+ecx+232]
	pxor	xmm1, xmm0
	movups	XMMWORD PTR _md$[esp+ecx+232], xmm1
	movups	xmm0, XMMWORD PTR _md$[esp+ecx+248]
	movups	xmm1, XMMWORD PTR _buf2$[esp+ecx+248]
	pxor	xmm1, xmm0
	movups	XMMWORD PTR _md$[esp+ecx+248], xmm1
	add	ecx, 32					; 00000020H
	cmp	ecx, edx
	jl	SHORT $LL13@dsa_builti
$LN138@dsa_builti:
; Line 222
	cmp	ecx, esi
	jge	SHORT $LN12@dsa_builti
	npad	9
$LL137@dsa_builti:
; Line 223
	mov	al, BYTE PTR _buf2$[esp+ecx+232]
	xor	BYTE PTR _md$[esp+ecx+232], al
	inc	ecx
	cmp	ecx, esi
	jl	SHORT $LL137@dsa_builti
$LN12@dsa_builti:
; Line 228
	push	DWORD PTR _q$1$[esp+232]
	or	BYTE PTR _md$[esp+236], 128		; 00000080H
	lea	eax, DWORD PTR _md$[esp+236]
	or	BYTE PTR _md$[esp+esi+235], 1
	push	esi
	push	eax
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 232
	push	DWORD PTR _cb$GSCopy$1$[esp+232]
	push	edi
	push	DWORD PTR _ctx$1$[esp+240]
	push	50					; 00000032H
	push	DWORD PTR _q$1$[esp+248]
	call	_BN_is_prime_fasttest_ex
	add	esp, 20					; 00000014H
; Line 234
	test	eax, eax
	jg	SHORT $LN107@dsa_builti
; Line 236
	jne	$LN85@dsa_builti
; Line 241
	mov	edi, DWORD PTR _cb$GSCopy$1$[esp+232]
	jmp	$LL5@dsa_builti
$LN107@dsa_builti:
; Line 243
	mov	ebp, DWORD PTR _cb$GSCopy$1$[esp+232]
	push	0
	push	2
	push	ebp
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 245
	push	0
	push	3
	push	ebp
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 252
	mov	ecx, DWORD PTR _bits$3$[esp+232]
	mov	eax, -858993459				; cccccccdH
	xor	edi, edi
	mov	DWORD PTR _counter$1$[esp+232], edi
	lea	ecx, DWORD PTR [ecx-1]
	mul	ecx
	mov	ebp, edx
	shr	ebp, 7
$LL14@dsa_builti:
; Line 255
	test	edi, edi
	je	SHORT $LN48@dsa_builti
	push	edi
	push	0
	push	DWORD PTR _cb$GSCopy$1$[esp+240]
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
$LN48@dsa_builti:
; Line 259
	push	0
	push	DWORD PTR _W$1$[esp+236]
	call	_BN_set_word
	add	esp, 8
; Line 261
	xor	edi, edi
	test	ebp, ebp
	js	$LN18@dsa_builti
$LL19@dsa_builti:
; Line 265
	lea	eax, DWORD PTR [esi-1]
	test	eax, eax
	js	SHORT $LN165@dsa_builti
	npad	1
$LL22@dsa_builti:
; Line 266
	add	BYTE PTR _buf$[esp+eax+232], 1
; Line 267
	jne	SHORT $LN165@dsa_builti
; Line 265
	sub	eax, 1
	jns	SHORT $LL22@dsa_builti
$LN165@dsa_builti:
; Line 271
	push	0
	push	DWORD PTR _evpmd$GSCopy$1$[esp+236]
	lea	eax, DWORD PTR _md$[esp+240]
	push	0
	push	eax
	lea	eax, DWORD PTR _buf$[esp+248]
	push	esi
	push	eax
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN85@dsa_builti
; Line 275
	push	ebx
	lea	eax, DWORD PTR _md$[esp+236]
	push	esi
	push	eax
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 277
	lea	eax, DWORD PTR [esi*8]
	imul	eax, edi
	push	eax
	push	ebx
	push	ebx
	call	_BN_lshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 279
	mov	eax, DWORD PTR _W$1$[esp+232]
	push	ebx
	push	eax
	push	eax
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 261
	inc	edi
	cmp	edi, ebp
	jle	$LL19@dsa_builti
$LN18@dsa_builti:
; Line 284
	mov	eax, DWORD PTR _bits$3$[esp+232]
	mov	edi, DWORD PTR _W$1$[esp+232]
	dec	eax
	push	eax
	push	edi
	call	_BN_mask_bits
	add	esp, 8
	test	eax, eax
	je	$LN85@dsa_builti
; Line 286
	push	edi
	mov	edi, DWORD PTR _X$1$[esp+236]
	push	edi
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN85@dsa_builti
; Line 288
	push	DWORD PTR _test$1$[esp+232]
	push	edi
	push	edi
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 292
	push	DWORD PTR _q$1$[esp+232]
	push	ebx
	call	_BN_lshift1
	add	esp, 8
	test	eax, eax
	je	$LN85@dsa_builti
; Line 294
	push	DWORD PTR _ctx$1$[esp+232]
	push	ebx
	push	edi
	push	DWORD PTR _c$1$[esp+244]
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN85@dsa_builti
; Line 296
	call	_BN_value_one
	push	eax
	push	DWORD PTR _c$1$[esp+236]
	push	ebx
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 298
	push	ebx
	push	edi
	mov	edi, DWORD PTR _p$1$[esp+240]
	push	edi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 302
	push	DWORD PTR _test$1$[esp+232]
	push	edi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN63@dsa_builti
; Line 304
	mov	edi, DWORD PTR _cb$GSCopy$1$[esp+232]
	push	edi
	push	1
	push	DWORD PTR _ctx$1$[esp+240]
	push	50					; 00000032H
	push	DWORD PTR _p$1$[esp+248]
	call	_BN_is_prime_fasttest_ex
	add	esp, 20					; 00000014H
; Line 305
	test	eax, eax
	jg	SHORT $end$168
; Line 307
	jne	$LN85@dsa_builti
$LN63@dsa_builti:
; Line 312
	mov	edi, DWORD PTR _counter$1$[esp+232]
	inc	edi
	mov	DWORD PTR _counter$1$[esp+232], edi
; Line 316
	cmp	edi, 4096				; 00001000H
	jl	$LL14@dsa_builti
	mov	ebp, DWORD PTR _evpmd$GSCopy$1$[esp+232]
	mov	edi, DWORD PTR _cb$GSCopy$1$[esp+232]
	jmp	$LL5@dsa_builti
$end$168:
; Line 321
	push	1
	push	2
	push	edi
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 326
	call	_BN_value_one
	push	eax
	push	DWORD PTR _p$1$[esp+236]
	push	DWORD PTR _test$1$[esp+240]
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 328
	mov	ebp, DWORD PTR _ctx$1$[esp+232]
	push	ebp
	push	DWORD PTR _q$1$[esp+236]
	push	DWORD PTR _test$1$[esp+240]
	push	0
	push	ebx
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN85@dsa_builti
; Line 331
	push	2
	push	DWORD PTR _test$1$[esp+236]
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$LN85@dsa_builti
; Line 333
	push	ebp
	push	DWORD PTR _p$1$[esp+236]
	push	DWORD PTR _mont$1$[esp+240]
	call	_BN_MONT_CTX_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 338
	push	DWORD PTR _mont$1$[esp+232]
	push	ebp
	push	DWORD PTR _p$1$[esp+240]
	push	ebx
	push	DWORD PTR _test$1$[esp+248]
	push	DWORD PTR _g$1$[esp+252]
	call	_BN_mod_exp_mont
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN85@dsa_builti
	npad	3
$LL23@dsa_builti:
; Line 340
	mov	ecx, DWORD PTR _g$1$[esp+232]
	cmp	DWORD PTR [ecx+4], 1
	jne	SHORT $LN128@dsa_builti
	mov	eax, DWORD PTR [ecx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN128@dsa_builti
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN128@dsa_builti
; Line 342
	call	_BN_value_one
	push	eax
	mov	eax, DWORD PTR _test$1$[esp+236]
	push	eax
	push	eax
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 344
	push	DWORD PTR _mont$1$[esp+232]
	inc	DWORD PTR _h$1$[esp+236]
	push	ebp
	push	DWORD PTR _p$1$[esp+240]
	push	ebx
	push	DWORD PTR _test$1$[esp+248]
	push	DWORD PTR _g$1$[esp+252]
	call	_BN_mod_exp_mont
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LL23@dsa_builti
; Line 339
	jmp	$LN85@dsa_builti
$LN128@dsa_builti:
; Line 347
	push	1
	push	3
	push	edi
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN85@dsa_builti
; Line 350
	mov	DWORD PTR _ok$1$[esp+232], 1
$err$169:
; Line 353
	mov	ebx, DWORD PTR _ret$GSCopy$1$[esp+232]
	mov	eax, DWORD PTR [ebx+12]
	test	eax, eax
	je	SHORT $LN78@dsa_builti
; Line 354
	push	eax
	call	_BN_free
	add	esp, 4
$LN78@dsa_builti:
; Line 355
	mov	eax, DWORD PTR [ebx+16]
	test	eax, eax
	je	SHORT $LN79@dsa_builti
; Line 356
	push	eax
	call	_BN_free
	add	esp, 4
$LN79@dsa_builti:
; Line 357
	mov	eax, DWORD PTR [ebx+20]
	test	eax, eax
	je	SHORT $LN80@dsa_builti
; Line 358
	push	eax
	call	_BN_free
	add	esp, 4
$LN80@dsa_builti:
; Line 359
	push	DWORD PTR _p$1$[esp+232]
	call	_BN_dup
; Line 360
	push	DWORD PTR _q$1$[esp+236]
	mov	DWORD PTR [ebx+12], eax
	call	_BN_dup
; Line 361
	push	DWORD PTR _g$1$[esp+240]
	mov	DWORD PTR [ebx+16], eax
	call	_BN_dup
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ebx+20], eax
; Line 362
	cmp	DWORD PTR [ebx+12], 0
	je	SHORT $LN82@dsa_builti
	cmp	DWORD PTR [ebx+16], 0
	je	SHORT $LN82@dsa_builti
	test	eax, eax
	je	SHORT $LN82@dsa_builti
; Line 366
	mov	ecx, DWORD PTR _counter_ret$GSCopy$1$[esp+232]
	test	ecx, ecx
	je	SHORT $LN83@dsa_builti
; Line 367
	mov	eax, DWORD PTR _counter$1$[esp+232]
	mov	DWORD PTR [ecx], eax
$LN83@dsa_builti:
; Line 368
	mov	ecx, DWORD PTR _h_ret$GSCopy$1$[esp+232]
	test	ecx, ecx
	je	SHORT $LN84@dsa_builti
; Line 369
	mov	eax, DWORD PTR _h$1$[esp+232]
	mov	DWORD PTR [ecx], eax
$LN84@dsa_builti:
; Line 370
	mov	eax, DWORD PTR _seed_out$GSCopy$1$[esp+232]
	test	eax, eax
	je	SHORT $LN85@dsa_builti
; Line 371
	push	esi
	lea	ecx, DWORD PTR _seed$[esp+236]
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN85@dsa_builti
$LN82@dsa_builti:
; Line 363
	mov	DWORD PTR _ok$1$[esp+232], 0
$LN85@dsa_builti:
; Line 374
	mov	ebx, DWORD PTR _ctx$1$[esp+232]
	push	ebx
	call	_BN_CTX_end
; Line 375
	push	ebx
	call	_BN_CTX_free
	add	esp, 8
$LN86@dsa_builti:
; Line 378
	push	DWORD PTR _mont$1$[esp+232]
	call	_BN_MONT_CTX_free
	add	esp, 4
	pop	ebx
$LN87@dsa_builti:
; Line 380
	mov	ecx, DWORD PTR __$ArrayPad$[esp+228]
	mov	eax, DWORD PTR _ok$1$[esp+228]
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 216				; 000000d8H
	ret	0
_dsa_builtin_paramgen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DSA_generate_parameters_ex
_TEXT	SEGMENT
_ret$ = 8						; size = 4
_bits$ = 12						; size = 4
_seed_in$ = 16						; size = 4
_seed_len$ = 20						; size = 4
_counter_ret$ = 24					; size = 4
_h_ret$ = 28						; size = 4
_cb$ = 32						; size = 4
_DSA_generate_parameters_ex PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_gen.c
; Line 98
	push	esi
; Line 106
	mov	esi, DWORD PTR _ret$[esp]
	mov	eax, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [eax+40]
	test	eax, eax
	je	SHORT $LN2@DSA_genera
; Line 107
	push	DWORD PTR _cb$[esp]
	push	DWORD PTR _h_ret$[esp+4]
	push	DWORD PTR _counter_ret$[esp+8]
	push	DWORD PTR _seed_len$[esp+12]
	push	DWORD PTR _seed_in$[esp+16]
	push	DWORD PTR _bits$[esp+20]
	push	esi
	call	eax
	add	esp, 28					; 0000001cH
	pop	esi
; Line 124
	ret	0
$LN2@DSA_genera:
; Line 117
	cmp	DWORD PTR _bits$[esp], 2048		; 00000800H
	push	edi
	jl	SHORT $LN5@DSA_genera
	call	_EVP_sha256
	jmp	SHORT $LN7@DSA_genera
$LN5@DSA_genera:
	call	_EVP_sha1
$LN7@DSA_genera:
	mov	edi, eax
; Line 118
	push	edi
	call	_EVP_MD_size
; Line 120
	push	DWORD PTR _cb$[esp+8]
	shl	eax, 3
	push	DWORD PTR _h_ret$[esp+12]
	push	DWORD PTR _counter_ret$[esp+16]
	push	0
	push	DWORD PTR _seed_len$[esp+24]
	push	DWORD PTR _seed_in$[esp+28]
	push	edi
	push	eax
	push	DWORD PTR _bits$[esp+40]
	push	esi
	call	_dsa_builtin_paramgen
	add	esp, 44					; 0000002cH
	pop	edi
	pop	esi
; Line 124
	ret	0
_DSA_generate_parameters_ex ENDP
_TEXT	ENDS
END

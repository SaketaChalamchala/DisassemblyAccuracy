; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_02ICGBAFJO@k1?$AA@			; `string'
PUBLIC	??_C@_02KJEMFGFN@k2?$AA@			; `string'
PUBLIC	??_C@_02LAFHGHBM@k3?$AA@			; `string'
PUBLIC	_X9_62_PENTANOMIAL_it
PUBLIC	??_C@_0BC@NPDMPFCL@X9_62_PENTANOMIAL?$AA@	; `string'
PUBLIC	??_C@_07PBHIMFBE@p?4other?$AA@			; `string'
PUBLIC	??_C@_09KOBBOOPN@p?4onBasis?$AA@		; `string'
PUBLIC	??_C@_09LICBCEBD@p?4tpBasis?$AA@		; `string'
PUBLIC	??_C@_09DMGLCKOJ@p?4ppBasis?$AA@		; `string'
PUBLIC	??_C@_01GOHFPIOK@m?$AA@				; `string'
PUBLIC	??_C@_04GPMDFGEJ@type?$AA@			; `string'
PUBLIC	??_C@_0BJ@CCODLOLO@X9_62_CHARACTERISTIC_TWO?$AA@ ; `string'
PUBLIC	_X9_62_CHARACTERISTIC_TWO_it
PUBLIC	??_C@_07DPJEDCLB@p?4prime?$AA@			; `string'
PUBLIC	??_C@_0L@NLMAKEBL@p?4char_two?$AA@		; `string'
PUBLIC	??_C@_09OAOLGAOM@fieldType?$AA@			; `string'
PUBLIC	??_C@_0O@PGPIAKKH@X9_62_FIELDID?$AA@		; `string'
PUBLIC	_X9_62_FIELDID_it
PUBLIC	??_C@_01MCMALHOG@a?$AA@				; `string'
PUBLIC	??_C@_01OJONOECF@b?$AA@				; `string'
PUBLIC	??_C@_04MENKDCKE@seed?$AA@			; `string'
PUBLIC	_X9_62_CURVE_it
PUBLIC	??_C@_0M@BHDPNPCK@X9_62_CURVE?$AA@		; `string'
PUBLIC	??_C@_07CPCPJPKL@version?$AA@			; `string'
PUBLIC	??_C@_07MJJGNICD@fieldID?$AA@			; `string'
PUBLIC	??_C@_05HIKPKPAA@curve?$AA@			; `string'
PUBLIC	??_C@_04BHIIPFEC@base?$AA@			; `string'
PUBLIC	??_C@_05NDNMCCJH@order?$AA@			; `string'
PUBLIC	??_C@_08DKFAOMDI@cofactor?$AA@			; `string'
PUBLIC	_ECPARAMETERS_it
PUBLIC	??_C@_0N@ECDPFONH@ECPARAMETERS?$AA@		; `string'
PUBLIC	??_C@_0BC@JEJHGDNN@value?4named_curve?$AA@	; `string'
PUBLIC	??_C@_0BB@KOECJJJ@value?4parameters?$AA@	; `string'
PUBLIC	??_C@_0BD@HOIIAPI@value?4implicitlyCA?$AA@	; `string'
PUBLIC	_ECPKPARAMETERS_it
PUBLIC	??_C@_0P@PBBIGPFJ@ECPKPARAMETERS?$AA@		; `string'
PUBLIC	??_C@_0L@BCENACFO@privateKey?$AA@		; `string'
PUBLIC	??_C@_0L@HHPOFMCB@parameters?$AA@		; `string'
PUBLIC	??_C@_09IDENFCJL@publicKey?$AA@			; `string'
PUBLIC	??_C@_0O@DFJMHGOP@EC_PRIVATEKEY?$AA@		; `string'
EXTRN	_ASN1_INTEGER_it:PROC
EXTRN	_LONG_it:PROC
EXTRN	_ASN1_OCTET_STRING_it:PROC
EXTRN	_ASN1_NULL_it:PROC
EXTRN	_ASN1_ANY_it:PROC
EXTRN	_ASN1_OBJECT_it:PROC
EXTRN	_ASN1_BIT_STRING_it:PROC
;	COMDAT ??_C@_0O@DFJMHGOP@EC_PRIVATEKEY?$AA@
CONST	SEGMENT
??_C@_0O@DFJMHGOP@EC_PRIVATEKEY?$AA@ DB 'EC_PRIVATEKEY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IDENFCJL@publicKey?$AA@
CONST	SEGMENT
??_C@_09IDENFCJL@publicKey?$AA@ DB 'publicKey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HHPOFMCB@parameters?$AA@
CONST	SEGMENT
??_C@_0L@HHPOFMCB@parameters?$AA@ DB 'parameters', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BCENACFO@privateKey?$AA@
CONST	SEGMENT
??_C@_0L@BCENACFO@privateKey?$AA@ DB 'privateKey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PBBIGPFJ@ECPKPARAMETERS?$AA@
CONST	SEGMENT
??_C@_0P@PBBIGPFJ@ECPKPARAMETERS?$AA@ DB 'ECPKPARAMETERS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HOIIAPI@value?4implicitlyCA?$AA@
CONST	SEGMENT
??_C@_0BD@HOIIAPI@value?4implicitlyCA?$AA@ DB 'value.implicitlyCA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KOECJJJ@value?4parameters?$AA@
CONST	SEGMENT
??_C@_0BB@KOECJJJ@value?4parameters?$AA@ DB 'value.parameters', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JEJHGDNN@value?4named_curve?$AA@
CONST	SEGMENT
??_C@_0BC@JEJHGDNN@value?4named_curve?$AA@ DB 'value.named_curve', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ECDPFONH@ECPARAMETERS?$AA@
CONST	SEGMENT
??_C@_0N@ECDPFONH@ECPARAMETERS?$AA@ DB 'ECPARAMETERS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DKFAOMDI@cofactor?$AA@
CONST	SEGMENT
??_C@_08DKFAOMDI@cofactor?$AA@ DB 'cofactor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NDNMCCJH@order?$AA@
CONST	SEGMENT
??_C@_05NDNMCCJH@order?$AA@ DB 'order', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BHIIPFEC@base?$AA@
CONST	SEGMENT
??_C@_04BHIIPFEC@base?$AA@ DB 'base', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HIKPKPAA@curve?$AA@
CONST	SEGMENT
??_C@_05HIKPKPAA@curve?$AA@ DB 'curve', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MJJGNICD@fieldID?$AA@
CONST	SEGMENT
??_C@_07MJJGNICD@fieldID?$AA@ DB 'fieldID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version?$AA@
CONST	SEGMENT
??_C@_07CPCPJPKL@version?$AA@ DB 'version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BHDPNPCK@X9_62_CURVE?$AA@
CONST	SEGMENT
??_C@_0M@BHDPNPCK@X9_62_CURVE?$AA@ DB 'X9_62_CURVE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MENKDCKE@seed?$AA@
CONST	SEGMENT
??_C@_04MENKDCKE@seed?$AA@ DB 'seed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01OJONOECF@b?$AA@
CONST	SEGMENT
??_C@_01OJONOECF@b?$AA@ DB 'b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MCMALHOG@a?$AA@
CONST	SEGMENT
??_C@_01MCMALHOG@a?$AA@ DB 'a', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PGPIAKKH@X9_62_FIELDID?$AA@
CONST	SEGMENT
??_C@_0O@PGPIAKKH@X9_62_FIELDID?$AA@ DB 'X9_62_FIELDID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OAOLGAOM@fieldType?$AA@
CONST	SEGMENT
??_C@_09OAOLGAOM@fieldType?$AA@ DB 'fieldType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NLMAKEBL@p?4char_two?$AA@
CONST	SEGMENT
??_C@_0L@NLMAKEBL@p?4char_two?$AA@ DB 'p.char_two', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DPJEDCLB@p?4prime?$AA@
CONST	SEGMENT
??_C@_07DPJEDCLB@p?4prime?$AA@ DB 'p.prime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CCODLOLO@X9_62_CHARACTERISTIC_TWO?$AA@
CONST	SEGMENT
??_C@_0BJ@CCODLOLO@X9_62_CHARACTERISTIC_TWO?$AA@ DB 'X9_62_CHARACTERISTIC'
	DB	'_TWO', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPMDFGEJ@type?$AA@
CONST	SEGMENT
??_C@_04GPMDFGEJ@type?$AA@ DB 'type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01GOHFPIOK@m?$AA@
CONST	SEGMENT
??_C@_01GOHFPIOK@m?$AA@ DB 'm', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09DMGLCKOJ@p?4ppBasis?$AA@
CONST	SEGMENT
??_C@_09DMGLCKOJ@p?4ppBasis?$AA@ DB 'p.ppBasis', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LICBCEBD@p?4tpBasis?$AA@
CONST	SEGMENT
??_C@_09LICBCEBD@p?4tpBasis?$AA@ DB 'p.tpBasis', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KOBBOOPN@p?4onBasis?$AA@
CONST	SEGMENT
??_C@_09KOBBOOPN@p?4onBasis?$AA@ DB 'p.onBasis', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07PBHIMFBE@p?4other?$AA@
CONST	SEGMENT
??_C@_07PBHIMFBE@p?4other?$AA@ DB 'p.other', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NPDMPFCL@X9_62_PENTANOMIAL?$AA@
CONST	SEGMENT
??_C@_0BC@NPDMPFCL@X9_62_PENTANOMIAL?$AA@ DB 'X9_62_PENTANOMIAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LAFHGHBM@k3?$AA@
CONST	SEGMENT
??_C@_02LAFHGHBM@k3?$AA@ DB 'k3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KJEMFGFN@k2?$AA@
CONST	SEGMENT
??_C@_02KJEMFGFN@k2?$AA@ DB 'k2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02ICGBAFJO@k1?$AA@
CONST	SEGMENT
??_C@_02ICGBAFJO@k1?$AA@ DB 'k1', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_X9_62_PENTANOMIAL_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_02ICGBAFJO@k1?$AA@
	DD	FLAT:_LONG_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_02KJEMFGFN@k2?$AA@
	DD	FLAT:_LONG_it
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_02LAFHGHBM@k3?$AA@
	DD	FLAT:_LONG_it
?local_it@?1??X9_62_PENTANOMIAL_it@@9@9 DB 01H		; `X9_62_PENTANOMIAL_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_X9_62_PENTANOMIAL_seq_tt
	DD	03H
	DD	00H
	DD	0cH
	DD	FLAT:??_C@_0BC@NPDMPFCL@X9_62_PENTANOMIAL?$AA@
_char_two_def_tt DD 00H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_07PBHIMFBE@p?4other?$AA@
	DD	FLAT:_ASN1_ANY_it
?internal_adb@?1??X9_62_CHARACTERISTIC_TWO_adb@@9@9 DD 00H ; `X9_62_CHARACTERISTIC_TWO_adb'::`2'::internal_adb
	DD	04H
	DD	00H
	DD	FLAT:_X9_62_CHARACTERISTIC_TWO_adbtbl
	DD	03H
	DD	FLAT:_char_two_def_tt
	DD	00H
_X9_62_CHARACTERISTIC_TWO_adbtbl DD 02a9H
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_09KOBBOOPN@p?4onBasis?$AA@
	DD	FLAT:_ASN1_NULL_it
	DD	02aaH
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_09LICBCEBD@p?4tpBasis?$AA@
	DD	FLAT:_ASN1_INTEGER_it
	DD	02abH
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_09DMGLCKOJ@p?4ppBasis?$AA@
	DD	FLAT:_X9_62_PENTANOMIAL_it
_X9_62_CHARACTERISTIC_TWO_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_01GOHFPIOK@m?$AA@
	DD	FLAT:_LONG_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_04GPMDFGEJ@type?$AA@
	DD	FLAT:_ASN1_OBJECT_it
	DD	0100H
	DD	0ffffffffH
	DD	00H
	DD	FLAT:??_C@_0BJ@CCODLOLO@X9_62_CHARACTERISTIC_TWO?$AA@
	DD	FLAT:_X9_62_CHARACTERISTIC_TWO_adb
?local_it@?1??X9_62_CHARACTERISTIC_TWO_it@@9@9 DB 01H	; `X9_62_CHARACTERISTIC_TWO_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_X9_62_CHARACTERISTIC_TWO_seq_tt
	DD	03H
	DD	00H
	DD	0cH
	DD	FLAT:??_C@_0BJ@CCODLOLO@X9_62_CHARACTERISTIC_TWO?$AA@
_fieldID_def_tt DD 00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_07PBHIMFBE@p?4other?$AA@
	DD	FLAT:_ASN1_ANY_it
_X9_62_FIELDID_adbtbl DD 0196H
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_07DPJEDCLB@p?4prime?$AA@
	DD	FLAT:_ASN1_INTEGER_it
	DD	0197H
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_0L@NLMAKEBL@p?4char_two?$AA@
	DD	FLAT:_X9_62_CHARACTERISTIC_TWO_it
?internal_adb@?1??X9_62_FIELDID_adb@@9@9 DD 00H		; `X9_62_FIELDID_adb'::`2'::internal_adb
	DD	00H
	DD	00H
	DD	FLAT:_X9_62_FIELDID_adbtbl
	DD	02H
	DD	FLAT:_fieldID_def_tt
	DD	00H
_X9_62_FIELDID_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09OAOLGAOM@fieldType?$AA@
	DD	FLAT:_ASN1_OBJECT_it
	DD	0100H
	DD	0ffffffffH
	DD	00H
	DD	FLAT:??_C@_0O@PGPIAKKH@X9_62_FIELDID?$AA@
	DD	FLAT:_X9_62_FIELDID_adb
?local_it@?1??X9_62_FIELDID_it@@9@9 DB 01H		; `X9_62_FIELDID_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_X9_62_FIELDID_seq_tt
	DD	02H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_0O@PGPIAKKH@X9_62_FIELDID?$AA@
_X9_62_CURVE_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_01MCMALHOG@a?$AA@
	DD	FLAT:_ASN1_OCTET_STRING_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_01OJONOECF@b?$AA@
	DD	FLAT:_ASN1_OCTET_STRING_it
	DD	01H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_04MENKDCKE@seed?$AA@
	DD	FLAT:_ASN1_BIT_STRING_it
?local_it@?1??X9_62_CURVE_it@@9@9 DB 01H		; `X9_62_CURVE_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_X9_62_CURVE_seq_tt
	DD	03H
	DD	00H
	DD	0cH
	DD	FLAT:??_C@_0M@BHDPNPCK@X9_62_CURVE?$AA@
?local_it@?1??ECPARAMETERS_it@@9@9 DB 01H		; `ECPARAMETERS_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_ECPARAMETERS_seq_tt
	DD	06H
	DD	00H
	DD	018H
	DD	FLAT:??_C@_0N@ECDPFONH@ECPARAMETERS?$AA@
_ECPARAMETERS_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DD	FLAT:_LONG_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_07MJJGNICD@fieldID?$AA@
	DD	FLAT:_X9_62_FIELDID_it
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_05HIKPKPAA@curve?$AA@
	DD	FLAT:_X9_62_CURVE_it
	DD	00H
	DD	00H
	DD	0cH
	DD	FLAT:??_C@_04BHIIPFEC@base?$AA@
	DD	FLAT:_ASN1_OCTET_STRING_it
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:??_C@_05NDNMCCJH@order?$AA@
	DD	FLAT:_ASN1_INTEGER_it
	DD	01H
	DD	00H
	DD	014H
	DD	FLAT:??_C@_08DKFAOMDI@cofactor?$AA@
	DD	FLAT:_ASN1_INTEGER_it
_ECPKPARAMETERS_ch_tt DD 00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_0BC@JEJHGDNN@value?4named_curve?$AA@
	DD	FLAT:_ASN1_OBJECT_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_0BB@KOECJJJ@value?4parameters?$AA@
	DD	FLAT:_ECPARAMETERS_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_0BD@HOIIAPI@value?4implicitlyCA?$AA@
	DD	FLAT:_ASN1_NULL_it
?local_it@?1??ECPKPARAMETERS_it@@9@9 DB 02H		; `ECPKPARAMETERS_it'::`2'::local_it
	ORG $+3
	DD	00H
	DD	FLAT:_ECPKPARAMETERS_ch_tt
	DD	03H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_0P@PBBIGPFJ@ECPKPARAMETERS?$AA@
_EC_PRIVATEKEY_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DD	FLAT:_LONG_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_0L@BCENACFO@privateKey?$AA@
	DD	FLAT:_ASN1_OCTET_STRING_it
	DD	091H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_0L@HHPOFMCB@parameters?$AA@
	DD	FLAT:_ECPKPARAMETERS_it
	DD	091H
	DD	01H
	DD	0cH
	DD	FLAT:??_C@_09IDENFCJL@publicKey?$AA@
	DD	FLAT:_ASN1_BIT_STRING_it
?local_it@?1??EC_PRIVATEKEY_it@@9@9 DB 01H		; `EC_PRIVATEKEY_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_EC_PRIVATEKEY_seq_tt
	DD	04H
	DD	00H
	DD	010H
	DD	FLAT:??_C@_0O@DFJMHGOP@EC_PRIVATEKEY?$AA@
CONST	ENDS
PUBLIC	_EC_GROUP_get_basis_type
PUBLIC	_EC_GROUP_get_trinomial_basis
PUBLIC	_EC_GROUP_get_pentanomial_basis
PUBLIC	_d2i_ECPKParameters
PUBLIC	_i2d_ECPKParameters
PUBLIC	_d2i_ECPrivateKey
PUBLIC	_i2d_ECPrivateKey
PUBLIC	_d2i_ECParameters
PUBLIC	_i2d_ECParameters
PUBLIC	_o2i_ECPublicKey
PUBLIC	_i2o_ECPublicKey
PUBLIC	_X9_62_PENTANOMIAL_new
PUBLIC	_X9_62_PENTANOMIAL_free
PUBLIC	_X9_62_CHARACTERISTIC_TWO_new
PUBLIC	_X9_62_CHARACTERISTIC_TWO_free
PUBLIC	_ECPARAMETERS_new
PUBLIC	_ECPARAMETERS_free
PUBLIC	_ECPKPARAMETERS_new
PUBLIC	_ECPKPARAMETERS_free
PUBLIC	_d2i_ECPKPARAMETERS
PUBLIC	_i2d_ECPKPARAMETERS
PUBLIC	_EC_PRIVATEKEY_it
PUBLIC	_EC_PRIVATEKEY_new
PUBLIC	_EC_PRIVATEKEY_free
PUBLIC	_d2i_EC_PRIVATEKEY
PUBLIC	_i2d_EC_PRIVATEKEY
PUBLIC	??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_realloc:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_set_bit:PROC
EXTRN	_ASN1_TYPE_free:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	_ASN1_BIT_STRING_new:PROC
EXTRN	_ASN1_BIT_STRING_free:PROC
EXTRN	_ASN1_BIT_STRING_set:PROC
EXTRN	_ASN1_INTEGER_new:PROC
EXTRN	_ASN1_OCTET_STRING_new:PROC
EXTRN	_ASN1_OCTET_STRING_set:PROC
EXTRN	_ASN1_NULL_new:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_ASN1_INTEGER_get:PROC
EXTRN	_BN_to_ASN1_INTEGER:PROC
EXTRN	_ASN1_INTEGER_to_BN:PROC
EXTRN	_ASN1_item_new:PROC
EXTRN	_ASN1_item_free:PROC
EXTRN	_ASN1_item_d2i:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	_EC_GROUP_clear_free:PROC
EXTRN	_EC_GROUP_method_of:PROC
EXTRN	_EC_METHOD_get_field_type:PROC
EXTRN	_EC_GROUP_set_generator:PROC
EXTRN	_EC_GROUP_get0_generator:PROC
EXTRN	_EC_GROUP_get_order:PROC
EXTRN	_EC_GROUP_get_cofactor:PROC
EXTRN	_EC_GROUP_get_curve_name:PROC
EXTRN	_EC_GROUP_set_asn1_flag:PROC
EXTRN	_EC_GROUP_get_asn1_flag:PROC
EXTRN	_EC_GROUP_set_point_conversion_form:PROC
EXTRN	_EC_GROUP_get_point_conversion_form:PROC
EXTRN	_EC_GROUP_get_curve_GFp:PROC
EXTRN	_EC_GROUP_get_curve_GF2m:PROC
EXTRN	_EC_GROUP_get_degree:PROC
EXTRN	_EC_GROUP_new_curve_GFp:PROC
EXTRN	_EC_GROUP_new_curve_GF2m:PROC
EXTRN	_EC_GROUP_new_by_curve_name:PROC
EXTRN	_EC_POINT_new:PROC
EXTRN	_EC_POINT_free:PROC
EXTRN	_EC_POINT_clear_free:PROC
EXTRN	_EC_POINT_point2oct:PROC
EXTRN	_EC_POINT_oct2point:PROC
EXTRN	_EC_POINT_mul:PROC
EXTRN	_EC_KEY_new:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
CONST	SEGMENT
??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@ DB '.\crypto\ec\ec_asn1'
	DB	'.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_asn1_group2pkparameters
_TEXT	SEGMENT
_group$ = 8						; size = 4
_params$ = 12						; size = 4
_ec_asn1_group2pkparameters PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 647
	push	esi
; Line 649
	mov	esi, DWORD PTR _params$[esp]
; Line 651
	test	esi, esi
	jne	SHORT $LN2@ec_asn1_gr
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	call	_ASN1_item_new
; Line 652
	mov	esi, eax
; Line 267
	add	esp, 4
; Line 652
	test	esi, esi
	jne	SHORT $LN20@ec_asn1_gr
; Line 653
	push	653					; 0000028dH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
	push	156					; 0000009cH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 654
	xor	eax, eax
	pop	esi
; Line 688
	ret	0
$LN2@ec_asn1_gr:
; Line 657
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN5@ec_asn1_gr
	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	SHORT $LN5@ec_asn1_gr
; Line 658
	push	ecx
	call	_ASN1_OBJECT_free
	add	esp, 4
	jmp	SHORT $LN20@ec_asn1_gr
$LN5@ec_asn1_gr:
; Line 659
	cmp	eax, 1
	jne	SHORT $LN20@ec_asn1_gr
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN20@ec_asn1_gr
; Line 257
	push	OFFSET ?local_it@?1??ECPARAMETERS_it@@9@9
	push	eax
	call	_ASN1_item_free
	add	esp, 8
$LN20@ec_asn1_gr:
	push	edi
; Line 663
	mov	edi, DWORD PTR _group$[esp+4]
	push	edi
	call	_EC_GROUP_get_asn1_flag
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@ec_asn1_gr
; Line 667
	push	edi
	call	_EC_GROUP_get_curve_name
	add	esp, 4
; Line 668
	test	eax, eax
	je	SHORT $LN28@ec_asn1_gr
; Line 670
	push	eax
	mov	DWORD PTR [esi], 0
	call	_OBJ_nid2obj
	add	esp, 4
; Line 672
	jmp	SHORT $LN31@ec_asn1_gr
$LN8@ec_asn1_gr:
; Line 679
	push	0
	push	edi
	mov	DWORD PTR [esi], 1
	call	_ec_asn1_group2parameters
	add	esp, 8
$LN31@ec_asn1_gr:
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	jne	SHORT $LN14@ec_asn1_gr
$LN28@ec_asn1_gr:
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	esi
	call	_ASN1_item_free
	add	esp, 8
; Line 685
	xor	eax, eax
	pop	edi
	pop	esi
; Line 688
	ret	0
$LN14@ec_asn1_gr:
	pop	edi
; Line 687
	mov	eax, esi
	pop	esi
; Line 688
	ret	0
_ec_asn1_group2pkparameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_asn1_pkparameters2group
_TEXT	SEGMENT
_params$ = 8						; size = 4
_ec_asn1_pkparameters2group PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 936
	mov	eax, DWORD PTR _params$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@ec_asn1_pk
; Line 937
	push	937					; 000003a9H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	124					; 0000007cH
	push	158					; 0000009eH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 938
	xor	eax, eax
; Line 965
	ret	0
$LN2@ec_asn1_pk:
; Line 941
	mov	ecx, DWORD PTR [eax]
	push	esi
	test	ecx, ecx
	jne	SHORT $LN3@ec_asn1_pk
; Line 942
	push	DWORD PTR [eax+4]
	call	_OBJ_obj2nid
; Line 943
	push	eax
	call	_EC_GROUP_new_by_curve_name
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	jne	SHORT $LN5@ec_asn1_pk
; Line 944
	push	945					; 000003b1H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	119					; 00000077H
; Line 960
	push	158					; 0000009eH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 961
	xor	eax, eax
	pop	esi
; Line 965
	ret	0
$LN5@ec_asn1_pk:
; Line 948
	push	1
; Line 956
	push	esi
	call	_EC_GROUP_set_asn1_flag
	add	esp, 8
; Line 964
	mov	eax, esi
	pop	esi
; Line 965
	ret	0
$LN3@ec_asn1_pk:
; Line 949
	cmp	ecx, 1
	jne	SHORT $LN6@ec_asn1_pk
; Line 951
	push	DWORD PTR [eax+4]
	call	_ec_asn1_parameters2group
	mov	esi, eax
	add	esp, 4
; Line 952
	test	esi, esi
	jne	SHORT $LN8@ec_asn1_pk
; Line 953
	push	953					; 000003b9H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 960
	push	158					; 0000009eH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 961
	xor	eax, eax
	pop	esi
; Line 965
	ret	0
$LN8@ec_asn1_pk:
; Line 956
	push	0
	push	esi
	call	_EC_GROUP_set_asn1_flag
	add	esp, 8
; Line 964
	mov	eax, esi
	pop	esi
; Line 965
	ret	0
$LN6@ec_asn1_pk:
; Line 957
	cmp	ecx, 2
	je	SHORT $LN15@ec_asn1_pk
; Line 960
	push	960					; 000003c0H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	115					; 00000073H
	push	158					; 0000009eH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN15@ec_asn1_pk:
; Line 961
	xor	eax, eax
	pop	esi
; Line 965
	ret	0
_ec_asn1_pkparameters2group ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_asn1_group2parameters
_TEXT	SEGMENT
_point$1$ = -12						; size = 4
_len$1$ = -8						; size = 4
_form$1$ = -4						; size = 4
_group$ = 8						; size = 4
_param$ = 12						; size = 4
_ec_asn1_group2parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 544
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 549
	xor	ebp, ebp
; Line 553
	call	_BN_new
	mov	edi, eax
	test	edi, edi
	jne	SHORT $LN2@ec_asn1_gr
; Line 554
	push	554					; 0000022aH
$LN35@ec_asn1_gr:
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
	push	155					; 0000009bH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 555
	jmp	$LN27@ec_asn1_gr
$LN2@ec_asn1_gr:
; Line 558
	mov	eax, DWORD PTR _param$[esp+24]
	test	eax, eax
	jne	SHORT $LN3@ec_asn1_gr
; Line 257
	push	OFFSET ?local_it@?1??ECPARAMETERS_it@@9@9
	call	_ASN1_item_new
; Line 559
	mov	esi, eax
; Line 257
	add	esp, 4
; Line 559
	test	esi, esi
	jne	SHORT $LN4@ec_asn1_gr
; Line 560
	push	560					; 00000230H
; Line 561
	jmp	SHORT $LN35@ec_asn1_gr
$LN3@ec_asn1_gr:
; Line 564
	mov	esi, eax
$LN4@ec_asn1_gr:
; Line 570
	push	DWORD PTR [esi+4]
	mov	ebx, DWORD PTR _group$[esp+28]
	push	ebx
	mov	DWORD PTR [esi], 1
	call	_ec_asn1_group2fieldid
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@ec_asn1_gr
; Line 571
	push	571					; 0000023bH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 572
	jmp	$LN33@ec_asn1_gr
$LN6@ec_asn1_gr:
; Line 576
	push	DWORD PTR [esi+8]
	push	ebx
	call	_ec_asn1_group2curve
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@ec_asn1_gr
; Line 577
	push	577					; 00000241H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 578
	jmp	$LN33@ec_asn1_gr
$LN7@ec_asn1_gr:
; Line 582
	push	ebx
	call	_EC_GROUP_get0_generator
	add	esp, 4
	mov	DWORD PTR _point$1$[esp+28], eax
	test	eax, eax
	jne	SHORT $LN8@ec_asn1_gr
; Line 583
	push	583					; 00000247H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	113					; 00000071H
; Line 584
	jmp	$LN33@ec_asn1_gr
$LN8@ec_asn1_gr:
; Line 587
	push	ebx
	call	_EC_GROUP_get_point_conversion_form
; Line 589
	push	0
	push	0
	push	0
	push	eax
	push	DWORD PTR _point$1$[esp+48]
	mov	DWORD PTR _form$1$[esp+52], eax
	push	ebx
	call	_EC_POINT_point2oct
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _len$1$[esp+28], eax
; Line 590
	test	eax, eax
	jne	SHORT $LN9@ec_asn1_gr
; Line 591
	push	591					; 0000024fH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 592
	jmp	$LN33@ec_asn1_gr
$LN9@ec_asn1_gr:
; Line 594
	push	594					; 00000252H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	test	ebp, ebp
	jne	SHORT $LN10@ec_asn1_gr
; Line 595
	push	595					; 00000253H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
; Line 596
	jmp	$LN33@ec_asn1_gr
$LN10@ec_asn1_gr:
; Line 598
	push	0
	push	DWORD PTR _len$1$[esp+32]
	push	ebp
	push	DWORD PTR _form$1$[esp+40]
	push	DWORD PTR _point$1$[esp+44]
	push	ebx
	call	_EC_POINT_point2oct
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN11@ec_asn1_gr
; Line 599
	push	599					; 00000257H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 600
	jmp	$LN33@ec_asn1_gr
$LN11@ec_asn1_gr:
; Line 602
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN12@ec_asn1_gr
	call	_ASN1_OCTET_STRING_new
	mov	DWORD PTR [esi+12], eax
	test	eax, eax
	jne	SHORT $LN12@ec_asn1_gr
; Line 603
	push	603					; 0000025bH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
; Line 604
	jmp	$LN33@ec_asn1_gr
$LN12@ec_asn1_gr:
; Line 606
	push	DWORD PTR _len$1$[esp+28]
	push	ebp
	push	DWORD PTR [esi+12]
	call	_ASN1_OCTET_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN13@ec_asn1_gr
; Line 607
	push	607					; 0000025fH
; Line 608
	jmp	SHORT $LN34@ec_asn1_gr
$LN13@ec_asn1_gr:
; Line 612
	push	0
	push	edi
	push	ebx
	call	_EC_GROUP_get_order
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN14@ec_asn1_gr
; Line 613
	push	613					; 00000265H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 614
	jmp	SHORT $LN33@ec_asn1_gr
$LN14@ec_asn1_gr:
; Line 616
	push	DWORD PTR [esi+16]
	push	edi
	call	_BN_to_ASN1_INTEGER
	add	esp, 8
	mov	DWORD PTR [esi+16], eax
; Line 617
	test	eax, eax
	jne	SHORT $LN15@ec_asn1_gr
; Line 618
	push	618					; 0000026aH
; Line 619
	jmp	SHORT $LN34@ec_asn1_gr
$LN15@ec_asn1_gr:
; Line 623
	push	0
	push	edi
	push	ebx
	call	_EC_GROUP_get_cofactor
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN18@ec_asn1_gr
; Line 624
	push	DWORD PTR [esi+20]
	push	edi
	call	_BN_to_ASN1_INTEGER
	add	esp, 8
	mov	DWORD PTR [esi+20], eax
; Line 625
	test	eax, eax
	jne	SHORT $LN18@ec_asn1_gr
; Line 626
	push	626					; 00000272H
$LN34@ec_asn1_gr:
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	13					; 0000000dH
$LN33@ec_asn1_gr:
	push	155					; 0000009bH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 634
	cmp	DWORD PTR _param$[esp+24], 0
	jne	SHORT $LN27@ec_asn1_gr
; Line 257
	push	OFFSET ?local_it@?1??ECPARAMETERS_it@@9@9
	push	esi
	call	_ASN1_item_free
	add	esp, 8
$LN27@ec_asn1_gr:
; Line 636
	xor	esi, esi
$LN18@ec_asn1_gr:
; Line 638
	test	edi, edi
	je	SHORT $LN20@ec_asn1_gr
; Line 639
	push	edi
	call	_BN_free
	add	esp, 4
$LN20@ec_asn1_gr:
; Line 640
	test	ebp, ebp
	je	SHORT $LN32@ec_asn1_gr
; Line 641
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN32@ec_asn1_gr:
; Line 642
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 643
	add	esp, 12					; 0000000cH
	ret	0
_ec_asn1_group2parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_asn1_parameters2group
_TEXT	SEGMENT
_b$1$ = -16						; size = 4
_point$1$ = -12						; size = 4
_field_bits$1$ = -8					; size = 4
tv776 = -4						; size = 4
_tmp_long$1$ = -4					; size = 4
_penta$1$ = 8						; size = 4
_char_two$1$ = 8					; size = 4
_params$ = 8						; size = 4
_ec_asn1_parameters2group PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 691
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
; Line 698
	mov	ebx, DWORD PTR _params$[esp+16]
	xor	eax, eax
	push	ebp
	push	esi
	mov	DWORD PTR _b$1$[esp+28], eax
	xor	esi, esi
	mov	DWORD PTR _point$1$[esp+28], eax
	xor	ebp, ebp
	mov	eax, DWORD PTR [ebx+4]
	push	edi
	test	eax, eax
	je	$LN3@ec_asn1_pa
	cmp	DWORD PTR [eax], esi
	je	$LN3@ec_asn1_pa
	cmp	DWORD PTR [eax+4], esi
	je	$LN3@ec_asn1_pa
; Line 706
	mov	eax, DWORD PTR [ebx+8]
	test	eax, eax
	je	$LN5@ec_asn1_pa
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	$LN5@ec_asn1_pa
	mov	edx, DWORD PTR [ecx+8]
	test	edx, edx
	je	$LN5@ec_asn1_pa
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	$LN5@ec_asn1_pa
	cmp	DWORD PTR [eax+8], esi
	je	$LN5@ec_asn1_pa
; Line 711
	push	ebp
	push	DWORD PTR [ecx]
	push	edx
	call	_BN_bin2bn
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 712
	test	ebp, ebp
	jne	SHORT $LN6@ec_asn1_pa
; Line 713
	push	713					; 000002c9H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	3
; Line 714
	jmp	$LN65@ec_asn1_pa
$LN6@ec_asn1_pa:
; Line 716
	mov	eax, DWORD PTR [ebx+8]
	push	0
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	call	_BN_bin2bn
	mov	edi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _b$1$[esp+32], edi
; Line 717
	test	edi, edi
	jne	SHORT $LN7@ec_asn1_pa
; Line 718
	push	718					; 000002ceH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	3
; Line 719
	jmp	$LN65@ec_asn1_pa
$LN7@ec_asn1_pa:
; Line 723
	mov	eax, DWORD PTR [ebx+4]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	add	esp, 4
; Line 724
	cmp	eax, 407				; 00000197H
	jne	$LN8@ec_asn1_pa
; Line 734
	mov	eax, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _char_two$1$[esp+28], eax
; Line 736
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _field_bits$1$[esp+32], eax
; Line 737
	cmp	eax, 661				; 00000295H
	jle	SHORT $LN10@ec_asn1_pa
; Line 738
	push	738					; 000002e2H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	143					; 0000008fH
; Line 739
	jmp	$LN65@ec_asn1_pa
$LN10@ec_asn1_pa:
; Line 742
	call	_BN_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN11@ec_asn1_pa
; Line 743
	push	743					; 000002e7H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
; Line 744
	jmp	$LN65@ec_asn1_pa
$LN11@ec_asn1_pa:
; Line 748
	mov	eax, DWORD PTR _char_two$1$[esp+28]
	push	DWORD PTR [eax+4]
	call	_OBJ_obj2nid
	add	esp, 4
; Line 750
	cmp	eax, 682				; 000002aaH
	jne	SHORT $LN12@ec_asn1_pa
; Line 753
	mov	eax, DWORD PTR _char_two$1$[esp+28]
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	jne	SHORT $LN14@ec_asn1_pa
; Line 754
	push	754					; 000002f2H
; Line 755
	jmp	$LN66@ec_asn1_pa
$LN14@ec_asn1_pa:
; Line 758
	push	eax
	call	_ASN1_INTEGER_get
	mov	ecx, eax
	add	esp, 4
; Line 760
	mov	eax, DWORD PTR _char_two$1$[esp+28]
	mov	DWORD PTR _tmp_long$1$[esp+32], ecx
	mov	eax, DWORD PTR [eax]
	cmp	eax, ecx
	jle	SHORT $LN16@ec_asn1_pa
	test	ecx, ecx
	jle	SHORT $LN16@ec_asn1_pa
; Line 767
	push	eax
	push	esi
	call	_BN_set_bit
	add	esp, 8
	test	eax, eax
	je	$LN57@ec_asn1_pa
; Line 769
	push	DWORD PTR _tmp_long$1$[esp+32]
; Line 773
	jmp	$LN69@ec_asn1_pa
$LN16@ec_asn1_pa:
; Line 761
	push	762					; 000002faH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	137					; 00000089H
; Line 763
	jmp	$LN65@ec_asn1_pa
$LN12@ec_asn1_pa:
; Line 773
	cmp	eax, 683				; 000002abH
	jne	$LN20@ec_asn1_pa
; Line 776
	mov	ecx, DWORD PTR _char_two$1$[esp+28]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _penta$1$[esp+28], eax
; Line 777
	test	eax, eax
	jne	SHORT $LN22@ec_asn1_pa
; Line 778
	push	778					; 0000030aH
; Line 779
	jmp	$LN66@ec_asn1_pa
$LN22@ec_asn1_pa:
; Line 782
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv776[esp+32], edx
	cmp	edx, ecx
	jle	$LN24@ec_asn1_pa
	mov	edx, DWORD PTR [eax+4]
	cmp	ecx, edx
	jle	$LN24@ec_asn1_pa
	mov	eax, DWORD PTR [eax]
	cmp	edx, eax
	jle	$LN24@ec_asn1_pa
	test	eax, eax
	jle	SHORT $LN24@ec_asn1_pa
; Line 791
	push	DWORD PTR tv776[esp+32]
	push	esi
	call	_BN_set_bit
	add	esp, 8
	test	eax, eax
	je	$LN57@ec_asn1_pa
; Line 793
	mov	eax, DWORD PTR _penta$1$[esp+28]
	push	DWORD PTR [eax]
	push	esi
	call	_BN_set_bit
	add	esp, 8
	test	eax, eax
	je	$LN57@ec_asn1_pa
; Line 795
	mov	eax, DWORD PTR _penta$1$[esp+28]
	push	DWORD PTR [eax+4]
	push	esi
	call	_BN_set_bit
	add	esp, 8
	test	eax, eax
	je	$LN57@ec_asn1_pa
; Line 797
	mov	eax, DWORD PTR _penta$1$[esp+28]
	push	DWORD PTR [eax+8]
$LN69@ec_asn1_pa:
	push	esi
	call	_BN_set_bit
	add	esp, 8
	test	eax, eax
	je	$LN57@ec_asn1_pa
; Line 799
	push	0
	push	esi
	call	_BN_set_bit
	add	esp, 8
	test	eax, eax
	je	$LN57@ec_asn1_pa
; Line 811
	push	0
	push	edi
	push	ebp
	push	esi
	call	_EC_GROUP_new_curve_GF2m
; Line 812
	jmp	$LN70@ec_asn1_pa
$LN24@ec_asn1_pa:
; Line 785
	push	786					; 00000312H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	132					; 00000084H
; Line 787
	jmp	$LN65@ec_asn1_pa
$LN20@ec_asn1_pa:
; Line 801
	cmp	eax, 681				; 000002a9H
	jne	SHORT $LN30@ec_asn1_pa
; Line 802
	push	802					; 00000322H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	126					; 0000007eH
; Line 803
	jmp	$LN65@ec_asn1_pa
$LN30@ec_asn1_pa:
; Line 806
	push	806					; 00000326H
; Line 807
	jmp	$LN66@ec_asn1_pa
$LN8@ec_asn1_pa:
; Line 814
	cmp	eax, 406				; 00000196H
	jne	$LN32@ec_asn1_pa
; Line 817
	mov	eax, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	jne	SHORT $LN34@ec_asn1_pa
; Line 818
	push	818					; 00000332H
; Line 819
	jmp	$LN66@ec_asn1_pa
$LN34@ec_asn1_pa:
; Line 821
	push	0
	push	eax
	call	_ASN1_INTEGER_to_BN
	mov	esi, eax
	add	esp, 8
; Line 822
	test	esi, esi
	jne	SHORT $LN35@ec_asn1_pa
; Line 823
	push	823					; 00000337H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	13					; 0000000dH
; Line 824
	jmp	$LN65@ec_asn1_pa
$LN35@ec_asn1_pa:
; Line 827
	cmp	DWORD PTR [esi+12], 0
	jne	$LN37@ec_asn1_pa
	cmp	DWORD PTR [esi+4], 0
	je	$LN37@ec_asn1_pa
; Line 832
	push	esi
	call	_BN_num_bits
	add	esp, 4
	mov	DWORD PTR _field_bits$1$[esp+32], eax
; Line 833
	cmp	eax, 661				; 00000295H
	jle	SHORT $LN38@ec_asn1_pa
; Line 834
	push	834					; 00000342H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	143					; 0000008fH
; Line 835
	jmp	$LN65@ec_asn1_pa
$LN38@ec_asn1_pa:
; Line 839
	push	0
	push	edi
	push	ebp
	push	esi
	call	_EC_GROUP_new_curve_GFp
$LN70@ec_asn1_pa:
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 845
	test	edi, edi
	jne	SHORT $LN39@ec_asn1_pa
; Line 846
	push	846					; 0000034eH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 847
	jmp	$LN65@ec_asn1_pa
$LN39@ec_asn1_pa:
; Line 851
	mov	eax, DWORD PTR [ebx+8]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN40@ec_asn1_pa
; Line 852
	mov	eax, DWORD PTR [edi+60]
	test	eax, eax
	je	SHORT $LN41@ec_asn1_pa
; Line 853
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN41@ec_asn1_pa:
; Line 854
	mov	eax, DWORD PTR [ebx+8]
	push	854					; 00000356H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	mov	eax, DWORD PTR [eax+8]
	push	DWORD PTR [eax]
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+60], ecx
	test	ecx, ecx
	jne	SHORT $LN42@ec_asn1_pa
; Line 855
	push	855					; 00000357H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
; Line 856
	jmp	$LN71@ec_asn1_pa
$LN42@ec_asn1_pa:
; Line 858
	mov	eax, DWORD PTR [ebx+8]
	mov	eax, DWORD PTR [eax+8]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	push	ecx
	call	_memcpy
; Line 860
	mov	eax, DWORD PTR [ebx+8]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edi+64], eax
$LN40@ec_asn1_pa:
; Line 863
	cmp	DWORD PTR [ebx+16], 0
	je	$LN44@ec_asn1_pa
	mov	eax, DWORD PTR [ebx+12]
	test	eax, eax
	je	$LN44@ec_asn1_pa
	cmp	DWORD PTR [eax+8], 0
	je	$LN44@ec_asn1_pa
; Line 868
	push	edi
	call	_EC_POINT_new
	add	esp, 4
	mov	DWORD PTR _point$1$[esp+32], eax
	test	eax, eax
	je	$LN63@ec_asn1_pa
; Line 872
	mov	ecx, DWORD PTR [ebx+12]
	mov	ecx, DWORD PTR [ecx+8]
	movzx	ecx, BYTE PTR [ecx]
	and	ecx, -2					; fffffffeH
	push	ecx
	push	edi
	call	_EC_GROUP_set_point_conversion_form
; Line 876
	mov	eax, DWORD PTR [ebx+12]
	push	0
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	push	DWORD PTR _point$1$[esp+52]
	push	edi
	call	_EC_POINT_oct2point
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN46@ec_asn1_pa
; Line 878
	push	878					; 0000036eH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 879
	jmp	$LN71@ec_asn1_pa
$LN46@ec_asn1_pa:
; Line 883
	push	ebp
	push	DWORD PTR [ebx+16]
	call	_ASN1_INTEGER_to_BN
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	jne	SHORT $LN47@ec_asn1_pa
; Line 884
	push	884					; 00000374H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	13					; 0000000dH
; Line 885
	jmp	$LN71@ec_asn1_pa
$LN47@ec_asn1_pa:
; Line 887
	cmp	DWORD PTR [ebp+12], 0
	jne	$LN49@ec_asn1_pa
	cmp	DWORD PTR [ebp+4], 0
	je	$LN49@ec_asn1_pa
; Line 891
	push	ebp
	call	_BN_num_bits
	mov	ecx, DWORD PTR _field_bits$1$[esp+36]
	add	esp, 4
	inc	ecx
	cmp	eax, ecx
	jle	SHORT $LN50@ec_asn1_pa
; Line 892
	push	892					; 0000037cH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	122					; 0000007aH
; Line 893
	jmp	SHORT $LN71@ec_asn1_pa
$LN50@ec_asn1_pa:
; Line 897
	mov	ecx, DWORD PTR [ebx+20]
; Line 899
	mov	eax, DWORD PTR _b$1$[esp+32]
	push	eax
	test	ecx, ecx
	jne	SHORT $LN51@ec_asn1_pa
	call	_BN_free
	add	esp, 4
; Line 900
	xor	ebx, ebx
	mov	DWORD PTR _b$1$[esp+32], ebx
$LN54@ec_asn1_pa:
; Line 907
	push	ebx
	push	ebp
	push	DWORD PTR _point$1$[esp+40]
	push	edi
	call	_EC_GROUP_set_generator
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN56@ec_asn1_pa
; Line 908
	push	908					; 0000038cH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 909
	jmp	SHORT $LN71@ec_asn1_pa
$LN51@ec_asn1_pa:
; Line 902
	push	ecx
	call	_ASN1_INTEGER_to_BN
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _b$1$[esp+32], ebx
	test	ebx, ebx
	jne	SHORT $LN54@ec_asn1_pa
; Line 903
	push	903					; 00000387H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	13					; 0000000dH
; Line 904
	jmp	SHORT $LN71@ec_asn1_pa
$LN49@ec_asn1_pa:
; Line 888
	push	888					; 00000378H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	122					; 0000007aH
; Line 889
	jmp	SHORT $LN71@ec_asn1_pa
$LN44@ec_asn1_pa:
; Line 864
	push	864					; 00000360H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	115					; 00000073H
$LN71@ec_asn1_pa:
	push	157					; 0000009dH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN63@ec_asn1_pa:
; Line 916
	push	edi
	call	_EC_GROUP_clear_free
	add	esp, 4
	jmp	SHORT $LN57@ec_asn1_pa
$LN37@ec_asn1_pa:
; Line 828
	push	828					; 0000033cH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	103					; 00000067H
; Line 829
	jmp	SHORT $LN65@ec_asn1_pa
$LN32@ec_asn1_pa:
; Line 841
	push	841					; 00000349H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	103					; 00000067H
; Line 842
	jmp	SHORT $LN65@ec_asn1_pa
$LN5@ec_asn1_pa:
; Line 708
	push	708					; 000002c4H
; Line 709
	jmp	SHORT $LN66@ec_asn1_pa
$LN3@ec_asn1_pa:
; Line 700
	push	700					; 000002bcH
$LN66@ec_asn1_pa:
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	115					; 00000073H
$LN65@ec_asn1_pa:
	push	157					; 0000009dH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN57@ec_asn1_pa:
; Line 917
	mov	ebx, DWORD PTR _b$1$[esp+32]
	xor	edi, edi
$LN56@ec_asn1_pa:
; Line 920
	test	esi, esi
	je	SHORT $LN58@ec_asn1_pa
; Line 921
	push	esi
	call	_BN_free
	add	esp, 4
$LN58@ec_asn1_pa:
; Line 922
	test	ebp, ebp
	je	SHORT $LN59@ec_asn1_pa
; Line 923
	push	ebp
	call	_BN_free
	add	esp, 4
$LN59@ec_asn1_pa:
; Line 924
	test	ebx, ebx
	je	SHORT $LN60@ec_asn1_pa
; Line 925
	push	ebx
	call	_BN_free
	add	esp, 4
$LN60@ec_asn1_pa:
; Line 926
	mov	eax, DWORD PTR _point$1$[esp+32]
	test	eax, eax
	je	SHORT $LN64@ec_asn1_pa
; Line 927
	push	eax
	call	_EC_POINT_free
	add	esp, 4
$LN64@ec_asn1_pa:
; Line 928
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 929
	add	esp, 16					; 00000010H
	ret	0
_ec_asn1_parameters2group ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_asn1_group2curve
_TEXT	SEGMENT
_char_zero$ = -25					; size = 1
_buffer_1$1$ = -24					; size = 4
_buffer_2$1$ = -20					; size = 4
_a_buf$1$ = -16						; size = 4
_len_2$2$ = -12						; size = 4
_len_2$1$ = -8						; size = 4
_b_buf$1$ = -8						; size = 4
_ok$1$ = -4						; size = 4
_len_1$2$ = 8						; size = 4
_len_1$1$ = 8						; size = 4
_group$ = 8						; size = 4
_curve$ = 12						; size = 4
_ec_asn1_group2curve PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 432
	mov	eax, 28					; 0000001cH
	call	__chkstk
	push	ebx
; Line 440
	mov	ebx, DWORD PTR _group$[esp+28]
	xor	eax, eax
	push	esi
	push	edi
	xor	edi, edi
	mov	DWORD PTR _ok$1$[esp+40], 0
	mov	DWORD PTR _buffer_1$1$[esp+40], eax
	mov	DWORD PTR _buffer_2$1$[esp+40], eax
	mov	BYTE PTR _char_zero$[esp+40], al
	test	ebx, ebx
	je	$LN3@ec_asn1_gr
	mov	esi, DWORD PTR _curve$[esp+36]
	test	esi, esi
	je	$LN3@ec_asn1_gr
	cmp	DWORD PTR [esi], eax
	je	$LN3@ec_asn1_gr
	cmp	DWORD PTR [esi+4], eax
	je	$LN3@ec_asn1_gr
; Line 443
	push	ebp
	call	_BN_new
	mov	ebp, eax
	test	ebp, ebp
	je	$LN5@ec_asn1_gr
	call	_BN_new
	mov	edi, eax
	test	edi, edi
	je	$LN5@ec_asn1_gr
; Line 448
	push	ebx
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	add	esp, 8
; Line 452
	push	0
	push	edi
	push	ebp
	push	0
	push	ebx
	cmp	eax, 406				; 00000196H
	jne	SHORT $LN6@ec_asn1_gr
	call	_EC_GROUP_get_curve_GFp
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN9@ec_asn1_gr
; Line 453
	push	453					; 000001c5H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 454
	jmp	$LN31@ec_asn1_gr
$LN6@ec_asn1_gr:
; Line 460
	call	_EC_GROUP_get_curve_GF2m
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN9@ec_asn1_gr
; Line 461
	push	461					; 000001cdH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 462
	jmp	$LN31@ec_asn1_gr
$LN9@ec_asn1_gr:
; Line 466
	push	ebp
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
; Line 467
	push	edi
	mov	DWORD PTR _len_1$1$[esp+48], eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 8
	cdq
	and	edx, 7
	lea	ecx, DWORD PTR [edx+eax]
; Line 469
	mov	eax, DWORD PTR _len_1$1$[esp+40]
	sar	ecx, 3
	mov	DWORD PTR _len_2$1$[esp+44], ecx
	test	eax, eax
	jne	SHORT $LN10@ec_asn1_gr
; Line 471
	lea	eax, DWORD PTR _char_zero$[esp+44]
; Line 472
	mov	DWORD PTR _len_1$2$[esp+40], 1
; Line 473
	jmp	SHORT $LN32@ec_asn1_gr
$LN10@ec_asn1_gr:
; Line 474
	push	474					; 000001daH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buffer_1$1$[esp+44], eax
	test	eax, eax
	jne	SHORT $LN12@ec_asn1_gr
; Line 475
	push	475					; 000001dbH
; Line 476
	jmp	$LN33@ec_asn1_gr
$LN12@ec_asn1_gr:
; Line 478
	push	eax
	push	ebp
	call	_BN_bn2bin
	mov	ecx, eax
	add	esp, 8
	mov	DWORD PTR _len_1$2$[esp+40], ecx
	test	ecx, ecx
	jne	SHORT $LN13@ec_asn1_gr
; Line 479
	push	479					; 000001dfH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	3
; Line 480
	jmp	$LN34@ec_asn1_gr
$LN13@ec_asn1_gr:
; Line 482
	mov	eax, DWORD PTR _buffer_1$1$[esp+44]
	mov	ecx, DWORD PTR _len_2$1$[esp+44]
$LN32@ec_asn1_gr:
	mov	DWORD PTR _a_buf$1$[esp+44], eax
; Line 485
	test	ecx, ecx
	jne	SHORT $LN14@ec_asn1_gr
; Line 487
	lea	eax, DWORD PTR _char_zero$[esp+44]
; Line 488
	mov	DWORD PTR _len_2$2$[esp+44], 1
; Line 489
	jmp	SHORT $LN35@ec_asn1_gr
$LN14@ec_asn1_gr:
; Line 490
	push	490					; 000001eaH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	ecx
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buffer_2$1$[esp+44], eax
	test	eax, eax
	jne	SHORT $LN16@ec_asn1_gr
; Line 491
	push	491					; 000001ebH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
; Line 492
	jmp	$LN34@ec_asn1_gr
$LN16@ec_asn1_gr:
; Line 494
	push	eax
	push	edi
	call	_BN_bn2bin
	add	esp, 8
	mov	DWORD PTR _len_2$2$[esp+44], eax
	test	eax, eax
	jne	SHORT $LN17@ec_asn1_gr
; Line 495
	push	495					; 000001efH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	3
; Line 496
	jmp	$LN34@ec_asn1_gr
$LN17@ec_asn1_gr:
; Line 498
	mov	eax, DWORD PTR _buffer_2$1$[esp+44]
$LN35@ec_asn1_gr:
; Line 502
	push	DWORD PTR _len_1$2$[esp+40]
	mov	DWORD PTR _b_buf$1$[esp+48], eax
	push	DWORD PTR _a_buf$1$[esp+48]
	push	DWORD PTR [esi]
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN19@ec_asn1_gr
	push	DWORD PTR _len_2$2$[esp+44]
	push	DWORD PTR _b_buf$1$[esp+48]
	push	DWORD PTR [esi+4]
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN19@ec_asn1_gr
; Line 509
	cmp	DWORD PTR [ebx+60], 0
	je	SHORT $LN20@ec_asn1_gr
; Line 510
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN23@ec_asn1_gr
; Line 511
	call	_ASN1_BIT_STRING_new
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	jne	SHORT $LN23@ec_asn1_gr
; Line 512
	push	512					; 00000200H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
; Line 513
	jmp	SHORT $LN34@ec_asn1_gr
$LN23@ec_asn1_gr:
; Line 515
	mov	eax, DWORD PTR [esi+8]
	and	DWORD PTR [eax+12], -16			; fffffff0H
; Line 516
	mov	eax, DWORD PTR [esi+8]
	or	DWORD PTR [eax+12], 8
; Line 517
	push	DWORD PTR [ebx+64]
	push	DWORD PTR [ebx+60]
	push	DWORD PTR [esi+8]
	call	_ASN1_BIT_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN25@ec_asn1_gr
; Line 519
	push	519					; 00000207H
; Line 520
	jmp	SHORT $LN36@ec_asn1_gr
$LN20@ec_asn1_gr:
; Line 523
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN25@ec_asn1_gr
; Line 524
	push	eax
	call	_ASN1_BIT_STRING_free
	add	esp, 4
; Line 525
	mov	DWORD PTR [esi+8], 0
$LN25@ec_asn1_gr:
; Line 529
	mov	DWORD PTR _ok$1$[esp+44], 1
	jmp	SHORT $err$38
$LN19@ec_asn1_gr:
; Line 504
	push	504					; 000001f8H
$LN36@ec_asn1_gr:
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	13					; 0000000dH
$LN34@ec_asn1_gr:
	push	153					; 00000099H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$38:
; Line 531
	mov	eax, DWORD PTR _buffer_1$1$[esp+44]
	test	eax, eax
	je	SHORT $LN26@ec_asn1_gr
; Line 532
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN26@ec_asn1_gr:
; Line 533
	mov	eax, DWORD PTR _buffer_2$1$[esp+44]
	test	eax, eax
	je	SHORT $LN27@ec_asn1_gr
; Line 534
	push	eax
	call	_CRYPTO_free
	add	esp, 4
	jmp	SHORT $LN27@ec_asn1_gr
$LN5@ec_asn1_gr:
; Line 444
	push	444					; 000001bcH
$LN33@ec_asn1_gr:
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
$LN31@ec_asn1_gr:
	push	153					; 00000099H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN27@ec_asn1_gr:
; Line 535
	test	ebp, ebp
	je	SHORT $LN28@ec_asn1_gr
; Line 536
	push	ebp
	call	_BN_free
	add	esp, 4
$LN28@ec_asn1_gr:
; Line 537
	pop	ebp
	test	edi, edi
	je	SHORT $LN29@ec_asn1_gr
; Line 538
	push	edi
	call	_BN_free
	add	esp, 4
$LN29@ec_asn1_gr:
; Line 539
	mov	eax, DWORD PTR _ok$1$[esp+40]
	pop	edi
	pop	esi
	pop	ebx
; Line 540
	add	esp, 28					; 0000001cH
	ret	0
$LN3@ec_asn1_gr:
	pop	edi
	pop	esi
; Line 441
	xor	eax, eax
	pop	ebx
; Line 540
	add	esp, 28					; 0000001cH
	ret	0
_ec_asn1_group2curve ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_asn1_group2fieldid
_TEXT	SEGMENT
_k2$1 = -8						; size = 4
_k3$2 = -4						; size = 4
_k1$3 = 8						; size = 4
_k$4 = 8						; size = 4
_group$ = 8						; size = 4
_field$ = 12						; size = 4
_ec_asn1_group2fieldid PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 312
	mov	eax, 8
	call	__chkstk
	push	ebx
; Line 316
	mov	ebx, DWORD PTR _group$[esp+8]
	push	ebp
	push	edi
	xor	edi, edi
	test	ebx, ebx
	je	$LN3@ec_asn1_gr
	mov	ebp, DWORD PTR _field$[esp+16]
	test	ebp, ebp
	je	$LN3@ec_asn1_gr
; Line 320
	mov	eax, DWORD PTR [ebp]
	test	eax, eax
	je	SHORT $LN4@ec_asn1_gr
; Line 321
	push	eax
	call	_ASN1_OBJECT_free
	add	esp, 4
$LN4@ec_asn1_gr:
; Line 322
	mov	eax, DWORD PTR [ebp+4]
	test	eax, eax
	je	SHORT $LN5@ec_asn1_gr
; Line 323
	push	eax
	call	_ASN1_TYPE_free
	add	esp, 4
$LN5@ec_asn1_gr:
; Line 325
	push	esi
	push	ebx
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	mov	esi, eax
; Line 327
	push	esi
	call	_OBJ_nid2obj
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp], eax
	test	eax, eax
	jne	SHORT $LN6@ec_asn1_gr
; Line 328
	push	328					; 00000148H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	8
; Line 329
	jmp	SHORT $LN41@ec_asn1_gr
$LN6@ec_asn1_gr:
; Line 332
	cmp	esi, 406				; 00000196H
	jne	$LN7@ec_asn1_gr
; Line 333
	call	_BN_new
	mov	edi, eax
	test	edi, edi
	jne	SHORT $LN9@ec_asn1_gr
; Line 334
	push	334					; 0000014eH
$LN42@ec_asn1_gr:
; Line 404
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
$LN41@ec_asn1_gr:
; Line 334
	push	154					; 0000009aH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN36@ec_asn1_gr:
	xor	esi, esi
$LN25@ec_asn1_gr:
; Line 428
	mov	eax, esi
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 429
	add	esp, 8
	ret	0
$LN9@ec_asn1_gr:
; Line 338
	push	0
	push	0
	push	0
	push	edi
	push	ebx
	call	_EC_GROUP_get_curve_GFp
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN10@ec_asn1_gr
; Line 339
	push	339					; 00000153H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
$LN37@ec_asn1_gr:
	push	154					; 0000009aH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 340
	xor	esi, esi
	jmp	$err$44
$LN10@ec_asn1_gr:
; Line 343
	push	0
	push	edi
	call	_BN_to_ASN1_INTEGER
	add	esp, 8
	mov	DWORD PTR [ebp+4], eax
; Line 344
	test	eax, eax
	jne	$LN24@ec_asn1_gr
; Line 345
	push	345					; 00000159H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	13					; 0000000dH
; Line 346
	jmp	SHORT $LN37@ec_asn1_gr
$LN7@ec_asn1_gr:
; Line 227
	push	OFFSET ?local_it@?1??X9_62_CHARACTERISTIC_TWO_it@@9@9
	call	_ASN1_item_new
	mov	esi, eax
	add	esp, 4
; Line 359
	mov	DWORD PTR [ebp+4], esi
; Line 362
	test	esi, esi
	jne	SHORT $LN12@ec_asn1_gr
; Line 363
	push	363					; 0000016bH
; Line 364
	jmp	$LN42@ec_asn1_gr
$LN12@ec_asn1_gr:
; Line 367
	push	ebx
	call	_EC_GROUP_get_degree
; Line 369
	push	ebx
	mov	DWORD PTR [esi], eax
	call	_EC_GROUP_get_basis_type
	mov	ebp, eax
	add	esp, 8
; Line 371
	test	ebp, ebp
	jne	SHORT $LN13@ec_asn1_gr
; Line 372
	push	372					; 00000174H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 373
	jmp	$LN41@ec_asn1_gr
$LN13@ec_asn1_gr:
; Line 376
	push	ebp
	call	_OBJ_nid2obj
	add	esp, 4
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	jne	SHORT $LN14@ec_asn1_gr
; Line 377
	push	377					; 00000179H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	8
	jmp	$LN41@ec_asn1_gr
$LN14@ec_asn1_gr:
; Line 381
	cmp	ebp, 682				; 000002aaH
	jne	SHORT $LN15@ec_asn1_gr
; Line 384
	lea	eax, DWORD PTR _k$4[esp+20]
	push	eax
	push	ebx
	call	_EC_GROUP_get_trinomial_basis
	add	esp, 8
	test	eax, eax
	je	$LN36@ec_asn1_gr
; Line 387
	call	_ASN1_INTEGER_new
	mov	DWORD PTR [esi+8], eax
; Line 388
	test	eax, eax
	jne	SHORT $LN18@ec_asn1_gr
; Line 389
	push	389					; 00000185H
; Line 390
	jmp	$LN42@ec_asn1_gr
$LN18@ec_asn1_gr:
; Line 392
	push	DWORD PTR _k$4[esp+20]
	push	eax
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN24@ec_asn1_gr
; Line 393
	push	393					; 00000189H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	13					; 0000000dH
; Line 394
	jmp	$LN41@ec_asn1_gr
$LN15@ec_asn1_gr:
; Line 396
	cmp	ebp, 683				; 000002abH
	jne	SHORT $LN20@ec_asn1_gr
; Line 399
	lea	eax, DWORD PTR _k3$2[esp+24]
	push	eax
	lea	eax, DWORD PTR _k2$1[esp+28]
	push	eax
	lea	eax, DWORD PTR _k1$3[esp+28]
	push	eax
	push	ebx
	call	_EC_GROUP_get_pentanomial_basis
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN36@ec_asn1_gr
; Line 210
	push	OFFSET ?local_it@?1??X9_62_PENTANOMIAL_it@@9@9
	call	_ASN1_item_new
	mov	ecx, eax
	add	esp, 4
; Line 402
	mov	DWORD PTR [esi+8], ecx
; Line 403
	test	ecx, ecx
	jne	SHORT $LN23@ec_asn1_gr
; Line 404
	push	404					; 00000194H
; Line 405
	jmp	$LN42@ec_asn1_gr
$LN23@ec_asn1_gr:
; Line 409
	mov	eax, DWORD PTR _k1$3[esp+20]
	mov	DWORD PTR [ecx], eax
; Line 410
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR _k2$1[esp+24]
	mov	DWORD PTR [ecx+4], eax
; Line 411
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR _k3$2[esp+24]
	mov	DWORD PTR [ecx+8], eax
$LN24@ec_asn1_gr:
; Line 424
	mov	esi, 1
$err$44:
; Line 426
	test	edi, edi
	je	$LN25@ec_asn1_gr
; Line 427
	push	edi
	call	_BN_free
	add	esp, 4
; Line 428
	mov	eax, esi
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 429
	add	esp, 8
	ret	0
$LN20@ec_asn1_gr:
; Line 415
	call	_ASN1_NULL_new
	mov	DWORD PTR [esi+8], eax
; Line 416
	test	eax, eax
	jne	SHORT $LN24@ec_asn1_gr
; Line 417
	push	417					; 000001a1H
; Line 418
	jmp	$LN42@ec_asn1_gr
$LN3@ec_asn1_gr:
	pop	edi
	pop	ebp
; Line 317
	xor	eax, eax
	pop	ebx
; Line 429
	add	esp, 8
	ret	0
_ec_asn1_group2fieldid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_EC_PRIVATEKEY
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_EC_PRIVATEKEY PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _a$[esp+4]
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
	ret	0
_i2d_EC_PRIVATEKEY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_EC_PRIVATEKEY
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_EC_PRIVATEKEY PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _in$[esp+4]
	push	DWORD PTR _a$[esp+8]
	call	_ASN1_item_d2i
	add	esp, 16					; 00000010H
	ret	0
_d2i_EC_PRIVATEKEY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_PRIVATEKEY_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_EC_PRIVATEKEY_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_EC_PRIVATEKEY_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_PRIVATEKEY_new
_TEXT	SEGMENT
_EC_PRIVATEKEY_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_EC_PRIVATEKEY_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_PRIVATEKEY_it
_TEXT	SEGMENT
_EC_PRIVATEKEY_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 274
	mov	eax, OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	ret	0
_EC_PRIVATEKEY_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_ECPKPARAMETERS
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_ECPKPARAMETERS PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _a$[esp+4]
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
	ret	0
_i2d_ECPKPARAMETERS ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_ECPKPARAMETERS
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_ECPKPARAMETERS PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _in$[esp+4]
	push	DWORD PTR _a$[esp+8]
	call	_ASN1_item_d2i
	add	esp, 16					; 00000010H
	ret	0
_d2i_ECPKPARAMETERS ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECPKPARAMETERS_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_ECPKPARAMETERS_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_ECPKPARAMETERS_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECPKPARAMETERS_new
_TEXT	SEGMENT
_ECPKPARAMETERS_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_ECPKPARAMETERS_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECPKPARAMETERS_it
_TEXT	SEGMENT
_ECPKPARAMETERS_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 263
	mov	eax, OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	ret	0
_ECPKPARAMETERS_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECPARAMETERS_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_ECPARAMETERS_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 257
	push	OFFSET ?local_it@?1??ECPARAMETERS_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_ECPARAMETERS_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECPARAMETERS_new
_TEXT	SEGMENT
_ECPARAMETERS_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 257
	push	OFFSET ?local_it@?1??ECPARAMETERS_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_ECPARAMETERS_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECPARAMETERS_it
_TEXT	SEGMENT
_ECPARAMETERS_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 254
	mov	eax, OFFSET ?local_it@?1??ECPARAMETERS_it@@9@9
	ret	0
_ECPARAMETERS_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_CURVE_it
_TEXT	SEGMENT
_X9_62_CURVE_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 245
	mov	eax, OFFSET ?local_it@?1??X9_62_CURVE_it@@9@9
	ret	0
_X9_62_CURVE_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_FIELDID_it
_TEXT	SEGMENT
_X9_62_FIELDID_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 239
	mov	eax, OFFSET ?local_it@?1??X9_62_FIELDID_it@@9@9
	ret	0
_X9_62_FIELDID_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_FIELDID_adb
_TEXT	SEGMENT
_X9_62_FIELDID_adb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 234
	mov	eax, OFFSET ?internal_adb@?1??X9_62_FIELDID_adb@@9@9
	ret	0
_X9_62_FIELDID_adb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_CHARACTERISTIC_TWO_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X9_62_CHARACTERISTIC_TWO_free PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 227
	push	OFFSET ?local_it@?1??X9_62_CHARACTERISTIC_TWO_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_X9_62_CHARACTERISTIC_TWO_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_CHARACTERISTIC_TWO_new
_TEXT	SEGMENT
_X9_62_CHARACTERISTIC_TWO_new PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 227
	push	OFFSET ?local_it@?1??X9_62_CHARACTERISTIC_TWO_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_X9_62_CHARACTERISTIC_TWO_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_CHARACTERISTIC_TWO_it
_TEXT	SEGMENT
_X9_62_CHARACTERISTIC_TWO_it PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 224
	mov	eax, OFFSET ?local_it@?1??X9_62_CHARACTERISTIC_TWO_it@@9@9
	ret	0
_X9_62_CHARACTERISTIC_TWO_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_CHARACTERISTIC_TWO_adb
_TEXT	SEGMENT
_X9_62_CHARACTERISTIC_TWO_adb PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 218
	mov	eax, OFFSET ?internal_adb@?1??X9_62_CHARACTERISTIC_TWO_adb@@9@9
	ret	0
_X9_62_CHARACTERISTIC_TWO_adb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_PENTANOMIAL_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X9_62_PENTANOMIAL_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 210
	push	OFFSET ?local_it@?1??X9_62_PENTANOMIAL_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_X9_62_PENTANOMIAL_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_PENTANOMIAL_new
_TEXT	SEGMENT
_X9_62_PENTANOMIAL_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 210
	push	OFFSET ?local_it@?1??X9_62_PENTANOMIAL_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_X9_62_PENTANOMIAL_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X9_62_PENTANOMIAL_it
_TEXT	SEGMENT
_X9_62_PENTANOMIAL_it PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 207
	mov	eax, OFFSET ?local_it@?1??X9_62_PENTANOMIAL_it@@9@9
	ret	0
_X9_62_PENTANOMIAL_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2o_ECPublicKey
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2o_ECPublicKey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 1291
	push	ebx
; Line 1295
	mov	ebx, DWORD PTR _a$[esp]
	push	ebp
	xor	ebp, ebp
	test	ebx, ebx
	jne	SHORT $LN2@i2o_ECPubl
; Line 1296
	push	1296					; 00000510H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	67					; 00000043H
	push	151					; 00000097H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1297
	xor	eax, eax
	pop	ebp
	pop	ebx
; Line 1326
	ret	0
$LN2@i2o_ECPubl:
	push	esi
	push	edi
; Line 1300
	push	0
	push	0
	push	0
	push	DWORD PTR [ebx+20]
	push	DWORD PTR [ebx+8]
	push	DWORD PTR [ebx+4]
	call	_EC_POINT_point2oct
; Line 1303
	mov	esi, DWORD PTR _out$[esp+36]
	add	esp, 24					; 00000018H
	mov	edi, eax
	test	esi, esi
	je	$LN11@i2o_ECPubl
	test	edi, edi
	je	$LN11@i2o_ECPubl
; Line 1307
	cmp	DWORD PTR [esi], ebp
	jne	SHORT $LN5@i2o_ECPubl
; Line 1308
	push	1308					; 0000051cH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
	test	eax, eax
	jne	SHORT $LN6@i2o_ECPubl
; Line 1309
	push	1309					; 0000051dH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
	push	151					; 00000097H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1310
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1326
	ret	0
$LN6@i2o_ECPubl:
; Line 1312
	mov	ebp, 1
$LN5@i2o_ECPubl:
; Line 1314
	push	0
	push	edi
	push	DWORD PTR [esi]
	push	DWORD PTR [ebx+20]
	push	DWORD PTR [ebx+8]
	push	DWORD PTR [ebx+4]
	call	_EC_POINT_point2oct
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN7@i2o_ECPubl
; Line 1316
	push	1316					; 00000524H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
	push	151					; 00000097H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1317
	test	ebp, ebp
	je	SHORT $LN8@i2o_ECPubl
; Line 1318
	push	DWORD PTR [esi]
	call	_CRYPTO_free
	add	esp, 4
; Line 1319
	mov	DWORD PTR [esi], 0
$LN8@i2o_ECPubl:
; Line 1321
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1326
	ret	0
$LN7@i2o_ECPubl:
; Line 1323
	test	ebp, ebp
	jne	SHORT $LN9@i2o_ECPubl
; Line 1324
	add	DWORD PTR [esi], edi
$LN9@i2o_ECPubl:
; Line 1325
	mov	eax, edi
$LN11@i2o_ECPubl:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1326
	ret	0
_i2o_ECPublicKey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _o2i_ECPublicKey
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_o2i_ECPublicKey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 1264
	push	esi
; Line 1267
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	$LN3@o2i_ECPubl
	mov	esi, DWORD PTR [esi]
	test	esi, esi
	je	$LN3@o2i_ECPubl
	cmp	DWORD PTR [esi+4], 0
	je	$LN3@o2i_ECPubl
; Line 1275
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN4@o2i_ECPubl
	push	DWORD PTR [esi+4]
	call	_EC_POINT_new
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	jne	SHORT $LN4@o2i_ECPubl
; Line 1277
	push	1277					; 000004fdH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
	push	152					; 00000098H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1278
	xor	eax, eax
	pop	esi
; Line 1288
	ret	0
$LN4@o2i_ECPubl:
	push	ebx
; Line 1280
	mov	ebx, DWORD PTR _len$[esp+4]
	push	edi
	mov	edi, DWORD PTR _in$[esp+8]
	push	0
	push	ebx
	push	DWORD PTR [edi]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+4]
	call	_EC_POINT_oct2point
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN5@o2i_ECPubl
; Line 1281
	push	1281					; 00000501H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
	push	152					; 00000098H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1282
	xor	eax, eax
	pop	edi
	pop	ebx
	pop	esi
; Line 1288
	ret	0
$LN5@o2i_ECPubl:
; Line 1285
	mov	ecx, DWORD PTR [edi]
; Line 1287
	mov	eax, esi
	movzx	ecx, BYTE PTR [ecx]
	and	ecx, -2					; fffffffeH
	mov	DWORD PTR [esi+20], ecx
	add	DWORD PTR [edi], ebx
	pop	edi
	pop	ebx
	pop	esi
; Line 1288
	ret	0
$LN3@o2i_ECPubl:
; Line 1271
	push	1271					; 000004f7H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	67					; 00000043H
; Line 1277
	push	152					; 00000098H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1278
	xor	eax, eax
	pop	esi
; Line 1288
	ret	0
_o2i_ECPublicKey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_ECParameters
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_ECParameters PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 1226
	mov	eax, DWORD PTR _a$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@i2d_ECPara
; Line 1227
	push	1227					; 000004cbH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	67					; 00000043H
	push	190					; 000000beH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1228
	xor	eax, eax
; Line 1231
	ret	0
$LN2@i2d_ECPara:
; Line 1230
	push	DWORD PTR _out$[esp-4]
	push	DWORD PTR [eax+4]
	call	_i2d_ECPKParameters
	add	esp, 8
; Line 1231
	ret	0
_i2d_ECParameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_ECParameters
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_ECParameters PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 1234
	push	ebx
; Line 1237
	mov	ebx, DWORD PTR _in$[esp]
	test	ebx, ebx
	je	$LN3@d2i_ECPara
	cmp	DWORD PTR [ebx], 0
	je	$LN3@d2i_ECPara
; Line 1242
	push	esi
	push	edi
	mov	edi, DWORD PTR _a$[esp+8]
	test	edi, edi
	je	SHORT $LN6@d2i_ECPara
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	jne	SHORT $LN7@d2i_ECPara
$LN6@d2i_ECPara:
; Line 1243
	call	_EC_KEY_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN7@d2i_ECPara
; Line 1244
	push	1244					; 000004dcH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
	push	144					; 00000090H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN9@d2i_ECPara:
; Line 1245
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 1261
	ret	0
$LN7@d2i_ECPara:
; Line 1250
	push	DWORD PTR _len$[esp+8]
	lea	eax, DWORD PTR [esi+4]
	push	ebx
	push	eax
	call	_d2i_ECPKParameters
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@d2i_ECPara
; Line 1251
	push	1251					; 000004e3H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
	push	144					; 00000090H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1252
	test	edi, edi
	je	SHORT $LN10@d2i_ECPara
	cmp	DWORD PTR [edi], esi
	je	SHORT $LN9@d2i_ECPara
$LN10@d2i_ECPara:
; Line 1253
	push	esi
	call	_EC_KEY_free
	add	esp, 4
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1261
	ret	0
$LN8@d2i_ECPara:
; Line 1257
	test	edi, edi
	je	SHORT $LN11@d2i_ECPara
; Line 1258
	mov	DWORD PTR [edi], esi
$LN11@d2i_ECPara:
	pop	edi
; Line 1260
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 1261
	ret	0
$LN3@d2i_ECPara:
; Line 1238
	push	1238					; 000004d6H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	67					; 00000043H
	push	144					; 00000090H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1239
	xor	eax, eax
	pop	ebx
; Line 1261
	ret	0
_d2i_ECParameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_ECPrivateKey
_TEXT	SEGMENT
_ret$1$ = -8						; size = 4
_ok$1$ = -4						; size = 4
tv379 = 8						; size = 4
_tmp_len$1$ = 8						; size = 4
_bn_len$1$ = 8						; size = 4
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_ECPrivateKey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 1118
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	esi
; Line 1124
	mov	esi, DWORD PTR _a$[esp+12]
	xor	ebx, ebx
	mov	DWORD PTR _ret$1$[esp+16], ebx
	mov	DWORD PTR _ok$1$[esp+16], ebx
	push	edi
	test	esi, esi
	je	$LN3@i2d_ECPriv
	cmp	DWORD PTR [esi+4], ebx
	je	$LN3@i2d_ECPriv
	cmp	DWORD PTR [esi+12], ebx
	je	$LN3@i2d_ECPriv
	test	BYTE PTR [esi+16], 2
	jne	SHORT $LN2@i2d_ECPriv
	cmp	DWORD PTR [esi+8], ebx
	je	$LN3@i2d_ECPriv
$LN2@i2d_ECPriv:
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	call	_ASN1_item_new
; Line 1130
	mov	edi, eax
; Line 278
	add	esp, 4
; Line 1130
	test	edi, edi
	jne	SHORT $LN4@i2d_ECPriv
; Line 1131
	push	1131					; 0000046bH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
; Line 1132
	jmp	$LN31@i2d_ECPriv
$LN4@i2d_ECPriv:
; Line 1135
	mov	eax, DWORD PTR [esi]
	push	ebp
	mov	DWORD PTR [edi], eax
; Line 1137
	push	DWORD PTR [esi+12]
	call	_BN_num_bits
; Line 1141
	push	DWORD PTR [esi+4]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _bn_len$1$[esp+28], eax
	call	_EC_GROUP_get_degree
	add	eax, 7
	add	esp, 8
	cdq
	and	edx, 7
	lea	ebp, DWORD PTR [edx+eax]
	sar	ebp, 3
; Line 1143
	cmp	DWORD PTR _bn_len$1$[esp+20], ebp
	jbe	SHORT $LN5@i2d_ECPriv
; Line 1144
	push	1144					; 00000478H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	100					; 00000064H
	push	192					; 000000c0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	push	edi
	call	_ASN1_item_free
	add	esp, 8
; Line 1221
	xor	eax, eax
	cmp	DWORD PTR _ok$1$[esp+24], eax
	cmovne	eax, ebx
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 1222
	add	esp, 8
	ret	0
$LN5@i2d_ECPriv:
; Line 1148
	push	1148					; 0000047cH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	ebp
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 1149
	test	ebx, ebx
	jne	SHORT $LN6@i2d_ECPriv
; Line 1150
	push	1150					; 0000047eH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
	push	192					; 000000c0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	push	edi
	call	_ASN1_item_free
	add	esp, 8
; Line 1221
	xor	eax, eax
	cmp	DWORD PTR _ok$1$[esp+24], eax
	cmovne	eax, ebx
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 1222
	add	esp, 8
	ret	0
$LN6@i2d_ECPriv:
; Line 1154
	mov	eax, ebp
	sub	eax, DWORD PTR _bn_len$1$[esp+20]
	mov	DWORD PTR tv379[esp+20], eax
	add	eax, ebx
	push	eax
	push	DWORD PTR [esi+12]
	call	_BN_bn2bin
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@i2d_ECPriv
; Line 1155
	push	1155					; 00000483H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	3
	push	192					; 000000c0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1156
	jmp	$err$37
$LN7@i2d_ECPriv:
; Line 1159
	mov	eax, DWORD PTR tv379[esp+20]
	test	eax, eax
	je	SHORT $LN8@i2d_ECPriv
; Line 1160
	push	eax
	push	0
	push	ebx
	call	_memset
	add	esp, 12					; 0000000cH
$LN8@i2d_ECPriv:
; Line 1163
	push	ebp
	push	ebx
	push	DWORD PTR [edi+4]
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@i2d_ECPriv
; Line 1164
	push	1164					; 0000048cH
$LN32@i2d_ECPriv:
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	13					; 0000000dH
	push	192					; 000000c0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1165
	jmp	$err$37
$LN9@i2d_ECPriv:
; Line 1168
	test	BYTE PTR [esi+16], 1
	jne	SHORT $LN11@i2d_ECPriv
; Line 1171
	push	DWORD PTR [edi+8]
	push	DWORD PTR [esi+4]
	call	_ec_asn1_group2pkparameters
	add	esp, 8
	mov	DWORD PTR [edi+8], eax
	test	eax, eax
	jne	SHORT $LN11@i2d_ECPriv
; Line 1172
	push	1172					; 00000494H
$LN34@i2d_ECPriv:
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
	push	192					; 000000c0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1173
	jmp	$err$37
$LN11@i2d_ECPriv:
; Line 1177
	test	BYTE PTR [esi+16], 2
	jne	$LN17@i2d_ECPriv
; Line 1178
	push	3
	call	_ASN1_STRING_type_new
	add	esp, 4
	mov	DWORD PTR [edi+12], eax
; Line 1179
	test	eax, eax
	jne	SHORT $LN13@i2d_ECPriv
; Line 1180
	push	1180					; 0000049cH
$LN35@i2d_ECPriv:
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
	push	192					; 000000c0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1181
	jmp	$err$37
$LN13@i2d_ECPriv:
; Line 1184
	push	0
	push	0
	push	0
	push	DWORD PTR [esi+20]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+4]
	call	_EC_POINT_point2oct
	add	esp, 24					; 00000018H
	mov	DWORD PTR _tmp_len$1$[esp+20], eax
; Line 1187
	cmp	eax, ebp
	jbe	SHORT $LN14@i2d_ECPriv
; Line 1188
	push	1188					; 000004a4H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	eax
	push	ebx
	call	_CRYPTO_realloc
	add	esp, 16					; 00000010H
; Line 1189
	test	eax, eax
	jne	SHORT $LN15@i2d_ECPriv
; Line 1190
	push	1190					; 000004a6H
; Line 1191
	jmp	SHORT $LN35@i2d_ECPriv
$LN15@i2d_ECPriv:
; Line 1194
	mov	ebp, DWORD PTR _tmp_len$1$[esp+20]
	mov	ebx, eax
$LN14@i2d_ECPriv:
; Line 1197
	push	0
	push	ebp
	push	ebx
	push	DWORD PTR [esi+20]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+4]
	call	_EC_POINT_point2oct
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN16@i2d_ECPriv
; Line 1199
	push	1199					; 000004afH
; Line 1200
	jmp	$LN34@i2d_ECPriv
$LN16@i2d_ECPriv:
; Line 1203
	mov	eax, DWORD PTR [edi+12]
; Line 1205
	push	ebp
	push	ebx
	and	DWORD PTR [eax+12], -16			; fffffff0H
	mov	eax, DWORD PTR [edi+12]
	or	DWORD PTR [eax+12], 8
	push	DWORD PTR [edi+12]
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN17@i2d_ECPriv
; Line 1206
	push	1206					; 000004b6H
; Line 1207
	jmp	$LN32@i2d_ECPriv
$LN17@i2d_ECPriv:
; Line 1211
	push	DWORD PTR _out$[esp+20]
	push	edi
	call	_i2d_EC_PRIVATEKEY
	add	esp, 8
	mov	DWORD PTR _ret$1$[esp+24], eax
	test	eax, eax
	jne	SHORT $LN18@i2d_ECPriv
; Line 1212
	push	1212					; 000004bcH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
	push	192					; 000000c0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	SHORT $err$37
$LN18@i2d_ECPriv:
; Line 1215
	mov	DWORD PTR _ok$1$[esp+24], 1
$err$37:
; Line 1217
	test	ebx, ebx
	je	SHORT $LN30@i2d_ECPriv
; Line 1218
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN30@i2d_ECPriv:
	mov	ebx, DWORD PTR _ret$1$[esp+24]
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	push	edi
	call	_ASN1_item_free
	add	esp, 8
; Line 1221
	xor	eax, eax
	cmp	DWORD PTR _ok$1$[esp+24], eax
	cmovne	eax, ebx
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 1222
	add	esp, 8
	ret	0
$LN3@i2d_ECPriv:
; Line 1126
	push	1126					; 00000466H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	67					; 00000043H
$LN31@i2d_ECPriv:
	push	192					; 000000c0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1221
	xor	eax, eax
	cmp	DWORD PTR _ok$1$[esp+20], eax
	cmovne	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 1222
	add	esp, 8
	ret	0
_i2d_ECPrivateKey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_ECPrivateKey
_TEXT	SEGMENT
_p$ = -4						; size = 4
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_ECPrivateKey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 1017
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
; Line 1021
	mov	ebp, DWORD PTR _in$[esp+8]
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	push	DWORD PTR _len$[esp+12]
; Line 1021
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _p$[esp+20], eax
; Line 278
	lea	eax, DWORD PTR _p$[esp+20]
	push	eax
	push	0
	call	_ASN1_item_d2i
; Line 1023
	mov	ebx, eax
; Line 278
	add	esp, 16					; 00000010H
; Line 1023
	test	ebx, ebx
	jne	SHORT $LN2@d2i_ECPriv
; Line 1024
	push	1024					; 00000400H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
	push	146					; 00000092H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1025
	xor	eax, eax
	pop	ebp
	pop	ebx
; Line 1115
	pop	ecx
	ret	0
$LN2@d2i_ECPriv:
	push	esi
	push	edi
; Line 1028
	mov	edi, DWORD PTR _a$[esp+16]
	test	edi, edi
	je	SHORT $LN5@d2i_ECPriv
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	jne	SHORT $LN6@d2i_ECPriv
$LN5@d2i_ECPriv:
; Line 1029
	call	_EC_KEY_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN6@d2i_ECPriv
; Line 1030
	push	1030					; 00000406H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	65					; 00000041H
	push	146					; 00000092H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1031
	jmp	$LN22@d2i_ECPriv
$LN6@d2i_ECPriv:
; Line 1036
	cmp	DWORD PTR [ebx+8], 0
	je	SHORT $LN7@d2i_ECPriv
; Line 1037
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN8@d2i_ECPriv
; Line 1038
	push	eax
	call	_EC_GROUP_clear_free
	add	esp, 4
$LN8@d2i_ECPriv:
; Line 1039
	push	DWORD PTR [ebx+8]
	call	_ec_asn1_pkparameters2group
	add	esp, 4
	mov	DWORD PTR [esi+4], eax
$LN7@d2i_ECPriv:
; Line 1042
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN9@d2i_ECPriv
; Line 1043
	push	1043					; 00000413H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 1044
	jmp	$LN36@d2i_ECPriv
$LN9@d2i_ECPriv:
; Line 1047
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi], eax
; Line 1049
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	$LN10@d2i_ECPriv
; Line 1050
	push	DWORD PTR [esi+12]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+12], eax
; Line 1053
	test	eax, eax
	jne	SHORT $LN12@d2i_ECPriv
; Line 1054
	push	1054					; 0000041eH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	3
; Line 1055
	jmp	$LN36@d2i_ECPriv
$LN12@d2i_ECPriv:
; Line 1062
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN13@d2i_ECPriv
; Line 1063
	push	eax
	call	_EC_POINT_clear_free
	add	esp, 4
$LN13@d2i_ECPriv:
; Line 1064
	push	DWORD PTR [esi+4]
	call	_EC_POINT_new
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR [esi+8], ecx
; Line 1065
	test	ecx, ecx
	jne	SHORT $LN14@d2i_ECPriv
; Line 1066
	push	1066					; 0000042aH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 1067
	jmp	$LN36@d2i_ECPriv
$LN14@d2i_ECPriv:
; Line 1070
	mov	eax, DWORD PTR [ebx+12]
	test	eax, eax
	je	SHORT $LN15@d2i_ECPriv
; Line 1075
	mov	edx, DWORD PTR [eax]
	mov	ebp, DWORD PTR [eax+8]
; Line 1079
	test	edx, edx
	jg	SHORT $LN17@d2i_ECPriv
; Line 1080
	push	1080					; 00000438H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	100					; 00000064H
; Line 1081
	jmp	SHORT $LN36@d2i_ECPriv
$LN17@d2i_ECPriv:
; Line 1084
	movzx	eax, BYTE PTR [ebp]
; Line 1085
	push	0
	push	edx
	push	ebp
	push	ecx
	push	DWORD PTR [esi+4]
	and	eax, -2					; fffffffeH
	mov	DWORD PTR [esi+20], eax
	call	_EC_POINT_oct2point
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN35@d2i_ECPriv
; Line 1087
	push	1087					; 0000043fH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 1088
	jmp	SHORT $LN36@d2i_ECPriv
$LN15@d2i_ECPriv:
; Line 1091
	push	0
	push	0
	push	0
	push	DWORD PTR [esi+12]
	push	ecx
	push	DWORD PTR [esi+4]
	call	_EC_POINT_mul
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN19@d2i_ECPriv
; Line 1093
	push	1093					; 00000445H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	16					; 00000010H
; Line 1094
	jmp	SHORT $LN36@d2i_ECPriv
$LN19@d2i_ECPriv:
; Line 1097
	or	DWORD PTR [esi+16], 2
	jmp	SHORT $LN16@d2i_ECPriv
$LN35@d2i_ECPriv:
	mov	ebp, DWORD PTR _in$[esp+16]
$LN16@d2i_ECPriv:
; Line 1100
	test	edi, edi
	je	SHORT $LN20@d2i_ECPriv
; Line 1101
	mov	DWORD PTR [edi], esi
$LN20@d2i_ECPriv:
; Line 1102
	mov	eax, DWORD PTR _p$[esp+20]
	mov	DWORD PTR [ebp], eax
; Line 1103
	jmp	SHORT $LN21@d2i_ECPriv
$LN10@d2i_ECPriv:
; Line 1058
	push	1058					; 00000422H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	125					; 0000007dH
$LN36@d2i_ECPriv:
	push	146					; 00000092H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1106
	test	edi, edi
	je	SHORT $LN23@d2i_ECPriv
	cmp	DWORD PTR [edi], esi
	je	SHORT $LN22@d2i_ECPriv
$LN23@d2i_ECPriv:
; Line 1107
	push	esi
	call	_EC_KEY_free
	add	esp, 4
$LN22@d2i_ECPriv:
; Line 1108
	xor	esi, esi
$LN21@d2i_ECPriv:
; Line 278
	push	OFFSET ?local_it@?1??EC_PRIVATEKEY_it@@9@9
	push	ebx
	call	_ASN1_item_free
	add	esp, 8
; Line 1114
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1115
	pop	ecx
	ret	0
_d2i_ECPrivateKey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_ECPKParameters
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_ECPKParameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 998
	push	esi
; Line 1000
	push	0
	push	DWORD PTR _a$[esp+4]
	call	_ec_asn1_group2pkparameters
	mov	esi, eax
	add	esp, 8
; Line 1001
	test	esi, esi
	jne	SHORT $LN2@i2d_ECPKPa
; Line 1002
	push	1002					; 000003eaH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	120					; 00000078H
	push	191					; 000000bfH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1003
	xor	eax, eax
	pop	esi
; Line 1012
	ret	0
$LN2@i2d_ECPKPa:
	push	edi
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	DWORD PTR _out$[esp+8]
	push	esi
	call	_ASN1_item_i2d
; Line 1005
	mov	edi, eax
; Line 267
	add	esp, 12					; 0000000cH
; Line 1005
	test	edi, edi
	jne	SHORT $LN3@i2d_ECPKPa
; Line 1006
	push	1006					; 000003eeH
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	121					; 00000079H
	push	191					; 000000bfH
	push	16					; 00000010H
	call	_ERR_put_error
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	esi
	call	_ASN1_item_free
	add	esp, 28					; 0000001cH
; Line 1008
	xor	eax, eax
	pop	edi
	pop	esi
; Line 1012
	ret	0
$LN3@i2d_ECPKPa:
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	esi
	call	_ASN1_item_free
	add	esp, 8
; Line 1011
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1012
	ret	0
_i2d_ECPKParameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_ECPKParameters
_TEXT	SEGMENT
_a$ = 8							; size = 4
_p$ = 12						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_ECPKParameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 970
	push	ebp
; Line 973
	mov	ebp, DWORD PTR _in$[esp]
	push	esi
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	DWORD PTR _len$[esp+8]
; Line 973
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _p$[esp+12], eax
; Line 267
	lea	eax, DWORD PTR _p$[esp+12]
	push	eax
	push	0
	call	_ASN1_item_d2i
; Line 975
	mov	esi, eax
; Line 267
	add	esp, 16					; 00000010H
; Line 975
	test	esi, esi
	jne	SHORT $LN2@d2i_ECPKPa
; Line 976
	push	976					; 000003d0H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	117					; 00000075H
	push	145					; 00000091H
	push	16					; 00000010H
	call	_ERR_put_error
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	esi
	call	_ASN1_item_free
	add	esp, 28					; 0000001cH
; Line 978
	xor	eax, eax
	pop	esi
	pop	ebp
; Line 995
	ret	0
$LN2@d2i_ECPKPa:
	push	ebx
; Line 981
	push	esi
	call	_ec_asn1_pkparameters2group
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $LN3@d2i_ECPKPa
; Line 982
	push	982					; 000003d6H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	127					; 0000007fH
	push	145					; 00000091H
	push	16					; 00000010H
	call	_ERR_put_error
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	esi
	call	_ASN1_item_free
	add	esp, 28					; 0000001cH
; Line 984
	xor	eax, eax
	pop	ebx
	pop	esi
	pop	ebp
; Line 995
	ret	0
$LN3@d2i_ECPKPa:
	push	edi
; Line 987
	mov	edi, DWORD PTR _a$[esp+12]
	test	edi, edi
	je	SHORT $LN5@d2i_ECPKPa
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN4@d2i_ECPKPa
; Line 988
	push	eax
	call	_EC_GROUP_clear_free
	add	esp, 4
$LN4@d2i_ECPKPa:
; Line 990
	mov	DWORD PTR [edi], ebx
$LN5@d2i_ECPKPa:
; Line 267
	push	OFFSET ?local_it@?1??ECPKPARAMETERS_it@@9@9
	push	esi
	call	_ASN1_item_free
; Line 993
	mov	eax, DWORD PTR _p$[esp+20]
; Line 267
	add	esp, 8
; Line 993
	mov	DWORD PTR [ebp], eax
; Line 994
	mov	eax, ebx
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
; Line 995
	ret	0
_d2i_ECPKParameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_pentanomial_basis
_TEXT	SEGMENT
_group$ = 8						; size = 4
_k1$ = 12						; size = 4
_k2$ = 16						; size = 4
_k3$ = 20						; size = 4
_EC_GROUP_get_pentanomial_basis PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 109
	push	esi
; Line 110
	mov	esi, DWORD PTR _group$[esp]
	test	esi, esi
	je	SHORT $LN10@EC_GROUP_g
; Line 115
	push	esi
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	add	esp, 8
	cmp	eax, 407				; 00000197H
	jne	SHORT $LN5@EC_GROUP_g
	cmp	DWORD PTR [esi+92], 0
	je	SHORT $LN5@EC_GROUP_g
	cmp	DWORD PTR [esi+96], 0
	je	SHORT $LN5@EC_GROUP_g
	cmp	DWORD PTR [esi+100], 0
	je	SHORT $LN5@EC_GROUP_g
	mov	ecx, DWORD PTR [esi+104]
	test	ecx, ecx
	je	SHORT $LN5@EC_GROUP_g
	cmp	DWORD PTR [esi+108], 0
	jne	SHORT $LN5@EC_GROUP_g
; Line 123
	mov	eax, DWORD PTR _k1$[esp]
	test	eax, eax
	je	SHORT $LN6@EC_GROUP_g
; Line 124
	mov	DWORD PTR [eax], ecx
$LN6@EC_GROUP_g:
; Line 125
	mov	ecx, DWORD PTR _k2$[esp]
	test	ecx, ecx
	je	SHORT $LN7@EC_GROUP_g
; Line 126
	mov	eax, DWORD PTR [esi+100]
	mov	DWORD PTR [ecx], eax
$LN7@EC_GROUP_g:
; Line 127
	mov	ecx, DWORD PTR _k3$[esp]
	test	ecx, ecx
	je	SHORT $LN8@EC_GROUP_g
; Line 128
	mov	eax, DWORD PTR [esi+96]
	mov	DWORD PTR [ecx], eax
$LN8@EC_GROUP_g:
; Line 130
	mov	eax, 1
	pop	esi
; Line 131
	ret	0
$LN5@EC_GROUP_g:
; Line 118
	push	119					; 00000077H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	66					; 00000042H
	push	193					; 000000c1H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN10@EC_GROUP_g:
; Line 120
	xor	eax, eax
	pop	esi
; Line 131
	ret	0
_EC_GROUP_get_pentanomial_basis ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_trinomial_basis
_TEXT	SEGMENT
_group$ = 8						; size = 4
_k$ = 12						; size = 4
_EC_GROUP_get_trinomial_basis PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 88
	push	esi
; Line 89
	mov	esi, DWORD PTR _group$[esp]
	test	esi, esi
	je	SHORT $LN8@EC_GROUP_g
; Line 94
	push	esi
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	add	esp, 8
	cmp	eax, 407				; 00000197H
	jne	SHORT $LN5@EC_GROUP_g
	cmp	DWORD PTR [esi+92], 0
	je	SHORT $LN5@EC_GROUP_g
	mov	ecx, DWORD PTR [esi+96]
	test	ecx, ecx
	je	SHORT $LN5@EC_GROUP_g
	cmp	DWORD PTR [esi+100], 0
	jne	SHORT $LN5@EC_GROUP_g
; Line 101
	mov	eax, DWORD PTR _k$[esp]
	test	eax, eax
	je	SHORT $LN6@EC_GROUP_g
; Line 102
	mov	DWORD PTR [eax], ecx
$LN6@EC_GROUP_g:
; Line 104
	mov	eax, 1
	pop	esi
; Line 105
	ret	0
$LN5@EC_GROUP_g:
; Line 96
	push	97					; 00000061H
	push	OFFSET ??_C@_0BG@HJBLPCL@?4?2crypto?2ec?2ec_asn1?4c?$AA@
	push	66					; 00000042H
	push	194					; 000000c2H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN8@EC_GROUP_g:
; Line 98
	xor	eax, eax
	pop	esi
; Line 105
	ret	0
_EC_GROUP_get_trinomial_basis ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_basis_type
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get_basis_type PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_asn1.c
; Line 66
	push	esi
	push	edi
; Line 69
	mov	edi, DWORD PTR _group$[esp+4]
	xor	esi, esi
	push	edi
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	add	esp, 8
	cmp	eax, 407				; 00000197H
	jne	SHORT $LN7@EC_GROUP_g
; Line 74
	cmp	DWORD PTR [edi+92], esi
	lea	eax, DWORD PTR [edi+92]
	je	SHORT $LN7@EC_GROUP_g
$LL2@EC_GROUP_g:
; Line 75
	lea	eax, DWORD PTR [eax+4]
	inc	esi
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LL2@EC_GROUP_g
; Line 77
	cmp	esi, 4
	jne	SHORT $LN5@EC_GROUP_g
; Line 78
	pop	edi
	mov	eax, 683				; 000002abH
	pop	esi
; Line 84
	ret	0
$LN5@EC_GROUP_g:
; Line 79
	cmp	esi, 2
	jne	SHORT $LN7@EC_GROUP_g
; Line 80
	pop	edi
	mov	eax, 682				; 000002aaH
	pop	esi
; Line 84
	ret	0
$LN7@EC_GROUP_g:
	pop	edi
; Line 83
	xor	eax, eax
	pop	esi
; Line 84
	ret	0
_EC_GROUP_get_basis_type ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_num0
PUBLIC	_num1
PUBLIC	_num2
_BSS	SEGMENT
?neg@?1??rand_neg@@9@9 DD 01H DUP (?)			; `rand_neg'::`2'::neg
_results DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
?sign@?1??rand_neg@@9@9 DD 00H				; `rand_neg'::`2'::sign
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	00H
	DD	01H
	DD	01H
_lst	DB	0c6H, 'OC', 04H, '*', 0eaH, 0caH, 'nX6', 080H, '[', 0e8H, 0c9H
	DB	09bH, 04H, ']H6', 0c2H, 0fdH, 016H, 0c9H, 'd', 0f0H, 00H
_DATA	ENDS
CONST	SEGMENT
_num0	DD	064H
_num1	DD	032H
_num2	DD	05H
	ORG $+4
_rnd_seed DB	'string to make the random number generator think it has '
	DB	'entropy', 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_test_add
PUBLIC	_test_sub
PUBLIC	_test_lshift1
PUBLIC	_test_lshift
PUBLIC	_test_rshift1
PUBLIC	_test_rshift
PUBLIC	_test_div
PUBLIC	_test_div_word
PUBLIC	_test_div_recp
PUBLIC	_test_mul
PUBLIC	_test_sqr
PUBLIC	_test_mont
PUBLIC	_test_mod
PUBLIC	_test_mod_mul
PUBLIC	_test_mod_exp
PUBLIC	_test_mod_exp_mont_consttime
PUBLIC	_test_mod_exp_mont5
PUBLIC	_test_exp
PUBLIC	_test_gf2m_add
PUBLIC	_test_gf2m_mod
PUBLIC	_test_gf2m_mod_mul
PUBLIC	_test_gf2m_mod_sqr
PUBLIC	_test_gf2m_mod_inv
PUBLIC	_test_gf2m_mod_div
PUBLIC	_test_gf2m_mod_exp
PUBLIC	_test_gf2m_mod_sqrt
PUBLIC	_test_gf2m_mod_solve_quad
PUBLIC	_test_kron
PUBLIC	_test_sqrt
PUBLIC	_rand_neg
PUBLIC	_main
PUBLIC	??_C@_08JLPEBMLN@test?5?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_0N@BEDFMCGA@print?5?$CCtest?5?$AA@	; `string'
PUBLIC	??_C@_04NOOBNABM@?2n?$CC?6?$AA@			; `string'
PUBLIC	??_C@_08MHCNMJNI@?9results?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_0BD@EOGHNCOD@obase?$DN16?6ibase?$DN16?6?$AA@ ; `string'
PUBLIC	??_C@_06PDMDCKOO@BN_add?$AA@			; `string'
PUBLIC	??_C@_06ECGNNLDL@BN_sub?$AA@			; `string'
PUBLIC	??_C@_0L@JGGNNPCB@BN_lshift1?$AA@		; `string'
PUBLIC	??_C@_0BC@OLFMMJOC@BN_lshift?5?$CIfixed?$CJ?$AA@ ; `string'
PUBLIC	??_C@_09DFKJKPHA@BN_lshift?$AA@			; `string'
PUBLIC	??_C@_0L@PPFMPMDI@BN_rshift1?$AA@		; `string'
PUBLIC	??_C@_09CEIEIOD@BN_rshift?$AA@			; `string'
PUBLIC	??_C@_06PKGGBLG@BN_sqr?$AA@			; `string'
PUBLIC	??_C@_06GMCINGBJ@BN_mul?$AA@			; `string'
PUBLIC	??_C@_06LEDBDJFM@BN_div?$AA@			; `string'
PUBLIC	??_C@_0M@FGELACMP@BN_div_word?$AA@		; `string'
PUBLIC	??_C@_0M@MCFMHDMJ@BN_div_recp?$AA@		; `string'
PUBLIC	??_C@_06LFEAHKLH@BN_mod?$AA@			; `string'
PUBLIC	??_C@_0L@HKMMGKHH@BN_mod_mul?$AA@		; `string'
PUBLIC	??_C@_07BDHEFPHB@BN_mont?$AA@			; `string'
PUBLIC	??_C@_0L@FBNHIMJG@BN_mod_exp?$AA@		; `string'
PUBLIC	??_C@_0BK@MLKANOIE@BN_mod_exp_mont_consttime?$AA@ ; `string'
PUBLIC	??_C@_06EHDDDAPI@BN_exp?$AA@			; `string'
PUBLIC	??_C@_0N@DMHLACD@BN_kronecker?$AA@		; `string'
PUBLIC	??_C@_0M@MDECKEMJ@BN_mod_sqrt?$AA@		; `string'
PUBLIC	??_C@_0M@DNFCPHKL@BN_GF2m_add?$AA@		; `string'
PUBLIC	??_C@_0M@HLNBKHPC@BN_GF2m_mod?$AA@		; `string'
PUBLIC	??_C@_0BA@EHNBDAPH@BN_GF2m_mod_mul?$AA@		; `string'
PUBLIC	??_C@_0BA@CEFPIHFI@BN_GF2m_mod_sqr?$AA@		; `string'
PUBLIC	??_C@_0BA@GIONBBOK@BN_GF2m_mod_inv?$AA@		; `string'
PUBLIC	??_C@_0BA@JPMINPLC@BN_GF2m_mod_div?$AA@		; `string'
PUBLIC	??_C@_0BA@GMMKNGBG@BN_GF2m_mod_exp?$AA@		; `string'
PUBLIC	??_C@_0BB@COMHDKLD@BN_GF2m_mod_sqrt?$AA@	; `string'
PUBLIC	??_C@_0BH@EFEHBMGJ@BN_GF2m_mod_solve_quad?$AA@	; `string'
PUBLIC	??_C@_02NPPIEBMA@1?6?$AA@			; `string'
PUBLIC	??_C@_03NPBFACHO@?5?$CL?5?$AA@			; `string'
PUBLIC	??_C@_03NLJIHOMM@?5?9?5?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BC@GONIJPPC@Add?5test?5failed?$CB?6?$AA@	; `string'
PUBLIC	??_C@_0BH@DINKFKCI@Subtract?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@LOEINEMI@Division?5by?5zero?5succeeded?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_03NIBMKKKC@?5?1?5?$AA@			; `string'
PUBLIC	??_C@_03NFILCPHE@?5?$CF?5?$AA@			; `string'
PUBLIC	??_C@_0BH@ELLBMCOD@Division?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_02EMFKHFLK@?$CFX?$AA@			; `string'
PUBLIC	??_C@_0BO@LIMFHPNC@Division?5?$CIword?$CJ?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@DLNAGMJK@Reciprocal?5division?5test?5failed?$CB@ ; `string'
PUBLIC	??_C@_02CDEDMPEE@a?$DN?$AA@			; `string'
PUBLIC	??_C@_03JALNJHHH@?6b?$DN?$AA@			; `string'
PUBLIC	??_C@_03NONHGIEJ@?5?$CK?5?$AA@			; `string'
PUBLIC	??_C@_0BN@NJGACPPM@Multiplication?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@CDHGADOM@Square?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0EB@KFBCFFDF@80000000000000008000000000000001@ ; `string'
PUBLIC	??_C@_0EC@HGAAMPMN@Square?5test?5failed?3?5BN_sqr?5and?5B@ ; `string'
PUBLIC	??_C@_0EB@NLJIFIKP@80000000000000000000000080000001@ ; `string'
PUBLIC	??_C@_0CN@KJPNFINP@BN_MONT_CTX_set?5succeeded?5for?5ze@ ; `string'
PUBLIC	??_C@_0CN@PBBFPBFH@BN_MONT_CTX_set?5succeeded?5for?5ev@ ; `string'
PUBLIC	??_C@_0CI@KDBAFBGD@Montgomery?5multiplication?5test?5f@ ; `string'
PUBLIC	??_C@_0BF@BAOBGHJ@Modulo?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@FNOKGJFO@BN_mod_mul?5with?5zero?5modulus?5suc@ ; `string'
PUBLIC	??_C@_09MGBKLOC@ERROR?3?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_0BO@OALOLLJL@Modulo?5multiply?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@KMJDPENO@BN_mod_exp?5with?5zero?5modulus?5suc@ ; `string'
PUBLIC	??_C@_03INCPKIMF@?5?$FO?5?$AA@			; `string'
PUBLIC	??_C@_0CE@OBIADEDE@Modulo?5exponentiation?5test?5faile@ ; `string'
PUBLIC	??_C@_0N@CCIOCOJC@050505050505?$AA@		; `string'
PUBLIC	??_C@_02MJKFJHAM@02?$AA@			; `string'
PUBLIC	??_C@_0BHL@LHNJLIGF@41414141414141414141412741414141@ ; `string'
PUBLIC	??_C@_0DC@PDIBPFMG@BN_mod_exp?5and?5BN_mul?5produce?5di@ ; `string'
PUBLIC	??_C@_0DH@KGDLDMHL@BN_mod_exp_mont_consttime?5with?5z@ ; `string'
PUBLIC	??_C@_0DH@BOCGAAGB@BN_mod_exp_mont_consttime?5with?5e@ ; `string'
PUBLIC	??_C@_0CF@CKACGCLE@Modular?5exponentiation?5test?5fail@ ; `string'
PUBLIC	??_C@_0BN@KDGPLOPH@Exponentiation?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0CD@HKBMPME@GF?$CI2?$FOm?$CJ?5addition?5test?5?$CIa?$CJ?5failed@ ; `string'
PUBLIC	??_C@_0CD@HADPBNDE@GF?$CI2?$FOm?$CJ?5addition?5test?5?$CIb?$CJ?5failed@ ; `string'
PUBLIC	??_C@_0BN@CJFKNKMI@GF?$CI2?$FOm?$CJ?5modulo?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0CN@EFNDDEAF@GF?$CI2?$FOm?$CJ?5modular?5multiplication?5t@ ; `string'
PUBLIC	??_C@_0CH@OJGONEIC@GF?$CI2?$FOm?$CJ?5modular?5squaring?5test?5fa@ ; `string'
PUBLIC	??_C@_0CI@BFGLEPBL@GF?$CI2?$FOm?$CJ?5modular?5inversion?5test?5f@ ; `string'
PUBLIC	??_C@_0CH@OFOLLHLF@GF?$CI2?$FOm?$CJ?5modular?5division?5test?5fa@ ; `string'
PUBLIC	??_C@_0CN@DPNMKFAO@GF?$CI2?$FOm?$CJ?5modular?5exponentiation?5t@ ; `string'
PUBLIC	??_C@_0CK@IEIKOPFA@GF?$CI2?$FOm?$CJ?5modular?5square?5root?5test@ ; `string'
PUBLIC	??_C@_0CO@NJAPFKHH@GF?$CI2?$FOm?$CJ?5modular?5solve?5quadratic?5@ ; `string'
PUBLIC	??_C@_0EH@OMEFNDG@All?5?$CFi?5tests?5of?5GF?$CI2?$FOm?$CJ?5modular?5@ ; `string'
PUBLIC	??_C@_0DI@NKPDGFDH@this?5is?5very?5unlikely?5and?5probab@ ; `string'
PUBLIC	??_C@_0CE@OIGHHGKE@Legendre?5symbol?5computation?5fail@ ; `string'
PUBLIC	??_C@_0BM@HAMJNDLC@legendre?5?$CB?$DN?5kronecker?$DL?5a?5?$DN?5?$AA@ ; `string'
PUBLIC	??_C@_06JHNFKPCN@?0?5b?5?$DN?5?$AA@		; `string'
PUBLIC	??_C@_0BJ@DIFEADOC@BN_mod_sqrt?5failed?3?5a?5?$DN?5?$AA@ ; `string'
PUBLIC	??_C@_06PHDFDIKP@?0?5r?5?$DN?5?$AA@		; `string'
PUBLIC	??_C@_06INPFGLMP@?0?5p?5?$DN?5?$AA@		; `string'
PUBLIC	??_C@_0BJ@MFOOAFD@Left?5shift?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_03JBHPPNEA@?6c?$DN?$AA@			; `string'
PUBLIC	??_C@_03JEDAOLMF@?6d?$DN?$AA@			; `string'
PUBLIC	??_C@_04OCKOHKCN@?5?$CK?52?$AA@			; `string'
PUBLIC	??_C@_0BN@PGABCNFP@Left?5shift?5one?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@OLOPEOKA@Right?5shift?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_04NFHAIKBP@?5?1?52?$AA@			; `string'
PUBLIC	??_C@_0BO@HCIEAMFO@Right?5shift?5one?5test?5failed?$CB?6?$AA@ ; `string'
PUBLIC	__xmm@000000030000000600000007000000a3
PUBLIC	__xmm@ffffffff000000000000000f000000c1
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__putc:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__exit:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_value_one:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_rand:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_init:PROC
EXTRN	_BN_copy:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_sub:PROC
EXTRN	_BN_add:PROC
EXTRN	_BN_mul:PROC
EXTRN	_BN_sqr:PROC
EXTRN	_BN_div:PROC
EXTRN	_BN_nnmod:PROC
EXTRN	_BN_mod_mul:PROC
EXTRN	_BN_mod_sqr:PROC
EXTRN	_BN_div_word:PROC
EXTRN	_BN_mul_word:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_sub_word:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_lshift:PROC
EXTRN	_BN_lshift1:PROC
EXTRN	_BN_exp:PROC
EXTRN	_BN_mod_exp:PROC
EXTRN	_BN_mod_exp_mont_consttime:PROC
EXTRN	_BN_mod_exp_simple:PROC
EXTRN	_BN_print_fp:PROC
EXTRN	_BN_print:PROC
EXTRN	_BN_rshift:PROC
EXTRN	_BN_rshift1:PROC
EXTRN	_BN_ucmp:PROC
EXTRN	_BN_set_bit:PROC
EXTRN	_BN_hex2bn:PROC
EXTRN	_BN_kronecker:PROC
EXTRN	_BN_mod_sqrt:PROC
EXTRN	_BN_generate_prime_ex:PROC
EXTRN	_BN_MONT_CTX_new:PROC
EXTRN	_BN_mod_mul_montgomery:PROC
EXTRN	_BN_from_montgomery:PROC
EXTRN	_BN_MONT_CTX_free:PROC
EXTRN	_BN_MONT_CTX_set:PROC
EXTRN	_BN_RECP_CTX_init:PROC
EXTRN	_BN_RECP_CTX_free:PROC
EXTRN	_BN_RECP_CTX_set:PROC
EXTRN	_BN_mod_exp_recp:PROC
EXTRN	_BN_div_recp:PROC
EXTRN	_BN_GF2m_add:PROC
EXTRN	_BN_GF2m_mod:PROC
EXTRN	_BN_GF2m_mod_mul:PROC
EXTRN	_BN_GF2m_mod_sqr:PROC
EXTRN	_BN_GF2m_mod_inv:PROC
EXTRN	_BN_GF2m_mod_div:PROC
EXTRN	_BN_GF2m_mod_exp:PROC
EXTRN	_BN_GF2m_mod_sqrt:PROC
EXTRN	_BN_GF2m_mod_solve_quad:PROC
EXTRN	_BN_GF2m_arr2poly:PROC
EXTRN	_BN_bntest_rand:PROC
EXTRN	_RAND_seed:PROC
EXTRN	_ERR_get_error:PROC
EXTRN	_ERR_error_string:PROC
EXTRN	_ERR_print_errors_fp:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT __xmm@ffffffff000000000000000f000000c1
CONST	SEGMENT
__xmm@ffffffff000000000000000f000000c1 DB 0c1H, 00H, 00H, 00H, 0fH, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 0ffH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@000000030000000600000007000000a3
CONST	SEGMENT
__xmm@000000030000000600000007000000a3 DB 0a3H, 00H, 00H, 00H, 07H, 00H, 00H
	DB	00H, 06H, 00H, 00H, 00H, 03H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT ??_C@_0BO@HCIEAMFO@Right?5shift?5one?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BO@HCIEAMFO@Right?5shift?5one?5test?5failed?$CB?6?$AA@ DB 'Right s'
	DB	'hift one test failed!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NFHAIKBP@?5?1?52?$AA@
CONST	SEGMENT
??_C@_04NFHAIKBP@?5?1?52?$AA@ DB ' / 2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OLOPEOKA@Right?5shift?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BK@OLOPEOKA@Right?5shift?5test?5failed?$CB?6?$AA@ DB 'Right shift '
	DB	'test failed!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PGABCNFP@Left?5shift?5one?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BN@PGABCNFP@Left?5shift?5one?5test?5failed?$CB?6?$AA@ DB 'Left shi'
	DB	'ft one test failed!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OCKOHKCN@?5?$CK?52?$AA@
CONST	SEGMENT
??_C@_04OCKOHKCN@?5?$CK?52?$AA@ DB ' * 2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JEDAOLMF@?6d?$DN?$AA@
CONST	SEGMENT
??_C@_03JEDAOLMF@?6d?$DN?$AA@ DB 0aH, 'd=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBHPPNEA@?6c?$DN?$AA@
CONST	SEGMENT
??_C@_03JBHPPNEA@?6c?$DN?$AA@ DB 0aH, 'c=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MFOOAFD@Left?5shift?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BJ@MFOOAFD@Left?5shift?5test?5failed?$CB?6?$AA@ DB 'Left shift tes'
	DB	't failed!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06INPFGLMP@?0?5p?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_06INPFGLMP@?0?5p?5?$DN?5?$AA@ DB ', p = ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PHDFDIKP@?0?5r?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_06PHDFDIKP@?0?5r?5?$DN?5?$AA@ DB ', r = ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DIFEADOC@BN_mod_sqrt?5failed?3?5a?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_0BJ@DIFEADOC@BN_mod_sqrt?5failed?3?5a?5?$DN?5?$AA@ DB 'BN_mod_sqrt '
	DB	'failed: a = ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06JHNFKPCN@?0?5b?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_06JHNFKPCN@?0?5b?5?$DN?5?$AA@ DB ', b = ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HAMJNDLC@legendre?5?$CB?$DN?5kronecker?$DL?5a?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_0BM@HAMJNDLC@legendre?5?$CB?$DN?5kronecker?$DL?5a?5?$DN?5?$AA@ DB 'l'
	DB	'egendre != kronecker; a = ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OIGHHGKE@Legendre?5symbol?5computation?5fail@
CONST	SEGMENT
??_C@_0CE@OIGHHGKE@Legendre?5symbol?5computation?5fail@ DB 'Legendre symb'
	DB	'ol computation failed', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@NKPDGFDH@this?5is?5very?5unlikely?5and?5probab@
CONST	SEGMENT
??_C@_0DI@NKPDGFDH@this?5is?5very?5unlikely?5and?5probab@ DB 'this is ver'
	DB	'y unlikely and probably indicates an error.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@OMEFNDG@All?5?$CFi?5tests?5of?5GF?$CI2?$FOm?$CJ?5modular?5@
CONST	SEGMENT
??_C@_0EH@OMEFNDG@All?5?$CFi?5tests?5of?5GF?$CI2?$FOm?$CJ?5modular?5@ DB 'A'
	DB	'll %i tests of GF(2^m) modular solve quadratic resulted in no'
	DB	' roots;', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@NJAPFKHH@GF?$CI2?$FOm?$CJ?5modular?5solve?5quadratic?5@
CONST	SEGMENT
??_C@_0CO@NJAPFKHH@GF?$CI2?$FOm?$CJ?5modular?5solve?5quadratic?5@ DB 'GF('
	DB	'2^m) modular solve quadratic test failed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IEIKOPFA@GF?$CI2?$FOm?$CJ?5modular?5square?5root?5test@
CONST	SEGMENT
??_C@_0CK@IEIKOPFA@GF?$CI2?$FOm?$CJ?5modular?5square?5root?5test@ DB 'GF('
	DB	'2^m) modular square root test failed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DPNMKFAO@GF?$CI2?$FOm?$CJ?5modular?5exponentiation?5t@
CONST	SEGMENT
??_C@_0CN@DPNMKFAO@GF?$CI2?$FOm?$CJ?5modular?5exponentiation?5t@ DB 'GF(2'
	DB	'^m) modular exponentiation test failed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OFOLLHLF@GF?$CI2?$FOm?$CJ?5modular?5division?5test?5fa@
CONST	SEGMENT
??_C@_0CH@OFOLLHLF@GF?$CI2?$FOm?$CJ?5modular?5division?5test?5fa@ DB 'GF('
	DB	'2^m) modular division test failed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BFGLEPBL@GF?$CI2?$FOm?$CJ?5modular?5inversion?5test?5f@
CONST	SEGMENT
??_C@_0CI@BFGLEPBL@GF?$CI2?$FOm?$CJ?5modular?5inversion?5test?5f@ DB 'GF('
	DB	'2^m) modular inversion test failed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OJGONEIC@GF?$CI2?$FOm?$CJ?5modular?5squaring?5test?5fa@
CONST	SEGMENT
??_C@_0CH@OJGONEIC@GF?$CI2?$FOm?$CJ?5modular?5squaring?5test?5fa@ DB 'GF('
	DB	'2^m) modular squaring test failed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@EFNDDEAF@GF?$CI2?$FOm?$CJ?5modular?5multiplication?5t@
CONST	SEGMENT
??_C@_0CN@EFNDDEAF@GF?$CI2?$FOm?$CJ?5modular?5multiplication?5t@ DB 'GF(2'
	DB	'^m) modular multiplication test failed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CJFKNKMI@GF?$CI2?$FOm?$CJ?5modulo?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BN@CJFKNKMI@GF?$CI2?$FOm?$CJ?5modulo?5test?5failed?$CB?6?$AA@ DB 'G'
	DB	'F(2^m) modulo test failed!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HADPBNDE@GF?$CI2?$FOm?$CJ?5addition?5test?5?$CIb?$CJ?5failed@
CONST	SEGMENT
??_C@_0CD@HADPBNDE@GF?$CI2?$FOm?$CJ?5addition?5test?5?$CIb?$CJ?5failed@ DB 'G'
	DB	'F(2^m) addition test (b) failed!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HKBMPME@GF?$CI2?$FOm?$CJ?5addition?5test?5?$CIa?$CJ?5failed@
CONST	SEGMENT
??_C@_0CD@HKBMPME@GF?$CI2?$FOm?$CJ?5addition?5test?5?$CIa?$CJ?5failed@ DB 'G'
	DB	'F(2^m) addition test (a) failed!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KDGPLOPH@Exponentiation?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BN@KDGPLOPH@Exponentiation?5test?5failed?$CB?6?$AA@ DB 'Exponentia'
	DB	'tion test failed!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CKACGCLE@Modular?5exponentiation?5test?5fail@
CONST	SEGMENT
??_C@_0CF@CKACGCLE@Modular?5exponentiation?5test?5fail@ DB 'Modular expon'
	DB	'entiation test failed!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@BOCGAAGB@BN_mod_exp_mont_consttime?5with?5e@
CONST	SEGMENT
??_C@_0DH@BOCGAAGB@BN_mod_exp_mont_consttime?5with?5e@ DB 'BN_mod_exp_mon'
	DB	't_consttime with even modulus succeeded', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@KGDLDMHL@BN_mod_exp_mont_consttime?5with?5z@
CONST	SEGMENT
??_C@_0DH@KGDLDMHL@BN_mod_exp_mont_consttime?5with?5z@ DB 'BN_mod_exp_mon'
	DB	't_consttime with zero modulus succeeded', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PDIBPFMG@BN_mod_exp?5and?5BN_mul?5produce?5di@
CONST	SEGMENT
??_C@_0DC@PDIBPFMG@BN_mod_exp?5and?5BN_mul?5produce?5di@ DB 'BN_mod_exp a'
	DB	'nd BN_mul produce different results!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BHL@LHNJLIGF@41414141414141414141412741414141@
CONST	SEGMENT
??_C@_0BHL@LHNJLIGF@41414141414141414141412741414141@ DB '414141414141414'
	DB	'1414141274141414141414141414141414141414141414141414141414141'
	DB	'4141414141414141414141414141414141414141414141414141414141414'
	DB	'1414141414141800000000000000000000000000000000000000000000000'
	DB	'0000000000000000000000000000000000000000000000000000000000000'
	DB	'0000000000000000000000000000000000000000000000000000000000000'
	DB	'0000000000000000000000000000000000000000000000000000000001', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02MJKFJHAM@02?$AA@
CONST	SEGMENT
??_C@_02MJKFJHAM@02?$AA@ DB '02', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCIOCOJC@050505050505?$AA@
CONST	SEGMENT
??_C@_0N@CCIOCOJC@050505050505?$AA@ DB '050505050505', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OBIADEDE@Modulo?5exponentiation?5test?5faile@
CONST	SEGMENT
??_C@_0CE@OBIADEDE@Modulo?5exponentiation?5test?5faile@ DB 'Modulo expone'
	DB	'ntiation test failed!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03INCPKIMF@?5?$FO?5?$AA@
CONST	SEGMENT
??_C@_03INCPKIMF@?5?$FO?5?$AA@ DB ' ^ ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KMJDPENO@BN_mod_exp?5with?5zero?5modulus?5suc@
CONST	SEGMENT
??_C@_0CJ@KMJDPENO@BN_mod_exp?5with?5zero?5modulus?5suc@ DB 'BN_mod_exp w'
	DB	'ith zero modulus succeeded!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OALOLLJL@Modulo?5multiply?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BO@OALOLLJL@Modulo?5multiply?5test?5failed?$CB?6?$AA@ DB 'Modulo m'
	DB	'ultiply test failed!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MGBKLOC@ERROR?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_09MGBKLOC@ERROR?3?$CFs?6?$AA@ DB 'ERROR:%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FNOKGJFO@BN_mod_mul?5with?5zero?5modulus?5suc@
CONST	SEGMENT
??_C@_0CJ@FNOKGJFO@BN_mod_mul?5with?5zero?5modulus?5suc@ DB 'BN_mod_mul w'
	DB	'ith zero modulus succeeded!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BAOBGHJ@Modulo?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BF@BAOBGHJ@Modulo?5test?5failed?$CB?6?$AA@ DB 'Modulo test failed!'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KDBAFBGD@Montgomery?5multiplication?5test?5f@
CONST	SEGMENT
??_C@_0CI@KDBAFBGD@Montgomery?5multiplication?5test?5f@ DB 'Montgomery mu'
	DB	'ltiplication test failed!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@PBBFPBFH@BN_MONT_CTX_set?5succeeded?5for?5ev@
CONST	SEGMENT
??_C@_0CN@PBBFPBFH@BN_MONT_CTX_set?5succeeded?5for?5ev@ DB 'BN_MONT_CTX_s'
	DB	'et succeeded for even modulus!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@KJPNFINP@BN_MONT_CTX_set?5succeeded?5for?5ze@
CONST	SEGMENT
??_C@_0CN@KJPNFINP@BN_MONT_CTX_set?5succeeded?5for?5ze@ DB 'BN_MONT_CTX_s'
	DB	'et succeeded for zero modulus!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@NLJIFIKP@80000000000000000000000080000001@
CONST	SEGMENT
??_C@_0EB@NLJIFIKP@80000000000000000000000080000001@ DB '8000000000000000'
	DB	'0000000080000001FFFFFFFE000000000000000000000000', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@HGAAMPMN@Square?5test?5failed?3?5BN_sqr?5and?5B@
CONST	SEGMENT
??_C@_0EC@HGAAMPMN@Square?5test?5failed?3?5BN_sqr?5and?5B@ DB 'Square tes'
	DB	't failed: BN_sqr and BN_mul produce different results!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@KFBCFFDF@80000000000000008000000000000001@
CONST	SEGMENT
??_C@_0EB@KFBCFFDF@80000000000000008000000000000001@ DB '8000000000000000'
	DB	'8000000000000001FFFFFFFFFFFFFFFE0000000000000000', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CDHGADOM@Square?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BF@CDHGADOM@Square?5test?5failed?$CB?6?$AA@ DB 'Square test failed'
	DB	'!', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NJGACPPM@Multiplication?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BN@NJGACPPM@Multiplication?5test?5failed?$CB?6?$AA@ DB 'Multiplica'
	DB	'tion test failed!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NONHGIEJ@?5?$CK?5?$AA@
CONST	SEGMENT
??_C@_03NONHGIEJ@?5?$CK?5?$AA@ DB ' * ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JALNJHHH@?6b?$DN?$AA@
CONST	SEGMENT
??_C@_03JALNJHHH@?6b?$DN?$AA@ DB 0aH, 'b=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CDEDMPEE@a?$DN?$AA@
CONST	SEGMENT
??_C@_02CDEDMPEE@a?$DN?$AA@ DB 'a=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DLNAGMJK@Reciprocal?5division?5test?5failed?$CB@
CONST	SEGMENT
??_C@_0CC@DLNAGMJK@Reciprocal?5division?5test?5failed?$CB@ DB 'Reciprocal'
	DB	' division test failed!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LIMFHPNC@Division?5?$CIword?$CJ?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BO@LIMFHPNC@Division?5?$CIword?$CJ?5test?5failed?$CB?6?$AA@ DB 'Di'
	DB	'vision (word) test failed!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02EMFKHFLK@?$CFX?$AA@
CONST	SEGMENT
??_C@_02EMFKHFLK@?$CFX?$AA@ DB '%X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ELLBMCOD@Division?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BH@ELLBMCOD@Division?5test?5failed?$CB?6?$AA@ DB 'Division test fa'
	DB	'iled!', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03NFILCPHE@?5?$CF?5?$AA@
CONST	SEGMENT
??_C@_03NFILCPHE@?5?$CF?5?$AA@ DB ' % ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NIBMKKKC@?5?1?5?$AA@
CONST	SEGMENT
??_C@_03NIBMKKKC@?5?1?5?$AA@ DB ' / ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LOEINEMI@Division?5by?5zero?5succeeded?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BN@LOEINEMI@Division?5by?5zero?5succeeded?$CB?6?$AA@ DB 'Division '
	DB	'by zero succeeded!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DINKFKCI@Subtract?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BH@DINKFKCI@Subtract?5test?5failed?$CB?6?$AA@ DB 'Subtract test fa'
	DB	'iled!', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GONIJPPC@Add?5test?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BC@GONIJPPC@Add?5test?5failed?$CB?6?$AA@ DB 'Add test failed!', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NLJIHOMM@?5?9?5?$AA@
CONST	SEGMENT
??_C@_03NLJIHOMM@?5?9?5?$AA@ DB ' - ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPBFACHO@?5?$CL?5?$AA@
CONST	SEGMENT
??_C@_03NPBFACHO@?5?$CL?5?$AA@ DB ' + ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NPPIEBMA@1?6?$AA@
CONST	SEGMENT
??_C@_02NPPIEBMA@1?6?$AA@ DB '1', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EFEHBMGJ@BN_GF2m_mod_solve_quad?$AA@
CONST	SEGMENT
??_C@_0BH@EFEHBMGJ@BN_GF2m_mod_solve_quad?$AA@ DB 'BN_GF2m_mod_solve_quad'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@COMHDKLD@BN_GF2m_mod_sqrt?$AA@
CONST	SEGMENT
??_C@_0BB@COMHDKLD@BN_GF2m_mod_sqrt?$AA@ DB 'BN_GF2m_mod_sqrt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GMMKNGBG@BN_GF2m_mod_exp?$AA@
CONST	SEGMENT
??_C@_0BA@GMMKNGBG@BN_GF2m_mod_exp?$AA@ DB 'BN_GF2m_mod_exp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JPMINPLC@BN_GF2m_mod_div?$AA@
CONST	SEGMENT
??_C@_0BA@JPMINPLC@BN_GF2m_mod_div?$AA@ DB 'BN_GF2m_mod_div', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GIONBBOK@BN_GF2m_mod_inv?$AA@
CONST	SEGMENT
??_C@_0BA@GIONBBOK@BN_GF2m_mod_inv?$AA@ DB 'BN_GF2m_mod_inv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CEFPIHFI@BN_GF2m_mod_sqr?$AA@
CONST	SEGMENT
??_C@_0BA@CEFPIHFI@BN_GF2m_mod_sqr?$AA@ DB 'BN_GF2m_mod_sqr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHNBDAPH@BN_GF2m_mod_mul?$AA@
CONST	SEGMENT
??_C@_0BA@EHNBDAPH@BN_GF2m_mod_mul?$AA@ DB 'BN_GF2m_mod_mul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HLNBKHPC@BN_GF2m_mod?$AA@
CONST	SEGMENT
??_C@_0M@HLNBKHPC@BN_GF2m_mod?$AA@ DB 'BN_GF2m_mod', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DNFCPHKL@BN_GF2m_add?$AA@
CONST	SEGMENT
??_C@_0M@DNFCPHKL@BN_GF2m_add?$AA@ DB 'BN_GF2m_add', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MDECKEMJ@BN_mod_sqrt?$AA@
CONST	SEGMENT
??_C@_0M@MDECKEMJ@BN_mod_sqrt?$AA@ DB 'BN_mod_sqrt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DMHLACD@BN_kronecker?$AA@
CONST	SEGMENT
??_C@_0N@DMHLACD@BN_kronecker?$AA@ DB 'BN_kronecker', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EHDDDAPI@BN_exp?$AA@
CONST	SEGMENT
??_C@_06EHDDDAPI@BN_exp?$AA@ DB 'BN_exp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MLKANOIE@BN_mod_exp_mont_consttime?$AA@
CONST	SEGMENT
??_C@_0BK@MLKANOIE@BN_mod_exp_mont_consttime?$AA@ DB 'BN_mod_exp_mont_con'
	DB	'sttime', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FBNHIMJG@BN_mod_exp?$AA@
CONST	SEGMENT
??_C@_0L@FBNHIMJG@BN_mod_exp?$AA@ DB 'BN_mod_exp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BDHEFPHB@BN_mont?$AA@
CONST	SEGMENT
??_C@_07BDHEFPHB@BN_mont?$AA@ DB 'BN_mont', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HKMMGKHH@BN_mod_mul?$AA@
CONST	SEGMENT
??_C@_0L@HKMMGKHH@BN_mod_mul?$AA@ DB 'BN_mod_mul', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LFEAHKLH@BN_mod?$AA@
CONST	SEGMENT
??_C@_06LFEAHKLH@BN_mod?$AA@ DB 'BN_mod', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MCFMHDMJ@BN_div_recp?$AA@
CONST	SEGMENT
??_C@_0M@MCFMHDMJ@BN_div_recp?$AA@ DB 'BN_div_recp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FGELACMP@BN_div_word?$AA@
CONST	SEGMENT
??_C@_0M@FGELACMP@BN_div_word?$AA@ DB 'BN_div_word', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LEDBDJFM@BN_div?$AA@
CONST	SEGMENT
??_C@_06LEDBDJFM@BN_div?$AA@ DB 'BN_div', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GMCINGBJ@BN_mul?$AA@
CONST	SEGMENT
??_C@_06GMCINGBJ@BN_mul?$AA@ DB 'BN_mul', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PKGGBLG@BN_sqr?$AA@
CONST	SEGMENT
??_C@_06PKGGBLG@BN_sqr?$AA@ DB 'BN_sqr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CEIEIOD@BN_rshift?$AA@
CONST	SEGMENT
??_C@_09CEIEIOD@BN_rshift?$AA@ DB 'BN_rshift', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PPFMPMDI@BN_rshift1?$AA@
CONST	SEGMENT
??_C@_0L@PPFMPMDI@BN_rshift1?$AA@ DB 'BN_rshift1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DFKJKPHA@BN_lshift?$AA@
CONST	SEGMENT
??_C@_09DFKJKPHA@BN_lshift?$AA@ DB 'BN_lshift', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OLFMMJOC@BN_lshift?5?$CIfixed?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@OLFMMJOC@BN_lshift?5?$CIfixed?$CJ?$AA@ DB 'BN_lshift (fixed)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JGGNNPCB@BN_lshift1?$AA@
CONST	SEGMENT
??_C@_0L@JGGNNPCB@BN_lshift1?$AA@ DB 'BN_lshift1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06ECGNNLDL@BN_sub?$AA@
CONST	SEGMENT
??_C@_06ECGNNLDL@BN_sub?$AA@ DB 'BN_sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PDMDCKOO@BN_add?$AA@
CONST	SEGMENT
??_C@_06PDMDCKOO@BN_add?$AA@ DB 'BN_add', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EOGHNCOD@obase?$DN16?6ibase?$DN16?6?$AA@
CONST	SEGMENT
??_C@_0BD@EOGHNCOD@obase?$DN16?6ibase?$DN16?6?$AA@ DB 'obase=16', 0aH, 'i'
	DB	'base=16', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MHCNMJNI@?9results?$AA@
CONST	SEGMENT
??_C@_08MHCNMJNI@?9results?$AA@ DB '-results', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04NOOBNABM@?2n?$CC?6?$AA@
CONST	SEGMENT
??_C@_04NOOBNABM@?2n?$CC?6?$AA@ DB '\n"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BEDFMCGA@print?5?$CCtest?5?$AA@
CONST	SEGMENT
??_C@_0N@BEDFMCGA@print?5?$CCtest?5?$AA@ DB 'print "test ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLPEBMLN@test?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_08JLPEBMLN@test?5?$CFs?6?$AA@ DB 'test %s', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _genprime_cb
_TEXT	SEGMENT
_p$ = 8							; size = 4
_n$ = 12						; size = 4
_arg$ = 16						; size = 4
_genprime_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1773
	mov	eax, DWORD PTR _p$[esp-4]
	mov	cl, 42					; 0000002aH
	push	ebx
	test	eax, eax
	jne	SHORT $LN2@genprime_c
; Line 1774
	mov	bl, 46					; 0000002eH
; Line 1775
	jmp	SHORT $LN5@genprime_c
$LN2@genprime_c:
	cmp	eax, 1
	jne	SHORT $LN3@genprime_c
; Line 1776
	mov	bl, 43					; 0000002bH
; Line 1777
	jmp	SHORT $LN5@genprime_c
$LN3@genprime_c:
	cmp	eax, 2
	jne	SHORT $LN4@genprime_c
; Line 1778
	mov	bl, 42					; 0000002aH
; Line 1779
	jmp	SHORT $LN5@genprime_c
$LN4@genprime_c:
	movzx	ebx, cl
	cmp	eax, 3
	mov	ecx, 10					; 0000000aH
	cmove	ebx, ecx
$LN5@genprime_c:
; Line 1781
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	movsx	eax, bl
	push	eax
	call	DWORD PTR __imp__putc
; Line 1782
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 20					; 00000014H
; Line 1783
	mov	eax, 1
	pop	ebx
; Line 1784
	ret	0
_genprime_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_word
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_w$ = 12						; size = 4
_print_word PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 511
	push	DWORD PTR _w$[esp-4]
	push	OFFSET ??_C@_02EMFKHFLK@?$CFX?$AA@
	push	DWORD PTR _bp$[esp+4]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 512
	ret	0
_print_word ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 144
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 151
	push	64					; 00000040H
	xor	ebp, ebp
	push	OFFSET _rnd_seed
	mov	DWORD PTR _results, ebp
	call	_RAND_seed
; Line 153
	mov	esi, DWORD PTR _argc$[esp+20]
	add	esp, 8
; Line 154
	mov	edi, DWORD PTR _argv$[esp+12]
	dec	esi
	add	edi, 4
; Line 155
	cmp	esi, 1
	jl	$LN58@main
$LL2@main:
; Line 156
	mov	ecx, DWORD PTR [edi]
	mov	edx, OFFSET ??_C@_08MHCNMJNI@?9results?$AA@
	mov	eax, ecx
	npad	7
$LL50@main:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN51@main
	test	bl, bl
	je	SHORT $LN52@main
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN51@main
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL50@main
$LN52@main:
	xor	eax, eax
	jmp	SHORT $LN53@main
$LN51@main:
	sbb	eax, eax
	or	eax, 1
$LN53@main:
	test	eax, eax
	jne	SHORT $LN4@main
; Line 157
	mov	DWORD PTR _results, 1
	jmp	SHORT $LN6@main
$LN4@main:
; Line 158
	mov	eax, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	npad	6
$LL54@main:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN55@main
	test	dl, dl
	je	SHORT $LN56@main
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN55@main
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL54@main
$LN56@main:
	xor	eax, eax
	jmp	SHORT $LN57@main
$LN55@main:
	sbb	eax, eax
	or	eax, 1
$LN57@main:
	test	eax, eax
	jne	SHORT $LN6@main
; Line 159
	dec	esi
	cmp	esi, 1
	jl	SHORT $LN58@main
; Line 161
	mov	ebp, DWORD PTR [edi+4]
	add	edi, 4
$LN6@main:
; Line 163
	dec	esi
; Line 164
	add	edi, 4
	cmp	esi, 1
	jge	$LL2@main
$LN58@main:
; Line 167
	call	_BN_CTX_new
	mov	edi, eax
; Line 168
	test	edi, edi
	jne	SHORT $LN8@main
; Line 169
	push	1
	call	DWORD PTR __imp__exit
$LN60@main:
$LN8@main:
; Line 171
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 172
	test	esi, esi
	jne	SHORT $LN9@main
; Line 173
	push	1
	call	DWORD PTR __imp__exit
$LN61@main:
$LN9@main:
; Line 174
	mov	ebx, DWORD PTR __imp____acrt_iob_func
	test	ebp, ebp
	jne	$LN10@main
; Line 175
	push	1
	call	ebx
	push	eax
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN12@main:
; Line 183
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN13@main
; Line 184
	push	OFFSET ??_C@_0BD@EOGHNCOD@obase?$DN16?6ibase?$DN16?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
$LN13@main:
; Line 186
	push	OFFSET ??_C@_06PDMDCKOO@BN_add?$AA@
	push	esi
	call	_message
; Line 187
	push	esi
	call	_test_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$65
; Line 189
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 191
	push	OFFSET ??_C@_06ECGNNLDL@BN_sub?$AA@
	push	esi
	call	_message
; Line 192
	push	esi
	call	_test_sub
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$err$65
; Line 194
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 196
	push	OFFSET ??_C@_0L@JGGNNPCB@BN_lshift1?$AA@
	push	esi
	call	_message
; Line 197
	push	esi
	call	_test_lshift1
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$err$65
; Line 199
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 201
	push	OFFSET ??_C@_0BC@OLFMMJOC@BN_lshift?5?$CIfixed?$CJ?$AA@
	push	esi
	call	_message
; Line 202
	push	0
	push	25					; 00000019H
	push	OFFSET _lst
	call	_BN_bin2bn
	push	eax
	push	edi
	push	esi
	call	_test_lshift
	add	esp, 48					; 00000030H
	test	eax, eax
	je	$err$65
; Line 204
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 206
	push	OFFSET ??_C@_09DFKJKPHA@BN_lshift?$AA@
	push	esi
	call	_message
; Line 207
	push	0
	push	edi
	push	esi
	call	_test_lshift
	add	esp, 36					; 00000024H
	test	eax, eax
	je	$err$65
; Line 209
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 211
	push	OFFSET ??_C@_0L@PPFMPMDI@BN_rshift1?$AA@
	push	esi
	call	_message
; Line 212
	push	esi
	call	_test_rshift1
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$err$65
; Line 214
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 216
	push	OFFSET ??_C@_09CEIEIOD@BN_rshift?$AA@
	push	esi
	call	_message
; Line 217
	push	edi
	push	esi
	call	_test_rshift
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 219
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 221
	push	OFFSET ??_C@_06PKGGBLG@BN_sqr?$AA@
	push	esi
	call	_message
; Line 222
	push	edi
	push	esi
	call	_test_sqr
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 224
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 226
	push	OFFSET ??_C@_06GMCINGBJ@BN_mul?$AA@
	push	esi
	call	_message
; Line 227
	push	esi
	call	_test_mul
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$err$65
; Line 229
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 231
	push	OFFSET ??_C@_06LEDBDJFM@BN_div?$AA@
	push	esi
	call	_message
; Line 232
	push	edi
	push	esi
	call	_test_div
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 234
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 236
	push	OFFSET ??_C@_0M@FGELACMP@BN_div_word?$AA@
	push	esi
	call	_message
; Line 237
	push	esi
	call	_test_div_word
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$err$65
; Line 239
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 241
	push	OFFSET ??_C@_0M@MCFMHDMJ@BN_div_recp?$AA@
	push	esi
	call	_message
; Line 242
	push	edi
	push	esi
	call	_test_div_recp
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 244
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 246
	push	OFFSET ??_C@_06LFEAHKLH@BN_mod?$AA@
	push	esi
	call	_message
; Line 247
	push	edi
	push	esi
	call	_test_mod
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 249
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 251
	push	OFFSET ??_C@_0L@HKMMGKHH@BN_mod_mul?$AA@
	push	esi
	call	_message
; Line 252
	push	edi
	push	esi
	call	_test_mod_mul
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 254
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 256
	push	OFFSET ??_C@_07BDHEFPHB@BN_mont?$AA@
	push	esi
	call	_message
; Line 257
	push	edi
	push	esi
	call	_test_mont
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 259
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 261
	push	OFFSET ??_C@_0L@FBNHIMJG@BN_mod_exp?$AA@
	push	esi
	call	_message
; Line 262
	push	edi
	push	esi
	call	_test_mod_exp
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 264
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 266
	push	OFFSET ??_C@_0BK@MLKANOIE@BN_mod_exp_mont_consttime?$AA@
	push	esi
	call	_message
; Line 267
	push	edi
	push	esi
	call	_test_mod_exp_mont_consttime
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 269
	push	edi
	push	esi
	call	_test_mod_exp_mont5
	add	esp, 8
	test	eax, eax
	je	$err$65
; Line 271
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 273
	push	OFFSET ??_C@_06EHDDDAPI@BN_exp?$AA@
	push	esi
	call	_message
; Line 274
	push	edi
	push	esi
	call	_test_exp
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 276
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 278
	push	OFFSET ??_C@_0N@DMHLACD@BN_kronecker?$AA@
	push	esi
	call	_message
; Line 279
	push	edi
	push	esi
	call	_test_kron
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 281
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 283
	push	OFFSET ??_C@_0M@MDECKEMJ@BN_mod_sqrt?$AA@
	push	esi
	call	_message
; Line 284
	push	edi
	push	esi
	call	_test_sqrt
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 286
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 288
	push	OFFSET ??_C@_0M@DNFCPHKL@BN_GF2m_add?$AA@
	push	esi
	call	_message
; Line 289
	push	esi
	call	_test_gf2m_add
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$err$65
; Line 291
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 293
	push	OFFSET ??_C@_0M@HLNBKHPC@BN_GF2m_mod?$AA@
	push	esi
	call	_message
; Line 294
	push	esi
	call	_test_gf2m_mod
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$err$65
; Line 296
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 298
	push	OFFSET ??_C@_0BA@EHNBDAPH@BN_GF2m_mod_mul?$AA@
	push	esi
	call	_message
; Line 299
	push	edi
	push	esi
	call	_test_gf2m_mod_mul
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 301
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 303
	push	OFFSET ??_C@_0BA@CEFPIHFI@BN_GF2m_mod_sqr?$AA@
	push	esi
	call	_message
; Line 304
	push	edi
	push	esi
	call	_test_gf2m_mod_sqr
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 306
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 308
	push	OFFSET ??_C@_0BA@GIONBBOK@BN_GF2m_mod_inv?$AA@
	push	esi
	call	_message
; Line 309
	push	edi
	push	esi
	call	_test_gf2m_mod_inv
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 311
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 313
	push	OFFSET ??_C@_0BA@JPMINPLC@BN_GF2m_mod_div?$AA@
	push	esi
	call	_message
; Line 314
	push	edi
	push	esi
	call	_test_gf2m_mod_div
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 316
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 318
	push	OFFSET ??_C@_0BA@GMMKNGBG@BN_GF2m_mod_exp?$AA@
	push	esi
	call	_message
; Line 319
	push	edi
	push	esi
	call	_test_gf2m_mod_exp
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$65
; Line 321
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 323
	push	OFFSET ??_C@_0BB@COMHDKLD@BN_GF2m_mod_sqrt?$AA@
	push	esi
	call	_message
; Line 324
	push	edi
	push	esi
	call	_test_gf2m_mod_sqrt
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $err$65
; Line 326
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 328
	push	OFFSET ??_C@_0BH@EFEHBMGJ@BN_GF2m_mod_solve_quad?$AA@
	push	esi
	call	_message
; Line 329
	push	edi
	push	esi
	call	_test_gf2m_mod_solve_quad
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $err$65
; Line 331
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 333
	push	edi
	call	_BN_CTX_free
; Line 334
	push	esi
	call	_BIO_free
	add	esp, 24					; 00000018H
; Line 336
	push	0
	call	DWORD PTR __imp__exit
$LN62@main:
$LN10@main:
; Line 177
	push	ebp
	push	5
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN12@main
; Line 178
	push	ebp
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 179
	push	1
	call	DWORD PTR __imp__exit
$LN63@main:
$err$65:
; Line 338
	push	OFFSET ??_C@_02NPPIEBMA@1?6?$AA@
	push	esi
	call	_BIO_puts
; Line 341
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 342
	call	_ERR_load_crypto_strings
; Line 343
	push	2
	call	ebx
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 32					; 00000020H
; Line 344
	push	1
	call	DWORD PTR __imp__exit
$LN64@main:
$LN59@main:
	int	3
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _message
_TEXT	SEGMENT
_out$ = 8						; size = 4
_m$ = 12						; size = 4
_message PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 136
	push	esi
; Line 137
	push	DWORD PTR _m$[esp]
	push	OFFSET ??_C@_08JLPEBMLN@test?5?$CFs?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 138
	mov	esi, DWORD PTR _out$[esp+12]
	push	OFFSET ??_C@_0N@BEDFMCGA@print?5?$CCtest?5?$AA@
	push	esi
	call	_BIO_puts
; Line 139
	push	DWORD PTR _m$[esp+20]
	push	esi
	call	_BIO_puts
; Line 140
	push	OFFSET ??_C@_04NOOBNABM@?2n?$CC?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 36					; 00000024H
	pop	esi
; Line 141
	ret	0
_message ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rand_neg
_TEXT	SEGMENT
_rand_neg PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
	inc	ecx
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 2154
	ret	0
_rand_neg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_sqrt
_TEXT	SEGMENT
tv403 = -64						; size = 4
_ret$1$ = -60						; size = 4
_j$1$ = -56						; size = 4
_i$1$ = -52						; size = 4
_cb$ = -48						; size = 12
_primes$1 = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_sqrt PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1888
	mov	eax, 64					; 00000040H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+64], eax
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+68]
	push	esi
	push	edi
; Line 1892
	mov	DWORD PTR _ret$1$[esp+80], 0
; Line 1894
	call	_BN_new
	mov	esi, eax
; Line 1895
	call	_BN_new
	mov	ebx, eax
; Line 1896
	call	_BN_new
	mov	edi, eax
; Line 1897
	test	esi, esi
	je	$LN29@test_sqrt
	test	ebx, ebx
	je	$err$61
	test	edi, edi
	je	$err$61
; Line 1902
	xor	ecx, ecx
	mov	DWORD PTR _cb$[esp+80], 2
	mov	DWORD PTR _cb$[esp+84], 0
	mov	DWORD PTR _cb$[esp+88], OFFSET _genprime_cb
	mov	DWORD PTR _i$1$[esp+80], ecx
	mov	DWORD PTR tv403[esp+80], 1
$LL4@test_sqrt:
; Line 1903
	cmp	ecx, 8
	jge	SHORT $LN10@test_sqrt
; Line 1904
	mov	DWORD PTR _primes$1[esp+80], 2
	mov	DWORD PTR _primes$1[esp+84], 3
	mov	DWORD PTR _primes$1[esp+88], 5
	mov	DWORD PTR _primes$1[esp+92], 7
	mov	DWORD PTR _primes$1[esp+96], 11		; 0000000bH
	mov	DWORD PTR _primes$1[esp+100], 13	; 0000000dH
	mov	DWORD PTR _primes$1[esp+104], 17	; 00000011H
	mov	DWORD PTR _primes$1[esp+108], 19	; 00000013H
; Line 1906
	push	DWORD PTR _primes$1[esp+ecx*4+80]
	push	ebx
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$err$61
; Line 1908
	jmp	SHORT $LN11@test_sqrt
$LN10@test_sqrt:
; Line 1909
	push	32					; 00000020H
	push	esi
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$err$61
; Line 1911
	push	DWORD PTR tv403[esp+80]
	push	edi
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$err$61
; Line 1914
	lea	eax, DWORD PTR _cb$[esp+80]
	push	eax
	push	edi
	push	esi
	push	0
	push	256					; 00000100H
	push	ebx
	call	_BN_generate_prime_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$err$61
; Line 1916
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	10					; 0000000aH
	call	DWORD PTR __imp__putc
	add	esp, 12					; 0000000cH
$LN11@test_sqrt:
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
; Line 1920
	mov	DWORD PTR _j$1$[esp+80], 0
; Line 2153
	inc	ecx
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 1918
	mov	DWORD PTR [ebx+12], eax
$LL7@test_sqrt:
; Line 1925
	push	3
	push	0
	push	256					; 00000100H
	push	edi
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1927
	push	ebp
	push	ebx
	push	edi
	push	edi
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1929
	push	ebp
	push	ebx
	push	edi
	push	edi
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1931
	push	3
	push	0
	push	256					; 00000100H
	push	esi
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1933
	push	ebp
	push	ebx
	push	esi
	push	esi
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1935
	push	ebp
	push	ebx
	push	esi
	push	esi
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1937
	push	ebp
	push	edi
	push	esi
	push	esi
	call	_BN_mul
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1939
	call	_rand_neg
	test	eax, eax
	je	SHORT $LN24@test_sqrt
; Line 1940
	push	ebx
	push	esi
	push	esi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$61
$LN24@test_sqrt:
; Line 1943
	push	ebp
	push	ebx
	push	esi
	push	edi
	call	_BN_mod_sqrt
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1945
	push	ebp
	push	ebx
	push	edi
	push	edi
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1948
	push	ebp
	push	ebx
	push	esi
	push	esi
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$61
; Line 1951
	push	edi
	push	esi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	$LN48@test_sqrt
; Line 1962
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	46					; 0000002eH
	call	DWORD PTR __imp__putc
; Line 1963
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	call	DWORD PTR __imp__fflush
	mov	eax, DWORD PTR _j$1$[esp+100]
	add	esp, 20					; 00000014H
	inc	eax
	mov	DWORD PTR _j$1$[esp+80], eax
	cmp	eax, 5
	jl	$LL7@test_sqrt
; Line 1966
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	10					; 0000000aH
	call	DWORD PTR __imp__putc
; Line 1967
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	call	DWORD PTR __imp__fflush
	mov	edx, DWORD PTR tv403[esp+100]
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _i$1$[esp+80]
	add	edx, 2
	inc	ecx
	mov	DWORD PTR tv403[esp+80], edx
	mov	DWORD PTR _i$1$[esp+80], ecx
	cmp	edx, 33					; 00000021H
	jl	$LL4@test_sqrt
; Line 1969
	mov	DWORD PTR _ret$1$[esp+80], 1
	jmp	$err$61
$LN48@test_sqrt:
; Line 1952
	mov	ebp, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0BJ@DIFEADOC@BN_mod_sqrt?5failed?3?5a?5?$DN?5?$AA@
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1953
	push	esi
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 1954
	push	OFFSET ??_C@_06PHDFDIKP@?0?5r?5?$DN?5?$AA@
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1955
	push	edi
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 1956
	push	OFFSET ??_C@_06INPFGLMP@?0?5p?5?$DN?5?$AA@
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1957
	push	ebx
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 1958
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$61:
; Line 1972
	push	esi
	call	_BN_free
	add	esp, 4
$LN29@test_sqrt:
; Line 1973
	test	ebx, ebx
	je	SHORT $LN30@test_sqrt
; Line 1974
	push	ebx
	call	_BN_free
	add	esp, 4
$LN30@test_sqrt:
; Line 1975
	test	edi, edi
	je	SHORT $LN59@test_sqrt
; Line 1976
	push	edi
	call	_BN_free
	add	esp, 4
$LN59@test_sqrt:
; Line 1978
	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	mov	eax, DWORD PTR _ret$1$[esp+80]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
_test_sqrt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_kron
_TEXT	SEGMENT
_a$1$ = -24						; size = 4
_ret$1$ = -20						; size = 4
_i$1$ = -16						; size = 4
_cb$ = -12						; size = 12
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_kron PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1787
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1792
	mov	DWORD PTR _ret$1$[esp+40], 0
; Line 1794
	call	_BN_new
	mov	ebp, eax
	mov	DWORD PTR _a$1$[esp+40], ebp
; Line 1795
	call	_BN_new
	mov	esi, eax
; Line 1796
	call	_BN_new
	mov	edi, eax
; Line 1797
	call	_BN_new
	mov	ebx, eax
; Line 1798
	test	ebp, ebp
	je	$LN25@test_kron
	test	esi, esi
	je	$err$50
	test	edi, edi
	je	$err$50
	test	ebx, ebx
	je	$err$50
; Line 1813
	lea	eax, DWORD PTR _cb$[esp+40]
	mov	DWORD PTR _cb$[esp+40], 2
	push	eax
	push	0
	push	0
	push	0
	push	512					; 00000200H
	push	esi
	mov	DWORD PTR _cb$[esp+68], 0
	mov	DWORD PTR _cb$[esp+72], OFFSET _genprime_cb
	call	_BN_generate_prime_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$err$50
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
	inc	ecx
; Line 1816
	push	2
; Line 2153
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 1815
	mov	DWORD PTR [esi+12], eax
; Line 1816
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	10					; 0000000aH
	call	DWORD PTR __imp__putc
	add	esp, 12					; 0000000cH
; Line 1818
	mov	DWORD PTR _i$1$[esp+40], 0
$LL4@test_kron:
; Line 1819
	push	0
	push	0
	push	512					; 00000200H
	push	ebp
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$50
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
	inc	ecx
; Line 1824
	push	esi
	push	ebx
; Line 2153
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 1821
	mov	DWORD PTR [ebp+12], eax
; Line 1824
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$err$50
; Line 1827
	push	1
	push	ebx
	mov	DWORD PTR [ebx+12], 0
	call	_BN_sub_word
	add	esp, 8
	test	eax, eax
	je	$err$50
; Line 1829
	push	ebx
	push	ebx
	call	_BN_rshift1
	add	esp, 8
	test	eax, eax
	je	$err$50
; Line 1834
	push	DWORD PTR _ctx$[esp+36]
	mov	DWORD PTR [esi+12], 0
	push	esi
	push	ebx
	push	ebp
	push	edi
	call	_BN_mod_exp_recp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$50
; Line 1836
	mov	DWORD PTR [esi+12], 1
; Line 1838
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, 1
	jne	SHORT $LN16@test_kron
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN16@test_kron
	cmp	DWORD PTR [edi+12], 0
	jne	SHORT $LN16@test_kron
; Line 1839
	mov	ebp, ecx
	jmp	SHORT $LN19@test_kron
$LN16@test_kron:
; Line 1840
	test	ecx, ecx
	jne	SHORT $LN18@test_kron
; Line 1841
	xor	ebp, ebp
	jmp	SHORT $LN19@test_kron
$LN18@test_kron:
; Line 1843
	push	1
	push	edi
	call	_BN_add_word
	add	esp, 8
	test	eax, eax
	je	$err$50
; Line 1845
	push	esi
	push	edi
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	jne	$LN41@test_kron
; Line 1849
	or	ebp, -1
$LN19@test_kron:
; Line 1852
	push	DWORD PTR _ctx$[esp+36]
	push	esi
	push	DWORD PTR _a$1$[esp+48]
	call	_BN_kronecker
	add	esp, 12					; 0000000cH
; Line 1853
	cmp	eax, -1
	jl	SHORT $LN48@test_kron
; Line 1856
	mov	ecx, DWORD PTR _a$1$[esp+40]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN23@test_kron
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN23@test_kron
; Line 1857
	neg	eax
$LN23@test_kron:
; Line 1859
	cmp	ebp, eax
	jne	$LN43@test_kron
; Line 1868
	mov	ebp, DWORD PTR __imp____acrt_iob_func
	push	2
	call	ebp
	push	eax
	push	46					; 0000002eH
	call	DWORD PTR __imp__putc
; Line 1869
	push	2
	call	ebp
	push	eax
	call	DWORD PTR __imp__fflush
	mov	eax, DWORD PTR _i$1$[esp+60]
	add	esp, 20					; 00000014H
	mov	ebp, DWORD PTR _a$1$[esp+40]
	inc	eax
	mov	DWORD PTR _i$1$[esp+40], eax
	cmp	eax, 100				; 00000064H
	jl	$LL4@test_kron
; Line 1872
	mov	ebp, DWORD PTR __imp____acrt_iob_func
	push	2
	call	ebp
	push	eax
	push	10					; 0000000aH
	call	DWORD PTR __imp__putc
; Line 1873
	push	2
	call	ebp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 20					; 00000014H
; Line 1874
	mov	DWORD PTR _ret$1$[esp+40], 1
$LN48@test_kron:
	mov	ebp, DWORD PTR _a$1$[esp+40]
$err$50:
; Line 1877
	push	ebp
	call	_BN_free
	add	esp, 4
$LN25@test_kron:
; Line 1878
	test	esi, esi
	je	SHORT $LN26@test_kron
; Line 1879
	push	esi
	call	_BN_free
	add	esp, 4
$LN26@test_kron:
; Line 1880
	test	edi, edi
	je	SHORT $LN27@test_kron
; Line 1881
	push	edi
	call	_BN_free
	add	esp, 4
$LN27@test_kron:
; Line 1882
	test	ebx, ebx
	je	SHORT $LN47@test_kron
; Line 1883
	push	ebx
	call	_BN_free
	add	esp, 4
$LN47@test_kron:
; Line 1884
	mov	eax, DWORD PTR _ret$1$[esp+40]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1885
	add	esp, 24					; 00000018H
	ret	0
$LN43@test_kron:
; Line 1860
	push	OFFSET ??_C@_0BM@HAMJNDLC@legendre?5?$CB?$DN?5kronecker?$DL?5a?5?$DN?5?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1861
	mov	ebp, DWORD PTR _a$1$[esp+48]
	add	esp, 8
	push	ebp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 1862
	push	OFFSET ??_C@_06JHNFKPCN@?0?5b?5?$DN?5?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1863
	push	esi
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 1864
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1865
	jmp	$err$50
$LN41@test_kron:
; Line 1846
	push	OFFSET ??_C@_0CE@OIGHHGKE@Legendre?5symbol?5computation?5fail@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
	jmp	$err$50
_test_kron ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_mod_solve_quad
_TEXT	SEGMENT
_c$1$ = -76						; size = 4
_a$1$ = -72						; size = 4
_s$1$ = -68						; size = 4
_ctx$GSCopy$1$ = -64					; size = 4
_i$1$ = -60						; size = 4
_ret$1$ = -56						; size = 4
_b$ = -52						; size = 8
_p0$ = -44						; size = 24
_p1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_gf2m_mod_solve_quad PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1686
	mov	eax, 76					; 0000004cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	movaps	xmm0, XMMWORD PTR __xmm@000000030000000600000007000000a3
	mov	eax, DWORD PTR _ctx$[esp+72]
	push	ebx
	push	ebp
	mov	DWORD PTR _ctx$GSCopy$1$[esp+84], eax
; Line 1688
	xor	eax, eax
	movups	XMMWORD PTR _p0$[esp+84], xmm0
	push	esi
	movaps	xmm0, XMMWORD PTR __xmm@ffffffff000000000000000f000000c1
	push	edi
	mov	DWORD PTR _s$1$[esp+92], eax
	mov	DWORD PTR _ret$1$[esp+92], eax
; Line 1689
	mov	DWORD PTR _p0$[esp+108], eax
	mov	DWORD PTR _p0$[esp+112], -1
	movups	XMMWORD PTR _p1$[esp+92], xmm0
; Line 1692
	call	_BN_new
	mov	edi, eax
	mov	DWORD PTR _a$1$[esp+92], edi
; Line 1693
	call	_BN_new
	mov	esi, eax
	mov	DWORD PTR _b$[esp+92], esi
; Line 1694
	call	_BN_new
	mov	DWORD PTR _b$[esp+96], eax
; Line 1695
	call	_BN_new
	mov	DWORD PTR _c$1$[esp+92], eax
; Line 1696
	call	_BN_new
	mov	ebx, eax
; Line 1697
	call	_BN_new
	mov	ebp, eax
; Line 1699
	lea	eax, DWORD PTR _p0$[esp+92]
	push	esi
	push	eax
	call	_BN_GF2m_arr2poly
; Line 1700
	push	DWORD PTR _b$[esp+104]
	lea	eax, DWORD PTR _p1$[esp+104]
	push	eax
	call	_BN_GF2m_arr2poly
	add	esp, 16					; 00000010H
; Line 1702
	mov	DWORD PTR _i$1$[esp+92], 0
	npad	7
$LL4@test_gf2m_:
; Line 1703
	push	0
	push	0
	push	512					; 00000200H
	push	edi
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
; Line 1704
	xor	esi, esi
$LL7@test_gf2m_:
; Line 1705
	push	DWORD PTR _ctx$GSCopy$1$[esp+92]
	mov	edi, DWORD PTR _b$[esp+esi*4+96]
	push	edi
	push	DWORD PTR _a$1$[esp+100]
	push	DWORD PTR _c$1$[esp+104]
	call	_BN_GF2m_mod_solve_quad
	add	esp, 16					; 00000010H
; Line 1706
	test	eax, eax
	je	SHORT $LN26@test_gf2m_
; Line 1708
	push	DWORD PTR _ctx$GSCopy$1$[esp+92]
	inc	DWORD PTR _s$1$[esp+96]
	push	edi
	push	DWORD PTR _c$1$[esp+100]
	push	ebx
	call	_BN_GF2m_mod_sqr
; Line 1709
	push	ebx
	push	DWORD PTR _c$1$[esp+112]
	push	ebx
	call	_BN_GF2m_add
; Line 1710
	push	edi
	mov	edi, DWORD PTR _a$1$[esp+124]
	push	edi
	push	ebp
	call	_BN_GF2m_mod
; Line 1724
	push	ebx
	push	ebp
	push	ebp
	call	_BN_GF2m_add
	add	esp, 52					; 00000034H
; Line 1728
	cmp	DWORD PTR [ebp+4], 0
	je	SHORT $LN5@test_gf2m_
; Line 1729
	push	OFFSET ??_C@_0CO@NJAPFKHH@GF?$CI2?$FOm?$CJ?5modular?5solve?5quadratic?5@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1731
	jmp	SHORT $err$28
$LN26@test_gf2m_:
	mov	edi, DWORD PTR _a$1$[esp+92]
$LN5@test_gf2m_:
; Line 1704
	inc	esi
	cmp	esi, 2
	jl	SHORT $LL7@test_gf2m_
; Line 1702
	mov	eax, DWORD PTR _i$1$[esp+92]
	inc	eax
	mov	DWORD PTR _i$1$[esp+92], eax
	cmp	eax, 100				; 00000064H
	jl	$LL4@test_gf2m_
; Line 1750
	mov	eax, DWORD PTR _s$1$[esp+92]
	test	eax, eax
	jne	SHORT $LN11@test_gf2m_
; Line 1751
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	100					; 00000064H
	push	OFFSET ??_C@_0EH@OMEFNDG@All?5?$CFi?5tests?5of?5GF?$CI2?$FOm?$CJ?5modular?5@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 1754
	push	OFFSET ??_C@_0DI@NKPDGFDH@this?5is?5very?5unlikely?5and?5probab@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1756
	jmp	SHORT $err$28
$LN11@test_gf2m_:
; Line 1758
	mov	DWORD PTR _ret$1$[esp+92], 1
$err$28:
; Line 1760
	push	edi
	call	_BN_free
; Line 1761
	push	DWORD PTR _b$[esp+96]
	call	_BN_free
; Line 1762
	push	DWORD PTR _b$[esp+104]
	call	_BN_free
; Line 1763
	push	DWORD PTR _c$1$[esp+104]
	call	_BN_free
; Line 1764
	push	ebx
	call	_BN_free
; Line 1765
	push	ebp
	call	_BN_free
; Line 1767
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	add	esp, 24					; 00000018H
	mov	eax, DWORD PTR _ret$1$[esp+92]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	0
_test_gf2m_mod_solve_quad ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_mod_sqrt
_TEXT	SEGMENT
_e$1$ = -76						; size = 4
_f$1$ = -72						; size = 4
_ctx$GSCopy$1$ = -68					; size = 4
_d$1$ = -64						; size = 4
_i$1$ = -60						; size = 4
_ret$1$ = -56						; size = 4
_b$ = -52						; size = 8
_p0$ = -44						; size = 24
_p1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_gf2m_mod_sqrt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1631
	mov	eax, 76					; 0000004cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	movaps	xmm0, XMMWORD PTR __xmm@000000030000000600000007000000a3
	mov	eax, DWORD PTR _ctx$[esp+72]
	push	ebx
	push	ebp
	movups	XMMWORD PTR _p0$[esp+84], xmm0
	push	esi
	movaps	xmm0, XMMWORD PTR __xmm@ffffffff000000000000000f000000c1
	push	edi
	mov	DWORD PTR _ctx$GSCopy$1$[esp+92], eax
; Line 1633
	mov	DWORD PTR _ret$1$[esp+92], 0
; Line 1634
	mov	DWORD PTR _p0$[esp+108], 0
	mov	DWORD PTR _p0$[esp+112], -1
	movups	XMMWORD PTR _p1$[esp+92], xmm0
; Line 1637
	call	_BN_new
	mov	ebx, eax
; Line 1638
	call	_BN_new
	mov	esi, eax
	mov	DWORD PTR _b$[esp+92], esi
; Line 1639
	call	_BN_new
	mov	edi, eax
	mov	DWORD PTR _b$[esp+96], edi
; Line 1640
	call	_BN_new
	mov	ebp, eax
; Line 1641
	call	_BN_new
	mov	DWORD PTR _d$1$[esp+92], eax
; Line 1642
	call	_BN_new
	mov	DWORD PTR _e$1$[esp+92], eax
; Line 1643
	call	_BN_new
	mov	DWORD PTR _f$1$[esp+92], eax
; Line 1645
	lea	eax, DWORD PTR _p0$[esp+92]
	push	esi
	push	eax
	call	_BN_GF2m_arr2poly
; Line 1646
	lea	eax, DWORD PTR _p1$[esp+100]
	push	edi
	push	eax
	call	_BN_GF2m_arr2poly
	add	esp, 16					; 00000010H
; Line 1648
	mov	DWORD PTR _i$1$[esp+92], 0
$LL4@test_gf2m_:
; Line 1649
	push	0
	push	0
	push	512					; 00000200H
	push	ebx
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
; Line 1650
	xor	esi, esi
$LL7@test_gf2m_:
; Line 1651
	mov	edi, DWORD PTR _b$[esp+esi*4+92]
	push	edi
	push	ebx
	push	ebp
	call	_BN_GF2m_mod
; Line 1652
	push	DWORD PTR _ctx$GSCopy$1$[esp+104]
	push	edi
	push	ebx
	push	DWORD PTR _d$1$[esp+116]
	call	_BN_GF2m_mod_sqrt
; Line 1653
	push	DWORD PTR _ctx$GSCopy$1$[esp+120]
	push	edi
	mov	edi, DWORD PTR _d$1$[esp+128]
	push	edi
	push	DWORD PTR _e$1$[esp+132]
	call	_BN_GF2m_mod_sqr
; Line 1665
	push	DWORD PTR _e$1$[esp+136]
	push	ebp
	push	DWORD PTR _f$1$[esp+144]
	call	_BN_GF2m_add
; Line 1667
	mov	eax, DWORD PTR _f$1$[esp+148]
	add	esp, 56					; 00000038H
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN12@test_gf2m_
; Line 1650
	inc	esi
	cmp	esi, 2
	jl	SHORT $LL7@test_gf2m_
; Line 1648
	mov	eax, DWORD PTR _i$1$[esp+92]
	inc	eax
	mov	DWORD PTR _i$1$[esp+92], eax
	cmp	eax, 100				; 00000064H
	jl	SHORT $LL4@test_gf2m_
; Line 1673
	mov	DWORD PTR _ret$1$[esp+92], 1
	jmp	SHORT $err$20
$LN12@test_gf2m_:
; Line 1668
	push	OFFSET ??_C@_0CK@IEIKOPFA@GF?$CI2?$FOm?$CJ?5modular?5square?5root?5test@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$20:
; Line 1675
	push	ebx
	call	_BN_free
; Line 1676
	push	DWORD PTR _b$[esp+96]
	call	_BN_free
; Line 1677
	push	DWORD PTR _b$[esp+104]
	call	_BN_free
; Line 1678
	push	ebp
	call	_BN_free
; Line 1679
	push	edi
	call	_BN_free
; Line 1680
	push	DWORD PTR _e$1$[esp+112]
	call	_BN_free
; Line 1681
	push	DWORD PTR _f$1$[esp+116]
	call	_BN_free
; Line 1683
	mov	ecx, DWORD PTR __$ArrayPad$[esp+120]
	add	esp, 28					; 0000001cH
	mov	eax, DWORD PTR _ret$1$[esp+92]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	0
_test_gf2m_mod_sqrt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_mod_exp
_TEXT	SEGMENT
_ctx$GSCopy$1$ = -76					; size = 4
_c$1$ = -72						; size = 4
_d$1$ = -68						; size = 4
_a$1$ = -64						; size = 4
_b$ = -60						; size = 8
_i$1$ = -52						; size = 4
_ret$1$ = -48						; size = 4
_p0$ = -44						; size = 24
_p1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_gf2m_mod_exp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1563
	mov	eax, 76					; 0000004cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	movaps	xmm0, XMMWORD PTR __xmm@000000030000000600000007000000a3
	mov	eax, DWORD PTR _ctx$[esp+72]
	push	ebx
	push	ebp
	movups	XMMWORD PTR _p0$[esp+84], xmm0
	push	esi
	movaps	xmm0, XMMWORD PTR __xmm@ffffffff000000000000000f000000c1
	push	edi
	mov	DWORD PTR _ctx$GSCopy$1$[esp+92], eax
; Line 1565
	mov	DWORD PTR _ret$1$[esp+92], 0
; Line 1566
	mov	DWORD PTR _p0$[esp+108], 0
	mov	DWORD PTR _p0$[esp+112], -1
	movups	XMMWORD PTR _p1$[esp+92], xmm0
; Line 1569
	call	_BN_new
	mov	edi, eax
	mov	DWORD PTR _a$1$[esp+92], edi
; Line 1570
	call	_BN_new
	mov	DWORD PTR _b$[esp+92], eax
; Line 1571
	call	_BN_new
	mov	DWORD PTR _b$[esp+96], eax
; Line 1572
	call	_BN_new
	mov	ebx, eax
	mov	DWORD PTR _c$1$[esp+92], ebx
; Line 1573
	call	_BN_new
	mov	DWORD PTR _d$1$[esp+92], eax
; Line 1574
	call	_BN_new
	mov	ebp, eax
; Line 1575
	call	_BN_new
; Line 1577
	push	DWORD PTR _b$[esp+92]
	mov	esi, eax
	lea	eax, DWORD PTR _p0$[esp+96]
	push	eax
	call	_BN_GF2m_arr2poly
; Line 1578
	push	DWORD PTR _b$[esp+104]
	lea	eax, DWORD PTR _p1$[esp+104]
	push	eax
	call	_BN_GF2m_arr2poly
	add	esp, 16					; 00000010H
; Line 1580
	mov	DWORD PTR _i$1$[esp+92], 0
	jmp	SHORT $LN4@test_gf2m_
	npad	7
$LL19@test_gf2m_:
	mov	ebx, DWORD PTR _c$1$[esp+92]
$LN4@test_gf2m_:
; Line 1581
	push	0
	push	0
	push	512					; 00000200H
	push	edi
	call	_BN_bntest_rand
; Line 1582
	push	0
	push	0
	push	512					; 00000200H
	push	ebx
	call	_BN_bntest_rand
; Line 1583
	push	0
	push	0
	push	512					; 00000200H
	push	DWORD PTR _d$1$[esp+136]
	call	_BN_bntest_rand
	add	esp, 48					; 00000030H
; Line 1584
	xor	ebx, ebx
	npad	7
$LL7@test_gf2m_:
; Line 1585
	push	DWORD PTR _ctx$GSCopy$1$[esp+92]
	mov	edi, DWORD PTR _b$[esp+ebx*4+96]
	push	edi
	push	DWORD PTR _c$1$[esp+100]
	push	DWORD PTR _a$1$[esp+104]
	push	ebp
	call	_BN_GF2m_mod_exp
; Line 1586
	push	DWORD PTR _ctx$GSCopy$1$[esp+112]
	push	edi
	push	DWORD PTR _d$1$[esp+120]
	push	DWORD PTR _a$1$[esp+124]
	push	esi
	call	_BN_GF2m_mod_exp
; Line 1587
	push	DWORD PTR _ctx$GSCopy$1$[esp+132]
	push	edi
	push	esi
	push	ebp
	push	ebp
	call	_BN_GF2m_mod_mul
; Line 1588
	push	DWORD PTR _d$1$[esp+152]
	push	DWORD PTR _c$1$[esp+156]
	push	esi
	call	_BN_add
	add	esp, 72					; 00000048H
; Line 1589
	push	DWORD PTR _ctx$GSCopy$1$[esp+92]
	push	edi
	mov	edi, DWORD PTR _a$1$[esp+100]
	push	esi
	push	edi
	push	esi
	call	_BN_GF2m_mod_exp
; Line 1609
	push	esi
	push	ebp
	push	esi
	call	_BN_GF2m_add
	add	esp, 32					; 00000020H
; Line 1611
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN12@test_gf2m_
; Line 1584
	inc	ebx
	cmp	ebx, 2
	jl	SHORT $LL7@test_gf2m_
; Line 1580
	mov	eax, DWORD PTR _i$1$[esp+92]
	inc	eax
	mov	DWORD PTR _i$1$[esp+92], eax
	cmp	eax, 100				; 00000064H
	jl	$LL19@test_gf2m_
; Line 1618
	mov	DWORD PTR _ret$1$[esp+92], 1
	jmp	SHORT $err$21
$LN12@test_gf2m_:
; Line 1612
	push	OFFSET ??_C@_0CN@DPNMKFAO@GF?$CI2?$FOm?$CJ?5modular?5exponentiation?5t@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$21:
; Line 1620
	push	edi
	call	_BN_free
; Line 1621
	push	DWORD PTR _b$[esp+96]
	call	_BN_free
; Line 1622
	push	DWORD PTR _b$[esp+104]
	call	_BN_free
; Line 1623
	push	DWORD PTR _c$1$[esp+104]
	call	_BN_free
; Line 1624
	push	DWORD PTR _d$1$[esp+108]
	call	_BN_free
; Line 1625
	push	ebp
	call	_BN_free
; Line 1626
	push	esi
	call	_BN_free
; Line 1628
	mov	ecx, DWORD PTR __$ArrayPad$[esp+120]
	add	esp, 28					; 0000001cH
	mov	eax, DWORD PTR _ret$1$[esp+92]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	0
_test_gf2m_mod_exp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_mod_div
_TEXT	SEGMENT
_c$1$ = -76						; size = 4
_d$1$ = -72						; size = 4
_e$1$ = -68						; size = 4
_b$ = -64						; size = 8
_a$1$ = -56						; size = 4
_i$1$ = -52						; size = 4
_ret$1$ = -48						; size = 4
_p0$ = -44						; size = 24
_p1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_gf2m_mod_div PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1504
	mov	eax, 76					; 0000004cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	movaps	xmm0, XMMWORD PTR __xmm@000000030000000600000007000000a3
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+80]
	movups	XMMWORD PTR _p0$[esp+84], xmm0
	push	esi
	movaps	xmm0, XMMWORD PTR __xmm@ffffffff000000000000000f000000c1
	push	edi
; Line 1506
	mov	DWORD PTR _ret$1$[esp+92], 0
; Line 1507
	mov	DWORD PTR _p0$[esp+108], 0
	mov	DWORD PTR _p0$[esp+112], -1
	movups	XMMWORD PTR _p1$[esp+92], xmm0
; Line 1510
	call	_BN_new
	mov	edi, eax
	mov	DWORD PTR _a$1$[esp+92], edi
; Line 1511
	call	_BN_new
	mov	DWORD PTR _b$[esp+92], eax
; Line 1512
	call	_BN_new
	mov	DWORD PTR _b$[esp+96], eax
; Line 1513
	call	_BN_new
	mov	esi, eax
	mov	DWORD PTR _c$1$[esp+92], esi
; Line 1514
	call	_BN_new
	mov	DWORD PTR _d$1$[esp+92], eax
; Line 1515
	call	_BN_new
	mov	DWORD PTR _e$1$[esp+92], eax
; Line 1516
	call	_BN_new
; Line 1518
	push	DWORD PTR _b$[esp+92]
	mov	ebx, eax
	lea	eax, DWORD PTR _p0$[esp+96]
	push	eax
	call	_BN_GF2m_arr2poly
; Line 1519
	push	DWORD PTR _b$[esp+104]
	lea	eax, DWORD PTR _p1$[esp+104]
	push	eax
	call	_BN_GF2m_arr2poly
	add	esp, 16					; 00000010H
; Line 1521
	mov	DWORD PTR _i$1$[esp+92], 0
	jmp	SHORT $LN4@test_gf2m_
$LL23@test_gf2m_:
	mov	esi, DWORD PTR _c$1$[esp+92]
$LN4@test_gf2m_:
; Line 1522
	push	0
	push	0
	push	512					; 00000200H
	push	edi
	call	_BN_bntest_rand
; Line 1523
	push	0
	push	0
	push	512					; 00000200H
	push	esi
	call	_BN_bntest_rand
	add	esp, 32					; 00000020H
; Line 1524
	xor	esi, esi
	npad	2
$LL7@test_gf2m_:
; Line 1525
	mov	edi, DWORD PTR _b$[esp+esi*4+92]
	push	ebp
	push	edi
	push	DWORD PTR _c$1$[esp+100]
	push	DWORD PTR _a$1$[esp+104]
	push	DWORD PTR _d$1$[esp+108]
	call	_BN_GF2m_mod_div
; Line 1526
	push	ebp
	push	edi
	push	DWORD PTR _c$1$[esp+120]
	push	DWORD PTR _d$1$[esp+124]
	push	DWORD PTR _e$1$[esp+128]
	call	_BN_GF2m_mod_mul
; Line 1527
	push	ebp
	push	edi
	push	DWORD PTR _e$1$[esp+140]
	mov	edi, DWORD PTR _a$1$[esp+144]
	push	edi
	push	ebx
	call	_BN_GF2m_mod_div
	add	esp, 60					; 0000003cH
; Line 1544
	cmp	DWORD PTR [ebx+4], 1
	jne	SHORT $LN15@test_gf2m_
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN15@test_gf2m_
	cmp	DWORD PTR [ebx+12], 0
	jne	SHORT $LN15@test_gf2m_
; Line 1524
	inc	esi
	cmp	esi, 2
	jl	SHORT $LL7@test_gf2m_
; Line 1521
	mov	eax, DWORD PTR _i$1$[esp+92]
	inc	eax
	mov	DWORD PTR _i$1$[esp+92], eax
	cmp	eax, 100				; 00000064H
	jl	$LL23@test_gf2m_
; Line 1550
	mov	DWORD PTR _ret$1$[esp+92], 1
	jmp	SHORT $err$25
$LN15@test_gf2m_:
; Line 1545
	push	OFFSET ??_C@_0CH@OFOLLHLF@GF?$CI2?$FOm?$CJ?5modular?5division?5test?5fa@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$25:
; Line 1552
	push	edi
	call	_BN_free
; Line 1553
	push	DWORD PTR _b$[esp+96]
	call	_BN_free
; Line 1554
	push	DWORD PTR _b$[esp+104]
	call	_BN_free
; Line 1555
	push	DWORD PTR _c$1$[esp+104]
	call	_BN_free
; Line 1556
	push	DWORD PTR _d$1$[esp+108]
	call	_BN_free
; Line 1557
	push	DWORD PTR _e$1$[esp+112]
	call	_BN_free
; Line 1558
	push	ebx
	call	_BN_free
; Line 1560
	mov	ecx, DWORD PTR __$ArrayPad$[esp+120]
	add	esp, 28					; 0000001cH
	mov	eax, DWORD PTR _ret$1$[esp+92]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	0
_test_gf2m_mod_div ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_mod_inv
_TEXT	SEGMENT
_ctx$GSCopy$1$ = -68					; size = 4
_c$1$ = -64						; size = 4
_i$1$ = -60						; size = 4
_ret$1$ = -56						; size = 4
_b$ = -52						; size = 8
_p0$ = -44						; size = 24
_p1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_gf2m_mod_inv PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1453
	mov	eax, 68					; 00000044H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+68], eax
	movaps	xmm0, XMMWORD PTR __xmm@000000030000000600000007000000a3
	mov	eax, DWORD PTR _ctx$[esp+64]
	push	ebx
	push	ebp
	movups	XMMWORD PTR _p0$[esp+76], xmm0
	push	esi
	movaps	xmm0, XMMWORD PTR __xmm@ffffffff000000000000000f000000c1
	push	edi
	mov	DWORD PTR _ctx$GSCopy$1$[esp+84], eax
; Line 1455
	mov	DWORD PTR _ret$1$[esp+84], 0
; Line 1456
	mov	DWORD PTR _p0$[esp+100], 0
	mov	DWORD PTR _p0$[esp+104], -1
	movups	XMMWORD PTR _p1$[esp+84], xmm0
; Line 1459
	call	_BN_new
	mov	ebp, eax
; Line 1460
	call	_BN_new
	mov	esi, eax
	mov	DWORD PTR _b$[esp+84], esi
; Line 1461
	call	_BN_new
	mov	edi, eax
	mov	DWORD PTR _b$[esp+88], edi
; Line 1462
	call	_BN_new
	mov	DWORD PTR _c$1$[esp+84], eax
; Line 1463
	call	_BN_new
	mov	ebx, eax
; Line 1465
	lea	eax, DWORD PTR _p0$[esp+84]
	push	esi
	push	eax
	call	_BN_GF2m_arr2poly
; Line 1466
	lea	eax, DWORD PTR _p1$[esp+92]
	push	edi
	push	eax
	call	_BN_GF2m_arr2poly
	add	esp, 16					; 00000010H
; Line 1468
	mov	DWORD PTR _i$1$[esp+84], 0
	npad	1
$LL4@test_gf2m_:
; Line 1469
	push	0
	push	0
	push	512					; 00000200H
	push	ebp
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
; Line 1470
	xor	esi, esi
$LL7@test_gf2m_:
; Line 1471
	push	DWORD PTR _ctx$GSCopy$1$[esp+84]
	mov	edi, DWORD PTR _b$[esp+esi*4+88]
	push	edi
	push	ebp
	push	DWORD PTR _c$1$[esp+96]
	call	_BN_GF2m_mod_inv
; Line 1472
	push	DWORD PTR _ctx$GSCopy$1$[esp+100]
	push	edi
	mov	edi, DWORD PTR _c$1$[esp+108]
	push	edi
	push	ebp
	push	ebx
	call	_BN_GF2m_mod_mul
	add	esp, 36					; 00000024H
; Line 1487
	cmp	DWORD PTR [ebx+4], 1
	jne	SHORT $LN15@test_gf2m_
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN15@test_gf2m_
	cmp	DWORD PTR [ebx+12], 0
	jne	SHORT $LN15@test_gf2m_
; Line 1470
	inc	esi
	cmp	esi, 2
	jl	SHORT $LL7@test_gf2m_
; Line 1468
	mov	eax, DWORD PTR _i$1$[esp+84]
	inc	eax
	mov	DWORD PTR _i$1$[esp+84], eax
	cmp	eax, 100				; 00000064H
	jl	SHORT $LL4@test_gf2m_
; Line 1493
	mov	DWORD PTR _ret$1$[esp+84], 1
	jmp	SHORT $err$24
$LN15@test_gf2m_:
; Line 1488
	push	OFFSET ??_C@_0CI@BFGLEPBL@GF?$CI2?$FOm?$CJ?5modular?5inversion?5test?5f@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$24:
; Line 1495
	push	ebp
	call	_BN_free
; Line 1496
	push	DWORD PTR _b$[esp+88]
	call	_BN_free
; Line 1497
	push	DWORD PTR _b$[esp+96]
	call	_BN_free
; Line 1498
	push	edi
	call	_BN_free
; Line 1499
	push	ebx
	call	_BN_free
; Line 1501
	mov	ecx, DWORD PTR __$ArrayPad$[esp+104]
	add	esp, 20					; 00000014H
	mov	eax, DWORD PTR _ret$1$[esp+84]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	ret	0
_test_gf2m_mod_inv ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_mod_sqr
_TEXT	SEGMENT
_ctx$GSCopy$1$ = -68					; size = 4
_c$1$ = -64						; size = 4
_i$1$ = -60						; size = 4
_ret$1$ = -56						; size = 4
_b$ = -52						; size = 8
_p0$ = -44						; size = 24
_p1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_gf2m_mod_sqr PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1398
	mov	eax, 68					; 00000044H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+68], eax
	movaps	xmm0, XMMWORD PTR __xmm@000000030000000600000007000000a3
	mov	eax, DWORD PTR _ctx$[esp+64]
	push	ebx
	push	ebp
	movups	XMMWORD PTR _p0$[esp+76], xmm0
	push	esi
	movaps	xmm0, XMMWORD PTR __xmm@ffffffff000000000000000f000000c1
	push	edi
	mov	DWORD PTR _ctx$GSCopy$1$[esp+84], eax
; Line 1400
	mov	DWORD PTR _ret$1$[esp+84], 0
; Line 1401
	mov	DWORD PTR _p0$[esp+100], 0
	mov	DWORD PTR _p0$[esp+104], -1
	movups	XMMWORD PTR _p1$[esp+84], xmm0
; Line 1404
	call	_BN_new
	mov	ebp, eax
; Line 1405
	call	_BN_new
	mov	ebx, eax
	mov	DWORD PTR _b$[esp+84], ebx
; Line 1406
	call	_BN_new
	mov	edi, eax
	mov	DWORD PTR _b$[esp+88], edi
; Line 1407
	call	_BN_new
	mov	DWORD PTR _c$1$[esp+84], eax
; Line 1408
	call	_BN_new
	mov	esi, eax
; Line 1410
	lea	eax, DWORD PTR _p0$[esp+84]
	push	ebx
	push	eax
	call	_BN_GF2m_arr2poly
; Line 1411
	lea	eax, DWORD PTR _p1$[esp+92]
	push	edi
	push	eax
	call	_BN_GF2m_arr2poly
	add	esp, 16					; 00000010H
; Line 1413
	mov	DWORD PTR _i$1$[esp+84], 0
	npad	1
$LL4@test_gf2m_:
; Line 1414
	push	0
	push	0
	push	1024					; 00000400H
	push	ebp
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
; Line 1415
	xor	ebx, ebx
$LL7@test_gf2m_:
; Line 1416
	push	DWORD PTR _ctx$GSCopy$1$[esp+84]
	mov	edi, DWORD PTR _b$[esp+ebx*4+88]
	push	edi
	push	ebp
	push	DWORD PTR _c$1$[esp+96]
	call	_BN_GF2m_mod_sqr
; Line 1417
	push	ebp
	push	esi
	call	_BN_copy
; Line 1418
	push	DWORD PTR _ctx$GSCopy$1$[esp+108]
	push	edi
	push	esi
	push	ebp
	push	esi
	call	_BN_GF2m_mod_mul
; Line 1434
	mov	edi, DWORD PTR _c$1$[esp+128]
	push	esi
	push	edi
	push	esi
	call	_BN_GF2m_add
	add	esp, 56					; 00000038H
; Line 1436
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN12@test_gf2m_
; Line 1415
	inc	ebx
	cmp	ebx, 2
	jl	SHORT $LL7@test_gf2m_
; Line 1413
	mov	eax, DWORD PTR _i$1$[esp+84]
	inc	eax
	mov	DWORD PTR _i$1$[esp+84], eax
	cmp	eax, 100				; 00000064H
	jl	SHORT $LL4@test_gf2m_
; Line 1442
	mov	DWORD PTR _ret$1$[esp+84], 1
	jmp	SHORT $err$20
$LN12@test_gf2m_:
; Line 1437
	push	OFFSET ??_C@_0CH@OJGONEIC@GF?$CI2?$FOm?$CJ?5modular?5squaring?5test?5fa@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$20:
; Line 1444
	push	ebp
	call	_BN_free
; Line 1445
	push	DWORD PTR _b$[esp+88]
	call	_BN_free
; Line 1446
	push	DWORD PTR _b$[esp+96]
	call	_BN_free
; Line 1447
	push	edi
	call	_BN_free
; Line 1448
	push	esi
	call	_BN_free
; Line 1450
	mov	ecx, DWORD PTR __$ArrayPad$[esp+104]
	add	esp, 20					; 00000014H
	mov	eax, DWORD PTR _ret$1$[esp+84]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	ret	0
_test_gf2m_mod_sqr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_mod_mul
_TEXT	SEGMENT
_a$1$ = -84						; size = 4
_ctx$GSCopy$1$ = -80					; size = 4
_e$1$ = -76						; size = 4
_g$1$ = -72						; size = 4
_h$1$ = -68						; size = 4
_b$ = -64						; size = 8
_d$1$ = -56						; size = 4
_i$1$ = -52						; size = 4
_ret$1$ = -48						; size = 4
_p0$ = -44						; size = 24
_p1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_gf2m_mod_mul PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1330
	mov	eax, 84					; 00000054H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
	movaps	xmm0, XMMWORD PTR __xmm@000000030000000600000007000000a3
	mov	eax, DWORD PTR _ctx$[esp+80]
	push	ebx
	push	ebp
	movups	XMMWORD PTR _p0$[esp+92], xmm0
	push	esi
	movaps	xmm0, XMMWORD PTR __xmm@ffffffff000000000000000f000000c1
	push	edi
	mov	DWORD PTR _ctx$GSCopy$1$[esp+100], eax
; Line 1332
	mov	DWORD PTR _ret$1$[esp+100], 0
; Line 1333
	mov	DWORD PTR _p0$[esp+116], 0
	mov	DWORD PTR _p0$[esp+120], -1
	movups	XMMWORD PTR _p1$[esp+100], xmm0
; Line 1336
	call	_BN_new
	mov	ebx, eax
	mov	DWORD PTR _a$1$[esp+100], ebx
; Line 1337
	call	_BN_new
	mov	DWORD PTR _b$[esp+100], eax
; Line 1338
	call	_BN_new
	mov	DWORD PTR _b$[esp+104], eax
; Line 1339
	call	_BN_new
	mov	ebp, eax
; Line 1340
	call	_BN_new
	mov	edi, eax
	mov	DWORD PTR _d$1$[esp+100], edi
; Line 1341
	call	_BN_new
	mov	DWORD PTR _e$1$[esp+100], eax
; Line 1342
	call	_BN_new
	mov	esi, eax
; Line 1343
	call	_BN_new
	mov	DWORD PTR _g$1$[esp+100], eax
; Line 1344
	call	_BN_new
; Line 1346
	push	DWORD PTR _b$[esp+100]
	mov	DWORD PTR _h$1$[esp+104], eax
	lea	eax, DWORD PTR _p0$[esp+104]
	push	eax
	call	_BN_GF2m_arr2poly
; Line 1347
	push	DWORD PTR _b$[esp+112]
	lea	eax, DWORD PTR _p1$[esp+112]
	push	eax
	call	_BN_GF2m_arr2poly
	add	esp, 16					; 00000010H
; Line 1349
	mov	DWORD PTR _i$1$[esp+100], 0
	jmp	SHORT $LN4@test_gf2m_
	npad	5
$LL19@test_gf2m_:
	mov	ebx, DWORD PTR _a$1$[esp+100]
$LN4@test_gf2m_:
; Line 1350
	push	0
	push	0
	push	1024					; 00000400H
	push	ebx
	call	_BN_bntest_rand
; Line 1351
	push	0
	push	0
	push	1024					; 00000400H
	push	ebp
	call	_BN_bntest_rand
; Line 1352
	push	0
	push	0
	push	1024					; 00000400H
	push	edi
	call	_BN_bntest_rand
	add	esp, 48					; 00000030H
; Line 1353
	xor	ebx, ebx
$LL7@test_gf2m_:
; Line 1354
	push	DWORD PTR _ctx$GSCopy$1$[esp+100]
	mov	edi, DWORD PTR _b$[esp+ebx*4+104]
	push	edi
	push	ebp
	push	DWORD PTR _a$1$[esp+112]
	push	DWORD PTR _e$1$[esp+116]
	call	_BN_GF2m_mod_mul
; Line 1370
	push	DWORD PTR _d$1$[esp+120]
	push	DWORD PTR _a$1$[esp+124]
	push	esi
	call	_BN_GF2m_add
; Line 1371
	push	DWORD PTR _ctx$GSCopy$1$[esp+132]
	push	edi
	push	ebp
	push	esi
	push	DWORD PTR _g$1$[esp+148]
	call	_BN_GF2m_mod_mul
; Line 1372
	push	DWORD PTR _ctx$GSCopy$1$[esp+152]
	push	edi
	mov	edi, DWORD PTR _d$1$[esp+160]
	push	ebp
	push	edi
	push	DWORD PTR _h$1$[esp+168]
	call	_BN_GF2m_mod_mul
	add	esp, 72					; 00000048H
; Line 1373
	push	DWORD PTR _g$1$[esp+100]
	push	DWORD PTR _e$1$[esp+104]
	push	esi
	call	_BN_GF2m_add
; Line 1374
	push	DWORD PTR _h$1$[esp+112]
	push	esi
	push	esi
	call	_BN_GF2m_add
	add	esp, 24					; 00000018H
; Line 1376
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN12@test_gf2m_
; Line 1353
	inc	ebx
	cmp	ebx, 2
	jl	SHORT $LL7@test_gf2m_
; Line 1349
	mov	eax, DWORD PTR _i$1$[esp+100]
	inc	eax
	mov	DWORD PTR _i$1$[esp+100], eax
	cmp	eax, 100				; 00000064H
	jl	$LL19@test_gf2m_
; Line 1383
	mov	DWORD PTR _ret$1$[esp+100], 1
	jmp	SHORT $err$21
$LN12@test_gf2m_:
; Line 1377
	push	OFFSET ??_C@_0CN@EFNDDEAF@GF?$CI2?$FOm?$CJ?5modular?5multiplication?5t@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$21:
; Line 1385
	push	DWORD PTR _a$1$[esp+100]
	call	_BN_free
; Line 1386
	push	DWORD PTR _b$[esp+104]
	call	_BN_free
; Line 1387
	push	DWORD PTR _b$[esp+112]
	call	_BN_free
; Line 1388
	push	ebp
	call	_BN_free
; Line 1389
	push	edi
	call	_BN_free
; Line 1390
	push	DWORD PTR _e$1$[esp+120]
	call	_BN_free
; Line 1391
	push	esi
	call	_BN_free
; Line 1392
	push	DWORD PTR _g$1$[esp+128]
	call	_BN_free
; Line 1393
	push	DWORD PTR _h$1$[esp+132]
	call	_BN_free
; Line 1395
	mov	ecx, DWORD PTR __$ArrayPad$[esp+136]
	add	esp, 36					; 00000024H
	mov	eax, DWORD PTR _ret$1$[esp+100]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
_test_gf2m_mod_mul ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_mod
_TEXT	SEGMENT
_e$1$ = -68						; size = 4
_d$1$ = -64						; size = 4
_i$1$ = -60						; size = 4
_ret$1$ = -56						; size = 4
_b$ = -52						; size = 8
_p0$ = -44						; size = 24
_p1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_test_gf2m_mod PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1276
	mov	eax, 68					; 00000044H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+68], eax
	movaps	xmm0, XMMWORD PTR __xmm@000000030000000600000007000000a3
	push	ebx
	push	ebp
	movups	XMMWORD PTR _p0$[esp+76], xmm0
	push	esi
	movaps	xmm0, XMMWORD PTR __xmm@ffffffff000000000000000f000000c1
	push	edi
; Line 1278
	mov	DWORD PTR _ret$1$[esp+84], 0
; Line 1279
	mov	DWORD PTR _p0$[esp+100], 0
	mov	DWORD PTR _p0$[esp+104], -1
	movups	XMMWORD PTR _p1$[esp+84], xmm0
; Line 1282
	call	_BN_new
	mov	ebx, eax
; Line 1283
	call	_BN_new
	mov	esi, eax
	mov	DWORD PTR _b$[esp+84], esi
; Line 1284
	call	_BN_new
	mov	edi, eax
	mov	DWORD PTR _b$[esp+88], edi
; Line 1285
	call	_BN_new
	mov	ebp, eax
; Line 1286
	call	_BN_new
	mov	DWORD PTR _d$1$[esp+84], eax
; Line 1287
	call	_BN_new
	mov	DWORD PTR _e$1$[esp+84], eax
; Line 1289
	lea	eax, DWORD PTR _p0$[esp+84]
	push	esi
	push	eax
	call	_BN_GF2m_arr2poly
; Line 1290
	lea	eax, DWORD PTR _p1$[esp+92]
	push	edi
	push	eax
	call	_BN_GF2m_arr2poly
	add	esp, 16					; 00000010H
; Line 1292
	mov	DWORD PTR _i$1$[esp+84], 0
$LL4@test_gf2m_:
; Line 1293
	push	0
	push	0
	push	1024					; 00000400H
	push	ebx
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
; Line 1294
	xor	esi, esi
$LL7@test_gf2m_:
; Line 1295
	mov	edi, DWORD PTR _b$[esp+esi*4+84]
	push	edi
	push	ebx
	push	ebp
	call	_BN_GF2m_mod
; Line 1309
	push	ebp
	push	ebx
	push	DWORD PTR _d$1$[esp+104]
	call	_BN_GF2m_add
; Line 1310
	push	edi
	mov	edi, DWORD PTR _d$1$[esp+112]
	push	edi
	push	DWORD PTR _e$1$[esp+116]
	call	_BN_GF2m_mod
; Line 1312
	mov	eax, DWORD PTR _e$1$[esp+120]
	add	esp, 36					; 00000024H
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN12@test_gf2m_
; Line 1294
	inc	esi
	cmp	esi, 2
	jl	SHORT $LL7@test_gf2m_
; Line 1292
	mov	eax, DWORD PTR _i$1$[esp+84]
	inc	eax
	mov	DWORD PTR _i$1$[esp+84], eax
	cmp	eax, 100				; 00000064H
	jl	SHORT $LL4@test_gf2m_
; Line 1318
	mov	DWORD PTR _ret$1$[esp+84], 1
	jmp	SHORT $err$20
$LN12@test_gf2m_:
; Line 1313
	push	OFFSET ??_C@_0BN@CJFKNKMI@GF?$CI2?$FOm?$CJ?5modulo?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$20:
; Line 1320
	push	ebx
	call	_BN_free
; Line 1321
	push	DWORD PTR _b$[esp+88]
	call	_BN_free
; Line 1322
	push	DWORD PTR _b$[esp+96]
	call	_BN_free
; Line 1323
	push	ebp
	call	_BN_free
; Line 1324
	push	edi
	call	_BN_free
; Line 1325
	push	DWORD PTR _e$1$[esp+104]
	call	_BN_free
; Line 1327
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	add	esp, 24					; 00000018H
	mov	eax, DWORD PTR _ret$1$[esp+84]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	ret	0
_test_gf2m_mod ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_gf2m_add
_TEXT	SEGMENT
_c$ = -60						; size = 20
_a$ = -40						; size = 20
_b$ = -20						; size = 20
_bp$ = 8						; size = 4
_test_gf2m_add PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1227
	mov	eax, 60					; 0000003cH
	call	__chkstk
	push	esi
	push	edi
; Line 1231
	lea	eax, DWORD PTR _a$[esp+68]
	xor	edi, edi
	push	eax
	call	_BN_init
; Line 1232
	lea	eax, DWORD PTR _b$[esp+72]
	push	eax
	call	_BN_init
; Line 1233
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_BN_init
	add	esp, 12					; 0000000cH
; Line 1235
	xor	esi, esi
$LL4@test_gf2m_:
; Line 1236
	push	0
	push	0
	lea	eax, DWORD PTR _a$[esp+76]
	push	512					; 00000200H
	push	eax
	call	_BN_rand
; Line 1237
	call	_BN_value_one
	push	eax
	lea	eax, DWORD PTR _b$[esp+88]
	push	eax
	call	_BN_copy
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _a$[esp+104], eax
	lea	eax, DWORD PTR [ecx+1]
	and	eax, 7
	add	ecx, 2
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _b$[esp+104], eax
; Line 1240
	lea	eax, DWORD PTR _b$[esp+92]
	push	eax
	lea	eax, DWORD PTR _a$[esp+96]
	push	eax
	lea	eax, DWORD PTR _c$[esp+100]
	push	eax
	call	_BN_GF2m_add
; Line 1256
	mov	edx, DWORD PTR _c$[esp+108]
	add	esp, 36					; 00000024H
	mov	ecx, DWORD PTR _c$[esp+68]
	cmp	DWORD PTR _a$[esp+72], edi
	jle	SHORT $LN9@test_gf2m_
	mov	eax, DWORD PTR _a$[esp+68]
	mov	eax, DWORD PTR [eax]
	and	eax, 1
	je	SHORT $LN8@test_gf2m_
	test	edx, edx
	jle	SHORT $LN8@test_gf2m_
	test	BYTE PTR [ecx], 1
	jne	SHORT $LN10@test_gf2m_
$LN8@test_gf2m_:
	test	eax, eax
	jne	SHORT $LN5@test_gf2m_
$LN9@test_gf2m_:
	test	edx, edx
	jle	SHORT $LN10@test_gf2m_
	test	BYTE PTR [ecx], 1
	je	SHORT $LN10@test_gf2m_
$LN5@test_gf2m_:
; Line 1260
	lea	eax, DWORD PTR _c$[esp+68]
	push	eax
	push	eax
	push	eax
	call	_BN_GF2m_add
	add	esp, 12					; 0000000cH
; Line 1262
	cmp	DWORD PTR _c$[esp+72], edi
	jne	SHORT $LN19@test_gf2m_
; Line 1235
	inc	esi
	cmp	esi, 100				; 00000064H
	jl	$LL4@test_gf2m_
; Line 1267
	mov	edi, 1
	jmp	SHORT $err$25
$LN19@test_gf2m_:
; Line 1263
	push	OFFSET ??_C@_0CD@HADPBNDE@GF?$CI2?$FOm?$CJ?5addition?5test?5?$CIb?$CJ?5failed@
; Line 1264
	jmp	SHORT $LN23@test_gf2m_
$LN10@test_gf2m_:
; Line 1257
	push	OFFSET ??_C@_0CD@HKBMPME@GF?$CI2?$FOm?$CJ?5addition?5test?5?$CIa?$CJ?5failed@
$LN23@test_gf2m_:
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$err$25:
; Line 1269
	lea	eax, DWORD PTR _a$[esp+68]
	push	eax
	call	_BN_free
; Line 1270
	lea	eax, DWORD PTR _b$[esp+72]
	push	eax
	call	_BN_free
; Line 1271
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 1272
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1273
	add	esp, 60					; 0000003cH
	ret	0
_test_gf2m_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_exp
_TEXT	SEGMENT
_d$1$ = -16						; size = 4
_i$1$ = -12						; size = 4
tv236 = -8						; size = 4
_one$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_exp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1180
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1184
	call	_BN_new
	mov	ebp, eax
; Line 1185
	call	_BN_new
	mov	esi, eax
; Line 1186
	call	_BN_new
	mov	DWORD PTR _d$1$[esp+32], eax
; Line 1187
	call	_BN_new
	mov	edi, eax
; Line 1188
	call	_BN_new
; Line 1189
	push	1
	push	eax
	mov	DWORD PTR _one$1$[esp+40], eax
	call	_BN_set_word
	mov	ebx, DWORD PTR _bp$[esp+36]
	mov	ecx, 20					; 00000014H
	add	esp, 8
; Line 1191
	mov	DWORD PTR _i$1$[esp+32], 0
	mov	DWORD PTR tv236[esp+32], ecx
$LL4@test_exp:
; Line 1192
	push	0
	push	0
	push	ecx
	push	ebp
	call	_BN_bntest_rand
; Line 1193
	mov	eax, DWORD PTR _i$1$[esp+48]
	push	0
	push	0
	add	eax, 2
	push	eax
	push	esi
	call	_BN_bntest_rand
; Line 1195
	push	DWORD PTR _ctx$[esp+60]
	push	esi
	push	ebp
	push	DWORD PTR _d$1$[esp+76]
	call	_BN_exp
	add	esp, 48					; 00000030H
	test	eax, eax
	jle	$LN15@test_exp
; Line 1198
	test	ebx, ebx
	je	SHORT $LN9@test_exp
; Line 1199
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN10@test_exp
; Line 1200
	push	ebp
	push	ebx
	call	_BN_print
; Line 1201
	push	OFFSET ??_C@_03INCPKIMF@?5?$FO?5?$AA@
	push	ebx
	call	_BIO_puts
; Line 1202
	push	esi
	push	ebx
	call	_BN_print
; Line 1203
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	ebx
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN10@test_exp:
; Line 1205
	push	DWORD PTR _d$1$[esp+32]
	push	ebx
	call	_BN_print
; Line 1206
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebx
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN9@test_exp:
; Line 1208
	push	1
	push	edi
	call	_BN_set_word
	add	esp, 8
; Line 1209
	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN6@test_exp
	mov	ebx, DWORD PTR _one$1$[esp+32]
	npad	3
$LL7@test_exp:
; Line 1210
	push	DWORD PTR _ctx$[esp+28]
	push	ebp
	push	edi
	push	edi
	call	_BN_mul
	push	ebx
	push	esi
	push	esi
	call	_BN_sub
	add	esp, 28					; 0000001cH
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LL7@test_exp
	mov	ebx, DWORD PTR _bp$[esp+28]
$LN6@test_exp:
; Line 1211
	push	DWORD PTR _d$1$[esp+32]
	push	edi
	push	edi
	call	_BN_sub
	add	esp, 12					; 0000000cH
; Line 1212
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN16@test_exp
; Line 1191
	mov	ecx, DWORD PTR tv236[esp+32]
	inc	DWORD PTR _i$1$[esp+32]
	add	ecx, 5
	mov	DWORD PTR tv236[esp+32], ecx
	cmp	ecx, 45					; 0000002dH
	jl	$LL4@test_exp
; Line 1217
	push	ebp
	call	_BN_free
; Line 1218
	push	esi
	call	_BN_free
; Line 1219
	push	DWORD PTR _d$1$[esp+40]
	call	_BN_free
; Line 1220
	push	edi
	call	_BN_free
; Line 1221
	push	DWORD PTR _one$1$[esp+48]
	call	_BN_free
	add	esp, 20					; 00000014H
; Line 1222
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1223
	add	esp, 16					; 00000010H
	ret	0
$LN16@test_exp:
; Line 1213
	push	OFFSET ??_C@_0BN@KDGPLOPH@Exponentiation?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN15@test_exp:
; Line 1196
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1223
	add	esp, 16					; 00000010H
	ret	0
_test_exp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_mod_exp_mont5
_TEXT	SEGMENT
_e$1$ = -8						; size = 4
_mont$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_mod_exp_mont5 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1113
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1117
	call	_BN_new
	mov	edi, eax
; Line 1118
	call	_BN_new
	mov	ebp, eax
; Line 1119
	call	_BN_new
	mov	ebx, eax
; Line 1120
	call	_BN_new
	mov	esi, eax
; Line 1121
	call	_BN_new
	mov	DWORD PTR _e$1$[esp+24], eax
; Line 1122
	call	_BN_MONT_CTX_new
; Line 1124
	push	1
	push	0
	push	1024					; 00000400H
	push	ebx
	mov	DWORD PTR _mont$1$[esp+40], eax
	call	_BN_bntest_rand
; Line 1126
	push	0
	push	0
	push	1024					; 00000400H
	push	edi
	call	_BN_bntest_rand
; Line 1127
	push	0
	push	ebp
	call	_BN_set_word
; Line 1128
	push	0
	push	DWORD PTR _ctx$[esp+64]
	push	ebx
	push	ebp
	push	edi
	push	esi
	call	_BN_mod_exp_mont_consttime
	add	esp, 64					; 00000040H
	test	eax, eax
	je	$LN17@test_mod_e
; Line 1130
	cmp	DWORD PTR [esi+4], 1
	jne	$LN6@test_mod_e
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax], 1
	jne	$LN6@test_mod_e
	cmp	DWORD PTR [esi+12], 0
	jne	$LN6@test_mod_e
; Line 1135
	push	0
	push	0
	push	1024					; 00000400H
	push	ebp
	call	_BN_bntest_rand
; Line 1136
	push	0
	push	edi
	call	_BN_set_word
; Line 1137
	push	0
	push	DWORD PTR _ctx$[esp+48]
	push	ebx
	push	ebp
	push	edi
	push	esi
	call	_BN_mod_exp_mont_consttime
	add	esp, 48					; 00000030H
	test	eax, eax
	je	$LN17@test_mod_e
; Line 1139
	cmp	DWORD PTR [esi+4], 0
	jne	$LN6@test_mod_e
; Line 1148
	push	1
	push	edi
	call	_BN_set_word
; Line 1149
	push	DWORD PTR _ctx$[esp+28]
	push	ebx
	push	DWORD PTR _mont$1$[esp+40]
	call	_BN_MONT_CTX_set
; Line 1150
	push	DWORD PTR _ctx$[esp+40]
	push	DWORD PTR _mont$1$[esp+48]
	push	edi
	push	DWORD PTR _e$1$[esp+56]
	call	_BN_from_montgomery
	add	esp, 36					; 00000024H
	test	eax, eax
	je	$LN17@test_mod_e
; Line 1152
	push	0
	push	DWORD PTR _ctx$[esp+24]
	push	ebx
	push	ebp
	push	DWORD PTR _e$1$[esp+40]
	push	esi
	call	_BN_mod_exp_mont_consttime
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN17@test_mod_e
; Line 1154
	push	DWORD PTR _ctx$[esp+20]
	push	ebx
	push	ebp
	push	DWORD PTR _e$1$[esp+36]
	push	edi
	call	_BN_mod_exp_simple
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN17@test_mod_e
; Line 1156
	push	esi
	push	edi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	$LN6@test_mod_e
; Line 1161
	push	eax
	push	eax
	push	1024					; 00000400H
	push	DWORD PTR _e$1$[esp+36]
	call	_BN_bntest_rand
; Line 1162
	push	0
	push	DWORD PTR _ctx$[esp+40]
	push	ebx
	push	ebp
	push	DWORD PTR _e$1$[esp+56]
	push	esi
	call	_BN_mod_exp_mont_consttime
	add	esp, 40					; 00000028H
	test	eax, eax
	je	SHORT $LN17@test_mod_e
; Line 1164
	push	DWORD PTR _ctx$[esp+20]
	push	ebx
	push	ebp
	push	DWORD PTR _e$1$[esp+36]
	push	edi
	call	_BN_mod_exp_simple
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN17@test_mod_e
; Line 1166
	push	esi
	push	edi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@test_mod_e
; Line 1170
	push	DWORD PTR _mont$1$[esp+24]
	call	_BN_MONT_CTX_free
; Line 1171
	push	edi
	call	_BN_free
; Line 1172
	push	ebp
	call	_BN_free
; Line 1173
	push	ebx
	call	_BN_free
; Line 1174
	push	esi
	call	_BN_free
; Line 1175
	push	DWORD PTR _e$1$[esp+44]
	call	_BN_free
	add	esp, 24					; 00000018H
; Line 1176
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1177
	add	esp, 8
	ret	0
$LN6@test_mod_e:
; Line 1131
	push	OFFSET ??_C@_0CF@CKACGCLE@Modular?5exponentiation?5test?5fail@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN17@test_mod_e:
; Line 1132
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1177
	add	esp, 8
	ret	0
_test_mod_exp_mont5 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_mod_exp_mont_consttime
_TEXT	SEGMENT
_d$1$ = -16						; size = 4
_e$1$ = -12						; size = 4
_i$1$ = -8						; size = 4
tv257 = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_mod_exp_mont_consttime PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1046
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1050
	call	_BN_new
	mov	ebx, eax
; Line 1051
	call	_BN_new
	mov	edi, eax
; Line 1052
	call	_BN_new
	mov	ebp, eax
; Line 1053
	call	_BN_new
	mov	esi, eax
	mov	DWORD PTR _d$1$[esp+32], esi
; Line 1054
	call	_BN_new
; Line 1056
	push	1
	push	ebx
	mov	DWORD PTR _e$1$[esp+40], eax
	call	_BN_set_word
; Line 1057
	push	1
	push	edi
	call	_BN_set_word
; Line 1058
	push	0
	push	ebp
	call	_BN_set_word
; Line 1059
	push	0
	push	DWORD PTR _ctx$[esp+56]
	push	ebp
	push	edi
	push	ebx
	push	esi
	call	_BN_mod_exp_mont_consttime
	add	esp, 48					; 00000030H
	test	eax, eax
	je	SHORT $LN5@test_mod_e
; Line 1060
	push	OFFSET ??_C@_0DH@KGDLDMHL@BN_mod_exp_mont_consttime?5with?5z@
; Line 1062
	jmp	$LN18@test_mod_e
$LN5@test_mod_e:
; Line 1065
	push	16					; 00000010H
	push	ebp
	call	_BN_set_word
; Line 1066
	push	0
	push	DWORD PTR _ctx$[esp+40]
	push	ebp
	push	edi
	push	ebx
	push	esi
	call	_BN_mod_exp_mont_consttime
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN6@test_mod_e
; Line 1067
	push	OFFSET ??_C@_0DH@BOCGAAGB@BN_mod_exp_mont_consttime?5with?5e@
; Line 1069
	jmp	$LN18@test_mod_e
$LN6@test_mod_e:
; Line 1072
	push	1
	push	0
	push	30					; 0000001eH
	push	ebp
	call	_BN_bntest_rand
	mov	esi, DWORD PTR _bp$[esp+44]
	mov	eax, 20					; 00000014H
	add	esp, 16					; 00000010H
; Line 1073
	mov	DWORD PTR _i$1$[esp+32], 0
	mov	DWORD PTR tv257[esp+32], eax
	npad	5
$LL4@test_mod_e:
; Line 1074
	push	0
	push	0
	push	eax
	push	ebx
	call	_BN_bntest_rand
; Line 1075
	mov	eax, DWORD PTR _i$1$[esp+48]
	push	0
	push	0
	add	eax, 2
	push	eax
	push	edi
	call	_BN_bntest_rand
; Line 1077
	push	0
	push	DWORD PTR _ctx$[esp+64]
	push	ebp
	push	edi
	push	ebx
	push	DWORD PTR _d$1$[esp+84]
	call	_BN_mod_exp_mont_consttime
	add	esp, 56					; 00000038H
	test	eax, eax
	je	$LN13@test_mod_e
; Line 1080
	test	esi, esi
	je	SHORT $LN8@test_mod_e
; Line 1081
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN9@test_mod_e
; Line 1082
	push	ebx
	push	esi
	call	_BN_print
; Line 1083
	push	OFFSET ??_C@_03INCPKIMF@?5?$FO?5?$AA@
	push	esi
	call	_BIO_puts
; Line 1084
	push	edi
	push	esi
	call	_BN_print
; Line 1085
	push	OFFSET ??_C@_03NFILCPHE@?5?$CF?5?$AA@
	push	esi
	call	_BIO_puts
; Line 1086
	push	ebp
	push	esi
	call	_BN_print
; Line 1087
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 48					; 00000030H
$LN9@test_mod_e:
; Line 1089
	push	DWORD PTR _d$1$[esp+32]
	push	esi
	call	_BN_print
; Line 1090
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN8@test_mod_e:
; Line 1092
	push	DWORD PTR _ctx$[esp+28]
	push	edi
	push	ebx
	push	DWORD PTR _e$1$[esp+44]
	call	_BN_exp
; Line 1093
	push	DWORD PTR _d$1$[esp+48]
	mov	eax, DWORD PTR _e$1$[esp+52]
	push	eax
	push	eax
	call	_BN_sub
; Line 1094
	push	DWORD PTR _ctx$[esp+56]
	push	ebp
	push	DWORD PTR _e$1$[esp+68]
	push	edi
	push	ebx
	call	_BN_div
	add	esp, 48					; 00000030H
; Line 1095
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN14@test_mod_e
; Line 1073
	mov	eax, DWORD PTR tv257[esp+32]
	inc	DWORD PTR _i$1$[esp+32]
	add	eax, 5
	mov	DWORD PTR tv257[esp+32], eax
	cmp	eax, 45					; 0000002dH
	jl	$LL4@test_mod_e
; Line 1100
	push	ebx
	call	_BN_free
; Line 1101
	push	edi
	call	_BN_free
; Line 1102
	push	ebp
	call	_BN_free
; Line 1103
	push	DWORD PTR _d$1$[esp+44]
	call	_BN_free
; Line 1104
	push	DWORD PTR _e$1$[esp+48]
	call	_BN_free
	add	esp, 20					; 00000014H
; Line 1105
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1106
	add	esp, 16					; 00000010H
	ret	0
$LN14@test_mod_e:
; Line 1096
	push	OFFSET ??_C@_0CE@OBIADEDE@Modulo?5exponentiation?5test?5faile@
$LN18@test_mod_e:
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN13@test_mod_e:
; Line 1078
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1106
	add	esp, 16					; 00000010H
	ret	0
_test_mod_exp_mont_consttime ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_mod_exp
_TEXT	SEGMENT
_a$ = -16						; size = 4
_b$ = -12						; size = 4
_c$ = -8						; size = 4
_i$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_mod_exp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 973
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
; Line 977
	call	_BN_new
	mov	DWORD PTR _a$[esp+24], eax
; Line 978
	call	_BN_new
	mov	DWORD PTR _b$[esp+24], eax
; Line 979
	call	_BN_new
	mov	DWORD PTR _c$[esp+24], eax
; Line 980
	call	_BN_new
	mov	ebx, eax
; Line 981
	call	_BN_new
; Line 983
	push	1
	push	DWORD PTR _a$[esp+28]
	mov	ebp, eax
	call	_BN_set_word
; Line 984
	push	1
	push	DWORD PTR _b$[esp+36]
	call	_BN_set_word
; Line 985
	push	0
	push	DWORD PTR _c$[esp+44]
	call	_BN_set_word
; Line 986
	push	DWORD PTR _ctx$[esp+44]
	push	DWORD PTR _c$[esp+52]
	push	DWORD PTR _b$[esp+56]
	push	DWORD PTR _a$[esp+60]
	push	ebx
	call	_BN_mod_exp
	add	esp, 44					; 0000002cH
	test	eax, eax
	je	SHORT $LN5@test_mod_e
; Line 987
	push	OFFSET ??_C@_0CJ@KMJDPENO@BN_mod_exp?5with?5zero?5modulus?5suc@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 988
	xor	eax, eax
	pop	ebp
	pop	ebx
; Line 1043
	add	esp, 16					; 00000010H
	ret	0
$LN5@test_mod_e:
	push	esi
	push	edi
; Line 991
	push	1
	push	0
	push	30					; 0000001eH
	push	DWORD PTR _c$[esp+44]
	call	_BN_bntest_rand
	mov	esi, DWORD PTR _bp$[esp+44]
	add	esp, 16					; 00000010H
; Line 992
	mov	DWORD PTR _i$1$[esp+32], 0
	mov	edi, 20					; 00000014H
	npad	7
$LL4@test_mod_e:
; Line 993
	push	0
	push	0
	push	edi
	push	DWORD PTR _a$[esp+44]
	call	_BN_bntest_rand
; Line 994
	mov	eax, DWORD PTR _i$1$[esp+48]
	push	0
	push	0
	add	eax, 2
	push	eax
	push	DWORD PTR _b$[esp+60]
	call	_BN_bntest_rand
; Line 996
	push	DWORD PTR _ctx$[esp+60]
	push	DWORD PTR _c$[esp+68]
	push	DWORD PTR _b$[esp+72]
	push	DWORD PTR _a$[esp+76]
	push	ebx
	call	_BN_mod_exp
	add	esp, 52					; 00000034H
	test	eax, eax
	je	$LN13@test_mod_e
; Line 999
	test	esi, esi
	je	SHORT $LN7@test_mod_e
; Line 1000
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN8@test_mod_e
; Line 1001
	push	DWORD PTR _a$[esp+32]
	push	esi
	call	_BN_print
; Line 1002
	push	OFFSET ??_C@_03INCPKIMF@?5?$FO?5?$AA@
	push	esi
	call	_BIO_puts
; Line 1003
	push	DWORD PTR _b$[esp+48]
	push	esi
	call	_BN_print
; Line 1004
	push	OFFSET ??_C@_03NFILCPHE@?5?$CF?5?$AA@
	push	esi
	call	_BIO_puts
; Line 1005
	push	DWORD PTR _c$[esp+64]
	push	esi
	call	_BN_print
; Line 1006
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 48					; 00000030H
$LN8@test_mod_e:
; Line 1008
	push	ebx
	push	esi
	call	_BN_print
; Line 1009
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN7@test_mod_e:
; Line 1011
	push	DWORD PTR _ctx$[esp+28]
	push	DWORD PTR _b$[esp+36]
	push	DWORD PTR _a$[esp+40]
	push	ebp
	call	_BN_exp
; Line 1012
	push	ebx
	push	ebp
	push	ebp
	call	_BN_sub
; Line 1013
	push	DWORD PTR _ctx$[esp+56]
	push	DWORD PTR _c$[esp+64]
	push	ebp
	push	DWORD PTR _b$[esp+72]
	push	DWORD PTR _a$[esp+76]
	call	_BN_div
; Line 1014
	mov	eax, DWORD PTR _b$[esp+80]
	add	esp, 48					; 00000030H
	cmp	DWORD PTR [eax+4], 0
	jne	$LN14@test_mod_e
; Line 992
	inc	DWORD PTR _i$1$[esp+32]
	add	edi, 5
	cmp	edi, 45					; 0000002dH
	jl	$LL4@test_mod_e
; Line 1021
	lea	eax, DWORD PTR _a$[esp+32]
	push	OFFSET ??_C@_0N@CCIOCOJC@050505050505?$AA@
	push	eax
	call	_BN_hex2bn
; Line 1022
	lea	eax, DWORD PTR _b$[esp+40]
	push	OFFSET ??_C@_02MJKFJHAM@02?$AA@
	push	eax
	call	_BN_hex2bn
; Line 1023
	lea	eax, DWORD PTR _c$[esp+48]
	push	OFFSET ??_C@_0BHL@LHNJLIGF@41414141414141414141412741414141@
	push	eax
	call	_BN_hex2bn
; Line 1030
	mov	esi, DWORD PTR _ctx$[esp+52]
	push	esi
	push	DWORD PTR _c$[esp+60]
	push	DWORD PTR _b$[esp+64]
	push	DWORD PTR _a$[esp+68]
	push	ebx
	call	_BN_mod_exp
; Line 1031
	mov	eax, DWORD PTR _a$[esp+76]
	push	esi
	push	eax
	push	eax
	push	ebp
	call	_BN_mul
; Line 1032
	push	ebp
	push	ebx
	call	_BN_cmp
	add	esp, 68					; 00000044H
	test	eax, eax
	je	SHORT $LN10@test_mod_e
; Line 1033
	push	OFFSET ??_C@_0DC@PDIBPFMG@BN_mod_exp?5and?5BN_mul?5produce?5di@
; Line 1034
	jmp	SHORT $LN20@test_mod_e
$LN10@test_mod_e:
; Line 1037
	push	DWORD PTR _a$[esp+32]
	call	_BN_free
; Line 1038
	push	DWORD PTR _b$[esp+36]
	call	_BN_free
; Line 1039
	push	DWORD PTR _c$[esp+40]
	call	_BN_free
; Line 1040
	push	ebx
	call	_BN_free
; Line 1041
	push	ebp
	call	_BN_free
	add	esp, 20					; 00000014H
; Line 1042
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1043
	add	esp, 16					; 00000010H
	ret	0
$LN14@test_mod_e:
; Line 1015
	push	OFFSET ??_C@_0CE@OBIADEDE@Modulo?5exponentiation?5test?5faile@
$LN20@test_mod_e:
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN13@test_mod_e:
; Line 997
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1043
	add	esp, 16					; 00000010H
	ret	0
_test_mod_exp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_mod_mul
_TEXT	SEGMENT
_e$1$ = -20						; size = 4
_d$1$ = -16						; size = 4
tv320 = -12						; size = 4
tv319 = -8						; size = 4
_j$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_mod_mul PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 900
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 904
	call	_BN_new
	mov	ebx, eax
; Line 905
	call	_BN_new
	mov	edi, eax
; Line 906
	call	_BN_new
	mov	ebp, eax
; Line 907
	call	_BN_new
	mov	DWORD PTR _d$1$[esp+36], eax
; Line 908
	call	_BN_new
	mov	esi, eax
; Line 910
	push	1
	push	ebx
	mov	DWORD PTR _e$1$[esp+44], esi
	call	_BN_set_word
; Line 911
	push	1
	push	edi
	call	_BN_set_word
; Line 912
	push	0
	push	ebp
	call	_BN_set_word
; Line 913
	push	DWORD PTR _ctx$[esp+56]
	push	ebp
	push	edi
	push	ebx
	push	esi
	call	_BN_mod_mul
	add	esp, 44					; 0000002cH
	test	eax, eax
	je	SHORT $LN10@test_mod_m
; Line 914
	push	OFFSET ??_C@_0CJ@FNOKGJFO@BN_mod_mul?5with?5zero?5modulus?5suc@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 960
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 970
	add	esp, 20					; 00000014H
	ret	0
$LN10@test_mod_m:
; Line 918
	mov	esi, DWORD PTR _bp$[esp+32]
	mov	DWORD PTR _j$1$[esp+36], 0
$LL4@test_mod_m:
; Line 919
	push	0
	push	0
	push	1024					; 00000400H
	push	ebp
	call	_BN_bntest_rand
	mov	eax, 475				; 000001dbH
	mov	DWORD PTR tv320[esp+52], 425		; 000001a9H
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv319[esp+36], eax
$LL7@test_mod_m:
; Line 921
	push	0
	push	0
	push	eax
	push	ebx
	call	_BN_bntest_rand
; Line 922
	push	0
	push	0
	push	DWORD PTR tv320[esp+60]
	push	edi
	call	_BN_bntest_rand
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
; Line 925
	push	DWORD PTR _ctx$[esp+64]
; Line 2153
	and	eax, 7
; Line 925
	push	ebp
	push	edi
	push	ebx
; Line 2153
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 925
	push	DWORD PTR _e$1$[esp+84]
	mov	DWORD PTR [ebx+12], eax
; Line 2153
	lea	eax, DWORD PTR [ecx+1]
	and	eax, 7
	add	ecx, 2
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 924
	mov	DWORD PTR [edi+12], eax
; Line 925
	call	_BN_mod_mul
	add	esp, 52					; 00000034H
	test	eax, eax
	je	$LN23@test_mod_m
; Line 932
	test	esi, esi
	je	$LN12@test_mod_m
; Line 933
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN13@test_mod_m
; Line 934
	push	ebx
	push	esi
	call	_BN_print
; Line 935
	push	OFFSET ??_C@_03NONHGIEJ@?5?$CK?5?$AA@
	push	esi
	call	_BIO_puts
; Line 936
	push	edi
	push	esi
	call	_BN_print
; Line 937
	push	OFFSET ??_C@_03NFILCPHE@?5?$CF?5?$AA@
	push	esi
	call	_BIO_puts
; Line 938
	push	ebp
	push	esi
	call	_BN_print
; Line 939
	mov	eax, DWORD PTR [edi+12]
	add	esp, 40					; 00000028H
	xor	eax, DWORD PTR [ebx+12]
	je	SHORT $LN14@test_mod_m
	mov	eax, DWORD PTR _e$1$[esp+36]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN14@test_mod_m
; Line 946
	push	OFFSET ??_C@_03NPBFACHO@?5?$CL?5?$AA@
	push	esi
	call	_BIO_puts
; Line 947
	push	ebp
	push	esi
	call	_BN_print
	add	esp, 16					; 00000010H
$LN14@test_mod_m:
; Line 949
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
$LN13@test_mod_m:
; Line 951
	push	DWORD PTR _e$1$[esp+36]
	push	esi
	call	_BN_print
; Line 952
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN12@test_mod_m:
; Line 954
	push	DWORD PTR _ctx$[esp+32]
	push	edi
	push	ebx
	push	DWORD PTR _d$1$[esp+48]
	call	_BN_mul
; Line 955
	push	DWORD PTR _e$1$[esp+52]
	mov	eax, DWORD PTR _d$1$[esp+56]
	push	eax
	push	eax
	call	_BN_sub
; Line 956
	push	DWORD PTR _ctx$[esp+60]
	push	ebp
	push	DWORD PTR _d$1$[esp+72]
	push	edi
	push	ebx
	call	_BN_div
	add	esp, 48					; 00000030H
; Line 957
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN24@test_mod_m
; Line 920
	mov	eax, DWORD PTR tv319[esp+36]
	add	DWORD PTR tv320[esp+36], 11		; 0000000bH
	add	eax, 10					; 0000000aH
	mov	DWORD PTR tv319[esp+36], eax
	cmp	eax, 1475				; 000005c3H
	jl	$LL7@test_mod_m
; Line 918
	mov	eax, DWORD PTR _j$1$[esp+36]
	inc	eax
	mov	DWORD PTR _j$1$[esp+36], eax
	cmp	eax, 3
	jl	$LL4@test_mod_m
; Line 964
	push	ebx
	call	_BN_free
; Line 965
	push	edi
	call	_BN_free
; Line 966
	push	ebp
	call	_BN_free
; Line 967
	push	DWORD PTR _d$1$[esp+48]
	call	_BN_free
; Line 968
	push	DWORD PTR _e$1$[esp+52]
	call	_BN_free
	add	esp, 20					; 00000014H
; Line 969
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 970
	add	esp, 20					; 00000014H
	ret	0
$LN24@test_mod_m:
; Line 958
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0BO@OALOLLJL@Modulo?5multiply?5test?5failed?$CB?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 959
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 960
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 970
	add	esp, 20					; 00000014H
	ret	0
$LN23@test_mod_m:
; Line 928
	call	_ERR_get_error
	test	eax, eax
	je	SHORT $LN9@test_mod_m
	mov	esi, DWORD PTR __imp____acrt_iob_func
	npad	7
$LL8@test_mod_m:
; Line 929
	push	0
	push	eax
	call	_ERR_error_string
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_09MGBKLOC@ERROR?3?$CFs?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
	call	_ERR_get_error
	test	eax, eax
	jne	SHORT $LL8@test_mod_m
$LN9@test_mod_m:
; Line 930
	push	1
	call	DWORD PTR __imp__exit
$LN37@test_mod_m:
$LN36@test_mod_m:
	int	3
_test_mod_mul ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_mod
_TEXT	SEGMENT
_c$1$ = -12						; size = 4
tv235 = -8						; size = 4
_d$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_mod PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 858
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 862
	call	_BN_new
	mov	ebp, eax
; Line 863
	call	_BN_new
	mov	ebx, eax
; Line 864
	call	_BN_new
	mov	DWORD PTR _c$1$[esp+28], eax
; Line 865
	call	_BN_new
	mov	DWORD PTR _d$1$[esp+28], eax
; Line 866
	call	_BN_new
; Line 868
	push	0
	push	0
	push	1024					; 00000400H
	push	ebp
	mov	edi, eax
	call	_BN_bntest_rand
	mov	esi, DWORD PTR _bp$[esp+40]
	mov	eax, 450				; 000001c2H
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv235[esp+28], eax
$LL4@test_mod:
; Line 870
	push	0
	push	0
	push	eax
	push	ebx
	call	_BN_bntest_rand
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
; Line 873
	push	DWORD PTR _ctx$[esp+40]
; Line 2153
	and	eax, 7
; Line 873
	push	ebx
	push	ebp
	push	DWORD PTR _c$1$[esp+56]
; Line 2153
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 871
	mov	DWORD PTR [ebp+12], eax
; Line 2153
	lea	eax, DWORD PTR [ecx+1]
	and	eax, 7
	add	ecx, 2
; Line 873
	push	0
; Line 2153
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 872
	mov	DWORD PTR [ebx+12], eax
; Line 873
	call	_BN_div
	add	esp, 36					; 00000024H
; Line 874
	test	esi, esi
	je	SHORT $LN5@test_mod
; Line 875
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN6@test_mod
; Line 876
	push	ebp
	push	esi
	call	_BN_print
; Line 877
	push	OFFSET ??_C@_03NFILCPHE@?5?$CF?5?$AA@
	push	esi
	call	_BIO_puts
; Line 878
	push	ebx
	push	esi
	call	_BN_print
; Line 879
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN6@test_mod:
; Line 881
	push	DWORD PTR _c$1$[esp+28]
	push	esi
	call	_BN_print
; Line 882
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN5@test_mod:
; Line 884
	push	DWORD PTR _ctx$[esp+24]
	push	ebx
	push	ebp
	push	edi
	push	DWORD PTR _d$1$[esp+44]
	call	_BN_div
; Line 885
	push	DWORD PTR _c$1$[esp+48]
	push	edi
	push	edi
	call	_BN_sub
	add	esp, 32					; 00000020H
; Line 886
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN14@test_mod
; Line 869
	mov	eax, DWORD PTR tv235[esp+28]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR tv235[esp+28], eax
	cmp	eax, 1450				; 000005aaH
	jl	$LL4@test_mod
; Line 891
	push	ebp
	call	_BN_free
; Line 892
	push	ebx
	call	_BN_free
; Line 893
	push	DWORD PTR _c$1$[esp+36]
	call	_BN_free
; Line 894
	push	DWORD PTR _d$1$[esp+40]
	call	_BN_free
; Line 895
	push	edi
	call	_BN_free
	add	esp, 20					; 00000014H
; Line 896
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 897
	add	esp, 12					; 0000000cH
	ret	0
$LN14@test_mod:
; Line 887
	push	OFFSET ??_C@_0BF@BAOBGHJ@Modulo?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 888
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 897
	add	esp, 12					; 0000000cH
	ret	0
_test_mod ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_mont
_TEXT	SEGMENT
_n$ = -140						; size = 20
_a$ = -120						; size = 20
_b$ = -100						; size = 20
_A$ = -80						; size = 20
_d$ = -60						; size = 20
_c$ = -40						; size = 20
_B$ = -20						; size = 20
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_mont PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 774
	mov	eax, 140				; 0000008cH
	call	__chkstk
; Line 780
	lea	eax, DWORD PTR _a$[esp+140]
	push	ebp
	push	eax
	call	_BN_init
; Line 781
	lea	eax, DWORD PTR _b$[esp+148]
	push	eax
	call	_BN_init
; Line 782
	lea	eax, DWORD PTR _c$[esp+152]
	push	eax
	call	_BN_init
; Line 783
	lea	eax, DWORD PTR _d$[esp+156]
	push	eax
	call	_BN_init
; Line 784
	lea	eax, DWORD PTR _A$[esp+160]
	push	eax
	call	_BN_init
; Line 785
	lea	eax, DWORD PTR _B$[esp+164]
	push	eax
	call	_BN_init
; Line 786
	lea	eax, DWORD PTR _n$[esp+168]
	push	eax
	call	_BN_init
	add	esp, 28					; 0000001cH
; Line 788
	call	_BN_MONT_CTX_new
	mov	ebp, eax
; Line 789
	test	ebp, ebp
	jne	SHORT $LN5@test_mont
	pop	ebp
; Line 855
	add	esp, 140				; 0000008cH
	ret	0
$LN5@test_mont:
	push	edi
; Line 792
	lea	eax, DWORD PTR _n$[esp+148]
	push	0
	push	eax
	call	_BN_set_word
; Line 793
	mov	edi, DWORD PTR _ctx$[esp+152]
	lea	eax, DWORD PTR _n$[esp+156]
	push	edi
	push	eax
	push	ebp
	call	_BN_MONT_CTX_set
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN6@test_mont
; Line 794
	push	OFFSET ??_C@_0CN@KJPNFINP@BN_MONT_CTX_set?5succeeded?5for?5ze@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 795
	xor	eax, eax
	pop	edi
	pop	ebp
; Line 855
	add	esp, 140				; 0000008cH
	ret	0
$LN6@test_mont:
; Line 798
	lea	eax, DWORD PTR _n$[esp+148]
	push	16					; 00000010H
	push	eax
	call	_BN_set_word
; Line 799
	push	edi
	lea	eax, DWORD PTR _n$[esp+160]
	push	eax
	push	ebp
	call	_BN_MONT_CTX_set
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN7@test_mont
; Line 800
	push	OFFSET ??_C@_0CN@PBBFPBFH@BN_MONT_CTX_set?5succeeded?5for?5ev@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 801
	xor	eax, eax
	pop	edi
	pop	ebp
; Line 855
	add	esp, 140				; 0000008cH
	ret	0
$LN7@test_mont:
	push	ebx
	push	esi
; Line 804
	push	0
	push	0
	lea	eax, DWORD PTR _a$[esp+164]
	push	100					; 00000064H
	push	eax
	call	_BN_bntest_rand
; Line 805
	push	0
	push	0
	lea	eax, DWORD PTR _b$[esp+180]
	push	100					; 00000064H
	push	eax
	call	_BN_bntest_rand
	mov	esi, DWORD PTR _bp$[esp+184]
	add	esp, 32					; 00000020H
	mov	ebx, 200				; 000000c8H
	npad	7
$LL4@test_mont:
; Line 807
	mov	eax, 1717986919				; 66666667H
	imul	ebx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 809
	je	$LN2@test_mont
; Line 811
	push	1
	push	0
	push	eax
	lea	eax, DWORD PTR _n$[esp+168]
	push	eax
	call	_BN_bntest_rand
; Line 812
	push	edi
	lea	eax, DWORD PTR _n$[esp+176]
	push	eax
	push	ebp
	call	_BN_MONT_CTX_set
; Line 814
	push	edi
	lea	eax, DWORD PTR _n$[esp+188]
	push	eax
	lea	eax, DWORD PTR _a$[esp+192]
	push	eax
	push	eax
	call	_BN_nnmod
; Line 815
	push	edi
	lea	eax, DWORD PTR _n$[esp+204]
	push	eax
	lea	eax, DWORD PTR _b$[esp+208]
	push	eax
	push	eax
	call	_BN_nnmod
; Line 817
	push	DWORD PTR _ctx$[esp+212]
	lea	edi, DWORD PTR [ebp+4]
	push	ebp
	push	edi
	lea	eax, DWORD PTR _a$[esp+228]
	push	eax
	lea	eax, DWORD PTR _A$[esp+232]
	push	eax
	call	_BN_mod_mul_montgomery
	add	esp, 80					; 00000050H
; Line 818
	lea	eax, DWORD PTR _b$[esp+156]
	push	DWORD PTR _ctx$[esp+152]
	push	ebp
	push	edi
	push	eax
	lea	eax, DWORD PTR _B$[esp+172]
	push	eax
	call	_BN_mod_mul_montgomery
; Line 820
	mov	edi, DWORD PTR _ctx$[esp+172]
	lea	eax, DWORD PTR _B$[esp+176]
	push	edi
	push	ebp
	push	eax
	lea	eax, DWORD PTR _A$[esp+188]
	push	eax
	lea	eax, DWORD PTR _c$[esp+192]
	push	eax
	call	_BN_mod_mul_montgomery
; Line 821
	push	edi
	push	ebp
	lea	eax, DWORD PTR _c$[esp+204]
	push	eax
	lea	eax, DWORD PTR _A$[esp+208]
	push	eax
	call	_BN_from_montgomery
	add	esp, 56					; 00000038H
; Line 822
	test	esi, esi
	je	SHORT $LN9@test_mont
; Line 823
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN10@test_mont
; Line 829
	lea	eax, DWORD PTR _a$[esp+156]
	push	eax
	push	esi
	call	_BN_print
; Line 830
	push	OFFSET ??_C@_03NONHGIEJ@?5?$CK?5?$AA@
	push	esi
	call	_BIO_puts
; Line 831
	lea	eax, DWORD PTR _b$[esp+172]
	push	eax
	push	esi
	call	_BN_print
; Line 832
	push	OFFSET ??_C@_03NFILCPHE@?5?$CF?5?$AA@
	push	esi
	call	_BIO_puts
; Line 833
	lea	eax, DWORD PTR [ebp+24]
	push	eax
	push	esi
	call	_BN_print
; Line 834
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 48					; 00000030H
$LN10@test_mont:
; Line 836
	lea	eax, DWORD PTR _A$[esp+156]
	push	eax
	push	esi
	call	_BN_print
; Line 837
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN9@test_mont:
; Line 839
	push	edi
	lea	eax, DWORD PTR _n$[esp+160]
	push	eax
	lea	eax, DWORD PTR _b$[esp+164]
	push	eax
	lea	eax, DWORD PTR _a$[esp+168]
	push	eax
	lea	eax, DWORD PTR _d$[esp+172]
	push	eax
	call	_BN_mod_mul
; Line 840
	lea	eax, DWORD PTR _A$[esp+176]
	push	eax
	lea	eax, DWORD PTR _d$[esp+180]
	push	eax
	push	eax
	call	_BN_sub
	add	esp, 32					; 00000020H
; Line 841
	cmp	DWORD PTR _d$[esp+160], 0
	jne	SHORT $LN14@test_mont
$LN2@test_mont:
; Line 806
	add	ebx, 200				; 000000c8H
	cmp	ebx, 1200				; 000004b0H
	jl	$LL4@test_mont
; Line 846
	push	ebp
	call	_BN_MONT_CTX_free
; Line 847
	lea	eax, DWORD PTR _a$[esp+160]
	push	eax
	call	_BN_free
; Line 848
	lea	eax, DWORD PTR _b$[esp+164]
	push	eax
	call	_BN_free
; Line 849
	lea	eax, DWORD PTR _c$[esp+168]
	push	eax
	call	_BN_free
; Line 850
	lea	eax, DWORD PTR _d$[esp+172]
	push	eax
	call	_BN_free
; Line 851
	lea	eax, DWORD PTR _A$[esp+176]
	push	eax
	call	_BN_free
; Line 852
	lea	eax, DWORD PTR _B$[esp+180]
	push	eax
	call	_BN_free
; Line 853
	lea	eax, DWORD PTR _n$[esp+184]
	push	eax
	call	_BN_free
	add	esp, 32					; 00000020H
; Line 854
	mov	eax, 1
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 855
	add	esp, 140				; 0000008cH
	ret	0
$LN14@test_mont:
; Line 842
	push	OFFSET ??_C@_0CI@KDBAFBGD@Montgomery?5multiplication?5test?5f@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 843
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 855
	add	esp, 140				; 0000008cH
	ret	0
_test_mont ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_sqr
_TEXT	SEGMENT
_a$ = -8						; size = 4
_e$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_sqr PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 683
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 685
	xor	esi, esi
; Line 687
	call	_BN_new
	mov	DWORD PTR _a$[esp+24], eax
; Line 688
	call	_BN_new
	mov	ebx, eax
; Line 689
	call	_BN_new
	mov	edi, eax
; Line 690
	call	_BN_new
	mov	ebp, eax
	mov	DWORD PTR _e$1$[esp+24], ebp
; Line 691
	cmp	DWORD PTR _a$[esp+24], esi
	je	$LN17@test_sqr
	test	ebx, ebx
	je	$err$37
	test	edi, edi
	je	$err$37
	test	ebp, ebp
	je	$err$37
; Line 695
	mov	esi, DWORD PTR _bp$[esp+20]
	mov	ebp, 40					; 00000028H
	npad	3
$LL4@test_sqr:
; Line 696
	push	0
	push	0
	push	ebp
	push	DWORD PTR _a$[esp+36]
	call	_BN_bntest_rand
; Line 2153
	mov	edx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, edx
; Line 698
	push	DWORD PTR _ctx$[esp+36]
; Line 2153
	and	eax, 7
	inc	edx
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, edx
	mov	ecx, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 697
	mov	eax, DWORD PTR _a$[esp+44]
	mov	DWORD PTR [eax+12], ecx
; Line 698
	push	DWORD PTR _a$[esp+44]
	push	ebx
	call	_BN_sqr
	add	esp, 28					; 0000001cH
; Line 699
	test	esi, esi
	je	SHORT $LN7@test_sqr
; Line 700
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN8@test_sqr
; Line 701
	push	DWORD PTR _a$[esp+24]
	push	esi
	call	_BN_print
; Line 702
	push	OFFSET ??_C@_03NONHGIEJ@?5?$CK?5?$AA@
	push	esi
	call	_BIO_puts
; Line 703
	push	DWORD PTR _a$[esp+40]
	push	esi
	call	_BN_print
; Line 704
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN8@test_sqr:
; Line 706
	push	ebx
	push	esi
	call	_BN_print
; Line 707
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN7@test_sqr:
; Line 709
	push	DWORD PTR _ctx$[esp+20]
	push	DWORD PTR _a$[esp+28]
	push	ebx
	push	DWORD PTR _e$1$[esp+36]
	push	edi
	call	_BN_div
; Line 710
	push	DWORD PTR _a$[esp+44]
	push	edi
	push	edi
	call	_BN_sub
	add	esp, 32					; 00000020H
; Line 711
	cmp	DWORD PTR [edi+4], 0
	jne	$LN25@test_sqr
	mov	eax, DWORD PTR _e$1$[esp+24]
	cmp	DWORD PTR [eax+4], 0
	jne	$LN25@test_sqr
; Line 695
	add	ebp, 10					; 0000000aH
	cmp	ebp, 1040				; 00000410H
	jl	$LL4@test_sqr
; Line 718
	lea	eax, DWORD PTR _a$[esp+24]
	push	OFFSET ??_C@_0EB@KFBCFFDF@80000000000000008000000000000001@
	push	eax
	call	_BN_hex2bn
; Line 721
	mov	ebp, DWORD PTR _ctx$[esp+28]
	push	ebp
	push	DWORD PTR _a$[esp+36]
	push	ebx
	call	_BN_sqr
	add	esp, 20					; 00000014H
; Line 722
	test	esi, esi
	je	SHORT $LN11@test_sqr
; Line 723
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN12@test_sqr
; Line 724
	push	DWORD PTR _a$[esp+24]
	push	esi
	call	_BN_print
; Line 725
	push	OFFSET ??_C@_03NONHGIEJ@?5?$CK?5?$AA@
	push	esi
	call	_BIO_puts
; Line 726
	push	DWORD PTR _a$[esp+40]
	push	esi
	call	_BN_print
; Line 727
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN12@test_sqr:
; Line 729
	push	ebx
	push	esi
	call	_BN_print
; Line 730
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN11@test_sqr:
; Line 732
	mov	eax, DWORD PTR _a$[esp+24]
	push	ebp
	push	eax
	push	eax
	push	edi
	call	_BN_mul
; Line 733
	push	edi
	push	ebx
	call	_BN_cmp
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN13@test_sqr
; Line 734
	push	OFFSET ??_C@_0EC@HGAAMPMN@Square?5test?5failed?3?5BN_sqr?5and?5B@
; Line 736
	jmp	$LN34@test_sqr
$LN13@test_sqr:
; Line 740
	lea	eax, DWORD PTR _a$[esp+24]
	push	OFFSET ??_C@_0EB@NLJIFIKP@80000000000000000000000080000001@
	push	eax
	call	_BN_hex2bn
; Line 743
	push	ebp
	push	DWORD PTR _a$[esp+36]
	push	ebx
	call	_BN_sqr
	add	esp, 20					; 00000014H
; Line 744
	test	esi, esi
	je	SHORT $LN14@test_sqr
; Line 745
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN15@test_sqr
; Line 746
	push	DWORD PTR _a$[esp+24]
	push	esi
	call	_BN_print
; Line 747
	push	OFFSET ??_C@_03NONHGIEJ@?5?$CK?5?$AA@
	push	esi
	call	_BIO_puts
; Line 748
	push	DWORD PTR _a$[esp+40]
	push	esi
	call	_BN_print
; Line 749
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN15@test_sqr:
; Line 751
	push	ebx
	push	esi
	call	_BN_print
; Line 752
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN14@test_sqr:
; Line 754
	mov	eax, DWORD PTR _a$[esp+24]
	push	ebp
	push	eax
	push	eax
	push	edi
	call	_BN_mul
; Line 755
	push	edi
	push	ebx
	call	_BN_cmp
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN16@test_sqr
; Line 756
	push	OFFSET ??_C@_0EC@HGAAMPMN@Square?5test?5failed?3?5BN_sqr?5and?5B@
; Line 758
	jmp	SHORT $LN34@test_sqr
$LN16@test_sqr:
; Line 760
	mov	esi, 1
	jmp	SHORT $LN35@test_sqr
$LN25@test_sqr:
; Line 712
	push	OFFSET ??_C@_0BF@CDHGADOM@Square?5test?5failed?$CB?6?$AA@
$LN34@test_sqr:
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
	xor	esi, esi
$LN35@test_sqr:
	mov	ebp, DWORD PTR _e$1$[esp+24]
$err$37:
; Line 762
	mov	eax, DWORD PTR _a$[esp+24]
	test	eax, eax
	je	SHORT $LN17@test_sqr
; Line 763
	push	eax
	call	_BN_free
	add	esp, 4
$LN17@test_sqr:
; Line 764
	test	ebx, ebx
	je	SHORT $LN18@test_sqr
; Line 765
	push	ebx
	call	_BN_free
	add	esp, 4
$LN18@test_sqr:
; Line 766
	test	edi, edi
	je	SHORT $LN19@test_sqr
; Line 767
	push	edi
	call	_BN_free
	add	esp, 4
$LN19@test_sqr:
; Line 768
	test	ebp, ebp
	je	SHORT $LN29@test_sqr
; Line 769
	push	ebp
	call	_BN_free
	add	esp, 4
$LN29@test_sqr:
; Line 770
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 771
	add	esp, 8
	ret	0
_test_sqr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_mul
_TEXT	SEGMENT
_b$ = -100						; size = 20
_a$ = -80						; size = 20
_d$ = -60						; size = 20
_c$ = -40						; size = 20
_e$ = -20						; size = 20
_bp$ = 8						; size = 4
_test_mul PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 632
	mov	eax, 100				; 00000064H
	call	__chkstk
	push	ebx
; Line 637
	call	_BN_CTX_new
	mov	ebx, eax
; Line 638
	test	ebx, ebx
	jne	SHORT $LN5@test_mul
; Line 639
	push	1
	call	DWORD PTR __imp__exit
$LN26@test_mul:
$LN5@test_mul:
	push	esi
; Line 641
	lea	eax, DWORD PTR _a$[esp+108]
	push	edi
	push	eax
	call	_BN_init
; Line 642
	lea	eax, DWORD PTR _b$[esp+116]
	push	eax
	call	_BN_init
; Line 643
	lea	eax, DWORD PTR _c$[esp+120]
	push	eax
	call	_BN_init
; Line 644
	lea	eax, DWORD PTR _d$[esp+124]
	push	eax
	call	_BN_init
; Line 645
	lea	eax, DWORD PTR _e$[esp+128]
	push	eax
	call	_BN_init
; Line 647
	mov	esi, DWORD PTR _bp$[esp+128]
	add	esp, 20					; 00000014H
	xor	edi, edi
	npad	2
$LL4@test_mul:
; Line 649
	push	0
	push	0
	cmp	edi, 50					; 00000032H
	jg	SHORT $LN6@test_mul
	lea	eax, DWORD PTR _a$[esp+120]
	push	100					; 00000064H
	push	eax
	call	_BN_bntest_rand
; Line 650
	push	0
	push	0
	lea	eax, DWORD PTR _b$[esp+136]
	push	100					; 00000064H
	push	eax
	call	_BN_bntest_rand
	add	esp, 32					; 00000020H
; Line 651
	jmp	SHORT $LN7@test_mul
$LN6@test_mul:
; Line 652
	lea	eax, DWORD PTR [edi-50]
	push	eax
	lea	eax, DWORD PTR _b$[esp+124]
	push	eax
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
$LN7@test_mul:
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
; Line 655
	push	ebx
; Line 2153
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _a$[esp+128], eax
	lea	eax, DWORD PTR [ecx+1]
	and	eax, 7
	add	ecx, 2
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _b$[esp+128], eax
; Line 655
	lea	eax, DWORD PTR _b$[esp+116]
	push	eax
	lea	eax, DWORD PTR _a$[esp+120]
	push	eax
	lea	eax, DWORD PTR _c$[esp+124]
	push	eax
	call	_BN_mul
	add	esp, 16					; 00000010H
; Line 656
	test	esi, esi
	je	SHORT $LN8@test_mul
; Line 657
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN9@test_mul
; Line 658
	lea	eax, DWORD PTR _a$[esp+112]
	push	eax
	push	esi
	call	_BN_print
; Line 659
	push	OFFSET ??_C@_03NONHGIEJ@?5?$CK?5?$AA@
	push	esi
	call	_BIO_puts
; Line 660
	lea	eax, DWORD PTR _b$[esp+128]
	push	eax
	push	esi
	call	_BN_print
; Line 661
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN9@test_mul:
; Line 663
	lea	eax, DWORD PTR _c$[esp+112]
	push	eax
	push	esi
	call	_BN_print
; Line 664
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN8@test_mul:
; Line 666
	push	ebx
	lea	eax, DWORD PTR _a$[esp+116]
	push	eax
	lea	eax, DWORD PTR _c$[esp+120]
	push	eax
	lea	eax, DWORD PTR _e$[esp+124]
	push	eax
	lea	eax, DWORD PTR _d$[esp+128]
	push	eax
	call	_BN_div
; Line 667
	lea	eax, DWORD PTR _b$[esp+132]
	push	eax
	lea	eax, DWORD PTR _d$[esp+136]
	push	eax
	push	eax
	call	_BN_sub
	add	esp, 32					; 00000020H
; Line 668
	cmp	DWORD PTR _d$[esp+116], 0
	jne	SHORT $LN18@test_mul
	cmp	DWORD PTR _e$[esp+116], 0
	jne	SHORT $LN18@test_mul
; Line 647
	inc	edi
	cmp	edi, 150				; 00000096H
	jl	$LL4@test_mul
; Line 673
	lea	eax, DWORD PTR _a$[esp+112]
	push	eax
	call	_BN_free
; Line 674
	lea	eax, DWORD PTR _b$[esp+116]
	push	eax
	call	_BN_free
; Line 675
	lea	eax, DWORD PTR _c$[esp+120]
	push	eax
	call	_BN_free
; Line 676
	lea	eax, DWORD PTR _d$[esp+124]
	push	eax
	call	_BN_free
; Line 677
	lea	eax, DWORD PTR _e$[esp+128]
	push	eax
	call	_BN_free
; Line 678
	push	ebx
	call	_BN_CTX_free
	add	esp, 24					; 00000018H
; Line 679
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 680
	add	esp, 100				; 00000064H
	ret	0
$LN18@test_mul:
; Line 669
	push	OFFSET ??_C@_0BN@NJGACPPM@Multiplication?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 670
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 680
	add	esp, 100				; 00000064H
	ret	0
$LN25@test_mul:
_test_mul ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_div_recp
_TEXT	SEGMENT
_a$ = -152						; size = 20
_b$ = -132						; size = 20
_d$ = -112						; size = 20
_c$ = -92						; size = 20
_e$ = -72						; size = 20
_recp$ = -52						; size = 52
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_div_recp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 566
	mov	eax, 152				; 00000098H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 571
	lea	eax, DWORD PTR _recp$[esp+164]
	push	edi
	push	eax
	call	_BN_RECP_CTX_init
; Line 572
	lea	eax, DWORD PTR _a$[esp+172]
	push	eax
	call	_BN_init
; Line 573
	lea	eax, DWORD PTR _b$[esp+176]
	push	eax
	call	_BN_init
; Line 574
	lea	eax, DWORD PTR _c$[esp+180]
	push	eax
	call	_BN_init
; Line 575
	lea	eax, DWORD PTR _d$[esp+184]
	push	eax
	call	_BN_init
; Line 576
	lea	eax, DWORD PTR _e$[esp+188]
	push	eax
	call	_BN_init
	mov	ebp, DWORD PTR _ctx$[esp+188]
	add	esp, 24					; 00000018H
	mov	esi, DWORD PTR _bp$[esp+164]
; Line 578
	xor	edi, edi
	lea	ebx, DWORD PTR [edi-100]
$LL4@test_div_r:
; Line 580
	push	0
	push	0
	cmp	edi, 50					; 00000032H
	jge	SHORT $LN5@test_div_r
	lea	eax, DWORD PTR _a$[esp+176]
	push	400					; 00000190H
	push	eax
	call	_BN_bntest_rand
; Line 581
	lea	eax, DWORD PTR _a$[esp+184]
	push	eax
	lea	eax, DWORD PTR _b$[esp+188]
	push	eax
	call	_BN_copy
; Line 582
	lea	eax, DWORD PTR _a$[esp+192]
	push	edi
	push	eax
	push	eax
	call	_BN_lshift
; Line 583
	lea	eax, DWORD PTR _a$[esp+204]
	push	edi
	push	eax
	call	_BN_add_word
	add	esp, 44					; 0000002cH
; Line 584
	jmp	SHORT $LN6@test_div_r
$LN5@test_div_r:
; Line 585
	lea	eax, DWORD PTR _b$[esp+176]
	push	ebx
	push	eax
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
$LN6@test_div_r:
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
; Line 588
	push	ebp
; Line 2153
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _a$[esp+184], eax
	lea	eax, DWORD PTR [ecx+1]
	and	eax, 7
	add	ecx, 2
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _b$[esp+184], eax
; Line 588
	lea	eax, DWORD PTR _b$[esp+172]
	push	eax
	lea	eax, DWORD PTR _recp$[esp+176]
	push	eax
	call	_BN_RECP_CTX_set
; Line 589
	push	ebp
	lea	eax, DWORD PTR _recp$[esp+184]
	push	eax
	lea	eax, DWORD PTR _a$[esp+188]
	push	eax
	lea	eax, DWORD PTR _c$[esp+192]
	push	eax
	lea	eax, DWORD PTR _d$[esp+196]
	push	eax
	call	_BN_div_recp
	add	esp, 32					; 00000020H
; Line 590
	test	esi, esi
	je	$LN7@test_div_r
; Line 591
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN8@test_div_r
; Line 592
	lea	eax, DWORD PTR _a$[esp+168]
	push	eax
	push	esi
	call	_BN_print
; Line 593
	push	OFFSET ??_C@_03NIBMKKKC@?5?1?5?$AA@
	push	esi
	call	_BIO_puts
; Line 594
	lea	eax, DWORD PTR _b$[esp+184]
	push	eax
	push	esi
	call	_BN_print
; Line 595
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN8@test_div_r:
; Line 597
	lea	eax, DWORD PTR _d$[esp+168]
	push	eax
	push	esi
	call	_BN_print
; Line 598
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
; Line 600
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN9@test_div_r
; Line 601
	lea	eax, DWORD PTR _a$[esp+168]
	push	eax
	push	esi
	call	_BN_print
; Line 602
	push	OFFSET ??_C@_03NFILCPHE@?5?$CF?5?$AA@
	push	esi
	call	_BIO_puts
; Line 603
	lea	eax, DWORD PTR _b$[esp+184]
	push	eax
	push	esi
	call	_BN_print
; Line 604
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN9@test_div_r:
; Line 606
	lea	eax, DWORD PTR _c$[esp+168]
	push	eax
	push	esi
	call	_BN_print
; Line 607
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN7@test_div_r:
; Line 609
	push	ebp
	lea	eax, DWORD PTR _b$[esp+172]
	push	eax
	lea	eax, DWORD PTR _d$[esp+176]
	push	eax
	lea	eax, DWORD PTR _e$[esp+180]
	push	eax
	call	_BN_mul
; Line 610
	lea	eax, DWORD PTR _c$[esp+184]
	push	eax
	lea	eax, DWORD PTR _e$[esp+188]
	push	eax
	lea	eax, DWORD PTR _d$[esp+192]
	push	eax
	call	_BN_add
; Line 611
	lea	eax, DWORD PTR _a$[esp+196]
	push	eax
	lea	eax, DWORD PTR _d$[esp+200]
	push	eax
	push	eax
	call	_BN_sub
	add	esp, 40					; 00000028H
; Line 612
	cmp	DWORD PTR _d$[esp+172], 0
	jne	SHORT $LN17@test_div_r
; Line 578
	add	ebx, 3
	inc	edi
	cmp	ebx, 350				; 0000015eH
	jl	$LL4@test_div_r
; Line 622
	lea	eax, DWORD PTR _a$[esp+168]
	push	eax
	call	_BN_free
; Line 623
	lea	eax, DWORD PTR _b$[esp+172]
	push	eax
	call	_BN_free
; Line 624
	lea	eax, DWORD PTR _c$[esp+176]
	push	eax
	call	_BN_free
; Line 625
	lea	eax, DWORD PTR _d$[esp+180]
	push	eax
	call	_BN_free
; Line 626
	lea	eax, DWORD PTR _e$[esp+184]
	push	eax
	call	_BN_free
; Line 627
	lea	eax, DWORD PTR _recp$[esp+188]
	push	eax
	call	_BN_RECP_CTX_free
	add	esp, 24					; 00000018H
; Line 628
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 629
	add	esp, 152				; 00000098H
	ret	0
$LN17@test_div_r:
; Line 613
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0CC@DLNAGMJK@Reciprocal?5division?5test?5failed?$CB@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 614
	push	OFFSET ??_C@_02CDEDMPEE@a?$DN?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 615
	lea	eax, DWORD PTR _a$[esp+168]
	push	eax
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 616
	push	OFFSET ??_C@_03JALNJHHH@?6b?$DN?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 617
	lea	eax, DWORD PTR _b$[esp+168]
	push	eax
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 618
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 619
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 629
	add	esp, 152				; 00000098H
	ret	0
_test_div_recp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_div_word
_TEXT	SEGMENT
_b$ = -40						; size = 20
_a$ = -20						; size = 20
_bp$ = 8						; size = 4
_test_div_word PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 515
	mov	eax, 40					; 00000028H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 520
	lea	eax, DWORD PTR _a$[esp+52]
	push	edi
	push	eax
	call	_BN_init
; Line 521
	lea	eax, DWORD PTR _b$[esp+60]
	push	eax
	call	_BN_init
; Line 523
	mov	esi, DWORD PTR _bp$[esp+60]
	add	esp, 8
	xor	edi, edi
	npad	5
$LL7@test_div_w:
; Line 525
	push	0
	push	-1
	lea	eax, DWORD PTR _a$[esp+64]
	push	512					; 00000200H
	push	eax
	call	_BN_bntest_rand
; Line 526
	push	0
	push	-1
	lea	eax, DWORD PTR _b$[esp+80]
	push	32					; 00000020H
	push	eax
	call	_BN_bntest_rand
	add	esp, 32					; 00000020H
; Line 527
	cmp	DWORD PTR _b$[esp+60], 0
	je	SHORT $LL7@test_div_w
; Line 529
	mov	eax, DWORD PTR _b$[esp+56]
	mov	ebx, DWORD PTR [eax]
; Line 530
	lea	eax, DWORD PTR _a$[esp+56]
	push	eax
	lea	eax, DWORD PTR _b$[esp+60]
	push	eax
	call	_BN_copy
; Line 531
	lea	eax, DWORD PTR _b$[esp+64]
	push	ebx
	push	eax
	call	_BN_div_word
	add	esp, 16					; 00000010H
	mov	ebp, eax
; Line 533
	test	esi, esi
	je	$LN8@test_div_w
; Line 534
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN9@test_div_w
; Line 535
	lea	eax, DWORD PTR _a$[esp+56]
	push	eax
	push	esi
	call	_BN_print
; Line 536
	push	OFFSET ??_C@_03NIBMKKKC@?5?1?5?$AA@
	push	esi
	call	_BIO_puts
; Line 511
	push	ebx
	push	OFFSET ??_C@_02EMFKHFLK@?$CFX?$AA@
	push	esi
	call	_BIO_printf
; Line 538
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 36					; 00000024H
$LN9@test_div_w:
; Line 540
	lea	eax, DWORD PTR _b$[esp+56]
	push	eax
	push	esi
	call	_BN_print
; Line 541
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
; Line 543
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN10@test_div_w
; Line 544
	lea	eax, DWORD PTR _a$[esp+56]
	push	eax
	push	esi
	call	_BN_print
; Line 545
	push	OFFSET ??_C@_03NFILCPHE@?5?$CF?5?$AA@
	push	esi
	call	_BIO_puts
; Line 511
	push	ebx
	push	OFFSET ??_C@_02EMFKHFLK@?$CFX?$AA@
	push	esi
	call	_BIO_printf
; Line 547
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 36					; 00000024H
$LN10@test_div_w:
; Line 511
	push	ebp
	push	OFFSET ??_C@_02EMFKHFLK@?$CFX?$AA@
	push	esi
	call	_BIO_printf
; Line 550
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 20					; 00000014H
$LN8@test_div_w:
; Line 552
	lea	eax, DWORD PTR _b$[esp+56]
	push	ebx
	push	eax
	call	_BN_mul_word
; Line 553
	lea	eax, DWORD PTR _b$[esp+64]
	push	ebp
	push	eax
	call	_BN_add_word
; Line 554
	lea	eax, DWORD PTR _b$[esp+72]
	push	eax
	lea	eax, DWORD PTR _a$[esp+76]
	push	eax
	lea	eax, DWORD PTR _b$[esp+80]
	push	eax
	call	_BN_sub
	add	esp, 28					; 0000001cH
; Line 555
	cmp	DWORD PTR _b$[esp+60], 0
	jne	SHORT $LN21@test_div_w
; Line 523
	inc	edi
	cmp	edi, 100				; 00000064H
	jl	$LL7@test_div_w
; Line 560
	lea	eax, DWORD PTR _a$[esp+56]
	push	eax
	call	_BN_free
; Line 561
	lea	eax, DWORD PTR _b$[esp+60]
	push	eax
	call	_BN_free
	add	esp, 8
; Line 562
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 563
	add	esp, 40					; 00000028H
	ret	0
$LN21@test_div_w:
; Line 556
	push	OFFSET ??_C@_0BO@LIMFHPNC@Division?5?$CIword?$CJ?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 557
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 563
	add	esp, 40					; 00000028H
	ret	0
_test_div_word ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_div
_TEXT	SEGMENT
_a$ = -100						; size = 20
_b$ = -80						; size = 20
_d$ = -60						; size = 20
_c$ = -40						; size = 20
_e$ = -20						; size = 20
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_div PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 434
	mov	eax, 100				; 00000064H
	call	__chkstk
; Line 438
	lea	eax, DWORD PTR _a$[esp+100]
	push	ebp
	push	eax
	call	_BN_init
; Line 439
	lea	eax, DWORD PTR _b$[esp+108]
	push	eax
	call	_BN_init
; Line 440
	lea	eax, DWORD PTR _c$[esp+112]
	push	eax
	call	_BN_init
; Line 441
	lea	eax, DWORD PTR _d$[esp+116]
	push	eax
	call	_BN_init
; Line 442
	lea	eax, DWORD PTR _e$[esp+120]
	push	eax
	call	_BN_init
; Line 444
	lea	eax, DWORD PTR _a$[esp+124]
	push	1
	push	eax
	call	_BN_set_word
; Line 445
	lea	eax, DWORD PTR _b$[esp+132]
	push	0
	push	eax
	call	_BN_set_word
; Line 447
	mov	ebp, DWORD PTR _ctx$[esp+136]
	lea	eax, DWORD PTR _b$[esp+140]
	push	ebp
	push	eax
	lea	eax, DWORD PTR _a$[esp+148]
	push	eax
	lea	eax, DWORD PTR _c$[esp+152]
	push	eax
	lea	eax, DWORD PTR _d$[esp+156]
	push	eax
	call	_BN_div
	add	esp, 56					; 00000038H
	test	eax, eax
	je	SHORT $LN5@test_div
; Line 448
	push	OFFSET ??_C@_0BN@LOEINEMI@Division?5by?5zero?5succeeded?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 449
	xor	eax, eax
	pop	ebp
; Line 496
	add	esp, 100				; 00000064H
	ret	0
$LN5@test_div:
	push	ebx
	push	esi
; Line 452
	mov	esi, DWORD PTR _bp$[esp+108]
	push	edi
	xor	edi, edi
	lea	ebx, DWORD PTR [edi-100]
$LL4@test_div:
; Line 454
	push	0
	push	0
	cmp	edi, 50					; 00000032H
	jge	SHORT $LN6@test_div
	lea	eax, DWORD PTR _a$[esp+124]
	push	400					; 00000190H
	push	eax
	call	_BN_bntest_rand
; Line 455
	lea	eax, DWORD PTR _a$[esp+132]
	push	eax
	lea	eax, DWORD PTR _b$[esp+136]
	push	eax
	call	_BN_copy
; Line 456
	lea	eax, DWORD PTR _a$[esp+140]
	push	edi
	push	eax
	push	eax
	call	_BN_lshift
; Line 457
	lea	eax, DWORD PTR _a$[esp+152]
	push	edi
	push	eax
	call	_BN_add_word
	add	esp, 44					; 0000002cH
; Line 458
	jmp	SHORT $LN7@test_div
$LN6@test_div:
; Line 459
	lea	eax, DWORD PTR _b$[esp+124]
	push	ebx
	push	eax
	call	_BN_bntest_rand
	add	esp, 16					; 00000010H
$LN7@test_div:
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
; Line 462
	push	ebp
; Line 2153
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _a$[esp+132], eax
	lea	eax, DWORD PTR [ecx+1]
	and	eax, 7
	add	ecx, 2
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _b$[esp+132], eax
; Line 462
	lea	eax, DWORD PTR _b$[esp+120]
	push	eax
	lea	eax, DWORD PTR _a$[esp+124]
	push	eax
	lea	eax, DWORD PTR _c$[esp+128]
	push	eax
	lea	eax, DWORD PTR _d$[esp+132]
	push	eax
	call	_BN_div
	add	esp, 20					; 00000014H
; Line 463
	test	esi, esi
	je	$LN8@test_div
; Line 464
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN9@test_div
; Line 465
	lea	eax, DWORD PTR _a$[esp+116]
	push	eax
	push	esi
	call	_BN_print
; Line 466
	push	OFFSET ??_C@_03NIBMKKKC@?5?1?5?$AA@
	push	esi
	call	_BIO_puts
; Line 467
	lea	eax, DWORD PTR _b$[esp+132]
	push	eax
	push	esi
	call	_BN_print
; Line 468
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN9@test_div:
; Line 470
	lea	eax, DWORD PTR _d$[esp+116]
	push	eax
	push	esi
	call	_BN_print
; Line 471
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
; Line 473
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN10@test_div
; Line 474
	lea	eax, DWORD PTR _a$[esp+116]
	push	eax
	push	esi
	call	_BN_print
; Line 475
	push	OFFSET ??_C@_03NFILCPHE@?5?$CF?5?$AA@
	push	esi
	call	_BIO_puts
; Line 476
	lea	eax, DWORD PTR _b$[esp+132]
	push	eax
	push	esi
	call	_BN_print
; Line 477
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN10@test_div:
; Line 479
	lea	eax, DWORD PTR _c$[esp+116]
	push	eax
	push	esi
	call	_BN_print
; Line 480
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN8@test_div:
; Line 482
	push	ebp
	lea	eax, DWORD PTR _b$[esp+120]
	push	eax
	lea	eax, DWORD PTR _d$[esp+124]
	push	eax
	lea	eax, DWORD PTR _e$[esp+128]
	push	eax
	call	_BN_mul
; Line 483
	lea	eax, DWORD PTR _c$[esp+132]
	push	eax
	lea	eax, DWORD PTR _e$[esp+136]
	push	eax
	lea	eax, DWORD PTR _d$[esp+140]
	push	eax
	call	_BN_add
; Line 484
	lea	eax, DWORD PTR _a$[esp+144]
	push	eax
	lea	eax, DWORD PTR _d$[esp+148]
	push	eax
	push	eax
	call	_BN_sub
	add	esp, 40					; 00000028H
; Line 485
	cmp	DWORD PTR _d$[esp+120], 0
	jne	SHORT $LN18@test_div
; Line 452
	add	ebx, 3
	inc	edi
	cmp	ebx, 350				; 0000015eH
	jl	$LL4@test_div
; Line 490
	lea	eax, DWORD PTR _a$[esp+116]
	push	eax
	call	_BN_free
; Line 491
	lea	eax, DWORD PTR _b$[esp+120]
	push	eax
	call	_BN_free
; Line 492
	lea	eax, DWORD PTR _c$[esp+124]
	push	eax
	call	_BN_free
; Line 493
	lea	eax, DWORD PTR _d$[esp+128]
	push	eax
	call	_BN_free
; Line 494
	lea	eax, DWORD PTR _e$[esp+132]
	push	eax
	call	_BN_free
	add	esp, 20					; 00000014H
; Line 495
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
; Line 496
	add	esp, 100				; 00000064H
	ret	0
$LN18@test_div:
; Line 486
	push	OFFSET ??_C@_0BH@ELLBMCOD@Division?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 487
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
; Line 496
	add	esp, 100				; 00000064H
	ret	0
_test_div ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_rshift
_TEXT	SEGMENT
_a$1$ = -12						; size = 4
_b$1$ = -8						; size = 4
_e$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_test_rshift PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 2071
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 2075
	call	_BN_new
	mov	ebp, eax
	mov	DWORD PTR _a$1$[esp+28], ebp
; Line 2076
	call	_BN_new
	mov	DWORD PTR _b$1$[esp+28], eax
; Line 2077
	call	_BN_new
	mov	edi, eax
; Line 2078
	call	_BN_new
	mov	ebx, eax
; Line 2079
	call	_BN_new
; Line 2080
	push	1
	push	edi
	mov	DWORD PTR _e$1$[esp+36], eax
	call	_BN_set_word
; Line 2082
	push	0
	push	0
	push	200					; 000000c8H
	push	ebp
	call	_BN_bntest_rand
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
; Line 2082
	add	esp, 24					; 00000018H
; Line 2084
	mov	esi, DWORD PTR _bp$[esp+24]
; Line 2153
	mov	eax, ecx
	inc	ecx
	and	eax, 7
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
; Line 2083
	mov	ecx, ebp
; Line 2084
	xor	ebp, ebp
; Line 2153
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
; Line 2083
	mov	DWORD PTR [ecx+12], eax
	jmp	SHORT $LN4@test_rshif
	npad	7
$LL16@test_rshif:
	mov	ecx, DWORD PTR _a$1$[esp+28]
$LN4@test_rshif:
; Line 2085
	inc	ebp
	push	ebp
	push	ecx
	push	DWORD PTR _b$1$[esp+36]
	call	_BN_rshift
; Line 2086
	push	edi
	push	edi
	push	edi
	call	_BN_add
	add	esp, 24					; 00000018H
; Line 2087
	test	esi, esi
	je	SHORT $LN5@test_rshif
; Line 2088
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN6@test_rshif
; Line 2089
	push	DWORD PTR _a$1$[esp+28]
	push	esi
	call	_BN_print
; Line 2090
	push	OFFSET ??_C@_03NIBMKKKC@?5?1?5?$AA@
	push	esi
	call	_BIO_puts
; Line 2091
	push	edi
	push	esi
	call	_BN_print
; Line 2092
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN6@test_rshif:
; Line 2094
	push	DWORD PTR _b$1$[esp+28]
	push	esi
	call	_BN_print
; Line 2095
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN5@test_rshif:
; Line 2097
	push	DWORD PTR _ctx$[esp+24]
	push	edi
	push	DWORD PTR _a$1$[esp+36]
	push	DWORD PTR _e$1$[esp+40]
	push	ebx
	call	_BN_div
; Line 2098
	push	DWORD PTR _b$1$[esp+48]
	push	ebx
	push	ebx
	call	_BN_sub
	add	esp, 32					; 00000020H
; Line 2099
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN12@test_rshif
; Line 2084
	cmp	ebp, 100				; 00000064H
	jl	$LL16@test_rshif
; Line 2104
	push	DWORD PTR _a$1$[esp+28]
	call	_BN_free
; Line 2105
	push	DWORD PTR _b$1$[esp+32]
	call	_BN_free
; Line 2106
	push	edi
	call	_BN_free
; Line 2107
	push	ebx
	call	_BN_free
; Line 2108
	push	DWORD PTR _e$1$[esp+44]
	call	_BN_free
	add	esp, 20					; 00000014H
; Line 2109
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2110
	add	esp, 12					; 0000000cH
	ret	0
$LN12@test_rshif:
; Line 2100
	push	OFFSET ??_C@_0BK@OLOPEOKA@Right?5shift?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2101
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2110
	add	esp, 12					; 0000000cH
	ret	0
_test_rshift ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_rshift1
_TEXT	SEGMENT
_i$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_test_rshift1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 2113
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 2117
	call	_BN_new
	mov	ebp, eax
; Line 2118
	call	_BN_new
	mov	edi, eax
; Line 2119
	call	_BN_new
; Line 2121
	push	0
	push	0
	push	200					; 000000c8H
	push	ebp
	mov	ebx, eax
	call	_BN_bntest_rand
; Line 2153
	mov	edx, DWORD PTR ?neg@?1??rand_neg@@9@9
; Line 2121
	add	esp, 16					; 00000010H
; Line 2123
	mov	esi, DWORD PTR _bp$[esp+16]
; Line 2153
	mov	ecx, edx
	and	ecx, 7
; Line 2123
	mov	DWORD PTR _i$1$[esp+20], 0
; Line 2153
	inc	edx
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, edx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[ecx*4]
; Line 2122
	mov	DWORD PTR [ebp+12], eax
	npad	3
$LL4@test_rshif:
; Line 2124
	push	ebp
	push	edi
	call	_BN_rshift1
	add	esp, 8
; Line 2125
	test	esi, esi
	je	SHORT $LN5@test_rshif
; Line 2126
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN6@test_rshif
; Line 2127
	push	ebp
	push	esi
	call	_BN_print
; Line 2128
	push	OFFSET ??_C@_04NFHAIKBP@?5?1?52?$AA@
	push	esi
	call	_BIO_puts
; Line 2129
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 24					; 00000018H
$LN6@test_rshif:
; Line 2131
	push	edi
	push	esi
	call	_BN_print
; Line 2132
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN5@test_rshif:
; Line 2134
	push	edi
	push	ebp
	push	ebx
	call	_BN_sub
; Line 2135
	push	edi
	push	ebx
	push	ebx
	call	_BN_sub
; Line 2136
	mov	eax, DWORD PTR [ebx+4]
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN7@test_rshif
	cmp	eax, 1
	jne	SHORT $LN8@test_rshif
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN8@test_rshif
$LN7@test_rshif:
; Line 2140
	push	edi
	push	ebp
	call	_BN_copy
	mov	eax, DWORD PTR _i$1$[esp+28]
	add	esp, 8
	inc	eax
	mov	DWORD PTR _i$1$[esp+20], eax
	cmp	eax, 100				; 00000064H
	jl	$LL4@test_rshif
; Line 2142
	push	ebp
	call	_BN_free
; Line 2143
	push	edi
	call	_BN_free
; Line 2144
	push	ebx
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 2145
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2146
	pop	ecx
	ret	0
$LN8@test_rshif:
; Line 2137
	push	OFFSET ??_C@_0BO@HCIEAMFO@Right?5shift?5one?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2138
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2146
	pop	ecx
	ret	0
_test_rshift1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_lshift
_TEXT	SEGMENT
_b$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ctx$ = 12						; size = 4
_i$1$ = 16						; size = 4
_a_$ = 16						; size = 4
_test_lshift PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 1981
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1985
	call	_BN_new
	mov	DWORD PTR _b$1$[esp+20], eax
; Line 1986
	call	_BN_new
	mov	edi, eax
; Line 1987
	call	_BN_new
; Line 1988
	push	1
	push	edi
	mov	ebp, eax
	call	_BN_set_word
; Line 1990
	mov	ebx, DWORD PTR _a_$[esp+24]
	add	esp, 8
	test	ebx, ebx
	jne	SHORT $LN6@test_lshif
; Line 1993
	call	_BN_new
; Line 1994
	push	0
	push	0
	mov	ebx, eax
	push	200					; 000000c8H
	push	ebx
	call	_BN_bntest_rand
; Line 2153
	mov	edx, DWORD PTR ?neg@?1??rand_neg@@9@9
; Line 1994
	add	esp, 16					; 00000010H
; Line 2153
	mov	ecx, edx
	and	ecx, 7
	inc	edx
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, edx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[ecx*4]
; Line 1995
	mov	DWORD PTR [ebx+12], eax
$LN6@test_lshif:
; Line 1997
	mov	esi, DWORD PTR _bp$[esp+16]
	xor	eax, eax
$LL4@test_lshif:
; Line 1998
	inc	eax
	push	eax
	push	ebx
	push	DWORD PTR _b$1$[esp+28]
	mov	DWORD PTR _i$1$[esp+28], eax
	call	_BN_lshift
; Line 1999
	push	edi
	push	edi
	push	edi
	call	_BN_add
	add	esp, 24					; 00000018H
; Line 2000
	test	esi, esi
	je	SHORT $LN7@test_lshif
; Line 2001
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN8@test_lshif
; Line 2002
	push	ebx
	push	esi
	call	_BN_print
; Line 2003
	push	OFFSET ??_C@_03NONHGIEJ@?5?$CK?5?$AA@
	push	esi
	call	_BIO_puts
; Line 2004
	push	edi
	push	esi
	call	_BN_print
; Line 2005
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN8@test_lshif:
; Line 2007
	push	DWORD PTR _b$1$[esp+20]
	push	esi
	call	_BN_print
; Line 2008
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN7@test_lshif:
; Line 2010
	push	DWORD PTR _ctx$[esp+16]
	push	edi
	push	ebx
	push	ebp
	call	_BN_mul
; Line 2011
	push	DWORD PTR _b$1$[esp+36]
	push	ebp
	push	ebp
	call	_BN_sub
	add	esp, 28					; 0000001cH
; Line 2012
	cmp	DWORD PTR [ebp+4], 0
	jne	SHORT $LN14@test_lshif
; Line 1997
	mov	eax, DWORD PTR _i$1$[esp+16]
	cmp	eax, 100				; 00000064H
	jl	$LL4@test_lshif
; Line 2026
	push	ebx
	call	_BN_free
; Line 2027
	push	DWORD PTR _b$1$[esp+24]
	call	_BN_free
; Line 2028
	push	edi
	call	_BN_free
; Line 2029
	push	ebp
	call	_BN_free
	add	esp, 16					; 00000010H
; Line 2030
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2031
	pop	ecx
	ret	0
$LN14@test_lshif:
; Line 2013
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0BJ@MFOOAFD@Left?5shift?5test?5failed?$CB?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2014
	push	OFFSET ??_C@_02CDEDMPEE@a?$DN?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2015
	push	ebx
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 2016
	push	OFFSET ??_C@_03JALNJHHH@?6b?$DN?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2017
	push	DWORD PTR _b$1$[esp+20]
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 2018
	push	OFFSET ??_C@_03JBHPPNEA@?6c?$DN?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2019
	push	edi
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 2020
	push	OFFSET ??_C@_03JEDAOLMF@?6d?$DN?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2021
	push	ebp
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_BN_print_fp
	add	esp, 8
; Line 2022
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2023
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2031
	pop	ecx
	ret	0
_test_lshift ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_lshift1
_TEXT	SEGMENT
_c$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_test_lshift1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 2034
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 2038
	call	_BN_new
	mov	esi, eax
; Line 2039
	call	_BN_new
	mov	ebx, eax
; Line 2040
	call	_BN_new
; Line 2042
	push	0
	push	0
	push	200					; 000000c8H
	push	esi
	mov	DWORD PTR _c$1$[esp+36], eax
	call	_BN_bntest_rand
; Line 2153
	mov	edx, DWORD PTR ?neg@?1??rand_neg@@9@9
; Line 2042
	add	esp, 16					; 00000010H
; Line 2044
	mov	edi, DWORD PTR _bp$[esp+16]
; Line 2153
	mov	ecx, edx
	and	ecx, 7
	inc	edx
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, edx
; Line 2044
	xor	ebp, ebp
; Line 2153
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[ecx*4]
; Line 2043
	mov	DWORD PTR [esi+12], eax
	npad	7
$LL4@test_lshif:
; Line 2045
	push	esi
	push	ebx
	call	_BN_lshift1
	add	esp, 8
; Line 2046
	test	edi, edi
	je	SHORT $LN5@test_lshif
; Line 2047
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN6@test_lshif
; Line 2048
	push	esi
	push	edi
	call	_BN_print
; Line 2049
	push	OFFSET ??_C@_04OCKOHKCN@?5?$CK?52?$AA@
	push	edi
	call	_BIO_puts
; Line 2050
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 24					; 00000018H
$LN6@test_lshif:
; Line 2052
	push	ebx
	push	edi
	call	_BN_print
; Line 2053
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN5@test_lshif:
; Line 2055
	push	esi
	push	esi
	push	DWORD PTR _c$1$[esp+28]
	call	_BN_add
; Line 2056
	push	DWORD PTR _c$1$[esp+32]
	push	ebx
	push	esi
	call	_BN_sub
	add	esp, 24					; 00000018H
; Line 2057
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN12@test_lshif
; Line 2062
	push	ebx
	push	esi
	call	_BN_copy
	inc	ebp
	add	esp, 8
	cmp	ebp, 100				; 00000064H
	jl	SHORT $LL4@test_lshif
; Line 2064
	push	esi
	call	_BN_free
; Line 2065
	push	ebx
	call	_BN_free
; Line 2066
	push	DWORD PTR _c$1$[esp+28]
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 2067
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2068
	pop	ecx
	ret	0
$LN12@test_lshif:
; Line 2058
	push	OFFSET ??_C@_0BN@PGABCNFP@Left?5shift?5one?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2059
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2068
	pop	ecx
	ret	0
_test_lshift1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_sub
_TEXT	SEGMENT
_a$ = -60						; size = 20
_b$ = -40						; size = 20
_c$ = -20						; size = 20
_bp$ = 8						; size = 4
_test_sub PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 389
	mov	eax, 60					; 0000003cH
	call	__chkstk
	push	esi
; Line 393
	lea	eax, DWORD PTR _a$[esp+64]
	push	edi
	push	eax
	call	_BN_init
; Line 394
	lea	eax, DWORD PTR _b$[esp+72]
	push	eax
	call	_BN_init
; Line 395
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_BN_init
; Line 397
	mov	edi, DWORD PTR _bp$[esp+76]
	add	esp, 12					; 0000000cH
	xor	esi, esi
$LL4@test_sub:
; Line 399
	push	0
	push	0
	cmp	esi, 50					; 00000032H
	jge	SHORT $LN5@test_sub
	lea	eax, DWORD PTR _a$[esp+76]
	push	512					; 00000200H
	push	eax
	call	_BN_bntest_rand
; Line 400
	lea	eax, DWORD PTR _a$[esp+84]
	push	eax
	lea	eax, DWORD PTR _b$[esp+88]
	push	eax
	call	_BN_copy
; Line 401
	lea	eax, DWORD PTR _a$[esp+92]
	push	esi
	push	eax
	call	_BN_set_bit
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$LN17@test_sub
; Line 403
	lea	eax, DWORD PTR _b$[esp+68]
	push	esi
	push	eax
	call	_BN_add_word
	add	esp, 8
; Line 404
	jmp	SHORT $LN6@test_sub
$LN5@test_sub:
; Line 405
	lea	eax, DWORD PTR [esi+350]
	push	eax
	lea	eax, DWORD PTR _b$[esp+80]
	push	eax
	call	_BN_bntest_rand
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
; Line 405
	add	esp, 16					; 00000010H
; Line 2153
	mov	eax, ecx
	and	eax, 7
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _a$[esp+80], eax
	lea	eax, DWORD PTR [ecx+1]
	and	eax, 7
	add	ecx, 2
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _b$[esp+80], eax
$LN6@test_sub:
; Line 409
	lea	eax, DWORD PTR _b$[esp+68]
	push	eax
	lea	eax, DWORD PTR _a$[esp+72]
	push	eax
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_BN_sub
	add	esp, 12					; 0000000cH
; Line 410
	test	edi, edi
	je	SHORT $LN8@test_sub
; Line 411
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN9@test_sub
; Line 412
	lea	eax, DWORD PTR _a$[esp+68]
	push	eax
	push	edi
	call	_BN_print
; Line 413
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	edi
	call	_BIO_puts
; Line 414
	lea	eax, DWORD PTR _b$[esp+84]
	push	eax
	push	edi
	call	_BN_print
; Line 415
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN9@test_sub:
; Line 417
	lea	eax, DWORD PTR _c$[esp+68]
	push	eax
	push	edi
	call	_BN_print
; Line 418
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN8@test_sub:
; Line 420
	lea	eax, DWORD PTR _b$[esp+68]
	push	eax
	lea	eax, DWORD PTR _c$[esp+72]
	push	eax
	push	eax
	call	_BN_add
; Line 421
	lea	eax, DWORD PTR _a$[esp+80]
	push	eax
	lea	eax, DWORD PTR _c$[esp+84]
	push	eax
	push	eax
	call	_BN_sub
	add	esp, 24					; 00000018H
; Line 422
	cmp	DWORD PTR _c$[esp+72], 0
	jne	SHORT $LN18@test_sub
; Line 397
	inc	esi
	cmp	esi, 150				; 00000096H
	jl	$LL4@test_sub
; Line 427
	lea	eax, DWORD PTR _a$[esp+68]
	push	eax
	call	_BN_free
; Line 428
	lea	eax, DWORD PTR _b$[esp+72]
	push	eax
	call	_BN_free
; Line 429
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 430
	mov	eax, 1
	pop	edi
	pop	esi
; Line 431
	add	esp, 60					; 0000003cH
	ret	0
$LN18@test_sub:
; Line 423
	push	OFFSET ??_C@_0BH@DINKFKCI@Subtract?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN17@test_sub:
; Line 424
	pop	edi
	xor	eax, eax
	pop	esi
; Line 431
	add	esp, 60					; 0000003cH
	ret	0
_test_sub ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_add
_TEXT	SEGMENT
_a$ = -60						; size = 20
_b$ = -40						; size = 20
_c$ = -20						; size = 20
_bp$ = 8						; size = 4
_test_add PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bntest.c
; Line 349
	mov	eax, 60					; 0000003cH
	call	__chkstk
	push	esi
; Line 353
	lea	eax, DWORD PTR _a$[esp+64]
	push	edi
	push	eax
	call	_BN_init
; Line 354
	lea	eax, DWORD PTR _b$[esp+72]
	push	eax
	call	_BN_init
; Line 355
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_BN_init
; Line 357
	push	0
	push	0
	lea	eax, DWORD PTR _a$[esp+88]
	push	512					; 00000200H
	push	eax
	call	_BN_bntest_rand
; Line 358
	mov	esi, DWORD PTR _bp$[esp+92]
	add	esp, 28					; 0000001cH
	xor	edi, edi
$LL4@test_add:
; Line 359
	push	0
	push	0
	lea	eax, DWORD PTR [edi+450]
	push	eax
	lea	eax, DWORD PTR _b$[esp+80]
	push	eax
	call	_BN_bntest_rand
; Line 2153
	mov	ecx, DWORD PTR ?neg@?1??rand_neg@@9@9
	mov	eax, ecx
	and	eax, 7
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _a$[esp+96], eax
	lea	eax, DWORD PTR [ecx+1]
	and	eax, 7
	add	ecx, 2
	mov	DWORD PTR ?neg@?1??rand_neg@@9@9, ecx
	mov	eax, DWORD PTR ?sign@?1??rand_neg@@9@9[eax*4]
	mov	DWORD PTR _b$[esp+96], eax
; Line 362
	lea	eax, DWORD PTR _b$[esp+84]
	push	eax
	lea	eax, DWORD PTR _a$[esp+88]
	push	eax
	lea	eax, DWORD PTR _c$[esp+92]
	push	eax
	call	_BN_add
	add	esp, 28					; 0000001cH
; Line 363
	test	esi, esi
	je	SHORT $LN5@test_add
; Line 364
	cmp	DWORD PTR _results, 0
	jne	SHORT $LN6@test_add
; Line 365
	lea	eax, DWORD PTR _a$[esp+68]
	push	eax
	push	esi
	call	_BN_print
; Line 366
	push	OFFSET ??_C@_03NPBFACHO@?5?$CL?5?$AA@
	push	esi
	call	_BIO_puts
; Line 367
	lea	eax, DWORD PTR _b$[esp+84]
	push	eax
	push	esi
	call	_BN_print
; Line 368
	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 32					; 00000020H
$LN6@test_add:
; Line 370
	lea	eax, DWORD PTR _c$[esp+68]
	push	eax
	push	esi
	call	_BN_print
; Line 371
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 16					; 00000010H
$LN5@test_add:
; Line 373
	xor	eax, eax
	cmp	DWORD PTR _a$[esp+80], eax
	sete	al
	mov	DWORD PTR _a$[esp+80], eax
; Line 374
	xor	eax, eax
	cmp	DWORD PTR _b$[esp+80], eax
	sete	al
	mov	DWORD PTR _b$[esp+80], eax
; Line 375
	lea	eax, DWORD PTR _b$[esp+68]
	push	eax
	lea	eax, DWORD PTR _c$[esp+72]
	push	eax
	push	eax
	call	_BN_add
; Line 376
	lea	eax, DWORD PTR _a$[esp+80]
	push	eax
	lea	eax, DWORD PTR _c$[esp+84]
	push	eax
	push	eax
	call	_BN_add
	add	esp, 24					; 00000018H
; Line 377
	cmp	DWORD PTR _c$[esp+72], 0
	jne	SHORT $LN14@test_add
; Line 358
	inc	edi
	cmp	edi, 100				; 00000064H
	jl	$LL4@test_add
; Line 382
	lea	eax, DWORD PTR _a$[esp+68]
	push	eax
	call	_BN_free
; Line 383
	lea	eax, DWORD PTR _b$[esp+72]
	push	eax
	call	_BN_free
; Line 384
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 385
	mov	eax, 1
	pop	edi
	pop	esi
; Line 386
	add	esp, 60					; 0000003cH
	ret	0
$LN14@test_add:
; Line 378
	push	OFFSET ??_C@_0BC@GONIJPPC@Add?5test?5failed?$CB?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 379
	xor	eax, eax
	pop	edi
	pop	esi
; Line 386
	add	esp, 60					; 0000003cH
	ret	0
_test_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

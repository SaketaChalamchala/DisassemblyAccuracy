; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_funct_ref DD	01H DUP (?)
_default_RAND_meth DD 01H DUP (?)
_BSS	ENDS
PUBLIC	_RAND_set_rand_method
PUBLIC	_RAND_get_rand_method
PUBLIC	_RAND_set_rand_engine
PUBLIC	_RAND_cleanup
PUBLIC	_RAND_bytes
PUBLIC	_RAND_pseudo_bytes
PUBLIC	_RAND_seed
PUBLIC	_RAND_add
PUBLIC	_RAND_status
EXTRN	_RAND_SSLeay:PROC
EXTRN	_ENGINE_get_RAND:PROC
EXTRN	_ENGINE_init:PROC
EXTRN	_ENGINE_finish:PROC
EXTRN	_ENGINE_get_default_RAND:PROC
EXTRN	__chkstk:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _RAND_status
_TEXT	SEGMENT
_RAND_status PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 94
	mov	eax, DWORD PTR _default_RAND_meth
	test	eax, eax
	jne	SHORT $LN11@RAND_statu
	push	esi
; Line 96
	call	_ENGINE_get_default_RAND
	mov	esi, eax
; Line 97
	test	esi, esi
	je	SHORT $LN8@RAND_statu
; Line 98
	push	esi
	call	_ENGINE_get_RAND
	add	esp, 4
	mov	DWORD PTR _default_RAND_meth, eax
; Line 99
	test	eax, eax
	jne	SHORT $LN7@RAND_statu
; Line 100
	push	esi
	call	_ENGINE_finish
	add	esp, 4
$LN8@RAND_statu:
; Line 108
	call	_RAND_SSLeay
	mov	DWORD PTR _default_RAND_meth, eax
$LN9@RAND_statu:
	pop	esi
; Line 174
	test	eax, eax
	je	SHORT $LN2@RAND_statu
$LN11@RAND_statu:
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	SHORT $LN2@RAND_statu
; Line 175
	jmp	eax
$LN7@RAND_statu:
; Line 105
	mov	DWORD PTR _funct_ref, esi
	jmp	SHORT $LN9@RAND_statu
$LN2@RAND_statu:
; Line 176
	xor	eax, eax
; Line 177
	ret	0
_RAND_status ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_add
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_num$ = 12						; size = 4
_entropy$ = 16						; size = 8
_RAND_add PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 94
	mov	eax, DWORD PTR _default_RAND_meth
	test	eax, eax
	jne	SHORT $LN11@RAND_add
	push	esi
; Line 96
	call	_ENGINE_get_default_RAND
	mov	esi, eax
; Line 97
	test	esi, esi
	je	SHORT $LN8@RAND_add
; Line 98
	push	esi
	call	_ENGINE_get_RAND
	add	esp, 4
	mov	DWORD PTR _default_RAND_meth, eax
; Line 99
	test	eax, eax
	jne	SHORT $LN7@RAND_add
; Line 100
	push	esi
	call	_ENGINE_finish
	add	esp, 4
$LN8@RAND_add:
; Line 108
	call	_RAND_SSLeay
	mov	DWORD PTR _default_RAND_meth, eax
$LN9@RAND_add:
	pop	esi
; Line 151
	test	eax, eax
	je	SHORT $LN2@RAND_add
$LN11@RAND_add:
	mov	ecx, DWORD PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN2@RAND_add
; Line 152
	mov	eax, 8
	call	__chkstk
	movsd	xmm0, QWORD PTR _entropy$[esp+4]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _num$[esp+4]
	push	DWORD PTR _buf$[esp+8]
	call	ecx
	add	esp, 16					; 00000010H
$LN2@RAND_add:
; Line 153
	ret	0
$LN7@RAND_add:
; Line 105
	mov	DWORD PTR _funct_ref, esi
	jmp	SHORT $LN9@RAND_add
_RAND_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_seed
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_num$ = 12						; size = 4
_RAND_seed PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 94
	mov	eax, DWORD PTR _default_RAND_meth
	test	eax, eax
	jne	SHORT $LN11@RAND_seed
	push	esi
; Line 96
	call	_ENGINE_get_default_RAND
	mov	esi, eax
; Line 97
	test	esi, esi
	je	SHORT $LN8@RAND_seed
; Line 98
	push	esi
	call	_ENGINE_get_RAND
	add	esp, 4
	mov	DWORD PTR _default_RAND_meth, eax
; Line 99
	test	eax, eax
	jne	SHORT $LN7@RAND_seed
; Line 100
	push	esi
	call	_ENGINE_finish
	add	esp, 4
$LN8@RAND_seed:
; Line 108
	call	_RAND_SSLeay
	mov	DWORD PTR _default_RAND_meth, eax
$LN9@RAND_seed:
	pop	esi
; Line 144
	test	eax, eax
	je	SHORT $LN2@RAND_seed
$LN11@RAND_seed:
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN2@RAND_seed
; Line 145
	jmp	eax
$LN7@RAND_seed:
; Line 105
	mov	DWORD PTR _funct_ref, esi
	jmp	SHORT $LN9@RAND_seed
$LN2@RAND_seed:
; Line 146
	ret	0
_RAND_seed ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_pseudo_bytes
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_num$ = 12						; size = 4
_RAND_pseudo_bytes PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 94
	mov	eax, DWORD PTR _default_RAND_meth
	test	eax, eax
	jne	SHORT $LN11@RAND_pseud
	push	esi
; Line 96
	call	_ENGINE_get_default_RAND
	mov	esi, eax
; Line 97
	test	esi, esi
	je	SHORT $LN8@RAND_pseud
; Line 98
	push	esi
	call	_ENGINE_get_RAND
	add	esp, 4
	mov	DWORD PTR _default_RAND_meth, eax
; Line 99
	test	eax, eax
	jne	SHORT $LN7@RAND_pseud
; Line 100
	push	esi
	call	_ENGINE_finish
	add	esp, 4
$LN8@RAND_pseud:
; Line 108
	call	_RAND_SSLeay
	mov	DWORD PTR _default_RAND_meth, eax
$LN9@RAND_pseud:
	pop	esi
; Line 166
	test	eax, eax
	je	SHORT $LN2@RAND_pseud
$LN11@RAND_pseud:
	mov	eax, DWORD PTR [eax+16]
	test	eax, eax
	je	SHORT $LN2@RAND_pseud
; Line 167
	jmp	eax
$LN7@RAND_pseud:
; Line 105
	mov	DWORD PTR _funct_ref, esi
	jmp	SHORT $LN9@RAND_pseud
$LN2@RAND_pseud:
; Line 168
	or	eax, -1
; Line 169
	ret	0
_RAND_pseudo_bytes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_bytes
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_num$ = 12						; size = 4
_RAND_bytes PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 94
	mov	eax, DWORD PTR _default_RAND_meth
	test	eax, eax
	jne	SHORT $LN11@RAND_bytes
	push	esi
; Line 96
	call	_ENGINE_get_default_RAND
	mov	esi, eax
; Line 97
	test	esi, esi
	je	SHORT $LN8@RAND_bytes
; Line 98
	push	esi
	call	_ENGINE_get_RAND
	add	esp, 4
	mov	DWORD PTR _default_RAND_meth, eax
; Line 99
	test	eax, eax
	jne	SHORT $LN7@RAND_bytes
; Line 100
	push	esi
	call	_ENGINE_finish
	add	esp, 4
$LN8@RAND_bytes:
; Line 108
	call	_RAND_SSLeay
	mov	DWORD PTR _default_RAND_meth, eax
$LN9@RAND_bytes:
	pop	esi
; Line 158
	test	eax, eax
	je	SHORT $LN2@RAND_bytes
$LN11@RAND_bytes:
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN2@RAND_bytes
; Line 159
	jmp	eax
$LN7@RAND_bytes:
; Line 105
	mov	DWORD PTR _funct_ref, esi
	jmp	SHORT $LN9@RAND_bytes
$LN2@RAND_bytes:
; Line 160
	or	eax, -1
; Line 161
	ret	0
_RAND_bytes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_cleanup
_TEXT	SEGMENT
_RAND_cleanup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 94
	mov	eax, DWORD PTR _default_RAND_meth
	test	eax, eax
	jne	SHORT $LN16@RAND_clean
	push	esi
; Line 96
	call	_ENGINE_get_default_RAND
	mov	esi, eax
; Line 97
	test	esi, esi
	je	SHORT $LN8@RAND_clean
; Line 98
	push	esi
	call	_ENGINE_get_RAND
	add	esp, 4
	mov	DWORD PTR _default_RAND_meth, eax
; Line 99
	test	eax, eax
	jne	SHORT $LN7@RAND_clean
; Line 100
	push	esi
	call	_ENGINE_finish
	add	esp, 4
$LN8@RAND_clean:
; Line 108
	call	_RAND_SSLeay
	mov	DWORD PTR _default_RAND_meth, eax
$LN9@RAND_clean:
	pop	esi
; Line 136
	test	eax, eax
	je	SHORT $LN2@RAND_clean
$LN16@RAND_clean:
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	je	SHORT $LN2@RAND_clean
; Line 137
	call	eax
$LN2@RAND_clean:
; Line 83
	mov	eax, DWORD PTR _funct_ref
	test	eax, eax
	je	SHORT $LN15@RAND_clean
; Line 84
	push	eax
	call	_ENGINE_finish
	add	esp, 4
; Line 85
	mov	DWORD PTR _funct_ref, 0
$LN15@RAND_clean:
; Line 88
	mov	DWORD PTR _default_RAND_meth, 0
; Line 139
	ret	0
$LN7@RAND_clean:
; Line 105
	mov	DWORD PTR _funct_ref, esi
	jmp	SHORT $LN9@RAND_clean
_RAND_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_set_rand_engine
_TEXT	SEGMENT
_engine$ = 8						; size = 4
_RAND_set_rand_engine PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 115
	push	esi
; Line 117
	mov	esi, DWORD PTR _engine$[esp]
	push	edi
	xor	edi, edi
	test	esi, esi
	je	SHORT $LN4@RAND_set_r
; Line 118
	push	esi
	call	_ENGINE_init
	add	esp, 4
	test	eax, eax
	je	SHORT $LN9@RAND_set_r
; Line 120
	push	esi
	call	_ENGINE_get_RAND
	mov	edi, eax
	add	esp, 4
; Line 121
	test	edi, edi
	jne	SHORT $LN4@RAND_set_r
; Line 122
	push	esi
	call	_ENGINE_finish
	add	esp, 4
$LN9@RAND_set_r:
; Line 123
	pop	edi
	xor	eax, eax
	pop	esi
; Line 130
	ret	0
$LN4@RAND_set_r:
; Line 83
	mov	eax, DWORD PTR _funct_ref
	test	eax, eax
	je	SHORT $LN7@RAND_set_r
; Line 84
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN7@RAND_set_r:
; Line 88
	mov	DWORD PTR _default_RAND_meth, edi
; Line 129
	mov	eax, 1
	pop	edi
	mov	DWORD PTR _funct_ref, esi
	pop	esi
; Line 130
	ret	0
_RAND_set_rand_engine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_get_rand_method
_TEXT	SEGMENT
_RAND_get_rand_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 94
	mov	eax, DWORD PTR _default_RAND_meth
	test	eax, eax
	jne	SHORT $LN6@RAND_get_r
; Line 96
	push	esi
	call	_ENGINE_get_default_RAND
	mov	esi, eax
; Line 97
	test	esi, esi
	je	SHORT $LN5@RAND_get_r
; Line 98
	push	esi
	call	_ENGINE_get_RAND
	add	esp, 4
	mov	DWORD PTR _default_RAND_meth, eax
; Line 99
	test	eax, eax
	jne	SHORT $LN4@RAND_get_r
; Line 100
	push	esi
	call	_ENGINE_finish
	add	esp, 4
$LN5@RAND_get_r:
; Line 108
	call	_RAND_SSLeay
	mov	DWORD PTR _default_RAND_meth, eax
	pop	esi
$LN6@RAND_get_r:
; Line 111
	ret	0
$LN4@RAND_get_r:
; Line 105
	mov	DWORD PTR _funct_ref, esi
	pop	esi
; Line 111
	ret	0
_RAND_get_rand_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_set_rand_method
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_RAND_set_rand_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\rand_lib.c
; Line 83
	mov	eax, DWORD PTR _funct_ref
	test	eax, eax
	je	SHORT $LN4@RAND_set_r
; Line 84
	push	eax
	call	_ENGINE_finish
	add	esp, 4
; Line 85
	mov	DWORD PTR _funct_ref, 0
$LN4@RAND_set_r:
; Line 88
	mov	eax, DWORD PTR _meth$[esp-4]
	mov	DWORD PTR _default_RAND_meth, eax
; Line 89
	mov	eax, 1
; Line 90
	ret	0
_RAND_set_rand_method ENDP
_TEXT	ENDS
END

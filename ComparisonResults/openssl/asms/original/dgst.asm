; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\dgst.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_do_fp
PUBLIC	_dgst_main
PUBLIC	??_C@_0CP@GAPFEHMI@?9?$CF?914s?5to?5use?5the?5?$CFs?5message?5dig@ ; `string'
PUBLIC	??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@	; `string'
PUBLIC	??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_02HOPLMLDK@?9c?$AA@			; `string'
PUBLIC	??_C@_02CNCCOICK@?9r?$AA@			; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_05LLLFPBKO@?9sign?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_09BIBKEPCC@?9prverify?$AA@		; `string'
PUBLIC	??_C@_0L@OJINPCDP@?9signature?$AA@		; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0N@FEJBABNG@?9engine_impl?$AA@		; `string'
PUBLIC	??_C@_04FHOEMGIO@?9hex?$AA@			; `string'
PUBLIC	??_C@_07MHGMHDIE@?9binary?$AA@			; `string'
PUBLIC	??_C@_02DBLKFNPN@?9d?$AA@			; `string'
PUBLIC	??_C@_0BC@FNMAMJJG@?9fips?9fingerprint?$AA@	; `string'
PUBLIC	??_C@_0BB@CGGLALOK@etaonrishdlcupfm?$AA@	; `string'
PUBLIC	??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@	; `string'
PUBLIC	??_C@_05JCMEMCJF@?9hmac?$AA@			; `string'
PUBLIC	??_C@_04MOAFFFPK@?9mac?$AA@			; `string'
PUBLIC	??_C@_07FNCAFLJP@?9sigopt?$AA@			; `string'
PUBLIC	??_C@_07HDBCJIKB@?9macopt?$AA@			; `string'
PUBLIC	??_C@_0DD@GKPODFDO@No?5signature?5to?5verify?3?5use?5the?5@ ; `string'
PUBLIC	??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_0N@NDELNNPO@options?5are?6?$AA@		; `string'
PUBLIC	??_C@_0DN@FOLCEOOL@?9c?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@ ; `string'
PUBLIC	??_C@_0DK@GBFCJLIB@?9r?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@ ; `string'
PUBLIC	??_C@_0CG@ENDMFKMC@?9d?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5debug?5@ ; `string'
PUBLIC	??_C@_0CE@CLNAEPPP@?9hex?5?5?5?5?5?5?5?5?5?5?5?5output?5as?5hex?5du@ ; `string'
PUBLIC	??_C@_0CH@LAJCNBHL@?9binary?5?5?5?5?5?5?5?5?5output?5in?5binary@ ; `string'
PUBLIC	??_C@_0CJ@ONPOPFDN@?9hmac?5arg?5?5?5?5?5?5?5set?5the?5HMAC?5key@ ; `string'
PUBLIC	??_C@_0CO@PLNAMJPF@?9non?9fips?9allow?5allow?5use?5of?5non@ ; `string'
PUBLIC	??_C@_0DH@BMCAMLFJ@?9sign?5?5?5file?5?5?5?5sign?5digest?5usin@ ; `string'
PUBLIC	??_C@_0DN@EFCACMAO@?9verify?5file?5?5?5?5verify?5a?5signatu@ ; `string'
PUBLIC	??_C@_0DO@GEMDHAA@?9prverify?5file?5?5verify?5a?5signatu@ ; `string'
PUBLIC	??_C@_0DB@PAGBKFPO@?9keyform?5arg?5?5?5?5key?5file?5format?5@ ; `string'
PUBLIC	??_C@_0DH@ECKLJJDH@?9out?5filename?5?5?5output?5to?5filena@ ; `string'
PUBLIC	??_C@_0CF@LIPHEFLJ@?9signature?5file?5signature?5to?5ver@ ; `string'
PUBLIC	??_C@_0CF@EANICGDJ@?9sigopt?5nm?3v?5?5?5?5signature?5parame@ ; `string'
PUBLIC	??_C@_0CM@HGAGEEFO@?9hmac?5key?5?5?5?5?5?5?5create?5hashed?5MA@ ; `string'
PUBLIC	??_C@_0DE@EAJCPJLC@?9mac?5algorithm?5?5create?5MAC?5?$CInot?5@ ; `string'
PUBLIC	??_C@_0DB@LDFLCNGL@?9macopt?5nm?3v?5?5?5?5MAC?5algorithm?5pa@ ; `string'
PUBLIC	??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ ; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_08NJHPALLI@?$CIstdout?$CJ?$AA@		; `string'
PUBLIC	??_C@_0BO@DPODBOGA@Error?5opening?5output?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CO@GBKPBPPB@MAC?5and?5Signing?5key?5cannot?5both?5@ ; `string'
PUBLIC	??_C@_08CIIMFNPL@key?5file?$AA@			; `string'
PUBLIC	??_C@_0BK@CMBNPJKN@MAC?5parameter?5error?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@HIAIGHKF@Error?5getting?5context?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@BMFBNJBH@Error?5setting?5context?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CIENJBPC@Error?5setting?5digest?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0CB@GJFPMJA@Error?5opening?5signature?5file?5?$CFs?6@ ; `string'
PUBLIC	??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0CB@CPOCADA@Error?5reading?5signature?5file?5?$CFs?6@ ; `string'
PUBLIC	??_C@_05MHOFLBOO@stdin?$AA@			; `string'
PUBLIC	??_C@_0BC@DKNKBAL@Read?5Error?5in?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0N@EMAJAODF@Verified?5OK?6?$AA@		; `string'
PUBLIC	??_C@_0BG@PBEFODBB@Verification?5Failure?6?$AA@	; `string'
PUBLIC	??_C@_0BG@DEPCNIJM@Error?5Verifying?5Data?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@MGCALGC@Error?5Signing?5Data?6?$AA@	; `string'
PUBLIC	??_C@_04NOJCDH@?$CF02x?$AA@			; `string'
PUBLIC	??_C@_05PJFEANEA@?5?$CK?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_03LGHHPJDO@?9?$CFs?$AA@			; `string'
PUBLIC	??_C@_06BDNPOLDF@?$CI?$CFs?$CJ?$DN?5?$AA@	; `string'
PUBLIC	??_C@_08ICADHBHK@?$CFs?$CI?$CFs?$CJ?$DN?5?$AA@	; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__strchr:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_set_callback:PROC
EXTRN	_BIO_set_callback_arg:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_debug_callback:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_OBJ_nid2ln:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_MD_flags:PROC
EXTRN	_EVP_MD_CTX_md:PROC
EXTRN	_EVP_MD_CTX_set_flags:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestSignInit:PROC
EXTRN	_EVP_DigestSignFinal:PROC
EXTRN	_EVP_DigestVerifyInit:PROC
EXTRN	_EVP_DigestVerifyFinal:PROC
EXTRN	_BIO_f_md:PROC
EXTRN	_EVP_md5:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_MD_do_all_sorted:PROC
EXTRN	_EVP_PKEY_size:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_asn1_get0_info:PROC
EXTRN	_EVP_PKEY_get0_asn1:PROC
EXTRN	_EVP_PKEY_CTX_free:PROC
EXTRN	_EVP_PKEY_new_mac_key:PROC
EXTRN	_EVP_PKEY_keygen:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_str2fmt:PROC
EXTRN	_program_name:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_key:PROC
EXTRN	_load_pubkey:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_pkey_ctrl_string:PROC
EXTRN	_init_gen_str:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08ICADHBHK@?$CFs?$CI?$CFs?$CJ?$DN?5?$AA@
CONST	SEGMENT
??_C@_08ICADHBHK@?$CFs?$CI?$CFs?$CJ?$DN?5?$AA@ DB '%s(%s)= ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BDNPOLDF@?$CI?$CFs?$CJ?$DN?5?$AA@
CONST	SEGMENT
??_C@_06BDNPOLDF@?$CI?$CFs?$CJ?$DN?5?$AA@ DB '(%s)= ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LGHHPJDO@?9?$CFs?$AA@
CONST	SEGMENT
??_C@_03LGHHPJDO@?9?$CFs?$AA@ DB '-%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PJFEANEA@?5?$CK?$CFs?6?$AA@
CONST	SEGMENT
??_C@_05PJFEANEA@?5?$CK?$CFs?6?$AA@ DB ' *%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04NOJCDH@?$CF02x?$AA@
CONST	SEGMENT
??_C@_04NOJCDH@?$CF02x?$AA@ DB '%02x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MGCALGC@Error?5Signing?5Data?6?$AA@
CONST	SEGMENT
??_C@_0BE@MGCALGC@Error?5Signing?5Data?6?$AA@ DB 'Error Signing Data', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DEPCNIJM@Error?5Verifying?5Data?6?$AA@
CONST	SEGMENT
??_C@_0BG@DEPCNIJM@Error?5Verifying?5Data?6?$AA@ DB 'Error Verifying Data'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PBEFODBB@Verification?5Failure?6?$AA@
CONST	SEGMENT
??_C@_0BG@PBEFODBB@Verification?5Failure?6?$AA@ DB 'Verification Failure', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EMAJAODF@Verified?5OK?6?$AA@
CONST	SEGMENT
??_C@_0N@EMAJAODF@Verified?5OK?6?$AA@ DB 'Verified OK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DKNKBAL@Read?5Error?5in?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@DKNKBAL@Read?5Error?5in?5?$CFs?6?$AA@ DB 'Read Error in %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHOFLBOO@stdin?$AA@
CONST	SEGMENT
??_C@_05MHOFLBOO@stdin?$AA@ DB 'stdin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CPOCADA@Error?5reading?5signature?5file?5?$CFs?6@
CONST	SEGMENT
??_C@_0CB@CPOCADA@Error?5reading?5signature?5file?5?$CFs?6@ DB 'Error rea'
	DB	'ding signature file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ DB 'Out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GJFPMJA@Error?5opening?5signature?5file?5?$CFs?6@
CONST	SEGMENT
??_C@_0CB@GJFPMJA@Error?5opening?5signature?5file?5?$CFs?6@ DB 'Error ope'
	DB	'ning signature file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CIENJBPC@Error?5setting?5digest?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BJ@CIENJBPC@Error?5setting?5digest?5?$CFs?6?$AA@ DB 'Error setting'
	DB	' digest %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@ DB 'parameter e'
	DB	'rror "%s"', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BMFBNJBH@Error?5setting?5context?6?$AA@
CONST	SEGMENT
??_C@_0BH@BMFBNJBH@Error?5setting?5context?6?$AA@ DB 'Error setting conte'
	DB	'xt', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HIAIGHKF@Error?5getting?5context?6?$AA@
CONST	SEGMENT
??_C@_0BH@HIAIGHKF@Error?5getting?5context?6?$AA@ DB 'Error getting conte'
	DB	'xt', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@
CONST	SEGMENT
??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@ DB 'Error generating key'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CMBNPJKN@MAC?5parameter?5error?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BK@CMBNPJKN@MAC?5parameter?5error?5?$CC?$CFs?$CC?6?$AA@ DB 'MAC pa'
	DB	'rameter error "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CIIMFNPL@key?5file?$AA@
CONST	SEGMENT
??_C@_08CIIMFNPL@key?5file?$AA@ DB 'key file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GBKPBPPB@MAC?5and?5Signing?5key?5cannot?5both?5@
CONST	SEGMENT
??_C@_0CO@GBKPBPPB@MAC?5and?5Signing?5key?5cannot?5both?5@ DB 'MAC and Si'
	DB	'gning key cannot both be specified', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DPODBOGA@Error?5opening?5output?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BO@DPODBOGA@Error?5opening?5output?5file?5?$CFs?6?$AA@ DB 'Error o'
	DB	'pening output file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJHPALLI@?$CIstdout?$CJ?$AA@
CONST	SEGMENT
??_C@_08NJHPALLI@?$CIstdout?$CJ?$AA@ DB '(stdout)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
CONST	SEGMENT
??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ DB '-en'
	DB	'gine e       use engine e, possibly a hardware device.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@LDFLCNGL@?9macopt?5nm?3v?5?5?5?5MAC?5algorithm?5pa@
CONST	SEGMENT
??_C@_0DB@LDFLCNGL@?9macopt?5nm?3v?5?5?5?5MAC?5algorithm?5pa@ DB '-macopt'
	DB	' nm:v    MAC algorithm parameters or key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@EAJCPJLC@?9mac?5algorithm?5?5create?5MAC?5?$CInot?5@
CONST	SEGMENT
??_C@_0DE@EAJCPJLC@?9mac?5algorithm?5?5create?5MAC?5?$CInot?5@ DB '-mac a'
	DB	'lgorithm  create MAC (not neccessarily HMAC)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HGAGEEFO@?9hmac?5key?5?5?5?5?5?5?5create?5hashed?5MA@
CONST	SEGMENT
??_C@_0CM@HGAGEEFO@?9hmac?5key?5?5?5?5?5?5?5create?5hashed?5MA@ DB '-hmac'
	DB	' key       create hashed MAC with key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@EANICGDJ@?9sigopt?5nm?3v?5?5?5?5signature?5parame@
CONST	SEGMENT
??_C@_0CF@EANICGDJ@?9sigopt?5nm?3v?5?5?5?5signature?5parame@ DB '-sigopt '
	DB	'nm:v    signature parameter', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LIPHEFLJ@?9signature?5file?5signature?5to?5ver@
CONST	SEGMENT
??_C@_0CF@LIPHEFLJ@?9signature?5file?5signature?5to?5ver@ DB '-signature '
	DB	'file signature to verify', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@ECKLJJDH@?9out?5filename?5?5?5output?5to?5filena@
CONST	SEGMENT
??_C@_0DH@ECKLJJDH@?9out?5filename?5?5?5output?5to?5filena@ DB '-out file'
	DB	'name   output to filename rather than stdout', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@PAGBKFPO@?9keyform?5arg?5?5?5?5key?5file?5format?5@
CONST	SEGMENT
??_C@_0DB@PAGBKFPO@?9keyform?5arg?5?5?5?5key?5file?5format?5@ DB '-keyfor'
	DB	'm arg    key file format (PEM or ENGINE)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@GEMDHAA@?9prverify?5file?5?5verify?5a?5signatu@
CONST	SEGMENT
??_C@_0DO@GEMDHAA@?9prverify?5file?5?5verify?5a?5signatu@ DB '-prverify f'
	DB	'ile  verify a signature using private key in file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@EFCACMAO@?9verify?5file?5?5?5?5verify?5a?5signatu@
CONST	SEGMENT
??_C@_0DN@EFCACMAO@?9verify?5file?5?5?5?5verify?5a?5signatu@ DB '-verify '
	DB	'file    verify a signature using public key in file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@BMCAMLFJ@?9sign?5?5?5file?5?5?5?5sign?5digest?5usin@
CONST	SEGMENT
??_C@_0DH@BMCAMLFJ@?9sign?5?5?5file?5?5?5?5sign?5digest?5usin@ DB '-sign '
	DB	'  file    sign digest using private key in file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@PLNAMJPF@?9non?9fips?9allow?5allow?5use?5of?5non@
CONST	SEGMENT
??_C@_0CO@PLNAMJPF@?9non?9fips?9allow?5allow?5use?5of?5non@ DB '-non-fips'
	DB	'-allow allow use of non FIPS digest', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@ONPOPFDN@?9hmac?5arg?5?5?5?5?5?5?5set?5the?5HMAC?5key@
CONST	SEGMENT
??_C@_0CJ@ONPOPFDN@?9hmac?5arg?5?5?5?5?5?5?5set?5the?5HMAC?5key@ DB '-hma'
	DB	'c arg       set the HMAC key to arg', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LAJCNBHL@?9binary?5?5?5?5?5?5?5?5?5output?5in?5binary@
CONST	SEGMENT
??_C@_0CH@LAJCNBHL@?9binary?5?5?5?5?5?5?5?5?5output?5in?5binary@ DB '-bin'
	DB	'ary         output in binary form', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CLNAEPPP@?9hex?5?5?5?5?5?5?5?5?5?5?5?5output?5as?5hex?5du@
CONST	SEGMENT
??_C@_0CE@CLNAEPPP@?9hex?5?5?5?5?5?5?5?5?5?5?5?5output?5as?5hex?5du@ DB '-'
	DB	'hex            output as hex dump', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ENDMFKMC@?9d?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5debug?5@
CONST	SEGMENT
??_C@_0CG@ENDMFKMC@?9d?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5debug?5@ DB '-'
	DB	'd              to output debug info', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@GBFCJLIB@?9r?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@
CONST	SEGMENT
??_C@_0DK@GBFCJLIB@?9r?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@ DB '-'
	DB	'r              to output the digest in coreutils format', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@FOLCEOOL@?9c?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@
CONST	SEGMENT
??_C@_0DN@FOLCEOOL@?9c?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@ DB '-'
	DB	'c              to output the digest with separating colons', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NDELNNPO@options?5are?6?$AA@
CONST	SEGMENT
??_C@_0N@NDELNNPO@options?5are?6?$AA@ DB 'options are', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@ DB 'unknown option '''
	DB	'%s''', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GKPODFDO@No?5signature?5to?5verify?3?5use?5the?5@
CONST	SEGMENT
??_C@_0DD@GKPODFDO@No?5signature?5to?5verify?3?5use?5the?5@ DB 'No signat'
	DB	'ure to verify: use the -signature option', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HDBCJIKB@?9macopt?$AA@
CONST	SEGMENT
??_C@_07HDBCJIKB@?9macopt?$AA@ DB '-macopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FNCAFLJP@?9sigopt?$AA@
CONST	SEGMENT
??_C@_07FNCAFLJP@?9sigopt?$AA@ DB '-sigopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MOAFFFPK@?9mac?$AA@
CONST	SEGMENT
??_C@_04MOAFFFPK@?9mac?$AA@ DB '-mac', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JCMEMCJF@?9hmac?$AA@
CONST	SEGMENT
??_C@_05JCMEMCJF@?9hmac?$AA@ DB '-hmac', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@
CONST	SEGMENT
??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@ DB '-non-fips-allow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CGGLALOK@etaonrishdlcupfm?$AA@
CONST	SEGMENT
??_C@_0BB@CGGLALOK@etaonrishdlcupfm?$AA@ DB 'etaonrishdlcupfm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FNMAMJJG@?9fips?9fingerprint?$AA@
CONST	SEGMENT
??_C@_0BC@FNMAMJJG@?9fips?9fingerprint?$AA@ DB '-fips-fingerprint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DBLKFNPN@?9d?$AA@
CONST	SEGMENT
??_C@_02DBLKFNPN@?9d?$AA@ DB '-d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07MHGMHDIE@?9binary?$AA@
CONST	SEGMENT
??_C@_07MHGMHDIE@?9binary?$AA@ DB '-binary', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FHOEMGIO@?9hex?$AA@
CONST	SEGMENT
??_C@_04FHOEMGIO@?9hex?$AA@ DB '-hex', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FEJBABNG@?9engine_impl?$AA@
CONST	SEGMENT
??_C@_0N@FEJBABNG@?9engine_impl?$AA@ DB '-engine_impl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OJINPCDP@?9signature?$AA@
CONST	SEGMENT
??_C@_0L@OJINPCDP@?9signature?$AA@ DB '-signature', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BIBKEPCC@?9prverify?$AA@
CONST	SEGMENT
??_C@_09BIBKEPCC@?9prverify?$AA@ DB '-prverify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LLLFPBKO@?9sign?$AA@
CONST	SEGMENT
??_C@_05LLLFPBKO@?9sign?$AA@ DB '-sign', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CNCCOICK@?9r?$AA@
CONST	SEGMENT
??_C@_02CNCCOICK@?9r?$AA@ DB '-r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HOPLMLDK@?9c?$AA@
CONST	SEGMENT
??_C@_02HOPLMLDK@?9c?$AA@ DB '-c', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ DB 'out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@
CONST	SEGMENT
??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@ DB '.\apps\dgst.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GAPFEHMI@?9?$CF?914s?5to?5use?5the?5?$CFs?5message?5dig@
CONST	SEGMENT
??_C@_0CP@GAPFEHMI@?9?$CF?914s?5to?5use?5the?5?$CFs?5message?5dig@ DB '-%'
	DB	'-14s to use the %s message digest algorithm', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dgst_main
_TEXT	SEGMENT
_sigkey$ = -160						; size = 4
_err$1$ = -156						; size = 4
_impl$1$ = -156						; size = 4
_e$1$ = -152						; size = 4
_mac_ctx$1 = -152					; size = 4
_out_bin$1$ = -148					; size = 4
_bmd$1$ = -144						; size = 4
_hmac_key$1$ = -140					; size = 4
_pctx$2 = -140						; size = 4
_in$1$ = -136						; size = 4
_keyform$1$ = -132					; size = 4
_mctx$3 = -132						; size = 4
_non_fips_allow$1$ = -128				; size = 4
_mctx$4 = -128						; size = 4
_md_ctx$5 = -128					; size = 4
_md$1$ = -124						; size = 4
_argv$GSCopy$1$ = -120					; size = 4
_out$1$ = -116						; size = 4
_macopts$1$ = -112					; size = 4
_want_pub$1$ = -108					; size = 4
_sig_name$6 = -108					; size = 4
_keyfile$1$ = -104					; size = 4
_do_verify$1$ = -100					; size = 4
_separator$1$ = -96					; size = 4
_buf$1$ = -92						; size = 4
_sigbuf$1$ = -88					; size = 4
_mac_name$1$ = -84					; size = 4
_tctx$7 = -84						; size = 4
_sigfile$1$ = -80					; size = 4
_siglen$2$ = -76					; size = 4
_sigopts$1$ = -72					; size = 4
_passin$ = -68						; size = 4
_engine_impl$1$ = -64					; size = 4
_debug$1$ = -60						; size = 4
_passargin$1$ = -56					; size = 4
_randfile$1$ = -52					; size = 4
_outfile$1$ = -48					; size = 4
_pname$ = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_dgst_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\dgst.c
; Line 105
	mov	eax, 160				; 000000a0H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+160], eax
	push	ebx
	push	ebp
; Line 119
	xor	eax, eax
	mov	DWORD PTR _e$1$[esp+168], 0
	push	esi
	push	edi
	mov	edi, DWORD PTR _argv$[esp+172]
	xor	esi, esi
; Line 136
	push	136					; 00000088H
	push	OFFSET ??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@
	xor	ebp, ebp
	mov	DWORD PTR _impl$1$[esp+184], 0
	push	8192					; 00002000H
	mov	ebx, 1
	mov	DWORD PTR _in$1$[esp+188], 0
	mov	DWORD PTR _bmd$1$[esp+188], 0
	mov	DWORD PTR _out$1$[esp+188], 0
	mov	DWORD PTR _separator$1$[esp+188], 0
	mov	DWORD PTR _debug$1$[esp+188], 0
	mov	DWORD PTR _keyform$1$[esp+188], 3
	mov	DWORD PTR _outfile$1$[esp+188], 0
	mov	DWORD PTR _keyfile$1$[esp+188], esi
	mov	DWORD PTR _sigfile$1$[esp+188], eax
	mov	DWORD PTR _randfile$1$[esp+188], eax
	mov	DWORD PTR _out_bin$1$[esp+188], -1
	mov	DWORD PTR _want_pub$1$[esp+188], eax
	mov	DWORD PTR _do_verify$1$[esp+188], eax
	mov	DWORD PTR _sigkey$[esp+188], eax
	mov	DWORD PTR _sigbuf$1$[esp+188], eax
	mov	DWORD PTR _siglen$2$[esp+188], eax
	mov	DWORD PTR _passargin$1$[esp+188], eax
	mov	DWORD PTR _passin$[esp+188], eax
	mov	DWORD PTR _engine_impl$1$[esp+188], eax
	mov	DWORD PTR _hmac_key$1$[esp+188], eax
	mov	DWORD PTR _mac_name$1$[esp+188], eax
	mov	DWORD PTR _non_fips_allow$1$[esp+188], eax
	mov	DWORD PTR _sigopts$1$[esp+188], ebp
	mov	DWORD PTR _macopts$1$[esp+188], eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$1$[esp+176], eax
	test	eax, eax
	jne	SHORT $LN13@dgst_main
; Line 137
	push	OFFSET ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 138
	jmp	$LN138@dgst_main
$LN13@dgst_main:
; Line 140
	mov	eax, DWORD PTR _bio_err
	test	eax, eax
	jne	SHORT $LN15@dgst_main
; Line 141
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN15@dgst_main
; Line 142
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN15@dgst_main:
; Line 144
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$end$285
; Line 148
	push	40					; 00000028H
	lea	eax, DWORD PTR _pname$[esp+180]
	push	eax
	push	DWORD PTR [edi]
	call	_program_name
; Line 150
	lea	eax, DWORD PTR _pname$[esp+188]
	push	eax
	call	_EVP_get_digestbyname
; Line 152
	mov	ebx, DWORD PTR _argc$[esp+188]
; Line 153
	add	edi, 4
	dec	ebx
	mov	DWORD PTR _md$1$[esp+192], eax
	add	esp, 16					; 00000010H
	mov	DWORD PTR _argc$[esp+172], ebx
	mov	DWORD PTR _argv$GSCopy$1$[esp+176], edi
; Line 154
	test	ebx, ebx
	jle	$LN83@dgst_main
	npad	9
$LL2@dgst_main:
; Line 155
	mov	esi, DWORD PTR [edi]
	cmp	BYTE PTR [esi], 45			; 0000002dH
	jne	$LN149@dgst_main
; Line 157
	mov	ecx, OFFSET ??_C@_02HOPLMLDK@?9c?$AA@
	mov	eax, esi
$LL182@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN183@dgst_main
	test	dl, dl
	je	SHORT $LN184@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN183@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL182@dgst_main
$LN184@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN185@dgst_main
$LN183@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN185@dgst_main:
	test	eax, eax
	jne	SHORT $LN18@dgst_main
; Line 158
	mov	DWORD PTR _separator$1$[esp+176], 1
	jmp	$LN80@dgst_main
$LN18@dgst_main:
; Line 159
	mov	ecx, OFFSET ??_C@_02CNCCOICK@?9r?$AA@
	mov	eax, esi
	npad	1
$LL186@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN187@dgst_main
	test	dl, dl
	je	SHORT $LN188@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN187@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL186@dgst_main
$LN188@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN189@dgst_main
$LN187@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN189@dgst_main:
	test	eax, eax
	jne	SHORT $LN20@dgst_main
; Line 160
	mov	DWORD PTR _separator$1$[esp+176], 2
	jmp	$LN80@dgst_main
$LN20@dgst_main:
; Line 161
	mov	ecx, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
	mov	eax, esi
	npad	3
$LL190@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN191@dgst_main
	test	dl, dl
	je	SHORT $LN192@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN191@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL190@dgst_main
$LN192@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN193@dgst_main
$LN191@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN193@dgst_main:
	test	eax, eax
	jne	SHORT $LN22@dgst_main
; Line 162
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 164
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _randfile$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN22@dgst_main:
; Line 165
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, esi
	npad	7
$LL194@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN195@dgst_main
	test	dl, dl
	je	SHORT $LN196@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN195@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL194@dgst_main
$LN196@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN197@dgst_main
$LN195@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN197@dgst_main:
	test	eax, eax
	jne	SHORT $LN25@dgst_main
; Line 166
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 168
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _outfile$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN25@dgst_main:
; Line 169
	mov	ecx, OFFSET ??_C@_05LLLFPBKO@?9sign?$AA@
	mov	eax, esi
	npad	4
$LL198@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN199@dgst_main
	test	dl, dl
	je	SHORT $LN200@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN199@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL198@dgst_main
$LN200@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN201@dgst_main
$LN199@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN201@dgst_main:
	test	eax, eax
	jne	SHORT $LN28@dgst_main
; Line 170
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 172
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _keyfile$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN28@dgst_main:
; Line 173
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, esi
	npad	7
$LL202@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN203@dgst_main
	test	dl, dl
	je	SHORT $LN204@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN203@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL202@dgst_main
$LN204@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN205@dgst_main
$LN203@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN205@dgst_main:
	test	eax, eax
	jne	SHORT $LN31@dgst_main
; Line 174
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 176
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _passargin$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN31@dgst_main:
; Line 177
	mov	ecx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	eax, esi
	npad	7
$LL206@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN207@dgst_main
	test	dl, dl
	je	SHORT $LN208@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN207@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL206@dgst_main
$LN208@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN209@dgst_main
$LN207@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN209@dgst_main:
	test	eax, eax
	jne	SHORT $LN34@dgst_main
; Line 178
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 180
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _keyfile$1$[esp+176], eax
; Line 181
	mov	DWORD PTR _want_pub$1$[esp+176], 1
; Line 182
	mov	DWORD PTR _do_verify$1$[esp+176], 1
	jmp	$LN80@dgst_main
$LN34@dgst_main:
; Line 183
	mov	ecx, OFFSET ??_C@_09BIBKEPCC@?9prverify?$AA@
	mov	eax, esi
	npad	7
$LL210@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN211@dgst_main
	test	dl, dl
	je	SHORT $LN212@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN211@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL210@dgst_main
$LN212@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN213@dgst_main
$LN211@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN213@dgst_main:
	test	eax, eax
	jne	SHORT $LN37@dgst_main
; Line 184
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 186
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _keyfile$1$[esp+176], eax
; Line 187
	mov	DWORD PTR _do_verify$1$[esp+176], 1
	jmp	$LN80@dgst_main
$LN37@dgst_main:
; Line 188
	mov	ecx, OFFSET ??_C@_0L@OJINPCDP@?9signature?$AA@
	mov	eax, esi
$LL214@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN215@dgst_main
	test	dl, dl
	je	SHORT $LN216@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN215@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL214@dgst_main
$LN216@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN217@dgst_main
$LN215@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN217@dgst_main:
	test	eax, eax
	jne	SHORT $LN40@dgst_main
; Line 189
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 191
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _sigfile$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN40@dgst_main:
; Line 192
	mov	ecx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	eax, esi
	npad	6
$LL218@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN219@dgst_main
	test	dl, dl
	je	SHORT $LN220@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN219@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL218@dgst_main
$LN220@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN221@dgst_main
$LN219@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN221@dgst_main:
	test	eax, eax
	jne	SHORT $LN43@dgst_main
; Line 193
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 195
	push	DWORD PTR [edi+4]
	add	edi, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _keyform$1$[esp+176], eax
; Line 196
	jmp	$LN80@dgst_main
$LN43@dgst_main:
; Line 198
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
$LL222@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN223@dgst_main
	test	dl, dl
	je	SHORT $LN224@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN223@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL222@dgst_main
$LN224@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN225@dgst_main
$LN223@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN225@dgst_main:
	test	eax, eax
	jne	SHORT $LN46@dgst_main
; Line 199
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 201
	add	edi, 4
; Line 202
	push	eax
	push	DWORD PTR [edi]
	push	DWORD PTR _bio_err
	call	_setup_engine
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _e$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN46@dgst_main:
; Line 203
	mov	ecx, OFFSET ??_C@_0N@FEJBABNG@?9engine_impl?$AA@
	mov	eax, esi
$LL226@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN227@dgst_main
	test	dl, dl
	je	SHORT $LN228@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN227@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL226@dgst_main
$LN228@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN229@dgst_main
$LN227@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN229@dgst_main:
	test	eax, eax
	jne	SHORT $LN49@dgst_main
; Line 204
	mov	DWORD PTR _engine_impl$1$[esp+176], 1
	jmp	$LN80@dgst_main
$LN49@dgst_main:
; Line 206
	mov	ecx, OFFSET ??_C@_04FHOEMGIO@?9hex?$AA@
	mov	eax, esi
$LL230@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN231@dgst_main
	test	dl, dl
	je	SHORT $LN232@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN231@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL230@dgst_main
$LN232@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN233@dgst_main
$LN231@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN233@dgst_main:
	test	eax, eax
	jne	SHORT $LN51@dgst_main
; Line 207
	mov	DWORD PTR _out_bin$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN51@dgst_main:
; Line 208
	mov	ecx, OFFSET ??_C@_07MHGMHDIE@?9binary?$AA@
	mov	eax, esi
	npad	2
$LL234@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN235@dgst_main
	test	dl, dl
	je	SHORT $LN236@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN235@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL234@dgst_main
$LN236@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN237@dgst_main
$LN235@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN237@dgst_main:
	test	eax, eax
	jne	SHORT $LN53@dgst_main
; Line 209
	mov	DWORD PTR _out_bin$1$[esp+176], 1
	jmp	$LN80@dgst_main
$LN53@dgst_main:
; Line 210
	mov	ecx, OFFSET ??_C@_02DBLKFNPN@?9d?$AA@
	mov	eax, esi
	npad	3
$LL238@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN239@dgst_main
	test	dl, dl
	je	SHORT $LN240@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN239@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL238@dgst_main
$LN240@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN241@dgst_main
$LN239@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN241@dgst_main:
	test	eax, eax
	jne	SHORT $LN55@dgst_main
; Line 211
	mov	DWORD PTR _debug$1$[esp+176], 1
	jmp	$LN80@dgst_main
$LN55@dgst_main:
; Line 212
	mov	ecx, OFFSET ??_C@_0BC@FNMAMJJG@?9fips?9fingerprint?$AA@
	mov	eax, esi
	npad	3
$LL242@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN243@dgst_main
	test	dl, dl
	je	SHORT $LN244@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN243@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL242@dgst_main
$LN244@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN245@dgst_main
$LN243@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN245@dgst_main:
	test	eax, eax
	jne	SHORT $LN57@dgst_main
; Line 213
	mov	DWORD PTR _hmac_key$1$[esp+176], OFFSET ??_C@_0BB@CGGLALOK@etaonrishdlcupfm?$AA@
	jmp	$LN80@dgst_main
$LN57@dgst_main:
; Line 214
	mov	ecx, OFFSET ??_C@_0BA@COFEPECA@?9non?9fips?9allow?$AA@
	mov	eax, esi
	npad	3
$LL246@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN247@dgst_main
	test	dl, dl
	je	SHORT $LN248@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN247@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL246@dgst_main
$LN248@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN249@dgst_main
$LN247@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN249@dgst_main:
	test	eax, eax
	jne	SHORT $LN59@dgst_main
; Line 215
	mov	DWORD PTR _non_fips_allow$1$[esp+176], 1
	jmp	$LN80@dgst_main
$LN59@dgst_main:
; Line 216
	mov	ecx, OFFSET ??_C@_05JCMEMCJF@?9hmac?$AA@
	mov	eax, esi
	npad	3
$LL250@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN251@dgst_main
	test	dl, dl
	je	SHORT $LN252@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN251@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL250@dgst_main
$LN252@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN253@dgst_main
$LN251@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN253@dgst_main:
	test	eax, eax
	jne	SHORT $LN61@dgst_main
; Line 217
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 219
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _hmac_key$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN61@dgst_main:
; Line 220
	mov	ecx, OFFSET ??_C@_04MOAFFFPK@?9mac?$AA@
	mov	eax, esi
	npad	7
$LL254@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN255@dgst_main
	test	dl, dl
	je	SHORT $LN256@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN255@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL254@dgst_main
$LN256@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN257@dgst_main
$LN255@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN257@dgst_main:
	test	eax, eax
	jne	SHORT $LN64@dgst_main
; Line 221
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 223
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _mac_name$1$[esp+176], eax
	jmp	$LN80@dgst_main
$LN64@dgst_main:
; Line 224
	mov	ecx, OFFSET ??_C@_07FNCAFLJP@?9sigopt?$AA@
	mov	eax, esi
	npad	7
$LL258@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN259@dgst_main
	test	dl, dl
	je	SHORT $LN260@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN259@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL258@dgst_main
$LN260@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN261@dgst_main
$LN259@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN261@dgst_main:
	test	eax, eax
	jne	SHORT $LN67@dgst_main
; Line 225
	dec	ebx
	cmp	ebx, 1
	jl	$LN149@dgst_main
; Line 227
	test	ebp, ebp
	jne	SHORT $LN181@dgst_main
; Line 228
	call	_sk_new_null
	mov	ebp, eax
; Line 229
	test	ebp, ebp
	je	$LN149@dgst_main
$LN181@dgst_main:
	push	DWORD PTR [edi+4]
	add	edi, 4
	push	ebp
; Line 231
	jmp	SHORT $LN275@dgst_main
$LN67@dgst_main:
	mov	ecx, OFFSET ??_C@_07HDBCJIKB@?9macopt?$AA@
	mov	eax, esi
$LL262@dgst_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN263@dgst_main
	test	dl, dl
	je	SHORT $LN264@dgst_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN263@dgst_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL262@dgst_main
$LN264@dgst_main:
	xor	eax, eax
	jmp	SHORT $LN265@dgst_main
$LN263@dgst_main:
	sbb	eax, eax
	or	eax, 1
$LN265@dgst_main:
	test	eax, eax
	jne	SHORT $LN73@dgst_main
; Line 232
	dec	ebx
	cmp	ebx, 1
	jl	SHORT $LN149@dgst_main
; Line 234
	mov	eax, DWORD PTR _macopts$1$[esp+176]
	test	eax, eax
	jne	SHORT $LN180@dgst_main
; Line 235
	call	_sk_new_null
	mov	DWORD PTR _macopts$1$[esp+176], eax
; Line 236
	test	eax, eax
	je	SHORT $LN149@dgst_main
$LN180@dgst_main:
	push	DWORD PTR [edi+4]
	add	edi, 4
	push	eax
$LN275@dgst_main:
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN149@dgst_main
; Line 238
	jmp	SHORT $LN80@dgst_main
$LN73@dgst_main:
	lea	eax, DWORD PTR [esi+1]
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 4
	test	eax, eax
	je	SHORT $LN149@dgst_main
; Line 239
	mov	DWORD PTR _md$1$[esp+176], eax
$LN80@dgst_main:
; Line 242
	dec	ebx
; Line 243
	add	edi, 4
	test	ebx, ebx
	jg	$LL2@dgst_main
$LN149@dgst_main:
; Line 246
	cmp	DWORD PTR _do_verify$1$[esp+176], 0
	mov	DWORD PTR _sigopts$1$[esp+176], ebp
	mov	DWORD PTR _argv$GSCopy$1$[esp+176], edi
	mov	DWORD PTR _argc$[esp+172], ebx
	je	$LN81@dgst_main
	mov	eax, DWORD PTR _sigfile$1$[esp+176]
	test	eax, eax
	jne	$LN81@dgst_main
; Line 247
	push	OFFSET ??_C@_0DD@GKPODFDO@No?5signature?5to?5verify?3?5use?5the?5@
$LN283@dgst_main:
; Line 308
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN271@dgst_main:
	mov	ebx, 1
$end$285:
; Line 518
	push	8192					; 00002000H
	push	DWORD PTR _buf$1$[esp+180]
	call	_OPENSSL_cleanse
; Line 519
	push	DWORD PTR _buf$1$[esp+184]
	call	_CRYPTO_free
; Line 521
	mov	eax, DWORD PTR _in$1$[esp+188]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN272@dgst_main
; Line 522
	push	eax
	call	_BIO_free
	add	esp, 4
$LN272@dgst_main:
	mov	ebp, DWORD PTR _sigopts$1$[esp+176]
$LN138@dgst_main:
; Line 523
	mov	eax, DWORD PTR _passin$[esp+176]
	test	eax, eax
	je	SHORT $LN139@dgst_main
; Line 524
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN139@dgst_main:
; Line 525
	push	DWORD PTR _out$1$[esp+176]
	call	_BIO_free_all
; Line 526
	push	DWORD PTR _sigkey$[esp+180]
	call	_EVP_PKEY_free
	add	esp, 8
; Line 527
	test	ebp, ebp
	je	SHORT $LN140@dgst_main
; Line 528
	push	ebp
	call	_sk_free
	add	esp, 4
$LN140@dgst_main:
; Line 529
	mov	eax, DWORD PTR _macopts$1$[esp+176]
	test	eax, eax
	je	SHORT $LN141@dgst_main
; Line 530
	push	eax
	call	_sk_free
	add	esp, 4
$LN141@dgst_main:
; Line 531
	mov	eax, DWORD PTR _sigbuf$1$[esp+176]
	test	eax, eax
	je	SHORT $LN142@dgst_main
; Line 532
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN142@dgst_main:
; Line 533
	mov	eax, DWORD PTR _bmd$1$[esp+176]
	test	eax, eax
	je	SHORT $LN266@dgst_main
; Line 534
	push	eax
	call	_BIO_free
	add	esp, 4
$LN266@dgst_main:
; Line 537
	mov	ecx, DWORD PTR __$ArrayPad$[esp+176]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 160				; 000000a0H
	ret	0
$LN81@dgst_main:
; Line 252
	test	ebx, ebx
	jle	$LN82@dgst_main
	mov	eax, DWORD PTR [edi]
	cmp	BYTE PTR [eax], 45			; 0000002dH
	jne	$LN82@dgst_main
; Line 253
	push	eax
	push	OFFSET ??_C@_0BF@KNIMMKIN@unknown?5option?5?8?$CFs?8?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 254
	push	OFFSET ??_C@_0N@NDELNNPO@options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 255
	push	OFFSET ??_C@_0DN@FOLCEOOL@?9c?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 257
	push	OFFSET ??_C@_0DK@GBFCJLIB@?9r?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5the?5di@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 259
	push	OFFSET ??_C@_0CG@ENDMFKMC@?9d?5?5?5?5?5?5?5?5?5?5?5?5?5?5to?5output?5debug?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 260
	push	OFFSET ??_C@_0CE@CLNAEPPP@?9hex?5?5?5?5?5?5?5?5?5?5?5?5output?5as?5hex?5du@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 261
	push	OFFSET ??_C@_0CH@LAJCNBHL@?9binary?5?5?5?5?5?5?5?5?5output?5in?5binary@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 262
	push	OFFSET ??_C@_0CJ@ONPOPFDN@?9hmac?5arg?5?5?5?5?5?5?5set?5the?5HMAC?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 263
	push	OFFSET ??_C@_0CO@PLNAMJPF@?9non?9fips?9allow?5allow?5use?5of?5non@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 264
	push	OFFSET ??_C@_0DH@BMCAMLFJ@?9sign?5?5?5file?5?5?5?5sign?5digest?5usin@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 266
	push	OFFSET ??_C@_0DN@EFCACMAO@?9verify?5file?5?5?5?5verify?5a?5signatu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 268
	push	OFFSET ??_C@_0DO@GEMDHAA@?9prverify?5file?5?5verify?5a?5signatu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 270
	push	OFFSET ??_C@_0DB@PAGBKFPO@?9keyform?5arg?5?5?5?5key?5file?5format?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 272
	push	OFFSET ??_C@_0DH@ECKLJJDH@?9out?5filename?5?5?5output?5to?5filena@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 274
	push	OFFSET ??_C@_0CF@LIPHEFLJ@?9signature?5file?5signature?5to?5ver@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 275
	push	OFFSET ??_C@_0CF@EANICGDJ@?9sigopt?5nm?3v?5?5?5?5signature?5parame@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 276
	push	OFFSET ??_C@_0CM@HGAGEEFO@?9hmac?5key?5?5?5?5?5?5?5create?5hashed?5MA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 277
	push	OFFSET ??_C@_0DE@EAJCPJLC@?9mac?5algorithm?5?5create?5MAC?5?$CInot?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 279
	push	OFFSET ??_C@_0DB@LDFLCNGL@?9macopt?5nm?3v?5?5?5?5MAC?5algorithm?5pa@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 282
	push	OFFSET ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 286
	push	DWORD PTR _bio_err
	push	OFFSET _list_md_fn
	call	_EVP_MD_do_all_sorted
	add	esp, 40					; 00000028H
; Line 287
	jmp	$LN271@dgst_main
$LN82@dgst_main:
; Line 290
	mov	eax, DWORD PTR _engine_impl$1$[esp+176]
	xor	ecx, ecx
	mov	esi, DWORD PTR _keyfile$1$[esp+176]
	test	eax, eax
	cmovne	ecx, DWORD PTR _e$1$[esp+176]
	mov	DWORD PTR _impl$1$[esp+176], ecx
$LN83@dgst_main:
; Line 294
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	DWORD PTR _in$1$[esp+180], eax
; Line 295
	call	_BIO_f_md
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 8
; Line 296
	mov	eax, DWORD PTR _in$1$[esp+176]
	mov	DWORD PTR _bmd$1$[esp+176], edi
	test	eax, eax
	je	$LN85@dgst_main
	test	edi, edi
	je	$LN85@dgst_main
; Line 301
	cmp	DWORD PTR _debug$1$[esp+176], 0
	je	SHORT $LN86@dgst_main
; Line 302
	push	OFFSET _BIO_debug_callback
	push	eax
	call	_BIO_set_callback
; Line 304
	push	DWORD PTR _bio_err
	push	DWORD PTR _in$1$[esp+188]
	call	_BIO_set_callback_arg
	add	esp, 16					; 00000010H
$LN86@dgst_main:
; Line 307
	push	0
	lea	eax, DWORD PTR _passin$[esp+180]
	push	eax
	push	0
	push	DWORD PTR _passargin$1$[esp+188]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN87@dgst_main
; Line 308
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; Line 309
	jmp	$LN283@dgst_main
$LN87@dgst_main:
; Line 312
	cmp	DWORD PTR _out_bin$1$[esp+176], -1
	jne	SHORT $LN89@dgst_main
; Line 313
	xor	eax, eax
	test	esi, esi
	setne	al
	mov	DWORD PTR _out_bin$1$[esp+176], eax
$LN89@dgst_main:
; Line 319
	mov	eax, DWORD PTR _randfile$1$[esp+176]
	test	eax, eax
	je	SHORT $LN91@dgst_main
; Line 320
	push	0
	push	DWORD PTR _bio_err
	push	eax
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
$LN91@dgst_main:
; Line 322
	mov	edi, DWORD PTR _outfile$1$[esp+176]
	test	edi, edi
	je	SHORT $LN92@dgst_main
; Line 323
	cmp	DWORD PTR _out_bin$1$[esp+176], 0
	je	SHORT $LN94@dgst_main
; Line 324
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	edi
	call	_BIO_new_file
	jmp	SHORT $LN276@dgst_main
$LN94@dgst_main:
; Line 326
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	edi
	call	_BIO_new_file
; Line 327
	jmp	SHORT $LN276@dgst_main
$LN92@dgst_main:
; Line 328
	push	0
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
$LN276@dgst_main:
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+176], eax
; Line 337
	test	eax, eax
	jne	SHORT $LN96@dgst_main
; Line 338
	test	edi, edi
	mov	eax, OFFSET ??_C@_08NJHPALLI@?$CIstdout?$CJ?$AA@
	cmovne	eax, edi
	push	eax
	push	OFFSET ??_C@_0BO@DPODBOGA@Error?5opening?5output?5file?5?$CFs?6?$AA@
$LN280@dgst_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 340
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 341
	jmp	$LN271@dgst_main
$LN96@dgst_main:
; Line 343
	mov	edi, DWORD PTR _mac_name$1$[esp+176]
	xor	ecx, ecx
	test	edi, edi
	setne	cl
	xor	eax, eax
	cmp	DWORD PTR _hmac_key$1$[esp+176], eax
	setne	al
	add	ecx, eax
	xor	eax, eax
	test	esi, esi
	setne	al
	add	ecx, eax
	cmp	ecx, 1
	jle	SHORT $LN97@dgst_main
; Line 344
	push	OFFSET ??_C@_0CO@GBKPBPPB@MAC?5and?5Signing?5key?5cannot?5both?5@
; Line 345
	jmp	$LN283@dgst_main
$LN97@dgst_main:
; Line 348
	test	esi, esi
	je	SHORT $LN267@dgst_main
; Line 349
	cmp	DWORD PTR _want_pub$1$[esp+176], 0
; Line 350
	push	OFFSET ??_C@_08CIIMFNPL@key?5file?$AA@
	push	DWORD PTR _e$1$[esp+180]
	je	SHORT $LN99@dgst_main
	push	0
	push	0
	push	DWORD PTR _keyform$1$[esp+192]
	push	esi
	push	DWORD PTR _bio_err
	call	_load_pubkey
	jmp	SHORT $LN277@dgst_main
$LN99@dgst_main:
; Line 353
	push	DWORD PTR _passin$[esp+184]
	push	0
	push	DWORD PTR _keyform$1$[esp+192]
	push	esi
	push	DWORD PTR _bio_err
	call	_load_key
$LN277@dgst_main:
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _sigkey$[esp+176], eax
; Line 355
	test	eax, eax
	je	$LN271@dgst_main
$LN267@dgst_main:
; Line 363
	test	edi, edi
	je	$LN108@dgst_main
; Line 365
	xor	ebx, ebx
	mov	DWORD PTR _mac_ctx$1[esp+176], 0
; Line 366
	push	ebx
	push	DWORD PTR _impl$1$[esp+180]
	lea	eax, DWORD PTR _mac_ctx$1[esp+184]
	push	edi
	push	eax
	push	DWORD PTR _bio_err
	call	_init_gen_str
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$mac_end$286
; Line 368
	mov	edi, DWORD PTR _macopts$1$[esp+176]
	test	edi, edi
	je	SHORT $LN5@dgst_main
; Line 370
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN5@dgst_main
$LL6@dgst_main:
; Line 371
	push	esi
	push	edi
	call	_sk_value
	mov	edi, eax
; Line 372
	push	edi
	push	DWORD PTR _mac_ctx$1[esp+188]
	call	_pkey_ctrl_string
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN165@dgst_main
; Line 370
	mov	edi, DWORD PTR _macopts$1$[esp+176]
	inc	esi
	push	edi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL6@dgst_main
$LN5@dgst_main:
; Line 380
	lea	eax, DWORD PTR _sigkey$[esp+176]
	push	eax
	push	DWORD PTR _mac_ctx$1[esp+180]
	call	_EVP_PKEY_keygen
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN106@dgst_main
; Line 381
	push	OFFSET ??_C@_0BG@KNMDELML@Error?5generating?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 382
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 383
	jmp	SHORT $mac_end$286
$LN165@dgst_main:
; Line 373
	push	edi
	push	OFFSET ??_C@_0BK@CMBNPJKN@MAC?5parameter?5error?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 375
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 376
	jmp	SHORT $mac_end$286
$LN106@dgst_main:
; Line 385
	mov	ebx, 1
$mac_end$286:
; Line 387
	mov	eax, DWORD PTR _mac_ctx$1[esp+176]
	test	eax, eax
	je	SHORT $LN107@dgst_main
; Line 388
	push	eax
	call	_EVP_PKEY_CTX_free
	add	esp, 4
$LN107@dgst_main:
; Line 389
	test	ebx, ebx
	je	$LN271@dgst_main
	mov	ebx, DWORD PTR _argc$[esp+172]
$LN108@dgst_main:
; Line 393
	cmp	DWORD PTR _non_fips_allow$1$[esp+176], 0
; Line 395
	mov	edi, DWORD PTR _bmd$1$[esp+176]
	je	SHORT $LN109@dgst_main
	lea	eax, DWORD PTR _md_ctx$5[esp+176]
	push	eax
	push	0
	push	120					; 00000078H
	push	edi
	call	_BIO_ctrl
; Line 396
	push	8
	push	DWORD PTR _md_ctx$5[esp+196]
	call	_EVP_MD_CTX_set_flags
	add	esp, 24					; 00000018H
$LN109@dgst_main:
; Line 399
	mov	eax, DWORD PTR _hmac_key$1$[esp+176]
	test	eax, eax
	je	SHORT $LN111@dgst_main
; Line 400
	mov	esi, DWORD PTR _impl$1$[esp+176]
	push	-1
	push	eax
	push	esi
	push	855					; 00000357H
	call	_EVP_PKEY_new_mac_key
	add	esp, 16					; 00000010H
	mov	DWORD PTR _sigkey$[esp+176], eax
; Line 402
	test	eax, eax
	je	$LN271@dgst_main
; Line 406
	jmp	SHORT $LN179@dgst_main
$LN111@dgst_main:
	cmp	DWORD PTR _sigkey$[esp+176], 0
	je	$LN112@dgst_main
	mov	esi, DWORD PTR _impl$1$[esp+176]
$LN179@dgst_main:
; Line 410
	lea	eax, DWORD PTR _mctx$3[esp+176]
	mov	DWORD PTR _mctx$3[esp+176], 0
	push	eax
	push	0
	push	120					; 00000078H
	push	edi
	mov	DWORD PTR _pctx$2[esp+192], 0
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN114@dgst_main
$LN282@dgst_main:
; Line 411
	push	OFFSET ??_C@_0BH@HIAIGHKF@Error?5getting?5context?6?$AA@
$LN281@dgst_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 412
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 413
	jmp	$LN271@dgst_main
$LN114@dgst_main:
; Line 415
	cmp	DWORD PTR _do_verify$1$[esp+176], 0
; Line 416
	lea	eax, DWORD PTR _pctx$2[esp+176]
	push	DWORD PTR _sigkey$[esp+176]
	push	esi
	push	DWORD PTR _md$1$[esp+184]
	push	eax
	push	DWORD PTR _mctx$3[esp+192]
	je	SHORT $LN115@dgst_main
	call	_EVP_DigestVerifyInit
	jmp	SHORT $LN278@dgst_main
$LN115@dgst_main:
; Line 418
	call	_EVP_DigestSignInit
$LN278@dgst_main:
	add	esp, 20					; 00000014H
; Line 419
	test	eax, eax
	jne	SHORT $LN117@dgst_main
; Line 420
	push	OFFSET ??_C@_0BH@BMFBNJBH@Error?5setting?5context?6?$AA@
; Line 422
	jmp	SHORT $LN281@dgst_main
$LN117@dgst_main:
; Line 424
	test	ebp, ebp
	je	SHORT $LN122@dgst_main
; Line 426
	push	ebp
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN122@dgst_main
	npad	3
$LL9@dgst_main:
; Line 427
	push	esi
	push	ebp
	call	_sk_value
	mov	edi, eax
; Line 428
	push	edi
	push	DWORD PTR _pctx$2[esp+188]
	call	_pkey_ctrl_string
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN166@dgst_main
; Line 426
	push	ebp
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL9@dgst_main
; Line 428
	mov	edi, DWORD PTR _bmd$1$[esp+176]
$LN122@dgst_main:
; Line 453
	mov	ebp, DWORD PTR _sigfile$1$[esp+176]
	test	ebp, ebp
	je	$LN126@dgst_main
	cmp	DWORD PTR _sigkey$[esp+176], 0
	je	$LN126@dgst_main
; Line 455
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	ebp
	call	_BIO_new_file
; Line 456
	push	DWORD PTR _sigkey$[esp+184]
	mov	esi, eax
	call	_EVP_PKEY_size
; Line 457
	push	457					; 000001c9H
	mov	edi, eax
	push	OFFSET ??_C@_0O@IHJEGCDB@?4?2apps?2dgst?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sigbuf$1$[esp+176], eax
; Line 458
	test	esi, esi
	jne	SHORT $LN124@dgst_main
; Line 459
	push	ebp
	push	OFFSET ??_C@_0CB@GJFPMJA@Error?5opening?5signature?5file?5?$CFs?6@
; Line 461
	jmp	$LN280@dgst_main
$LN166@dgst_main:
; Line 429
	push	edi
	push	OFFSET ??_C@_0BG@BFCDNIFL@parameter?5error?5?$CC?$CFs?$CC?6?$AA@
; Line 431
	jmp	$LN280@dgst_main
$LN112@dgst_main:
; Line 439
	lea	eax, DWORD PTR _mctx$4[esp+176]
	mov	DWORD PTR _mctx$4[esp+176], 0
	push	eax
	push	0
	push	120					; 00000078H
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN282@dgst_main
; Line 444
	mov	eax, DWORD PTR _md$1$[esp+176]
	test	eax, eax
	jne	SHORT $LN121@dgst_main
; Line 445
	call	_EVP_md5
	mov	DWORD PTR _md$1$[esp+176], eax
$LN121@dgst_main:
; Line 446
	push	DWORD PTR _impl$1$[esp+176]
	push	eax
	push	DWORD PTR _mctx$4[esp+184]
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN122@dgst_main
; Line 447
	lea	eax, DWORD PTR _pname$[esp+176]
	push	eax
	push	OFFSET ??_C@_0BJ@CIENJBPC@Error?5setting?5digest?5?$CFs?6?$AA@
; Line 449
	jmp	$LN280@dgst_main
$LN124@dgst_main:
; Line 463
	test	eax, eax
	jne	SHORT $LN125@dgst_main
; Line 464
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
; Line 466
	jmp	$LN281@dgst_main
$LN125@dgst_main:
; Line 468
	push	edi
	push	eax
	push	esi
	call	_BIO_read
	mov	edi, eax
; Line 469
	push	esi
	mov	DWORD PTR _siglen$2$[esp+192], edi
	call	_BIO_free
	add	esp, 16					; 00000010H
; Line 470
	test	edi, edi
	jg	SHORT $LN273@dgst_main
; Line 471
	push	ebp
	push	OFFSET ??_C@_0CB@CPOCADA@Error?5reading?5signature?5file?5?$CFs?6@
; Line 473
	jmp	$LN280@dgst_main
$LN273@dgst_main:
	mov	edi, DWORD PTR _bmd$1$[esp+176]
$LN126@dgst_main:
; Line 476
	push	DWORD PTR _in$1$[esp+176]
	push	edi
	call	_BIO_push
; Line 478
	mov	esi, DWORD PTR _md$1$[esp+184]
	add	esp, 8
	mov	ebp, eax
	test	esi, esi
	jne	SHORT $LN127@dgst_main
; Line 480
	lea	eax, DWORD PTR _tctx$7[esp+176]
	push	eax
	push	esi
	push	120					; 00000078H
	push	edi
	call	_BIO_ctrl
; Line 481
	push	DWORD PTR _tctx$7[esp+192]
	call	_EVP_MD_CTX_md
	add	esp, 20					; 00000014H
	mov	esi, eax
$LN127@dgst_main:
; Line 484
	test	ebx, ebx
	jne	SHORT $LN128@dgst_main
; Line 485
	push	ebx
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	DWORD PTR _in$1$[esp+192]
	call	_BIO_ctrl
; Line 486
	push	edi
	push	OFFSET ??_C@_05MHOFLBOO@stdin?$AA@
	push	ebx
	push	ebx
	push	DWORD PTR _siglen$2$[esp+212]
	push	DWORD PTR _sigbuf$1$[esp+216]
	push	DWORD PTR _sigkey$[esp+220]
	push	DWORD PTR _out_bin$1$[esp+224]
	push	DWORD PTR _separator$1$[esp+228]
	push	ebp
	push	DWORD PTR _buf$1$[esp+236]
	push	DWORD PTR _out$1$[esp+240]
	call	_do_fp
	add	esp, 68					; 00000044H
	mov	ebx, eax
; Line 488
	jmp	$end$285
$LN128@dgst_main:
; Line 489
	xor	ebx, ebx
	mov	DWORD PTR _sig_name$6[esp+176], ebx
; Line 490
	cmp	DWORD PTR _out_bin$1$[esp+176], ebx
	jne	SHORT $LN133@dgst_main
; Line 491
	mov	eax, DWORD PTR _sigkey$[esp+176]
	test	eax, eax
	je	SHORT $LN132@dgst_main
; Line 493
	push	eax
	call	_EVP_PKEY_get0_asn1
	add	esp, 4
; Line 494
	test	eax, eax
	je	SHORT $LN132@dgst_main
; Line 495
	push	eax
	lea	eax, DWORD PTR _sig_name$6[esp+180]
	push	eax
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	call	_EVP_PKEY_asn1_get0_info
	add	esp, 24					; 00000018H
$LN132@dgst_main:
; Line 498
	test	esi, esi
	je	SHORT $LN133@dgst_main
; Line 499
	push	esi
	call	_EVP_MD_type
	push	eax
	call	_OBJ_nid2sn
	add	esp, 8
	mov	ebx, eax
$LN133@dgst_main:
; Line 502
	xor	esi, esi
	mov	DWORD PTR _err$1$[esp+176], 0
	cmp	DWORD PTR _argc$[esp+172], esi
	jle	$LN268@dgst_main
	mov	edi, DWORD PTR __imp__perror
$LL12@dgst_main:
; Line 504
	mov	eax, DWORD PTR _argv$GSCopy$1$[esp+176]
	push	DWORD PTR [eax+esi*4]
	push	3
	push	108					; 0000006cH
	push	DWORD PTR _in$1$[esp+188]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
; Line 505
	mov	eax, DWORD PTR _argv$GSCopy$1$[esp+176]
	jg	SHORT $LN134@dgst_main
	push	DWORD PTR [eax+esi*4]
	call	edi
	add	esp, 4
; Line 506
	inc	DWORD PTR _err$1$[esp+176]
; Line 507
	jmp	SHORT $LN10@dgst_main
$LN134@dgst_main:
; Line 509
	push	DWORD PTR _bmd$1$[esp+176]
	push	DWORD PTR [eax+esi*4]
	push	ebx
	push	DWORD PTR _sig_name$6[esp+188]
	push	DWORD PTR _siglen$2$[esp+192]
	push	DWORD PTR _sigbuf$1$[esp+196]
	push	DWORD PTR _sigkey$[esp+200]
	push	DWORD PTR _out_bin$1$[esp+204]
	push	DWORD PTR _separator$1$[esp+208]
	push	ebp
	push	DWORD PTR _buf$1$[esp+216]
	push	DWORD PTR _out$1$[esp+220]
	call	_do_fp
; Line 511
	mov	ecx, DWORD PTR _err$1$[esp+224]
	test	eax, eax
; Line 513
	push	0
	push	0
	push	1
	push	DWORD PTR _bmd$1$[esp+236]
	cmovne	ecx, eax
	mov	DWORD PTR _err$1$[esp+240], ecx
	call	_BIO_ctrl
	add	esp, 64					; 00000040H
$LN10@dgst_main:
; Line 502
	inc	esi
	cmp	esi, DWORD PTR _argc$[esp+172]
	jl	$LL12@dgst_main
; Line 428
	mov	ebx, DWORD PTR _err$1$[esp+176]
	jmp	$end$285
$LN85@dgst_main:
; Line 297
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
	jmp	$LN271@dgst_main
$LN268@dgst_main:
	xor	ebx, ebx
	jmp	$end$285
_dgst_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _list_md_fn
_TEXT	SEGMENT
_m$ = 8							; size = 4
_from$ = 12						; size = 4
_to$ = 16						; size = 4
_arg$ = 20						; size = 4
_list_md_fn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\dgst.c
; Line 84
	push	edi
; Line 87
	mov	edi, DWORD PTR _m$[esp]
	test	edi, edi
	je	$LN1@list_md_fn
; Line 89
	push	esi
	push	edi
	call	_EVP_MD_type
	push	eax
	call	_OBJ_nid2ln
; Line 91
	mov	ecx, DWORD PTR _from$[esp+12]
	add	esp, 8
	mov	esi, eax
	mov	edx, esi
	push	ebx
$LL7@list_md_fn:
	mov	bl, BYTE PTR [ecx]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN8@list_md_fn
	test	bl, bl
	je	SHORT $LN9@list_md_fn
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN8@list_md_fn
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL7@list_md_fn
$LN9@list_md_fn:
	xor	eax, eax
	jmp	SHORT $LN10@list_md_fn
$LN8@list_md_fn:
	sbb	eax, eax
	or	eax, 1
$LN10@list_md_fn:
	pop	ebx
	test	eax, eax
	jne	SHORT $LN11@list_md_fn
; Line 94
	push	edi
	call	_EVP_MD_flags
	add	esp, 4
	test	al, 2
	jne	SHORT $LN11@list_md_fn
; Line 96
	push	32					; 00000020H
	push	esi
	call	DWORD PTR __imp__strchr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@list_md_fn
; Line 97
	push	edi
	call	_EVP_MD_type
	push	eax
	call	_OBJ_nid2sn
	add	esp, 8
	mov	esi, eax
$LN5@list_md_fn:
; Line 98
	push	esi
	push	esi
	push	OFFSET ??_C@_0CP@GAPFEHMI@?9?$CF?914s?5to?5use?5the?5?$CFs?5message?5dig@
	push	DWORD PTR _arg$[esp+16]
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN11@list_md_fn:
	pop	esi
$LN1@list_md_fn:
	pop	edi
; Line 100
	ret	0
_list_md_fn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_fp
_TEXT	SEGMENT
_len$ = -8						; size = 4
_ctx$1 = -4						; size = 4
_ctx$2 = -4						; size = 4
_out$ = 8						; size = 4
_buf$ = 12						; size = 4
_bp$ = 16						; size = 4
_sep$ = 20						; size = 4
_binout$ = 24						; size = 4
_key$ = 28						; size = 4
_sigin$ = 32						; size = 4
_siglen$ = 36						; size = 4
_sig_name$ = 40						; size = 4
_md_name$ = 44						; size = 4
_file$ = 48						; size = 4
_bmd$ = 52						; size = 4
_do_fp	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\dgst.c
; Line 543
	mov	eax, 8
	call	__chkstk
	push	ebx
; Line 548
	mov	ebx, DWORD PTR _buf$[esp+8]
	push	esi
	mov	esi, DWORD PTR _bp$[esp+12]
	push	8192					; 00002000H
	push	ebx
	push	esi
	call	_BIO_read
	add	esp, 12					; 0000000cH
; Line 549
	test	eax, eax
	js	SHORT $LN37@do_fp
$LN50@do_fp:
; Line 554
	je	SHORT $LN38@do_fp
; Line 548
	push	8192					; 00002000H
	push	ebx
	push	esi
	call	_BIO_read
	add	esp, 12					; 0000000cH
; Line 549
	test	eax, eax
	jns	SHORT $LN50@do_fp
$LN37@do_fp:
; Line 550
	push	DWORD PTR _file$[esp+12]
	push	OFFSET ??_C@_0BC@DKNKBAL@Read?5Error?5in?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 551
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 552
	mov	eax, 1
	pop	esi
	pop	ebx
; Line 614
	add	esp, 8
	ret	0
$LN38@do_fp:
	push	edi
; Line 557
	mov	edi, DWORD PTR _sigin$[esp+16]
	test	edi, edi
	je	SHORT $LN13@do_fp
; Line 559
	lea	eax, DWORD PTR _ctx$2[esp+20]
	push	eax
	push	0
	push	120					; 00000078H
	push	esi
	call	_BIO_ctrl
; Line 560
	push	DWORD PTR _siglen$[esp+32]
	push	edi
	push	DWORD PTR _ctx$2[esp+44]
	call	_EVP_DigestVerifyFinal
	add	esp, 28					; 0000001cH
; Line 561
	test	eax, eax
	jle	SHORT $LN51@do_fp
; Line 562
	push	OFFSET ??_C@_0N@EMAJAODF@Verified?5OK?6?$AA@
	push	DWORD PTR _out$[esp+20]
	call	_BIO_printf
	add	esp, 8
; Line 571
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 614
	add	esp, 8
	ret	0
$LN51@do_fp:
; Line 563
	jne	SHORT $LN16@do_fp
; Line 564
	push	OFFSET ??_C@_0BG@PBEFODBB@Verification?5Failure?6?$AA@
	push	DWORD PTR _out$[esp+20]
	call	_BIO_printf
	add	esp, 8
; Line 580
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 614
	add	esp, 8
	ret	0
$LN16@do_fp:
; Line 567
	push	OFFSET ??_C@_0BG@DEPCNIJM@Error?5Verifying?5Data?6?$AA@
; Line 569
	jmp	SHORT $LN52@do_fp
$LN13@do_fp:
; Line 573
	cmp	DWORD PTR _key$[esp+16], 0
	je	SHORT $LN18@do_fp
; Line 575
	lea	eax, DWORD PTR _ctx$1[esp+20]
	push	eax
	push	0
	push	120					; 00000078H
	push	esi
	call	_BIO_ctrl
; Line 577
	lea	eax, DWORD PTR _len$[esp+36]
	mov	DWORD PTR _len$[esp+36], 8192		; 00002000H
	push	eax
	push	ebx
	push	DWORD PTR _ctx$1[esp+44]
	call	_EVP_DigestSignFinal
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN47@do_fp
; Line 578
	push	OFFSET ??_C@_0BE@MGCALGC@Error?5Signing?5Data?6?$AA@
$LN52@do_fp:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 579
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 580
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 614
	add	esp, 8
	ret	0
$LN47@do_fp:
; Line 586
	mov	eax, DWORD PTR _len$[esp+20]
$LN21@do_fp:
; Line 590
	cmp	DWORD PTR _binout$[esp+16], 0
	je	SHORT $LN22@do_fp
; Line 591
	push	eax
	push	ebx
	push	DWORD PTR _out$[esp+24]
	call	_BIO_write
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 614
	add	esp, 8
	ret	0
$LN18@do_fp:
; Line 583
	push	8192					; 00002000H
	push	ebx
	push	esi
	call	_BIO_gets
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _len$[esp+20], eax
; Line 584
	test	eax, eax
	jns	SHORT $LN21@do_fp
; Line 585
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 586
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 614
	add	esp, 8
	ret	0
$LN22@do_fp:
; Line 593
	mov	edi, DWORD PTR _out$[esp+16]
	push	ebp
	mov	ebp, DWORD PTR _sep$[esp+20]
	cmp	ebp, 2
	jne	SHORT $LN24@do_fp
	xor	esi, esi
	test	eax, eax
	jle	SHORT $LN6@do_fp
	npad	5
$LL7@do_fp:
; Line 594
	movzx	eax, BYTE PTR [esi+ebx]
	push	eax
	push	OFFSET ??_C@_04NOJCDH@?$CF02x?$AA@
	push	edi
	call	_BIO_printf
	inc	esi
	add	esp, 12					; 0000000cH
	cmp	esi, DWORD PTR _len$[esp+24]
	jl	SHORT $LL7@do_fp
$LN6@do_fp:
; Line 595
	push	DWORD PTR _file$[esp+20]
	push	OFFSET ??_C@_05PJFEANEA@?5?$CK?$CFs?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 614
	add	esp, 8
	ret	0
$LN24@do_fp:
; Line 597
	mov	eax, DWORD PTR _sig_name$[esp+20]
	test	eax, eax
	je	$LN26@do_fp
; Line 598
	push	eax
	push	edi
	call	_BIO_puts
; Line 599
	mov	eax, DWORD PTR _md_name$[esp+28]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN28@do_fp
; Line 600
	push	eax
	push	OFFSET ??_C@_03LGHHPJDO@?9?$CFs?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN28@do_fp:
; Line 605
	push	DWORD PTR _file$[esp+20]
	push	OFFSET ??_C@_06BDNPOLDF@?$CI?$CFs?$CJ?$DN?5?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN30@do_fp:
; Line 606
	xor	esi, esi
	cmp	DWORD PTR _len$[esp+24], esi
	jle	SHORT $LN9@do_fp
	npad	3
$LL10@do_fp:
; Line 607
	test	ebp, ebp
	je	SHORT $LN31@do_fp
	test	esi, esi
	je	SHORT $LN31@do_fp
; Line 608
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
$LN31@do_fp:
; Line 609
	movzx	eax, BYTE PTR [esi+ebx]
	push	eax
	push	OFFSET ??_C@_04NOJCDH@?$CF02x?$AA@
	push	edi
	call	_BIO_printf
	inc	esi
	add	esp, 12					; 0000000cH
	cmp	esi, DWORD PTR _len$[esp+24]
	jl	SHORT $LL10@do_fp
$LN9@do_fp:
; Line 611
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
	xor	eax, eax
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 614
	add	esp, 8
	ret	0
$LN26@do_fp:
; Line 602
	mov	eax, DWORD PTR _md_name$[esp+20]
	test	eax, eax
	je	SHORT $LN28@do_fp
; Line 603
	push	DWORD PTR _file$[esp+20]
	push	eax
	push	OFFSET ??_C@_08ICADHBHK@?$CFs?$CI?$CFs?$CJ?$DN?5?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 16					; 00000010H
	jmp	SHORT $LN30@do_fp
_do_fp	ENDP
_TEXT	ENDS
END

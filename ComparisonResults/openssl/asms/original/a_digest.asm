; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_digest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_digest
PUBLIC	_ASN1_item_digest
PUBLIC	??_C@_0BJ@LGEODODF@?4?2crypto?2asn1?2a_digest?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	_EVP_Digest:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BJ@LGEODODF@?4?2crypto?2asn1?2a_digest?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@LGEODODF@?4?2crypto?2asn1?2a_digest?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'_digest.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_digest
_TEXT	SEGMENT
_str$ = -4						; size = 4
_it$ = 8						; size = 4
_type$ = 12						; size = 4
_asn$ = 16						; size = 4
_md$ = 20						; size = 4
_len$ = 24						; size = 4
_ASN1_item_digest PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_digest.c
; Line 99
	mov	eax, 4
	call	__chkstk
; Line 103
	push	DWORD PTR _it$[esp]
	lea	eax, DWORD PTR _str$[esp+8]
	mov	DWORD PTR _str$[esp+8], 0
	push	eax
	push	DWORD PTR _asn$[esp+8]
	call	_ASN1_item_i2d
; Line 104
	mov	ecx, DWORD PTR _str$[esp+16]
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	jne	SHORT $LN2@ASN1_item_
$LN5@ASN1_item_:
; Line 105
	xor	eax, eax
; Line 111
	pop	ecx
	ret	0
$LN2@ASN1_item_:
; Line 107
	push	0
	push	DWORD PTR _type$[esp+4]
	push	DWORD PTR _len$[esp+8]
	push	DWORD PTR _md$[esp+12]
	push	eax
	push	ecx
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN5@ASN1_item_
; Line 109
	push	DWORD PTR _str$[esp+4]
	call	_CRYPTO_free
	add	esp, 4
; Line 110
	mov	eax, 1
; Line 111
	pop	ecx
	ret	0
_ASN1_item_digest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_digest
_TEXT	SEGMENT
_p$ = -4						; size = 4
_i2d$ = 8						; size = 4
_type$ = 12						; size = 4
_data$ = 16						; size = 4
_md$ = 20						; size = 4
_len$ = 24						; size = 4
_ASN1_digest PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_digest.c
; Line 77
	mov	eax, 4
	call	__chkstk
	push	ebp
	push	esi
; Line 81
	push	0
	push	DWORD PTR _data$[esp+12]
	call	DWORD PTR _i2d$[esp+16]
; Line 82
	push	82					; 00000052H
	mov	ebp, eax
	push	OFFSET ??_C@_0BJ@LGEODODF@?4?2crypto?2asn1?2a_digest?4c?$AA@
	push	ebp
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 20					; 00000014H
	test	esi, esi
	jne	SHORT $LN2@ASN1_diges
; Line 83
	push	83					; 00000053H
	push	OFFSET ??_C@_0BJ@LGEODODF@?4?2crypto?2asn1?2a_digest?4c?$AA@
	push	65					; 00000041H
	push	184					; 000000b8H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN5@ASN1_diges:
; Line 84
	pop	esi
	xor	eax, eax
	pop	ebp
; Line 93
	pop	ecx
	ret	0
$LN2@ASN1_diges:
; Line 87
	lea	eax, DWORD PTR _p$[esp+12]
	mov	DWORD PTR _p$[esp+12], esi
	push	eax
	push	DWORD PTR _data$[esp+12]
	call	DWORD PTR _i2d$[esp+16]
; Line 89
	push	0
	push	DWORD PTR _type$[esp+20]
	push	DWORD PTR _len$[esp+24]
	push	DWORD PTR _md$[esp+28]
	push	ebp
	push	esi
	call	_EVP_Digest
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN5@ASN1_diges
; Line 91
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 92
	mov	eax, 1
	pop	esi
	pop	ebp
; Line 93
	pop	ecx
	ret	0
_ASN1_digest ENDP
_TEXT	ENDS
END

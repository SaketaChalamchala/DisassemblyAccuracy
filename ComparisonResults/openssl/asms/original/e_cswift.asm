; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BH@LPOCDBDP@CryptoSwift?5RSA?5method?$AA@ ; `string'
PUBLIC	??_C@_0BH@PJKBDPLH@CryptoSwift?5DSA?5method?$AA@ ; `string'
PUBLIC	??_C@_0BG@IJAAONL@CryptoSwift?5DH?5method?$AA@	; `string'
PUBLIC	??_C@_06FPKOIGKA@cswift?$AA@			; `string'
PUBLIC	??_C@_0CE@EJAJAMFB@CryptoSwift?5hardware?5engine?5supp@ ; `string'
PUBLIC	_p_CSwift_AcquireAccContext
PUBLIC	_p_CSwift_AttachKeyParam
PUBLIC	_p_CSwift_SimpleRequest
PUBLIC	_p_CSwift_ReleaseAccContext
PUBLIC	??_C@_0BE@GKOHOBNG@swAcquireAccContext?$AA@	; `string'
PUBLIC	??_C@_0BB@CMEOOCMH@swAttachKeyParam?$AA@	; `string'
PUBLIC	??_C@_0BA@BBJGAMOP@swSimpleRequest?$AA@		; `string'
PUBLIC	??_C@_0BE@EMDGPDJP@swReleaseAccContext?$AA@	; `string'
PUBLIC	??_C@_0M@KGAKDDIP@CSWIFT_CTRL?$AA@		; `string'
PUBLIC	??_C@_0BA@GJBNNKCH@CSWIFT_DSA_SIGN?$AA@		; `string'
PUBLIC	??_C@_0BC@LDIADIEK@CSWIFT_DSA_VERIFY?$AA@	; `string'
PUBLIC	??_C@_0O@CKCPKCCP@CSWIFT_FINISH?$AA@		; `string'
PUBLIC	??_C@_0M@EBHGEIBN@CSWIFT_INIT?$AA@		; `string'
PUBLIC	??_C@_0P@IJFIMLE@CSWIFT_MOD_EXP?$AA@		; `string'
PUBLIC	??_C@_0BD@PKNPAAAD@CSWIFT_MOD_EXP_CRT?$AA@	; `string'
PUBLIC	??_C@_0BC@INGHBIFA@CSWIFT_RAND_BYTES?$AA@	; `string'
PUBLIC	??_C@_0BD@GDNNAJLA@CSWIFT_RSA_MOD_EXP?$AA@	; `string'
PUBLIC	??_C@_0P@BJJHFGDF@already?5loaded?$AA@		; `string'
PUBLIC	??_C@_0N@DFCGBPP@bad?5key?5size?$AA@		; `string'
PUBLIC	??_C@_0M@FKHFAIDE@bn?5ctx?5full?$AA@		; `string'
PUBLIC	??_C@_0P@NJHPDICB@bn?5expand?5fail?$AA@		; `string'
PUBLIC	??_C@_0BN@NJGGMLOG@ctrl?5command?5not?5implemented?$AA@ ; `string'
PUBLIC	??_C@_0BH@KAGGBJK@missing?5key?5components?$AA@	; `string'
PUBLIC	??_C@_0L@ICAFOIA@not?5loaded?$AA@		; `string'
PUBLIC	??_C@_0P@LMFGIOCF@request?5failed?$AA@		; `string'
PUBLIC	??_C@_0N@JLJLJPMB@unit?5failure?$AA@		; `string'
PUBLIC	??_C@_0O@PGMCBPIK@cswift?5engine?$AA@		; `string'
PUBLIC	??_C@_07EGEBNIPD@SO_PATH?$AA@			; `string'
PUBLIC	??_C@_0DC@JIDHGOGK@Specifies?5the?5path?5to?5the?5?8cswif@ ; `string'
_BSS	SEGMENT
_cswift_dso DD	01H DUP (?)
_p_CSwift_AcquireAccContext DD 01H DUP (?)
_p_CSwift_AttachKeyParam DD 01H DUP (?)
_p_CSwift_SimpleRequest DD 01H DUP (?)
_p_CSwift_ReleaseAccContext DD 01H DUP (?)
_CSWIFT_LIBNAME DD 01H DUP (?)
_CSWIFT_lib_error_code DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0DC@JIDHGOGK@Specifies?5the?5path?5to?5the?5?8cswif@
CONST	SEGMENT
??_C@_0DC@JIDHGOGK@Specifies?5the?5path?5to?5the?5?8cswif@ DB 'Specifies '
	DB	'the path to the ''cswift'' shared library', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EGEBNIPD@SO_PATH?$AA@
CONST	SEGMENT
??_C@_07EGEBNIPD@SO_PATH?$AA@ DB 'SO_PATH', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_cswift_cmd_defns DD 0c8H
	DD	FLAT:??_C@_07EGEBNIPD@SO_PATH?$AA@
	DD	FLAT:??_C@_0DC@JIDHGOGK@Specifies?5the?5path?5to?5the?5?8cswif@
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0O@PGMCBPIK@cswift?5engine?$AA@
CONST	SEGMENT
??_C@_0O@PGMCBPIK@cswift?5engine?$AA@ DB 'cswift engine', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JLJLJPMB@unit?5failure?$AA@
CONST	SEGMENT
??_C@_0N@JLJLJPMB@unit?5failure?$AA@ DB 'unit failure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LMFGIOCF@request?5failed?$AA@
CONST	SEGMENT
??_C@_0P@LMFGIOCF@request?5failed?$AA@ DB 'request failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ICAFOIA@not?5loaded?$AA@
CONST	SEGMENT
??_C@_0L@ICAFOIA@not?5loaded?$AA@ DB 'not loaded', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KAGGBJK@missing?5key?5components?$AA@
CONST	SEGMENT
??_C@_0BH@KAGGBJK@missing?5key?5components?$AA@ DB 'missing key component'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NJGGMLOG@ctrl?5command?5not?5implemented?$AA@
CONST	SEGMENT
??_C@_0BN@NJGGMLOG@ctrl?5command?5not?5implemented?$AA@ DB 'ctrl command '
	DB	'not implemented', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NJHPDICB@bn?5expand?5fail?$AA@
CONST	SEGMENT
??_C@_0P@NJHPDICB@bn?5expand?5fail?$AA@ DB 'bn expand fail', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FKHFAIDE@bn?5ctx?5full?$AA@
CONST	SEGMENT
??_C@_0M@FKHFAIDE@bn?5ctx?5full?$AA@ DB 'bn ctx full', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DFCGBPP@bad?5key?5size?$AA@
CONST	SEGMENT
??_C@_0N@DFCGBPP@bad?5key?5size?$AA@ DB 'bad key size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BJJHFGDF@already?5loaded?$AA@
CONST	SEGMENT
??_C@_0P@BJJHFGDF@already?5loaded?$AA@ DB 'already loaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GDNNAJLA@CSWIFT_RSA_MOD_EXP?$AA@
CONST	SEGMENT
??_C@_0BD@GDNNAJLA@CSWIFT_RSA_MOD_EXP?$AA@ DB 'CSWIFT_RSA_MOD_EXP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@INGHBIFA@CSWIFT_RAND_BYTES?$AA@
CONST	SEGMENT
??_C@_0BC@INGHBIFA@CSWIFT_RAND_BYTES?$AA@ DB 'CSWIFT_RAND_BYTES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PKNPAAAD@CSWIFT_MOD_EXP_CRT?$AA@
CONST	SEGMENT
??_C@_0BD@PKNPAAAD@CSWIFT_MOD_EXP_CRT?$AA@ DB 'CSWIFT_MOD_EXP_CRT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IJFIMLE@CSWIFT_MOD_EXP?$AA@
CONST	SEGMENT
??_C@_0P@IJFIMLE@CSWIFT_MOD_EXP?$AA@ DB 'CSWIFT_MOD_EXP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EBHGEIBN@CSWIFT_INIT?$AA@
CONST	SEGMENT
??_C@_0M@EBHGEIBN@CSWIFT_INIT?$AA@ DB 'CSWIFT_INIT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CKCPKCCP@CSWIFT_FINISH?$AA@
CONST	SEGMENT
??_C@_0O@CKCPKCCP@CSWIFT_FINISH?$AA@ DB 'CSWIFT_FINISH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LDIADIEK@CSWIFT_DSA_VERIFY?$AA@
CONST	SEGMENT
??_C@_0BC@LDIADIEK@CSWIFT_DSA_VERIFY?$AA@ DB 'CSWIFT_DSA_VERIFY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GJBNNKCH@CSWIFT_DSA_SIGN?$AA@
CONST	SEGMENT
??_C@_0BA@GJBNNKCH@CSWIFT_DSA_SIGN?$AA@ DB 'CSWIFT_DSA_SIGN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KGAKDDIP@CSWIFT_CTRL?$AA@
CONST	SEGMENT
??_C@_0M@KGAKDDIP@CSWIFT_CTRL?$AA@ DB 'CSWIFT_CTRL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EMDGPDJP@swReleaseAccContext?$AA@
CONST	SEGMENT
??_C@_0BE@EMDGPDJP@swReleaseAccContext?$AA@ DB 'swReleaseAccContext', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BBJGAMOP@swSimpleRequest?$AA@
CONST	SEGMENT
??_C@_0BA@BBJGAMOP@swSimpleRequest?$AA@ DB 'swSimpleRequest', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CMEOOCMH@swAttachKeyParam?$AA@
CONST	SEGMENT
??_C@_0BB@CMEOOCMH@swAttachKeyParam?$AA@ DB 'swAttachKeyParam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GKOHOBNG@swAcquireAccContext?$AA@
CONST	SEGMENT
??_C@_0BE@GKOHOBNG@swAcquireAccContext?$AA@ DB 'swAcquireAccContext', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EJAJAMFB@CryptoSwift?5hardware?5engine?5supp@
CONST	SEGMENT
??_C@_0CE@EJAJAMFB@CryptoSwift?5hardware?5engine?5supp@ DB 'CryptoSwift h'
	DB	'ardware engine support', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FPKOIGKA@cswift?$AA@
CONST	SEGMENT
??_C@_06FPKOIGKA@cswift?$AA@ DB 'cswift', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IJAAONL@CryptoSwift?5DH?5method?$AA@
CONST	SEGMENT
??_C@_0BG@IJAAONL@CryptoSwift?5DH?5method?$AA@ DB 'CryptoSwift DH method', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PJKBDPLH@CryptoSwift?5DSA?5method?$AA@
CONST	SEGMENT
??_C@_0BH@PJKBDPLH@CryptoSwift?5DSA?5method?$AA@ DB 'CryptoSwift DSA meth'
	DB	'od', 00H					; `string'
CONST	ENDS
_DATA	SEGMENT
_cswift_dsa DD	FLAT:??_C@_0BH@PJKBDPLH@CryptoSwift?5DSA?5method?$AA@
	DD	FLAT:_cswift_dsa_sign
	DD	00H
	DD	FLAT:_cswift_dsa_verify
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_cswift_dh DD	FLAT:??_C@_0BG@IJAAONL@CryptoSwift?5DH?5method?$AA@
	DD	00H
	DD	00H
	DD	FLAT:_cswift_mod_exp_dh
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_cswift_random DD 00H
	DD	FLAT:_cswift_rand_bytes
	DD	00H
	DD	00H
	DD	FLAT:_cswift_rand_bytes
	DD	FLAT:_cswift_rand_status
_engine_cswift_id DD FLAT:??_C@_06FPKOIGKA@cswift?$AA@
_engine_cswift_name DD FLAT:??_C@_0CE@EJAJAMFB@CryptoSwift?5hardware?5engine?5supp@
_CSWIFT_F1 DD	FLAT:??_C@_0BE@GKOHOBNG@swAcquireAccContext?$AA@
_CSWIFT_F2 DD	FLAT:??_C@_0BB@CMEOOCMH@swAttachKeyParam?$AA@
_CSWIFT_F3 DD	FLAT:??_C@_0BA@BBJGAMOP@swSimpleRequest?$AA@
_CSWIFT_F4 DD	FLAT:??_C@_0BE@EMDGPDJP@swReleaseAccContext?$AA@
_CSWIFT_error_init DD 01H
_CSWIFT_str_functs DD 064000H
	DD	FLAT:??_C@_0M@KGAKDDIP@CSWIFT_CTRL?$AA@
	DD	065000H
	DD	FLAT:??_C@_0BA@GJBNNKCH@CSWIFT_DSA_SIGN?$AA@
	DD	066000H
	DD	FLAT:??_C@_0BC@LDIADIEK@CSWIFT_DSA_VERIFY?$AA@
	DD	067000H
	DD	FLAT:??_C@_0O@CKCPKCCP@CSWIFT_FINISH?$AA@
	DD	068000H
	DD	FLAT:??_C@_0M@EBHGEIBN@CSWIFT_INIT?$AA@
	DD	069000H
	DD	FLAT:??_C@_0P@IJFIMLE@CSWIFT_MOD_EXP?$AA@
	DD	06a000H
	DD	FLAT:??_C@_0BD@PKNPAAAD@CSWIFT_MOD_EXP_CRT?$AA@
	DD	06c000H
	DD	FLAT:??_C@_0BC@INGHBIFA@CSWIFT_RAND_BYTES?$AA@
	DD	06b000H
	DD	FLAT:??_C@_0BD@GDNNAJLA@CSWIFT_RSA_MOD_EXP?$AA@
	DD	00H
	DD	00H
_CSWIFT_str_reasons DD 064H
	DD	FLAT:??_C@_0P@BJJHFGDF@already?5loaded?$AA@
	DD	065H
	DD	FLAT:??_C@_0N@DFCGBPP@bad?5key?5size?$AA@
	DD	066H
	DD	FLAT:??_C@_0M@FKHFAIDE@bn?5ctx?5full?$AA@
	DD	067H
	DD	FLAT:??_C@_0P@NJHPDICB@bn?5expand?5fail?$AA@
	DD	068H
	DD	FLAT:??_C@_0BN@NJGGMLOG@ctrl?5command?5not?5implemented?$AA@
	DD	069H
	DD	FLAT:??_C@_0BH@KAGGBJK@missing?5key?5components?$AA@
	DD	06aH
	DD	FLAT:??_C@_0L@ICAFOIA@not?5loaded?$AA@
	DD	06bH
	DD	FLAT:??_C@_0P@LMFGIOCF@request?5failed?$AA@
	DD	06cH
	DD	FLAT:??_C@_0N@JLJLJPMB@unit?5failure?$AA@
	DD	00H
	DD	00H
_CSWIFT_lib_name DD 00H
	DD	FLAT:??_C@_0O@PGMCBPIK@cswift?5engine?$AA@
	DD	00H
	DD	00H
_cswift_rsa DD	FLAT:??_C@_0BH@LPOCDBDP@CryptoSwift?5RSA?5method?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_cswift_rsa_mod_exp
	DD	FLAT:_cswift_mod_exp_mont
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_0BH@LPOCDBDP@CryptoSwift?5RSA?5method?$AA@
CONST	SEGMENT
??_C@_0BH@LPOCDBDP@CryptoSwift?5RSA?5method?$AA@ DB 'CryptoSwift RSA meth'
	DB	'od', 00H					; `string'
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_v_check
PUBLIC	_bind_engine
PUBLIC	??_C@_05MJFOKOAF@swift?$AA@			; `string'
PUBLIC	??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@ ; `string'
PUBLIC	??_C@_03JALODAI@?$CFld?$AA@			; `string'
PUBLIC	??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@ ; `string'
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_CRYPTO_set_ex_data_implementation:PROC
EXTRN	_CRYPTO_set_locking_callback:PROC
EXTRN	_CRYPTO_set_add_lock_callback:PROC
EXTRN	_CRYPTO_set_dynlock_create_callback:PROC
EXTRN	_CRYPTO_set_dynlock_lock_callback:PROC
EXTRN	_CRYPTO_set_dynlock_destroy_callback:PROC
EXTRN	_CRYPTO_set_mem_functions:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_DSO_free:PROC
EXTRN	_DSO_load:PROC
EXTRN	_DSO_bind_func:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_free:PROC
EXTRN	_bn_expand2:PROC
EXTRN	_RSA_PKCS1_SSLeay:PROC
EXTRN	_DH_OpenSSL:PROC
EXTRN	_DSA_SIG_new:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_ERR_load_strings:PROC
EXTRN	_ERR_unload_strings:PROC
EXTRN	_ERR_get_next_error_library:PROC
EXTRN	_ERR_set_implementation:PROC
EXTRN	_ENGINE_set_id:PROC
EXTRN	_ENGINE_set_name:PROC
EXTRN	_ENGINE_set_RSA:PROC
EXTRN	_ENGINE_set_DSA:PROC
EXTRN	_ENGINE_set_DH:PROC
EXTRN	_ENGINE_set_RAND:PROC
EXTRN	_ENGINE_set_destroy_function:PROC
EXTRN	_ENGINE_set_init_function:PROC
EXTRN	_ENGINE_set_finish_function:PROC
EXTRN	_ENGINE_set_ctrl_function:PROC
EXTRN	_ENGINE_set_cmd_defns:PROC
EXTRN	_ENGINE_get_static_state:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
CONST	SEGMENT
??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@ DB 'CryptoSwift '
	DB	'error number is ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JALODAI@?$CFld?$AA@
CONST	SEGMENT
??_C@_03JALODAI@?$CFld?$AA@ DB '%ld', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
CONST	SEGMENT
??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@ DB '.\engines\e_cswift.c'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_05MJFOKOAF@swift?$AA@
CONST	SEGMENT
??_C@_05MJFOKOAF@swift?$AA@ DB 'swift', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bind_engine
_TEXT	SEGMENT
_e$ = 8							; size = 4
_id$ = 12						; size = 4
_fns$ = 16						; size = 4
_bind_engine PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1100
	push	esi
	call	_ENGINE_get_static_state
	mov	esi, DWORD PTR _fns$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $skip_cbs$19
	push	DWORD PTR [esi+20]
	push	DWORD PTR [esi+16]
	push	DWORD PTR [esi+12]
	call	_CRYPTO_set_mem_functions
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@bind_engin
$LN17@bind_engin:
	xor	eax, eax
	pop	esi
	ret	0
$LN3@bind_engin:
	push	DWORD PTR [esi+24]
	call	_CRYPTO_set_locking_callback
	push	DWORD PTR [esi+28]
	call	_CRYPTO_set_add_lock_callback
	push	DWORD PTR [esi+32]
	call	_CRYPTO_set_dynlock_create_callback
	push	DWORD PTR [esi+36]
	call	_CRYPTO_set_dynlock_lock_callback
	push	DWORD PTR [esi+40]
	call	_CRYPTO_set_dynlock_destroy_callback
	push	DWORD PTR [esi+8]
	call	_CRYPTO_set_ex_data_implementation
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN17@bind_engin
	push	DWORD PTR [esi+4]
	call	_ERR_set_implementation
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@bind_engin
$skip_cbs$19:
; Line 1092
	mov	eax, DWORD PTR _id$[esp]
	test	eax, eax
	je	SHORT $LN9@bind_engin
	mov	ecx, DWORD PTR _engine_cswift_id
	npad	5
$LL13@bind_engin:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN14@bind_engin
	test	dl, dl
	je	SHORT $LN15@bind_engin
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN14@bind_engin
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL13@bind_engin
$LN15@bind_engin:
	xor	eax, eax
	jmp	SHORT $LN16@bind_engin
$LN14@bind_engin:
	sbb	eax, eax
	or	eax, 1
$LN16@bind_engin:
	test	eax, eax
	jne	$LN17@bind_engin
$LN9@bind_engin:
; Line 1094
	push	DWORD PTR _e$[esp]
	call	_bind_helper
	add	esp, 4
	test	eax, eax
	je	$LN17@bind_engin
; Line 1100
	mov	eax, 1
	pop	esi
	ret	0
_bind_engine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _v_check
_TEXT	SEGMENT
_v$ = 8							; size = 4
_v_check PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1099
	cmp	DWORD PTR _v$[esp-4], 131072		; 00020000H
	sbb	eax, eax
	and	eax, -131072				; fffe0000H
	add	eax, 131072				; 00020000H
	ret	0
_v_check ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bind_fn
_TEXT	SEGMENT
_e$ = 8							; size = 4
_id$ = 12						; size = 4
_bind_fn PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1092
	mov	eax, DWORD PTR _id$[esp-4]
	test	eax, eax
	je	SHORT $LN2@bind_fn
	mov	ecx, DWORD PTR _engine_cswift_id
	npad	2
$LL5@bind_fn:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN6@bind_fn
	test	dl, dl
	je	SHORT $LN7@bind_fn
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN6@bind_fn
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL5@bind_fn
$LN7@bind_fn:
	xor	eax, eax
	jmp	SHORT $LN8@bind_fn
$LN6@bind_fn:
	sbb	eax, eax
	or	eax, 1
$LN8@bind_fn:
	test	eax, eax
	je	SHORT $LN2@bind_fn
; Line 1093
	xor	eax, eax
; Line 1097
	ret	0
$LN2@bind_fn:
; Line 1094
	push	DWORD PTR _e$[esp-4]
	call	_bind_helper
	add	esp, 4
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 1097
	ret	0
_bind_fn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _release_context
_TEXT	SEGMENT
_hac$ = 8						; size = 4
_release_context PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 378
	push	DWORD PTR _hac$[esp-4]
	call	DWORD PTR _p_CSwift_ReleaseAccContext
; Line 379
	ret	0
_release_context ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_context
_TEXT	SEGMENT
_hac$ = 8						; size = 4
_get_context PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 369
	push	DWORD PTR _hac$[esp-4]
	call	DWORD PTR _p_CSwift_AcquireAccContext
; Line 370
	neg	eax
	sbb	eax, eax
	inc	eax
; Line 373
	ret	0
_get_context ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_CSWIFT_LIBNAME
_TEXT	SEGMENT
_name$ = 8						; size = 4
_set_CSWIFT_LIBNAME PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 341
	mov	eax, DWORD PTR _CSWIFT_LIBNAME
	test	eax, eax
	je	SHORT $LN4@set_CSWIFT
; Line 342
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@set_CSWIFT:
; Line 349
	push	DWORD PTR _name$[esp-4]
; Line 343
	mov	DWORD PTR _CSWIFT_LIBNAME, 0
; Line 349
	call	_BUF_strdup
	xor	ecx, ecx
	mov	DWORD PTR _CSWIFT_LIBNAME, eax
	add	esp, 4
	test	eax, eax
	setne	cl
	mov	eax, ecx
; Line 350
	ret	0
_set_CSWIFT_LIBNAME ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _free_CSWIFT_LIBNAME
_TEXT	SEGMENT
_free_CSWIFT_LIBNAME PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 341
	mov	eax, DWORD PTR _CSWIFT_LIBNAME
	test	eax, eax
	je	SHORT $LN4@free_CSWIF
; Line 342
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@free_CSWIF:
; Line 343
	mov	DWORD PTR _CSWIFT_LIBNAME, 0
; Line 344
	ret	0
_free_CSWIFT_LIBNAME ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_CSWIFT_LIBNAME
_TEXT	SEGMENT
_get_CSWIFT_LIBNAME PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 334
	mov	ecx, DWORD PTR _CSWIFT_LIBNAME
	mov	eax, OFFSET ??_C@_05MJFOKOAF@swift?$AA@
	test	ecx, ecx
	cmovne	eax, ecx
; Line 337
	ret	0
_get_CSWIFT_LIBNAME ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bind_helper
_TEXT	SEGMENT
_e$ = 8							; size = 4
_bind_helper PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 234
	push	esi
; Line 256
	push	DWORD PTR _engine_cswift_id
	mov	esi, DWORD PTR _e$[esp+4]
	push	esi
	call	_ENGINE_set_id
	add	esp, 8
	test	eax, eax
	je	$LN3@bind_helpe
	push	DWORD PTR _engine_cswift_name
	push	esi
	call	_ENGINE_set_name
	add	esp, 8
	test	eax, eax
	je	$LN3@bind_helpe
	push	OFFSET _cswift_rsa
	push	esi
	call	_ENGINE_set_RSA
	add	esp, 8
	test	eax, eax
	je	$LN3@bind_helpe
	push	OFFSET _cswift_dsa
	push	esi
	call	_ENGINE_set_DSA
	add	esp, 8
	test	eax, eax
	je	$LN3@bind_helpe
	push	OFFSET _cswift_dh
	push	esi
	call	_ENGINE_set_DH
	add	esp, 8
	test	eax, eax
	je	$LN3@bind_helpe
	push	OFFSET _cswift_random
	push	esi
	call	_ENGINE_set_RAND
	add	esp, 8
	test	eax, eax
	je	$LN3@bind_helpe
	push	OFFSET _cswift_destroy
	push	esi
	call	_ENGINE_set_destroy_function
	add	esp, 8
	test	eax, eax
	je	$LN3@bind_helpe
	push	OFFSET _cswift_init
	push	esi
	call	_ENGINE_set_init_function
	add	esp, 8
	test	eax, eax
	je	$LN3@bind_helpe
	push	OFFSET _cswift_finish
	push	esi
	call	_ENGINE_set_finish_function
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@bind_helpe
	push	OFFSET _cswift_ctrl
	push	esi
	call	_ENGINE_set_ctrl_function
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@bind_helpe
	push	OFFSET _cswift_cmd_defns
	push	esi
	call	_ENGINE_set_cmd_defns
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@bind_helpe
; Line 269
	call	_RSA_PKCS1_SSLeay
; Line 270
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cswift_rsa+4, ecx
; Line 271
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _cswift_rsa+8, ecx
; Line 272
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _cswift_rsa+12, ecx
; Line 273
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR _cswift_rsa+16, eax
; Line 278
	call	_DH_OpenSSL
; Line 279
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cswift_dh+4, ecx
; Line 280
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _cswift_dh+8, eax
; Line 284
	call	_ERR_load_CSWIFT_strings
; Line 285
	mov	eax, 1
	pop	esi
; Line 286
	ret	0
$LN3@bind_helpe:
; Line 258
	xor	eax, eax
	pop	esi
; Line 286
	ret	0
_bind_helper ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_rand_status
_TEXT	SEGMENT
_cswift_rand_status PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1082
	mov	eax, 1
; Line 1083
	ret	0
_cswift_rand_status ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_rand_bytes
_TEXT	SEGMENT
_hac$ = -1060						; size = 4
_largenum$ = -1056					; size = 8
_tmpbuf$1 = -1048					; size = 20
_buf32$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_buf$ = 8						; size = 4
_num$ = 12						; size = 4
_cswift_rand_bytes PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1011
	mov	eax, 1060				; 00000424H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1060], eax
	push	ebp
	push	edi
	mov	edi, DWORD PTR _buf$[esp+1064]
; Line 369
	lea	eax, DWORD PTR _hac$[esp+1068]
	push	eax
; Line 1016
	xor	ebp, ebp
; Line 369
	call	DWORD PTR _p_CSwift_AcquireAccContext
; Line 370
	test	eax, eax
	je	SHORT $LN4@cswift_ran
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN14@cswift_ran
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN14@cswift_ran:
; Line 149
	push	1020					; 000003fcH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	108					; 0000006cH
	push	108					; 0000006cH
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1021
	jmp	$LN31@cswift_ran
$LN4@cswift_ran:
	push	ebx
	push	esi
; Line 1037
	mov	esi, DWORD PTR _num$[esp+1072]
	cmp	esi, 1024				; 00000400H
	jl	SHORT $LN3@cswift_ran
$LL2@cswift_ran:
; Line 1045
	push	1
	lea	eax, DWORD PTR _largenum$[esp+1080]
	mov	DWORD PTR _largenum$[esp+1084], edi
	push	eax
	push	0
	push	0
	push	5
	push	DWORD PTR _hac$[esp+1096]
	mov	DWORD PTR _largenum$[esp+1100], 1024	; 00000400H
	call	DWORD PTR _p_CSwift_SimpleRequest
	mov	ebx, eax
; Line 1047
	test	ebx, ebx
	jne	SHORT $LN25@cswift_ran
; Line 1055
	sub	esi, 1024				; 00000400H
	add	edi, 1024				; 00000400H
	cmp	esi, 1024				; 00000400H
	jge	SHORT $LL2@cswift_ran
$LN3@cswift_ran:
; Line 1057
	test	esi, esi
	je	$LN6@cswift_ran
; Line 1060
	push	1
	lea	eax, DWORD PTR _buf32$[esp+1080]
	mov	DWORD PTR _largenum$[esp+1080], 1024	; 00000400H
	mov	DWORD PTR _largenum$[esp+1084], eax
	lea	eax, DWORD PTR _largenum$[esp+1080]
	push	eax
	push	0
	push	0
	push	5
	push	DWORD PTR _hac$[esp+1096]
	call	DWORD PTR _p_CSwift_SimpleRequest
	mov	ebx, eax
; Line 1062
	test	ebx, ebx
	je	SHORT $LN7@cswift_ran
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN20@cswift_ran
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN20@cswift_ran:
; Line 149
	push	1064					; 00000428H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1067
	jmp	SHORT $LN32@cswift_ran
$LN25@cswift_ran:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN17@cswift_ran
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN17@cswift_ran:
; Line 149
	push	1049					; 00000419H
$LN32@cswift_ran:
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	108					; 0000006cH
	push	eax
	call	_ERR_put_error
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1050
	push	ebx
	lea	eax, DWORD PTR _tmpbuf$1[esp+1100]
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	push	eax
	call	_sprintf
; Line 1051
	lea	eax, DWORD PTR _tmpbuf$1[esp+1108]
	push	eax
	push	OFFSET ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 44					; 0000002cH
; Line 1052
	jmp	SHORT $LN30@cswift_ran
$LN7@cswift_ran:
; Line 1069
	push	esi
	push	DWORD PTR _largenum$[esp+1084]
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN6@cswift_ran:
; Line 1072
	mov	ebp, 1
$LN30@cswift_ran:
; Line 378
	push	DWORD PTR _hac$[esp+1076]
	call	DWORD PTR _p_CSwift_ReleaseAccContext
	pop	esi
	pop	ebx
$LN31@cswift_ran:
; Line 1078
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1068]
	mov	eax, ebp
	pop	edi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1060				; 00000424H
	ret	0
_cswift_rand_bytes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_mod_exp_dh
_TEXT	SEGMENT
_dh$ = 8						; size = 4
_r$ = 12						; size = 4
_a$ = 16						; size = 4
_p$ = 20						; size = 4
_m$ = 24						; size = 4
_ctx$ = 28						; size = 4
_m_ctx$ = 32						; size = 4
_cswift_mod_exp_dh PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 1005
	push	DWORD PTR _ctx$[esp-4]
	push	DWORD PTR _m$[esp]
	push	DWORD PTR _p$[esp+4]
	push	DWORD PTR _a$[esp+8]
	push	DWORD PTR _r$[esp+12]
	call	_cswift_mod_exp
	add	esp, 20					; 00000014H
; Line 1006
	ret	0
_cswift_mod_exp_dh ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_dsa_verify
_TEXT	SEGMENT
_dsa_p$1$ = -116					; size = 4
_dsa_q$1$ = -112					; size = 4
_dsa_g$1$ = -108					; size = 4
_dsa_key$1$ = -104					; size = 4
_hac$ = -100						; size = 4
_arg$ = -96						; size = 16
_sig$GSCopy$1$ = -80					; size = 4
_sig_result$ = -76					; size = 4
_res$ = -72						; size = 8
_sw_param$ = -64					; size = 44
_tmpbuf$1 = -20						; size = 13
_tmpbuf$2 = -20						; size = 13
__$ArrayPad$ = -4					; size = 4
_dgst$ = 8						; size = 4
_dgst_len$ = 12						; size = 4
_sig$ = 16						; size = 4
_dsa$ = 20						; size = 4
_cswift_dsa_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 897
	mov	eax, 116				; 00000074H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+116], eax
	mov	eax, DWORD PTR _sig$[esp+112]
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR _dsa$[esp+124]
; Line 909
	or	ebx, -1
	mov	DWORD PTR _sig$GSCopy$1$[esp+128], eax
; Line 912
	call	_BN_CTX_new
	mov	esi, eax
	test	esi, esi
	je	$LN42@cswift_dsa
; Line 369
	lea	eax, DWORD PTR _hac$[esp+128]
	push	eax
	call	DWORD PTR _p_CSwift_AcquireAccContext
; Line 370
	test	eax, eax
	je	SHORT $LN5@cswift_dsa
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN30@cswift_dsa
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN30@cswift_dsa:
; Line 149
	push	915					; 00000393H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	108					; 0000006cH
	push	102					; 00000066H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 916
	jmp	$LN38@cswift_dsa
$LN5@cswift_dsa:
	push	ebp
; Line 920
	push	esi
	call	_BN_CTX_start
; Line 921
	push	esi
	call	_BN_CTX_get
; Line 922
	push	esi
	mov	DWORD PTR _dsa_p$1$[esp+144], eax
	call	_BN_CTX_get
; Line 923
	push	esi
	mov	DWORD PTR _dsa_q$1$[esp+148], eax
	call	_BN_CTX_get
; Line 924
	push	esi
	mov	DWORD PTR _dsa_g$1$[esp+152], eax
	call	_BN_CTX_get
; Line 925
	push	esi
	mov	DWORD PTR _dsa_key$1$[esp+156], eax
	call	_BN_CTX_get
	mov	ebp, eax
	add	esp, 24					; 00000018H
; Line 926
	test	ebp, ebp
	jne	SHORT $LN6@cswift_dsa
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN33@cswift_dsa
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN33@cswift_dsa:
; Line 149
	push	927					; 0000039fH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	102					; 00000066H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 928
	jmp	$LN43@cswift_dsa
$LN6@cswift_dsa:
; Line 933
	mov	eax, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _dsa_p$1$[esp+132]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN17@cswift_dsa
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN17@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
	mov	eax, DWORD PTR [edi+16]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _dsa_q$1$[esp+132]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN19@cswift_dsa
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN19@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _dsa_g$1$[esp+132]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN21@cswift_dsa
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN21@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
	mov	eax, DWORD PTR [edi+24]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _dsa_key$1$[esp+132]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN23@cswift_dsa
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN23@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
	cmp	DWORD PTR [ebp+8], 40			; 00000028H
	jl	SHORT $LN24@cswift_dsa
	mov	eax, ebp
	jmp	SHORT $LN25@cswift_dsa
$LN24@cswift_dsa:
	push	40					; 00000028H
	push	ebp
	call	_bn_expand2
	add	esp, 8
$LN25@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
; Line 939
	mov	eax, DWORD PTR _dsa_p$1$[esp+132]
	mov	DWORD PTR _sw_param$[esp+132], 3
	push	DWORD PTR [eax]
	push	DWORD PTR [edi+12]
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+144], eax
; Line 940
	mov	eax, DWORD PTR _dsa_p$1$[esp+140]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _sw_param$[esp+148], eax
; Line 941
	mov	eax, DWORD PTR _dsa_q$1$[esp+140]
	push	DWORD PTR [eax]
	push	DWORD PTR [edi+16]
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+160], eax
; Line 942
	mov	eax, DWORD PTR _dsa_q$1$[esp+148]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _sw_param$[esp+164], eax
; Line 943
	mov	eax, DWORD PTR _dsa_g$1$[esp+148]
	push	DWORD PTR [eax]
	push	DWORD PTR [edi+20]
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+176], eax
; Line 944
	mov	eax, DWORD PTR _dsa_g$1$[esp+156]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _sw_param$[esp+180], eax
; Line 945
	mov	eax, DWORD PTR _dsa_key$1$[esp+156]
	push	DWORD PTR [eax]
	push	DWORD PTR [edi+24]
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+192], eax
	add	esp, 32					; 00000020H
; Line 947
	mov	eax, DWORD PTR _dsa_key$1$[esp+132]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _sw_param$[esp+164], eax
; Line 949
	lea	eax, DWORD PTR _sw_param$[esp+132]
	push	eax
	push	DWORD PTR _hac$[esp+136]
	call	DWORD PTR _p_CSwift_AttachKeyParam
	mov	edi, eax
; Line 950
	cmp	edi, -10006				; ffffd8eaH
	je	$LN10@cswift_dsa
	test	edi, edi
	je	SHORT $LN9@cswift_dsa
; Line 959
	push	959					; 000003bfH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	102					; 00000066H
	call	_ERR_CSWIFT_error
; Line 960
	push	edi
	lea	eax, DWORD PTR _tmpbuf$2[esp+152]
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	push	eax
	call	_sprintf
; Line 961
	lea	eax, DWORD PTR _tmpbuf$2[esp+160]
	push	eax
	push	OFFSET ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 963
	jmp	$LN41@cswift_dsa
$LN9@cswift_dsa:
; Line 966
	mov	eax, DWORD PTR _dgst_len$[esp+128]
	xorps	xmm0, xmm0
	mov	DWORD PTR _arg$[esp+132], eax
; Line 967
	mov	eax, DWORD PTR _dgst$[esp+128]
	mov	DWORD PTR _arg$[esp+136], eax
; Line 968
	mov	DWORD PTR _arg$[esp+140], 40		; 00000028H
; Line 969
	mov	eax, DWORD PTR [ebp]
; Line 971
	mov	ebp, DWORD PTR _sig$GSCopy$1$[esp+132]
	mov	DWORD PTR _arg$[esp+144], eax
	movups	XMMWORD PTR [eax], xmm0
	mov	eax, DWORD PTR _arg$[esp+144]
	movups	XMMWORD PTR [eax+16], xmm0
	mov	eax, DWORD PTR _arg$[esp+144]
	movq	QWORD PTR [eax+32], xmm0
	push	DWORD PTR [ebp]
	call	_BN_num_bits
	mov	ecx, DWORD PTR _arg$[esp+148]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	sub	ecx, eax
	add	ecx, 20					; 00000014H
	push	ecx
	push	DWORD PTR [ebp]
	call	_BN_bn2bin
; Line 972
	push	DWORD PTR [ebp+4]
	call	_BN_num_bits
	mov	ecx, DWORD PTR _arg$[esp+160]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	sub	ecx, eax
	add	ecx, 40					; 00000028H
	push	ecx
	push	DWORD PTR [ebp+4]
	call	_BN_bn2bin
	add	esp, 24					; 00000018H
; Line 973
	mov	DWORD PTR _res$[esp+132], 4
; Line 974
	lea	eax, DWORD PTR _sig_result$[esp+132]
	mov	DWORD PTR _res$[esp+136], eax
; Line 976
	lea	eax, DWORD PTR _res$[esp+132]
	push	1
	push	eax
	push	2
	lea	eax, DWORD PTR _arg$[esp+144]
	push	eax
	push	4
	push	DWORD PTR _hac$[esp+152]
	call	DWORD PTR _p_CSwift_SimpleRequest
	mov	edi, eax
; Line 978
	test	edi, edi
	je	SHORT $LN12@cswift_dsa
; Line 980
	push	980					; 000003d4H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	102					; 00000066H
	call	_ERR_CSWIFT_error
; Line 981
	push	edi
	lea	eax, DWORD PTR _tmpbuf$1[esp+152]
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	push	eax
	call	_sprintf
; Line 982
	lea	eax, DWORD PTR _tmpbuf$1[esp+160]
	push	eax
	push	OFFSET ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 983
	jmp	SHORT $LN41@cswift_dsa
$LN12@cswift_dsa:
; Line 986
	xor	ebx, ebx
	cmp	DWORD PTR _sig_result$[esp+132], ebx
	setne	bl
	jmp	SHORT $LN41@cswift_dsa
$LN10@cswift_dsa:
; Line 954
	push	954					; 000003baH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	101					; 00000065H
	push	102					; 00000066H
	call	_ERR_CSWIFT_error
	add	esp, 16					; 00000010H
; Line 955
	jmp	SHORT $LN41@cswift_dsa
$LN8@cswift_dsa:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN36@cswift_dsa
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN36@cswift_dsa:
; Line 149
	push	935					; 000003a7H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	103					; 00000067H
$LN43@cswift_dsa:
	push	102					; 00000066H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN41@cswift_dsa:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 378
	push	DWORD PTR _hac$[esp+132]
	call	DWORD PTR _p_CSwift_ReleaseAccContext
	pop	ebp
$LN38@cswift_dsa:
; Line 992
	push	esi
	call	_BN_CTX_end
; Line 993
	push	esi
	call	_BN_CTX_free
	add	esp, 8
$LN42@cswift_dsa:
; Line 996
	mov	ecx, DWORD PTR __$ArrayPad$[esp+128]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
_cswift_dsa_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_dsa_sign
_TEXT	SEGMENT
_sw_status$1$ = -104					; size = 4
_dsa_key$1$ = -104					; size = 4
_dsa_p$1$ = -100					; size = 4
_dsa_q$1$ = -96						; size = 4
_dsa_g$1$ = -92						; size = 4
_hac$ = -88						; size = 4
_dgst$GSCopy$1$ = -84					; size = 4
_res$ = -80						; size = 8
_arg$ = -72						; size = 8
_sw_param$ = -64					; size = 44
_tmpbuf$1 = -20						; size = 13
__$ArrayPad$ = -4					; size = 4
_dgst$ = 8						; size = 4
_dlen$ = 12						; size = 4
_dsa$ = 16						; size = 4
_cswift_dsa_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 796
	mov	eax, 104				; 00000068H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+104], eax
	mov	eax, DWORD PTR _dgst$[esp+100]
	push	ebp
	mov	ebp, DWORD PTR _dsa$[esp+104]
	push	esi
	push	edi
	mov	DWORD PTR _dgst$GSCopy$1$[esp+116], eax
; Line 807
	xor	edi, edi
; Line 810
	call	_BN_CTX_new
	mov	esi, eax
	test	esi, esi
	je	$LN43@cswift_dsa
; Line 369
	lea	eax, DWORD PTR _hac$[esp+116]
	push	eax
	call	DWORD PTR _p_CSwift_AcquireAccContext
; Line 370
	test	eax, eax
	je	SHORT $LN5@cswift_dsa
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN31@cswift_dsa
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN31@cswift_dsa:
; Line 149
	push	813					; 0000032dH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	108					; 0000006cH
	push	101					; 00000065H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 814
	jmp	$LN39@cswift_dsa
$LN5@cswift_dsa:
	push	ebx
; Line 818
	push	esi
	call	_BN_CTX_start
; Line 819
	push	esi
	call	_BN_CTX_get
; Line 820
	push	esi
	mov	DWORD PTR _dsa_p$1$[esp+132], eax
	call	_BN_CTX_get
; Line 821
	push	esi
	mov	DWORD PTR _dsa_q$1$[esp+136], eax
	call	_BN_CTX_get
; Line 822
	push	esi
	mov	DWORD PTR _dsa_g$1$[esp+140], eax
	call	_BN_CTX_get
; Line 823
	push	esi
	mov	DWORD PTR _dsa_key$1$[esp+144], eax
	call	_BN_CTX_get
	mov	ebx, eax
	add	esp, 24					; 00000018H
; Line 824
	test	ebx, ebx
	jne	SHORT $LN6@cswift_dsa
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN34@cswift_dsa
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN34@cswift_dsa:
; Line 149
	push	825					; 00000339H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	102					; 00000066H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 826
	jmp	$LN44@cswift_dsa
$LN6@cswift_dsa:
; Line 831
	mov	eax, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _dsa_p$1$[esp+120]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN18@cswift_dsa
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN18@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
	mov	eax, DWORD PTR [ebp+16]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _dsa_q$1$[esp+120]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN20@cswift_dsa
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN20@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
	mov	eax, DWORD PTR [ebp+20]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _dsa_g$1$[esp+120]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN22@cswift_dsa
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN22@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
	mov	eax, DWORD PTR [ebp+28]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _dsa_key$1$[esp+120]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN24@cswift_dsa
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN24@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
	mov	eax, DWORD PTR [ebp+12]
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [ebx+8]
	jg	SHORT $LN25@cswift_dsa
	mov	eax, ebx
	jmp	SHORT $LN26@cswift_dsa
$LN25@cswift_dsa:
	push	eax
	push	ebx
	call	_bn_expand2
	add	esp, 8
$LN26@cswift_dsa:
	test	eax, eax
	je	$LN8@cswift_dsa
; Line 837
	mov	eax, DWORD PTR _dsa_p$1$[esp+120]
	mov	DWORD PTR _sw_param$[esp+120], 3
	push	DWORD PTR [eax]
	push	DWORD PTR [ebp+12]
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+132], eax
; Line 838
	mov	eax, DWORD PTR _dsa_p$1$[esp+128]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _sw_param$[esp+136], eax
; Line 839
	mov	eax, DWORD PTR _dsa_q$1$[esp+128]
	push	DWORD PTR [eax]
	push	DWORD PTR [ebp+16]
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+148], eax
; Line 840
	mov	eax, DWORD PTR _dsa_q$1$[esp+136]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _sw_param$[esp+152], eax
; Line 841
	mov	eax, DWORD PTR _dsa_g$1$[esp+136]
	push	DWORD PTR [eax]
	push	DWORD PTR [ebp+20]
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+164], eax
; Line 842
	mov	eax, DWORD PTR _dsa_g$1$[esp+144]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _sw_param$[esp+168], eax
; Line 843
	mov	eax, DWORD PTR _dsa_key$1$[esp+144]
	push	DWORD PTR [eax]
	push	DWORD PTR [ebp+28]
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+180], eax
	add	esp, 32					; 00000020H
; Line 845
	mov	eax, DWORD PTR _dsa_key$1$[esp+120]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _sw_param$[esp+152], eax
; Line 847
	lea	eax, DWORD PTR _sw_param$[esp+120]
	push	eax
	push	DWORD PTR _hac$[esp+124]
	call	DWORD PTR _p_CSwift_AttachKeyParam
	mov	DWORD PTR _sw_status$1$[esp+120], eax
; Line 848
	cmp	eax, -10006				; ffffd8eaH
	je	$LN10@cswift_dsa
	test	eax, eax
	je	SHORT $LN9@cswift_dsa
; Line 857
	push	857					; 00000359H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	101					; 00000065H
	call	_ERR_CSWIFT_error
; Line 858
	push	DWORD PTR _sw_status$1$[esp+136]
$LN45@cswift_dsa:
	lea	eax, DWORD PTR _tmpbuf$1[esp+140]
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	push	eax
	call	_sprintf
; Line 859
	lea	eax, DWORD PTR _tmpbuf$1[esp+148]
	push	eax
	push	OFFSET ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 861
	jmp	$LN42@cswift_dsa
$LN9@cswift_dsa:
; Line 864
	mov	eax, DWORD PTR _dlen$[esp+116]
; Line 866
	push	DWORD PTR [ebp+12]
	mov	DWORD PTR _arg$[esp+124], eax
	mov	eax, DWORD PTR _dgst$GSCopy$1$[esp+124]
	mov	DWORD PTR _arg$[esp+128], eax
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
; Line 867
	push	eax
	mov	DWORD PTR _res$[esp+128], eax
	push	0
	push	DWORD PTR [ebx]
	call	_memset
; Line 868
	mov	eax, DWORD PTR [ebx]
	add	esp, 16					; 00000010H
	mov	DWORD PTR _res$[esp+124], eax
; Line 870
	lea	eax, DWORD PTR _res$[esp+120]
	push	1
	push	eax
	push	1
	lea	eax, DWORD PTR _arg$[esp+132]
	push	eax
	push	3
	push	DWORD PTR _hac$[esp+140]
	call	DWORD PTR _p_CSwift_SimpleRequest
	mov	ebp, eax
; Line 872
	test	ebp, ebp
	je	SHORT $LN12@cswift_dsa
; Line 874
	push	874					; 0000036aH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	101					; 00000065H
	call	_ERR_CSWIFT_error
; Line 875
	push	ebp
; Line 877
	jmp	$LN45@cswift_dsa
$LN12@cswift_dsa:
; Line 880
	call	_DSA_SIG_new
	mov	edi, eax
	test	edi, edi
	je	SHORT $LN42@cswift_dsa
; Line 882
	push	0
	push	20					; 00000014H
	push	DWORD PTR [ebx]
	call	_BN_bin2bn
	mov	DWORD PTR [edi], eax
; Line 883
	mov	eax, DWORD PTR [ebx]
	push	0
	add	eax, 20					; 00000014H
	push	20					; 00000014H
	push	eax
	call	_BN_bin2bn
	add	esp, 24					; 00000018H
	mov	DWORD PTR [edi+4], eax
	jmp	SHORT $LN42@cswift_dsa
$LN10@cswift_dsa:
; Line 852
	push	852					; 00000354H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	101					; 00000065H
	push	101					; 00000065H
	call	_ERR_CSWIFT_error
	add	esp, 16					; 00000010H
; Line 853
	jmp	SHORT $LN42@cswift_dsa
$LN8@cswift_dsa:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN37@cswift_dsa
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN37@cswift_dsa:
; Line 149
	push	833					; 00000341H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	103					; 00000067H
$LN44@cswift_dsa:
	push	101					; 00000065H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN42@cswift_dsa:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 378
	push	DWORD PTR _hac$[esp+120]
	call	DWORD PTR _p_CSwift_ReleaseAccContext
	pop	ebx
$LN39@cswift_dsa:
; Line 889
	push	esi
	call	_BN_CTX_end
; Line 890
	push	esi
	call	_BN_CTX_free
	add	esp, 8
$LN43@cswift_dsa:
; Line 893
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	ret	0
_cswift_dsa_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_mod_exp_mont
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_p$ = 16						; size = 4
_m$ = 20						; size = 4
_ctx$ = 24						; size = 4
_m_ctx$ = 28						; size = 4
_cswift_mod_exp_mont PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 771
	push	ebx
; Line 776
	mov	ebx, DWORD PTR _r$[esp]
	push	esi
	push	edi
	push	ebx
	call	_BN_num_bits
	mov	esi, DWORD PTR _m$[esp+12]
	add	eax, 7
	mov	edi, DWORD PTR _a$[esp+12]
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, 256				; 00000100H
	jg	SHORT $LN3@cswift_mod
	push	edi
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, 256				; 00000100H
	jg	SHORT $LN3@cswift_mod
	push	esi
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, 256				; 00000100H
	jle	SHORT $LN4@cswift_mod
$LN3@cswift_mod:
; Line 783
	call	_RSA_PKCS1_SSLeay
; Line 786
	test	eax, eax
	je	SHORT $LN4@cswift_mod
; Line 787
	push	DWORD PTR _m_ctx$[esp+8]
	mov	eax, DWORD PTR [eax+24]
	push	DWORD PTR _ctx$[esp+12]
	push	esi
	push	DWORD PTR _p$[esp+20]
	push	edi
	push	ebx
	call	eax
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi
	pop	ebx
; Line 791
	ret	0
$LN4@cswift_mod:
; Line 790
	push	DWORD PTR _ctx$[esp+8]
	push	esi
	push	DWORD PTR _p$[esp+16]
	push	edi
	push	ebx
	call	_cswift_mod_exp
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx
; Line 791
	ret	0
_cswift_mod_exp_mont ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_rsa_mod_exp
_TEXT	SEGMENT
_r0$ = 8						; size = 4
_I$ = 12						; size = 4
_rsa$ = 16						; size = 4
_ctx$ = 20						; size = 4
_cswift_rsa_mod_exp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 733
	push	esi
; Line 737
	mov	esi, DWORD PTR _rsa$[esp]
	push	edi
	xor	edi, edi
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	$LN3@cswift_rsa
	cmp	DWORD PTR [esi+32], edi
	je	$LN3@cswift_rsa
	cmp	DWORD PTR [esi+36], edi
	je	$LN3@cswift_rsa
	cmp	DWORD PTR [esi+40], edi
	je	$LN3@cswift_rsa
	cmp	DWORD PTR [esi+44], edi
	je	$LN3@cswift_rsa
; Line 747
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, 128				; 00000080H
	jg	SHORT $LN5@cswift_rsa
	push	DWORD PTR [esi+32]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, 128				; 00000080H
	jg	SHORT $LN5@cswift_rsa
	push	DWORD PTR [esi+36]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, 128				; 00000080H
	jg	SHORT $LN5@cswift_rsa
	push	DWORD PTR [esi+40]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, 128				; 00000080H
	jg	SHORT $LN5@cswift_rsa
	push	DWORD PTR [esi+44]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, 128				; 00000080H
	jle	SHORT $LN6@cswift_rsa
$LN5@cswift_rsa:
; Line 754
	call	_RSA_PKCS1_SSLeay
; Line 757
	test	eax, eax
	je	SHORT $LN6@cswift_rsa
; Line 758
	push	DWORD PTR _ctx$[esp+4]
	mov	eax, DWORD PTR [eax+20]
	push	esi
	push	DWORD PTR _I$[esp+12]
	push	DWORD PTR _r0$[esp+16]
	call	eax
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
; Line 765
	ret	0
$LN6@cswift_rsa:
; Line 761
	push	DWORD PTR _ctx$[esp+4]
	push	DWORD PTR [esi+44]
	push	DWORD PTR [esi+40]
	push	DWORD PTR [esi+36]
	push	DWORD PTR [esi+32]
	push	DWORD PTR [esi+28]
	push	DWORD PTR _I$[esp+28]
	push	DWORD PTR _r0$[esp+32]
	call	_cswift_mod_exp_crt
	add	esp, 32					; 00000020H
	mov	edi, eax
	pop	edi
	pop	esi
; Line 765
	ret	0
$LN3@cswift_rsa:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN9@cswift_rsa
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN9@cswift_rsa:
; Line 149
	push	739					; 000002e3H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	105					; 00000069H
	push	107					; 0000006bH
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$12:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 764
	mov	eax, edi
	pop	edi
	pop	esi
; Line 765
	ret	0
_cswift_rsa_mod_exp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_mod_exp_crt
_TEXT	SEGMENT
_p$GSCopy$1$ = -112					; size = 4
_hac$ = -108						; size = 4
_a$GSCopy$1$ = -104					; size = 4
_acquired$1$ = -100					; size = 4
_dmp1$GSCopy$1$ = -96					; size = 4
_dmq1$GSCopy$1$ = -92					; size = 4
_iqmp$GSCopy$1$ = -88					; size = 4
_r$GSCopy$1$ = -84					; size = 4
_res$ = -80						; size = 8
_sw_param$ = -72					; size = 44
_arg$ = -28						; size = 8
_tmpbuf$1 = -20						; size = 13
_tmpbuf$2 = -20						; size = 13
__$ArrayPad$ = -4					; size = 4
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_p$ = 16						; size = 4
_q$ = 20						; size = 4
_dmp1$ = 24						; size = 4
_dmq1$ = 28						; size = 4
_iqmp$ = 32						; size = 4
_ctx$ = 36						; size = 4
_cswift_mod_exp_crt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 607
	mov	eax, 112				; 00000070H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+112], eax
	mov	eax, DWORD PTR _r$[esp+108]
	mov	DWORD PTR _r$GSCopy$1$[esp+112], eax
	mov	eax, DWORD PTR _a$[esp+108]
	mov	DWORD PTR _a$GSCopy$1$[esp+112], eax
	mov	eax, DWORD PTR _p$[esp+108]
	push	ebx
	mov	ebx, DWORD PTR _q$[esp+112]
	mov	DWORD PTR _p$GSCopy$1$[esp+116], eax
	mov	eax, DWORD PTR _dmp1$[esp+112]
	push	ebp
	mov	DWORD PTR _dmp1$GSCopy$1$[esp+120], eax
; Line 614
	xor	ebp, ebp
	mov	eax, DWORD PTR _dmq1$[esp+116]
	push	esi
	mov	DWORD PTR _dmq1$GSCopy$1$[esp+124], eax
	xor	esi, esi
	mov	eax, DWORD PTR _iqmp$[esp+120]
	push	edi
	mov	DWORD PTR _iqmp$GSCopy$1$[esp+128], eax
	xor	edi, edi
; Line 369
	lea	eax, DWORD PTR _hac$[esp+128]
; Line 615
	mov	DWORD PTR _acquired$1$[esp+128], esi
; Line 369
	push	eax
; Line 617
	mov	DWORD PTR _sw_param$[esp+140], esi
; Line 618
	mov	DWORD PTR _sw_param$[esp+148], esi
; Line 619
	mov	DWORD PTR _sw_param$[esp+156], esi
; Line 620
	mov	DWORD PTR _sw_param$[esp+164], esi
; Line 621
	mov	DWORD PTR _sw_param$[esp+172], esi
; Line 369
	call	DWORD PTR _p_CSwift_AcquireAccContext
; Line 370
	test	eax, eax
	je	SHORT $LN4@cswift_mod
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN35@cswift_mod
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN35@cswift_mod:
; Line 149
	push	624					; 00000270H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	108					; 0000006cH
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 625
	jmp	$LN47@cswift_mod
$LN4@cswift_mod:
; Line 627
	mov	DWORD PTR _acquired$1$[esp+128], 1
; Line 630
	call	_BN_new
	mov	edi, eax
; Line 631
	call	_BN_new
	mov	esi, eax
; Line 632
	test	esi, esi
	je	$LN6@cswift_mod
	test	edi, edi
	je	$LN6@cswift_mod
; Line 649
	push	DWORD PTR _p$GSCopy$1$[esp+128]
	lea	eax, DWORD PTR _sw_param$[esp+136]
	mov	DWORD PTR _sw_param$[esp+132], 1
	push	eax
	call	_cswift_bn_32copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@cswift_mod
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN41@cswift_mod
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN41@cswift_mod:
; Line 149
	push	650					; 0000028aH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	103					; 00000067H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 651
	jmp	$LN47@cswift_mod
$LN7@cswift_mod:
; Line 653
	lea	eax, DWORD PTR _sw_param$[esp+140]
	push	ebx
	push	eax
	call	_cswift_bn_32copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@cswift_mod
; Line 654
	push	654					; 0000028eH
$LN48@cswift_mod:
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	103					; 00000067H
	push	106					; 0000006aH
	call	_ERR_CSWIFT_error
	add	esp, 16					; 00000010H
; Line 655
	jmp	$err$51
$LN8@cswift_mod:
; Line 657
	push	DWORD PTR _dmp1$GSCopy$1$[esp+128]
	lea	eax, DWORD PTR _sw_param$[esp+152]
	push	eax
	call	_cswift_bn_32copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@cswift_mod
; Line 658
	push	658					; 00000292H
; Line 659
	jmp	SHORT $LN48@cswift_mod
$LN9@cswift_mod:
; Line 661
	push	DWORD PTR _dmq1$GSCopy$1$[esp+128]
	lea	eax, DWORD PTR _sw_param$[esp+160]
	push	eax
	call	_cswift_bn_32copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@cswift_mod
; Line 662
	push	662					; 00000296H
; Line 663
	jmp	SHORT $LN48@cswift_mod
$LN10@cswift_mod:
; Line 665
	push	DWORD PTR _iqmp$GSCopy$1$[esp+128]
	lea	eax, DWORD PTR _sw_param$[esp+168]
	push	eax
	call	_cswift_bn_32copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@cswift_mod
; Line 666
	push	666					; 0000029aH
; Line 667
	jmp	SHORT $LN48@cswift_mod
$LN11@cswift_mod:
; Line 669
	mov	eax, DWORD PTR _a$GSCopy$1$[esp+128]
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [edi+8]
	jg	SHORT $LN27@cswift_mod
	mov	eax, edi
	jmp	SHORT $LN28@cswift_mod
$LN27@cswift_mod:
	push	eax
	push	edi
	call	_bn_expand2
	add	esp, 8
$LN28@cswift_mod:
	test	eax, eax
	je	$LN13@cswift_mod
	mov	eax, DWORD PTR _p$GSCopy$1$[esp+128]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR [ebx+4]
	cmp	eax, DWORD PTR [esi+8]
	jg	SHORT $LN29@cswift_mod
	mov	eax, esi
	jmp	SHORT $LN30@cswift_mod
$LN29@cswift_mod:
	push	eax
	push	esi
	call	_bn_expand2
	add	esp, 8
$LN30@cswift_mod:
	test	eax, eax
	je	$LN13@cswift_mod
; Line 675
	lea	eax, DWORD PTR _sw_param$[esp+128]
	push	eax
	push	DWORD PTR _hac$[esp+132]
	call	DWORD PTR _p_CSwift_AttachKeyParam
	mov	ebx, eax
; Line 676
	cmp	ebx, -10006				; ffffd8eaH
	je	$LN15@cswift_mod
	test	ebx, ebx
	je	SHORT $LN14@cswift_mod
; Line 685
	push	685					; 000002adH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	106					; 0000006aH
	call	_ERR_CSWIFT_error
; Line 686
	push	ebx
	lea	eax, DWORD PTR _tmpbuf$2[esp+148]
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	push	eax
	call	_sprintf
; Line 687
	lea	eax, DWORD PTR _tmpbuf$2[esp+156]
	push	eax
	push	OFFSET ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 689
	jmp	$err$51
$LN14@cswift_mod:
; Line 692
	push	DWORD PTR [edi]
	push	DWORD PTR _a$GSCopy$1$[esp+132]
	call	_BN_bn2bin
; Line 694
	push	DWORD PTR _p$GSCopy$1$[esp+136]
	mov	DWORD PTR _arg$[esp+140], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _arg$[esp+144], eax
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	add	eax, eax
; Line 695
	push	eax
	mov	DWORD PTR _res$[esp+144], eax
	push	0
	push	DWORD PTR [esi]
	call	_memset
; Line 696
	mov	eax, DWORD PTR [esi]
	add	esp, 24					; 00000018H
	mov	DWORD PTR _res$[esp+132], eax
; Line 699
	lea	eax, DWORD PTR _res$[esp+128]
	push	1
	push	eax
	push	1
	lea	eax, DWORD PTR _arg$[esp+140]
	push	eax
	push	1
	push	DWORD PTR _hac$[esp+148]
	call	DWORD PTR _p_CSwift_SimpleRequest
	mov	ebx, eax
	test	ebx, ebx
	je	SHORT $LN17@cswift_mod
; Line 701
	push	701					; 000002bdH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	106					; 0000006aH
	call	_ERR_CSWIFT_error
; Line 702
	push	ebx
	lea	eax, DWORD PTR _tmpbuf$1[esp+148]
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	push	eax
	call	_sprintf
; Line 703
	lea	eax, DWORD PTR _tmpbuf$1[esp+156]
	push	eax
	push	OFFSET ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 704
	jmp	SHORT $err$51
$LN17@cswift_mod:
; Line 707
	push	DWORD PTR _r$GSCopy$1$[esp+128]
	push	DWORD PTR _res$[esp+132]
	push	DWORD PTR [esi]
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
; Line 708
	mov	ebp, 1
	jmp	SHORT $err$51
$LN15@cswift_mod:
; Line 680
	push	680					; 000002a8H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	101					; 00000065H
	push	106					; 0000006aH
	call	_ERR_CSWIFT_error
	add	esp, 16					; 00000010H
	jmp	SHORT $err$51
$LN13@cswift_mod:
; Line 670
	push	670					; 0000029eH
; Line 671
	jmp	$LN48@cswift_mod
$LN6@cswift_mod:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN38@cswift_mod
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN38@cswift_mod:
; Line 149
	push	633					; 00000279H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	102					; 00000066H
$LN47@cswift_mod:
	push	106					; 0000006aH
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$51:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 710
	mov	eax, DWORD PTR _sw_param$[esp+136]
	test	eax, eax
	je	SHORT $LN18@cswift_mod
; Line 711
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN18@cswift_mod:
; Line 712
	mov	eax, DWORD PTR _sw_param$[esp+144]
	test	eax, eax
	je	SHORT $LN19@cswift_mod
; Line 713
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN19@cswift_mod:
; Line 714
	mov	eax, DWORD PTR _sw_param$[esp+152]
	test	eax, eax
	je	SHORT $LN20@cswift_mod
; Line 715
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN20@cswift_mod:
; Line 716
	mov	eax, DWORD PTR _sw_param$[esp+160]
	test	eax, eax
	je	SHORT $LN21@cswift_mod
; Line 717
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN21@cswift_mod:
; Line 718
	mov	eax, DWORD PTR _sw_param$[esp+168]
	test	eax, eax
	je	SHORT $LN22@cswift_mod
; Line 719
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN22@cswift_mod:
; Line 720
	test	esi, esi
	je	SHORT $LN23@cswift_mod
; Line 721
	push	esi
	call	_BN_free
	add	esp, 4
$LN23@cswift_mod:
; Line 722
	test	edi, edi
	je	SHORT $LN24@cswift_mod
; Line 723
	push	edi
	call	_BN_free
	add	esp, 4
$LN24@cswift_mod:
; Line 724
	cmp	DWORD PTR _acquired$1$[esp+128], 0
	je	SHORT $LN46@cswift_mod
; Line 378
	push	DWORD PTR _hac$[esp+128]
	call	DWORD PTR _p_CSwift_ReleaseAccContext
$LN46@cswift_mod:
; Line 727
	mov	ecx, DWORD PTR __$ArrayPad$[esp+128]
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 112				; 00000070H
	ret	0
_cswift_mod_exp_crt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_mod_exp
_TEXT	SEGMENT
_m$GSCopy$1$ = -104					; size = 4
_hac$ = -100						; size = 4
_p$GSCopy$1$ = -96					; size = 4
_argument$1$ = -92					; size = 4
_a$GSCopy$1$ = -88					; size = 4
_r$GSCopy$1$ = -84					; size = 4
_res$ = -80						; size = 8
_arg$ = -72						; size = 8
_sw_param$ = -64					; size = 44
_tmpbuf$1 = -20						; size = 13
_tmpbuf$2 = -20						; size = 13
__$ArrayPad$ = -4					; size = 4
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_p$ = 16						; size = 4
_m$ = 20						; size = 4
_ctx$ = 24						; size = 4
_cswift_mod_exp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 489
	mov	eax, 104				; 00000068H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+104], eax
	mov	eax, DWORD PTR _r$[esp+100]
	mov	DWORD PTR _r$GSCopy$1$[esp+104], eax
	mov	eax, DWORD PTR _a$[esp+100]
	mov	DWORD PTR _a$GSCopy$1$[esp+104], eax
	mov	eax, DWORD PTR _p$[esp+100]
	push	ebx
	mov	DWORD PTR _p$GSCopy$1$[esp+108], eax
; Line 507
	xor	ebx, ebx
	mov	eax, DWORD PTR _m$[esp+104]
	push	edi
	mov	edi, DWORD PTR _ctx$[esp+108]
	mov	DWORD PTR _m$GSCopy$1$[esp+112], eax
; Line 369
	lea	eax, DWORD PTR _hac$[esp+112]
	push	eax
	call	DWORD PTR _p_CSwift_AcquireAccContext
; Line 370
	test	eax, eax
	je	SHORT $LN4@cswift_mod
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN26@cswift_mod
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN26@cswift_mod:
; Line 149
	push	511					; 000001ffH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	108					; 0000006cH
	push	105					; 00000069H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 512
	jmp	$LN34@cswift_mod
$LN4@cswift_mod:
	push	ebp
	push	esi
; Line 516
	push	edi
	call	_BN_CTX_start
; Line 517
	push	edi
	call	_BN_CTX_get
; Line 518
	push	edi
	mov	ebx, eax
	call	_BN_CTX_get
; Line 519
	push	edi
	mov	ebp, eax
	call	_BN_CTX_get
; Line 520
	push	edi
	mov	DWORD PTR _argument$1$[esp+140], eax
	call	_BN_CTX_get
	mov	esi, eax
	add	esp, 20					; 00000014H
; Line 521
	test	esi, esi
	jne	SHORT $LN5@cswift_mod
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN29@cswift_mod
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN29@cswift_mod:
; Line 149
	push	522					; 0000020aH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	102					; 00000066H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 523
	jmp	$LN38@cswift_mod
$LN5@cswift_mod:
; Line 526
	mov	eax, DWORD PTR _m$GSCopy$1$[esp+120]
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [ebx+8]
	jg	SHORT $LN14@cswift_mod
	mov	eax, ebx
	jmp	SHORT $LN15@cswift_mod
$LN14@cswift_mod:
	push	eax
	push	ebx
	call	_bn_expand2
	add	esp, 8
$LN15@cswift_mod:
	test	eax, eax
	je	$LN7@cswift_mod
	mov	eax, DWORD PTR _p$GSCopy$1$[esp+120]
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [ebp+8]
	jg	SHORT $LN16@cswift_mod
	mov	eax, ebp
	jmp	SHORT $LN17@cswift_mod
$LN16@cswift_mod:
	push	eax
	push	ebp
	call	_bn_expand2
	add	esp, 8
$LN17@cswift_mod:
	test	eax, eax
	je	$LN7@cswift_mod
	mov	ecx, DWORD PTR _a$GSCopy$1$[esp+120]
	mov	eax, DWORD PTR _argument$1$[esp+120]
	mov	ecx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $LN19@cswift_mod
	push	ecx
	push	eax
	call	_bn_expand2
	add	esp, 8
$LN19@cswift_mod:
	test	eax, eax
	je	$LN7@cswift_mod
	mov	ecx, DWORD PTR _m$GSCopy$1$[esp+120]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [esi+8]
	jg	SHORT $LN20@cswift_mod
	mov	eax, esi
	jmp	SHORT $LN21@cswift_mod
$LN20@cswift_mod:
	push	eax
	push	esi
	call	_bn_expand2
	mov	ecx, DWORD PTR _m$GSCopy$1$[esp+128]
	add	esp, 8
$LN21@cswift_mod:
	test	eax, eax
	je	$LN7@cswift_mod
; Line 530
	mov	DWORD PTR _sw_param$[esp+120], 2
; Line 531
	push	DWORD PTR [ebx]
	push	ecx
	call	_BN_bn2bin
	mov	DWORD PTR _sw_param$[esp+132], eax
; Line 533
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _sw_param$[esp+136], eax
; Line 534
	push	DWORD PTR [ebp]
	push	DWORD PTR _p$GSCopy$1$[esp+132]
	call	_BN_bn2bin
	add	esp, 16					; 00000010H
	mov	DWORD PTR _sw_param$[esp+132], eax
; Line 536
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _sw_param$[esp+136], eax
; Line 538
	lea	eax, DWORD PTR _sw_param$[esp+120]
	push	eax
	push	DWORD PTR _hac$[esp+124]
	call	DWORD PTR _p_CSwift_AttachKeyParam
	mov	ebx, eax
; Line 539
	cmp	ebx, -10006				; ffffd8eaH
	je	$LN9@cswift_mod
	test	ebx, ebx
	je	SHORT $LN8@cswift_mod
; Line 548
	push	548					; 00000224H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	105					; 00000069H
	call	_ERR_CSWIFT_error
; Line 549
	push	ebx
	lea	eax, DWORD PTR _tmpbuf$2[esp+140]
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	push	eax
	call	_sprintf
; Line 550
	lea	eax, DWORD PTR _tmpbuf$2[esp+148]
	push	eax
	push	OFFSET ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 552
	jmp	$LN39@cswift_mod
$LN8@cswift_mod:
; Line 555
	mov	ebx, DWORD PTR _argument$1$[esp+120]
	push	DWORD PTR [ebx]
	push	DWORD PTR _a$GSCopy$1$[esp+124]
	call	_BN_bn2bin
	mov	DWORD PTR _arg$[esp+128], eax
; Line 556
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _arg$[esp+132], eax
; Line 557
	mov	eax, DWORD PTR _m$GSCopy$1$[esp+128]
	push	eax
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
; Line 558
	push	eax
	mov	DWORD PTR _res$[esp+136], eax
	push	0
	push	DWORD PTR [esi]
	call	_memset
; Line 559
	mov	eax, DWORD PTR [esi]
	add	esp, 24					; 00000018H
	mov	DWORD PTR _res$[esp+124], eax
; Line 562
	lea	eax, DWORD PTR _res$[esp+120]
	push	1
	push	eax
	push	1
	lea	eax, DWORD PTR _arg$[esp+132]
	push	eax
	push	2
	push	DWORD PTR _hac$[esp+140]
	call	DWORD PTR _p_CSwift_SimpleRequest
	mov	ebx, eax
	test	ebx, ebx
	je	SHORT $LN11@cswift_mod
; Line 564
	push	564					; 00000234H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	107					; 0000006bH
	push	105					; 00000069H
	call	_ERR_CSWIFT_error
; Line 565
	push	ebx
	lea	eax, DWORD PTR _tmpbuf$1[esp+140]
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	push	eax
	call	_sprintf
; Line 566
	lea	eax, DWORD PTR _tmpbuf$1[esp+148]
	push	eax
	push	OFFSET ??_C@_0BN@CHEGAPOI@CryptoSwift?5error?5number?5is?5?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 567
	jmp	SHORT $LN39@cswift_mod
$LN11@cswift_mod:
; Line 570
	push	DWORD PTR _r$GSCopy$1$[esp+120]
	push	DWORD PTR _res$[esp+124]
	push	DWORD PTR [esi]
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
; Line 571
	mov	ebx, 1
	jmp	SHORT $LN37@cswift_mod
$LN9@cswift_mod:
; Line 543
	push	543					; 0000021fH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	101					; 00000065H
	push	105					; 00000069H
	call	_ERR_CSWIFT_error
	add	esp, 16					; 00000010H
; Line 544
	jmp	SHORT $LN39@cswift_mod
$LN7@cswift_mod:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN32@cswift_mod
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN32@cswift_mod:
; Line 149
	push	527					; 0000020fH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	103					; 00000067H
$LN38@cswift_mod:
	push	105					; 00000069H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN39@cswift_mod:
	xor	ebx, ebx
$LN37@cswift_mod:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 378
	push	DWORD PTR _hac$[esp+120]
	call	DWORD PTR _p_CSwift_ReleaseAccContext
	pop	esi
	pop	ebp
$LN34@cswift_mod:
; Line 575
	push	edi
	call	_BN_CTX_end
; Line 577
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	add	esp, 4
	mov	eax, ebx
	pop	edi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	ret	0
_cswift_mod_exp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_bn_32copy
_TEXT	SEGMENT
_out$ = 8						; size = 4
_in$ = 12						; size = 4
_cswift_bn_32copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 581
	push	esi
	push	edi
; Line 583
	push	DWORD PTR _in$[esp+4]
	call	_BN_num_bits
; Line 586
	mov	edi, DWORD PTR _out$[esp+8]
	add	eax, 7
	cdq
	add	esp, 4
	and	edx, 7
	xor	esi, esi
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR [edi], eax
	test	al, 31					; 0000001fH
	je	SHORT $LN3@cswift_bn_
$LL2@cswift_bn_:
; Line 587
	inc	eax
	inc	esi
	mov	DWORD PTR [edi], eax
	test	al, 31					; 0000001fH
	jne	SHORT $LL2@cswift_bn_
$LN3@cswift_bn_:
; Line 589
	push	589					; 0000024dH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	DWORD PTR [edi]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+4], eax
; Line 590
	test	eax, eax
	jne	SHORT $LN4@cswift_bn_
	pop	edi
	pop	esi
; Line 598
	ret	0
$LN4@cswift_bn_:
; Line 593
	add	eax, esi
	push	eax
	push	DWORD PTR _in$[esp+8]
	call	_BN_bn2bin
	add	esp, 8
; Line 594
	test	esi, esi
	je	SHORT $LN5@cswift_bn_
; Line 595
	push	esi
	push	0
	push	DWORD PTR [edi+4]
	call	_memset
	add	esp, 12					; 0000000cH
$LN5@cswift_bn_:
; Line 597
	pop	edi
	mov	eax, 1
	pop	esi
; Line 598
	ret	0
_cswift_bn_32copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_ctrl
_TEXT	SEGMENT
_e$ = 8							; size = 4
_cmd$ = 12						; size = 4
_i$ = 16						; size = 4
_p$ = 20						; size = 4
_f$ = 24						; size = 4
_cswift_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 467
	xor	eax, eax
	cmp	DWORD PTR _cswift_dso, eax
	setne	al
; Line 468
	cmp	DWORD PTR _cmd$[esp-4], 200		; 000000c8H
	je	SHORT $LN4@cswift_ctr
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN16@cswift_ctr
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN16@cswift_ctr:
; Line 149
	push	482					; 000001e2H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	104					; 00000068H
	push	100					; 00000064H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 483
	xor	eax, eax
; Line 484
	ret	0
$LN4@cswift_ctr:
; Line 470
	mov	ecx, DWORD PTR _p$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN5@cswift_ctr
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN10@cswift_ctr
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN10@cswift_ctr:
; Line 149
	push	471					; 000001d7H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	67					; 00000043H
	push	100					; 00000064H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 472
	xor	eax, eax
; Line 484
	ret	0
$LN5@cswift_ctr:
; Line 474
	test	eax, eax
	je	SHORT $LN6@cswift_ctr
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN13@cswift_ctr
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN13@cswift_ctr:
; Line 149
	push	475					; 000001dbH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	100					; 00000064H
	push	100					; 00000064H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 476
	xor	eax, eax
; Line 484
	ret	0
$LN6@cswift_ctr:
; Line 478
	push	ecx
	call	_set_CSWIFT_LIBNAME
	add	esp, 4
; Line 484
	ret	0
_cswift_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_finish
_TEXT	SEGMENT
_e$ = 8							; size = 4
_cswift_finish PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 341
	mov	eax, DWORD PTR _CSWIFT_LIBNAME
	test	eax, eax
	je	SHORT $LN6@cswift_fin
; Line 342
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN6@cswift_fin:
; Line 449
	mov	eax, DWORD PTR _cswift_dso
; Line 343
	mov	DWORD PTR _CSWIFT_LIBNAME, 0
; Line 449
	test	eax, eax
	jne	SHORT $LN2@cswift_fin
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN9@cswift_fin
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN9@cswift_fin:
; Line 149
	push	450					; 000001c2H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	106					; 0000006aH
	push	103					; 00000067H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 451
	xor	eax, eax
; Line 463
	ret	0
$LN2@cswift_fin:
; Line 453
	push	eax
	call	_DSO_free
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@cswift_fin
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN12@cswift_fin
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN12@cswift_fin:
; Line 149
	push	454					; 000001c6H
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	108					; 0000006cH
	push	103					; 00000067H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 455
	xor	eax, eax
; Line 463
	ret	0
$LN3@cswift_fin:
; Line 457
	mov	DWORD PTR _cswift_dso, 0
; Line 462
	mov	eax, 1
	mov	DWORD PTR _p_CSwift_AcquireAccContext, 0
	mov	DWORD PTR _p_CSwift_AttachKeyParam, 0
	mov	DWORD PTR _p_CSwift_SimpleRequest, 0
	mov	DWORD PTR _p_CSwift_ReleaseAccContext, 0
; Line 463
	ret	0
_cswift_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_init
_TEXT	SEGMENT
_hac$ = -4						; size = 4
_e$ = 8							; size = 4
_cswift_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 391
	mov	eax, 4
	call	__chkstk
; Line 398
	cmp	DWORD PTR _cswift_dso, 0
	push	ebx
	push	esi
	push	edi
	je	SHORT $LN2@cswift_ini
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN10@cswift_ini
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN10@cswift_ini:
; Line 149
	push	399					; 0000018fH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	100					; 00000064H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 400
	jmp	$LN27@cswift_ini
$LN2@cswift_ini:
; Line 334
	mov	eax, DWORD PTR _CSWIFT_LIBNAME
	mov	ecx, OFFSET ??_C@_05MJFOKOAF@swift?$AA@
	test	eax, eax
; Line 403
	push	0
; Line 334
	cmovne	ecx, eax
; Line 403
	push	0
	push	ecx
	push	0
	call	_DSO_load
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cswift_dso, eax
; Line 404
	test	eax, eax
	jne	SHORT $LN3@cswift_ini
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN16@cswift_ini
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN16@cswift_ini:
; Line 149
	push	405					; 00000195H
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 406
	jmp	$LN28@cswift_ini
$LN3@cswift_ini:
; Line 413
	push	DWORD PTR _CSWIFT_F1
	push	eax
	call	_DSO_bind_func
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	$LN5@cswift_ini
	push	DWORD PTR _CSWIFT_F2
	push	DWORD PTR _cswift_dso
	call	_DSO_bind_func
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	$LN5@cswift_ini
	push	DWORD PTR _CSWIFT_F3
	push	DWORD PTR _cswift_dso
	call	_DSO_bind_func
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	SHORT $LN5@cswift_ini
	push	DWORD PTR _CSWIFT_F4
	push	DWORD PTR _cswift_dso
	call	_DSO_bind_func
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@cswift_ini
; Line 423
	mov	DWORD PTR _p_CSwift_ReleaseAccContext, eax
; Line 369
	lea	eax, DWORD PTR _hac$[esp+16]
	push	eax
; Line 420
	mov	DWORD PTR _p_CSwift_AcquireAccContext, esi
; Line 421
	mov	DWORD PTR _p_CSwift_AttachKeyParam, edi
; Line 422
	mov	DWORD PTR _p_CSwift_SimpleRequest, ebx
; Line 369
	call	esi
; Line 370
	test	eax, eax
	je	SHORT $LN6@cswift_ini
; Line 428
	push	428					; 000001acH
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	108					; 0000006cH
	push	104					; 00000068H
	call	_ERR_CSWIFT_error
	add	esp, 16					; 00000010H
; Line 429
	jmp	SHORT $err$30
$LN6@cswift_ini:
; Line 378
	push	DWORD PTR _hac$[esp+16]
	call	DWORD PTR _p_CSwift_ReleaseAccContext
	pop	edi
	pop	esi
; Line 433
	mov	eax, 1
	pop	ebx
; Line 444
	pop	ecx
	ret	0
$LN5@cswift_ini:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN19@cswift_ini
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN19@cswift_ini:
; Line 149
	push	416					; 000001a0H
$LN28@cswift_ini:
	push	OFFSET ??_C@_0BF@NPJAGBKA@?4?2engines?2e_cswift?4c?$AA@
	push	106					; 0000006aH
$LN27@cswift_ini:
	push	104					; 00000068H
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$30:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 435
	mov	eax, DWORD PTR _cswift_dso
	test	eax, eax
	je	SHORT $LN7@cswift_ini
; Line 436
	push	eax
	call	_DSO_free
	add	esp, 4
; Line 437
	mov	DWORD PTR _cswift_dso, 0
$LN7@cswift_ini:
; Line 439
	pop	edi
	pop	esi
	mov	DWORD PTR _p_CSwift_AcquireAccContext, 0
; Line 443
	xor	eax, eax
	mov	DWORD PTR _p_CSwift_AttachKeyParam, 0
	mov	DWORD PTR _p_CSwift_SimpleRequest, 0
	mov	DWORD PTR _p_CSwift_ReleaseAccContext, 0
	pop	ebx
; Line 444
	pop	ecx
	ret	0
_cswift_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cswift_destroy
_TEXT	SEGMENT
_e$ = 8							; size = 4
_cswift_destroy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 341
	mov	eax, DWORD PTR _CSWIFT_LIBNAME
	test	eax, eax
	je	SHORT $LN4@cswift_des
; Line 342
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@cswift_des:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 132
	cmp	DWORD PTR _CSWIFT_error_init, 0
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 343
	mov	DWORD PTR _CSWIFT_LIBNAME, 0
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 132
	jne	SHORT $LN9@cswift_des
; Line 134
	push	OFFSET _CSWIFT_str_functs
	push	DWORD PTR _CSWIFT_lib_error_code
	call	_ERR_unload_strings
; Line 135
	push	OFFSET _CSWIFT_str_reasons
	push	DWORD PTR _CSWIFT_lib_error_code
	call	_ERR_unload_strings
; Line 139
	push	OFFSET _CSWIFT_lib_name
	push	0
	call	_ERR_unload_strings
	add	esp, 24					; 00000018H
; Line 141
	mov	DWORD PTR _CSWIFT_error_init, 1
$LN9@cswift_des:
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift.c
; Line 386
	mov	eax, 1
; Line 387
	ret	0
_cswift_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ERR_CSWIFT_error
_TEXT	SEGMENT
_function$ = 8						; size = 4
_reason$ = 12						; size = 4
_file$ = 16						; size = 4
_line$ = 20						; size = 4
_ERR_CSWIFT_error PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 147
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN2@ERR_CSWIFT
; Line 148
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN2@ERR_CSWIFT:
; Line 149
	push	DWORD PTR _line$[esp-4]
	push	DWORD PTR _file$[esp]
	push	DWORD PTR _reason$[esp+4]
	push	DWORD PTR _function$[esp+8]
	push	eax
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 150
	ret	0
_ERR_CSWIFT_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ERR_unload_CSWIFT_strings
_TEXT	SEGMENT
_ERR_unload_CSWIFT_strings PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 132
	cmp	DWORD PTR _CSWIFT_error_init, 0
	jne	SHORT $LN2@ERR_unload
; Line 134
	push	OFFSET _CSWIFT_str_functs
	push	DWORD PTR _CSWIFT_lib_error_code
	call	_ERR_unload_strings
; Line 135
	push	OFFSET _CSWIFT_str_reasons
	push	DWORD PTR _CSWIFT_lib_error_code
	call	_ERR_unload_strings
; Line 139
	push	OFFSET _CSWIFT_lib_name
	push	0
	call	_ERR_unload_strings
	add	esp, 24					; 00000018H
; Line 141
	mov	DWORD PTR _CSWIFT_error_init, 1
$LN2@ERR_unload:
; Line 143
	ret	0
_ERR_unload_CSWIFT_strings ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ERR_load_CSWIFT_strings
_TEXT	SEGMENT
_ERR_load_CSWIFT_strings PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_cswift_err.c
; Line 113
	mov	eax, DWORD PTR _CSWIFT_lib_error_code
	test	eax, eax
	jne	SHORT $LN2@ERR_load_C
; Line 114
	call	_ERR_get_next_error_library
	mov	DWORD PTR _CSWIFT_lib_error_code, eax
$LN2@ERR_load_C:
; Line 116
	cmp	DWORD PTR _CSWIFT_error_init, 0
	je	SHORT $LN3@ERR_load_C
; Line 119
	push	OFFSET _CSWIFT_str_functs
	push	eax
	mov	DWORD PTR _CSWIFT_error_init, 0
	call	_ERR_load_strings
; Line 120
	push	OFFSET _CSWIFT_str_reasons
	push	DWORD PTR _CSWIFT_lib_error_code
	call	_ERR_load_strings
; Line 124
	movzx	eax, BYTE PTR _CSWIFT_lib_error_code
	shl	eax, 24					; 00000018H
; Line 125
	push	OFFSET _CSWIFT_lib_name
	push	0
	mov	DWORD PTR _CSWIFT_lib_name, eax
	call	_ERR_load_strings
	add	esp, 24					; 00000018H
$LN3@ERR_load_C:
; Line 128
	ret	0
_ERR_load_CSWIFT_strings ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1788
	ret	0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1460
	ret	0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1391
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

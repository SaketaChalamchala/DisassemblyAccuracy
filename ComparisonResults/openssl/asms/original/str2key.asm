; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\des\str2key.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DES_string_to_key
PUBLIC	_DES_string_to_2keys
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_DES_cbc_cksum:PROC
EXTRN	_DES_set_odd_parity:PROC
EXTRN	_DES_set_key_unchecked:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _DES_string_to_2keys
_TEXT	SEGMENT
_str$GSCopy$1$ = -136					; size = 4
_ks$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
_str$ = 8						; size = 4
_key1$ = 12						; size = 4
_key2$ = 16						; size = 4
_DES_string_to_2keys PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\str2key.c
; Line 101
	mov	eax, 136				; 00000088H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+136], eax
	push	ebx
	mov	ebx, DWORD PTR _str$[esp+136]
	xorps	xmm0, xmm0
	push	ebp
	mov	ebp, DWORD PTR _key2$[esp+140]
	push	esi
	push	edi
	mov	edi, DWORD PTR _key1$[esp+148]
; Line 108
	mov	esi, ebx
	mov	DWORD PTR _str$GSCopy$1$[esp+152], ebx
	movq	QWORD PTR [edi], xmm0
	lea	ecx, DWORD PTR [esi+1]
	movq	QWORD PTR [ebp], xmm0
$LL17@DES_string:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL17@DES_string
	sub	esi, ecx
; Line 123
	xor	eax, eax
	test	esi, esi
	jle	SHORT $LN3@DES_string
$LL4@DES_string:
; Line 124
	mov	bl, BYTE PTR [ebx+eax]
; Line 125
	mov	ecx, eax
	and	cl, 31					; 0000001fH
	cmp	cl, 16					; 00000010H
	jge	SHORT $LN5@DES_string
; Line 126
	mov	ecx, eax
; Line 127
	add	bl, bl
	and	cl, 15					; 0000000fH
	cmp	cl, 8
	mov	ecx, eax
	jge	SHORT $LN7@DES_string
	and	ecx, 7
	xor	BYTE PTR [ecx+edi], bl
	jmp	SHORT $LN2@DES_string
$LN7@DES_string:
; Line 129
	and	ecx, 7
	xor	BYTE PTR [ecx+ebp], bl
; Line 130
	jmp	SHORT $LN2@DES_string
$LN5@DES_string:
; Line 131
	rol	bl, 4
; Line 132
	mov	dl, bl
	mov	cl, bl
	shl	cl, 2
	shr	dl, 2
	xor	dl, cl
	shl	bl, 2
	and	dl, 51					; 00000033H
	xor	dl, bl
; Line 133
	mov	cl, dl
	mov	bl, dl
	add	cl, cl
	shr	bl, 1
	xor	bl, cl
	add	dl, dl
; Line 134
	mov	ecx, eax
	and	bl, 85					; 00000055H
	and	cl, 15					; 0000000fH
	xor	bl, dl
	cmp	cl, 8
; Line 135
	mov	edx, edi
	mov	ecx, eax
	jl	SHORT $LN18@DES_string
; Line 137
	mov	edx, ebp
$LN18@DES_string:
	and	ecx, 7
	sub	edx, ecx
	xor	BYTE PTR [edx+7], bl
$LN2@DES_string:
; Line 123
	mov	ebx, DWORD PTR _str$GSCopy$1$[esp+152]
	inc	eax
	cmp	eax, esi
	jl	SHORT $LL4@DES_string
$LN3@DES_string:
; Line 140
	cmp	esi, 8
	jg	SHORT $LN11@DES_string
; Line 141
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [ebp], eax
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [ebp+4], eax
$LN11@DES_string:
; Line 143
	push	edi
	call	_DES_set_odd_parity
; Line 144
	push	ebp
	call	_DES_set_odd_parity
; Line 150
	lea	eax, DWORD PTR _ks$[esp+160]
	push	eax
	push	edi
	call	_DES_set_key_unchecked
; Line 152
	push	edi
	lea	eax, DWORD PTR _ks$[esp+172]
	push	eax
	push	esi
	push	edi
	push	ebx
	call	_DES_cbc_cksum
; Line 158
	lea	eax, DWORD PTR _ks$[esp+188]
	push	eax
	push	ebp
	call	_DES_set_key_unchecked
; Line 160
	push	ebp
	lea	eax, DWORD PTR _ks$[esp+200]
	push	eax
	push	esi
	push	ebp
	push	ebx
	call	_DES_cbc_cksum
	add	esp, 64					; 00000040H
; Line 161
	lea	eax, DWORD PTR _ks$[esp+152]
	push	128					; 00000080H
	push	eax
	call	_OPENSSL_cleanse
; Line 162
	push	edi
	call	_DES_set_odd_parity
; Line 163
	push	ebp
	call	_DES_set_odd_parity
; Line 164
	mov	ecx, DWORD PTR __$ArrayPad$[esp+168]
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 136				; 00000088H
	ret	0
_DES_string_to_2keys ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DES_string_to_key
_TEXT	SEGMENT
_str$GSCopy$1$ = -136					; size = 4
_ks$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
_str$ = 8						; size = 4
_key$ = 12						; size = 4
_DES_string_to_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\str2key.c
; Line 63
	mov	eax, 136				; 00000088H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+136], eax
	push	ebx
	mov	ebx, DWORD PTR _str$[esp+136]
	xorps	xmm0, xmm0
	push	ebp
	mov	ebp, DWORD PTR _key$[esp+140]
	push	edi
; Line 69
	mov	edi, ebx
	mov	DWORD PTR _str$GSCopy$1$[esp+148], ebx
	movq	QWORD PTR [ebp], xmm0
	lea	ecx, DWORD PTR [edi+1]
	npad	6
$LL12@DES_string:
	mov	al, BYTE PTR [edi]
	inc	edi
	test	al, al
	jne	SHORT $LL12@DES_string
	sub	edi, ecx
; Line 74
	xor	eax, eax
	test	edi, edi
	jle	SHORT $LN3@DES_string
	push	esi
$LL4@DES_string:
; Line 75
	mov	dl, BYTE PTR [ebx+eax]
; Line 76
	mov	ecx, eax
	and	cl, 15					; 0000000fH
	cmp	cl, 8
	jge	SHORT $LN5@DES_string
; Line 77
	mov	ecx, eax
	add	dl, dl
	and	ecx, 7
	xor	BYTE PTR [ecx+ebp], dl
	jmp	SHORT $LN2@DES_string
$LN5@DES_string:
; Line 80
	rol	dl, 4
; Line 83
	mov	esi, ebp
	mov	bl, dl
	mov	cl, dl
	shr	bl, 2
	shl	cl, 2
	xor	bl, cl
	shl	dl, 2
	and	bl, 51					; 00000033H
	mov	ecx, eax
	xor	bl, dl
	and	ecx, 7
	sub	esi, ecx
	mov	dl, bl
	mov	cl, bl
	shr	dl, 1
	add	cl, cl
	add	bl, bl
	xor	dl, cl
	and	dl, 85					; 00000055H
	xor	dl, bl
	mov	ebx, DWORD PTR _str$GSCopy$1$[esp+152]
	xor	BYTE PTR [esi+7], dl
$LN2@DES_string:
; Line 74
	inc	eax
	cmp	eax, edi
	jl	SHORT $LL4@DES_string
	pop	esi
$LN3@DES_string:
; Line 87
	push	ebp
	call	_DES_set_odd_parity
; Line 93
	lea	eax, DWORD PTR _ks$[esp+152]
	push	eax
	push	ebp
	call	_DES_set_key_unchecked
; Line 95
	push	ebp
	lea	eax, DWORD PTR _ks$[esp+164]
	push	eax
	push	edi
	push	ebp
	push	ebx
	call	_DES_cbc_cksum
; Line 96
	lea	eax, DWORD PTR _ks$[esp+180]
	push	128					; 00000080H
	push	eax
	call	_OPENSSL_cleanse
; Line 97
	push	ebp
	call	_DES_set_odd_parity
; Line 98
	mov	ecx, DWORD PTR __$ArrayPad$[esp+192]
	add	esp, 44					; 0000002cH
	pop	edi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 136				; 00000088H
	ret	0
_DES_string_to_key ENDP
_TEXT	ENDS
END

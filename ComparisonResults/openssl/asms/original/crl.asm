; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\crl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BB@MPEAOOGK@usage?3?5crl?5args?6?$AA@	; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0DM@PHNHJNIF@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@ ; `string'
PUBLIC	??_C@_0DA@KKNGHCLN@?5?9outform?5arg?5?5?5?5?9?5output?5format@ ; `string'
PUBLIC	??_C@_0DE@CMCDPINC@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5out?5a?5t@ ; `string'
PUBLIC	??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@ ; `string'
PUBLIC	??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@ ; `string'
PUBLIC	??_C@_0CF@NOAFFEHE@?5?9hash?5?5?5?5?5?5?5?5?5?5?5?9?5print?5hash?5va@ ; `string'
PUBLIC	??_C@_0DF@EOLPCIIJ@?5?9hash_old?5?5?5?5?5?5?5?9?5print?5old?9sty@ ; `string'
PUBLIC	??_C@_0CO@KEFHBAIF@?5?9fingerprint?5?5?5?5?9?5print?5the?5crl@ ; `string'
PUBLIC	??_C@_0CE@MDFJAKHB@?5?9issuer?5?5?5?5?5?5?5?5?5?9?5print?5issuer?5@ ; `string'
PUBLIC	??_C@_0CF@BOOFDJPJ@?5?9lastupdate?5?5?5?5?5?9?5lastUpdate?5fi@ ; `string'
PUBLIC	??_C@_0CF@NDFEADMN@?5?9nextupdate?5?5?5?5?5?9?5nextUpdate?5fi@ ; `string'
PUBLIC	??_C@_0CF@MBNNLHDM@?5?9crlnumber?5?5?5?5?5?5?9?5print?5CRL?5num@ ; `string'
PUBLIC	??_C@_0CC@CIPJOIHG@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5CRL?5output@ ; `string'
PUBLIC	??_C@_0EB@GJOKHONG@?5?9CAfile?5?5name?5?5?5?9?5verify?5CRL?5us@ ; `string'
PUBLIC	??_C@_0DL@PIKJLCCI@?5?9CApath?5?5dir?5?5?5?5?9?5verify?5CRL?5us@ ; `string'
PUBLIC	??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@ ; `string'
_BSS	SEGMENT
_bio_out DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@
CONST	SEGMENT
??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@ DB ' -name'
	DB	'opt arg    - various certificate name options', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@PIKJLCCI@?5?9CApath?5?5dir?5?5?5?5?9?5verify?5CRL?5us@
CONST	SEGMENT
??_C@_0DL@PIKJLCCI@?5?9CApath?5?5dir?5?5?5?5?9?5verify?5CRL?5us@ DB ' -CA'
	DB	'path  dir    - verify CRL using certificates in "dir"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@GJOKHONG@?5?9CAfile?5?5name?5?5?5?9?5verify?5CRL?5us@
CONST	SEGMENT
??_C@_0EB@GJOKHONG@?5?9CAfile?5?5name?5?5?5?9?5verify?5CRL?5us@ DB ' -CAf'
	DB	'ile  name   - verify CRL using certificates in file "name"', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CIPJOIHG@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5CRL?5output@
CONST	SEGMENT
??_C@_0CC@CIPJOIHG@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5CRL?5output@ DB ' '
	DB	'-noout          - no CRL output', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MBNNLHDM@?5?9crlnumber?5?5?5?5?5?5?9?5print?5CRL?5num@
CONST	SEGMENT
??_C@_0CF@MBNNLHDM@?5?9crlnumber?5?5?5?5?5?5?9?5print?5CRL?5num@ DB ' -cr'
	DB	'lnumber      - print CRL number', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NDFEADMN@?5?9nextupdate?5?5?5?5?5?9?5nextUpdate?5fi@
CONST	SEGMENT
??_C@_0CF@NDFEADMN@?5?9nextupdate?5?5?5?5?5?9?5nextUpdate?5fi@ DB ' -next'
	DB	'update     - nextUpdate field', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BOOFDJPJ@?5?9lastupdate?5?5?5?5?5?9?5lastUpdate?5fi@
CONST	SEGMENT
??_C@_0CF@BOOFDJPJ@?5?9lastupdate?5?5?5?5?5?9?5lastUpdate?5fi@ DB ' -last'
	DB	'update     - lastUpdate field', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MDFJAKHB@?5?9issuer?5?5?5?5?5?5?5?5?5?9?5print?5issuer?5@
CONST	SEGMENT
??_C@_0CE@MDFJAKHB@?5?9issuer?5?5?5?5?5?5?5?5?5?9?5print?5issuer?5@ DB ' '
	DB	'-issuer         - print issuer DN', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@KEFHBAIF@?5?9fingerprint?5?5?5?5?9?5print?5the?5crl@
CONST	SEGMENT
??_C@_0CO@KEFHBAIF@?5?9fingerprint?5?5?5?5?9?5print?5the?5crl@ DB ' -fing'
	DB	'erprint    - print the crl fingerprint', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EOLPCIIJ@?5?9hash_old?5?5?5?5?5?5?5?9?5print?5old?9sty@
CONST	SEGMENT
??_C@_0DF@EOLPCIIJ@?5?9hash_old?5?5?5?5?5?5?5?9?5print?5old?9sty@ DB ' -h'
	DB	'ash_old       - print old-style (MD5) hash value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NOAFFEHE@?5?9hash?5?5?5?5?5?5?5?5?5?5?5?9?5print?5hash?5va@
CONST	SEGMENT
??_C@_0CF@NOAFFEHE@?5?9hash?5?5?5?5?5?5?5?5?5?5?5?9?5print?5hash?5va@ DB ' '
	DB	'-hash           - print hash value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@
CONST	SEGMENT
??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@ DB ' '
	DB	'-out arg        - output file - default stdout', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@
CONST	SEGMENT
??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@ DB ' '
	DB	'-in arg         - input file - default stdin', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CMCDPINC@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5out?5a?5t@
CONST	SEGMENT
??_C@_0DE@CMCDPINC@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5out?5a?5t@ DB ' '
	DB	'-text           - print out a text format version', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@KKNGHCLN@?5?9outform?5arg?5?5?5?5?9?5output?5format@
CONST	SEGMENT
??_C@_0DA@KKNGHCLN@?5?9outform?5arg?5?5?5?5?9?5output?5format@ DB ' -outf'
	DB	'orm arg    - output format - default PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@PHNHJNIF@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@
CONST	SEGMENT
??_C@_0DM@PHNHJNIF@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@ DB ' -in'
	DB	'form arg     - input format - default PEM (DER or PEM)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MPEAOOGK@usage?3?5crl?5args?6?$AA@
CONST	SEGMENT
??_C@_0BB@MPEAOOGK@usage?3?5crl?5args?6?$AA@ DB 'usage: crl args', 0aH, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_crl_usage DD	FLAT:??_C@_0BB@MPEAOOGK@usage?3?5crl?5args?6?$AA@
	DD	FLAT:??_C@_01EEMJAFIK@?6?$AA@
	DD	FLAT:??_C@_0DM@PHNHJNIF@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@
	DD	FLAT:??_C@_0DA@KKNGHCLN@?5?9outform?5arg?5?5?5?5?9?5output?5format@
	DD	FLAT:??_C@_0DE@CMCDPINC@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5out?5a?5t@
	DD	FLAT:??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@
	DD	FLAT:??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@
	DD	FLAT:??_C@_0CF@NOAFFEHE@?5?9hash?5?5?5?5?5?5?5?5?5?5?5?9?5print?5hash?5va@
	DD	FLAT:??_C@_0DF@EOLPCIIJ@?5?9hash_old?5?5?5?5?5?5?5?9?5print?5old?9sty@
	DD	FLAT:??_C@_0CO@KEFHBAIF@?5?9fingerprint?5?5?5?5?9?5print?5the?5crl@
	DD	FLAT:??_C@_0CE@MDFJAKHB@?5?9issuer?5?5?5?5?5?5?5?5?5?9?5print?5issuer?5@
	DD	FLAT:??_C@_0CF@BOOFDJPJ@?5?9lastupdate?5?5?5?5?5?9?5lastUpdate?5fi@
	DD	FLAT:??_C@_0CF@NDFEADMN@?5?9nextupdate?5?5?5?5?5?9?5nextUpdate?5fi@
	DD	FLAT:??_C@_0CF@MBNNLHDM@?5?9crlnumber?5?5?5?5?5?5?9?5print?5CRL?5num@
	DD	FLAT:??_C@_0CC@CIPJOIHG@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5CRL?5output@
	DD	FLAT:??_C@_0EB@GJOKHONG@?5?9CAfile?5?5name?5?5?5?9?5verify?5CRL?5us@
	DD	FLAT:??_C@_0DL@PIKJLCCI@?5?9CApath?5?5dir?5?5?5?5?9?5verify?5CRL?5us@
	DD	FLAT:??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@
	DD	00H
_DATA	ENDS
PUBLIC	_crl_main
PUBLIC	??_C@_07CGGPPMGB@?9inform?$AA@			; `string'
PUBLIC	??_C@_08LPHBEAIF@?9outform?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_09EBAPANED@?9gendelta?$AA@		; `string'
PUBLIC	??_C@_04FMEKFICB@?9key?$AA@			; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_07MNNNLALG@?9CApath?$AA@			; `string'
PUBLIC	??_C@_07EAFCHGPO@?9CAfile?$AA@			; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_05CEEENDPI@?9hash?$AA@			; `string'
PUBLIC	??_C@_09PNFBPIFJ@?9hash_old?$AA@		; `string'
PUBLIC	??_C@_08BLLHKMDD@?9nameopt?$AA@			; `string'
PUBLIC	??_C@_07NKLAPJEG@?9issuer?$AA@			; `string'
PUBLIC	??_C@_0M@JGEDAEIF@?9lastupdate?$AA@		; `string'
PUBLIC	??_C@_0M@EFJBIDOD@?9nextupdate?$AA@		; `string'
PUBLIC	??_C@_06JPEJAHHH@?9noout?$AA@			; `string'
PUBLIC	??_C@_0N@DLPLBIOP@?9fingerprint?$AA@		; `string'
PUBLIC	??_C@_0L@JJEPFIBG@?9crlnumber?$AA@		; `string'
PUBLIC	??_C@_07FPKNAFBC@?9badsig?$AA@			; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0BP@JMGLOJAO@Error?5initialising?5X509?5store?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@MLNJBOFF@Error?5getting?5CRL?5issuer?5certifi@ ; `string'
PUBLIC	??_C@_0CF@JCHOOGEG@Error?5getting?5CRL?5issuer?5public?5@ ; `string'
PUBLIC	??_C@_0BA@HHOHOMNK@verify?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0L@OEANIBEG@verify?5OK?6?$AA@		; `string'
PUBLIC	??_C@_0BJ@FNGPPCDD@Missing?5CRL?5signing?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@KJNDBHBG@CRL?5signing?5key?$AA@	; `string'
PUBLIC	??_C@_0BK@DNGLAPHD@Error?5creating?5delta?5CRL?6?$AA@ ; `string'
PUBLIC	??_C@_07FBILCNB@issuer?$DN?$AA@			; `string'
PUBLIC	??_C@_0L@PBBPHNHE@crlNumber?$DN?$AA@		; `string'
PUBLIC	??_C@_06KOPODAHL@?$DMNONE?$DO?$AA@		; `string'
PUBLIC	??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@		; `string'
PUBLIC	??_C@_0M@IOCJLFCF@lastUpdate?$DN?$AA@		; `string'
PUBLIC	??_C@_0M@CKCLKDMP@nextUpdate?$DN?$AA@		; `string'
PUBLIC	??_C@_04OKGDLNCL@NONE?$AA@			; `string'
PUBLIC	??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0BA@BJKFFDMN@?$CFs?5Fingerprint?$DN?$AA@	; `string'
PUBLIC	??_C@_06FOGCEBND@?$CF02X?$CFc?$AA@		; `string'
PUBLIC	??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; `string'
PUBLIC	??_C@_0BF@ECKMNJGO@unable?5to?5write?5CRL?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_i2a_ASN1_INTEGER:PROC
EXTRN	_ASN1_TIME_print:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_X509_OBJECT_free_contents:PROC
EXTRN	_X509_STORE_new:PROC
EXTRN	_X509_STORE_free:PROC
EXTRN	_X509_STORE_CTX_init:PROC
EXTRN	_X509_STORE_CTX_cleanup:PROC
EXTRN	_X509_STORE_add_lookup:PROC
EXTRN	_X509_LOOKUP_hash_dir:PROC
EXTRN	_X509_LOOKUP_file:PROC
EXTRN	_X509_STORE_get_by_subject:PROC
EXTRN	_X509_LOOKUP_ctrl:PROC
EXTRN	_X509_CRL_verify:PROC
EXTRN	_X509_CRL_digest:PROC
EXTRN	_i2d_X509_CRL_bio:PROC
EXTRN	_X509_CRL_free:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_X509_CRL_diff:PROC
EXTRN	_X509_NAME_hash:PROC
EXTRN	_X509_NAME_hash_old:PROC
EXTRN	_X509_CRL_print:PROC
EXTRN	_X509_CRL_get_ext_d2i:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_str2fmt:PROC
EXTRN	_print_name:PROC
EXTRN	_set_name_ex:PROC
EXTRN	_load_crl:PROC
EXTRN	_load_key:PROC
EXTRN	_load_config:PROC
EXTRN	_PEM_write_bio_X509_CRL:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BF@ECKMNJGO@unable?5to?5write?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0BF@ECKMNJGO@unable?5to?5write?5CRL?6?$AA@ DB 'unable to write CRL', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
CONST	SEGMENT
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ DB 'bad output '
	DB	'format specified for outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FOGCEBND@?$CF02X?$CFc?$AA@
CONST	SEGMENT
??_C@_06FOGCEBND@?$CF02X?$CFc?$AA@ DB '%02X%c', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BJKFFDMN@?$CFs?5Fingerprint?$DN?$AA@
CONST	SEGMENT
??_C@_0BA@BJKFFDMN@?$CFs?5Fingerprint?$DN?$AA@ DB '%s Fingerprint=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ DB 'out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKGDLNCL@NONE?$AA@
CONST	SEGMENT
??_C@_04OKGDLNCL@NONE?$AA@ DB 'NONE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CKCLKDMP@nextUpdate?$DN?$AA@
CONST	SEGMENT
??_C@_0M@CKCLKDMP@nextUpdate?$DN?$AA@ DB 'nextUpdate=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOCJLFCF@lastUpdate?$DN?$AA@
CONST	SEGMENT
??_C@_0M@IOCJLFCF@lastUpdate?$DN?$AA@ DB 'lastUpdate=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@
CONST	SEGMENT
??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@ DB '%08lx', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06KOPODAHL@?$DMNONE?$DO?$AA@
CONST	SEGMENT
??_C@_06KOPODAHL@?$DMNONE?$DO?$AA@ DB '<NONE>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PBBPHNHE@crlNumber?$DN?$AA@
CONST	SEGMENT
??_C@_0L@PBBPHNHE@crlNumber?$DN?$AA@ DB 'crlNumber=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FBILCNB@issuer?$DN?$AA@
CONST	SEGMENT
??_C@_07FBILCNB@issuer?$DN?$AA@ DB 'issuer=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DNGLAPHD@Error?5creating?5delta?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0BK@DNGLAPHD@Error?5creating?5delta?5CRL?6?$AA@ DB 'Error creating '
	DB	'delta CRL', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KJNDBHBG@CRL?5signing?5key?$AA@
CONST	SEGMENT
??_C@_0BA@KJNDBHBG@CRL?5signing?5key?$AA@ DB 'CRL signing key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FNGPPCDD@Missing?5CRL?5signing?5key?6?$AA@
CONST	SEGMENT
??_C@_0BJ@FNGPPCDD@Missing?5CRL?5signing?5key?6?$AA@ DB 'Missing CRL sign'
	DB	'ing key', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OEANIBEG@verify?5OK?6?$AA@
CONST	SEGMENT
??_C@_0L@OEANIBEG@verify?5OK?6?$AA@ DB 'verify OK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HHOHOMNK@verify?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BA@HHOHOMNK@verify?5failure?6?$AA@ DB 'verify failure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JCHOOGEG@Error?5getting?5CRL?5issuer?5public?5@
CONST	SEGMENT
??_C@_0CF@JCHOOGEG@Error?5getting?5CRL?5issuer?5public?5@ DB 'Error getti'
	DB	'ng CRL issuer public key', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MLNJBOFF@Error?5getting?5CRL?5issuer?5certifi@
CONST	SEGMENT
??_C@_0CG@MLNJBOFF@Error?5getting?5CRL?5issuer?5certifi@ DB 'Error gettin'
	DB	'g CRL issuer certificate', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JMGLOJAO@Error?5initialising?5X509?5store?6?$AA@
CONST	SEGMENT
??_C@_0BP@JMGLOJAO@Error?5initialising?5X509?5store?6?$AA@ DB 'Error init'
	DB	'ialising X509 store', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07FPKNAFBC@?9badsig?$AA@
CONST	SEGMENT
??_C@_07FPKNAFBC@?9badsig?$AA@ DB '-badsig', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JJEPFIBG@?9crlnumber?$AA@
CONST	SEGMENT
??_C@_0L@JJEPFIBG@?9crlnumber?$AA@ DB '-crlnumber', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DLPLBIOP@?9fingerprint?$AA@
CONST	SEGMENT
??_C@_0N@DLPLBIOP@?9fingerprint?$AA@ DB '-fingerprint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JPEJAHHH@?9noout?$AA@
CONST	SEGMENT
??_C@_06JPEJAHHH@?9noout?$AA@ DB '-noout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EFJBIDOD@?9nextupdate?$AA@
CONST	SEGMENT
??_C@_0M@EFJBIDOD@?9nextupdate?$AA@ DB '-nextupdate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JGEDAEIF@?9lastupdate?$AA@
CONST	SEGMENT
??_C@_0M@JGEDAEIF@?9lastupdate?$AA@ DB '-lastupdate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NKLAPJEG@?9issuer?$AA@
CONST	SEGMENT
??_C@_07NKLAPJEG@?9issuer?$AA@ DB '-issuer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BLLHKMDD@?9nameopt?$AA@
CONST	SEGMENT
??_C@_08BLLHKMDD@?9nameopt?$AA@ DB '-nameopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PNFBPIFJ@?9hash_old?$AA@
CONST	SEGMENT
??_C@_09PNFBPIFJ@?9hash_old?$AA@ DB '-hash_old', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05CEEENDPI@?9hash?$AA@
CONST	SEGMENT
??_C@_05CEEENDPI@?9hash?$AA@ DB '-hash', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EAFCHGPO@?9CAfile?$AA@
CONST	SEGMENT
??_C@_07EAFCHGPO@?9CAfile?$AA@ DB '-CAfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNNNLALG@?9CApath?$AA@
CONST	SEGMENT
??_C@_07MNNNLALG@?9CApath?$AA@ DB '-CApath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FMEKFICB@?9key?$AA@
CONST	SEGMENT
??_C@_04FMEKFICB@?9key?$AA@ DB '-key', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EBAPANED@?9gendelta?$AA@
CONST	SEGMENT
??_C@_09EBAPANED@?9gendelta?$AA@ DB '-gendelta', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPHBEAIF@?9outform?$AA@
CONST	SEGMENT
??_C@_08LPHBEAIF@?9outform?$AA@ DB '-outform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGGPPMGB@?9inform?$AA@
CONST	SEGMENT
??_C@_07CGGPPMGB@?9inform?$AA@ DB '-inform', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _crl_main
_TEXT	SEGMENT
_do_ver$1$ = -308					; size = 4
_x$1$ = -308						; size = 4
_num$1$ = -304						; size = 4
_i$2$ = -300						; size = 4
_keyfile$1$ = -300					; size = 4
_keyformat$1$ = -296					; size = 4
_n$1 = -296						; size = 4
_informat$1$ = -292					; size = 4
_digest$1$ = -288					; size = 4
_infile$1$ = -284					; size = 4
_CAfile$1$ = -280					; size = 4
_CApath$1$ = -276					; size = 4
_crldiff$1$ = -272					; size = 4
_issuer$1$ = -268					; size = 4
_nmflag$ = -264						; size = 4
_crlnumber$1$ = -260					; size = 4
_hash$1$ = -256						; size = 4
_hash_old$1$ = -252					; size = 4
_lastupdate$1$ = -248					; size = 4
_nextupdate$1$ = -244					; size = 4
_fingerprint$1$ = -240					; size = 4
_outfile$1$ = -236					; size = 4
_text$1$ = -232						; size = 4
_noout$1$ = -228					; size = 4
_badsig$1$ = -224					; size = 4
_outformat$1$ = -220					; size = 4
_store$1$ = -216					; size = 4
_xobj$ = -212						; size = 8
_ctx$ = -204						; size = 136
_md$2 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_crl_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\crl.c
; Line 104
	mov	eax, 308				; 00000134H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+308], eax
	push	ebx
	mov	ebx, DWORD PTR _argv$[esp+308]
	push	ebp
; Line 109
	xor	ebp, ebp
	mov	DWORD PTR _nmflag$[esp+316], 0
	push	esi
	push	edi
; Line 124
	xor	edi, edi
	mov	DWORD PTR _CAfile$1$[esp+324], 0
	mov	DWORD PTR _CApath$1$[esp+324], 0
	mov	DWORD PTR _badsig$1$[esp+324], 0
	mov	DWORD PTR _infile$1$[esp+324], ebp
	mov	DWORD PTR _outfile$1$[esp+324], ebp
	mov	DWORD PTR _crldiff$1$[esp+324], ebp
	mov	DWORD PTR _keyfile$1$[esp+324], ebp
	mov	DWORD PTR _hash$1$[esp+324], ebp
	mov	DWORD PTR _issuer$1$[esp+324], ebp
	mov	DWORD PTR _lastupdate$1$[esp+324], ebp
	mov	DWORD PTR _nextupdate$1$[esp+324], ebp
	mov	DWORD PTR _noout$1$[esp+324], ebp
	mov	DWORD PTR _text$1$[esp+324], ebp
	mov	DWORD PTR _hash_old$1$[esp+324], ebp
	mov	DWORD PTR _fingerprint$1$[esp+324], ebp
	mov	DWORD PTR _crlnumber$1$[esp+324], ebp
	mov	DWORD PTR _store$1$[esp+324], ebp
	mov	DWORD PTR _do_ver$1$[esp+324], edi
; Line 125
	call	_EVP_sha1
; Line 129
	mov	esi, DWORD PTR __imp____acrt_iob_func
	mov	DWORD PTR _digest$1$[esp+324], eax
	mov	eax, DWORD PTR _bio_err
	test	eax, eax
	jne	SHORT $LN14@crl_main
; Line 130
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN14@crl_main
; Line 131
	push	2
	call	esi
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN14@crl_main:
; Line 133
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN236@crl_main
; Line 136
	cmp	DWORD PTR _bio_out, edi
	jne	SHORT $LN17@crl_main
; Line 137
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_out, eax
	test	eax, eax
	je	SHORT $LN17@crl_main
; Line 138
	push	1
	call	esi
	push	eax
	push	0
	push	106					; 0000006aH
	push	DWORD PTR _bio_out
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN17@crl_main:
; Line 151
	mov	esi, DWORD PTR _argc$[esp+320]
; Line 153
	xor	ebp, ebp
	dec	esi
	mov	DWORD PTR _informat$1$[esp+324], 3
	add	ebx, 4
	mov	DWORD PTR _outformat$1$[esp+324], 3
	mov	DWORD PTR _keyformat$1$[esp+324], 3
	mov	DWORD PTR _num$1$[esp+324], ebp
; Line 154
	cmp	esi, 1
	jl	$LN73@crl_main
	npad	7
$LL2@crl_main:
; Line 164
	mov	edi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_07CGGPPMGB@?9inform?$AA@
	mov	eax, edi
	npad	7
$LL150@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN151@crl_main
	test	dl, dl
	je	SHORT $LN152@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN151@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL150@crl_main
$LN152@crl_main:
	xor	eax, eax
	jmp	SHORT $LN153@crl_main
$LN151@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN153@crl_main:
	test	eax, eax
	jne	SHORT $LN18@crl_main
; Line 165
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 167
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _informat$1$[esp+324], eax
	jmp	$LN243@crl_main
$LN18@crl_main:
; Line 168
	mov	ecx, OFFSET ??_C@_08LPHBEAIF@?9outform?$AA@
	mov	eax, edi
$LL154@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN155@crl_main
	test	dl, dl
	je	SHORT $LN156@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN155@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL154@crl_main
$LN156@crl_main:
	xor	eax, eax
	jmp	SHORT $LN157@crl_main
$LN155@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN157@crl_main:
	test	eax, eax
	jne	SHORT $LN21@crl_main
; Line 169
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 171
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _outformat$1$[esp+324], eax
	jmp	$LN243@crl_main
$LN21@crl_main:
; Line 172
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, edi
$LL158@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN159@crl_main
	test	dl, dl
	je	SHORT $LN160@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN159@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL158@crl_main
$LN160@crl_main:
	xor	eax, eax
	jmp	SHORT $LN161@crl_main
$LN159@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN161@crl_main:
	test	eax, eax
	jne	SHORT $LN24@crl_main
; Line 173
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 175
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _infile$1$[esp+324], eax
	jmp	$LN243@crl_main
$LN24@crl_main:
; Line 176
	mov	ecx, OFFSET ??_C@_09EBAPANED@?9gendelta?$AA@
	mov	eax, edi
	npad	5
$LL162@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN163@crl_main
	test	dl, dl
	je	SHORT $LN164@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN163@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL162@crl_main
$LN164@crl_main:
	xor	eax, eax
	jmp	SHORT $LN165@crl_main
$LN163@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN165@crl_main:
	test	eax, eax
	jne	SHORT $LN27@crl_main
; Line 177
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 179
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _crldiff$1$[esp+324], eax
	jmp	$LN243@crl_main
$LN27@crl_main:
; Line 180
	mov	ecx, OFFSET ??_C@_04FMEKFICB@?9key?$AA@
	mov	eax, edi
	npad	7
$LL166@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN167@crl_main
	test	dl, dl
	je	SHORT $LN168@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN167@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL166@crl_main
$LN168@crl_main:
	xor	eax, eax
	jmp	SHORT $LN169@crl_main
$LN167@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN169@crl_main:
	test	eax, eax
	jne	SHORT $LN30@crl_main
; Line 181
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 183
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _keyfile$1$[esp+324], eax
	jmp	$LN243@crl_main
$LN30@crl_main:
; Line 184
	mov	ecx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	eax, edi
	npad	7
$LL170@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN171@crl_main
	test	dl, dl
	je	SHORT $LN172@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN171@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL170@crl_main
$LN172@crl_main:
	xor	eax, eax
	jmp	SHORT $LN173@crl_main
$LN171@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN173@crl_main:
	test	eax, eax
	jne	SHORT $LN33@crl_main
; Line 185
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 187
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _keyformat$1$[esp+324], eax
	jmp	$LN243@crl_main
$LN33@crl_main:
; Line 188
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, edi
$LL174@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN175@crl_main
	test	dl, dl
	je	SHORT $LN176@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN175@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL174@crl_main
$LN176@crl_main:
	xor	eax, eax
	jmp	SHORT $LN177@crl_main
$LN175@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN177@crl_main:
	test	eax, eax
	jne	SHORT $LN36@crl_main
; Line 189
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 191
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+324], eax
	jmp	$LN243@crl_main
$LN36@crl_main:
; Line 192
	mov	ecx, OFFSET ??_C@_07MNNNLALG@?9CApath?$AA@
	mov	eax, edi
	npad	6
$LL178@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN179@crl_main
	test	dl, dl
	je	SHORT $LN180@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN179@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL178@crl_main
$LN180@crl_main:
	xor	eax, eax
	jmp	SHORT $LN181@crl_main
$LN179@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN181@crl_main:
	test	eax, eax
	jne	SHORT $LN39@crl_main
; Line 193
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 195
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
; Line 196
	mov	edi, 1
	mov	DWORD PTR _CApath$1$[esp+324], eax
	mov	DWORD PTR _do_ver$1$[esp+324], edi
	jmp	$LN72@crl_main
$LN39@crl_main:
; Line 197
	mov	ecx, OFFSET ??_C@_07EAFCHGPO@?9CAfile?$AA@
	mov	eax, edi
$LL182@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN183@crl_main
	test	dl, dl
	je	SHORT $LN184@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN183@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL182@crl_main
$LN184@crl_main:
	xor	eax, eax
	jmp	SHORT $LN185@crl_main
$LN183@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN185@crl_main:
	test	eax, eax
	jne	SHORT $LN42@crl_main
; Line 198
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 200
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
; Line 201
	mov	edi, 1
	mov	DWORD PTR _CAfile$1$[esp+324], eax
	mov	DWORD PTR _do_ver$1$[esp+324], edi
	jmp	$LN72@crl_main
$LN42@crl_main:
; Line 202
	mov	ecx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	eax, edi
$LL186@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN187@crl_main
	test	dl, dl
	je	SHORT $LN188@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN187@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL186@crl_main
$LN188@crl_main:
	xor	eax, eax
	jmp	SHORT $LN189@crl_main
$LN187@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN189@crl_main:
	test	eax, eax
	jne	SHORT $LN45@crl_main
; Line 203
	mov	edi, 1
	mov	DWORD PTR _do_ver$1$[esp+324], edi
	jmp	$LN72@crl_main
$LN45@crl_main:
; Line 204
	mov	ecx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	eax, edi
$LL190@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN191@crl_main
	test	dl, dl
	je	SHORT $LN192@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN191@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL190@crl_main
$LN192@crl_main:
	xor	eax, eax
	jmp	SHORT $LN193@crl_main
$LN191@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN193@crl_main:
	test	eax, eax
	jne	SHORT $LN47@crl_main
; Line 205
	mov	DWORD PTR _text$1$[esp+324], 1
	jmp	$LN243@crl_main
$LN47@crl_main:
; Line 206
	mov	ecx, OFFSET ??_C@_05CEEENDPI@?9hash?$AA@
	mov	eax, edi
	npad	1
$LL194@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN195@crl_main
	test	dl, dl
	je	SHORT $LN196@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN195@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL194@crl_main
$LN196@crl_main:
	xor	eax, eax
	jmp	SHORT $LN197@crl_main
$LN195@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN197@crl_main:
	test	eax, eax
	jne	SHORT $LN49@crl_main
; Line 207
	inc	ebp
	mov	DWORD PTR _num$1$[esp+324], ebp
	mov	DWORD PTR _hash$1$[esp+324], ebp
	jmp	$LN243@crl_main
$LN49@crl_main:
; Line 209
	mov	ecx, OFFSET ??_C@_09PNFBPIFJ@?9hash_old?$AA@
	mov	eax, edi
	npad	2
$LL198@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN199@crl_main
	test	dl, dl
	je	SHORT $LN200@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN199@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL198@crl_main
$LN200@crl_main:
	xor	eax, eax
	jmp	SHORT $LN201@crl_main
$LN199@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN201@crl_main:
	test	eax, eax
	jne	SHORT $LN51@crl_main
; Line 210
	inc	ebp
	mov	DWORD PTR _num$1$[esp+324], ebp
	mov	DWORD PTR _hash_old$1$[esp+324], ebp
	jmp	$LN243@crl_main
$LN51@crl_main:
; Line 212
	mov	ecx, OFFSET ??_C@_08BLLHKMDD@?9nameopt?$AA@
	mov	eax, edi
	npad	2
$LL202@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN203@crl_main
	test	dl, dl
	je	SHORT $LN204@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN203@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL202@crl_main
$LN204@crl_main:
	xor	eax, eax
	jmp	SHORT $LN205@crl_main
$LN203@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN205@crl_main:
	test	eax, eax
	jne	SHORT $LN53@crl_main
; Line 213
	dec	esi
	cmp	esi, 1
	jl	$bad$251
; Line 215
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	lea	eax, DWORD PTR _nmflag$[esp+328]
	push	eax
	call	_set_name_ex
	add	esp, 8
	test	eax, eax
	je	$bad$251
; Line 217
	jmp	$LN243@crl_main
$LN53@crl_main:
	mov	ecx, OFFSET ??_C@_07NKLAPJEG@?9issuer?$AA@
	mov	eax, edi
	npad	6
$LL206@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN207@crl_main
	test	dl, dl
	je	SHORT $LN208@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN207@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL206@crl_main
$LN208@crl_main:
	xor	eax, eax
	jmp	SHORT $LN209@crl_main
$LN207@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN209@crl_main:
	test	eax, eax
	jne	SHORT $LN57@crl_main
; Line 218
	inc	ebp
	mov	DWORD PTR _num$1$[esp+324], ebp
	mov	DWORD PTR _issuer$1$[esp+324], ebp
	jmp	$LN243@crl_main
$LN57@crl_main:
; Line 219
	mov	ecx, OFFSET ??_C@_0M@JGEDAEIF@?9lastupdate?$AA@
	mov	eax, edi
	npad	2
$LL210@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN211@crl_main
	test	dl, dl
	je	SHORT $LN212@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN211@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL210@crl_main
$LN212@crl_main:
	xor	eax, eax
	jmp	SHORT $LN213@crl_main
$LN211@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN213@crl_main:
	test	eax, eax
	jne	SHORT $LN59@crl_main
; Line 220
	inc	ebp
	mov	DWORD PTR _num$1$[esp+324], ebp
	mov	DWORD PTR _lastupdate$1$[esp+324], ebp
	jmp	$LN243@crl_main
$LN59@crl_main:
; Line 221
	mov	ecx, OFFSET ??_C@_0M@EFJBIDOD@?9nextupdate?$AA@
	mov	eax, edi
	npad	2
$LL214@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN215@crl_main
	test	dl, dl
	je	SHORT $LN216@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN215@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL214@crl_main
$LN216@crl_main:
	xor	eax, eax
	jmp	SHORT $LN217@crl_main
$LN215@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN217@crl_main:
	test	eax, eax
	jne	SHORT $LN61@crl_main
; Line 222
	inc	ebp
	mov	DWORD PTR _num$1$[esp+324], ebp
	mov	DWORD PTR _nextupdate$1$[esp+324], ebp
	jmp	$LN243@crl_main
$LN61@crl_main:
; Line 223
	mov	ecx, OFFSET ??_C@_06JPEJAHHH@?9noout?$AA@
	mov	eax, edi
	npad	2
$LL218@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN219@crl_main
	test	dl, dl
	je	SHORT $LN220@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN219@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL218@crl_main
$LN220@crl_main:
	xor	eax, eax
	jmp	SHORT $LN221@crl_main
$LN219@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN221@crl_main:
	test	eax, eax
	jne	SHORT $LN63@crl_main
; Line 224
	inc	ebp
	mov	DWORD PTR _num$1$[esp+324], ebp
	mov	DWORD PTR _noout$1$[esp+324], ebp
	jmp	$LN243@crl_main
$LN63@crl_main:
; Line 225
	mov	ecx, OFFSET ??_C@_0N@DLPLBIOP@?9fingerprint?$AA@
	mov	eax, edi
	npad	2
$LL222@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN223@crl_main
	test	dl, dl
	je	SHORT $LN224@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN223@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL222@crl_main
$LN224@crl_main:
	xor	eax, eax
	jmp	SHORT $LN225@crl_main
$LN223@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN225@crl_main:
	test	eax, eax
	jne	SHORT $LN65@crl_main
; Line 226
	inc	ebp
	mov	DWORD PTR _num$1$[esp+324], ebp
	mov	DWORD PTR _fingerprint$1$[esp+324], ebp
	jmp	$LN243@crl_main
$LN65@crl_main:
; Line 227
	mov	ecx, OFFSET ??_C@_0L@JJEPFIBG@?9crlnumber?$AA@
	mov	eax, edi
	npad	2
$LL226@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN227@crl_main
	test	dl, dl
	je	SHORT $LN228@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN227@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL226@crl_main
$LN228@crl_main:
	xor	eax, eax
	jmp	SHORT $LN229@crl_main
$LN227@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN229@crl_main:
	test	eax, eax
	jne	SHORT $LN67@crl_main
; Line 228
	inc	ebp
	mov	DWORD PTR _num$1$[esp+324], ebp
	mov	DWORD PTR _crlnumber$1$[esp+324], ebp
	jmp	SHORT $LN243@crl_main
$LN67@crl_main:
; Line 229
	mov	ecx, OFFSET ??_C@_07FPKNAFBC@?9badsig?$AA@
	mov	eax, edi
	npad	5
$LL230@crl_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN231@crl_main
	test	dl, dl
	je	SHORT $LN232@crl_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN231@crl_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL230@crl_main
$LN232@crl_main:
	xor	eax, eax
	jmp	SHORT $LN233@crl_main
$LN231@crl_main:
	sbb	eax, eax
	or	eax, 1
$LN233@crl_main:
	test	eax, eax
	jne	SHORT $LN69@crl_main
; Line 230
	mov	DWORD PTR _badsig$1$[esp+324], 1
	jmp	SHORT $LN243@crl_main
$LN69@crl_main:
; Line 231
	lea	eax, DWORD PTR [edi+1]
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR _digest$1$[esp+324], eax
	test	eax, eax
	je	$LN71@crl_main
$LN243@crl_main:
	mov	edi, DWORD PTR _do_ver$1$[esp+324]
$LN72@crl_main:
; Line 239
	dec	esi
; Line 240
	add	ebx, 4
	cmp	esi, 1
	jge	$LL2@crl_main
$LN73@crl_main:
; Line 250
	call	_ERR_load_crypto_strings
; Line 251
	mov	esi, DWORD PTR _informat$1$[esp+324]
	push	esi
	push	DWORD PTR _infile$1$[esp+328]
	call	_load_crl
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _x$1$[esp+324], ebx
; Line 252
	test	ebx, ebx
	je	$LN242@crl_main
; Line 256
	test	edi, edi
	je	$LN85@crl_main
; Line 257
	call	_X509_STORE_new
	mov	edi, eax
	mov	DWORD PTR _store$1$[esp+324], edi
; Line 258
	call	_X509_LOOKUP_file
	push	eax
	push	edi
	call	_X509_STORE_add_lookup
	mov	esi, eax
	add	esp, 8
; Line 259
	test	esi, esi
	je	$LN242@crl_main
; Line 261
	push	0
	push	1
	push	DWORD PTR _CAfile$1$[esp+332]
	push	1
	push	esi
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN77@crl_main
; Line 262
	push	eax
	push	3
	push	eax
	push	1
	push	esi
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
$LN77@crl_main:
; Line 264
	call	_X509_LOOKUP_hash_dir
	push	eax
	push	edi
	call	_X509_STORE_add_lookup
	mov	esi, eax
	add	esp, 8
; Line 265
	test	esi, esi
	je	SHORT $LN242@crl_main
; Line 267
	push	0
	push	1
	push	DWORD PTR _CApath$1$[esp+332]
	push	2
	push	esi
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN79@crl_main
; Line 268
	push	eax
	push	3
	push	eax
	push	2
	push	esi
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
$LN79@crl_main:
; Line 269
	call	_ERR_clear_error
; Line 271
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$[esp+332]
	push	edi
	push	eax
	call	_X509_STORE_CTX_init
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN80@crl_main
; Line 272
	push	OFFSET ??_C@_0BP@JMGLOJAO@Error?5initialising?5X509?5store?6?$AA@
$LN248@crl_main:
; Line 279
	push	DWORD PTR _bio_err
	call	_BIO_printf
$LN249@crl_main:
	add	esp, 8
$LN242@crl_main:
	xor	ebp, ebp
$LN148@crl_main:
; Line 431
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
	mov	esi, 1
$LN117@crl_main:
; Line 432
	push	ebp
	call	_BIO_free_all
; Line 433
	push	DWORD PTR _bio_out
	call	_BIO_free_all
; Line 435
	push	ebx
	mov	DWORD PTR _bio_out, 0
	call	_X509_CRL_free
; Line 436
	mov	edi, DWORD PTR _store$1$[esp+336]
	add	esp, 12					; 0000000cH
	test	edi, edi
	je	SHORT $LN234@crl_main
; Line 437
	lea	eax, DWORD PTR _ctx$[esp+324]
	push	eax
	call	_X509_STORE_CTX_cleanup
; Line 438
	push	edi
	call	_X509_STORE_free
	add	esp, 8
$LN234@crl_main:
; Line 442
	mov	ecx, DWORD PTR __$ArrayPad$[esp+324]
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	ret	0
$LN71@crl_main:
; Line 235
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$bad$251:
; Line 245
	mov	eax, DWORD PTR _crl_usage
	mov	esi, OFFSET _crl_usage
	test	eax, eax
	je	SHORT $LN235@crl_main
$LL6@crl_main:
; Line 246
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	eax, DWORD PTR [esi+4]
	lea	esi, DWORD PTR [esi+4]
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LL6@crl_main
$LN235@crl_main:
; Line 247
	xor	ebx, ebx
	jmp	$LN242@crl_main
$LN80@crl_main:
; Line 276
	lea	eax, DWORD PTR _xobj$[esp+324]
	push	eax
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+8]
	lea	eax, DWORD PTR _ctx$[esp+332]
	push	1
	push	eax
	call	_X509_STORE_get_by_subject
	add	esp, 16					; 00000010H
; Line 278
	test	eax, eax
	jg	SHORT $LN81@crl_main
; Line 279
	push	OFFSET ??_C@_0CG@MLNJBOFF@Error?5getting?5CRL?5issuer?5certifi@
; Line 280
	jmp	$LN248@crl_main
$LN81@crl_main:
; Line 282
	push	DWORD PTR _xobj$[esp+328]
	call	_X509_get_pubkey
	mov	esi, eax
; Line 283
	lea	eax, DWORD PTR _xobj$[esp+328]
	push	eax
	call	_X509_OBJECT_free_contents
	add	esp, 8
; Line 284
	test	esi, esi
	jne	SHORT $LN82@crl_main
; Line 285
	push	OFFSET ??_C@_0CF@JCHOOGEG@Error?5getting?5CRL?5issuer?5public?5@
; Line 286
	jmp	$LN248@crl_main
$LN82@crl_main:
; Line 288
	push	esi
	push	ebx
	call	_X509_CRL_verify
; Line 289
	push	esi
	mov	edi, eax
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
; Line 290
	test	edi, edi
	js	$LN242@crl_main
; Line 292
	jne	SHORT $LN84@crl_main
; Line 293
	push	OFFSET ??_C@_0BA@HHOHOMNK@verify?5failure?6?$AA@
	jmp	SHORT $LN244@crl_main
$LN84@crl_main:
; Line 295
	push	OFFSET ??_C@_0L@OEANIBEG@verify?5OK?6?$AA@
$LN244@crl_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	esi, DWORD PTR _informat$1$[esp+332]
	add	esp, 8
$LN85@crl_main:
; Line 298
	mov	eax, DWORD PTR _crldiff$1$[esp+324]
	test	eax, eax
	je	$LN91@crl_main
; Line 300
	mov	edi, DWORD PTR _keyfile$1$[esp+324]
	test	edi, edi
	jne	SHORT $LN87@crl_main
; Line 301
	push	OFFSET ??_C@_0BJ@FNGPPCDD@Missing?5CRL?5signing?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 302
	jmp	$LN249@crl_main
$LN87@crl_main:
; Line 304
	push	esi
	push	eax
	call	_load_crl
	mov	esi, eax
	add	esp, 8
; Line 305
	test	esi, esi
	je	$LN242@crl_main
; Line 307
	push	OFFSET ??_C@_0BA@KJNDBHBG@CRL?5signing?5key?$AA@
	push	0
	push	0
	push	0
	push	DWORD PTR _keyformat$1$[esp+340]
	push	edi
	push	DWORD PTR _bio_err
	call	_load_key
	mov	edi, eax
	add	esp, 28					; 0000001cH
; Line 309
	test	edi, edi
	jne	SHORT $LN89@crl_main
; Line 310
	push	esi
	call	_X509_CRL_free
	add	esp, 4
; Line 311
	jmp	$LN242@crl_main
$LN89@crl_main:
; Line 313
	push	0
	push	DWORD PTR _digest$1$[esp+328]
	push	edi
	push	esi
	push	ebx
	call	_X509_CRL_diff
; Line 314
	push	esi
	mov	ebx, eax
	call	_X509_CRL_free
; Line 315
	push	edi
	call	_EVP_PKEY_free
	add	esp, 28					; 0000001cH
; Line 316
	test	ebx, ebx
	je	$LN90@crl_main
; Line 317
	mov	eax, DWORD PTR _x$1$[esp+324]
	push	eax
	call	_X509_CRL_free
	add	esp, 4
; Line 318
	mov	DWORD PTR _x$1$[esp+324], ebx
$LN91@crl_main:
; Line 325
	test	ebp, ebp
	je	$LN149@crl_main
; Line 326
	mov	edi, 1
	mov	DWORD PTR _i$2$[esp+324], edi
	cmp	ebp, edi
	jl	$LN149@crl_main
$LL9@crl_main:
; Line 327
	cmp	DWORD PTR _issuer$1$[esp+324], edi
	jne	SHORT $LN93@crl_main
; Line 328
	push	DWORD PTR _nmflag$[esp+324]
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+8]
	push	OFFSET ??_C@_07FBILCNB@issuer?$DN?$AA@
	push	DWORD PTR _bio_out
	call	_print_name
	add	esp, 16					; 00000010H
$LN93@crl_main:
; Line 331
	cmp	DWORD PTR _crlnumber$1$[esp+324], edi
	jne	$LN94@crl_main
; Line 333
	push	0
	push	0
	push	88					; 00000058H
	push	ebx
	call	_X509_CRL_get_ext_d2i
; Line 334
	push	OFFSET ??_C@_0L@PBBPHNHE@crlNumber?$DN?$AA@
	push	DWORD PTR _bio_out
	mov	esi, eax
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 335
	test	esi, esi
	je	SHORT $LN95@crl_main
; Line 336
	push	esi
	push	DWORD PTR _bio_out
	call	_i2a_ASN1_INTEGER
; Line 337
	push	esi
	call	_ASN1_INTEGER_free
	add	esp, 12					; 0000000cH
; Line 338
	jmp	SHORT $LN96@crl_main
$LN90@crl_main:
; Line 320
	push	OFFSET ??_C@_0BK@DNGLAPHD@Error?5creating?5delta?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 321
	mov	ebx, DWORD PTR _x$1$[esp+332]
	jmp	$LN249@crl_main
$LN95@crl_main:
; Line 339
	push	OFFSET ??_C@_06KOPODAHL@?$DMNONE?$DO?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_puts
	add	esp, 8
$LN96@crl_main:
; Line 340
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
	add	esp, 8
$LN94@crl_main:
; Line 342
	cmp	DWORD PTR _hash$1$[esp+324], edi
	jne	SHORT $LN97@crl_main
; Line 343
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+8]
	call	_X509_NAME_hash
	push	eax
	push	OFFSET ??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN97@crl_main:
; Line 347
	cmp	DWORD PTR _hash_old$1$[esp+324], edi
	jne	SHORT $LN98@crl_main
; Line 348
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+8]
	call	_X509_NAME_hash_old
	push	eax
	push	OFFSET ??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN98@crl_main:
; Line 352
	cmp	DWORD PTR _lastupdate$1$[esp+324], edi
	jne	SHORT $LN99@crl_main
; Line 353
	push	OFFSET ??_C@_0M@IOCJLFCF@lastUpdate?$DN?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
; Line 354
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+12]
	push	DWORD PTR _bio_out
	call	_ASN1_TIME_print
; Line 355
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
	add	esp, 24					; 00000018H
$LN99@crl_main:
; Line 357
	cmp	DWORD PTR _nextupdate$1$[esp+324], edi
	jne	SHORT $LN100@crl_main
; Line 358
	push	OFFSET ??_C@_0M@CKCLKDMP@nextUpdate?$DN?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
; Line 359
	mov	eax, DWORD PTR [ebx]
	add	esp, 8
	mov	eax, DWORD PTR [eax+16]
	test	eax, eax
	je	SHORT $LN101@crl_main
; Line 360
	push	eax
	push	DWORD PTR _bio_out
	call	_ASN1_TIME_print
	jmp	SHORT $LN245@crl_main
$LN101@crl_main:
; Line 362
	push	OFFSET ??_C@_04OKGDLNCL@NONE?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
$LN245@crl_main:
	add	esp, 8
; Line 363
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
	add	esp, 8
$LN100@crl_main:
; Line 365
	cmp	DWORD PTR _fingerprint$1$[esp+324], edi
	jne	$LN7@crl_main
; Line 370
	mov	esi, DWORD PTR _digest$1$[esp+324]
	lea	eax, DWORD PTR _n$1[esp+324]
	push	eax
	lea	eax, DWORD PTR _md$2[esp+328]
	push	eax
	push	esi
	push	ebx
	call	_X509_CRL_digest
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN135@crl_main
; Line 374
	push	esi
	call	_EVP_MD_type
	push	eax
	call	_OBJ_nid2sn
	push	eax
	push	OFFSET ??_C@_0BA@BJKFFDMN@?$CFs?5Fingerprint?$DN?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
; Line 376
	mov	ebx, DWORD PTR _n$1[esp+344]
	add	esp, 20					; 00000014H
	xor	esi, esi
	test	ebx, ebx
	jle	SHORT $LN7@crl_main
	mov	ebp, 1
	lea	eax, DWORD PTR _md$2[esp+324]
	sub	ebp, eax
	lea	edi, DWORD PTR [esi+10]
	npad	7
$LL12@crl_main:
; Line 377
	lea	edx, DWORD PTR _md$2[esp+324]
	mov	ecx, 58					; 0000003aH
	add	edx, esi
	lea	eax, DWORD PTR [edx+ebp]
	cmp	eax, ebx
	movzx	eax, BYTE PTR [edx]
	cmove	ecx, edi
	push	ecx
	push	eax
	push	OFFSET ??_C@_06FOGCEBND@?$CF02X?$CFc?$AA@
	push	DWORD PTR _bio_out
	call	_BIO_printf
	mov	ebx, DWORD PTR _n$1[esp+340]
	inc	esi
	add	esp, 16					; 00000010H
	cmp	esi, ebx
	jl	SHORT $LL12@crl_main
	mov	edi, DWORD PTR _i$2$[esp+324]
	mov	ebp, DWORD PTR _num$1$[esp+324]
$LN7@crl_main:
; Line 326
	inc	edi
	mov	DWORD PTR _i$2$[esp+324], edi
	cmp	edi, ebp
	jg	SHORT $LN149@crl_main
	mov	ebx, DWORD PTR _x$1$[esp+324]
	jmp	$LL9@crl_main
$LN135@crl_main:
; Line 371
	push	OFFSET ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
; Line 372
	jmp	$LN248@crl_main
$LN149@crl_main:
; Line 384
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebp, eax
	add	esp, 4
; Line 385
	test	ebp, ebp
	jne	SHORT $LN105@crl_main
; Line 386
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 387
	mov	ebx, DWORD PTR _x$1$[esp+328]
	add	esp, 4
	jmp	$LN148@crl_main
$LN105@crl_main:
; Line 390
	mov	ebx, DWORD PTR _outfile$1$[esp+324]
	test	ebx, ebx
	jne	SHORT $LN106@crl_main
; Line 391
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	ebp
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN108@crl_main:
; Line 405
	cmp	DWORD PTR _text$1$[esp+324], 0
; Line 406
	mov	ebx, DWORD PTR _x$1$[esp+324]
	je	SHORT $LN109@crl_main
	push	ebx
	push	ebp
	call	_X509_CRL_print
	add	esp, 8
$LN109@crl_main:
; Line 408
	cmp	DWORD PTR _noout$1$[esp+324], 0
	je	SHORT $LN110@crl_main
$LN116@crl_main:
; Line 409
	xor	esi, esi
; Line 410
	jmp	$LN117@crl_main
$LN106@crl_main:
; Line 399
	push	ebx
	push	5
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN108@crl_main
; Line 400
	push	ebx
	call	DWORD PTR __imp__perror
; Line 401
	mov	ebx, DWORD PTR _x$1$[esp+328]
	add	esp, 4
	jmp	$LN148@crl_main
$LN110@crl_main:
; Line 413
	cmp	DWORD PTR _badsig$1$[esp+324], 0
	je	SHORT $LN111@crl_main
; Line 414
	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
	xor	BYTE PTR [ecx+eax-1], 1
$LN111@crl_main:
; Line 416
	mov	eax, DWORD PTR _outformat$1$[esp+324]
	cmp	eax, 1
	jne	SHORT $LN112@crl_main
; Line 417
	push	ebx
	push	ebp
	call	_i2d_X509_CRL_bio
	jmp	SHORT $LN246@crl_main
$LN112@crl_main:
; Line 418
	cmp	eax, 3
	jne	SHORT $LN114@crl_main
; Line 419
	push	ebx
	push	ebp
	call	_PEM_write_bio_X509_CRL
$LN246@crl_main:
	add	esp, 8
; Line 424
	test	eax, eax
	jne	SHORT $LN116@crl_main
; Line 425
	push	OFFSET ??_C@_0BF@ECKMNJGO@unable?5to?5write?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 426
	jmp	$LN148@crl_main
$LN114@crl_main:
; Line 421
	push	OFFSET ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$LN148@crl_main
$LN236@crl_main:
	xor	ebx, ebx
	jmp	$LN148@crl_main
_crl_main ENDP
_TEXT	ENDS
END

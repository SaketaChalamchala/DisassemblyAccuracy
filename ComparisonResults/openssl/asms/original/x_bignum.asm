; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_bignum.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_06CHOIGJDB@BIGNUM?$AA@			; `string'
;	COMDAT ??_C@_06CHOIGJDB@BIGNUM?$AA@
CONST	SEGMENT
??_C@_06CHOIGJDB@BIGNUM?$AA@ DB 'BIGNUM', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?local_it@?1??BIGNUM_it@@9@9 DB 00H			; `BIGNUM_it'::`2'::local_it
	ORG $+3
	DD	02H
	DD	00H
	DD	00H
	DD	FLAT:_bignum_pf
	DD	00H
	DD	FLAT:??_C@_06CHOIGJDB@BIGNUM?$AA@
?local_it@?1??CBIGNUM_it@@9@9 DB 00H			; `CBIGNUM_it'::`2'::local_it
	ORG $+3
	DD	02H
	DD	00H
	DD	00H
	DD	FLAT:_bignum_pf
	DD	01H
	DD	FLAT:??_C@_06CHOIGJDB@BIGNUM?$AA@
CONST	ENDS
_DATA	SEGMENT
_bignum_pf DD	00H
	DD	00H
	DD	FLAT:_bn_new
	DD	FLAT:_bn_free
	DD	00H
	DD	FLAT:_bn_c2i
	DD	FLAT:_bn_i2c
	ORG $+4
_DATA	ENDS
PUBLIC	_CBIGNUM_it
PUBLIC	_BIGNUM_it
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_free:PROC
; Function compile flags: /Ogtpy
;	COMDAT _bn_c2i
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_cont$ = 12						; size = 4
_len$ = 16						; size = 4
_utype$ = 20						; size = 4
_free_cont$ = 24					; size = 4
_it$ = 28						; size = 4
_bn_c2i	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_bignum.c
; Line 142
	push	esi
; Line 145
	mov	esi, DWORD PTR _pval$[esp]
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN2@bn_c2i
; Line 101
	call	_BN_new
	mov	DWORD PTR [esi], eax
; Line 102
	test	eax, eax
	je	SHORT $LN9@bn_c2i
$LN2@bn_c2i:
; Line 148
	push	DWORD PTR [esi]
	push	DWORD PTR _len$[esp+4]
	push	DWORD PTR _cont$[esp+8]
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@bn_c2i
; Line 110
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN9@bn_c2i
; Line 112
	mov	eax, DWORD PTR _it$[esp]
; Line 113
	push	ecx
	test	BYTE PTR [eax+20], 1
	je	SHORT $LN11@bn_c2i
	call	_BN_clear_free
; Line 115
	add	esp, 4
; Line 116
	mov	DWORD PTR [esi], 0
; Line 150
	xor	eax, eax
	pop	esi
; Line 153
	ret	0
$LN11@bn_c2i:
; Line 115
	call	_BN_free
	add	esp, 4
; Line 116
	mov	DWORD PTR [esi], 0
$LN9@bn_c2i:
; Line 150
	xor	eax, eax
	pop	esi
; Line 153
	ret	0
$LN3@bn_c2i:
; Line 152
	mov	eax, 1
	pop	esi
; Line 153
	ret	0
_bn_c2i	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bn_i2c
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_cont$ = 12						; size = 4
_putype$ = 16						; size = 4
_it$ = 20						; size = 4
_bn_i2c	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_bignum.c
; Line 124
	mov	eax, DWORD PTR _pval$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
	test	esi, esi
	jne	SHORT $LN2@bn_i2c
; Line 125
	or	eax, -1
	pop	esi
; Line 138
	ret	0
$LN2@bn_i2c:
	push	ebx
; Line 128
	push	esi
	call	_BN_num_bits
	add	esp, 4
	mov	ebx, 0
	test	al, 7
; Line 132
	mov	eax, DWORD PTR _cont$[esp+4]
	sete	bl
	test	eax, eax
	je	SHORT $LN5@bn_i2c
; Line 133
	test	ebx, ebx
	je	SHORT $LN6@bn_i2c
; Line 134
	mov	BYTE PTR [eax], 0
	inc	eax
$LN6@bn_i2c:
; Line 135
	push	eax
	push	esi
	call	_BN_bn2bin
	add	esp, 8
$LN5@bn_i2c:
; Line 137
	push	esi
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	add	eax, ebx
	pop	ebx
	pop	esi
; Line 138
	ret	0
_bn_i2c	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bn_free
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_bn_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_bignum.c
; Line 109
	push	esi
; Line 110
	mov	esi, DWORD PTR _pval$[esp]
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN1@bn_free
; Line 112
	mov	eax, DWORD PTR _it$[esp]
; Line 113
	push	ecx
	test	BYTE PTR [eax+20], 1
	je	SHORT $LN3@bn_free
	call	_BN_clear_free
; Line 115
	add	esp, 4
; Line 116
	mov	DWORD PTR [esi], 0
	pop	esi
; Line 117
	ret	0
$LN3@bn_free:
; Line 115
	call	_BN_free
	add	esp, 4
; Line 116
	mov	DWORD PTR [esi], 0
$LN1@bn_free:
	pop	esi
; Line 117
	ret	0
_bn_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bn_new
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_bn_new	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_bignum.c
; Line 101
	call	_BN_new
	mov	ecx, DWORD PTR _pval$[esp-4]
	mov	edx, eax
; Line 102
	xor	eax, eax
	test	edx, edx
	setne	al
	mov	DWORD PTR [ecx], edx
; Line 106
	ret	0
_bn_new	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIGNUM_it
_TEXT	SEGMENT
_BIGNUM_it PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_bignum.c
; Line 93
	mov	eax, OFFSET ?local_it@?1??BIGNUM_it@@9@9
	ret	0
_BIGNUM_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CBIGNUM_it
_TEXT	SEGMENT
_CBIGNUM_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_bignum.c
; Line 97
	mov	eax, OFFSET ?local_it@?1??CBIGNUM_it@@9@9
	ret	0
_CBIGNUM_it ENDP
_TEXT	ENDS
END

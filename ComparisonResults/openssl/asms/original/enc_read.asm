; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\des\enc_read.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
?net@?1??DES_enc_read@@9@9 DD 01H DUP (?)		; `DES_enc_read'::`2'::net
?unnet@?1??DES_enc_read@@9@9 DD 01H DUP (?)		; `DES_enc_read'::`2'::unnet
?unnet_start@?1??DES_enc_read@@9@9 DD 01H DUP (?)	; `DES_enc_read'::`2'::unnet_start
?unnet_left@?1??DES_enc_read@@9@9 DD 01H DUP (?)	; `DES_enc_read'::`2'::unnet_left
?tmpbuf@?1??DES_enc_read@@9@9 DD 01H DUP (?)		; `DES_enc_read'::`2'::tmpbuf
_BSS	ENDS
_DATA	SEGMENT
?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9 DD 01H	; `_shadow_DES_rw_mode'::`2'::_hide_DES_rw_mode
_DATA	ENDS
PUBLIC	__shadow_DES_rw_mode
PUBLIC	_DES_enc_read
PUBLIC	??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@ ; `string'
EXTRN	__imp___errno:PROC
EXTRN	__imp___read:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_DES_cbc_encrypt:PROC
EXTRN	_DES_pcbc_encrypt:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@
CONST	SEGMENT
??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@ DB '.\crypto\des\enc'
	DB	'_read.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DES_enc_read
_TEXT	SEGMENT
_len$3$ = -4						; size = 4
_fd$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_sched$ = 20						; size = 4
_iv$ = 24						; size = 4
_DES_enc_read PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\enc_read.c
; Line 88
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 93
	xor	esi, esi
; Line 107
	cmp	DWORD PTR ?tmpbuf@?1??DES_enc_read@@9@9, esi
	jne	SHORT $LN7@DES_enc_re
; Line 108
	push	108					; 0000006cH
	push	OFFSET ??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@
	push	16388					; 00004004H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?tmpbuf@?1??DES_enc_read@@9@9, eax
; Line 109
	test	eax, eax
	jne	SHORT $LN7@DES_enc_re
$LN81@DES_enc_re:
; Line 110
	or	eax, -1
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN7@DES_enc_re:
; Line 112
	mov	ecx, DWORD PTR ?net@?1??DES_enc_read@@9@9
	test	ecx, ecx
	jne	SHORT $LN9@DES_enc_re
; Line 113
	push	113					; 00000071H
	push	OFFSET ??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@
	push	16388					; 00004004H
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?net@?1??DES_enc_read@@9@9, ecx
; Line 114
	test	ecx, ecx
	je	SHORT $LN81@DES_enc_re
$LN9@DES_enc_re:
; Line 117
	mov	edx, DWORD PTR ?unnet@?1??DES_enc_read@@9@9
	test	edx, edx
	jne	SHORT $LN11@DES_enc_re
; Line 118
	push	118					; 00000076H
	push	OFFSET ??_C@_0BI@JCKEDCMA@?4?2crypto?2des?2enc_read?4c?$AA@
	push	16388					; 00004004H
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?unnet@?1??DES_enc_read@@9@9, edx
; Line 119
	test	edx, edx
	je	SHORT $LN81@DES_enc_re
; Line 120
	mov	ecx, DWORD PTR ?net@?1??DES_enc_read@@9@9
$LN11@DES_enc_re:
	push	ebx
	push	edi
; Line 123
	mov	edi, DWORD PTR ?unnet_left@?1??DES_enc_read@@9@9
	test	edi, edi
	je	SHORT $LN12@DES_enc_re
; Line 124
	mov	ebx, DWORD PTR _len$[esp+12]
	cmp	edi, ebx
	jge	SHORT $LN13@DES_enc_re
; Line 129
	mov	eax, DWORD PTR ?unnet_start@?1??DES_enc_read@@9@9
	push	edi
	add	eax, edx
	push	eax
	push	DWORD PTR _buf$[esp+20]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 134
	mov	DWORD PTR ?unnet_left@?1??DES_enc_read@@9@9, esi
; Line 141
	mov	eax, edi
	mov	DWORD PTR ?unnet_start@?1??DES_enc_read@@9@9, esi
	pop	edi
	pop	ebx
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN13@DES_enc_re:
; Line 136
	mov	esi, DWORD PTR ?unnet_start@?1??DES_enc_read@@9@9
	push	ebx
	lea	eax, DWORD PTR [esi+edx]
	push	eax
	push	DWORD PTR _buf$[esp+20]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 137
	add	esi, ebx
; Line 138
	sub	edi, ebx
	mov	DWORD PTR ?unnet_start@?1??DES_enc_read@@9@9, esi
	mov	DWORD PTR ?unnet_left@?1??DES_enc_read@@9@9, edi
; Line 139
	mov	edi, ebx
; Line 141
	mov	eax, edi
	pop	edi
	pop	ebx
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN12@DES_enc_re:
; Line 145
	mov	eax, DWORD PTR _len$[esp+12]
	mov	edx, 16384				; 00004000H
	mov	ebx, DWORD PTR __imp___errno
	cmp	eax, edx
	cmovg	eax, edx
	mov	DWORD PTR _len$3$[esp+16], eax
$LL2@DES_enc_re:
; Line 153
	mov	eax, 4
	sub	eax, esi
	push	eax
	lea	eax, DWORD PTR [ecx+esi]
	push	eax
	push	DWORD PTR _fd$[esp+20]
	call	DWORD PTR __imp___read
	add	esp, 12					; 0000000cH
; Line 156
	cmp	eax, -1
	jne	SHORT $LN16@DES_enc_re
	call	ebx
	cmp	DWORD PTR [eax], 4
	je	SHORT $LN47@DES_enc_re
$LN45@DES_enc_re:
	pop	edi
	pop	ebx
; Line 160
	xor	eax, eax
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN16@DES_enc_re:
; Line 159
	test	eax, eax
	jle	SHORT $LN45@DES_enc_re
; Line 161
	add	esi, eax
$LN47@DES_enc_re:
; Line 149
	cmp	esi, 4
	jge	SHORT $LN72@DES_enc_re
; Line 145
	mov	ecx, DWORD PTR ?net@?1??DES_enc_read@@9@9
	jmp	SHORT $LL2@DES_enc_re
$LN72@DES_enc_re:
; Line 167
	mov	ebx, DWORD PTR ?net@?1??DES_enc_read@@9@9
	movzx	esi, BYTE PTR [ebx]
	movzx	eax, BYTE PTR [ebx+1]
	movzx	ecx, BYTE PTR [ebx+2]
	shl	esi, 24					; 00000018H
	shl	eax, 16					; 00000010H
	or	esi, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [ebx+3]
	or	ecx, eax
	or	esi, ecx
; Line 172
	cmp	esi, 16384				; 00004000H
	ja	$LN19@DES_enc_re
; Line 176
	xor	edi, edi
	push	ebp
	cmp	esi, 8
	jge	SHORT $LN33@DES_enc_re
; Line 174
	lea	ebp, DWORD PTR [edi+8]
	jmp	SHORT $LL4@DES_enc_re
$LN33@DES_enc_re:
	lea	eax, DWORD PTR [esi+7]
	cdq
	and	edx, 7
	lea	ebp, DWORD PTR [edx+eax]
	and	ebp, -8					; fffffff8H
; Line 177
	test	ebp, ebp
	jle	SHORT $LN5@DES_enc_re
$LL4@DES_enc_re:
; Line 181
	mov	eax, ebp
	sub	eax, edi
	push	eax
	lea	eax, DWORD PTR [ebx+edi]
	push	eax
	push	DWORD PTR _fd$[esp+24]
	call	DWORD PTR __imp___read
	add	esp, 12					; 0000000cH
; Line 184
	cmp	eax, -1
	jne	SHORT $LN20@DES_enc_re
	call	DWORD PTR __imp___errno
	cmp	DWORD PTR [eax], 4
	je	SHORT $LN48@DES_enc_re
$LN46@DES_enc_re:
	pop	ebp
	pop	edi
	pop	ebx
; Line 188
	xor	eax, eax
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN20@DES_enc_re:
; Line 187
	test	eax, eax
	jle	SHORT $LN46@DES_enc_re
; Line 189
	add	edi, eax
$LN48@DES_enc_re:
; Line 177
	mov	ebx, DWORD PTR ?net@?1??DES_enc_read@@9@9
	cmp	edi, ebp
	jl	SHORT $LL4@DES_enc_re
$LN5@DES_enc_re:
; Line 193
	mov	edi, DWORD PTR _len$3$[esp+20]
; Line 195
	push	0
	push	DWORD PTR _iv$[esp+20]
	push	DWORD PTR _sched$[esp+24]
	push	esi
	cmp	edi, esi
	jge	SHORT $LN22@DES_enc_re
	test	BYTE PTR ?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9, 1
	push	DWORD PTR ?unnet@?1??DES_enc_read@@9@9
	push	ebx
	je	SHORT $LN24@DES_enc_re
	call	_DES_pcbc_encrypt
	jmp	SHORT $LN78@DES_enc_re
$LN24@DES_enc_re:
; Line 197
	call	_DES_cbc_encrypt
$LN78@DES_enc_re:
	add	esp, 24					; 00000018H
; Line 198
	push	edi
	push	DWORD PTR ?unnet@?1??DES_enc_read@@9@9
	push	DWORD PTR _buf$[esp+24]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 199
	mov	DWORD PTR ?unnet_start@?1??DES_enc_read@@9@9, edi
; Line 200
	sub	esi, edi
	mov	DWORD PTR ?unnet_left@?1??DES_enc_read@@9@9, esi
; Line 206
	mov	esi, edi
; Line 233
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	ebx
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN22@DES_enc_re:
; Line 214
	cmp	edi, ebp
	jge	SHORT $LN26@DES_enc_re
; Line 216
	test	BYTE PTR ?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9, 1
; Line 217
	push	DWORD PTR ?tmpbuf@?1??DES_enc_read@@9@9
	push	ebx
	je	SHORT $LN28@DES_enc_re
	call	_DES_pcbc_encrypt
	jmp	SHORT $LN79@DES_enc_re
$LN28@DES_enc_re:
; Line 219
	call	_DES_cbc_encrypt
$LN79@DES_enc_re:
	add	esp, 24					; 00000018H
; Line 225
	push	esi
	push	DWORD PTR ?tmpbuf@?1??DES_enc_read@@9@9
	push	DWORD PTR _buf$[esp+24]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 233
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	ebx
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN26@DES_enc_re:
; Line 227
	test	BYTE PTR ?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9, 1
; Line 228
	push	DWORD PTR _buf$[esp+32]
	push	ebx
	je	SHORT $LN30@DES_enc_re
	call	_DES_pcbc_encrypt
; Line 230
	add	esp, 24					; 00000018H
; Line 233
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	ebx
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN30@DES_enc_re:
; Line 230
	call	_DES_cbc_encrypt
	add	esp, 24					; 00000018H
; Line 233
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	ebx
	pop	esi
; Line 235
	pop	ecx
	ret	0
$LN19@DES_enc_re:
	pop	edi
	pop	ebx
; Line 173
	or	eax, -1
	pop	esi
; Line 235
	pop	ecx
	ret	0
_DES_enc_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __shadow_DES_rw_mode
_TEXT	SEGMENT
__shadow_DES_rw_mode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\enc_read.c
; Line 68
	mov	eax, OFFSET ?_hide_DES_rw_mode@?1??_shadow_DES_rw_mode@@9@9
	ret	0
__shadow_DES_rw_mode ENDP
_TEXT	ENDS
END

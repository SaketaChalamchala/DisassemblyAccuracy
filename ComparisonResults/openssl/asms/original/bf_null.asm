; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0M@DNNAMBAG@NULL?5filter?$AA@		; `string'
;	COMDAT ??_C@_0M@DNNAMBAG@NULL?5filter?$AA@
CONST	SEGMENT
??_C@_0M@DNNAMBAG@NULL?5filter?$AA@ DB 'NULL filter', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_methods_nullf DD 0211H
	DD	FLAT:??_C@_0M@DNNAMBAG@NULL?5filter?$AA@
	DD	FLAT:_nullf_write
	DD	FLAT:_nullf_read
	DD	FLAT:_nullf_puts
	DD	FLAT:_nullf_gets
	DD	FLAT:_nullf_ctrl
	DD	FLAT:_nullf_new
	DD	FLAT:_nullf_free
	DD	FLAT:_nullf_callback_ctrl
_DATA	ENDS
PUBLIC	_BIO_f_null
EXTRN	_BIO_clear_flags:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_callback_ctrl:PROC
EXTRN	_BIO_copy_next_retry:PROC
; Function compile flags: /Ogtpy
;	COMDAT _nullf_callback_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_fp$ = 16						; size = 4
_nullf_callback_ctrl PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 167
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LN4@nullf_call
; Line 175
	ret	0
$LN4@nullf_call:
; Line 171
	mov	DWORD PTR _b$[esp-4], eax
	jmp	_BIO_callback_ctrl
_nullf_callback_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _nullf_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_nullf_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 104
	xor	eax, eax
	cmp	DWORD PTR _a$[esp-4], eax
	setne	al
; Line 112
	ret	0
_nullf_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _nullf_new
_TEXT	SEGMENT
_bi$ = 8						; size = 4
_nullf_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 96
	mov	eax, DWORD PTR _bi$[esp-4]
	mov	DWORD PTR [eax+12], 1
; Line 97
	mov	DWORD PTR [eax+32], 0
; Line 98
	mov	DWORD PTR [eax+20], 0
; Line 99
	mov	eax, 1
; Line 100
	ret	0
_nullf_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _nullf_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_num$ = 16						; size = 4
_ptr$ = 20						; size = 4
_nullf_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 143
	push	edi
; Line 146
	mov	edi, DWORD PTR _b$[esp]
	mov	ecx, DWORD PTR [edi+36]
	test	ecx, ecx
	jne	SHORT $LN4@nullf_ctrl
; Line 147
	xor	eax, eax
	pop	edi
; Line 161
	ret	0
$LN4@nullf_ctrl:
; Line 148
	mov	eax, DWORD PTR _cmd$[esp]
	push	esi
	cmp	eax, 12					; 0000000cH
	je	SHORT $LN6@nullf_ctrl
	cmp	eax, 101				; 00000065H
	je	SHORT $LN5@nullf_ctrl
; Line 158
	push	DWORD PTR _ptr$[esp+4]
	push	DWORD PTR _num$[esp+8]
	push	eax
	push	ecx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	mov	esi, eax
	pop	esi
	pop	edi
; Line 161
	ret	0
$LN5@nullf_ctrl:
; Line 150
	push	15					; 0000000fH
	push	edi
	call	_BIO_clear_flags
; Line 151
	push	DWORD PTR _ptr$[esp+12]
	push	DWORD PTR _num$[esp+16]
	push	101					; 00000065H
	push	DWORD PTR [edi+36]
	call	_BIO_ctrl
; Line 152
	push	edi
	mov	esi, eax
	call	_BIO_copy_next_retry
	add	esp, 28					; 0000001cH
; Line 160
	mov	eax, esi
	pop	esi
	pop	edi
; Line 161
	ret	0
$LN6@nullf_ctrl:
; Line 155
	xor	esi, esi
; Line 160
	mov	eax, esi
	pop	esi
	pop	edi
; Line 161
	ret	0
_nullf_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _nullf_gets
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_buf$ = 12						; size = 4
_size$ = 16						; size = 4
_nullf_gets PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 179
	mov	eax, DWORD PTR _bp$[esp-4]
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LN2@nullf_gets
; Line 182
	ret	0
$LN2@nullf_gets:
; Line 181
	mov	DWORD PTR _bp$[esp-4], eax
	jmp	_BIO_gets
_nullf_gets ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _nullf_puts
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_str$ = 12						; size = 4
_nullf_puts PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 186
	mov	eax, DWORD PTR _bp$[esp-4]
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LN2@nullf_puts
; Line 189
	ret	0
$LN2@nullf_puts:
; Line 188
	mov	DWORD PTR _bp$[esp-4], eax
	jmp	_BIO_puts
_nullf_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _nullf_read
_TEXT	SEGMENT
_b$ = 8							; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_nullf_read PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 118
	mov	eax, DWORD PTR _out$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@nullf_read
; Line 126
	ret	0
$LN2@nullf_read:
	push	edi
; Line 120
	mov	edi, DWORD PTR _b$[esp]
	mov	ecx, DWORD PTR [edi+36]
	test	ecx, ecx
	jne	SHORT $LN3@nullf_read
; Line 121
	xor	eax, eax
	pop	edi
; Line 126
	ret	0
$LN3@nullf_read:
	push	esi
; Line 122
	push	DWORD PTR _outl$[esp+4]
	push	eax
	push	ecx
	call	_BIO_read
; Line 123
	push	15					; 0000000fH
	push	edi
	mov	esi, eax
	call	_BIO_clear_flags
; Line 124
	push	edi
	call	_BIO_copy_next_retry
	add	esp, 24					; 00000018H
; Line 125
	mov	eax, esi
	pop	esi
	pop	edi
; Line 126
	ret	0
_nullf_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _nullf_write
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_nullf_write PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 132
	mov	eax, DWORD PTR _in$[esp-4]
	test	eax, eax
	je	SHORT $LN3@nullf_writ
	mov	ecx, DWORD PTR _inl$[esp-4]
	test	ecx, ecx
	jle	SHORT $LN3@nullf_writ
; Line 134
	push	edi
	mov	edi, DWORD PTR _b$[esp]
	mov	edx, DWORD PTR [edi+36]
	test	edx, edx
	jne	SHORT $LN4@nullf_writ
; Line 135
	xor	eax, eax
	pop	edi
; Line 140
	ret	0
$LN4@nullf_writ:
	push	esi
; Line 136
	push	ecx
	push	eax
	push	edx
	call	_BIO_write
; Line 137
	push	15					; 0000000fH
	push	edi
	mov	esi, eax
	call	_BIO_clear_flags
; Line 138
	push	edi
	call	_BIO_copy_next_retry
	add	esp, 24					; 00000018H
; Line 139
	mov	eax, esi
	pop	esi
	pop	edi
; Line 140
	ret	0
$LN3@nullf_writ:
; Line 133
	xor	eax, eax
; Line 140
	ret	0
_nullf_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_f_null
_TEXT	SEGMENT
_BIO_f_null PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bf_null.c
; Line 91
	mov	eax, OFFSET _methods_nullf
; Line 92
	ret	0
_BIO_f_null ENDP
_TEXT	ENDS
END

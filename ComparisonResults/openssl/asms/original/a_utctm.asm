; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utctm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?min@?1??asn1_utctime_to_tm@@9@9 DD 00H			; `asn1_utctime_to_tm'::`2'::min
	DD	01H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?max@?1??asn1_utctime_to_tm@@9@9 DD 063H		; `asn1_utctime_to_tm'::`2'::max
	DD	0cH
	DD	01fH
	DD	017H
	DD	03bH
	DD	03bH
	DD	0cH
	DD	03bH
CONST	ENDS
PUBLIC	_ASN1_UTCTIME_check
PUBLIC	_ASN1_UTCTIME_set
PUBLIC	_ASN1_UTCTIME_adj
PUBLIC	_ASN1_UTCTIME_set_string
PUBLIC	_ASN1_UTCTIME_cmp_time_t
PUBLIC	_asn1_utctime_to_tm
PUBLIC	??_C@_0BI@BIJLLCMA@?4?2crypto?2asn1?2a_utctm?4c?$AA@ ; `string'
PUBLIC	??_C@_0BK@PMAAGDOP@?$CF02d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02dZ?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_OPENSSL_gmtime:PROC
EXTRN	_OPENSSL_gmtime_adj:PROC
EXTRN	_OPENSSL_gmtime_diff:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BK@PMAAGDOP@?$CF02d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02dZ?$AA@
CONST	SEGMENT
??_C@_0BK@PMAAGDOP@?$CF02d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02dZ?$AA@ DB '%'
	DB	'02d%02d%02d%02d%02d%02dZ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BIJLLCMA@?4?2crypto?2asn1?2a_utctm?4c?$AA@
CONST	SEGMENT
??_C@_0BI@BIJLLCMA@?4?2crypto?2asn1?2a_utctm?4c?$AA@ DB '.\crypto\asn1\a_'
	DB	'utctm.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_utctime_to_tm
_TEXT	SEGMENT
_l$1$ = -8						; size = 4
_offsign$1$ = -4					; size = 4
_tm$ = 8						; size = 4
tv426 = 12						; size = 1
_d$ = 12						; size = 4
_asn1_utctime_to_tm PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utctm.c
; Line 114
	mov	eax, 8
	call	__chkstk
	push	edi
; Line 120
	mov	edi, DWORD PTR _d$[esp+8]
	cmp	DWORD PTR [edi+4], 23			; 00000017H
	je	SHORT $LN10@asn1_utcti
; Line 121
	xor	eax, eax
	pop	edi
; Line 203
	add	esp, 8
	ret	0
$LN10@asn1_utcti:
; Line 122
	mov	ecx, DWORD PTR [edi]
; Line 123
	mov	edi, DWORD PTR [edi+8]
	push	ebx
	push	ebp
	push	esi
; Line 124
	xor	esi, esi
	mov	DWORD PTR _l$1$[esp+24], ecx
; Line 126
	cmp	ecx, 11					; 0000000bH
	jl	$err$71
; Line 128
	mov	ebp, DWORD PTR _tm$[esp+20]
	xor	edx, edx
	npad	7
$LL4@asn1_utcti:
; Line 129
	cmp	edx, 5
	jne	SHORT $LN12@asn1_utcti
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 90					; 0000005aH
	je	$LN13@asn1_utcti
	cmp	al, 43					; 0000002bH
	je	$LN13@asn1_utcti
	cmp	al, 45					; 0000002dH
	je	$LN13@asn1_utcti
$LN12@asn1_utcti:
; Line 135
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 48					; 00000030H
	jl	$err$71
	cmp	al, 57					; 00000039H
	jg	$err$71
; Line 137
	movsx	eax, al
; Line 138
	inc	esi
	sub	eax, 48					; 00000030H
	cmp	esi, ecx
	jg	$err$71
; Line 141
	mov	bl, BYTE PTR [esi+edi]
	cmp	bl, 48					; 00000030H
	jl	$err$71
	cmp	bl, 57					; 00000039H
	jg	$err$71
; Line 143
	lea	ecx, DWORD PTR [eax+eax*4]
; Line 144
	inc	esi
	movsx	eax, bl
	lea	eax, DWORD PTR [eax+ecx*2]
	mov	ecx, DWORD PTR _l$1$[esp+24]
	add	eax, -48				; ffffffd0H
	cmp	esi, ecx
	jg	$err$71
; Line 147
	cmp	eax, DWORD PTR ?min@?1??asn1_utctime_to_tm@@9@9[edx*4]
	jl	$err$71
	cmp	eax, DWORD PTR ?max@?1??asn1_utctime_to_tm@@9@9[edx*4]
	jg	$err$71
; Line 149
	test	ebp, ebp
	je	SHORT $LN2@asn1_utcti
; Line 150
	cmp	edx, 5
	ja	SHORT $LN2@asn1_utcti
	jmp	DWORD PTR $LN70@asn1_utcti[edx*4]
$LN24@asn1_utcti:
; Line 152
	cmp	eax, 50					; 00000032H
	jge	SHORT $LN47@asn1_utcti
	add	eax, 100				; 00000064H
$LN47@asn1_utcti:
	mov	DWORD PTR [ebp+20], eax
; Line 153
	jmp	SHORT $LN2@asn1_utcti
$LN25@asn1_utcti:
; Line 155
	dec	eax
	mov	DWORD PTR [ebp+16], eax
; Line 156
	jmp	SHORT $LN2@asn1_utcti
$LN26@asn1_utcti:
; Line 158
	mov	DWORD PTR [ebp+12], eax
; Line 159
	jmp	SHORT $LN2@asn1_utcti
$LN27@asn1_utcti:
; Line 161
	mov	DWORD PTR [ebp+8], eax
; Line 162
	jmp	SHORT $LN2@asn1_utcti
$LN28@asn1_utcti:
; Line 164
	mov	DWORD PTR [ebp+4], eax
; Line 165
	jmp	SHORT $LN2@asn1_utcti
$LN29@asn1_utcti:
; Line 167
	mov	DWORD PTR [ebp], eax
$LN2@asn1_utcti:
; Line 128
	inc	edx
	cmp	edx, 6
	jl	$LL4@asn1_utcti
	jmp	SHORT $LN65@asn1_utcti
$LN13@asn1_utcti:
; Line 131
	test	ebp, ebp
	je	SHORT $LN65@asn1_utcti
; Line 132
	mov	DWORD PTR [ebp], 0
$LN65@asn1_utcti:
; Line 172
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 90					; 0000005aH
	jne	SHORT $LN30@asn1_utcti
; Line 173
	inc	esi
; Line 200
	xor	eax, eax
	cmp	esi, DWORD PTR _l$1$[esp+24]
	pop	esi
	pop	ebp
	pop	ebx
	sete	al
	pop	edi
; Line 203
	add	esp, 8
	ret	0
$LN30@asn1_utcti:
; Line 174
	cmp	al, 43					; 0000002bH
	je	SHORT $LN33@asn1_utcti
	cmp	al, 45					; 0000002dH
	jne	$LN45@asn1_utcti
$LN33@asn1_utcti:
; Line 175
	xor	edx, edx
	cmp	al, 45					; 0000002dH
	setne	dl
; Line 176
	inc	esi
	xor	ebx, ebx
; Line 177
	lea	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [edx*2-1]
	mov	DWORD PTR _offsign$1$[esp+24], edx
	cmp	eax, ecx
	jg	$err$71
; Line 179
	lea	edx, DWORD PTR [ebx+6]
	npad	2
$LL9@asn1_utcti:
; Line 180
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 48					; 00000030H
	jl	$err$71
	cmp	al, 57					; 00000039H
	jg	$err$71
; Line 184
	mov	cl, BYTE PTR [esi+edi+1]
	movsx	eax, al
	sub	eax, 48					; 00000030H
	mov	BYTE PTR tv426[esp+20], cl
	cmp	cl, 48					; 00000030H
	jl	SHORT $err$71
	cmp	cl, 57					; 00000039H
	jg	SHORT $err$71
; Line 186
	lea	ecx, DWORD PTR [eax+eax*4]
	movsx	eax, BYTE PTR tv426[esp+20]
	lea	ecx, DWORD PTR [ecx-24]
	lea	ecx, DWORD PTR [eax+ecx*2]
; Line 187
	cmp	ecx, DWORD PTR ?min@?1??asn1_utctime_to_tm@@9@9[edx*4]
	jl	SHORT $err$71
	cmp	ecx, DWORD PTR ?max@?1??asn1_utctime_to_tm@@9@9[edx*4]
	jg	SHORT $err$71
; Line 189
	test	ebp, ebp
	je	SHORT $LN44@asn1_utcti
; Line 190
	cmp	edx, 6
	jne	SHORT $LN42@asn1_utcti
; Line 191
	imul	ebx, ecx, 3600
	jmp	SHORT $LN44@asn1_utcti
$LN42@asn1_utcti:
; Line 192
	cmp	edx, 7
	jne	SHORT $LN44@asn1_utcti
; Line 193
	mov	eax, ecx
	shl	eax, 4
	sub	eax, ecx
	lea	ebx, DWORD PTR [ebx+eax*4]
$LN44@asn1_utcti:
; Line 195
	inc	edx
	add	esi, 2
	cmp	edx, 8
	jl	SHORT $LL9@asn1_utcti
; Line 197
	test	ebx, ebx
	je	SHORT $LN45@asn1_utcti
	imul	ebx, DWORD PTR _offsign$1$[esp+24]
	push	ebx
	push	0
	push	ebp
	call	_OPENSSL_gmtime_adj
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$71
$LN45@asn1_utcti:
; Line 200
	xor	eax, eax
	cmp	esi, DWORD PTR _l$1$[esp+24]
	pop	esi
	pop	ebp
	pop	ebx
	sete	al
	pop	edi
; Line 203
	add	esp, 8
	ret	0
$err$71:
	pop	esi
	pop	ebp
	pop	ebx
; Line 202
	xor	eax, eax
	pop	edi
; Line 203
	add	esp, 8
	ret	0
$LN70@asn1_utcti:
	DD	$LN24@asn1_utcti
	DD	$LN25@asn1_utcti
	DD	$LN26@asn1_utcti
	DD	$LN27@asn1_utcti
	DD	$LN28@asn1_utcti
	DD	$LN29@asn1_utcti
_asn1_utctime_to_tm ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_UTCTIME_cmp_time_t
_TEXT	SEGMENT
_day$ = -84						; size = 4
_sec$ = -80						; size = 4
_stm$ = -76						; size = 36
_ttm$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_t$ = 12						; size = 8
_ASN1_UTCTIME_cmp_time_t PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utctm.c
; Line 290
	mov	eax, 84					; 00000054H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
	mov	eax, DWORD PTR _s$[esp+80]
; Line 294
	push	eax
	lea	eax, DWORD PTR _stm$[esp+88]
	push	eax
	call	_asn1_utctime_to_tm
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@ASN1_UTCTI
$LN11@ASN1_UTCTI:
; Line 295
	mov	eax, -2					; fffffffeH
; Line 312
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
$LN2@ASN1_UTCTI:
; Line 297
	lea	eax, DWORD PTR _ttm$[esp+84]
	push	eax
	lea	eax, DWORD PTR _t$[esp+84]
	push	eax
	call	_OPENSSL_gmtime
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@ASN1_UTCTI
; Line 300
	lea	eax, DWORD PTR _stm$[esp+84]
	push	eax
	lea	eax, DWORD PTR _ttm$[esp+88]
	push	eax
	lea	eax, DWORD PTR _sec$[esp+92]
	push	eax
	lea	eax, DWORD PTR _day$[esp+96]
	push	eax
	call	_OPENSSL_gmtime_diff
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN11@ASN1_UTCTI
; Line 303
	mov	eax, DWORD PTR _day$[esp+84]
	test	eax, eax
	jle	SHORT $LN10@ASN1_UTCTI
$LN12@ASN1_UTCTI:
; Line 304
	mov	eax, 1
; Line 312
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
$LN10@ASN1_UTCTI:
; Line 305
	jns	SHORT $LN6@ASN1_UTCTI
; Line 306
	or	eax, -1
; Line 312
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
$LN6@ASN1_UTCTI:
; Line 307
	mov	ecx, DWORD PTR _sec$[esp+84]
	test	ecx, ecx
	jg	SHORT $LN12@ASN1_UTCTI
; Line 309
	xor	eax, eax
	test	ecx, ecx
; Line 312
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	setns	al
	xor	ecx, esp
	dec	eax
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	0
_ASN1_UTCTIME_cmp_time_t ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_UTCTIME_set_string
_TEXT	SEGMENT
_t$ = -16						; size = 16
_s$ = 8							; size = 4
_str$ = 12						; size = 4
_ASN1_UTCTIME_set_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utctm.c
; Line 211
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
; Line 215
	mov	ebx, DWORD PTR _str$[esp+16]
	push	esi
	mov	esi, ebx
	mov	DWORD PTR _t$[esp+28], 23		; 00000017H
	lea	ecx, DWORD PTR [esi+1]
	npad	3
$LL9@ASN1_UTCTI:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL9@ASN1_UTCTI
; Line 207
	lea	eax, DWORD PTR _t$[esp+24]
; Line 216
	mov	DWORD PTR _t$[esp+32], ebx
; Line 207
	push	eax
; Line 215
	sub	esi, ecx
; Line 207
	push	0
; Line 215
	mov	DWORD PTR _t$[esp+32], esi
; Line 207
	call	_asn1_utctime_to_tm
	add	esp, 8
; Line 217
	test	eax, eax
	je	SHORT $LN2@ASN1_UTCTI
; Line 218
	push	edi
	mov	edi, DWORD PTR _s$[esp+24]
	test	edi, edi
	je	SHORT $LN4@ASN1_UTCTI
; Line 219
	push	esi
	push	ebx
	push	edi
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@ASN1_UTCTI
	pop	edi
	pop	esi
	pop	ebx
; Line 227
	add	esp, 16					; 00000010H
	ret	0
$LN5@ASN1_UTCTI:
; Line 222
	mov	DWORD PTR [edi+4], 23			; 00000017H
$LN4@ASN1_UTCTI:
	pop	edi
	pop	esi
; Line 224
	mov	eax, 1
	pop	ebx
; Line 227
	add	esp, 16					; 00000010H
	ret	0
$LN2@ASN1_UTCTI:
	pop	esi
; Line 226
	xor	eax, eax
	pop	ebx
; Line 227
	add	esp, 16					; 00000010H
	ret	0
_ASN1_UTCTIME_set_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_UTCTIME_adj
_TEXT	SEGMENT
_data$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_t$ = 12						; size = 8
_offset_day$ = 20					; size = 4
_offset_sec$ = 24					; size = 4
_ASN1_UTCTIME_adj PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utctm.c
; Line 236
	mov	eax, 40					; 00000028H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+40], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _s$[esp+52]
; Line 241
	xor	ebp, ebp
; Line 243
	test	edi, edi
	jne	SHORT $LN16@ASN1_UTCTI
; Line 245
	push	23					; 00000017H
	lea	ebp, DWORD PTR [edi+1]
	call	_ASN1_STRING_type_new
	mov	edi, eax
	add	esp, 4
; Line 247
	test	edi, edi
	je	$LN14@ASN1_UTCTI
$LN16@ASN1_UTCTI:
; Line 250
	lea	eax, DWORD PTR _data$[esp+56]
	push	eax
	lea	eax, DWORD PTR _t$[esp+56]
	push	eax
	call	_OPENSSL_gmtime
	mov	ebx, eax
	add	esp, 8
; Line 251
	test	ebx, ebx
	je	SHORT $err$20
; Line 254
	mov	ecx, DWORD PTR _offset_day$[esp+52]
	mov	eax, DWORD PTR _offset_sec$[esp+52]
	test	ecx, ecx
	jne	SHORT $LN6@ASN1_UTCTI
	test	eax, eax
	je	SHORT $LN7@ASN1_UTCTI
$LN6@ASN1_UTCTI:
; Line 255
	push	eax
	push	ecx
	push	ebx
	call	_OPENSSL_gmtime_adj
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$20
$LN7@ASN1_UTCTI:
; Line 259
	mov	eax, DWORD PTR [ebx+20]
	cmp	eax, 50					; 00000032H
	jl	SHORT $err$20
	cmp	eax, 150				; 00000096H
	jge	SHORT $err$20
; Line 262
	mov	esi, DWORD PTR [edi+8]
; Line 263
	test	esi, esi
	je	SHORT $LN11@ASN1_UTCTI
	cmp	DWORD PTR [edi], 20			; 00000014H
	jae	SHORT $LN10@ASN1_UTCTI
$LN11@ASN1_UTCTI:
; Line 264
	push	264					; 00000108H
	push	OFFSET ??_C@_0BI@BIJLLCMA@?4?2crypto?2asn1?2a_utctm?4c?$AA@
	push	20					; 00000014H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 265
	test	esi, esi
	jne	SHORT $LN12@ASN1_UTCTI
; Line 266
	push	266					; 0000010aH
	push	OFFSET ??_C@_0BI@BIJLLCMA@?4?2crypto?2asn1?2a_utctm?4c?$AA@
	push	65					; 00000041H
	push	218					; 000000daH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$20:
; Line 284
	test	ebp, ebp
	je	SHORT $LN14@ASN1_UTCTI
	test	edi, edi
	je	SHORT $LN14@ASN1_UTCTI
; Line 285
	push	edi
	call	_ASN1_STRING_free
	add	esp, 4
$LN14@ASN1_UTCTI:
; Line 286
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 287
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
$LN12@ASN1_UTCTI:
; Line 269
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN13@ASN1_UTCTI
; Line 270
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN13@ASN1_UTCTI:
; Line 271
	mov	DWORD PTR [edi+8], esi
$LN10@ASN1_UTCTI:
; Line 274
	push	DWORD PTR [ebx]
	mov	eax, DWORD PTR [ebx+16]
	mov	ecx, 100				; 00000064H
	push	DWORD PTR [ebx+4]
	inc	eax
	push	DWORD PTR [ebx+8]
	push	DWORD PTR [ebx+12]
	push	eax
	mov	eax, DWORD PTR [ebx+20]
	cdq
	idiv	ecx
	push	edx
	push	OFFSET ??_C@_0BK@PMAAGDOP@?$CF02d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02dZ?$AA@
	push	20					; 00000014H
	push	esi
	call	_BIO_snprintf
	add	esp, 36					; 00000024H
; Line 277
	lea	ecx, DWORD PTR [esi+1]
	npad	7
$LL18@ASN1_UTCTI:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL18@ASN1_UTCTI
	sub	esi, ecx
; Line 278
	mov	DWORD PTR [edi+4], 23			; 00000017H
; Line 287
	mov	ecx, DWORD PTR __$ArrayPad$[esp+56]
	mov	eax, edi
	mov	DWORD PTR [edi], esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
_ASN1_UTCTIME_adj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_UTCTIME_set
_TEXT	SEGMENT
_s$ = 8							; size = 4
_t$ = 12						; size = 8
_ASN1_UTCTIME_set PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utctm.c
; Line 231
	push	0
	push	0
	push	DWORD PTR _t$[esp+8]
	push	DWORD PTR _t$[esp+8]
	push	DWORD PTR _s$[esp+12]
	call	_ASN1_UTCTIME_adj
	add	esp, 20					; 00000014H
; Line 232
	ret	0
_ASN1_UTCTIME_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_UTCTIME_check
_TEXT	SEGMENT
_d$ = 8							; size = 4
_ASN1_UTCTIME_check PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utctm.c
; Line 207
	push	DWORD PTR _d$[esp-4]
	push	0
	call	_asn1_utctime_to_tm
	add	esp, 8
; Line 208
	ret	0
_ASN1_UTCTIME_check ENDP
_TEXT	ENDS
END

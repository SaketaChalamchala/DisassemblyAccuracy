; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_rsa_asn1_meths
PUBLIC	??_C@_03DICHAJGH@RSA?$AA@			; `string'
PUBLIC	??_C@_0BD@MHOEKPBI@OpenSSL?5RSA?5method?$AA@	; `string'
;	COMDAT ??_C@_0BD@MHOEKPBI@OpenSSL?5RSA?5method?$AA@
CONST	SEGMENT
??_C@_0BD@MHOEKPBI@OpenSSL?5RSA?5method?$AA@ DB 'OpenSSL RSA method', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03DICHAJGH@RSA?$AA@
CONST	SEGMENT
??_C@_03DICHAJGH@RSA?$AA@ DB 'RSA', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_rsa_asn1_meths DD 06H
	DD	06H
	DD	04H
	DD	FLAT:??_C@_03DICHAJGH@RSA?$AA@
	DD	FLAT:??_C@_0BD@MHOEKPBI@OpenSSL?5RSA?5method?$AA@
	DD	FLAT:_rsa_pub_decode
	DD	FLAT:_rsa_pub_encode
	DD	FLAT:_rsa_pub_cmp
	DD	FLAT:_rsa_pub_print
	DD	FLAT:_rsa_priv_decode
	DD	FLAT:_rsa_priv_encode
	DD	FLAT:_rsa_priv_print
	DD	FLAT:_int_rsa_size
	DD	FLAT:_rsa_bits
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_rsa_sig_print
	DD	FLAT:_int_rsa_free
	DD	FLAT:_rsa_pkey_ctrl
	DD	FLAT:_old_rsa_priv_decode
	DD	FLAT:_old_rsa_priv_encode
	DD	FLAT:_rsa_item_verify
	DD	FLAT:_rsa_item_sign
	DD	013H
	DD	06H
	DD	01H
	ORG $+96
CONST	ENDS
PUBLIC	??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@ ; `string'
PUBLIC	??_C@_0BH@JHLDJION@Private?9Key?3?5?$CI?$CFd?5bit?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_08OKDKAJKD@modulus?3?$AA@			; `string'
PUBLIC	??_C@_0BA@FAAMOFHC@publicExponent?3?$AA@	; `string'
PUBLIC	??_C@_0BG@HAJOCCOP@Public?9Key?3?5?$CI?$CFd?5bit?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_08GIMLILAA@Modulus?3?$AA@			; `string'
PUBLIC	??_C@_09DALHJPOO@Exponent?3?$AA@		; `string'
PUBLIC	??_C@_0BB@NFOLHHHJ@privateExponent?3?$AA@	; `string'
PUBLIC	??_C@_07PNLMLIF@prime1?3?$AA@			; `string'
PUBLIC	??_C@_07NJNHFNM@prime2?3?$AA@			; `string'
PUBLIC	??_C@_0L@OIOCMGKP@exponent1?3?$AA@		; `string'
PUBLIC	??_C@_0L@OKKEHIPG@exponent2?3?$AA@		; `string'
PUBLIC	??_C@_0N@GNAMJPHF@coefficient?3?$AA@		; `string'
PUBLIC	??_C@_0BL@KMBKPBGM@?5?$CIINVALID?5PSS?5PARAMETERS?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BB@PMMDHLKH@Hash?5Algorithm?3?5?$AA@	; `string'
PUBLIC	??_C@_0P@ODEAMLKF@sha1?5?$CIdefault?$CJ?$AA@	; `string'
PUBLIC	??_C@_0BB@HEAMLCPA@Mask?5Algorithm?3?5?$AA@	; `string'
PUBLIC	??_C@_06BIDGLIKJ@?5with?5?$AA@			; `string'
PUBLIC	??_C@_07DNODLGKM@INVALID?$AA@			; `string'
PUBLIC	??_C@_0BJ@NNFOENLD@mgf1?5with?5sha1?5?$CIdefault?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BA@BMPJFCCJ@Salt?5Length?3?50x?$AA@	; `string'
PUBLIC	??_C@_0N@CGLOPGL@14?5?$CIdefault?$CJ?$AA@	; `string'
PUBLIC	??_C@_0BC@EDKEKAHK@Trailer?5Field?3?50x?$AA@	; `string'
PUBLIC	??_C@_0N@FFIHJHFK@BC?5?$CIdefault?$CJ?$AA@	; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_indent:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_dup:PROC
EXTRN	_ASN1_INTEGER_new:PROC
EXTRN	_ASN1_OCTET_STRING_new:PROC
EXTRN	_ASN1_OCTET_STRING_free:PROC
EXTRN	_ASN1_OCTET_STRING_set:PROC
EXTRN	_i2a_ASN1_INTEGER:PROC
EXTRN	_i2a_ASN1_OBJECT:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_ASN1_INTEGER_get:PROC
EXTRN	_ASN1_bn_print:PROC
EXTRN	_ASN1_item_pack:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_find_sigid_algs:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_DigestVerifyInit:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_bits:PROC
EXTRN	_EVP_PKEY_size:PROC
EXTRN	_EVP_PKEY_assign:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_EVP_PKEY_CTX_get0_pkey:PROC
EXTRN	_RSA_size:PROC
EXTRN	_RSA_free:PROC
EXTRN	_d2i_RSAPublicKey:PROC
EXTRN	_i2d_RSAPublicKey:PROC
EXTRN	_d2i_RSAPrivateKey:PROC
EXTRN	_i2d_RSAPrivateKey:PROC
EXTRN	_RSA_PSS_PARAMS_new:PROC
EXTRN	_RSA_PSS_PARAMS_free:PROC
EXTRN	_d2i_RSA_PSS_PARAMS:PROC
EXTRN	_RSA_PSS_PARAMS_it:PROC
EXTRN	_RSA_OAEP_PARAMS_new:PROC
EXTRN	_RSA_OAEP_PARAMS_free:PROC
EXTRN	_d2i_RSA_OAEP_PARAMS:PROC
EXTRN	_RSA_OAEP_PARAMS_it:PROC
EXTRN	_PKCS7_SIGNER_INFO_get0_algs:PROC
EXTRN	_PKCS7_RECIP_INFO_get0_alg:PROC
EXTRN	_X509_signature_dump:PROC
EXTRN	_X509_ALGOR_set0:PROC
EXTRN	_X509_ALGOR_set_md:PROC
EXTRN	_X509_ALGOR_new:PROC
EXTRN	_X509_ALGOR_free:PROC
EXTRN	_d2i_X509_ALGOR:PROC
EXTRN	_X509_ALGOR_it:PROC
EXTRN	_PKCS8_pkey_set0:PROC
EXTRN	_PKCS8_pkey_get0:PROC
EXTRN	_X509_PUBKEY_set0_param:PROC
EXTRN	_X509_PUBKEY_get0_param:PROC
EXTRN	_CMS_RecipientInfo_get0_pkey_ctx:PROC
EXTRN	_CMS_RecipientInfo_ktri_get0_algs:PROC
EXTRN	_CMS_SignerInfo_get0_pkey_ctx:PROC
EXTRN	_CMS_SignerInfo_get0_algs:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0N@FFIHJHFK@BC?5?$CIdefault?$CJ?$AA@
CONST	SEGMENT
??_C@_0N@FFIHJHFK@BC?5?$CIdefault?$CJ?$AA@ DB 'BC (default)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EDKEKAHK@Trailer?5Field?3?50x?$AA@
CONST	SEGMENT
??_C@_0BC@EDKEKAHK@Trailer?5Field?3?50x?$AA@ DB 'Trailer Field: 0x', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CGLOPGL@14?5?$CIdefault?$CJ?$AA@
CONST	SEGMENT
??_C@_0N@CGLOPGL@14?5?$CIdefault?$CJ?$AA@ DB '14 (default)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BMPJFCCJ@Salt?5Length?3?50x?$AA@
CONST	SEGMENT
??_C@_0BA@BMPJFCCJ@Salt?5Length?3?50x?$AA@ DB 'Salt Length: 0x', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NNFOENLD@mgf1?5with?5sha1?5?$CIdefault?$CJ?$AA@
CONST	SEGMENT
??_C@_0BJ@NNFOENLD@mgf1?5with?5sha1?5?$CIdefault?$CJ?$AA@ DB 'mgf1 with s'
	DB	'ha1 (default)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07DNODLGKM@INVALID?$AA@
CONST	SEGMENT
??_C@_07DNODLGKM@INVALID?$AA@ DB 'INVALID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BIDGLIKJ@?5with?5?$AA@
CONST	SEGMENT
??_C@_06BIDGLIKJ@?5with?5?$AA@ DB ' with ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HEAMLCPA@Mask?5Algorithm?3?5?$AA@
CONST	SEGMENT
??_C@_0BB@HEAMLCPA@Mask?5Algorithm?3?5?$AA@ DB 'Mask Algorithm: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ODEAMLKF@sha1?5?$CIdefault?$CJ?$AA@
CONST	SEGMENT
??_C@_0P@ODEAMLKF@sha1?5?$CIdefault?$CJ?$AA@ DB 'sha1 (default)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PMMDHLKH@Hash?5Algorithm?3?5?$AA@
CONST	SEGMENT
??_C@_0BB@PMMDHLKH@Hash?5Algorithm?3?5?$AA@ DB 'Hash Algorithm: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KMBKPBGM@?5?$CIINVALID?5PSS?5PARAMETERS?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BL@KMBKPBGM@?5?$CIINVALID?5PSS?5PARAMETERS?$CJ?6?$AA@ DB ' (INVALI'
	DB	'D PSS PARAMETERS)', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GNAMJPHF@coefficient?3?$AA@
CONST	SEGMENT
??_C@_0N@GNAMJPHF@coefficient?3?$AA@ DB 'coefficient:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OKKEHIPG@exponent2?3?$AA@
CONST	SEGMENT
??_C@_0L@OKKEHIPG@exponent2?3?$AA@ DB 'exponent2:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OIOCMGKP@exponent1?3?$AA@
CONST	SEGMENT
??_C@_0L@OIOCMGKP@exponent1?3?$AA@ DB 'exponent1:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NJNHFNM@prime2?3?$AA@
CONST	SEGMENT
??_C@_07NJNHFNM@prime2?3?$AA@ DB 'prime2:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PNLMLIF@prime1?3?$AA@
CONST	SEGMENT
??_C@_07PNLMLIF@prime1?3?$AA@ DB 'prime1:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NFOLHHHJ@privateExponent?3?$AA@
CONST	SEGMENT
??_C@_0BB@NFOLHHHJ@privateExponent?3?$AA@ DB 'privateExponent:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DALHJPOO@Exponent?3?$AA@
CONST	SEGMENT
??_C@_09DALHJPOO@Exponent?3?$AA@ DB 'Exponent:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GIMLILAA@Modulus?3?$AA@
CONST	SEGMENT
??_C@_08GIMLILAA@Modulus?3?$AA@ DB 'Modulus:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HAJOCCOP@Public?9Key?3?5?$CI?$CFd?5bit?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BG@HAJOCCOP@Public?9Key?3?5?$CI?$CFd?5bit?$CJ?6?$AA@ DB 'Public-Ke'
	DB	'y: (%d bit)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FAAMOFHC@publicExponent?3?$AA@
CONST	SEGMENT
??_C@_0BA@FAAMOFHC@publicExponent?3?$AA@ DB 'publicExponent:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OKDKAJKD@modulus?3?$AA@
CONST	SEGMENT
??_C@_08OKDKAJKD@modulus?3?$AA@ DB 'modulus:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JHLDJION@Private?9Key?3?5?$CI?$CFd?5bit?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BH@JHLDJION@Private?9Key?3?5?$CI?$CFd?5bit?$CJ?6?$AA@ DB 'Private-'
	DB	'Key: (%d bit)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@ DB '.\crypto\rsa\rs'
	DB	'a_ameth.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_oaep_decode
_TEXT	SEGMENT
_alg$ = 8						; size = 4
_p$ = 12						; size = 4
_pmaskHash$ = 12					; size = 4
_rsa_oaep_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 774
	mov	eax, DWORD PTR _alg$[esp-4]
	push	esi
	mov	esi, DWORD PTR _pmaskHash$[esp]
	mov	DWORD PTR [esi], 0
	mov	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN3@rsa_oaep_d
	cmp	DWORD PTR [ecx], 16			; 00000010H
	jne	SHORT $LN3@rsa_oaep_d
; Line 776
	mov	eax, DWORD PTR [ecx+4]
	push	edi
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[esp+4], eax
; Line 777
	mov	eax, DWORD PTR [ecx+4]
; Line 778
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _p$[esp+8]
	push	eax
	push	0
	call	_d2i_RSA_OAEP_PARAMS
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 780
	test	edi, edi
	jne	SHORT $LN4@rsa_oaep_d
	pop	edi
	pop	esi
; Line 786
	ret	0
$LN4@rsa_oaep_d:
; Line 783
	push	DWORD PTR [edi+4]
	call	_rsa_mgf1_decode
	add	esp, 4
	mov	DWORD PTR [esi], eax
; Line 785
	mov	eax, edi
	pop	edi
	pop	esi
; Line 786
	ret	0
$LN3@rsa_oaep_d:
; Line 775
	xor	eax, eax
	pop	esi
; Line 786
	ret	0
_rsa_oaep_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_item_sign
_TEXT	SEGMENT
_pad_mode$ = 8						; size = 4
_ctx$ = 8						; size = 4
_it$ = 12						; size = 4
_asn$ = 16						; size = 4
_alg1$ = 20						; size = 4
_alg2$ = 24						; size = 4
_sig$ = 28						; size = 4
_rsa_item_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 738
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+16]
; Line 739
	lea	eax, DWORD PTR _pad_mode$[esp]
	push	eax
	push	0
	push	4102					; 00001006H
	push	-1
	push	6
	push	esi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN9@rsa_item_s
; Line 741
	mov	eax, DWORD PTR _pad_mode$[esp]
	cmp	eax, 1
	je	SHORT $LN4@rsa_item_s
; Line 743
	cmp	eax, 6
	jne	SHORT $LN4@rsa_item_s
; Line 745
	push	esi
	call	_rsa_ctx_to_pss
	mov	esi, eax
	add	esp, 4
; Line 746
	test	esi, esi
	je	SHORT $LN9@rsa_item_s
; Line 749
	cmp	DWORD PTR _alg2$[esp], 0
	je	SHORT $LN6@rsa_item_s
; Line 750
	push	esi
	call	_ASN1_STRING_dup
	add	esp, 4
; Line 751
	test	eax, eax
	jne	SHORT $LN7@rsa_item_s
; Line 752
	push	esi
	call	_ASN1_STRING_free
	add	esp, 4
$LN9@rsa_item_s:
; Line 753
	xor	eax, eax
	pop	esi
; Line 763
	ret	0
$LN7@rsa_item_s:
; Line 755
	push	eax
	push	16					; 00000010H
	push	912					; 00000390H
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg2$[esp+12]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
$LN6@rsa_item_s:
; Line 758
	push	esi
	push	16					; 00000010H
	push	912					; 00000390H
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg1$[esp+12]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 760
	mov	eax, 3
	pop	esi
; Line 763
	ret	0
$LN4@rsa_item_s:
; Line 762
	mov	eax, 2
	pop	esi
; Line 763
	ret	0
_rsa_item_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_item_verify
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_it$ = 12						; size = 4
_asn$ = 16						; size = 4
_sigalg$ = 20						; size = 4
_sig$ = 24						; size = 4
_pkey$ = 28						; size = 4
_rsa_item_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 695
	push	esi
; Line 697
	mov	esi, DWORD PTR _sigalg$[esp]
	push	DWORD PTR [esi]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 912				; 00000390H
	je	SHORT $LN2@rsa_item_v
; Line 698
	push	698					; 000002baH
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	155					; 0000009bH
	push	156					; 0000009cH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 699
	or	eax, -1
	pop	esi
; Line 706
	ret	0
$LN2@rsa_item_v:
; Line 701
	push	DWORD PTR _pkey$[esp]
	push	esi
	push	0
	push	DWORD PTR _ctx$[esp+12]
	call	_rsa_pss_to_ctx
	add	esp, 16					; 00000010H
	or	ecx, -1
	test	eax, eax
	mov	edx, 2
	cmovg	ecx, edx
	mov	eax, ecx
	pop	esi
; Line 706
	ret	0
_rsa_item_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_pss_to_ctx
_TEXT	SEGMENT
_checkmd$1 = -12					; size = 4
_md$1$ = -8						; size = 4
_mgf1md$1$ = -4						; size = 4
_ctx$ = 8						; size = 4
_pkctx$ = 12						; size = 4
_saltlen$1$ = 16					; size = 4
_maskHash$ = 16						; size = 4
_sigalg$ = 16						; size = 4
_pkey$ = 20						; size = 4
_rsa_pss_to_ctx PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 587
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	esi
; Line 594
	mov	esi, DWORD PTR _sigalg$[esp+16]
	or	ebx, -1
	push	DWORD PTR [esi]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 912				; 00000390H
	je	SHORT $LN2@rsa_pss_to
; Line 595
	push	595					; 00000253H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	155					; 0000009bH
	push	162					; 000000a2H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 596
	or	eax, ebx
	pop	esi
	pop	ebx
; Line 666
	add	esp, 12					; 0000000cH
	ret	0
$LN2@rsa_pss_to:
	push	ebp
	push	edi
; Line 599
	lea	eax, DWORD PTR _maskHash$[esp+24]
	push	eax
	push	esi
	call	_rsa_pss_decode
; Line 601
	mov	ebp, DWORD PTR _maskHash$[esp+32]
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	jne	SHORT $LN3@rsa_pss_to
; Line 602
	push	602					; 0000025aH
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	149					; 00000095H
	push	162					; 000000a2H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 603
	jmp	$err$21
$LN3@rsa_pss_to:
; Line 605
	push	ebp
	push	DWORD PTR [edi+4]
	call	_rsa_mgf1_to_md
	add	esp, 8
	mov	DWORD PTR _mgf1md$1$[esp+28], eax
; Line 606
	test	eax, eax
	je	$err$21
; Line 608
	push	DWORD PTR [edi]
	call	_rsa_algor_to_md
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _md$1$[esp+28], esi
; Line 609
	test	esi, esi
	je	$err$21
; Line 612
	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	je	SHORT $LN6@rsa_pss_to
; Line 613
	push	ecx
	call	_ASN1_INTEGER_get
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR _saltlen$1$[esp+24], ecx
; Line 619
	test	ecx, ecx
	jns	SHORT $LN7@rsa_pss_to
; Line 620
	push	620					; 0000026cH
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	150					; 00000096H
	push	162					; 000000a2H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 621
	jmp	$err$21
$LN6@rsa_pss_to:
; Line 624
	mov	DWORD PTR _saltlen$1$[esp+24], 20	; 00000014H
$LN7@rsa_pss_to:
; Line 630
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN9@rsa_pss_to
	push	eax
	call	_ASN1_INTEGER_get
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN9@rsa_pss_to
; Line 631
	push	631					; 00000277H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	139					; 0000008bH
	push	162					; 000000a2H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 632
	jmp	$err$21
$LN9@rsa_pss_to:
; Line 637
	mov	eax, DWORD PTR _pkey$[esp+24]
	test	eax, eax
	je	$LN10@rsa_pss_to
; Line 638
	push	eax
	push	0
	push	esi
	lea	eax, DWORD PTR _pkctx$[esp+36]
	push	eax
	push	DWORD PTR _ctx$[esp+40]
	call	_EVP_DigestVerifyInit
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$21
$LN14@rsa_pss_to:
; Line 650
	push	0
	push	6
	push	4097					; 00001001H
	push	-1
	push	6
	push	DWORD PTR _pkctx$[esp+44]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $err$21
; Line 653
	push	0
	push	DWORD PTR _saltlen$1$[esp+28]
	push	4098					; 00001002H
	push	24					; 00000018H
	push	6
	push	DWORD PTR _pkctx$[esp+44]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $err$21
; Line 656
	push	DWORD PTR _mgf1md$1$[esp+28]
	push	0
	push	4101					; 00001005H
	push	1016					; 000003f8H
	push	6
	push	DWORD PTR _pkctx$[esp+44]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	mov	ecx, 1
	test	eax, eax
	cmovg	ebx, ecx
$err$21:
; Line 662
	push	edi
	call	_RSA_PSS_PARAMS_free
	add	esp, 4
; Line 663
	test	ebp, ebp
	je	SHORT $LN18@rsa_pss_to
; Line 664
	push	ebp
	call	_X509_ALGOR_free
	add	esp, 4
$LN18@rsa_pss_to:
; Line 665
	pop	edi
	pop	ebp
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 666
	add	esp, 12					; 0000000cH
	ret	0
$LN10@rsa_pss_to:
; Line 642
	lea	eax, DWORD PTR _checkmd$1[esp+28]
	push	eax
	push	0
	push	13					; 0000000dH
	push	248					; 000000f8H
	push	-1
	push	DWORD PTR _pkctx$[esp+44]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $err$21
; Line 644
	push	DWORD PTR _checkmd$1[esp+28]
	call	_EVP_MD_type
	push	DWORD PTR _md$1$[esp+32]
	mov	esi, eax
	call	_EVP_MD_type
	add	esp, 8
	cmp	eax, esi
	je	$LN14@rsa_pss_to
; Line 645
	push	645					; 00000285H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	166					; 000000a6H
	push	162					; 000000a2H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 646
	jmp	SHORT $err$21
_rsa_pss_to_ctx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_ctx_to_pss
_TEXT	SEGMENT
_saltlen$ = -16						; size = 4
_sigmd$ = -12						; size = 4
_os$ = -8						; size = 4
_mgf1md$ = -4						; size = 4
_pkctx$ = 8						; size = 4
_rsa_ctx_to_pss PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 532
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	esi
; Line 536
	mov	esi, DWORD PTR _pkctx$[esp+20]
	push	edi
	push	esi
	mov	DWORD PTR _os$[esp+32], 0
	call	_EVP_PKEY_CTX_get0_pkey
	mov	ebx, eax
; Line 537
	xor	edi, edi
; Line 538
	lea	eax, DWORD PTR _sigmd$[esp+32]
	push	eax
	push	edi
	push	13					; 0000000dH
	push	248					; 000000f8H
	push	-1
	push	esi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	test	eax, eax
	jle	$LN17@rsa_ctx_to
; Line 540
	lea	eax, DWORD PTR _mgf1md$[esp+28]
	push	eax
	push	edi
	push	4104					; 00001008H
	push	1016					; 000003f8H
	push	6
	push	esi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$LN17@rsa_ctx_to
; Line 542
	lea	eax, DWORD PTR _saltlen$[esp+28]
	push	eax
	push	edi
	push	4103					; 00001007H
	push	24					; 00000018H
	push	6
	push	esi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN17@rsa_ctx_to
; Line 544
	mov	eax, DWORD PTR _saltlen$[esp+28]
	cmp	eax, -1
	jne	SHORT $LN5@rsa_ctx_to
; Line 545
	push	DWORD PTR _sigmd$[esp+28]
	call	_EVP_MD_size
	add	esp, 4
	mov	DWORD PTR _saltlen$[esp+28], eax
	jmp	SHORT $LN8@rsa_ctx_to
$LN5@rsa_ctx_to:
; Line 546
	cmp	eax, -2					; fffffffeH
	jne	SHORT $LN8@rsa_ctx_to
; Line 547
	push	DWORD PTR _sigmd$[esp+28]
	call	_EVP_MD_size
	mov	esi, -2					; fffffffeH
	push	ebx
	sub	esi, eax
	call	_EVP_PKEY_size
	add	eax, esi
; Line 548
	push	ebx
	mov	DWORD PTR _saltlen$[esp+40], eax
	call	_EVP_PKEY_bits
	dec	eax
	add	esp, 12					; 0000000cH
	test	al, 7
	jne	SHORT $LN8@rsa_ctx_to
; Line 549
	dec	DWORD PTR _saltlen$[esp+28]
$LN8@rsa_ctx_to:
; Line 551
	call	_RSA_PSS_PARAMS_new
	mov	esi, eax
; Line 552
	test	esi, esi
	je	SHORT $LN17@rsa_ctx_to
; Line 554
	cmp	DWORD PTR _saltlen$[esp+28], 20		; 00000014H
	je	SHORT $LN12@rsa_ctx_to
; Line 555
	call	_ASN1_INTEGER_new
	mov	DWORD PTR [esi+8], eax
; Line 556
	test	eax, eax
	je	SHORT $err$21
; Line 558
	push	DWORD PTR _saltlen$[esp+28]
	push	eax
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	je	SHORT $err$21
$LN12@rsa_ctx_to:
; Line 561
	push	DWORD PTR _sigmd$[esp+28]
	push	esi
	call	_rsa_md_to_algor
	add	esp, 8
	test	eax, eax
	je	SHORT $err$21
; Line 563
	push	DWORD PTR _mgf1md$[esp+28]
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	_rsa_md_to_mgf1
	add	esp, 8
	test	eax, eax
	je	SHORT $err$21
; Line 566
	lea	eax, DWORD PTR _os$[esp+28]
	push	eax
	call	_RSA_PSS_PARAMS_it
	push	eax
	push	esi
	call	_ASN1_item_pack
	add	esp, 12					; 0000000cH
	mov	ecx, 1
	test	eax, eax
	cmovne	edi, ecx
$err$21:
; Line 571
	push	esi
	call	_RSA_PSS_PARAMS_free
	add	esp, 4
; Line 572
	test	edi, edi
	je	SHORT $LN17@rsa_ctx_to
; Line 573
	mov	eax, DWORD PTR _os$[esp+28]
	pop	edi
	pop	esi
	pop	ebx
; Line 577
	add	esp, 16					; 00000010H
	ret	0
$LN17@rsa_ctx_to:
; Line 574
	mov	eax, DWORD PTR _os$[esp+28]
	test	eax, eax
	je	SHORT $LN18@rsa_ctx_to
; Line 575
	push	eax
	call	_ASN1_STRING_free
	add	esp, 4
$LN18@rsa_ctx_to:
; Line 576
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 577
	add	esp, 16					; 00000010H
	ret	0
_rsa_ctx_to_pss ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_mgf1_to_md
_TEXT	SEGMENT
_alg$ = 8						; size = 4
_maskHash$ = 12						; size = 4
_rsa_mgf1_to_md PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 507
	mov	eax, DWORD PTR _alg$[esp-4]
	test	eax, eax
	je	_EVP_sha1
; Line 510
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 911				; 0000038fH
	je	SHORT $LN3@rsa_mgf1_t
; Line 511
	push	511					; 000001ffH
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	153					; 00000099H
; Line 520
	push	159					; 0000009fH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 521
	xor	eax, eax
; Line 524
	ret	0
$LN3@rsa_mgf1_t:
; Line 514
	mov	eax, DWORD PTR _maskHash$[esp-4]
	test	eax, eax
	jne	SHORT $LN4@rsa_mgf1_t
; Line 515
	push	515					; 00000203H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	154					; 0000009aH
; Line 520
	push	159					; 0000009fH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 521
	xor	eax, eax
; Line 524
	ret	0
$LN4@rsa_mgf1_t:
; Line 518
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 12					; 0000000cH
; Line 519
	test	eax, eax
	jne	SHORT $LN1@rsa_mgf1_t
; Line 520
	push	520					; 00000208H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	151					; 00000097H
	push	159					; 0000009fH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 521
	xor	eax, eax
$LN1@rsa_mgf1_t:
; Line 524
	ret	0
_rsa_mgf1_to_md ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_algor_to_md
_TEXT	SEGMENT
_alg$ = 8						; size = 4
_rsa_algor_to_md PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 495
	mov	eax, DWORD PTR _alg$[esp-4]
	test	eax, eax
	je	_EVP_sha1
	push	esi
; Line 497
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 12					; 0000000cH
	mov	esi, eax
; Line 498
	test	esi, esi
	jne	SHORT $LN3@rsa_algor_
; Line 499
	push	499					; 000001f3H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	163					; 000000a3H
	push	157					; 0000009dH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN3@rsa_algor_:
; Line 500
	mov	eax, esi
	pop	esi
; Line 501
	ret	0
_rsa_algor_to_md ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_md_to_mgf1
_TEXT	SEGMENT
_stmp$ = -4						; size = 4
_palg$ = 8						; size = 4
_mgf1md$ = 12						; size = 4
_rsa_md_to_mgf1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 465
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 469
	mov	ebx, DWORD PTR _mgf1md$[esp+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _palg$[esp+12]
	xor	esi, esi
	push	ebx
	mov	DWORD PTR _stmp$[esp+20], esi
	mov	DWORD PTR [edi], esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 64					; 00000040H
	jne	SHORT $LN2@rsa_md_to_
; Line 470
	pop	edi
	lea	eax, DWORD PTR [esi+1]
	pop	esi
	pop	ebx
; Line 489
	pop	ecx
	ret	0
$LN2@rsa_md_to_:
; Line 454
	push	ebx
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 64					; 00000040H
	je	SHORT $LN14@rsa_md_to_
; Line 456
	call	_X509_ALGOR_new
	mov	esi, eax
; Line 457
	test	esi, esi
	je	SHORT $err$16
; Line 459
	push	ebx
	push	esi
	call	_X509_ALGOR_set_md
	add	esp, 8
$LN14@rsa_md_to_:
; Line 474
	lea	eax, DWORD PTR _stmp$[esp+16]
	push	eax
	call	_X509_ALGOR_it
	push	eax
	push	esi
	call	_ASN1_item_pack
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$16
; Line 476
	call	_X509_ALGOR_new
	mov	DWORD PTR [edi], eax
; Line 477
	test	eax, eax
	je	SHORT $err$16
; Line 479
	push	DWORD PTR _stmp$[esp+16]
	push	16					; 00000010H
	push	911					; 0000038fH
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR [edi]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 480
	mov	DWORD PTR _stmp$[esp+16], 0
; Line 482
	jmp	SHORT $LN6@rsa_md_to_
$err$16:
	mov	eax, DWORD PTR _stmp$[esp+16]
	test	eax, eax
	je	SHORT $LN6@rsa_md_to_
; Line 483
	push	eax
	call	_ASN1_STRING_free
	add	esp, 4
$LN6@rsa_md_to_:
; Line 484
	test	esi, esi
	je	SHORT $LN7@rsa_md_to_
; Line 485
	push	esi
	call	_X509_ALGOR_free
	add	esp, 4
$LN7@rsa_md_to_:
; Line 486
	xor	eax, eax
	cmp	DWORD PTR [edi], eax
	pop	edi
	pop	esi
	setne	al
	pop	ebx
; Line 489
	pop	ecx
	ret	0
_rsa_md_to_mgf1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_md_to_algor
_TEXT	SEGMENT
_palg$ = 8						; size = 4
_md$ = 12						; size = 4
_rsa_md_to_algor PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 454
	push	DWORD PTR _md$[esp-4]
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 64					; 00000040H
	je	SHORT $LN5@rsa_md_to_
; Line 456
	call	_X509_ALGOR_new
	mov	ecx, DWORD PTR _palg$[esp-4]
	mov	DWORD PTR [ecx], eax
; Line 457
	test	eax, eax
	jne	SHORT $LN3@rsa_md_to_
; Line 461
	ret	0
$LN3@rsa_md_to_:
; Line 459
	push	DWORD PTR _md$[esp-4]
	push	eax
	call	_X509_ALGOR_set_md
	add	esp, 8
$LN5@rsa_md_to_:
; Line 460
	mov	eax, 1
; Line 461
	ret	0
_rsa_md_to_algor ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_pkey_ctrl
_TEXT	SEGMENT
_alg$ = -4						; size = 4
_pkey$ = 8						; size = 4
_op$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
_rsa_pkey_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 402
	mov	eax, 4
	call	__chkstk
; Line 404
	mov	eax, DWORD PTR _op$[esp]
	dec	eax
	mov	DWORD PTR _alg$[esp+4], 0
	cmp	eax, 7
	ja	$LN18@rsa_pkey_c
	jmp	DWORD PTR $LN22@rsa_pkey_c[eax*4]
$LN4@rsa_pkey_c:
; Line 407
	cmp	DWORD PTR _arg1$[esp], 0
	jne	$LN19@rsa_pkey_c
; Line 408
	lea	eax, DWORD PTR _alg$[esp+4]
	push	eax
	push	0
	push	0
	push	DWORD PTR _arg2$[esp+12]
	call	_PKCS7_SIGNER_INFO_get0_algs
	add	esp, 16					; 00000010H
; Line 409
	jmp	SHORT $LN15@rsa_pkey_c
$LN6@rsa_pkey_c:
; Line 412
	cmp	DWORD PTR _arg1$[esp], 0
	jne	$LN19@rsa_pkey_c
; Line 413
	lea	eax, DWORD PTR _alg$[esp+4]
	push	eax
	push	DWORD PTR _arg2$[esp+4]
	call	_PKCS7_RECIP_INFO_get0_alg
	add	esp, 8
$LN15@rsa_pkey_c:
; Line 444
	cmp	DWORD PTR _alg$[esp+4], 0
	je	SHORT $LN19@rsa_pkey_c
; Line 445
	push	0
	push	5
	push	6
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg$[esp+16]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
	mov	eax, 1
; Line 449
	pop	ecx
	ret	0
$LN8@rsa_pkey_c:
; Line 417
	mov	eax, DWORD PTR _arg1$[esp]
	test	eax, eax
	jne	SHORT $LN9@rsa_pkey_c
; Line 418
	push	DWORD PTR _arg2$[esp]
	call	_rsa_cms_sign
	add	esp, 4
; Line 449
	pop	ecx
	ret	0
$LN9@rsa_pkey_c:
; Line 419
	cmp	eax, 1
	jne	SHORT $LN19@rsa_pkey_c
; Line 420
	push	DWORD PTR _arg2$[esp]
	call	_rsa_cms_verify
	add	esp, 4
; Line 449
	pop	ecx
	ret	0
$LN12@rsa_pkey_c:
; Line 424
	mov	eax, DWORD PTR _arg1$[esp]
	test	eax, eax
	jne	SHORT $LN13@rsa_pkey_c
; Line 425
	push	DWORD PTR _arg2$[esp]
	call	_rsa_cms_encrypt
	add	esp, 4
; Line 449
	pop	ecx
	ret	0
$LN13@rsa_pkey_c:
; Line 426
	cmp	eax, 1
	jne	SHORT $LN19@rsa_pkey_c
; Line 427
	push	DWORD PTR _arg2$[esp]
	call	_rsa_cms_decrypt
	add	esp, 4
; Line 449
	pop	ecx
	ret	0
$LN16@rsa_pkey_c:
; Line 431
	mov	eax, DWORD PTR _arg2$[esp]
	mov	DWORD PTR [eax], 0
$LN19@rsa_pkey_c:
; Line 432
	mov	eax, 1
; Line 449
	pop	ecx
	ret	0
$LN17@rsa_pkey_c:
; Line 436
	mov	eax, DWORD PTR _arg2$[esp]
	mov	DWORD PTR [eax], 672			; 000002a0H
; Line 437
	mov	eax, 1
; Line 449
	pop	ecx
	ret	0
$LN18@rsa_pkey_c:
; Line 440
	mov	eax, -2					; fffffffeH
; Line 449
	pop	ecx
	ret	0
	npad	3
$LN22@rsa_pkey_c:
	DD	$LN4@rsa_pkey_c
	DD	$LN6@rsa_pkey_c
	DD	$LN17@rsa_pkey_c
	DD	$LN18@rsa_pkey_c
	DD	$LN8@rsa_pkey_c
	DD	$LN18@rsa_pkey_c
	DD	$LN12@rsa_pkey_c
	DD	$LN16@rsa_pkey_c
_rsa_pkey_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_sig_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_rv$1$ = 12						; size = 4
_maskHash$1 = 12					; size = 4
_sigalg$ = 12						; size = 4
_sig$ = 16						; size = 4
_indent$ = 20						; size = 4
_pctx$ = 24						; size = 4
_rsa_sig_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 381
	push	esi
; Line 382
	mov	esi, DWORD PTR _sigalg$[esp]
	push	DWORD PTR [esi]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 912				; 00000390H
	jne	SHORT $LN2@rsa_sig_pr
; Line 386
	push	edi
	lea	eax, DWORD PTR _maskHash$1[esp+4]
	push	eax
	push	esi
	call	_rsa_pss_decode
; Line 387
	push	DWORD PTR _indent$[esp+12]
	mov	esi, DWORD PTR _maskHash$1[esp+16]
	mov	edi, eax
	push	esi
	push	edi
	push	DWORD PTR _bp$[esp+24]
	call	_rsa_pss_param_print
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rv$1$[esp+4], eax
; Line 388
	test	edi, edi
	je	SHORT $LN4@rsa_sig_pr
; Line 389
	push	edi
	call	_RSA_PSS_PARAMS_free
	add	esp, 4
$LN4@rsa_sig_pr:
; Line 390
	pop	edi
	test	esi, esi
	je	SHORT $LN5@rsa_sig_pr
; Line 391
	push	esi
	call	_X509_ALGOR_free
	add	esp, 4
$LN5@rsa_sig_pr:
; Line 392
	cmp	DWORD PTR _rv$1$[esp], 0
	jne	SHORT $LN7@rsa_sig_pr
$LN11@rsa_sig_pr:
; Line 393
	xor	eax, eax
	pop	esi
; Line 399
	ret	0
$LN7@rsa_sig_pr:
; Line 396
	mov	eax, DWORD PTR _sig$[esp]
	test	eax, eax
	je	SHORT $LN8@rsa_sig_pr
$LN10@rsa_sig_pr:
; Line 397
	push	DWORD PTR _indent$[esp]
	push	eax
	push	DWORD PTR _bp$[esp+8]
	call	_X509_signature_dump
	add	esp, 12					; 0000000cH
	pop	esi
; Line 399
	ret	0
$LN2@rsa_sig_pr:
; Line 394
	mov	eax, DWORD PTR _sig$[esp]
	test	eax, eax
	jne	SHORT $LN10@rsa_sig_pr
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bp$[esp+4]
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN11@rsa_sig_pr
$LN8@rsa_sig_pr:
; Line 398
	mov	eax, 1
	pop	esi
; Line 399
	ret	0
_rsa_sig_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_pss_param_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pss$ = 12						; size = 4
_maskHash$ = 16						; size = 4
_indent$ = 20						; size = 4
_rsa_pss_param_print PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 308
	push	ebp
	push	edi
; Line 310
	mov	edi, DWORD PTR _pss$[esp+4]
	xor	ebp, ebp
	test	edi, edi
	jne	SHORT $LN2@rsa_pss_pa
; Line 311
	push	OFFSET ??_C@_0BL@KMBKPBGM@?5?$CIINVALID?5PSS?5PARAMETERS?$CJ?6?$AA@
	push	DWORD PTR _bp$[esp+8]
	call	_BIO_puts
	add	esp, 8
	xor	ecx, ecx
	test	eax, eax
	setg	cl
	pop	edi
	mov	eax, ecx
	pop	ebp
; Line 377
	ret	0
$LN2@rsa_pss_pa:
	push	esi
; Line 315
	mov	esi, DWORD PTR _bp$[esp+8]
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	$err$47
; Line 317
	push	ebx
	mov	ebx, DWORD PTR _indent$[esp+12]
	push	128					; 00000080H
	push	ebx
	push	esi
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN36@rsa_pss_pa
; Line 319
	push	OFFSET ??_C@_0BB@PMMDHLKH@Hash?5Algorithm?3?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	$LN36@rsa_pss_pa
; Line 322
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN7@rsa_pss_pa
; Line 323
	push	DWORD PTR [eax]
	push	esi
	call	_i2a_ASN1_OBJECT
; Line 325
	jmp	SHORT $LN38@rsa_pss_pa
$LN7@rsa_pss_pa:
	push	OFFSET ??_C@_0P@ODEAMLKF@sha1?5?$CIdefault?$CJ?$AA@
	push	esi
	call	_BIO_puts
$LN38@rsa_pss_pa:
	add	esp, 8
	test	eax, eax
	jle	$LN36@rsa_pss_pa
; Line 328
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	$LN36@rsa_pss_pa
; Line 331
	push	128					; 00000080H
	push	ebx
	push	esi
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN36@rsa_pss_pa
; Line 334
	push	OFFSET ??_C@_0BB@HEAMLCPA@Mask?5Algorithm?3?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	$LN36@rsa_pss_pa
; Line 336
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN14@rsa_pss_pa
; Line 337
	push	DWORD PTR [eax]
	push	esi
	call	_i2a_ASN1_OBJECT
	add	esp, 8
	test	eax, eax
	jle	$LN36@rsa_pss_pa
; Line 339
	push	OFFSET ??_C@_06BIDGLIKJ@?5with?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	$LN36@rsa_pss_pa
; Line 341
	mov	eax, DWORD PTR _maskHash$[esp+12]
	test	eax, eax
	je	SHORT $LN18@rsa_pss_pa
; Line 342
	push	DWORD PTR [eax]
	push	esi
	call	_i2a_ASN1_OBJECT
; Line 344
	jmp	SHORT $LN40@rsa_pss_pa
$LN18@rsa_pss_pa:
	push	OFFSET ??_C@_07DNODLGKM@INVALID?$AA@
; Line 346
	jmp	SHORT $LN41@rsa_pss_pa
$LN14@rsa_pss_pa:
	push	OFFSET ??_C@_0BJ@NNFOENLD@mgf1?5with?5sha1?5?$CIdefault?$CJ?$AA@
$LN41@rsa_pss_pa:
	push	esi
	call	_BIO_puts
$LN40@rsa_pss_pa:
	add	esp, 8
	test	eax, eax
	jle	$LN36@rsa_pss_pa
; Line 348
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
; Line 350
	push	128					; 00000080H
	push	ebx
	push	esi
	call	_BIO_indent
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN36@rsa_pss_pa
; Line 352
	push	OFFSET ??_C@_0BA@BMPJFCCJ@Salt?5Length?3?50x?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	$LN36@rsa_pss_pa
; Line 354
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN25@rsa_pss_pa
; Line 355
	push	eax
	push	esi
	call	_i2a_ASN1_INTEGER
; Line 357
	jmp	SHORT $LN43@rsa_pss_pa
$LN25@rsa_pss_pa:
	push	OFFSET ??_C@_0N@CGLOPGL@14?5?$CIdefault?$CJ?$AA@
	push	esi
	call	_BIO_puts
$LN43@rsa_pss_pa:
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN36@rsa_pss_pa
; Line 359
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
; Line 361
	push	128					; 00000080H
	push	ebx
	push	esi
	call	_BIO_indent
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN36@rsa_pss_pa
; Line 363
	push	OFFSET ??_C@_0BC@EDKEKAHK@Trailer?5Field?3?50x?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN36@rsa_pss_pa
; Line 365
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN31@rsa_pss_pa
; Line 366
	push	eax
	push	esi
	call	_i2a_ASN1_INTEGER
; Line 368
	jmp	SHORT $LN45@rsa_pss_pa
$LN31@rsa_pss_pa:
	push	OFFSET ??_C@_0N@FFIHJHFK@BC?5?$CIdefault?$CJ?$AA@
	push	esi
	call	_BIO_puts
$LN45@rsa_pss_pa:
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN36@rsa_pss_pa
; Line 370
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
; Line 372
	mov	ebp, 1
$LN36@rsa_pss_pa:
	pop	ebx
$err$47:
	pop	esi
	pop	edi
; Line 375
	mov	eax, ebp
	pop	ebp
; Line 377
	ret	0
_rsa_pss_param_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_pss_decode
_TEXT	SEGMENT
_alg$ = 8						; size = 4
_p$ = 12						; size = 4
_pmaskHash$ = 12					; size = 4
_rsa_pss_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 292
	mov	eax, DWORD PTR _alg$[esp-4]
	push	esi
	mov	esi, DWORD PTR _pmaskHash$[esp]
	mov	DWORD PTR [esi], 0
	mov	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN3@rsa_pss_de
	cmp	DWORD PTR [ecx], 16			; 00000010H
	jne	SHORT $LN3@rsa_pss_de
; Line 294
	mov	eax, DWORD PTR [ecx+4]
	push	edi
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[esp+4], eax
; Line 295
	mov	eax, DWORD PTR [ecx+4]
; Line 296
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _p$[esp+8]
	push	eax
	push	0
	call	_d2i_RSA_PSS_PARAMS
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 298
	test	edi, edi
	jne	SHORT $LN4@rsa_pss_de
	pop	edi
	pop	esi
; Line 304
	ret	0
$LN4@rsa_pss_de:
; Line 301
	push	DWORD PTR [edi+4]
	call	_rsa_mgf1_decode
	add	esp, 4
	mov	DWORD PTR [esi], eax
; Line 303
	mov	eax, edi
	pop	edi
	pop	esi
; Line 304
	ret	0
$LN3@rsa_pss_de:
; Line 293
	xor	eax, eax
	pop	esi
; Line 304
	ret	0
_rsa_pss_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_mgf1_decode
_TEXT	SEGMENT
_p$ = 8							; size = 4
_alg$ = 8						; size = 4
_rsa_mgf1_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 268
	push	esi
; Line 271
	mov	esi, DWORD PTR _alg$[esp]
	test	esi, esi
	je	SHORT $LN3@rsa_mgf1_d
	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN3@rsa_mgf1_d
; Line 273
	push	DWORD PTR [esi]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 911				; 0000038fH
	jne	SHORT $LN3@rsa_mgf1_d
; Line 275
	mov	ecx, DWORD PTR [esi+4]
	cmp	DWORD PTR [ecx], 16			; 00000010H
	jne	SHORT $LN3@rsa_mgf1_d
; Line 278
	mov	eax, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[esp], eax
; Line 279
	mov	eax, DWORD PTR [ecx+4]
; Line 280
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _p$[esp+4]
	push	eax
	push	0
	call	_d2i_X509_ALGOR
	add	esp, 12					; 0000000cH
	pop	esi
; Line 281
	ret	0
$LN3@rsa_mgf1_d:
; Line 272
	xor	eax, eax
	pop	esi
; Line 281
	ret	0
_rsa_mgf1_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_priv_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_ctx$ = 20						; size = 4
_rsa_priv_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 263
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	1
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax+20]
	push	DWORD PTR _bp$[esp+8]
	call	_do_rsa_print
	add	esp, 16					; 00000010H
; Line 264
	ret	0
_rsa_priv_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_pub_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_ctx$ = 20						; size = 4
_rsa_pub_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 257
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	0
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax+20]
	push	DWORD PTR _bp$[esp+8]
	call	_do_rsa_print
	add	esp, 16					; 00000010H
; Line 258
	ret	0
_rsa_pub_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_rsa_print
_TEXT	SEGMENT
_mod_len$1$ = -4					; size = 4
_bp$ = 8						; size = 4
_s$1$ = 12						; size = 4
_x$ = 12						; size = 4
_off$ = 16						; size = 4
_priv$ = 20						; size = 4
_do_rsa_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 185
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	esi
; Line 192
	mov	esi, DWORD PTR _x$[esp+8]
	push	edi
	xor	edi, edi
	mov	DWORD PTR _mod_len$1$[esp+16], 0
	mov	eax, DWORD PTR [esi+16]
; Line 178
	test	eax, eax
	je	SHORT $LN23@do_rsa_pri
; Line 180
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	test	eax, eax
	cmovne	edi, eax
$LN23@do_rsa_pri:
; Line 193
	mov	eax, DWORD PTR [esi+20]
; Line 178
	test	eax, eax
	je	SHORT $LN27@do_rsa_pri
; Line 180
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN27@do_rsa_pri:
; Line 195
	cmp	DWORD PTR _priv$[esp+12], 0
	je	$LN51@do_rsa_pri
; Line 196
	mov	eax, DWORD PTR [esi+24]
; Line 178
	test	eax, eax
	je	SHORT $LN31@do_rsa_pri
; Line 180
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN31@do_rsa_pri:
; Line 197
	mov	eax, DWORD PTR [esi+28]
; Line 178
	test	eax, eax
	je	SHORT $LN35@do_rsa_pri
; Line 180
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN35@do_rsa_pri:
; Line 198
	mov	eax, DWORD PTR [esi+32]
; Line 178
	test	eax, eax
	je	SHORT $LN39@do_rsa_pri
; Line 180
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN39@do_rsa_pri:
; Line 199
	mov	eax, DWORD PTR [esi+36]
; Line 178
	test	eax, eax
	je	SHORT $LN43@do_rsa_pri
; Line 180
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN43@do_rsa_pri:
; Line 200
	mov	eax, DWORD PTR [esi+40]
; Line 178
	test	eax, eax
	je	SHORT $LN47@do_rsa_pri
; Line 180
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN47@do_rsa_pri:
; Line 201
	mov	eax, DWORD PTR [esi+44]
; Line 178
	test	eax, eax
	je	SHORT $LN51@do_rsa_pri
; Line 180
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN51@do_rsa_pri:
; Line 204
	push	204					; 000000ccH
	lea	eax, DWORD PTR [edi+10]
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 205
	test	ebx, ebx
	jne	SHORT $LN3@do_rsa_pri
; Line 206
	push	206					; 000000ceH
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	65					; 00000041H
	push	146					; 00000092H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 251
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 252
	pop	ecx
	ret	0
$LN3@do_rsa_pri:
; Line 210
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN4@do_rsa_pri
; Line 211
	push	eax
	call	_BN_num_bits
	add	esp, 4
	mov	DWORD PTR _mod_len$1$[esp+16], eax
$LN4@do_rsa_pri:
; Line 213
	mov	edi, DWORD PTR _bp$[esp+12]
	push	ebp
	mov	ebp, DWORD PTR _off$[esp+16]
	push	128					; 00000080H
	push	ebp
	push	edi
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN63@do_rsa_pri
; Line 216
	cmp	DWORD PTR _priv$[esp+16], 0
	je	SHORT $LN6@do_rsa_pri
	cmp	DWORD PTR [esi+24], 0
	je	SHORT $LN6@do_rsa_pri
; Line 218
	push	DWORD PTR _mod_len$1$[esp+20]
	push	OFFSET ??_C@_0BH@JHLDJION@Private?9Key?3?5?$CI?$CFd?5bit?$CJ?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN63@do_rsa_pri
; Line 220
	mov	eax, OFFSET ??_C@_08OKDKAJKD@modulus?3?$AA@
; Line 221
	mov	DWORD PTR _s$1$[esp+16], OFFSET ??_C@_0BA@FAAMOFHC@publicExponent?3?$AA@
; Line 222
	jmp	SHORT $LN7@do_rsa_pri
$LN6@do_rsa_pri:
; Line 224
	push	DWORD PTR _mod_len$1$[esp+20]
	push	OFFSET ??_C@_0BG@HAJOCCOP@Public?9Key?3?5?$CI?$CFd?5bit?$CJ?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN63@do_rsa_pri
; Line 226
	mov	eax, OFFSET ??_C@_08GIMLILAA@Modulus?3?$AA@
; Line 227
	mov	DWORD PTR _s$1$[esp+16], OFFSET ??_C@_09DALHJPOO@Exponent?3?$AA@
$LN7@do_rsa_pri:
; Line 229
	push	ebp
	push	ebx
	push	DWORD PTR [esi+16]
	push	eax
	push	edi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN63@do_rsa_pri
; Line 231
	push	ebp
	push	ebx
	push	DWORD PTR [esi+20]
	push	DWORD PTR _s$1$[esp+28]
	push	edi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN63@do_rsa_pri
; Line 233
	cmp	DWORD PTR _priv$[esp+16], 0
	je	$LN18@do_rsa_pri
; Line 234
	push	ebp
	push	ebx
	push	DWORD PTR [esi+24]
	push	OFFSET ??_C@_0BB@NFOLHHHJ@privateExponent?3?$AA@
	push	edi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN63@do_rsa_pri
; Line 236
	push	ebp
	push	ebx
	push	DWORD PTR [esi+28]
	push	OFFSET ??_C@_07PNLMLIF@prime1?3?$AA@
	push	edi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN63@do_rsa_pri
; Line 238
	push	ebp
	push	ebx
	push	DWORD PTR [esi+32]
	push	OFFSET ??_C@_07NJNHFNM@prime2?3?$AA@
	push	edi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN63@do_rsa_pri
; Line 240
	push	ebp
	push	ebx
	push	DWORD PTR [esi+36]
	push	OFFSET ??_C@_0L@OIOCMGKP@exponent1?3?$AA@
	push	edi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN63@do_rsa_pri
; Line 242
	push	ebp
	push	ebx
	push	DWORD PTR [esi+40]
	push	OFFSET ??_C@_0L@OKKEHIPG@exponent2?3?$AA@
	push	edi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN63@do_rsa_pri
; Line 244
	push	ebp
	push	ebx
	push	DWORD PTR [esi+44]
	push	OFFSET ??_C@_0N@GNAMJPHF@coefficient?3?$AA@
	push	edi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN63@do_rsa_pri
$LN18@do_rsa_pri:
; Line 250
	push	ebx
	mov	esi, 1
	call	_CRYPTO_free
	add	esp, 4
; Line 251
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 252
	pop	ecx
	ret	0
$LN63@do_rsa_pri:
	xor	esi, esi
$err$66:
; Line 250
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
; Line 251
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 252
	pop	ecx
	ret	0
_do_rsa_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _update_buflen
_TEXT	SEGMENT
_b$ = 8							; size = 4
_pbuflen$ = 12						; size = 4
_update_buflen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 178
	mov	eax, DWORD PTR _b$[esp-4]
	test	eax, eax
	je	SHORT $LN3@update_buf
; Line 180
	push	eax
	call	_BN_num_bits
	mov	ecx, DWORD PTR _pbuflen$[esp]
	add	eax, 7
	cdq
	add	esp, 4
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	DWORD PTR [ecx], eax
	jae	SHORT $LN3@update_buf
; Line 181
	mov	DWORD PTR [ecx], eax
$LN3@update_buf:
; Line 182
	ret	0
_update_buflen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_rsa_free
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_int_rsa_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 172
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR [eax+20]
	call	_RSA_free
	pop	ecx
; Line 173
	ret	0
_int_rsa_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_bits
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_rsa_bits PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 167
	mov	eax, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	push	DWORD PTR [eax+16]
	call	_BN_num_bits
	add	esp, 4
; Line 168
	ret	0
_rsa_bits ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_rsa_size
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_int_rsa_size PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 162
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR [eax+20]
	call	_RSA_size
	add	esp, 4
; Line 163
	ret	0
_int_rsa_size ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_priv_decode
_TEXT	SEGMENT
_pklen$ = -8						; size = 4
_p$ = -4						; size = 4
_pkey$ = 8						; size = 4
_p8$ = 12						; size = 4
_rsa_priv_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 152
	mov	eax, 8
	call	__chkstk
; Line 155
	push	DWORD PTR _p8$[esp+4]
	lea	eax, DWORD PTR _pklen$[esp+12]
	push	0
	push	eax
	lea	eax, DWORD PTR _p$[esp+20]
	push	eax
	push	0
	call	_PKCS8_pkey_get0
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN7@rsa_priv_d
; Line 118
	push	DWORD PTR _pklen$[esp+8]
	lea	eax, DWORD PTR _p$[esp+12]
	push	eax
	push	0
	call	_d2i_RSAPrivateKey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@rsa_priv_d
; Line 119
	push	119					; 00000077H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	4
	push	147					; 00000093H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN7@rsa_priv_d:
; Line 120
	xor	eax, eax
; Line 158
	add	esp, 8
	ret	0
$LN5@rsa_priv_d:
; Line 122
	push	eax
	push	6
	push	DWORD PTR _pkey$[esp+12]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 123
	mov	eax, 1
; Line 158
	add	esp, 8
	ret	0
_rsa_priv_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_priv_encode
_TEXT	SEGMENT
_rk$ = -4						; size = 4
_p8$ = 8						; size = 4
_pkey$ = 12						; size = 4
_rsa_priv_encode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 132
	mov	eax, 4
	call	__chkstk
; Line 135
	lea	eax, DWORD PTR _rk$[esp+4]
	mov	DWORD PTR _rk$[esp+4], 0
	push	eax
	mov	eax, DWORD PTR _pkey$[esp+4]
	push	DWORD PTR [eax+20]
	call	_i2d_RSAPrivateKey
	add	esp, 8
; Line 137
	test	eax, eax
	jg	SHORT $LN2@rsa_priv_e
; Line 138
	push	138					; 0000008aH
$LN5@rsa_priv_e:
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	65					; 00000041H
	push	138					; 0000008aH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 139
	xor	eax, eax
; Line 149
	pop	ecx
	ret	0
$LN2@rsa_priv_e:
; Line 142
	push	eax
	push	DWORD PTR _rk$[esp+8]
	push	0
	push	5
	push	0
	push	6
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _p8$[esp+24]
	call	_PKCS8_pkey_set0
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN3@rsa_priv_e
; Line 144
	push	144					; 00000090H
; Line 145
	jmp	SHORT $LN5@rsa_priv_e
$LN3@rsa_priv_e:
; Line 148
	mov	eax, 1
; Line 149
	pop	ecx
	ret	0
_rsa_priv_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _old_rsa_priv_encode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_old_rsa_priv_encode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 128
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR _pder$[esp-4]
	push	DWORD PTR [eax+20]
	call	_i2d_RSAPrivateKey
	add	esp, 8
; Line 129
	ret	0
_old_rsa_priv_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _old_rsa_priv_decode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_derlen$ = 16						; size = 4
_old_rsa_priv_decode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 118
	push	DWORD PTR _derlen$[esp-4]
	push	DWORD PTR _pder$[esp]
	push	0
	call	_d2i_RSAPrivateKey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@old_rsa_pr
; Line 119
	push	119					; 00000077H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	4
	push	147					; 00000093H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 120
	xor	eax, eax
; Line 124
	ret	0
$LN2@old_rsa_pr:
; Line 122
	push	eax
	push	6
	push	DWORD PTR _pkey$[esp+4]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 123
	mov	eax, 1
; Line 124
	ret	0
_old_rsa_priv_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_pub_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_rsa_pub_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 107
	push	esi
; Line 109
	mov	esi, DWORD PTR _a$[esp]
	push	edi
	mov	edi, DWORD PTR _b$[esp+4]
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+16]
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+16]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@rsa_pub_cm
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+20]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@rsa_pub_cm
; Line 111
	pop	edi
	mov	eax, 1
	pop	esi
; Line 112
	ret	0
$LN3@rsa_pub_cm:
	pop	edi
; Line 110
	xor	eax, eax
	pop	esi
; Line 112
	ret	0
_rsa_pub_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_pub_decode
_TEXT	SEGMENT
_pklen$ = -8						; size = 4
_p$ = -4						; size = 4
_pkey$ = 8						; size = 4
_pubkey$ = 12						; size = 4
_rsa_pub_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 92
	mov	eax, 8
	call	__chkstk
; Line 96
	push	DWORD PTR _pubkey$[esp+4]
	lea	eax, DWORD PTR _pklen$[esp+12]
	push	0
	push	eax
	lea	eax, DWORD PTR _p$[esp+20]
	push	eax
	push	0
	call	_X509_PUBKEY_get0_param
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN5@rsa_pub_de
; Line 98
	push	DWORD PTR _pklen$[esp+8]
	lea	eax, DWORD PTR _p$[esp+12]
	push	eax
	push	0
	call	_d2i_RSAPublicKey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@rsa_pub_de
; Line 99
	push	99					; 00000063H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	4
	push	139					; 0000008bH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN5@rsa_pub_de:
; Line 100
	xor	eax, eax
; Line 104
	add	esp, 8
	ret	0
$LN3@rsa_pub_de:
; Line 102
	push	eax
	push	6
	push	DWORD PTR _pkey$[esp+12]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 103
	mov	eax, 1
; Line 104
	add	esp, 8
	ret	0
_rsa_pub_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_pub_encode
_TEXT	SEGMENT
_penc$ = -4						; size = 4
_pk$ = 8						; size = 4
_pkey$ = 12						; size = 4
_rsa_pub_encode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 77
	mov	eax, 4
	call	__chkstk
; Line 80
	lea	eax, DWORD PTR _penc$[esp+4]
	mov	DWORD PTR _penc$[esp+4], 0
	push	eax
	mov	eax, DWORD PTR _pkey$[esp+4]
	push	DWORD PTR [eax+20]
	call	_i2d_RSAPublicKey
	add	esp, 8
; Line 81
	test	eax, eax
	jle	SHORT $LN5@rsa_pub_en
; Line 83
	push	eax
	push	DWORD PTR _penc$[esp+8]
	push	0
	push	5
	push	6
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _pk$[esp+20]
	call	_X509_PUBKEY_set0_param
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN3@rsa_pub_en
; Line 85
	mov	eax, 1
; Line 89
	pop	ecx
	ret	0
$LN3@rsa_pub_en:
; Line 87
	push	DWORD PTR _penc$[esp+4]
	call	_CRYPTO_free
	add	esp, 4
$LN5@rsa_pub_en:
; Line 88
	xor	eax, eax
; Line 89
	pop	ecx
	ret	0
_rsa_pub_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_cms_encrypt
_TEXT	SEGMENT
_os$ = -24						; size = 4
_pad_mode$ = -20					; size = 4
_alg$ = -16						; size = 4
_md$ = -12						; size = 4
_mgf1md$ = -8						; size = 4
_label$ = -4						; size = 4
_ri$ = 8						; size = 4
_rsa_cms_encrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 862
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	ebp
	push	esi
; Line 867
	mov	esi, DWORD PTR _ri$[esp+28]
	push	edi
	push	esi
	mov	DWORD PTR _os$[esp+40], 0
	call	_CMS_RecipientInfo_get0_pkey_ctx
	mov	edi, eax
; Line 868
	mov	DWORD PTR _pad_mode$[esp+40], 1
; Line 870
	lea	eax, DWORD PTR _alg$[esp+40]
	xor	ebp, ebp
	push	eax
	push	ebp
	push	ebp
	push	esi
	call	_CMS_RecipientInfo_ktri_get0_algs
	add	esp, 20					; 00000014H
; Line 871
	test	edi, edi
	je	SHORT $LN3@rsa_cms_en
; Line 872
	lea	eax, DWORD PTR _pad_mode$[esp+36]
	push	eax
	push	ebp
	push	4102					; 00001006H
	push	-1
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN3@rsa_cms_en
$LN21@rsa_cms_en:
	pop	edi
	pop	esi
; Line 873
	xor	eax, eax
	pop	ebp
; Line 922
	add	esp, 24					; 00000018H
	ret	0
$LN3@rsa_cms_en:
; Line 875
	mov	eax, DWORD PTR _pad_mode$[esp+36]
	cmp	eax, 1
	jne	SHORT $LN4@rsa_cms_en
; Line 876
	push	0
	push	5
	push	6
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg$[esp+48]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 877
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
; Line 922
	add	esp, 24					; 00000018H
	ret	0
$LN4@rsa_cms_en:
; Line 880
	cmp	eax, 4
	jne	SHORT $LN21@rsa_cms_en
; Line 882
	lea	eax, DWORD PTR _md$[esp+36]
	push	eax
	push	0
	push	4107					; 0000100bH
	push	768					; 00000300H
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$LN17@rsa_cms_en
; Line 884
	lea	eax, DWORD PTR _mgf1md$[esp+36]
	push	eax
	push	0
	push	4104					; 00001008H
	push	1016					; 000003f8H
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$LN17@rsa_cms_en
; Line 886
	push	ebx
	lea	eax, DWORD PTR _label$[esp+40]
	push	eax
	push	0
	push	4108					; 0000100cH
	push	768					; 00000300H
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	mov	ebx, eax
	add	esp, 24					; 00000018H
; Line 887
	test	ebx, ebx
	js	$LN20@rsa_cms_en
; Line 889
	call	_RSA_OAEP_PARAMS_new
	mov	esi, eax
; Line 890
	test	esi, esi
	je	$LN20@rsa_cms_en
; Line 892
	push	DWORD PTR _md$[esp+40]
	push	esi
	call	_rsa_md_to_algor
	add	esp, 8
	test	eax, eax
	je	$err$23
; Line 894
	push	DWORD PTR _mgf1md$[esp+40]
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	_rsa_md_to_mgf1
	add	esp, 8
	test	eax, eax
	je	$err$23
; Line 896
	test	ebx, ebx
	jle	SHORT $LN12@rsa_cms_en
; Line 897
	call	_ASN1_OCTET_STRING_new
	mov	edi, eax
; Line 898
	call	_X509_ALGOR_new
	mov	DWORD PTR [esi+8], eax
; Line 899
	test	eax, eax
	je	SHORT $err$23
; Line 901
	test	edi, edi
	je	SHORT $err$23
; Line 903
	push	ebx
	push	DWORD PTR _label$[esp+44]
	push	edi
	call	_ASN1_OCTET_STRING_set
	add	esp, 12					; 0000000cH
; Line 904
	push	edi
	test	eax, eax
	jne	SHORT $LN15@rsa_cms_en
	call	_ASN1_OCTET_STRING_free
	add	esp, 4
; Line 905
	jmp	SHORT $err$23
$LN15@rsa_cms_en:
; Line 907
	push	4
	push	935					; 000003a7H
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR [esi+8]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
$LN12@rsa_cms_en:
; Line 911
	lea	eax, DWORD PTR _os$[esp+40]
	push	eax
	call	_RSA_OAEP_PARAMS_it
	push	eax
	push	esi
	call	_ASN1_item_pack
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$23
; Line 913
	push	DWORD PTR _os$[esp+40]
	push	16					; 00000010H
	push	919					; 00000397H
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg$[esp+52]
	call	_X509_ALGOR_set0
; Line 914
	mov	DWORD PTR _os$[esp+56], ebp
	add	esp, 16					; 00000010H
; Line 915
	mov	ebp, 1
$err$23:
; Line 918
	push	esi
	call	_RSA_OAEP_PARAMS_free
	add	esp, 4
$LN20@rsa_cms_en:
	pop	ebx
$LN17@rsa_cms_en:
; Line 919
	mov	ecx, DWORD PTR _os$[esp+36]
	test	ecx, ecx
	je	SHORT $LN18@rsa_cms_en
; Line 920
	push	ecx
	call	_ASN1_STRING_free
	add	esp, 4
$LN18@rsa_cms_en:
; Line 921
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
; Line 922
	add	esp, 24					; 00000018H
	ret	0
_rsa_cms_encrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_cms_decrypt
_TEXT	SEGMENT
_cmsalg$ = -20						; size = 4
_label$1$ = -16						; size = 4
_maskHash$ = -12					; size = 4
_md$1$ = -8						; size = 4
_mgf1md$1$ = -4						; size = 4
_ri$ = 8						; size = 4
_rsa_cms_decrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 789
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
	push	esi
; Line 799
	mov	esi, DWORD PTR _ri$[esp+24]
	or	ebx, -1
	push	edi
	push	esi
	mov	DWORD PTR _label$1$[esp+36], 0
	call	_CMS_RecipientInfo_get0_pkey_ctx
	mov	edi, eax
	add	esp, 4
; Line 800
	test	edi, edi
	jne	SHORT $LN2@rsa_cms_de
	pop	edi
	pop	esi
	pop	ebx
; Line 859
	add	esp, 20					; 00000014H
	ret	0
$LN2@rsa_cms_de:
; Line 802
	lea	eax, DWORD PTR _cmsalg$[esp+32]
	push	eax
	push	0
	push	0
	push	esi
	call	_CMS_RecipientInfo_ktri_get0_algs
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN20@rsa_cms_de
; Line 804
	mov	eax, DWORD PTR _cmsalg$[esp+32]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	add	esp, 4
; Line 805
	cmp	eax, 6
	jne	SHORT $LN4@rsa_cms_de
; Line 806
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 859
	add	esp, 20					; 00000014H
	ret	0
$LN4@rsa_cms_de:
; Line 807
	cmp	eax, 919				; 00000397H
	je	SHORT $LN5@rsa_cms_de
; Line 808
	push	808					; 00000328H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	164					; 000000a4H
	push	158					; 0000009eH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN20@rsa_cms_de:
; Line 809
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
; Line 859
	add	esp, 20					; 00000014H
	ret	0
$LN5@rsa_cms_de:
; Line 812
	lea	eax, DWORD PTR _maskHash$[esp+32]
	push	eax
	push	DWORD PTR _cmsalg$[esp+36]
	call	_rsa_oaep_decode
	mov	esi, eax
	add	esp, 8
; Line 814
	test	esi, esi
	jne	SHORT $LN6@rsa_cms_de
; Line 815
	push	815					; 0000032fH
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	162					; 000000a2H
	push	158					; 0000009eH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 816
	jmp	$err$22
$LN6@rsa_cms_de:
; Line 819
	push	DWORD PTR _maskHash$[esp+32]
	push	DWORD PTR [esi+4]
	call	_rsa_mgf1_to_md
	add	esp, 8
	mov	DWORD PTR _mgf1md$1$[esp+32], eax
; Line 820
	test	eax, eax
	je	$err$22
; Line 822
	push	DWORD PTR [esi]
	call	_rsa_algor_to_md
	add	esp, 4
	mov	DWORD PTR _md$1$[esp+32], eax
; Line 823
	test	eax, eax
	je	$err$22
; Line 826
	push	ebp
	mov	ebp, DWORD PTR [esi+8]
	test	ebp, ebp
	je	SHORT $LN18@rsa_cms_de
; Line 828
	push	DWORD PTR [ebp]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 935				; 000003a7H
	je	SHORT $LN10@rsa_cms_de
; Line 829
	push	829					; 0000033dH
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	165					; 000000a5H
	push	158					; 0000009eH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 830
	jmp	$LN19@rsa_cms_de
$LN10@rsa_cms_de:
; Line 832
	mov	eax, DWORD PTR [ebp+4]
	cmp	DWORD PTR [eax], 4
	je	SHORT $LN11@rsa_cms_de
; Line 833
	push	833					; 00000341H
	push	OFFSET ??_C@_0BJ@GEFEFDCL@?4?2crypto?2rsa?2rsa_ameth?4c?$AA@
	push	161					; 000000a1H
	push	158					; 0000009eH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 834
	jmp	$LN19@rsa_cms_de
$LN11@rsa_cms_de:
; Line 837
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax+8]
; Line 839
	mov	DWORD PTR [eax+8], 0
; Line 840
	mov	eax, DWORD PTR [ebp+4]
	mov	DWORD PTR _label$1$[esp+36], ecx
	mov	eax, DWORD PTR [eax+4]
	mov	ebp, DWORD PTR [eax]
	jmp	SHORT $LN9@rsa_cms_de
$LN18@rsa_cms_de:
	xor	ebp, ebp
$LN9@rsa_cms_de:
; Line 843
	push	0
	push	4
	push	4097					; 00001001H
	push	-1
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN19@rsa_cms_de
; Line 845
	push	DWORD PTR _md$1$[esp+36]
	push	0
	push	4105					; 00001009H
	push	768					; 00000300H
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN19@rsa_cms_de
; Line 847
	push	DWORD PTR _mgf1md$1$[esp+36]
	push	0
	push	4101					; 00001005H
	push	1016					; 000003f8H
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN19@rsa_cms_de
; Line 849
	push	DWORD PTR _label$1$[esp+36]
	push	ebp
	push	4106					; 0000100aH
	push	768					; 00000300H
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	mov	ecx, 1
	test	eax, eax
	cmovg	ebx, ecx
$LN19@rsa_cms_de:
	pop	ebp
$err$22:
; Line 855
	push	esi
	call	_RSA_OAEP_PARAMS_free
; Line 856
	mov	eax, DWORD PTR _maskHash$[esp+36]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN16@rsa_cms_de
; Line 857
	push	eax
	call	_X509_ALGOR_free
	add	esp, 4
$LN16@rsa_cms_de:
; Line 858
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 859
	add	esp, 20					; 00000014H
	ret	0
_rsa_cms_decrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_cms_verify
_TEXT	SEGMENT
_alg$ = -8						; size = 4
_nid2$ = -4						; size = 4
_si$ = 8						; size = 4
_rsa_cms_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 669
	mov	eax, 8
	call	__chkstk
	push	edi
; Line 672
	push	DWORD PTR _si$[esp+8]
	call	_CMS_SignerInfo_get0_pkey_ctx
	mov	edi, eax
; Line 673
	lea	eax, DWORD PTR _alg$[esp+16]
	push	eax
	push	0
	push	0
	push	0
	push	DWORD PTR _si$[esp+28]
	call	_CMS_SignerInfo_get0_algs
; Line 674
	mov	ecx, DWORD PTR _alg$[esp+36]
	push	DWORD PTR [ecx]
	call	_OBJ_obj2nid
	add	esp, 28					; 0000001cH
; Line 675
	cmp	eax, 6
	jne	SHORT $LN2@rsa_cms_ve
$LN7@rsa_cms_ve:
; Line 676
	mov	eax, 1
	pop	edi
; Line 685
	add	esp, 8
	ret	0
$LN2@rsa_cms_ve:
; Line 677
	cmp	eax, 912				; 00000390H
	jne	SHORT $LN3@rsa_cms_ve
; Line 678
	push	0
	push	DWORD PTR _alg$[esp+16]
	push	edi
	push	0
	call	_rsa_pss_to_ctx
	add	esp, 16					; 00000010H
	pop	edi
; Line 685
	add	esp, 8
	ret	0
$LN3@rsa_cms_ve:
; Line 680
	lea	ecx, DWORD PTR _nid2$[esp+12]
	push	ecx
	push	0
	push	eax
	call	_OBJ_find_sigid_algs
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@rsa_cms_ve
; Line 681
	cmp	DWORD PTR _nid2$[esp+12], 6
	je	SHORT $LN7@rsa_cms_ve
$LN5@rsa_cms_ve:
; Line 684
	xor	eax, eax
	pop	edi
; Line 685
	add	esp, 8
	ret	0
_rsa_cms_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_cms_sign
_TEXT	SEGMENT
_pad_mode$ = -8						; size = 4
_alg$ = -4						; size = 4
_si$ = 8						; size = 4
_rsa_cms_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_ameth.c
; Line 709
	mov	eax, 8
	call	__chkstk
	push	edi
; Line 712
	push	DWORD PTR _si$[esp+8]
	mov	DWORD PTR _pad_mode$[esp+16], 1
	call	_CMS_SignerInfo_get0_pkey_ctx
	mov	edi, eax
; Line 714
	lea	eax, DWORD PTR _alg$[esp+16]
	push	eax
	push	0
	push	0
	push	0
	push	DWORD PTR _si$[esp+28]
	call	_CMS_SignerInfo_get0_algs
	add	esp, 24					; 00000018H
; Line 715
	test	edi, edi
	je	SHORT $LN3@rsa_cms_si
; Line 716
	lea	eax, DWORD PTR _pad_mode$[esp+12]
	push	eax
	push	0
	push	4102					; 00001006H
	push	-1
	push	6
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN3@rsa_cms_si
$LN9@rsa_cms_si:
; Line 717
	xor	eax, eax
	pop	edi
; Line 731
	add	esp, 8
	ret	0
$LN3@rsa_cms_si:
; Line 719
	mov	eax, DWORD PTR _pad_mode$[esp+12]
	cmp	eax, 1
	jne	SHORT $LN4@rsa_cms_si
; Line 720
	push	0
	push	5
	push	6
; Line 721
	jmp	SHORT $LN8@rsa_cms_si
$LN4@rsa_cms_si:
; Line 724
	cmp	eax, 6
	jne	SHORT $LN9@rsa_cms_si
; Line 726
	push	edi
	call	_rsa_ctx_to_pss
	add	esp, 4
; Line 727
	test	eax, eax
	je	SHORT $LN9@rsa_cms_si
; Line 729
	push	eax
	push	16					; 00000010H
	push	912					; 00000390H
$LN8@rsa_cms_si:
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg$[esp+24]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 730
	mov	eax, 1
	pop	edi
; Line 731
	add	esp, 8
	ret	0
_rsa_cms_sign ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_sign.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_sign
PUBLIC	_ASN1_item_sign
PUBLIC	_ASN1_item_sign_ctx
PUBLIC	??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_TYPE_free:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_find_sigid_by_algs:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_MD_CTX_md:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_SignFinal:PROC
EXTRN	_EVP_DigestSignInit:PROC
EXTRN	_EVP_DigestSignFinal:PROC
EXTRN	_EVP_PKEY_size:PROC
EXTRN	_EVP_PKEY_CTX_get0_pkey:PROC
EXTRN	_X509_ALGOR_set0:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
CONST	SEGMENT
??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@ DB '.\crypto\asn1\a_s'
	DB	'ign.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_sign_ctx
_TEXT	SEGMENT
_outl$ = -20						; size = 4
_buf_in$ = -16						; size = 4
_pkey$1$ = -12						; size = 4
_inl$1$ = -12						; size = 4
_outll$1$ = -8						; size = 4
_rv$1$ = -4						; size = 4
_it$ = 8						; size = 4
_algor1$ = 12						; size = 4
_algor2$ = 16						; size = 4
_signature$ = 20					; size = 4
_asn$ = 24						; size = 4
_signid$ = 28						; size = 4
_ctx$ = 28						; size = 4
_ASN1_item_sign_ctx PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_sign.c
; Line 235
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
; Line 243
	mov	ebx, DWORD PTR _ctx$[esp+20]
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR _buf_in$[esp+32], 0
	push	ebx
	mov	DWORD PTR _outl$[esp+36], esi
	mov	DWORD PTR _outll$1$[esp+36], esi
	call	_EVP_MD_CTX_md
; Line 244
	push	DWORD PTR [ebx+16]
	mov	ebp, eax
	call	_EVP_PKEY_CTX_get0_pkey
	add	esp, 8
	mov	ecx, eax
	mov	DWORD PTR _pkey$1$[esp+32], ecx
; Line 246
	test	ebp, ebp
	je	$LN3@ASN1_item_
	test	ecx, ecx
	je	$LN3@ASN1_item_
; Line 251
	mov	eax, DWORD PTR [ecx+12]
	push	edi
	mov	edi, DWORD PTR _signature$[esp+32]
	mov	eax, DWORD PTR [eax+104]
	test	eax, eax
	je	$LN26@ASN1_item_
; Line 252
	push	edi
	push	DWORD PTR _algor2$[esp+36]
	push	DWORD PTR _algor1$[esp+40]
	push	DWORD PTR _asn$[esp+44]
	push	DWORD PTR _it$[esp+48]
	push	ebx
	call	eax
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rv$1$[esp+36], eax
; Line 253
	cmp	eax, 1
	jne	SHORT $LN6@ASN1_item_
; Line 254
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _outl$[esp+36], eax
$LN29@ASN1_item_:
	xor	ebp, ebp
$err$32:
; Line 321
	push	ebx
	call	_EVP_MD_CTX_cleanup
; Line 322
	mov	eax, DWORD PTR _buf_in$[esp+40]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN23@ASN1_item_
; Line 323
	push	ebp
	push	eax
	call	_OPENSSL_cleanse
; Line 324
	push	DWORD PTR _buf_in$[esp+44]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN23@ASN1_item_:
; Line 326
	test	esi, esi
	je	SHORT $LN24@ASN1_item_
; Line 327
	push	DWORD PTR _outll$1$[esp+36]
	push	esi
	call	_OPENSSL_cleanse
; Line 328
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN24@ASN1_item_:
; Line 330
	mov	eax, DWORD PTR _outl$[esp+36]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 331
	add	esp, 20					; 00000014H
	ret	0
$LN6@ASN1_item_:
; Line 262
	test	eax, eax
	jg	SHORT $LN7@ASN1_item_
; Line 263
	push	263					; 00000107H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	6
	push	220					; 000000dcH
	push	13					; 0000000dH
	call	_ERR_put_error
	mov	eax, DWORD PTR _rv$1$[esp+56]
	add	esp, 20					; 00000014H
$LN7@ASN1_item_:
; Line 264
	cmp	eax, 1
	jle	SHORT $LN29@ASN1_item_
; Line 269
	cmp	eax, 2
	jne	$LN28@ASN1_item_
	mov	ecx, DWORD PTR _pkey$1$[esp+36]
$LN26@ASN1_item_:
; Line 270
	test	BYTE PTR [ebp+12], 4
	je	SHORT $LN10@ASN1_item_
; Line 271
	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN13@ASN1_item_
	push	DWORD PTR [eax]
	push	ebp
	call	_EVP_MD_type
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _signid$[esp+40]
	push	eax
	call	_OBJ_find_sigid_by_algs
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN13@ASN1_item_
; Line 280
	mov	ecx, DWORD PTR _signid$[esp+32]
	jmp	SHORT $LN11@ASN1_item_
$LN13@ASN1_item_:
; Line 275
	push	276					; 00000114H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	198					; 000000c6H
	push	220					; 000000dcH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 277
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 331
	add	esp, 20					; 00000014H
	ret	0
$LN10@ASN1_item_:
; Line 280
	mov	ecx, DWORD PTR [ebp+4]
	mov	DWORD PTR _signid$[esp+32], ecx
$LN11@ASN1_item_:
; Line 282
	mov	ebp, DWORD PTR _pkey$1$[esp+36]
	mov	esi, -1
	mov	eax, DWORD PTR [ebp+12]
	test	BYTE PTR [eax+8], 4
	mov	eax, 5
	cmovne	esi, eax
; Line 287
	cmp	DWORD PTR _algor1$[esp+32], 0
	je	SHORT $LN16@ASN1_item_
; Line 288
	push	0
	push	esi
	push	ecx
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _algor1$[esp+44]
	call	_X509_ALGOR_set0
	mov	ecx, DWORD PTR _signid$[esp+48]
	add	esp, 16					; 00000010H
$LN16@ASN1_item_:
; Line 289
	cmp	DWORD PTR _algor2$[esp+32], 0
	je	SHORT $LN17@ASN1_item_
; Line 290
	push	0
	push	esi
	push	ecx
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _algor2$[esp+44]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
	jmp	SHORT $LN17@ASN1_item_
$LN28@ASN1_item_:
	mov	ebp, DWORD PTR _pkey$1$[esp+36]
$LN17@ASN1_item_:
; Line 294
	push	DWORD PTR _it$[esp+32]
	lea	eax, DWORD PTR _buf_in$[esp+40]
	push	eax
	push	DWORD PTR _asn$[esp+40]
	call	_ASN1_item_i2d
; Line 295
	push	ebp
	mov	DWORD PTR _inl$1$[esp+52], eax
	call	_EVP_PKEY_size
; Line 296
	push	296					; 00000128H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	eax
	mov	DWORD PTR _outll$1$[esp+64], eax
	mov	DWORD PTR _outl$[esp+64], eax
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 28					; 0000001cH
; Line 297
	mov	eax, DWORD PTR _buf_in$[esp+36]
	test	eax, eax
	je	SHORT $LN19@ASN1_item_
	test	esi, esi
	je	SHORT $LN19@ASN1_item_
; Line 304
	mov	ebp, DWORD PTR _inl$1$[esp+36]
	push	ebp
	push	eax
	push	ebx
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN21@ASN1_item_
	lea	eax, DWORD PTR _outl$[esp+36]
	push	eax
	push	esi
	push	ebx
	call	_EVP_DigestSignFinal
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN21@ASN1_item_
; Line 309
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN22@ASN1_item_
; Line 310
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN22@ASN1_item_:
; Line 313
	mov	eax, DWORD PTR _outl$[esp+36]
	mov	DWORD PTR [edi], eax
; Line 318
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [edi+8], esi
	and	eax, -8					; fffffff8H
	xor	esi, esi
; Line 319
	or	eax, 8
	mov	DWORD PTR [edi+12], eax
	jmp	$err$32
$LN21@ASN1_item_:
; Line 306
	push	306					; 00000132H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	6
	push	220					; 000000dcH
	push	13					; 0000000dH
	mov	DWORD PTR _outl$[esp+56], 0
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 307
	jmp	$err$32
$LN19@ASN1_item_:
; Line 299
	push	299					; 0000012bH
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	65					; 00000041H
	push	220					; 000000dcH
	push	13					; 0000000dH
	mov	DWORD PTR _outl$[esp+56], 0
	call	_ERR_put_error
	mov	ebp, DWORD PTR _inl$1$[esp+56]
	add	esp, 20					; 00000014H
	jmp	$err$32
$LN3@ASN1_item_:
; Line 247
	push	247					; 000000f7H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	217					; 000000d9H
	push	220					; 000000dcH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 248
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 331
	add	esp, 20					; 00000014H
	ret	0
_ASN1_item_sign_ctx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_sign
_TEXT	SEGMENT
_ctx$ = -24						; size = 24
_it$ = 8						; size = 4
_algor1$ = 12						; size = 4
_algor2$ = 16						; size = 4
_signature$ = 20					; size = 4
_asn$ = 24						; size = 4
_pkey$ = 28						; size = 4
_type$ = 32						; size = 4
_ASN1_item_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_sign.c
; Line 222
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 224
	lea	eax, DWORD PTR _ctx$[esp+24]
	push	eax
	call	_EVP_MD_CTX_init
; Line 225
	push	DWORD PTR _pkey$[esp+24]
	lea	eax, DWORD PTR _ctx$[esp+32]
	push	0
	push	DWORD PTR _type$[esp+32]
	push	0
	push	eax
	call	_EVP_DigestSignInit
	add	esp, 24					; 00000018H
	test	eax, eax
; Line 226
	lea	eax, DWORD PTR _ctx$[esp+24]
	push	eax
	jne	SHORT $LN2@ASN1_item_
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 227
	xor	eax, eax
; Line 230
	add	esp, 24					; 00000018H
	ret	0
$LN2@ASN1_item_:
; Line 229
	push	DWORD PTR _asn$[esp+24]
	push	DWORD PTR _signature$[esp+28]
	push	DWORD PTR _algor2$[esp+32]
	push	DWORD PTR _algor1$[esp+36]
	push	DWORD PTR _it$[esp+40]
	call	_ASN1_item_sign_ctx
	add	esp, 24					; 00000018H
; Line 230
	add	esp, 24					; 00000018H
	ret	0
_ASN1_item_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_sign
_TEXT	SEGMENT
_outl$ = -44						; size = 4
_buf_in$1$ = -40					; size = 4
_inl$1$ = -36						; size = 4
_outll$1$ = -32						; size = 4
_p$ = -28						; size = 4
_ctx$ = -24						; size = 24
_i2d$ = 8						; size = 4
_algor1$ = 12						; size = 4
_algor2$ = 16						; size = 4
_signature$ = 20					; size = 4
_data$ = 24						; size = 4
_pkey$ = 28						; size = 4
_type$ = 32						; size = 4
_ASN1_sign PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_sign.c
; Line 133
	mov	eax, 44					; 0000002cH
	call	__chkstk
; Line 135
	xor	eax, eax
	push	ebx
	mov	DWORD PTR _buf_in$1$[esp+48], eax
	xor	ebx, ebx
; Line 136
	mov	DWORD PTR _outl$[esp+48], eax
	mov	DWORD PTR _outll$1$[esp+48], eax
; Line 139
	lea	eax, DWORD PTR _ctx$[esp+48]
	push	edi
	push	eax
	call	_EVP_MD_CTX_init
	add	esp, 4
; Line 140
	xor	edi, edi
	push	ebp
	push	esi
	npad	3
$LL4@ASN1_sign:
; Line 141
	mov	esi, DWORD PTR _algor2$[esp+56]
	test	edi, edi
	cmove	esi, DWORD PTR _algor1$[esp+56]
; Line 145
	test	esi, esi
	je	SHORT $LN2@ASN1_sign
; Line 147
	mov	ebp, DWORD PTR _type$[esp+56]
	cmp	DWORD PTR [ebp+4], 113			; 00000071H
	jne	SHORT $LN8@ASN1_sign
; Line 152
	push	DWORD PTR [esi+4]
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 153
	mov	DWORD PTR [esi+4], ebx
	jmp	SHORT $LN10@ASN1_sign
$LN8@ASN1_sign:
; Line 154
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN11@ASN1_sign
	cmp	DWORD PTR [eax], 5
	je	SHORT $LN10@ASN1_sign
$LN11@ASN1_sign:
; Line 156
	push	eax
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 157
	call	_ASN1_TYPE_new
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	je	$LN32@ASN1_sign
; Line 159
	mov	DWORD PTR [eax], 5
$LN10@ASN1_sign:
; Line 161
	push	DWORD PTR [esi]
	call	_ASN1_OBJECT_free
; Line 162
	push	DWORD PTR [ebp+4]
	call	_OBJ_nid2obj
	add	esp, 8
	mov	DWORD PTR [esi], eax
; Line 163
	test	eax, eax
	je	$LN25@ASN1_sign
; Line 167
	cmp	DWORD PTR [eax+12], ebx
	je	$LN26@ASN1_sign
$LN2@ASN1_sign:
; Line 140
	inc	edi
	cmp	edi, 2
	jl	SHORT $LL4@ASN1_sign
; Line 173
	mov	edi, DWORD PTR _data$[esp+56]
	mov	ebp, DWORD PTR _i2d$[esp+56]
	push	0
	push	edi
	call	ebp
; Line 174
	push	174					; 000000aeH
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	eax
	mov	DWORD PTR _inl$1$[esp+80], eax
	call	_CRYPTO_malloc
; Line 175
	mov	esi, DWORD PTR _pkey$[esp+76]
	push	esi
	mov	DWORD PTR _buf_in$1$[esp+84], eax
	call	_EVP_PKEY_size
; Line 176
	push	176					; 000000b0H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	eax
	mov	DWORD PTR _outll$1$[esp+96], eax
	mov	DWORD PTR _outl$[esp+96], eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 36					; 00000024H
; Line 177
	mov	eax, DWORD PTR _buf_in$1$[esp+60]
	test	eax, eax
	je	$LN16@ASN1_sign
	test	ebx, ebx
	je	$LN16@ASN1_sign
; Line 182
	mov	DWORD PTR _p$[esp+60], eax
; Line 184
	lea	eax, DWORD PTR _p$[esp+60]
	push	eax
	push	edi
	call	ebp
; Line 187
	push	0
	push	DWORD PTR _type$[esp+68]
	lea	eax, DWORD PTR _ctx$[esp+76]
	push	eax
	call	_EVP_DigestInit_ex
	mov	edi, DWORD PTR _inl$1$[esp+80]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN18@ASN1_sign
	mov	eax, DWORD PTR _buf_in$1$[esp+60]
	push	edi
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+68]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN18@ASN1_sign
	push	esi
	lea	eax, DWORD PTR _outl$[esp+64]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+68]
	push	ebx
	push	eax
	call	_EVP_SignFinal
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN18@ASN1_sign
; Line 193
	mov	esi, DWORD PTR _signature$[esp+56]
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN19@ASN1_sign
; Line 194
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN19@ASN1_sign:
; Line 197
	mov	eax, DWORD PTR _outl$[esp+60]
	mov	DWORD PTR [esi], eax
; Line 202
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], ebx
	and	eax, -8					; fffffff8H
	xor	ebx, ebx
; Line 203
	or	eax, 8
	mov	DWORD PTR [esi+12], eax
	jmp	SHORT $err$36
$LN26@ASN1_sign:
; Line 168
	push	169					; 000000a9H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	154					; 0000009aH
$LN34@ASN1_sign:
; Line 164
	push	128					; 00000080H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN32@ASN1_sign:
	xor	edi, edi
$err$36:
; Line 205
	lea	eax, DWORD PTR _ctx$[esp+60]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 206
	mov	ebp, DWORD PTR _buf_in$1$[esp+64]
	add	esp, 4
	test	ebp, ebp
	je	SHORT $LN20@ASN1_sign
; Line 207
	push	edi
	push	ebp
	call	_OPENSSL_cleanse
; Line 208
	push	ebp
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN20@ASN1_sign:
; Line 210
	pop	esi
	pop	ebp
	test	ebx, ebx
	je	SHORT $LN31@ASN1_sign
; Line 211
	push	DWORD PTR _outll$1$[esp+52]
	push	ebx
	call	_OPENSSL_cleanse
; Line 212
	push	ebx
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN31@ASN1_sign:
; Line 214
	mov	eax, DWORD PTR _outl$[esp+52]
	pop	edi
	pop	ebx
; Line 215
	add	esp, 44					; 0000002cH
	ret	0
$LN25@ASN1_sign:
; Line 164
	push	164					; 000000a4H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	162					; 000000a2H
; Line 165
	jmp	SHORT $LN34@ASN1_sign
$LN18@ASN1_sign:
; Line 190
	push	190					; 000000beH
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	6
	push	128					; 00000080H
	push	13					; 0000000dH
	mov	DWORD PTR _outl$[esp+80], 0
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 191
	jmp	SHORT $err$36
$LN16@ASN1_sign:
; Line 179
	push	179					; 000000b3H
	push	OFFSET ??_C@_0BH@NJPJLAKA@?4?2crypto?2asn1?2a_sign?4c?$AA@
	push	65					; 00000041H
	push	128					; 00000080H
	push	13					; 0000000dH
	mov	DWORD PTR _outl$[esp+80], 0
	call	_ERR_put_error
	mov	edi, DWORD PTR _inl$1$[esp+80]
	add	esp, 20					; 00000014H
	jmp	$err$36
_ASN1_sign ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rand\randfile.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_RAND_load_file
PUBLIC	_RAND_write_file
PUBLIC	_RAND_file_name
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_08OFLJHDDG@RANDFILE?$AA@			; `string'
PUBLIC	??_C@_04GHGFPGNC@HOME?$AA@			; `string'
PUBLIC	??_C@_02FHMLMLAN@C?3?$AA@			; `string'
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	??_C@_04MFMCLJBJ@?4rnd?$AA@			; `string'
EXTRN	__imp__fclose:PROC
EXTRN	__imp___fdopen:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp__getenv:PROC
EXTRN	__imp___chmod:PROC
EXTRN	__imp___open:PROC
EXTRN	_OPENSSL_issetugid:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_RAND_bytes:PROC
EXTRN	_RAND_add:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	__imp___stat64i32:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_04MFMCLJBJ@?4rnd?$AA@
CONST	SEGMENT
??_C@_04MFMCLJBJ@?4rnd?$AA@ DB '.rnd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FHMLMLAN@C?3?$AA@
CONST	SEGMENT
??_C@_02FHMLMLAN@C?3?$AA@ DB 'C:', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHGFPGNC@HOME?$AA@
CONST	SEGMENT
??_C@_04GHGFPGNC@HOME?$AA@ DB 'HOME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OFLJHDDG@RANDFILE?$AA@
CONST	SEGMENT
??_C@_08OFLJHDDG@RANDFILE?$AA@ DB 'RANDFILE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_file_name
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_size$ = 12						; size = 4
_RAND_file_name PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\randfile.c
; Line 289
	push	esi
	push	edi
; Line 290
	xor	esi, esi
; Line 295
	call	_OPENSSL_issetugid
	mov	edi, DWORD PTR _size$[esp+4]
	test	eax, eax
	jne	SHORT $LN3@RAND_file_
; Line 296
	push	OFFSET ??_C@_08OFLJHDDG@RANDFILE?$AA@
	call	DWORD PTR __imp__getenv
	mov	esi, eax
	add	esp, 4
; Line 297
	test	esi, esi
	je	SHORT $LN3@RAND_file_
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN3@RAND_file_
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
	npad	1
$LL13@RAND_file_:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL13@RAND_file_
	sub	ecx, edx
	lea	eax, DWORD PTR [ecx+1]
	cmp	eax, edi
	jae	SHORT $LN3@RAND_file_
; Line 298
	push	edi
	push	esi
	mov	esi, DWORD PTR _buf$[esp+12]
	push	esi
	call	_BUF_strlcpy
	add	esp, 12					; 0000000cH
	cmp	eax, edi
	jb	SHORT $LN9@RAND_file_
; Line 299
	pop	edi
	xor	eax, eax
	pop	esi
; Line 337
	ret	0
$LN3@RAND_file_:
; Line 301
	call	_OPENSSL_issetugid
	test	eax, eax
	jne	SHORT $LN6@RAND_file_
; Line 302
	push	OFFSET ??_C@_04GHGFPGNC@HOME?$AA@
	call	DWORD PTR __imp__getenv
	add	esp, 4
	mov	esi, eax
$LN6@RAND_file_:
; Line 304
	test	esi, esi
	jne	SHORT $LN11@RAND_file_
; Line 305
	mov	esi, OFFSET ??_C@_02FHMLMLAN@C?3?$AA@
; Line 308
	jmp	SHORT $LN12@RAND_file_
$LN11@RAND_file_:
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN8@RAND_file_
$LN12@RAND_file_:
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL14@RAND_file_:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL14@RAND_file_
	sub	ecx, edx
	lea	eax, DWORD PTR [ecx+6]
	cmp	eax, edi
	jae	SHORT $LN8@RAND_file_
; Line 309
	push	edi
	push	esi
	mov	esi, DWORD PTR _buf$[esp+12]
	push	esi
	call	_BUF_strlcpy
; Line 311
	push	edi
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	push	esi
	call	_BUF_strlcat
; Line 313
	push	edi
	push	OFFSET ??_C@_04MFMCLJBJ@?4rnd?$AA@
	push	esi
	call	_BUF_strlcat
	add	esp, 36					; 00000024H
; Line 336
	mov	eax, esi
	pop	edi
	pop	esi
; Line 337
	ret	0
$LN8@RAND_file_:
; Line 315
	mov	esi, DWORD PTR _buf$[esp+4]
	mov	BYTE PTR [esi], 0
$LN9@RAND_file_:
; Line 336
	pop	edi
	mov	eax, esi
	pop	esi
; Line 337
	ret	0
_RAND_file_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_write_file
_TEXT	SEGMENT
_rand_err$1$ = -1080					; size = 4
_sb$ = -1076						; size = 48
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_file$ = 8						; size = 4
_RAND_write_file PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\randfile.c
; Line 195
	mov	eax, 1080				; 00000438H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1080], eax
	push	ebx
	mov	ebx, DWORD PTR _file$[esp+1080]
; Line 203
	lea	eax, DWORD PTR _sb$[esp+1084]
	push	ebp
	push	esi
	push	edi
	push	eax
	xor	esi, esi
	xor	edi, edi
	push	ebx
	mov	DWORD PTR _rand_err$1$[esp+1104], esi
	call	DWORD PTR __imp___stat64i32
; Line 228
	push	384					; 00000180H
	push	33025					; 00008101H
	push	ebx
	call	DWORD PTR __imp___open
	add	esp, 20					; 00000014H
; Line 229
	cmp	eax, -1
	je	SHORT $LN20@RAND_write
; Line 230
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	eax
	call	DWORD PTR __imp___fdopen
	mov	ebp, eax
	add	esp, 8
; Line 257
	test	ebp, ebp
	jne	SHORT $LN19@RAND_write
$LN20@RAND_write:
; Line 258
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	ebx
	call	DWORD PTR __imp__fopen
	mov	ebp, eax
	add	esp, 8
; Line 260
	test	ebp, ebp
	je	$err$22
$LN19@RAND_write:
; Line 264
	push	384					; 00000180H
	push	ebx
	call	DWORD PTR __imp___chmod
; Line 266
	mov	ebx, 1024				; 00000400H
	add	esp, 8
	mov	ecx, ebx
$LL2@RAND_write:
; Line 268
	cmp	ebx, 1024				; 00000400H
; Line 270
	lea	eax, DWORD PTR _buf$[esp+1096]
	mov	esi, ebx
	cmovg	esi, ecx
	sub	ebx, 1024				; 00000400H
	push	esi
	push	eax
	call	_RAND_bytes
	mov	ecx, DWORD PTR _rand_err$1$[esp+1104]
	test	eax, eax
; Line 272
	push	ebp
	mov	eax, 1
	push	esi
	cmovle	ecx, eax
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1116]
	mov	DWORD PTR _rand_err$1$[esp+1116], ecx
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 24					; 00000018H
; Line 273
	test	eax, eax
	jle	SHORT $LN15@RAND_write
; Line 277
	add	edi, eax
; Line 278
	test	ebx, ebx
	jle	SHORT $LN16@RAND_write
; Line 280
	mov	ecx, 1024				; 00000400H
	jmp	SHORT $LL2@RAND_write
$LN15@RAND_write:
; Line 274
	xor	edi, edi
$LN16@RAND_write:
; Line 282
	push	ebp
	call	DWORD PTR __imp__fclose
; Line 283
	lea	eax, DWORD PTR _buf$[esp+1100]
	push	1024					; 00000400H
	push	eax
	call	_OPENSSL_cleanse
	mov	esi, DWORD PTR _rand_err$1$[esp+1108]
	add	esp, 12					; 0000000cH
$err$22:
; Line 286
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1096]
	or	eax, -1
	test	esi, esi
	cmovne	edi, eax
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1080				; 00000438H
	ret	0
_RAND_write_file ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RAND_load_file
_TEXT	SEGMENT
_in$1$ = -1088						; size = 4
_ret$1$ = -1084						; size = 4
_sb$ = -1080						; size = 48
_buf$ = -1032						; size = 1024
__$ArrayPad$ = -4					; size = 4
_file$ = 8						; size = 4
_bytes$ = 12						; size = 4
_RAND_load_file PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rand\randfile.c
; Line 114
	push	ebp
	mov	ebp, esp
	and	esp, -64				; ffffffc0H
	mov	eax, 1140				; 00000474H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1140], eax
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR _file$[ebp]
; Line 124
	xor	ebx, ebx
	mov	DWORD PTR _ret$1$[esp+1152], ebx
; Line 127
	test	edi, edi
	jne	SHORT $LN5@RAND_load_
$LN21@RAND_load_:
; Line 128
	xor	eax, eax
; Line 192
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1140]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@RAND_load_:
; Line 140
	lea	eax, DWORD PTR _sb$[esp+1152]
	push	eax
	push	edi
	call	DWORD PTR __imp___stat64i32
	add	esp, 8
	test	eax, eax
	js	SHORT $LN21@RAND_load_
; Line 142
	mov	eax, 8
	call	__chkstk
	xorps	xmm0, xmm0
	lea	eax, DWORD PTR _sb$[esp+1160]
	movsd	QWORD PTR [esp], xmm0
	push	48					; 00000030H
	push	eax
	call	_RAND_add
; Line 144
	mov	esi, DWORD PTR _bytes$[ebp]
	add	esp, 16					; 00000010H
	test	esi, esi
	je	SHORT $LN21@RAND_load_
; Line 150
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	edi
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _in$1$[esp+1152], eax
; Line 152
	test	eax, eax
	je	$err$23
	npad	5
$LL2@RAND_load_:
; Line 169
	mov	edi, 1024				; 00000400H
	test	esi, esi
	jle	SHORT $LN10@RAND_load_
	cmp	esi, edi
	cmovl	edi, esi
$LN10@RAND_load_:
; Line 172
	push	eax
	push	edi
	lea	eax, DWORD PTR _buf$[esp+1160]
	push	1
	push	eax
	call	DWORD PTR __imp__fread
	mov	ebx, eax
	add	esp, 16					; 00000010H
; Line 173
	test	ebx, ebx
	jle	SHORT $LN17@RAND_load_
; Line 179
	movd	xmm0, ebx
	mov	eax, 8
	cvtdq2pd xmm0, xmm0
	call	__chkstk
	lea	eax, DWORD PTR _buf$[esp+1160]
	movsd	QWORD PTR [esp], xmm0
	push	edi
	push	eax
	call	_RAND_add
; Line 181
	add	DWORD PTR _ret$1$[esp+1168], ebx
	add	esp, 16					; 00000010H
; Line 182
	mov	eax, DWORD PTR _in$1$[esp+1152]
	test	esi, esi
	jle	SHORT $LL2@RAND_load_
; Line 183
	sub	esi, edi
; Line 184
	test	esi, esi
	jg	SHORT $LL2@RAND_load_
$LN17@RAND_load_:
; Line 188
	push	DWORD PTR _in$1$[esp+1152]
	call	DWORD PTR __imp__fclose
; Line 189
	lea	eax, DWORD PTR _buf$[esp+1156]
	push	1024					; 00000400H
	push	eax
	call	_OPENSSL_cleanse
	mov	ebx, DWORD PTR _ret$1$[esp+1164]
	add	esp, 12					; 0000000cH
$err$23:
; Line 192
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1152]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_RAND_load_file ENDP
_TEXT	ENDS
END

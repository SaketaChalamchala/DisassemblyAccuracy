; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_seal.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EVP_SealInit
PUBLIC	_EVP_SealFinal
EXTRN	_RAND_bytes:PROC
EXTRN	_EVP_CIPHER_CTX_key_length:PROC
EXTRN	_EVP_CIPHER_CTX_iv_length:PROC
EXTRN	_EVP_EncryptInit_ex:PROC
EXTRN	_EVP_EncryptFinal_ex:PROC
EXTRN	_EVP_CIPHER_CTX_init:PROC
EXTRN	_EVP_CIPHER_CTX_rand_key:PROC
EXTRN	_EVP_PKEY_encrypt_old:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _EVP_SealFinal
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_EVP_SealFinal PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_seal.c
; Line 117
	push	DWORD PTR _outl$[esp-4]
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _ctx$[esp+4]
	call	_EVP_EncryptFinal_ex
	add	esp, 12					; 0000000cH
; Line 118
	test	eax, eax
	je	SHORT $LN2@EVP_SealFi
; Line 119
	push	0
	push	0
	push	0
	push	0
	push	DWORD PTR _ctx$[esp+12]
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
$LN2@EVP_SealFi:
; Line 121
	ret	0
_EVP_SealFinal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_SealInit
_TEXT	SEGMENT
_ekl$GSCopy$1$ = -80					; size = 4
_pubk$GSCopy$1$ = -76					; size = 4
_iv$GSCopy$1$ = -72					; size = 4
_key$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_ek$ = 16						; size = 4
_ekl$ = 20						; size = 4
_iv$ = 24						; size = 4
_pubk$ = 28						; size = 4
_npubk$ = 32						; size = 4
_EVP_SealInit PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_seal.c
; Line 72
	mov	eax, 80					; 00000050H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+80], eax
	mov	eax, DWORD PTR _ekl$[esp+76]
	push	ebx
	mov	ebx, DWORD PTR _type$[esp+80]
	mov	DWORD PTR _ekl$GSCopy$1$[esp+84], eax
	mov	eax, DWORD PTR _iv$[esp+80]
	mov	DWORD PTR _iv$GSCopy$1$[esp+84], eax
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+84]
	push	esi
	mov	esi, DWORD PTR _ek$[esp+88]
	push	edi
	mov	edi, DWORD PTR _pubk$[esp+92]
	mov	DWORD PTR _pubk$GSCopy$1$[esp+96], edi
; Line 76
	test	ebx, ebx
	je	SHORT $LN6@EVP_SealIn
; Line 77
	push	ebp
	call	_EVP_CIPHER_CTX_init
; Line 78
	push	0
	push	0
	push	0
	push	ebx
	push	ebp
	call	_EVP_EncryptInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN20@EVP_SealIn
$LN6@EVP_SealIn:
; Line 81
	mov	ebx, DWORD PTR _npubk$[esp+92]
	test	ebx, ebx
	jle	$LN8@EVP_SealIn
	test	edi, edi
	je	$LN8@EVP_SealIn
; Line 83
	lea	eax, DWORD PTR _key$[esp+96]
	push	eax
	push	ebp
	call	_EVP_CIPHER_CTX_rand_key
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN20@EVP_SealIn
; Line 86
	push	ebp
	call	_EVP_CIPHER_CTX_iv_length
	add	esp, 4
	test	eax, eax
	je	SHORT $LN19@EVP_SealIn
	push	ebp
	call	_EVP_CIPHER_CTX_iv_length
	mov	edi, DWORD PTR _iv$GSCopy$1$[esp+100]
	push	eax
	push	edi
	call	_RAND_bytes
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LN10@EVP_SealIn
$LN20@EVP_SealIn:
	pop	edi
	pop	esi
	pop	ebp
; Line 87
	xor	eax, eax
	pop	ebx
; Line 100
	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	ret	0
$LN19@EVP_SealIn:
	mov	edi, DWORD PTR _iv$GSCopy$1$[esp+96]
$LN10@EVP_SealIn:
; Line 89
	push	edi
	lea	eax, DWORD PTR _key$[esp+100]
	push	eax
	push	0
	push	0
	push	ebp
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN20@EVP_SealIn
; Line 92
	xor	edi, edi
	test	ebx, ebx
	jle	SHORT $LN3@EVP_SealIn
	mov	eax, DWORD PTR _pubk$GSCopy$1$[esp+96]
	sub	eax, esi
	sub	DWORD PTR _ekl$GSCopy$1$[esp+96], esi
	mov	DWORD PTR _pubk$GSCopy$1$[esp+96], eax
	npad	6
$LL4@EVP_SealIn:
; Line 93
	push	DWORD PTR [eax+esi]
	push	ebp
	call	_EVP_CIPHER_CTX_key_length
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _key$[esp+104]
	push	eax
	push	DWORD PTR [esi]
	call	_EVP_PKEY_encrypt_old
	mov	ecx, DWORD PTR _ekl$GSCopy$1$[esp+112]
	add	esp, 16					; 00000010H
	mov	DWORD PTR [ecx+esi], eax
; Line 96
	test	eax, eax
	jle	SHORT $LN15@EVP_SealIn
; Line 92
	mov	eax, DWORD PTR _pubk$GSCopy$1$[esp+96]
	inc	edi
	add	esi, 4
	cmp	edi, ebx
	jl	SHORT $LL4@EVP_SealIn
$LN3@EVP_SealIn:
	pop	edi
	pop	esi
	pop	ebp
; Line 99
	mov	eax, ebx
	pop	ebx
; Line 100
	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	ret	0
$LN15@EVP_SealIn:
	pop	edi
	pop	esi
	pop	ebp
; Line 97
	or	eax, -1
	pop	ebx
; Line 100
	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	ret	0
$LN8@EVP_SealIn:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+96]
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	ret	0
_EVP_SealInit ENDP
_TEXT	ENDS
END

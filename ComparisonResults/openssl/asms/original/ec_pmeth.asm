; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ec_pkey_meth
CONST	SEGMENT
_ec_pkey_meth DD 0198H
	DD	00H
	DD	FLAT:_pkey_ec_init
	DD	FLAT:_pkey_ec_copy
	DD	FLAT:_pkey_ec_cleanup
	DD	00H
	DD	FLAT:_pkey_ec_paramgen
	DD	00H
	DD	FLAT:_pkey_ec_keygen
	DD	00H
	DD	FLAT:_pkey_ec_sign
	DD	00H
	DD	FLAT:_pkey_ec_verify
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_pkey_ec_kdf_derive
	DD	FLAT:_pkey_ec_ctrl
	DD	FLAT:_pkey_ec_ctrl_str
CONST	ENDS
PUBLIC	??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@ ; `string'
PUBLIC	??_C@_0BC@BLCJLNNM@ec_paramgen_curve?$AA@	; `string'
PUBLIC	??_C@_0N@CHHABLAI@ec_param_enc?$AA@		; `string'
PUBLIC	??_C@_08FCANLLBJ@explicit?$AA@			; `string'
PUBLIC	??_C@_0M@FBFAECBG@named_curve?$AA@		; `string'
PUBLIC	??_C@_0M@JAAKIKPH@ecdh_kdf_md?$AA@		; `string'
PUBLIC	??_C@_0BD@CPNABICB@ecdh_cofactor_mode?$AA@	; `string'
EXTRN	__imp__atoi:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BUF_memdup:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_OBJ_ln2nid:PROC
EXTRN	_OBJ_sn2nid:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_assign:PROC
EXTRN	_EVP_PKEY_copy_parameters:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_EC_GROUP_free:PROC
EXTRN	_EC_GROUP_dup:PROC
EXTRN	_EC_GROUP_set_asn1_flag:PROC
EXTRN	_EC_GROUP_get_degree:PROC
EXTRN	_EC_GROUP_new_by_curve_name:PROC
EXTRN	_EC_curve_nist2nid:PROC
EXTRN	_EC_KEY_new:PROC
EXTRN	_EC_KEY_get_flags:PROC
EXTRN	_EC_KEY_set_flags:PROC
EXTRN	_EC_KEY_clear_flags:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_EC_KEY_dup:PROC
EXTRN	_EC_KEY_get0_group:PROC
EXTRN	_EC_KEY_set_group:PROC
EXTRN	_EC_KEY_get0_public_key:PROC
EXTRN	_EC_KEY_generate_key:PROC
EXTRN	_ECDSA_size:PROC
EXTRN	_ECDSA_sign:PROC
EXTRN	_ECDSA_verify:PROC
EXTRN	_ECDH_compute_key:PROC
EXTRN	_ECDH_KDF_X9_62:PROC
;	COMDAT ??_C@_0BD@CPNABICB@ecdh_cofactor_mode?$AA@
CONST	SEGMENT
??_C@_0BD@CPNABICB@ecdh_cofactor_mode?$AA@ DB 'ecdh_cofactor_mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JAAKIKPH@ecdh_kdf_md?$AA@
CONST	SEGMENT
??_C@_0M@JAAKIKPH@ecdh_kdf_md?$AA@ DB 'ecdh_kdf_md', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FBFAECBG@named_curve?$AA@
CONST	SEGMENT
??_C@_0M@FBFAECBG@named_curve?$AA@ DB 'named_curve', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCANLLBJ@explicit?$AA@
CONST	SEGMENT
??_C@_08FCANLLBJ@explicit?$AA@ DB 'explicit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHHABLAI@ec_param_enc?$AA@
CONST	SEGMENT
??_C@_0N@CHHABLAI@ec_param_enc?$AA@ DB 'ec_param_enc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BLCJLNNM@ec_paramgen_curve?$AA@
CONST	SEGMENT
??_C@_0BC@BLCJLNNM@ec_paramgen_curve?$AA@ DB 'ec_paramgen_curve', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
CONST	SEGMENT
??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@ DB '.\crypto\ec\ec_pm'
	DB	'eth.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_keygen
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey$ = 12						; size = 4
_pkey_ec_keygen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 472
	push	ebp
	push	esi
; Line 474
	mov	esi, DWORD PTR _ctx$[esp+4]
; Line 475
	cmp	DWORD PTR [esi+8], 0
	mov	ebp, DWORD PTR [esi+20]
	jne	SHORT $LN2@pkey_ec_ke
	cmp	DWORD PTR [ebp], 0
	jne	SHORT $LN2@pkey_ec_ke
; Line 476
	push	476					; 000001dcH
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	139					; 0000008bH
	push	199					; 000000c7H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 477
	xor	eax, eax
	pop	esi
	pop	ebp
; Line 492
	ret	0
$LN2@pkey_ec_ke:
	push	ebx
; Line 479
	call	_EC_KEY_new
	mov	ebx, eax
; Line 480
	test	ebx, ebx
	jne	SHORT $LN3@pkey_ec_ke
	pop	ebx
	pop	esi
	pop	ebp
; Line 492
	ret	0
$LN3@pkey_ec_ke:
	push	edi
; Line 482
	mov	edi, DWORD PTR _pkey$[esp+12]
	push	ebx
	push	408					; 00000198H
	push	edi
	call	_EVP_PKEY_assign
; Line 483
	mov	eax, DWORD PTR [esi+8]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@pkey_ec_ke
; Line 485
	push	eax
	push	edi
	call	_EVP_PKEY_copy_parameters
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@pkey_ec_ke
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
; Line 492
	ret	0
$LN4@pkey_ec_ke:
; Line 488
	push	DWORD PTR [ebp]
	push	ebx
	call	_EC_KEY_set_group
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@pkey_ec_ke
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
; Line 492
	ret	0
$LN7@pkey_ec_ke:
; Line 491
	push	DWORD PTR [edi+20]
	call	_EC_KEY_generate_key
	add	esp, 4
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
; Line 492
	ret	0
_pkey_ec_keygen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_paramgen
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey$ = 12						; size = 4
_pkey_ec_paramgen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 454
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	edi
	mov	edi, DWORD PTR [eax+20]
; Line 456
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LN2@pkey_ec_pa
; Line 457
	push	457					; 000001c9H
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	139					; 0000008bH
	push	219					; 000000dbH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 458
	xor	eax, eax
	pop	edi
; Line 469
	ret	0
$LN2@pkey_ec_pa:
	push	esi
; Line 460
	call	_EC_KEY_new
	mov	esi, eax
; Line 461
	test	esi, esi
	jne	SHORT $LN3@pkey_ec_pa
	pop	esi
	pop	edi
; Line 469
	ret	0
$LN3@pkey_ec_pa:
; Line 463
	push	DWORD PTR [edi]
	push	esi
	call	_EC_KEY_set_group
	add	esp, 8
	mov	edi, eax
; Line 465
	push	esi
	test	edi, edi
	je	SHORT $LN4@pkey_ec_pa
	push	408					; 00000198H
	push	DWORD PTR _pkey$[esp+12]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 468
	mov	eax, edi
	pop	esi
	pop	edi
; Line 469
	ret	0
$LN4@pkey_ec_pa:
; Line 467
	call	_EC_KEY_free
	add	esp, 4
; Line 468
	mov	eax, edi
	pop	esi
	pop	edi
; Line 469
	ret	0
_pkey_ec_paramgen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_ctrl_str
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_value$ = 16						; size = 4
_pkey_ec_ctrl_str PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 414
	mov	ecx, DWORD PTR _type$[esp-4]
	mov	edx, OFFSET ??_C@_0BC@BLCJLNNM@ec_paramgen_curve?$AA@
	mov	eax, ecx
	push	ebx
	npad	4
$LL18@pkey_ec_ct:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN19@pkey_ec_ct
	test	bl, bl
	je	SHORT $LN20@pkey_ec_ct
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN19@pkey_ec_ct
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL18@pkey_ec_ct
$LN20@pkey_ec_ct:
	xor	eax, eax
	jmp	SHORT $LN21@pkey_ec_ct
$LN19@pkey_ec_ct:
	sbb	eax, eax
	or	eax, 1
$LN21@pkey_ec_ct:
	test	eax, eax
	jne	SHORT $LN2@pkey_ec_ct
; Line 416
	push	esi
	mov	esi, DWORD PTR _value$[esp+4]
	push	esi
	call	_EC_curve_nist2nid
	add	esp, 4
; Line 417
	test	eax, eax
	jne	SHORT $LN6@pkey_ec_ct
; Line 418
	push	esi
	call	_OBJ_sn2nid
	add	esp, 4
; Line 419
	test	eax, eax
	jne	SHORT $LN6@pkey_ec_ct
; Line 420
	push	esi
	call	_OBJ_ln2nid
	add	esp, 4
; Line 421
	test	eax, eax
	jne	SHORT $LN6@pkey_ec_ct
; Line 422
	push	422					; 000001a6H
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	141					; 0000008dH
	push	198					; 000000c6H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 423
	xor	eax, eax
	pop	esi
	pop	ebx
; Line 449
	ret	0
$LN6@pkey_ec_ct:
; Line 425
	push	0
	push	eax
	push	4097					; 00001001H
	push	6
	push	408					; 00000198H
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	pop	esi
	pop	ebx
; Line 449
	ret	0
$LN2@pkey_ec_ct:
; Line 426
	mov	edx, OFFSET ??_C@_0N@CHHABLAI@ec_param_enc?$AA@
	mov	eax, ecx
	npad	3
$LL22@pkey_ec_ct:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN23@pkey_ec_ct
	test	bl, bl
	je	SHORT $LN24@pkey_ec_ct
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN23@pkey_ec_ct
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL22@pkey_ec_ct
$LN24@pkey_ec_ct:
	xor	eax, eax
	jmp	SHORT $LN25@pkey_ec_ct
$LN23@pkey_ec_ct:
	sbb	eax, eax
	or	eax, 1
$LN25@pkey_ec_ct:
	test	eax, eax
	jne	$LN7@pkey_ec_ct
; Line 428
	mov	ecx, DWORD PTR _value$[esp]
	mov	edx, OFFSET ??_C@_08FCANLLBJ@explicit?$AA@
	mov	eax, ecx
$LL26@pkey_ec_ct:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN27@pkey_ec_ct
	test	bl, bl
	je	SHORT $LN28@pkey_ec_ct
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN27@pkey_ec_ct
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL26@pkey_ec_ct
$LN28@pkey_ec_ct:
	xor	eax, eax
	jmp	SHORT $LN29@pkey_ec_ct
$LN27@pkey_ec_ct:
	sbb	eax, eax
	or	eax, 1
$LN29@pkey_ec_ct:
	test	eax, eax
	je	SHORT $LN12@pkey_ec_ct
$LN9@pkey_ec_ct:
; Line 430
	mov	eax, OFFSET ??_C@_0M@FBFAECBG@named_curve?$AA@
$LL30@pkey_ec_ct:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN31@pkey_ec_ct
	test	dl, dl
	je	SHORT $LN32@pkey_ec_ct
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN31@pkey_ec_ct
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL30@pkey_ec_ct
$LN32@pkey_ec_ct:
	xor	eax, eax
	jmp	SHORT $LN33@pkey_ec_ct
$LN31@pkey_ec_ct:
	sbb	eax, eax
	or	eax, 1
$LN33@pkey_ec_ct:
	test	eax, eax
	jne	SHORT $LN11@pkey_ec_ct
; Line 431
	mov	eax, 1
$LN12@pkey_ec_ct:
; Line 434
	push	0
	push	eax
	push	4098					; 00001002H
	push	6
	push	408					; 00000198H
	push	DWORD PTR _ctx$[esp+20]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	pop	ebx
; Line 449
	ret	0
$LN11@pkey_ec_ct:
; Line 433
	mov	eax, -2					; fffffffeH
	pop	ebx
; Line 449
	ret	0
$LN7@pkey_ec_ct:
; Line 435
	mov	edx, OFFSET ??_C@_0M@JAAKIKPH@ecdh_kdf_md?$AA@
	mov	eax, ecx
	npad	1
$LL34@pkey_ec_ct:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN35@pkey_ec_ct
	test	bl, bl
	je	SHORT $LN36@pkey_ec_ct
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN35@pkey_ec_ct
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL34@pkey_ec_ct
$LN36@pkey_ec_ct:
	xor	eax, eax
	jmp	SHORT $LN37@pkey_ec_ct
$LN35@pkey_ec_ct:
	sbb	eax, eax
	or	eax, 1
$LN37@pkey_ec_ct:
	test	eax, eax
	jne	SHORT $LN13@pkey_ec_ct
; Line 437
	push	DWORD PTR _value$[esp]
	call	_EVP_get_digestbyname
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN15@pkey_ec_ct
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	151					; 00000097H
	push	198					; 000000c6H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 439
	xor	eax, eax
	pop	ebx
; Line 449
	ret	0
$LN15@pkey_ec_ct:
; Line 441
	push	eax
	push	0
	push	4101					; 00001005H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	DWORD PTR _ctx$[esp+20]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	pop	ebx
; Line 449
	ret	0
$LN13@pkey_ec_ct:
; Line 442
	mov	eax, OFFSET ??_C@_0BD@CPNABICB@ecdh_cofactor_mode?$AA@
$LL38@pkey_ec_ct:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN39@pkey_ec_ct
	test	dl, dl
	je	SHORT $LN40@pkey_ec_ct
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN39@pkey_ec_ct
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL38@pkey_ec_ct
$LN40@pkey_ec_ct:
	xor	eax, eax
	jmp	SHORT $LN41@pkey_ec_ct
$LN39@pkey_ec_ct:
	sbb	eax, eax
	or	eax, 1
$LN41@pkey_ec_ct:
	test	eax, eax
	jne	$LN11@pkey_ec_ct
; Line 444
	push	DWORD PTR _value$[esp]
	call	DWORD PTR __imp__atoi
; Line 445
	push	0
	push	eax
	push	4099					; 00001003H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	pop	ebx
; Line 449
	ret	0
_pkey_ec_ctrl_str ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_ctrl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
_pkey_ec_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 283
	mov	ecx, DWORD PTR _ctx$[esp-4]
; Line 285
	mov	eax, DWORD PTR _type$[esp-4]
	push	esi
	push	edi
	mov	esi, DWORD PTR [ecx+20]
	cmp	eax, 4097				; 00001001H
	jg	$LN46@pkey_ec_ct
	je	$LN4@pkey_ec_ct
	dec	eax
	cmp	eax, 12					; 0000000cH
	ja	$LN50@pkey_ec_ct
	movzx	eax, BYTE PTR $LN47@pkey_ec_ct[eax]
	jmp	DWORD PTR $LN52@pkey_ec_ct[eax*4]
$LN40@pkey_ec_ct:
; Line 386
	mov	edi, DWORD PTR _p2$[esp+4]
	push	edi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 64					; 00000040H
	je	SHORT $LN41@pkey_ec_ct
	push	edi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 416				; 000001a0H
	je	SHORT $LN41@pkey_ec_ct
	push	edi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 675				; 000002a3H
	je	SHORT $LN41@pkey_ec_ct
	push	edi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 672				; 000002a0H
	je	SHORT $LN41@pkey_ec_ct
	push	edi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 673				; 000002a1H
	je	SHORT $LN41@pkey_ec_ct
	push	edi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 674				; 000002a2H
	je	SHORT $LN41@pkey_ec_ct
; Line 388
	push	388					; 00000184H
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	138					; 0000008aH
; Line 389
	jmp	SHORT $LN49@pkey_ec_ct
$LN41@pkey_ec_ct:
; Line 391
	mov	DWORD PTR [esi+4], edi
; Line 392
	mov	eax, 1
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN42@pkey_ec_ct:
; Line 395
	mov	eax, DWORD PTR _p2$[esp+4]
	mov	ecx, DWORD PTR [esi+4]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 396
	mov	eax, 1
; Line 409
	ret	0
$LN4@pkey_ec_ct:
; Line 287
	push	DWORD PTR _p1$[esp+4]
	call	_EC_GROUP_new_by_curve_name
	mov	edi, eax
	add	esp, 4
; Line 288
	test	edi, edi
	jne	SHORT $LN5@pkey_ec_ct
; Line 289
	push	289					; 00000121H
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	141					; 0000008dH
$LN49@pkey_ec_ct:
	push	197					; 000000c5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 290
	xor	eax, eax
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN5@pkey_ec_ct:
; Line 292
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@pkey_ec_ct
; Line 293
	push	eax
	call	_EC_GROUP_free
	add	esp, 4
$LN6@pkey_ec_ct:
; Line 294
	mov	DWORD PTR [esi], edi
$LN43@pkey_ec_ct:
	pop	edi
; Line 295
	mov	eax, 1
	pop	esi
; Line 409
	ret	0
$LN46@pkey_ec_ct:
; Line 285
	add	eax, -4098				; ffffeffeH
	cmp	eax, 8
	ja	$LN50@pkey_ec_ct
	jmp	DWORD PTR $LN53@pkey_ec_ct[eax*4]
$LN7@pkey_ec_ct:
; Line 298
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN8@pkey_ec_ct
; Line 299
	push	299					; 0000012bH
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	139					; 0000008bH
	push	197					; 000000c5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN8@pkey_ec_ct:
; Line 302
	push	DWORD PTR _p1$[esp+4]
	push	eax
	call	_EC_GROUP_set_asn1_flag
	add	esp, 8
; Line 303
	mov	eax, 1
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN9@pkey_ec_ct:
	push	ebx
; Line 307
	mov	ebx, DWORD PTR _p1$[esp+8]
	cmp	ebx, -2					; fffffffeH
	jne	SHORT $LN10@pkey_ec_ct
; Line 308
	mov	al, BYTE PTR [esi+12]
	cmp	al, -1
	je	SHORT $LN12@pkey_ec_ct
; Line 309
	pop	ebx
	pop	edi
	movsx	eax, al
	pop	esi
; Line 409
	ret	0
$LN12@pkey_ec_ct:
; Line 311
	mov	eax, DWORD PTR [ecx+8]
; Line 312
	push	DWORD PTR [eax+20]
	call	_EC_KEY_get_flags
	add	esp, 4
	shr	eax, 12					; 0000000cH
	and	eax, 1
	pop	ebx
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN10@pkey_ec_ct:
; Line 315
	lea	eax, DWORD PTR [ebx+1]
	cmp	eax, 2
	ja	$LN15@pkey_ec_ct
; Line 317
	mov	BYTE PTR [esi+12], bl
; Line 318
	cmp	ebx, -1
	je	SHORT $LN16@pkey_ec_ct
; Line 319
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [eax+20]
; Line 320
	mov	ecx, DWORD PTR [edx+4]
	test	ecx, ecx
	je	SHORT $LN15@pkey_ec_ct
; Line 323
	cmp	DWORD PTR [ecx+32], 1
	jne	SHORT $LN21@pkey_ec_ct
	mov	eax, DWORD PTR [ecx+28]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN21@pkey_ec_ct
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN26@pkey_ec_ct
$LN21@pkey_ec_ct:
; Line 325
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN23@pkey_ec_ct
; Line 326
	push	edx
	call	_EC_KEY_dup
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
; Line 327
	test	eax, eax
	jne	SHORT $LN23@pkey_ec_ct
	pop	ebx
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN23@pkey_ec_ct:
; Line 331
	push	4096					; 00001000H
	push	DWORD PTR [esi+8]
	test	ebx, ebx
	je	SHORT $LN24@pkey_ec_ct
	call	_EC_KEY_set_flags
	add	esp, 8
; Line 338
	mov	eax, 1
	pop	ebx
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN24@pkey_ec_ct:
; Line 333
	call	_EC_KEY_clear_flags
	add	esp, 8
; Line 338
	mov	eax, 1
	pop	ebx
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN16@pkey_ec_ct:
; Line 334
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN26@pkey_ec_ct
; Line 335
	push	eax
	call	_EC_KEY_free
	add	esp, 4
; Line 336
	mov	DWORD PTR [esi+8], 0
$LN26@pkey_ec_ct:
; Line 338
	pop	ebx
	pop	edi
	mov	eax, 1
	pop	esi
; Line 409
	ret	0
$LN15@pkey_ec_ct:
	pop	ebx
	pop	edi
; Line 316
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 409
	ret	0
$LN27@pkey_ec_ct:
; Line 342
	mov	eax, DWORD PTR _p1$[esp+4]
	cmp	eax, -2					; fffffffeH
	jne	SHORT $LN28@pkey_ec_ct
; Line 343
	movsx	eax, BYTE PTR [esi+13]
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN28@pkey_ec_ct:
; Line 344
	cmp	eax, 1
	je	SHORT $LN29@pkey_ec_ct
	cmp	eax, 2
	je	SHORT $LN29@pkey_ec_ct
$LN50@pkey_ec_ct:
	pop	edi
; Line 345
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 409
	ret	0
$LN29@pkey_ec_ct:
; Line 346
	mov	BYTE PTR [esi+13], al
; Line 347
	mov	eax, 1
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN30@pkey_ec_ct:
; Line 350
	mov	eax, DWORD PTR _p2$[esp+4]
	mov	DWORD PTR [esi+16], eax
; Line 351
	mov	eax, 1
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN31@pkey_ec_ct:
; Line 354
	mov	eax, DWORD PTR _p2$[esp+4]
	mov	ecx, DWORD PTR [esi+16]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 355
	mov	eax, 1
; Line 409
	ret	0
$LN32@pkey_ec_ct:
; Line 358
	mov	eax, DWORD PTR _p1$[esp+4]
	test	eax, eax
	jle	SHORT $LN50@pkey_ec_ct
; Line 360
	mov	DWORD PTR [esi+28], eax
; Line 361
	mov	eax, 1
	pop	edi
	pop	esi
; Line 409
	ret	0
$LN34@pkey_ec_ct:
; Line 364
	mov	eax, DWORD PTR _p2$[esp+4]
	mov	ecx, DWORD PTR [esi+28]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 365
	mov	eax, 1
; Line 409
	ret	0
$LN35@pkey_ec_ct:
; Line 368
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN36@pkey_ec_ct
; Line 369
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN36@pkey_ec_ct:
; Line 370
	mov	eax, DWORD PTR _p2$[esp+4]
; Line 371
	xor	ecx, ecx
	test	eax, eax
	mov	DWORD PTR [esi+20], eax
	pop	edi
	cmovne	ecx, DWORD PTR _p1$[esp]
; Line 375
	mov	eax, 1
	mov	DWORD PTR [esi+24], ecx
	pop	esi
; Line 409
	ret	0
$LN39@pkey_ec_ct:
; Line 378
	mov	ecx, DWORD PTR _p2$[esp+4]
	mov	edx, DWORD PTR [esi+20]
	pop	edi
	mov	DWORD PTR [ecx], edx
; Line 379
	mov	eax, DWORD PTR [esi+24]
	pop	esi
; Line 409
	ret	0
	npad	1
$LN52@pkey_ec_ct:
	DD	$LN40@pkey_ec_ct
	DD	$LN43@pkey_ec_ct
	DD	$LN42@pkey_ec_ct
	DD	$LN50@pkey_ec_ct
$LN47@pkey_ec_ct:
	DB	0
	DB	1
	DB	3
	DB	3
	DB	1
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	2
	npad	3
$LN53@pkey_ec_ct:
	DD	$LN7@pkey_ec_ct
	DD	$LN9@pkey_ec_ct
	DD	$LN27@pkey_ec_ct
	DD	$LN30@pkey_ec_ct
	DD	$LN31@pkey_ec_ct
	DD	$LN32@pkey_ec_ct
	DD	$LN34@pkey_ec_ct
	DD	$LN35@pkey_ec_ct
	DD	$LN39@pkey_ec_ct
_pkey_ec_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_kdf_derive
_TEXT	SEGMENT
_ktmplen$ = 8						; size = 4
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_keylen$ = 16						; size = 4
_pkey_ec_kdf_derive PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 246
	push	ebx
; Line 247
	mov	ebx, DWORD PTR _ctx$[esp]
	push	ebp
	push	esi
; Line 250
	xor	ebp, ebp
	mov	esi, DWORD PTR [ebx+20]
; Line 251
	cmp	BYTE PTR [esi+13], 1
	jne	SHORT $LN2@pkey_ec_kd
; Line 252
	push	DWORD PTR _keylen$[esp+8]
	push	DWORD PTR _key$[esp+12]
	push	ebx
	call	_pkey_ec_derive
	add	esp, 12					; 0000000cH
	pop	esi
	pop	ebp
	pop	ebx
; Line 278
	ret	0
$LN2@pkey_ec_kd:
; Line 254
	mov	eax, DWORD PTR _keylen$[esp+8]
	cmp	DWORD PTR _key$[esp+8], ebp
	jne	SHORT $LN3@pkey_ec_kd
	mov	ecx, DWORD PTR [esi+28]
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
; Line 255
	mov	eax, 1
	pop	ebx
; Line 278
	ret	0
$LN3@pkey_ec_kd:
; Line 257
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR [esi+28]
	je	SHORT $LN4@pkey_ec_kd
$LN12@pkey_ec_kd:
	pop	esi
	pop	ebp
; Line 258
	xor	eax, eax
	pop	ebx
; Line 278
	ret	0
$LN4@pkey_ec_kd:
; Line 259
	lea	eax, DWORD PTR _ktmplen$[esp+8]
	push	eax
	push	0
	push	ebx
	call	_pkey_ec_derive
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN12@pkey_ec_kd
; Line 261
	push	edi
	push	261					; 00000105H
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	DWORD PTR _ktmplen$[esp+20]
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 262
	test	edi, edi
	jne	SHORT $LN6@pkey_ec_kd
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 278
	ret	0
$LN6@pkey_ec_kd:
; Line 264
	lea	eax, DWORD PTR _ktmplen$[esp+12]
	push	eax
	push	edi
	push	ebx
	call	_pkey_ec_derive
	mov	ebx, DWORD PTR _ktmplen$[esp+24]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$14
; Line 267
	push	DWORD PTR [esi+16]
	mov	eax, DWORD PTR _keylen$[esp+16]
	push	DWORD PTR [esi+24]
	push	DWORD PTR [esi+20]
	push	ebx
	push	edi
	push	DWORD PTR [eax]
	push	DWORD PTR _key$[esp+36]
	call	_ECDH_KDF_X9_62
	add	esp, 28					; 0000001cH
	mov	ecx, 1
	test	eax, eax
	cmovne	ebp, ecx
$err$14:
; Line 274
	push	ebx
	push	edi
	call	_OPENSSL_cleanse
; Line 275
	push	edi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
; Line 277
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 278
	ret	0
_pkey_ec_kdf_derive ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_derive
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_keylen$ = 16						; size = 4
_pkey_ec_derive PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 214
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
; Line 215
	mov	ecx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [eax+20]
	test	ecx, ecx
	je	SHORT $LN3@pkey_ec_de
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	SHORT $LN3@pkey_ec_de
; Line 220
	mov	esi, DWORD PTR [esi+8]
	test	esi, esi
	jne	SHORT $LN8@pkey_ec_de
	mov	esi, DWORD PTR [ecx+20]
$LN8@pkey_ec_de:
; Line 222
	cmp	DWORD PTR _key$[esp], 0
	jne	SHORT $LN4@pkey_ec_de
; Line 224
	push	esi
	call	_EC_KEY_get0_group
; Line 225
	push	eax
	call	_EC_GROUP_get_degree
	mov	ecx, DWORD PTR _keylen$[esp+8]
	add	eax, 7
	cdq
	add	esp, 8
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR [ecx], eax
; Line 226
	mov	eax, 1
	pop	esi
; Line 242
	ret	0
$LN4@pkey_ec_de:
	push	ebx
; Line 228
	push	DWORD PTR [eax+20]
	call	_EC_KEY_get0_public_key
; Line 235
	mov	ebx, DWORD PTR _keylen$[esp+8]
; Line 237
	push	0
	push	esi
	push	eax
	push	DWORD PTR [ebx]
	push	DWORD PTR _key$[esp+24]
	call	_ECDH_compute_key
	add	esp, 24					; 00000018H
; Line 238
	test	eax, eax
	jg	SHORT $LN5@pkey_ec_de
; Line 239
	pop	ebx
	xor	eax, eax
	pop	esi
; Line 242
	ret	0
$LN5@pkey_ec_de:
; Line 240
	mov	DWORD PTR [ebx], eax
; Line 241
	mov	eax, 1
	pop	ebx
	pop	esi
; Line 242
	ret	0
$LN3@pkey_ec_de:
; Line 216
	push	216					; 000000d8H
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	140					; 0000008cH
	push	217					; 000000d9H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 217
	xor	eax, eax
	pop	esi
; Line 242
	ret	0
_pkey_ec_derive ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_verify
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sig$ = 12						; size = 4
_siglen$ = 16						; size = 4
_tbs$ = 20						; size = 4
_tbslen$ = 24						; size = 4
_pkey_ec_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 193
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	mov	ecx, DWORD PTR [eax+20]
; Line 194
	mov	eax, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [eax+20]
; Line 196
	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN2@pkey_ec_ve
; Line 197
	push	eax
	call	_EVP_MD_type
	add	esp, 4
	jmp	SHORT $LN3@pkey_ec_ve
$LN2@pkey_ec_ve:
; Line 199
	mov	eax, 64					; 00000040H
$LN3@pkey_ec_ve:
; Line 201
	push	esi
	push	DWORD PTR _siglen$[esp+4]
	push	DWORD PTR _sig$[esp+8]
	push	DWORD PTR _tbslen$[esp+12]
	push	DWORD PTR _tbs$[esp+16]
	push	eax
	call	_ECDSA_verify
	add	esp, 24					; 00000018H
	pop	esi
; Line 204
	ret	0
_pkey_ec_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_sign
_TEXT	SEGMENT
_sltmp$ = 8						; size = 4
_ctx$ = 8						; size = 4
_sig$ = 12						; size = 4
_siglen$ = 16						; size = 4
_tbs$ = 20						; size = 4
_tbslen$ = 24						; size = 4
_pkey_ec_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 167
	cmp	DWORD PTR _sig$[esp-4], 0
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	ebp
	push	esi
	mov	ebp, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [eax+20]
	jne	SHORT $LN2@pkey_ec_si
; Line 168
	push	esi
	call	_ECDSA_size
	mov	ecx, DWORD PTR _siglen$[esp+8]
	add	esp, 4
	pop	esi
	mov	DWORD PTR [ecx], eax
; Line 169
	mov	eax, 1
	pop	ebp
; Line 186
	ret	0
$LN2@pkey_ec_si:
	push	edi
; Line 170
	push	esi
	call	_ECDSA_size
	mov	edi, DWORD PTR _siglen$[esp+12]
	add	esp, 4
	cmp	DWORD PTR [edi], eax
	jae	SHORT $LN4@pkey_ec_si
; Line 171
	push	171					; 000000abH
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	100					; 00000064H
	push	218					; 000000daH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 172
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
; Line 186
	ret	0
$LN4@pkey_ec_si:
; Line 175
	mov	eax, DWORD PTR [ebp+4]
	test	eax, eax
	je	SHORT $LN5@pkey_ec_si
; Line 176
	push	eax
	call	_EVP_MD_type
	add	esp, 4
	jmp	SHORT $LN6@pkey_ec_si
$LN5@pkey_ec_si:
; Line 178
	mov	eax, 64					; 00000040H
$LN6@pkey_ec_si:
; Line 180
	push	esi
	lea	ecx, DWORD PTR _sltmp$[esp+12]
	push	ecx
	push	DWORD PTR _sig$[esp+16]
	push	DWORD PTR _tbslen$[esp+20]
	push	DWORD PTR _tbs$[esp+24]
	push	eax
	call	_ECDSA_sign
	add	esp, 24					; 00000018H
; Line 182
	test	eax, eax
	jle	SHORT $LN9@pkey_ec_si
; Line 184
	mov	eax, DWORD PTR _sltmp$[esp+8]
	mov	DWORD PTR [edi], eax
; Line 185
	mov	eax, 1
$LN9@pkey_ec_si:
; Line 186
	pop	edi
	pop	esi
	pop	ebp
	ret	0
_pkey_ec_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_cleanup
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey_ec_cleanup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 147
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+20]
; Line 148
	test	esi, esi
	je	SHORT $LN2@pkey_ec_cl
; Line 149
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@pkey_ec_cl
; Line 150
	push	eax
	call	_EC_GROUP_free
	add	esp, 4
$LN3@pkey_ec_cl:
; Line 151
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN4@pkey_ec_cl
; Line 152
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN4@pkey_ec_cl:
; Line 153
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN5@pkey_ec_cl
; Line 154
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN5@pkey_ec_cl:
; Line 155
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN2@pkey_ec_cl:
	pop	esi
; Line 157
	ret	0
_pkey_ec_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_copy
_TEXT	SEGMENT
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_pkey_ec_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 114
	push	esi
; Line 116
	mov	esi, DWORD PTR _dst$[esp]
	push	esi
	call	_pkey_ec_init
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@pkey_ec_co
	pop	esi
; Line 143
	ret	0
$LN2@pkey_ec_co:
; Line 118
	mov	eax, DWORD PTR _src$[esp]
; Line 119
	mov	esi, DWORD PTR [esi+20]
	push	edi
	mov	edi, DWORD PTR [eax+20]
; Line 120
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN4@pkey_ec_co
; Line 121
	push	eax
	call	_EC_GROUP_dup
	add	esp, 4
	mov	DWORD PTR [esi], eax
; Line 122
	test	eax, eax
	je	SHORT $LN12@pkey_ec_co
$LN4@pkey_ec_co:
; Line 125
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], eax
; Line 127
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN6@pkey_ec_co
; Line 128
	push	eax
	call	_EC_KEY_dup
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
; Line 129
	test	eax, eax
	je	SHORT $LN12@pkey_ec_co
$LN6@pkey_ec_co:
; Line 132
	mov	al, BYTE PTR [edi+13]
	mov	BYTE PTR [esi+13], al
; Line 133
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
; Line 134
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
; Line 135
	mov	eax, DWORD PTR [edi+20]
	test	eax, eax
	je	SHORT $LN7@pkey_ec_co
; Line 136
	push	DWORD PTR [edi+24]
	push	eax
	call	_BUF_memdup
	add	esp, 8
	mov	DWORD PTR [esi+20], eax
; Line 137
	test	eax, eax
	jne	SHORT $LN8@pkey_ec_co
$LN12@pkey_ec_co:
	pop	edi
; Line 138
	xor	eax, eax
	pop	esi
; Line 143
	ret	0
$LN7@pkey_ec_co:
; Line 140
	mov	DWORD PTR [esi+20], 0
$LN8@pkey_ec_co:
; Line 141
	mov	eax, DWORD PTR [edi+24]
	mov	DWORD PTR [esi+24], eax
; Line 142
	mov	eax, 1
	pop	edi
	pop	esi
; Line 143
	ret	0
_pkey_ec_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ec_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey_ec_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_pmeth.c
; Line 94
	push	94					; 0000005eH
	push	OFFSET ??_C@_0BH@FJHCLIDF@?4?2crypto?2ec?2ec_pmeth?4c?$AA@
	push	32					; 00000020H
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 95
	test	ecx, ecx
	jne	SHORT $LN2@pkey_ec_in
; Line 111
	ret	0
$LN2@pkey_ec_in:
; Line 108
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+4], 0
	mov	WORD PTR [ecx+12], 511			; 000001ffH
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+28], 0
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [eax+20], ecx
; Line 110
	mov	eax, 1
; Line 111
	ret	0
_pkey_ec_init ENDP
_TEXT	ENDS
END

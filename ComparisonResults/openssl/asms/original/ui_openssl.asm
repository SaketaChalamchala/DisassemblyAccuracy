; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BP@JCDKFDNH@OpenSSL?5default?5user?5interface?$AA@ ; `string'
;	COMDAT ??_C@_0BP@JCDKFDNH@OpenSSL?5default?5user?5interface?$AA@
CONST	SEGMENT
??_C@_0BP@JCDKFDNH@OpenSSL?5default?5user?5interface?$AA@ DB 'OpenSSL def'
	DB	'ault user interface', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_ui_openssl DD	FLAT:??_C@_0BP@JCDKFDNH@OpenSSL?5default?5user?5interface?$AA@
	DD	FLAT:_open_console
	DD	FLAT:_write_string
	DD	00H
	DD	FLAT:_read_string
	DD	FLAT:_close_console
	DD	00H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_UI_OpenSSL
PUBLIC	??_C@_0P@IOLEFIHN@Verifying?5?9?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0BA@GANIJHKH@Verify?5failure?6?$AA@	; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BJ@HNOFKLHA@?4?2crypto?2ui?2ui_openssl?4c?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_03EPNNLCDK@con?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
EXTRN	__imp__signal:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__feof:PROC
EXTRN	__imp__ferror:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fputs:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__strchr:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_UI_get_string_type:PROC
EXTRN	_UI_get_input_flags:PROC
EXTRN	_UI_get0_output_string:PROC
EXTRN	_UI_get0_action_string:PROC
EXTRN	_UI_get0_result_string:PROC
EXTRN	_UI_get0_test_string:PROC
EXTRN	_UI_set_result:PROC
EXTRN	__imp__GetStdHandle@4:PROC
EXTRN	__imp__FlushConsoleInputBuffer@4:PROC
EXTRN	__imp___getch:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_savsig	DD	020H DUP (?)
_tty_in	DD	01H DUP (?)
_tty_out DD	01H DUP (?)
_is_a_tty DD	01H DUP (?)
_intr_signal DD	01H DUP (?)
?ps@?1??read_string_inner@@9@9 DD 01H DUP (?)		; `read_string_inner'::`2'::ps
_BSS	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EPNNLCDK@con?$AA@
CONST	SEGMENT
??_C@_03EPNNLCDK@con?$AA@ DB 'con', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HNOFKLHA@?4?2crypto?2ui?2ui_openssl?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@HNOFKLHA@?4?2crypto?2ui?2ui_openssl?4c?$AA@ DB '.\crypto\ui\ui_'
	DB	'openssl.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GANIJHKH@Verify?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BA@GANIJHKH@Verify?5failure?6?$AA@ DB 'Verify failure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IOLEFIHN@Verifying?5?9?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@IOLEFIHN@Verifying?5?9?5?$CFs?$AA@ DB 'Verifying - %s', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _close_console
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_close_console PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 578
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	mov	ecx, DWORD PTR _tty_in
	add	esp, 4
	cmp	ecx, eax
	je	SHORT $LN2@close_cons
; Line 579
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN2@close_cons:
; Line 580
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	mov	ecx, DWORD PTR _tty_out
	add	esp, 4
	cmp	ecx, eax
	je	SHORT $LN3@close_cons
; Line 581
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN3@close_cons:
; Line 585
	push	585					; 00000249H
	push	OFFSET ??_C@_0BJ@HNOFKLHA@?4?2crypto?2ui?2ui_openssl?4c?$AA@
	push	31					; 0000001fH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 587
	mov	eax, 1
; Line 588
	ret	0
_close_console ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _noecho_console
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_noecho_console PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 549
	mov	eax, 1
; Line 550
	ret	0
_noecho_console ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _echo_console
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_echo_console PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 573
	mov	eax, 1
; Line 574
	ret	0
_echo_console ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _open_console
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_open_console PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 478
	push	478					; 000001deH
	push	OFFSET ??_C@_0BJ@HNOFKLHA@?4?2crypto?2ui?2ui_openssl?4c?$AA@
	push	31					; 0000001fH
	push	9
	call	_CRYPTO_lock
; Line 490
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_03EPNNLCDK@con?$AA@
	mov	DWORD PTR _is_a_tty, 1
	call	DWORD PTR __imp__fopen
	add	esp, 24					; 00000018H
	mov	DWORD PTR _tty_in, eax
	test	eax, eax
	jne	SHORT $LN2@open_conso
; Line 491
	push	eax
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	mov	DWORD PTR _tty_in, eax
$LN2@open_conso:
; Line 492
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	OFFSET ??_C@_03EPNNLCDK@con?$AA@
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _tty_out, eax
	test	eax, eax
	jne	SHORT $LN5@open_conso
; Line 493
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	mov	DWORD PTR _tty_out, eax
$LN5@open_conso:
; Line 525
	mov	eax, 1
; Line 526
	ret	0
_open_console ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _write_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_uis$ = 12						; size = 4
_write_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 347
	push	DWORD PTR _uis$[esp-4]
	call	_UI_get_string_type
	add	eax, -4					; fffffffcH
	add	esp, 4
	cmp	eax, 1
	ja	SHORT $LN7@write_stri
; Line 350
	push	DWORD PTR _tty_out
	push	DWORD PTR _uis$[esp]
	call	_UI_get0_output_string
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__fputs
; Line 351
	push	DWORD PTR _tty_out
	call	DWORD PTR __imp__fflush
	add	esp, 12					; 0000000cH
$LN7@write_stri:
; Line 356
	mov	eax, 1
; Line 357
	ret	0
_write_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _read_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_uis$ = 12						; size = 4
_read_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 360
	push	edi
; Line 363
	mov	edi, DWORD PTR _uis$[esp]
	push	edi
	call	_UI_get_string_type
	add	esp, 4
	sub	eax, 1
	je	$LN5@read_strin
	push	esi
	sub	eax, 1
	je	SHORT $LN6@read_strin
	sub	eax, 1
	jne	$LN8@read_strin
; Line 365
	push	DWORD PTR _tty_out
	push	edi
	call	_UI_get0_output_string
	mov	esi, DWORD PTR __imp__fputs
	add	esp, 4
	push	eax
	call	esi
	add	esp, 8
; Line 366
	push	DWORD PTR _tty_out
	push	edi
	call	_UI_get0_action_string
	add	esp, 4
	push	eax
	call	esi
; Line 367
	push	DWORD PTR _tty_out
	call	DWORD PTR __imp__fflush
	add	esp, 12					; 0000000cH
; Line 368
	push	0
	push	edi
	call	_UI_get_input_flags
	add	esp, 4
	and	eax, 1
	push	eax
	push	edi
	push	DWORD PTR _ui$[esp+16]
	call	_read_string_inner
	add	esp, 16					; 00000010H
$LN15@read_strin:
	pop	esi
	pop	edi
; Line 394
	ret	0
$LN6@read_strin:
; Line 378
	push	edi
	call	_UI_get0_output_string
	push	eax
	push	OFFSET ??_C@_0P@IOLEFIHN@Verifying?5?9?5?$CFs?$AA@
	push	DWORD PTR _tty_out
	call	_fprintf
; Line 379
	push	DWORD PTR _tty_out
	call	DWORD PTR __imp__fflush
	add	esp, 20					; 00000014H
; Line 382
	push	1
	push	edi
	call	_UI_get_input_flags
	add	esp, 4
	and	eax, 1
	push	eax
	push	edi
	push	DWORD PTR _ui$[esp+16]
	call	_read_string_inner
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN15@read_strin
; Line 384
	push	edi
	call	_UI_get0_test_string
	push	edi
	mov	esi, eax
	call	_UI_get0_result_string
	add	esp, 8
$LL11@read_strin:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [esi]
	jne	SHORT $LN12@read_strin
	test	cl, cl
	je	SHORT $LN13@read_strin
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [esi+1]
	jne	SHORT $LN12@read_strin
	add	eax, 2
	add	esi, 2
	test	cl, cl
	jne	SHORT $LL11@read_strin
$LN13@read_strin:
	xor	eax, eax
	jmp	SHORT $LN14@read_strin
$LN12@read_strin:
	sbb	eax, eax
	or	eax, 1
$LN14@read_strin:
	test	eax, eax
	je	SHORT $LN8@read_strin
; Line 385
	push	OFFSET ??_C@_0BA@GANIJHKH@Verify?5failure?6?$AA@
	push	DWORD PTR _tty_out
	call	_fprintf
; Line 386
	push	DWORD PTR _tty_out
	call	DWORD PTR __imp__fflush
	add	esp, 12					; 0000000cH
; Line 387
	xor	eax, eax
	pop	esi
	pop	edi
; Line 394
	ret	0
$LN8@read_strin:
	pop	esi
; Line 393
	mov	eax, 1
	pop	edi
; Line 394
	ret	0
$LN5@read_strin:
; Line 372
	push	DWORD PTR _tty_out
	push	edi
	call	_UI_get0_output_string
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__fputs
; Line 373
	push	DWORD PTR _tty_out
	call	DWORD PTR __imp__fflush
	add	esp, 12					; 0000000cH
; Line 374
	push	1
	push	edi
	call	_UI_get_input_flags
	add	esp, 4
	and	eax, 1
	push	eax
	push	edi
	push	DWORD PTR _ui$[esp+12]
	call	_read_string_inner
	add	esp, 16					; 00000010H
	pop	edi
; Line 394
	ret	0
_read_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _read_string_inner
_TEXT	SEGMENT
_result$ = -516						; size = 512
__$ArrayPad$ = -4					; size = 4
_ui$ = 8						; size = 4
_uis$ = 12						; size = 4
_echo$ = 16						; size = 4
_strip_nl$ = 20						; size = 4
_read_string_inner PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 414
	mov	eax, 516				; 00000204H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+516], eax
	push	ebx
	mov	ebx, DWORD PTR _ui$[esp+516]
	push	ebp
	mov	ebp, DWORD PTR _uis$[esp+520]
	push	esi
; Line 423
	xor	esi, esi
	mov	DWORD PTR _intr_signal, 0
; Line 424
	mov	DWORD PTR ?ps@?1??read_string_inner@@9@9, esi
; Line 426
	call	_pushsig
; Line 436
	lea	eax, DWORD PTR _result$[esp+528]
	mov	DWORD PTR ?ps@?1??read_string_inner@@9@9, 2
	push	DWORD PTR _tty_in
	mov	BYTE PTR _result$[esp+532], 0
	push	511					; 000001ffH
	push	eax
	cmp	DWORD PTR _echo$[esp+536], esi
	jne	SHORT $LN3@read_strin
	call	_noecho_fgets
	add	esp, 12					; 0000000cH
; Line 438
	jmp	SHORT $LN24@read_strin
$LN3@read_strin:
; Line 439
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
; Line 443
	test	eax, eax
	je	SHORT $error$26
$LN24@read_strin:
; Line 445
	push	DWORD PTR _tty_in
	call	DWORD PTR __imp__feof
	add	esp, 4
	test	eax, eax
	jne	SHORT $error$26
; Line 447
	push	DWORD PTR _tty_in
	call	DWORD PTR __imp__ferror
	add	esp, 4
	test	eax, eax
	jne	SHORT $error$26
; Line 449
	lea	eax, DWORD PTR _result$[esp+528]
	push	10					; 0000000aH
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@read_strin
; Line 450
	cmp	DWORD PTR _strip_nl$[esp+524], esi
	je	SHORT $LN11@read_strin
; Line 451
	mov	BYTE PTR [eax], 0
; Line 452
	jmp	SHORT $LN11@read_strin
$LN8@read_strin:
	push	DWORD PTR _tty_in
	call	_read_till_nl
	add	esp, 4
	test	eax, eax
	je	SHORT $error$26
$LN11@read_strin:
; Line 454
	lea	eax, DWORD PTR _result$[esp+528]
	push	eax
	push	ebp
	push	ebx
	call	_UI_set_result
	add	esp, 12					; 0000000cH
	mov	ecx, 1
	test	eax, eax
	cmovns	esi, ecx
$error$26:
; Line 458
	mov	eax, DWORD PTR _intr_signal
	or	ecx, -1
	cmp	eax, 2
	cmove	esi, ecx
; Line 460
	cmp	DWORD PTR _echo$[esp+524], 0
	jne	SHORT $LN14@read_strin
; Line 461
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _tty_out
	call	_fprintf
	add	esp, 8
$LN14@read_strin:
; Line 465
	cmp	DWORD PTR ?ps@?1??read_string_inner@@9@9, 1
	jl	SHORT $LN16@read_strin
; Line 466
	call	_popsig
$LN16@read_strin:
; Line 471
	lea	eax, DWORD PTR _result$[esp+528]
	push	512					; 00000200H
	push	eax
	call	_OPENSSL_cleanse
; Line 473
	mov	ecx, DWORD PTR __$ArrayPad$[esp+536]
	add	esp, 8
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	ret	0
_read_string_inner ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _noecho_fgets
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_size$ = 12						; size = 4
_tty$ = 16						; size = 4
_noecho_fgets PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 676
	push	ebx
	push	ebp
	push	esi
; Line 680
	mov	esi, DWORD PTR _buf$[esp+8]
	mov	ebx, esi
	push	edi
; Line 682
	mov	edi, DWORD PTR _size$[esp+12]
	test	edi, edi
	je	SHORT $LN11@noecho_fge
	mov	ebp, DWORD PTR __imp___getch
$LL2@noecho_fge:
; Line 686
	dec	edi
; Line 690
	call	ebp
; Line 694
	cmp	eax, 13					; 0000000dH
	mov	ecx, 10					; 0000000aH
	cmove	eax, ecx
; Line 696
	mov	BYTE PTR [ebx], al
	inc	ebx
; Line 697
	cmp	eax, ecx
	je	SHORT $LN11@noecho_fge
; Line 682
	test	edi, edi
	jne	SHORT $LL2@noecho_fge
$LN11@noecho_fge:
; Line 711
	push	-10					; fffffff6H
	mov	BYTE PTR [ebx], 0
	call	DWORD PTR __imp__GetStdHandle@4
; Line 712
	push	eax
	call	DWORD PTR __imp__FlushConsoleInputBuffer@4
; Line 715
	lea	eax, DWORD PTR [esi+1]
$LL15@noecho_fge:
	mov	cl, BYTE PTR [esi]
	inc	esi
	test	cl, cl
	jne	SHORT $LL15@noecho_fge
	sub	esi, eax
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 716
	ret	0
_noecho_fgets ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _popsig
_TEXT	SEGMENT
_popsig	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 639
	push	esi
; Line 641
	push	DWORD PTR _savsig+88
	mov	esi, DWORD PTR __imp__signal
	push	22					; 00000016H
	call	esi
; Line 642
	push	DWORD PTR _savsig+32
	push	8
	call	esi
; Line 643
	push	DWORD PTR _savsig+16
	push	4
	call	esi
; Line 644
	push	DWORD PTR _savsig+8
	push	2
	call	esi
; Line 645
	push	DWORD PTR _savsig+44
	push	11					; 0000000bH
	call	esi
; Line 646
	push	DWORD PTR _savsig+60
	push	15					; 0000000fH
	call	esi
	add	esp, 48					; 00000030H
	pop	esi
; Line 665
	ret	0
_popsig	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pushsig
_TEXT	SEGMENT
_pushsig PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 593
	push	esi
; Line 605
	mov	esi, DWORD PTR __imp__signal
	push	OFFSET _recsig
	push	22					; 00000016H
	call	esi
; Line 606
	push	OFFSET _recsig
	push	8
	mov	DWORD PTR _savsig+88, eax
	call	esi
; Line 607
	push	OFFSET _recsig
	push	4
	mov	DWORD PTR _savsig+32, eax
	call	esi
; Line 608
	push	OFFSET _recsig
	push	2
	mov	DWORD PTR _savsig+16, eax
	call	esi
; Line 609
	push	OFFSET _recsig
	push	11					; 0000000bH
	mov	DWORD PTR _savsig+8, eax
	call	esi
; Line 610
	push	OFFSET _recsig
	push	15					; 0000000fH
	mov	DWORD PTR _savsig+44, eax
	call	esi
	add	esp, 48					; 00000030H
	mov	DWORD PTR _savsig+60, eax
	pop	esi
; Line 636
	ret	0
_pushsig ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _recsig
_TEXT	SEGMENT
_i$ = 8							; size = 4
_recsig	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 669
	mov	eax, DWORD PTR _i$[esp-4]
	mov	DWORD PTR _intr_signal, eax
; Line 670
	ret	0
_recsig	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _read_till_nl
_TEXT	SEGMENT
_buf$ = -12						; size = 5
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_read_till_nl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 399
	mov	eax, 12					; 0000000cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+12], eax
	push	ebx
	mov	ebx, DWORD PTR __imp__fgets
	push	esi
	mov	esi, DWORD PTR __imp__strchr
	push	edi
	mov	edi, DWORD PTR _in$[esp+20]
$LL4@read_till_:
; Line 404
	push	edi
	lea	eax, DWORD PTR _buf$[esp+28]
	push	4
	push	eax
	call	ebx
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN8@read_till_
; Line 406
	lea	eax, DWORD PTR _buf$[esp+24]
	push	10					; 0000000aH
	push	eax
	call	esi
	add	esp, 8
	test	eax, eax
	je	SHORT $LL4@read_till_
; Line 407
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 408
	mov	ecx, DWORD PTR __$ArrayPad$[esp+12]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 12					; 0000000cH
	ret	0
$LN8@read_till_:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 12					; 0000000cH
	ret	0
_read_till_nl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_OpenSSL
_TEXT	SEGMENT
_UI_OpenSSL PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_openssl.c
; Line 338
	mov	eax, OFFSET _ui_openssl
; Line 339
	ret	0
_UI_OpenSSL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

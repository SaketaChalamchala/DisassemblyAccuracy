; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BA@LHJFADMP@file?5descriptor?$AA@	; `string'
;	COMDAT ??_C@_0BA@LHJFADMP@file?5descriptor?$AA@
CONST	SEGMENT
??_C@_0BA@LHJFADMP@file?5descriptor?$AA@ DB 'file descriptor', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_methods_fdp DD	0504H
	DD	FLAT:??_C@_0BA@LHJFADMP@file?5descriptor?$AA@
	DD	FLAT:_fd_write
	DD	FLAT:_fd_read
	DD	FLAT:_fd_puts
	DD	FLAT:_fd_gets
	DD	FLAT:_fd_ctrl
	DD	FLAT:_fd_new
	DD	FLAT:_fd_free
	DD	00H
_DATA	ENDS
PUBLIC	_BIO_s_fd
PUBLIC	_BIO_fd_should_retry
PUBLIC	_BIO_fd_non_fatal_error
PUBLIC	_BIO_new_fd
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_clear_flags:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_int_ctrl:PROC
EXTRN	_OPENSSL_UplinkTable:BYTE
; Function compile flags: /Ogtpy
;	COMDAT _fd_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_fd_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 148
	push	esi
; Line 149
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	jne	SHORT $LN2@fd_free
; Line 150
	xor	eax, eax
	pop	esi
; Line 159
	ret	0
$LN2@fd_free:
; Line 151
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN3@fd_free
; Line 152
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN4@fd_free
; Line 153
	push	DWORD PTR [esi+28]
	call	DWORD PTR _OPENSSL_UplinkTable+88
	add	esp, 4
$LN4@fd_free:
; Line 155
	mov	DWORD PTR [esi+12], 0
; Line 156
	mov	DWORD PTR [esi+20], 32768		; 00008000H
$LN3@fd_free:
; Line 158
	mov	eax, 1
	pop	esi
; Line 159
	ret	0
_fd_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fd_new
_TEXT	SEGMENT
_bi$ = 8						; size = 4
_fd_new	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 140
	mov	eax, DWORD PTR _bi$[esp-4]
	mov	DWORD PTR [eax+12], 0
; Line 141
	mov	DWORD PTR [eax+28], -1
; Line 142
	mov	DWORD PTR [eax+32], 0
; Line 143
	mov	DWORD PTR [eax+20], 32768		; 00008000H
; Line 144
	mov	eax, 1
; Line 145
	ret	0
_fd_new	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fd_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_num$ = 16						; size = 4
_ptr$ = 20						; size = 4
_fd_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 195
	mov	eax, DWORD PTR _cmd$[esp-4]
	dec	eax
	push	edi
	mov	edi, 1
	cmp	eax, 132				; 00000084H
	ja	$LN16@fd_ctrl
	movzx	eax, BYTE PTR $LN18@fd_ctrl[eax]
	jmp	DWORD PTR $LN22@fd_ctrl[eax*4]
$LN4@fd_ctrl:
; Line 197
	xor	eax, eax
	jmp	SHORT $LN5@fd_ctrl
$LN19@fd_ctrl:
	mov	eax, DWORD PTR _num$[esp]
$LN5@fd_ctrl:
; Line 199
	push	0
	push	eax
$LN20@fd_ctrl:
	mov	eax, DWORD PTR _b$[esp+8]
	push	DWORD PTR [eax+28]
	call	DWORD PTR _OPENSSL_UplinkTable+84
	add	esp, 12					; 0000000cH
	mov	edi, eax
	pop	edi
; Line 239
	ret	0
$LN6@fd_ctrl:
; Line 203
	push	1
	push	0
; Line 204
	jmp	SHORT $LN20@fd_ctrl
$LN7@fd_ctrl:
	push	esi
; Line 206
	mov	esi, DWORD PTR _b$[esp+4]
	push	esi
	call	_fd_free
; Line 207
	mov	eax, DWORD PTR _ptr$[esp+8]
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+28], eax
; Line 208
	mov	eax, DWORD PTR _num$[esp+4]
	mov	DWORD PTR [esi+16], eax
; Line 238
	mov	eax, edi
	mov	DWORD PTR [esi+12], edi
	pop	esi
	pop	edi
; Line 239
	ret	0
$LN8@fd_ctrl:
; Line 212
	mov	edi, DWORD PTR _b$[esp]
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN9@fd_ctrl
; Line 214
	mov	ecx, DWORD PTR _ptr$[esp]
	test	ecx, ecx
	je	SHORT $LN11@fd_ctrl
; Line 215
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [ecx], eax
$LN11@fd_ctrl:
; Line 216
	mov	edi, DWORD PTR [edi+28]
; Line 238
	mov	eax, edi
	pop	edi
; Line 239
	ret	0
$LN9@fd_ctrl:
; Line 218
	or	edi, -1
; Line 238
	mov	eax, edi
	pop	edi
; Line 239
	ret	0
$LN12@fd_ctrl:
; Line 221
	mov	eax, DWORD PTR _b$[esp]
	mov	edi, DWORD PTR [eax+16]
; Line 238
	mov	eax, edi
	pop	edi
; Line 239
	ret	0
$LN13@fd_ctrl:
; Line 224
	mov	eax, DWORD PTR _b$[esp]
	mov	ecx, DWORD PTR _num$[esp]
	mov	DWORD PTR [eax+16], ecx
; Line 238
	mov	eax, edi
	pop	edi
; Line 239
	ret	0
$LN16@fd_ctrl:
; Line 235
	xor	edi, edi
$LN2@fd_ctrl:
; Line 238
	mov	eax, edi
	pop	edi
; Line 239
	ret	0
$LN22@fd_ctrl:
	DD	$LN4@fd_ctrl
	DD	$LN6@fd_ctrl
	DD	$LN12@fd_ctrl
	DD	$LN13@fd_ctrl
	DD	$LN16@fd_ctrl
	DD	$LN2@fd_ctrl
	DD	$LN7@fd_ctrl
	DD	$LN8@fd_ctrl
	DD	$LN19@fd_ctrl
	DD	$LN16@fd_ctrl
$LN18@fd_ctrl:
	DB	0
	DB	9
	DB	1
	DB	9
	DB	9
	DB	9
	DB	9
	DB	2
	DB	3
	DB	4
	DB	5
	DB	5
	DB	4
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	6
	DB	7
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	8
	DB	9
	DB	9
	DB	9
	DB	9
	DB	1
_fd_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fd_gets
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_end$1$ = 12						; size = 4
_buf$ = 12						; size = 4
_size$ = 16						; size = 4
_fd_gets PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 254
	mov	eax, DWORD PTR _size$[esp-4]
	push	esi
	dec	eax
	push	edi
	mov	edi, DWORD PTR _buf$[esp+4]
	add	eax, edi
	mov	DWORD PTR _end$1$[esp+4], eax
	mov	esi, edi
; Line 256
	cmp	edi, eax
	jae	SHORT $LN9@fd_gets
	push	ebp
	mov	ebp, DWORD PTR _bp$[esp+8]
	push	ebx
	npad	3
$LL2@fd_gets:
; Line 165
	test	esi, esi
	je	SHORT $LN24@fd_gets
; Line 166
	push	0
	call	DWORD PTR __imp__SetLastError@4
; Line 167
	push	1
	push	esi
	push	DWORD PTR [ebp+28]
	call	DWORD PTR _OPENSSL_UplinkTable+76
; Line 168
	push	15					; 0000000fH
	push	ebp
	mov	ebx, eax
	call	_BIO_clear_flags
	add	esp, 20					; 00000014H
; Line 169
	test	ebx, ebx
	jle	SHORT $LN25@fd_gets
; Line 256
	cmp	BYTE PTR [esi], 10			; 0000000aH
	je	SHORT $LN24@fd_gets
; Line 257
	inc	esi
	cmp	esi, DWORD PTR _end$1$[esp+12]
	jb	SHORT $LL2@fd_gets
; Line 256
	jmp	SHORT $LN24@fd_gets
$LN25@fd_gets:
; Line 270
	je	SHORT $LN13@fd_gets
	cmp	ebx, -1
	jne	SHORT $LN24@fd_gets
$LN13@fd_gets:
; Line 271
	call	DWORD PTR __imp__GetLastError@0
; Line 279
	push	eax
	call	_BIO_fd_non_fatal_error
	add	esp, 4
; Line 170
	test	eax, eax
	je	SHORT $LN24@fd_gets
; Line 171
	push	9
	push	ebp
	call	_BIO_set_flags
	add	esp, 8
$LN24@fd_gets:
	pop	ebx
	pop	ebp
$LN9@fd_gets:
; Line 259
	mov	BYTE PTR [esi], 0
; Line 261
	cmp	BYTE PTR [edi], 0
	je	SHORT $LN22@fd_gets
; Line 262
	lea	ecx, DWORD PTR [edi+1]
	npad	7
$LL21@fd_gets:
	mov	al, BYTE PTR [edi]
	inc	edi
	test	al, al
	jne	SHORT $LL21@fd_gets
	sub	edi, ecx
; Line 263
	mov	eax, edi
	pop	edi
	pop	esi
; Line 264
	ret	0
$LN22@fd_gets:
	pop	edi
; Line 263
	xor	eax, eax
	pop	esi
; Line 264
	ret	0
_fd_gets ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fd_puts
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_str$ = 12						; size = 4
_fd_puts PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 242
	push	esi
	push	edi
; Line 245
	mov	edi, DWORD PTR _str$[esp+4]
	mov	esi, edi
	lea	ecx, DWORD PTR [esi+1]
	npad	5
$LL11@fd_puts:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL11@fd_puts
; Line 180
	push	0
; Line 245
	sub	esi, ecx
; Line 180
	call	DWORD PTR __imp__SetLastError@4
; Line 181
	push	esi
	push	edi
	mov	edi, DWORD PTR _bp$[esp+12]
	push	DWORD PTR [edi+28]
	call	DWORD PTR _OPENSSL_UplinkTable+80
; Line 182
	push	15					; 0000000fH
	push	edi
	mov	esi, eax
	call	_BIO_clear_flags
	add	esp, 20					; 00000014H
; Line 183
	test	esi, esi
	jg	SHORT $LN13@fd_puts
; Line 270
	je	SHORT $LN9@fd_puts
	cmp	esi, -1
	jne	SHORT $LN13@fd_puts
$LN9@fd_puts:
; Line 271
	call	DWORD PTR __imp__GetLastError@0
; Line 279
	push	eax
	call	_BIO_fd_non_fatal_error
	add	esp, 4
; Line 184
	test	eax, eax
	je	SHORT $LN13@fd_puts
; Line 185
	push	10					; 0000000aH
	push	edi
	call	_BIO_set_flags
	add	esp, 8
$LN13@fd_puts:
	pop	edi
; Line 247
	mov	eax, esi
	pop	esi
; Line 248
	ret	0
_fd_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fd_read
_TEXT	SEGMENT
_b$ = 8							; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_fd_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 162
	push	esi
; Line 165
	mov	esi, DWORD PTR _out$[esp]
	test	esi, esi
	je	SHORT $LN12@fd_read
; Line 166
	push	edi
	push	0
	call	DWORD PTR __imp__SetLastError@4
; Line 167
	push	DWORD PTR _outl$[esp+4]
	mov	edi, DWORD PTR _b$[esp+8]
	push	esi
	push	DWORD PTR [edi+28]
	call	DWORD PTR _OPENSSL_UplinkTable+76
; Line 168
	push	15					; 0000000fH
	push	edi
	mov	esi, eax
	call	_BIO_clear_flags
	add	esp, 20					; 00000014H
; Line 169
	test	esi, esi
	jg	SHORT $LN10@fd_read
; Line 270
	je	SHORT $LN8@fd_read
	cmp	esi, -1
	jne	SHORT $LN10@fd_read
$LN8@fd_read:
; Line 271
	call	DWORD PTR __imp__GetLastError@0
; Line 279
	push	eax
	call	_BIO_fd_non_fatal_error
	add	esp, 4
; Line 170
	test	eax, eax
	je	SHORT $LN10@fd_read
; Line 171
	push	9
	push	edi
	call	_BIO_set_flags
	add	esp, 8
$LN10@fd_read:
; Line 174
	pop	edi
	mov	eax, esi
	pop	esi
; Line 175
	ret	0
$LN12@fd_read:
; Line 174
	xor	eax, eax
	pop	esi
; Line 175
	ret	0
_fd_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fd_write
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_fd_write PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 178
	push	esi
	push	edi
; Line 180
	push	0
	call	DWORD PTR __imp__SetLastError@4
; Line 181
	push	DWORD PTR _inl$[esp+4]
	mov	edi, DWORD PTR _b$[esp+8]
	push	DWORD PTR _in$[esp+8]
	push	DWORD PTR [edi+28]
	call	DWORD PTR _OPENSSL_UplinkTable+80
; Line 182
	push	15					; 0000000fH
	push	edi
	mov	esi, eax
	call	_BIO_clear_flags
	add	esp, 20					; 00000014H
; Line 183
	test	esi, esi
	jg	SHORT $LN10@fd_write
; Line 270
	je	SHORT $LN7@fd_write
	cmp	esi, -1
	jne	SHORT $LN10@fd_write
$LN7@fd_write:
; Line 271
	call	DWORD PTR __imp__GetLastError@0
; Line 279
	push	eax
	call	_BIO_fd_non_fatal_error
	add	esp, 4
; Line 184
	test	eax, eax
	je	SHORT $LN10@fd_write
; Line 185
	push	10					; 0000000aH
	push	edi
	call	_BIO_set_flags
	add	esp, 8
$LN10@fd_write:
; Line 187
	pop	edi
	mov	eax, esi
	pop	esi
; Line 188
	ret	0
_fd_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_fd
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_close_flag$ = 12					; size = 4
_BIO_new_fd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 129
	push	esi
; Line 131
	push	OFFSET _methods_fdp
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 132
	test	esi, esi
	jne	SHORT $LN2@BIO_new_fd
	pop	esi
; Line 136
	ret	0
$LN2@BIO_new_fd:
; Line 134
	push	DWORD PTR _fd$[esp]
	push	DWORD PTR _close_flag$[esp+4]
	push	104					; 00000068H
	push	esi
	call	_BIO_int_ctrl
	add	esp, 16					; 00000010H
; Line 135
	mov	eax, esi
	pop	esi
; Line 136
	ret	0
_BIO_new_fd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_fd_non_fatal_error
_TEXT	SEGMENT
_err$ = 8						; size = 4
_BIO_fd_non_fatal_error PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 286
	mov	eax, DWORD PTR _err$[esp-4]
	add	eax, -4					; fffffffcH
	cmp	eax, 136				; 00000088H
	ja	SHORT $LN5@BIO_fd_non
	movzx	eax, BYTE PTR $LN7@BIO_fd_non[eax]
	jmp	DWORD PTR $LN9@BIO_fd_non[eax*4]
$LN4@BIO_fd_non:
; Line 323
	mov	eax, 1
; Line 329
	ret	0
$LN5@BIO_fd_non:
; Line 328
	xor	eax, eax
; Line 329
	ret	0
	npad	3
$LN9@BIO_fd_non:
	DD	$LN4@BIO_fd_non
	DD	$LN5@BIO_fd_non
$LN7@BIO_fd_non:
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
_BIO_fd_non_fatal_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_fd_should_retry
_TEXT	SEGMENT
_i$ = 8							; size = 4
_BIO_fd_should_retry PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 270
	mov	eax, DWORD PTR _i$[esp-4]
	test	eax, eax
	je	SHORT $LN3@BIO_fd_sho
	cmp	eax, -1
	je	SHORT $LN3@BIO_fd_sho
; Line 281
	xor	eax, eax
; Line 282
	ret	0
$LN3@BIO_fd_sho:
; Line 271
	call	DWORD PTR __imp__GetLastError@0
; Line 279
	mov	DWORD PTR _i$[esp-4], eax
	jmp	_BIO_fd_non_fatal_error
_BIO_fd_should_retry ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_s_fd
_TEXT	SEGMENT
_BIO_s_fd PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_fd.c
; Line 125
	mov	eax, OFFSET _methods_fdp
; Line 126
	ret	0
_BIO_s_fd ENDP
_TEXT	ENDS
END

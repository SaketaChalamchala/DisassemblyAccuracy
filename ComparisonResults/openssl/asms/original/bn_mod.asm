; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_BN_nnmod
PUBLIC	_BN_mod_add
PUBLIC	_BN_mod_add_quick
PUBLIC	_BN_mod_sub
PUBLIC	_BN_mod_sub_quick
PUBLIC	_BN_mod_mul
PUBLIC	_BN_mod_sqr
PUBLIC	_BN_mod_lshift1
PUBLIC	_BN_mod_lshift1_quick
PUBLIC	_BN_mod_lshift
PUBLIC	_BN_mod_lshift_quick
PUBLIC	??_C@_0BF@IHGKFBOP@?4?2crypto?2bn?2bn_mod?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_copy:PROC
EXTRN	_BN_sub:PROC
EXTRN	_BN_usub:PROC
EXTRN	_BN_uadd:PROC
EXTRN	_BN_add:PROC
EXTRN	_BN_mul:PROC
EXTRN	_BN_sqr:PROC
EXTRN	_BN_div:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_lshift:PROC
EXTRN	_BN_lshift1:PROC
EXTRN	_BN_dup:PROC
EXTRN	_BN_ucmp:PROC
;	COMDAT ??_C@_0BF@IHGKFBOP@?4?2crypto?2bn?2bn_mod?4c?$AA@
CONST	SEGMENT
??_C@_0BF@IHGKFBOP@?4?2crypto?2bn?2bn_mod?4c?$AA@ DB '.\crypto\bn\bn_mod.'
	DB	'c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_lshift_quick
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_n$ = 16						; size = 4
_m$ = 20						; size = 4
_BN_mod_lshift_quick PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 276
	mov	eax, DWORD PTR _a$[esp-4]
	push	edi
	mov	edi, DWORD PTR _r$[esp]
	cmp	edi, eax
	je	SHORT $LN15@BN_mod_lsh
; Line 277
	push	eax
	push	edi
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@BN_mod_lsh
	pop	edi
; Line 316
	ret	0
$LN15@BN_mod_lsh:
	push	ebx
; Line 281
	mov	ebx, DWORD PTR _n$[esp+4]
	push	ebp
	push	esi
	test	ebx, ebx
	jle	SHORT $LN3@BN_mod_lsh
	mov	ebp, DWORD PTR _m$[esp+12]
	npad	4
$LL2@BN_mod_lsh:
; Line 285
	push	edi
	call	_BN_num_bits
	push	ebp
	mov	esi, eax
	call	_BN_num_bits
	mov	ebp, eax
	add	esp, 8
	sub	ebp, esi
; Line 288
	js	SHORT $LN16@BN_mod_lsh
; Line 293
	cmp	ebp, ebx
	cmovg	ebp, ebx
; Line 296
	test	ebp, ebp
	je	SHORT $LN8@BN_mod_lsh
; Line 297
	push	ebp
	push	edi
	push	edi
	call	_BN_lshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN18@BN_mod_lsh
; Line 299
	sub	ebx, ebp
; Line 300
	jmp	SHORT $LN9@BN_mod_lsh
$LN8@BN_mod_lsh:
; Line 301
	push	edi
	push	edi
	call	_BN_lshift1
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@BN_mod_lsh
; Line 303
	dec	ebx
$LN9@BN_mod_lsh:
; Line 308
	mov	ebp, DWORD PTR _m$[esp+12]
	push	ebp
	push	edi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN13@BN_mod_lsh
; Line 309
	push	ebp
	push	edi
	push	edi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN18@BN_mod_lsh
$LN13@BN_mod_lsh:
; Line 281
	test	ebx, ebx
	jg	SHORT $LL2@BN_mod_lsh
$LN3@BN_mod_lsh:
	pop	esi
	pop	ebp
	pop	ebx
; Line 315
	mov	eax, 1
	pop	edi
; Line 316
	ret	0
$LN16@BN_mod_lsh:
; Line 289
	push	289					; 00000121H
	push	OFFSET ??_C@_0BF@IHGKFBOP@?4?2crypto?2bn?2bn_mod?4c?$AA@
	push	110					; 0000006eH
	push	119					; 00000077H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN18@BN_mod_lsh:
; Line 290
	pop	esi
	pop	ebp
	pop	ebx
	xor	eax, eax
	pop	edi
; Line 316
	ret	0
_BN_mod_lshift_quick ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_lshift
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_n$ = 16						; size = 4
_m$ = 20						; size = 4
_ctx$ = 24						; size = 4
_BN_mod_lshift PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 248
	push	ebx
; Line 134
	mov	ebx, DWORD PTR _r$[esp]
	push	esi
	push	edi
	push	DWORD PTR _ctx$[esp+8]
	mov	edi, DWORD PTR _m$[esp+12]
; Line 249
	xor	esi, esi
; Line 134
	push	edi
	push	DWORD PTR _a$[esp+16]
	push	ebx
	push	esi
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN11@BN_mod_lsh
; Line 136
	cmp	DWORD PTR [ebx+12], esi
	je	SHORT $LN2@BN_mod_lsh
; Line 139
	cmp	DWORD PTR [edi+12], esi
	mov	ecx, OFFSET _BN_sub
	push	edi
	push	ebx
	mov	eax, OFFSET _BN_add
	push	ebx
	cmovne	eax, ecx
	call	eax
	add	esp, 12					; 0000000cH
; Line 252
	test	eax, eax
	je	SHORT $LN11@BN_mod_lsh
$LN2@BN_mod_lsh:
; Line 255
	cmp	DWORD PTR [edi+12], esi
	je	SHORT $LN3@BN_mod_lsh
; Line 256
	push	edi
	call	_BN_dup
	mov	esi, eax
	add	esp, 4
; Line 257
	test	esi, esi
	je	SHORT $LN11@BN_mod_lsh
; Line 259
	mov	DWORD PTR [esi+12], 0
$LN3@BN_mod_lsh:
; Line 262
	test	esi, esi
	cmovne	edi, esi
	push	edi
	push	DWORD PTR _n$[esp+12]
	push	ebx
	push	ebx
	call	_BN_mod_lshift_quick
	add	esp, 16					; 00000010H
	mov	edi, eax
; Line 265
	test	esi, esi
	je	SHORT $LN5@BN_mod_lsh
; Line 266
	push	esi
	call	_BN_free
	add	esp, 4
$LN5@BN_mod_lsh:
; Line 267
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 268
	ret	0
$LN11@BN_mod_lsh:
	pop	edi
	pop	esi
; Line 253
	xor	eax, eax
	pop	ebx
; Line 268
	ret	0
_BN_mod_lshift ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_lshift1_quick
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_m$ = 16						; size = 4
_BN_mod_lshift1_quick PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 237
	push	esi
; Line 238
	push	DWORD PTR _a$[esp]
	mov	esi, DWORD PTR _r$[esp+4]
	push	esi
	call	_BN_lshift1
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@BN_mod_lsh
	pop	esi
; Line 244
	ret	0
$LN2@BN_mod_lsh:
; Line 241
	push	DWORD PTR _m$[esp]
	push	esi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN3@BN_mod_lsh
; Line 242
	push	DWORD PTR _m$[esp]
	push	esi
	push	esi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	pop	esi
; Line 244
	ret	0
$LN3@BN_mod_lsh:
; Line 243
	mov	eax, 1
	pop	esi
; Line 244
	ret	0
_BN_mod_lshift1_quick ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_lshift1
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_m$ = 16						; size = 4
_ctx$ = 20						; size = 4
_BN_mod_lshift1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 225
	push	esi
; Line 226
	push	DWORD PTR _a$[esp]
	mov	esi, DWORD PTR _r$[esp+4]
	push	esi
	call	_BN_lshift1
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@BN_mod_lsh
	pop	esi
; Line 230
	ret	0
$LN2@BN_mod_lsh:
	push	edi
; Line 134
	push	DWORD PTR _ctx$[esp+4]
	mov	edi, DWORD PTR _m$[esp+8]
	push	edi
	push	esi
	push	esi
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN5@BN_mod_lsh
	pop	edi
	pop	esi
; Line 230
	ret	0
$LN5@BN_mod_lsh:
; Line 136
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN6@BN_mod_lsh
	pop	edi
; Line 137
	mov	eax, 1
	pop	esi
; Line 230
	ret	0
$LN6@BN_mod_lsh:
; Line 139
	cmp	DWORD PTR [edi+12], 0
	mov	ecx, OFFSET _BN_sub
	push	edi
	push	esi
	mov	eax, OFFSET _BN_add
	push	esi
	cmovne	eax, ecx
	call	eax
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 230
	ret	0
_BN_mod_lshift1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_sqr
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_m$ = 16						; size = 4
_ctx$ = 20						; size = 4
_BN_mod_sqr PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 217
	push	esi
; Line 218
	push	DWORD PTR _ctx$[esp]
	mov	esi, DWORD PTR _r$[esp+4]
	push	DWORD PTR _a$[esp+4]
	push	esi
	call	_BN_sqr
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@BN_mod_sqr
	pop	esi
; Line 222
	ret	0
$LN2@BN_mod_sqr:
; Line 221
	push	DWORD PTR _ctx$[esp]
	push	DWORD PTR _m$[esp+4]
	push	esi
	push	esi
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	pop	esi
; Line 222
	ret	0
_BN_mod_sqr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_mul
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_m$ = 20						; size = 4
_ctx$ = 24						; size = 4
_BN_mod_mul PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 189
	push	ebx
	push	esi
; Line 197
	mov	esi, DWORD PTR _ctx$[esp+4]
	xor	ebx, ebx
	push	edi
	push	esi
	call	_BN_CTX_start
; Line 198
	push	esi
	call	_BN_CTX_get
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $err$12
; Line 200
	mov	eax, DWORD PTR _a$[esp+8]
	mov	ecx, DWORD PTR _b$[esp+8]
; Line 201
	push	esi
	cmp	eax, ecx
	jne	SHORT $LN3@BN_mod_mul
	push	eax
	push	edi
	call	_BN_sqr
	add	esp, 12					; 0000000cH
; Line 203
	jmp	SHORT $LN10@BN_mod_mul
$LN3@BN_mod_mul:
; Line 204
	push	ecx
	push	eax
	push	edi
	call	_BN_mul
	add	esp, 16					; 00000010H
$LN10@BN_mod_mul:
	test	eax, eax
	je	SHORT $err$12
; Line 207
	push	esi
	push	DWORD PTR _m$[esp+12]
	push	edi
	push	DWORD PTR _r$[esp+20]
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	mov	ecx, 1
	test	eax, eax
	cmovne	ebx, ecx
$err$12:
; Line 212
	push	esi
	call	_BN_CTX_end
	add	esp, 4
; Line 213
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 214
	ret	0
_BN_mod_mul ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_sub_quick
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_m$ = 20						; size = 4
_BN_mod_sub_quick PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 178
	push	esi
; Line 179
	push	DWORD PTR _b$[esp]
	mov	esi, DWORD PTR _r$[esp+4]
	push	DWORD PTR _a$[esp+4]
	push	esi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@BN_mod_sub
	pop	esi
; Line 184
	ret	0
$LN2@BN_mod_sub:
; Line 181
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN3@BN_mod_sub
; Line 182
	push	DWORD PTR _m$[esp]
	push	esi
	push	esi
	call	_BN_add
	add	esp, 12					; 0000000cH
	pop	esi
; Line 184
	ret	0
$LN3@BN_mod_sub:
; Line 183
	mov	eax, 1
	pop	esi
; Line 184
	ret	0
_BN_mod_sub_quick ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_sub
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_m$ = 20						; size = 4
_ctx$ = 24						; size = 4
_BN_mod_sub PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 166
	push	esi
; Line 167
	push	DWORD PTR _b$[esp]
	mov	esi, DWORD PTR _r$[esp+4]
	push	DWORD PTR _a$[esp+4]
	push	esi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@BN_mod_sub
	pop	esi
; Line 170
	ret	0
$LN2@BN_mod_sub:
	push	edi
; Line 134
	push	DWORD PTR _ctx$[esp+4]
	mov	edi, DWORD PTR _m$[esp+8]
	push	edi
	push	esi
	push	esi
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN5@BN_mod_sub
	pop	edi
	pop	esi
; Line 170
	ret	0
$LN5@BN_mod_sub:
; Line 136
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN6@BN_mod_sub
	pop	edi
; Line 137
	mov	eax, 1
	pop	esi
; Line 170
	ret	0
$LN6@BN_mod_sub:
; Line 139
	cmp	DWORD PTR [edi+12], 0
	mov	ecx, OFFSET _BN_sub
	push	edi
	push	esi
	mov	eax, OFFSET _BN_add
	push	esi
	cmovne	eax, ecx
	call	eax
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 170
	ret	0
_BN_mod_sub ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_add_quick
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_m$ = 20						; size = 4
_BN_mod_add_quick PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 156
	push	esi
; Line 157
	push	DWORD PTR _b$[esp]
	mov	esi, DWORD PTR _r$[esp+4]
	push	DWORD PTR _a$[esp+4]
	push	esi
	call	_BN_uadd
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@BN_mod_add
	pop	esi
; Line 162
	ret	0
$LN2@BN_mod_add:
; Line 159
	push	DWORD PTR _m$[esp]
	push	esi
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN3@BN_mod_add
; Line 160
	push	DWORD PTR _m$[esp]
	push	esi
	push	esi
	call	_BN_usub
	add	esp, 12					; 0000000cH
	pop	esi
; Line 162
	ret	0
$LN3@BN_mod_add:
; Line 161
	mov	eax, 1
	pop	esi
; Line 162
	ret	0
_BN_mod_add_quick ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_add
_TEXT	SEGMENT
_r$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_m$ = 20						; size = 4
_ctx$ = 24						; size = 4
_BN_mod_add PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 144
	push	esi
; Line 145
	push	DWORD PTR _b$[esp]
	mov	esi, DWORD PTR _r$[esp+4]
	push	DWORD PTR _a$[esp+4]
	push	esi
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@BN_mod_add
	pop	esi
; Line 148
	ret	0
$LN2@BN_mod_add:
	push	edi
; Line 134
	push	DWORD PTR _ctx$[esp+4]
	mov	edi, DWORD PTR _m$[esp+8]
	push	edi
	push	esi
	push	esi
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN5@BN_mod_add
	pop	edi
	pop	esi
; Line 148
	ret	0
$LN5@BN_mod_add:
; Line 136
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN6@BN_mod_add
	pop	edi
; Line 137
	mov	eax, 1
	pop	esi
; Line 148
	ret	0
$LN6@BN_mod_add:
; Line 139
	cmp	DWORD PTR [edi+12], 0
	mov	ecx, OFFSET _BN_sub
	push	edi
	push	esi
	mov	eax, OFFSET _BN_add
	push	esi
	cmovne	eax, ecx
	call	eax
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 148
	ret	0
_BN_mod_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_nnmod
_TEXT	SEGMENT
_r$ = 8							; size = 4
_m$ = 12						; size = 4
_d$ = 16						; size = 4
_ctx$ = 20						; size = 4
_BN_nnmod PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mod.c
; Line 128
	push	esi
; Line 134
	mov	esi, DWORD PTR _r$[esp]
	push	edi
	push	DWORD PTR _ctx$[esp+4]
	mov	edi, DWORD PTR _d$[esp+8]
	push	edi
	push	DWORD PTR _m$[esp+12]
	push	esi
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN2@BN_nnmod
	pop	edi
	pop	esi
; Line 140
	ret	0
$LN2@BN_nnmod:
; Line 136
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN3@BN_nnmod
; Line 137
	pop	edi
	mov	eax, 1
	pop	esi
; Line 140
	ret	0
$LN3@BN_nnmod:
; Line 139
	cmp	DWORD PTR [edi+12], 0
	mov	ecx, OFFSET _BN_sub
	push	edi
	push	esi
	mov	eax, OFFSET _BN_add
	push	esi
	cmovne	eax, ecx
	call	eax
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 140
	ret	0
_BN_nnmod ENDP
_TEXT	ENDS
END

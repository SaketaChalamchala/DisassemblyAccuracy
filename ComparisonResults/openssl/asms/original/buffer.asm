; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\buffer\buffer.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_BUF_MEM_new
PUBLIC	_BUF_MEM_free
PUBLIC	_BUF_MEM_grow
PUBLIC	_BUF_MEM_grow_clean
PUBLIC	_BUF_reverse
PUBLIC	??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_realloc:PROC
EXTRN	_CRYPTO_realloc_clean:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@ DB '.\crypto\buffer'
	DB	'\buffer.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BUF_reverse
_TEXT	SEGMENT
_out$ = 8						; size = 4
_in$ = 12						; size = 4
_size$ = 16						; size = 4
_BUF_reverse PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\buffer\buffer.c
; Line 173
	mov	ecx, DWORD PTR _in$[esp-4]
	push	esi
	test	ecx, ecx
	je	SHORT $LN8@BUF_revers
; Line 174
	mov	esi, DWORD PTR _size$[esp]
	lea	edx, DWORD PTR [esi-1]
	add	edx, DWORD PTR _out$[esp]
; Line 175
	test	esi, esi
	je	SHORT $LN6@BUF_revers
$LL4@BUF_revers:
; Line 176
	mov	al, BYTE PTR [ecx]
	lea	edx, DWORD PTR [edx-1]
	mov	BYTE PTR [edx+1], al
	lea	ecx, DWORD PTR [ecx+1]
	sub	esi, 1
	jne	SHORT $LL4@BUF_revers
	pop	esi
; Line 187
	ret	0
$LN8@BUF_revers:
; Line 180
	mov	edx, DWORD PTR _out$[esp]
	push	edi
	mov	edi, DWORD PTR _size$[esp+4]
	lea	esi, DWORD PTR [edi-1]
	add	esi, edx
; Line 181
	shr	edi, 1
	je	SHORT $LN19@BUF_revers
	npad	4
$LL7@BUF_revers:
; Line 183
	mov	al, BYTE PTR [edx]
	lea	esi, DWORD PTR [esi-1]
	mov	cl, BYTE PTR [esi+1]
; Line 184
	lea	edx, DWORD PTR [edx+1]
	mov	BYTE PTR [esi+1], al
	mov	BYTE PTR [edx-1], cl
	sub	edi, 1
	jne	SHORT $LL7@BUF_revers
$LN19@BUF_revers:
	pop	edi
$LN6@BUF_revers:
	pop	esi
; Line 187
	ret	0
_BUF_reverse ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BUF_MEM_grow_clean
_TEXT	SEGMENT
_str$ = 8						; size = 4
_len$ = 12						; size = 4
_BUF_MEM_grow_clean PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\buffer\buffer.c
; Line 134
	push	esi
; Line 138
	mov	esi, DWORD PTR _len$[esp]
	push	edi
	mov	edi, DWORD PTR _str$[esp+4]
	mov	ecx, DWORD PTR [edi]
	cmp	ecx, esi
	jb	SHORT $LN2@BUF_MEM_gr
; Line 139
	sub	ecx, esi
	push	ecx
	mov	ecx, DWORD PTR [edi+4]
	add	ecx, esi
	push	0
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 140
	mov	DWORD PTR [edi], esi
; Line 167
	mov	eax, esi
	pop	edi
	pop	esi
; Line 168
	ret	0
$LN2@BUF_MEM_gr:
; Line 143
	cmp	DWORD PTR [edi+8], esi
	jb	SHORT $LN3@BUF_MEM_gr
; Line 144
	mov	eax, esi
	sub	eax, ecx
	push	eax
	mov	eax, DWORD PTR [edi+4]
	add	eax, ecx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 145
	mov	DWORD PTR [edi], esi
; Line 167
	mov	eax, esi
	pop	edi
	pop	esi
; Line 168
	ret	0
$LN3@BUF_MEM_gr:
; Line 149
	cmp	esi, 1610612732				; 5ffffffcH
	jbe	SHORT $LN4@BUF_MEM_gr
; Line 150
	push	150					; 00000096H
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	65					; 00000041H
	push	105					; 00000069H
	push	7
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 151
	xor	eax, eax
	pop	edi
	pop	esi
; Line 168
	ret	0
$LN4@BUF_MEM_gr:
; Line 153
	lea	ecx, DWORD PTR [esi+3]
	mov	eax, -1431655765			; aaaaaaabH
	mul	ecx
; Line 154
	mov	eax, DWORD PTR [edi+4]
	push	ebx
	mov	ebx, edx
	shr	ebx, 1
	shl	ebx, 2
	test	eax, eax
	jne	SHORT $LN5@BUF_MEM_gr
; Line 155
	push	155					; 0000009bH
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	ebx
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN11@BUF_MEM_gr
$LN5@BUF_MEM_gr:
; Line 157
	push	157					; 0000009dH
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	ebx
	push	DWORD PTR [edi+8]
	push	eax
	call	_CRYPTO_realloc_clean
	add	esp, 20					; 00000014H
$LN11@BUF_MEM_gr:
	mov	edx, eax
; Line 158
	test	edx, edx
	jne	SHORT $LN7@BUF_MEM_gr
; Line 159
	push	159					; 0000009fH
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	65					; 00000041H
	push	105					; 00000069H
	push	7
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 160
	xor	esi, esi
; Line 167
	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi
; Line 168
	ret	0
$LN7@BUF_MEM_gr:
; Line 164
	mov	ecx, DWORD PTR [edi]
	mov	eax, esi
	sub	eax, ecx
	mov	DWORD PTR [edi+4], edx
	push	eax
	push	0
	lea	eax, DWORD PTR [ecx+edx]
	mov	DWORD PTR [edi+8], ebx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 165
	mov	DWORD PTR [edi], esi
; Line 167
	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi
; Line 168
	ret	0
_BUF_MEM_grow_clean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BUF_MEM_grow
_TEXT	SEGMENT
_str$ = 8						; size = 4
_len$ = 12						; size = 4
_BUF_MEM_grow PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\buffer\buffer.c
; Line 98
	push	esi
; Line 102
	mov	esi, DWORD PTR _len$[esp]
	push	edi
	mov	edi, DWORD PTR _str$[esp+4]
	mov	ecx, DWORD PTR [edi]
	cmp	ecx, esi
	jae	SHORT $LN12@BUF_MEM_gr
; Line 106
	cmp	DWORD PTR [edi+8], esi
	jb	SHORT $LN3@BUF_MEM_gr
; Line 107
	mov	eax, esi
	sub	eax, ecx
	push	eax
	mov	eax, DWORD PTR [edi+4]
	add	eax, ecx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN12@BUF_MEM_gr:
; Line 108
	mov	DWORD PTR [edi], esi
; Line 130
	mov	eax, esi
	pop	edi
	pop	esi
; Line 131
	ret	0
$LN3@BUF_MEM_gr:
; Line 112
	cmp	esi, 1610612732				; 5ffffffcH
	jbe	SHORT $LN4@BUF_MEM_gr
; Line 113
	push	113					; 00000071H
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	65					; 00000041H
	push	100					; 00000064H
	push	7
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 114
	xor	eax, eax
	pop	edi
	pop	esi
; Line 131
	ret	0
$LN4@BUF_MEM_gr:
; Line 116
	lea	ecx, DWORD PTR [esi+3]
	mov	eax, -1431655765			; aaaaaaabH
	mul	ecx
; Line 117
	mov	eax, DWORD PTR [edi+4]
	push	ebx
	mov	ebx, edx
	shr	ebx, 1
	shl	ebx, 2
	test	eax, eax
	jne	SHORT $LN5@BUF_MEM_gr
; Line 118
	push	118					; 00000076H
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	ebx
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN11@BUF_MEM_gr
$LN5@BUF_MEM_gr:
; Line 120
	push	120					; 00000078H
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	ebx
	push	eax
	call	_CRYPTO_realloc
	add	esp, 16					; 00000010H
$LN11@BUF_MEM_gr:
	mov	edx, eax
; Line 121
	test	edx, edx
	jne	SHORT $LN7@BUF_MEM_gr
; Line 122
	push	122					; 0000007aH
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	65					; 00000041H
	push	100					; 00000064H
	push	7
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 123
	xor	esi, esi
; Line 130
	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi
; Line 131
	ret	0
$LN7@BUF_MEM_gr:
; Line 127
	mov	ecx, DWORD PTR [edi]
	mov	eax, esi
	sub	eax, ecx
	mov	DWORD PTR [edi+4], edx
	push	eax
	push	0
	lea	eax, DWORD PTR [ecx+edx]
	mov	DWORD PTR [edi+8], ebx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 128
	mov	DWORD PTR [edi], esi
; Line 130
	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi
; Line 131
	ret	0
_BUF_MEM_grow ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BUF_MEM_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_BUF_MEM_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\buffer\buffer.c
; Line 86
	push	esi
; Line 87
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	SHORT $LN1@BUF_MEM_fr
; Line 90
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN3@BUF_MEM_fr
; Line 91
	push	DWORD PTR [esi+8]
	push	eax
	call	_OPENSSL_cleanse
; Line 92
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN3@BUF_MEM_fr:
; Line 94
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@BUF_MEM_fr:
	pop	esi
; Line 95
	ret	0
_BUF_MEM_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BUF_MEM_new
_TEXT	SEGMENT
_BUF_MEM_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\buffer\buffer.c
; Line 74
	push	74					; 0000004aH
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	12					; 0000000cH
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 75
	test	eax, eax
	jne	SHORT $LN2@BUF_MEM_ne
; Line 76
	push	76					; 0000004cH
	push	OFFSET ??_C@_0BJ@BNFJHNHM@?4?2crypto?2buffer?2buffer?4c?$AA@
	push	65					; 00000041H
	push	101					; 00000065H
	push	7
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 77
	xor	eax, eax
; Line 83
	ret	0
$LN2@BUF_MEM_ne:
; Line 79
	mov	DWORD PTR [eax], 0
; Line 80
	mov	DWORD PTR [eax+8], 0
; Line 81
	mov	DWORD PTR [eax+4], 0
; Line 83
	ret	0
_BUF_MEM_new ENDP
_TEXT	ENDS
END

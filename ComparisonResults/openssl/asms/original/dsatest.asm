; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsatest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_bio_err DD	01H DUP (?)
?ok@?1??dsa_cb@@9@9 DD 01H DUP (?)			; `dsa_cb'::`2'::ok
?num@?1??dsa_cb@@9@9 DD 01H DUP (?)			; `dsa_cb'::`2'::num
_BSS	ENDS
CONST	SEGMENT
_str1	DB	'12345678901234567890', 00H
	ORG $+3
_rnd_seed DB	'string to make the random number generator think it has '
	DB	'entropy', 00H
CONST	ENDS
_DATA	SEGMENT
_seed	DB	0d5H
	DB	01H
	DB	04eH
	DB	04bH
	DB	060H
	DB	0efH
	DB	02bH
	DB	0a8H
	DB	0b6H
	DB	021H
	DB	01bH
	DB	040H
	DB	062H
	DB	0baH
	DB	032H
	DB	024H
	DB	0e0H
	DB	042H
	DB	07dH
	DB	0d3H
_out_q	DB	0c7H
	DB	073H
	DB	021H
	DB	08cH
	DB	073H
	DB	07eH
	DB	0c8H
	DB	0eeH
	DB	099H
	DB	03bH
	DB	04fH
	DB	02dH
	DB	0edH
	DB	030H
	DB	0f4H
	DB	08eH
	DB	0daH
	DB	0ceH
	DB	091H
	DB	05fH
_out_p	DB	08dH
	DB	0f2H
	DB	0a4H
	DB	094H
	DB	049H
	DB	022H
	DB	076H
	DB	0aaH
	DB	03dH
	DB	025H
	DB	075H
	DB	09bH
	DB	0b0H
	DB	068H
	DB	069H
	DB	0cbH
	DB	0eaH
	DB	0c0H
	DB	0d8H
	DB	03aH
	DB	0fbH
	DB	08dH
	DB	0cH
	DB	0f7H
	DB	0cbH
	DB	0b8H
	DB	032H
	DB	04fH
	DB	0dH
	DB	078H
	DB	082H
	DB	0e5H
	DB	0d0H
	DB	076H
	DB	02fH
	DB	0c5H
	DB	0b7H
	DB	021H
	DB	0eH
	DB	0afH
	DB	0c2H
	DB	0e9H
	DB	0adH
	DB	0acH
	DB	032H
	DB	0abH
	DB	07aH
	DB	0acH
	DB	049H
	DB	069H
	DB	03dH
	DB	0fbH
	DB	0f8H
	DB	037H
	DB	024H
	DB	0c2H
	DB	0ecH
	DB	07H
	DB	036H
	DB	0eeH
	DB	031H
	DB	0c8H
	DB	02H
	DB	091H
_out_g	DB	062H
	DB	06dH
	DB	02H
	DB	078H
	DB	039H
	DB	0eaH
	DB	0aH
	DB	013H
	DB	041H
	DB	031H
	DB	063H
	DB	0a5H
	DB	05bH
	DB	04cH
	DB	0b5H
	DB	00H
	DB	029H
	DB	09dH
	DB	055H
	DB	022H
	DB	095H
	DB	06cH
	DB	0efH
	DB	0cbH
	DB	03bH
	DB	0ffH
	DB	010H
	DB	0f3H
	DB	099H
	DB	0ceH
	DB	02cH
	DB	02eH
	DB	071H
	DB	0cbH
	DB	09dH
	DB	0e5H
	DB	0faH
	DB	024H
	DB	0baH
	DB	0bfH
	DB	058H
	DB	0e5H
	DB	0b7H
	DB	095H
	DB	021H
	DB	092H
	DB	05cH
	DB	09cH
	DB	0c4H
	DB	02eH
	DB	09fH
	DB	06fH
	DB	046H
	DB	04bH
	DB	08H
	DB	08cH
	DB	0c5H
	DB	072H
	DB	0afH
	DB	053H
	DB	0e6H
	DB	0d7H
	DB	088H
	DB	02H
_DATA	ENDS
PUBLIC	_main
PUBLIC	??_C@_0CD@EPONLEAN@test?5generation?5of?5DSA?5parameter@ ; `string'
PUBLIC	??_C@_05CLJAFFEJ@seed?6?$AA@			; `string'
PUBLIC	??_C@_0BC@FAANNJKC@?$CF02X?$CF02X?$CF02X?$CF02X?5?$AA@ ; `string'
PUBLIC	??_C@_0BD@LNPKCMNF@?6counter?$DN?$CFd?5h?$DN?$CFld?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@BNJKFJN@counter?5should?5be?5105?6?$AA@ ; `string'
PUBLIC	??_C@_0P@NKEEOOHB@h?5should?5be?52?6?$AA@	; `string'
PUBLIC	??_C@_0BC@NFLCIEFL@q?5value?5is?5wrong?6?$AA@	; `string'
PUBLIC	??_C@_0BC@DKOADCLK@p?5value?5is?5wrong?6?$AA@	; `string'
PUBLIC	??_C@_0BC@PFGNGEMG@g?5value?5is?5wrong?6?$AA@	; `string'
PUBLIC	??_C@_0BC@DKDLJCML@error?5in?5dsatest?6?$AA@	; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__exit:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_cleanup_all_ex_data:PROC
EXTRN	_CRYPTO_set_mem_debug_functions:PROC
EXTRN	_CRYPTO_dbg_malloc:PROC
EXTRN	_CRYPTO_dbg_realloc:PROC
EXTRN	_CRYPTO_dbg_free:PROC
EXTRN	_CRYPTO_dbg_set_options:PROC
EXTRN	_CRYPTO_dbg_get_options:PROC
EXTRN	_CRYPTO_mem_leaks:PROC
EXTRN	_RAND_seed:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_ERR_free_strings:PROC
EXTRN	_ERR_remove_thread_state:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_DSA_new:PROC
EXTRN	_DSA_free:PROC
EXTRN	_DSA_sign:PROC
EXTRN	_DSA_verify:PROC
EXTRN	_DSA_generate_parameters_ex:PROC
EXTRN	_DSA_generate_key:PROC
EXTRN	_DSA_print:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BC@DKDLJCML@error?5in?5dsatest?6?$AA@
CONST	SEGMENT
??_C@_0BC@DKDLJCML@error?5in?5dsatest?6?$AA@ DB 'error in dsatest', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PFGNGEMG@g?5value?5is?5wrong?6?$AA@
CONST	SEGMENT
??_C@_0BC@PFGNGEMG@g?5value?5is?5wrong?6?$AA@ DB 'g value is wrong', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DKOADCLK@p?5value?5is?5wrong?6?$AA@
CONST	SEGMENT
??_C@_0BC@DKOADCLK@p?5value?5is?5wrong?6?$AA@ DB 'p value is wrong', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NFLCIEFL@q?5value?5is?5wrong?6?$AA@
CONST	SEGMENT
??_C@_0BC@NFLCIEFL@q?5value?5is?5wrong?6?$AA@ DB 'q value is wrong', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NKEEOOHB@h?5should?5be?52?6?$AA@
CONST	SEGMENT
??_C@_0P@NKEEOOHB@h?5should?5be?52?6?$AA@ DB 'h should be 2', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BNJKFJN@counter?5should?5be?5105?6?$AA@
CONST	SEGMENT
??_C@_0BH@BNJKFJN@counter?5should?5be?5105?6?$AA@ DB 'counter should be 1'
	DB	'05', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LNPKCMNF@?6counter?$DN?$CFd?5h?$DN?$CFld?6?$AA@
CONST	SEGMENT
??_C@_0BD@LNPKCMNF@?6counter?$DN?$CFd?5h?$DN?$CFld?6?$AA@ DB 0aH, 'counte'
	DB	'r=%d h=%ld', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FAANNJKC@?$CF02X?$CF02X?$CF02X?$CF02X?5?$AA@
CONST	SEGMENT
??_C@_0BC@FAANNJKC@?$CF02X?$CF02X?$CF02X?$CF02X?5?$AA@ DB '%02X%02X%02X%0'
	DB	'2X ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05CLJAFFEJ@seed?6?$AA@
CONST	SEGMENT
??_C@_05CLJAFFEJ@seed?6?$AA@ DB 'seed', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EPONLEAN@test?5generation?5of?5DSA?5parameter@
CONST	SEGMENT
??_C@_0CD@EPONLEAN@test?5generation?5of?5DSA?5parameter@ DB 'test generat'
	DB	'ion of DSA parameters', 0aH, 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_siglen$ = -540						; size = 4
_counter$ = -536					; size = 4
_h$ = -532						; size = 4
_cb$ = -528						; size = 12
_buf$ = -516						; size = 256
_sig$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsatest.c
; Line 143
	mov	eax, 540				; 0000021cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+540], eax
	push	ebx
; Line 146
	xor	ebx, ebx
; Line 152
	cmp	DWORD PTR _bio_err, ebx
	jne	SHORT $LN4@main
; Line 153
	push	ebx
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _bio_err, eax
$LN4@main:
; Line 155
	push	esi
	push	edi
	push	OFFSET _CRYPTO_dbg_get_options
	push	OFFSET _CRYPTO_dbg_set_options
	push	OFFSET _CRYPTO_dbg_free
	push	OFFSET _CRYPTO_dbg_realloc
	push	OFFSET _CRYPTO_dbg_malloc
	call	_CRYPTO_set_mem_debug_functions
; Line 156
	push	3
	call	_CRYPTO_dbg_set_options
; Line 157
	push	1
	call	_CRYPTO_mem_ctrl
; Line 159
	call	_ERR_load_crypto_strings
; Line 160
	push	64					; 00000040H
	push	OFFSET _rnd_seed
	call	_RAND_seed
; Line 162
	push	OFFSET ??_C@_0CD@EPONLEAN@test?5generation?5of?5DSA?5parameter@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 164
	mov	eax, DWORD PTR _bio_err
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _cb$[esp+552], 2
	mov	DWORD PTR _cb$[esp+556], eax
	mov	DWORD PTR _cb$[esp+560], OFFSET _dsa_cb
; Line 165
	call	_DSA_new
	mov	edi, eax
	test	edi, edi
	je	$LN29@main
	lea	eax, DWORD PTR _cb$[esp+552]
	push	eax
	lea	eax, DWORD PTR _h$[esp+556]
	push	eax
	lea	eax, DWORD PTR _counter$[esp+560]
	push	eax
	push	20					; 00000014H
	push	OFFSET _seed
	push	512					; 00000200H
	push	edi
	call	_DSA_generate_parameters_ex
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$LN29@main
; Line 171
	push	OFFSET ??_C@_05CLJAFFEJ@seed?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 172
	xor	esi, esi
	npad	8
$LL7@main:
; Line 173
	movzx	eax, BYTE PTR _seed[esi+3]
	push	eax
	movzx	eax, BYTE PTR _seed[esi+2]
	push	eax
	movzx	eax, BYTE PTR _seed[esi+1]
	push	eax
	movzx	eax, BYTE PTR _seed[esi]
	push	eax
	push	OFFSET ??_C@_0BC@FAANNJKC@?$CF02X?$CF02X?$CF02X?$CF02X?5?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esi, 4
	add	esp, 24					; 00000018H
	cmp	esi, 20					; 00000014H
	jl	SHORT $LL7@main
; Line 176
	push	DWORD PTR _h$[esp+552]
	push	DWORD PTR _counter$[esp+556]
	push	OFFSET ??_C@_0BD@LNPKCMNF@?6counter?$DN?$CFd?5h?$DN?$CFld?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 178
	push	0
	push	edi
	push	DWORD PTR _bio_err
	call	_DSA_print
	add	esp, 28					; 0000001cH
; Line 179
	cmp	DWORD PTR _counter$[esp+552], 105	; 00000069H
	je	SHORT $LN11@main
; Line 180
	push	OFFSET ??_C@_0BH@BNJKFJN@counter?5should?5be?5105?6?$AA@
; Line 181
	jmp	$LN37@main
$LN11@main:
; Line 183
	cmp	DWORD PTR _h$[esp+552], 2
	je	SHORT $LN12@main
; Line 184
	push	OFFSET ??_C@_0P@NKEEOOHB@h?5should?5be?52?6?$AA@
; Line 185
	jmp	$LN37@main
$LN12@main:
; Line 188
	lea	eax, DWORD PTR _buf$[esp+552]
	push	eax
	push	DWORD PTR [edi+16]
	call	_BN_bn2bin
	add	esp, 8
; Line 190
	cmp	eax, 20					; 00000014H
	jne	$LN14@main
	lea	ecx, DWORD PTR _buf$[esp+552]
	mov	edx, OFFSET _out_q
	lea	esi, DWORD PTR [eax-4]
	npad	5
$LL31@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	$LN14@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL31@main
; Line 195
	lea	eax, DWORD PTR _buf$[esp+552]
	push	eax
	push	DWORD PTR [edi+12]
	call	_BN_bn2bin
	add	esp, 8
; Line 197
	cmp	eax, 64					; 00000040H
	jne	$LN16@main
	lea	ecx, DWORD PTR _buf$[esp+552]
	mov	edx, OFFSET _out_p
	lea	esi, DWORD PTR [eax-4]
	npad	6
$LL33@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	$LN16@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL33@main
; Line 202
	lea	eax, DWORD PTR _buf$[esp+552]
	push	eax
	push	DWORD PTR [edi+20]
	call	_BN_bn2bin
	add	esp, 8
; Line 204
	cmp	eax, 64					; 00000040H
	jne	$LN18@main
	lea	ecx, DWORD PTR _buf$[esp+552]
	mov	edx, OFFSET _out_g
	lea	esi, DWORD PTR [eax-4]
	npad	6
$LL35@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	$LN18@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL35@main
; Line 209
	or	DWORD PTR [edi+40], 2
; Line 210
	push	edi
	call	_DSA_generate_key
; Line 211
	push	edi
	lea	eax, DWORD PTR _siglen$[esp+560]
	push	eax
	lea	eax, DWORD PTR _sig$[esp+564]
	push	eax
	push	20					; 00000014H
	push	OFFSET _str1
	push	0
	call	_DSA_sign
; Line 212
	push	edi
	push	DWORD PTR _siglen$[esp+584]
	lea	eax, DWORD PTR _sig$[esp+588]
	push	eax
	push	20					; 00000014H
	push	OFFSET _str1
	push	0
	call	_DSA_verify
	mov	ecx, 1
	cmp	eax, ecx
; Line 216
	push	edi
	cmove	ebx, ecx
	and	DWORD PTR [edi+40], -3			; fffffffdH
	call	_DSA_generate_key
; Line 217
	push	edi
	lea	eax, DWORD PTR _siglen$[esp+612]
	push	eax
	lea	eax, DWORD PTR _sig$[esp+616]
	push	eax
	push	20					; 00000014H
	push	OFFSET _str1
	push	0
	call	_DSA_sign
	add	esp, 80					; 00000050H
; Line 218
	lea	eax, DWORD PTR _sig$[esp+552]
	push	edi
	push	DWORD PTR _siglen$[esp+556]
	push	eax
	push	20					; 00000014H
	push	OFFSET _str1
	push	0
	call	_DSA_verify
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $end$39
; Line 219
	mov	ebx, eax
	jmp	SHORT $LN21@main
$end$39:
; Line 222
	test	ebx, ebx
	jne	SHORT $LN21@main
	jmp	SHORT $LN29@main
$LN18@main:
; Line 205
	push	OFFSET ??_C@_0BC@PFGNGEMG@g?5value?5is?5wrong?6?$AA@
; Line 206
	jmp	SHORT $LN37@main
$LN16@main:
; Line 198
	push	OFFSET ??_C@_0BC@DKOADCLK@p?5value?5is?5wrong?6?$AA@
; Line 199
	jmp	SHORT $LN37@main
$LN14@main:
; Line 191
	push	OFFSET ??_C@_0BC@NFLCIEFL@q?5value?5is?5wrong?6?$AA@
$LN37@main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN29@main:
; Line 223
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN21@main:
; Line 224
	test	edi, edi
	je	SHORT $LN22@main
; Line 225
	push	edi
	call	_DSA_free
	add	esp, 4
$LN22@main:
; Line 226
	call	_CRYPTO_cleanup_all_ex_data
; Line 227
	push	0
	call	_ERR_remove_thread_state
; Line 228
	call	_ERR_free_strings
; Line 229
	push	DWORD PTR _bio_err
	call	_CRYPTO_mem_leaks
; Line 230
	mov	eax, DWORD PTR _bio_err
	add	esp, 8
	pop	edi
	pop	esi
	test	eax, eax
	je	SHORT $LN23@main
; Line 231
	push	eax
	call	_BIO_free
	add	esp, 4
; Line 232
	mov	DWORD PTR _bio_err, 0
$LN23@main:
; Line 238
	xor	eax, eax
	test	ebx, ebx
	sete	al
	push	eax
	call	DWORD PTR __imp__exit
	pop	ebx
$LN38@main:
$LN36@main:
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_cb
_TEXT	SEGMENT
_c$ = 8							; size = 1
_p$ = 8							; size = 4
_n$ = 12						; size = 4
_arg$ = 16						; size = 4
_dsa_cb	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsatest.c
; Line 243
	push	esi
; Line 247
	mov	esi, DWORD PTR _p$[esp]
	mov	al, 42					; 0000002aH
	push	edi
	test	esi, esi
	jne	SHORT $LN2@dsa_cb
; Line 249
	inc	DWORD PTR ?num@?1??dsa_cb@@9@9
	mov	BYTE PTR _c$[esp+4], 46			; 0000002eH
; Line 251
	jmp	SHORT $LN5@dsa_cb
$LN2@dsa_cb:
	cmp	esi, 1
	jne	SHORT $LN3@dsa_cb
; Line 252
	mov	BYTE PTR _c$[esp+4], 43			; 0000002bH
; Line 253
	jmp	SHORT $LN5@dsa_cb
$LN3@dsa_cb:
	cmp	esi, 2
	jne	SHORT $LN4@dsa_cb
; Line 255
	inc	DWORD PTR ?ok@?1??dsa_cb@@9@9
	mov	BYTE PTR _c$[esp+4], 42			; 0000002aH
; Line 257
	jmp	SHORT $LN5@dsa_cb
$LN4@dsa_cb:
	cmp	esi, 3
	movzx	eax, al
	mov	ecx, 10					; 0000000aH
	cmove	eax, ecx
	mov	BYTE PTR _c$[esp+4], al
$LN5@dsa_cb:
; Line 259
	mov	edi, DWORD PTR _arg$[esp+4]
	lea	eax, DWORD PTR _c$[esp+4]
	push	1
	push	eax
	push	DWORD PTR [edi+4]
	call	_BIO_write
; Line 260
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR [edi+4]
	call	_BIO_ctrl
	add	esp, 28					; 0000001cH
; Line 262
	cmp	DWORD PTR ?ok@?1??dsa_cb@@9@9, 0
	jne	SHORT $LN6@dsa_cb
	test	esi, esi
	jne	SHORT $LN6@dsa_cb
	cmp	DWORD PTR ?num@?1??dsa_cb@@9@9, 1
	jle	SHORT $LN6@dsa_cb
; Line 263
	push	OFFSET ??_C@_0BC@DKDLJCML@error?5in?5dsatest?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 264
	xor	eax, eax
	pop	edi
	pop	esi
; Line 267
	ret	0
$LN6@dsa_cb:
	pop	edi
; Line 266
	mov	eax, 1
	pop	esi
; Line 267
	ret	0
_dsa_cb	ENDP
_TEXT	ENDS
END

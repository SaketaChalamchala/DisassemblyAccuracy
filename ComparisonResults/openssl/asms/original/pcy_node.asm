; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_node.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_policy_node_cmp_new
PUBLIC	_level_find_node
PUBLIC	_tree_find_sk
PUBLIC	_level_add_node
PUBLIC	_policy_node_free
PUBLIC	_policy_node_match
PUBLIC	??_C@_0BL@DEPKENKB@?4?2crypto?2x509v3?2pcy_node?4c?$AA@ ; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_cmp:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BL@DEPKENKB@?4?2crypto?2x509v3?2pcy_node?4c?$AA@
CONST	SEGMENT
??_C@_0BL@DEPKENKB@?4?2crypto?2x509v3?2pcy_node?4c?$AA@ DB '.\crypto\x509'
	DB	'v3\pcy_node.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _node_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_node_cmp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_node.c
; Line 69
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _a$[esp]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	call	_OBJ_cmp
	add	esp, 8
; Line 70
	ret	0
_node_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _policy_node_match
_TEXT	SEGMENT
_lvl$ = 8						; size = 4
_node$ = 12						; size = 4
_oid$ = 16						; size = 4
_policy_node_match PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_node.c
; Line 174
	mov	eax, DWORD PTR _node$[esp-4]
	push	edi
	mov	edi, DWORD PTR [eax]
; Line 177
	mov	eax, DWORD PTR _lvl$[esp]
	test	DWORD PTR [eax+12], 1024		; 00000400H
	jne	SHORT $LN6@policy_nod
	test	BYTE PTR [edi], 3
	je	SHORT $LN6@policy_nod
; Line 183
	push	ebx
	push	esi
	push	DWORD PTR [edi+12]
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@policy_nod
	mov	ebx, DWORD PTR _oid$[esp+8]
$LL4@policy_nod:
; Line 184
	push	esi
	push	DWORD PTR [edi+12]
	call	_sk_value
; Line 185
	push	ebx
	push	eax
	call	_OBJ_cmp
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN11@policy_nod
; Line 183
	push	DWORD PTR [edi+12]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@policy_nod
$LN3@policy_nod:
	pop	esi
	pop	ebx
; Line 188
	xor	eax, eax
	pop	edi
; Line 190
	ret	0
$LN11@policy_nod:
	pop	esi
	pop	ebx
; Line 186
	mov	eax, 1
	pop	edi
; Line 190
	ret	0
$LN6@policy_nod:
; Line 178
	push	DWORD PTR _oid$[esp]
	push	DWORD PTR [edi+4]
	call	_OBJ_cmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	inc	eax
	pop	edi
; Line 190
	ret	0
_policy_node_match ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _policy_node_free
_TEXT	SEGMENT
_node$ = 8						; size = 4
_policy_node_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_node.c
; Line 161
	jmp	_CRYPTO_free
_policy_node_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _level_add_node
_TEXT	SEGMENT
_level$ = 8						; size = 4
_data$ = 12						; size = 4
_parent$ = 16						; size = 4
_tree$ = 20						; size = 4
_level_add_node PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_node.c
; Line 115
	push	esi
; Line 117
	push	117					; 00000075H
	push	OFFSET ??_C@_0BL@DEPKENKB@?4?2crypto?2x509v3?2pcy_node?4c?$AA@
	push	12					; 0000000cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 118
	test	esi, esi
	jne	SHORT $LN2@level_add_
	pop	esi
; Line 157
	ret	0
$LN2@level_add_:
	push	ebx
; Line 121
	mov	ebx, DWORD PTR _parent$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _data$[esp+8]
	push	edi
; Line 123
	mov	edi, DWORD PTR _level$[esp+12]
	mov	DWORD PTR [esi], ebp
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+8], 0
	test	edi, edi
	je	SHORT $LN9@level_add_
; Line 124
	push	DWORD PTR [ebp+4]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 746				; 000002eaH
	jne	SHORT $LN4@level_add_
; Line 125
	cmp	DWORD PTR [edi+8], 0
	jne	SHORT $node_error$24
; Line 127
	mov	DWORD PTR [edi+8], esi
; Line 128
	jmp	SHORT $LN9@level_add_
$LN4@level_add_:
; Line 130
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN7@level_add_
; Line 74
	push	OFFSET _node_cmp
	call	_sk_new
	add	esp, 4
; Line 131
	mov	DWORD PTR [edi+4], eax
$LN7@level_add_:
; Line 132
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $node_error$24
; Line 134
	push	esi
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $node_error$24
$LN9@level_add_:
; Line 139
	mov	edi, DWORD PTR _tree$[esp+12]
	test	edi, edi
	je	SHORT $LN13@level_add_
; Line 140
	cmp	DWORD PTR [edi+8], 0
	jne	SHORT $LN11@level_add_
; Line 141
	call	_sk_new_null
	mov	DWORD PTR [edi+8], eax
$LN11@level_add_:
; Line 142
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $node_error$24
; Line 144
	push	ebp
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN13@level_add_
$node_error$24:
; Line 161
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 155
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 157
	ret	0
$LN13@level_add_:
; Line 148
	test	ebx, ebx
	je	SHORT $LN14@level_add_
; Line 149
	inc	DWORD PTR [ebx+8]
$LN14@level_add_:
	pop	edi
	pop	ebp
	pop	ebx
; Line 151
	mov	eax, esi
	pop	esi
; Line 157
	ret	0
_level_add_node ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tree_find_sk
_TEXT	SEGMENT
_l$ = -28						; size = 12
_n$ = -16						; size = 16
_nodes$ = 8						; size = 4
_id$ = 12						; size = 4
_tree_find_sk PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_node.c
; Line 79
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 84
	mov	eax, DWORD PTR _id$[esp+24]
	mov	DWORD PTR _n$[esp+32], eax
; Line 85
	lea	eax, DWORD PTR _n$[esp+28]
	mov	DWORD PTR _l$[esp+28], eax
; Line 87
	lea	eax, DWORD PTR _l$[esp+28]
	push	eax
	push	DWORD PTR _nodes$[esp+28]
	call	_sk_find
	add	esp, 8
; Line 88
	cmp	eax, -1
	jne	SHORT $LN2@tree_find_
; Line 89
	xor	eax, eax
; Line 93
	add	esp, 28					; 0000001cH
	ret	0
$LN2@tree_find_:
; Line 91
	push	eax
	push	DWORD PTR _nodes$[esp+28]
	call	_sk_value
	add	esp, 8
; Line 93
	add	esp, 28					; 0000001cH
	ret	0
_tree_find_sk ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _level_find_node
_TEXT	SEGMENT
_level$ = 8						; size = 4
_parent$ = 12						; size = 4
_id$ = 16						; size = 4
_level_find_node PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_node.c
; Line 98
	push	ebx
; Line 101
	mov	ebx, DWORD PTR _level$[esp]
	push	ebp
	push	esi
	push	edi
	push	DWORD PTR [ebx+4]
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN13@level_find
	mov	ebp, DWORD PTR _parent$[esp+12]
	npad	3
$LL4@level_find:
; Line 102
	push	esi
	push	DWORD PTR [ebx+4]
	call	_sk_value
	mov	edi, eax
	add	esp, 8
; Line 103
	cmp	DWORD PTR [edi+4], ebp
	jne	SHORT $LN2@level_find
; Line 104
	mov	ecx, DWORD PTR [edi]
	push	DWORD PTR _id$[esp+12]
	push	DWORD PTR [ecx+4]
	call	_OBJ_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@level_find
$LN2@level_find:
; Line 101
	push	DWORD PTR [ebx+4]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@level_find
$LN13@level_find:
	pop	edi
	pop	esi
	pop	ebp
; Line 108
	xor	eax, eax
	pop	ebx
; Line 109
	ret	0
$LN9@level_find:
; Line 105
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 109
	ret	0
_level_find_node ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _policy_node_cmp_new
_TEXT	SEGMENT
_policy_node_cmp_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_node.c
; Line 74
	push	OFFSET _node_cmp
	call	_sk_new
	add	esp, 4
; Line 75
	ret	0
_policy_node_cmp_new ENDP
_TEXT	ENDS
END

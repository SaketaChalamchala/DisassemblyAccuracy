; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_TS_CONF_load_cert
PUBLIC	_TS_CONF_load_certs
PUBLIC	_TS_CONF_load_key
PUBLIC	_TS_CONF_get_tsa_section
PUBLIC	_TS_CONF_set_serial
PUBLIC	_TS_CONF_set_crypto_device
PUBLIC	_TS_CONF_set_default_engine
PUBLIC	_TS_CONF_set_signer_cert
PUBLIC	_TS_CONF_set_certs
PUBLIC	_TS_CONF_set_signer_key
PUBLIC	_TS_CONF_set_def_policy
PUBLIC	_TS_CONF_set_policies
PUBLIC	_TS_CONF_set_digests
PUBLIC	_TS_CONF_set_accuracy
PUBLIC	_TS_CONF_set_clock_precision_digits
PUBLIC	_TS_CONF_set_ordering
PUBLIC	_TS_CONF_set_tsa_name
PUBLIC	_TS_CONF_set_ess_cert_id_chain
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0CA@IKGCPJI@unable?5to?5load?5certificate?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@KELMIFF@unable?5to?5load?5certificates?3?5?$CFs?6@ ; `string'
PUBLIC	??_C@_0CA@GMLNBFGN@unable?5to?5load?5private?5key?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@ ; `string'
PUBLIC	??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@ ; `string'
PUBLIC	??_C@_0M@FFEGKAMB@default_tsa?$AA@		; `string'
PUBLIC	??_C@_03BALHJLMH@tsa?$AA@			; `string'
PUBLIC	??_C@_06KCELPKEE@serial?$AA@			; `string'
PUBLIC	??_C@_0O@PGIIDHAM@crypto_device?$AA@		; `string'
PUBLIC	??_C@_07JNFPDNEP@builtin?$AA@			; `string'
PUBLIC	??_C@_04JHJDAOJH@chil?$AA@			; `string'
PUBLIC	??_C@_0BG@LDOFGBPN@?4?2crypto?2ts?2ts_conf?4c?$AA@ ; `string'
PUBLIC	??_C@_07OIMAMEKN@engine?3?$AA@			; `string'
PUBLIC	??_C@_0M@ILJFFIIJ@signer_cert?$AA@		; `string'
PUBLIC	??_C@_05HFDFJDL@certs?$AA@			; `string'
PUBLIC	??_C@_0L@FKMICHFL@signer_key?$AA@		; `string'
PUBLIC	??_C@_0P@CLFMIJGD@default_policy?$AA@		; `string'
PUBLIC	??_C@_0P@IPDOPNMP@other_policies?$AA@		; `string'
PUBLIC	??_C@_07LKBBKFPF@digests?$AA@			; `string'
PUBLIC	??_C@_08FJNPIHOL@accuracy?$AA@			; `string'
PUBLIC	??_C@_04MFNEMKIA@secs?$AA@			; `string'
PUBLIC	??_C@_09NAAMCACD@millisecs?$AA@			; `string'
PUBLIC	??_C@_09OIJEDGAB@microsecs?$AA@			; `string'
PUBLIC	??_C@_0BH@EJNOCJMO@clock_precision_digits?$AA@	; `string'
PUBLIC	??_C@_03ICICOMAL@yes?$AA@			; `string'
PUBLIC	??_C@_02KAJCLHKP@no?$AA@			; `string'
PUBLIC	??_C@_08POFANFLK@ordering?$AA@			; `string'
PUBLIC	??_C@_08LLGCIMFD@tsa_name?$AA@			; `string'
PUBLIC	??_C@_0BC@MEINGLKO@ess_cert_id_chain?$AA@	; `string'
EXTRN	__imp__atoi:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_OBJ_txt2obj:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_INFO_free:PROC
EXTRN	_PEM_X509_INFO_read_bio:PROC
EXTRN	_PEM_read_bio_X509_AUX:PROC
EXTRN	_PEM_read_bio_PrivateKey:PROC
EXTRN	_ENGINE_by_id:PROC
EXTRN	_ENGINE_ctrl:PROC
EXTRN	_ENGINE_free:PROC
EXTRN	_ENGINE_set_default:PROC
EXTRN	_NCONF_get_string:PROC
EXTRN	_NCONF_get_number_e:PROC
EXTRN	_X509V3_conf_free:PROC
EXTRN	_X509V3_parse_list:PROC
EXTRN	_TS_RESP_CTX_set_signer_cert:PROC
EXTRN	_TS_RESP_CTX_set_signer_key:PROC
EXTRN	_TS_RESP_CTX_set_def_policy:PROC
EXTRN	_TS_RESP_CTX_set_certs:PROC
EXTRN	_TS_RESP_CTX_add_policy:PROC
EXTRN	_TS_RESP_CTX_add_md:PROC
EXTRN	_TS_RESP_CTX_set_accuracy:PROC
EXTRN	_TS_RESP_CTX_set_clock_precision_digits:PROC
EXTRN	_TS_RESP_CTX_add_flags:PROC
EXTRN	_TS_RESP_CTX_set_serial_cb:PROC
EXTRN	__chkstk:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0BC@MEINGLKO@ess_cert_id_chain?$AA@
CONST	SEGMENT
??_C@_0BC@MEINGLKO@ess_cert_id_chain?$AA@ DB 'ess_cert_id_chain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCIMFD@tsa_name?$AA@
CONST	SEGMENT
??_C@_08LLGCIMFD@tsa_name?$AA@ DB 'tsa_name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08POFANFLK@ordering?$AA@
CONST	SEGMENT
??_C@_08POFANFLK@ordering?$AA@ DB 'ordering', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02KAJCLHKP@no?$AA@
CONST	SEGMENT
??_C@_02KAJCLHKP@no?$AA@ DB 'no', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICICOMAL@yes?$AA@
CONST	SEGMENT
??_C@_03ICICOMAL@yes?$AA@ DB 'yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EJNOCJMO@clock_precision_digits?$AA@
CONST	SEGMENT
??_C@_0BH@EJNOCJMO@clock_precision_digits?$AA@ DB 'clock_precision_digits'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_09OIJEDGAB@microsecs?$AA@
CONST	SEGMENT
??_C@_09OIJEDGAB@microsecs?$AA@ DB 'microsecs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NAAMCACD@millisecs?$AA@
CONST	SEGMENT
??_C@_09NAAMCACD@millisecs?$AA@ DB 'millisecs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MFNEMKIA@secs?$AA@
CONST	SEGMENT
??_C@_04MFNEMKIA@secs?$AA@ DB 'secs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FJNPIHOL@accuracy?$AA@
CONST	SEGMENT
??_C@_08FJNPIHOL@accuracy?$AA@ DB 'accuracy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LKBBKFPF@digests?$AA@
CONST	SEGMENT
??_C@_07LKBBKFPF@digests?$AA@ DB 'digests', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IPDOPNMP@other_policies?$AA@
CONST	SEGMENT
??_C@_0P@IPDOPNMP@other_policies?$AA@ DB 'other_policies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CLFMIJGD@default_policy?$AA@
CONST	SEGMENT
??_C@_0P@CLFMIJGD@default_policy?$AA@ DB 'default_policy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FKMICHFL@signer_key?$AA@
CONST	SEGMENT
??_C@_0L@FKMICHFL@signer_key?$AA@ DB 'signer_key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HFDFJDL@certs?$AA@
CONST	SEGMENT
??_C@_05HFDFJDL@certs?$AA@ DB 'certs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ILJFFIIJ@signer_cert?$AA@
CONST	SEGMENT
??_C@_0M@ILJFFIIJ@signer_cert?$AA@ DB 'signer_cert', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OIMAMEKN@engine?3?$AA@
CONST	SEGMENT
??_C@_07OIMAMEKN@engine?3?$AA@ DB 'engine:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LDOFGBPN@?4?2crypto?2ts?2ts_conf?4c?$AA@
CONST	SEGMENT
??_C@_0BG@LDOFGBPN@?4?2crypto?2ts?2ts_conf?4c?$AA@ DB '.\crypto\ts\ts_con'
	DB	'f.c', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04JHJDAOJH@chil?$AA@
CONST	SEGMENT
??_C@_04JHJDAOJH@chil?$AA@ DB 'chil', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JNFPDNEP@builtin?$AA@
CONST	SEGMENT
??_C@_07JNFPDNEP@builtin?$AA@ DB 'builtin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PGIIDHAM@crypto_device?$AA@
CONST	SEGMENT
??_C@_0O@PGIIDHAM@crypto_device?$AA@ DB 'crypto_device', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KCELPKEE@serial?$AA@
CONST	SEGMENT
??_C@_06KCELPKEE@serial?$AA@ DB 'serial', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BALHJLMH@tsa?$AA@
CONST	SEGMENT
??_C@_03BALHJLMH@tsa?$AA@ DB 'tsa', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FFEGKAMB@default_tsa?$AA@
CONST	SEGMENT
??_C@_0M@FFEGKAMB@default_tsa?$AA@ DB 'default_tsa', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
CONST	SEGMENT
??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@ DB 'inva'
	DB	'lid variable value for %s::%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
CONST	SEGMENT
??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@ DB 'vari'
	DB	'able lookup failed for %s::%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GMLNBFGN@unable?5to?5load?5private?5key?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0CA@GMLNBFGN@unable?5to?5load?5private?5key?3?5?$CFs?6?$AA@ DB 'una'
	DB	'ble to load private key: %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KELMIFF@unable?5to?5load?5certificates?3?5?$CFs?6@
CONST	SEGMENT
??_C@_0CB@KELMIFF@unable?5to?5load?5certificates?3?5?$CFs?6@ DB 'unable t'
	DB	'o load certificates: %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IKGCPJI@unable?5to?5load?5certificate?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0CA@IKGCPJI@unable?5to?5load?5certificate?3?5?$CFs?6?$AA@ DB 'unabl'
	DB	'e to load certificate: %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_add_flag
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_field$ = 16						; size = 4
_flag$ = 20						; size = 4
_ctx$ = 24						; size = 4
_TS_CONF_add_flag PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 463
	push	DWORD PTR _field$[esp-4]
	push	DWORD PTR _section$[esp]
	push	DWORD PTR _conf$[esp+4]
	call	_NCONF_get_string
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 464
	test	ecx, ecx
	je	SHORT $LN5@TS_CONF_ad
; Line 465
	mov	edx, OFFSET ??_C@_03ICICOMAL@yes?$AA@
	push	ebx
$LL9@TS_CONF_ad:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN10@TS_CONF_ad
	test	bl, bl
	je	SHORT $LN11@TS_CONF_ad
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN10@TS_CONF_ad
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL9@TS_CONF_ad
$LN11@TS_CONF_ad:
	xor	eax, eax
	jmp	SHORT $LN12@TS_CONF_ad
$LN10@TS_CONF_ad:
	sbb	eax, eax
	or	eax, 1
$LN12@TS_CONF_ad:
	pop	ebx
	test	eax, eax
	jne	SHORT $LN3@TS_CONF_ad
; Line 466
	push	DWORD PTR _flag$[esp-4]
	push	DWORD PTR _ctx$[esp]
	call	_TS_RESP_CTX_add_flags
	add	esp, 8
$LN5@TS_CONF_ad:
; Line 473
	mov	eax, 1
; Line 474
	ret	0
$LN3@TS_CONF_ad:
; Line 467
	mov	eax, OFFSET ??_C@_02KAJCLHKP@no?$AA@
$LL13@TS_CONF_ad:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN14@TS_CONF_ad
	test	dl, dl
	je	SHORT $LN15@TS_CONF_ad
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN14@TS_CONF_ad
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL13@TS_CONF_ad
$LN15@TS_CONF_ad:
	xor	eax, eax
	jmp	SHORT $LN16@TS_CONF_ad
$LN14@TS_CONF_ad:
	sbb	eax, eax
	or	eax, 1
$LN16@TS_CONF_ad:
	test	eax, eax
	je	SHORT $LN5@TS_CONF_ad
; Line 162
	push	DWORD PTR _field$[esp-4]
	push	DWORD PTR _section$[esp]
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 469
	xor	eax, eax
; Line 474
	ret	0
_TS_CONF_add_flag ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_invalid
_TEXT	SEGMENT
_name$ = 8						; size = 4
_tag$ = 12						; size = 4
_TS_CONF_invalid PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 162
	push	DWORD PTR _tag$[esp-4]
	push	DWORD PTR _name$[esp]
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 163
	ret	0
_TS_CONF_invalid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_lookup_fail
_TEXT	SEGMENT
_name$ = 8						; size = 4
_tag$ = 12						; size = 4
_TS_CONF_lookup_fail PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 157
	push	DWORD PTR _tag$[esp-4]
	push	DWORD PTR _name$[esp]
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 158
	ret	0
_TS_CONF_lookup_fail ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_ess_cert_id_chain
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_ctx$ = 16						; size = 4
_TS_CONF_set_ess_cert_id_chain PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 489
	push	DWORD PTR _ctx$[esp-4]
	push	4
	push	OFFSET ??_C@_0BC@MEINGLKO@ess_cert_id_chain?$AA@
	push	DWORD PTR _section$[esp+8]
	push	DWORD PTR _conf$[esp+12]
	call	_TS_CONF_add_flag
	add	esp, 20					; 00000014H
; Line 491
	ret	0
_TS_CONF_set_ess_cert_id_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_tsa_name
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_ctx$ = 16						; size = 4
_TS_CONF_set_tsa_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 483
	push	DWORD PTR _ctx$[esp-4]
	push	1
	push	OFFSET ??_C@_08LLGCIMFD@tsa_name?$AA@
	push	DWORD PTR _section$[esp+8]
	push	DWORD PTR _conf$[esp+12]
	call	_TS_CONF_add_flag
	add	esp, 20					; 00000014H
; Line 484
	ret	0
_TS_CONF_set_tsa_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_ordering
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_ctx$ = 16						; size = 4
_TS_CONF_set_ordering PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 478
	push	DWORD PTR _ctx$[esp-4]
	push	2
	push	OFFSET ??_C@_08POFANFLK@ordering?$AA@
	push	DWORD PTR _section$[esp+8]
	push	DWORD PTR _conf$[esp+12]
	call	_TS_CONF_add_flag
	add	esp, 20					; 00000014H
; Line 479
	ret	0
_TS_CONF_set_ordering ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_clock_precision_digits
_TEXT	SEGMENT
_digits$ = -4						; size = 4
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_ctx$ = 16						; size = 4
_TS_CONF_set_clock_precision_digits PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 436
	mov	eax, 4
	call	__chkstk
; Line 443
	lea	eax, DWORD PTR _digits$[esp+4]
	mov	DWORD PTR _digits$[esp+4], 0
	push	eax
	push	OFFSET ??_C@_0BH@EJNOCJMO@clock_precision_digits?$AA@
	push	DWORD PTR _section$[esp+8]
	push	DWORD PTR _conf$[esp+12]
	call	_NCONF_get_number_e
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN2@TS_CONF_se
; Line 445
	mov	DWORD PTR _digits$[esp+4], eax
; Line 446
	jmp	SHORT $LN10@TS_CONF_se
$LN2@TS_CONF_se:
	mov	eax, DWORD PTR _digits$[esp+4]
	test	eax, eax
	js	SHORT $LN4@TS_CONF_se
	cmp	eax, 6
	jg	SHORT $LN4@TS_CONF_se
$LN10@TS_CONF_se:
; Line 451
	push	eax
	push	DWORD PTR _ctx$[esp+4]
	call	_TS_RESP_CTX_set_clock_precision_digits
	add	esp, 8
	test	eax, eax
	je	SHORT $err$12
; Line 454
	mov	eax, 1
; Line 457
	pop	ecx
	ret	0
$LN4@TS_CONF_se:
; Line 162
	push	OFFSET ??_C@_0BH@EJNOCJMO@clock_precision_digits?$AA@
	push	DWORD PTR _section$[esp+4]
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
$err$12:
; Line 456
	xor	eax, eax
; Line 457
	pop	ecx
	ret	0
_TS_CONF_set_clock_precision_digits ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_accuracy
_TEXT	SEGMENT
_secs$1$ = -16						; size = 4
_list$1$ = -12						; size = 4
_micros$1$ = -8						; size = 4
_millis$1$ = -4						; size = 4
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_ctx$ = 16						; size = 4
_TS_CONF_set_accuracy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 398
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
; Line 403
	mov	ebx, DWORD PTR _section$[esp+16]
	push	ebp
	push	esi
	push	edi
	push	OFFSET ??_C@_08FJNPIHOL@accuracy?$AA@
	xor	edi, edi
	xor	esi, esi
	push	ebx
	push	DWORD PTR _conf$[esp+36]
	xor	ebp, ebp
	mov	DWORD PTR _secs$1$[esp+44], edi
	mov	DWORD PTR _millis$1$[esp+44], edi
	mov	DWORD PTR _micros$1$[esp+44], edi
	mov	DWORD PTR _list$1$[esp+44], esi
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 405
	test	eax, eax
	je	SHORT $LN5@TS_CONF_se
	push	eax
	call	_X509V3_parse_list
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _list$1$[esp+32], esi
	test	esi, esi
	jne	SHORT $LN5@TS_CONF_se
; Line 162
	push	OFFSET ??_C@_08FJNPIHOL@accuracy?$AA@
	push	ebx
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 407
	jmp	$err$42
$LN5@TS_CONF_se:
; Line 409
	push	esi
	xor	ebx, ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN3@TS_CONF_se
	mov	ebp, DWORD PTR __imp__atoi
	npad	2
$LL4@TS_CONF_se:
; Line 410
	push	ebx
	push	esi
	call	_sk_value
	mov	edi, eax
	add	esp, 8
; Line 411
	mov	ecx, OFFSET ??_C@_04MFNEMKIA@secs?$AA@
	mov	esi, DWORD PTR [edi+4]
	mov	eax, esi
$LL25@TS_CONF_se:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN26@TS_CONF_se
	test	dl, dl
	je	SHORT $LN27@TS_CONF_se
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN26@TS_CONF_se
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL25@TS_CONF_se
$LN27@TS_CONF_se:
	xor	eax, eax
	jmp	SHORT $LN28@TS_CONF_se
$LN26@TS_CONF_se:
	sbb	eax, eax
	or	eax, 1
$LN28@TS_CONF_se:
	test	eax, eax
	jne	SHORT $LN6@TS_CONF_se
; Line 412
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	$LN39@TS_CONF_se
; Line 413
	push	eax
	call	ebp
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR _secs$1$[esp+32], edi
; Line 414
	jmp	$LN2@TS_CONF_se
$LN6@TS_CONF_se:
	mov	ecx, OFFSET ??_C@_09NAAMCACD@millisecs?$AA@
	mov	eax, esi
$LL29@TS_CONF_se:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN30@TS_CONF_se
	test	dl, dl
	je	SHORT $LN31@TS_CONF_se
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN30@TS_CONF_se
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL29@TS_CONF_se
$LN31@TS_CONF_se:
	xor	eax, eax
	jmp	SHORT $LN32@TS_CONF_se
$LN30@TS_CONF_se:
	sbb	eax, eax
	or	eax, 1
$LN32@TS_CONF_se:
	test	eax, eax
	jne	SHORT $LN9@TS_CONF_se
; Line 415
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN39@TS_CONF_se
; Line 416
	push	eax
	call	ebp
	mov	DWORD PTR _millis$1$[esp+36], eax
; Line 417
	jmp	SHORT $LN40@TS_CONF_se
$LN9@TS_CONF_se:
	mov	eax, OFFSET ??_C@_09OIJEDGAB@microsecs?$AA@
$LL33@TS_CONF_se:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN34@TS_CONF_se
	test	cl, cl
	je	SHORT $LN35@TS_CONF_se
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN34@TS_CONF_se
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL33@TS_CONF_se
$LN35@TS_CONF_se:
	xor	eax, eax
	jmp	SHORT $LN36@TS_CONF_se
$LN34@TS_CONF_se:
	sbb	eax, eax
	or	eax, 1
$LN36@TS_CONF_se:
	test	eax, eax
	jne	SHORT $LN12@TS_CONF_se
; Line 418
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN39@TS_CONF_se
; Line 419
	push	eax
	call	ebp
	mov	DWORD PTR _micros$1$[esp+36], eax
$LN40@TS_CONF_se:
	add	esp, 4
$LN39@TS_CONF_se:
	mov	edi, DWORD PTR _secs$1$[esp+32]
$LN2@TS_CONF_se:
; Line 409
	mov	esi, DWORD PTR _list$1$[esp+32]
	inc	ebx
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL4@TS_CONF_se
	xor	ebp, ebp
$LN3@TS_CONF_se:
; Line 425
	push	DWORD PTR _micros$1$[esp+32]
	push	DWORD PTR _millis$1$[esp+36]
	push	edi
	push	DWORD PTR _ctx$[esp+40]
	call	_TS_RESP_CTX_set_accuracy
	add	esp, 16					; 00000010H
	mov	ecx, 1
	test	eax, eax
	cmovne	ebp, ecx
$err$42:
; Line 430
	push	OFFSET _X509V3_conf_free
	push	DWORD PTR _list$1$[esp+36]
	call	_sk_pop_free
	add	esp, 8
; Line 431
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 432
	add	esp, 16					; 00000010H
	ret	0
$LN12@TS_CONF_se:
; Line 162
	push	OFFSET ??_C@_08FJNPIHOL@accuracy?$AA@
	push	DWORD PTR _section$[esp+32]
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 422
	xor	ebp, ebp
	jmp	SHORT $err$42
_TS_CONF_set_accuracy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_digests
_TEXT	SEGMENT
_ret$1$ = -4						; size = 4
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_ctx$ = 16						; size = 4
_TS_CONF_set_digests PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 362
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 366
	mov	ebx, DWORD PTR _section$[esp+4]
	push	edi
	push	OFFSET ??_C@_07LKBBKFPF@digests?$AA@
	push	ebx
	push	DWORD PTR _conf$[esp+16]
	mov	DWORD PTR _ret$1$[esp+24], 0
	xor	edi, edi
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 367
	test	eax, eax
	jne	SHORT $LN5@TS_CONF_se
; Line 157
	push	OFFSET ??_C@_07LKBBKFPF@digests?$AA@
	push	ebx
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 369
	jmp	$err$31
$LN5@TS_CONF_se:
; Line 371
	push	eax
	call	_X509V3_parse_list
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN6@TS_CONF_se
$LN29@TS_CONF_se:
; Line 162
	push	OFFSET ??_C@_07LKBBKFPF@digests?$AA@
	push	ebx
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 373
	jmp	SHORT $err$31
$LN6@TS_CONF_se:
; Line 375
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	je	SHORT $LN29@TS_CONF_se
; Line 379
	push	ebp
	push	esi
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@TS_CONF_se
	mov	ebp, DWORD PTR _ctx$[esp+16]
$LL4@TS_CONF_se:
; Line 380
	push	esi
	push	edi
	call	_sk_value
	add	esp, 8
; Line 381
	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN12@TS_CONF_se
	mov	ecx, DWORD PTR [eax+4]
$LN12@TS_CONF_se:
; Line 383
	push	ecx
	call	_EVP_get_digestbyname
	add	esp, 4
	test	eax, eax
	je	SHORT $LN22@TS_CONF_se
; Line 387
	push	eax
	push	ebp
	call	_TS_RESP_CTX_add_md
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@TS_CONF_se
; Line 379
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@TS_CONF_se
$LN3@TS_CONF_se:
; Line 391
	mov	DWORD PTR _ret$1$[esp+20], 1
$LN27@TS_CONF_se:
	pop	esi
	pop	ebp
$err$31:
; Line 393
	push	OFFSET _X509V3_conf_free
	push	edi
	call	_sk_pop_free
; Line 394
	mov	eax, DWORD PTR _ret$1$[esp+20]
	add	esp, 8
	pop	edi
	pop	ebx
; Line 395
	pop	ecx
	ret	0
$LN22@TS_CONF_se:
; Line 162
	push	OFFSET ??_C@_07LKBBKFPF@digests?$AA@
	push	ebx
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 385
	jmp	SHORT $LN27@TS_CONF_se
_TS_CONF_set_digests ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_policies
_TEXT	SEGMENT
_ret$1$ = -4						; size = 4
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_ctx$ = 16						; size = 4
_TS_CONF_set_policies PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 331
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
; Line 335
	mov	ebp, DWORD PTR _section$[esp+8]
	xor	ebx, ebx
	push	OFFSET ??_C@_0P@IPDOPNMP@other_policies?$AA@
	push	ebp
	push	DWORD PTR _conf$[esp+16]
	mov	DWORD PTR _ret$1$[esp+24], 0
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 338
	test	eax, eax
	je	SHORT $LN5@TS_CONF_se
	push	eax
	call	_X509V3_parse_list
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $LN5@TS_CONF_se
; Line 162
	push	OFFSET ??_C@_0P@IPDOPNMP@other_policies?$AA@
	push	ebp
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 340
	jmp	SHORT $err$24
$LN5@TS_CONF_se:
	push	esi
	push	edi
; Line 342
	push	ebx
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@TS_CONF_se
	mov	ebp, DWORD PTR _ctx$[esp+16]
$LL4@TS_CONF_se:
; Line 343
	push	edi
	push	ebx
	call	_sk_value
	mov	ecx, eax
	add	esp, 8
; Line 344
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	jne	SHORT $LN10@TS_CONF_se
	mov	eax, DWORD PTR [ecx+4]
$LN10@TS_CONF_se:
; Line 346
	push	0
	push	eax
	call	_OBJ_txt2obj
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $LN16@TS_CONF_se
; Line 350
	push	esi
	push	ebp
	call	_TS_RESP_CTX_add_policy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN21@TS_CONF_se
; Line 352
	push	esi
	call	_ASN1_OBJECT_free
	push	ebx
	inc	edi
	call	_sk_num
	add	esp, 8
	cmp	edi, eax
	jl	SHORT $LL4@TS_CONF_se
$LN3@TS_CONF_se:
; Line 355
	mov	DWORD PTR _ret$1$[esp+20], 1
$LN21@TS_CONF_se:
	pop	edi
	pop	esi
$err$24:
; Line 357
	push	OFFSET _X509V3_conf_free
	push	ebx
	call	_sk_pop_free
; Line 358
	mov	eax, DWORD PTR _ret$1$[esp+20]
	add	esp, 8
	pop	ebp
	pop	ebx
; Line 359
	pop	ecx
	ret	0
$LN16@TS_CONF_se:
; Line 162
	push	OFFSET ??_C@_0P@IPDOPNMP@other_policies?$AA@
	push	DWORD PTR _section$[esp+20]
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 348
	jmp	SHORT $LN21@TS_CONF_se
_TS_CONF_set_policies ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_def_policy
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_policy$ = 16						; size = 4
_ctx$ = 20						; size = 4
_TS_CONF_set_def_policy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 311
	mov	eax, DWORD PTR _policy$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR _section$[esp]
	push	esi
	push	edi
	xor	edi, edi
	xor	esi, esi
	test	eax, eax
	jne	SHORT $LN3@TS_CONF_se
; Line 312
	push	OFFSET ??_C@_0P@CLFMIJGD@default_policy?$AA@
	push	ebx
	push	DWORD PTR _conf$[esp+16]
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 313
	test	eax, eax
	jne	SHORT $LN3@TS_CONF_se
; Line 157
	push	OFFSET ??_C@_0P@CLFMIJGD@default_policy?$AA@
	push	ebx
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 326
	push	esi
	call	_ASN1_OBJECT_free
	add	esp, 4
; Line 327
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 328
	ret	0
$LN3@TS_CONF_se:
; Line 317
	push	0
	push	eax
	call	_OBJ_txt2obj
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	jne	SHORT $LN4@TS_CONF_se
; Line 162
	push	OFFSET ??_C@_0P@CLFMIJGD@default_policy?$AA@
	push	ebx
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 326
	push	esi
	call	_ASN1_OBJECT_free
	add	esp, 4
; Line 327
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 328
	ret	0
$LN4@TS_CONF_se:
; Line 321
	push	esi
	push	DWORD PTR _ctx$[esp+12]
	call	_TS_RESP_CTX_set_def_policy
	add	esp, 8
	mov	ecx, 1
	test	eax, eax
$err$12:
	cmovne	edi, ecx
; Line 326
	push	esi
	call	_ASN1_OBJECT_free
	add	esp, 4
; Line 327
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 328
	ret	0
_TS_CONF_set_def_policy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_signer_key
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_key$ = 16						; size = 4
_pass$ = 20						; size = 4
_ctx$ = 24						; size = 4
_TS_CONF_set_signer_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 289
	mov	eax, DWORD PTR _key$[esp-4]
	push	esi
	push	edi
	xor	edi, edi
	xor	esi, esi
	test	eax, eax
	jne	SHORT $LN3@TS_CONF_se
; Line 290
	push	OFFSET ??_C@_0L@FKMICHFL@signer_key?$AA@
	push	DWORD PTR _section$[esp+8]
	push	DWORD PTR _conf$[esp+12]
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 291
	test	eax, eax
	jne	SHORT $LN3@TS_CONF_se
; Line 157
	push	OFFSET ??_C@_0L@FKMICHFL@signer_key?$AA@
	push	DWORD PTR _section$[esp+8]
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 302
	push	esi
	call	_EVP_PKEY_free
	add	esp, 4
; Line 303
	mov	eax, edi
	pop	edi
	pop	esi
; Line 304
	ret	0
$LN3@TS_CONF_se:
; Line 295
	push	DWORD PTR _pass$[esp+4]
	push	eax
	call	_TS_CONF_load_key
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $err$10
; Line 297
	push	esi
	push	DWORD PTR _ctx$[esp+8]
	call	_TS_RESP_CTX_set_signer_key
	add	esp, 8
	mov	ecx, 1
	test	eax, eax
	cmovne	edi, ecx
$err$10:
; Line 302
	push	esi
	call	_EVP_PKEY_free
	add	esp, 4
; Line 303
	mov	eax, edi
	pop	edi
	pop	esi
; Line 304
	ret	0
_TS_CONF_set_signer_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_certs
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_certs$ = 16						; size = 4
_ctx$ = 20						; size = 4
_TS_CONF_set_certs PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 267
	mov	eax, DWORD PTR _certs$[esp-4]
	push	esi
	push	edi
	xor	edi, edi
	xor	esi, esi
	test	eax, eax
	jne	SHORT $LN7@TS_CONF_se
; Line 268
	push	OFFSET ??_C@_05HFDFJDL@certs?$AA@
	push	DWORD PTR _section$[esp+8]
	push	DWORD PTR _conf$[esp+12]
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 270
	test	eax, eax
	je	SHORT $end$9
$LN7@TS_CONF_se:
; Line 272
	push	eax
	call	_TS_CONF_load_certs
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $err$10
; Line 274
	push	esi
	push	DWORD PTR _ctx$[esp+8]
	call	_TS_RESP_CTX_set_certs
	add	esp, 8
	test	eax, eax
	je	SHORT $err$10
$end$9:
; Line 277
	mov	edi, 1
$err$10:
; Line 279
	push	OFFSET _X509_free
	push	esi
	call	_sk_pop_free
	add	esp, 8
; Line 280
	mov	eax, edi
	pop	edi
	pop	esi
; Line 281
	ret	0
_TS_CONF_set_certs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_signer_cert
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_cert$ = 16						; size = 4
_ctx$ = 20						; size = 4
_TS_CONF_set_signer_cert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 245
	mov	eax, DWORD PTR _cert$[esp-4]
	push	esi
	push	edi
	xor	edi, edi
	xor	esi, esi
	test	eax, eax
	jne	SHORT $LN3@TS_CONF_se
; Line 246
	push	OFFSET ??_C@_0M@ILJFFIIJ@signer_cert?$AA@
	push	DWORD PTR _section$[esp+8]
	push	DWORD PTR _conf$[esp+12]
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 247
	test	eax, eax
	jne	SHORT $LN3@TS_CONF_se
; Line 157
	push	OFFSET ??_C@_0M@ILJFFIIJ@signer_cert?$AA@
	push	DWORD PTR _section$[esp+8]
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 258
	push	esi
	call	_X509_free
	add	esp, 4
; Line 259
	mov	eax, edi
	pop	edi
	pop	esi
; Line 260
	ret	0
$LN3@TS_CONF_se:
; Line 251
	push	eax
	call	_TS_CONF_load_cert
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $err$10
; Line 253
	push	esi
	push	DWORD PTR _ctx$[esp+8]
	call	_TS_RESP_CTX_set_signer_cert
	add	esp, 8
	mov	ecx, 1
	test	eax, eax
	cmovne	edi, ecx
$err$10:
; Line 258
	push	esi
	call	_X509_free
	add	esp, 4
; Line 259
	mov	eax, edi
	pop	edi
	pop	esi
; Line 260
	ret	0
_TS_CONF_set_signer_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_default_engine
_TEXT	SEGMENT
_name$ = 8						; size = 4
_TS_CONF_set_default_engine PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 211
	push	ebx
	push	edi
; Line 216
	mov	edi, DWORD PTR _name$[esp+4]
	xor	ebx, ebx
	mov	eax, OFFSET ??_C@_07JNFPDNEP@builtin?$AA@
	mov	ecx, edi
	npad	1
$LL10@TS_CONF_se:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN11@TS_CONF_se
	test	dl, dl
	je	SHORT $LN12@TS_CONF_se
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN11@TS_CONF_se
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL10@TS_CONF_se
$LN12@TS_CONF_se:
	xor	eax, eax
	jmp	SHORT $LN13@TS_CONF_se
$LN11@TS_CONF_se:
	sbb	eax, eax
	or	eax, 1
$LN13@TS_CONF_se:
	test	eax, eax
	jne	SHORT $LN2@TS_CONF_se
; Line 217
	pop	edi
	mov	eax, 1
	pop	ebx
; Line 236
	ret	0
$LN2@TS_CONF_se:
	push	esi
; Line 219
	push	edi
	call	_ENGINE_by_id
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN9@TS_CONF_se
; Line 222
	mov	ecx, OFFSET ??_C@_04JHJDAOJH@chil?$AA@
	mov	eax, edi
$LL14@TS_CONF_se:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN15@TS_CONF_se
	test	dl, dl
	je	SHORT $LN16@TS_CONF_se
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN15@TS_CONF_se
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL14@TS_CONF_se
$LN16@TS_CONF_se:
	xor	eax, eax
	jmp	SHORT $LN17@TS_CONF_se
$LN15@TS_CONF_se:
	sbb	eax, eax
	or	eax, 1
$LN17@TS_CONF_se:
	test	eax, eax
	jne	SHORT $LN4@TS_CONF_se
; Line 223
	push	eax
	push	eax
	push	1
	push	100					; 00000064H
	push	esi
	call	_ENGINE_ctrl
	add	esp, 20					; 00000014H
$LN4@TS_CONF_se:
; Line 225
	push	65535					; 0000ffffH
	push	esi
	call	_ENGINE_set_default
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@TS_CONF_se
; Line 227
	mov	ebx, 1
; Line 229
	jmp	SHORT $LN6@TS_CONF_se
$LN9@TS_CONF_se:
; Line 230
	push	230					; 000000e6H
	push	OFFSET ??_C@_0BG@LDOFGBPN@?4?2crypto?2ts?2ts_conf?4c?$AA@
	push	127					; 0000007fH
	push	146					; 00000092H
	push	47					; 0000002fH
	call	_ERR_put_error
; Line 231
	push	edi
	push	OFFSET ??_C@_07OIMAMEKN@engine?3?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 32					; 00000020H
$LN6@TS_CONF_se:
; Line 233
	test	esi, esi
	je	SHORT $LN7@TS_CONF_se
; Line 234
	push	esi
	call	_ENGINE_free
	add	esp, 4
$LN7@TS_CONF_se:
; Line 235
	pop	esi
	pop	edi
	mov	eax, ebx
	pop	ebx
; Line 236
	ret	0
_TS_CONF_set_default_engine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_crypto_device
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_device$ = 16						; size = 4
_TS_CONF_set_crypto_device PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 198
	mov	eax, DWORD PTR _device$[esp-4]
	test	eax, eax
	jne	SHORT $LN7@TS_CONF_se
; Line 199
	push	OFFSET ??_C@_0O@PGIIDHAM@crypto_device?$AA@
	push	DWORD PTR _section$[esp]
	push	DWORD PTR _conf$[esp+4]
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 201
	test	eax, eax
	je	SHORT $LN3@TS_CONF_se
$LN7@TS_CONF_se:
	push	eax
	call	_TS_CONF_set_default_engine
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@TS_CONF_se
; Line 162
	push	OFFSET ??_C@_0O@PGIIDHAM@crypto_device?$AA@
	push	DWORD PTR _section$[esp]
	push	OFFSET ??_C@_0CD@LBPCLBFA@invalid?5variable?5value?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 207
	xor	eax, eax
; Line 208
	ret	0
$LN3@TS_CONF_se:
; Line 207
	mov	eax, 1
$err$9:
; Line 208
	ret	0
_TS_CONF_set_crypto_device ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_set_serial
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_cb$ = 16						; size = 4
_ctx$ = 20						; size = 4
_TS_CONF_set_serial PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 179
	push	OFFSET ??_C@_06KCELPKEE@serial?$AA@
	push	DWORD PTR _section$[esp]
	push	DWORD PTR _conf$[esp+4]
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 180
	test	eax, eax
	jne	SHORT $LN2@TS_CONF_se
; Line 157
	push	OFFSET ??_C@_06KCELPKEE@serial?$AA@
	push	DWORD PTR _section$[esp]
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 188
	xor	eax, eax
; Line 189
	ret	0
$LN2@TS_CONF_se:
; Line 184
	push	eax
	push	DWORD PTR _cb$[esp]
	push	DWORD PTR _ctx$[esp+4]
	call	_TS_RESP_CTX_set_serial_cb
	add	esp, 12					; 0000000cH
; Line 188
	mov	eax, 1
$err$7:
; Line 189
	ret	0
_TS_CONF_set_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_get_tsa_section
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_TS_CONF_get_tsa_section PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 167
	mov	eax, DWORD PTR _section$[esp-4]
	test	eax, eax
	jne	SHORT $LN5@TS_CONF_ge
; Line 168
	push	esi
	push	OFFSET ??_C@_0M@FFEGKAMB@default_tsa?$AA@
	push	OFFSET ??_C@_03BALHJLMH@tsa?$AA@
	push	DWORD PTR _conf$[esp+8]
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 169
	test	esi, esi
	jne	SHORT $LN9@TS_CONF_ge
; Line 157
	push	OFFSET ??_C@_0M@FFEGKAMB@default_tsa?$AA@
	push	OFFSET ??_C@_03BALHJLMH@tsa?$AA@
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 172
	mov	eax, esi
$LN9@TS_CONF_ge:
	pop	esi
$LN5@TS_CONF_ge:
; Line 173
	ret	0
_TS_CONF_get_tsa_section ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_load_key
_TEXT	SEGMENT
_file$ = 8						; size = 4
_pass$ = 12						; size = 4
_TS_CONF_load_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 139
	push	esi
	push	edi
; Line 143
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	DWORD PTR _file$[esp+8]
	xor	edi, edi
	call	_BIO_new_file
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $LN5@TS_CONF_lo
; Line 145
	push	DWORD PTR _pass$[esp+4]
	push	edi
	push	edi
	push	esi
	call	_PEM_read_bio_PrivateKey
	add	esp, 16					; 00000010H
	mov	edi, eax
$end$7:
; Line 147
	test	edi, edi
	jne	SHORT $LN3@TS_CONF_lo
$LN5@TS_CONF_lo:
; Line 148
	push	DWORD PTR _file$[esp+4]
	push	OFFSET ??_C@_0CA@GMLNBFGN@unable?5to?5load?5private?5key?3?5?$CFs?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN3@TS_CONF_lo:
; Line 149
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 150
	mov	eax, edi
	pop	edi
	pop	esi
; Line 151
	ret	0
_TS_CONF_load_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_load_certs
_TEXT	SEGMENT
_certs$1$ = -4						; size = 4
_file$ = 8						; size = 4
_TS_CONF_load_certs PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 111
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 117
	mov	esi, DWORD PTR _file$[esp+12]
	xor	ebp, ebp
	push	edi
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	esi
	xor	edi, edi
	call	_BIO_new_file
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _certs$1$[esp+20], ebx
	test	ebx, ebx
	je	SHORT $LN14@TS_CONF_lo
; Line 120
	call	_sk_new_null
	mov	ebp, eax
	test	ebp, ebp
	je	SHORT $LN14@TS_CONF_lo
; Line 122
	push	edi
	push	edi
	push	edi
	push	ebx
	call	_PEM_X509_INFO_read_bio
	mov	edi, eax
; Line 123
	xor	esi, esi
	push	edi
	call	_sk_num
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN8@TS_CONF_lo
$LL4@TS_CONF_lo:
; Line 124
	push	esi
	push	edi
	call	_sk_value
	mov	ebx, eax
	add	esp, 8
; Line 125
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN2@TS_CONF_lo
; Line 126
	push	eax
	push	ebp
	call	_sk_push
	add	esp, 8
; Line 127
	mov	DWORD PTR [ebx], 0
$LN2@TS_CONF_lo:
; Line 123
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@TS_CONF_lo
$end$16:
; Line 131
	mov	ebx, DWORD PTR _certs$1$[esp+20]
	jmp	SHORT $LN8@TS_CONF_lo
$LN14@TS_CONF_lo:
; Line 132
	push	esi
	push	OFFSET ??_C@_0CB@KELMIFF@unable?5to?5load?5certificates?3?5?$CFs?6@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN8@TS_CONF_lo:
; Line 133
	push	OFFSET _X509_INFO_free
	push	edi
	call	_sk_pop_free
; Line 134
	push	ebx
	call	_BIO_free
	add	esp, 12					; 0000000cH
; Line 135
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 136
	pop	ecx
	ret	0
_TS_CONF_load_certs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_CONF_load_cert
_TEXT	SEGMENT
_file$ = 8						; size = 4
_TS_CONF_load_cert PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_conf.c
; Line 96
	push	esi
	push	edi
; Line 100
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	DWORD PTR _file$[esp+8]
	xor	esi, esi
	call	_BIO_new_file
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@TS_CONF_lo
; Line 102
	push	esi
	push	esi
	push	esi
	push	edi
	call	_PEM_read_bio_X509_AUX
	add	esp, 16					; 00000010H
	mov	esi, eax
$end$7:
; Line 104
	test	esi, esi
	jne	SHORT $LN3@TS_CONF_lo
$LN5@TS_CONF_lo:
; Line 105
	push	DWORD PTR _file$[esp+4]
	push	OFFSET ??_C@_0CA@IKGCPJI@unable?5to?5load?5certificate?3?5?$CFs?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN3@TS_CONF_lo:
; Line 106
	push	edi
	call	_BIO_free
	add	esp, 4
; Line 107
	mov	eax, esi
	pop	edi
	pop	esi
; Line 108
	ret	0
_TS_CONF_load_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

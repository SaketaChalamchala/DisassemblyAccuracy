; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\passwd.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
?passwds_static@?BA@??passwd_main@@9@9 DD 02H DUP (?)	; `passwd_main'::`16'::passwds_static
_BSS	ENDS
CONST	SEGMENT
_cov_2char DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	041H
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
	DB	047H
	DB	048H
	DB	049H
	DB	04aH
	DB	04bH
	DB	04cH
	DB	04dH
	DB	04eH
	DB	04fH
	DB	050H
	DB	051H
	DB	052H
	DB	053H
	DB	054H
	DB	055H
	DB	056H
	DB	057H
	DB	058H
	DB	059H
	DB	05aH
	DB	061H
	DB	062H
	DB	063H
	DB	064H
	DB	065H
	DB	066H
	DB	067H
	DB	068H
	DB	069H
	DB	06aH
	DB	06bH
	DB	06cH
	DB	06dH
	DB	06eH
	DB	06fH
	DB	070H
	DB	071H
	DB	072H
	DB	073H
	DB	074H
	DB	075H
	DB	076H
	DB	077H
	DB	078H
	DB	079H
	DB	07aH
CONST	ENDS
PUBLIC	_passwd_main
PUBLIC	??_C@_06MIBOINDC@?9crypt?$AA@			; `string'
PUBLIC	??_C@_02PGHGPEOM@?91?$AA@			; `string'
PUBLIC	??_C@_05KLEKANFJ@?9apr1?$AA@			; `string'
PUBLIC	??_C@_05MCHJMMHL@?9salt?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_06EFCBJHGP@?9stdin?$AA@			; `string'
PUBLIC	??_C@_09JLKGPCDL@?9noverify?$AA@		; `string'
PUBLIC	??_C@_06HONEMELG@?9quiet?$AA@			; `string'
PUBLIC	??_C@_06DAHAPLNJ@?9table?$AA@			; `string'
PUBLIC	??_C@_08FOBBEMBH@?9reverse?$AA@			; `string'
PUBLIC	??_C@_0CF@FNMPKEEM@Usage?3?5passwd?5?$FLoptions?$FN?5?$FLpasswor@ ; `string'
PUBLIC	??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@	; `string'
PUBLIC	??_C@_0DP@JAFNNPCN@?9crypt?5?5?5?5?5?5?5?5?5?5?5?5?5standard?5Unix@ ; `string'
PUBLIC	??_C@_0DB@OOOLLDOG@?91?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5MD5?9based?5pas@ ; `string'
PUBLIC	??_C@_0EB@FMCAAHIK@?9apr1?5?5?5?5?5?5?5?5?5?5?5?5?5?5MD5?9based?5pas@ ; `string'
PUBLIC	??_C@_0CG@ILKJAIBC@?9salt?5string?5?5?5?5?5?5?5use?5provided?5@ ; `string'
PUBLIC	??_C@_0CN@GBLJIPB@?9in?5file?5?5?5?5?5?5?5?5?5?5?5read?5password@ ; `string'
PUBLIC	??_C@_0CO@KGOAKHJE@?9stdin?5?5?5?5?5?5?5?5?5?5?5?5?5read?5password@ ; `string'
PUBLIC	??_C@_0EF@PKHCBPCM@?9noverify?5?5?5?5?5?5?5?5?5?5never?5verify?5@ ; `string'
PUBLIC	??_C@_0CA@IDLNGCID@?9quiet?5?5?5?5?5?5?5?5?5?5?5?5?5no?5warnings?6?$AA@ ; `string'
PUBLIC	??_C@_0CL@LCIDPMOH@?9table?5?5?5?5?5?5?5?5?5?5?5?5?5format?5output@ ; `string'
PUBLIC	??_C@_0CJ@MJKKPGML@?9reverse?5?5?5?5?5?5?5?5?5?5?5switch?5table?5@ ; `string'
PUBLIC	??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@MDBCBJFE@?$AAi?$AAn?$AA_?$AAs?$AAt?$AAd?$AAi?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@ODKFOCEN@?$AAi?$AAn?$AA_?$AAs?$AAt?$AAd?$AAi?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BA@JLHAGMJN@?4?2apps?2passwd?4c?$AA@	; `string'
PUBLIC	??_C@_0L@GCFBFBCP@Password?3?5?$AA@		; `string'
PUBLIC	??_C@_1CC@LJLKJJEK@?$AA?$CK?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@PLPJFNJJ@?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@KPLCKOHI@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAm?$AAa?$AAg?$AAi?$AAc?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@ ; `string'
PUBLIC	??_C@_01EPMOAMKG@$?$AA@				; `string'
PUBLIC	??_C@_1DC@IIOHEAJN@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA6?$AA?5?$AA?$CL?$AA?5?$AA8?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@FFJCGPIF@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAl?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA8?$AA?$AA@ ; `string'
PUBLIC	??_C@_01LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	??_C@_1EI@DDAOCBDP@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb@ ; `string'
PUBLIC	??_C@_1BA@NMDEMPIE@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA5?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EE@BINEFKHB@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf@ ; `string'
PUBLIC	??_C@_1BO@DGAPLGKL@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@IHPAAGIB@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAm?$AAa?$AAl?$AAl?$AAo?$AAc?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CA@MOGCDJCA@?$AA?$CK?$AAs?$AAa?$AAl?$AAt?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CP@GAKOHLEH@Warning?3?5truncating?5password?5to?5@ ; `string'
PUBLIC	??_C@_1DI@EFHDOIAC@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAp?$AAw?$AA_?$AAm?$AAa?$AAx?$AAl?$AAe?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_01HIHLOKLC@1?$AA@				; `string'
PUBLIC	??_C@_04GHJIENAP@apr1?$AA@			; `string'
PUBLIC	??_C@_1BK@KDHKPAEJ@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ ; `string'
PUBLIC	??_C@_06EEAEEKCL@?$CFs?7?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
EXTRN	__imp___wassert:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__strncat:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_read_pw_string:PROC
EXTRN	_EVP_md5:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_load_config:PROC
EXTRN	_DES_crypt:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?out_buf@?1??md5crypt@@9@9 DB 029H DUP (?)		; `md5crypt'::`2'::out_buf
_BSS	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EEAEEKCL@?$CFs?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_06EEAEEKCL@?$CFs?7?$CFs?6?$AA@ DB '%s', 09H, '%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@KDHKPAEJ@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@KDHKPAEJ@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ DB 'h'
	DB	00H, 'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHJIENAP@apr1?$AA@
CONST	SEGMENT
??_C@_04GHJIENAP@apr1?$AA@ DB 'apr1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1?$AA@
CONST	SEGMENT
??_C@_01HIHLOKLC@1?$AA@ DB '1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@EFHDOIAC@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAp?$AAw?$AA_?$AAm?$AAa?$AAx?$AAl?$AAe?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@EFHDOIAC@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAp?$AAw?$AA_?$AAm?$AAa?$AAx?$AAl?$AAe?$AAn?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H, '(', 00H
	DB	'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H, 'd', 00H, ')'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'p', 00H, 'w', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 'x', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GAKOHLEH@Warning?3?5truncating?5password?5to?5@
CONST	SEGMENT
??_C@_0CP@GAKOHLEH@Warning?3?5truncating?5password?5to?5@ DB 'Warning: tr'
	DB	'uncating password to %u characters', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@MOGCDJCA@?$AA?$CK?$AAs?$AAa?$AAl?$AAt?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@MOGCDJCA@?$AA?$CK?$AAs?$AAa?$AAl?$AAt?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ DB '*'
	DB	00H, 's', 00H, 'a', 00H, 'l', 00H, 't', 00H, '_', 00H, 'p', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'L', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@IHPAAGIB@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAm?$AAa?$AAl?$AAl?$AAo?$AAc?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@IHPAAGIB@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAm?$AAa?$AAl?$AAl?$AAo?$AAc?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ DB 's'
	DB	00H, 'a', 00H, 'l', 00H, 't', 00H, '_', 00H, 'm', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, '_', 00H, 'p', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H
	DB	'L', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@DGAPLGKL@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@DGAPLGKL@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ DB 's'
	DB	00H, 'a', 00H, 'l', 00H, 't', 00H, '_', 00H, 'p', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@BINEFKHB@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf@
CONST	SEGMENT
??_C@_1EE@BINEFKHB@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H, '(', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, '_', 00H, 'b', 00H, 'u', 00H, 'f'
	DB	00H, ')', 00H, ' ', 00H, '<', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, '_', 00H, 'b', 00H, 'u', 00H, 'f', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@NMDEMPIE@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA5?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@NMDEMPIE@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA5?$AA?$AA@ DB 'i'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '1', 00H, '5', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@DDAOCBDP@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb@
CONST	SEGMENT
??_C@_1EI@DDAOCBDP@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb@ DB 'o'
	DB	00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, '_'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, ' ', 00H, '+', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H, '('
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, '_', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_01LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@FFJCGPIF@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAl?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA8?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@FFJCGPIF@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAl?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA8?$AA?$AA@ DB 's'
	DB	00H, 'a', 00H, 'l', 00H, 't', 00H, '_', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '8', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@IIOHEAJN@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA6?$AA?5?$AA?$CL?$AA?5?$AA8?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@IIOHEAJN@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA6?$AA?5?$AA?$CL?$AA?5?$AA8?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H, '(', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, '_', 00H, 'b', 00H, 'u', 00H, 'f'
	DB	00H, ')', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '6', 00H
	DB	' ', 00H, '+', 00H, ' ', 00H, '8', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EPMOAMKG@$?$AA@
CONST	SEGMENT
??_C@_01EPMOAMKG@$?$AA@ DB '$', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@KPLCKOHI@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAm?$AAa?$AAg?$AAi?$AAc?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@KPLCKOHI@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAm?$AAa?$AAg?$AAi?$AAc?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H, '(', 00H
	DB	'm', 00H, 'a', 00H, 'g', 00H, 'i', 00H, 'c', 00H, ')', 00H, ' '
	DB	00H, '<', 00H, '=', 00H, ' ', 00H, '4', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@PLPJFNJJ@?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@PLPJFNJJ@?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ DB 'p'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H, 'd', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LJLKJJEK@?$AA?$CK?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LJLKJJEK@?$AA?$CK?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ DB '*'
	DB	00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H, 'd', 00H
	DB	's', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCFBFBCP@Password?3?5?$AA@
CONST	SEGMENT
??_C@_0L@GCFBFBCP@Password?3?5?$AA@ DB 'Password: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JLHAGMJN@?4?2apps?2passwd?4c?$AA@
CONST	SEGMENT
??_C@_0BA@JLHAGMJN@?4?2apps?2passwd?4c?$AA@ DB '.\apps\passwd.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ODKFOCEN@?$AAi?$AAn?$AA_?$AAs?$AAt?$AAd?$AAi?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@ODKFOCEN@?$AAi?$AAn?$AA_?$AAs?$AAt?$AAd?$AAi?$AAn?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, '_', 00H, 's', 00H, 't', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@MDBCBJFE@?$AAi?$AAn?$AA_?$AAs?$AAt?$AAd?$AAi?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@MDBCBJFE@?$AAi?$AAn?$AA_?$AAs?$AAt?$AAd?$AAi?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, '_', 00H, 's', 00H, 't', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '\', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 's', 00H, '\', 00H
	DB	'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H, 'd', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MJKKPGML@?9reverse?5?5?5?5?5?5?5?5?5?5?5switch?5table?5@
CONST	SEGMENT
??_C@_0CJ@MJKKPGML@?9reverse?5?5?5?5?5?5?5?5?5?5?5switch?5table?5@ DB '-r'
	DB	'everse           switch table columns', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LCIDPMOH@?9table?5?5?5?5?5?5?5?5?5?5?5?5?5format?5output@
CONST	SEGMENT
??_C@_0CL@LCIDPMOH@?9table?5?5?5?5?5?5?5?5?5?5?5?5?5format?5output@ DB '-'
	DB	'table             format output as table', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IDLNGCID@?9quiet?5?5?5?5?5?5?5?5?5?5?5?5?5no?5warnings?6?$AA@
CONST	SEGMENT
??_C@_0CA@IDLNGCID@?9quiet?5?5?5?5?5?5?5?5?5?5?5?5?5no?5warnings?6?$AA@ DB '-'
	DB	'quiet             no warnings', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@PKHCBPCM@?9noverify?5?5?5?5?5?5?5?5?5?5never?5verify?5@
CONST	SEGMENT
??_C@_0EF@PKHCBPCM@?9noverify?5?5?5?5?5?5?5?5?5?5never?5verify?5@ DB '-no'
	DB	'verify          never verify when reading password from termi'
	DB	'nal', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@KGOAKHJE@?9stdin?5?5?5?5?5?5?5?5?5?5?5?5?5read?5password@
CONST	SEGMENT
??_C@_0CO@KGOAKHJE@?9stdin?5?5?5?5?5?5?5?5?5?5?5?5?5read?5password@ DB '-'
	DB	'stdin             read passwords from stdin', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@GBLJIPB@?9in?5file?5?5?5?5?5?5?5?5?5?5?5read?5password@
CONST	SEGMENT
??_C@_0CN@GBLJIPB@?9in?5file?5?5?5?5?5?5?5?5?5?5?5read?5password@ DB '-in'
	DB	' file           read passwords from file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ILKJAIBC@?9salt?5string?5?5?5?5?5?5?5use?5provided?5@
CONST	SEGMENT
??_C@_0CG@ILKJAIBC@?9salt?5string?5?5?5?5?5?5?5use?5provided?5@ DB '-salt'
	DB	' string       use provided salt', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@FMCAAHIK@?9apr1?5?5?5?5?5?5?5?5?5?5?5?5?5?5MD5?9based?5pas@
CONST	SEGMENT
??_C@_0EB@FMCAAHIK@?9apr1?5?5?5?5?5?5?5?5?5?5?5?5?5?5MD5?9based?5pas@ DB '-'
	DB	'apr1              MD5-based password algorithm, Apache varian'
	DB	't', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@OOOLLDOG@?91?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5MD5?9based?5pas@
CONST	SEGMENT
??_C@_0DB@OOOLLDOG@?91?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5MD5?9based?5pas@ DB '-'
	DB	'1                 MD5-based password algorithm', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@JAFNNPCN@?9crypt?5?5?5?5?5?5?5?5?5?5?5?5?5standard?5Unix@
CONST	SEGMENT
??_C@_0DP@JAFNNPCN@?9crypt?5?5?5?5?5?5?5?5?5?5?5?5?5standard?5Unix@ DB '-'
	DB	'crypt             standard Unix password algorithm (default)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
CONST	SEGMENT
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ DB 'where options are', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FNMPKEEM@Usage?3?5passwd?5?$FLoptions?$FN?5?$FLpasswor@
CONST	SEGMENT
??_C@_0CF@FNMPKEEM@Usage?3?5passwd?5?$FLoptions?$FN?5?$FLpasswor@ DB 'Usa'
	DB	'ge: passwd [options] [passwords]', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FOBBEMBH@?9reverse?$AA@
CONST	SEGMENT
??_C@_08FOBBEMBH@?9reverse?$AA@ DB '-reverse', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DAHAPLNJ@?9table?$AA@
CONST	SEGMENT
??_C@_06DAHAPLNJ@?9table?$AA@ DB '-table', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HONEMELG@?9quiet?$AA@
CONST	SEGMENT
??_C@_06HONEMELG@?9quiet?$AA@ DB '-quiet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JLKGPCDL@?9noverify?$AA@
CONST	SEGMENT
??_C@_09JLKGPCDL@?9noverify?$AA@ DB '-noverify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EFCBJHGP@?9stdin?$AA@
CONST	SEGMENT
??_C@_06EFCBJHGP@?9stdin?$AA@ DB '-stdin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MCHJMMHL@?9salt?$AA@
CONST	SEGMENT
??_C@_05MCHJMMHL@?9salt?$AA@ DB '-salt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KLEKANFJ@?9apr1?$AA@
CONST	SEGMENT
??_C@_05KLEKANFJ@?9apr1?$AA@ DB '-apr1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02PGHGPEOM@?91?$AA@
CONST	SEGMENT
??_C@_02PGHGPEOM@?91?$AA@ DB '-1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MIBOINDC@?9crypt?$AA@
CONST	SEGMENT
??_C@_06MIBOINDC@?9crypt?$AA@ DB '-crypt', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _md5crypt
_TEXT	SEGMENT
_magic$GSCopy$1$ = -96					; size = 4
_i$1$ = -96						; size = 4
tv645 = -96						; size = 4
tv635 = -96						; size = 4
_salt$GSCopy$1$ = -92					; size = 4
_salt_out$1$ = -92					; size = 4
_salt_len$1$ = -88					; size = 4
_md2$ = -84						; size = 24
_md$ = -60						; size = 24
_buf$ = -36						; size = 16
_buf_perm$1 = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_passwd$ = 8						; size = 4
_magic$ = 12						; size = 4
_salt$ = 16						; size = 4
_md5crypt PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\passwd.c
; Line 295
	mov	eax, 96					; 00000060H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+96], eax
	mov	eax, DWORD PTR _salt$[esp+92]
	push	ebx
	mov	ebx, DWORD PTR _magic$[esp+96]
	push	ebp
	mov	ebp, DWORD PTR _passwd$[esp+100]
	push	edi
; Line 305
	mov	edi, ebp
	mov	DWORD PTR _magic$GSCopy$1$[esp+108], ebx
	mov	DWORD PTR _salt$GSCopy$1$[esp+108], eax
	lea	ecx, DWORD PTR [edi+1]
$LL47@md5crypt:
	mov	al, BYTE PTR [edi]
	inc	edi
	test	al, al
	jne	SHORT $LL47@md5crypt
	sub	edi, ecx
; Line 306
	mov	WORD PTR ?out_buf@?1??md5crypt@@9@9, 36	; 00000024H
; Line 308
	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+1]
$LL48@md5crypt:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL48@md5crypt
	sub	ecx, edx
	cmp	ecx, 4
	jbe	SHORT $LN21@md5crypt
	push	308					; 00000134H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1CG@KPLCKOHI@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAm?$AAa?$AAg?$AAi?$AAc?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN21@md5crypt:
; Line 309
	push	esi
	mov	esi, DWORD PTR __imp__strncat
	push	4
	push	ebx
	push	OFFSET ?out_buf@?1??md5crypt@@9@9
	call	esi
; Line 310
	push	1
	push	OFFSET ??_C@_01EPMOAMKG@$?$AA@
	push	OFFSET ?out_buf@?1??md5crypt@@9@9
	call	esi
; Line 311
	push	8
	push	DWORD PTR _salt$GSCopy$1$[esp+140]
	push	OFFSET ?out_buf@?1??md5crypt@@9@9
	call	esi
; Line 312
	mov	ecx, OFFSET ?out_buf@?1??md5crypt@@9@9
	add	esp, 36					; 00000024H
	lea	edx, DWORD PTR [ecx+1]
$LL49@md5crypt:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL49@md5crypt
	sub	ecx, edx
	cmp	ecx, 14					; 0000000eH
	jbe	SHORT $LN22@md5crypt
	push	312					; 00000138H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1DC@IIOHEAJN@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA6?$AA?5?$AA?$CL?$AA?5?$AA8?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN22@md5crypt:
; Line 313
	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+1]
$LL50@md5crypt:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL50@md5crypt
	sub	ecx, edx
	lea	esi, DWORD PTR ?out_buf@?1??md5crypt@@9@9[ecx+2]
; Line 314
	mov	ebx, esi
	mov	DWORD PTR _salt_out$1$[esp+112], esi
	lea	ecx, DWORD PTR [ebx+1]
$LL51@md5crypt:
	mov	al, BYTE PTR [ebx]
	inc	ebx
	test	al, al
	jne	SHORT $LL51@md5crypt
	sub	ebx, ecx
	mov	DWORD PTR _salt_len$1$[esp+112], ebx
; Line 315
	cmp	ebx, 8
	jbe	SHORT $LN23@md5crypt
	push	315					; 0000013bH
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BM@FFJCGPIF@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAl?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA8?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN23@md5crypt:
; Line 317
	lea	eax, DWORD PTR _md$[esp+112]
	push	eax
	call	_EVP_MD_CTX_init
	add	esp, 4
; Line 318
	push	0
	call	_EVP_md5
	push	eax
	lea	eax, DWORD PTR _md$[esp+120]
	push	eax
	call	_EVP_DigestInit_ex
; Line 319
	push	edi
	lea	eax, DWORD PTR _md$[esp+128]
	push	ebp
	push	eax
	call	_EVP_DigestUpdate
; Line 320
	push	1
	lea	eax, DWORD PTR _md$[esp+140]
	push	OFFSET ??_C@_01EPMOAMKG@$?$AA@
	push	eax
	call	_EVP_DigestUpdate
; Line 321
	mov	edx, DWORD PTR _magic$GSCopy$1$[esp+148]
	add	esp, 36					; 00000024H
	mov	ecx, edx
	lea	eax, DWORD PTR [ecx+1]
	mov	DWORD PTR tv635[esp+112], eax
	npad	2
$LL52@md5crypt:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL52@md5crypt
	sub	ecx, DWORD PTR tv635[esp+112]
	lea	eax, DWORD PTR _md$[esp+112]
	push	ecx
	push	edx
	push	eax
	call	_EVP_DigestUpdate
; Line 322
	push	1
	lea	eax, DWORD PTR _md$[esp+128]
	push	OFFSET ??_C@_01EPMOAMKG@$?$AA@
	push	eax
	call	_EVP_DigestUpdate
; Line 323
	push	ebx
	lea	eax, DWORD PTR _md$[esp+140]
	push	esi
	push	eax
	call	_EVP_DigestUpdate
; Line 325
	lea	eax, DWORD PTR _md2$[esp+148]
	push	eax
	call	_EVP_MD_CTX_init
	add	esp, 40					; 00000028H
; Line 326
	push	0
	call	_EVP_md5
	push	eax
	lea	eax, DWORD PTR _md2$[esp+120]
	push	eax
	call	_EVP_DigestInit_ex
; Line 327
	push	edi
	lea	eax, DWORD PTR _md2$[esp+128]
	push	ebp
	push	eax
	call	_EVP_DigestUpdate
; Line 328
	push	ebx
	lea	eax, DWORD PTR _md2$[esp+140]
	push	esi
	push	eax
	call	_EVP_DigestUpdate
; Line 329
	push	edi
	lea	eax, DWORD PTR _md2$[esp+152]
	push	ebp
	push	eax
	call	_EVP_DigestUpdate
; Line 330
	push	0
	lea	eax, DWORD PTR _buf$[esp+164]
	push	eax
	lea	eax, DWORD PTR _md2$[esp+168]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 60					; 0000003cH
; Line 332
	mov	eax, edi
	cmp	edi, 16					; 00000010H
	jbe	SHORT $LN3@md5crypt
; Line 317
	lea	esi, DWORD PTR [edi-17]
	mov	ebx, edi
	shr	esi, 4
	inc	esi
	npad	2
$LL4@md5crypt:
; Line 333
	push	16					; 00000010H
	lea	eax, DWORD PTR _buf$[esp+116]
	push	eax
	lea	eax, DWORD PTR _md$[esp+120]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	sub	ebx, 16					; 00000010H
	sub	esi, 1
	jne	SHORT $LL4@md5crypt
	mov	DWORD PTR _i$1$[esp+112], ebx
	mov	ebx, DWORD PTR _salt_len$1$[esp+112]
	mov	eax, DWORD PTR _i$1$[esp+112]
$LN3@md5crypt:
; Line 334
	push	eax
	lea	eax, DWORD PTR _buf$[esp+116]
	push	eax
	lea	eax, DWORD PTR _md$[esp+120]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
; Line 337
	test	edi, edi
	je	SHORT $LN6@md5crypt
	mov	ebx, edi
$LL5@md5crypt:
; Line 338
	test	bl, 1
	mov	eax, OFFSET ??_C@_01LOCGONAA@?$AA?$AA@
	push	1
	cmove	eax, ebp
	push	eax
	lea	eax, DWORD PTR _md$[esp+120]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
; Line 339
	sar	ebx, 1
	jne	SHORT $LL5@md5crypt
	mov	ebx, DWORD PTR _salt_len$1$[esp+112]
$LN6@md5crypt:
; Line 341
	push	0
	lea	eax, DWORD PTR _buf$[esp+116]
	push	eax
	lea	eax, DWORD PTR _md$[esp+120]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
; Line 343
	xor	esi, esi
	npad	6
$LL9@md5crypt:
; Line 344
	push	0
	call	_EVP_md5
	push	eax
	lea	eax, DWORD PTR _md2$[esp+120]
	push	eax
	call	_EVP_DigestInit_ex
; Line 345
	mov	ecx, esi
	mov	eax, 16					; 00000010H
	and	ecx, 1
	mov	DWORD PTR tv645[esp+124], ecx
	cmovne	eax, edi
	test	ecx, ecx
	push	eax
	lea	eax, DWORD PTR _buf$[esp+128]
	cmovne	eax, ebp
	push	eax
	lea	eax, DWORD PTR _md2$[esp+132]
	push	eax
	call	_EVP_DigestUpdate
; Line 347
	mov	eax, -1431655765			; aaaaaaabH
	mov	ecx, esi
	mul	esi
	add	esp, 24					; 00000018H
	shr	edx, 1
	lea	eax, DWORD PTR [edx+edx*2]
	sub	ecx, eax
	je	SHORT $LN16@md5crypt
; Line 348
	push	ebx
	push	DWORD PTR _salt_out$1$[esp+116]
	lea	eax, DWORD PTR _md2$[esp+120]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
$LN16@md5crypt:
; Line 349
	mov	eax, 613566757				; 24924925H
	mul	esi
	mov	eax, esi
	sub	eax, edx
	shr	eax, 1
	add	eax, edx
	shr	eax, 2
	lea	ecx, DWORD PTR [eax*8]
	sub	ecx, eax
	mov	eax, esi
	sub	eax, ecx
	je	SHORT $LN17@md5crypt
; Line 350
	push	edi
	lea	eax, DWORD PTR _md2$[esp+116]
	push	ebp
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
$LN17@md5crypt:
; Line 351
	mov	ecx, DWORD PTR tv645[esp+112]
	mov	edx, 16					; 00000010H
	test	ecx, ecx
	mov	eax, edi
	cmovne	eax, edx
	push	eax
	lea	eax, DWORD PTR _buf$[esp+116]
	cmove	eax, ebp
	push	eax
	lea	eax, DWORD PTR _md2$[esp+120]
	push	eax
	call	_EVP_DigestUpdate
; Line 353
	push	0
	lea	eax, DWORD PTR _buf$[esp+128]
	push	eax
	lea	eax, DWORD PTR _md2$[esp+132]
	push	eax
	call	_EVP_DigestFinal_ex
	inc	esi
	add	esp, 24					; 00000018H
	cmp	esi, 1000				; 000003e8H
	jb	$LL9@md5crypt
; Line 355
	lea	eax, DWORD PTR _md2$[esp+112]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 365
	xor	edx, edx
	add	esp, 4
	xor	ecx, ecx
	lea	esi, DWORD PTR [edx+17]
	npad	9
$LL12@md5crypt:
; Line 367
	mov	al, BYTE PTR _buf$[esp+edx+112]
	mov	BYTE PTR _buf_perm$1[esp+ecx+112], al
	lea	eax, DWORD PTR [edx+6]
	cdq
	inc	ecx
	idiv	esi
	cmp	ecx, 14					; 0000000eH
	jl	SHORT $LL12@md5crypt
; Line 368
	movzx	eax, BYTE PTR _buf$[esp+117]
; Line 376
	mov	ecx, OFFSET ?out_buf@?1??md5crypt@@9@9
	mov	esi, DWORD PTR _salt_out$1$[esp+112]
	mov	BYTE PTR _buf_perm$1[esp+126], al
	add	esi, ebx
	movzx	eax, BYTE PTR _buf$[esp+123]
	mov	BYTE PTR _buf_perm$1[esp+127], al
	lea	edx, DWORD PTR [ecx+1]
$LL53@md5crypt:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL53@md5crypt
	mov	ebx, DWORD PTR __imp___wassert
	sub	ecx, edx
	lea	eax, DWORD PTR ?out_buf@?1??md5crypt@@9@9[ecx]
	cmp	esi, eax
	je	SHORT $LN24@md5crypt
	push	376					; 00000178H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1EI@DDAOCBDP@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb@
	call	ebx
	add	esp, 12					; 0000000cH
$LN24@md5crypt:
; Line 378
	mov	BYTE PTR [esi], 36			; 00000024H
	inc	esi
; Line 380
	xor	edi, edi
	npad	9
$LL15@md5crypt:
; Line 381
	movzx	ecx, BYTE PTR _buf_perm$1[esp+edi+114]
; Line 386
	lea	esi, DWORD PTR [esi+4]
	movzx	edx, BYTE PTR _buf_perm$1[esp+edi+113]
	mov	eax, ecx
	and	eax, 63					; 0000003fH
	shr	ecx, 6
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [esi-4], al
	mov	eax, edx
	and	eax, 15					; 0000000fH
	shr	edx, 4
	shl	eax, 2
	or	ecx, eax
	movzx	eax, BYTE PTR _cov_2char[ecx]
	movzx	ecx, BYTE PTR _buf_perm$1[esp+edi+112]
	add	edi, 3
	mov	BYTE PTR [esi-3], al
	mov	eax, ecx
	and	eax, 3
	shr	ecx, 2
	shl	eax, 4
	or	eax, edx
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [esi-2], al
	movzx	eax, BYTE PTR _cov_2char[ecx]
	mov	BYTE PTR [esi-1], al
	cmp	edi, 15					; 0000000fH
	jb	SHORT $LL15@md5crypt
; Line 388
	je	SHORT $LN25@md5crypt
	push	388					; 00000184H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BA@NMDEMPIE@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA5?$AA?$AA@
	call	ebx
	add	esp, 12					; 0000000cH
$LN25@md5crypt:
; Line 389
	movzx	ecx, BYTE PTR _buf_perm$1[esp+edi+112]
	mov	eax, ecx
	and	eax, 63					; 0000003fH
; Line 390
	shr	ecx, 6
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [esi], al
	movzx	eax, BYTE PTR _cov_2char[ecx]
; Line 392
	mov	ecx, OFFSET ?out_buf@?1??md5crypt@@9@9
	mov	BYTE PTR [esi+1], al
	mov	BYTE PTR [esi+2], 0
	pop	esi
	lea	edx, DWORD PTR [ecx+1]
$LL54@md5crypt:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL54@md5crypt
	sub	ecx, edx
	cmp	ecx, 41					; 00000029H
	jb	SHORT $LN26@md5crypt
	push	392					; 00000188H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1EE@BINEFKHB@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAo?$AAu?$AAt?$AA_?$AAb?$AAu?$AAf@
	call	ebx
	add	esp, 12					; 0000000cH
$LN26@md5crypt:
; Line 394
	lea	eax, DWORD PTR _md$[esp+108]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 397
	mov	ecx, DWORD PTR __$ArrayPad$[esp+112]
	add	esp, 4
	mov	eax, OFFSET ?out_buf@?1??md5crypt@@9@9
	pop	edi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 96					; 00000060H
	ret	0
_md5crypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _passwd_main
_TEXT	SEGMENT
_opt_done$1$ = -592					; size = 4
_useapr1$1$ = -588					; size = 4
_use1$1$ = -584						; size = 4
_usecrypt$1$ = -580					; size = 4
_pw_maxlen$1$ = -576					; size = 4
_passwd$2$ = -572					; size = 4
_out$1$ = -568						; size = 4
_infile$1$ = -564					; size = 4
_salt$ = -560						; size = 4
_passed_salt$1$ = -556					; size = 4
_in_stdin$1$ = -552					; size = 4
_reverse$1$ = -548					; size = 4
_table$1$ = -544					; size = 4
_quiet$1$ = -540					; size = 4
_salt_malloc$ = -536					; size = 4
_passwd_malloc$1$ = -532				; size = 4
_in_noverify$1$ = -528					; size = 4
_passwd_malloc_size$1$ = -524				; size = 4
_in$1$ = -520						; size = 4
_trash$1 = -516						; size = 512
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_passwd_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\passwd.c
; Line 61
	mov	eax, 592				; 00000250H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+592], eax
; Line 65
	push	ebx
	push	ebp
	push	esi
; Line 78
	push	edi
; Line 65
	xor	eax, eax
	mov	DWORD PTR _infile$1$[esp+608], 0
; Line 78
	mov	esi, DWORD PTR __imp____acrt_iob_func
	xor	ebx, ebx
	mov	DWORD PTR _in_noverify$1$[esp+608], eax
	xor	ebp, ebp
	mov	DWORD PTR _salt$[esp+608], eax
	mov	DWORD PTR _passwd$2$[esp+608], eax
	mov	DWORD PTR _salt_malloc$[esp+608], eax
	mov	DWORD PTR _passwd_malloc$1$[esp+608], eax
	mov	DWORD PTR _passwd_malloc_size$1$[esp+608], eax
	mov	DWORD PTR _in$1$[esp+608], eax
	mov	DWORD PTR _out$1$[esp+608], eax
	mov	DWORD PTR _passed_salt$1$[esp+608], eax
	mov	DWORD PTR _quiet$1$[esp+608], eax
	mov	DWORD PTR _table$1$[esp+608], eax
	mov	DWORD PTR _reverse$1$[esp+608], eax
	mov	DWORD PTR _usecrypt$1$[esp+608], eax
	mov	DWORD PTR _use1$1$[esp+608], eax
	mov	DWORD PTR _useapr1$1$[esp+608], eax
	mov	DWORD PTR _pw_maxlen$1$[esp+608], eax
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _in_stdin$1$[esp+608], 0
	mov	edi, DWORD PTR _argv$[esp+604]
	test	eax, eax
	jne	SHORT $LN14@passwd_mai
; Line 79
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN14@passwd_mai
; Line 80
	push	2
	call	esi
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN14@passwd_mai:
; Line 82
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN185@passwd_mai
; Line 84
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _out$1$[esp+608], eax
; Line 85
	test	eax, eax
	je	$LN185@passwd_mai
; Line 87
	push	1
	call	esi
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _out$1$[esp+624]
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
; Line 95
	xor	eax, eax
$LN187@passwd_mai:
	mov	DWORD PTR _opt_done$1$[esp+608], eax
$LL2@passwd_mai:
; Line 97
	test	eax, eax
	jne	$LN174@passwd_mai
	mov	esi, DWORD PTR [edi+4]
	add	edi, 4
	test	esi, esi
	je	$LN174@passwd_mai
; Line 98
	mov	ecx, OFFSET ??_C@_06MIBOINDC@?9crypt?$AA@
	mov	eax, esi
$LL121@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN122@passwd_mai
	test	dl, dl
	je	SHORT $LN123@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN122@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL121@passwd_mai
$LN123@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN124@passwd_mai
$LN122@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN124@passwd_mai:
	test	eax, eax
	jne	SHORT $LN17@passwd_mai
; Line 99
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	DWORD PTR _usecrypt$1$[esp+608], 1
	jmp	SHORT $LL2@passwd_mai
$LN17@passwd_mai:
; Line 100
	mov	ecx, OFFSET ??_C@_02PGHGPEOM@?91?$AA@
	mov	eax, esi
	npad	2
$LL125@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN126@passwd_mai
	test	dl, dl
	je	SHORT $LN127@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN126@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL125@passwd_mai
$LN127@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN128@passwd_mai
$LN126@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN128@passwd_mai:
	test	eax, eax
	jne	SHORT $LN19@passwd_mai
; Line 101
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	DWORD PTR _use1$1$[esp+608], 1
	jmp	$LL2@passwd_mai
$LN19@passwd_mai:
; Line 102
	mov	ecx, OFFSET ??_C@_05KLEKANFJ@?9apr1?$AA@
	mov	eax, esi
$LL129@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN130@passwd_mai
	test	dl, dl
	je	SHORT $LN131@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN130@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL129@passwd_mai
$LN131@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN132@passwd_mai
$LN130@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN132@passwd_mai:
	test	eax, eax
	jne	SHORT $LN21@passwd_mai
; Line 103
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	DWORD PTR _useapr1$1$[esp+608], 1
	jmp	$LL2@passwd_mai
$LN21@passwd_mai:
; Line 104
	mov	ecx, OFFSET ??_C@_05MCHJMMHL@?9salt?$AA@
	mov	eax, esi
$LL133@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN134@passwd_mai
	test	dl, dl
	je	SHORT $LN135@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN134@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL133@passwd_mai
$LN135@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN136@passwd_mai
$LN134@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN136@passwd_mai:
	test	eax, eax
	jne	SHORT $LN23@passwd_mai
; Line 105
	cmp	DWORD PTR [edi+4], eax
	je	$LN25@passwd_mai
	cmp	DWORD PTR _salt$[esp+608], eax
	jne	$LN25@passwd_mai
; Line 107
	mov	esi, DWORD PTR [edi+4]
	add	edi, 4
; Line 110
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	DWORD PTR _passed_salt$1$[esp+608], 1
	mov	DWORD PTR _salt$[esp+608], esi
	jmp	$LL2@passwd_mai
$LN23@passwd_mai:
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, esi
$LL137@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN138@passwd_mai
	test	dl, dl
	je	SHORT $LN139@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN138@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL137@passwd_mai
$LN139@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN140@passwd_mai
$LN138@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN140@passwd_mai:
	test	eax, eax
	jne	SHORT $LN27@passwd_mai
; Line 111
	cmp	DWORD PTR [edi+4], eax
	je	$LN25@passwd_mai
	test	ebp, ebp
	jne	$LN25@passwd_mai
; Line 113
	mov	esi, DWORD PTR [edi+4]
	lea	ebp, DWORD PTR [eax+1]
; Line 116
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	add	edi, 4
	mov	DWORD PTR _infile$1$[esp+608], esi
	jmp	$LL2@passwd_mai
$LN27@passwd_mai:
	mov	ecx, OFFSET ??_C@_06EFCBJHGP@?9stdin?$AA@
	mov	eax, esi
$LL141@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN142@passwd_mai
	test	dl, dl
	je	SHORT $LN143@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN142@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL141@passwd_mai
$LN143@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN144@passwd_mai
$LN142@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN144@passwd_mai:
	test	eax, eax
	jne	SHORT $LN31@passwd_mai
; Line 117
	test	ebp, ebp
	jne	$LN25@passwd_mai
; Line 122
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	ebp, 1
	mov	DWORD PTR _in_stdin$1$[esp+608], ebp
	jmp	$LL2@passwd_mai
$LN31@passwd_mai:
	mov	ecx, OFFSET ??_C@_09JLKGPCDL@?9noverify?$AA@
	mov	eax, esi
$LL145@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN146@passwd_mai
	test	dl, dl
	je	SHORT $LN147@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN146@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL145@passwd_mai
$LN147@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN148@passwd_mai
$LN146@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN148@passwd_mai:
	test	eax, eax
	jne	SHORT $LN35@passwd_mai
; Line 123
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	DWORD PTR _in_noverify$1$[esp+608], 1
	jmp	$LL2@passwd_mai
$LN35@passwd_mai:
; Line 124
	mov	ecx, OFFSET ??_C@_06HONEMELG@?9quiet?$AA@
	mov	eax, esi
$LL149@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN150@passwd_mai
	test	dl, dl
	je	SHORT $LN151@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN150@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL149@passwd_mai
$LN151@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN152@passwd_mai
$LN150@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN152@passwd_mai:
	test	eax, eax
	jne	SHORT $LN37@passwd_mai
; Line 125
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	DWORD PTR _quiet$1$[esp+608], 1
	jmp	$LL2@passwd_mai
$LN37@passwd_mai:
; Line 126
	mov	ecx, OFFSET ??_C@_06DAHAPLNJ@?9table?$AA@
	mov	eax, esi
$LL153@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN154@passwd_mai
	test	dl, dl
	je	SHORT $LN155@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN154@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL153@passwd_mai
$LN155@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN156@passwd_mai
$LN154@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN156@passwd_mai:
	test	eax, eax
	jne	SHORT $LN39@passwd_mai
; Line 127
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	DWORD PTR _table$1$[esp+608], 1
	jmp	$LL2@passwd_mai
$LN39@passwd_mai:
; Line 128
	mov	ecx, OFFSET ??_C@_08FOBBEMBH@?9reverse?$AA@
	mov	eax, esi
$LL157@passwd_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN158@passwd_mai
	test	dl, dl
	je	SHORT $LN159@passwd_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN158@passwd_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL157@passwd_mai
$LN159@passwd_mai:
	xor	eax, eax
	jmp	SHORT $LN160@passwd_mai
$LN158@passwd_mai:
	sbb	eax, eax
	or	eax, 1
$LN160@passwd_mai:
	test	eax, eax
	jne	SHORT $LN41@passwd_mai
; Line 129
	mov	eax, DWORD PTR _opt_done$1$[esp+608]
	mov	DWORD PTR _reverse$1$[esp+608], 1
	jmp	$LL2@passwd_mai
$LN41@passwd_mai:
; Line 130
	cmp	BYTE PTR [esi], 45			; 0000002dH
	je	SHORT $LN25@passwd_mai
; Line 132
	test	ebp, ebp
	jne	SHORT $LN25@passwd_mai
; Line 135
	mov	ebp, 1
; Line 136
	mov	ebx, edi
; Line 137
	mov	eax, ebp
	jmp	$LN187@passwd_mai
$LN25@passwd_mai:
; Line 109
	mov	ecx, 1
; Line 110
	jmp	SHORT $LN3@passwd_mai
$LN174@passwd_mai:
	xor	ecx, ecx
$LN3@passwd_mai:
; Line 142
	mov	ebp, DWORD PTR _usecrypt$1$[esp+608]
	mov	esi, DWORD PTR _use1$1$[esp+608]
	mov	eax, DWORD PTR _useapr1$1$[esp+608]
	test	ebp, ebp
	jne	SHORT $LN47@passwd_mai
	test	esi, esi
	jne	SHORT $LN47@passwd_mai
	test	eax, eax
	mov	edx, 1
	cmove	ebp, edx
	mov	DWORD PTR _usecrypt$1$[esp+608], ebp
$LN47@passwd_mai:
; Line 144
	add	eax, esi
	add	eax, ebp
	cmp	eax, 1
	jg	$LN109@passwd_mai
; Line 157
	test	ecx, ecx
	jne	$LN109@passwd_mai
; Line 182
	mov	esi, DWORD PTR __imp___wassert
	mov	edi, DWORD PTR _in_stdin$1$[esp+608]
	cmp	DWORD PTR _infile$1$[esp+608], ecx
	jne	SHORT $LN51@passwd_mai
	test	edi, edi
	je	$LN172@passwd_mai
$LN51@passwd_mai:
; Line 183
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebp, eax
	add	esp, 4
	mov	DWORD PTR _in$1$[esp+608], ebp
; Line 184
	test	ebp, ebp
	je	$LN185@passwd_mai
; Line 186
	mov	eax, DWORD PTR _infile$1$[esp+608]
	test	eax, eax
	je	SHORT $LN53@passwd_mai
; Line 187
	test	edi, edi
	je	SHORT $LN78@passwd_mai
	push	187					; 000000bbH
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BM@MDBCBJFE@?$AAi?$AAn?$AA_?$AAs?$AAt?$AAd?$AAi?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	esi
	mov	eax, DWORD PTR _infile$1$[esp+620]
	add	esp, 12					; 0000000cH
$LN78@passwd_mai:
; Line 188
	push	eax
	push	3
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN185@passwd_mai
; Line 190
	jmp	SHORT $LN54@passwd_mai
$LN53@passwd_mai:
; Line 191
	test	edi, edi
	jne	SHORT $LN79@passwd_mai
	push	191					; 000000bfH
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BC@ODKFOCEN@?$AAi?$AAn?$AA_?$AAs?$AAt?$AAd?$AAi?$AAn?$AA?$AA@
	call	esi
	add	esp, 12					; 0000000cH
$LN79@passwd_mai:
; Line 192
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	0
	push	106					; 0000006aH
	push	ebp
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
	jmp	SHORT $LN54@passwd_mai
$LN172@passwd_mai:
	xor	ebp, ebp
$LN54@passwd_mai:
; Line 196
	mov	edi, DWORD PTR _usecrypt$1$[esp+608]
	test	edi, edi
	je	SHORT $LN56@passwd_mai
; Line 197
	mov	eax, 8
	mov	DWORD PTR _pw_maxlen$1$[esp+608], eax
	jmp	SHORT $LN58@passwd_mai
$LN56@passwd_mai:
; Line 198
	cmp	DWORD PTR _use1$1$[esp+608], 0
	jne	SHORT $LN59@passwd_mai
	cmp	DWORD PTR _useapr1$1$[esp+608], 0
	je	SHORT $LN179@passwd_mai
$LN59@passwd_mai:
; Line 199
	mov	eax, 256				; 00000100H
	mov	DWORD PTR _pw_maxlen$1$[esp+608], eax
	jmp	SHORT $LN58@passwd_mai
$LN179@passwd_mai:
	xor	eax, eax
$LN58@passwd_mai:
; Line 202
	test	ebx, ebx
	jne	SHORT $LN176@passwd_mai
; Line 209
	push	209					; 000000d1H
	add	eax, 2
	push	OFFSET ??_C@_0BA@JLHAGMJN@?4?2apps?2passwd?4c?$AA@
	push	eax
	mov	DWORD PTR _passwd_malloc_size$1$[esp+620], eax
	call	_CRYPTO_malloc
	mov	ecx, eax
	mov	DWORD PTR _passwd$2$[esp+620], eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _passwd_malloc$1$[esp+608], ecx
; Line 210
	test	ecx, ecx
	je	$LN185@passwd_mai
	jmp	SHORT $LN61@passwd_mai
$LN176@passwd_mai:
	xor	eax, eax
	xor	ecx, ecx
$LN61@passwd_mai:
; Line 214
	test	ebp, ebp
	jne	$LN65@passwd_mai
	test	ebx, ebx
	jne	SHORT $LN82@passwd_mai
; Line 218
	mov	ebx, OFFSET ?passwds_static@?BA@??passwd_main@@9@9
; Line 222
	cmp	DWORD PTR _passed_salt$1$[esp+608], ebp
	jne	SHORT $LN80@passwd_mai
	mov	eax, DWORD PTR _in_noverify$1$[esp+608]
	test	eax, eax
	jne	SHORT $LN80@passwd_mai
	lea	eax, DWORD PTR [ebp+1]
	jmp	SHORT $LN81@passwd_mai
$LN80@passwd_mai:
	xor	eax, eax
$LN81@passwd_mai:
	push	eax
	push	OFFSET ??_C@_0L@GCFBFBCP@Password?3?5?$AA@
	push	DWORD PTR _passwd_malloc_size$1$[esp+616]
	push	ecx
	call	_EVP_read_pw_string
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN185@passwd_mai
; Line 224
	mov	eax, DWORD PTR _passwd_malloc$1$[esp+608]
	mov	DWORD PTR ?passwds_static@?BA@??passwd_main@@9@9, eax
$LN82@passwd_mai:
; Line 229
	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN169@passwd_mai
	push	229					; 000000e5H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1CC@LJLKJJEK@?$AA?$CK?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
	call	esi
	add	esp, 12					; 0000000cH
$LN169@passwd_mai:
	mov	esi, DWORD PTR _use1$1$[esp+608]
	mov	ebp, DWORD PTR _out$1$[esp+608]
$LL6@passwd_mai:
; Line 233
	push	DWORD PTR _useapr1$1$[esp+608]
	mov	eax, DWORD PTR [ebx]
	lea	ebx, DWORD PTR [ebx+4]
	push	esi
	push	edi
	push	DWORD PTR _pw_maxlen$1$[esp+620]
	push	DWORD PTR _reverse$1$[esp+624]
	push	DWORD PTR _table$1$[esp+628]
	push	DWORD PTR _quiet$1$[esp+632]
	push	ebp
	push	eax
	lea	eax, DWORD PTR _salt_malloc$[esp+644]
	push	eax
	lea	eax, DWORD PTR _salt$[esp+648]
	push	eax
	push	DWORD PTR _passed_salt$1$[esp+652]
	call	_do_passwd
	add	esp, 48					; 00000030H
	test	eax, eax
	je	$LN185@passwd_mai
; Line 238
	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LL6@passwd_mai
; Line 268
	xor	ebx, ebx
	jmp	$err$189
$LN65@passwd_mai:
; Line 244
	test	eax, eax
	jne	SHORT $LN112@passwd_mai
	push	244					; 000000f4H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BO@PLPJFNJJ@?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
	call	esi
	mov	eax, DWORD PTR _passwd$2$[esp+620]
	add	esp, 12					; 0000000cH
$LN112@passwd_mai:
	mov	ebx, DWORD PTR _pw_maxlen$1$[esp+608]
	mov	edi, DWORD PTR __imp__strchr
	inc	ebx
$LL9@passwd_mai:
; Line 246
	push	ebx
	push	eax
	push	ebp
	call	_BIO_gets
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 247
	test	esi, esi
	jle	$LN8@passwd_mai
; Line 248
	push	10					; 0000000aH
	push	DWORD PTR _passwd$2$[esp+612]
	call	edi
	add	esp, 8
; Line 249
	test	eax, eax
	je	SHORT $LL12@passwd_mai
; Line 250
	mov	BYTE PTR [eax], 0
	jmp	SHORT $LN11@passwd_mai
	npad	3
$LL12@passwd_mai:
; Line 255
	push	512					; 00000200H
	lea	eax, DWORD PTR _trash$1[esp+612]
	push	eax
	push	ebp
	call	_BIO_gets
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 256
	test	esi, esi
	jle	SHORT $LN11@passwd_mai
	lea	eax, DWORD PTR _trash$1[esp+608]
	push	10					; 0000000aH
	push	eax
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LL12@passwd_mai
$LN11@passwd_mai:
; Line 259
	push	DWORD PTR _useapr1$1$[esp+608]
	lea	eax, DWORD PTR _salt_malloc$[esp+612]
	push	DWORD PTR _use1$1$[esp+612]
	push	DWORD PTR _usecrypt$1$[esp+616]
	push	DWORD PTR _pw_maxlen$1$[esp+620]
	push	DWORD PTR _reverse$1$[esp+624]
	push	DWORD PTR _table$1$[esp+628]
	push	DWORD PTR _quiet$1$[esp+632]
	push	DWORD PTR _out$1$[esp+636]
	push	DWORD PTR _passwd$2$[esp+640]
	push	eax
	lea	eax, DWORD PTR _salt$[esp+648]
	push	eax
	push	DWORD PTR _passed_salt$1$[esp+652]
	call	_do_passwd
	add	esp, 48					; 00000030H
	test	eax, eax
	je	$LN185@passwd_mai
; Line 266
	mov	eax, DWORD PTR _passwd$2$[esp+608]
	test	esi, esi
	jg	$LL9@passwd_mai
$LN8@passwd_mai:
; Line 268
	xor	ebx, ebx
	jmp	$err$189
$LN109@passwd_mai:
; Line 158
	push	OFFSET ??_C@_0CF@FNMPKEEM@Usage?3?5passwd?5?$FLoptions?$FN?5?$FLpasswor@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 159
	push	OFFSET ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 161
	push	OFFSET ??_C@_0DP@JAFNNPCN@?9crypt?5?5?5?5?5?5?5?5?5?5?5?5?5standard?5Unix@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 165
	push	OFFSET ??_C@_0DB@OOOLLDOG@?91?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5MD5?9based?5pas@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 167
	push	OFFSET ??_C@_0EB@FMCAAHIK@?9apr1?5?5?5?5?5?5?5?5?5?5?5?5?5?5MD5?9based?5pas@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 170
	push	OFFSET ??_C@_0CG@ILKJAIBC@?9salt?5string?5?5?5?5?5?5?5use?5provided?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 171
	push	OFFSET ??_C@_0CN@GBLJIPB@?9in?5file?5?5?5?5?5?5?5?5?5?5?5read?5password@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 172
	push	OFFSET ??_C@_0CO@KGOAKHJE@?9stdin?5?5?5?5?5?5?5?5?5?5?5?5?5read?5password@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 173
	push	OFFSET ??_C@_0EF@PKHCBPCM@?9noverify?5?5?5?5?5?5?5?5?5?5never?5verify?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 175
	push	OFFSET ??_C@_0CA@IDLNGCID@?9quiet?5?5?5?5?5?5?5?5?5?5?5?5?5no?5warnings?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 176
	push	OFFSET ??_C@_0CL@LCIDPMOH@?9table?5?5?5?5?5?5?5?5?5?5?5?5?5format?5output@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 177
	push	OFFSET ??_C@_0CJ@MJKKPGML@?9reverse?5?5?5?5?5?5?5?5?5?5?5switch?5table?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 32					; 00000020H
$LN185@passwd_mai:
	mov	ebx, 1
$err$189:
; Line 271
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 272
	mov	eax, DWORD PTR _salt_malloc$[esp+612]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN73@passwd_mai
; Line 273
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN73@passwd_mai:
; Line 274
	mov	eax, DWORD PTR _passwd_malloc$1$[esp+608]
	test	eax, eax
	je	SHORT $LN74@passwd_mai
; Line 275
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN74@passwd_mai:
; Line 276
	mov	eax, DWORD PTR _in$1$[esp+608]
	test	eax, eax
	je	SHORT $LN75@passwd_mai
; Line 277
	push	eax
	call	_BIO_free
	add	esp, 4
$LN75@passwd_mai:
; Line 278
	mov	eax, DWORD PTR _out$1$[esp+608]
	test	eax, eax
	je	SHORT $LN167@passwd_mai
; Line 279
	push	eax
	call	_BIO_free_all
	add	esp, 4
$LN167@passwd_mai:
; Line 282
	mov	ecx, DWORD PTR __$ArrayPad$[esp+608]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 592				; 00000250H
	ret	0
_passwd_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_passwd
_TEXT	SEGMENT
_passed_salt$ = 8					; size = 4
tv567 = 12						; size = 4
_salt_p$ = 12						; size = 4
_salt_malloc_p$ = 16					; size = 4
_passwd$ = 20						; size = 4
_out$ = 24						; size = 4
_quiet$ = 28						; size = 4
_table$ = 32						; size = 4
_reverse$ = 36						; size = 4
_pw_maxlen$ = 40					; size = 4
_usecrypt$ = 44						; size = 4
_use1$ = 48						; size = 4
_useapr1$ = 52						; size = 4
_do_passwd PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\passwd.c
; Line 404
	push	ebx
	push	ebp
; Line 407
	mov	ebp, DWORD PTR __imp___wassert
	xor	ebx, ebx
	push	esi
	mov	esi, DWORD PTR _salt_p$[esp+8]
	push	edi
	test	esi, esi
	jne	SHORT $LN25@do_passwd
	push	407					; 00000197H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BO@DGAPLGKL@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
	call	ebp
	add	esp, 12					; 0000000cH
$LN25@do_passwd:
; Line 408
	mov	edi, DWORD PTR _salt_malloc_p$[esp+12]
	test	edi, edi
	jne	SHORT $LN26@do_passwd
	push	408					; 00000198H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1CM@IHPAAGIB@?$AAs?$AAa?$AAl?$AAt?$AA_?$AAm?$AAa?$AAl?$AAl?$AAo?$AAc?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
	call	ebp
	add	esp, 12					; 0000000cH
$LN26@do_passwd:
; Line 411
	cmp	DWORD PTR _passed_salt$[esp+12], ebx
	jne	$LN10@do_passwd
; Line 413
	cmp	DWORD PTR _usecrypt$[esp+12], ebx
	je	SHORT $LN6@do_passwd
; Line 414
	cmp	DWORD PTR [edi], ebx
	jne	SHORT $LN8@do_passwd
; Line 415
	push	415					; 0000019fH
	push	OFFSET ??_C@_0BA@JLHAGMJN@?4?2apps?2passwd?4c?$AA@
	push	3
	call	_CRYPTO_malloc
	mov	DWORD PTR [edi], eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
; Line 416
	cmp	DWORD PTR [edi], ebx
	je	SHORT $err$46
$LN8@do_passwd:
; Line 419
	push	2
	push	DWORD PTR [esi]
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	js	SHORT $err$46
; Line 421
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx], al
; Line 422
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx+1]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx+1], al
; Line 423
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+2], bl
$LN6@do_passwd:
; Line 432
	cmp	DWORD PTR _use1$[esp+12], ebx
	jne	SHORT $LN11@do_passwd
	cmp	DWORD PTR _useapr1$[esp+12], ebx
	je	$LN10@do_passwd
$LN11@do_passwd:
; Line 435
	cmp	DWORD PTR [edi], ebx
	jne	SHORT $LN13@do_passwd
; Line 436
	push	436					; 000001b4H
	push	OFFSET ??_C@_0BA@JLHAGMJN@?4?2apps?2passwd?4c?$AA@
	push	9
	call	_CRYPTO_malloc
	mov	DWORD PTR [edi], eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
; Line 437
	cmp	DWORD PTR [edi], ebx
	je	SHORT $err$46
$LN13@do_passwd:
; Line 440
	push	8
	push	DWORD PTR [esi]
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN14@do_passwd
$err$46:
	pop	edi
	pop	esi
	pop	ebp
; Line 485
	xor	eax, eax
	pop	ebx
; Line 486
	ret	0
$LN14@do_passwd:
; Line 444
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx+1]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx+1], al
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx+2]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx+2], al
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx+3]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx+3], al
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx+4]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx+4], al
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx+5]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx+5], al
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx+6]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx+6], al
	mov	ecx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ecx+7]
	and	eax, 63					; 0000003fH
	movzx	eax, BYTE PTR _cov_2char[eax]
	mov	BYTE PTR [ecx+7], al
; Line 445
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+8], bl
$LN10@do_passwd:
; Line 450
	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN27@do_passwd
	push	450					; 000001c2H
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1CA@MOGCDJCA@?$AA?$CK?$AAs?$AAa?$AAl?$AAt?$AA_?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
	call	ebp
	add	esp, 12					; 0000000cH
$LN27@do_passwd:
; Line 453
	mov	edi, DWORD PTR _passwd$[esp+12]
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL42@do_passwd:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL42@do_passwd
	sub	ecx, edx
	mov	edx, DWORD PTR _pw_maxlen$[esp+12]
	cmp	ecx, edx
	jbe	SHORT $LN15@do_passwd
; Line 454
	cmp	DWORD PTR _quiet$[esp+12], ebx
	jne	SHORT $LN16@do_passwd
; Line 458
	push	edx
	push	OFFSET ??_C@_0CP@GAKOHLEH@Warning?3?5truncating?5password?5to?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	edx, DWORD PTR _pw_maxlen$[esp+24]
	add	esp, 12					; 0000000cH
$LN16@do_passwd:
; Line 461
	mov	BYTE PTR [edi+edx], bl
$LN15@do_passwd:
; Line 463
	mov	ecx, edi
	lea	eax, DWORD PTR [ecx+1]
	mov	DWORD PTR tv567[esp+12], eax
	npad	5
$LL43@do_passwd:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL43@do_passwd
	sub	ecx, DWORD PTR tv567[esp+12]
	cmp	ecx, edx
	jbe	SHORT $LN28@do_passwd
	push	463					; 000001cfH
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1DI@EFHDOIAC@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAp?$AAw?$AA_?$AAm?$AAa?$AAx?$AAl?$AAe?$AAn?$AA?$AA@
	call	ebp
	add	esp, 12					; 0000000cH
$LN28@do_passwd:
; Line 467
	cmp	DWORD PTR _usecrypt$[esp+12], ebx
	je	SHORT $LN17@do_passwd
; Line 468
	push	DWORD PTR [esi]
	push	edi
	call	_DES_crypt
	add	esp, 8
	mov	ebx, eax
$LN17@do_passwd:
; Line 471
	mov	ecx, DWORD PTR _use1$[esp+12]
	test	ecx, ecx
	jne	SHORT $LN19@do_passwd
	cmp	DWORD PTR _useapr1$[esp+12], ecx
	je	SHORT $LN18@do_passwd
$LN19@do_passwd:
; Line 472
	push	DWORD PTR [esi]
	test	ecx, ecx
	mov	edx, OFFSET ??_C@_04GHJIENAP@apr1?$AA@
	mov	eax, OFFSET ??_C@_01HIHLOKLC@1?$AA@
	cmove	eax, edx
	push	eax
	push	edi
	call	_md5crypt
	add	esp, 12					; 0000000cH
	mov	ebx, eax
$LN18@do_passwd:
; Line 474
	test	ebx, ebx
	jne	SHORT $LN29@do_passwd
	push	474					; 000001daH
	push	OFFSET ??_C@_1CA@NAEBMDHG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAp?$AAa?$AAs?$AAs?$AAw?$AAd?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BK@KDHKPAEJ@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
	call	ebp
	add	esp, 12					; 0000000cH
$LN29@do_passwd:
; Line 476
	cmp	DWORD PTR _table$[esp+12], 0
	je	SHORT $LN22@do_passwd
	cmp	DWORD PTR _reverse$[esp+12], 0
	jne	SHORT $LN20@do_passwd
; Line 477
	push	ebx
	push	edi
	jmp	SHORT $LN44@do_passwd
$LN20@do_passwd:
; Line 479
	push	edi
	push	ebx
$LN44@do_passwd:
	push	OFFSET ??_C@_06EEAEEKCL@?$CFs?7?$CFs?6?$AA@
	push	DWORD PTR _out$[esp+24]
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 482
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 486
	ret	0
$LN22@do_passwd:
; Line 481
	push	ebx
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	push	DWORD PTR _out$[esp+20]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 482
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 486
	ret	0
_do_passwd ENDP
_TEXT	ENDS
END

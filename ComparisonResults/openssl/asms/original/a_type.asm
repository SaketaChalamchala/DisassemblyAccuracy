; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_type.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_TYPE_get
PUBLIC	_ASN1_TYPE_set
PUBLIC	_ASN1_TYPE_set1
PUBLIC	_ASN1_TYPE_cmp
EXTRN	_ASN1_STRING_dup:PROC
EXTRN	_ASN1_STRING_cmp:PROC
EXTRN	_ASN1_primitive_free:PROC
EXTRN	_OBJ_dup:PROC
EXTRN	_OBJ_cmp:PROC
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_TYPE_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_ASN1_TYPE_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_type.c
; Line 115
	mov	ecx, DWORD PTR _a$[esp-4]
	test	ecx, ecx
	je	SHORT $LN5@ASN1_TYPE_
	mov	edx, DWORD PTR _b$[esp-4]
	test	edx, edx
	je	SHORT $LN5@ASN1_TYPE_
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN5@ASN1_TYPE_
; Line 118
	sub	eax, 1
	je	SHORT $LN7@ASN1_TYPE_
	sub	eax, 4
	je	SHORT $LN8@ASN1_TYPE_
; Line 149
	push	DWORD PTR [edx+4]
	push	DWORD PTR [ecx+4]
	sub	eax, 1
	je	SHORT $LN6@ASN1_TYPE_
	call	_ASN1_STRING_cmp
	add	esp, 8
; Line 155
	ret	0
$LN6@ASN1_TYPE_:
; Line 120
	call	_OBJ_cmp
	add	esp, 8
; Line 155
	ret	0
$LN8@ASN1_TYPE_:
; Line 126
	xor	eax, eax
; Line 155
	ret	0
$LN7@ASN1_TYPE_:
; Line 123
	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [edx+4]
; Line 155
	ret	0
$LN5@ASN1_TYPE_:
; Line 116
	or	eax, -1
; Line 155
	ret	0
_ASN1_TYPE_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_TYPE_set1
_TEXT	SEGMENT
_a$ = 8							; size = 4
_type$ = 12						; size = 4
_a$ = 16						; size = 4
_value$ = 16						; size = 4
_ASN1_TYPE_set1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_type.c
; Line 86
	push	esi
; Line 87
	mov	esi, DWORD PTR _value$[esp]
	push	edi
	mov	edi, DWORD PTR _type$[esp+4]
	test	esi, esi
	je	SHORT $LN4@ASN1_TYPE_
	cmp	edi, 1
	je	SHORT $LN4@ASN1_TYPE_
; Line 92
	push	esi
	cmp	edi, 6
	jne	SHORT $LN5@ASN1_TYPE_
	call	_OBJ_dup
	add	esp, 4
; Line 93
	test	eax, eax
	jne	SHORT $LN7@ASN1_TYPE_
$LN15@ASN1_TYPE_:
	pop	edi
; Line 94
	xor	eax, eax
	pop	esi
; Line 104
	ret	0
$LN7@ASN1_TYPE_:
; Line 95
	push	eax
	push	6
	push	DWORD PTR _a$[esp+12]
	call	_ASN1_TYPE_set
	add	esp, 12					; 0000000cH
; Line 103
	mov	eax, 1
	pop	edi
	pop	esi
; Line 104
	ret	0
$LN5@ASN1_TYPE_:
; Line 98
	call	_ASN1_STRING_dup
	add	esp, 4
; Line 99
	test	eax, eax
	je	SHORT $LN15@ASN1_TYPE_
; Line 101
	push	eax
	push	edi
	push	DWORD PTR _a$[esp+12]
	call	_ASN1_TYPE_set
	add	esp, 12					; 0000000cH
; Line 103
	mov	eax, 1
	pop	edi
	pop	esi
; Line 104
	ret	0
$LN4@ASN1_TYPE_:
; Line 89
	mov	eax, DWORD PTR _a$[esp+4]
	mov	DWORD PTR _a$[esp+4], eax
; Line 74
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN11@ASN1_TYPE_
; Line 76
	lea	eax, DWORD PTR _a$[esp+4]
	push	0
	push	eax
	call	_ASN1_primitive_free
	mov	eax, DWORD PTR _a$[esp+12]
	add	esp, 8
$LN11@ASN1_TYPE_:
; Line 78
	mov	DWORD PTR [eax], edi
; Line 80
	mov	eax, DWORD PTR _a$[esp+4]
	cmp	edi, 1
	jne	SHORT $LN12@ASN1_TYPE_
	neg	esi
	sbb	esi, esi
	and	esi, 255				; 000000ffH
$LN12@ASN1_TYPE_:
; Line 82
	mov	DWORD PTR [eax+4], esi
; Line 103
	mov	eax, 1
	pop	edi
	pop	esi
; Line 104
	ret	0
_ASN1_TYPE_set1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_TYPE_set
_TEXT	SEGMENT
_a$ = 8							; size = 4
_type$ = 12						; size = 4
_value$ = 16						; size = 4
_ASN1_TYPE_set PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_type.c
; Line 74
	mov	ecx, DWORD PTR _a$[esp-4]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN2@ASN1_TYPE_
; Line 76
	lea	eax, DWORD PTR _a$[esp-4]
	push	0
	push	eax
	call	_ASN1_primitive_free
	mov	ecx, DWORD PTR _a$[esp+4]
	add	esp, 8
$LN2@ASN1_TYPE_:
; Line 78
	mov	eax, DWORD PTR _type$[esp-4]
; Line 79
	cmp	eax, 1
	mov	DWORD PTR [ecx], eax
; Line 80
	mov	ecx, DWORD PTR _value$[esp-4]
	mov	eax, DWORD PTR _a$[esp-4]
	jne	SHORT $LN3@ASN1_TYPE_
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 255				; 000000ffH
$LN3@ASN1_TYPE_:
; Line 82
	mov	DWORD PTR [eax+4], ecx
; Line 83
	ret	0
_ASN1_TYPE_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_TYPE_get
_TEXT	SEGMENT
_a$ = 8							; size = 4
_ASN1_TYPE_get PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_type.c
; Line 66
	mov	eax, DWORD PTR _a$[esp-4]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN4@ASN1_TYPE_
	cmp	DWORD PTR [eax], 5
	je	SHORT $LN4@ASN1_TYPE_
; Line 69
	xor	eax, eax
; Line 70
	ret	0
$LN4@ASN1_TYPE_:
; Line 67
	mov	eax, DWORD PTR [eax]
; Line 70
	ret	0
_ASN1_TYPE_get ENDP
_TEXT	ENDS
END

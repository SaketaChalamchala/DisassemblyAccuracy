; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ssl3_undef_enc_method
PUBLIC	_SSL_version_str
PUBLIC	??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@ ; `string'
PUBLIC	_ssl_undefined_function
;	COMDAT ??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@
CONST	SEGMENT
??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@ DB 'OpenSSL 1.0'
	DB	'.2h  3 May 2016', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_ssl3_undef_enc_method DD FLAT:_ssl_undefined_function
	DD	FLAT:_ssl_undefined_function
	DD	FLAT:_ssl_undefined_function
	DD	FLAT:_ssl_undefined_function
	DD	FLAT:_ssl_undefined_function
	DD	FLAT:_ssl_undefined_function
	DD	00H
	DD	FLAT:_ssl_undefined_function
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_ssl_undefined_function
	DD	FLAT:_ssl_undefined_function
	ORG $+16
_SSL_version_str DD FLAT:??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@
?scsv@?5??ssl_cipher_list_to_bytes@@9@9 DD 00H		; `ssl_cipher_list_to_bytes'::`6'::scsv
	DD	00H
	DD	030000ffH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?scsv@?6??ssl_cipher_list_to_bytes@@9@9 DD 00H		; `ssl_cipher_list_to_bytes'::`7'::scsv
	DD	00H
	DD	03005600H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
PUBLIC	_SSL_CTX_set_msg_callback
PUBLIC	_SSL_set_msg_callback
PUBLIC	_SSL_CTX_sessions
PUBLIC	_SSL_CTX_set_next_protos_advertised_cb
PUBLIC	_SSL_CTX_set_next_proto_select_cb
PUBLIC	_SSL_get0_next_proto_negotiated
PUBLIC	_SSL_select_next_proto
PUBLIC	_SSL_CTX_set_alpn_protos
PUBLIC	_SSL_set_alpn_protos
PUBLIC	_SSL_CTX_set_alpn_select_cb
PUBLIC	_SSL_get0_alpn_selected
PUBLIC	_SSL_CTX_set_psk_client_callback
PUBLIC	_SSL_set_psk_client_callback
PUBLIC	_SSL_CTX_set_psk_server_callback
PUBLIC	_SSL_set_psk_server_callback
PUBLIC	_SSL_CTX_use_psk_identity_hint
PUBLIC	_SSL_use_psk_identity_hint
PUBLIC	_SSL_get_psk_identity_hint
PUBLIC	_SSL_get_psk_identity
PUBLIC	_SSL_get_servername
PUBLIC	_SSL_get_servername_type
PUBLIC	_SSL_export_keying_material
PUBLIC	_SSL_get_finished
PUBLIC	_SSL_get_peer_finished
PUBLIC	_SSL_CTX_set_cipher_list
PUBLIC	_SSL_CTX_new
PUBLIC	_SSL_CTX_free
PUBLIC	_SSL_CTX_get_cert_store
PUBLIC	_SSL_CTX_set_cert_store
PUBLIC	_SSL_want
PUBLIC	_SSL_clear
PUBLIC	_SSL_get_current_cipher
PUBLIC	_SSL_get_fd
PUBLIC	_SSL_get_rfd
PUBLIC	_SSL_get_wfd
PUBLIC	_SSL_get_cipher_list
PUBLIC	_SSL_get_shared_ciphers
PUBLIC	_SSL_get_read_ahead
PUBLIC	_SSL_pending
PUBLIC	_SSL_set_fd
PUBLIC	_SSL_set_rfd
PUBLIC	_SSL_set_wfd
PUBLIC	_SSL_set_bio
PUBLIC	_SSL_get_rbio
PUBLIC	_SSL_get_wbio
PUBLIC	_SSL_set_cipher_list
PUBLIC	_SSL_set_read_ahead
PUBLIC	_SSL_get_verify_mode
PUBLIC	_SSL_get_verify_depth
PUBLIC	_SSL_get_verify_callback
PUBLIC	_SSL_set_verify
PUBLIC	_SSL_set_verify_depth
PUBLIC	_SSL_set_cert_cb
PUBLIC	_SSL_copy_session_id
PUBLIC	_SSL_CTX_set_generate_session_id
PUBLIC	_SSL_set_generate_session_id
PUBLIC	_SSL_has_matching_session_id
PUBLIC	_SSL_get_peer_certificate
PUBLIC	_SSL_get_peer_cert_chain
PUBLIC	_SSL_CTX_get_verify_mode
PUBLIC	_SSL_CTX_get_verify_depth
PUBLIC	_SSL_CTX_get_verify_callback
PUBLIC	_SSL_CTX_set_verify
PUBLIC	_SSL_CTX_set_verify_depth
PUBLIC	_SSL_CTX_set_cert_verify_callback
PUBLIC	_SSL_CTX_set_cert_cb
PUBLIC	_SSL_CTX_set_default_passwd_cb
PUBLIC	_SSL_CTX_set_default_passwd_cb_userdata
PUBLIC	_SSL_CTX_check_private_key
PUBLIC	_SSL_check_private_key
PUBLIC	_SSL_CTX_set_session_id_context
PUBLIC	_SSL_new
PUBLIC	_SSL_set_session_id_context
PUBLIC	_SSL_CTX_set_purpose
PUBLIC	_SSL_set_purpose
PUBLIC	_SSL_CTX_set_trust
PUBLIC	_SSL_set_trust
PUBLIC	_SSL_CTX_set1_param
PUBLIC	_SSL_set1_param
PUBLIC	_SSL_CTX_get0_param
PUBLIC	_SSL_get0_param
PUBLIC	_SSL_certs_clear
PUBLIC	_SSL_free
PUBLIC	_SSL_accept
PUBLIC	_SSL_connect
PUBLIC	_SSL_read
PUBLIC	_SSL_peek
PUBLIC	_SSL_write
PUBLIC	_SSL_ctrl
PUBLIC	_SSL_callback_ctrl
PUBLIC	_SSL_CTX_ctrl
PUBLIC	_SSL_CTX_callback_ctrl
PUBLIC	_SSL_get_error
PUBLIC	_SSL_get_version
PUBLIC	_SSL_CTX_set_ssl_version
PUBLIC	_SSL_get_ciphers
PUBLIC	_SSL_do_handshake
PUBLIC	_SSL_renegotiate
PUBLIC	_SSL_renegotiate_abbreviated
PUBLIC	_SSL_renegotiate_pending
PUBLIC	_SSL_shutdown
PUBLIC	_SSL_CTX_get_ssl_method
PUBLIC	_SSL_get_ssl_method
PUBLIC	_SSL_set_ssl_method
PUBLIC	_SSL_set_connect_state
PUBLIC	_SSL_set_accept_state
PUBLIC	_SSL_get_default_timeout
PUBLIC	_SSL_dup
PUBLIC	_SSL_get_certificate
PUBLIC	_SSL_get_privatekey
PUBLIC	_SSL_CTX_get0_certificate
PUBLIC	_SSL_CTX_get0_privatekey
PUBLIC	_SSL_CTX_set_quiet_shutdown
PUBLIC	_SSL_CTX_get_quiet_shutdown
PUBLIC	_SSL_set_quiet_shutdown
PUBLIC	_SSL_get_quiet_shutdown
PUBLIC	_SSL_set_shutdown
PUBLIC	_SSL_get_shutdown
PUBLIC	_SSL_version
PUBLIC	_SSL_CTX_set_default_verify_paths
PUBLIC	_SSL_CTX_load_verify_locations
PUBLIC	_SSL_get_SSL_CTX
PUBLIC	_SSL_set_SSL_CTX
PUBLIC	_SSL_set_info_callback
PUBLIC	_SSL_get_info_callback
PUBLIC	_SSL_state
PUBLIC	_SSL_set_state
PUBLIC	_SSL_set_verify_result
PUBLIC	_SSL_get_verify_result
PUBLIC	_SSL_set_ex_data
PUBLIC	_SSL_get_ex_data
PUBLIC	_SSL_get_ex_new_index
PUBLIC	_SSL_CTX_set_ex_data
PUBLIC	_SSL_CTX_get_ex_data
PUBLIC	_SSL_CTX_get_ex_new_index
PUBLIC	_SSL_CTX_set_tmp_rsa_callback
PUBLIC	_SSL_set_tmp_rsa_callback
PUBLIC	_SSL_CTX_set_tmp_dh_callback
PUBLIC	_SSL_set_tmp_dh_callback
PUBLIC	_SSL_CTX_set_tmp_ecdh_callback
PUBLIC	_SSL_set_tmp_ecdh_callback
PUBLIC	_SSL_get_current_compression
PUBLIC	_SSL_get_current_expansion
PUBLIC	_SSL_set_debug
PUBLIC	_SSL_cache_hit
PUBLIC	_SSL_is_server
PUBLIC	_ssl_bad_method
PUBLIC	_ssl_clear_cipher_ctx
PUBLIC	_ssl_cipher_id_cmp
PUBLIC	_OBJ_bsearch_ssl_cipher_id
PUBLIC	_ssl_cipher_ptr_id_cmp
PUBLIC	_ssl_bytes_to_cipher_list
PUBLIC	_ssl_cipher_list_to_bytes
PUBLIC	_ssl_update_cache
PUBLIC	_ssl_undefined_void_function
PUBLIC	_ssl_undefined_const_function
PUBLIC	_ssl_get_server_send_pkey
PUBLIC	_ssl_get_server_cert_serverinfo
PUBLIC	_ssl_get_sign_pkey
PUBLIC	_ssl_set_cert_masks
PUBLIC	_ssl_get_ciphers_by_id
PUBLIC	_ssl_init_wbio_buffer
PUBLIC	_ssl_free_wbio_buffer
PUBLIC	_ssl_ok
PUBLIC	_ssl_check_srvr_ecc_cert_and_alg
PUBLIC	_ssl_replace_hash
PUBLIC	_ssl_clear_hash_ctx
PUBLIC	??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@	; `string'
PUBLIC	??_C@_05NHFKDGAI@SSLv2?$AA@			; `string'
PUBLIC	??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@ ; `string'
PUBLIC	??_C@_0CH@MEMCPFFG@s?9?$DOsid_ctx_length?5?$DM?$DN?5sizeof?5s?9?$DOs@ ; `string'
PUBLIC	??_C@_08OKFBGHCE@ssl2?9md5?$AA@			; `string'
PUBLIC	??_C@_08CBANLEIB@ssl3?9md5?$AA@			; `string'
PUBLIC	??_C@_09KCHAKJIH@ssl3?9sha1?$AA@		; `string'
PUBLIC	??_C@_07KDKGANMO@TLSv1?42?$AA@			; `string'
PUBLIC	??_C@_07IIILFOAN@TLSv1?41?$AA@			; `string'
PUBLIC	??_C@_05LLIBCOJ@TLSv1?$AA@			; `string'
PUBLIC	??_C@_05MOEBAHEJ@SSLv3?$AA@			; `string'
PUBLIC	??_C@_08PILLCKKM@DTLSv0?49?$AA@			; `string'
PUBLIC	??_C@_06JHFCDNFO@DTLSv1?$AA@			; `string'
PUBLIC	??_C@_08KDPDJEAC@DTLSv1?42?$AA@			; `string'
PUBLIC	??_C@_07CIFAGBMG@unknown?$AA@			; `string'
PUBLIC	??_C@_0CM@NMJLCBPB@ssl?9?$DOsid_ctx_length?5?$DM?$DN?5sizeof?$CIss@ ; `string'
EXTRN	__imp___time64:PROC
EXTRN	_BUF_MEM_free:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BUF_memdup:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_set:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_sk_zero:PROC
EXTRN	_sk_dup:PROC
EXTRN	_CRYPTO_get_ex_new_index:PROC
EXTRN	_CRYPTO_new_ex_data:PROC
EXTRN	_CRYPTO_dup_ex_data:PROC
EXTRN	_CRYPTO_free_ex_data:PROC
EXTRN	_CRYPTO_set_ex_data:PROC
EXTRN	_CRYPTO_get_ex_data:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OpenSSLDie:PROC
EXTRN	_COMP_CTX_free:PROC
EXTRN	_BIO_test_flags:PROC
EXTRN	_BIO_method_type:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_int_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_pop:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_find_type:PROC
EXTRN	_BIO_get_retry_reason:PROC
EXTRN	_BIO_s_socket:PROC
EXTRN	_BIO_f_buffer:PROC
EXTRN	_RSA_size:PROC
EXTRN	_DH_size:PROC
EXTRN	_lh_new:PROC
EXTRN	_lh_free:PROC
EXTRN	_lh_retrieve:PROC
EXTRN	_lh_num_items:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_peek_error:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_bsearch_:PROC
EXTRN	_OBJ_find_sigid_algs:PROC
EXTRN	_EVP_MD_CTX_create:PROC
EXTRN	_EVP_MD_CTX_destroy:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_CIPHER_CTX_cleanup:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_bits:PROC
EXTRN	_EVP_PKEY_size:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_X509_STORE_new:PROC
EXTRN	_X509_STORE_free:PROC
EXTRN	_X509_STORE_load_locations:PROC
EXTRN	_X509_STORE_set_default_paths:PROC
EXTRN	_X509_VERIFY_PARAM_new:PROC
EXTRN	_X509_VERIFY_PARAM_free:PROC
EXTRN	_X509_VERIFY_PARAM_inherit:PROC
EXTRN	_X509_VERIFY_PARAM_set1:PROC
EXTRN	_X509_VERIFY_PARAM_set_purpose:PROC
EXTRN	_X509_VERIFY_PARAM_set_trust:PROC
EXTRN	_X509_VERIFY_PARAM_set_depth:PROC
EXTRN	_X509_VERIFY_PARAM_get_depth:PROC
EXTRN	_X509_NAME_dup:PROC
EXTRN	_X509_EXTENSION_free:PROC
EXTRN	_X509_NAME_free:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_X509_check_private_key:PROC
EXTRN	_SSL_CTX_SRP_CTX_init:PROC
EXTRN	_SSL_CTX_SRP_CTX_free:PROC
EXTRN	_SSL_CTX_flush_sessions:PROC
EXTRN	_SSL_SESSION_free:PROC
EXTRN	_SSL_set_session:PROC
EXTRN	_SSL_CTX_add_session:PROC
EXTRN	_SSL_get_session:PROC
EXTRN	_SSL_get_ex_data_X509_STORE_CTX_idx:PROC
EXTRN	_SSL_COMP_get_compression_methods:PROC
EXTRN	_ssl_clear_bad_session:PROC
EXTRN	_ssl_cert_new:PROC
EXTRN	_ssl_cert_dup:PROC
EXTRN	_ssl_cert_clear_certs:PROC
EXTRN	_ssl_cert_free:PROC
EXTRN	_ssl_create_cipher_list:PROC
EXTRN	_ssl_cipher_get_cert_index:PROC
EXTRN	_ssl_get_cipher_by_char:PROC
EXTRN	_ssl_cert_set_cert_cb:PROC
EXTRN	_ssl3_send_alert:PROC
EXTRN	_tls1_set_curves_list:PROC
EXTRN	_tls1_set_sigalgs_list:PROC
EXTRN	_ssl_set_client_disabled:PROC
EXTRN	_X509_check_purpose:PROC
EXTRN	_RAND_bytes:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_OCSP_RESPID_free:PROC
EXTRN	_ENGINE_finish:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0CM@NMJLCBPB@ssl?9?$DOsid_ctx_length?5?$DM?$DN?5sizeof?$CIss@
CONST	SEGMENT
??_C@_0CM@NMJLCBPB@ssl?9?$DOsid_ctx_length?5?$DM?$DN?5sizeof?$CIss@ DB 's'
	DB	'sl->sid_ctx_length <= sizeof(ssl->sid_ctx)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CIFAGBMG@unknown?$AA@
CONST	SEGMENT
??_C@_07CIFAGBMG@unknown?$AA@ DB 'unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KDPDJEAC@DTLSv1?42?$AA@
CONST	SEGMENT
??_C@_08KDPDJEAC@DTLSv1?42?$AA@ DB 'DTLSv1.2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JHFCDNFO@DTLSv1?$AA@
CONST	SEGMENT
??_C@_06JHFCDNFO@DTLSv1?$AA@ DB 'DTLSv1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PILLCKKM@DTLSv0?49?$AA@
CONST	SEGMENT
??_C@_08PILLCKKM@DTLSv0?49?$AA@ DB 'DTLSv0.9', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MOEBAHEJ@SSLv3?$AA@
CONST	SEGMENT
??_C@_05MOEBAHEJ@SSLv3?$AA@ DB 'SSLv3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LLIBCOJ@TLSv1?$AA@
CONST	SEGMENT
??_C@_05LLIBCOJ@TLSv1?$AA@ DB 'TLSv1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07IIILFOAN@TLSv1?41?$AA@
CONST	SEGMENT
??_C@_07IIILFOAN@TLSv1?41?$AA@ DB 'TLSv1.1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KDKGANMO@TLSv1?42?$AA@
CONST	SEGMENT
??_C@_07KDKGANMO@TLSv1?42?$AA@ DB 'TLSv1.2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KCHAKJIH@ssl3?9sha1?$AA@
CONST	SEGMENT
??_C@_09KCHAKJIH@ssl3?9sha1?$AA@ DB 'ssl3-sha1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CBANLEIB@ssl3?9md5?$AA@
CONST	SEGMENT
??_C@_08CBANLEIB@ssl3?9md5?$AA@ DB 'ssl3-md5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OKFBGHCE@ssl2?9md5?$AA@
CONST	SEGMENT
??_C@_08OKFBGHCE@ssl2?9md5?$AA@ DB 'ssl2-md5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MEMCPFFG@s?9?$DOsid_ctx_length?5?$DM?$DN?5sizeof?5s?9?$DOs@
CONST	SEGMENT
??_C@_0CH@MEMCPFFG@s?9?$DOsid_ctx_length?5?$DM?$DN?5sizeof?5s?9?$DOs@ DB 's'
	DB	'->sid_ctx_length <= sizeof s->sid_ctx', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@
CONST	SEGMENT
??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@ DB 'A'
	DB	'LL:!EXPORT:!LOW:!aNULL:!eNULL:!SSLv2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NHFKDGAI@SSLv2?$AA@
CONST	SEGMENT
??_C@_05NHFKDGAI@SSLv2?$AA@ DB 'SSLv2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@ DB '.\ssl\ssl_lib.c', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_id_cmp_BSEARCH_CMP_FN
_TEXT	SEGMENT
_a_$ = 8						; size = 4
_b_$ = 12						; size = 4
_ssl_cipher_id_cmp_BSEARCH_CMP_FN PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1302
	mov	eax, DWORD PTR _a_$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR _b_$[esp-4]
	sub	ecx, DWORD PTR [eax+8]
; Line 1303
	jne	SHORT $LN4@ssl_cipher
; Line 3571
	xor	eax, eax
	ret	0
$LN4@ssl_cipher:
; Line 1306
	xor	eax, eax
	test	ecx, ecx
	setg	al
	lea	eax, DWORD PTR [eax*2-1]
; Line 3571
	ret	0
_ssl_cipher_id_cmp_BSEARCH_CMP_FN ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_get_server_cert_index
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl_get_server_cert_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2525
	push	esi
	push	edi
; Line 2527
	mov	edi, DWORD PTR _s$[esp+4]
	mov	eax, DWORD PTR [edi+88]
	push	DWORD PTR [eax+836]
	call	_ssl_cipher_get_cert_index
	mov	esi, eax
	add	esp, 4
; Line 2528
	test	esi, esi
	jne	SHORT $LN2@ssl_get_se
	mov	ecx, DWORD PTR [edi+152]
	cmp	DWORD PTR [ecx+60], eax
	jne	SHORT $LN3@ssl_get_se
; Line 2532
	pop	edi
	lea	eax, DWORD PTR [esi+1]
	pop	esi
; Line 2533
	ret	0
$LN2@ssl_get_se:
; Line 2530
	cmp	esi, -1
	jne	SHORT $LN3@ssl_get_se
; Line 2531
	push	2531					; 000009e3H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	68					; 00000044H
	push	322					; 00000142H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 2532
	mov	eax, esi
$LN3@ssl_get_se:
; Line 2533
	pop	edi
	pop	esi
	ret	0
_ssl_get_server_cert_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_buf_freelist_free
_TEXT	SEGMENT
_list$ = 8						; size = 4
_ssl_buf_freelist_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2091
	push	edi
; Line 2093
	mov	edi, DWORD PTR _list$[esp]
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN3@ssl_buf_fr
	push	esi
	npad	3
$LL4@ssl_buf_fr:
; Line 2094
	mov	esi, DWORD PTR [eax]
; Line 2095
	push	eax
	call	_CRYPTO_free
	add	esp, 4
	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL4@ssl_buf_fr
	pop	esi
$LN3@ssl_buf_fr:
; Line 2097
	push	edi
	call	_CRYPTO_free
	add	esp, 4
	pop	edi
; Line 2098
	ret	0
_ssl_buf_freelist_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_session_LHASH_COMP
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_ssl_session_LHASH_COMP PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1874
	jmp	_ssl_session_cmp
_ssl_session_LHASH_COMP ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_session_LHASH_HASH
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_ssl_session_LHASH_HASH PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1843
	mov	edx, DWORD PTR _arg$[esp-4]
	movzx	eax, BYTE PTR [edx+75]
	movzx	ecx, BYTE PTR [edx+74]
; Line 1873
	shl	eax, 8
	or	eax, ecx
; Line 1843
	movzx	ecx, BYTE PTR [edx+73]
	shl	eax, 8
; Line 1873
	or	eax, ecx
; Line 1843
	movzx	ecx, BYTE PTR [edx+72]
	shl	eax, 8
	or	eax, ecx
; Line 1873
	ret	0
_ssl_session_LHASH_HASH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_session_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_ssl_session_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1860
	mov	edx, DWORD PTR _a$[esp-4]
	push	esi
	mov	esi, DWORD PTR _b$[esp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN2@ssl_sessio
$LN11@ssl_sessio:
; Line 1861
	mov	eax, 1
	pop	esi
; Line 1865
	ret	0
$LN2@ssl_sessio:
; Line 1862
	mov	ecx, DWORD PTR [edx+68]
	cmp	ecx, DWORD PTR [esi+68]
	jne	SHORT $LN11@ssl_sessio
; Line 1864
	add	esi, 72					; 00000048H
	add	edx, 72					; 00000048H
	sub	ecx, 4
	jb	SHORT $LN7@ssl_sessio
	npad	7
$LL8@ssl_sessio:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN6@ssl_sessio
	add	edx, 4
	add	esi, 4
	sub	ecx, 4
	jae	SHORT $LL8@ssl_sessio
$LN7@ssl_sessio:
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN5@ssl_sessio
$LN6@ssl_sessio:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [esi]
	jne	SHORT $LN9@ssl_sessio
	cmp	ecx, -3					; fffffffdH
	je	SHORT $LN5@ssl_sessio
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [esi+1]
	jne	SHORT $LN9@ssl_sessio
	cmp	ecx, -2					; fffffffeH
	je	SHORT $LN5@ssl_sessio
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [esi+2]
	jne	SHORT $LN9@ssl_sessio
	cmp	ecx, -1
	je	SHORT $LN5@ssl_sessio
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [esi+3]
	je	SHORT $LN5@ssl_sessio
$LN9@ssl_sessio:
	sbb	eax, eax
	or	eax, 1
	pop	esi
; Line 1865
	ret	0
$LN5@ssl_sessio:
; Line 1864
	xor	eax, eax
	pop	esi
; Line 1865
	ret	0
_ssl_session_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_session_hash
_TEXT	SEGMENT
_a$ = 8							; size = 4
_ssl_session_hash PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1843
	mov	edx, DWORD PTR _a$[esp-4]
	movzx	eax, BYTE PTR [edx+75]
	movzx	ecx, BYTE PTR [edx+74]
; Line 1848
	shl	eax, 8
	or	eax, ecx
	movzx	ecx, BYTE PTR [edx+73]
	shl	eax, 8
	or	eax, ecx
	movzx	ecx, BYTE PTR [edx+72]
	shl	eax, 8
	or	eax, ecx
; Line 1849
	ret	0
_ssl_session_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_clear_hash_ctx
_TEXT	SEGMENT
_hash$ = 8						; size = 4
_ssl_clear_hash_ctx PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3543
	push	esi
; Line 3545
	mov	esi, DWORD PTR _hash$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@ssl_clear_
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN4@ssl_clear_:
; Line 3547
	mov	DWORD PTR [esi], 0
	pop	esi
; Line 3548
	ret	0
_ssl_clear_hash_ctx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_replace_hash
_TEXT	SEGMENT
_hash$ = 8						; size = 4
_md$ = 12						; size = 4
_ssl_replace_hash PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3531
	push	esi
; Line 3545
	mov	esi, DWORD PTR _hash$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@ssl_replac
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN6@ssl_replac:
; Line 3547
	mov	DWORD PTR [esi], 0
; Line 3533
	call	_EVP_MD_CTX_create
	mov	DWORD PTR [esi], eax
; Line 3534
	test	eax, eax
	je	SHORT $LN3@ssl_replac
	mov	ecx, DWORD PTR _md$[esp]
	test	ecx, ecx
	je	SHORT $LN2@ssl_replac
	push	0
	push	ecx
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN3@ssl_replac
$LN2@ssl_replac:
; Line 3539
	mov	eax, DWORD PTR [esi]
	pop	esi
; Line 3540
	ret	0
$LN3@ssl_replac:
; Line 3535
	push	DWORD PTR [esi]
	call	_EVP_MD_CTX_destroy
	add	esp, 4
; Line 3536
	mov	DWORD PTR [esi], 0
; Line 3537
	xor	eax, eax
	pop	esi
; Line 3540
	ret	0
_ssl_replace_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_check_srvr_ecc_cert_and_alg
_TEXT	SEGMENT
_pk_nid$ = -12						; size = 4
_md_nid$ = -8						; size = 4
_alg_a$1$ = -4						; size = 4
_x$ = 8							; size = 4
_alg_k$1$ = 12						; size = 4
_s$ = 12						; size = 4
_ssl_check_srvr_ecc_cert_and_alg PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2458
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
; Line 2463
	mov	ebp, DWORD PTR _s$[esp+16]
	mov	DWORD PTR _md_nid$[esp+20], 0
	mov	DWORD PTR _pk_nid$[esp+20], 0
	push	edi
	mov	eax, DWORD PTR [ebp+88]
; Line 2468
	mov	edi, DWORD PTR _x$[esp+20]
	mov	eax, DWORD PTR [eax+836]
	test	BYTE PTR [eax+32], 2
	mov	ebx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _alg_k$1$[esp+20], ebx
	mov	DWORD PTR _alg_a$1$[esp+24], ecx
	je	SHORT $LN4@ssl_check_
; Line 2470
	push	edi
	call	_X509_get_pubkey
	mov	ebx, eax
	add	esp, 4
; Line 2471
	test	ebx, ebx
	je	$LN23@ssl_check_
; Line 2473
	push	esi
	push	ebx
	call	_EVP_PKEY_bits
; Line 2474
	push	ebx
	mov	esi, eax
	call	_EVP_PKEY_free
	add	esp, 8
; Line 2475
	cmp	esi, 163				; 000000a3H
	pop	esi
	jg	SHORT $LN23@ssl_check_
	mov	ebx, DWORD PTR _alg_k$1$[esp+20]
$LN4@ssl_check_:
; Line 2480
	push	0
	push	-1
	push	edi
	call	_X509_check_purpose
; Line 2481
	mov	eax, DWORD PTR [edi+4]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@ssl_check_
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN5@ssl_check_
; Line 2482
	push	eax
	call	_OBJ_obj2nid
; Line 2483
	lea	ecx, DWORD PTR _pk_nid$[esp+28]
	push	ecx
	lea	ecx, DWORD PTR _md_nid$[esp+32]
	push	ecx
	push	eax
	call	_OBJ_find_sigid_algs
	add	esp, 16					; 00000010H
$LN5@ssl_check_:
	test	bl, 96					; 00000060H
; Line 2485
	je	$LN12@ssl_check_
; Line 2487
	test	BYTE PTR [edi+40], 2
	je	SHORT $LN8@ssl_check_
	test	BYTE PTR [edi+44], 8
	jne	SHORT $LN8@ssl_check_
; Line 2488
	push	2489					; 000009b9H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	317					; 0000013dH
$LN24@ssl_check_:
	push	279					; 00000117H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN23@ssl_check_:
; Line 2490
	pop	edi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 2520
	add	esp, 12					; 0000000cH
	ret	0
$LN8@ssl_check_:
; Line 2492
	mov	ecx, DWORD PTR _pk_nid$[esp+24]
	test	bl, 64					; 00000040H
	je	SHORT $LN10@ssl_check_
	mov	edx, DWORD PTR [ebp]
	mov	eax, edx
	and	eax, -256				; ffffff00H
	cmp	eax, 768				; 00000300H
	jne	SHORT $LN20@ssl_check_
	cmp	edx, 771				; 00000303H
	jge	SHORT $LN10@ssl_check_
$LN20@ssl_check_:
; Line 2494
	cmp	ecx, 408				; 00000198H
	je	SHORT $LN10@ssl_check_
; Line 2495
	push	2496					; 000009c0H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	323					; 00000143H
; Line 2497
	jmp	SHORT $LN24@ssl_check_
$LN10@ssl_check_:
; Line 2500
	test	bl, 32					; 00000020H
	je	SHORT $LN12@ssl_check_
	mov	edx, DWORD PTR [ebp]
	mov	eax, edx
	and	eax, -256				; ffffff00H
	cmp	eax, 768				; 00000300H
	jne	SHORT $LN21@ssl_check_
	cmp	edx, 771				; 00000303H
	jge	SHORT $LN12@ssl_check_
$LN21@ssl_check_:
; Line 2503
	cmp	ecx, 6
	je	SHORT $LN12@ssl_check_
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN12@ssl_check_
; Line 2504
	push	2505					; 000009c9H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	322					; 00000142H
; Line 2506
	jmp	$LN24@ssl_check_
$LN12@ssl_check_:
; Line 2510
	test	BYTE PTR _alg_a$1$[esp+24], 64		; 00000040H
	je	SHORT $LN14@ssl_check_
; Line 2512
	test	BYTE PTR [edi+40], 2
	je	SHORT $LN14@ssl_check_
	test	BYTE PTR [edi+44], 128			; 00000080H
	jne	SHORT $LN14@ssl_check_
; Line 2513
	push	2514					; 000009d2H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	318					; 0000013eH
; Line 2515
	jmp	$LN24@ssl_check_
$LN14@ssl_check_:
	pop	edi
	pop	ebp
; Line 2519
	mov	eax, 1
	pop	ebx
; Line 2520
	add	esp, 12					; 0000000cH
	ret	0
_ssl_check_srvr_ecc_cert_and_alg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_ok
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl_ok	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3308
	mov	eax, 1
; Line 3309
	ret	0
_ssl_ok	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_free_wbio_buffer
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl_free_wbio_buffer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3110
	push	esi
; Line 3111
	mov	esi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN1@ssl_free_w
; Line 3114
	mov	ecx, DWORD PTR [esi+16]
	cmp	eax, ecx
	jne	SHORT $LN3@ssl_free_w
; Line 3116
	push	ecx
	call	_BIO_pop
	add	esp, 4
	mov	DWORD PTR [esi+16], eax
$LN3@ssl_free_w:
; Line 3122
	push	DWORD PTR [esi+20]
	call	_BIO_free
	add	esp, 4
; Line 3123
	mov	DWORD PTR [esi+20], 0
$LN1@ssl_free_w:
	pop	esi
; Line 3124
	ret	0
_ssl_free_wbio_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_init_wbio_buffer
_TEXT	SEGMENT
_s$ = 8							; size = 4
_push$ = 12						; size = 4
_ssl_init_wbio_buffer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3080
	push	esi
	push	edi
; Line 3083
	mov	edi, DWORD PTR _s$[esp+4]
	mov	esi, DWORD PTR [edi+20]
	test	esi, esi
	jne	SHORT $LN2@ssl_init_w
; Line 3084
	call	_BIO_f_buffer
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 3085
	test	esi, esi
	je	SHORT $LN13@ssl_init_w
; Line 3087
	mov	DWORD PTR [edi+20], esi
; Line 3088
	jmp	SHORT $LN5@ssl_init_w
$LN2@ssl_init_w:
; Line 3090
	mov	eax, DWORD PTR [edi+16]
	cmp	esi, eax
	jne	SHORT $LN5@ssl_init_w
; Line 3091
	push	eax
	call	_BIO_pop
	add	esp, 4
	mov	DWORD PTR [edi+16], eax
$LN5@ssl_init_w:
; Line 3093
	push	0
	push	0
	push	1
	push	esi
	call	_BIO_ctrl
; Line 3095
	push	0
	push	1
	push	117					; 00000075H
	push	esi
	call	_BIO_int_ctrl
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN6@ssl_init_w
; Line 3096
	push	3096					; 00000c18H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	7
	push	184					; 000000b8H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN13@ssl_init_w:
; Line 3097
	pop	edi
	xor	eax, eax
	pop	esi
; Line 3107
	ret	0
$LN6@ssl_init_w:
; Line 3099
	cmp	DWORD PTR _push$[esp+4], 0
	je	SHORT $LN7@ssl_init_w
; Line 3100
	mov	eax, DWORD PTR [edi+16]
	cmp	eax, esi
	je	SHORT $LN10@ssl_init_w
; Line 3101
	push	eax
	push	esi
	call	_BIO_push
	add	esp, 8
; Line 3104
	mov	DWORD PTR [edi+16], eax
; Line 3106
	mov	eax, 1
	pop	edi
	pop	esi
; Line 3107
	ret	0
$LN7@ssl_init_w:
; Line 3103
	cmp	DWORD PTR [edi+16], esi
	jne	SHORT $LN10@ssl_init_w
; Line 3104
	push	esi
	call	_BIO_pop
	add	esp, 4
	mov	DWORD PTR [edi+16], eax
$LN10@ssl_init_w:
; Line 3106
	pop	edi
	mov	eax, 1
	pop	esi
; Line 3107
	ret	0
_ssl_init_wbio_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_get_ciphers_by_id
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl_get_ciphers_by_id PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1339
	mov	ecx, DWORD PTR _s$[esp-4]
	test	ecx, ecx
	je	SHORT $LN5@ssl_get_ci
; Line 1340
	mov	eax, DWORD PTR [ecx+120]
	test	eax, eax
	jne	SHORT $LN1@ssl_get_ci
; Line 1342
	mov	eax, DWORD PTR [ecx+228]
	test	eax, eax
	je	SHORT $LN5@ssl_get_ci
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	jne	SHORT $LN1@ssl_get_ci
$LN5@ssl_get_ci:
; Line 1346
	xor	eax, eax
$LN1@ssl_get_ci:
; Line 1347
	ret	0
_ssl_get_ciphers_by_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_set_cert_masks
_TEXT	SEGMENT
_ecc_pkey_size$1$ = -60					; size = 4
_rsa_tmp$1$ = -60					; size = 4
_rsa_enc_export$1$ = -56				; size = 4
_rsa_tmp_export$1$ = -52				; size = 4
_dh_tmp_export$1$ = -48					; size = 4
_dh_tmp$1$ = -44					; size = 4
_ecdh_ok$1$ = -40					; size = 4
_dh_rsa_export$1$ = -40					; size = 4
_dh_dsa_export$1$ = -36					; size = 4
_x$1$ = -36						; size = 4
_pk_nid$ = -32						; size = 4
_have_ecdh_tmp$1$ = -28					; size = 4
_rsa_enc$1$ = -24					; size = 4
_dh_rsa$1$ = -20					; size = 4
_dh_dsa$1$ = -16					; size = 4
_ecdsa_ok$2$ = -12					; size = 4
_dsa_sign$1$ = -12					; size = 4
_have_ecc_cert$1$ = -8					; size = 4
_ecc_pkey$1$ = -8					; size = 4
_md_nid$ = -4						; size = 4
_emask_a$1$ = 8						; size = 4
_rsa_sign$1$ = 8					; size = 4
_c$ = 8							; size = 4
_cipher$ = 12						; size = 4
_ssl_set_cert_masks PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2240
	mov	eax, 60					; 0000003cH
	call	__chkstk
	push	esi
; Line 2257
	mov	esi, DWORD PTR _c$[esp+60]
	mov	DWORD PTR _pk_nid$[esp+64], 0
	mov	DWORD PTR _md_nid$[esp+64], 0
	test	esi, esi
	je	$LN1@ssl_set_ce
; Line 2260
	mov	eax, DWORD PTR _cipher$[esp+60]
	push	ebx
	push	ebp
	push	edi
	test	BYTE PTR [eax+32], 8
	mov	edi, 1024				; 00000400H
	mov	eax, 512				; 00000200H
	cmovne	edi, eax
; Line 2263
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	jne	SHORT $LN32@ssl_set_ce
	cmp	DWORD PTR [esi+32], eax
	jne	SHORT $LN32@ssl_set_ce
	xor	ecx, ecx
	jmp	SHORT $LN61@ssl_set_ce
$LN32@ssl_set_ce:
	mov	ecx, 1
$LN61@ssl_set_ce:
; Line 2264
	cmp	DWORD PTR [esi+32], 0
	mov	DWORD PTR _rsa_tmp$1$[esp+76], ecx
	jne	SHORT $LN35@ssl_set_ce
	test	ecx, ecx
	je	SHORT $LN34@ssl_set_ce
	push	eax
	call	_RSA_size
	shl	eax, 3
	add	esp, 4
	cmp	eax, edi
	jle	SHORT $LN35@ssl_set_ce
$LN34@ssl_set_ce:
	mov	DWORD PTR _rsa_tmp_export$1$[esp+76], 0
	jmp	SHORT $LN36@ssl_set_ce
$LN35@ssl_set_ce:
	mov	DWORD PTR _rsa_tmp_export$1$[esp+76], 1
$LN36@ssl_set_ce:
; Line 2270
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	jne	SHORT $LN37@ssl_set_ce
	cmp	DWORD PTR [esi+40], eax
	jne	SHORT $LN37@ssl_set_ce
	xor	ecx, ecx
	jmp	SHORT $LN62@ssl_set_ce
$LN37@ssl_set_ce:
	mov	ecx, 1
$LN62@ssl_set_ce:
; Line 2271
	cmp	DWORD PTR [esi+40], 0
	mov	DWORD PTR _dh_tmp$1$[esp+76], ecx
	jne	SHORT $LN40@ssl_set_ce
	test	ecx, ecx
	je	SHORT $LN39@ssl_set_ce
	push	eax
	call	_DH_size
	shl	eax, 3
	add	esp, 4
	cmp	eax, edi
	jle	SHORT $LN40@ssl_set_ce
$LN39@ssl_set_ce:
	mov	DWORD PTR _dh_tmp_export$1$[esp+76], 0
	jmp	SHORT $LN41@ssl_set_ce
$LN40@ssl_set_ce:
	mov	DWORD PTR _dh_tmp_export$1$[esp+76], 1
$LN41@ssl_set_ce:
; Line 2278
	cmp	DWORD PTR [esi+44], 0
	jne	SHORT $LN42@ssl_set_ce
	cmp	DWORD PTR [esi+48], 0
	jne	SHORT $LN42@ssl_set_ce
	cmp	DWORD PTR [esi+52], 0
	mov	DWORD PTR _have_ecdh_tmp$1$[esp+76], 0
	je	SHORT $LN43@ssl_set_ce
$LN42@ssl_set_ce:
	mov	DWORD PTR _have_ecdh_tmp$1$[esp+76], 1
$LN43@ssl_set_ce:
; Line 2281
	mov	eax, DWORD PTR [esi+84]
	and	eax, 1
	mov	DWORD PTR _rsa_enc$1$[esp+76], eax
; Line 2282
	je	SHORT $LN44@ssl_set_ce
	push	DWORD PTR [esi+64]
	call	_EVP_PKEY_size
	shl	eax, 3
	add	esp, 4
	mov	DWORD PTR _rsa_enc_export$1$[esp+76], 1
	cmp	eax, edi
	jle	SHORT $LN45@ssl_set_ce
$LN44@ssl_set_ce:
	mov	DWORD PTR _rsa_enc_export$1$[esp+76], 0
$LN45@ssl_set_ce:
; Line 2284
	mov	eax, DWORD PTR [esi+112]
	and	eax, 2
	mov	DWORD PTR _rsa_sign$1$[esp+72], eax
; Line 2286
	mov	eax, DWORD PTR [esi+140]
	and	eax, 2
	mov	DWORD PTR _dsa_sign$1$[esp+76], eax
; Line 2288
	mov	eax, DWORD PTR [esi+168]
	and	eax, 1
	mov	DWORD PTR _dh_rsa$1$[esp+76], eax
; Line 2289
	je	SHORT $LN46@ssl_set_ce
	push	DWORD PTR [esi+148]
	call	_EVP_PKEY_size
	shl	eax, 3
	add	esp, 4
	mov	DWORD PTR _dh_rsa_export$1$[esp+76], 1
	cmp	eax, edi
	jle	SHORT $LN47@ssl_set_ce
$LN46@ssl_set_ce:
	mov	DWORD PTR _dh_rsa_export$1$[esp+76], 0
$LN47@ssl_set_ce:
; Line 2292
	mov	eax, DWORD PTR [esi+196]
	and	eax, 1
	mov	DWORD PTR _dh_dsa$1$[esp+76], eax
; Line 2293
	je	SHORT $LN48@ssl_set_ce
	push	DWORD PTR [esi+176]
	call	_EVP_PKEY_size
	shl	eax, 3
	add	esp, 4
	mov	DWORD PTR _dh_dsa_export$1$[esp+76], 1
	cmp	eax, edi
	jle	SHORT $LN49@ssl_set_ce
$LN48@ssl_set_ce:
	mov	DWORD PTR _dh_dsa_export$1$[esp+76], 0
$LN49@ssl_set_ce:
; Line 2296
	mov	eax, DWORD PTR [esi+224]
; Line 2298
	xor	ebx, ebx
	and	eax, 1
; Line 2299
	xor	edi, edi
	mov	DWORD PTR _have_ecc_cert$1$[esp+76], eax
; Line 2300
	xor	ebp, ebp
; Line 2301
	xor	eax, eax
; Line 2311
	cmp	DWORD PTR [esi+256], eax
	je	SHORT $LN3@ssl_set_ce
	cmp	DWORD PTR [esi+260], eax
	je	SHORT $LN3@ssl_set_ce
; Line 2312
	mov	ebx, 512				; 00000200H
; Line 2313
	mov	edi, ebx
$LN3@ssl_set_ce:
; Line 2316
	cmp	DWORD PTR [esi+228], eax
	je	SHORT $LN4@ssl_set_ce
	cmp	DWORD PTR [esi+232], eax
	je	SHORT $LN4@ssl_set_ce
; Line 2317
	or	ebx, 512				; 00000200H
; Line 2318
	or	edi, 256				; 00000100H
$LN4@ssl_set_ce:
; Line 2321
	mov	ecx, DWORD PTR _rsa_enc$1$[esp+76]
	mov	edx, DWORD PTR _rsa_sign$1$[esp+72]
	test	ecx, ecx
	jne	SHORT $LN6@ssl_set_ce
	cmp	DWORD PTR _rsa_tmp$1$[esp+76], eax
	je	SHORT $LN5@ssl_set_ce
	test	edx, edx
	je	SHORT $LN5@ssl_set_ce
$LN6@ssl_set_ce:
; Line 2322
	or	ebx, 1
$LN5@ssl_set_ce:
; Line 2323
	cmp	DWORD PTR _rsa_enc_export$1$[esp+76], eax
	jne	SHORT $LN9@ssl_set_ce
	cmp	DWORD PTR _rsa_tmp_export$1$[esp+76], eax
	je	SHORT $LN7@ssl_set_ce
	test	edx, edx
	jne	SHORT $LN9@ssl_set_ce
	test	ecx, ecx
	je	SHORT $LN7@ssl_set_ce
$LN9@ssl_set_ce:
; Line 2324
	mov	ebp, 1
$LN7@ssl_set_ce:
; Line 2335
	cmp	DWORD PTR _dh_tmp_export$1$[esp+76], eax
	je	SHORT $LN10@ssl_set_ce
; Line 2336
	or	ebp, 8
$LN10@ssl_set_ce:
; Line 2338
	cmp	DWORD PTR _dh_tmp$1$[esp+76], eax
	je	SHORT $LN11@ssl_set_ce
; Line 2339
	or	ebx, 8
$LN11@ssl_set_ce:
; Line 2341
	cmp	DWORD PTR _dh_rsa$1$[esp+76], eax
	je	SHORT $LN12@ssl_set_ce
; Line 2342
	or	ebx, 2
$LN12@ssl_set_ce:
; Line 2343
	cmp	DWORD PTR _dh_rsa_export$1$[esp+76], eax
	je	SHORT $LN13@ssl_set_ce
; Line 2344
	or	ebp, 2
$LN13@ssl_set_ce:
; Line 2346
	cmp	DWORD PTR _dh_dsa$1$[esp+76], eax
	je	SHORT $LN14@ssl_set_ce
; Line 2347
	or	ebx, 4
$LN14@ssl_set_ce:
; Line 2348
	cmp	DWORD PTR _dh_dsa_export$1$[esp+76], eax
	je	SHORT $LN15@ssl_set_ce
; Line 2349
	or	ebp, 4
$LN15@ssl_set_ce:
; Line 2351
	test	bl, 6
	je	SHORT $LN16@ssl_set_ce
; Line 2352
	or	edi, 8
$LN16@ssl_set_ce:
; Line 2354
	test	ecx, ecx
	jne	SHORT $LN18@ssl_set_ce
	test	edx, edx
	je	SHORT $LN17@ssl_set_ce
$LN18@ssl_set_ce:
; Line 2355
	or	edi, 1
; Line 2356
	mov	eax, 1
$LN17@ssl_set_ce:
; Line 2359
	cmp	DWORD PTR _dsa_sign$1$[esp+76], 0
	je	SHORT $LN19@ssl_set_ce
; Line 2360
	or	edi, 2
; Line 2361
	or	eax, 2
$LN19@ssl_set_ce:
; Line 2365
	or	eax, 4
	or	edi, 4
; Line 2379
	cmp	DWORD PTR _have_ecc_cert$1$[esp+76], 0
	mov	DWORD PTR _emask_a$1$[esp+72], eax
	je	$LN29@ssl_set_ce
; Line 2381
	mov	eax, DWORD PTR [esi+200]
; Line 2383
	push	0
	push	-1
	push	eax
	mov	DWORD PTR _x$1$[esp+88], eax
	call	_X509_check_purpose
; Line 2385
	mov	eax, DWORD PTR _x$1$[esp+88]
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR [eax+40]
	and	edx, 2
	je	SHORT $LN50@ssl_set_ce
	mov	ecx, DWORD PTR [eax+44]
	and	ecx, 8
	mov	DWORD PTR _ecdh_ok$1$[esp+76], ecx
	jmp	SHORT $LN51@ssl_set_ce
$LN50@ssl_set_ce:
	mov	DWORD PTR _ecdh_ok$1$[esp+76], 1
$LN51@ssl_set_ce:
; Line 2388
	test	edx, edx
	je	SHORT $LN52@ssl_set_ce
	mov	ecx, DWORD PTR [eax+44]
	and	ecx, 128				; 00000080H
	jmp	SHORT $LN53@ssl_set_ce
$LN52@ssl_set_ce:
	mov	ecx, 1
$LN53@ssl_set_ce:
; Line 2390
	test	BYTE PTR [esi+224], 2
	mov	edx, 0
; Line 2392
	push	eax
	cmove	ecx, edx
	mov	DWORD PTR _ecdsa_ok$2$[esp+80], ecx
	call	_X509_get_pubkey
	add	esp, 4
	mov	DWORD PTR _ecc_pkey$1$[esp+76], eax
; Line 2393
	test	eax, eax
	je	SHORT $LN54@ssl_set_ce
	push	eax
	call	_EVP_PKEY_bits
	mov	DWORD PTR _ecc_pkey_size$1$[esp+80], eax
	add	esp, 4
	mov	eax, DWORD PTR _ecc_pkey$1$[esp+76]
	jmp	SHORT $LN55@ssl_set_ce
$LN54@ssl_set_ce:
	mov	DWORD PTR _ecc_pkey_size$1$[esp+76], 0
$LN55@ssl_set_ce:
; Line 2394
	push	eax
	call	_EVP_PKEY_free
; Line 2395
	mov	eax, DWORD PTR _x$1$[esp+80]
	add	esp, 4
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN22@ssl_set_ce
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN22@ssl_set_ce
; Line 2396
	push	eax
	call	_OBJ_obj2nid
; Line 2397
	lea	ecx, DWORD PTR _pk_nid$[esp+80]
	push	ecx
	lea	ecx, DWORD PTR _md_nid$[esp+84]
	push	ecx
	push	eax
	call	_OBJ_find_sigid_algs
	add	esp, 16					; 00000010H
$LN22@ssl_set_ce:
; Line 2400
	cmp	DWORD PTR _ecdh_ok$1$[esp+76], 0
	je	SHORT $LN28@ssl_set_ce
; Line 2402
	mov	ecx, DWORD PTR _pk_nid$[esp+76]
	cmp	ecx, 6
	je	SHORT $LN25@ssl_set_ce
	cmp	ecx, 19					; 00000013H
	jne	SHORT $LN56@ssl_set_ce
$LN25@ssl_set_ce:
; Line 2405
	mov	edx, DWORD PTR _ecc_pkey_size$1$[esp+76]
	or	ebx, 32					; 00000020H
; Line 2407
	mov	eax, DWORD PTR _emask_a$1$[esp+72]
	or	edi, 16					; 00000010H
	cmp	edx, 163				; 000000a3H
	jg	SHORT $LN26@ssl_set_ce
	or	ebp, 32					; 00000020H
	or	eax, 16					; 00000010H
	mov	DWORD PTR _emask_a$1$[esp+72], eax
	jmp	SHORT $LN26@ssl_set_ce
$LN56@ssl_set_ce:
	mov	eax, DWORD PTR _emask_a$1$[esp+72]
	mov	edx, DWORD PTR _ecc_pkey_size$1$[esp+76]
$LN26@ssl_set_ce:
; Line 2411
	cmp	ecx, 408				; 00000198H
	jne	SHORT $LN28@ssl_set_ce
; Line 2412
	or	ebx, 64					; 00000040H
; Line 2413
	or	edi, 16					; 00000010H
; Line 2414
	cmp	edx, 163				; 000000a3H
	jg	SHORT $LN28@ssl_set_ce
; Line 2415
	or	ebp, 64					; 00000040H
; Line 2416
	or	eax, 16					; 00000010H
	mov	DWORD PTR _emask_a$1$[esp+72], eax
$LN28@ssl_set_ce:
; Line 2422
	cmp	DWORD PTR _ecdsa_ok$2$[esp+76], 0
; Line 2424
	mov	eax, DWORD PTR _emask_a$1$[esp+72]
	je	SHORT $LN29@ssl_set_ce
	or	edi, 64					; 00000040H
	or	eax, 64					; 00000040H
$LN29@ssl_set_ce:
; Line 2431
	cmp	DWORD PTR _have_ecdh_tmp$1$[esp+76], 0
	je	SHORT $LN30@ssl_set_ce
; Line 2432
	or	ebx, 128				; 00000080H
; Line 2433
	or	ebp, 128				; 00000080H
$LN30@ssl_set_ce:
; Line 2439
	or	edi, 128				; 00000080H
; Line 2448
	mov	DWORD PTR [esi+4], 1
	or	ebp, 256				; 00000100H
	mov	DWORD PTR [esi+12], edi
	or	ebx, 256				; 00000100H
	mov	DWORD PTR [esi+16], ebp
	pop	edi
	or	eax, 128				; 00000080H
	mov	DWORD PTR [esi+8], ebx
	pop	ebp
	mov	DWORD PTR [esi+20], eax
	pop	ebx
$LN1@ssl_set_ce:
	pop	esi
; Line 2449
	add	esp, 60					; 0000003cH
	ret	0
_ssl_set_cert_masks ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_get_sign_pkey
_TEXT	SEGMENT
_s$ = 8							; size = 4
_cipher$ = 12						; size = 4
_pmd$ = 16						; size = 4
_ssl_get_sign_pkey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2571
	mov	eax, DWORD PTR _cipher$[esp-4]
	push	esi
	mov	ecx, DWORD PTR [eax+16]
; Line 2572
	mov	eax, DWORD PTR _s$[esp]
	mov	esi, DWORD PTR [eax+152]
; Line 2584
	test	cl, 2
	je	SHORT $LN2@ssl_get_si
	cmp	DWORD PTR [esi+120], 0
	je	SHORT $LN2@ssl_get_si
; Line 2586
	mov	edx, 2
	jmp	SHORT $LN10@ssl_get_si
$LN2@ssl_get_si:
; Line 2587
	test	cl, 1
	je	SHORT $LN4@ssl_get_si
; Line 2588
	cmp	DWORD PTR [esi+92], 0
	je	SHORT $LN6@ssl_get_si
; Line 2589
	mov	edx, 1
	jmp	SHORT $LN10@ssl_get_si
$LN6@ssl_get_si:
; Line 2590
	cmp	DWORD PTR [esi+64], 0
	je	SHORT $LN13@ssl_get_si
; Line 2591
	xor	edx, edx
; Line 2592
	jmp	SHORT $LN10@ssl_get_si
$LN4@ssl_get_si:
	test	cl, 64					; 00000040H
	je	SHORT $LN13@ssl_get_si
	cmp	DWORD PTR [esi+204], 0
	je	SHORT $LN13@ssl_get_si
; Line 2594
	mov	edx, 5
$LN10@ssl_get_si:
; Line 2599
	mov	eax, DWORD PTR _pmd$[esp]
	test	eax, eax
	je	SHORT $LN11@ssl_get_si
; Line 2600
	lea	ecx, DWORD PTR [edx*8]
	sub	ecx, edx
	mov	ecx, DWORD PTR [esi+ecx*4+68]
	mov	DWORD PTR [eax], ecx
$LN11@ssl_get_si:
; Line 2601
	lea	eax, DWORD PTR [edx*8]
	sub	eax, edx
	mov	eax, DWORD PTR [esi+eax*4+64]
	pop	esi
; Line 2602
	ret	0
$LN13@ssl_get_si:
; Line 2596
	push	2596					; 00000a24H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	68					; 00000044H
	push	183					; 000000b7H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 2597
	xor	eax, eax
	pop	esi
; Line 2602
	ret	0
_ssl_get_sign_pkey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_get_server_cert_serverinfo
_TEXT	SEGMENT
_s$ = 8							; size = 4
_serverinfo$ = 12					; size = 4
_serverinfo_length$ = 16				; size = 4
_ssl_get_server_cert_serverinfo PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2607
	push	ebx
	push	esi
; Line 2612
	mov	esi, DWORD PTR _s$[esp+4]
	push	edi
	mov	edi, DWORD PTR _serverinfo_length$[esp+8]
	mov	DWORD PTR [edi], 0
; Line 2527
	mov	eax, DWORD PTR [esi+88]
; Line 2612
	mov	ebx, DWORD PTR [esi+152]
; Line 2527
	push	DWORD PTR [eax+836]
	call	_ssl_cipher_get_cert_index
	mov	edx, eax
	add	esp, 4
; Line 2528
	test	edx, edx
	jne	SHORT $LN6@ssl_get_se
	mov	ecx, DWORD PTR [esi+152]
	cmp	DWORD PTR [ecx+60], eax
	jne	SHORT $LN2@ssl_get_se
; Line 2529
	mov	edx, 1
$LN2@ssl_get_se:
; Line 2617
	lea	eax, DWORD PTR [edx*8]
	sub	eax, edx
	mov	edx, DWORD PTR [ebx+eax*4+76]
	lea	ecx, DWORD PTR [ebx+eax*4]
	test	edx, edx
	je	SHORT $LN10@ssl_get_se
; Line 2620
	mov	eax, DWORD PTR _serverinfo$[esp+8]
	mov	DWORD PTR [eax], edx
; Line 2621
	mov	eax, DWORD PTR [ecx+80]
	mov	DWORD PTR [edi], eax
; Line 2622
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 2623
	ret	0
$LN6@ssl_get_se:
; Line 2530
	cmp	edx, -1
	jne	SHORT $LN2@ssl_get_se
; Line 2531
	push	2531					; 000009e3H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	68					; 00000044H
	push	322					; 00000142H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN10@ssl_get_se:
	pop	edi
	pop	esi
; Line 2616
	xor	eax, eax
	pop	ebx
; Line 2623
	ret	0
_ssl_get_server_cert_serverinfo ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_get_server_send_pkey
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl_get_server_send_pkey PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2536
	push	esi
; Line 2540
	mov	esi, DWORD PTR _s$[esp]
	push	edi
; Line 2541
	mov	eax, DWORD PTR [esi+88]
	mov	edi, DWORD PTR [esi+152]
	test	eax, eax
	je	SHORT $LN3@ssl_get_se
	mov	eax, DWORD PTR [eax+836]
	test	eax, eax
	je	SHORT $LN3@ssl_get_se
; Line 2543
	push	eax
	push	edi
	call	_ssl_set_cert_masks
; Line 2554
	push	esi
	call	_ssl_get_server_cert_index
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 2557
	test	ecx, ecx
	js	SHORT $LN3@ssl_get_se
; Line 2561
	lea	eax, DWORD PTR [ecx*8]
	sub	eax, ecx
	add	eax, 15					; 0000000fH
	lea	eax, DWORD PTR [edi+eax*4]
	pop	edi
	pop	esi
; Line 2562
	ret	0
$LN3@ssl_get_se:
	pop	edi
; Line 2542
	xor	eax, eax
	pop	esi
; Line 2562
	ret	0
_ssl_get_server_send_pkey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_undefined_const_function
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl_undefined_const_function PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2834
	push	2835					; 00000b13H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	66					; 00000042H
	push	243					; 000000f3H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 2836
	xor	eax, eax
; Line 2837
	ret	0
_ssl_undefined_const_function ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_undefined_void_function
_TEXT	SEGMENT
_ssl_undefined_void_function PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2827
	push	2828					; 00000b0cH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	66					; 00000042H
	push	244					; 000000f4H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 2829
	xor	eax, eax
; Line 2830
	ret	0
_ssl_undefined_void_function ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_undefined_function
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl_undefined_function PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2821
	push	2821					; 00000b05H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	66					; 00000042H
	push	197					; 000000c5H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 2822
	xor	eax, eax
; Line 2823
	ret	0
_ssl_undefined_function ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_update_cache
_TEXT	SEGMENT
_i$1$ = 8						; size = 4
_s$ = 8							; size = 4
_mode$ = 12						; size = 4
_ssl_update_cache PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2627
	mov	eax, 8
	call	__chkstk
	push	esi
; Line 2634
	mov	esi, DWORD PTR _s$[esp+8]
	mov	eax, DWORD PTR [esi+192]
	cmp	DWORD PTR [eax+68], 0
	je	$LN7@ssl_update
; Line 2637
	mov	edx, DWORD PTR [esi+368]
	push	ebx
; Line 2641
	mov	ebx, DWORD PTR _mode$[esp+12]
	push	edi
	mov	ecx, DWORD PTR [edx+32]
	mov	edi, ecx
	mov	DWORD PTR _i$1$[esp+16], ecx
	and	edi, ebx
	je	SHORT $LN5@ssl_update
	cmp	DWORD PTR [esi+108], 0
	jne	SHORT $LN5@ssl_update
	test	ecx, 512				; 00000200H
	jne	SHORT $LN4@ssl_update
	push	eax
	push	edx
	call	_SSL_CTX_add_session
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ssl_update
$LN4@ssl_update:
	mov	eax, DWORD PTR [esi+368]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN5@ssl_update
; Line 2642
	mov	eax, DWORD PTR [esi+192]
	push	2642					; 00000a52H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	14					; 0000000eH
	add	eax, 164				; 000000a4H
	push	1
	push	eax
	call	_CRYPTO_add_lock
; Line 2643
	mov	eax, DWORD PTR [esi+368]
	push	DWORD PTR [esi+192]
	push	esi
	mov	eax, DWORD PTR [eax+40]
	call	eax
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN5@ssl_update
; Line 2644
	push	DWORD PTR [esi+192]
	call	_SSL_SESSION_free
	add	esp, 4
$LN5@ssl_update:
; Line 2648
	test	BYTE PTR _i$1$[esp+16], -128		; ffffff80H
	jne	SHORT $LN13@ssl_update
	cmp	edi, ebx
	jne	SHORT $LN13@ssl_update
; Line 2651
	mov	eax, DWORD PTR [esi+368]
	test	bl, 1
	je	SHORT $LN9@ssl_update
	mov	eax, DWORD PTR [eax+60]
	jmp	SHORT $LN10@ssl_update
$LN9@ssl_update:
	mov	eax, DWORD PTR [eax+72]
$LN10@ssl_update:
	cmp	al, -1
	jne	SHORT $LN13@ssl_update
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	push	0
	call	DWORD PTR __imp___time64
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2652
	push	eax
	push	DWORD PTR [esi+368]
	call	_SSL_CTX_flush_sessions
	add	esp, 12					; 0000000cH
$LN13@ssl_update:
	pop	edi
	pop	ebx
$LN7@ssl_update:
	pop	esi
; Line 2655
	add	esp, 8
	ret	0
_ssl_update_cache ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_list_to_bytes
_TEXT	SEGMENT
_empty_reneg_info_scsv$1$ = -4				; size = 4
_s$ = 8							; size = 4
_q$1$ = 12						; size = 4
_sk$ = 12						; size = 4
_p$ = 16						; size = 4
_put_cb$ = 20						; size = 4
_ssl_cipher_list_to_bytes PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1447
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	edi
; Line 1450
	mov	edi, DWORD PTR _s$[esp+12]
; Line 1452
	xor	eax, eax
; Line 1454
	push	edi
	cmp	DWORD PTR [edi+400], eax
	mov	ebx, DWORD PTR [edi+152]
	sete	al
	mov	DWORD PTR _empty_reneg_info_scsv$1$[esp+20], eax
	call	_ssl_set_client_disabled
; Line 1456
	mov	ebp, DWORD PTR _sk$[esp+16]
	add	esp, 4
	test	ebp, ebp
	jne	SHORT $LN5@ssl_cipher
; Line 1457
	pop	edi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1505
	pop	ecx
	ret	0
$LN5@ssl_cipher:
; Line 1459
	cmp	DWORD PTR _put_cb$[esp+12], 0
	push	esi
	mov	esi, DWORD PTR _p$[esp+16]
	mov	DWORD PTR _q$1$[esp+16], esi
	jne	SHORT $LN6@ssl_cipher
; Line 1460
	mov	eax, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [eax+76]
	mov	DWORD PTR _put_cb$[esp+16], eax
$LN6@ssl_cipher:
; Line 1462
	push	ebp
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN18@ssl_cipher
	npad	5
$LL4@ssl_cipher:
; Line 1463
	push	edi
	push	ebp
	call	_sk_value
	mov	ecx, eax
	add	esp, 8
; Line 1466
	mov	eax, DWORD PTR [ecx+28]
	test	eax, DWORD PTR [ebx+24]
	jne	SHORT $LN2@ssl_cipher
	mov	eax, DWORD PTR [ecx+12]
	test	eax, DWORD PTR [ebx+8]
	jne	SHORT $LN2@ssl_cipher
	mov	eax, DWORD PTR [ecx+16]
	test	eax, DWORD PTR [ebx+12]
	jne	SHORT $LN2@ssl_cipher
; Line 1476
	push	esi
	push	ecx
	call	DWORD PTR _put_cb$[esp+24]
	add	esp, 8
; Line 1477
	add	esi, eax
$LN2@ssl_cipher:
; Line 1462
	push	ebp
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL4@ssl_cipher
; Line 1483
	mov	edi, DWORD PTR _q$1$[esp+16]
	cmp	esi, edi
	je	SHORT $LN11@ssl_cipher
; Line 1484
	cmp	DWORD PTR _empty_reneg_info_scsv$1$[esp+20], 0
; Line 1488
	mov	ebx, DWORD PTR _put_cb$[esp+16]
	je	SHORT $LN10@ssl_cipher
	push	esi
	push	OFFSET ?scsv@?5??ssl_cipher_list_to_bytes@@9@9
	call	ebx
	add	esp, 8
; Line 1489
	add	esi, eax
$LN10@ssl_cipher:
; Line 1495
	mov	eax, DWORD PTR _s$[esp+16]
	test	BYTE PTR [eax+260], 128			; 00000080H
	je	SHORT $LN11@ssl_cipher
; Line 1499
	push	esi
	push	OFFSET ?scsv@?6??ssl_cipher_list_to_bytes@@9@9
	call	ebx
	add	esp, 8
; Line 1500
	add	esi, eax
; Line 1504
	sub	esi, edi
	mov	eax, esi
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 1505
	pop	ecx
	ret	0
$LN18@ssl_cipher:
	mov	edi, esi
$LN11@ssl_cipher:
; Line 1504
	sub	esi, edi
	mov	eax, esi
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 1505
	pop	ecx
	ret	0
_ssl_cipher_list_to_bytes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_bytes_to_cipher_list
_TEXT	SEGMENT
_i$1$ = 8						; size = 4
_s$ = 8							; size = 4
_p$ = 12						; size = 4
_num$ = 16						; size = 4
_skp$ = 20						; size = 4
_ssl_bytes_to_cipher_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1510
	push	ebx
; Line 1515
	mov	ebx, DWORD PTR _s$[esp]
	push	esi
	push	edi
	mov	eax, DWORD PTR [ebx+88]
	test	eax, eax
	je	SHORT $LN5@ssl_bytes_
; Line 1516
	mov	DWORD PTR [eax+1048], 0
$LN5@ssl_bytes_:
; Line 1518
	mov	eax, DWORD PTR [ebx+8]
	push	0
	push	0
	mov	eax, DWORD PTR [eax+76]
	call	eax
	mov	edi, eax
	add	esp, 8
; Line 1519
	test	edi, edi
	je	$LN7@ssl_bytes_
	mov	esi, DWORD PTR _num$[esp+8]
	mov	eax, esi
	cdq
	idiv	edi
	test	edx, edx
	jne	$LN7@ssl_bytes_
; Line 1524
	push	ebp
	mov	ebp, DWORD PTR _skp$[esp+12]
	test	ebp, ebp
	je	SHORT $LN10@ssl_bytes_
	mov	ebp, DWORD PTR [ebp]
	test	ebp, ebp
	je	SHORT $LN10@ssl_bytes_
; Line 1532
	push	ebp
	call	_sk_zero
	add	esp, 4
$LN11@ssl_bytes_:
; Line 1535
	mov	eax, DWORD PTR [ebx+152]
	mov	eax, DWORD PTR [eax+340]
	test	eax, eax
	je	SHORT $LN12@ssl_bytes_
; Line 1536
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN12@ssl_bytes_:
; Line 1537
	push	esi
	mov	esi, DWORD PTR _p$[esp+16]
	push	esi
	call	_BUF_memdup
	mov	ecx, DWORD PTR [ebx+152]
	add	esp, 8
	mov	DWORD PTR [ecx+340], eax
; Line 1538
	mov	eax, DWORD PTR [ebx+152]
	cmp	DWORD PTR [eax+340], 0
	jne	SHORT $LN13@ssl_bytes_
; Line 1539
	push	1539					; 00000603H
; Line 1540
	jmp	$LN65@ssl_bytes_
$LN10@ssl_bytes_:
; Line 1525
	call	_sk_new_null
	mov	ebp, eax
; Line 1526
	test	ebp, ebp
	jne	SHORT $LN11@ssl_bytes_
; Line 1527
	push	1527					; 000005f7H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	65					; 00000041H
	push	161					; 000000a1H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN24@ssl_bytes_:
; Line 1528
	pop	ebp
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 1602
	ret	0
$LN13@ssl_bytes_:
; Line 1542
	mov	ecx, DWORD PTR _num$[esp+12]
	mov	DWORD PTR [eax+344], ecx
; Line 1544
	mov	DWORD PTR _i$1$[esp+12], 0
	test	ecx, ecx
	jle	$LN61@ssl_bytes_
	npad	2
$LL4@ssl_bytes_:
; Line 1547
	mov	eax, DWORD PTR [ebx+88]
	test	eax, eax
	je	SHORT $LN14@ssl_bytes_
	cmp	edi, 3
	jne	SHORT $LN15@ssl_bytes_
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN17@ssl_bytes_
$LN15@ssl_bytes_:
	cmp	BYTE PTR [edi+esi-2], 0
	jne	SHORT $LN14@ssl_bytes_
	cmp	BYTE PTR [edi+esi-1], 255		; 000000ffH
	jne	SHORT $LN14@ssl_bytes_
; Line 1550
	cmp	DWORD PTR [ebx+400], 0
	jne	$LN54@ssl_bytes_
; Line 1556
	mov	DWORD PTR [eax+1048], 1
; Line 1557
	add	esi, edi
; Line 1561
	jmp	SHORT $LN2@ssl_bytes_
$LN14@ssl_bytes_:
; Line 1566
	cmp	edi, 3
	jne	SHORT $LN18@ssl_bytes_
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN17@ssl_bytes_
$LN18@ssl_bytes_:
	cmp	BYTE PTR [edi+esi-2], 86		; 00000056H
	jne	SHORT $LN17@ssl_bytes_
	cmp	BYTE PTR [edi+esi-1], 0
	jne	SHORT $LN17@ssl_bytes_
; Line 1163
	mov	eax, DWORD PTR [ebx+8]
	push	0
	push	0
	push	119					; 00000077H
	mov	eax, DWORD PTR [eax+64]
	push	ebx
	call	eax
	add	esp, 16					; 00000010H
; Line 1573
	test	eax, eax
	je	SHORT $LN55@ssl_bytes_
; Line 1581
	add	esi, edi
; Line 1582
	jmp	SHORT $LN63@ssl_bytes_
$LN17@ssl_bytes_:
; Line 1585
	push	esi
	push	ebx
	call	_ssl_get_cipher_by_char
	add	esp, 8
; Line 1586
	add	esi, edi
; Line 1587
	test	eax, eax
	je	SHORT $LN63@ssl_bytes_
; Line 1588
	push	eax
	push	ebp
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN56@ssl_bytes_
$LN63@ssl_bytes_:
	mov	ecx, DWORD PTR _num$[esp+12]
$LN2@ssl_bytes_:
; Line 1544
	mov	eax, DWORD PTR _i$1$[esp+12]
	add	eax, edi
	mov	DWORD PTR _i$1$[esp+12], eax
	cmp	eax, ecx
	jl	$LL4@ssl_bytes_
$LN61@ssl_bytes_:
; Line 1595
	mov	eax, DWORD PTR _skp$[esp+12]
	test	eax, eax
	je	SHORT $LN23@ssl_bytes_
; Line 1596
	mov	DWORD PTR [eax], ebp
$LN23@ssl_bytes_:
; Line 1597
	mov	eax, ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 1602
	ret	0
$LN54@ssl_bytes_:
; Line 1551
	push	1552					; 00000610H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	345					; 00000159H
	push	161					; 000000a1H
	push	20					; 00000014H
	call	_ERR_put_error
; Line 1553
	push	40					; 00000028H
	push	2
	push	ebx
	call	_ssl3_send_alert
	add	esp, 32					; 00000020H
; Line 1554
	jmp	SHORT $err$67
$LN55@ssl_bytes_:
; Line 1574
	push	1575					; 00000627H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	373					; 00000175H
	push	161					; 000000a1H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1576
	cmp	DWORD PTR [ebx+88], 0
	je	SHORT $err$67
; Line 1577
	push	86					; 00000056H
	push	2
	push	ebx
	call	_ssl3_send_alert
	add	esp, 12					; 0000000cH
; Line 1579
	jmp	SHORT $err$67
$LN56@ssl_bytes_:
; Line 1589
	push	1589					; 00000635H
$LN65@ssl_bytes_:
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	65					; 00000041H
	push	161					; 000000a1H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$67:
; Line 1599
	mov	eax, DWORD PTR _skp$[esp+12]
	test	eax, eax
	je	SHORT $LN25@ssl_bytes_
	cmp	DWORD PTR [eax], 0
	jne	$LN24@ssl_bytes_
$LN25@ssl_bytes_:
; Line 1600
	push	ebp
	call	_sk_free
	add	esp, 4
	xor	eax, eax
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 1602
	ret	0
$LN7@ssl_bytes_:
; Line 1520
	push	1521					; 000005f1H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	151					; 00000097H
	push	161					; 000000a1H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1522
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1602
	ret	0
_ssl_bytes_to_cipher_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_ptr_id_cmp
_TEXT	SEGMENT
_ap$ = 8						; size = 4
_bp$ = 12						; size = 4
_ssl_cipher_ptr_id_cmp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1314
	mov	eax, DWORD PTR _ap$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _bp$[esp-4]
	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	sub	ecx, DWORD PTR [eax+8]
; Line 1315
	jne	SHORT $LN2@ssl_cipher
; Line 1316
	xor	eax, eax
; Line 1319
	ret	0
$LN2@ssl_cipher:
; Line 1318
	xor	eax, eax
	test	ecx, ecx
	setg	al
	lea	eax, DWORD PTR [eax*2-1]
; Line 1319
	ret	0
_ssl_cipher_ptr_id_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_bsearch_ssl_cipher_id
_TEXT	SEGMENT
_key$ = 8						; size = 4
_base$ = 12						; size = 4
_num$ = 16						; size = 4
_OBJ_bsearch_ssl_cipher_id PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3571
	push	OFFSET _ssl_cipher_id_cmp_BSEARCH_CMP_FN
	push	48					; 00000030H
	push	DWORD PTR _num$[esp+4]
	push	DWORD PTR _base$[esp+8]
	push	DWORD PTR _key$[esp+12]
	call	_OBJ_bsearch_
	add	esp, 20					; 00000014H
	ret	0
_OBJ_bsearch_ssl_cipher_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_id_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_ssl_cipher_id_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1302
	mov	eax, DWORD PTR _a$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR _b$[esp-4]
	sub	ecx, DWORD PTR [eax+8]
; Line 1303
	jne	SHORT $LN2@ssl_cipher
; Line 1304
	xor	eax, eax
; Line 1307
	ret	0
$LN2@ssl_cipher:
; Line 1306
	xor	eax, eax
	test	ecx, ecx
	setg	al
	lea	eax, DWORD PTR [eax*2-1]
; Line 1307
	ret	0
_ssl_cipher_id_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_clear_cipher_ctx
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl_clear_cipher_ctx PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2990
	push	esi
; Line 2991
	mov	esi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [esi+128]
	test	eax, eax
	je	SHORT $LN2@ssl_clear_
; Line 2992
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
; Line 2993
	push	DWORD PTR [esi+128]
	call	_CRYPTO_free
	add	esp, 8
; Line 2994
	mov	DWORD PTR [esi+128], 0
$LN2@ssl_clear_:
; Line 2996
	mov	eax, DWORD PTR [esi+140]
	test	eax, eax
	je	SHORT $LN3@ssl_clear_
; Line 2997
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
; Line 2998
	push	DWORD PTR [esi+140]
	call	_CRYPTO_free
	add	esp, 8
; Line 2999
	mov	DWORD PTR [esi+140], 0
$LN3@ssl_clear_:
; Line 3002
	mov	eax, DWORD PTR [esi+136]
	test	eax, eax
	je	SHORT $LN4@ssl_clear_
; Line 3003
	push	eax
	call	_COMP_CTX_free
	add	esp, 4
; Line 3004
	mov	DWORD PTR [esi+136], 0
$LN4@ssl_clear_:
; Line 3006
	mov	eax, DWORD PTR [esi+148]
	test	eax, eax
	je	SHORT $LN5@ssl_clear_
; Line 3007
	push	eax
	call	_COMP_CTX_free
	add	esp, 4
; Line 3008
	mov	DWORD PTR [esi+148], 0
$LN5@ssl_clear_:
	pop	esi
; Line 3011
	ret	0
_ssl_clear_cipher_ctx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_bad_method
_TEXT	SEGMENT
_ver$ = 8						; size = 4
_ssl_bad_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2841
	push	2841					; 00000b19H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	66					; 00000042H
	push	160					; 000000a0H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 2842
	xor	eax, eax
; Line 2843
	ret	0
_ssl_bad_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_is_server
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_is_server PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3562
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+36]
; Line 3563
	ret	0
_SSL_is_server ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_cache_hit
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_cache_hit PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3557
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+108]
; Line 3558
	ret	0
_SSL_cache_hit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_debug
_TEXT	SEGMENT
_s$ = 8							; size = 4
_debug$ = 12						; size = 4
_SSL_set_debug PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3552
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR _debug$[esp-4]
	mov	DWORD PTR [eax+232], ecx
; Line 3553
	ret	0
_SSL_set_debug ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_current_expansion
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_current_expansion PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3073
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+136]
	test	eax, eax
	je	SHORT $LN2@SSL_get_cu
; Line 3074
	mov	eax, DWORD PTR [eax]
; Line 3076
	ret	0
$LN2@SSL_get_cu:
; Line 3075
	xor	eax, eax
; Line 3076
	ret	0
_SSL_get_current_expansion ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_current_compression
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_current_compression PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3066
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+148]
	test	eax, eax
	je	SHORT $LN2@SSL_get_cu
; Line 3067
	mov	eax, DWORD PTR [eax]
; Line 3069
	ret	0
$LN2@SSL_get_cu:
; Line 3068
	xor	eax, eax
; Line 3069
	ret	0
_SSL_get_current_compression ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_tmp_ecdh_callback
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_ecdh$ = 12						; size = 4
_SSL_set_tmp_ecdh_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1178
	mov	eax, DWORD PTR _ssl$[esp-4]
	push	DWORD PTR _ecdh$[esp-4]
	push	7
	mov	ecx, DWORD PTR [eax+8]
	push	eax
	mov	eax, DWORD PTR [ecx+108]
	call	eax
	add	esp, 12					; 0000000cH
; Line 3401
	ret	0
_SSL_set_tmp_ecdh_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_tmp_ecdh_callback
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_ecdh$ = 12						; size = 4
_SSL_CTX_set_tmp_ecdh_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1294
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	DWORD PTR _ecdh$[esp-4]
	push	7
	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [ecx+112]
	call	eax
	add	esp, 12					; 0000000cH
; Line 3394
	ret	0
_SSL_CTX_set_tmp_ecdh_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_tmp_dh_callback
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_dh$ = 12						; size = 4
_SSL_set_tmp_dh_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1178
	mov	eax, DWORD PTR _ssl$[esp-4]
	push	DWORD PTR _dh$[esp-4]
	push	6
	mov	ecx, DWORD PTR [eax+8]
	push	eax
	mov	eax, DWORD PTR [ecx+108]
	call	eax
	add	esp, 12					; 0000000cH
; Line 3384
	ret	0
_SSL_set_tmp_dh_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_tmp_dh_callback
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_dh$ = 12						; size = 4
_SSL_CTX_set_tmp_dh_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1294
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	DWORD PTR _dh$[esp-4]
	push	6
	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [ecx+112]
	call	eax
	add	esp, 12					; 0000000cH
; Line 3378
	ret	0
_SSL_CTX_set_tmp_dh_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_tmp_rsa_callback
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_set_tmp_rsa_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1178
	mov	eax, DWORD PTR _ssl$[esp-4]
	push	DWORD PTR _cb$[esp-4]
	push	5
	mov	ecx, DWORD PTR [eax+8]
	push	eax
	mov	eax, DWORD PTR [ecx+108]
	call	eax
	add	esp, 12					; 0000000cH
; Line 3347
	ret	0
_SSL_set_tmp_rsa_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_tmp_rsa_callback
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_CTX_set_tmp_rsa_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1294
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	DWORD PTR _cb$[esp-4]
	push	5
	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [ecx+112]
	call	eax
	add	esp, 12					; 0000000cH
; Line 3340
	ret	0
_SSL_CTX_set_tmp_rsa_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_ex_new_index
_TEXT	SEGMENT
_argl$ = 8						; size = 4
_argp$ = 12						; size = 4
_new_func$ = 16						; size = 4
_dup_func$ = 20						; size = 4
_free_func$ = 24					; size = 4
_SSL_CTX_get_ex_new_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3292
	push	DWORD PTR _free_func$[esp-4]
	push	DWORD PTR _dup_func$[esp]
	push	DWORD PTR _new_func$[esp+4]
	push	DWORD PTR _argp$[esp+8]
	push	DWORD PTR _argl$[esp+12]
	push	2
	call	_CRYPTO_get_ex_new_index
	add	esp, 24					; 00000018H
; Line 3294
	ret	0
_SSL_CTX_get_ex_new_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_ex_data
_TEXT	SEGMENT
_s$ = 8							; size = 4
_idx$ = 12						; size = 4
_SSL_CTX_get_ex_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3303
	sub	DWORD PTR _s$[esp-4], -128		; ffffff80H
	jmp	_CRYPTO_get_ex_data
_SSL_CTX_get_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_ex_data
_TEXT	SEGMENT
_s$ = 8							; size = 4
_idx$ = 12						; size = 4
_arg$ = 16						; size = 4
_SSL_CTX_set_ex_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3298
	sub	DWORD PTR _s$[esp-4], -128		; ffffff80H
	jmp	_CRYPTO_set_ex_data
_SSL_CTX_set_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_ex_new_index
_TEXT	SEGMENT
_argl$ = 8						; size = 4
_argp$ = 12						; size = 4
_new_func$ = 16						; size = 4
_dup_func$ = 20						; size = 4
_free_func$ = 24					; size = 4
_SSL_get_ex_new_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3274
	push	DWORD PTR _free_func$[esp-4]
	push	DWORD PTR _dup_func$[esp]
	push	DWORD PTR _new_func$[esp+4]
	push	DWORD PTR _argp$[esp+8]
	push	DWORD PTR _argl$[esp+12]
	push	1
	call	_CRYPTO_get_ex_new_index
	add	esp, 24					; 00000018H
; Line 3276
	ret	0
_SSL_get_ex_new_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_ex_data
_TEXT	SEGMENT
_s$ = 8							; size = 4
_idx$ = 12						; size = 4
_SSL_get_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3285
	add	DWORD PTR _s$[esp-4], 240		; 000000f0H
	jmp	_CRYPTO_get_ex_data
_SSL_get_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_ex_data
_TEXT	SEGMENT
_s$ = 8							; size = 4
_idx$ = 12						; size = 4
_arg$ = 16						; size = 4
_SSL_set_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3280
	add	DWORD PTR _s$[esp-4], 240		; 000000f0H
	jmp	_CRYPTO_set_ex_data
_SSL_set_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_verify_result
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_SSL_get_verify_result PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3268
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	eax, DWORD PTR [eax+236]
; Line 3269
	ret	0
_SSL_get_verify_result ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_verify_result
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_arg$ = 12						; size = 4
_SSL_set_verify_result PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3263
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	ecx, DWORD PTR _arg$[esp-4]
	mov	DWORD PTR [eax+236], ecx
; Line 3264
	ret	0
_SSL_set_verify_result ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_state
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_state$ = 12						; size = 4
_SSL_set_state PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3258
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	ecx, DWORD PTR _state$[esp-4]
	mov	DWORD PTR [eax+52], ecx
; Line 3259
	ret	0
_SSL_set_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_state
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_SSL_state PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3253
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	eax, DWORD PTR [eax+52]
; Line 3254
	ret	0
_SSL_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_info_callback
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_SSL_get_info_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3248
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	eax, DWORD PTR [eax+208]
; Line 3249
	ret	0
_SSL_get_info_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_info_callback
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_set_info_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3238
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+208], ecx
; Line 3239
	ret	0
_SSL_set_info_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_SSL_CTX
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_ctx$ = 12						; size = 4
_SSL_set_SSL_CTX PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3167
	push	ebx
; Line 3169
	mov	ebx, DWORD PTR _ctx$[esp]
	push	esi
	mov	esi, DWORD PTR _ssl$[esp+4]
	push	edi
	mov	eax, DWORD PTR [esi+228]
	mov	edi, DWORD PTR [esi+152]
	cmp	eax, ebx
	je	$LN1@SSL_set_SS
; Line 3172
	test	ebx, ebx
	jne	SHORT $LN3@SSL_set_SS
; Line 3173
	mov	ebx, DWORD PTR [esi+368]
$LN3@SSL_set_SS:
; Line 3175
	push	DWORD PTR [ebx+176]
	call	_ssl_cert_dup
	add	esp, 4
	mov	DWORD PTR [esi+152], eax
; Line 3176
	test	edi, edi
	je	$LN4@SSL_set_SS
; Line 3178
	cmp	DWORD PTR [esi+36], 0
	je	SHORT $LN5@SSL_set_SS
; Line 3179
	mov	ecx, DWORD PTR [edi+292]
	mov	DWORD PTR [eax+292], ecx
; Line 3180
	mov	ecx, DWORD PTR [esi+152]
	mov	eax, DWORD PTR [edi+296]
	mov	DWORD PTR [ecx+296], eax
; Line 3182
	mov	eax, DWORD PTR [edi+340]
	mov	DWORD PTR [edi+292], 0
	mov	ecx, DWORD PTR [esi+152]
	mov	DWORD PTR [ecx+340], eax
; Line 3183
	mov	ecx, DWORD PTR [esi+152]
	mov	eax, DWORD PTR [edi+344]
	mov	DWORD PTR [ecx+344], eax
; Line 3184
	mov	DWORD PTR [edi+340], 0
$LN5@SSL_set_SS:
; Line 3187
	mov	ecx, DWORD PTR [esi+152]
	mov	eax, DWORD PTR [edi+368]
; Line 3192
	push	edi
	mov	DWORD PTR [ecx+368], eax
	mov	ecx, DWORD PTR [esi+152]
	mov	eax, DWORD PTR [edi+372]
	mov	DWORD PTR [ecx+372], eax
	mov	eax, DWORD PTR [edi+376]
	mov	DWORD PTR [edi+368], 0
	mov	ecx, DWORD PTR [esi+152]
	mov	DWORD PTR [ecx+376], eax
	call	_ssl_cert_free
	add	esp, 4
$LN4@SSL_set_SS:
; Line 3199
	cmp	DWORD PTR [esi+156], 32			; 00000020H
	jbe	SHORT $LN10@SSL_set_SS
	push	OFFSET ??_C@_0CM@NMJLCBPB@ssl?9?$DOsid_ctx_length?5?$DM?$DN?5sizeof?$CIss@
	push	3199					; 00000c7fH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN10@SSL_set_SS:
; Line 3208
	mov	edi, DWORD PTR [esi+228]
	test	edi, edi
	je	$LN6@SSL_set_SS
	mov	ecx, DWORD PTR [esi+156]
	cmp	ecx, DWORD PTR [edi+196]
	jne	$LN6@SSL_set_SS
	add	edi, 200				; 000000c8H
	lea	edx, DWORD PTR [esi+160]
	push	ebp
	sub	ecx, 4
	jb	SHORT $LN13@SSL_set_SS
	npad	4
$LL14@SSL_set_SS:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [edi]
	jne	SHORT $LN12@SSL_set_SS
	add	edx, 4
	add	edi, 4
	sub	ecx, 4
	jae	SHORT $LL14@SSL_set_SS
$LN13@SSL_set_SS:
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN11@SSL_set_SS
$LN12@SSL_set_SS:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [edi]
	jne	SHORT $LN15@SSL_set_SS
	cmp	ecx, -3					; fffffffdH
	je	SHORT $LN11@SSL_set_SS
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [edi+1]
	jne	SHORT $LN15@SSL_set_SS
	cmp	ecx, -2					; fffffffeH
	je	SHORT $LN11@SSL_set_SS
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [edi+2]
	jne	SHORT $LN15@SSL_set_SS
	cmp	ecx, -1
	je	SHORT $LN11@SSL_set_SS
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [edi+3]
	jne	SHORT $LN15@SSL_set_SS
$LN11@SSL_set_SS:
; Line 3210
	mov	eax, DWORD PTR [ebx+196]
	mov	DWORD PTR [esi+156], eax
; Line 3211
	movups	xmm0, XMMWORD PTR [ebx+200]
	movups	XMMWORD PTR [esi+160], xmm0
	movups	xmm0, XMMWORD PTR [ebx+216]
	movups	XMMWORD PTR [esi+176], xmm0
$LN15@SSL_set_SS:
	pop	ebp
$LN6@SSL_set_SS:
; Line 3214
	push	3214					; 00000c8eH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	lea	eax, DWORD PTR [ebx+96]
	push	1
	push	eax
	call	_CRYPTO_add_lock
; Line 3215
	mov	eax, DWORD PTR [esi+228]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN7@SSL_set_SS
; Line 3216
	push	eax
	call	_SSL_CTX_free
	add	esp, 4
$LN7@SSL_set_SS:
; Line 3219
	mov	DWORD PTR [esi+228], ebx
	mov	eax, ebx
$LN1@SSL_set_SS:
; Line 3220
	pop	edi
	pop	esi
	pop	ebx
	ret	0
_SSL_set_SSL_CTX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_SSL_CTX
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_SSL_get_SSL_CTX PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3163
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	eax, DWORD PTR [eax+228]
; Line 3164
	ret	0
_SSL_get_SSL_CTX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_load_verify_locations
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_CAfile$ = 12						; size = 4
_CApath$ = 16						; size = 4
_SSL_CTX_load_verify_locations PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3231
	push	DWORD PTR _CApath$[esp-4]
	mov	eax, DWORD PTR _ctx$[esp]
	push	DWORD PTR _CAfile$[esp]
	push	DWORD PTR [eax+12]
	call	_X509_STORE_load_locations
	add	esp, 12					; 0000000cH
; Line 3232
	ret	0
_SSL_CTX_load_verify_locations ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_default_verify_paths
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_set_default_verify_paths PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3225
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	DWORD PTR [eax+12]
	call	_X509_STORE_set_default_paths
	add	esp, 4
; Line 3226
	ret	0
_SSL_CTX_set_default_verify_paths ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_version
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_version PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3158
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 3159
	ret	0
_SSL_version ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_shutdown
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_shutdown PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3153
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+48]
; Line 3154
	ret	0
_SSL_get_shutdown ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_shutdown
_TEXT	SEGMENT
_s$ = 8							; size = 4
_mode$ = 12						; size = 4
_SSL_set_shutdown PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3148
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR _mode$[esp-4]
	mov	DWORD PTR [eax+48], ecx
; Line 3149
	ret	0
_SSL_set_shutdown ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_quiet_shutdown
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_quiet_shutdown PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3143
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+44]
; Line 3144
	ret	0
_SSL_get_quiet_shutdown ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_quiet_shutdown
_TEXT	SEGMENT
_s$ = 8							; size = 4
_mode$ = 12						; size = 4
_SSL_set_quiet_shutdown PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3138
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR _mode$[esp-4]
	mov	DWORD PTR [eax+44], ecx
; Line 3139
	ret	0
_SSL_set_quiet_shutdown ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_quiet_shutdown
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get_quiet_shutdown PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3133
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+244]
; Line 3134
	ret	0
_SSL_CTX_get_quiet_shutdown ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_quiet_shutdown
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_mode$ = 12						; size = 4
_SSL_CTX_set_quiet_shutdown PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3128
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	ecx, DWORD PTR _mode$[esp-4]
	mov	DWORD PTR [eax+244], ecx
; Line 3129
	ret	0
_SSL_CTX_set_quiet_shutdown ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get0_privatekey
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get0_privatekey PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3039
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+176]
	test	eax, eax
	je	SHORT $LN2@SSL_CTX_ge
; Line 3040
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
; Line 3043
	ret	0
$LN2@SSL_CTX_ge:
; Line 3042
	xor	eax, eax
; Line 3043
	ret	0
_SSL_CTX_get0_privatekey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get0_certificate
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get0_certificate PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3031
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+176]
	test	eax, eax
	je	SHORT $LN2@SSL_CTX_ge
; Line 3032
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
; Line 3035
	ret	0
$LN2@SSL_CTX_ge:
; Line 3034
	xor	eax, eax
; Line 3035
	ret	0
_SSL_CTX_get0_certificate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_privatekey
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_privatekey PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3023
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+152]
	test	eax, eax
	je	SHORT $LN2@SSL_get_pr
; Line 3024
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
; Line 3027
	ret	0
$LN2@SSL_get_pr:
; Line 3026
	xor	eax, eax
; Line 3027
	ret	0
_SSL_get_privatekey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_certificate
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_certificate PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3015
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+152]
	test	eax, eax
	je	SHORT $LN2@SSL_get_ce
; Line 3016
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
; Line 3019
	ret	0
$LN2@SSL_get_ce:
; Line 3018
	xor	eax, eax
; Line 3019
	ret	0
_SSL_get_certificate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_dup
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_dup PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2868
	push	esi
	push	edi
; Line 3163
	mov	edi, DWORD PTR _s$[esp+4]
; Line 2874
	push	DWORD PTR [edi+228]
	call	_SSL_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN5@SSL_dup
	pop	edi
	pop	esi
; Line 2987
	ret	0
$LN5@SSL_dup:
; Line 2877
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
; Line 2878
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], eax
; Line 2879
	mov	eax, DWORD PTR [edi+8]
	push	ebx
	mov	DWORD PTR [esi+8], eax
; Line 2881
	cmp	DWORD PTR [edi+192], 0
	push	ebp
	je	SHORT $LN6@SSL_dup
; Line 2883
	push	edi
	push	esi
	call	_SSL_copy_session_id
	add	esp, 8
; Line 2884
	jmp	SHORT $LN7@SSL_dup
$LN6@SSL_dup:
; Line 2892
	mov	eax, DWORD PTR [eax+12]
	push	esi
	call	eax
; Line 2893
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax
; Line 2894
	push	esi
	mov	eax, DWORD PTR [eax+4]
	call	eax
	add	esp, 8
; Line 2896
	cmp	DWORD PTR [edi+152], 0
	je	SHORT $LN10@SSL_dup
; Line 2897
	mov	eax, DWORD PTR [esi+152]
	test	eax, eax
	je	SHORT $LN9@SSL_dup
; Line 2898
	push	eax
	call	_ssl_cert_free
	add	esp, 4
$LN9@SSL_dup:
; Line 2900
	push	DWORD PTR [edi+152]
	call	_ssl_cert_dup
	add	esp, 4
	mov	DWORD PTR [esi+152], eax
; Line 2901
	test	eax, eax
	je	$err$107
$LN10@SSL_dup:
; Line 2905
	push	DWORD PTR [edi+156]
	lea	eax, DWORD PTR [edi+160]
	push	eax
	push	esi
	call	_SSL_set_session_id_context
	add	esp, 12					; 0000000cH
$LN7@SSL_dup:
; Line 2908
	mov	eax, DWORD PTR [edi+256]
	mov	DWORD PTR [esi+256], eax
; Line 2909
	mov	eax, DWORD PTR [edi+260]
	mov	DWORD PTR [esi+260], eax
; Line 1134
	mov	eax, DWORD PTR [edi+264]
; Line 1137
	mov	DWORD PTR [esi+264], eax
; Line 866
	mov	eax, DWORD PTR [edi+96]
	mov	DWORD PTR [esi+96], eax
; Line 2912
	mov	eax, DWORD PTR [edi+100]
	mov	DWORD PTR [esi+100], eax
; Line 2913
	mov	eax, DWORD PTR [edi+104]
	mov	DWORD PTR [esi+104], eax
; Line 834
	mov	ecx, DWORD PTR [edi+204]
; Line 854
	mov	eax, DWORD PTR [edi+200]
	mov	DWORD PTR [esi+200], eax
; Line 855
	test	ecx, ecx
	je	SHORT $LN91@SSL_dup
; Line 856
	mov	DWORD PTR [esi+204], ecx
$LN91@SSL_dup:
; Line 830
	push	DWORD PTR [edi+112]
	call	_X509_VERIFY_PARAM_get_depth
; Line 861
	push	eax
	push	DWORD PTR [esi+112]
	call	_X509_VERIFY_PARAM_set_depth
; Line 2916
	mov	eax, DWORD PTR [edi+196]
	mov	DWORD PTR [esi+196], eax
; Line 3238
	mov	eax, DWORD PTR [edi+208]
	mov	DWORD PTR [esi+208], eax
; Line 2920
	mov	eax, DWORD PTR [edi+232]
	mov	DWORD PTR [esi+232], eax
; Line 2923
	lea	eax, DWORD PTR [edi+240]
	push	eax
	lea	eax, DWORD PTR [esi+240]
	push	eax
	push	1
	call	_CRYPTO_dup_ex_data
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$err$107
; Line 2927
	mov	ecx, DWORD PTR [edi+12]
	test	ecx, ecx
	je	SHORT $LN13@SSL_dup
; Line 2928
	lea	eax, DWORD PTR [esi+12]
	push	eax
	push	0
	push	12					; 0000000cH
	push	ecx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$107
$LN13@SSL_dup:
; Line 2931
	mov	ecx, DWORD PTR [edi+16]
	test	ecx, ecx
	je	SHORT $LN16@SSL_dup
; Line 2932
	cmp	ecx, DWORD PTR [edi+12]
	je	SHORT $LN15@SSL_dup
; Line 2933
	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	0
	push	12					; 0000000cH
	push	ecx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$107
; Line 2935
	jmp	SHORT $LN16@SSL_dup
$LN15@SSL_dup:
; Line 2936
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+16], eax
$LN16@SSL_dup:
; Line 2938
	mov	eax, DWORD PTR [edi+24]
	mov	DWORD PTR [esi+24], eax
; Line 2939
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
; Line 2940
	mov	eax, DWORD PTR [edi+32]
	mov	DWORD PTR [esi+32], eax
; Line 2941
	mov	eax, DWORD PTR [edi+36]
	mov	DWORD PTR [esi+36], eax
; Line 2942
	mov	eax, DWORD PTR [edi+400]
	mov	DWORD PTR [esi+400], eax
; Line 2943
	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [esi+40], eax
; Line 2944
	mov	eax, DWORD PTR [edi+44]
	mov	DWORD PTR [esi+44], eax
; Line 2945
	mov	eax, DWORD PTR [edi+48]
	mov	DWORD PTR [esi+48], eax
; Line 2946
	mov	eax, DWORD PTR [edi+52]
	mov	DWORD PTR [esi+52], eax
; Line 2948
	mov	eax, DWORD PTR [edi+56]
	mov	DWORD PTR [esi+56], eax
; Line 2949
	mov	DWORD PTR [esi+68], 0
; Line 2952
	mov	eax, DWORD PTR [edi+108]
	mov	DWORD PTR [esi+108], eax
; Line 2954
	push	DWORD PTR [edi+112]
	push	DWORD PTR [esi+112]
	call	_X509_VERIFY_PARAM_inherit
; Line 2957
	mov	eax, DWORD PTR [edi+116]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN19@SSL_dup
; Line 2958
	push	eax
	call	_sk_dup
	add	esp, 4
	mov	DWORD PTR [esi+116], eax
	test	eax, eax
	je	$err$107
$LN19@SSL_dup:
; Line 2961
	mov	eax, DWORD PTR [edi+120]
	test	eax, eax
	je	SHORT $LN21@SSL_dup
; Line 2963
	push	eax
	call	_sk_dup
	add	esp, 4
	mov	DWORD PTR [esi+120], eax
	test	eax, eax
	je	SHORT $err$107
$LN21@SSL_dup:
; Line 2967
	mov	eax, DWORD PTR [edi+248]
	test	eax, eax
	je	SHORT $LN3@SSL_dup
; Line 2968
	push	eax
	call	_sk_dup
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	je	SHORT $err$107
; Line 2971
	push	ebx
	mov	DWORD PTR [esi+248], ebx
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@SSL_dup
$LL4@SSL_dup:
; Line 2972
	push	edi
	push	ebx
	call	_sk_value
	mov	ebp, eax
; Line 2973
	push	ebp
	call	_X509_NAME_dup
	push	eax
	push	edi
	push	ebx
	call	_sk_set
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN102@SSL_dup
; Line 2971
	push	ebx
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL4@SSL_dup
; Line 2986
	pop	ebp
	pop	ebx
	pop	edi
	mov	eax, esi
	pop	esi
; Line 2987
	ret	0
$LN102@SSL_dup:
; Line 2974
	push	ebp
	call	_X509_NAME_free
	add	esp, 4
$err$107:
; Line 2983
	push	esi
	call	_SSL_free
	add	esp, 4
; Line 2984
	xor	esi, esi
$LN3@SSL_dup:
; Line 2986
	pop	ebp
	pop	ebx
	pop	edi
	mov	eax, esi
	pop	esi
; Line 2987
	ret	0
_SSL_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_default_timeout
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_default_timeout PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1013
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+96]
	jmp	eax
_SSL_get_default_timeout ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_accept_state
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_set_accept_state PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2796
	push	esi
; Line 2797
	mov	esi, DWORD PTR _s$[esp]
; Line 2802
	push	esi
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+36], 1
	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 24576		; 00006000H
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [esi+32], eax
	call	_ssl_clear_cipher_ctx
; Line 3545
	mov	eax, DWORD PTR [esi+132]
; Line 2802
	add	esp, 4
; Line 3545
	test	eax, eax
	je	SHORT $LN4@SSL_set_ac
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN4@SSL_set_ac:
; Line 3547
	mov	DWORD PTR [esi+132], 0
; Line 3545
	mov	eax, DWORD PTR [esi+144]
	test	eax, eax
	je	SHORT $LN9@SSL_set_ac
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN9@SSL_set_ac:
; Line 3547
	mov	DWORD PTR [esi+144], 0
	pop	esi
; Line 2805
	ret	0
_SSL_set_accept_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_connect_state
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_set_connect_state PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2808
	push	esi
; Line 2809
	mov	esi, DWORD PTR _s$[esp]
; Line 2814
	push	esi
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+36], 0
	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 20480		; 00005000H
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [esi+32], eax
	call	_ssl_clear_cipher_ctx
; Line 3545
	mov	eax, DWORD PTR [esi+132]
; Line 2814
	add	esp, 4
; Line 3545
	test	eax, eax
	je	SHORT $LN4@SSL_set_co
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN4@SSL_set_co:
; Line 3547
	mov	DWORD PTR [esi+132], 0
; Line 3545
	mov	eax, DWORD PTR [esi+144]
	test	eax, eax
	je	SHORT $LN9@SSL_set_co
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN9@SSL_set_co:
; Line 3547
	mov	DWORD PTR [esi+144], 0
	pop	esi
; Line 2817
	ret	0
_SSL_set_connect_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_ssl_method
_TEXT	SEGMENT
_s$ = 8							; size = 4
_meth$ = 12						; size = 4
_SSL_set_ssl_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2668
	push	ebx
	push	esi
; Line 2672
	mov	esi, DWORD PTR _s$[esp+4]
	or	ebx, -1
	push	edi
	mov	edi, DWORD PTR _meth$[esp+8]
	mov	ecx, DWORD PTR [esi+8]
	lea	edx, DWORD PTR [ebx+2]
	cmp	ecx, edi
	je	SHORT $LN11@SSL_set_ss
; Line 2673
	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN3@SSL_set_ss
; Line 2674
	xor	ebx, ebx
	cmp	eax, DWORD PTR [ecx+20]
	sete	bl
$LN3@SSL_set_ss:
; Line 2676
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edi]
	jne	SHORT $LN4@SSL_set_ss
; Line 2677
	mov	DWORD PTR [esi+8], edi
	jmp	SHORT $LN5@SSL_set_ss
$LN4@SSL_set_ss:
; Line 2679
	mov	eax, DWORD PTR [ecx+12]
	push	esi
	call	eax
; Line 2680
	mov	DWORD PTR [esi+8], edi
; Line 2681
	mov	eax, DWORD PTR [edi+4]
	push	esi
	call	eax
	add	esp, 8
	mov	edx, eax
$LN5@SSL_set_ss:
; Line 2684
	cmp	ebx, 1
	jne	SHORT $LN6@SSL_set_ss
; Line 2685
	mov	ecx, DWORD PTR [edi+20]
; Line 2689
	mov	eax, edx
	pop	edi
	mov	DWORD PTR [esi+32], ecx
	pop	esi
	pop	ebx
; Line 2690
	ret	0
$LN6@SSL_set_ss:
; Line 2686
	test	ebx, ebx
	jne	SHORT $LN11@SSL_set_ss
; Line 2687
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+32], eax
$LN11@SSL_set_ss:
; Line 2689
	pop	edi
	pop	esi
	mov	eax, edx
	pop	ebx
; Line 2690
	ret	0
_SSL_set_ssl_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_ssl_method
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_ssl_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2664
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+8]
; Line 2665
	ret	0
_SSL_get_ssl_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_ssl_method
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get_ssl_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2659
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 2660
	ret	0
_SSL_CTX_get_ssl_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_shutdown
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_shutdown PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1067
	mov	ecx, DWORD PTR _s$[esp-4]
	cmp	DWORD PTR [ecx+32], 0
	jne	SHORT $LN2@SSL_shutdo
; Line 1068
	push	1068					; 0000042cH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	276					; 00000114H
; Line 1075
	push	224					; 000000e0H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1076
	or	eax, -1
; Line 1078
	ret	0
$LN2@SSL_shutdo:
; Line 1072
	test	DWORD PTR [ecx+52], 12288		; 00003000H
	jne	SHORT $LN3@SSL_shutdo
; Line 1073
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[esp-4], ecx
	mov	eax, DWORD PTR [eax+36]
	jmp	eax
$LN3@SSL_shutdo:
; Line 1075
	push	1075					; 00000433H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	407					; 00000197H
	push	224					; 000000e0H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1076
	or	eax, -1
; Line 1078
	ret	0
_SSL_shutdown ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_renegotiate_pending
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_renegotiate_pending PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1106
	mov	ecx, DWORD PTR _s$[esp-4]
	xor	eax, eax
	cmp	DWORD PTR [ecx+400], eax
	setne	al
; Line 1107
	ret	0
_SSL_renegotiate_pending ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_renegotiate_abbreviated
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_renegotiate_abbreviated PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1092
	mov	ecx, DWORD PTR _s$[esp-4]
	cmp	DWORD PTR [ecx+400], 0
	jne	SHORT $LN2@SSL_renego
; Line 1093
	mov	DWORD PTR [ecx+400], 1
$LN2@SSL_renego:
; Line 1095
	mov	DWORD PTR [ecx+40], 0
; Line 1097
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[esp-4], ecx
	mov	eax, DWORD PTR [eax+40]
	jmp	eax
_SSL_renegotiate_abbreviated ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_renegotiate
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_renegotiate PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1082
	mov	ecx, DWORD PTR _s$[esp-4]
	cmp	DWORD PTR [ecx+400], 0
	jne	SHORT $LN2@SSL_renego
; Line 1083
	mov	DWORD PTR [ecx+400], 1
$LN2@SSL_renego:
; Line 1085
	mov	DWORD PTR [ecx+40], 1
; Line 1087
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[esp-4], ecx
	mov	eax, DWORD PTR [eax+40]
	jmp	eax
_SSL_renegotiate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_do_handshake
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_do_handshake PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2775
	push	esi
; Line 2778
	mov	esi, DWORD PTR _s$[esp]
	push	edi
	mov	edi, 1
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN2@SSL_do_han
; Line 2779
	push	2779					; 00000adbH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	144					; 00000090H
	push	180					; 000000b4H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 2780
	or	eax, -1
	pop	edi
	pop	esi
; Line 2789
	ret	0
$LN2@SSL_do_han:
; Line 2783
	mov	eax, DWORD PTR [esi+8]
	push	esi
	mov	eax, DWORD PTR [eax+44]
	call	eax
	add	esp, 4
	test	DWORD PTR [esi+52], 28672		; 00007000H
; Line 2785
	je	SHORT $LN3@SSL_do_han
; Line 2786
	mov	eax, DWORD PTR [esi+32]
	push	esi
	call	eax
	add	esp, 4
	mov	edi, eax
$LN3@SSL_do_han:
; Line 2788
	mov	eax, edi
	pop	edi
	pop	esi
; Line 2789
	ret	0
_SSL_do_handshake ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_ciphers
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_ciphers PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1325
	mov	ecx, DWORD PTR _s$[esp-4]
	test	ecx, ecx
	je	SHORT $LN5@SSL_get_ci
; Line 1326
	mov	eax, DWORD PTR [ecx+116]
	test	eax, eax
	jne	SHORT $LN1@SSL_get_ci
; Line 1328
	mov	eax, DWORD PTR [ecx+228]
	test	eax, eax
	je	SHORT $LN5@SSL_get_ci
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	jne	SHORT $LN1@SSL_get_ci
$LN5@SSL_get_ci:
; Line 1332
	xor	eax, eax
$LN1@SSL_get_ci:
; Line 1333
	ret	0
_SSL_get_ciphers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_ssl_version
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_meth$ = 12						; size = 4
_SSL_CTX_set_ssl_version PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 279
	mov	ecx, DWORD PTR _ctx$[esp-4]
; Line 281
	mov	eax, OFFSET ??_C@_05NHFKDGAI@SSLv2?$AA@
	mov	edx, DWORD PTR _meth$[esp-4]
	push	esi
	mov	esi, OFFSET ??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@
	push	DWORD PTR [ecx+176]
	mov	DWORD PTR [ecx], edx
	cmp	DWORD PTR [edx], 2
	cmovne	eax, esi
	push	eax
	lea	eax, DWORD PTR [ecx+8]
	push	eax
	lea	eax, DWORD PTR [ecx+4]
	push	eax
	push	edx
	call	_ssl_create_cipher_list
	add	esp, 20					; 00000014H
	pop	esi
; Line 286
	test	eax, eax
	je	SHORT $LN3@SSL_CTX_se
	push	eax
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@SSL_CTX_se
; Line 291
	mov	eax, 1
; Line 292
	ret	0
$LN3@SSL_CTX_se:
; Line 287
	push	288					; 00000120H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	230					; 000000e6H
	push	170					; 000000aaH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 289
	xor	eax, eax
; Line 292
	ret	0
_SSL_CTX_set_ssl_version ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_version
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_version PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2847
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, 771				; 00000303H
	jne	SHORT $LN2@SSL_get_ve
; Line 2848
	mov	eax, OFFSET ??_C@_07KDKGANMO@TLSv1?42?$AA@
; Line 2865
	ret	0
$LN2@SSL_get_ve:
; Line 2849
	cmp	ecx, 770				; 00000302H
	jne	SHORT $LN4@SSL_get_ve
; Line 2850
	mov	eax, OFFSET ??_C@_07IIILFOAN@TLSv1?41?$AA@
; Line 2865
	ret	0
$LN4@SSL_get_ve:
; Line 2851
	cmp	ecx, 769				; 00000301H
	jne	SHORT $LN6@SSL_get_ve
; Line 2852
	mov	eax, OFFSET ??_C@_05LLIBCOJ@TLSv1?$AA@
; Line 2865
	ret	0
$LN6@SSL_get_ve:
; Line 2853
	cmp	ecx, 768				; 00000300H
	jne	SHORT $LN8@SSL_get_ve
; Line 2854
	mov	eax, OFFSET ??_C@_05MOEBAHEJ@SSLv3?$AA@
; Line 2865
	ret	0
$LN8@SSL_get_ve:
; Line 2855
	cmp	ecx, 2
	jne	SHORT $LN10@SSL_get_ve
; Line 2856
	mov	eax, OFFSET ??_C@_05NHFKDGAI@SSLv2?$AA@
; Line 2865
	ret	0
$LN10@SSL_get_ve:
; Line 2857
	cmp	ecx, 256				; 00000100H
	jne	SHORT $LN12@SSL_get_ve
; Line 2858
	mov	eax, OFFSET ??_C@_08PILLCKKM@DTLSv0?49?$AA@
; Line 2865
	ret	0
$LN12@SSL_get_ve:
; Line 2859
	cmp	ecx, 65279				; 0000feffH
	jne	SHORT $LN14@SSL_get_ve
; Line 2860
	mov	eax, OFFSET ??_C@_06JHFCDNFO@DTLSv1?$AA@
; Line 2865
	ret	0
$LN14@SSL_get_ve:
; Line 2861
	cmp	ecx, 65277				; 0000fefdH
	mov	eax, OFFSET ??_C@_08KDPDJEAC@DTLSv1?42?$AA@
	mov	edx, OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	cmovne	eax, edx
; Line 2865
	ret	0
_SSL_get_version ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_error
_TEXT	SEGMENT
_s$ = 8							; size = 4
_i$ = 12						; size = 4
_SSL_get_error PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2693
	push	edi
; Line 2698
	mov	edi, DWORD PTR _i$[esp]
	test	edi, edi
	jle	SHORT $LN2@SSL_get_er
; Line 2699
	xor	eax, eax
	pop	edi
; Line 2772
	ret	0
$LN2@SSL_get_er:
; Line 2705
	call	_ERR_peek_error
	mov	ecx, eax
	test	ecx, ecx
	je	SHORT $LN5@SSL_get_er
; Line 2706
	xor	eax, eax
	and	ecx, -16777216				; ff000000H
	cmp	ecx, 33554432				; 02000000H
	pop	edi
	sete	al
	lea	eax, DWORD PTR [eax*4+1]
; Line 2772
	ret	0
$LN5@SSL_get_er:
	push	ebx
	push	esi
; Line 2712
	mov	esi, DWORD PTR _s$[esp+8]
	test	edi, edi
	jns	$LN44@SSL_get_er
	cmp	DWORD PTR [esi+24], 3
	jne	SHORT $LN15@SSL_get_er
; Line 694
	mov	ebx, DWORD PTR [esi+12]
; Line 2714
	push	1
	push	ebx
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN46@SSL_get_er
; Line 2716
	push	2
	push	ebx
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN47@SSL_get_er
; Line 2727
	push	4
	push	ebx
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN45@SSL_get_er
$LN15@SSL_get_er:
; Line 2738
	cmp	DWORD PTR [esi+24], 2
	jne	SHORT $LN25@SSL_get_er
; Line 699
	mov	ebx, DWORD PTR [esi+16]
; Line 2740
	push	2
	push	ebx
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	SHORT $LN17@SSL_get_er
$LN47@SSL_get_er:
	pop	esi
	pop	ebx
; Line 2741
	mov	eax, 3
	pop	edi
; Line 2772
	ret	0
$LN17@SSL_get_er:
; Line 2742
	push	1
	push	ebx
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	SHORT $LN19@SSL_get_er
$LN46@SSL_get_er:
	pop	esi
	pop	ebx
; Line 2746
	mov	eax, 2
	pop	edi
; Line 2772
	ret	0
$LN19@SSL_get_er:
; Line 2747
	push	4
	push	ebx
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	SHORT $LN25@SSL_get_er
$LN45@SSL_get_er:
; Line 2748
	push	ebx
	call	_BIO_get_retry_reason
	mov	ecx, eax
	add	esp, 4
; Line 2749
	cmp	ecx, 2
	jne	SHORT $LN22@SSL_get_er
; Line 2750
	pop	esi
	pop	ebx
	lea	eax, DWORD PTR [ecx+5]
	pop	edi
; Line 2772
	ret	0
$LN22@SSL_get_er:
	pop	esi
; Line 2751
	cmp	ecx, 3
	mov	eax, 5
	mov	edx, 8
	pop	ebx
	cmove	eax, edx
	pop	edi
; Line 2772
	ret	0
$LN25@SSL_get_er:
; Line 2757
	cmp	DWORD PTR [esi+24], 4
	jne	SHORT $LN26@SSL_get_er
; Line 2758
	pop	esi
	pop	ebx
	mov	eax, 4
	pop	edi
; Line 2772
	ret	0
$LN26@SSL_get_er:
; Line 2761
	test	edi, edi
$LN44@SSL_get_er:
	jne	SHORT $LN30@SSL_get_er
; Line 2762
	cmp	DWORD PTR [esi], 2
	jne	SHORT $LN28@SSL_get_er
; Line 2764
	pop	esi
	pop	ebx
	mov	eax, 6
	pop	edi
; Line 2772
	ret	0
$LN28@SSL_get_er:
; Line 2766
	test	BYTE PTR [esi+48], 2
	je	SHORT $LN30@SSL_get_er
	mov	eax, DWORD PTR [esi+88]
	cmp	DWORD PTR [eax+388], 0
; Line 2768
	mov	eax, 6
	je	SHORT $LN42@SSL_get_er
$LN30@SSL_get_er:
; Line 2771
	mov	eax, 5
$LN42@SSL_get_er:
	pop	esi
	pop	ebx
	pop	edi
; Line 2772
	ret	0
_SSL_get_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_callback_ctrl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cmd$ = 12						; size = 4
_fp$ = 16						; size = 4
_SSL_CTX_callback_ctrl PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1285
	mov	edx, DWORD PTR _cmd$[esp-4]
; Line 1294
	mov	eax, DWORD PTR _ctx$[esp-4]
	cmp	edx, 15					; 0000000fH
	je	SHORT $LN4@SSL_CTX_ca
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _cmd$[esp-4], edx
	mov	DWORD PTR _ctx$[esp-4], eax
	mov	eax, DWORD PTR [ecx+112]
	jmp	eax
$LN4@SSL_CTX_ca:
; Line 1287
	mov	ecx, DWORD PTR _fp$[esp-4]
	mov	DWORD PTR [eax+184], ecx
; Line 1291
	mov	eax, 1
; Line 1296
	ret	0
_SSL_CTX_callback_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_ctrl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cmd$ = 12						; size = 4
_larg$ = 16						; size = 4
_parg$ = 20						; size = 4
_SSL_CTX_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1191
	mov	edx, DWORD PTR _ctx$[esp-4]
	test	edx, edx
	jne	SHORT $LN6@SSL_CTX_ct
; Line 1192
	mov	eax, DWORD PTR _cmd$[esp-4]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN7@SSL_CTX_ct
	cmp	eax, 98					; 00000062H
	je	SHORT $LN8@SSL_CTX_ct
	cmp	eax, 102				; 00000066H
	je	SHORT $LN8@SSL_CTX_ct
; Line 1201
	xor	eax, eax
; Line 1281
	ret	0
$LN8@SSL_CTX_ct:
; Line 1199
	push	0
	push	DWORD PTR _parg$[esp]
	push	0
	call	_tls1_set_sigalgs_list
	add	esp, 12					; 0000000cH
; Line 1281
	ret	0
$LN7@SSL_CTX_ct:
; Line 1195
	push	DWORD PTR _parg$[esp-4]
	push	0
	push	0
	call	_tls1_set_curves_list
	add	esp, 12					; 0000000cH
; Line 1281
	ret	0
$LN6@SSL_CTX_ct:
	push	esi
; Line 1205
	mov	esi, DWORD PTR _cmd$[esp]
	lea	eax, DWORD PTR [esi-16]
	cmp	eax, 84					; 00000054H
	ja	$LN40@SSL_CTX_ct
	movzx	ecx, BYTE PTR $LN42@SSL_CTX_ct[eax]
	jmp	DWORD PTR $LN45@SSL_CTX_ct[ecx*4]
$LN10@SSL_CTX_ct:
; Line 1207
	mov	eax, DWORD PTR [edx+180]
	pop	esi
; Line 1281
	ret	0
$LN11@SSL_CTX_ct:
; Line 1209
	mov	eax, DWORD PTR [edx+180]
; Line 1210
	mov	ecx, DWORD PTR _larg$[esp]
	mov	DWORD PTR [edx+180], ecx
	pop	esi
; Line 1281
	ret	0
$LN12@SSL_CTX_ct:
; Line 1214
	mov	eax, DWORD PTR _parg$[esp]
	mov	DWORD PTR [edx+188], eax
; Line 1215
	mov	eax, 1
	pop	esi
; Line 1281
	ret	0
$LN13@SSL_CTX_ct:
; Line 1218
	mov	eax, DWORD PTR [edx+172]
	pop	esi
; Line 1281
	ret	0
$LN14@SSL_CTX_ct:
; Line 1220
	mov	eax, DWORD PTR [edx+172]
; Line 1221
	mov	ecx, DWORD PTR _larg$[esp]
	mov	DWORD PTR [edx+172], ecx
	pop	esi
; Line 1281
	ret	0
$LN15@SSL_CTX_ct:
; Line 1225
	mov	eax, DWORD PTR [edx+20]
; Line 1226
	mov	ecx, DWORD PTR _larg$[esp]
	mov	DWORD PTR [edx+20], ecx
	pop	esi
; Line 1281
	ret	0
$LN16@SSL_CTX_ct:
; Line 1229
	mov	eax, DWORD PTR [edx+20]
	pop	esi
; Line 1281
	ret	0
$LN17@SSL_CTX_ct:
; Line 1231
	mov	eax, DWORD PTR [edx+32]
; Line 1232
	mov	ecx, DWORD PTR _larg$[esp]
	mov	DWORD PTR [edx+32], ecx
	pop	esi
; Line 1281
	ret	0
$LN18@SSL_CTX_ct:
; Line 1235
	mov	eax, DWORD PTR [edx+32]
	pop	esi
; Line 1281
	ret	0
$LN19@SSL_CTX_ct:
; Line 1238
	push	DWORD PTR [edx+16]
	call	_lh_num_items
	add	esp, 4
	pop	esi
; Line 1281
	ret	0
$LN20@SSL_CTX_ct:
; Line 1240
	mov	eax, DWORD PTR [edx+52]
	pop	esi
; Line 1281
	ret	0
$LN21@SSL_CTX_ct:
; Line 1242
	mov	eax, DWORD PTR [edx+60]
	pop	esi
; Line 1281
	ret	0
$LN22@SSL_CTX_ct:
; Line 1244
	mov	eax, DWORD PTR [edx+56]
	pop	esi
; Line 1281
	ret	0
$LN23@SSL_CTX_ct:
; Line 1246
	mov	eax, DWORD PTR [edx+64]
	pop	esi
; Line 1281
	ret	0
$LN24@SSL_CTX_ct:
; Line 1248
	mov	eax, DWORD PTR [edx+72]
	pop	esi
; Line 1281
	ret	0
$LN25@SSL_CTX_ct:
; Line 1250
	mov	eax, DWORD PTR [edx+68]
	pop	esi
; Line 1281
	ret	0
$LN26@SSL_CTX_ct:
; Line 1252
	mov	eax, DWORD PTR [edx+88]
	pop	esi
; Line 1281
	ret	0
$LN27@SSL_CTX_ct:
; Line 1254
	mov	eax, DWORD PTR [edx+92]
	pop	esi
; Line 1281
	ret	0
$LN28@SSL_CTX_ct:
; Line 1256
	mov	eax, DWORD PTR [edx+76]
	pop	esi
; Line 1281
	ret	0
$LN29@SSL_CTX_ct:
; Line 1258
	mov	eax, DWORD PTR [edx+80]
	pop	esi
; Line 1281
	ret	0
$LN30@SSL_CTX_ct:
; Line 1260
	mov	eax, DWORD PTR [edx+84]
	pop	esi
; Line 1281
	ret	0
$LN31@SSL_CTX_ct:
; Line 1262
	mov	eax, DWORD PTR [edx+164]
	or	eax, DWORD PTR _larg$[esp]
	mov	DWORD PTR [edx+164], eax
	pop	esi
; Line 1281
	ret	0
$LN32@SSL_CTX_ct:
; Line 1264
	mov	eax, DWORD PTR _larg$[esp]
	not	eax
	and	eax, DWORD PTR [edx+164]
	mov	DWORD PTR [edx+164], eax
	pop	esi
; Line 1281
	ret	0
$LN33@SSL_CTX_ct:
; Line 1266
	mov	eax, DWORD PTR [edx+168]
	or	eax, DWORD PTR _larg$[esp]
	mov	DWORD PTR [edx+168], eax
	pop	esi
; Line 1281
	ret	0
$LN34@SSL_CTX_ct:
; Line 1268
	mov	eax, DWORD PTR _larg$[esp]
	not	eax
	and	eax, DWORD PTR [edx+168]
	mov	DWORD PTR [edx+168], eax
	pop	esi
; Line 1281
	ret	0
$LN35@SSL_CTX_ct:
; Line 1270
	mov	ecx, DWORD PTR _larg$[esp]
	lea	eax, DWORD PTR [ecx-512]
	cmp	eax, 15872				; 00003e00H
	ja	SHORT $LN37@SSL_CTX_ct
; Line 1272
	mov	DWORD PTR [edx+248], ecx
; Line 1273
	mov	eax, 1
	pop	esi
; Line 1281
	ret	0
$LN37@SSL_CTX_ct:
; Line 1271
	xor	eax, eax
	pop	esi
; Line 1281
	ret	0
$LN38@SSL_CTX_ct:
; Line 1275
	mov	ecx, DWORD PTR [edx+176]
	pop	esi
	mov	eax, DWORD PTR [ecx+56]
	or	eax, DWORD PTR _larg$[esp-4]
	mov	DWORD PTR [ecx+56], eax
; Line 1281
	ret	0
$LN39@SSL_CTX_ct:
; Line 1277
	mov	ecx, DWORD PTR [edx+176]
	mov	eax, DWORD PTR _larg$[esp]
	not	eax
	pop	esi
	and	eax, DWORD PTR [ecx+56]
	mov	DWORD PTR [ecx+56], eax
; Line 1281
	ret	0
$LN40@SSL_CTX_ct:
; Line 1279
	push	DWORD PTR _parg$[esp]
	mov	eax, DWORD PTR [edx]
	push	DWORD PTR _larg$[esp+4]
	push	esi
	mov	eax, DWORD PTR [eax+68]
	push	edx
	call	eax
	add	esp, 16					; 00000010H
	pop	esi
; Line 1281
	ret	0
$LN45@SSL_CTX_ct:
	DD	$LN12@SSL_CTX_ct
	DD	$LN19@SSL_CTX_ct
	DD	$LN20@SSL_CTX_ct
	DD	$LN21@SSL_CTX_ct
	DD	$LN22@SSL_CTX_ct
	DD	$LN23@SSL_CTX_ct
	DD	$LN24@SSL_CTX_ct
	DD	$LN25@SSL_CTX_ct
	DD	$LN26@SSL_CTX_ct
	DD	$LN27@SSL_CTX_ct
	DD	$LN28@SSL_CTX_ct
	DD	$LN29@SSL_CTX_ct
	DD	$LN30@SSL_CTX_ct
	DD	$LN31@SSL_CTX_ct
	DD	$LN33@SSL_CTX_ct
	DD	$LN10@SSL_CTX_ct
	DD	$LN11@SSL_CTX_ct
	DD	$LN15@SSL_CTX_ct
	DD	$LN16@SSL_CTX_ct
	DD	$LN17@SSL_CTX_ct
	DD	$LN18@SSL_CTX_ct
	DD	$LN13@SSL_CTX_ct
	DD	$LN14@SSL_CTX_ct
	DD	$LN35@SSL_CTX_ct
	DD	$LN32@SSL_CTX_ct
	DD	$LN34@SSL_CTX_ct
	DD	$LN38@SSL_CTX_ct
	DD	$LN39@SSL_CTX_ct
	DD	$LN40@SSL_CTX_ct
$LN42@SSL_CTX_ct:
	DB	0
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	21					; 00000015H
	DB	22					; 00000016H
	DB	23					; 00000017H
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	24					; 00000018H
	DB	25					; 00000019H
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	26					; 0000001aH
	DB	27					; 0000001bH
_SSL_CTX_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_callback_ctrl
_TEXT	SEGMENT
_s$ = 8							; size = 4
_cmd$ = 12						; size = 4
_fp$ = 16						; size = 4
_SSL_callback_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1169
	mov	edx, DWORD PTR _cmd$[esp-4]
; Line 1178
	mov	eax, DWORD PTR _s$[esp-4]
	cmp	edx, 15					; 0000000fH
	je	SHORT $LN4@SSL_callba
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _cmd$[esp-4], edx
	mov	DWORD PTR _s$[esp-4], eax
	mov	eax, DWORD PTR [ecx+108]
	jmp	eax
$LN4@SSL_callba:
; Line 1171
	mov	ecx, DWORD PTR _fp$[esp-4]
	mov	DWORD PTR [eax+100], ecx
; Line 1175
	mov	eax, 1
; Line 1180
	ret	0
_SSL_callback_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_ctrl
_TEXT	SEGMENT
_s$ = 8							; size = 4
_cmd$ = 12						; size = 4
_larg$ = 16						; size = 4
_parg$ = 20						; size = 4
_SSL_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1113
	mov	edx, DWORD PTR _cmd$[esp-4]
	lea	eax, DWORD PTR [edx-16]
	cmp	eax, 94					; 0000005eH
	ja	$LN23@SSL_ctrl
	movzx	eax, BYTE PTR $LN27@SSL_ctrl[eax]
	jmp	DWORD PTR $LN30@SSL_ctrl[eax*4]
$LN4@SSL_ctrl:
; Line 1115
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+96]
; Line 1165
	ret	0
$LN5@SSL_ctrl:
; Line 1117
	mov	edx, DWORD PTR _s$[esp-4]
; Line 1118
	mov	ecx, DWORD PTR _larg$[esp-4]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR [edx+96], ecx
; Line 1165
	ret	0
$LN6@SSL_ctrl:
; Line 1122
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR _parg$[esp-4]
	mov	DWORD PTR [eax+104], ecx
; Line 1143
	mov	eax, 1
; Line 1165
	ret	0
$LN7@SSL_ctrl:
; Line 1126
	mov	ecx, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [ecx+256]
	or	eax, DWORD PTR _larg$[esp-4]
	mov	DWORD PTR [ecx+256], eax
; Line 1165
	ret	0
$LN8@SSL_ctrl:
; Line 1128
	mov	ecx, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR _larg$[esp-4]
	not	eax
	and	eax, DWORD PTR [ecx+256]
	mov	DWORD PTR [ecx+256], eax
; Line 1165
	ret	0
$LN9@SSL_ctrl:
; Line 1130
	mov	ecx, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [ecx+260]
	or	eax, DWORD PTR _larg$[esp-4]
	mov	DWORD PTR [ecx+260], eax
; Line 1165
	ret	0
$LN10@SSL_ctrl:
; Line 1132
	mov	ecx, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR _larg$[esp-4]
	not	eax
	and	eax, DWORD PTR [ecx+260]
	mov	DWORD PTR [ecx+260], eax
; Line 1165
	ret	0
$LN11@SSL_ctrl:
; Line 1134
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+264]
; Line 1165
	ret	0
$LN12@SSL_ctrl:
; Line 1136
	mov	edx, DWORD PTR _s$[esp-4]
; Line 1137
	mov	ecx, DWORD PTR _larg$[esp-4]
	mov	eax, DWORD PTR [edx+264]
	mov	DWORD PTR [edx+264], ecx
; Line 1165
	ret	0
$LN13@SSL_ctrl:
; Line 1140
	mov	ecx, DWORD PTR _larg$[esp-4]
	lea	eax, DWORD PTR [ecx-512]
	cmp	eax, 15872				; 00003e00H
	ja	SHORT $LN15@SSL_ctrl
; Line 1142
	mov	eax, DWORD PTR _s$[esp-4]
	mov	DWORD PTR [eax+276], ecx
; Line 1143
	mov	eax, 1
; Line 1165
	ret	0
$LN15@SSL_ctrl:
; Line 1141
	xor	eax, eax
; Line 1165
	ret	0
$LN16@SSL_ctrl:
; Line 1145
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+88]
	test	eax, eax
	je	SHORT $LN15@SSL_ctrl
; Line 1146
	mov	eax, DWORD PTR [eax+1048]
; Line 1165
	ret	0
$LN18@SSL_ctrl:
; Line 1150
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR [eax+152]
	mov	eax, DWORD PTR [ecx+56]
	or	eax, DWORD PTR _larg$[esp-4]
	mov	DWORD PTR [ecx+56], eax
; Line 1165
	ret	0
$LN20@SSL_ctrl:
; Line 1152
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR [eax+152]
	mov	eax, DWORD PTR _larg$[esp-4]
	not	eax
	and	eax, DWORD PTR [ecx+56]
	mov	DWORD PTR [ecx+56], eax
; Line 1165
	ret	0
$LN21@SSL_ctrl:
; Line 1155
	mov	ecx, DWORD PTR _parg$[esp-4]
	test	ecx, ecx
	je	SHORT $LN22@SSL_ctrl
; Line 1156
	mov	edx, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [edx+152]
	mov	eax, DWORD PTR [eax+340]
	test	eax, eax
	je	SHORT $LN15@SSL_ctrl
; Line 1158
	mov	DWORD PTR [ecx], eax
; Line 1159
	mov	eax, DWORD PTR [edx+152]
	mov	eax, DWORD PTR [eax+344]
; Line 1165
	ret	0
$LN22@SSL_ctrl:
; Line 1161
	mov	eax, DWORD PTR _s$[esp-4]
	push	0
	push	0
	mov	eax, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+76]
	call	eax
	add	esp, 8
; Line 1165
	ret	0
$LN23@SSL_ctrl:
; Line 1163
	mov	eax, DWORD PTR _s$[esp-4]
	mov	DWORD PTR _s$[esp-4], eax
	mov	DWORD PTR _cmd$[esp-4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+64]
	jmp	eax
	npad	1
$LN30@SSL_ctrl:
; Line 1165
	DD	$LN6@SSL_ctrl
	DD	$LN7@SSL_ctrl
	DD	$LN9@SSL_ctrl
	DD	$LN4@SSL_ctrl
	DD	$LN5@SSL_ctrl
	DD	$LN11@SSL_ctrl
	DD	$LN12@SSL_ctrl
	DD	$LN13@SSL_ctrl
	DD	$LN16@SSL_ctrl
	DD	$LN8@SSL_ctrl
	DD	$LN10@SSL_ctrl
	DD	$LN18@SSL_ctrl
	DD	$LN20@SSL_ctrl
	DD	$LN21@SSL_ctrl
	DD	$LN23@SSL_ctrl
$LN27@SSL_ctrl:
	DB	0
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	1
	DB	2
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	3
	DB	4
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	5
	DB	6
	DB	7
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	13					; 0000000dH
_SSL_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_write
_TEXT	SEGMENT
_s$ = 8							; size = 4
_buf$ = 12						; size = 4
_num$ = 16						; size = 4
_SSL_write PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1045
	mov	ecx, DWORD PTR _s$[esp-4]
	cmp	DWORD PTR [ecx+32], 0
	jne	SHORT $LN2@SSL_write
; Line 1046
	push	1046					; 00000416H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	276					; 00000114H
	push	208					; 000000d0H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1047
	or	eax, -1
; Line 1056
	ret	0
$LN2@SSL_write:
; Line 1050
	test	BYTE PTR [ecx+48], 1
	je	SHORT $LN3@SSL_write
; Line 1052
	push	1052					; 0000041cH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	207					; 000000cfH
	push	208					; 000000d0H
	push	20					; 00000014H
	mov	DWORD PTR [ecx+24], 1
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	or	eax, -1
; Line 1056
	ret	0
$LN3@SSL_write:
; Line 1055
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[esp-4], ecx
	mov	eax, DWORD PTR [eax+32]
	jmp	eax
_SSL_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_peek
_TEXT	SEGMENT
_s$ = 8							; size = 4
_buf$ = 12						; size = 4
_num$ = 16						; size = 4
_SSL_peek PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1032
	mov	ecx, DWORD PTR _s$[esp-4]
	cmp	DWORD PTR [ecx+32], 0
	jne	SHORT $LN2@SSL_peek
; Line 1033
	push	1033					; 00000409H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	276					; 00000114H
	push	270					; 0000010eH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1034
	or	eax, -1
; Line 1041
	ret	0
$LN2@SSL_peek:
; Line 1037
	test	BYTE PTR [ecx+48], 2
	je	SHORT $LN3@SSL_peek
; Line 1038
	xor	eax, eax
; Line 1041
	ret	0
$LN3@SSL_peek:
; Line 1040
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[esp-4], ecx
	mov	eax, DWORD PTR [eax+28]
	jmp	eax
_SSL_peek ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_read
_TEXT	SEGMENT
_s$ = 8							; size = 4
_buf$ = 12						; size = 4
_num$ = 16						; size = 4
_SSL_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1018
	mov	ecx, DWORD PTR _s$[esp-4]
	cmp	DWORD PTR [ecx+32], 0
	jne	SHORT $LN2@SSL_read
; Line 1019
	push	1019					; 000003fbH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	276					; 00000114H
	push	223					; 000000dfH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1020
	or	eax, -1
; Line 1028
	ret	0
$LN2@SSL_read:
; Line 1023
	test	BYTE PTR [ecx+48], 2
	je	SHORT $LN3@SSL_read
; Line 1024
	mov	DWORD PTR [ecx+24], 1
; Line 1025
	xor	eax, eax
; Line 1028
	ret	0
$LN3@SSL_read:
; Line 1027
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[esp-4], ecx
	mov	eax, DWORD PTR [eax+24]
	jmp	eax
_SSL_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_connect
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_connect PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1003
	push	esi
; Line 1004
	mov	esi, DWORD PTR _s$[esp]
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN2@SSL_connec
; Line 1006
	push	esi
	call	_SSL_set_connect_state
	add	esp, 4
$LN2@SSL_connec:
; Line 1008
	mov	eax, DWORD PTR [esi+8]
	push	esi
	mov	eax, DWORD PTR [eax+20]
	call	eax
	add	esp, 4
	pop	esi
; Line 1009
	ret	0
_SSL_connect ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_accept
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_accept PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 994
	push	esi
; Line 995
	mov	esi, DWORD PTR _s$[esp]
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN2@SSL_accept
; Line 997
	push	esi
	call	_SSL_set_accept_state
	add	esp, 4
$LN2@SSL_accept:
; Line 999
	mov	eax, DWORD PTR [esi+8]
	push	esi
	mov	eax, DWORD PTR [eax+16]
	call	eax
	add	esp, 4
	pop	esi
; Line 1000
	ret	0
_SSL_accept ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_free
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 563
	push	esi
; Line 566
	mov	esi, DWORD PTR _s$[esp]
	test	esi, esi
	je	$LN1@SSL_free
; Line 569
	push	569					; 00000239H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	16					; 00000010H
	lea	eax, DWORD PTR [esi+252]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 573
	test	eax, eax
	jg	$LN1@SSL_free
; Line 582
	mov	eax, DWORD PTR [esi+112]
	test	eax, eax
	je	SHORT $LN4@SSL_free
; Line 583
	push	eax
	call	_X509_VERIFY_PARAM_free
	add	esp, 4
$LN4@SSL_free:
; Line 585
	lea	eax, DWORD PTR [esi+240]
	push	eax
	push	esi
	push	1
	call	_CRYPTO_free_ex_data
; Line 587
	mov	eax, DWORD PTR [esi+20]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@SSL_free
; Line 589
	mov	ecx, DWORD PTR [esi+16]
	cmp	eax, ecx
	jne	SHORT $LN6@SSL_free
; Line 590
	push	ecx
	call	_BIO_pop
	add	esp, 4
	mov	DWORD PTR [esi+16], eax
$LN6@SSL_free:
; Line 592
	push	DWORD PTR [esi+20]
	call	_BIO_free
	add	esp, 4
; Line 593
	mov	DWORD PTR [esi+20], 0
$LN5@SSL_free:
; Line 595
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN7@SSL_free
; Line 596
	push	eax
	call	_BIO_free_all
	add	esp, 4
$LN7@SSL_free:
; Line 597
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN8@SSL_free
	cmp	eax, DWORD PTR [esi+12]
	je	SHORT $LN8@SSL_free
; Line 598
	push	eax
	call	_BIO_free_all
	add	esp, 4
$LN8@SSL_free:
; Line 600
	mov	eax, DWORD PTR [esi+60]
	test	eax, eax
	je	SHORT $LN9@SSL_free
; Line 601
	push	eax
	call	_BUF_MEM_free
	add	esp, 4
$LN9@SSL_free:
; Line 604
	mov	eax, DWORD PTR [esi+116]
	test	eax, eax
	je	SHORT $LN10@SSL_free
; Line 605
	push	eax
	call	_sk_free
	add	esp, 4
$LN10@SSL_free:
; Line 606
	mov	eax, DWORD PTR [esi+120]
	test	eax, eax
	je	SHORT $LN11@SSL_free
; Line 607
	push	eax
	call	_sk_free
	add	esp, 4
$LN11@SSL_free:
; Line 610
	cmp	DWORD PTR [esi+192], 0
	je	SHORT $LN12@SSL_free
; Line 611
	push	esi
	call	_ssl_clear_bad_session
; Line 612
	push	DWORD PTR [esi+192]
	call	_SSL_SESSION_free
	add	esp, 8
$LN12@SSL_free:
; Line 615
	push	esi
	call	_ssl_clear_cipher_ctx
; Line 3545
	mov	eax, DWORD PTR [esi+132]
; Line 615
	add	esp, 4
; Line 3545
	test	eax, eax
	je	SHORT $LN30@SSL_free
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN30@SSL_free:
; Line 3547
	mov	DWORD PTR [esi+132], 0
; Line 3545
	mov	eax, DWORD PTR [esi+144]
	test	eax, eax
	je	SHORT $LN33@SSL_free
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN33@SSL_free:
; Line 3547
	mov	DWORD PTR [esi+144], 0
; Line 619
	mov	eax, DWORD PTR [esi+152]
	test	eax, eax
	je	SHORT $LN13@SSL_free
; Line 620
	push	eax
	call	_ssl_cert_free
	add	esp, 4
$LN13@SSL_free:
; Line 624
	mov	eax, DWORD PTR [esi+288]
	test	eax, eax
	je	SHORT $LN14@SSL_free
; Line 625
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN14@SSL_free:
; Line 626
	mov	eax, DWORD PTR [esi+368]
	test	eax, eax
	je	SHORT $LN15@SSL_free
; Line 627
	push	eax
	call	_SSL_CTX_free
	add	esp, 4
$LN15@SSL_free:
; Line 629
	mov	eax, DWORD PTR [esi+328]
	test	eax, eax
	je	SHORT $LN16@SSL_free
; Line 630
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN16@SSL_free:
; Line 631
	mov	eax, DWORD PTR [esi+336]
	test	eax, eax
	je	SHORT $LN17@SSL_free
; Line 632
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN17@SSL_free:
; Line 634
	mov	eax, DWORD PTR [esi+340]
	test	eax, eax
	je	SHORT $LN18@SSL_free
; Line 635
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN18@SSL_free:
; Line 636
	mov	eax, DWORD PTR [esi+308]
	test	eax, eax
	je	SHORT $LN19@SSL_free
; Line 637
	push	OFFSET _X509_EXTENSION_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN19@SSL_free:
; Line 638
	mov	eax, DWORD PTR [esi+304]
	test	eax, eax
	je	SHORT $LN20@SSL_free
; Line 639
	push	OFFSET _OCSP_RESPID_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN20@SSL_free:
; Line 640
	mov	eax, DWORD PTR [esi+312]
	test	eax, eax
	je	SHORT $LN21@SSL_free
; Line 641
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN21@SSL_free:
; Line 642
	mov	eax, DWORD PTR [esi+468]
	test	eax, eax
	je	SHORT $LN22@SSL_free
; Line 643
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN22@SSL_free:
; Line 646
	mov	eax, DWORD PTR [esi+248]
	test	eax, eax
	je	SHORT $LN23@SSL_free
; Line 647
	push	OFFSET _X509_NAME_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN23@SSL_free:
; Line 649
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN24@SSL_free
; Line 650
	mov	eax, DWORD PTR [eax+12]
	push	esi
	call	eax
	add	esp, 4
$LN24@SSL_free:
; Line 652
	mov	eax, DWORD PTR [esi+228]
	test	eax, eax
	je	SHORT $LN25@SSL_free
; Line 653
	push	eax
	call	_SSL_CTX_free
	add	esp, 4
$LN25@SSL_free:
; Line 661
	mov	eax, DWORD PTR [esi+372]
	test	eax, eax
	je	SHORT $LN26@SSL_free
; Line 662
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN26@SSL_free:
; Line 666
	mov	eax, DWORD PTR [esi+380]
	test	eax, eax
	je	SHORT $LN27@SSL_free
; Line 667
	push	eax
	call	_sk_free
	add	esp, 4
$LN27@SSL_free:
; Line 670
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@SSL_free:
	pop	esi
; Line 671
	ret	0
_SSL_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_certs_clear
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_certs_clear PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 559
	mov	eax, DWORD PTR _s$[esp-4]
	push	DWORD PTR [eax+152]
	call	_ssl_cert_clear_certs
	pop	ecx
; Line 560
	ret	0
_SSL_certs_clear ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get0_param
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_SSL_get0_param PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 554
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	eax, DWORD PTR [eax+112]
; Line 555
	ret	0
_SSL_get0_param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get0_param
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get0_param PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 549
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+240]
; Line 550
	ret	0
_SSL_CTX_get0_param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set1_param
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_vpm$ = 12						; size = 4
_SSL_set1_param PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 544
	mov	eax, DWORD PTR _ssl$[esp-4]
	push	DWORD PTR _vpm$[esp-4]
	push	DWORD PTR [eax+112]
	call	_X509_VERIFY_PARAM_set1
	add	esp, 8
; Line 545
	ret	0
_SSL_set1_param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set1_param
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_vpm$ = 12						; size = 4
_SSL_CTX_set1_param PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 539
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	DWORD PTR _vpm$[esp-4]
	push	DWORD PTR [eax+240]
	call	_X509_VERIFY_PARAM_set1
	add	esp, 8
; Line 540
	ret	0
_SSL_CTX_set1_param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_trust
_TEXT	SEGMENT
_s$ = 8							; size = 4
_trust$ = 12						; size = 4
_SSL_set_trust PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 534
	mov	eax, DWORD PTR _s$[esp-4]
	push	DWORD PTR _trust$[esp-4]
	push	DWORD PTR [eax+112]
	call	_X509_VERIFY_PARAM_set_trust
	add	esp, 8
; Line 535
	ret	0
_SSL_set_trust ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_trust
_TEXT	SEGMENT
_s$ = 8							; size = 4
_trust$ = 12						; size = 4
_SSL_CTX_set_trust PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 529
	mov	eax, DWORD PTR _s$[esp-4]
	push	DWORD PTR _trust$[esp-4]
	push	DWORD PTR [eax+240]
	call	_X509_VERIFY_PARAM_set_trust
	add	esp, 8
; Line 530
	ret	0
_SSL_CTX_set_trust ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_purpose
_TEXT	SEGMENT
_s$ = 8							; size = 4
_purpose$ = 12						; size = 4
_SSL_set_purpose PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 524
	mov	eax, DWORD PTR _s$[esp-4]
	push	DWORD PTR _purpose$[esp-4]
	push	DWORD PTR [eax+112]
	call	_X509_VERIFY_PARAM_set_purpose
	add	esp, 8
; Line 525
	ret	0
_SSL_set_purpose ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_purpose
_TEXT	SEGMENT
_s$ = 8							; size = 4
_purpose$ = 12						; size = 4
_SSL_CTX_set_purpose PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 519
	mov	eax, DWORD PTR _s$[esp-4]
	push	DWORD PTR _purpose$[esp-4]
	push	DWORD PTR [eax+240]
	call	_X509_VERIFY_PARAM_set_purpose
	add	esp, 8
; Line 520
	ret	0
_SSL_CTX_set_purpose ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_session_id_context
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_sid_ctx$ = 12						; size = 4
_sid_ctx_len$ = 16					; size = 4
_SSL_set_session_id_context PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 454
	mov	ecx, DWORD PTR _sid_ctx_len$[esp-4]
	cmp	ecx, 32					; 00000020H
	jbe	SHORT $LN2@SSL_set_se
; Line 455
	push	456					; 000001c8H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	273					; 00000111H
	push	218					; 000000daH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 457
	xor	eax, eax
; Line 463
	ret	0
$LN2@SSL_set_se:
; Line 459
	mov	eax, DWORD PTR _ssl$[esp-4]
; Line 460
	push	ecx
	push	DWORD PTR _sid_ctx$[esp]
	mov	DWORD PTR [eax+156], ecx
	add	eax, 160				; 000000a0H
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 462
	mov	eax, 1
; Line 463
	ret	0
_SSL_set_session_id_context ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_new
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 295
	push	ebx
; Line 298
	mov	ebx, DWORD PTR _ctx$[esp]
	test	ebx, ebx
	jne	SHORT $LN2@SSL_new
; Line 299
	push	299					; 0000012bH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	195					; 000000c3H
	push	186					; 000000baH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 300
	xor	eax, eax
	pop	ebx
; Line 435
	ret	0
$LN2@SSL_new:
; Line 302
	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN3@SSL_new
; Line 303
	push	303					; 0000012fH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	228					; 000000e4H
	push	186					; 000000baH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	ebx
; Line 435
	ret	0
$LN3@SSL_new:
	push	edi
; Line 307
	push	307					; 00000133H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	476					; 000001dcH
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 308
	test	edi, edi
	je	SHORT $LN16@SSL_new
; Line 310
	push	476					; 000001dcH
	push	0
	push	edi
	call	_memset
; Line 316
	mov	ecx, DWORD PTR [ebx+164]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+256], ecx
; Line 317
	mov	eax, DWORD PTR [ebx+168]
	mov	DWORD PTR [edi+260], eax
; Line 318
	mov	eax, DWORD PTR [ebx+172]
	mov	DWORD PTR [edi+264], eax
; Line 319
	mov	DWORD PTR [edi+252], 1
; Line 321
	mov	eax, DWORD PTR [ebx+176]
	test	eax, eax
	je	SHORT $LN5@SSL_new
; Line 332
	push	eax
	call	_ssl_cert_dup
	add	esp, 4
	mov	DWORD PTR [edi+152], eax
; Line 333
	test	eax, eax
	jne	SHORT $LN6@SSL_new
$err$23:
; Line 432
	push	edi
	call	_SSL_free
	add	esp, 4
$LN16@SSL_new:
; Line 433
	push	433					; 000001b1H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	65					; 00000041H
	push	186					; 000000baH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 434
	xor	eax, eax
	pop	edi
	pop	ebx
; Line 435
	ret	0
$LN5@SSL_new:
; Line 336
	mov	DWORD PTR [edi+152], 0
$LN6@SSL_new:
; Line 338
	mov	eax, DWORD PTR [ebx+180]
	mov	DWORD PTR [edi+96], eax
; Line 339
	mov	eax, DWORD PTR [ebx+184]
	mov	DWORD PTR [edi+100], eax
; Line 340
	mov	eax, DWORD PTR [ebx+188]
	mov	DWORD PTR [edi+104], eax
; Line 341
	mov	eax, DWORD PTR [ebx+192]
	mov	DWORD PTR [edi+200], eax
; Line 345
	mov	eax, DWORD PTR [ebx+196]
	mov	DWORD PTR [edi+156], eax
; Line 346
	cmp	eax, 32					; 00000020H
	jbe	SHORT $LN19@SSL_new
	push	OFFSET ??_C@_0CH@MEMCPFFG@s?9?$DOsid_ctx_length?5?$DM?$DN?5sizeof?5s?9?$DOs@
	push	346					; 0000015aH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN19@SSL_new:
; Line 347
	movups	xmm0, XMMWORD PTR [ebx+200]
	movups	XMMWORD PTR [edi+160], xmm0
	movups	xmm0, XMMWORD PTR [ebx+216]
	movups	XMMWORD PTR [edi+176], xmm0
; Line 348
	mov	eax, DWORD PTR [ebx+232]
	mov	DWORD PTR [edi+204], eax
; Line 349
	mov	eax, DWORD PTR [ebx+236]
	mov	DWORD PTR [edi+196], eax
; Line 351
	call	_X509_VERIFY_PARAM_new
	mov	DWORD PTR [edi+112], eax
; Line 352
	test	eax, eax
	je	$err$23
; Line 354
	push	esi
	push	DWORD PTR [ebx+240]
	push	eax
	call	_X509_VERIFY_PARAM_inherit
; Line 359
	mov	eax, DWORD PTR [ebx+244]
; Line 362
	lea	esi, DWORD PTR [ebx+96]
	push	362					; 0000016aH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	mov	DWORD PTR [edi+44], eax
	mov	eax, DWORD PTR [ebx+248]
	push	1
	push	esi
	mov	DWORD PTR [edi+276], eax
	call	_CRYPTO_add_lock
; Line 374
	push	374					; 00000176H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	push	1
	push	esi
	mov	DWORD PTR [edi+228], ebx
	mov	DWORD PTR [edi+280], 0
	mov	DWORD PTR [edi+284], 0
	mov	DWORD PTR [edi+320], 0
	mov	DWORD PTR [edi+296], -1
	mov	DWORD PTR [edi+300], 0
	mov	DWORD PTR [edi+304], 0
	mov	DWORD PTR [edi+308], 0
	mov	DWORD PTR [edi+312], 0
	mov	DWORD PTR [edi+316], -1
	call	_CRYPTO_add_lock
	add	esp, 48					; 00000030H
; Line 375
	mov	DWORD PTR [edi+368], ebx
; Line 377
	mov	eax, DWORD PTR [ebx+460]
	pop	esi
	test	eax, eax
	je	SHORT $LN9@SSL_new
; Line 378
	push	DWORD PTR [ebx+456]
	push	eax
	call	_BUF_memdup
	add	esp, 8
	mov	DWORD PTR [edi+328], eax
; Line 381
	test	eax, eax
	je	$err$23
; Line 383
	mov	eax, DWORD PTR [ebx+456]
	mov	DWORD PTR [edi+324], eax
$LN9@SSL_new:
; Line 386
	mov	eax, DWORD PTR [ebx+468]
	test	eax, eax
	je	SHORT $LN11@SSL_new
; Line 387
	push	DWORD PTR [ebx+464]
	push	eax
	call	_BUF_memdup
	add	esp, 8
	mov	DWORD PTR [edi+336], eax
; Line 390
	test	eax, eax
	je	$err$23
; Line 392
	mov	eax, DWORD PTR [ebx+464]
	mov	DWORD PTR [edi+332], eax
$LN11@SSL_new:
; Line 400
	mov	eax, DWORD PTR [edi+228]
	mov	DWORD PTR [edi+372], 0
	cmp	DWORD PTR [eax+448], 0
	je	SHORT $LN13@SSL_new
; Line 401
	push	402					; 00000192H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	DWORD PTR [eax+452]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+468], eax
; Line 403
	test	eax, eax
	je	$err$23
; Line 405
	mov	ecx, DWORD PTR [edi+228]
	push	DWORD PTR [ecx+452]
	push	DWORD PTR [ecx+448]
	push	eax
	call	_memcpy
; Line 407
	mov	eax, DWORD PTR [edi+228]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+452]
	mov	DWORD PTR [edi+472], eax
$LN13@SSL_new:
; Line 411
	mov	DWORD PTR [edi+236], 0
; Line 413
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+8], eax
; Line 415
	push	edi
	mov	eax, DWORD PTR [eax+4]
	call	eax
	add	esp, 4
	test	eax, eax
	je	$err$23
; Line 418
	mov	eax, DWORD PTR [ebx]
	xor	ecx, ecx
; Line 420
	push	edi
	cmp	DWORD PTR [eax+16], OFFSET _ssl_undefined_function
	setne	cl
	mov	DWORD PTR [edi+36], ecx
	call	_SSL_clear
; Line 422
	lea	eax, DWORD PTR [edi+240]
	push	eax
	push	edi
	push	1
	call	_CRYPTO_new_ex_data
; Line 425
	mov	eax, DWORD PTR [ebx+336]
	add	esp, 16					; 00000010H
	mov	DWORD PTR [edi+220], eax
; Line 426
	mov	eax, DWORD PTR [ebx+340]
	mov	DWORD PTR [edi+224], eax
; Line 429
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 435
	ret	0
_SSL_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_session_id_context
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sid_ctx$ = 12						; size = 4
_sid_ctx_len$ = 16					; size = 4
_SSL_CTX_set_session_id_context PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 440
	mov	ecx, DWORD PTR _sid_ctx_len$[esp-4]
	cmp	ecx, 32					; 00000020H
	jbe	SHORT $LN2@SSL_CTX_se
; Line 441
	push	442					; 000001baH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	273					; 00000111H
	push	219					; 000000dbH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 443
	xor	eax, eax
; Line 449
	ret	0
$LN2@SSL_CTX_se:
; Line 445
	mov	eax, DWORD PTR _ctx$[esp-4]
; Line 446
	push	ecx
	push	DWORD PTR _sid_ctx$[esp]
	mov	DWORD PTR [eax+196], ecx
	add	eax, 200				; 000000c8H
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 448
	mov	eax, 1
; Line 449
	ret	0
_SSL_CTX_set_session_id_context ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_check_private_key
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_SSL_check_private_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 973
	mov	eax, DWORD PTR _ssl$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@SSL_check_
; Line 974
	push	974					; 000003ceH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	67					; 00000043H
	push	163					; 000000a3H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 975
	xor	eax, eax
; Line 991
	ret	0
$LN2@SSL_check_:
; Line 977
	mov	eax, DWORD PTR [eax+152]
	test	eax, eax
	jne	SHORT $LN3@SSL_check_
; Line 978
	push	978					; 000003d2H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	177					; 000000b1H
	push	163					; 000000a3H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
; Line 991
	ret	0
$LN3@SSL_check_:
; Line 981
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@SSL_check_
; Line 982
	push	982					; 000003d6H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	177					; 000000b1H
	push	163					; 000000a3H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
; Line 991
	ret	0
$LN4@SSL_check_:
; Line 985
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	jne	SHORT $LN5@SSL_check_
; Line 986
	push	986					; 000003daH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	190					; 000000beH
	push	163					; 000000a3H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
; Line 991
	ret	0
$LN5@SSL_check_:
; Line 989
	push	eax
	push	ecx
	call	_X509_check_private_key
	add	esp, 8
; Line 991
	ret	0
_SSL_check_private_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_check_private_key
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_check_private_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 956
	mov	eax, DWORD PTR _ctx$[esp-4]
	test	eax, eax
	je	SHORT $LN3@SSL_CTX_ch
	mov	eax, DWORD PTR [eax+176]
	test	eax, eax
	je	SHORT $LN3@SSL_CTX_ch
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@SSL_CTX_ch
; Line 961
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	jne	SHORT $LN4@SSL_CTX_ch
; Line 962
	push	963					; 000003c3H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	190					; 000000beH
	push	168					; 000000a8H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
; Line 968
	ret	0
$LN4@SSL_CTX_ch:
; Line 966
	push	eax
	push	ecx
	call	_X509_check_private_key
	add	esp, 8
; Line 968
	ret	0
$LN3@SSL_CTX_ch:
; Line 957
	push	958					; 000003beH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	177					; 000000b1H
	push	168					; 000000a8H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 959
	xor	eax, eax
; Line 968
	ret	0
_SSL_CTX_check_private_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_default_passwd_cb_userdata
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_u$ = 12						; size = 4
_SSL_CTX_set_default_passwd_cb_userdata PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2205
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	ecx, DWORD PTR _u$[esp-4]
	mov	DWORD PTR [eax+112], ecx
; Line 2206
	ret	0
_SSL_CTX_set_default_passwd_cb_userdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_default_passwd_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_CTX_set_default_passwd_cb PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2200
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+108], ecx
; Line 2201
	ret	0
_SSL_CTX_set_default_passwd_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_cert_cb
_TEXT	SEGMENT
_c$ = 8							; size = 4
_cb$ = 12						; size = 4
_arg$ = 16						; size = 4
_SSL_CTX_set_cert_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2231
	push	DWORD PTR _arg$[esp-4]
	mov	eax, DWORD PTR _c$[esp]
	push	DWORD PTR _cb$[esp]
	push	DWORD PTR [eax+176]
	call	_ssl_cert_set_cert_cb
	add	esp, 12					; 0000000cH
; Line 2232
	ret	0
_SSL_CTX_set_cert_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_cert_verify_callback
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_arg$ = 16						; size = 4
_SSL_CTX_set_cert_verify_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2212
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+100], eax
; Line 2213
	mov	eax, DWORD PTR _arg$[esp-4]
	mov	DWORD PTR [ecx+104], eax
; Line 2214
	ret	0
_SSL_CTX_set_cert_verify_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_verify_depth
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_depth$ = 12						; size = 4
_SSL_CTX_set_verify_depth PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2225
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	DWORD PTR _depth$[esp-4]
	push	DWORD PTR [eax+240]
	call	_X509_VERIFY_PARAM_set_depth
	add	esp, 8
; Line 2226
	ret	0
_SSL_CTX_set_verify_depth ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_verify
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_mode$ = 12						; size = 4
_cb$ = 16						; size = 4
_SSL_CTX_set_verify PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2219
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _mode$[esp-4]
	mov	DWORD PTR [ecx+192], eax
; Line 2220
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+232], eax
; Line 2221
	ret	0
_SSL_CTX_set_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_verify_callback
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get_verify_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 848
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+232]
; Line 849
	ret	0
_SSL_CTX_get_verify_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_verify_depth
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get_verify_depth PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 844
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	DWORD PTR [eax+240]
	call	_X509_VERIFY_PARAM_get_depth
	add	esp, 4
; Line 845
	ret	0
_SSL_CTX_get_verify_depth ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_verify_mode
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get_verify_mode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 839
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+192]
; Line 840
	ret	0
_SSL_CTX_get_verify_mode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_peer_cert_chain
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_peer_cert_chain PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 908
	mov	eax, DWORD PTR _s$[esp-4]
	test	eax, eax
	je	SHORT $LN4@SSL_get_pe
	mov	eax, DWORD PTR [eax+192]
	test	eax, eax
	je	SHORT $LN4@SSL_get_pe
	mov	eax, DWORD PTR [eax+152]
	test	eax, eax
	je	SHORT $LN4@SSL_get_pe
; Line 918
	mov	eax, DWORD PTR [eax]
; Line 919
	ret	0
$LN4@SSL_get_pe:
; Line 918
	xor	eax, eax
; Line 919
	ret	0
_SSL_get_peer_cert_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_peer_certificate
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_peer_certificate PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 890
	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	test	eax, eax
	je	SHORT $LN7@SSL_get_pe
	mov	esi, DWORD PTR [eax+192]
	test	esi, esi
	je	SHORT $LN7@SSL_get_pe
; Line 893
	mov	esi, DWORD PTR [esi+156]
; Line 895
	test	esi, esi
	je	SHORT $LN7@SSL_get_pe
; Line 898
	push	898					; 00000382H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	3
	lea	ecx, DWORD PTR [esi+16]
	push	1
	push	ecx
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 900
	mov	eax, esi
	pop	esi
; Line 901
	ret	0
$LN7@SSL_get_pe:
; Line 896
	xor	eax, eax
	pop	esi
; Line 901
	ret	0
_SSL_get_peer_certificate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_has_matching_session_id
_TEXT	SEGMENT
_r$ = -248						; size = 244
__$ArrayPad$ = -4					; size = 4
_ssl$ = 8						; size = 4
_id$ = 12						; size = 4
_id_len$ = 16						; size = 4
_SSL_has_matching_session_id PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 483
	mov	eax, 248				; 000000f8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+248], eax
	mov	ecx, DWORD PTR _id$[esp+244]
	push	esi
	mov	esi, DWORD PTR _id_len$[esp+248]
	push	edi
	mov	edi, DWORD PTR _ssl$[esp+252]
; Line 493
	cmp	esi, 32					; 00000020H
	jbe	SHORT $LN2@SSL_has_ma
; Line 494
	pop	edi
	xor	eax, eax
	pop	esi
; Line 515
	mov	ecx, DWORD PTR __$ArrayPad$[esp+248]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	ret	0
$LN2@SSL_has_ma:
; Line 496
	mov	eax, DWORD PTR [edi]
; Line 498
	push	esi
	mov	DWORD PTR _r$[esp+260], eax
	lea	eax, DWORD PTR _r$[esp+332]
	push	ecx
	push	eax
	mov	DWORD PTR _r$[esp+336], esi
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 505
	cmp	DWORD PTR _r$[esp+256], 2
	jne	SHORT $LN3@SSL_has_ma
	cmp	esi, 16					; 00000010H
	jae	SHORT $LN3@SSL_has_ma
; Line 507
	mov	eax, 16					; 00000010H
	sub	eax, esi
	push	eax
	lea	eax, DWORD PTR _r$[esp+332]
	add	eax, esi
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 508
	mov	DWORD PTR _r$[esp+324], 16		; 00000010H
$LN3@SSL_has_ma:
; Line 511
	push	511					; 000001ffH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	push	5
	call	_CRYPTO_lock
; Line 512
	lea	eax, DWORD PTR _r$[esp+272]
	push	eax
	mov	eax, DWORD PTR [edi+228]
	push	DWORD PTR [eax+16]
	call	_lh_retrieve
; Line 513
	push	513					; 00000201H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	push	6
	mov	esi, eax
	call	_CRYPTO_lock
; Line 515
	mov	ecx, DWORD PTR __$ArrayPad$[esp+296]
	add	esp, 40					; 00000028H
	xor	eax, eax
	test	esi, esi
	setne	al
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	ret	0
_SSL_has_matching_session_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_generate_session_id
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_set_generate_session_id PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 475
	push	475					; 000001dbH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	16					; 00000010H
	push	9
	call	_CRYPTO_lock
; Line 476
	mov	eax, DWORD PTR _ssl$[esp+12]
	mov	ecx, DWORD PTR _cb$[esp+12]
; Line 477
	push	477					; 000001ddH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	16					; 00000010H
	push	10					; 0000000aH
	mov	DWORD PTR [eax+196], ecx
	call	_CRYPTO_lock
	add	esp, 32					; 00000020H
; Line 478
	mov	eax, 1
; Line 479
	ret	0
_SSL_set_generate_session_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_generate_session_id
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_CTX_set_generate_session_id PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 467
	push	467					; 000001d3H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	push	9
	call	_CRYPTO_lock
; Line 468
	mov	eax, DWORD PTR _ctx$[esp+12]
	mov	ecx, DWORD PTR _cb$[esp+12]
; Line 469
	push	469					; 000001d5H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	push	10					; 0000000aH
	mov	DWORD PTR [eax+236], ecx
	call	_CRYPTO_lock
	add	esp, 32					; 00000020H
; Line 470
	mov	eax, 1
; Line 471
	ret	0
_SSL_CTX_set_generate_session_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_copy_session_id
_TEXT	SEGMENT
_t$ = 8							; size = 4
_f$ = 12						; size = 4
_SSL_copy_session_id PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 926
	push	esi
	push	edi
; Line 930
	mov	edi, DWORD PTR _f$[esp+4]
	push	edi
	call	_SSL_get_session
	mov	esi, DWORD PTR _t$[esp+8]
	push	eax
	push	esi
	call	_SSL_set_session
; Line 935
	mov	eax, DWORD PTR [esi+8]
	add	esp, 12					; 0000000cH
	cmp	eax, DWORD PTR [edi+8]
	je	SHORT $LN2@SSL_copy_s
; Line 936
	mov	eax, DWORD PTR [eax+12]
	push	esi
	call	eax
; Line 937
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax
; Line 938
	push	esi
	mov	eax, DWORD PTR [eax+4]
	call	eax
	add	esp, 8
$LN2@SSL_copy_s:
; Line 942
	mov	eax, DWORD PTR [edi+152]
	push	ebx
	mov	ebx, DWORD PTR [esi+152]
	test	eax, eax
	je	SHORT $LN3@SSL_copy_s
; Line 943
	push	943					; 000003afH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	13					; 0000000dH
	add	eax, 364				; 0000016cH
	push	1
	push	eax
	call	_CRYPTO_add_lock
; Line 944
	mov	eax, DWORD PTR [edi+152]
	add	esp, 20					; 00000014H
	mov	DWORD PTR [esi+152], eax
; Line 945
	jmp	SHORT $LN4@SSL_copy_s
$LN3@SSL_copy_s:
; Line 946
	mov	DWORD PTR [esi+152], 0
$LN4@SSL_copy_s:
; Line 947
	test	ebx, ebx
	je	SHORT $LN5@SSL_copy_s
; Line 948
	push	ebx
	call	_ssl_cert_free
	add	esp, 4
$LN5@SSL_copy_s:
; Line 949
	mov	eax, DWORD PTR [edi+156]
	pop	ebx
; Line 454
	cmp	eax, 32					; 00000020H
	jbe	SHORT $LN8@SSL_copy_s
; Line 455
	push	456					; 000001c8H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	273					; 00000111H
	push	218					; 000000daH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
; Line 950
	ret	0
$LN8@SSL_copy_s:
; Line 460
	push	eax
	mov	DWORD PTR [esi+156], eax
; Line 949
	lea	eax, DWORD PTR [edi+160]
; Line 460
	push	eax
	lea	eax, DWORD PTR [esi+160]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 950
	ret	0
_SSL_copy_session_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_cert_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_cb$ = 12						; size = 4
_arg$ = 16						; size = 4
_SSL_set_cert_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2236
	push	DWORD PTR _arg$[esp-4]
	mov	eax, DWORD PTR _s$[esp]
	push	DWORD PTR _cb$[esp]
	push	DWORD PTR [eax+152]
	call	_ssl_cert_set_cert_cb
	add	esp, 12					; 0000000cH
; Line 2237
	ret	0
_SSL_set_cert_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_verify_depth
_TEXT	SEGMENT
_s$ = 8							; size = 4
_depth$ = 12						; size = 4
_SSL_set_verify_depth PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 861
	mov	eax, DWORD PTR _s$[esp-4]
	push	DWORD PTR _depth$[esp-4]
	push	DWORD PTR [eax+112]
	call	_X509_VERIFY_PARAM_set_depth
	add	esp, 8
; Line 862
	ret	0
_SSL_set_verify_depth ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_verify
_TEXT	SEGMENT
_s$ = 8							; size = 4
_mode$ = 12						; size = 4
_callback$ = 16						; size = 4
_SSL_set_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 854
	mov	ecx, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR _mode$[esp-4]
	mov	DWORD PTR [ecx+200], eax
; Line 855
	mov	eax, DWORD PTR _callback$[esp-4]
	test	eax, eax
	je	SHORT $LN2@SSL_set_ve
; Line 856
	mov	DWORD PTR [ecx+204], eax
$LN2@SSL_set_ve:
; Line 857
	ret	0
_SSL_set_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_verify_callback
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_verify_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 834
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+204]
; Line 835
	ret	0
_SSL_get_verify_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_verify_depth
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_verify_depth PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 830
	mov	eax, DWORD PTR _s$[esp-4]
	push	DWORD PTR [eax+112]
	call	_X509_VERIFY_PARAM_get_depth
	add	esp, 4
; Line 831
	ret	0
_SSL_get_verify_depth ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_verify_mode
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_verify_mode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 825
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+200]
; Line 826
	ret	0
_SSL_get_verify_mode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_read_ahead
_TEXT	SEGMENT
_s$ = 8							; size = 4
_yes$ = 12						; size = 4
_SSL_set_read_ahead PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 866
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR _yes$[esp-4]
	mov	DWORD PTR [eax+96], ecx
; Line 867
	ret	0
_SSL_set_read_ahead ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_cipher_list
_TEXT	SEGMENT
_s$ = 8							; size = 4
_str$ = 12						; size = 4
_SSL_set_cipher_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1394
	mov	ecx, DWORD PTR _s$[esp-4]
	push	DWORD PTR [ecx+152]
	lea	eax, DWORD PTR [ecx+120]
	push	DWORD PTR _str$[esp]
	push	eax
	lea	eax, DWORD PTR [ecx+116]
	push	eax
	mov	eax, DWORD PTR [ecx+228]
	push	DWORD PTR [eax]
	call	_ssl_create_cipher_list
	add	esp, 20					; 00000014H
; Line 1397
	test	eax, eax
	je	SHORT $LN6@SSL_set_ci
; Line 1399
	push	eax
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@SSL_set_ci
; Line 1400
	push	1400					; 00000578H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	185					; 000000b9H
	push	271					; 0000010fH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN6@SSL_set_ci:
; Line 1401
	xor	eax, eax
; Line 1404
	ret	0
$LN4@SSL_set_ci:
; Line 1403
	mov	eax, 1
; Line 1404
	ret	0
_SSL_set_cipher_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_wbio
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_wbio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 699
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+16]
; Line 700
	ret	0
_SSL_get_wbio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_rbio
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_rbio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 694
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+12]
; Line 695
	ret	0
_SSL_get_rbio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_bio
_TEXT	SEGMENT
_s$ = 8							; size = 4
_rbio$ = 12						; size = 4
_wbio$ = 16						; size = 4
_SSL_set_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 674
	push	esi
; Line 678
	mov	esi, DWORD PTR _s$[esp]
	push	edi
	mov	ecx, DWORD PTR [esi+20]
	test	ecx, ecx
	je	SHORT $LN3@SSL_set_bi
; Line 679
	mov	eax, DWORD PTR [esi+16]
	cmp	eax, ecx
	jne	SHORT $LN3@SSL_set_bi
; Line 680
	mov	eax, DWORD PTR [eax+36]
	mov	DWORD PTR [esi+16], eax
; Line 681
	mov	DWORD PTR [ecx+36], 0
$LN3@SSL_set_bi:
; Line 684
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR _rbio$[esp+4]
	test	eax, eax
	je	SHORT $LN4@SSL_set_bi
	cmp	eax, edi
	je	SHORT $LN4@SSL_set_bi
; Line 685
	push	eax
	call	_BIO_free_all
	add	esp, 4
$LN4@SSL_set_bi:
; Line 686
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN7@SSL_set_bi
	push	ebx
	mov	ebx, DWORD PTR _wbio$[esp+8]
	cmp	eax, ebx
	je	SHORT $LN8@SSL_set_bi
	cmp	DWORD PTR [esi+12], eax
	je	SHORT $LN8@SSL_set_bi
; Line 687
	push	eax
	call	_BIO_free_all
	add	esp, 4
$LN8@SSL_set_bi:
; Line 689
	mov	DWORD PTR [esi+16], ebx
	pop	ebx
	mov	DWORD PTR [esi+12], edi
	pop	edi
	pop	esi
; Line 690
	ret	0
$LN7@SSL_set_bi:
; Line 689
	mov	eax, DWORD PTR _wbio$[esp+4]
	mov	DWORD PTR [esi+12], edi
	pop	edi
	mov	DWORD PTR [esi+16], eax
	pop	esi
; Line 690
	ret	0
_SSL_set_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_wfd
_TEXT	SEGMENT
_s$ = 8							; size = 4
_fd$ = 12						; size = 4
_SSL_set_wfd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 751
	push	esi
; Line 756
	mov	esi, DWORD PTR _s$[esp]
	push	edi
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN4@SSL_set_wf
	push	eax
	call	_BIO_method_type
	add	esp, 4
	cmp	eax, 1285				; 00000505H
	jne	SHORT $LN4@SSL_set_wf
	push	0
	push	0
	push	105					; 00000069H
	push	DWORD PTR [esi+12]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	cmp	eax, DWORD PTR _fd$[esp+4]
	jne	SHORT $LN4@SSL_set_wf
; Line 766
	mov	eax, DWORD PTR [esi+12]
	push	eax
	push	eax
	push	esi
	call	_SSL_set_bio
	add	esp, 12					; 0000000cH
; Line 769
	mov	eax, 1
	pop	edi
	pop	esi
; Line 770
	ret	0
$LN4@SSL_set_wf:
; Line 757
	call	_BIO_s_socket
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
; Line 759
	test	edi, edi
	jne	SHORT $LN5@SSL_set_wf
; Line 760
	push	760					; 000002f8H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	7
	push	196					; 000000c4H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 769
	xor	eax, eax
	pop	edi
	pop	esi
; Line 770
	ret	0
$LN5@SSL_set_wf:
; Line 763
	push	DWORD PTR _fd$[esp+4]
	push	0
	push	104					; 00000068H
	push	edi
	call	_BIO_int_ctrl
; Line 764
	push	edi
	push	DWORD PTR [esi+12]
	push	esi
	call	_SSL_set_bio
	add	esp, 28					; 0000001cH
; Line 769
	mov	eax, 1
$err$14:
; Line 770
	pop	edi
	pop	esi
	ret	0
_SSL_set_wfd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_rfd
_TEXT	SEGMENT
_s$ = 8							; size = 4
_fd$ = 12						; size = 4
_SSL_set_rfd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 773
	push	esi
; Line 778
	mov	esi, DWORD PTR _s$[esp]
	push	edi
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN4@SSL_set_rf
	push	eax
	call	_BIO_method_type
	add	esp, 4
	cmp	eax, 1285				; 00000505H
	jne	SHORT $LN4@SSL_set_rf
	push	0
	push	0
	push	105					; 00000069H
	push	DWORD PTR [esi+16]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	cmp	eax, DWORD PTR _fd$[esp+4]
	jne	SHORT $LN4@SSL_set_rf
; Line 788
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	eax
	push	esi
	call	_SSL_set_bio
	add	esp, 12					; 0000000cH
; Line 791
	mov	eax, 1
	pop	edi
	pop	esi
; Line 792
	ret	0
$LN4@SSL_set_rf:
; Line 779
	call	_BIO_s_socket
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
; Line 781
	test	edi, edi
	jne	SHORT $LN5@SSL_set_rf
; Line 782
	push	782					; 0000030eH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	7
	push	194					; 000000c2H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 791
	xor	eax, eax
	pop	edi
	pop	esi
; Line 792
	ret	0
$LN5@SSL_set_rf:
; Line 785
	push	DWORD PTR _fd$[esp+4]
	push	0
	push	104					; 00000068H
	push	edi
	call	_BIO_int_ctrl
; Line 786
	push	DWORD PTR [esi+16]
	push	edi
	push	esi
	call	_SSL_set_bio
	add	esp, 28					; 0000001cH
; Line 791
	mov	eax, 1
$err$14:
; Line 792
	pop	edi
	pop	esi
	ret	0
_SSL_set_rfd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_fd
_TEXT	SEGMENT
_s$ = 8							; size = 4
_fd$ = 12						; size = 4
_SSL_set_fd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 733
	push	esi
; Line 737
	call	_BIO_s_socket
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 739
	test	esi, esi
	jne	SHORT $LN2@SSL_set_fd
; Line 740
	push	740					; 000002e4H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	7
	push	192					; 000000c0H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 747
	xor	eax, eax
	pop	esi
; Line 748
	ret	0
$LN2@SSL_set_fd:
; Line 743
	push	DWORD PTR _fd$[esp]
	push	0
	push	104					; 00000068H
	push	esi
	call	_BIO_int_ctrl
; Line 744
	push	esi
	push	esi
	push	DWORD PTR _s$[esp+24]
	call	_SSL_set_bio
	add	esp, 28					; 0000001cH
; Line 747
	mov	eax, 1
$err$5:
	pop	esi
; Line 748
	ret	0
_SSL_set_fd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_pending
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_pending PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 883
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _s$[esp-4], eax
	mov	eax, DWORD PTR [ecx+80]
	jmp	eax
_SSL_pending ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_read_ahead
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_read_ahead PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 871
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+96]
; Line 872
	ret	0
_SSL_get_read_ahead ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_shared_ciphers
_TEXT	SEGMENT
_sk$1$ = 8						; size = 4
_s$ = 8							; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_SSL_get_shared_ciphers PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1414
	mov	eax, DWORD PTR _s$[esp-4]
	push	ebp
	push	esi
	mov	eax, DWORD PTR [eax+192]
	test	eax, eax
	je	$LN6@SSL_get_sh
	mov	esi, DWORD PTR [eax+188]
	mov	DWORD PTR _sk$1$[esp+4], esi
	test	esi, esi
	je	$LN6@SSL_get_sh
	mov	ebp, DWORD PTR _len$[esp+4]
	cmp	ebp, 2
	jl	$LN6@SSL_get_sh
; Line 1417
	push	edi
	mov	edi, DWORD PTR _buf$[esp+8]
; Line 1420
	push	esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN7@SSL_get_sh
	pop	edi
	pop	esi
	pop	ebp
; Line 1441
	ret	0
$LN7@SSL_get_sh:
	push	ebx
; Line 1423
	push	esi
	xor	ebx, ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@SSL_get_sh
	npad	7
$LL4@SSL_get_sh:
; Line 1426
	push	ebx
	push	esi
	call	_sk_value
	add	esp, 8
; Line 1427
	mov	esi, DWORD PTR [eax+4]
	mov	edx, esi
	lea	ecx, DWORD PTR [edx+1]
$LL20@SSL_get_sh:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL20@SSL_get_sh
	sub	edx, ecx
; Line 1428
	lea	eax, DWORD PTR [edx+1]
	cmp	eax, ebp
	jg	SHORT $LN14@SSL_get_sh
; Line 1434
	mov	eax, edi
$LL11@SSL_get_sh:
	mov	cl, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [eax], cl
	lea	eax, DWORD PTR [eax+1]
	test	cl, cl
	jne	SHORT $LL11@SSL_get_sh
; Line 1435
	mov	esi, DWORD PTR _sk$1$[esp+12]
	add	edi, edx
; Line 1437
	or	eax, -1
	inc	ebx
	sub	eax, edx
	push	esi
	mov	BYTE PTR [edi], 58			; 0000003aH
	add	ebp, eax
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	SHORT $LL4@SSL_get_sh
$LN3@SSL_get_sh:
; Line 1440
	mov	eax, DWORD PTR _buf$[esp+12]
	pop	ebx
	mov	BYTE PTR [edi-1], 0
	pop	edi
	pop	esi
	pop	ebp
; Line 1441
	ret	0
$LN14@SSL_get_sh:
; Line 1429
	mov	eax, DWORD PTR _buf$[esp+12]
	cmp	edi, eax
	je	SHORT $LN9@SSL_get_sh
; Line 1430
	dec	edi
$LN9@SSL_get_sh:
	pop	ebx
; Line 1431
	mov	BYTE PTR [edi], 0
	pop	edi
	pop	esi
	pop	ebp
; Line 1441
	ret	0
$LN6@SSL_get_sh:
	pop	esi
; Line 1415
	xor	eax, eax
	pop	ebp
; Line 1441
	ret	0
_SSL_get_shared_ciphers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_cipher_list
_TEXT	SEGMENT
_s$ = 8							; size = 4
_n$ = 12						; size = 4
_SSL_get_cipher_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1355
	mov	eax, DWORD PTR _s$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@SSL_get_ci
; Line 1364
	ret	0
$LN2@SSL_get_ci:
	push	esi
; Line 1326
	mov	esi, DWORD PTR [eax+116]
	test	esi, esi
	jne	SHORT $LN15@SSL_get_ci
; Line 1328
	mov	esi, DWORD PTR [eax+228]
	test	esi, esi
	je	SHORT $LN4@SSL_get_ci
	mov	esi, DWORD PTR [esi+4]
	test	esi, esi
	je	SHORT $LN4@SSL_get_ci
$LN15@SSL_get_ci:
; Line 1358
	push	esi
	call	_sk_num
	mov	ecx, DWORD PTR _n$[esp+4]
	add	esp, 4
	cmp	eax, ecx
	jle	SHORT $LN4@SSL_get_ci
; Line 1360
	push	ecx
	push	esi
	call	_sk_value
	add	esp, 8
; Line 1361
	test	eax, eax
	je	SHORT $LN4@SSL_get_ci
; Line 1363
	mov	eax, DWORD PTR [eax+4]
	pop	esi
; Line 1364
	ret	0
$LN4@SSL_get_ci:
; Line 1359
	xor	eax, eax
	pop	esi
; Line 1364
	ret	0
_SSL_get_cipher_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_wfd
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_s$ = 8							; size = 4
_SSL_get_wfd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 720
	mov	eax, 4
	call	__chkstk
; Line 699
	mov	eax, DWORD PTR _s$[esp]
; Line 725
	push	256					; 00000100H
	mov	DWORD PTR _ret$[esp+8], -1
	push	DWORD PTR [eax+16]
	call	_BIO_find_type
	add	esp, 8
; Line 726
	test	eax, eax
	je	SHORT $LN6@SSL_get_wf
; Line 727
	lea	ecx, DWORD PTR _ret$[esp+4]
	push	ecx
	push	0
	push	105					; 00000069H
	push	eax
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
$LN6@SSL_get_wf:
; Line 728
	mov	eax, DWORD PTR _ret$[esp+4]
; Line 729
	pop	ecx
	ret	0
_SSL_get_wfd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_rfd
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_s$ = 8							; size = 4
_SSL_get_rfd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 708
	mov	eax, 4
	call	__chkstk
; Line 694
	mov	eax, DWORD PTR _s$[esp]
; Line 713
	push	256					; 00000100H
	mov	DWORD PTR _ret$[esp+8], -1
	push	DWORD PTR [eax+12]
	call	_BIO_find_type
	add	esp, 8
; Line 714
	test	eax, eax
	je	SHORT $LN6@SSL_get_rf
; Line 715
	lea	ecx, DWORD PTR _ret$[esp+4]
	push	ecx
	push	0
	push	105					; 00000069H
	push	eax
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
$LN6@SSL_get_rf:
; Line 716
	mov	eax, DWORD PTR _ret$[esp+4]
; Line 717
	pop	ecx
	ret	0
_SSL_get_rfd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_fd
_TEXT	SEGMENT
_ret$1 = -4						; size = 4
_s$ = 8							; size = 4
_SSL_get_fd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 703
	mov	eax, 4
	call	__chkstk
; Line 694
	mov	eax, DWORD PTR _s$[esp]
; Line 713
	push	256					; 00000100H
	mov	DWORD PTR _ret$1[esp+8], -1
	push	DWORD PTR [eax+12]
	call	_BIO_find_type
	add	esp, 8
; Line 714
	test	eax, eax
	je	SHORT $LN8@SSL_get_fd
; Line 715
	lea	ecx, DWORD PTR _ret$1[esp+4]
	push	ecx
	push	0
	push	105					; 00000069H
	push	eax
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
$LN8@SSL_get_fd:
; Line 704
	mov	eax, DWORD PTR _ret$1[esp+4]
; Line 705
	pop	ecx
	ret	0
_SSL_get_fd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_current_cipher
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_current_cipher PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3047
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+192]
	test	eax, eax
	je	SHORT $LN2@SSL_get_cu
	mov	eax, DWORD PTR [eax+180]
	test	eax, eax
	jne	SHORT $LN1@SSL_get_cu
$LN2@SSL_get_cu:
; Line 3049
	xor	eax, eax
$LN1@SSL_get_cu:
; Line 3050
	ret	0
_SSL_get_current_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_clear
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_clear PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 191
	push	esi
; Line 193
	mov	esi, DWORD PTR _s$[esp]
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN2@SSL_clear
; Line 194
	push	194					; 000000c2H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	188					; 000000bcH
	push	164					; 000000a4H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 195
	xor	eax, eax
	pop	esi
; Line 272
	ret	0
$LN2@SSL_clear:
; Line 198
	push	esi
	call	_ssl_clear_bad_session
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@SSL_clear
; Line 199
	push	DWORD PTR [esi+192]
	call	_SSL_SESSION_free
	add	esp, 4
; Line 200
	mov	DWORD PTR [esi+192], 0
$LN3@SSL_clear:
; Line 219
	cmp	DWORD PTR [esi+400], 0
	mov	DWORD PTR [esi+212], 0
	mov	DWORD PTR [esi+108], 0
	mov	DWORD PTR [esi+48], 0
	je	SHORT $LN4@SSL_clear
; Line 220
	push	220					; 000000dcH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	68					; 00000044H
	push	164					; 000000a4H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	esi
; Line 272
	ret	0
$LN4@SSL_clear:
; Line 227
	cmp	DWORD PTR [esi+36], 0
	mov	eax, 4096				; 00001000H
	mov	ecx, 8192				; 00002000H
	mov	DWORD PTR [esi+4], 0
	cmovne	eax, ecx
	or	eax, 16384				; 00004000H
	mov	DWORD PTR [esi+52], eax
; Line 229
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi], eax
; Line 230
	mov	DWORD PTR [esi+272], eax
; Line 237
	mov	eax, DWORD PTR [esi+60]
	mov	DWORD PTR [esi+24], 1
	mov	DWORD PTR [esi+56], 240			; 000000f0H
	test	eax, eax
	je	SHORT $LN5@SSL_clear
; Line 238
	push	eax
	call	_BUF_MEM_free
	add	esp, 4
; Line 239
	mov	DWORD PTR [esi+60], 0
$LN5@SSL_clear:
; Line 242
	push	esi
	call	_ssl_clear_cipher_ctx
; Line 3545
	mov	eax, DWORD PTR [esi+132]
; Line 242
	add	esp, 4
; Line 3545
	test	eax, eax
	je	SHORT $LN13@SSL_clear
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN13@SSL_clear:
; Line 3547
	mov	DWORD PTR [esi+132], 0
; Line 3545
	mov	eax, DWORD PTR [esi+144]
	test	eax, eax
	je	SHORT $LN16@SSL_clear
; Line 3546
	push	eax
	call	_EVP_MD_CTX_destroy
	add	esp, 4
$LN16@SSL_clear:
; Line 3547
	mov	DWORD PTR [esi+144], 0
; Line 248
	mov	eax, DWORD PTR [esi+152]
	mov	DWORD PTR [esi+268], 0
	test	eax, eax
	je	SHORT $LN6@SSL_clear
; Line 249
	mov	eax, DWORD PTR [eax+368]
	test	eax, eax
	je	SHORT $LN7@SSL_clear
; Line 250
	push	eax
	call	_CRYPTO_free
; Line 251
	mov	eax, DWORD PTR [esi+152]
	add	esp, 4
	mov	DWORD PTR [eax+368], 0
$LN7@SSL_clear:
; Line 253
	mov	eax, DWORD PTR [esi+152]
	mov	DWORD PTR [eax+372], 0
; Line 254
	mov	eax, DWORD PTR [esi+152]
	mov	DWORD PTR [eax+376], 0
$LN6@SSL_clear:
; Line 263
	cmp	DWORD PTR [esi+28], 0
	jne	SHORT $LN8@SSL_clear
	cmp	DWORD PTR [esi+192], 0
	jne	SHORT $LN8@SSL_clear
	mov	eax, DWORD PTR [esi+228]
	mov	ecx, DWORD PTR [esi+8]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN8@SSL_clear
; Line 264
	mov	eax, DWORD PTR [ecx+12]
	push	esi
	call	eax
; Line 265
	mov	eax, DWORD PTR [esi+228]
; Line 266
	push	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR [eax+4]
	call	eax
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@SSL_clear
	pop	esi
; Line 272
	ret	0
$LN8@SSL_clear:
; Line 270
	mov	eax, DWORD PTR [esi+8]
	push	esi
	mov	eax, DWORD PTR [eax+8]
	call	eax
	add	esp, 4
$LN9@SSL_clear:
; Line 271
	mov	eax, 1
	pop	esi
; Line 272
	ret	0
_SSL_clear ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_want
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_want PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3325
	mov	eax, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR [eax+24]
; Line 3326
	ret	0
_SSL_want ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_cert_store
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_store$ = 12						; size = 4
_SSL_CTX_set_cert_store PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3317
	push	esi
; Line 3318
	mov	esi, DWORD PTR _ctx$[esp]
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN4@SSL_CTX_se
; Line 3319
	push	eax
	call	_X509_STORE_free
	add	esp, 4
$LN4@SSL_CTX_se:
; Line 3320
	mov	eax, DWORD PTR _store$[esp]
	mov	DWORD PTR [esi+12], eax
	pop	esi
; Line 3321
	ret	0
_SSL_CTX_set_cert_store ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_get_cert_store
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_get_cert_store PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3313
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+12]
; Line 3314
	ret	0
_SSL_CTX_get_cert_store ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_SSL_CTX_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 2102
	push	esi
; Line 2105
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	$LN1@SSL_CTX_fr
; Line 2108
	push	2108					; 0000083cH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	lea	eax, DWORD PTR [esi+96]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 2112
	test	eax, eax
	jg	$LN1@SSL_CTX_fr
; Line 2121
	mov	eax, DWORD PTR [esi+240]
	test	eax, eax
	je	SHORT $LN4@SSL_CTX_fr
; Line 2122
	push	eax
	call	_X509_VERIFY_PARAM_free
	add	esp, 4
$LN4@SSL_CTX_fr:
; Line 2133
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN5@SSL_CTX_fr
; Line 2134
	push	0
	push	esi
	call	_SSL_CTX_flush_sessions
	add	esp, 8
$LN5@SSL_CTX_fr:
; Line 2136
	lea	eax, DWORD PTR [esi+128]
	push	eax
	push	esi
	push	2
	call	_CRYPTO_free_ex_data
; Line 2138
	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN6@SSL_CTX_fr
; Line 2139
	push	eax
	call	_lh_free
	add	esp, 4
$LN6@SSL_CTX_fr:
; Line 2141
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN7@SSL_CTX_fr
; Line 2142
	push	eax
	call	_X509_STORE_free
	add	esp, 4
$LN7@SSL_CTX_fr:
; Line 2143
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN8@SSL_CTX_fr
; Line 2144
	push	eax
	call	_sk_free
	add	esp, 4
$LN8@SSL_CTX_fr:
; Line 2145
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN9@SSL_CTX_fr
; Line 2146
	push	eax
	call	_sk_free
	add	esp, 4
$LN9@SSL_CTX_fr:
; Line 2147
	mov	eax, DWORD PTR [esi+176]
	test	eax, eax
	je	SHORT $LN10@SSL_CTX_fr
; Line 2148
	push	eax
	call	_ssl_cert_free
	add	esp, 4
$LN10@SSL_CTX_fr:
; Line 2149
	mov	eax, DWORD PTR [esi+160]
	test	eax, eax
	je	SHORT $LN11@SSL_CTX_fr
; Line 2150
	push	OFFSET _X509_NAME_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN11@SSL_CTX_fr:
; Line 2151
	mov	eax, DWORD PTR [esi+148]
	test	eax, eax
	je	SHORT $LN12@SSL_CTX_fr
; Line 2152
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN12@SSL_CTX_fr:
; Line 2162
	mov	eax, DWORD PTR [esi+436]
	mov	DWORD PTR [esi+152], 0
	test	eax, eax
	je	SHORT $LN13@SSL_CTX_fr
; Line 2163
	push	eax
	call	_sk_free
	add	esp, 4
$LN13@SSL_CTX_fr:
; Line 2167
	mov	eax, DWORD PTR [esi+332]
	test	eax, eax
	je	SHORT $LN14@SSL_CTX_fr
; Line 2168
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN14@SSL_CTX_fr:
; Line 2171
	push	esi
	call	_SSL_CTX_SRP_CTX_free
; Line 2174
	mov	eax, DWORD PTR [esi+252]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN15@SSL_CTX_fr
; Line 2175
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN15@SSL_CTX_fr:
; Line 2179
	mov	eax, DWORD PTR [esi+348]
	test	eax, eax
	je	SHORT $LN16@SSL_CTX_fr
; Line 2180
	push	eax
	call	_ssl_buf_freelist_free
	add	esp, 4
$LN16@SSL_CTX_fr:
; Line 2181
	mov	eax, DWORD PTR [esi+352]
	test	eax, eax
	je	SHORT $LN17@SSL_CTX_fr
; Line 2182
	push	eax
	call	_ssl_buf_freelist_free
	add	esp, 4
$LN17@SSL_CTX_fr:
; Line 2186
	mov	eax, DWORD PTR [esi+460]
	test	eax, eax
	je	SHORT $LN18@SSL_CTX_fr
; Line 2187
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN18@SSL_CTX_fr:
; Line 2188
	mov	eax, DWORD PTR [esi+468]
	test	eax, eax
	je	SHORT $LN19@SSL_CTX_fr
; Line 2189
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN19@SSL_CTX_fr:
; Line 2191
	mov	eax, DWORD PTR [esi+448]
	test	eax, eax
	je	SHORT $LN20@SSL_CTX_fr
; Line 2192
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN20@SSL_CTX_fr:
; Line 2195
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@SSL_CTX_fr:
	pop	esi
; Line 2196
	ret	0
_SSL_CTX_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_new
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_SSL_CTX_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1877
	push	ebx
; Line 1880
	mov	ebx, DWORD PTR _meth$[esp]
	push	edi
	xor	edi, edi
	test	ebx, ebx
	jne	SHORT $LN2@SSL_CTX_ne
; Line 1881
	push	1881					; 00000759H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	196					; 000000c4H
	push	169					; 000000a9H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 2079
	xor	eax, eax
	pop	edi
	pop	ebx
; Line 2080
	ret	0
$LN2@SSL_CTX_ne:
; Line 1891
	call	_SSL_get_ex_data_X509_STORE_CTX_idx
	test	eax, eax
	jns	SHORT $LN3@SSL_CTX_ne
; Line 1892
	push	1892					; 00000764H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	269					; 0000010dH
	push	169					; 000000a9H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$24:
; Line 2075
	push	2075					; 0000081bH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	65					; 00000041H
$LN22@SSL_CTX_ne:
	push	169					; 000000a9H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err2$25:
; Line 2077
	test	edi, edi
	je	SHORT $LN20@SSL_CTX_ne
; Line 2078
	push	edi
	call	_SSL_CTX_free
	add	esp, 4
$LN20@SSL_CTX_ne:
; Line 2079
	pop	edi
	xor	eax, eax
	pop	ebx
; Line 2080
	ret	0
$LN3@SSL_CTX_ne:
; Line 1895
	push	1895					; 00000767H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	472					; 000001d8H
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 1896
	test	edi, edi
	je	SHORT $err$24
; Line 1899
	push	472					; 000001d8H
	push	0
	push	edi
	call	_memset
; Line 1901
	mov	DWORD PTR [edi], ebx
; Line 1903
	mov	DWORD PTR [edi+12], 0
; Line 1904
	mov	DWORD PTR [edi+32], 2
; Line 1905
	mov	DWORD PTR [edi+20], 20480		; 00005000H
; Line 1906
	mov	DWORD PTR [edi+24], 0
; Line 1907
	mov	DWORD PTR [edi+28], 0
; Line 1910
	mov	eax, DWORD PTR [ebx+96]
	call	eax
; Line 1917
	push	44					; 0000002cH
	mov	DWORD PTR [edi+36], eax
	lea	eax, DWORD PTR [edi+52]
	push	0
	push	eax
	mov	DWORD PTR [edi+40], 0
	mov	DWORD PTR [edi+44], 0
	mov	DWORD PTR [edi+48], 0
	mov	DWORD PTR [edi+236], 0
	call	_memset
	add	esp, 24					; 00000018H
; Line 1919
	mov	DWORD PTR [edi+96], 1
; Line 1920
	mov	DWORD PTR [edi+244], 0
; Line 1929
	mov	DWORD PTR [edi+156], 0
; Line 1931
	mov	DWORD PTR [edi+100], 0
; Line 1932
	mov	DWORD PTR [edi+104], 0
; Line 1934
	mov	DWORD PTR [edi+172], 102400		; 00019000H
; Line 1935
	mov	DWORD PTR [edi+180], 0
; Line 1936
	mov	DWORD PTR [edi+184], 0
; Line 1937
	mov	DWORD PTR [edi+188], 0
; Line 1938
	mov	DWORD PTR [edi+192], 0
; Line 1942
	mov	DWORD PTR [edi+196], 0
; Line 1943
	mov	DWORD PTR [edi+232], 0
; Line 1944
	call	_ssl_cert_new
	mov	DWORD PTR [edi+176], eax
	test	eax, eax
	je	$err$24
; Line 1953
	push	OFFSET _ssl_session_LHASH_COMP
	push	OFFSET _ssl_session_LHASH_HASH
	mov	DWORD PTR [edi+108], 0
	mov	DWORD PTR [edi+112], 0
	mov	DWORD PTR [edi+116], 0
	mov	DWORD PTR [edi+120], 0
	mov	DWORD PTR [edi+124], 0
	call	_lh_new
	add	esp, 8
	mov	DWORD PTR [edi+16], eax
; Line 1954
	test	eax, eax
	je	$err$24
; Line 1956
	call	_X509_STORE_new
	mov	DWORD PTR [edi+12], eax
; Line 1957
	test	eax, eax
	je	$err$24
; Line 1960
	cmp	DWORD PTR [ebx], 2
	mov	ecx, OFFSET ??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@
	push	esi
	push	DWORD PTR [edi+176]
	mov	eax, OFFSET ??_C@_05NHFKDGAI@SSLv2?$AA@
	lea	esi, DWORD PTR [edi+4]
	cmovne	eax, ecx
	push	eax
	lea	eax, DWORD PTR [edi+8]
	push	eax
	push	esi
	push	DWORD PTR [edi]
	call	_ssl_create_cipher_list
; Line 1965
	mov	eax, DWORD PTR [esi]
	add	esp, 20					; 00000014H
	pop	esi
	test	eax, eax
	je	$LN9@SSL_CTX_ne
	push	eax
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN9@SSL_CTX_ne
; Line 1970
	call	_X509_VERIFY_PARAM_new
	mov	DWORD PTR [edi+240], eax
; Line 1971
	test	eax, eax
	je	$err$24
; Line 1974
	push	OFFSET ??_C@_08OKFBGHCE@ssl2?9md5?$AA@
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR [edi+136], eax
	test	eax, eax
	jne	SHORT $LN11@SSL_CTX_ne
; Line 1975
	push	1975					; 000007b7H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	241					; 000000f1H
; Line 1976
	jmp	$LN22@SSL_CTX_ne
$LN11@SSL_CTX_ne:
; Line 1978
	push	OFFSET ??_C@_08CBANLEIB@ssl3?9md5?$AA@
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR [edi+140], eax
	test	eax, eax
	jne	SHORT $LN12@SSL_CTX_ne
; Line 1979
	push	1979					; 000007bbH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	242					; 000000f2H
; Line 1980
	jmp	$LN22@SSL_CTX_ne
$LN12@SSL_CTX_ne:
; Line 1982
	push	OFFSET ??_C@_09KCHAKJIH@ssl3?9sha1?$AA@
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR [edi+144], eax
	test	eax, eax
	jne	SHORT $LN13@SSL_CTX_ne
; Line 1983
	push	1983					; 000007bfH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	243					; 000000f3H
; Line 1984
	jmp	$LN22@SSL_CTX_ne
$LN13@SSL_CTX_ne:
; Line 1987
	call	_sk_new_null
	mov	DWORD PTR [edi+160], eax
	test	eax, eax
	je	$err$24
; Line 1990
	lea	eax, DWORD PTR [edi+128]
	push	eax
	push	edi
	push	2
	call	_CRYPTO_new_ex_data
; Line 1992
	mov	DWORD PTR [edi+148], 0
	add	esp, 12					; 0000000cH
; Line 1994
	mov	eax, DWORD PTR [ebx+100]
	test	BYTE PTR [eax+56], 8
	jne	SHORT $LN15@SSL_CTX_ne
; Line 1995
	call	_SSL_COMP_get_compression_methods
	mov	DWORD PTR [edi+152], eax
$LN15@SSL_CTX_ne:
; Line 2005
	lea	eax, DWORD PTR [edi+264]
	mov	DWORD PTR [edi+248], 16384		; 00004000H
	push	16					; 00000010H
	push	eax
	mov	DWORD PTR [edi+256], 0
	mov	DWORD PTR [edi+260], 0
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN17@SSL_CTX_ne
	lea	eax, DWORD PTR [edi+280]
	push	16					; 00000010H
	push	eax
	call	_RAND_bytes
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN17@SSL_CTX_ne
	lea	eax, DWORD PTR [edi+296]
	push	16					; 00000010H
	push	eax
	call	_RAND_bytes
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN16@SSL_CTX_ne
$LN17@SSL_CTX_ne:
; Line 2006
	or	DWORD PTR [edi+164], 16384		; 00004000H
$LN16@SSL_CTX_ne:
; Line 2022
	push	edi
	mov	DWORD PTR [edi+316], 0
	mov	DWORD PTR [edi+320], 0
	mov	DWORD PTR [edi+420], 0
	mov	DWORD PTR [edi+428], 0
	mov	DWORD PTR [edi+332], 0
	mov	DWORD PTR [edi+336], 0
	mov	DWORD PTR [edi+340], 0
	call	_SSL_CTX_SRP_CTX_init
; Line 2026
	push	2026					; 000007eaH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	mov	DWORD PTR [edi+344], 32			; 00000020H
	call	_CRYPTO_malloc
	add	esp, 16					; 00000010H
	mov	DWORD PTR [edi+352], eax
; Line 2027
	test	eax, eax
	je	$err$24
; Line 2029
	mov	DWORD PTR [eax], 0
; Line 2030
	mov	eax, DWORD PTR [edi+352]
; Line 2032
	push	2032					; 000007f0H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	12					; 0000000cH
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR [edi+352]
	mov	DWORD PTR [eax+8], 0
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+348], eax
; Line 2033
	test	eax, eax
	jne	SHORT $LN19@SSL_CTX_ne
; Line 2034
	push	DWORD PTR [edi+352]
	call	_CRYPTO_free
	add	esp, 4
	jmp	$err$24
$LN19@SSL_CTX_ne:
; Line 2037
	mov	DWORD PTR [eax], 0
; Line 2038
	mov	eax, DWORD PTR [edi+348]
	mov	DWORD PTR [eax+4], 0
; Line 2039
	mov	eax, DWORD PTR [edi+348]
	mov	DWORD PTR [eax+8], 0
; Line 2073
	mov	eax, edi
	or	DWORD PTR [edi+164], 16777220		; 01000004H
	mov	DWORD PTR [edi+252], 0
	pop	edi
	pop	ebx
; Line 2080
	ret	0
$LN9@SSL_CTX_ne:
; Line 1966
	push	1966					; 000007aeH
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	161					; 000000a1H
	jmp	$LN22@SSL_CTX_ne
_SSL_CTX_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_cipher_list
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_str$ = 12						; size = 4
_SSL_CTX_set_cipher_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1371
	mov	ecx, DWORD PTR _ctx$[esp-4]
	push	DWORD PTR [ecx+176]
	lea	eax, DWORD PTR [ecx+8]
	push	DWORD PTR _str$[esp]
	push	eax
	lea	eax, DWORD PTR [ecx+4]
	push	eax
	push	DWORD PTR [ecx]
	call	_ssl_create_cipher_list
	add	esp, 20					; 00000014H
; Line 1380
	test	eax, eax
	je	SHORT $LN6@SSL_CTX_se
; Line 1382
	push	eax
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@SSL_CTX_se
; Line 1383
	push	1383					; 00000567H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	185					; 000000b9H
	push	269					; 0000010dH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN6@SSL_CTX_se:
; Line 1384
	xor	eax, eax
; Line 1387
	ret	0
$LN4@SSL_CTX_se:
; Line 1386
	mov	eax, 1
; Line 1387
	ret	0
_SSL_CTX_set_cipher_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_peer_finished
_TEXT	SEGMENT
_s$ = 8							; size = 4
_buf$ = 12						; size = 4
_count$ = 16						; size = 4
_SSL_get_peer_finished PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 814
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR [eax+88]
	test	ecx, ecx
	je	SHORT $LN5@SSL_get_pe
; Line 816
	mov	eax, DWORD PTR _count$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+824]
	cmp	eax, esi
	cmova	eax, esi
; Line 818
	push	eax
	lea	eax, DWORD PTR [ecx+696]
	push	eax
	push	DWORD PTR _buf$[esp+8]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 820
	mov	eax, esi
	pop	esi
; Line 821
	ret	0
$LN5@SSL_get_pe:
; Line 820
	xor	eax, eax
; Line 821
	ret	0
_SSL_get_peer_finished ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_finished
_TEXT	SEGMENT
_s$ = 8							; size = 4
_buf$ = 12						; size = 4
_count$ = 16						; size = 4
_SSL_get_finished PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 800
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR [eax+88]
	test	ecx, ecx
	je	SHORT $LN5@SSL_get_fi
; Line 802
	mov	eax, DWORD PTR _count$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+692]
	cmp	eax, esi
	cmova	eax, esi
; Line 804
	push	eax
	lea	eax, DWORD PTR [ecx+564]
	push	eax
	push	DWORD PTR _buf$[esp+8]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 806
	mov	eax, esi
	pop	esi
; Line 807
	ret	0
$LN5@SSL_get_fi:
; Line 806
	xor	eax, eax
; Line 807
	ret	0
_SSL_get_finished ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_export_keying_material
_TEXT	SEGMENT
_s$ = 8							; size = 4
_out$ = 12						; size = 4
_olen$ = 16						; size = 4
_label$ = 20						; size = 4
_llen$ = 24						; size = 4
_p$ = 28						; size = 4
_plen$ = 32						; size = 4
_use_context$ = 36					; size = 4
_SSL_export_keying_material PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1831
	mov	ecx, DWORD PTR _s$[esp-4]
	cmp	DWORD PTR [ecx], 769			; 00000301H
	jge	SHORT $LN2@SSL_export
; Line 1832
	or	eax, -1
; Line 1837
	ret	0
$LN2@SSL_export:
; Line 1834
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[esp-4], ecx
	mov	eax, DWORD PTR [eax+100]
	mov	eax, DWORD PTR [eax+52]
	jmp	eax
_SSL_export_keying_material ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_servername_type
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_servername_type PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1621
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR [eax+192]
	test	ecx, ecx
	je	SHORT $LN2@SSL_get_se
	mov	eax, DWORD PTR [eax+288]
	test	eax, eax
	jne	SHORT $LN7@SSL_get_se
	mov	eax, DWORD PTR [ecx+208]
	test	eax, eax
	je	SHORT $LN2@SSL_get_se
$LN7@SSL_get_se:
; Line 1623
	xor	eax, eax
; Line 1625
	ret	0
$LN2@SSL_get_se:
; Line 1624
	or	eax, -1
; Line 1625
	ret	0
_SSL_get_servername_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_servername
_TEXT	SEGMENT
_s$ = 8							; size = 4
_type$ = 12						; size = 4
_SSL_get_servername PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1611
	cmp	DWORD PTR _type$[esp-4], 0
	je	SHORT $LN2@SSL_get_se
; Line 1612
	xor	eax, eax
; Line 1616
	ret	0
$LN2@SSL_get_se:
; Line 1614
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR [eax+192]
	test	ecx, ecx
	je	SHORT $LN4@SSL_get_se
	cmp	DWORD PTR [eax+288], 0
	jne	SHORT $LN4@SSL_get_se
	mov	eax, DWORD PTR [ecx+208]
; Line 1616
	ret	0
$LN4@SSL_get_se:
; Line 1614
	mov	eax, DWORD PTR [eax+288]
; Line 1616
	ret	0
_SSL_get_servername ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_psk_identity
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_psk_identity PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3455
	mov	eax, DWORD PTR _s$[esp-4]
	test	eax, eax
	je	SHORT $LN3@SSL_get_ps
	mov	eax, DWORD PTR [eax+192]
	test	eax, eax
	je	SHORT $LN3@SSL_get_ps
; Line 3457
	mov	eax, DWORD PTR [eax+144]
; Line 3458
	ret	0
$LN3@SSL_get_ps:
; Line 3456
	xor	eax, eax
; Line 3458
	ret	0
_SSL_get_psk_identity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get_psk_identity_hint
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SSL_get_psk_identity_hint PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3448
	mov	eax, DWORD PTR _s$[esp-4]
	test	eax, eax
	je	SHORT $LN3@SSL_get_ps
	mov	eax, DWORD PTR [eax+192]
	test	eax, eax
	je	SHORT $LN3@SSL_get_ps
; Line 3450
	mov	eax, DWORD PTR [eax+140]
; Line 3451
	ret	0
$LN3@SSL_get_ps:
; Line 3449
	xor	eax, eax
; Line 3451
	ret	0
_SSL_get_psk_identity_hint ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_use_psk_identity_hint
_TEXT	SEGMENT
_s$ = 8							; size = 4
_identity_hint$ = 12					; size = 4
_SSL_use_psk_identity_hint PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3424
	push	esi
; Line 3425
	mov	esi, DWORD PTR _s$[esp]
	test	esi, esi
	jne	SHORT $LN2@SSL_use_ps
; Line 3426
	xor	eax, eax
	pop	esi
; Line 3444
	ret	0
$LN2@SSL_use_ps:
; Line 3428
	mov	edx, DWORD PTR [esi+192]
	test	edx, edx
	jne	SHORT $LN3@SSL_use_ps
; Line 3429
	lea	eax, DWORD PTR [edx+1]
	pop	esi
; Line 3444
	ret	0
$LN3@SSL_use_ps:
	push	edi
; Line 3431
	mov	edi, DWORD PTR _identity_hint$[esp+4]
	test	edi, edi
	je	SHORT $LN4@SSL_use_ps
	mov	ecx, edi
	push	ebx
	lea	ebx, DWORD PTR [ecx+1]
	npad	5
$LL10@SSL_use_ps:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL10@SSL_use_ps
	sub	ecx, ebx
	pop	ebx
	cmp	ecx, 128				; 00000080H
	jbe	SHORT $LN4@SSL_use_ps
; Line 3432
	push	3432					; 00000d68H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	146					; 00000092H
	push	273					; 00000111H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 3433
	xor	eax, eax
	pop	edi
	pop	esi
; Line 3444
	ret	0
$LN4@SSL_use_ps:
; Line 3435
	mov	eax, DWORD PTR [edx+140]
	test	eax, eax
	je	SHORT $LN5@SSL_use_ps
; Line 3436
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN5@SSL_use_ps:
; Line 3437
	test	edi, edi
	je	SHORT $LN6@SSL_use_ps
; Line 3438
	push	edi
	call	_BUF_strdup
	mov	ecx, DWORD PTR [esi+192]
	add	esp, 4
	mov	DWORD PTR [ecx+140], eax
; Line 3439
	mov	eax, DWORD PTR [esi+192]
	cmp	DWORD PTR [eax+140], 0
	jne	SHORT $LN7@SSL_use_ps
; Line 3440
	pop	edi
	xor	eax, eax
	pop	esi
; Line 3444
	ret	0
$LN6@SSL_use_ps:
; Line 3442
	mov	eax, DWORD PTR [esi+192]
	mov	DWORD PTR [eax+140], 0
$LN7@SSL_use_ps:
; Line 3443
	pop	edi
	mov	eax, 1
	pop	esi
; Line 3444
	ret	0
_SSL_use_psk_identity_hint ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_use_psk_identity_hint
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_identity_hint$ = 12					; size = 4
_SSL_CTX_use_psk_identity_hint PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3406
	push	esi
; Line 3407
	mov	esi, DWORD PTR _identity_hint$[esp]
	test	esi, esi
	je	SHORT $LN2@SSL_CTX_us
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
	npad	2
$LL8@SSL_CTX_us:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL8@SSL_CTX_us
	sub	ecx, edx
	cmp	ecx, 128				; 00000080H
	jbe	SHORT $LN2@SSL_CTX_us
; Line 3408
	push	3409					; 00000d51H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	146					; 00000092H
	push	272					; 00000110H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 3410
	xor	eax, eax
	pop	esi
; Line 3421
	ret	0
$LN2@SSL_CTX_us:
	push	edi
; Line 3412
	mov	edi, DWORD PTR _ctx$[esp+4]
	mov	eax, DWORD PTR [edi+332]
	test	eax, eax
	je	SHORT $LN3@SSL_CTX_us
; Line 3413
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@SSL_CTX_us:
; Line 3414
	test	esi, esi
	je	SHORT $LN4@SSL_CTX_us
; Line 3415
	push	esi
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [edi+332], eax
; Line 3416
	test	eax, eax
	jne	SHORT $LN5@SSL_CTX_us
	pop	edi
	pop	esi
; Line 3421
	ret	0
$LN4@SSL_CTX_us:
; Line 3419
	mov	DWORD PTR [edi+332], 0
$LN5@SSL_CTX_us:
	pop	edi
; Line 3420
	mov	eax, 1
	pop	esi
; Line 3421
	ret	0
_SSL_CTX_use_psk_identity_hint ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_psk_server_callback
_TEXT	SEGMENT
_s$ = 8							; size = 4
_cb$ = 12						; size = 4
_SSL_set_psk_server_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3493
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+224], ecx
; Line 3494
	ret	0
_SSL_set_psk_server_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_psk_server_callback
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_CTX_set_psk_server_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3503
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+340], ecx
; Line 3504
	ret	0
_SSL_CTX_set_psk_server_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_psk_client_callback
_TEXT	SEGMENT
_s$ = 8							; size = 4
_cb$ = 12						; size = 4
_SSL_set_psk_client_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3470
	mov	eax, DWORD PTR _s$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+220], ecx
; Line 3471
	ret	0
_SSL_set_psk_client_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_psk_client_callback
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_CTX_set_psk_client_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 3483
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+336], ecx
; Line 3484
	ret	0
_SSL_CTX_set_psk_client_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get0_alpn_selected
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_SSL_get0_alpn_selected PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1815
	mov	ecx, DWORD PTR _data$[esp-4]
; Line 1816
	mov	edx, DWORD PTR _ssl$[esp-4]
	mov	DWORD PTR [ecx], 0
	mov	eax, DWORD PTR [edx+88]
	test	eax, eax
	je	SHORT $LN6@SSL_get0_a
; Line 1817
	mov	eax, DWORD PTR [eax+1060]
	mov	DWORD PTR [ecx], eax
; Line 1818
	test	eax, eax
	je	SHORT $LN6@SSL_get0_a
; Line 1821
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, DWORD PTR [eax+1064]
	mov	eax, DWORD PTR _len$[esp-4]
	mov	DWORD PTR [eax], ecx
; Line 1822
	ret	0
$LN6@SSL_get0_a:
; Line 1819
	mov	eax, DWORD PTR _len$[esp-4]
	mov	DWORD PTR [eax], 0
; Line 1822
	ret	0
_SSL_get0_alpn_selected ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_alpn_select_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_arg$ = 16						; size = 4
_SSL_CTX_set_alpn_select_cb PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1802
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+440], eax
; Line 1803
	mov	eax, DWORD PTR _arg$[esp-4]
	mov	DWORD PTR [ecx+444], eax
; Line 1804
	ret	0
_SSL_CTX_set_alpn_select_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_alpn_protos
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_protos$ = 12						; size = 4
_protos_len$ = 16					; size = 4
_SSL_set_alpn_protos PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1776
	push	esi
; Line 1777
	mov	esi, DWORD PTR _ssl$[esp]
	push	edi
	mov	eax, DWORD PTR [esi+468]
	test	eax, eax
	je	SHORT $LN2@SSL_set_al
; Line 1778
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN2@SSL_set_al:
; Line 1780
	mov	edi, DWORD PTR _protos_len$[esp+4]
	push	1780					; 000006f4H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+468], eax
; Line 1781
	test	eax, eax
	jne	SHORT $LN3@SSL_set_al
; Line 1782
	pop	edi
	mov	eax, 1
	pop	esi
; Line 1787
	ret	0
$LN3@SSL_set_al:
; Line 1783
	push	edi
	push	DWORD PTR _protos$[esp+8]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1784
	mov	DWORD PTR [esi+472], edi
; Line 1786
	xor	eax, eax
	pop	edi
	pop	esi
; Line 1787
	ret	0
_SSL_set_alpn_protos ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_alpn_protos
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_protos$ = 12						; size = 4
_protos_len$ = 16					; size = 4
_SSL_CTX_set_alpn_protos PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1756
	push	esi
; Line 1757
	mov	esi, DWORD PTR _ctx$[esp]
	push	edi
	mov	eax, DWORD PTR [esi+448]
	test	eax, eax
	je	SHORT $LN2@SSL_CTX_se
; Line 1758
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN2@SSL_CTX_se:
; Line 1760
	mov	edi, DWORD PTR _protos_len$[esp+4]
	push	1760					; 000006e0H
	push	OFFSET ??_C@_0BA@KBOIMHCO@?4?2ssl?2ssl_lib?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+448], eax
; Line 1761
	test	eax, eax
	jne	SHORT $LN3@SSL_CTX_se
; Line 1762
	pop	edi
	mov	eax, 1
	pop	esi
; Line 1767
	ret	0
$LN3@SSL_CTX_se:
; Line 1763
	push	edi
	push	DWORD PTR _protos$[esp+8]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1764
	mov	DWORD PTR [esi+452], edi
; Line 1766
	xor	eax, eax
	pop	edi
	pop	esi
; Line 1767
	ret	0
_SSL_CTX_set_alpn_protos ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_select_next_proto
_TEXT	SEGMENT
tv167 = -8						; size = 4
_i$1$ = -4						; size = 4
_out$ = 8						; size = 4
_outlen$ = 12						; size = 4
_server$ = 16						; size = 4
_server_len$ = 20					; size = 4
_client$ = 24						; size = 4
_client_len$ = 28					; size = 4
_SSL_select_next_proto PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1652
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
; Line 1660
	mov	ebp, DWORD PTR _client$[esp+12]
	xor	ecx, ecx
	push	esi
	push	edi
	mov	DWORD PTR _i$1$[esp+24], ecx
	cmp	DWORD PTR _server_len$[esp+20], ecx
	jbe	$LN19@SSL_select
$LN29@SSL_select:
	mov	eax, DWORD PTR _client_len$[esp+20]
; Line 1661
	xor	edi, edi
	test	eax, eax
	je	SHORT $LN6@SSL_select
; Line 1662
	add	ecx, DWORD PTR _server$[esp+20]
	mov	DWORD PTR tv167[esp+24], ecx
	mov	bh, BYTE PTR [ecx]
$LL5@SSL_select:
	mov	bl, BYTE PTR [edi+ebp]
	cmp	bh, bl
	jne	SHORT $LN24@SSL_select
	lea	eax, DWORD PTR [ebp+1]
	movzx	esi, bh
	add	eax, edi
	lea	edx, DWORD PTR [ecx+1]
	sub	esi, 4
	jb	SHORT $LN22@SSL_select
	npad	3
$LL23@SSL_select:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN21@SSL_select
	add	edx, 4
	add	eax, 4
	sub	esi, 4
	jae	SHORT $LL23@SSL_select
$LN22@SSL_select:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN20@SSL_select
$LN21@SSL_select:
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN28@SSL_select
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN20@SSL_select
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN28@SSL_select
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN20@SSL_select
	mov	cl, BYTE PTR [edx+2]
	cmp	cl, BYTE PTR [eax+2]
	jne	SHORT $LN28@SSL_select
	cmp	esi, -1
	je	SHORT $LN20@SSL_select
	mov	cl, BYTE PTR [edx+3]
	cmp	cl, BYTE PTR [eax+3]
	je	SHORT $LN20@SSL_select
$LN28@SSL_select:
	mov	ecx, DWORD PTR tv167[esp+24]
$LN24@SSL_select:
; Line 1670
	inc	edi
	movzx	eax, bl
	add	edi, eax
	cmp	edi, DWORD PTR _client_len$[esp+20]
	jb	SHORT $LL5@SSL_select
	mov	ecx, DWORD PTR _i$1$[esp+24]
$LN6@SSL_select:
; Line 1672
	mov	eax, DWORD PTR _server$[esp+20]
	movzx	eax, BYTE PTR [ecx+eax]
; Line 1673
	inc	ecx
	add	ecx, eax
	mov	DWORD PTR _i$1$[esp+24], ecx
	cmp	ecx, DWORD PTR _server_len$[esp+20]
	jb	$LN29@SSL_select
$LN19@SSL_select:
; Line 1678
	mov	eax, 2
$found$31:
; Line 1681
	mov	ecx, DWORD PTR _out$[esp+20]
	lea	edx, DWORD PTR [ebp+1]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], edx
; Line 1682
	mov	ecx, DWORD PTR _outlen$[esp+12]
	mov	dl, BYTE PTR [ebp]
	pop	ebp
	pop	ebx
	mov	BYTE PTR [ecx], dl
; Line 1684
	add	esp, 8
	ret	0
$LN20@SSL_select:
; Line 1665
	mov	ebp, DWORD PTR _i$1$[esp+24]
; Line 1666
	mov	eax, 1
	add	ebp, DWORD PTR _server$[esp+20]
; Line 1667
	jmp	SHORT $found$31
_SSL_select_next_proto ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_get0_next_proto_negotiated
_TEXT	SEGMENT
_s$ = 8							; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_SSL_get0_next_proto_negotiated PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1698
	mov	edx, DWORD PTR _s$[esp-4]
	mov	eax, DWORD PTR _data$[esp-4]
	mov	ecx, DWORD PTR [edx+372]
	mov	DWORD PTR [eax], ecx
; Line 1700
	mov	eax, DWORD PTR _len$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN2@SSL_get0_n
	mov	DWORD PTR [eax], ecx
; Line 1704
	ret	0
$LN2@SSL_get0_n:
; Line 1702
	movzx	ecx, BYTE PTR [edx+376]
	mov	DWORD PTR [eax], ecx
; Line 1704
	ret	0
_SSL_get0_next_proto_negotiated ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_next_proto_select_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_arg$ = 16						; size = 4
_SSL_CTX_set_next_proto_select_cb PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1744
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+428], eax
; Line 1745
	mov	eax, DWORD PTR _arg$[esp-4]
	mov	DWORD PTR [ecx+432], eax
; Line 1746
	ret	0
_SSL_CTX_set_next_proto_select_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_next_protos_advertised_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_arg$ = 16						; size = 4
_SSL_CTX_set_next_protos_advertised_cb PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1723
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+420], eax
; Line 1724
	mov	eax, DWORD PTR _arg$[esp-4]
	mov	DWORD PTR [ecx+424], eax
; Line 1725
	ret	0
_SSL_CTX_set_next_protos_advertised_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_sessions
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_SSL_CTX_sessions PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1184
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+16]
; Line 1185
	ret	0
_SSL_CTX_sessions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_set_msg_callback
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_set_msg_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1171
	mov	eax, DWORD PTR _ssl$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+100], ecx
; Line 3521
	ret	0
_SSL_set_msg_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CTX_set_msg_callback
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_SSL_CTX_set_msg_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_lib.c
; Line 1287
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+184], ecx
; Line 3513
	ret	0
_SSL_CTX_set_msg_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	jmp	DWORD PTR __imp___time64
_time	ENDP
_TEXT	ENDS
END

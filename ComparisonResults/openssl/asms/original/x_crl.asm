; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_X509_REVOKED_it
PUBLIC	_X509_CRL_INFO_it
PUBLIC	??_C@_0N@OMOHFKCJ@serialNumber?$AA@		; `string'
PUBLIC	??_C@_0P@HBDMPDNI@revocationDate?$AA@		; `string'
PUBLIC	??_C@_0L@ICCCPLKC@extensions?$AA@		; `string'
PUBLIC	??_C@_0N@JBPKOADN@X509_REVOKED?$AA@		; `string'
PUBLIC	??_C@_07CPCPJPKL@version?$AA@			; `string'
PUBLIC	??_C@_07OBHFIHGJ@sig_alg?$AA@			; `string'
PUBLIC	??_C@_06EAINIONG@issuer?$AA@			; `string'
PUBLIC	??_C@_0L@MPDCJAIM@lastUpdate?$AA@		; `string'
PUBLIC	??_C@_0L@BMOABHOK@nextUpdate?$AA@		; `string'
PUBLIC	??_C@_07MIJFAMBD@revoked?$AA@			; `string'
PUBLIC	??_C@_0O@IMOAEKCP@X509_CRL_INFO?$AA@		; `string'
PUBLIC	??_C@_03GJBFOAJL@crl?$AA@			; `string'
PUBLIC	??_C@_09CMIIOJHF@signature?$AA@			; `string'
PUBLIC	??_C@_08JGFBPDAP@X509_CRL?$AA@			; `string'
EXTRN	_ASN1_BIT_STRING_it:PROC
EXTRN	_ASN1_INTEGER_it:PROC
EXTRN	_ASN1_TIME_it:PROC
EXTRN	_X509_ALGOR_it:PROC
EXTRN	_X509_EXTENSION_it:PROC
EXTRN	_X509_NAME_it:PROC
;	COMDAT ??_C@_08JGFBPDAP@X509_CRL?$AA@
CONST	SEGMENT
??_C@_08JGFBPDAP@X509_CRL?$AA@ DB 'X509_CRL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMIIOJHF@signature?$AA@
CONST	SEGMENT
??_C@_09CMIIOJHF@signature?$AA@ DB 'signature', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GJBFOAJL@crl?$AA@
CONST	SEGMENT
??_C@_03GJBFOAJL@crl?$AA@ DB 'crl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IMOAEKCP@X509_CRL_INFO?$AA@
CONST	SEGMENT
??_C@_0O@IMOAEKCP@X509_CRL_INFO?$AA@ DB 'X509_CRL_INFO', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MIJFAMBD@revoked?$AA@
CONST	SEGMENT
??_C@_07MIJFAMBD@revoked?$AA@ DB 'revoked', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BMOABHOK@nextUpdate?$AA@
CONST	SEGMENT
??_C@_0L@BMOABHOK@nextUpdate?$AA@ DB 'nextUpdate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MPDCJAIM@lastUpdate?$AA@
CONST	SEGMENT
??_C@_0L@MPDCJAIM@lastUpdate?$AA@ DB 'lastUpdate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EAINIONG@issuer?$AA@
CONST	SEGMENT
??_C@_06EAINIONG@issuer?$AA@ DB 'issuer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OBHFIHGJ@sig_alg?$AA@
CONST	SEGMENT
??_C@_07OBHFIHGJ@sig_alg?$AA@ DB 'sig_alg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version?$AA@
CONST	SEGMENT
??_C@_07CPCPJPKL@version?$AA@ DB 'version', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_int_crl_meth DD 00H
	DD	00H
	DD	00H
	DD	FLAT:_def_crl_lookup
	DD	FLAT:_def_crl_verify
_default_crl_method DD FLAT:_int_crl_meth
_DATA	ENDS
;	COMDAT ??_C@_0N@JBPKOADN@X509_REVOKED?$AA@
CONST	SEGMENT
??_C@_0N@JBPKOADN@X509_REVOKED?$AA@ DB 'X509_REVOKED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ICCCPLKC@extensions?$AA@
CONST	SEGMENT
??_C@_0L@ICCCPLKC@extensions?$AA@ DB 'extensions', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBDMPDNI@revocationDate?$AA@
CONST	SEGMENT
??_C@_0P@HBDMPDNI@revocationDate?$AA@ DB 'revocationDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OMOHFKCJ@serialNumber?$AA@
CONST	SEGMENT
??_C@_0N@OMOHFKCJ@serialNumber?$AA@ DB 'serialNumber', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_X509_REVOKED_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@OMOHFKCJ@serialNumber?$AA@
	DD	FLAT:_ASN1_INTEGER_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_0P@HBDMPDNI@revocationDate?$AA@
	DD	FLAT:_ASN1_TIME_it
	DD	05H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_0L@ICCCPLKC@extensions?$AA@
	DD	FLAT:_X509_EXTENSION_it
?local_it@?1??X509_REVOKED_it@@9@9 DB 01H		; `X509_REVOKED_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_X509_REVOKED_seq_tt
	DD	03H
	DD	00H
	DD	018H
	DD	FLAT:??_C@_0N@JBPKOADN@X509_REVOKED?$AA@
_X509_CRL_INFO_aux DD 00H
	DD	02H
	DD	00H
	DD	00H
	DD	FLAT:_crl_inf_cb
	DD	01cH
_X509_CRL_INFO_seq_tt DD 01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DD	FLAT:_ASN1_INTEGER_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_07OBHFIHGJ@sig_alg?$AA@
	DD	FLAT:_X509_ALGOR_it
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_06EAINIONG@issuer?$AA@
	DD	FLAT:_X509_NAME_it
	DD	00H
	DD	00H
	DD	0cH
	DD	FLAT:??_C@_0L@MPDCJAIM@lastUpdate?$AA@
	DD	FLAT:_ASN1_TIME_it
	DD	01H
	DD	00H
	DD	010H
	DD	FLAT:??_C@_0L@BMOABHOK@nextUpdate?$AA@
	DD	FLAT:_ASN1_TIME_it
	DD	05H
	DD	00H
	DD	014H
	DD	FLAT:??_C@_07MIJFAMBD@revoked?$AA@
	DD	FLAT:_X509_REVOKED_it
	DD	095H
	DD	00H
	DD	018H
	DD	FLAT:??_C@_0L@ICCCPLKC@extensions?$AA@
	DD	FLAT:_X509_EXTENSION_it
?local_it@?1??X509_CRL_INFO_it@@9@9 DB 01H		; `X509_CRL_INFO_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_X509_CRL_INFO_seq_tt
	DD	07H
	DD	FLAT:_X509_CRL_INFO_aux
	DD	028H
	DD	FLAT:??_C@_0O@IMOAEKCP@X509_CRL_INFO?$AA@
_X509_CRL_aux DD 00H
	DD	01H
	DD	0cH
	DD	06H
	DD	FLAT:_crl_cb
	DD	00H
_X509_CRL_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03GJBFOAJL@crl?$AA@
	DD	FLAT:_X509_CRL_INFO_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_07OBHFIHGJ@sig_alg?$AA@
	DD	FLAT:_X509_ALGOR_it
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:??_C@_09CMIIOJHF@signature?$AA@
	DD	FLAT:_ASN1_BIT_STRING_it
?local_it@?1??X509_CRL_it@@9@9 DB 01H			; `X509_CRL_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_X509_CRL_seq_tt
	DD	03H
	DD	FLAT:_X509_CRL_aux
	DD	04cH
	DD	FLAT:??_C@_08JGFBPDAP@X509_CRL?$AA@
CONST	ENDS
PUBLIC	_X509_CRL_set_default_method
PUBLIC	_X509_CRL_METHOD_new
PUBLIC	_X509_CRL_METHOD_free
PUBLIC	_X509_CRL_set_meth_data
PUBLIC	_X509_CRL_get_meth_data
PUBLIC	_X509_CRL_verify
PUBLIC	_X509_CRL_dup
PUBLIC	_X509_REVOKED_dup
PUBLIC	_X509_REVOKED_new
PUBLIC	_X509_REVOKED_free
PUBLIC	_d2i_X509_REVOKED
PUBLIC	_i2d_X509_REVOKED
PUBLIC	_X509_CRL_INFO_new
PUBLIC	_X509_CRL_INFO_free
PUBLIC	_d2i_X509_CRL_INFO
PUBLIC	_i2d_X509_CRL_INFO
PUBLIC	_X509_CRL_new
PUBLIC	_X509_CRL_free
PUBLIC	_d2i_X509_CRL
PUBLIC	_i2d_X509_CRL
PUBLIC	_X509_CRL_it
PUBLIC	_X509_CRL_add0_revoked
PUBLIC	_X509_CRL_get0_by_serial
PUBLIC	_X509_CRL_get0_by_cert
PUBLIC	??_C@_0BG@GOAPPJIK@?4?2crypto?2asn1?2x_crl?4c?$AA@ ; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_sk_set_cmp_func:PROC
EXTRN	_sk_sort:PROC
EXTRN	_sk_is_sorted:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_STRING_cmp:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_ASN1_INTEGER_cmp:PROC
EXTRN	_ASN1_ENUMERATED_free:PROC
EXTRN	_ASN1_ENUMERATED_get:PROC
EXTRN	_ASN1_item_dup:PROC
EXTRN	_ASN1_item_new:PROC
EXTRN	_ASN1_item_free:PROC
EXTRN	_ASN1_item_d2i:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_X509_CRL_digest:PROC
EXTRN	_ASN1_item_verify:PROC
EXTRN	_X509_get_serialNumber:PROC
EXTRN	_X509_get_issuer_name:PROC
EXTRN	_X509_NAME_cmp:PROC
EXTRN	_X509_CRL_get_ext_d2i:PROC
EXTRN	_X509_REVOKED_get_ext_d2i:PROC
EXTRN	_AUTHORITY_KEYID_free:PROC
EXTRN	_GENERAL_NAMES_free:PROC
EXTRN	_ISSUING_DIST_POINT_free:PROC
EXTRN	_DIST_POINT_set_dpname:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BG@GOAPPJIK@?4?2crypto?2asn1?2x_crl?4c?$AA@
CONST	SEGMENT
??_C@_0BG@GOAPPJIK@?4?2crypto?2asn1?2x_crl?4c?$AA@ DB '.\crypto\asn1\x_cr'
	DB	'l.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _crl_revoked_issuer_match
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_nm$ = 12						; size = 4
_rev$ = 16						; size = 4
_crl_revoked_issuer_match PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 405
	push	edi
; Line 408
	mov	edi, DWORD PTR _rev$[esp]
	mov	ecx, DWORD PTR [edi+12]
	test	ecx, ecx
	jne	SHORT $LN5@crl_revoke
; Line 409
	mov	ecx, DWORD PTR _nm$[esp]
	test	ecx, ecx
	jne	SHORT $LN6@crl_revoke
; Line 410
	mov	eax, 1
	pop	edi
; Line 428
	ret	0
$LN6@crl_revoke:
; Line 411
	mov	eax, DWORD PTR _crl$[esp]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	push	ecx
	call	_X509_NAME_cmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	inc	eax
	pop	edi
; Line 428
	ret	0
$LN5@crl_revoke:
	push	ebx
; Line 416
	mov	ebx, DWORD PTR _nm$[esp+4]
	test	ebx, ebx
	jne	SHORT $LN8@crl_revoke
; Line 417
	mov	eax, DWORD PTR _crl$[esp+4]
	mov	eax, DWORD PTR [eax]
	mov	ebx, DWORD PTR [eax+8]
$LN8@crl_revoke:
; Line 419
	push	esi
	push	ecx
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN17@crl_revoke
$LL4@crl_revoke:
; Line 420
	push	esi
	push	DWORD PTR [edi+12]
	call	_sk_value
	add	esp, 8
; Line 421
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN2@crl_revoke
; Line 423
	push	DWORD PTR [eax+4]
	push	ebx
	call	_X509_NAME_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN13@crl_revoke
$LN2@crl_revoke:
; Line 419
	push	DWORD PTR [edi+12]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@crl_revoke
$LN17@crl_revoke:
	pop	esi
	pop	ebx
; Line 426
	xor	eax, eax
	pop	edi
; Line 428
	ret	0
$LN13@crl_revoke:
	pop	esi
	pop	ebx
; Line 424
	mov	eax, 1
	pop	edi
; Line 428
	ret	0
_crl_revoked_issuer_match ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _crl_cb
_TEXT	SEGMENT
_operation$ = 8						; size = 4
_pval$ = 12						; size = 4
_it$ = 16						; size = 4
_exarg$ = 20						; size = 4
_crl_cb	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 203
	mov	eax, DWORD PTR _pval$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 208
	mov	eax, DWORD PTR _operation$[esp]
	sub	eax, 1
	je	$LN7@crl_cb
	sub	eax, 2
	je	$LN18@crl_cb
	sub	eax, 2
	jne	$LN2@crl_cb
; Line 224
	push	eax
	lea	eax, DWORD PTR [esi+44]
	push	eax
	call	_EVP_sha1
	push	eax
	push	esi
	call	_X509_CRL_digest
; Line 226
	push	0
	push	0
	push	770					; 00000302H
	push	esi
	call	_X509_CRL_get_ext_d2i
	add	esp, 32					; 00000020H
	mov	DWORD PTR [esi+24], eax
; Line 229
	test	eax, eax
	je	SHORT $LN9@crl_cb
; Line 230
	push	eax
	push	esi
	call	_setup_idp
	add	esp, 8
$LN9@crl_cb:
; Line 232
	push	0
	push	0
	push	90					; 0000005aH
	push	esi
	call	_X509_CRL_get_ext_d2i
; Line 236
	push	0
	push	0
	push	88					; 00000058H
	push	esi
	mov	DWORD PTR [esi+20], eax
	call	_X509_CRL_get_ext_d2i
; Line 239
	push	0
	push	0
	push	140					; 0000008cH
	push	esi
	mov	DWORD PTR [esi+36], eax
	call	_X509_CRL_get_ext_d2i
	add	esp, 48					; 00000030H
	mov	DWORD PTR [esi+40], eax
; Line 243
	test	eax, eax
	je	SHORT $LN10@crl_cb
	cmp	DWORD PTR [esi+36], 0
	jne	SHORT $LN10@crl_cb
; Line 244
	or	DWORD PTR [esi+16], 128			; 00000080H
$LN10@crl_cb:
; Line 253
	mov	eax, DWORD PTR [esi]
	push	ebp
	push	edi
; Line 255
	xor	edi, edi
	mov	ebp, DWORD PTR [eax+24]
	push	ebp
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN14@crl_cb
	push	ebx
$LL6@crl_cb:
; Line 257
	push	edi
	push	ebp
	call	_sk_value
	mov	ebx, eax
; Line 258
	push	DWORD PTR [ebx]
	call	_OBJ_obj2nid
	add	esp, 12					; 0000000cH
; Line 259
	cmp	eax, 857				; 00000359H
	jne	SHORT $LN11@crl_cb
; Line 260
	or	DWORD PTR [esi+16], 4096		; 00001000H
$LN11@crl_cb:
; Line 261
	cmp	DWORD PTR [ebx+4], 0
	jg	SHORT $LN25@crl_cb
; Line 255
	push	ebp
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL6@crl_cb
; Line 261
	jmp	SHORT $LN29@crl_cb
$LN25@crl_cb:
; Line 265
	cmp	eax, 770				; 00000302H
	je	SHORT $LN29@crl_cb
	cmp	eax, 90					; 0000005aH
	je	SHORT $LN29@crl_cb
	cmp	eax, 140				; 0000008cH
	je	SHORT $LN29@crl_cb
; Line 267
	or	DWORD PTR [esi+16], 512			; 00000200H
$LN29@crl_cb:
	pop	ebx
$LN14@crl_cb:
; Line 272
	push	esi
	call	_crl_set_issuers
	add	esp, 4
	pop	edi
	pop	ebp
	test	eax, eax
	je	SHORT $LN30@crl_cb
; Line 275
	mov	eax, DWORD PTR [esi+68]
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	$LN2@crl_cb
; Line 276
	push	esi
	call	eax
	add	esp, 4
	test	eax, eax
	jne	$LN2@crl_cb
$LN30@crl_cb:
; Line 277
	xor	eax, eax
	pop	esi
; Line 296
	ret	0
$LN18@crl_cb:
; Line 282
	mov	eax, DWORD PTR [esi+68]
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	je	SHORT $LN20@crl_cb
; Line 283
	push	esi
	call	eax
	add	esp, 4
	test	eax, eax
	je	SHORT $LN30@crl_cb
$LN20@crl_cb:
; Line 286
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN21@crl_cb
; Line 287
	push	eax
	call	_AUTHORITY_KEYID_free
	add	esp, 4
$LN21@crl_cb:
; Line 288
	mov	eax, DWORD PTR [esi+24]
	test	eax, eax
	je	SHORT $LN22@crl_cb
; Line 289
	push	eax
	call	_ISSUING_DIST_POINT_free
	add	esp, 4
$LN22@crl_cb:
; Line 290
	push	DWORD PTR [esi+36]
	call	_ASN1_INTEGER_free
; Line 291
	push	DWORD PTR [esi+40]
	call	_ASN1_INTEGER_free
; Line 292
	push	OFFSET _GENERAL_NAMES_free
	push	DWORD PTR [esi+64]
	call	_sk_pop_free
	add	esp, 16					; 00000010H
; Line 295
	mov	eax, 1
	pop	esi
; Line 296
	ret	0
$LN7@crl_cb:
; Line 215
	mov	eax, DWORD PTR _default_crl_method
	mov	DWORD PTR [esi+24], 0
	mov	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [esi+32], 32895		; 0000807fH
	mov	DWORD PTR [esi+68], eax
; Line 216
	mov	DWORD PTR [esi+72], 0
; Line 217
	mov	DWORD PTR [esi+64], 0
; Line 218
	mov	DWORD PTR [esi+36], 0
; Line 219
	mov	DWORD PTR [esi+40], 0
$LN2@crl_cb:
; Line 295
	mov	eax, 1
	pop	esi
; Line 296
	ret	0
_crl_cb	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _crl_set_issuers
_TEXT	SEGMENT
_gens$1$ = -8						; size = 4
_revoked$1$ = -4					; size = 4
_j$ = 8							; size = 4
_crl$ = 8						; size = 4
_crl_set_issuers PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 131
	mov	eax, 8
	call	__chkstk
	push	ebx
; Line 137
	mov	ebx, DWORD PTR _crl$[esp+8]
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR [ebx]
; Line 140
	xor	ebp, ebp
	mov	DWORD PTR _gens$1$[esp+24], 0
	mov	esi, DWORD PTR [eax+20]
	push	esi
	mov	DWORD PTR _revoked$1$[esp+28], esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@crl_set_is
$LL4@crl_set_is:
; Line 141
	push	ebp
	push	esi
	call	_sk_value
	mov	esi, eax
; Line 145
	lea	eax, DWORD PTR _j$[esp+28]
	push	0
	push	eax
	push	771					; 00000303H
	push	esi
	call	_X509_REVOKED_get_ext_d2i
	mov	edi, eax
	add	esp, 24					; 00000018H
; Line 147
	test	edi, edi
	jne	SHORT $LN32@crl_set_is
	cmp	DWORD PTR _j$[esp+20], -1
	je	SHORT $LN12@crl_set_is
$LN21@crl_set_is:
; Line 148
	or	DWORD PTR [ebx+16], 128			; 00000080H
$LN3@crl_set_is:
	pop	edi
	pop	esi
	pop	ebp
; Line 192
	mov	eax, 1
	pop	ebx
; Line 194
	add	esp, 8
	ret	0
$LN32@crl_set_is:
; Line 154
	cmp	DWORD PTR [ebx+64], 0
	mov	DWORD PTR _gens$1$[esp+24], edi
	jne	SHORT $LN11@crl_set_is
; Line 155
	call	_sk_new_null
	mov	DWORD PTR [ebx+64], eax
; Line 156
	test	eax, eax
	je	$LN22@crl_set_is
$LN11@crl_set_is:
; Line 159
	push	edi
	push	DWORD PTR [ebx+64]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN22@crl_set_is
$LN12@crl_set_is:
; Line 162
	mov	eax, DWORD PTR _gens$1$[esp+24]
	mov	DWORD PTR [esi+12], eax
; Line 164
	lea	eax, DWORD PTR _j$[esp+20]
	push	0
	push	eax
	push	141					; 0000008dH
	push	esi
	call	_X509_REVOKED_get_ext_d2i
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 165
	test	edi, edi
	jne	SHORT $LN31@crl_set_is
	cmp	DWORD PTR _j$[esp+20], -1
	jne	SHORT $LN21@crl_set_is
; Line 174
	mov	DWORD PTR [esi+16], -1
	jmp	SHORT $LN15@crl_set_is
$LN31@crl_set_is:
; Line 171
	push	edi
	call	_ASN1_ENUMERATED_get
; Line 172
	push	edi
	mov	DWORD PTR [esi+16], eax
	call	_ASN1_ENUMERATED_free
	add	esp, 8
$LN15@crl_set_is:
; Line 178
	mov	esi, DWORD PTR [esi+8]
; Line 180
	push	esi
	mov	DWORD PTR _j$[esp+24], 0
	call	_sk_num
	mov	ecx, DWORD PTR _j$[esp+24]
	add	esp, 4
	cmp	ecx, eax
	jge	SHORT $LN2@crl_set_is
	npad	1
$LL7@crl_set_is:
; Line 181
	push	ecx
	push	esi
	call	_sk_value
	add	esp, 8
; Line 182
	cmp	DWORD PTR [eax+4], 0
	jle	SHORT $LN5@crl_set_is
; Line 183
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 771				; 00000303H
	jne	SHORT $LN17@crl_set_is
$LN5@crl_set_is:
; Line 180
	inc	DWORD PTR _j$[esp+20]
	push	esi
	call	_sk_num
	mov	ecx, DWORD PTR _j$[esp+24]
	add	esp, 4
	cmp	ecx, eax
	jl	SHORT $LL7@crl_set_is
	jmp	SHORT $LN2@crl_set_is
$LN17@crl_set_is:
; Line 185
	or	DWORD PTR [ebx+16], 512			; 00000200H
$LN2@crl_set_is:
; Line 140
	mov	esi, DWORD PTR _revoked$1$[esp+24]
	inc	ebp
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jl	$LL4@crl_set_is
; Line 192
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 194
	add	esp, 8
	ret	0
$LN22@crl_set_is:
	pop	edi
	pop	esi
	pop	ebp
; Line 157
	xor	eax, eax
	pop	ebx
; Line 194
	add	esp, 8
	ret	0
_crl_set_issuers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _crl_inf_cb
_TEXT	SEGMENT
_operation$ = 8						; size = 4
_pval$ = 12						; size = 4
_it$ = 16						; size = 4
_exarg$ = 20						; size = 4
_crl_inf_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 98
	mov	eax, DWORD PTR _pval$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 100
	test	eax, eax
	je	SHORT $LN5@crl_inf_cb
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	SHORT $LN5@crl_inf_cb
; Line 102
	cmp	DWORD PTR _operation$[esp-4], 5
	jne	SHORT $LN5@crl_inf_cb
; Line 108
	push	OFFSET _X509_REVOKED_cmp
	push	eax
	call	_sk_set_cmp_func
	add	esp, 8
$LN5@crl_inf_cb:
; Line 101
	mov	eax, 1
; Line 112
	ret	0
_crl_inf_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _def_crl_lookup
_TEXT	SEGMENT
_rtmp$ = -24						; size = 24
_idx$1$ = 8						; size = 4
_crl$ = 8						; size = 4
_ret$ = 12						; size = 4
_serial$ = 16						; size = 4
_issuer$ = 20						; size = 4
_def_crl_lookup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 433
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 436
	mov	eax, DWORD PTR _serial$[esp+20]
	push	ebx
; Line 441
	mov	ebx, DWORD PTR _crl$[esp+24]
	mov	DWORD PTR _rtmp$[esp+28], eax
	push	ebp
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+20]
	call	_sk_is_sorted
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@def_crl_lo
; Line 442
	push	442					; 000001baH
	push	OFFSET ??_C@_0BG@GOAPPJIK@?4?2crypto?2asn1?2x_crl?4c?$AA@
	push	6
	push	9
	call	_CRYPTO_lock
; Line 443
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+20]
	call	_sk_sort
; Line 444
	push	444					; 000001bcH
	push	OFFSET ??_C@_0BG@GOAPPJIK@?4?2crypto?2asn1?2x_crl?4c?$AA@
	push	6
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 36					; 00000024H
$LN5@def_crl_lo:
; Line 446
	lea	eax, DWORD PTR _rtmp$[esp+32]
	push	eax
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+20]
	call	_sk_find
	mov	ebp, eax
	add	esp, 8
	mov	DWORD PTR _idx$1$[esp+28], ebp
; Line 447
	test	ebp, ebp
	jns	SHORT $LN6@def_crl_lo
; Line 448
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 463
	add	esp, 24					; 00000018H
	ret	0
$LN6@def_crl_lo:
; Line 450
	mov	eax, DWORD PTR [ebx]
	push	esi
	push	edi
	push	DWORD PTR [eax+20]
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jge	$LN3@def_crl_lo
	mov	esi, DWORD PTR _issuer$[esp+36]
	npad	5
$LL4@def_crl_lo:
; Line 451
	mov	eax, DWORD PTR [ebx]
	push	ebp
	push	DWORD PTR [eax+20]
	call	_sk_value
; Line 452
	push	DWORD PTR _serial$[esp+44]
	mov	edi, eax
	push	DWORD PTR [edi]
	call	_ASN1_INTEGER_cmp
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN3@def_crl_lo
; Line 408
	mov	ecx, DWORD PTR [edi+12]
; Line 454
	mov	ebp, esi
; Line 408
	test	ecx, ecx
	jne	SHORT $LN16@def_crl_lo
; Line 409
	test	esi, esi
	je	SHORT $LN27@def_crl_lo
; Line 411
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+8]
	push	esi
	call	_X509_NAME_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@def_crl_lo
$LN27@def_crl_lo:
; Line 455
	mov	eax, DWORD PTR _ret$[esp+36]
	test	eax, eax
	je	SHORT $LN9@def_crl_lo
; Line 456
	mov	DWORD PTR [eax], edi
$LN9@def_crl_lo:
; Line 457
	xor	eax, eax
	cmp	DWORD PTR [edi+16], 8
	pop	edi
	pop	esi
	sete	al
	pop	ebp
	inc	eax
	pop	ebx
; Line 463
	add	esp, 24					; 00000018H
	ret	0
$LN16@def_crl_lo:
; Line 416
	test	esi, esi
	jne	SHORT $LN19@def_crl_lo
; Line 417
	mov	eax, DWORD PTR [ebx]
	mov	ebp, DWORD PTR [eax+8]
$LN19@def_crl_lo:
; Line 419
	push	ecx
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN39@def_crl_lo
$LL15@def_crl_lo:
; Line 420
	push	esi
	push	DWORD PTR [edi+12]
	call	_sk_value
	add	esp, 8
; Line 421
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN13@def_crl_lo
; Line 423
	push	DWORD PTR [eax+4]
	push	ebp
	call	_X509_NAME_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@def_crl_lo
$LN13@def_crl_lo:
; Line 419
	push	DWORD PTR [edi+12]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL15@def_crl_lo
$LN39@def_crl_lo:
	mov	esi, DWORD PTR _issuer$[esp+36]
$LN14@def_crl_lo:
; Line 450
	mov	eax, DWORD PTR [ebx]
	mov	ebp, DWORD PTR _idx$1$[esp+36]
	inc	ebp
	mov	DWORD PTR _idx$1$[esp+36], ebp
	push	DWORD PTR [eax+20]
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jl	$LL4@def_crl_lo
$LN3@def_crl_lo:
	pop	edi
	pop	esi
	pop	ebp
; Line 462
	xor	eax, eax
	pop	ebx
; Line 463
	add	esp, 24					; 00000018H
	ret	0
_def_crl_lookup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _def_crl_verify
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_r$ = 12						; size = 4
_def_crl_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 399
	mov	eax, DWORD PTR _crl$[esp-4]
	push	DWORD PTR _r$[esp-4]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	push	DWORD PTR [eax+4]
	push	OFFSET ?local_it@?1??X509_CRL_INFO_it@@9@9
	call	_ASN1_item_verify
	add	esp, 20					; 00000014H
; Line 401
	ret	0
_def_crl_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _setup_idp
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_idp$ = 12						; size = 4
_setup_idp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 304
	mov	ecx, DWORD PTR _crl$[esp-4]
	xor	eax, eax
; Line 305
	mov	edx, DWORD PTR _idp$[esp-4]
	push	esi
	or	DWORD PTR [ecx+28], 1
	cmp	DWORD PTR [edx+4], eax
	jle	SHORT $LN2@setup_idp
; Line 307
	or	DWORD PTR [ecx+28], 4
	mov	eax, 1
$LN2@setup_idp:
; Line 309
	cmp	DWORD PTR [edx+8], 0
	pop	esi
	jle	SHORT $LN3@setup_idp
; Line 310
	inc	eax
; Line 311
	or	DWORD PTR [ecx+28], 8
$LN3@setup_idp:
; Line 313
	cmp	DWORD PTR [edx+20], 0
	jle	SHORT $LN4@setup_idp
; Line 314
	inc	eax
; Line 315
	or	DWORD PTR [ecx+28], 16			; 00000010H
$LN4@setup_idp:
; Line 318
	cmp	eax, 1
	jle	SHORT $LN5@setup_idp
; Line 319
	or	DWORD PTR [ecx+28], 2
$LN5@setup_idp:
; Line 321
	cmp	DWORD PTR [edx+16], 0
	jle	SHORT $LN6@setup_idp
; Line 322
	or	DWORD PTR [ecx+28], 32			; 00000020H
$LN6@setup_idp:
; Line 324
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN7@setup_idp
; Line 325
	or	DWORD PTR [ecx+28], 64			; 00000040H
; Line 326
	mov	eax, DWORD PTR [edx+12]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN8@setup_idp
; Line 327
	mov	eax, DWORD PTR [eax+8]
	movzx	eax, BYTE PTR [eax]
	mov	DWORD PTR [ecx+32], eax
$LN8@setup_idp:
; Line 328
	mov	eax, DWORD PTR [edx+12]
	cmp	DWORD PTR [eax], 1
	jle	SHORT $LN9@setup_idp
; Line 329
	mov	eax, DWORD PTR [eax+8]
	movzx	eax, BYTE PTR [eax+1]
	shl	eax, 8
	or	DWORD PTR [ecx+32], eax
$LN9@setup_idp:
; Line 330
	and	DWORD PTR [ecx+32], 32895		; 0000807fH
$LN7@setup_idp:
; Line 333
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR [eax+8]
	push	DWORD PTR [edx]
	call	_DIST_POINT_set_dpname
	add	esp, 8
; Line 334
	ret	0
_setup_idp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_REVOKED_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_X509_REVOKED_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 355
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR _a$[esp]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax]
	call	_ASN1_STRING_cmp
	add	esp, 8
; Line 357
	ret	0
_X509_REVOKED_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_get0_by_cert
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_ret$ = 12						; size = 4
_x$ = 16						; size = 4
_X509_CRL_get0_by_cert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 389
	push	ebx
	push	edi
; Line 390
	mov	edi, DWORD PTR _crl$[esp+4]
	mov	ebx, DWORD PTR [edi+68]
	cmp	DWORD PTR [ebx+12], 0
	je	SHORT $LN2@X509_CRL_g
; Line 391
	push	DWORD PTR _x$[esp+4]
	call	_X509_get_issuer_name
	add	esp, 4
	push	eax
	push	DWORD PTR _x$[esp+8]
	call	_X509_get_serialNumber
	add	esp, 4
	push	eax
	push	DWORD PTR _ret$[esp+12]
	mov	eax, DWORD PTR [ebx+12]
	push	edi
	call	eax
	add	esp, 16					; 00000010H
	pop	edi
	pop	ebx
; Line 395
	ret	0
$LN2@X509_CRL_g:
	pop	edi
; Line 394
	xor	eax, eax
	pop	ebx
; Line 395
	ret	0
_X509_CRL_get0_by_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_get0_by_serial
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_ret$ = 12						; size = 4
_serial$ = 16						; size = 4
_X509_CRL_get0_by_serial PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 383
	mov	ecx, DWORD PTR _crl$[esp-4]
	mov	eax, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	SHORT $LN2@X509_CRL_g
; Line 384
	push	0
	push	DWORD PTR _serial$[esp]
	push	DWORD PTR _ret$[esp+4]
	push	ecx
	call	eax
	add	esp, 16					; 00000010H
; Line 386
	ret	0
$LN2@X509_CRL_g:
; Line 385
	xor	eax, eax
; Line 386
	ret	0
_X509_CRL_get0_by_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_add0_revoked
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_rev$ = 12						; size = 4
_X509_CRL_add0_revoked PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 362
	mov	eax, DWORD PTR _crl$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 363
	cmp	DWORD PTR [esi+20], 0
	jne	SHORT $LN2@X509_CRL_a
; Line 364
	push	OFFSET _X509_REVOKED_cmp
	call	_sk_new
	add	esp, 4
	mov	DWORD PTR [esi+20], eax
$LN2@X509_CRL_a:
; Line 365
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN4@X509_CRL_a
	push	DWORD PTR _rev$[esp]
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@X509_CRL_a
; Line 369
	mov	DWORD PTR [esi+36], 1
; Line 370
	mov	eax, 1
	pop	esi
; Line 371
	ret	0
$LN4@X509_CRL_a:
; Line 366
	push	366					; 0000016eH
	push	OFFSET ??_C@_0BG@GOAPPJIK@?4?2crypto?2asn1?2x_crl?4c?$AA@
	push	65					; 00000041H
	push	169					; 000000a9H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 367
	xor	eax, eax
	pop	esi
; Line 371
	ret	0
_X509_CRL_add0_revoked ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_it
_TEXT	SEGMENT
_X509_CRL_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 340
	mov	eax, OFFSET ?local_it@?1??X509_CRL_it@@9@9
	ret	0
_X509_CRL_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_X509_CRL
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_X509_CRL PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 348
	push	OFFSET ?local_it@?1??X509_CRL_it@@9@9
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _a$[esp+4]
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
	ret	0
_i2d_X509_CRL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_X509_CRL
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_X509_CRL PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 348
	push	OFFSET ?local_it@?1??X509_CRL_it@@9@9
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _in$[esp+4]
	push	DWORD PTR _a$[esp+8]
	call	_ASN1_item_d2i
	add	esp, 16					; 00000010H
	ret	0
_d2i_X509_CRL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X509_CRL_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 348
	push	OFFSET ?local_it@?1??X509_CRL_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_X509_CRL_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_new
_TEXT	SEGMENT
_X509_CRL_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 348
	push	OFFSET ?local_it@?1??X509_CRL_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_X509_CRL_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_INFO_it
_TEXT	SEGMENT
_X509_CRL_INFO_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 123
	mov	eax, OFFSET ?local_it@?1??X509_CRL_INFO_it@@9@9
	ret	0
_X509_CRL_INFO_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_X509_CRL_INFO
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_X509_CRL_INFO PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 346
	push	OFFSET ?local_it@?1??X509_CRL_INFO_it@@9@9
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _a$[esp+4]
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
	ret	0
_i2d_X509_CRL_INFO ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_X509_CRL_INFO
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_X509_CRL_INFO PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 346
	push	OFFSET ?local_it@?1??X509_CRL_INFO_it@@9@9
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _in$[esp+4]
	push	DWORD PTR _a$[esp+8]
	call	_ASN1_item_d2i
	add	esp, 16					; 00000010H
	ret	0
_d2i_X509_CRL_INFO ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_INFO_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X509_CRL_INFO_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 346
	push	OFFSET ?local_it@?1??X509_CRL_INFO_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_X509_CRL_INFO_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_INFO_new
_TEXT	SEGMENT
_X509_CRL_INFO_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 346
	push	OFFSET ?local_it@?1??X509_CRL_INFO_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_X509_CRL_INFO_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_REVOKED_it
_TEXT	SEGMENT
_X509_REVOKED_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 74
	mov	eax, OFFSET ?local_it@?1??X509_REVOKED_it@@9@9
	ret	0
_X509_REVOKED_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_X509_REVOKED
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_X509_REVOKED PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 342
	push	OFFSET ?local_it@?1??X509_REVOKED_it@@9@9
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _a$[esp+4]
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
	ret	0
_i2d_X509_REVOKED ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_X509_REVOKED
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_X509_REVOKED PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 342
	push	OFFSET ?local_it@?1??X509_REVOKED_it@@9@9
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _in$[esp+4]
	push	DWORD PTR _a$[esp+8]
	call	_ASN1_item_d2i
	add	esp, 16					; 00000010H
	ret	0
_d2i_X509_REVOKED ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_REVOKED_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X509_REVOKED_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 342
	push	OFFSET ?local_it@?1??X509_REVOKED_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_X509_REVOKED_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_REVOKED_new
_TEXT	SEGMENT
_X509_REVOKED_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 342
	push	OFFSET ?local_it@?1??X509_REVOKED_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_X509_REVOKED_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_REVOKED_dup
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_REVOKED_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 344
	push	DWORD PTR _x$[esp-4]
	push	OFFSET ?local_it@?1??X509_REVOKED_it@@9@9
	call	_ASN1_item_dup
	add	esp, 8
	ret	0
_X509_REVOKED_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_dup
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_CRL_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 350
	push	DWORD PTR _x$[esp-4]
	push	OFFSET ?local_it@?1??X509_CRL_it@@9@9
	call	_ASN1_item_dup
	add	esp, 8
	ret	0
_X509_CRL_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_verify
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_r$ = 12						; size = 4
_X509_CRL_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 375
	mov	ecx, DWORD PTR _crl$[esp-4]
	mov	eax, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR [eax+16]
	test	eax, eax
	je	SHORT $LN2@X509_CRL_v
; Line 376
	mov	DWORD PTR _crl$[esp-4], ecx
	jmp	eax
$LN2@X509_CRL_v:
; Line 377
	xor	eax, eax
; Line 378
	ret	0
_X509_CRL_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_get_meth_data
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_X509_CRL_get_meth_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 508
	mov	eax, DWORD PTR _crl$[esp-4]
	mov	eax, DWORD PTR [eax+72]
; Line 509
	ret	0
_X509_CRL_get_meth_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_set_meth_data
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_dat$ = 12						; size = 4
_X509_CRL_set_meth_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 503
	mov	eax, DWORD PTR _crl$[esp-4]
	mov	ecx, DWORD PTR _dat$[esp-4]
	mov	DWORD PTR [eax+72], ecx
; Line 504
	ret	0
_X509_CRL_set_meth_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_METHOD_free
_TEXT	SEGMENT
_m$ = 8							; size = 4
_X509_CRL_METHOD_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 496
	mov	eax, DWORD PTR _m$[esp-4]
	test	BYTE PTR [eax], 1
	je	SHORT $LN1@X509_CRL_M
; Line 498
	mov	DWORD PTR _m$[esp-4], eax
	jmp	_CRYPTO_free
$LN1@X509_CRL_M:
; Line 499
	ret	0
_X509_CRL_METHOD_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_METHOD_new
_TEXT	SEGMENT
_crl_init$ = 8						; size = 4
_crl_free$ = 12						; size = 4
_crl_lookup$ = 16					; size = 4
_crl_verify$ = 20					; size = 4
_X509_CRL_METHOD_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 483
	push	483					; 000001e3H
	push	OFFSET ??_C@_0BG@GOAPPJIK@?4?2crypto?2asn1?2x_crl?4c?$AA@
	push	20					; 00000014H
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 484
	test	ecx, ecx
	jne	SHORT $LN2@X509_CRL_M
; Line 492
	ret	0
$LN2@X509_CRL_M:
; Line 486
	mov	eax, DWORD PTR _crl_init$[esp-4]
	mov	DWORD PTR [ecx+4], eax
; Line 487
	mov	eax, DWORD PTR _crl_free$[esp-4]
	mov	DWORD PTR [ecx+8], eax
; Line 488
	mov	eax, DWORD PTR _crl_lookup$[esp-4]
	mov	DWORD PTR [ecx+12], eax
; Line 489
	mov	eax, DWORD PTR _crl_verify$[esp-4]
	mov	DWORD PTR [ecx+16], eax
; Line 491
	mov	eax, ecx
	mov	DWORD PTR [ecx], 1
; Line 492
	ret	0
_X509_CRL_METHOD_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_set_default_method
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_X509_CRL_set_default_method PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_crl.c
; Line 467
	mov	eax, DWORD PTR _meth$[esp-4]
	mov	ecx, OFFSET _int_crl_meth
	test	eax, eax
	cmovne	ecx, eax
	mov	DWORD PTR _default_crl_method, ecx
; Line 471
	ret	0
_X509_CRL_set_default_method ENDP
_TEXT	ENDS
END

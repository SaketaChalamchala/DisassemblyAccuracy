; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_pitem_new
PUBLIC	_pitem_free
PUBLIC	_pqueue_new
PUBLIC	_pqueue_free
PUBLIC	_pqueue_insert
PUBLIC	_pqueue_peek
PUBLIC	_pqueue_pop
PUBLIC	_pqueue_find
PUBLIC	_pqueue_iterator
PUBLIC	_pqueue_next
PUBLIC	_pqueue_print
PUBLIC	_pqueue_size
PUBLIC	??_C@_0BJ@KBJOCCHL@?4?2crypto?2pqueue?2pqueue?4c?$AA@ ; `string'
PUBLIC	??_C@_0CH@JCLNLEP@item?7?$CF02x?$CF02x?$CF02x?$CF02x?$CF02x?$CF02x?$CF02@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0CH@JCLNLEP@item?7?$CF02x?$CF02x?$CF02x?$CF02x?$CF02x?$CF02x?$CF02@
CONST	SEGMENT
??_C@_0CH@JCLNLEP@item?7?$CF02x?$CF02x?$CF02x?$CF02x?$CF02x?$CF02x?$CF02@ DB 'i'
	DB	'tem', 09H, '%02x%02x%02x%02x%02x%02x%02x%02x', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KBJOCCHL@?4?2crypto?2pqueue?2pqueue?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@KBJOCCHL@?4?2crypto?2pqueue?2pqueue?4c?$AA@ DB '.\crypto\pqueue'
	DB	'\pqueue.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_size
_TEXT	SEGMENT
_pq$ = 8						; size = 4
_pqueue_size PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 227
	mov	ecx, DWORD PTR _pq$[esp-4]
; Line 228
	xor	eax, eax
	mov	ecx, DWORD PTR [ecx]
; Line 230
	test	ecx, ecx
	je	SHORT $LN3@pqueue_siz
	npad	4
$LL2@pqueue_siz:
; Line 232
	mov	ecx, DWORD PTR [ecx+12]
	inc	eax
	test	ecx, ecx
	jne	SHORT $LL2@pqueue_siz
$LN3@pqueue_siz:
; Line 235
	ret	0
_pqueue_size ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_print
_TEXT	SEGMENT
_pq$ = 8						; size = 4
_pqueue_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 193
	push	esi
; Line 194
	mov	esi, DWORD PTR _pq$[esp]
	mov	esi, DWORD PTR [esi]
; Line 196
	test	esi, esi
	je	SHORT $LN3@pqueue_pri
	npad	5
$LL2@pqueue_pri:
; Line 197
	movzx	eax, BYTE PTR [esi+7]
	push	eax
	movzx	eax, BYTE PTR [esi+6]
	push	eax
	movzx	eax, BYTE PTR [esi+5]
	push	eax
	movzx	eax, BYTE PTR [esi+4]
	push	eax
	movzx	eax, BYTE PTR [esi+3]
	push	eax
	movzx	eax, BYTE PTR [esi+2]
	push	eax
	movzx	eax, BYTE PTR [esi+1]
	push	eax
	movzx	eax, BYTE PTR [esi]
	push	eax
	push	OFFSET ??_C@_0CH@JCLNLEP@item?7?$CF02x?$CF02x?$CF02x?$CF02x?$CF02x?$CF02x?$CF02@
	call	_printf
; Line 202
	mov	esi, DWORD PTR [esi+12]
	add	esp, 36					; 00000024H
	test	esi, esi
	jne	SHORT $LL2@pqueue_pri
$LN3@pqueue_pri:
	pop	esi
; Line 204
	ret	0
_pqueue_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_next
_TEXT	SEGMENT
_item$ = 8						; size = 4
_pqueue_next PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 215
	mov	edx, DWORD PTR _item$[esp-4]
	test	edx, edx
	je	SHORT $LN3@pqueue_nex
	mov	eax, DWORD PTR [edx]
	test	eax, eax
	je	SHORT $LN3@pqueue_nex
; Line 220
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx], ecx
; Line 223
	ret	0
$LN3@pqueue_nex:
; Line 216
	xor	eax, eax
; Line 223
	ret	0
_pqueue_next ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_iterator
_TEXT	SEGMENT
_pq$ = 8						; size = 4
_pqueue_iterator PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 208
	mov	eax, DWORD PTR _pq$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 209
	ret	0
_pqueue_iterator ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_find
_TEXT	SEGMENT
_pq$ = 8						; size = 4
_prio64be$ = 12						; size = 4
_pqueue_find PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 165
	mov	eax, DWORD PTR _pq$[esp-4]
	push	edi
	xor	edi, edi
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jne	SHORT $LN5@pqueue_fin
	pop	edi
; Line 190
	ret	0
$LN5@pqueue_fin:
; Line 168
	mov	edx, DWORD PTR [eax+12]
	push	esi
	mov	esi, DWORD PTR _prio64be$[esp+4]
	test	edx, edx
	je	SHORT $LN18@pqueue_fin
	npad	5
$LL4@pqueue_fin:
; Line 169
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN15@pqueue_fin
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR [esi+4]
	je	SHORT $LN11@pqueue_fin
$LN15@pqueue_fin:
; Line 168
	mov	eax, edx
	mov	edx, DWORD PTR [eax+12]
	test	edx, edx
	jne	SHORT $LL4@pqueue_fin
	jmp	SHORT $LN18@pqueue_fin
$LN11@pqueue_fin:
; Line 170
	mov	edi, eax
$LN18@pqueue_fin:
; Line 176
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN16@pqueue_fin
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR [esi+4]
	je	SHORT $LN17@pqueue_fin
$LN16@pqueue_fin:
	mov	eax, edi
$LN17@pqueue_fin:
	pop	esi
	pop	edi
; Line 190
	ret	0
_pqueue_find ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_pop
_TEXT	SEGMENT
_pq$ = 8						; size = 4
_pqueue_pop PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 152
	mov	edx, DWORD PTR _pq$[esp-4]
	mov	eax, DWORD PTR [edx]
; Line 154
	test	eax, eax
	je	SHORT $LN2@pqueue_pop
; Line 155
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx], ecx
$LN2@pqueue_pop:
; Line 158
	ret	0
_pqueue_pop ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_peek
_TEXT	SEGMENT
_pq$ = 8						; size = 4
_pqueue_peek PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 147
	mov	eax, DWORD PTR _pq$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 148
	ret	0
_pqueue_peek ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_insert
_TEXT	SEGMENT
_pq$ = 8						; size = 4
_item$ = 12						; size = 4
_pqueue_insert PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 113
	mov	ecx, DWORD PTR _pq$[esp-4]
	push	edi
	mov	edi, DWORD PTR [ecx]
	test	edi, edi
	jne	SHORT $LN5@pqueue_ins
; Line 114
	mov	eax, DWORD PTR _item$[esp]
	mov	DWORD PTR [ecx], eax
	pop	edi
; Line 143
	ret	0
$LN5@pqueue_ins:
	push	ebx
; Line 118
	mov	ebx, DWORD PTR _item$[esp+4]
	push	ebp
	xor	ebp, ebp
	push	esi
	npad	4
$LL4@pqueue_ins:
; Line 123
	mov	edx, edi
	mov	eax, ebx
	mov	esi, 4
	npad	7
$LL20@pqueue_ins:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN19@pqueue_ins
	add	edx, 4
	add	eax, 4
	sub	esi, 4
	jae	SHORT $LL20@pqueue_ins
	xor	eax, eax
	jmp	SHORT $LN22@pqueue_ins
$LN19@pqueue_ins:
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN21@pqueue_ins
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN21@pqueue_ins
	mov	cl, BYTE PTR [edx+2]
	cmp	cl, BYTE PTR [eax+2]
	jne	SHORT $LN21@pqueue_ins
	mov	cl, BYTE PTR [edx+3]
	cmp	cl, BYTE PTR [eax+3]
	jne	SHORT $LN21@pqueue_ins
	xor	eax, eax
	jmp	SHORT $LN22@pqueue_ins
$LN21@pqueue_ins:
	sbb	eax, eax
	or	eax, 1
$LN22@pqueue_ins:
; Line 124
	test	eax, eax
	jg	SHORT $LN13@pqueue_ins
; Line 135
	je	SHORT $LN14@pqueue_ins
; Line 119
	mov	ebp, edi
	mov	edi, DWORD PTR [edi+12]
	test	edi, edi
	jne	SHORT $LL4@pqueue_ins
; Line 139
	mov	DWORD PTR [ebx+12], edi
$LN8@pqueue_ins:
	pop	esi
; Line 130
	mov	DWORD PTR [ebp+12], ebx
; Line 132
	mov	eax, ebx
	pop	ebp
	pop	ebx
	pop	edi
; Line 143
	ret	0
$LN14@pqueue_ins:
	pop	esi
	pop	ebp
	pop	ebx
; Line 136
	xor	eax, eax
	pop	edi
; Line 143
	ret	0
$LN13@pqueue_ins:
; Line 125
	mov	DWORD PTR [ebx+12], edi
; Line 127
	test	ebp, ebp
	jne	SHORT $LN8@pqueue_ins
; Line 128
	mov	eax, DWORD PTR _pq$[esp+12]
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ebx
; Line 132
	mov	eax, ebx
	pop	ebx
	pop	edi
; Line 143
	ret	0
_pqueue_insert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_free
_TEXT	SEGMENT
_pq$ = 8						; size = 4
_pqueue_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 103
	mov	eax, DWORD PTR _pq$[esp-4]
	test	eax, eax
	je	SHORT $LN1@pqueue_fre
; Line 106
	mov	DWORD PTR _pq$[esp-4], eax
	jmp	_CRYPTO_free
$LN1@pqueue_fre:
; Line 107
	ret	0
_pqueue_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pqueue_new
_TEXT	SEGMENT
_pqueue_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 93
	push	93					; 0000005dH
	push	OFFSET ??_C@_0BJ@KBJOCCHL@?4?2crypto?2pqueue?2pqueue?4c?$AA@
	push	8
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 94
	test	eax, eax
	jne	SHORT $LN2@pqueue_new
; Line 99
	ret	0
$LN2@pqueue_new:
	xorps	xmm0, xmm0
; Line 97
	movq	QWORD PTR [eax], xmm0
; Line 99
	ret	0
_pqueue_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pitem_free
_TEXT	SEGMENT
_item$ = 8						; size = 4
_pitem_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 85
	mov	eax, DWORD PTR _item$[esp-4]
	test	eax, eax
	je	SHORT $LN1@pitem_free
; Line 88
	mov	DWORD PTR _item$[esp-4], eax
	jmp	_CRYPTO_free
$LN1@pitem_free:
; Line 89
	ret	0
_pitem_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pitem_new
_TEXT	SEGMENT
_prio64be$ = 8						; size = 4
_data$ = 12						; size = 4
_pitem_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pqueue\pqueue.c
; Line 71
	push	71					; 00000047H
	push	OFFSET ??_C@_0BJ@KBJOCCHL@?4?2crypto?2pqueue?2pqueue?4c?$AA@
	push	16					; 00000010H
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
; Line 72
	test	edx, edx
	jne	SHORT $LN2@pitem_new
; Line 81
	ret	0
$LN2@pitem_new:
; Line 75
	mov	ecx, DWORD PTR _prio64be$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
; Line 77
	mov	eax, DWORD PTR _data$[esp-4]
	mov	DWORD PTR [edx+8], eax
; Line 80
	mov	eax, edx
	mov	DWORD PTR [edx+12], 0
; Line 81
	ret	0
_pitem_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

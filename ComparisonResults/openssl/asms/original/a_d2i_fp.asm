; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_d2i_fp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_d2i_fp
PUBLIC	_ASN1_item_d2i_fp
PUBLIC	_ASN1_d2i_bio
PUBLIC	_ASN1_item_d2i_bio
PUBLIC	??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@ ; `string'
EXTRN	_BUF_MEM_new:PROC
EXTRN	_BUF_MEM_free:PROC
EXTRN	_BUF_MEM_grow_clean:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_peek_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ASN1_get_object:PROC
EXTRN	_ASN1_item_d2i:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'_d2i_fp.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_d2i_read_bio
_TEXT	SEGMENT
_eos$1$ = -56						; size = 4
_off$1$ = -52						; size = 4
_b$1$ = -48						; size = 4
_c$ = -44						; size = 44
_in$ = 8						; size = 4
_pb$ = 12						; size = 4
_asn1_d2i_read_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_d2i_fp.c
; Line 146
	mov	eax, 56					; 00000038H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 153
	xor	esi, esi
	mov	DWORD PTR _eos$1$[esp+68], 0
	mov	DWORD PTR _off$1$[esp+68], esi
; Line 154
	xor	edi, edi
; Line 156
	call	_BUF_MEM_new
	mov	ebx, eax
	mov	DWORD PTR _b$1$[esp+68], ebx
; Line 157
	test	ebx, ebx
	jne	SHORT $LN9@asn1_d2i_r
; Line 158
	push	158					; 0000009eH
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	65					; 00000041H
	push	107					; 0000006bH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 159
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebx
; Line 284
	add	esp, 56					; 00000038H
	ret	0
$LN9@asn1_d2i_r:
; Line 162
	call	_ERR_clear_error
	push	ebp
$LL2@asn1_d2i_r:
; Line 164
	mov	ebp, edi
	sub	ebp, esi
	cmp	ebp, 8
	ja	SHORT $LN14@asn1_d2i_r
; Line 165
	sub	esi, edi
	add	esi, 8
; Line 167
	lea	eax, DWORD PTR [edi+esi]
	cmp	eax, edi
	jb	$LN12@asn1_d2i_r
	push	eax
	push	ebx
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	je	$LN12@asn1_d2i_r
; Line 171
	mov	eax, DWORD PTR [ebx+4]
	push	esi
	add	eax, edi
	push	eax
	push	DWORD PTR _in$[esp+76]
	call	_BIO_read
	add	esp, 12					; 0000000cH
; Line 172
	test	eax, eax
	jns	SHORT $LN66@asn1_d2i_r
	test	ebp, ebp
	je	$LN45@asn1_d2i_r
; Line 176
	test	eax, eax
$LN66@asn1_d2i_r:
	jle	SHORT $LN64@asn1_d2i_r
; Line 177
	add	eax, edi
	cmp	eax, edi
	jb	$LN46@asn1_d2i_r
; Line 181
	mov	edi, eax
$LN64@asn1_d2i_r:
	mov	esi, DWORD PTR _off$1$[esp+72]
$LN14@asn1_d2i_r:
; Line 186
	mov	ebp, DWORD PTR [ebx+4]
; Line 188
	mov	eax, edi
	sub	eax, esi
	add	ebp, esi
	push	eax
	lea	eax, DWORD PTR _c$[esp+96]
	mov	DWORD PTR _c$[esp+76], ebp
	push	eax
	lea	eax, DWORD PTR _c$[esp+96]
	push	eax
	lea	eax, DWORD PTR _c$[esp+108]
	push	eax
	lea	eax, DWORD PTR _c$[esp+88]
	push	eax
	call	_ASN1_get_object
	mov	ecx, eax
	add	esp, 20					; 00000014H
	mov	DWORD PTR _c$[esp+84], ecx
; Line 190
	test	cl, cl
	jns	SHORT $LN18@asn1_d2i_r
; Line 193
	call	_ERR_peek_error
	and	eax, 4095				; 00000fffH
; Line 194
	cmp	eax, 155				; 0000009bH
	jne	$err$71
; Line 197
	call	_ERR_clear_error
	mov	ecx, DWORD PTR _c$[esp+84]
$LN18@asn1_d2i_r:
; Line 200
	mov	eax, DWORD PTR _c$[esp+72]
	sub	eax, ebp
	add	esi, eax
	mov	DWORD PTR _off$1$[esp+72], esi
; Line 202
	test	cl, 1
	je	SHORT $LN19@asn1_d2i_r
; Line 204
	add	DWORD PTR _eos$1$[esp+72], 1
; Line 205
	jns	$LL2@asn1_d2i_r
; Line 206
	push	206					; 000000ceH
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	123					; 0000007bH
; Line 207
	jmp	$LN67@asn1_d2i_r
$LN19@asn1_d2i_r:
; Line 210
	mov	edx, DWORD PTR _eos$1$[esp+72]
	mov	ecx, DWORD PTR _c$[esp+96]
	test	edx, edx
	je	SHORT $LN22@asn1_d2i_r
	test	ecx, ecx
	jne	SHORT $LN22@asn1_d2i_r
	cmp	DWORD PTR _c$[esp+88], ecx
	jne	SHORT $LN22@asn1_d2i_r
; Line 212
	dec	edx
	mov	DWORD PTR _eos$1$[esp+72], edx
$LN69@asn1_d2i_r:
; Line 266
	test	edx, edx
	jg	$LL2@asn1_d2i_r
; Line 273
	cmp	esi, 2147483647				; 7fffffffH
	jbe	$LN35@asn1_d2i_r
; Line 274
	push	274					; 00000112H
	jmp	$LN68@asn1_d2i_r
$LN22@asn1_d2i_r:
; Line 220
	mov	eax, edi
	sub	eax, esi
	cmp	ecx, eax
	jbe	$LN61@asn1_d2i_r
; Line 223
	mov	ebx, ecx
	mov	ebp, 16384				; 00004000H
	sub	ebx, edi
	add	ebx, esi
; Line 224
	cmp	ebx, 2147483647				; 7fffffffH
	ja	$LN28@asn1_d2i_r
	lea	eax, DWORD PTR [edi+ebx]
	cmp	eax, edi
	jb	$LN28@asn1_d2i_r
; Line 229
	test	ebx, ebx
	je	SHORT $LN63@asn1_d2i_r
	npad	4
$LL5@asn1_d2i_r:
; Line 236
	cmp	ebx, ebp
	mov	esi, ebx
	cmova	esi, ebp
; Line 238
	lea	eax, DWORD PTR [esi+edi]
	push	eax
	push	DWORD PTR _b$1$[esp+76]
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	je	$LN43@asn1_d2i_r
; Line 242
	sub	ebx, esi
; Line 243
	test	esi, esi
	je	SHORT $LN8@asn1_d2i_r
$LL7@asn1_d2i_r:
; Line 244
	mov	eax, DWORD PTR _b$1$[esp+72]
	push	esi
	mov	eax, DWORD PTR [eax+4]
	add	eax, edi
	push	eax
	push	DWORD PTR _in$[esp+76]
	call	_BIO_read
	add	esp, 12					; 0000000cH
; Line 245
	test	eax, eax
	jle	SHORT $LN42@asn1_d2i_r
; Line 254
	add	edi, eax
; Line 255
	sub	esi, eax
	jne	SHORT $LL7@asn1_d2i_r
$LN8@asn1_d2i_r:
; Line 257
	cmp	ebp, 1073741823				; 3fffffffH
	jae	SHORT $LN31@asn1_d2i_r
; Line 258
	add	ebp, ebp
$LN31@asn1_d2i_r:
; Line 229
	test	ebx, ebx
	jne	SHORT $LL5@asn1_d2i_r
	mov	ecx, DWORD PTR _c$[esp+96]
	mov	esi, DWORD PTR _off$1$[esp+72]
	mov	edx, DWORD PTR _eos$1$[esp+72]
$LN63@asn1_d2i_r:
	mov	ebx, DWORD PTR _b$1$[esp+72]
$LN61@asn1_d2i_r:
; Line 261
	lea	eax, DWORD PTR [ecx+esi]
	cmp	eax, esi
	jb	SHORT $LN51@asn1_d2i_r
; Line 265
	mov	esi, eax
	mov	DWORD PTR _off$1$[esp+72], esi
; Line 271
	jmp	$LN69@asn1_d2i_r
$LN45@asn1_d2i_r:
; Line 173
	push	173					; 000000adH
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	142					; 0000008eH
; Line 174
	jmp	SHORT $LN67@asn1_d2i_r
$LN46@asn1_d2i_r:
; Line 178
	push	178					; 000000b2H
; Line 179
	jmp	SHORT $LN68@asn1_d2i_r
$LN12@asn1_d2i_r:
; Line 168
	push	168					; 000000a8H
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	65					; 00000041H
; Line 169
	jmp	SHORT $LN67@asn1_d2i_r
$LN42@asn1_d2i_r:
; Line 246
	push	247					; 000000f7H
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	142					; 0000008eH
; Line 248
	jmp	SHORT $LN67@asn1_d2i_r
$LN43@asn1_d2i_r:
; Line 239
	push	239					; 000000efH
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	65					; 00000041H
; Line 240
	jmp	SHORT $LN67@asn1_d2i_r
$LN28@asn1_d2i_r:
; Line 226
	push	226					; 000000e2H
; Line 227
	jmp	SHORT $LN68@asn1_d2i_r
$LN35@asn1_d2i_r:
; Line 278
	mov	ecx, DWORD PTR _pb$[esp+68]
; Line 279
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], ebx
	pop	ebx
; Line 284
	add	esp, 56					; 00000038H
	ret	0
$LN51@asn1_d2i_r:
; Line 262
	push	262					; 00000106H
$LN68@asn1_d2i_r:
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	155					; 0000009bH
$LN67@asn1_d2i_r:
	push	107					; 0000006bH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$71:
; Line 282
	push	DWORD PTR _b$1$[esp+72]
	call	_BUF_MEM_free
	add	esp, 4
; Line 283
	or	eax, -1
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 284
	add	esp, 56					; 00000038H
	ret	0
_asn1_d2i_read_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_d2i_bio
_TEXT	SEGMENT
_b$ = -8						; size = 4
_p$ = -4						; size = 4
_it$ = 8						; size = 4
_in$ = 12						; size = 4
_x$ = 16						; size = 4
_ASN1_item_d2i_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_d2i_fp.c
; Line 108
	mov	eax, 8
	call	__chkstk
	push	esi
	push	edi
; Line 114
	lea	eax, DWORD PTR _b$[esp+16]
	mov	DWORD PTR _b$[esp+16], 0
	push	eax
	push	DWORD PTR _in$[esp+16]
	xor	edi, edi
	call	_asn1_d2i_read_bio
; Line 115
	mov	esi, DWORD PTR _b$[esp+24]
	mov	ecx, eax
	add	esp, 8
	test	ecx, ecx
	js	SHORT $err$7
; Line 119
	push	DWORD PTR _it$[esp+12]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR _p$[esp+20], eax
	lea	eax, DWORD PTR _p$[esp+20]
	push	ecx
	push	eax
	push	DWORD PTR _x$[esp+24]
	call	_ASN1_item_d2i
	add	esp, 16					; 00000010H
	mov	edi, eax
$err$7:
; Line 121
	test	esi, esi
	je	SHORT $LN5@ASN1_item_
; Line 122
	push	esi
	call	_BUF_MEM_free
	add	esp, 4
$LN5@ASN1_item_:
; Line 123
	mov	eax, edi
	pop	edi
	pop	esi
; Line 124
	add	esp, 8
	ret	0
_ASN1_item_d2i_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_d2i_bio
_TEXT	SEGMENT
_b$ = -8						; size = 4
_p$ = -4						; size = 4
_xnew$ = 8						; size = 4
_d2i$ = 12						; size = 4
_in$ = 16						; size = 4
_x$ = 20						; size = 4
_ASN1_d2i_bio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_d2i_fp.c
; Line 87
	mov	eax, 8
	call	__chkstk
	push	esi
	push	edi
; Line 93
	lea	eax, DWORD PTR _b$[esp+16]
	mov	DWORD PTR _b$[esp+16], 0
	push	eax
	push	DWORD PTR _in$[esp+16]
	xor	edi, edi
	call	_asn1_d2i_read_bio
; Line 94
	mov	esi, DWORD PTR _b$[esp+24]
	mov	ecx, eax
	add	esp, 8
	test	ecx, ecx
	js	SHORT $err$7
; Line 97
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR _p$[esp+16], eax
; Line 98
	lea	eax, DWORD PTR _p$[esp+16]
	push	ecx
	push	eax
	push	DWORD PTR _x$[esp+20]
	call	DWORD PTR _d2i$[esp+24]
	add	esp, 12					; 0000000cH
	mov	edi, eax
$err$7:
; Line 100
	test	esi, esi
	je	SHORT $LN5@ASN1_d2i_b
; Line 101
	push	esi
	call	_BUF_MEM_free
	add	esp, 4
$LN5@ASN1_d2i_b:
; Line 102
	mov	eax, edi
	pop	edi
	pop	esi
; Line 103
	add	esp, 8
	ret	0
_ASN1_d2i_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_d2i_fp
_TEXT	SEGMENT
_it$ = 8						; size = 4
_in$ = 12						; size = 4
_x$ = 16						; size = 4
_ASN1_item_d2i_fp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_d2i_fp.c
; Line 128
	push	edi
; Line 132
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN2@ASN1_item_
; Line 133
	push	133					; 00000085H
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	7
	push	206					; 000000ceH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 134
	xor	eax, eax
	pop	edi
; Line 140
	ret	0
$LN2@ASN1_item_:
	push	esi
; Line 136
	push	DWORD PTR _in$[esp+4]
	push	0
	push	106					; 0000006aH
	push	edi
	call	_BIO_ctrl
; Line 137
	push	DWORD PTR _x$[esp+20]
	push	edi
	push	DWORD PTR _it$[esp+28]
	call	_ASN1_item_d2i_bio
; Line 138
	push	edi
	mov	esi, eax
	call	_BIO_free
	add	esp, 32					; 00000020H
; Line 139
	mov	eax, esi
	pop	esi
	pop	edi
; Line 140
	ret	0
_ASN1_item_d2i_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_d2i_fp
_TEXT	SEGMENT
_b$1 = -8						; size = 4
_p$2 = -4						; size = 4
_xnew$ = 8						; size = 4
_d2i$ = 12						; size = 4
_in$ = 16						; size = 4
_x$ = 20						; size = 4
_ASN1_d2i_fp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_d2i_fp.c
; Line 71
	mov	eax, 8
	call	__chkstk
	push	esi
; Line 75
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN2@ASN1_d2i_f
; Line 76
	push	76					; 0000004cH
	push	OFFSET ??_C@_0BJ@GMLOABJG@?4?2crypto?2asn1?2a_d2i_fp?4c?$AA@
	push	7
	push	109					; 0000006dH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 77
	xor	eax, eax
	pop	esi
; Line 83
	add	esp, 8
	ret	0
$LN2@ASN1_d2i_f:
	push	ebx
	push	edi
; Line 79
	push	DWORD PTR _in$[esp+16]
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
; Line 93
	lea	eax, DWORD PTR _b$1[esp+36]
	mov	DWORD PTR _b$1[esp+36], 0
	push	eax
	push	esi
	xor	ebx, ebx
	call	_asn1_d2i_read_bio
; Line 94
	mov	edi, DWORD PTR _b$1[esp+44]
	add	esp, 24					; 00000018H
	test	eax, eax
	js	SHORT $err$9
; Line 97
	mov	ecx, DWORD PTR [edi+4]
; Line 98
	push	eax
	lea	eax, DWORD PTR _p$2[esp+24]
	mov	DWORD PTR _p$2[esp+24], ecx
	push	eax
	push	DWORD PTR _x$[esp+24]
	call	DWORD PTR _d2i$[esp+28]
	add	esp, 12					; 0000000cH
	mov	ebx, eax
$err$9:
; Line 100
	test	edi, edi
	je	SHORT $LN6@ASN1_d2i_f
; Line 101
	push	edi
	call	_BUF_MEM_free
	add	esp, 4
$LN6@ASN1_d2i_f:
; Line 81
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 82
	mov	eax, ebx
	pop	edi
	pop	ebx
	pop	esi
; Line 83
	add	esp, 8
	ret	0
_ASN1_d2i_fp ENDP
_TEXT	ENDS
END

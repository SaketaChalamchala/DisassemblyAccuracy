; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_default_UI_meth DD 01H DUP (?)
_BSS	ENDS
PUBLIC	_UI_new
PUBLIC	_UI_new_method
PUBLIC	_UI_free
PUBLIC	_UI_add_input_string
PUBLIC	_UI_dup_input_string
PUBLIC	_UI_add_verify_string
PUBLIC	_UI_dup_verify_string
PUBLIC	_UI_add_input_boolean
PUBLIC	_UI_dup_input_boolean
PUBLIC	_UI_add_info_string
PUBLIC	_UI_dup_info_string
PUBLIC	_UI_add_error_string
PUBLIC	_UI_dup_error_string
PUBLIC	_UI_construct_prompt
PUBLIC	_UI_add_user_data
PUBLIC	_UI_get0_user_data
PUBLIC	_UI_get0_result
PUBLIC	_UI_process
PUBLIC	_UI_ctrl
PUBLIC	_UI_get_ex_new_index
PUBLIC	_UI_set_ex_data
PUBLIC	_UI_get_ex_data
PUBLIC	_UI_set_default_method
PUBLIC	_UI_get_default_method
PUBLIC	_UI_get_method
PUBLIC	_UI_set_method
PUBLIC	_UI_create_method
PUBLIC	_UI_destroy_method
PUBLIC	_UI_method_set_opener
PUBLIC	_UI_method_set_writer
PUBLIC	_UI_method_set_flusher
PUBLIC	_UI_method_set_reader
PUBLIC	_UI_method_set_closer
PUBLIC	_UI_method_set_prompt_constructor
PUBLIC	_UI_method_get_opener
PUBLIC	_UI_method_get_writer
PUBLIC	_UI_method_get_flusher
PUBLIC	_UI_method_get_reader
PUBLIC	_UI_method_get_closer
PUBLIC	_UI_method_get_prompt_constructor
PUBLIC	_UI_get_string_type
PUBLIC	_UI_get_input_flags
PUBLIC	_UI_get0_output_string
PUBLIC	_UI_get0_action_string
PUBLIC	_UI_get0_result_string
PUBLIC	_UI_get0_test_string
PUBLIC	_UI_get_result_minsize
PUBLIC	_UI_get_result_maxsize
PUBLIC	_UI_set_result
PUBLIC	??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@ ; `string'
PUBLIC	??_C@_06IEAFMNNH@Enter?5?$AA@			; `string'
PUBLIC	??_C@_05POFHKGEO@?5for?5?$AA@			; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_0M@MCBMLIEP@?5characters?$AA@		; `string'
PUBLIC	??_C@_04MKEOLIJC@?5to?5?$AA@			; `string'
PUBLIC	??_C@_0BC@FIPJHCII@You?5must?5type?5in?5?$AA@	; `string'
EXTRN	__imp__strchr:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_get_ex_new_index:PROC
EXTRN	_CRYPTO_new_ex_data:PROC
EXTRN	_CRYPTO_free_ex_data:PROC
EXTRN	_CRYPTO_set_ex_data:PROC
EXTRN	_CRYPTO_get_ex_data:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_print_errors_cb:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_UI_OpenSSL:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BC@FIPJHCII@You?5must?5type?5in?5?$AA@
CONST	SEGMENT
??_C@_0BC@FIPJHCII@You?5must?5type?5in?5?$AA@ DB 'You must type in ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MKEOLIJC@?5to?5?$AA@
CONST	SEGMENT
??_C@_04MKEOLIJC@?5to?5?$AA@ DB ' to ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MCBMLIEP@?5characters?$AA@
CONST	SEGMENT
??_C@_0M@MCBMLIEP@?5characters?$AA@ DB ' characters', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05POFHKGEO@?5for?5?$AA@
CONST	SEGMENT
??_C@_05POFHKGEO@?5for?5?$AA@ DB ' for ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IEAFMNNH@Enter?5?$AA@
CONST	SEGMENT
??_C@_06IEAFMNNH@Enter?5?$AA@ DB 'Enter ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@ DB '.\crypto\ui\ui_lib.'
	DB	'c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_error
_TEXT	SEGMENT
_uis$ = -32						; size = 32
_str$ = 8						; size = 4
_len$ = 12						; size = 4
_ui$ = 16						; size = 4
_print_error PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 453
	mov	eax, 32					; 00000020H
	call	__chkstk
; Line 460
	mov	ecx, DWORD PTR _ui$[esp+28]
	xorps	xmm0, xmm0
	mov	eax, DWORD PTR _str$[esp+28]
	movups	XMMWORD PTR _uis$[esp+32], xmm0
	mov	DWORD PTR _uis$[esp+36], eax
	mov	eax, DWORD PTR [ecx]
	movups	XMMWORD PTR _uis$[esp+48], xmm0
	mov	DWORD PTR _uis$[esp+32], 5
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	je	SHORT $LN2@print_erro
	lea	edx, DWORD PTR _uis$[esp+32]
	push	edx
	push	ecx
	call	eax
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@print_erro
; Line 461
	or	eax, -1
; Line 463
	add	esp, 32					; 00000020H
	ret	0
$LN2@print_erro:
; Line 462
	xor	eax, eax
; Line 463
	add	esp, 32					; 00000020H
	ret	0
_print_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _general_allocate_boolean
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_action_desc$ = 16					; size = 4
_ok_chars$ = 20						; size = 4
_cancel_chars$ = 24					; size = 4
_prompt_freeable$ = 28					; size = 4
_type$ = 32						; size = 4
_input_flags$ = 36					; size = 4
_result_buf$ = 40					; size = 4
_general_allocate_boolean PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 190
	push	ebx
; Line 195
	mov	ebx, DWORD PTR _ok_chars$[esp]
	test	ebx, ebx
	jne	SHORT $LN5@general_al
; Line 196
	push	196					; 000000c4H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	67					; 00000043H
	push	108					; 0000006cH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 225
	or	eax, -1
	pop	ebx
; Line 226
	ret	0
$LN5@general_al:
	push	edi
; Line 197
	mov	edi, DWORD PTR _cancel_chars$[esp+4]
	test	edi, edi
	jne	SHORT $LN7@general_al
; Line 198
	push	198					; 000000c6H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	67					; 00000043H
	push	108					; 0000006cH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 225
	or	eax, -1
	pop	edi
	pop	ebx
; Line 226
	ret	0
$LN7@general_al:
; Line 200
	cmp	BYTE PTR [ebx], 0
	push	ebp
	push	esi
	mov	esi, ebx
	je	SHORT $LN3@general_al
	mov	ebp, DWORD PTR __imp__strchr
	npad	4
$LL4@general_al:
; Line 201
	movsx	eax, BYTE PTR [esi]
	push	eax
	push	edi
	call	ebp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@general_al
; Line 202
	push	203					; 000000cbH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	104					; 00000068H
	push	108					; 0000006cH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN2@general_al:
; Line 200
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL4@general_al
$LN3@general_al:
; Line 207
	push	DWORD PTR _result_buf$[esp+12]
	mov	ebp, DWORD PTR _ui$[esp+16]
	push	DWORD PTR _input_flags$[esp+16]
	push	DWORD PTR _type$[esp+20]
	push	DWORD PTR _prompt_freeable$[esp+24]
	push	DWORD PTR _prompt$[esp+28]
	push	ebp
	call	_general_allocate_prompt
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 210
	test	esi, esi
	je	SHORT $LN31@general_al
; Line 126
	cmp	DWORD PTR [ebp+4], 0
	jne	SHORT $LN17@general_al
; Line 127
	call	_sk_new_null
	mov	DWORD PTR [ebp+4], eax
; Line 128
	test	eax, eax
	jne	SHORT $LN17@general_al
; Line 100
	test	BYTE PTR [esi+28], 1
	je	SHORT $LN24@general_al
; Line 101
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
	add	esp, 4
; Line 102
	cmp	DWORD PTR [esi], 3
	jne	SHORT $LN24@general_al
; Line 104
	push	DWORD PTR [esi+16]
	call	_CRYPTO_free
; Line 105
	push	DWORD PTR [esi+20]
	call	_CRYPTO_free
; Line 106
	push	DWORD PTR [esi+24]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN24@general_al:
; Line 112
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN31@general_al:
; Line 225
	or	eax, -1
$LN34@general_al:
	pop	esi
	pop	ebp
	pop	edi
	pop	ebx
; Line 226
	ret	0
$LN17@general_al:
; Line 212
	mov	eax, DWORD PTR _action_desc$[esp+12]
	mov	DWORD PTR [esi+16], eax
; Line 213
	mov	DWORD PTR [esi+20], ebx
; Line 214
	mov	DWORD PTR [esi+24], edi
; Line 215
	push	esi
	push	DWORD PTR [ebp+4]
	call	_sk_push
	add	esp, 8
; Line 219
	test	eax, eax
	jg	SHORT $LN34@general_al
; Line 220
	pop	esi
	pop	ebp
	pop	edi
	dec	eax
	pop	ebx
; Line 226
	ret	0
_general_allocate_boolean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _general_allocate_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_prompt_freeable$ = 16					; size = 4
_type$ = 20						; size = 4
_input_flags$ = 24					; size = 4
_result_buf$ = 28					; size = 4
_minsize$ = 32						; size = 4
_maxsize$ = 36						; size = 4
_test_buf$ = 40						; size = 4
_general_allocate_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 162
	push	esi
	push	edi
; Line 164
	push	DWORD PTR _result_buf$[esp+4]
	mov	edi, DWORD PTR _ui$[esp+8]
	push	DWORD PTR _input_flags$[esp+8]
	push	DWORD PTR _type$[esp+12]
	push	DWORD PTR _prompt_freeable$[esp+16]
	push	DWORD PTR _prompt$[esp+20]
	push	edi
	call	_general_allocate_prompt
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 167
	test	esi, esi
	je	SHORT $LN12@general_al
; Line 126
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN9@general_al
; Line 127
	call	_sk_new_null
	mov	DWORD PTR [edi+4], eax
; Line 128
	test	eax, eax
	jne	SHORT $LN9@general_al
; Line 177
	push	esi
	call	_free_string
	add	esp, 4
$LN12@general_al:
; Line 179
	or	eax, -1
$LN4@general_al:
	pop	edi
	pop	esi
; Line 180
	ret	0
$LN9@general_al:
; Line 169
	mov	eax, DWORD PTR _minsize$[esp+4]
	mov	DWORD PTR [esi+16], eax
; Line 170
	mov	eax, DWORD PTR _maxsize$[esp+4]
	mov	DWORD PTR [esi+20], eax
; Line 171
	mov	eax, DWORD PTR _test_buf$[esp+4]
	mov	DWORD PTR [esi+24], eax
; Line 172
	push	esi
	push	DWORD PTR [edi+4]
	call	_sk_push
	add	esp, 8
; Line 174
	test	eax, eax
	jg	SHORT $LN4@general_al
; Line 175
	pop	edi
	dec	eax
	pop	esi
; Line 180
	ret	0
_general_allocate_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _general_allocate_prompt
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_prompt_freeable$ = 16					; size = 4
_type$ = 20						; size = 4
_input_flags$ = 24					; size = 4
_result_buf$ = 28					; size = 4
_general_allocate_prompt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 139
	push	edi
; Line 142
	mov	edi, DWORD PTR _prompt$[esp]
	test	edi, edi
	jne	SHORT $LN2@general_al
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	67					; 00000043H
	push	109					; 0000006dH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 154
	xor	eax, eax
	pop	edi
; Line 155
	ret	0
$LN2@general_al:
	push	ebx
; Line 145
	mov	ebx, DWORD PTR _result_buf$[esp+4]
	push	esi
	mov	esi, DWORD PTR _type$[esp+8]
	cmp	esi, 1
	je	SHORT $LN6@general_al
	cmp	esi, 2
	je	SHORT $LN6@general_al
	cmp	esi, 3
	jne	SHORT $LN4@general_al
$LN6@general_al:
	test	ebx, ebx
	jne	SHORT $LN4@general_al
; Line 146
	push	146					; 00000092H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	105					; 00000069H
	push	109					; 0000006dH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 154
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 155
	ret	0
$LN4@general_al:
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	32					; 00000020H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN10@general_al
; Line 149
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], edi
	cmp	DWORD PTR _prompt_freeable$[esp+8], ecx
; Line 151
	mov	DWORD PTR [eax], esi
	setne	cl
; Line 152
	mov	DWORD PTR [eax+12], ebx
	mov	DWORD PTR [eax+28], ecx
	mov	ecx, DWORD PTR _input_flags$[esp+8]
	mov	DWORD PTR [eax+8], ecx
$LN10@general_al:
; Line 155
	pop	esi
	pop	ebx
	pop	edi
	ret	0
_general_allocate_prompt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _allocate_string_stack
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_allocate_string_stack PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 125
	push	esi
; Line 126
	mov	esi, DWORD PTR _ui$[esp]
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN3@allocate_s
; Line 127
	call	_sk_new_null
	mov	DWORD PTR [esi+4], eax
; Line 128
	test	eax, eax
	jne	SHORT $LN3@allocate_s
; Line 129
	or	eax, -1
	pop	esi
; Line 133
	ret	0
$LN3@allocate_s:
; Line 132
	xor	eax, eax
	pop	esi
; Line 133
	ret	0
_allocate_string_stack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _free_string
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_free_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 99
	push	esi
; Line 100
	mov	esi, DWORD PTR _uis$[esp]
	test	BYTE PTR [esi+28], 1
	je	SHORT $LN6@free_strin
; Line 101
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
	add	esp, 4
; Line 102
	cmp	DWORD PTR [esi], 3
	jne	SHORT $LN6@free_strin
; Line 104
	push	DWORD PTR [esi+16]
	call	_CRYPTO_free
; Line 105
	push	DWORD PTR [esi+20]
	call	_CRYPTO_free
; Line 106
	push	DWORD PTR [esi+24]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN6@free_strin:
; Line 112
	push	esi
	call	_CRYPTO_free
	add	esp, 4
	pop	esi
; Line 113
	ret	0
_free_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_set_result
_TEXT	SEGMENT
_number2$1 = -36					; size = 13
_number1$2 = -20					; size = 13
__$ArrayPad$ = -4					; size = 4
_ui$ = 8						; size = 4
_uis$ = 12						; size = 4
_result$ = 16						; size = 4
_UI_set_result PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 802
	mov	eax, 36					; 00000024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+36], eax
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _ui$[esp+40]
	push	esi
	mov	esi, DWORD PTR _result$[esp+44]
; Line 803
	mov	ebx, esi
	push	edi
	mov	edi, DWORD PTR _uis$[esp+48]
	lea	ecx, DWORD PTR [ebx+1]
	npad	6
$LL24@UI_set_res:
	mov	al, BYTE PTR [ebx]
	inc	ebx
	test	al, al
	jne	SHORT $LL24@UI_set_res
; Line 805
	and	DWORD PTR [ebp+20], -2			; fffffffeH
	sub	ebx, ecx
; Line 807
	test	edi, edi
	je	$LN25@UI_set_res
; Line 809
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	jle	$LN5@UI_set_res
	cmp	eax, 2
	jle	$LN8@UI_set_res
	cmp	eax, 3
	jne	$LN5@UI_set_res
; Line 849
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	jne	SHORT $LN13@UI_set_res
; Line 850
	push	850					; 00000352H
; Line 851
	jmp	$LN27@UI_set_res
$LN13@UI_set_res:
; Line 854
	mov	BYTE PTR [eax], 0
; Line 855
	cmp	BYTE PTR [esi], 0
	je	$LN5@UI_set_res
	mov	ebx, DWORD PTR __imp__strchr
$LL6@UI_set_res:
; Line 856
	movsx	eax, BYTE PTR [esi]
	push	eax
	push	DWORD PTR [edi+20]
	call	ebx
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN19@UI_set_res
; Line 860
	movsx	eax, BYTE PTR [esi]
	push	eax
	push	DWORD PTR [edi+24]
	call	ebx
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN20@UI_set_res
; Line 855
	inc	esi
	cmp	BYTE PTR [esi], al
	jne	SHORT $LL6@UI_set_res
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 870
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
$LN20@UI_set_res:
; Line 861
	mov	eax, DWORD PTR [edi+24]
	mov	ecx, DWORD PTR [edi+12]
	pop	edi
	pop	esi
	mov	al, BYTE PTR [eax]
	pop	ebp
	mov	BYTE PTR [ecx], al
; Line 869
	xor	eax, eax
	pop	ebx
; Line 870
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
$LN19@UI_set_res:
; Line 857
	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR [edi+12]
	pop	edi
	pop	esi
	mov	al, BYTE PTR [eax]
	pop	ebp
	mov	BYTE PTR [ecx], al
; Line 869
	xor	eax, eax
	pop	ebx
; Line 870
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
$LN8@UI_set_res:
; Line 816
	push	DWORD PTR [edi+16]
	lea	eax, DWORD PTR _number1$2[esp+56]
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	13					; 0000000dH
	push	eax
	call	_BIO_snprintf
; Line 818
	push	DWORD PTR [edi+20]
	lea	eax, DWORD PTR _number2$1[esp+72]
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	13					; 0000000dH
	push	eax
	call	_BIO_snprintf
	add	esp, 32					; 00000020H
; Line 821
	cmp	ebx, DWORD PTR [edi+16]
	jge	SHORT $LN9@UI_set_res
; Line 823
	push	823					; 00000337H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	101					; 00000065H
$LN28@UI_set_res:
	or	DWORD PTR [ebp+20], 1
	push	105					; 00000069H
	push	40					; 00000028H
	call	_ERR_put_error
; Line 824
	push	OFFSET ??_C@_0M@MCBMLIEP@?5characters?$AA@
	lea	eax, DWORD PTR _number2$1[esp+76]
	push	eax
	push	OFFSET ??_C@_04MKEOLIJC@?5to?5?$AA@
	lea	eax, DWORD PTR _number1$2[esp+84]
	push	eax
	push	OFFSET ??_C@_0BC@FIPJHCII@You?5must?5type?5in?5?$AA@
	push	5
	call	_ERR_add_error_data
	add	esp, 44					; 0000002cH
$LN25@UI_set_res:
; Line 826
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 870
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
$LN9@UI_set_res:
; Line 828
	mov	eax, DWORD PTR [edi+20]
	cmp	ebx, eax
	jle	SHORT $LN10@UI_set_res
; Line 830
	push	830					; 0000033eH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	100					; 00000064H
; Line 833
	jmp	SHORT $LN28@UI_set_res
$LN10@UI_set_res:
; Line 837
	mov	ecx, DWORD PTR [edi+12]
	test	ecx, ecx
	jne	SHORT $LN11@UI_set_res
; Line 838
	push	838					; 00000346H
$LN27@UI_set_res:
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	105					; 00000069H
	push	105					; 00000069H
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 839
	jmp	SHORT $LN25@UI_set_res
$LN11@UI_set_res:
; Line 842
	inc	eax
	push	eax
	push	esi
	push	ecx
	call	_BUF_strlcpy
	add	esp, 12					; 0000000cH
$LN5@UI_set_res:
; Line 870
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
_UI_set_result ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get_result_maxsize
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_UI_get_result_maxsize PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 790
	mov	eax, DWORD PTR _uis$[esp-4]
	test	eax, eax
	je	SHORT $LN6@UI_get_res
; Line 792
	mov	ecx, DWORD PTR [eax]
	dec	ecx
	cmp	ecx, 1
	ja	SHORT $LN6@UI_get_res
; Line 795
	mov	eax, DWORD PTR [eax+20]
; Line 799
	ret	0
$LN6@UI_get_res:
; Line 797
	or	eax, -1
; Line 799
	ret	0
_UI_get_result_maxsize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get_result_minsize
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_UI_get_result_minsize PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 777
	mov	eax, DWORD PTR _uis$[esp-4]
	test	eax, eax
	je	SHORT $LN6@UI_get_res
; Line 779
	mov	ecx, DWORD PTR [eax]
	dec	ecx
	cmp	ecx, 1
	ja	SHORT $LN6@UI_get_res
; Line 782
	mov	eax, DWORD PTR [eax+16]
; Line 786
	ret	0
$LN6@UI_get_res:
; Line 784
	or	eax, -1
; Line 786
	ret	0
_UI_get_result_minsize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get0_test_string
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_UI_get0_test_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 765
	mov	ecx, DWORD PTR _uis$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN4@UI_get0_te
$LN8@UI_get0_te:
; Line 766
	xor	eax, eax
; Line 773
	ret	0
$LN4@UI_get0_te:
; Line 767
	mov	eax, DWORD PTR [ecx]
	sub	eax, 2
	jne	SHORT $LN8@UI_get0_te
; Line 769
	mov	eax, DWORD PTR [ecx+24]
; Line 773
	ret	0
_UI_get0_test_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get0_result_string
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_UI_get0_result_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 752
	mov	eax, DWORD PTR _uis$[esp-4]
	test	eax, eax
	je	SHORT $LN6@UI_get0_re
; Line 754
	mov	ecx, DWORD PTR [eax]
	dec	ecx
	cmp	ecx, 1
	ja	SHORT $LN6@UI_get0_re
; Line 757
	mov	eax, DWORD PTR [eax+12]
; Line 761
	ret	0
$LN6@UI_get0_re:
; Line 759
	xor	eax, eax
; Line 761
	ret	0
_UI_get0_result_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get0_action_string
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_UI_get0_action_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 739
	mov	ecx, DWORD PTR _uis$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN4@UI_get0_ac
$LN8@UI_get0_ac:
; Line 740
	xor	eax, eax
; Line 748
	ret	0
$LN4@UI_get0_ac:
; Line 741
	mov	eax, DWORD PTR [ecx]
	sub	eax, 1
	je	SHORT $LN5@UI_get0_ac
	sub	eax, 2
	jne	SHORT $LN8@UI_get0_ac
$LN5@UI_get0_ac:
; Line 744
	mov	eax, DWORD PTR [ecx+16]
; Line 748
	ret	0
_UI_get0_action_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get0_output_string
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_UI_get0_output_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 732
	mov	eax, DWORD PTR _uis$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@UI_get0_ou
; Line 735
	ret	0
$LN2@UI_get0_ou:
; Line 734
	mov	eax, DWORD PTR [eax+4]
; Line 735
	ret	0
_UI_get0_output_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get_input_flags
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_UI_get_input_flags PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 725
	mov	eax, DWORD PTR _uis$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@UI_get_inp
; Line 728
	ret	0
$LN2@UI_get_inp:
; Line 727
	mov	eax, DWORD PTR [eax+8]
; Line 728
	ret	0
_UI_get_input_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get_string_type
_TEXT	SEGMENT
_uis$ = 8						; size = 4
_UI_get_string_type PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 718
	mov	eax, DWORD PTR _uis$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@UI_get_str
; Line 721
	ret	0
$LN2@UI_get_str:
; Line 720
	mov	eax, DWORD PTR [eax]
; Line 721
	ret	0
_UI_get_string_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_get_prompt_constructor
_TEXT	SEGMENT
_method$ = 8						; size = 4
_UI_method_get_prompt_constructor PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 710
	mov	eax, DWORD PTR _method$[esp-4]
	test	eax, eax
	je	SHORT $LN2@UI_method_
; Line 711
	mov	eax, DWORD PTR [eax+24]
; Line 714
	ret	0
$LN2@UI_method_:
; Line 713
	xor	eax, eax
; Line 714
	ret	0
_UI_method_get_prompt_constructor ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_get_closer
_TEXT	SEGMENT
_method$ = 8						; size = 4
_UI_method_get_closer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 701
	mov	eax, DWORD PTR _method$[esp-4]
	test	eax, eax
	je	SHORT $LN2@UI_method_
; Line 702
	mov	eax, DWORD PTR [eax+20]
; Line 705
	ret	0
$LN2@UI_method_:
; Line 704
	xor	eax, eax
; Line 705
	ret	0
_UI_method_get_closer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_get_reader
_TEXT	SEGMENT
_method$ = 8						; size = 4
_UI_method_get_reader PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 694
	mov	eax, DWORD PTR _method$[esp-4]
	test	eax, eax
	je	SHORT $LN2@UI_method_
; Line 695
	mov	eax, DWORD PTR [eax+16]
; Line 698
	ret	0
$LN2@UI_method_:
; Line 697
	xor	eax, eax
; Line 698
	ret	0
_UI_method_get_reader ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_get_flusher
_TEXT	SEGMENT
_method$ = 8						; size = 4
_UI_method_get_flusher PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 687
	mov	eax, DWORD PTR _method$[esp-4]
	test	eax, eax
	je	SHORT $LN2@UI_method_
; Line 688
	mov	eax, DWORD PTR [eax+12]
; Line 691
	ret	0
$LN2@UI_method_:
; Line 690
	xor	eax, eax
; Line 691
	ret	0
_UI_method_get_flusher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_get_writer
_TEXT	SEGMENT
_method$ = 8						; size = 4
_UI_method_get_writer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 680
	mov	eax, DWORD PTR _method$[esp-4]
	test	eax, eax
	je	SHORT $LN2@UI_method_
; Line 681
	mov	eax, DWORD PTR [eax+8]
; Line 684
	ret	0
$LN2@UI_method_:
; Line 683
	xor	eax, eax
; Line 684
	ret	0
_UI_method_get_writer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_get_opener
_TEXT	SEGMENT
_method$ = 8						; size = 4
_UI_method_get_opener PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 673
	mov	eax, DWORD PTR _method$[esp-4]
	test	eax, eax
	je	SHORT $LN2@UI_method_
; Line 674
	mov	eax, DWORD PTR [eax+4]
; Line 677
	ret	0
$LN2@UI_method_:
; Line 676
	xor	eax, eax
; Line 677
	ret	0
_UI_method_get_opener ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_set_prompt_constructor
_TEXT	SEGMENT
_method$ = 8						; size = 4
_prompt_constructor$ = 12				; size = 4
_UI_method_set_prompt_constructor PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 665
	mov	ecx, DWORD PTR _method$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@UI_method_
; Line 666
	mov	eax, DWORD PTR _prompt_constructor$[esp-4]
	mov	DWORD PTR [ecx+24], eax
; Line 667
	xor	eax, eax
; Line 670
	ret	0
$LN2@UI_method_:
; Line 669
	or	eax, -1
; Line 670
	ret	0
_UI_method_set_prompt_constructor ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_set_closer
_TEXT	SEGMENT
_method$ = 8						; size = 4
_closer$ = 12						; size = 4
_UI_method_set_closer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 651
	mov	ecx, DWORD PTR _method$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@UI_method_
; Line 652
	mov	eax, DWORD PTR _closer$[esp-4]
	mov	DWORD PTR [ecx+20], eax
; Line 653
	xor	eax, eax
; Line 656
	ret	0
$LN2@UI_method_:
; Line 655
	or	eax, -1
; Line 656
	ret	0
_UI_method_set_closer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_set_reader
_TEXT	SEGMENT
_method$ = 8						; size = 4
_reader$ = 12						; size = 4
_UI_method_set_reader PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 642
	mov	ecx, DWORD PTR _method$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@UI_method_
; Line 643
	mov	eax, DWORD PTR _reader$[esp-4]
	mov	DWORD PTR [ecx+16], eax
; Line 644
	xor	eax, eax
; Line 647
	ret	0
$LN2@UI_method_:
; Line 646
	or	eax, -1
; Line 647
	ret	0
_UI_method_set_reader ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_set_flusher
_TEXT	SEGMENT
_method$ = 8						; size = 4
_flusher$ = 12						; size = 4
_UI_method_set_flusher PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 632
	mov	ecx, DWORD PTR _method$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@UI_method_
; Line 633
	mov	eax, DWORD PTR _flusher$[esp-4]
	mov	DWORD PTR [ecx+12], eax
; Line 634
	xor	eax, eax
; Line 637
	ret	0
$LN2@UI_method_:
; Line 636
	or	eax, -1
; Line 637
	ret	0
_UI_method_set_flusher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_set_writer
_TEXT	SEGMENT
_method$ = 8						; size = 4
_writer$ = 12						; size = 4
_UI_method_set_writer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 623
	mov	ecx, DWORD PTR _method$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@UI_method_
; Line 624
	mov	eax, DWORD PTR _writer$[esp-4]
	mov	DWORD PTR [ecx+8], eax
; Line 625
	xor	eax, eax
; Line 628
	ret	0
$LN2@UI_method_:
; Line 627
	or	eax, -1
; Line 628
	ret	0
_UI_method_set_writer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_method_set_opener
_TEXT	SEGMENT
_method$ = 8						; size = 4
_opener$ = 12						; size = 4
_UI_method_set_opener PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 613
	mov	ecx, DWORD PTR _method$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@UI_method_
; Line 614
	mov	eax, DWORD PTR _opener$[esp-4]
	mov	DWORD PTR [ecx+4], eax
; Line 615
	xor	eax, eax
; Line 618
	ret	0
$LN2@UI_method_:
; Line 617
	or	eax, -1
; Line 618
	ret	0
_UI_method_set_opener ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_destroy_method
_TEXT	SEGMENT
_ui_method$ = 8						; size = 4
_UI_destroy_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 605
	push	esi
; Line 606
	mov	esi, DWORD PTR _ui_method$[esp]
	push	DWORD PTR [esi]
	call	_CRYPTO_free
; Line 608
	push	esi
	mov	DWORD PTR [esi], 0
	call	_CRYPTO_free
	add	esp, 8
	pop	esi
; Line 609
	ret	0
_UI_destroy_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_create_method
_TEXT	SEGMENT
_name$ = 8						; size = 4
_UI_create_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 589
	push	esi
; Line 590
	push	590					; 0000024eH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	28					; 0000001cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 592
	test	esi, esi
	je	SHORT $LN2@UI_create_
; Line 594
	push	DWORD PTR _name$[esp]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [esi], xmm0
	movq	QWORD PTR [esi+16], xmm0
	mov	DWORD PTR [esi+24], 0
	call	_BUF_strdup
	mov	DWORD PTR [esi], eax
	add	esp, 4
; Line 596
	mov	eax, esi
$LN2@UI_create_:
	pop	esi
; Line 597
	ret	0
_UI_create_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_set_method
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_meth$ = 12						; size = 4
_UI_set_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 584
	mov	ecx, DWORD PTR _ui$[esp-4]
	mov	eax, DWORD PTR _meth$[esp-4]
	mov	DWORD PTR [ecx], eax
; Line 586
	ret	0
_UI_set_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get_method
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_UI_get_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 579
	mov	eax, DWORD PTR _ui$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 580
	ret	0
_UI_get_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get_default_method
_TEXT	SEGMENT
_UI_get_default_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 571
	mov	eax, DWORD PTR _default_UI_meth
	test	eax, eax
	jne	SHORT $LN2@UI_get_def
; Line 572
	call	_UI_OpenSSL
	mov	DWORD PTR _default_UI_meth, eax
$LN2@UI_get_def:
; Line 575
	ret	0
_UI_get_default_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_set_default_method
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_UI_set_default_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 566
	mov	eax, DWORD PTR _meth$[esp-4]
	mov	DWORD PTR _default_UI_meth, eax
; Line 567
	ret	0
_UI_set_default_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get_ex_data
_TEXT	SEGMENT
_r$ = 8							; size = 4
_idx$ = 12						; size = 4
_UI_get_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 561
	add	DWORD PTR _r$[esp-4], 12		; 0000000cH
	jmp	_CRYPTO_get_ex_data
_UI_get_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_set_ex_data
_TEXT	SEGMENT
_r$ = 8							; size = 4
_idx$ = 12						; size = 4
_arg$ = 16						; size = 4
_UI_set_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 556
	add	DWORD PTR _r$[esp-4], 12		; 0000000cH
	jmp	_CRYPTO_set_ex_data
_UI_set_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get_ex_new_index
_TEXT	SEGMENT
_argl$ = 8						; size = 4
_argp$ = 12						; size = 4
_new_func$ = 16						; size = 4
_dup_func$ = 20						; size = 4
_free_func$ = 24					; size = 4
_UI_get_ex_new_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 550
	push	DWORD PTR _free_func$[esp-4]
	push	DWORD PTR _dup_func$[esp]
	push	DWORD PTR _new_func$[esp+4]
	push	DWORD PTR _argp$[esp+8]
	push	DWORD PTR _argl$[esp+12]
	push	11					; 0000000bH
	call	_CRYPTO_get_ex_new_index
	add	esp, 24					; 00000018H
; Line 552
	ret	0
_UI_get_ex_new_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_ctrl
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_cmd$ = 12						; size = 4
_i$ = 16						; size = 4
_p$ = 20						; size = 4
_f$ = 24						; size = 4
_UI_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 524
	mov	ecx, DWORD PTR _ui$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN4@UI_ctrl
; Line 525
	push	525					; 0000020dH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	67					; 00000043H
	push	111					; 0000006fH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 526
	or	eax, -1
; Line 545
	ret	0
$LN4@UI_ctrl:
; Line 528
	mov	eax, DWORD PTR _cmd$[esp-4]
	sub	eax, 1
	je	SHORT $LN5@UI_ctrl
	sub	eax, 1
	je	SHORT $LN8@UI_ctrl
; Line 543
	push	543					; 0000021fH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	106					; 0000006aH
	push	111					; 0000006fH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 544
	or	eax, -1
; Line 545
	ret	0
$LN8@UI_ctrl:
; Line 539
	mov	eax, DWORD PTR [ecx+20]
	and	eax, 1
; Line 545
	ret	0
$LN5@UI_ctrl:
; Line 531
	mov	eax, DWORD PTR [ecx+20]
	mov	edx, eax
	shr	edx, 8
	and	edx, 1
; Line 532
	cmp	DWORD PTR _i$[esp-4], 0
	je	SHORT $LN6@UI_ctrl
; Line 533
	or	eax, 256				; 00000100H
; Line 535
	mov	DWORD PTR [ecx+20], eax
; Line 536
	mov	eax, edx
; Line 545
	ret	0
$LN6@UI_ctrl:
; Line 535
	and	eax, -257				; fffffeffH
	mov	DWORD PTR [ecx+20], eax
; Line 536
	mov	eax, edx
; Line 545
	ret	0
_UI_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_process
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_UI_process PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 466
	push	ebx
	push	esi
; Line 469
	mov	esi, DWORD PTR _ui$[esp+4]
	xor	ebx, ebx
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN12@UI_process
	push	esi
	call	eax
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN12@UI_process
$LN36@UI_process:
	pop	esi
; Line 470
	or	eax, -1
	pop	ebx
; Line 520
	ret	0
$LN12@UI_process:
; Line 472
	test	DWORD PTR [esi+20], 256			; 00000100H
	je	SHORT $LN13@UI_process
; Line 473
	push	esi
	push	OFFSET _print_error
	call	_ERR_print_errors_cb
	add	esp, 8
$LN13@UI_process:
; Line 476
	push	ebp
	push	edi
	push	DWORD PTR [esi+4]
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN34@UI_process
	npad	5
$LL4@UI_process:
; Line 478
	mov	ebp, DWORD PTR [esi]
	cmp	DWORD PTR [ebp+8], ebx
	je	SHORT $LN2@UI_process
	push	edi
	push	DWORD PTR [esi+4]
	call	_sk_value
	push	eax
	mov	eax, DWORD PTR [ebp+8]
	push	esi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN27@UI_process
$LN2@UI_process:
; Line 476
	push	DWORD PTR [esi+4]
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL4@UI_process
$LN34@UI_process:
; Line 486
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	SHORT $LN15@UI_process
; Line 487
	push	esi
	call	eax
	add	esp, 4
	cmp	eax, -1
	je	SHORT $LN20@UI_process
	test	eax, eax
	je	SHORT $LN27@UI_process
; Line 495
	xor	ebx, ebx
$LN15@UI_process:
; Line 499
	push	DWORD PTR [esi+4]
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $err$38
	npad	7
$LL9@UI_process:
; Line 500
	mov	ebp, DWORD PTR [esi]
	cmp	DWORD PTR [ebp+16], 0
	je	SHORT $LN7@UI_process
; Line 501
	push	edi
	push	DWORD PTR [esi+4]
	call	_sk_value
	push	eax
	mov	eax, DWORD PTR [ebp+16]
	push	esi
	call	eax
	add	esp, 16					; 00000010H
	cmp	eax, -1
	je	SHORT $LN20@UI_process
	test	eax, eax
	je	SHORT $LN27@UI_process
; Line 511
	xor	ebx, ebx
$LN7@UI_process:
; Line 499
	push	DWORD PTR [esi+4]
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL9@UI_process
	jmp	SHORT $err$38
$LN27@UI_process:
; Line 481
	or	ebx, -1
; Line 482
	jmp	SHORT $err$38
$LN20@UI_process:
; Line 505
	mov	ebx, -2					; fffffffeH
$err$38:
; Line 517
	mov	eax, DWORD PTR [esi]
	pop	edi
	pop	ebp
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	SHORT $LN23@UI_process
	push	esi
	call	eax
	add	esp, 4
	test	eax, eax
	je	$LN36@UI_process
$LN23@UI_process:
	pop	esi
; Line 519
	mov	eax, ebx
	pop	ebx
; Line 520
	ret	0
_UI_process ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get0_result
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_i$ = 12						; size = 4
_UI_get0_result PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 440
	push	esi
; Line 441
	mov	esi, DWORD PTR _i$[esp]
	test	esi, esi
	jns	SHORT $LN2@UI_get0_re
; Line 442
	push	442					; 000001baH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	103					; 00000067H
	push	107					; 0000006bH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 443
	xor	eax, eax
	pop	esi
; Line 450
	ret	0
$LN2@UI_get0_re:
	push	edi
; Line 445
	mov	edi, DWORD PTR _ui$[esp+4]
	push	DWORD PTR [edi+4]
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LN3@UI_get0_re
; Line 446
	push	446					; 000001beH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	102					; 00000066H
	push	107					; 0000006bH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN10@UI_get0_re:
	pop	edi
; Line 759
	xor	eax, eax
	pop	esi
; Line 450
	ret	0
$LN3@UI_get0_re:
; Line 449
	push	esi
	push	DWORD PTR [edi+4]
	call	_sk_value
	mov	ecx, eax
	add	esp, 8
; Line 752
	test	ecx, ecx
	je	SHORT $LN10@UI_get0_re
; Line 754
	mov	eax, DWORD PTR [ecx]
	dec	eax
	cmp	eax, 1
	ja	SHORT $LN10@UI_get0_re
; Line 757
	mov	eax, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
; Line 450
	ret	0
_UI_get0_result ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_get0_user_data
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_UI_get0_user_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 436
	mov	eax, DWORD PTR _ui$[esp-4]
	mov	eax, DWORD PTR [eax+8]
; Line 437
	ret	0
_UI_get0_user_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_add_user_data
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_user_data$ = 12					; size = 4
_UI_add_user_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 429
	mov	edx, DWORD PTR _ui$[esp-4]
; Line 430
	mov	ecx, DWORD PTR _user_data$[esp-4]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [edx+8], ecx
; Line 432
	ret	0
_UI_add_user_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_construct_prompt
_TEXT	SEGMENT
_prompt3$1 = -24					; size = 2
_prompt1$2 = -20					; size = 7
_prompt2$3 = -12					; size = 6
__$ArrayPad$ = -4					; size = 4
_ui$ = 8						; size = 4
_object_desc$ = 12					; size = 4
_object_name$ = 16					; size = 4
_UI_construct_prompt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 397
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
	mov	ecx, DWORD PTR _ui$[esp+20]
	push	ebx
	mov	ebx, DWORD PTR _object_name$[esp+24]
	push	ebp
; Line 400
	mov	eax, DWORD PTR [ecx]
	mov	ebp, DWORD PTR _object_desc$[esp+28]
	push	esi
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	je	SHORT $LN2@UI_constru
; Line 401
	push	ebx
	push	ebp
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
	mov	esi, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 425
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN2@UI_constru:
; Line 403
	mov	eax, DWORD PTR ??_C@_06IEAFMNNH@Enter?5?$AA@
	mov	DWORD PTR _prompt1$2[esp+36], eax
	movzx	eax, WORD PTR ??_C@_06IEAFMNNH@Enter?5?$AA@+4
	mov	WORD PTR _prompt1$2[esp+40], ax
	mov	al, BYTE PTR ??_C@_06IEAFMNNH@Enter?5?$AA@+6
	mov	BYTE PTR _prompt1$2[esp+42], al
; Line 404
	mov	eax, DWORD PTR ??_C@_05POFHKGEO@?5for?5?$AA@
	mov	DWORD PTR _prompt2$3[esp+36], eax
	movzx	eax, WORD PTR ??_C@_05POFHKGEO@?5for?5?$AA@+4
	mov	WORD PTR _prompt2$3[esp+40], ax
; Line 405
	mov	eax, 58					; 0000003aH
	mov	WORD PTR _prompt3$1[esp+36], ax
; Line 408
	test	ebp, ebp
	jne	SHORT $LN4@UI_constru
; Line 409
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 425
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN4@UI_constru:
; Line 410
	mov	ecx, ebp
	lea	edx, DWORD PTR [ecx+1]
$LL8@UI_constru:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL8@UI_constru
	sub	ecx, edx
	push	edi
	lea	edi, DWORD PTR [ecx+6]
; Line 411
	test	ebx, ebx
	je	SHORT $LN5@UI_constru
; Line 412
	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+1]
	npad	7
$LL9@UI_constru:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL9@UI_constru
	sub	ecx, edx
	add	edi, 5
	add	edi, ecx
$LN5@UI_constru:
; Line 415
	push	415					; 0000019fH
	add	edi, 2
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	mov	esi, eax
; Line 416
	lea	eax, DWORD PTR _prompt1$2[esp+52]
	push	edi
	push	eax
	push	esi
	call	_BUF_strlcpy
; Line 417
	push	edi
	push	ebp
	push	esi
	call	_BUF_strlcat
	add	esp, 36					; 00000024H
; Line 418
	test	ebx, ebx
	je	SHORT $LN6@UI_constru
; Line 419
	push	edi
	lea	eax, DWORD PTR _prompt2$3[esp+44]
	push	eax
	push	esi
	call	_BUF_strlcat
; Line 420
	push	edi
	push	ebx
	push	esi
	call	_BUF_strlcat
	add	esp, 24					; 00000018H
$LN6@UI_constru:
; Line 422
	push	edi
	lea	eax, DWORD PTR _prompt3$1[esp+44]
	push	eax
	push	esi
	call	_BUF_strlcat
; Line 425
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
	add	esp, 12					; 0000000cH
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_UI_construct_prompt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_dup_error_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_text$ = 12						; size = 4
_UI_dup_error_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 384
	mov	eax, DWORD PTR _text$[esp-4]
	push	ebx
	xor	ebx, ebx
	test	eax, eax
	je	SHORT $LN3@UI_dup_err
; Line 385
	push	eax
	call	_BUF_strdup
	mov	ebx, eax
	add	esp, 4
; Line 386
	test	ebx, ebx
	jne	SHORT $LN3@UI_dup_err
; Line 387
	push	387					; 00000183H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	65					; 00000041H
	push	101					; 00000065H
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 388
	or	eax, -1
	pop	ebx
; Line 393
	ret	0
$LN3@UI_dup_err:
	push	edi
; Line 163
	or	edi, -1
; Line 142
	test	ebx, ebx
	jne	SHORT $LN12@UI_dup_err
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	67					; 00000043H
	push	109					; 0000006dH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 391
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 393
	ret	0
$LN12@UI_dup_err:
	push	esi
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	32					; 00000020H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN24@UI_dup_err
; Line 148
	mov	DWORD PTR [esi+4], ebx
; Line 126
	mov	ebx, DWORD PTR _ui$[esp+8]
; Line 149
	mov	DWORD PTR [esi+28], 1
; Line 150
	mov	DWORD PTR [esi+8], 0
; Line 151
	mov	DWORD PTR [esi], 5
; Line 152
	mov	DWORD PTR [esi+12], 0
; Line 126
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN21@UI_dup_err
; Line 127
	call	_sk_new_null
	mov	DWORD PTR [ebx+4], eax
; Line 128
	test	eax, eax
	jne	SHORT $LN21@UI_dup_err
; Line 177
	push	esi
	call	_free_string
	add	esp, 4
; Line 391
	mov	eax, edi
	pop	esi
	pop	edi
	pop	ebx
; Line 393
	ret	0
$LN21@UI_dup_err:
; Line 169
	mov	DWORD PTR [esi+16], 0
; Line 170
	mov	DWORD PTR [esi+20], 0
; Line 171
	mov	DWORD PTR [esi+24], 0
; Line 172
	push	esi
	push	DWORD PTR [ebx+4]
	call	_sk_push
	mov	edi, eax
	add	esp, 8
; Line 174
	test	edi, edi
	jg	SHORT $LN24@UI_dup_err
; Line 175
	dec	edi
$LN24@UI_dup_err:
	pop	esi
; Line 391
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 393
	ret	0
_UI_dup_error_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_add_error_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_text$ = 12						; size = 4
_UI_add_error_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 375
	push	edi
; Line 142
	mov	edi, DWORD PTR _text$[esp]
	test	edi, edi
	jne	SHORT $LN10@UI_add_err
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	67					; 00000043H
	push	109					; 0000006dH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 376
	or	eax, -1
	pop	edi
; Line 378
	ret	0
$LN10@UI_add_err:
	push	esi
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	32					; 00000020H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN22@UI_add_err
; Line 148
	mov	DWORD PTR [esi+4], edi
; Line 126
	mov	edi, DWORD PTR _ui$[esp+4]
; Line 149
	mov	DWORD PTR [esi+28], 0
; Line 150
	mov	DWORD PTR [esi+8], 0
; Line 151
	mov	DWORD PTR [esi], 5
; Line 152
	mov	DWORD PTR [esi+12], 0
; Line 126
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN19@UI_add_err
; Line 127
	call	_sk_new_null
	mov	DWORD PTR [edi+4], eax
; Line 128
	test	eax, eax
	jne	SHORT $LN19@UI_add_err
; Line 177
	push	esi
	call	_free_string
	add	esp, 4
$LN22@UI_add_err:
; Line 376
	or	eax, -1
$LN24@UI_add_err:
	pop	esi
	pop	edi
; Line 378
	ret	0
$LN19@UI_add_err:
; Line 169
	mov	DWORD PTR [esi+16], 0
; Line 170
	mov	DWORD PTR [esi+20], 0
; Line 171
	mov	DWORD PTR [esi+24], 0
; Line 172
	push	esi
	push	DWORD PTR [edi+4]
	call	_sk_push
	add	esp, 8
; Line 174
	test	eax, eax
	jg	SHORT $LN24@UI_add_err
	pop	esi
; Line 175
	dec	eax
	pop	edi
; Line 378
	ret	0
_UI_add_error_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_dup_info_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_text$ = 12						; size = 4
_UI_dup_info_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 362
	mov	eax, DWORD PTR _text$[esp-4]
	push	ebx
	xor	ebx, ebx
	test	eax, eax
	je	SHORT $LN3@UI_dup_inf
; Line 363
	push	eax
	call	_BUF_strdup
	mov	ebx, eax
	add	esp, 4
; Line 364
	test	ebx, ebx
	jne	SHORT $LN3@UI_dup_inf
; Line 365
	push	365					; 0000016dH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	65					; 00000041H
	push	102					; 00000066H
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 366
	or	eax, -1
	pop	ebx
; Line 372
	ret	0
$LN3@UI_dup_inf:
	push	edi
; Line 163
	or	edi, -1
; Line 142
	test	ebx, ebx
	jne	SHORT $LN12@UI_dup_inf
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	67					; 00000043H
	push	109					; 0000006dH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 370
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 372
	ret	0
$LN12@UI_dup_inf:
	push	esi
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	32					; 00000020H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN24@UI_dup_inf
; Line 148
	mov	DWORD PTR [esi+4], ebx
; Line 126
	mov	ebx, DWORD PTR _ui$[esp+8]
; Line 149
	mov	DWORD PTR [esi+28], 1
; Line 150
	mov	DWORD PTR [esi+8], 0
; Line 151
	mov	DWORD PTR [esi], 4
; Line 152
	mov	DWORD PTR [esi+12], 0
; Line 126
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN21@UI_dup_inf
; Line 127
	call	_sk_new_null
	mov	DWORD PTR [ebx+4], eax
; Line 128
	test	eax, eax
	jne	SHORT $LN21@UI_dup_inf
; Line 177
	push	esi
	call	_free_string
	add	esp, 4
; Line 370
	mov	eax, edi
	pop	esi
	pop	edi
	pop	ebx
; Line 372
	ret	0
$LN21@UI_dup_inf:
; Line 169
	mov	DWORD PTR [esi+16], 0
; Line 170
	mov	DWORD PTR [esi+20], 0
; Line 171
	mov	DWORD PTR [esi+24], 0
; Line 172
	push	esi
	push	DWORD PTR [ebx+4]
	call	_sk_push
	mov	edi, eax
	add	esp, 8
; Line 174
	test	edi, edi
	jg	SHORT $LN24@UI_dup_inf
; Line 175
	dec	edi
$LN24@UI_dup_inf:
	pop	esi
; Line 370
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 372
	ret	0
_UI_dup_info_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_add_info_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_text$ = 12						; size = 4
_UI_add_info_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 353
	push	edi
; Line 142
	mov	edi, DWORD PTR _text$[esp]
	test	edi, edi
	jne	SHORT $LN10@UI_add_inf
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	67					; 00000043H
	push	109					; 0000006dH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 354
	or	eax, -1
	pop	edi
; Line 356
	ret	0
$LN10@UI_add_inf:
	push	esi
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	32					; 00000020H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN22@UI_add_inf
; Line 148
	mov	DWORD PTR [esi+4], edi
; Line 126
	mov	edi, DWORD PTR _ui$[esp+4]
; Line 149
	mov	DWORD PTR [esi+28], 0
; Line 150
	mov	DWORD PTR [esi+8], 0
; Line 151
	mov	DWORD PTR [esi], 4
; Line 152
	mov	DWORD PTR [esi+12], 0
; Line 126
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN19@UI_add_inf
; Line 127
	call	_sk_new_null
	mov	DWORD PTR [edi+4], eax
; Line 128
	test	eax, eax
	jne	SHORT $LN19@UI_add_inf
; Line 177
	push	esi
	call	_free_string
	add	esp, 4
$LN22@UI_add_inf:
; Line 354
	or	eax, -1
$LN24@UI_add_inf:
	pop	esi
	pop	edi
; Line 356
	ret	0
$LN19@UI_add_inf:
; Line 169
	mov	DWORD PTR [esi+16], 0
; Line 170
	mov	DWORD PTR [esi+20], 0
; Line 171
	mov	DWORD PTR [esi+24], 0
; Line 172
	push	esi
	push	DWORD PTR [edi+4]
	call	_sk_push
	add	esp, 8
; Line 174
	test	eax, eax
	jg	SHORT $LN24@UI_add_inf
	pop	esi
; Line 175
	dec	eax
	pop	edi
; Line 356
	ret	0
_UI_add_info_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_dup_input_boolean
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_action_desc$ = 16					; size = 4
_ok_chars$ = 20						; size = 4
_cancel_chars$ = 24					; size = 4
_flags$ = 28						; size = 4
_result_buf$ = 32					; size = 4
_UI_dup_input_boolean PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 305
	mov	eax, DWORD PTR _prompt$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	xor	ebx, ebx
	xor	edi, edi
	xor	esi, esi
	xor	ebp, ebp
	test	eax, eax
	je	SHORT $LN3@UI_dup_inp
; Line 306
	push	eax
	call	_BUF_strdup
	mov	ebx, eax
	add	esp, 4
; Line 307
	test	ebx, ebx
	jne	SHORT $LN3@UI_dup_inp
; Line 308
	push	308					; 00000134H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	65					; 00000041H
	push	110					; 0000006eH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 349
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 350
	ret	0
$LN3@UI_dup_inp:
; Line 313
	mov	eax, DWORD PTR _action_desc$[esp+12]
	test	eax, eax
	je	SHORT $LN5@UI_dup_inp
; Line 314
	push	eax
	call	_BUF_strdup
	mov	edi, eax
	add	esp, 4
; Line 315
	test	edi, edi
	jne	SHORT $LN5@UI_dup_inp
; Line 316
	push	316					; 0000013cH
; Line 317
	jmp	SHORT $LN15@UI_dup_inp
$LN5@UI_dup_inp:
; Line 321
	mov	eax, DWORD PTR _ok_chars$[esp+12]
	test	eax, eax
	je	SHORT $LN7@UI_dup_inp
; Line 322
	push	eax
	call	_BUF_strdup
	mov	esi, eax
	add	esp, 4
; Line 323
	test	esi, esi
	jne	SHORT $LN7@UI_dup_inp
; Line 324
	push	324					; 00000144H
; Line 325
	jmp	SHORT $LN15@UI_dup_inp
$LN7@UI_dup_inp:
; Line 329
	mov	eax, DWORD PTR _cancel_chars$[esp+12]
	test	eax, eax
	je	SHORT $LN9@UI_dup_inp
; Line 330
	push	eax
	call	_BUF_strdup
	mov	ebp, eax
	add	esp, 4
; Line 331
	test	ebp, ebp
	jne	SHORT $LN9@UI_dup_inp
; Line 332
	push	332					; 0000014cH
$LN15@UI_dup_inp:
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	65					; 00000041H
	push	110					; 0000006eH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$17:
; Line 341
	test	ebx, ebx
	je	SHORT $LN10@UI_dup_inp
; Line 342
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN10@UI_dup_inp:
; Line 343
	test	edi, edi
	je	SHORT $LN11@UI_dup_inp
; Line 344
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN11@UI_dup_inp:
; Line 345
	test	esi, esi
	je	SHORT $LN13@UI_dup_inp
; Line 346
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN13@UI_dup_inp:
; Line 349
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 350
	ret	0
$LN9@UI_dup_inp:
; Line 337
	push	DWORD PTR _result_buf$[esp+12]
	push	DWORD PTR _flags$[esp+16]
	push	3
	push	1
	push	ebp
	push	esi
	push	edi
	push	ebx
	push	DWORD PTR _ui$[esp+44]
	call	_general_allocate_boolean
	add	esp, 36					; 00000024H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 350
	ret	0
_UI_dup_input_boolean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_add_input_boolean
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_action_desc$ = 16					; size = 4
_ok_chars$ = 20						; size = 4
_cancel_chars$ = 24					; size = 4
_flags$ = 28						; size = 4
_result_buf$ = 32					; size = 4
_UI_add_input_boolean PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 291
	push	DWORD PTR _result_buf$[esp-4]
	push	DWORD PTR _flags$[esp]
	push	3
	push	0
	push	DWORD PTR _cancel_chars$[esp+12]
	push	DWORD PTR _ok_chars$[esp+16]
	push	DWORD PTR _action_desc$[esp+20]
	push	DWORD PTR _prompt$[esp+24]
	push	DWORD PTR _ui$[esp+28]
	call	_general_allocate_boolean
	add	esp, 36					; 00000024H
; Line 294
	ret	0
_UI_add_input_boolean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_dup_verify_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_flags$ = 16						; size = 4
_result_buf$ = 20					; size = 4
_minsize$ = 24						; size = 4
_maxsize$ = 28						; size = 4
_test_buf$ = 32						; size = 4
_UI_dup_verify_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 274
	mov	ecx, DWORD PTR _prompt$[esp-4]
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN3@UI_dup_ver
; Line 275
	push	ecx
	call	_BUF_strdup
	add	esp, 4
; Line 276
	test	eax, eax
	jne	SHORT $LN3@UI_dup_ver
; Line 277
	push	277					; 00000115H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	65					; 00000041H
	push	106					; 0000006aH
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 278
	or	eax, -1
; Line 285
	ret	0
$LN3@UI_dup_ver:
; Line 282
	push	DWORD PTR _test_buf$[esp-4]
	push	DWORD PTR _maxsize$[esp]
	push	DWORD PTR _minsize$[esp+4]
	push	DWORD PTR _result_buf$[esp+8]
	push	DWORD PTR _flags$[esp+12]
	push	2
	push	1
	push	eax
	push	DWORD PTR _ui$[esp+28]
	call	_general_allocate_string
	add	esp, 36					; 00000024H
; Line 285
	ret	0
_UI_dup_verify_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_add_verify_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_flags$ = 16						; size = 4
_result_buf$ = 20					; size = 4
_minsize$ = 24						; size = 4
_maxsize$ = 28						; size = 4
_test_buf$ = 32						; size = 4
_UI_add_verify_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 263
	push	DWORD PTR _test_buf$[esp-4]
	push	DWORD PTR _maxsize$[esp]
	push	DWORD PTR _minsize$[esp+4]
	push	DWORD PTR _result_buf$[esp+8]
	push	DWORD PTR _flags$[esp+12]
	push	2
	push	0
	push	DWORD PTR _prompt$[esp+24]
	push	DWORD PTR _ui$[esp+28]
	call	_general_allocate_string
	add	esp, 36					; 00000024H
; Line 266
	ret	0
_UI_add_verify_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_dup_input_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_flags$ = 16						; size = 4
_result_buf$ = 20					; size = 4
_minsize$ = 24						; size = 4
_maxsize$ = 28						; size = 4
_UI_dup_input_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 246
	mov	ecx, DWORD PTR _prompt$[esp-4]
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN3@UI_dup_inp
; Line 247
	push	ecx
	call	_BUF_strdup
	add	esp, 4
; Line 248
	test	eax, eax
	jne	SHORT $LN3@UI_dup_inp
; Line 249
	push	249					; 000000f9H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	65					; 00000041H
	push	103					; 00000067H
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 250
	xor	eax, eax
; Line 257
	ret	0
$LN3@UI_dup_inp:
; Line 254
	push	0
	push	DWORD PTR _maxsize$[esp]
	push	DWORD PTR _minsize$[esp+4]
	push	DWORD PTR _result_buf$[esp+8]
	push	DWORD PTR _flags$[esp+12]
	push	1
	push	1
	push	eax
	push	DWORD PTR _ui$[esp+28]
	call	_general_allocate_string
	add	esp, 36					; 00000024H
; Line 257
	ret	0
_UI_dup_input_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_add_input_string
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_prompt$ = 12						; size = 4
_flags$ = 16						; size = 4
_result_buf$ = 20					; size = 4
_minsize$ = 24						; size = 4
_maxsize$ = 28						; size = 4
_UI_add_input_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 235
	push	0
	push	DWORD PTR _maxsize$[esp]
	push	DWORD PTR _minsize$[esp+4]
	push	DWORD PTR _result_buf$[esp+8]
	push	DWORD PTR _flags$[esp+12]
	push	1
	push	0
	push	DWORD PTR _prompt$[esp+24]
	push	DWORD PTR _ui$[esp+28]
	call	_general_allocate_string
	add	esp, 36					; 00000024H
; Line 238
	ret	0
_UI_add_input_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_free
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_UI_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 116
	push	esi
; Line 117
	mov	esi, DWORD PTR _ui$[esp]
	test	esi, esi
	je	SHORT $LN1@UI_free
; Line 119
	push	OFFSET _free_string
	push	DWORD PTR [esi+4]
	call	_sk_pop_free
; Line 120
	lea	eax, DWORD PTR [esi+12]
	push	eax
	push	esi
	push	11					; 0000000bH
	call	_CRYPTO_free_ex_data
; Line 121
	push	esi
	call	_CRYPTO_free
	add	esp, 24					; 00000018H
$LN1@UI_free:
	pop	esi
; Line 122
	ret	0
_UI_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_new_method
_TEXT	SEGMENT
_method$ = 8						; size = 4
_UI_new_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 78
	push	esi
; Line 81
	push	81					; 00000051H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 82
	test	esi, esi
	jne	SHORT $LN2@UI_new_met
; Line 83
	push	83					; 00000053H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	65					; 00000041H
	push	104					; 00000068H
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 84
	xor	eax, eax
	pop	esi
; Line 96
	ret	0
$LN2@UI_new_met:
; Line 86
	mov	eax, DWORD PTR _method$[esp]
	test	eax, eax
	jne	SHORT $LN3@UI_new_met
; Line 571
	mov	eax, DWORD PTR _default_UI_meth
	test	eax, eax
	jne	SHORT $LN3@UI_new_met
; Line 572
	call	_UI_OpenSSL
	mov	DWORD PTR _default_UI_meth, eax
$LN3@UI_new_met:
; Line 89
	mov	DWORD PTR [esi], eax
; Line 94
	lea	eax, DWORD PTR [esi+12]
	push	eax
	push	esi
	push	11					; 0000000bH
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+20], 0
	call	_CRYPTO_new_ex_data
	add	esp, 12					; 0000000cH
; Line 95
	mov	eax, esi
	pop	esi
; Line 96
	ret	0
_UI_new_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UI_new
_TEXT	SEGMENT
_UI_new	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ui\ui_lib.c
; Line 73
	push	esi
; Line 81
	push	81					; 00000051H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 82
	test	esi, esi
	jne	SHORT $LN4@UI_new
; Line 83
	push	83					; 00000053H
	push	OFFSET ??_C@_0BF@HFMCBPGH@?4?2crypto?2ui?2ui_lib?4c?$AA@
	push	65					; 00000041H
	push	104					; 00000068H
	push	40					; 00000028H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 74
	xor	eax, eax
	pop	esi
; Line 75
	ret	0
$LN4@UI_new:
; Line 571
	mov	eax, DWORD PTR _default_UI_meth
	test	eax, eax
	jne	SHORT $LN9@UI_new
; Line 572
	call	_UI_OpenSSL
	mov	DWORD PTR _default_UI_meth, eax
$LN9@UI_new:
; Line 94
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], eax
	push	ecx
	push	esi
	push	11					; 0000000bH
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+20], 0
	call	_CRYPTO_new_ex_data
	add	esp, 12					; 0000000cH
; Line 74
	mov	eax, esi
	pop	esi
; Line 75
	ret	0
_UI_new	ENDP
_TEXT	ENDS
END

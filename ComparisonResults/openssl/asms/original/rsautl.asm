; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\rsautl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_rsautl_main
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_06JJMGFEBF@?9inkey?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_06NLLOJDKN@?9pubin?$AA@			; `string'
PUBLIC	??_C@_07MBPOKNGC@?9certin?$AA@			; `string'
PUBLIC	??_C@_0L@MFHFHCDC@?9asn1parse?$AA@		; `string'
PUBLIC	??_C@_08INKHJOD@?9hexdump?$AA@			; `string'
PUBLIC	??_C@_04OINBMFGG@?9raw?$AA@			; `string'
PUBLIC	??_C@_05MNEEIHD@?9oaep?$AA@			; `string'
PUBLIC	??_C@_04OGPJBOIH@?9ssl?$AA@			; `string'
PUBLIC	??_C@_05KOHJIHDF@?9pkcs?$AA@			; `string'
PUBLIC	??_C@_05FBPOAIOK@?9x931?$AA@			; `string'
PUBLIC	??_C@_05LLLFPBKO@?9sign?$AA@			; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_04PGMDFMPL@?9rev?$AA@			; `string'
PUBLIC	??_C@_08CNCNOCCN@?9encrypt?$AA@			; `string'
PUBLIC	??_C@_08ODIALGEJ@?9decrypt?$AA@			; `string'
PUBLIC	??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@ ; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0M@NBDOOMPD@Private?5Key?$AA@		; `string'
PUBLIC	??_C@_0L@KEAMIOLD@Public?5Key?$AA@		; `string'
PUBLIC	??_C@_0M@KDOEPPNO@Certificate?$AA@		; `string'
PUBLIC	??_C@_0BH@CIFBFEOC@Error?5getting?5RSA?5key?6?$AA@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0BK@BIPALIPH@Error?5Reading?5Input?5File?6?$AA@ ; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_0BL@NHPKPBMO@Error?5Writing?5Output?5File?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@	; `string'
PUBLIC	??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@IJKBEFJ@RSA?5operation?5error?6?$AA@	; `string'
PUBLIC	??_C@_0BJ@CJCIBPFK@Usage?3?5rsautl?5?$FLoptions?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@ ; `string'
PUBLIC	??_C@_0CI@DHKMHDEJ@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5an?5RSA?5@ ; `string'
PUBLIC	??_C@_0ED@HLHMIBOL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@ ; `string'
PUBLIC	??_C@_0CE@JBMJBJAM@?9ssl?5?5?5?5?5?5?5?5?5?5?5?5use?5SSL?5v2?5paddi@ ; `string'
PUBLIC	??_C@_0CA@PACKEBFF@?9raw?5?5?5?5?5?5?5?5?5?5?5?5use?5no?5padding?6?$AA@ ; `string'
PUBLIC	??_C@_0DD@PPFPKNBP@?9pkcs?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5v1?45?5@ ; `string'
PUBLIC	??_C@_0CB@EIDBDHNL@?9oaep?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5OAEP?6@ ; `string'
PUBLIC	??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@ ; `string'
PUBLIC	??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@ ; `string'
PUBLIC	??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@ ; `string'
PUBLIC	??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@ ; `string'
PUBLIC	??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@ ; `string'
PUBLIC	??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ ; `string'
PUBLIC	??_C@_0CD@GDBFCBOE@?9passin?5arg?5?5?5?5pass?5phrase?5sourc@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__exit:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_dump:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ASN1_parse_dump:PROC
EXTRN	_OPENSSL_add_all_algorithms_noconf:PROC
EXTRN	_EVP_PKEY_get1_RSA:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_RSA_size:PROC
EXTRN	_RSA_public_encrypt:PROC
EXTRN	_RSA_private_encrypt:PROC
EXTRN	_RSA_public_decrypt:PROC
EXTRN	_RSA_private_decrypt:PROC
EXTRN	_RSA_free:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_cert:PROC
EXTRN	_load_key:PROC
EXTRN	_load_pubkey:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
;	COMDAT ??_C@_0CD@GDBFCBOE@?9passin?5arg?5?5?5?5pass?5phrase?5sourc@
CONST	SEGMENT
??_C@_0CD@GDBFCBOE@?9passin?5arg?5?5?5?5pass?5phrase?5sourc@ DB '-passin '
	DB	'arg    pass phrase source', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
CONST	SEGMENT
??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@ DB '-en'
	DB	'gine e       use engine e, possibly a hardware device.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@
CONST	SEGMENT
??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@ DB '-hex'
	DB	'dump        hex dump output', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@
CONST	SEGMENT
??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@ DB '-decr'
	DB	'ypt        decrypt with private key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@
CONST	SEGMENT
??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@ DB '-encr'
	DB	'ypt        encrypt with public key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@
CONST	SEGMENT
??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@ DB '-ver'
	DB	'ify         verify with public key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@
CONST	SEGMENT
??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@ DB '-s'
	DB	'ign           sign with private key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EIDBDHNL@?9oaep?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5OAEP?6@
CONST	SEGMENT
??_C@_0CB@EIDBDHNL@?9oaep?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5OAEP?6@ DB '-'
	DB	'oaep           use PKCS#1 OAEP', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@PPFPKNBP@?9pkcs?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5v1?45?5@
CONST	SEGMENT
??_C@_0DD@PPFPKNBP@?9pkcs?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5v1?45?5@ DB '-'
	DB	'pkcs           use PKCS#1 v1.5 padding (default)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PACKEBFF@?9raw?5?5?5?5?5?5?5?5?5?5?5?5use?5no?5padding?6?$AA@
CONST	SEGMENT
??_C@_0CA@PACKEBFF@?9raw?5?5?5?5?5?5?5?5?5?5?5?5use?5no?5padding?6?$AA@ DB '-'
	DB	'raw            use no padding', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JBMJBJAM@?9ssl?5?5?5?5?5?5?5?5?5?5?5?5use?5SSL?5v2?5paddi@
CONST	SEGMENT
??_C@_0CE@JBMJBJAM@?9ssl?5?5?5?5?5?5?5?5?5?5?5?5use?5SSL?5v2?5paddi@ DB '-'
	DB	'ssl            use SSL v2 padding', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@HLHMIBOL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@
CONST	SEGMENT
??_C@_0ED@HLHMIBOL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@ DB '-ce'
	DB	'rtin         input is a certificate carrying an RSA public ke'
	DB	'y', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@DHKMHDEJ@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5an?5RSA?5@
CONST	SEGMENT
??_C@_0CI@DHKMHDEJ@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5an?5RSA?5@ DB '-'
	DB	'pubin          input is an RSA public', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@
CONST	SEGMENT
??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@ DB '-keyform'
	DB	' arg    private key format - default PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@
CONST	SEGMENT
??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@ DB '-inkey fil'
	DB	'e     input key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ DB '-out '
	DB	'file       output file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ DB '-in f'
	DB	'ile        input file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CJCIBPFK@Usage?3?5rsautl?5?$FLoptions?$FN?6?$AA@
CONST	SEGMENT
??_C@_0BJ@CJCIBPFK@Usage?3?5rsautl?5?$FLoptions?$FN?6?$AA@ DB 'Usage: rsa'
	DB	'utl [options]', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IJKBEFJ@RSA?5operation?5error?6?$AA@
CONST	SEGMENT
??_C@_0BF@IJKBEFJ@RSA?5operation?5error?6?$AA@ DB 'RSA operation error', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@
CONST	SEGMENT
??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@ DB 'Error reading i'
	DB	'nput Data', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ DB 'Out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@
CONST	SEGMENT
??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@ DB '.\apps\rsautl.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NHPKPBMO@Error?5Writing?5Output?5File?6?$AA@
CONST	SEGMENT
??_C@_0BL@NHPKPBMO@Error?5Writing?5Output?5File?6?$AA@ DB 'Error Writing '
	DB	'Output File', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BIPALIPH@Error?5Reading?5Input?5File?6?$AA@
CONST	SEGMENT
??_C@_0BK@BIPALIPH@Error?5Reading?5Input?5File?6?$AA@ DB 'Error Reading I'
	DB	'nput File', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CIFBFEOC@Error?5getting?5RSA?5key?6?$AA@
CONST	SEGMENT
??_C@_0BH@CIFBFEOC@Error?5getting?5RSA?5key?6?$AA@ DB 'Error getting RSA '
	DB	'key', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KDOEPPNO@Certificate?$AA@
CONST	SEGMENT
??_C@_0M@KDOEPPNO@Certificate?$AA@ DB 'Certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
CONST	SEGMENT
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ DB 'Public Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
CONST	SEGMENT
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ DB 'Private Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@
CONST	SEGMENT
??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@ DB 'A private '
	DB	'key is needed for this operation', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ODIALGEJ@?9decrypt?$AA@
CONST	SEGMENT
??_C@_08ODIALGEJ@?9decrypt?$AA@ DB '-decrypt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CNCNOCCN@?9encrypt?$AA@
CONST	SEGMENT
??_C@_08CNCNOCCN@?9encrypt?$AA@ DB '-encrypt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PGMDFMPL@?9rev?$AA@
CONST	SEGMENT
??_C@_04PGMDFMPL@?9rev?$AA@ DB '-rev', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LLLFPBKO@?9sign?$AA@
CONST	SEGMENT
??_C@_05LLLFPBKO@?9sign?$AA@ DB '-sign', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FBPOAIOK@?9x931?$AA@
CONST	SEGMENT
??_C@_05FBPOAIOK@?9x931?$AA@ DB '-x931', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KOHJIHDF@?9pkcs?$AA@
CONST	SEGMENT
??_C@_05KOHJIHDF@?9pkcs?$AA@ DB '-pkcs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OGPJBOIH@?9ssl?$AA@
CONST	SEGMENT
??_C@_04OGPJBOIH@?9ssl?$AA@ DB '-ssl', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MNEEIHD@?9oaep?$AA@
CONST	SEGMENT
??_C@_05MNEEIHD@?9oaep?$AA@ DB '-oaep', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OINBMFGG@?9raw?$AA@
CONST	SEGMENT
??_C@_04OINBMFGG@?9raw?$AA@ DB '-raw', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08INKHJOD@?9hexdump?$AA@
CONST	SEGMENT
??_C@_08INKHJOD@?9hexdump?$AA@ DB '-hexdump', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MFHFHCDC@?9asn1parse?$AA@
CONST	SEGMENT
??_C@_0L@MFHFHCDC@?9asn1parse?$AA@ DB '-asn1parse', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MBPOKNGC@?9certin?$AA@
CONST	SEGMENT
??_C@_07MBPOKNGC@?9certin?$AA@ DB '-certin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLLOJDKN@?9pubin?$AA@
CONST	SEGMENT
??_C@_06NLLOJDKN@?9pubin?$AA@ DB '-pubin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJMGFEBF@?9inkey?$AA@
CONST	SEGMENT
??_C@_06JJMGFEBF@?9inkey?$AA@ DB '-inkey', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsautl_main
_TEXT	SEGMENT
_key_type$1$ = -42					; size = 1
_need_priv$1$ = -41					; size = 1
_rsa_mode$1$ = -40					; size = 1
_rev$1$ = -39						; size = 1
_asn1parse$1$ = -38					; size = 1
_hexdump$1$ = -37					; size = 1
_keyform$1$ = -36					; size = 4
_keyfile$1$ = -32					; size = 4
_rsa$1$ = -28						; size = 4
_in$1$ = -24						; size = 4
_passin$ = -20						; size = 4
_engine$1$ = -16					; size = 4
_passargin$1$ = -12					; size = 4
_infile$1$ = -8						; size = 4
_rsa_out$1$ = -4					; size = 4
_outfile$1$ = -4					; size = 4
_pad$1$ = 8						; size = 1
_argc$ = 8						; size = 4
_out$1$ = 12						; size = 4
_argv$ = 12						; size = 4
_rsautl_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\rsautl.c
; Line 87
	mov	eax, 44					; 0000002cH
	call	__chkstk
; Line 112
	mov	eax, DWORD PTR _bio_err
	push	ebx
	mov	ebx, DWORD PTR _argv$[esp+44]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _argc$[esp+56]
	xor	esi, esi
	xor	ebp, ebp
	mov	DWORD PTR _in$1$[esp+60], 0
	dec	edi
	mov	DWORD PTR _infile$1$[esp+60], 0
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+60], 0
	mov	DWORD PTR _engine$1$[esp+60], 0
	mov	DWORD PTR _keyfile$1$[esp+60], 0
	mov	BYTE PTR _rsa_mode$1$[esp+60], 2
	mov	BYTE PTR _key_type$1$[esp+60], 1
	mov	DWORD PTR _keyform$1$[esp+60], 3
	mov	BYTE PTR _need_priv$1$[esp+60], 0
	mov	BYTE PTR _rev$1$[esp+60], 0
	mov	BYTE PTR _hexdump$1$[esp+60], 0
	mov	BYTE PTR _asn1parse$1$[esp+60], 0
	mov	DWORD PTR _rsa$1$[esp+60], 0
	mov	DWORD PTR _passargin$1$[esp+60], esi
	mov	DWORD PTR _passin$[esp+60], esi
	test	eax, eax
	jne	SHORT $LN11@rsautl_mai
; Line 113
	push	eax
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _bio_err, eax
$LN11@rsautl_mai:
; Line 115
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN199@rsautl_mai
; Line 117
	call	_ERR_load_crypto_strings
; Line 118
	call	_OPENSSL_add_all_algorithms_noconf
; Line 119
	mov	BYTE PTR _pad$1$[esp+56], 1
; Line 121
	cmp	edi, 1
	jl	$LN66@rsautl_mai
	npad	6
$LL2@rsautl_mai:
; Line 122
	mov	esi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, esi
	npad	7
$LL116@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN117@rsautl_mai
	test	dl, dl
	je	SHORT $LN118@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN117@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL116@rsautl_mai
$LN118@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN119@rsautl_mai
$LN117@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN119@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN13@rsautl_mai
; Line 123
	dec	edi
	cmp	edi, 1
	jl	$LN100@rsautl_mai
; Line 126
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _infile$1$[esp+60], eax
; Line 127
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	jmp	$LN202@rsautl_mai
$LN13@rsautl_mai:
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, esi
	npad	3
$LL120@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN121@rsautl_mai
	test	dl, dl
	je	SHORT $LN122@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN121@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL120@rsautl_mai
$LN122@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN123@rsautl_mai
$LN121@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN123@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN17@rsautl_mai
; Line 128
	dec	edi
	cmp	edi, 1
	jl	$LN100@rsautl_mai
; Line 131
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+60], eax
; Line 132
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	jmp	$LN202@rsautl_mai
$LN17@rsautl_mai:
	mov	ecx, OFFSET ??_C@_06JJMGFEBF@?9inkey?$AA@
	mov	eax, esi
	npad	3
$LL124@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN125@rsautl_mai
	test	dl, dl
	je	SHORT $LN126@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN125@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL124@rsautl_mai
$LN126@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN127@rsautl_mai
$LN125@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN127@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN21@rsautl_mai
; Line 133
	dec	edi
	cmp	edi, 1
	jl	$LN100@rsautl_mai
; Line 136
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _keyfile$1$[esp+60], eax
; Line 137
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	jmp	$LN202@rsautl_mai
$LN21@rsautl_mai:
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, esi
	npad	3
$LL128@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN129@rsautl_mai
	test	dl, dl
	je	SHORT $LN130@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN129@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL128@rsautl_mai
$LN130@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN131@rsautl_mai
$LN129@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN131@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN25@rsautl_mai
; Line 138
	dec	edi
	cmp	edi, 1
	jl	$LN100@rsautl_mai
; Line 141
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargin$1$[esp+60], eax
; Line 142
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	jmp	$LN202@rsautl_mai
$LN25@rsautl_mai:
	mov	ecx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	eax, esi
	npad	3
$LL132@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN133@rsautl_mai
	test	dl, dl
	je	SHORT $LN134@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN133@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL132@rsautl_mai
$LN134@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN135@rsautl_mai
$LN133@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN135@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN29@rsautl_mai
; Line 143
	dec	edi
	cmp	edi, 1
	jl	$LN100@rsautl_mai
; Line 146
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	mov	DWORD PTR _keyform$1$[esp+64], eax
	add	esp, 4
; Line 148
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	jmp	$LN202@rsautl_mai
$LN29@rsautl_mai:
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
$LL136@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN137@rsautl_mai
	test	dl, dl
	je	SHORT $LN138@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN137@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL136@rsautl_mai
$LN138@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN139@rsautl_mai
$LN137@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN139@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN33@rsautl_mai
; Line 149
	dec	edi
	cmp	edi, 1
	jl	$LN100@rsautl_mai
; Line 152
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _engine$1$[esp+60], eax
; Line 154
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	jmp	$LN202@rsautl_mai
$LN33@rsautl_mai:
	mov	ecx, OFFSET ??_C@_06NLLOJDKN@?9pubin?$AA@
	mov	eax, esi
$LL140@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN141@rsautl_mai
	test	dl, dl
	je	SHORT $LN142@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN141@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL140@rsautl_mai
$LN142@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN143@rsautl_mai
$LN141@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN143@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN37@rsautl_mai
; Line 155
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	cl, 2
	mov	BYTE PTR _key_type$1$[esp+60], cl
	jmp	$LN107@rsautl_mai
$LN37@rsautl_mai:
; Line 156
	mov	ecx, OFFSET ??_C@_07MBPOKNGC@?9certin?$AA@
	mov	eax, esi
$LL144@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN145@rsautl_mai
	test	dl, dl
	je	SHORT $LN146@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN145@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL144@rsautl_mai
$LN146@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN147@rsautl_mai
$LN145@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN147@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN39@rsautl_mai
; Line 157
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	cl, 3
	mov	BYTE PTR _key_type$1$[esp+60], cl
	jmp	$LN107@rsautl_mai
$LN39@rsautl_mai:
; Line 158
	mov	ecx, OFFSET ??_C@_0L@MFHFHCDC@?9asn1parse?$AA@
	mov	eax, esi
$LL148@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN149@rsautl_mai
	test	dl, dl
	je	SHORT $LN150@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN149@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL148@rsautl_mai
$LN150@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN151@rsautl_mai
$LN149@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN151@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN41@rsautl_mai
; Line 159
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _asn1parse$1$[esp+60], 1
	jmp	$LN202@rsautl_mai
$LN41@rsautl_mai:
; Line 160
	mov	ecx, OFFSET ??_C@_08INKHJOD@?9hexdump?$AA@
	mov	eax, esi
	npad	2
$LL152@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN153@rsautl_mai
	test	dl, dl
	je	SHORT $LN154@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN153@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL152@rsautl_mai
$LN154@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN155@rsautl_mai
$LN153@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN155@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN43@rsautl_mai
; Line 161
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _hexdump$1$[esp+60], 1
	jmp	$LN202@rsautl_mai
$LN43@rsautl_mai:
; Line 162
	mov	ecx, OFFSET ??_C@_04OINBMFGG@?9raw?$AA@
	mov	eax, esi
	npad	2
$LL156@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN157@rsautl_mai
	test	dl, dl
	je	SHORT $LN158@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN157@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL156@rsautl_mai
$LN158@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN159@rsautl_mai
$LN157@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN159@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN45@rsautl_mai
; Line 163
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _pad$1$[esp+56], 3
	jmp	$LN202@rsautl_mai
$LN45@rsautl_mai:
; Line 164
	mov	ecx, OFFSET ??_C@_05MNEEIHD@?9oaep?$AA@
	mov	eax, esi
	npad	2
$LL160@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN161@rsautl_mai
	test	dl, dl
	je	SHORT $LN162@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN161@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL160@rsautl_mai
$LN162@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN163@rsautl_mai
$LN161@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN163@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN47@rsautl_mai
; Line 165
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _pad$1$[esp+56], 4
	jmp	$LN202@rsautl_mai
$LN47@rsautl_mai:
; Line 166
	mov	ecx, OFFSET ??_C@_04OGPJBOIH@?9ssl?$AA@
	mov	eax, esi
	npad	2
$LL164@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN165@rsautl_mai
	test	dl, dl
	je	SHORT $LN166@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN165@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL164@rsautl_mai
$LN166@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN167@rsautl_mai
$LN165@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN167@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN49@rsautl_mai
; Line 167
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _pad$1$[esp+56], 2
	jmp	$LN202@rsautl_mai
$LN49@rsautl_mai:
; Line 168
	mov	ecx, OFFSET ??_C@_05KOHJIHDF@?9pkcs?$AA@
	mov	eax, esi
	npad	2
$LL168@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN169@rsautl_mai
	test	dl, dl
	je	SHORT $LN170@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN169@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL168@rsautl_mai
$LN170@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN171@rsautl_mai
$LN169@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN171@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN51@rsautl_mai
; Line 169
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _pad$1$[esp+56], 1
	jmp	$LN202@rsautl_mai
$LN51@rsautl_mai:
; Line 170
	mov	ecx, OFFSET ??_C@_05FBPOAIOK@?9x931?$AA@
	mov	eax, esi
	npad	2
$LL172@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN173@rsautl_mai
	test	dl, dl
	je	SHORT $LN174@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN173@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL172@rsautl_mai
$LN174@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN175@rsautl_mai
$LN173@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN175@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN53@rsautl_mai
; Line 171
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _pad$1$[esp+56], 5
	jmp	$LN202@rsautl_mai
$LN53@rsautl_mai:
; Line 172
	mov	ecx, OFFSET ??_C@_05LLLFPBKO@?9sign?$AA@
	mov	eax, esi
	npad	2
$LL176@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN177@rsautl_mai
	test	dl, dl
	je	SHORT $LN178@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN177@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL176@rsautl_mai
$LN178@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN179@rsautl_mai
$LN177@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN179@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN55@rsautl_mai
; Line 173
	mov	BYTE PTR _rsa_mode$1$[esp+60], 1
; Line 174
	jmp	$LN203@rsautl_mai
$LN55@rsautl_mai:
; Line 175
	mov	ecx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	eax, esi
	npad	6
$LL180@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN181@rsautl_mai
	test	dl, dl
	je	SHORT $LN182@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN181@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL180@rsautl_mai
$LN182@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN183@rsautl_mai
$LN181@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN183@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN57@rsautl_mai
; Line 176
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _rsa_mode$1$[esp+60], 2
	jmp	$LN202@rsautl_mai
$LN57@rsautl_mai:
; Line 177
	mov	ecx, OFFSET ??_C@_04PGMDFMPL@?9rev?$AA@
	mov	eax, esi
	npad	2
$LL184@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN185@rsautl_mai
	test	dl, dl
	je	SHORT $LN186@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN185@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL184@rsautl_mai
$LN186@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN187@rsautl_mai
$LN185@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN187@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN59@rsautl_mai
; Line 178
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _rev$1$[esp+60], 1
	jmp	$LN202@rsautl_mai
$LN59@rsautl_mai:
; Line 179
	mov	ecx, OFFSET ??_C@_08CNCNOCCN@?9encrypt?$AA@
	mov	eax, esi
	npad	2
$LL188@rsautl_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN189@rsautl_mai
	test	dl, dl
	je	SHORT $LN190@rsautl_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN189@rsautl_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL188@rsautl_mai
$LN190@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN191@rsautl_mai
$LN189@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN191@rsautl_mai:
	test	eax, eax
	jne	SHORT $LN61@rsautl_mai
; Line 180
	mov	al, BYTE PTR _need_priv$1$[esp+60]
	mov	BYTE PTR _rsa_mode$1$[esp+60], 3
	jmp	SHORT $LN202@rsautl_mai
$LN61@rsautl_mai:
; Line 181
	mov	eax, OFFSET ??_C@_08ODIALGEJ@?9decrypt?$AA@
	npad	7
$LL192@rsautl_mai:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN193@rsautl_mai
	test	cl, cl
	je	SHORT $LN194@rsautl_mai
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN193@rsautl_mai
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL192@rsautl_mai
$LN194@rsautl_mai:
	xor	eax, eax
	jmp	SHORT $LN195@rsautl_mai
$LN193@rsautl_mai:
	sbb	eax, eax
	or	eax, 1
$LN195@rsautl_mai:
	test	eax, eax
	jne	$LN100@rsautl_mai
; Line 182
	mov	BYTE PTR _rsa_mode$1$[esp+60], 4
$LN203@rsautl_mai:
; Line 183
	mov	al, 1
	mov	BYTE PTR _need_priv$1$[esp+60], al
$LN202@rsautl_mai:
	mov	cl, BYTE PTR _key_type$1$[esp+60]
$LN107@rsautl_mai:
; Line 190
	dec	edi
; Line 191
	add	ebx, 4
	cmp	edi, 1
	jge	$LL2@rsautl_mai
; Line 194
	test	al, al
	je	SHORT $LN66@rsautl_mai
	cmp	cl, 1
	je	SHORT $LN66@rsautl_mai
; Line 195
	push	OFFSET ??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@
$LN207@rsautl_mai:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN208@rsautl_mai:
; Line 188
	xor	esi, esi
$LN199@rsautl_mai:
	xor	edi, edi
$LN205@rsautl_mai:
	mov	ebx, 1
$end$214:
; Line 329
	push	DWORD PTR _rsa$1$[esp+60]
	call	_RSA_free
; Line 330
	push	DWORD PTR _in$1$[esp+64]
	call	_BIO_free
; Line 331
	push	edi
	call	_BIO_free_all
	add	esp, 12					; 0000000cH
; Line 332
	test	ebp, ebp
	je	SHORT $LN94@rsautl_mai
; Line 333
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN94@rsautl_mai:
; Line 334
	test	esi, esi
	je	SHORT $LN95@rsautl_mai
; Line 335
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN95@rsautl_mai:
; Line 336
	mov	ecx, DWORD PTR _passin$[esp+60]
	test	ecx, ecx
	je	SHORT $LN96@rsautl_mai
; Line 337
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN96@rsautl_mai:
; Line 338
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 339
	add	esp, 44					; 0000002cH
	ret	0
$LN100@rsautl_mai:
; Line 187
	call	_usage
; Line 188
	jmp	SHORT $LN208@rsautl_mai
$LN66@rsautl_mai:
; Line 199
	push	0
	push	DWORD PTR _engine$1$[esp+64]
	push	DWORD PTR _bio_err
	call	_setup_engine
; Line 201
	push	0
	mov	esi, eax
	lea	eax, DWORD PTR _passin$[esp+76]
	push	eax
	push	0
	push	DWORD PTR _passargin$1$[esp+84]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN67@rsautl_mai
; Line 202
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; Line 203
	jmp	$LN207@rsautl_mai
$LN67@rsautl_mai:
; Line 207
	push	0
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_load_file
; Line 209
	movsx	eax, BYTE PTR _key_type$1$[esp+72]
	add	esp, 12					; 0000000cH
	sub	eax, 1
	je	SHORT $LN68@rsautl_mai
	sub	eax, 1
	je	SHORT $LN69@rsautl_mai
	sub	eax, 1
	jne	$LN108@rsautl_mai
; Line 221
	push	OFFSET ??_C@_0M@KDOEPPNO@Certificate?$AA@
	push	esi
	push	eax
	push	DWORD PTR _keyform$1$[esp+72]
	push	DWORD PTR _keyfile$1$[esp+76]
	push	DWORD PTR _bio_err
	call	_load_cert
	mov	edi, eax
	add	esp, 24					; 00000018H
; Line 222
	test	edi, edi
	je	SHORT $LN108@rsautl_mai
; Line 223
	push	edi
	call	_X509_get_pubkey
; Line 224
	push	edi
	mov	esi, eax
	call	_X509_free
	add	esp, 8
	jmp	SHORT $LN71@rsautl_mai
$LN69@rsautl_mai:
; Line 216
	push	OFFSET ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
	push	esi
	push	0
	push	0
	push	DWORD PTR _keyform$1$[esp+76]
	push	DWORD PTR _keyfile$1$[esp+80]
	push	DWORD PTR _bio_err
	call	_load_pubkey
; Line 218
	jmp	SHORT $LN204@rsautl_mai
$LN68@rsautl_mai:
; Line 211
	push	OFFSET ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
	push	esi
	push	DWORD PTR _passin$[esp+68]
	push	0
	push	DWORD PTR _keyform$1$[esp+76]
	push	DWORD PTR _keyfile$1$[esp+80]
	push	DWORD PTR _bio_err
	call	_load_key
$LN204@rsautl_mai:
	mov	esi, eax
	add	esp, 28					; 0000001cH
$LN71@rsautl_mai:
; Line 229
	test	esi, esi
	jne	SHORT $LN72@rsautl_mai
$LN108@rsautl_mai:
	pop	edi
	pop	esi
	pop	ebp
; Line 230
	mov	eax, 1
	pop	ebx
; Line 339
	add	esp, 44					; 0000002cH
	ret	0
$LN72@rsautl_mai:
; Line 233
	push	esi
	call	_EVP_PKEY_get1_RSA
	mov	ebx, eax
; Line 234
	push	esi
	mov	DWORD PTR _rsa$1$[esp+68], ebx
	call	_EVP_PKEY_free
	add	esp, 8
; Line 236
	test	ebx, ebx
	jne	SHORT $LN73@rsautl_mai
; Line 237
	push	OFFSET ??_C@_0BH@CIFBFEOC@Error?5getting?5RSA?5key?6?$AA@
$LN209@rsautl_mai:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 238
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 239
	jmp	$LN208@rsautl_mai
$LN73@rsautl_mai:
; Line 242
	mov	eax, DWORD PTR _infile$1$[esp+60]
	test	eax, eax
	je	SHORT $LN74@rsautl_mai
; Line 243
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	eax
	call	_BIO_new_file
	mov	ecx, eax
	add	esp, 8
	mov	DWORD PTR _in$1$[esp+60], ecx
	test	ecx, ecx
	jne	SHORT $LN200@rsautl_mai
; Line 244
	push	OFFSET ??_C@_0BK@BIPALIPH@Error?5Reading?5Input?5File?6?$AA@
; Line 246
	jmp	SHORT $LN209@rsautl_mai
$LN74@rsautl_mai:
; Line 249
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	0
	push	0
	call	esi
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _in$1$[esp+60], eax
	jmp	SHORT $LN75@rsautl_mai
$LN200@rsautl_mai:
	mov	esi, DWORD PTR __imp____acrt_iob_func
$LN75@rsautl_mai:
; Line 251
	mov	eax, DWORD PTR _outfile$1$[esp+60]
	test	eax, eax
	je	SHORT $LN77@rsautl_mai
; Line 252
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	eax
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+56], eax
	test	eax, eax
	jne	SHORT $LN78@rsautl_mai
; Line 253
	push	OFFSET ??_C@_0BL@NHPKPBMO@Error?5Writing?5Output?5File?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 254
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 255
	mov	edi, DWORD PTR _out$1$[esp+68]
	add	esp, 12					; 0000000cH
	xor	esi, esi
	jmp	$LN205@rsautl_mai
$LN77@rsautl_mai:
; Line 258
	push	0
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+56], eax
$LN78@rsautl_mai:
; Line 267
	push	ebx
	call	_RSA_size
	mov	esi, eax
; Line 269
	push	269					; 0000010dH
	push	OFFSET ??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@
	lea	edi, DWORD PTR [esi+esi]
	push	edi
	call	_CRYPTO_malloc
; Line 270
	push	270					; 0000010eH
	push	OFFSET ??_C@_0BA@CPBEEOII@?4?2apps?2rsautl?4c?$AA@
	push	esi
	mov	ebp, eax
	call	_CRYPTO_malloc
	add	esp, 28					; 0000001cH
	mov	esi, eax
	mov	DWORD PTR _rsa_out$1$[esp+60], esi
; Line 271
	test	ebp, ebp
	je	$LN81@rsautl_mai
	test	esi, esi
	je	$LN81@rsautl_mai
; Line 278
	push	edi
	push	ebp
	push	DWORD PTR _in$1$[esp+68]
	call	_BIO_read
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 279
	test	edi, edi
	jns	SHORT $LN82@rsautl_mai
; Line 280
	push	OFFSET ??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 281
	push	1
	call	DWORD PTR __imp__exit
$LN213@rsautl_mai:
$LN82@rsautl_mai:
; Line 283
	cmp	BYTE PTR _rev$1$[esp+60], 0
	je	SHORT $LN7@rsautl_mai
; Line 286
	mov	eax, edi
	xor	esi, esi
	cdq
	sub	eax, edx
	mov	ebx, eax
	sar	ebx, 1
	test	ebx, ebx
	jle	SHORT $LN196@rsautl_mai
	lea	edx, DWORD PTR [ebp-1]
	add	edx, edi
	npad	7
$LL8@rsautl_mai:
; Line 288
	mov	al, BYTE PTR [edx]
	lea	edx, DWORD PTR [edx-1]
	mov	cl, BYTE PTR [esi+ebp]
	mov	BYTE PTR [esi+ebp], al
	inc	esi
; Line 289
	mov	BYTE PTR [edx+1], cl
	cmp	esi, ebx
	jl	SHORT $LL8@rsautl_mai
$LN196@rsautl_mai:
	mov	ebx, DWORD PTR _rsa$1$[esp+60]
	mov	esi, DWORD PTR _rsa_out$1$[esp+60]
$LN7@rsautl_mai:
; Line 292
	movsx	eax, BYTE PTR _rsa_mode$1$[esp+60]
	dec	eax
	cmp	eax, 3
	ja	SHORT $LN198@rsautl_mai
	jmp	DWORD PTR $LN212@rsautl_mai[eax*4]
$LN84@rsautl_mai:
; Line 295
	movzx	eax, BYTE PTR _pad$1$[esp+56]
	push	eax
	push	ebx
	push	esi
	push	ebp
	push	edi
	call	_RSA_public_decrypt
; Line 296
	jmp	SHORT $LN206@rsautl_mai
$LN85@rsautl_mai:
; Line 299
	movzx	eax, BYTE PTR _pad$1$[esp+56]
	push	eax
	push	ebx
	push	esi
	push	ebp
	push	edi
	call	_RSA_private_encrypt
; Line 301
	jmp	SHORT $LN206@rsautl_mai
$LN86@rsautl_mai:
; Line 304
	movzx	eax, BYTE PTR _pad$1$[esp+56]
	push	eax
	push	ebx
	push	esi
	push	ebp
	push	edi
	call	_RSA_public_encrypt
; Line 305
	jmp	SHORT $LN206@rsautl_mai
$LN87@rsautl_mai:
; Line 308
	movzx	eax, BYTE PTR _pad$1$[esp+56]
	push	eax
	push	ebx
	push	esi
	push	ebp
	push	edi
	call	_RSA_private_decrypt
$LN206@rsautl_mai:
	add	esp, 20					; 00000014H
; Line 314
	test	eax, eax
	jns	SHORT $LN88@rsautl_mai
; Line 315
	push	OFFSET ??_C@_0BF@IJKBEFJ@RSA?5operation?5error?6?$AA@
$LN210@rsautl_mai:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 316
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 317
	mov	edi, DWORD PTR _out$1$[esp+68]
	add	esp, 12					; 0000000cH
	jmp	$LN205@rsautl_mai
$LN198@rsautl_mai:
	xor	eax, eax
$LN88@rsautl_mai:
; Line 321
	mov	edi, DWORD PTR _out$1$[esp+56]
	xor	ebx, ebx
	cmp	BYTE PTR _asn1parse$1$[esp+60], bl
	je	SHORT $LN89@rsautl_mai
	push	-1
	push	1
	push	eax
	push	esi
	push	edi
	call	_ASN1_parse_dump
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$end$214
; Line 322
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 323
	jmp	$end$214
$LN89@rsautl_mai:
; Line 325
	push	eax
	push	esi
	push	edi
	cmp	BYTE PTR _hexdump$1$[esp+72], bl
	je	SHORT $LN92@rsautl_mai
	call	_BIO_dump
	add	esp, 12					; 0000000cH
	jmp	$end$214
$LN92@rsautl_mai:
; Line 327
	call	_BIO_write
	add	esp, 12					; 0000000cH
	jmp	$end$214
$LN81@rsautl_mai:
; Line 272
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
	jmp	$LN210@rsautl_mai
$LN211@rsautl_mai:
	npad	2
$LN212@rsautl_mai:
; Line 339
	DD	$LN85@rsautl_mai
	DD	$LN84@rsautl_mai
	DD	$LN86@rsautl_mai
	DD	$LN87@rsautl_mai
_rsautl_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _usage
_TEXT	SEGMENT
_usage	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\rsautl.c
; Line 343
	push	OFFSET ??_C@_0BJ@CJCIBPFK@Usage?3?5rsautl?5?$FLoptions?$FN?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 344
	push	OFFSET ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 345
	push	OFFSET ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 346
	push	OFFSET ??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 347
	push	OFFSET ??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 348
	push	OFFSET ??_C@_0CI@DHKMHDEJ@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5an?5RSA?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 349
	push	OFFSET ??_C@_0ED@HLHMIBOL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 351
	push	OFFSET ??_C@_0CE@JBMJBJAM@?9ssl?5?5?5?5?5?5?5?5?5?5?5?5use?5SSL?5v2?5paddi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 352
	push	OFFSET ??_C@_0CA@PACKEBFF@?9raw?5?5?5?5?5?5?5?5?5?5?5?5use?5no?5padding?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 353
	push	OFFSET ??_C@_0DD@PPFPKNBP@?9pkcs?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5v1?45?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 355
	push	OFFSET ??_C@_0CB@EIDBDHNL@?9oaep?5?5?5?5?5?5?5?5?5?5?5use?5PKCS?$CD1?5OAEP?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 356
	push	OFFSET ??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 357
	push	OFFSET ??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 358
	push	OFFSET ??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 359
	push	OFFSET ??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 360
	push	OFFSET ??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 362
	push	OFFSET ??_C@_0DL@NDFIJIDB@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5po@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 364
	push	OFFSET ??_C@_0CD@GDBFCBOE@?9passin?5arg?5?5?5?5pass?5phrase?5sourc@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 367
	ret	0
_usage	ENDP
_TEXT	ENDS
END

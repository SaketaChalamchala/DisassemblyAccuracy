; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_item_i2d
PUBLIC	_ASN1_item_ndef_i2d
PUBLIC	_ASN1_item_ex_i2d
PUBLIC	_ASN1_template_i2d
PUBLIC	_asn1_ex_i2c
PUBLIC	??_C@_0BJ@BDIDBFLG@?4?2crypto?2asn1?2tasn_enc?4c?$AA@ ; `string'
EXTRN	__imp__qsort:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_set:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_i2c_ASN1_BIT_STRING:PROC
EXTRN	_i2c_ASN1_INTEGER:PROC
EXTRN	_ASN1_put_object:PROC
EXTRN	_ASN1_put_eoc:PROC
EXTRN	_ASN1_object_size:PROC
EXTRN	_asn1_get_choice_selector:PROC
EXTRN	_asn1_get_field_ptr:PROC
EXTRN	_asn1_do_adb:PROC
EXTRN	_asn1_enc_restore:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BJ@BDIDBFLG@?4?2crypto?2asn1?2tasn_enc?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@BDIDBFLG@?4?2crypto?2asn1?2tasn_enc?4c?$AA@ DB '.\crypto\asn1\t'
	DB	'asn_enc.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _der_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_der_cmp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 411
	mov	eax, DWORD PTR _a$[esp-4]
	mov	ecx, DWORD PTR _b$[esp-4]
	push	ebx
	push	esi
; Line 412
	mov	edx, DWORD PTR [eax]
	mov	ebx, DWORD PTR [ecx+4]
	mov	esi, ebx
	mov	ecx, DWORD PTR [ecx]
	push	edi
	mov	edi, DWORD PTR [eax+4]
	cmp	edi, ebx
	cmovl	esi, edi
	sub	esi, 4
	jb	SHORT $LN8@der_cmp
$LL9@der_cmp:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN7@der_cmp
	add	edx, 4
	add	ecx, 4
	sub	esi, 4
	jae	SHORT $LL9@der_cmp
$LN8@der_cmp:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN6@der_cmp
$LN7@der_cmp:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN10@der_cmp
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN6@der_cmp
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN10@der_cmp
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN6@der_cmp
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [ecx+2]
	jne	SHORT $LN10@der_cmp
	cmp	esi, -1
	je	SHORT $LN6@der_cmp
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [ecx+3]
	je	SHORT $LN6@der_cmp
$LN10@der_cmp:
	sbb	eax, eax
	or	eax, 1
	jmp	SHORT $LN11@der_cmp
$LN6@der_cmp:
	xor	eax, eax
$LN11@der_cmp:
; Line 413
	test	eax, eax
	jne	SHORT $LN1@der_cmp
; Line 415
	sub	edi, ebx
	mov	eax, edi
$LN1@der_cmp:
; Line 416
	pop	edi
	pop	esi
	pop	ebx
	ret	0
_der_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_item_flags_i2d
_TEXT	SEGMENT
_val$ = 8						; size = 4
_p$1 = 12						; size = 4
_out$ = 12						; size = 4
_it$ = 16						; size = 4
_flags$ = 20						; size = 4
_asn1_item_flags_i2d PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 102
	push	esi
; Line 103
	mov	esi, DWORD PTR _out$[esp]
	test	esi, esi
	je	SHORT $LN2@asn1_item_
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN2@asn1_item_
; Line 106
	push	edi
	push	DWORD PTR _flags$[esp+4]
	lea	eax, DWORD PTR _val$[esp+8]
	push	-1
	push	DWORD PTR _it$[esp+12]
	push	0
	push	eax
	call	_ASN1_item_ex_i2d
	mov	edi, eax
	add	esp, 20					; 00000014H
; Line 107
	test	edi, edi
	jle	SHORT $LN6@asn1_item_
; Line 109
	push	ebx
	push	109					; 0000006dH
	push	OFFSET ??_C@_0BJ@BDIDBFLG@?4?2crypto?2asn1?2tasn_enc?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 110
	test	ebx, ebx
	jne	SHORT $LN4@asn1_item_
; Line 111
	or	eax, -1
	pop	ebx
$LN6@asn1_item_:
	pop	edi
	pop	esi
; Line 119
	ret	0
$LN4@asn1_item_:
; Line 113
	push	DWORD PTR _flags$[esp+8]
	lea	eax, DWORD PTR _p$1[esp+12]
	mov	DWORD PTR _p$1[esp+12], ebx
	push	-1
	push	DWORD PTR _it$[esp+16]
	push	eax
	lea	eax, DWORD PTR _val$[esp+24]
	push	eax
	call	_ASN1_item_ex_i2d
	add	esp, 20					; 00000014H
; Line 114
	mov	DWORD PTR [esi], ebx
; Line 115
	mov	eax, edi
	pop	ebx
	pop	edi
	pop	esi
; Line 119
	ret	0
$LN2@asn1_item_:
; Line 118
	push	DWORD PTR _flags$[esp]
	lea	eax, DWORD PTR _val$[esp+4]
	push	-1
	push	DWORD PTR _it$[esp+8]
	push	esi
	push	eax
	call	_ASN1_item_ex_i2d
	add	esp, 20					; 00000014H
	pop	esi
; Line 119
	ret	0
_asn1_item_flags_i2d ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_template_ex_i2d
_TEXT	SEGMENT
_tclass$1$ = -40					; size = 4
_ret$1$ = -36						; size = 4
_ttag$1$ = -36						; size = 4
_sktag$1$ = -32						; size = 4
_skcontlen$1$ = -28					; size = 4
_isset$1$ = -24						; size = 4
_sk$1$ = -20						; size = 4
_skaclass$1$ = -16					; size = 4
_ndef$1$ = -12						; size = 4
_ret$2$ = -8						; size = 4
_skitem$1 = -8						; size = 4
_i$2$ = -4						; size = 4
_sklen$1$ = -4						; size = 4
_flags$1$ = -4						; size = 4
_pval$ = 8						; size = 4
_out$ = 12						; size = 4
_tt$ = 16						; size = 4
_tag$ = 20						; size = 4
_iclass$ = 24						; size = 4
_asn1_template_ex_i2d PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 264
	mov	eax, 40					; 00000028H
	call	__chkstk
; Line 266
	mov	ecx, DWORD PTR _tt$[esp+36]
	push	ebx
	push	ebp
	push	esi
	mov	ebx, DWORD PTR [ecx]
	mov	DWORD PTR _flags$1$[esp+52], ebx
	push	edi
; Line 274
	test	bl, 24					; 00000018H
	je	SHORT $LN5@asn1_templ
; Line 276
	cmp	DWORD PTR _tag$[esp+52], -1
	je	SHORT $LN7@asn1_templ
; Line 278
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 397
	add	esp, 40					; 00000028H
	ret	0
$LN7@asn1_templ:
; Line 280
	mov	ebp, DWORD PTR [ecx+4]
; Line 281
	mov	esi, ebx
	and	esi, 192				; 000000c0H
	jmp	SHORT $LN108@asn1_templ
$LN5@asn1_templ:
; Line 282
	mov	ebp, DWORD PTR _tag$[esp+52]
	mov	DWORD PTR _ttag$1$[esp+56], ebp
	cmp	ebp, -1
	je	SHORT $LN8@asn1_templ
; Line 285
	mov	edi, DWORD PTR _iclass$[esp+52]
	mov	esi, edi
	and	esi, 192				; 000000c0H
; Line 286
	jmp	SHORT $LN109@asn1_templ
$LN8@asn1_templ:
; Line 287
	or	ebp, -1
; Line 288
	xor	esi, esi
$LN108@asn1_templ:
; Line 287
	mov	edi, DWORD PTR _iclass$[esp+52]
	mov	DWORD PTR _ttag$1$[esp+56], ebp
$LN109@asn1_templ:
; Line 293
	and	edi, -193				; ffffff3fH
	mov	DWORD PTR _tclass$1$[esp+56], esi
	mov	eax, ebx
	mov	DWORD PTR _iclass$[esp+52], edi
	and	eax, edi
	bt	eax, 11					; 0000000bH
; Line 301
	mov	eax, 0
	setb	al
	inc	eax
	mov	DWORD PTR _ndef$1$[esp+56], eax
; Line 306
	test	bl, 6
	je	$LN12@asn1_templ
; Line 308
	mov	eax, DWORD PTR _pval$[esp+52]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _sk$1$[esp+56], ecx
; Line 313
	test	ecx, ecx
	jne	SHORT $LN13@asn1_templ
$LN111@asn1_templ:
	pop	edi
	pop	esi
	pop	ebp
; Line 314
	xor	eax, eax
	pop	ebx
; Line 397
	add	esp, 40					; 00000028H
	ret	0
$LN13@asn1_templ:
; Line 316
	test	bl, 2
	je	SHORT $LN14@asn1_templ
; Line 317
	mov	edx, 1
	mov	DWORD PTR _isset$1$[esp+56], edx
; Line 319
	test	bl, 4
	je	SHORT $LN15@asn1_templ
; Line 320
	mov	edx, 2
; Line 321
	jmp	SHORT $LN110@asn1_templ
$LN14@asn1_templ:
; Line 322
	xor	edx, edx
$LN110@asn1_templ:
	mov	DWORD PTR _isset$1$[esp+56], edx
$LN15@asn1_templ:
; Line 328
	cmp	ebp, -1
	je	SHORT $LN17@asn1_templ
	test	bl, 16					; 00000010H
	jne	SHORT $LN17@asn1_templ
; Line 329
	mov	DWORD PTR _sktag$1$[esp+56], ebp
; Line 330
	mov	DWORD PTR _skaclass$1$[esp+56], esi
; Line 331
	jmp	SHORT $LN19@asn1_templ
$LN17@asn1_templ:
; Line 333
	xor	eax, eax
	mov	DWORD PTR _skaclass$1$[esp+56], 0
	test	edx, edx
	setne	al
	add	eax, 16					; 00000010H
	mov	DWORD PTR _sktag$1$[esp+56], eax
$LN19@asn1_templ:
; Line 341
	push	ecx
	mov	DWORD PTR _skcontlen$1$[esp+60], 0
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@asn1_templ
	mov	ebx, DWORD PTR _tt$[esp+52]
	xor	esi, esi
	xor	ebp, ebp
	npad	1
$LL4@asn1_templ:
; Line 342
	push	esi
	push	DWORD PTR _sk$1$[esp+60]
	call	_sk_value
	add	esp, 8
	mov	DWORD PTR _skitem$1[esp+56], eax
; Line 343
	mov	eax, DWORD PTR [ebx+16]
	push	edi
	push	-1
	call	eax
	push	eax
	lea	eax, DWORD PTR _skitem$1[esp+68]
	push	0
	push	eax
	call	_ASN1_item_ex_i2d
	push	DWORD PTR _sk$1$[esp+76]
	add	ebp, eax
	inc	esi
	call	_sk_num
	add	esp, 24					; 00000018H
	cmp	esi, eax
	jl	SHORT $LL4@asn1_templ
	mov	ebx, DWORD PTR _flags$1$[esp+56]
	mov	esi, DWORD PTR _tclass$1$[esp+56]
	mov	DWORD PTR _skcontlen$1$[esp+56], ebp
	mov	ebp, DWORD PTR _ttag$1$[esp+56]
$LN3@asn1_templ:
; Line 347
	push	DWORD PTR _sktag$1$[esp+56]
	mov	edi, DWORD PTR _ndef$1$[esp+60]
	push	DWORD PTR _skcontlen$1$[esp+60]
	push	edi
	call	_ASN1_object_size
	add	esp, 12					; 0000000cH
	mov	edx, eax
	mov	DWORD PTR _sklen$1$[esp+56], edx
; Line 349
	and	ebx, 16					; 00000010H
	je	SHORT $LN21@asn1_templ
; Line 350
	push	ebp
	push	edx
	push	edi
	call	_ASN1_object_size
	mov	edx, DWORD PTR _sklen$1$[esp+68]
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$1$[esp+56], ecx
	jmp	SHORT $LN22@asn1_templ
$LN21@asn1_templ:
; Line 352
	mov	ecx, edx
	mov	DWORD PTR _ret$1$[esp+56], edx
$LN22@asn1_templ:
; Line 354
	mov	eax, DWORD PTR _out$[esp+52]
	test	eax, eax
	jne	SHORT $LN23@asn1_templ
; Line 355
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ecx
	pop	ebx
; Line 397
	add	esp, 40					; 00000028H
	ret	0
$LN23@asn1_templ:
; Line 359
	test	ebx, ebx
	je	SHORT $LN24@asn1_templ
; Line 360
	push	esi
	push	ebp
	push	edx
	push	edi
	push	eax
	call	_ASN1_put_object
	mov	eax, DWORD PTR _out$[esp+72]
	add	esp, 20					; 00000014H
$LN24@asn1_templ:
; Line 362
	push	DWORD PTR _skaclass$1$[esp+56]
	mov	ebp, DWORD PTR _skcontlen$1$[esp+60]
	push	DWORD PTR _sktag$1$[esp+60]
	push	ebp
	push	edi
	push	eax
	call	_ASN1_put_object
; Line 364
	mov	eax, DWORD PTR _tt$[esp+72]
	add	esp, 20					; 00000014H
	push	DWORD PTR _iclass$[esp+52]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR _isset$1$[esp+60]
	call	eax
	mov	esi, DWORD PTR _out$[esp+60]
	push	eax
	push	ebp
	push	esi
	push	DWORD PTR _sk$1$[esp+76]
	call	_asn1_set_seq_out
	add	esp, 24					; 00000018H
; Line 366
	cmp	edi, 2
	jne	SHORT $LN26@asn1_templ
; Line 367
	push	esi
	call	_ASN1_put_eoc
	add	esp, 4
; Line 368
	test	ebx, ebx
	je	SHORT $LN26@asn1_templ
; Line 369
	push	esi
	call	_ASN1_put_eoc
	add	esp, 4
$LN26@asn1_templ:
; Line 372
	mov	eax, DWORD PTR _ret$1$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 397
	add	esp, 40					; 00000028H
	ret	0
$LN12@asn1_templ:
; Line 378
	mov	eax, DWORD PTR [ecx+16]
	test	bl, 16					; 00000010H
	je	$LN27@asn1_templ
	push	edi
	push	-1
	call	eax
	push	eax
	push	0
	push	DWORD PTR _pval$[esp+68]
	call	_ASN1_item_ex_i2d
	add	esp, 20					; 00000014H
	mov	DWORD PTR _i$2$[esp+56], eax
; Line 379
	test	eax, eax
	je	$LN111@asn1_templ
; Line 382
	mov	edi, DWORD PTR _ndef$1$[esp+56]
	push	ebp
	push	eax
	push	edi
	call	_ASN1_object_size
; Line 383
	mov	ebx, DWORD PTR _out$[esp+64]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$2$[esp+56], eax
	test	ebx, ebx
	je	SHORT $LN30@asn1_templ
; Line 385
	push	esi
	push	ebp
	push	DWORD PTR _i$2$[esp+64]
	push	edi
	push	ebx
	call	_ASN1_put_object
; Line 386
	mov	eax, DWORD PTR _tt$[esp+72]
	add	esp, 20					; 00000014H
	push	DWORD PTR _iclass$[esp+52]
	mov	eax, DWORD PTR [eax+16]
	push	-1
	call	eax
	push	eax
	push	ebx
	push	DWORD PTR _pval$[esp+68]
	call	_ASN1_item_ex_i2d
	add	esp, 20					; 00000014H
; Line 387
	cmp	edi, 2
	jne	SHORT $LN30@asn1_templ
; Line 388
	push	ebx
	call	_ASN1_put_eoc
	add	esp, 4
$LN30@asn1_templ:
; Line 390
	mov	eax, DWORD PTR _ret$2$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 397
	add	esp, 40					; 00000028H
	ret	0
$LN27@asn1_templ:
; Line 394
	or	esi, edi
	push	esi
	push	ebp
	call	eax
	push	eax
	push	DWORD PTR _out$[esp+64]
	push	DWORD PTR _pval$[esp+68]
	call	_ASN1_item_ex_i2d
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 397
	add	esp, 40					; 00000028H
	ret	0
_asn1_template_ex_i2d ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_set_seq_out
_TEXT	SEGMENT
_p$ = -12						; size = 4
_skitem$ = -8						; size = 4
_tmpdat$1$ = -4						; size = 4
_sk$ = 8						; size = 4
_out$ = 12						; size = 4
_skcontlen$ = 16					; size = 4
_item$ = 20						; size = 4
_do_sort$ = 24						; size = 4
_iclass$ = 28						; size = 4
_asn1_set_seq_out PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 423
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 428
	cmp	DWORD PTR _do_sort$[esp+8], 0
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR _sk$[esp+20]
	push	edi
	mov	DWORD PTR _p$[esp+28], 0
	je	$LN136@asn1_set_s
; Line 430
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	eax, 2
	jl	$LN136@asn1_set_s
; Line 433
	push	434					; 000001b2H
	push	OFFSET ??_C@_0BJ@BDIDBFLG@?4?2crypto?2asn1?2tasn_enc?4c?$AA@
	push	esi
	call	_sk_num
	add	esp, 4
	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2
	push	eax
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 435
	test	ebp, ebp
	je	SHORT $LN137@asn1_set_s
; Line 437
	push	437					; 000001b5H
	push	OFFSET ??_C@_0BJ@BDIDBFLG@?4?2crypto?2asn1?2tasn_enc?4c?$AA@
	push	DWORD PTR _skcontlen$[esp+32]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _tmpdat$1$[esp+28], eax
; Line 438
	test	eax, eax
	jne	SHORT $LN19@asn1_set_s
; Line 439
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN137@asn1_set_s:
; Line 440
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 479
	add	esp, 12					; 0000000cH
	ret	0
$LN19@asn1_set_s:
; Line 455
	push	esi
	mov	DWORD PTR _p$[esp+32], eax
	xor	ebx, ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN6@asn1_set_s
; Line 452
	lea	edi, DWORD PTR [ebp+8]
$LL7@asn1_set_s:
; Line 456
	push	ebx
	push	esi
	call	_sk_value
; Line 458
	push	DWORD PTR _iclass$[esp+32]
	mov	DWORD PTR _skitem$[esp+40], eax
	mov	eax, DWORD PTR _p$[esp+40]
	push	-1
	push	DWORD PTR _item$[esp+40]
	mov	DWORD PTR [edi-8], eax
	lea	eax, DWORD PTR _p$[esp+48]
	push	eax
	lea	eax, DWORD PTR _skitem$[esp+52]
	push	eax
	call	_ASN1_item_ex_i2d
	mov	DWORD PTR [edi-4], eax
	lea	edi, DWORD PTR [edi+12]
; Line 459
	mov	eax, DWORD PTR _skitem$[esp+56]
	inc	ebx
	mov	DWORD PTR [edi-12], eax
	push	esi
	call	_sk_num
	add	esp, 32					; 00000020H
	cmp	ebx, eax
	jl	SHORT $LL7@asn1_set_s
$LN6@asn1_set_s:
; Line 463
	push	OFFSET _der_cmp
	push	12					; 0000000cH
	push	esi
	call	_sk_num
	add	esp, 4
	push	eax
	push	ebp
	call	DWORD PTR __imp__qsort
; Line 465
	mov	eax, DWORD PTR _out$[esp+40]
; Line 466
	xor	ebx, ebx
	push	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _p$[esp+48], eax
	call	_sk_num
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN9@asn1_set_s
; Line 463
	lea	edi, DWORD PTR [ebp+4]
$LL10@asn1_set_s:
; Line 467
	push	DWORD PTR [edi]
	push	DWORD PTR [edi-4]
	push	DWORD PTR _p$[esp+36]
	call	_memcpy
; Line 468
	mov	eax, DWORD PTR [edi]
	lea	edi, DWORD PTR [edi+12]
	add	DWORD PTR _p$[esp+40], eax
	inc	ebx
	push	esi
	call	_sk_num
	add	esp, 16					; 00000010H
	cmp	ebx, eax
	jl	SHORT $LL10@asn1_set_s
$LN9@asn1_set_s:
; Line 472
	cmp	DWORD PTR _do_sort$[esp+24], 2
	mov	ecx, DWORD PTR _out$[esp+24]
	mov	eax, DWORD PTR _p$[esp+28]
	mov	DWORD PTR [ecx], eax
	jne	SHORT $LN12@asn1_set_s
; Line 473
	push	esi
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN12@asn1_set_s
	lea	ebx, DWORD PTR [ebp+8]
$LL13@asn1_set_s:
; Line 474
	push	DWORD PTR [ebx]
	push	edi
	push	esi
	call	_sk_set
	push	esi
	inc	edi
	lea	ebx, DWORD PTR [ebx+12]
	call	_sk_num
	add	esp, 16					; 00000010H
	cmp	edi, eax
	jl	SHORT $LL13@asn1_set_s
$LN12@asn1_set_s:
; Line 476
	push	ebp
	call	_CRYPTO_free
; Line 477
	push	DWORD PTR _tmpdat$1$[esp+32]
	call	_CRYPTO_free
	add	esp, 8
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 479
	add	esp, 12					; 0000000cH
	ret	0
$LN136@asn1_set_s:
; Line 446
	push	esi
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@asn1_set_s
	mov	ebx, DWORD PTR _iclass$[esp+24]
	mov	ebp, DWORD PTR _item$[esp+24]
$LL4@asn1_set_s:
; Line 447
	push	edi
	push	esi
	call	_sk_value
; Line 448
	push	ebx
	push	-1
	push	ebp
	push	DWORD PTR _out$[esp+44]
	mov	DWORD PTR _skitem$[esp+52], eax
	lea	eax, DWORD PTR _skitem$[esp+52]
	push	eax
	call	_ASN1_item_ex_i2d
	push	esi
	inc	edi
	call	_sk_num
	add	esp, 32					; 00000020H
	cmp	edi, eax
	jl	SHORT $LL4@asn1_set_s
$LN3@asn1_set_s:
	pop	edi
	pop	esi
	pop	ebp
; Line 450
	mov	eax, 1
	pop	ebx
; Line 479
	add	esp, 12					; 0000000cH
	ret	0
_asn1_set_seq_out ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_i2d_ex_primitive
_TEXT	SEGMENT
_ndef$1$ = -8						; size = 4
_utype$ = -4						; size = 4
_pval$ = 8						; size = 4
_out$ = 12						; size = 4
_it$ = 16						; size = 4
_tag$ = 20						; size = 4
_aclass$ = 24						; size = 4
_asn1_i2d_ex_primitive PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 483
	mov	eax, 8
	call	__chkstk
; Line 489
	mov	ecx, DWORD PTR _it$[esp+4]
	push	ebp
	push	esi
; Line 495
	push	ecx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _utype$[esp+20], eax
	lea	eax, DWORD PTR _utype$[esp+20]
	push	eax
	push	0
	push	DWORD PTR _pval$[esp+24]
	mov	DWORD PTR _ndef$1$[esp+32], 0
	call	_asn1_ex_i2c
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 502
	mov	eax, DWORD PTR _utype$[esp+16]
	cmp	eax, 16					; 00000010H
	je	SHORT $LN4@asn1_i2d_e
	cmp	eax, 17					; 00000011H
	je	SHORT $LN4@asn1_i2d_e
	cmp	eax, -3					; fffffffdH
	je	SHORT $LN4@asn1_i2d_e
; Line 506
	mov	ebp, 1
	jmp	SHORT $LN3@asn1_i2d_e
$LN4@asn1_i2d_e:
; Line 504
	xor	ebp, ebp
$LN3@asn1_i2d_e:
; Line 510
	cmp	esi, -1
	jne	SHORT $LN5@asn1_i2d_e
; Line 511
	pop	esi
	xor	eax, eax
	pop	ebp
; Line 537
	add	esp, 8
	ret	0
$LN5@asn1_i2d_e:
; Line 514
	cmp	esi, -2					; fffffffeH
	jne	SHORT $LN15@asn1_i2d_e
; Line 515
	mov	ecx, 2
; Line 516
	xor	esi, esi
	mov	DWORD PTR _ndef$1$[esp+16], ecx
	jmp	SHORT $LN6@asn1_i2d_e
$LN15@asn1_i2d_e:
	xor	ecx, ecx
$LN6@asn1_i2d_e:
	push	ebx
; Line 520
	mov	ebx, DWORD PTR _tag$[esp+16]
	cmp	ebx, -1
	push	edi
; Line 524
	mov	edi, DWORD PTR _out$[esp+20]
	cmove	ebx, eax
	test	edi, edi
	je	SHORT $LN14@asn1_i2d_e
; Line 525
	test	ebp, ebp
	je	SHORT $LN9@asn1_i2d_e
; Line 526
	push	DWORD PTR _aclass$[esp+20]
	push	ebx
	push	esi
	push	ecx
	push	edi
	call	_ASN1_put_object
	add	esp, 20					; 00000014H
$LN9@asn1_i2d_e:
; Line 527
	push	DWORD PTR _it$[esp+20]
	lea	eax, DWORD PTR _utype$[esp+28]
	push	eax
	push	DWORD PTR [edi]
	push	DWORD PTR _pval$[esp+32]
	call	_asn1_ex_i2c
; Line 528
	mov	eax, DWORD PTR _ndef$1$[esp+40]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN10@asn1_i2d_e
; Line 529
	push	edi
	call	_ASN1_put_eoc
	add	esp, 4
$LN14@asn1_i2d_e:
	mov	eax, DWORD PTR _ndef$1$[esp+24]
$LN11@asn1_i2d_e:
; Line 534
	test	ebp, ebp
	je	SHORT $LN12@asn1_i2d_e
; Line 535
	push	ebx
	push	esi
	push	eax
	call	_ASN1_object_size
	add	esp, 12					; 0000000cH
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
; Line 537
	add	esp, 8
	ret	0
$LN10@asn1_i2d_e:
; Line 531
	add	DWORD PTR [edi], esi
	jmp	SHORT $LN11@asn1_i2d_e
$LN12@asn1_i2d_e:
	pop	edi
	pop	ebx
; Line 536
	mov	eax, esi
	pop	esi
	pop	ebp
; Line 537
	add	esp, 8
	ret	0
_asn1_i2d_ex_primitive ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_ex_i2c
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_cout$ = 12						; size = 4
_putype$ = 16						; size = 4
_c$ = 20						; size = 1
_it$ = 20						; size = 4
_asn1_ex_i2c PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 552
	mov	edx, DWORD PTR _it$[esp-4]
	mov	eax, DWORD PTR [edx+16]
; Line 553
	test	eax, eax
	je	SHORT $LN4@asn1_ex_i2
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	je	SHORT $LN4@asn1_ex_i2
; Line 554
	push	edx
	push	DWORD PTR _putype$[esp]
	push	DWORD PTR _cout$[esp+4]
	push	DWORD PTR _pval$[esp+8]
	call	eax
	add	esp, 16					; 00000010H
; Line 659
	ret	0
$LN4@asn1_ex_i2:
; Line 558
	mov	al, BYTE PTR [edx]
	mov	ecx, DWORD PTR _pval$[esp-4]
	test	al, al
	jne	SHORT $LN6@asn1_ex_i2
	cmp	DWORD PTR [edx+4], 1
	je	SHORT $LN7@asn1_ex_i2
$LN6@asn1_ex_i2:
; Line 559
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN7@asn1_ex_i2
; Line 560
	or	eax, -1
; Line 659
	ret	0
$LN7@asn1_ex_i2:
	push	esi
; Line 563
	cmp	al, 5
	jne	SHORT $LN8@asn1_ex_i2
; Line 566
	mov	eax, DWORD PTR [ecx]
	mov	esi, DWORD PTR [eax+4]
; Line 567
	mov	eax, DWORD PTR _putype$[esp]
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN11@asn1_ex_i2
$LN8@asn1_ex_i2:
; Line 568
	cmp	DWORD PTR [edx+4], -4			; fffffffcH
; Line 573
	mov	eax, DWORD PTR _putype$[esp]
	jne	SHORT $LN10@asn1_ex_i2
; Line 572
	mov	ecx, DWORD PTR [ecx]
	mov	esi, DWORD PTR [ecx]
; Line 574
	add	ecx, 4
	mov	DWORD PTR [eax], esi
; Line 575
	jmp	SHORT $LN11@asn1_ex_i2
$LN10@asn1_ex_i2:
; Line 576
	mov	esi, DWORD PTR [eax]
$LN11@asn1_ex_i2:
; Line 578
	dec	esi
	cmp	esi, 9
	ja	$LN21@asn1_ex_i2
	jmp	DWORD PTR $LN30@asn1_ex_i2[esi*4]
$LN12@asn1_ex_i2:
; Line 580
	mov	eax, DWORD PTR [ecx]
; Line 581
	mov	ecx, DWORD PTR [eax+16]
; Line 582
	mov	esi, DWORD PTR [eax+12]
; Line 583
	jmp	$LN2@asn1_ex_i2
$LN13@asn1_ex_i2:
; Line 586
	xor	ecx, ecx
; Line 587
	xor	esi, esi
; Line 588
	jmp	$LN2@asn1_ex_i2
$LN14@asn1_ex_i2:
; Line 592
	mov	eax, DWORD PTR [ecx]
	cmp	eax, -1
	je	SHORT $LN28@asn1_ex_i2
; Line 594
	cmp	DWORD PTR [edx+4], -4			; fffffffcH
	je	SHORT $LN18@asn1_ex_i2
; Line 598
	test	eax, eax
	je	SHORT $LN26@asn1_ex_i2
	cmp	DWORD PTR [edx+20], 0
	jle	SHORT $LN18@asn1_ex_i2
$LN28@asn1_ex_i2:
; Line 599
	or	eax, -1
	pop	esi
; Line 659
	ret	0
$LN26@asn1_ex_i2:
; Line 600
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN28@asn1_ex_i2
$LN18@asn1_ex_i2:
; Line 603
	mov	BYTE PTR _c$[esp], al
; Line 604
	lea	ecx, DWORD PTR _c$[esp]
; Line 605
	mov	esi, 1
; Line 606
	jmp	SHORT $LN2@asn1_ex_i2
$LN19@asn1_ex_i2:
; Line 609
	xor	edx, edx
	lea	eax, DWORD PTR _cout$[esp]
	cmp	DWORD PTR _cout$[esp], edx
	cmove	eax, edx
	push	eax
	push	DWORD PTR [ecx]
	call	_i2c_ASN1_BIT_STRING
	add	esp, 8
	pop	esi
; Line 659
	ret	0
$LN20@asn1_ex_i2:
; Line 618
	xor	edx, edx
	lea	eax, DWORD PTR _cout$[esp]
	cmp	DWORD PTR _cout$[esp], edx
	cmove	eax, edx
	push	eax
	push	DWORD PTR [ecx]
	call	_i2c_ASN1_INTEGER
	add	esp, 8
	pop	esi
; Line 659
	ret	0
$LN21@asn1_ex_i2:
; Line 642
	cmp	DWORD PTR [edx+20], 2048		; 00000800H
	mov	esi, DWORD PTR [ecx]
	jne	SHORT $LN22@asn1_ex_i2
	test	BYTE PTR [esi+12], 16			; 00000010H
	je	SHORT $LN22@asn1_ex_i2
; Line 643
	mov	eax, DWORD PTR _cout$[esp]
	test	eax, eax
	je	SHORT $LN23@asn1_ex_i2
; Line 644
	mov	DWORD PTR [esi+8], eax
; Line 645
	mov	DWORD PTR [esi], 0
$LN23@asn1_ex_i2:
; Line 648
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 659
	ret	0
$LN22@asn1_ex_i2:
; Line 650
	mov	ecx, DWORD PTR [esi+8]
; Line 651
	mov	esi, DWORD PTR [esi]
$LN2@asn1_ex_i2:
; Line 656
	mov	eax, DWORD PTR _cout$[esp]
	test	eax, eax
	je	SHORT $LN24@asn1_ex_i2
	test	esi, esi
	je	SHORT $LN24@asn1_ex_i2
; Line 657
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN24@asn1_ex_i2:
; Line 658
	mov	eax, esi
	pop	esi
; Line 659
	ret	0
$LN30@asn1_ex_i2:
	DD	$LN14@asn1_ex_i2
	DD	$LN20@asn1_ex_i2
	DD	$LN19@asn1_ex_i2
	DD	$LN21@asn1_ex_i2
	DD	$LN13@asn1_ex_i2
	DD	$LN12@asn1_ex_i2
	DD	$LN21@asn1_ex_i2
	DD	$LN21@asn1_ex_i2
	DD	$LN21@asn1_ex_i2
	DD	$LN20@asn1_ex_i2
_asn1_ex_i2c ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_template_i2d
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_out$ = 12						; size = 4
_tt$ = 16						; size = 4
_ASN1_template_i2d PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 259
	push	0
	push	-1
	push	DWORD PTR _tt$[esp+4]
	push	DWORD PTR _out$[esp+8]
	push	DWORD PTR _pval$[esp+12]
	call	_asn1_template_ex_i2d
	add	esp, 20					; 00000014H
; Line 260
	ret	0
_ASN1_template_i2d ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_ex_i2d
_TEXT	SEGMENT
_aclass$1$ = -24					; size = 4
_ndef$1$ = -20						; size = 4
_tag$2$ = -16						; size = 4
_i$5$ = -12						; size = 4
_tt$1$ = -12						; size = 4
_i$4$ = -8						; size = 4
_tt$2$ = -8						; size = 4
_seqlen$1$ = -4						; size = 4
_pval$ = 8						; size = 4
_out$ = 12						; size = 4
_seqcontlen$ = 16					; size = 4
_it$ = 16						; size = 4
_tag$ = 20						; size = 4
_aclass$ = 24						; size = 4
_ASN1_item_ex_i2d PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 128
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	ebx
	push	esi
; Line 134
	mov	esi, DWORD PTR _it$[esp+28]
	mov	eax, 1
; Line 135
	xor	ebx, ebx
	mov	DWORD PTR _ndef$1$[esp+32], eax
	push	edi
; Line 137
	mov	edi, DWORD PTR _pval$[esp+32]
	mov	dl, BYTE PTR [esi]
	mov	ecx, DWORD PTR [esi+16]
	test	dl, dl
	je	SHORT $LN10@ASN1_item_
	cmp	DWORD PTR [edi], ebx
	jne	SHORT $LN10@ASN1_item_
; Line 138
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN10@ASN1_item_:
; Line 140
	test	ecx, ecx
	je	SHORT $LN11@ASN1_item_
	mov	eax, DWORD PTR [ecx+16]
	test	eax, eax
	cmovne	ebx, eax
	mov	eax, 1
$LN11@ASN1_item_:
; Line 143
	movsx	edx, dl
	push	ebp
	cmp	edx, 6
	ja	$LN35@ASN1_item_
	mov	ebp, DWORD PTR _aclass$[esp+36]
	mov	DWORD PTR _aclass$1$[esp+40], ebp
	jmp	DWORD PTR $LN53@ASN1_item_[edx*4]
$LN12@ASN1_item_:
; Line 147
	push	DWORD PTR _aclass$[esp+36]
	mov	eax, DWORD PTR [esi+8]
	push	DWORD PTR _tag$[esp+40]
	test	eax, eax
	je	SHORT $LN13@ASN1_item_
	push	eax
	push	DWORD PTR _out$[esp+48]
	push	edi
	call	_asn1_template_ex_i2d
	add	esp, 20					; 00000014H
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN14@ASN1_item_:
; Line 153
	push	DWORD PTR _aclass$[esp+36]
	push	-1
$LN13@ASN1_item_:
	push	esi
	push	DWORD PTR _out$[esp+48]
	push	edi
	call	_asn1_i2d_ex_primitive
	add	esp, 20					; 00000014H
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN15@ASN1_item_:
; Line 156
	test	ebx, ebx
	je	SHORT $LN16@ASN1_item_
	push	0
	push	esi
	push	edi
	push	6
	call	ebx
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN35@ASN1_item_
$LN16@ASN1_item_:
; Line 158
	push	esi
	push	edi
	call	_asn1_get_choice_selector
	add	esp, 8
; Line 159
	test	eax, eax
	js	SHORT $LN17@ASN1_item_
	cmp	eax, DWORD PTR [esi+12]
	jge	SHORT $LN17@ASN1_item_
; Line 162
	lea	ecx, DWORD PTR [eax+eax*4]
	mov	eax, DWORD PTR [esi+8]
	lea	esi, DWORD PTR [eax+ecx*4]
; Line 163
	push	esi
	push	edi
	call	_asn1_get_field_ptr
; Line 164
	push	DWORD PTR _aclass$[esp+44]
	push	-1
	push	esi
	push	DWORD PTR _out$[esp+56]
	push	eax
	call	_asn1_template_ex_i2d
	add	esp, 28					; 0000001cH
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN17@ASN1_item_:
; Line 167
	test	ebx, ebx
	je	SHORT $LN35@ASN1_item_
	push	0
	push	esi
	push	edi
	push	7
	call	ebx
	add	esp, 16					; 00000010H
$LN35@ASN1_item_:
; Line 250
	xor	eax, eax
$LN50@ASN1_item_:
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN19@ASN1_item_:
; Line 174
	push	DWORD PTR _aclass$[esp+36]
	mov	eax, DWORD PTR [ecx+20]
	push	DWORD PTR _tag$[esp+40]
	push	esi
	push	DWORD PTR _out$[esp+48]
	push	edi
	call	eax
	add	esp, 20					; 00000014H
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN20@ASN1_item_:
; Line 179
	mov	esi, DWORD PTR _out$[esp+36]
	test	esi, esi
	je	SHORT $LN48@ASN1_item_
; Line 180
	mov	ebx, DWORD PTR [esi]
	jmp	SHORT $LN21@ASN1_item_
$LN48@ASN1_item_:
	xor	ebx, ebx
$LN21@ASN1_item_:
; Line 181
	mov	eax, DWORD PTR [ecx+12]
	push	esi
	push	DWORD PTR [edi]
	call	eax
	add	esp, 8
; Line 186
	test	esi, esi
	je	SHORT $LN50@ASN1_item_
	mov	edx, DWORD PTR _tag$[esp+36]
	cmp	edx, -1
	je	SHORT $LN50@ASN1_item_
; Line 187
	mov	cl, BYTE PTR [ebx]
	and	cl, 32					; 00000020H
	or	cl, BYTE PTR _aclass$[esp+36]
	pop	ebp
	pop	edi
	or	cl, dl
	pop	esi
	mov	BYTE PTR [ebx], cl
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN23@ASN1_item_:
; Line 192
	test	ebp, 2048				; 00000800H
	mov	ecx, 2
	cmovne	eax, ecx
	mov	DWORD PTR _ndef$1$[esp+40], eax
$LN24@ASN1_item_:
; Line 197
	push	esi
	push	edi
	push	DWORD PTR _out$[esp+44]
	lea	eax, DWORD PTR _seqcontlen$[esp+48]
	push	eax
	call	_asn1_enc_restore
	add	esp, 16					; 00000010H
; Line 199
	test	eax, eax
	js	$LN35@ASN1_item_
; Line 202
	jle	SHORT $LN27@ASN1_item_
; Line 203
	mov	eax, DWORD PTR _seqcontlen$[esp+36]
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN27@ASN1_item_:
; Line 207
	mov	eax, DWORD PTR _tag$[esp+36]
	xor	ecx, ecx
	mov	DWORD PTR _seqcontlen$[esp+36], ecx
	mov	DWORD PTR _tag$2$[esp+40], eax
	cmp	eax, -1
	jne	SHORT $LN28@ASN1_item_
; Line 210
	and	ebp, -193				; ffffff3fH
	mov	DWORD PTR _tag$2$[esp+40], 16		; 00000010H
	mov	DWORD PTR _aclass$1$[esp+40], ebp
$LN28@ASN1_item_:
; Line 213
	test	ebx, ebx
	je	SHORT $LN29@ASN1_item_
	push	0
	push	esi
	push	edi
	push	6
	call	ebx
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN35@ASN1_item_
; Line 214
	mov	ecx, DWORD PTR _seqcontlen$[esp+36]
$LN29@ASN1_item_:
; Line 216
	cmp	DWORD PTR [esi+12], 0
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _i$4$[esp+40], 0
	mov	DWORD PTR _tt$1$[esp+40], eax
	jle	SHORT $LN5@ASN1_item_
$LL6@ASN1_item_:
; Line 219
	push	1
	push	eax
	push	edi
	call	_asn1_do_adb
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 220
	test	ebp, ebp
	je	$LN35@ASN1_item_
; Line 222
	push	ebp
	push	edi
	call	_asn1_get_field_ptr
; Line 224
	push	DWORD PTR _aclass$1$[esp+48]
	push	-1
	push	ebp
	push	0
	push	eax
	call	_asn1_template_ex_i2d
	mov	ecx, DWORD PTR _seqcontlen$[esp+64]
	add	esp, 28					; 0000001cH
	mov	edx, DWORD PTR _i$4$[esp+40]
	add	ecx, eax
	mov	eax, DWORD PTR _tt$1$[esp+40]
	inc	edx
	add	eax, 20					; 00000014H
	mov	DWORD PTR _seqcontlen$[esp+36], ecx
	mov	DWORD PTR _tt$1$[esp+40], eax
	mov	DWORD PTR _i$4$[esp+40], edx
	cmp	edx, DWORD PTR [esi+12]
	jl	SHORT $LL6@ASN1_item_
; Line 237
	mov	ebp, DWORD PTR _aclass$1$[esp+40]
$LN5@ASN1_item_:
; Line 228
	push	DWORD PTR _tag$2$[esp+40]
	push	ecx
	push	DWORD PTR _ndef$1$[esp+48]
	call	_ASN1_object_size
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 229
	mov	eax, DWORD PTR _out$[esp+36]
	mov	DWORD PTR _seqlen$1$[esp+40], ecx
	test	eax, eax
	jne	SHORT $LN31@ASN1_item_
; Line 230
	pop	ebp
	pop	edi
	pop	esi
	mov	eax, ecx
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
$LN31@ASN1_item_:
; Line 232
	push	ebp
	push	DWORD PTR _tag$2$[esp+44]
	push	DWORD PTR _seqcontlen$[esp+44]
	push	DWORD PTR _ndef$1$[esp+52]
	push	eax
	call	_ASN1_put_object
; Line 233
	mov	eax, DWORD PTR [esi+8]
	add	esp, 20					; 00000014H
	cmp	DWORD PTR [esi+12], 0
	mov	DWORD PTR _i$5$[esp+40], 0
	mov	DWORD PTR _tt$2$[esp+40], eax
	jle	SHORT $LN49@ASN1_item_
$LL9@ASN1_item_:
; Line 236
	push	1
	push	eax
	push	edi
	call	_asn1_do_adb
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 237
	test	ebp, ebp
	je	$LN35@ASN1_item_
; Line 239
	push	ebp
	push	edi
	call	_asn1_get_field_ptr
; Line 241
	push	DWORD PTR _aclass$1$[esp+48]
	push	-1
	push	ebp
	mov	ebp, DWORD PTR _out$[esp+56]
	push	ebp
	push	eax
	call	_asn1_template_ex_i2d
	mov	ecx, DWORD PTR _i$5$[esp+68]
	add	esp, 28					; 0000001cH
	mov	eax, DWORD PTR _tt$2$[esp+40]
	inc	ecx
	add	eax, 20					; 00000014H
	mov	DWORD PTR _i$5$[esp+40], ecx
	mov	DWORD PTR _tt$2$[esp+40], eax
	cmp	ecx, DWORD PTR [esi+12]
	jl	SHORT $LL9@ASN1_item_
; Line 237
	jmp	SHORT $LN8@ASN1_item_
$LN49@ASN1_item_:
	mov	ebp, DWORD PTR _out$[esp+36]
$LN8@ASN1_item_:
; Line 243
	cmp	DWORD PTR _ndef$1$[esp+40], 2
	jne	SHORT $LN33@ASN1_item_
; Line 244
	push	ebp
	call	_ASN1_put_eoc
	add	esp, 4
$LN33@ASN1_item_:
; Line 245
	test	ebx, ebx
	je	SHORT $LN34@ASN1_item_
	push	0
	push	esi
	push	edi
	push	7
	call	ebx
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN35@ASN1_item_
$LN34@ASN1_item_:
; Line 247
	mov	eax, DWORD PTR _seqlen$1$[esp+40]
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 254
	add	esp, 24					; 00000018H
	ret	0
	npad	2
$LN53@ASN1_item_:
	DD	$LN12@ASN1_item_
	DD	$LN24@ASN1_item_
	DD	$LN15@ASN1_item_
	DD	$LN20@ASN1_item_
	DD	$LN19@ASN1_item_
	DD	$LN14@ASN1_item_
	DD	$LN23@ASN1_item_
_ASN1_item_ex_i2d ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_ndef_i2d
_TEXT	SEGMENT
_val$ = 8						; size = 4
_out$ = 12						; size = 4
_it$ = 16						; size = 4
_ASN1_item_ndef_i2d PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 85
	push	2048					; 00000800H
	push	DWORD PTR _it$[esp]
	push	DWORD PTR _out$[esp+4]
	push	DWORD PTR _val$[esp+8]
	call	_asn1_item_flags_i2d
	add	esp, 16					; 00000010H
; Line 86
	ret	0
_ASN1_item_ndef_i2d ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_i2d
_TEXT	SEGMENT
_val$ = 8						; size = 4
_out$ = 12						; size = 4
_it$ = 16						; size = 4
_ASN1_item_i2d PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_enc.c
; Line 90
	push	0
	push	DWORD PTR _it$[esp]
	push	DWORD PTR _out$[esp+4]
	push	DWORD PTR _val$[esp+8]
	call	_asn1_item_flags_i2d
	add	esp, 16					; 00000010H
; Line 91
	ret	0
_ASN1_item_i2d ENDP
_TEXT	ENDS
END

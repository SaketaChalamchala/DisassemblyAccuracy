; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03DIMONNDD@ssl?$AA@			; `string'
;	COMDAT ??_C@_03DIMONNDD@ssl?$AA@
CONST	SEGMENT
??_C@_03DIMONNDD@ssl?$AA@ DB 'ssl', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_methods_sslp DD 0207H
	DD	FLAT:??_C@_03DIMONNDD@ssl?$AA@
	DD	FLAT:_ssl_write
	DD	FLAT:_ssl_read
	DD	FLAT:_ssl_puts
	DD	00H
	DD	FLAT:_ssl_ctrl
	DD	FLAT:_ssl_new
	DD	FLAT:_ssl_free
	DD	FLAT:_ssl_callback_ctrl
_DATA	ENDS
PUBLIC	_BIO_f_ssl
PUBLIC	_BIO_new_ssl
PUBLIC	_BIO_new_ssl_connect
PUBLIC	_BIO_new_buffer_ssl_connect
PUBLIC	_BIO_ssl_copy_session_id
PUBLIC	_BIO_ssl_shutdown
PUBLIC	??_C@_0BA@OGOKKKKK@?4?2ssl?2bio_ssl?4c?$AA@	; `string'
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_clear_flags:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_callback_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_find_type:PROC
EXTRN	_BIO_s_connect:PROC
EXTRN	_BIO_f_buffer:PROC
EXTRN	_BIO_copy_next_retry:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__imp___time64:PROC
EXTRN	_SSL_clear:PROC
EXTRN	_SSL_pending:PROC
EXTRN	_SSL_set_bio:PROC
EXTRN	_SSL_get_rbio:PROC
EXTRN	_SSL_copy_session_id:PROC
EXTRN	_SSL_new:PROC
EXTRN	_SSL_free:PROC
EXTRN	_SSL_read:PROC
EXTRN	_SSL_write:PROC
EXTRN	_SSL_get_error:PROC
EXTRN	_SSL_do_handshake:PROC
EXTRN	_SSL_renegotiate:PROC
EXTRN	_SSL_shutdown:PROC
EXTRN	_SSL_set_connect_state:PROC
EXTRN	_SSL_set_accept_state:PROC
EXTRN	_SSL_dup:PROC
EXTRN	_SSL_set_info_callback:PROC
EXTRN	_SSL_get_info_callback:PROC
;	COMDAT ??_C@_0BA@OGOKKKKK@?4?2ssl?2bio_ssl?4c?$AA@
CONST	SEGMENT
??_C@_0BA@OGOKKKKK@?4?2ssl?2bio_ssl?4c?$AA@ DB '.\ssl\bio_ssl.c', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_callback_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_fp$ = 16						; size = 4
_ssl_callback_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 479
	mov	eax, DWORD PTR _b$[esp-4]
; Line 480
	mov	ecx, DWORD PTR _cmd$[esp-4]
; Line 491
	push	DWORD PTR _fp$[esp-4]
	mov	eax, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [eax]
	cmp	ecx, 14					; 0000000eH
	je	SHORT $LN4@ssl_callba
	push	ecx
	push	DWORD PTR [eax+12]
	call	_BIO_callback_ctrl
	add	esp, 12					; 0000000cH
; Line 495
	ret	0
$LN4@ssl_callba:
; Line 487
	push	eax
	call	_SSL_set_info_callback
	add	esp, 8
; Line 494
	mov	eax, 1
; Line 495
	ret	0
_ssl_callback_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_ssl_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 119
	push	esi
; Line 122
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	jne	SHORT $LN2@ssl_free
; Line 123
	xor	eax, eax
	pop	esi
; Line 136
	ret	0
$LN2@ssl_free:
	push	edi
; Line 124
	mov	edi, DWORD PTR [esi+32]
; Line 125
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN3@ssl_free
; Line 126
	push	eax
	call	_SSL_shutdown
	add	esp, 4
$LN3@ssl_free:
; Line 127
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN4@ssl_free
; Line 128
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN5@ssl_free
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN5@ssl_free
; Line 129
	push	eax
	call	_SSL_free
	add	esp, 4
$LN5@ssl_free:
; Line 130
	mov	DWORD PTR [esi+12], 0
; Line 131
	mov	DWORD PTR [esi+20], 0
$LN4@ssl_free:
; Line 133
	mov	eax, DWORD PTR [esi+32]
	pop	edi
	test	eax, eax
	je	SHORT $LN6@ssl_free
; Line 134
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN6@ssl_free:
; Line 135
	mov	eax, 1
	pop	esi
; Line 136
	ret	0
_ssl_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_new
_TEXT	SEGMENT
_bi$ = 8						; size = 4
_ssl_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 106
	push	106					; 0000006aH
	push	OFFSET ??_C@_0BA@OGOKKKKK@?4?2ssl?2bio_ssl?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 107
	test	ecx, ecx
	jne	SHORT $LN2@ssl_new
; Line 108
	push	108					; 0000006cH
	push	OFFSET ??_C@_0BA@OGOKKKKK@?4?2ssl?2bio_ssl?4c?$AA@
	push	65					; 00000041H
	push	118					; 00000076H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 109
	xor	eax, eax
; Line 116
	ret	0
$LN2@ssl_new:
; Line 112
	mov	eax, DWORD PTR _bi$[esp-4]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm0
	mov	DWORD PTR [eax+12], 0
; Line 113
	mov	DWORD PTR [eax+32], ecx
; Line 114
	mov	DWORD PTR [eax+20], 0
; Line 115
	mov	eax, 1
; Line 116
	ret	0
_ssl_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_ctrl
_TEXT	SEGMENT
_bs$1$ = 8						; size = 4
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_num$ = 16						; size = 4
_ptr$ = 20						; size = 4
_ssl_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 288
	push	ebx
	push	ebp
; Line 296
	mov	ebp, DWORD PTR _cmd$[esp+4]
	mov	ebx, 1
	push	esi
	push	edi
	mov	edi, DWORD PTR _b$[esp+12]
	mov	ecx, DWORD PTR [edi+32]
	mov	DWORD PTR _bs$1$[esp+12], ecx
	mov	esi, DWORD PTR [ecx]
	test	esi, esi
	jne	SHORT $LN6@ssl_ctrl
	cmp	ebp, 109				; 0000006dH
	je	SHORT $LN6@ssl_ctrl
$LN65@ssl_ctrl:
	pop	edi
	pop	esi
	pop	ebp
; Line 297
	xor	eax, eax
	pop	ebx
; Line 470
	ret	0
$LN6@ssl_ctrl:
; Line 298
	lea	eax, DWORD PTR [ebp-1]
	cmp	eax, 126				; 0000007eH
	ja	$LN55@ssl_ctrl
	movzx	eax, BYTE PTR $LN59@ssl_ctrl[eax]
	jmp	DWORD PTR $LN67@ssl_ctrl[eax*4]
$LN7@ssl_ctrl:
; Line 300
	push	esi
	call	_SSL_shutdown
; Line 302
	mov	eax, DWORD PTR [esi+8]
	add	esp, 4
	mov	ecx, DWORD PTR [esi+32]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN8@ssl_ctrl
; Line 303
	push	esi
	call	_SSL_set_connect_state
	jmp	SHORT $LN60@ssl_ctrl
$LN8@ssl_ctrl:
; Line 304
	cmp	ecx, DWORD PTR [eax+16]
	jne	SHORT $LN10@ssl_ctrl
; Line 305
	push	esi
	call	_SSL_set_accept_state
$LN60@ssl_ctrl:
	add	esp, 4
$LN10@ssl_ctrl:
; Line 307
	push	esi
	call	_SSL_clear
; Line 309
	mov	eax, DWORD PTR [edi+36]
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN64@ssl_ctrl
; Line 311
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	$LN2@ssl_ctrl
$LN64@ssl_ctrl:
; Line 312
	push	DWORD PTR _ptr$[esp+12]
	push	DWORD PTR _num$[esp+16]
	push	ebp
	push	eax
; Line 466
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN15@ssl_ctrl:
	pop	edi
	pop	esi
; Line 317
	xor	ebx, ebx
	pop	ebp
; Line 469
	mov	eax, ebx
	pop	ebx
; Line 470
	ret	0
$LN16@ssl_ctrl:
; Line 320
	cmp	DWORD PTR _num$[esp+12], 0
; Line 321
	push	esi
	je	SHORT $LN17@ssl_ctrl
	call	_SSL_set_connect_state
	add	esp, 4
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN17@ssl_ctrl:
; Line 323
	call	_SSL_set_accept_state
	add	esp, 4
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN19@ssl_ctrl:
; Line 327
	mov	eax, DWORD PTR _num$[esp+12]
	mov	edx, 5
	mov	ebx, DWORD PTR [ecx+16]
	cmp	eax, 60					; 0000003cH
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	push	0
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 327
	cmovl	eax, edx
; Line 329
	mov	DWORD PTR [ecx+16], eax
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	call	DWORD PTR __imp___time64
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 330
	mov	ecx, DWORD PTR _bs$1$[esp+16]
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	add	esp, 4
	pop	edi
	pop	esi
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 330
	mov	DWORD PTR [ecx+20], eax
; Line 469
	mov	eax, ebx
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN21@ssl_ctrl:
; Line 334
	mov	eax, DWORD PTR _num$[esp+12]
	mov	ebx, DWORD PTR [ecx+8]
	cmp	eax, 512				; 00000200H
	jl	$LN2@ssl_ctrl
; Line 335
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx+8], eax
; Line 469
	mov	eax, ebx
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN23@ssl_ctrl:
; Line 338
	mov	ebx, DWORD PTR [ecx+4]
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN24@ssl_ctrl:
; Line 341
	test	esi, esi
	je	SHORT $LN26@ssl_ctrl
; Line 342
	push	edi
	call	_ssl_free
; Line 343
	push	edi
	call	_ssl_new
	add	esp, 8
	test	eax, eax
	je	$LN65@ssl_ctrl
$LN26@ssl_ctrl:
; Line 346
	mov	eax, DWORD PTR _num$[esp+12]
; Line 348
	mov	ecx, DWORD PTR _ptr$[esp+12]
	mov	DWORD PTR [edi+16], eax
	mov	eax, DWORD PTR [edi+32]
; Line 349
	push	ecx
	mov	DWORD PTR [eax], ecx
	call	_SSL_get_rbio
	mov	esi, eax
	add	esp, 4
; Line 350
	test	esi, esi
	je	SHORT $LN27@ssl_ctrl
; Line 351
	mov	eax, DWORD PTR [edi+36]
	test	eax, eax
	je	SHORT $LN28@ssl_ctrl
; Line 352
	push	eax
	push	esi
	call	_BIO_push
	add	esp, 8
$LN28@ssl_ctrl:
; Line 354
	push	354					; 00000162H
	push	OFFSET ??_C@_0BA@OGOKKKKK@?4?2ssl?2bio_ssl?4c?$AA@
	push	21					; 00000015H
	lea	eax, DWORD PTR [esi+44]
	mov	DWORD PTR [edi+36], esi
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
$LN27@ssl_ctrl:
; Line 356
	mov	DWORD PTR [edi+12], ebx
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN29@ssl_ctrl:
; Line 359
	mov	eax, DWORD PTR _ptr$[esp+12]
	test	eax, eax
	je	$LN15@ssl_ctrl
; Line 361
	pop	edi
	mov	DWORD PTR [eax], esi
; Line 469
	mov	eax, ebx
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN32@ssl_ctrl:
; Line 366
	mov	ebx, DWORD PTR [edi+16]
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN33@ssl_ctrl:
; Line 369
	mov	eax, DWORD PTR _num$[esp+12]
	mov	DWORD PTR [edi+16], eax
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN34@ssl_ctrl:
; Line 372
	push	DWORD PTR _ptr$[esp+12]
	push	DWORD PTR _num$[esp+16]
	push	ebp
	push	DWORD PTR [esi+16]
; Line 466
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN35@ssl_ctrl:
; Line 375
	push	esi
	call	_SSL_pending
	mov	ebx, eax
	add	esp, 4
; Line 376
	test	ebx, ebx
	jne	$LN2@ssl_ctrl
; Line 377
	push	eax
	push	eax
	push	10					; 0000000aH
; Line 466
	push	DWORD PTR [esi+12]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	mov	ebx, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN37@ssl_ctrl:
; Line 380
	push	15					; 0000000fH
	push	edi
	call	_BIO_clear_flags
; Line 381
	push	DWORD PTR _ptr$[esp+20]
	push	DWORD PTR _num$[esp+24]
	push	ebp
	push	DWORD PTR [esi+16]
	call	_BIO_ctrl
; Line 382
	push	edi
	mov	ebx, eax
	call	_BIO_copy_next_retry
	add	esp, 28					; 0000001cH
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN38@ssl_ctrl:
; Line 385
	mov	eax, DWORD PTR [edi+36]
	test	eax, eax
	je	$LN2@ssl_ctrl
	cmp	eax, DWORD PTR [esi+12]
	je	$LN2@ssl_ctrl
; Line 386
	push	eax
	push	eax
	push	esi
	call	_SSL_set_bio
; Line 387
	mov	eax, DWORD PTR [edi+36]
	push	387					; 00000183H
	push	OFFSET ??_C@_0BA@OGOKKKKK@?4?2ssl?2bio_ssl?4c?$AA@
	push	21					; 00000015H
	add	eax, 44					; 0000002cH
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 32					; 00000020H
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN40@ssl_ctrl:
; Line 392
	cmp	edi, DWORD PTR _ptr$[esp+12]
	jne	$LN2@ssl_ctrl
; Line 397
	mov	eax, DWORD PTR [esi+16]
	cmp	DWORD PTR [esi+12], eax
	je	SHORT $LN42@ssl_ctrl
; Line 398
	push	eax
	call	_BIO_free_all
	add	esp, 4
$LN42@ssl_ctrl:
; Line 399
	mov	eax, DWORD PTR [edi+36]
	test	eax, eax
	je	SHORT $LN43@ssl_ctrl
; Line 400
	push	400					; 00000190H
	push	OFFSET ??_C@_0BA@OGOKKKKK@?4?2ssl?2bio_ssl?4c?$AA@
	push	21					; 00000015H
	add	eax, 44					; 0000002cH
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
$LN43@ssl_ctrl:
; Line 401
	pop	edi
	mov	DWORD PTR [esi+16], 0
; Line 469
	mov	eax, ebx
	mov	DWORD PTR [esi+12], 0
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN44@ssl_ctrl:
; Line 406
	push	15					; 0000000fH
	push	edi
	call	_BIO_clear_flags
; Line 409
	push	esi
	mov	DWORD PTR [edi+24], 0
	call	_SSL_do_handshake
	mov	ebx, eax
; Line 411
	push	ebx
	push	esi
	call	_SSL_get_error
	add	eax, -2					; fffffffeH
	add	esp, 20					; 00000014H
	cmp	eax, 5
	ja	$LN2@ssl_ctrl
	jmp	DWORD PTR $LN68@ssl_ctrl[eax*4]
$LN45@ssl_ctrl:
; Line 413
	push	9
	push	edi
	call	_BIO_set_flags
	add	esp, 8
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN46@ssl_ctrl:
; Line 416
	push	10					; 0000000aH
	push	edi
	call	_BIO_set_flags
	add	esp, 8
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN47@ssl_ctrl:
; Line 419
	push	12					; 0000000cH
	push	edi
	call	_BIO_set_flags
; Line 420
	mov	eax, DWORD PTR [edi+36]
	add	esp, 8
	mov	eax, DWORD PTR [eax+24]
	mov	DWORD PTR [edi+24], eax
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN48@ssl_ctrl:
; Line 423
	push	12					; 0000000cH
	push	edi
	call	_BIO_set_flags
	add	esp, 8
; Line 424
	mov	DWORD PTR [edi+24], 1
; Line 469
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN50@ssl_ctrl:
; Line 432
	mov	ebx, DWORD PTR _ptr$[esp+12]
	mov	eax, DWORD PTR [ebx+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN51@ssl_ctrl
; Line 433
	push	eax
	call	_SSL_free
	add	esp, 4
$LN51@ssl_ctrl:
; Line 434
	push	esi
	call	_SSL_dup
	mov	ecx, DWORD PTR [ebx+32]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
; Line 435
	mov	ecx, DWORD PTR [ebx+32]
	mov	eax, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 437
	mov	ecx, DWORD PTR [ebx+32]
	mov	eax, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 438
	mov	ecx, DWORD PTR [ebx+32]
	mov	eax, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], eax
; Line 440
	mov	eax, DWORD PTR [edi+32]
	mov	ecx, DWORD PTR [ebx+32]
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
; Line 441
	mov	eax, DWORD PTR [ebx+32]
	xor	ebx, ebx
	pop	ebp
	cmp	DWORD PTR [eax], ebx
	setne	bl
; Line 469
	mov	eax, ebx
	pop	ebx
; Line 470
	ret	0
$LN54@ssl_ctrl:
; Line 462
	push	esi
	call	_SSL_get_info_callback
	mov	ecx, DWORD PTR _ptr$[esp+16]
	add	esp, 4
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
; Line 469
	mov	eax, ebx
	pop	ebp
	pop	ebx
; Line 470
	ret	0
$LN55@ssl_ctrl:
; Line 466
	push	DWORD PTR _ptr$[esp+12]
	push	DWORD PTR _num$[esp+16]
	push	ebp
	push	DWORD PTR [esi+12]
	call	_BIO_ctrl
	mov	ebx, eax
	add	esp, 16					; 00000010H
$LN2@ssl_ctrl:
; Line 469
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 470
	ret	0
$LN67@ssl_ctrl:
	DD	$LN7@ssl_ctrl
	DD	$LN15@ssl_ctrl
	DD	$LN38@ssl_ctrl
	DD	$LN40@ssl_ctrl
	DD	$LN32@ssl_ctrl
	DD	$LN33@ssl_ctrl
	DD	$LN35@ssl_ctrl
	DD	$LN37@ssl_ctrl
	DD	$LN50@ssl_ctrl
	DD	$LN34@ssl_ctrl
	DD	$LN54@ssl_ctrl
	DD	$LN44@ssl_ctrl
	DD	$LN55@ssl_ctrl
	DD	$LN24@ssl_ctrl
	DD	$LN29@ssl_ctrl
	DD	$LN16@ssl_ctrl
	DD	$LN21@ssl_ctrl
	DD	$LN23@ssl_ctrl
	DD	$LN19@ssl_ctrl
	DD	$LN55@ssl_ctrl
$LN59@ssl_ctrl:
	DB	0
	DB	19					; 00000013H
	DB	1
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	1
	DB	10					; 0000000aH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	11					; 0000000bH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	12					; 0000000cH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	15					; 0000000fH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	npad	1
$LN68@ssl_ctrl:
	DD	$LN45@ssl_ctrl
	DD	$LN46@ssl_ctrl
	DD	$LN48@ssl_ctrl
	DD	$LN2@ssl_ctrl
	DD	$LN2@ssl_ctrl
	DD	$LN47@ssl_ctrl
_ssl_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_puts
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_str$ = 12						; size = 4
_ssl_puts PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 501
	mov	edx, DWORD PTR _str$[esp-4]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	6
$LL3@ssl_puts:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@ssl_puts
	sub	eax, esi
; Line 502
	push	eax
	push	edx
	push	DWORD PTR _bp$[esp+8]
	call	_BIO_write
	add	esp, 12					; 0000000cH
	pop	esi
; Line 504
	ret	0
_ssl_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_read
_TEXT	SEGMENT
_b$ = 8							; size = 4
_ssl$1$ = 12						; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_ssl_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 139
	push	ebx
	push	ebp
; Line 146
	mov	ebp, DWORD PTR _out$[esp+4]
	xor	ebx, ebx
	test	ebp, ebp
	jne	SHORT $LN4@ssl_read
; Line 147
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 219
	ret	0
$LN4@ssl_read:
	push	esi
	push	edi
; Line 148
	mov	edi, DWORD PTR _b$[esp+12]
; Line 151
	push	15					; 0000000fH
	push	edi
	mov	esi, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _ssl$1$[esp+20], eax
	call	_BIO_clear_flags
; Line 165
	push	DWORD PTR _outl$[esp+20]
	push	ebp
	push	DWORD PTR _ssl$1$[esp+28]
	call	_SSL_read
	mov	ebp, eax
; Line 167
	push	ebp
	push	DWORD PTR _ssl$1$[esp+36]
	call	_SSL_get_error
	add	esp, 28					; 0000001cH
	cmp	eax, 8
	ja	$LN16@ssl_read
	jmp	DWORD PTR $LN24@ssl_read[eax*4]
$LN5@ssl_read:
; Line 169
	test	ebp, ebp
	jle	$LN16@ssl_read
; Line 171
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN21@ssl_read
; Line 172
	add	DWORD PTR [esi+12], ebp
; Line 173
	cmp	DWORD PTR [esi+12], eax
	jbe	SHORT $LN21@ssl_read
; Line 176
	push	DWORD PTR _ssl$1$[esp+12]
	inc	DWORD PTR [esi+4]
	mov	DWORD PTR [esi+12], ebx
	call	_SSL_renegotiate
	add	esp, 4
; Line 177
	mov	eax, 1
	jmp	SHORT $LN8@ssl_read
$LN21@ssl_read:
	xor	eax, eax
$LN8@ssl_read:
; Line 180
	cmp	DWORD PTR [esi+16], ebx
	jbe	$LN16@ssl_read
	test	eax, eax
	jne	$LN16@ssl_read
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	push	eax
	call	DWORD PTR __imp___time64
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 184
	mov	ecx, DWORD PTR [esi+20]
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	add	esp, 4
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 184
	add	ecx, DWORD PTR [esi+16]
	cmp	eax, ecx
	jbe	$LN16@ssl_read
; Line 187
	push	DWORD PTR _ssl$1$[esp+12]
	inc	DWORD PTR [esi+4]
	mov	DWORD PTR [esi+20], eax
	call	_SSL_renegotiate
	add	esp, 4
; Line 217
	mov	DWORD PTR [edi+24], ebx
; Line 218
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 219
	ret	0
$LN11@ssl_read:
; Line 193
	push	9
	push	edi
	call	_BIO_set_flags
; Line 207
	add	esp, 8
; Line 217
	mov	DWORD PTR [edi+24], ebx
; Line 218
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 219
	ret	0
$LN12@ssl_read:
; Line 196
	push	10					; 0000000aH
	push	edi
	call	_BIO_set_flags
; Line 207
	add	esp, 8
; Line 217
	mov	DWORD PTR [edi+24], ebx
; Line 218
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 219
	ret	0
$LN13@ssl_read:
; Line 199
	push	12					; 0000000cH
	push	edi
	call	_BIO_set_flags
; Line 207
	add	esp, 8
	mov	ebx, 1
; Line 217
	mov	DWORD PTR [edi+24], ebx
; Line 218
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 219
	ret	0
$LN14@ssl_read:
; Line 203
	push	12					; 0000000cH
	push	edi
	call	_BIO_set_flags
; Line 207
	add	esp, 8
	mov	ebx, 3
; Line 217
	mov	DWORD PTR [edi+24], ebx
; Line 218
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 219
	ret	0
$LN15@ssl_read:
; Line 207
	push	12					; 0000000cH
	push	edi
	call	_BIO_set_flags
; Line 208
	mov	ebx, 2
	add	esp, 8
$LN16@ssl_read:
; Line 217
	mov	DWORD PTR [edi+24], ebx
; Line 218
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 219
	ret	0
$LN24@ssl_read:
	DD	$LN5@ssl_read
	DD	$LN16@ssl_read
	DD	$LN11@ssl_read
	DD	$LN12@ssl_read
	DD	$LN13@ssl_read
	DD	$LN16@ssl_read
	DD	$LN16@ssl_read
	DD	$LN15@ssl_read
	DD	$LN14@ssl_read
_ssl_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_write
_TEXT	SEGMENT
_b$ = 8							; size = 4
_ssl$1$ = 12						; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_ssl_write PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 222
	push	ebx
	push	ebp
; Line 228
	mov	ebp, DWORD PTR _out$[esp+4]
	xor	ebx, ebx
	test	ebp, ebp
	jne	SHORT $LN4@ssl_write
; Line 229
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 285
	ret	0
$LN4@ssl_write:
	push	esi
	push	edi
; Line 230
	mov	edi, DWORD PTR _b$[esp+12]
; Line 233
	push	15					; 0000000fH
	push	edi
	mov	esi, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _ssl$1$[esp+20], eax
	call	_BIO_clear_flags
; Line 238
	push	DWORD PTR _outl$[esp+20]
	push	ebp
	push	DWORD PTR _ssl$1$[esp+28]
	call	_SSL_write
	mov	ebp, eax
; Line 240
	push	ebp
	push	DWORD PTR _ssl$1$[esp+36]
	call	_SSL_get_error
	add	esp, 28					; 0000001cH
	cmp	eax, 7
	ja	$LN15@ssl_write
	jmp	DWORD PTR $LN23@ssl_write[eax*4]
$LN5@ssl_write:
; Line 242
	test	ebp, ebp
	jle	$LN15@ssl_write
; Line 244
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN20@ssl_write
; Line 245
	add	DWORD PTR [esi+12], ebp
; Line 246
	cmp	DWORD PTR [esi+12], eax
	jbe	SHORT $LN20@ssl_write
; Line 249
	push	DWORD PTR _ssl$1$[esp+12]
	inc	DWORD PTR [esi+4]
	mov	DWORD PTR [esi+12], ebx
	call	_SSL_renegotiate
	add	esp, 4
; Line 250
	mov	eax, 1
	jmp	SHORT $LN8@ssl_write
$LN20@ssl_write:
	xor	eax, eax
$LN8@ssl_write:
; Line 253
	cmp	DWORD PTR [esi+16], ebx
	jbe	$LN15@ssl_write
	test	eax, eax
	jne	$LN15@ssl_write
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	push	eax
	call	DWORD PTR __imp___time64
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 257
	mov	ecx, DWORD PTR [esi+20]
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	add	esp, 4
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 257
	add	ecx, DWORD PTR [esi+16]
	cmp	eax, ecx
	jbe	SHORT $LN15@ssl_write
; Line 260
	push	DWORD PTR _ssl$1$[esp+12]
	inc	DWORD PTR [esi+4]
	mov	DWORD PTR [esi+20], eax
	call	_SSL_renegotiate
	add	esp, 4
; Line 283
	mov	DWORD PTR [edi+24], ebx
; Line 284
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 285
	ret	0
$LN11@ssl_write:
; Line 265
	push	10					; 0000000aH
	push	edi
	call	_BIO_set_flags
; Line 275
	add	esp, 8
; Line 283
	mov	DWORD PTR [edi+24], ebx
; Line 284
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 285
	ret	0
$LN12@ssl_write:
; Line 268
	push	9
	push	edi
	call	_BIO_set_flags
; Line 275
	add	esp, 8
; Line 283
	mov	DWORD PTR [edi+24], ebx
; Line 284
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 285
	ret	0
$LN13@ssl_write:
; Line 271
	push	12					; 0000000cH
	push	edi
	call	_BIO_set_flags
; Line 275
	add	esp, 8
	mov	ebx, 1
; Line 283
	mov	DWORD PTR [edi+24], ebx
; Line 284
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 285
	ret	0
$LN14@ssl_write:
; Line 275
	push	12					; 0000000cH
	push	edi
	call	_BIO_set_flags
; Line 276
	mov	ebx, 2
	add	esp, 8
$LN15@ssl_write:
; Line 283
	mov	DWORD PTR [edi+24], ebx
; Line 284
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 285
	ret	0
	npad	2
$LN23@ssl_write:
	DD	$LN5@ssl_write
	DD	$LN15@ssl_write
	DD	$LN12@ssl_write
	DD	$LN11@ssl_write
	DD	$LN13@ssl_write
	DD	$LN15@ssl_write
	DD	$LN15@ssl_write
	DD	$LN14@ssl_write
_ssl_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ssl_shutdown
_TEXT	SEGMENT
_b$ = 8							; size = 4
_BIO_ssl_shutdown PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 583
	mov	eax, DWORD PTR _b$[esp-4]
	test	eax, eax
	je	SHORT $LN3@BIO_ssl_sh
	npad	8
$LL2@BIO_ssl_sh:
; Line 584
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx], 519			; 00000207H
	je	SHORT $LN7@BIO_ssl_sh
; Line 589
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LL2@BIO_ssl_sh
; Line 591
	ret	0
$LN7@BIO_ssl_sh:
; Line 585
	mov	eax, DWORD PTR [eax+32]
; Line 586
	push	DWORD PTR [eax]
	call	_SSL_shutdown
	pop	ecx
$LN3@BIO_ssl_sh:
; Line 591
	ret	0
_BIO_ssl_shutdown ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ssl_copy_session_id
_TEXT	SEGMENT
_t$ = 8							; size = 4
_f$ = 12						; size = 4
_BIO_ssl_copy_session_id PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 567
	push	esi
; Line 568
	push	519					; 00000207H
	push	DWORD PTR _t$[esp+4]
	call	_BIO_find_type
; Line 569
	push	519					; 00000207H
	push	DWORD PTR _f$[esp+12]
	mov	esi, eax
	call	_BIO_find_type
	add	esp, 16					; 00000010H
; Line 570
	test	esi, esi
	je	SHORT $LN3@BIO_ssl_co
	test	eax, eax
	je	SHORT $LN3@BIO_ssl_co
; Line 572
	mov	ecx, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN3@BIO_ssl_co
	mov	eax, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@BIO_ssl_co
; Line 575
	push	eax
	push	ecx
	call	_SSL_copy_session_id
	add	esp, 8
; Line 576
	mov	eax, 1
	pop	esi
; Line 577
	ret	0
$LN3@BIO_ssl_co:
; Line 571
	xor	eax, eax
	pop	esi
; Line 577
	ret	0
_BIO_ssl_copy_session_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_buffer_ssl_connect
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_BIO_new_buffer_ssl_connect PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 507
	push	edi
; Line 511
	call	_BIO_f_buffer
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN2@BIO_new_bu
	pop	edi
; Line 525
	ret	0
$LN2@BIO_new_bu:
	push	esi
; Line 513
	push	DWORD PTR _ctx$[esp+4]
	call	_BIO_new_ssl_connect
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $err$10
; Line 515
	push	esi
	push	edi
	call	_BIO_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@BIO_new_bu
$err$10:
; Line 520
	push	edi
	call	_BIO_free
	add	esp, 4
; Line 521
	test	esi, esi
	je	SHORT $LN6@BIO_new_bu
; Line 522
	push	esi
	call	_BIO_free
	add	esp, 4
$LN6@BIO_new_bu:
; Line 524
	xor	eax, eax
$LN8@BIO_new_bu:
	pop	esi
	pop	edi
; Line 525
	ret	0
_BIO_new_buffer_ssl_connect ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_ssl_connect
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_BIO_new_ssl_connect PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 528
	push	edi
; Line 532
	call	_BIO_s_connect
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN2@BIO_new_ss
	pop	edi
; Line 544
	ret	0
$LN2@BIO_new_ss:
	push	ebx
	push	esi
; Line 551
	push	OFFSET _methods_sslp
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $err$18
; Line 553
	push	DWORD PTR _ctx$[esp+8]
	call	_SSL_new
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $LN9@BIO_new_ss
; Line 554
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 541
	push	edi
	call	_BIO_free
	add	esp, 4
; Line 543
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 544
	ret	0
$LN9@BIO_new_ss:
; Line 558
	push	ebx
	call	_SSL_set_connect_state
; Line 562
	push	ebx
	push	1
	push	109					; 0000006dH
	push	esi
	call	_BIO_ctrl
; Line 536
	push	edi
	push	esi
	call	_BIO_push
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN15@BIO_new_ss
$err$18:
; Line 541
	push	edi
	call	_BIO_free
	add	esp, 4
; Line 543
	xor	eax, eax
$LN15@BIO_new_ss:
; Line 544
	pop	esi
	pop	ebx
	pop	edi
	ret	0
_BIO_new_ssl_connect ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_ssl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_client$ = 12						; size = 4
_BIO_new_ssl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 547
	push	esi
; Line 551
	push	OFFSET _methods_sslp
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN2@BIO_new_ss
	pop	esi
; Line 564
	ret	0
$LN2@BIO_new_ss:
	push	edi
; Line 553
	push	DWORD PTR _ctx$[esp+4]
	call	_SSL_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN3@BIO_new_ss
; Line 554
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 555
	xor	eax, eax
	pop	edi
	pop	esi
; Line 564
	ret	0
$LN3@BIO_new_ss:
; Line 557
	cmp	DWORD PTR _client$[esp+4], 0
; Line 558
	push	edi
	je	SHORT $LN4@BIO_new_ss
	call	_SSL_set_connect_state
	jmp	SHORT $LN10@BIO_new_ss
$LN4@BIO_new_ss:
; Line 560
	call	_SSL_set_accept_state
$LN10@BIO_new_ss:
	add	esp, 4
; Line 562
	push	edi
	push	1
	push	109					; 0000006dH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 563
	mov	eax, esi
	pop	edi
	pop	esi
; Line 564
	ret	0
_BIO_new_ssl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_f_ssl
_TEXT	SEGMENT
_BIO_f_ssl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\bio_ssl.c
; Line 99
	mov	eax, OFFSET _methods_sslp
; Line 100
	ret	0
_BIO_f_ssl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	jmp	DWORD PTR __imp___time64
_time	ENDP
_TEXT	ENDS
END

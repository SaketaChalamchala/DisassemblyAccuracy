; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_ndef.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_BIO_new_NDEF
PUBLIC	??_C@_0BJ@MAMCAFCM@?4?2crypto?2asn1?2bio_ndef?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_asn1_set_prefix:PROC
EXTRN	_BIO_asn1_set_suffix:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_ASN1_item_ndef_i2d:PROC
EXTRN	_BIO_f_asn1:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BJ@MAMCAFCM@?4?2crypto?2asn1?2bio_ndef?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@MAMCAFCM@?4?2crypto?2asn1?2bio_ndef?4c?$AA@ DB '.\crypto\asn1\b'
	DB	'io_ndef.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ndef_suffix_free
_TEXT	SEGMENT
_b$ = 8							; size = 4
_pbuf$ = 12						; size = 4
_plen$ = 16						; size = 4
_parg$ = 20						; size = 4
_ndef_suffix_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_ndef.c
; Line 201
	push	esi
; Line 185
	mov	esi, DWORD PTR _parg$[esp]
	test	esi, esi
	je	SHORT $LN8@ndef_suffi
	push	edi
; Line 188
	mov	edi, DWORD PTR [esi]
; Line 190
	mov	eax, DWORD PTR [edi+20]
	test	eax, eax
	je	SHORT $LN6@ndef_suffi
; Line 191
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN6@ndef_suffi:
; Line 194
	mov	eax, DWORD PTR _pbuf$[esp+4]
	mov	DWORD PTR [edi+20], 0
	mov	DWORD PTR [eax], 0
; Line 195
	mov	eax, DWORD PTR _plen$[esp+4]
	mov	DWORD PTR [eax], 0
; Line 205
	push	DWORD PTR [esi]
	call	_CRYPTO_free
	add	esp, 4
; Line 206
	mov	DWORD PTR [esi], 0
; Line 207
	mov	eax, 1
	pop	edi
	pop	esi
; Line 208
	ret	0
$LN8@ndef_suffi:
; Line 204
	xor	eax, eax
	pop	esi
; Line 208
	ret	0
_ndef_suffix_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ndef_suffix
_TEXT	SEGMENT
_sarg$ = -12						; size = 12
_b$ = 8							; size = 4
_pbuf$ = 12						; size = 4
_plen$ = 16						; size = 4
_p$ = 20						; size = 4
_parg$ = 20						; size = 4
_ndef_suffix PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_ndef.c
; Line 211
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	esi
; Line 218
	mov	esi, DWORD PTR _parg$[esp+12]
	test	esi, esi
	jne	SHORT $LN2@ndef_suffi
$LN8@ndef_suffi:
; Line 219
	xor	eax, eax
	pop	esi
; Line 248
	add	esp, 12					; 0000000cH
	ret	0
$LN2@ndef_suffi:
; Line 221
	mov	esi, DWORD PTR [esi]
; Line 223
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+16]
; Line 226
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _sarg$[esp+20], eax
; Line 227
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR _sarg$[esp+16], eax
; Line 228
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR _sarg$[esp+24], eax
; Line 230
	lea	eax, DWORD PTR _sarg$[esp+16]
	push	eax
	push	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ecx+16]
	push	esi
	push	11					; 0000000bH
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN8@ndef_suffi
; Line 233
	push	DWORD PTR [esi+4]
	push	0
	push	DWORD PTR [esi]
	call	_ASN1_item_ndef_i2d
; Line 234
	push	234					; 000000eaH
	push	OFFSET ??_C@_0BJ@MAMCAFCM@?4?2crypto?2asn1?2bio_ndef?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _p$[esp+12], eax
; Line 235
	test	eax, eax
	je	SHORT $LN8@ndef_suffi
; Line 239
	push	edi
	mov	edi, DWORD PTR _pbuf$[esp+16]
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR _p$[esp+16]
	mov	DWORD PTR [edi], eax
; Line 240
	lea	eax, DWORD PTR _p$[esp+16]
	push	DWORD PTR [esi+4]
	push	eax
	push	DWORD PTR [esi]
	call	_ASN1_item_ndef_i2d
; Line 242
	mov	ecx, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	mov	edx, eax
	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	jne	SHORT $LN5@ndef_suffi
; Line 243
	pop	edi
	xor	eax, eax
	pop	esi
; Line 248
	add	esp, 12					; 0000000cH
	ret	0
$LN5@ndef_suffi:
; Line 244
	mov	DWORD PTR [edi], ecx
; Line 245
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [esi+20]
	pop	edi
	pop	esi
	sub	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _plen$[esp+8]
	add	ecx, edx
	mov	DWORD PTR [eax], ecx
; Line 247
	mov	eax, 1
; Line 248
	add	esp, 12					; 0000000cH
	ret	0
_ndef_suffix ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ndef_prefix_free
_TEXT	SEGMENT
_b$ = 8							; size = 4
_pbuf$ = 12						; size = 4
_plen$ = 16						; size = 4
_parg$ = 20						; size = 4
_ndef_prefix_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_ndef.c
; Line 185
	mov	eax, DWORD PTR _parg$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@ndef_prefi
; Line 197
	ret	0
$LN2@ndef_prefi:
	push	esi
; Line 188
	mov	esi, DWORD PTR [eax]
; Line 190
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN3@ndef_prefi
; Line 191
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@ndef_prefi:
; Line 194
	mov	eax, DWORD PTR _pbuf$[esp]
	mov	DWORD PTR [esi+20], 0
	pop	esi
	mov	DWORD PTR [eax], 0
; Line 195
	mov	eax, DWORD PTR _plen$[esp-4]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, 1
; Line 197
	ret	0
_ndef_prefix_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ndef_prefix
_TEXT	SEGMENT
_b$ = 8							; size = 4
_pbuf$ = 12						; size = 4
_plen$ = 16						; size = 4
_p$ = 20						; size = 4
_parg$ = 20						; size = 4
_ndef_prefix PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_ndef.c
; Line 158
	mov	eax, DWORD PTR _parg$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@ndef_prefi
; Line 178
	ret	0
$LN2@ndef_prefi:
	push	esi
; Line 161
	mov	esi, DWORD PTR [eax]
; Line 163
	push	DWORD PTR [esi+4]
	push	0
	push	DWORD PTR [esi]
	call	_ASN1_item_ndef_i2d
; Line 164
	push	164					; 000000a4H
	push	OFFSET ??_C@_0BJ@MAMCAFCM@?4?2crypto?2asn1?2bio_ndef?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _p$[esp], eax
; Line 165
	test	eax, eax
	jne	SHORT $LN3@ndef_prefi
	pop	esi
; Line 178
	ret	0
$LN3@ndef_prefi:
	push	edi
; Line 169
	mov	edi, DWORD PTR _pbuf$[esp+4]
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR _p$[esp+4]
	mov	DWORD PTR [edi], eax
; Line 170
	lea	eax, DWORD PTR _p$[esp+4]
	push	DWORD PTR [esi+4]
	push	eax
	push	DWORD PTR [esi]
	call	_ASN1_item_ndef_i2d
; Line 172
	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@ndef_prefi
; Line 173
	pop	edi
	xor	eax, eax
	pop	esi
; Line 178
	ret	0
$LN4@ndef_prefi:
; Line 175
	mov	eax, DWORD PTR _plen$[esp+4]
	sub	ecx, DWORD PTR [edi]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 177
	mov	eax, 1
; Line 178
	ret	0
_ndef_prefix ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_NDEF
_TEXT	SEGMENT
_sarg$ = -12						; size = 12
_out$ = 8						; size = 4
_val$ = 12						; size = 4
_out$1$ = 16						; size = 4
_it$ = 16						; size = 4
_BIO_new_NDEF PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_ndef.c
; Line 99
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
; Line 102
	mov	ebp, DWORD PTR _it$[esp+16]
	mov	ebx, DWORD PTR [ebp+16]
; Line 105
	test	ebx, ebx
	je	$LN3@BIO_new_ND
	cmp	DWORD PTR [ebx+16], 0
	je	$LN3@BIO_new_ND
; Line 109
	push	esi
	push	edi
	push	109					; 0000006dH
	push	OFFSET ??_C@_0BJ@MAMCAFCM@?4?2crypto?2asn1?2bio_ndef?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	mov	esi, eax
; Line 110
	call	_BIO_f_asn1
	push	eax
	call	_BIO_new
; Line 114
	push	DWORD PTR _out$[esp+40]
	mov	edi, eax
	push	edi
	call	_BIO_push
	add	esp, 24					; 00000018H
	mov	DWORD PTR _out$1$[esp+24], eax
; Line 116
	test	esi, esi
	je	$err$13
	test	edi, edi
	je	$LN7@BIO_new_ND
	test	eax, eax
	je	$err$13
; Line 119
	push	OFFSET _ndef_prefix_free
	push	OFFSET _ndef_prefix
	push	edi
	call	_BIO_asn1_set_prefix
; Line 120
	push	OFFSET _ndef_suffix_free
	push	OFFSET _ndef_suffix
	push	edi
	call	_BIO_asn1_set_suffix
; Line 127
	mov	eax, DWORD PTR _out$1$[esp+48]
	mov	DWORD PTR _sarg$[esp+52], eax
; Line 131
	lea	eax, DWORD PTR _sarg$[esp+52]
	push	eax
	push	ebp
	lea	eax, DWORD PTR _val$[esp+56]
	mov	DWORD PTR _sarg$[esp+64], 0
	push	eax
	mov	DWORD PTR _sarg$[esp+72], 0
	mov	eax, DWORD PTR [ebx+16]
	push	10					; 0000000aH
	call	eax
	add	esp, 40					; 00000028H
	test	eax, eax
	jle	SHORT $err$13
; Line 134
	mov	eax, DWORD PTR _val$[esp+24]
	mov	DWORD PTR [esi], eax
; Line 140
	push	esi
	mov	DWORD PTR [esi+4], ebp
	mov	eax, DWORD PTR _sarg$[esp+36]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR _sarg$[esp+40]
	push	0
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR _out$1$[esp+32]
	push	153					; 00000099H
	push	edi
	mov	DWORD PTR [esi+12], eax
	call	_BIO_ctrl
; Line 142
	mov	eax, DWORD PTR _sarg$[esp+48]
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 150
	add	esp, 12					; 0000000cH
	ret	0
$err$13:
; Line 145
	test	edi, edi
	je	SHORT $LN7@BIO_new_ND
; Line 146
	push	edi
	call	_BIO_free
	add	esp, 4
$LN7@BIO_new_ND:
; Line 147
	test	esi, esi
	je	SHORT $LN8@BIO_new_ND
; Line 148
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN8@BIO_new_ND:
; Line 149
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 150
	add	esp, 12					; 0000000cH
	ret	0
$LN3@BIO_new_ND:
; Line 106
	push	106					; 0000006aH
	push	OFFSET ??_C@_0BJ@MAMCAFCM@?4?2crypto?2asn1?2bio_ndef?4c?$AA@
	push	202					; 000000caH
	push	208					; 000000d0H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 107
	xor	eax, eax
	pop	ebp
	pop	ebx
; Line 150
	add	esp, 12					; 0000000cH
	ret	0
_BIO_new_NDEF ENDP
_TEXT	ENDS
END
